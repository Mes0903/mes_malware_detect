
80ffb2dfa5a712742f4ddba40b209084d12206e73bd7ea39a222ca4aecbf80f5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [esi+0x7ca20adc],ebp
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x46],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    DWORD PTR [ecx],eax
  402f43:	repz mov al,ds:0xec577ff
  402f49:	sbb    esi,edx
  402f4b:	dec    ecx
  402f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f4d:	mov    ecx,0x22fe2ffb
  402f52:	ss xor eax,0x21470427
  402f58:	aas    
  402f59:	and    eax,DWORD PTR fs:[edx-0x58]
  402f5d:	outs   dx,DWORD PTR ds:[esi]
  402f5e:	sbb    al,BYTE PTR [eax+0x6b9d0122]
  402f64:	das    
  402f65:	sub    al,0x27
  402f67:	dec    ecx
  402f68:	arpl   WORD PTR [ebp+0x5d],di
  402f6b:	les    esi,FWORD PTR [edx+0x25dd0486]
  402f71:	dec    ebp
  402f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f73:	js     0x402f7d
  402f75:	mov    eax,ds:0x1dd16754
  402f7a:	aas    
  402f7b:	gs dec ecx
  402f7d:	mov    dl,0x47
  402f7f:	loope  0x402f9e
  402f81:	add    BYTE PTR [edx-0xa391e6a],ch
  402f87:	mov    al,0xa6
  402f89:	ret    0x9a55
  402f8c:	arpl   WORD PTR [ecx+0x7e5c955a],dx
  402f92:	pop    edx
  402f93:	jno    0x402fa2
  402f95:	pop    edx
  402f96:	cmp    bh,BYTE PTR [esi]
  402f98:	cli    
  402f99:	(bad)  
  402f9a:	sbb    edx,DWORD PTR [ebx-0x42]
  402f9d:	or     bh,BYTE PTR [edx+ebx*2-0x715557a]
  402fa4:	ja     0x402f37
  402fa6:	mov    ebp,0xb245b49
  402fab:	adc    bl,BYTE PTR [eax-0x7c]
  402fae:	aam    0xf8
  402fb0:	lea    ebp,[edx+edi*8+0x4a4a009b]
  402fb7:	jno    0x402f3a
  402fb9:	sbb    eax,0xaa063995
  402fbe:	push   eax
  402fbf:	mov    edi,0xb8b5f0da
  402fc4:	adc    DWORD PTR [edi-0x22],esp
  402fc7:	cli    
  402fc8:	mov    ah,dl
  402fca:	imul   esi,DWORD PTR ds:0x511b335d,0xfe7999a5
  402fd4:	lds    esp,FWORD PTR [edx]
  402fd6:	gs je  0x403042
  402fd9:	push   esi
  402fda:	xchg   edx,eax
  402fdb:	adc    ah,BYTE PTR [edi+0x3fe77258]
  402fe1:	xor    eax,0x4d410918
  402fe6:	inc    ah
  402fe8:	mov    WORD PTR [eax+0x4981b882],es
  402fee:	dec    DWORD PTR [esi]
  402ff0:	pop    ss
  402ff1:	mov    ?,WORD PTR [ebx-0x51]
  402ff4:	add    ebx,DWORD PTR [ecx*2+0x52dd3a9e]
  402ffb:	in     eax,0x28
  402ffd:	dec    ebx
  402ffe:	inc    ebx
  402fff:	pop    esp
  403000:	lods   al,BYTE PTR ds:[esi]
  403001:	cmp    BYTE PTR [esi+ebp*2-0x5a],dl
  403005:	mov    edi,0x76751686
  40300a:	neg    DWORD PTR [ebx-0x64]
  40300d:	ja     0x403041
  40300f:	sti    
  403010:	pop    ss
  403011:	xchg   BYTE PTR [edx+0x1540446e],bl
  403017:	push   esi
  403018:	cwde   
  403019:	xchg   DWORD PTR es:[eax],edi
  40301c:	dec    edx
  40301d:	fstp   QWORD PTR [ecx]
  40301f:	or     eax,0xb777db16
  403024:	add    al,dh
  403026:	je     0x403016
  403028:	jl     0x40305f
  40302a:	ds loope 0x402fd8
  40302d:	sbb    BYTE PTR [edx-0x4bd2b3e7],ah
  403033:	inc    esi
  403034:	sbb    eax,0xd6175272
  403039:	hlt    
  40303a:	push   esi
  40303b:	in     al,dx
  40303c:	frstor [edi+edi*8+0x3b01e0a3]
  403043:	ja     0x403038
  403045:	xchg   esi,eax
  403046:	(bad)  
  403047:	adc    DWORD PTR [ecx],esp
  403049:	and    esp,DWORD PTR [edx-0x18b23bb9]
  40304f:	pop    ds
  403050:	pop    ebx
  403051:	repnz mov bh,0x68
  403054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403055:	xchg   edx,eax
  403056:	sbb    DWORD PTR ds:0xb0a35e3b,0x19aca734
  403060:	pop    es
  403061:	dec    esi
  403062:	sub    eax,0xbdc049ec
  403067:	push   es
  403068:	pusha  
  403069:	xchg   DWORD PTR [ebp+0x4a],eax
  40306c:	jle    0x403015
  40306e:	lock daa 
  403070:	call   0xfc11:0x29af32c6
  403077:	sti    
  403078:	mov    ds:0x56754430,eax
  40307d:	daa    
  40307e:	cmp    al,0x5
  403080:	cmp    esi,DWORD PTR ss:[edi]
  403083:	test   eax,0xf2a9b1ad
  403088:	adc    DWORD PTR [edi-0x70],esi
  40308b:	xor    eax,0x64be674
  403090:	jnp    0x40310b
  403092:	cmp    eax,edi
  403094:	sbb    al,0xf8
  403096:	cmc    
  403097:	dec    eax
  403098:	into   
  403099:	shl    edx,1
  40309b:	push   cs
  40309c:	push   cs
  40309d:	mov    edx,0xebec726c
  4030a2:	jne    0x40307d
  4030a4:	sub    BYTE PTR [esi],ch
  4030a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a7:	xor    BYTE PTR [ebx-0x40],0x74
  4030ab:	js     0x40307f
  4030ad:	(bad)  
  4030ae:	int3   
  4030af:	int3   
  4030b0:	aas    
  4030b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030b2:	inc    eax
  4030b3:	sbb    eax,0xcfe433ef
  4030b8:	inc    eax
  4030b9:	mov    ebx,0x8b431a1f
  4030be:	loopne 0x4030fa
  4030c0:	or     BYTE PTR gs:[edi],dh
  4030c3:	cmp    esi,0x4cf11d38
  4030c9:	pop    ebx
  4030ca:	lea    ebx,[eax+edi*8+0x40da1071]
  4030d1:	add    bl,ah
  4030d3:	daa    
  4030d4:	cmc    
  4030d5:	ret    
  4030d6:	sbb    DWORD PTR [ebx],esp
  4030d8:	jge    0x40310e
  4030da:	cwde   
  4030db:	es pop ebp
  4030dd:	mov    ch,BYTE PTR ds:0x98f7d42d
  4030e3:	and    ah,ch
  4030e5:	cmp    ebp,ecx
  4030e7:	lods   al,BYTE PTR ds:[esi]
  4030e8:	lds    ecx,FWORD PTR [eax-0x1b69a4e8]
  4030ee:	add    ch,0xf4
  4030f1:	stc    
  4030f2:	(bad)  [edx-0x58]
  4030f5:	aam    0x27
  4030f7:	cmp    DWORD PTR [ebp+eax*8+0x0],ebx
  4030fb:	or     edi,ebp
  4030fd:	xor    ah,BYTE PTR [edx-0x5a]
  403100:	(bad)  
  403101:	test   al,0xf9
  403103:	(bad)  
  403104:	push   0xffffffa1
  403106:	fdivp  st(4),st
  403108:	in     eax,0xc6
  40310a:	push   eax
  40310b:	ficom  WORD PTR [edi+0x3]
  40310e:	mov    al,0xec
  403110:	imul   eax,edx,0xffffffe0
  403113:	add    al,0x0
  403115:	cmp    DWORD PTR [eax],ebx
  403117:	sar    DWORD PTR [ebx-0x25],0x34
  40311b:	jmp    0x40e9b00a
  403120:	mov    dl,ah
  403122:	sbb    dh,ch
  403124:	and    ch,BYTE PTR [ebx-0x12]
  403127:	cmp    eax,0x45523143
  40312c:	adc    al,0x9c
  40312e:	xchg   esp,eax
  40312f:	jno    0x4031a1
  403131:	and    edx,DWORD PTR [ecx+0x7d09b8b0]
  403137:	adc    BYTE PTR [edx-0x3b0b1601],dl
  40313d:	(bad)  
  40313e:	jns    0x40318a
  403140:	call   0xb9a14f24
  403145:	imul   esi,ecx,0x1790c306
  40314b:	jmp    0x4d41:0x3f5c764f
  403152:	adc    ebx,ecx
  403154:	call   0x70f8f2a2
  403159:	ficomp DWORD PTR [ecx+0x35]
  40315c:	fwait
  40315d:	dec    DWORD PTR [esi]
  40315f:	adc    edi,DWORD PTR [edi-0x52]
  403162:	and    dl,bh
  403164:	shr    DWORD PTR [edx+0x16],0xb9
  403168:	ffree  st(4)
  40316a:	loopne 0x40315e
  40316c:	xor    bh,BYTE PTR [ebx-0x7d]
  40316f:	mov    ebp,0x3d16b45c
  403174:	das    
  403175:	es in  al,dx
  403177:	or     DWORD PTR [eax-0x75081c78],esi
  40317d:	pop    edx
  40317e:	dec    ebx
  40317f:	sub    al,0xf2
  403181:	in     al,dx
  403182:	jle    0x4031bb
  403184:	pop    ebp
  403185:	sbb    eax,0x817698f4
  40318a:	inc    ecx
  40318b:	lahf   
  40318c:	lock sub al,0xd8
  40318f:	iret   
  403190:	lock stos BYTE PTR es:[edi],al
  403192:	fisub  DWORD PTR fs:[edx-0x688ffe79]
  403199:	cmp    ebp,DWORD PTR ss:[eax]
  40319c:	and    esi,DWORD PTR [ecx+0x45]
  40319f:	adc    BYTE PTR [edx-0x6dc7b151],ch
  4031a5:	xchg   ecx,eax
  4031a6:	ja     0x4031c5
  4031a8:	xor    dh,BYTE PTR ds:0xf7bbe50a
  4031ae:	inc    ecx
  4031af:	lock leave 
  4031b1:	jecxz  0x403193
  4031b3:	loope  0x403181
  4031b5:	daa    
  4031b6:	std    
  4031b7:	stc    
  4031b8:	mov    ds,WORD PTR [ebp-0x2800891d]
  4031be:	mov    bl,0x3c
  4031c0:	outs   dx,DWORD PTR ds:[esi]
  4031c1:	in     eax,dx
  4031c2:	idiv   ecx
  4031c4:	adc    ah,dl
  4031c6:	stos   BYTE PTR es:[edi],al
  4031c7:	ds std 
  4031c9:	or     eax,0x6eae8e83
  4031ce:	mov    edx,0x39698b3
  4031d3:	push   ds
  4031d4:	push   es
  4031d5:	pop    esp
  4031d6:	out    0x19,eax
  4031d8:	jmp    0x51f07140
  4031dd:	inc    edi
  4031de:	leave  
  4031df:	out    dx,al
  4031e0:	pushf  
  4031e1:	jo     0x403223
  4031e3:	sub    eax,0x99e2749e
  4031e8:	jb     0x403198
  4031ea:	loop   0x40320b
  4031ec:	out    0x62,eax
  4031ee:	out    dx,eax
  4031ef:	dec    edx
  4031f0:	iret   
  4031f1:	jge    0x403251
  4031f3:	sub    al,0x9a
  4031f5:	lahf   
  4031f6:	push   DWORD PTR [eax+0x75527db1]
  4031fc:	mov    esi,0xb08d0622
  403201:	mov    edi,0x5bc6618e
  403206:	lock push edi
  403208:	mov    ecx,DWORD PTR [ebx+edi*2+0x8]
  40320c:	xlat   BYTE PTR ds:[ebx]
  40320d:	gs or  eax,0x8bf1b674
  403213:	and    al,dl
  403215:	iret   
  403216:	mov    DWORD PTR [edi-0x2fd8b29c],ebx
  40321c:	push   ss
  40321d:	xor    al,0x6a
  40321f:	add    cl,BYTE PTR [ebx]
  403221:	mov    bh,0x55
  403223:	sbb    DWORD PTR [ebx],0x30
  403226:	cwde   
  403227:	repnz aad 0x8f
  40322a:	cmp    eax,0x1267bced
  40322f:	pusha  
  403230:	addr16 and edx,0xffffff9a
  403234:	les    esp,FWORD PTR [ebx]
  403236:	pop    eax
  403237:	push   edi
  403238:	xchg   edi,eax
  403239:	(bad)  
  40323a:	out    dx,al
  40323b:	add    al,0xe9
  40323d:	jg     0x403207
  40323f:	and    ebp,DWORD PTR [esp+edi*4-0x31154775]
  403246:	inc    ecx
  403247:	mov    ebp,0xc7f9a996
  40324c:	call   0xd9f38cc8
  403251:	adc    al,0xb
  403253:	dec    ebp
  403254:	cmp    DWORD PTR [edi+ecx*2],esi
  403257:	sar    BYTE PTR [esi-0x721f43e5],1
  40325d:	ret    
  40325e:	test   DWORD PTR [edx],ebp
  403260:	fsubp  st(3),st
  403262:	mov    ss,edx
  403264:	push   ebx
  403265:	jno    0x403295
  403267:	into   
  403268:	ret    
  403269:	(bad)  
  40326a:	xchg   ecx,eax
  40326b:	call   0xb1c8:0x9392928f
  403272:	(bad)  
  403273:	mov    al,ds:0xafae26bb
  403278:	fs push edi
  40327a:	push   ebx
  40327b:	mov    dl,0x82
  40327d:	and    edx,ecx
  40327f:	push   edi
  403280:	icebp  
  403281:	mov    esp,0xecddff53
  403286:	jle    0x40322b
  403288:	fbstp  TBYTE PTR [eax+ecx*8]
  40328b:	pop    esp
  40328c:	stc    
  40328d:	mov    eax,ds:0x534cb778
  403292:	pop    edx
  403293:	jne    0x40322a
  403295:	add    eax,0x8ac19203
  40329a:	or     edx,esi
  40329c:	shl    DWORD PTR [edx+eax*8-0x2a],cl
  4032a0:	ror    DWORD PTR [ecx],0xd3
  4032a3:	loop   0x4032b9
  4032a5:	push   esp
  4032a6:	mov    bl,0xf7
  4032a8:	aam    0x21
  4032aa:	jle    0x403283
  4032ac:	add    eax,0xaf1a0adf
  4032b1:	in     eax,dx
  4032b2:	add    eax,0x62a3dd50
  4032b7:	inc    edi
  4032b8:	xlat   BYTE PTR ds:[ebx]
  4032b9:	int3   
  4032ba:	outs   dx,BYTE PTR ds:[esi]
  4032bb:	jns    0x403262
  4032bd:	pushf  
  4032be:	xor    edi,DWORD PTR [eax-0x65389de0]
  4032c4:	mov    esi,0xf533d745
  4032c9:	mov    cl,0x73
  4032cb:	xchg   esp,eax
  4032cc:	stc    
  4032cd:	mov    ah,0xac
  4032cf:	or     al,0xe1
  4032d1:	test   DWORD PTR [edx+ecx*2],ebx
  4032d4:	jmp    0x403270
  4032d6:	lea    ecx,[ebx*1+0x1375a2ec]
  4032dd:	and    BYTE PTR [edx+0x794af800],ah
  4032e3:	pop    ebp
  4032e4:	rol    BYTE PTR [esi+0x2fdb6624],cl
  4032ea:	fcmovnu st,st(0)
  4032ec:	add    bh,ah
  4032ee:	shl    BYTE PTR [ebx+0x3b],cl
  4032f1:	pop    ds
  4032f2:	and    al,0xd6
  4032f4:	and    al,0xbd
  4032f6:	sub    eax,0xf9a38f48
  4032fb:	lahf   
  4032fc:	mov    dl,0x78
  4032fe:	jg     0x40335e
  403300:	popf   
  403301:	aam    0x16
  403303:	sub    BYTE PTR ds:0x6edc5581,dl
  403309:	pop    eax
  40330a:	repz xlat BYTE PTR ds:[ebx]
  40330c:	call   0xa9af0b83
  403311:	add    al,0xd3
  403313:	fwait
  403314:	sub    ch,bh
  403316:	sar    BYTE PTR [edi-0x21],1
  403319:	or     eax,0xe3054adf
  40331e:	pop    esp
  40331f:	push   edi
  403320:	ins    DWORD PTR es:[edi],dx
  403321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403322:	push   esp
  403323:	mov    ds:0xb91ff549,eax
  403328:	pop    esi
  403329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40332a:	push   ss
  40332b:	cmp    al,BYTE PTR [ebp+0x28]
  40332e:	jno    0x403321
  403330:	aas    
  403331:	imul   esp,esi,0xdb46d376
  403337:	das    
  403338:	cmp    cl,bh
  40333a:	es scas eax,DWORD PTR es:[edi]
  40333c:	std    
  40333d:	popf   
  40333e:	jmp    0xfe5cc87e
  403343:	in     eax,0x2d
  403345:	movd   mm3,DWORD PTR [esi]
  403348:	shl    BYTE PTR [edi-0x34563fec],1
  40334e:	mov    edx,0x7ec6ac37
  403353:	and    eax,DWORD PTR [esi]
  403355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403356:	das    
  403357:	pusha  
  403358:	mov    bh,0x79
  40335a:	sub    al,0xe2
  40335c:	fild   WORD PTR [ebp-0x439c0d08]
  403362:	mov    edi,0x3811b9d8
  403367:	lock nop
  403369:	outs   dx,DWORD PTR ds:[esi]
  40336a:	data16 in al,dx
  40336c:	into   
  40336d:	dec    ebx
  40336e:	aad    0x95
  403370:	ror    DWORD PTR [eax],cl
  403372:	ins    DWORD PTR es:[edi],dx
  403373:	lods   al,BYTE PTR ds:[esi]
  403374:	push   0xc42b3947
  403379:	jmp    0x8f9c:0xc446bcdd
  403380:	xor    al,0x35
  403382:	mov    ds:0xa7acd0f4,eax
  403387:	dec    edi
  403388:	lock dec ebp
  40338a:	xor    cl,ah
  40338c:	out    0x2,al
  40338e:	and    bh,BYTE PTR [edx]
  403390:	retf   0x166d
  403393:	(bad)  
  403395:	inc    edi
  403396:	mov    BYTE PTR [ecx],dh
  403398:	inc    ecx
  403399:	fcom   QWORD PTR [ecx+esi*1-0x13]
  40339d:	xor    DWORD PTR [eax],0x33157041
  4033a3:	and    DWORD PTR [edx-0x22],edx
  4033a6:	ja     0x4033c5
  4033a8:	push   eax
  4033a9:	cmc    
  4033aa:	retf   0xcef8
  4033ad:	dec    ebx
  4033ae:	jl     0x40337b
  4033b0:	inc    eax
  4033b1:	mov    cl,0xc
  4033b3:	jae    0x4033a9
  4033b5:	out    dx,eax
  4033b6:	mov    DWORD PTR [ebx-0x1],eax
  4033b9:	inc    ebp
  4033ba:	cwde   
  4033bb:	sbb    BYTE PTR [ecx],ah
  4033bd:	adc    al,0x23
  4033bf:	xchg   BYTE PTR [edx-0x60],al
  4033c2:	inc    esi
  4033c3:	lods   eax,DWORD PTR ds:[esi]
  4033c4:	jns    0x403414
  4033c6:	pop    edi
  4033c7:	jl     0x403401
  4033c9:	jp     0x4033c0
  4033cb:	cmc    
  4033cc:	addr16 push edi
  4033ce:	and    al,0x12
  4033d0:	mov    dl,0xba
  4033d2:	cmp    DWORD PTR es:[ebp+0x7c11dbfe],ebx
  4033d9:	xor    DWORD PTR [eax+0x6e],ebx
  4033dc:	xchg   edi,eax
  4033dd:	enter  0x551f,0x7f
  4033e1:	xchg   bx,ax
  4033e3:	repnz pop ebx
  4033e5:	call   0xe640cffd
  4033ea:	inc    eax
  4033eb:	shl    DWORD PTR [eax+0x1ac52a5],1
  4033f1:	mov    esp,0xf01252cf
  4033f6:	or     DWORD PTR [edi-0xa6555c1],esi
  4033fc:	push   cs
  4033fd:	pop    edx
  4033fe:	ja     0x403461
  403400:	pop    ebx
  403401:	push   ss
  403402:	(bad)
  403405:	or     al,BYTE PTR ds:0xe8649b9d
  40340b:	pop    es
  40340c:	and    esi,esp
  40340e:	adc    DWORD PTR [ebp-0x5f],esi
  403411:	jb     0x4033c0
  403413:	pusha  
  403414:	cli    
  403415:	add    al,0xe8
  403417:	xor    eax,0x89c3713
  40341c:	out    dx,al
  40341d:	sub    esp,DWORD PTR [ebx+ecx*1-0x662c60e7]
  403424:	mov    ds:0xc102e3ed,eax
  403429:	dec    ebx
  40342a:	lods   al,BYTE PTR ds:[esi]
  40342b:	(bad)  
  40342d:	mov    cl,0xd2
  40342f:	jbe    0x4033b3
  403431:	add    dl,ch
  403433:	mulps  xmm1,xmm5
  403436:	sub    DWORD PTR [esi+ebx*8-0x7d1825e1],ecx
  40343d:	repnz retf 
  40343f:	inc    eax
  403440:	(bad)  
  403441:	aam    0x9a
  403443:	pop    eax
  403444:	xchg   ebx,eax
  403445:	fmul   st,st(2)
  403447:	outs   dx,DWORD PTR ds:[esi]
  403448:	dec    ebx
  403449:	mul    DWORD PTR [edx]
  40344b:	adc    eax,0x6c604284
  403450:	jg     0x4034c8
  403452:	les    ecx,FWORD PTR [eax*1+0x16436032]
  403459:	sbb    ecx,ebx
  40345b:	dec    esp
  40345c:	mov    ah,0x33
  40345e:	mov    ebp,0x21d4f10e
  403463:	and    al,0x61
  403465:	or     bl,BYTE PTR [edx]
  403467:	ret    0x1646
  40346a:	aam    0xc1
  40346c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40346d:	jp     0x4034b9
  40346f:	dec    esp
  403470:	int    0x6c
  403472:	push   es
  403473:	cs cmp eax,esi
  403476:	push   edx
  403477:	xor    ecx,DWORD PTR [ecx-0x49a17cbe]
  40347d:	and    bl,BYTE PTR [eax-0x46]
  403480:	mov    ch,0xfc
  403482:	push   esi
  403483:	es cmp eax,0xcfe76044
  403489:	push   eax
  40348a:	popa   
  40348b:	mov    bh,0xeb
  40348d:	adc    BYTE PTR [ecx],bh
  40348f:	and    eax,0x5c92010
  403494:	popf   
  403495:	push   0x5a
  403497:	mov    cl,BYTE PTR [eax+0x73]
  40349a:	add    ebp,DWORD PTR [edi+0x51938675]
  4034a0:	add    eax,0x72d4c0d
  4034a5:	loope  0x40351c
  4034a7:	pop    ss
  4034a8:	adc    eax,0x526666ba
  4034ae:	and    DWORD PTR [eax],ebp
  4034b0:	cmp    eax,0xcd7b3fb1
  4034b5:	push   es
  4034b6:	test   eax,0xd2663d03
  4034bb:	dec    ebx
  4034bc:	adc    ebx,ebp
  4034be:	pop    esi
  4034bf:	pop    ebx
  4034c0:	(bad)  
  4034c1:	dec    ebx
  4034c2:	pop    edi
  4034c3:	add    BYTE PTR [eax],ch
  4034c5:	jecxz  0x403476
  4034c7:	fcomp  st(7)
  4034c9:	add    edi,DWORD PTR [ebx+0x5c5b7af4]
  4034cf:	ja     0x4034fc
  4034d1:	in     al,0x1f
  4034d3:	arpl   WORD PTR ds:0xce10a1c6,ax
  4034d9:	xchg   esi,eax
  4034da:	jb     0x4034d9
  4034dc:	add    al,0x30
  4034de:	push   edi
  4034df:	loop   0x403470
  4034e1:	jge    0x4034b3
  4034e3:	add    DWORD PTR [eax+0x2dec54a5],esi
  4034e9:	adc    bl,BYTE PTR [ebx+0x45]
  4034ec:	ds xchg edi,eax
  4034ee:	clc    
  4034ef:	jb     0x40347e
  4034f1:	jmp    0xf0be75a
  4034f6:	rcl    ecx,1
  4034f8:	leave  
  4034f9:	repz icebp 
  4034fb:	in     al,0xb7
  4034fd:	pop    esi
  4034fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ff:	dec    ecx
  403500:	call   0xae65bbe1
  403505:	loop   0x40356d
  403507:	leave  
  403508:	fld    QWORD PTR [ebp+0x5a]
  40350b:	fcomp  DWORD PTR ds:0xdde7176b
  403511:	outs   dx,DWORD PTR ds:[esi]
  403512:	mov    dh,0xbb
  403514:	fwait
  403515:	mov    al,ds:0x41827db7
  40351a:	sbb    dl,BYTE PTR [esp+edx*4]
  40351d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351e:	xchg   edi,eax
  40351f:	in     eax,dx
  403520:	mov    ds:0x4517eceb,eax
  403525:	xchg   ecx,eax
  403526:	xchg   ebp,eax
  403527:	rol    DWORD PTR [eax],cl
  403529:	enter  0xefc1,0xe4
  40352d:	shr    BYTE PTR [eax],cl
  40352f:	mov    dh,0xdd
  403531:	outs   dx,BYTE PTR ds:[esi]
  403532:	in     eax,0x40
  403534:	loopne 0x403572
  403536:	bound  ebp,QWORD PTR [edi+eax*1+0x7]
  40353a:	dec    esp
  40353b:	pop    ebp
  40353c:	dec    edx
  40353d:	pop    ecx
  40353e:	in     eax,dx
  40353f:	fnsave [eax]
  403541:	mov    WORD PTR [eax-0x44e21f4f],cs
  403547:	sbb    BYTE PTR [eax+edi*1+0x22ad0be8],dh
  40354e:	das    
  40354f:	or     DWORD PTR [esi],0xffffff99
  403552:	dec    eax
  403553:	icebp  
  403554:	sbb    al,0x6f
  403556:	push   0x6374133c
  40355b:	mul    BYTE PTR [edi]
  40355d:	cmp    al,0x85
  40355f:	fimul  WORD PTR [esi-0x48]
  403562:	dec    ebp
  403563:	jmp    0xe01e53e5
  403568:	mov    al,0x9d
  40356a:	mov    ah,BYTE PTR [eax-0x5de40b34]
  403570:	inc    esp
  403571:	adc    eax,0xe05f52a5
  403576:	popf   
  403577:	mov    ebx,0xf318d4de
  40357c:	xor    al,BYTE PTR [esi+0x51eb09bf]
  403582:	ud0    edi,esp
  403585:	adc    esi,DWORD PTR [ebx]
  403587:	push   ecx
  403588:	jp     0x403524
  40358a:	xchg   edx,eax
  40358b:	mov    eax,0xa3bd441e
  403590:	jno    0x403602
  403592:	push   0x3b4508f8
  403597:	jns    0x40352b
  403599:	(bad)  
  40359a:	or     al,0xe3
  40359c:	and    eax,0x11c7ce97
  4035a1:	xor    edx,DWORD PTR [ebx+edx*8-0x69]
  4035a5:	cmp    al,0x8
  4035a7:	clc    
  4035a8:	retf   0xcca0
  4035ab:	aas    
  4035ac:	iret   
  4035ad:	xchg   DWORD PTR [ebx],ebx
  4035af:	mov    edi,0x143991ac
  4035b4:	cdq    
  4035b5:	fstp   QWORD PTR [ebp+eax*1+0xd]
  4035b9:	pushf  
  4035ba:	in     al,dx
  4035bb:	or     ecx,DWORD PTR [edx-0x37]
  4035be:	jmp    0x453b:0x3d75974f
  4035c5:	push   esp
  4035c6:	fnsave [esi]
  4035c8:	das    
  4035c9:	mov    eax,ds:0x39519a84
  4035ce:	jle    0x4035ad
  4035d0:	push   esp
  4035d1:	inc    eax
  4035d2:	xor    DWORD PTR [edi+0x3cdbaa0a],0x6c28106b
  4035dc:	fsub   DWORD PTR [ecx-0x31]
  4035df:	adc    edx,DWORD PTR [ebp+0x51691990]
  4035e5:	xchg   esi,eax
  4035e6:	jns    0x4035ba
  4035e8:	das    
  4035e9:	jmp    0x403652
  4035eb:	adc    BYTE PTR [ecx-0x64],0x4f
  4035ef:	mov    eax,0xe01abb70
  4035f4:	sti    
  4035f5:	sbb    edi,DWORD PTR [edx+0xded91c8]
  4035fb:	or     al,0xbf
  4035fd:	mov    dh,0x9d
  4035ff:	pusha  
  403600:	mov    dl,BYTE PTR [edi]
  403602:	mov    ebp,0x986482b7
  403607:	push   es
  403608:	and    BYTE PTR [eax+eax*1],dl
  40360b:	out    0x64,eax
  40360d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360e:	mov    ebp,0x430ab642
  403613:	out    0xe2,al
  403615:	mov    esi,DWORD PTR [esi]
  403617:	in     al,dx
  403618:	idiv   DWORD PTR [eax+edi*4+0x79429f45]
  40361f:	aaa    
  403620:	retf   
  403621:	stc    
  403622:	or     eax,0xa5b368d2
  403627:	inc    ecx
  403628:	idiv   BYTE PTR [ebp+0x496f010e]
  40362e:	adc    eax,0xc0b1e87b
  403633:	std    
  403634:	cmp    DWORD PTR [esp+eax*4-0x4233c29a],0x1
  40363c:	add    eax,0xe9fec889
  403641:	pusha  
  403642:	aaa    
  403643:	jo     0x40367c
  403645:	mov    edi,0x3618e3c5
  40364a:	cmp    eax,0xd935f419
  40364f:	sub    ecx,ebx
  403651:	mov    al,0xa7
  403653:	cdq    
  403654:	inc    eax
  403655:	xchg   ecx,eax
  403656:	cmp    ch,bh
  403658:	dec    ecx
  403659:	fwait
  40365a:	ins    BYTE PTR es:[edi],dx
  40365b:	pusha  
  40365c:	pusha  
  40365d:	mul    DWORD PTR [edi-0x706070d9]
  403663:	pushf  
  403664:	ret    0x67bb
  403667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403668:	ret    
  403669:	xchg   ebx,eax
  40366a:	adc    al,0x7b
  40366c:	jl     0x40361d
  40366e:	loopne 0x403618
  403670:	push   esp
  403671:	jne    0x4036cd
  403673:	mov    bh,0x34
  403675:	and    bl,BYTE PTR [ebx+0x143fc43c]
  40367b:	stos   DWORD PTR es:[edi],eax
  40367c:	fisub  WORD PTR [edx]
  40367e:	stc    
  40367f:	cdq    
  403680:	test   bh,ch
  403682:	mov    es,WORD PTR [ebx+0x2]
  403685:	pop    ss
  403686:	xchg   esp,eax
  403687:	ja     0x40362f
  403689:	jmp    0x40365a
  40368b:	in     eax,0x4b
  40368d:	jg     0x403626
  40368f:	std    
  403690:	and    DWORD PTR [ebx],0x9160a06a
  403696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403697:	out    0xca,al
  403699:	shl    DWORD PTR [edx],0x49
  40369c:	pop    ss
  40369d:	rol    DWORD PTR [bp+0x63f6],0xdc
  4036a3:	pop    ecx
  4036a4:	call   0x8412:0xe789eea9
  4036ab:	inc    ecx
  4036ac:	adc    DWORD PTR [edi-0x7b56ef4],ecx
  4036b2:	dec    ebx
  4036b3:	jp     0x40367a
  4036b5:	xor    dl,al
  4036b7:	mov    BYTE PTR [edx+0x41ca3dcd],bl
  4036bd:	loope  0x403709
  4036bf:	or     DWORD PTR [ebp+0xdcb6e6d],ebp
  4036c5:	out    dx,eax
  4036c6:	ds call 0x2121:0xff6bf4da
  4036ce:	xor    eax,0x14ef8823
  4036d3:	mov    dl,0x53
  4036d5:	mov    esp,0xf8c128d0
  4036da:	mov    ds:0x7d91ff87,al
  4036df:	push   ebp
  4036e0:	inc    DWORD PTR [eax-0x6fbbb5d]
  4036e6:	mov    ecx,0x37e3b9c0
  4036eb:	jecxz  0x403726
  4036ed:	cli    
  4036ee:	inc    eax
  4036ef:	and    ah,dl
  4036f1:	xor    eax,0x56a3a6e2
  4036f6:	rcl    DWORD PTR [eax+ebx*8-0x60e0201a],1
  4036fd:	ret    
  4036fe:	xor    BYTE PTR [edx+0x1c],0xf0
  403702:	cmp    edx,eax
  403704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403705:	xchg   BYTE PTR [eax+0x42219d09],bl
  40370b:	(bad)  
  40370c:	dec    esp
  40370d:	popf   
  40370e:	and    BYTE PTR [eax+edi*8-0xafead59],dh
  403715:	push   es
  403716:	or     BYTE PTR [edx],bl
  403718:	mov    WORD PTR [edx-0x39dfeec4],ss
  40371e:	pop    ebp
  40371f:	add    esp,DWORD PTR [ecx+ebp*8-0x3bee773a]
  403726:	in     al,0xd5
  403728:	push   edx
  403729:	enter  0xe302,0x23
  40372d:	lds    ecx,FWORD PTR [eax+ecx*2+0x4f]
  403731:	push   ds
  403732:	imul   ebp,edx,0x982183b
  403738:	mov    edx,fs
  40373a:	fldenv [ebx]
  40373c:	fwait
  40373d:	cdq    
  40373e:	clc    
  40373f:	pop    esp
  403740:	cld    
  403741:	xor    bl,BYTE PTR [eax]
  403743:	mov    fs,WORD PTR [ebx]
  403745:	(bad)
  403748:	fld    TBYTE PTR [ebp-0x18]
  40374b:	cwde   
  40374c:	loop   0x4037a5
  40374e:	iret   
  40374f:	or     al,0x86
  403751:	mov    edx,0x13bbdfae
  403756:	mov    esp,0x1f854
  40375b:	imul   ecx,DWORD PTR [edx-0x24],0xc7879785
  403762:	mov    edi,0x80d28837
  403767:	pop    ebp
  403768:	in     eax,0x1
  40376a:	jle    0x4037e3
  40376c:	loop   0x403775
  40376e:	sahf   
  40376f:	loop   0x403721
  403771:	mov    edi,0x18195358
  403776:	sub    ch,BYTE PTR [esi-0x11]
  403779:	repz sbb bl,0x89
  40377d:	pop    esp
  40377e:	out    dx,al
  40377f:	lea    ebx,[ebp+0x221a7a62]
  403785:	test   eax,eax
  403787:	push   ebp
  403788:	xchg   ebx,eax
  403789:	mov    ah,0x6d
  40378b:	mov    ebx,ds
  40378d:	adc    eax,0x8fd2c8df
  403792:	lock sbb dl,BYTE PTR [edi]
  403795:	out    dx,al
  403796:	xchg   esi,eax
  403797:	imul   esp,DWORD PTR [edi+eax*8-0x2f],0xffffffc6
  40379c:	repnz mov al,0xf0
  40379f:	inc    edx
  4037a0:	dec    esi
  4037a1:	push   ecx
  4037a2:	es pusha 
  4037a4:	ror    BYTE PTR [edi+0x55],1
  4037a7:	push   ecx
  4037a8:	sub    dh,0x3c
  4037ab:	dec    esi
  4037ac:	call   0x9f0ff6a6
  4037b1:	xor    BYTE PTR [edi-0x739d9f0],bl
  4037b7:	clc    
  4037b8:	imul   ebp,ecx,0x6f296c32
  4037be:	adc    eax,0x511d58a1
  4037c3:	mov    ecx,0x4fcbbc2b
  4037c8:	pushf  
  4037c9:	jecxz  0x40378c
  4037cb:	add    DWORD PTR [edi],edi
  4037cd:	xchg   ebx,eax
  4037ce:	push   ecx
  4037cf:	xor    bh,BYTE PTR [edx+0x2d]
  4037d2:	inc    esi
  4037d3:	dec    ecx
  4037d4:	dec    edi
  4037d5:	xor    eax,0x930477b8
  4037da:	xchg   esp,eax
  4037db:	(bad)  
  4037dc:	int3   
  4037dd:	cmc    
  4037de:	ja     0x403809
  4037e0:	xchg   ecx,eax
  4037e1:	dec    esi
  4037e2:	fcomp  DWORD PTR [edi]
  4037e4:	sbb    DWORD PTR [eax-0x56],eax
  4037e7:	jp     0x403838
  4037e9:	inc    esi
  4037ea:	push   edx
  4037eb:	mov    al,ds:0x783922b4
  4037f0:	in     al,dx
  4037f1:	jnp    0x4037a6
  4037f3:	fwait
  4037f4:	hlt    
  4037f5:	jmp    0x40384d
  4037f7:	mov    edi,0x6c8dba9d
  4037fc:	xchg   ecx,eax
  4037fd:	cli    
  4037fe:	cli    
  4037ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403800:	test   al,0x9f
  403802:	mov    cl,0xd6
  403804:	xor    BYTE PTR [ebp+0x33a1a1fa],0xbb
  40380b:	dec    ebx
  40380c:	ins    DWORD PTR es:[edi],dx
  40380d:	mov    ?,WORD PTR [edi-0x67]
  403810:	out    dx,eax
  403811:	dec    edi
  403812:	adc    ah,BYTE PTR [esi-0x62]
  403815:	sbb    DWORD PTR [ecx],eax
  403817:	inc    esp
  403818:	int3   
  403819:	leave  
  40381a:	mov    DWORD PTR [edi-0x62],ebp
  40381d:	push   0xa263e8d7
  403822:	jl     0x4037f0
  403824:	or     DWORD PTR [di-0x30],ecx
  403828:	(bad)  
  403829:	rcl    BYTE PTR [eax],1
  40382b:	sub    bh,0x34
  40382e:	mov    ebx,0x63b01205
  403833:	je     0x4037f1
  403835:	add    ebx,DWORD PTR [eax]
  403837:	pop    ebp
  403838:	and    eax,0x1329bb18
  40383d:	jl     0x403881
  40383f:	push   ecx
  403840:	xor    dh,BYTE PTR [esp+esi*1+0x3b]
  403844:	push   0x8e83bab6
  403849:	or     al,0xae
  40384b:	loope  0x403883
  40384d:	xor    esp,DWORD PTR ds:0x6b0830fa
  403853:	mov    ecx,0x546675ae
  403858:	push   edi
  403859:	cmp    al,BYTE PTR [ecx-0x48]
  40385c:	add    ah,BYTE PTR [edi]
  40385e:	pop    ds
  40385f:	sbb    eax,0xbe3f11e2
  403864:	lock mov esp,0xdd90c88f
  40386a:	cmp    eax,0x541a7206
  40386f:	mov    ebx,0x5a2d2091
  403874:	jnp    0x40383a
  403876:	xchg   edx,eax
  403877:	sbb    eax,0x7f704cac
  40387c:	aam    0x63
  40387e:	loope  0x40388f
  403880:	sbb    esi,DWORD PTR [esi-0x4c]
  403883:	(bad)  
  403884:	dec    ebp
  403885:	cmp    BYTE PTR [ebx],cl
  403887:	cmp    al,0x7f
  403889:	ret    
  40388a:	icebp  
  40388b:	stos   DWORD PTR es:[edi],eax
  40388c:	in     al,0xa9
  40388e:	push   edx
  40388f:	pop    ebp
  403890:	das    
  403891:	inc    edi
  403892:	and    esp,ebx
  403894:	pop    ebx
  403895:	(bad)  
  403896:	sub    BYTE PTR [edx],cl
  403898:	sub    eax,0x838bd7f6
  40389d:	dec    DWORD PTR [ecx-0x70]
  4038a0:	xchg   edi,eax
  4038a1:	inc    ecx
  4038a2:	lods   al,BYTE PTR ds:[esi]
  4038a3:	int    0x95
  4038a5:	inc    ebp
  4038a6:	gs jmp 0x66b7:0x8e479fbb
  4038ae:	push   eax
  4038af:	sar    BYTE PTR [ecx],1
  4038b1:	sbb    ch,bh
  4038b3:	jmp    0x403874
  4038b5:	das    
  4038b6:	loope  0x40392d
  4038b8:	mov    eax,0x84b714db
  4038bd:	inc    ebx
  4038be:	pusha  
  4038bf:	push   0xffffffa6
  4038c1:	aas    
  4038c2:	ins    DWORD PTR es:[edi],dx
  4038c3:	mov    esi,esi
  4038c5:	push   edi
  4038c6:	inc    esi
  4038c7:	retf   
  4038c8:	hlt    
  4038c9:	iret   
  4038ca:	(bad)  
  4038cb:	and    esp,DWORD PTR [edx-0x39]
  4038ce:	daa    
  4038cf:	adc    ebp,ebp
  4038d1:	xchg   esp,eax
  4038d2:	add    edi,eax
  4038d4:	inc    ecx
  4038d5:	mov    bl,0xc8
  4038d7:	mov    ah,0x26
  4038d9:	sub    bl,al
  4038db:	in     eax,dx
  4038dc:	push   eax
  4038dd:	jle    0x403913
  4038df:	arpl   WORD PTR [edx-0x8d889c6],si
  4038e5:	std    
  4038e6:	fwait
  4038e7:	sti    
  4038e8:	in     al,dx
  4038e9:	xor    al,0x66
  4038eb:	fdivr  DWORD PTR [ecx]
  4038ed:	adc    DWORD PTR [ebp*8-0x6b11481a],eax
  4038f4:	dec    esp
  4038f5:	out    0x2f,eax
  4038f7:	inc    eax
  4038f8:	and    DWORD PTR ds:0x5443d4c2,esi
  4038fe:	push   ss
  4038ff:	iret   
  403900:	push   esp
  403901:	enter  0xeee0,0x46
  403905:	gs addr16 pushf 
  403908:	mov    edi,0x40e8f708
  40390d:	mov    esi,0x98715d86
  403912:	xchg   ecx,eax
  403913:	ins    DWORD PTR es:[edi],dx
  403914:	mov    dh,0x45
  403916:	jmp    0x37de4cd6
  40391b:	adc    eax,0x6959ea5c
  403920:	inc    esi
  403921:	mov    es,WORD PTR [edx]
  403923:	je     0x40399f
  403925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403926:	aaa    
  403927:	cmp    al,0x29
  403929:	pop    ebx
  40392a:	jne    0x4039a2
  40392c:	fs xchg ecx,eax
  40392e:	jmp    0x1fd0:0x6a4611d5
  403935:	jg     0x403950
  403937:	jmp    0xa4b9:0xea2325b8
  40393e:	dec    ecx
  40393f:	leave  
  403940:	mov    edi,0x11d45be9
  403945:	call   0x1743:0x5727b6d9
  40394c:	xchg   ebp,eax
  40394d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40394e:	std    
  40394f:	in     eax,0x7d
  403951:	pop    eax
  403952:	cmp    bh,BYTE PTR [esi]
  403954:	add    DWORD PTR [edx],0x76
  403957:	mov    al,ds:0x429889e6
  40395c:	xor    esp,DWORD PTR [esi-0xc]
  40395f:	jp     0x403988
  403961:	pushf  
  403962:	clc    
  403963:	aaa    
  403964:	repnz dec ecx
  403966:	gs dec ecx
  403968:	arpl   WORD PTR [ebx],di
  40396a:	jns    0x403922
  40396c:	fild   DWORD PTR [ebx-0x29]
  40396f:	mov    dh,0x81
  403971:	in     al,0xfe
  403973:	jmp    0x403921
  403975:	or     BYTE PTR [edi-0x1a],dh
  403978:	in     al,0x57
  40397a:	cld    
  40397b:	cwde   
  40397c:	pop    esp
  40397d:	push   ds
  40397e:	xor    al,BYTE PTR [ebp+0x23851496]
  403984:	sub    DWORD PTR [esi+0x7e],ecx
  403987:	in     eax,0xf
  403989:	xchg   BYTE PTR [esp+ebx*1],ah
  40398c:	and    DWORD PTR [esi+0x1be1e33e],edi
  403992:	test   ecx,eax
  403994:	ins    BYTE PTR es:[edi],dx
  403995:	retf   0x8bfc
  403998:	or     eax,ebx
  40399a:	loop   0x4039f6
  40399c:	mov    BYTE PTR [edx],bl
  40399e:	mov    ah,0x26
  4039a0:	test   ecx,ebx
  4039a2:	popa   
  4039a3:	push   esi
  4039a4:	pop    esp
  4039a5:	ret    0x4843
  4039a8:	jge    0x403960
  4039aa:	loop   0x40392d
  4039ac:	clc    
  4039ad:	sub    DWORD PTR [edx],esp
  4039af:	pop    ds
  4039b0:	cmp    edx,DWORD PTR [eax]
  4039b2:	aad    0xd9
  4039b4:	(bad)  
  4039b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b7:	mov    DWORD PTR [esi-0x31],0x771d0dee
  4039be:	pop    esi
  4039bf:	ss imul esp,edx,0xffffffd3
  4039c3:	pop    ds
  4039c4:	pop    esi
  4039c5:	loop   0x4039d0
  4039c7:	mov    eax,ds:0x63b90305
  4039cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039cd:	rcr    dl,cl
  4039cf:	dec    ebx
  4039d0:	push   edx
  4039d1:	fdiv   QWORD PTR [edx]
  4039d3:	inc    edi
  4039d4:	mov    al,0xf7
  4039d6:	int3   
  4039d7:	mov    ds:0x417b0ead,al
  4039dc:	or     dl,bh
  4039de:	retf   
  4039df:	fstp   DWORD PTR [edi-0x14e9bbc4]
  4039e5:	mov    edi,0xde3e7e1a
  4039ea:	ror    BYTE PTR ds:0x64686891,cl
  4039f0:	jge    0x403990
  4039f2:	pop    eax
  4039f3:	and    ebx,DWORD PTR ds:0xe78e5c0e
  4039f9:	xchg   edx,eax
  4039fa:	xor    al,0xe7
  4039fc:	(bad)  
  4039fd:	pop    eax
  4039fe:	fs sbb eax,0x65487685
  403a04:	dec    esp
  403a05:	push   ecx
  403a06:	and    DWORD PTR [edi+0x4f],0xffffff99
  403a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a0b:	mov    edi,0x45bf3291
  403a10:	fadd   QWORD PTR [ebx]
  403a12:	push   es
  403a13:	xchg   esi,eax
  403a14:	sub    cl,BYTE PTR [edi+0xb]
  403a17:	jmp    0x7bf1c6a2
  403a1c:	mov    esi,DWORD PTR [eax]
  403a1e:	loop   0x403a7f
  403a20:	jo     0x403a55
  403a22:	and    DWORD PTR [ebx-0x23dfef65],eax
  403a28:	cli    
  403a29:	clc    
  403a2a:	aam    0x8b
  403a2c:	out    dx,al
  403a2d:	ror    DWORD PTR [edx+0x1e7e5d22],0xf6
  403a34:	data16 sbb al,0xd8
  403a37:	xchg   esi,eax
  403a38:	aas    
  403a39:	setle  BYTE PTR [edi+0x6b9ba169]
  403a40:	add    BYTE PTR [ecx+0x31],dl
  403a43:	frstor [edx]
  403a45:	fcomp  st(6)
  403a47:	inc    ecx
  403a48:	jg     0x4039f7
  403a4a:	pop    esp
  403a4b:	outs   dx,DWORD PTR ds:[esi]
  403a4c:	ins    BYTE PTR es:[edi],dx
  403a4d:	pop    ebx
  403a4e:	cdq    
  403a4f:	sub    BYTE PTR [ebx-0x328bf86],cl
  403a55:	mov    esi,0x9ad04b1b
  403a5a:	lods   eax,DWORD PTR ds:[esi]
  403a5b:	push   ebx
  403a5c:	int    0x20
  403a5e:	adc    BYTE PTR [ecx],ch
  403a60:	jnp    0x403a4c
  403a62:	jo     0x403ad2
  403a64:	loop   0x403a84
  403a66:	stos   BYTE PTR es:[edi],al
  403a67:	push   eax
  403a68:	retf   0x61b3
  403a6b:	ins    DWORD PTR es:[edi],dx
  403a6c:	pop    DWORD PTR [ecx]
  403a6e:	adc    BYTE PTR [ebx+0x2fdaece4],ch
  403a74:	cs jmp 0x6680:0xef3611c7
  403a7c:	mov    ebp,0xa932b564
  403a81:	dec    esp
  403a82:	dec    ebp
  403a83:	xor    BYTE PTR [ecx+0x31],ah
  403a86:	xor    BYTE PTR [ebx-0x47],0x44
  403a8a:	xchg   ecx,eax
  403a8b:	xor    al,al
  403a8d:	xchg   edx,eax
  403a8e:	sub    eax,0xa7300097
  403a93:	aad    0x9c
  403a95:	ret    
  403a96:	idiv   eax
  403a98:	mov    ecx,0x7ca7fbd7
  403a9d:	out    0x53,eax
  403a9f:	push   edx
  403aa0:	sub    BYTE PTR [edx],0x98
  403aa3:	mov    ah,0xdf
  403aa5:	mov    ch,0x1a
  403aa7:	dec    ebp
  403aa8:	xor    BYTE PTR [esi+0x75],ch
  403aab:	add    ebx,DWORD PTR [eax]
  403aad:	call   0x8421:0x19b31465
  403ab4:	cmp    edi,DWORD PTR [ebx]
  403ab6:	inc    ecx
  403ab7:	pop    ecx
  403ab8:	je     0x403b1a
  403aba:	jae    0x403a8f
  403abc:	adc    al,BYTE PTR [esi-0x7e]
  403abf:	popaw  
  403ac1:	addr16 push edi
  403ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac4:	lods   al,BYTE PTR ds:[esi]
  403ac5:	inc    DWORD PTR [edx+0x57]
  403ac8:	jl     0x403b30
  403aca:	mov    edi,0x575198f9
  403acf:	leave  
  403ad0:	cwde   
  403ad1:	jo     0x403abf
  403ad3:	fcmovnb st,st(2)
  403ad5:	xchg   ebx,esp
  403ad7:	xor    edx,DWORD PTR [esp+ecx*8]
  403ada:	stos   BYTE PTR es:[edi],al
  403adb:	push   es
  403adc:	pusha  
  403add:	das    
  403ade:	cmp    eax,eax
  403ae0:	or     ch,BYTE PTR [esi]
  403ae2:	dec    ebx
  403ae3:	outs   dx,DWORD PTR ds:[esi]
  403ae4:	mov    ds:0x51694451,eax
  403ae9:	jns    0x403ac4
  403aeb:	xchg   ebx,eax
  403aec:	xchg   ecx,eax
  403aed:	dec    ebx
  403aee:	sub    al,0xbe
  403af0:	aam    0xeb
  403af2:	mov    ds:0x1fe15749,eax
  403af7:	sub    eax,0x28e1b844
  403afc:	pop    ecx
  403afd:	stos   BYTE PTR es:[edi],al
  403afe:	cwde   
  403aff:	jecxz  0x403afd
  403b01:	mov    edi,0x97b35f1a
  403b06:	mov    bl,dh
  403b08:	ret    
  403b09:	xor    dl,ch
  403b0b:	inc    ebp
  403b0c:	ins    BYTE PTR es:[edi],dx
  403b0d:	dec    esp
  403b0e:	xor    BYTE PTR [esi],ch
  403b10:	retf   
  403b11:	repnz imul ecx,esi,0xffffffd3
  403b15:	dec    ebp
  403b16:	and    al,0xc6
  403b18:	mov    ah,0x4e
  403b1a:	sub    DWORD PTR [ecx+0x3fa26d3a],edi
  403b20:	or     eax,0xf3def8a3
  403b25:	mov    cl,0x4c
  403b27:	daa    
  403b28:	adc    al,0xe9
  403b2a:	dec    ebp
  403b2b:	dec    edx
  403b2c:	cs (bad) 
  403b2e:	jmp    0x403ac2
  403b30:	scas   al,BYTE PTR es:[edi]
  403b31:	sahf   
  403b32:	fnstenv [edi-0x15d79fce]
  403b38:	xor    eax,0xa205deb8
  403b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b3e:	fwait
  403b3f:	lds    ecx,FWORD PTR [ebx]
  403b41:	jmp    0x22:0x88f52984
  403b48:	aad    0x69
  403b4a:	xchg   DWORD PTR [esi+0x1ccadf79],ebp
  403b50:	push   esp
  403b51:	cs push es
  403b53:	cmp    al,al
  403b55:	push   es
  403b56:	push   esi
  403b57:	or     ecx,0xd
  403b5a:	fs ins DWORD PTR es:[edi],dx
  403b5c:	sbb    eax,0xd8ffc00a
  403b61:	push   ss
  403b62:	inc    ebp
  403b63:	(bad)  
  403b64:	pop    ebp
  403b65:	(bad)  
  403b67:	dec    esp
  403b68:	in     al,0xcc
  403b6a:	addr16 xchg edi,eax
  403b6c:	pushf  
  403b6d:	stos   BYTE PTR es:[edi],al
  403b6e:	jle    0x403b2b
  403b70:	cs push ebx
  403b72:	sbb    al,0x85
  403b74:	out    0xe9,eax
  403b76:	mov    dl,0xf2
  403b78:	mov    eax,0xb4ff3572
  403b7d:	inc    ecx
  403b7e:	addr16 sub eax,0x7a080ec6
  403b84:	ins    DWORD PTR es:[edi],dx
  403b85:	(bad)  
  403b87:	sti    
  403b88:	mov    bl,0x59
  403b8a:	xchg   ebx,eax
  403b8b:	push   es
  403b8c:	or     dh,BYTE PTR [edi]
  403b8e:	cdq    
  403b8f:	xchg   ebp,eax
  403b90:	mov    dh,bl
  403b92:	fcomp  QWORD PTR [esi+0x58de0d97]
  403b98:	dec    edi
  403b99:	or     edi,DWORD PTR ds:0x67864dbc
  403b9f:	jbe    0x403be0
  403ba1:	addr16 adc ebp,edi
  403ba4:	in     eax,0x37
  403ba6:	or     ch,BYTE PTR [edi+0x36]
  403ba9:	adc    eax,0x5b98fc6a
  403bae:	outs   dx,DWORD PTR ds:[esi]
  403baf:	sub    DWORD PTR [eax],0x78
  403bb2:	hlt    
  403bb3:	jae    0x403bec
  403bb5:	gs push eax
  403bb7:	or     BYTE PTR [esi],al
  403bb9:	xor    BYTE PTR [ebx-0x4f5bc559],ah
  403bbf:	fimul  WORD PTR [esi-0x5eed6196]
  403bc5:	std    
  403bc6:	out    dx,eax
  403bc7:	sbb    BYTE PTR [esi],dh
  403bc9:	pop    eax
  403bca:	jl     0x403c21
  403bcc:	mov    ds:0x8b1ad8c1,eax
  403bd1:	ja     0x403ba4
  403bd3:	in     al,dx
  403bd4:	fistp  DWORD PTR [eax]
  403bd6:	push   ss
  403bd7:	add    DWORD PTR [ecx-0x704ff0ef],eax
  403bdd:	dec    ecx
  403bde:	arpl   WORD PTR ds:0x4efa9c36,si
  403be4:	and    DWORD PTR [ebp+0x2193dc9d],0x64
  403beb:	ins    BYTE PTR es:[edi],dx
  403bec:	(bad)  
  403bed:	enter  0xee2b,0xf9
  403bf1:	cmp    bh,BYTE PTR [eax]
  403bf3:	jnp    0x403bef
  403bf5:	cmp    BYTE PTR [esi+ebx*8],0x86
  403bf9:	or     DWORD PTR [edx-0x5f7abb50],0x65
  403c00:	cmp    bh,ah
  403c02:	jnp    0x403c25
  403c04:	ds adc al,0xdb
  403c07:	mov    eax,ds:0x5c2905b6
  403c0c:	pop    ss
  403c0d:	mov    bl,0x6e
  403c0f:	adc    ebx,DWORD PTR [edx-0x61]
  403c12:	push   ecx
  403c13:	sbb    al,0xd8
  403c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c16:	enter  0x1270,0x51
  403c1a:	push   edi
  403c1b:	xor    ebx,esi
  403c1d:	int3   
  403c1e:	xlat   BYTE PTR ds:[ebx]
  403c1f:	adc    al,0x78
  403c21:	mov    edi,0xf86cd01d
  403c26:	dec    eax
  403c27:	imul   ecx,DWORD PTR [ecx+0x61],0xffffffd5
  403c2b:	add    DWORD PTR [edx+0x10],0x3
  403c2f:	adc    DWORD PTR [eax+ebp*1+0x3b],esp
  403c33:	fwait
  403c34:	in     eax,dx
  403c35:	shl    BYTE PTR [edx],0x1f
  403c38:	adc    bl,BYTE PTR [eax]
  403c3a:	loope  0x403cad
  403c3c:	mov    al,0x6
  403c3e:	inc    edx
  403c3f:	neg    bh
  403c41:	push   ss
  403c42:	sub    cl,BYTE PTR [esi-0x74]
  403c45:	stos   BYTE PTR es:[edi],al
  403c46:	inc    ebp
  403c47:	les    edi,FWORD PTR [esi+0x64bb2a68]
  403c4d:	ficomp WORD PTR [ebp+0x56]
  403c50:	arpl   WORD PTR [ecx],di
  403c52:	je     0x403c9f
  403c54:	out    0x17,eax
  403c56:	ins    DWORD PTR es:[edi],dx
  403c57:	clc    
  403c58:	das    
  403c59:	das    
  403c5a:	lods   eax,DWORD PTR ds:[esi]
  403c5b:	jmp    0x2281:0x85cdc804
  403c62:	cmp    esi,esp
  403c64:	push   edi
  403c65:	cdq    
  403c66:	inc    edi
  403c67:	dec    esp
  403c68:	vcvtss2sd xmm5,xmm7,DWORD PTR [ebp-0x2a]
  403c6d:	push   ss
  403c6e:	iret   
  403c6f:	mov    eax,0xf4c29ec4
  403c74:	xchg   esp,eax
  403c75:	cmp    al,0x5b
  403c77:	add    edx,DWORD PTR [ebx]
  403c79:	jb     0x403cc9
  403c7b:	ins    DWORD PTR es:[edi],dx
  403c7c:	ja     0x403c9b
  403c7e:	mov    WORD PTR [esi],ss
  403c80:	or     DWORD PTR [eax+0x48],0x1225ca99
  403c87:	sti    
  403c88:	nop
  403c89:	pusha  
  403c8a:	jecxz  0x403c52
  403c8c:	sub    eax,0x3273d63b
  403c91:	sbb    BYTE PTR [esi],0xec
  403c94:	aad    0x52
  403c96:	xchg   cl,bl
  403c98:	fmul   QWORD PTR [ebx]
  403c9a:	jmp    0xaef4d058
  403c9f:	sbb    eax,eax
  403ca1:	cmp    esi,ebx
  403ca3:	test   BYTE PTR [eax],ch
  403ca5:	adc    ebp,DWORD PTR [esi]
  403ca7:	loope  0x403c7f
  403ca9:	(bad)
  403cac:	or     bl,0x27
  403caf:	cmp    BYTE PTR [ecx+edi*4-0x522314cb],al
  403cb6:	mov    ebp,0x83456539
  403cbb:	mov    ebp,0x7b45825b
  403cc0:	js     0x403d24
  403cc2:	xor    edi,DWORD PTR [eax-0x28]
  403cc5:	dec    ebx
  403cc6:	xchg   ebp,eax
  403cc7:	adc    DWORD PTR [ebp-0x4d83bdc6],edx
  403ccd:	fistp  DWORD PTR [eax+0x46]
  403cd0:	popf   
  403cd1:	add    dl,ah
  403cd3:	enter  0x23d8,0xb6
  403cd7:	test   ebx,ecx
  403cd9:	pop    es
  403cda:	pusha  
  403cdb:	add    al,0x5f
  403cdd:	inc    ecx
  403cde:	fwait
  403cdf:	int3   
  403ce0:	(bad)  
  403ce1:	jb     0x403d04
  403ce3:	dec    edx
  403ce4:	sbb    esp,DWORD PTR [ebp+0x5c]
  403ce7:	pop    ds
  403ce8:	push   ecx
  403ce9:	pop    esp
  403cea:	pop    eax
  403ceb:	test   BYTE PTR [ebx+edx*8+0x5c82812c],bh
  403cf2:	sbb    DWORD PTR [ecx+0x348584df],edi
  403cf8:	popf   
  403cf9:	retf   0xad14
  403cfc:	mov    cl,0x97
  403cfe:	je     0x403d6c
  403d00:	not    DWORD PTR [esi]
  403d02:	xor    DWORD PTR [ecx+0x7c35ece0],0x595a678a
  403d0c:	pop    ebp
  403d0d:	pop    esi
  403d0e:	in     eax,dx
  403d0f:	pusha  
  403d10:	fwait
  403d11:	or     edi,DWORD PTR [eax]
  403d13:	hlt    
  403d14:	popa   
  403d15:	xchg   ebx,eax
  403d16:	test   eax,0x611176fa
  403d1b:	sub    al,0xbb
  403d1d:	arpl   WORD PTR [edi],dx
  403d1f:	std    
  403d20:	les    edx,FWORD PTR [eax]
  403d22:	fcom   QWORD PTR [ebx+0xd253985]
  403d28:	xchg   ebp,eax
  403d29:	jmp    0x7bd606c6
  403d2e:	cdq    
  403d2f:	mov    es,ecx
  403d31:	push   cs
  403d32:	sbb    bh,BYTE PTR [ebx+0x71]
  403d35:	inc    ebx
  403d36:	fild   DWORD PTR [eax]
  403d38:	loop   0x403d6e
  403d3a:	xor    DWORD PTR [ebp-0x21],ebp
  403d3d:	xor    BYTE PTR [eax],ch
  403d3f:	adc    esp,eax
  403d41:	jg     0x403d2f
  403d43:	pushf  
  403d44:	add    edi,eax
  403d46:	adc    eax,0x44fc6de5
  403d4b:	or     eax,0x45b25809
  403d50:	and    dh,ah
  403d52:	rol    DWORD PTR [ebx+0x62b095a0],0x58
  403d59:	(bad)  [ebx+0x3]
  403d5c:	xchg   ecx,eax
  403d5d:	push   cs
  403d5e:	sar    DWORD PTR [esi],cl
  403d60:	mov    ecx,0xebe208dd
  403d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d66:	xchg   ebx,eax
  403d67:	cdq    
  403d68:	jne    0x403d32
  403d6a:	and    DWORD PTR [edi+0x50],esi
  403d6d:	and    eax,0x69fac736
  403d72:	inc    eax
  403d73:	jmp    0x403db8
  403d75:	or     eax,0x7e3dc8b5
  403d7a:	jmp    0xe563b72a
  403d7f:	dec    esi
  403d80:	je     0x403d25
  403d82:	ret    0x9368
  403d85:	inc    ebx
  403d86:	xchg   BYTE PTR [eax],ch
  403d88:	mov    ebx,0x823ca580
  403d8d:	aad    0xe9
  403d8f:	call   0xabcaa393
  403d94:	adc    BYTE PTR [ecx+0x66f71f0a],ch
  403d9a:	test   DWORD PTR [edx+0xf2563e8],ebp
  403da0:	rcr    DWORD PTR [edi+0x34315a01],0xab
  403da7:	test   eax,0x5cc5e5c8
  403dac:	cs sbb al,0x19
  403daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db0:	xchg   edx,eax
  403db1:	pop    esi
  403db2:	clc    
  403db3:	sar    dh,1
  403db5:	pop    ss
  403db6:	jmp    0x6c29:0x3b331f86
  403dbd:	jae    0x403de7
  403dbf:	pop    ecx
  403dc0:	mov    ebp,0xe2ec5523
  403dc5:	jae    0x403d4b
  403dc7:	adc    BYTE PTR [edx-0x5ea180df],bl
  403dcd:	add    BYTE PTR [ebp-0x12],bl
  403dd0:	dec    esi
  403dd1:	inc    edi
  403dd2:	add    eax,0x868578da
  403dd7:	test   DWORD PTR [ebx-0x22],esp
  403dda:	in     eax,0x98
  403ddc:	ret    
  403ddd:	push   edx
  403dde:	xor    al,0x4a
  403de0:	ss call 0x58c42504
  403de6:	test   DWORD PTR [edi-0x66d9c6bd],edi
  403dec:	add    edx,eax
  403dee:	adc    al,0x60
  403df0:	iret   
  403df1:	sub    DWORD PTR [edx+0x7f],edi
  403df4:	jns    0x403d7b
  403df6:	(bad)  
  403df7:	clc    
  403df8:	pushf  
  403df9:	stos   BYTE PTR es:[edi],al
  403dfa:	std    
  403dfb:	idiv   DWORD PTR [ecx+0x24]
  403dfe:	xchg   ebx,eax
  403dff:	pop    esi
  403e00:	ret    0x6252
  403e03:	popa   
  403e04:	ret    0x34e7
  403e07:	xor    edi,esi
  403e09:	rcl    DWORD PTR [ebp-0x29],0xb5
  403e0d:	imul   eax,DWORD PTR [ebx+0xa],0xffffff81
  403e11:	inc    ebx
  403e12:	dec    esi
  403e13:	mov    WORD PTR [edx],?
  403e15:	push   0xf50f2952
  403e1a:	repz shl esp,0xcf
  403e1e:	test   eax,0x8ca5cdd1
  403e23:	stc    
  403e24:	mov    esi,0xcd40c0ca
  403e2a:	push   0x6b1bafff
  403e2f:	loopne 0x403e1c
  403e31:	jb     0x403e6f
  403e33:	push   edi
  403e34:	lods   eax,DWORD PTR ds:[esi]
  403e35:	fist   DWORD PTR [edi+ebp*8-0x67201bc5]
  403e3c:	es cmp al,0x6d
  403e3f:	adc    eax,0x533ba61d
  403e44:	repz retf 0xd95b
  403e48:	mov    ds:0x4524597d,al
  403e4d:	inc    esp
  403e4e:	pop    ebp
  403e4f:	imul   BYTE PTR ds:0xc4e8f697
  403e55:	outs   dx,DWORD PTR ds:[esi]
  403e56:	int    0x62
  403e58:	jno    0x403e32
  403e5a:	xor    DWORD PTR [edx+0x59219da0],edi
  403e60:	cs push ebp
  403e62:	imul   eax,edx,0x2483763c
  403e68:	dec    ebx
  403e69:	add    DWORD PTR [ebx-0x35],edx
  403e6c:	and    al,0x30
  403e6e:	cld    
  403e6f:	jmp    0x6e68b26a
  403e74:	mov    eax,0x695a712c
  403e79:	and    edi,DWORD PTR ds:0x8a10a2da
  403e7f:	or     eax,0xac33f028
  403e84:	mov    ds:0x95173c44,al
  403e89:	inc    edi
  403e8a:	mov    eax,ds:0x439424c0
  403e8f:	out    0x24,eax
  403e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e92:	xchg   edi,eax
  403e93:	mov    ?,WORD PTR [ecx+0x6]
  403e96:	xchg   esp,eax
  403e97:	push   edx
  403e98:	mov    dl,0xd7
  403e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e9b:	mov    al,0x2
  403e9d:	fiadd  WORD PTR [esp+ebp*1+0x67]
  403ea1:	test   eax,0x602454f1
  403ea7:	adc    ebx,DWORD PTR [esi+0x5a6f05c2]
  403ead:	pop    eax
  403eae:	std    
  403eaf:	adc    eax,0x91d8aed7
  403eb4:	mov    ecx,0xc0b866f
  403eb9:	jb     0x403e8c
  403ebb:	inc    esi
  403ebc:	mov    ah,0xf9
  403ebe:	mov    dh,0xab
  403ec0:	lds    edx,FWORD PTR [edi-0x16be61c0]
  403ec6:	lods   al,BYTE PTR ds:[esi]
  403ec7:	popa   
  403ec8:	push   es
  403ec9:	cmp    DWORD PTR [edx+eiz*8+0xce6187],edx
  403ed0:	xchg   esp,eax
  403ed1:	inc    edx
  403ed2:	xchg   esi,eax
  403ed3:	jns    0x403f4a
  403ed5:	push   di
  403ed7:	sbb    DWORD PTR [ebx+edx*4-0x757ed83f],0x7d
  403edf:	or     eax,DWORD PTR ds:0xb98d838d
  403ee5:	sub    dh,dl
  403ee7:	push   eax
  403ee8:	push   ebp
  403ee9:	mov    ah,0xce
  403eeb:	jno    0x403ea1
  403eed:	inc    DWORD PTR [ebp-0x7684d2fe]
  403ef3:	and    edi,eax
  403ef5:	pusha  
  403ef6:	inc    ebp
  403ef7:	lock jo 0x403ecc
  403efa:	jecxz  0x403f70
  403efc:	mov    dh,0x40
  403efe:	sbb    eax,0x27a191ba
  403f03:	inc    edx
  403f04:	inc    DWORD PTR [edx-0x52]
  403f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f08:	sub    ch,BYTE PTR es:[edx-0x60ff56c2]
  403f0f:	call   FWORD PTR [ecx+ebx*1-0x5215b685]
  403f16:	mov    esi,DWORD PTR [ebx-0x4f]
  403f19:	adc    al,0x18
  403f1b:	lods   eax,DWORD PTR ds:[esi]
  403f1c:	out    0x2c,eax
  403f1e:	shl    BYTE PTR [edx+eiz*8-0xa684ec0],1
  403f25:	mov    WORD PTR [ecx-0x2f],gs
  403f28:	retf   0xa6ee
  403f2b:	data16 fwait
  403f2d:	pop    esp
  403f2e:	ins    BYTE PTR es:[edi],dx
  403f2f:	dec    ecx
  403f30:	pushf  
  403f31:	fucomip st,st(7)
  403f33:	sub    al,0x77
  403f35:	out    dx,eax
  403f36:	lea    esp,[ebx+0x52239a7]
  403f3c:	in     al,0x26
  403f3e:	and    DWORD PTR [ebp+esi*1-0x70],ebx
  403f42:	fadd   QWORD PTR [ebx]
  403f44:	fld    QWORD PTR [ecx]
  403f46:	mov    eax,0x7912052e
  403f4b:	xor    dh,BYTE PTR [edi]
  403f4d:	jo     0x403ee6
  403f4f:	(bad)  
  403f50:	call   0xf1ad9c50
  403f55:	mov    bl,0x9c
  403f57:	push   es
  403f58:	and    BYTE PTR [ecx+0x3d3ad914],cl
  403f5e:	dec    esi
  403f5f:	jo     0x403eec
  403f61:	iret   
  403f62:	pop    esi
  403f63:	xchg   al,cl
  403f65:	push   ebp
  403f66:	and    BYTE PTR [esi-0x8],dl
  403f69:	cmc    
  403f6a:	shl    BYTE PTR [ebp-0x45],cl
  403f6d:	loope  0x403fd5
  403f6f:	daa    
  403f70:	adc    bh,BYTE PTR [edi+0x42767790]
  403f76:	pusha  
  403f77:	jmp    0x91cd:0xaad6486a
  403f7e:	int3   
  403f7f:	clc    
  403f80:	call   0x776a761b
  403f85:	loope  0x403f33
  403f87:	outs   dx,BYTE PTR ds:[esi]
  403f88:	es pop ecx
  403f8a:	(bad)  
  403f8b:	in     al,0xf2
  403f8d:	rcr    BYTE PTR [eax+0x1aecce79],0xcf
  403f94:	jo     0x403f96
  403f96:	mov    eax,0xe1d5dad6
  403f9b:	add    al,0x5a
  403f9d:	(bad)  
  403f9e:	jmp    0x5e83:0xd766635f
  403fa5:	jns    0x403f4b
  403fa7:	jmp    0x403f5e
  403fa9:	jae    0x403f97
  403fab:	inc    ebx
  403fac:	pusha  
  403fad:	scas   eax,DWORD PTR es:[edi]
  403fae:	out    dx,al
  403faf:	fild   WORD PTR [eax]
  403fb1:	mov    bh,0x6b
  403fb3:	or     al,0xe8
  403fb5:	loopne 0x403f70
  403fb7:	xor    bl,BYTE PTR [edx+eax*1+0x314e0d2f]
  403fbe:	dec    eax
  403fbf:	mul    DWORD PTR [edx-0x34b44ecc]
  403fc5:	jb     0x403f85
  403fc7:	pop    esp
  403fc8:	retf   
  403fc9:	sub    BYTE PTR [ebx+0x77],al
  403fcc:	sub    BYTE PTR [ebx+0x3d6db0c4],bl
  403fd2:	push   0x690ada83
  403fd7:	inc    eax
  403fd8:	lods   eax,DWORD PTR ds:[esi]
  403fd9:	adc    eax,0x152f9ffc
  403fde:	mov    al,ds:0xf112ef44
  403fe3:	pop    edx
  403fe4:	and    eax,0xb4590aba
  403fe9:	sub    al,0x85
  403feb:	add    dh,ch
  403fed:	data16 std 
  403fef:	push   es
  403ff0:	dec    esi
  403ff1:	mov    ds:0xf28beaf3,al
  403ff6:	ror    DWORD PTR [ebx],1
  403ff8:	dec    ebx
  403ff9:	mov    edx,0x45bb2d54
  403ffe:	dec    eax
  403fff:	in     al,0xe4
  404001:	in     al,0xe9
  404003:	jo     0x404029
  404005:	into   
  404006:	cmp    edi,DWORD PTR [edx+0x2a]
  404009:	and    cl,BYTE PTR [ecx+0x7db9a98d]
  40400f:	jle    0x404079
  404011:	sub    al,0x5a
  404013:	xor    ecx,ebx
  404015:	ror    DWORD PTR [edi],1
  404017:	push   ebx
  404018:	inc    ecx
  404019:	in     eax,0x70
  40401b:	dec    DWORD PTR [edi+0x2b]
  40401e:	mov    DWORD PTR [edi+ebp*8],ebp
  404021:	mov    esi,0x2e6ea6bb
  404026:	pop    ebx
  404027:	pop    esi
  404028:	clc    
  404029:	hlt    
  40402a:	fistp  QWORD PTR [esi]
  40402c:	and    ebx,DWORD PTR [ecx+0x35d3b6d6]
  404032:	adc    eax,0xbfb8319c
  404037:	fisub  DWORD PTR [ecx+edx*4]
  40403a:	sbb    al,0xc
  40403c:	mov    edx,0xd0bdb830
  404041:	and    BYTE PTR [edx+0x6a],dl
  404044:	mov    esi,DWORD PTR [esi+0x1aec880b]
  40404a:	jno    0x40402b
  40404c:	adc    al,0xb
  40404e:	mov    bh,0x46
  404050:	xchg   edx,eax
  404051:	xchg   ebx,eax
  404052:	xchg   edi,eax
  404053:	adc    ecx,DWORD PTR [edi]
  404055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404056:	scas   al,BYTE PTR es:[edi]
  404057:	cmp    BYTE PTR [eax*4+0x15cf7162],bh
  40405e:	sahf   
  40405f:	test   esp,esi
  404061:	xor    DWORD PTR [edi-0x1c],edx
  404064:	out    dx,al
  404065:	icebp  
  404066:	push   0x99aa47d5
  40406b:	jno    0x404060
  40406d:	cli    
  40406e:	ins    BYTE PTR es:[edi],dx
  40406f:	ds fwait
  404071:	dec    edx
  404072:	sub    eax,0x37953cbf
  404077:	fwait
  404078:	dec    ebp
  404079:	mov    ds:0x84e67ad5,eax
  40407e:	mov    ds:0xb4d9fff,eax
  404083:	add    esi,DWORD PTR [eax+0x2a]
  404086:	int3   
  404087:	cmp    eax,0x6132913d
  40408c:	out    dx,al
  40408d:	mov    ebp,0x55034c1
  404092:	fnstenv [esp+ebx*2-0x57bf31b2]
  404099:	xchg   ebp,eax
  40409a:	add    al,0x8e
  40409c:	xor    DWORD PTR [ebx+0x52b88c22],esi
  4040a2:	adc    ah,bh
  4040a4:	outs   dx,DWORD PTR ds:[esi]
  4040a5:	add    al,0x69
  4040a7:	jb     0x40403d
  4040a9:	jmp    0xc04e6c50
  4040ae:	fs dec esi
  4040b0:	jmp    0x404101
  4040b2:	retf   0xde49
  4040b5:	lds    eax,FWORD PTR [edi+0x60bf4166]
  4040bb:	mov    edi,0x704b33ae
  4040c0:	xchg   esp,eax
  4040c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c2:	or     dh,ah
  4040c4:	rep outs dx,BYTE PTR ds:[esi]
  4040c6:	stc    
  4040c7:	xor    eax,0xc8a0ba70
  4040cc:	cmp    BYTE PTR [edi-0x7d],bl
  4040cf:	push   eax
  4040d0:	fsubr  DWORD PTR [esi+0x7f]
  4040d3:	add    eax,0x5e08481d
  4040d8:	lods   al,BYTE PTR ds:[esi]
  4040d9:	sub    ch,BYTE PTR [edi+0x3d1fe3ac]
  4040df:	and    al,0x56
  4040e1:	dec    esi
  4040e2:	call   0x202c2f23
  4040e7:	adc    DWORD PTR [eax-0x521d4ffe],ecx
  4040ed:	or     BYTE PTR [eax+0x17],0x25
  4040f1:	sbb    eax,0xd75742e0
  4040f6:	(bad)  
  4040f7:	test   DWORD PTR [edi-0x62a7a364],0x3fe0206
  404101:	(bad)  
  404103:	dec    edx
  404104:	add    eax,0xb982f4ff
  404109:	inc    esi
  40410a:	test   DWORD PTR [edi-0x4f],edx
  40410d:	xor    eax,0x58d4d76
  404112:	xchg   edx,eax
  404113:	adc    al,0x73
  404115:	jmp    0xf2ca:0x9dcafdf9
  40411c:	jl     0x4040e4
  40411e:	repz or BYTE PTR [ebp+0x1a99ac2a],cl
  404125:	pop    es
  404126:	mov    esp,0xa7b15831
  40412b:	xchg   al,al
  40412d:	mov    bh,0x93
  40412f:	js     0x404102
  404131:	jmp    0x620e:0x828f3c3c
  404138:	daa    
  404139:	div    ecx
  40413b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413c:	das    
  40413d:	dec    edi
  40413e:	jmp    0xd713:0x661aadd8
  404145:	sbb    BYTE PTR [eax],ah
  404147:	or     al,0x49
  404149:	pushf  
  40414a:	pop    ebp
  40414b:	dec    edx
  40414c:	inc    edi
  40414d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414e:	fsub   DWORD PTR [esi-0x80]
  404151:	ret    
  404152:	mov    WORD PTR [edx-0x3a8d12e0],ss
  404158:	mov    ah,0xcd
  40415a:	test   eax,0xa1e9ac56
  40415f:	icebp  
  404160:	mov    bh,0x27
  404162:	sub    eax,0xf5a33e2a
  404167:	sub    DWORD PTR [edx+ebp*4],edi
  40416a:	dec    edx
  40416b:	push   0xba2a46e5
  404170:	pusha  
  404171:	mov    edx,DWORD PTR [edi+0x5648bc1f]
  404177:	scas   al,BYTE PTR es:[edi]
  404178:	mov    ebx,0x7cbcd5dc
  40417d:	dec    eax
  40417e:	daa    
  40417f:	push   cs
  404180:	in     eax,dx
  404181:	aas    
  404182:	je     0x4041ce
  404184:	xchg   ebx,eax
  404185:	in     eax,0x38
  404187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404188:	popf   
  404189:	or     BYTE PTR [eax+0x1c8ba331],bh
  40418f:	fcom   DWORD PTR [eax]
  404191:	jg     0x404150
  404193:	mov    ecx,cr6
  404196:	ret    0xe265
  404199:	ret    
  40419a:	scas   eax,DWORD PTR es:[edi]
  40419b:	dec    esi
  40419c:	sbb    al,0x95
  40419e:	leave  
  40419f:	and    eax,0x34631564
  4041a4:	jl     0x404164
  4041a6:	push   ss
  4041a7:	push   edx
  4041a8:	js     0x404173
  4041aa:	push   ebp
  4041ab:	(bad)  
  4041ac:	dec    esi
  4041ad:	pop    eax
  4041ae:	repnz xchg edi,eax
  4041b0:	sub    al,BYTE PTR [esi-0x50]
  4041b3:	and    dl,bh
  4041b5:	popf   
  4041b6:	and    al,0xfe
  4041b8:	adc    eax,0xb98923ea
  4041bd:	and    eax,0x25b11b6c
  4041c2:	and    eax,0x7a91d0be
  4041c7:	sbb    al,0xc0
  4041c9:	cwde   
  4041ca:	sub    eax,0xb48f3060
  4041cf:	mov    edi,0x8e37778a
  4041d4:	sbb    ecx,edi
  4041d6:	lahf   
  4041d7:	jb     0x404250
  4041d9:	jecxz  0x4041aa
  4041db:	mov    BYTE PTR ds:0x1e33438c,0xc
  4041e2:	or     eax,0x93568e87
  4041e7:	out    dx,al
  4041e8:	in     al,dx
  4041e9:	add    cl,BYTE PTR [ebp+0x3e]
  4041ec:	out    dx,al
  4041ed:	pushf  
  4041ee:	in     al,0xed
  4041f0:	mov    dl,0xc0
  4041f2:	and    al,0x1c
  4041f4:	jmp    0x4041e6
  4041f6:	adc    BYTE PTR [ecx-0x34b5a52],dh
  4041fc:	add    cl,BYTE PTR [eax]
  4041fe:	ins    BYTE PTR es:[edi],dx
  4041ff:	and    eax,0xc720cea4
  404204:	mov    ds,WORD PTR [edi+esi*8+0x3eea4dbe]
  40420b:	xchg   edi,eax
  40420c:	loope  0x4041bf
  40420e:	inc    esp
  40420f:	sub    edx,DWORD PTR [esi+0x2a]
  404212:	jmp    0x404273
  404214:	add    BYTE PTR [ecx-0x53ad6f4],bh
  40421a:	cmc    
  40421b:	ins    DWORD PTR es:[edi],dx
  40421c:	repz fstp DWORD PTR [edx+ebp*8]
  404220:	mov    ah,0x57
  404222:	rol    DWORD PTR [edi+0x2ed8a720],cl
  404228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404229:	iret   
  40422a:	leave  
  40422b:	push   0x203dcdc2
  404230:	mov    ah,0xfd
  404232:	push   edx
  404233:	data16 test al,0x3f
  404236:	mov    eax,ds:0x15f51dad
  40423b:	test   BYTE PTR [edx+eax*8+0x7d],0x23
  404240:	inc    edi
  404241:	mov    esi,0x9ed76142
  404246:	jmp    0x3141bc65
  40424b:	stos   DWORD PTR es:[edi],eax
  40424c:	dec    ebx
  40424d:	mov    ds:0x1e46ee7e,al
  404252:	or     eax,esi
  404254:	(bad)  
  404256:	and    al,0xa3
  404258:	loop   0x40426e
  40425a:	dec    esp
  40425b:	aad    0x71
  40425d:	(bad)  
  40425f:	mov    edi,0xc8c55a8
  404264:	jg     0x404232
  404266:	dec    eax
  404267:	mov    dh,BYTE PTR [eax-0x262a297f]
  40426d:	(bad)  
  40426e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40426f:	pop    ebx
  404270:	mov    ah,0x20
  404272:	add    edi,DWORD PTR [ecx+0xb]
  404275:	dec    edi
  404276:	rcr    BYTE PTR [esi-0x7175c868],0x3a
  40427d:	iret   
  40427e:	jmp    0xf1cd007c
  404283:	in     eax,0x53
  404285:	jl     0x4042ff
  404287:	mov    ch,0x6e
  404289:	loopne 0x4042c3
  40428b:	popf   
  40428c:	out    dx,eax
  40428d:	pop    ebp
  40428e:	dec    edi
  40428f:	aam    0xa8
  404291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404292:	(bad)
  404295:	call   0x4e48:0xc5812e7b
  40429c:	mov    eax,ds:0xf259471e
  4042a1:	jae    0x40428e
  4042a3:	bound  ebp,QWORD PTR [eax]
  4042a5:	xchg   edi,eax
  4042a6:	push   esp
  4042a7:	xchg   DWORD PTR [ecx-0x63],ebx
  4042aa:	inc    edx
  4042ab:	jg     0x4042ea
  4042ad:	mov    eax,DWORD PTR [edx+eiz*4+0x301c1d8d]
  4042b4:	push   eax
  4042b5:	outs   dx,DWORD PTR ds:[esi]
  4042b6:	pop    edi
  4042b7:	fidiv  DWORD PTR [edi+0x1fd6640]
  4042bd:	sub    ah,0xb5
  4042c0:	or     al,0x34
  4042c2:	sahf   
  4042c3:	das    
  4042c4:	les    esi,FWORD PTR [edx]
  4042c6:	sbb    dl,BYTE PTR [edi+0x49]
  4042c9:	xlat   BYTE PTR ds:[ebx]
  4042ca:	mov    bh,0x98
  4042cc:	adc    edi,edx
  4042ce:	cld    
  4042cf:	inc    eax
  4042d0:	into   
  4042d1:	fcomp  QWORD PTR [eax-0x35]
  4042d4:	mov    esi,0x985e5611
  4042d9:	mov    al,ds:0xf4cc1690
  4042de:	sbb    edx,edi
  4042e0:	sbb    al,0x99
  4042e2:	popa   
  4042e3:	fwait
  4042e4:	jb     0x4042a6
  4042e6:	sbb    ebx,DWORD PTR [ebp-0x4a]
  4042e9:	xor    eax,0x758d0761
  4042ee:	mov    eax,DWORD PTR [edx-0x2b]
  4042f1:	add    al,0xe2
  4042f3:	ins    BYTE PTR es:[edi],dx
  4042f4:	add    DWORD PTR [eax-0x3d],esp
  4042f7:	add    eax,DWORD PTR [ebx]
  4042f9:	push   edx
  4042fa:	dec    edi
  4042fb:	std    
  4042fc:	in     eax,0xb0
  4042fe:	out    dx,al
  4042ff:	push   cs
  404300:	mov    cl,BYTE PTR [eax+edx*2-0x6f]
  404304:	dec    esi
  404305:	test   DWORD PTR [ebp-0x13],edi
  404308:	mov    BYTE PTR [ecx+edx*1-0x80],0x76
  40430d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430e:	mov    eax,ds:0x8a42b5dd
  404313:	test   DWORD PTR [eax-0x4c7d58d5],0x77d9038
  40431d:	pop    ss
  40431e:	imul   ecx,DWORD PTR [ebp+esi*8+0x16],0x6a952a68
  404326:	repz push edx
  404328:	ds int 0x6c
  40432b:	xor    dh,al
  40432d:	cli    
  40432e:	out    0x85,eax
  404330:	repz sbb BYTE PTR [eax],ah
  404333:	cmp    bl,BYTE PTR [ecx-0xa473ded]
  404339:	sbb    edi,DWORD PTR [edi]
  40433b:	add    ebx,0x206d6bdb
  404341:	scas   al,BYTE PTR es:[edi]
  404342:	retf   0xc801
  404345:	cwde   
  404346:	shl    BYTE PTR ss:[ebx-0x72],cl
  40434a:	int    0x28
  40434c:	mov    al,0xe8
  40434e:	data16 jp 0x40436e
  404351:	mov    eax,0xeb9bb973
  404356:	es push esi
  404358:	push   cs
  404359:	daa    
  40435a:	adc    DWORD PTR [edi+0x7d5c339],0xe66a32a5
  404364:	loop   0x404392
  404366:	cmc    
  404367:	mov    eax,ds:0x224a2732
  40436c:	dec    ebp
  40436d:	mov    cl,0x85
  40436f:	dec    ebx
  404370:	ja     0x4042f3
  404372:	test   cl,dl
  404374:	sbb    ah,BYTE PTR [ebp+0x15]
  404377:	pushf  
  404378:	pop    ebx
  404379:	xchg   esi,eax
  40437a:	cmp    BYTE PTR [ebx+0xd],cl
  40437d:	fst    DWORD PTR [edx-0x28]
  404380:	loopne 0x404384
  404382:	loopne 0x404333
  404384:	push   es
  404385:	push   0xffffff95
  404387:	mov    al,ds:0x9d5b419d
  40438c:	push   ebx
  40438d:	xor    DWORD PTR ds:0x531bbb07,esi
  404393:	in     eax,dx
  404394:	dec    esi
  404395:	ins    BYTE PTR es:[edi],dx
  404396:	ins    BYTE PTR es:[edi],dx
  404397:	sbb    al,0xa0
  404399:	ja     0x4043e8
  40439b:	test   eax,0x7faf17b5
  4043a0:	call   0x8945:0x99aab11
  4043a7:	push   ds
  4043a8:	out    dx,al
  4043a9:	fmulp  st(5),st
  4043ab:	inc    edx
  4043ac:	and    al,0xcd
  4043ae:	pop    esi
  4043af:	lea    edi,[edi-0x3a]
  4043b2:	dec    ebp
  4043b3:	ficomp WORD PTR [ecx*2+0x7cf5782a]
  4043ba:	out    dx,eax
  4043bb:	jb     0x40439a
  4043bd:	xor    al,0x4b
  4043bf:	fcmove st,st(7)
  4043c1:	mov    ch,0xf3
  4043c3:	dec    ebx
  4043c4:	mov    ebx,0xf61d0142
  4043c9:	ja     0x4043bf
  4043cb:	xchg   ebp,eax
  4043cc:	gs cmp esp,edi
  4043cf:	fstp   DWORD PTR [esi+0x66]
  4043d2:	imul   edi,esp,0xb48d3865
  4043d8:	je     0x40435e
  4043da:	push   ebp
  4043db:	popa   
  4043dc:	in     eax,dx
  4043dd:	mov    eax,ds:0x6b3e6bc8
  4043e2:	add    DWORD PTR [ebx],ebp
  4043e4:	into   
  4043e5:	fiadd  DWORD PTR [edi]
  4043e7:	mov    edx,0x7f0ca2ed
  4043ec:	imul   DWORD PTR [esi]
  4043ee:	add    DWORD PTR [eax],ebp
  4043f0:	cmp    BYTE PTR [edi+ecx*8],cl
  4043f3:	mul    DWORD PTR [eax+0x42fb34d2]
  4043f9:	jmp    0x3dcb:0xfd174c66
  404400:	aaa    
  404401:	int    0xf
  404403:	mov    edi,0x3a37f87d
  404408:	iret   
  404409:	and    BYTE PTR ds:0x2925b11f,al
  40440f:	pop    ebp
  404410:	jmp    0x6ae68acc
  404415:	push   edi
  404416:	xchg   BYTE PTR [ebx-0x53],bl
  404419:	rcr    DWORD PTR [edx-0x56],cl
  40441c:	ror    DWORD PTR [edi+0x39328673],0xe1
  404423:	sti    
  404424:	and    ebp,ecx
  404426:	pop    esi
  404427:	lock in al,0xd0
  40442a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40442b:	add    ch,ah
  40442d:	ins    BYTE PTR es:[edi],dx
  40442e:	jl     0x404459
  404430:	mov    ebx,0x9eb1fff2
  404435:	adc    al,0x3b
  404437:	mov    ah,ah
  404439:	xchg   ebx,eax
  40443a:	iret   
  40443b:	xchg   DWORD PTR [edx],esp
  40443d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40443e:	dec    eax
  40443f:	pop    ebx
  404440:	pop    ebp
  404441:	push   ecx
  404442:	leave  
  404443:	cmp    bl,BYTE PTR [edx+0x376d48ab]
  404449:	popf   
  40444a:	loope  0x4044c4
  40444c:	in     al,0x73
  40444e:	(bad)  
  40444f:	mov    esp,0x44902c13
  404454:	push   edx
  404455:	pop    ebp
  404456:	call   0x82a2:0x6f935ce2
  40445d:	bound  ebp,QWORD PTR [eax+0x23]
  404460:	adc    al,0x1
  404462:	das    
  404463:	dec    cx
  404465:	lea    ebp,[eax-0x3]
  404468:	xlat   BYTE PTR ds:[ebx]
  404469:	mov    DWORD PTR [edi-0x42a0bf9e],esi
  40446f:	xlat   BYTE PTR ds:[ebx]
  404470:	or     ch,bl
  404472:	cmp    BYTE PTR [eax-0x24],dl
  404475:	lock inc edx
  404477:	push   eax
  404478:	cmp    BYTE PTR [edx-0x65d7727b],bl
  40447e:	fst    DWORD PTR ds:0x58acbb07
  404484:	mul    BYTE PTR [ecx+0x39890995]
  40448a:	out    0x7,al
  40448c:	mov    edi,0xfa2b45f
  404491:	pop    ss
  404492:	ins    DWORD PTR es:[edi],dx
  404493:	popf   
  404494:	mov    bl,0xf0
  404496:	hlt    
  404497:	imul   esp,DWORD PTR [edi],0x619794aa
  40449d:	in     al,dx
  40449e:	mov    bl,0x9c
  4044a0:	xor    DWORD PTR [esi],0xb8ad6a55
  4044a6:	call   0x8074:0x6c973a3f
  4044ad:	addr16 aad 0xa8
  4044b0:	inc    ecx
  4044b1:	mov    dl,0x45
  4044b3:	cmc    
  4044b4:	call   0x64e0:0xe606444
  4044bb:	xor    edx,ebp
  4044bd:	xchg   edx,eax
  4044be:	ficom  DWORD PTR [edi-0x43e8c968]
  4044c4:	mov    WORD PTR [ecx+0x1b99684f],ds
  4044ca:	adc    BYTE PTR [esi-0x4b7e8da9],bl
  4044d0:	adc    eax,0xe98987ed
  4044d5:	mov    esi,0x491f39ff
  4044da:	scas   al,BYTE PTR es:[edi]
  4044db:	out    0x51,al
  4044dd:	mov    al,0x19
  4044df:	mov    dl,0x24
  4044e1:	scas   eax,DWORD PTR es:[edi]
  4044e2:	mov    ah,0xee
  4044e4:	xchg   ebx,eax
  4044e5:	jmp    0x78b4:0xaffee147
  4044ec:	jp     0x404501
  4044ee:	stos   DWORD PTR es:[edi],eax
  4044ef:	push   ebp
  4044f0:	add    bl,BYTE PTR [esi-0x2593a90]
  4044f6:	(bad)  
  4044f7:	(bad)  
  4044f8:	and    ebx,DWORD PTR [esi-0x66]
  4044fb:	jne    0x404481
  4044fd:	jecxz  0x4044c3
  4044ff:	mov    edi,0x40e8198a
  404504:	cmp    edx,DWORD PTR [esi+0x74]
  404507:	outs   dx,BYTE PTR ds:[esi]
  404508:	hlt    
  404509:	sub    bh,bl
  40450b:	push   es
  40450c:	and    eax,0x81a91d1a
  404511:	cli    
  404512:	into   
  404513:	or     al,0xa2
  404515:	jge    0x404574
  404517:	scas   eax,DWORD PTR es:[edi]
  404518:	or     BYTE PTR [eax+0x3e],dl
  40451b:	cmp    dl,BYTE PTR [ecx+eax*1]
  40451e:	ins    BYTE PTR es:[edi],dx
  40451f:	mov    al,0x2b
  404521:	test   BYTE PTR [esi+0x4c],dh
  404524:	mov    eax,ds:0xcd2e860e
  404529:	data16 int3 
  40452b:	jnp    0x404569
  40452d:	sub    BYTE PTR [ebp-0x42],dh
  404530:	push   edx
  404531:	loope  0x40454d
  404533:	push   0x5c
  404535:	pop    ebx
  404536:	loop   0x40453b
  404538:	rol    BYTE PTR [eax+ebx*2+0x48f120a],1
  40453f:	jl     0x40450c
  404541:	adc    dh,BYTE PTR [eax-0x2c68d421]
  404547:	sbb    BYTE PTR [edx+0x6f],ah
  40454a:	enter  0xef23,0xa9
  40454e:	ins    DWORD PTR es:[edi],dx
  40454f:	cmp    al,0x83
  404551:	adc    DWORD PTR [edx],esi
  404553:	ins    DWORD PTR es:[edi],dx
  404554:	sub    BYTE PTR [ebx-0x11],bh
  404557:	add    eax,0x5e3e3a71
  40455c:	loope  0x4045da
  40455e:	je     0x4045a5
  404560:	inc    edi
  404561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404562:	push   cs
  404563:	jle    0x40451c
  404565:	bound  esp,QWORD PTR [edx+0x3952860a]
  40456b:	push   ds
  40456c:	and    bl,BYTE PTR [ebp+0x27]
  40456f:	mov    esp,DWORD PTR [ebp+0x18]
  404572:	mov    al,ds:0xd0138b89
  404577:	or     DWORD PTR [eax-0x68edca70],esi
  40457d:	cwde   
  40457e:	fstp   QWORD PTR [edx+0xc0ed726]
  404584:	test   bh,bh
  404586:	and    esp,DWORD PTR [ebx+ebp*2-0x7c]
  40458a:	sbb    edi,DWORD PTR [edi]
  40458c:	cmp    DWORD PTR [eax+edx*2+0x678e3243],edi
  404593:	add    eax,0x4144a4fd
  404598:	adc    ebx,ecx
  40459a:	out    0x7a,eax
  40459c:	mov    ebp,0x164a8863
  4045a1:	ret    
  4045a2:	jg     0x4045da
  4045a4:	cmp    BYTE PTR [edi-0x7d],bh
  4045a7:	push   0xffffff8c
  4045a9:	dec    edi
  4045aa:	(bad)  
  4045ab:	mov    gs,WORD PTR [ecx+ebx*1]
  4045ae:	mov    cl,0xb2
  4045b0:	add    DWORD PTR [eax],0x629f7c70
  4045b6:	in     eax,0x65
  4045b8:	sub    BYTE PTR [edx+ecx*2-0x32],0x31
  4045bd:	xchg   bh,ah
  4045bf:	or     dl,BYTE PTR [ebx]
  4045c1:	daa    
  4045c2:	cmp    ebp,DWORD PTR [edi]
  4045c4:	pop    esi
  4045c5:	cmp    DWORD PTR [edi+0x6fdb594a],ebp
  4045cb:	add    esp,DWORD PTR [esi-0x2d]
  4045ce:	dec    ebp
  4045cf:	jb     0x404630
  4045d1:	dec    esp
  4045d2:	test   al,0xde
  4045d4:	jge    0x4045b9
  4045d6:	adc    ebx,DWORD PTR [ebp-0x49127210]
  4045dc:	xor    BYTE PTR [edx-0x3c],ch
  4045df:	inc    ebx
  4045e0:	(bad)  [eax-0x4a97d26b]
  4045e6:	xchg   edx,eax
  4045e7:	mov    ebp,0x8fcb7598
  4045ec:	out    0x1c,eax
  4045ee:	jle    0x404595
  4045f0:	push   ecx
  4045f1:	xchg   BYTE PTR [ebx],ch
  4045f3:	ficomp DWORD PTR [eax+0x51]
  4045f6:	nop
  4045f7:	and    BYTE PTR [esi+0x72],0xaa
  4045fb:	cs push ebx
  4045fd:	sbb    BYTE PTR [ecx+edi*8],cl
  404600:	out    dx,al
  404601:	int3   
  404602:	mov    ch,0xae
  404604:	adc    edi,ebp
  404606:	adc    esi,ebp
  404608:	pop    ss
  404609:	dec    ebx
  40460a:	push   edx
  40460b:	sbb    al,0x9c
  40460d:	mov    cl,0xaf
  40460f:	neg    BYTE PTR [edx+ecx*4-0x4f]
  404613:	xchg   ebx,eax
  404614:	fstp   DWORD PTR [edx]
  404616:	push   cs
  404617:	int3   
  404618:	mov    dl,BYTE PTR [ecx+0x7a]
  40461b:	data16 aad 0xf6
  40461e:	cmc    
  40461f:	and    al,0x6e
  404621:	ja     0x40462a
  404623:	retf   0xfb90
  404626:	loope  0x4046a0
  404628:	push   0xffffff95
  40462a:	jnp    0x40469a
  40462c:	jmp    0xd5a00320
  404631:	jnp    0x40463d
  404633:	push   es
  404634:	repnz test DWORD PTR [ebp-0x2c75df38],ecx
  40463b:	dec    ebp
  40463c:	sub    DWORD PTR [eax],0x16
  40463f:	xor    al,0x9a
  404641:	(bad)  
  404642:	xor    eax,0x91f32717
  404647:	mov    dh,BYTE PTR [edx-0x3275c82a]
  40464d:	jne    0x4046ab
  40464f:	loope  0x4046b8
  404651:	xchg   esi,ebp
  404653:	dec    esi
  404654:	sub    ebp,esi
  404656:	loopne 0x404615
  404658:	pop    ebp
  404659:	lds    eax,FWORD PTR ds:0xf1d8e3e9
  40465f:	add    eax,0xf77ef5f4
  404664:	mov    al,0xa1
  404666:	mov    bp,WORD PTR [esi]
  404669:	add    ecx,0xce70bffe
  40466f:	lods   eax,DWORD PTR ds:[esi]
  404670:	push   esp
  404671:	sti    
  404672:	ss mov cl,0x3c
  404675:	jle    0x40463f
  404677:	push   es
  404678:	fadd   st(5),st
  40467a:	fnstsw WORD PTR [ebx+0x16]
  40467d:	dec    edi
  40467e:	pop    esi
  40467f:	cmc    
  404680:	call   0xc226f484
  404685:	out    0xa2,eax
  404687:	xchg   bl,ah
  404689:	int3   
  40468a:	push   0xffffff9c
  40468c:	and    dl,BYTE PTR [eax]
  40468e:	xchg   edx,eax
  40468f:	xchg   ebx,eax
  404690:	idiv   DWORD PTR [ebx]
  404692:	cwde   
  404693:	inc    esi
  404694:	push   cs
  404695:	mov    bl,ch
  404697:	or     dh,al
  404699:	nop
  40469a:	sbb    BYTE PTR [edi],cl
  40469c:	push   ss
  40469d:	outs   dx,BYTE PTR ds:[esi]
  40469e:	fisub  WORD PTR [eax+ebx*1]
  4046a1:	hlt    
  4046a2:	adc    al,0x4b
  4046a4:	sub    dl,BYTE PTR [ebp-0x47]
  4046a7:	sar    DWORD PTR [ecx-0x2a],1
  4046aa:	bound  edx,QWORD PTR [ebx-0x3d]
  4046ad:	xchg   ecx,eax
  4046ae:	jb     0x40469a
  4046b0:	mov    ecx,0xc243f7cd
  4046b5:	mov    bh,0x10
  4046b7:	dec    DWORD PTR [edx]
  4046b9:	nop
  4046ba:	push   ss
  4046bb:	int3   
  4046bc:	add    bl,dl
  4046be:	cmp    DWORD PTR [edx],eax
  4046c0:	das    
  4046c1:	xchg   esi,eax
  4046c2:	call   0x43f4:0x6f58156
  4046c9:	push   ebp
  4046ca:	call   0xe3e9e94c
  4046cf:	mov    ch,0x2c
  4046d1:	pop    edx
  4046d2:	mov    cl,0xd8
  4046d4:	and    DWORD PTR [ebx+0x8775c75],esi
  4046da:	outs   dx,BYTE PTR ds:[esi]
  4046db:	out    dx,eax
  4046dc:	dec    eax
  4046dd:	out    0x57,al
  4046df:	fisubr WORD PTR [esi+ecx*4+0x44]
  4046e3:	mov    cs,WORD PTR [edi-0x1f74d4dc]
  4046e9:	in     eax,0x84
  4046eb:	int    0xaf
  4046ed:	(bad)  
  4046ee:	scas   al,BYTE PTR es:[edi]
  4046ef:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4046f1:	retf   
  4046f2:	pusha  
  4046f3:	mov    esp,0xbd251d9d
  4046f8:	xor    BYTE PTR [ebp-0x140e551d],dh
  4046fe:	fwait
  4046ff:	push   ecx
  404700:	and    cl,BYTE PTR [ebx]
  404702:	sub    BYTE PTR [esi+ebp*4+0x740760c5],ah
  404709:	js     0x4046e0
  40470b:	popf   
  40470c:	data16 ror BYTE PTR [edi],0x58
  404710:	sbb    bh,BYTE PTR [eax-0x13e01ee4]
  404716:	jo     0x404700
  404718:	mov    ecx,0xa50dbf57
  40471d:	fwait
  40471e:	push   cs
  40471f:	jge    0x404795
  404721:	ds retf 
  404723:	loope  0x404705
  404725:	add    esi,DWORD PTR [edi]
  404727:	fstp   TBYTE PTR [eax+eiz*4+0x58e54763]
  40472e:	cmp    eax,DWORD PTR [ebx+0x37cd2e3b]
  404734:	cdq    
  404735:	daa    
  404736:	dec    ebx
  404737:	nop
  404738:	das    
  404739:	dec    eax
  40473a:	shr    BYTE PTR [ecx],0xb6
  40473d:	push   edx
  40473e:	sbb    BYTE PTR [esi],0x3f
  404741:	xchg   ebp,eax
  404742:	outs   dx,BYTE PTR ds:[esi]
  404743:	loope  0x404755
  404745:	daa    
  404746:	push   esp
  404747:	push   0xffffffe0
  404749:	outs   dx,DWORD PTR ds:[esi]
  40474a:	(bad)  
  40474b:	icebp  
  40474c:	or     dh,BYTE PTR [edi]
  40474e:	adc    ch,BYTE PTR [edx+0x190f06b7]
  404754:	push   esp
  404755:	adc    esp,DWORD PTR [eax+0x2dc652a2]
  40475b:	adc    cl,BYTE PTR [edi]
  40475d:	ja     0x4047ab
  40475f:	mov    ss,esp
  404761:	popf   
  404762:	and    dh,ah
  404764:	jp     0x4047ce
  404766:	pop    ebp
  404767:	pop    esi
  404768:	mov    bl,0x60
  40476a:	out    dx,eax
  40476b:	pop    es
  40476c:	mov    al,0x5f
  40476e:	in     eax,dx
  40476f:	jmp    0x4047e2
  404771:	jno    0x40476d
  404773:	rcl    dh,1
  404775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404776:	fstp   DWORD PTR [edx+0x4449a6e4]
  40477c:	bound  ebp,QWORD PTR [ebx+ebp*2+0x6beb4a9e]
  404783:	lods   eax,DWORD PTR ds:[esi]
  404784:	and    esi,ebx
  404786:	xchg   ebp,eax
  404787:	add    edi,esp
  404789:	adc    bl,BYTE PTR gs:[ebx-0x58441cf8]
  404790:	pop    edi
  404791:	xor    ecx,ecx
  404793:	out    dx,al
  404794:	shl    DWORD PTR [edx],1
  404796:	sub    eax,ebx
  404798:	push   edi
  404799:	pop    edx
  40479a:	test   al,0x40
  40479c:	xchg   ebx,ebp
  40479e:	push   0x62
  4047a0:	pop    es
  4047a1:	call   0x75a1a71b
  4047a6:	add    DWORD PTR [ebx+edi*1-0x1e],esi
  4047aa:	push   eax
  4047ab:	push   0xc17e198b
  4047b0:	mov    esi,0x73a8d793
  4047b5:	popf   
  4047b6:	push   esi
  4047b7:	fcom   st(2)
  4047b9:	pusha  
  4047ba:	(bad)  
  4047bc:	ret    0xb011
  4047bf:	stos   BYTE PTR es:[edi],al
  4047c0:	retf   0x2358
  4047c3:	jmp    0xf10d:0xf66705e5
  4047ca:	sbb    BYTE PTR [edi],ch
  4047cc:	out    dx,eax
  4047cd:	repnz scas eax,DWORD PTR es:[edi]
  4047cf:	js     0x404843
  4047d1:	cli    
  4047d2:	cmp    dl,bl
  4047d4:	ret    
  4047d5:	inc    edx
  4047d6:	mov    ds,WORD PTR [eax+0x6f]
  4047d9:	imul   eax,DWORD PTR [edi+0x331adbe6],0xfffffff1
  4047e0:	in     eax,0x73
  4047e2:	test   eax,0xa79828d7
  4047e7:	stos   BYTE PTR es:[edi],al
  4047e8:	inc    bx
  4047ea:	inc    esp
  4047eb:	push   esi
  4047ec:	push   ebx
  4047ed:	loop   0x404821
  4047ef:	imul   esi,eax,0xb31fa324
  4047f5:	(bad)  
  4047f6:	rcl    BYTE PTR [ebp+0x51],0xb7
  4047fa:	pinsrw mm4,WORD PTR [ecx-0x28095419],0x7d
  404802:	jmp    0x404825
  404804:	pop    edx
  404805:	pop    edi
  404806:	jno    0x404867
  404808:	push   esp
  404809:	ds cli 
  40480b:	xor    ah,bh
  40480d:	pop    es
  40480e:	fbstp  TBYTE PTR [ebx+ecx*1+0x3f19a7d7]
  404815:	nop
  404816:	and    DWORD PTR [esi],esp
  404818:	pop    ds
  404819:	outs   dx,BYTE PTR ds:[esi]
  40481a:	(bad)  
  40481b:	call   0x2e3c49c6
  404820:	aam    0x30
  404822:	mov    edi,0xe6e7ae1d
  404827:	and    cl,dh
  404829:	out    dx,eax
  40482a:	mov    esp,0x23539903
  40482f:	pushf  
  404830:	xchg   edx,eax
  404831:	xor    eax,0xc94a70c4
  404836:	out    0xd3,al
  404838:	xchg   DWORD PTR [ecx+ebx*8-0x1506893f],esp
  40483f:	push   es
  404840:	ret    0xbb66
  404843:	adc    ebx,DWORD PTR [ecx-0x49f8bf0f]
  404849:	fcom   DWORD PTR [ecx+0x3a3f5bb8]
  40484f:	jg     0x40488b
  404851:	loopne 0x40484f
  404853:	xor    bl,dl
  404855:	imul   edi,DWORD PTR [eax+eiz*1+0x67],0xe692d4d0
  40485d:	push   ecx
  40485e:	es xchg esi,eax
  404860:	push   cs
  404861:	adc    al,0xd9
  404863:	pop    esp
  404864:	das    
  404865:	jmp    0x6134:0xea2fe1b
  40486c:	repz in eax,dx
  40486e:	pop    ss
  40486f:	cmp    al,0xe0
  404871:	lea    edx,[edi-0x6c8053cc]
  404877:	shl    DWORD PTR [edi-0x2d],0x36
  40487b:	popa   
  40487c:	loopne 0x404843
  40487e:	mov    bl,0x62
  404880:	push   ecx
  404881:	or     eax,0xe834b5b4
  404886:	neg    DWORD PTR [ebx+0x56]
  404889:	fistp  WORD PTR [ecx-0x68]
  40488c:	and    eax,0x8a00e748
  404891:	jmp    0x40481a
  404893:	mov    bh,0xe3
  404895:	arpl   WORD PTR [ebx+0x71cfc1c4],bx
  40489b:	cmp    eax,0x3645c5fc
  4048a0:	xchg   DWORD PTR [edx+0x4],ecx
  4048a3:	out    dx,al
  4048a4:	sbb    eax,DWORD PTR [ebp+0xa77b6cb]
  4048aa:	call   FWORD PTR [eax]
  4048ac:	push   ss
  4048ad:	cmp    DWORD PTR [eax],eax
  4048af:	mov    edi,0x57a8c555
  4048b4:	xchg   eax,edi
  4048b6:	adc    DWORD PTR [eax+eax*4],esp
  4048b9:	inc    ebp
  4048ba:	rol    BYTE PTR [ebp-0x70],cl
  4048bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bf:	push   es
  4048c0:	cmovs  edx,DWORD PTR ds:0x6f891db2
  4048c7:	inc    ebx
  4048c8:	mov    ch,0x65
  4048ca:	ret    
  4048cb:	mov    DWORD PTR [edi],edi
  4048cd:	in     al,dx
  4048ce:	jne    0x404920
  4048d0:	and    eax,DWORD PTR [edi]
  4048d2:	xchg   ebx,eax
  4048d3:	mov    edx,0xfd3fa7a1
  4048d8:	sbb    esp,ecx
  4048da:	or     eax,0x7334aff7
  4048df:	stos   DWORD PTR es:[edi],eax
  4048e0:	and    ah,dh
  4048e2:	add    eax,0x5fd5fff0
  4048e7:	dec    ecx
  4048e8:	jmp    0x40489a
  4048ea:	mov    ds:0x602d8855,al
  4048ef:	ins    DWORD PTR es:[edi],dx
  4048f0:	call   0xf9033e69
  4048f5:	mov    ah,0xfb
  4048f7:	repz adc BYTE PTR es:[edx+ecx*2-0x64],bl
  4048fd:	push   ds
  4048fe:	ins    DWORD PTR es:[edi],dx
  4048ff:	ror    DWORD PTR [ebx-0xf],cl
  404902:	cs sahf 
  404904:	mov    ds:0x2df01317,al
  404909:	or     eax,0xe39bb61c
  40490e:	(bad)  
  40490f:	mov    esp,0xf17d4117
  404914:	inc    ebx
  404915:	jmp    0x9e03:0xf45de9b3
  40491c:	push   ds
  40491d:	loop   0x4048e0
  40491f:	lahf   
  404920:	out    0x6,al
  404922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404923:	mov    ebx,cs
  404925:	shl    DWORD PTR [ebp-0x79],1
  404928:	fsubrp st(6),st
  40492a:	mov    ebp,0x9d6b3862
  40492f:	mov    edx,0x75ff8a81
  404934:	jb     0x404933
  404936:	imul   edx,esp,0x921ec8e4
  40493c:	xchg   ecx,eax
  40493d:	ds xor al,0x96
  404940:	jecxz  0x404956
  404942:	push   esi
  404943:	and    DWORD PTR [ecx-0x4],ecx
  404946:	int    0x5f
  404948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404949:	adc    DWORD PTR [ecx-0x61],ebx
  40494c:	mov    ds:0x12cb0c22,eax
  404951:	and    edi,DWORD PTR [edx-0x66]
  404954:	loope  0x404994
  404956:	pop    ss
  404957:	frstor ds:[esi+0x66688e6a]
  40495e:	inc    edi
  40495f:	je     0x4049c2
  404961:	mov    edi,0xc32f794d
  404966:	call   0xa53adb8d
  40496b:	jecxz  0x40497d
  40496d:	jmp    0x4049cb
  40496f:	enter  0xecc9,0x48
  404973:	fcomp  QWORD PTR [edi+0x1339306f]
  404979:	pushf  
  40497a:	call   DWORD PTR [ebp+0x61]
  40497d:	clc    
  40497e:	pop    ecx
  40497f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404980:	aas    
  404981:	and    DWORD PTR [eax-0x5ad21a1b],ebx
  404987:	mov    dl,0x7
  404989:	stc    
  40498a:	mov    DWORD PTR [ebp+0x5ea208b9],esp
  404990:	inc    ebp
  404991:	or     DWORD PTR [edi-0x2a],edi
  404994:	mov    esp,0xcaefe698
  404999:	push   ecx
  40499a:	mov    al,0xe2
  40499c:	xchg   edx,eax
  40499d:	push   ecx
  40499e:	xchg   edi,eax
  40499f:	iret   
  4049a0:	mov    edi,0xa8b8c8bc
  4049a5:	idiv   BYTE PTR [eax+edx*2]
  4049a8:	cdq    
  4049a9:	sbb    BYTE PTR [edi+ebp*1-0x6d8b980d],0x1b
  4049b1:	sbb    al,BYTE PTR [eax+ebp*4+0x38681d8d]
  4049b8:	sub    edx,ebp
  4049ba:	mov    cl,0x15
  4049bc:	dec    eax
  4049bd:	cli    
  4049be:	pop    ebx
  4049bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c0:	xchg   DWORD PTR [ecx+0x1f],ecx
  4049c3:	cmp    eax,0x1775f529
  4049c8:	call   0x88c5:0xd2127114
  4049cf:	das    
  4049d0:	aaa    
  4049d1:	je     0x40498f
  4049d3:	jno    0x40499f
  4049d5:	xchg   ecx,eax
  4049d6:	dec    edx
  4049d7:	mov    edi,0x19a2ba3f
  4049dc:	add    BYTE PTR [ebx+0x572c7624],ch
  4049e2:	js     0x4049d1
  4049e4:	popa   
  4049e5:	sub    BYTE PTR [edi+0x1a],cl
  4049e8:	in     al,0xd2
  4049ea:	pusha  
  4049eb:	test   eax,0xd598fa77
  4049f0:	enter  0xfd55,0xa7
  4049f4:	fiadd  DWORD PTR [ebp+0x4c]
  4049f7:	clc    
  4049f8:	dec    ebp
  4049f9:	add    edx,DWORD PTR [ecx*1-0x71c55f34]
  404a00:	and    DWORD PTR [ebp+0x21b28afa],edx
  404a06:	lods   al,BYTE PTR ds:[esi]
  404a07:	jb     0x404a1c
  404a09:	shl    DWORD PTR [ebx-0x2759b9fb],0xce
  404a10:	fst    QWORD PTR [esi+0x74]
  404a13:	mov    al,ds:0xb7b1466b
  404a18:	mov    esi,DWORD PTR [esp+eiz*8+0x6c]
  404a1c:	mov    ch,0x44
  404a1e:	xchg   BYTE PTR [ebx-0x2a],dl
  404a21:	je     0x4049a7
  404a23:	xchg   edi,eax
  404a24:	mov    ah,0x46
  404a26:	cmp    al,0x6c
  404a28:	mov    ebx,0x599abba7
  404a2d:	mov    ch,0x95
  404a2f:	sbb    DWORD PTR [eax+0x1a],ebp
  404a32:	pop    ss
  404a33:	mov    dh,0x2a
  404a35:	inc    esp
  404a36:	bound  edx,QWORD PTR [esi]
  404a38:	loopne 0x404a82
  404a3a:	pusha  
  404a3b:	ss das 
  404a3d:	test   DWORD PTR [edi+0x266a38e5],ebp
  404a43:	mov    ecx,0x4e601f32
  404a48:	int    0xa7
  404a4a:	mov    ebp,0x3adf9f40
  404a4f:	lock mov ch,0xdf
  404a52:	(bad)  
  404a53:	jnp    0x404a51
  404a55:	or     bh,ah
  404a57:	cmp    bh,ch
  404a59:	and    eax,0xa0379049
  404a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5f:	push   ebx
  404a60:	pusha  
  404a61:	popa   
  404a62:	scas   eax,DWORD PTR es:[edi]
  404a63:	call   0x6419:0x1edaf14
  404a6a:	mov    cl,0x3d
  404a6c:	cmp    BYTE PTR [edi-0x371c9639],0x6f
  404a73:	sub    al,al
  404a75:	xor    DWORD PTR [esi+0x5b],0x8077a993
  404a7c:	out    dx,al
  404a7d:	xchg   ebx,eax
  404a7e:	(bad)  
  404a7f:	fistp  WORD PTR ds:0xc8477c48
  404a85:	mov    ds:0x52783d81,al
  404a8a:	mov    bh,0xb3
  404a8c:	adc    cl,BYTE PTR [esi-0x48]
  404a8f:	mov    ch,0x67
  404a91:	mov    cl,0x10
  404a93:	add    al,0x8f
  404a95:	imul   edx,DWORD PTR [ebp-0x5dc5dd71],0xee0b3c79
  404a9f:	xor    ebx,eax
  404aa1:	gs stos BYTE PTR es:[edi],al
  404aa3:	and    DWORD PTR [ecx-0xf227914],esi
  404aa9:	daa    
  404aaa:	push   eax
  404aab:	cmp    eax,0x4e734bd4
  404ab0:	or     ch,BYTE PTR [ecx+0x65]
  404ab3:	push   cs
  404ab4:	sar    DWORD PTR [edx],1
  404ab6:	add    ebx,ebp
  404ab8:	sub    ebx,DWORD PTR [edi-0x13]
  404abb:	fistp  DWORD PTR [esi-0x31]
  404abe:	push   ebx
  404abf:	xor    eax,0xbf13641f
  404ac4:	mov    bh,ah
  404ac6:	push   ss
  404ac7:	test   dl,0x60
  404aca:	push   0x26
  404acc:	dec    edi
  404acd:	jae    0x404acb
  404acf:	mov    dl,0xa2
  404ad1:	or     eax,0x6c2e4441
  404ad6:	mov    ds:0xd9ae129d,al
  404adb:	(bad)  
  404adc:	lock mov ebp,0xabef6e5c
  404ae2:	mov    edx,0x53cabba
  404ae7:	out    dx,al
  404ae8:	iret   
  404ae9:	jecxz  0x404a9d
  404aeb:	mov    eax,0x4e8df6c4
  404af0:	in     eax,0x81
  404af2:	mov    dh,0x6a
  404af4:	mov    bh,BYTE PTR [esi-0x58]
  404af7:	ja     0x404b4d
  404af9:	jb     0x404b5c
  404afb:	fild   QWORD PTR [ebx+0x2e]
  404afe:	test   BYTE PTR [ebp-0x3e],dh
  404b01:	adc    bh,BYTE PTR [ebx+0x74e2e07c]
  404b07:	cmc    
  404b08:	in     al,0xc1
  404b0a:	jmp    0x4457:0x98b5ebb0
  404b11:	popa   
  404b12:	fidiv  WORD PTR [ecx+0x70346117]
  404b18:	clc    
  404b19:	or     eax,0xb5615ec4
  404b1e:	mov    dh,0x69
  404b20:	cmp    DWORD PTR [ebx-0x1f6c04ea],ebx
  404b26:	jg     0x404b22
  404b28:	(bad)  
  404b29:	fsub   DWORD PTR [ebp-0xcce7f99]
  404b2f:	cmp    DWORD PTR [edx],0xffffff84
  404b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b33:	fstp   TBYTE PTR [ecx+0x7d]
  404b36:	int    0xaa
  404b38:	push   ecx
  404b39:	cs push es
  404b3b:	jl     0x404ad3
  404b3d:	mov    dl,0x5d
  404b3f:	push   ecx
  404b40:	scas   eax,DWORD PTR es:[edi]
  404b41:	(bad)  
  404b42:	out    dx,al
  404b43:	test   DWORD PTR fs:[edx+0x317e51f6],esi
  404b4a:	dec    esp
  404b4b:	cmp    ebx,edi
  404b4d:	stos   BYTE PTR es:[edi],al
  404b4e:	imul   esp,DWORD PTR [esi+0x69],0x31
  404b52:	dec    eax
  404b53:	jmp    0x404b55
  404b55:	add    ch,BYTE PTR [eax+0x6a722ff6]
  404b5b:	inc    edi
  404b5c:	push   esp
  404b5d:	retf   0x629e
  404b60:	and    al,BYTE PTR [edi]
  404b62:	sub    DWORD PTR [edx],edx
  404b64:	xchg   BYTE PTR [edi+ebp*1+0x7e3d43ac],al
  404b6b:	fst    DWORD PTR [edi-0x2e]
  404b6e:	xor    al,0x59
  404b70:	and    ah,BYTE PTR [ebp-0x4b]
  404b73:	adc    dh,BYTE PTR [ebx+esi*2-0x20e6aed6]
  404b7a:	outs   dx,DWORD PTR ds:[esi]
  404b7b:	sbb    ch,dl
  404b7d:	fdivr  DWORD PTR [esi+0xd]
  404b80:	add    ebx,0x3c
  404b83:	cmp    BYTE PTR [edx+0x5e],bh
  404b86:	xor    edx,DWORD PTR [ecx-0x46]
  404b89:	add    dh,BYTE PTR [ebx+edx*4-0x29]
  404b8d:	push   esi
  404b8e:	and    eax,DWORD PTR [ebx-0x24]
  404b91:	lods   eax,DWORD PTR ds:[esi]
  404b92:	mov    ecx,0xc823b46f
  404b97:	cmp    esi,DWORD PTR [esi-0xb9d9f8e]
  404b9d:	ins    BYTE PTR es:[edi],dx
  404b9e:	js     0x404b23
  404ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba1:	push   edi
  404ba2:	imul   ebp,ecx,0x3735d886
  404ba8:	pushf  
  404ba9:	out    0x97,al
  404bab:	retf   
  404bac:	adc    dh,BYTE PTR [ebx]
  404bae:	call   0x14b54497
  404bb3:	adc    eax,0xc14c7d62
  404bb8:	pop    edx
  404bb9:	jnp    0x404c27
  404bbb:	jecxz  0x404b9c
  404bbd:	bound  edx,QWORD PTR [esi+0x5c]
  404bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc1:	loope  0x404c32
  404bc3:	and    edi,eax
  404bc5:	(bad)  
  404bc6:	jg     0x404b67
  404bc8:	mov    esp,0x6f182073
  404bcd:	rcr    BYTE PTR [ebx],1
  404bcf:	push   cs
  404bd0:	in     eax,0xdf
  404bd2:	dec    eax
  404bd3:	fs hlt 
  404bd5:	or     al,0xc5
  404bd7:	not    ebp
  404bd9:	xor    al,0x35
  404bdb:	jle    0x404b93
  404bdd:	xchg   ebp,eax
  404bde:	ret    0xb74b
  404be1:	fld    TBYTE PTR [esi]
  404be3:	cmp    al,BYTE PTR [ebp+0x56156370]
  404be9:	mov    dl,BYTE PTR [ecx-0x483b8413]
  404bef:	cmp    eax,0x519ce4b1
  404bf4:	rol    BYTE PTR ds:0xca71d742,1
  404bfa:	fdiv   st,st(0)
  404bfc:	inc    ebp
  404bfd:	fist   WORD PTR [edi+0x3]
  404c00:	jno    0x404c6a
  404c02:	enter  0x9bd1,0x67
  404c06:	or     ah,dh
  404c08:	leave  
  404c09:	push   ds
  404c0a:	mov    al,0x30
  404c0c:	inc    edx
  404c0d:	pop    ss
  404c0e:	pop    ebp
  404c0f:	test   eax,0x45d1346
  404c14:	cmp    bl,BYTE PTR [ebx]
  404c16:	cmova  edi,DWORD PTR [ebp-0x4a2595f5]
  404c1d:	and    DWORD PTR [eax],ecx
  404c1f:	xor    edx,DWORD PTR fs:[edx]
  404c22:	pop    ecx
  404c23:	push   edi
  404c24:	jmp    0x4328469c
  404c29:	jmp    0x917231ec
  404c2e:	pop    ebp
  404c2f:	data16 mov bh,0xc4
  404c32:	push   es
  404c33:	inc    esi
  404c34:	add    eax,0xda3666c1
  404c39:	les    ebx,FWORD PTR [edi]
  404c3b:	(bad)  
  404c3d:	in     al,dx
  404c3e:	dec    ebp
  404c3f:	ret    0x84bb
  404c42:	sar    DWORD PTR [esi],0xa6
  404c45:	(bad)  
  404c46:	xchg   ebx,eax
  404c47:	add    dh,cl
  404c49:	sbb    bh,ch
  404c4b:	stos   DWORD PTR es:[edi],eax
  404c4c:	(bad)  
  404c4d:	push   ecx
  404c4e:	ret    0x53be
  404c51:	scas   eax,DWORD PTR es:[edi]
  404c52:	or     al,0xb7
  404c54:	imul   eax,DWORD PTR [edi-0x26],0xffffffa2
  404c58:	pusha  
  404c59:	or     eax,0xdc724f40
  404c5e:	imul   ecx,DWORD PTR [eax],0xfffffff0
  404c61:	or     ebp,ebp
  404c63:	dec    eax
  404c64:	dec    ebp
  404c65:	jmp    0x404c19
  404c67:	in     al,0xee
  404c69:	dec    eax
  404c6a:	out    0x52,al
  404c6c:	add    al,0x8c
  404c6e:	(bad)  
  404c6f:	popa   
  404c70:	into   
  404c71:	outs   dx,DWORD PTR ds:[esi]
  404c72:	sub    BYTE PTR [esi+0x56],ah
  404c75:	adc    eax,0x11925808
  404c7a:	add    BYTE PTR ds:0x1a202f36,0x56
  404c81:	jbe    0x404c1b
  404c83:	jge    0x404cff
  404c85:	ja     0x404ce9
  404c87:	jle    0x404cb4
  404c89:	push   ebp
  404c8a:	pop    esp
  404c8b:	xchg   ebx,eax
  404c8c:	xor    al,0xc6
  404c8e:	repnz xchg ebp,eax
  404c90:	stc    
  404c91:	push   ds
  404c92:	push   esi
  404c93:	leave  
  404c94:	pop    esi
  404c95:	nop
  404c96:	mov    edx,0x62a38a38
  404c9b:	cmp    eax,ecx
  404c9d:	lea    esi,[edx+0x0]
  404ca0:	push   ds
  404ca1:	mov    bh,0x6
  404ca3:	retf   0xc6c2
  404ca6:	cmp    eax,0x72e50a9
  404cab:	cmp    eax,0x269207ec
  404cb0:	jle    0x404d18
  404cb2:	xor    DWORD PTR [esi],esi
  404cb4:	xchg   ebp,eax
  404cb5:	add    al,0xd3
  404cb7:	pop    ss
  404cb8:	loope  0x404c5d
  404cba:	mov    dl,0xf3
  404cbc:	pop    esp
  404cbd:	(bad)  
  404cbe:	mov    edi,0xf456c4d6
  404cc3:	xchg   ebx,eax
  404cc4:	aaa    
  404cc5:	enter  0x3863,0x0
  404cc9:	adc    ebp,DWORD PTR [esi+0x6a]
  404ccc:	enter  0x8ac7,0x61
  404cd0:	push   0x6
  404cd2:	mov    WORD PTR [ebp+0x1542352d],fs
  404cd8:	jae    0x404c9d
  404cda:	adc    WORD PTR [ebx+ebp*8],sp
  404cde:	lods   eax,DWORD PTR ds:[esi]
  404cdf:	jno    0x404c6b
  404ce1:	jne    0x404d01
  404ce3:	in     eax,0x32
  404ce5:	dec    ebp
  404ce6:	adc    eax,esp
  404ce8:	sar    DWORD PTR [ecx-0x181e8396],1
  404cee:	mov    ds:0x10f491ef,eax
  404cf3:	out    0xdd,al
  404cf5:	nop    DWORD PTR [eax-0x285419f2]
  404cfc:	jp     0x404d3d
  404cfe:	pop    ebx
  404cff:	ins    BYTE PTR es:[edi],dx
  404d00:	(bad)  
  404d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d02:	sub    BYTE PTR [esp+eax*4-0x56],dl
  404d06:	outs   dx,DWORD PTR ds:[esi]
  404d07:	sub    al,0xd9
  404d09:	mov    ds:0xe9dbc7ec,al
  404d0e:	pop    ss
  404d0f:	shl    BYTE PTR [ebp-0x497de9cb],cl
  404d15:	stc    
  404d16:	xor    al,0x52
  404d18:	jns    0x404d5c
  404d1a:	jl     0x404d22
  404d1c:	in     al,0x8c
  404d1e:	jmp    FWORD PTR [ebp-0x799e2033]
  404d24:	fist   WORD PTR [edi]
  404d26:	mov    ebx,edx
  404d28:	rcr    BYTE PTR [esi],cl
  404d2a:	lahf   
  404d2b:	mov    edx,0x85208874
  404d30:	repz xchg ecx,eax
  404d32:	aas    
  404d33:	adc    eax,0x6045f003
  404d38:	sti    
  404d39:	out    0xa,eax
  404d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d3c:	lock jno 0x404d60
  404d3f:	outs   dx,DWORD PTR es:[esi]
  404d41:	pusha  
  404d42:	sbb    BYTE PTR [esi-0x1c554051],cl
  404d48:	xchg   DWORD PTR [edi+0x4],ecx
  404d4b:	xchg   edi,eax
  404d4c:	cdq    
  404d4d:	mov    dl,0xd2
  404d4f:	lea    ebx,es:[ebx-0x46]
  404d53:	push   esi
  404d54:	retf   0x10b6
  404d57:	repnz dec esp
  404d59:	sub    al,0xa4
  404d5b:	gs jecxz 0x404d6a
  404d5e:	retf   0xb462
  404d61:	iret   
  404d62:	mov    bl,0x6b
  404d64:	lods   al,BYTE PTR ds:[esi]
  404d65:	rol    DWORD PTR [esi+ecx*1+0x69d896bb],cl
  404d6c:	jmp    0xf317:0x4fae3c6f
  404d73:	cmp    ebx,eax
  404d75:	loopne 0x404dd2
  404d77:	addr16 cmp al,0xd4
  404d7a:	iret   
  404d7b:	je     0x404d6d
  404d7d:	xlat   BYTE PTR ds:[ebx]
  404d7e:	aad    0xcf
  404d80:	jmp    0x6053:0x9ba66d2e
  404d87:	pop    eax
  404d88:	xor    bl,BYTE PTR [edx-0x60cd010b]
  404d8e:	mov    ch,BYTE PTR [ebp-0x3d9a3dc3]
  404d94:	pusha  
  404d95:	les    ecx,FWORD PTR ds:0x9cb83f3
  404d9b:	dec    edi
  404d9c:	jbe    0x404db4
  404d9e:	inc    ecx
  404d9f:	jmp    0x9248:0x6508d0ee
  404da6:	aaa    
  404da7:	push   ebp
  404da8:	push   ds
  404da9:	inc    edi
  404daa:	sub    al,0xda
  404dac:	or     ebp,eax
  404dae:	sub    bh,dl
  404db0:	sahf   
  404db1:	mov    bl,0xe7
  404db3:	xchg   ebx,eax
  404db4:	mov    ss,ebx
  404db6:	in     al,0x32
  404db8:	cmp    DWORD PTR [esi-0x2c4b6042],esi
  404dbe:	jge    0x404e1f
  404dc0:	push   edi
  404dc1:	sbb    bl,BYTE PTR [eax-0x5b]
  404dc4:	aad    0xcd
  404dc6:	mov    bl,0xa
  404dc8:	(bad)  
  404dc9:	dec    esp
  404dca:	popf   
  404dcb:	test   cl,0xb3
  404dce:	or     cl,dh
  404dd0:	inc    ebp
  404dd1:	inc    ebp
  404dd2:	adc    eax,0x9d301714
  404dd7:	inc    ebp
  404dd8:	aam    0x8d
  404dda:	or     al,0xf7
  404ddc:	ins    BYTE PTR es:[edi],dx
  404ddd:	repz out 0x4c,eax
  404de0:	xchg   BYTE PTR [ecx],al
  404de2:	call   0x1c8328b4
  404de7:	mov    ah,0xc5
  404de9:	retf   0x8c36
  404dec:	adc    eax,0x76aa3b95
  404df1:	sub    eax,0xb032e2ca
  404df6:	dec    edx
  404df7:	sbb    ch,dh
  404df9:	cmp    cl,BYTE PTR [edx]
  404dfb:	dec    eax
  404dfc:	(bad)  
  404dfd:	mov    ecx,0xd34fd2fd
  404e02:	stos   DWORD PTR es:[edi],eax
  404e03:	xor    ch,BYTE PTR [ebx-0x7cb1fbc]
  404e09:	repz jmp 0x8a34:0x45add1d1
  404e11:	mov    ebx,0x568f4e34
  404e16:	test   al,0xd7
  404e18:	pop    ds
  404e19:	push   edi
  404e1a:	sub    ebx,DWORD PTR [esi+esi*2+0x134bbfe5]
  404e21:	pop    ebp
  404e22:	mov    edx,DWORD PTR [esi+0x4b36e0ba]
  404e28:	or     BYTE PTR [ebx],ch
  404e2a:	pop    eax
  404e2b:	inc    esi
  404e2c:	push   es
  404e2d:	push   edx
  404e2e:	shl    BYTE PTR [esi-0x7c],0x1c
  404e32:	inc    ebp
  404e33:	std    
  404e34:	repz mov ebp,0x5d47c47f
  404e3a:	adc    DWORD PTR [ebx+ebx*2+0x77eb53ba],eax
  404e41:	cmp    DWORD PTR [eax],0xffffff96
  404e44:	pop    esp
  404e45:	mov    ch,0xa6
  404e47:	fbld   TBYTE PTR [ebp+0x61]
  404e4a:	xchg   ecx,eax
  404e4b:	les    ecx,FWORD PTR [ebx]
  404e4d:	xchg   ebp,eax
  404e4e:	out    dx,al
  404e4f:	mov    ebx,DWORD PTR [edx+0x26be78eb]
  404e55:	repz adc ebp,DWORD PTR [esi+0x5e]
  404e59:	mov    BYTE PTR [esi+eiz*8+0x7b7e9f49],dh
  404e60:	loope  0x404e89
  404e62:	or     esp,ecx
  404e64:	xchg   esi,eax
  404e65:	stos   DWORD PTR es:[edi],eax
  404e66:	adc    al,0xea
  404e68:	sahf   
  404e69:	mov    DWORD PTR [ebx+0x2da96435],ecx
  404e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e70:	jb     0x404e74
  404e72:	in     eax,dx
  404e73:	jle    0x404e55
  404e75:	lds    ebx,FWORD PTR [esi]
  404e77:	adc    ebx,edi
  404e79:	xor    eax,0x55f401a8
  404e7e:	mov    ebp,0xabc0c162
  404e83:	xor    BYTE PTR [eax+0x7e],bl
  404e86:	enter  0xd5a7,0x7e
  404e8a:	push   edi
  404e8b:	sbb    esp,ebx
  404e8d:	retf   0x8a4a
  404e90:	push   esp
  404e91:	jbe    0x404e4c
  404e93:	add    edi,DWORD PTR [esi]
  404e95:	mov    ds:0xc9a2d264,al
  404e9a:	jne    0x404e4e
  404e9c:	(bad)
  404ea0:	sbb    cl,ch
  404ea2:	enterw 0x3160,0x52
  404ea7:	sub    BYTE PTR [edx-0x372d7c6f],bh
  404ead:	(bad)  
  404eae:	push   ecx
  404eaf:	je     0x404e71
  404eb1:	fidivr WORD PTR [ebx+0x18]
  404eb4:	test   DWORD PTR [ebx],esp
  404eb6:	aad    0xa6
  404eb8:	sub    al,0x40
  404eba:	push   eax
  404ebb:	or     al,0x7f
  404ebd:	ficomp DWORD PTR [esi+0x4924e514]
  404ec3:	jb     0x404e65
  404ec5:	imul   ebp,DWORD PTR [ebx-0x37],0x7d
  404ec9:	inc    ebx
  404eca:	cmc    
  404ecb:	(bad)  
  404ecc:	xchg   ebx,eax
  404ecd:	and    DWORD PTR [ecx-0x6852d5fd],esi
  404ed3:	cmp    al,0xb6
  404ed5:	retf   
  404ed6:	push   ebx
  404ed7:	das    
  404ed8:	push   ds
  404ed9:	(bad)  
  404edb:	arpl   WORD PTR [ebx],di
  404edd:	pop    esi
  404ede:	lahf   
  404edf:	push   ebx
  404ee0:	ins    DWORD PTR es:[edi],dx
  404ee1:	jge    0x404e8a
  404ee3:	xor    DWORD PTR [esi-0x5223d4c1],0x40179f2a
  404eed:	test   eax,0x4b177f53
  404ef2:	std    
  404ef3:	mov    dl,0x95
  404ef5:	shl    edx,1
  404ef7:	cli    
  404ef8:	shr    DWORD PTR ds:0x8689c25a,0x94
  404eff:	sbb    al,0x5d
  404f01:	daa    
  404f02:	stos   BYTE PTR es:[edi],al
  404f03:	push   es
  404f04:	push   es
  404f05:	aaa    
  404f06:	sbb    eax,0x88bcac0f
  404f0b:	add    eax,0x534f4827
  404f10:	int    0xaa
  404f12:	aam    0x50
  404f14:	outs   dx,DWORD PTR ds:[esi]
  404f15:	adc    eax,0x215b04f0
  404f1a:	inc    esi
  404f1b:	mov    BYTE PTR [edx+0x74],bh
  404f1e:	(bad)  
  404f1f:	int3   
  404f20:	in     al,0xbf
  404f22:	inc    ecx
  404f23:	xor    eax,0x35a5ef55
  404f28:	popa   
  404f29:	jns    0x404ed9
  404f2b:	outs   dx,BYTE PTR ds:[esi]
  404f2c:	xor    al,0xec
  404f2e:	push   esp
  404f2f:	or     ah,BYTE PTR [eax+edi*2]
  404f32:	adc    BYTE PTR [edx-0x18f0eed0],ch
  404f38:	add    esp,esi
  404f3a:	sbb    cl,ah
  404f3c:	push   esi
  404f3d:	scas   eax,DWORD PTR es:[edi]
  404f3e:	icebp  
  404f3f:	cmp    edx,esi
  404f41:	les    edx,FWORD PTR [edi+0x1f]
  404f44:	cmp    bl,BYTE PTR [edi+0x57]
  404f47:	mov    ch,0x42
  404f49:	mov    edi,0x74ecf9b4
  404f4e:	loop   0x404f2d
  404f50:	call   0xcb71:0x9d6e3444
  404f57:	add    eax,0xc86f3c96
  404f5c:	stos   DWORD PTR es:[edi],eax
  404f5d:	xchg   edx,eax
  404f5e:	pop    ss
  404f5f:	mov    BYTE PTR [bp+0x4bfc],bh
  404f64:	loope  0x404f85
  404f66:	js     0x404f95
  404f68:	add    eax,0x97da6776
  404f6d:	iret   
  404f6e:	in     eax,0xe5
  404f70:	jmp    0x6b1f77fa
  404f75:	and    dl,BYTE PTR [ebx+ecx*2-0x75]
  404f79:	(bad)  
  404f7a:	mov    ch,0x8c
  404f7c:	cs inc edi
  404f7e:	cld    
  404f7f:	icebp  
  404f80:	adc    bh,BYTE PTR [eax-0x33]
  404f83:	enter  0xdad8,0x64
  404f87:	jecxz  0x404f49
  404f89:	or     eax,0xa658f513
  404f8e:	push   esp
  404f8f:	and    al,0x3a
  404f91:	rcl    BYTE PTR [edi],1
  404f93:	sub    esp,DWORD PTR [esi+0x16efb40d]
  404f99:	jl     0x404ff4
  404f9b:	and    DWORD PTR [ecx-0x7b],edi
  404f9e:	cmp    BYTE PTR [edx+0x28],bh
  404fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa2:	hlt    
  404fa3:	je     0x405001
  404fa5:	sbb    eax,0x8e4b629d
  404faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fab:	jmp    0xb98c6bcb
  404fb0:	lds    ebx,FWORD PTR [esi+ebp*1]
  404fb3:	loope  0x404f96
  404fb5:	fnsave [ebp+ebp*2-0x1e]
  404fb9:	call   0xe6a8e3d6
  404fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fbf:	pop    es
  404fc0:	(bad)  
  404fc1:	out    dx,eax
  404fc2:	jmp    DWORD PTR [ebx+0x2f914c1d]
  404fc8:	push   ss
  404fc9:	cli    
  404fca:	out    dx,al
  404fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fcc:	add    BYTE PTR [ecx+0x34a4ec56],cl
  404fd2:	(bad)  
  404fd4:	and    ah,ah
  404fd6:	in     eax,0xf6
  404fd8:	popa   
  404fd9:	add    dl,ah
  404fdb:	or     al,0x30
  404fde:	lea    ecx,[eax-0x46b91e66]
  404fe4:	scas   al,BYTE PTR es:[edi]
  404fe5:	push   edi
  404fe6:	cmp    eax,0x3b39eb9d
  404feb:	sbb    DWORD PTR [edx+edi*1-0x2b6f453b],edi
  404ff2:	lock ja 0x404f79
  404ff5:	imul   edi,edx,0x3f5d4c41
  404ffb:	jg     0xada71c81
  405001:	adc    eax,0xf515e8c
  405006:	sahf   
  405007:	and    bl,ah
  405009:	in     eax,dx
  40500a:	pop    es
  40500b:	dec    esi
  40500c:	lods   al,BYTE PTR ds:[esi]
  40500e:	daa    
  40500f:	add    eax,0xb7ec9786
  405014:	dec    edx
  405015:	retf   
  405016:	outs   dx,BYTE PTR ds:[esi]
  405017:	fbld   TBYTE PTR [edx-0x55]
  40501a:	retf   0x1c56
  40501d:	leave  
  40501e:	pop    edi
  40501f:	push   ebx
  405020:	int3   
  405021:	dec    edx
  405022:	and    esp,ecx
  405024:	cdq    
  405025:	mov    dl,0x69
  405027:	mov    BYTE PTR [eax*1+0x1bf1f3f4],dl
  40502e:	mov    dh,0x66
  405030:	mov    eax,ecx
  405032:	out    0x8b,eax
  405034:	addr16 mov ebp,0xcbee19ee
  40503a:	mov    edx,0xe136ae01
  405040:	jns    0x404fe4
  405042:	imul   cl
  405044:	xchg   DWORD PTR [esi],eax
  405046:	outs   dx,BYTE PTR ds:[esi]
  405047:	test   al,0x54
  405049:	stos   BYTE PTR es:[edi],al
  40504a:	fidiv  WORD PTR [eax-0x6a0d233c]
  405050:	pusha  
  405051:	mov    ah,0x54
  405053:	pop    ebx
  405054:	push   esp
  405055:	mov    bh,0x94
  405057:	test   DWORD PTR [edi-0x4],ebx
  40505a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505b:	test   al,0xe1
  40505d:	adc    cl,BYTE PTR [ecx+0x26332312]
  405063:	das    
  405064:	fist   WORD PTR ds:0x689902d9
  40506a:	mov    ds:0x452d9aec,al
  40506f:	psrld  mm2,QWORD PTR cs:[ebx+ebx*2+0x4dce5b94]
  405078:	dec    esi
  405079:	cmp    cl,dl
  40507b:	mov    ebp,0xc5e0138a
  405080:	sti    
  405081:	mov    al,ds:0x280a08a
  405086:	pop    es
  405087:	push   edx
  405088:	aam    0x53
  40508a:	pop    esp
  40508b:	sub    dh,dl
  40508d:	add    BYTE PTR [ebp+ecx*2-0xa277af0],bh
  405094:	outs   dx,DWORD PTR ds:[esi]
  405095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405096:	cld    
  405097:	aaa    
  405098:	jmp    0x56dd:0x533b2122
  40509f:	adc    BYTE PTR [ecx],0xa3
  4050a2:	shl    ecx,0x93
  4050a5:	pop    ebx
  4050a6:	dec    esp
  4050a7:	add    ch,0x5d
  4050aa:	sti    
  4050ab:	push   eax
  4050ac:	in     al,dx
  4050ad:	stos   BYTE PTR es:[edi],al
  4050ae:	(bad)  
  4050af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050b0:	outs   dx,BYTE PTR ds:[esi]
  4050b1:	jmp    0x1d3bdf46
  4050b6:	je     0x405100
  4050b8:	in     eax,dx
  4050b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ba:	mov    ebp,0x61e130db
  4050bf:	shl    edx,0x73
  4050c2:	test   eax,0xdc1059e5
  4050c7:	mov    BYTE PTR [edi-0x60],bh
  4050ca:	ja     0x4050db
  4050cc:	out    0xb8,eax
  4050ce:	sbb    al,0x85
  4050d0:	mov    ds:0xe3ba85bd,al
  4050d5:	cli    
  4050d6:	push   ds
  4050d7:	lods   eax,DWORD PTR ds:[esi]
  4050d8:	fistp  QWORD PTR [edi+0x39]
  4050db:	sbb    cl,dl
  4050dd:	shl    ecx,1
  4050df:	pop    eax
  4050e0:	(bad)  
  4050e1:	xchg   esp,eax
  4050e2:	mov    WORD PTR [ecx+esi*8-0x48],gs
  4050e6:	or     DWORD PTR [eax+0x4693f002],ebx
  4050ec:	out    dx,eax
  4050ed:	or     edx,eax
  4050ef:	adc    al,0x95
  4050f1:	xchg   DWORD PTR [esi+0x4e],eax
  4050f4:	outs   dx,BYTE PTR ds:[esi]
  4050f5:	lahf   
  4050f6:	mov    ds:0xbe749878,eax
  4050fb:	sbb    al,0x95
  4050fd:	ret    
  4050fe:	mov    dh,0x78
  405100:	dec    DWORD PTR [esp+edx*1]
  405103:	inc    ebp
  405104:	mov    bh,0x5f
  405106:	dec    eax
  405107:	pop    es
  405108:	push   ds
  405109:	or     DWORD PTR [edx+0x72],ebx
  40510c:	out    dx,eax
  40510d:	in     eax,0x14
  40510f:	and    al,0x51
  405111:	mov    ?,WORD PTR [ebx-0x3ccf0c06]
  405117:	cmp    BYTE PTR [edx-0x38d27481],dl
  40511d:	std    
  40511e:	xor    ch,ch
  405120:	mov    al,ds:0xd5120a7b
  405125:	sub    BYTE PTR [edx-0x44],ch
  405128:	inc    edx
  405129:	lods   eax,DWORD PTR ds:[esi]
  40512a:	(bad)  
  40512b:	mov    ebp,0x616888a4
  405130:	push   ebp
  405131:	in     eax,0x1d
  405133:	add    edx,DWORD PTR [esi+0x626864c4]
  405139:	push   cs
  40513a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40513b:	push   ss
  40513c:	scas   al,BYTE PTR es:[edi]
  40513d:	jns    0x4050d2
  40513f:	repz iret 
  405141:	jle    0x4051b1
  405143:	inc    ecx
  405144:	jno    0x40515b
  405146:	push   edx
  405147:	fbstp  TBYTE PTR [eax+edx*1+0x17]
  40514b:	xchg   esi,eax
  40514c:	dec    ecx
  40514d:	shl    BYTE PTR [edi+0x14bcd978],1
  405153:	xchg   ebx,eax
  405154:	cli    
  405155:	popa   
  405156:	fdiv   DWORD PTR [esi-0x79]
  405159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40515a:	pop    esi
  40515b:	popa   
  40515c:	cld    
  40515d:	(bad)  
  40515e:	cmp    al,0x4d
  405160:	jae    0x405123
  405162:	lahf   
  405163:	loop   0x4050f2
  405165:	ja     0x4051be
  405167:	lahf   
  405168:	inc    ebp
  405169:	loope  0x4050fc
  40516b:	lock dec esp
  40516d:	adc    al,0x35
  40516f:	mov    dh,0x1f
  405171:	mov    ebp,0xf551924b
  405176:	mov    ebp,0xfeb2d156
  40517b:	push   edi
  40517c:	adc    esi,DWORD PTR [esi]
  40517e:	mov    bh,0x66
  405180:	setb   BYTE PTR [ebx-0x24916730]
  405187:	and    BYTE PTR [ecx+0x77],bh
  40518a:	fisubr DWORD PTR [ebx]
  40518c:	test   al,0xf5
  40518e:	and    BYTE PTR [esi],cl
  405190:	xlat   BYTE PTR ds:[ebx]
  405191:	je     0x405129
  405193:	xor    DWORD PTR [ebx*8+0x70d5e1ca],esp
  40519a:	shr    DWORD PTR [eax],cl
  40519c:	ss popf 
  40519e:	sar    DWORD PTR [ebx],1
  4051a0:	sbb    eax,0x6e319b6b
  4051a5:	mov    ebp,0x5d74a66e
  4051aa:	sahf   
  4051ab:	xchg   DWORD PTR [edx-0x3758e915],edi
  4051b1:	call   DWORD PTR [esi]
  4051b3:	inc    esp
  4051b4:	cmp    esp,DWORD PTR [ecx]
  4051b6:	jb     0x405193
  4051b8:	ret    
  4051b9:	push   0x85d69a17
  4051be:	(bad)  [edx-0x1423b381]
  4051c4:	dec    edx
  4051c5:	jnp    0x4051ef
  4051c7:	adc    DWORD PTR [edi-0x7d9c1032],esi
  4051cd:	pop    eax
  4051ce:	pop    edi
  4051cf:	sar    BYTE PTR [ebp-0x52],cl
  4051d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d3:	les    ecx,FWORD PTR [eax-0x22722db4]
  4051d9:	push   cs
  4051da:	fmul   DWORD PTR [ecx+edx*2+0x18]
  4051de:	adc    BYTE PTR [ecx+0x2213252b],bl
  4051e4:	mov    al,ds:0x6abf0863
  4051e9:	sub    eax,0x899ba82a
  4051ee:	jmp    0x2937:0xfa43a678
  4051f5:	and    eax,0x9b247476
  4051fa:	test   eax,0x7b6690af
  4051ff:	stos   DWORD PTR es:[edi],eax
  405200:	adc    DWORD PTR [edi-0x7b],esp
  405203:	ins    DWORD PTR es:[edi],dx
  405204:	mov    al,0x31
  405206:	adc    BYTE PTR [eax],al
  405208:	mov    edi,0xce3e8f4
  40520d:	xor    cl,BYTE PTR [edx-0x25da50a5]
  405213:	mov    eax,ds:0xb4aab0cc
  405218:	sub    DWORD PTR [ecx],ecx
  40521a:	ins    DWORD PTR es:[edi],dx
  40521b:	fld    TBYTE PTR [esi-0x5e769453]
  405221:	lods   al,BYTE PTR ds:[esi]
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x296b94ee
  405804:	xor    DWORD PTR [edi-0x20],esi
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	jnp    0x40586b
  405810:	dec    eax
  405812:	jb     0x405890
  405814:	dec    edi
  405815:	outs   dx,DWORD PTR ds:[esi]
  405816:	(bad)  
  405817:	shl    BYTE PTR [eax],1
  405819:	ret    
  40581a:	mov    ds:0xf62c84f3,eax
  40581f:	dec    ebp
  405820:	jbe    0x40580a
  405822:	clc    
  405823:	popf   
  405824:	push   ecx
  405825:	jno    0x40581f
  405827:	jp     0x405865
  405829:	std    
  40582a:	or     ebx,DWORD PTR [eax]
  40582c:	test   ah,0xf8
  40582f:	cmp    eax,0x39871d2f
  405834:	aas    
  405835:	cmp    BYTE PTR [edx-0x7b6ebec5],ch
  40583b:	fldlg2 
  40583d:	out    dx,eax
  40583e:	dec    eax
  40583f:	inc    edx
  405840:	outs   dx,DWORD PTR ds:[esi]
  405841:	push   es
  405842:	mov    WORD PTR es:[edx],es
  405845:	nop
  405846:	mov    edi,0x14c3a0
  40584b:	pop    ecx
  40584c:	retf   0x200f
  40584f:	mov    eax,ds:0x711dbca2
  405854:	hlt    
  405855:	cs stos DWORD PTR es:[edi],eax
  405857:	xor    bh,BYTE PTR [eax-0x46]
  40585a:	loope  0x405878
  40585c:	fadd   DWORD PTR [ecx]
  40585e:	sbb    eax,0xb364095e
  405863:	pusha  
  405864:	push   es
  405865:	push   0x5c
  405867:	cmc    
  405868:	and    eax,0x289a2e38
  40586d:	mov    edi,0x42dd3ab0
  405872:	aam    0xf0
  405874:	pop    ebx
  405875:	sbb    BYTE PTR [edi+0x23],bl
  405878:	add    DWORD PTR [edi-0x4a],edx
  40587b:	xlat   BYTE PTR ds:[ebx]
  40587c:	outs   dx,BYTE PTR ds:[esi]
  40587d:	push   es
  40587e:	adc    BYTE PTR [ecx],bl
  405880:	mov    bl,0x4d
  405882:	jne    0x4058e3
  405884:	imul   eax,ebp,0xffffffb2
  405887:	ror    edi,0xb5
  40588a:	mov    edx,0x7876a182
  40588f:	mov    DWORD PTR [ebp-0x1a],edx
  405892:	cmp    ebx,ebx
  405894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405895:	jle    0x4058ac
  405897:	ret    
  405898:	push   eax
  405899:	stos   DWORD PTR es:[edi],eax
  40589a:	dec    ebx
  40589b:	or     ebx,DWORD PTR [edx+edx*2-0x6e]
  40589f:	inc    ebp
  4058a0:	aam    0x29
  4058a2:	sub    al,0xe2
  4058a4:	push   edi
  4058a5:	sahf   
  4058a6:	hlt    
  4058a7:	das    
  4058a8:	inc    eax
  4058a9:	not    DWORD PTR [eax]
  4058ab:	dec    BYTE PTR [esi+0x72]
  4058ae:	mov    bh,0x2d
  4058b0:	push   0xe5f6d370
  4058b5:	loopne 0x4058a6
  4058b7:	jb     0x405932
  4058b9:	sbb    DWORD PTR [ecx-0xc],edx
  4058bc:	arpl   WORD PTR [edx],si
  4058be:	scas   eax,DWORD PTR es:[edi]
  4058bf:	jne    0x405876
  4058c1:	push   0xc827fdb2
  4058c6:	gs aad 0x3
  4058c9:	into   
  4058ca:	fdiv   DWORD PTR [eax-0x4a5782f4]
  4058d0:	mov    eax,ds:0xdc746c8b
  4058d5:	pop    edx
  4058d6:	rcr    DWORD PTR [edx-0x69f8cc96],1
  4058dc:	mov    ds:0x2512699,eax
  4058e1:	inc    ebp
  4058e2:	ret    
  4058e3:	sub    dl,BYTE PTR [ebp-0x5a6c22f4]
  4058e9:	xchg   edi,eax
  4058ea:	shl    esp,1
  4058ec:	ffree  st(4)
  4058ee:	pusha  
  4058ef:	adc    bl,dh
  4058f1:	retf   
  4058f2:	inc    esi
  4058f4:	inc    ebp
  4058f5:	adc    al,0x98
  4058f7:	out    dx,eax
  4058f8:	cmp    edx,DWORD PTR [edx]
  4058fa:	inc    esp
  4058fb:	xchg   DWORD PTR [edi],esp
  4058fd:	aaa    
  4058fe:	push   edx
  4058ff:	push   0x2f
  405901:	mov    ecx,0x1cda1b43
  405906:	mov    dl,0x7c
  405908:	sbb    BYTE PTR cs:[eax+0x7a],bl
  40590c:	out    0xaa,al
  40590e:	mov    al,ds:0xf4ef8490
  405913:	sub    DWORD PTR [ebx-0x6850fb28],ecx
  405919:	into   
  40591a:	and    eax,DWORD PTR [eax]
  40591c:	pop    ebx
  40591d:	xchg   ecx,eax
  40591e:	inc    esp
  40591f:	inc    eax
  405920:	lods   eax,DWORD PTR ds:[esi]
  405921:	xor    eax,0xad0bacfd
  405926:	dec    esi
  405927:	sub    al,0x7
  405929:	out    dx,eax
  40592a:	mov    al,0xc0
  40592c:	lods   eax,DWORD PTR ds:[esi]
  40592d:	jmp    0x40487e4a
  405932:	pop    ss
  405933:	pop    esp
  405934:	lods   eax,DWORD PTR ds:[esi]
  405935:	test   al,0x7c
  405937:	(bad)  
  405938:	push   DWORD PTR [edx]
  40593a:	neg    BYTE PTR [si]
  40593d:	mov    edx,edx
  40593f:	jmp    0xdaeeca29
  405944:	sahf   
  405945:	popa   
  405946:	xchg   esi,eax
  405947:	clc    
  405948:	mov    dh,0xc2
  40594a:	xor    DWORD PTR [edi-0x26],edx
  40594d:	sbb    BYTE PTR [edx-0x3409215b],bh
  405953:	xchg   edi,eax
  405954:	sub    ah,ch
  405956:	push   ecx
  405957:	or     DWORD PTR [ebx+0x230b8d8d],0x5c
  40595e:	scas   al,BYTE PTR es:[edi]
  40595f:	cli    
  405960:	pusha  
  405961:	mov    ah,0xed
  405963:	cmc    
  405964:	jmp    0x43f14e62
  405969:	mov    al,ds:0x510b02ab
  40596e:	xchg   DWORD PTR ds:0xe40b9a5e,ebx
  405974:	int3   
  405975:	sbb    al,0xb8
  405977:	int    0xac
  405979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597a:	imul   ebp,DWORD PTR [edx+0x3bd07c15],0x8e9dab15
  405984:	repz popf 
  405986:	and    ebp,DWORD PTR [eax-0x44]
  405989:	xor    eax,DWORD PTR [esi]
  40598b:	lock or ax,0x847b
  405990:	xor    BYTE PTR [edx],0xf0
  405993:	(bad)  
  405994:	mov    BYTE PTR [ebx],0x28
  405997:	xor    al,0x67
  405999:	push   es
  40599a:	push   ecx
  40599b:	push   cs
  40599c:	call   0x2:0xdbb2ee1a
  4059a3:	cwde   
  4059a4:	stos   DWORD PTR es:[edi],eax
  4059a5:	popf   
  4059a6:	ja     0x4059ce
  4059a8:	mov    al,0x1d
  4059aa:	rcl    BYTE PTR [edx],0x7f
  4059ad:	mov    ds:0xec0f41cc,eax
  4059b2:	test   eax,0x98e10656
  4059b7:	es ret 
  4059b9:	mov    esi,0xf27230e3
  4059be:	test   BYTE PTR [esi+0x16],bh
  4059c1:	inc    ebx
  4059c2:	jne    0x405a1b
  4059c4:	les    ecx,FWORD PTR [bx+0x71d1]
  4059c9:	stos   BYTE PTR es:[edi],al
  4059ca:	push   ds
  4059cb:	pop    ebx
  4059cc:	popf   
  4059cd:	or     cl,cl
  4059cf:	sbb    dh,BYTE PTR [ebx-0x20]
  4059d2:	sahf   
  4059d3:	push   esp
  4059d4:	stos   BYTE PTR es:[edi],al
  4059d5:	ins    BYTE PTR es:[edi],dx
  4059d6:	add    eax,0x9940681c
  4059db:	mov    ds:0xfb99a553,al
  4059e0:	inc    eax
  4059e1:	mov    al,ds:0x2ec8adce
  4059e6:	clc    
  4059e7:	mov    edx,0xd8b823b8
  4059ec:	pop    eax
  4059ee:	mov    bl,BYTE PTR [edx+eax*1]
  4059f1:	(bad)  
  4059f2:	aam    0x38
  4059f4:	es retf 0x5afd
  4059f8:	pusha  
  4059f9:	mov    ebp,0x66b88409
  4059fe:	pop    esp
  4059ff:	xor    ah,BYTE PTR [esi]
  405a01:	sub    eax,0x704ebee5
  405a06:	mov    esp,0xbdfce5ca
  405a0b:	(bad)  
  405a0c:	xchg   cx,ax
  405a0e:	ins    DWORD PTR es:[edi],dx
  405a0f:	in     eax,0x1e
  405a11:	sbb    eax,0xbfca81e8
  405a16:	mov    edi,0xe342a038
  405a1b:	pop    ecx
  405a1c:	cwde   
  405a1d:	adc    esi,ebp
  405a1f:	cmp    DWORD PTR fs:[esi-0x3dff40ac],edi
  405a26:	sub    ecx,DWORD PTR [edx+0x68]
  405a29:	cmp    edx,DWORD PTR [ecx-0x67]
  405a2c:	clc    
  405a2d:	fnstsw WORD PTR [ecx+edx*2]
  405a30:	pop    ds
  405a31:	imul   edi,DWORD PTR [edi-0x606db5df],0x76
  405a38:	test   eax,0x9216cd0b
  405a3d:	fstp   DWORD PTR [ecx+0x3e]
  405a40:	jmp    0x1bd0:0xfc9b0d20
  405a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a48:	push   eax
  405a49:	dec    eax
  405a4a:	gs inc eax
  405a4c:	addr16 ret 0xdb3a
  405a50:	mov    edx,0x18dfc176
  405a55:	(bad)  
  405a56:	out    dx,al
  405a57:	push   edi
  405a58:	cmp    al,0xf1
  405a5a:	int    0xf4
  405a5c:	daa    
  405a5d:	imul   BYTE PTR [edx-0x67]
  405a60:	mov    WORD PTR [ecx+0x38],?
  405a63:	into   
  405a64:	iret   
  405a65:	(bad)  
  405a67:	lods   eax,DWORD PTR ds:[esi]
  405a68:	cmp    al,0x3
  405a6a:	adc    DWORD PTR [ebx+0x10],0x7f073e7b
  405a71:	or     eax,esi
  405a73:	(bad)  
  405a75:	lds    ecx,FWORD PTR [edi]
  405a77:	lahf   
  405a78:	out    dx,eax
  405a79:	in     al,dx
  405a7a:	call   0xb893:0x597ccb4b
  405a81:	pop    ecx
  405a82:	int3   
  405a83:	sbb    ecx,edx
  405a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a86:	inc    edx
  405a87:	pop    es
  405a88:	push   ss
  405a89:	retf   0x18e3
  405a8c:	int    0x3b
  405a8e:	mov    eax,ds:0xf6a92114
  405a93:	fdiv   QWORD PTR [ebx+ebp*8]
  405a96:	imul   DWORD PTR [eax]
  405a98:	sub    eax,DWORD PTR [ebp+0x3a]
  405a9b:	lea    ecx,[edi]
  405a9d:	cmc    
  405a9e:	in     eax,dx
  405a9f:	jns    0x405ad3
  405aa1:	ja     0x405a96
  405aa3:	lea    ebp,[esi]
  405aa5:	mov    edi,0x2e09f325
  405aaa:	jmp    0x3d96:0x90976613
  405ab1:	push   DWORD PTR [edx]
  405ab3:	test   ebp,edx
  405ab5:	(bad)  
  405ab6:	into   
  405ab7:	adc    DWORD PTR [ecx+0x6d],esp
  405aba:	mov    esi,0x674a0b94
  405abf:	fidivr WORD PTR [esi]
  405ac1:	sbb    DWORD PTR [edi],edx
  405ac3:	adc    BYTE PTR [eax-0x43d9e84f],ch
  405ac9:	and    eax,0x32be6762
  405acf:	jmp    0x405ad0
  405ad1:	mov    gs,WORD PTR [eax-0x59]
  405ad4:	nop
  405ad5:	js     0x405ae7
  405ad7:	inc    edx
  405ad8:	push   edi
  405ad9:	push   edi
  405ada:	inc    eax
  405adb:	add    eax,0x4b8405da
  405ae0:	push   ss
  405ae1:	mov    bh,0x70
  405ae3:	les    ebx,FWORD PTR [edx-0x32]
  405ae6:	or     eax,0x9cbac38c
  405aeb:	mov    cl,bh
  405aed:	mov    dl,al
  405aef:	jg     0x405b66
  405af1:	push   esp
  405af2:	(bad)  
  405af3:	push   esp
  405af4:	not    BYTE PTR [esi]
  405af6:	enter  0x72d7,0x30
  405afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405afb:	push   edx
  405afc:	mov    esi,0x629986b0
  405b01:	(bad)  
  405b02:	jae    0x405b2a
  405b04:	mov    edi,DWORD PTR [ecx-0x71ad545b]
  405b0a:	test   BYTE PTR [edi+0x8],bh
  405b0d:	pusha  
  405b0e:	push   eax
  405b0f:	cmp    cl,BYTE PTR [ebp-0xceddf5c]
  405b15:	stc    
  405b16:	enter  0x5b33,0x9d
  405b1a:	mov    ebp,0xff1630cf
  405b1f:	sub    cl,BYTE PTR [edi+0x65]
  405b22:	aad    0xac
  405b24:	cli    
  405b25:	xchg   edi,eax
  405b26:	sti    
  405b27:	xor    DWORD PTR [ecx+0x2a],ebx
  405b2a:	shr    DWORD PTR [edi+0xb],0x98
  405b2e:	or     eax,esi
  405b30:	ins    BYTE PTR es:[edi],dx
  405b31:	imul   edx,DWORD PTR [esi],0x59
  405b34:	sbb    ebx,0xffffffc9
  405b37:	push   ebx
  405b38:	xchg   BYTE PTR [eax],al
  405b3a:	jmp    0x81d95fdb
  405b3f:	inc    edi
  405b40:	loopne 0x405b19
  405b42:	push   0xffffff96
  405b44:	aaa    
  405b45:	test   DWORD PTR ds:0xc4de9c8e,esp
  405b4b:	sbb    DWORD PTR [edx],0xc239318
  405b51:	ret    0x2697
  405b54:	add    edi,ebp
  405b56:	fadd   DWORD PTR [edx+edi*2]
  405b59:	xchg   edx,eax
  405b5a:	dec    esi
  405b5b:	pop    ebx
  405b5c:	inc    edi
  405b5d:	sahf   
  405b5e:	add    dh,ch
  405b60:	jecxz  0x405b98
  405b62:	lods   eax,DWORD PTR ds:[esi]
  405b63:	fld    QWORD PTR [edi]
  405b65:	icebp  
  405b66:	pop    ss
  405b67:	out    0x3b,al
  405b69:	pushf  
  405b6a:	data16 or ch,BYTE PTR [esi+ebx*1]
  405b6e:	sub    BYTE PTR [ecx-0x64],ah
  405b71:	mov    al,0xc
  405b73:	int3   
  405b74:	(bad)  
  405b75:	shl    ah,1
  405b77:	pop    ebp
  405b78:	cmp    BYTE PTR [ebp+0x7237a534],cl
  405b7e:	mov    dl,BYTE PTR [ebx]
  405b80:	xor    eax,0x4633ea87
  405b85:	mov    ds:0x46fb36f6,al
  405b8a:	cdq    
  405b8b:	add    al,0xd6
  405b8d:	aam    0x10
  405b8f:	sti    
  405b90:	ss ja  0x405b6b
  405b93:	inc    ebp
  405b94:	pop    ss
  405b95:	and    esi,DWORD PTR [edx-0x42]
  405b98:	jnp    0x405c17
  405b9a:	test   eax,0x5d5d4b3f
  405b9f:	fxch   st(4)
  405ba1:	test   eax,esp
  405ba3:	cmp    ecx,DWORD PTR [edi+0x50ef0315]
  405ba9:	lahf   
  405baa:	retf   
  405bab:	pop    ss
  405bac:	pop    edi
  405bad:	sub    ecx,DWORD PTR [ebp-0x59]
  405bb0:	adc    ah,BYTE PTR [esp+eax*1]
  405bb3:	inc    edx
  405bb4:	nop
  405bb5:	(bad)  
  405bb7:	call   0x659c:0x8fc81922
  405bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbf:	or     DWORD PTR [ecx],esi
  405bc1:	sbb    cl,al
  405bc3:	pop    eax
  405bc4:	popa   
  405bc5:	inc    DWORD PTR [ecx-0x6551c111]
  405bcb:	nop
  405bcc:	mov    eax,ds:0x30dfe7f9
  405bd1:	sub    BYTE PTR ds:0x20aaf150,0xe2
  405bd8:	jne    0x405ba0
  405bda:	inc    esp
  405bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bdc:	mov    edi,0x3e9e7e10
  405be1:	adc    al,0x6f
  405be3:	pop    es
  405be4:	out    0x97,al
  405be6:	cs sub eax,0x3c7bb40
  405bec:	cmp    edx,DWORD PTR [edx]
  405bee:	daa    
  405bef:	xchg   ecx,eax
  405bf0:	clc    
  405bf1:	cmp    BYTE PTR [ecx],bl
  405bf3:	push   ebp
  405bf4:	ficom  WORD PTR [edx]
  405bf6:	lahf   
  405bf7:	cmp    DWORD PTR [edi],ecx
  405bf9:	bound  edx,QWORD PTR [ebp-0x5bf8821]
  405bff:	rol    BYTE PTR [edx],0xc0
  405c02:	inc    edx
  405c03:	mov    DWORD PTR [ecx-0x747839a4],0x243e27ce
  405c0d:	push   ebp
  405c0e:	push   ecx
  405c0f:	cmp    esi,0x427ec25b
  405c15:	cld    
  405c16:	or     ecx,ecx
  405c18:	das    
  405c19:	sbb    ah,dh
  405c1b:	or     DWORD PTR [ecx+0x20e1d581],ebx
  405c21:	sub    cl,al
  405c23:	ja     0x405bb6
  405c25:	(bad)  
  405c26:	ret    
  405c27:	je     0x405c0b
  405c29:	gs ds xchg ebx,eax
  405c2c:	cmp    DWORD PTR [edx],ebp
  405c2e:	icebp  
  405c2f:	mov    al,0xfc
  405c31:	dec    edx
  405c32:	mov    cl,0x5f
  405c34:	add    dl,BYTE PTR [eax+0x6b]
  405c37:	icebp  
  405c38:	sbb    eax,DWORD PTR [edi+0x77c51520]
  405c3e:	xchg   ecx,eax
  405c3f:	mov    bh,0x30
  405c41:	or     BYTE PTR [ebx],cl
  405c43:	sbb    bl,dh
  405c45:	pop    ebx
  405c46:	test   DWORD PTR ds:0xbc58665e,0xbc65af3f
  405c50:	call   DWORD PTR [ecx]
  405c52:	add    DWORD PTR [ebx],ebx
  405c54:	sahf   
  405c55:	icebp  
  405c56:	dec    ecx
  405c57:	imul   ebp,edi,0xb06a1a58
  405c5d:	pop    es
  405c5e:	add    ah,bh
  405c60:	into   
  405c61:	xchg   esp,eax
  405c62:	add    BYTE PTR [edx-0x30],dh
  405c65:	lods   al,BYTE PTR ds:[esi]
  405c66:	xchg   DWORD PTR [ecx],ecx
  405c68:	push   es
  405c69:	rcl    DWORD PTR [ecx-0x4b17e457],cl
  405c6f:	cli    
  405c70:	jmp    FWORD PTR [eax-0x38]
  405c73:	xchg   edi,eax
  405c74:	out    dx,al
  405c75:	scas   al,BYTE PTR es:[edi]
  405c76:	mov    ch,0xb7
  405c78:	test   DWORD PTR [ebx+0x7f],esi
  405c7b:	add    al,0x7d
  405c7d:	cmp    BYTE PTR [ecx],dh
  405c7f:	inc    esi
  405c80:	xor    eax,0x20cf3c8f
  405c85:	dec    edi
  405c86:	and    dh,dh
  405c88:	cmp    BYTE PTR [esi+0x1f],bl
  405c8b:	push   ds
  405c8c:	push   0x57604d69
  405c91:	sub    BYTE PTR [esi-0x3b],ch
  405c94:	mov    bh,0x38
  405c96:	pushf  
  405c97:	xor    DWORD PTR [ebx],0xb5154b19
  405c9d:	jp     0x405cb5
  405c9f:	pop    edi
  405ca0:	adc    al,0x84
  405ca2:	or     DWORD PTR [eax+0xe8ba5bd],ecx
  405ca8:	add    edx,DWORD PTR [edi+0x31b97d55]
  405cae:	aad    0x2a
  405cb0:	in     eax,0x4c
  405cb2:	mov    al,0x57
  405cb4:	int    0xe0
  405cb6:	out    dx,al
  405cb7:	and    bh,cl
  405cb9:	pop    esi
  405cba:	pop    eax
  405cbb:	xlat   BYTE PTR ds:[ebx]
  405cbc:	xor    eax,0xb25cb1c7
  405cc1:	and    DWORD PTR [eax+ebx*8+0x8737fd0],edx
  405cc8:	add    cl,bl
  405cca:	stos   BYTE PTR es:[edi],al
  405ccb:	inc    esp
  405ccc:	sbb    BYTE PTR [edi-0x34f7dbb8],0x7e
  405cd3:	push   esp
  405cd4:	mov    bh,0xb4
  405cd6:	inc    esi
  405cd7:	imul   edx,DWORD PTR [edx+ebx*1+0x1053c6de],0xb28af0a5
  405ce2:	sbb    al,0xcd
  405ce4:	add    al,0x90
  405ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce7:	adc    eax,DWORD PTR [ecx-0x590c38b3]
  405ced:	bswap  ebx
  405cef:	push   esi
  405cf0:	icebp  
  405cf1:	mov    DWORD PTR [ecx-0x1],edx
  405cf4:	aaa    
  405cf5:	cmp    edi,DWORD PTR [eax+0x7f0ba77c]
  405cfb:	and    eax,0xd184f28c
  405d00:	int    0x21
  405d02:	fldcw  WORD PTR [edi+0xa11e8ee]
  405d08:	mov    eax,DWORD PTR [edi]
  405d0a:	adc    esi,DWORD PTR [ecx-0x2a61954]
  405d10:	push   0xe4766e48
  405d15:	mov    edx,DWORD PTR [ecx-0x20169692]
  405d1b:	dec    ecx
  405d1c:	pop    ebx
  405d1d:	fs pop ebx
  405d1f:	adc    al,0x33
  405d21:	mov    fs,WORD PTR [eax-0x6fc800d]
  405d27:	or     al,0x8a
  405d29:	aam    0x5f
  405d2b:	hlt    
  405d2c:	xchg   esp,eax
  405d2d:	mov    DWORD PTR [esp+edi*1+0x16],eax
  405d31:	or     BYTE PTR [ecx-0x63],al
  405d34:	push   esi
  405d35:	sub    eax,0x7985b54a
  405d3a:	in     eax,dx
  405d3b:	hlt    
  405d3c:	test   al,0x3d
  405d3e:	jbe    0x405d7e
  405d40:	or     esi,DWORD PTR [ecx+eax*4-0x70]
  405d44:	mov    BYTE PTR [edi+ebp*1],dh
  405d47:	scas   al,BYTE PTR es:[edi]
  405d48:	cdq    
  405d49:	dec    esp
  405d4a:	xchg   ebx,eax
  405d4b:	not    DWORD PTR [ebp-0x63]
  405d4e:	xor    BYTE PTR [eax-0x38b7c2da],dl
  405d54:	or     ah,BYTE PTR [esi]
  405d56:	fwait
  405d57:	jmp    0x405cea
  405d59:	stos   DWORD PTR es:[edi],eax
  405d5a:	xlat   BYTE PTR ds:[ebx]
  405d5b:	cwde   
  405d5c:	dec    ebp
  405d5e:	addr16 xchg esi,eax
  405d60:	lfs    esp,FWORD PTR [esi+0x65fa4ce1]
  405d67:	jp     0x405d14
  405d69:	xor    ch,ah
  405d6b:	mov    WORD PTR [edx-0x33],ss
  405d6e:	test   DWORD PTR [eax],eax
  405d70:	test   bh,al
  405d72:	das    
  405d73:	mov    bl,0xa2
  405d75:	jnp    0x405d49
  405d77:	int    0x85
  405d79:	mov    ch,BYTE PTR [ecx+0x6e09b70d]
  405d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d80:	pusha  
  405d81:	jmp    0x9e8a42b7
  405d86:	xor    DWORD PTR [esi-0x2a],esi
  405d89:	jp     0x405d68
  405d8b:	into   
  405d8c:	addr16 cli 
  405d8e:	in     al,dx
  405d8f:	ds in  al,0xf0
  405d92:	mul    DWORD PTR [edx]
  405d94:	sbb    eax,DWORD PTR [eax]
  405d96:	retf   
  405d97:	xchg   esp,eax
  405d98:	shr    DWORD PTR [esi],1
  405d9a:	pushf  
  405d9b:	pop    edx
  405d9c:	adc    DWORD PTR [edx-0x4ecf725c],0x24
  405da3:	inc    ecx
  405da4:	inc    eax
  405da5:	add    ebp,edi
  405da7:	mov    bh,0xfe
  405da9:	lods   al,BYTE PTR ds:[esi]
  405daa:	cmp    BYTE PTR [ecx+0x42aaad54],cl
  405db0:	inc    esi
  405db1:	inc    ebx
  405db2:	pop    ecx
  405db3:	mov    WORD PTR [ebx+ecx*2],?
  405db6:	sub    BYTE PTR [ebx],dh
  405db8:	and    DWORD PTR [ecx],esi
  405dba:	push   esp
  405dbb:	shl    DWORD PTR [edx-0x5],cl
  405dbe:	(bad)  
  405dbf:	sbb    eax,0x1b7b4e0c
  405dc4:	test   dl,cl
  405dc6:	pop    ebp
  405dc7:	add    DWORD PTR [ecx+0x13],edx
  405dca:	mov    cl,0x85
  405dcc:	mov    ch,0xe7
  405dce:	mov    BYTE PTR [edx+0x32],bh
  405dd1:	add    BYTE PTR [edx+eiz*8+0x7a],dh
  405dd5:	cmp    eax,0xac6332e3
  405dda:	pop    edx
  405ddb:	clc    
  405ddc:	mov    cl,0xaf
  405dde:	sbb    bl,BYTE PTR [edi-0x13]
  405de1:	scas   eax,DWORD PTR es:[edi]
  405de2:	mov    ebp,ebp
  405de4:	gs iret 
  405de6:	mov    cl,0xa1
  405de9:	mov    cl,0x9e
  405deb:	xor    esi,ebx
  405ded:	or     DWORD PTR [edx-0x11cc1ebf],ebx
  405df3:	and    dl,BYTE PTR ds:0xd501ac77
  405df9:	(bad)  
  405dfb:	jl     0x405e6c
  405dfd:	and    edx,DWORD PTR [eax]
  405dff:	adc    DWORD PTR [ebp+ecx*8+0x1c6c7301],eax
  405e06:	xchg   esp,eax
  405e07:	popf   
  405e08:	jg     0x405e04
  405e0a:	icebp  
  405e0b:	inc    DWORD PTR [edi-0x69]
  405e0e:	jp     0x405df1
  405e10:	mov    WORD PTR [edx+0x5001165c],ds
  405e16:	sti    
  405e17:	or     esp,ecx
  405e19:	jae    0x405e23
  405e1b:	stos   DWORD PTR es:[edi],eax
  405e1c:	xor    eax,0x2a67ab99
  405e21:	mov    edx,0xc2162980
  405e26:	cwde   
  405e27:	push   ds
  405e28:	xlat   BYTE PTR ds:[ebx]
  405e29:	jbe    0x405e2a
  405e2b:	push   es
  405e2c:	(bad)  
  405e2d:	js     0x405dc4
  405e2f:	push   0x6f
  405e31:	gs push ss
  405e33:	dec    edi
  405e34:	scas   al,BYTE PTR es:[edi]
  405e35:	push   edx
  405e36:	pop    ebx
  405e37:	inc    edx
  405e38:	imul   ecx,edx,0x55
  405e3b:	lds    edx,FWORD PTR [edi]
  405e3d:	xlat   BYTE PTR ds:[ebx]
  405e3e:	rcr    BYTE PTR [ebp-0x343153f6],1
  405e44:	(bad)
  405e48:	clc    
  405e49:	xchg   ebp,eax
  405e4a:	div    BYTE PTR [edx]
  405e4c:	dec    ecx
  405e4d:	and    al,0xb2
  405e4f:	cli    
  405e50:	and    BYTE PTR ds:0x4780693b,ah
  405e56:	add    eax,0x2097996d
  405e5b:	push   edx
  405e5c:	std    
  405e5d:	retf   
  405e5e:	mov    bh,0xbe
  405e60:	mov    eax,ds:0xceada7b
  405e65:	clc    
  405e66:	cmp    al,0xb9
  405e68:	mov    bh,0x76
  405e6a:	popa   
  405e6b:	add    al,ch
  405e6d:	jmp    0x405e4c
  405e6f:	ja     0x405e37
  405e71:	test   BYTE PTR ds:0xa52ec97f,0x63
  405e78:	dec    ecx
  405e79:	loop   0x405e4d
  405e7b:	xchg   edx,eax
  405e7c:	add    eax,0x4ad8c1c8
  405e81:	xlat   BYTE PTR ds:[ebx]
  405e82:	mov    al,0xfb
  405e84:	sar    BYTE PTR ds:[edx],cl
  405e87:	xor    ebp,DWORD PTR [edi+edx*2-0x5af7cb9]
  405e8e:	fld    QWORD PTR [edi+0x2030e4b7]
  405e94:	mov    fs,WORD PTR [ecx-0x71]
  405e97:	jo     0x405eb3
  405e99:	dec    ebx
  405e9a:	(bad)  
  405e9b:	push   0x1
  405e9d:	pop    es
  405e9e:	jg     0x405eda
  405ea0:	stc    
  405ea1:	test   BYTE PTR [ebx+0x4514bb90],dh
  405ea7:	jnp    0x405e66
  405ea9:	lahf   
  405eaa:	int    0xbc
  405eac:	lahf   
  405ead:	or     al,0xd4
  405eaf:	pop    esi
  405eb0:	lods   al,BYTE PTR ds:[esi]
  405eb1:	pop    ebx
  405eb2:	or     BYTE PTR [ebx],cl
  405eb4:	mov    ah,0xa9
  405eb6:	fistp  QWORD PTR [esi]
  405eb8:	mov    ecx,0xb2a38f07
  405ebd:	ficomp WORD PTR [eax+0x24]
  405ec0:	mov    ah,0x30
  405ec2:	xor    ebp,DWORD PTR ds:0xf2d9a1c5
  405ec8:	ret    
  405ec9:	xor    eax,DWORD PTR [edi]
  405ecb:	adc    ecx,esi
  405ecd:	xor    eax,0x9f61b55b
  405ed2:	ds inc eax
  405ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed5:	ret    
  405ed6:	stos   DWORD PTR es:[edi],eax
  405ed7:	outs   dx,DWORD PTR ds:[esi]
  405ed8:	(bad)  
  405ed9:	pop    ds
  405eda:	aaa    
  405edb:	jmp    0xa16ffb5c
  405ee0:	shl    BYTE PTR [ebx+edx*2+0x4d],cl
  405ee4:	pop    edx
  405ee5:	(bad)  
  405ee6:	mov    esi,0x4b1489d
  405eeb:	xchg   BYTE PTR [ebp+0x38],al
  405eee:	inc    edi
  405eef:	test   al,0x3e
  405ef1:	or     al,BYTE PTR [esi+0x21]
  405ef4:	mov    al,0x57
  405ef6:	dec    edx
  405ef7:	inc    ecx
  405ef8:	iret   
  405ef9:	into   
  405efa:	out    dx,al
  405efb:	sub    ecx,esi
  405efd:	pop    edi
  405efe:	call   0x79e2705c
  405f03:	mov    dh,0x91
  405f05:	js     0x405f10
  405f07:	mov    ebp,0x4eb238f5
  405f0c:	ja     0x405ef3
  405f0e:	cli    
  405f0f:	sahf   
  405f10:	fnstcw WORD PTR [edi-0x10]
  405f13:	jns    0x405ec1
  405f15:	aad    0xf1
  405f17:	in     al,dx
  405f18:	mov    cl,0xe2
  405f1a:	fs sti 
  405f1c:	jle    0x405ed6
  405f1e:	repz push ecx
  405f20:	in     al,dx
  405f21:	ds dec esp
  405f23:	fs je  0x405f73
  405f26:	gs inc edx
  405f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f29:	adc    al,0x97
  405f2b:	mov    bl,0x4c
  405f2d:	inc    eax
  405f2e:	xchg   ebp,eax
  405f2f:	inc    ecx
  405f30:	stos   BYTE PTR es:[edi],al
  405f31:	push   ss
  405f32:	xchg   esi,eax
  405f33:	sub    cl,BYTE PTR [ecx]
  405f35:	es call 0x8472d6e1
  405f3b:	mov    edx,0xf82319d1
  405f40:	jmp    0x405f50
  405f42:	cmp    DWORD PTR [ebx+0x5ae1f2db],0x920513f4
  405f4c:	call   0x78ff:0x3a7de825
  405f53:	pop    eax
  405f54:	cwde   
  405f55:	adc    al,BYTE PTR [edi]
  405f57:	jmp    0xaf6e523d
  405f5c:	int    0x70
  405f5e:	cdq    
  405f5f:	jle    0x405f92
  405f61:	sbb    al,0xea
  405f63:	(bad)  
  405f64:	jae    0x405f24
  405f66:	(bad)  
  405f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f68:	xchg   edx,eax
  405f69:	cmp    ebx,edx
  405f6b:	leave  
  405f6c:	mov    esp,0xc9e63cd9
  405f71:	pop    esp
  405f72:	fidiv  DWORD PTR [esi+0x1c]
  405f75:	cmp    al,0x1f
  405f77:	shl    BYTE PTR [eax+0x3f],cl
  405f7a:	(bad)  
  405f7b:	(bad)  
  405f7c:	dec    edi
  405f7d:	loope  0x405ff4
  405f7f:	imul   esi,DWORD PTR [edi+eax*8-0xd5ffe18],0x8c66ff1d
  405f8a:	add    DWORD PTR [eax+0x5],eax
  405f8d:	fxch   st(7)
  405f8f:	xchg   esi,eax
  405f90:	addr16 gs popa 
  405f93:	test   al,0xd
  405f95:	mov    eax,ds:0xd169f18d
  405f9a:	add    eax,0x7ba2c9d2
  405f9f:	mov    ebx,ebx
  405fa1:	jns    0x405ffc
  405fa3:	pop    es
  405fa4:	sub    bl,BYTE PTR [ebx-0x2b]
  405fa7:	fistp  WORD PTR [ebx]
  405fa9:	xchg   esi,eax
  405faa:	inc    ebx
  405fab:	pop    esp
  405fac:	and    eax,0x8f7bb280
  405fb1:	sub    DWORD PTR [ebx+0x46],edi
  405fb4:	dec    edx
  405fb5:	lea    ebx,[edx+0x38c41784]
  405fbb:	inc    edx
  405fbc:	jp     0x40600c
  405fbe:	fs pop edx
  405fc0:	jne    0x405f85
  405fc2:	push   es
  405fc3:	int    0xf6
  405fc5:	dec    eax
  405fc6:	stc    
  405fc7:	mov    edi,0x1d7025ce
  405fcc:	jmp    0x2c2428e4
  405fd1:	sbb    ah,bl
  405fd3:	pop    esi
  405fd4:	adc    DWORD PTR [eax],edi
  405fd6:	xchg   edi,eax
  405fd7:	mov    al,0xc
  405fd9:	(bad)  [ebx-0x63146d53]
  405fdf:	(bad)  
  405fe0:	pusha  
  405fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe2:	adc    dh,BYTE PTR [edx+ecx*1-0x34b499eb]
  405fe9:	fwait
  405fea:	ins    BYTE PTR es:[edi],dx
  405feb:	jb     0x405fef
  405fed:	mov    al,ds:0xbae919ff
  405ff2:	test   BYTE PTR ds:0x7bbbc0be,dh
  405ff8:	cmp    bh,BYTE PTR [esi+0x11]
  405ffb:	jg     0x406011
  405ffd:	push   cs
  405ffe:	jmp    0x406043
  406000:	mov    dh,0xb1
  406002:	sub    eax,0x65e09d88
  406007:	pop    esp
  406008:	test   dh,cl
  40600a:	push   0x42b51eb
  40600f:	mov    BYTE PTR [eax+0x2654804e],al
  406015:	mov    BYTE PTR [edi+0x63],dl
  406018:	inc    eax
  406019:	mov    eax,ds:0xd95900f
  40601e:	(bad)  
  40601f:	jno    0x406017
  406021:	mov    ds:0x95ded8dc,al
  406026:	ret    0x642a
  406029:	out    dx,eax
  40602a:	or     eax,0xe88c91c2
  40602f:	or     BYTE PTR [edx-0x32],bh
  406032:	add    eax,0x3f2156cf
  406037:	pop    ebp
  406038:	add    DWORD PTR ds:0x2b77a314,esi
  40603e:	and    edx,DWORD PTR [esi+0x41]
  406041:	fcom   QWORD PTR [edi-0x51]
  406044:	call   0x85a5a70e
  406049:	mov    WORD PTR [edi],es
  40604b:	daa    
  40604c:	inc    ecx
  40604d:	or     al,0xc
  40604f:	adc    DWORD PTR [ebx],esi
  406051:	jmp    0x40602f
  406053:	test   DWORD PTR [ebp+ebx*1-0xdd4091a],ebp
  40605a:	adc    BYTE PTR [edi-0x6b],bl
  40605d:	sub    edx,eax
  40605f:	cmp    eax,ecx
  406061:	add    BYTE PTR [edi],ah
  406063:	jo     0x405fea
  406065:	mov    ebx,0x6b3e1bb4
  40606a:	mov    edx,0x7392de60
  40606f:	test   ebx,eax
  406071:	jle    0x4060cf
  406073:	enter  0x78de,0x90
  406077:	jae    0x4060f5
  406079:	dec    ebx
  40607a:	sbb    al,0x29
  40607c:	jecxz  0x406091
  40607e:	mov    ds:0xd476a0ab,al
  406083:	dec    ecx
  406084:	aad    0x7
  406086:	sbb    bh,dh
  406088:	repnz stos BYTE PTR es:[edi],al
  40608a:	out    0xe5,eax
  40608c:	pop    edi
  40608d:	fistp  DWORD PTR [esi-0x15]
  406090:	xor    ecx,eax
  406092:	icebp  
  406093:	fcmovbe st,st(6)
  406095:	pop    ebp
  406096:	mov    bl,0xc9
  406098:	inc    ebp
  406099:	add    eax,DWORD PTR [edi-0x793b95ba]
  40609f:	in     al,dx
  4060a0:	and    esi,DWORD PTR [edx]
  4060a2:	push   ebx
  4060a3:	xchg   ebx,eax
  4060a4:	loopne 0x40602a
  4060a6:	out    0x85,al
  4060a8:	test   DWORD PTR [ebx+eiz*8+0x32cf9a5c],esp
  4060af:	inc    edx
  4060b0:	daa    
  4060b1:	dec    DWORD PTR [edi+edx*2+0x1b]
  4060b5:	push   ebx
  4060b6:	push   0x2c388fe7
  4060bb:	outs   dx,DWORD PTR ds:[esi]
  4060bc:	stos   DWORD PTR es:[edi],eax
  4060bd:	xchg   ebx,eax
  4060be:	mov    ds:0xead9992c,al
  4060c3:	aam    0x4b
  4060c5:	inc    ebp
  4060c6:	or     edi,DWORD PTR [esi]
  4060c8:	cdq    
  4060c9:	jmp    0x406091
  4060cb:	arpl   WORD PTR [esi-0x6d9df07f],ax
  4060d1:	or     ch,BYTE PTR [ebp+0x19]
  4060d4:	shl    DWORD PTR [eax+0x2974b36b],1
  4060da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060db:	adc    ah,BYTE PTR [edi+edx*1+0x1d64d287]
  4060e2:	cli    
  4060e3:	xor    BYTE PTR [esi+0x767143db],dh
  4060e9:	inc    ecx
  4060ea:	loope  0x406152
  4060ec:	lock jp 0x4060e4
  4060ef:	jmp    0xec4e96a
  4060f4:	popa   
  4060f5:	xchg   ebp,eax
  4060f6:	mov    ecx,0x260d612d
  4060fb:	xor    edi,esi
  4060fd:	xchg   ebx,eax
  4060fe:	rol    BYTE PTR ds:0x25b4541e,cl
  406104:	pop    eax
  406105:	cmp    al,0x14
  406107:	mov    ah,0xbc
  406109:	adc    BYTE PTR [bx+si],bl
  40610c:	sti    
  40610d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40610e:	std    
  40610f:	jns    0x40613a
  406111:	mov    dl,0x2e
  406113:	fistp  DWORD PTR [eax]
  406115:	ja     0x40609f
  406117:	pop    edi
  406118:	inc    ebp
  406119:	stos   BYTE PTR es:[edi],al
  40611a:	mov    ebp,0xee282670
  40611f:	dec    edx
  406120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406121:	daa    
  406122:	adc    eax,0x5498dc1a
  406127:	push   0x30b7c2a
  40612c:	imul   ebx,DWORD PTR [ecx*4+0x88ca28],0x75
  406134:	pop    es
  406135:	loop   0x40616b
  406137:	stos   DWORD PTR es:[edi],eax
  406138:	(bad)  
  406139:	cld    
  40613a:	jmp    0x4060e3
  40613c:	mov    al,ds:0x45cc84c2
  406141:	adc    DWORD PTR [ebp+edx*1+0x71],esi
  406145:	mov    ch,0x7d
  406147:	mov    DWORD PTR [ebp+0x7a],ebp
  40614a:	jl     0x4061be
  40614c:	push   cs
  40614d:	dec    edx
  40614e:	sub    esp,DWORD PTR [edi-0x4f]
  406151:	mov    ds:0x29c662a2,al
  406156:	sbb    dh,bl
  406158:	sti    
  406159:	jno    0x4061af
  40615b:	mov    dl,ch
  40615d:	popa   
  40615e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40615f:	mov    esi,0x8c5932ce
  406164:	stos   DWORD PTR es:[edi],eax
  406165:	out    0x1e,eax
  406167:	neg    DWORD PTR [ebx-0x2e]
  40616a:	cmc    
  40616b:	dec    edi
  40616c:	and    BYTE PTR [eax],bl
  40616e:	test   DWORD PTR [ebp+edi*8-0x20],0xc1531291
  406176:	xchg   ebp,eax
  406177:	cwde   
  406178:	or     ecx,DWORD PTR [edx-0x4a]
  40617b:	mov    al,BYTE PTR [ebx]
  40617d:	test   ch,ah
  40617f:	xor    eax,esp
  406181:	xchg   edi,eax
  406182:	add    eax,0x6dd1b244
  406187:	outs   dx,DWORD PTR ds:[esi]
  406188:	fistp  WORD PTR [ebp+0x7cdb80d6]
  40618e:	inc    esi
  40618f:	imul   edi,DWORD PTR [ebx+edi*2+0x742f3b69],0x7a07101f
  40619a:	xor    eax,0x16bc3772
  40619f:	rol    DWORD PTR ds:0x9dfb1e4,cl
  4061a5:	fadd   st(4),st
  4061a7:	mov    eax,0xd4656a63
  4061ac:	ss push edi
  4061ae:	jbe    0x406140
  4061b0:	mov    al,ds:0xdf7f141c
  4061b5:	lahf   
  4061b6:	xor    al,0x8b
  4061b8:	or     eax,0xeee521ab
  4061bd:	imul   esp,DWORD PTR [edx+0x73],0xffffffa0
  4061c1:	adc    BYTE PTR [ebx+0x13973cc3],dl
  4061c7:	stc    
  4061c8:	mov    ah,0xa6
  4061ca:	ins    DWORD PTR es:[edi],dx
  4061cb:	pop    eax
  4061cc:	dec    ebp
  4061cd:	push   cs
  4061ce:	adc    eax,0xd354bbf7
  4061d3:	and    ch,dh
  4061d5:	inc    esp
  4061d6:	xchg   edx,eax
  4061d7:	dec    ecx
  4061d8:	and    DWORD PTR [esi+0x2bf9a857],0x62
  4061df:	pop    ebx
  4061e0:	mov    eax,ds:0x7b80b87e
  4061e5:	pop    ebp
  4061e6:	ds pop ss
  4061e8:	imul   esp,DWORD PTR [edx],0x5b
  4061eb:	xor    bh,dh
  4061ed:	mov    ds:0xc00223ef,eax
  4061f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f3:	dec    edx
  4061f4:	mov    ah,0xb0
  4061f6:	xor    DWORD PTR ds:0x5addeec7,ebx
  4061fc:	dec    ebx
  4061fd:	inc    edi
  4061fe:	inc    ecx
  4061ff:	mov    ds:0x418d5d67,al
  406204:	xchg   ebp,eax
  406206:	outs   dx,BYTE PTR ds:[esi]
  406208:	push   0x3e
  40620a:	pop    ecx
  40620b:	shl    esi,cl
  40620d:	add    eax,0xe217d2c9
  406212:	jnp    0x40625b
  406214:	leave  
  406215:	dec    ecx
  406216:	mov    eax,0x2a2dec93
  40621b:	test   DWORD PTR [esi+0x356ff295],0xb40a8ef2
  406225:	mov    eax,ds:0x64d8fffc
  40622a:	add    DWORD PTR [ebx+0x948d517],0x1ff6d511
  406234:	(bad)  [ebx+0x31]
  406237:	in     al,dx
  406238:	repz in al,0x51
  40623b:	mov    ds:0xbdcdfc83,eax
  406240:	loopne 0x40629f
  406242:	mov    fs,WORD PTR [esi-0x40f5454f]
  406248:	adc    DWORD PTR [esi-0x8],0x8ff769bd
  40624f:	(bad)  
  406250:	jecxz  0x406282
  406252:	(bad)  
  406253:	cs jnp 0x40623d
  406256:	call   0xe8c9f296
  40625b:	call   0x1677:0x5fd07841
  406262:	dec    ebx
  406263:	(bad)  
  406264:	mov    eax,ds:0x34c4e8a5
  406269:	popa   
  40626a:	pop    ds
  40626b:	xor    ah,BYTE PTR [ebp+0x3]
  40626e:	(bad)  
  40626f:	div    DWORD PTR ds:0x5c906c4b
  406275:	mov    bh,BYTE PTR [ebp-0x25]
  406278:	pop    ecx
  406279:	xchg   ecx,eax
  40627a:	sub    eax,0x81710c20
  40627f:	pop    eax
  406280:	mov    eax,0x79eaae22
  406285:	retf   0x393b
  406288:	lahf   
  406289:	and    al,0xf8
  40628b:	leave  
  40628c:	test   edx,0x52ebae03
  406292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406293:	ins    DWORD PTR es:[edi],dx
  406294:	sbb    edx,esi
  406296:	inc    ecx
  406297:	push   0xffffffff
  406299:	mov    ah,0x23
  40629b:	pslld  mm0,QWORD PTR [ecx-0x57ac33f4]
  4062a2:	shr    DWORD PTR [eax+0x6e],cl
  4062a5:	mov    ds:0xb8649a4f,eax
  4062aa:	daa    
  4062ab:	adc    eax,0xa65075e6
  4062b0:	jo     0x406252
  4062b2:	jge    0x40632d
  4062b4:	lods   eax,DWORD PTR ds:[esi]
  4062b5:	popf   
  4062b6:	add    DWORD PTR [eax+ecx*1+0x3],esp
  4062ba:	rcr    DWORD PTR [esi],0x16
  4062bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062be:	xchg   edi,eax
  4062bf:	aam    0x3d
  4062c1:	xor    ah,0x18
  4062c4:	ja     0x4062b0
  4062c6:	dec    eax
  4062c7:	icebp  
  4062c8:	repnz cld 
  4062ca:	fistp  WORD PTR [eax]
  4062cc:	adc    BYTE PTR [eax+0x3b],al
  4062cf:	ror    DWORD PTR [edi],0x3e
  4062d2:	mov    edx,0x93a8d1cb
  4062d7:	(bad)  
  4062d9:	lock and eax,0x9fc8e16d
  4062df:	out    dx,eax
  4062e0:	iret   
  4062e1:	mov    esp,0xb1c983ae
  4062e6:	enter  0x57b3,0x4b
  4062ea:	cwde   
  4062eb:	adc    BYTE PTR [ebp-0x46],ch
  4062ee:	popf   
  4062ef:	sub    bl,al
  4062f1:	lods   al,BYTE PTR ds:[esi]
  4062f2:	and    esi,esi
  4062f4:	mov    ebp,0xe72b1b86
  4062f9:	fdivp  st(7),st
  4062fb:	pop    ebp
  4062fc:	and    cl,BYTE PTR [ecx+0x1c]
  4062ff:	jb     0x40637c
  406301:	sahf   
  406302:	inc    edi
  406303:	repz popf 
  406305:	mov    dh,0xcc
  406307:	jl     0x4062ab
  406309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630a:	ret    
  40630b:	divps  xmm0,XMMWORD PTR [ebp+0xc3dfa97]
  406312:	das    
  406313:	and    dl,ah
  406315:	aas    
  406316:	scas   al,BYTE PTR es:[edi]
  406317:	fdivr  QWORD PTR [eax]
  406319:	popa   
  40631a:	repz div BYTE PTR [esi]
  40631d:	sbb    al,0xfa
  40631f:	outs   dx,BYTE PTR ds:[esi]
  406320:	pop    es
  406321:	popa   
  406322:	std    
  406323:	sbb    BYTE PTR [edx-0x758a933c],0x14
  40632a:	cmp    DWORD PTR [ecx],ecx
  40632c:	(bad)  
  40632d:	xchg   edx,eax
  40632e:	(bad)  
  40632f:	leave  
  406330:	jae    0x406390
  406332:	jbe    0x40636d
  406334:	imul   edx,eax,0xb632b298
  40633a:	lahf   
  40633b:	fcom   QWORD PTR [ebp-0x2ad22356]
  406341:	aaa    
  406342:	jecxz  0x406363
  406344:	pop    es
  406345:	leave  
  406346:	in     al,0x12
  406348:	test   BYTE PTR [esi+0x1d],bl
  40634b:	cmp    BYTE PTR [esi+edi*2+0x7010bd91],dl
  406352:	dec    edx
  406353:	retf   0x49b0
  406356:	cli    
  406357:	jl     0x40638d
  406359:	adc    BYTE PTR [esi],dh
  40635b:	fs clc 
  40635d:	push   esp
  40635e:	daa    
  40635f:	loope  0x4063b8
  406361:	xor    al,0x9c
  406363:	into   
  406364:	mov    eax,edx
  406366:	add    DWORD PTR [eax],edi
  406368:	test   al,0x16
  40636a:	adc    ch,BYTE PTR [ebx+0x48fb5fa9]
  406370:	jo     0x40635e
  406372:	cdq    
  406373:	fimul  WORD PTR [ecx]
  406375:	push   edx
  406376:	idiv   DWORD PTR [esi-0x5204bd43]
  40637c:	jns    0x406315
  40637e:	das    
  40637f:	inc    ecx
  406380:	in     al,dx
  406381:	pop    es
  406382:	jbe    0x40636b
  406384:	sub    BYTE PTR [edx-0x66],cl
  406387:	lahf   
  406388:	nop
  406389:	and    ecx,DWORD PTR [eax+eiz*4-0x31]
  40638d:	rol    ch,1
  40638f:	retf   0xb60c
  406392:	outs   dx,BYTE PTR ds:[esi]
  406393:	cmc    
  406394:	inc    ecx
  406395:	div    DWORD PTR [ebp+eiz*2+0x5a]
  406399:	pop    es
  40639a:	mov    ecx,DWORD PTR [edi+0x56]
  40639d:	outs   dx,DWORD PTR ds:[esi]
  40639e:	stos   BYTE PTR es:[edi],al
  40639f:	mov    DWORD PTR [edi+0x1],ebp
  4063a2:	out    dx,eax
  4063a3:	mov    eax,ds:0xf4720dc0
  4063a8:	or     DWORD PTR [ebp-0x3840ad3b],esi
  4063ae:	dec    ebx
  4063af:	push   edx
  4063b0:	add    ch,0xf1
  4063b3:	push   ebx
  4063b4:	and    ecx,esi
  4063b6:	pop    eax
  4063b7:	jmp    0x8da7:0x5c8cbe46
  4063be:	push   edx
  4063bf:	dec    esp
  4063c0:	xchg   ebp,eax
  4063c1:	cmp    DWORD PTR [ebp-0x7b324c8],ecx
  4063c7:	and    BYTE PTR [ecx-0x1],dl
  4063ca:	push   0xe4efea41
  4063cf:	rol    DWORD PTR [ecx],0xa0
  4063d2:	mov    cl,0x84
  4063d4:	ins    DWORD PTR es:[edi],dx
  4063d5:	push   es
  4063d6:	jns    0x406380
  4063d8:	jmp    0x4063e2
  4063da:	leave  
  4063db:	jne    0x4063c4
  4063dd:	nop
  4063de:	push   es
  4063df:	inc    ebp
  4063e0:	shr    DWORD PTR [edx-0x1d],0x10
  4063e4:	inc    edi
  4063e5:	std    
  4063e6:	or     al,0xec
  4063e8:	jb     0x40636f
  4063ea:	dec    edx
  4063eb:	fwait
  4063ec:	sbb    ah,0x44
  4063ef:	xchg   ebp,eax
  4063f0:	mov    ebx,0x8e45a000
  4063f5:	push   edi
  4063f6:	and    ebx,edx
  4063f8:	call   0x4691:0x7f53d810
  4063ff:	mov    al,0x70
  406401:	repnz mov WORD PTR [eax-0x77],fs
  406405:	dec    edx
  406406:	int3   
  406407:	cmp    al,0xcc
  406409:	cmp    eax,0xc1533fd3
  40640e:	idiv   BYTE PTR [edi]
  406410:	call   DWORD PTR [edx+ecx*8+0x5bfa1dba]
  406417:	ret    
  406418:	jp     0x4063f6
  40641a:	cld    
  40641b:	(bad)
  40641f:	call   0xfaa983ea
  406424:	mov    eax,0xbe34cb26
  406429:	retf   0xf10b
  40642c:	shl    edi,1
  40642e:	cmp    BYTE PTR [ebp-0x2e5feef1],cl
  406434:	push   ecx
  406435:	and    edx,DWORD PTR [edi-0x11]
  406438:	(bad)  
  406439:	(bad)  
  40643a:	adc    esp,ebp
  40643c:	mov    bh,0x8
  40643e:	retf   
  40643f:	sub    BYTE PTR [ebx+ebx*4-0x126ec572],0x32
  406447:	cli    
  406448:	pop    esp
  406449:	push   eax
  40644a:	mov    bl,0x81
  40644c:	gs in  al,dx
  40644e:	pop    es
  40644f:	ins    DWORD PTR es:[edi],dx
  406450:	stos   DWORD PTR es:[edi],eax
  406451:	pop    esi
  406452:	and    bh,0x23
  406455:	fs faddp st(2),st
  406458:	mov    ds:0x1c211b76,al
  40645d:	dec    esp
  40645e:	xor    esp,DWORD PTR [eax-0xd]
  406461:	ret    
  406462:	sbb    ecx,DWORD PTR [ebx+0x66]
  406465:	or     al,0xa0
  406467:	mov    dl,0xa1
  406469:	adc    ah,BYTE PTR [edi+0x15]
  40646c:	outs   dx,BYTE PTR ds:[esi]
  40646d:	leave  
  40646e:	in     eax,dx
  40646f:	sbb    BYTE PTR [ebp-0x1819d063],al
  406475:	adc    ah,BYTE PTR [esi+0x13]
  406478:	mov    ebp,0xff3710fb
  40647d:	stc    
  40647e:	in     al,dx
  40647f:	out    dx,al
  406480:	pop    eax
  406481:	popa   
  406482:	push   ebp
  406483:	ret    0xd772
  406486:	cmp    ah,BYTE PTR ds:0xfef1b6fa
  40648c:	es push cs
  40648e:	mov    bh,ah
  406490:	loop   0x40645a
  406492:	pinsrw mm1,WORD PTR [esi-0x2],0xe5
  406497:	(bad)
  40649a:	in     al,0xac
  40649c:	je     0x4064ea
  40649e:	sbb    ebx,DWORD PTR [eax+0x35]
  4064a1:	jae    0x40643e
  4064a3:	fsub   st,st(5)
  4064a5:	mov    cl,BYTE PTR [ecx+0x790aadfa]
  4064ab:	mov    ds:0x114dba12,eax
  4064b0:	pop    edi
  4064b1:	enter  0xc4e7,0x9f
  4064b5:	push   ebp
  4064b6:	and    al,0xd7
  4064b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b9:	shl    BYTE PTR [edi+0x68fdc765],0xed
  4064c0:	rcl    DWORD PTR [esi+ebx*4+0x75],0x43
  4064c5:	loopne 0x40644f
  4064c7:	jnp    0x406461
  4064c9:	cwde   
  4064ca:	js     0x406520
  4064cc:	adc    cl,cl
  4064ce:	and    al,0x3
  4064d0:	cmp    DWORD PTR ds:0x9e6dc5bf,ebx
  4064d6:	pusha  
  4064d7:	icebp  
  4064d8:	loope  0x406461
  4064da:	jp     0x406526
  4064dc:	cmp    cl,BYTE PTR [eax-0x22]
  4064df:	push   eax
  4064e0:	pop    ecx
  4064e1:	mov    WORD PTR [ecx-0x6f8a8c3d],ss
  4064e7:	jns    0x4064c7
  4064e9:	xchg   ecx,eax
  4064ea:	test   BYTE PTR [edx],cl
  4064ec:	pop    esp
  4064ed:	jb     0x40653f
  4064ef:	ds jae 0x40651c
  4064f2:	mov    eax,0xd58b1d77
  4064f7:	imul   esp,DWORD PTR ds:0x5d6a0545,0x854007a7
  406501:	retf   
  406502:	ss es out dx,eax
  406505:	mov    eax,ds:0xe4255cf8
  40650a:	adc    dh,BYTE PTR [eax]
  40650c:	test   cl,0xc7
  40650f:	aam    0x56
  406511:	pop    edx
  406512:	sahf   
  406513:	test   BYTE PTR [esi+0x7dee4447],al
  406519:	mov    ds:0xc6ba3f37,al
  40651e:	lods   al,BYTE PTR ds:[esi]
  40651f:	inc    esi
  406520:	ins    BYTE PTR es:[edi],dx
  406521:	test   edi,0xfcbdf0fe
  406527:	inc    edi
  406528:	gs lahf 
  40652a:	or     al,0x72
  40652c:	ficom  WORD PTR [ebp-0x30]
  40652f:	(bad)  
  406530:	mov    ecx,0xc290fdd5
  406535:	jo     0x40659e
  406537:	mov    eax,ds:0x6f4d0417
  40653c:	out    0x24,al
  40653e:	leave  
  40653f:	push   ecx
  406540:	inc    ebp
  406541:	mov    bh,0xca
  406543:	mov    edx,0x9d09f742
  406548:	cmc    
  406549:	fld    DWORD PTR [ebx]
  40654b:	stos   DWORD PTR es:[edi],eax
  40654c:	mov    ds,WORD PTR ds:0xcc8544fc
  406552:	lods   eax,DWORD PTR ds:[esi]
  406553:	bound  edx,QWORD PTR ds:0x930b1456
  406559:	imul   ebp,DWORD PTR [edx-0x52],0x143b719c
  406560:	jmp    0xb708:0xf19525d6
  406567:	inc    esi
  406568:	sar    ecx,0x2c
  40656b:	cld    
  40656c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656d:	mov    ch,dl
  40656f:	in     eax,0x37
  406571:	add    BYTE PTR [ebx+0x2e395e1f],bh
  406577:	fisub  WORD PTR [esi+eax*4]
  40657a:	xchg   edi,eax
  40657b:	pop    esi
  40657c:	enter  0x88a4,0xbc
  406580:	sti    
  406581:	int    0x6d
  406583:	mov    BYTE PTR [ecx+0x4a9a2e58],dl
  406589:	sbb    DWORD PTR [edx],edx
  40658b:	sbb    eax,edx
  40658d:	xor    eax,0x28419f1c
  406592:	lea    edx,[eax-0x7ce53e7c]
  406598:	mov    esp,0x8937b109
  40659d:	cmp    ecx,DWORD PTR [ebx-0x14]
  4065a0:	retf   0xdaaf
  4065a3:	inc    ecx
  4065a4:	sbb    ecx,DWORD PTR [esi+0x3906dfd6]
  4065aa:	sbb    al,0x66
  4065ad:	pop    ecx
  4065ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065af:	js     0x40656d
  4065b1:	lock sub eax,0xffef33d1
  4065b7:	icebp  
  4065b8:	jne    0x406571
  4065ba:	sbb    al,0x30
  4065bc:	add    ebp,DWORD PTR [ebp+0x2c]
  4065bf:	js     0x4065da
  4065c1:	add    bl,BYTE PTR [edi-0x7216c69b]
  4065c7:	data16 adc bh,dl
  4065ca:	mov    ah,0x77
  4065cc:	int3   
  4065cd:	add    dh,bh
  4065cf:	inc    ebp
  4065d0:	lods   eax,DWORD PTR ds:[esi]
  4065d1:	push   ebp
  4065d2:	test   eax,0xb237aab
  4065d7:	test   al,0xb9
  4065d9:	mov    dh,0x84
  4065db:	add    ah,BYTE PTR [esi]
  4065dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065de:	addr16 mov edx,0xf3ee95ba
  4065e4:	(bad)  
  4065e5:	jmp    0x57d3ad32
  4065ea:	xchg   esp,eax
  4065eb:	sub    al,0x3f
  4065ed:	shl    DWORD PTR [edx],1
  4065ef:	adc    DWORD PTR [edi],ebp
  4065f1:	test   al,0x35
  4065f3:	add    eax,ebx
  4065f5:	je     0x40661d
  4065f7:	mov    al,ds:0x26a91b44
  4065fc:	pushf  
  4065fd:	outs   dx,BYTE PTR ds:[esi]
  4065fe:	pop    ss
  4065ff:	(bad)  
  406600:	and    dl,BYTE PTR [eax+0x205fd47d]
  406606:	mov    al,ds:0xd2c74f64
  40660b:	pop    ds
  40660c:	sub    eax,0xe787df27
  406611:	adc    BYTE PTR [edx-0x74b4739c],al
  406617:	mov    al,0x42
  406619:	jae    0x406665
  40661b:	sbb    al,0xdc
  40661d:	push   cs
  40661e:	outs   dx,BYTE PTR ds:[esi]
  40661f:	ret    
  406620:	dec    edx
  406621:	mov    al,ds:0x2f76660c
  406626:	shr    BYTE PTR [ebx-0x2a],1
  406629:	dec    eax
  40662a:	fldenv [ebx-0x10]
  40662d:	push   ds
  40662e:	idiv   DWORD PTR [eax+0x18]
  406631:	cmp    eax,0x79fd66ab
  406636:	jge    0x40669f
  406638:	mov    esp,0xfee75c27
  40663d:	aaa    
  40663e:	push   0xffffffc3
  406640:	inc    ecx
  406641:	cdq    
  406642:	push   ebp
  406643:	imul   esi,esp,0x99f114cf
  406649:	mov    dl,0xba
  40664b:	inc    ecx
  40664c:	imul   ebp,DWORD PTR [ebp+ebp*4-0x3d],0x5556e8be
  406654:	loopne 0x406643
  406656:	push   edx
  406657:	ins    DWORD PTR es:[edi],dx
  406658:	sub    BYTE PTR [ebx-0x66],ch
  40665b:	bound  eax,QWORD PTR [eax-0x16]
  40665e:	in     al,0x4c
  406660:	inc    ebx
  406661:	clc    
  406662:	lods   al,BYTE PTR ds:[esi]
  406663:	sbb    BYTE PTR [esi-0x13],0x43
  406667:	push   ebx
  406668:	outs   dx,BYTE PTR ds:[esi]
  406669:	or     ecx,DWORD PTR ds:[ebx]
  40666c:	jle    0x40660b
  40666e:	mov    ebp,0xd5ca65b6
  406673:	inc    edx
  406674:	ins    BYTE PTR es:[edi],dx
  406675:	adc    eax,DWORD PTR [edx-0x4e]
  406678:	cmp    eax,0xce4bb205
  40667d:	pop    ds
  40667e:	addr16 gs test eax,0xf0ebdcd2
  406685:	inc    ebp
  406686:	xchg   esi,eax
  406687:	xchg   edx,eax
  406688:	pop    ds
  406689:	addr16 loop 0x4066d2
  40668c:	call   0x177fea43
  406691:	add    BYTE PTR [edx+0x65],bh
  406694:	out    dx,al
  406695:	fwait
  406696:	cmc    
  406697:	dec    edi
  406698:	sbb    ebp,DWORD PTR [esi-0x2c]
  40669b:	loopne 0x406645
  40669d:	aam    0xf1
  40669f:	fbld   TBYTE PTR ds:0x7ccd4b17
  4066a5:	pop    ds
  4066a6:	add    BYTE PTR [ecx],bh
  4066a8:	or     BYTE PTR [ebp+0x471edde5],ch
  4066ae:	inc    edi
  4066af:	rcl    BYTE PTR [edi-0x14050b5e],cl
  4066b5:	daa    
  4066b6:	mov    esi,0x7570d6e
  4066bb:	dec    ebx
  4066bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066bd:	lds    esp,FWORD PTR ds:0xfa0d9042
  4066c3:	lds    esp,FWORD PTR [edi-0x2d]
  4066c6:	mov    esi,edi
  4066c8:	mov    edi,0x4967dacb
  4066cd:	pop    eax
  4066ce:	sub    al,0x88
  4066d0:	push   ds
  4066d1:	ss maxps xmm7,xmm5
  4066d5:	ror    BYTE PTR [eax+0x6a],0x38
  4066d9:	fcomp  QWORD PTR es:[ecx]
  4066dc:	jecxz  0x406759
  4066de:	dec    ebx
  4066df:	or     al,0x68
  4066e1:	adc    edi,DWORD PTR ds:0x8af950aa
  4066e7:	cmp    DWORD PTR [edi+edx*8+0x357f7ddc],ecx
  4066ee:	and    edi,DWORD PTR [edx+0x46b10fe2]
  4066f4:	or     BYTE PTR [edi-0x50d91f0f],ah
  4066fa:	jmp    0xba76:0x17380951
  406701:	int3   
  406702:	aad    0x2
  406704:	sahf   
  406705:	div    DWORD PTR [ebx]
  406707:	iret   
  406708:	mov    cl,BYTE PTR [edi]
  40670a:	stc    
  40670b:	hlt    
  40670c:	jnp    0x40673c
  40670e:	lea    esp,[eax-0x19]
  406711:	cmp    al,0x7d
  406713:	jne    0x4066b9
  406715:	mov    al,0x83
  406717:	sti    
  406718:	pop    esi
  406719:	scas   eax,DWORD PTR es:[edi]
  40671a:	imul   ebp,esi,0xffffffaf
  40671d:	lock adc ch,BYTE PTR [ebp-0x63]
  406721:	cmp    al,0x4
  406723:	mov    dh,0xb1
  406725:	xor    eax,0xc2634015
  40672a:	push   edi
  40672b:	add    dh,BYTE PTR [eax]
  40672d:	(bad)  
  40672e:	push   edi
  40672f:	mov    edi,0xc249377a
  406734:	retfw  
  406736:	push   esp
  406737:	sbb    eax,0xca5070f9
  40673c:	dec    edx
  40673d:	inc    esp
  40673e:	pop    edx
  40673f:	cmp    DWORD PTR [edi+esi*1-0x5dd7f340],0x58
  406747:	daa    
  406748:	pusha  
  406749:	in     al,dx
  40674a:	stos   DWORD PTR es:[edi],eax
  40674b:	add    dl,BYTE PTR ds:0x673ae7ef
  406751:	xor    esi,DWORD PTR [edi+0x45]
  406754:	inc    ebp
  406755:	mov    eax,0x67bf3ac7
  40675a:	sub    DWORD PTR [esi+0x6d1dceec],0xffffffd0
  406761:	pop    ss
  406762:	cmp    BYTE PTR [ecx+esi*8+0x63],cl
  406766:	fs ds pop ebx
  406769:	test   al,0x24
  40676b:	dec    eax
  40676c:	ror    BYTE PTR [esi+0x60e11ae8],1
  406772:	gs sub DWORD PTR cs:[esi],eax
  406776:	sub    al,0xa
  406778:	gs push eax
  40677a:	ins    DWORD PTR es:[edi],dx
  40677b:	mov    dl,BYTE PTR [ebx-0x40]
  40677e:	dec    eax
  40677f:	pushf  
  406780:	pop    eax
  406781:	mov    al,ds:0x373d4720
  406786:	mov    bl,0x72
  406788:	bound  esp,QWORD PTR [ebx-0x78]
  40678b:	in     eax,0x6e
  40678d:	pop    esi
  40678e:	sar    BYTE PTR [edx],cl
  406790:	mov    BYTE PTR [ebx],cl
  406792:	fstp   QWORD PTR [esi+ebp*2-0x34]
  406796:	popa   
  406797:	xor    eax,0x80ef2378
  40679c:	(bad)  
  40679d:	js     0x4067be
  40679f:	iret   
  4067a0:	dec    esp
  4067a1:	and    DWORD PTR [eax+0x5fce0711],ebp
  4067a7:	das    
  4067a8:	add    al,BYTE PTR [eax+eax*2]
  4067ab:	daa    
  4067ac:	push   esi
  4067ad:	mov    WORD PTR [edi],fs
  4067af:	out    0xfe,eax
  4067b1:	jp     0x4067bf
  4067b3:	sbb    ch,BYTE PTR [eax-0x663b2791]
  4067b9:	push   edi
  4067ba:	repnz dec esp
  4067bc:	test   eax,0x26fe6ff9
  4067c1:	push   ds
  4067c2:	repnz inc eax
  4067c4:	or     al,0xba
  4067c6:	fimul  WORD PTR [ebp-0x7c]
  4067c9:	sahf   
  4067ca:	(bad)  
  4067cb:	clc    
  4067cc:	cmp    esi,edi
  4067ce:	cmp    DWORD PTR [eax+0x6f],0xffffffd9
  4067d2:	frstor [ebp-0x37]
  4067d5:	mov    bl,0x73
  4067d7:	cdq    
  4067d8:	xchg   esi,eax
  4067d9:	sub    eax,0xfd4588d8
  4067de:	mov    al,0xf8
  4067e0:	pop    ecx
  4067e1:	or     BYTE PTR [edx-0x17],cl
  4067e4:	push   si
  4067e6:	xor    eax,0xcdb2e3fa
  4067eb:	std    
  4067ec:	mov    ah,0x7b
  4067ee:	repz bound eax,QWORD PTR [ebx]
  4067f1:	std    
  4067f2:	add    DWORD PTR gs:[ebx],ebx
  4067f5:	pop    es
  4067f6:	outs   dx,BYTE PTR ds:[esi]
  4067f7:	cmc    
  4067f8:	stos   DWORD PTR es:[edi],eax
  4067f9:	cs xchg ebx,eax
  4067fb:	daa    
  4067fc:	mov    eax,0xc02df293
  406801:	(bad)  
  406802:	cmp    al,ah
  406804:	sbb    al,bl
  406806:	stos   DWORD PTR es:[edi],eax
  406807:	nop
  406808:	loope  0x406799
  40680a:	sub    al,0xb1
  40680c:	outs   dx,DWORD PTR ds:[esi]
  40680d:	in     al,dx
  40680e:	(bad)
  406811:	mov    ebp,0xea39cecf
  406816:	sub    eax,0x7401578d
  40681b:	or     edi,0x2fb00a
  406821:	fsubrp st(4),st
  406823:	jl     0x406813
  406825:	inc    ecx
  406826:	or     DWORD PTR [eax-0x76],edx
  406829:	(bad)  
  40682a:	enter  0xd07d,0x24
  40682e:	test   DWORD PTR [edx+0x3d2f4760],edx
  406834:	and    DWORD PTR [edx],esp
  406836:	mov    ds,WORD PTR [ebx]
  406838:	adc    ecx,DWORD PTR [edi]
  40683a:	std    
  40683b:	or     dh,BYTE PTR [edx]
  40683d:	hlt    
  40683e:	sbb    dh,BYTE PTR [edi-0x70]
  406841:	push   cs
  406842:	or     al,0x17
  406844:	rol    BYTE PTR [esp+eax*2-0x47],0x86
  406849:	fsubr  DWORD PTR [ecx]
  40684b:	and    BYTE PTR [edi+0x1e7dfd2],dl
  406851:	push   0x20b162a1
  406856:	xchg   esp,eax
  406857:	sbb    BYTE PTR [eax-0x777c7656],dl
  40685d:	mov    ds:0x42f91af2,al
  406862:	retf   0x3bf8
  406865:	sbb    al,0x4a
  406867:	mov    edx,0xeee62a31
  40686c:	icebp  
  40686d:	push   edx
  40686e:	sub    DWORD PTR cs:[esi],eax
  406871:	push   ebp
  406872:	xchg   ebp,eax
  406873:	jbe    0x40683a
  406875:	push   ebp
  406876:	arpl   WORD PTR ds:0xb81ca408,bp
  40687c:	rcl    BYTE PTR [edx],0xe6
  40687f:	sub    DWORD PTR [edx-0x4e],ebp
  406882:	aad    0x99
  406884:	dec    edx
  406885:	mov    al,ds:0x80608c82
  40688a:	loope  0x4068a8
  40688c:	mov    ebx,DWORD PTR [eax+edi*8]
  40688f:	mov    bh,0x2b
  406891:	pop    ds
  406892:	mov    eax,ds:0x7d1f3545
  406897:	stos   DWORD PTR es:[edi],eax
  406898:	sbb    al,0x76
  40689a:	inc    eax
  40689b:	mov    dh,0xdb
  40689d:	bound  esi,QWORD PTR [ebp-0x19d5de7a]
  4068a3:	(bad)  
  4068a5:	jo     0x40687c
  4068a7:	cs jmp 0x8033:0x47c47fc5
  4068af:	dec    edi
  4068b0:	stc    
  4068b1:	pusha  
  4068b2:	addr16 push es
  4068b4:	fnstsw WORD PTR [ecx-0x39]
  4068b7:	mov    al,BYTE PTR [ebx]
  4068b9:	icebp  
  4068ba:	icebp  
  4068bb:	adc    al,0xdd
  4068bd:	xchg   ecx,eax
  4068be:	hlt    
  4068bf:	mov    eax,0x31610e38
  4068c4:	xchg   ecx,eax
  4068c5:	inc    edx
  4068c6:	stos   BYTE PTR es:[edi],al
  4068c7:	push   ebp
  4068c8:	imul   ecx,esi,0x544e5ae1
  4068ce:	jbe    0x4068b2
  4068d0:	or     bh,BYTE PTR [ebp-0x28]
  4068d3:	add    BYTE PTR [esp+edx*2+0x52],dl
  4068d7:	and    DWORD PTR [esi+0x10],ecx
  4068da:	mov    DWORD PTR [ebp+0x4d],esp
  4068dd:	pop    ebx
  4068de:	and    BYTE PTR [edx-0xf90007b],ah
  4068e4:	adc    BYTE PTR [edx-0x15a1d80],cl
  4068ea:	jb     0x4068e7
  4068ec:	pop    es
  4068ed:	pop    esi
  4068ee:	fidiv  DWORD PTR [ebp+0x7e]
  4068f1:	lock push cs
  4068f3:	sbb    eax,0x4cadf511
  4068f8:	lods   al,BYTE PTR ds:[esi]
  4068f9:	xchg   bl,ah
  4068fb:	sbb    al,0x61
  4068fd:	pop    edx
  4068fe:	push   eax
  4068ff:	inc    ebx
  406900:	xchg   ebp,eax
  406901:	mov    BYTE PTR [ebx],bl
  406903:	cmp    eax,0x25d3d0b
  406908:	test   edi,0xa3c1d56f
  40690e:	mov    eax,0x6d0c7945
  406913:	xor    BYTE PTR [eax-0x73],0x34
  406917:	sbb    al,0xaf
  406919:	outs   dx,DWORD PTR ds:[esi]
  40691a:	inc    ebx
  40691b:	scas   al,BYTE PTR es:[edi]
  40691c:	cwde   
  40691d:	cli    
  40691e:	(bad)  
  406920:	fdivr  QWORD PTR [ebp-0x8]
  406923:	popa   
  406924:	ins    BYTE PTR es:[edi],dx
  406925:	cmp    al,0xc6
  406927:	cmp    ah,BYTE PTR [ecx]
  406929:	mov    dh,0x3a
  40692b:	loop   0x406965
  40692d:	inc    ebp
  40692e:	adc    dh,BYTE PTR [ebp-0x67bd4b5d]
  406934:	cmp    dl,BYTE PTR [ecx]
  406936:	and    BYTE PTR [edx+0x37440f4f],al
  40693c:	or     DWORD PTR [ebx],0xbe924d55
  406942:	les    esp,FWORD PTR [ecx-0x74]
  406945:	or     ebp,DWORD PTR [ecx]
  406947:	ds ins BYTE PTR es:[edi],dx
  406949:	js     0x40697d
  40694b:	(bad)  
  40694c:	push   0x4
  40694e:	pop    ebx
  40694f:	int    0xd0
  406951:	and    eax,0x245e20da
  406956:	lahf   
  406957:	stos   BYTE PTR es:[edi],al
  406958:	and    eax,esp
  40695a:	(bad)  
  40695b:	fs ds xchg ecx,eax
  40695e:	mov    edi,0x49f3ac3a
  406963:	push   es
  406964:	popf   
  406965:	pop    ebp
  406966:	sub    al,0xa5
  406968:	jo     0x406955
  40696a:	pusha  
  40696b:	and    dh,al
  40696d:	add    eax,0x4f4d2239
  406972:	sbb    BYTE PTR [ecx-0xf5cd911],bh
  406978:	mov    ah,0xf5
  40697a:	jb     0x406908
  40697c:	out    dx,al
  40697d:	and    eax,0x3561d30c
  406982:	push   es
  406983:	in     al,0xae
  406985:	sbb    ebx,ecx
  406987:	inc    esp
  406988:	mov    eax,ebp
  40698a:	aaa    
  40698b:	dec    ecx
  40698c:	inc    edi
  40698d:	mov    ecx,0xccf46e54
  406992:	push   ebx
  406993:	call   0x40cb:0xbde7b415
  40699a:	pop    ebp
  40699b:	in     al,0xb2
  40699d:	in     al,0xe4
  40699f:	sub    ah,ah
  4069a1:	and    ch,BYTE PTR [ebx+0x2e]
  4069a4:	sub    edx,DWORD PTR [edi+0x126875e2]
  4069aa:	mov    ebp,0x8ca9a2ca
  4069af:	(bad)  
  4069b0:	bound  edi,QWORD PTR [edi+0x24]
  4069b3:	and    eax,0xc32e1eef
  4069b8:	jmp    0x84b0:0x833bde45
  4069bf:	out    dx,eax
  4069c0:	fbstp  TBYTE PTR [esp+ebp*8]
  4069c3:	adc    al,0x91
  4069c5:	mov    bh,0xc4
  4069c7:	fidivr DWORD PTR [esi]
  4069c9:	in     eax,dx
  4069ca:	aam    0x8f
  4069cc:	in     al,dx
  4069cd:	mov    al,ds:0xb6beaf70
  4069d2:	xor    eax,0xaa90045f
  4069d7:	fdivr  DWORD PTR ds:0x3892de2
  4069dd:	sub    DWORD PTR [edi],ebx
  4069df:	pop    eax
  4069e0:	outs   dx,BYTE PTR ds:[esi]
  4069e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e2:	cmp    eax,0x3cf0aa42
  4069e7:	arpl   WORD PTR [eax-0x3728f3bd],sp
  4069ed:	mul    BYTE PTR [ecx]
  4069ef:	mov    dl,0xd6
  4069f1:	xor    eax,0x353cdb7b
  4069f6:	adc    ebp,DWORD PTR [ecx-0x34670cd9]
  4069fc:	jge    0x40698a
  4069fe:	mov    bl,0xf4
  406a00:	data16 fnstsw WORD PTR [edx+0x314ed960]
  406a07:	das    
  406a08:	shl    bl,1
  406a0a:	sbb    al,0x4
  406a0c:	aad    0xc6
  406a0e:	fisttp DWORD PTR [edx-0x6b]
  406a11:	push   ebp
  406a12:	scas   al,BYTE PTR es:[edi]
  406a13:	and    BYTE PTR [edi+0x15],0xa7
  406a17:	lods   al,BYTE PTR ds:[esi]
  406a18:	jmp    FWORD PTR [ebx]
  406a1a:	jns    0x406a83
  406a1c:	fadd   DWORD PTR [eax-0x3]
  406a1f:	cmp    al,0x15
  406a21:	push   es
  406a22:	sub    ecx,eax
  406a24:	add    ebp,edi
  406a26:	xor    BYTE PTR [ebx-0x665c81ca],0x78
  406a2d:	mov    WORD PTR [ebx+eax*4+0x3f],?
  406a31:	mov    al,ds:0x408820a9
  406a36:	xor    al,0xf5
  406a38:	sbb    eax,0xf98ea137
  406a3d:	loope  0x406aa4
  406a3f:	or     al,0xfe
  406a41:	dec    esp
  406a42:	adc    al,0xfa
  406a44:	jae    0x406a66
  406a46:	jns    0x406abf
  406a48:	stos   BYTE PTR es:[edi],al
  406a49:	fwait
  406a4a:	pop    es
  406a4b:	data16 xchg ch,al
  406a4e:	mov    fs,WORD PTR [esi+0x280446c1]
  406a54:	mov    edx,0xc547794c
  406a59:	or     eax,0xc4b0a507
  406a5e:	push   ds
  406a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a60:	rep lods al,BYTE PTR ds:[esi]
  406a62:	mov    BYTE PTR [edx],al
  406a64:	es jns 0x4069f8
  406a67:	cld    
  406a68:	pop    ecx
  406a69:	mov    ds:0x3dd94bdb,al
  406a6e:	ins    BYTE PTR es:[edi],dx
  406a6f:	pop    ecx
  406a70:	xchg   BYTE PTR [esi],dl
  406a72:	or     bh,BYTE PTR [edi-0x364a871f]
  406a78:	xor    esp,DWORD PTR [ebx+eiz*1]
  406a7b:	pop    eax
  406a7c:	fdivp  st(1),st
  406a7e:	xchg   ecx,eax
  406a7f:	out    0xfa,al
  406a81:	xchg   edx,eax
  406a82:	fstp   TBYTE PTR [edi+0x2d]
  406a85:	or     al,dl
  406a87:	retf   
  406a88:	dec    ebx
  406a89:	retf   0x7cdd
  406a8c:	cmp    BYTE PTR [edx-0x492991c8],ah
  406a92:	aas    
  406a93:	xor    DWORD PTR [eax+0x7e],edx
  406a96:	xchg   ebx,eax
  406a97:	stos   DWORD PTR es:[edi],eax
  406a98:	add    al,bl
  406a9a:	in     eax,0x8c
  406a9c:	ucomiss xmm0,DWORD PTR [esi+0x45321697]
  406aa3:	aaa    
  406aa4:	and    eax,0x904f2f09
  406aa9:	(bad)  
  406aaa:	repnz repnz mov esp,0xde2ef1d8
  406ab1:	and    al,0xaa
  406ab3:	in     eax,0x24
  406ab5:	mov    ebp,0xfcc994b1
  406aba:	push   ecx
  406abb:	fmul   DWORD PTR [esi-0x2b90c925]
  406ac1:	add    BYTE PTR [ebp-0x7a23bceb],0xff
  406ac8:	sub    BYTE PTR [ebx],dl
  406aca:	scas   al,BYTE PTR es:[edi]
  406acb:	in     al,dx
  406acc:	pop    es
  406acd:	add    bh,bl
  406acf:	jecxz  0x406a54
  406ad1:	shr    DWORD PTR [edi+0x12],1
  406ad4:	imul   edx,ecx,0x33f6ab6d
  406ada:	inc    esp
  406adb:	mov    edx,0x2ee110e0
  406ae0:	mov    cl,0x15
  406ae2:	xor    bh,BYTE PTR [ecx]
  406ae4:	xchg   esp,eax
  406ae5:	sub    al,0x7d
  406ae7:	mov    esp,0xf049535
  406aec:	adc    BYTE PTR [ebp-0x55db8c64],bh
  406af2:	xchg   ebp,eax
  406af3:	fisub  WORD PTR [edi+0x4ee5e463]
  406af9:	arpl   bx,cx
  406afb:	inc    ecx
  406afc:	sbb    eax,0x105eda53
  406b01:	xor    eax,0x6dfa38d0
  406b06:	leave  
  406b07:	cmp    dh,cl
  406b09:	pop    ecx
  406b0a:	and    eax,0xd179b445
  406b0f:	push   cs
  406b10:	xor    esi,edi
  406b12:	jnp    0x406af9
  406b14:	(bad)  
  406b15:	mov    eax,0xfe6d7922
  406b1a:	rcl    BYTE PTR [ebx],cl
  406b1c:	and    esp,DWORD PTR [edx+edi*4]
  406b1f:	lahf   
  406b20:	cmp    eax,0x90b40969
  406b25:	mov    esi,0xcc988329
  406b2a:	xchg   ecx,eax
  406b2b:	lods   al,BYTE PTR ds:[esi]
  406b2c:	jnp    0x406b7e
  406b2e:	push   ss
  406b2f:	arpl   WORD PTR [edi-0x33c76bce],di
  406b35:	add    al,0xd0
  406b37:	int3   
  406b38:	in     eax,dx
  406b39:	add    dl,0xf4
  406b3c:	stos   DWORD PTR es:[edi],eax
  406b3d:	and    eax,0x8a0a0450
  406b42:	(bad)  
  406b43:	clc    
  406b44:	lahf   
  406b45:	xor    bh,BYTE PTR [esp+eiz*8]
  406b48:	daa    
  406b49:	scas   eax,DWORD PTR es:[edi]
  406b4a:	pop    eax
  406b4b:	shl    DWORD PTR [ecx],cl
  406b4d:	jnp    0x406aef
  406b4f:	add    DWORD PTR [edx+0x76bfc1e8],edi
  406b55:	ds pop ebx
  406b57:	ror    bl,cl
  406b59:	add    eax,0x438a0c34
  406b5e:	mov    bh,0xcc
  406b60:	mov    esi,0x86378616
  406b65:	xchg   ebp,eax
  406b66:	add    al,0xe5
  406b68:	cmp    al,0xf2
  406b6a:	mov    al,0x19
  406b6c:	push   esi
  406b6d:	test   BYTE PTR [edi+0x43732528],bh
  406b73:	add    BYTE PTR [edx-0x5c6cc2a],0xae
  406b7a:	ds mov edx,0xd1c7c359
  406b80:	cmp    ch,BYTE PTR [esi-0x5a]
  406b83:	mov    eax,ds:0x509daa07
  406b88:	pop    edi
  406b89:	jle    0x406b62
  406b8b:	es xchg ecx,eax
  406b8d:	test   eax,0xb2d2475a
  406b92:	sub    ebp,DWORD PTR [eax]
  406b94:	mov    edx,0x6743fd5a
  406b99:	inc    edx
  406b9a:	iret   
  406b9b:	icebp  
  406b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9e:	jg     0x406c1e
  406ba0:	je     0x406b49
  406ba2:	pushf  
  406ba3:	ss loop 0x406be5
  406ba6:	test   al,0xf8
  406ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba9:	in     eax,dx
  406baa:	jp     0x406b36
  406bac:	xor    DWORD PTR [esi-0x37bc5621],ebx
  406bb2:	nop
  406bb3:	lods   eax,DWORD PTR ds:[esi]
  406bb4:	jmp    0x406b51
  406bb6:	sbb    al,0xba
  406bb8:	cmp    al,0xba
  406bba:	push   es
  406bbb:	clc    
  406bbc:	jns    0x406c1f
  406bbe:	(bad)
  406bc2:	(bad)  
  406bc3:	sahf   
  406bc4:	push   ebx
  406bc5:	push   eax
  406bc6:	adc    eax,0x7c5c026f
  406bcb:	pop    ebx
  406bcc:	rcr    DWORD PTR [eax],0xa5
  406bcf:	lods   eax,DWORD PTR ds:[esi]
  406bd0:	adc    BYTE PTR [esi-0x26],al
  406bd3:	adc    dl,dl
  406bd5:	dec    ebx
  406bd6:	fwait
  406bd7:	test   al,0xfd
  406bd9:	sti    
  406bda:	push   esp
  406bdb:	or     al,0x10
  406bdd:	jno    0x406b8a
  406bdf:	mov    DWORD PTR [ebp+ebp*1-0x28],eax
  406be3:	outs   dx,BYTE PTR ds:[esi]
  406be4:	dec    ebx
  406be5:	jecxz  0x406bb9
  406be7:	sub    eax,0xf86f7072
  406bec:	and    eax,0xe20e52bf
  406bf1:	pop    ds
  406bf2:	cwde   
  406bf3:	out    0xb6,eax
  406bf5:	dec    ebp
  406bf6:	test   eax,0xbc024fde
  406bfb:	mov    esi,0x366f1834
  406c00:	(bad)
  406c04:	lods   al,BYTE PTR ds:[esi]
  406c05:	test   BYTE PTR [ebp+ecx*2-0x309a459c],cl
  406c0c:	sbb    eax,0x4645ce4b
  406c11:	out    dx,eax
  406c12:	dec    BYTE PTR [eax+0x3d]
  406c15:	dec    edi
  406c16:	inc    ebx
  406c17:	cmc    
  406c18:	mov    ds:0xddb17ed9,eax
  406c1d:	adc    DWORD PTR [esi-0x5c1b35c3],ebx
  406c23:	mov    esi,0x2a8d90cb
  406c28:	out    dx,al
  406c29:	xor    ch,BYTE PTR [esi-0x76]
  406c2c:	push   esi
  406c2d:	in     eax,dx
  406c2e:	sbb    dh,al
  406c30:	rcl    DWORD PTR [ecx],1
  406c32:	push   cs
  406c33:	ret    0x616a
  406c36:	rcl    esp,1
  406c38:	out    dx,al
  406c39:	leave  
  406c3a:	ret    0x6855
  406c3d:	ds ror ebx,0xd0
  406c41:	pop    ecx
  406c42:	in     al,dx
  406c43:	dec    ebp
  406c44:	lods   eax,DWORD PTR ds:[esi]
  406c45:	xchg   ebp,eax
  406c46:	fisttp WORD PTR [eax]
  406c48:	mov    esp,ss
  406c4a:	jecxz  0x406c75
  406c4c:	test   BYTE PTR [edx-0x507e827c],al
  406c52:	jno    0x406c7f
  406c54:	shr    BYTE PTR [ecx-0x3b85cee9],1
  406c5a:	push   ds
  406c5b:	test   DWORD PTR [ebx-0x4d],edi
  406c5e:	outs   dx,BYTE PTR ds:[esi]
  406c5f:	pop    edi
  406c60:	xor    BYTE PTR [ecx],dh
  406c62:	sub    al,0x60
  406c64:	jno    0x406c03
  406c66:	add    DWORD PTR [ebx],0xffffffc5
  406c69:	sub    BYTE PTR [ebp+0x76],0xc8
  406c6d:	xor    dl,BYTE PTR [esp+edi*2]
  406c70:	mov    esi,0x845bfa83
  406c75:	fst    DWORD PTR [ecx+0x172fff0b]
  406c7b:	xchg   esp,eax
  406c7c:	adc    eax,0xaf74192
  406c81:	xchg   esp,eax
  406c82:	push   ebx
  406c83:	inc    esp
  406c84:	xor    ebp,DWORD PTR [ecx]
  406c86:	mov    ebp,0x31d69934
  406c8b:	dec    edi
  406c8c:	fisub  DWORD PTR [ebp-0x57]
  406c8f:	repz fs scas al,BYTE PTR es:[edi]
  406c92:	adc    al,BYTE PTR [ebp+0x7e]
  406c95:	add    al,0x3a
  406c97:	add    al,0x6a
  406c99:	in     eax,dx
  406c9a:	icebp  
  406c9b:	(bad)  
  406c9c:	inc    edx
  406c9d:	cdq    
  406c9e:	dec    esp
  406c9f:	or     ebp,esi
  406ca1:	or     cl,BYTE PTR [edx-0x65]
  406ca4:	enter  0x64de,0xfc
  406ca8:	pop    esp
  406ca9:	into   
  406caa:	push   ebx
  406cab:	dec    ecx
  406cac:	xor    ebp,DWORD PTR [ecx+edi*1-0x6e3d8f63]
  406cb3:	cwde   
  406cb4:	ret    
  406cb5:	sub    al,BYTE PTR [edx]
  406cb7:	mov    dh,0x95
  406cb9:	imul   esi,DWORD PTR [eax+ecx*8+0x1],0xffffffa1
  406cbe:	pushf  
  406cbf:	repnz cld 
  406cc1:	jmp    0x44c237a5
  406cc6:	sbb    BYTE PTR [eax],bh
  406cc8:	lock aad 0xb5
  406ccb:	cmp    ecx,eax
  406ccd:	dec    eax
  406cce:	dec    edi
  406ccf:	call   0xf5cf2c45
  406cd4:	dec    eax
  406cd5:	(bad)  
  406cd6:	cmc    
  406cd7:	and    edi,edx
  406cd9:	push   esi
  406cda:	or     BYTE PTR [eax],al
  406cdc:	neg    edi
  406cde:	add    BYTE PTR [ebx+0x46],dl
  406ce1:	jb     0x406ccf
  406ce3:	mov    eax,ecx
  406ce5:	sub    bh,BYTE PTR [edx]
  406ce7:	add    al,0x1f
  406ce9:	dec    ebp
  406cea:	pop    edx
  406ceb:	je     0x406cb4
  406ced:	mov    al,ds:0x7da5ea0e
  406cf2:	int3   
  406cf3:	enter  0xe3d2,0xc
  406cf7:	xor    dl,BYTE PTR [edx-0x50d3d448]
  406cfd:	mov    bl,0x3a
  406cff:	aad    0x3e
  406d01:	inc    ebx
  406d02:	push   0x1a
  406d04:	push   esp
  406d05:	sbb    edi,DWORD PTR [eax+0x4d]
  406d08:	push   cs
  406d09:	repz jg 0x406d3c
  406d0c:	push   0xf1b94a80
  406d11:	add    al,0xd8
  406d13:	xchg   edi,eax
  406d14:	xchg   esp,eax
  406d15:	jmp    0x5671:0xe5df0c84
  406d1c:	aam    0xbb
  406d1e:	fst    QWORD PTR [edx-0x3c8c91]
  406d24:	popf   
  406d25:	xchg   BYTE PTR es:[ebp-0x5a],al
  406d29:	xchg   BYTE PTR [ecx+0x55de212d],cl
  406d2f:	call   0xc1f6:0xe07ee42e
  406d36:	idiv   DWORD PTR [edi]
  406d38:	and    dh,cl
  406d3a:	lods   al,BYTE PTR ds:[esi]
  406d3b:	sti    
  406d3c:	and    DWORD PTR ds:0x4daea7fa,0x65
  406d43:	jmp    0x406d22
  406d45:	jne    0x406d0c
  406d47:	dec    eax
  406d48:	jle    0x406dc5
  406d4a:	aam    0x49
  406d4c:	shl    esp,0xe
  406d4f:	pop    eax
  406d50:	mov    bl,0x4a
  406d52:	fild   DWORD PTR [ebx]
  406d54:	int    0x32
  406d56:	xchg   ebp,eax
  406d57:	pop    es
  406d58:	std    
  406d59:	(bad)  
  406d5a:	lock push ebx
  406d5c:	dec    ebp
  406d5d:	cmp    eax,0xdb46e1d7
  406d62:	mov    edi,0xaf619534
  406d67:	(bad)  
  406d68:	push   0x77fc4d98
  406d6d:	push   edi
  406d6e:	fdiv   st(0),st
  406d70:	leave  
  406d71:	stc    
  406d72:	xchg   esi,eax
  406d73:	dec    ebp
  406d74:	scas   al,BYTE PTR es:[edi]
  406d75:	fstp   DWORD PTR [esi]
  406d77:	pop    ebx
  406d78:	aaa    
  406d79:	sbb    al,bl
  406d7b:	sub    eax,0xe13575ca
  406d80:	mov    ds:0x40ad31e2,eax
  406d85:	sbb    DWORD PTR [edx+0x18],0x73
  406d89:	cmp    esi,DWORD PTR [esi-0x3493b580]
  406d8f:	imul   edx,eax,0xfffffff4
  406d92:	cmp    esp,0xffffffab
  406d95:	sub    esi,DWORD PTR [edx+0x39e4f594]
  406d9b:	or     al,0xaf
  406d9d:	out    dx,al
  406d9e:	xchg   BYTE PTR [esi],cl
  406da0:	repz repz push eax
  406da3:	add    DWORD PTR [esi-0x1c675e21],eax
  406da9:	ins    DWORD PTR es:[edi],dx
  406daa:	pop    ds
  406dab:	mov    DWORD PTR [eax],edi
  406dad:	call   0xf5e75f
  406db2:	push   esi
  406db3:	mov    bh,0xd0
  406db5:	xor    eax,0xcd76dc6b
  406dba:	cs dec edi
  406dbc:	sub    al,0xf
  406dbe:	call   0x4b03:0x2f28d5a7
  406dc5:	sub    DWORD PTR [ebp+0x551d6241],edi
  406dcb:	jl     0x406e23
  406dcd:	out    0x8c,al
  406dcf:	xchg   BYTE PTR [eax+0x2e],al
  406dd2:	cdq    
  406dd3:	call   FWORD PTR [ebx+0x6a]
  406dd6:	adc    esi,ecx
  406dd8:	pusha  
  406dd9:	cmova  ecx,esi
  406ddc:	clc    
  406ddd:	jmp    0x406d80
  406ddf:	scas   eax,DWORD PTR es:[edi]
  406de0:	outs   dx,BYTE PTR ds:[esi]
  406de1:	xchg   DWORD PTR [edi+0x64ead341],eax
  406de7:	dec    esi
  406de8:	push   edi
  406de9:	ror    dl,0xca
  406dec:	aad    0xf5
  406dee:	or     eax,0x4169cd3d
  406df3:	mov    bh,0xa7
  406df5:	jmp    0x406e2e
  406df7:	sbb    DWORD PTR [eax-0x2f0f70ea],edi
  406dfd:	aad    0xbc
  406dff:	or     BYTE PTR [ecx],ah
  406e01:	or     BYTE PTR [edx],ah
  406e03:	xchg   edi,eax
  406e04:	bound  esp,QWORD PTR [ebp-0x31]
  406e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e08:	mov    eax,ds:0x7c54a27e
  406e0d:	lahf   
  406e0e:	shl    BYTE PTR [edx-0x6f12b771],cl
  406e14:	ret    
  406e15:	fistp  QWORD PTR [esi-0x46]
  406e18:	xchg   ecx,eax
  406e19:	(bad)  
  406e1b:	out    0x2c,eax
  406e1d:	rcr    DWORD PTR [eax],0x72
  406e20:	push   0xffffffbd
  406e22:	xor    DWORD PTR [eax],edi
  406e24:	scas   eax,DWORD PTR es:[edi]
  406e25:	mov    ah,0x6b
  406e27:	sub    al,0xf8
  406e29:	leave  
  406e2a:	call   0xcbb0:0x5067a431
  406e31:	or     al,0xb8
  406e33:	out    0xca,eax
  406e35:	cmp    eax,0x6e298ee7
  406e3a:	in     al,dx
  406e3b:	repnz and DWORD PTR [ebx],esp
  406e3e:	dec    edi
  406e3f:	push   esi
  406e40:	inc    esp
  406e41:	retf   
  406e42:	ficom  WORD PTR [ebp+0x7f416b85]
  406e48:	sbb    esi,DWORD PTR [ebx+esi*1]
  406e4b:	ins    BYTE PTR es:[edi],dx
  406e4c:	push   es
  406e4d:	push   ss
  406e4e:	rol    BYTE PTR [bx+si],cl
  406e51:	test   al,0xd4
  406e53:	aam    0x34
  406e55:	xchg   esi,eax
  406e56:	call   0xdcee:0x7cd7b5d5
  406e5d:	xchg   BYTE PTR [edi+0x65],dl
  406e60:	mov    eax,ds:0xa4bb1f64
  406e65:	ins    DWORD PTR es:[edi],dx
  406e66:	sub    esp,ecx
  406e68:	cmp    ch,bh
  406e6a:	stos   BYTE PTR es:[edi],al
  406e6b:	es mov ch,0x44
  406e6e:	fcom   DWORD PTR [ebx*8+0x3da522a6]
  406e75:	add    DWORD PTR [esi-0x1b49fc4b],eax
  406e7b:	outs   dx,BYTE PTR ds:[esi]
  406e7c:	mov    al,ds:0x5ad31fb7
  406e81:	pusha  
  406e82:	jne    0x406e0a
  406e84:	imul   edx,DWORD PTR [eax],0xe3df1af7
  406e8a:	add    esi,DWORD PTR [ebx-0x29]
  406e8d:	or     al,0xf0
  406e8f:	pop    ss
  406e90:	xrelease mov DWORD PTR [eax-0x78],eax
  406e94:	sbb    DWORD PTR [esi-0x38],esi
  406e97:	pushf  
  406e98:	mov    ecx,0x8db69e0c
  406e9d:	or     eax,0x1ec55440
  406ea2:	fs jmp 0x79e6:0xca90067
  406eaa:	hlt    
  406eab:	scas   eax,DWORD PTR es:[edi]
  406eac:	xor    DWORD PTR [ecx],ebp
  406eae:	cmp    ecx,DWORD PTR [eax-0x21]
  406eb1:	mov    dl,0xa
  406eb3:	mov    eax,0x2863f39a
  406eb8:	and    dl,dl
  406eba:	mov    ds:0xa5bde988,al
  406ebf:	xchg   esi,eax
  406ec0:	sbb    eax,0x9264176e
  406ec5:	ins    BYTE PTR es:[edi],dx
  406ec6:	imul   ebp,DWORD PTR [ecx+0x6c],0x49439e61
  406ecd:	stc    
  406ece:	cmp    al,0xb8
  406ed0:	cmp    al,0x42
  406ed2:	and    eax,0xac19b757
  406ed7:	push   eax
  406ed8:	clc    
  406ed9:	int    0x2d
  406edb:	sbb    ch,BYTE PTR [ecx+esi*1+0xe]
  406edf:	cdq    
  406ee0:	lea    esi,[esi-0x264615c]
  406ee6:	movzx  ebp,WORD PTR [edi+0x27]
  406eea:	in     al,dx
  406eeb:	mov    cl,0x98
  406eed:	xor    BYTE PTR [edi],ch
  406eef:	jmp    DWORD PTR ds:0x18165ac0
  406ef5:	cs cli 
  406ef7:	mov    bl,0x39
  406ef9:	out    dx,eax
  406efa:	xrelease mov BYTE PTR [ebx-0x67],0x45
  406eff:	ins    DWORD PTR es:[edi],dx
  406f00:	add    BYTE PTR [esi],cl
  406f02:	jnp    0x406f0c
  406f04:	and    DWORD PTR [eax+esi*1+0x3d34731c],edx
  406f0b:	xor    dl,BYTE PTR [eax-0x2f521b5a]
  406f11:	sbb    al,0x9b
  406f13:	ss add si,sp
  406f17:	call   0xf6c3:0x33f57a11
  406f1e:	in     al,0x23
  406f20:	outs   dx,BYTE PTR ds:[esi]
  406f21:	lock adc esp,DWORD PTR [esi]
  406f24:	out    dx,eax
  406f25:	mov    cl,0xe9
  406f27:	mov    dh,0x67
  406f29:	mov    ds:0xaa4ee7f7,al
  406f2e:	sbb    edi,ebp
  406f30:	sub    al,0x5b
  406f33:	cmp    al,BYTE PTR [ebx-0x77]
  406f36:	imul   ebx,DWORD PTR gs:[edx-0x30],0xa77418da
  406f3e:	scas   al,BYTE PTR es:[edi]
  406f3f:	xchg   ebp,eax
  406f40:	jb     0x406fa5
  406f42:	test   eax,0x86d9b1d3
  406f47:	push   ds
  406f48:	icebp  
  406f49:	inc    edx
  406f4a:	test   al,0xbb
  406f4c:	fist   DWORD PTR [ecx+0x42]
  406f4f:	adc    edx,eax
  406f51:	mov    ah,0x8f
  406f53:	lods   al,BYTE PTR gs:[esi]
  406f55:	shl    bl,1
  406f57:	push   edx
  406f58:	mov    cl,0x31
  406f5a:	sub    DWORD PTR [ebx+0x5938429b],ebp
  406f60:	leave  
  406f61:	sub    bl,BYTE PTR [ebx+esi*2+0x5aa58e4a]
  406f68:	int3   
  406f69:	pop    esi
  406f6a:	adc    edi,DWORD PTR [ebp-0x26]
  406f6d:	add    DWORD PTR [ebx-0x491f91f2],ecx
  406f73:	cld    
  406f74:	dec    ebp
  406f75:	outs   dx,BYTE PTR ds:[esi]
  406f76:	add    eax,0xb21155a0
  406f7b:	mov    dl,0xea
  406f7d:	das    
  406f7e:	xchg   ch,ch
  406f80:	dec    edi
  406f81:	push   ds
  406f82:	push   edx
  406f83:	into   
  406f84:	inc    ebx
  406f85:	(bad)  
  406f86:	mov    ecx,0x82d99943
  406f8b:	adc    DWORD PTR [ebp-0x6b30a4d],esp
  406f91:	into   
  406f92:	loop   0x406f22
  406f94:	adc    eax,0x3a37ede6
  406f99:	outs   dx,DWORD PTR ds:[esi]
  406f9a:	inc    ebx
  406f9b:	icebp  
  406f9c:	pop    ebp
  406f9d:	enter  0xac79,0x8b
  406fa1:	xchg   DWORD PTR [eax],edx
  406fa3:	dec    eax
  406fa4:	imul   cl
  406fa6:	pop    edx
  406fa7:	inc    esi
  406fa8:	imul   edi,DWORD PTR [eax],0x7785eca7
  406fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406faf:	sub    eax,0xb7984d3e
  406fb4:	jp     0x40701c
  406fb6:	mov    ebp,0x397af782
  406fbb:	mov    bh,0xf3
  406fbd:	pop    ebx
  406fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fc0:	(bad)  
  406fc1:	cdq    
  406fc2:	push   ecx
  406fc3:	test   BYTE PTR [eax-0x5b],dh
  406fc6:	fwait
  406fc7:	popa   
  406fc8:	xchg   ebp,eax
  406fc9:	pop    ecx
  406fca:	retf   
  406fcb:	jg     0x406f92
  406fcd:	inc    esp
  406fce:	aaa    
  406fcf:	mov    DWORD PTR [ebx+eiz*8],0x19a14d70
  406fd6:	jo     0x407031
  406fd8:	jb     0x406f5f
  406fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fdb:	lods   eax,DWORD PTR ds:[esi]
  406fdc:	shl    DWORD PTR [ebx+eax*2],1
  406fdf:	pop    edi
  406fe0:	push   ebx
  406fe1:	xchg   esp,eax
  406fe2:	in     al,0x35
  406fe4:	stc    
  406fe5:	push   cs
  406fe6:	bound  ebp,QWORD PTR [ebp-0x3a]
  406fe9:	int    0xe9
  406feb:	jg     0x406ffb
  406fed:	cwde   
  406fee:	nop
  406fef:	inc    eax
  406ff0:	xchg   edi,eax
  406ff1:	add    cl,cl
  406ff3:	or     BYTE PTR [eax+0x44],dl
  406ff6:	jae    0x407005
  406ff8:	jmp    0xcae4f267
  406ffd:	loopne 0x40703e
  406fff:	xor    eax,0x6c23f715
  407004:	lds    edx,FWORD PTR [ebp-0x6e8e17f5]
  40700a:	push   ecx
  40700b:	and    edi,eax
  40700d:	cli    
  40700e:	loope  0x406f9a
  407010:	xchg   ecx,eax
  407011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407012:	add    ah,BYTE PTR [ebx-0x7372017e]
  407018:	cmp    esi,DWORD PTR ds:0xa7832d34
  40701e:	cmp    eax,0xf13f8039
  407023:	std    
  407024:	pop    ebp
  407025:	sub    al,0x82
  407027:	pop    ecx
  407028:	xor    dl,BYTE PTR [edx-0x2c10c41a]
  40702e:	rcr    DWORD PTR [ebx],1
  407030:	icebp  
  407031:	mov    dh,0xa1
  407033:	scas   al,BYTE PTR es:[edi]
  407034:	ins    DWORD PTR es:[edi],dx
  407035:	(bad)  
  407036:	jnp    0x407014
  407038:	repnz lock dec ebp
  40703b:	in     eax,0x3b
  40703d:	mov    cl,0x95
  40703f:	adc    BYTE PTR [ebx+edx*1-0x6b],dh
  407043:	sub    bh,BYTE PTR ds:0x7e9435dd
  407049:	call   0x5fd1:0xe23ebf7e
  407050:	fistp  DWORD PTR [ebx+esi*8]
  407053:	pop    esp
  407054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407055:	aas    
  407056:	stc    
  407057:	fs jb  0x40703d
  40705a:	xchg   BYTE PTR [edi+0x4fb2101b],bh
  407060:	test   al,0x1
  407062:	shl    edx,cl
  407064:	and    ecx,DWORD PTR [edi-0x1e]
  407067:	dec    ax
  407069:	popf   
  40706a:	fidiv  DWORD PTR [ecx+0x6bd5e56f]
  407070:	lea    edi,[ebp+0xb]
  407073:	sub    ecx,DWORD PTR [ecx+0x722a58a4]
  407079:	call   edx
  40707b:	adc    cl,BYTE PTR [edi+0x31]
  40707e:	pop    edx
  40707f:	mov    BYTE PTR [ebx],dl
  407081:	sbb    ebx,esi
  407083:	mov    dh,0x8b
  407085:	jg     0x407029
  407087:	mov    al,ds:0x285f7d5f
  40708c:	sahf   
  40708d:	mov    eax,edi
  40708f:	pop    edx
  407090:	mov    esp,0xba4e647c
  407095:	lahf   
  407096:	inc    esi
  407097:	mov    ds:0xe49d42dd,al
  40709c:	push   0xffffffaa
  40709e:	xor    al,BYTE PTR [esi]
  4070a0:	mov    cl,0xa1
  4070a2:	popa   
  4070a3:	outs   dx,BYTE PTR ds:[esi]
  4070a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a5:	clc    
  4070a6:	sbb    ch,al
  4070a8:	pusha  
  4070a9:	cmp    BYTE PTR [esi-0x6832814d],0xfe
  4070b0:	aad    0xa6
  4070b2:	cmp    BYTE PTR [edi+ebx*4],0xe3
  4070b6:	jmp    0xc787:0x78dac01d
  4070bd:	aas    
  4070be:	imul   eax,DWORD PTR [eax+0x7b],0xffffffa9
  4070c2:	mov    dl,0x39
  4070c4:	ins    BYTE PTR es:[edi],dx
  4070c5:	lock dec ecx
  4070c7:	push   0xffffff8e
  4070c9:	xor    bh,BYTE PTR [ecx-0x3e]
  4070cc:	sub    ecx,0x19d739bf
  4070d2:	inc    eax
  4070d3:	push   es
  4070d4:	fdiv   QWORD PTR [edi+0x40]
  4070d7:	loopne 0x4070ec
  4070d9:	mov    esi,DWORD PTR [ebx-0x1ef21d01]
  4070df:	inc    ecx
  4070e0:	push   eax
  4070e1:	fcom   DWORD PTR [ecx+0x70]
  4070e4:	repz test ebp,esi
  4070e7:	mov    edi,0x28630090
  4070ec:	jae    0x407133
  4070ee:	stos   BYTE PTR es:[edi],al
  4070ef:	push   ds
  4070f0:	sub    BYTE PTR [ecx-0xd1e6d05],al
  4070f6:	dec    eax
  4070f7:	or     eax,0x83984e94
  4070fc:	mov    cl,0x9d
  4070fe:	dec    edi
  4070ff:	push   ecx
  407100:	xchg   edi,eax
  407101:	cmp    DWORD PTR ss:[ecx+edx*2],esp
  407105:	fnsave [edi+edx*4-0x3c]
  407109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40710a:	push   ss
  40710b:	pop    esi
  40710c:	pop    ebx
  40710d:	cmp    edi,edi
  40710f:	lds    ecx,FWORD PTR [eax-0x45957b5c]
  407115:	lods   eax,DWORD PTR ds:[esi]
  407116:	dec    edi
  407117:	fwait
  407118:	sub    bh,BYTE PTR [eax+0x11]
  40711b:	mov    ecx,0xa4311a45
  407120:	jo     0x40719a
  407122:	ins    DWORD PTR es:[edi],dx
  407123:	xchg   esi,eax
  407124:	sub    BYTE PTR [edx-0x619cf101],al
  40712a:	push   cs
  40712b:	jmp    0x4070bb
  40712d:	dec    edx
  40712e:	call   DWORD PTR [ebx-0x25]
  407131:	inc    ebx
  407132:	ret    0x8eec
  407135:	in     eax,0xc0
  407137:	(bad)  
  407138:	in     al,0xa9
  40713a:	add    bl,BYTE PTR [ecx+0x4973bf45]
  407140:	in     al,dx
  407141:	cmp    esi,DWORD PTR [ebp-0x1d]
  407144:	jle    0x40717e
  407146:	mov    al,0x32
  407148:	mov    ebp,0x490be771
  40714d:	dec    esi
  40714e:	out    dx,al
  40714f:	dec    eax
  407150:	xchg   ebp,eax
  407151:	push   edx
  407152:	mov    DWORD PTR [edi],esi
  407154:	in     eax,dx
  407155:	les    eax,FWORD PTR [esi+0xba84859]
  40715b:	fcmovnbe st,st(7)
  40715d:	fstp   DWORD PTR [edi-0x46]
  407160:	xchg   bl,ch
  407162:	mov    ebp,DWORD PTR [ebp+0x3]
  407165:	cwde   
  407166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407167:	pop    esp
  407168:	js     0x4071af
  40716a:	mov    es,WORD PTR [edx]
  40716c:	retf   0x70b3
  40716f:	gs stos DWORD PTR es:[edi],eax
  407171:	lods   eax,DWORD PTR ds:[esi]
  407172:	mov    eax,0x9506be01
  407177:	sub    BYTE PTR [ebx-0x4b4da219],bh
  40717d:	cmp    cl,BYTE PTR [ecx]
  40717f:	cli    
  407180:	xchg   edi,eax
  407181:	jp     0x40710f
  407183:	outs   dx,DWORD PTR ds:[esi]
  407184:	push   ss
  407185:	(bad)  
  407187:	imul   esi,DWORD PTR ds:0x24fb012c,0x27a4b386
  407191:	popf   
  407192:	dec    esp
  407193:	aam    0xb7
  407195:	xor    dl,ah
  407197:	sub    BYTE PTR [ebp+0x546c504f],dh
  40719d:	inc    esp
  40719e:	sbb    BYTE PTR [eax+0x5c10051],dh
  4071a4:	cmp    DWORD PTR [esi+edi*1],0x38
  4071a8:	dec    ebp
  4071a9:	inc    esi
  4071aa:	mov    al,ds:0x3549ea8
  4071af:	pop    edx
  4071b0:	inc    ecx
  4071b1:	or     dh,ch
  4071b3:	pop    ebp
  4071b4:	rol    esi,cl
  4071b6:	adc    eax,0xfb143117
  4071bb:	ja     0x407170
  4071bd:	clc    
  4071be:	xor    bl,BYTE PTR [edx+0x57]
  4071c1:	pop    ebx
  4071c2:	clc    
  4071c3:	push   edx
  4071c4:	std    
  4071c5:	and    BYTE PTR [esi+0x1666f840],ah
  4071cb:	and    eax,0xd1e86662
  4071d0:	and    dl,BYTE PTR [ebx-0x3c5cabe0]
  4071d6:	ror    BYTE PTR [esi],1
  4071d8:	inc    edx
  4071d9:	scas   eax,DWORD PTR es:[edi]
  4071da:	aad    0x40
  4071dc:	out    0xee,al
  4071de:	and    dl,BYTE PTR [edx-0x5f]
  4071e1:	dec    esi
  4071e2:	clc    
  4071e3:	and    esp,esi
  4071e5:	or     al,al
  4071e7:	mov    cl,0x85
  4071e9:	out    dx,eax
  4071ea:	add    dh,BYTE PTR [edi]
  4071ec:	mov    bh,0x6c
  4071ee:	shl    DWORD PTR ds:0xa5b9f742,0x19
  4071f5:	mov    eax,ds:0x49c62b2d
  4071fa:	push   es
  4071fb:	mov    edi,0x347d62f0
  407200:	add    al,0x2d
  407202:	pop    es
  407203:	sub    eax,0x9924d744
  407208:	div    BYTE PTR [ebp+0x6b]
  40720b:	dec    eax
  40720c:	inc    esp
  40720d:	imul   ebx,DWORD PTR [edi+0x3d],0xffffffa2
  407211:	stc    
  407212:	shr    BYTE PTR [edx+0x7c],cl
  407215:	xor    ebx,DWORD PTR [ebp+0x8]
  407218:	push   edx
  407219:	(bad)  
  40721a:	fimul  DWORD PTR [edx+0x53766bdf]
  407220:	sbb    cl,BYTE PTR [eax+ecx*8]
  407223:	add    ah,dh
  407225:	or     cl,BYTE PTR [edx+0x57]
  407228:	das    
  407229:	lock jo 0x407291
  40722c:	mov    bl,0x21
  40722e:	scas   al,BYTE PTR es:[edi]
  40722f:	xchg   esp,eax
  407230:	pop    ds
  407231:	lahf   
  407232:	jno    0x407238
  407234:	retf   
  407235:	outs   dx,BYTE PTR ds:[esi]
  407236:	sub    al,0x32
  407238:	call   0x2c4b9a33
  40723d:	ds jge 0x4071e0
  407240:	inc    ebp
  407241:	das    
  407242:	dec    esi
  407243:	lods   eax,DWORD PTR ds:[esi]
  407244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407245:	dec    esi
  407246:	inc    esp
  407247:	into   
  407248:	js     0x407263
  40724a:	jg     0x40729a
  40724c:	into   
  40724d:	outs   dx,DWORD PTR ds:[esi]
  40724e:	test   BYTE PTR [ebx-0x7d],dh
  407251:	and    eax,0x86ad057c
  407256:	das    
  407257:	dec    edx
  407258:	mov    al,0x13
  40725a:	jmp    0x9fd00c50
  40725f:	mov    DWORD PTR [eax-0xcce4c66],esp
  407265:	jecxz  0x40722b
  407267:	add    DWORD PTR [eax+0x72],0x8d212f0
  40726e:	in     al,0x36
  407270:	mov    bh,0xd7
  407272:	(bad)  
  407273:	push   edx
  407274:	mov    esi,0x9733a267
  407279:	jmp    0x9e77:0x2b10f39f
  407280:	dec    ebp
  407281:	jne    0x4072bc
  407283:	inc    ebx
  407284:	or     al,BYTE PTR [eax-0x65c4f7f3]
  40728a:	clc    
  40728b:	(bad)  
  40728c:	xchg   DWORD PTR [eax-0x1a5e55be],ebx
  407292:	push   esp
  407293:	jns    0x407255
  407295:	cmp    edi,DWORD PTR [edx+0x54f4e8b8]
  40729b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40729c:	or     BYTE PTR [ebp-0x1c0571fb],cl
  4072a2:	retf   
  4072a3:	inc    ecx
  4072a4:	jl     0x4072e7
  4072a6:	push   ss
  4072a7:	xor    DWORD PTR [esi-0x38],esp
  4072aa:	xor    al,bl
  4072ac:	cld    
  4072ad:	sub    cl,cl
  4072af:	mov    al,ds:0xd048c91e
  4072b4:	dec    edi
  4072b5:	push   ecx
  4072b6:	xchg   edx,eax
  4072b7:	std    
  4072b8:	je     0x407330
  4072ba:	mov    esi,edx
  4072bc:	push   ecx
  4072bd:	stos   DWORD PTR es:[edi],eax
  4072be:	mul    BYTE PTR [ebx+0x6c]
  4072c1:	fild   DWORD PTR [eax]
  4072c3:	add    ecx,edi
  4072c5:	ins    DWORD PTR es:[edi],dx
  4072c6:	sahf   
  4072c7:	or     al,0x80
  4072c9:	cmp    edi,DWORD PTR [eax-0x34de0818]
  4072cf:	std    
  4072d0:	in     eax,0x53
  4072d2:	sar    ah,0x7b
  4072d5:	jnp    0x407356
  4072d7:	mov    ecx,0x942daea7
  4072dc:	inc    edx
  4072dd:	enter  0xc0a7,0xb3
  4072e1:	xchg   esp,eax
  4072e2:	or     eax,DWORD PTR [edi+0x2b]
  4072e5:	cdq    
  4072e6:	imul   eax,DWORD PTR [ebp-0x48],0xffffff95
  4072ea:	pop    ecx
  4072eb:	test   bh,bl
  4072ed:	sub    al,0x30
  4072ef:	jnp    0x40730b
  4072f1:	popf   
  4072f2:	retf   0xe9f4
  4072f5:	gs add al,0x73
  4072f8:	icebp  
  4072f9:	xor    BYTE PTR [esi],0x86
  4072fc:	ja     0x40733c
  4072fe:	mov    cl,0x8d
  407300:	xchg   BYTE PTR ds:0x3f031ffc,dl
  407306:	or     bl,BYTE PTR ds:0xe85a112d
  40730c:	mov    edx,0xdbe607b9
  407311:	dec    edi
  407312:	dec    ebp
  407313:	push   ecx
  407314:	or     esi,DWORD PTR [ebp-0x68607edc]
  40731a:	stos   BYTE PTR es:[edi],al
  40731b:	jmp    0x4072b9
  40731d:	pop    edx
  40731e:	out    dx,eax
  40731f:	jmp    0x2b5a:0x6eda9df
  407326:	pop    eax
  407327:	sbb    BYTE PTR [eax],dh
  407329:	stc    
  40732a:	outs   dx,DWORD PTR ds:[esi]
  40732b:	das    
  40732c:	es cdq 
  40732e:	mov    ch,0xb0
  407330:	(bad)  
  407331:	out    0x90,eax
  407333:	jno    0x407343
  407335:	fwait
  407336:	pop    ds
  407337:	pop    DWORD PTR [edi+0x2a]
  40733a:	fcmovnb st,st(5)
  40733c:	xchg   esp,eax
  40733d:	mov    ebp,0xf5e53758
  407342:	push   eax
  407343:	add    DWORD PTR fs:[edi-0x3e13921b],ecx
  40734a:	lods   al,BYTE PTR ds:[esi]
  40734b:	xor    al,0xdd
  40734d:	ret    
  40734e:	cs jns 0x407375
  407351:	and    al,ch
  407353:	retf   
  407354:	mov    ds:0xa364c20a,eax
  407359:	pushf  
  40735a:	and    al,0x75
  40735c:	addr16 popf 
  40735e:	xchg   DWORD PTR cs:[eax],edi
  407361:	retf   
  407362:	cwde   
  407363:	mov    eax,ds:0x7bd0067
  407368:	cmp    BYTE PTR [ecx-0x55bac1e8],ah
  40736e:	out    0x32,al
  407370:	cwde   
  407371:	xchg   edi,eax
  407372:	mov    edi,0x5a8a596d
  407377:	pop    ds
  407378:	or     DWORD PTR [ebx+0x13],esi
  40737b:	jb     0x4073cb
  40737d:	inc    esi
  40737e:	shl    dl,1
  407380:	(bad)  
  407381:	mov    bh,0x75
  407383:	lods   al,BYTE PTR ds:[esi]
  407384:	lods   eax,DWORD PTR ds:[esi]
  407385:	mov    edx,esp
  407387:	push   edx
  407388:	mov    BYTE PTR [eax+0x19],dl
  40738b:	sahf   
  40738c:	sub    BYTE PTR [esi-0x20],al
  40738f:	(bad)  
  407390:	daa    
  407391:	jecxz  0x407330
  407393:	push   eax
  407394:	aaa    
  407395:	sub    bl,bl
  407397:	imul   esi,DWORD PTR [ebp+0x1d],0x214074b6
  40739e:	mov    edx,0x76cf153f
  4073a3:	cmp    dl,BYTE PTR [ecx+0x78d91af6]
  4073a9:	cmc    
  4073aa:	sub    eax,0x9c13114
  4073af:	jg     0x40735b
  4073b1:	mov    eax,0x3fe6c4ef
  4073b6:	loop   0x40739e
  4073b8:	cmp    dh,BYTE PTR [eax+0x3e]
  4073bb:	test   eax,0xa249282
  4073c0:	adc    dl,BYTE PTR [edi]
  4073c2:	dec    ebp
  4073c3:	inc    edx
  4073c4:	dec    esi
  4073c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c6:	mov    bh,0xfe
  4073c8:	sbb    al,0xde
  4073ca:	dec    ecx
  4073cb:	pusha  
  4073cc:	adc    al,0x56
  4073ce:	mov    cl,0x62
  4073d0:	mov    ss,ecx
  4073d2:	dec    eax
  4073d3:	pop    ds
  4073d4:	push   edi
  4073d5:	stos   BYTE PTR es:[edi],al
  4073d6:	sub    eax,0x3307716e
  4073db:	mov    ebp,0xa502fd25
  4073e0:	sbb    edx,ecx
  4073e2:	pop    ss
  4073e3:	and    esi,DWORD PTR [esi]
  4073e5:	pushf  
  4073e6:	and    ah,ah
  4073e8:	and    BYTE PTR [eax],bl
  4073ea:	fwait
  4073eb:	dec    edi
  4073ec:	inc    esi
  4073ed:	dec    edx
  4073ee:	pop    ss
  4073ef:	and    BYTE PTR [esp+eiz*8],bh
  4073f2:	inc    eax
  4073f3:	xchg   ecx,edi
  4073f5:	xlat   BYTE PTR ds:[ebx]
  4073f6:	mov    eax,ds:0x9088a7ff
  4073fb:	push   esi
  4073fc:	enter  0xd274,0x27
  407400:	test   al,0xb9
  407402:	push   ecx
  407403:	cld    
  407404:	cmp    BYTE PTR [ebp-0x57],cl
  407407:	out    0xd2,ax
  40740a:	int3   
  40740b:	frstor [ebx-0x1b]
  40740e:	sbb    BYTE PTR [eax],bl
  407410:	aas    
  407411:	push   es
  407412:	sbb    dl,BYTE PTR [ebp+0x3a]
  407415:	mov    edi,0x6c616846
  40741a:	mov    dh,0xbe
  40741c:	or     al,0x35
  40741e:	pop    ecx
  40741f:	(bad)  
  407420:	jb     0x407498
  407422:	daa    
  407423:	out    dx,eax
  407424:	push   ss
  407425:	xchg   ebp,eax
  407426:	mov    bh,cl
  407428:	inc    eax
  407429:	cmc    
  40742a:	push   esi
  40742b:	mov    ?,WORD PTR [edi+0x22]
  40742e:	sbb    eax,0x70118857
  407433:	hlt    
  407434:	dec    esp
  407435:	and    cl,BYTE PTR [edx-0x10]
  407438:	repnz inc esp
  40743a:	sub    ch,BYTE PTR [edi+0x58ca1b61]
  407440:	xor    eax,0x3019c249
  407445:	push   ss
  407446:	add    al,0xcf
  407448:	or     ebp,edx
  40744a:	data16 (bad) 
  40744c:	mov    eax,ds:0x713024a5
  407451:	js     0x40741e
  407453:	outs   dx,DWORD PTR ds:[esi]
  407454:	mov    ebx,0xa2478c79
  407459:	xor    cl,BYTE PTR [edi-0x39e26455]
  40745f:	jne    0x407439
  407461:	nop
  407462:	push   es
  407463:	ja     0x407411
  407465:	cli    
  407466:	pop    edi
  407467:	enter  0xdc7a,0xed
  40746b:	scas   eax,DWORD PTR es:[edi]
  40746c:	xchg   esp,eax
  40746d:	test   al,0xc9
  40746f:	mov    ecx,0x134e4a23
  407474:	cmc    
  407475:	gs fprem 
  407478:	jmp    0x866572a2
  40747d:	push   edx
  40747e:	mov    dl,0xaf
  407480:	xor    ch,bl
  407482:	mov    esi,0x345b973d
  407487:	pop    ds
  407488:	dec    ebp
  407489:	jge    0x407451
  40748b:	dec    ebx
  40748c:	mov    bh,0xb6
  40748e:	xchg   ebx,eax
  40748f:	fldcw  WORD PTR [ebp+edx*8+0x30061c72]
  407496:	fdivr  QWORD PTR [edi]
  407498:	(bad)  
  407499:	aas    
  40749a:	push   ebp
  40749b:	dec    eax
  40749c:	stos   DWORD PTR es:[edi],eax
  40749d:	adc    al,0x45
  40749f:	addr16 pop edi
  4074a1:	jmp    0x38d3:0x304d48b8
  4074a8:	xor    eax,0xb9f39640
  4074ad:	push   cs
  4074ae:	aad    0x29
  4074b0:	adc    eax,0xdaad86e8
  4074b5:	xchg   edx,eax
  4074b6:	mov    bh,0xb8
  4074b8:	test   eax,0x74deda16
  4074bd:	lahf   
  4074be:	sahf   
  4074bf:	shl    esi,0x64
  4074c2:	test   eax,0x747c7a2
  4074c7:	or     ecx,0x26
  4074ca:	fiadd  DWORD PTR [eax-0x4c]
  4074cd:	mov    al,0xf6
  4074cf:	xchg   DWORD PTR [edi+0x75a20f6a],edi
  4074d5:	xchg   ch,ah
  4074d7:	into   
  4074d8:	jne    0x407514
  4074da:	inc    edi
  4074db:	jnp    0x4074b0
  4074dd:	adc    DWORD PTR [ecx-0x4e],edx
  4074e0:	mov    ebp,0x2967ca60
  4074e5:	inc    edi
  4074e6:	xchg   esp,eax
  4074e7:	cmp    al,0xeb
  4074e9:	jo     0x4074ac
  4074eb:	sub    eax,esp
  4074ed:	out    dx,al
  4074ee:	loopne 0x4074cf
  4074f0:	dec    ecx
  4074f1:	outs   dx,DWORD PTR ds:[esi]
  4074f2:	pushf  
  4074f3:	sbb    al,0x65
  4074f5:	leave  
  4074f6:	pop    es
  4074f7:	xchg   esi,eax
  4074f8:	shl    BYTE PTR [ecx+0x222df0e2],cl
  4074fe:	xchg   esp,eax
  4074ff:	or     al,cl
  407501:	xchg   ecx,eax
  407502:	inc    edi
  407503:	dec    esp
  407504:	jg     0x407559
  407506:	jmp    0xa860:0x61bc5f4d
  40750d:	or     BYTE PTR [edi+0x39],cl
  407510:	arpl   dx,sp
  407512:	and    eax,0xc49799bc
  407517:	push   ecx
  407518:	dec    edx
  407519:	jb     0x407563
  40751b:	pushf  
  40751c:	and    al,0xc
  40751e:	mov    bl,0x20
  407520:	adc    eax,DWORD PTR [edx]
  407522:	mov    DWORD PTR [ecx-0x2c728b37],ebx
  407528:	xchg   edi,eax
  407529:	ins    BYTE PTR es:[edi],dx
  40752a:	xor    eax,0x5c3a32c4
  40752f:	js     0x40759c
  407531:	cmp    BYTE PTR [edx+0x3bd85e4e],dh
  407537:	adc    al,BYTE PTR [esi-0x3d]
  40753a:	mov    ebx,0x3144d2f
  40753f:	mov    es,WORD PTR [ebx]
  407541:	psubusb mm6,QWORD PTR [esi]
  407544:	or     ecx,DWORD PTR [ebp+0x859ba96]
  40754a:	scas   al,BYTE PTR es:[edi]
  40754b:	xchg   esi,eax
  40754c:	mov    ebp,0xaf4633be
  407551:	push   es
  407552:	pop    ecx
  407553:	inc    eax
  407554:	inc    edx
  407555:	sahf   
  407556:	and    dl,bh
  407558:	inc    ecx
  407559:	inc    edx
  40755a:	adc    ah,BYTE PTR [esi-0x2a465574]
  407560:	into   
  407561:	mov    ds:0xa9bc2bbd,al
  407566:	rcr    DWORD PTR [ebx+0x2c],cl
  407569:	cdq    
  40756a:	and    eax,0x4d4c66f9
  40756f:	repz test DWORD PTR [ebp+0x9d2b04f],eax
  407576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407577:	fst    DWORD PTR [ecx-0x6527df5d]
  40757d:	adc    edx,DWORD PTR [eax-0x7f]
  407580:	pusha  
  407581:	stos   BYTE PTR es:[edi],al
  407582:	cmp    eax,DWORD PTR [edi]
  407584:	not    edi
  407586:	scas   al,BYTE PTR es:[edi]
  407587:	cli    
  407588:	jmp    0x13588a74
  40758d:	into   
  40758e:	jmp    0x4075f3
  407590:	jge    0x407549
  407592:	std    
  407593:	add    DWORD PTR [ecx-0x357f9ee9],ecx
  407599:	inc    esi
  40759a:	jns    0x407521
  40759c:	jmp    0x40759e
  40759e:	fisubr DWORD PTR ds:0x50630c27
  4075a4:	sti    
  4075a5:	pushf  
  4075a6:	(bad)  
  4075a7:	xchg   ebx,eax
  4075a8:	fdiv   st,st(1)
  4075aa:	mov    eax,DWORD PTR [ecx]
  4075ac:	dec    ebx
  4075ad:	sahf   
  4075ae:	push   esp
  4075af:	push   ebx
  4075b0:	sbb    BYTE PTR [ecx-0x17],ch
  4075b3:	hlt    
  4075b4:	mov    eax,0x5466d364
  4075b9:	in     al,0x24
  4075bb:	xchg   ebx,eax
  4075bc:	adc    eax,0xd6aa2154
  4075c1:	inc    eax
  4075c2:	inc    edx
  4075c3:	jg     0x40763a
  4075c5:	jno    0x4075cb
  4075c7:	in     al,dx
  4075c8:	cwde   
  4075c9:	push   cs
  4075ca:	(bad)  [ecx]
  4075cc:	lea    esp,ds:0xa0333745
  4075d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d3:	pop    ebx
  4075d4:	push   es
  4075d5:	xor    al,0x91
  4075d7:	cdq    
  4075d8:	popf   
  4075d9:	cld    
  4075da:	shl    BYTE PTR [esi-0x11],0x44
  4075de:	sahf   
  4075df:	xchg   ebp,eax
  4075e0:	(bad)  
  4075e1:	and    al,0xed
  4075e3:	inc    edi
  4075e4:	outs   dx,BYTE PTR ds:[esi]
  4075e5:	cdq    
  4075e6:	das    
  4075e7:	xchg   ebx,eax
  4075e8:	pop    edx
  4075e9:	cli    
  4075ea:	xor    esp,DWORD PTR [ebp+eiz*8+0x7b6a3eaa]
  4075f1:	push   ecx
  4075f2:	mov    cl,0x94
  4075f4:	xor    cl,bh
  4075f6:	jmp    0xa36c4a71
  4075fb:	dec    ebx
  4075fc:	hlt    
  4075fd:	pusha  
  4075fe:	dec    ecx
  4075ff:	inc    eax
  407600:	inc    eax
  407601:	imul   edx,DWORD PTR [edx-0x50],0x2a
  407605:	mov    bh,dl
  407607:	shr    BYTE PTR [edx-0x3f85347e],0xbd
  40760e:	or     BYTE PTR ds:0x40ef63f5,0xfb
  407615:	adc    eax,DWORD PTR [ebp-0x6f]
  407618:	sar    BYTE PTR [ecx+0x76],cl
  40761b:	xchg   ecx,eax
  40761c:	sar    DWORD PTR [ebx+0x3175cfe8],1
  407622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407623:	xchg   edi,eax
  407624:	ds pop edx
  407626:	dec    edi
  407627:	(bad)  
  40762a:	dec    esp
  40762b:	out    0x67,eax
  40762d:	dec    edi
  40762e:	lods   al,BYTE PTR ds:[esi]
  40762f:	int    0xd3
  407631:	mov    esp,edi
  407633:	daa    
  407634:	out    0x5e,eax
  407636:	inc    eax
  407637:	arpl   WORD PTR es:[esi+0x326fae37],si
  40763e:	xor    edx,0xe64d199f
  407644:	and    ebp,DWORD PTR [ebx+eax*4]
  407647:	mov    eax,ds:0x7b8c7d1a
  40764c:	(bad)  
  40764d:	and    BYTE PTR [ebp-0x4400b4d2],0x88
  407654:	mov    ebp,0x275f298
  407659:	scas   al,BYTE PTR es:[edi]
  40765a:	mov    ch,0xee
  40765c:	xor    dh,al
  40765e:	dec    edx
  40765f:	sbb    bl,ch
  407661:	xchg   edi,eax
  407662:	mov    ah,0x0
  407664:	bound  eax,QWORD PTR [ecx-0x26f2048d]
  40766a:	not    BYTE PTR [edi+0x428359b0]
  407670:	ins    DWORD PTR es:[edi],dx
  407671:	xlat   BYTE PTR ds:[ebx]
  407672:	dec    ebx
  407673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407674:	jg     0x40767f
  407676:	outs   dx,BYTE PTR ds:[esi]
  407677:	push   ebx
  407678:	sbb    bl,BYTE PTR [ecx+0x5d]
  40767b:	out    dx,eax
  40767c:	stos   DWORD PTR es:[edi],eax
  40767d:	pop    es
  40767e:	add    BYTE PTR [edi+0x742b5d75],al
  407684:	(bad)  
  407685:	push   ebp
  407686:	adc    eax,0xfbf8de6a
  40768b:	pop    eax
  40768c:	inc    eax
  40768d:	dec    DWORD PTR [ebp-0x66eca43e]
  407693:	cwde   
  407694:	test   DWORD PTR [ebx+0x70],ecx
  407697:	shl    bh,cl
  407699:	(bad)  
  40769a:	sub    bh,BYTE PTR [edx+0x36]
  40769d:	int3   
  40769e:	inc    eax
  40769f:	mov    dh,0x1d
  4076a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a2:	fbstp  TBYTE PTR [esp+esi*2]
  4076a5:	adc    ecx,esi
  4076a7:	pop    edi
  4076a8:	test   DWORD PTR [esi+0x4b1e931b],0x8d9eca96
  4076b2:	xchg   edx,eax
  4076b3:	aad    0x7b
  4076b5:	popf   
  4076b6:	dec    ebp
  4076b7:	sub    ebp,DWORD PTR [esi]
  4076b9:	mov    edi,0x6255f71e
  4076be:	scas   eax,DWORD PTR es:[edi]
  4076bf:	sti    
  4076c0:	cmp    eax,0x5b436b96
  4076c5:	je     0x4076dd
  4076c7:	xchg   edi,eax
  4076c8:	test   al,0xc6
  4076ca:	push   0x5d
  4076cc:	mov    DWORD PTR [ebx+0x6a75a98d],esp
  4076d2:	pushf  
  4076d3:	fnstenv [eax]
  4076d5:	call   DWORD PTR [esi]
  4076d7:	xor    BYTE PTR [eax+0x14956f52],bh
  4076dd:	xchg   edx,eax
  4076de:	sbb    bl,BYTE PTR [esi+0x66cdc213]
  4076e4:	and    edx,DWORD PTR [ebp+0x22f05f9e]
  4076ea:	popa   
  4076eb:	not    DWORD PTR [edx+0x4d]
  4076ee:	ins    DWORD PTR es:[edi],dx
  4076ef:	pop    esi
  4076f0:	pop    es
  4076f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f2:	sub    edi,edi
  4076f4:	jne    0x4076f5
  4076f6:	add    eax,0xda77a3c7
  4076fb:	out    0x42,al
  4076fd:	ins    DWORD PTR es:[edi],dx
  4076fe:	add    al,BYTE PTR [ecx+0x5c8411e7]
  407704:	test   DWORD PTR [esi+0x3bc03b0d],0x79264fe7
  40770e:	dec    edx
  40770f:	popf   
  407710:	mov    esp,0x73beebc6
  407715:	xchg   ebp,eax
  407716:	xchg   ebp,eax
  407717:	push   esp
  407718:	xchg   ecx,eax
  407719:	mov    ?,edi
  40771b:	retf   
  40771c:	aam    0x74
  40771e:	in     eax,dx
  40771f:	jns    0x4076e2
  407721:	in     al,dx
  407722:	fdivr  QWORD PTR [esi-0x131d128d]
  407728:	xchg   ebx,eax
  407729:	(bad)  
  40772a:	pop    ebp
  40772b:	dec    eax
  40772c:	or     BYTE PTR [edi+0x1e],bh
  40772f:	lahf   
  407730:	stos   DWORD PTR es:[edi],eax
  407731:	sti    
  407732:	sti    
  407733:	sahf   
  407734:	mov    ebp,0xc183f123
  407739:	aad    0x45
  40773b:	push   ds
  40773c:	pushf  
  40773d:	and    al,0x45
  40773f:	imul   edi,DWORD PTR [esi-0x39],0x2a
  407743:	cmc    
  407744:	push   edx
  407745:	inc    esp
  407746:	stos   BYTE PTR es:[edi],al
  407747:	popf   
  407748:	inc    eax
  407749:	gs mov edi,0x6aa06adb
  40774f:	adc    al,0x88
  407751:	and    BYTE PTR [ebx+0x53b6dd98],bh
  407757:	mov    edi,0x16a62a9e
  40775c:	sub    ah,dh
  40775e:	sub    dh,BYTE PTR [edi]
  407760:	loop   0x40776d
  407762:	xchg   edx,eax
  407763:	sbb    eax,0xa78e6c81
  407768:	xchg   ecx,eax
  407769:	mov    ds:0x7b2670b0,al
  40776e:	fnstsw WORD PTR [edi]
  407770:	popa   
  407771:	aas    
  407772:	ins    DWORD PTR es:[edi],dx
  407773:	or     DWORD PTR [ecx],esi
  407775:	dec    ecx
  407776:	mov    ebp,0xf0df32da
  40777b:	inc    ebx
  40777c:	push   ebx
  40777d:	xchg   ebx,eax
  40777e:	aaa    
  40777f:	dec    ebx
  407780:	mov    ah,BYTE PTR [ebp+0x41]
  407783:	sahf   
  407784:	adc    DWORD PTR [eax],ecx
  407786:	(bad)  
  407788:	pop    esi
  407789:	add    ecx,DWORD PTR [edx+eiz*4+0x48]
  40778d:	outs   dx,DWORD PTR ds:[esi]
  40778e:	lods   al,BYTE PTR ds:[esi]
  40778f:	xor    eax,0x2c0ac6ea
  407794:	cwde   
  407795:	int3   
  407796:	js     0x40771d
  407798:	ds call 0x3bf6:0x4fb3268c
  4077a0:	dec    esi
  4077a1:	cmp    DWORD PTR [ebx+0x4f],edx
  4077a4:	dec    edi
  4077a5:	mov    ?,WORD PTR [ecx]
  4077a7:	fsub   st,st(6)
  4077a9:	mov    BYTE PTR [esi-0x71],al
  4077ac:	pop    ebp
  4077ad:	lock inc ecx
  4077af:	inc    eax
  4077b0:	mov    bl,0xd9
  4077b2:	adc    ah,cl
  4077b4:	sbb    DWORD PTR ss:[esi-0x1f],esi
  4077b8:	jl     0x407753
  4077ba:	xchg   esp,eax
  4077bb:	or     bh,BYTE PTR [ebp+0x4bf4fa79]
  4077c1:	(bad)
  4077c5:	push   edi
  4077c6:	and    eax,0x3bcff7b
  4077cb:	cmp    eax,0x6aef385f
  4077d0:	add    ah,BYTE PTR [ecx]
  4077d2:	jecxz  0x407768
  4077d4:	outs   dx,DWORD PTR ds:[esi]
  4077d5:	mov    esp,0x9b393063
  4077da:	push   0x23
  4077dc:	xchg   edx,eax
  4077dd:	call   ecx
  4077df:	cdq    
  4077e0:	cmp    eax,0x90c7e5c1
  4077e5:	pushf  
  4077e6:	fwait
  4077e7:	xor    DWORD PTR [edx],ecx
  4077e9:	push   ebx
  4077ea:	xchg   ebp,eax
  4077eb:	dec    eax
  4077ec:	mov    esp,0x848441f5
  4077f1:	jg     0x407855
  4077f3:	fnstenv [ebx-0x75]
  4077f6:	call   0xb4f1f78f
  4077fb:	push   es
  4077fc:	mov    bh,0x5d
  4077fe:	pusha  
  4077ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407800:	enter  0xc11a,0x6c
  407804:	sub    al,0x7d
  407806:	pop    ds
  407807:	es pop ss
  407809:	cld    
  40780a:	sub    edi,eax
  40780c:	sar    DWORD PTR [ebp+0x48],0xbf
  407810:	loop   0x407854
  407812:	popf   
  407813:	test   BYTE PTR [ebp+eiz*2+0x68],0x6e
  407818:	and    eax,0x407a339c
  40781d:	outs   dx,DWORD PTR ds:[esi]
  40781e:	push   esi
  40781f:	rol    DWORD PTR [ecx-0x66274f85],cl
  407825:	cmp    dh,BYTE PTR [edi-0x16fe6474]
  40782b:	xchg   ecx,eax
  40782c:	imul   edi,DWORD PTR [edi-0x69],0xffffffd0
  407830:	scas   al,BYTE PTR es:[edi]
  407831:	sub    edi,DWORD PTR [esi]
  407833:	dec    ebp
  407834:	punpcklbw mm4,DWORD PTR [edi]
  407837:	xlat   BYTE PTR ds:[ebx]
  407838:	or     cl,BYTE PTR [ebx+eiz*2-0x4c]
  40783c:	rol    BYTE PTR [eax+0x630d6d46],0xe6
  407843:	in     eax,0xb5
  407845:	cld    
  407846:	sub    dl,BYTE PTR [esi+0x74550e24]
  40784c:	mov    al,ds:0xb2c93c2f
  407851:	push   esi
  407852:	cmp    dl,BYTE PTR [ecx]
  407854:	pop    ss
  407855:	push   es
  407856:	out    0x75,al
  407858:	inc    BYTE PTR [edx-0x58535da2]
  40785e:	jo     0x4078c9
  407860:	xor    dh,BYTE PTR [ebp+0x454f6ba1]
  407866:	mov    ebp,0xce9ade38
  40786b:	or     BYTE PTR [edx+0x51],dl
  40786e:	das    
  40786f:	jl     0x40781f
  407871:	or     DWORD PTR [eax],edx
  407873:	sub    dh,BYTE PTR [edi-0x19]
  407876:	dec    edx
  407877:	loop   0x4078e9
  407879:	leave  
  40787a:	jmp    0xe6b23052
  40787f:	je     0x407845
  407881:	cwde   
  407882:	jecxz  0x40785a
  407884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407885:	xor    DWORD PTR [eax+ebx*2],esp
  407888:	loop   0x4078aa
  40788a:	push   es
  40788b:	mov    ecx,0x1b1a3fac
  407890:	popa   
  407891:	sub    al,0xbc
  407893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407894:	mov    dl,0x79
  407896:	xchg   ebx,eax
  407897:	dec    esi
  407898:	std    
  407899:	adc    ah,BYTE PTR [ebx-0x250bb977]
  40789f:	(bad)  
  4078a0:	js     0x407866
  4078a2:	fcom   QWORD PTR [eax]
  4078a4:	scas   al,BYTE PTR es:[edi]
  4078a5:	gs pop esi
  4078a7:	adc    DWORD PTR [ecx+0x78bdad6c],0x22f524b8
  4078b1:	mov    ebp,0xe29e18b3
  4078b6:	or     ebp,DWORD PTR [ebp-0x10]
  4078b9:	lea    eax,[ebx+ecx*2+0x5dee2071]
  4078c0:	mov    dh,BYTE PTR [ecx-0x1125383b]
  4078c6:	cmp    esp,0xe185c29e
  4078cc:	ins    DWORD PTR es:[edi],dx
  4078cd:	add    eax,esp
  4078cf:	mov    esi,DWORD PTR [eax-0x8]
  4078d2:	dec    edx
  4078d3:	cmp    esi,ecx
  4078d5:	fimul  DWORD PTR [edx+0x71]
  4078d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d9:	cmp    esp,DWORD PTR [eax-0x69]
  4078dc:	nop
  4078dd:	sub    edx,DWORD PTR [eax+0x1055b7f3]
  4078e3:	ins    BYTE PTR es:[edi],dx
  4078e4:	lock xor al,0xef
  4078e7:	in     eax,0xe
  4078e9:	push   es
  4078ea:	or     eax,0xd8d81f26
  4078ef:	in     al,0xd8
  4078f1:	fiadd  WORD PTR ds:0xb3905648
  4078f7:	enter  0x5ceb,0xde
  4078fb:	xchg   edx,eax
  4078fc:	fwait
  4078fd:	mov    ch,0x16
  4078ff:	bound  edx,QWORD PTR [edi-0x9b08d]
  407905:	jle    0x4078db
  407907:	out    dx,eax
  407908:	dec    ecx
  407909:	and    ebp,DWORD PTR [esi+0x7]
  40790c:	gs je  0x407961
  40790f:	lds    ebp,FWORD PTR [ebx-0x3]
  407912:	ret    
  407913:	out    0x81,al
  407915:	mov    bh,0xce
  407917:	lock ret 0x95f
  40791b:	or     al,0x5a
  40791d:	sbb    eax,ebp
  40791f:	aad    0x52
  407921:	push   edx
  407922:	mov    esp,0x608d71cc
  407927:	retf   0x64a
  40792a:	mov    bl,bl
  40792c:	pop    ss
  40792d:	retf   
  40792e:	cmp    eax,0x1124da9d
  407933:	in     al,dx
  407934:	(bad)
  407937:	mov    BYTE PTR [edx],ah
  407939:	enter  0x190c,0xde
  40793d:	ret    0xc165
  407940:	add    bh,bl
  407942:	jmp    0x407957
  407944:	popa   
  407945:	jne    0x40794e
  407947:	(bad)  
  407948:	xchg   esi,eax
  407949:	xor    dh,BYTE PTR ds:0x77436dc1
  40794f:	xchg   esi,eax
  407950:	pop    ebx
  407951:	int3   
  407952:	pop    ecx
  407953:	pop    ss
  407954:	dec    edx
  407955:	ins    DWORD PTR es:[edi],dx
  407956:	push   es
  407957:	xchg   esp,eax
  407958:	xchg   DWORD PTR [ebx-0x5747b549],ebx
  40795e:	les    edx,FWORD PTR [ebp-0x2]
  407961:	(bad)  
  407962:	push   ebp
  407963:	cwde   
  407964:	mov    ds:0x6cdef3c8,eax
  407969:	sub    al,0xa4
  40796b:	into   
  40796c:	pushf  
  40796d:	inc    edx
  40796e:	loopne 0x407905
  407970:	cmc    
  407971:	xor    bl,bl
  407973:	mov    dh,BYTE PTR [eax+0xf]
  407976:	mov    eax,0x1abefc4b
  40797b:	jecxz  0x40795d
  40797d:	sub    al,0xe6
  40797f:	fild   QWORD PTR [edx]
  407981:	ins    DWORD PTR es:[edi],dx
  407982:	add    al,BYTE PTR ds:[eax-0x66d5c6cc]
  407989:	pop    ecx
  40798a:	inc    ecx
  40798b:	or     al,0xc9
  40798d:	cli    
  40798e:	mov    al,0x44
  407990:	adc    ah,BYTE PTR ds:0x2c284d8f
  407996:	in     eax,dx
  407997:	push   ecx
  407998:	shr    BYTE PTR [edi+0x71],0xc0
  40799c:	sbb    ah,al
  40799e:	in     al,dx
  40799f:	out    0x1a,al
  4079a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a2:	cmp    al,0x70
  4079a4:	inc    ebx
  4079a5:	sbb    dl,BYTE PTR [edx]
  4079a7:	pop    ecx
  4079a8:	pushf  
  4079a9:	int    0x13
  4079ab:	mov    dh,0xc9
  4079ad:	cmp    esp,ebp
  4079af:	cmp    al,0xce
  4079b1:	sar    BYTE PTR [ecx],cl
  4079b3:	fdiv   DWORD PTR [edi]
  4079b5:	xor    eax,0xed0ba2dd
  4079ba:	jecxz  0x40796d
  4079bc:	jecxz  0x407a14
  4079be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079bf:	out    dx,eax
  4079c0:	mov    esp,0x6bb735fa
  4079c5:	sub    DWORD PTR [ecx],0x5a
  4079c8:	xchg   BYTE PTR [esi-0x318145e8],ah
  4079ce:	aam    0xa3
  4079d0:	out    0xb3,al
  4079d2:	mov    ebx,0x2ccb2e58
  4079d7:	inc    ecx
  4079d8:	(bad)  
  4079d9:	stos   BYTE PTR es:[edi],al
  4079da:	lahf   
  4079db:	loop   0x4079d1
  4079dd:	adc    cl,BYTE PTR [edx+0x55]
  4079e0:	nop
  4079e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e2:	xchg   esp,eax
  4079e3:	imul   DWORD PTR [edi+0x17]
  4079e6:	scas   al,BYTE PTR es:[edi]
  4079e7:	add    ch,BYTE PTR [ebx-0x2b027cf3]
  4079ed:	lods   eax,DWORD PTR ds:[esi]
  4079ee:	in     eax,0x4c
  4079f0:	pusha  
  4079f1:	stc    
  4079f2:	cwde   
  4079f3:	std    
  4079f4:	xchg   edi,eax
  4079f5:	out    0x28,al
  4079f7:	mov    ds:0xeeef2d3c,al
  4079fc:	xchg   ax,ax
  4079fe:	inc    ebx
  4079ff:	(bad)  
  407a01:	out    0x81,al
  407a03:	push   edx
  407a04:	or     eax,0x4aedf1da
  407a09:	pop    eax
  407a0a:	mov    al,ds:0xfcc5420e
  407a0f:	jp     0x407a46
  407a11:	(bad)  
  407a12:	enter  0x43cc,0xf0
  407a16:	js     0x4079b3
  407a18:	mov    eax,ds:0x17a10f90
  407a1d:	cmp    DWORD PTR [ecx-0x3795f5df],ebp
  407a23:	ror    DWORD PTR [esi-0x52],cl
  407a26:	push   eax
  407a27:	add    DWORD PTR [esi-0x59dfaf82],esi
  407a2d:	jmp    0x54fe4a01
  407a32:	les    ecx,FWORD PTR [edi]
  407a34:	call   0x91edef08
  407a39:	ds lahf 
  407a3b:	jmp    0xee62c3f6
  407a40:	je     0x407a36
  407a42:	xor    BYTE PTR [esi+ebp*4],dh
  407a45:	popf   
  407a46:	imul   ecx,esi,0x14
  407a49:	xchg   edx,eax
  407a4a:	sahf   
  407a4b:	idiv   DWORD PTR [esp+edi*4]
  407a4e:	push   ds
  407a4f:	aad    0xa3
  407a51:	xchg   ebx,eax
  407a52:	shl    edi,cl
  407a54:	push   ecx
  407a55:	xchg   ebx,eax
  407a56:	ds int3 
  407a58:	gs dec esi
  407a5a:	pop    ebp
  407a5b:	out    0x71,eax
  407a5d:	jno    0x407ab8
  407a5f:	push   ss
  407a60:	xor    DWORD PTR [esi],eax
  407a62:	sub    dl,ah
  407a64:	or     DWORD PTR [edi+0x27],esi
  407a67:	push   0x34
  407a69:	sub    BYTE PTR [ebx],0x71
  407a6c:	dec    edx
  407a6d:	test   DWORD PTR [esi-0x10fbcded],edx
  407a73:	fwait
  407a74:	mov    ch,0xba
  407a76:	ror    DWORD PTR [eax+0x68],1
  407a79:	repnz mov bh,0x34
  407a7c:	inc    edx
  407a7d:	mov    ebx,0x182c9a0f
  407a82:	test   eax,0x81eafd59
  407a87:	ds das 
  407a89:	rol    dh,0x8a
  407a8c:	cmp    BYTE PTR [ecx-0x3],bh
  407a8f:	push   edi
  407a90:	leave  
  407a91:	sub    bl,BYTE PTR [eax-0x5cf15f79]
  407a97:	(bad)  
  407a98:	fimul  WORD PTR [ebx]
  407a9a:	mov    bl,dh
  407a9c:	ret    0xbd20
  407a9f:	push   esp
  407aa0:	ins    DWORD PTR es:[edi],dx
  407aa1:	mov    dl,0x42
  407aa3:	push   ebp
  407aa4:	xchg   esp,edi
  407aa6:	adc    DWORD PTR [ebx-0x7899c412],edi
  407aac:	pusha  
  407aad:	cwde   
  407aae:	push   esp
  407aaf:	sbb    esp,DWORD PTR [edx+0x49]
  407ab2:	adc    ah,BYTE PTR [edi]
  407ab4:	test   eax,0x26ceee41
  407ab9:	jae    0x407acd
  407abb:	sub    al,0xd8
  407abd:	add    DWORD PTR [eax],eax
  407abf:	clc    
  407ac0:	std    
  407ac1:	mov    bh,0xef
  407ac3:	mov    al,BYTE PTR [ebx]
  407ac5:	dec    eax
  407ac6:	aad    0xb0
  407ac8:	out    dx,al
  407ac9:	inc    esi
  407aca:	inc    edx
  407acb:	mov    ds:0x9f5bebeb,eax
  407ad0:	jnp    0x407aaa
  407ad2:	clc    
  407ad3:	mov    eax,0x2c3a113
  407ad8:	mov    edx,0x8f65050a
  407add:	mov    ah,0x93
  407adf:	or     DWORD PTR ds:0x30766f17,esi
  407ae5:	ds dec ebx
  407ae7:	sub    eax,0xb3813697
  407aec:	dec    esp
  407aed:	fbstp  TBYTE PTR [ebp-0x45]
  407af0:	mov    al,ds:0x2ca627f3
  407af5:	cli    
  407af6:	push   edx
  407af7:	lods   eax,DWORD PTR ds:[esi]
  407af8:	test   eax,0x45fb2e57
  407afd:	ss test cl,0xa7
  407b01:	aad    0xd9
  407b03:	dec    edi
  407b04:	(bad)  
  407b05:	sbb    BYTE PTR [edi-0x74305a11],0xff
  407b0c:	dec    edi
  407b0d:	pop    ss
  407b0e:	jne    0x407b76
  407b10:	outs   dx,DWORD PTR ds:[esi]
  407b11:	cwde   
  407b12:	add    eax,0xd2cf5a65
  407b17:	xchg   esp,eax
  407b18:	(bad)  
  407b19:	cdq    
  407b1a:	mov    ds:0x5654211a,al
  407b1f:	sbb    eax,0x78874ca0
  407b24:	mov    bl,0xdc
  407b26:	in     eax,dx
  407b27:	jae    0x407b61
  407b29:	jg     0x407ac9
  407b2b:	sar    DWORD PTR [esp+eax*2],0x8c
  407b2f:	and    BYTE PTR [ecx+0xe080d41],bh
  407b35:	cmp    DWORD PTR [esi+eiz*8-0x25],edx
  407b39:	test   DWORD PTR [ebp+0x3f],0x81f933b7
  407b40:	(bad)  
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xb5e970e0
  407e5b:	inc    esi
  407e5c:	ds iret 
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	jg     0x407dfb
  407e67:	in     al,dx
  407e68:	(bad)  
  407e6a:	push   0xffffffd2
  407e6c:	lahf   
  407e6d:	dec    edi
  407e6e:	push   ebx
  407e6f:	cmp    al,0x4a
  407e71:	sbb    DWORD PTR [edx],ecx
  407e73:	leave  
  407e74:	or     al,0x72
  407e76:	mov    dl,0xc4
  407e78:	imul   eax,DWORD PTR [ebx],0x3182b9fd
  407e7e:	fwait
  407e7f:	pop    ebx
  407e80:	rol    edi,0xc2
  407e83:	or     ebx,DWORD PTR [ebx-0x60c64384]
  407e89:	sbb    ebp,DWORD PTR [edx]
  407e8b:	dec    eax
  407e8c:	sub    BYTE PTR [edi+edi*4+0x6b9014f9],0x47
  407e94:	or     edi,0xf2d23dc
  407e9a:	jae    0x407f0a
  407e9c:	and    ch,BYTE PTR [esi-0x39]
  407e9f:	ss cld 
  407ea1:	data16 cmp BYTE PTR [eax],ch
  407ea4:	sbb    al,0x37
  407ea6:	or     DWORD PTR [ebx+ecx*8+0x78eb2510],0x5dfb5055
  407eb1:	add    cl,dl
  407eb3:	and    ebx,DWORD PTR [ebp+0x76]
  407eb6:	jp     0x407e81
  407eb8:	lods   al,BYTE PTR ds:[esi]
  407eb9:	das    
  407eba:	cmc    
  407ebb:	xchg   ebx,eax
  407ebc:	jbe    0x407f29
  407ebe:	cmp    DWORD PTR [edi-0x72],ecx
  407ec1:	and    edx,DWORD PTR [eax-0xd]
  407ec4:	xlat   BYTE PTR ds:[ebx]
  407ec5:	adc    esp,ebp
  407ec7:	lea    ebp,[edx-0x56]
  407eca:	push   ecx
  407ecb:	adc    eax,0xabe25fc7
  407ed0:	call   0x1db1a485
  407ed5:	pop    ebx
  407ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed7:	stos   BYTE PTR es:[edi],al
  407ed8:	call   0xeb0b0ed3
  407edd:	jbe    0x407f13
  407edf:	cmp    esi,ebx
  407ee1:	push   eax
  407ee2:	push   ds
  407ee3:	mov    al,ds:0xd66b0e77
  407ee8:	jb     0x407eec
  407eea:	imul   esi,DWORD PTR [ecx],0xc
  407eed:	push   ecx
  407eee:	or     BYTE PTR [ebx+0x1c],ch
  407ef1:	jb     0x407f5e
  407ef3:	test   BYTE PTR [eax+ebx*4+0x7],0x33
  407ef8:	or     al,0x52
  407efa:	cmc    
  407efb:	cmp    ebx,edi
  407efd:	cdq    
  407efe:	push   edi
  407eff:	pop    es
  407f00:	dec    eax
  407f01:	stc    
  407f02:	out    0x20,eax
  407f04:	dec    esp
  407f05:	adc    eax,0xcf94b0b1
  407f0a:	pop    ss
  407f0b:	addr16 push edx
  407f0d:	and    esi,DWORD PTR [edi+0x59]
  407f10:	add    DWORD PTR ds:0xf1aae05,esp
  407f16:	mov    edi,DWORD PTR [edx-0x2afc81dc]
  407f1c:	and    eax,0xd71aa244
  407f21:	jmp    0x407f57
  407f23:	sub    dh,BYTE PTR [edi-0x52ec5a33]
  407f29:	jo     0x407f97
  407f2b:	adc    DWORD PTR [ebp+0x3f8e2e05],edi
  407f31:	jmp    0xcf44:0x1f8157d1
  407f38:	std    
  407f39:	aas    
  407f3a:	cld    
  407f3b:	ror    edi,1
  407f3d:	retf   0xf959
  407f40:	mov    eax,ds:0x6aa7dfd9
  407f45:	xor    eax,0x1692dfd
  407f4a:	not    ecx
  407f4c:	nop
  407f4d:	or     eax,ebx
  407f4f:	jecxz  0x407f6e
  407f51:	or     eax,DWORD PTR [esi]
  407f53:	lds    eax,FWORD PTR [edx]
  407f55:	rcl    BYTE PTR [esp+ecx*2-0x46],cl
  407f59:	inc    eax
  407f5a:	loopne 0x407f66
  407f5c:	retf   
  407f5d:	(bad)  
  407f5e:	pop    eax
  407f5f:	call   0x4733:0x59c674e3
  407f66:	adc    BYTE PTR [di+0x16a0],ah
  407f6b:	daa    
  407f6c:	(bad)  
  407f6d:	cmp    al,dh
  407f6f:	jno    0x407fd6
  407f71:	clc    
  407f72:	pop    eax
  407f73:	jge    0x407fec
  407f75:	fild   DWORD PTR [ebx]
  407f77:	cli    
  407f78:	iret   
  407f79:	ins    BYTE PTR es:[edi],dx
  407f7a:	or     BYTE PTR [eax],bh
  407f7c:	inc    ecx
  407f7d:	mov    cs,WORD PTR [eax-0x1ccd2979]
  407f83:	hlt    
  407f84:	jbe    0x407fe0
  407f86:	aad    0xc9
  407f88:	call   0xb1dd:0xb8655535
  407f8f:	dec    ebx
  407f90:	outs   dx,BYTE PTR ds:[esi]
  407f91:	sub    cl,BYTE PTR [ebx]
  407f93:	jle    0x407f9b
  407f95:	pusha  
  407f96:	scas   eax,DWORD PTR es:[edi]
  407f97:	add    DWORD PTR [esi-0x72],0xc0a5ca16
  407f9e:	push   es
  407f9f:	pop    ss
  407fa0:	(bad)  
  407fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa2:	ret    0x2d00
  407fa5:	in     al,dx
  407fa6:	mov    eax,0x7d39b47c
  407fab:	jnp    0x407f9a
  407fad:	mov    ds:0x9a26896a,al
  407fb2:	xchg   esi,eax
  407fb3:	and    edx,ebx
  407fb5:	dec    ecx
  407fb6:	popa   
  407fb7:	or     esi,DWORD PTR [ebx-0x2]
  407fba:	outs   dx,BYTE PTR ds:[esi]
  407fbb:	bound  ecx,QWORD PTR [ebx-0x7375fc7]
  407fc1:	mov    dl,0x79
  407fc3:	push   ecx
  407fc4:	push   edi
  407fc5:	dec    edi
  407fc6:	add    al,0xf7
  407fc8:	mov    ebp,0x1a058219
  407fcd:	jns    0x408010
  407fcf:	iret   
  407fd0:	(bad)  [edi+edi*1]
  407fd3:	jg     0x407f97
  407fd5:	js     0x40803b
  407fd7:	jp     0x408027
  407fd9:	dec    ebx
  407fda:	xchg   edi,eax
  407fdb:	or     BYTE PTR [ebp+0x54cc317e],0x3b
  407fe2:	mov    esp,0x6d881ac5
  407fe7:	add    DWORD PTR [edx],ebp
  407fe9:	in     eax,0xdd
  407feb:	add    BYTE PTR [ecx-0x19],cl
  407fee:	sbb    dh,BYTE PTR [edi+edi*2-0x6e]
  407ff2:	in     eax,0xef
  407ff4:	or     al,0x41
  407ff6:	ds jmp 0x40800e
  407ff9:	stos   DWORD PTR es:[edi],eax
  407ffa:	out    0xe1,al
  407ffc:	mov    DWORD PTR [ebx],ebp
  407ffe:	sub    eax,0xf79ed15e
  408003:	idiv   eax
  408005:	jbe    0x407fdf
  408007:	imul   esi,DWORD PTR [ebx],0x111ea0e6
  40800d:	sub    eax,0x4de711a9
  408012:	ds dec ebp
  408014:	inc    esp
  408015:	sbb    DWORD PTR [edx+esi*8-0x42],esi
  408019:	pop    edi
  40801a:	and    esp,DWORD PTR [ebx+0x6]
  40801d:	mov    dh,0x21
  40801f:	and    eax,0x7b980f53
  408024:	cmp    eax,0x98125e56
  408029:	popa   
  40802a:	pop    ecx
  40802b:	pop    ds
  40802c:	(bad)  
  40802d:	inc    esp
  40802e:	add    al,0xca
  408030:	cdq    
  408031:	into   
  408032:	dec    ecx
  408033:	sbb    ah,bh
  408035:	mov    dh,0x9
  408037:	or     BYTE PTR [esi-0x5d4a3efb],ch
  40803d:	pop    ds
  40803e:	in     al,0x10
  408040:	sar    BYTE PTR [ebx+ebx*2],cl
  408043:	fld    st(4)
  408045:	fcmovb st,st(2)
  408047:	add    BYTE PTR [edi-0x5f],dl
  40804a:	aaa    
  40804b:	enter  0x9264,0xc7
  40804f:	push   ss
  408050:	in     eax,0xb5
  408052:	pop    ebx
  408053:	jbe    0x408074
  408055:	jnp    0x408097
  408057:	inc    eax
  408058:	push   es
  408059:	pop    edi
  40805a:	xor    eax,0x9443decd
  40805f:	adc    ebp,esp
  408061:	cmp    al,0xf5
  408063:	inc    eax
  408064:	in     al,dx
  408065:	shl    BYTE PTR [ebp-0x555a9422],cl
  40806b:	jg     0x408064
  40806d:	jb     0x407ff3
  40806f:	and    edx,ebp
  408071:	sbb    BYTE PTR [edi+0x10],bh
  408074:	out    0x5c,eax
  408076:	repz (bad) 
  408078:	sahf   
  408079:	dec    edi
  40807a:	outs   dx,BYTE PTR ds:[esi]
  40807b:	rcl    BYTE PTR [esi],1
  40807d:	pop    ecx
  40807e:	add    eax,0x4d50f304
  408083:	call   0xf726d8fa
  408088:	and    eax,0x43f41d75
  40808d:	arpl   bp,bx
  40808f:	add    esi,DWORD PTR [edi-0xbda61b0]
  408095:	mov    esp,0xf84c4785
  40809a:	std    
  40809b:	xchg   edx,eax
  40809c:	and    ch,BYTE PTR [eax]
  40809e:	mov    bl,0xd1
  4080a0:	fs enter 0xa19f,0x31
  4080a5:	sbb    eax,0x90f989ec
  4080aa:	cmp    BYTE PTR [ebp+0x5],cl
  4080ad:	test   eax,0xc55da1e
  4080b2:	mov    dl,0x3
  4080b4:	mov    ds:0xdd10b732,eax
  4080b9:	jns    0x40811a
  4080bb:	dec    ecx
  4080bc:	ja     0x4080c4
  4080be:	sbb    BYTE PTR [esi+0xb24ed7b],ch
  4080c4:	mov    ecx,ebx
  4080c6:	dec    ebx
  4080c7:	scas   al,BYTE PTR es:[edi]
  4080c8:	sbb    ecx,DWORD PTR [ebx]
  4080ca:	ja     0x40810a
  4080cc:	loope  0x408103
  4080ce:	mov    ds:0x3b00fd1d,eax
  4080d3:	xchg   ebp,eax
  4080d4:	sub    ebp,DWORD PTR [ebx]
  4080d6:	push   esi
  4080d7:	lods   al,BYTE PTR ds:[esi]
  4080d8:	cmp    al,0xe4
  4080da:	cdq    
  4080db:	loope  0x40808f
  4080dd:	frstor [ebp-0x45]
  4080e0:	pop    ecx
  4080e1:	inc    ebx
  4080e2:	repnz outs dx,BYTE PTR ds:[esi]
  4080e4:	or     DWORD PTR ds:0xc74e0cbe,esp
  4080ea:	jg     0x408138
  4080ec:	add    al,0xd9
  4080ee:	lods   eax,DWORD PTR ds:[esi]
  4080ef:	daa    
  4080f0:	ss aaa 
  4080f2:	pusha  
  4080f3:	mov    esi,DWORD PTR [ebx-0x70]
  4080f6:	pop    es
  4080f7:	add    dh,cl
  4080f9:	arpl   WORD PTR [ecx-0x5],di
  4080fc:	int3   
  4080fd:	sahf   
  4080fe:	(bad)  
  4080ff:	mov    ah,ah
  408101:	push   esp
  408102:	sub    eax,0xc5ceea81
  408107:	ins    DWORD PTR es:[edi],dx
  408108:	jmp    0xcba8:0xf2d43365
  40810f:	xor    dl,ch
  408111:	or     al,BYTE PTR [eax-0x37]
  408114:	add    eax,0xcefa0f00
  408119:	jb     0x4080cd
  40811b:	push   ebp
  40811c:	stc    
  40811d:	add    edi,DWORD PTR [edx-0x5]
  408120:	scas   al,BYTE PTR es:[edi]
  408121:	cmp    al,cl
  408123:	into   
  408124:	pop    eax
  408125:	mov    ds:0x34a84414,eax
  40812a:	cli    
  40812b:	ins    BYTE PTR es:[edi],dx
  40812c:	add    ah,0x54
  40812f:	add    esi,DWORD PTR [edi]
  408131:	jo     0x40812c
  408133:	dec    edi
  408134:	and    eax,0x8baa195
  408139:	dec    eax
  40813a:	add    eax,0xc83eeb1a
  40813f:	pusha  
  408140:	mov    ds:0xf08ef164,eax
  408145:	not    DWORD PTR [ebx+ecx*1]
  408148:	hlt    
  408149:	out    0x5c,eax
  40814b:	sar    DWORD PTR [ebp+0x25],cl
  40814e:	sbb    DWORD PTR [esi],esp
  408150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408151:	aam    0x9f
  408153:	cmc    
  408154:	push   edi
  408155:	mov    DWORD PTR [ebx-0x36df80bd],ecx
  40815b:	adc    bl,BYTE PTR [ecx]
  40815d:	dec    edi
  40815e:	imul   eax,DWORD PTR ds:0xcf929e5b,0x1
  408165:	push   ds
  408166:	inc    ebp
  408167:	jp     0x40811e
  408169:	push   edi
  40816a:	into   
  40816b:	pop    ecx
  40816c:	fild   DWORD PTR [edx]
  40816e:	cwde   
  40816f:	mov    cl,0xac
  408171:	sub    edi,esp
  408173:	jmp    0x67b16d0d
  408178:	push   ebp
  408179:	ja     0x408170
  40817b:	mov    ds:0xd9a6823d,al
  408180:	jle    0x40810d
  408182:	fidiv  DWORD PTR [ebx+0x74]
  408185:	inc    bp
  408187:	jl     0x408140
  408189:	xlat   BYTE PTR ds:[ebx]
  40818a:	mov    eax,ds:0xb785e285
  40818f:	icebp  
  408190:	daa    
  408191:	cmp    DWORD PTR [edi+0x1e],ebx
  408194:	xor    ch,al
  408196:	icebp  
  408197:	sub    esi,ebx
  408199:	out    dx,eax
  40819a:	aas    
  40819b:	les    ebp,FWORD PTR [ecx-0x7d]
  40819e:	outs   dx,BYTE PTR ds:[esi]
  40819f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a0:	pop    ebp
  4081a1:	sti    
  4081a2:	mov    dh,0xf2
  4081a4:	jp     0x40820e
  4081a6:	sub    ebx,DWORD PTR [ebp-0x6b529223]
  4081ac:	(bad)  
  4081ad:	test   al,0xf3
  4081af:	outs   dx,DWORD PTR ds:[esi]
  4081b0:	bound  edx,QWORD PTR [ebx+0x23fcd541]
  4081b6:	mov    al,ds:0xba9f2c57
  4081bb:	jmp    0x8fa6:0xd49caba0
  4081c2:	pop    eax
  4081c3:	ss mov esp,0x8199dadb
  4081c9:	mov    ch,0x59
  4081cb:	mov    ecx,0x16c60a28
  4081d0:	push   ecx
  4081d1:	adc    al,0x45
  4081d3:	cmp    al,0x83
  4081d5:	xchg   esi,eax
  4081d6:	xchg   edi,eax
  4081d7:	mov    ebp,0x6e65e8e6
  4081dc:	cmp    cl,BYTE PTR cs:[esi-0x5a]
  4081e0:	mov    dh,0x89
  4081e2:	mov    ecx,0x398f4687
  4081e7:	stos   DWORD PTR es:[edi],eax
  4081e8:	xor    eax,0x43b75849
  4081ed:	push   ds
  4081ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ef:	je     0x408249
  4081f1:	out    0x43,eax
  4081f3:	xor    eax,0x1be8847a
  4081f8:	shl    BYTE PTR [eax+0x754d6575],0xf8
  4081ff:	jle    0x40819e
  408201:	pop    esi
  408202:	mov    esi,0x16c710d5
  408207:	out    dx,al
  408208:	jg     0x40822f
  40820a:	jbe    0x4081fe
  40820c:	adc    al,0xfb
  40820e:	lds    ebp,FWORD PTR [eax]
  408210:	xchg   edx,eax
  408211:	dec    edx
  408212:	xor    eax,0x2ee73e36
  408217:	sbb    al,BYTE PTR [edx-0x4c1a875c]
  40821d:	std    
  40821e:	sub    BYTE PTR ds:0x5dd46665,0x81
  408225:	sbb    eax,0xe28e3fd3
  40822a:	adc    DWORD PTR [esp+ecx*1-0x6f],esi
  40822e:	xchg   esi,eax
  40822f:	mov    ds:0x948386ee,eax
  408234:	and    DWORD PTR [ebx-0x631da797],edx
  40823a:	push   0xffffffe1
  40823c:	cmp    BYTE PTR ds:0xe30a7719,ch
  408242:	lahf   
  408243:	dec    eax
  408244:	xchg   ebp,eax
  408245:	adc    DWORD PTR [esi+0x4d],0xdf203a8d
  40824c:	push   edi
  40824d:	ss pop es
  40824f:	loopne 0x40821d
  408251:	jl     0x408241
  408253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408254:	(bad)  
  408255:	mov    DWORD PTR ds:0x48c268d5,0xfa373a43
  40825f:	mov    gs,WORD PTR [edi+0x2]
  408262:	repnz xlat BYTE PTR ds:[ebx]
  408264:	sub    eax,0x56173432
  408269:	xchg   dl,bl
  40826b:	push   edx
  40826c:	jbe    0x40829e
  40826e:	ss xchg ebp,eax
  408270:	mov    ds:0xf06cd700,al
  408275:	outs   dx,DWORD PTR ds:[esi]
  408276:	mov    ah,0xe4
  408278:	push   ss
  408279:	and    BYTE PTR [edi],dl
  40827b:	xchg   DWORD PTR [ecx-0x76],esp
  40827e:	out    0x96,al
  408280:	cs (bad) 
  408282:	out    dx,eax
  408283:	stos   DWORD PTR es:[edi],eax
  408284:	ja     0x408222
  408286:	ja     0x4082c5
  408288:	push   ebp
  408289:	ins    BYTE PTR es:[edi],dx
  40828a:	mov    al,ds:0xde65deac
  40828f:	xchg   BYTE PTR [ebx],dl
  408291:	add    dl,dh
  408293:	inc    esi
  408294:	pop    ecx
  408295:	mov    edx,ss
  408297:	loope  0x4082e2
  408299:	or     DWORD PTR [edx-0x5a],edx
  40829c:	nop
  40829d:	int3   
  40829e:	xor    BYTE PTR [eax+edi*2],0xea
  4082a2:	mov    ebx,0xb46b2f29
  4082a7:	out    0x3,al
  4082a9:	retf   0xf7b5
  4082ac:	push   eax
  4082ad:	out    dx,al
  4082ae:	repz add eax,0x8988be05
  4082b4:	cmp    al,0x1f
  4082b6:	rcr    DWORD PTR [ecx+edi*4+0x3d48348a],0x6e
  4082be:	cmc    
  4082bf:	ret    0xbac5
  4082c2:	ins    BYTE PTR es:[edi],dx
  4082c3:	xchg   edx,eax
  4082c4:	mov    eax,ds:0x40418592
  4082c9:	leave  
  4082ca:	and    edi,ebp
  4082cc:	adc    ch,BYTE PTR [edx+0x3c0dec58]
  4082d2:	sbb    al,0xd
  4082d4:	inc    ecx
  4082d5:	jmp    0xfe17:0x62dfd225
  4082dc:	and    ebx,DWORD PTR [edi+ecx*8-0x48f4ee33]
  4082e3:	arpl   WORD PTR [edi],cx
  4082e5:	arpl   WORD PTR [edi],dx
  4082e7:	jg     0x4082e8
  4082e9:	cmp    ebx,DWORD PTR [ebx+0x48c3cc87]
  4082ef:	or     cl,dl
  4082f1:	mov    ds:0xe0ef818e,al
  4082f6:	mov    esp,0x174236c7
  4082fb:	xchg   BYTE PTR [edx+0x472ba2d],cl
  408301:	fdivr  QWORD PTR [eax-0x5b]
  408304:	mov    ch,0x64
  408306:	js     0x4082ac
  408308:	scas   eax,DWORD PTR es:[edi]
  408309:	inc    ecx
  40830a:	push   0xffffff88
  40830c:	pop    ds
  40830d:	fnsave [ebp+0x68]
  408310:	push   ebx
  408311:	je     0x4082fb
  408313:	xchg   esp,eax
  408314:	cmp    eax,0x65527f9c
  408319:	gs jle 0x4082e1
  40831c:	jl     0x40832d
  40831e:	stos   DWORD PTR es:[edi],eax
  40831f:	ja     0x408304
  408321:	neg    DWORD PTR [ebx-0x49b832e1]
  408327:	mov    ebx,0x220fe084
  40832c:	mul    DWORD PTR [ebx+0x4b0df5f5]
  408332:	mov    ebp,0x4d711c4c
  408337:	jno    0x40839a
  408339:	mov    ds:0x1d467f22,eax
  40833e:	fstp   DWORD PTR [ecx-0x258e7d2f]
  408344:	jmp    0xe457:0x863d365
  40834b:	xor    BYTE PTR [eax-0x105cf64c],dl
  408351:	adc    BYTE PTR [ebx],bl
  408353:	and    al,0x23
  408355:	sub    ah,BYTE PTR [edi-0x2a5f22dc]
  40835b:	mov    bh,0xb
  40835d:	shl    ebp,cl
  40835f:	(bad)  
  408360:	mov    ecx,0xcd6e404a
  408365:	fs call 0xa9a09811
  40836b:	and    BYTE PTR [eax-0x57],ah
  40836e:	cmp    dl,BYTE PTR [ebp+0x1b73bba0]
  408374:	mov    dh,0x9a
  408376:	sbb    DWORD PTR ds:0xcf83e5b3,esp
  40837c:	je     0x4083b7
  40837e:	loope  0x408366
  408380:	mov    esp,0x1c697446
  408385:	fst    st(4)
  408387:	dec    eax
  408388:	cmp    edx,eax
  40838a:	dec    esi
  40838b:	in     al,dx
  40838c:	dec    esp
  40838d:	je     0x40835f
  40838f:	xor    esi,DWORD PTR [edx+edi*8+0x5]
  408393:	lds    ebx,FWORD PTR [ebp-0x18]
  408396:	clc    
  408397:	dec    esp
  408398:	jecxz  0x4083ed
  40839a:	fdivr  st(3),st
  40839c:	and    esi,ebp
  40839e:	sub    eax,0x98930625
  4083a3:	pop    ds
  4083a4:	bound  ebp,QWORD PTR [ecx-0x50ea3f63]
  4083aa:	repz dec esp
  4083ac:	mov    ah,0x4d
  4083ae:	sub    al,0xf2
  4083b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b1:	mov    ds:0x8b501e1b,eax
  4083b6:	ja     0x4083a3
  4083b8:	xor    al,0x87
  4083ba:	sub    ebp,edi
  4083bc:	icebp  
  4083bd:	icebp  
  4083be:	in     al,dx
  4083bf:	jge    0x408350
  4083c1:	sti    
  4083c2:	mov    bh,0xb1
  4083c4:	in     al,0xb
  4083c6:	sub    ah,al
  4083c8:	add    DWORD PTR [ebx],eax
  4083ca:	mov    ds:0x35d4ae3d,eax
  4083cf:	fwait
  4083d0:	xor    DWORD PTR [esi+0x44],ebx
  4083d3:	sar    BYTE PTR [ecx-0x9b48b99],cl
  4083d9:	pop    esp
  4083da:	jb     0x40843e
  4083dc:	mov    ebp,0xbc97e79b
  4083e1:	xchg   ebx,edi
  4083e3:	push   0xffffffc1
  4083e5:	lahf   
  4083e6:	fcmovu st,st(2)
  4083e8:	add    eax,0x95d805c3
  4083ed:	int3   
  4083ee:	leave  
  4083ef:	xchg   esi,eax
  4083f0:	mov    bh,0x23
  4083f2:	dec    eax
  4083f3:	je     0x40839b
  4083f5:	cdq    
  4083f6:	mov    BYTE PTR [ecx+0x5d387374],ch
  4083fc:	and    al,0x93
  4083fe:	icebp  
  4083ff:	sub    eax,0xd0dca2a1
  408404:	push   edx
  408405:	add    BYTE PTR [eax],dl
  408407:	xlat   BYTE PTR ds:[ebx]
  408408:	sahf   
  408409:	dec    esp
  40840a:	(bad)
  40840d:	add    eax,0x8dae9640
  408412:	mov    ebx,0xbd960579
  408417:	pop    ebx
  408418:	sub    eax,0x52dbec7a
  40841d:	aam    0x8f
  40841f:	ret    
  408420:	adc    edx,DWORD PTR [ecx]
  408422:	hlt    
  408423:	sub    al,0xf4
  408425:	pushf  
  408426:	es ss out 0x6b,al
  40842a:	mov    eax,ds:0x84df4203
  40842f:	mov    al,ds:0xe1f4566c
  408434:	sbb    esp,DWORD PTR [eax-0x23]
  408437:	(bad)  
  40843a:	fs (bad) 
  40843e:	sbb    ecx,edi
  408440:	fwait
  408441:	mov    bl,0xf5
  408443:	sti    
  408444:	jmp    0x48cbf5b3
  408449:	nop
  40844a:	xchg   edx,eax
  40844b:	pop    ecx
  40844c:	add    al,0x3f
  40844e:	int3   
  40844f:	std    
  408450:	sub    eax,0x2d0f95ea
  408455:	loopne 0x408442
  408457:	pushf  
  408458:	cmp    eax,0xec2b88e1
  40845d:	sub    BYTE PTR [edi],bh
  40845f:	sub    ecx,DWORD PTR [esp+eiz*8]
  408462:	mov    WORD PTR [ecx+0x294130da],gs
  408468:	add    al,0xc1
  40846a:	retf   
  40846b:	mov    edx,DWORD PTR [edi-0x1d]
  40846e:	adc    DWORD PTR [eax+ebp*2+0x6cc0e1e3],esi
  408475:	idiv   DWORD PTR [esi+0x66]
  408478:	cs in  al,dx
  40847a:	or     DWORD PTR [edx-0x11],0xffffffdb
  40847e:	es jmp 0x20ec:0x5576f6d8
  408486:	in     eax,0x6b
  408488:	loope  0x4084a1
  40848a:	xor    ah,dh
  40848c:	dec    ecx
  40848d:	ror    DWORD PTR [esi],1
  40848f:	xchg   BYTE PTR [ebx+0x38],al
  408492:	xchg   edi,eax
  408493:	outs   dx,BYTE PTR ds:[esi]
  408494:	jmp    0x7a19caf0
  408499:	jmp    0x222a31d6
  40849e:	jbe    0x40847d
  4084a0:	scas   al,BYTE PTR es:[edi]
  4084a1:	jns    0x40843b
  4084a3:	pop    ebp
  4084a4:	nop
  4084a5:	pop    edx
  4084a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a7:	push   esp
  4084a8:	sbb    DWORD PTR [eax-0x654a02f5],ecx
  4084ae:	add    BYTE PTR [esi],0xd7
  4084b1:	mov    ds:0x8209f4bc,al
  4084b6:	add    eax,eax
  4084b8:	mov    DWORD PTR [eax],edi
  4084ba:	je     0x408446
  4084bc:	in     al,dx
  4084bd:	bound  ebx,QWORD PTR [ecx-0x6f]
  4084c0:	aad    0x5
  4084c2:	push   edx
  4084c3:	push   esp
  4084c4:	sub    BYTE PTR [ebx-0x63],ah
  4084c7:	or     al,0x8c
  4084c9:	xor    bh,BYTE PTR [edx+0x644bb88f]
  4084cf:	sar    bh,1
  4084d1:	rol    DWORD PTR [edx+edi*1+0x31],1
  4084d5:	or     DWORD PTR [edx+0x570e44f3],0x406981fd
  4084df:	ins    DWORD PTR es:[edi],dx
  4084e0:	jno    0x4084ab
  4084e2:	sti    
  4084e3:	addr16 pop ebx
  4084e5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4084e7:	mov    ds:0x2258aded,eax
  4084ec:	mov    cl,BYTE PTR [ebx+edi*1-0x5e]
  4084f0:	(bad)  
  4084f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f2:	and    dh,ah
  4084f4:	cmp    BYTE PTR [edx],bl
  4084f6:	inc    edi
  4084f7:	and    bh,BYTE PTR [eax+0x2b]
  4084fa:	sub    dl,BYTE PTR [eax+0x52]
  4084fd:	and    al,0x53
  4084ff:	or     al,0xfc
  408501:	sbb    al,BYTE PTR [esi+0x3e]
  408504:	xchg   edx,eax
  408505:	push   cs
  408506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408507:	mov    al,ds:0xd49aae85
  40850c:	retf   0x8014
  40850f:	pop    ss
  408510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408511:	dec    ebp
  408512:	imul   ah
  408514:	push   0x33
  408516:	pop    ss
  408517:	lods   al,BYTE PTR ds:[esi]
  408518:	test   al,0xe1
  40851a:	pop    esi
  40851b:	cmp    eax,0x6a12c25d
  408520:	test   al,0x6b
  408522:	sbb    al,0x9
  408524:	outs   dx,DWORD PTR ds:[esi]
  408525:	lock dec ebx
  408527:	lds    ecx,FWORD PTR [edx+0x58]
  40852a:	sbb    BYTE PTR [ebp+0x725798f5],0xf0
  408531:	ja     0x408593
  408533:	inc    esp
  408534:	inc    esi
  408535:	jnp    0x408503
  408537:	mov    bl,0xea
  408539:	xor    cl,BYTE PTR [ebx+eiz*4]
  40853c:	add    esp,DWORD PTR [ecx-0x18]
  40853f:	sub    ecx,DWORD PTR [ecx]
  408541:	icebp  
  408542:	lahf   
  408543:	mov    dh,0x12
  408545:	rcr    BYTE PTR [edx],cl
  408547:	out    0xbb,al
  408549:	sar    DWORD PTR [edx],1
  40854b:	xor    ah,cl
  40854d:	retf   0xaa12
  408550:	pop    ebp
  408551:	es inc ebx
  408553:	lea    esp,[edx+0x2f]
  408556:	mov    eax,0x29b38573
  40855b:	jp     0x4084e5
  40855d:	test   DWORD PTR [ebp+eax*1-0x16],edx
  408561:	loope  0x408592
  408563:	into   
  408564:	aas    
  408565:	lods   eax,DWORD PTR ds:[esi]
  408566:	dec    esp
  408567:	cld    
  408568:	ins    DWORD PTR es:[edi],dx
  408569:	jmp    0x4085a8
  40856b:	test   BYTE PTR ds:0x97803207,cl
  408571:	or     ecx,DWORD PTR [ecx]
  408573:	daa    
  408574:	out    0x21,al
  408576:	out    dx,eax
  408577:	and    ah,BYTE PTR [edx-0x753cab49]
  40857d:	and    eax,DWORD PTR [esi]
  40857f:	mov    BYTE PTR [edx+0x6a],dh
  408582:	adc    esi,DWORD PTR [esi+0x73]
  408585:	not    BYTE PTR [ebp+ecx*8+0x28]
  408589:	lea    esp,[edi+0x5267631a]
  40858f:	dec    ebx
  408590:	adc    ebp,DWORD PTR [edi+esi*2+0x7ab9ddb5]
  408597:	gs aad 0x61
  40859a:	sbb    BYTE PTR fs:[esi],ch
  40859d:	jo     0x408573
  40859f:	mov    ebp,0x447af3ec
  4085a4:	mov    ecx,0x5a34474a
  4085a9:	mov    esp,DWORD PTR [edi]
  4085ab:	xor    BYTE PTR fs:[ebp+0x32802856],bl
  4085b2:	imul   ecx,DWORD PTR ds:0x4f657b36,0xffffffc6
  4085b9:	and    DWORD PTR [eax-0x2d68af7e],edx
  4085bf:	fdivr  DWORD PTR [ebx+0x7eaeb57b]
  4085c5:	std    
  4085c6:	fwait
  4085c7:	mov    edx,0x5b4810fa
  4085cc:	cmp    DWORD PTR [edi+0x1b],eax
  4085cf:	sar    DWORD PTR [edi-0x4c5d8fa6],cl
  4085d5:	xchg   ebx,eax
  4085d6:	fmul   st,st(7)
  4085d8:	sahf   
  4085d9:	or     eax,0x11a1c275
  4085de:	out    dx,eax
  4085df:	xchg   edx,eax
  4085e0:	leave  
  4085e1:	in     al,dx
  4085e2:	lea    esi,[ebx+edi*2-0x430cedb5]
  4085e9:	dec    edx
  4085ea:	lock std 
  4085ec:	mov    ecx,DWORD PTR [ecx]
  4085ee:	mov    ?,esi
  4085f0:	mov    esi,ebx
  4085f2:	ins    DWORD PTR es:[edi],dx
  4085f3:	rcl    DWORD PTR [ecx-0x5cee7020],cl
  4085f9:	mov    ebx,0xe33ad02a
  4085fe:	jg     0x408650
  408600:	leave  
  408601:	xor    cl,BYTE PTR [esi-0x2d]
  408604:	push   esi
  408605:	cmc    
  408606:	stos   DWORD PTR es:[edi],eax
  408607:	retf   0xc440
  40860a:	pop    bp
  40860c:	or     bl,BYTE PTR [edx+0x66]
  40860f:	out    0x42,al
  408611:	data16 jnp 0x40868f
  408614:	xchg   esp,eax
  408615:	xor    eax,DWORD PTR [esi]
  408617:	jne    0x408678
  408619:	rcr    dl,0x57
  40861c:	push   edx
  40861d:	pop    eax
  40861e:	push   ebx
  40861f:	adc    eax,0xec5dda36
  408624:	jg     0x408619
  408626:	fcomip st,st(7)
  408628:	loope  0x408626
  40862a:	ret    
  40862b:	test   DWORD PTR [ebx],eax
  40862d:	mov    edx,0x824b2c54
  408632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408633:	shr    dl,1
  408635:	xlat   BYTE PTR ds:[ebx]
  408636:	fisubr WORD PTR [ebx+0x4688b5ed]
  40863c:	sbb    esi,0x1ebdf9c5
  408642:	and    dl,BYTE PTR [bx+si]
  408645:	dec    ebp
  408646:	lods   al,BYTE PTR ds:[esi]
  408647:	mov    ch,0xa3
  408649:	or     DWORD PTR [ebp+0x19db6c58],eax
  40864f:	pusha  
  408650:	xchg   ecx,eax
  408651:	(bad)  
  408652:	xchg   edi,eax
  408653:	mov    bl,0x7
  408656:	iret   
  408657:	inc    ebp
  408658:	xlat   BYTE PTR ds:[ebx]
  408659:	ja     0x4085f8
  40865b:	dec    esp
  40865c:	cmp    al,0xb4
  40865e:	rep stos BYTE PTR es:[edi],al
  408660:	jns    0x408641
  408662:	xchg   ebp,eax
  408663:	adc    dl,BYTE PTR [edx+0x57]
  408666:	inc    esi
  408667:	call   0x9d5c7672
  40866c:	adc    DWORD PTR [eax+0x61fb0a57],0x72
  408673:	dec    edi
  408674:	test   DWORD PTR [esi-0x8],eax
  408677:	aaa    
  408678:	mov    bh,0x9c
  40867a:	sbb    al,0x97
  40867c:	into   
  40867d:	adc    BYTE PTR [esi-0x3],ch
  408680:	add    eax,0xfa539674
  408685:	test   al,0x31
  408687:	movaps xmm6,XMMWORD PTR [ecx]
  40868a:	hlt    
  40868b:	ret    0x728c
  40868e:	sub    bl,BYTE PTR [ebx-0x30]
  408691:	xchg   edi,eax
  408692:	add    eax,0xb5b4af33
  408697:	jmp    0xc312:0xfb4fd22d
  40869e:	add    DWORD PTR [edi-0x56],ecx
  4086a1:	daa    
  4086a2:	mov    eax,0xfea79f6d
  4086a7:	pop    eax
  4086a8:	loop   0x4086cc
  4086aa:	fisubr WORD PTR [edi-0x49a7b79b]
  4086b0:	dec    esi
  4086b1:	xor    ch,dh
  4086b3:	mov    eax,0xc4cc633a
  4086b8:	retf   0x3f9
  4086bb:	jb     0x408662
  4086bd:	stos   BYTE PTR es:[edi],al
  4086be:	dec    eax
  4086bf:	mov    ds:0xf8d28caf,eax
  4086c4:	stos   DWORD PTR es:[edi],eax
  4086c5:	mov    al,ds:0x7d22c991
  4086ca:	inc    edi
  4086cb:	rol    DWORD PTR [ecx+ebp*4],cl
  4086ce:	mov    eax,ds:0x9ff7630b
  4086d3:	iret   
  4086d4:	jae    0x40869e
  4086d6:	sar    DWORD PTR [edi],0x9d
  4086d9:	pop    esi
  4086da:	jns    0x40871a
  4086dc:	and    eax,0xa64fb7e
  4086e1:	in     eax,0xe8
  4086e3:	xor    BYTE PTR [edi],dl
  4086e5:	xchg   BYTE PTR [edx],al
  4086e7:	and    DWORD PTR [eax+eax*1],ecx
  4086ea:	sbb    al,0xa2
  4086ec:	xor    DWORD PTR [esi+0x441f8474],ecx
  4086f2:	aam    0xbd
  4086f4:	mov    ah,0x3d
  4086f6:	fidivr DWORD PTR [ecx+0x2dbf9b4d]
  4086fc:	pop    ecx
  4086fd:	pop    ds
  4086fe:	out    dx,eax
  4086ff:	inc    eax
  408700:	in     al,dx
  408701:	push   0xffffffd0
  408703:	in     al,dx
  408704:	outs   dx,BYTE PTR ds:[esi]
  408705:	neg    BYTE PTR [esp+esi*8]
  408708:	xor    al,0x56
  40870a:	pop    edi
  40870b:	push   ss
  40870c:	mov    eax,0x7450699a
  408711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408712:	push   0xffffffa0
  408714:	xchg   ecx,eax
  408715:	push   0x71e1f6db
  40871a:	add    DWORD PTR [ebp+0x193c8594],edi
  408720:	sub    esp,ecx
  408722:	push   ebp
  408723:	loope  0x40877f
  408725:	lahf   
  408726:	push   0xffffff96
  408728:	adc    DWORD PTR [ebp+0x4e57fcb7],ecx
  40872e:	adc    al,0x5c
  408730:	sahf   
  408731:	mov    dh,0xe7
  408733:	add    BYTE PTR [ebp-0x3d3190e8],bh
  408739:	rol    ecx,1
  40873b:	(bad)  
  40873c:	push   eax
  40873d:	lahf   
  40873e:	rol    DWORD PTR [edx],1
  408740:	mov    al,ds:0x8777f3b4
  408745:	push   es
  408746:	adc    bl,BYTE PTR [ebp-0x5971a2c7]
  40874c:	shl    DWORD PTR [edx],1
  40874e:	rol    DWORD PTR [eax+0x75],1
  408751:	or     BYTE PTR [edx+ecx*4+0x74],bh
  408755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408756:	stos   BYTE PTR es:[edi],al
  408757:	inc    ecx
  408758:	addr16 sbb al,0xa9
  40875b:	and    dl,BYTE PTR [esi+0x67b46682]
  408761:	sub    DWORD PTR [edx],ebx
  408763:	jnp    0x408710
  408765:	push   ds
  408766:	or     BYTE PTR [edi+eiz*2-0x379dc635],dh
  40876d:	or     al,0x6b
  40876f:	mov    BYTE PTR [ebp+0x2e],bl
  408772:	sbb    DWORD PTR [ebx],0x52
  408775:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408777:	inc    ebx
  408778:	inc    BYTE PTR [eax+0x6f77fbf8]
  40877e:	in     al,0x31
  408780:	jp     0x4087c5
  408782:	adc    DWORD PTR [ebx-0x29148bab],esp
  408788:	pop    esi
  408789:	fmul   st,st(1)
  40878b:	shl    BYTE PTR fs:[esp+esi*8-0x242bbb0f],cl
  408793:	arpl   bx,di
  408795:	stos   DWORD PTR es:[edi],eax
  408796:	rep stos DWORD PTR es:[edi],eax
  408798:	test   eax,0x60c20ab3
  40879d:	and    esp,eax
  40879f:	test   edx,eax
  4087a1:	scas   eax,DWORD PTR es:[edi]
  4087a2:	mov    BYTE PTR cs:[edx+0x35],bl
  4087a6:	mov    eax,ds
  4087a8:	push   0xffffff89
  4087aa:	mov    edi,0x26b2b831
  4087af:	pop    edx
  4087b0:	inc    ebp
  4087b1:	gs jge 0x40882c
  4087b4:	mov    ah,0x62
  4087b6:	push   esp
  4087b7:	pop    edx
  4087b8:	cmc    
  4087b9:	cmp    BYTE PTR [eax],bl
  4087bb:	cmp    dh,dl
  4087bd:	mov    ds:0xabfdb570,al
  4087c2:	xchg   dh,ch
  4087c4:	inc    edx
  4087c5:	push   esp
  4087c6:	mov    ecx,0xd88564f0
  4087cb:	mov    bl,0x27
  4087cd:	push   edi
  4087ce:	mov    cl,0xe8
  4087d1:	push   0xffffff82
  4087d3:	sbb    eax,0x88438b65
  4087d8:	int    0xac
  4087da:	sbb    BYTE PTR [edi-0x15],0xd5
  4087de:	push   ebp
  4087df:	popf   
  4087e0:	test   eax,0xfe2b6e92
  4087e5:	xchg   edx,eax
  4087e6:	jecxz  0x408795
  4087e8:	mov    esp,0x85ec98a7
  4087ed:	and    BYTE PTR [ebp+0x33],0x2c
  4087f1:	fiadd  DWORD PTR [esp+edi*2+0x632009e]
  4087f8:	jns    0x408814
  4087fa:	jo     0x408800
  4087fc:	xlat   BYTE PTR ds:[ebx]
  4087fd:	xchg   esi,eax
  4087fe:	mov    bh,0x7a
  408800:	inc    ecx
  408801:	jmp    0x6109:0x2c87dce8
  408808:	push   edi
  408809:	test   al,0xea
  40880b:	pop    es
  40880c:	mov    ebx,0x8db95235
  408811:	lahf   
  408812:	sub    DWORD PTR [ecx-0x38],ecx
  408815:	rcl    BYTE PTR [edi-0x7984fb26],cl
  40881b:	pop    ecx
  40881c:	jbe    0x40881c
  40881e:	(bad)  
  40881f:	int3   
  408820:	cmp    BYTE PTR [ecx],ch
  408822:	xor    cl,dl
  408824:	data16 out 0xb1,al
  408827:	int    0xc4
  408829:	arpl   di,dx
  40882b:	aas    
  40882c:	out    dx,eax
  40882d:	mov    edi,0x2bd8842
  408832:	add    ebx,DWORD PTR [ebx+0x269fd2d8]
  408838:	push   0x7266bb71
  40883d:	stos   BYTE PTR es:[edi],al
  40883e:	and    bl,BYTE PTR [esi]
  408840:	or     al,0xbe
  408842:	cwde   
  408843:	ret    0x14b1
  408846:	inc    ebx
  408847:	loopne 0x40885a
  408849:	mov    DWORD PTR [ecx-0x3f90594a],0xde8ec811
  408853:	dec    ecx
  408854:	mov    BYTE PTR [edx+0x5b7a65f2],dh
  40885a:	push   edi
  40885b:	inc    ebp
  40885c:	(bad)  
  40885d:	jmp    0x408833
  40885f:	lds    edx,FWORD PTR [esi-0x4407b2b2]
  408865:	push   0xfffffff6
  408867:	sbb    edi,ecx
  408869:	lahf   
  40886a:	push   ds
  40886b:	fwait
  40886c:	(bad)  
  40886d:	cs test al,0x77
  408870:	jmp    0x7292:0x7a30cd9d
  408877:	aam    0x5b
  408879:	mov    bl,cl
  40887b:	(bad)  
  40887c:	ds fs pop ebp
  40887f:	add    bh,BYTE PTR [ecx]
  408881:	adc    al,0x58
  408883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408884:	(bad)  
  408885:	inc    ecx
  408886:	clc    
  408887:	mov    edi,0x32601a93
  40888c:	stc    
  40888d:	popf   
  40888e:	lahf   
  40888f:	imul   eax,ecx,0x34
  408892:	sub    al,0x39
  408894:	dec    ecx
  408895:	xchg   esp,eax
  408896:	std    
  408897:	popa   
  408898:	jnp    0x40886c
  40889a:	icebp  
  40889b:	mov    ebp,0x2fc41ffe
  4088a0:	sbb    bl,al
  4088a2:	nop
  4088a3:	or     bl,BYTE PTR [ebx-0x57]
  4088a6:	push   esi
  4088a7:	test   ah,ch
  4088a9:	bound  eax,QWORD PTR ds:0x5389a6c3
  4088af:	cld    
  4088b0:	jp     0x4088e7
  4088b2:	sbb    DWORD PTR [eax+0x2c07100e],ecx
  4088b8:	(bad)  
  4088b9:	cmp    eax,esi
  4088bb:	pop    es
  4088bc:	inc    esi
  4088bd:	mov    cl,0x94
  4088bf:	mov    BYTE PTR [ecx],bh
  4088c1:	and    BYTE PTR [edi],dh
  4088c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c4:	arpl   di,ax
  4088c6:	lods   eax,DWORD PTR ds:[esi]
  4088c7:	lods   eax,DWORD PTR ds:[esi]
  4088c8:	jne    0x408876
  4088ca:	into   
  4088cb:	sub    eax,0x2377b99d
  4088d0:	mov    WORD PTR [ebx-0x19],ds
  4088d3:	xchg   ecx,eax
  4088d4:	outs   dx,BYTE PTR ds:[esi]
  4088d5:	bound  edi,QWORD PTR [eax]
  4088d7:	fstp   DWORD PTR [edi]
  4088d9:	in     eax,0xac
  4088db:	int    0xc9
  4088dd:	xor    BYTE PTR [ecx-0x1eaa0192],0xbc
  4088e4:	leave  
  4088e5:	jecxz  0x408890
  4088e7:	sub    bl,BYTE PTR [ecx+0x463987f9]
  4088ed:	sbb    bh,cl
  4088ef:	scas   al,BYTE PTR es:[edi]
  4088f0:	mov    dh,BYTE PTR [edx+0x7d041f47]
  4088f6:	xor    eax,0xa929320b
  4088fb:	adc    DWORD PTR [eax+esi*8-0x18b283a4],esp
  408902:	daa    
  408903:	sub    al,dl
  408905:	sbb    dl,BYTE PTR [ebx+0x61]
  408908:	loopne 0x4088ad
  40890a:	into   
  40890b:	icebp  
  40890c:	mov    esi,0x7a5065f2
  408911:	imul   edx,DWORD PTR [ecx+0x43769537],0xffffffbb
  408918:	push   ebx
  408919:	cmp    BYTE PTR ds:0x5d053059,al
  40891f:	mov    esp,0x7cbaa93
  408924:	outs   dx,DWORD PTR ds:[esi]
  408925:	mov    dh,0xb2
  408927:	adc    edi,DWORD PTR [ebp+0x3faff7b3]
  40892d:	call   0x56462dff
  408932:	not    DWORD PTR [eax+ecx*8]
  408935:	push   esp
  408936:	push   edx
  408937:	lahf   
  408938:	mov    al,dh
  40893a:	out    0x9c,eax
  40893c:	push   ebx
  40893d:	dec    edx
  40893e:	xchg   ebp,eax
  40893f:	jnp    0x4088f0
  408941:	and    al,0x15
  408943:	outs   dx,BYTE PTR ds:[esi]
  408944:	les    edx,FWORD PTR [esi]
  408946:	mov    ecx,0x78fb4900
  40894b:	sar    BYTE PTR [ebx-0x75],cl
  40894e:	mov    dh,0x75
  408950:	stos   BYTE PTR es:[edi],al
  408951:	(bad)  
  408952:	cld    
  408953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408954:	cld    
  408955:	retf   0x2bba
  408958:	inc    ebp
  408959:	jne    0x4089d8
  40895b:	outs   dx,DWORD PTR ds:[esi]
  40895c:	das    
  40895d:	xor    edi,DWORD PTR [ebx-0x58]
  408960:	or     DWORD PTR [edi],0x7717ab76
  408966:	lock pop ecx
  408968:	sbb    al,0x74
  40896a:	dec    eax
  40896b:	cli    
  40896c:	lods   al,BYTE PTR ds:[esi]
  40896d:	daa    
  40896e:	arpl   WORD PTR [edx-0x2f067f9],si
  408974:	sbb    dl,BYTE PTR [eax-0x215b1a2f]
  40897a:	lods   eax,DWORD PTR ds:[esi]
  40897b:	loope  0x4089fc
  40897d:	and    ah,BYTE PTR [ecx]
  40897f:	retf   
  408980:	inc    edx
  408981:	in     al,dx
  408982:	ret    
  408983:	clc    
  408984:	stos   DWORD PTR es:[edi],eax
  408985:	xlat   BYTE PTR ds:[ebx]
  408986:	sub    al,0xd3
  408988:	repnz sub al,0x11
  40898b:	imul   eax,DWORD PTR [eax+edx*8-0x25c7439f],0x84c6c7a3
  408996:	mov    al,ds:0xa72ea266
  40899b:	cs xchg esp,eax
  40899d:	shl    DWORD PTR [edx-0x62],cl
  4089a0:	mov    BYTE PTR [ebx+0x52],0x75
  4089a4:	imul   ebx,DWORD PTR ds:0x8643948a,0xffffffe4
  4089ab:	push   0xffffff86
  4089ad:	popa   
  4089ae:	scas   eax,DWORD PTR es:[edi]
  4089af:	xor    BYTE PTR [ebx+eiz*1],ch
  4089b2:	cmp    edx,ecx
  4089b4:	inc    ebx
  4089b5:	fdiv   DWORD PTR [edx-0x7c1a7ff8]
  4089bb:	xchg   ebx,eax
  4089bc:	cli    
  4089bd:	cmp    bl,ch
  4089bf:	jmp    0x4089b6
  4089c1:	out    dx,eax
  4089c2:	push   cs
  4089c3:	popa   
  4089c4:	mov    eax,ds:0xae3ab63d
  4089c9:	mov    es,WORD PTR [edx+0x79]
  4089cc:	mov    al,0x7e
  4089ce:	mov    esi,0x937d58d7
  4089d3:	inc    esi
  4089d4:	popa   
  4089d5:	mov    cl,BYTE PTR [esi-0x6]
  4089d8:	ret    0xbaa7
  4089db:	cli    
  4089dc:	ret    
  4089dd:	jne    0x4089b7
  4089df:	js     0x4089a9
  4089e1:	cdq    
  4089e2:	sub    al,0x14
  4089e4:	xor    edi,DWORD PTR [ebx-0x4d]
  4089e7:	jmp    FWORD PTR [edx-0x3e]
  4089ea:	jne    0x4089ea
  4089ec:	sbb    ch,BYTE PTR [esi+esi*8+0x1a6e2bf9]
  4089f3:	add    edi,esp
  4089f5:	jge    0x408a4c
  4089f7:	xchg   DWORD PTR [ebp+0x39af6fb6],eax
  4089fd:	mov    edx,0x14c87c00
  408a02:	xor    al,0x1b
  408a04:	pop    ecx
  408a05:	mov    eax,0x3fb1b237
  408a0a:	jns    0x4089a7
  408a0c:	xor    bl,dl
  408a0e:	rol    BYTE PTR [eax-0x57],cl
  408a11:	sub    edi,eax
  408a13:	dec    edi
  408a14:	inc    ecx
  408a15:	int3   
  408a16:	mov    ah,0x51
  408a18:	test   eax,edi
  408a1a:	repnz sbb bh,dh
  408a1d:	push   edi
  408a1e:	imul   edx,DWORD PTR [esp+edi*4+0x28c7cf7f],0x3d07b9e4
  408a29:	xchg   ebx,eax
  408a2a:	mov    ah,0xb9
  408a2c:	ds inc eax
  408a2e:	ss test eax,0xbaf62cc6
  408a34:	pop    edx
  408a35:	dec    esi
  408a36:	cmp    eax,0x3037f031
  408a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a3c:	dec    edx
  408a3d:	jae    0x408a73
  408a3f:	mov    ds:0xb1416c6f,eax
  408a44:	sbb    ebp,DWORD PTR [ebx]
  408a46:	sbb    eax,0xd132bed7
  408a4b:	dec    ebx
  408a4c:	retf   0xe40
  408a4f:	xchg   ebp,eax
  408a50:	mov    eax,ecx
  408a52:	es pop ecx
  408a54:	(bad)  
  408a55:	jl     0x4089dd
  408a57:	jge    0x408a5e
  408a59:	adc    ah,BYTE PTR [edi+0x60]
  408a5c:	or     al,0x5
  408a5e:	rcl    BYTE PTR [eax+0x54],cl
  408a61:	shl    BYTE PTR [ebx],cl
  408a63:	lods   eax,DWORD PTR ds:[esi]
  408a64:	mov    ah,BYTE PTR [ecx+0x11]
  408a67:	push   ebp
  408a68:	icebp  
  408a69:	mov    dl,BYTE PTR [ebx+0x101ccefb]
  408a6f:	add    eax,0x86834898
  408a74:	and    BYTE PTR [edi+0x2f],dl
  408a77:	fs test eax,0x1eb4b0bc
  408a7d:	push   cs
  408a7e:	lock push edx
  408a80:	xor    edi,DWORD PTR ds:0x4cb27ac2
  408a86:	outs   dx,BYTE PTR ds:[esi]
  408a87:	mov    bl,0xde
  408a89:	inc    ebx
  408a8a:	mov    dl,0xc8
  408a8c:	mov    esp,0x87aefe13
  408a91:	cmc    
  408a92:	outs   dx,BYTE PTR ds:[esi]
  408a93:	jecxz  0x408b08
  408a95:	bound  ebx,QWORD PTR [eax]
  408a97:	not    ebx
  408a99:	xor    edi,DWORD PTR [eax+ebx*2-0x4ea29456]
  408aa0:	mov    cl,0xd6
  408aa2:	(bad)  
  408aa3:	and    ecx,DWORD PTR [edi]
  408aa5:	mov    bh,0xbd
  408aa7:	push   edx
  408aa8:	adc    eax,0xb2824b32
  408aad:	push   edi
  408aae:	(bad)  
  408aaf:	jae    0x408b19
  408ab1:	pop    ebx
  408ab2:	xchg   edx,eax
  408ab3:	call   0xa2e2:0x9c8765c7
  408aba:	and    edi,DWORD PTR [ebp-0x26]
  408abd:	in     al,0xf8
  408abf:	in     al,dx
  408ac0:	mov    bl,0x70
  408ac3:	dec    ebp
  408ac4:	push   edx
  408ac5:	ret    
  408ac6:	cli    
  408ac7:	pop    ss
  408ac8:	inc    ecx
  408ac9:	sub    dl,bh
  408acb:	in     eax,dx
  408acc:	adc    edx,edi
  408ace:	pop    ecx
  408acf:	cld    
  408ad0:	or     DWORD PTR [ecx],ebp
  408ad2:	mov    esp,0x7b1c4c21
  408ad7:	xchg   edi,eax
  408ad8:	xor    eax,0x519d3b85
  408add:	sbb    BYTE PTR [edx-0x1f],ch
  408ae0:	inc    edx
  408ae1:	inc    eax
  408ae2:	lds    edx,FWORD PTR [esi+esi*4+0x1c9788e5]
  408ae9:	xchg   esi,eax
  408aea:	call   0xcfa8:0x12e96dba
  408af1:	mov    esi,0x8c45a0c5
  408af6:	aam    0x24
  408af8:	xor    ebx,edx
  408afa:	cmp    eax,edi
  408afc:	lods   eax,DWORD PTR ds:[esi]
  408afd:	pop    eax
  408afe:	(bad)  
  408aff:	jns    0x408b2d
  408b01:	int3   
  408b02:	sar    BYTE PTR [ebp+0x1],cl
  408b05:	mov    al,ds:0xe5627799
  408b0a:	cwde   
  408b0b:	(bad)  
  408b0d:	push   eax
  408b0e:	pop    ss
  408b0f:	mov    ebx,0x2101d629
  408b14:	scas   al,BYTE PTR es:[edi]
  408b15:	es (bad) 
  408b17:	shr    BYTE PTR [ecx+0x6b],1
  408b1a:	push   edx
  408b1b:	mov    esi,edx
  408b1d:	test   BYTE PTR [esi+0x318fdf92],0x41
  408b24:	lock call 0xf68:0x22ecfaca
  408b2c:	loopne 0x408b35
  408b2e:	pop    edi
  408b2f:	push   cs
  408b30:	aas    
  408b31:	inc    esi
  408b32:	neg    DWORD PTR [esi]
  408b34:	push   ecx
  408b35:	in     eax,0xa7
  408b37:	ret    
  408b38:	inc    esp
  408b39:	inc    ebx
  408b3a:	push   ds
  408b3b:	fdiv   DWORD PTR [edi]
  408b3d:	and    ebp,DWORD PTR [eax+0x40]
  408b40:	and    eax,0x225dbfd
  408b45:	mov    ch,0x33
  408b47:	adc    esp,DWORD PTR [ebx+0x5c]
  408b4a:	jae    0x408bb5
  408b4c:	cmp    edx,edx
  408b4e:	sub    al,0x59
  408b50:	mov    al,0xb8
  408b52:	and    eax,0x57d7acaf
  408b57:	sub    ah,BYTE PTR [eax-0x4f]
  408b5a:	dec    esp
  408b5b:	sti    
  408b5c:	xor    BYTE PTR [ebx+0x626ddea2],dh
  408b62:	mov    bl,0x8a
  408b64:	mov    es:0x834c70f2,al
  408b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6b:	pop    ecx
  408b6c:	sub    BYTE PTR [eax+0x7e2af3ea],bl
  408b72:	aad    0x65
  408b74:	mov    dh,0xf9
  408b76:	jmp    0x408b30
  408b78:	push   esi
  408b79:	cmc    
  408b7a:	dec    ebp
  408b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7c:	push   0xffffffc1
  408b7e:	add    eax,0x9bc9bfa
  408b83:	cmp    al,0xe6
  408b85:	sbb    DWORD PTR [edi],esp
  408b87:	stos   DWORD PTR es:[edi],eax
  408b88:	retf   
  408b89:	ja     0x408b1c
  408b8b:	fstp   TBYTE PTR [esi-0x14]
  408b8e:	cmp    esp,DWORD PTR [edi-0x25]
  408b91:	push   ecx
  408b92:	adc    al,0x20
  408b94:	imul   esp,ebx,0x2705b9df
  408b9a:	stos   BYTE PTR es:[edi],al
  408b9b:	sub    al,BYTE PTR [esi]
  408b9d:	mov    ebx,0x46c6501e
  408ba2:	inc    ebp
  408ba3:	lahf   
  408ba4:	retf   
  408ba5:	xor    cl,BYTE PTR [ecx-0x36466d9e]
  408bab:	xchg   esp,eax
  408bac:	call   0x7b319a31
  408bb1:	dec    esi
  408bb2:	pushf  
  408bb3:	xchg   ebp,eax
  408bb4:	adc    BYTE PTR ds:0xdae1228f,ch
  408bba:	jge    0x408b50
  408bbc:	xchg   edi,eax
  408bbd:	sub    al,BYTE PTR [edx+0x65]
  408bc0:	dec    edi
  408bc1:	scas   al,BYTE PTR es:[edi]
  408bc2:	scas   al,BYTE PTR es:[edi]
  408bc3:	arpl   WORD PTR [ecx],sp
  408bc5:	sbb    dl,BYTE PTR [ecx]
  408bc7:	lahf   
  408bc8:	das    
  408bc9:	add    al,0xc1
  408bcb:	mov    ss,WORD PTR [edx+edi*2-0x592fac68]
  408bd2:	jle    0x408bb5
  408bd4:	scas   eax,DWORD PTR es:[edi]
  408bd5:	mov    al,0x92
  408bd7:	(bad)  
  408bd8:	ret    0xd654
  408bdb:	push   ebp
  408bdc:	mov    DWORD PTR [edi-0x1c],esp
  408bdf:	imul   ebp,DWORD PTR [edx+0x23bae06c],0xf628b152
  408be9:	xor    al,0x17
  408beb:	and    al,0x27
  408bed:	fist   WORD PTR [ebx+edx*8+0x8e8f5f2]
  408bf4:	mov    esp,0x82918607
  408bf9:	add    dh,BYTE PTR [edi+edx*8]
  408bfc:	fstp   TBYTE PTR [edx+0x7e]
  408bff:	lea    edx,[esi+edi*4-0x28]
  408c03:	jns    0x408c58
  408c05:	stos   DWORD PTR es:[edi],eax
  408c06:	aaa    
  408c07:	sub    ebp,DWORD PTR [ebx+0x2e]
  408c0a:	cld    
  408c0b:	xchg   ebp,eax
  408c0c:	or     cl,0xc8
  408c0f:	dec    ebx
  408c10:	jbe    0x408bd1
  408c12:	push   edx
  408c13:	xchg   esp,eax
  408c14:	inc    edx
  408c15:	and    dh,BYTE PTR [esi+0x28cee652]
  408c1b:	push   0x77
  408c1d:	call   0x5a8e:0x84af60c3
  408c24:	jl     0x408c6c
  408c26:	scas   eax,DWORD PTR es:[edi]
  408c27:	pop    ss
  408c28:	jmp    0x35dd:0x2f35344c
  408c2f:	dec    eax
  408c30:	iretw  
  408c32:	pop    ds
  408c33:	call   0xec9128b8
  408c38:	jb     0x408c80
  408c3a:	mov    ds:0x5861ec6d,eax
  408c3f:	adc    al,0x95
  408c41:	jns    0x408c12
  408c43:	loope  0x408c9e
  408c45:	int    0x98
  408c47:	push   esp
  408c49:	inc    esi
  408c4a:	mov    WORD PTR [edx+ecx*2],?
  408c4d:	or     ecx,DWORD PTR [ebx-0x55c54c18]
  408c53:	push   0x93c51351
  408c58:	jmp    0x645569b4
  408c5d:	xor    esp,DWORD PTR [ebx-0x4393195b]
  408c63:	cmp    edx,edx
  408c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c66:	pop    ebp
  408c67:	dec    eax
  408c68:	adc    DWORD PTR [esi-0x11552acd],edi
  408c6e:	mov    dx,fs
  408c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c72:	fwait
  408c73:	cwde   
  408c74:	mov    ch,0xb
  408c76:	and    ebp,edi
  408c78:	nop
  408c79:	popa   
  408c7a:	mov    esi,0xaee21a71
  408c7f:	loopne 0x408c7d
  408c81:	aad    0x3d
  408c83:	montmul (bad)
  408c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c85:	(bad)  
  408c86:	lock ins BYTE PTR es:[edi],dx
  408c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c89:	push   ebp
  408c8a:	retf   0x2c4a
  408c8d:	sbb    al,0xd0
  408c8f:	mov    esi,0xa56a5fe5
  408c94:	mov    edi,0xac620b0b
  408c99:	lahf   
  408c9a:	in     al,dx
  408c9b:	int    0xc3
  408c9d:	push   ds
  408c9e:	xor    eax,DWORD PTR [edi+0x43]
  408ca1:	mov    al,0x5e
  408ca3:	sbb    DWORD PTR [ecx+0x62],0x58
  408ca7:	sbb    DWORD PTR [ecx+ecx*2+0x2f59a649],edx
  408cae:	sub    al,0xb
  408cb0:	hlt    
  408cb1:	inc    eax
  408cb2:	sub    edi,esp
  408cb4:	test   BYTE PTR [edx],al
  408cb6:	sbb    al,0xf1
  408cb8:	repz cwde 
  408cba:	pop    edx
  408cbb:	iret   
  408cbc:	(bad)  
  408cbd:	fdivr  DWORD PTR [ecx+0x33]
  408cc0:	xchg   ebp,eax
  408cc1:	(bad)  
  408cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc3:	sub    eax,0x65b3abf4
  408cc8:	lods   eax,DWORD PTR ds:[esi]
  408cc9:	pop    esi
  408cca:	sub    DWORD PTR ds:0x4a6293bf,ecx
  408cd0:	das    
  408cd1:	cmp    cl,BYTE PTR [ebp+0x6e]
  408cd4:	cdq    
  408cd5:	xor    eax,0xddfcfd9c
  408cda:	push   ecx
  408cdb:	sub    al,0xa
  408cdd:	inc    ecx
  408cde:	dec    ebx
  408cdf:	jge    0x408c70
  408ce1:	dec    ebp
  408ce2:	scas   eax,DWORD PTR es:[edi]
  408ce3:	cmp    bl,BYTE PTR [ecx+eax*2]
  408ce6:	addr16 and al,0x58
  408ce9:	dec    ecx
  408cea:	nop
  408ceb:	cmc    
  408cec:	push   eax
  408ced:	icebp  
  408cee:	xchg   BYTE PTR [edx-0xe5da2de],dh
  408cf4:	ret    
  408cf5:	push   ds
  408cf6:	sbb    BYTE PTR [ebx],bh
  408cf8:	mov    cs,WORD PTR [esi+0x2]
  408cfb:	arpl   WORD PTR [edi+0x6b4d48c],bx
  408d01:	pop    esi
  408d02:	jmp    0xead863aa
  408d07:	mov    dl,0xa9
  408d09:	cwde   
  408d0a:	mov    dl,0x62
  408d0c:	loop   0x408ca4
  408d0e:	xor    DWORD PTR [eax+0x59],0xd6943661
  408d15:	loop   0x408caa
  408d17:	repnz pop eax
  408d19:	adc    eax,0x2a14e316
  408d1e:	(bad)  
  408d1f:	xor    DWORD PTR [ebx-0x34],ebp
  408d22:	mov    esi,0x5e84843a
  408d27:	sti    
  408d28:	rcl    BYTE PTR [esi+0x11],1
  408d2b:	cs sbb ebx,0x4e95f493
  408d32:	and    esi,DWORD PTR [ecx-0x2b]
  408d35:	(bad)  
  408d36:	loop   0x408d5a
  408d38:	icebp  
  408d39:	add    eax,0x7760c03f
  408d3e:	xor    al,0x15
  408d40:	je     0x408d1d
  408d42:	not    BYTE PTR [ebp+eiz*8-0x1321a39f]
  408d49:	in     eax,0xc9
  408d4b:	fs stc 
  408d4d:	cmp    DWORD PTR [esi],esi
  408d4f:	fistp  WORD PTR [edi-0x94a18ce]
  408d55:	xor    DWORD PTR ds:0xfe129f46,ecx
  408d5b:	repnz dec esi
  408d5d:	in     al,0x40
  408d5f:	stc    
  408d60:	ins    DWORD PTR es:[edi],dx
  408d61:	jle    0x408cf8
  408d63:	ret    
  408d64:	test   BYTE PTR [edx],al
  408d66:	cmp    al,0x6c
  408d68:	pushf  
  408d69:	loop   0x408d82
  408d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6c:	cdq    
  408d6d:	cmp    bl,BYTE PTR [eax+0x1a]
  408d70:	inc    esp
  408d71:	push   edi
  408d72:	mov    dl,0x2b
  408d74:	pop    es
  408d75:	mov    ebp,DWORD PTR [edx-0x7]
  408d78:	push   0x76
  408d7a:	add    ebp,DWORD PTR [ebp+0x27]
  408d7d:	data16 lods al,BYTE PTR ds:[esi]
  408d7f:	mov    ch,0x78
  408d81:	adc    ch,BYTE PTR [ebx+ebp*8]
  408d84:	sub    DWORD PTR [edi+0x50],0x25
  408d88:	add    ebx,DWORD PTR [ebx-0x205738fe]
  408d8e:	imul   eax,esi,0x57
  408d91:	fcmovu st,st(2)
  408d93:	je     0x408d4b
  408d95:	das    
  408d96:	sbb    BYTE PTR [edx+0x2c87d0c4],ah
  408d9c:	ss stc 
  408d9e:	sahf   
  408d9f:	xchg   ebx,eax
  408da0:	(bad)  
  408da1:	sbb    al,0xa1
  408da3:	mov    ?,WORD PTR ss:[edx+0x47]
  408da7:	cs jbe 0x408e04
  408daa:	sti    
  408dab:	push   0xffffffee
  408dad:	mov    esp,ds
  408daf:	enter  0xb664,0x87
  408db3:	pop    ds
  408db4:	and    edi,DWORD PTR [esi-0x499ec46d]
  408dba:	xchg   esi,eax
  408dbb:	inc    edi
  408dbc:	arpl   bx,sp
  408dbe:	ret    0x8d62
  408dc1:	repnz imul edi,DWORD PTR [edx-0x3faace82],0xb6662fbe
  408dcc:	les    ebx,FWORD PTR [esi]
  408dce:	sub    eax,0x7f7cafaf
  408dd3:	aam    0x48
  408dd5:	xchg   DWORD PTR [edi+0x6c6447d6],ebp
  408ddb:	pop    ecx
  408ddc:	and    eax,0x1ba4f20f
  408de1:	and    DWORD PTR fs:[esp+eax*8],ebx
  408de5:	cmc    
  408de6:	daa    
  408de7:	fisub  WORD PTR ds:0xb6ab5e8c
  408ded:	and    al,0x5d
  408def:	push   ebp
  408df0:	mov    edx,0xa18597a9
  408df5:	nop
  408df6:	rcr    bl,1
  408df8:	mov    esp,DWORD PTR [edx+eiz*1+0x5]
  408dfc:	test   eax,0x8ea154c6
  408e01:	inc    esi
  408e02:	mov    bl,0xed
  408e04:	mov    eax,0x3c8e4ee3
  408e09:	lea    ecx,[eax+0x6f464e78]
  408e0f:	inc    eax
  408e10:	or     esp,ebx
  408e12:	xchg   edx,eax
  408e13:	push   0xaccc1d8a
  408e18:	adc    eax,0xe56c72d1
  408e1d:	cdq    
  408e1e:	mov    dl,0xbe
  408e20:	(bad)  
  408e22:	mov    ch,0x65
  408e24:	add    edx,DWORD PTR [eax]
  408e26:	je     0x408e38
  408e28:	pop    esi
  408e29:	xchg   edx,ecx
  408e2b:	cmp    BYTE PTR [esp+ebx*2],bl
  408e2e:	adc    dl,BYTE PTR [eax+0x4dec363d]
  408e34:	xchg   edx,eax
  408e35:	ret    0xb058
  408e38:	or     ebx,DWORD PTR [esi]
  408e3a:	jp     0x408e56
  408e3c:	mov    BYTE PTR [edi+0x39],bl
  408e3f:	push   ebx
  408e40:	pop    edi
  408e41:	(bad)  
  408e42:	xor    ebx,DWORD PTR [ebx]
  408e44:	out    0x4,eax
  408e46:	xor    edx,esi
  408e48:	sub    ah,bl
  408e4a:	repz adc esi,DWORD PTR [ebx+esi*1-0x3044c7c7]
  408e52:	dec    esp
  408e53:	xor    ebx,DWORD PTR [edx+0x294b9f4a]
  408e59:	sub    al,0x17
  408e5b:	mov    DWORD PTR [ebx+0x2a],ebp
  408e5e:	test   DWORD PTR [eax+edi*2],eax
  408e61:	lahf   
  408e62:	or     eax,0x4d367fc1
  408e67:	jnp    0x408e29
  408e69:	mov    eax,0x4b349a54
  408e6e:	dec    esi
  408e6f:	and    eax,0x16f3da91
  408e74:	add    al,0xbc
  408e76:	and    bh,ah
  408e78:	sub    DWORD PTR ds:0xd14e0d29,edi
  408e7e:	or     dh,BYTE PTR ds:0x1b174dba
  408e84:	xchg   ebx,eax
  408e85:	in     eax,0x63
  408e87:	jg     0x408ef0
  408e89:	stos   BYTE PTR es:[edi],al
  408e8a:	jmp    0x17c6:0x3dabae83
  408e91:	inc    edx
  408e92:	sbb    eax,ecx
  408e94:	ds jae 0x408e5a
  408e97:	lods   eax,DWORD PTR ds:[esi]
  408e98:	jb     0x408ed9
  408e9a:	mov    ds:0x686984a7,eax
  408e9f:	shl    BYTE PTR [ecx-0x78],1
  408ea2:	pushf  
  408ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea4:	sub    bl,ch
  408ea6:	pop    ss
  408ea7:	je     0x408f1c
  408ea9:	adc    BYTE PTR [esi+0x2a],al
  408eac:	jge    0x408e2e
  408eae:	adc    ecx,DWORD PTR [ebp+0x6e]
  408eb1:	sbb    eax,0x203d9cc1
  408eb6:	adc    DWORD PTR ds:0x6a1305e5,edi
  408ebc:	mov    cl,0x59
  408ebe:	enter  0xdb3f,0x8e
  408ec2:	mov    dh,BYTE PTR [ebp+eax*2-0x50]
  408ec6:	icebp  
  408ec7:	jns    0x408ede
  408ec9:	call   0xfbd7022
  408ece:	pop    ebp
  408ecf:	dec    ebx
  408ed0:	(bad)  [ebx-0x7a]
  408ed3:	xchg   edx,eax
  408ed4:	stos   DWORD PTR es:[edi],eax
  408ed5:	adc    BYTE PTR [ebp-0x49],bl
  408ed8:	fidiv  DWORD PTR [ebx]
  408eda:	xchg   esi,eax
  408edb:	stos   DWORD PTR es:[edi],eax
  408edc:	fstp   TBYTE PTR [eax-0x28ca49cd]
  408ee2:	push   0xfffffff2
  408ee4:	pop    esp
  408ee5:	and    edi,DWORD PTR [esi-0x29]
  408ee8:	push   es
  408ee9:	mov    ecx,DWORD PTR [eax-0xf]
  408eec:	mov    dl,0xb9
  408eee:	adc    eax,0x2c0262db
  408ef3:	sbb    eax,0x87017b1b
  408ef8:	and    al,0x6d
  408efa:	(bad)  
  408efb:	enter  0x326c,0xfa
  408eff:	fidiv  WORD PTR [ecx+0x4e]
  408f02:	sub    dh,BYTE PTR [esp+eax*4+0x7]
  408f06:	mov    ecx,DWORD PTR [esi-0x2f]
  408f09:	pop    es
  408f0a:	xor    esp,DWORD PTR [eax]
  408f0c:	test   DWORD PTR [esp+eiz*2-0x39],esi
  408f10:	inc    edx
  408f11:	(bad)  
  408f12:	cs mov edi,0xbe5ee491
  408f19:	and    bl,BYTE PTR [eax-0x7f22cc89]
  408f1f:	add    bh,al
  408f21:	cmp    DWORD PTR [eax+0x7ec8635b],0x4e
  408f28:	not    DWORD PTR [edi]
  408f2a:	mov    ch,0xea
  408f2c:	xchg   DWORD PTR [ebx-0xebed9ba],esi
  408f32:	adc    dh,dh
  408f34:	aam    0xa1
  408f36:	pop    esp
  408f37:	arpl   WORD PTR [edx],bp
  408f39:	cmp    ebx,DWORD PTR [ebp-0x60]
  408f3c:	adc    esp,esi
  408f3e:	or     ch,dl
  408f40:	popf   
  408f41:	retf   0xabec
  408f44:	ret    0x7e2d
  408f47:	scas   eax,DWORD PTR es:[edi]
  408f48:	dec    edi
  408f49:	sbb    BYTE PTR [edi],ch
  408f4b:	aas    
  408f4c:	or     dl,BYTE PTR [edi]
  408f4e:	push   ss
  408f4f:	aad    0x56
  408f51:	adc    bh,ah
  408f53:	sub    eax,0x20a0c1f8
  408f58:	push   ecx
  408f59:	sahf   
  408f5a:	les    edi,FWORD PTR [eax]
  408f5c:	leave  
  408f5d:	cli    
  408f5e:	jns    0x408f49
  408f60:	es ds hlt 
  408f63:	and    DWORD PTR [ebx-0x2a7ce85d],ecx
  408f69:	out    0xc5,al
  408f6b:	cmp    eax,DWORD PTR [ebx]
  408f6d:	xor    eax,0x2d07c0d1
  408f72:	add    al,0xe5
  408f74:	les    ebp,FWORD PTR [esi+0x21]
  408f77:	sub    DWORD PTR [edi],ebp
  408f79:	jnp    0x408f92
  408f7b:	pop    ds
  408f7c:	mov    DWORD PTR [ecx+0x5e],edx
  408f7f:	jno    0x408ff8
  408f81:	cmp    dl,BYTE PTR [eax+0x6dbeabc1]
  408f87:	pop    eax
  408f88:	cmp    BYTE PTR [eax+0x5e],0x64
  408f8c:	push   ecx
  408f8d:	sub    eax,edx
  408f8f:	xchg   edi,eax
  408f90:	pusha  
  408f91:	lahf   
  408f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f93:	retf   
  408f94:	mov    ebp,0xedfdcf2
  408f99:	jae    0x408f8b
  408f9b:	fcomp  DWORD PTR [ecx]
  408f9d:	imul   esp,DWORD PTR [esi-0x3d],0x5108d9f0
  408fa4:	jecxz  0x408fba
  408fa6:	cmp    DWORD PTR [edi-0x42],edx
  408fa9:	sbb    al,0x8d
  408fab:	sub    edi,0xfffffffe
  408fae:	push   edx
  408faf:	mov    bl,0xcf
  408fb1:	inc    ebx
  408fb2:	mov    bl,0x68
  408fb4:	xchg   esi,eax
  408fb5:	xchg   ebp,eax
  408fb6:	imul   ecx,DWORD PTR [ecx+0x5b],0x11
  408fba:	pop    edi
  408fbb:	into   
  408fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fbd:	pusha  
  408fbe:	mov    edi,0xb0c0bd8e
  408fc3:	(bad)  
  408fc4:	push   esp
  408fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fc6:	pop    ebp
  408fc7:	repz push ebp
  408fc9:	enter  0x5e3,0x79
  408fcd:	rcl    DWORD PTR [eax-0x41],cl
  408fd0:	and    eax,0xf8268096
  408fd5:	pop    ds
  408fd6:	adc    DWORD PTR [esi+eax*1-0x75],esi
  408fda:	repnz fsubr QWORD PTR [edi]
  408fdd:	mov    ebx,0x4252f346
  408fe2:	pusha  
  408fe3:	stc    
  408fe4:	cmp    eax,ebx
  408fe6:	stos   DWORD PTR es:[edi],eax
  408fe7:	nop
  408fe8:	out    0x1b,eax
  408fea:	ror    DWORD PTR [ebx],1
  408fec:	cmp    bl,dl
  408fee:	jo     0x409032
  408ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff1:	jl     0x408fb2
  408ff3:	mov    ds:0x852e247c,eax
  408ff8:	add    DWORD PTR [edi-0x419cd64e],esp
  408ffe:	(bad)  
  408fff:	int    0xf8
  409001:	xor    ebx,ecx
  409003:	cmc    
  409004:	push   es
  409005:	mov    ds:0x248d1245,al
  40900a:	adc    ecx,DWORD PTR [edi-0x22cd6bef]
  409010:	in     al,0x9e
  409012:	mov    eax,0x66b751a0
  409017:	repnz sbb BYTE PTR [ebx],dh
  40901a:	pop    ebp
  40901b:	cmc    
  40901c:	mov    DWORD PTR [edi],esp
  40901e:	int    0x6a
  409020:	inc    eax
  409021:	and    al,0x19
  409023:	les    ebp,FWORD PTR ds:0xee5b8c0
  409029:	inc    esi
  40902a:	ins    BYTE PTR es:[edi],dx
  40902b:	dec    esi
  40902c:	xchg   BYTE PTR [edi],al
  40902e:	and    eax,edi
  409030:	or     edx,edx
  409032:	(bad)  
  409033:	(bad)  [edx-0x991527a]
  409039:	mov    ?,WORD PTR [edi-0xf]
  40903c:	dec    eax
  40903d:	sub    edi,DWORD PTR [eax+0x50]
  409040:	rcr    BYTE PTR [ecx-0x68],1
  409043:	fcomp  DWORD PTR [edi-0x1a]
  409046:	mov    ds:0x3c4b5757,eax
  40904b:	xchg   edx,eax
  40904c:	and    eax,0x9528c8aa
  409051:	and    eax,0xb05b8247
  409056:	lock inc ecx
  409058:	stc    
  409059:	in     al,0xb6
  40905b:	lea    esp,[esp+eax*8]
  40905e:	inc    ebp
  40905f:	pcmpgtw mm5,QWORD PTR [ebx-0x1e9a9b14]
  409066:	xchg   ecx,eax
  409067:	xor    BYTE PTR [edi+0x13a817ed],ah
  40906d:	retf   0xa9c5
  409070:	xchg   esp,eax
  409071:	push   esp
  409072:	mov    dl,BYTE PTR fs:[esi-0x257239e8]
  409079:	pop    esp
  40907a:	xor    eax,0x20afbbc5
  40907f:	sub    eax,0x732fcca0
  409084:	mov    bh,0x5
  409086:	loopne 0x409056
  409088:	lock dec ecx
  40908a:	mov    dh,0x5c
  40908c:	dec    ecx
  40908e:	dec    edi
  40908f:	lfs    edx,FWORD PTR [edi]
  409092:	dec    ebp
  409093:	push   cs
  409094:	xlat   BYTE PTR ds:[ebx]
  409095:	loop   0x409079
  409097:	cmp    eax,0x2d88a430
  40909c:	mov    bh,0x1b
  40909e:	mov    al,ds:0x4f3f45f8
  4090a3:	mov    esp,0x9ecd4574
  4090a8:	or     eax,0xdf1b7e41
  4090ad:	aas    
  4090ae:	sbb    bl,dl
  4090b0:	call   0x98:0xffc7edae
  4090b7:	fwait
  4090b8:	pop    eax
  4090b9:	ds pop ebx
  4090bb:	pop    esp
  4090bc:	retf   
  4090bd:	sti    
  4090be:	and    al,0xd7
  4090c0:	jno    0x409071
  4090c2:	jae    0x409095
  4090c4:	jmp    0x7fbcdb30
  4090c9:	fs jns 0x40913e
  4090cc:	ds mov edi,0xc5bef715
  4090d2:	cmp    eax,0xf30e3c84
  4090d7:	mov    edi,0x8312b4d6
  4090dc:	pushf  
  4090dd:	stc    
  4090de:	or     al,0xaa
  4090e0:	xchg   DWORD PTR [ebp+eiz*4+0x3c],edi
  4090e4:	std    
  4090e5:	mov    dl,0xe0
  4090e7:	mov    eax,ds:0x6c4a7355
  4090ec:	xchg   ebx,eax
  4090ed:	popf   
  4090ee:	cld    
  4090ef:	dec    eax
  4090f0:	ins    BYTE PTR es:[edi],dx
  4090f1:	dec    esi
  4090f2:	xchg   esi,eax
  4090f3:	dec    eax
  4090f4:	and    eax,0x484dcbaa
  4090f9:	adc    eax,0xb8d59470
  4090fe:	fsubp  st(0),st
  409100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409101:	test   eax,0x3408a18b
  409106:	sub    ecx,DWORD PTR [ecx-0x2da84485]
  40910c:	cmc    
  40910d:	or     DWORD PTR [ebx+0x4c],eax
  409110:	or     edi,DWORD PTR [edx-0x51286a85]
  409116:	sbb    eax,DWORD PTR [ecx-0xdd9b65c]
  40911c:	mov    ss,esp
  40911e:	jmp    0x409180
  409120:	imul   ecx,DWORD PTR [edx-0x5c],0x76
  409124:	and    dh,al
  409126:	jnp    0x40918b
  409128:	jno    0x40914e
  40912a:	jae    0x409177
  40912c:	cld    
  40912d:	push   ebp
  40912e:	jg     0x4090de
  409130:	fisubr WORD PTR [edx-0x5d1588a8]
  409136:	mov    ch,0xc8
  409138:	jp     0x409138
  40913a:	inc    eax
  40913b:	jmp    DWORD PTR [esi]
  40913d:	repz or al,0x2a
  409140:	mov    eax,ds:0x4e3ae03a
  409145:	lods   eax,DWORD PTR ds:[esi]
  409146:	mov    al,ds:0x2a88b079
  40914b:	jnp    0x4090d7
  40914d:	ror    BYTE PTR [ebp-0x1e],cl
  409150:	in     eax,0xd0
  409152:	mov    ebx,0xa2497253
  409157:	cli    
  409158:	sahf   
  409159:	lea    ecx,[eax+0x4e24d20c]
  40915f:	push   0xa20061c2
  409164:	dec    edi
  409165:	add    dh,BYTE PTR [ebx+0x3a]
  409168:	and    eax,0x609086ba
  40916d:	inc    edx
  40916e:	push   ebx
  40916f:	jmp    0x4090fe
  409171:	int    0x1c
  409173:	cmp    ah,ah
  409175:	daa    
  409176:	test   BYTE PTR [ebx-0x602f37b7],0x4a
  40917d:	xchg   esp,eax
  40917e:	push   cs
  40917f:	jno    0x40914c
  409181:	int    0x73
  409183:	sub    bh,al
  409185:	mov    ds:0x87dd3d89,eax
  40918a:	adc    eax,0x27f913db
  40918f:	shr    BYTE PTR [ebp+0x4bceaaee],0x92
  409196:	xor    al,0x65
  409198:	hlt    
  409199:	mov    dl,0x66
  40919b:	dec    eax
  40919c:	cld    
  40919d:	js     0x40913b
  40919f:	std    
  4091a0:	fistp  WORD PTR [ecx-0x42]
  4091a3:	stc    
  4091a4:	dec    edx
  4091a5:	repnz imul edi,DWORD PTR [esi+0x46],0xb6610b6b
  4091ad:	daa    
  4091ae:	les    esi,FWORD PTR [eax-0x296a339a]
  4091b4:	mov    ah,0x98
  4091b6:	dec    ebx
  4091b7:	das    
  4091b8:	rol    BYTE PTR [ecx+0x78],1
  4091bb:	xchg   BYTE PTR [esi],al
  4091bd:	mov    DWORD PTR [ebp-0x42],edi
  4091c0:	sbb    DWORD PTR [edi-0x28],0xffffffbf
  4091c4:	dec    ecx
  4091c5:	cld    
  4091c6:	(bad)  
  4091c8:	xchg   ecx,eax
  4091c9:	inc    edx
  4091ca:	(bad)  
  4091cc:	ins    DWORD PTR es:[edi],dx
  4091cd:	mov    edx,0x86d4876e
  4091d2:	cmp    al,0xdd
  4091d4:	mov    WORD PTR [eax],fs
  4091d6:	test   DWORD PTR [ebx+0x50d0e4ea],eax
  4091dc:	inc    esp
  4091dd:	jmp    DWORD PTR [esi+ebx*2+0x73]
  4091e1:	or     edx,DWORD PTR [ebx-0x492c0d37]
  4091e7:	(bad)  
  4091e8:	cmp    ebp,DWORD PTR [ecx+ebp*8]
  4091eb:	cli    
  4091ec:	pusha  
  4091ed:	push   cs
  4091ee:	jae    0x409219
  4091f0:	pop    ss
  4091f1:	fst    QWORD PTR [edx]
  4091f3:	add    eax,0x207e52b9
  4091f8:	inc    ecx
  4091f9:	mov    ch,0xfd
  4091fb:	sub    dh,BYTE PTR [eax-0x6a]
  4091fe:	sub    al,0xb
  409200:	gs push ds
  409202:	aad    0x51
  409204:	push   ss
  409205:	sub    DWORD PTR [ecx-0x37],edx
  409208:	scas   al,BYTE PTR es:[edi]
  409209:	dec    ebx
  40920a:	daa    
  40920b:	sbb    esp,0x46
  40920e:	adc    DWORD PTR ds:0xb42095d,0xc9c45850
  409218:	cmp    al,0x3c
  40921a:	mov    esi,0x26fcda35
  40921f:	mov    ecx,ebx
  409221:	xchg   ebp,eax
  409222:	sti    
  409223:	test   dh,ah
  409225:	pop    ebp
  409226:	sub    ebx,DWORD PTR [edx+0x6]
  409229:	adc    DWORD PTR [ebp-0x2a],edx
  40922c:	test   BYTE PTR [ebx+esi*4+0x3223d169],ch
  409233:	cmc    
  409234:	xchg   edx,eax
  409235:	(bad)  
  409236:	repz sti 
  409238:	push   edi
  409239:	call   edi
  40923b:	dec    esi
  40923c:	dec    ebp
  40923d:	imul   edi,DWORD PTR [edi+0x49],0xffffffe9
  409241:	loopne 0x4092ae
  409243:	aam    0x86
  409245:	cs neg esp
  409248:	push   cs
  409249:	test   eax,0x1cf84bf5
  40924e:	adc    ecx,DWORD PTR [ebp-0x7d8945bd]
  409254:	sub    DWORD PTR [edx-0x20],0xfffffff5
  409258:	int3   
  409259:	or     edx,esi
  40925b:	pop    DWORD PTR [edx]
  40925d:	sub    ah,ch
  40925f:	sub    al,BYTE PTR [ebx-0x70e2638f]
  409265:	call   0x735ad178
  40926a:	nop
  40926b:	lods   eax,DWORD PTR ds:[esi]
  40926c:	mov    edx,0x85fd804e
  409271:	jns    0x4092be
  409273:	mov    cl,0x73
  409275:	sti    
  409276:	mov    ch,0xbe
  409278:	mov    dh,0x16
  40927a:	js     0x409214
  40927c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40927d:	xchg   DWORD PTR [ecx],esi
  40927f:	mov    dl,0x77
  409281:	test   al,0x5f
  409283:	ror    DWORD PTR ds:0xfee8342d,cl
  409289:	addr16 retf 
  40928b:	(bad)  
  40928c:	xchg   edi,eax
  40928d:	cmc    
  40928e:	inc    edx
  40928f:	add    ch,BYTE PTR [ebx]
  409291:	pop    ds
  409292:	mov    cl,0xde
  409294:	hlt    
  409295:	sub    eax,0xe5009500
  40929a:	pop    edi
  40929b:	jmp    0x2c65:0x61e865e7
  4092a2:	stc    
  4092a3:	into   
  4092a4:	sar    BYTE PTR [esi-0x6c63f552],cl
  4092aa:	out    dx,al
  4092ab:	data16 sbb BYTE PTR es:[eax+0x46],ah
  4092b0:	pushf  
  4092b1:	pop    esp
  4092b2:	dec    esp
  4092b3:	sbb    esi,0xffffffc9
  4092b6:	nop
  4092b7:	cmc    
  4092b8:	repz test al,0x16
  4092bb:	inc    ebx
  4092bc:	sar    DWORD PTR [edx+ebx*1],0x59
  4092c0:	aaa    
  4092c1:	idiv   BYTE PTR [edi-0x1c05e653]
  4092c7:	adc    eax,0x91f1a545
  4092cc:	xor    BYTE PTR [esi],bh
  4092ce:	mov    edx,0xacd15ed9
  4092d3:	in     eax,0x60
  4092d5:	cmp    al,0x1a
  4092d7:	sti    
  4092d8:	gs inc esi
  4092da:	ja     0x4092ed
  4092dc:	in     al,dx
  4092dd:	inc    esi
  4092de:	test   DWORD PTR [ecx-0x7b],edx
  4092e1:	adc    bl,BYTE PTR [eax-0x66837e1b]
  4092e7:	(bad)  
  4092e8:	mov    BYTE PTR [edi+0x2f],bh
  4092eb:	scas   eax,DWORD PTR es:[edi]
  4092ec:	addr16 hlt 
  4092ee:	ss sub dh,bh
  4092f1:	push   edx
  4092f2:	mov    esi,0xcaa9e526
  4092f7:	cmc    
  4092f8:	adc    al,0xf5
  4092fa:	mov    cl,BYTE PTR ds:0x328c903c
  409300:	popa   
  409301:	imul   ebp,DWORD PTR [esi+0x58],0x28cbb217
  409308:	lea    esi,[ebx+0x5e21d578]
  40930e:	pusha  
  40930f:	dec    edx
  409310:	imul   ebx,DWORD PTR [ebp-0x5248ac04],0x2523a60
  40931a:	xchg   ebx,eax
  40931b:	repnz cmp DWORD PTR [ebx-0x7e],edx
  40931f:	iret   
  409320:	(bad)  
  409321:	repnz sbb eax,0x7cd2944
  409327:	call   0x31a4b660
  40932c:	sub    eax,0x34f42628
  409331:	ret    
  409332:	outs   dx,DWORD PTR ds:[esi]
  409333:	addr16 fs gs cmp esp,esp
  409338:	push   ecx
  409339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40933a:	pushf  
  40933b:	push   cs
  40933c:	push   0xffffff80
  40933e:	adc    al,0x91
  409340:	adc    BYTE PTR [ebx-0xc],0xec
  409344:	jg     0x4092f1
  409346:	fiadd  DWORD PTR [edi-0x54256074]
  40934c:	ficom  DWORD PTR [edi-0x6b]
  40934f:	sti    
  409350:	sahf   
  409351:	xchg   esi,esp
  409353:	loopne 0x40930a
  409355:	push   ebp
  409356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409357:	cmc    
  409358:	test   al,0x80
  40935a:	and    ch,BYTE PTR [ebx+0x32]
  40935d:	or     DWORD PTR [ecx+0x77],edx
  409360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409361:	jle    0x4092f8
  409363:	jbe    0x4093c1
  409365:	sbb    ch,BYTE PTR [ebx+0x60]
  409368:	lds    esp,FWORD PTR [edx+0x316071b]
  40936e:	push   ss
  40936f:	sub    eax,0xa59320ef
  409374:	sub    dl,BYTE PTR [ebp-0x7202b96b]
  40937a:	xor    DWORD PTR [eax+0x3a441311],esp
  409380:	repnz inc eax
  409382:	fs push edx
  409384:	out    dx,al
  409385:	aam    0x8b
  409387:	mov    ah,0xc3
  409389:	sub    edi,DWORD PTR [ecx-0xdf82d56]
  40938f:	cmp    ebp,DWORD PTR [edx]
  409391:	aam    0xea
  409393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409394:	push   eax
  409395:	cld    
  409396:	mov    WORD PTR [eax+0x64081e5b],gs
  40939c:	ja     0x409378
  40939e:	dec    ecx
  40939f:	mov    eax,0xe1e7b0c0
  4093a4:	aas    
  4093a5:	dec    esi
  4093a6:	in     eax,dx
  4093a7:	bswap  ecx
  4093a9:	(bad)  
  4093aa:	mov    dh,0xe3
  4093ac:	push   ebx
  4093ad:	ficom  DWORD PTR [esi+0x6]
  4093b0:	test   BYTE PTR [eax+edi*4-0x2551b76b],cl
  4093b7:	stos   DWORD PTR es:[edi],eax
  4093b8:	pusha  
  4093b9:	shr    BYTE PTR [edi+0x5648ba03],cl
  4093bf:	test   DWORD PTR [eax+ecx*2],eax
  4093c2:	mov    dl,ah
  4093c4:	in     al,0xd9
  4093c6:	arpl   WORD PTR [ecx+0x2e],dx
  4093c9:	adc    edi,DWORD PTR [edi+0x3f2ff81b]
  4093cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d0:	push   edi
  4093d1:	lods   al,BYTE PTR ds:[esi]
  4093d2:	inc    esp
  4093d3:	mov    ch,dl
  4093d5:	out    dx,al
  4093d6:	inc    edi
  4093d7:	dec    edi
  4093d8:	daa    
  4093d9:	and    ax,0xd57a
  4093dd:	pop    esi
  4093de:	loopne 0x409431
  4093e0:	push   edx
  4093e1:	aam    0x4d
  4093e3:	popf   
  4093e4:	data16 mov fs,WORD PTR [eax+0x5a5ab4a4]
  4093eb:	push   eax
  4093ec:	xor    al,0x33
  4093ee:	mov    DWORD PTR [edx],0x6c1f8c13
  4093f4:	test   DWORD PTR [esi-0x44],edi
  4093f7:	pusha  
  4093f8:	push   edx
  4093f9:	mov    ds:0xbb43801e,eax
  4093fe:	cdq    
  4093ff:	out    dx,al
  409400:	mov    al,cs:0xc5fa14e
  409406:	push   ecx
  409408:	aad    0x7a
  40940a:	fist   WORD PTR [edi-0x76]
  40940d:	inc    ebx
  40940e:	xor    DWORD PTR [esp+ecx*4-0x1b006d30],esp
  409415:	push   edx
  409416:	(bad)  
  409417:	in     eax,0xa8
  409419:	les    eax,FWORD PTR [esi]
  40941b:	adc    bl,al
  40941d:	test   DWORD PTR [esi-0x283095d9],ebp
  409423:	mov    bl,0x26
  409425:	mov    esi,0x92b6bded
  40942a:	dec    ecx
  40942b:	inc    esp
  40942c:	inc    ecx
  40942d:	cwde   
  40942e:	lods   eax,DWORD PTR ds:[esi]
  40942f:	cmc    
  409430:	add    eax,0x15b03d22
  409435:	jp     0x40949f
  409437:	fwait
  409438:	pop    edx
  409439:	adc    ch,BYTE PTR [edx-0x5281560c]
  40943f:	mov    esp,0x42fd37e0
  409444:	pop    esp
  409445:	pop    esi
  409446:	fwait
  409447:	loop   0x409491
  409449:	and    ch,BYTE PTR [edi+eiz*2]
  40944c:	aaa    
  40944d:	lock add dl,BYTE PTR [ebx+0xa]
  409451:	shr    al,1
  409453:	shl    eax,0x1c
  409456:	int    0x6d
  409458:	retf   
  409459:	dec    esi
  40945a:	js     0x4094b4
  40945c:	stc    
  40945d:	fwait
  40945e:	test   al,0xa8
  409460:	enter  0x9e62,0xab
  409464:	stos   BYTE PTR es:[edi],al
  409465:	icebp  
  409466:	(bad)  
  409467:	dec    edi
  409468:	repz lock or esi,edi
  40946c:	in     al,0xff
  40946e:	out    dx,al
  40946f:	scas   al,BYTE PTR es:[edi]
  409470:	xor    esi,DWORD PTR [ebp-0x5c]
  409473:	icebp  
  409474:	jle    0x40944a
  409476:	mov    esi,0xbdae900e
  40947b:	enter  0xae1f,0xf
  40947f:	inc    esi
  409480:	mul    ecx
  409482:	jne    0x4094ee
  409484:	out    dx,al
  409485:	enter  0x27aa,0xfd
  409489:	les    ebx,FWORD PTR [esi+0x25cc1e83]
  40948f:	mov    BYTE PTR [esi+0x4a322f77],0x67
  409496:	or     eax,0x3b0a911a
  40949b:	xlat   BYTE PTR ds:[ebx]
  40949c:	push   edi
  40949d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949e:	aas    
  40949f:	cmp    DWORD PTR [edx+edx*8-0x68ded333],ebx
  4094a6:	or     al,0xe8
  4094a8:	jp     0x40946e
  4094aa:	push   ebx
  4094ab:	pop    ds
  4094ac:	mov    edi,0xaed9d1f1
  4094b1:	call   0xbb00792b
  4094b6:	(bad)  
  4094b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b8:	nop
  4094b9:	sub    cl,cl
  4094bb:	mov    dh,0xdb
  4094bd:	ror    DWORD PTR [esi+0x1e],0xf6
  4094c1:	jg     0x40952b
  4094c3:	dec    edx
  4094c4:	jbe    0x409449
  4094c6:	or     eax,0xa12a4911
  4094cb:	cmp    ch,ah
  4094cd:	xlat   BYTE PTR ds:[ebx]
  4094ce:	add    BYTE PTR [ebp+0x3f6651e],bl
  4094d4:	mov    edx,0xbcb81037
  4094d9:	xor    esi,DWORD PTR [ebx+ebx*8+0x32403755]
  4094e0:	jns    0x409482
  4094e2:	repnz push eax
  4094e4:	jecxz  0x409546
  4094e6:	sbb    edi,esp
  4094e8:	scas   eax,DWORD PTR es:[edi]
  4094e9:	sti    
  4094ea:	sub    ebx,DWORD PTR [eax+0xe246a4d]
  4094f0:	adc    eax,0x8126cbc8
  4094f5:	out    dx,eax
  4094f6:	and    eax,0xef802bc0
  4094fb:	(bad)  
  4094fc:	mov    ebx,0x8c7179c0
  409501:	repz push cs
  409503:	call   0x6fd9:0xa1352b53
  40950a:	std    
  40950b:	add    ebp,edi
  40950d:	and    DWORD PTR [edi],esp
  40950f:	cmp    eax,0xbf536c49
  409514:	jo     0x4094d0
  409516:	xchg   esp,eax
  409517:	ret    0xfb1
  40951a:	sub    edx,DWORD PTR [ecx]
  40951c:	jo     0x40953d
  40951e:	pop    ebx
  40951f:	in     al,dx
  409520:	(bad)  
  409521:	addr16 fwait
  409523:	dec    esp
  409524:	aam    0x3f
  409526:	pop    ss
  409527:	adc    esp,0xc40e1f58
  40952d:	push   es
  40952e:	daa    
  40952f:	dec    edi
  409530:	cmc    
  409531:	sbb    DWORD PTR ds:0x45be3e9f,edi
  409537:	fnsave [ecx]
  409539:	mov    al,0x2f
  40953b:	into   
  40953c:	ds (bad) 
  40953e:	cmp    BYTE PTR [edx],al
  409540:	and    cl,dh
  409542:	sub    eax,0x21c2902d
  409547:	cwde   
  409548:	into   
  409549:	xchg   edx,eax
  40954a:	jle    0x409532
  40954c:	loope  0x40953d
  40954e:	and    dh,BYTE PTR [ecx+0x9]
  409551:	push   ebx
  409552:	je     0x409533
  409554:	jns    0x409599
  409556:	mov    ah,0x1
  409558:	enter  0x1f33,0xc6
  40955c:	mov    eax,ds:0xb4533184
  409561:	sub    DWORD PTR [edi+ebx*4+0x6c62f107],0x73e32954
  40956c:	in     eax,0x63
  40956e:	jb     0x409534
  409570:	sahf   
  409571:	or     DWORD PTR [eax-0x41],0xba4661c6
  409578:	pop    edi
  409579:	sub    al,0x1
  40957b:	sbb    edx,DWORD PTR [edi+0x7cbc9f32]
  409581:	add    BYTE PTR [edi-0x1a],cl
  409584:	xor    eax,0x6929cf29
  409589:	adc    eax,0x3869a23f
  40958e:	(bad)  
  40958f:	or     eax,0x945e3e92
  409594:	mov    cl,0x41
  409596:	sub    DWORD PTR [esi+0x68],ebp
  409599:	shl    DWORD PTR [eax+0x6],0x6a
  40959d:	sub    DWORD PTR [edi+ebp*2-0x14],esp
  4095a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a2:	call   0xa905f6a7
  4095a7:	addr16 js 0x40952a
  4095aa:	fiadd  DWORD PTR [ebp-0x5a]
  4095ad:	aad    0xf
  4095af:	and    al,0xfd
  4095b1:	jl     0x4095bc
  4095b3:	arpl   WORD PTR [edx-0x1b61e0f9],si
  4095b9:	and    eax,0xa869626e
  4095be:	pop    ss
  4095bf:	sbb    DWORD PTR [esi+0x78],esp
  4095c2:	sbb    eax,0x58be7e3c
  4095c7:	loopne 0x4095a6
  4095c9:	call   0xc9db:0xfab6eae8
  4095d0:	mov    edx,0xa800198d
  4095d5:	inc    esi
  4095d6:	pop    edx
  4095d7:	sbb    ch,BYTE PTR [edi+0x64ce5145]
  4095dd:	jo     0x77417cfd
  4095e3:	jo     0x4095e3
  4095e5:	out    dx,eax
  4095e6:	stc    
  4095e7:	mov    al,dl
  4095e9:	mov    ?,WORD PTR [ecx+0x25]
  4095ec:	call   0xae43:0x8dcc0d04
  4095f3:	aad    0x2a
  4095f5:	xor    eax,DWORD PTR [ebx+0x5b]
  4095f8:	xchg   ecx,eax
  4095f9:	or     BYTE PTR [ebx-0x7e07311d],0x1a
  409600:	shl    DWORD PTR [esi+0x2f],0xd5
  409604:	stos   BYTE PTR es:[edi],al
  409605:	xor    BYTE PTR [eax+0x48f557e8],al
  40960b:	out    dx,al
  40960c:	add    DWORD PTR [ebp-0x4e7ce754],edi
  409612:	imul   esp,edx,0xbbc3ef0c
  409618:	int    0x9b
  40961a:	scas   eax,DWORD PTR es:[edi]
  40961b:	aas    
  40961c:	inc    edi
  40961d:	leave  
  40961e:	ja     0x409626
  409620:	mov    al,ds:0xbdbcea4c
  409625:	mov    ds:0x59c16581,al
  40962a:	mov    ch,0x1a
  40962c:	jmp    0x122d:0xf1fc5a5d
  409633:	in     eax,dx
  409634:	xchg   bl,ch
  409636:	pop    ebp
  409637:	jnp    0x409630
  409639:	push   es
  40963a:	add    DWORD PTR [esi-0x54119a16],ebx
  409640:	add    bl,BYTE PTR [ecx+0x65103d67]
  409646:	repz je 0x40963b
  409649:	outs   dx,DWORD PTR ds:[esi]
  40964a:	fst    QWORD PTR [eax+ebp*2-0x30]
  40964e:	mov    ds:0x799ee7d3,al
  409653:	dec    esp
  409654:	inc    edx
  409655:	(bad)  
  409657:	jle    0x4095e4
  409659:	and    esi,DWORD PTR ds:0x9013752f
  40965f:	fidivr WORD PTR [esi-0x3aaa321b]
  409665:	jnp    0x4095f3
  409667:	and    al,0x74
  409669:	inc    ecx
  40966a:	xor    al,0x7b
  40966c:	ja     0x40967c
  40966e:	rcl    DWORD PTR [esi],0x37
  409671:	xchg   BYTE PTR [eax-0x17d85fbe],ch
  409677:	mov    ah,0xf3
  409679:	sbb    al,0xb3
  40967b:	push   eax
  40967c:	lahf   
  40967d:	mov    ebp,0xde44cdd5
  409682:	iret   
  409683:	(bad)  
  409685:	retf   
  409686:	in     al,dx
  409687:	cmp    DWORD PTR ds:0x8fa4f4f5,ebx
  40968d:	jns    0x4096bf
  40968f:	jge    0x409635
  409691:	int3   
  409692:	out    dx,al
  409693:	into   
  409694:	pop    ebx
  409695:	dec    edx
  409696:	daa    
  409697:	xlat   BYTE PTR ds:[ebx]
  409698:	push   0x71905d5c
  40969d:	cmp    edi,DWORD PTR [ecx+0x691cac6c]
  4096a3:	inc    eax
  4096a4:	pop    ebx
  4096a5:	mov    edx,0xb14d2a53
  4096aa:	ret    0x63d0
  4096ad:	mov    al,ds:0xdff69680
  4096b2:	mov    esi,0xc319210f
  4096b7:	imul   BYTE PTR [ebx]
  4096b9:	mov    edx,DWORD PTR [edi-0x249c874d]
  4096bf:	and    eax,0x32364f1e
  4096c4:	clc    
  4096c5:	and    al,0x81
  4096c7:	ret    
  4096c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c9:	out    0xc2,al
  4096cb:	mov    edi,0x635209d8
  4096d0:	dec    esi
  4096d1:	ja     0x4096f8
  4096d3:	aad    0x30
  4096d5:	mov    ch,0x63
  4096d7:	outs   dx,DWORD PTR ds:[esi]
  4096d8:	out    dx,eax
  4096d9:	in     al,0x2f
  4096db:	dec    ecx
  4096dc:	jae    0x409683
  4096de:	lods   eax,DWORD PTR ds:[esi]
  4096df:	dec    ebp
  4096e0:	fisub  WORD PTR [eax-0x1b6a27f2]
  4096e6:	lea    edi,[esi]
  4096e8:	jg     0x409710
  4096ea:	inc    DWORD PTR [edx+0x7fe0c268]
  4096f0:	push   es
  4096f1:	or     DWORD PTR [edi+ebx*4],0x9
  4096f5:	(bad)  
  4096f6:	lods   al,BYTE PTR ds:[esi]
  4096f7:	and    BYTE PTR [ecx+0x24],dl
  4096fa:	fwait
  4096fb:	stos   BYTE PTR es:[edi],al
  4096fc:	push   es
  4096fd:	iret   
  4096fe:	pop    ss
  4096ff:	xor    eax,0xa627cc04
  409704:	mov    al,0x14
  409706:	dec    ebx
  409707:	mov    al,0x30
  409709:	sar    BYTE PTR [ecx-0x3651bde3],1
  40970f:	fcomip st,st(7)
  409711:	cmp    BYTE PTR [edx+0x1b],0x7e
  409715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409716:	aam    0xbd
  409718:	or     al,0x91
  40971a:	in     al,dx
  40971b:	pop    eax
  40971c:	sbb    eax,0xa0209bfd
  409721:	push   0x9
  409723:	jb     0x40976e
  409725:	dec    esp
  409726:	jl     0x409739
  409728:	jns    0x4096f5
  40972a:	dec    ebp
  40972b:	inc    ebp
  40972c:	stos   DWORD PTR es:[edi],eax
  40972d:	test   al,0x5
  40972f:	jno    0x4096c3
  409731:	sub    al,BYTE PTR [ecx+0x77ba3cdb]
  409737:	rcl    BYTE PTR [edx-0x4f1d19b1],cl
  40973d:	jnp    0x4097a9
  40973f:	lahf   
  409740:	add    esp,edx
  409742:	and    DWORD PTR [edi],ebp
  409744:	call   0xee2e0ba3
  409749:	pop    ebx
  40974a:	dec    ecx
  40974b:	rcr    BYTE PTR [ecx-0x55f49191],cl
  409751:	sub    BYTE PTR [edx-0x1f6f770],dl
  409757:	adc    edi,ebx
  409759:	pop    ebx
  40975a:	mov    esp,0xcbaa0b2f
  40975f:	lea    edx,[ebp-0x1718675b]
  409765:	push   ss
  409766:	das    
  409767:	icebp  
  409768:	pop    ss
  409769:	test   DWORD PTR [eax-0x7b],0x4ec2165e
  409770:	jg     0x4097a4
  409772:	or     al,0xc5
  409774:	lds    eax,FWORD PTR [esi-0x1]
  409777:	ss mov esi,0xfc35c7a2
  40977d:	mov    esp,0x9825f81a
  409782:	inc    ecx
  409783:	mov    ecx,0x8ee6b06c
  409788:	jge    0x409799
  40978a:	sbb    BYTE PTR [ecx-0x5b],dl
  40978d:	loop   0x4097e9
  40978f:	out    0xab,eax
  409791:	in     al,dx
  409792:	test   eax,0x8763f86c
  409797:	lods   eax,DWORD PTR ds:[esi]
  409798:	cmp    dl,BYTE PTR [edi-0x48dc203b]
  40979e:	stos   DWORD PTR es:[edi],eax
  40979f:	je     0x409750
  4097a1:	pop    ebx
  4097a2:	daa    
  4097a3:	cmc    
  4097a4:	jnp    0x4097a8
  4097a6:	jns    0x4097f2
  4097a8:	les    esp,FWORD PTR [edi+ecx*4+0x181a95ad]
  4097af:	mov    ebx,0x8605b44d
  4097b4:	adc    bl,bl
  4097b6:	out    0x1f,al
  4097b8:	adc    eax,0x999c621c
  4097bd:	xor    eax,0x1611aed0
  4097c2:	neg    BYTE PTR [esi-0x6847d662]
  4097c8:	shr    DWORD PTR [edi+edi*8-0x36],0x8
  4097cd:	dec    eax
  4097ce:	leave  
  4097cf:	and    al,0xf3
  4097d1:	or     al,0xb0
  4097d3:	xchg   edx,eax
  4097d4:	jo     0x4097e6
  4097d6:	jo     0x40982b
  4097d8:	inc    ebp
  4097d9:	aad    0x97
  4097db:	push   ecx
  4097dc:	inc    edi
  4097dd:	jle    0x409826
  4097df:	int3   
  4097e0:	imul   edx,DWORD PTR [edi-0x20],0x4854b9ee
  4097e7:	rol    DWORD PTR [ebx-0x4c057ca],cl
  4097ed:	pop    ds
  4097ee:	je     0x409866
  4097f0:	leave  
  4097f1:	es test eax,0x19804670
  4097f7:	cmp    eax,0x699c0846
  4097fc:	ja     0x409829
  4097fe:	push   cs
  4097ff:	pop    ecx
  409800:	out    0xd7,al
  409802:	test   eax,edx
  409804:	mov    ebx,0xeb5b1417
  409809:	mov    ch,ah
  40980b:	loope  0x4097d2
  40980d:	cmp    esi,ebp
  40980f:	sbb    bh,BYTE PTR [eax]
  409811:	in     eax,0x7a
  409813:	hlt    
  409814:	xchg   ecx,eax
  409815:	push   ebp
  409816:	scas   al,BYTE PTR es:[edi]
  409817:	int    0xb
  409819:	jae    0x40984e
  40981b:	repz mov ch,0xd6
  40981e:	sar    edx,1
  409820:	cmp    BYTE PTR [eax+ebx*1-0x5c],0xb8
  409825:	sbb    DWORD PTR [ebx-0x160fde2f],ebx
  40982b:	lods   eax,DWORD PTR ds:[esi]
  40982c:	cdq    
  40982d:	in     eax,0xb4
  40982f:	lahf   
  409830:	test   al,0x12
  409832:	addr16 mov al,0xd1
  409835:	(bad)  
  409837:	push   ss
  409838:	inc    esp
  409839:	sbb    al,0xa9
  40983b:	icebp  
  40983c:	mov    ds:0xd816af93,eax
  409841:	cmp    eax,0x5739622
  409846:	jecxz  0x409810
  409848:	dec    eax
  409849:	cdq    
  40984a:	arpl   WORD PTR [edi+0x348806aa],si
  409850:	adc    al,0x64
  409852:	push   eax
  409853:	fdivr  DWORD PTR [ebx]
  409855:	jecxz  0x4098c8
  409857:	cmp    al,0x7f
  409859:	dec    esi
  40985a:	in     al,0x3f
  40985c:	jecxz  0x409887
  40985e:	and    ebx,DWORD PTR fs:[ebx]
  409861:	dec    edx
  409862:	dec    esp
  409863:	in     al,0x36
  409865:	sahf   
  409866:	shr    BYTE PTR [esi-0x6f],cl
  409869:	loopne 0x40983d
  40986b:	mov    cl,dh
  40986d:	add    al,0xb7
  40986f:	sub    al,0xb6
  409871:	ins    BYTE PTR es:[edi],dx
  409872:	push   es
  409873:	inc    ecx
  409874:	cmc    
  409875:	mov    WORD PTR [ebp+ebp*2+0x59],gs
  409879:	mov    al,ds:0xe9e7d709
  40987e:	inc    ebp
  40987f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409880:	dec    esi
  409881:	jne    0x4098d9
  409883:	call   0x4492:0xb7a9d7d3
  40988a:	pop    ss
  40988b:	les    edi,FWORD PTR [ebx+eiz*2+0x68]
  40988f:	inc    ecx
  409890:	(bad)  
  409891:	aaa    
  409892:	icebp  
  409893:	popf   
  409894:	jnp    0x409884
  409896:	mov    edx,0xcd63bb68
  40989b:	adc    eax,0x999d38a9
  4098a0:	pop    edx
  4098a1:	test   DWORD PTR [edx-0x15],edx
  4098a4:	cwde   
  4098a5:	out    dx,eax
  4098a6:	out    dx,al
  4098a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a8:	out    dx,al
  4098a9:	loop   0x4098eb
  4098ab:	and    al,0x1d
  4098ad:	mov    al,ds:0x557e2ebc
  4098b2:	mov    bl,0x8b
  4098b4:	and    al,0xe
  4098b6:	mov    ecx,0x9b9864b8
  4098bb:	sub    eax,0x77041b2c
  4098c0:	jnp    0x4098f8
  4098c2:	push   ds
  4098c3:	cdq    
  4098c4:	dec    esp
  4098c5:	out    dx,eax
  4098c6:	in     eax,0xb7
  4098c8:	jmp    0x4098c7
  4098ca:	add    ecx,DWORD PTR [ecx+0x2571e4]
  4098d0:	adc    DWORD PTR [edx+0x73],0x36
  4098d4:	icebp  
  4098d5:	mov    WORD PTR [ebx-0x37],ss
  4098d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d9:	(bad)  
  4098da:	arpl   WORD PTR [edi-0xccb4e1c],sp
  4098e0:	push   0x6e
  4098e2:	loopne 0x40986a
  4098e4:	dec    edx
  4098e5:	scas   eax,DWORD PTR es:[edi]
  4098e6:	and    eax,0x9ae9155d
  4098eb:	retf   
  4098ec:	scas   al,BYTE PTR es:[edi]
  4098ed:	scas   al,BYTE PTR es:[edi]
  4098ee:	pop    es
  4098ef:	or     esi,ecx
  4098f1:	adc    eax,0xf0aec753
  4098f6:	out    dx,eax
  4098f7:	leave  
  4098f8:	pop    ebp
  4098f9:	and    eax,DWORD PTR [esi+edi*4-0x3f6d48db]
  409900:	or     BYTE PTR [eax],dl
  409902:	xchg   esi,eax
  409903:	xor    DWORD PTR [ebp-0x32],ebp
  409906:	dec    esi
  409907:	jmp    0x8452d1d5
  40990c:	inc    edi
  40990d:	or     eax,0x6603ebfa
  409912:	in     eax,dx
  409913:	mov    esi,0xe27332aa
  409918:	call   0x590c:0xdf5227b0
  40991f:	cmpxchg DWORD PTR [edx+0x360b8c2f],edi
  409926:	jbe    0x409999
  409928:	sbb    DWORD PTR [ebx],edx
  40992a:	pop    edx
  40992b:	jg     0x40999b
  40992d:	push   ecx
  40992e:	or     edx,edi
  409930:	cdq    
  409931:	imul   DWORD PTR [ecx+ebx*4+0x47]
  409935:	jno    0x4099a8
  409937:	mov    dh,0x44
  409939:	mov    BYTE PTR [eax-0x1b],0xd9
  40993d:	push   ecx
  40993e:	sub    eax,0xf8ee3876
  409943:	fistp  QWORD PTR [ebx]
  409945:	add    al,0xed
  409947:	push   cs
  409948:	loopne 0x409901
  40994a:	xchg   ebx,eax
  40994b:	int3   
  40994c:	inc    ecx
  40994d:	mov    es,ecx
  40994f:	push   es
  409950:	imul   ecx,esp,0xffffffa4
  409953:	push   es
  409954:	inc    ebp
  409955:	jmp    0x409916
  409957:	jo     0x409965
  409959:	xor    eax,0xdebf68a4
  40995e:	out    0x54,eax
  409960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409961:	and    eax,0x47b39bb5
  409966:	test   BYTE PTR [esi],bl
  409968:	jmp    0x4099b2
  40996a:	or     dl,BYTE PTR [edx]
  40996c:	sub    BYTE PTR [esi],ch
  40996e:	cmp    eax,0xadc51d62
  409973:	bound  eax,QWORD PTR fs:[edx]
  409976:	es scas al,BYTE PTR es:[edi]
  409978:	int    0x7
  40997a:	xlat   BYTE PTR ds:[ebx]
  40997b:	xor    esp,DWORD PTR [ecx+0x73]
  40997e:	xchg   ebx,eax
  40997f:	jo     0x409935
  409981:	jge    0x409944
  409983:	fbld   TBYTE PTR [edx]
  409985:	fild   DWORD PTR [ecx+0x64bb8f95]
  40998b:	imul   edi,DWORD PTR [ebx+esi*8+0x395b47d7],0xfad9853a
  409996:	and    al,0xac
  409998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409999:	inc    ebx
  40999a:	dec    esi
  40999b:	fwait
  40999c:	js     0x409996
  40999e:	aad    0x43
  4099a0:	shl    bh,0x38
  4099a3:	clc    
  4099a4:	jmp    FWORD PTR [bx+0x4541]
  4099a9:	js     0x409939
  4099ab:	push   esp
  4099ac:	popf   
  4099ad:	and    DWORD PTR [edx+0x65667917],0x91ff49f1
  4099b7:	arpl   WORD PTR [eax],bx
  4099b9:	pop    edi
  4099ba:	jo     0x409a24
  4099bc:	fdivr  DWORD PTR [esi-0x18]
  4099bf:	sub    edi,DWORD PTR [ebx+0x54be303d]
  4099c5:	xor    bh,BYTE PTR [ebp+0x7db28819]
  4099cb:	shl    DWORD PTR [edi],1
  4099cd:	nop
  4099ce:	jb     0x4099c3
  4099d0:	test   DWORD PTR [eax],edi
  4099d2:	pop    ebx
  4099d3:	addr16 (bad) 
  4099d5:	jle    0x40995b
  4099d7:	fucomp st(4)
  4099d9:	or     ah,dh
  4099db:	xchg   ebp,eax
  4099dc:	lock stos BYTE PTR es:[edi],al
  4099de:	push   esi
  4099df:	shr    ecx,cl
  4099e1:	pop    esp
  4099e2:	lods   al,BYTE PTR ds:[esi]
  4099e3:	test   al,0xef
  4099e5:	dec    ebx
  4099e6:	fld    QWORD PTR ds:0xc42d74bc
  4099ec:	aas    
  4099ed:	gs mov esi,0xa074ec40
  4099f3:	(bad)  
  4099f4:	xchg   ecx,eax
  4099f5:	and    esi,edi
  4099f7:	stos   BYTE PTR es:[edi],al
  4099f8:	mov    ebx,0x7316731d
  4099fd:	or     ah,ah
  4099ff:	add    bh,BYTE PTR [ecx+edx*2]
  409a02:	jo     0x409a7c
  409a04:	stos   BYTE PTR es:[edi],al
  409a05:	sti    
  409a06:	loopne 0x409a73
  409a08:	loope  0x4099b5
  409a0a:	add    eax,0x7f3c938e
  409a0f:	pop    edx
  409a10:	sbb    BYTE PTR [esi-0x38dff0d0],dh
  409a16:	int3   
  409a17:	int    0x44
  409a19:	mov    WORD PTR [ebp+0x23],ss
  409a1c:	adc    eax,0x14ed055b
  409a21:	sub    bh,0x73
  409a24:	xchg   DWORD PTR [edx-0x3bd47582],ecx
  409a2a:	mov    BYTE PTR [esi+0x7f],dh
  409a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2e:	(bad)  
  409a2f:	lock out dx,eax
  409a31:	cmp    BYTE PTR [ebx-0x7d],ah
  409a34:	jmp    0x8dd25604
  409a39:	jl     0x409a4c
  409a3b:	sub    eax,0xfd691be3
  409a40:	(bad)  
  409a41:	in     eax,0x45
  409a43:	jns    0x4099d1
  409a45:	jne    0x409a4e
  409a47:	pop    ebx
  409a48:	dec    eax
  409a49:	lea    ebx,[esi+0x1886e092]
  409a4f:	push   es
  409a50:	push   0xffffff9b
  409a52:	clc    
  409a53:	lock mov ebx,0xce3dc972
  409a59:	mov    dh,0x88
  409a5b:	test   eax,0x6f74d4f7
  409a60:	fwait
  409a61:	rcl    ecx,0x8e
  409a64:	and    eax,0x125cf223
  409a69:	sbb    DWORD PTR [eax-0xace5b85],esi
  409a6f:	popa   
  409a70:	push   edx
  409a71:	adc    eax,0x3f7b8c87
  409a76:	(bad)  
  409a77:	jle    0x409a3e
  409a79:	test   BYTE PTR [eax],0x90
  409a7c:	addr16 mov eax,0xde5d0f82
  409a82:	ret    
  409a83:	or     ecx,edi
  409a85:	cwde   
  409a86:	retf   
  409a87:	sbb    edx,DWORD PTR [edx+0x6]
  409a8a:	push   eax
  409a8b:	jl     0x409a19
  409a8d:	or     eax,0x9ab84d55
  409a92:	arpl   WORD PTR [esi-0x620f8ea8],cx
  409a98:	or     eax,0x2889c315
  409a9d:	mov    edx,0x3ab35a2e
  409aa2:	cmp    BYTE PTR [ebx],cl
  409aa4:	sbb    DWORD PTR [esi],ebp
  409aa6:	shl    ebx,1
  409aa8:	fisub  DWORD PTR [ebx+ebx*2]
  409aab:	ins    DWORD PTR es:[edi],dx
  409aac:	add    al,0x67
  409aae:	jbe    0x409a33
  409ab0:	inc    ebp
  409ab1:	lods   eax,DWORD PTR ds:[esi]
  409ab2:	pusha  
  409ab3:	scas   al,BYTE PTR es:[edi]
  409ab4:	push   esp
  409ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab6:	jl     0x409a76
  409ab8:	icebp  
  409ab9:	jg     0x409b03
  409abb:	out    dx,eax
  409abc:	dec    ebp
  409abd:	mov    bh,0xec
  409abf:	scas   eax,DWORD PTR es:[edi]
  409ac0:	sbb    al,0xcc
  409ac2:	js     0x409ab2
  409ac4:	sub    al,al
  409ac6:	mov    DWORD PTR [edi+0x50],edi
  409ac9:	mov    WORD PTR ds:0x85d5c76d,es
  409acf:	popa   
  409ad0:	fwait
  409ad1:	push   esp
  409ad2:	push   esp
  409ad3:	ss add al,0xa9
  409ad6:	lea    ecx,[edi*8+0x75552854]
  409add:	in     eax,dx
  409ade:	inc    edx
  409adf:	mov    ds:0x42319183,eax
  409ae4:	shl    DWORD PTR [ebx+0x1b],0x82
  409ae8:	adc    al,0xfa
  409aea:	lea    esp,[ebp-0x43cc9937]
  409af0:	add    bh,bl
  409af2:	push   edx
  409af3:	stos   BYTE PTR es:[edi],al
  409af4:	push   esi
  409af5:	js     0x409a8f
  409af7:	leave  
  409af8:	adc    al,0x1e
  409afa:	dec    ebp
  409afb:	sub    edx,0x25
  409afe:	imul   ecx,DWORD PTR [ebx+0x3478adfb],0x151cf50
  409b08:	jb     0x409af5
  409b0a:	shl    dh,cl
  409b0c:	and    eax,0x3a9903b1
  409b11:	mov    dl,0x1e
  409b13:	outs   dx,DWORD PTR ds:[esi]
  409b14:	ds call 0xb20c25ca
  409b1a:	out    0x3a,eax
  409b1c:	jbe    0x409ae9
  409b1e:	jl     0x409af1
  409b20:	mov    dl,0x57
  409b22:	jmp    0xdb38:0x3403459f
  409b29:	add    al,0x38
  409b2b:	add    BYTE PTR [ecx-0x27],dh
  409b2e:	pop    eax
  409b2f:	je     0x409ba6
  409b31:	push   eax
  409b32:	or     DWORD PTR [edx+0x6b],0x2
  409b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b37:	ja     0x409b93
  409b39:	sar    BYTE PTR [eax-0x7],1
  409b3c:	std    
  409b3d:	jg     0x409b4e
  409b3f:	ret    0xb59c
  409b42:	inc    eax
  409b43:	xchg   esp,eax
  409b44:	lods   eax,DWORD PTR ds:[esi]
  409b45:	xor    eax,0xc359d855
  409b4a:	call   0xe1f4:0x6281161b
  409b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b52:	mul    DWORD PTR [edx+eax*2-0x64a3b2d9]
  409b59:	lods   eax,DWORD PTR ds:[esi]
  409b5a:	cmp    al,0x17
  409b5c:	fst    DWORD PTR [ebp+0x79]
  409b5f:	sbb    BYTE PTR [ecx+eax*8],ch
  409b62:	and    dl,ah
  409b64:	and    DWORD PTR cs:[eiz*8-0x69af3ccf],0x2abcf789
  409b70:	jbe    0x409bb7
  409b72:	aas    
  409b73:	iret   
  409b74:	loope  0x409b51
  409b76:	dec    ebx
  409b77:	add    eax,0xb3dd96b9
  409b7c:	fwait
  409b7d:	adc    ebp,ecx
  409b7f:	xor    BYTE PTR [edi+0x3d4f186e],bh
  409b85:	test   bl,bl
  409b87:	addr16 pop edi
  409b89:	retf   0xaa08
  409b8c:	inc    edi
  409b8d:	idiv   ebp
  409b8f:	xchg   bl,ch
  409b91:	and    BYTE PTR [edx+0x3b1bc846],ah
  409b97:	push   edi
  409b98:	inc    eax
  409b99:	loop   0x409b78
  409b9b:	sub    BYTE PTR [edi-0x51aad326],0x18
  409ba2:	out    dx,eax
  409ba3:	out    dx,eax
  409ba4:	xchg   eax,ebp
  409ba6:	pop    ds
  409ba7:	xchg   esp,eax
  409ba8:	iret   
  409ba9:	retf   0x5763
  409bac:	mov    cl,0x1d
  409bae:	(bad)
  409bb5:	mov    bh,0x3c
  409bb7:	mov    dl,0x46
  409bb9:	dec    ecx
  409bba:	and    BYTE PTR [edi+0x5b1ae59c],bl
  409bc0:	cld    
  409bc1:	shl    BYTE PTR ds:0x2640d9cb,1
  409bc7:	mov    eax,ds:0xddba0a27
  409bcc:	jno    0x409c14
  409bce:	sti    
  409bcf:	ss ss int 0x8b
  409bd3:	mov    esi,0x38e85a8e
  409bd8:	cmp    BYTE PTR [ebp-0x14f4ffb2],bh
  409bde:	out    0x7e,eax
  409be0:	and    DWORD PTR [edi+0x2],edx
  409be3:	cmp    al,dl
  409be5:	add    al,0xa9
  409be7:	sub    al,0x71
  409be9:	sbb    cl,BYTE PTR [edi]
  409beb:	nop
  409bec:	push   ss
  409bed:	in     eax,dx
  409bee:	ins    DWORD PTR es:[edi],dx
  409bef:	push   edx
  409bf0:	les    esi,FWORD PTR [esi-0x80]
  409bf3:	mov    bl,0xce
  409bf5:	rcr    BYTE PTR [ebx-0x18],0x79
  409bf9:	dec    eax
  409bfa:	mov    bh,0x2c
  409bfc:	mov    ecx,0xa98ba297
  409c01:	push   edx
  409c02:	mov    bl,BYTE PTR [eax-0x191735b9]
  409c08:	in     al,dx
  409c09:	lods   eax,DWORD PTR ds:[esi]
  409c0a:	pop    ebp
  409c0b:	dec    edx
  409c0c:	push   ebx
  409c0d:	xchg   edx,eax
  409c0e:	inc    ebp
  409c0f:	sbb    DWORD PTR [edx],eax
  409c11:	and    BYTE PTR [eax+0x73a2bda3],0xbd
  409c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c19:	nop
  409c1a:	cmp    dl,dh
  409c1c:	mov    edi,0xcd5d00cf
  409c21:	sub    bh,0x61
  409c24:	sub    al,0x71
  409c26:	outs   dx,BYTE PTR ds:[esi]
  409c27:	or     ch,cl
  409c29:	adc    eax,0x16145fe1
  409c2e:	jge    0x409c8a
  409c30:	inc    esp
  409c31:	xchg   edx,eax
  409c32:	shr    DWORD PTR [eax-0x52],0x92
  409c36:	or     dh,BYTE PTR [esi+0x451496be]
  409c3c:	cdq    
  409c3d:	hlt    
  409c3e:	lahf   
  409c3f:	xchg   edi,eax
  409c40:	rcr    edx,cl
  409c42:	mov    BYTE PTR [ecx+0xc],bh
  409c45:	add    al,dl
  409c47:	sbb    DWORD PTR [ecx-0x46],eax
  409c4a:	call   0x8dfc2
  409c4f:	data16 icebp 
  409c51:	xchg   edi,eax
  409c52:	add    BYTE PTR [esi-0x72a9c8f8],ah
  409c58:	shr    DWORD PTR [ecx],cl
  409c5a:	popa   
  409c5b:	inc    esi
  409c5c:	adc    al,0x51
  409c5e:	addr16 leave 
  409c60:	fmul   QWORD PTR [ebp+0x6df799f4]
  409c66:	sub    al,bl
  409c68:	jge    0x409c07
  409c6a:	in     eax,dx
  409c6b:	adc    ebx,esi
  409c6d:	or     DWORD PTR [ebx],ebp
  409c6f:	add    al,0x64
  409c71:	fisttp DWORD PTR [ecx+0x7d]
  409c74:	stc    
  409c75:	xor    al,BYTE PTR [ebx+0x388dd6d2]
  409c7b:	shl    BYTE PTR [edx],cl
  409c7d:	push   ds
  409c7e:	into   
  409c7f:	push   esp
  409c80:	icebp  
  409c81:	inc    ecx
  409c82:	or     eax,0x6be77144
  409c87:	mov    dh,0x7b
  409c89:	clc    
  409c8a:	cld    
  409c8b:	sub    eax,0x571f51cd
  409c90:	ja     0x409c9e
  409c92:	mov    esi,0x70770674
  409c97:	iret   
  409c98:	jecxz  0x409cfc
  409c9a:	out    0xd,al
  409c9c:	push   ecx
  409c9d:	imul   ecx,DWORD PTR [ebp-0x45e18334],0xffffffc4
  409ca4:	mov    ebx,0x90f440dc
  409ca9:	or     ebp,0x39
  409cac:	jecxz  0x409d14
  409cae:	xor    BYTE PTR [ecx],al
  409cb0:	ret    0xdf9c
  409cb3:	xchg   edx,eax
  409cb4:	sbb    dl,BYTE PTR [edx-0x40]
  409cb7:	dec    esi
  409cb8:	jb     0x409cb3
  409cba:	xchg   ecx,eax
  409cbb:	(bad)  
  409cbc:	jp     0x409d2a
  409cbe:	int3   
  409cbf:	cwde   
  409cc0:	jle    0x409d19
  409cc2:	lea    esp,[edx]
  409cc4:	add    DWORD PTR [ebx-0x14b779f3],ebx
  409cca:	add    BYTE PTR [edx-0x2378076b],ch
  409cd0:	fild   QWORD PTR [esi]
  409cd2:	adc    dh,BYTE PTR [ecx-0x53]
  409cd5:	xor    edi,0xffffff99
  409cd8:	or     eax,0xd5ca6818
  409cdd:	mov    ah,0x8f
  409cdf:	popf   
  409ce0:	sbb    dh,bh
  409ce2:	mov    cl,0xf
  409ce4:	mov    ah,0xe7
  409ce6:	(bad)  
  409ce7:	inc    ebp
  409ce8:	mul    DWORD PTR [edi-0x59]
  409ceb:	leave  
  409cec:	scas   eax,DWORD PTR es:[edi]
  409ced:	jl     0x409c8a
  409cef:	mov    eax,0x3861adf5
  409cf4:	jp     0x409c9d
  409cf6:	add    DWORD PTR ds:0x645e71c2,ebx
  409cfc:	retf   0x7717
  409cff:	ds jmp 0x9ba24dca
  409d05:	or     DWORD PTR [edi-0x7],ebp
  409d08:	adc    ecx,esi
  409d0a:	shl    DWORD PTR fs:[eax+edi*2],1
  409d0e:	arpl   bx,si
  409d10:	jge    0x409d86
  409d12:	out    0x2e,al
  409d14:	test   DWORD PTR [eax-0x24b27e48],0xff3c25b4
  409d1e:	pop    ecx
  409d1f:	in     al,dx
  409d20:	cmp    al,0x7b
  409d22:	push   0xfc042fb6
  409d27:	stc    
  409d28:	aad    0x5a
  409d2a:	inc    ebx
  409d2b:	and    eax,0x7f1732d6
  409d30:	dec    ebp
  409d31:	popa   
  409d32:	pop    ebp
  409d33:	mov    DWORD PTR [ecx*2-0x2dd48721],edx
  409d3a:	ror    edi,0x16
  409d3d:	cmp    eax,DWORD PTR [edi-0x10]
  409d40:	aam    0x61
  409d42:	dec    ebp
  409d43:	jecxz  0x409d32
  409d45:	jb     0x409d7f
  409d47:	hlt    
  409d48:	inc    ebx
  409d49:	and    al,0x22
  409d4b:	repnz fwait
  409d4d:	jbe    0x409d13
  409d4f:	out    dx,al
  409d50:	sub    al,0xbd
  409d52:	push   esp
  409d53:	inc    eax
  409d54:	sub    DWORD PTR ds:0x272a4f1d,eax
  409d5a:	cmp    BYTE PTR [ebp+0x3ed577fe],bh
  409d60:	sub    ah,BYTE PTR [ebp-0x65]
  409d63:	or     dh,BYTE PTR [esi]
  409d65:	cwde   
  409d66:	jns    0x409d1f
  409d68:	xchg   edx,eax
  409d69:	sub    DWORD PTR [eax+0x683df1c3],edi
  409d6f:	test   al,0x3
  409d71:	test   al,0x91
  409d73:	xor    dh,dh
  409d75:	add    bl,BYTE PTR [edi]
  409d77:	inc    ebx
  409d78:	ins    DWORD PTR es:[edi],dx
  409d79:	ret    0x7b19
  409d7c:	jo     0x409dc5
  409d7e:	xchg   esi,eax
  409d7f:	fldl2t 
  409d81:	cmp    al,0x4e
  409d83:	push   ebx
  409d84:	sbb    ah,BYTE PTR [edx+0x5ae1221b]
  409d8a:	imul   ebx,DWORD PTR [esi+0x3e],0x42
  409d8e:	and    DWORD PTR [edx],eax
  409d90:	cmp    eax,0xbaca3db2
  409d95:	sbb    eax,0x3c167a63
  409d9a:	xchg   edi,eax
  409d9b:	pop    edi
  409d9c:	xchg   esi,eax
  409d9d:	jno    0x409dee
  409d9f:	out    dx,eax
  409da0:	mov    BYTE PTR es:[esi],ah
  409da3:	std    
  409da4:	cmp    DWORD PTR ds:0xf9aed3e6,esp
  409daa:	or     eax,0x9ce84012
  409daf:	neg    BYTE PTR [esi]
  409db1:	mov    esi,DWORD PTR [eax+0x283c1220]
  409db7:	inc    esp
  409db8:	xchg   esp,eax
  409db9:	jecxz  0x409e08
  409dbb:	inc    eax
  409dbc:	outs   dx,BYTE PTR ds:[esi]
  409dbd:	pop    ebx
  409dbe:	dec    esp
  409dbf:	stos   DWORD PTR es:[edi],eax
  409dc0:	mov    cl,0xa1
  409dc2:	add    eax,0x1086669c
  409dc7:	pop    es
  409dc8:	(bad)  
  409dc9:	mov    al,0xc8
  409dcb:	and    esp,edi
  409dcd:	test   eax,0xbda5960f
  409dd2:	lods   eax,DWORD PTR ds:[esi]
  409dd3:	jg     0x409df8
  409dd5:	retf   0x5e70
  409dd8:	mov    cx,0x56c5
  409ddc:	and    al,0x48
  409dde:	test   dl,ch
  409de0:	lahf   
  409de1:	cmp    al,bh
  409de3:	(bad)  
  409de4:	rcl    DWORD PTR [esi-0x4392129b],1
  409dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409deb:	jg     0x409e03
  409ded:	jmp    0x409e17
  409def:	lock sahf 
  409df1:	sbb    dl,dh
  409df3:	sub    BYTE PTR [edi-0xb],ch
  409df6:	sbb    eax,0x38945046
  409dfb:	arpl   bp,sp
  409dfd:	inc    esi
  409dfe:	sub    esi,eax
  409e00:	in     al,dx
  409e01:	mov    cl,0x6a
  409e03:	shl    DWORD PTR [ebx-0x57],0x67
  409e07:	imul   BYTE PTR ds:0x96fecc62
  409e0d:	pop    esi
  409e0e:	out    0xda,eax
  409e10:	adc    eax,0xeab131b1
  409e15:	ret    
  409e16:	jle    0x409e4f
  409e18:	call   0xdfa4:0xf914fb26
  409e1f:	and    cl,BYTE PTR [ecx-0x1799716e]
  409e25:	lock push bx
  409e28:	pop    ds
  409e29:	ficom  WORD PTR [ecx+0x7a3a5575]
  409e2f:	sub    al,0xfd
  409e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e32:	aaa    
  409e33:	jns    0x409e4f
  409e35:	inc    ecx
  409e36:	jp     0x409ddc
  409e38:	xchg   ebp,eax
  409e39:	arpl   WORD PTR [ecx],si
  409e3b:	popa   
  409e3c:	fimul  DWORD PTR ds:0xd73b7792
  409e42:	pop    esp
  409e43:	xchg   ebx,eax
  409e44:	js     0x409dcc
  409e46:	xchg   cl,bh
  409e48:	dec    esi
  409e49:	adc    ecx,DWORD PTR [edi]
  409e4b:	scas   al,BYTE PTR es:[edi]
  409e4c:	jp     0x409e4b
  409e4e:	xchg   ebp,eax
  409e4f:	lds    esi,FWORD PTR [ebx+0x28]
  409e52:	add    DWORD PTR [edx+0x3cd71361],0x4b
  409e59:	sub    ecx,DWORD PTR [ebx]
  409e5b:	mov    dl,0x6
  409e5d:	popa   
  409e5e:	cmp    al,BYTE PTR ds:0x9c0ba32c
  409e64:	mov    DWORD PTR [eax+0xab0014],esi
  409e6a:	rcr    BYTE PTR [ebx+0x3f],cl
  409e6d:	btc    DWORD PTR [edx],edi
  409e70:	pop    es
  409e71:	iret   
  409e72:	stc    
  409e73:	stos   DWORD PTR es:[edi],eax
  409e74:	std    
  409e75:	sbb    ecx,DWORD PTR [ecx]
  409e77:	pop    es
  409e78:	mov    al,cl
  409e7a:	adc    eax,DWORD PTR [ebp-0x3baecfdd]
  409e80:	rol    DWORD PTR [ebx+edi*2-0x1edceeb7],1
  409e87:	jnp    0x409e44
  409e89:	jmp    0xee90:0xa28fba43
  409e90:	je     0x409eb8
  409e92:	scas   eax,DWORD PTR es:[edi]
  409e93:	ss std 
  409e95:	push   DWORD PTR [ebp+0x48]
  409e98:	in     al,0xa2
  409e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9b:	bound  ebp,QWORD PTR [ebp-0x79651092]
  409ea1:	aaa    
  409ea2:	ins    DWORD PTR es:[edi],dx
  409ea3:	enter  0xe9f,0xf5
  409ea7:	ret    0x859e
  409eaa:	mov    ecx,0xe844ad6d
  409eaf:	lods   eax,DWORD PTR ds:[esi]
  409eb0:	sub    BYTE PTR [ebx-0x2d],bl
  409eb3:	adc    dl,BYTE PTR [esi-0x4ba6cb4c]
  409eb9:	outs   dx,DWORD PTR ds:[esi]
  409eba:	jo     0x409efb
  409ebc:	push   esp
  409ebd:	dec    ecx
  409ebe:	aaa    
  409ebf:	adc    DWORD PTR [eax],edi
  409ec1:	adc    ah,BYTE PTR [ebp+0x6c]
  409ec4:	enter  0x59ed,0xfb
  409ec8:	jb     0x409e91
  409eca:	mov    al,ds:0x2958f7c5
  409ecf:	jbe    0x409ebe
  409ed1:	daa    
  409ed2:	push   0x81f6bbe0
  409ed7:	(bad)  
  409ed8:	retf   
  409ed9:	and    bh,BYTE PTR [edx+0x29c83226]
  409edf:	mov    bl,0x83
  409ee1:	and    ecx,DWORD PTR [esi]
  409ee3:	int    0x62
  409ee5:	(bad)  
  409ee7:	push   eax
  409ee8:	fcmovu st,st(6)
  409eea:	sub    al,0x47
  409eec:	nop
  409eed:	pop    ecx
  409eee:	inc    edx
  409eef:	pop    ecx
  409ef0:	clc    
  409ef1:	mov    eax,0x9f5d14ae
  409ef6:	aam    0x11
  409ef8:	outs   dx,DWORD PTR ds:[esi]
  409ef9:	push   0x7b6ef5d5
  409efe:	and    al,BYTE PTR [edi+esi*4-0x3a]
  409f02:	pop    esi
  409f03:	addr16 pop edi
  409f05:	stc    
  409f06:	ins    DWORD PTR es:[edi],dx
  409f07:	inc    ebp
  409f08:	inc    esi
  409f09:	int    0xb0
  409f0b:	les    esi,FWORD PTR [esi-0x36]
  409f0e:	es pop edx
  409f10:	xlat   BYTE PTR ds:[ebx]
  409f11:	aas    
  409f12:	bound  ebp,QWORD PTR [edi+0x12]
  409f15:	xor    cl,BYTE PTR [eax]
  409f17:	sbb    DWORD PTR [ecx],eax
  409f19:	add    eax,0x6b425912
  409f1e:	jnp    0x409ebb
  409f20:	test   eax,0x2b3689fc
  409f25:	sub    bh,BYTE PTR [esp+ebp*2-0x61]
  409f29:	mov    eax,ds:0x5ee559c3
  409f2e:	xor    ebx,eax
  409f30:	pusha  
  409f31:	add    DWORD PTR [ebx],ebp
  409f33:	ja     0x409f0d
  409f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f36:	add    al,0x4c
  409f38:	fld    DWORD PTR ds:0xe2df658d
  409f3e:	in     eax,dx
  409f3f:	fidiv  WORD PTR [edi]
  409f41:	dec    eax
  409f42:	adc    DWORD PTR [ecx+0x3f],0x2ce004ad
  409f49:	in     eax,0x44
  409f4b:	xchg   esi,eax
  409f4c:	aam    0x7d
  409f4e:	adc    eax,0x26a39459
  409f53:	xor    BYTE PTR [ecx],al
  409f55:	pop    edx
  409f56:	adc    bl,bh
  409f58:	rcr    bp,0x95
  409f5c:	add    BYTE PTR [esi],bh
  409f5e:	fbstp  TBYTE PTR es:[edi+ebx*2]
  409f62:	fwait
  409f63:	scas   eax,DWORD PTR es:[edi]
  409f64:	sbb    BYTE PTR [eax],cl
  409f66:	sub    dl,0xab
  409f69:	dec    ecx
  409f6a:	fsubr  QWORD PTR [edx-0x50eaa1d0]
  409f70:	das    
  409f71:	mov    edx,0xc2b15629
  409f76:	ror    DWORD PTR [ebx-0x65],0x81
  409f7a:	push   es
  409f7b:	mov    esp,0x37bb33e1
  409f80:	jp     0x409fb9
  409f82:	xchg   edx,eax
  409f83:	sub    BYTE PTR [edi+0x1618c67b],al
  409f89:	bound  esi,QWORD PTR [ecx]
  409f8b:	jno    0x409fd1
  409f8d:	aaa    
  409f8e:	or     eax,0xbec5e816
  409f93:	sbb    BYTE PTR [ebx+0x15],bl
  409f96:	add    dl,BYTE PTR [edx-0x74]
  409f99:	div    BYTE PTR [ebx+0x1f]
  409f9c:	xor    cl,dh
  409f9e:	mov    eax,es:0x8f858a5a
  409fa4:	fsubr  QWORD PTR [edi]
  409fa6:	cmp    al,0x72
  409fa8:	out    dx,eax
  409fa9:	test   al,0xdf
  409fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fac:	pop    edi
  409fad:	scas   eax,DWORD PTR es:[edi]
  409fae:	mov    esi,ebp
  409fb0:	pop    ebp
  409fb1:	xor    ebx,DWORD PTR [ebx]
  409fb3:	loopne 0x409fbc
  409fb5:	sbb    edi,ecx
  409fb7:	and    eax,ebx
  409fb9:	mov    eax,0xbe674717
  409fbe:	int3   
  409fbf:	clc    
  409fc0:	mov    cl,0x1e
  409fc2:	ret    
  409fc3:	xlat   BYTE PTR ds:[ebx]
  409fc4:	stc    
  409fc5:	jmp    DWORD PTR [eax-0xa18935a]
  409fcb:	mov    esi,0x33e4e3b7
  409fd0:	mov    ebp,0x8febd018
  409fd5:	cmpxchg DWORD PTR [edx+0x35752d4c],eax
  409fdc:	push   es
  409fdd:	sub    ch,bl
  409fdf:	xor    edi,0xecc2d552
  409fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fe6:	adc    DWORD PTR [esi-0x5ed132a0],ebp
  409fec:	cmc    
  409fed:	push   ss
  409fee:	xlat   BYTE PTR ds:[ebx]
  409fef:	xor    dh,BYTE PTR [edx+0x36ef9eab]
  409ff5:	mov    ecx,DWORD PTR [eax-0x1a00639c]
  409ffb:	out    dx,al
  409ffc:	dec    edx
  409ffd:	pusha  
  409ffe:	adc    eax,0xffffffc4
  40a001:	enter  0xffe5,0x17
  40a005:	add    eax,0xf4a92ba6
  40a00a:	nop
  40a00b:	jmp    0xae99:0xe00c497a
  40a012:	jne    0x40a02e
  40a014:	pop    ecx
  40a015:	xlat   BYTE PTR ds:[ebx]
  40a016:	push   ebx
  40a017:	adc    ch,dl
  40a019:	push   esi
  40a01a:	lock mov ax,0xc172
  40a01f:	jmp    0xc3b6eb3b
  40a024:	std    
  40a025:	push   eax
  40a026:	pop    esi
  40a027:	je     0x40a0a3
  40a029:	and    DWORD PTR [ebp-0x2b32fec8],edi
  40a02f:	nop
  40a030:	fdiv   DWORD PTR [ecx+edi*4+0x22]
  40a034:	dec    esp
  40a035:	adc    al,0x84
  40a037:	push   ebx
  40a038:	loopne 0x40a031
  40a03a:	pop    edi
  40a03b:	and    ah,BYTE PTR [ebp+0x29]
  40a03e:	inc    eax
  40a03f:	mov    ebp,0xd3436ea9
  40a044:	or     DWORD PTR [edx+ebp*8],0x5b
  40a048:	call   0x1955:0x715df8b0
  40a04f:	or     al,BYTE PTR ds:0xce6bcecd
  40a055:	jmp    0x777892ac
  40a05a:	leave  
  40a05b:	arpl   WORD PTR [ebp-0x51bc64e],bp
  40a061:	xchg   ebx,eax
  40a062:	mov    DWORD PTR [esi-0x5aa9709f],edx
  40a068:	dec    ebx
  40a069:	stos   DWORD PTR es:[edi],eax
  40a06a:	pop    edx
  40a06b:	or     eax,0x32a84eae
  40a070:	push   cs
  40a071:	ds cmp al,0xc4
  40a074:	and    dl,BYTE PTR [eax+0x5a]
  40a077:	stos   BYTE PTR es:[edi],al
  40a078:	mov    ds:0xf5eb9407,al
  40a07d:	push   ecx
  40a07e:	push   ebp
  40a07f:	jp     0x40a041
  40a081:	jge    0x40a05b
  40a083:	jmp    0x963a:0xc842453a
  40a08a:	adc    edi,eax
  40a08c:	adc    cl,0xc0
  40a08f:	mov    dl,0x67
  40a091:	out    0x18,eax
  40a093:	and    BYTE PTR [ecx+0x31],al
  40a096:	mov    ?,WORD PTR [ebx+0x64045074]
  40a09c:	dec    ebx
  40a09d:	bound  edi,QWORD PTR [ecx+0x3ae5fe86]
  40a0a3:	mov    ebx,0x69f9df9f
  40a0a8:	hlt    
  40a0a9:	pop    es
  40a0aa:	fnstsw WORD PTR [esi+0x355d5bad]
  40a0b0:	mov    edi,0xab9d227d
  40a0b5:	clc    
  40a0b6:	iret   
  40a0b7:	neg    bl
  40a0b9:	enter  0xc51e,0x22
  40a0bd:	jbe    0x40a0bc
  40a0bf:	add    bl,cl
  40a0c1:	xor    al,al
  40a0c3:	jno    0x40a132
  40a0c5:	xchg   edi,eax
  40a0c6:	cmp    al,0xcb
  40a0c8:	add    DWORD PTR [ebp+0x1a60e5b0],esp
  40a0ce:	mov    ebx,0xdccfaada
  40a0d3:	pop    ecx
  40a0d4:	out    0xbf,al
  40a0d6:	in     al,0x72
  40a0d8:	mov    ?,eax
  40a0da:	jne    0x40a05f
  40a0dc:	sub    ch,al
  40a0de:	xor    DWORD PTR [esp+esi*2+0x74],ebp
  40a0e2:	inc    edx
  40a0e3:	scas   al,BYTE PTR es:[edi]
  40a0e4:	rcr    ebp,1
  40a0e6:	mov    al,0x30
  40a0e8:	xlat   BYTE PTR ds:[ebx]
  40a0e9:	jp     0x40a0c1
  40a0eb:	into   
  40a0ec:	xor    eax,0x50b6f787
  40a0f1:	popf   
  40a0f2:	mov    cl,0x2b
  40a0f4:	push   ebp
  40a0f5:	lock add ebp,DWORD PTR [ebx]
  40a0f8:	jo     0x40a165
  40a0fa:	ins    DWORD PTR es:[edi],dx
  40a0fb:	daa    
  40a0fc:	push   edx
  40a0fd:	mov    al,0x85
  40a0ff:	mov    esi,0x3aa5aa69
  40a104:	push   cs
  40a105:	retf   0xf3a1
  40a108:	aam    0xe6
  40a10a:	in     al,dx
  40a10b:	bound  esi,QWORD PTR cs:[edi-0xaf4a756]
  40a112:	xchg   esp,eax
  40a113:	adc    ebp,ecx
  40a115:	in     eax,0x34
  40a117:	lods   eax,DWORD PTR ds:[esi]
  40a118:	push   ss
  40a119:	dec    edi
  40a11a:	and    DWORD PTR [eax],0xf
  40a11d:	dec    ebp
  40a11e:	mov    edi,0x33340584
  40a123:	add    al,0x17
  40a125:	add    cl,BYTE PTR [esi-0x10be6703]
  40a12b:	(bad)  
  40a12c:	pop    ebx
  40a12d:	aaa    
  40a12e:	sbb    eax,DWORD PTR [edi+0x2ef69b9]
  40a134:	(bad)  
  40a135:	xor    al,0xa1
  40a137:	pop    ebx
  40a138:	retf   0xe9e0
  40a13b:	add    ebp,DWORD PTR [ebx+0x6d]
  40a13e:	rol    BYTE PTR [ecx],1
  40a140:	dec    eax
  40a141:	sub    al,0xb0
  40a143:	push   ds
  40a144:	xchg   esi,eax
  40a145:	popa   
  40a146:	push   0xffffffc0
  40a148:	pop    esi
  40a149:	inc    edx
  40a14a:	out    dx,al
  40a14b:	sar    DWORD PTR [ebx-0x43],1
  40a14e:	sub    DWORD PTR [ebp+0x60e3aee3],eax
  40a154:	sub    bl,BYTE PTR [edx-0x45]
  40a157:	mov    dh,0x68
  40a159:	push   es
  40a15a:	in     eax,dx
  40a15b:	(bad)  
  40a15c:	jnp    0x40a151
  40a15e:	fst    QWORD PTR [esi-0x7]
  40a161:	sub    DWORD PTR [ecx+0x1d],edi
  40a164:	fs mov esi,0x64eea49
  40a16a:	popf   
  40a16b:	setb   bh
  40a16e:	fs mov edi,0x12ca7a8a
  40a174:	dec    esi
  40a175:	mov    ah,BYTE PTR [ebx-0x50]
  40a178:	mov    edx,0x86a85121
  40a17d:	nop
  40a17e:	fdiv   QWORD PTR [eax]
  40a180:	cs xchg edx,eax
  40a182:	fsubr  DWORD PTR [eax-0x44c67be2]
  40a188:	aaa    
  40a189:	addr16 rol esi,cl
  40a18c:	es retf 0xf767
  40a190:	jno    0x40a1c7
  40a192:	xlat   BYTE PTR ds:[ebx]
  40a193:	fist   DWORD PTR [edi+0x0]
  40a196:	cld    
  40a197:	rol    DWORD PTR [edi-0x64b3bf3],1
  40a19d:	and    ah,BYTE PTR [edx]
  40a19f:	cmp    ch,ch
  40a1a1:	dec    eax
  40a1a2:	into   
  40a1a3:	mov    ebp,0xa742b699
  40a1a8:	jmp    0xda0f2700
  40a1ad:	(bad)  
  40a1ae:	rcl    DWORD PTR [ebx+esi*1-0x6c970451],cl
  40a1b5:	adc    eax,0x5ac7460f
  40a1ba:	lea    ecx,[eax+edx*4]
  40a1bd:	mov    al,ds:0xb8171c3c
  40a1c2:	mov    edx,0xb5df65b9
  40a1c7:	xor    esp,ebx
  40a1c9:	sub    al,0x48
  40a1cb:	xlat   BYTE PTR ds:[ebx]
  40a1cc:	arpl   WORD PTR [edx],ax
  40a1ce:	dec    eax
  40a1cf:	cmc    
  40a1d0:	jmp    0x40a211
  40a1d2:	test   BYTE PTR [ecx-0x7c952d3],bl
  40a1d8:	mov    al,0x48
  40a1da:	cmp    ax,0xe891
  40a1de:	xchg   esp,eax
  40a1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e0:	sbb    eax,0x91431a58
  40a1e5:	adc    dh,cl
  40a1e7:	dec    ebp
  40a1e8:	nop
  40a1e9:	dec    edx
  40a1ea:	mov    ebp,0xeaada4ad
  40a1ef:	xchg   ecx,eax
  40a1f0:	cwde   
  40a1f1:	cmp    BYTE PTR [ecx-0x4e0af2de],ch
  40a1f7:	popw   ds
  40a1f9:	xor    al,0x77
  40a1fb:	aad    0x3
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	addr16 retf 
  40a5ea:	or     eax,0x7c0627c6
  40a5ef:	jl     0x40a5f8
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	out    0xcf,eax
  40a5f6:	ds cld 
  40a5f8:	outs   dx,DWORD PTR ds:[esi]
  40a5f9:	dec    eax
  40a5fa:	mov    BYTE PTR [edi+0x71],dl
  40a5fd:	mov    fs,WORD PTR [ebp+ecx*8+0x3e]
  40a601:	mov    ah,0x3e
  40a603:	inc    esp
  40a604:	cmp    BYTE PTR [edx-0x34],0x30
  40a608:	ins    DWORD PTR es:[edi],dx
  40a609:	push   ecx
  40a60a:	shl    DWORD PTR [ebx-0x7c16cf97],cl
  40a610:	imul   ecx,DWORD PTR [ebx+0x44],0xc9d4be58
  40a617:	jmp    0x40a646
  40a619:	push   esi
  40a61a:	and    esi,esp
  40a61c:	shl    BYTE PTR ds:0x24c91b86,0xdf
  40a623:	in     al,0x14
  40a625:	fwait
  40a626:	loopne 0x40a5d8
  40a628:	adc    eax,0x39baaff
  40a62d:	gs pop esi
  40a62f:	mov    esi,?
  40a631:	sbb    DWORD PTR [eax],edi
  40a633:	loope  0x40a68f
  40a635:	mov    ah,0x5
  40a637:	test   DWORD PTR [edi-0x87f8f7d],edx
  40a63d:	repnz mov esp,DWORD PTR [ecx]
  40a640:	xor    al,0x36
  40a642:	fadd   QWORD PTR [ebx]
  40a644:	stc    
  40a645:	jmp    0x90c72808
  40a64a:	sbb    eax,0xc19b413e
  40a64f:	nop
  40a650:	in     al,0x3a
  40a652:	pop    edx
  40a653:	sub    dh,BYTE PTR [edx+edi*4]
  40a656:	es arpl cx,di
  40a659:	or     bl,BYTE PTR [esi]
  40a65b:	push   es
  40a65c:	rol    DWORD PTR [eax],0xd
  40a65f:	mov    ch,ch
  40a661:	and    BYTE PTR [edx-0x35],ch
  40a664:	dec    esp
  40a665:	fwait
  40a666:	test   BYTE PTR [esi],ch
  40a668:	xor    DWORD PTR [esi+0x5e45f9f6],eax
  40a66e:	jecxz  0x40a69d
  40a670:	ins    DWORD PTR es:[edi],dx
  40a671:	pusha  
  40a672:	mov    ch,0x9e
  40a674:	inc    ebx
  40a675:	cmp    eax,eax
  40a677:	add    si,WORD PTR [esi+0x134f1038]
  40a67e:	add    esp,0x7f
  40a681:	mov    ah,0xea
  40a683:	(bad)  
  40a684:	jp     0x40a652
  40a686:	fdivr  QWORD PTR [edx-0x3e9db74f]
  40a68c:	test   BYTE PTR [esi+0x44],0xcd
  40a690:	push   ebp
  40a691:	add    DWORD PTR [ebx],ebx
  40a693:	rol    dl,1
  40a695:	or     DWORD PTR [esi],ebx
  40a697:	push   ebp
  40a698:	leave  
  40a699:	rol    DWORD PTR [eax-0x56aa213],1
  40a69f:	out    dx,eax
  40a6a0:	out    dx,eax
  40a6a1:	js     0x40a64e
  40a6a3:	stc    
  40a6a4:	and    ebx,DWORD PTR [edx-0x4c159753]
  40a6aa:	cwde   
  40a6ab:	scas   eax,DWORD PTR es:[edi]
  40a6ac:	popa   
  40a6ad:	mov    ds:0x36f1b644,eax
  40a6b2:	cwde   
  40a6b3:	jge    0x40a66d
  40a6b5:	fadd   QWORD PTR [eax]
  40a6b7:	daa    
  40a6b8:	addr16 aaa 
  40a6ba:	mov    ebx,0x685c42e1
  40a6bf:	lods   eax,DWORD PTR ds:[esi]
  40a6c0:	(bad)  
  40a6c1:	sbb    eax,0x1932bcdb
  40a6c6:	cmp    al,BYTE PTR [edi+ecx*1]
  40a6c9:	mov    edi,0xb57fc8f2
  40a6ce:	sahf   
  40a6cf:	js     0x40a66c
  40a6d1:	dec    ecx
  40a6d2:	fld    TBYTE PTR [esi+ecx*2]
  40a6d5:	retf   0xe1c0
  40a6d8:	lock pop esp
  40a6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6db:	jecxz  0x40a70b
  40a6dd:	sub    al,0xb3
  40a6df:	js     0x40a698
  40a6e1:	inc    eax
  40a6e2:	cmp    eax,0x9a58b7ae
  40a6e7:	in     eax,0xda
  40a6e9:	inc    esi
  40a6ea:	push   edi
  40a6eb:	inc    esp
  40a6ec:	mov    ds:0xf094f30a,al
  40a6f1:	sbb    al,0x11
  40a6f3:	push   0x8571ef64
  40a6f8:	das    
  40a6f9:	pushf  
  40a6fa:	je     0x40a72e
  40a6fc:	repz cmp BYTE PTR [ebx],bl
  40a6ff:	xor    BYTE PTR [ebx+0x6],0x33
  40a703:	or     DWORD PTR [edi+0x5032a16],eax
  40a709:	call   0xaae6:0xb6e089f4
  40a710:	adc    DWORD PTR [esi+0x40],0x51ced298
  40a717:	icebp  
  40a718:	jno    0x40a790
  40a71a:	outs   dx,DWORD PTR ds:[esi]
  40a71b:	mov    DWORD PTR [ecx+0x1a2fb5cf],ebp
  40a721:	or     al,0x14
  40a723:	loopne 0x40a6ca
  40a725:	xor    ah,al
  40a727:	mov    al,BYTE PTR [ebp+0x16186525]
  40a72d:	das    
  40a72e:	bndldx (bad),[di-0x3b0f]
  40a734:	push   0x0
  40a736:	jmp    eax
  40a738:	push   ecx
  40a739:	or     al,0xfd
  40a73b:	cmc    
  40a73c:	(bad)  
  40a73d:	ins    DWORD PTR es:[edi],dx
  40a73e:	xlat   BYTE PTR ds:[ebx]
  40a73f:	push   esi
  40a740:	add    bx,bp
  40a743:	je     0x40a71d
  40a745:	pusha  
  40a746:	mov    bl,0xe3
  40a748:	outs   dx,BYTE PTR ds:[esi]
  40a749:	addr16 or eax,0xe909d704
  40a74f:	imul   eax,DWORD PTR [eax-0xc],0x5f05419f
  40a756:	and    al,0x64
  40a758:	pop    esi
  40a759:	push   ebp
  40a75a:	pop    ebx
  40a75b:	mov    bh,0xea
  40a75d:	outs   dx,DWORD PTR ds:[esi]
  40a75e:	xchg   esp,eax
  40a75f:	dec    ebp
  40a760:	rol    bl,0x89
  40a763:	mov    eax,ds:0xf6f7e007
  40a768:	call   0x9a6ee4b9
  40a76d:	shr    BYTE PTR [edi+0x4ecb6c8d],1
  40a773:	pop    edi
  40a774:	cmc    
  40a775:	gs ins BYTE PTR es:[edi],dx
  40a777:	(bad)  
  40a779:	xchg   ecx,eax
  40a77a:	scas   al,BYTE PTR es:[edi]
  40a77b:	(bad)  
  40a77c:	das    
  40a77d:	mov    ah,dl
  40a77f:	out    dx,al
  40a780:	jecxz  0x40a742
  40a782:	scas   al,BYTE PTR es:[di]
  40a784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a785:	fstp   QWORD PTR [edi-0x45280d0d]
  40a78b:	jmp    0x8f39:0xb36a
  40a791:	jmp    0x40a787
  40a793:	stc    
  40a794:	jmp    0x40a77d
  40a796:	dec    edx
  40a797:	dec    eax
  40a798:	add    BYTE PTR [ecx+0x2046b4c3],dl
  40a79e:	mov    edi,esp
  40a7a0:	fwait
  40a7a1:	inc    edi
  40a7a2:	jp     0x40a822
  40a7a4:	std    
  40a7a5:	dec    edx
  40a7a6:	lahf   
  40a7a7:	scas   al,BYTE PTR es:[edi]
  40a7a8:	test   al,0xae
  40a7aa:	mov    bl,0x78
  40a7ac:	mov    ds:0xe967f2d0,al
  40a7b1:	div    DWORD PTR [edi-0x63e93d5a]
  40a7b7:	repz add eax,0x62b0c3a2
  40a7bd:	or     eax,0xe688ce7b
  40a7c2:	or     al,0x74
  40a7c4:	xor    ecx,DWORD PTR [ecx-0x1c]
  40a7c7:	mov    cl,0x81
  40a7c9:	cs inc esp
  40a7cb:	mov    ebx,cs
  40a7cd:	in     eax,dx
  40a7ce:	out    dx,al
  40a7cf:	jle    0x40a7d0
  40a7d1:	cwde   
  40a7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d3:	push   0xffffffee
  40a7d5:	inc    edx
  40a7d6:	sbb    cl,BYTE PTR [edi+0x1b]
  40a7d9:	int3   
  40a7da:	or     edi,DWORD PTR [esi]
  40a7dc:	or     ebp,DWORD PTR [ecx+0x3ea3a2a9]
  40a7e2:	(bad)  [edi+0x40afcd7d]
  40a7e8:	xchg   edi,eax
  40a7e9:	aas    
  40a7ea:	push   ebp
  40a7eb:	push   ds
  40a7ec:	xor    eax,0x1869991c
  40a7f1:	(bad)  
  40a7f2:	les    ebx,FWORD PTR ds:0xeabc0f47
  40a7f8:	cmp    DWORD PTR [esi+eax*8-0x48],edx
  40a7fc:	inc    esp
  40a7fd:	not    esi
  40a7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a800:	pop    es
  40a801:	pop    ebx
  40a802:	in     eax,dx
  40a803:	popa   
  40a804:	pusha  
  40a805:	aaa    
  40a806:	bound  eax,QWORD PTR [bx+si-0xb]
  40a80a:	hlt    
  40a80b:	xor    eax,0xfa241edf
  40a810:	dec    ebp
  40a811:	xor    eax,DWORD PTR [eax+eiz*1+0x4ca844d5]
  40a818:	daa    
  40a819:	fsubr  QWORD PTR [eax+eax*1+0x16]
  40a81d:	jb     0x40a802
  40a81f:	xor    bh,ch
  40a821:	or     dl,ah
  40a823:	mov    bl,0x82
  40a825:	fadd   DWORD PTR [ebp+0x28]
  40a828:	jmp    0x4419:0x7aa9b87b
  40a82f:	test   al,0x51
  40a831:	and    edi,DWORD PTR [esi-0x7d]
  40a834:	int    0x2c
  40a836:	push   0x33d8844b
  40a83b:	rcl    DWORD PTR [ecx],1
  40a83d:	scas   al,BYTE PTR es:[edi]
  40a83e:	xchg   edx,eax
  40a83f:	cdq    
  40a840:	mov    eax,ds:0x7cacd603
  40a845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a846:	(bad)  
  40a848:	cmp    dh,bh
  40a84a:	push   esi
  40a84b:	int3   
  40a84c:	mov    ds:0x9b1f710d,al
  40a851:	loop   0x40a858
  40a853:	pushf  
  40a854:	jl     0x40a8d5
  40a856:	and    al,BYTE PTR [eax+eax*2+0x5260b782]
  40a85d:	call   0x666e:0x46701ab6
  40a864:	(bad)  
  40a865:	retf   0xac4a
  40a868:	xchg   edi,eax
  40a869:	jo     0x40a80e
  40a86b:	jno    0x40a861
  40a86d:	and    ebx,DWORD PTR [esi-0x62]
  40a870:	cmp    eax,0x159ea33f
  40a875:	mov    al,0x66
  40a877:	mov    eax,ds:0x273a4c58
  40a87c:	pop    esi
  40a87d:	jmp    0xf20d:0xcd4b5c35
  40a884:	adc    eax,0xeecaa7ee
  40a889:	scas   al,BYTE PTR es:[edi]
  40a88a:	mov    ebx,0x5318fe66
  40a88f:	xchg   ecx,eax
  40a890:	jp     0x40a8b0
  40a892:	mov    eax,ds:0x1b9555fc
  40a897:	test   BYTE PTR [ebp-0x398d989],dl
  40a89d:	push   cs
  40a89e:	fldpi  
  40a8a0:	jmp    0xcc2:0x7392c262
  40a8a7:	stos   BYTE PTR es:[edi],al
  40a8a8:	retf   
  40a8a9:	or     eax,0x682b3e62
  40a8ae:	fsubr  DWORD PTR cs:0xd4ac4a35
  40a8b5:	pushf  
  40a8b6:	dec    eax
  40a8b7:	xlat   BYTE PTR ds:[ebx]
  40a8b8:	mov    edx,0x1b32e91c
  40a8bd:	inc    DWORD PTR [eax]
  40a8bf:	cmp    BYTE PTR [esi+0x6e2bf36b],dh
  40a8c5:	std    
  40a8c6:	cli    
  40a8c7:	add    BYTE PTR [ebp+0x37],0x4
  40a8cb:	test   eax,0x7b5adc75
  40a8d0:	adc    BYTE PTR [ecx],al
  40a8d2:	(bad)  
  40a8d3:	jmp    0x40a8d1
  40a8d5:	(bad)  
  40a8d6:	aaa    
  40a8d7:	rol    BYTE PTR [esi-0x5079ca53],1
  40a8dd:	and    edi,DWORD PTR [ebx-0x36f066d5]
  40a8e3:	cmc    
  40a8e4:	addr16 loopne 0x40a8d1
  40a8e7:	arpl   WORD PTR [eax-0x5b],bx
  40a8ea:	adc    eax,0xd5bfa7a5
  40a8ef:	fiadd  WORD PTR [ebp+0x7dae8c7a]
  40a8f5:	cli    
  40a8f6:	pop    ss
  40a8f7:	sbb    ebp,esi
  40a8f9:	add    DWORD PTR [ecx],ebx
  40a8fb:	mov    ebx,0x6726c915
  40a900:	leave  
  40a901:	das    
  40a902:	in     eax,0xbd
  40a904:	fcomp  DWORD PTR [edx+0xc]
  40a907:	pop    ds
  40a908:	fisub  DWORD PTR [edi+0x7f2dc360]
  40a90e:	ds mov bh,0x36
  40a911:	fst    QWORD PTR [eax+eax*8]
  40a914:	jne    0x40a945
  40a916:	int3   
  40a917:	loope  0x40a89e
  40a919:	in     al,dx
  40a91a:	mov    ss,WORD PTR [esi]
  40a91c:	mov    dl,BYTE PTR [ecx]
  40a91e:	test   BYTE PTR [edx+eax*1],0x56
  40a922:	push   edx
  40a923:	or     eax,0x58fbfed0
  40a928:	xor    BYTE PTR [edi-0x3b],ch
  40a92b:	int    0xdc
  40a92d:	ins    BYTE PTR es:[edi],dx
  40a92e:	pop    esi
  40a92f:	int3   
  40a930:	out    dx,eax
  40a931:	mov    bh,0xa7
  40a933:	xor    ah,BYTE PTR [edi+edx*4]
  40a936:	gs push esi
  40a938:	push   ebp
  40a939:	dec    esi
  40a93a:	sbb    edi,DWORD PTR [edi+0x1]
  40a93d:	aad    0x8e
  40a93f:	pop    ebp
  40a940:	jecxz  0x40a914
  40a942:	mov    bh,0xde
  40a944:	cmp    DWORD PTR [edx+0x2fc4035a],0x9b9254ff
  40a94e:	and    BYTE PTR [ecx+eax*4+0x3a5d0ecb],dh
  40a955:	mov    dl,0xe
  40a957:	cmp    bh,BYTE PTR [edx+0x344b8a41]
  40a95d:	shl    ch,cl
  40a95f:	sbb    edx,DWORD PTR [ebp-0x2]
  40a962:	mov    es,WORD PTR [esi+0x12]
  40a965:	outs   dx,BYTE PTR ds:[esi]
  40a966:	inc    esp
  40a967:	pusha  
  40a968:	and    al,0x39
  40a96a:	mov    esp,0x9fdc7459
  40a96f:	add    dh,dh
  40a971:	pop    esi
  40a972:	dec    eax
  40a973:	jno    0x40a9bd
  40a975:	nop
  40a976:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a978:	dec    edi
  40a979:	xchg   BYTE PTR [edi],bh
  40a97b:	je     0x40a906
  40a97d:	mov    bh,0x98
  40a97f:	jne    0x40a930
  40a981:	inc    eax
  40a982:	mov    cl,0xb7
  40a984:	in     eax,0x19
  40a986:	cmp    BYTE PTR [eax-0x32],0xaf
  40a98a:	inc    ecx
  40a98b:	sub    al,0x59
  40a98d:	or     BYTE PTR [ebp+ebp*2+0x36],al
  40a991:	lea    edx,[ecx]
  40a993:	sbb    al,0x91
  40a995:	cdq    
  40a996:	xor    eax,0x7da85177
  40a99b:	ins    BYTE PTR es:[edi],dx
  40a99c:	add    bl,cl
  40a99e:	pop    eax
  40a99f:	aad    0x6f
  40a9a1:	dec    ecx
  40a9a2:	arpl   WORD PTR [ebp+0x7131585f],di
  40a9a8:	sbb    eax,0x63b0ff07
  40a9ad:	sub    bh,BYTE PTR [edx+edx*1+0x5d]
  40a9b1:	sahf   
  40a9b2:	daa    
  40a9b3:	fstp   TBYTE PTR [ebx]
  40a9b5:	mov    dh,0xe3
  40a9b7:	dec    ebx
  40a9b8:	and    DWORD PTR [edx-0x67af33],esi
  40a9be:	push   ds
  40a9bf:	dec    edi
  40a9c0:	je     0x40a979
  40a9c2:	or     ch,dh
  40a9c4:	std    
  40a9c5:	popf   
  40a9c6:	sub    al,0xfc
  40a9c8:	push   0xba99eb9c
  40a9cd:	cwde   
  40a9ce:	jle    0x40a9e4
  40a9d0:	cmp    DWORD PTR [ebx-0x5],edi
  40a9d3:	lock pop ecx
  40a9d5:	loopne 0x40a9c3
  40a9d7:	xor    ebp,DWORD PTR [ebp+0x62a886dd]
  40a9dd:	pop    es
  40a9de:	mov    esi,0xe2a12e3f
  40a9e3:	xchg   esp,eax
  40a9e4:	pop    esp
  40a9e5:	and    dl,BYTE PTR [ebp-0x23]
  40a9e8:	inc    ebx
  40a9e9:	ret    0x2cb9
  40a9ec:	cld    
  40a9ed:	dec    eax
  40a9ee:	adc    edi,DWORD PTR [ecx+0x2f1b9cb6]
  40a9f4:	ins    BYTE PTR es:[edi],dx
  40a9f5:	and    eax,0xb0e65c01
  40a9fa:	(bad)  
  40a9fb:	adc    al,0x4a
  40a9fd:	ja     0x40aa21
  40a9ff:	cmp    eax,0xee4a2ee3
  40aa04:	pop    ebp
  40aa05:	pop    ecx
  40aa06:	ffree  st(7)
  40aa08:	jno    0x40aa48
  40aa0a:	pusha  
  40aa0b:	(bad)  
  40aa0c:	sub    eax,0x6db1f530
  40aa11:	sub    al,0x2f
  40aa13:	sbb    DWORD PTR [edx],ecx
  40aa15:	jmp    0xccb4b228
  40aa1a:	cli    
  40aa1b:	jnp    0x40a9f5
  40aa1d:	pop    esi
  40aa1e:	or     al,0xe5
  40aa20:	or     BYTE PTR [esi+0x1],cl
  40aa23:	mov    esp,0x1e50e29c
  40aa28:	int    0x41
  40aa2a:	fcomp  DWORD PTR [esi+0x35]
  40aa2d:	shl    BYTE PTR [ecx-0x74],1
  40aa30:	dec    edi
  40aa31:	loop   0x40a9d1
  40aa33:	jbe    0x40aa5b
  40aa35:	push   es
  40aa36:	sahf   
  40aa37:	shr    BYTE PTR [edi+0x3a],0x37
  40aa3b:	push   ebx
  40aa3c:	sub    cl,0xd
  40aa3f:	and    BYTE PTR [ecx-0x20],al
  40aa42:	push   edx
  40aa43:	popa   
  40aa44:	(bad)  
  40aa45:	cs nop
  40aa47:	push   edi
  40aa48:	adc    ecx,edi
  40aa4a:	call   0x7060:0xfa32434c
  40aa51:	sbb    eax,0x20f71c6f
  40aa56:	das    
  40aa57:	push   ds
  40aa58:	sub    DWORD PTR [ecx-0xbd67c0c],ebp
  40aa5e:	pop    ds
  40aa5f:	mov    al,0x60
  40aa61:	adc    al,0xc3
  40aa63:	xor    eax,0x9c6e8fe4
  40aa68:	or     DWORD PTR [esi*8-0xbed0a40],0x66
  40aa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa71:	pop    ecx
  40aa72:	adc    BYTE PTR [eax+0x473557bd],ch
  40aa78:	jp     0x40aa40
  40aa7a:	(bad)  
  40aa7b:	pop    esp
  40aa7c:	and    ebx,ecx
  40aa7e:	mov    esp,0x2feaa78c
  40aa83:	not    BYTE PTR [ebp-0x40f810d5]
  40aa89:	pop    esp
  40aa8a:	add    eax,0xee3a0991
  40aa8f:	or     BYTE PTR [eax+0x7758877a],dh
  40aa95:	in     eax,0x75
  40aa97:	cmp    eax,0xb005072a
  40aa9c:	jne    0x40aaf7
  40aa9e:	mov    ds:0x6124f4ea,al
  40aaa3:	mov    esp,0xd1590471
  40aaa8:	fst    st(7)
  40aaaa:	sar    DWORD PTR [ecx],0x2c
  40aaad:	sar    BYTE PTR [edx],1
  40aaaf:	sub    al,0x34
  40aab1:	push   ebx
  40aab2:	add    esp,esp
  40aab4:	mov    ah,0x21
  40aab6:	inc    ebx
  40aab7:	mov    al,0x16
  40aab9:	inc    ebp
  40aaba:	adc    esi,DWORD PTR [edi]
  40aabc:	(bad)  
  40aabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabe:	pop    esp
  40aabf:	mov    ds:0xc40b1504,eax
  40aac4:	(bad)  
  40aac5:	mov    edi,0xbb36bef
  40aaca:	dec    esi
  40aacb:	add    al,0x4
  40aacd:	mov    ah,0x69
  40aacf:	xor    BYTE PTR ds:0x19eccabc,ch
  40aad5:	or     BYTE PTR [ebp+0x23],ch
  40aad8:	push   0x8e5b1efb
  40aadd:	scas   al,BYTE PTR es:[edi]
  40aade:	aad    0x9c
  40aae0:	stc    
  40aae1:	cmp    al,0xa
  40aae4:	dec    edi
  40aae5:	inc    esp
  40aae6:	out    0x2b,al
  40aae8:	dec    ebx
  40aae9:	fcomip st,st(1)
  40aaeb:	jp     0x40aae5
  40aaed:	or     al,0xcb
  40aaef:	ret    0x2826
  40aaf2:	jecxz  0x40aa78
  40aaf4:	mov    esp,0x88b2982b
  40aaf9:	jle    0x40ab3c
  40aafb:	push   ss
  40aafc:	stos   BYTE PTR es:[edi],al
  40aafd:	mov    ch,0x9d
  40aaff:	inc    edi
  40ab00:	jo     0x40ab47
  40ab02:	das    
  40ab03:	mov    edi,0x3472fae0
  40ab08:	(bad)  
  40ab09:	jl     0x40ab63
  40ab0b:	inc    ebp
  40ab0c:	pushf  
  40ab0d:	push   0x44
  40ab0f:	retf   
  40ab10:	and    bh,BYTE PTR [ecx-0x12871950]
  40ab16:	es xchg esp,eax
  40ab18:	xor    ecx,esi
  40ab1a:	shl    BYTE PTR [ecx+0xca9af65],1
  40ab20:	(bad)  
  40ab21:	sub    bh,BYTE PTR [ecx+0x7]
  40ab24:	sbb    esp,0x68
  40ab27:	sub    al,0x2b
  40ab29:	jmp    0x40aaac
  40ab2b:	arpl   WORD PTR [ebp+0x6bc6f4bb],sp
  40ab31:	dec    ebx
  40ab32:	dec    DWORD PTR [eax-0x4a4d7320]
  40ab38:	cmp    ecx,edx
  40ab3a:	jp     0x40aba3
  40ab3c:	mov    dl,0x50
  40ab3e:	(bad)  
  40ab3f:	mov    ah,0x86
  40ab41:	aaa    
  40ab42:	fst    DWORD PTR [esi+0x73c1f6c5]
  40ab48:	xor    eax,0x799525fe
  40ab4d:	dec    esi
  40ab4e:	push   esp
  40ab4f:	xor    ebx,esi
  40ab51:	mov    BYTE PTR [eax+ecx*4-0x2],al
  40ab55:	fnsave [edx-0x5c]
  40ab58:	iret   
  40ab59:	shl    BYTE PTR [eax+0x78],1
  40ab5c:	out    dx,eax
  40ab5d:	push   edx
  40ab5e:	cld    
  40ab5f:	adc    cl,bh
  40ab61:	cmp    DWORD PTR [esi],esi
  40ab63:	dec    ebx
  40ab64:	adc    esi,DWORD PTR [edi+0x3f361699]
  40ab6a:	sbb    cl,bh
  40ab6c:	ins    BYTE PTR es:[edi],dx
  40ab6d:	shl    DWORD PTR [ebx+0x644c6fc7],1
  40ab73:	and    ebx,DWORD PTR [esi+0x7]
  40ab76:	retf   0xc74c
  40ab79:	mov    ecx,0xcc4a3216
  40ab7e:	push   ecx
  40ab7f:	sti    
  40ab80:	sbb    BYTE PTR [ebp+eiz*4+0x6df3e0a5],dl
  40ab87:	inc    ebx
  40ab88:	outs   dx,BYTE PTR ds:[esi]
  40ab89:	fwait
  40ab8a:	leave  
  40ab8b:	aam    0x60
  40ab8d:	nop
  40ab8e:	test   eax,0xb4d1fb87
  40ab93:	xchg   edi,eax
  40ab94:	dec    eax
  40ab95:	shl    BYTE PTR cs:[ecx+esi*2+0x7a],cl
  40ab9a:	mov    DWORD PTR [edx],esp
  40ab9c:	xchg   ebp,eax
  40ab9d:	mov    ds:0xd75f2f2,al
  40aba2:	cmp    ah,BYTE PTR [eax-0x65]
  40aba5:	fcmovu st,st(1)
  40aba7:	pop    ebx
  40aba8:	push   edx
  40aba9:	mov    esp,0xe303a3aa
  40abae:	lods   al,BYTE PTR cs:[esi]
  40abb0:	push   0x33
  40abb2:	test   esi,0xabee41d
  40abb8:	mov    ebp,0x7b2af048
  40abbd:	iret   
  40abbe:	cmp    al,0xcf
  40abc0:	shr    DWORD PTR [esi],0xea
  40abc3:	cli    
  40abc4:	mov    ebp,DWORD PTR [edx+0x66bb26b2]
  40abca:	dec    ecx
  40abcb:	cmp    eax,0xbb809aae
  40abd0:	jb     0x40abf2
  40abd2:	adc    eax,0xb38f4225
  40abd7:	add    al,0xa8
  40abd9:	aas    
  40abda:	pop    edx
  40abdb:	cmp    edx,DWORD PTR [ebx]
  40abdd:	add    BYTE PTR [ecx],bl
  40abdf:	out    0xe5,eax
  40abe1:	pop    es
  40abe2:	dec    edi
  40abe3:	mov    edi,DWORD PTR [ecx+0x322c3a13]
  40abe9:	mov    al,0xa
  40abeb:	mov    al,0x5b
  40abed:	mov    WORD PTR [esi+0x176ee503],fs
  40abf3:	enter  0x25c,0x67
  40abf7:	pop    eax
  40abf8:	or     BYTE PTR es:[ebx-0x6e],cl
  40abfc:	hlt    
  40abfd:	pop    ebx
  40abfe:	mov    ah,0xff
  40ac00:	cmp    dl,0x48
  40ac03:	dec    ebp
  40ac04:	rep stos BYTE PTR es:[edi],al
  40ac06:	push   ebp
  40ac07:	cmp    eax,0x4eb3993c
  40ac0c:	fcmovne st,st(6)
  40ac0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac0f:	iret   
  40ac10:	or     esi,DWORD PTR [edx+0x6f]
  40ac13:	aad    0x81
  40ac15:	pop    es
  40ac16:	jae    0x40abe4
  40ac18:	add    ax,0x8881
  40ac1c:	into   
  40ac1d:	add    ecx,DWORD PTR [eax+esi*4+0x9]
  40ac21:	call   0xdf96dd5b
  40ac26:	das    
  40ac27:	jp     0x40ac6c
  40ac29:	dec    esi
  40ac2a:	int    0xe0
  40ac2c:	xchg   ebx,eax
  40ac2d:	repz jo 0x40ac30
  40ac30:	lods   al,BYTE PTR ds:[esi]
  40ac31:	es push esp
  40ac33:	retf   0xd418
  40ac36:	cmp    bl,BYTE PTR [ecx+0x41f717e6]
  40ac3c:	adc    eax,0x9357ee7b
  40ac41:	adc    al,0x8a
  40ac43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac44:	jb     0x40ac5a
  40ac46:	addr16 jb 0x40ac62
  40ac49:	sub    ecx,DWORD PTR [eax]
  40ac4b:	mov    eax,0xdfc3d7da
  40ac50:	mov    cl,BYTE PTR [edi+eax*4]
  40ac53:	jo     0x40ac65
  40ac55:	xor    ch,bh
  40ac57:	int    0x42
  40ac59:	ins    DWORD PTR es:[edi],dx
  40ac5a:	mov    al,0xca
  40ac5c:	sub    BYTE PTR [ebp+0x33],al
  40ac5f:	cld    
  40ac60:	or     al,0x12
  40ac62:	call   0xe010:0xa28809b5
  40ac69:	in     eax,dx
  40ac6a:	cli    
  40ac6b:	rcr    BYTE PTR [esi],0xb0
  40ac6e:	jmp    0x40ace6
  40ac70:	adc    cl,BYTE PTR [edi-0x23]
  40ac73:	data16 fisub WORD PTR [ebx-0x50]
  40ac77:	aas    
  40ac78:	ins    BYTE PTR es:[edi],dx
  40ac79:	mov    dl,ch
  40ac7b:	js     0x40ac3d
  40ac7d:	in     al,0x70
  40ac7f:	(bad)  
  40ac80:	ficomp DWORD PTR [edx-0x6be12420]
  40ac86:	mov    ds:0x3fb535a7,al
  40ac8b:	cli    
  40ac8c:	push   es
  40ac8d:	fidiv  DWORD PTR [esp+esi*2-0x3598e686]
  40ac94:	cmp    ch,BYTE PTR [ebx]
  40ac96:	outs   dx,BYTE PTR ds:[esi]
  40ac97:	pushf  
  40ac98:	and    al,0x7f
  40ac9a:	icebp  
  40ac9b:	sbb    BYTE PTR [esi-0x15],bl
  40ac9e:	xchg   bl,ah
  40aca0:	xor    eax,0x9d3d9cc4
  40aca5:	call   DWORD PTR [ebx+ebx*2]
  40aca8:	sub    cl,0x23
  40acab:	add    DWORD PTR [edi],0x3b
  40acae:	and    esi,ecx
  40acb0:	mov    BYTE PTR [eax-0x40334af5],0x3b
  40acb7:	hlt    
  40acb8:	push   ebx
  40acb9:	nop
  40acba:	gs scas eax,DWORD PTR es:[edi]
  40acbc:	jb     0x40ad08
  40acbe:	sub    DWORD PTR [edi+edx*1+0x6c72854b],ecx
  40acc5:	aad    0xc8
  40acc7:	push   0xffffffc5
  40acc9:	ror    BYTE PTR [ebx],cl
  40accb:	jmp    0x40ac6e
  40accd:	sub    bh,cl
  40accf:	popf   
  40acd0:	jle    0x40ac66
  40acd2:	sub    BYTE PTR [ebp-0x1cc40b38],0x38
  40acd9:	jns    0x40ad01
  40acdb:	push   es
  40acdc:	sub    al,0x3c
  40acde:	jg     0x40ac9c
  40ace0:	adc    DWORD PTR [ecx-0x60cefef1],esp
  40ace6:	pop    edx
  40ace7:	mov    ch,0x3f
  40ace9:	(bad)  
  40acea:	sbb    al,0xdb
  40acec:	adc    ah,0xb1
  40acef:	jo     0x40ad30
  40acf1:	dec    DWORD PTR [esi]
  40acf3:	sub    al,BYTE PTR [edi-0xa024224]
  40acf9:	sub    al,0x2
  40acfb:	pop    esi
  40acfc:	iret   
  40acfd:	(bad)  
  40acfe:	sbb    esp,ebp
  40ad00:	cwde   
  40ad01:	push   esi
  40ad02:	mov    ecx,ebx
  40ad04:	jp     0x40ac8a
  40ad06:	add    edi,edi
  40ad08:	retf   0xa4c5
  40ad0b:	mov    al,ds:0x1d71afd2
  40ad10:	sub    eax,0x88f28cd6
  40ad15:	inc    ecx
  40ad16:	adc    eax,0xbd781a36
  40ad1b:	popa   
  40ad1c:	sub    cl,ch
  40ad1e:	sbb    eax,0x1898864b
  40ad23:	lods   eax,DWORD PTR ds:[esi]
  40ad24:	pop    ss
  40ad25:	fucomp st(1)
  40ad27:	pushf  
  40ad28:	std    
  40ad29:	adc    al,0xf8
  40ad2b:	add    bh,BYTE PTR [esp+edx*8+0x7e]
  40ad2f:	jl     0x40ad1b
  40ad31:	pop    ebx
  40ad32:	mov    edi,0xf5e9dd41
  40ad37:	mov    ah,0xd2
  40ad39:	jns    0x40acbf
  40ad3b:	(bad)  
  40ad3c:	adc    DWORD PTR [ecx-0x45f29ed2],eax
  40ad42:	inc    esp
  40ad43:	stos   DWORD PTR es:[edi],eax
  40ad44:	add    ebp,DWORD PTR [ecx-0x48]
  40ad47:	arpl   WORD PTR [esi+0xc820cc8],bx
  40ad4d:	jo     0x40ada8
  40ad4f:	lods   al,BYTE PTR ds:[esi]
  40ad50:	and    eax,0x914486ff
  40ad55:	test   al,0xeb
  40ad57:	clc    
  40ad58:	sub    DWORD PTR [eax+0xe],ebx
  40ad5b:	xchg   esi,eax
  40ad5c:	jmp    0x6bb5d7ed
  40ad61:	rol    BYTE PTR [edx],cl
  40ad63:	dec    ebx
  40ad64:	imul   eax,DWORD PTR [eax-0x18],0x91af113b
  40ad6b:	or     ecx,DWORD PTR ds:0xf8b0d22f
  40ad71:	call   0x7253a00e
  40ad76:	pop    ebp
  40ad77:	mov    ecx,DWORD PTR [ebx+esi*1-0x25]
  40ad7b:	popa   
  40ad7c:	or     ah,BYTE PTR [ecx-0x45]
  40ad7f:	ins    DWORD PTR es:[edi],dx
  40ad80:	push   0x2
  40ad82:	dec    esi
  40ad83:	and    ecx,edi
  40ad85:	enterw 0xc8a,0xd5
  40ad8a:	pop    ebp
  40ad8b:	out    0x78,al
  40ad8d:	out    0x3f,eax
  40ad8f:	or     DWORD PTR [esi-0x18],eax
  40ad92:	adc    al,0xfa
  40ad94:	mov    ds:0xd37f8132,al
  40ad99:	shl    DWORD PTR [ebp+ebx*2+0x4229f552],0x61
  40ada1:	push   cs
  40ada2:	mov    ds:0xd5febd75,al
  40ada7:	scas   eax,DWORD PTR es:[edi]
  40ada8:	jle    0x40ad2f
  40adaa:	mov    eax,ds:0x49dca204
  40adaf:	mov    ds:0xf4cd1cc8,al
  40adb4:	icebp  
  40adb5:	sbb    cl,BYTE PTR [ecx+0x76]
  40adb8:	jb     0x40add4
  40adba:	loop   0x40ad76
  40adbc:	sbb    ecx,ebp
  40adbe:	fsub   st,st(0)
  40adc0:	into   
  40adc1:	sbb    al,0x14
  40adc3:	adc    al,0xf8
  40adc5:	test   BYTE PTR [ebx-0x5825e4],dh
  40adcb:	xchg   BYTE PTR [esi*8-0x30d6c5],bl
  40add2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add3:	dec    ebx
  40add4:	in     eax,dx
  40add5:	add    bl,BYTE PTR [ebx]
  40add7:	pop    ecx
  40add8:	pop    ss
  40add9:	(bad)  
  40adda:	imul   ebp,DWORD PTR [ecx-0x75],0x68
  40adde:	dec    eax
  40addf:	cld    
  40ade0:	loopne 0x40ae1d
  40ade2:	inc    esi
  40ade3:	psubb  mm1,QWORD PTR [ebp+0x35]
  40ade7:	ins    BYTE PTR es:[edi],dx
  40ade8:	jne    0x40ad9b
  40adea:	mov    ebx,DWORD PTR [esi+0x2d]
  40aded:	lahf   
  40adee:	cs sub eax,0xb1e57dc0
  40adf4:	adc    eax,0xd333f5b5
  40adf9:	aam    0x61
  40adfb:	loope  0x40ae5e
  40adfd:	xchg   DWORD PTR [edi+0x5f],eax
  40ae00:	stos   BYTE PTR es:[edi],al
  40ae01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae02:	(bad)  
  40ae04:	gs out 0x9c,al
  40ae07:	rcr    bl,cl
  40ae09:	mov    ebp,0xfa2f40be
  40ae0e:	mov    BYTE PTR [esi+0x43],bh
  40ae11:	xor    al,0xab
  40ae13:	(bad)  
  40ae14:	lods   al,BYTE PTR ds:[esi]
  40ae15:	icebp  
  40ae16:	mov    edi,0x8289b36c
  40ae1b:	aaa    
  40ae1c:	popf   
  40ae1d:	adc    al,0x29
  40ae1f:	add    DWORD PTR [ecx+0x5a956fc2],ecx
  40ae25:	pop    edi
  40ae26:	inc    eax
  40ae27:	add    dh,BYTE PTR [ecx-0x762d7111]
  40ae2d:	add    BYTE PTR ds:0xb1424ff7,0xe1
  40ae34:	or     dl,BYTE PTR [edi]
  40ae36:	dec    esp
  40ae37:	inc    edi
  40ae38:	outs   dx,DWORD PTR ds:[esi]
  40ae39:	ficom  DWORD PTR ds:0xc0d5767c
  40ae3f:	shl    cl,cl
  40ae41:	daa    
  40ae42:	inc    eax
  40ae43:	aam    0x54
  40ae45:	inc    esp
  40ae46:	les    edx,FWORD PTR [edi]
  40ae48:	adc    dh,dh
  40ae4a:	push   edx
  40ae4b:	mov    ds:0x15ea827a,al
  40ae50:	inc    edx
  40ae51:	push   es
  40ae52:	(bad)  
  40ae53:	dec    ebx
  40ae54:	xor    edi,0x4f3658c8
  40ae5a:	fld    DWORD PTR [edx-0x7a4d130b]
  40ae60:	aad    0x39
  40ae62:	dec    esi
  40ae63:	add    eax,DWORD PTR [ecx+0x1a]
  40ae66:	aaa    
  40ae67:	lea    esi,[esi]
  40ae69:	xor    BYTE PTR [eax+ebp*2+0x2d],dh
  40ae6d:	sub    BYTE PTR [ecx-0x6ed80446],dl
  40ae73:	cwde   
  40ae74:	jg     0x40aef1
  40ae76:	xchg   ebx,eax
  40ae77:	sbb    bh,BYTE PTR [ebx+0x29029265]
  40ae7d:	pop    ebx
  40ae7e:	fisub  WORD PTR ds:0x5a468980
  40ae84:	retf   0x6c59
  40ae87:	shl    DWORD PTR [ebx*2+0x20e4c9d7],1
  40ae8e:	or     eax,0xcc683911
  40ae93:	pop    ebp
  40ae94:	sti    
  40ae95:	cmp    eax,DWORD PTR [eax]
  40ae97:	mov    WORD PTR [eax+0x4043a3e4],ss
  40ae9d:	imul   esi,DWORD PTR [edx-0x12],0xf717a937
  40aea4:	sahf   
  40aea5:	out    dx,eax
  40aea6:	jne    0x40ae44
  40aea8:	jae    0x40af1d
  40aeaa:	jae    0x40ae97
  40aeac:	sbb    ebp,DWORD PTR [edx]
  40aeae:	jno    0x40aec6
  40aeb0:	or     al,0xd3
  40aeb2:	sub    DWORD PTR [edx+0x55],ecx
  40aeb5:	fnstcw WORD PTR [ecx]
  40aeb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb8:	call   0x91fa:0x2baccbe3
  40aebf:	jp     0x40ae5c
  40aec1:	in     eax,0xd4
  40aec3:	lods   al,BYTE PTR ds:[esi]
  40aec4:	mov    BYTE PTR [edx-0x62],ch
  40aec7:	dec    ebp
  40aec8:	lods   al,BYTE PTR ds:[esi]
  40aec9:	inc    ebx
  40aeca:	jae    0x40af2c
  40aecc:	xor    DWORD PTR [esi+0x667b3449],0xffffffbb
  40aed3:	rcr    DWORD PTR [eax],0x99
  40aed6:	xor    bh,BYTE PTR [ebx]
  40aed8:	inc    edx
  40aed9:	pop    ebp
  40aeda:	int3   
  40aedb:	jne    0x40af2d
  40aedd:	test   eax,edi
  40aedf:	mov    ebx,0x9b59fd73
  40aee4:	cmp    DWORD PTR [eax-0x12cf1880],0x48
  40aeeb:	xor    dh,0x64
  40aeee:	or     DWORD PTR [eax+0x3a],ebp
  40aef1:	jne    0x40aeb4
  40aef3:	or     bl,ah
  40aef5:	popa   
  40aef6:	mov    al,0x1c
  40aef8:	push   ss
  40aef9:	push   esi
  40aefa:	or     BYTE PTR [esi+0x36],cl
  40aefd:	mov    al,ds:0x9ccaece3
  40af02:	lock ds out dx,al
  40af05:	add    dl,bl
  40af07:	div    BYTE PTR [esi*4+0x122fc1c1]
  40af0e:	stc    
  40af0f:	mov    ds:0xae669402,eax
  40af14:	lods   eax,DWORD PTR ds:[esi]
  40af15:	and    BYTE PTR [ebx+eax*4-0x19cdce6f],dh
  40af1c:	fadd   QWORD PTR [ebp-0x8f33a7e]
  40af22:	(bad)  
  40af24:	sub    ebx,DWORD PTR [eax+ebx*8-0x5bcb6d2b]
  40af2b:	sbb    BYTE PTR [esi],bl
  40af2d:	sub    DWORD PTR [esi+0xd29099c],ecx
  40af33:	ds std 
  40af35:	pop    ecx
  40af36:	les    ebp,FWORD PTR [edx]
  40af38:	aas    
  40af39:	xor    eax,0xe808d933
  40af3e:	mov    edx,0xdc7957f9
  40af43:	pop    ebx
  40af44:	pop    eax
  40af45:	xor    al,0x36
  40af47:	sbb    DWORD PTR [ecx+0x3e],edi
  40af4a:	dec    ecx
  40af4b:	enter  0x76aa,0x52
  40af4f:	fcmovbe st,st(4)
  40af51:	into   
  40af52:	fdiv   QWORD PTR [ebp-0x24]
  40af55:	xor    al,0x77
  40af57:	sbb    BYTE PTR [eax-0x148e2c1d],0xad
  40af5e:	(bad)  
  40af60:	xor    edx,DWORD PTR [esi+eax*1]
  40af63:	loopne 0x40af9a
  40af65:	ror    DWORD PTR [esi],cl
  40af67:	jno    0x40afc5
  40af69:	inc    esp
  40af6a:	add    al,0xd1
  40af6c:	and    BYTE PTR [edx],0xbf
  40af6f:	xor    DWORD PTR [ebp+0x13602a63],esi
  40af75:	inc    ebp
  40af76:	test   al,bh
  40af78:	xor    eax,0x70a48c85
  40af7d:	add    BYTE PTR [eax-0x22],ch
  40af80:	inc    edx
  40af81:	dec    ebp
  40af82:	fisubr DWORD PTR ss:[edi+0x5b2754cb]
  40af89:	call   0x778832d2
  40af8e:	mov    es,WORD PTR [eax-0x3e]
  40af91:	pop    edi
  40af92:	test   DWORD PTR [ebp+0x14],edx
  40af95:	repnz push ds
  40af97:	outs   dx,BYTE PTR ds:[esi]
  40af98:	ins    BYTE PTR es:[edi],dx
  40af99:	fimul  DWORD PTR [eax+eiz*2]
  40af9c:	stc    
  40af9d:	test   DWORD PTR [esi-0x4c15f793],esp
  40afa3:	mov    ch,BYTE PTR [ebp-0x63c4e26]
  40afa9:	add    DWORD PTR [esi-0x39],ebp
  40afac:	rol    DWORD PTR [esi-0x34],cl
  40afaf:	sub    al,0x39
  40afb1:	(bad)  
  40afb2:	out    dx,al
  40afb3:	cmp    dh,al
  40afb5:	add    eax,0xb1ddcc08
  40afba:	or     eax,0xb4878926
  40afbf:	lods   al,BYTE PTR ds:[esi]
  40afc0:	lahf   
  40afc1:	aas    
  40afc2:	add    bl,BYTE PTR ss:[edx+edi*2+0x50]
  40afc7:	add    dh,ch
  40afc9:	mov    bl,0x30
  40afcb:	mov    ecx,0x70007074
  40afd0:	int    0xe9
  40afd2:	jl     0x40af70
  40afd4:	je     0x40b038
  40afd6:	xchg   ebp,eax
  40afd7:	in     eax,dx
  40afd8:	or     cl,BYTE PTR ds:[ebp-0x36b2895d]
  40afdf:	pop    ebp
  40afe0:	add    eax,0xa0115a5d
  40afe5:	xor    edi,esp
  40afe7:	loopne 0x40b02f
  40afe9:	inc    ebp
  40afea:	sbb    ah,BYTE PTR [ebp+eax*8-0x79eb2c30]
  40aff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff2:	ins    DWORD PTR es:[edi],dx
  40aff3:	cdq    
  40aff4:	in     al,dx
  40aff5:	call   0xc56f478b
  40affa:	call   0xedf2:0x830b2c93
  40b001:	inc    ebx
  40b002:	mov    ?,WORD PTR [ecx+0x5a]
  40b005:	jle    0x40afeb
  40b007:	mov    edi,0x11b2b994
  40b00c:	aaa    
  40b00d:	mov    eax,ds:0xb302548d
  40b012:	pop    edx
  40b013:	xchg   ebp,eax
  40b014:	nop
  40b015:	nop
  40b016:	retf   0x1744
  40b019:	xor    DWORD PTR [ecx+0x75748c55],esp
  40b01f:	cli    
  40b020:	cmp    al,0x33
  40b022:	xor    BYTE PTR [esp+eax*4-0x58ea8416],dh
  40b029:	sub    DWORD PTR [eax],esi
  40b02b:	pop    ebp
  40b02c:	shr    BYTE PTR [ecx-0xe],cl
  40b02f:	shr    DWORD PTR [edx+edx*8+0x414854c0],cl
  40b036:	and    al,0xd3
  40b038:	inc    edi
  40b039:	in     al,dx
  40b03a:	pop    ecx
  40b03b:	shr    BYTE PTR [eax+edx*2],0xbb
  40b03f:	loop   0x40b04f
  40b041:	(bad)  
  40b042:	(bad)  
  40b043:	jmp    0x40b08c
  40b045:	inc    ecx
  40b046:	mov    bh,0x26
  40b048:	sub    eax,0x42f96e95
  40b04d:	mov    ah,0x2a
  40b04f:	cmp    DWORD PTR [esi+0x2c711cbf],ecx
  40b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b056:	clc    
  40b057:	mov    ebx,0x925396e2
  40b05c:	fidiv  WORD PTR [ebp+0x6012767b]
  40b062:	hlt    
  40b063:	push   cs
  40b064:	clc    
  40b065:	mov    DWORD PTR [eax],esp
  40b067:	push   es
  40b068:	ror    DWORD PTR es:[eax-0x79],1
  40b06c:	cmp    BYTE PTR [esp+edi*4+0x7],bh
  40b070:	and    al,0x96
  40b072:	sub    DWORD PTR [esi+edx*4+0x15fb22e8],esp
  40b079:	inc    ecx
  40b07a:	and    eax,0x373df963
  40b07f:	int3   
  40b080:	data16 neg BYTE PTR [ebx-0x2f]
  40b084:	and    al,0x34
  40b086:	push   esi
  40b087:	enter  0x43a7,0x7e
  40b08b:	and    bl,BYTE PTR [eax+0x2aa79df]
  40b091:	rol    eax,0xe6
  40b094:	mov    ebx,0xc4374a53
  40b099:	pop    esi
  40b09a:	cmp    BYTE PTR [edi+0x11cc77ff],ah
  40b0a0:	push   es
  40b0a1:	sti    
  40b0a2:	jb     0x40b073
  40b0a4:	lahf   
  40b0a5:	sbb    BYTE PTR [edx-0x4b893f64],dh
  40b0ab:	pusha  
  40b0ac:	mov    ds:0xd5e27986,eax
  40b0b1:	rol    DWORD PTR [eax+0x383df358],cl
  40b0b7:	push   edx
  40b0b8:	inc    edx
  40b0b9:	mov    cl,BYTE PTR [eax+0x28]
  40b0bc:	(bad)  
  40b0bd:	fucomp st(6)
  40b0bf:	fimul  DWORD PTR [edi]
  40b0c1:	sahf   
  40b0c2:	retf   0x3127
  40b0c5:	pop    eax
  40b0c6:	xrelease mov BYTE PTR [ebx],ch
  40b0c9:	and    ch,BYTE PTR [ebx+ebp*4+0x37]
  40b0cd:	jns    0x40b0ae
  40b0cf:	xor    BYTE PTR [ecx],cl
  40b0d1:	push   0x92caac63
  40b0d6:	inc    eax
  40b0d7:	gs call 0x1894:0x5c8fd88e
  40b0df:	mov    esi,0x41465695
  40b0e4:	jp     0x40b140
  40b0e6:	loop   0x40b109
  40b0e8:	cmp    cl,BYTE PTR [ebx-0x4c82feda]
  40b0ee:	inc    ecx
  40b0ef:	mov    edx,0xe8f2902f
  40b0f4:	inc    esi
  40b0f5:	lock je 0x40b0e0
  40b0f8:	popa   
  40b0f9:	fmul   DWORD PTR [edi+0x1b]
  40b0fc:	mov    edx,0x1641caed
  40b101:	ss iret 
  40b103:	jb     0x40b0db
  40b105:	stos   BYTE PTR es:[edi],al
  40b106:	ins    DWORD PTR es:[edi],dx
  40b107:	addr16 into 
  40b109:	xchg   edx,eax
  40b10a:	inc    esp
  40b10b:	add    dh,BYTE PTR [esi+0x22c5c8c1]
  40b111:	dec    ecx
  40b112:	(bad)  
  40b113:	shr    BYTE PTR [edi],0x76
  40b116:	adc    DWORD PTR [edx],esp
  40b118:	mov    dh,BYTE PTR [esi]
  40b11a:	adc    DWORD PTR [edx],edi
  40b11c:	sahf   
  40b11d:	imul   DWORD PTR ds:0x13b6255
  40b123:	cmp    ebx,0xec58280a
  40b129:	ror    BYTE PTR [esi+0x71ed08ed],1
  40b12f:	repz add al,0x50
  40b132:	or     al,0x3e
  40b134:	dec    edx
  40b135:	mov    ah,0xd3
  40b137:	retf   0xa327
  40b13a:	mov    dh,BYTE PTR [esi]
  40b13c:	aas    
  40b13d:	(bad)  
  40b13e:	bound  ecx,QWORD PTR [esi-0x8]
  40b141:	ss mov cl,0x94
  40b144:	mov    al,ds:0x3d314c0
  40b149:	add    BYTE PTR [ebx-0x5e],0x6e
  40b14d:	push   ds
  40b14e:	fcom   QWORD PTR [edi+0x468e18a1]
  40b154:	aaa    
  40b155:	pop    edx
  40b156:	gs icebp 
  40b158:	fistp  QWORD PTR [ebp+0x13]
  40b15b:	pop    ds
  40b15c:	pop    edx
  40b15d:	push   edx
  40b15e:	xor    al,0x44
  40b160:	xchg   ecx,eax
  40b161:	sbb    ecx,DWORD PTR [ecx+0x42]
  40b164:	lods   al,BYTE PTR ds:[esi]
  40b165:	div    BYTE PTR [esi-0x2b]
  40b168:	add    bh,ah
  40b16a:	mov    ebx,0xfaf1ef77
  40b16f:	inc    eax
  40b170:	sub    al,0x1c
  40b172:	out    dx,eax
  40b173:	and    BYTE PTR [eax+ebx*2+0x23a3d853],al
  40b17a:	mov    dl,0x78
  40b17c:	xchg   edi,eax
  40b17d:	push   ecx
  40b17e:	jb     0x40b1d2
  40b180:	pop    ds
  40b181:	mov    ebp,0xd2b5435e
  40b186:	stos   BYTE PTR es:[edi],al
  40b187:	jae    0x40b1b0
  40b189:	fcomp  st(2)
  40b18b:	xchg   esp,eax
  40b18c:	dec    edi
  40b18d:	sbb    al,0x23
  40b18f:	nop
  40b190:	add    BYTE PTR [edi],bh
  40b192:	in     eax,dx
  40b193:	fidiv  DWORD PTR [eax+0x66]
  40b196:	inc    edi
  40b197:	idiv   DWORD PTR [ebp+0x5c]
  40b19a:	push   esi
  40b19b:	jns    0x40b1e9
  40b19d:	push   0xacfb7ad6
  40b1a2:	out    0xe1,eax
  40b1a4:	jecxz  0x40b13c
  40b1a6:	aas    
  40b1a7:	leave  
  40b1a8:	mov    BYTE PTR fs:[edx],bh
  40b1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ac:	addr16 out 0xec,al
  40b1af:	fwait
  40b1b0:	in     eax,0x9
  40b1b2:	xlat   BYTE PTR ds:[ebx]
  40b1b3:	mov    ds:0x2575a857,al
  40b1b8:	and    BYTE PTR [ebx+0x273c6f28],dl
  40b1be:	inc    ecx
  40b1bf:	sar    ecx,cl
  40b1c1:	or     edi,DWORD PTR [eax+eax*8+0x50]
  40b1c5:	mov    ds:0x23a65c81,eax
  40b1ca:	and    al,BYTE PTR [edx-0x4d]
  40b1cd:	xchg   ebx,eax
  40b1ce:	add    dl,ch
  40b1d0:	js     0x40b18c
  40b1d2:	out    dx,eax
  40b1d3:	push   esp
  40b1d4:	xor    bl,dh
  40b1d6:	sbb    DWORD PTR [eax],ebx
  40b1d8:	pop    esp
  40b1d9:	adc    al,0x94
  40b1db:	jno    0x40b1d0
  40b1dd:	ins    DWORD PTR es:[edi],dx
  40b1de:	and    esi,DWORD PTR [eax+ebp*1]
  40b1e1:	pop    eax
  40b1e2:	and    bh,BYTE PTR [ecx]
  40b1e4:	fild   WORD PTR [edi-0x5b]
  40b1e7:	pop    esp
  40b1e8:	dec    ebp
  40b1e9:	add    eax,0xeb97b380
  40b1ee:	mov    edx,0x3a4fa4d7
  40b1f3:	pop    es
  40b1f4:	rol    DWORD PTR ds:[ecx],1
  40b1f7:	mov    dl,0x64
  40b1f9:	cmp    dl,BYTE PTR [ebx]
  40b1fb:	xor    eax,DWORD PTR [esi-0x4d958ea8]
  40b201:	ins    DWORD PTR es:[edi],dx
  40b202:	push   ecx
  40b203:	je     0x40b197
  40b205:	lock sub al,BYTE PTR [ebx-0x7c]
  40b209:	or     eax,0xc531ee68
  40b20e:	adc    dl,BYTE PTR [ebx+0x4d98d18]
  40b214:	(bad)  
  40b215:	arpl   WORD PTR [eax],si
  40b217:	and    cl,BYTE PTR [ebx+0x53]
  40b21a:	and    BYTE PTR [edi],0xd0
  40b21d:	sbb    eax,0x64a17401
  40b222:	pop    ebp
  40b223:	shl    BYTE PTR [ecx],cl
  40b225:	lods   al,BYTE PTR ds:[esi]
  40b226:	clc    
  40b227:	icebp  
  40b228:	ss out dx,al
  40b22a:	arpl   cx,dx
  40b22c:	add    ah,BYTE PTR [edx]
  40b22e:	cmp    al,0xa5
  40b230:	inc    esi
  40b231:	out    0x61,eax
  40b233:	mov    ebp,0x73cbb13f
  40b238:	jo     0x40b206
  40b23a:	ins    DWORD PTR es:[edi],dx
  40b23b:	in     al,0x8b
  40b23d:	ret    
  40b23e:	lds    ecx,FWORD PTR [ebx]
  40b240:	and    eax,0x273aa58f
  40b245:	in     al,dx
  40b246:	add    BYTE PTR [edx+0x57a00dd7],ah
  40b24c:	mov    dl,0x81
  40b24e:	mov    edi,0x75bacbcc
  40b253:	pushf  
  40b254:	out    dx,al
  40b255:	ss pop es
  40b257:	and    bl,BYTE PTR [esi+0x70]
  40b25a:	nop
  40b25b:	sbb    DWORD PTR [edx],esp
  40b25d:	sbb    al,0x20
  40b25f:	jecxz  0x40b23f
  40b261:	out    dx,al
  40b262:	sbb    eax,0xbf63c134
  40b267:	mov    cl,0x6f
  40b269:	imul   esi,esp,0x50
  40b26c:	shl    BYTE PTR [edx],1
  40b26e:	aam    0x20
  40b270:	jmp    0x2924bd8f
  40b275:	jnp    0x40b2ef
  40b277:	aaa    
  40b278:	pop    es
  40b279:	enter  0x36e2,0xab
  40b27d:	mov    ecx,0x6f4d7b8
  40b282:	cdq    
  40b283:	mov    al,0x40
  40b285:	std    
  40b286:	in     eax,0x90
  40b288:	push   es
  40b289:	inc    edi
  40b28a:	jle    0x40b259
  40b28c:	inc    esi
  40b28d:	dec    edi
  40b28e:	jnp    0x40b27e
  40b290:	inc    ebp
  40b291:	cmp    DWORD PTR [esi+0x2b],edi
  40b294:	pushf  
  40b295:	and    ecx,edi
  40b297:	push   es
  40b298:	and    al,0x26
  40b29a:	push   esi
  40b29b:	in     al,dx
  40b29c:	rcl    DWORD PTR [edx-0x28149e1d],1
  40b2a2:	xor    DWORD PTR [ecx-0x1d157da1],ebp
  40b2a8:	fstp   TBYTE PTR [edi+0x1c260b65]
  40b2ae:	and    BYTE PTR [esi-0x622f59b4],bl
  40b2b4:	mov    ecx,0xa08ed39e
  40b2b9:	test   eax,0xd2699911
  40b2be:	out    dx,al
  40b2bf:	retf   0x58b0
  40b2c2:	jg     0x40b315
  40b2c4:	(bad)  
  40b2c5:	pushf  
  40b2c6:	mov    esp,DWORD PTR [eax-0x74]
  40b2c9:	cmp    eax,0xf48c1274
  40b2ce:	xlat   BYTE PTR ds:[ebx]
  40b2cf:	dec    esp
  40b2d0:	sub    edi,DWORD PTR [edi+0x6a8282f7]
  40b2d6:	(bad)  
  40b2d7:	(bad)  
  40b2d8:	aam    0xc2
  40b2da:	pop    ss
  40b2db:	dec    ebp
  40b2dc:	xchg   esp,eax
  40b2dd:	cmp    ah,bl
  40b2df:	lea    edi,[edi]
  40b2e1:	push   ss
  40b2e2:	mov    edx,0xfd5ed6e0
  40b2e7:	push   0x9c552097
  40b2ec:	mov    edi,0xea41c154
  40b2f1:	lds    ecx,FWORD PTR [esp-0x5d]
  40b2f5:	mov    dl,0xc2
  40b2f7:	add    al,BYTE PTR [edx+0x48661738]
  40b2fd:	into   
  40b2fe:	out    dx,al
  40b2ff:	lods   al,BYTE PTR ds:[esi]
  40b300:	or     DWORD PTR [edx],edi
  40b302:	ret    0xa081
  40b305:	repz add eax,0x84233f48
  40b30b:	xchg   edi,eax
  40b30c:	inc    ebp
  40b30d:	pop    edx
  40b30e:	repz dec edx
  40b310:	aad    0x1c
  40b312:	cmp    ebx,ebp
  40b314:	push   DWORD PTR [ebx+0xbf2b4e8]
  40b31a:	and    eax,0xa82a7300
  40b31f:	add    DWORD PTR [edi+ebx*2],esp
  40b322:	loope  0x40b364
  40b324:	push   0xffffffb6
  40b326:	xor    ch,ah
  40b328:	lods   eax,DWORD PTR ds:[si]
  40b32a:	jp     0x40b320
  40b32c:	push   0x18
  40b32e:	adc    eax,0x54e2684f
  40b333:	fild   QWORD PTR [esi+esi*4]
  40b336:	lahf   
  40b337:	aas    
  40b338:	(bad)  
  40b339:	retf   
  40b33a:	bound  ebx,QWORD PTR [edx]
  40b33c:	jno    0x40b378
  40b33e:	arpl   WORD PTR [ebx],si
  40b340:	call   0x6160:0x76398e5d
  40b347:	jo     0x40b34e
  40b349:	adc    al,0xa
  40b34b:	in     eax,dx
  40b34c:	rol    DWORD PTR [ecx],0x27
  40b34f:	mov    ds:0x4055e4b1,al
  40b354:	aas    
  40b355:	fnstsw WORD PTR [edx+eax*1-0x196da5dc]
  40b35c:	int    0x87
  40b35e:	std    
  40b35f:	and    DWORD PTR [ecx+0x6981642a],edi
  40b365:	cmp    BYTE PTR gs:[ebp-0x7a0324b9],bl
  40b36c:	add    BYTE PTR [edi+eiz*2-0x35],dl
  40b370:	js     0x40b2fc
  40b372:	ins    BYTE PTR es:[edi],dx
  40b373:	jge    0x40b37e
  40b375:	mov    esp,0xd9bb677a
  40b37a:	int3   
  40b37b:	stos   BYTE PTR es:[edi],al
  40b37c:	xor    edx,DWORD PTR [eax+0x33]
  40b37f:	jmp    0x85684af6
  40b384:	mov    al,0xce
  40b386:	mov    esp,0x6cb0055d
  40b38b:	mov    eax,ds:0x9db28ac6
  40b390:	jg     0x40b3df
  40b392:	dec    esi
  40b393:	push   edx
  40b394:	mov    ch,0xfc
  40b396:	and    eax,DWORD PTR [ebx+0x26]
  40b399:	and    eax,0x1fda637a
  40b39e:	pop    esi
  40b39f:	loope  0x40b3ca
  40b3a1:	pushf  
  40b3a2:	add    eax,0x1eb5e474
  40b3a7:	out    0xc4,eax
  40b3a9:	or     DWORD PTR gs:[ebx],edi
  40b3ac:	mov    dh,BYTE PTR [esi]
  40b3ae:	mov    dl,0xa6
  40b3b0:	inc    ebp
  40b3b1:	xchg   DWORD PTR [edx+0x64],eax
  40b3b4:	test   al,0xec
  40b3b6:	not    BYTE PTR [eax]
  40b3b8:	pusha  
  40b3b9:	stc    
  40b3ba:	test   al,0x4a
  40b3bc:	sbb    DWORD PTR [edx+0x1d],eax
  40b3bf:	int3   
  40b3c0:	ficom  WORD PTR fs:[ebx]
  40b3c3:	rcl    dl,cl
  40b3c5:	stos   DWORD PTR es:[edi],eax
  40b3c6:	sub    al,dl
  40b3c8:	and    eax,0xf9a5a9f9
  40b3cd:	jns    0x40b420
  40b3cf:	rcr    eax,1
  40b3d1:	inc    ebx
  40b3d2:	sbb    dh,BYTE PTR [ecx-0x37166907]
  40b3d8:	cmp    al,0xc8
  40b3da:	push   0xdfd4f36f
  40b3df:	sub    dl,BYTE PTR [ebx+0x73f998ba]
  40b3e5:	mov    eax,0x303de7eb
  40b3ea:	jmp    0x40b36e
  40b3ec:	sbb    eax,0xb6739541
  40b3f1:	sub    BYTE PTR [eax],ah
  40b3f3:	addr16 jae 0x40b378
  40b3f6:	enter  0xb675,0xe8
  40b3fa:	test   DWORD PTR [edx+0x47d50eeb],eax
  40b400:	adc    eax,0xf5fe51da
  40b405:	ins    DWORD PTR es:[edi],dx
  40b406:	pop    es
  40b407:	fst    QWORD PTR [ecx]
  40b409:	mov    ?,WORD PTR [ecx]
  40b40b:	jb     0x40b464
  40b40d:	jne    0x40b3ea
  40b40f:	imul   edi,esp,0x5cffce1b
  40b415:	and    edx,DWORD PTR [edi-0x7bba2469]
  40b41b:	and    DWORD PTR [ebp+0x58c2eac5],ebx
  40b421:	mov    eax,ds:0x44f3fe84
  40b426:	cmp    ecx,ecx
  40b428:	mov    esp,0x55990de2
  40b42d:	pusha  
  40b42e:	mov    bl,0x45
  40b430:	jbe    0x40b3d1
  40b432:	aaa    
  40b433:	push   ds
  40b434:	mov    dh,0x2a
  40b436:	sbb    eax,DWORD PTR [ecx+0x2e]
  40b439:	int    0x81
  40b43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43c:	jp     0x40b4a5
  40b43e:	pop    ecx
  40b43f:	pop    edx
  40b440:	xchg   edx,eax
  40b442:	rcl    BYTE PTR [edx],1
  40b444:	std    
  40b445:	pop    esi
  40b446:	int    0x5f
  40b448:	mov    BYTE PTR [edx+0xbacc6fb],ah
  40b44e:	add    eax,0x173dccc5
  40b453:	mov    ds:0x94d6d22c,eax
  40b458:	sub    eax,0x71879a3b
  40b45d:	loopne 0x40b4be
  40b45f:	std    
  40b460:	adc    eax,0x2ec51f10
  40b465:	jnp    0x40b419
  40b467:	scas   eax,DWORD PTR es:[edi]
  40b468:	add    BYTE PTR [ebx+0x27e13e0b],cl
  40b46e:	cdq    
  40b46f:	(bad)  
  40b470:	cmc    
  40b471:	or     dh,BYTE PTR [eax+0x5d6ec0f9]
  40b477:	call   0x924e694e
  40b47c:	fld    QWORD PTR [edx+0x1b]
  40b47f:	fst    st(0)
  40b481:	pop    eax
  40b482:	jmp    0x6e09e12
  40b487:	das    
  40b488:	mov    eax,0xfe780539
  40b48d:	cmp    dl,BYTE PTR [eax+eax*1]
  40b490:	xchg   DWORD PTR [edx-0x36],esi
  40b493:	xchg   BYTE PTR [esi],bl
  40b495:	retf   0x8910
  40b498:	and    cl,bl
  40b49a:	push   esi
  40b49b:	sahf   
  40b49c:	js     0x40b469
  40b49e:	mov    dh,0xb6
  40b4a0:	dec    edi
  40b4a1:	mov    al,dh
  40b4a3:	mov    ds:0x490ff11a,eax
  40b4a8:	mov    esi,0x4966410b
  40b4ad:	mov    al,dh
  40b4af:	or     BYTE PTR [ebx-0x43],ch
  40b4b2:	cli    
  40b4b3:	in     eax,0x56
  40b4b5:	data16 mov BYTE PTR [eax-0xee45387],cl
  40b4bc:	aaa    
  40b4bd:	ins    BYTE PTR es:[edi],dx
  40b4be:	push   ds
  40b4bf:	repz loope 0x40b493
  40b4c2:	imul   ebx,DWORD PTR [eax+0x645bfa80],0x431ca901
  40b4cc:	les    esi,FWORD PTR [ecx+0x26]
  40b4cf:	cpuid  
  40b4d1:	out    dx,eax
  40b4d2:	and    BYTE PTR [edx+0x400f86cc],ah
  40b4d8:	(bad)  
  40b4d9:	retf   
  40b4da:	test   al,0xcc
  40b4dc:	dec    esi
  40b4dd:	mov    bl,0x7a
  40b4df:	or     al,0x20
  40b4e1:	cmp    ecx,edx
  40b4e3:	(bad)  
  40b4e4:	(bad)  
  40b4e5:	jg     0x40b566
  40b4e7:	mov    cl,0xeb
  40b4e9:	ja     0x40b48e
  40b4eb:	mov    BYTE PTR [ebx],dh
  40b4ed:	push   ss
  40b4ee:	push   esp
  40b4ef:	test   edi,eax
  40b4f1:	dec    ecx
  40b4f2:	mov    WORD PTR [ebp-0x1f],fs
  40b4f5:	cmc    
  40b4f6:	or     al,dl
  40b4f8:	pop    ebp
  40b4f9:	mov    esi,0xdd3dab9d
  40b4fe:	iret   
  40b4ff:	pop    ds
  40b500:	adc    al,0x40
  40b502:	inc    BYTE PTR [edx-0x35964a26]
  40b508:	(bad)  
  40b509:	sub    dh,BYTE PTR [eax+0x3c]
  40b50c:	std    
  40b50d:	sahf   
  40b50e:	mov    ecx,0x8ec4dc1e
  40b513:	sub    cx,WORD PTR [edi+edx*1+0x5cb2df06]
  40b51b:	fdiv   QWORD PTR [edx-0x274cd5c1]
  40b521:	shl    DWORD PTR [eax],0xc4
  40b524:	clc    
  40b525:	inc    edi
  40b526:	pop    ebp
  40b527:	cmp    eax,0x1cb87cdf
  40b52c:	sbb    dh,cl
  40b52e:	scas   eax,DWORD PTR es:[edi]
  40b52f:	pop    ds
  40b530:	inc    ebp
  40b531:	push   ebx
  40b532:	mov    eax,0x23babd81
  40b537:	nop
  40b538:	lds    esp,FWORD PTR [eax-0x78394c88]
  40b53e:	mov    edi,0xe3e8c497
  40b543:	lea    di,[edi+0x7f115d68]
  40b54a:	inc    eax
  40b54b:	add    ecx,DWORD PTR [edx+0x45b7046b]
  40b551:	mov    ds,edi
  40b553:	test   ebx,0xf76ff39b
  40b559:	stc    
  40b55a:	sbb    eax,0xc17c0d21
  40b55f:	rcr    BYTE PTR [ecx-0x56498684],0x3
  40b566:	jge    0x40b5c4
  40b568:	icebp  
  40b569:	jmp    0x40b5cc
  40b56b:	shl    ebx,cl
  40b56d:	cmp    DWORD PTR [esi-0xe0b379d],edi
  40b573:	adc    DWORD PTR [ebx],esp
  40b575:	or     ch,dh
  40b577:	xlat   BYTE PTR ds:[ebx]
  40b578:	xchg   edi,eax
  40b579:	stos   DWORD PTR es:[edi],eax
  40b57a:	cmp    ebx,DWORD PTR [ecx+0x35e4faeb]
  40b580:	int3   
  40b581:	xchg   ebp,eax
  40b582:	pop    ebp
  40b583:	mov    di,0x7fb3
  40b587:	enter  0x2574,0x21
  40b58b:	fild   WORD PTR [ebp+eax*1+0x39]
  40b58f:	inc    ecx
  40b590:	mov    dl,0x34
  40b592:	xchg   DWORD PTR [esp+ecx*1],ecx
  40b595:	shl    ch,1
  40b597:	ret    0x4154
  40b59a:	adc    BYTE PTR [ebx+ebp*4-0x7c],ah
  40b59e:	scas   al,BYTE PTR es:[edi]
  40b59f:	test   edx,edx
  40b5a1:	sbb    ebx,DWORD PTR [edx]
  40b5a3:	or     bl,BYTE PTR [edi+0x1e6d6b32]
  40b5a9:	lea    eax,[eax-0x1ae91a3b]
  40b5af:	sub    ch,al
  40b5b1:	rcr    ah,0xe3
  40b5b4:	pop    eax
  40b5b5:	ss fndisi(8087 only) 
  40b5b8:	sub    esi,DWORD PTR [esi-0x65faaaf5]
  40b5be:	jne    0x40b5c7
  40b5c0:	test   DWORD PTR [ecx+0x3ae675cf],0x98740e87
  40b5ca:	mov    eax,ds:0x3f664bc7
  40b5cf:	or     al,0x90
  40b5d1:	hlt    
  40b5d2:	push   edi
  40b5d3:	pop    ds
  40b5d4:	pop    edi
  40b5d5:	xchg   ebx,eax
  40b5d6:	mov    ecx,ebx
  40b5d8:	or     bl,BYTE PTR [edx-0x6efc8706]
  40b5de:	mov    BYTE PTR [ecx],al
  40b5e0:	sub    al,0xc5
  40b5e2:	sar    DWORD PTR [eax+0x3b8fecfc],1
  40b5e8:	sbb    eax,0x103d7f91
  40b5ed:	call   0xc796178e
  40b5f2:	jge    0x40b5b2
  40b5f4:	xchg   ebp,eax
  40b5f5:	add    ebp,DWORD PTR [edx]
  40b5f7:	dec    ecx
  40b5f8:	inc    eax
  40b5f9:	add    ah,BYTE PTR [ecx+0x70e7f5fd]
  40b5ff:	sbb    eax,DWORD PTR [ecx+0x61]
  40b602:	jmp    0x40b5bb
  40b604:	popf   
  40b605:	adc    edi,esi
  40b607:	cmp    esi,edx
  40b609:	or     al,BYTE PTR [ebx]
  40b60b:	mov    fs,eax
  40b60d:	ror    BYTE PTR [ecx+0x2d],0x7a
  40b611:	test   DWORD PTR [edx+0x55447d94],eax
  40b617:	iret   
  40b618:	ds sub al,bl
  40b61b:	mov    ds:0xac647a46,al
  40b620:	sti    
  40b621:	cmp    dl,BYTE PTR [ebp+0x7f915c84]
  40b627:	outs   dx,DWORD PTR ds:[esi]
  40b628:	fs ins DWORD PTR es:[edi],dx
  40b62a:	mov    DWORD PTR [edi],ebx
  40b62c:	inc    ebx
  40b62d:	test   eax,0x2ce4bc9c
  40b632:	xchg   ecx,eax
  40b633:	daa    
  40b634:	mov    ch,0xa0
  40b636:	push   ss
  40b637:	imul   esi,DWORD PTR [esi],0x8ac10077
  40b63d:	xlat   BYTE PTR ds:[ebx]
  40b63e:	adc    BYTE PTR [edx+0x47c1ef],ch
  40b644:	(bad)  
  40b645:	lock push 0xffffffc7
  40b648:	out    0xe1,eax
  40b64a:	sub    al,0xc9
  40b64c:	mov    ebx,0xf3b9e7da
  40b651:	mul    BYTE PTR [edx]
  40b653:	and    BYTE PTR [esp+esi*1+0x1a],bh
  40b657:	dec    edx
  40b658:	fwait
  40b659:	fs pusha 
  40b65b:	sbb    al,0x1b
  40b65d:	dec    esp
  40b65e:	call   0x885450ee
  40b663:	sar    DWORD PTR [edi+ecx*4],1
  40b666:	loop   0x40b656
  40b668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b669:	(bad)  
  40b66a:	xchg   edi,eax
  40b66b:	es mov esi,0xa5790521
  40b671:	out    0x54,al
  40b673:	jle    0x40b6c6
  40b675:	fmul   QWORD PTR [ecx-0x68]
  40b678:	or     DWORD PTR [edx+edx*1-0x5e13009d],0xffffffa8
  40b680:	(bad)  
  40b682:	xor    ah,BYTE PTR [esi-0x4]
  40b685:	push   ebx
  40b686:	jmp    0x40b64a
  40b688:	xlat   BYTE PTR ds:[ebx]
  40b689:	and    BYTE PTR [esi-0x44],cl
  40b68c:	xor    al,cl
  40b68e:	enter  0xe62,0x7e
  40b692:	add    DWORD PTR [ebx-0x92ca872],edi
  40b698:	outs   dx,BYTE PTR ds:[esi]
  40b69a:	stc    
  40b69b:	mov    eax,ds:0x510b39d6
  40b6a0:	test   DWORD PTR [edi],eax
  40b6a2:	push   edx
  40b6a3:	xchg   ecx,eax
  40b6a4:	mov    BYTE PTR [edx],al
  40b6a6:	push   ds
  40b6a7:	hlt    
  40b6a8:	dec    esp
  40b6a9:	xor    eax,0x5ad9376c
  40b6ae:	cdq    
  40b6af:	jmp    0xb97312c3
  40b6b4:	in     al,0xd5
  40b6b6:	hlt    
  40b6b7:	loope  0x40b6a8
  40b6b9:	mov    al,ds:0xc6671fa6
  40b6be:	sbb    dh,BYTE PTR [edi+0x2195af5b]
  40b6c4:	imul   edx,edi,0xffffffb6
  40b6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c8:	rcr    edi,1
  40b6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6cb:	fsubr  DWORD PTR [edx+0x668d44b7]
  40b6d1:	les    ecx,FWORD PTR [eax-0x6cbe3a9a]
  40b6d7:	mov    edx,0x20e94ff6
  40b6dc:	clc    
  40b6dd:	push   cs
  40b6de:	jnp    0x40b6ee
  40b6e0:	rcr    DWORD PTR [edx],1
  40b6e2:	ret    
  40b6e3:	mov    DWORD PTR [esi-0x1c4d1ad],esp
  40b6e9:	add    ebx,eax
  40b6eb:	dec    esp
  40b6ec:	adc    al,0x84
  40b6ee:	popa   
  40b6ef:	pop    ds
  40b6f0:	gs jl  0x40b6c3
  40b6f3:	push   ds
  40b6f4:	gs aam 0x1
  40b6f7:	outs   dx,BYTE PTR ds:[esi]
  40b6f8:	add    ch,BYTE PTR [esi+eiz*2]
  40b6fb:	jge    0x40b69a
  40b6fd:	add    dl,BYTE PTR [ebx]
  40b6ff:	cmp    DWORD PTR ds:0x98bec04c,esi
  40b705:	cmp    al,0x91
  40b707:	out    0xe7,eax
  40b709:	push   ebp
  40b70a:	jecxz  0x40b6c0
  40b70c:	push   ebp
  40b70d:	ret    
  40b70e:	sub    BYTE PTR [edi-0x51],bl
  40b711:	adc    BYTE PTR [ebp+0x35],dl
  40b714:	adc    esp,edi
  40b716:	jne    0x40b712
  40b718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b719:	test   al,0x5
  40b71b:	push   ebx
  40b71c:	(bad)  
  40b71d:	xchg   DWORD PTR ds:[edx+0x31c80c95],ebp
  40b724:	dec    esp
  40b725:	aaa    
  40b726:	xor    bl,BYTE PTR [esp+esi*1-0x219a272e]
  40b72d:	test   al,0xd2
  40b72f:	or     DWORD PTR [eax],ecx
  40b731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b732:	xchg   edx,eax
  40b733:	adc    eax,0x3d3cd7a9
  40b738:	jmp    0x729594f2
  40b73d:	add    BYTE PTR [ebx],ch
  40b73f:	aam    0xd0
  40b741:	cmp    BYTE PTR [ebx],bh
  40b743:	test   BYTE PTR [ecx],dh
  40b745:	daa    
  40b746:	popa   
  40b747:	add    DWORD PTR [edi+0x32],esp
  40b74a:	jne    0x40b70a
  40b74c:	jecxz  0x40b6d2
  40b74e:	jp     0x40b770
  40b750:	mov    edi,0x85dd81a4
  40b755:	adc    al,BYTE PTR [esi]
  40b757:	(bad)  
  40b758:	sbb    bl,al
  40b75a:	leave  
  40b75b:	sub    eax,0xf2301e9c
  40b760:	int3   
  40b761:	outs   dx,BYTE PTR es:[esi]
  40b763:	enter  0x662a,0xe8
  40b767:	pop    eax
  40b768:	and    al,0xaa
  40b76a:	cmp    esi,DWORD PTR [ebx+ebp*1]
  40b76d:	fild   QWORD PTR [ebp+ecx*4+0x4f39f9e2]
  40b774:	pop    edx
  40b775:	push   ebx
  40b776:	mov    edx,0xaf431608
  40b77b:	outs   dx,DWORD PTR ds:[esi]
  40b77c:	dec    edi
  40b77d:	ret    
  40b77e:	inc    eax
  40b77f:	or     al,0x4c
  40b781:	imul   esi,ebp,0x18
  40b784:	xor    ch,BYTE PTR [eax-0x12]
  40b787:	jg     0x40b78c
  40b789:	into   
  40b78a:	mov    ebp,0x94d534e4
  40b78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b790:	push   ebp
  40b791:	cdq    
  40b792:	xor    al,BYTE PTR [esi+0x2c]
  40b795:	and    edi,edi
  40b797:	lds    eax,FWORD PTR [eax-0x2797034e]
  40b79d:	or     bl,dh
  40b79f:	pop    ecx
  40b7a0:	iret   
  40b7a1:	dec    edx
  40b7a2:	lahf   
  40b7a3:	mov    edx,0x34ecae7b
  40b7a8:	mov    ebx,0xc08105aa
  40b7ad:	leave  
  40b7ae:	dec    edi
  40b7af:	pop    ss
  40b7b0:	aam    0xa3
  40b7b2:	les    esp,FWORD PTR [esi-0x7c2ae04f]
  40b7b8:	dec    esp
  40b7b9:	inc    edi
  40b7ba:	arpl   bx,dx
  40b7bc:	cmp    ah,BYTE PTR [edx]
  40b7be:	cwde   
  40b7bf:	inc    edx
  40b7c0:	inc    edi
  40b7c1:	aad    0x73
  40b7c3:	xchg   esp,eax
  40b7c4:	jmp    0x1c68:0x51ec275a
  40b7cb:	inc    ebp
  40b7cc:	rcl    DWORD PTR ds:[bp+si],1
  40b7d0:	xchg   DWORD PTR [ebp-0x7d07cc44],edx
  40b7d6:	mov    edx,ss
  40b7d8:	loopne 0x40b806
  40b7da:	push   ss
  40b7db:	loop   0x40b7b1
  40b7dd:	loopne 0x40b79d
  40b7df:	mov    eax,ds:0x8335c01c
  40b7e4:	lds    edx,FWORD PTR [ecx+0x32]
  40b7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e9:	add    BYTE PTR [ebp+0x209bc9b5],0x51
  40b7f0:	push   0xffffffdd
  40b7f2:	ds jne 0x40b806
  40b7f5:	mov    dh,0x97
  40b7f7:	fadd   QWORD PTR [esi-0x16d51562]
  40b7fd:	xlat   BYTE PTR ds:[ebx]
  40b7fe:	pop    ds
  40b7ff:	sub    al,0xa2
  40b801:	lock jecxz 0x40b7f4
  40b804:	mov    ebx,0xfd26d4cc
  40b809:	mov    al,ds:0xed838d81
  40b80e:	cld    
  40b80f:	push   ebp
  40b810:	mov    cl,0x28
  40b812:	sub    DWORD PTR [esi+0x6cf2e05b],ebp
  40b818:	ret    
  40b819:	retf   0x35a
  40b81c:	or     ebp,DWORD PTR [ecx-0x44564806]
  40b822:	mov    ebx,0x27ee0c7f
  40b827:	and    al,0x81
  40b829:	dec    ebp
  40b82a:	idiv   ebp
  40b82c:	pop    es
  40b82d:	in     eax,0xb9
  40b82f:	jg     0x40b860
  40b831:	sbb    bl,al
  40b833:	das    
  40b834:	sub    ah,bh
  40b836:	es ins BYTE PTR es:[edi],dx
  40b838:	jnp    0x40b8ae
  40b83a:	xchg   BYTE PTR [eax],ch
  40b83c:	fiadd  DWORD PTR [edx]
  40b83e:	outs   dx,DWORD PTR ds:[esi]
  40b83f:	je     0x40b821
  40b841:	or     ah,al
  40b843:	jmp    0xa87e:0x8128a724
  40b84a:	inc    ebp
  40b84b:	fsubr  DWORD PTR [esi]
  40b84d:	enter  0x7586,0x6f
  40b851:	out    dx,eax
  40b852:	xchg   DWORD PTR [edi],ebp
  40b854:	inc    ebp
  40b855:	mov    al,0x38
  40b857:	jno    0x40b80d
  40b859:	lods   al,BYTE PTR ds:[esi]
  40b85a:	push   0xa37eae7b
  40b85f:	sub    ebp,ebp
  40b861:	int    0xbf
  40b863:	into   
  40b864:	lods   eax,DWORD PTR ds:[esi]
  40b865:	daa    
  40b866:	xor    al,0x41
  40b868:	(bad)  
  40b86b:	mov    eax,DWORD PTR [esp+eax*4+0x54]
  40b86f:	adc    edi,DWORD PTR [edx-0x66]
  40b872:	and    dh,ah
  40b874:	out    dx,al
  40b875:	push   es
  40b876:	jg     0x40b829
  40b878:	and    eax,0xcb1f4fd3
  40b87d:	int    0xb1
  40b87f:	push   0xffffff98
  40b881:	test   DWORD PTR [eax],edx
  40b883:	popf   
  40b884:	adc    eax,0x786c20c3
  40b889:	sar    al,cl
  40b88b:	fsub   DWORD PTR [esi+0x40a7f2bd]
  40b891:	xchg   DWORD PTR [ebx-0x3],edx
  40b894:	sbb    BYTE PTR [esi],bl
  40b896:	jbe    0x40b825
  40b898:	jecxz  0x40b865
  40b89a:	pop    ss
  40b89b:	sub    bl,al
  40b89d:	mov    ah,0x28
  40b89f:	popf   
  40b8a0:	sbb    BYTE PTR [edx],0xf2
  40b8a3:	or     BYTE PTR [edi+ebx*8-0x1ab48c34],ch
  40b8aa:	pop    ss
  40b8ab:	push   es
  40b8ac:	cs mov esi,0x76a38b28
  40b8b2:	xchg   edx,eax
  40b8b3:	xor    al,0xb5
  40b8b5:	mov    ds:0x14479431,eax
  40b8ba:	mov    al,0xa8
  40b8bc:	mov    esi,es
  40b8be:	mov    esp,0x3e19d2ce
  40b8c3:	test   DWORD PTR [ebp-0x6],0x26dc704e
  40b8ca:	push   ds
  40b8cb:	inc    BYTE PTR [ebx-0x73]
  40b8ce:	fidivr WORD PTR [esi-0x4]
  40b8d1:	adc    eax,DWORD PTR [esi+0x5b]
  40b8d4:	jo     0x40b918
  40b8d6:	and    eax,0x9022147c
  40b8db:	pop    es
  40b8dc:	test   BYTE PTR [edx-0x68],dh
  40b8df:	mov    eax,0xe925fc4f
  40b8e4:	in     eax,dx
  40b8e5:	in     eax,dx
  40b8e6:	lahf   
  40b8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e8:	xchg   edi,eax
  40b8e9:	jbe    0x40b8a6
  40b8eb:	ins    DWORD PTR es:[edi],dx
  40b8ec:	xor    al,0x71
  40b8ee:	loopne 0x40b88e
  40b8f0:	sub    ecx,DWORD PTR [ebx+esi*2]
  40b8f3:	cli    
  40b8f4:	pop    eax
  40b8f5:	mov    ds:0x22db1bba,al
  40b8fa:	mov    es,eax
  40b8fc:	jnp    0x40b922
  40b8fe:	(bad)  
  40b8ff:	fisub  WORD PTR [ecx+0x12]
  40b902:	inc    ecx
  40b903:	adc    BYTE PTR ds:0x4cbd2dd4,0x65
  40b90a:	es iret 
  40b90c:	inc    eax
  40b90d:	stc    
  40b90e:	xor    ebx,esp
  40b910:	shr    esi,cl
  40b912:	fstp   TBYTE PTR [ebx]
  40b914:	adc    al,0x1a
  40b916:	stos   DWORD PTR es:[edi],eax
  40b917:	mov    edx,0xb9d3ce9e
  40b91d:	gs cli 
  40b91f:	and    al,0xcf
  40b921:	cmp    al,0x15
  40b923:	pop    ebx
  40b924:	call   0x7305:0xd9fb9bd9
  40b92b:	jns    0x40b922
  40b92d:	out    0xe4,eax
  40b92f:	gs ret 0xc4ad
  40b933:	into   
  40b934:	mov    ebx,0x61b10e5b
  40b939:	add    ecx,DWORD PTR [esi]
  40b93b:	mov    eax,ds:0x58412724
  40b940:	ins    DWORD PTR es:[edi],dx
  40b941:	and    ecx,DWORD PTR [edx-0xa7d2a3]
  40b947:	scas   al,BYTE PTR es:[edi]
  40b948:	out    0x40,al
  40b94a:	repnz push ebp
  40b94c:	xchg   esi,eax
  40b94d:	cmp    BYTE PTR [ebx],dl
  40b94f:	pop    ss
  40b950:	sub    al,0xd
  40b952:	jo     0x40b92e
  40b954:	fdivr  DWORD PTR [ecx-0x66]
  40b957:	aas    
  40b958:	add    BYTE PTR [ebx+0x73],ch
  40b95b:	pop    edx
  40b95c:	std    
  40b95d:	push   edi
  40b95e:	jmp    0x40b945
  40b960:	lea    ecx,[esi+0x1a]
  40b963:	jno    0x40b9ac
  40b965:	pop    DWORD PTR [esi]
  40b967:	retf   0xb53f
  40b96a:	(bad)  [edx+0xd]
  40b96d:	mov    dl,0x89
  40b96f:	inc    ecx
  40b970:	mov    al,ds:0xfa331cd9
  40b975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b976:	sub    eax,0xde8c25f6
  40b97b:	mov    dh,bl
  40b97d:	stos   BYTE PTR es:[edi],al
  40b97e:	xlat   BYTE PTR ds:[ebx]
  40b97f:	stos   DWORD PTR es:[edi],eax
  40b980:	jns    0x40b91d
  40b982:	push   edx
  40b983:	(bad)  
  40b984:	xlat   BYTE PTR ds:[ebx]
  40b985:	sbb    BYTE PTR [ebx+ebp*8-0x5d],ah
  40b989:	jecxz  0x40b987
  40b98b:	loop   0x40b9c7
  40b98d:	outs   dx,DWORD PTR ds:[esi]
  40b98e:	push   0xffffff92
  40b990:	xchg   edi,eax
  40b991:	xor    eax,0x83b768d
  40b996:	loopne 0x40b9fa
  40b998:	or     DWORD PTR [ebp+0x3],esi
  40b99b:	adc    eax,0x9b4c03b1
  40b9a0:	jl     0x40b96a
  40b9a2:	jmp    0xda3b:0xed57f971
  40b9a9:	js     0x40b9ed
  40b9ab:	mov    cl,BYTE PTR [eax+0xb]
  40b9ae:	jno    0x40b974
  40b9b0:	mov    edx,0x5c8370ab
  40b9b5:	and    esi,ebx
  40b9b7:	and    BYTE PTR [ebx-0x75f5cac8],dh
  40b9bd:	in     al,0x52
  40b9bf:	jbe    0x40b9ab
  40b9c1:	retf   0x501e
  40b9c4:	sbb    ch,BYTE PTR [edx+0x2d]
  40b9c7:	xchg   ebp,eax
  40b9c8:	dec    ebp
  40b9c9:	call   0xd10ad297
  40b9ce:	jg     0x40b96a
  40b9d0:	popa   
  40b9d1:	push   cs
  40b9d2:	pop    ebp
  40b9d3:	(bad)  
  40b9d4:	jmp    0x3307:0x5f5332bd
  40b9db:	cmp    DWORD PTR ds:0x77d7a61c,ebp
  40b9e1:	dec    ecx
  40b9e2:	inc    ebp
  40b9e3:	imul   esi,DWORD PTR [edi-0x7c25833b],0xcaad9fbb
  40b9ed:	shl    BYTE PTR [eax+0x6475a6df],0x16
  40b9f4:	aam    0x14
  40b9f6:	mov    WORD PTR [ebp+0x71],ss
  40b9f9:	adc    dl,BYTE PTR [edx+ebx*2+0x546df555]
  40ba00:	or     cl,BYTE PTR [esi+0x17]
  40ba03:	inc    edi
  40ba04:	fld    TBYTE PTR [esi-0x33]
  40ba07:	cmp    ch,al
  40ba09:	enter  0xd0d1,0xf
  40ba0d:	and    al,0x4c
  40ba0f:	push   edi
  40ba10:	(bad)  
  40ba12:	data16 mov ch,0x75
  40ba15:	fdivrp st(7),st
  40ba17:	loope  0x40b9cb
  40ba19:	pcmpeqd mm2,QWORD PTR ds:0x11189ccb
  40ba20:	push   eax
  40ba21:	push   esi
  40ba22:	ins    BYTE PTR es:[edi],dx
  40ba23:	xor    DWORD PTR [edi+ebp*1+0x47],ecx
  40ba27:	jg     0x40ba59
  40ba29:	add    BYTE PTR [ebx+0x6e],ah
  40ba2c:	xchg   esp,eax
  40ba2d:	loopne 0x40b9f8
  40ba2f:	pop    ds
  40ba30:	push   cs
  40ba31:	add    BYTE PTR [edx],bh
  40ba33:	mov    esp,0x2759ba4f
  40ba38:	add    DWORD PTR [esp+ebp*2-0x6d],esp
  40ba3c:	mov    al,0x70
  40ba3e:	or     BYTE PTR [ebp-0x3f],ch
  40ba41:	inc    ecx
  40ba42:	ins    BYTE PTR es:[edi],dx
  40ba43:	lods   al,BYTE PTR ds:[esi]
  40ba44:	lock stc 
  40ba46:	xchg   bl,ch
  40ba48:	loope  0x40ba57
  40ba4a:	or     BYTE PTR [eax-0x27],bh
  40ba4d:	sbb    eax,0x2dc603f9
  40ba52:	xor    BYTE PTR [ecx],cl
  40ba54:	pop    es
  40ba55:	adc    dl,0x5
  40ba58:	ficomp DWORD PTR [edi]
  40ba5a:	(bad)  
  40ba5b:	cld    
  40ba5c:	enter  0x6aae,0xb4
  40ba60:	pop    ss
  40ba61:	cmp    al,0x76
  40ba63:	cmp    edx,DWORD PTR [ecx+0x7012ea3c]
  40ba69:	push   cs
  40ba6a:	add    edx,esi
  40ba6c:	dec    ecx
  40ba6d:	lods   eax,DWORD PTR ds:[esi]
  40ba6e:	js     0x40ba44
  40ba70:	retf   0xa57e
  40ba73:	pop    ebp
  40ba74:	xor    eax,0xb6aadd2d
  40ba79:	mov    eax,ds:0x28de601b
  40ba7e:	int    0xe6
  40ba80:	popa   
  40ba81:	push   esi
  40ba82:	(bad)  
  40ba83:	pop    edi
  40ba84:	div    DWORD PTR [ecx-0x1e]
  40ba87:	dec    ecx
  40ba88:	adc    cl,al
  40ba8a:	test   DWORD PTR [ecx+0x2a9db295],0xf38031a1
  40ba94:	mov    edx,0x8da4eea7
  40ba99:	pop    ss
  40ba9a:	cmc    
  40ba9b:	sub    eax,0xe531841f
  40baa0:	push   0x1d
  40baa2:	int3   
  40baa3:	test   eax,0x51227889
  40baa8:	push   edi
  40baa9:	or     edx,DWORD PTR [esi]
  40baab:	and    eax,0x5b2e34d8
  40bab0:	mov    edi,0x8c8662dd
  40bab5:	popa   
  40bab6:	cmp    DWORD PTR [ecx+0x38],eax
  40bab9:	mov    ch,0x4b
  40babb:	(bad)  
  40babc:	imul   ebx,edx,0x6e
  40babf:	pop    ebx
  40bac0:	jnp    0x40baf7
  40bac2:	mov    eax,0x2347b470
  40bac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac8:	rcl    DWORD PTR ds:0xbff30401,1
  40bace:	inc    eax
  40bacf:	jae    0x40ba9c
  40bad1:	int    0x16
  40bad3:	pop    es
  40bad4:	sahf   
  40bad5:	repz test BYTE PTR [eax+0x27ba7907],bl
  40badc:	and    DWORD PTR [eax-0x9ccb3bd],ebp
  40bae2:	stc    
  40bae3:	lods   eax,DWORD PTR ds:[esi]
  40bae4:	sub    BYTE PTR [edx+0xcf11be0],ch
  40baea:	cmp    edx,DWORD PTR [ebp+0x195bba9a]
  40baf0:	aad    0xf3
  40baf2:	pop    esp
  40baf3:	add    DWORD PTR [esi-0x479312bf],eax
  40baf9:	into   
  40bafa:	sub    BYTE PTR [edx],0x7
  40bafd:	jo     0x40bb5d
  40baff:	sar    BYTE PTR [ecx-0x66],cl
  40bb02:	push   esi
  40bb03:	test   ebp,eax
  40bb05:	jle    0x40bb44
  40bb07:	les    esi,FWORD PTR [edi-0x5]
  40bb0a:	sbb    ebp,DWORD PTR [ebx-0x740f3c14]
  40bb10:	js     0x40ba92
  40bb12:	cmp    bh,ah
  40bb14:	lods   eax,DWORD PTR ds:[esi]
  40bb15:	add    BYTE PTR [eax-0x58],dl
  40bb18:	mov    ebx,ss
  40bb1a:	dec    ebp
  40bb1b:	inc    esi
  40bb1c:	jmp    0x4e92:0x9965588d
  40bb23:	out    0xbf,al
  40bb25:	push   ebx
  40bb26:	add    al,0xbd
  40bb28:	enter  0xd7e7,0xef
  40bb2c:	fcomip st,st(7)
  40bb2e:	out    dx,eax
  40bb2f:	aam    0xaf
  40bb31:	addr16 lahf 
  40bb33:	retf   0x9a75
  40bb36:	mov    BYTE PTR [edx-0x14c017a5],dh
  40bb3c:	push   eax
  40bb3d:	call   0x2e13:0x472a051f
  40bb44:	xor    al,0xbe
  40bb46:	mov    WORD PTR [ebx],?
  40bb48:	pop    edi
  40bb49:	loop   0x40bb74
  40bb4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb4c:	jae    0x40bb87
  40bb4e:	push   eax
  40bb4f:	pop    esp
  40bb50:	test   eax,0x732860dd
  40bb55:	clc    
  40bb56:	test   BYTE PTR [edx+0xb807207],ah
  40bb5c:	(bad)  
  40bb5d:	cmp    al,0x11
  40bb5f:	imul   eax,DWORD PTR [ebx+0x242eaab],0x91d1cbe0
  40bb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6a:	dec    edi
  40bb6b:	cld    
  40bb6c:	dec    eax
  40bb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6e:	xchg   edi,eax
  40bb6f:	aad    0xc3
  40bb71:	mov    ebx,ecx
  40bb73:	jecxz  0x40bb2f
  40bb75:	mov    esp,0x16e4574e
  40bb7a:	dec    esp
  40bb7b:	push   ss
  40bb7c:	in     al,0xab
  40bb7e:	push   edi
  40bb7f:	repz push 0x33546892
  40bb85:	std    
  40bb86:	mov    eax,0x68487734
  40bb8b:	cs jo  0x40bb5c
  40bb8e:	pop    ss
  40bb8f:	int3   
  40bb90:	rol    DWORD PTR [edx-0x2c563692],1
  40bb96:	push   ds
  40bb97:	inc    esi
  40bb98:	retf   0x4606
  40bb9b:	iret   
  40bb9c:	jb     0x40bb9e
  40bb9e:	stc    
  40bb9f:	or     eax,0x644ddcc2
  40bba4:	(bad)  
  40bba5:	(bad)  
  40bba6:	scas   eax,DWORD PTR es:[edi]
  40bba7:	jns    0x40bb62
  40bba9:	xor    eax,0x1af4a54f
  40bbae:	ret    0xd349
  40bbb1:	imul   eax,DWORD PTR [edi+ebx*1+0xa],0xa6557ce2
  40bbb9:	out    0x11,eax
  40bbbb:	push   esp
  40bbbc:	or     esi,DWORD PTR [esi]
  40bbbe:	test   ah,ah
  40bbc0:	jg     0x40bbd7
  40bbc2:	ret    0xc61a
  40bbc5:	aad    0xc7
  40bbc7:	fsubr  QWORD PTR [ecx+0x40]
  40bbca:	mov    edi,0x4fc69aa7
  40bbcf:	js     0x40bb6d
  40bbd1:	icebp  
  40bbd2:	daa    
  40bbd3:	enter  0x7973,0x1e
  40bbd7:	dec    edi
  40bbd8:	call   0x6193:0xe60c8806
  40bbdf:	dec    esi
  40bbe0:	cmp    ebx,DWORD PTR [ebx+0x13d4ef84]
  40bbe6:	or     cl,ch
  40bbe8:	push   ecx
  40bbe9:	push   es
  40bbea:	push   ecx
  40bbeb:	mov    bh,0x6
  40bbed:	das    
  40bbee:	(bad)  
  40bbef:	out    0xa1,al
  40bbf1:	ror    DWORD PTR [ecx-0x6],cl
  40bbf4:	mov    dh,0x7e
  40bbf6:	call   0xd260de20
  40bbfb:	mov    WORD PTR [edi+0x3cb7bfec],ss
  40bc01:	in     eax,dx
  40bc02:	xchg   esp,eax
  40bc03:	or     al,0xc3
  40bc05:	sahf   
  40bc06:	sbb    edi,DWORD PTR [edi]
  40bc08:	or     al,0x58
  40bc0a:	push   esi
  40bc0b:	jbe    0x40bbdf
  40bc0d:	push   edx
  40bc0e:	pop    ebx
  40bc0f:	dec    edx
  40bc10:	xor    eax,0x50d2bfc2
  40bc15:	inc    ebx
  40bc16:	shr    DWORD PTR [ebp-0x39b1d56c],cl
  40bc1c:	add    al,bl
  40bc1e:	fnstcw WORD PTR [esi-0x3a]
  40bc21:	push   edi
  40bc22:	test   eax,0xfd505f06
  40bc27:	fbld   TBYTE PTR [ebp+0x57]
  40bc2a:	mov    ah,0xa7
  40bc2c:	loope  0x40bbc5
  40bc2e:	jo     0x40bc1f
  40bc30:	sar    DWORD PTR [edx],0xac
  40bc33:	add    al,0xec
  40bc35:	sub    al,0xd5
  40bc37:	dec    ebp
  40bc38:	mov    esp,0x26dff814
  40bc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3e:	mov    ecx,0x662f5e5
  40bc43:	cdq    
  40bc44:	jb     0x40bcbd
  40bc46:	outs   dx,DWORD PTR ds:[esi]
  40bc47:	sahf   
  40bc48:	ja     0x40bcae
  40bc4a:	rol    al,cl
  40bc4c:	ret    0xb2d6
  40bc4f:	xchg   ebp,eax
  40bc50:	mov    cl,BYTE PTR [esi+0x124c64c5]
  40bc56:	xlat   BYTE PTR ds:[ebx]
  40bc57:	mov    ebx,0xd59384a4
  40bc5c:	int    0x8b
  40bc5e:	les    esi,FWORD PTR [ebx+0x371a2c37]
  40bc64:	mov    ebx,DWORD PTR [ecx]
  40bc66:	scas   eax,DWORD PTR es:[edi]
  40bc67:	xor    ebx,ecx
  40bc69:	scas   al,BYTE PTR es:[edi]
  40bc6a:	inc    edi
  40bc6b:	inc    edx
  40bc6c:	cmp    al,0x6c
  40bc6e:	(bad)  
  40bc6f:	push   ebp
  40bc70:	in     eax,0xe9
  40bc72:	(bad)  
  40bc73:	jle    0x40bbfb
  40bc75:	jae    0x40bc68
  40bc77:	add    BYTE PTR [ecx+0x71d1a319],bh
  40bc7d:	sub    al,0x9b
  40bc7f:	jo     0x40bc2a
  40bc81:	sbb    DWORD PTR [esi-0x48],edi
  40bc84:	imul   ecx,DWORD PTR [ebx+0x47],0x62
  40bc88:	leave  
  40bc89:	clc    
  40bc8a:	mov    BYTE PTR [eax+0x16df6e78],bl
  40bc90:	das    
  40bc91:	mov    ch,0x51
  40bc93:	leave  
  40bc94:	ror    DWORD PTR ds:[ebp+0x20d9c9cf],cl
  40bc9b:	fucom  st(7)
  40bc9d:	and    DWORD PTR [eax],0xa8c187af
  40bca3:	inc    ebp
  40bca4:	xchg   edi,eax
  40bca5:	push   0x60508346
  40bcaa:	mov    ebp,0x8d88d65a
  40bcaf:	push   ecx
  40bcb0:	test   BYTE PTR [esi-0x2b692a4d],al
  40bcb6:	mov    al,ds:0x7fcc0189
  40bcbb:	and    ch,0x3e
  40bcbe:	xchg   edi,eax
  40bcbf:	mov    ch,0xb9
  40bcc1:	test   BYTE PTR [esi+0x5a803a8b],bl
  40bcc7:	(bad)  [esi]
  40bcc9:	and    al,BYTE PTR [edi]
  40bccb:	clc    
  40bccc:	mov    ch,0xfa
  40bcce:	push   ebx
  40bccf:	imul   ebp,DWORD PTR [ebp-0x18db187a],0x9bc7282c
  40bcd9:	cdq    
  40bcda:	jb     0x40bd46
  40bcdc:	cmp    DWORD PTR [ebp+0x20],ebx
  40bcdf:	mov    dh,BYTE PTR [eax+edi*2+0x575a8fcf]
  40bce6:	or     BYTE PTR [ecx],dh
  40bce8:	jbe    0x40bc9a
  40bcea:	dec    esi
  40bceb:	mov    edi,esp
  40bced:	mov    edx,0x11800eac
  40bcf2:	sti    
  40bcf3:	leave  
  40bcf4:	cmp    al,0x94
  40bcf6:	push   es
  40bcf7:	mov    ebx,0x9a083e14
  40bcfc:	inc    esi
  40bcfd:	(bad)  
  40bcfe:	inc    ecx
  40bcff:	jle    0x40bcd5
  40bd01:	in     al,dx
  40bd02:	jae    0x40bd23
  40bd04:	dec    esp
  40bd05:	jmp    0x5cce5fae
  40bd0a:	add    al,0x47
  40bd0c:	int    0x47
  40bd0e:	arpl   WORD PTR [edx+0x6a0ba11a],si
  40bd14:	shr    DWORD PTR [esi+0x33bc3b29],0x62
  40bd1b:	addr16 repz (bad) 
  40bd1e:	pop    edi
  40bd1f:	sbb    ebx,DWORD PTR ds:0xc477b70b
  40bd25:	xor    eax,0xea1e6593
  40bd2a:	test   BYTE PTR [edi+0x0],bh
  40bd2d:	pop    ebp
  40bd2e:	fst    QWORD PTR [esi+0x11]
  40bd31:	fnstenv [ecx]
  40bd33:	push   ebx
  40bd34:	add    ebx,ebx
  40bd36:	call   0x497e:0xcd368fa2
  40bd3d:	jge    0x40bd46
  40bd3f:	mul    DWORD PTR [edx]
  40bd41:	mov    dl,0xe4
  40bd43:	mov    al,ds:0xf2ef6105
  40bd48:	jge    0x40bd35
  40bd4a:	lods   eax,DWORD PTR ds:[esi]
  40bd4b:	and    BYTE PTR [ecx+eax*4+0x1c22b13b],ah
  40bd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd53:	cs xchg esp,eax
  40bd55:	or     al,0xdd
  40bd57:	stc    
  40bd58:	test   DWORD PTR [edi-0x3d],edx
  40bd5b:	sbb    esp,DWORD PTR [edx+0x2c]
  40bd5e:	aam    0xa2
  40bd60:	mov    esp,0xcaec05f7
  40bd65:	xchg   esi,eax
  40bd66:	push   0x4a
  40bd68:	mov    ds:0x8204c353,al
  40bd6d:	test   DWORD PTR [esp+esi*2+0x1a375ba5],ebx
  40bd74:	cmp    ebx,DWORD PTR [esi-0x426149b3]
  40bd7a:	out    0xf9,eax
  40bd7c:	js     0x40bd75
  40bd7e:	or     ah,BYTE PTR ds:0xf1a66e52
  40bd84:	aam    0xdd
  40bd86:	stos   BYTE PTR es:[edi],al
  40bd87:	sbb    bl,ah
  40bd89:	ins    BYTE PTR es:[edi],dx
  40bd8a:	dec    ebp
  40bd8b:	mul    BYTE PTR [ebx]
  40bd8d:	mov    ds:0x5585f228,eax
  40bd92:	neg    BYTE PTR [edi+0x37c9502e]
  40bd98:	ficom  WORD PTR [esi+0x2e]
  40bd9b:	cmp    BYTE PTR [edx+0x36],ah
  40bd9e:	fcomp  st(5)
  40bda0:	popa   
  40bda1:	fistp  DWORD PTR [ebx-0x61]
  40bda4:	fdivr  QWORD PTR [edx+ebp*1]
  40bda7:	ins    DWORD PTR es:[edi],dx
  40bda8:	or     bh,BYTE PTR [edx-0x5b5d58e6]
  40bdae:	cmp    BYTE PTR [edx-0x596b5cd2],ch
  40bdb4:	push   edi
  40bdb5:	test   al,0x96
  40bdb7:	fwait
  40bdb8:	xchg   ecx,eax
  40bdb9:	add    eax,0x8c355898
  40bdbe:	sbb    BYTE PTR [edi-0xd42f900],al
  40bdc4:	mov    dl,0xb2
  40bdc6:	ror    cl,1
  40bdc8:	scas   al,BYTE PTR es:[edi]
  40bdc9:	ins    DWORD PTR es:[edi],dx
  40bdca:	sbb    ch,BYTE PTR [ecx+0x397a9012]
  40bdd0:	xor    eax,DWORD PTR [ecx-0x8]
  40bdd3:	sub    dh,BYTE PTR [esi+edx*1+0x31]
  40bdd7:	xlat   BYTE PTR ds:[ebx]
  40bdd8:	pop    esp
  40bdd9:	out    dx,eax
  40bdda:	dec    esp
  40bddb:	xlat   BYTE PTR ds:[ebx]
  40bddc:	and    eax,DWORD PTR [edi]
  40bdde:	jge    0x40bd7c
  40bde0:	jg     0x40bd69
  40bde2:	xchg   DWORD PTR [ecx],ebp
  40bde4:	stc    
  40bde5:	and    DWORD PTR [ebx+0x20fcc58a],0x2a
  40bdec:	sbb    ebp,DWORD PTR [edx]
  40bdee:	retf   
  40bdef:	xchg   ebx,eax
  40bdf0:	mov    ebx,0x28b533a7
  40bdf5:	arpl   WORD PTR [ecx],sp
  40bdf7:	fdivr  DWORD PTR [ebx+0x71]
  40bdfa:	mov    bl,0x60
  40bdfc:	dec    esp
  40bdfd:	pusha  
  40bdfe:	loop   0x40be65
  40be00:	retf   
  40be01:	jne    0x40be7b
  40be03:	dec    esp
  40be04:	or     BYTE PTR [esp+eiz*8],dh
  40be07:	pop    eax
  40be08:	stc    
  40be09:	push   edx
  40be0a:	add    BYTE PTR [ebx],dl
  40be0c:	mov    dl,0xa5
  40be0e:	pop    edx
  40be0f:	push   ds
  40be10:	inc    ecx
  40be11:	mov    bh,0x31
  40be13:	mov    esp,cs
  40be15:	scas   eax,DWORD PTR es:[edi]
  40be16:	idiv   DWORD PTR [ebp+0xf]
  40be19:	(bad)  
  40be1a:	repz dec ebp
  40be1c:	or     BYTE PTR [edx+0x19ce2533],dl
  40be22:	ins    BYTE PTR es:[edi],dx
  40be23:	sub    al,0x41
  40be25:	or     BYTE PTR [ecx-0xb3f0eca],ah
  40be2b:	and    cl,al
  40be2d:	add    eax,0x85a03361
  40be32:	pop    ss
  40be33:	push   edi
  40be34:	xchg   ebp,eax
  40be35:	sbb    edx,DWORD PTR [edx]
  40be37:	dec    ebx
  40be38:	dec    esp
  40be39:	dec    ebp
  40be3a:	sub    DWORD PTR [edx+edi*1+0x641f1a05],ecx
  40be41:	mov    BYTE PTR [ecx-0x489a3d21],dl
  40be47:	jl     0x40beb0
  40be49:	push   cs
  40be4a:	lods   al,BYTE PTR ds:[esi]
  40be4b:	sbb    BYTE PTR [esi-0x672f9071],dl
  40be51:	test   DWORD PTR [ecx],edi
  40be53:	les    ebp,FWORD PTR [edi]
  40be55:	test   DWORD PTR [ebx+0x5f],edi
  40be58:	cmp    al,BYTE PTR es:[ecx-0x4]
  40be5c:	mov    dl,0x5e
  40be5e:	add    edi,DWORD PTR [edi-0x15db4749]
  40be64:	inc    esp
  40be65:	xor    al,cl
  40be67:	push   ebp
  40be68:	mov    ebx,0xabf4b0f2
  40be6d:	fisttp QWORD PTR [ebx+0x18]
  40be70:	add    eax,0x2b61753b
  40be75:	and    esp,DWORD PTR [ebp-0x33]
  40be78:	jno    0x40be4b
  40be7a:	stc    
  40be7b:	(bad)  
  40be7c:	sti    
  40be7d:	daa    
  40be7e:	jns    0x40be0d
  40be80:	xor    ebx,DWORD PTR [edx+0x34af888a]
  40be86:	mov    al,ds:0xc01be6b0
  40be8b:	pop    ds
  40be8c:	jno    0x40bea9
  40be8e:	ret    0xe074
  40be91:	and    eax,0x60ccd104
  40be96:	mov    es,WORD PTR [edx-0x5b]
  40be99:	pop    esi
  40be9a:	mov    dh,0x44
  40be9c:	in     al,dx
  40be9d:	loopne 0x40be8c
  40be9f:	stos   BYTE PTR es:[edi],al
  40bea0:	sbb    eax,0xa3d9558e
  40bea5:	jns    0x40bec7
  40bea7:	call   0x1f1f:0xcc8cfcb2
  40beae:	inc    edx
  40beaf:	and    ebp,DWORD PTR [esi+0x2f622fad]
  40beb5:	clc    
  40beb6:	ja     0x40be38
  40beb8:	inc    esp
  40beb9:	jmp    FWORD PTR [edx+0x1f]
  40bebc:	mov    al,0x6
  40bebe:	adc    eax,0x85b9d482
  40bec3:	xchg   esi,eax
  40bec4:	jl     0x40bf29
  40bec6:	stc    
  40bec7:	mov    cl,0xbb
  40bec9:	push   eax
  40beca:	push   esi
  40becb:	jp     0x40bed7
  40becd:	or     bl,bl
  40becf:	pusha  
  40bed0:	mov    ecx,0x112201c
  40bed5:	sahf   
  40bed6:	hlt    
  40bed7:	inc    esp
  40bed8:	push   esp
  40bed9:	mov    dl,0xc8
  40bedb:	jp     0x40bef2
  40bedd:	pop    edx
  40bede:	out    dx,al
  40bedf:	mov    bh,0x4a
  40bee1:	aam    0x1d
  40bee3:	lock pushf 
  40bee5:	les    edx,FWORD PTR [edx-0x45cf0d12]
  40beeb:	jmp    0xf4caa46b
  40bef0:	(bad)  
  40bef1:	cld    
  40bef2:	jno    0x40bee0
  40bef4:	and    dh,BYTE PTR [edi-0x1699016d]
  40befa:	adc    ch,ah
  40befc:	loope  0x40bf52
  40befe:	in     eax,dx
  40beff:	mov    ds:0xe684b1a1,eax
  40bf04:	or     bl,BYTE PTR [eax+0x5e980724]
  40bf0a:	mov    dl,BYTE PTR [edi-0x7f]
  40bf0d:	jb     0x40bf43
  40bf0f:	cmp    BYTE PTR [ebx+0x43767e2],0xe7
  40bf16:	dec    ebx
  40bf17:	push   ecx
  40bf18:	xchg   ebp,eax
  40bf19:	in     eax,dx
  40bf1a:	xchg   edi,eax
  40bf1b:	in     eax,dx
  40bf1c:	and    bl,BYTE PTR [edx+eax*8]
  40bf1f:	jg     0x40bf38
  40bf21:	pop    edx
  40bf22:	loopne 0x40bf6e
  40bf24:	es je  0x40bf8a
  40bf27:	pop    edx
  40bf28:	mov    esp,DWORD PTR [esi]
  40bf2a:	(bad)  [eax+eax*8-0x34]
  40bf2e:	or     ah,dh
  40bf30:	jge    0x40bebe
  40bf32:	pop    ebx
  40bf33:	xchg   ebx,eax
  40bf34:	dec    esi
  40bf35:	ins    DWORD PTR es:[edi],dx
  40bf36:	jno    0x40bf51
  40bf38:	push   ss
  40bf39:	das    
  40bf3a:	mov    edx,0xb23a0455
  40bf3f:	mov    ds:0x30f5c257,al
  40bf44:	sub    eax,0xfb64282f
  40bf49:	(bad)  
  40bf4b:	pusha  
  40bf4c:	stc    
  40bf4d:	fs cmc 
  40bf4f:	std    
  40bf50:	sub    bl,dl
  40bf52:	leave  
  40bf53:	push   ss
  40bf54:	js     0x40bf3b
  40bf56:	add    eax,0x5c2af16a
  40bf5b:	retf   0xa242
  40bf5e:	dec    ebx
  40bf5f:	les    ecx,FWORD PTR [edx+0x5657866a]
  40bf65:	jmp    0x40bf60
  40bf67:	aam    0xd5
  40bf69:	es jno 0x40bf93
  40bf6c:	lods   eax,DWORD PTR ds:[esi]
  40bf6d:	or     BYTE PTR [ecx+0x8],0xf5
  40bf71:	addr16 xchg ebx,eax
  40bf73:	fdiv   st,st(7)
  40bf75:	xchg   ebx,eax
  40bf76:	std    
  40bf77:	je     0x40bf83
  40bf79:	lock fisub WORD PTR [edx+0x23366bf3]
  40bf80:	mov    esp,0xa25d97a
  40bf85:	cmp    ebx,DWORD PTR [ebp-0x383c202b]
  40bf8b:	and    al,BYTE PTR ds:0x1647659
  40bf91:	push   eax
  40bf92:	xchg   edx,eax
  40bf93:	mov    ebp,0x2bad23a
  40bf98:	in     al,dx
  40bf99:	add    BYTE PTR [ecx+0x6d55066a],al
  40bf9f:	jmp    0x40c008
  40bfa1:	int    0x4e
  40bfa3:	xor    esp,DWORD PTR [esi-0x39]
  40bfa6:	sti    
  40bfa7:	and    eax,0x878a8f4f
  40bfac:	mov    eax,ds:0xf08a76cd
  40bfb1:	arpl   WORD PTR [ebx-0x42fcec64],dx
  40bfb7:	dec    esp
  40bfb8:	xor    al,0xb3
  40bfba:	adc    ah,BYTE PTR [ebp-0x15a35653]
  40bfc0:	out    dx,al
  40bfc1:	jnp    0x40bfac
  40bfc3:	fimul  DWORD PTR [edx-0x18cf56b]
  40bfc9:	jecxz  0x40bf5c
  40bfcb:	je     0x40c02c
  40bfcd:	inc    ebx
  40bfce:	pop    ss
  40bfcf:	and    DWORD PTR [edi-0x6fa1081e],esp
  40bfd5:	call   0xa317:0x85beab3d
  40bfdc:	icebp  
  40bfdd:	ror    BYTE PTR [ebp-0x46e69de6],0xc2
  40bfe4:	hlt    
  40bfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfe6:	adc    eax,0xd8be639e
  40bfeb:	ret    0x9a01
  40bfee:	add    ecx,esp
  40bff0:	pop    ebx
  40bff1:	mov    edx,0x11fa0db9
  40bff6:	xchg   edi,eax
  40bff7:	(bad)  ds:0x67be85ad
  40bffd:	in     eax,0x16
  40bfff:	cmp    ah,bh
  40c001:	out    dx,al
  40c002:	ins    DWORD PTR es:[edi],dx
  40c003:	xor    BYTE PTR [edi],0x28
  40c006:	fidiv  WORD PTR [edx]
  40c008:	mov    ds,WORD PTR [edi+ebx*8+0x1e75d4b1]
  40c00f:	sbb    ebx,DWORD PTR [ecx-0x3483c4dc]
  40c015:	sub    dl,BYTE PTR [esi]
  40c017:	cmp    DWORD PTR [ebp+0x66],ebx
  40c01a:	and    al,0xb9
  40c01c:	add    DWORD PTR [edx-0x7b],ebp
  40c01f:	dec    edi
  40c020:	into   
  40c021:	inc    edx
  40c022:	cdq    
  40c023:	xlat   BYTE PTR ds:[ebx]
  40c024:	dec    ebx
  40c025:	sar    DWORD PTR es:[esi-0x7e],0xfd
  40c02a:	pop    edx
  40c02b:	out    0x25,eax
  40c02d:	xchg   edi,eax
  40c02e:	jmp    0x3be3:0x956916f0
  40c035:	push   ebx
  40c036:	dec    edx
  40c037:	xor    DWORD PTR [ebp+0x531eed91],edx
  40c03d:	mov    eax,0x6d8725c9
  40c042:	pop    eax
  40c043:	pop    edx
  40c044:	lock xor eax,0x2c3df2cb
  40c04a:	aam    0x15
  40c04c:	mov    dl,0x8c
  40c04e:	xchg   edx,eax
  40c04f:	in     eax,dx
  40c050:	and    DWORD PTR [eax-0x6],0x469d8d5e
  40c057:	xlat   BYTE PTR ds:[ebx]
  40c058:	psubusb mm7,QWORD PTR [esi+0x56fd5143]
  40c05f:	sbb    edx,ebp
  40c061:	inc    esp
  40c062:	nop
  40c063:	mov    eax,0x39f22b06
  40c068:	mov    cl,0x2b
  40c06a:	popa   
  40c06b:	jmp    0x40c00c
  40c06d:	mov    ch,0xf2
  40c06f:	cmp    DWORD PTR [esi],esi
  40c071:	and    ebx,DWORD PTR [edi]
  40c073:	push   esi
  40c074:	in     al,0x55
  40c076:	cmp    ah,BYTE PTR [edi]
  40c078:	mov    esi,0x715f636b
  40c07d:	cmc    
  40c07e:	out    dx,al
  40c07f:	inc    edi
  40c080:	scas   eax,DWORD PTR es:[edi]
  40c081:	adc    DWORD PTR [ebx-0x17710e3e],ebx
  40c087:	and    cl,al
  40c089:	jg     0x40c0c3
  40c08b:	push   0x53ac47fd
  40c090:	or     esi,DWORD PTR [eax+0x779374c9]
  40c096:	mov    al,ds:0xa589eada
  40c09b:	call   0xc:0x5316b911
  40c0a2:	push   esi
  40c0a3:	jo     0x40c0d7
  40c0a5:	shl    DWORD PTR [esi-0x4edae1de],1
  40c0ab:	iret   
  40c0ac:	std    
  40c0ad:	xchg   edi,eax
  40c0ae:	(bad)  
  40c0af:	lahf   
  40c0b0:	sar    ebp,cl
  40c0b2:	test   al,0xb6
  40c0b4:	xchg   esi,eax
  40c0b5:	jle    0x40c044
  40c0b7:	xor    al,0x9a
  40c0b9:	dec    esp
  40c0ba:	ret    
  40c0bb:	not    DWORD PTR [esi-0x2dfb85f2]
  40c0c1:	lahf   
  40c0c2:	cwde   
  40c0c3:	sbb    esi,ebx
  40c0c5:	xchg   edi,eax
  40c0c6:	jecxz  0x40c0c1
  40c0c8:	mov    edx,cs
  40c0ca:	es or  al,0x93
  40c0cd:	ret    
  40c0ce:	int3   
  40c0cf:	pop    esi
  40c0d0:	imul   ebp,DWORD PTR [ebp-0x40cd7c32],0xaf862a3e
  40c0da:	test   al,0xfa
  40c0dc:	pop    ss
  40c0dd:	scas   eax,DWORD PTR es:[edi]
  40c0de:	cmp    dl,BYTE PTR [ecx-0x48]
  40c0e1:	mov    BYTE PTR [ebp+0x4d6fc796],dh
  40c0e7:	fwait
  40c0e8:	sub    esp,DWORD PTR [esi-0x7]
  40c0eb:	mov    ch,0x92
  40c0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ee:	mul    BYTE PTR [ecx-0x51]
  40c0f1:	imul   esp,DWORD PTR [esi+0x33],0xc0f20d87
  40c0f8:	mov    esi,0x25595cd4
  40c0fd:	or     eax,0x5261e191
  40c102:	and    BYTE PTR ds:0x2880f0b0,ah
  40c108:	mov    ch,0x3
  40c10a:	sbb    al,0x5d
  40c10c:	sbb    ebx,esp
  40c10e:	pop    ebx
  40c10f:	jno    0x40c10a
  40c111:	in     al,dx
  40c112:	mov    edi,0x6d3e98cd
  40c117:	jp     0x40c10a
  40c119:	aaa    
  40c11a:	cwde   
  40c11b:	stos   BYTE PTR es:[edi],al
  40c11c:	cmp    bl,BYTE PTR [ebx+0x174bbae6]
  40c122:	cmc    
  40c123:	inc    edi
  40c124:	sbb    BYTE PTR [ecx],0x1
  40c127:	dec    edx
  40c128:	dec    edx
  40c129:	adc    esp,DWORD PTR [ecx]
  40c12b:	arpl   WORD PTR [ecx+0x5dec9358],cx
  40c131:	sbb    esi,ebx
  40c133:	sahf   
  40c134:	cmc    
  40c135:	mov    edx,0x33b7c008
  40c13a:	sbb    edx,DWORD PTR [ecx]
  40c13c:	ja     0x40c135
  40c13e:	ror    DWORD PTR [edi-0x32],cl
  40c141:	clc    
  40c142:	dec    ebp
  40c143:	pop    esp
  40c144:	mov    bl,0x11
  40c146:	mov    BYTE PTR [edi-0xa],al
  40c149:	add    al,BYTE PTR [ebp-0x56cd2bca]
  40c14f:	push   esp
  40c150:	cmp    al,cl
  40c152:	or     eax,0xd5472d13
  40c157:	addr16 aaa 
  40c159:	pop    edi
  40c15a:	jp     0x40c15a
  40c15c:	outs   dx,BYTE PTR ds:[esi]
  40c15d:	sub    eax,0x17bb5003
  40c162:	mov    ebx,0x8d1a22fa
  40c167:	jne    0x40c11f
  40c169:	inc    esi
  40c16a:	mov    edx,ebx
  40c16c:	pop    ss
  40c16d:	jecxz  0x40c195
  40c16f:	push   ds
  40c170:	xor    ah,BYTE PTR [ebp+0x3d2fbbe2]
  40c176:	leave  
  40c177:	jmp    DWORD PTR [ebp+0x63]
  40c17a:	push   edx
  40c17b:	(bad)  
  40c17c:	mov    edi,0x5ad4c453
  40c181:	or     al,0xc7
  40c183:	shl    bl,0x31
  40c186:	lods   al,BYTE PTR ds:[esi]
  40c187:	jp     0x40c18f
  40c189:	es jo  0x40c14d
  40c18c:	fisubr DWORD PTR [ebx]
  40c18e:	addr16 xchg ebp,eax
  40c190:	dec    ebx
  40c191:	mov    ebx,0x68a1f7
  40c196:	enter  0xdbab,0x34
  40c19a:	jp     0x40c1f0
  40c19c:	mov    al,cl
  40c19e:	jnp    0x40c181
  40c1a0:	mov    ebp,0x3b0336ed
  40c1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a6:	into   
  40c1a7:	mov    bl,0x10
  40c1a9:	push   0xffffffaf
  40c1ab:	cmc    
  40c1ac:	call   0xb90f:0x41545849
  40c1b3:	push   edi
  40c1b4:	js     0x40c1e7
  40c1b6:	sub    DWORD PTR [ebp+0x36],ebx
  40c1b9:	add    eax,0x2e2637cd
  40c1be:	adc    dl,BYTE PTR [esi]
  40c1c0:	xchg   esp,eax
  40c1c1:	lods   al,BYTE PTR ds:[esi]
  40c1c2:	jnp    0x40c1a3
  40c1c4:	mov    ebp,DWORD PTR [edi+esi*8]
  40c1c7:	mov    dh,0x6c
  40c1c9:	pop    edx
  40c1ca:	sub    al,0x7b
  40c1cc:	dec    eax
  40c1cd:	xchg   esi,eax
  40c1ce:	xor    BYTE PTR [edi+0x39],ch
  40c1d1:	mov    cl,0x5
  40c1d3:	call   0xce34:0x61d8a0b9
  40c1da:	(bad)  
  40c1db:	mov    esi,0xb72ccfeb
  40c1e0:	jge    0x40c1e7
  40c1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1e3:	and    eax,DWORD PTR [eax-0x20c59240]
  40c1e9:	cmp    al,0x31
  40c1eb:	dec    ebx
  40c1ec:	sub    al,0x8b
  40c1ee:	push   ebx
  40c1ef:	hlt    
  40c1f0:	(bad)  
  40c1f1:	outs   dx,DWORD PTR ds:[esi]
  40c1f2:	xchg   esp,eax
  40c1f3:	test   eax,0x73ad830b
  40c1f8:	adc    eax,0xe04f7146
  40c1fd:	adc    DWORD PTR [ebx],eax
  40c1ff:	lock jp 0x40c1be
  40c202:	loope  0x40c1b3
  40c204:	mov    cs,esp
  40c206:	pop    ecx
  40c207:	and    BYTE PTR [eax-0x4e88e4bd],0x76
  40c20e:	(bad)  
  40c210:	push   ds
  40c211:	ins    BYTE PTR es:[edi],dx
  40c212:	sub    dh,BYTE PTR [edx-0x2e]
  40c215:	jbe    0x40c1b8
  40c217:	jecxz  0x40c26b
  40c219:	sahf   
  40c21a:	adc    al,0x77
  40c21c:	pop    edx
  40c21d:	sub    eax,0xcb35d52a
  40c222:	daa    
  40c223:	shl    eax,cl
  40c225:	mov    dh,0x91
  40c227:	push   ebx
  40c228:	fdiv   DWORD PTR [esi]
  40c22a:	or     ah,BYTE PTR [ebx+0x45]
  40c22d:	shl    BYTE PTR [ebp+0x70],1
  40c230:	jns    0x40c263
  40c232:	mov    ecx,esi
  40c234:	pop    edi
  40c235:	out    0x49,al
  40c237:	sub    eax,DWORD PTR [eax+0x6f4bbb41]
  40c23d:	pop    esp
  40c23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23f:	inc    edi
  40c240:	jp     0x40c292
  40c242:	repz sbb ebp,edi
  40c245:	imul   esp,DWORD PTR [edi+0x68],0x99f43687
  40c24c:	sbb    eax,0x1e802740
  40c251:	ret    0x1746
  40c254:	xchg   ebp,eax
  40c255:	jge    0x40c237
  40c257:	cmp    bh,0x4
  40c25a:	push   ebx
  40c25b:	or     edx,esi
  40c25d:	sti    
  40c25e:	or     al,0xe8
  40c260:	ins    BYTE PTR es:[edi],dx
  40c261:	stos   DWORD PTR es:[edi],eax
  40c262:	and    eax,DWORD PTR ds:0x869f991a
  40c268:	lods   eax,DWORD PTR ds:[esi]
  40c269:	jb     0x40c1f6
  40c26b:	push   0x2937612b
  40c270:	iret   
  40c271:	fyl2x  
  40c273:	mov    al,ds:0x7084bc89
  40c278:	and    BYTE PTR [ebp-0xe],dl
  40c27b:	jnp    0x40c2ba
  40c27d:	addr16 jo 0x40c23f
  40c280:	repnz mov ebx,0xeaa3bd4
  40c286:	push   0xffffffbb
  40c288:	out    0x3b,al
  40c28a:	adc    edi,ebp
  40c28c:	jp     0x40c225
  40c28e:	stc    
  40c28f:	or     eax,0xcbb94e7f
  40c294:	pop    es
  40c295:	ret    
  40c296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c297:	stos   BYTE PTR es:[edi],al
  40c298:	jo     0x40c261
  40c29a:	sub    eax,0x8741ca5f
  40c29f:	cmp    DWORD PTR [ebx+ebx*4],ebx
  40c2a2:	inc    edx
  40c2a3:	fdiv   QWORD PTR [edx]
  40c2a5:	inc    ebp
  40c2a6:	repz jp 0x40c2c0
  40c2a9:	mov    eax,0x1f7a1d19
  40c2ae:	mov    WORD PTR [edx-0x25],es
  40c2b1:	xor    eax,0x4b88f666
  40c2b6:	jg     0x40c246
  40c2b8:	sti    
  40c2b9:	sbb    dh,BYTE PTR [ecx-0x7b]
  40c2bc:	ds test al,0xdc
  40c2bf:	push   esp
  40c2c0:	adc    eax,0xc0e4d2a6
  40c2c5:	xchg   ebp,eax
  40c2c6:	daa    
  40c2c7:	out    dx,al
  40c2c8:	inc    eax
  40c2c9:	sbb    cl,BYTE PTR [eax+0x78b9c948]
  40c2cf:	das    
  40c2d0:	inc    edx
  40c2d1:	mov    ds:0x442d6045,al
  40c2d6:	jecxz  0x40c356
  40c2d8:	fst    st(3)
  40c2da:	fldenv [edx+0x8]
  40c2dd:	adc    ebx,esp
  40c2df:	xchg   esp,eax
  40c2e0:	jecxz  0x40c32b
  40c2e2:	(bad)  [edi]
  40c2e4:	dec    eax
  40c2e5:	mov    ds:0xb5b5b0b1,eax
  40c2ea:	into   
  40c2eb:	test   eax,0x53eaae1b
  40c2f0:	mov    al,0x48
  40c2f2:	hlt    
  40c2f3:	adc    BYTE PTR [eax+0x25],0x22
  40c2f7:	clc    
  40c2f8:	mov    ch,0xd5
  40c2fa:	push   DWORD PTR [ebx+0x1c56f873]
  40c300:	shl    ch,1
  40c302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c303:	popaw  
  40c305:	aas    
  40c306:	mov    ebp,gs
  40c308:	mov    edi,0x5a7e3710
  40c30d:	imul   eax,ecx,0x88b058a1
  40c313:	lea    edi,[esi+0x7e]
  40c316:	imul   edx,DWORD PTR [ebx+eiz*4],0xffffffb7
  40c31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31b:	jbe    0x40c343
  40c31d:	inc    eax
  40c31e:	fld    DWORD PTR [ebx+0x65]
  40c321:	call   0x3139:0xa5a71fba
  40c328:	jmp    0xaa5:0x576eba8b
  40c32f:	xor    ah,BYTE PTR [edx+0x6c]
  40c332:	scas   eax,DWORD PTR es:[edi]
  40c333:	push   0x1a0e0181
  40c338:	aam    0x4a
  40c33a:	xor    dl,BYTE PTR [esi-0x143a42a8]
  40c340:	cmp    eax,0xad3d2607
  40c345:	push   ebp
  40c346:	aam    0xeb
  40c348:	scas   eax,DWORD PTR es:[edi]
  40c349:	mov    esp,0x8ec728d3
  40c34e:	pop    ss
  40c34f:	pop    edx
  40c350:	and    eax,0x2d891573
  40c355:	(bad)  
  40c356:	aad    0x7c
  40c358:	popa   
  40c359:	push   eax
  40c35a:	std    
  40c35b:	call   0x6337:0x97b327fb
  40c362:	stos   DWORD PTR es:[edi],eax
  40c363:	mov    eax,ds:0x7160f3f
  40c368:	ins    BYTE PTR es:[edi],dx
  40c369:	mov    dl,0xfc
  40c36b:	xchg   BYTE PTR [edi],bh
  40c36d:	dec    esi
  40c36e:	pop    ebx
  40c36f:	jge    0x40c3a0
  40c371:	pop    ss
  40c372:	(bad)  
  40c373:	stc    
  40c374:	lds    edx,FWORD PTR [esp+ebx*2-0x13a5a302]
  40c37b:	sbb    DWORD PTR [esi+0x731350f9],eax
  40c381:	lock stc 
  40c383:	push   ebx
  40c384:	stos   DWORD PTR es:[edi],eax
  40c385:	(bad)
  40c388:	inc    ecx
  40c389:	pushf  
  40c38a:	mov    ch,0xc9
  40c38c:	xchg   edi,eax
  40c38d:	xor    eax,DWORD PTR [edi+0x47cc9848]
  40c393:	xchg   al,ch
  40c395:	cdq    
  40c396:	scas   eax,DWORD PTR es:[edi]
  40c397:	inc    ecx
  40c398:	or     al,0x14
  40c39a:	pop    es
  40c39b:	ror    al,0x7d
  40c39e:	cld    
  40c39f:	xchg   esp,eax
  40c3a0:	scas   eax,DWORD PTR es:[edi]
  40c3a1:	sub    BYTE PTR ds:0x6aa00fd4,dh
  40c3a7:	pop    ds
  40c3a8:	push   cs
  40c3a9:	mov    dh,BYTE PTR [esi]
  40c3ab:	aaa    
  40c3ac:	mov    edx,0x723fb1ce
  40c3b1:	daa    
  40c3b2:	pop    eax
  40c3b3:	adc    al,0xa9
  40c3b5:	rol    DWORD PTR [edi-0x7f],cl
  40c3b8:	arpl   WORD PTR [edi-0x3756e7a7],di
  40c3be:	push   esp
  40c3bf:	addr16 dec esi
  40c3c1:	in     al,dx
  40c3c2:	push   edi
  40c3c3:	dec    eax
  40c3c4:	jg     0x40c3cb
  40c3c6:	adc    eax,0xf54564d2
  40c3cb:	xchg   esp,eax
  40c3cc:	ds push cs
  40c3ce:	mov    ch,0x42
  40c3d0:	xchg   ebp,eax
  40c3d1:	and    edi,DWORD PTR [ecx+0x1dcbb0d5]
  40c3d7:	jae    0x40c455
  40c3d9:	or     ch,BYTE PTR [ebp+0x6ba285b7]
  40c3df:	les    esp,FWORD PTR [eax+0x3b]
  40c3e2:	and    eax,0x1313bb8c
  40c3e7:	test   DWORD PTR [esp+edx*4+0x6c],ebp
  40c3eb:	jp     0x40c457
  40c3ed:	addr16 adc al,0xc8
  40c3f0:	test   esp,0xb33815c4
  40c3f6:	mov    eax,ds:0x2f7d5003
  40c3fb:	jecxz  0x40c3dc
  40c3fd:	adc    eax,0x127e31f6
  40c402:	xchg   esi,eax
  40c403:	inc    esp
  40c404:	cdq    
  40c405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c406:	pop    eax
  40c407:	cdq    
  40c408:	repnz cmp eax,0x93f54c50
  40c40e:	mov    DWORD PTR [ebx+0x22],esp
  40c411:	in     eax,0x11
  40c413:	hlt    
  40c414:	fdivp  st(2),st
  40c416:	dec    ebx
  40c417:	xchg   DWORD PTR [esp+eiz*8-0x1b],ebp
  40c41b:	sbb    ebp,DWORD PTR [ecx-0x18]
  40c41e:	addps  xmm4,XMMWORD PTR [ebx+0x76130c14]
  40c425:	stos   DWORD PTR es:[edi],eax
  40c426:	sub    BYTE PTR [ebx-0x5f6d637c],0xa5
  40c42d:	(bad)  
  40c42e:	in     al,0xf1
  40c430:	pop    ebp
  40c431:	add    BYTE PTR [eax+0x5b02f1bb],0xd7
  40c438:	pusha  
  40c439:	add    al,0x70
  40c43b:	test   BYTE PTR [ecx+0x2e],bl
  40c43e:	push   ss
  40c43f:	jl     0x40c458
  40c441:	std    
  40c442:	enter  0x344a,0x9b
  40c446:	mov    esi,0x4f8f5d0f
  40c44b:	mov    ch,0x57
  40c44d:	inc    ecx
  40c44e:	inc    esi
  40c44f:	jnp    0x40c3fc
  40c451:	cmp    al,0x53
  40c453:	inc    esi
  40c454:	mov    ebp,0x792c7e90
  40c459:	pop    eax
  40c45a:	mov    ecx,0xcab70382
  40c45f:	loopne 0x40c43c
  40c461:	sub    ah,bh
  40c463:	imul   edx,DWORD PTR [ebx],0x4bbd3b78
  40c469:	and    bl,BYTE PTR [edi-0x350cc5f2]
  40c46f:	xor    al,0x38
  40c471:	fcom   DWORD PTR [edx-0x25]
  40c474:	add    edx,0x907ee8fc
  40c47a:	sahf   
  40c47b:	stos   DWORD PTR es:[edi],eax
  40c47c:	(bad)  
  40c47d:	nop
  40c47e:	lock nop
  40c480:	xor    eax,DWORD PTR [edi]
  40c482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c483:	xor    DWORD PTR fs:[ebp-0x28],ebp
  40c487:	push   0xffffffbc
  40c489:	dec    edi
  40c48a:	dec    esi
  40c48b:	or     cl,BYTE PTR [ecx]
  40c48d:	sub    esi,ecx
  40c48f:	jl     0x40c507
  40c491:	pop    ecx
  40c492:	mov    cl,0x86
  40c494:	(bad)  
  40c496:	loop   0x40c50b
  40c498:	mov    DWORD PTR [edi+0x7b],edi
  40c49b:	or     eax,0xa45d4b7e
  40c4a0:	mov    edi,0x6ff05e80
  40c4a5:	fmul   DWORD PTR [edx-0x1adf67b7]
  40c4ab:	add    al,0x50
  40c4ad:	nop
  40c4ae:	adc    cl,BYTE PTR [eax]
  40c4b0:	scas   eax,DWORD PTR es:[edi]
  40c4b1:	ins    BYTE PTR es:[edi],dx
  40c4b2:	cmp    BYTE PTR [esi-0x64316d9e],ch
  40c4b8:	dec    edx
  40c4b9:	(bad)  
  40c4ba:	leave  
  40c4bb:	leave  
  40c4bc:	or     eax,0x3ce489b5
  40c4c1:	mov    dh,0xa2
  40c4c3:	imul   BYTE PTR [ecx+0x44]
  40c4c6:	fnstsw WORD PTR [edi+0x31e99e60]
  40c4cc:	push   ss
  40c4cd:	pop    esi
  40c4ce:	lock mov DWORD PTR [edi-0x2167f113],ecx
  40c4d5:	test   eax,0x569dd082
  40c4da:	inc    ebx
  40c4db:	mov    BYTE PTR [ecx+eiz*8-0x503e202f],ah
  40c4e2:	loope  0x40c488
  40c4e4:	cmc    
  40c4e5:	(bad)  
  40c4e6:	sub    edi,DWORD PTR [eax+0x63fc22bc]
  40c4ec:	fs adc al,bl
  40c4ef:	out    0x4f,al
  40c4f1:	fucomip st,st(2)
  40c4f3:	neg    BYTE PTR [ebx-0x72a7f77b]
  40c4f9:	add    BYTE PTR [esi+0x1519498d],dl
  40c4ff:	fstp   QWORD PTR ds:0xb9d102e6
  40c505:	push   0x6
  40c507:	loope  0x40c4e7
  40c509:	sar    esi,cl
  40c50b:	loope  0x40c49b
  40c50d:	jne    0x40c563
  40c50f:	out    dx,eax
  40c510:	ins    DWORD PTR es:[edi],dx
  40c511:	mov    eax,0xb193ab38
  40c516:	aad    0x96
  40c518:	dec    edx
  40c519:	cld    
  40c51a:	mov    ah,0x61
  40c51c:	dec    BYTE PTR [eax+0x528e684c]
  40c522:	pusha  
  40c523:	mov    ebp,0xc9f7e5cc
  40c528:	repnz or DWORD PTR [edx-0x65320c8e],ebx
  40c52f:	cs cld 
  40c531:	jno    0x40c4b3
  40c533:	cmp    al,0x2d
  40c535:	cwde   
  40c536:	ins    BYTE PTR es:[edi],dx
  40c537:	or     al,0x41
  40c539:	std    
  40c53a:	or     al,0x10
  40c53c:	inc    esp
  40c53d:	div    esp
  40c53f:	daa    
  40c540:	add    ebp,DWORD PTR [edi+edi*2+0x1c]
  40c544:	inc    ebx
  40c545:	clc    
  40c546:	and    DWORD PTR [edi-0x1532d24c],edi
  40c54c:	mov    ecx,0xa0582701
  40c551:	push   ebx
  40c552:	ja     0x40c4ec
  40c554:	push   ebx
  40c555:	push   ecx
  40c556:	dec    eax
  40c557:	mov    cs,eax
  40c559:	push   ds
  40c55a:	or     bl,BYTE PTR [edi-0x7d5e13e5]
  40c560:	test   eax,0xc5cce9f9
  40c565:	dec    esi
  40c566:	pop    edx
  40c567:	cdq    
  40c568:	jno    0x40c5b9
  40c56a:	xchg   ebp,eax
  40c56b:	or     eax,0x121e8f45
  40c570:	jne    0x40c4f3
  40c572:	and    eax,0x4a3728b3
  40c577:	popa   
  40c578:	test   BYTE PTR [esi+0x7ede83f2],al
  40c57e:	sbb    ecx,0x3f
  40c581:	loopne 0x40c56e
  40c583:	std    
  40c584:	out    0xc4,al
  40c586:	push   0xffffff8a
  40c588:	cmp    eax,0x127efc8
  40c58d:	inc    esi
  40c58e:	clc    
  40c58f:	inc    edi
  40c590:	or     BYTE PTR [ecx-0x41959f8f],dl
  40c596:	jno    0x40c5fe
  40c598:	xchg   esi,eax
  40c599:	jge    0x40c590
  40c59b:	and    eax,0xa83b0f1c
  40c5a0:	mov    ecx,0xad87ae46
  40c5a5:	fs pop ebp
  40c5a7:	cli    
  40c5a8:	xchg   ecx,eax
  40c5a9:	outs   dx,DWORD PTR ds:[esi]
  40c5aa:	pop    ecx
  40c5ab:	adc    DWORD PTR [ebp-0x5ef75adb],edx
  40c5b1:	loopne 0x40c588
  40c5b3:	loop   0x40c5fc
  40c5b5:	or     BYTE PTR [ecx+0x6b],bl
  40c5b8:	cmp    ebp,eax
  40c5ba:	push   ecx
  40c5bb:	cwde   
  40c5bc:	jb     0x40c565
  40c5be:	mov    ebp,0x906c27c4
  40c5c3:	lock sbb al,0xba
  40c5c6:	jo     0x40c5a0
  40c5c8:	inc    ecx
  40c5c9:	sub    ecx,DWORD PTR [ebx]
  40c5cb:	and    DWORD PTR [ecx-0x16ee6173],ebp
  40c5d1:	mov    dh,dl
  40c5d3:	fwait
  40c5d4:	popf   
  40c5d5:	xor    DWORD PTR [ebx+0xd],ebp
  40c5d8:	push   ecx
  40c5d9:	mov    ecx,0xa8d3bb43
  40c5de:	icebp  
  40c5df:	sub    BYTE PTR [edx-0xe],0xa7
  40c5e3:	mov    cs,WORD PTR [edx]
  40c5e5:	jnp    0x40c5cb
  40c5e7:	js     0x40c654
  40c5e9:	adc    cl,BYTE PTR [esi]
  40c5eb:	fistp  DWORD PTR [ebp-0x18]
  40c5ee:	lds    esp,FWORD PTR [ecx-0x6bd232b3]
  40c5f4:	add    BYTE PTR ds:0xc1ff1d2b,bl
  40c5fa:	adc    dh,BYTE PTR [esi-0x72]
  40c5fd:	sahf   
  40c5fe:	push   0xde85fa50
  40c603:	pop    ecx
  40c604:	addr16 loop 0x40c650
  40c607:	xor    BYTE PTR [ecx+esi*1],0xa9
  40c60b:	jo     0x40c5e2
  40c60d:	sbb    al,0x54
  40c60f:	or     BYTE PTR [ecx-0x4190c0e9],0x44
  40c616:	inc    ebp
  40c617:	cmp    BYTE PTR [ecx+0x72],dh
  40c61a:	inc    eax
  40c61b:	ss push 0xece1790c
  40c621:	mov    esi,0x270cbea2
  40c626:	mov    eax,ds:0x31d914c6
  40c62b:	adc    eax,0xf0b1c5a5
  40c630:	cmp    eax,0xbc452831
  40c635:	lods   al,BYTE PTR ds:[esi]
  40c636:	loope  0x40c5ba
  40c638:	fwait
  40c639:	or     DWORD PTR [ebx+0x4b5324b2],0x24c58395
  40c643:	cwde   
  40c644:	inc    esp
  40c645:	xchg   esi,eax
  40c646:	mov    bh,0xc
  40c648:	jb     0x40c676
  40c64a:	jl     0x40c643
  40c64c:	out    0xd,al
  40c64e:	add    al,0x22
  40c650:	bound  ebp,QWORD PTR [edi]
  40c652:	push   edx
  40c653:	popa   
  40c654:	test   DWORD PTR [ebx],ecx
  40c656:	(bad)  
  40c657:	lea    esi,ds:0x489c5e28
  40c65d:	hlt    
  40c65e:	inc    ecx
  40c65f:	fsubr  QWORD PTR [ecx+0x78]
  40c662:	jle    0x40c642
  40c664:	iret   
  40c665:	mov    esi,0xcd47ad71
  40c66a:	(bad)  
  40c66b:	sbb    edi,esi
  40c66d:	loop   0x40c66e
  40c66f:	jae    0x40c60e
  40c671:	and    eax,DWORD PTR [esi+0x1b]
  40c674:	xchg   BYTE PTR [ecx+0x43ab1e9],bh
  40c67a:	sub    edi,DWORD PTR [edx]
  40c67c:	leave  
  40c67d:	mov    al,es:0xdbd21189
  40c683:	cmp    ch,dl
  40c685:	xchg   ebx,eax
  40c686:	mov    al,ds:0xe8a1577b
  40c68b:	in     al,0x77
  40c68d:	(bad)
  40c690:	ds sahf 
  40c692:	pop    esi
  40c693:	push   es
  40c694:	retf   
  40c695:	pop    eax
  40c696:	push   eax
  40c697:	sub    al,0xe2
  40c699:	cmp    bh,BYTE PTR [ecx+ebp*1+0x18]
  40c69d:	dec    esp
  40c69e:	mov    al,0xc5
  40c6a0:	int3   
  40c6a1:	sti    
  40c6a2:	mov    bl,BYTE PTR [edx-0x1f]
  40c6a5:	es jne 0x40c71d
  40c6a8:	or     al,0xd2
  40c6aa:	stc    
  40c6ab:	mov    DWORD PTR [eax+0x748e6e32],esp
  40c6b1:	cdq    
  40c6b2:	dec    ebp
  40c6b3:	or     eax,DWORD PTR [ebx-0x40]
  40c6b6:	push   ds
  40c6b7:	out    dx,al
  40c6b8:	jmp    0xbe3f4fd6
  40c6bd:	jo     0x40c6e0
  40c6bf:	push   ss
  40c6c0:	loopne 0x40c687
  40c6c2:	idiv   BYTE PTR [ebx+0x9]
  40c6c5:	mov    edi,0xcd6fb751
  40c6ca:	mov    eax,0xc533d4da
  40c6cf:	into   
  40c6d0:	fisttp WORD PTR [ecx]
  40c6d2:	sbb    al,0xbe
  40c6d4:	pop    edi
  40c6d5:	xor    eax,0xef928b74
  40c6da:	mov    bh,0x9b
  40c6dc:	pop    esi
  40c6dd:	jns    0x40c69b
  40c6df:	dec    ecx
  40c6e0:	data16 loopne 0x40c698
  40c6e3:	enter  0xb33e,0xd4
  40c6e7:	jnp    0x40c6ee
  40c6e9:	cmovne edx,DWORD PTR [edx]
  40c6ec:	mov    ds:0x4f5340a0,al
  40c6f1:	and    al,0x1f
  40c6f3:	sbb    esp,DWORD PTR [eax]
  40c6f5:	pop    eax
  40c6f6:	mov    edx,DWORD PTR [ecx+ebp*2]
  40c6f9:	out    0x30,eax
  40c6fb:	inc    eax
  40c6fc:	add    BYTE PTR [eax+0x50],ch
  40c6ff:	(bad)  
  40c700:	dec    edx
  40c701:	xchg   edx,eax
  40c702:	clc    
  40c703:	sub    edi,ecx
  40c705:	pop    esi
  40c706:	ins    DWORD PTR es:[edi],dx
  40c707:	inc    edi
  40c708:	xchg   ebp,eax
  40c709:	push   eax
  40c70a:	out    0xdd,eax
  40c70c:	xchg   ebx,eax
  40c70d:	jne    0x40c6f8
  40c70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c710:	jnp    0x40c73d
  40c712:	fldenv [edx+0x17]
  40c715:	jg     0x40c704
  40c717:	loope  0x40c6a2
  40c719:	mov    eax,DWORD PTR [bx+0x60b]
  40c71e:	push   esi
  40c71f:	(bad)
  40c722:	inc    esp
  40c723:	cmp    cl,al
  40c725:	push   eax
  40c726:	mov    bh,0xab
  40c728:	jb     0x40c794
  40c72a:	jp     0x40c6d0
  40c72c:	adc    cl,BYTE PTR [ebp-0x15]
  40c72f:	jle    0x40c6e5
  40c731:	and    cl,BYTE PTR ss:[ebp+0x25567960]
  40c738:	(bad)  
  40c739:	mov    esp,0xc9239e43
  40c73e:	cmp    al,0x1c
  40c740:	fnsave [edi+0x39]
  40c743:	push   DWORD PTR [edx]
  40c745:	dec    esp
  40c746:	daa    
  40c747:	mov    DWORD PTR [ebp-0x5c],0x3ec6b5a1
  40c74e:	mov    eax,0xbe8d68ae
  40c753:	sbb    DWORD PTR [ebp+ecx*1-0x1a],ecx
  40c757:	imul   eax,eax,0xc95bd9da
  40c75d:	sbb    dh,al
  40c75f:	(bad)
  40c763:	inc    esp
  40c764:	sbb    DWORD PTR [edx],edx
  40c766:	lock inc ecx
  40c768:	lds    esi,FWORD PTR [edi+0x523fd84f]
  40c76e:	mov    ah,cl
  40c770:	sub    esi,DWORD PTR [ebp+edx*2+0x5eaeb1a1]
  40c777:	xor    BYTE PTR es:[esi+0x19c169df],dl
  40c77e:	test   al,0x53
  40c780:	jbe    0x40c7b4
  40c782:	mov    bh,0xc3
  40c784:	icebp  
  40c785:	cmp    cl,BYTE PTR [edi]
  40c787:	inc    ebp
  40c788:	fisttp DWORD PTR [ebp+0x6a]
  40c78b:	or     DWORD PTR [ebp-0x32],ebx
  40c78e:	sub    esp,DWORD PTR [esi]
  40c790:	fmul   DWORD PTR [edx-0x416093fb]
  40c796:	inc    esi
  40c797:	leave  
  40c798:	xor    DWORD PTR [ecx],eax
  40c79a:	or     al,0x36
  40c79c:	stc    
  40c79d:	sub    al,0xcf
  40c79f:	je     0x40c795
  40c7a1:	or     al,0xf4
  40c7a3:	(bad)  
  40c7a4:	not    esi
  40c7a6:	leave  
  40c7a7:	xchg   BYTE PTR [edx-0x3aa67ff1],ah
  40c7ad:	jge    0x40c7d0
  40c7af:	and    ebp,DWORD PTR [eax-0x57641076]
  40c7b5:	ds inc ecx
  40c7b7:	cwde   
  40c7b8:	imul   ecx,ebp,0xca90caaf
  40c7be:	mov    al,ds:0x9e3767a8
  40c7c3:	adc    eax,0x14332bfb
  40c7c8:	xchg   esp,eax
  40c7c9:	mov    edx,0x53aeef98
  40c7ce:	push   ebp
  40c7cf:	xor    edi,edx
  40c7d1:	popa   
  40c7d2:	mov    al,ds:0xc2025e28
  40c7d7:	xor    al,0x52
  40c7d9:	mov    ecx,0xf25b0640
  40c7de:	mov    ebx,0xa1ef0c8d
  40c7e3:	jns    0x40c82b
  40c7e5:	push   ebp
  40c7e6:	dec    ecx
  40c7e7:	scas   eax,DWORD PTR es:[edi]
  40c7e8:	sbb    BYTE PTR [ebp+0xf00958b],bh
  40c7ee:	gs cwde 
  40c7f0:	jl     0x40c83b
  40c7f2:	sti    
  40c7f3:	addr16 fwait
  40c7f5:	call   0xc03e7185
  40c7fa:	leave  
  40c7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7fc:	cmp    al,0x50
  40c7fe:	aas    
  40c7ff:	pop    ebx
  40c800:	aad    0x80
  40c802:	xchg   BYTE PTR [edx+ecx*4-0x10],bh
  40c806:	push   es
  40c807:	xor    dl,dl
  40c809:	and    BYTE PTR [edi],al
  40c80b:	push   ebx
  40c80c:	add    bl,BYTE PTR [eax]
  40c80e:	push   ebx
  40c80f:	xor    eax,0x8769e2c9
  40c814:	pop    edi
  40c815:	jmp    0xbe0039a5
  40c81a:	mov    ebx,0x21a34abc
  40c81f:	cwde   
  40c820:	lea    ebx,[edx]
  40c822:	xchg   edi,eax
  40c823:	push   cs
  40c824:	(bad)  
  40c825:	addr16 adc eax,0xc32d66dd
  40c82b:	mov    BYTE PTR [ebp+0x505b1c29],bl
  40c831:	pop    edi
  40c832:	add    ecx,DWORD PTR ds:0xe6dba378
  40c838:	inc    edx
  40c839:	push   ebx
  40c83a:	sub    cl,BYTE PTR cs:[esi]
  40c83d:	adc    DWORD PTR [bp+0x658a],ecx
  40c842:	adc    ebp,DWORD PTR [edx+0xe92cb99]
  40c848:	and    eax,0x4737032a
  40c84d:	call   0xaee4:0xa6485f77
  40c854:	xor    bh,BYTE PTR [esi]
  40c856:	fadd   DWORD PTR [ebx]
  40c858:	jle    0x40c836
  40c85a:	imul   edi,esp,0x88fe5edb
  40c860:	sub    al,0x91
  40c862:	dec    ebx
  40c863:	dec    ecx
  40c864:	lods   al,BYTE PTR ds:[esi]
  40c865:	clc    
  40c866:	int3   
  40c867:	gs xchg ebx,eax
  40c869:	ds sbb eax,0xca7744ec
  40c86f:	fsub   QWORD PTR [esi+esi*2+0x50641b2e]
  40c876:	ret    
  40c877:	dec    ebx
  40c878:	loopne 0x40c8a6
  40c87a:	ds mov edi,0x83d92da2
  40c880:	add    al,0x6
  40c882:	stos   BYTE PTR es:[edi],al
  40c883:	xor    al,0x12
  40c885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c886:	subps  xmm1,xmm0
  40c889:	sub    al,0x9b
  40c88b:	sahf   
  40c88c:	add    esi,DWORD PTR [esi+0x77f724f4]
  40c892:	adc    eax,0xbf72c30f
  40c897:	pop    esp
  40c898:	rcl    DWORD PTR [eax],cl
  40c89a:	out    dx,al
  40c89b:	hlt    
  40c89c:	retf   
  40c89d:	test   al,0xbc
  40c89f:	sbb    BYTE PTR [ecx],0x2c
  40c8a2:	pop    eax
  40c8a3:	sbb    esi,DWORD PTR [eax+0x38b47879]
  40c8a9:	xor    BYTE PTR [esi+0x7dc70ee],cl
  40c8af:	icebp  
  40c8b0:	fadd   QWORD PTR [esi+eiz*2]
  40c8b3:	add    ebp,DWORD PTR [ecx+0x33f7b57d]
  40c8b9:	es (bad) 
  40c8bb:	sahf   
  40c8bc:	sub    esi,DWORD PTR [esi]
  40c8be:	call   0x29114ff0
  40c8c3:	lds    esi,FWORD PTR [ebp+0x2]
  40c8c6:	sub    esi,esp
  40c8c8:	mov    BYTE PTR [ebp+0x3547e93f],0x6e
  40c8cf:	xlat   BYTE PTR ds:[ebx]
  40c8d0:	jne    0x40c926
  40c8d2:	or     dl,BYTE PTR [edi]
  40c8d4:	ret    
  40c8d5:	cmp    BYTE PTR [ebx+0x59dbbf23],0xdc
  40c8dc:	mov    cl,0xde
  40c8de:	in     al,dx
  40c8df:	cmp    eax,0x4435417f
  40c8e4:	ds jmp 0x389e571b
  40c8ea:	or     edi,DWORD PTR [eax]
  40c8ec:	lahf   
  40c8ed:	add    eax,0x1c369ef8
  40c8f2:	js     0x40c8c3
  40c8f4:	sti    
  40c8f5:	js     0x40c87d
  40c8f7:	push   edi
  40c8f8:	sbb    DWORD PTR [esi+eax*1-0x2d],ebx
  40c8fc:	loop   0x40c8c4
  40c8fe:	cmp    al,0x36
  40c900:	xchg   ebx,eax
  40c901:	loope  0x40c8a8
  40c903:	push   edi
  40c904:	adc    ecx,ebp
  40c906:	icebp  
  40c907:	test   DWORD PTR [edx],0xd4bd3451
  40c90d:	add    cl,ch
  40c90f:	mov    ebx,0x530c7ecd
  40c914:	ins    DWORD PTR es:[edi],dx
  40c915:	das    
  40c916:	jp     0x40c97d
  40c918:	pop    edx
  40c919:	stos   BYTE PTR es:[edi],al
  40c91a:	stos   BYTE PTR es:[edi],al
  40c91b:	jne    0x40c8ac
  40c91d:	sbb    ecx,DWORD PTR [eax]
  40c91f:	lock jne 0x40c928
  40c922:	sbb    esi,esp
  40c924:	cmc    
  40c925:	aam    0x5f
  40c927:	mov    bh,0xd7
  40c929:	add    dh,cl
  40c92b:	out    dx,eax
  40c92c:	ins    DWORD PTR es:[edi],dx
  40c92d:	popf   
  40c92e:	(bad)  
  40c92f:	(bad)  
  40c930:	clc    
  40c931:	inc    edx
  40c932:	arpl   WORD PTR [eax+esi*8+0x2b],di
  40c936:	or     ecx,edi
  40c938:	fist   WORD PTR [ebp-0xc]
  40c93b:	mov    eax,0x101da2a7
  40c940:	add    al,0x19
  40c942:	mov    ebp,0x129c37bb
  40c947:	retf   
  40c948:	pop    ecx
  40c949:	mov    al,0xe9
  40c94b:	inc    ebx
  40c94c:	xor    BYTE PTR [edi+0x61],bl
  40c94f:	push   0xf5e570f3
  40c954:	fsub   st,st(4)
  40c956:	xchg   ebx,eax
  40c957:	stc    
  40c958:	mov    eax,0x377c191c
  40c95d:	fs rol edi,0x45
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x43012da3]
  40d00c:	cmp    dh,BYTE PTR [edx+0x77c7ce9]
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	push   edx
  40d016:	das    
  40d017:	and    BYTE PTR [edx-0x7d0f91f2],0x36
  40d01e:	sub    eax,0x423e73e6
  40d023:	xor    ecx,DWORD PTR [edx]
  40d025:	adc    cl,BYTE PTR [eax+0x30]
  40d028:	div    BYTE PTR [ecx]
  40d02a:	xchg   edi,eax
  40d02b:	inc    cl
  40d02d:	mov    bl,0xb4
  40d02f:	jae    0x40d070
  40d031:	jno    0x40cfde
  40d033:	test   BYTE PTR [edx-0x5c7f0a05],cl
  40d039:	xchg   ebx,eax
  40d03a:	xor    BYTE PTR [ebx+0x1c89c25a],al
  40d040:	sub    edi,DWORD PTR [ebp+0xa]
  40d043:	(bad)  
  40d044:	popf   
  40d045:	push   ebx
  40d046:	lods   eax,DWORD PTR ds:[esi]
  40d047:	and    al,0xbb
  40d049:	cdq    
  40d04a:	iret   
  40d04b:	fdivr  DWORD PTR [edi]
  40d04d:	xor    ebp,DWORD PTR [ebp-0x73016815]
  40d053:	pop    es
  40d054:	dec    ebx
  40d055:	mov    BYTE PTR [edx-0x594c7b60],ch
  40d05b:	out    dx,eax
  40d05c:	stc    
  40d05d:	sbb    ebx,DWORD PTR [ebx+edx*1]
  40d060:	add    bl,BYTE PTR [ebp+0x5f]
  40d063:	xchg   ebx,eax
  40d064:	and    DWORD PTR [eax-0x1300db60],edx
  40d06a:	cmp    edi,DWORD PTR [esi+0x64]
  40d06d:	inc    esi
  40d06e:	pop    ss
  40d06f:	push   ebp
  40d070:	in     eax,dx
  40d071:	in     eax,0x0
  40d073:	dec    ebp
  40d074:	xchg   esi,eax
  40d075:	mov    eax,DWORD PTR [esi+0x37]
  40d078:	add    eax,0x81fb81aa
  40d07d:	ds (bad) 
  40d07f:	pop    ds
  40d080:	cs mov fs,edx
  40d083:	gs aaa 
  40d085:	ret    0x72f
  40d088:	loope  0x40d0d8
  40d08a:	ins    BYTE PTR es:[edi],dx
  40d08b:	jae    0x40d0d0
  40d08d:	xchg   edi,eax
  40d08e:	sub    dh,al
  40d090:	push   ebx
  40d091:	or     bh,BYTE PTR [ebp+0x183ad36f]
  40d097:	test   eax,esi
  40d099:	dec    edx
  40d09a:	in     al,dx
  40d09b:	jl     0x40d081
  40d09d:	lock sbb al,0x57
  40d0a0:	bound  eax,QWORD PTR [edx]
  40d0a2:	pushf  
  40d0a3:	cmp    eax,eax
  40d0a5:	jbe    0x40d0c8
  40d0a7:	sub    DWORD PTR [eax+0x2cb59cb0],ebx
  40d0ad:	xor    DWORD PTR [ecx-0x2c],ebx
  40d0b0:	adc    BYTE PTR [ebp-0x67],0x3d
  40d0b4:	jmp    0xb81a:0x6b0000ca
  40d0bb:	int3   
  40d0bc:	xchg   edi,eax
  40d0bd:	int    0xf7
  40d0bf:	mov    ebx,0xfd0bfefa
  40d0c4:	test   DWORD PTR [edi+0x13851897],esp
  40d0ca:	dec    esp
  40d0cb:	add    eax,0x5c2a5d09
  40d0d0:	out    dx,al
  40d0d1:	retf   0xd185
  40d0d4:	push   edi
  40d0d5:	(bad)  
  40d0d6:	aam    0xe4
  40d0d8:	scas   al,BYTE PTR es:[edi]
  40d0d9:	rol    DWORD PTR [esi+0x1f],cl
  40d0dc:	idiv   esp
  40d0de:	test   DWORD PTR [ecx-0x48],eax
  40d0e1:	ret    
  40d0e2:	jg     0x40d074
  40d0e4:	sbb    al,0x99
  40d0e6:	inc    edi
  40d0e7:	hlt    
  40d0e8:	sub    eax,DWORD PTR [edx+eiz*4-0x15]
  40d0ec:	call   0x964a:0xa72042a2
  40d0f3:	retf   0xde9c
  40d0f6:	sbb    BYTE PTR [ebx],dh
  40d0f8:	dec    edi
  40d0f9:	iret   
  40d0fa:	ds cli 
  40d0fc:	adc    DWORD PTR [esi],eax
  40d0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ff:	rcl    ch,0xf7
  40d102:	stos   DWORD PTR es:[edi],eax
  40d103:	jb     0x40d08d
  40d105:	gs pop ebp
  40d107:	push   ecx
  40d108:	sahf   
  40d109:	pop    ss
  40d10a:	inc    edx
  40d10b:	pop    ebp
  40d10c:	(bad)  
  40d10d:	test   DWORD PTR [eax+0x5ec589d6],ecx
  40d113:	mov    WORD PTR [edx+0x5ef7bf58],gs
  40d119:	test   eax,0xdb249b39
  40d11e:	imul   BYTE PTR ds:0xf8a693b7
  40d124:	adc    bl,BYTE PTR [ecx+0x66]
  40d127:	xor    ch,BYTE PTR [edi-0x51]
  40d12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d12b:	sbb    eax,0x60531825
  40d130:	ret    
  40d131:	jns    0x40d178
  40d133:	addr16 mov eax,ds:0xd645
  40d137:	dec    ebx
  40d138:	sub    al,0x2c
  40d13a:	mov    ah,0xf
  40d13c:	lock js 0x40d142
  40d13f:	sub    al,0xa4
  40d141:	push   edx
  40d142:	xchg   edx,eax
  40d143:	cs jmp 0x40d144
  40d146:	sub    eax,0x758f6557
  40d14b:	jbe    0x40d1bc
  40d14d:	mov    eax,0x2cdd918f
  40d152:	sub    DWORD PTR [eax+0xe],0x1758c54c
  40d159:	cmc    
  40d15a:	or     ebx,DWORD PTR [ecx]
  40d15c:	retf   0x3ea9
  40d15f:	dec    esp
  40d160:	push   esi
  40d161:	(bad)
  40d165:	push   ebx
  40d166:	icebp  
  40d167:	sub    BYTE PTR [esi+ecx*8],0x5f
  40d16b:	mov    ebp,0xe18f8548
  40d170:	repnz xchg ebx,eax
  40d172:	test   BYTE PTR [edx+0x15421004],dh
  40d178:	pop    edx
  40d179:	jbe    0x40d130
  40d17b:	in     eax,0x5
  40d17d:	mov    dh,0x31
  40d17f:	inc    edi
  40d180:	nop
  40d181:	das    
  40d182:	pop    ebp
  40d183:	add    DWORD PTR [esi+ecx*2-0x6b],0x6e
  40d188:	fiadd  WORD PTR [edx-0x69bb3d51]
  40d18e:	adc    dl,BYTE PTR [eax+0x77a20c89]
  40d194:	push   esp
  40d195:	or     al,0x1d
  40d197:	add    eax,0xb4ff5456
  40d19c:	cmp    al,0x15
  40d19f:	mov    edx,0xe0b193af
  40d1a4:	inc    DWORD PTR [ecx-0x734c9dbf]
  40d1aa:	pop    ds
  40d1ab:	inc    eax
  40d1ac:	jecxz  0x40d1f8
  40d1ae:	ja     0x40d17b
  40d1b0:	and    edx,DWORD PTR [ebx-0x24]
  40d1b3:	(bad)  
  40d1b4:	dec    ebp
  40d1b5:	stc    
  40d1b6:	dec    edi
  40d1b7:	ins    BYTE PTR es:[edi],dx
  40d1b8:	adc    BYTE PTR [ebx],dh
  40d1ba:	mov    ds:0xab667a54,al
  40d1bf:	(bad)  
  40d1c0:	sub    eax,0x320348d2
  40d1c5:	dec    ebp
  40d1c6:	add    al,0xbe
  40d1c8:	mov    bh,0xb2
  40d1ca:	iret   
  40d1cb:	xor    eax,0x1be092e4
  40d1d0:	sbb    DWORD PTR [esp+edi*2+0x7],ebp
  40d1d4:	xchg   ecx,eax
  40d1d5:	push   0xffffffa6
  40d1d7:	cmp    DWORD PTR ds:[ebx+0x6],0x3708ea85
  40d1df:	sar    DWORD PTR [edx+edx*2-0x2e472c9],0xf
  40d1e7:	lock mov ebx,0xd8af2eff
  40d1ed:	fnstenv [eax]
  40d1ef:	dec    esp
  40d1f0:	and    BYTE PTR [eax+eiz*8],bh
  40d1f3:	sub    al,0x7b
  40d1f5:	adc    BYTE PTR [ebx],dh
  40d1f7:	ror    DWORD PTR [ebp-0x13aca09c],0xec
  40d1fe:	mov    ?,WORD PTR [edi-0xc]
  40d201:	fwait
  40d202:	jle    0x40d280
  40d204:	and    DWORD PTR es:[edi],edx
  40d207:	aad    0x2c
  40d209:	mov    ds:0xbc815420,al
  40d20e:	dec    edx
  40d20f:	scas   al,BYTE PTR es:[edi]
  40d210:	cmp    esi,DWORD PTR [esi-0xdca465e]
  40d216:	fist   DWORD PTR [edx]
  40d218:	inc    esp
  40d219:	call   0xe88e53b6
  40d21e:	lahf   
  40d21f:	sub    ecx,DWORD PTR [edx-0x43]
  40d222:	inc    ecx
  40d223:	push   es
  40d224:	xor    al,0xc8
  40d226:	fs push ss
  40d228:	push   esi
  40d229:	or     BYTE PTR [esi+0x6fdea3d9],dh
  40d22f:	shl    DWORD PTR [eax-0x2ca11ad4],cl
  40d235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d236:	std    
  40d237:	push   esi
  40d238:	js     0x40d1f4
  40d23a:	xor    edx,DWORD PTR [ebx+0x39]
  40d23d:	pop    ebp
  40d23e:	inc    esi
  40d23f:	arpl   WORD PTR [esi],bp
  40d241:	push   ebp
  40d242:	jb     0x40d1f0
  40d244:	fbld   TBYTE PTR fs:[esi+0x32e46d47]
  40d24b:	mov    bh,0x5
  40d24d:	add    DWORD PTR [ebx+eiz*4-0x4],edx
  40d251:	cmp    cl,BYTE PTR [ecx]
  40d253:	popa   
  40d254:	mov    bl,0x3c
  40d256:	call   0xd6ab:0x2200c1e1
  40d25d:	inc    ecx
  40d25e:	test   DWORD PTR [ebx],esp
  40d260:	(bad)  
  40d261:	stos   BYTE PTR es:[edi],al
  40d262:	in     eax,dx
  40d263:	or     al,0x73
  40d265:	js     0x40d281
  40d267:	mov    ?,WORD PTR [ebx]
  40d269:	popf   
  40d26a:	push   ebp
  40d26b:	(bad)  
  40d26c:	pop    ebx
  40d26d:	or     edx,edi
  40d26f:	or     DWORD PTR [edx-0x232c0193],eax
  40d275:	or     DWORD PTR [ebx],ecx
  40d277:	or     eax,0xfe2aa27e
  40d27c:	jp     0x40d265
  40d27e:	xchg   ecx,esp
  40d280:	mov    esi,0x9d463ead
  40d285:	lock ds push ds
  40d288:	std    
  40d289:	mov    esi,0x87be2e43
  40d28e:	bnd jns 0x40d23e
  40d291:	sbb    BYTE PTR [eax+0x78],cl
  40d294:	mov    edx,ss
  40d296:	push   0x58702ec
  40d29b:	popf   
  40d29c:	pop    ebp
  40d29d:	or     BYTE PTR [edx-0x1fd1db49],dh
  40d2a3:	adc    ch,ah
  40d2a5:	push   ds
  40d2a6:	or     eax,esp
  40d2a8:	pusha  
  40d2a9:	leave  
  40d2aa:	push   ss
  40d2ab:	data16 jbe 0x40d28c
  40d2ae:	retf   0xd823
  40d2b1:	xchg   DWORD PTR [esi+0x5d],edx
  40d2b4:	hlt    
  40d2b5:	mov    es,WORD PTR [eax+eax*2]
  40d2b8:	aam    0x9f
  40d2ba:	inc    esi
  40d2bb:	mov    edx,ebp
  40d2bd:	inc    eax
  40d2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bf:	(bad)  
  40d2c0:	hlt    
  40d2c1:	push   esi
  40d2c2:	sub    eax,edx
  40d2c4:	and    eax,0xcf9a6d0d
  40d2ca:	fstp   st(4)
  40d2cc:	out    0x37,al
  40d2ce:	inc    edx
  40d2cf:	dec    ecx
  40d2d0:	call   0xbb8f:0x27d3a90e
  40d2d7:	mov    ecx,0x873e70b5
  40d2dc:	stos   BYTE PTR es:[edi],al
  40d2dd:	lock inc esp
  40d2df:	dec    esp
  40d2e0:	scas   al,BYTE PTR es:[edi]
  40d2e1:	jp     0x40d312
  40d2e3:	push   ds
  40d2e4:	add    eax,0x8c57571e
  40d2e9:	xchg   ecx,eax
  40d2ea:	xor    DWORD PTR [eax+ebx*1-0x63f7c9b7],0xfffffff0
  40d2f2:	mov    al,0x21
  40d2f4:	mov    edi,0x830a710c
  40d2f9:	inc    esp
  40d2fa:	fcomp  DWORD PTR [esi-0x7368624c]
  40d300:	(bad)
  40d303:	jge    0x40d2f3
  40d305:	and    edi,ecx
  40d307:	mov    BYTE PTR ds:0xad714654,ch
  40d30d:	popf   
  40d30e:	pop    edx
  40d30f:	test   DWORD PTR [edx-0xd9cb1fb],edi
  40d315:	jg     0x40d2ed
  40d317:	and    DWORD PTR es:[ebx-0x48],edx
  40d31b:	xchg   ecx,eax
  40d31c:	loopne 0x40d34e
  40d31e:	and    DWORD PTR [edx+0x31],ebx
  40d321:	rol    BYTE PTR [ebp-0x5e46dcc1],0x45
  40d328:	and    dh,BYTE PTR ds:0x9a7bc669
  40d32e:	inc    esi
  40d32f:	jg     0x40d2c0
  40d331:	sub    DWORD PTR [edi-0x66ff5a8c],ebx
  40d337:	sbb    BYTE PTR [ebx+0x488b9112],ch
  40d33d:	push   esi
  40d33e:	addr16 push ebp
  40d340:	mov    dh,BYTE PTR [ebx-0x42c67393]
  40d346:	call   0xf1fa:0x9a738397
  40d34d:	mov    edx,0xbc1fb22c
  40d352:	inc    ebx
  40d353:	je     0x40d377
  40d355:	sbb    al,BYTE PTR [esi+0x5b]
  40d358:	sbb    BYTE PTR [edx-0x66d94f57],dh
  40d35e:	dec    ebp
  40d35f:	jns    0x40d371
  40d361:	ficom  DWORD PTR [esi-0x6610008a]
  40d367:	mov    ds:0x7ac3eb5,eax
  40d36c:	(bad)  
  40d36d:	adc    DWORD PTR [ecx],edx
  40d36f:	sbb    ebx,DWORD PTR [edi+0x4f]
  40d372:	ja     0x40d36e
  40d374:	cwde   
  40d375:	ficomp DWORD PTR [ecx-0x7f]
  40d378:	mov    al,ds:0x3cb5d0af
  40d37d:	es (bad) 
  40d37f:	cmp    eax,0x6af4f6dc
  40d384:	js     0x40d33b
  40d386:	fadd   DWORD PTR [esi+0x4e761607]
  40d38c:	pop    edi
  40d38d:	outs   dx,BYTE PTR ds:[esi]
  40d38e:	inc    ecx
  40d38f:	push   ds
  40d390:	add    dh,BYTE PTR [ebx-0x13c8560c]
  40d396:	add    dl,BYTE PTR [ecx-0x46]
  40d399:	push   0x56517a09
  40d39e:	in     al,0xae
  40d3a0:	sub    ebx,edi
  40d3a2:	jp     0x40d35f
  40d3a4:	inc    esi
  40d3a5:	cmp    edx,DWORD PTR [ecx+0x16788ed1]
  40d3ab:	rcl    BYTE PTR [ebx+0x5f],0x91
  40d3af:	mov    esi,0xf5321039
  40d3b4:	popa   
  40d3b5:	xor    DWORD PTR [ebx],ecx
  40d3b7:	pop    ebp
  40d3b8:	fcmovnb st,st(1)
  40d3ba:	inc    esi
  40d3bb:	aam    0x95
  40d3bd:	mov    DWORD PTR [ecx],0x20a4f3ca
  40d3c3:	xchg   esp,eax
  40d3c4:	(bad)  
  40d3c5:	call   FWORD PTR [ebx]
  40d3c7:	imul   ebp,DWORD PTR ds:0x21e2205d,0x11
  40d3ce:	adc    DWORD PTR [edi],edi
  40d3d0:	test   eax,0x59ac33c8
  40d3d5:	fldcw  WORD PTR [ebp+ebp*1-0x2c]
  40d3d9:	sub    al,0xbc
  40d3db:	mov    DWORD PTR [eax*8+0x77cc9e46],ecx
  40d3e2:	outs   dx,DWORD PTR ds:[esi]
  40d3e3:	and    eax,0xee827fda
  40d3e8:	jle    0x40d387
  40d3ea:	lods   al,BYTE PTR ds:[esi]
  40d3eb:	mov    eax,ds:0x7f5fd5e2
  40d3f0:	ss or  eax,0x97b81d19
  40d3f6:	out    0x4d,al
  40d3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3f9:	pop    ecx
  40d3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3fc:	inc    esi
  40d3fd:	repnz mov al,ds:0x40fb518d
  40d403:	dec    ax
  40d405:	hlt    
  40d406:	imul   esp,DWORD PTR [eax-0x5b],0xdcc19994
  40d40d:	jnp    0x40d409
  40d40f:	add    BYTE PTR [edi],dl
  40d411:	cli    
  40d412:	(bad)  
  40d413:	xchg   edx,eax
  40d414:	sub    ah,BYTE PTR [edx+0x25]
  40d417:	push   es
  40d418:	bound  ebx,QWORD PTR [esi+0x58]
  40d41b:	dec    ebp
  40d41c:	div    BYTE PTR [edi+0x24cf973]
  40d422:	sub    al,0x73
  40d424:	mov    DWORD PTR [eax+0x4ed6e090],ebx
  40d42a:	jmp    0x40d456
  40d42c:	push   0x7d
  40d42e:	cmp    eax,0xce29ec1f
  40d433:	ficom  WORD PTR [edi]
  40d435:	loopne 0x40d3f3
  40d437:	retf   
  40d438:	scas   al,BYTE PTR es:[edi]
  40d439:	je     0x40d467
  40d43b:	or     dh,bl
  40d43d:	mov    eax,ds:0xcee9deef
  40d442:	sub    DWORD PTR [ecx-0x2d],esi
  40d445:	add    eax,DWORD PTR [edi+0x91ada3c]
  40d44b:	inc    ebx
  40d44c:	add    al,BYTE PTR [ebp+0x7aa1a87b]
  40d452:	and    DWORD PTR [eax+0x72],esp
  40d455:	lea    edx,[esi]
  40d457:	(bad)
  40d45a:	sahf   
  40d45b:	neg    BYTE PTR [edi+esi*2]
  40d45e:	add    BYTE PTR [ecx],dh
  40d460:	jns    0x40d46c
  40d462:	inc    ebx
  40d463:	add    ecx,edi
  40d465:	sub    eax,0x482e0276
  40d46a:	call   0xfd8a:0x5f46f862
  40d471:	mov    bh,BYTE PTR [edx]
  40d473:	add    BYTE PTR [ebx],al
  40d475:	sub    DWORD PTR [ebp+esi*1+0x6123b9a5],edi
  40d47c:	sub    cl,dl
  40d47e:	ret    0xc42a
  40d481:	inc    ebx
  40d482:	ins    BYTE PTR es:[edi],dx
  40d483:	cmp    eax,0xdb3a15b3
  40d488:	call   0x8a74b11a
  40d48d:	int3   
  40d48e:	adc    DWORD PTR [ecx+0x5b79fa5d],edx
  40d494:	push   edx
  40d495:	xchg   esi,eax
  40d496:	fwait
  40d497:	lods   al,BYTE PTR ds:[esi]
  40d498:	mov    ebp,0xa1b9e75f
  40d49d:	mov    ch,0xaf
  40d49f:	pop    es
  40d4a0:	loope  0x40d497
  40d4a2:	pop    ds
  40d4a3:	add    ebx,DWORD PTR [edx+0xe6f98e5]
  40d4a9:	or     bl,BYTE PTR [ebp+0x1063f41c]
  40d4af:	mov    dh,0x60
  40d4b1:	cmp    bl,BYTE PTR [ebx-0x1e]
  40d4b4:	cli    
  40d4b5:	nop
  40d4b6:	sub    esp,ebp
  40d4b8:	sub    ah,cl
  40d4ba:	fdiv   QWORD PTR [eax]
  40d4bc:	mov    WORD PTR [ecx+edi*4-0x51],fs
  40d4c0:	nop
  40d4c1:	repnz out dx,al
  40d4c3:	dec    ebp
  40d4c4:	sub    BYTE PTR [edx-0x5e471d80],bh
  40d4ca:	aaa    
  40d4cb:	xchg   ebp,eax
  40d4cc:	push   0xfffffff6
  40d4ce:	hlt    
  40d4cf:	rol    BYTE PTR [ecx-0x8fc6fcc],cl
  40d4d5:	ret    
  40d4d6:	shr    DWORD PTR [edx+0x4c53d164],0x99
  40d4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4de:	mov    ebx,0x5e3d391c
  40d4e3:	jmp    0x40d542
  40d4e5:	mov    al,ds:0x527bec2
  40d4ea:	out    dx,eax
  40d4eb:	pop    DWORD PTR [ebx+0x25ea4af6]
  40d4f1:	sbb    al,al
  40d4f3:	cmp    BYTE PTR [ecx],al
  40d4f5:	pop    ebx
  40d4f6:	and    bl,BYTE PTR [ecx-0x54b4d6d1]
  40d4fc:	pop    esp
  40d4fd:	test   al,0x65
  40d4ff:	sbb    bh,BYTE PTR [edx]
  40d501:	mov    edi,0x20451819
  40d506:	loope  0x40d4fb
  40d508:	pop    edi
  40d509:	push   sp
  40d50b:	inc    ebp
  40d50c:	call   DWORD PTR [eax-0x495d53b2]
  40d512:	scas   eax,DWORD PTR es:[edi]
  40d513:	mov    al,ds:0x924c5650
  40d518:	icebp  
  40d519:	icebp  
  40d51a:	and    dl,BYTE PTR [esi-0x6d]
  40d51d:	je     0x40d4a4
  40d51f:	das    
  40d520:	push   edi
  40d521:	pop    esp
  40d522:	hlt    
  40d523:	pop    ss
  40d524:	cmc    
  40d525:	cmp    esp,DWORD PTR [edx-0x30]
  40d528:	xor    BYTE PTR [ebp+0x1ab11ed3],al
  40d52e:	xchg   ecx,eax
  40d52f:	push   edx
  40d530:	xchg   ebx,eax
  40d531:	inc    esi
  40d532:	mov    al,ds:0xed586323
  40d537:	mov    ebp,0x606a0e07
  40d53c:	inc    esi
  40d53d:	sar    eax,cl
  40d53f:	jno    0x40d5aa
  40d541:	jbe    0x40d551
  40d543:	(bad)  [eax-0xc]
  40d546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d547:	inc    edx
  40d548:	pop    esp
  40d549:	imul   ebx,ebx,0x4d
  40d54c:	adc    al,0xef
  40d54e:	rol    BYTE PTR [eax+edx*8-0x54],1
  40d552:	dec    esp
  40d553:	xchg   ecx,eax
  40d554:	push   esi
  40d555:	push   ss
  40d556:	and    DWORD PTR ds:0xb87ec829,edi
  40d55c:	sbb    ebp,ebp
  40d55e:	shrd   DWORD PTR [ecx],ecx,cl
  40d561:	ret    0xde78
  40d564:	call   0x19f35c6e
  40d569:	scas   eax,DWORD PTR es:[edi]
  40d56a:	adc    BYTE PTR [edx],0xb3
  40d56d:	push   eax
  40d56e:	cmp    ecx,DWORD PTR [ecx]
  40d570:	iret   
  40d571:	xchg   ebp,eax
  40d572:	(bad)  
  40d573:	fdivr  st(4),st
  40d575:	push   ebx
  40d576:	sbb    al,0x38
  40d578:	outs   dx,BYTE PTR ds:[esi]
  40d579:	and    eax,0xdacb7c8d
  40d57e:	vpaddq ymm2,ymm3,YMMWORD PTR ds:0xcdc74752
  40d586:	out    0x3e,eax
  40d588:	mov    ecx,0x7992334
  40d58d:	gs pop esi
  40d58f:	and    bl,ch
  40d591:	push   ss
  40d592:	sbb    bl,BYTE PTR [esi+0x210ad190]
  40d598:	dec    eax
  40d599:	push   ebx
  40d59a:	inc    edx
  40d59b:	dec    esi
  40d59c:	mov    esp,0x2a18cc6d
  40d5a1:	add    DWORD PTR [ebp+0x4],ecx
  40d5a4:	mov    al,0xf6
  40d5a6:	or     edx,0x4a
  40d5a9:	out    dx,al
  40d5aa:	inc    ebx
  40d5ab:	out    0x93,al
  40d5ad:	add    BYTE PTR [eax],cl
  40d5af:	mov    edx,0xa1595c43
  40d5b4:	scas   eax,DWORD PTR es:[edi]
  40d5b5:	sahf   
  40d5b6:	push   edx
  40d5b7:	mov    al,0x2b
  40d5b9:	jo     0x40d639
  40d5bb:	xchg   ebp,eax
  40d5bc:	push   ss
  40d5bd:	xor    eax,0x22f40d3a
  40d5c2:	dec    ecx
  40d5c3:	xor    al,0xbb
  40d5c5:	jp     0x40d595
  40d5c7:	mov    eax,0xd7b07e3a
  40d5cc:	mov    DWORD PTR [ecx],esp
  40d5ce:	test   BYTE PTR [eax],ch
  40d5d0:	xchg   ecx,eax
  40d5d1:	fsubr  QWORD PTR [eax]
  40d5d3:	mov    al,ds:0x25f3d180
  40d5d8:	imul   edx,DWORD PTR [ebp+0x7f],0xffffff95
  40d5dc:	pop    ebp
  40d5dd:	popa   
  40d5de:	pushf  
  40d5df:	or     eax,0x7d481a23
  40d5e4:	rol    DWORD PTR [edx],0x39
  40d5e7:	sub    BYTE PTR [eax-0x4a12a830],dh
  40d5ed:	mov    cl,0xad
  40d5ef:	push   es
  40d5f0:	lahf   
  40d5f1:	in     al,0x8e
  40d5f3:	jge    0x40d60d
  40d5f5:	adc    eax,0xef69754b
  40d5fa:	mov    BYTE PTR [ecx+0x49],bh
  40d5fd:	and    al,0xa5
  40d5ff:	outs   dx,BYTE PTR ds:[esi]
  40d600:	lock add eax,0xc0b68a93
  40d606:	in     al,dx
  40d607:	in     eax,dx
  40d608:	inc    edi
  40d609:	dec    esp
  40d60a:	sub    ah,BYTE PTR fs:[eax]
  40d60d:	imul   ebp,DWORD PTR [edx-0x7267d046],0x1092b5f7
  40d617:	fist   DWORD PTR ds:0xdcf4d09c
  40d61d:	pushf  
  40d61e:	test   eax,0x3e11c39e
  40d623:	xor    DWORD PTR [ecx+0x43],eax
  40d626:	mov    dl,0xf4
  40d628:	adc    eax,0xe3af9db6
  40d62d:	gs xor cl,dh
  40d630:	sahf   
  40d631:	mov    al,ah
  40d633:	or     BYTE PTR [eiz*4-0x5626b0d0],ah
  40d63a:	push   ecx
  40d63b:	pop    ecx
  40d63c:	jmp    0x40d5ed
  40d63e:	ins    BYTE PTR es:[edi],dx
  40d63f:	and    eax,edi
  40d641:	pop    ds
  40d642:	test   cl,ch
  40d644:	jns    0x40d5c6
  40d646:	cli    
  40d647:	pop    es
  40d648:	pop    esp
  40d649:	int3   
  40d64a:	adc    edx,0x25
  40d64d:	jp     0x40d639
  40d64f:	push   es
  40d650:	cwde   
  40d651:	retf   
  40d652:	ret    0x1f98
  40d655:	sub    eax,0x320c313
  40d65a:	inc    ebx
  40d65b:	outs   dx,BYTE PTR ds:[esi]
  40d65c:	call   0x2343ef9
  40d661:	jge    0x40d6bf
  40d663:	mov    esi,0xd4793bed
  40d668:	(bad)  
  40d669:	das    
  40d66a:	bound  edx,QWORD PTR [edx-0x3]
  40d66d:	mov    ds:0xb84c0392,al
  40d672:	and    DWORD PTR [edx-0x7d],ebp
  40d675:	add    DWORD PTR [eax-0x5333d42c],ebx
  40d67b:	dec    ebp
  40d67c:	mov    ds:0x9e62834b,eax
  40d681:	addr16 std 
  40d683:	(bad)  [edi-0x39]
  40d686:	lock outs dx,DWORD PTR ds:[esi]
  40d688:	(bad)  
  40d689:	fld    DWORD PTR [edi-0x388bfd16]
  40d68f:	sbb    BYTE PTR [eax],ah
  40d691:	imul   BYTE PTR [eax+0x5fadaa84]
  40d697:	clc    
  40d698:	pushf  
  40d699:	imul   esi,DWORD PTR [ecx+0x12],0x7
  40d69d:	jg     0x40d63d
  40d69f:	sbb    eax,0xa046add8
  40d6a4:	xor    DWORD PTR [eax],ebp
  40d6a6:	rol    BYTE PTR [ebp+0x17b48a11],cl
  40d6ac:	fbld   TBYTE PTR [ecx+0x24]
  40d6af:	adc    al,0x9d
  40d6b1:	data16 repnz mov cl,0x49
  40d6b5:	retf   
  40d6b6:	lahf   
  40d6b7:	les    ebx,FWORD PTR [edi]
  40d6b9:	mov    edi,DWORD PTR [edi-0x6f]
  40d6bc:	push   edi
  40d6bd:	sub    al,0x8f
  40d6bf:	mov    edi,0x421adcea
  40d6c4:	mov    esi,0xe38ceb9d
  40d6c9:	dec    ebx
  40d6ca:	sub    al,0x9d
  40d6cc:	jl     0x40d6be
  40d6ce:	push   esi
  40d6cf:	push   cs
  40d6d0:	adc    BYTE PTR [ecx+0x5098a3dc],ch
  40d6d6:	es jbe 0x40d674
  40d6d9:	out    dx,eax
  40d6da:	sub    al,0x46
  40d6dc:	pop    eax
  40d6dd:	jmp    0x5d9dc7cf
  40d6e2:	arpl   cx,di
  40d6e4:	int3   
  40d6e5:	ins    BYTE PTR es:[edi],dx
  40d6e6:	mov    WORD PTR [edi],cs
  40d6e8:	xchg   esi,eax
  40d6e9:	sub    al,0x21
  40d6ec:	in     al,dx
  40d6ed:	mov    ds:0x48024dc0,al
  40d6f2:	pop    edi
  40d6f3:	mov    al,ds:0x8a1612c0
  40d6f8:	xchg   DWORD PTR [eax-0x56f35ef5],esi
  40d6fe:	repz mov ebx,0xf10f6b0d
  40d704:	enter  0x826a,0x24
  40d708:	(bad)  
  40d709:	cli    
  40d70a:	mov    edx,0xac7e194e
  40d70f:	iret   
  40d710:	sub    BYTE PTR [esi-0x10],bl
  40d713:	inc    eax
  40d714:	push   cs
  40d715:	pop    es
  40d716:	std    
  40d717:	inc    esp
  40d718:	mov    dl,0xb0
  40d71a:	pop    ss
  40d71b:	jmp    0xb7a0480d
  40d720:	jg     0x40d703
  40d722:	mov    dh,0xc4
  40d724:	clc    
  40d725:	sahf   
  40d726:	mov    ds:0x9ee2fc1d,al
  40d72b:	out    0x50,eax
  40d72d:	cmc    
  40d72e:	push   ss
  40d72f:	test   BYTE PTR [ebx+0x20f6aa74],ah
  40d735:	sahf   
  40d736:	sar    BYTE PTR [edi+0x541d316b],0x67
  40d73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d73e:	lods   al,BYTE PTR ds:[esi]
  40d73f:	cld    
  40d740:	cli    
  40d741:	or     al,0x62
  40d743:	clc    
  40d744:	dec    edx
  40d745:	in     al,0xbe
  40d747:	lock fsub DWORD PTR [edi+0x75]
  40d74b:	in     eax,0xc2
  40d74d:	stos   BYTE PTR es:[edi],al
  40d74e:	rcr    BYTE PTR [ecx+0x4d],1
  40d751:	mov    esi,0xbf4177e8
  40d756:	and    BYTE PTR [ebx],0xe6
  40d759:	rol    bh,cl
  40d75b:	jg     0x40d7d1
  40d75d:	push   edx
  40d75e:	in     eax,0xa7
  40d760:	add    ebp,ecx
  40d762:	je     0x40d7d5
  40d764:	popf   
  40d765:	mov    bl,0x93
  40d767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d768:	or     BYTE PTR [esi-0x4a],0x25
  40d76c:	jns    0x40d700
  40d76e:	call   0x510e9dfc
  40d773:	adc    DWORD PTR [ebp-0x44aae3aa],edx
  40d779:	icebp  
  40d77a:	sub    ecx,DWORD PTR [ebp+ecx*2+0x5f]
  40d77e:	xor    al,0xa8
  40d780:	mov    dh,0x15
  40d782:	imul   ebp,DWORD PTR [edi+0x517dc1ce],0xffffffdc
  40d789:	xchg   BYTE PTR [edi],al
  40d78b:	and    dh,ah
  40d78d:	int3   
  40d78e:	sbb    DWORD PTR [ebp+ecx*1-0x13f5aea],esp
  40d795:	lds    ebp,FWORD PTR [ebx]
  40d797:	das    
  40d798:	not    BYTE PTR [edi+0x3fa67b88]
  40d79e:	jae    0x40d786
  40d7a0:	jmp    0xfe42250e
  40d7a5:	push   edi
  40d7a6:	push   cs
  40d7a7:	add    al,0x6b
  40d7a9:	mov    eax,0xad8ebfb7
  40d7ae:	or     eax,0x910fad44
  40d7b3:	mov    ecx,0xf73652e0
  40d7b8:	jbe    0x40d7ec
  40d7ba:	inc    DWORD PTR [esi+esi*1-0x63fcff48]
  40d7c1:	cdq    
  40d7c2:	sub    al,0x1f
  40d7c4:	xchg   ebp,eax
  40d7c5:	pop    edx
  40d7c6:	adc    DWORD PTR [ebx],edi
  40d7c8:	arpl   WORD PTR [edi+0x4e],di
  40d7cb:	test   DWORD PTR [edi-0x79],edx
  40d7ce:	cmp    edx,DWORD PTR [edi]
  40d7d0:	call   0x7536:0xe3f38e7
  40d7d7:	push   ecx
  40d7d8:	rol    DWORD PTR [eax],cl
  40d7da:	xor    edx,DWORD PTR [edi]
  40d7dc:	xchg   ebx,eax
  40d7dd:	into   
  40d7de:	test   bl,dl
  40d7e0:	cld    
  40d7e1:	in     eax,dx
  40d7e2:	dec    edi
  40d7e3:	adc    eax,0x3aa8e0cd
  40d7e8:	ja     0x40d7c4
  40d7ea:	add    edx,edx
  40d7ec:	pop    ds
  40d7ed:	add    cl,BYTE PTR [edi+eax*8+0x32]
  40d7f1:	aaa    
  40d7f2:	inc    esi
  40d7f3:	mov    ebx,0xc9caeeaf
  40d7f8:	call   0x35e9:0x4a7a12fb
  40d7ff:	sub    bl,dl
  40d801:	sahf   
  40d802:	hlt    
  40d803:	subps  xmm3,XMMWORD PTR [ebx-0x4eaac384]
  40d80a:	pushw  ds
  40d80c:	pop    esp
  40d80d:	ja     0x40d84c
  40d80f:	test   dh,bh
  40d811:	dec    esi
  40d812:	mov    ebx,0xd40a7822
  40d817:	and    esi,DWORD PTR [ebx]
  40d819:	mov    WORD PTR [eax],cs
  40d81b:	(bad)  
  40d81c:	jbe    0x40d876
  40d81e:	mov    edi,0x1c7b63ad
  40d823:	mov    eax,0x10ef9bd7
  40d828:	push   cs
  40d829:	pop    edi
  40d82a:	mov    eax,ds:0xb942777b
  40d82f:	ds test al,0xbd
  40d832:	imul   ebp,DWORD PTR [ebx+ecx*2+0x61],0xffffff92
  40d837:	jl     0x40d7ec
  40d839:	cmp    edx,DWORD PTR [ebx]
  40d83b:	cmp    DWORD PTR [eax+0x753c903b],edx
  40d841:	jnp    0x40d7cd
  40d843:	lea    edx,[esi+0x46]
  40d846:	jb     0x40d7e4
  40d848:	cwde   
  40d849:	hlt    
  40d84a:	xchg   BYTE PTR [eax+0xc75998a],ch
  40d850:	or     ebx,esi
  40d852:	sbb    esi,DWORD PTR [eax+0x2d]
  40d855:	repz dec esp
  40d857:	xchg   esp,eax
  40d858:	lds    ebx,FWORD PTR [eax-0x5542ff43]
  40d85e:	out    0xb7,eax
  40d860:	and    ecx,DWORD PTR [eax]
  40d862:	ins    BYTE PTR es:[edi],dx
  40d863:	js     0x40d839
  40d865:	jbe    0x40d867
  40d867:	shufps xmm1,XMMWORD PTR [esi+0x1cff70f1],0x8f
  40d86f:	mov    esp,0x920efea8
  40d874:	fld    QWORD PTR [eax-0x61]
  40d877:	jno    0x40d7fd
  40d879:	lods   al,BYTE PTR ds:[esi]
  40d87a:	jbe    0x40d84f
  40d87c:	inc    ebp
  40d87d:	dec    ebx
  40d87e:	add    ch,cl
  40d880:	inc    esi
  40d881:	ret    
  40d882:	ficom  WORD PTR [edx-0x56]
  40d885:	mov    esi,ss
  40d887:	cmp    BYTE PTR [ecx],0x65
  40d88a:	cld    
  40d88b:	adc    DWORD PTR [ebp+edi*4-0x4552b1f],edi
  40d892:	repnz jmp 0x26b5:0x99fb785d
  40d89a:	shl    BYTE PTR [edi+0x564128c3],1
  40d8a0:	and    ch,BYTE PTR [edx+eiz*1]
  40d8a3:	fwait
  40d8a4:	mov    ?,WORD PTR [esi+0x64eb13f8]
  40d8aa:	cmp    eax,0x8ee816a0
  40d8af:	xchg   edi,eax
  40d8b0:	xor    eax,0x162635af
  40d8b5:	xor    BYTE PTR [ecx],dh
  40d8b7:	iret   
  40d8b8:	push   ss
  40d8b9:	in     eax,0xc
  40d8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8bc:	sub    dh,dh
  40d8be:	and    ch,dh
  40d8c0:	xor    esi,esp
  40d8c2:	mov    ecx,0xa0d58b51
  40d8c7:	add    edi,DWORD PTR [ebp-0x29]
  40d8ca:	(bad)  
  40d8cb:	int    0x9f
  40d8cd:	push   cs
  40d8ce:	dec    eax
  40d8cf:	or     ebp,edi
  40d8d1:	enter  0xa61a,0xe2
  40d8d5:	nop
  40d8d6:	sub    DWORD PTR [edx-0x27],edi
  40d8d9:	jge    0x40d87f
  40d8db:	jmp    0x40d87d
  40d8dd:	clc    
  40d8de:	or     eax,0x438d07c5
  40d8e3:	jmp    0x40d944
  40d8e5:	jp     0x40d929
  40d8e7:	cmc    
  40d8e8:	retf   0x8d30
  40d8eb:	or     DWORD PTR [esi-0x7c],esi
  40d8ee:	push   edx
  40d8ef:	adc    edi,DWORD PTR [ecx-0x5f46c043]
  40d8f5:	sub    al,0x35
  40d8f7:	dec    esi
  40d8f8:	ins    BYTE PTR es:[edi],dx
  40d8f9:	sub    eax,0xb10e8ff4
  40d8fe:	xchg   ebx,eax
  40d8ff:	data16 scas al,BYTE PTR es:[edi]
  40d901:	xor    DWORD PTR [edi-0xa16346a],esi
  40d907:	pop    ds
  40d908:	(bad)  
  40d90a:	mov    esi,0x5ae7e252
  40d90f:	dec    edx
  40d910:	pushf  
  40d911:	aam    0xc
  40d913:	adc    BYTE PTR [esi+ebp*4-0x4b],bh
  40d917:	dec    ecx
  40d918:	test   ah,ch
  40d91a:	cmc    
  40d91b:	leave  
  40d91c:	repz mov ds:0xa3993c0b,al
  40d922:	popf   
  40d923:	xchg   ebp,eax
  40d924:	cmc    
  40d925:	sub    ecx,DWORD PTR [edx]
  40d927:	cwde   
  40d928:	lock nop
  40d92a:	(bad)
  40d92d:	push   edi
  40d92e:	int    0xcb
  40d930:	xchg   edi,eax
  40d931:	arpl   WORD PTR ds:0x3a1006df,cx
  40d937:	mov    ah,0x4d
  40d939:	sbb    BYTE PTR [eax-0x19e41658],0xf1
  40d940:	xchg   ebp,eax
  40d941:	mov    dl,0xe
  40d943:	lock scas al,BYTE PTR es:[edi]
  40d945:	or     cl,ah
  40d947:	fnstcw WORD PTR [ebx-0x56]
  40d94a:	clc    
  40d94b:	lods   al,BYTE PTR ds:[esi]
  40d94c:	cmp    BYTE PTR [ebp-0x14],cl
  40d94f:	xor    cl,BYTE PTR [ecx]
  40d951:	(bad)  
  40d952:	and    BYTE PTR [ecx+0x46],ch
  40d955:	cmp    eax,0xd4c2a9e
  40d95a:	mov    eax,0x40ff27b5
  40d95f:	xchg   BYTE PTR [edi],dh
  40d961:	ja     0x40d8fa
  40d963:	xchg   ecx,eax
  40d964:	xchg   esp,eax
  40d965:	retf   
  40d966:	xchg   edi,eax
  40d967:	pop    es
  40d968:	(bad)  
  40d969:	loope  0x40d9bf
  40d96b:	pusha  
  40d96c:	cwde   
  40d96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96e:	push   0xffffffe2
  40d970:	xchg   esp,eax
  40d971:	(bad)  [ecx]
  40d973:	int    0xa2
  40d975:	inc    edx
  40d976:	sbb    eax,0x8d61e838
  40d97b:	push   eax
  40d97c:	aad    0xf
  40d97e:	and    ebx,DWORD PTR [ecx]
  40d980:	adc    ch,BYTE PTR [edi]
  40d982:	enter  0x1634,0xbd
  40d986:	sub    esi,DWORD PTR [edx]
  40d988:	add    esi,0x3eff0862
  40d98e:	sbb    DWORD PTR [esi],0xffffffe7
  40d991:	mov    ecx,0x17b06947
  40d996:	xor    BYTE PTR [edi-0x76],dl
  40d999:	inc    eax
  40d99a:	pop    esp
  40d99b:	sub    esp,DWORD PTR [esi-0x51]
  40d99e:	cmp    ecx,edi
  40d9a0:	mov    bh,0xf0
  40d9a2:	repnz clc 
  40d9a4:	mov    eax,0x350431b0
  40d9a9:	ror    ebp,cl
  40d9ab:	imul   ecx,edi,0x68383833
  40d9b1:	addr16 xchg ecx,eax
  40d9b3:	ja     0x40d95f
  40d9b5:	xor    DWORD PTR [edi],edi
  40d9b7:	call   0xe0f3db33
  40d9bc:	sub    eax,0xf8c108e4
  40d9c1:	jl     0x40d9d6
  40d9c3:	push   0xd5b88db4
  40d9c8:	inc    ebx
  40d9c9:	add    DWORD PTR [eax+0x5f],esi
  40d9cc:	inc    esi
  40d9cd:	mov    cl,0xda
  40d9cf:	add    ebx,DWORD PTR [esi+0x641dad66]
  40d9d5:	out    dx,eax
  40d9d6:	outs   dx,BYTE PTR ds:[esi]
  40d9d7:	mov    ch,0xb3
  40d9d9:	fld    QWORD PTR [eax-0x2c]
  40d9dc:	dec    edx
  40d9dd:	fist   DWORD PTR [ebx]
  40d9df:	ret    
  40d9e0:	push   edx
  40d9e1:	cli    
  40d9e2:	mov    dh,0x4a
  40d9e4:	aam    0x51
  40d9e6:	fistp  QWORD PTR [esi]
  40d9e8:	sar    al,1
  40d9ea:	or     eax,0x8f545313
  40d9ef:	cmp    BYTE PTR [eax+0x55],bl
  40d9f2:	jecxz  0x40da15
  40d9f4:	arpl   WORD PTR [ebx],si
  40d9f6:	enter  0x29f0,0x7d
  40d9fa:	sahf   
  40d9fb:	popf   
  40d9fc:	pop    esp
  40d9fd:	fstp   TBYTE PTR [edi-0x30]
  40da00:	lea    edx,ds:0x3e1d9dcc
  40da06:	aaa    
  40da07:	push   eax
  40da08:	push   esp
  40da09:	popa   
  40da0a:	test   al,0xc3
  40da0c:	adc    BYTE PTR [ecx+0x78],al
  40da0f:	pop    esi
  40da10:	daa    
  40da11:	fstp   QWORD PTR [ebx+0x42]
  40da14:	mov    ds:0x70aff09f,al
  40da19:	(bad)  
  40da1a:	fisttp DWORD PTR [ebp+0x24]
  40da1d:	pusha  
  40da1e:	pusha  
  40da1f:	pushf  
  40da20:	call   0xaeae:0x245cabc
  40da27:	pop    ecx
  40da28:	and    eax,0xb0b5b2ed
  40da2d:	inc    edi
  40da2e:	aas    
  40da2f:	jb     0x40d9f4
  40da31:	hlt    
  40da32:	mov    bh,0x43
  40da34:	out    dx,al
  40da35:	jo     0x40da22
  40da37:	sbb    al,0x35
  40da39:	cmp    esi,esp
  40da3b:	inc    edi
  40da3c:	imul   BYTE PTR [ebx]
  40da3e:	inc    eax
  40da3f:	int3   
  40da40:	ds jno 0x40d9cb
  40da43:	mov    ebp,0xfa31da59
  40da48:	test   DWORD PTR [edx+edx*2],ebx
  40da4b:	sub    eax,0xc8007fa
  40da50:	xchg   edi,eax
  40da51:	xchg   BYTE PTR [edx+0x5087e565],bl
  40da57:	adc    dh,BYTE PTR [ebx]
  40da59:	fcmovb st,st(4)
  40da5b:	xor    DWORD PTR [edx+0x74],ebp
  40da5e:	into   
  40da5f:	(bad)  [eax+0x32]
  40da62:	fldenv [edx-0x5b]
  40da65:	sub    ecx,DWORD PTR [eax]
  40da67:	rcr    DWORD PTR [edi],0x6a
  40da6a:	push   es
  40da6b:	mov    eax,0x1b1394d0
  40da70:	aas    
  40da71:	pop    ds
  40da72:	lods   al,BYTE PTR ds:[esi]
  40da73:	popf   
  40da74:	xchg   esi,eax
  40da75:	test   BYTE PTR [eax],dl
  40da77:	xchg   DWORD PTR [esi+esi*8+0x6d],edi
  40da7b:	ret    0x1cbb
  40da7e:	loope  0x40da66
  40da80:	in     eax,dx
  40da81:	xchg   ebx,eax
  40da82:	sahf   
  40da83:	mov    al,ds:0xcbe486bf
  40da88:	and    edi,DWORD PTR [ebp-0x1ed35ecf]
  40da8e:	push   0x9cad375f
  40da93:	ret    
  40da94:	stos   DWORD PTR es:[edi],eax
  40da95:	xor    ah,BYTE PTR [edx-0x2f0272d5]
  40da9b:	icebp  
  40da9c:	ins    BYTE PTR es:[edi],dx
  40da9d:	sub    dh,dl
  40da9f:	push   eax
  40daa0:	sbb    bh,ah
  40daa2:	and    eax,0xa5a33c7f
  40daa7:	stos   DWORD PTR es:[edi],eax
  40daa8:	out    dx,al
  40daa9:	adc    ebx,DWORD PTR [edi-0x992b967]
  40daaf:	pop    edx
  40dab0:	fisubr DWORD PTR [ecx]
  40dab2:	aam    0x2b
  40dab4:	cmp    edi,DWORD PTR [ebx]
  40dab6:	xchg   edi,eax
  40dab7:	dec    esp
  40dab8:	mov    cl,0x6b
  40daba:	xchg   edx,eax
  40dabb:	(bad)  
  40dabc:	repz imul edx,DWORD PTR [ecx+0x70b075d4],0xfffb556e
  40dac7:	push   cs
  40dac8:	jle    0x40db2f
  40daca:	push   0x6d
  40dacc:	adc    al,0x16
  40dace:	cmp    DWORD PTR [ecx],ebx
  40dad0:	cs dec eax
  40dad2:	enter  0xab18,0x92
  40dad6:	push   edx
  40dad7:	xor    edx,DWORD PTR [edi+0x39]
  40dada:	inc    ecx
  40dadb:	mul    edi
  40dadd:	and    BYTE PTR [esi],bh
  40dadf:	xchg   ecx,eax
  40dae0:	pop    eax
  40dae1:	sbb    al,0xd5
  40dae3:	mov    ds:0x1907e3ae,eax
  40dae8:	test   al,0xe2
  40daea:	cwde   
  40daeb:	xor    BYTE PTR [ebx+ebp*2],cl
  40daee:	or     DWORD PTR [eax+ebx*4],esp
  40daf1:	or     edx,DWORD PTR [esp+esi*4]
  40daf4:	frstor [edx+0x47]
  40daf7:	mov    edx,0x66a0f45a
  40dafc:	dec    esp
  40dafd:	(bad)  
  40dafe:	adc    al,0x70
  40db00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db01:	in     eax,dx
  40db02:	xchg   edi,eax
  40db03:	xchg   edx,eax
  40db04:	jle    0x40db79
  40db06:	lods   eax,DWORD PTR ds:[si]
  40db08:	jge    0x40daa7
  40db0a:	out    dx,eax
  40db0b:	or     BYTE PTR [ecx+0x228ebdb0],cl
  40db11:	inc    esi
  40db12:	leave  
  40db13:	in     eax,0xed
  40db15:	inc    esp
  40db16:	mov    al,0x72
  40db18:	cmp    eax,0x53764538
  40db1d:	pop    ds
  40db1e:	ror    DWORD PTR [ecx+0x27],cl
  40db21:	ins    DWORD PTR es:[edi],dx
  40db22:	mov    edx,0x800fb122
  40db27:	(bad)  
  40db28:	cmp    dh,bh
  40db2a:	rol    ch,0x37
  40db2d:	jns    0x40db50
  40db2f:	mov    ah,0x26
  40db31:	outs   dx,BYTE PTR ds:[esi]
  40db32:	push   ss
  40db33:	jmp    0x40daf2
  40db35:	loopne 0x40db6d
  40db37:	pop    DWORD PTR [edi+0x36f6f696]
  40db3d:	ja     0x40dba0
  40db3f:	jle    0x40db7e
  40db41:	mov    WORD PTR [esi+0x23],cs
  40db44:	inc    ebp
  40db45:	clc    
  40db46:	hlt    
  40db47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db48:	xor    BYTE PTR ds:0x8b741a21,ch
  40db4e:	xor    DWORD PTR ds:0xa57ad53f,ecx
  40db54:	in     eax,0xae
  40db56:	fimul  DWORD PTR [ecx-0x1]
  40db59:	jp     0x40db93
  40db5b:	xchg   ebx,eax
  40db5c:	dec    ebp
  40db5d:	dec    ecx
  40db5e:	retf   
  40db5f:	sub    dl,BYTE PTR [esi+0x1e89f6cb]
  40db65:	outs   dx,DWORD PTR ds:[esi]
  40db66:	lock das 
  40db68:	push   DWORD PTR [ebx+0x77]
  40db6b:	loopne 0x40dba6
  40db6d:	mov    BYTE PTR [ecx+0x2b6f6dc8],dh
  40db73:	cmp    eax,0x6cfa31b0
  40db78:	enter  0x63de,0x4d
  40db7c:	stos   DWORD PTR es:[edi],eax
  40db7d:	inc    edi
  40db7e:	ret    0xcee3
  40db81:	mov    bl,BYTE PTR [edx+eiz*4+0x31717615]
  40db88:	repz push edx
  40db8a:	sbb    eax,0x91a546d3
  40db8f:	rcl    BYTE PTR [ebx-0x55],cl
  40db92:	cmp    edx,DWORD PTR [ecx-0x3d3f2c8b]
  40db98:	aas    
  40db99:	(bad)  
  40db9b:	push   fs
  40db9d:	(bad)  
  40db9e:	fwait
  40db9f:	not    ebp
  40dba1:	sub    DWORD PTR [ebx-0x12],esp
  40dba4:	dec    ecx
  40dba5:	mov    BYTE PTR [eax+0x65],dl
  40dba8:	inc    esi
  40dba9:	sti    
  40dbaa:	cs (bad) 
  40dbac:	(bad)  
  40dbad:	mov    esp,0xb8ec5e55
  40dbb2:	imul   esp,edi,0x62
  40dbb5:	std    
  40dbb6:	sub    al,0x14
  40dbb8:	jae    0x40db7f
  40dbba:	adc    BYTE PTR [ebx+0x5075d4e2],0x62
  40dbc1:	(bad)  
  40dbc2:	mov    eax,ds:0xd2cd8bae
  40dbc7:	push   es
  40dbc8:	lea    edi,ss:[esi-0x4cdede06]
  40dbcf:	and    BYTE PTR [esi-0x467f5c32],0x3b
  40dbd6:	and    bl,0x11
  40dbd9:	sbb    eax,DWORD PTR [ebx-0x43]
  40dbdc:	call   0x53c9a347
  40dbe1:	loope  0x40db93
  40dbe3:	push   cs
  40dbe4:	lahf   
  40dbe5:	dec    edx
  40dbe6:	cmp    dh,cl
  40dbe8:	je     0x40dc4c
  40dbea:	outs   dx,DWORD PTR ds:[esi]
  40dbeb:	mov    ecx,gs
  40dbed:	lods   al,BYTE PTR ds:[esi]
  40dbee:	mov    dh,0xe7
  40dbf0:	cmp    BYTE PTR ds:0xfccea1f9,0xc5
  40dbf7:	imul   BYTE PTR [ebx+0x2c]
  40dbfa:	xchg   ebp,eax
  40dbfb:	shl    BYTE PTR [ebx+0x34],0x41
  40dbff:	pop    ebp
  40dc00:	icebp  
  40dc01:	sbb    BYTE PTR [edx+eax*4-0x3c3b8e3b],al
  40dc08:	jle    0x40dbb3
  40dc0a:	adc    cl,BYTE PTR [edx+0x78]
  40dc0d:	stos   DWORD PTR es:[edi],eax
  40dc0e:	mov    ?,WORD PTR ds:0xcb3f80e
  40dc14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc15:	mov    eax,0x86dcbfc2
  40dc1a:	or     ebx,esp
  40dc1c:	aam    0x43
  40dc1e:	pop    ebp
  40dc1f:	sbb    ebp,DWORD PTR [esi-0x6ccc3379]
  40dc25:	push   ebp
  40dc26:	or     bh,BYTE PTR [ebx-0x11]
  40dc29:	and    dl,al
  40dc2b:	test   dl,al
  40dc2d:	adc    eax,0xbb52ad40
  40dc32:	out    0x37,al
  40dc34:	jae    0x40dc01
  40dc36:	inc    ebx
  40dc37:	(bad)  [esi+0x48ea6b2b]
  40dc3d:	fwait
  40dc3e:	call   0x101ccaa
  40dc43:	scas   al,BYTE PTR es:[edi]
  40dc44:	cmp    esi,DWORD PTR [ecx-0x12]
  40dc47:	fdivr  QWORD PTR [ebx+0x703f3a91]
  40dc4d:	in     al,0xc
  40dc4f:	retf   
  40dc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc51:	mov    BYTE PTR [edx+ecx*8+0x7d],dh
  40dc55:	sbb    DWORD PTR [ecx],ebp
  40dc57:	xchg   ecx,eax
  40dc58:	and    ecx,ebp
  40dc5a:	sub    eax,0xf940fb74
  40dc5f:	jmp    0x51f4:0xe831c2e7
  40dc66:	push   ss
  40dc67:	das    
  40dc68:	cmp    ecx,DWORD PTR [edi-0x33]
  40dc6b:	sbb    BYTE PTR [ebp-0x14f227fe],0x34
  40dc72:	push   ebp
  40dc73:	add    al,0x9a
  40dc75:	arpl   WORD PTR [esp+ecx*4],bp
  40dc78:	not    DWORD PTR [ebp+edx*2-0x19]
  40dc7c:	pop    esi
  40dc7d:	mov    al,ds:0x6345d3c6
  40dc82:	sti    
  40dc83:	popa   
  40dc84:	imul   DWORD PTR [esi]
  40dc86:	ja     0x40dc9b
  40dc88:	popa   
  40dc89:	push   ebx
  40dc8a:	jl     0x40dcb7
  40dc8c:	pop    ebp
  40dc8d:	sub    eax,0xea581eed
  40dc92:	and    BYTE PTR [eax-0x7dea02b1],0xee
  40dc99:	js     0x40dcef
  40dc9b:	mov    DWORD PTR [eax],edi
  40dc9d:	in     eax,0xc7
  40dc9f:	inc    edi
  40dca0:	lods   al,BYTE PTR ds:[esi]
  40dca1:	jo     0x40dd1a
  40dca3:	jno    0x40dcf6
  40dca5:	or     al,0x60
  40dca7:	in     al,0x2b
  40dca9:	inc    eax
  40dcaa:	sbb    eax,0x2adf0ca7
  40dcaf:	push   eax
  40dcb0:	les    ebx,FWORD PTR [ecx+0x43]
  40dcb3:	pusha  
  40dcb4:	pop    ds
  40dcb5:	stos   BYTE PTR es:[edi],al
  40dcb6:	jp     0x40dcf3
  40dcb8:	jb     0x40dc68
  40dcba:	ja     0x40dcd8
  40dcbc:	(bad)
  40dcbf:	lds    edi,FWORD PTR [esi-0x66]
  40dcc2:	mov    ebp,0x2106ff2
  40dcc7:	mov    esi,0x8480a658
  40dccc:	jle    0x40dd33
  40dcce:	push   ebx
  40dccf:	sub    BYTE PTR [ebx+0x64af61f9],al
  40dcd5:	pop    edi
  40dcd6:	adc    al,0xb6
  40dcd8:	scas   eax,DWORD PTR es:[edi]
  40dcd9:	push   edi
  40dcda:	sti    
  40dcdb:	jae    0x40dcdd
  40dcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcde:	in     al,dx
  40dcdf:	cld    
  40dce0:	xchg   BYTE PTR [ecx-0x400ec377],ah
  40dce6:	sahf   
  40dce7:	push   cs
  40dce8:	lods   eax,DWORD PTR fs:[esi]
  40dcea:	or     eax,0x4987a064
  40dcef:	dec    DWORD PTR [eax+0x75]
  40dcf2:	mov    eax,0x619346fe
  40dcf7:	cmc    
  40dcf8:	inc    ebx
  40dcf9:	mov    bh,0x30
  40dcfb:	mov    WORD PTR [ebp+0x1d],gs
  40dcfe:	lods   al,BYTE PTR ds:[esi]
  40dcff:	icebp  
  40dd00:	mov    cl,0x31
  40dd02:	shl    BYTE PTR [edx+0x25],cl
  40dd05:	xchg   ebx,eax
  40dd06:	xchg   ebx,eax
  40dd07:	fsub   QWORD PTR [esi+0x6e]
  40dd0a:	sub    DWORD PTR [esi+ecx*4+0x2baca641],edx
  40dd11:	jp     0x40dc93
  40dd13:	fwait
  40dd14:	and    eax,esi
  40dd16:	int    0x42
  40dd18:	es (bad) 
  40dd1a:	xor    al,0x7c
  40dd1c:	mov    ch,0xd9
  40dd1e:	pop    ds
  40dd1f:	xlat   BYTE PTR ds:[ebx]
  40dd20:	call   0x5603c6c9
  40dd25:	mov    cl,BYTE PTR [edi+0x32f48e78]
  40dd2b:	test   DWORD PTR [eax-0x38bc3678],ebp
  40dd31:	dec    eax
  40dd32:	xorps  xmm0,xmm2
  40dd35:	dec    esp
  40dd36:	jbe    0x40dd78
  40dd38:	dec    edi
  40dd39:	cmp    BYTE PTR [ebp+0x5c],0x76
  40dd3d:	xor    BYTE PTR [edi],ch
  40dd3f:	cmp    al,0x59
  40dd41:	xor    bh,0xf0
  40dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd46:	jno    0x40ddc7
  40dd48:	xchg   ebp,eax
  40dd49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd4a:	retf   0x6c6b
  40dd4d:	push   ds
  40dd4e:	inc    esi
  40dd4f:	jl     0x40dce2
  40dd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd52:	imul   ebx,DWORD PTR [eax+edi*8-0xa2d2afa],0x3d
  40dd5a:	push   eax
  40dd5b:	shl    DWORD PTR [eax+0x74d105c8],1
  40dd61:	or     bl,bl
  40dd63:	push   ecx
  40dd64:	mov    edx,DWORD PTR [eax+edx*8]
  40dd67:	cmp    al,0x7c
  40dd69:	push   ss
  40dd6a:	add    ch,BYTE PTR [ebp-0x38b08ef0]
  40dd70:	pop    ds
  40dd71:	adc    dl,BYTE PTR [esi-0x69587808]
  40dd77:	jge    0x40dd8c
  40dd79:	nop
  40dd7a:	lods   al,BYTE PTR ds:[esi]
  40dd7b:	adc    al,BYTE PTR [eax+0x56]
  40dd7e:	aam    0xa0
  40dd80:	jg     0x40dd37
  40dd82:	clc    
  40dd83:	xchg   esi,eax
  40dd84:	pop    es
  40dd85:	xchg   ebx,eax
  40dd86:	cli    
  40dd87:	mov    edi,0xfe51d68f
  40dd8c:	ds ja  0x40dd63
  40dd8f:	or     ah,dh
  40dd91:	imul   BYTE PTR [ecx-0x2809da6]
  40dd97:	mov    DWORD PTR [esi-0x5b],0x638ae7ea
  40dd9e:	int3   
  40dd9f:	jmp    0xcfaf:0x75329d7
  40dda6:	std    
  40dda7:	push   cs
  40dda8:	or     BYTE PTR [ebx+0x44],cl
  40ddab:	stos   DWORD PTR es:[edi],eax
  40ddac:	nop
  40ddad:	not    DWORD PTR [edx+0x4dc038bf]
  40ddb3:	ret    
  40ddb4:	push   ecx
  40ddb5:	stc    
  40ddb6:	jg     0x40dd97
  40ddb8:	xchg   ebp,eax
  40ddb9:	icebp  
  40ddba:	push   0xc78c8786
  40ddbf:	dec    edx
  40ddc0:	mov    ds:0x1e805773,al
  40ddc5:	and    esi,DWORD PTR [esi-0x26]
  40ddc8:	pop    esp
  40ddc9:	fdivr  DWORD PTR [ebp+0x7a2df85a]
  40ddcf:	sbb    BYTE PTR ds:0x703fc5e3,dl
  40ddd5:	mov    DWORD PTR [esi+0x3d],esp
  40ddd8:	xchg   ebx,eax
  40ddd9:	ficom  DWORD PTR [ebx+eax*1-0x67]
  40dddd:	lea    ecx,[eax+0x1d4af059]
  40dde3:	ja     0x40dde4
  40dde5:	mov    BYTE PTR ds:0x3fb3c116,bl
  40ddeb:	pop    es
  40ddec:	adc    DWORD PTR [edi+0x40],ebx
  40ddef:	cdq    
  40ddf0:	loop   0x40de17
  40ddf2:	aaa    
  40ddf3:	ret    
  40ddf4:	add    si,WORD PTR es:[edx+0x1aa71462]
  40ddfc:	xchg   BYTE PTR [esi+0x64],ah
  40ddff:	ins    BYTE PTR es:[edi],dx
  40de00:	(bad)  ds:[eax-0x6b25660f]
  40de07:	or     BYTE PTR [ebx],ah
  40de09:	adc    BYTE PTR ds:0x8157ddfb,cl
  40de0f:	cld    
  40de10:	ret    0xcfe6
  40de13:	lock sbb ebp,0x77
  40de17:	out    0x3,eax
  40de19:	jge    0x40ddaf
  40de1b:	push   esi
  40de1c:	mov    bh,0x80
  40de1e:	xchg   esp,eax
  40de1f:	mov    DWORD PTR [eax],eax
  40de21:	fs int3 
  40de23:	sub    BYTE PTR [edi-0x26],ch
  40de26:	daa    
  40de27:	sbb    esp,esp
  40de29:	rcl    BYTE PTR [edx-0x6993556c],cl
  40de2f:	int    0x5
  40de31:	xlat   BYTE PTR ds:[ebx]
  40de32:	(bad)  
  40de33:	pop    edi
  40de34:	sub    DWORD PTR [edx],0xe56e9ecc
  40de3a:	xchg   edi,eax
  40de3b:	add    eax,0x635eef7e
  40de40:	lea    eax,[eax+esi*8+0xc]
  40de44:	xor    esp,DWORD PTR [ecx+0x6a62fba1]
  40de4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4b:	mov    al,0xd1
  40de4d:	shr    BYTE PTR [ecx],0xbb
  40de50:	xchg   dh,al
  40de52:	dec    edx
  40de53:	jno    0x40ddd9
  40de55:	leave  
  40de56:	cmp    dl,bh
  40de58:	dec    eax
  40de59:	pop    esi
  40de5a:	and    al,BYTE PTR [ecx-0x3]
  40de5d:	test   bh,al
  40de5f:	fidivr DWORD PTR [ebp-0x123da366]
  40de65:	and    al,0x55
  40de67:	sbb    al,0xb4
  40de69:	sub    DWORD PTR [ebx],0x4e
  40de6c:	push   ebp
  40de6d:	or     ebp,esi
  40de6f:	outs   dx,BYTE PTR ds:[esi]
  40de70:	das    
  40de71:	iret   
  40de72:	jbe    0x40de8c
  40de74:	ror    BYTE PTR [esi],1
  40de76:	push   0x60
  40de78:	out    0xb2,eax
  40de7a:	pop    edi
  40de7b:	push   ecx
  40de7c:	es inc edx
  40de7e:	add    DWORD PTR [ecx+ebx*8-0x5ca942fa],edi
  40de85:	loopne 0x40de7e
  40de87:	xchg   esp,eax
  40de88:	cmp    al,0x48
  40de8a:	(bad)  
  40de8b:	jecxz  0x40debf
  40de8d:	pop    ecx
  40de8e:	ret    0xe420
  40de91:	push   ss
  40de92:	inc    ebx
  40de93:	or     dh,al
  40de95:	lea    edi,[esp+ebx*2]
  40de98:	mov    al,ds:0xeaac9e26
  40de9d:	xchg   ecx,eax
  40de9e:	frstor [esi-0xd]
  40dea1:	sbb    eax,0x1a6c9f49
  40dea6:	sbb    BYTE PTR [edx+0x5f],dl
  40dea9:	scas   al,BYTE PTR es:[edi]
  40deaa:	aad    0x75
  40deac:	sbb    ecx,DWORD PTR [eax+0x11]
  40deaf:	in     al,dx
  40deb0:	scas   eax,DWORD PTR es:[edi]
  40deb1:	es push edi
  40deb3:	test   BYTE PTR [ebx+0x3c],al
  40deb6:	fistp  DWORD PTR [ebx]
  40deb8:	adc    al,0xdd
  40deba:	cli    
  40debb:	jge    0x40de4e
  40debd:	aaa    
  40debe:	mov    al,0xe3
  40dec0:	cmp    DWORD PTR [edx-0x16],ebp
  40dec3:	cmp    cl,dh
  40dec5:	mov    eax,0xf9a7619
  40deca:	jmp    0x266e:0xb0eeca6f
  40ded1:	xchg   BYTE PTR [ecx-0x5e],dh
  40ded4:	lods   eax,DWORD PTR ds:[esi]
  40ded5:	add    ebp,ebp
  40ded7:	mov    al,ds:0xb9d2f9a9
  40dedc:	ret    
  40dedd:	jb     0x40df30
  40dedf:	stos   DWORD PTR es:[edi],eax
  40dee0:	xchg   ebp,eax
  40dee1:	and    al,0x0
  40dee3:	mov    dh,0x3d
  40dee5:	out    dx,al
  40dee6:	popf   
  40dee7:	pop    ecx
  40dee8:	lods   eax,DWORD PTR ds:[esi]
  40dee9:	pop    ebp
  40deea:	(bad)  
  40deeb:	dec    eax
  40deec:	mov    ds:0x2aa6a6c8,eax
  40def1:	mov    al,ds:0xaf013cea
  40def6:	stos   BYTE PTR es:[edi],al
  40def7:	pop    ss
  40def8:	sub    al,0x82
  40defa:	and    ecx,DWORD PTR [edi+0xd]
  40defd:	shl    esi,cl
  40deff:	mov    edi,0x6755e801
  40df04:	mov    ?,ebx
  40df06:	jbe    0x40df84
  40df08:	in     al,0xc8
  40df0a:	dec    edx
  40df0b:	pop    eax
  40df0c:	inc    esp
  40df0d:	enter  0x4344,0x9
  40df11:	xor    DWORD PTR [ebx+0x7d],esi
  40df14:	push   0xc0904217
  40df19:	pop    esp
  40df1a:	xor    BYTE PTR [ebx+0x4e],al
  40df1d:	adc    bh,BYTE PTR ds:0xb090e268
  40df23:	js     0x40df7c
  40df25:	loope  0x40dee8
  40df27:	and    ebx,DWORD PTR [eax+0x402ed5f7]
  40df2d:	inc    ebx
  40df2e:	inc    esi
  40df2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df30:	mov    bl,0x58
  40df32:	fld    QWORD PTR [ebx+ecx*4-0x68]
  40df36:	cli    
  40df37:	mov    cl,dl
  40df39:	xchg   DWORD PTR [ebx-0x16b0eab4],esi
  40df3f:	hlt    
  40df40:	test   eax,0xe320db5
  40df45:	mov    bl,0x95
  40df47:	outs   dx,BYTE PTR ds:[esi]
  40df48:	repz imul ebp,DWORD PTR [eax-0x54],0x7d3ca085
  40df50:	lds    ebp,FWORD PTR [esi-0x567b029c]
  40df56:	(bad)  
  40df57:	jg     0xa4c2123b
  40df5d:	xchg   esp,eax
  40df5e:	fistp  DWORD PTR [edi+esi*8]
  40df61:	pushf  
  40df62:	shl    DWORD PTR [eax],1
  40df64:	xor    ch,BYTE PTR [ebp+0x67]
  40df67:	dec    DWORD PTR fs:[edx]
  40df6a:	cmp    eax,0xaa9aa44e
  40df6f:	push   esi
  40df70:	dec    esi
  40df71:	out    0x1f,al
  40df73:	jmp    0x40df01
  40df75:	clc    
  40df76:	data16 hlt 
  40df78:	or     edi,0xf1ca685f
  40df7e:	add    eax,0xe5024cee
  40df83:	jle    0x40df27
  40df85:	out    dx,eax
  40df86:	and    al,0x8a
  40df88:	mov    cl,0x3f
  40df8a:	pop    ebp
  40df8b:	xor    BYTE PTR [ecx+ebx*4+0x42aa6244],bl
  40df92:	mov    eax,0x4a4e61f1
  40df97:	cmp    bh,BYTE PTR [ecx-0x4e]
  40df9a:	fcomp  QWORD PTR [esi-0xa744d91]
  40dfa0:	retf   
  40dfa1:	jne    0x40e004
  40dfa3:	lods   eax,DWORD PTR ds:[esi]
  40dfa4:	outs   dx,BYTE PTR ds:[esi]
  40dfa5:	jmp    0x40e00f
  40dfa7:	cmp    al,0xd4
  40dfa9:	test   BYTE PTR [ecx+0x5],0xc
  40dfad:	repz retf 
  40dfaf:	les    edx,FWORD PTR [ebp+0x58]
  40dfb2:	push   es
  40dfb3:	jle    0x40e004
  40dfb5:	xchg   ebx,eax
  40dfb6:	dec    esp
  40dfb7:	inc    eax
  40dfb8:	cli    
  40dfb9:	into   
  40dfba:	mov    cl,0x4f
  40dfbc:	stos   DWORD PTR es:[edi],eax
  40dfbd:	ja     0x40df9a
  40dfbf:	dec    ebp
  40dfc0:	ss push ds
  40dfc2:	mov    ch,BYTE PTR [esi]
  40dfc4:	pop    esi
  40dfc5:	inc    ecx
  40dfc6:	int3   
  40dfc7:	out    dx,al
  40dfc8:	cld    
  40dfc9:	push   ebx
  40dfca:	cmp    ah,BYTE PTR [esi+eax*4]
  40dfcd:	adc    edx,DWORD PTR [eax-0x22]
  40dfd0:	dec    ebp
  40dfd1:	jle    0x40dfa4
  40dfd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfd4:	outs   dx,DWORD PTR ds:[esi]
  40dfd5:	xor    BYTE PTR [ecx],ch
  40dfd7:	mov    esp,DWORD PTR [eax]
  40dfd9:	(bad)  
  40dfda:	mov    ebp,0x58fb00f1
  40dfdf:	call   0x9217:0x7fbd146b
  40dfe6:	or     BYTE PTR [ebx-0x71],bl
  40dfe9:	sbb    cl,BYTE PTR [edi]
  40dfeb:	push   0xffffff88
  40dfed:	xor    al,0xb7
  40dfef:	push   0x946a6320
  40dff4:	sbb    dh,BYTE PTR [eax-0x550949a3]
  40dffa:	popf   
  40dffb:	(bad)  
  40dffc:	daa    
  40dffd:	das    
  40dffe:	inc    edi
  40dfff:	mov    ecx,0x660eb2c3
  40e004:	outs   dx,DWORD PTR ds:[esi]
  40e005:	les    eax,FWORD PTR cs:[ecx+0x5c751df5]
  40e00c:	add    DWORD PTR [edi],ecx
  40e00e:	jmp    0xebd4:0x47849b70
  40e015:	fsubr  DWORD PTR [esi+0x18eb1433]
  40e01b:	push   ebp
  40e01c:	gs loopne 0x40e09e
  40e01f:	in     eax,0x1
  40e021:	or     cl,ah
  40e023:	or     bh,al
  40e025:	mov    dh,0x25
  40e027:	cmp    al,0x24
  40e029:	neg    edx
  40e02b:	(bad)  
  40e02c:	cwde   
  40e02d:	jbe    0x40e090
  40e02f:	cli    
  40e030:	sub    eax,DWORD PTR [edi+esi*4]
  40e033:	call   0x82dbdcac
  40e038:	fisub  WORD PTR [esi-0x3a]
  40e03b:	js     0x40e042
  40e03d:	ret    
  40e03e:	add    al,0xb6
  40e040:	xlat   BYTE PTR ds:[ebx]
  40e041:	fisttp DWORD PTR [esi]
  40e043:	jbe    0x40dfc6
  40e045:	ins    DWORD PTR es:[edi],dx
  40e046:	sub    BYTE PTR [eax+0x672a6081],al
  40e04c:	add    BYTE PTR [ebx-0x76],bh
  40e04f:	sahf   
  40e050:	and    al,0xc7
  40e052:	mov    ah,0x73
  40e054:	inc    ebx
  40e055:	push   0x27440560
  40e05a:	sbb    BYTE PTR [esi+0x53],ch
  40e05d:	sub    esp,edi
  40e05f:	push   esp
  40e060:	push   ebp
  40e061:	xor    al,0x0
  40e063:	repz imul esi,DWORD PTR [eax+0x8],0xffffff80
  40e068:	push   esp
  40e069:	sub    al,0xc3
  40e06b:	add    BYTE PTR ds:0xd950396d,ch
  40e071:	ds (bad) 
  40e073:	xor    eax,0xc9df3134
  40e078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e079:	aas    
  40e07a:	or     al,0x4f
  40e07c:	xor    bl,0xbc
  40e07f:	sub    DWORD PTR [edx-0x37],0x7
  40e083:	pop    ss
  40e084:	lods   al,BYTE PTR ds:[esi]
  40e085:	dec    ecx
  40e086:	mov    ecx,0x382e710b
  40e08b:	and    eax,0x6540ea30
  40e090:	xchg   ebp,eax
  40e091:	out    0x35,al
  40e093:	mov    ch,0xc1
  40e095:	sbb    eax,0xf1106881
  40e09a:	add    al,0xd5
  40e09c:	dec    ecx
  40e09d:	push   edi
  40e09e:	mov    dl,0x9e
  40e0a0:	aad    0x61
  40e0a2:	sbb    esi,DWORD PTR [ecx+0x3aac5cf9]
  40e0a8:	inc    edi
  40e0a9:	dec    esp
  40e0aa:	inc    edi
  40e0ab:	mov    DWORD PTR [ecx+edi*4-0x2d1498cd],ebp
  40e0b2:	add    cl,BYTE PTR [eax+0x34]
  40e0b5:	mov    eax,ds:0xbad57665
  40e0ba:	cld    
  40e0bb:	aas    
  40e0bc:	xor    ecx,esi
  40e0be:	push   ss
  40e0bf:	cmp    al,0x2b
  40e0c1:	push   ds
  40e0c2:	aam    0x20
  40e0c4:	xor    al,0x5e
  40e0c6:	or     BYTE PTR [edi+eax*8+0xa],ah
  40e0ca:	bsf    edx,DWORD PTR [edi+0x5f]
  40e0ce:	dec    edi
  40e0cf:	add    ah,BYTE PTR [ebx]
  40e0d1:	cmp    dl,BYTE PTR [ecx+0x2ea5f4a4]
  40e0d7:	inc    ebx
  40e0d8:	mov    esp,0xecffbbd4
  40e0dd:	cld    
  40e0de:	inc    edx
  40e0df:	(bad)  
  40e0e1:	out    0xf4,eax
  40e0e3:	mov    bh,0xf4
  40e0e5:	(bad)  
  40e0e6:	out    0xc2,al
  40e0e8:	sub    BYTE PTR [ebx-0x51289b14],ah
  40e0ee:	or     eax,0x73231439
  40e0f3:	fst    DWORD PTR [ecx+0x1b]
  40e0f6:	mov    ch,0x1b
  40e0f8:	nop
  40e0f9:	mov    dh,0x7f
  40e0fb:	cmp    eax,0xa8581711
  40e100:	cmp    al,0xe7
  40e102:	outs   dx,BYTE PTR ds:[esi]
  40e103:	je     0x40e086
  40e105:	push   0x9f467ca7
  40e10a:	cmp    al,0x49
  40e10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e10d:	adc    al,0x3
  40e10f:	cmp    esi,DWORD PTR [ecx+0x6e617791]
  40e115:	sbb    eax,0xa5da0b7f
  40e11a:	cmp    eax,0xddf02ce1
  40e11f:	je     0x40e19e
  40e121:	rcl    DWORD PTR [ebx+0x17a07c09],0xa2
  40e128:	loop   0x40e0d1
  40e12a:	ret    0x370f
  40e12d:	(bad)
  40e130:	ret    0x5d08
  40e133:	lods   al,BYTE PTR ds:[esi]
  40e134:	add    dl,BYTE PTR [esi]
  40e136:	adc    DWORD PTR [edi],esi
  40e138:	sbb    al,0x13
  40e13a:	test   edi,esp
  40e13c:	or     al,0x6e
  40e13e:	mov    dh,0x45
  40e140:	into   
  40e141:	xor    eax,0xa16ed552
  40e146:	arpl   WORD PTR [esi+0xf9f4459],sp
  40e14c:	push   esi
  40e14d:	clc    
  40e14e:	or     ch,BYTE PTR [ebp-0x56a5a4b9]
  40e154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e155:	mov    esi,esi
  40e157:	inc    edi
  40e158:	cmc    
  40e159:	hlt    
  40e15a:	mov    cl,0xb4
  40e15c:	push   esi
  40e15d:	inc    edi
  40e15e:	xchg   ebx,eax
  40e15f:	push   ebp
  40e160:	(bad)  
  40e162:	(bad)  
  40e163:	mul    DWORD PTR ds:0xda2e135c
  40e169:	pop    ds
  40e16a:	mov    bh,0x17
  40e16c:	daa    
  40e16d:	fisttp WORD PTR [edx]
  40e16f:	sub    BYTE PTR ds:0xa3b3403,dh
  40e175:	add    al,0xcc
  40e177:	retf   0x6d89
  40e17a:	jl     0x40e151
  40e17c:	mov    edi,0x70a38081
  40e181:	or     eax,0x1767cb8c
  40e186:	mov    eax,DWORD PTR [esi]
  40e188:	and    eax,0x136555ad
  40e18d:	shl    DWORD PTR [eax+0x5a1ce560],0x9f
  40e194:	scas   eax,DWORD PTR es:[edi]
  40e195:	outs   dx,DWORD PTR ds:[esi]
  40e196:	ret    
  40e197:	cs mov ebp,0xe21ca4c9
  40e19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e19e:	fiadd  WORD PTR [esi-0x78]
  40e1a1:	in     eax,dx
  40e1a2:	loopne 0x40e1ce
  40e1a4:	dec    edi
  40e1a5:	dec    ebx
  40e1a6:	scas   al,BYTE PTR es:[edi]
  40e1a7:	dec    ebp
  40e1a8:	jmp    0x730d:0x40a85f13
  40e1af:	outs   dx,DWORD PTR ds:[esi]
  40e1b0:	into   
  40e1b1:	ins    DWORD PTR es:[edi],dx
  40e1b2:	int    0x23
  40e1b4:	jg     0x40e1ca
  40e1b6:	jecxz  0x40e229
  40e1b8:	jge    0x40e13e
  40e1ba:	aam    0x1d
  40e1bc:	xchg   ecx,eax
  40e1bd:	add    al,0x4b
  40e1bf:	in     eax,0xc0
  40e1c1:	lods   eax,DWORD PTR ds:[esi]
  40e1c2:	sub    ah,BYTE PTR [ecx+0x79a010e9]
  40e1c8:	or     bl,BYTE PTR [esp+ecx*1]
  40e1cb:	hlt    
  40e1cc:	xchg   esp,eax
  40e1cd:	xlat   BYTE PTR ds:[ebx]
  40e1ce:	sub    al,0x56
  40e1d0:	jns    0x40e228
  40e1d2:	xchg   ebp,eax
  40e1d3:	cmp    al,0x43
  40e1d5:	adc    cl,0x61
  40e1d8:	inc    edx
  40e1d9:	push   eax
  40e1da:	dec    ebx
  40e1db:	in     eax,0x5d
  40e1dd:	cmp    edx,ebp
  40e1df:	call   0xdb612240
  40e1e4:	mov    bh,0x9c
  40e1e6:	aaa    
  40e1e7:	fwait
  40e1e8:	mov    bh,0xa7
  40e1ea:	jno    0x40e206
  40e1ec:	dec    ecx
  40e1ed:	mov    BYTE PTR [esi+ebx*8],dh
  40e1f0:	xor    dh,BYTE PTR [ebx-0x7f]
  40e1f3:	repz sbb ebp,DWORD PTR [edi-0x24f0c182]
  40e1fa:	push   edi
  40e1fb:	lahf   
  40e1fc:	ins    DWORD PTR es:[edi],dx
  40e1fd:	rol    DWORD PTR [esi-0x222ebf43],1
  40e203:	mov    edi,0x13e543c9
  40e208:	add    DWORD PTR [ecx],edi
  40e20a:	std    
  40e20b:	jge    0x40e1a7
  40e20d:	cld    
  40e20e:	je     0x40e285
  40e210:	mov    ch,0x4b
  40e212:	mov    ah,0x67
  40e214:	sahf   
  40e215:	mov    ebp,0x87fb0e57
  40e21a:	adc    edx,DWORD PTR [ebx+0x58]
  40e21d:	sub    BYTE PTR [esi+0x739020b7],bl
  40e223:	aam    0xb2
  40e225:	daa    
  40e226:	xchg   DWORD PTR [esp+ebp*8],edx
  40e229:	stos   DWORD PTR es:[edi],eax
  40e22a:	hlt    
  40e22b:	data16 mov gs:0x199d83b4,al
  40e232:	push   0x9a6e8c46
  40e237:	popa   
  40e238:	push   0xca05b891
  40e23d:	jmp    FWORD PTR [ebx+0x1cd1b702]
  40e243:	sar    BYTE PTR [eax-0x7f1bd7e5],0x91
  40e24a:	sub    ebx,DWORD PTR ds:0x57e564ae
  40e250:	mov    al,0x5d
  40e252:	in     eax,dx
  40e253:	out    dx,al
  40e254:	cmp    DWORD PTR ds:0x6cfc8d03,edx
  40e25a:	not    DWORD PTR [edi-0x3653e335]
  40e260:	lds    ebp,FWORD PTR [edx-0x13bd7b89]
  40e266:	addr16 push ebp
  40e268:	les    esi,FWORD PTR [edx+ebx*4]
  40e26b:	inc    eax
  40e26c:	mov    al,ds:0xd24cb422
  40e271:	add    ah,BYTE PTR [ecx+eiz*1+0x7e]
  40e275:	pop    ds
  40e276:	hlt    
  40e277:	xor    ch,cl
  40e279:	add    bl,0x79
  40e27c:	fidiv  DWORD PTR ds:0xb4504c76
  40e282:	stos   BYTE PTR es:[edi],al
  40e283:	lods   al,BYTE PTR ds:[esi]
  40e284:	iret   
  40e285:	lds    ebp,FWORD PTR [ecx-0x1b]
  40e288:	shl    DWORD PTR [edi+edx*2+0x3e],1
  40e28c:	jo     0x40e26a
  40e28e:	sbb    ah,BYTE PTR [esi+edx*8-0x75613a09]
  40e295:	out    dx,al
  40e296:	test   BYTE PTR [ebp-0x2c],bh
  40e299:	mov    DWORD PTR [esi+0x629cbe97],esi
  40e29f:	sbb    bh,ch
  40e2a1:	dec    esi
  40e2a2:	push   edx
  40e2a3:	jne    0x40e2ea
  40e2a5:	loop   0x40e324
  40e2a7:	dec    edx
  40e2a8:	push   ss
  40e2a9:	adc    BYTE PTR [ecx],0x26
  40e2ac:	inc    ecx
  40e2ad:	pop    ebx
  40e2ae:	pop    es
  40e2af:	retf   0x3a61
  40e2b2:	push   ss
  40e2b3:	pop    ss
  40e2b4:	stc    
  40e2b5:	mov    edx,0xc6e4c635
  40e2ba:	mov    edi,0x99616baa
  40e2bf:	(bad)  
  40e2c0:	xor    BYTE PTR [ebp+0x77203961],al
  40e2c6:	jl     0x40e2c5
  40e2c8:	fcmove st,st(4)
  40e2ca:	test   eax,0x5c10557d
  40e2cf:	(bad)  
  40e2d0:	push   ebx
  40e2d1:	cmp    al,0xf3
  40e2d3:	pop    ebx
  40e2d4:	dec    esi
  40e2d5:	jae    0x40e2d8
  40e2d7:	mov    ebx,0x1026f8
  40e2dc:	sub    dl,BYTE PTR [ecx+0x51]
  40e2df:	out    dx,al
  40e2e0:	loope  0x40e287
  40e2e2:	jecxz  0x40e2ab
  40e2e4:	jns    0x40e358
  40e2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e7:	popf   
  40e2e8:	jecxz  0x40e284
  40e2ea:	jbe    0x40e2d8
  40e2ec:	sbb    eax,0x3bbb7b44
  40e2f1:	dec    ecx
  40e2f2:	jb     0x40e2e1
  40e2f4:	(bad)  
  40e2f5:	jnp    0x40e34a
  40e2f7:	xchg   edi,eax
  40e2f8:	push   0xffffffc9
  40e2fa:	add    bh,BYTE PTR [ebx]
  40e2fc:	cmp    esp,DWORD PTR [eax+0x18d4b528]
  40e302:	cli    
  40e303:	stc    
  40e304:	outs   dx,BYTE PTR ds:[esi]
  40e305:	mov    esi,eax
  40e307:	ret    
  40e308:	add    BYTE PTR [ecx-0x1c],ah
  40e30b:	mov    DWORD PTR [edi+0x65e40656],edx
  40e311:	cs cmp eax,0x6f158fdf
  40e317:	(bad)  
  40e319:	call   0x978152e8
  40e31e:	mov    ah,0xec
  40e320:	outs   dx,BYTE PTR ds:[esi]
  40e322:	pop    eax
  40e323:	sbb    dl,bl
  40e325:	cmp    DWORD PTR [eax+0x5a],edi
  40e328:	and    BYTE PTR [esi-0x28d8dd1b],0xa1
  40e32f:	cmp    BYTE PTR ds:0x41bb4094,0x87
  40e336:	push   eax
  40e337:	scas   al,BYTE PTR es:[edi]
  40e338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e339:	xchg   ecx,eax
  40e33a:	add    DWORD PTR [edi-0x17],edx
  40e33d:	mov    eax,0x2c496959
  40e342:	les    edi,FWORD PTR [edi+0x56]
  40e345:	mov    al,0xe8
  40e347:	or     BYTE PTR [ebx+0x68],bh
  40e34a:	cdq    
  40e34b:	imul   ebx,DWORD PTR [edi-0x2864be45],0x5f125d58
  40e355:	call   0xb184:0x7c8c0c6
  40e35c:	in     al,0x59
  40e35e:	inc    ebp
  40e35f:	mov    al,ds:0x45654c3f
  40e364:	inc    ebp
  40e365:	mov    ebp,0x361175f8
  40e36a:	mov    ds:0x6d1f33e6,eax
  40e36f:	stc    
  40e370:	mov    eax,0xec628cb2
  40e375:	xchg   edi,eax
  40e376:	xchg   edx,eax
  40e377:	mov    WORD PTR ds:0x14fc4d08,?
  40e37d:	add    BYTE PTR [ecx],ch
  40e37f:	fwait
  40e380:	or     BYTE PTR [edi+0x2ce0f9b3],bh
  40e386:	xchg   esp,eax
  40e387:	pop    esi
  40e388:	into   
  40e389:	nop
  40e38a:	leave  
  40e38b:	std    
  40e38c:	pop    edi
  40e38d:	mov    cl,0x17
  40e38f:	call   0x5c8b:0xc22acc0e
  40e396:	rcl    DWORD PTR [esi],cl
  40e398:	jno    0x40e381
  40e39a:	in     al,dx
  40e39b:	ret    
  40e39c:	pushf  
  40e39d:	test   DWORD PTR ds:0x3310711c,esp
  40e3a3:	pop    eax
  40e3a4:	pop    esi
  40e3a5:	shr    edi,0x4b
  40e3a8:	jge    0x40e376
  40e3aa:	adc    edx,DWORD PTR [ecx+eiz*4]
  40e3ad:	cli    
  40e3ae:	fld    DWORD PTR [ecx+0x53]
  40e3b1:	inc    edx
  40e3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b3:	xchg   ebp,eax
  40e3b4:	jno    0x40e3ba
  40e3b6:	sbb    cl,BYTE PTR [esi+0x11168d85]
  40e3bc:	xor    edi,DWORD PTR [eax-0x4a2efbc3]
  40e3c2:	scas   al,BYTE PTR es:[edi]
  40e3c3:	nop
  40e3c4:	shl    edx,1
  40e3c6:	sub    al,0xac
  40e3c8:	test   eax,0x8d96a702
  40e3cd:	inc    ebp
  40e3ce:	dec    ecx
  40e3cf:	jae    0x40e37b
  40e3d1:	inc    esi
  40e3d2:	ja     0x40e36c
  40e3d4:	mov    al,ds:0xafb036ab
  40e3d9:	cmp    al,0x61
  40e3db:	xchg   ebx,eax
  40e3dc:	inc    BYTE PTR [eax+ecx*1+0x376d3ad4]
  40e3e3:	mov    edi,0x5796c4aa
  40e3e8:	mov    dl,0xe1
  40e3ea:	into   
  40e3eb:	push   eax
  40e3ec:	mov    BYTE PTR [esi],bl
  40e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ef:	sub    DWORD PTR [ecx-0x6cde6dee],0xd5507d7f
  40e3f9:	js     0x40e453
  40e3fb:	add    BYTE PTR [ebx+esi*2-0x5636a72],0xbd
  40e403:	imul   esi,DWORD PTR [edi+0x61],0x9da7fd98
  40e40a:	scas   eax,DWORD PTR es:[edi]
  40e40b:	or     eax,0x4b09178d
  40e410:	aas    
  40e411:	cld    
  40e412:	sub    ebp,DWORD PTR [ecx]
  40e414:	je     0x40e3da
  40e416:	mov    ebp,0xd00edba9
  40e41b:	or     dh,0xb3
  40e41e:	jno    0x40e417
  40e420:	sbb    dh,BYTE PTR [esi+0x0]
  40e423:	out    0x44,eax
  40e425:	sbb    BYTE PTR ds:0xf9d13001,bl
  40e42b:	and    BYTE PTR [esi],bl
  40e42d:	fwait
  40e42e:	sbb    eax,0x22496e9b
  40e433:	mov    al,ds:0xc0dfdfd4
  40e438:	xlat   BYTE PTR ds:[ebx]
  40e439:	add    al,0x20
  40e43b:	cmp    ebp,DWORD PTR [esi+0x4d]
  40e43e:	mov    eax,ds:0xa3bb50a4
  40e443:	int3   
  40e444:	(bad)  [edi]
  40e446:	nop
  40e447:	rcl    BYTE PTR [ebx],cl
  40e449:	adc    ebp,DWORD PTR [eax+0x3bc6d9d1]
  40e44f:	add    dl,BYTE PTR [ecx+0x4d]
  40e452:	ja     0x40e3f8
  40e454:	daa    
  40e455:	pop    ebx
  40e456:	rol    ch,1
  40e458:	je     0x40e3fc
  40e45a:	push   0x30
  40e45c:	fsub   DWORD PTR [ecx]
  40e45e:	ret    
  40e45f:	pop    edi
  40e460:	popf   
  40e461:	mov    bh,0x5
  40e463:	sub    dl,BYTE PTR [esi]
  40e465:	xor    bl,BYTE PTR [edx-0x43]
  40e468:	xor    bh,ch
  40e46a:	mov    ecx,DWORD PTR [eax]
  40e46c:	mov    edi,0xf599c3db
  40e471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e472:	push   ds
  40e473:	dec    esi
  40e474:	aaa    
  40e475:	add    DWORD PTR [eax-0x1],edi
  40e478:	push   0xeb80c9d1
  40e47d:	dec    ebx
  40e47e:	jecxz  0x40e48e
  40e480:	ss das 
  40e482:	inc    esp
  40e483:	test   eax,0xe71636fa
  40e488:	aad    0x7c
  40e48a:	std    
  40e48b:	push   edx
  40e48c:	xor    cl,ch
  40e48e:	mov    ebx,es
  40e490:	loop   0x40e417
  40e492:	sbb    al,0xc2
  40e494:	cli    
  40e495:	jmp    0x571e:0x406609f0
  40e49c:	dec    edx
  40e49d:	mov    edx,DWORD PTR [ebp+0x204adb94]
  40e4a3:	outs   dx,BYTE PTR ds:[esi]
  40e4a4:	cmp    DWORD PTR ss:[esp+ecx*1+0x6b],esp
  40e4a9:	repnz and ebx,DWORD PTR [ebp+edi*2-0x6]
  40e4ae:	mov    al,0x4a
  40e4b0:	popa   
  40e4b1:	ds pop esp
  40e4b3:	add    ebp,DWORD PTR [ebx-0x5dc88b03]
  40e4b9:	cld    
  40e4ba:	sbb    al,0xc8
  40e4bc:	mov    eax,0x392ad2be
  40e4c1:	inc    eax
  40e4c2:	dec    esi
  40e4c3:	scas   al,BYTE PTR es:[edi]
  40e4c4:	xlat   BYTE PTR ds:[ebx]
  40e4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c6:	and    eax,0xc30eab8a
  40e4cb:	add    al,0xd5
  40e4cd:	mov    ebx,esp
  40e4cf:	mov    ebp,0x22cad5f6
  40e4d4:	mov    ds:0x9232261,eax
  40e4d9:	adc    ebp,eax
  40e4db:	cli    
  40e4dc:	sbb    BYTE PTR [ebx+0x5b],ch
  40e4df:	mov    esi,0x8f2fdaf1
  40e4e4:	retf   0x5417
  40e4e7:	push   esp
  40e4e8:	(bad)  
  40e4e9:	or     dl,BYTE PTR [edx+0x5a]
  40e4ec:	mov    bh,0x5f
  40e4ee:	scas   eax,DWORD PTR es:[edi]
  40e4ef:	jl     0x40e52c
  40e4f1:	arpl   ax,si
  40e4f3:	leave  
  40e4f4:	lea    eax,[edx+0x5390bde2]
  40e4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fb:	mov    ebx,DWORD PTR [esi-0x1b]
  40e4fe:	repnz in eax,0xe7
  40e501:	outs   dx,DWORD PTR ds:[esi]
  40e502:	hlt    
  40e503:	mov    ds:0x53bdfee9,al
  40e508:	mov    cl,0xae
  40e50a:	scas   eax,DWORD PTR es:[edi]
  40e50b:	int3   
  40e50c:	xchg   BYTE PTR [ebx+0x2e083f23],bh
  40e512:	add    al,0x87
  40e514:	shr    DWORD PTR [ecx],0x9d
  40e517:	retf   0xc44
  40e51a:	jl     0x40e49f
  40e51c:	loop   0x40e583
  40e51e:	outs   dx,DWORD PTR ds:[esi]
  40e51f:	jg     0x40e4a8
  40e521:	push   ecx
  40e522:	dec    ecx
  40e523:	push   0x849cb96f
  40e528:	stos   BYTE PTR es:[edi],al
  40e529:	ins    BYTE PTR es:[edi],dx
  40e52a:	dec    ecx
  40e52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52c:	fprem  
  40e52e:	test   eax,0xdbee8b6a
  40e533:	jne    0x40e5a9
  40e535:	mov    ds:0x2adaf062,al
  40e53a:	pop    eax
  40e53b:	cmc    
  40e53c:	xchg   edx,eax
  40e53d:	cmp    esi,DWORD PTR [esi]
  40e53f:	mov    WORD PTR [ecx+0x78],?
  40e542:	iret   
  40e543:	(bad)  
  40e544:	ds dec ebp
  40e546:	sbb    eax,0xf93769d2
  40e54b:	sbb    al,0x25
  40e54d:	sub    bh,BYTE PTR [esi+0x40eb9ae7]
  40e553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e554:	cwde   
  40e555:	and    eax,0x3d198fa5
  40e55a:	gs nop
  40e55c:	fadd   QWORD PTR [edi+0x2a]
  40e55f:	retf   
  40e560:	cdq    
  40e561:	test   al,0xa6
  40e563:	push   ebx
  40e564:	push   0x33
  40e566:	dec    esp
  40e567:	ins    BYTE PTR es:[edi],dx
  40e568:	call   0x2cf9967b
  40e56d:	xchg   edx,eax
  40e56e:	jle    0x40e5d9
  40e570:	or     DWORD PTR [ecx+0x68b810ab],esi
  40e576:	dec    eax
  40e577:	sub    al,0x30
  40e579:	pusha  
  40e57a:	repz mov edx,DWORD PTR [edx+0x72]
  40e57e:	dec    esi
  40e57f:	mov    ch,0xa2
  40e581:	fs mov esi,0xbd5a6a1d
  40e587:	test   al,0x74
  40e589:	dec    ebp
  40e58a:	sbb    esp,0xf40a3c8c
  40e590:	je     0x40e567
  40e592:	mov    bl,0x6d
  40e594:	and    DWORD PTR [eax-0x38],esi
  40e597:	inc    edx
  40e598:	vrcpss xmm2,xmm6,DWORD PTR [edi-0x49]
  40e59d:	adc    al,0xb
  40e59f:	cmp    BYTE PTR [ebx-0x50eaa81e],al
  40e5a5:	shl    BYTE PTR [ebp+0x6c],0x8
  40e5a9:	inc    esi
  40e5aa:	jmp    0x725d:0xeed4ddd3
  40e5b1:	mov    al,0xb3
  40e5b3:	sahf   
  40e5b4:	aad    0xb5
  40e5b6:	leave  
  40e5b7:	repnz adc al,0x98
  40e5ba:	push   ecx
  40e5bb:	mov    bl,0xc0
  40e5bd:	mov    WORD PTR [ebp+0x6b1615d6],?
  40e5c3:	mov    cs,esp
  40e5c5:	jo     0x40e5ea
  40e5c7:	pop    es
  40e5c8:	fnstsw WORD PTR [edi+0x59]
  40e5cb:	inc    edi
  40e5cc:	repz ror DWORD PTR [esi+ebx*8],cl
  40e5d0:	inc    ebx
  40e5d1:	outs   dx,BYTE PTR ds:[esi]
  40e5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d3:	adc    BYTE PTR [ebp-0x5908286b],ah
  40e5d9:	sbb    DWORD PTR [ebp-0x18d20b47],0xa0e8a2d4
  40e5e3:	dec    ebx
  40e5e4:	lea    ecx,[ebp-0x67]
  40e5e7:	shl    DWORD PTR [ebx+0x72],0x67
  40e5eb:	bound  edi,QWORD PTR [ecx+0x52bc3ae2]
  40e5f1:	scas   eax,DWORD PTR es:[edi]
  40e5f2:	mov    esp,DWORD PTR [eax+0x36]
  40e5f5:	pop    edx
  40e5f6:	clc    
  40e5f7:	shl    DWORD PTR [esp+ebp*8-0x61],0x9f
  40e5fc:	jge    0x40e65e
  40e5fe:	shr    BYTE PTR [ecx],cl
  40e600:	aam    0x68
  40e602:	or     DWORD PTR [ebx-0x77],edx
  40e605:	cs pop ecx
  40e607:	nop
  40e608:	xchg   ebx,eax
  40e609:	cs jmp 0x81568c4a
  40e60f:	xor    ah,al
  40e611:	mov    ecx,0x38c68c45
  40e616:	in     eax,0x47
  40e618:	cmp    BYTE PTR [edi],al
  40e61a:	mov    ss,ebx
  40e61c:	retf   0xaf2a
  40e61f:	add    dl,BYTE PTR [edx-0x5d]
  40e622:	lods   eax,DWORD PTR ds:[esi]
  40e623:	inc    esi
  40e624:	(bad)  
  40e625:	pusha  
  40e626:	mov    eax,DWORD PTR [ebx-0x66]
  40e629:	or     dh,BYTE PTR [edx+0x21]
  40e62c:	jl     0x40e651
  40e62e:	mov    cl,BYTE PTR [eax-0x4b8b4ac2]
  40e634:	les    esi,FWORD PTR [esi+0x6483d3ba]
  40e63a:	add    DWORD PTR [ebx+esi*8-0x57],esi
  40e63e:	mov    ds:0xb1e19469,al
  40e643:	dec    edi
  40e644:	cmp    ecx,DWORD PTR [edx]
  40e646:	jbe    0x40e6a0
  40e648:	in     eax,dx
  40e649:	js     0x40e5e2
  40e64b:	mov    al,ds:0x7041bbf6
  40e650:	mov    eax,ds:0x771f9e7b
  40e655:	sub    eax,0x186e1641
  40e65a:	jbe    0x40e611
  40e65c:	jbe    0x40e69d
  40e65e:	inc    esp
  40e65f:	rcl    BYTE PTR [edi-0x6138cd43],cl
  40e665:	ja     0x40e696
  40e667:	mov    bl,0x7d
  40e669:	sub    DWORD PTR [edi],edx
  40e66b:	xchg   DWORD PTR [ecx+ebx*1],ebx
  40e66e:	push   esp
  40e66f:	into   
  40e670:	mov    bh,0x13
  40e672:	in     eax,dx
  40e673:	enter  0xb181,0xd4
  40e677:	push   esi
  40e678:	and    esi,esi
  40e67a:	jne    0x40e698
  40e67c:	xchg   esi,eax
  40e67d:	imul   DWORD PTR [eiz*8-0x291defc]
  40e684:	xor    al,bh
  40e686:	jecxz  0x40e651
  40e688:	xlat   BYTE PTR ds:[ebx]
  40e689:	repz mov ebx,0x1a7302b8
  40e68f:	inc    esp
  40e690:	push   ss
  40e691:	inc    ebp
  40e692:	dec    esi
  40e693:	and    esp,eax
  40e695:	ss fwait
  40e697:	push   eax
  40e698:	xchg   edx,eax
  40e699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e69a:	in     al,dx
  40e69b:	addr16 loope 0x40e62d
  40e69e:	std    
  40e69f:	add    al,0xf2
  40e6a1:	sub    al,ah
  40e6a3:	int    0xeb
  40e6a5:	and    ebp,edx
  40e6a7:	imul   edi,ebp,0x99ce06f4
  40e6ad:	ins    DWORD PTR es:[edi],dx
  40e6ae:	bound  ecx,QWORD PTR [esi-0xe]
  40e6b1:	test   al,0x43
  40e6b3:	in     al,dx
  40e6b4:	fs inc edx
  40e6b6:	imul   edx,DWORD PTR [ecx],0x5f
  40e6b9:	jle    0x40e6f7
  40e6bb:	dec    esi
  40e6bc:	test   BYTE PTR [ebx],bl
  40e6be:	add    dh,ch
  40e6c0:	push   edi
  40e6c1:	imul   ebx,DWORD PTR [ecx],0x268b1181
  40e6c7:	rol    BYTE PTR [ecx],cl
  40e6c9:	je     0x40e6ff
  40e6cb:	xor    al,0xa
  40e6cd:	xchg   DWORD PTR [ebp+0x58],ecx
  40e6d0:	ret    
  40e6d1:	ffreep st(5)
  40e6d3:	jno    0x40e6d5
  40e6d5:	das    
  40e6d6:	stos   DWORD PTR es:[edi],eax
  40e6d7:	push   edx
  40e6d8:	mov    ds:0x1064b2c,eax
  40e6dd:	push   ebx
  40e6de:	call   0x34345c2d
  40e6e3:	popf   
  40e6e4:	shl    BYTE PTR [esi-0x7d35bbc7],1
  40e6ea:	cmp    al,dh
  40e6ec:	scas   al,BYTE PTR es:[edi]
  40e6ed:	test   DWORD PTR [edx+0x4db9e952],esi
  40e6f3:	and    al,0x34
  40e6f5:	data16 mov al,ds:0x37dea203
  40e6fb:	or     eax,0x6d36adf1
  40e700:	fdiv   QWORD PTR [edi-0xd]
  40e703:	sub    BYTE PTR [edi],bh
  40e705:	ds jbe 0x40e6d4
  40e708:	cmovp  ebx,ecx
  40e70b:	(bad)  
  40e70c:	js     0x40e6d6
  40e70e:	jp     0x40e6a8
  40e710:	aam    0x3c
  40e712:	xchg   ebp,eax
  40e713:	pop    edi
  40e714:	cmp    eax,DWORD PTR [ebp+0x4b]
  40e717:	out    dx,al
  40e718:	std    
  40e719:	dec    ebx
  40e71a:	dec    eax
  40e71b:	adc    eax,0xdc95407
  40e720:	pop    es
  40e721:	mov    BYTE PTR [ebp-0x64],ch
  40e724:	fwait
  40e725:	xor    ch,BYTE PTR [esi-0x1910c6fd]
  40e72b:	xchg   edx,eax
  40e72c:	add    al,0xf9
  40e72e:	repnz xlat BYTE PTR ds:[ebx]
  40e730:	xor    dh,BYTE PTR [edx-0x65]
  40e733:	adc    ebp,DWORD PTR [eax-0x64]
  40e736:	(bad)  
  40e737:	in     al,0x61
  40e739:	or     al,0x2d
  40e73b:	repz or DWORD PTR [ecx],ebx
  40e73e:	jne    0x40e7ab
  40e740:	jge    0x40e76f
  40e742:	fwait
  40e743:	mov    ecx,0xeb0e765d
  40e748:	mov    al,ds:0x69aeffc7
  40e74d:	inc    esi
  40e74e:	inc    ebx
  40e74f:	jmp    0x60e0:0x6dd33c01
  40e756:	js     0x40e7ae
  40e758:	xor    ebx,ebp
  40e75a:	adc    dh,BYTE PTR ds:0xf0543b10
  40e760:	and    BYTE PTR [esi+0x1d],ah
  40e763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e764:	dec    esi
  40e765:	lea    edx,[edx+0x79]
  40e768:	jge    0x40e6fd
  40e76a:	fisub  WORD PTR [ecx-0x41]
  40e76d:	mov    al,BYTE PTR [eax]
  40e76f:	jg     0x40e7d7
  40e771:	jge    0x40e763
  40e773:	rol    BYTE PTR [ecx-0x422eb69a],cl
  40e779:	fs pop eax
  40e77b:	not    BYTE PTR [eax+ecx*4]
  40e77e:	pushf  
  40e77f:	mov    ebx,0x4656c43e
  40e784:	mov    eax,ds:0x24d0643d
  40e789:	retf   0x349
  40e78c:	sbb    ebp,eax
  40e78e:	dec    ebx
  40e78f:	in     al,dx
  40e790:	test   al,0x82
  40e792:	xchg   ecx,eax
  40e793:	and    ah,BYTE PTR [edi+eax*8-0x1828c104]
  40e79a:	xor    DWORD PTR [ebp-0x51],esi
  40e79d:	and    al,0x56
  40e79f:	xor    bl,BYTE PTR [ecx]
  40e7a1:	mov    bl,0xd5
  40e7a3:	lock stos BYTE PTR es:[edi],al
  40e7a5:	sub    ah,BYTE PTR [ebx-0x33e71a62]
  40e7ab:	pop    es
  40e7ac:	and    al,BYTE PTR [edi-0xe1eb3fe]
  40e7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b3:	pushf  
  40e7b4:	jecxz  0x40e7dd
  40e7b6:	mov    ds:0xadf46a54,al
  40e7bb:	push   edx
  40e7bc:	ins    DWORD PTR es:[edi],dx
  40e7bd:	mov    DWORD PTR [eax-0x3],ebx
  40e7c0:	std    
  40e7c1:	imul   ebp,DWORD PTR [edi+0x47bbe412],0xd2c64715
  40e7cb:	or     DWORD PTR [eax+0x6ba4d3a0],ebp
  40e7d1:	fsub   st,st(4)
  40e7d3:	pop    edx
  40e7d4:	jmp    0x7518:0xe5314915
  40e7db:	imul   eax,DWORD PTR [esi+0x50a77c7e],0x538e88c4
  40e7e5:	add    ecx,DWORD PTR [eax-0x84b2568]
  40e7eb:	mov    ds:0x3f38f32c,al
  40e7f0:	mov    ebx,0x2e619e77
  40e7f5:	mov    es,WORD PTR es:[esi-0xf]
  40e7f9:	xor    eax,0xfbb7390b
  40e7fe:	xchg   ebx,eax
  40e7ff:	in     eax,0x70
  40e801:	fmulp  st(4),st
  40e803:	adc    bh,BYTE PTR [ebx-0x69]
  40e806:	out    0x5c,eax
  40e808:	xchg   edi,eax
  40e809:	js     0x40e875
  40e80b:	jns    0x40e850
  40e80d:	(bad)  
  40e80e:	mov    esi,0x73db2b9d
  40e813:	inc    edi
  40e814:	aad    0x12
  40e816:	jge    0x40e7c0
  40e818:	pcmpeqd mm0,QWORD PTR [edi]
  40e81b:	pop    ebp
  40e81c:	popf   
  40e81d:	push   ebp
  40e81e:	in     al,dx
  40e81f:	daa    
  40e820:	daa    
  40e821:	pop    ebp
  40e822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e823:	clc    
  40e824:	(bad)  
  40e825:	push   esi
  40e826:	loop   0x40e874
  40e828:	xchg   esi,eax
  40e829:	jbe    0x40e7ed
  40e82b:	xlat   BYTE PTR ds:[ebx]
  40e82c:	xor    ch,cl
  40e82e:	fwait
  40e82f:	or     BYTE PTR ds:0xa75b3294,bh
  40e835:	pop    edi
  40e836:	in     eax,0xb6
  40e838:	fild   DWORD PTR [esi]
  40e83a:	mov    al,0xfa
  40e83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e83d:	jae    0x40e7d0
  40e83f:	(bad)  
  40e840:	stos   DWORD PTR es:[edi],eax
  40e841:	jno    0x40e7f0
  40e843:	aam    0xca
  40e845:	push   edi
  40e846:	lea    ebx,[eax-0x17a2c07]
  40e84c:	mov    bl,0xd9
  40e84e:	std    
  40e84f:	into   
  40e850:	(bad)  
  40e851:	sbb    eax,0xfc84a77e
  40e856:	out    dx,eax
  40e857:	in     eax,dx
  40e858:	out    0xa5,eax
  40e85a:	hlt    
  40e85b:	jle    0x40e878
  40e85d:	mov    al,ds:0xac11bd0b
  40e862:	in     eax,dx
  40e863:	inc    edx
  40e864:	outs   dx,BYTE PTR ds:[esi]
  40e865:	mov    ebx,0xc255ad69
  40e86a:	(bad)  
  40e86b:	fdiv   QWORD PTR [edx]
  40e86d:	mov    eax,0x415de92e
  40e872:	sti    
  40e873:	mov    edi,0xcb864a99
  40e878:	fisub  WORD PTR [eax+0x60]
  40e87b:	cmp    ch,BYTE PTR ds:0xec56dde5
  40e882:	mov    ah,0x10
  40e884:	jle    0x40e8b6
  40e886:	out    dx,eax
  40e887:	mov    ah,0xbe
  40e889:	fdivrp st(5),st
  40e88b:	jmp    0x216be025
  40e890:	aad    0x66
  40e892:	mov    ecx,0x3f575b67
  40e897:	mov    esp,0x11bfd449
  40e89c:	mov    bl,0xf8
  40e89e:	pop    eax
  40e89f:	push   0x79
  40e8a1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e8a3:	sub    dl,dl
  40e8a5:	add    esi,esp
  40e8a7:	mov    WORD PTR [edx],ds
  40e8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8aa:	jecxz  0x40e883
  40e8ac:	scas   al,BYTE PTR es:[edi]
  40e8ad:	push   edx
  40e8ae:	push   ss
  40e8af:	aaa    
  40e8b0:	mov    ds:0x352e1c95,al
  40e8b5:	cmp    eax,0x728f53b
  40e8ba:	cld    
  40e8bb:	rcl    DWORD PTR [esi-0x6f],1
  40e8be:	in     eax,dx
  40e8bf:	sub    dl,BYTE PTR [ebx+0x3a]
  40e8c2:	clc    
  40e8c3:	xchg   ecx,eax
  40e8c4:	pop    esi
  40e8c5:	int3   
  40e8c6:	test   BYTE PTR [edx],cl
  40e8c8:	cmp    ah,BYTE PTR [edx]
  40e8ca:	and    BYTE PTR [edi+0x3f],dl
  40e8cd:	and    dl,BYTE PTR [ebp+0x3cc335f2]
  40e8d3:	test   DWORD PTR [ebx-0x6b7636db],esp
  40e8d9:	jl     0x40e922
  40e8db:	cmp    eax,0xf267e6be
  40e8e0:	daa    
  40e8e1:	add    BYTE PTR [esi-0x40],0x19
  40e8e5:	(bad)  
  40e8e6:	or     al,0xa2
  40e8e8:	jo     0x40e8bb
  40e8ea:	pop    edx
  40e8eb:	mov    ds:0x59f1e181,eax
  40e8f0:	mov    al,0x99
  40e8f2:	mov    edx,0x260684ad
  40e8f7:	fld    st(3)
  40e8f9:	or     dh,cl
  40e8fb:	sub    BYTE PTR [ebp-0x9],bh
  40e8fe:	push   0xfffffff9
  40e900:	fnstcw WORD PTR [esi]
  40e902:	push   ss
  40e903:	dec    ecx
  40e904:	cmp    DWORD PTR [edx+0x13c3c57d],edi
  40e90a:	test   eax,esp
  40e90c:	xchg   edx,eax
  40e90d:	jmp    0x952b:0xe0d6e505
  40e914:	and    BYTE PTR [edi+0x663e1751],0xb6
  40e91b:	test   eax,0x60b66747
  40e920:	sub    edx,edx
  40e922:	mov    BYTE PTR [edi],al
  40e924:	sbb    BYTE PTR [ecx],ch
  40e926:	pop    edx
  40e927:	xor    ebp,DWORD PTR [ebp+0xa]
  40e92a:	mov    DWORD PTR [eax],ebp
  40e92c:	clc    
  40e92d:	scas   eax,DWORD PTR es:[edi]
  40e92e:	jp     0x40e8c1
  40e930:	out    dx,eax
  40e931:	or     al,BYTE PTR [edi+0x6876d19f]
  40e937:	mov    ch,0xed
  40e939:	test   DWORD PTR [ebx],ecx
  40e93b:	mov    bh,BYTE PTR [ebx-0x3459657b]
  40e941:	jle    0x40e8c8
  40e943:	in     al,dx
  40e944:	sti    
  40e945:	por    mm3,QWORD PTR [ebx-0x60]
  40e949:	mov    ebp,0xe660f103
  40e94e:	in     al,dx
  40e94f:	mov    ds:0x8256039c,al
  40e954:	lea    ecx,[ebx]
  40e956:	mov    dh,0x36
  40e958:	std    
  40e959:	mov    esp,0x6b8f734e
  40e95e:	dec    edx
  40e95f:	push   cx
  40e961:	pop    ebx
  40e962:	xor    DWORD PTR [ebx+0x45],esp
  40e965:	jecxz  0x40e902
  40e967:	xchg   ecx,eax
  40e968:	jnp    0x40e9e4
  40e96a:	xchg   edi,eax
  40e96b:	jo     0x40e964
  40e96d:	push   0x73725803
  40e972:	repnz fucomi st,st(1)
  40e975:	jge    0x40e964
  40e977:	jmp    0xe75b9950
  40e97c:	fcom   QWORD PTR [ebx+esi*4]
  40e97f:	adc    BYTE PTR [ecx-0x79],dl
  40e982:	ret    0x8694
  40e985:	sbb    eax,0xedd37984
  40e98a:	mov    edx,0x73f504f9
  40e98f:	add    al,0xe7
  40e991:	lahf   
  40e992:	js     0x40e994
  40e994:	aaa    
  40e995:	(bad)  
  40e996:	stos   BYTE PTR es:[edi],al
  40e997:	or     edx,DWORD PTR [ecx-0x30e2536]
  40e99d:	dec    edi
  40e99e:	adc    BYTE PTR [esi+0x38],dh
  40e9a1:	imul   ebx,DWORD PTR [esi],0x8dec07d0
  40e9a7:	sbb    eax,edx
  40e9a9:	xor    BYTE PTR [ebx+ebx*2],cl
  40e9ac:	fadd   DWORD PTR [edx-0x72]
  40e9af:	call   0x855:0x17c10cad
  40e9b6:	loop   0x40e93c
  40e9b8:	and    DWORD PTR [edx+eax*8],edx
  40e9bb:	jge    0x40e98c
  40e9bd:	pop    es
  40e9be:	aam    0x51
  40e9c0:	out    0x1,al
  40e9c2:	push   es
  40e9c3:	adc    dl,dl
  40e9c5:	xchg   ecx,eax
  40e9c6:	and    cl,cl
  40e9c8:	jl     0x40e9ff
  40e9ca:	in     eax,0x7e
  40e9cc:	and    eax,0x1de80988
  40e9d1:	or     DWORD PTR [eax+0x8],ebx
  40e9d4:	and    eax,0xf2701fea
  40e9d9:	jmp    0x40ea49
  40e9db:	mov    al,ds:0x34ffd27c
  40e9e0:	xlat   BYTE PTR ds:[ebx]
  40e9e1:	mov    DWORD PTR [ebp+0x9],esi
  40e9e4:	sar    DWORD PTR [esi+ecx*8+0x7306fa26],1
  40e9eb:	retf   
  40e9ec:	daa    
  40e9ed:	shld   DWORD PTR [esi+0x20],esi,0x25
  40e9f2:	mov    ecx,0x624f465d
  40e9f7:	add    DWORD PTR [ebx],edi
  40e9f9:	in     al,0xe2
  40e9fb:	mov    ds:0xda9ce885,eax
  40ea00:	sbb    eax,0x9df1c220
  40ea05:	(bad)  
  40ea06:	fisub  DWORD PTR [ebx-0x41]
  40ea09:	(bad)  
  40ea0b:	out    0x3b,al
  40ea0d:	sbb    ebx,DWORD PTR [ecx+0x3ed09ac5]
  40ea13:	pop    esp
  40ea14:	sets   cl
  40ea17:	jl     0x40ea19
  40ea19:	adc    bh,dl
  40ea1b:	cmp    eax,0x4e4dfa52
  40ea20:	sub    bl,al
  40ea22:	in     eax,0xc5
  40ea24:	inc    edx
  40ea25:	mov    DWORD PTR [ebp+0x634ae654],esp
  40ea2b:	sbb    esi,DWORD PTR [eax+0x6b870f45]
  40ea31:	or     cl,BYTE PTR [ebx+0x8e26c62]
  40ea37:	ja     0x40ea10
  40ea39:	out    0x4a,eax
  40ea3b:	and    DWORD PTR [edi+0x5e76f59c],ebx
  40ea41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea42:	in     eax,0xf7
  40ea44:	sahf   
  40ea45:	push   ss
  40ea46:	movups xmm1,xmm1
  40ea49:	and    BYTE PTR [esi+0x53],bh
  40ea4c:	mov    eax,0x65e61a64
  40ea51:	fst    DWORD PTR [edx+0x37537f29]
  40ea57:	cs idiv esi
  40ea5a:	mov    al,ds:0x8fb65b01
  40ea5f:	test   al,0xb3
  40ea61:	cdq    
  40ea62:	mov    edi,0x19cf631a
  40ea67:	ret    
  40ea68:	inc    ebx
  40ea69:	inc    esp
  40ea6a:	sbb    al,bh
  40ea6c:	iret   
  40ea6d:	cdq    
  40ea6e:	mov    bh,0x1c
  40ea70:	push   eax
  40ea71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea72:	add    BYTE PTR [edx-0x4a],bl
  40ea75:	scas   al,BYTE PTR es:[edi]
  40ea76:	in     al,dx
  40ea77:	push   esp
  40ea78:	in     al,dx
  40ea79:	imul   esp,ecx,0x8ebdbb7c
  40ea7f:	outs   dx,DWORD PTR ds:[esi]
  40ea80:	fwait
  40ea81:	int3   
  40ea82:	lea    ebp,[edi-0x66705c0a]
  40ea88:	sti    
  40ea89:	xchg   BYTE PTR [edx],bh
  40ea8b:	fst    DWORD PTR [ebx+ebx*4+0x34]
  40ea8f:	out    0x9e,al
  40ea91:	push   eax
  40ea92:	pop    ecx
  40ea93:	mov    eax,ds:0xd560cfad
  40ea98:	pop    ebp
  40ea99:	mov    edi,0xf922d2c7
  40ea9e:	mov    ah,0xc7
  40eaa0:	sub    eax,0x35cfa6a0
  40eaa5:	shl    BYTE PTR [esp+edx*1+0x6f834835],cl
  40eaac:	(bad)  
  40eaad:	out    0x59,al
  40eaaf:	jle    0x40eb0c
  40eab1:	sar    DWORD PTR [edi],cl
  40eab3:	retf   0x52a7
  40eab6:	aam    0x60
  40eab8:	jg     0x40eaca
  40eaba:	lds    esi,FWORD PTR gs:[edx+0x598447c5]
  40eac1:	loopne 0x40eb2c
  40eac3:	sbb    cl,BYTE PTR [esi+0x64]
  40eac6:	sub    BYTE PTR [edx-0x1bfdca1],0x4f
  40eacd:	push   es
  40eace:	add    eax,0x579a947
  40ead4:	out    dx,eax
  40ead5:	das    
  40ead6:	add    BYTE PTR [ebp-0x4c],ah
  40ead9:	pop    ebx
  40eada:	mov    ebx,0xf76eb10a
  40eadf:	jb     0x40eacf
  40eae1:	fwait
  40eae2:	aad    0xe8
  40eae4:	out    0xb4,al
  40eae6:	sahf   
  40eae7:	mov    edi,0xc88821c9
  40eaec:	cs xchg ebp,eax
  40eaee:	pop    edi
  40eaef:	jbe    0x40eaa9
  40eaf1:	fisttp QWORD PTR [edx-0x734b92a2]
  40eaf7:	pop    ecx
  40eaf8:	and    ah,BYTE PTR [edx-0x5a]
  40eafb:	jmp    0x49f7:0xfda0b36c
  40eb02:	xchg   ebp,eax
  40eb03:	mov    edi,0x9d6d444a
  40eb08:	loop   0x40eb06
  40eb0a:	jbe    0x40eb88
  40eb0c:	mov    ds:0x7d4e381a,eax
  40eb11:	cld    
  40eb12:	cmp    cl,dh
  40eb14:	lea    ecx,ds:0x9b8f4990
  40eb1a:	inc    ebp
  40eb1b:	ins    BYTE PTR es:[edi],dx
  40eb1c:	jo     0x40eaa0
  40eb1e:	cmp    BYTE PTR [edx],dh
  40eb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb21:	(bad)  
  40eb22:	xor    bl,bl
  40eb24:	jg     0x40eac0
  40eb26:	add    al,BYTE PTR [ebx+eiz*4-0x3fd1a1e8]
  40eb2d:	mov    bh,0xe
  40eb2f:	test   eax,0x63b59cb6
  40eb34:	inc    esp
  40eb35:	jge    0x40ead8
  40eb37:	and    ah,BYTE PTR [eax+0x3d]
  40eb3a:	mov    esi,0xad40c8d8
  40eb3f:	mov    ds:0x2786e64e,eax
  40eb44:	call   0xf9fd:0x62bece08
  40eb4b:	pop    ebp
  40eb4c:	nop
  40eb4d:	sub    al,0x8b
  40eb4f:	or     ah,BYTE PTR [edx+0x53d4d74]
  40eb55:	pop    ebp
  40eb56:	mov    bh,0x30
  40eb58:	(bad)  
  40eb59:	jle    0x40eadb
  40eb5b:	cmp    BYTE PTR [edx+0x6b],0x9f
  40eb5f:	xchg   ebx,eax
  40eb60:	ret    0x126
  40eb63:	inc    edi
  40eb64:	add    al,0x94
  40eb66:	mov    ebp,0xa3dadb95
  40eb6b:	pop    es
  40eb6c:	cmp    DWORD PTR [ebp-0x62],ebx
  40eb6f:	sbb    BYTE PTR [ebx-0x76],0x5c
  40eb73:	fidivr DWORD PTR [eax]
  40eb75:	dec    ecx
  40eb76:	add    al,0x12
  40eb78:	or     dl,cl
  40eb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb7b:	or     eax,0x5bfcecb2
  40eb80:	xchg   ecx,eax
  40eb81:	mov    esi,0xab551c12
  40eb86:	lds    eax,FWORD PTR [eax+eax*8-0x4]
  40eb8a:	(bad)  
  40eb8b:	das    
  40eb8c:	fldenv [ebp+0x3861da6e]
  40eb93:	addr16 add eax,0x77619132
  40eb99:	pop    ecx
  40eb9a:	and    BYTE PTR [esi+0x7c2215c5],cl
  40eba0:	cmp    eax,0x6f127cda
  40eba5:	lea    ecx,[ebp-0x17]
  40eba8:	test   ebp,ebp
  40ebaa:	lea    ebp,[edx]
  40ebac:	mov    ebp,0x4496448d
  40ebb1:	ins    BYTE PTR es:[edi],dx
  40ebb2:	fsub   DWORD PTR [ecx+0x2d]
  40ebb5:	mov    ebp,?
  40ebb7:	xchg   edi,eax
  40ebb8:	xchg   esi,eax
  40ebb9:	je     0x40ebd6
  40ebbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbc:	leave  
  40ebbd:	fild   WORD PTR [edx+ecx*1]
  40ebc0:	or     BYTE PTR [edx],al
  40ebc2:	mov    bl,0x23
  40ebc4:	jle    0x40ec2a
  40ebc6:	daa    
  40ebc7:	je     0x40ebc1
  40ebc9:	test   edx,0x8a50175e
  40ebcf:	mov    ecx,0x78e1e704
  40ebd4:	sbb    eax,0xe7d63680
  40ebd9:	sub    eax,0x40bc7610
  40ebde:	adc    BYTE PTR [ebx],bh
  40ebe0:	push   ds
  40ebe1:	rcr    DWORD PTR [ecx],0x2c
  40ebe4:	push   ecx
  40ebe5:	mov    eax,0xa582bffe
  40ebea:	into   
  40ebeb:	or     eax,0x6ff5902e
  40ebf0:	nop
  40ebf1:	add    DWORD PTR [ecx],edi
  40ebf3:	maskmovq mm4,(bad)
  40ebf4:	mul    DWORD PTR [ebx+0x2f]
  40ebf7:	push   ebp
  40ebf8:	inc    edi
  40ebf9:	std    
  40ebfa:	inc    eax
  40ebfb:	ret    
  40ebfc:	clc    
  40ebfd:	fsubr  DWORD PTR [ebp-0x47]
  40ec00:	xchg   edx,eax
  40ec01:	cld    
  40ec02:	dec    edx
  40ec03:	ins    DWORD PTR es:[edi],dx
  40ec04:	or     esp,DWORD PTR [ecx-0x768fd7c]
  40ec0a:	adc    BYTE PTR [ecx],cl
  40ec0c:	xor    ecx,DWORD PTR [eax+0x77]
  40ec0f:	pop    edi
  40ec10:	cwde   
  40ec11:	sub    DWORD PTR [esp+ecx*4-0x7a],eax
  40ec15:	into   
  40ec16:	adc    BYTE PTR [ecx+0x7972b4e4],al
  40ec1c:	imul   sp,bp,0xce4a
  40ec21:	(bad)  [ecx+edi*1]
  40ec24:	xchg   DWORD PTR [edx-0x16febfd2],eax
  40ec2a:	je     0x40ebbf
  40ec2c:	pop    es
  40ec2d:	mov    DWORD PTR [esi],ecx
  40ec2f:	jns    0x40ec20
  40ec31:	out    0xf7,al
  40ec33:	push   es
  40ec34:	push   esp
  40ec35:	xchg   esp,eax
  40ec36:	adc    eax,0x65231b9c
  40ec3b:	ins    DWORD PTR es:[edi],dx
  40ec3c:	jbe    0x40ebfd
  40ec3e:	jle    0x40ec3e
  40ec40:	fmul   QWORD PTR [esi]
  40ec42:	inc    esi
  40ec43:	leave  
  40ec44:	mov    bh,0x7d
  40ec46:	or     eax,0x739cc091
  40ec4b:	dec    ebx
  40ec4c:	js     0x40eca0
  40ec4e:	sti    
  40ec4f:	push   ebp
  40ec50:	(bad)
  40ec54:	std    
  40ec55:	aad    0xe2
  40ec57:	ja     0x40ecd2
  40ec59:	test   al,0x3b
  40ec5b:	jp     0x40ebef
  40ec5d:	popa   
  40ec5e:	cmp    DWORD PTR [edx+0x53436e3b],0x5a
  40ec65:	push   edx
  40ec66:	sbb    bh,BYTE PTR [edx-0x74]
  40ec69:	push   ds
  40ec6a:	ds push eax
  40ec6c:	xchg   edx,eax
  40ec6d:	sbb    dh,ah
  40ec6f:	dec    esp
  40ec70:	add    BYTE PTR [eax],bl
  40ec72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec73:	pop    es
  40ec74:	push   ebp
  40ec75:	dec    edi
  40ec76:	sub    dh,bl
  40ec78:	mov    esp,0xae192167
  40ec7d:	xchg   esi,eax
  40ec7e:	fistp  QWORD PTR [esi+0x7f]
  40ec81:	mov    ds,WORD PTR [edx-0x7a47a488]
  40ec87:	or     dl,BYTE PTR [esp+ecx*8+0x61]
  40ec8b:	popf   
  40ec8c:	popf   
  40ec8d:	jge    0x40ec7a
  40ec8f:	mov    ch,0x51
  40ec91:	xor    edi,ecx
  40ec93:	xor    eax,0xcba24b29
  40ec98:	cwde   
  40ec99:	xchg   ebx,eax
  40ec9a:	jae    0x40ecc5
  40ec9c:	sbb    DWORD PTR [ebx+0x272f2566],edx
  40eca2:	push   0x77b7c9c
  40eca7:	jp     0x40ec95
  40eca9:	das    
  40ecaa:	mov    ebp,0x691d98f2
  40ecaf:	xor    dh,ch
  40ecb1:	(bad)  
  40ecb3:	push   ds
  40ecb4:	std    
  40ecb5:	ss je  0x40ec67
  40ecb8:	fsub   QWORD PTR [ebx+0x4a]
  40ecbb:	enter  0x7e8f,0x9
  40ecbf:	xchg   DWORD PTR [edx+0x615b896f],esp
  40ecc5:	xchg   ebp,eax
  40ecc6:	inc    esp
  40ecc7:	jmp    0x40ed09
  40ecc9:	cmp    ebx,esp
  40eccb:	int    0x30
  40eccd:	repnz sub bl,ch
  40ecd0:	and    edx,ebp
  40ecd2:	cmp    ebx,DWORD PTR [ebp+0x5b7aa734]
  40ecd8:	jb     0x40eca4
  40ecda:	in     al,0x21
  40ecdc:	dec    esp
  40ecdd:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ecdf:	in     eax,dx
  40ece0:	mov    cl,0xb
  40ece2:	ficomp WORD PTR [eax]
  40ece4:	dec    ebx
  40ece5:	pop    esi
  40ece6:	xchg   ch,dl
  40ece8:	loopne 0x40ed5d
  40ecea:	jmp    0x40ed08
  40ecec:	push   es
  40eced:	les    ebp,FWORD PTR [edx-0x37de42d4]
  40ecf3:	jae    0x40ecd2
  40ecf5:	popf   
  40ecf6:	adc    DWORD PTR [ebx+0x38cbed7c],ecx
  40ecfc:	adc    DWORD PTR [ecx-0x11deb1fe],esp
  40ed02:	aaa    
  40ed03:	xor    ebp,esp
  40ed05:	or     esp,0x74
  40ed08:	xchg   esi,ebx
  40ed0a:	inc    ebx
  40ed0b:	arpl   WORD PTR [ecx+0x6],bp
  40ed0e:	daa    
  40ed0f:	pop    edx
  40ed10:	dec    ebp
  40ed11:	jge    0x40ed4b
  40ed13:	xchg   edx,eax
  40ed14:	dec    ecx
  40ed15:	aam    0xc4
  40ed17:	mov    ecx,gs
  40ed19:	fisub  WORD PTR [edi]
  40ed1b:	cmp    DWORD PTR [ebx+0x422eafc2],esi
  40ed21:	jmp    0x54d1346f
  40ed26:	mov    dh,0xc2
  40ed28:	lock sub bh,BYTE PTR fs:[edx+0x766c5ec7]
  40ed30:	mov    ebp,0xe3b2b1da
  40ed35:	mov    ah,0xe3
  40ed37:	and    BYTE PTR [edi],0xb8
  40ed3a:	idiv   BYTE PTR [ebx]
  40ed3c:	and    al,0x32
  40ed3e:	add    DWORD PTR [esi],edx
  40ed40:	sub    BYTE PTR [ecx+0x70],0x79
  40ed44:	imul   ebp,DWORD PTR [eax+0x6712e5d8],0xffffffa8
  40ed4b:	sbb    bl,BYTE PTR ds:0xcd914ddf
  40ed51:	popa   
  40ed52:	jl     0x40edaf
  40ed54:	outs   dx,DWORD PTR ds:[esi]
  40ed55:	pusha  
  40ed56:	mov    bh,0x61
  40ed58:	inc    ebx
  40ed59:	retf   
  40ed5a:	inc    ecx
  40ed5b:	stc    
  40ed5c:	dec    eax
  40ed5d:	mov    ?,WORD PTR [ecx]
  40ed5f:	ret    0x2fce
  40ed62:	cld    
  40ed63:	mov    esp,0xff1f7a2a
  40ed68:	enter  0x9a8c,0x9e
  40ed6c:	ins    BYTE PTR es:[edi],dx
  40ed6d:	in     al,0x98
  40ed6f:	pop    esi
  40ed70:	gs sahf 
  40ed72:	pushf  
  40ed73:	mov    bl,0x9b
  40ed75:	adc    dl,ch
  40ed77:	xchg   edi,eax
  40ed78:	subps  xmm5,XMMWORD PTR [ebx]
  40ed7b:	or     eax,0xa8e93c6f
  40ed80:	cmp    eax,0xa2ae1d5c
  40ed85:	stos   DWORD PTR es:[edi],eax
  40ed86:	adc    BYTE PTR [ebp-0x45820a18],al
  40ed8c:	rol    BYTE PTR [ebp+eiz*2+0xe],cl
  40ed90:	scas   al,BYTE PTR es:[edi]
  40ed91:	mov    DWORD PTR [edi],0x9349e660
  40ed97:	xor    bl,BYTE PTR [eax]
  40ed99:	mov    bh,0x52
  40ed9b:	pop    ecx
  40ed9c:	loop   0x40ed71
  40ed9e:	mov    al,0xb4
  40eda0:	in     eax,dx
  40eda1:	xor    bl,ch
  40eda3:	lahf   
  40eda4:	cmp    dh,BYTE PTR [ebp+0x2b]
  40eda7:	cdq    
  40eda8:	sahf   
  40eda9:	mov    esi,0x6d6f813f
  40edae:	jno    0x40edbd
  40edb0:	imul   edx,ebp,0xffffffad
  40edb3:	push   ecx
  40edb4:	outs   dx,BYTE PTR ds:[esi]
  40edb5:	sbb    ch,BYTE PTR [edi-0xc]
  40edb8:	mov    edi,0xe11c81e5
  40edbd:	pusha  
  40edbe:	hlt    
  40edbf:	cmp    al,0x36
  40edc1:	ss pop edi
  40edc3:	sti    
  40edc4:	pop    ds
  40edc5:	xor    edi,DWORD PTR [esi]
  40edc7:	repz pop eax
  40edc9:	mov    dl,0x30
  40edcb:	aaa    
  40edcc:	inc    eax
  40edcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edce:	push   esi
  40edcf:	loopne 0x40edb8
  40edd1:	pop    esi
  40edd2:	dec    ebp
  40edd3:	sub    al,0x5b
  40edd5:	or     bh,bh
  40edd7:	fdivr  DWORD PTR [edi]
  40edd9:	mov    al,0x5
  40eddb:	xchg   ecx,eax
  40eddc:	or     al,0x64
  40edde:	cmp    BYTE PTR [edi-0x2ed52edb],bh
  40ede4:	xchg   edx,edx
  40ede6:	aaa    
  40ede7:	mov    ds:0x2444fa92,eax
  40edec:	or     dh,BYTE PTR [edi]
  40edee:	mov    dh,0xa
  40edf0:	fldenv [esi-0x2d]
  40edf3:	jne    0x40ee22
  40edf5:	add    edi,DWORD PTR [edi]
  40edf7:	and    DWORD PTR [edx],esp
  40edf9:	mov    al,ds:0x41e90d54
  40edfe:	dec    ebp
  40edff:	cwde   
  40ee00:	xchg   DWORD PTR [ebp-0x6b4f924f],ebx
  40ee06:	ja     0x40ee35
  40ee08:	mov    es,esp
  40ee0a:	mov    ch,0xc6
  40ee0c:	pop    ebx
  40ee0d:	dec    eax
  40ee0e:	sbb    DWORD PTR [eax+0x4c],0x2cf19eae
  40ee15:	mov    ebx,0x7c5713b
  40ee1a:	ret    
  40ee1b:	adc    edx,edi
  40ee1d:	sbb    cl,BYTE PTR [esp+ebx*2-0x9fdf3]
  40ee24:	test   BYTE PTR [edi+0x75729d63],0x61
  40ee2b:	in     al,0xba
  40ee2d:	inc    ecx
  40ee2e:	dec    ebx
  40ee2f:	adc    DWORD PTR [ecx+0x6d16061b],esp
  40ee35:	sub    BYTE PTR [ebp+0x2cc59524],bl
  40ee3b:	fist   WORD PTR [edx]
  40ee3d:	jns    0x40ee6f
  40ee3f:	cmp    eax,0xd9c06740
  40ee44:	add    bh,0xdc
  40ee47:	cmp    al,0x3a
  40ee49:	xchg   DWORD PTR [eax-0x6b],esi
  40ee4c:	or     dl,ah
  40ee4e:	scas   eax,DWORD PTR es:[edi]
  40ee4f:	outs   dx,BYTE PTR ds:[esi]
  40ee50:	cli    
  40ee51:	pusha  
  40ee52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee53:	pushf  
  40ee54:	xlat   BYTE PTR ds:[ebx]
  40ee55:	pushf  
  40ee56:	cmp    DWORD PTR [edx],edi
  40ee58:	ins    DWORD PTR es:[edi],dx
  40ee59:	mov    esp,0x9015835a
  40ee5e:	rol    BYTE PTR [esi-0x791ac77c],0xd
  40ee65:	in     al,dx
  40ee66:	and    eax,0x5ad5e81f
  40ee6b:	cmp    DWORD PTR [eax],edx
  40ee6d:	mov    dl,0x7d
  40ee6f:	ins    DWORD PTR es:[edi],dx
  40ee70:	iret   
  40ee71:	adc    al,BYTE PTR [ebp+0x5da565d9]
  40ee77:	cli    
  40ee78:	jb     0x40ee15
  40ee7a:	add    cl,ah
  40ee7c:	push   eax
  40ee7d:	cmp    eax,0xcd92c643
  40ee82:	push   ebp
  40ee83:	leave  
  40ee84:	into   
  40ee85:	mov    esp,0x56fcf52e
  40ee8a:	into   
  40ee8b:	das    
  40ee8c:	mov    al,0x3
  40ee8e:	jns    0x40eef7
  40ee90:	mov    BYTE PTR [edi],dh
  40ee92:	retf   
  40ee93:	cmp    al,0x5b
  40ee95:	mov    bl,0xc
  40ee97:	lods   al,BYTE PTR ds:[esi]
  40ee98:	arpl   WORD PTR [ecx-0x70],sp
  40ee9b:	mov    edx,0xf92ab3d8
  40eea0:	dec    esp
  40eea1:	jb     0x40eef3
  40eea3:	dec    ecx
  40eea4:	add    DWORD PTR [eax],esp
  40eea6:	mov    ch,0xe2
  40eea8:	jbe    0x40ee2b
  40eeaa:	bound  edi,QWORD PTR [ebp+0x2f57768a]
  40eeb0:	inc    edx
  40eeb1:	jp     0x40eebb
  40eeb3:	mov    ds:0xa58b32d,al
  40eeb8:	sar    dl,0x43
  40eebb:	mov    edx,0xa580cf80
  40eec0:	retf   
  40eec1:	xchg   edx,eax
  40eec2:	cld    
  40eec3:	arpl   WORD PTR [ecx+0xc],ax
  40eec6:	addr16 enter 0xf1b3,0xf7
  40eecb:	cmp    eax,0x895e1d99
  40eed0:	fistp  WORD PTR [ebp+edx*8+0x1a5a9b13]
  40eed7:	in     al,0x5a
  40eed9:	pushf  
  40eeda:	inc    esp
  40eedb:	mov    ecx,0x5f0c6a40
  40eee0:	or     cl,ah
  40eee2:	dec    esi
  40eee3:	mov    ecx,?
  40eee5:	mov    edi,0x5dff6b61
  40eeea:	int3   
  40eeeb:	out    0x71,eax
  40eeed:	mov    edx,0xedf414b8
  40eef2:	jno    0x40eea5
  40eef4:	mov    esi,0xba35d4e3
  40eef9:	out    dx,eax
  40eefa:	dec    ecx
  40eefb:	xor    eax,0xfe8a460f
  40ef00:	sti    
  40ef01:	sbb    al,0x87
  40ef03:	repnz fcomp st(4)
  40ef06:	(bad)  
  40ef07:	mov    cl,0x24
  40ef09:	sub    al,0xd
  40ef0b:	mov    eax,0x3256c8c8
  40ef10:	push   esi
  40ef11:	fld    TBYTE PTR [edi-0x6e851204]
  40ef17:	dec    esp
  40ef18:	adc    esp,DWORD PTR [edx-0x5c9061a0]
  40ef1e:	mov    esi,gs
  40ef20:	ds push esp
  40ef22:	xchg   edi,eax
  40ef23:	mov    eax,ds:0x430c36c9
  40ef28:	js     0x40ef42
  40ef2a:	xlat   BYTE PTR ds:[ebx]
  40ef2b:	jmp    0x9ef4:0xc96359eb
  40ef32:	in     al,dx
  40ef33:	pop    esi
  40ef34:	shr    DWORD PTR [edi-0x29ac05f5],0x34
  40ef3b:	xchg   edx,eax
  40ef3c:	int    0xc5
  40ef3e:	lods   al,BYTE PTR ds:[esi]
  40ef3f:	mov    bh,0xcf
  40ef41:	cmp    DWORD PTR [ecx+0x58207e36],esp
  40ef47:	pop    ebp
  40ef48:	je     0x40ef82
  40ef4a:	or     al,0xba
  40ef4c:	inc    eax
  40ef4d:	jns    0x40efcd
  40ef4f:	mov    ds:0xf48a594b,al
  40ef54:	pop    eax
  40ef55:	cld    
  40ef56:	fwait
  40ef57:	in     eax,dx
  40ef58:	dec    esi
  40ef59:	add    dh,dl
  40ef5b:	jle    0x40ef8c
  40ef5d:	sti    
  40ef5e:	sahf   
  40ef5f:	inc    esi
  40ef60:	iret   
  40ef61:	push   ds
  40ef62:	int    0x6e
  40ef64:	mov    eax,0xf5e9c1e4
  40ef69:	rol    BYTE PTR [ebx+0x324989e],cl
  40ef6f:	adc    al,0xb2
  40ef71:	mov    cl,0xaf
  40ef73:	bound  ecx,QWORD PTR [edx-0x3d4fb917]
  40ef79:	in     al,dx
  40ef7a:	test   al,0xfa
  40ef7c:	es ret 
  40ef7e:	jnp    0x40ef3a
  40ef80:	mov    ebp,0xff21e5c7
  40ef85:	sub    esp,DWORD PTR [eax+0x3a]
  40ef88:	xchg   edx,eax
  40ef89:	outs   dx,BYTE PTR ds:[esi]
  40ef8a:	sbb    BYTE PTR [ebx],bl
  40ef8c:	xor    al,ch
  40ef8e:	jno    0x40efa1
  40ef90:	fsub   DWORD PTR [ecx-0x4c]
  40ef93:	loopne 0x40ef34
  40ef95:	sti    
  40ef96:	jno    0x40eff0
  40ef98:	cmp    eax,DWORD PTR [ecx]
  40ef9a:	(bad)  
  40ef9c:	dec    DWORD PTR [ecx]
  40ef9e:	xchg   BYTE PTR [ebx-0x3c2317b8],cl
  40efa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa5:	les    edx,FWORD PTR [eax]
  40efa7:	mov    eax,0x6d697684
  40efac:	or     DWORD PTR [ecx+0x4],ecx
  40efaf:	mul    DWORD PTR [edi+edx*4]
  40efb2:	sub    ebx,DWORD PTR [ecx-0x47]
  40efb5:	xor    BYTE PTR [esi+0x6f],al
  40efb8:	mov    ebx,0x9724d114
  40efbd:	pushf  
  40efbe:	jp     0x40f033
  40efc0:	aad    0xd3
  40efc2:	mov    ecx,edi
  40efc4:	fstp   TBYTE PTR es:[esp+edi*4]
  40efc8:	cmp    eax,0xcdeaef25
  40efcd:	fs or  ecx,ebx
  40efd0:	(bad)  
  40efd1:	and    esp,DWORD PTR [eax]
  40efd3:	pmaxub mm2,QWORD PTR [edx-0x6]
  40efd7:	mov    edx,DWORD PTR [edi]
  40efd9:	lods   eax,DWORD PTR ds:[esi]
  40efda:	cmp    al,BYTE PTR ds:0xe823791
  40efe0:	sub    al,BYTE PTR [edx]
  40efe2:	popa   
  40efe3:	cmp    esi,edx
  40efe5:	ret    0x80e
  40efe8:	cmp    BYTE PTR [eax],bl
  40efea:	(bad)  
  40efeb:	mov    al,ds:0xc734c1d0
  40eff0:	pop    ebx
  40eff1:	test   ebx,edi
  40eff3:	nop
  40eff4:	lods   eax,DWORD PTR ds:[esi]
  40eff5:	shl    DWORD PTR [edx],1
  40eff7:	cmp    eax,0x73d3dc5b
  40effc:	sub    BYTE PTR [eax+0x49],0x4a
  40f000:	xchg   DWORD PTR [esi],esp
  40f002:	and    ebp,DWORD PTR [edi*2+0x91fa7dd]
  40f009:	mov    ah,0xc2
  40f00b:	xchg   esp,eax
  40f00c:	push   esi
  40f00d:	out    dx,al
  40f00e:	retf   
  40f00f:	dec    esi
  40f010:	jno    0x40f006
  40f012:	cmp    eax,0xd77b084b
  40f017:	inc    edx
  40f018:	leave  
  40f019:	and    BYTE PTR [ecx-0x7f],ah
  40f01c:	jge    0x40f068
  40f01e:	add    ecx,ecx
  40f020:	cmc    
  40f021:	or     DWORD PTR [ebp-0x36ed73b7],esp
  40f027:	adc    bh,0x98
  40f02a:	dec    ebp
  40f02b:	jbe    0x40f01d
  40f02d:	scas   eax,DWORD PTR es:[edi]
  40f02e:	mov    edx,0x1ee21116
  40f033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f034:	dec    cl
  40f036:	xchg   esp,eax
  40f037:	sbb    BYTE PTR [ebp+0x26],cl
  40f03a:	(bad)  
  40f03b:	lods   eax,DWORD PTR ds:[esi]
  40f03c:	pop    ebp
  40f03d:	stos   DWORD PTR es:[edi],eax
  40f03e:	mov    edx,edx
  40f040:	push   ebx
  40f041:	adc    ecx,DWORD PTR [eax]
  40f043:	cmp    DWORD PTR ds:0xaae66579,edi
  40f049:	mov    eax,DWORD PTR [eax+0x9]
  40f04c:	rcr    BYTE PTR [ecx],cl
  40f04e:	sbb    BYTE PTR [esi-0x6c3e0361],ch
  40f054:	call   0xee01b2d
  40f059:	dec    esp
  40f05a:	je     0x40f05a
  40f05c:	pop    esi
  40f05d:	xchg   esp,eax
  40f05e:	test   eax,0xf1be1f96
  40f063:	cdq    
  40f064:	mov    eax,0x19c1f26e
  40f069:	xchg   ebx,eax
  40f06a:	sub    ch,BYTE PTR [edx]
  40f06c:	loop   0x40f0b0
  40f06e:	mov    BYTE PTR [edi],0x19
  40f071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f072:	or     cl,al
  40f074:	inc    eax
  40f075:	(bad)  
  40f076:	call   0x869ef2e7
  40f07b:	push   ecx
  40f07c:	jno    0x40f061
  40f07e:	xchg   ebp,eax
  40f07f:	mov    dh,BYTE PTR [ebx-0x479cc400]
  40f085:	imul   DWORD PTR [ecx]
  40f087:	lods   eax,DWORD PTR ds:[esi]
  40f088:	mov    bl,BYTE PTR [edi-0x46]
  40f08b:	call   0xaf6f:0x171acc59
  40f092:	scas   eax,DWORD PTR es:[edi]
  40f093:	xchg   ebp,eax
  40f094:	gs cld 
  40f096:	mov    cl,0x4c
  40f098:	repz inc esi
  40f09a:	mov    ecx,0xc1801cf0
  40f09f:	dec    edi
  40f0a0:	shr    edi,cl
  40f0a2:	push   ds
  40f0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a4:	loopne 0x40f0be
  40f0a6:	ret    0x7afc
  40f0a9:	hlt    
  40f0aa:	mov    edi,0xb4db2665
  40f0af:	push   ebp
  40f0b0:	(bad)  
  40f0b2:	adc    al,0x1e
  40f0b4:	ficomp WORD PTR [esi-0x4abbaa8d]
  40f0ba:	rcr    DWORD PTR [ebx-0x2b],0xc7
  40f0be:	jp     0x40f07a
  40f0c0:	js     0x40f073
  40f0c2:	adc    eax,0xaae3cc18
  40f0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c8:	push   0xffffff94
  40f0ca:	adc    cl,BYTE PTR [ebx]
  40f0cc:	mov    bh,0xa3
  40f0ce:	add    esp,esp
  40f0d0:	xor    DWORD PTR [eax+0x19d1dde2],edi
  40f0d6:	rcr    DWORD PTR [ecx],0x36
  40f0d9:	scas   al,BYTE PTR es:[edi]
  40f0da:	adc    edx,DWORD PTR [edx+0x1d]
  40f0dd:	(bad)  
  40f0de:	mov    eax,0xe766d9b0
  40f0e3:	lock shl BYTE PTR [ecx+0x6a],0xf5
  40f0e8:	jbe    0x40f13b
  40f0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0eb:	adc    DWORD PTR [edx-0x13],eax
  40f0ee:	retf   0xcc81
  40f0f1:	stos   DWORD PTR es:[edi],eax
  40f0f2:	pop    ss
  40f0f3:	fisubr WORD PTR [ecx+0x12a0c747]
  40f0f9:	(bad)  
  40f0fa:	cmp    eax,0x93e9f317
  40f0ff:	pop    es
  40f100:	mov    dl,0xae
  40f102:	adc    BYTE PTR [ebx],dl
  40f104:	adc    BYTE PTR [edi+0x46cef15b],cl
  40f10a:	pusha  
  40f10b:	mov    al,0x46
  40f10d:	out    0x6f,al
  40f10f:	xor    al,0xb8
  40f111:	inc    eax
  40f112:	or     DWORD PTR [ecx-0x1dbf111b],eax
  40f118:	push   ebp
  40f119:	or     DWORD PTR [ebp-0x73],0x74
  40f11d:	out    0x2a,al
  40f11f:	or     al,0x7c
  40f121:	fisub  WORD PTR [edi]
  40f123:	push   ebp
  40f124:	mov    eax,ds:0x8a35f4f0
  40f129:	cmp    eax,0x8b07fcbc
  40f12e:	jle    0x40f0d2
  40f130:	add    ebx,ebx
  40f132:	imul   eax,esi,0xe01cc001
  40f138:	dec    edx
  40f13a:	clc    
  40f13b:	cmp    BYTE PTR [esi-0x3380eb41],bh
  40f141:	pop    ds
  40f142:	jmp    0xb238a000
  40f147:	mov    ecx,0x2f82747b
  40f14c:	mov    ch,BYTE PTR [esi+0xd39a3d5]
  40f152:	xchg   ebp,eax
  40f153:	dec    esi
  40f154:	stos   DWORD PTR es:[edi],eax
  40f155:	out    dx,eax
  40f156:	(bad)
  40f15a:	fwait
  40f15b:	je     0x40f132
  40f15d:	cld    
  40f15e:	sub    eax,DWORD PTR [ecx]
  40f160:	in     eax,0x88
  40f162:	in     eax,0x9c
  40f164:	and    eax,0x940f4cc4
  40f169:	pop    ebp
  40f16a:	into   
  40f16b:	sub    edx,edx
  40f16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16e:	xchg   ebx,eax
  40f16f:	jne    0x40f170
  40f171:	cmc    
  40f172:	push   0x1e11682f
  40f177:	repnz adc al,0x99
  40f17a:	scas   eax,DWORD PTR es:[edi]
  40f17b:	jbe    0x40f1ab
  40f17d:	test   BYTE PTR [ecx+0x11],ch
  40f180:	test   BYTE PTR [ebx],ah
  40f182:	xchg   al,bl
  40f184:	jmp    0x40f17f
  40f186:	xchg   BYTE PTR [edx-0x64],cl
  40f189:	ja     0x40f135
  40f18b:	mov    ebx,edi
  40f18d:	dec    edx
  40f18e:	test   DWORD PTR [esi-0x4f],edi
  40f191:	pop    ss
  40f192:	(bad)  
  40f193:	imul   ebp,DWORD PTR [esi],0xffffffd2
  40f196:	in     al,0x1d
  40f198:	sbb    dl,al
  40f19a:	mov    ds:0x65486afa,al
  40f19f:	mov    ecx,0x15ff14b3
  40f1a4:	sbb    edx,0xffffffc0
  40f1a7:	not    BYTE PTR [edi-0x452d31b]
  40f1ad:	push   ds
  40f1ae:	ficomp WORD PTR [esi]
  40f1b0:	shl    BYTE PTR [ebx+0xce0fafe],1
  40f1b6:	mov    edx,0xf07fb316
  40f1bb:	or     BYTE PTR [esi],dl
  40f1bd:	dec    si
  40f1bf:	das    
  40f1c0:	dec    esp
  40f1c1:	push   0xb48ca556
  40f1c6:	mov    eax,ds:0x6e480de3
  40f1cb:	enter  0x4be0,0xcd
  40f1cf:	stos   BYTE PTR es:[edi],al
  40f1d0:	add    DWORD PTR [edx-0x3553c9a4],ebp
  40f1d6:	mov    eax,0xfde42334
  40f1db:	dec    esi
  40f1dc:	ficomp WORD PTR [ecx-0x3d64efd5]
  40f1e2:	test   BYTE PTR [ecx-0x7214de2f],dl
  40f1e8:	and    edx,ecx
  40f1ea:	lock cld 
  40f1ec:	xchg   edi,eax
  40f1ed:	ja     0x40f1bd
  40f1ef:	imul   ecx,DWORD PTR [eax-0x2421f001],0xa7986cf6
  40f1f9:	jbe    0x40f20c
  40f1fb:	push   0x4b
  40f1fd:	jge    0x40f24d
  40f1ff:	lea    esp,[eax+0x5d3a4bb8]
  40f205:	loop   0x40f248
  40f207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f208:	jge    0x40f25b
  40f20a:	outs   dx,BYTE PTR ds:[esi]
  40f20b:	push   bp
  40f20d:	xchg   edx,eax
  40f20e:	nop
  40f20f:	ds inc edx
  40f211:	aaa    
  40f212:	push   cs
  40f213:	cwde   
  40f214:	dec    ebx
  40f215:	add    edi,DWORD PTR [edx-0x1c3ce550]
  40f21b:	(bad)  
  40f21c:	leave  
  40f21d:	loopne 0x40f254
  40f21f:	dec    edi
  40f220:	push   ebp
  40f221:	xor    eax,eax
  40f223:	iret   
  40f224:	pop    ds
  40f225:	cdq    
  40f226:	adc    dl,BYTE PTR [eax+0x34]
  40f229:	hlt    
  40f22a:	or     edx,DWORD PTR [ebx+0x40ac300a]
  40f230:	sbb    al,0xc6
  40f232:	loope  0x40f273
  40f234:	mov    cl,0x99
  40f236:	scas   eax,DWORD PTR es:[edi]
  40f237:	cdq    
  40f238:	inc    ecx
  40f239:	jg     0x40f1ea
  40f23b:	loope  0x40f257
  40f23d:	pop    ds
  40f23e:	xchg   DWORD PTR [ecx],edx
  40f240:	ss stos BYTE PTR es:[edi],al
  40f242:	pusha  
  40f243:	cli    
  40f244:	add    eax,0xeedcd642
  40f249:	arpl   WORD PTR [eax],bx
  40f24b:	test   eax,0xa22de9b9
  40f250:	add    eax,0xd283544a
  40f255:	or     dl,ah
  40f257:	shl    DWORD PTR [ebp+0x7a],cl
  40f25a:	adc    DWORD PTR [eax+ebx*8+0x5dc3d069],edx
  40f261:	jl     0x40f23c
  40f263:	mov    WORD PTR [ebp+0xd8cec5d],?
  40f269:	mov    dl,0x13
  40f26b:	pusha  
  40f26c:	push   ecx
  40f26d:	imul   eax,eax,0x5e7ee1e4
  40f273:	mov    al,0xa0
  40f275:	test   ebp,ecx
  40f277:	jns    0x40f2f7
  40f279:	jns    0x40f2a0
  40f27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f27c:	inc    ebx
  40f27d:	mov    esp,0x83bb2040
  40f282:	mov    bh,0xcd
  40f284:	and    BYTE PTR cs:[eax-0x73],dh
  40f288:	inc    esp
  40f289:	iret   
  40f28a:	sbb    ebp,DWORD PTR [eax-0xf]
  40f28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28e:	add    bl,al
  40f290:	fnstenv [eax+0x66]
  40f293:	inc    eax
  40f294:	dec    ebp
  40f295:	test   DWORD PTR [eax+0x64],esp
  40f298:	pop    esp
  40f299:	pop    ebx
  40f29a:	les    esi,FWORD PTR [esi+edi*8]
  40f29d:	cmp    al,0x6a
  40f29f:	leave  
  40f2a0:	or     eax,DWORD PTR [ebx-0x4623cdf3]
  40f2a6:	and    BYTE PTR [ebx+0x6da7e5e7],bh
  40f2ac:	xchg   BYTE PTR [ebp-0x17],al
  40f2af:	sub    al,0x46
  40f2b1:	push   ss
  40f2b2:	mov    ecx,0xe3a709f
  40f2b7:	imul   ebx,DWORD PTR [edi-0x74b44d02],0x6e
  40f2be:	bnd jbe 0x40f254
  40f2c1:	mov    esi,0xcf08cfd9
  40f2c6:	into   
  40f2c7:	mov    bl,0xf0
  40f2c9:	jmp    0x40f275
  40f2cb:	mov    ds:0xf5d40d2a,al
  40f2d0:	in     eax,dx
  40f2d1:	push   esp
  40f2d2:	mov    dl,0x23
  40f2d4:	xlat   BYTE PTR ds:[ebx]
  40f2d5:	add    eax,DWORD PTR [esi-0x6c81404d]
  40f2db:	or     DWORD PTR [ebx],0x1315c82d
  40f2e1:	aaa    
  40f2e2:	cmc    
  40f2e3:	mov    esp,0xd7c1e686
  40f2e8:	lea    ecx,[edx+0x1e]
  40f2eb:	gs or  esi,0x4f6dcf51
  40f2f2:	into   
  40f2f3:	push   ebx
  40f2f4:	fidivr DWORD PTR [ecx+0x5178e4d2]
  40f2fa:	aas    
  40f2fb:	xchg   eax,edi
  40f2fd:	adc    ecx,DWORD PTR [esi]
  40f2ff:	(bad)  
  40f300:	xchg   esp,eax
  40f301:	dec    edi
  40f302:	jge    0x40f369
  40f304:	rcl    DWORD PTR [esi-0x40db6b02],0xc6
  40f30b:	push   0x4d10e796
  40f310:	scas   al,BYTE PTR es:[edi]
  40f311:	ja     0x40f374
  40f313:	xchg   esi,eax
  40f314:	cmp    BYTE PTR [esp+ecx*8],cl
  40f317:	jno    0x40f29a
  40f319:	push   edx
  40f31a:	mov    dl,0x2
  40f31c:	mov    ecx,0xec7f387c
  40f321:	fidiv  DWORD PTR [eax+0x7e]
  40f324:	aam    0x79
  40f326:	mov    dh,0xc9
  40f328:	xchg   esp,eax
  40f329:	rol    BYTE PTR [edi-0x3f8df6b2],cl
  40f32f:	enter  0xf5a0,0x13
  40f333:	or     eax,DWORD PTR [edx]
  40f335:	xor    esi,DWORD PTR [edi]
  40f337:	xor    dl,al
  40f339:	sbb    ebx,DWORD PTR [eax+0x41210f93]
  40f33f:	scas   al,BYTE PTR es:[edi]
  40f340:	jmp    0x40f32d
  40f342:	enter  0x8add,0x27
  40f346:	and    al,0x88
  40f348:	icebp  
  40f349:	sbb    ah,BYTE PTR ds:0x9bb55f74
  40f34f:	scas   eax,DWORD PTR es:[edi]
  40f350:	mov    dl,0x9f
  40f352:	xor    dl,BYTE PTR [ecx+0x4d]
  40f355:	aas    
  40f356:	ins    BYTE PTR es:[edi],dx
  40f357:	in     eax,0x1f
  40f359:	mov    ah,0x67
  40f35b:	sub    BYTE PTR [edi+0x20f86704],cl
  40f361:	adc    BYTE PTR [eax],0x8a
  40f364:	jo     0x40f3e1
  40f366:	dec    ecx
  40f367:	mov    al,0x29
  40f369:	jl     0x40f35a
  40f36b:	sbb    ch,ch
  40f36d:	and    DWORD PTR [eax-0x70],esp
  40f370:	cli    
  40f371:	in     al,0x57
  40f373:	aaa    
  40f374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f375:	dec    ebp
  40f376:	cwde   
  40f377:	push   edi
  40f378:	je     0x40f3a4
  40f37a:	sbb    dh,dl
  40f37c:	sub    bl,dl
  40f37e:	out    0xa7,al
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xc7acab87,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	es in  al,0xe9
  40f486:	fmul   st(7),st
  40f488:	xchg   esi,eax
  40f489:	pop    ss
  40f48a:	mov    bh,0x2d
  40f48c:	loope  0x40f4b8
  40f48e:	and    edi,DWORD PTR [ecx+0x33]
  40f491:	add    DWORD PTR [edi+0xbb2ce7b],ecx
  40f497:	inc    edi
  40f498:	sub    BYTE PTR [esp+edi*1-0x8441a08],al
  40f49f:	sbb    bh,BYTE PTR [edi]
  40f4a1:	fild   WORD PTR [edx-0x72]
  40f4a4:	popa   
  40f4a5:	outs   dx,BYTE PTR ds:[esi]
  40f4a6:	call   0xb959d166
  40f4ab:	adc    eax,0xfaf3833a
  40f4b0:	enter  0x8d8,0x36
  40f4b4:	sbb    al,0x1
  40f4b6:	ja     0x40f527
  40f4b8:	fisubr WORD PTR [ebx-0x48]
  40f4bb:	loopne 0x40f4a5
  40f4bd:	push   cs
  40f4be:	pop    ebp
  40f4bf:	cdq    
  40f4c0:	in     al,0x2a
  40f4c2:	pop    edi
  40f4c3:	enter  0x8a32,0x28
  40f4c7:	push   cs
  40f4c8:	and    DWORD PTR [ebp+esi*2+0x5fdfc9cb],ebp
  40f4cf:	in     al,0x90
  40f4d1:	daa    
  40f4d2:	fs aaa 
  40f4d4:	ret    
  40f4d5:	dec    edx
  40f4d6:	mov    ch,0x45
  40f4d8:	dec    ecx
  40f4d9:	adc    eax,0xc9771032
  40f4de:	test   BYTE PTR [bx+si-0x433c],bh
  40f4e3:	inc    edx
  40f4e4:	sbb    esp,ecx
  40f4e6:	arpl   WORD PTR [esi+0x34cea503],sp
  40f4ec:	xlat   BYTE PTR ds:[ebx]
  40f4ed:	call   0xef0b54d2
  40f4f2:	int    0x4d
  40f4f4:	and    edi,edx
  40f4f6:	adc    eax,0xe7e311a8
  40f4fb:	inc    edi
  40f4fc:	xor    BYTE PTR [eax-0x29],ah
  40f4ff:	into   
  40f500:	inc    ecx
  40f501:	popf   
  40f502:	push   ecx
  40f503:	or     bl,BYTE PTR [ecx-0x3a3ba4e7]
  40f509:	ss jl  0x40f511
  40f50c:	fist   DWORD PTR [eax]
  40f50e:	xor    DWORD PTR [ebx],0x79
  40f511:	outs   dx,DWORD PTR ds:[esi]
  40f512:	sbb    eax,0x14b0c4b3
  40f517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f518:	out    0x78,al
  40f51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f51b:	das    
  40f51c:	dec    esp
  40f51d:	lods   al,BYTE PTR ds:[esi]
  40f51e:	pusha  
  40f51f:	xchg   BYTE PTR [esp+eax*1],ah
  40f522:	mov    esi,0x1a79f61e
  40f527:	int    0xdc
  40f529:	int3   
  40f52a:	mov    edx,0x633c8737
  40f52f:	add    BYTE PTR [ebx+0x16],ah
  40f532:	inc    eax
  40f533:	push   esp
  40f534:	mov    ds:0x83c70074,eax
  40f539:	sbb    al,0xab
  40f53b:	add    DWORD PTR [eax],esi
  40f53d:	rol    BYTE PTR [ecx+eax*8+0x3ae55904],cl
  40f544:	pop    ss
  40f545:	push   es
  40f546:	mov    ds:0x87ddf47f,al
  40f54b:	jmp    0x40f50b
  40f54d:	or     ebx,DWORD PTR [eax]
  40f54f:	mov    WORD PTR [ebp+0x66422ed6],ss
  40f555:	pop    edx
  40f556:	and    esp,DWORD PTR [esi+0x7c]
  40f559:	not    DWORD PTR [edi+eiz*8-0x3cb9eb22]
  40f560:	pop    esp
  40f561:	ins    BYTE PTR es:[edi],dx
  40f562:	or     eax,0x2f377332
  40f567:	sahf   
  40f568:	rol    BYTE PTR [eax],1
  40f56a:	pop    eax
  40f56b:	pop    edx
  40f56c:	jmp    0x2101:0x81d5c5eb
  40f573:	adc    DWORD PTR ds:[edx+0x2a4f1214],ebp
  40f57a:	test   BYTE PTR [bp-0x5c0d],ah
  40f57f:	or     ah,BYTE PTR [edi-0x4d]
  40f582:	sbb    BYTE PTR [esi+0x59453325],ah
  40f588:	iret   
  40f589:	outs   dx,DWORD PTR ds:[esi]
  40f58a:	ds je  0x40f5c9
  40f58d:	and    ecx,DWORD PTR [ecx-0x65]
  40f590:	jmp    0xc666:0x272d4258
  40f597:	xchg   edi,eax
  40f598:	inc    eax
  40f599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f59a:	xor    al,0x60
  40f59c:	add    BYTE PTR [eax-0x2019d0b4],0x2f
  40f5a3:	xor    al,0x3
  40f5a5:	addr16 ds jl 0x40f59d
  40f5a9:	test   BYTE PTR [ebp-0x72],ch
  40f5ac:	fisttp DWORD PTR ds:0x3a5ba3c8
  40f5b2:	ins    DWORD PTR es:[edi],dx
  40f5b3:	push   ebx
  40f5b4:	mov    bl,0x8b
  40f5b6:	cs dec esp
  40f5b8:	popf   
  40f5b9:	push   esp
  40f5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5bb:	adc    al,0xc8
  40f5bd:	mov    ebx,0x51d8ef5b
  40f5c2:	mov    al,0x5
  40f5c4:	jb     0x40f619
  40f5c6:	jle    0x40f57c
  40f5c8:	mov    dh,0x2e
  40f5ca:	sbb    al,0xfa
  40f5cc:	scas   eax,DWORD PTR es:[edi]
  40f5cd:	cld    
  40f5ce:	test   al,0x52
  40f5d0:	push   es
  40f5d1:	fwait
  40f5d2:	pop    esi
  40f5d3:	in     al,0x9f
  40f5d5:	test   esp,0xc1801f28
  40f5db:	dec    bl
  40f5dd:	jnp    0x40f648
  40f5df:	jg     0x40f5eb
  40f5e1:	mov    dl,0xa3
  40f5e3:	or     al,0x1e
  40f5e5:	in     al,0x35
  40f5e7:	inc    eax
  40f5e8:	loopne 0x40f571
  40f5ea:	jbe    0x40f5d6
  40f5ec:	aad    0xbd
  40f5ee:	push   ds
  40f5ef:	jnp    0x40f651
  40f5f1:	out    0x39,al
  40f5f3:	(bad)  
  40f5f4:	pop    esi
  40f5f5:	xchg   ebp,eax
  40f5f6:	adc    edi,DWORD PTR [edi+0x297d833c]
  40f5fc:	(bad)  
  40f5fd:	mov    ah,0x50
  40f5ff:	fidivr WORD PTR [esi+0x14ff4c7e]
  40f605:	fadd   st,st(1)
  40f607:	mov    ebx,0xb296838b
  40f60c:	jns    0x40f5b9
  40f60e:	mov    WORD PTR [eax],ds
  40f610:	mov    esi,0x89a2aa75
  40f615:	mov    ecx,esi
  40f617:	test   DWORD PTR [ecx-0x49],edi
  40f61a:	sub    al,0x11
  40f61c:	sbb    al,0xbd
  40f61e:	xor    DWORD PTR [ebx],esi
  40f620:	dec    ecx
  40f621:	pop    es
  40f622:	test   al,0xc5
  40f624:	out    0xd4,eax
  40f626:	xchg   BYTE PTR [esi+edx*4],bh
  40f629:	call   FWORD PTR [edi]
  40f62b:	pop    ecx
  40f62c:	cmp    esp,DWORD PTR [esi+0x18cf779]
  40f632:	shl    esp,1
  40f634:	outs   dx,DWORD PTR ds:[esi]
  40f635:	(bad)  
  40f636:	mov    al,0xa6
  40f638:	pop    es
  40f639:	retf   
  40f63a:	shl    BYTE PTR [ebx],cl
  40f63c:	das    
  40f63d:	xor    DWORD PTR [ebx+0x17783b68],eax
  40f643:	(bad)  
  40f644:	gs sahf 
  40f646:	inc    edx
  40f647:	adc    esp,DWORD PTR [edi]
  40f649:	test   eax,0x1ab2b87a
  40f64e:	push   eax
  40f64f:	(bad)  
  40f650:	fsub   QWORD PTR [eax+0x29fa7787]
  40f656:	push   ss
  40f657:	push   cs
  40f658:	adc    DWORD PTR [ecx],ebx
  40f65a:	mov    edi,0x50ce197c
  40f65f:	cli    
  40f660:	push   edx
  40f661:	or     BYTE PTR [ecx-0x3906844],ah
  40f667:	push   ecx
  40f668:	aaa    
  40f669:	mov    bh,0x2d
  40f66b:	xor    eax,0x8585bb05
  40f670:	mov    al,ds:0x37772dfa
  40f675:	sbb    DWORD PTR [ecx-0x1e15b6bd],edi
  40f67b:	sbb    al,0xe
  40f67d:	(bad)  
  40f67e:	mov    al,0x64
  40f680:	xlat   BYTE PTR ds:[ebx]
  40f681:	add    edx,DWORD PTR [esi+ebx*1-0x55ec9872]
  40f688:	ins    DWORD PTR es:[edi],dx
  40f689:	ins    DWORD PTR es:[edi],dx
  40f68a:	call   0xa928:0x14f2a49b
  40f691:	mov    cl,0x52
  40f693:	jmp    0x255d:0x686615a8
  40f69a:	or     esi,DWORD PTR [edx]
  40f69c:	jp     0x40f622
  40f69e:	pop    es
  40f69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a0:	mov    edi,0x1c33cb0
  40f6a5:	mov    DWORD PTR [ecx+0x4f738dd2],edx
  40f6ab:	js     0x40f66d
  40f6ad:	adc    ecx,DWORD PTR [ebp-0x1a8ec11b]
  40f6b3:	es sub al,0xf0
  40f6b6:	std    
  40f6b7:	pop    ss
  40f6b8:	dec    edx
  40f6b9:	xchg   ebx,eax
  40f6ba:	imul   esp,DWORD PTR ds:0x79e77cc8,0x9755e2f0
  40f6c4:	and    eax,0xcc977c47
  40f6c9:	dec    esp
  40f6ca:	jns    0x40f710
  40f6cc:	fstp   DWORD PTR [edi+0x175fb4a5]
  40f6d2:	sbb    BYTE PTR [edx+ebp*4-0x1b094c0f],dl
  40f6d9:	xor    eax,0x4eb28d96
  40f6de:	add    al,0x9b
  40f6e0:	mov    al,0xb2
  40f6e2:	cmp    al,0xb7
  40f6e4:	addr16 pop edi
  40f6e6:	push   esp
  40f6e7:	adc    eax,0xc6d28421
  40f6ec:	xchg   ebp,eax
  40f6ed:	outs   dx,DWORD PTR ds:[esi]
  40f6ee:	fs nop
  40f6f0:	sbb    edx,DWORD PTR [esi+0x5c]
  40f6f3:	stos   BYTE PTR es:[edi],al
  40f6f4:	mov    ds:0xa48bab50,al
  40f6f9:	pusha  
  40f6fa:	adc    BYTE PTR [esi+0x48],dh
  40f6fd:	ds dec eax
  40f6ff:	shl    BYTE PTR [edx+0x1f992602],1
  40f705:	das    
  40f706:	in     eax,dx
  40f707:	cmp    DWORD PTR [ecx+eax*1-0x4bb75ed5],esp
  40f70e:	mov    DWORD PTR [esi+0x7c],0xabe15d5e
  40f715:	ins    BYTE PTR es:[edi],dx
  40f716:	outs   dx,DWORD PTR ds:[esi]
  40f717:	imul   ebp,DWORD PTR [ebx+0x42],0xf2097f35
  40f71e:	not    BYTE PTR [edx-0x785cc85f]
  40f724:	cwde   
  40f725:	cdq    
  40f726:	fld    TBYTE PTR [edx]
  40f728:	dec    ebx
  40f729:	stc    
  40f72a:	pop    esi
  40f72b:	sub    dh,BYTE PTR [ecx-0x3acb57bd]
  40f731:	inc    ecx
  40f732:	imul   eax
  40f734:	je     0x40f70b
  40f736:	rol    BYTE PTR [edx],0xae
  40f739:	xor    ah,bh
  40f73b:	cmp    DWORD PTR [ebp-0x18cb08d2],ebp
  40f741:	pop    eax
  40f742:	rcl    ch,cl
  40f744:	push   edx
  40f745:	sub    ah,BYTE PTR [edi]
  40f747:	int3   
  40f748:	pop    ds
  40f749:	xchg   esi,eax
  40f74a:	pop    edx
  40f74b:	(bad)  
  40f74c:	push   esp
  40f74d:	ror    DWORD PTR [edx+0x6a],cl
  40f750:	call   0xf463:0xbd5bffd4
  40f757:	int    0xef
  40f759:	sbb    bl,BYTE PTR [ecx-0xc]
  40f75c:	(bad)  
  40f75d:	dec    eax
  40f75e:	fsub   QWORD PTR [eax]
  40f760:	data16 xlat BYTE PTR ds:[ebx]
  40f762:	aam    0xfe
  40f764:	push   edi
  40f765:	mov    ecx,0x5279a4e4
  40f76a:	push   ebp
  40f76b:	ins    BYTE PTR es:[edi],dx
  40f76c:	fwait
  40f76d:	add    DWORD PTR [ebx],0xb6babe6f
  40f773:	mov    ds,WORD PTR [eax-0x54]
  40f776:	outs   dx,BYTE PTR ds:[esi]
  40f777:	loope  0x40f7ca
  40f779:	add    esp,0xfac4c830
  40f77f:	loopne 0x40f718
  40f781:	push   ecx
  40f782:	je     0x40f7bd
  40f784:	mov    bl,0xc
  40f786:	inc    ecx
  40f787:	not    edi
  40f789:	sub    BYTE PTR [esi-0x5eead4cd],al
  40f78f:	jmp    0x40f73f
  40f791:	js     0x40f7cc
  40f793:	sub    esi,ebp
  40f795:	or     ah,bh
  40f797:	mov    cl,0x37
  40f799:	mov    eax,ds:0xb371666c
  40f79e:	and    DWORD PTR [eax+0x73aa9e3a],ecx
  40f7a4:	test   al,0x53
  40f7a6:	xchg   DWORD PTR [edx+0x2b],esi
  40f7a9:	pushf  
  40f7aa:	pusha  
  40f7ab:	lods   al,BYTE PTR ds:[esi]
  40f7ac:	mov    ch,0x25
  40f7ae:	inc    ecx
  40f7af:	dec    esp
  40f7b0:	sub    eax,0x26ef94e5
  40f7b5:	mov    WORD PTR [edx-0x7f],es
  40f7b8:	adc    al,BYTE PTR [ebx-0x14]
  40f7bb:	cdq    
  40f7bc:	mov    bl,0x55
  40f7be:	xchg   edx,eax
  40f7bf:	imul   esp,DWORD PTR [edx+0x56],0x71
  40f7c3:	fistp  QWORD PTR [ebp-0xd]
  40f7c6:	loopne 0x40f781
  40f7c8:	pop    eax
  40f7c9:	dec    eax
  40f7ca:	out    dx,eax
  40f7cb:	mov    ah,0x7
  40f7cd:	pop    edx
  40f7ce:	cdq    
  40f7cf:	lods   al,BYTE PTR ds:[esi]
  40f7d0:	xor    eax,0x24c913b6
  40f7d5:	mov    edx,DWORD PTR [ecx]
  40f7d7:	jns    0x40f7f0
  40f7d9:	mov    al,0x9c
  40f7db:	mov    ecx,0x15262414
  40f7e0:	ja     0x40f82c
  40f7e2:	sahf   
  40f7e3:	stos   BYTE PTR es:[edi],al
  40f7e4:	mov    eax,ds:0xb59ac203
  40f7e9:	xchg   ebx,eax
  40f7ea:	xlat   BYTE PTR ds:[ebx]
  40f7eb:	out    dx,al
  40f7ec:	sahf   
  40f7ed:	fimul  DWORD PTR [eax]
  40f7ef:	lahf   
  40f7f0:	shld   DWORD PTR [ebx*2+0x11c24fd8],edx,0x26
  40f7f9:	(bad)
  40f7fc:	int    0xf9
  40f7fe:	int3   
  40f7ff:	jnp    0x40f844
  40f801:	mov    bh,0xe9
  40f803:	and    BYTE PTR [ecx+0x57],ah
  40f806:	mul    esp
  40f808:	jnp    0x40f794
  40f80a:	or     BYTE PTR [esi],bl
  40f80c:	mov    dh,0xf0
  40f80e:	and    al,0xdd
  40f810:	mov    esp,0x4d2442fc
  40f815:	xchg   ecx,eax
  40f816:	inc    esp
  40f817:	jns    0x40f7c5
  40f819:	cs sub ecx,0xc86d0081
  40f820:	shr    BYTE PTR [esi+eiz*8-0x5e],cl
  40f824:	push   cs
  40f825:	jbe    0x40f875
  40f827:	mov    esi,0xdc440e34
  40f82c:	xor    ch,BYTE PTR [edi+0x4d]
  40f82f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f830:	rcr    bl,1
  40f832:	popf   
  40f833:	fs and eax,0xc61e62e2
  40f839:	adc    DWORD PTR [eax-0x41],0xffffffce
  40f83d:	xchg   ebx,eax
  40f83e:	lock jge 0x40f82e
  40f841:	lahf   
  40f842:	test   eax,0xd37e8f82
  40f847:	js     0x40f888
  40f849:	mov    dh,0x63
  40f84b:	fcmovb st,st(3)
  40f84d:	jle    0x40f855
  40f84f:	mov    ebx,0x759552b5
  40f854:	sub    BYTE PTR [edi+0x78],ah
  40f857:	adc    edx,ecx
  40f859:	or     ecx,DWORD PTR [eax+0x6a2b3604]
  40f85f:	xor    BYTE PTR [ecx+eax*4-0x34],dl
  40f863:	lods   eax,DWORD PTR ds:[esi]
  40f864:	sub    DWORD PTR [esi-0x50],0xcf0acfd5
  40f86b:	lods   al,BYTE PTR ds:[esi]
  40f86c:	fwait
  40f86d:	mov    cs,WORD PTR [eax-0x4984c5c2]
  40f873:	push   edi
  40f874:	repnz pop ecx
  40f876:	fcom   st(3)
  40f878:	sub    eax,0xdaa9f017
  40f87d:	inc    ecx
  40f87e:	jno    0x40f8c5
  40f880:	xor    BYTE PTR [edi+0x47],dh
  40f883:	mov    ah,BYTE PTR [edx+0x64d4ea2e]
  40f889:	or     esp,ebx
  40f88b:	aad    0x19
  40f88d:	dec    esp
  40f88e:	pop    es
  40f88f:	or     DWORD PTR [ebx-0x3b],eax
  40f892:	out    0x7d,eax
  40f894:	push   ebp
  40f895:	push   cs
  40f896:	jbe    0x40f8a5
  40f898:	fsub   DWORD PTR es:[edx+0x28a7966e]
  40f89f:	dec    edx
  40f8a0:	pushf  
  40f8a1:	jnp    0x40f843
  40f8a3:	(bad)  
  40f8a4:	push   ds
  40f8a5:	xor    al,0x17
  40f8a8:	mov    es,WORD PTR [ecx-0x63844b10]
  40f8ae:	sbb    DWORD PTR [edx+0x41],esi
  40f8b1:	or     BYTE PTR [ebp+esi*1-0x75a5717a],dl
  40f8b8:	into   
  40f8b9:	icebp  
  40f8ba:	push   eax
  40f8bb:	push   es
  40f8bc:	das    
  40f8bd:	popf   
  40f8be:	push   cs
  40f8bf:	es mov ebx,0x87f5feb4
  40f8c5:	push   esp
  40f8c6:	and    eax,0x74268c1d
  40f8cb:	fist   DWORD PTR [esi]
  40f8cd:	jne    0x40f938
  40f8cf:	cmp    edx,edx
  40f8d1:	ins    DWORD PTR es:[edi],dx
  40f8d2:	lock sahf 
  40f8d4:	aas    
  40f8d5:	xlat   BYTE PTR ds:[ebx]
  40f8d6:	js     0x40f917
  40f8d8:	cwde   
  40f8d9:	test   al,0xd5
  40f8db:	out    dx,al
  40f8dc:	xor    BYTE PTR [ebx-0x66b9412a],bh
  40f8e2:	or     eax,0xfad30d5f
  40f8e7:	sar    BYTE PTR [eax-0x52c2ec33],1
  40f8ed:	inc    ebx
  40f8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ef:	lds    ebx,FWORD PTR [ebx+eiz*2+0x5d470a01]
  40f8f6:	pop    esp
  40f8f7:	sbb    BYTE PTR [ebp+0x1a27d31],0x7c
  40f8fe:	mov    cl,0x74
  40f900:	xor    eax,DWORD PTR [edx+0x4f]
  40f903:	fwait
  40f904:	sub    DWORD PTR [eax+eax*4],eax
  40f907:	outs   dx,BYTE PTR ds:[esi]
  40f908:	pop    esp
  40f909:	or     eax,0xa847f871
  40f90e:	cmp    bl,0xb9
  40f911:	retf   
  40f912:	bound  edx,QWORD PTR [esi]
  40f914:	inc    edi
  40f915:	fiadd  WORD PTR [ebx+0x59]
  40f918:	aad    0x79
  40f91a:	sbb    cl,BYTE PTR [edx+0xd5d91c0]
  40f920:	adc    DWORD PTR [esi],esi
  40f922:	pop    es
  40f923:	sbb    BYTE PTR [esi-0x3e172841],dh
  40f929:	shr    BYTE PTR [eax-0x5b],1
  40f92c:	(bad)  
  40f92d:	jmp    0x40f8ce
  40f92f:	inc    ebp
  40f930:	jo     0x40f8bd
  40f932:	(bad)  
  40f933:	lahf   
  40f934:	imul   esp,DWORD PTR [edx+0x63],0xffffff86
  40f938:	mov    bl,0xe7
  40f93a:	ret    
  40f93b:	cld    
  40f93c:	pop    esi
  40f93d:	dec    ebx
  40f93e:	push   ecx
  40f93f:	shl    DWORD PTR ds:0x44482acb,0x79
  40f946:	lock out 0xa4,al
  40f949:	pop    es
  40f94a:	push   esp
  40f94b:	rcr    DWORD PTR [eax-0x4d3dc9a8],cl
  40f951:	inc    edx
  40f952:	retf   0xd7c6
  40f955:	xor    ah,cl
  40f957:	sub    eax,0xe923479b
  40f95c:	xchg   ebp,eax
  40f95d:	xchg   esi,eax
  40f95e:	jmp    0x1ee11965
  40f963:	arpl   WORD PTR [eax],dx
  40f965:	ja     0x40f936
  40f967:	mov    ah,0x17
  40f969:	repz sub edi,DWORD PTR [ebx-0x56]
  40f96d:	clc    
  40f96e:	dec    bx
  40f970:	xlat   BYTE PTR ds:[ebx]
  40f971:	push   edi
  40f972:	in     al,0x7e
  40f974:	mov    al,0xe1
  40f976:	fs push eax
  40f978:	or     al,0x23
  40f97a:	or     eax,DWORD PTR [edx]
  40f97c:	mov    eax,0x666d989a
  40f981:	mov    bl,0xb9
  40f983:	call   0x6df23874
  40f988:	pushf  
  40f989:	lea    edx,[eax-0x14d7ad25]
  40f98f:	loop   0x40f9f8
  40f991:	neg    BYTE PTR [eax-0x5a]
  40f994:	jbe    0x40f9da
  40f996:	lods   eax,DWORD PTR ds:[esi]
  40f997:	daa    
  40f998:	rcl    bl,0xfa
  40f99b:	(bad)  
  40f99c:	pop    ebp
  40f99d:	and    DWORD PTR [esi-0x6b0fb2d],edx
  40f9a3:	and    BYTE PTR [ebx+0x1521d7d0],bh
  40f9a9:	sti    
  40f9aa:	imul   ebx,DWORD PTR ds:0x190c787b,0xe708b977
  40f9b4:	mov    ebp,edi
  40f9b6:	repz cld 
  40f9b8:	mov    esi,0x18740bfc
  40f9bd:	xor    esi,DWORD PTR [eax-0x63f51039]
  40f9c3:	xor    bl,BYTE PTR [ebx-0x1c]
  40f9c6:	and    edx,DWORD PTR [esi+edx*8+0x5eba3429]
  40f9cd:	les    edx,FWORD PTR [esi+0x279ae743]
  40f9d3:	sar    edx,1
  40f9d5:	enter  0x570,0x78
  40f9d9:	add    BYTE PTR [ebx+0x53],ah
  40f9dc:	mov    ah,0x25
  40f9de:	cmp    esp,DWORD PTR [ebx]
  40f9e0:	xor    al,0x7a
  40f9e2:	popa   
  40f9e3:	clc    
  40f9e4:	fwait
  40f9e5:	inc    eax
  40f9e6:	es adc edi,edx
  40f9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ea:	inc    esp
  40f9eb:	lods   eax,DWORD PTR ds:[esi]
  40f9ec:	out    0xd3,al
  40f9ee:	and    DWORD PTR [ebp-0x1bf1078d],edx
  40f9f4:	lahf   
  40f9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f6:	mov    ah,0x89
  40f9f8:	dec    esp
  40f9f9:	pop    ebp
  40f9fa:	mov    ebp,0x619eb2e4
  40f9ff:	ret    0x373f
  40fa02:	std    
  40fa03:	ins    BYTE PTR es:[edi],dx
  40fa04:	sbb    ebx,DWORD PTR [ecx]
  40fa06:	add    BYTE PTR [ebp-0x164d3ce6],al
  40fa0c:	clc    
  40fa0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa0e:	inc    esi
  40fa0f:	repnz fstp st(6)
  40fa12:	pop    ebp
  40fa13:	or     DWORD PTR [ebx+0x4],ebx
  40fa16:	fldcw  WORD PTR [ecx+0x4574234d]
  40fa1c:	shr    BYTE PTR [edi],1
  40fa1e:	je     0x40fa03
  40fa20:	scas   eax,DWORD PTR es:[edi]
  40fa21:	jp     0x40f9fb
  40fa23:	inc    ecx
  40fa24:	push   eax
  40fa25:	test   al,0xa3
  40fa27:	gs xor edx,ebp
  40fa2a:	add    eax,0x8ecbf844
  40fa30:	mov    cs,WORD PTR [eax]
  40fa32:	ss dec ecx
  40fa34:	push   edx
  40fa35:	das    
  40fa36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa37:	icebp  
  40fa38:	sbb    ecx,DWORD PTR [ecx+ebp*2]
  40fa3b:	push   esi
  40fa3c:	or     dh,bl
  40fa3e:	ins    BYTE PTR es:[edi],dx
  40fa3f:	xor    eax,0x61b7437d
  40fa44:	inc    esi
  40fa45:	push   eax
  40fa46:	or     esp,edx
  40fa48:	sbb    esi,edx
  40fa4a:	ret    0x7090
  40fa4d:	cmc    
  40fa4e:	sahf   
  40fa4f:	neg    edi
  40fa51:	out    0xc6,eax
  40fa53:	mov    esp,0x6e6ecf23
  40fa58:	add    edi,ecx
  40fa5a:	retf   0x14c9
  40fa5d:	icebp  
  40fa5e:	leave  
  40fa5f:	cli    
  40fa60:	sbb    al,0x85
  40fa62:	mov    DWORD PTR [ecx+esi*2-0x12a21594],ebx
  40fa69:	mul    DWORD PTR [ebp-0x27]
  40fa6c:	xor    edi,DWORD PTR [edx-0x298bdfae]
  40fa72:	xor    DWORD PTR [ecx],ebx
  40fa74:	jmp    0xafd43523
  40fa79:	stos   BYTE PTR es:[edi],al
  40fa7a:	mov    ecx,0x7f2107da
  40fa7f:	in     eax,0x84
  40fa81:	ja     0x40fafc
  40fa83:	and    DWORD PTR [edx],ebp
  40fa85:	jge    0x40fa70
  40fa87:	stos   BYTE PTR es:[edi],al
  40fa88:	push   0xffffff97
  40fa8a:	and    al,BYTE PTR [edx]
  40fa8c:	ret    
  40fa8d:	loop   0x40fab2
  40fa8f:	push   es
  40fa90:	test   BYTE PTR [esi-0x21ecd9d],0x21
  40fa97:	(bad)  
  40fa98:	adc    ah,BYTE PTR [esi+edx*4-0x70]
  40fa9c:	jecxz  0x40fa9f
  40fa9e:	arpl   WORD PTR [edx+0x5cc72618],bp
  40faa4:	into   
  40faa5:	shr    DWORD PTR [ecx],0xf1
  40faa8:	mov    bh,0xbe
  40faaa:	jb     0x40fa6c
  40faac:	dec    ebx
  40faad:	mov    bh,0x4f
  40faaf:	dec    ecx
  40fab0:	idiv   DWORD PTR [ebx]
  40fab2:	add    al,0xf6
  40fab4:	xchg   DWORD PTR [edi+0x13e3efd9],ebx
  40faba:	cmp    edi,DWORD PTR [esi]
  40fabc:	xchg   edx,eax
  40fabd:	or     bl,bl
  40fabf:	sbb    DWORD PTR [edx-0x4b72f69e],ebp
  40fac5:	dec    ebp
  40fac6:	stos   DWORD PTR es:[edi],eax
  40fac7:	(bad)  
  40fac8:	in     al,0xec
  40faca:	mov    ecx,0x19926843
  40facf:	sub    al,0x60
  40fad1:	(bad)  
  40fad2:	push   ebx
  40fad3:	fstp   st(5)
  40fad5:	out    dx,eax
  40fad6:	loop   0x40fb14
  40fad8:	bound  ebp,QWORD PTR [ecx-0x1e]
  40fadb:	mov    bh,0x90
  40fadd:	sti    
  40fade:	scas   al,BYTE PTR es:[edi]
  40fadf:	pop    esp
  40fae0:	ja     0x40fa7b
  40fae2:	add    ebx,DWORD PTR [ebp+0x13]
  40fae5:	ret    
  40fae6:	fdivr  st(3),st
  40fae8:	push   0x3
  40faea:	in     eax,dx
  40faeb:	mov    dh,0x11
  40faed:	jmp    0x23ec58b1
  40faf2:	lods   al,BYTE PTR ds:[esi]
  40faf3:	retf   0x35fb
  40faf6:	out    0x97,al
  40faf8:	repnz mov edi,0x55816c68
  40fafe:	shl    DWORD PTR [edi-0x7b032a18],1
  40fb04:	push   ds
  40fb05:	rol    ch,1
  40fb07:	dec    edx
  40fb08:	neg    DWORD PTR [ebp-0x3f]
  40fb0b:	xchg   ecx,eax
  40fb0c:	inc    edx
  40fb0d:	shl    cl,0x3f
  40fb10:	or     DWORD PTR [eax-0x25b46eb2],esi
  40fb16:	fistp  QWORD PTR ds:0xe05f4608
  40fb1c:	add    DWORD PTR [edx],esi
  40fb1e:	push   cs
  40fb1f:	cmp    DWORD PTR [edx-0x72],ecx
  40fb22:	pop    eax
  40fb23:	gs out dx,eax
  40fb25:	jno    0x40fb69
  40fb27:	(bad)  
  40fb28:	sbb    bh,BYTE PTR [eax]
  40fb2a:	(bad)  [eax+0x213efd9d]
  40fb30:	aam    0xf
  40fb32:	push   ds
  40fb33:	adc    DWORD PTR ds:0x4a9f8a45,esi
  40fb39:	(bad)  
  40fb3a:	xchg   ebp,eax
  40fb3b:	jno    0x40fb68
  40fb3d:	bound  eax,QWORD PTR ds:0x62f4ec36
  40fb43:	mov    bl,0x6
  40fb45:	or     eax,0xcde1305e
  40fb4a:	in     eax,0x15
  40fb4c:	outs   dx,BYTE PTR ds:[esi]
  40fb4d:	add    BYTE PTR [ebp+0x3fccb0b2],ch
  40fb53:	mov    al,0xf2
  40fb55:	jle    0x40fb1c
  40fb57:	in     eax,dx
  40fb58:	mov    edi,0xf63395ce
  40fb5d:	inc    esp
  40fb5e:	jl     0x40fbc6
  40fb60:	call   0x32d7:0x61ffb509
  40fb67:	and    DWORD PTR [edx-0x7a33cbeb],ebp
  40fb6d:	mov    edi,0xbba1db07
  40fb72:	je     0x40fbd1
  40fb74:	clc    
  40fb75:	xchg   edx,eax
  40fb77:	dec    edi
  40fb78:	adc    DWORD PTR [eax],ebp
  40fb7a:	add    eax,0x511d0acf
  40fb7f:	scas   al,BYTE PTR es:[edi]
  40fb80:	jno    0x40fb9d
  40fb82:	lods   al,BYTE PTR ds:[esi]
  40fb83:	vpmacssww ymm11,ymm1,ymm7,ymm5
  40fb89:	xor    DWORD PTR [edx],ecx
  40fb8b:	xchg   edi,eax
  40fb8c:	sub    bh,BYTE PTR [edx-0x43f34269]
  40fb92:	mov    al,0x66
  40fb94:	cmp    bl,BYTE PTR [ecx]
  40fb96:	pop    edi
  40fb97:	add    al,bl
  40fb99:	pop    ebp
  40fb9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb9b:	xlat   BYTE PTR ds:[ebx]
  40fb9c:	and    al,0xa5
  40fb9e:	dec    esp
  40fb9f:	jae    0x40fbac
  40fba1:	in     eax,0x27
  40fba3:	and    eax,0x9e27692e
  40fba8:	sahf   
  40fba9:	lds    ecx,FWORD PTR [edx+eiz*8]
  40fbac:	sbb    BYTE PTR [edx],0xb6
  40fbaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbb0:	std    
  40fbb1:	inc    edi
  40fbb2:	stos   BYTE PTR es:[edi],al
  40fbb3:	jae    0x40fb81
  40fbb5:	xchg   ebx,eax
  40fbb6:	or     al,0xdc
  40fbb8:	(bad)  
  40fbba:	sar    DWORD PTR [edx*4-0x2a03112],cl
  40fbc1:	sti    
  40fbc2:	test   ch,ch
  40fbc4:	xchg   esp,eax
  40fbc5:	mov    bl,0xbc
  40fbc7:	lock sbb eax,0x299449ba
  40fbcd:	out    0x33,al
  40fbcf:	mov    dh,0x1c
  40fbd1:	jno    0x40fbdb
  40fbd3:	inc    eax
  40fbd4:	jbe    0x40fc3e
  40fbd6:	and    eax,0xedd165d7
  40fbdb:	hlt    
  40fbdc:	pop    ss
  40fbdd:	sub    BYTE PTR [ebp+edi*8+0x2c981cbd],0x7e
  40fbe5:	cmp    BYTE PTR [edi-0x2a],bl
  40fbe8:	adc    eax,edx
  40fbea:	lahf   
  40fbeb:	mov    cl,0x5b
  40fbed:	xor    DWORD PTR [ecx-0x2e],ebp
  40fbf0:	mov    cl,0x82
  40fbf2:	stos   DWORD PTR es:[edi],eax
  40fbf3:	(bad)  
  40fbf5:	or     eax,0x51136724
  40fbfa:	pop    esp
  40fbfb:	fst    QWORD PTR [eax-0x7fa3213c]
  40fc01:	xchg   edi,eax
  40fc02:	cdq    
  40fc03:	mov    dh,0xf7
  40fc05:	test   eax,0xb080ab5f
  40fc0a:	mov    ecx,0x567c985e
  40fc0f:	and    BYTE PTR [eax],dh
  40fc11:	cld    
  40fc12:	push   ebp
  40fc13:	aaa    
  40fc14:	in     eax,0x51
  40fc16:	stos   DWORD PTR es:[edi],eax
  40fc17:	lock inc esi
  40fc19:	mov    eax,ds:0x5518b168
  40fc1e:	fist   WORD PTR [ecx]
  40fc20:	sbb    al,0x2d
  40fc22:	iret   
  40fc23:	in     eax,dx
  40fc24:	jb     0x40fc13
  40fc26:	test   al,0xff
  40fc28:	test   DWORD PTR [ebx-0x1d797ec5],edx
  40fc2e:	in     eax,0x55
  40fc30:	mov    bh,0xcd
  40fc32:	pop    ebx
  40fc33:	mov    dh,0xdd
  40fc35:	adc    edi,esi
  40fc37:	or     DWORD PTR [ebx],edx
  40fc39:	push   ss
  40fc3a:	xor    DWORD PTR [eax],edi
  40fc3c:	ins    BYTE PTR es:[edi],dx
  40fc3d:	(bad)  
  40fc3e:	cmp    ebp,DWORD PTR [esi]
  40fc40:	inc    esi
  40fc41:	mov    cl,0xa8
  40fc43:	mov    esi,ebp
  40fc45:	into   
  40fc46:	pop    ss
  40fc47:	pop    eax
  40fc48:	mov    edi,0xd2a8c176
  40fc4d:	test   eax,0x97689d1c
  40fc52:	xlat   BYTE PTR ds:[ebx]
  40fc53:	sbb    DWORD PTR [edx-0x55],0xffffffea
  40fc57:	push   es
  40fc58:	ds cmp bh,ch
  40fc5b:	adc    eax,0x24e71c27
  40fc60:	or     dl,dl
  40fc62:	(bad)  
  40fc63:	push   ss
  40fc64:	xor    al,0x5f
  40fc66:	xchg   ebp,eax
  40fc67:	fs jns 0x40fce5
  40fc6a:	push   ebx
  40fc6b:	add    edi,DWORD PTR [edi]
  40fc6d:	loopne 0x40fcba
  40fc6f:	inc    esi
  40fc70:	popa   
  40fc71:	xor    al,0xb
  40fc73:	mov    edi,0x8f024db0
  40fc78:	push   ds
  40fc79:	mov    al,0x58
  40fc7b:	mov    esp,0xadbaa0ac
  40fc80:	loope  0x40fcc6
  40fc82:	cld    
  40fc83:	dec    esp
  40fc84:	lods   eax,DWORD PTR ds:[si]
  40fc86:	imul   eax
  40fc88:	adc    eax,0xc19ed8ce
  40fc8d:	inc    esi
  40fc8e:	cmc    
  40fc8f:	(bad)
  40fc92:	(bad)  [ebx]
  40fc94:	enter  0x57d3,0x27
  40fc98:	shl    DWORD PTR [ebx+ebp*2],0x43
  40fc9c:	inc    esi
  40fc9d:	or     bl,cl
  40fc9f:	loop   0x40fc4d
  40fca1:	lods   al,BYTE PTR ds:[esi]
  40fca2:	sub    edi,esi
  40fca4:	retf   0x52d0
  40fca7:	stos   BYTE PTR es:[edi],al
  40fca8:	dec    edx
  40fca9:	test   ecx,esp
  40fcab:	sbb    al,0xd1
  40fcad:	inc    eax
  40fcae:	pop    ds
  40fcaf:	mov    cl,0x72
  40fcb1:	imul   esp,DWORD PTR [eax-0x6b610926],0x1b
  40fcb8:	mov    edi,0x2229ee68
  40fcbd:	inc    edx
  40fcbe:	jecxz  0x40fc8b
  40fcc0:	sbb    esp,edx
  40fcc2:	mov    ds:0x684ed12c,al
  40fcc7:	adc    esi,DWORD PTR [edi+eiz*8]
  40fcca:	(bad)  
  40fccb:	and    edi,DWORD PTR [edx-0x36]
  40fcce:	mov    edi,0x62249acb
  40fcd3:	jns    0x40fcdb
  40fcd5:	adc    bl,BYTE PTR [ecx]
  40fcd7:	add    DWORD PTR [edi-0x47],edi
  40fcda:	xchg   esi,eax
  40fcdb:	dec    ebx
  40fcdc:	outs   dx,BYTE PTR ds:[esi]
  40fcdd:	aaa    
  40fcde:	lds    ebx,FWORD PTR [edi+0x1b]
  40fce1:	mov    ds:0x61825d38,eax
  40fce6:	stos   BYTE PTR es:[edi],al
  40fce7:	mov    ch,0x70
  40fce9:	sbb    BYTE PTR [edx+0x1266b3ca],dl
  40fcef:	push   0xf8a0ebbc
  40fcf4:	(bad)  
  40fcf5:	xchg   ebp,eax
  40fcf6:	outs   dx,BYTE PTR ds:[esi]
  40fcf7:	ret    0x2647
  40fcfa:	or     bh,BYTE PTR [ebx+edi*2+0x927cf43]
  40fd01:	xor    dh,dh
  40fd03:	add    ebp,DWORD PTR [ecx]
  40fd05:	cmp    ebp,ebp
  40fd07:	xlat   BYTE PTR ds:[ebx]
  40fd08:	mov    bl,0x29
  40fd0a:	sub    DWORD PTR ds:0x5e0b43a2,esi
  40fd10:	int    0xf
  40fd12:	fdiv   DWORD PTR [edx]
  40fd14:	pop    eax
  40fd15:	test   eax,0x230c9556
  40fd1a:	iret   
  40fd1b:	cld    
  40fd1c:	imul   esi,esi,0x72466e84
  40fd22:	mov    esi,0xda20f4d1
  40fd27:	mov    ebx,0x6502e3a2
  40fd2c:	jo     0x40fcdb
  40fd2e:	fsubr  QWORD PTR [edi-0x1bf5987]
  40fd34:	inc    edx
  40fd35:	mov    al,0x31
  40fd37:	inc    esi
  40fd38:	xchg   edx,eax
  40fd39:	lds    ecx,FWORD PTR [edi-0x7eab5716]
  40fd3f:	xor    al,0xef
  40fd41:	and    ebp,ebx
  40fd43:	inc    ebp
  40fd44:	dec    ecx
  40fd45:	mov    cl,0xf0
  40fd47:	dec    ebx
  40fd48:	mov    WORD PTR [eax],?
  40fd4a:	and    WORD PTR [edi],sp
  40fd4d:	mov    DWORD PTR [edi+0x6411f645],edx
  40fd53:	cmp    DWORD PTR cs:[eax+0x570ad357],esp
  40fd5a:	in     eax,0x42
  40fd5c:	cmp    edx,eax
  40fd5e:	sahf   
  40fd5f:	dec    ebx
  40fd60:	mov    bl,0xe7
  40fd62:	push   0x63eac207
  40fd67:	or     eax,0x2ae9f292
  40fd6c:	ins    DWORD PTR es:[edi],dx
  40fd6d:	xchg   ecx,eax
  40fd6e:	fwait
  40fd6f:	cmc    
  40fd70:	or     BYTE PTR [ebp-0x724341cb],bh
  40fd76:	jnp    0x40fd3b
  40fd78:	adc    dh,cl
  40fd7a:	adc    BYTE PTR [edx+ebx*1+0x72],ch
  40fd7e:	mov    esp,0xf7c346f8
  40fd83:	cmp    eax,0x4fe286d3
  40fd88:	jmp    0x14c6:0x30cfc328
  40fd8f:	ins    DWORD PTR es:[edi],dx
  40fd90:	xor    DWORD PTR [edx+0x17fe8002],0x9d2f9ece
  40fd9a:	mov    WORD PTR [ebx],es
  40fd9c:	cmp    eax,0xfb7187c4
  40fda1:	jne    0x40fe01
  40fda3:	outs   dx,DWORD PTR ds:[esi]
  40fda4:	jge    0x40fdca
  40fda6:	popf   
  40fda7:	cmc    
  40fda8:	scas   al,BYTE PTR es:[edi]
  40fda9:	mov    ebp,0x713b9187
  40fdae:	mov    esi,0x1a0715da
  40fdb3:	mov    esp,0xfe1e1913
  40fdb8:	inc    ecx
  40fdb9:	inc    edx
  40fdba:	cwde   
  40fdbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdbc:	adc    BYTE PTR [eax+0x15],al
  40fdbf:	hlt    
  40fdc0:	push   es
  40fdc1:	pop    es
  40fdc2:	loop   0x40fd96
  40fdc4:	mov    edx,0xb63a5f7b
  40fdc9:	clc    
  40fdca:	push   ebp
  40fdcb:	lea    ebp,[ecx+ecx*4+0x1029ef8]
  40fdd2:	xchg   cl,dl
  40fdd4:	call   0xe39c6fcf
  40fdd9:	mov    ch,0x1d
  40fddb:	(bad)
  40fddf:	mov    esi,0xe41cd390
  40fde4:	aam    0x88
  40fde6:	in     eax,dx
  40fde7:	jge    0x40fdf0
  40fde9:	sub    eax,DWORD PTR ds:0x9b911fd8
  40fdef:	fistp  WORD PTR [ecx+0x1b719aff]
  40fdf5:	push   0x4df89884
  40fdfa:	or     al,0x5e
  40fdfc:	rcl    BYTE PTR [esi+0x3b940a2],0x2d
  40fe03:	inc    esp
  40fe04:	xchg   edx,eax
  40fe05:	das    
  40fe06:	cmp    ebx,DWORD PTR [eax-0x55]
  40fe09:	adc    al,0x3f
  40fe0b:	xor    DWORD PTR [eax-0x69],0x23716d29
  40fe12:	imul   eax,eax,0xf27c706f
  40fe18:	xor    ebx,DWORD PTR [edx+0x5a]
  40fe1b:	and    eax,0x9249f3f8
  40fe20:	and    al,cl
  40fe22:	(bad)
  40fe25:	jge    0x40fe0c
  40fe27:	addr16 push cs
  40fe29:	je     0x40fe65
  40fe2b:	in     al,0xee
  40fe2d:	(bad)  
  40fe2e:	jnp    0x40fdf2
  40fe30:	arpl   WORD PTR [eax+0x20fbad3c],dx
  40fe36:	jg     0x40fe2c
  40fe38:	or     ah,BYTE PTR [ebp+0x41]
  40fe3b:	sbb    BYTE PTR [ecx],bl
  40fe3d:	mov    al,0x44
  40fe3f:	fldcw  WORD PTR [edx-0x6]
  40fe42:	sub    eax,0xd713d6c8
  40fe47:	ins    DWORD PTR es:[edi],dx
  40fe48:	jae    0x40fe42
  40fe4a:	xlat   BYTE PTR ds:[ebx]
  40fe4b:	std    
  40fe4c:	addr16 mov eax,0xd148cfb7
  40fe52:	adc    ecx,esi
  40fe54:	inc    edi
  40fe55:	mov    esp,0x31e39620
  40fe5a:	xor    dl,BYTE PTR [eax-0x66]
  40fe5d:	or     eax,ebx
  40fe5f:	aaa    
  40fe60:	push   0xfffffffe
  40fe62:	jle    0x40fe4a
  40fe64:	pop    es
  40fe65:	dec    edx
  40fe66:	jmp    0xc10fc0d0
  40fe6b:	dec    esi
  40fe6c:	out    dx,al
  40fe6d:	gs ins DWORD PTR es:[edi],dx
  40fe6f:	or     BYTE PTR [eax],cl
  40fe71:	icebp  
  40fe72:	js     0x40fe6e
  40fe74:	mov    ds:0x1de80e1b,eax
  40fe79:	or     al,al
  40fe7b:	jp     0x40fe26
  40fe7d:	push   esp
  40fe7e:	sahf   
  40fe7f:	sub    eax,0x52963e5f
  40fe84:	sbb    DWORD PTR [eax-0x63],eax
  40fe87:	and    esi,DWORD PTR [ecx]
  40fe89:	in     al,dx
  40fe8a:	add    BYTE PTR [eax-0xe],bh
  40fe8d:	mov    esp,0xd8bd5b74
  40fe92:	sbb    ch,BYTE PTR [ebp+eiz*1+0x21]
  40fe96:	add    ah,BYTE PTR [ebx]
  40fe98:	in     al,dx
  40fe99:	mov    ch,dh
  40fe9b:	das    
  40fe9c:	sub    ebp,edi
  40fe9e:	mov    al,ds:0xf944cf23
  40fea3:	in     eax,dx
  40fea4:	out    0x24,al
  40fea6:	outs   dx,DWORD PTR ds:[esi]
  40fea7:	sub    ah,BYTE PTR [ebx]
  40fea9:	aas    
  40feaa:	cld    
  40feab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feac:	mov    WORD PTR [ecx+0x9d2d923],cs
  40feb2:	inc    esi
  40feb3:	sbb    bh,BYTE PTR [ecx]
  40feb5:	hlt    
  40feb6:	retf   0xe920
  40feb9:	or     bh,al
  40febb:	sti    
  40febc:	je     0x40fe96
  40febe:	mov    edx,0xf9173cd9
  40fec3:	mov    WORD PTR [edi-0x5413f913],cs
  40fec9:	mov    bl,0x5b
  40fecb:	xor    eax,0xb2444023
  40fed0:	pop    es
  40fed1:	mov    DWORD PTR [eax-0xe787d4b],0xca927e2b
  40fedb:	loop   0x40febd
  40fedd:	iret   
  40fede:	dec    edi
  40fedf:	jnp    0x40ff2b
  40fee1:	inc    eax
  40fee2:	cmp    dh,BYTE PTR [edi+0x3b]
  40fee5:	and    BYTE PTR [eax],cl
  40fee7:	loope  0x40fef7
  40fee9:	les    ebx,FWORD PTR [edx]
  40feeb:	arpl   di,sp
  40feed:	push   eax
  40feee:	inc    esi
  40feef:	imul   ecx,DWORD PTR [esi-0x2807bbb9],0x2cbba69a
  40fef9:	mov    ecx,0x1b5e4104
  40fefe:	adc    dl,BYTE PTR [ebp+0xa]
  40ff01:	xor    eax,0x7ac44a7d
  40ff06:	ret    
  40ff07:	push   esp
  40ff08:	mov    ecx,ebx
  40ff0a:	jl     0x40fe8f
  40ff0c:	icebp  
  40ff0d:	pop    ebx
  40ff0e:	or     BYTE PTR [esi+0x7e893f8e],dl
  40ff14:	mov    ds:0x1740645b,al
  40ff19:	add    BYTE PTR [esi],cl
  40ff1b:	out    0x13,al
  40ff1d:	mov    ebp,0x7bbad6b3
  40ff22:	dec    esi
  40ff23:	in     eax,0xe
  40ff25:	lea    ebp,[esi]
  40ff27:	jae    0x40ff44
  40ff29:	pop    edx
  40ff2a:	mov    ebp,0x3c35cd05
  40ff2f:	push   0xbee5695a
  40ff34:	xchg   ebp,eax
  40ff35:	out    0x71,eax
  40ff37:	in     al,dx
  40ff38:	jne    0x40fee8
  40ff3a:	leave  
  40ff3b:	or     ecx,DWORD PTR [eax+ebx*2+0x64]
  40ff3f:	sbb    eax,ebp
  40ff41:	out    dx,eax
  40ff42:	scas   eax,DWORD PTR es:[edi]
  40ff43:	ret    
  40ff44:	mov    ah,0xbe
  40ff46:	mov    edi,0x9c3d9a48
  40ff4b:	cmp    eax,0xb45c62d9
  40ff50:	dec    esp
  40ff51:	retf   
  40ff52:	std    
  40ff53:	mov    cl,0xa6
  40ff55:	pop    ebx
  40ff56:	sub    esp,ebp
  40ff58:	loopne 0x40ff5a
  40ff5a:	test   eax,0xf0806788
  40ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff61:	scas   eax,DWORD PTR es:[edi]
  40ff62:	arpl   WORD PTR [esp+esi*4-0x202268cf],cx
  40ff69:	fist   DWORD PTR [eax-0x6f]
  40ff6c:	sbb    al,0x49
  40ff6e:	xchg   edi,eax
  40ff6f:	dec    esp
  40ff70:	and    eax,0xd01c2852
  40ff75:	cli    
  40ff76:	repz fs dec ebx
  40ff79:	out    dx,al
  40ff7a:	sbb    BYTE PTR [ebp+0xa6b0679],cl
  40ff80:	(bad)  
  40ff81:	(bad)  
  40ff82:	sbb    BYTE PTR [eax+esi*8+0x16],dl
  40ff86:	xchg   esi,eax
  40ff87:	mov    esp,DWORD PTR [edi]
  40ff89:	push   esp
  40ff8a:	outs   dx,BYTE PTR ds:[esi]
  40ff8b:	jo     0x40ff8a
  40ff8d:	rcl    BYTE PTR [esi+0x78],1
  40ff90:	dec    edi
  40ff91:	scas   al,BYTE PTR es:[edi]
  40ff92:	lahf   
  40ff93:	pop    edx
  40ff94:	mov    al,ds:0x1f5c9f8
  40ff99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9a:	sbb    al,0x32
  40ff9c:	test   al,0x7
  40ff9e:	xchg   ecx,eax
  40ff9f:	or     DWORD PTR [esi+0x107d4b32],edi
  40ffa5:	inc    ebx
  40ffa6:	mov    bl,0x94
  40ffa8:	stos   BYTE PTR es:[edi],al
  40ffa9:	shr    al,1
  40ffab:	mul    BYTE PTR [eax+0x2245d98]
  40ffb1:	cmp    eax,0xd50a1673
  40ffb6:	pop    eax
  40ffb7:	jmp    0x410008
  40ffb9:	mov    esi,0xbd593e67
  40ffbe:	cmc    
  40ffbf:	sub    ebp,ecx
  40ffc1:	jnp    0x40ffad
  40ffc3:	or     eax,0x3ca676af
  40ffc8:	adc    al,dl
  40ffca:	cmp    al,0x57
  40ffcc:	mov    ebp,DWORD PTR [ebx+edx*8+0x456a7841]
  40ffd3:	ret    
  40ffd4:	(bad)  
  40ffd5:	fistp  DWORD PTR [ebx]
  40ffd7:	push   0x55
  40ffd9:	test   BYTE PTR [ebp+0x52],dh
  40ffdc:	bound  ebx,QWORD PTR [edi-0x1f45272]
  40ffe2:	cmp    eax,0x1272c64d
  40ffe7:	pop    ebx
  40ffe8:	sub    al,0xba
  40ffea:	xor    DWORD PTR [ecx-0x1c5e8a76],ecx
  40fff0:	push   esp
  40fff1:	adc    al,0xa
  40fff3:	add    eax,DWORD PTR [eax-0x31816a50]
  40fff9:	in     al,0x96
  40fffb:	push   ebx
  40fffc:	mov    esi,0xfaf4d31c
  410001:	dec    DWORD PTR [edi+edx*4-0x57]
  410005:	xchg   esp,eax
  410006:	jb     0x40ffc7
  410008:	add    BYTE PTR [ebx+0x3b6b0ae9],0x71
  41000f:	or     ebp,eax
  410011:	in     al,0xaf
  410013:	aaa    
  410014:	rcl    DWORD PTR [ebx],1
  410016:	or     eax,DWORD PTR [esi-0x78]
  410019:	in     al,dx
  41001a:	mov    edx,0x52f0f856
  41001f:	rol    DWORD PTR [edi+0x33884e7c],1
  410025:	lea    esi,[eax]
  410027:	push   ecx
  410028:	cmp    BYTE PTR [eax-0x2a5403cd],al
  41002e:	int    0x58
  410030:	push   eax
  410031:	mov    bh,0xa3
  410033:	fwait
  410034:	test   BYTE PTR [esi-0x1d],ah
  410037:	and    ecx,ecx
  410039:	sub    eax,0x72766c95
  41003e:	mov    dl,0xdd
  410040:	mov    ?,WORD PTR [ecx]
  410042:	cmp    BYTE PTR [ebp-0x219e3ad7],0x5a
  410049:	jmp    0x9728:0x7c48892c
  410050:	add    eax,0x2a5abe4d
  410055:	jb     0x410055
  410057:	aam    0x4
  410059:	xor    DWORD PTR [esi+0x9],0x56
  41005d:	enter  0x5eea,0x2
  410061:	push   ss
  410062:	pop    es
  410063:	mov    ecx,0x5d8d46e5
  410068:	imul   esp,eax,0x4932c4c3
  41006e:	dec    ecx
  41006f:	fsubp  st(1),st
  410071:	pop    ds
  410072:	or     eax,ebp
  410074:	repz adc eax,0xa54c714e
  41007a:	xchg   esp,eax
  41007b:	adc    al,0x49
  41007d:	jl     0x410089
  41007f:	pop    esi
  410080:	leave  
  410081:	mov    eax,ds:0x4451dc1a
  410086:	rcr    DWORD PTR [ebx-0x39d750aa],0xe8
  41008d:	pop    ss
  41008e:	dec    eax
  41008f:	test   al,0x40
  410091:	pop    edi
  410092:	pop    edi
  410093:	push   edx
  410094:	ja     0x410053
  410096:	popf   
  410097:	loope  0x41003c
  410099:	rol    BYTE PTR [edi],1
  41009b:	cmc    
  41009c:	dec    edx
  41009d:	imul   esi,DWORD PTR [ecx],0x23
  4100a0:	jns    0x4100fe
  4100a2:	xchg   ebp,eax
  4100a3:	mov    al,ds:0x2bedee2b
  4100a8:	aaa    
  4100a9:	jne    0x4100c5
  4100ab:	mov    ebp,0x53e4dac2
  4100b0:	cmp    eax,0xab3e823c
  4100b5:	pop    esi
  4100b6:	stc    
  4100b7:	and    al,0x40
  4100b9:	xlat   BYTE PTR ds:[ebx]
  4100ba:	imul   DWORD PTR [edi]
  4100bc:	mov    dh,0xc5
  4100be:	xchg   esi,eax
  4100bf:	mov    ax,0x11dc
  4100c3:	add    al,0x7f
  4100c5:	adc    ebx,DWORD PTR ds:0x42f7fd48
  4100cb:	push   ebx
  4100cc:	stc    
  4100cd:	cmp    bl,ah
  4100cf:	jbe    0x4100b8
  4100d1:	or     esi,DWORD PTR [eax+eax*2-0x3c253664]
  4100d8:	cmp    bl,dh
  4100da:	mov    ebx,0xb9e94b65
  4100df:	push   edi
  4100e0:	aas    
  4100e1:	out    dx,al
  4100e2:	mov    bl,0xf4
  4100e4:	push   cs
  4100e5:	cli    
  4100e6:	add    al,BYTE PTR [edx+0x23b60ccc]
  4100ec:	ins    BYTE PTR es:[edi],dx
  4100ed:	adc    al,0x4c
  4100ef:	and    eax,eax
  4100f1:	sub    bl,dh
  4100f3:	mov    edx,ebx
  4100f5:	outs   dx,BYTE PTR ds:[esi]
  4100f6:	std    
  4100f7:	cmp    al,0x24
  4100f9:	adc    DWORD PTR [edi+eax*2],esp
  4100fc:	xor    DWORD PTR [edx-0x777ca785],ebp
  410102:	xchg   ebx,eax
  410103:	into   
  410104:	stos   BYTE PTR es:[edi],al
  410105:	popf   
  410106:	mov    ecx,0x62214372
  41010b:	mov    esi,0xe1eb9d1c
  410110:	push   0xf0b76978
  410115:	and    ecx,DWORD PTR [edi]
  410117:	adc    ebp,edi
  410119:	out    0xd3,eax
  41011b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011c:	add    eax,0x84aefa62
  410121:	sbb    al,0x66
  410123:	aas    
  410124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410125:	xor    DWORD PTR [ebx+0x481454c1],0xa797a72f
  41012f:	iret   
  410130:	cmp    DWORD PTR [ecx-0xe5cf567],ebx
  410136:	dec    eax
  410137:	call   0x263b:0x6f674f29
  41013e:	data16 cmp dl,BYTE PTR [esi+edx*1+0x5f86dd6d]
  410146:	mov    ecx,0xa2d69ba2
  41014b:	mov    ecx,0x953840d0
  410150:	or     dh,cl
  410152:	mov    ds:0xe6499126,eax
  410157:	scas   eax,DWORD PTR es:[edi]
  410158:	sbb    BYTE PTR [eax],bl
  41015a:	outs   dx,DWORD PTR ds:[esi]
  41015b:	mov    ecx,0xc2ec95b4
  410160:	(bad)  
  410161:	mov    BYTE PTR [edx],ah
  410163:	lods   eax,DWORD PTR ds:[esi]
  410164:	and    eax,0x819cce78
  410169:	stos   DWORD PTR es:[edi],eax
  41016a:	mov    bh,0x9d
  41016c:	mov    eax,ds:0x39f7858a
  410171:	xchg   edi,eax
  410172:	fwait
  410173:	gs push ebx
  410175:	stc    
  410176:	and    edi,edx
  410178:	ss data16 (bad) 
  41017b:	or     DWORD PTR [eax+0x33],ebp
  41017e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017f:	mov    dl,0xa7
  410181:	mov    cl,0xd9
  410183:	not    DWORD PTR [edi-0x52]
  410186:	clc    
  410187:	xchg   ecx,eax
  410188:	mov    ds:0xf4b899a4,eax
  41018d:	cdq    
  41018e:	adc    dl,dl
  410190:	jl     0x4101da
  410192:	ja     0x4101f1
  410194:	stos   DWORD PTR es:[edi],eax
  410195:	adc    edi,DWORD PTR [esi-0x1a]
  410198:	data16 (bad) 
  41019a:	mov    esi,0xbccda51c
  41019f:	xor    DWORD PTR ds:[esi+ecx*4+0x2a],0x9350f749
  4101a8:	or     BYTE PTR [eax-0x72409cd1],al
  4101ae:	and    BYTE PTR [ebx],al
  4101b0:	cli    
  4101b1:	ss mov dh,0x32
  4101b4:	aas    
  4101b5:	jg     0x4101c8
  4101b7:	into   
  4101b8:	hlt    
  4101b9:	pushf  
  4101ba:	jl     0x4101d9
  4101bc:	mov    ds:0x14822b88,al
  4101c1:	jno    0x410167
  4101c3:	xor    BYTE PTR [esi],bl
  4101c5:	shl    BYTE PTR [ecx+0x61],0x94
  4101c9:	inc    ebx
  4101ca:	mov    ch,0x17
  4101cc:	mov    ah,0xbf
  4101ce:	enter  0x8d93,0x8
  4101d2:	sbb    dh,BYTE PTR [ecx]
  4101d4:	test   dl,ah
  4101d6:	test   al,0x60
  4101d8:	js     0x410207
  4101da:	daa    
  4101db:	xchg   edx,eax
  4101dc:	xchg   edi,eax
  4101dd:	add    ch,0xf8
  4101e0:	mov    bl,bh
  4101e2:	scas   eax,DWORD PTR es:[edi]
  4101e3:	add    BYTE PTR [eax],bh
  4101e5:	int    0x70
  4101e7:	mov    ah,0x95
  4101e9:	pop    ecx
  4101ea:	mov    esi,0x17987270
  4101ef:	aam    0xcb
  4101f1:	sti    
  4101f2:	hlt    
  4101f3:	lock xchg ebx,eax
  4101f5:	push   ds
  4101f6:	cmc    
  4101f7:	iret   
  4101f8:	idiv   DWORD PTR [ecx]
  4101fa:	repz dec BYTE PTR [ebp+0x2d]
  4101fe:	and    al,0x3b
  410200:	dec    ecx
  410201:	mov    bh,0xed
  410203:	lock dec ebx
  410205:	in     al,0x87
  410207:	mov    bl,0x2e
  410209:	cdq    
  41020a:	out    dx,eax
  41020b:	jmp    0x41022c
  41020d:	imul   edx,DWORD PTR [edi],0x74
  410210:	push   cs
  410211:	mov    es,WORD PTR [ebx+edx*4-0x56f85ec0]
  410218:	aas    
  410219:	dec    esp
  41021a:	jo     0x410276
  41021c:	sub    edx,ecx
  41021e:	push   ecx
  41021f:	out    0xcd,al
  410221:	xchg   edi,ebp
  410223:	test   eax,0x309e476f
  410228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410229:	sbb    al,0x65
  41022b:	and    BYTE PTR [edi+0x6dc5624d],ah
  410231:	or     BYTE PTR [ecx-0x3ced2e36],ch
  410237:	pop    ebx
  410238:	xchg   edi,eax
  410239:	rol    BYTE PTR [ecx-0x6b09c889],0x75
  410240:	nop
  410241:	aas    
  410242:	sub    DWORD PTR [eax+0xdde8195],esp
  410248:	adc    BYTE PTR [edi+0x679ce3b0],ah
  41024e:	inc    ebp
  41024f:	inc    ecx
  410250:	std    
  410251:	(bad)  [edx]
  410253:	add    DWORD PTR [ebx+eiz*1+0x50c11b5],ecx
  41025a:	js     0x4101e5
  41025c:	inc    DWORD PTR [esi+eax*4]
  41025f:	imul   ecx,DWORD PTR [ebp+0x59],0x73
  410263:	sub    al,BYTE PTR [edx-0xa]
  410266:	enter  0xf49d,0xf4
  41026a:	mov    dh,0x9b
  41026c:	add    BYTE PTR [eax],bh
  41026e:	scas   eax,DWORD PTR es:[edi]
  41026f:	je     0x41029a
  410271:	jl     0x410240
  410273:	rcl    ch,0xef
  410276:	jg     0x410203
  410278:	sti    
  410279:	xor    esi,esi
  41027b:	mov    edi,0xf6add24
  410280:	loop   0x410216
  410282:	and    bh,ah
  410284:	jns    0x410258
  410286:	std    
  410287:	xchg   DWORD PTR [eax-0x68],esp
  41028a:	xchg   DWORD PTR [ebx+eiz*8+0x24],ebp
  41028e:	jns    0x410253
  410290:	push   edx
  410291:	add    al,0x4a
  410293:	daa    
  410294:	inc    ebx
  410295:	xor    dh,bl
  410297:	add    DWORD PTR [ecx],edi
  410299:	ficom  WORD PTR [edi+0x82b0bb7]
  41029f:	addr16 mov edx,0x936485a9
  4102a5:	mov    al,0x3f
  4102a7:	lahf   
  4102a8:	out    dx,eax
  4102a9:	dec    ebx
  4102aa:	xor    al,0x7e
  4102ac:	lea    edx,[eax]
  4102ae:	call   0x5e8ce350
  4102b3:	xchg   BYTE PTR [edi-0x53],cl
  4102b6:	xor    edx,DWORD PTR [esi]
  4102b8:	aam    0x9d
  4102ba:	push   esi
  4102bb:	add    al,0x52
  4102bd:	test   DWORD PTR [esi+ebx*1],eax
  4102c0:	hlt    
  4102c1:	in     eax,dx
  4102c2:	into   
  4102c3:	sbb    DWORD PTR [edx+0x5c],0x72175ee7
  4102ca:	xor    eax,0xbdd65bcc
  4102cf:	dec    ebp
  4102d0:	push   edi
  4102d1:	call   DWORD PTR ds:0xe92783a8
  4102d7:	and    eax,0x3e8ab51b
  4102dc:	test   DWORD PTR [ecx+0x196ea9b0],edi
  4102e2:	sbb    BYTE PTR [edi],cl
  4102e4:	inc    esi
  4102e5:	xchg   ebx,eax
  4102e6:	loopne 0x41035d
  4102e8:	sbb    DWORD PTR [ebp+0x5f23ba72],ebx
  4102ee:	xor    edx,eax
  4102f0:	jp     0x4102a7
  4102f2:	addr16 cdq 
  4102f4:	sub    al,0x83
  4102f6:	dec    BYTE PTR [edx+0x3b]
  4102f9:	stc    
  4102fa:	lahf   
  4102fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102fc:	inc    edi
  4102fd:	clc    
  4102fe:	cwde   
  4102ff:	cld    
  410300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410301:	mov    ebx,0xb22397ca
  410306:	pop    ds
  410307:	xlat   BYTE PTR ds:[ebx]
  410308:	sub    ebx,DWORD PTR cs:[ebp-0x5e8104c3]
  41030f:	fidiv  DWORD PTR [eax-0x5087f712]
  410315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410316:	jno    0x41038e
  410318:	(bad)  
  410319:	loop   0x4102b1
  41031b:	push   ecx
  41031c:	loop   0x4102aa
  41031e:	mov    ecx,0xb925375c
  410323:	ins    BYTE PTR es:[edi],dx
  410324:	mov    esi,0xd2c73227
  410329:	mov    edx,0x6f442c77
  41032e:	xor    edi,0x9ed1490b
  410334:	mov    ss,WORD PTR [ecx+0x1ede5eac]
  41033a:	loope  0x4102ed
  41033c:	pop    esp
  41033d:	fldcw  WORD PTR [esi]
  41033f:	inc    esp
  410340:	inc    esi
  410341:	pop    edx
  410342:	cld    
  410343:	mov    cl,0x49
  410345:	mov    eax,ds:0xdd262ad3
  41034a:	inc    ebx
  41034b:	pop    ds
  41034c:	clc    
  41034d:	jge    0x41036a
  41034f:	pop    eax
  410350:	mov    edx,DWORD PTR [edi+ebp*2-0x57e3013e]
  410357:	mov    ds:0x2e051642,eax
  41035c:	dec    ecx
  41035d:	pusha  
  41035e:	mov    esi,0x9072ce7f
  410363:	outs   dx,DWORD PTR ds:[esi]
  410364:	inc    ebx
  410365:	shr    BYTE PTR [ebx-0x20be21b1],0xa3
  41036c:	popa   
  41036d:	nop
  41036e:	ins    DWORD PTR es:[edi],dx
  41036f:	test   ebx,ebx
  410371:	je     0x41032c
  410373:	push   eax
  410374:	arpl   WORD PTR [esp+edx*2],bp
  410377:	sub    dh,BYTE PTR [ecx-0x56]
  41037a:	daa    
  41037b:	loop   0x410337
  41037d:	xlat   BYTE PTR ds:[ebx]
  41037e:	(bad)  
  41037f:	(bad)  
  410380:	fiadd  WORD PTR [eax]
  410382:	adc    ch,dl
  410384:	dec    ecx
  410385:	sti    
  410386:	pop    edx
  410387:	mov    dh,0xf0
  410389:	lock ja 0x4103ce
  41038c:	xor    al,0x33
  41038e:	push   ebp
  41038f:	test   eax,0x4283b5d7
  410394:	retf   0x62ca
  410397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410398:	sti    
  410399:	loopne 0x41033d
  41039b:	mov    ah,0xe9
  41039d:	mov    dh,0x19
  41039f:	loope  0x410367
  4103a1:	inc    ebx
  4103a2:	or     ah,ch
  4103a4:	repnz inc esi
  4103a6:	pop    esp
  4103a7:	shl    ecx,0xb3
  4103aa:	ret    0xda1d
  4103ad:	pop    esp
  4103ae:	mov    DWORD PTR [ebp+0x6193764c],edx
  4103b4:	jl     0x4103b1
  4103b6:	ret    
  4103b7:	sub    BYTE PTR [ebx],ch
  4103b9:	xchg   esi,eax
  4103ba:	(bad)  
  4103bb:	fst    DWORD PTR [ecx]
  4103bd:	and    BYTE PTR [edx-0x2caaeca7],ch
  4103c3:	adc    DWORD PTR [ebx-0x25],esi
  4103c6:	mov    bl,0x39
  4103c8:	jae    0x410375
  4103ca:	mov    cl,0x13
  4103cc:	shl    ch,cl
  4103ce:	popf   
  4103cf:	(bad)  
  4103d0:	(bad)  
  4103d1:	cli    
  4103d2:	fwait
  4103d3:	add    eax,0xb906f7bf
  4103d8:	imul   ecx,ebp,0x3db5c962
  4103de:	(bad)  
  4103df:	icebp  
  4103e0:	call   0x8cfa:0x60d5e15b
  4103e7:	pushf  
  4103e8:	mov    cl,ah
  4103ea:	xchg   DWORD PTR ds:0xa451bc22,esi
  4103f0:	xchg   edi,eax
  4103f1:	sbb    BYTE PTR es:[edi-0x2ff37cb6],0xc6
  4103f9:	sbb    DWORD PTR [ebp+0x2a],0x567fc121
  410400:	outs   dx,BYTE PTR ds:[esi]
  410401:	dec    edi
  410402:	cmp    DWORD PTR [edi-0x61],0xfffffff2
  410406:	inc    esi
  410407:	mov    esp,DWORD PTR [ebx+0x49]
  41040a:	mov    ds:0x112f8ee1,eax
  41040f:	loop   0x410411
  410411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410412:	call   0x3cbe:0xa20ce117
  410419:	enter  0xa5b6,0xcc
  41041d:	sahf   
  41041e:	pop    ebp
  41041f:	and    BYTE PTR [esi],cl
  410421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410422:	stos   DWORD PTR es:[edi],eax
  410423:	fdivr  st(4),st
  410425:	es pushf 
  410427:	pop    eax
  410428:	fbld   TBYTE PTR [edx-0x121b3377]
  41042f:	pusha  
  410430:	mov    al,0xf4
  410432:	xchg   esi,eax
  410433:	cmp    al,0x74
  410435:	ror    DWORD PTR [ebx-0x18],1
  410438:	add    DWORD PTR [ebp+0x39],edx
  41043b:	test   al,0x58
  41043d:	inc    esp
  41043e:	nop
  41043f:	loope  0x41049a
  410441:	and    eax,0x6f4eff7f
  410446:	ins    DWORD PTR es:[edi],dx
  410447:	in     eax,dx
  410448:	dec    ecx
  410449:	mov    ebp,0x88fb0459
  41044e:	mov    WORD PTR [edi+0x44ba4aef],ss
  410454:	bnd ret 
  410456:	inc    esi
  410457:	in     al,0x35
  410459:	out    dx,al
  41045a:	add    eax,0xf4a7b284
  41045f:	jnp    0x410447
  410461:	out    0xd8,eax
  410463:	jno    0x4104b3
  410465:	xchg   edx,eax
  410466:	sahf   
  410467:	mov    dl,0x61
  410469:	xchg   ecx,eax
  41046a:	xchg   edx,eax
  41046b:	dec    ebx
  41046c:	push   ebx
  41046d:	cmc    
  41046e:	cmp    BYTE PTR [edi-0x486c392b],0x49
  410475:	mov    bh,0xd6
  410477:	push   ecx
  410478:	jge    0x410464
  41047a:	pushf  
  41047b:	dec    eax
  41047c:	dec    edx
  41047d:	add    eax,0xce7028c6
  410482:	rcr    BYTE PTR [ecx],1
  410484:	cmp    al,0xab
  410486:	outs   dx,DWORD PTR ds:[esi]
  410487:	es pushf 
  410489:	js     0x410430
  41048b:	jbe    0x4104ed
  41048d:	in     eax,0x8d
  41048f:	add    esp,ebx
  410491:	pop    ebp
  410492:	mov    bh,0xfe
  410494:	pusha  
  410495:	dec    esp
  410496:	jp     0x41049b
  410498:	sub    DWORD PTR [ebx+0x570996a7],ebp
  41049e:	aam    0xe5
  4104a0:	push   eax
  4104a1:	fdiv   QWORD PTR [esi-0x6c]
  4104a4:	xchg   esp,eax
  4104a5:	push   es
  4104a6:	mov    ah,0xf
  4104a8:	in     al,dx
  4104a9:	lock out dx,al
  4104ab:	pop    ebp
  4104ac:	(bad)  
  4104ad:	push   edi
  4104ae:	mov    cl,0x6e
  4104b0:	or     ah,al
  4104b2:	pop    esp
  4104b3:	add    BYTE PTR [edx],ah
  4104b5:	add    al,0xd4
  4104b7:	in     eax,dx
  4104b8:	ins    BYTE PTR es:[edi],dx
  4104b9:	adc    DWORD PTR [ebp+0x4fae7f3e],0xbaff3f22
  4104c3:	loop   0x410518
  4104c5:	lods   eax,DWORD PTR ds:[esi]
  4104c6:	mov    ds:0x46e36b61,al
  4104cb:	addr16 push esp
  4104cd:	ret    
  4104ce:	ins    DWORD PTR es:[edi],dx
  4104cf:	inc    esi
  4104d0:	mov    edi,0xdff81335
  4104d5:	mov    edi,0x4bd75bda
  4104da:	jp     0x4104e3
  4104dc:	mov    eax,0x800b6d4e
  4104e1:	adc    al,0x5
  4104e3:	(bad)  
  4104e4:	adc    al,0x6c
  4104e6:	enter  0xa1fc,0x9f
  4104ea:	mov    cl,0xc
  4104ec:	(bad)  
  4104ee:	ja     0x410511
  4104f0:	mov    cl,0xc8
  4104f2:	push   0x479391bd
  4104f7:	loope  0x4104cf
  4104f9:	in     al,0x3d
  4104fb:	loopne 0x410556
  4104fd:	dec    ecx
  4104fe:	cld    
  4104ff:	dec    eax
  410500:	cmp    eax,0xbd9b0211
  410505:	inc    ebp
  410506:	mov    esi,0x905cecd2
  41050b:	gs (bad) 
  41050d:	push   esp
  41050e:	sti    
  41050f:	adc    DWORD PTR [ecx-0x54],0x5
  410513:	stos   DWORD PTR es:[edi],eax
  410514:	adc    eax,0x144bf7d3
  410519:	lahf   
  41051a:	jle    0x4104c5
  41051c:	loopne 0x410520
  41051e:	fbld   TBYTE PTR ss:[ecx+0x536e657d]
  410525:	rol    esp,1
  410527:	shl    DWORD PTR [edi-0x22],1
  41052a:	jg     0x4105a1
  41052c:	cmp    DWORD PTR ds:0xc1b34608,0xdf61ec7d
  410536:	dec    ebp
  410537:	cmp    eax,DWORD PTR [ecx+0x2f]
  41053a:	sub    BYTE PTR [edi-0x24],ch
  41053d:	imul   ecx,DWORD PTR [edi],0x7e391840
  410543:	ficomp DWORD PTR [ebx]
  410545:	sbb    ecx,esp
  410547:	jle    0x41058f
  410549:	stc    
  41054a:	loop   0x4105b9
  41054c:	int3   
  41054d:	and    eax,0xfde81529
  410552:	leave  
  410553:	(bad)  
  410554:	fucomp st(4)
  410556:	test   DWORD PTR [ebp-0x4c],esi
  410559:	adc    BYTE PTR [ecx+0x6b],0xda
  41055d:	test   eax,0x945c85b1
  410562:	mov    eax,0x50e1175e
  410567:	xor    DWORD PTR [eax+0x4a1162a5],ebx
  41056d:	int3   
  41056e:	sub    ch,BYTE PTR [edi]
  410570:	or     eax,0x49a58707
  410575:	sti    
  410576:	aad    0xcf
  410578:	sbb    DWORD PTR [ebp+ecx*8+0x62],edx
  41057c:	cld    
  41057d:	adc    eax,0x8b9f7ac
  410582:	shl    BYTE PTR [ecx],cl
  410584:	lods   al,BYTE PTR ds:[esi]
  410585:	test   dl,al
  410587:	xor    ecx,ecx
  410589:	pop    ebp
  41058a:	lock retf 0xf64c
  41058e:	dec    edx
  41058f:	adc    eax,DWORD PTR [eax+0x231c127e]
  410595:	(bad)  
  410597:	daa    
  410598:	aad    0xf0
  41059a:	dec    eax
  41059b:	pop    esi
  41059c:	outs   dx,DWORD PTR ds:[esi]
  41059d:	in     eax,dx
  41059e:	add    al,0x11
  4105a0:	daa    
  4105a1:	pop    esp
  4105a2:	dec    eax
  4105a3:	daa    
  4105a4:	sub    BYTE PTR [eax+ebx*8+0x37f71514],0xb7
  4105ac:	cdq    
  4105ad:	scas   al,BYTE PTR es:[edi]
  4105ae:	mov    eax,ds:0x9fdb3286
  4105b3:	imul   ecx,DWORD PTR ss:[esi+0x36],0xffffffdc
  4105b8:	fnsave [ebx+0x765d247d]
  4105be:	adc    BYTE PTR [edi-0x7635d42f],bl
  4105c4:	jg     0x410568
  4105c6:	sahf   
  4105c7:	pushf  
  4105c8:	sbb    DWORD PTR [ecx-0x50],0xe49a7f1e
  4105cf:	or     al,0xf3
  4105d1:	mov    bl,0x11
  4105d3:	add    eax,0xa3cf4471
  4105d8:	out    dx,al
  4105d9:	hlt    
  4105da:	inc    ebp
  4105db:	loopne 0x41062d
  4105dd:	gs shl esp,cl
  4105e0:	push   ss
  4105e1:	fcompp 
  4105e3:	and    eax,0x324977b7
  4105e8:	loope  0x4105ce
  4105ea:	push   es
  4105eb:	pop    edx
  4105ec:	sbb    BYTE PTR [edi-0x627d2f27],bl
  4105f2:	mov    edi,0x79a0b25f
  4105f7:	rcr    DWORD PTR [ebp-0x606b623c],0x2f
  4105fe:	pop    edi
  4105ff:	imul   esp,DWORD PTR [esi+0x3d],0xffffffe0
  410603:	into   
  410604:	dec    ebx
  410605:	inc    ecx
  410606:	(bad)  
  410607:	cmp    BYTE PTR [ecx],cl
  410609:	pop    es
  41060a:	mov    eax,ds:0xea2780a0
  41060f:	and    ah,BYTE PTR [esi]
  410611:	dec    edx
  410612:	les    eax,FWORD PTR [ebx+0x64]
  410615:	jbe    0x410660
  410617:	icebp  
  410618:	test   DWORD PTR [ebp+0x7],edx
  41061b:	xor    edi,esp
  41061d:	mov    esi,0x895ca4d4
  410622:	stos   BYTE PTR es:[edi],al
  410623:	add    eax,DWORD PTR [ebx-0xf]
  410626:	shr    cl,cl
  410628:	mov    cl,0xdc
  41062a:	xor    BYTE PTR [edx-0x3e],dh
  41062d:	or     al,0x9b
  41062f:	adc    eax,0x95459e5a
  410634:	lsl    eax,WORD PTR [ebp*8-0x6a179b97]
  41063c:	mov    al,0x4e
  41063e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41063f:	popa   
  410640:	sub    ah,dh
  410642:	scas   eax,DWORD PTR es:[edi]
  410643:	sbb    al,0xed
  410645:	fs jge 0x4106ad
  410648:	pop    ecx
  410649:	mov    al,0x32
  41064b:	pop    edx
  41064c:	nop
  41064d:	repnz mov al,ds:0xe653d51b
  410653:	fisubr WORD PTR [ecx+0x6bc962ce]
  410659:	add    ah,0x1
  41065c:	mov    al,ds:0x938ed478
  410661:	gs mov ah,bh
  410664:	dec    edi
  410665:	stos   DWORD PTR es:[edi],eax
  410666:	imul   edx,DWORD PTR [ecx-0x477a7875],0xffffff81
  41066d:	xor    DWORD PTR [ebx-0x72],edx
  410670:	std    
  410671:	fld    TBYTE PTR [esi+0x60c87572]
  410677:	fisubr DWORD PTR [ebp*1+0x2d206833]
  41067e:	call   0x7f28:0x75f414e8
  410685:	fcom   DWORD PTR ds:0x5c392103
  41068b:	xchg   DWORD PTR [esi],ecx
  41068d:	mov    ds:0x53dc2c3e,eax
  410692:	js     0x4106ff
  410694:	xor    ebx,DWORD PTR [ebp-0x79]
  410697:	mov    ebx,0x7a80a3b9
  41069c:	fldcw  WORD PTR ds:0xac75d7f5
  4106a2:	jge    0x4106a1
  4106a4:	repnz addr16 ss inc dl
  4106a9:	(bad)  
  4106aa:	dec    edi
  4106ab:	push   edx
  4106ac:	fadd   DWORD PTR cs:[eax+0x592292a0]
  4106b3:	aad    0x63
  4106b5:	add    al,BYTE PTR [eax]
  4106b7:	loope  0x4106cc
  4106b9:	jmp    0x3a8e13cf
  4106be:	and    al,0xd8
  4106c0:	imul   BYTE PTR [edx]
  4106c2:	arpl   WORD PTR ds:0x73def34d,bp
  4106c8:	sub    ebp,DWORD PTR [ebp+0x5f]
  4106cb:	jns    0x41074b
  4106cd:	adc    eax,0xcceaf5b4
  4106d2:	aas    
  4106d3:	jle    0x4106ac
  4106d5:	xchg   esp,eax
  4106d6:	and    al,0xc1
  4106d8:	mov    ebx,0x83ccb6af
  4106dd:	fstp   DWORD PTR [ebp+0x5b]
  4106e0:	sbb    ch,BYTE PTR [eax+0x2ba28fc6]
  4106e6:	stos   BYTE PTR es:[edi],al
  4106e7:	adc    al,0x39
  4106e9:	xchg   ebp,eax
  4106ea:	sbb    ah,BYTE PTR [ebx+0x4bafacdf]
  4106f0:	or     al,0x18
  4106f2:	xchg   esp,eax
  4106f3:	cmp    ebx,eax
  4106f5:	sub    al,0x4c
  4106f7:	add    ch,BYTE PTR [eax]
  4106f9:	fimul  DWORD PTR [edi-0xc]
  4106fc:	inc    edx
  4106fd:	fdiv   QWORD PTR [esi]
  4106ff:	push   cs
  410700:	shl    ah,1
  410702:	pushf  
  410703:	sbb    dh,BYTE PTR [edi-0x5b152eb3]
  410709:	sub    edx,DWORD PTR [ecx+0x7045a4f6]
  41070f:	push   ebp
  410710:	jb     0x4106bf
  410712:	xchg   edx,eax
  410713:	adc    DWORD PTR [edx+0x57a39147],ebx
  410719:	sbb    al,0x73
  41071b:	shl    DWORD PTR [esi+ecx*1],1
  41071e:	xor    bl,BYTE PTR [ecx]
  410720:	xor    al,BYTE PTR [ecx-0x197a851e]
  410726:	in     al,dx
  410727:	fxch   st(4)
  410729:	fs addr16 inc edx
  41072c:	xchg   edi,eax
  41072d:	pop    ss
  41072e:	int3   
  41072f:	mov    ecx,0x45dbb507
  410734:	pop    ss
  410735:	sahf   
  410736:	loope  0x410729
  410738:	jp     0x41079f
  41073a:	dec    edx
  41073b:	bound  esi,QWORD PTR [edx-0x2]
  41073e:	inc    eax
  41073f:	inc    esi
  410740:	mov    edx,0x8abf49c
  410745:	jl     0x4106e4
  410747:	dec    eax
  410748:	test   eax,0x5dbae4b8
  41074d:	iret   
  41074e:	or     BYTE PTR [ecx],bl
  410750:	mov    al,0xd7
  410752:	mov    bh,BYTE PTR [eax-0x17]
  410755:	leave  
  410756:	xchg   esi,eax
  410757:	out    dx,al
  410758:	ja     0x41072c
  41075a:	jno    0x410747
  41075c:	push   edi
  41075d:	xor    ah,cl
  41075f:	sbb    edi,edx
  410761:	fild   DWORD PTR [ebx]
  410763:	fmul   DWORD PTR [eax-0x5d7fe40a]
  410769:	adc    eax,0x5498fb5
  41076e:	fcom   st(2)
  410770:	and    eax,0xb7d2ee1f
  410775:	fsub   DWORD PTR [edx]
  410777:	cli    
  410778:	cmc    
  410779:	add    al,0xd3
  41077b:	jmp    0xe6b759e0
  410780:	call   0xeb3:0x6cc83dcd
  410787:	ss fwait
  410789:	adc    DWORD PTR [edi],esi
  41078b:	retf   0xee6e
  41078e:	inc    esi
  41078f:	cdq    
  410790:	nop
  410791:	into   
  410792:	lock mov edi,0xaef2a6e6
  410798:	cmp    dl,dl
  41079a:	aas    
  41079b:	xchg   ebp,eax
  41079c:	pop    esp
  41079d:	pusha  
  41079e:	div    DWORD PTR [edx-0x79fa133a]
  4107a4:	and    ebp,esi
  4107a6:	call   0x617df3d1
  4107ab:	ins    BYTE PTR es:[edi],dx
  4107ac:	push   es
  4107ad:	mov    DWORD PTR [esi+edi*8-0x670a84f6],esi
  4107b4:	jp     0x41077f
  4107b6:	push   esp
  4107b7:	test   al,0xe2
  4107b9:	pop    edi
  4107ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107bb:	jge    0x4107d1
  4107bd:	xchg   edi,eax
  4107be:	jge    0x41074b
  4107c0:	ds in  al,0xdc
  4107c3:	push   edx
  4107c4:	mov    DWORD PTR [edi+0x7569cccf],eax
  4107ca:	repz jo 0x410805
  4107cd:	data16 cmp BYTE PTR [edx],cl
  4107d0:	(bad)  
  4107d1:	push   edi
  4107d2:	jmp    0x5360764f
  4107d7:	cmp    eax,0xe314e0a9
  4107dc:	(bad)  
  4107dd:	or     ah,BYTE PTR fs:[esi-0xb6cdb69]
  4107e4:	mov    ss,WORD PTR [ecx+esi*8-0x45f59222]
  4107eb:	push   edx
  4107ec:	test   DWORD PTR [ecx+0x1b],edx
  4107ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107f0:	sub    DWORD PTR [edx-0x7d712a1],ebp
  4107f6:	or     edi,DWORD PTR [ebp+0x4af1a5c2]
  4107fc:	inc    esp
  4107fd:	jo     0x41080e
  4107ff:	xchg   DWORD PTR [esi],esi
  410801:	mov    ds:0x202d7337,al
  410806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410807:	mov    eax,ds:0xe67daf4e
  41080c:	mov    cl,0xd2
  41080e:	dec    esi
  41080f:	and    eax,0xcfec58a0
  410814:	push   ebx
  410815:	test   eax,edi
  410817:	in     al,dx
  410818:	push   ss
  410819:	dec    esp
  41081a:	cmp    eax,edx
  41081c:	adc    eax,0xc0666b0e
  410821:	cmc    
  410822:	(bad)  
  410823:	adc    eax,DWORD PTR [ebx+0x154c86fa]
  410829:	and    DWORD PTR [ebx-0xb],edi
  41082c:	ret    
  41082d:	mov    eax,ds:0x15e32823
  410832:	sahf   
  410833:	or     DWORD PTR [ebx+ebx*8+0x26],esp
  410837:	retf   0x115f
  41083a:	pusha  
  41083b:	daa    
  41083c:	out    dx,al
  41083d:	mov    edi,0xb9f8dc54
  410842:	cld    
  410843:	pop    esp
  410844:	sbb    eax,0x64c86bc5
  410849:	mov    eax,0x4b57d2a7
  41084e:	stos   BYTE PTR es:[edi],al
  41084f:	adc    DWORD PTR [edi],ebp
  410851:	mov    edi,0xfa5830b
  410856:	mov    edi,0xda5016e0
  41085b:	aam    0x32
  41085d:	(bad)  
  41085e:	daa    
  41085f:	das    
  410860:	xor    DWORD PTR [ebp+ebx*4-0x5f],eax
  410864:	std    
  410865:	fdivr  QWORD PTR [eax]
  410867:	imul   eax,edi,0xffffffcf
  41086a:	pop    es
  41086b:	xchg   ecx,eax
  41086c:	adc    BYTE PTR [esi],ah
  41086e:	jo     0x410850
  410870:	jne    0x410847
  410872:	shr    BYTE PTR [edx-0x656d7b46],0x63
  410879:	cld    
  41087a:	add    eax,0xb7334e1b
  41087f:	pop    edx
  410880:	call   0x7d82:0x20cfa231
  410887:	jb     0x410816
  410889:	in     eax,0xc9
  41088b:	rol    BYTE PTR [ebx+0x36],1
  41088e:	repz pusha 
  410890:	xlat   BYTE PTR ds:[ebx]
  410891:	mov    eax,ds:0xfc05478d
  410896:	cmp    eax,0x1d7f790e
  41089b:	ja     0x410883
  41089d:	das    
  41089e:	(bad)  
  41089f:	std    
  4108a0:	jmp    0x4108b6
  4108a2:	dec    dl
  4108a4:	mov    ah,dl
  4108a6:	(bad)  
  4108a7:	mov    ecx,0x7526f06d
  4108ac:	ins    DWORD PTR es:[edi],dx
  4108ad:	addr16 dec ebp
  4108af:	in     eax,0x22
  4108b1:	mov    dh,0x38
  4108b3:	and    BYTE PTR [esi+0x76b1bda0],bh
  4108b9:	cdq    
  4108ba:	sub    DWORD PTR [esi+0x5a],ebx
  4108bd:	int3   
  4108be:	div    DWORD PTR [edx+0x1291e91c]
  4108c4:	in     al,dx
  4108c5:	out    0x7f,eax
  4108c7:	xchg   esp,eax
  4108c8:	les    ebx,FWORD PTR [ebp-0x22dc5f7f]
  4108ce:	push   esp
  4108cf:	fidiv  WORD PTR [ebx-0x4c3df26]
  4108d5:	(bad)  
  4108d6:	push   esp
  4108d7:	shr    BYTE PTR [esi-0x4d],1
  4108da:	sub    eax,0xf681b6cf
  4108df:	sbb    DWORD PTR [ebx+0x7e],0xffffffd4
  4108e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108e4:	cld    
  4108e5:	arpl   WORD PTR [esi+esi*1-0x6a],si
  4108e9:	xor    BYTE PTR [esi],cl
  4108eb:	and    DWORD PTR [eax],0xf98fad65
  4108f1:	lock arpl ax,sp
  4108f4:	xchg   DWORD PTR [edi-0xd581b79],ebp
  4108fa:	sbb    al,0xc3
  4108fc:	repnz loope 0x4108dc
  4108ff:	(bad)  
  410900:	push   esp
  410901:	ss mov esp,0x7155fc5
  410907:	fadd   QWORD PTR [eax]
  410909:	rol    DWORD PTR [edx-0x22],0xe2
  41090d:	or     DWORD PTR [ebx],0xffffffbd
  410910:	in     al,dx
  410911:	and    ch,BYTE PTR [ecx]
  410913:	sub    DWORD PTR [eax-0x352566a6],ebx
  410919:	aam    0x2f
  41091b:	push   0x40
  41091d:	sub    bh,dh
  41091f:	cmp    al,0x5f
  410921:	xchg   edi,eax
  410922:	push   edi
  410923:	jne    0x410906
  410925:	retf   
  410926:	jle    0x4108ee
  410928:	mov    eax,ds:0xab405084
  41092d:	retf   0xbdcb
  410930:	scas   eax,DWORD PTR es:[edi]
  410931:	push   0x13
  410933:	fmul   st,st(6)
  410935:	in     eax,0xcc
  410937:	stos   BYTE PTR es:[edi],al
  410938:	imul   edx,DWORD PTR [esi+0x318ba9a],0xffffffd7
  41093f:	push   cs
  410940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410941:	xchg   DWORD PTR [edi+0x7f03dfb1],ebx
  410947:	adc    eax,0x3d8f6457
  41094c:	(bad)  
  41094d:	lock push esp
  41094f:	ins    DWORD PTR es:[edi],dx
  410950:	pop    ebp
  410951:	pop    esp
  410952:	sub    ebx,ebx
  410954:	jg     0x410927
  410956:	sbb    BYTE PTR [edi+0x10],0xaf
  41095a:	cmp    eax,0x9fe9637b
  41095f:	jne    0x41093f
  410961:	add    DWORD PTR [ebx],eax
  410963:	jg     0x41092b
  410965:	inc    esi
  410966:	fstp   QWORD PTR [ebp+0x462f2296]
  41096c:	dec    ebp
  41096d:	push   esp
  41096e:	push   DWORD PTR [edi]
  410970:	pop    eax
  410971:	cdq    
  410972:	fiadd  DWORD PTR [edi]
  410974:	scas   al,BYTE PTR es:[edi]
  410975:	jns    0x4109d5
  410977:	stos   BYTE PTR es:[edi],al
  410978:	repnz rcl esp,0xe7
  41097c:	push   esi
  41097d:	or     eax,0x31f3f048
  410982:	test   al,0xdc
  410984:	fdiv   QWORD PTR [ecx+eax*1+0x341af278]
  41098b:	test   eax,0x9706210e
  410990:	test   eax,0xa34a6fc5
  410995:	jbe    0x41093d
  410997:	ja     0x4109aa
  410999:	inc    ecx
  41099a:	fstp   TBYTE PTR [esi+0x15675f25]
  4109a0:	pusha  
  4109a1:	jo     0x4109b6
  4109a3:	stos   DWORD PTR es:[edi],eax
  4109a4:	shl    BYTE PTR [eax+0x35f466db],cl
  4109aa:	pop    ebx
  4109ab:	stos   DWORD PTR es:[edi],eax
  4109ac:	xor    dh,bh
  4109ae:	sbb    eax,0x347c13d8
  4109b3:	xlat   BYTE PTR cs:[ebx]
  4109b5:	and    DWORD PTR [esi+edx*2-0x55],ebx
  4109b9:	xchg   esi,eax
  4109ba:	inc    ebx
  4109bb:	dec    esi
  4109bc:	cmc    
  4109bd:	and    DWORD PTR [eax+0x38],0xc56ce5e5
  4109c4:	enter  0xc226,0xba
  4109c8:	std    
  4109c9:	sbb    al,0x26
  4109cb:	test   al,0xdc
  4109cd:	jae    0x410951
  4109cf:	cs cmp eax,0x223a79e1
  4109d5:	in     al,dx
  4109d6:	es inc ebp
  4109d8:	mov    ebp,0x838e8e05
  4109dd:	add    DWORD PTR [edi+eax*4],esp
  4109e0:	mov    ds:0xcf96d20d,al
  4109e5:	ret    0xeb29
  4109e8:	xchg   edx,eax
  4109e9:	fwait
  4109ea:	or     ebx,DWORD PTR [ebx]
  4109ec:	cmp    BYTE PTR [edx+0xbdeb0be],bh
  4109f2:	sar    DWORD PTR [edx+0x64],0x5f
  4109f6:	mul    DWORD PTR [edx+0x7ee4dc34]
  4109fc:	repnz mov ebp,0x3c43a590
  410a02:	ret    
  410a03:	mov    ebp,0xca13ff7e
  410a08:	xchg   dl,ah
  410a0a:	xchg   dh,cl
  410a0c:	pop    ss
  410a0d:	and    al,0x76
  410a0f:	(bad)  
  410a10:	stc    
  410a11:	mov    ebp,0x4fd1cf75
  410a16:	dec    eax
  410a17:	push   ebp
  410a18:	sub    al,0xf7
  410a1a:	in     eax,0x88
  410a1c:	aad    0x22
  410a1e:	xchg   ebp,eax
  410a1f:	mov    ah,0x44
  410a21:	xchg   edi,eax
  410a22:	ss mov ebp,0x1110f3c3
  410a28:	push   0x37
  410a2a:	cld    
  410a2b:	cmp    DWORD PTR [edx-0x39c0d217],ebx
  410a31:	push   ds
  410a32:	jge    0x410a98
  410a34:	xor    DWORD PTR [edx],edi
  410a36:	inc    esi
  410a37:	fild   DWORD PTR [edi]
  410a39:	test   BYTE PTR [esi],bh
  410a3b:	stos   DWORD PTR es:[edi],eax
  410a3c:	(bad)  
  410a3d:	in     al,0xa5
  410a3f:	mov    fs,esi
  410a41:	loope  0x410a32
  410a43:	retf   0xe479
  410a46:	call   0xa001:0x9d68c6de
  410a4d:	shr    dl,1
  410a4f:	sub    DWORD PTR [ecx+0xf],ecx
  410a52:	jecxz  0x410a60
  410a54:	mov    eax,DWORD PTR [ecx]
  410a56:	scas   eax,DWORD PTR es:[edi]
  410a57:	jno    0x4109fa
  410a59:	stos   BYTE PTR es:[edi],al
  410a5a:	mov    edi,0x9bca6732
  410a5f:	push   edx
  410a60:	fcmovnu st,st(1)
  410a62:	xchg   ebx,eax
  410a63:	ds push ebp
  410a65:	pop    eax
  410a66:	adc    DWORD PTR [ecx+0x11],0xf8446c3e
  410a6d:	into   
  410a6e:	mov    ecx,0xebe71ecb
  410a73:	xchg   edi,eax
  410a74:	(bad)  
  410a75:	cdq    
  410a76:	fwait
  410a77:	adc    al,0xda
  410a79:	lahf   
  410a7a:	cld    
  410a7b:	pop    ecx
  410a7c:	stc    
  410a7d:	pop    esp
  410a7e:	(bad)  
  410a7f:	pop    esp
  410a80:	hlt    
  410a81:	mov    al,0x33
  410a83:	cmc    
  410a84:	pop    eax
  410a85:	and    esi,DWORD PTR [eax]
  410a87:	test   DWORD PTR [eax+eiz*4],ecx
  410a8a:	mov    bh,0xd7
  410a8c:	mov    esi,esp
  410a8e:	pmaxub mm7,QWORD PTR [esi+0x1e]
  410a92:	and    eax,0x61dae8cf
  410a97:	ja     0x410afa
  410a99:	push   ecx
  410a9a:	mov    bl,0x4d
  410a9c:	pushf  
  410a9d:	out    dx,eax
  410a9e:	imul   ebp,DWORD PTR [eax],0x693b34c9
  410aa4:	aam    0x59
  410aa6:	mov    bl,0x44
  410aa8:	les    ebx,FWORD PTR [edx+ebp*8-0x49]
  410aac:	lock mov esi,0x1289c93e
  410ab2:	xchg   BYTE PTR [eax+edi*4+0x3b],al
  410ab6:	repz jo 0x410b0b
  410ab9:	sub    eax,ecx
  410abb:	xor    eax,ebp
  410abd:	loope  0x410a62
  410abf:	pop    edx
  410ac0:	adc    eax,0x631ec875
  410ac5:	push   cs
  410ac6:	inc    edi
  410ac7:	test   DWORD PTR [eax+eax*1],edx
  410aca:	push   ebp
  410acb:	out    0xfd,eax
  410acd:	std    
  410ace:	jp     0x410a8a
  410ad0:	push   0xf739d956
  410ad5:	lock daa 
  410ad7:	jno    0x410b12
  410ad9:	dec    ebx
  410ada:	pop    ecx
  410adb:	inc    edx
  410adc:	cwde   
  410add:	scas   eax,DWORD PTR es:[edi]
  410ade:	mov    bl,0x1e
  410ae0:	push   edx
  410ae1:	ds daa 
  410ae3:	daa    
  410ae4:	arpl   WORD PTR [esi+0x43b6a90b],dx
  410aea:	aad    0xb3
  410aec:	in     al,dx
  410aed:	mov    bl,0xcf
  410aef:	je     0x410a82
  410af1:	jne    0x410ace
  410af3:	jmp    0x410aa3
  410af5:	ja     0x410ab6
  410af7:	out    0xc0,eax
  410af9:	scas   al,BYTE PTR es:[edi]
  410afa:	xchg   ecx,eax
  410afb:	mov    bh,0x52
  410afd:	xchg   esi,eax
  410afe:	inc    ebx
  410aff:	pop    ss
  410b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b01:	hlt    
  410b02:	stc    
  410b03:	mov    ds:0x89604fd0,eax
  410b08:	and    BYTE PTR [edi],bl
  410b0a:	cmp    bl,cl
  410b0c:	cmp    eax,0x25a40337
  410b11:	add    eax,0x10e7e09f
  410b16:	je     0x410b74
  410b18:	cmp    BYTE PTR [edx],bh
  410b1a:	jnp    0x410b11
  410b1c:	xchg   DWORD PTR [ebp+ecx*2+0x19fd9a0a],esi
  410b23:	dec    esp
  410b24:	push   cs
  410b25:	xchg   edi,eax
  410b26:	mov    esi,DWORD PTR ds:0x33c19a23
  410b2c:	inc    BYTE PTR [ecx]
  410b2e:	dec    ebx
  410b2f:	shl    DWORD PTR [eax+0x33],0x2d
  410b33:	adc    dl,BYTE PTR [edx+0x15]
  410b36:	fsubrp st(0),st
  410b38:	mov    al,ds:0xf695f12c
  410b3d:	je     0x410af4
  410b3f:	cmp    eax,0x54a0b9d5
  410b44:	retf   0x419f
  410b47:	(bad)  
  410b48:	loopne 0x410b7f
  410b4a:	scas   al,BYTE PTR es:[edi]
  410b4b:	mov    esi,0x7ea7f3e9
  410b50:	ficom  WORD PTR [eax]
  410b52:	adc    edx,DWORD PTR [edx]
  410b54:	push   edx
  410b55:	cmp    eax,0x4a12cf2
  410b5a:	test   DWORD PTR [eax],ecx
  410b5c:	xor    al,0x41
  410b5e:	adc    al,0xf3
  410b60:	in     eax,dx
  410b61:	fdiv   st,st(5)
  410b63:	cmp    al,0xb4
  410b65:	popa   
  410b66:	adc    ebp,edx
  410b68:	je     0x410bbf
  410b6a:	inc    esp
  410b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b6c:	hlt    
  410b6d:	das    
  410b6e:	and    BYTE PTR [ecx+ecx*8+0x3a109f06],bh
  410b75:	and    esi,esi
  410b77:	fiadd  WORD PTR [eax]
  410b79:	int3   
  410b7a:	aaa    
  410b7b:	sub    DWORD PTR [edi+0x29d869ce],eax
  410b81:	out    dx,al
  410b82:	push   esp
  410b83:	adc    al,al
  410b85:	pop    ds
  410b86:	shl    BYTE PTR [ecx-0x6d52025a],0xc9
  410b8d:	mov    dh,0x9f
  410b8f:	test   DWORD PTR [ebp+0x2a271e58],edx
  410b95:	ja     0x410bb1
  410b97:	cmp    ah,bl
  410b99:	stos   BYTE PTR es:[edi],al
  410b9a:	std    
  410b9b:	imul   eax,eax,0x2a
  410b9e:	dec    edx
  410b9f:	imul   esi,esp,0x67
  410ba2:	movq   mm5,QWORD PTR [edi]
  410ba5:	jg     0x410b94
  410ba7:	adc    BYTE PTR [ecx-0x48],dl
  410baa:	xchg   DWORD PTR [esi-0xa5bb00d],ecx
  410bb0:	mov    ds:0x66b62ce5,al
  410bb5:	mov    ah,0x5a
  410bb7:	nop
  410bb8:	push   0xca43a534
  410bbd:	cmp    edx,ebp
  410bbf:	cdq    
  410bc0:	test   DWORD PTR [ebp+0x2e],0x784a5951
  410bc7:	xor    al,0x75
  410bc9:	ins    BYTE PTR es:[edi],dx
  410bca:	pop    eax
  410bcb:	inc    ebx
  410bcc:	mov    ebp,0x3be4c71a
  410bd1:	in     eax,0x9c
  410bd3:	cmc    
  410bd4:	mov    edi,0x791eb440
  410bd9:	out    0x2d,al
  410bdb:	enter  0x61b2,0xde
  410bdf:	aas    
  410be0:	ficomp WORD PTR [ebp+0x2c50aca1]
  410be6:	or     BYTE PTR ds:0x9bfc5dfc,cl
  410bec:	push   ecx
  410bed:	inc    ebx
  410bee:	sbb    DWORD PTR [eax+edi*1+0x4dab55af],0x7691418a
  410bf9:	rcr    esp,cl
  410bfb:	rcl    BYTE PTR [edi+ecx*1+0x4343d203],0x8d
  410c03:	jmp    0x8c9ab29c
  410c08:	mov    ds:0xd7d9869e,eax
  410c0d:	jb     0x410c75
  410c0f:	xchg   edi,eax
  410c10:	scas   eax,DWORD PTR es:[edi]
  410c11:	jns    0x410be6
  410c13:	push   es
  410c14:	mov    al,ds:0xb82f339f
  410c19:	imul   DWORD PTR [ecx-0x5af73dab]
  410c1f:	xchg   ebp,eax
  410c20:	mov    cl,0x43
  410c22:	dec    eax
  410c23:	into   
  410c24:	mov    DWORD PTR [ecx-0xa],edi
  410c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c28:	xor    bh,0xa1
  410c2b:	mov    al,0x4e
  410c2d:	out    dx,eax
  410c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c2f:	cmc    
  410c30:	sahf   
  410c31:	fs jp  0x410c10
  410c34:	add    eax,0xa26eddd9
  410c39:	and    al,dl
  410c3b:	cmc    
  410c3c:	inc    edi
  410c3d:	sahf   
  410c3e:	jmp    0x410bd6
  410c40:	outs   dx,BYTE PTR ds:[esi]
  410c41:	repz arpl WORD PTR [eax-0x3d],ax
  410c45:	cwde   
  410c46:	out    0xef,al
  410c48:	push   edx
  410c49:	pop    esi
  410c4a:	and    al,0x99
  410c4c:	push   ecx
  410c4d:	inc    esi
  410c4e:	mov    edi,0x51735504
  410c53:	js     0x410c7d
  410c55:	mov    eax,0x7038f025
  410c5b:	pop    edi
  410c5c:	sub    al,0xb7
  410c5e:	mov    al,ds:0x6b0e07c9
  410c63:	push   eax
  410c64:	push   ecx
  410c65:	or     eax,eax
  410c67:	hlt    
  410c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c69:	dec    eax
  410c6a:	pop    edi
  410c6b:	bound  edi,QWORD PTR [ebp+0x2c]
  410c6e:	cld    
  410c6f:	pop    esp
  410c70:	dec    edx
  410c71:	adc    BYTE PTR [edx],cl
  410c73:	xor    eax,0x4665e7f3
  410c78:	xchg   ebx,eax
  410c79:	sbb    eax,0x6987e684
  410c7e:	loope  0x410c49
  410c80:	jnp    0x410c4b
  410c82:	inc    edx
  410c83:	dec    ecx
  410c84:	dec    DWORD PTR [esi+ebp*1+0xe]
  410c88:	pop    esp
  410c89:	loop   0x410cd1
  410c8b:	out    dx,eax
  410c8c:	jno    0x410c8a
  410c8e:	dec    edi
  410c8f:	and    edi,DWORD PTR [eax-0x1eb1ce9a]
  410c95:	mov    esi,0x72b6ddfb
  410c9a:	fs jp  0x410c85
  410c9d:	fwait
  410c9e:	cwde   
  410c9f:	mov    WORD PTR [edx+0x452607dd],?
  410ca5:	mov    dh,0x2b
  410ca7:	mov    fs,ebp
  410ca9:	test   eax,0xcbfcb00c
  410cae:	mov    edi,0x40e5ff9c
  410cb3:	xor    esp,DWORD PTR [esi]
  410cb5:	inc    esp
  410cb6:	ja     0x410c97
  410cb8:	in     al,0x34
  410cba:	test   DWORD PTR [esi],esp
  410cbc:	js     0x410ced
  410cbe:	mov    edi,0x8dde104d
  410cc3:	sub    DWORD PTR gs:[ebx-0x2e4abe7b],esi
  410cca:	ja     0x410d1c
  410ccc:	cli    
  410ccd:	ret    
  410cce:	jmp    0x1414d75b
  410cd3:	xor    eax,0x7cf21233
  410cd8:	mov    al,0xf7
  410cda:	fcomi  st,st(5)
  410cdc:	rol    ch,cl
  410cde:	hlt    
  410cdf:	call   0x9230:0xf2ae0d3f
  410ce6:	jo     0x410cf7
  410ce8:	jb     0x410cd9
  410cea:	and    edi,edx
  410cec:	xor    ch,BYTE PTR [ebx+0x29666938]
  410cf2:	std    
  410cf3:	leave  
  410cf4:	outs   dx,DWORD PTR ds:[esi]
  410cf5:	push   eax
  410cf6:	retf   0x9286
  410cf9:	repnz adc al,0x98
  410cfc:	push   eax
  410cfd:	sub    eax,0x5027ede0
  410d02:	aad    0x4e
  410d04:	shr    DWORD PTR gs:0x8a106fc8,cl
  410d0b:	lock jae 0x410ceb
  410d0e:	push   esp
  410d0f:	outs   dx,BYTE PTR ds:[esi]
  410d10:	jmp    0x46bca1eb
  410d15:	rcr    DWORD PTR [edx+0x7ae18875],0xfe
  410d1c:	xchg   ecx,eax
  410d1d:	mov    al,bl
  410d1f:	or     bl,ah
  410d21:	jmp    FWORD PTR [esi+ebp*8+0x6a]
  410d25:	xor    BYTE PTR [edi+ecx*1],cl
  410d28:	push   0x2a0a9699
  410d2d:	mov    ebx,0x7f48981f
  410d32:	jg     0x410cef
  410d34:	mov    WORD PTR [ecx+0x21],cs
  410d37:	push   esi
  410d38:	dec    ebx
  410d39:	shr    BYTE PTR es:[edx-0x39],1
  410d3d:	inc    ebp
  410d3e:	push   esi
  410d3f:	dec    edx
  410d40:	loopne 0x410cc4
  410d42:	inc    ebp
  410d43:	cmp    dh,BYTE PTR [eax]
  410d45:	nop
  410d46:	loop   0x410d1f
  410d48:	jp     0x410d04
  410d4a:	mov    ebp,0xa195e215
  410d4f:	xorps  xmm0,xmm0
  410d52:	sub    DWORD PTR [edx-0x1c821bc7],0x37
  410d59:	popf   
  410d5a:	(bad)  
  410d5b:	jmp    0x410d62
  410d5d:	les    ebx,FWORD PTR [edi+edi*2-0x640ed8b4]
  410d64:	jnp    0x410d8b
  410d66:	scas   eax,DWORD PTR es:[edi]
  410d67:	mov    bl,0x8e
  410d69:	adc    ecx,DWORD PTR [ecx+eax*2-0x1810536e]
  410d70:	clc    
  410d71:	mov    eax,DWORD PTR [edx+0x7b2a60fa]
  410d77:	or     ch,bl
  410d79:	(bad)  
  410d7a:	popf   
  410d7b:	xchg   DWORD PTR [edi+0x72954d14],eax
  410d81:	sub    ebp,DWORD PTR [eax+0x3e76a5a7]
  410d87:	push   esi
  410d88:	add    al,0x57
  410d8a:	adc    BYTE PTR [esi+0x2e8b28ce],dl
  410d90:	push   cs
  410d91:	mov    cl,0x2f
  410d93:	cmp    BYTE PTR [esi-0x54],ch
  410d96:	mov    eax,ds:0x517fbae0
  410d9b:	aam    0x2
  410d9d:	pop    ebx
  410d9e:	popw   es
  410da0:	loop   0x410e00
  410da2:	add    BYTE PTR [ebp-0x78cc3a8c],dl
  410da8:	fldenv [edi+0x1cff733f]
  410dae:	dec    edx
  410daf:	xor    eax,0xa5003d9
  410db4:	ret    
  410db5:	jb     0x410d7a
  410db7:	cmp    DWORD PTR [edx-0x6dc33084],0xe209a289
  410dc1:	mov    ebx,0xc9c53f98
  410dc6:	repnz pop ebp
  410dc8:	or     eax,0x41a9d55
  410dcd:	leave  
  410dce:	jnp    0x410e45
  410dd0:	iret   
  410dd1:	dec    ebx
  410dd2:	dec    edi
  410dd3:	mov    al,0x5b
  410dd5:	bound  eax,QWORD PTR [eax]
  410dd7:	adc    esi,DWORD PTR [ecx-0x43]
  410dda:	(bad)  
  410ddb:	shl    ebx,1
  410ddd:	cmp    DWORD PTR [edx-0x1e],esp
  410de0:	sbb    esp,DWORD PTR [ecx+0x7e730767]
  410de6:	neg    BYTE PTR ds:0x9ae9631b
  410dec:	add    DWORD PTR ds:0xc1a827fc,0x7e
  410df3:	cmp    eax,0xed4c1fe
  410df8:	lea    esp,[edi-0x6c]
  410dfb:	aaa    
  410dfc:	push   ebp
  410dfd:	jno    0x410dd5
  410dff:	cmp    ch,BYTE PTR [edi+0x13c6f335]
  410e05:	leave  
  410e06:	aam    0x34
  410e08:	ds push es
  410e0a:	out    dx,al
  410e0b:	int3   
  410e0c:	sub    DWORD PTR [esi],esp
  410e0e:	inc    ebx
  410e0f:	mov    al,0x1d
  410e11:	call   0x948e6fa7
  410e16:	mov    WORD PTR [eax+0x64],?
  410e19:	icebp  
  410e1a:	ret    0x914c
  410e1d:	call   0x2177:0xac6f29d9
  410e24:	mov    esi,ss
  410e26:	sahf   
  410e27:	jle    0x410db8
  410e29:	push   esp
  410e2a:	ficomp DWORD PTR [ecx+0x71]
  410e2d:	xor    cl,ch
  410e2f:	jo     0x410dc9
  410e31:	inc    eax
  410e32:	(bad)  
  410e33:	pushf  
  410e34:	mov    edx,0xfeeec689
  410e39:	mov    bl,0xed
  410e3b:	sbb    DWORD PTR [eax-0x5a],0x86ce2cae
  410e42:	jmp    0xdba9bba3
  410e47:	xor    eax,0xfb4c94bb
  410e4c:	inc    esp
  410e4d:	ins    DWORD PTR es:[edi],dx
  410e4e:	mov    cl,0x9f
  410e50:	inc    DWORD PTR [ebx]
  410e52:	psubd  mm1,QWORD PTR [edx-0x18f02c12]
  410e59:	in     eax,0xfa
  410e5b:	sub    dl,BYTE PTR [edi-0x55]
  410e5e:	push   edx
  410e5f:	cld    
  410e60:	and    ebx,eax
  410e62:	std    
  410e63:	or     eax,esi
  410e65:	add    al,0x4e
  410e67:	cmovbe esp,esp
  410e6a:	lock iret 
  410e6c:	jle    0x410e2a
  410e6e:	ins    DWORD PTR es:[edi],dx
  410e6f:	push   0x3b9f4bc9
  410e74:	aam    0x1e
  410e76:	or     BYTE PTR ds:[edx+0x6c],0xf
  410e7b:	dec    ebx
  410e7c:	fwait
  410e7d:	or     edi,DWORD PTR [ebx-0x65]
  410e80:	pushf  
  410e81:	jnp    0x410eeb
  410e83:	popf   
  410e84:	jmp    0x410efb
  410e86:	fst    DWORD PTR [ecx]
  410e88:	jl     0x410ecf
  410e8a:	dec    eax
  410e8b:	push   0x50b5f56c
  410e90:	jnp    0x410eff
  410e92:	mov    ebx,0x22ff6fcb
  410e97:	div    DWORD PTR [edx-0x47f26e1]
  410e9d:	pop    ebp
  410e9e:	mov    ss,WORD PTR ds:0x20fbbafd
  410ea4:	test   eax,0x442c8297
  410ea9:	test   al,0xc0
  410eab:	push   0x4bc27ea0
  410eb0:	adc    dh,ch
  410eb2:	jb     0x410ec5
  410eb4:	inc    edx
  410eb5:	(bad)  [ebx+ecx*1+0xa46dd7]
  410ebc:	xchg   DWORD PTR [edx+0x105a33ba],ebp
  410ec2:	cld    
  410ec3:	scas   eax,DWORD PTR es:[edi]
  410ec4:	int    0x2c
  410ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec7:	ds cmp eax,0x169c7b8e
  410ecd:	les    edx,FWORD PTR [esi+0x5b2b1992]
  410ed3:	push   0x82da0d24
  410ed8:	pop    ebp
  410ed9:	es test DWORD PTR ds:[edi],ebx
  410edd:	push   cs
  410ede:	mov    ebx,0x569d7c00
  410ee3:	cmp    BYTE PTR [eax],bl
  410ee5:	push   ebp
  410ee6:	test   BYTE PTR [edi],al
  410ee8:	in     eax,0xb9
  410eea:	push   ecx
  410eeb:	lds    edi,FWORD PTR es:[ebx]
  410eee:	iret   
  410eef:	retf   
  410ef0:	sub    DWORD PTR [ebx],ecx
  410ef2:	lods   al,BYTE PTR ds:[esi]
  410ef3:	xor    al,0xe7
  410ef5:	dec    ebp
  410ef6:	adc    edi,esp
  410ef8:	cmc    
  410ef9:	lods   al,BYTE PTR ds:[esi]
  410efa:	inc    ecx
  410efb:	test   al,bl
  410efd:	std    
  410efe:	dec    edx
  410eff:	push   ds
  410f00:	lock leave 
  410f02:	out    0x3f,eax
  410f04:	fistp  DWORD PTR [esi+0x5918ff7e]
  410f0a:	pop    es
  410f0b:	jecxz  0x410f8a
  410f0d:	hlt    
  410f0e:	adc    al,0x2d
  410f10:	fistp  WORD PTR [ecx]
  410f12:	and    esp,DWORD PTR [ecx+0x2e]
  410f15:	sbb    al,0x45
  410f17:	mov    al,ds:0x6586bbef
  410f1c:	aam    0x95
  410f1e:	or     al,0x47
  410f20:	jnp    0x410eae
  410f22:	aam    0xf2
  410f24:	rcr    cl,1
  410f26:	cmp    BYTE PTR [ebx+0x76],bl
  410f29:	fwait
  410f2a:	cmp    eax,DWORD PTR [esi]
  410f2c:	jmp    0x94e2:0x44d8187b
  410f33:	mov    cl,0x81
  410f35:	cmp    ch,BYTE PTR [ecx-0x2d7fe098]
  410f3b:	shl    BYTE PTR [ecx+edi*1-0x6c],cl
  410f3f:	scas   al,BYTE PTR es:[edi]
  410f40:	imul   eax,DWORD PTR [ebp+0x36b8e9d3],0x59
  410f47:	out    dx,ax
  410f49:	setbe  ah
  410f4c:	fwait
  410f4d:	add    al,0x72
  410f4f:	sbb    BYTE PTR [ecx+0x19],al
  410f52:	or     BYTE PTR [ebp-0x6e],bh
  410f55:	pop    edi
  410f56:	dec    ecx
  410f57:	mov    DWORD PTR [edx],esi
  410f59:	ror    DWORD PTR [edx+0x3c],1
  410f5c:	std    
  410f5d:	je     0x410f2e
  410f5f:	in     eax,dx
  410f60:	mov    cs,WORD PTR [edx+0x40]
  410f63:	sbb    esi,ebx
  410f65:	sbb    ebp,esp
  410f67:	and    eax,0x3e1515ce
  410f6c:	pop    ecx
  410f6d:	sahf   
  410f6e:	pop    ss
  410f6f:	or     ch,bh
  410f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f72:	test   al,0x8a
  410f74:	xor    BYTE PTR [esp+edx*1],al
  410f77:	xchg   DWORD PTR [edi-0x33],esp
  410f7a:	xchg   esp,eax
  410f7b:	mov    dh,BYTE PTR [ebx]
  410f7d:	scas   eax,DWORD PTR es:[edi]
  410f7e:	sahf   
  410f7f:	xchg   edx,eax
  410f80:	add    al,0xb1
  410f82:	loop   0x410f16
  410f84:	scas   eax,DWORD PTR es:[edi]
  410f85:	mov    dl,0x2f
  410f87:	mov    bh,0xb4
  410f89:	pusha  
  410f8a:	cdq    
  410f8b:	call   0x13bfeb2e
  410f90:	pop    ebp
  410f91:	cwde   
  410f92:	fst    QWORD PTR [eax-0x4e]
  410f95:	xchg   ebp,eax
  410f96:	and    eax,0xcab23710
  410f9b:	xor    BYTE PTR [eax-0x80],0xa7
  410f9f:	add    al,0xa3
  410fa1:	loopne 0x410fee
  410fa3:	ss cmp esp,ebx
  410fa6:	js     0x411004
  410fa8:	or     eax,0x6be91c33
  410fad:	dec    ebp
  410fae:	inc    ebp
  410faf:	pop    ds
  410fb0:	sub    ch,BYTE PTR [eax+ebx*4+0x270ce261]
  410fb7:	icebp  
  410fb8:	push   0x51abc9dd
  410fbd:	adc    BYTE PTR [ecx],cl
  410fbf:	dec    esp
  410fc0:	cmp    esi,ecx
  410fc2:	or     BYTE PTR [ecx+0x23],bl
  410fc5:	outs   dx,DWORD PTR ds:[esi]
  410fc6:	fisttp DWORD PTR [eax+ecx*2]
  410fc9:	sub    BYTE PTR [ebx],ch
  410fcb:	nop
  410fcc:	and    DWORD PTR [ebx],esp
  410fce:	es into 
  410fd0:	push   ss
  410fd1:	loopne 0x410f5c
  410fd3:	push   es
  410fd4:	cmp    BYTE PTR [ebx-0x4b],ch
  410fd7:	out    0xd0,al
  410fd9:	not    bh
  410fdb:	(bad)  
  410fdc:	cli    
  410fdd:	dec    esp
  410fde:	aad    0xbb
  410fe0:	loope  0x411036
  410fe2:	push   ds
  410fe3:	ins    BYTE PTR es:[edi],dx
  410fe4:	mov    dl,0x95
  410fe6:	dec    edi
  410fe7:	push   edx
  410fe8:	mov    ds:0x22701357,eax
  410fed:	cdq    
  410fee:	daa    
  410fef:	push   edx
  410ff0:	and    al,0xf2
  410ff2:	mov    al,ds:0x7d1bd489
  410ff7:	int3   
  410ff8:	addr16 ret 
  410ffa:	add    al,0x21
  410ffc:	rol    dh,1
  410ffe:	xlat   BYTE PTR ds:[ebx]
  410fff:	xchg   ebp,eax
  411000:	push   es
  411001:	xor    al,0xb7
  411003:	loopne 0x41107f
  411005:	imul   ebx,ebx,0x1ab15fe3
  41100b:	popf   
  41100c:	es mov dl,ah
  41100f:	inc    esi
  411010:	sub    eax,0x4eb0554a
  411015:	add    DWORD PTR [ebx+0x36],ebp
  411018:	into   
  411019:	lahf   
  41101a:	pop    es
  41101b:	mov    eax,es:0x7750f0dd
  411021:	inc    ecx
  411022:	dec    edi
  411023:	fisttp DWORD PTR [eax]
  411025:	mov    ch,0x1f
  411027:	mov    cl,0xd
  411029:	adc    eax,0xfe899151
  41102e:	(bad)  
  41102f:	mov    ds:0xebb79adf,eax
  411034:	xchg   ebx,eax
  411035:	sbb    eax,0x2e8b8123
  41103a:	push   cs
  41103b:	test   eax,0x7cbd3bee
  411040:	push   0xa3ff54aa
  411045:	leave  
  411046:	cmp    eax,DWORD PTR [edi-0x22b0aad6]
  41104c:	jbe    0x410fe4
  41104e:	mov    ch,0xfe
  411050:	lea    ebp,[esi+0x3680e75d]
  411056:	dec    ebx
  411057:	cmc    
  411058:	mov    ebx,0x463c6b0a
  41105d:	or     edx,esi
  41105f:	jl     0x410fe9
  411061:	ficom  WORD PTR [edx]
  411063:	in     al,0xcc
  411065:	mov    bl,0xea
  411067:	cmp    BYTE PTR [esi],dh
  411069:	neg    DWORD PTR ds:0xaf88091b
  41106f:	push   cs
  411070:	adc    eax,0xa6fc69ea
  411075:	mov    dl,0xb
  411077:	and    BYTE PTR [ebx],0x1f
  41107a:	add    eax,0xad6fc0be
  41107f:	fstp   QWORD PTR [ebx+esi*2-0x3c]
  411083:	push   esi
  411084:	and    al,0x47
  411086:	scas   eax,DWORD PTR es:[edi]
  411087:	sti    
  411088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411089:	push   ebp
  41108a:	scas   al,BYTE PTR es:[edi]
  41108b:	or     ch,BYTE PTR [ecx+ecx*4+0x7be203b]
  411092:	or     al,0x3a
  411094:	cmp    DWORD PTR [esi+0x6d],eax
  411097:	xchg   ecx,eax
  411098:	inc    edi
  411099:	popa   
  41109a:	xchg   esp,eax
  41109b:	into   
  41109c:	in     eax,dx
  41109d:	ins    DWORD PTR es:[edi],dx
  41109e:	out    dx,al
  41109f:	ins    DWORD PTR es:[edi],dx
  4110a0:	xchg   BYTE PTR ds:0x81d10f40,ch
  4110a6:	inc    edi
  4110a7:	inc    ecx
  4110a8:	stc    
  4110a9:	in     al,dx
  4110aa:	mov    ebp,0x50791783
  4110af:	add    DWORD PTR [edi+0x7753257f],esp
  4110b5:	fadd   DWORD PTR [edx-0x77f59d92]
  4110bb:	jne    0x411115
  4110bd:	cmc    
  4110be:	pushf  
  4110bf:	pop    esp
  4110c0:	ror    esi,1
  4110c2:	das    
  4110c3:	adc    BYTE PTR [ebx],dh
  4110c5:	fisubr DWORD PTR [esi]
  4110c7:	or     DWORD PTR [esi],edi
  4110c9:	fsub   st(2),st
  4110cb:	addr16 dec eax
  4110cd:	cwde   
  4110ce:	int3   
  4110cf:	sahf   
  4110d0:	sahf   
  4110d1:	nop
  4110d2:	cld    
  4110d3:	mov    ds:0x116b706c,eax
  4110d8:	mov    ch,0x97
  4110da:	inc    edx
  4110db:	retf   
  4110dc:	ins    DWORD PTR es:[edi],dx
  4110dd:	xor    ebx,edx
  4110df:	and    dh,BYTE PTR [ebx+0x19]
  4110e2:	mov    dl,0x6b
  4110e4:	fmul   QWORD PTR [edi+0x2fdcef76]
  4110ea:	and    edi,esp
  4110ec:	iret   
  4110ed:	push   ecx
  4110ee:	push   DWORD PTR [ebx+0x2d]
  4110f1:	stos   DWORD PTR es:[edi],eax
  4110f2:	pop    ecx
  4110f3:	xlat   BYTE PTR ds:[ebx]
  4110f4:	pushf  
  4110f5:	bound  ebx,QWORD PTR [ebx+0x3ca6a751]
  4110fb:	fistp  WORD PTR [ebx+esi*8-0x46]
  4110ff:	es ins BYTE PTR es:[edi],dx
  411101:	(bad)  
  411102:	clc    
  411103:	or     BYTE PTR [eax],bl
  411105:	or     eax,0x180b2221
  41110a:	mov    ecx,0x62d902b8
  41110f:	jbe    0x411129
  411111:	aam    0x7a
  411113:	inc    esp
  411114:	ret    0xc2b8
  411117:	out    dx,eax
  411118:	loopne 0x41118c
  41111a:	mov    esp,0xff49b3f5
  41111f:	push   ebp
  411120:	cwde   
  411121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411122:	xor    DWORD PTR [edi],ecx
  411124:	sahf   
  411125:	adc    eax,0x4fafd69
  41112a:	stos   BYTE PTR es:[edi],al
  41112b:	jae    0x41111a
  41112d:	aam    0x70
  41112f:	dec    esp
  411130:	cli    
  411131:	xor    eax,0xcb402636
  411136:	sahf   
  411137:	or     BYTE PTR [ecx],dl
  411139:	std    
  41113a:	loop   0x41110c
  41113c:	cmp    BYTE PTR [edx-0xf678b1c],bh
  411142:	mov    edi,0xf5ce3b1b
  411147:	and    eax,0xc5ad19bf
  41114c:	pop    eax
  41114d:	out    0xfc,eax
  41114f:	sti    
  411150:	(bad)  
  411152:	push   ss
  411153:	loop   0x4111b5
  411155:	jge    0x411145
  411157:	addr16 mov cl,0x81
  41115a:	mov    ds,WORD PTR [ebp+0x450c3576]
  411160:	fnsave ss:[ebx+eax*2-0x6a]
  411165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411166:	das    
  411167:	pop    ebp
  411168:	cmc    
  411169:	adc    al,0x78
  41116b:	stc    
  41116c:	sbb    BYTE PTR [ebx],dl
  41116e:	xor    al,0x2
  411170:	out    dx,eax
  411171:	or     dh,BYTE PTR [edi-0x1b]
  411174:	rcr    ebx,cl
  411176:	ds loopne 0x41112a
  411179:	out    dx,al
  41117a:	sar    DWORD PTR [ebx-0x7a825dc2],0xc1
  411181:	add    BYTE PTR [ecx],cl
  411183:	pop    ebp
  411184:	sbb    DWORD PTR [ecx+eiz*1+0x76bcb8f4],edx
  41118b:	(bad)  
  41118c:	mov    cl,0x3e
  41118e:	(bad)
  411191:	sub    eax,0x22ee26a8
  411196:	clc    
  411197:	les    edx,FWORD PTR [edx]
  411199:	xor    ecx,eax
  41119b:	push   ds
  41119c:	mov    al,0x99
  41119e:	sub    DWORD PTR [ebx+0x36356eb6],esi
  4111a4:	jbe    0x4111c9
  4111a6:	xchg   ebp,eax
  4111a7:	mov    edx,0x5fa63e2c
  4111ac:	fs push ecx
  4111ae:	call   0x16f1:0x97f42777
  4111b5:	add    DWORD PTR [eax+0x52],ecx
  4111b8:	popa   
  4111b9:	xor    eax,0xabd6e26f
  4111be:	mov    cl,0xe4
  4111c0:	cmp    edi,DWORD PTR [ebp-0x55]
  4111c3:	inc    eax
  4111c4:	push   edi
  4111c5:	mov    dh,0x89
  4111c7:	pop    ss
  4111c8:	retf   0xc4de
  4111cb:	pop    edi
  4111cc:	fstp   TBYTE PTR [edi-0xf671a86]
  4111d2:	lea    edi,[esi-0x56]
  4111d5:	shl    ebx,0xce
  4111d8:	or     eax,DWORD PTR [eax+0x45]
  4111db:	outs   dx,DWORD PTR ds:[esi]
  4111dc:	inc    edi
  4111dd:	or     al,0xcd
  4111df:	adc    al,0x9b
  4111e1:	in     al,dx
  4111e2:	and    eax,0x4e61939e
  4111e7:	xchg   edx,eax
  4111e8:	pop    edx
  4111e9:	sbb    al,BYTE PTR [eax+edx*4+0x40aded03]
  4111f0:	inc    esi
  4111f1:	ret    
  4111f2:	xchg   ebp,eax
  4111f3:	shl    DWORD PTR [ecx],cl
  4111f5:	or     BYTE PTR [eax-0x70313e2c],bl
  4111fb:	sbb    BYTE PTR [esi+0x1d],ch
  4111fe:	in     eax,dx
  4111ff:	sbb    DWORD PTR [edx+0x11c93ee2],eax
  411205:	rcr    DWORD PTR [edi-0x12],1
  411208:	and    esi,edi
  41120a:	(bad)  
  41120b:	jl     0x41122d
  41120d:	xor    DWORD PTR [bp-0x1c],eax
  411211:	jmp    0x6d6b146a
  411216:	ret    
  411217:	daa    
  411218:	aas    
  411219:	aad    0x58
  41121b:	sbb    DWORD PTR [eax+edi*8+0x66],esi
  41121f:	xchg   edx,eax
  411220:	ret    
  411221:	sub    al,0xf6
  411223:	mov    al,0xed
  411225:	clc    
  411226:	jnp    0x4111d8
  411228:	sub    bh,BYTE PTR [ebx]
  41122a:	ret    
  41122b:	rcr    BYTE PTR [ecx],cl
  41122d:	enter  0x6bbf,0x68
  411231:	in     eax,dx
  411232:	and    esi,edi
  411234:	push   ds
  411235:	popf   
  411236:	pop    esi
  411237:	popf   
  411238:	fstp   TBYTE PTR [eax-0x70]
  41123b:	add    DWORD PTR [ebx],esi
  41123d:	sub    cl,ch
  41123f:	ror    DWORD PTR [ebp+0xa6bbf56],0xc5
  411246:	push   ebp
  411247:	stc    
  411248:	je     0x411230
  41124a:	jp     0x411206
  41124c:	shl    BYTE PTR [esi+ebx*8+0x44],1
  411250:	fimul  DWORD PTR [eax+0x2b7eb642]
  411256:	adc    BYTE PTR [esi],0x41
  411259:	mov    WORD PTR [ebx+0xf],cs
  41125c:	jne    0x41129b
  41125e:	jge    0x8201cd1c
  411264:	jnp    0x4112b9
  411266:	mov    DWORD PTR [ebx],ecx
  411268:	sti    
  411269:	(bad)  
  41126a:	jp     0x411216
  41126c:	push   ebp
  41126d:	or     ecx,DWORD PTR [ebp-0x22]
  411270:	cld    
  411271:	or     edx,ebx
  411273:	and    al,0x21
  411275:	add    cl,BYTE PTR [ecx+0x1d]
  411278:	push   ebp
  411279:	outs   dx,DWORD PTR ds:[esi]
  41127a:	sbb    DWORD PTR [edi-0x1b],0x3
  41127e:	dec    ebp
  41127f:	push   0x25
  411281:	ds jb  0x41125a
  411284:	retf   
  411285:	aad    0x2d
  411287:	or     eax,0x5b0fe660
  41128c:	mov    edx,0x6b4bc6da
  411291:	xor    ah,0x95
  411294:	aaa    
  411295:	addr16 jnp 0x4112b7
  411298:	dec    edx
  411299:	dec    eax
  41129a:	jnp    0x4112e9
  41129c:	mov    gs,WORD PTR [edx-0x39]
  41129f:	int    0xcd
  4112a1:	mov    ebx,0x1b9a85ba
  4112a6:	int3   
  4112a7:	xor    eax,0xa09baa92
  4112ac:	imul   edx,esi,0xffffff9c
  4112af:	dec    ebp
  4112b0:	sar    BYTE PTR [edx],1
  4112b2:	not    DWORD PTR [ecx+0x3033ef0a]
  4112b8:	(bad)  
  4112b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ba:	inc    ecx
  4112bb:	jae    0x411320
  4112bd:	adc    eax,0x2b5b2234
  4112c2:	adc    BYTE PTR [esi-0x5a],bl
  4112c5:	sub    cl,BYTE PTR [eax-0x22]
  4112c8:	jns    0x4112d4
  4112ca:	and    bh,BYTE PTR [edx+0x25b43d31]
  4112d0:	and    bh,BYTE PTR [edx-0xc6f5493]
  4112d6:	xchg   esp,eax
  4112d7:	addr16 pop edx
  4112d9:	addps  xmm6,xmm6
  4112dc:	dec    ecx
  4112dd:	mov    esi,DWORD PTR cs:[ecx-0x53890dda]
  4112e4:	mov    ds:0x28fd0357,eax
  4112e9:	test   DWORD PTR [edx],ebp
  4112eb:	jnp    0x4112ce
  4112ed:	(bad)  
  4112ee:	sbb    DWORD PTR [ecx+0x65],edx
  4112f1:	bound  esp,QWORD PTR [eax-0x22af8aba]
  4112f7:	sahf   
  4112f8:	mov    edi,0x8cb619b5
  4112fd:	sub    esp,ecx
  4112ff:	or     eax,DWORD PTR [edi+0x3bcec39a]
  411305:	mov    dh,0xa7
  411307:	jle    0x4112f9
  411309:	or     al,0x5a
  41130b:	stos   DWORD PTR es:[edi],eax
  41130c:	sub    al,0xce
  41130e:	mov    esp,DWORD PTR [ebp+0x521e1a2e]
  411314:	push   es
  411315:	leave  
  411316:	aas    
  411317:	int    0x9c
  411319:	inc    esp
  41131a:	mov    ebp,0xf2c8cbfc
  41131f:	add    ah,BYTE PTR [ebp+0x17]
  411322:	pop    esp
  411323:	outs   dx,DWORD PTR ds:[esi]
  411324:	jmp    0xb8570311
  411329:	outs   dx,DWORD PTR ds:[esi]
  41132a:	adc    edx,DWORD PTR [ecx-0x53971899]
  411330:	pop    es
  411331:	sbb    dh,0xa9
  411334:	ss xchg ecx,eax
  411336:	mov    gs,WORD PTR [ebp+0x1b243414]
  41133c:	out    0x8c,al
  41133e:	scas   eax,DWORD PTR es:[edi]
  41133f:	into   
  411340:	pop    ds
  411341:	mov    bh,0xc5
  411343:	rcr    DWORD PTR [eax],1
  411345:	add    BYTE PTR ds:0x7902b22e,dh
  41134b:	sbb    ah,BYTE PTR [esi+esi*8]
  41134e:	jl     0x41138a
  411350:	mov    eax,0xbbead46d
  411355:	or     eax,eax
  411357:	sti    
  411358:	clc    
  411359:	cli    
  41135a:	popa   
  41135b:	and    al,BYTE PTR [ecx-0x4b1dc104]
  411361:	out    0x60,al
  411363:	idiv   esi
  411365:	iret   
  411366:	mov    cl,BYTE PTR [ebx]
  411368:	out    0xcf,eax
  41136a:	adc    ah,bh
  41136c:	test   DWORD PTR [edi+0x20044e49],edi
  411372:	rcl    BYTE PTR ds:0x126aa736,cl
  411378:	xchg   ecx,eax
  411379:	mov    ds:0x1cbb94a9,eax
  41137e:	jmp    0x41138a
  411380:	push   ebp
  411381:	pop    ebp
  411382:	cmp    bl,ah
  411384:	and    BYTE PTR [eax-0x735c667b],dl
  41138a:	out    0x6e,al
  41138c:	loop   0x4113b0
  41138e:	(bad)  
  41138f:	imul   esi
  411391:	xor    BYTE PTR [eax-0x8],cl
  411394:	inc    ecx
  411395:	nop
  411396:	inc    ecx
  411397:	and    eax,0xa172d66e
  41139c:	xlat   BYTE PTR ds:[ebx]
  41139d:	in     eax,dx
  41139e:	or     ebx,esp
  4113a0:	mov    ecx,0x959629cb
  4113a5:	push   esp
  4113a6:	fisubr WORD PTR [edi]
  4113a8:	or     eax,0x6171c518
  4113ad:	mov    edx,0x73d4f7cf
  4113b2:	and    bl,BYTE PTR [ebp-0x3eb96bda]
  4113b8:	repz lahf 
  4113ba:	or     ah,ah
  4113bc:	mov    al,ss:0x60e37b15
  4113c2:	shl    BYTE PTR [edi+edx*2],0x18
  4113c6:	test   al,0x67
  4113c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c9:	inc    esp
  4113ca:	and    ebx,DWORD PTR ds:0x953d4f9f
  4113d0:	pop    edx
  4113d1:	or     DWORD PTR [esi-0x1d25b740],eax
  4113d7:	div    BYTE PTR [eax-0x6d374671]
  4113dd:	sub    ebx,esp
  4113df:	and    esp,edx
  4113e1:	ret    
  4113e2:	in     eax,0x45
  4113e4:	rcr    ah,1
  4113e6:	stos   DWORD PTR es:[edi],eax
  4113e7:	stos   BYTE PTR es:[edi],al
  4113e8:	mov    dl,0xec
  4113ea:	mov    al,0xc
  4113ec:	mov    al,ds:0x676a82e
  4113f1:	mov    esi,0xd43083bc
  4113f6:	shr    ebp,cl
  4113f8:	fxch   st(3)
  4113fa:	and    BYTE PTR [eax],cl
  4113fc:	test   BYTE PTR [edi-0x1d39b76f],cl
  411402:	fs sti 
  411404:	gs nop
  411406:	mov    edi,0x60af73e6
  41140b:	jl     0x411446
  41140d:	mov    bl,0x82
  41140f:	lds    esi,FWORD PTR [edi-0x63]
  411412:	mov    cl,0x17
  411414:	dec    esi
  411415:	xchg   bl,bl
  411417:	xor    al,0x91
  411419:	mov    ah,0xd9
  41141b:	not    cl
  41141d:	or     eax,0x9ef2edb6
  411422:	jae    0x411440
  411424:	mov    DWORD PTR [esi*2+0x37c55025],ecx
  41142b:	sbb    bh,BYTE PTR [esi+0x79]
  41142e:	dec    eax
  41142f:	fld    DWORD PTR [esi+ebx*8+0x52f23c13]
  411436:	aam    0x46
  411438:	xlat   BYTE PTR ds:[ebx]
  411439:	or     ch,BYTE PTR [edi]
  41143b:	push   es
  41143c:	or     BYTE PTR ss:[ebp-0x2c4d0576],0xfe
  411444:	jo     0x41141e
  411446:	cmc    
  411447:	rcl    ah,1
  411449:	fidivr WORD PTR [edi]
  41144b:	mov    db2,esi
  41144e:	and    eax,0x3c45e091
  411453:	stos   BYTE PTR es:[edi],al
  411454:	mov    BYTE PTR [ecx],bl
  411456:	pop    edi
  411457:	test   edi,edi
  411459:	fs loope 0x411441
  41145c:	lods   eax,DWORD PTR ds:[esi]
  41145d:	in     al,dx
  41145e:	or     ebp,ecx
  411460:	inc    eax
  411461:	fadd   QWORD PTR [eax-0x2fff6bcf]
  411467:	adc    esi,DWORD PTR [esi+0x3536eae2]
  41146d:	loope  0x411403
  41146f:	mov    ebp,0x35265aa3
  411474:	cmp    ch,cl
  411476:	ror    BYTE PTR [edi+0x1f857895],cl
  41147c:	ins    DWORD PTR es:[edi],dx
  41147d:	jp     0x411428
  41147f:	leave  
  411480:	push   esp
  411481:	jnp    0x411434
  411483:	sub    edi,eax
  411485:	pop    ebx
  411486:	xchg   DWORD PTR [eax+0x62dbdd67],ebx
  41148c:	cdq    
  41148d:	xor    DWORD PTR [ebx],edi
  41148f:	rcl    DWORD PTR [edx-0x2],1
  411492:	xor    eax,esp
  411494:	imul   ebp,DWORD PTR [esi],0xb58c2df6
  41149a:	cmc    
  41149b:	in     al,dx
  41149c:	pop    ecx
  41149d:	push   ebx
  41149e:	test   eax,edx
  4114a0:	add    BYTE PTR [eax-0x4a],bh
  4114a3:	xchg   esp,eax
  4114a4:	jmp    0xd240e55d
  4114a9:	mov    edx,0xef2d7597
  4114ae:	jg     0x4114b5
  4114b0:	pop    edx
  4114b1:	cmp    eax,0x68be1e09
  4114b6:	(bad)  
  4114b7:	push   ebp
  4114b8:	mov    edx,ecx
  4114ba:	mov    ch,0x4
  4114bc:	and    BYTE PTR [eax],0x3b
  4114bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c0:	xchg   ebp,eax
  4114c1:	jp     0x4114b0
  4114c3:	std    
  4114c4:	xchg   edx,eax
  4114c5:	or     al,0x8c
  4114c7:	cmp    eax,0xc942e789
  4114cc:	cmp    ebx,esp
  4114ce:	cmp    bh,BYTE PTR [edi-0x20]
  4114d1:	cmc    
  4114d2:	rol    cl,1
  4114d4:	sbb    eax,0xf95a702d
  4114d9:	push   es
  4114da:	(bad)  
  4114db:	call   0x15ff81a8
  4114e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e1:	jns    0x41149c
  4114e3:	jae    0x4114bc
  4114e5:	sub    edx,DWORD PTR [edi]
  4114e7:	jnp    0x4114d7
  4114e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ea:	inc    edx
  4114eb:	pop    eax
  4114ec:	push   ds
  4114ed:	test   al,0xcf
  4114ef:	xor    edi,DWORD PTR [ebx-0x42f2d9b0]
  4114f5:	lahf   
  4114f6:	pop    es
  4114f7:	fidiv  WORD PTR [edx-0x62c7e8da]
  4114fd:	mov    ebp,0xa5b547c3
  411502:	jmp    0xf369:0x48f9d95
  411509:	(bad)  
  41150a:	dec    ecx
  41150b:	into   
  41150c:	aad    0x27
  41150e:	and    eax,0x8da7dd7
  411513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411514:	pop    edx
  411515:	cmp    dl,bl
  411517:	enter  0x35e5,0x95
  41151b:	mov    edx,DWORD PTR [ebp+edx*2-0x9]
  41151f:	scas   al,BYTE PTR es:[edi]
  411520:	cmp    eax,0x4a7ece1
  411525:	pusha  
  411526:	popf   
  411527:	xchg   edx,eax
  411528:	outs   dx,DWORD PTR ds:[esi]
  411529:	mov    ebx,0xc644dfe0
  41152e:	jle    0x41155e
  411530:	xor    eax,0xda3fa7d5
  411535:	ins    DWORD PTR es:[edi],dx
  411536:	push   esi
  411537:	pop    ecx
  411538:	mov    edx,0x428a0247
  41153d:	bound  esp,QWORD PTR [ebx+0x4c]
  411540:	push   0x55d75b2f
  411545:	les    edx,FWORD PTR [edi]
  411547:	push   cs
  411548:	fnsave [esi]
  41154a:	cmp    cl,BYTE PTR [ecx+0x4b4a5cd]
  411550:	sbb    cl,cl
  411552:	mov    eax,0x909cecc0
  411557:	pushf  
  411558:	xor    al,0xa9
  41155a:	(bad)  
  41155b:	ret    0x6c96
  41155e:	out    dx,al
  41155f:	fldcw  WORD PTR gs:[edi+0x1c]
  411563:	daa    
  411564:	mov    dl,BYTE PTR [edi-0x7e]
  411567:	ja     0x411545
  411569:	hlt    
  41156a:	dec    ebp
  41156b:	in     al,dx
  41156c:	or     bh,BYTE PTR [ebp-0x35]
  41156f:	sub    DWORD PTR [esp+esi*2],0x2ca3a655
  411576:	imul   ah
  411578:	sbb    eax,0xacb6269
  41157d:	lea    esp,[ecx+0x40]
  411580:	nop
  411581:	out    dx,al
  411582:	pop    ds
  411583:	xlat   BYTE PTR ds:[ebx]
  411584:	test   ebx,edx
  411586:	lds    edx,FWORD PTR [ebx+edi*1-0x3240d207]
  41158d:	(bad)  
  41158e:	xor    al,0x93
  411590:	aas    
  411591:	ret    0x2875
  411594:	lods   eax,DWORD PTR ds:[esi]
  411595:	outs   dx,BYTE PTR ds:[esi]
  411596:	push   cs
  411597:	iret   
  411598:	shl    BYTE PTR [edi+0x786d4e25],cl
  41159e:	ret    
  41159f:	call   0x3bcf:0xc6aa1361
  4115a6:	or     ebx,DWORD PTR [edi-0x2fe4c367]
  4115ac:	jb     0x41161c
  4115ae:	sub    cl,BYTE PTR [edi+0x34]
  4115b1:	pushf  
  4115b2:	mov    cl,0xa8
  4115b4:	jmp    0x4af8d8de
  4115b9:	(bad)  
  4115ba:	outs   dx,BYTE PTR ds:[esi]
  4115bb:	and    DWORD PTR [ebp-0x39661b61],ebp
  4115c1:	jae    0x411564
  4115c3:	sahf   
  4115c4:	shr    edi,cl
  4115c6:	xchg   edi,eax
  4115c7:	adc    cl,BYTE PTR [ebp+0x3615906f]
  4115cd:	and    al,0xa9
  4115cf:	test   al,0x9b
  4115d1:	mov    ds:0x3e19cd72,eax
  4115d6:	pop    esi
  4115d7:	mov    eax,ds:0xfe133134
  4115dc:	aam    0xc9
  4115de:	cmp    al,0x83
  4115e0:	call   0xa2c66a02
  4115e5:	adc    cl,BYTE PTR [edi]
  4115e7:	xchg   esi,eax
  4115e8:	or     BYTE PTR [edi+0xe30c707],dl
  4115ee:	fwait
  4115ef:	out    0x5b,eax
  4115f1:	fcomp  QWORD PTR [esi]
  4115f3:	out    dx,eax
  4115f4:	dec    ebx
  4115f5:	mov    ebx,0x92d716ba
  4115fa:	jmp    0x4115f8
  4115fc:	cmp    eax,DWORD PTR [ecx+0xc]
  4115ff:	fwait
  411600:	sahf   
  411601:	sbb    DWORD PTR [ecx],edi
  411603:	scas   eax,DWORD PTR es:[edi]
  411604:	cli    
  411605:	pop    ss
  411606:	js     0x4115c8
  411608:	and    al,0xf1
  41160a:	jns    0x411654
  41160c:	mov    bl,0xa3
  41160e:	adc    ebx,DWORD PTR [edi-0x3]
  411611:	retf   0xaf4f
  411614:	(bad)  
  411615:	cmp    ecx,DWORD PTR [eax+0x418ba290]
  41161b:	dec    edx
  41161c:	mov    ecx,0x371520d0
  411621:	mov    dl,0xf5
  411623:	inc    eax
  411624:	sub    esi,esi
  411626:	mov    DWORD PTR [eax],0x3c12ea8e
  41162c:	dec    ebx
  41162d:	add    BYTE PTR [ecx+0xe],0x9
  411631:	cmp    eax,0x77b858bd
  411636:	mov    ecx,0xbd7e8eed
  41163b:	pusha  
  41163c:	js     0x411678
  41163e:	les    esi,FWORD PTR fs:[edi]
  411641:	leave  
  411642:	not    BYTE PTR [ebx+0x3aca3e39]
  411648:	retf   
  411649:	ret    
  41164a:	pop    esp
  41164b:	xor    ah,ch
  41164d:	add    ch,bl
  41164f:	ja     0x4115d6
  411651:	in     al,0xcd
  411653:	mov    al,0x39
  411655:	push   edi
  411656:	pushf  
  411657:	retf   
  411658:	xchg   esi,eax
  411659:	into   
  41165a:	ret    0xfd8c
  41165d:	add    edx,DWORD PTR [edx+0x12ed118f]
  411663:	ror    BYTE PTR [edi-0x65ce250],1
  411669:	xchg   DWORD PTR [ebx-0x36],edi
  41166c:	ins    DWORD PTR es:[edi],dx
  41166d:	and    ah,dh
  41166f:	inc    eax
  411670:	add    al,0xd2
  411672:	cmp    bl,BYTE PTR [edi-0x2d4db2b8]
  411678:	lahf   
  411679:	and    BYTE PTR [ebx-0x3d501b8b],dh
  41167f:	jp     0x411660
  411681:	ja     0x411691
  411683:	test   eax,0xb87142aa
  411688:	sbb    edx,0x47
  41168b:	gs (bad) 
  41168e:	inc    esi
  41168f:	dec    esi
  411690:	cmc    
  411691:	cdq    
  411692:	in     al,dx
  411693:	out    dx,eax
  411694:	fwait
  411695:	pop    es
  411696:	and    eax,0xceee10b9
  41169b:	in     eax,dx
  41169c:	imul   edx,DWORD PTR [ebx],0xffffffff
  41169f:	enter  0xeef2,0xf8
  4116a3:	popf   
  4116a4:	or     cl,BYTE PTR [esi+0x16]
  4116a7:	xor    eax,0x92c18e7
  4116ac:	fcmovu st,st(0)
  4116ae:	or     dl,bl
  4116b0:	int    0x7c
  4116b2:	xchg   esp,eax
  4116b3:	pusha  
  4116b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116b5:	inc    edx
  4116b6:	jbe    0x4116f6
  4116b8:	inc    esi
  4116b9:	cld    
  4116ba:	mov    ch,0x1c
  4116bc:	popa   
  4116bd:	push   esi
  4116be:	adc    DWORD PTR [eax-0x35],0x1
  4116c2:	and    al,0xee
  4116c4:	dec    ebp
  4116c5:	inc    ecx
  4116c6:	cmc    
  4116c7:	test   eax,0x6cbe1e3a
  4116cc:	or     BYTE PTR [esi],al
  4116ce:	pop    ss
  4116cf:	sub    DWORD PTR [esi],0xffffffe0
  4116d2:	les    ebp,FWORD PTR [ebx]
  4116d4:	in     eax,0x0
  4116d6:	mov    al,0x1d
  4116d8:	adc    ebp,DWORD PTR [ebp-0x177ba17f]
  4116de:	aam    0xf8
  4116e0:	xchg   edi,eax
  4116e1:	rcl    bh,0xac
  4116e4:	(bad)  
  4116e6:	xor    al,BYTE PTR [ebx]
  4116e8:	jmp    0xcf21:0x4fbc0b77
  4116ef:	and    esp,eax
  4116f1:	mov    esp,0x822bd8b4
  4116f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f7:	cmp    al,0x6d
  4116f9:	mov    dl,0x10
  4116fb:	mov    ebx,0x2f385a4b
  411700:	ins    DWORD PTR es:[edi],dx
  411701:	push   ecx
  411702:	jnp    0x411752
  411704:	mov    ebp,0x35d121b4
  411709:	add    al,0xb5
  41170b:	aaa    
  41170c:	cld    
  41170d:	adc    bl,BYTE PTR ds:0x85f3bd9c
  411713:	stos   DWORD PTR es:[edi],eax
  411714:	popa   
  411715:	in     al,0x1f
  411717:	adc    BYTE PTR [edx+0x4ff42632],0x70
  41171e:	test   eax,0x7e5721cf
  411723:	xchg   ebp,eax
  411724:	lds    ebp,FWORD PTR [esi-0x59]
  411727:	xor    BYTE PTR [esi-0x18],ah
  41172a:	sbb    eax,0xeaa53ab9
  41172f:	push   es
  411730:	xor    al,0x24
  411732:	outs   dx,DWORD PTR ds:[esi]
  411733:	int    0xa9
  411735:	mov    esi,0xca5a7e57
  41173a:	jne    0x411707
  41173c:	jmp    0x4117aa
  41173e:	and    al,0x6d
  411740:	mov    eax,ds:0xe33b593
  411745:	jle    0x41175f
  411747:	pop    ss
  411748:	ds push ss
  41174a:	stos   DWORD PTR es:[edi],eax
  41174b:	mov    eax,0xc1920752
  411750:	fsub   QWORD PTR [ebp-0xb]
  411753:	dec    esi
  411754:	psubd  mm5,mm2
  411757:	fcmovne st,st(7)
  411759:	mov    ecx,0xf8260fd0
  41175e:	and    BYTE PTR [ebp-0x7c],ah
  411761:	test   eax,0xfb6d4e74
  411766:	sub    eax,0x45a2adff
  41176b:	bound  edx,QWORD PTR [edx-0xb0eb9ba]
  411771:	xchg   edx,eax
  411772:	retf   0x9a34
  411775:	dec    esp
  411776:	rol    BYTE PTR [edi],cl
  411778:	mov    ds:0xab491276,eax
  41177d:	mov    edi,DWORD PTR [edx+0x73fb9813]
  411783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411784:	pop    ebx
  411785:	jno    0x411708
  411787:	ret    
  411788:	ins    BYTE PTR es:[edi],dx
  411789:	test   eax,0x5f36f890
  41178e:	dec    edi
  41178f:	jo     0x41179e
  411791:	test   BYTE PTR [edi],cl
  411793:	push   edi
  411794:	or     edx,DWORD PTR [esi+0x660a9479]
  41179a:	je     0x41171c
  41179c:	sbb    BYTE PTR ds:[edx],bl
  41179f:	shr    BYTE PTR [esi+esi*2+0x9321200],1
  4117a6:	in     al,dx
  4117a7:	jl     0x4117cd
  4117a9:	xchg   ebp,eax
  4117aa:	je     0x4117f0
  4117ac:	scas   eax,DWORD PTR es:[edi]
  4117ad:	nop
  4117ae:	in     al,dx
  4117af:	dec    ebx
  4117b0:	stos   DWORD PTR es:[edi],eax
  4117b1:	fwait
  4117b2:	pop    ebx
  4117b3:	adc    ebp,ebp
  4117b5:	or     al,0xee
  4117b7:	je     0x411799
  4117b9:	xor    al,0x1a
  4117bb:	nop
  4117bc:	rcr    BYTE PTR [ebp-0x22],0xb4
  4117c0:	cmp    al,0x40
  4117c2:	mov    bl,0x8
  4117c4:	shr    BYTE PTR [eax+0x7f],1
  4117c7:	rcr    BYTE PTR [eax+0x68a34c24],1
  4117cd:	aam    0xd8
  4117cf:	mov    eax,ds:0xc4d3ced1
  4117d4:	mov    eax,ds:0x6ff4fd50
  4117d9:	(bad)  
  4117db:	jmp    0x244f8506
  4117e0:	sub    DWORD PTR [ebp+0x3e],ecx
  4117e3:	std    
  4117e4:	push   esi
  4117e5:	je     0x4117d5
  4117e7:	lods   eax,DWORD PTR ds:[esi]
  4117e8:	jnp    0x41179f
  4117ea:	dec    edi
  4117eb:	sbb    cl,BYTE PTR [edi+0x33ce2b99]
  4117f1:	enter  0x4d89,0x8
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	pop    esi
  41186d:	fcom   DWORD PTR [eax+0xf]
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	and    dl,BYTE PTR [eax]
  41187a:	test   edx,0xbae43f02
  411880:	jle    0x4118cd
  411882:	or     eax,0x5ac21cc2
  411887:	or     esi,DWORD PTR [ecx-0x20]
  41188a:	in     eax,dx
  41188b:	mov    ds:0x9082dc66,al
  411890:	jb     0x411879
  411892:	fnstcw WORD PTR [edx+esi*4]
  411895:	sbb    BYTE PTR [ebx-0x14],0x26
  411899:	mov    ds:0xec2f25de,al
  41189e:	test   eax,0xa92299f6
  4118a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a4:	mov    ds:0x3c33d376,al
  4118a9:	aas    
  4118aa:	xchg   esp,eax
  4118ab:	shr    BYTE PTR [edi+0x35],1
  4118ae:	mov    ch,0x2
  4118b0:	cmc    
  4118b1:	inc    esi
  4118b2:	pop    DWORD PTR [esi-0x7f51132]
  4118b8:	pushf  
  4118b9:	int    0x0
  4118bb:	lahf   
  4118bc:	adc    DWORD PTR [edx+0x79],ebp
  4118bf:	dec    ebx
  4118c0:	sbb    eax,0xbde73d18
  4118c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c6:	call   0x744f:0x81ab7bab
  4118cd:	mov    ebp,0xee2deb85
  4118d2:	and    BYTE PTR [ecx],cl
  4118d4:	add    al,0x32
  4118d6:	mov    al,0xe6
  4118d8:	les    edi,FWORD PTR [esi-0x2]
  4118db:	mov    ebx,eax
  4118dd:	sub    edi,edx
  4118df:	sub    al,ch
  4118e1:	es pop edi
  4118e3:	jecxz  0x411883
  4118e5:	jl     0x411950
  4118e7:	mov    ebp,0x1a75df91
  4118ec:	scas   eax,DWORD PTR es:[edi]
  4118ed:	and    DWORD PTR [edi-0x6527913c],esi
  4118f3:	in     al,0x33
  4118f5:	aas    
  4118f6:	sbb    edx,edx
  4118f8:	shr    DWORD PTR [ecx],0xf3
  4118fb:	pop    es
  4118fc:	dec    esi
  4118fd:	push   edx
  4118fe:	jno    0x4118dc
  411900:	mov    ds,esp
  411902:	dec    esi
  411903:	shr    BYTE PTR [ebx-0x42],0x2d
  411907:	jmp    0x4118ba
  411909:	(bad)  
  41190a:	cmp    eax,0x49384382
  41190f:	loope  0x4118ea
  411911:	test   DWORD PTR [esi+eiz*8-0x2830b6f5],ecx
  411918:	out    dx,al
  411919:	icebp  
  41191a:	outs   dx,DWORD PTR ds:[esi]
  41191b:	ret    
  41191c:	jl     0x41195a
  41191e:	leave  
  41191f:	pop    ebp
  411920:	aad    0x1a
  411922:	into   
  411923:	les    eax,FWORD PTR [esi+ebp*8]
  411926:	popf   
  411927:	icebp  
  411928:	jno    0x41199c
  41192a:	rcl    BYTE PTR [edi-0x70],0x4b
  41192e:	in     al,dx
  41192f:	fs or  al,0x18
  411932:	inc    esp
  411933:	and    bl,cl
  411935:	and    BYTE PTR [eax],bl
  411937:	aas    
  411938:	mov    esi,0x98c3a823
  41193d:	ins    BYTE PTR es:[edi],dx
  41193e:	cmp    esp,DWORD PTR [ecx*4+0x4741bf28]
  411945:	(bad)  
  411946:	mov    edx,0xda76406
  41194b:	mov    ebx,0xb5fef5d9
  411950:	mov    bh,0xe7
  411952:	dec    ebx
  411953:	sbb    eax,0x465fd062
  411958:	pop    esi
  411959:	and    ch,BYTE PTR [ebp-0x4d75b522]
  41195f:	inc    ebp
  411960:	and    DWORD PTR [esi-0xb],ebp
  411963:	mov    al,ds:0x45de50e3
  411968:	mov    ch,0x69
  41196a:	(bad)  
  41196c:	pop    ebp
  41196d:	push   ebx
  41196e:	sub    eax,0x2276f8f2
  411973:	inc    edi
  411974:	ja     0x411929
  411976:	adc    al,0x4d
  411978:	mov    cl,0x61
  41197a:	inc    ebp
  41197b:	fld    TBYTE PTR [ecx-0x7c1522ab]
  411981:	repz push 0x19427520
  411987:	cmp    ebx,ebx
  411989:	and    ebx,DWORD PTR [edi+ebx*1]
  41198c:	out    dx,al
  41198d:	or     ecx,0xa5e97796
  411993:	xchg   esi,eax
  411994:	cwde   
  411995:	(bad)  
  411996:	(bad)  
  411998:	sub    ah,BYTE PTR [eax+0x45]
  41199b:	sti    
  41199c:	(bad)  
  41199e:	lahf   
  41199f:	mov    WORD PTR [ebp+0x7f],?
  4119a2:	inc    ebx
  4119a3:	jo     0x4119df
  4119a5:	(bad)
  4119a8:	push   ds
  4119a9:	sbb    bh,BYTE PTR [ebp-0x568deb11]
  4119af:	pop    ds
  4119b0:	cli    
  4119b1:	outs   dx,DWORD PTR ds:[esi]
  4119b2:	cmp    cl,dl
  4119b4:	push   0xed52b6f2
  4119b9:	addr16 mov eax,0x8086228f
  4119bf:	test   DWORD PTR [ebx-0x3b],edi
  4119c2:	hlt    
  4119c3:	adc    eax,0xdac926d4
  4119c8:	push   edx
  4119c9:	rcl    DWORD PTR [ebp-0xd],cl
  4119cc:	test   DWORD PTR [ebx-0x5155e14a],0x787efff4
  4119d6:	aam    0x9b
  4119d8:	fucomip st,st(2)
  4119da:	cmc    
  4119db:	fnstcw WORD PTR [ebx-0x78ccf287]
  4119e1:	icebp  
  4119e2:	sbb    al,0xfd
  4119e4:	je     0x4119ac
  4119e6:	push   cs
  4119e7:	pop    ebp
  4119e8:	ss mov eax,0xffff7c4d
  4119ee:	imul   edx,edi,0xffffffaf
  4119f1:	stos   DWORD PTR es:[edi],eax
  4119f2:	mov    al,ds:0x2ef8715e
  4119f7:	dec    esi
  4119f8:	test   eax,0x812f123f
  4119fd:	push   ebx
  4119fe:	mov    ebp,0x5a6e0bd
  411a03:	xor    dh,bl
  411a05:	pop    es
  411a06:	mov    dh,0x26
  411a08:	add    BYTE PTR [edi-0x22412eae],dl
  411a0e:	or     DWORD PTR [edi-0x10998363],edx
  411a14:	xchg   DWORD PTR [esp+edi*2+0x365276b0],eax
  411a1b:	fidiv  DWORD PTR [edx-0x7113c1e7]
  411a21:	inc    ebx
  411a22:	mov    gs,WORD PTR [ecx]
  411a24:	dec    esi
  411a25:	adc    al,0x8f
  411a27:	xchg   ebp,eax
  411a28:	mov    bl,0xdc
  411a2a:	cmp    edi,DWORD PTR [ebx-0x63]
  411a2d:	pop    eax
  411a2e:	push   0x8621fc37
  411a33:	(bad)  
  411a34:	pop    edx
  411a35:	xlat   BYTE PTR ds:[ebx]
  411a36:	sahf   
  411a37:	sub    edi,edx
  411a39:	imul   eax,DWORD PTR [edx],0x9a35e288
  411a3f:	aam    0xd
  411a41:	jb     0x4119fa
  411a43:	shl    DWORD PTR [ecx],1
  411a45:	retf   
  411a46:	dec    esi
  411a47:	inc    esp
  411a48:	cdq    
  411a49:	jo     0x411a2c
  411a4b:	test   BYTE PTR [ebx],dl
  411a4d:	dec    eax
  411a4e:	data16 or ch,ah
  411a51:	ret    
  411a52:	lods   al,BYTE PTR ds:[esi]
  411a53:	cmp    BYTE PTR [esi+0x4ba3c41d],ch
  411a59:	xchg   ebx,eax
  411a5a:	xchg   ebp,eax
  411a5b:	sti    
  411a5c:	push   ecx
  411a5d:	jecxz  0x411a0b
  411a5f:	ins    DWORD PTR es:[edi],dx
  411a60:	mul    DWORD PTR ds:[ecx+eax*2]
  411a64:	bound  esi,QWORD PTR [ebx+0x5b8cb3f3]
  411a6a:	sub    al,0x6b
  411a6c:	sbb    bh,BYTE PTR [ecx+0x4a]
  411a6f:	sub    BYTE PTR [edi],0xc3
  411a72:	rcr    BYTE PTR [esi+edi*1],0x2d
  411a76:	jnp    0x411aad
  411a78:	imul   ebx,DWORD PTR [esi+ecx*2],0xffffffad
  411a7c:	jle    0x411a98
  411a7e:	mov    ds:0x9a0d41f9,eax
  411a83:	push   eax
  411a84:	mov    ebx,0x61e72c52
  411a89:	xor    BYTE PTR [edx-0x65ed0692],dl
  411a8f:	in     eax,0x3
  411a91:	arpl   WORD PTR [esi+0x6d],bp
  411a94:	out    dx,al
  411a95:	push   ss
  411a96:	cs popf 
  411a98:	or     al,0xb9
  411a9a:	pop    ds
  411a9b:	dec    eax
  411a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9d:	inc    ecx
  411a9e:	popf   
  411a9f:	enter  0x7ba1,0xf2
  411aa3:	test   ebx,0x2f5e66e7
  411aa9:	ja     0x411a95
  411aab:	je     0x411b13
  411aad:	stos   BYTE PTR es:[edi],al
  411aae:	mov    es,ebx
  411ab0:	jmp    0x6900d7d4
  411ab5:	inc    edi
  411ab6:	pop    ebx
  411ab7:	mov    ecx,0xc9d20dc9
  411abc:	lods   al,BYTE PTR ds:[esi]
  411abd:	clc    
  411abe:	mov    ebx,0x828db28a
  411ac3:	stos   BYTE PTR es:[edi],al
  411ac4:	pop    ss
  411ac5:	xlat   BYTE PTR ds:[ebx]
  411ac6:	pusha  
  411ac7:	clc    
  411ac8:	push   ecx
  411ac9:	and    al,0x16
  411acb:	repnz std 
  411acd:	xchg   DWORD PTR [ebp-0x6b09db3e],eax
  411ad3:	push   0xffffffe2
  411ad5:	arpl   WORD PTR [edi-0x2e],dx
  411ad8:	into   
  411ad9:	leave  
  411ada:	sub    DWORD PTR [esi],0x3af1eb17
  411ae0:	je     0x411ad3
  411ae2:	jge    0x411b05
  411ae4:	and    eax,0x897737ab
  411ae9:	shl    edi,1
  411aeb:	int    0x47
  411aed:	lea    esi,[ebp+0x6a]
  411af0:	mov    ds:0x232f38ba,al
  411af5:	cmp    eax,0xdec90b60
  411afa:	sar    ecx,cl
  411afc:	cmp    BYTE PTR [ebp-0x2],dh
  411aff:	mov    fs,WORD PTR [ecx+0x3d166597]
  411b05:	in     al,dx
  411b06:	pushf  
  411b07:	sub    al,BYTE PTR [edx+0x2c]
  411b0a:	test   al,0x77
  411b0c:	loopne 0x411b40
  411b0e:	jae    0x411b5a
  411b10:	retf   0xf850
  411b13:	popa   
  411b14:	enter  0x60fe,0x2c
  411b18:	jae    0x411b17
  411b1a:	jo     0x411b4b
  411b1c:	fwait
  411b1d:	inc    ecx
  411b1e:	in     al,0x98
  411b20:	jnp    0x411b9d
  411b22:	(bad)  
  411b23:	hlt    
  411b24:	dec    esi
  411b25:	xchg   ebx,eax
  411b26:	xchg   ebp,eax
  411b27:	cwde   
  411b28:	fldcw  WORD PTR [edx]
  411b2a:	fwait
  411b2b:	call   DWORD PTR [ecx]
  411b2d:	xor    BYTE PTR [edi],al
  411b2f:	or     al,0xa7
  411b31:	mov    dl,BYTE PTR [ecx-0x7252799d]
  411b37:	jl     0x411b0c
  411b39:	les    edx,FWORD PTR [edx-0x3eac8d7f]
  411b3f:	jl     0x411b83
  411b41:	sbb    eax,0x51040568
  411b46:	add    al,0xf6
  411b48:	and    al,0x70
  411b4a:	xchg   ebx,eax
  411b4b:	add    esi,DWORD PTR [ebp-0x7c]
  411b4e:	test   eax,0xb466c445
  411b53:	mov    al,0xbd
  411b55:	dec    edi
  411b56:	add    al,0xe9
  411b58:	int    0x6b
  411b5a:	jp     0x411b2d
  411b5c:	dec    BYTE PTR ds:0x50322d7d
  411b62:	push   0x544b3047
  411b67:	sti    
  411b68:	xchg   ebx,eax
  411b69:	outs   dx,DWORD PTR fs:[esi]
  411b6b:	outs   dx,DWORD PTR ds:[esi]
  411b6c:	pushf  
  411b6d:	push   ss
  411b6e:	aas    
  411b6f:	call   0x50fd0037
  411b74:	ror    DWORD PTR [ebx-0x771815b0],1
  411b7a:	inc    esp
  411b7b:	cs lock fsubrp st(2),st
  411b7f:	scas   al,BYTE PTR es:[edi]
  411b80:	jmp    0x7736:0x36989ce7
  411b87:	add    eax,0x8d5b9892
  411b8c:	fmul   st(0),st
  411b8e:	and    al,BYTE PTR [ecx]
  411b90:	lods   al,BYTE PTR ds:[esi]
  411b91:	ins    DWORD PTR es:[edi],dx
  411b92:	fcmovbe st,st(4)
  411b94:	sbb    esi,edx
  411b96:	cmp    DWORD PTR [eax-0x73],eax
  411b99:	pop    edx
  411b9a:	xchg   si,ax
  411b9c:	sub    DWORD PTR [esi+0x5b],ebp
  411b9f:	leave  
  411ba0:	lods   al,BYTE PTR ds:[esi]
  411ba1:	(bad)  
  411ba2:	pop    ds
  411ba3:	js     0x411bcb
  411ba5:	ja     0x411b6e
  411ba7:	push   eax
  411ba8:	cmp    al,0x37
  411baa:	rcl    BYTE PTR [ecx-0x6c],1
  411bad:	push   ebp
  411bae:	fiadd  DWORD PTR [ecx+0x1e]
  411bb1:	inc    DWORD PTR ds:0xe3e466c2
  411bb7:	mov    eax,0x543dd0f2
  411bbc:	sub    bl,BYTE PTR [ecx+edx*2]
  411bbf:	fs mov dl,0x41
  411bc2:	repz mov edx,0x54f1ad6a
  411bc8:	or     BYTE PTR [eax-0x2],dl
  411bcb:	pop    ss
  411bcc:	pop    eax
  411bcd:	mov    ebx,0xe7e4f822
  411bd2:	pop    es
  411bd3:	dec    esi
  411bd4:	adc    BYTE PTR [edi+0x553e4f81],0xcb
  411bdb:	mov    bl,0x3d
  411bdd:	cmp    eax,0x60547464
  411be2:	jae    0x411c5d
  411be4:	adc    ebp,eax
  411be6:	test   BYTE PTR [ebx+edx*8-0x54],ch
  411bea:	data16 fmul DWORD PTR [ebx]
  411bed:	mov    edx,0xfe9c78be
  411bf2:	mov    ebx,DWORD PTR [ebx]
  411bf4:	cmc    
  411bf5:	and    al,0x34
  411bf7:	mov    al,ds:0x9bd0d0b0
  411bfc:	scas   eax,DWORD PTR es:[edi]
  411bfd:	fidivr WORD PTR ds:0xcfd1b6bc
  411c03:	ret    0x3ddd
  411c06:	out    0xf9,al
  411c08:	sar    BYTE PTR [ebx-0x73],1
  411c0b:	fcomp  DWORD PTR [edx+ebp*1]
  411c0e:	std    
  411c0f:	jne    0x411b94
  411c11:	mov    esp,0x4a0ffeac
  411c16:	imul   eax,edx,0x5a
  411c19:	or     al,0x4e
  411c1b:	cmp    esi,esp
  411c1d:	push   edx
  411c1e:	enter  0x629c,0x78
  411c22:	sub    al,0x35
  411c24:	sbb    al,ch
  411c26:	dec    ebx
  411c27:	sub    eax,0xe06a8f26
  411c2c:	iret   
  411c2d:	retf   
  411c2e:	and    DWORD PTR [ecx],edi
  411c30:	popa   
  411c31:	sar    BYTE PTR [edx+0x66386007],1
  411c37:	push   ecx
  411c38:	sub    ebp,ebx
  411c3a:	jecxz  0x411c99
  411c3c:	pusha  
  411c3d:	outs   dx,BYTE PTR ds:[esi]
  411c3e:	enter  0x85f0,0xb
  411c42:	imul   edi,DWORD PTR [ecx+0x75],0xffffffc5
  411c46:	les    eax,FWORD PTR [edi-0xd36ee03]
  411c4c:	sahf   
  411c4d:	punpckhdq mm3,mm4
  411c50:	push   ebp
  411c51:	loopne 0x411c08
  411c53:	hlt    
  411c54:	fwait
  411c55:	test   al,0xde
  411c57:	ins    DWORD PTR es:[edi],dx
  411c58:	mov    ds:0xf57e3ab0,al
  411c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c5e:	sbb    al,0xd2
  411c60:	fist   WORD PTR [ebp-0x19]
  411c63:	repz or al,0xaa
  411c66:	push   0x5
  411c68:	push   es
  411c69:	stos   DWORD PTR es:[edi],eax
  411c6a:	push   ecx
  411c6b:	and    al,0x41
  411c6d:	or     al,0xb4
  411c6f:	inc    ebp
  411c70:	jne    0x411cee
  411c72:	lock sbb esp,esp
  411c75:	mov    eax,0x9e9eeea9
  411c7a:	xchg   esi,eax
  411c7b:	or     al,0x96
  411c7d:	das    
  411c7e:	pop    ebp
  411c7f:	and    eax,DWORD PTR [ebx-0x45]
  411c82:	es inc esi
  411c84:	fmul   QWORD PTR [eax-0x60]
  411c87:	gs jnp 0x335683e2
  411c8e:	arpl   WORD PTR [ebx],bx
  411c90:	ds fwait
  411c92:	stos   BYTE PTR es:[edi],al
  411c93:	adc    dh,BYTE PTR [esi-0x3c593da7]
  411c99:	or     eax,0x87137782
  411c9e:	sub    BYTE PTR [ecx+0x51788517],al
  411ca4:	inc    ebx
  411ca5:	mov    ch,dh
  411ca7:	test   eax,0x2e7c7334
  411cac:	sub    esp,DWORD PTR [eax-0x50f05325]
  411cb2:	add    BYTE PTR [ebx-0x3e],dl
  411cb5:	in     al,dx
  411cb6:	pop    ebx
  411cb7:	icebp  
  411cb8:	ds std 
  411cba:	(bad)  
  411cbc:	mov    DWORD PTR [edx-0x80],edi
  411cbf:	movq   mm0,mm5
  411cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc3:	out    0x84,eax
  411cc5:	mov    eax,ds:0xd83098bf
  411cca:	and    BYTE PTR ds:0xb0de5042,ch
  411cd0:	or     al,0x39
  411cd2:	retf   0x3ca6
  411cd5:	je     0x411d08
  411cd7:	xlat   BYTE PTR ds:[ebx]
  411cd8:	xor    BYTE PTR [eax+0x38e3c1a],ah
  411cde:	mov    al,ds:0x34edbd0d
  411ce3:	pop    esp
  411ce4:	jnp    0x411cdb
  411ce6:	lods   al,BYTE PTR ds:[esi]
  411ce7:	xor    al,0xb6
  411ce9:	xchg   edi,eax
  411cea:	pop    edi
  411ceb:	mov    al,ds:0xb449fc70
  411cf0:	(bad)  [esp]
  411cf3:	mov    ebp,DWORD PTR [edi]
  411cf5:	clc    
  411cf6:	call   0x57f6:0x3452bb0
  411cfd:	(bad)  
  411cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cff:	cmc    
  411d00:	dec    ebp
  411d01:	xor    eax,0xf6a19ea3
  411d06:	ret    
  411d07:	mov    edx,0x9fe4ba02
  411d0c:	adc    al,0x68
  411d0e:	jo     0x411ca4
  411d10:	repz fld QWORD PTR [edi+ecx*2-0x616608ee]
  411d18:	add    eax,edx
  411d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1b:	push   eax
  411d1c:	arpl   WORD PTR [edi],ax
  411d1e:	adc    al,0xa6
  411d20:	and    eax,0x9d9fd89f
  411d25:	sub    eax,0xefe28c26
  411d2a:	lock daa 
  411d2c:	pusha  
  411d2d:	push   0x4c2e663d
  411d32:	add    eax,0xa7b02f2b
  411d37:	icebp  
  411d38:	add    esp,DWORD PTR ds:0x712dd841
  411d3e:	jge    0x411dbd
  411d40:	sbb    al,BYTE PTR [ebx]
  411d42:	mov    dl,0x5a
  411d44:	jmp    0x411ccb
  411d46:	mov    ds:0x8dbd5f76,eax
  411d4b:	sbb    ch,BYTE PTR [ebx-0x30188b21]
  411d51:	cld    
  411d52:	mov    edx,0xf9265f40
  411d57:	loopne 0x411ce5
  411d59:	pushf  
  411d5a:	inc    esp
  411d5b:	ins    DWORD PTR es:[edi],dx
  411d5c:	(bad)  
  411d5d:	out    0xbd,eax
  411d5f:	loopne 0x411d7a
  411d61:	mov    ?,WORD PTR [edi]
  411d63:	or     edx,ecx
  411d65:	ret    
  411d66:	popf   
  411d67:	fucomip st,st(0)
  411d69:	je     0x411d71
  411d6b:	hlt    
  411d6c:	call   0x299d:0x5be68998
  411d73:	xchg   DWORD PTR [eax],eax
  411d75:	pop    edi
  411d76:	out    0xb7,eax
  411d78:	rcr    DWORD PTR [eax-0x73a71fc3],1
  411d7e:	xchg   edi,eax
  411d7f:	aas    
  411d80:	add    al,0x37
  411d82:	jno    0x411d32
  411d84:	or     esi,DWORD PTR [edi+0x13]
  411d87:	pop    edi
  411d88:	mov    bh,0xea
  411d8a:	stos   DWORD PTR es:[edi],eax
  411d8b:	(bad)  
  411d8c:	jns    0x411df9
  411d8e:	jecxz  0x411e04
  411d90:	xchg   edi,eax
  411d91:	aaa    
  411d92:	jbe    0x411dcc
  411d94:	push   cs
  411d95:	jge    0x411dcd
  411d97:	inc    ebx
  411d98:	std    
  411d99:	push   ds
  411d9a:	add    edx,DWORD PTR [eax]
  411d9c:	ds lock js 0x411e06
  411da0:	cmc    
  411da1:	sti    
  411da2:	mov    ds:0x59a1c787,eax
  411da7:	pop    ebp
  411da8:	jno    0x411df8
  411daa:	push   DWORD PTR [ebp-0x1f]
  411dad:	xchg   DWORD PTR [edi+0x7f],esp
  411db0:	int    0x98
  411db2:	stc    
  411db3:	jecxz  0x411df7
  411db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db6:	mov    eax,ds:0xbc2084b8
  411dbb:	not    BYTE PTR ds:0xfd7b148b
  411dc1:	mov    ebp,0xe110ff4a
  411dc6:	pop    esi
  411dc7:	inc    ebx
  411dc8:	xor    DWORD PTR ds:0x1442ec59,edi
  411dce:	lahf   
  411dcf:	adc    al,0x8b
  411dd1:	aas    
  411dd2:	js     0x411e43
  411dd4:	mov    BYTE PTR [ebx+0x0],ch
  411dd7:	inc    ecx
  411dd8:	cli    
  411dd9:	xchg   ecx,ebx
  411ddb:	cmp    bh,ch
  411ddd:	push   ebp
  411dde:	xchg   esi,eax
  411ddf:	adc    ecx,DWORD PTR [ebx-0x10d3dece]
  411de5:	jmp    0x333e:0x97ba161e
  411dec:	daa    
  411ded:	pop    ebx
  411dee:	sub    esp,DWORD PTR [ebx-0x3da9a65b]
  411df4:	test   al,0x62
  411df6:	repnz adc esp,eax
  411df9:	mov    edx,0xc3911ad3
  411dfe:	sub    esp,DWORD PTR [eax-0x55]
  411e01:	out    dx,eax
  411e02:	stc    
  411e03:	xchg   esp,eax
  411e04:	cdq    
  411e05:	jle    0x411dbb
  411e07:	dec    esi
  411e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e09:	xchg   BYTE PTR [edx],ah
  411e0b:	in     eax,0x65
  411e0d:	add    al,0x91
  411e0f:	jae    0x411daf
  411e11:	jmp    0x2c0e:0x69ca32cf
  411e18:	adc    cl,BYTE PTR [ebx-0x51195d5f]
  411e1e:	jne    0x411db8
  411e20:	sbb    al,0xa8
  411e22:	ins    BYTE PTR es:[edi],dx
  411e23:	lods   eax,DWORD PTR ds:[esi]
  411e24:	fistp  WORD PTR [ebp+0x6e]
  411e27:	xlat   BYTE PTR ds:[ebx]
  411e28:	mov    eax,edx
  411e2a:	push   0x4b276b65
  411e2f:	or     DWORD PTR [esi+0x57a73e55],0x356c517d
  411e39:	mov    ebp,0xeda2e2cd
  411e3e:	(bad)  
  411e3f:	xchg   edx,eax
  411e40:	adc    ah,ah
  411e42:	aas    
  411e43:	repnz mov ecx,0x7d99e2d8
  411e49:	into   
  411e4a:	(bad)  
  411e4b:	and    eax,0xdcfcbba2
  411e50:	scas   al,BYTE PTR es:[edi]
  411e51:	push   ebx
  411e52:	int3   
  411e53:	ret    0x6b12
  411e56:	pop    ebx
  411e57:	imul   esi,DWORD PTR [eax],0x54
  411e5a:	push   ebx
  411e5b:	dec    edx
  411e5c:	pop    ebp
  411e5d:	jmp    0x411e8a
  411e5f:	cmp    ch,dl
  411e61:	inc    ecx
  411e62:	inc    ebx
  411e63:	sbb    ecx,DWORD PTR [ecx+0x27cb817d]
  411e69:	jno    0x411ed6
  411e6b:	xchg   esp,eax
  411e6c:	pop    ebx
  411e6d:	call   DWORD PTR [ebp+0x4b6abb4c]
  411e73:	or     dl,BYTE PTR [ebp+0x63]
  411e76:	mov    BYTE PTR [edx],dh
  411e78:	mov    ch,0xbb
  411e7a:	push   ebp
  411e7b:	lods   al,BYTE PTR ds:[esi]
  411e7c:	mov    ?,ebp
  411e7e:	mul    DWORD PTR [esi-0x5c]
  411e81:	in     al,dx
  411e82:	lods   eax,DWORD PTR ds:[esi]
  411e83:	adc    eax,0xc3d7c994
  411e88:	mov    BYTE PTR [edx],al
  411e8a:	add    DWORD PTR [eax-0x25],esi
  411e8d:	xchg   edi,eax
  411e8e:	bound  eax,QWORD PTR [ebx+0x6942f28c]
  411e94:	or     ebx,DWORD PTR [ecx+eiz*1+0x16]
  411e98:	xchg   ecx,eax
  411e99:	or     al,0xbd
  411e9b:	test   eax,0xe7ecb07
  411ea0:	push   es
  411ea1:	jbe    0x411e8e
  411ea3:	inc    esi
  411ea4:	div    DWORD PTR [edx+0x1ad078f1]
  411eaa:	aam    0x40
  411eac:	adc    DWORD PTR [edi],esp
  411eae:	loope  0x411ebd
  411eb0:	jne    0x411f31
  411eb2:	mov    eax,ds:0xd52f47c2
  411eb7:	sbb    ch,cl
  411eb9:	ss and al,0x43
  411ebc:	mov    BYTE PTR [esi+0x64a67db5],ch
  411ec2:	ret    0xa769
  411ec5:	mov    bl,0x77
  411ec7:	mov    al,ds:0x26181984
  411ecc:	scas   al,BYTE PTR es:[edi]
  411ecd:	out    0xb4,al
  411ecf:	cmp    eax,0x7d62a7e8
  411ed4:	add    ebp,DWORD PTR [edi-0x7a26e9c3]
  411eda:	call   0xa0791e6
  411edf:	sbb    eax,0x9b68e72f
  411ee4:	nop
  411ee5:	jg     0x411f10
  411ee7:	aam    0x35
  411ee9:	xor    al,0x4d
  411eeb:	push   0xfec64231
  411ef0:	mov    ebx,0xa89f27f7
  411ef5:	imul   BYTE PTR [ebp+ebx*1-0x6118ae3]
  411efc:	int3   
  411efd:	inc    esp
  411efe:	loopne 0x411f73
  411f00:	loopne 0x411eb6
  411f02:	dec    edx
  411f03:	sbb    DWORD PTR ds:0x47a05629,0xd42f5dd4
  411f0d:	inc    BYTE PTR ds:0x8e902683
  411f13:	dec    ecx
  411f14:	xchg   esp,eax
  411f15:	mov    edi,0xf5e91526
  411f1a:	xor    esi,DWORD PTR [ebp-0x2fbba0ce]
  411f20:	sbb    BYTE PTR es:[edi-0x7b7f847c],cl
  411f27:	rcl    esp,1
  411f29:	(bad)  
  411f2a:	mov    bh,0xa9
  411f2c:	mov    ch,ah
  411f2e:	xchg   ebx,eax
  411f2f:	mov    bh,0xf5
  411f31:	ins    BYTE PTR es:[edi],dx
  411f32:	mov    dl,BYTE PTR [ecx-0x261c16af]
  411f38:	mov    ebx,ebp
  411f3a:	lods   al,BYTE PTR ds:[esi]
  411f3b:	cli    
  411f3c:	cmp    esp,DWORD PTR [ecx+0x6539c716]
  411f42:	std    
  411f43:	sti    
  411f44:	inc    ecx
  411f45:	arpl   WORD PTR ds:0x4adeefb,cx
  411f4b:	fyl2xp1 
  411f4d:	cmp    eax,0xc1ec12cc
  411f52:	jmp    FWORD PTR [ecx-0xb]
  411f55:	cld    
  411f56:	mov    esp,gs
  411f58:	rcr    DWORD PTR [eax+0x4b],cl
  411f5b:	cmp    esp,DWORD PTR [edi-0x64a211cd]
  411f61:	push   esp
  411f62:	cdq    
  411f63:	sti    
  411f64:	(bad)  
  411f65:	mul    DWORD PTR ds:0xf7bedcf0
  411f6b:	xchg   DWORD PTR [di+0x1a51],ecx
  411f70:	jp     0x411fda
  411f72:	jae    0x411f02
  411f74:	icebp  
  411f75:	in     eax,0x61
  411f77:	xor    edx,DWORD PTR [esi]
  411f79:	jno    0x411f42
  411f7b:	popa   
  411f7c:	push   edx
  411f7d:	into   
  411f7e:	sub    eax,0xf1636d0c
  411f83:	into   
  411f84:	loope  0x411fc8
  411f86:	pop    ebp
  411f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f88:	scas   al,BYTE PTR es:[edi]
  411f89:	fadd   DWORD PTR [edx]
  411f8b:	shl    DWORD PTR [ebp-0x10],0x85
  411f8f:	out    dx,al
  411f90:	inc    eax
  411f91:	std    
  411f92:	or     BYTE PTR [esi],dh
  411f94:	lea    edi,[edi-0x497775d8]
  411f9a:	retf   
  411f9b:	loope  0x411f32
  411f9d:	jno    0x411f7c
  411f9f:	sub    edi,DWORD PTR [eax-0x73]
  411fa2:	and    DWORD PTR [esi-0x60],ecx
  411fa5:	lock inc ebx
  411fa7:	lea    edi,[ebp+0x4d]
  411faa:	sub    al,0x42
  411fac:	dec    eax
  411fad:	fimul  DWORD PTR [ebp-0x75]
  411fb0:	xacquire xchg BYTE PTR fs:[esi+0x1d],dl
  411fb5:	adc    edx,DWORD PTR [ebx+ecx*4-0x5a064f76]
  411fbc:	test   al,0x98
  411fbe:	fwait
  411fbf:	pop    ss
  411fc0:	fwait
  411fc1:	out    dx,al
  411fc2:	icebp  
  411fc3:	or     al,0x5d
  411fc5:	or     eax,0x7e482bd5
  411fca:	or     ebp,DWORD PTR [esi-0x29b208be]
  411fd0:	and    al,0x6e
  411fd2:	ins    BYTE PTR es:[edi],dx
  411fd3:	lea    esi,[edi]
  411fd5:	jae    0x411f98
  411fd7:	mov    eax,DWORD PTR [ecx]
  411fd9:	push   es
  411fda:	sbb    DWORD PTR [edi],edi
  411fdc:	pop    esp
  411fdd:	lock push 0xfffffffd
  411fe0:	dec    ebx
  411fe1:	inc    eax
  411fe2:	(bad)  
  411fe3:	std    
  411fe4:	sar    BYTE PTR [edx+0x69aec19a],cl
  411fea:	inc    esp
  411feb:	aaa    
  411fec:	and    ebp,DWORD PTR [edi-0x18b0df0e]
  411ff2:	push   0x2ea15c7d
  411ff7:	xor    DWORD PTR ds:0x83747ef0,0x687ec9be
  412001:	in     al,0xf6
  412003:	(bad)  
  412005:	sbb    BYTE PTR [ebx+0x2d],ch
  412008:	push   ebp
  412009:	lock dec esi
  41200b:	lods   eax,DWORD PTR ds:[esi]
  41200c:	test   al,cl
  41200e:	xlat   BYTE PTR ds:[ebx]
  41200f:	mov    esp,0xc97f7b51
  412014:	xchg   BYTE PTR [ebx+eiz*1],ch
  412017:	lea    edx,[esi-0x5f]
  41201a:	sbb    BYTE PTR [eax-0x27],bl
  41201d:	xchg   esp,eax
  41201e:	push   eax
  41201f:	add    al,0x16
  412021:	xchg   ecx,eax
  412022:	pop    edi
  412023:	daa    
  412024:	popa   
  412025:	arpl   sp,di
  412027:	inc    esp
  412028:	cli    
  412029:	out    dx,eax
  41202a:	pop    ss
  41202b:	mov    WORD PTR [eax-0x5909dc49],?
  412031:	ret    
  412032:	push   0xf1332ca5
  412037:	sub    BYTE PTR [eax+0x56],0x7c
  41203b:	mov    ds:0x194f970b,eax
  412040:	(bad)  
  412041:	scas   ax,WORD PTR es:[edi]
  412043:	ror    ah,cl
  412045:	add    al,0x90
  412047:	mul    DWORD PTR [edx]
  412049:	sbb    BYTE PTR [edx-0x18],al
  41204c:	and    bl,ah
  41204e:	jns    0x412015
  412050:	mov    DWORD PTR [ecx+0x2],edi
  412053:	popf   
  412054:	je     0x4120c4
  412056:	nop
  412057:	push   edx
  412058:	or     eax,0xd12ced2a
  41205d:	lods   eax,DWORD PTR ds:[esi]
  41205e:	jbe    0x4120da
  412060:	shl    ecx,cl
  412062:	xchg   ecx,eax
  412063:	push   esi
  412064:	aam    0x8f
  412066:	or     DWORD PTR [eax-0x1f],ebp
  412069:	fild   QWORD PTR [ebx]
  41206b:	nop
  41206c:	nop
  41206d:	js     0x41201c
  41206f:	add    edi,esp
  412071:	fdivrp st(2),st
  412073:	fistp  DWORD PTR [edx+0x37d7e58b]
  412079:	inc    esi
  41207a:	push   ds
  41207b:	adc    ecx,ebx
  41207d:	dec    esp
  41207e:	pop    es
  41207f:	sub    ebx,eax
  412081:	dec    ecx
  412082:	out    0xec,al
  412084:	sub    ebx,esi
  412086:	mov    ch,0xca
  412088:	add    eax,0x114e70cf
  41208d:	(bad)  
  41208e:	out    dx,al
  41208f:	inc    edx
  412090:	int    0xe0
  412092:	jg     0x4120d4
  412094:	aad    0xff
  412096:	ja     0x412050
  412098:	sbb    DWORD PTR [eax-0x6d],eax
  41209b:	push   ebp
  41209c:	mov    dl,0xd5
  41209e:	adc    dl,dl
  4120a0:	add    BYTE PTR [eax-0x66],bl
  4120a3:	sbb    bl,ah
  4120a5:	jno    0x412070
  4120a7:	or     al,0xd0
  4120a9:	jge    0x41202b
  4120ab:	hlt    
  4120ac:	in     eax,0x7b
  4120ae:	cmp    DWORD PTR [edi],esi
  4120b0:	loop   0x4120eb
  4120b2:	fnstenv ds:0x87ea0c84
  4120b8:	or     BYTE PTR [ebp+0x70cc9fae],cl
  4120be:	add    BYTE PTR [ecx+0x19],al
  4120c1:	out    dx,eax
  4120c2:	js     0x412114
  4120c4:	retf   
  4120c5:	(bad)  
  4120c6:	daa    
  4120c7:	cli    
  4120c8:	nop
  4120c9:	scas   al,BYTE PTR es:[edi]
  4120ca:	pusha  
  4120cb:	ja     0x412122
  4120cd:	ins    BYTE PTR es:[edi],dx
  4120ce:	imul   eax,edi,0x51ae3494
  4120d4:	arpl   WORD PTR [eax+0x51],dx
  4120d7:	push   ds
  4120d8:	mov    ch,BYTE PTR [ebx+0x14]
  4120db:	in     eax,0x54
  4120dd:	scas   al,BYTE PTR es:[edi]
  4120de:	movaps XMMWORD PTR [ebp-0xe8baa4e],xmm7
  4120e5:	push   ebx
  4120e6:	imul   ebp,DWORD PTR ds:0x6531e7fc,0xcecf351d
  4120f0:	shl    ecx,1
  4120f2:	ins    DWORD PTR es:[edi],dx
  4120f3:	add    ah,BYTE PTR [ebx]
  4120f5:	dec    eax
  4120f6:	aad    0x3c
  4120f8:	fmul   st(7),st
  4120fa:	int3   
  4120fb:	push   ebp
  4120fc:	les    eax,FWORD PTR gs:0x98c90184
  412103:	mov    WORD PTR [edx-0x55763ff2],ss
  412109:	pop    esi
  41210a:	aam    0x78
  41210c:	fiadd  WORD PTR [edi]
  41210e:	stos   BYTE PTR es:[edi],al
  41210f:	xchg   ebp,eax
  412110:	std    
  412111:	jb     0x41211a
  412113:	dec    ebp
  412114:	sub    esi,DWORD PTR [edi-0x2a]
  412117:	adc    al,0xbf
  412119:	int3   
  41211a:	push   ds
  41211b:	mov    dl,0xc4
  41211d:	mov    al,ds:0xbf0a7355
  412122:	imul   edx,ecx,0x23935fb8
  412128:	dec    ebp
  412129:	ja     0x412129
  41212b:	test   BYTE PTR [si],ah
  41212e:	add    eax,DWORD PTR [esi-0x88885f1]
  412134:	sti    
  412135:	fdiv   QWORD PTR [esi]
  412137:	je     0x41210f
  412139:	or     al,0x2d
  41213b:	sahf   
  41213c:	(bad)  
  41213e:	add    ah,BYTE PTR [esi-0x16]
  412141:	jge    0x41215b
  412143:	and    eax,0x6c9ce17b
  412148:	outs   dx,BYTE PTR ds:[esi]
  412149:	pusha  
  41214a:	enter  0x231c,0x92
  41214e:	clc    
  41214f:	jmp    0x4120d7
  412151:	ror    DWORD PTR [ecx+0x1a],cl
  412154:	sbb    edi,DWORD PTR [ecx+0x71]
  412157:	je     0x4121b1
  412159:	inc    ecx
  41215a:	shr    ah,cl
  41215c:	jge    0x412184
  41215e:	sub    ch,BYTE PTR [esi-0x71170462]
  412164:	pop    ecx
  412165:	mov    ch,0x8
  412167:	idiv   BYTE PTR [esi+0x722f67b0]
  41216d:	outs   dx,DWORD PTR ds:[esi]
  41216e:	arpl   bx,bp
  412170:	jmp    0x5090555
  412175:	dec    esi
  412176:	inc    edx
  412177:	or     ch,BYTE PTR [esi]
  412179:	(bad)
  41217c:	jae    0x412187
  41217e:	push   ss
  41217f:	sbb    BYTE PTR [edi],0xa1
  412182:	aad    0x4e
  412184:	jnp    0x4121bc
  412186:	dec    ecx
  412187:	fiadd  DWORD PTR [edx+eiz*8]
  41218a:	and    bl,ah
  41218c:	mov    BYTE PTR [esi+0x7c0b3e98],ch
  412192:	gs dec eax
  412194:	sub    BYTE PTR [edi],0x50
  412197:	cmp    al,0x26
  412199:	adc    ecx,DWORD PTR [ebp+0x39]
  41219c:	scas   eax,DWORD PTR es:[edi]
  41219d:	ds push edx
  41219f:	jae    0x412212
  4121a1:	rcr    DWORD PTR [esp+edi*4],1
  4121a4:	sbb    eax,0xa3cfd448
  4121a9:	icebp  
  4121aa:	popa   
  4121ab:	test   al,0xcd
  4121ad:	jmp    0xc659383
  4121b2:	into   
  4121b3:	sbb    DWORD PTR [ebx+0x30497415],edi
  4121b9:	add    al,bh
  4121bb:	sub    ah,BYTE PTR [edi+0x62]
  4121be:	sti    
  4121bf:	pop    esi
  4121c0:	int    0x5
  4121c2:	(bad)  
  4121c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c5:	push   ss
  4121c6:	jns    0x41214c
  4121c8:	mov    al,0x9f
  4121ca:	mov    bh,0xd4
  4121cc:	lock pop ecx
  4121ce:	dec    ecx
  4121cf:	push   eax
  4121d0:	sub    dh,BYTE PTR [edx+0x3b]
  4121d3:	call   0xb37873e5
  4121d8:	mov    al,ds:0x3f9acfb9
  4121dd:	(bad)  
  4121de:	xchg   edx,eax
  4121df:	in     eax,0x95
  4121e1:	mov    edi,0xa4d48882
  4121e6:	enter  0x4fd6,0x3d
  4121ea:	ins    DWORD PTR es:[edi],dx
  4121eb:	and    esi,DWORD PTR [ebx]
  4121ed:	repz mov al,ds:0xacf08fb1
  4121f3:	addr16 cmc 
  4121f5:	rol    DWORD PTR [ebp-0x61a265d9],cl
  4121fb:	pushf  
  4121fc:	mov    edx,0xce36335c
  412201:	inc    eax
  412202:	pop    esp
  412203:	mov    bh,BYTE PTR [ecx+ebx*4-0x38]
  412207:	ins    DWORD PTR es:[edi],dx
  412208:	fiadd  WORD PTR [ecx+0x77]
  41220b:	xchg   edx,eax
  41220c:	(bad)  [edx]
  41220e:	sub    DWORD PTR [eax],edi
  412210:	sub    BYTE PTR [ebx],cl
  412212:	and    BYTE PTR [ebx+0x731b4316],cl
  412218:	adc    ebp,DWORD PTR [esi+0x4afa9ab]
  41221e:	mov    esi,0x7005dab7
  412223:	inc    ecx
  412224:	adc    al,0x46
  412226:	clc    
  412227:	pop    ebp
  412228:	adc    DWORD PTR ds:0xd8d1383,esi
  41222e:	dec    edi
  41222f:	cwde   
  412230:	jp     0x4121e6
  412232:	in     al,dx
  412233:	sahf   
  412234:	call   0xed975c64
  412239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41223a:	js     0xc2e3f5e9
  412240:	pusha  
  412241:	ss ret 0x8dd9
  412245:	xchg   esi,eax
  412246:	xchg   ebp,eax
  412247:	fimul  WORD PTR [esi]
  412249:	dec    edx
  41224a:	pop    eax
  41224b:	int    0x6f
  41224d:	aad    0x2d
  41224f:	sub    al,0x64
  412251:	mov    bl,cl
  412253:	das    
  412254:	dec    edx
  412255:	adc    edi,esp
  412257:	aad    0x62
  412259:	sub    dh,0x19
  41225c:	add    eax,DWORD PTR [ebp+ebx*8-0x55ba6233]
  412263:	xchg   DWORD PTR [ecx+0x5c],ebx
  412266:	inc    edi
  412267:	pop    ecx
  412268:	pop    es
  412269:	sahf   
  41226a:	loop   0x4122c0
  41226c:	mov    edx,0xe64e0af8
  412271:	les    edi,FWORD PTR [edi]
  412273:	out    dx,eax
  412274:	xor    DWORD PTR [ebp+0x40],esp
  412277:	lahf   
  412278:	mov    esp,cs
  41227a:	sub    dh,BYTE PTR [edi]
  41227c:	xchg   ebp,eax
  41227d:	jge    0x412288
  41227f:	jmp    0x35f4:0xe32ee4da
  412286:	outs   dx,BYTE PTR ds:[esi]
  412287:	into   
  412288:	fcomp  DWORD PTR [edx-0x5fb91705]
  41228e:	out    dx,eax
  41228f:	retf   
  412290:	push   edx
  412291:	inc    eax
  412292:	lods   al,BYTE PTR ds:[esi]
  412293:	cmp    DWORD PTR es:[ebx-0x11],eax
  412297:	(bad)  
  412298:	fbstp  TBYTE PTR [ecx]
  41229a:	pop    ds
  41229b:	out    0x2,eax
  41229d:	adc    dh,BYTE PTR [esi+eax*8+0x68]
  4122a1:	mov    edi,0xd2366308
  4122a6:	xchg   ebp,eax
  4122a7:	push   esp
  4122a8:	inc    ecx
  4122a9:	lods   eax,DWORD PTR ds:[esi]
  4122aa:	cwde   
  4122ab:	jne    0x412248
  4122ad:	enter  0xfe9b,0x1f
  4122b1:	adc    al,bl
  4122b3:	push   ss
  4122b4:	jge    0x4122cc
  4122b6:	sbb    edx,DWORD PTR [esi-0x60c52732]
  4122bc:	aad    0x23
  4122be:	mov    BYTE PTR ss:[eax],ah
  4122c1:	mov    ch,0x98
  4122c3:	aam    0xc1
  4122c5:	or     eax,0x58d03a78
  4122ca:	into   
  4122cb:	pop    edi
  4122cc:	cwde   
  4122cd:	out    0xa8,al
  4122cf:	cmp    BYTE PTR [esi],dh
  4122d1:	sbb    dh,BYTE PTR [ecx+0x5e]
  4122d4:	lea    esp,[edi+eax*1]
  4122d7:	dec    eax
  4122d8:	rcl    BYTE PTR ds:0xe8280fee,cl
  4122de:	inc    edi
  4122df:	sbb    ecx,DWORD PTR [ebp+0x67]
  4122e2:	inc    ebp
  4122e3:	cmp    eax,DWORD PTR [ebp+0x7ae5c55c]
  4122e9:	jge    0x4122b2
  4122eb:	pop    edx
  4122ec:	fstp   TBYTE PTR [eax-0x4b]
  4122ef:	nop
  4122f0:	repz (bad) 
  4122f2:	ja     0x41228f
  4122f4:	ins    BYTE PTR es:[edi],dx
  4122f5:	cdq    
  4122f6:	leave  
  4122f7:	lahf   
  4122f8:	jmp    0xf183a5af
  4122fd:	loop   0x4122be
  4122ff:	add    ah,ch
  412301:	lock jle 0x4122a0
  412304:	add    DWORD PTR ds:0xe57eb878,ecx
  41230a:	mov    BYTE PTR [ebx+0x7],bl
  41230d:	jnp    0x41233d
  41230f:	ret    
  412310:	imul   eax,DWORD PTR [edi+0x71e29c65],0xf25b5f98
  41231a:	push   ebp
  41231b:	icebp  
  41231c:	pop    esp
  41231d:	lea    ebx,[ebx+0x1f]
  412320:	cs dec esi
  412322:	xor    ah,BYTE PTR [esi]
  412324:	jecxz  0x4122d1
  412326:	call   0xe25c:0xf9df36e6
  41232d:	push   edx
  41232e:	mov    al,0x30
  412330:	shr    BYTE PTR [esi],0x8c
  412333:	test   al,0x1e
  412335:	adc    esp,ecx
  412337:	sub    ah,BYTE PTR [esi+ecx*8-0x1f131ca]
  41233e:	sub    ch,dh
  412340:	in     al,0xa8
  412342:	ins    DWORD PTR es:[edi],dx
  412343:	fsubrp st(3),st
  412345:	in     al,dx
  412346:	stc    
  412347:	mov    eax,DWORD PTR [ebx]
  412349:	cmp    eax,0xde471eb2
  41234e:	jae    0x4122f2
  412350:	(bad)  
  412351:	xor    al,BYTE PTR [edx-0x28]
  412354:	push   ss
  412355:	or     BYTE PTR [esp+ecx*2],dl
  412358:	jb     0x412382
  41235a:	push   esi
  41235b:	sbb    BYTE PTR [eax],ah
  41235d:	xchg   esi,eax
  41235e:	sbb    BYTE PTR [esi+0x48],0xef
  412362:	hlt    
  412363:	inc    esi
  412364:	cmp    bh,BYTE PTR [ebp+ecx*4-0x7dabe55a]
  41236b:	fwait
  41236c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41236d:	bound  esi,QWORD PTR [eax-0x2c]
  412370:	cmp    BYTE PTR [ebx+0x5a],ah
  412373:	jmp    0x372e:0xa4df39ca
  41237a:	or     DWORD PTR [ebx],edi
  41237c:	push   ss
  41237d:	mov    ch,0x7e
  41237f:	jmp    0x4123e6
  412381:	ret    0x69c1
  412384:	int3   
  412385:	shr    DWORD PTR [ebp+0xb80b9d5],1
  41238b:	(bad)  
  41238c:	call   0x345c:0xbbb0707a
  412393:	fild   WORD PTR [edi+0x0]
  412396:	cld    
  412397:	ja     0x4123e9
  412399:	cld    
  41239a:	mov    DWORD PTR [edx+0x5],ebx
  41239d:	out    dx,al
  41239e:	push   edi
  41239f:	in     al,0xa7
  4123a1:	pop    ds
  4123a2:	pop    es
  4123a3:	je     0x412397
  4123a5:	inc    edi
  4123a6:	mov    al,ds:0x51d65803
  4123ab:	fsub   st,st(1)
  4123ad:	mov    ebp,0x654b64b0
  4123b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b3:	rol    DWORD PTR [edi+edx*4-0x44c45dcb],0xbe
  4123bb:	aas    
  4123bc:	inc    esi
  4123bd:	mov    esi,0x929814fd
  4123c2:	lahf   
  4123c3:	xchg   esi,eax
  4123c4:	bound  edx,QWORD PTR [eax]
  4123c6:	iret   
  4123c7:	inc    ebp
  4123c8:	push   edx
  4123c9:	dec    esp
  4123ca:	push   ss
  4123cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123cc:	or     DWORD PTR [ebp+esi*4+0x28],0x5e
  4123d1:	mov    eax,DWORD PTR [edi+0x3a]
  4123d4:	outs   dx,DWORD PTR ds:[esi]
  4123d5:	inc    esp
  4123d6:	mov    edi,0x65edb463
  4123db:	ror    esi,0x8b
  4123de:	xor    al,0x9c
  4123e0:	xchg   BYTE PTR [ebp+0x5d1cdfe2],cl
  4123e6:	fisttp QWORD PTR [ebx+0x628ae154]
  4123ec:	test   BYTE PTR [edx],0x6e
  4123ef:	sbb    eax,0x9cf1188d
  4123f4:	addr16 das 
  4123f6:	retf   
  4123f7:	shl    DWORD PTR [esi-0x117c8bbe],0x72
  4123fe:	popf   
  4123ff:	mov    ds:0xfeaa8ffc,eax
  412404:	xchg   DWORD PTR [ebx+ebx*1-0x2bca8fc9],esi
  41240b:	jp     0x41246e
  41240d:	inc    eax
  41240e:	pop    edx
  41240f:	(bad)  
  412410:	sub    eax,0xa3160850
  412415:	pop    eax
  412416:	mov    ch,0xe1
  412418:	lock scas eax,DWORD PTR es:[edi]
  41241a:	out    0x72,eax
  41241c:	aaa    
  41241d:	imul   eax,DWORD PTR [esp+eiz*8],0x7
  412421:	in     al,dx
  412422:	add    esp,eax
  412424:	lahf   
  412425:	xor    BYTE PTR [edx],bh
  412427:	dec    ebx
  412428:	clc    
  412429:	in     al,0x6a
  41242b:	ins    DWORD PTR es:[edi],dx
  41242c:	fistp  QWORD PTR [edx]
  41242e:	imul   edi,DWORD PTR ds:0xbbdefba6,0x6e6cfae0
  412438:	sar    bh,cl
  41243a:	and    ecx,edx
  41243c:	mov    ah,0xc0
  41243e:	mov    dh,0xd5
  412440:	push   esp
  412441:	rcl    BYTE PTR [edi+0x2f3c6d95],cl
  412447:	fisubr DWORD PTR [ebx+edx*2+0x6a19b5cc]
  41244e:	mov    al,0x89
  412450:	xor    BYTE PTR ds:0x54c29fa,al
  412456:	mov    edx,0xa12d407f
  41245b:	add    ecx,DWORD PTR [esi]
  41245d:	xchg   ebx,eax
  41245e:	sbb    eax,edi
  412460:	push   ecx
  412461:	leave  
  412462:	(bad)  
  412463:	mov    ah,0x43
  412465:	in     eax,0xa3
  412467:	xor    al,0x92
  412469:	cmp    DWORD PTR [eax],ebp
  41246b:	outs   dx,BYTE PTR ds:[esi]
  41246c:	adc    DWORD PTR [edi],edi
  41246e:	cmp    esi,edx
  412470:	or     ch,BYTE PTR [esi]
  412472:	out    dx,al
  412473:	inc    edi
  412474:	and    DWORD PTR [esi-0x57],edx
  412477:	(bad)  
  412478:	lahf   
  412479:	je     0x41241b
  41247b:	scas   al,BYTE PTR es:[edi]
  41247c:	ret    
  41247d:	xchg   ecx,eax
  41247e:	mov    ds:0xf86adce2,eax
  412483:	adc    BYTE PTR [esi+0x68650fb3],ch
  412489:	pop    ds
  41248a:	push   edx
  41248b:	jle    0x412481
  41248d:	inc    edi
  41248e:	loop   0x412509
  412490:	les    ebx,FWORD PTR [edi]
  412492:	iret   
  412493:	and    eax,0xe1eb1aa3
  412498:	jmp    0x412428
  41249a:	scas   al,BYTE PTR es:[edi]
  41249b:	or     bl,bh
  41249d:	jp     0x412475
  41249f:	lea    edi,[eax+eiz*4-0x7081bb4c]
  4124a6:	popf   
  4124a7:	test   al,0x98
  4124a9:	mov    al,ds:0x276907a
  4124ae:	sbb    ebp,DWORD PTR [esi]
  4124b0:	or     ecx,DWORD PTR [esi-0x2c]
  4124b3:	push   edx
  4124b4:	push   esi
  4124b5:	ret    0xecd9
  4124b8:	pop    es
  4124b9:	push   ecx
  4124ba:	mov    eax,0x4106f316
  4124bf:	add    eax,0xf48d9b4b
  4124c4:	mov    dh,0x98
  4124c6:	sbb    BYTE PTR [ebp+0x2c],bl
  4124c9:	push   0xef3db37e
  4124ce:	fdiv   QWORD PTR [edx-0x1e]
  4124d1:	cmp    edi,DWORD PTR [edi]
  4124d3:	add    DWORD PTR [ecx+0x67],esi
  4124d6:	mov    ds:0x1dbed358,eax
  4124db:	mov    ds:0x55ee2389,al
  4124e0:	xchg   esp,eax
  4124e1:	mov    DWORD PTR [ecx-0x186bcef7],edi
  4124e7:	dec    edx
  4124e8:	daa    
  4124e9:	pop    esp
  4124ea:	ret    
  4124eb:	lods   al,BYTE PTR ds:[esi]
  4124ec:	inc    edi
  4124ed:	add    BYTE PTR [eax+0x66fe13cf],cl
  4124f3:	xor    ch,ch
  4124f5:	mov    ah,0x6e
  4124f7:	pop    es
  4124f8:	xchg   esi,eax
  4124f9:	ror    DWORD PTR [ebx+0x10],0x57
  4124fd:	xor    eax,0xb7a9c238
  412502:	ficomp DWORD PTR [ecx-0x54]
  412505:	paddsw mm0,mm5
  412508:	int    0xb6
  41250a:	fiadd  DWORD PTR [edx-0x37932099]
  412510:	adc    ah,BYTE PTR [esi-0x32538c6c]
  412516:	add    ah,BYTE PTR [eax+0xde63641]
  41251c:	sub    al,0x52
  41251e:	jns    0x412523
  412520:	dec    ebx
  412521:	leave  
  412522:	sbb    dl,BYTE PTR [eax-0x65]
  412525:	xchg   edx,eax
  412526:	leave  
  412527:	inc    ecx
  412528:	ret    0xf48c
  41252b:	mov    bl,0xbd
  41252d:	mov    WORD PTR [edi],ss
  41252f:	sbb    ecx,edi
  412531:	popa   
  412532:	(bad)  
  412533:	mov    eax,DWORD PTR ds:0x46fab41
  412539:	lods   al,BYTE PTR ds:[esi]
  41253a:	adc    esp,esp
  41253c:	sub    eax,0x336bcca0
  412541:	xlat   BYTE PTR ds:[ebx]
  412542:	add    dh,al
  412544:	test   DWORD PTR [edx],ecx
  412546:	push   ds
  412547:	sbb    DWORD PTR [ecx],esi
  412549:	cli    
  41254a:	mov    esi,0x4feeadfb
  41254f:	lods   al,BYTE PTR ds:[esi]
  412550:	add    DWORD PTR [edi-0x72],edx
  412553:	jne    0x41255b
  412555:	pop    edx
  412556:	std    
  412557:	adc    BYTE PTR [ecx-0x4],ch
  41255a:	fild   DWORD PTR [esp+eax*4+0x330b7a16]
  412561:	or     edx,edx
  412563:	js     0x4125bc
  412565:	xor    ebp,DWORD PTR ds:0xe7aa2e0b
  41256b:	ja     0x41258c
  41256d:	ja     0x412532
  41256f:	hlt    
  412570:	loop   0x4125bd
  412572:	add    eax,0x25847b8d
  412577:	not    BYTE PTR [edi+ebp*8+0x7e]
  41257b:	ins    BYTE PTR es:[edi],dx
  41257c:	jae    0x412567
  41257e:	xchg   edx,eax
  41257f:	mov    ah,0x29
  412581:	cmp    ch,BYTE PTR [esi]
  412583:	xchg   BYTE PTR cs:[ebx-0x2fea37db],ch
  41258a:	sub    bl,BYTE PTR [edx]
  41258c:	daa    
  41258d:	ins    DWORD PTR es:[edi],dx
  41258e:	sbb    ebp,esi
  412590:	jae    0x412560
  412592:	jle    0x4125b3
  412594:	mov    ds:0xad63b6ee,al
  412599:	loope  0x4125d6
  41259b:	xchg   ax,ax
  41259d:	fsubr  DWORD PTR [edx-0x5e394217]
  4125a3:	in     al,0x54
  4125a5:	daa    
  4125a6:	push   edi
  4125a7:	dec    eax
  4125a8:	cmp    al,0x57
  4125aa:	sahf   
  4125ab:	clc    
  4125ac:	push   esi
  4125ad:	retf   
  4125ae:	mov    eax,ds:0x19ac0642
  4125b3:	cmp    ebx,eax
  4125b5:	push   0xffffff87
  4125b7:	das    
  4125b8:	dec    edx
  4125b9:	in     eax,0xaf
  4125bb:	loop   0x41259a
  4125bd:	mov    ebx,0xcf095e9d
  4125c2:	inc    edi
  4125c3:	cli    
  4125c4:	jb     0x412629
  4125c6:	clc    
  4125c7:	dec    edx
  4125c8:	mov    ebx,0xf3ad3055
  4125cd:	adc    eax,0xdcb20d94
  4125d2:	ins    BYTE PTR es:[edi],dx
  4125d3:	push   0xa46ebc7
  4125d8:	sbb    DWORD PTR ds:0x89608e88,eax
  4125de:	xor    ah,BYTE PTR [ebx]
  4125e0:	mov    ss,ebp
  4125e2:	push   ds
  4125e3:	outs   dx,BYTE PTR ds:[esi]
  4125e4:	lea    ebp,[ebp-0x1cb10cca]
  4125ea:	push   ebx
  4125eb:	adc    al,0x6e
  4125ed:	push   edi
  4125ee:	xor    dl,BYTE PTR [ebx+0x21]
  4125f1:	out    dx,al
  4125f2:	je     0x41257f
  4125f4:	sbb    al,ah
  4125f6:	mov    edi,0xb082a9bf
  4125fb:	(bad)  
  4125fc:	es repnz push 0xffffffe2
  412600:	inc    ecx
  412601:	int    0x58
  412603:	dec    esp
  412604:	clc    
  412605:	test   DWORD PTR [esp+eax*4-0x71dda35a],ecx
  41260c:	sti    
  41260d:	jp     0x4125a7
  41260f:	das    
  412610:	and    eax,0x4d8717f0
  412615:	jnp    0x412633
  412617:	popa   
  412618:	mov    edi,0x4c0f6850
  41261d:	xlat   BYTE PTR ds:[ebx]
  41261e:	xchg   ecx,eax
  41261f:	push   ds
  412620:	outs   dx,BYTE PTR ds:[esi]
  412622:	(bad)  
  412623:	xor    edi,esi
  412625:	frstor [ebp-0x71]
  412628:	mov    bh,0xe8
  41262a:	and    BYTE PTR [ebp+0x6c],bl
  41262d:	test   ch,0x1f
  412630:	shr    DWORD PTR [ebx-0x11],1
  412633:	shr    DWORD PTR [ebp+ebp*2-0x3e118eb8],cl
  41263a:	mov    ebx,0xa895a48d
  41263f:	fstp   TBYTE PTR [esi]
  412641:	mov    eax,ds:0x30d87179
  412646:	push   ebx
  412647:	pop    ebx
  412648:	loop   0x412684
  41264a:	test   esp,edi
  41264c:	xor    dl,BYTE PTR [esi+0x6d]
  41264f:	loope  0x41265e
  412651:	test   DWORD PTR ds:[edi-0x1283a3cf],0x231ba9bf
  41265c:	mov    al,0x18
  41265e:	daa    
  41265f:	stc    
  412660:	dec    edi
  412661:	cwde   
  412662:	jp     0x41261a
  412664:	(bad)
  412667:	pop    ebx
  412668:	xchg   ebp,eax
  412669:	adc    ah,bl
  41266b:	ins    BYTE PTR es:[edi],dx
  41266c:	sbb    eax,0x58d98295
  412671:	mov    eax,0x23ce85c0
  412676:	push   0xffffffbe
  412678:	into   
  412679:	add    eax,0xfd02d93f
  41267e:	aad    0x2c
  412680:	push   edx
  412681:	retf   
  412682:	cmp    al,0xc8
  412684:	mov    esp,0xa1c6be95
  412689:	sbb    esi,edi
  41268b:	add    esi,esp
  41268d:	add    ah,0xd8
  412690:	push   ds
  412691:	cmp    BYTE PTR [esi+eiz*2-0x13],ah
  412695:	pop    ebx
  412696:	popa   
  412697:	jmp    0x27ca:0xeffc00a2
  41269e:	cld    
  41269f:	mov    cl,0x60
  4126a1:	adc    eax,0x38353819
  4126a6:	out    0x3e,al
  4126a8:	hlt    
  4126a9:	add    al,0xb8
  4126ab:	add    eax,0x9b16b2ae
  4126b0:	ins    DWORD PTR es:[edi],dx
  4126b1:	pop    ecx
  4126b2:	mov    DWORD PTR [esi],0x881e442a
  4126b8:	sub    BYTE PTR [edx+0x6faad9bc],cl
  4126be:	hlt    
  4126bf:	cmc    
  4126c0:	mov    ?,esi
  4126c2:	daa    
  4126c3:	xor    eax,0x12085ea6
  4126c8:	retf   0x7cce
  4126cb:	jle    0x4126e9
  4126cd:	push   cs
  4126ce:	dec    esi
  4126cf:	sub    eax,0xd69ff075
  4126d4:	sbb    bh,BYTE PTR [esi-0x7d]
  4126d7:	lods   eax,DWORD PTR ds:[esi]
  4126d8:	loopne 0x4126d2
  4126da:	mov    ebp,0xfc125a0a
  4126df:	in     al,dx
  4126e0:	push   0xe6d6f2f0
  4126e5:	mov    esi,0x16daea3b
  4126ea:	cmp    al,0x8f
  4126ec:	mov    dl,0x42
  4126ee:	ret    
  4126ef:	stc    
  4126f0:	jg     0xf9d90b53
  4126f6:	or     BYTE PTR [edi+ebx*8-0x77],0x2
  4126fb:	js     0x4126ed
  4126fd:	pop    ss
  4126fe:	aaa    
  4126ff:	cmc    
  412700:	sub    eax,0x85297c25
  412705:	xchg   esp,eax
  412706:	dec    ebp
  412707:	pop    ds
  412708:	cmp    dl,BYTE PTR [eax+edi*2-0xc752c40]
  41270f:	and    al,0x63
  412711:	loop   0x4126d9
  412713:	xor    BYTE PTR [esi],cl
  412715:	mov    WORD PTR [eax-0x55303c14],ss
  41271b:	push   0xa2920dec
  412720:	cmp    DWORD PTR [ebx+0x3c],eax
  412723:	ret    
  412724:	call   0xe69f:0xf50c1d8a
  41272b:	and    dh,BYTE PTR [ebp+0x32076de]
  412731:	retf   0xed41
  412734:	sub    bh,BYTE PTR es:[eax+0x7dc6e0b6]
  41273b:	stc    
  41273c:	nop
  41273d:	push   ecx
  41273e:	mov    dh,0x4d
  412740:	es out 0x74,eax
  412743:	out    0x3b,al
  412745:	pop    ecx
  412746:	dec    esi
  412747:	fiadd  DWORD PTR [edx-0xd78c885]
  41274d:	xor    ebx,ebx
  41274f:	dec    edi
  412750:	or     eax,0x2c03cda5
  412755:	stc    
  412756:	sub    eax,0x14e636e3
  41275b:	push   DWORD PTR ds:0x627c6f05
  412761:	sbb    BYTE PTR [ebx-0x28b62685],bl
  412767:	sub    esi,edx
  412769:	and    al,0x2d
  41276b:	jp     0x4127bc
  41276d:	dec    eax
  41276e:	sub    esi,ebx
  412770:	mov    BYTE PTR [edx],dl
  412772:	cmovo  eax,DWORD PTR [eax]
  412775:	sub    al,0xf7
  412777:	jmp    0x6800:0xcf943b63
  41277e:	xchg   ebx,eax
  41277f:	lods   al,BYTE PTR ds:[esi]
  412780:	dec    ebx
  412781:	push   eax
  412782:	or     BYTE PTR [ebp+0x11],dl
  412785:	test   eax,0x3aee04e2
  41278a:	jbe    0x412730
  41278c:	leave  
  41278d:	shr    DWORD PTR [esi],0x99
  412790:	ins    BYTE PTR es:[edi],dx
  412791:	add    eax,0xce89c3cc
  412796:	loope  0x41271e
  412798:	lock cld 
  41279a:	cmp    al,BYTE PTR [eax-0x13]
  41279d:	dec    esi
  41279e:	sub    eax,0x580543f4
  4127a3:	retf   
  4127a4:	icebp  
  4127a5:	aas    
  4127a6:	push   esi
  4127a7:	out    0x29,eax
  4127a9:	mov    bl,0x81
  4127ab:	cmp    BYTE PTR [esi+0x2a],bh
  4127ae:	(bad)
  4127b2:	jmp    0x5a4b6655
  4127b7:	stc    
  4127b8:	enter  0xf6,0x69
  4127bc:	adc    al,0x38
  4127be:	dec    edi
  4127bf:	test   BYTE PTR [eax-0x77],bh
  4127c2:	inc    edx
  4127c3:	or     dl,ch
  4127c5:	lods   eax,DWORD PTR ds:[esi]
  4127c6:	mov    dl,0xae
  4127c8:	outs   dx,BYTE PTR ds:[esi]
  4127c9:	pop    eax
  4127ca:	push   ecx
  4127cb:	rcl    esp,0x8f
  4127ce:	push   edx
  4127cf:	push   edi
  4127d0:	shr    DWORD PTR [edx],1
  4127d2:	dec    ebx
  4127d3:	out    dx,al
  4127d4:	bound  edx,QWORD PTR [eax-0x17]
  4127d7:	and    eax,0x1230e252
  4127dc:	push   edx
  4127dd:	add    DWORD PTR [eax+0x5f],edx
  4127e0:	mov    cl,0x28
  4127e2:	jno    0x412788
  4127e4:	in     eax,dx
  4127e5:	jmp    0x41277f
  4127e7:	into   
  4127e8:	push   ss
  4127e9:	imul   ebp,DWORD PTR [edi+0x60],0xfffffff6
  4127ed:	mov    eax,edx
  4127ef:	hlt    
  4127f0:	xor    BYTE PTR [edx],bh
  4127f2:	gs std 
  4127f4:	cmp    cl,BYTE PTR [edx+0x47]
  4127f7:	inc    ebx
  4127f8:	push   0x4d
  4127fa:	ds jnp 0x412790
  4127fd:	int3   
  4127fe:	sub    al,0xfe
  412800:	sub    ecx,DWORD PTR [edx+0x30a20a16]
  412806:	pop    ebp
  412807:	arpl   WORD PTR [ecx],sp
  412809:	xchg   ebp,eax
  41280a:	mov    WORD PTR [esi+0x3d],?
  41280d:	and    bh,ch
  41280f:	test   DWORD PTR [ebx-0x5f],eax
  412812:	jbe    0x412822
  412814:	push   esp
  412815:	sub    edi,DWORD PTR [edi-0x49]
  412818:	fimul  DWORD PTR [edx+0x6]
  41281b:	enter  0xac63,0xae
  41281f:	or     DWORD PTR [ebx-0x11176bcd],ebp
  412825:	pushf  
  412826:	stos   DWORD PTR es:[edi],eax
  412827:	adc    ah,BYTE PTR es:[ebx+edi*4]
  41282b:	xchg   esi,eax
  41282c:	mov    ds:0x35508fa9,eax
  412831:	cwde   
  412832:	ret    0xed26
  412835:	push   ss
  412836:	fild   QWORD PTR [eax]
  412838:	ds and al,0x3d
  41283b:	cli    
  41283c:	mov    ecx,0x4b162f05
  412841:	and    al,0x13
  412843:	mov    al,ds:0x703f62b5
  412848:	enter  0xfaf2,0x65
  41284c:	sbb    eax,0xf1a2b7b1
  412851:	xor    al,0xdb
  412853:	enter  0xf0e6,0x58
  412857:	cmp    dh,0x11
  41285a:	les    ebx,FWORD PTR [edi]
  41285c:	mov    dl,BYTE PTR [ebx-0x1c8c03a3]
  412862:	test   al,0x5
  412864:	mov    DWORD PTR [ebp-0x3c27f764],edi
  41286a:	push   ds
  41286b:	or     DWORD PTR [edi],ebx
  41286d:	ins    BYTE PTR es:[edi],dx
  41286e:	xor    BYTE PTR [edi],0x67
  412871:	cmp    bl,bh
  412873:	into   
  412874:	mov    ecx,DWORD PTR [ecx-0x7c]
  412877:	adc    dh,bl
  412879:	inc    ebx
  41287a:	adc    ebx,DWORD PTR [edx-0x4a]
  41287d:	iret   
  41287e:	out    0xb8,al
  412880:	xchg   edx,eax
  412881:	jle    0x41284c
  412883:	in     eax,dx
  412884:	cmp    BYTE PTR [edx-0xc46b32f],0x1
  41288b:	mov    ebp,0xbdb554a1
  412890:	ss fs sbb eax,0xe184fe16
  412897:	inc    ebp
  412898:	call   0x5e92:0x796696ab
  41289f:	iret   
  4128a0:	adc    BYTE PTR [edx-0x41],dl
  4128a3:	inc    ecx
  4128a4:	shr    ebp,0xff
  4128a7:	fld    DWORD PTR [ebx-0xbfb2a8a]
  4128ad:	mov    al,0xfd
  4128af:	in     eax,0x8e
  4128b1:	loop   0x412853
  4128b3:	lds    eax,FWORD PTR [ecx+0x2f]
  4128b6:	jmp    0x152077d3
  4128bb:	inc    edi
  4128bc:	and    cl,ah
  4128be:	and    esi,eax
  4128c0:	mov    DWORD PTR [ecx],esp
  4128c2:	cmp    eax,DWORD PTR [edi]
  4128c4:	sti    
  4128c5:	(bad)
  4128c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c9:	adc    al,0xa9
  4128cb:	xchg   ebx,eax
  4128cc:	mov    ecx,0xb2d37583
  4128d1:	xchg   edi,eax
  4128d2:	add    al,0x20
  4128d4:	sub    al,0x51
  4128d6:	loopne 0x412944
  4128d8:	gs inc esi
  4128da:	repnz and cl,dh
  4128dd:	ds je  0x4128ff
  4128e0:	mov    al,BYTE PTR [ebp-0x66]
  4128e3:	fwait
  4128e4:	mov    ch,0x5c
  4128e6:	push   ebp
  4128e7:	lahf   
  4128e8:	mov    edx,0x5b9bf319
  4128ed:	mov    ds,WORD PTR [ecx+0x2d286f10]
  4128f3:	out    0xf3,eax
  4128f5:	xor    dl,BYTE PTR [edx+0x4]
  4128f8:	mov    cl,BYTE PTR [esi+edi*8+0x13ee8472]
  4128ff:	stc    
  412900:	dec    esi
  412901:	js     0x412920
  412903:	jo     0x412896
  412905:	push   0x93a5d0aa
  41290a:	call   0x7023cad5
  41290f:	adc    eax,0x6297edd8
  412914:	pop    ss
  412915:	aam    0x98
  412917:	neg    DWORD PTR [ecx+0x2f]
  41291a:	mov    eax,ds:0x36582b64
  41291f:	and    bh,BYTE PTR [edi-0x47]
  412922:	inc    eax
  412923:	push   esi
  412924:	cs mov esp,0xe4d633d
  41292a:	xchg   esp,eax
  41292b:	push   edx
  41292c:	outs   dx,DWORD PTR ds:[esi]
  41292d:	dec    edx
  41292e:	ss xchg esi,eax
  412930:	or     ah,BYTE PTR cs:[ebp-0x48b17bb0]
  412937:	jmp    0x412910
  412939:	mov    ch,0x5b
  41293b:	aaa    
  41293c:	pop    ss
  41293d:	add    BYTE PTR [edi],0xd0
  412940:	dec    edx
  412941:	out    0x61,eax
  412943:	cmp    eax,DWORD PTR [ebx]
  412945:	retf   
  412946:	out    0x3d,al
  412948:	mov    dl,0x7a
  41294a:	outs   dx,DWORD PTR ds:[esi]
  41294b:	ins    BYTE PTR es:[edi],dx
  41294c:	js     0x4129b2
  41294e:	xor    BYTE PTR [eax-0x3e97380c],bh
  412954:	pop    ebp
  412955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412956:	sbb    ah,ch
  412958:	scas   al,BYTE PTR es:[edi]
  412959:	sub    di,WORD PTR [ecx-0x22023f28]
  412960:	add    dl,BYTE PTR [eax+ebx*2-0x35]
  412964:	cli    
  412965:	xchg   esi,eax
  412966:	pop    ecx
  412967:	imul   esi,DWORD PTR [eax],0xee0db18c
  41296d:	bound  esp,QWORD PTR [ebx]
  41296f:	xchg   esi,eax
  412970:	test   DWORD PTR [edx+eax*1-0xe8482b5],edx
  412977:	jmp    0x2960706c
  41297c:	cdq    
  41297d:	inc    edi
  41297e:	stc    
  41297f:	jecxz  0x4129c0
  412981:	hlt    
  412982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412983:	cmc    
  412984:	(bad)  
  412986:	out    0xab,al
  412988:	sbb    al,0xe
  41298a:	push   ebp
  41298b:	pusha  
  41298c:	icebp  
  41298d:	sub    bl,0x8b
  412990:	sub    edx,DWORD PTR [esi-0x27]
  412993:	push   edi
  412994:	outs   dx,BYTE PTR ds:[esi]
  412995:	lods   al,BYTE PTR ds:[esi]
  412996:	je     0x412933
  412998:	ror    BYTE PTR [ebx+0xf],cl
  41299b:	aas    
  41299c:	push   ds
  41299d:	ret    0x32e8
  4129a0:	sub    eax,0x45e9997a
  4129a5:	sar    DWORD PTR [ebx-0x58365fa1],0xb8
  4129ac:	jae    0x412a2a
  4129ae:	xchg   ebx,eax
  4129af:	push   ds
  4129b0:	pushf  
  4129b1:	pop    ss
  4129b2:	addr16 in eax,0x6
  4129b5:	ins    BYTE PTR es:[edi],dx
  4129b6:	dec    edx
  4129b7:	xchg   ebx,eax
  4129b8:	iret   
  4129b9:	xlat   BYTE PTR ds:[ebx]
  4129ba:	out    0xc8,al
  4129bc:	add    BYTE PTR [ecx+0xa],dl
  4129bf:	enter  0x89f4,0xec
  4129c3:	call   0xfdc97c9b
  4129c8:	test   eax,0xfac65389
  4129cd:	or     esp,DWORD PTR [edx-0x3a7a72c7]
  4129d3:	stc    
  4129d4:	and    al,0xff
  4129d6:	jecxz  0x412a43
  4129d8:	es and ebp,esp
  4129db:	ds jmp 0x3af:0x8d753802
  4129e3:	out    0x68,al
  4129e5:	inc    ebx
  4129e6:	out    dx,al
  4129e7:	cs jmp 0x3855:0xa17855f1
  4129ef:	jns    0x41298d
  4129f1:	or     eax,0x4cbc73ba
  4129f6:	pop    ss
  4129f7:	mov    ecx,0x935d92d5
  4129fc:	mov    esi,0xbe1d4b3f
  412a01:	xchg   ebx,eax
  412a02:	adc    DWORD PTR [edx-0x5e652d5d],ebx
  412a08:	xchg   BYTE PTR [edx-0x6a],al
  412a0b:	call   0xf52de017
  412a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a11:	jg     0x412a00
  412a13:	cmp    al,0x70
  412a15:	mov    ds:0x9f034dae,eax
  412a1a:	xor    BYTE PTR [eax-0x4da17cb2],ah
  412a20:	and    eax,0xe6cff6
  412a25:	sti    
  412a26:	push   edi
  412a27:	shld   esp,edx,0xb1
  412a2b:	mov    bh,cl
  412a2d:	mov    dh,0xc7
  412a2f:	xchg   ebx,eax
  412a30:	xor    al,al
  412a32:	les    edi,FWORD PTR [eax]
  412a34:	push   edi
  412a35:	das    
  412a36:	and    eax,0xb6477272
  412a3b:	jl     0x412a60
  412a3d:	imul   ebp,DWORD PTR [ebp+0x49],0x77
  412a41:	shl    cl,cl
  412a43:	jnp    0x412a00
  412a45:	add    ah,BYTE PTR [esi]
  412a47:	add    DWORD PTR ds:0x207922e0,ebx
  412a4d:	push   esp
  412a4e:	xor    al,0x94
  412a50:	jno    0x412a8d
  412a52:	inc    ebx
  412a53:	jnp    0x4129d5
  412a55:	fdiv   st,st(4)
  412a57:	mov    eax,ds:0x13de5194
  412a5c:	test   al,0x51
  412a5e:	sub    eax,DWORD PTR [edi+0x3e]
  412a61:	imul   esi,DWORD PTR [ebx],0x2a9d24a8
  412a67:	adc    al,0xd4
  412a69:	imul   esp,ebp,0xdfed70d2
  412a6f:	jmp    0x412a2e
  412a71:	sub    DWORD PTR [ecx],0x2d
  412a74:	pusha  
  412a75:	jb     0x412ae6
  412a77:	adc    BYTE PTR ds:0x37b024d6,bl
  412a7d:	and    BYTE PTR [edx+0x38e73f31],bh
  412a83:	sbb    esi,ecx
  412a85:	push   0xfffffffb
  412a87:	cmc    
  412a88:	mov    cl,BYTE PTR [edx-0x359e7a67]
  412a8e:	jae    0x412af0
  412a90:	push   ss
  412a91:	lds    esi,FWORD PTR [ebp-0x279e5495]
  412a97:	sub    ecx,DWORD PTR [ecx]
  412a99:	jnp    0x412ab4
  412a9b:	xchg   BYTE PTR [edx+0x2c],ch
  412a9e:	pop    edi
  412a9f:	scas   eax,DWORD PTR es:[edi]
  412aa0:	cwde   
  412aa1:	sti    
  412aa2:	lds    eax,FWORD PTR [edx+0x247d4b7]
  412aa8:	pop    es
  412aa9:	fwait
  412aaa:	ins    DWORD PTR es:[edi],dx
  412aab:	into   
  412aac:	call   0xcba7:0x6a888c52
  412ab3:	push   edx
  412ab5:	(bad)  
  412ab6:	adc    DWORD PTR [ecx+ebp*1-0x1023eb20],ebp
  412abd:	into   
  412abe:	retf   0x2fa7
  412ac1:	add    edx,DWORD PTR [eax+ebp*2-0x4e]
  412ac5:	sbb    edi,esp
  412ac7:	aam    0x5b
  412ac9:	aaa    
  412aca:	pop    edi
  412acb:	xchg   ecx,eax
  412acc:	xchg   ecx,eax
  412acd:	push   eax
  412ace:	ins    DWORD PTR es:[edi],dx
  412acf:	pop    ebp
  412ad0:	stos   BYTE PTR es:[edi],al
  412ad1:	and    cl,BYTE PTR ds:[esi-0x9]
  412ad5:	aam    0x62
  412ad7:	and    ebp,edx
  412ad9:	mov    eax,DWORD PTR [edi+0x76908029]
  412adf:	fld    QWORD PTR [ebx+0x4a]
  412ae2:	mov    edx,0x400b04b5
  412ae7:	inc    esp
  412ae8:	jp     0x412b3d
  412aea:	and    al,BYTE PTR [ebx-0x6f28cdce]
  412af0:	cmp    ebp,esp
  412af2:	aaa    
  412af3:	retf   0xa372
  412af6:	ror    BYTE PTR [ebx+0x447fe2ee],1
  412afc:	mov    dl,0x11
  412afe:	(bad)  [ecx+0x34f6e453]
  412b04:	scas   eax,DWORD PTR es:[edi]
  412b05:	or     edi,DWORD PTR [edi]
  412b07:	cmp    BYTE PTR [eax-0x53],bh
  412b0a:	push   0xf4d1bb97
  412b0f:	mov    ds:0x53dbb3f7,eax
  412b14:	mov    eax,eax
  412b16:	ret    
  412b17:	das    
  412b18:	je     0x412b77
  412b1a:	or     BYTE PTR [esi-0x336dd3f3],dl
  412b20:	out    dx,al
  412b21:	add    eax,0xd994c1e8
  412b26:	imul   edx,DWORD PTR [ebx],0xffffffad
  412b29:	adc    DWORD PTR [ecx+0x1a],edi
  412b2c:	loop   0x412af2
  412b2e:	xchg   ecx,ebx
  412b30:	xor    ebp,DWORD PTR [ebp+0x4cbabd8f]
  412b36:	or     DWORD PTR [edx],ebx
  412b38:	adc    al,BYTE PTR [edi]
  412b3a:	mov    edi,0x20b9030b
  412b3f:	cmp    DWORD PTR [ecx+0x4],ebx
  412b42:	jne    0x412b69
  412b44:	or     eax,0x85213f52
  412b49:	push   esi
  412b4a:	pop    ds
  412b4b:	cmp    esi,DWORD PTR [esi+0x4a9c88d1]
  412b51:	dec    edi
  412b52:	mov    ecx,ecx
  412b54:	or     ebp,ebx
  412b56:	out    0xe9,eax
  412b58:	add    al,0x75
  412b5a:	push   ds
  412b5b:	and    DWORD PTR [edi+0x3f683e58],0x9cee1b95
  412b65:	lods   eax,DWORD PTR ds:[esi]
  412b66:	in     eax,dx
  412b67:	push   ebp
  412b68:	adc    DWORD PTR [esi],0x2d0a9e43
  412b6e:	ret    
  412b6f:	hlt    
  412b70:	xchg   ebp,eax
  412b71:	mov    ebx,0x96e21e71
  412b76:	stos   DWORD PTR es:[edi],eax
  412b77:	(bad)  
  412b78:	xchg   esi,eax
  412b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b7a:	adc    dh,BYTE PTR [ebp+0x7f0e76ff]
  412b80:	mov    esp,DWORD PTR [edi+0x1e]
  412b83:	add    BYTE PTR [eax+ebx*1-0x6bc32f4c],cl
  412b8a:	dec    edx
  412b8b:	shl    DWORD PTR [edi+0x687230e4],cl
  412b91:	adc    DWORD PTR ds:0xdc31fea0,ecx
  412b97:	mov    ch,0xb3
  412b99:	sub    al,0x47
  412b9b:	pop    esi
  412b9c:	sbb    eax,0x5d7e5560
  412ba1:	rol    BYTE PTR [ecx],cl
  412ba3:	and    al,0xd4
  412ba5:	sub    BYTE PTR [edx],dh
  412ba7:	push   eax
  412ba8:	out    dx,eax
  412ba9:	popf   
  412baa:	std    
  412bab:	repz pop esi
  412bad:	push   ss
  412bae:	adc    eax,0x92ec11eb
  412bb3:	xor    al,0x10
  412bb5:	addr16 std 
  412bb7:	push   es
  412bb8:	js     0x412c02
  412bba:	pushf  
  412bbb:	adc    eax,0xb3929f97
  412bc0:	inc    ebp
  412bc1:	mov    al,0x10
  412bc3:	pop    ss
  412bc4:	pop    ebp
  412bc5:	pop    es
  412bc6:	int    0x19
  412bc8:	fwait
  412bc9:	and    al,0x17
  412bcb:	(bad)  
  412bcc:	mov    eax,ds:0x8322c3f1
  412bd1:	jmp    0xd472:0x692c2b86
  412bd8:	jge    0x412bd2
  412bda:	add    bh,BYTE PTR [esi]
  412bdc:	imul   eax,DWORD PTR [ebp+0x47262196],0xffffffd8
  412be3:	push   esi
  412be4:	sub    DWORD PTR [esi+0x58a2b8bd],ebp
  412bea:	icebp  
  412beb:	aad    0x2
  412bed:	jb     0x412c22
  412bef:	shl    DWORD PTR [edi],cl
  412bf1:	lods   al,BYTE PTR ds:[esi]
  412bf2:	jl     0x412c0f
  412bf4:	sbb    ebx,esi
  412bf6:	adc    DWORD PTR [edx-0x49],edx
  412bf9:	xchg   edi,eax
  412bfa:	and    eax,0xd7319c9e
  412bff:	pop    esp
  412c00:	push   esi
  412c01:	pop    eax
  412c02:	mov    esp,0x9dea9aec
  412c07:	or     bh,BYTE PTR [ecx+0x36428554]
  412c0d:	fcom   DWORD PTR [ecx+0x7b2a1168]
  412c13:	push   0xc919c54e
  412c18:	ror    DWORD PTR [ecx+0x4f],1
  412c1b:	cmp    ecx,DWORD PTR [edx+0x68293889]
  412c21:	enter  0xee3e,0x1d
  412c25:	int3   
  412c26:	rcr    BYTE PTR [edi+ecx*8+0x757bcd86],cl
  412c2d:	xor    al,dh
  412c2f:	scas   eax,DWORD PTR es:[edi]
  412c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c31:	xlat   BYTE PTR ds:[ebx]
  412c32:	push   0xfb995e7f
  412c37:	fcom   QWORD PTR [ebx]
  412c39:	adc    ebx,DWORD PTR [edi+0x64]
  412c3c:	ffreep st(3)
  412c3e:	fsubp  st(1),st
  412c40:	add    esp,DWORD PTR [esi-0x379f00d1]
  412c46:	pop    eax
  412c47:	neg    DWORD PTR [edi+ebx*2+0x759fbc0b]
  412c4e:	retf   
  412c4f:	pop    ds
  412c50:	pop    ss
  412c51:	in     al,0xdf
  412c53:	mov    ebp,0x673a7af8
  412c58:	out    dx,al
  412c59:	inc    esi
  412c5a:	pusha  
  412c5b:	mul    BYTE PTR [ebx]
  412c5d:	sbb    DWORD PTR [edx-0x37],edx
  412c60:	adc    DWORD PTR [edx],edi
  412c62:	jbe    0x412ca5
  412c64:	sub    al,0x1
  412c66:	jl     0x412cc3
  412c68:	add    eax,DWORD PTR [ecx-0x4d260660]
  412c6e:	daa    
  412c6f:	cmp    al,0xb6
  412c71:	and    eax,0xb2ec43f
  412c76:	retf   
  412c77:	pop    ebx
  412c78:	out    dx,eax
  412c79:	mov    ebx,0xdc751621
  412c7e:	xor    BYTE PTR [edx],0xb1
  412c81:	ds jle 0x412c95
  412c84:	aad    0xf5
  412c86:	loop   0x412cc7
  412c88:	mov    ds:0x90e6e674,eax
  412c8d:	cld    
  412c8e:	fstp   DWORD PTR ss:[ecx]
  412c91:	in     eax,0x7f
  412c93:	pushf  
  412c94:	push   eax
  412c95:	pop    ebx
  412c96:	and    bh,BYTE PTR [edx]
  412c98:	add    al,0x7b
  412c9a:	mov    ds:0x35f23de2,eax
  412c9f:	in     al,dx
  412ca0:	(bad)  
  412ca1:	and    eax,0x2c1f4c9d
  412ca6:	and    eax,0x89dedaa3
  412cab:	out    dx,al
  412cac:	and    eax,0x19f76e37
  412cb1:	mov    bh,0xcc
  412cb3:	pop    edi
  412cb4:	sub    al,0xa
  412cb6:	push   es
  412cb7:	shr    DWORD PTR [ebp+0x13],0x7
  412cbb:	jl     0x412c87
  412cbd:	xchg   edi,eax
  412cbe:	ja     0x412d32
  412cc0:	mov    ebp,DWORD PTR [edx-0x7be46c78]
  412cc6:	call   0x5b8284aa
  412ccb:	xor    BYTE PTR [ecx+0x45],dl
  412cce:	unpcklps xmm3,xmm6
  412cd1:	sub    BYTE PTR [esp+edi*1+0x3b06f232],dl
  412cd8:	fxch   st(5)
  412cda:	dec    esi
  412cdb:	fsub   DWORD PTR [ebx+0x592b374a]
  412ce1:	sbb    bh,BYTE PTR ds:0xb6c4afbc
  412ce7:	mov    ah,0xde
  412ce9:	push   ebp
  412cea:	dec    ebx
  412ceb:	(bad)
  412cee:	sahf   
  412cef:	jmp    0x9fc10318
  412cf4:	jae    0x412d68
  412cf6:	sbb    esi,DWORD PTR [edi]
  412cf8:	pusha  
  412cf9:	repz pop ds
  412cfb:	inc    ebp
  412cfc:	lods   eax,DWORD PTR ds:[esi]
  412cfd:	pop    esi
  412cfe:	mov    esi,0xc044cd3d
  412d03:	mov    ds:0x1e855600,eax
  412d08:	(bad)  [ebp+edi*2+0x6187a047]
  412d0f:	imul   ecx,DWORD PTR [edi],0xffffff99
  412d12:	inc    ecx
  412d13:	pop    esi
  412d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d15:	push   cs
  412d16:	adc    DWORD PTR [ebx+eiz*1],eax
  412d19:	mov    eax,ds:0x84363560
  412d1e:	hlt    
  412d1f:	shl    BYTE PTR [edi-0x427f647b],1
  412d25:	mov    edx,0x51fac568
  412d2a:	pop    ebx
  412d2b:	xchg   edi,eax
  412d2c:	nop
  412d2d:	ret    0x605b
  412d30:	data16 jle 0x412d98
  412d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d34:	fld    DWORD PTR [ebx]
  412d36:	mov    ds:0x989b50ec,eax
  412d3b:	outs   dx,DWORD PTR ds:[esi]
  412d3c:	cmp    dh,BYTE PTR [ebx+0x2063b263]
  412d42:	lahf   
  412d43:	jle    0x412d70
  412d45:	jne    0x412ce4
  412d47:	mov    al,ds:0xc00b0d5b
  412d4c:	xor    eax,DWORD PTR [ebp-0x53]
  412d4f:	data16 fsubr DWORD PTR [edx+0x6a1b6bbb]
  412d56:	cmp    al,0x5b
  412d58:	adc    al,0xba
  412d5a:	lahf   
  412d5b:	and    bh,ch
  412d5d:	or     BYTE PTR [eax+0x31],ah
  412d60:	mov    ebx,0xed10725d
  412d65:	leave  
  412d66:	cmp    esp,esp
  412d68:	sub    ebx,edi
  412d6a:	push   0x6de829ec
  412d6f:	lea    esi,[ebp+0xb]
  412d72:	push   esp
  412d73:	pop    edi
  412d74:	jmp    0x69de3dff
  412d79:	pop    DWORD PTR [esi+0x13]
  412d7c:	shl    DWORD PTR [esi-0x52],0x1d
  412d80:	mov    esp,0x172de91b
  412d85:	push   0x301a1870
  412d8a:	pop    esi
  412d8b:	lea    ebx,[ebx-0x1e]
  412d8e:	leave  
  412d8f:	and    BYTE PTR [ecx-0x5fc82bfe],bl
  412d95:	xlat   BYTE PTR ds:[ebx]
  412d96:	pusha  
  412d97:	mov    esi,0x27042477
  412d9c:	pop    edx
  412d9d:	pop    esi
  412d9e:	cmp    eax,0x10329bb2
  412da3:	inc    eax
  412da4:	add    DWORD PTR [ecx+0x2cffabe5],eax
  412daa:	imul   BYTE PTR [eax]
  412dac:	push   ecx
  412dad:	pushf  
  412dae:	sti    
  412daf:	fsub   DWORD PTR [ebx+0x12]
  412db2:	push   ecx
  412db3:	jge    0x412da5
  412db5:	push   ds
  412db6:	mov    al,ds:0xb08cb6eb
  412dbb:	pop    eax
  412dbc:	(bad)  
  412dbd:	sub    edi,ebp
  412dbf:	xchg   ecx,eax
  412dc0:	lods   al,BYTE PTR ds:[esi]
  412dc1:	push   eax
  412dc2:	rol    BYTE PTR [edx-0x58765efd],1
  412dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc9:	pop    edx
  412dca:	jb     0x412d97
  412dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcd:	jl     0x412e36
  412dcf:	xor    DWORD PTR [esp+ecx*2],edx
  412dd2:	push   ds
  412dd3:	arpl   WORD PTR [edi+0x6edaf1ac],sp
  412dd9:	push   ebp
  412dda:	inc    esp
  412ddb:	enter  0x4349,0xc9
  412ddf:	or     al,0x89
  412de1:	xchg   DWORD PTR [ebx],esp
  412de3:	jae    0x412e20
  412de5:	mov    al,0x11
  412de7:	xor    edx,DWORD PTR [edi+0x4f]
  412dea:	cdq    
  412deb:	inc    edx
  412dec:	mov    ebp,0x825ada0d
  412df1:	and    ebp,DWORD PTR [esi]
  412df3:	rep outs dx,DWORD PTR ds:[esi]
  412df5:	rol    esp,1
  412df7:	mov    WORD PTR [esi-0x4b15de0e],cs
  412dfd:	sub    eax,0xcdf192b3
  412e02:	and    BYTE PTR [eax-0x1a],ah
  412e05:	cmp    edx,DWORD PTR [edi+0x78]
  412e08:	jmp    0x412e4f
  412e0a:	fwait
  412e0b:	pop    ss
  412e0c:	mov    ah,0xd7
  412e0e:	loop   0x412db1
  412e10:	scas   al,BYTE PTR es:[edi]
  412e11:	test   cl,ch
  412e13:	dec    ebx
  412e14:	xor    BYTE PTR [edi+0x14445363],dl
  412e1a:	mov    ah,0xf2
  412e1c:	jno    0x412e46
  412e1e:	test   eax,0x8bc7ed9d
  412e23:	mov    ebp,0x650870be
  412e28:	(bad)
  412e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2c:	sub    eax,DWORD PTR [eax-0x2da9ecaf]
  412e32:	xor    BYTE PTR [eax+ebp*8-0x78305b36],cl
  412e39:	sub    ecx,DWORD PTR [ebp-0x4b03afe8]
  412e3f:	add    DWORD PTR [edi],0x56
  412e42:	fwait
  412e43:	repnz addr16 xchg edx,eax
  412e46:	cmp    al,BYTE PTR [ecx-0x44]
  412e49:	in     eax,dx
  412e4a:	adc    DWORD PTR [ebx+0x7e7530a2],0xe2d47f9
  412e54:	fidivr DWORD PTR [esi]
  412e56:	push   0x46
  412e58:	and    bh,BYTE PTR [ecx]
  412e5a:	(bad)  
  412e5b:	shl    BYTE PTR [esi+ecx*4+0x27],cl
  412e5f:	fdivr  QWORD PTR [esi+0x7f]
  412e62:	push   ebp
  412e63:	sbb    dh,BYTE PTR [eax+0x527dbf20]
  412e69:	dec    eax
  412e6a:	xchg   DWORD PTR [ebx+0x47],ebp
  412e6d:	xor    al,0x89
  412e6f:	(bad)  
  412e70:	das    
  412e71:	mov    ebx,0x193453a1
  412e76:	(bad)  
  412e77:	fnsave [esp+edx*4-0x5e]
  412e7b:	cs mov ebx,0xa6054eb2
  412e81:	cld    
  412e82:	lds    esi,FWORD PTR [eax-0x9]
  412e85:	ret    0xa85e
  412e88:	das    
  412e89:	and    eax,edx
  412e8b:	dec    edi
  412e8c:	lsl    esp,ax
  412e8f:	gs mov ah,0x6f
  412e92:	sbb    BYTE PTR [ebx-0x682b7ab2],bl
  412e98:	add    eax,0xa4e69bc6
  412e9d:	dec    edx
  412e9e:	xchg   edx,eax
  412e9f:	std    
  412ea0:	jl     0x412f18
  412ea2:	mov    cs,WORD PTR [esi-0x21]
  412ea5:	cmovo  edi,DWORD PTR [bp+0x2a01]
  412eab:	jl     0x412e36
  412ead:	adc    al,0xff
  412eaf:	nop
  412eb0:	pop    esp
  412eb1:	push   ebx
  412eb2:	mov    ebx,0x91313848
  412eb7:	cmp    dl,dl
  412eb9:	mov    edx,0x74b4a2dd
  412ebe:	ins    BYTE PTR es:[edi],dx
  412ebf:	pop    ebx
  412ec0:	fisub  DWORD PTR [eax]
  412ec2:	ret    
  412ec3:	loope  0x412e72
  412ec5:	add    esp,DWORD PTR [edi+0x60]
  412ec8:	in     eax,0x8b
  412eca:	jne    0x412e52
  412ecc:	(bad)  
  412ecd:	test   BYTE PTR [ebx+0x51e4be8b],0x81
  412ed4:	inc    cx
  412ed6:	retf   
  412ed7:	je     0x412e6d
  412ed9:	mov    eax,ds:0xd172c1e7
  412ede:	imul   ecx,DWORD PTR [edi+edx*4-0x6],0xc
  412ee3:	lock mov BYTE PTR [ebx+0x556e3dc5],al
  412eea:	in     al,dx
  412eeb:	mov    ch,0xe7
  412eed:	enter  0xe2e7,0x85
  412ef1:	dec    edx
  412ef2:	push   esp
  412ef3:	(bad)  
  412ef4:	mov    ebp,0xf121ef5b
  412ef9:	icebp  
  412efa:	add    DWORD PTR [edi],ebp
  412efc:	test   DWORD PTR [eax+0x7fbeb1b9],0xa9c77d9
  412f06:	addr16 jl 0x412f32
  412f09:	jecxz  0x412ea5
  412f0b:	and    DWORD PTR [ebx],edx
  412f0d:	jo     0x412ea3
  412f0f:	push   ecx
  412f10:	jmp    0x4f447231
  412f15:	mov    al,ds:0x988a9f94
  412f1a:	pop    ds
  412f1b:	in     eax,0xd8
  412f1d:	jae    0x412f58
  412f1f:	inc    edx
  412f20:	mov    edx,0x9205b89d
  412f25:	and    al,0x2f
  412f27:	imul   edx,DWORD PTR [esi],0xcb93aaef
  412f2d:	lds    esi,FWORD PTR [ebp+0x3d]
  412f30:	aam    0x37
  412f32:	loope  0x412f63
  412f34:	iret   
  412f35:	scas   al,BYTE PTR es:[edi]
  412f36:	dec    edi
  412f37:	rcr    BYTE PTR [ecx+0x62],0xc6
  412f3b:	and    eax,0xac2f706a
  412f40:	fbstp  TBYTE PTR [eax+0x74]
  412f43:	cld    
  412f44:	mov    ds:0x18c05d97,eax
  412f49:	data16 or al,BYTE PTR [edi-0x75fba2b9]
  412f50:	xchg   edi,eax
  412f51:	mov    ?,esi
  412f53:	aad    0x54
  412f55:	sub    BYTE PTR [eax],ah
  412f57:	pop    esi
  412f58:	sbb    DWORD PTR [ebx],0xfffffffe
  412f5b:	inc    ebp
  412f5c:	gs and eax,0x76098705
  412f62:	out    0x2d,eax
  412f64:	std    
  412f65:	iret   
  412f66:	retf   
  412f67:	je     0x412f2c
  412f69:	and    eax,0x202eea0b
  412f6e:	int    0xb5
  412f70:	mov    esi,0xabab8ef6
  412f75:	inc    edx
  412f76:	(bad)  
  412f77:	not    bl
  412f79:	jno    0x412f9f
  412f7b:	adc    eax,0x1e4d174
  412f80:	fistp  DWORD PTR [esi+0xd]
  412f83:	pusha  
  412f84:	pop    ecx
  412f85:	jmp    0x412f85
  412f87:	adc    bh,dh
  412f89:	xor    DWORD PTR [ecx],esp
  412f8b:	or     eax,0x6ea533bc
  412f90:	push   edx
  412f91:	int3   
  412f92:	cwde   
  412f93:	and    bl,BYTE PTR [eax-0x72e05600]
  412f99:	dec    eax
  412f9a:	loopne 0x412feb
  412f9c:	pop    ss
  412f9d:	inc    edi
  412f9e:	xchg   edi,eax
  412f9f:	loop   0x412ffc
  412fa1:	pop    ebx
  412fa2:	mov    ah,0xa8
  412fa4:	pop    ss
  412fa5:	jns    0x412fe7
  412fa7:	aas    
  412fa8:	int3   
  412fa9:	pop    eax
  412faa:	xor    BYTE PTR [edi+0x49],dl
  412fad:	jnp    0x412f81
  412faf:	add    eax,0x5beaded
  412fb4:	gs inc esi
  412fb6:	pop    edi
  412fb7:	fwait
  412fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb9:	fistp  WORD PTR [edi+ebx*1-0x4440de8c]
  412fc0:	mov    dh,0x88
  412fc2:	ret    
  412fc3:	pop    ebx
  412fc4:	jge    0x413041
  412fc6:	adc    al,0xf4
  412fc8:	jnp    0x41301c
  412fca:	adc    bl,BYTE PTR [ebx]
  412fcc:	inc    ebp
  412fcd:	dec    edi
  412fce:	cmp    cl,dl
  412fd0:	outs   dx,DWORD PTR ds:[esi]
  412fd1:	ins    BYTE PTR es:[edi],dx
  412fd2:	or     esi,DWORD PTR [eiz*4-0x2e2117b7]
  412fd9:	inc    esi
  412fda:	sbb    BYTE PTR [esp+eiz*8-0x138d5959],ch
  412fe1:	ja     0x413009
  412fe3:	jmp    0x1e31:0x99477e5d
  412fea:	add    cl,BYTE PTR [ecx+0x8ba00a7]
  412ff0:	iret   
  412ff1:	ins    BYTE PTR es:[edi],dx
  412ff2:	pop    ebx
  412ff3:	loop   0x412fa8
  412ff5:	adc    ecx,ebp
  412ff7:	xchg   edx,eax
  412ff8:	pop    es
  412ff9:	rcl    DWORD PTR [eax+0x533be0f7],cl
  412fff:	jnp    0x412f96
  413001:	push   0xcf05cb53
  413006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413007:	call   0xecef1f61
  41300c:	add    cl,BYTE PTR [edi-0x1b]
  41300f:	call   0x15025335
  413014:	inc    ebp
  413015:	in     al,0x0
  413017:	sub    BYTE PTR [ebp+0x60f5229e],cl
  41301d:	mov    edx,0xc4b8fbcb
  413022:	jp     0x41306f
  413024:	dec    ebp
  413025:	dec    eax
  413026:	cwde   
  413027:	sbb    DWORD PTR [edi+0x1a],esi
  41302a:	in     al,0xfc
  41302c:	fcmovne st,st(7)
  41302e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302f:	push   ecx
  413030:	adc    bh,BYTE PTR [esi]
  413032:	inc    DWORD PTR [ebp+0x105cb879]
  413038:	fist   WORD PTR [ebx+0x4d]
  41303b:	add    al,0xc9
  41303d:	js     0x412fd6
  41303f:	pop    ds
  413040:	dec    esi
  413041:	bound  ecx,QWORD PTR [edi+0x6e]
  413044:	test   edi,ecx
  413046:	add    al,0xb9
  413048:	aam    0x6c
  41304a:	sub    eax,0xfbf47fd6
  41304f:	sbb    bl,BYTE PTR [edi]
  413051:	test   al,0xf0
  413053:	pop    edi
  413054:	cli    
  413055:	jns    0x4130d1
  413057:	sub    al,0x9f
  413059:	push   0xb5fd1818
  41305e:	ffreep st(3)
  413060:	inc    BYTE PTR [ebp-0x110e133d]
  413066:	ds adc dh,ch
  413069:	dec    esi
  41306a:	out    dx,eax
  41306b:	pop    edi
  41306c:	popa   
  41306d:	nop
  41306e:	loop   0x4130e1
  413070:	cwde   
  413071:	int3   
  413072:	dec    ebp
  413073:	dec    esi
  413074:	stos   BYTE PTR es:[edi],al
  413075:	mov    ah,0xe2
  413077:	and    edx,DWORD PTR ds:0xc1c7b406
  41307d:	hlt    
  41307e:	arpl   WORD PTR [eax],bx
  413080:	aas    
  413081:	dec    ecx
  413082:	nop
  413083:	int3   
  413084:	xchg   esp,eax
  413085:	push   0x23c3ff42
  41308a:	xor    BYTE PTR [esi],ch
  41308c:	sbb    BYTE PTR [ebx+0x690ff258],cl
  413092:	in     eax,dx
  413093:	push   0x3cb1ad90
  413098:	dec    edi
  413099:	mov    edx,0x2cc61f82
  41309e:	pop    ss
  41309f:	dec    ebx
  4130a0:	mov    BYTE PTR [edi-0xc],0x14
  4130a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a5:	jl     0x4130d1
  4130a7:	imul   edx,ebp,0x6f7c8252
  4130ad:	sbb    BYTE PTR [edi-0x383f7060],0x70
  4130b4:	pushf  
  4130b5:	out    0xe4,al
  4130b7:	jbe    0x4130c5
  4130b9:	imul   ebx,ebx,0x1b
  4130bc:	mov    dh,0x49
  4130be:	mov    al,0xb0
  4130c0:	mov    dl,0x30
  4130c2:	xor    dl,bh
  4130c4:	jb     0x41310b
  4130c6:	mov    edx,0x19daf859
  4130cb:	imul   ebp,DWORD PTR [ebx-0x21],0x31
  4130cf:	xor    al,0x7b
  4130d1:	je     0x4130c9
  4130d3:	sar    BYTE PTR [ebx+0x46],0x3c
  4130d7:	sti    
  4130d8:	inc    eax
  4130d9:	jle    0x413129
  4130db:	inc    ebp
  4130dc:	xor    al,0x1a
  4130de:	adc    eax,0xf2c5d19b
  4130e3:	loope  0x413094
  4130e5:	rol    DWORD PTR ds:0x55450848,0x6
  4130ec:	sub    esp,DWORD PTR [ecx+0x2fd1bf2a]
  4130f2:	xchg   ecx,eax
  4130f3:	xchg   esp,eax
  4130f4:	test   DWORD PTR [ecx-0x2b],eax
  4130f7:	dec    esi
  4130f8:	sub    BYTE PTR [eax-0x1a],bh
  4130fb:	pop    ecx
  4130fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130fd:	pop    ecx
  4130fe:	cld    
  4130ff:	inc    BYTE PTR [ecx+0x44]
  413102:	dec    BYTE PTR [edi]
  413104:	pop    es
  413105:	or     DWORD PTR [ecx+eax*4-0x34c5ab8],ebx
  41310c:	icebp  
  41310d:	push   esi
  41310e:	add    ah,BYTE PTR [eax]
  413110:	mov    al,ds:0x2615bacf
  413115:	loope  0x4130e4
  413117:	mov    dh,0x77
  413119:	sbb    al,0x39
  41311b:	das    
  41311c:	ret    
  41311d:	call   0xc000684c
  413122:	add    al,0xfc
  413124:	mov    es,WORD PTR [edx+0x5e]
  413127:	in     al,dx
  413128:	dec    ecx
  413129:	push   0xffffffdc
  41312b:	pop    eax
  41312c:	push   eax
  41312d:	in     eax,dx
  41312e:	jge    0x4130f5
  413130:	dec    eax
  413131:	popf   
  413132:	inc    edx
  413133:	push   eax
  413134:	and    al,0xe2
  413136:	jnp    0x413155
  413138:	jo     0x413156
  41313a:	xchg   ebx,eax
  41313b:	data16 mov cl,0x20
  41313e:	sub    eax,0x15897efd
  413143:	outs   dx,BYTE PTR ds:[esi]
  413144:	jnp    0x413192
  413146:	out    dx,eax
  413147:	mov    bl,0x40
  413149:	sub    al,0x50
  41314b:	mov    eax,ds:0x5af52b22
  413150:	pop    edi
  413151:	sbb    BYTE PTR [edi],0xd9
  413154:	test   BYTE PTR ds:0x1ff2f8b7,0x72
  41315b:	xchg   edi,eax
  41315c:	add    al,0xb3
  41315e:	inc    ecx
  41315f:	sub    dh,BYTE PTR ds:0x397498db
  413165:	and    al,BYTE PTR [edi-0x455a34de]
  41316b:	push   0xffffffd9
  41316d:	or     eax,0xd8bd889f
  413172:	retf   0xcbbf
  413175:	jle    0x41315b
  413177:	scas   al,BYTE PTR es:[edi]
  413178:	jne    0x41318e
  41317a:	nop
  41317b:	mov    dl,0x9b
  41317d:	(bad)  
  41317e:	call   0x2796:0x6f9a160b
  413185:	pop    ss
  413186:	mov    eax,0xa66ffc94
  41318b:	loop   0x41311b
  41318d:	jo     0x4131ec
  41318f:	dec    ecx
  413190:	pushf  
  413191:	jne    0x41314d
  413193:	sub    eax,edi
  413195:	ja     0x41315f
  413197:	pop    es
  413198:	mov    ecx,0x9e124dc4
  41319d:	popf   
  41319e:	cld    
  41319f:	loopne 0x4131c9
  4131a1:	aaa    
  4131a2:	dec    esi
  4131a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a4:	lods   al,BYTE PTR ds:[esi]
  4131a5:	pop    edx
  4131a6:	jmp    0x91eee76c
  4131ab:	pop    ss
  4131ac:	inc    ecx
  4131ad:	mov    esi,0x116fb05a
  4131b2:	adc    ch,BYTE PTR [edx]
  4131b4:	fstp   QWORD PTR [edi]
  4131b6:	sbb    ebx,DWORD PTR [edx+0x7341e258]
  4131bc:	mov    ds:0x6167e72d,al
  4131c1:	sbb    eax,0xf42d137b
  4131c6:	mov    esp,0xb5695f86
  4131cb:	lahf   
  4131cc:	bound  eax,QWORD PTR [ebx+0x402b18f5]
  4131d2:	xchg   edi,eax
  4131d3:	sub    edi,DWORD PTR [ecx+0x73cbe8c0]
  4131d9:	jo     0x413167
  4131db:	and    eax,0xc38923f
  4131e0:	dec    esp
  4131e1:	fst    QWORD PTR [edi+edi*4]
  4131e4:	in     eax,0x64
  4131e6:	xchg   ecx,eax
  4131e7:	mov    eax,ds:0x1240520c
  4131ec:	loope  0x413248
  4131ee:	shl    DWORD PTR [ebx-0x48],1
  4131f1:	pop    es
  4131f2:	mov    eax,0xbd558fae
  4131f7:	jle    0x413225
  4131f9:	inc    esi
  4131fa:	dec    eax
  4131fb:	or     al,0x1d
  4131fd:	and    al,0x99
  4131ff:	inc    ecx
  413200:	jg     0x4131ad
  413202:	sti    
  413203:	sbb    cl,0x1
  413206:	cmp    bh,BYTE PTR [edi]
  413208:	adc    eax,0x23c36056
  41320d:	or     BYTE PTR [edx],bl
  41320f:	fnstcw WORD PTR [eax+0x7f8c3bb4]
  413215:	fwait
  413216:	mov    al,0xd0
  413218:	cmp    dh,BYTE PTR [eax]
  41321a:	dec    ebx
  41321b:	push   ebp
  41321c:	lea    esp,[eax+0x12d9dbf7]
  413222:	add    esi,DWORD PTR [ecx+eax*1-0x5e]
  413226:	sub    eax,0xc
  413229:	test   BYTE PTR [edx-0x1a58a596],bh
  41322f:	jg     0x413235
  413231:	xchg   DWORD PTR [ebx],esp
  413233:	and    eax,0xb61f77d4
  413238:	out    0x86,al
  41323a:	jne    0x413250
  41323c:	ss inc esp
  41323e:	xor    edi,DWORD PTR [edx+0x58]
  413241:	mov    BYTE PTR [ecx+eax*8+0x42e0a535],al
  413248:	stos   BYTE PTR es:[edi],al
  413249:	xchg   BYTE PTR [edi-0x67],dh
  41324c:	pop    eax
  41324d:	or     DWORD PTR [ebp-0x52],ebp
  413250:	leave  
  413251:	shr    BYTE PTR [ebx],cl
  413253:	xor    eax,0xf345361f
  413258:	mov    dl,0xac
  41325a:	jl     0x413224
  41325c:	pop    edi
  41325d:	adc    al,0xbb
  41325f:	xchg   edx,eax
  413260:	mov    esi,0x171fdd2e
  413265:	loope  0x413200
  413267:	pop    eax
  413268:	pop    eax
  413269:	fimul  DWORD PTR [ecx+0x50]
  41326c:	mov    dl,0x5
  41326e:	sbb    BYTE PTR [eax+0x391df9f7],al
  413274:	imul   ecx,DWORD PTR [ecx-0x31],0xa88d4195
  41327b:	jb     0x413236
  41327d:	add    eax,0x3b93e48f
  413282:	(bad)  
  413283:	and    BYTE PTR [esi+0x52],cl
  413286:	div    esp
  413288:	push   0x3e070dd6
  41328d:	pop    edi
  41328e:	outs   dx,BYTE PTR ds:[esi]
  41328f:	sub    eax,0xb6fc0ee1
  413294:	push   esi
  413295:	jno    0x413288
  413297:	adc    DWORD PTR [eax-0x47c42dae],ecx
  41329d:	push   edi
  41329e:	icebp  
  41329f:	pop    esp
  4132a0:	mov    al,0x5b
  4132a2:	xor    bh,0x59
  4132a5:	retf   
  4132a6:	pushf  
  4132a7:	or     al,0xfa
  4132a9:	addr16 jae 0x41328e
  4132ac:	cmp    BYTE PTR [esi+0xbe4a0a5],ch
  4132b2:	dec    edx
  4132b3:	add    BYTE PTR [ecx],ch
  4132b5:	ret    0xec1f
  4132b8:	jb     0x4132dd
  4132ba:	or     BYTE PTR [ebp-0x19],bh
  4132bd:	mov    al,0xb1
  4132bf:	jp     0x4132a3
  4132c1:	imul   edx,DWORD PTR ds:0xfc48e20,0xe92bbb7b
  4132cb:	loope  0x41325c
  4132cd:	push   edx
  4132ce:	dec    edx
  4132cf:	gs inc esp
  4132d1:	mov    al,ds:0x81d5f6e7
  4132d6:	out    0x73,al
  4132d8:	or     al,0x68
  4132da:	jns    0x4132e4
  4132dc:	xor    ebp,esp
  4132de:	dec    esp
  4132df:	jnp    0x413299
  4132e1:	in     al,dx
  4132e2:	rcl    DWORD PTR [ebx],1
  4132e4:	icebp  
  4132e5:	mov    esi,0xb525037c
  4132ea:	call   0xae8f4b3e
  4132ef:	pop    ss
  4132f0:	sub    eax,0xea5c5355
  4132f5:	in     eax,dx
  4132f6:	ret    0xbde
  4132f9:	hlt    
  4132fa:	leave  
  4132fb:	stc    
  4132fc:	xchg   ebp,eax
  4132fd:	popa   
  4132fe:	stos   DWORD PTR es:[edi],eax
  4132ff:	test   al,0xc7
  413301:	pop    edi
  413302:	out    0x5b,eax
  413304:	ror    BYTE PTR [ecx+edx*4],0xe5
  413308:	out    0x7f,eax
  41330a:	out    0xe,al
  41330c:	lds    edi,FWORD PTR [ebx-0x71]
  41330f:	(bad)  
  413310:	xor    dl,ah
  413312:	mov    ah,0x5f
  413314:	jns    0x4132c4
  413316:	jmp    0xed46fa5f
  41331b:	fisttp DWORD PTR [ebp-0x39ec629e]
  413321:	xchg   ebp,eax
  413322:	je     0x4132fa
  413324:	or     BYTE PTR [ebx+0x60657b6b],bh
  41332a:	(bad)  
  41332b:	div    BYTE PTR [eax-0x1e]
  41332e:	loopne 0x4132b0
  413330:	ror    DWORD PTR [ebx+0x19],0xb8
  413334:	jnp    0x413353
  413336:	xchg   ebx,eax
  413337:	dec    ecx
  413338:	ret    
  413339:	lods   eax,DWORD PTR ds:[esi]
  41333a:	or     eax,0x58125584
  41333f:	daa    
  413340:	adc    esp,DWORD PTR [ecx+0x7d705c7c]
  413346:	inc    edi
  413347:	es (bad) 
  413349:	push   edx
  41334a:	push   edx
  41334b:	cmc    
  41334c:	push   ebp
  41334d:	fsub   DWORD PTR [eax-0x683bc98]
  413353:	shl    BYTE PTR [edx+0x10ef50b3],0xd4
  41335a:	or     al,0xe5
  41335c:	dec    edx
  41335d:	pop    esi
  41335e:	mov    dl,0x25
  413360:	fnstsw WORD PTR ds:0x6ae62485
  413366:	(bad)  
  413367:	rcl    BYTE PTR [ebx-0x66c350bf],0x22
  41336e:	popf   
  41336f:	inc    esp
  413370:	out    dx,eax
  413371:	add    DWORD PTR [eax+eax*8+0x370289ba],eax
  413378:	fnsave [eax-0x19]
  41337b:	or     DWORD PTR [ebp+0x5f],esi
  41337e:	iret   
  41337f:	jp     0x41336c
  413381:	mov    edi,0x77003970
  413386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413387:	fidivr WORD PTR es:[ebp-0x77]
  41338b:	cmp    edi,edx
  41338d:	mov    dh,0xea
  41338f:	push   ecx
  413390:	call   0x7cc85fff
  413395:	mov    esi,0xa056dbf7
  41339a:	add    DWORD PTR [edi],0xffffffc9
  41339d:	push   eax
  41339e:	int    0xf4
  4133a0:	cmp    ecx,DWORD PTR [ecx+0x47]
  4133a3:	mov    ebx,0x74a40a19
  4133a8:	sub    BYTE PTR [ecx+ebp*4-0x5e],0xbc
  4133ad:	and    DWORD PTR [ebx],ebp
  4133af:	jns    0x4133e3
  4133b1:	xor    ecx,edx
  4133b3:	push   0xffffff93
  4133b5:	and    edx,DWORD PTR [ecx+0x3bc20b5e]
  4133bb:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4133bd:	lods   al,BYTE PTR ds:[esi]
  4133be:	mov    ah,0x7b
  4133c0:	test   eax,0x9eeaf7
  4133c5:	(bad)  
  4133c6:	sar    eax,cl
  4133c8:	adc    ebx,DWORD PTR [ecx-0x71]
  4133cb:	pop    esp
  4133cc:	add    DWORD PTR ds:0xc56499d7,esp
  4133d2:	cmp    eax,0xd78c3c7
  4133d7:	das    
  4133d8:	jnp    0x413425
  4133da:	fwait
  4133db:	or     BYTE PTR [ecx],cl
  4133dd:	bswap  eax
  4133df:	lahf   
  4133e0:	jecxz  0x41339e
  4133e2:	push   es
  4133e3:	adc    BYTE PTR [ebp+0x11],0x2f
  4133e7:	mov    eax,0x719be1b7
  4133ec:	jb     0x41339c
  4133ee:	daa    
  4133ef:	aam    0x63
  4133f1:	lahf   
  4133f2:	push   ecx
  4133f3:	pop    esp
  4133f4:	add    DWORD PTR [edx-0x5],eax
  4133f7:	dec    ebx
  4133f8:	sub    dx,WORD PTR [esi]
  4133fb:	call   0xea09c4f0
  413400:	dec    ebp
  413401:	dec    esp
  413402:	push   ecx
  413403:	push   edx
  413404:	rcr    esi,0xd7
  413407:	outs   dx,BYTE PTR ds:[esi]
  413408:	ror    DWORD PTR [eax+0x3b7e4a8c],1
  41340e:	jl     0x413394
  413410:	pop    es
  413411:	stos   BYTE PTR es:[edi],al
  413412:	sbb    al,0xa9
  413414:	mov    ebp,0x4d3ccda1
  413419:	nop
  41341a:	pop    eax
  41341b:	mov    ebx,0x30e63b58
  413420:	sbb    DWORD PTR [eax],ecx
  413422:	inc    ecx
  413423:	cwde   
  413424:	cmp    BYTE PTR [edx+0x66],0x2b
  413428:	mov    al,0x30
  41342a:	and    ch,dh
  41342c:	test   eax,0xbe6fcc1
  413431:	dec    esi
  413432:	inc    ax
  413434:	icebp  
  413435:	xor    ecx,DWORD PTR fs:[esi-0x741ad170]
  41343c:	cld    
  41343d:	inc    ebp
  41343e:	gs mov bh,0xf4
  413441:	mov    ecx,0xf589d079
  413446:	das    
  413447:	xor    DWORD PTR [eax],0x2d747ee1
  41344d:	or     BYTE PTR [ebx+0x65f6db5c],ah
  413453:	fdivr  DWORD PTR [ecx]
  413455:	cmp    eax,0x9cb0c42e
  41345a:	(bad)  
  41345c:	in     eax,dx
  41345d:	retf   
  41345e:	and    ah,BYTE PTR [ebp-0xc]
  413461:	mov    WORD PTR [ebx-0x4b5f65d7],ss
  413467:	mov    al,0x9c
  413469:	mov    esp,0x4826d77c
  41346e:	stc    
  41346f:	(bad)  
  413470:	repnz dec esp
  413472:	inc    eax
  413473:	(bad)  
  413474:	sbb    eax,0xfe3a79d2
  413479:	mov    ebx,0x77a07702
  41347e:	xchg   WORD PTR [ebp+eiz*2+0x54fb760c],si
  413486:	jmp    0x1bd7:0x314758ce
  41348d:	push   esi
  41348e:	(bad)  
  41348f:	mov    DWORD PTR [ecx+ecx*4+0x5838ebe5],esp
  413496:	adc    al,0x40
  413498:	daa    
  413499:	or     DWORD PTR [ecx-0x7f590f46],esi
  41349f:	xchg   DWORD PTR [esi+eiz*2-0xbba1077],edi
  4134a6:	in     eax,0x14
  4134a8:	cmp    eax,0x3a239a66
  4134ad:	call   0x7525:0x6b78814b
  4134b4:	cwde   
  4134b5:	xor    BYTE PTR [eax-0x42],bl
  4134b8:	call   DWORD PTR [edi+0x6b1d44c2]
  4134be:	lahf   
  4134bf:	push   esp
  4134c0:	sub    al,0x67
  4134c2:	lock mov BYTE PTR [ecx-0x3d7a311d],bh
  4134c9:	call   FWORD PTR [edi-0x4e]
  4134cc:	out    dx,eax
  4134cd:	push   edi
  4134ce:	das    
  4134cf:	daa    
  4134d0:	push   esi
  4134d1:	dec    edi
  4134d2:	gs jnp 0x413530
  4134d5:	sbb    al,0x96
  4134d7:	js     0x4134b3
  4134d9:	iret   
  4134da:	mov    al,0xf9
  4134dc:	mov    DWORD PTR [edx-0x5e442dd5],ebp
  4134e2:	mov    al,0xc1
  4134e4:	in     al,0xd2
  4134e6:	push   esi
  4134e7:	test   ah,al
  4134e9:	call   0x24f9:0xc71f0718
  4134f0:	inc    edx
  4134f1:	or     al,BYTE PTR [edi]
  4134f3:	cli    
  4134f4:	aaa    
  4134f5:	or     BYTE PTR [ebp-0xf],dh
  4134f8:	push   0xffffffbb
  4134fa:	mov    eax,ds:0xb94ceec1
  4134ff:	xor    bl,BYTE PTR [ebp+0xaac7510]
  413505:	stos   BYTE PTR es:[edi],al
  413506:	push   edi
  413507:	mov    esp,DWORD PTR [edx+0x340b5498]
  41350d:	fstp   TBYTE PTR [ebp-0x7e391c54]
  413513:	xor    BYTE PTR [ecx+edi*8+0x11952d4c],0xe
  41351b:	(bad)  
  41351c:	cmp    al,0x25
  41351e:	lahf   
  41351f:	stos   DWORD PTR es:[edi],eax
  413520:	adc    eax,0x3f531bad
  413525:	inc    ebp
  413526:	je     0x413501
  413528:	scas   eax,DWORD PTR es:[edi]
  413529:	test   dl,al
  41352b:	ins    BYTE PTR es:[edi],dx
  41352c:	fcmove st,st(5)
  41352e:	(bad)  
  41352f:	mov    ds:0x73238a2a,al
  413534:	jno    0x413500
  413536:	test   ebp,eax
  413538:	lock fcom QWORD PTR [eax+0x6f]
  41353c:	arpl   WORD PTR [ecx-0x5c],dx
  41353f:	pop    edi
  413540:	mov    eax,0xfdffd96e
  413545:	dec    ebx
  413546:	imul   ecx,DWORD PTR [esi],0x8cfa50e0
  41354c:	or     al,0x5f
  41354e:	in     eax,0x27
  413550:	pop    es
  413551:	stos   DWORD PTR es:[edi],eax
  413552:	shl    DWORD PTR [eax+0x7b],0x60
  413556:	cld    
  413557:	dec    esp
  413558:	out    0xe9,al
  41355a:	dec    esi
  41355b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355c:	xchg   DWORD PTR [ebp-0x703b6aa0],ebx
  413562:	adc    al,0x56
  413564:	jle    0x413579
  413566:	in     al,0x60
  413568:	nop
  413569:	jmp    0x1b0987fa
  41356e:	xchg   edi,ecx
  413570:	retf   
  413571:	xchg   esp,eax
  413572:	pop    edi
  413573:	mov    DWORD PTR [edx+0x53a7bf21],edi
  413579:	jecxz  0x413596
  41357b:	test   eax,0x9454d390
  413580:	(bad)  
  413581:	adc    DWORD PTR [esi-0x76],edi
  413584:	je     0x413588
  413586:	inc    eax
  413587:	sbb    cl,BYTE PTR [ecx+0x38]
  41358a:	xchg   DWORD PTR [edx-0x36ac6aa5],eax
  413590:	add    BYTE PTR [ecx-0x39a22f07],dh
  413596:	pop    edi
  413597:	xor    eax,0xaaa46838
  41359c:	push   eax
  41359d:	sub    DWORD PTR fs:[ecx-0x339f8334],0xffffffed
  4135a5:	test   al,0x6d
  4135a7:	(bad)
  4135ab:	mov    edx,0xa17d87f4
  4135b0:	stos   DWORD PTR es:[edi],eax
  4135b1:	cmc    
  4135b2:	pop    eax
  4135b3:	mov    al,0x15
  4135b5:	sbb    DWORD PTR [ebx],edi
  4135b7:	stos   DWORD PTR es:[edi],eax
  4135b8:	mov    esi,0xf346dcbf
  4135bd:	sbb    eax,0xc34b5232
  4135c2:	add    ch,BYTE PTR [edi-0x1067d4d9]
  4135c8:	jnp    0x41360e
  4135ca:	popf   
  4135cb:	sahf   
  4135cc:	mov    edi,0x5aa96520
  4135d1:	hlt    
  4135d2:	jno    0x41360b
  4135d4:	fcom   QWORD PTR ds:0xc835e563
  4135da:	iret   
  4135db:	call   FWORD PTR [edx-0x1d]
  4135de:	sub    eax,DWORD PTR [edx]
  4135e0:	mul    ah
  4135e2:	sahf   
  4135e3:	adc    DWORD PTR [eax+0x8],ecx
  4135e6:	popa   
  4135e7:	retf   
  4135e8:	mov    ds:0x6d8833fd,al
  4135ed:	xor    ah,dl
  4135ef:	out    0x4e,al
  4135f1:	push   eax
  4135f2:	mov    edx,0x1ba42815
  4135f7:	pop    edi
  4135f8:	retf   0x8e2a
  4135fb:	jp     0x413632
  4135fd:	and    esi,DWORD PTR [edx]
  4135ff:	push   0x99523e5b
  413604:	xor    dl,BYTE PTR [eax-0x7b38028]
  41360a:	mov    eax,ds:0x3ed9567d
  41360f:	mov    BYTE PTR [edi],dh
  413611:	add    BYTE PTR [eax-0x4728fe9c],bl
  413617:	inc    edi
  413618:	fbstp  TBYTE PTR [edi]
  41361a:	or     al,BYTE PTR [ecx]
  41361c:	push   eax
  41361d:	icebp  
  41361e:	repz sbb ah,BYTE PTR [edx+esi*4]
  413622:	xchg   edi,eax
  413623:	mov    ah,0xa6
  413625:	ins    BYTE PTR es:[edi],dx
  413626:	je     0x413668
  413628:	ror    BYTE PTR [eax+0x58b8b807],cl
  41362e:	hlt    
  41362f:	mov    bl,0x52
  413631:	pop    ds
  413632:	sub    esp,ecx
  413634:	dec    ebp
  413635:	fwait
  413636:	or     al,0x36
  413638:	int3   
  413639:	mov    ebx,DWORD PTR [ebp+0x5e5eb1e0]
  41363f:	jle    0x4135f4
  413641:	xchg   edx,eax
  413642:	mov    WORD PTR [ecx+0x176af796],cs
  413648:	fcomp  QWORD PTR [edx+esi*2-0x85dfecf]
  41364f:	lods   al,BYTE PTR ds:[esi]
  413650:	(bad)  
  413651:	sbb    BYTE PTR [ecx],dl
  413653:	sar    al,1
  413655:	fsub   st,st(2)
  413657:	push   cs
  413658:	pusha  
  413659:	leave  
  41365a:	ja     0x4136d8
  41365c:	mov    ebp,DWORD PTR [edi-0x18960de5]
  413662:	lahf   
  413663:	scas   al,BYTE PTR es:[edi]
  413664:	int3   
  413665:	push   ss
  413666:	xchg   ebx,eax
  413667:	inc    esi
  413668:	jnp    0x4136c3
  41366a:	and    DWORD PTR [ebp+0x10d1b51c],0xffffff8d
  413671:	push   0x38b12aa5
  413676:	or     edx,DWORD PTR [ebp-0x3a]
  413679:	daa    
  41367a:	rcl    DWORD PTR [edi+0x719136d4],1
  413680:	push   0xffffffe5
  413682:	fcomi  st,st(5)
  413684:	jbe    0x4136d5
  413686:	sub    DWORD PTR [ebp-0x5d],esi
  413689:	xor    BYTE PTR [edx-0x36febfba],bh
  41368f:	ret    0x36a8
  413692:	frstor [ecx-0x4d4583cb]
  413698:	mov    BYTE PTR [edi],bl
  41369a:	lods   al,BYTE PTR ds:[esi]
  41369b:	add    ah,BYTE PTR [edx+0x230b0ef1]
  4136a1:	adc    eax,0xaebb36aa
  4136a6:	adc    eax,0x910e23a4
  4136ab:	mov    ?,WORD PTR [eax]
  4136ad:	push   esi
  4136ae:	and    BYTE PTR [eax-0x20f5d613],dh
  4136b4:	ins    DWORD PTR es:[edi],dx
  4136b5:	add    eax,0x293aa652
  4136ba:	and    ebp,DWORD PTR [ebp+0x7d]
  4136bd:	hlt    
  4136be:	sti    
  4136bf:	cs jns 0x413729
  4136c2:	or     esi,DWORD PTR [eax-0x13184ee7]
  4136c8:	mov    BYTE PTR [edi-0x4c],ah
  4136cb:	loop   0x413676
  4136cd:	and    eax,eax
  4136cf:	cld    
  4136d0:	or     eax,0xd729c9b1
  4136d5:	int3   
  4136d6:	mov    ebp,0x2cacd5d4
  4136db:	nop
  4136dc:	inc    ebx
  4136dd:	repnz dec DWORD PTR [edx]
  4136e0:	cmp    edx,DWORD PTR [edx-0x2c]
  4136e3:	pop    ds
  4136e4:	inc    esp
  4136e5:	not    DWORD PTR [eax-0x73ccd134]
  4136eb:	jno    0x4136b9
  4136ed:	lea    esp,[edi+0x2f]
  4136f0:	mov    edi,edi
  4136f2:	mov    cl,0xf5
  4136f4:	push   0xffffff95
  4136f6:	sbb    al,0x7f
  4136f8:	or     eax,0xc41444b1
  4136fd:	sub    eax,0xe8432484
  413702:	and    eax,0x69395064
  413707:	scas   al,BYTE PTR es:[edi]
  413708:	xchg   DWORD PTR [esi],edx
  41370a:	or     DWORD PTR [esi-0x35],ecx
  41370d:	xchg   esp,eax
  41370e:	ror    DWORD PTR [eax],cl
  413710:	hlt    
  413711:	nop
  413712:	je     0x41370e
  413714:	dec    esp
  413715:	push   esp
  413716:	mov    edx,0x53777fd4
  41371b:	nop
  41371c:	cmp    cl,BYTE PTR [ebp-0x725844d1]
  413722:	mov    WORD PTR [eax-0x9],ss
  413725:	fs fs sbb eax,0x61844c92
  41372c:	jb     0x413762
  41372e:	imul   ebp,ebx,0x4238e95b
  413734:	sbb    BYTE PTR [edx],ah
  413736:	popa   
  413737:	pop    edi
  413738:	in     eax,dx
  413739:	adc    al,0xdc
  41373b:	xchg   ecx,ebp
  41373d:	jmp    0x29eb:0x433130ac
  413744:	jns    0x4137a6
  413746:	mov    dh,0x5
  413748:	inc    edx
  413749:	pop    ss
  41374a:	rcr    DWORD PTR [edx+0x26031e50],cl
  413750:	out    dx,al
  413751:	cwde   
  413752:	(bad)  
  413753:	nop
  413754:	iret   
  413755:	push   esp
  413756:	std    
  413757:	sahf   
  413758:	out    0x90,eax
  41375a:	xor    BYTE PTR [ebp+0x5a],bl
  41375d:	lods   eax,DWORD PTR ds:[esi]
  41375e:	sub    al,0xd5
  413760:	dec    edx
  413761:	sub    ah,BYTE PTR [ebx+0x5]
  413764:	xchg   ebp,eax
  413765:	jle    0x413710
  413767:	sti    
  413768:	xor    edx,ecx
  41376a:	sbb    al,bh
  41376c:	xchg   DWORD PTR [esi-0x4c],edx
  41376f:	dec    ebp
  413770:	mov    dh,0x4
  413772:	test   eax,0x19570719
  413777:	ins    BYTE PTR es:[edi],dx
  413778:	cmp    eax,0x180692b6
  41377d:	fcomp  QWORD PTR [edi+0x49]
  413780:	dec    ecx
  413781:	mov    cl,0x77
  413783:	jns    0x4137bb
  413785:	mov    esi,0xa8a4f57c
  41378a:	into   
  41378b:	xchg   esp,eax
  41378c:	jmp    0x22bae40
  413791:	addr16 cs pop ebx
  413794:	bound  esp,QWORD PTR [ebx+0x624510bc]
  41379a:	fadd   st,st(3)
  41379c:	call   0xb0ff7319
  4137a1:	push   0x1af1d601
  4137a6:	push   0x3d
  4137a8:	fwait
  4137a9:	jne    0x4137f6
  4137ab:	ins    DWORD PTR es:[edi],dx
  4137ac:	outs   dx,BYTE PTR ds:[esi]
  4137ad:	xchg   edi,eax
  4137ae:	xor    dh,BYTE PTR [esi]
  4137b0:	test   eax,0xd37a164f
  4137b5:	mov    ds:0x4e259be4,eax
  4137ba:	ins    BYTE PTR es:[edi],dx
  4137bb:	out    dx,eax
  4137bc:	out    0x9f,al
  4137be:	mov    DWORD PTR [edx+0x50],eax
  4137c1:	or     eax,DWORD PTR [esi+ebp*4+0x30f24ec1]
  4137c8:	inc    esp
  4137c9:	inc    esi
  4137ca:	ret    0xa056
  4137cd:	mov    eax,0x812d68e6
  4137d2:	(bad)  
  4137d3:	ins    BYTE PTR es:[edi],dx
  4137d4:	inc    ecx
  4137d5:	xchg   ecx,eax
  4137d6:	sub    bh,bl
  4137d8:	and    al,0x52
  4137da:	nop
  4137db:	mov    al,ds:0xde8b2f31
  4137e0:	rol    BYTE PTR [esp+eiz*2-0xd],cl
  4137e4:	mov    ch,0x8f
  4137e6:	adc    eax,0xc029d8ca
  4137eb:	push   esi
  4137ec:	mov    ah,0x29
  4137ee:	arpl   WORD PTR [edi+0x315a96d4],ax
  4137f4:	lods   al,BYTE PTR ds:[esi]
  4137f5:	add    BYTE PTR [edi+0x5c49cbf9],0xd0
  4137fc:	inc    ebp
  4137fd:	xchg   edx,eax
  4137fe:	mov    eax,ds:0xecb96314
  413803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413804:	sahf   
  413805:	fidivr DWORD PTR [esi]
  413807:	or     dl,ch
  413809:	das    
  41380a:	sbb    BYTE PTR [edx+0x22300873],dl
  413810:	dec    ecx
  413811:	adc    edx,DWORD PTR [edx*4-0x2cefa9d6]
  413818:	or     DWORD PTR [ebx-0x53],0x77
  41381c:	es add al,0xce
  41381f:	gs icebp 
  413821:	(bad)  
  413822:	mov    ds:0xfaf72c3e,al
  413827:	xor    al,BYTE PTR [ecx+0x54]
  41382a:	mov    ds,WORD PTR [edi-0x1ecab6f0]
  413830:	ins    BYTE PTR es:[edi],dx
  413831:	repnz inc ecx
  413833:	pop    edx
  413834:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413836:	es in  al,dx
  413838:	xor    dl,BYTE PTR [ebx+0x48]
  41383b:	add    al,0xa6
  41383d:	pop    edx
  41383e:	test   eax,0x4e72d89c
  413843:	lahf   
  413844:	add    DWORD PTR [eax],edi
  413846:	sub    al,0x98
  413848:	push   esp
  413849:	(bad)  
  41384a:	sbb    eax,0x2ee1fae1
  41384f:	pop    ds
  413850:	js     0x41381f
  413852:	sahf   
  413853:	mov    bh,0xe4
  413855:	repz daa 
  413857:	repz push es
  413859:	cmp    DWORD PTR [edx],ebp
  41385b:	or     DWORD PTR [ebp-0x79ee039d],0x2565b6af
  413865:	mov    dl,0x63
  413867:	fidiv  DWORD PTR [ebp-0x3cdb0e40]
  41386d:	cwde   
  41386e:	call   0xa689:0x1f1a69e
  413875:	test   BYTE PTR [edx+0x65180da9],dl
  41387b:	jno    0x4138ef
  41387d:	cmp    DWORD PTR [ebx+eiz*4],esi
  413880:	xor    eax,0xb29e21ab
  413885:	jmp    0xf9d5d6fc
  41388a:	inc    ebp
  41388b:	sub    DWORD PTR [edi+0x74d4b0b6],eax
  413891:	fcmovbe st,st(1)
  413893:	fld    st(3)
  413895:	inc    edi
  413896:	mov    eax,0x94b71e6f
  41389b:	push   ebx
  41389c:	int3   
  41389d:	inc    ebp
  41389e:	add    ah,BYTE PTR [eax-0x49]
  4138a1:	cmp    DWORD PTR [ecx],esi
  4138a3:	adc    DWORD PTR [ecx-0x7aab4328],0x7620cc66
  4138ad:	push   eax
  4138ae:	shl    BYTE PTR [ebx+esi*1+0x5b],0xcf
  4138b3:	jle    0x4138d4
  4138b5:	pop    ebx
  4138b6:	mov    al,0x8d
  4138b8:	in     eax,dx
  4138b9:	in     al,0x2a
  4138bb:	pop    esi
  4138bc:	lods   eax,DWORD PTR ds:[esi]
  4138bd:	pop    ebp
  4138be:	mov    ebp,0xa69eb7
  4138c3:	inc    ecx
  4138c4:	jecxz  0x413930
  4138c6:	or     dl,ch
  4138c8:	or     BYTE PTR [esi+0x71],dh
  4138cb:	xchg   ecx,eax
  4138cc:	in     al,0x1c
  4138ce:	out    0xf9,eax
  4138d0:	cwde   
  4138d1:	adc    ebx,DWORD PTR [edx-0x2ea25a13]
  4138d7:	(bad)  
  4138d8:	mov    esi,0xd0239e31
  4138dd:	pop    esi
  4138de:	mov    DWORD PTR [edx],ecx
  4138e0:	mov    BYTE PTR [edx+eiz*2-0x10],dl
  4138e4:	add    edi,0x7c
  4138e7:	shl    DWORD PTR [ebp+0x4f0edfd6],1
  4138ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ee:	pop    esi
  4138ef:	dec    eax
  4138f0:	fwait
  4138f1:	xchg   ecx,eax
  4138f2:	ret    
  4138f3:	lock popa 
  4138f5:	rcl    dl,cl
  4138f7:	test   esi,ebx
  4138f9:	out    dx,eax
  4138fa:	add    dl,BYTE PTR [esi-0x1e]
  4138fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138fe:	(bad)  
  4138ff:	xchg   ebp,eax
  413900:	int    0xb2
  413902:	sahf   
  413903:	fs xchg edx,eax
  413905:	xor    DWORD PTR [ebx],ebp
  413907:	es cdq 
  413909:	adc    DWORD PTR [edx],0x6f7bf6aa
  41390f:	jb     0x4138ed
  413911:	jb     0x4138ff
  413913:	ret    
  413914:	mov    cl,dh
  413916:	jb     0x4138da
  413918:	xor    BYTE PTR [ebx],dh
  41391a:	push   esi
  41391b:	cmp    BYTE PTR [ebx+0x2f],ch
  41391e:	gs leave 
  413920:	mov    ds:0x202ea952,eax
  413925:	jns    0x413950
  413927:	iret   
  413928:	xchg   BYTE PTR [esi],cl
  41392a:	retf   
  41392b:	xchg   esi,eax
  41392c:	jb     0x413944
  41392e:	mov    DWORD PTR ds:0x4e42d48,ecx
  413934:	mov    ah,0x25
  413936:	push   cs
  413937:	pop    ecx
  413938:	xchg   esp,eax
  413939:	and    BYTE PTR [ecx+0x2c84758b],al
  41393f:	push   esi
  413940:	mov    ebp,DWORD PTR [ecx+eiz*4-0x3d]
  413944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413945:	mov    bl,0xf4
  413947:	pop    esp
  413948:	add    DWORD PTR [edx],edi
  41394a:	cli    
  41394b:	jl     0x41392c
  41394d:	fnstsw ax
  41394f:	pop    edx
  413950:	out    dx,eax
  413951:	xchg   ebp,eax
  413952:	out    dx,al
  413953:	and    eax,0x1be32741
  413958:	je     0x413927
  41395a:	clc    
  41395b:	test   BYTE PTR [esi],0xdf
  41395e:	jmp    0x4138fd
  413960:	push   ebp
  413961:	xchg   ebx,eax
  413962:	sub    ah,BYTE PTR [edi]
  413964:	mov    edx,?
  413966:	dec    edx
  413967:	push   cs
  413968:	adc    BYTE PTR [edx+edx*1+0x35240c27],bl
  41396f:	fnsave [eax+ecx*1]
  413972:	sbb    ah,BYTE PTR [esi]
  413974:	lea    esp,[ebp+0x70]
  413977:	shr    BYTE PTR [esi+edx*2-0x4e6a1d9f],1
  41397e:	fidivr DWORD PTR [edi-0x4f164f5c]
  413984:	fsubr  DWORD PTR [esi+0x33]
  413987:	dec    ecx
  413988:	adc    al,0x75
  41398a:	int3   
  41398b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398c:	cli    
  41398d:	push   ebx
  41398e:	xchg   ebx,eax
  41398f:	fistp  WORD PTR [ebx+0x50]
  413992:	jnp    0x41397d
  413994:	or     edi,DWORD PTR [eax-0x1517c909]
  41399a:	repz mov ah,0x75
  41399d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399e:	int    0x19
  4139a0:	shr    ebp,cl
  4139a2:	xchg   esi,eax
  4139a3:	nop
  4139a4:	mov    ch,0x42
  4139a6:	ds or  eax,0xb33e3fad
  4139ac:	push   0xffffff82
  4139ae:	add    al,BYTE PTR [ebx-0x31da37e1]
  4139b4:	mov    ebx,0x282aec0f
  4139b9:	bound  edi,QWORD PTR [ecx+ebp*8-0x6a]
  4139bd:	add    DWORD PTR [ebx+ecx*1-0x29efcba4],edx
  4139c4:	sbb    al,BYTE PTR [edi+esi*8]
  4139c7:	imul   eax,DWORD PTR [edx],0x5422166a
  4139cd:	dec    edx
  4139ce:	add    al,0x9c
  4139d0:	mov    al,ds:0x7c4bd2e6
  4139d5:	mov    gs,WORD PTR [edi+0xa]
  4139d8:	sub    esi,ecx
  4139da:	sub    al,0xd6
  4139dc:	sbb    BYTE PTR [esp+ebp*1+0x651cf279],bh
  4139e3:	adc    esi,edx
  4139e5:	pop    ebx
  4139e6:	(bad)  
  4139e7:	(bad)  
  4139e9:	pop    esi
  4139ea:	icebp  
  4139eb:	dec    edx
  4139ec:	adc    ch,0x35
  4139ef:	add    DWORD PTR [ecx+0x41b2a442],eax
  4139f5:	sbb    ecx,DWORD PTR [ebp+0x7d]
  4139f8:	imul   edx,eax,0x8d37f2e
  4139fe:	cwde   
  4139ff:	ficom  DWORD PTR [esi]
  413a01:	icebp  
  413a02:	leave  
  413a03:	jo     0x413a0d
  413a05:	aad    0xff
  413a07:	arpl   WORD PTR [esi],ax
  413a09:	jecxz  0x413a18
  413a0b:	ret    0x17cd
  413a0e:	push   es
  413a0f:	mov    ds:0x45079f3d,al
  413a14:	mov    ch,0xd0
  413a16:	push   cs
  413a17:	inc    ebp
  413a18:	call   DWORD PTR [ebp-0x9ac7654]
  413a1e:	cmp    al,0xc1
  413a20:	clc    
  413a21:	jl     0x413a48
  413a23:	push   0xffffffb6
  413a25:	dec    ebp
  413a26:	push   ecx
  413a27:	cmc    
  413a28:	cmp    al,0x32
  413a2a:	out    0x95,al
  413a2c:	cld    
  413a2d:	mov    eax,ds:0x6cd69c29
  413a32:	ins    DWORD PTR es:[edi],dx
  413a33:	lea    ebx,[edx+0x4d179ff2]
  413a39:	pop    esp
  413a3a:	and    al,0x31
  413a3c:	cmc    
  413a3d:	dec    edi
  413a3e:	jecxz  0x413a86
  413a40:	add    esi,esi
  413a42:	pop    edx
  413a43:	enter  0xddd8,0xc0
  413a47:	in     al,0x18
  413a49:	pop    ss
  413a4a:	das    
  413a4b:	sub    al,BYTE PTR [edx+0x3cd1c41a]
  413a51:	push   ecx
  413a52:	push   ebx
  413a53:	mov    edi,ebx
  413a55:	adc    edi,DWORD PTR [edx]
  413a57:	mov    bh,0xb9
  413a59:	or     DWORD PTR [eax+ecx*2+0x58],esp
  413a5d:	cmc    
  413a5e:	test   ebx,esi
  413a60:	and    DWORD PTR [ebx+edx*2+0x40],eax
  413a64:	push   ss
  413a65:	push   esi
  413a66:	cmp    BYTE PTR ds:0xc132ff7,0x72
  413a6d:	pop    es
  413a6e:	sar    BYTE PTR [ecx+esi*4+0x26],0x47
  413a73:	pop    edx
  413a74:	pusha  
  413a75:	adc    eax,0xeee65ac4
  413a7a:	pop    ecx
  413a7b:	(bad)  
  413a7c:	sar    BYTE PTR [ecx+edi*8-0x5e],1
  413a80:	retf   0xbf3e
  413a83:	loope  0x413a3a
  413a85:	mov    ebp,DWORD PTR [edx-0x7d]
  413a88:	dec    eax
  413a89:	js     0x413afa
  413a8b:	cs mov ch,0xe3
  413a8e:	jecxz  0x413a20
  413a90:	inc    eax
  413a91:	add    eax,0x5d31d235
  413a96:	cmp    eax,0xbc11e133
  413a9b:	popf   
  413a9c:	jo     0x413a8b
  413a9e:	and    dl,bl
  413aa0:	xchg   ebx,eax
  413aa1:	push   es
  413aa2:	mov    WORD PTR [eax-0x2f],fs
  413aa5:	xlat   BYTE PTR ds:[ebx]
  413aa6:	pop    es
  413aa7:	int    0x53
  413aa9:	sbb    dh,cl
  413aab:	leave  
  413aac:	ja     0x413a6f
  413aae:	add    eax,0xd3dd73a6
  413ab3:	jae    0x413a44
  413ab5:	outs   dx,BYTE PTR ds:[esi]
  413ab6:	push   ebx
  413ab8:	xor    DWORD PTR [ebp+0x20],esi
  413abb:	pop    ebp
  413abc:	icebp  
  413abd:	push   ebx
  413abe:	dec    ecx
  413abf:	push   edx
  413ac0:	repnz stos DWORD PTR es:[edi],eax
  413ac2:	dec    ebp
  413ac3:	sub    eax,0xe08e835a
  413ac8:	(bad)  
  413ac9:	adc    ch,ch
  413acb:	and    al,0x45
  413acd:	loope  0x413b19
  413acf:	sub    DWORD PTR [ebx],ebp
  413ad1:	lea    ecx,[ebp+0x66]
  413ad4:	ror    DWORD PTR [edi],1
  413ad6:	fstp   QWORD PTR [eax+esi*1]
  413ad9:	(bad)  
  413ada:	imul   esp,DWORD PTR [edi],0xffffffdd
  413add:	pop    es
  413ade:	mov    ch,0xbb
  413ae0:	test   BYTE PTR [edi-0x1b9f0c38],ch
  413ae6:	addr16 (bad) 
  413ae8:	(bad)  
  413ae9:	sub    eax,0x77af5fba
  413aee:	or     bl,BYTE PTR [bx+di+0x4e4b]
  413af3:	mov    dl,0x3b
  413af5:	or     esi,DWORD PTR [ebp+0x65]
  413af8:	sub    eax,0xb140e583
  413afd:	jg     0x413a9b
  413aff:	jge    0x413ad6
  413b01:	sub    ah,bh
  413b03:	inc    ebp
  413b04:	fst    st(0)
  413b06:	addps  xmm5,XMMWORD PTR [edx-0x7fb95755]
  413b0d:	into   
  413b0e:	cld    
  413b0f:	push   0x8974ad67
  413b14:	scas   al,BYTE PTR es:[edi]
  413b15:	(bad)  
  413b16:	sub    al,0xf2
  413b18:	cmp    eax,0xcf5d402b
  413b1d:	addr16 and al,0x26
  413b20:	hlt    
  413b21:	aam    0x27
  413b23:	ficomp WORD PTR [esi+0x45e9316d]
  413b29:	lds    eax,FWORD PTR [ebp-0x4f15849b]
  413b2f:	mov    bl,0x71
  413b31:	addr16 mov ds:0x691e,al
  413b35:	sub    al,0x94
  413b37:	les    esp,FWORD PTR [esi+0x7d]
  413b3a:	call   0x8f27217e
  413b3f:	outs   dx,BYTE PTR ds:[esi]
  413b40:	xchg   edi,eax
  413b41:	fcmovb st,st(7)
  413b43:	xor    eax,0x5633f8fa
  413b48:	mov    eax,ds:0x564f3fdd
  413b4d:	ja     0x413b12
  413b4f:	lods   eax,DWORD PTR ds:[esi]
  413b50:	push   esi
  413b51:	cmp    al,0xa5
  413b53:	lods   al,BYTE PTR ds:[esi]
  413b54:	dec    esp
  413b55:	popf   
  413b56:	add    BYTE PTR [ebp+0xe],al
  413b59:	xor    DWORD PTR [ecx+0x1e],ebp
  413b5c:	xchg   BYTE PTR ds:0x16334d6b,bh
  413b62:	inc    ebp
  413b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b64:	ret    0x6af9
  413b67:	ret    0xac49
  413b6a:	sub    DWORD PTR [edx+0x4a],esp
  413b6d:	pop    edx
  413b6e:	sbb    DWORD PTR [edi+0x11371402],0x9e07ed73
  413b78:	repz mov ?,WORD PTR [eax-0x33]
  413b7c:	push   eax
  413b7d:	push   ecx
  413b7e:	outs   dx,DWORD PTR ds:[esi]
  413b7f:	retf   
  413b80:	aaa    
  413b81:	mov    dl,0x5b
  413b83:	int    0x77
  413b85:	test   edi,edi
  413b87:	js     0x413be4
  413b89:	push   ecx
  413b8a:	xlat   BYTE PTR ds:[ebx]
  413b8b:	popf   
  413b8c:	stos   DWORD PTR es:[edi],eax
  413b8d:	lods   eax,DWORD PTR ds:[esi]
  413b8e:	push   eax
  413b8f:	mov    al,0xb
  413b91:	mov    bh,0x96
  413b93:	shl    BYTE PTR ds:0x148a0e8e,1
  413b99:	in     eax,0x84
  413b9b:	(bad)  
  413b9c:	fxam   
  413b9e:	stos   BYTE PTR es:[edi],al
  413b9f:	xchg   DWORD PTR [ebx+0x3c],eax
  413ba2:	pop    eax
  413ba3:	mov    ebx,0xf11d35a5
  413ba8:	xchg   ebx,eax
  413ba9:	repz frstor ds:0x9ed08c10
  413bb0:	dec    ebx
  413bb1:	retf   0xe50f
  413bb4:	dec    edx
  413bb5:	lods   eax,DWORD PTR ds:[esi]
  413bb6:	mov    eax,ds:0x9445ce05
  413bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bbc:	dec    esi
  413bbd:	sbb    BYTE PTR [esp+eax*2],dl
  413bc0:	jno    0x413c06
  413bc2:	outs   dx,BYTE PTR ds:[esi]
  413bc3:	push   cs
  413bc4:	loopne 0x413bfb
  413bc6:	mov    al,0x5e
  413bc8:	or     cl,ch
  413bca:	and    DWORD PTR ds:0x592ecb63,ebp
  413bd0:	(bad)  
  413bd1:	out    0x8c,eax
  413bd3:	cmp    BYTE PTR [ebx],ah
  413bd5:	cmp    al,0x2e
  413bd7:	ja     0x413be4
  413bd9:	xchg   edx,eax
  413bda:	add    BYTE PTR [edi-0x12],bl
  413bdd:	call   0x904a9e7e
  413be2:	mov    eax,0x33f84d8b
  413be7:	enter  0x458b,0x10
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	rol    ebp,0x38
  413d47:	push   0x47694c35
  413d4c:	xchg   edx,eax
  413d4d:	mov    ebx,DWORD PTR [ebx]
  413d4f:	popf   
  413d50:	add    ebp,DWORD PTR [ebp+0x105a3]
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
