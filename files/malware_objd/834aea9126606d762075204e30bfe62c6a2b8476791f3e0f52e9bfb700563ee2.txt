
834aea9126606d762075204e30bfe62c6a2b8476791f3e0f52e9bfb700563ee2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428441,0x4284e1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428465,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42834d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428459,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428421
  40104f:	xor    DWORD PTR ds:0x428565,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	and    ah,BYTE PTR ss:[edx-0x41414170]
  401070:	mov    esi,0xbebec4bd
  401075:	ja     0x4010de
  401077:	push   esi
  401078:	ret    0x3e16
  40107b:	out    0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	xchg   BYTE PTR [edi],bl
  401085:	(bad)  
  401086:	mov    edi,0x6e65c5dd
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    esp,FWORD PTR [edi]
  4010cf:	fisub  WORD PTR [eax+edi*4-0x3c13b6c5]
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [edi],ecx
  4010da:	jle    0x4010f5
  4010dc:	pop    ebp
  4010dd:	push   0x4c
  4010df:	call   0x4dd0:0x92a9d55b
  4010e6:	sbb    al,0x7d
  4010e8:	mov    dh,0xd
  4010ea:	in     eax,dx
  4010eb:	sbb    edx,esi
  4010ed:	shl    DWORD PTR [ebx+0x6f057026],1
  4010f3:	xor    dh,BYTE PTR [ebp+0x192828f1]
  4010f9:	inc    ecx
  4010fa:	jecxz  0x40115e
  4010fc:	mov    dl,0x5
  4010fe:	mov    eax,ds:0x7ec2a545
  401103:	mov    eax,0x13af2f9
  401108:	cmp    edi,DWORD PTR [esp+eax*2+0xa]
  40110c:	and    bh,al
  40110e:	test   DWORD PTR [eax],ecx
  401110:	push   edx
  401111:	adc    BYTE PTR [ecx+0x7f],0xa2
  401115:	and    ebx,0xf0386e52
  40111b:	sub    BYTE PTR [ebp-0x7c7e471e],dl
  401121:	mov    bl,0x53
  401123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401124:	mov    esp,0xbff994db
  401129:	push   0xffffffc6
  40112b:	es popf 
  40112d:	hlt    
  40112e:	loop   0x4011a3
  401130:	mov    dl,0x3a
  401132:	loope  0x40111b
  401134:	xor    DWORD PTR [ebx+0x6619203b],edx
  40113a:	and    eax,0x6562b37d
  40113f:	jle    0x40113c
  401141:	sub    eax,0xc5aa1b69
  401146:	mov    dl,0xc5
  401148:	and    ch,ah
  40114a:	dec    esi
  40114b:	sub    DWORD PTR [ecx+eiz*8+0x4f93155],edx
  401152:	dec    eax
  401153:	lock inc ebx
  401155:	mov    ebp,0x433aafac
  40115a:	push   cs
  40115b:	aad    0xbe
  40115d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40115e:	ret    0xf427
  401161:	mov    eax,DWORD PTR [edx]
  401163:	cmc    
  401164:	ficom  WORD PTR [edi]
  401166:	or     edx,ecx
  401168:	mov    esp,0x1e15fc13
  40116d:	mov    dl,0x18
  40116f:	popa   
  401170:	mov    esi,0xb192eadf
  401175:	mov    al,ds:0x9eaf639
  40117a:	add    DWORD PTR [ebx-0x5ace51f0],esi
  401180:	xchg   esi,eax
  401181:	xor    DWORD PTR [ebp+0x5f8f9f40],ebx
  401187:	stos   DWORD PTR es:[edi],eax
  401188:	and    BYTE PTR [ebx-0x666e6e50],0x3e
  40118f:	nop
  401190:	(bad)  
  401192:	mov    edx,DWORD PTR [esi]
  401194:	push   es
  401195:	mov    esi,0x2b91ae4e
  40119a:	je     0x4011e1
  40119c:	pop    ecx
  40119d:	adc    al,0xbd
  40119f:	std    
  4011a0:	popa   
  4011a1:	retf   
  4011a2:	repnz pop ss
  4011a4:	lods   eax,DWORD PTR ds:[esi]
  4011a5:	cld    
  4011a6:	shl    ch,0xed
  4011a9:	sub    DWORD PTR [eax+ecx*2+0x499ec585],0xf4952b32
  4011b4:	push   0x5abb5122
  4011b9:	pop    ss
  4011ba:	stos   BYTE PTR es:[edi],al
  4011bb:	fbstp  TBYTE PTR [esi+0x3e10513f]
  4011c1:	xor    eax,0x97e092a9
  4011c6:	mov    DWORD PTR [ecx+0x590987b6],ebx
  4011cc:	cmp    ebp,DWORD PTR [edx-0x28]
  4011cf:	cmp    edx,DWORD PTR [ebx]
  4011d1:	enter  0xfa41,0x51
  4011d5:	in     eax,0x77
  4011d7:	dec    ebp
  4011d8:	inc    esi
  4011d9:	xchg   edi,eax
  4011da:	in     al,dx
  4011db:	dec    edi
  4011dc:	mov    ebx,0x79e4eb1f
  4011e1:	shl    BYTE PTR [ebx],1
  4011e3:	scas   al,BYTE PTR es:[edi]
  4011e4:	jmp    FWORD PTR [ebp+0x18b702c]
  4011ea:	mov    WORD PTR [ebx+0x20],?
  4011ed:	ins    BYTE PTR es:[edi],dx
  4011ee:	pop    es
  4011ef:	ret    0xca10
  4011f2:	mov    bl,0x38
  4011f4:	fndisi(8087 only) 
  4011f6:	rcr    DWORD PTR [eax-0x55af366f],cl
  4011fc:	adc    DWORD PTR [esi+0x1d6fbada],esi
  401202:	mov    ebp,0xe7fb8fb1
  401207:	mov    eax,ds:0xc460902a
  40120c:	cmp    cl,BYTE PTR [eax]
  40120e:	(bad)  
  40120f:	mov    ebp,0xeb99dad5
  401214:	adc    al,0xc7
  401216:	iret   
  401217:	mov    ah,cl
  401219:	rol    BYTE PTR [esi],0xda
  40121c:	dec    edi
  40121d:	(bad)
  401220:	push   0x4df05f48
  401225:	loope  0x401207
  401227:	push   edx
  401228:	aam    0x9f
  40122a:	cld    
  40122b:	rcr    DWORD PTR [ecx-0x1eafec63],1
  401231:	adc    DWORD PTR [edx-0x7d],edi
  401234:	mov    ah,0x32
  401236:	mov    edi,0x585220f9
  40123b:	mov    eax,ds:0x9d8d91d5
  401240:	mov    dl,0x59
  401242:	pushf  
  401243:	fistp  QWORD PTR [ebx]
  401245:	je     0x40124f
  401247:	add    ebx,DWORD PTR [esi-0x3fb6cd1a]
  40124d:	mov    ds:0x883b7e6b,al
  401252:	outs   dx,BYTE PTR ds:[esi]
  401253:	loop   0x401289
  401255:	xchg   dh,dh
  401257:	ja     0x401269
  401259:	push   eax
  40125a:	aad    0xa9
  40125c:	sti    
  40125d:	or     DWORD PTR [ebp-0x9807773],0xffffffbc
  401264:	pop    es
  401265:	jecxz  0x40128f
  401267:	jmp    0xf7f4:0xd3d11203
  40126e:	adc    eax,0x7b07d87b
  401273:	jp     0x4012d8
  401275:	enter  0x418f,0xa7
  401279:	mov    DWORD PTR [edi+0x2f38e957],eax
  40127f:	inc    edx
  401280:	sub    dl,0x3a
  401283:	adc    edx,DWORD PTR ds:[ebp-0x2e]
  401287:	mov    DWORD PTR [edi],eax
  401289:	mov    ecx,0xec64e9ae
  40128e:	pop    edx
  40128f:	dec    eax
  401290:	push   ds
  401291:	sub    DWORD PTR [eax-0x24],ebp
  401294:	pop    eax
  401295:	sub    BYTE PTR [edi],dl
  401297:	pop    ebp
  401298:	sbb    DWORD PTR [edx],ecx
  40129a:	or     ecx,DWORD PTR [ecx]
  40129c:	data16 adc BYTE PTR [esi+ebp*4+0x795c0e19],ah
  4012a4:	scas   eax,DWORD PTR es:[edi]
  4012a5:	aaa    
  4012a6:	(bad)  
  4012a7:	(bad)  
  4012a8:	push   cs
  4012a9:	ins    DWORD PTR es:[edi],dx
  4012aa:	pushf  
  4012ab:	mov    bl,0x3d
  4012ad:	retf   0xf926
  4012b0:	gs aam 0x7c
  4012b3:	push   ebp
  4012b4:	push   edx
  4012b5:	pop    es
  4012b6:	daa    
  4012b7:	xchg   si,ax
  4012b9:	adc    DWORD PTR [edx-0x37],esp
  4012bc:	je     0x401274
  4012be:	stos   DWORD PTR es:[edi],eax
  4012bf:	cs dec ecx
  4012c1:	add    eax,0x4c834924
  4012c6:	mov    ecx,es
  4012c8:	and    BYTE PTR [edx+0x1d5a15c3],0x8a
  4012cf:	jae    0x401296
  4012d1:	dec    eax
  4012d2:	loopne 0x401291
  4012d4:	out    dx,al
  4012d5:	pop    ds
  4012d6:	cmc    
  4012d7:	jg     0x4012da
  4012d9:	ss ins BYTE PTR es:[edi],dx
  4012db:	inc    DWORD PTR [eax+0x33]
  4012de:	push   edx
  4012df:	cmc    
  4012e0:	dec    edi
  4012e1:	outs   dx,BYTE PTR ds:[esi]
  4012e2:	pop    edi
  4012e3:	add    eax,0x94017271
  4012e8:	and    BYTE PTR [edi+0x41],dl
  4012eb:	xchg   edi,eax
  4012ec:	mul    BYTE PTR [ecx+0x72ef432e]
  4012f2:	rol    BYTE PTR ds:0xd009f711,0xfb
  4012f9:	or     BYTE PTR [ebp+ecx*2-0x3961ee78],ch
  401300:	xchg   esi,eax
  401301:	lahf   
  401302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401303:	jmp    0xefa3bc0a
  401308:	gs aaa 
  40130a:	icebp  
  40130b:	jle    0x401386
  40130d:	(bad)  
  40130e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40130f:	inc    esp
  401310:	test   al,0x8
  401312:	push   edi
  401313:	addr16 mov esp,0x921756c5
  401319:	xor    DWORD PTR [ebp+0x63e86e47],edx
  40131f:	test   al,0x94
  401321:	adc    ecx,DWORD PTR [ebp+0x79]
  401324:	ds enter 0x3e5e,0x57
  401329:	mov    bh,0xf8
  40132b:	repz sbb al,0x49
  40132e:	mov    BYTE PTR [edi-0x862b2b4],cl
  401334:	mov    dl,0x78
  401336:	push   ebp
  401337:	push   ecx
  401338:	stos   BYTE PTR es:[edi],al
  401339:	popa   
  40133a:	retf   
  40133b:	cmp    dh,BYTE PTR [edi+0x5cea2d7a]
  401341:	lea    ecx,[esi-0x62778a12]
  401347:	pushf  
  401348:	add    ch,BYTE PTR [edx+0x1638bbbe]
  40134e:	retf   0x5403
  401351:	adc    DWORD PTR [ecx-0x167b036c],0xffffffae
  401358:	sbb    al,0x91
  40135a:	sar    BYTE PTR [eax],0x15
  40135d:	(bad)  
  40135e:	xor    eax,0xb3e745e4
  401363:	add    al,0xb8
  401365:	outs   dx,DWORD PTR ds:[esi]
  401366:	lds    ebx,FWORD PTR [bx+si]
  401369:	ins    BYTE PTR es:[edi],dx
  40136a:	(bad)  
  40136b:	int    0x73
  40136d:	adc    eax,0x7ac19eaa
  401372:	sub    ecx,DWORD PTR [esi+0x6c]
  401375:	pop    ss
  401376:	jmp    0x4013d7
  401378:	pop    ebp
  401379:	mov    DWORD PTR [eax+0x166354ea],ebp
  40137f:	fidivr WORD PTR [edi+0x75]
  401382:	loopne 0x4013ef
  401384:	in     al,dx
  401385:	mov    dh,0xd8
  401387:	cmp    eax,0x545406d
  40138c:	or     dl,BYTE PTR [ebp+0x74]
  40138f:	jo     0x40134e
  401391:	mov    ecx,?
  401393:	(bad)  
  401394:	pop    esi
  401395:	and    dh,BYTE PTR [eax-0x3c5ba96c]
  40139b:	ins    DWORD PTR es:[edi],dx
  40139c:	pop    ebp
  40139d:	sbb    eax,0xea7da96e
  4013a2:	les    edx,FWORD PTR [edi]
  4013a4:	and    eax,0xe21ad9e8
  4013a9:	pop    ebp
  4013aa:	cmc    
  4013ab:	test   al,0x58
  4013ad:	fs sbb al,0xa3
  4013b0:	out    dx,al
  4013b1:	xor    al,0x72
  4013b3:	xor    eax,0xd666957d
  4013b8:	add    BYTE PTR [eax],0x49
  4013bb:	xor    BYTE PTR [esp+ebp*4-0x2b341a13],bl
  4013c2:	loopne 0x401399
  4013c4:	jl     0x4013f2
  4013c6:	fild   QWORD PTR [esi-0x62ae7b0e]
  4013cc:	pop    ebx
  4013cd:	aaa    
  4013ce:	pop    esp
  4013cf:	call   0x5efa4828
  4013d4:	ins    BYTE PTR es:[edi],dx
  4013d5:	aad    0x31
  4013d7:	jae    0x4013d9
  4013d9:	addr16 sbb ebp,ecx
  4013dc:	pop    eax
  4013dd:	shr    dl,0x32
  4013e0:	add    DWORD PTR [edx],eax
  4013e2:	aad    0xf7
  4013e4:	pop    es
  4013e5:	faddp  st(0),st
  4013e7:	or     al,0xeb
  4013e9:	loope  0x401463
  4013eb:	or     cl,al
  4013ed:	mov    ch,al
  4013ef:	jg     0x40137f
  4013f1:	adc    eax,0x6001e630
  4013f6:	loope  0x401468
  4013f8:	mov    esp,0x3ac4d8b
  4013fd:	cmp    eax,0x4284c1
  401402:	mov    edx,DWORD PTR [ebp-0x58]
  401405:	sbb    DWORD PTR ds:0x4284d9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428565,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428451
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c679415],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x24409ebe]
  401441:	xchg   edx,eax
  401442:	loope  0x4014ac
  401444:	mov    ebp,0xf8a292ce
  401449:	jmp    0x401495
  40144b:	add    DWORD PTR [eax],ebx
  40144d:	iret   
  40144e:	pop    ss
  40144f:	inc    eax
  401450:	cmp    eax,0x17190a27
  401455:	scas   eax,DWORD PTR es:[edi]
  401456:	dec    ebx
  401457:	aas    
  401458:	call   0x1b72:0xeeefdc5b
  40145f:	push   esi
  401460:	mov    edi,0x937f5623
  401465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401466:	pusha  
  401467:	xor    BYTE PTR [ebx+0x7e],cl
  40146a:	test   eax,0x85189b0d
  40146f:	mov    DWORD PTR [eax],edi
  401471:	rcr    BYTE PTR ds:0x7df5dbcb,cl
  401477:	add    cl,BYTE PTR [edi+0x3e]
  40147a:	pop    es
  40147b:	or     esi,DWORD PTR [eax]
  40147d:	or     ebx,DWORD PTR [eax]
  40147f:	jns    0x4014af
  401481:	fld    DWORD PTR [ecx-0x327dfb8d]
  401487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401488:	adc    dl,ah
  40148a:	je     0x67883642
  401490:	add    DWORD PTR [eax],edi
  401492:	xor    DWORD PTR [ebx-0x41],ebx
  401495:	retf   0x66ef
  401498:	fldenv [ecx+0x5b]
  40149b:	mov    esi,0x94fed97d
  4014a0:	lods   eax,DWORD PTR ds:[esi]
  4014a1:	fiadd  DWORD PTR [esi]
  4014a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014a4:	xor    bl,bh
  4014a6:	aas    
  4014a7:	hlt    
  4014a8:	and    al,0x21
  4014aa:	in     al,dx
  4014ab:	out    dx,eax
  4014ac:	div    esi
  4014ae:	sub    eax,0x2ea5c341
  4014b3:	mov    ebx,0x7ba8a4df
  4014b8:	mov    edi,0xb6d71038
  4014bd:	mov    eax,0x417709ab
  4014c2:	mov    ch,BYTE PTR [edi]
  4014c4:	adc    DWORD PTR [eax+0x26],ecx
  4014c7:	push   ss
  4014c8:	aam    0x68
  4014ca:	repz sbb DWORD PTR [ebx+0x42ca23b1],esi
  4014d1:	imul   eax,eax,0x1ed4baad
  4014d7:	push   edi
  4014d8:	loop   0x401536
  4014da:	mov    eax,ds:0x7a4bb8b2
  4014df:	test   BYTE PTR [esi+0x49],ch
  4014e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014e3:	xchg   ebp,eax
  4014e4:	dec    edx
  4014e5:	sub    ebx,DWORD PTR [edi-0x5d211a]
  4014eb:	mov    eax,ds:0xc61a6e12
  4014f0:	enter  0x3614,0xca
  4014f4:	jnp    0x4014d1
  4014f6:	sbb    cl,BYTE PTR [eax+0x7c]
  4014f9:	xchg   esp,ebx
  4014fb:	pop    ecx
  4014fc:	add    DWORD PTR [edx+0x21],esp
  4014ff:	(bad)  
  401500:	out    dx,eax
  401501:	dec    eax
  401502:	xchg   ecx,eax
  401503:	mov    ds:0x395c2db7,al
  401508:	ins    BYTE PTR es:[edi],dx
  401509:	push   edx
  40150a:	iret   
  40150b:	psubb  mm7,QWORD PTR [esi*8+0x1e32ac6c]
  401513:	lods   al,BYTE PTR ds:[esi]
  401514:	and    DWORD PTR ds:0xf277da2d,0xffffffb8
  40151b:	fdivr  QWORD PTR [eax-0x5f66b4c8]
  401521:	pushf  
  401522:	sbb    ch,bl
  401524:	jg     0x401564
  401526:	ret    
  401527:	adc    DWORD PTR gs:[edi-0x11a0f29a],esp
  40152e:	adc    al,0xc8
  401530:	(bad)  
  401531:	jmp    0x401563
  401533:	mov    BYTE PTR [ebp-0x2f],al
  401536:	push   edx
  401537:	outs   dx,BYTE PTR ds:[esi]
  401538:	(bad)  
  401539:	push   esp
  40153a:	inc    ecx
  40153b:	push   esp
  40153c:	sub    al,0xfb
  40153e:	and    DWORD PTR [ecx-0x62f7075b],ebp
  401544:	mov    ss,WORD PTR [ebp-0x67]
  401547:	(bad)  
  401548:	mov    edx,0x9b3cbc86
  40154d:	mov    BYTE PTR ds:0x218581a4,ah
  401553:	xor    al,0x68
  401555:	ror    DWORD PTR [ecx+eax*2],1
  401558:	stos   BYTE PTR es:[edi],al
  401559:	popa   
  40155a:	fsub   QWORD PTR [ecx-0x16e82d24]
  401560:	jmp    0xc3d6:0x737d2ce7
  401567:	push   esp
  401568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401569:	add    DWORD PTR [ebx],ebp
  40156b:	popa   
  40156c:	jp     0x40154d
  40156e:	push   DWORD PTR [ecx]
  401570:	pop    ecx
  401571:	pop    edx
  401572:	retf   
  401573:	ja     0x401501
  401575:	mov    ecx,0xa0e0bdfe
  40157a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157b:	ror    BYTE PTR [edi],1
  40157d:	retf   
  40157e:	(bad)  
  40157f:	sub    al,0xec
  401581:	loopne 0x401535
  401583:	addr16 pushf 
  401585:	mov    ds,edx
  401587:	popf   
  401588:	retf   
  401589:	jbe    0x401562
  40158b:	test   al,0x22
  40158d:	clc    
  40158e:	sub    eax,0x5184df91
  401593:	mov    edx,0xb9d8da0
  401598:	adc    BYTE PTR [edx],dh
  40159a:	inc    esp
  40159b:	clc    
  40159c:	imul   edx,DWORD PTR ds:0x38c453fd,0xffffff8d
  4015a3:	pushf  
  4015a4:	add    eax,0x9f1efe5
  4015a9:	xor    DWORD PTR [ecx-0x64],edi
  4015ac:	jnp    0x4015ce
  4015ae:	test   DWORD PTR [ebx],esp
  4015b0:	mov    ebx,0x9eb7ddd4
  4015b5:	int3   
  4015b6:	rcr    BYTE PTR [ecx],0xe
  4015b9:	leave  
  4015ba:	gs (bad) 
  4015bd:	jb     0x401605
  4015bf:	dec    esp
  4015c0:	cwde   
  4015c1:	lahf   
  4015c2:	test   eax,0xc6011c0
  4015c7:	repz lahf 
  4015c9:	cmp    ebp,edx
  4015cb:	(bad)  [eax-0x64]
  4015ce:	shl    DWORD PTR ds:0x689919e2,1
  4015d4:	xor    eax,DWORD PTR [ecx-0x42]
  4015d7:	and    DWORD PTR [eax],ecx
  4015d9:	mov    ah,0x55
  4015db:	inc    ecx
  4015dc:	mov    dh,0xd6
  4015de:	jle    0x401570
  4015e0:	mov    eax,ds:0x7ae7236c
  4015e5:	pusha  
  4015e6:	(bad)  
  4015e7:	dec    ebx
  4015e8:	xchg   edi,eax
  4015e9:	jnp    0x401616
  4015eb:	xor    BYTE PTR [ebx-0x43],bl
  4015ee:	dec    esp
  4015ef:	mov    dh,0xec
  4015f1:	or     al,0x96
  4015f3:	and    eax,0xdcc11368
  4015f8:	mov    al,ds:0xed48ba66
  4015fd:	lods   al,BYTE PTR ds:[esi]
  4015fe:	add    BYTE PTR [esi],bl
  401600:	repz jmp 0xf8d9:0x9b1d1f18
  401608:	inc    edx
  401609:	pop    edi
  40160a:	sbb    esp,DWORD PTR [edx+0x7d]
  40160d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40160e:	in     al,0xb9
  401610:	lds    esi,FWORD PTR ds:0xff639f4f
  401616:	jecxz  0x40168a
  401618:	xchg   DWORD PTR [ecx+0x5],edx
  40161b:	lahf   
  40161c:	pushf  
  40161d:	xor    DWORD PTR [esi],0x137fe260
  401623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401624:	sbb    al,dh
  401626:	(bad)  
  401627:	fld    QWORD PTR [eax]
  401629:	shl    BYTE PTR [ebx+0x21],cl
  40162c:	xlat   BYTE PTR ds:[ebx]
  40162d:	xchg   DWORD PTR [bx+0x233b],ebp
  401632:	sub    esp,DWORD PTR [eax]
  401634:	push   esi
  401635:	call   0x8ecf:0x3ec2ab9f
  40163c:	push   ss
  40163d:	out    dx,al
  40163e:	mov    ch,0x9a
  401640:	ret    
  401641:	(bad)  
  401643:	add    eax,0xc0c86450
  401648:	and    ah,dl
  40164a:	dec    esp
  40164b:	aad    0xea
  40164d:	push   ss
  40164e:	xchg   DWORD PTR [edi],ecx
  401650:	ja     0x4015e0
  401652:	sub    DWORD PTR [edi],esi
  401654:	xchg   ebp,eax
  401656:	pop    edx
  401657:	clc    
  401658:	adc    BYTE PTR [eax+0x5f],ch
  40165b:	stos   BYTE PTR es:[edi],al
  40165c:	push   ds
  40165d:	inc    esp
  40165e:	pop    es
  40165f:	push   fs
  401661:	pop    ecx
  401662:	outs   dx,BYTE PTR ds:[esi]
  401663:	mov    ah,0x49
  401665:	inc    eax
  401666:	sbb    al,0x60
  401668:	add    eax,0x5751ac46
  40166d:	push   eax
  40166e:	fidivr WORD PTR [edi+0x2cd64ea8]
  401674:	out    dx,eax
  401675:	dec    esp
  401676:	(bad)  
  401677:	fidiv  WORD PTR [eax-0x79]
  40167a:	out    dx,eax
  40167b:	scas   al,BYTE PTR es:[edi]
  40167c:	pop    ds
  40167d:	out    0x0,al
  40167f:	mov    eax,0xc525aa60
  401684:	retf   
  401685:	ret    0x49ef
  401688:	xlat   BYTE PTR ds:[ebx]
  401689:	xor    eax,0xb9cb50b8
  40168e:	lods   al,BYTE PTR ds:[esi]
  40168f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401690:	or     DWORD PTR [eax-0x71],edx
  401693:	ret    0x30d1
  401696:	popa   
  401697:	ss add edx,eax
  40169a:	pop    edi
  40169b:	in     eax,0x8f
  40169d:	dec    esp
  40169e:	mov    eax,ds:0xec3186b3
  4016a3:	test   eax,0xf90914e3
  4016a8:	sbb    al,0x39
  4016aa:	sbb    eax,0x22f9a4b8
  4016af:	test   DWORD PTR [esi-0x7e21e857],edx
  4016b5:	call   0x668d:0x69b58bfa
  4016bc:	addr16 test al,0x36
  4016bf:	or     dl,al
  4016c1:	pop    edi
  4016c2:	ja     0x4016d9
  4016c4:	fadd   QWORD PTR [eax]
  4016c6:	out    dx,al
  4016c7:	or     edx,DWORD PTR [ebx+0x54]
  4016ca:	push   esp
  4016cb:	test   esp,ebp
  4016cd:	clc    
  4016ce:	inc    esp
  4016cf:	mov    ecx,0x9f4a8cc5
  4016d4:	shl    esi,cl
  4016d6:	fstp   QWORD PTR [esi]
  4016d8:	dec    ebx
  4016d9:	pop    ds
  4016da:	adc    al,0x46
  4016dc:	dec    esi
  4016de:	dec    esp
  4016df:	mov    ch,0xaa
  4016e1:	dec    ebx
  4016e2:	xor    BYTE PTR [edi+esi*2+0x16],0x54
  4016e7:	xchg   edx,eax
  4016e8:	ja     0x4016af
  4016ea:	mov    ah,0xd8
  4016ec:	ror    BYTE PTR [edi+0x13b869a2],1
  4016f2:	or     BYTE PTR ds:0x207e7297,bl
  4016f8:	mov    ebx,0x7312edfd
  4016fd:	sub    al,0xb5
  4016ff:	loopne 0x401772
  401701:	mov    eax,ds:0x121201a8
  401706:	cli    
  401707:	and    dh,BYTE PTR [edi+0x15]
  40170a:	cwde   
  40170b:	dec    esi
  40170c:	push   es
  40170d:	lods   eax,DWORD PTR ds:[esi]
  40170e:	inc    esp
  40170f:	mov    dh,0xc
  401711:	(bad)  ds:0x43f9ad87
  401717:	(bad)  
  401718:	lods   al,BYTE PTR ds:[esi]
  401719:	jp     0x4016aa
  40171b:	jp     0x4016f0
  40171d:	xchg   DWORD PTR fs:[edi],eax
  401720:	imul   edi,ebx,0x724e2728
  401726:	data16 js 0x4016b3
  401729:	jne    0x4016e6
  40172b:	mov    bh,0xef
  40172d:	fsubr  DWORD PTR [ebp+0x56]
  401730:	jns    0x4016b5
  401732:	dec    eax
  401733:	jge    0x401749
  401735:	xchg   edx,eax
  401736:	jb     0x401790
  401738:	test   eax,0xe79cc005
  40173d:	loopne 0x4017b8
  40173f:	std    
  401740:	mov    ds:0x56aa4e8c,al
  401745:	sbb    edx,esp
  401747:	jnp    0x401735
  401749:	test   al,0x1e
  40174b:	cmp    al,0x2f
  40174d:	and    esp,DWORD PTR [ebp-0x6803a407]
  401753:	pop    edx
  401754:	sub    eax,0xf825645a
  401759:	or     BYTE PTR [ecx],0x2c
  40175c:	xchg   ecx,eax
  40175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175e:	inc    ebp
  40175f:	loop   0x40179f
  401761:	pop    esp
  401762:	cmp    ah,ch
  401764:	fld    DWORD PTR [ecx+ebp*2-0x44]
  401768:	in     al,dx
  401769:	jb     0x40178c
  40176b:	dec    ebx
  40176c:	lods   al,BYTE PTR ds:[esi]
  40176d:	out    0x1a,al
  40176f:	leave  
  401770:	(bad)  
  401774:	or     eax,0xa0797ad1
  401779:	push   esi
  40177a:	mov    cl,0x8e
  40177c:	cmp    edx,0xfffffff6
  40177f:	mov    ch,0xf4
  401781:	arpl   WORD PTR [ebx],si
  401783:	jnp    0x4017fd
  401785:	fisttp WORD PTR [edi]
  401787:	push   edx
  401788:	cmp    edx,esi
  40178a:	aaa    
  40178b:	cmp    eax,0x39683f83
  401790:	cmp    al,0x28
  401792:	jbe    0x4017c6
  401794:	js     0x401798
  401796:	mov    ebx,0x77ff79a8
  40179b:	out    0xa9,eax
  40179d:	fisttp QWORD PTR [edx-0x719b0529]
  4017a3:	and    dl,BYTE PTR [edx-0x10]
  4017a6:	lds    edi,FWORD PTR [edi+0x122344f7]
  4017ac:	push   es
  4017ad:	(bad)  
  4017af:	les    edi,FWORD PTR [edx]
  4017b1:	in     al,dx
  4017b2:	pusha  
  4017b3:	push   0x28
  4017b5:	cmp    DWORD PTR [edx-0x46e92ffb],eax
  4017bb:	inc    ebx
  4017bc:	sub    eax,0xf8c02d30
  4017c1:	adc    cl,BYTE PTR [ecx-0x30e457bb]
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428441,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428439,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428555
  4017f4:	movzx  ecx,WORD PTR ds:0x428349
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428439,0x0
  401811:	ja     0x401846
  401817:	push   0x428285
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428345
  40182a:	xor    DWORD PTR ds:0x4284b5,edx
  401830:	mov    edi,DWORD PTR ds:0x428425
  401836:	or     DWORD PTR ds:0x4284bd,edi
  40183c:	or     DWORD PTR ds:0x428335,0x7336
  401846:	sbb    DWORD PTR ds:0x428439,0x42f3
  401850:	mov    DWORD PTR ds:0x428569,0x382b
  40185a:	inc    DWORD PTR ds:0x428571
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422570
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428455,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428451
  401886:	sbb    DWORD PTR ds:0x4283fd,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428559,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428469,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42853d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428329,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428559,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428155
  4018d1:	push   0x4281e1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428441,0x428461
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428455,edx
  4018fa:	sub    DWORD PTR ds:0x42845d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428409,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428405
  401914:	mov    edx,DWORD PTR ds:0x4284e1
  40191a:	movzx  edx,WORD PTR ds:0x428569
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428555,0x405c
  401930:	cmp    DWORD PTR ds:0x428409,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428355
  401961:	adc    DWORD PTR ds:0x428551,ecx
  401967:	sub    DWORD PTR ds:0x428355,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428465,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42843d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428545,edi
  401997:	mov    DWORD PTR ds:0x428429,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428465,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428233
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428331,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428431
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284cd,0x428559
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx-0x2407e21d]
  401a06:	jecxz  0x4019c6
  401a08:	int3   
  401a09:	mov    esi,0xbec4bdbe
  401a0e:	mov    esi,0x942d9495
  401a13:	rol    DWORD PTR [edx+eax*8],0x90
  401a17:	xor    eax,0x5bca8209
  401a1c:	mov    bl,0x76
  401a1e:	outs   dx,BYTE PTR ds:[esi]
  401a1f:	sub    eax,DWORD PTR [edx+0x10f026fe]
  401a25:	push   esi
  401a26:	mov    al,ds:0xe63753a3
  401a2b:	lock mov ds:0x83e2e61b,al
  401a31:	daa    
  401a32:	and    DWORD PTR [eax],edi
  401a34:	outs   dx,BYTE PTR ds:[esi]
  401a35:	pop    ebx
  401a36:	es lahf 
  401a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a39:	rcr    DWORD PTR [ecx-0x60],cl
  401a3c:	sub    DWORD PTR [ecx],eax
  401a3e:	jle    0x4019ca
  401a40:	push   cs
  401a41:	jl     0x401a23
  401a43:	xchg   ebp,eax
  401a44:	sub    ebx,eax
  401a46:	mov    ds:0xcf3ce695,eax
  401a4b:	neg    BYTE PTR ds:0x26fbdcba
  401a51:	push   0xffffff92
  401a53:	(bad)  
  401a54:	adc    esi,DWORD PTR [ebx]
  401a56:	dec    eax
  401a57:	popa   
  401a58:	cs pop edx
  401a5a:	pop    ds
  401a5b:	xor    dh,ah
  401a5d:	xchg   edi,eax
  401a5e:	dec    ebp
  401a5f:	clc    
  401a60:	push   edx
  401a61:	(bad)  
  401a63:	(bad)  
  401a64:	(bad)  
  401a65:	neg    dh
  401a67:	ret    0x274e
  401a6a:	in     al,dx
  401a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a6c:	cwde   
  401a6d:	fbld   TBYTE PTR [ebx]
  401a6f:	push   ds
  401a70:	je     0x401a7c
  401a72:	add    esp,0x1a
  401a75:	or     dl,ah
  401a77:	cdq    
  401a78:	dec    esp
  401a79:	int3   
  401a7a:	push   0x53
  401a7c:	shl    bh,cl
  401a7e:	adc    DWORD PTR [esi+edi*4+0x775addc8],ebx
  401a85:	scas   al,BYTE PTR es:[edi]
  401a86:	xor    DWORD PTR [eax-0x64d8e192],esp
  401a8c:	js     0x401aea
  401a8e:	das    
  401a8f:	pop    ecx
  401a90:	aad    0xfa
  401a92:	lods   al,BYTE PTR cs:[esi]
  401a94:	push   edi
  401a95:	adc    BYTE PTR [eax-0x5],ch
  401a98:	div    BYTE PTR [ecx+edi*4]
  401a9b:	xchg   ebx,eax
  401a9c:	and    bh,ah
  401a9e:	cld    
  401a9f:	pusha  
  401aa0:	sbb    cl,BYTE PTR [ebp-0xc157ea0]
  401aa6:	es sbb eax,ebp
  401aa9:	push   ss
  401aaa:	pop    ebx
  401aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aac:	sub    eax,0x186e12cb
  401ab1:	cmp    al,0x3d
  401ab3:	in     eax,0x2b
  401ab5:	mov    edx,0xee24952a
  401aba:	cdq    
  401abb:	(bad)  
  401abc:	mov    al,ds:0x992f0acb
  401ac1:	sbb    eax,0xe866a1b1
  401ac6:	sub    bh,BYTE PTR [edx-0x52c4168b]
  401acc:	stc    
  401acd:	lahf   
  401ace:	test   BYTE PTR es:[edi-0xe48071b],bl
  401ad5:	mov    DWORD PTR [ebx-0x97624e1],esi
  401adb:	repz and bl,BYTE PTR [eax-0x2c083062]
  401ae2:	das    
  401ae3:	arpl   WORD PTR [ebx],dx
  401ae5:	loopne 0x401b08
  401ae7:	jnp    0x401b0a
  401ae9:	aad    0x42
  401aeb:	mov    ebx,DWORD PTR [edx]
  401aed:	dec    esp
  401aee:	jmp    0x14c2:0xe08aac67
  401af5:	dec    esp
  401af6:	retf   
  401af7:	xor    al,0x45
  401af9:	arpl   WORD PTR [edx-0x52],ax
  401afc:	sub    ebp,esi
  401afe:	push   ecx
  401aff:	pushf  
  401b00:	fld    DWORD PTR [edi+0x4a90adf9]
  401b06:	loopne 0x401ad8
  401b08:	adc    bh,BYTE PTR [ebx+0x5d]
  401b0b:	or     al,bl
  401b0d:	mov    al,ds:0x1b50c91
  401b12:	xchg   esp,eax
  401b13:	scas   eax,DWORD PTR es:[di]
  401b15:	outs   dx,BYTE PTR ds:[esi]
  401b16:	pop    ebp
  401b17:	cmp    ebp,esp
  401b19:	cmp    DWORD PTR [esi+ecx*1],esp
  401b1c:	(bad)  
  401b1d:	daa    
  401b1e:	fistp  DWORD PTR [esi+0x44]
  401b21:	int    0x2b
  401b23:	sbb    cl,BYTE PTR [eax+ecx*2]
  401b26:	push   cs
  401b27:	test   esp,ebx
  401b29:	cmp    dh,BYTE PTR [edx+0x3b7bb81d]
  401b2f:	icebp  
  401b30:	pop    edx
  401b31:	sbb    BYTE PTR [ecx],cl
  401b33:	xchg   BYTE PTR [edx+edx*4],al
  401b36:	repnz shl DWORD PTR [ebx],cl
  401b39:	popa   
  401b3a:	push   ds
  401b3b:	add    al,0xd1
  401b3d:	jecxz  0x401ae1
  401b3f:	test   eax,0x732adee2
  401b44:	sbb    BYTE PTR [edx-0x70c4f1ed],bh
  401b4a:	mov    edi,0xec19e556
  401b4f:	inc    ebx
  401b50:	cmp    al,0x31
  401b52:	lea    esp,[edx-0x17]
  401b55:	ins    DWORD PTR es:[edi],dx
  401b56:	ins    BYTE PTR es:[edi],dx
  401b57:	ret    
  401b58:	fwait
  401b59:	cs cli 
  401b5b:	xor    eax,0x23ec13cf
  401b60:	xor    al,al
  401b62:	dec    esp
  401b63:	xchg   ecx,eax
  401b64:	push   cs
  401b65:	aam    0xf
  401b67:	mov    ebx,0xb19424a2
  401b6c:	cmc    
  401b6d:	dec    ecx
  401b6e:	idiv   ebp
  401b70:	add    eax,0xefef22f8
  401b75:	and    BYTE PTR [ecx+eiz*4+0x61],dl
  401b79:	and    eax,DWORD PTR [edx+0x51]
  401b7c:	push   ebx
  401b7d:	jp     0x401be8
  401b7f:	mov    bl,0x5
  401b81:	adc    ecx,DWORD PTR [eax-0x4c]
  401b84:	inc    edi
  401b85:	test   al,0x8a
  401b87:	mov    eax,ds:0x8b0bf3e5
  401b8c:	dec    eax
  401b8d:	sub    eax,0x66c6db6a
  401b92:	jmp    0x5c32d090
  401b97:	sahf   
  401b98:	stos   BYTE PTR es:[edi],al
  401b99:	aaa    
  401b9a:	inc    edx
  401b9b:	out    dx,al
  401b9c:	lock xor BYTE PTR ds:[edi+0x20],ah
  401ba1:	dec    ebx
  401ba2:	inc    eax
  401ba3:	and    DWORD PTR [ecx-0x7369489d],0xffffffd6
  401baa:	out    dx,eax
  401bab:	mov    ?,edx
  401bad:	shl    esi,0xeb
  401bb0:	jmp    0xd439f036
  401bb5:	dec    esp
  401bb6:	aaa    
  401bb7:	(bad)  
  401bb8:	loop   0x401b58
  401bba:	jmp    0x8320:0xe93c8aa9
  401bc1:	pop    esi
  401bc2:	add    BYTE PTR [ecx],cl
  401bc4:	cmp    al,0xee
  401bc6:	pop    ss
  401bc7:	pop    ebx
  401bc8:	pop    eax
  401bc9:	push   ss
  401bca:	cmp    bl,BYTE PTR [ecx-0x479f1542]
  401bd0:	jmp    0xf681:0x578ad0d2
  401bd7:	mov    ebx,0x6993578
  401bdc:	mov    dl,0xce
  401bde:	ret    
  401bdf:	cmc    
  401be0:	out    dx,eax
  401be1:	sar    DWORD PTR [edx-0x1],0x67
  401be5:	mov    al,ds:0x7c45bf39
  401bea:	mov    bl,0xac
  401bec:	das    
  401bed:	enter  0xded0,0x52
  401bf1:	or     DWORD PTR [ebp+edx*2+0x20],ecx
  401bf5:	push   ebx
  401bf6:	test   BYTE PTR [edx],bh
  401bf8:	mov    bh,0x31
  401bfa:	into   
  401bfb:	jno    0x401bf5
  401bfd:	xor    BYTE PTR [ebx+0x18],dl
  401c00:	gs or  al,0xb2
  401c03:	fmul   DWORD PTR [edx-0x152a2a0]
  401c09:	mov    ds:0xf4ab9b9,al
  401c0e:	shl    cl,0x9b
  401c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c12:	jne    0x401c5e
  401c14:	jne    0x401c90
  401c16:	mov    cs,WORD PTR [ebx+0x6caf67ec]
  401c1c:	pop    eax
  401c1d:	lock fidivr DWORD PTR [edx]
  401c20:	aad    0x18
  401c22:	lock fistp DWORD PTR [esi-0x5c750bac]
  401c29:	fadd   QWORD PTR [esi]
  401c2b:	enter  0x4150,0x74
  401c2f:	in     eax,0xc6
  401c31:	xchg   ebp,eax
  401c32:	sbb    dh,ah
  401c34:	xchg   ecx,eax
  401c35:	ds add eax,0x14248689
  401c3b:	push   ds
  401c3c:	mov    edi,0x6fa152b1
  401c41:	fisub  WORD PTR [edi+0x3b56037c]
  401c47:	into   
  401c48:	loopne 0x401bfb
  401c4a:	sub    eax,0xd4f29106
  401c4f:	cwde   
  401c50:	push   esp
  401c51:	fbstp  TBYTE PTR [esi]
  401c53:	mov    DWORD PTR [esi+edi*2],ebp
  401c56:	push   edi
  401c57:	retf   0x4c9
  401c5a:	mov    WORD PTR [edi],es
  401c5c:	cmp    al,0x73
  401c5e:	mov    ecx,0xbf3ce254
  401c63:	addr16 xor ecx,0xc0f7fab9
  401c6a:	outs   dx,BYTE PTR ds:[si]
  401c6c:	mov    dl,0x14
  401c6e:	imul   ebx,DWORD PTR [eax+0x1d271869],0x57c8fef1
  401c78:	(bad)  
  401c79:	mov    esp,0xd6a6533f
  401c7e:	cmp    DWORD PTR [ecx],esi
  401c80:	les    ecx,FWORD PTR [edx-0x2a1ad26c]
  401c86:	fdivr  DWORD PTR [esi-0xef765ea]
  401c8c:	or     BYTE PTR [ebp+eiz*2-0x40],cl
  401c90:	or     BYTE PTR [ecx-0x715c7659],dl
  401c96:	jl     0x401c3b
  401c98:	mov    esi,0x916e8c9e
  401c9d:	jg     0x401cbe
  401c9f:	xor    ebp,eax
  401ca1:	sub    DWORD PTR [esi-0x9],ebp
  401ca4:	rol    BYTE PTR [ecx],1
  401ca6:	and    bh,BYTE PTR [esi+0x5c]
  401ca9:	xchg   ecx,ebx
  401cab:	or     eax,0x5c01c80a
  401cb0:	jge    0x401c5d
  401cb2:	ins    DWORD PTR es:[edi],dx
  401cb3:	inc    ebx
  401cb4:	push   0xe236f731
  401cb9:	test   eax,0x22b48219
  401cbe:	dec    edx
  401cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc0:	inc    ebp
  401cc1:	and    bl,BYTE PTR [ebx-0x12]
  401cc4:	sub    al,0xf3
  401cc6:	xor    DWORD PTR [ecx],edi
  401cc8:	int    0x84
  401cca:	out    dx,eax
  401ccb:	inc    ebp
  401ccc:	fisubr DWORD PTR [edx+0x1a]
  401ccf:	jne    0x401cfc
  401cd1:	xchg   edi,eax
  401cd2:	push   si
  401cd4:	pop    ebp
  401cd5:	pusha  
  401cd6:	arpl   WORD PTR [edx],cx
  401cd8:	in     eax,dx
  401cd9:	inc    esp
  401cda:	or     al,0x9b
  401cdc:	pop    ss
  401cdd:	jbe    0x401d27
  401cdf:	cwde   
  401ce0:	mov    ecx,0xed896e2b
  401ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce6:	pop    es
  401ce7:	je     0x401d50
  401ce9:	test   ch,dh
  401ceb:	inc    edi
  401cec:	scas   eax,DWORD PTR es:[edi]
  401ced:	arpl   WORD PTR [ecx],bx
  401cef:	loopne 0x401c8d
  401cf1:	out    dx,eax
  401cf2:	cmp    eax,0xc74a4348
  401cf7:	popf   
  401cf8:	fsubr  DWORD PTR [edi]
  401cfa:	xor    edx,DWORD PTR [esi+edi*1-0x1e50648d]
  401d01:	mov    ch,0x4e
  401d03:	pushf  
  401d04:	sahf   
  401d05:	rol    BYTE PTR [ebx+esi*2+0xd],1
  401d09:	push   ds
  401d0a:	repnz fisubr DWORD PTR fs:[eax+0x70471ba4]
  401d12:	call   0x8e56c201
  401d17:	cmp    al,0xbb
  401d19:	jmp    0x401d2d
  401d1b:	fs pop ds
  401d1d:	xchg   ebx,eax
  401d1e:	test   eax,0x5cf00856
  401d23:	jecxz  0x401d07
  401d25:	fsubr  QWORD PTR [esi-0x2]
  401d28:	stos   DWORD PTR es:[edi],eax
  401d29:	aam    0xea
  401d2b:	ins    BYTE PTR es:[edi],dx
  401d2c:	push   ebx
  401d2d:	fadd   QWORD PTR [edx+esi*2-0x79]
  401d31:	mov    ecx,DWORD PTR [esi-0x1b265051]
  401d37:	lock mov cs,WORD PTR [edi]
  401d3a:	mov    ecx,0xdc0db230
  401d3f:	mov    cl,BYTE PTR [edi-0x1582a76d]
  401d45:	add    bh,cl
  401d47:	xlat   BYTE PTR ds:[bx]
  401d49:	sbb    ebp,ebp
  401d4b:	mov    edi,0xecf5af38
  401d50:	ret    
  401d51:	ja     0x401d33
  401d53:	dec    ebp
  401d54:	xchg   ch,ah
  401d56:	inc    edi
  401d57:	dec    eax
  401d58:	fdivr  st,st(6)
  401d5a:	lahf   
  401d5b:	cmpps  xmm7,XMMWORD PTR ds:[edx-0x5f14609],0xcd
  401d64:	sar    ebp,cl
  401d66:	out    dx,eax
  401d67:	in     al,0x49
  401d69:	lds    edx,FWORD PTR [ecx+eax*1-0x69]
  401d6d:	adc    edi,DWORD PTR [edi]
  401d6f:	mov    edx,0xe49005dd
  401d74:	(bad)  
  401d75:	push   edx
  401d76:	adc    dl,cl
  401d78:	jge    0x401d93
  401d7a:	or     BYTE PTR [edi],al
  401d7c:	clc    
  401d7d:	shl    BYTE PTR [ecx+0x344eec62],cl
  401d83:	mov    esp,0x79c9be08
  401d88:	adc    al,0xae
  401d8a:	out    dx,al
  401d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8c:	stos   DWORD PTR es:[edi],eax
  401d8d:	sub    ah,cl
  401d8f:	cmp    ch,BYTE PTR [ebp-0x6f]
  401d92:	rol    bh,1
  401d94:	inc    ebp
  401d95:	nop
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428415,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42854d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x4283fd
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428361,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42833d
  401dfc:	and    DWORD PTR ds:0x428565,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428405,0x0
  401e17:	mov    DWORD PTR ds:0x42853d,0x646
  401e21:	mov    DWORD PTR ds:0x428415,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284e1
  401e37:	mov    DWORD PTR ds:0x428405,ebx
  401e3d:	cmp    DWORD PTR ds:0x428405,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428233
  401e52:	push   0x428137
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42853d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284c5,edi
  401e72:	sbb    DWORD PTR ds:0x42842d,0x42853d
  401e7c:	add    DWORD PTR ds:0x428455,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428565,0x428415
  401e90:	adc    DWORD PTR ds:0x428559,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428549,0x428535
  401ea4:	add    DWORD PTR ds:0x428335,0x5dac
  401eae:	add    DWORD PTR ds:0x42832d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428421,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42853d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284b5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428349
  401f03:	or     eax,DWORD PTR ds:0x428425
  401f09:	mov    ds:0x428349,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42854d,0x0
  401f1c:	mov    DWORD PTR ds:0x428325,0xd43
  401f26:	mov    DWORD PTR ds:0x428569,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42840d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428465,edx
  401f46:	cmp    DWORD PTR ds:0x42854d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428228
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428435,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284e1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428441,0x42832d
  401f8c:	add    DWORD PTR ds:0x428349,0x428461
  401f96:	cmp    DWORD PTR ds:0x42853d,0x0
  401f9d:	mov    DWORD PTR ds:0x428465,0x6252
  401fa7:	mov    DWORD PTR ds:0x428361,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428545,edx
  401fbc:	cmp    DWORD PTR ds:0x42853d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428155
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42834d,0x4284e9
  401fde:	sbb    DWORD PTR ds:0x428429,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284e1,edi
  401fee:	and    DWORD PTR ds:0x4284d1,0x42856d
  401ff8:	xor    DWORD PTR ds:0x4284e9,0x428565
  402002:	add    DWORD PTR ds:0x428535,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428345,0x4284bd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284c5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284ed,0x428339
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x4284f1,0x4284cd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428351,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	cmp    eax,0xbde3d91e
  402072:	sar    BYTE PTR [esi-0x413b4242],cl
  402078:	mov    esi,0x94357916
  40207d:	lahf   
  40207e:	push   edx
  40207f:	add    eax,0x4d9c0435
  402084:	lods   al,BYTE PTR ds:[esi]
  402085:	dec    ecx
  402086:	sub    DWORD PTR [ebx-0x7d383c94],edi
  40208c:	or     DWORD PTR [edi+0x404b3102],ecx
  402092:	lods   eax,DWORD PTR ds:[esi]
  402093:	clc    
  402094:	and    al,0x3
  402096:	inc    ebx
  402097:	jmp    FWORD PTR [ecx]
  402099:	and    eax,0x520a3be5
  40209e:	mov    bh,0x2d
  4020a0:	sbb    ch,cl
  4020a2:	gs inc ebx
  4020a4:	cmp    BYTE PTR [ebx-0x5c8b271f],bh
  4020aa:	xor    eax,0x2fa02fc3
  4020af:	lock xchg ecx,eax
  4020b1:	jp     0x4020c6
  4020b3:	das    
  4020b4:	push   esp
  4020b5:	push   es
  4020b6:	cdq    
  4020b7:	mov    ch,0x33
  4020b9:	pop    ebx
  4020ba:	icebp  
  4020bb:	fld    QWORD PTR [ebx]
  4020bd:	or     BYTE PTR [eax-0x76],dh
  4020c0:	or     eax,0x25e5abdf
  4020c5:	test   DWORD PTR [edx-0x3b3964a4],0x8d10d346
  4020cf:	or     BYTE PTR [ebx+ebp*4-0x4b8b2c21],dl
  4020d6:	jmp    0x402122
  4020d8:	add    DWORD PTR [ecx+esi*8+0x77b15581],ebx
  4020df:	sbb    BYTE PTR [eax+0x2d],ch
  4020e2:	mov    al,ds:0x66d0ceb4
  4020e7:	push   ds
  4020e8:	xchg   edi,eax
  4020e9:	pusha  
  4020ea:	add    DWORD PTR [eax],esi
  4020ec:	shr    ebp,1
  4020ee:	xor    DWORD PTR [ebx-0x45],ecx
  4020f1:	mov    edx,ds
  4020f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f4:	test   DWORD PTR [edx],ebp
  4020f6:	std    
  4020f7:	inc    BYTE PTR [ebx+eax*8+0x1c]
  4020fb:	test   ah,dh
  4020fd:	mov    ch,0x47
  4020ff:	shr    DWORD PTR [edi+0x119f2d4d],1
  402105:	mov    al,ds:0x657be5ca
  40210a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210b:	bnd jae 0x40215d
  40210e:	imul   ebp,DWORD PTR [eax+0x57f6e2e8],0x3776c6a5
  402118:	daa    
  402119:	fmul   DWORD PTR [ebp-0x28f66cab]
  40211f:	out    0x10,eax
  402121:	ss in  al,0xa4
  402124:	inc    ebp
  402125:	mov    gs,WORD PTR [edi-0xfaf8947]
  40212b:	out    0x1d,eax
  40212d:	xchg   ebx,eax
  40212e:	sub    bl,BYTE PTR [ebp+ecx*4+0x25]
  402132:	or     eax,0xed04bf14
  402137:	pop    ebp
  402138:	mov    edx,0x50819b14
  40213d:	inc    edi
  40213e:	gs sbb ah,0x10
  402142:	push   esi
  402143:	retf   
  402144:	aam    0xd
  402146:	add    BYTE PTR [esi],al
  402148:	mov    ebx,0x365f929e
  40214d:	sbb    eax,0x850e292f
  402152:	dec    esi
  402153:	sahf   
  402154:	mov    ch,0x67
  402156:	in     eax,dx
  402157:	outs   dx,DWORD PTR ds:[esi]
  402158:	inc    edx
  402159:	pusha  
  40215a:	in     al,0x46
  40215c:	push   edx
  40215d:	(bad)  
  40215e:	jmp    0x4021cd
  402160:	int3   
  402161:	(bad)  
  402162:	push   ss
  402163:	lahf   
  402164:	fwait
  402165:	retf   
  402166:	int    0x1d
  402168:	lds    esi,FWORD PTR [esi+0x7d]
  40216b:	arpl   WORD PTR [ecx],dx
  40216d:	sbb    cl,BYTE PTR [esi-0x60]
  402170:	clc    
  402171:	cmp    edi,esp
  402173:	int3   
  402174:	xchg   ebp,eax
  402175:	int    0xbb
  402177:	(bad)  
  402178:	pop    es
  402179:	xchg   esp,eax
  40217a:	or     DWORD PTR ds:0x4d2a2dfe,eax
  402180:	pusha  
  402181:	stos   DWORD PTR es:[edi],eax
  402182:	iret   
  402183:	jmp    0xf236:0x8d8b8a8
  40218a:	stc    
  40218b:	xchg   ebx,eax
  40218c:	adc    dl,BYTE PTR [ebp-0x223635dd]
  402192:	jbe    0x402171
  402194:	cmc    
  402195:	sbb    BYTE PTR [edi+0xb367810],dl
  40219b:	mov    ebp,0x15873f8a
  4021a0:	jmp    0x402145
  4021a2:	sub    ebx,ebx
  4021a4:	or     BYTE PTR [eax+0x4b],bh
  4021a7:	cdq    
  4021a8:	jl     0x4021b3
  4021aa:	nop
  4021ab:	cmp    eax,0x35c11e8f
  4021b0:	dec    edx
  4021b1:	retf   0xfe89
  4021b4:	mov    eax,0x2b2f2193
  4021b9:	sbb    ebx,edx
  4021bb:	scas   al,BYTE PTR es:[edi]
  4021bc:	jns    0x4021c6
  4021be:	jno    0x402234
  4021c0:	mov    ecx,0x849dea5e
  4021c5:	dec    ebp
  4021c6:	cwde   
  4021c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c8:	clc    
  4021c9:	push   esi
  4021ca:	cmp    eax,0xd365fd0c
  4021cf:	in     eax,0x83
  4021d1:	icebp  
  4021d2:	push   ebp
  4021d3:	push   es
  4021d4:	mov    ah,0x5a
  4021d6:	out    dx,eax
  4021d7:	mov    ch,0x8e
  4021d9:	adc    al,0xf
  4021db:	sbb    eax,0xc2916cc3
  4021e0:	(bad)  
  4021e1:	std    
  4021e2:	jns    0x4021e7
  4021e4:	xchg   ecx,eax
  4021e5:	xchg   edx,eax
  4021e6:	push   es
  4021e7:	aad    0xb3
  4021e9:	mov    esi,DWORD PTR [esi]
  4021eb:	stc    
  4021ec:	scas   eax,DWORD PTR es:[edi]
  4021ed:	test   eax,0x23e68404
  4021f2:	fistp  WORD PTR [edi-0x1]
  4021f5:	pop    ebp
  4021f6:	pop    esi
  4021f7:	push   ds
  4021f8:	xor    ebx,DWORD PTR [esi+0x1bb2ef26]
  4021fe:	fiadd  DWORD PTR [esi]
  402200:	push   esp
  402201:	jmp    0x402248
  402203:	add    eax,edi
  402205:	pop    ebp
  402206:	pop    ss
  402207:	pusha  
  402208:	mov    al,ds:0x31f45fbf
  40220d:	pop    esi
  40220e:	les    ebp,FWORD PTR [ebp-0x7]
  402211:	xor    edx,ebp
  402213:	das    
  402214:	and    esi,DWORD PTR [ecx]
  402216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402217:	sub    DWORD PTR [edx],esp
  402219:	cmp    dl,dl
  40221b:	mov    ebp,0xf2c68c6f
  402220:	adc    dl,BYTE PTR [eax+ecx*8]
  402223:	adc    eax,0x44ae022
  402228:	imul   ebx,ecx,0x3e
  40222b:	fdivr  DWORD PTR [edx+0x3e]
  40222e:	or     eax,0x139edad8
  402233:	sub    ah,BYTE PTR [ecx+0x5d]
  402236:	xor    esp,eax
  402238:	(bad)
  40223c:	and    eax,0x56d8e112
  402241:	pop    ds
  402242:	adc    eax,0xf4a2aa01
  402247:	pop    edx
  402248:	add    BYTE PTR [ecx],0x67
  40224b:	cmc    
  40224c:	xor    edx,DWORD PTR [esi-0x557511b]
  402252:	mov    BYTE PTR [edi],bl
  402254:	jne    0x4021e7
  402256:	pop    ds
  402257:	push   esi
  402258:	fdiv   DWORD PTR [edi+0x7]
  40225b:	sbb    dl,BYTE PTR [esi]
  40225d:	icebp  
  40225e:	jae    0x4022b0
  402260:	lds    esp,FWORD PTR [ebx-0x53]
  402263:	adc    ch,BYTE PTR [ebx-0x26d10c2d]
  402269:	xchg   ebp,eax
  40226a:	cli    
  40226b:	cmc    
  40226c:	xchg   BYTE PTR ds:0x3c7dbe3a,ah
  402272:	retf   
  402273:	and    esp,esp
  402275:	in     al,dx
  402276:	stc    
  402277:	sub    edx,DWORD PTR [ebp-0x18]
  40227a:	or     BYTE PTR [ebp+0xa7c25ae],dl
  402280:	test   eax,0xd5a3aa66
  402285:	sbb    esp,DWORD PTR [edi-0x76e6805b]
  40228b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228c:	add    ah,dh
  40228e:	sbb    edi,eax
  402290:	and    BYTE PTR [esi],dh
  402292:	mov    cl,0x21
  402294:	inc    ecx
  402295:	rcr    BYTE PTR [eax-0x3cde56b2],1
  40229b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40229c:	mov    ah,0x13
  40229e:	mov    fs,WORD PTR gs:[eax+0x379a2e6c]
  4022a5:	scas   al,BYTE PTR es:[edi]
  4022a6:	add    BYTE PTR [ecx],cl
  4022a8:	dec    esp
  4022a9:	push   edi
  4022aa:	jne    0x402300
  4022ac:	fbld   TBYTE PTR [ebp-0x1a]
  4022af:	mov    edx,0x2eee7225
  4022b4:	call   0xb13f9bde
  4022b9:	aad    0x68
  4022bb:	push   ebx
  4022bc:	int    0x6e
  4022be:	inc    ebx
  4022bf:	inc    ebp
  4022c0:	and    BYTE PTR [edx+0x7a],al
  4022c3:	mov    esi,0x5a613978
  4022c8:	rcl    DWORD PTR [eax+ebx*2-0x4b20ba8d],0x7d
  4022d0:	sub    ebx,DWORD PTR [ebx-0x24]
  4022d3:	sub    eax,0x86b83fbc
  4022d8:	push   ss
  4022d9:	jge    0x4022ad
  4022db:	addr16 loopne 0x4022c9
  4022de:	sub    al,0x3c
  4022e0:	xchg   ebx,eax
  4022e1:	cdq    
  4022e2:	arpl   cx,si
  4022e4:	mov    dh,0x67
  4022e6:	jmp    0xd01486e0
  4022eb:	or     eax,0x99ebde05
  4022f0:	cmp    dl,BYTE PTR [ebx+edi*1+0x47]
  4022f4:	and    dl,BYTE PTR [ecx-0x9]
  4022f7:	push   eax
  4022f8:	cmp    DWORD PTR [ebx+0x22],0x4d
  4022fc:	push   0xffffffa2
  4022fe:	inc    eax
  4022ff:	jnp    0x40237a
  402301:	jb     0x4022ab
  402303:	mov    esi,0x2ed3b95c
  402308:	or     eax,0xd9ee1c39
  40230d:	adc    al,0x6
  40230f:	sbb    al,0x61
  402311:	loopne 0x4022b3
  402313:	mov    bh,0x90
  402315:	into   
  402316:	add    eax,0x1cab4039
  40231b:	pop    eax
  40231c:	int3   
  40231d:	jmp    0xc8f39ac1
  402322:	jg     0x4022b8
  402324:	cmp    BYTE PTR [ebx+ebx*8-0x7bc43090],bl
  40232b:	push   edx
  40232c:	push   ss
  40232d:	(bad)  
  40232e:	(bad)  
  40232f:	pop    edi
  402330:	ror    DWORD PTR [ebp-0x24],0x10
  402334:	scas   al,BYTE PTR es:[edi]
  402335:	inc    ecx
  402336:	leave  
  402337:	lods   eax,DWORD PTR ds:[esi]
  402338:	test   esp,0x8f71b073
  40233e:	add    DWORD PTR [esp+edi*4+0x2adac03c],esp
  402345:	js     0x40230d
  402347:	pop    ebp
  402348:	xor    al,0xa6
  40234a:	(bad)  
  40234b:	fs das 
  40234d:	stos   BYTE PTR es:[edi],al
  40234e:	mov    ebx,0x3caec0a1
  402353:	push   es
  402354:	inc    ecx
  402355:	mov    al,ds:0x209cd749
  40235a:	fstp   TBYTE PTR [ebx]
  40235c:	data16 rcr BYTE PTR [esp+esi*4+0x38],cl
  402361:	(bad)
  402365:	mov    ds:0x9263a2e4,al
  40236a:	jle    0x402344
  40236c:	test   eax,0xb956cbc3
  402371:	xchg   ebp,eax
  402372:	add    DWORD PTR [eax+0x16f21174],edx
  402378:	dec    edx
  402379:	or     edi,DWORD PTR [edx]
  40237b:	sub    al,0xc9
  40237d:	xchg   ebp,eax
  40237e:	jl     0x4023e5
  402380:	fdiv   QWORD PTR [edx+0x27e8755d]
  402386:	shl    dl,1
  402388:	cmp    eax,0x6201baab
  40238d:	stos   BYTE PTR es:[edi],al
  40238e:	xchg   edi,eax
  40238f:	punpcklbw mm2,DWORD PTR [edx+0x4307d8af]
  402396:	aas    
  402397:	leave  
  402398:	ror    DWORD PTR ds:0x14ccc908,0x70
  40239f:	push   ebx
  4023a0:	pushf  
  4023a1:	pop    es
  4023a2:	data16 int 0x4c
  4023a5:	mov    dl,BYTE PTR ds:0xaa3e46e7
  4023ab:	mov    eax,ds:0x3da4079c
  4023b0:	sti    
  4023b1:	pusha  
  4023b2:	in     al,dx
  4023b3:	ror    BYTE PTR [ecx],0xa3
  4023b6:	ins    BYTE PTR es:[edi],dx
  4023b7:	xchg   BYTE PTR [ebx+0x1f],cl
  4023ba:	push   edi
  4023bb:	int3   
  4023bc:	add    bl,bh
  4023be:	and    al,0x5
  4023c0:	jp     0x4023b1
  4023c2:	push   esp
  4023c3:	cmp    al,0x33
  4023c5:	push   edx
  4023c6:	imul   esi,esp,0x2f
  4023c9:	fisttp DWORD PTR [ecx]
  4023cb:	std    
  4023cc:	test   BYTE PTR [ebp-0x4e],0x14
  4023d0:	retf   0x18f1
  4023d3:	fld    DWORD PTR ds:0x8c61bf30
  4023d9:	push   0xf422616d
  4023de:	loop   0x40245a
  4023e0:	and    ecx,ecx
  4023e2:	cli    
  4023e3:	jle    0x402399
  4023e5:	mov    esp,0x64fc1c2b
  4023ea:	push   es
  4023eb:	(bad)  [eax+0x4b25659f]
  4023f1:	push   esp
  4023f2:	fbld   TBYTE PTR [ebp-0x57]
  4023f5:	test   DWORD PTR [eax-0x2a],ebx
  4023f8:	stc    
  4023f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023fa:	in     eax,0x49
  4023fc:	mov    eax,0x2d0f68
  402401:	add    BYTE PTR [ecx+0x4284291d],al
  402407:	add    BYTE PTR [ecx-0x7c],dl
  40240a:	inc    edx
  40240b:	add    al,ch
  40240d:	pop    esp
  40240e:	inc    BYTE PTR [ecx]
  402410:	add    BYTE PTR [ebx+0x158b984d],cl
  402416:	dec    ecx
  402417:	test   BYTE PTR [edx+0x0],al
  40241a:	add    DWORD PTR ds:0x428365,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428535,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284cd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42856d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422728
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284b5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42842d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42831d,0x0
  40246f:	mov    DWORD PTR ds:0x428539,ebx
  402475:	mov    edx,DWORD PTR ds:0x428435
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428415,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42831d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428411
  4024a9:	adc    DWORD PTR ds:0x4284dd,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42853d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428535
  4024c5:	adc    edx,DWORD PTR ds:0x428331
  4024cb:	sbb    DWORD PTR ds:0x428571,edi
  4024d1:	sbb    DWORD PTR ds:0x42853d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284e1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x4284f1,0x0
  402501:	mov    DWORD PTR ds:0x428405,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284e1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x4284f1
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x4284f1,0x0
  402529:	je     0x40255f
  40252f:	push   0x428359
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428245
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428365
  40254d:	xor    edx,DWORD PTR ds:0x42835d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428419,0x7db9
  40255f:	add    DWORD PTR ds:0x428455,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428329,ecx
  40256c:	or     DWORD PTR ds:0x428471,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428361,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428421
  40258b:	or     DWORD PTR ds:0x428555,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	pop    ecx
  4025af:	popa   
  4025b0:	mov    WORD PTR [esi+edi*4-0x42414126],fs
  4025b7:	les    edi,FWORD PTR [esi-0xb951842]
  4025bd:	xchg   ecx,eax
  4025be:	int    0x43
  4025c0:	ret    0x1030
  4025c3:	cmc    
  4025c4:	imul   ebp,ebx,0x7
  4025c7:	mov    ebp,0xac1b068f
  4025cc:	mov    ecx,0x80d6e700
  4025d1:	lds    edx,FWORD PTR ds:[ecx]
  4025d4:	cmp    BYTE PTR [ebp+0x93123f0],0x59
  4025db:	adc    eax,0x27dc2fa
  4025e0:	xchg   esi,eax
  4025e1:	xlat   BYTE PTR ds:[ebx]
  4025e2:	cmp    ecx,DWORD PTR [ebx+0x58964dbf]
  4025e8:	aas    
  4025e9:	pop    es
  4025ea:	ds sbb dh,ch
  4025ed:	jae    0x402628
  4025ef:	in     al,dx
  4025f0:	mov    edx,0x4f975775
  4025f5:	mov    bl,0x32
  4025f7:	(bad)  
  4025f8:	push   0xffffffea
  4025fa:	lahf   
  4025fb:	cmp    esp,DWORD PTR [ecx+edx*2-0x78074ade]
  402602:	cld    
  402603:	imul   esp,DWORD PTR [ecx],0x5c773e05
  402609:	cmc    
  40260a:	scas   eax,DWORD PTR es:[edi]
  40260b:	jmp    0x9486d282
  402610:	hlt    
  402611:	pop    ecx
  402612:	(bad)  
  402613:	jge    0x40263e
  402615:	cwde   
  402616:	sub    BYTE PTR ds:[edx],al
  402619:	sbb    dh,bl
  40261b:	dec    edi
  40261c:	lea    ecx,[edx+eiz*1]
  40261f:	aad    0x88
  402621:	ret    
  402622:	jle    0x4025e3
  402624:	cmp    cl,BYTE PTR [ecx]
  402626:	cmp    DWORD PTR [edx+ebp*8-0x60],eax
  40262a:	sub    eax,0x70bb1550
  40262f:	cdq    
  402630:	push   eax
  402631:	aad    0x8
  402633:	aaa    
  402634:	push   esp
  402635:	in     eax,0x89
  402637:	mov    ds:0xaad9bbb2,al
  40263c:	or     dl,BYTE PTR ds:0xc35343ff
  402642:	add    DWORD PTR [ecx-0x409039e0],0xe31f3e64
  40264c:	jmp    0xf7f92998
  402651:	jae    0x402637
  402653:	xchg   DWORD PTR [ebx],ebp
  402655:	in     al,dx
  402656:	inc    edi
  402657:	sbb    al,BYTE PTR [ebp-0x2a4e5144]
  40265d:	lahf   
  40265e:	dec    eax
  40265f:	mov    BYTE PTR [ebx+0x6b],0x28
  402663:	clc    
  402664:	push   ebx
  402665:	or     BYTE PTR [eax-0x45],ah
  402668:	dec    ebp
  402669:	lods   eax,DWORD PTR ds:[esi]
  40266a:	loop   0x40265a
  40266c:	mov    al,0xd8
  40266e:	jae    0x402605
  402670:	jbe    0x402693
  402672:	push   esp
  402673:	(bad)  
  402674:	out    dx,eax
  402675:	rol    DWORD PTR [ecx],0x8f
  402678:	(bad)  
  402679:	mov    bl,0xdd
  40267b:	xor    ah,dh
  40267d:	push   0x55895780
  402682:	enter  0xa3ba,0x9c
  402686:	fistp  DWORD PTR [ecx]
  402688:	sub    al,0xab
  40268a:	stc    
  40268b:	cmc    
  40268c:	sbb    cl,BYTE PTR [ecx-0x4d]
  40268f:	push   edi
  402690:	mov    dh,BYTE PTR ds:0x15fbb753
  402696:	jmp    0x9097b234
  40269b:	scas   eax,DWORD PTR es:[edi]
  40269c:	cmp    ch,BYTE PTR [ecx+0xf50d941]
  4026a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026a3:	mov    esp,0x538734f6
  4026a8:	push   esi
  4026a9:	mov    ebx,0x2ab78df2
  4026ae:	cdq    
  4026af:	outs   dx,DWORD PTR ds:[esi]
  4026b0:	dec    eax
  4026b1:	dec    esi
  4026b2:	add    DWORD PTR [edi],edx
  4026b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b5:	cmp    ch,BYTE PTR [ecx+0x52025966]
  4026bb:	xchg   edi,eax
  4026bc:	fs loopne 0x4026df
  4026bf:	add    al,0x78
  4026c1:	cld    
  4026c2:	sahf   
  4026c3:	shl    BYTE PTR [ebp-0x2de5273],cl
  4026c9:	arpl   WORD PTR [eax-0x2c],dx
  4026cc:	pxor   mm1,mm4
  4026cf:	int3   
  4026d0:	push   0x8
  4026d2:	jmp    0x40268b
  4026d4:	jnp    0x4026ca
  4026d6:	sbb    eax,ebx
  4026d8:	sub    DWORD PTR [edx],ebp
  4026da:	and    ah,dl
  4026dc:	jmp    0xf6129e57
  4026e1:	push   DWORD PTR [edx+0x46]
  4026e4:	jnp    0x4026de
  4026e6:	jle    0x4026a7
  4026e8:	std    
  4026e9:	lss    eax,FWORD PTR [edx]
  4026ec:	xor    al,0xc6
  4026ee:	inc    ebx
  4026ef:	mov    DWORD PTR [esi],edx
  4026f1:	push   cs
  4026f2:	out    dx,al
  4026f3:	mov    esp,0x31a54d71
  4026f8:	icebp  
  4026f9:	hlt    
  4026fa:	pop    eax
  4026fb:	push   esp
  4026fc:	das    
  4026fd:	arpl   WORD PTR [ecx-0x5eb3adff],di
  402703:	lods   eax,DWORD PTR ds:[esi]
  402704:	ret    0xd1dc
  402707:	stc    
  402708:	inc    ebx
  40270a:	bound  esi,QWORD PTR [ebx+0x66]
  40270d:	mov    ebp,0xb787785e
  402712:	sub    ch,dh
  402714:	in     al,0xb5
  402716:	mov    ch,0x65
  402718:	jo     0x40269e
  40271a:	jo     0x40273a
  40271c:	lds    ebx,FWORD PTR [ecx]
  40271e:	std    
  40271f:	add    eax,0xc1b79d2f
  402724:	out    dx,al
  402725:	or     eax,eax
  402727:	je     0x4026f0
  402729:	jbe    0x402720
  40272b:	mov    ?,WORD PTR ds:0xdf166555
  402731:	shl    BYTE PTR [eax],1
  402733:	cmp    ecx,DWORD PTR [esi+eiz*8-0x4ba26db7]
  40273a:	jle    0x402761
  40273c:	shl    al,0x37
  40273f:	jno    0x4027a9
  402741:	lahf   
  402742:	pop    esp
  402743:	retf   
  402744:	dec    ecx
  402745:	in     eax,0xbd
  402747:	test   eax,0x8cfa2e21
  40274c:	fwait
  40274d:	(bad)  
  40274e:	fwait
  40274f:	xchg   esp,eax
  402750:	addr16 xchg edx,eax
  402752:	inc    ebp
  402753:	and    DWORD PTR [eax+0x63],0x250ab8dd
  40275a:	(bad)  
  40275b:	fiadd  WORD PTR [eax-0x66ad25c6]
  402761:	scas   eax,DWORD PTR es:[edi]
  402762:	and    eax,DWORD PTR [eax+0x7b9d5eb9]
  402768:	mov    al,0x77
  40276a:	(bad)  
  40276b:	xor    DWORD PTR [ecx-0x6c],ebx
  40276e:	cmp    BYTE PTR [edi],cl
  402770:	fs jne 0x402733
  402773:	push   ebp
  402774:	ja     0x4027ad
  402776:	jecxz  0x4027a4
  402778:	(bad)  
  402779:	mov    esi,0x6d362b1
  40277e:	dec    edx
  40277f:	leave  
  402780:	sub    DWORD PTR [eax+ebp*4],ecx
  402783:	ds push esp
  402785:	ficom  DWORD PTR [ecx+0x632933de]
  40278b:	push   eax
  40278c:	scas   eax,DWORD PTR es:[edi]
  40278d:	jb     0x402796
  40278f:	or     DWORD PTR [ebx+0x5b17e1ed],eax
  402795:	inc    ecx
  402796:	rcl    BYTE PTR [edi+0x44bed9de],0xcc
  40279d:	daa    
  40279e:	retf   0xab73
  4027a1:	retf   0x88a6
  4027a4:	adc    BYTE PTR gs:[esi-0x626e79],bh
  4027ab:	mov    esi,0x5678ff72
  4027b0:	clc    
  4027b1:	ds jno 0x402825
  4027b4:	mov    ds:0x53d5866d,al
  4027b9:	adc    BYTE PTR [eax-0x32858216],0x3a
  4027c0:	int    0xeb
  4027c2:	ret    0x49fb
  4027c5:	cmp    eax,0x40476d3e
  4027ca:	mul    DWORD PTR [esi-0x28]
  4027cd:	sahf   
  4027ce:	sub    esi,edx
  4027d0:	cld    
  4027d1:	dec    ebx
  4027d2:	and    DWORD PTR ds:0xc5e90b94,0xffffffaa
  4027d9:	dec    esi
  4027da:	mov    ch,0xde
  4027dc:	and    al,0x4b
  4027de:	cmp    ch,BYTE PTR [edx-0x5]
  4027e1:	jae    0x402818
  4027e3:	cli    
  4027e4:	outs   dx,BYTE PTR ds:[esi]
  4027e5:	fdiv   QWORD PTR [edi+0x6da5cf3a]
  4027eb:	sub    DWORD PTR [edi+0x2b2caa3],edx
  4027f1:	mov    esi,0x85d8283e
  4027f6:	div    ch
  4027f8:	loope  0x4027ba
  4027fa:	xor    al,0xc4
  4027fc:	dec    edi
  4027fd:	loope  0x4027ea
  4027ff:	xchg   edi,eax
  402800:	or     al,0xb2
  402802:	int    0xcd
  402804:	cmp    ebp,DWORD PTR [ecx+0x69]
  402807:	xchg   edi,eax
  402808:	in     al,0xce
  40280a:	sub    BYTE PTR [eax+0x6f12beda],bl
  402810:	add    DWORD PTR ds:0x9c77b8e5,0x36
  402817:	dec    edi
  402818:	mov    bh,0x1d
  40281a:	fld    QWORD PTR [ecx-0x733b16bb]
  402820:	scas   al,BYTE PTR es:[edi]
  402821:	xor    eax,0xd1ec3953
  402826:	fsub   QWORD PTR [ecx]
  402828:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40282a:	push   0xfe718736
  40282f:	iret   
  402830:	outs   dx,BYTE PTR ds:[esi]
  402831:	xor    DWORD PTR [esi-0x66],edi
  402834:	mov    ebp,0x1f150195
  402839:	push   ebx
  40283a:	push   ebx
  40283b:	adc    BYTE PTR [eax+0x77],0xdc
  40283f:	out    0x1,eax
  402841:	stc    
  402842:	mov    dh,BYTE PTR [eax-0x19]
  402845:	mov    BYTE PTR [ecx+0x47ab5f50],bh
  40284b:	adc    DWORD PTR [edi],0xd320ea4f
  402851:	mov    bh,0xa
  402853:	(bad)  
  402855:	sbb    DWORD PTR [edx+0x1e7e969b],ebp
  40285b:	lods   al,BYTE PTR ds:[esi]
  40285c:	sub    dl,BYTE PTR [ecx]
  40285e:	adc    bh,BYTE PTR [ebp-0x35d44d09]
  402864:	mov    ds:0x9a92057a,al
  402869:	sub    al,0x3a
  40286b:	sub    eax,0x12432661
  402870:	and    DWORD PTR [edi-0x51557a4d],ebx
  402876:	adc    BYTE PTR [ebp-0x6d99e46f],ah
  40287c:	shl    DWORD PTR [eax-0xadb253b],cl
  402882:	es mov dl,0x14
  402885:	loop   0x4028f0
  402887:	xlat   BYTE PTR ds:[ebx]
  402888:	js     0x4028dc
  40288a:	cmc    
  40288b:	in     eax,dx
  40288c:	stos   DWORD PTR es:[edi],eax
  40288d:	push   es
  40288e:	adc    DWORD PTR [ecx+0x207bb2b9],edi
  402894:	out    dx,al
  402895:	repz sahf 
  402897:	cs pop edx
  402899:	ja     0x4028ca
  40289b:	xlat   BYTE PTR ds:[ebx]
  40289c:	std    
  40289d:	int    0xa8
  40289f:	sub    eax,0x42fc1db9
  4028a4:	mov    ebx,0x82a9fa18
  4028a9:	push   edx
  4028aa:	mov    DWORD PTR [edx-0x591bd345],esp
  4028b0:	lods   al,BYTE PTR ds:[esi]
  4028b1:	push   esi
  4028b2:	enter  0x1770,0x67
  4028b6:	xchg   DWORD PTR [ebp-0x1e7b09ac],edx
  4028bc:	pop    edi
  4028bd:	cs inc edx
  4028bf:	mov    edx,DWORD PTR [edi]
  4028c1:	cmp    ah,bh
  4028c3:	mov    esi,0x42dae760
  4028c8:	rcr    esi,0x32
  4028cb:	rol    DWORD PTR [edi+0x43],cl
  4028ce:	repnz aam 0xa8
  4028d1:	clc    
  4028d2:	xor    dl,ah
  4028d4:	sub    DWORD PTR [eax],0xc7fe64a0
  4028da:	aas    
  4028db:	fdivr  QWORD PTR [ebp+0x7480e9c2]
  4028e1:	ror    bl,cl
  4028e3:	shr    DWORD PTR [ebp-0x74],cl
  4028e6:	mov    dh,0x13
  4028e8:	push   edi
  4028e9:	loop   0x4028a0
  4028eb:	pop    edi
  4028ec:	xor    DWORD PTR [ebx+0x45153f3e],esi
  4028f2:	pop    ebp
  4028f3:	(bad)  [esi-0x21]
  4028f6:	xor    BYTE PTR [ebx],al
  4028f8:	(bad)  
  4028f9:	lahf   
  4028fa:	mov    eax,0x7b059ea7
  4028ff:	mov    al,ds:0x2f2bd076
  402904:	xor    eax,0x7cc8e71
  402909:	or     DWORD PTR [edx-0x7de78be1],edi
  40290f:	and    eax,0x24b79bd5
  402914:	jl     0x402936
  402916:	sar    esi,0x3d
  402919:	pop    ds
  40291a:	test   cl,ah
  40291c:	(bad)  
  40291d:	jne    0x4028a5
  40291f:	std    
  402920:	inc    edx
  402921:	pop    edi
  402922:	test   eax,0x407a338e
  402927:	test   BYTE PTR [eax],ch
  402929:	addr16 add al,0x3a
  40292c:	dec    edi
  40292d:	push   edi
  40292e:	loop   0x4028c5
  402930:	xchg   al,ch
  402932:	scas   eax,DWORD PTR es:[edi]
  402933:	cmp    BYTE PTR [ebx+0x31ff999d],bh
  402939:	cmp    esi,esi
  40293b:	lea    edx,[esp+esi*1-0x75]
  40293f:	dec    ebp
  402940:	in     al,dx
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x428419,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284e1,0x0
  40295a:	mov    DWORD PTR ds:0x428535,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284e5,0x7d3d
  402979:	mov    eax,ds:0x428341
  40297e:	cmp    DWORD PTR ds:0x4284e1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428471,0x428359
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428545,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42851d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428435,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428365,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428441,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42833d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42844d,0x428425
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x4283f9,0x428415
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428569,0x428321
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428441,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428359,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284b1
  402a42:	mov    eax,ds:0x428529
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422570
  402a51:	add    edx,DWORD PTR ds:0x428355
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428409,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42833d
  402a69:	movzx  edx,WORD PTR ds:0x42832d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428409,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428459
  402a9c:	sbb    edx,DWORD PTR ds:0x428551
  402aa2:	mov    DWORD PTR ds:0x428459,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428461
  402aaf:	adc    DWORD PTR ds:0x428539,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42831d
  402ac1:	or     DWORD PTR ds:0x428359,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284c1
  402ad7:	adc    DWORD PTR ds:0x428539,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428341,0x0
  402aea:	mov    DWORD PTR ds:0x4284c9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42835d
  402afa:	mov    DWORD PTR ds:0x428331,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428565,ecx
  402b0f:	cmp    DWORD PTR ds:0x428341,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428181
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428228
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428365
  402b40:	sub    DWORD PTR ds:0x42834d,edx
  402b46:	sbb    DWORD PTR ds:0x428439,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42831d
  402b53:	adc    DWORD PTR ds:0x42845d,edx
  402b59:	add    DWORD PTR ds:0x42855d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42856d
  402b67:	xor    edx,DWORD PTR ds:0x4284d5
  402b6d:	mov    DWORD PTR ds:0x42856d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42844d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42831d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284c1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428329
  402baa:	mov    DWORD PTR ds:0x428335,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428339,0x124b
  402bbf:	mov    DWORD PTR ds:0x428411,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42831d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284dd,edx
  402be7:	and    edx,DWORD PTR ds:0x428415
  402bed:	mov    edx,DWORD PTR ds:0x428565
  402bf3:	xor    DWORD PTR ds:0x4284b5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285a9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428419,edx
  402c07:	and    DWORD PTR ds:0x42833d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428331,0x0
  402c18:	mov    DWORD PTR ds:0x4284d1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428471,edx
  402c34:	cmp    DWORD PTR ds:0x428331,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428331,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428339,0x4284f1
  402c69:	sbb    DWORD PTR ds:0x4284d5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x42849d
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x4283f5,edx
  402c81:	xor    DWORD PTR ds:0x428445,0x428411
  402c8b:	sbb    DWORD PTR ds:0x428461,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428435,0x0
  402c9f:	mov    DWORD PTR ds:0x428551,0x384
  402ca9:	mov    DWORD PTR ds:0x428335,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428539
  402cb9:	mov    DWORD PTR ds:0x4284f1,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284dd,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428435,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x4284f1,0x612a
  402d00:	sbb    DWORD PTR ds:0x428555,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428555
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x4283f5
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x4284f1,0x0
  402d37:	mov    DWORD PTR ds:0x428459,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42841d
  402d47:	mov    edx,DWORD PTR ds:0x4284ed
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428441,0x114
  402d5c:	cmp    DWORD PTR ds:0x4284f1,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428549
  402d79:	or     DWORD PTR ds:0x428429,ebx
  402d7f:	sub    DWORD PTR ds:0x4284ed,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42853d
  402d8b:	xor    DWORD PTR ds:0x4284dd,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42832d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428429,0x428409
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x4284f1
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428471
  402dc2:	xor    DWORD PTR ds:0x4284dd,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428461,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428401,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42851d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285a9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428561,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x4283fd,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42856d,0x0
  402e23:	mov    DWORD PTR ds:0x42845d,ebx
  402e29:	mov    DWORD PTR ds:0x428461,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428409
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42842d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42846d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42856d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428341,0x7db0
  402e73:	sub    DWORD PTR ds:0x428571,ecx
  402e79:	adc    DWORD PTR ds:0x4283fd,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284d9
  402e85:	mov    edx,DWORD PTR ds:0x42838d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42835d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428441
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284d9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	stos   DWORD PTR es:[di],eax
  402ebb:	clc    
  402ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebd:	mov    ebp,0xbdbebee0
  402ec2:	les    edi,FWORD PTR [esi-0x5cbe4f42]
  402ec8:	xchg   ebx,eax
  402ec9:	retf   
  402eca:	mov    DWORD PTR [ecx-0x3c57113c],esi
  402ed0:	push   ds
  402ed1:	xor    BYTE PTR [edx+0x1a9f4dd0],bh
  402ed7:	idiv   BYTE PTR [edi-0x24]
  402eda:	jle    0x402ede
  402edc:	(bad)  
  402edd:	lea    ecx,[ebx]
  402edf:	mov    cs,WORD PTR [edi+edx*8+0x7d10a4f9]
  402ee6:	aam    0x82
  402ee8:	(bad)  
  402ee9:	push   ss
  402eea:	hlt    
  402eeb:	cdq    
  402eec:	mov    edi,0x4eeea699
  402ef1:	ror    esi,1
  402ef3:	jl     0x402f01
  402ef5:	pop    esi
  402ef6:	xor    eax,0xf3e5d5ab
  402efb:	popa   
  402efc:	pop    edi
  402efd:	inc    esi
  402efe:	cmp    eax,0x3f88fa77
  402f03:	or     al,0xfa
  402f05:	ds ret 0x8486
  402f09:	pop    ecx
  402f0a:	out    0x20,eax
  402f0c:	push   ecx
  402f0d:	popa   
  402f0e:	icebp  
  402f0f:	sbb    DWORD PTR [edx-0x234ed4b7],0xffffffa2
  402f16:	dec    esp
  402f17:	jmp    0xafbd0d9d
  402f1c:	cmp    DWORD PTR [ecx-0x2a45e745],ebx
  402f22:	push   ecx
  402f23:	push   eax
  402f24:	push   cs
  402f25:	inc    ebp
  402f26:	inc    ebx
  402f27:	jp     0x402fa0
  402f29:	std    
  402f2a:	inc    esi
  402f2b:	cmp    ah,cl
  402f2d:	add    dl,cl
  402f2f:	out    0x9c,eax
  402f31:	or     BYTE PTR [ecx+0x36],dl
  402f34:	rcl    DWORD PTR [ebp+0x6ee51907],0xcd
  402f3b:	mov    bh,0xf4
  402f3d:	mov    esi,0x5d3407a4
  402f42:	add    eax,0x65b7192d
  402f47:	ret    
  402f48:	(bad)  
  402f49:	lahf   
  402f4a:	jb     0x402ee7
  402f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4d:	outs   dx,DWORD PTR ds:[esi]
  402f4e:	mov    ebx,0x13fc0166
  402f53:	sub    eax,edx
  402f55:	pop    es
  402f56:	ins    BYTE PTR es:[edi],dx
  402f57:	push   cs
  402f58:	add    al,0x56
  402f5a:	dec    esp
  402f5b:	clc    
  402f5c:	inc    esi
  402f5d:	dec    edx
  402f5e:	mov    al,0x4e
  402f60:	xchg   DWORD PTR [esi+0x6e],ecx
  402f63:	sti    
  402f64:	ds test eax,0x2df916b6
  402f6a:	test   al,0x44
  402f6c:	pop    edi
  402f6d:	or     ah,BYTE PTR [ebx-0xc71d87c]
  402f73:	mov    ebp,0x296ba99a
  402f78:	stc    
  402f79:	xor    DWORD PTR [ecx],edi
  402f7b:	inc    eax
  402f7c:	inc    ebp
  402f7d:	pop    edi
  402f7e:	push   ebp
  402f7f:	add    cl,BYTE PTR [ebp+0x3717cfc1]
  402f85:	adc    DWORD PTR [ecx+ecx*2+0x63],edx
  402f89:	or     al,0x33
  402f8b:	mov    ebp,ebp
  402f8d:	test   bl,0x85
  402f90:	mov    ch,0x6
  402f92:	fadd   DWORD PTR ds:0xcef7ccbd
  402f98:	hlt    
  402f99:	ret    0xa92e
  402f9c:	inc    edx
  402f9d:	sub    al,0xb6
  402f9f:	std    
  402fa0:	push   esi
  402fa1:	lods   al,BYTE PTR ds:[esi]
  402fa2:	dec    ebp
  402fa3:	popa   
  402fa4:	push   ebp
  402fa5:	pop    ecx
  402fa6:	push   ss
  402fa7:	cmp    dl,BYTE PTR [esi-0x1a]
  402faa:	out    dx,al
  402fab:	les    ebp,FWORD PTR [edx-0x2e9ac09f]
  402fb1:	fs mov edx,ecx
  402fb4:	push   esp
  402fb5:	mov    eax,0x40c63619
  402fba:	cdq    
  402fbb:	pop    ecx
  402fbc:	(bad)  
  402fbd:	xor    DWORD PTR [esi-0x34],esi
  402fc0:	clc    
  402fc1:	jge    0x402f74
  402fc3:	mov    esp,0x53f946ba
  402fc8:	or     BYTE PTR [edx+0x27933d0d],0xbb
  402fcf:	retf   0x5b40
  402fd2:	iret   
  402fd3:	aam    0x70
  402fd5:	mov    DWORD PTR [ebx],edx
  402fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd8:	rcr    edx,0x91
  402fdb:	xchg   BYTE PTR [esi-0x1bbbd602],bh
  402fe1:	stos   BYTE PTR es:[edi],al
  402fe2:	out    0x90,al
  402fe4:	mov    BYTE PTR [ebx],al
  402fe6:	push   0xffffffa2
  402fe8:	mov    bl,0xf1
  402fea:	push   ds
  402feb:	and    al,cl
  402fed:	xchg   DWORD PTR [ebx+0x551283dc],edi
  402ff3:	lock mov al,ds:0x8e94471a
  402ff9:	and    eax,0x281e695c
  402ffe:	mov    edx,0x207378c2
  403003:	xchg   edx,ecx
  403005:	mov    al,0xb9
  403007:	push   ecx
  403008:	xor    dh,dl
  40300a:	jecxz  0x403009
  40300c:	ins    BYTE PTR es:[edi],dx
  40300d:	in     al,dx
  40300e:	pop    ds
  40300f:	fistp  WORD PTR ds:0x154e7151
  403015:	stc    
  403016:	mov    ds:0xfc7b6a8c,al
  40301b:	arpl   WORD PTR [ebp-0x757bf327],di
  403021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403022:	mov    edx,DWORD PTR [edx-0x4f641f22]
  403028:	bound  ebx,QWORD PTR [ecx]
  40302a:	dec    eax
  40302b:	xor    esi,ebx
  40302d:	fist   DWORD PTR [ebx-0x6e]
  403030:	js     0x403010
  403032:	sar    DWORD PTR [eax],0x4
  403035:	jae    0x4030b2
  403037:	pop    es
  403038:	sar    BYTE PTR [eax],1
  40303a:	cdq    
  40303b:	sbb    al,0xd1
  40303d:	jo     0x403037
  40303f:	or     bh,BYTE PTR [ebp-0x52b281fb]
  403045:	xchg   ecx,eax
  403046:	add    eax,0xb819238c
  40304b:	inc    edx
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40304e:	mov    esi,0x4082e748
  403053:	sub    BYTE PTR ds:0xf32ea8fc,bl
  403059:	shl    esp,cl
  40305b:	xor    ebp,DWORD PTR [edi]
  40305d:	pop    ds
  40305e:	dec    edx
  40305f:	sbb    DWORD PTR [edx+0x7cd298d6],0x60
  403066:	push   ecx
  403067:	fsub   st,st(0)
  403069:	pop    es
  40306a:	adc    esp,DWORD PTR [edx]
  40306c:	jle    0x403065
  40306e:	or     al,0xcc
  403070:	cmp    DWORD PTR [esi],ecx
  403072:	loop   0x40304b
  403074:	scas   eax,DWORD PTR es:[edi]
  403075:	mov    ds:0x79307fcd,eax
  40307a:	test   eax,0x7f0edba5
  40307f:	out    dx,al
  403080:	adc    cl,BYTE PTR [esi+0x6f576945]
  403086:	mov    cs,WORD PTR [edx]
  403088:	loope  0x403036
  40308a:	lods   al,BYTE PTR ds:[esi]
  40308b:	sar    DWORD PTR [edi-0x49c72e21],cl
  403091:	mov    edx,0xc97b6ba7
  403096:	xlat   BYTE PTR ds:[ebx]
  403097:	lahf   
  403098:	hlt    
  403099:	adc    esi,ebx
  40309b:	rep outs dx,BYTE PTR ds:[esi]
  40309d:	or     eax,0xd715ca46
  4030a2:	(bad)
  4030a5:	mov    ds:0x1119d19,al
  4030aa:	mov    ds:0xa7c08a43,eax
  4030af:	pop    esp
  4030b0:	cmp    BYTE PTR [edx],cl
  4030b2:	scas   al,BYTE PTR es:[edi]
  4030b3:	and    al,BYTE PTR fs:[eax]
  4030b6:	test   eax,0x35009640
  4030bb:	div    dh
  4030bd:	push   edi
  4030be:	jns    0x403073
  4030c0:	mov    cl,0x92
  4030c2:	inc    esp
  4030c3:	cmp    ah,BYTE PTR [ecx+edi*2]
  4030c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c7:	out    dx,al
  4030c8:	mov    dl,al
  4030ca:	cmp    BYTE PTR [edx],ah
  4030cc:	cmp    bl,BYTE PTR [eax]
  4030ce:	stos   BYTE PTR es:[edi],al
  4030cf:	mov    es,esp
  4030d1:	pushf  
  4030d2:	adc    DWORD PTR [eax+edi*1-0x70],edi
  4030d6:	jecxz  0x403148
  4030d8:	sub    BYTE PTR [edx],bl
  4030da:	jge    0x403082
  4030dc:	push   edi
  4030dd:	xchg   ebp,eax
  4030de:	mov    esi,ecx
  4030e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e1:	add    ah,bh
  4030e3:	aaa    
  4030e4:	loope  0x40308f
  4030e6:	push   ecx
  4030e7:	cmp    al,BYTE PTR [ebp-0x1e]
  4030ea:	dec    ecx
  4030eb:	(bad)  
  4030ec:	jmp    0x75dc:0x6b13d970
  4030f3:	inc    edi
  4030f4:	mov    bh,0x88
  4030f6:	sub    DWORD PTR [esi],0xefca2fb6
  4030fc:	sbb    BYTE PTR [ebp+0x792aed27],dl
  403102:	pusha  
  403103:	inc    ecx
  403104:	mov    cl,0xcb
  403106:	dec    edx
  403107:	xchg   esi,eax
  403108:	aaa    
  403109:	aas    
  40310a:	rcr    BYTE PTR [esi+0x46],cl
  40310d:	xor    eax,0x56c85ae6
  403112:	sub    al,0xbf
  403114:	mov    ds:0x3c5a307a,eax
  403119:	(bad)  
  40311a:	push   ds
  40311b:	push   edi
  40311c:	in     al,dx
  40311d:	jno    0x403183
  40311f:	inc    ebx
  403120:	(bad)  
  403121:	in     al,dx
  403122:	scas   eax,DWORD PTR es:[edi]
  403123:	sbb    BYTE PTR [ecx+edi*8+0x6cd1128c],cl
  40312a:	jp     0x403168
  40312c:	inc    esi
  40312d:	xor    ch,bl
  40312f:	dec    esi
  403130:	lea    ebx,[edx]
  403132:	sub    al,0xf0
  403134:	cmp    BYTE PTR [edi],ch
  403136:	test   al,0x42
  403138:	popf   
  403139:	push   edx
  40313a:	call   0x2987b286
  40313f:	cli    
  403140:	sbb    esi,ecx
  403142:	inc    ebp
  403143:	jecxz  0x403155
  403145:	fsubr  QWORD PTR [edi]
  403147:	xchg   esp,eax
  403148:	mov    ah,0x2
  40314a:	xchg   esp,eax
  40314b:	push   ds
  40314c:	jp     0x4030fc
  40314e:	stc    
  40314f:	xor    BYTE PTR [ebx],ch
  403151:	jne    0x403159
  403153:	call   0xa321:0x2eafeed1
  40315a:	dec    ebx
  40315b:	jle    0x403130
  40315d:	pushf  
  40315e:	in     eax,dx
  40315f:	mov    ebp,0x3879d8d7
  403164:	and    eax,0xcfcd9a30
  403169:	mov    eax,ds:0x7d4f9590
  40316e:	inc    esp
  40316f:	xor    edx,DWORD PTR [ecx]
  403171:	jle    0x403148
  403173:	(bad)  
  403174:	cld    
  403175:	lods   al,BYTE PTR ds:[esi]
  403176:	sub    al,0xa7
  403178:	cmp    ebx,DWORD PTR [esi-0x3d]
  40317b:	push   0x7d42d756
  403180:	popf   
  403181:	mov    al,ds:0x8f0ca03a
  403186:	shr    BYTE PTR [edi-0x78],1
  403189:	xchg   bl,dh
  40318b:	jecxz  0x40315a
  40318d:	jb     0x40316b
  40318f:	out    0x27,al
  403191:	addr16 mov esi,0x19a1d34
  403197:	sub    BYTE PTR [ebp+0x66],bh
  40319a:	test   DWORD PTR [ebp-0x1a],eax
  40319d:	rcr    BYTE PTR [edi-0x6fd607d4],1
  4031a3:	enter  0x2cbb,0x31
  4031a7:	cs in  eax,0x99
  4031aa:	pop    ds
  4031ab:	in     al,dx
  4031ac:	mov    DWORD PTR [edi-0x67],edx
  4031af:	loopne 0x4031c6
  4031b1:	mov    dh,BYTE PTR [ecx+0x51]
  4031b4:	test   edx,0x4bd41ce6
  4031ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bb:	pop    ds
  4031bc:	mov    dh,0xf9
  4031be:	test   eax,0x4b34a73b
  4031c3:	loope  0x403162
  4031c5:	ins    DWORD PTR es:[edi],dx
  4031c6:	xor    eax,DWORD PTR [esi-0x4e4f6e65]
  4031cc:	add    eax,0x149589eb
  4031d1:	addr16 push cs
  4031d3:	(bad)  
  4031d4:	retf   0xf71b
  4031d7:	lods   eax,DWORD PTR ds:[esi]
  4031d8:	jl     0x4031ab
  4031da:	scas   eax,DWORD PTR es:[edi]
  4031db:	ds dec edi
  4031dd:	or     ebx,edi
  4031df:	mov    esp,0x7eefff23
  4031e4:	gs ror cl,0x3e
  4031e8:	push   ebx
  4031e9:	jne    0x403234
  4031eb:	and    BYTE PTR [ebx+0x4c],bl
  4031ee:	ret    
  4031ef:	cld    
  4031f0:	leave  
  4031f1:	sbb    dh,ch
  4031f3:	jne    0x40323c
  4031f5:	xchg   ebx,eax
  4031f6:	shr    DWORD PTR [edi+0x5d118114],1
  4031fc:	(bad)  
  4031fd:	gs imul ecx,ecx,0xe74f9e5f
  403204:	(bad)  
  403205:	in     eax,dx
  403206:	ret    
  403207:	cmc    
  403208:	mov    eax,ds:0x4437de5
  40320d:	xchg   ecx,eax
  40320e:	cmp    al,cl
  403210:	and    edx,DWORD PTR [esi+edx*8]
  403213:	out    dx,eax
  403214:	out    dx,eax
  403215:	retf   
  403216:	adc    dh,BYTE PTR [edx+0x56]
  403219:	loop   0x40324b
  40321b:	loopne 0x403225
  40321d:	adc    DWORD PTR [esi],esi
  40321f:	mov    WORD PTR [ecx-0x12],fs
  403222:	icebp  
  403223:	mov    ah,0x8d
  403225:	xchg   ecx,eax
  403226:	add    BYTE PTR [eax+0x67748a60],ch
  40322c:	and    eax,0x5c1f86c8
  403231:	pop    ds
  403232:	sbb    eax,0xc8f7c7c8
  403237:	in     eax,dx
  403238:	push   es
  403239:	xchg   BYTE PTR [ecx+ebx*8+0x3323291],bh
  403240:	fldcw  WORD PTR [ebx+eax*8+0x65]
  403244:	inc    edx
  403245:	cli    
  403246:	jle    0x403224
  403248:	dec    edx
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284c9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428569,0x42834d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428449
  40326f:	xor    DWORD PTR ds:0x4283fd,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284e9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284b9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428545,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42854d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284e1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x4283f5
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42834d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42854d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42840d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284c5,0x290
  403302:	sbb    DWORD PTR ds:0x428401,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284e1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428421
  403318:	mov    DWORD PTR ds:0x4284bd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284c1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428365,0x1634
  403337:	mov    DWORD PTR ds:0x4284d9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284e1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428421,0x42846d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428401
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284d9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428355,0x4284c9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428325,0x428445
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42843d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42832d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x4283f9,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428559,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428351
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428561,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428429,0x428421
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428355,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428405,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284ed,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284c1,0x0
  403427:	mov    DWORD PTR ds:0x428551,0xe2a
  403431:	mov    DWORD PTR ds:0x428339,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428565,0xfd5
  40344b:	mov    DWORD PTR ds:0x428439,ecx
  403451:	cmp    DWORD PTR ds:0x4284c1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428257
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42841d
  403489:	sub    edx,DWORD PTR ds:0x4284d5
  40348f:	mov    DWORD PTR ds:0x42841d,edx
  403495:	mov    DWORD PTR ds:0x428351,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42835d
  4034a5:	mov    edx,DWORD PTR ds:0x42856d
  4034ab:	and    DWORD PTR ds:0x428425,edx
  4034b1:	inc    DWORD PTR ds:0x42831d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428335,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428539,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428419,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284d1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428471,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428459,0x4284dd
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428339,0x428351
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428331,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284e1,0x428461
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42843d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fstp   QWORD PTR [ebp-0x79]
  403557:	scas   al,BYTE PTR es:[edi]
  403558:	iret   
  403559:	mov    esi,0xbdbebee8
  40355e:	les    edi,FWORD PTR [esi-0x732d6942]
  403564:	ror    ebp,0x77
  403567:	ds pop ebp
  403569:	mov    bh,0x2e
  40356b:	mov    edx,0xc57dc297
  403570:	idiv   DWORD PTR ds:0x527ad31
  403576:	cmp    eax,0x4ea08bcc
  40357b:	mov    esi,0x15e175c5
  403580:	pop    eax
  403581:	inc    si
  403583:	xlat   BYTE PTR ds:[ebx]
  403584:	adc    ebp,esp
  403586:	ret    
  403587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403588:	aaa    
  403589:	dec    esi
  40358a:	jge    0x403555
  40358c:	or     eax,0xbbe42f3d
  403591:	in     eax,0x1d
  403593:	xor    esi,DWORD PTR [ecx-0x9c4462c]
  403599:	(bad)  
  40359a:	jecxz  0x403547
  40359c:	mov    cl,dh
  40359e:	cs sub al,0xfa
  4035a1:	adc    esi,DWORD PTR [eax+0x388042b6]
  4035a7:	mov    ch,0xf1
  4035a9:	in     al,0x96
  4035ab:	ins    BYTE PTR es:[edi],dx
  4035ac:	inc    DWORD PTR [esi-0x77ac284f]
  4035b2:	dec    esp
  4035b3:	pop    ebx
  4035b4:	or     bh,0x44
  4035b7:	and    ecx,DWORD PTR [ecx-0x27763f2]
  4035bd:	inc    edx
  4035be:	and    al,0x37
  4035c0:	jbe    0x4035ce
  4035c2:	adc    dl,bh
  4035c4:	jecxz  0x403571
  4035c6:	inc    ecx
  4035c7:	je     0x40361f
  4035c9:	cld    
  4035ca:	push   eax
  4035cb:	sahf   
  4035cc:	jae    0x403635
  4035ce:	cwde   
  4035cf:	dec    edi
  4035d0:	jmp    0x403627
  4035d2:	xor    dh,0xcd
  4035d5:	mov    al,0xa7
  4035d7:	imul   esp,esi,0x5c8bbd0
  4035dd:	xor    BYTE PTR [edi-0x6e02984e],dh
  4035e3:	hlt    
  4035e4:	pop    ecx
  4035e5:	cld    
  4035e6:	scas   al,BYTE PTR es:[edi]
  4035e7:	fadd   st,st(2)
  4035e9:	mov    WORD PTR [esi],?
  4035eb:	loop   0x4035da
  4035ed:	jge    0x4035a4
  4035ef:	dec    eax
  4035f0:	inc    ebp
  4035f1:	and    eax,0x4067f05
  4035f6:	sbb    bh,ah
  4035f8:	fisubr WORD PTR [edx+0x5a]
  4035fb:	clc    
  4035fc:	jne    0x4035be
  4035fe:	adc    ebx,DWORD PTR [esi+0x4d]
  403601:	loope  0x40359f
  403603:	jg     0x4035db
  403605:	pop    ss
  403606:	mov    esp,0x2065f288
  40360b:	xor    ch,ah
  40360d:	test   BYTE PTR [ebx-0x16],0xc9
  403611:	push   eax
  403612:	adc    al,0x51
  403614:	retf   
  403615:	sbb    BYTE PTR [edi-0x4c147a99],ch
  40361b:	adc    bl,BYTE PTR [ebx+0x52]
  40361e:	mov    edx,0xe0065224
  403623:	xor    BYTE PTR [ecx+0x36ac89ff],bh
  403629:	fstp   TBYTE PTR [edi-0xe]
  40362c:	scas   al,BYTE PTR es:[edi]
  40362d:	pop    edx
  40362e:	mov    ds:0x6493f4f8,eax
  403633:	aad    0xf9
  403635:	imul   ebp,DWORD PTR [edi+ebp*8+0x8],0x36
  40363a:	add    esp,DWORD PTR [ebx*4-0x5aa33de5]
  403641:	sbb    edi,0x12
  403644:	fcomp  DWORD PTR [ecx]
  403646:	shl    ecx,cl
  403648:	push   cs
  403649:	icebp  
  40364a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364c:	and    eax,0x746d28c4
  403651:	cmp    al,0xc4
  403653:	cs popa 
  403655:	and    BYTE PTR [edi],ah
  403657:	imul   eax,DWORD PTR [ebx+0x2a],0x799648de
  40365e:	push   ebx
  40365f:	int    0x4a
  403661:	ins    BYTE PTR es:[edi],dx
  403662:	xchg   ebx,eax
  403663:	cmp    eax,0xdb805765
  403668:	inc    ecx
  403669:	mov    dh,0x43
  40366b:	fs scas al,BYTE PTR es:[edi]
  40366d:	or     al,0x41
  40366f:	mov    ecx,0xf008823b
  403674:	inc    edx
  403675:	add    eax,0x4513b0c1
  40367a:	out    dx,eax
  40367b:	sbb    dh,BYTE PTR [eax+0x67]
  40367e:	push   0x2c267f8d
  403683:	enter  0x932b,0x5f
  403687:	mov    dh,0xee
  403689:	jmp    0x40362f
  40368b:	xchg   esp,eax
  40368c:	and    ebx,DWORD PTR [edx+0x27b96900]
  403692:	cmp    al,0xec
  403694:	mov    esi,0x90bf45a0
  403699:	xchg   BYTE PTR [eax],dh
  40369b:	lods   al,BYTE PTR ds:[esi]
  40369c:	repz jne 0x40369f
  40369f:	xor    BYTE PTR [eax-0x12944c4c],dl
  4036a5:	(bad)  
  4036a6:	jno    0x403676
  4036a8:	sub    al,0x78
  4036aa:	repz repz cmp al,0x24
  4036ae:	mov    esi,0x2c1bc5e7
  4036b3:	mov    edi,0xb2cfbdf5
  4036b8:	push   ebx
  4036b9:	imul   BYTE PTR [ecx+esi*2+0x57]
  4036bd:	and    al,0x2c
  4036bf:	outs   dx,BYTE PTR ds:[esi]
  4036c0:	aad    0x8c
  4036c2:	lods   al,BYTE PTR ds:[esi]
  4036c3:	push   0x4a7b9f49
  4036c8:	out    0xcb,al
  4036ca:	add    ah,bh
  4036cc:	das    
  4036cd:	(bad)  
  4036ce:	mov    cl,0xdd
  4036d0:	mov    ch,0x17
  4036d2:	adc    al,0x38
  4036d4:	shl    edi,0x31
  4036d7:	push   esi
  4036d8:	xchg   ebx,eax
  4036d9:	jmp    0x26452829
  4036de:	sbb    edi,esi
  4036e0:	jmp    0x4bae8730
  4036e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e6:	dec    ebx
  4036e7:	mov    eax,0xd2910aa2
  4036ec:	xchg   ebp,eax
  4036ed:	adc    eax,0x672e20a8
  4036f2:	frstor [edx-0x5]
  4036f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f6:	cmp    bl,BYTE PTR [edx-0x58133d24]
  4036fc:	enter  0x87c1,0x3
  403700:	rcl    esp,0xa7
  403703:	in     al,dx
  403704:	test   BYTE PTR [edx+0x68],bh
  403707:	mov    cl,0xad
  403709:	popa   
  40370a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370b:	ficomp WORD PTR [eax-0x33]
  40370e:	add    bh,BYTE PTR [ecx]
  403710:	mov    edi,0xdb3d4a7b
  403715:	inc    ebp
  403716:	mov    BYTE PTR [edx-0x49],0x1c
  40371a:	je     0x403741
  40371c:	mov    al,0x50
  40371e:	out    0x15,al
  403720:	jae    0x40371c
  403722:	pop    esi
  403723:	cdq    
  403724:	jo     0x4036b6
  403726:	or     eax,0xfc5ec6d3
  40372b:	dec    ebp
  40372c:	cdq    
  40372d:	ss jae 0x4036e0
  403730:	adc    eax,0xb4999a0
  403735:	out    0x9b,eax
  403737:	cmp    cl,BYTE PTR [edx+0xa67710b]
  40373d:	jp     0x40374d
  40373f:	std    
  403740:	pop    edi
  403741:	add    bl,BYTE PTR [ebx+0x5d]
  403744:	push   ecx
  403745:	je     0x403753
  403747:	enter  0xdd9c,0x61
  40374b:	sbb    eax,0xb248b167
  403750:	jl     0x4037bd
  403752:	xlat   BYTE PTR ds:[ebx]
  403753:	sbb    esp,esi
  403755:	xor    BYTE PTR [ebx+0x167257ab],0x9b
  40375c:	shr    BYTE PTR [esi-0x7e],0x47
  403760:	pop    edi
  403761:	and    ebx,DWORD PTR ds:0x339b0b60
  403767:	fild   DWORD PTR [edi]
  403769:	dec    eax
  40376a:	fsub   QWORD PTR ds:0x73a57c1b
  403770:	ret    0x99e
  403773:	jae    0x4036f8
  403775:	xchg   esp,eax
  403776:	aad    0x25
  403778:	pop    ecx
  403779:	inc    ebp
  40377a:	xchg   eax,eax
  40377c:	addr16 xchg edx,eax
  40377e:	repz add eax,0x82aebe6
  403784:	jb     0x403769
  403786:	adc    ebp,DWORD PTR [edx+0x43]
  403789:	fs loop 0x403760
  40378c:	xchg   ecx,eax
  40378d:	adc    BYTE PTR [esi-0x5b3a33e9],al
  403793:	hlt    
  403794:	ja     0x40379b
  403796:	shl    al,cl
  403798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403799:	or     edx,DWORD PTR [esi+ecx*2+0x69]
  40379d:	cmp    eax,0xc80b122f
  4037a2:	cli    
  4037a3:	(bad)  
  4037a4:	mov    eax,eax
  4037a6:	mov    eax,ds:0xb9d2a1ac
  4037ab:	out    dx,eax
  4037ac:	inc    ecx
  4037ad:	stos   BYTE PTR es:[edi],al
  4037ae:	mov    BYTE PTR [eax+eiz*8],al
  4037b1:	inc    eax
  4037b2:	sbb    al,0x3f
  4037b4:	push   ss
  4037b5:	dec    ebp
  4037b6:	(bad)  
  4037b7:	xchg   esi,eax
  4037b8:	sbb    eax,0x6c77afbf
  4037bd:	adc    esp,DWORD PTR ds:0xb9e5afd1
  4037c3:	outs   dx,BYTE PTR ds:[esi]
  4037c4:	mov    ah,0xcb
  4037c6:	fsubr  st(3),st
  4037c8:	cmp    bh,0xc5
  4037cb:	mov    cl,0x4f
  4037cd:	inc    edx
  4037ce:	sbb    al,0xb2
  4037d0:	push   cs
  4037d1:	fmul   QWORD PTR ss:[ebp-0x34a88ac0]
  4037d8:	pop    edi
  4037d9:	xor    ebp,DWORD PTR [edx-0x3fbfb2ba]
  4037df:	call   0x5dca440
  4037e4:	xor    edx,DWORD PTR [ecx]
  4037e6:	mov    WORD PTR [ecx+eiz*1+0x63],ds
  4037ea:	adc    al,0xa6
  4037ec:	jmp    0x5da6c6f6
  4037f1:	xor    BYTE PTR [ecx],cl
  4037f3:	fucomp st(0)
  4037f5:	add    DWORD PTR [edi-0x73a671b],ebx
  4037fb:	push   eax
  4037fc:	sbb    al,0xf9
  4037fe:	sub    eax,0x4e929a69
  403803:	xor    bl,bh
  403805:	push   edi
  403806:	out    dx,eax
  403807:	bound  edx,QWORD PTR ds:0x5f88ff2f
  40380d:	jo     0x4037e0
  40380f:	shl    BYTE PTR ds:0xc6d37d38,0x87
  403816:	xchg   edx,eax
  403817:	outs   dx,DWORD PTR ds:[esi]
  403818:	xor    DWORD PTR [eax+0x33],0xffffffb7
  40381c:	push   cs
  40381d:	cmp    eax,0x3ba8fb8d
  403822:	gs jb  0x403876
  403825:	sahf   
  403826:	or     DWORD PTR [eax],0xc38105f9
  40382c:	inc    edi
  40382d:	retf   0x1180
  403830:	xchg   edx,eax
  403831:	popf   
  403832:	imul   BYTE PTR [eax-0x5c]
  403835:	sub    BYTE PTR [eax+0x67],al
  403838:	mov    ebp,0xe50c52c9
  40383d:	sbb    DWORD PTR [ebp+0x19],0x9f783276
  403844:	cwde   
  403845:	outs   dx,BYTE PTR ds:[esi]
  403846:	out    0x14,al
  403848:	add    esp,esp
  40384a:	fisubr DWORD PTR gs:[edi]
  40384d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40384e:	dec    ebp
  40384f:	push   esi
  403850:	dec    ebp
  403851:	pop    edi
  403852:	imul   esi,DWORD PTR [esi-0xa2f692c],0xfecb03f1
  40385c:	(bad)  
  40385d:	popa   
  40385e:	pop    ss
  40385f:	stos   BYTE PTR es:[edi],al
  403860:	fs in  al,0x50
  403863:	cmp    eax,0x25eabf67
  403868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403869:	dec    edx
  40386a:	xchg   esp,eax
  40386b:	add    ecx,ebx
  40386d:	pop    es
  40386e:	cld    
  40386f:	cmp    DWORD PTR [ebp-0x9],edx
  403872:	cmp    BYTE PTR [eax-0x7e],dh
  403875:	dec    ebx
  403876:	xchg   esi,eax
  403877:	mov    dh,0x6e
  403879:	dec    esp
  40387a:	and    esp,edi
  40387c:	xor    ecx,DWORD PTR [ecx*8+0x66f26995]
  403883:	pop    es
  403884:	call   0x345b:0x44ab359
  40388b:	mov    edx,0x98d5760f
  403890:	loop   0x403821
  403892:	jmp    DWORD PTR [ecx-0x6e]
  403895:	dec    edi
  403896:	fwait
  403897:	sub    eax,0x4c0da922
  40389c:	ret    0x552f
  40389f:	jo     0x403878
  4038a1:	call   DWORD PTR [edx-0x526245e6]
  4038a7:	pop    ecx
  4038a8:	call   0x3d4a:0x2c8c8c35
  4038af:	or     eax,0xb6706bb8
  4038b4:	in     eax,dx
  4038b5:	loop   0x4038d3
  4038b7:	mov    BYTE PTR [ebx],dl
  4038b9:	aad    0xe7
  4038bb:	cli    
  4038bc:	jnp    0x40392a
  4038be:	xor    al,0x4e
  4038c0:	mov    al,0x32
  4038c2:	adc    DWORD PTR [edx+0x4],eax
  4038c5:	lds    edi,FWORD PTR [eax-0x42]
  4038c8:	jbe    0x4038bf
  4038ca:	std    
  4038cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038cc:	jge    0x403904
  4038ce:	cmp    ch,BYTE PTR [edx+0x35b162fe]
  4038d4:	sub    ebx,DWORD PTR [ebx]
  4038d6:	jae    0x403950
  4038d8:	leave  
  4038d9:	test   eax,0xfd92130e
  4038de:	cmp    al,0x32
  4038e0:	cwde   
  4038e1:	loop   0x40393e
  4038e3:	pop    gs
  4038e5:	shrd   ecx,edx,0x2
  4038e9:	xor    DWORD PTR ds:0x4284b5,0x428565
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428449,0x428571
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428435,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x4283fd
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428549,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esp+esi*2-0x42307bb5]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xc1d3bd3e
  403949:	icebp  
  40394a:	add    DWORD PTR ds:0x5e718dc8,eax
  403950:	sub    al,0x97
  403952:	xor    edx,eax
  403954:	mov    bh,0x7e
  403956:	pop    edx
  403957:	addr16 inc esp
  403959:	pop    esp
  40395a:	call   0x76f6d93d
  40395f:	es ins DWORD PTR es:[edi],dx
  403961:	les    esi,FWORD PTR [ecx]
  403963:	popa   
  403964:	cmp    al,0xe4
  403966:	sub    BYTE PTR [esi],al
  403968:	test   DWORD PTR [esi+0x75c58730],0x3ca31878
  403972:	fcom   DWORD PTR [edi+0x6eca632f]
  403978:	loop   0x4039b0
  40397a:	lea    ebp,[edi-0x127b4954]
  403980:	adc    ebx,edx
  403982:	cld    
  403983:	and    eax,0xe512ae9e
  403988:	fnstsw WORD PTR [ebp-0x5a]
  40398b:	xor    BYTE PTR [edi-0x66e10b3f],0x78
  403992:	mov    bx,0x1740
  403996:	xchg   BYTE PTR [edx-0x1c],ah
  403999:	ds jb  0x40393e
  40399c:	sbb    eax,0xf8cfc922
  4039a1:	or     al,0x4
  4039a3:	div    BYTE PTR [edx-0x6e8bdf04]
  4039a9:	cwde   
  4039aa:	sub    eax,DWORD PTR [ecx-0x59]
  4039ad:	retf   0xea5
  4039b0:	or     ebp,ebx
  4039b2:	pop    edi
  4039b3:	adc    DWORD PTR [ebx],eax
  4039b5:	or     DWORD PTR [esi+0x2d],ecx
  4039b8:	mov    ds:0x453c5857,al
  4039bd:	(bad)  
  4039be:	fldenv [edx]
  4039c0:	into   
  4039c1:	leave  
  4039c2:	dec    eax
  4039c3:	jg     0x403985
  4039c5:	and    eax,0x441c7378
  4039ca:	mov    al,ds:0x15ca6120
  4039cf:	aam    0x5e
  4039d1:	xchg   edi,eax
  4039d2:	cld    
  4039d3:	(bad)  
  4039d4:	shl    DWORD PTR [ebp+eiz*1+0x368a1409],1
  4039db:	mov    ecx,DWORD PTR [ecx+0x6be83344]
  4039e1:	nop
  4039e2:	aaa    
  4039e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e4:	push   es
  4039e5:	add    BYTE PTR [edi+0x63],dh
  4039e8:	push   esi
  4039e9:	lahf   
  4039ea:	lods   al,BYTE PTR ds:[esi]
  4039eb:	dec    esp
  4039ec:	test   BYTE PTR [esi],ah
  4039ee:	cld    
  4039ef:	mov    esp,0x58ac4a33
  4039f4:	repz cmp cl,BYTE PTR [esi+0x46fdc982]
  4039fb:	pop    eax
  4039fc:	pop    esp
  4039fd:	pop    ss
  4039fe:	dec    esi
  4039ff:	mov    ds:0xffd5f894,eax
  403a04:	cmp    DWORD PTR ds:0xbfb9b50,esp
  403a0a:	inc    ecx
  403a0b:	lock pop ebx
  403a0d:	ds sar dh,cl
  403a10:	ins    BYTE PTR es:[di],dx
  403a12:	push   ds
  403a13:	cmp    BYTE PTR [ebx+0xd],ch
  403a16:	ror    bl,cl
  403a18:	adc    DWORD PTR [ecx],edx
  403a1a:	imul   ebx,DWORD PTR [esi+0x7edd035],0xc4652d1f
  403a24:	jns    0x4039ff
  403a26:	jle    0x4039b7
  403a28:	mov    cl,0x67
  403a2a:	sti    
  403a2b:	mov    dh,0xbe
  403a2d:	sbb    DWORD PTR [ecx-0x994b6fb],ebx
  403a33:	and    al,0xe0
  403a35:	push   0xb0f15b40
  403a3a:	sar    DWORD PTR [edx-0x27],1
  403a3d:	add    ebp,edx
  403a3f:	mov    bl,0xdf
  403a41:	ja     0x403a27
  403a43:	stc    
  403a44:	xlat   BYTE PTR ds:[ebx]
  403a45:	imul   eax,DWORD PTR [esi],0x64
  403a48:	jecxz  0x4039db
  403a4a:	dec    esi
  403a4b:	and    DWORD PTR [ecx],esi
  403a4d:	mov    bl,0xdf
  403a4f:	sbb    eax,0x24cf193
  403a54:	scas   al,BYTE PTR es:[edi]
  403a55:	mov    ds:0xfba8a45f,al
  403a5a:	inc    edi
  403a5b:	rol    dh,cl
  403a5d:	shl    BYTE PTR [ebx+0x2a],1
  403a60:	push   ds
  403a61:	push   ebx
  403a62:	or     DWORD PTR [edi+esi*2-0xd],0x23905958
  403a6a:	ror    BYTE PTR [edx+eax*1],0xe7
  403a6e:	push   ss
  403a6f:	bound  eax,QWORD PTR [eax-0x4184f91c]
  403a75:	pop    ss
  403a76:	aas    
  403a77:	jg     0x403a22
  403a79:	(bad)  [eax]
  403a7b:	es aaa 
  403a7d:	sahf   
  403a7e:	mov    eax,ds:0xa4b5529c
  403a83:	or     BYTE PTR [ebx],dh
  403a85:	inc    edi
  403a86:	lock sbb DWORD PTR ss:[ebp+0xb],ebp
  403a8b:	cdq    
  403a8c:	ret    
  403a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8e:	or     eax,ecx
  403a90:	add    eax,0x4674476d
  403a95:	cmc    
  403a96:	imul   DWORD PTR [ebp+0x228f4298]
  403a9c:	push   ecx
  403a9d:	sti    
  403a9e:	rcr    DWORD PTR [eax],1
  403aa0:	adc    DWORD PTR [ebx-0x3e6322e9],ecx
  403aa6:	push   0xffffffaa
  403aa8:	push   ecx
  403aa9:	int    0xd6
  403aab:	push   0xffffff86
  403aad:	jno    0x403a95
  403aaf:	test   eax,0x3974b96e
  403ab4:	xchg   ecx,eax
  403ab5:	sub    esi,ecx
  403ab7:	add    DWORD PTR [ebx],eax
  403ab9:	push   edi
  403aba:	mov    ds:0x77329fd4,al
  403abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac0:	imul   ebx,DWORD PTR [esi+0x57],0x72
  403ac4:	(bad)  
  403ac5:	ret    
  403ac6:	jnp    0x403a72
  403ac8:	ds cmp al,0xc3
  403acb:	sub    DWORD PTR [ecx-0x17f11d1f],edi
  403ad1:	retf   0xbed9
  403ad4:	js     0x403a76
  403ad6:	xchg   edx,eax
  403ad7:	mov    al,ds:0xeb2c1ae1
  403adc:	add    bh,bl
  403ade:	rcr    ch,1
  403ae0:	test   DWORD PTR [esi],eax
  403ae2:	lahf   
  403ae3:	mov    ebp,0x42e064b4
  403ae8:	dec    ecx
  403ae9:	xor    ebx,DWORD PTR [edx-0x3c874bcb]
  403aef:	inc    esp
  403af0:	imul   edx,DWORD PTR [edi-0x6036bbd5],0xffffffb3
  403af7:	pop    ecx
  403af8:	jp     0x403b3d
  403afa:	jp     0x403b6a
  403afc:	out    dx,al
  403afd:	aam    0x54
  403aff:	pop    esi
  403b00:	sbb    DWORD PTR [eax-0x63],ecx
  403b03:	out    dx,eax
  403b04:	sbb    BYTE PTR [ebp+0x271d496a],dh
  403b0a:	dec    edi
  403b0b:	dec    esp
  403b0c:	cld    
  403b0d:	jbe    0x403b8d
  403b0f:	call   0x2fce09f
  403b14:	inc    ebx
  403b15:	test   DWORD PTR [ecx],edx
  403b17:	jne    0x403b17
  403b19:	xchg   DWORD PTR [ecx],esp
  403b1b:	pop    ds
  403b1c:	xchg   BYTE PTR [esi+eax*4-0x6b29a3b],dh
  403b23:	inc    esp
  403b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b25:	int    0x19
  403b27:	sub    eax,DWORD PTR [edx-0x5985ccf5]
  403b2d:	xor    al,0xf0
  403b2f:	imul   BYTE PTR [ebx+ecx*1]
  403b32:	je     0x403aee
  403b34:	not    eax
  403b36:	inc    edx
  403b37:	pop    eax
  403b38:	call   0xe55324f7
  403b3d:	retf   0xeb1e
  403b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b41:	pop    es
  403b42:	sub    BYTE PTR [edx+0x57ffb080],bh
  403b48:	inc    esp
  403b49:	fdivr  st(4),st
  403b4b:	xchg   ebp,eax
  403b4c:	xchg   esi,eax
  403b4d:	test   BYTE PTR [ecx-0x57],0x53
  403b51:	jns    0x403b52
  403b53:	pop    ebp
  403b54:	std    
  403b55:	imul   ecx,DWORD PTR [esi+0x36f6ae68],0x2229de6e
  403b5f:	out    dx,al
  403b60:	and    DWORD PTR [edi+0x2295a914],ecx
  403b66:	retf   
  403b67:	rcl    dl,0x5d
  403b6a:	mov    ds:0x32e3860b,al
  403b6f:	lods   al,BYTE PTR ds:[esi]
  403b70:	imul   esp,ecx,0xffffff91
  403b73:	ror    ah,0x16
  403b76:	inc    esi
  403b77:	pop    ebp
  403b78:	mov    ecx,0x8f8bfb1f
  403b7d:	ret    0xb717
  403b80:	cmp    al,0x7a
  403b82:	cli    
  403b83:	es addr16 ret 
  403b86:	test   eax,0xc0420cc8
  403b8b:	stos   BYTE PTR es:[edi],al
  403b8c:	mov    al,0x83
  403b8e:	scas   al,BYTE PTR es:[edi]
  403b8f:	icebp  
  403b90:	or     edx,DWORD PTR [eax]
  403b92:	add    edi,esp
  403b94:	inc    ecx
  403b95:	sbb    ch,BYTE PTR [eax+edi*8+0x13]
  403b99:	sar    BYTE PTR cs:[ebx-0x23e97130],1
  403ba0:	mov    dh,BYTE PTR [ebp+0x31]
  403ba3:	sub    ebp,DWORD PTR [edi]
  403ba5:	mov    bh,0xbd
  403ba7:	lea    esi,[edx-0x15]
  403baa:	and    al,0x15
  403bac:	sub    ebp,DWORD PTR [eax]
  403bae:	mov    ebp,ebp
  403bb0:	xor    eax,0x6e166091
  403bb5:	add    cl,bh
  403bb7:	(bad)  ds:0x8c60dc64
  403bbd:	cld    
  403bbe:	push   ebx
  403bbf:	xchg   ebp,eax
  403bc0:	push   cs
  403bc1:	les    ebp,FWORD PTR cs:[ebp+0x698af715]
  403bc8:	cmp    ch,bh
  403bca:	jo     0x403be2
  403bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcd:	mov    ds,ebp
  403bcf:	pop    eax
  403bd0:	outs   dx,BYTE PTR ds:[esi]
  403bd1:	icebp  
  403bd2:	or     eax,0x8f88f164
  403bd7:	and    DWORD PTR [eax-0xa],ecx
  403bda:	int3   
  403bdb:	in     eax,dx
  403bdc:	adc    ebp,DWORD PTR [esp+esi*2-0x20]
  403be0:	repnz fisub DWORD PTR fs:[ebp+ebx*8-0x7d]
  403be6:	xor    ebx,DWORD PTR [esi]
  403be8:	and    DWORD PTR [edx-0x18],esp
  403beb:	cld    
  403bec:	push   esi
  403bed:	cmp    bl,BYTE PTR [ecx]
  403bef:	lods   eax,DWORD PTR ds:[esi]
  403bf0:	mov    BYTE PTR [ebx+0x50],al
  403bf3:	imul   edx,DWORD PTR [esi-0x61],0xd98734d6
  403bfa:	sub    bh,al
  403bfc:	in     al,dx
  403bfd:	mov    dl,0x16
  403bff:	mov    ah,0xbe
  403c01:	xor    DWORD PTR [ebx+0x3ff33aba],ebp
  403c07:	add    DWORD PTR [eax+0x26],ebx
  403c0a:	fld    DWORD PTR [ebx+edx*8]
  403c0d:	call   DWORD PTR [edx-0x6811d2bf]
  403c13:	scas   al,BYTE PTR es:[edi]
  403c14:	cld    
  403c15:	jae    0x403bdc
  403c17:	sbb    BYTE PTR [eax],cl
  403c19:	add    DWORD PTR [ecx-0x673d396e],0x21d1cd10
  403c23:	ret    0x9117
  403c26:	les    ecx,FWORD PTR [edi+0x25]
  403c29:	dec    edi
  403c2a:	pop    edx
  403c2b:	retf   
  403c2c:	sub    al,0x93
  403c2e:	fisubr DWORD PTR [esi+0xb]
  403c31:	daa    
  403c32:	xchg   ebx,eax
  403c33:	sub    eax,0x3fcee3a4
  403c38:	mov    bl,0xae
  403c3a:	(bad)  
  403c3b:	push   ebx
  403c3c:	iret   
  403c3d:	je     0x403c57
  403c3f:	jno    0x403be4
  403c41:	pop    edi
  403c42:	int    0x79
  403c44:	dec    ebp
  403c45:	jbe    0x403c70
  403c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c48:	xlat   BYTE PTR ds:[ebx]
  403c49:	sar    BYTE PTR [ebx+0x38],0x77
  403c4d:	les    edi,FWORD PTR [esi]
  403c4f:	test   DWORD PTR [ecx],edi
  403c51:	xlat   BYTE PTR ds:[ebx]
  403c52:	wbinvd 
  403c54:	mul    DWORD PTR [eax-0x71]
  403c57:	mov    fs,WORD PTR [edi]
  403c59:	push   cs
  403c5a:	xchg   esp,eax
  403c5b:	rol    BYTE PTR [edx+ecx*8],1
  403c5e:	out    0x90,al
  403c60:	adc    eax,0x5ee7fe7a
  403c65:	retf   0xe3ce
  403c68:	fsub   QWORD PTR [edx]
  403c6a:	test   BYTE PTR ds:0x51497c56,ch
  403c70:	pop    ebx
  403c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c72:	jno    0x403c7d
  403c74:	stc    
  403c75:	nop
  403c76:	sub    dl,BYTE PTR [ecx+0x73f66d0]
  403c7c:	fsub   st(1),st
  403c7e:	in     eax,dx
  403c7f:	xchg   edi,eax
  403c80:	test   BYTE PTR [edi-0x53b1fd75],0xf3
  403c87:	jbe    0x403c12
  403c89:	add    eax,0x755f3d1
  403c8e:	leave  
  403c8f:	es or  ah,ch
  403c92:	push   ebx
  403c93:	add    cl,BYTE PTR [eax+0x79]
  403c96:	aam    0xcc
  403c98:	cwde   
  403c99:	or     al,0x48
  403c9b:	in     al,dx
  403c9c:	or     ch,cl
  403c9e:	mov    WORD PTR [ebp-0x36a1c32f],ds
  403ca4:	jmp    0x403c77
  403ca6:	sub    BYTE PTR [ebp+0x62],bl
  403ca9:	popa   
  403caa:	aaa    
  403cab:	retf   
  403cac:	inc    ecx
  403cad:	pop    es
  403cae:	dec    eax
  403caf:	mov    esi,0xbfc27dfd
  403cb4:	xchg   ebx,eax
  403cb5:	mov    esp,0x6c2aa1a8
  403cba:	aas    
  403cbb:	test   eax,0xbc3688e8
  403cc0:	add    DWORD PTR [esi],0x887fe737
  403cc6:	or     ch,BYTE PTR ds:[edi+0xf02eac1]
  403ccd:	mov    bh,0x15
  403ccf:	add    DWORD PTR [edx+eax*2-0x2eadf00],eax
  403cd6:	add    DWORD PTR [edx+0x0],0xffffff8b
  403cda:	push   ebp
  403cdb:	sbb    al,0x83
  403cdd:	cmp    eax,0x428465
  403ce2:	add    BYTE PTR [edx+0xb30],bh
  403ce8:	not    DWORD PTR ds:0x42832d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428331,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284bd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428465,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x4283fd,edi
  403d37:	xor    DWORD PTR ds:0x428409,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428469
  403d43:	sub    DWORD PTR ds:0x428355,edi
  403d49:	sbb    DWORD PTR ds:0x428471,0x3090
  403d53:	sub    DWORD PTR ds:0x428421,ecx
  403d59:	xor    DWORD PTR ds:0x4284cd,edi
  403d5f:	cmp    DWORD PTR ds:0x42853d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42853d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428435
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428511
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42831d,edx
  403da2:	adc    DWORD PTR ds:0x428419,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428561
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428435,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428325,0x428339
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284c9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428551
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x4283fd,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x4283fd,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	rcl    DWORD PTR [ecx-0x415b099c],1
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0x93a762c8
  403e33:	mov    dh,0xcf
  403e35:	and    BYTE PTR [esi+esi*4+0x1b8d585a],bl
  403e3c:	ret    
  403e3d:	dec    eax
  403e3e:	mov    eax,ds:0xee1ad25b
  403e43:	test   bh,ch
  403e45:	mov    BYTE PTR [esi+eiz*2+0x303d0352],al
  403e4c:	mov    ds:0xa03b5a1,eax
  403e51:	jb     0x403ddc
  403e53:	cmp    edi,DWORD PTR ds:0x2ec67f68
  403e59:	inc    esp
  403e5a:	xor    ch,ch
  403e5c:	mov    eax,ds:0x5b35bd5e
  403e61:	and    eax,DWORD PTR [edi-0x62]
  403e64:	lock mov dh,0x87
  403e67:	adc    BYTE PTR [esi+0x3],bl
  403e6a:	rcr    ebx,1
  403e6c:	sub    DWORD PTR [edi-0x2f67c0a3],0x7c535067
  403e76:	xor    BYTE PTR [ebx*8-0x8c16242],dh
  403e7d:	adc    BYTE PTR [esi],ch
  403e7f:	jae    0x403e60
  403e81:	mov    edx,0x78cb90c4
  403e86:	mov    dl,0xf0
  403e88:	shr    cl,cl
  403e8a:	xlat   BYTE PTR ds:[ebx]
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	and    ebp,DWORD PTR [edi]
  403e8e:	pop    ds
  403e8f:	shl    DWORD PTR [ecx],cl
  403e91:	or     DWORD PTR [ecx+0x42f120b7],0x67
  403e98:	(bad)  [ebx+0x41778887]
  403e9e:	aad    0x26
  403ea0:	xchg   ebx,eax
  403ea1:	into   
  403ea2:	cmp    eax,edx
  403ea4:	push   edx
  403ea5:	mov    WORD PTR [edx+ecx*8+0x72],fs
  403ea9:	jne    0x403e82
  403eab:	push   0x19875afb
  403eb0:	push   edi
  403eb1:	test   al,0xf9
  403eb3:	call   0x5a80ee4f
  403eb8:	xor    DWORD PTR [ebx-0x792b8ba],esp
  403ebe:	fidiv  DWORD PTR [ebp-0x55]
  403ec1:	sbb    dh,BYTE PTR [esi+edi*4+0x5f]
  403ec5:	inc    esi
  403ec6:	xor    bh,BYTE PTR [eax-0x125033af]
  403ecc:	repnz cmp al,0xd7
  403ecf:	inc    eax
  403ed0:	rcr    DWORD PTR [eax-0x74],0xda
  403ed4:	not    BYTE PTR [eax]
  403ed6:	xor    al,0x63
  403ed8:	rol    DWORD PTR [ebp+0x1e],cl
  403edb:	rcr    bl,1
  403edd:	int    0x55
  403edf:	mov    WORD PTR [ebx],ds
  403ee1:	fcom   QWORD PTR [edx-0x3c]
  403ee4:	fsub   DWORD PTR [esi-0x67fbc001]
  403eea:	ficom  DWORD PTR [ebp+0x31]
  403eed:	sub    al,0x51
  403eef:	fdivr  DWORD PTR [edi+0x49bdf484]
  403ef5:	lea    esi,[edx+0xdaff3fa]
  403efb:	retf   
  403efc:	hlt    
  403efd:	adc    eax,DWORD PTR [eax]
  403eff:	repnz out dx,al
  403f01:	rcr    DWORD PTR [ecx-0x4ed81597],1
  403f07:	mov    cl,0x46
  403f09:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f0b:	dec    edi
  403f0c:	pop    ds
  403f0d:	ds pop ss
  403f0f:	mov    ss,WORD PTR [ebx+0x73]
  403f12:	pushf  
  403f13:	dec    esi
  403f14:	dec    esp
  403f15:	xchg   ebx,eax
  403f16:	add    BYTE PTR ds:0x79629f9a,0x9d
  403f1d:	add    esp,DWORD PTR [edi-0x1d]
  403f20:	lods   al,BYTE PTR ds:[esi]
  403f21:	(bad)  
  403f22:	adc    eax,DWORD PTR [ebx-0x6251ade]
  403f28:	cmc    
  403f29:	cmc    
  403f2a:	je     0x403f18
  403f2c:	mov    al,0x43
  403f2e:	out    dx,eax
  403f2f:	sub    cl,dh
  403f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f32:	add    dl,bl
  403f34:	out    0x99,eax
  403f36:	xchg   ebx,eax
  403f37:	lods   eax,DWORD PTR ds:[esi]
  403f38:	pop    eax
  403f39:	loop   0x403f05
  403f3b:	and    DWORD PTR [ebx],esi
  403f3d:	ret    0x3d8a
  403f40:	ja     0x403efa
  403f42:	mov    eax,ds:0x9e54bfb2
  403f47:	inc    bx
  403f49:	sub    eax,0x601be4e2
  403f4e:	loope  0x403efc
  403f50:	xchg   ebp,eax
  403f51:	(bad)  
  403f52:	fild   DWORD PTR [edx+0x656dba60]
  403f58:	pop    edx
  403f59:	jp     0x403f63
  403f5b:	(bad)  
  403f5c:	xchg   edx,eax
  403f5d:	call   0x9837f5d6
  403f62:	adc    al,0xb0
  403f64:	aam    0xe1
  403f66:	test   BYTE PTR [ebp+0x250aae97],al
  403f6c:	popf   
  403f6d:	pop    edx
  403f6e:	or     BYTE PTR [ecx+0x6f0816fb],ch
  403f74:	add    eax,0xa7d5925
  403f79:	sub    ebx,0x8be2a357
  403f7f:	and    eax,0x7e285a9c
  403f84:	das    
  403f85:	imul   ebp,DWORD PTR ds:0xff4e8485,0x54c6392f
  403f8f:	sahf   
  403f90:	lods   al,BYTE PTR ds:[esi]
  403f91:	(bad)  
  403f92:	mov    ebx,0x2dad15ac
  403f97:	mov    ebp,0xb17f214
  403f9c:	dec    eax
  403f9d:	push   es
  403f9e:	adc    eax,DWORD PTR [eax-0x3a]
  403fa1:	jns    0x40401c
  403fa3:	xlat   BYTE PTR ds:[ebx]
  403fa4:	(bad)  
  403fa5:	cmp    DWORD PTR [ecx+0x25],edi
  403fa8:	jmp    0x403f64
  403faa:	jbe    0x403f96
  403fac:	pusha  
  403fad:	and    BYTE PTR [esi-0x6e36a74e],0xb6
  403fb4:	sub    BYTE PTR [eax],ch
  403fb6:	fwait
  403fb7:	push   esp
  403fb8:	test   DWORD PTR [ebx+0x6c8acc7b],edi
  403fbe:	add    edi,DWORD PTR [ebp-0x3]
  403fc1:	jo     0x403fbe
  403fc3:	ja     0x403f68
  403fc5:	and    dl,dl
  403fc7:	fisub  WORD PTR [edx+0x51]
  403fca:	nop
  403fcb:	jmp    0xb3d2:0x86cc7fd2
  403fd2:	int    0xdb
  403fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd5:	mov    ?,WORD PTR [ecx+0x55332323]
  403fdb:	das    
  403fdc:	cmp    BYTE PTR [edi],ah
  403fde:	test   eax,0xf463ae08
  403fe3:	shr    DWORD PTR [edx+0x36e79cb7],cl
  403fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fea:	(bad)  
  403feb:	cmp    al,dl
  403fed:	push   ss
  403fee:	sbb    DWORD PTR [esi-0x3c78e105],ecx
  403ff4:	std    
  403ff5:	pop    esp
  403ff6:	pop    esi
  403ff7:	mov    esi,0xb8eb615b
  403ffc:	scas   al,BYTE PTR es:[edi]
  403ffd:	fisttp WORD PTR [ebx-0x73]
  404000:	aaa    
  404001:	pusha  
  404002:	or     BYTE PTR [ecx+0x2541a776],dl
  404008:	stos   DWORD PTR es:[edi],eax
  404009:	sbb    eax,0x59212864
  40400e:	pop    eax
  40400f:	es push ds
  404011:	ss in  eax,0x58
  404014:	pop    ss
  404015:	sbb    al,0xf1
  404017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404018:	daa    
  404019:	push   cs
  40401a:	je     0x404078
  40401c:	out    dx,al
  40401d:	xlat   BYTE PTR ds:[ebx]
  40401e:	pop    ebp
  40401f:	ins    DWORD PTR es:[edi],dx
  404020:	fcomip st,st(4)
  404022:	mov    edx,0x2269bdea
  404027:	fdivp  st(0),st
  404029:	jae    0x40402c
  40402b:	mov    edi,0xd764bcb
  404030:	loopne 0x403ff6
  404032:	sbb    eax,0xdf95f9dc
  404037:	and    BYTE PTR [ebx+0x63],bl
  40403a:	push   esi
  40403b:	sub    BYTE PTR [ebx],0xf5
  40403e:	or     al,0x71
  404041:	mov    cl,0x37
  404043:	and    DWORD PTR [ebp-0xf],ebp
  404046:	or     bl,bl
  404048:	pop    edi
  404049:	ficom  DWORD PTR [ebx+0x630de2e5]
  40404f:	(bad)  
  404050:	fidivr WORD PTR [ecx-0x5a]
  404053:	outs   dx,DWORD PTR ds:[esi]
  404054:	xor    ecx,DWORD PTR [ecx*4+0x3dd0bf38]
  40405b:	mov    dh,0xdf
  40405d:	fisub  DWORD PTR fs:[esi]
  404060:	lods   al,BYTE PTR ds:[esi]
  404061:	and    eax,DWORD PTR [edx+0x1a]
  404064:	sbb    eax,DWORD PTR [ebp-0x3bae6832]
  40406a:	sub    eax,0xca71d7cd
  40406f:	fsub   DWORD PTR [eax+0x49336d16]
  404075:	(bad)  
  404076:	nop
  404077:	push   0x6011eaaf
  40407c:	out    0xd0,eax
  40407e:	mov    ecx,0x8bb483e3
  404083:	lds    edi,FWORD PTR ds:0x10ffe35d
  404089:	fisttp WORD PTR [edi*1-0x67809615]
  404090:	push   edx
  404091:	outs   dx,BYTE PTR ds:[esi]
  404092:	mov    cl,0xc6
  404094:	jmp    0x40401f
  404096:	sti    
  404097:	add    bl,al
  404099:	fisttp DWORD PTR [ebx+0x13]
  40409c:	mov    edi,ss
  40409e:	das    
  40409f:	nop
  4040a0:	cmp    eax,0x282258d1
  4040a5:	inc    ebp
  4040a6:	pop    edi
  4040a7:	cli    
  4040a8:	cdq    
  4040a9:	cdq    
  4040aa:	(bad)  
  4040ab:	xchg   edi,eax
  4040ac:	cmp    edx,edx
  4040ae:	pop    eax
  4040af:	pop    esi
  4040b0:	(bad)  
  4040b1:	imul   edx,DWORD PTR [ebx+0x22],0xf
  4040b5:	jl     0x4040b6
  4040b7:	jl     0x404125
  4040b9:	inc    ecx
  4040ba:	pop    eax
  4040bb:	or     ebp,DWORD PTR [ecx]
  4040bd:	cwde   
  4040be:	dec    ch
  4040c0:	fwait
  4040c1:	je     0x4040be
  4040c3:	jne    0x404129
  4040c5:	pop    eax
  4040c6:	outs   dx,BYTE PTR ds:[esi]
  4040c7:	call   0x9898:0xb42da204
  4040ce:	jno    0x40406f
  4040d0:	scas   al,BYTE PTR es:[edi]
  4040d1:	add    al,0x9c
  4040d3:	ret    0x53ae
  4040d6:	xchg   BYTE PTR [ecx-0x4f9352d2],bh
  4040dc:	adc    eax,0xb37009e6
  4040e1:	push   ecx
  4040e2:	pop    edi
  4040e3:	jl     0x40409b
  4040e5:	add    ebx,ebp
  4040e7:	mov    al,0x69
  4040e9:	nop
  4040ea:	mov    edx,0x4e42c34a
  4040ef:	test   BYTE PTR [edi-0x50b30736],ah
  4040f5:	repnz out 0x6e,al
  4040f8:	adc    eax,0xf395cff9
  4040fd:	scas   al,BYTE PTR es:[edi]
  4040fe:	shl    DWORD PTR [edi+0x58],1
  404101:	fwait
  404102:	outs   dx,BYTE PTR ds:[esi]
  404103:	cmp    esi,DWORD PTR [esi-0x1]
  404106:	sbb    eax,0xa4f2fb8
  40410b:	(bad)  
  40410c:	cmc    
  40410d:	add    BYTE PTR [edx-0x28c30b93],bl
  404113:	jge    0x4040c4
  404115:	jo     0x40416f
  404117:	int    0xe9
  404119:	pop    ecx
  40411a:	stos   DWORD PTR es:[edi],eax
  40411b:	pop    edx
  40411c:	jecxz  0x4040be
  40411e:	fisttp WORD PTR [ebp+0x1f]
  404121:	es push 0x4c
  404124:	xchg   ebp,eax
  404125:	gs xor al,dh
  404128:	cmp    ch,BYTE PTR [edx-0x1f]
  40412b:	xchg   ecx,eax
  40412c:	mov    dh,0x49
  40412e:	sub    eax,DWORD PTR [ecx]
  404130:	in     eax,0x6b
  404132:	sar    ah,cl
  404134:	mov    ebp,0x3e1223fa
  404139:	pslld  mm4,mm5
  40413c:	fist   DWORD PTR [ecx+0x5bf58beb]
  404142:	(bad)  
  404143:	cli    
  404144:	pop    ebp
  404145:	pop    ebx
  404146:	fld    TBYTE PTR [ecx+0x1]
  404149:	iret   
  40414a:	rol    BYTE PTR [edi],cl
  40414c:	xor    esi,DWORD PTR [edx+eiz*2-0x533b7cb]
  404153:	aad    0x92
  404155:	jno    0x4040e0
  404157:	loop   0x4040e5
  404159:	inc    esp
  40415a:	sub    al,0xf1
  40415c:	and    dl,BYTE PTR ds:0xf625567
  404162:	dec    esp
  404163:	cdq    
  404164:	scas   eax,DWORD PTR es:[edi]
  404165:	popf   
  404166:	pushf  
  404167:	push   ss
  404168:	aad    0x5b
  40416a:	sbb    bh,BYTE PTR cs:0x616fa9a2
  404171:	rcr    BYTE PTR [edx+0x11298ae6],0xfc
  404178:	clc    
  404179:	inc    esp
  40417a:	mov    cl,0x54
  40417c:	adc    dl,BYTE PTR [esi+0x1]
  40417f:	pop    eax
  404180:	imul   ecx,DWORD PTR [esi],0x6a
  404183:	out    dx,al
  404184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404185:	repz iret 
  404187:	int3   
  404188:	push   0xde077697
  40418d:	dec    ebx
  40418e:	cmp    eax,0x14191353
  404193:	popf   
  404194:	xchg   edi,eax
  404195:	push   eax
  404196:	out    0x7b,eax
  404198:	mov    ds:0xf6640cff,eax
  40419d:	call   0xd878d12e
  4041a2:	dec    ebp
  4041a3:	jl     0x4041d2
  4041a5:	adc    BYTE PTR [eax],0x6e
  4041a8:	cdq    
  4041a9:	pop    ebp
  4041aa:	mov    dh,0xf4
  4041ac:	jnp    0x40416c
  4041ae:	std    
  4041af:	lods   eax,DWORD PTR ds:[esi]
  4041b0:	clc    
  4041b1:	fmulp  st(7),st
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428465,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428321,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284bd
  4041d3:	cmp    DWORD PTR ds:0x428465,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428415
  4041f9:	xor    edx,DWORD PTR ds:0x428551
  4041ff:	mov    DWORD PTR ds:0x428415,edx
  404205:	or     edx,DWORD PTR ds:0x4284f1
  40420b:	movzx  edx,WORD PTR ds:0x42842d
  404212:	and    DWORD PTR ds:0x428451,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428401,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283cd
  404230:	mov    edx,DWORD PTR ds:0x428511
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428461,0x0
  404245:	mov    DWORD PTR ds:0x428355,0x80f
  40424f:	mov    DWORD PTR ds:0x428559,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42840d,0x4518
  404264:	cmp    DWORD PTR ds:0x428461,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284a1
  404288:	mov    edx,DWORD PTR ds:0x428591
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42842d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428571,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284d9
  4042ac:	xor    ecx,DWORD PTR ds:0x428549
  4042b2:	mov    DWORD PTR ds:0x4284d9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428569,0x0
  4042c9:	mov    DWORD PTR ds:0x4284d9,ecx
  4042cf:	mov    DWORD PTR ds:0x428469,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428425,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428569,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428419
  404303:	and    ecx,DWORD PTR ds:0x428555
  404309:	mov    DWORD PTR ds:0x428419,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428351
  404315:	sbb    DWORD PTR ds:0x428429,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edi+esi*4-0x426f6d04],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xc216826f
  404380:	push   ds
  404381:	jb     0x4043cd
  404383:	sbb    al,0x4d
  404385:	xchg   esp,eax
  404386:	or     al,0x98
  404388:	dec    edi
  404389:	push   0x7
  40438b:	inc    ebp
  40438c:	push   0xe9caf20f
  404391:	push   ebp
  404392:	in     al,0xca
  404394:	sti    
  404395:	sub    cl,BYTE PTR [ebp+esi*8+0x251615a4]
  40439c:	or     bh,BYTE PTR ds:0xb58516f4
  4043a2:	scas   al,BYTE PTR es:[edi]
  4043a3:	test   al,0xcf
  4043a5:	dec    esp
  4043a6:	jb     0x404332
  4043a8:	ss ret 
  4043aa:	xchg   edi,eax
  4043ab:	retf   0x8e04
  4043ae:	xchg   esp,eax
  4043af:	jne    0x404346
  4043b1:	xchg   edi,eax
  4043b2:	scas   al,BYTE PTR es:[edi]
  4043b3:	jae    0x40433d
  4043b5:	lea    ecx,[ebp-0x3a]
  4043b8:	jno    0x40442f
  4043ba:	dec    ecx
  4043bb:	xchg   ebp,eax
  4043bc:	push   esi
  4043bd:	cli    
  4043be:	pop    esp
  4043bf:	and    eax,0x39090040
  4043c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c5:	test   al,0x14
  4043c7:	(bad)  
  4043c8:	shl    bh,cl
  4043ca:	xor    dl,BYTE PTR [edx+0x28]
  4043cd:	scas   al,BYTE PTR es:[edi]
  4043ce:	lds    edi,FWORD PTR [eax]
  4043d0:	xchg   BYTE PTR [ebp+0x66],al
  4043d3:	loop   0x404382
  4043d5:	call   0xf2c2a4dc
  4043da:	ror    DWORD PTR [ebp+0x57],0x98
  4043de:	dec    ebp
  4043df:	scas   al,BYTE PTR es:[edi]
  4043e0:	cwde   
  4043e1:	ret    0x4ced
  4043e4:	jmp    0x3b9:0x1b5a9fd2
  4043eb:	xor    DWORD PTR [ebx+0x5b287a51],ebx
  4043f1:	mov    cl,BYTE PTR [edx-0x10]
  4043f4:	imul   eax,DWORD PTR [edx],0xffffffbb
  4043f7:	push   0x4c
  4043f9:	push   ebp
  4043fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043fb:	dec    di
  4043fd:	fidiv  DWORD PTR ds:0xc5ef0b4e
  404403:	sbb    DWORD PTR [edi+0x11],ecx
  404406:	aad    0xa5
  404408:	cdq    
  404409:	(bad)  
  40440a:	push   ecx
  40440b:	iret   
  40440c:	mov    al,0x88
  40440e:	adc    edi,DWORD PTR [edx+0x6c9cf1ce]
  404414:	or     DWORD PTR ds:0xa1a909d1,edx
  40441a:	scas   al,BYTE PTR es:[edi]
  40441b:	adc    dl,BYTE PTR [ebp-0x35]
  40441e:	and    DWORD PTR [ebx],ecx
  404420:	pop    ebp
  404421:	sbb    ebx,edx
  404423:	test   BYTE PTR [esi+0x586ad00],ah
  404429:	mov    ebp,edi
  40442b:	pop    ebp
  40442c:	fwait
  40442d:	or     ecx,DWORD PTR [esi-0x7b962a2d]
  404433:	xor    eax,0x9c942a0e
  404438:	mov    al,ds:0x26930aab
  40443d:	lock sbb eax,0xfdd6eab9
  404443:	cmc    
  404444:	aaa    
  404445:	addr16 inc edi
  404447:	cmp    eax,0xa55a2a5a
  40444c:	inc    edx
  40444d:	push   edi
  40444e:	loop   0x404420
  404450:	je     0x4043e5
  404452:	xor    al,BYTE PTR [esp+ebx*8]
  404455:	test   BYTE PTR ds:0x1d57b1b,ah
  40445b:	cmp    BYTE PTR [edx],cl
  40445d:	mov    es,WORD PTR ds:0xbfc93e03
  404463:	push   ebx
  404464:	pop    ss
  404465:	push   eax
  404466:	and    ch,BYTE PTR [ebp-0xf5af174]
  40446c:	xor    BYTE PTR [edi+0x5a60b072],0x37
  404473:	mov    dl,0xe0
  404475:	xchg   edi,eax
  404476:	pushf  
  404477:	(bad)  
  404478:	std    
  404479:	push   esp
  40447a:	dec    edx
  40447b:	clc    
  40447c:	xlat   BYTE PTR ds:[ebx]
  40447d:	add    ebp,DWORD PTR [edi]
  40447f:	cli    
  404480:	dec    esp
  404481:	mov    BYTE PTR [esi-0x20],bh
  404484:	xor    eax,0x9defd226
  404489:	pop    ebx
  40448a:	mov    ?,WORD PTR [eax-0xd]
  40448d:	cmp    DWORD PTR [ebx-0x33],edi
  404490:	xor    dh,ch
  404492:	xchg   ebp,eax
  404493:	xchg   ebp,eax
  404494:	push   ss
  404495:	xor    DWORD PTR ds:0x98a3d28,edx
  40449b:	fld    TBYTE PTR [edx-0x1a8d5783]
  4044a1:	mov    ecx,0x5a540929
  4044a6:	jmp    0x404471
  4044a8:	and    ah,BYTE PTR [esi+0x79]
  4044ab:	jg     0x404433
  4044ad:	out    0x97,al
  4044af:	or     al,0x12
  4044b1:	adc    al,ch
  4044b3:	rcl    BYTE PTR [edi+0x7f],0xd2
  4044b7:	jo     0x4044b9
  4044b9:	inc    ebp
  4044ba:	or     eax,0x7f8aebea
  4044bf:	fdivr  DWORD PTR ds:[edi+ecx*8-0x41]
  4044c4:	pop    esp
  4044c5:	imul   ebx,DWORD PTR [eax*1+0x8e40413],0x21
  4044cd:	fs scas al,BYTE PTR es:[edi]
  4044cf:	push   edx
  4044d0:	jecxz  0x404505
  4044d2:	add    eax,DWORD PTR [edx]
  4044d4:	jg     0x404462
  4044d6:	cwde   
  4044d7:	pop    ebp
  4044d8:	push   0x20
  4044da:	aad    0x31
  4044dc:	neg    BYTE PTR [edi+0x4e3494a5]
  4044e2:	mov    eax,ds:0x5dc7d7d4
  4044e7:	mov    dh,0xa9
  4044e9:	adc    ecx,DWORD PTR [edx]
  4044eb:	hlt    
  4044ec:	inc    edi
  4044ed:	js     0x4044cd
  4044ef:	mov    ch,0xf6
  4044f1:	sbb    esi,DWORD PTR [edx-0x4c9dd150]
  4044f7:	int    0xab
  4044f9:	push   ds
  4044fa:	push   edx
  4044fb:	ffreep st(7)
  4044fd:	lds    edx,FWORD PTR [eax]
  4044ff:	xchg   esi,eax
  404500:	(bad)  
  404501:	jmp    0x404514
  404503:	cli    
  404504:	push   esi
  404505:	cmp    al,0xcb
  404508:	(bad)  
  404509:	jbe    0x40451e
  40450b:	pushf  
  40450c:	shl    DWORD PTR ds:0xd02beb4a,1
  404512:	ins    BYTE PTR es:[edi],dx
  404513:	sub    DWORD PTR [ebx],0xc71280f2
  404519:	aas    
  40451a:	call   0xf01f7054
  40451f:	inc    ebp
  404520:	or     eax,0xf5f1ec77
  404525:	push   es
  404526:	fadd   DWORD PTR [esp+ebx*4-0x61c38121]
  40452d:	jp     0x40458b
  40452f:	push   0x405aab6a
  404534:	lods   al,BYTE PTR ds:[esi]
  404535:	push   edi
  404536:	sub    al,0x2f
  404538:	cs stos DWORD PTR es:[edi],eax
  40453a:	std    
  40453b:	mov    cl,0x9
  40453d:	xchg   ecx,eax
  40453e:	shl    DWORD PTR [ebx-0x21],cl
  404541:	es push edi
  404543:	adc    BYTE PTR [eax-0x51],0x42
  404547:	sub    BYTE PTR [ecx+0x39],al
  40454a:	jns    0x4045c6
  40454c:	xor    al,0x43
  40454e:	retf   
  40454f:	xchg   BYTE PTR ds:0xdcae2133,ch
  404555:	arpl   WORD PTR [ecx],ax
  404557:	repz inc ebx
  404559:	in     al,dx
  40455a:	cwde   
  40455b:	inc    edi
  40455c:	mov    ecx,0x5aa147da
  404561:	pop    esi
  404562:	arpl   WORD PTR [edx+0x1410db9],di
  404568:	add    al,0x21
  40456a:	xchg   ebx,eax
  40456b:	sub    DWORD PTR [esp+edx*2-0x22],edi
  40456f:	or     eax,0xc8f34cd0
  404574:	sbb    dl,BYTE PTR [esp+ebp*8-0xf6fbc5f]
  40457b:	mov    WORD PTR [ebx+0x4e],es
  40457e:	loop   0x4045a2
  404580:	mov    ch,0x6a
  404582:	sahf   
  404583:	ins    DWORD PTR es:[edi],dx
  404584:	xchg   edi,eax
  404585:	jp     0x404512
  404587:	jbe    0x404533
  404589:	mov    ds:0xea4c1f37,al
  40458e:	loope  0x4045d1
  404590:	mov    eax,0xbb0864d8
  404595:	push   ecx
  404596:	dec    esi
  404597:	mov    dh,0x8
  404599:	cmp    edx,edi
  40459b:	es jnp 0x4045c0
  40459e:	xor    BYTE PTR [ecx+0x4839404b],bh
  4045a4:	add    al,0x83
  4045a6:	jae    0x40455d
  4045a8:	mov    ds:0xa1dc0994,al
  4045ad:	mov    eax,0x8a4fd35
  4045b2:	inc    edx
  4045b3:	xor    eax,0xe4a0c37f
  4045b8:	xor    eax,0xddc135f1
  4045bd:	lods   al,BYTE PTR ds:[esi]
  4045be:	(bad)  [edx]
  4045c0:	xor    eax,0x27590b90
  4045c5:	dec    ecx
  4045c6:	fstp   TBYTE PTR ds:0xcae7acd4
  4045cc:	sub    BYTE PTR [ecx+0x38b2af18],dh
  4045d2:	cmc    
  4045d3:	mov    eax,0xbc661e4b
  4045d8:	retf   
  4045d9:	and    eax,0xa35b6078
  4045de:	mov    cl,0x9
  4045e0:	push   edx
  4045e1:	lar    ebx,WORD PTR [ebp-0x20122ba8]
  4045e8:	add    eax,0x2570b8f5
  4045ed:	(bad)  
  4045ee:	repz pop esi
  4045f0:	or     DWORD PTR [edi+ebp*1+0x70],ebx
  4045f4:	aam    0x59
  4045f6:	sub    eax,DWORD PTR [ecx+0x6cdc114f]
  4045fc:	rcl    BYTE PTR [ebp+0x46],1
  4045ff:	cmc    
  404600:	out    0x7f,eax
  404602:	push   ds
  404603:	mov    ebx,0x8ec32ba1
  404608:	jmp    0xaabb:0xc2355e57
  40460f:	mov    ecx,0xaacf977d
  404614:	jg     0x40463f
  404616:	xchg   esi,eax
  404617:	add    esp,0xffffffa5
  40461a:	js     0x40464f
  40461c:	ret    0x4381
  40461f:	int3   
  404620:	and    eax,0x848ad9f1
  404625:	aas    
  404626:	jmp    0xcf020389
  40462b:	xor    edi,DWORD PTR [ecx-0x73]
  40462e:	sub    eax,0x22ffd09b
  404633:	sub    DWORD PTR [ecx+edx*8+0x15],0xf8c5bebd
  40463b:	mov    dl,dh
  40463d:	jbe    0x4046b1
  40463f:	inc    edx
  404640:	xor    BYTE PTR [edi+eiz*8-0x3f2346af],ch
  404647:	cld    
  404648:	mov    BYTE PTR [ecx],dh
  40464a:	sub    edx,DWORD PTR [edi+0x24]
  40464d:	mov    dl,0x5c
  40464f:	inc    ebx
  404650:	imul   esi,DWORD PTR [ebx],0x65aaa0ec
  404656:	aad    0x77
  404658:	sbb    DWORD PTR [edx],esi
  40465a:	mov    al,ds:0xdad89082
  40465f:	fist   DWORD PTR [esi-0x6]
  404662:	aad    0x44
  404664:	stos   DWORD PTR es:[edi],eax
  404665:	and    ch,BYTE PTR [ebx-0x5b0fd740]
  40466b:	and    al,0xc3
  40466d:	loop   0x404694
  40466f:	adc    eax,0x2fe5c52f
  404674:	cmp    ecx,ebp
  404676:	jns    0x40460d
  404678:	(bad)  
  404679:	and    al,BYTE PTR [edi+0x77]
  40467c:	pop    es
  40467d:	aaa    
  40467e:	jae    0x4046e9
  404680:	jno    0x404618
  404682:	icebp  
  404683:	ret    0x4206
  404686:	out    0x46,al
  404688:	bound  ebp,QWORD PTR [eax+ecx*8-0x2f]
  40468c:	jg     0x4046f4
  40468e:	fist   WORD PTR [ebx+0x7bbdb970]
  404694:	shr    DWORD PTR [ebx+0x5386e17b],0x65
  40469b:	mov    edi,0xc29660ae
  4046a0:	mov    cl,0xb6
  4046a2:	cmc    
  4046a3:	cmp    al,0x98
  4046a5:	pop    eax
  4046a6:	mov    bh,0x6b
  4046a8:	xor    al,BYTE PTR [ecx]
  4046aa:	in     al,dx
  4046ab:	jo     0x40464a
  4046ad:	retf   
  4046ae:	sti    
  4046af:	mov    esi,0xb7466288
  4046b4:	jl     0x4046b3
  4046b6:	mov    esp,ecx
  4046b8:	nop
  4046b9:	test   DWORD PTR [eax],esp
  4046bb:	mov    al,0x4c
  4046bd:	dec    ebp
  4046be:	cli    
  4046bf:	pextrw ecx,(bad),0xc5
  4046c1:	mov    ch,bh
  4046c3:	ficomp WORD PTR [ebx-0x2b]
  4046c6:	xchg   DWORD PTR ds:[eax],edi
  4046c9:	pop    esp
  4046ca:	cmp    dh,BYTE PTR [edi+0x727cd015]
  4046d0:	and    dl,BYTE PTR ds:[edi]
  4046d3:	jnp    0x4046d0
  4046d5:	sub    eax,0x629716d7
  4046da:	ret    0x888b
  4046dd:	add    esi,ebx
  4046df:	mov    ds:0x24e4f7b7,al
  4046e4:	fld    DWORD PTR [esi+0x71]
  4046e7:	or     DWORD PTR ss:[eax-0x2f],0xffffffd6
  4046ec:	shr    BYTE PTR [edx+0x41b7c41e],1
  4046f2:	mov    ebx,0x95cf33ee
  4046f7:	sub    al,0x7a
  4046f9:	inc    edx
  4046fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046fb:	rcl    esp,1
  4046fd:	mov    al,0x68
  4046ff:	pop    ecx
  404700:	mov    eax,DWORD PTR [ebp-0x30]
  404703:	mov    ecx,DWORD PTR [ebp-0x2c]
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	sbb    BYTE PTR [edx+0x3bee3eb],ah
  404776:	mov    esi,0xbec4bdbe
  40477b:	mov    esi,0x946f67ed
  404780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404781:	pop    edi
  404782:	adc    eax,0xf7dc6e85
  404787:	pusha  
  404788:	xlat   BYTE PTR ds:[ebx]
  404789:	cmp    DWORD PTR [eax-0x80],ebx
  40478c:	add    eax,0xc95fae9e
  404791:	jo     0x4047d0
  404793:	jmp    0xa64840fa
  404798:	ret    
  404799:	popa   
  40479a:	fcomp  DWORD PTR [ecx+ebp*2-0x32]
  40479e:	jo     0x40479e
  4047a0:	and    bh,BYTE PTR [edi]
  4047a2:	sbb    DWORD PTR [esp+esi*8+0x6111d98b],esp
  4047a9:	adc    esp,ebp
  4047ab:	je     0x40475a
  4047ad:	loopne 0x4047ce
  4047af:	inc    eax
  4047b0:	push   0xffffffa2
  4047b2:	adc    DWORD PTR [ecx+0x26],ebx
  4047b5:	mov    eax,ebp
  4047b7:	dec    ecx
  4047b8:	call   0x8669:0xfd1b4709
  4047bf:	xor    al,0x67
  4047c1:	lock cmp eax,0x2d8d082b
  4047c7:	cmc    
  4047c8:	jg     0x404776
  4047ca:	inc    edi
  4047cb:	js     0x40482c
  4047cd:	lods   al,BYTE PTR ds:[esi]
  4047ce:	sahf   
  4047cf:	(bad)  
  4047d0:	ret    0x1a16
  4047d3:	test   BYTE PTR [ebp+eax*4+0x9e8e1a4],dh
  4047da:	js     0x404771
  4047dc:	inc    esp
  4047dd:	(bad)
  4047e2:	adc    ah,dh
  4047e4:	cmp    DWORD PTR [ebx+0x61],eax
  4047e7:	dec    ecx
  4047e8:	add    BYTE PTR [ecx-0x67],0x0
  4047ec:	paddd  mm2,QWORD PTR [edx+0x263c8c8a]
  4047f3:	pop    edi
  4047f4:	dec    esp
  4047f5:	pop    ebx
  4047f6:	jmp    0x440:0xe8218e1c
  4047fd:	jns    0x4047d0
  4047ff:	and    BYTE PTR [esi],ch
  404801:	mov    ecx,DWORD PTR ds:0x6f039a94
  404807:	inc    edx
  404808:	jno    0x4047ae
  40480a:	inc    edx
  40480b:	inc    eax
  40480c:	lea    ebp,[ebx+edx*2+0x48]
  404810:	cmp    eax,0x4054123
  404815:	out    dx,eax
  404816:	mov    ebx,0x898f02e9
  40481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481c:	das    
  40481d:	mov    al,ds:0x973db84e
  404822:	mov    ah,0xa8
  404824:	ja     0x404865
  404826:	data16 jp 0x4047d1
  404829:	add    al,0x83
  40482b:	aaa    
  40482c:	push   0x9336e302
  404831:	xchg   ebp,eax
  404832:	ins    BYTE PTR es:[edi],dx
  404833:	jmp    0xc3a7d330
  404838:	xchg   ecx,eax
  404839:	nop
  40483a:	push   edi
  40483b:	inc    eax
  40483c:	fcmovnu st,st(0)
  40483e:	es in  al,dx
  404840:	out    0xce,eax
  404842:	add    al,0x40
  404844:	jb     0x4048b8
  404846:	sbb    BYTE PTR [eax-0x18],ch
  404849:	add    ebp,DWORD PTR [esi+0x21]
  40484c:	mov    eax,0x264f1e0a
  404851:	adc    edx,DWORD PTR [ebp+0x74a92b17]
  404857:	popa   
  404858:	mov    ebx,0xeb2bb617
  40485d:	inc    edi
  40485e:	cwde   
  40485f:	push   es
  404860:	xchg   cl,ch
  404862:	out    0x73,eax
  404864:	test   eax,eax
  404866:	cs mov dl,0x54
  404869:	aaa    
  40486a:	ja     0x404871
  40486c:	out    0x1e,eax
  40486e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40486f:	enter  0xa762,0x76
  404873:	out    0x6e,al
  404875:	mul    cl
  404877:	in     al,0x0
  404879:	inc    esp
  40487a:	dec    edi
  40487b:	loopne 0x404825
  40487d:	mov    ebx,eax
  40487f:	inc    ebx
  404880:	jne    0x404818
  404882:	inc    ebp
  404883:	pop    ebx
  404884:	ror    edi,1
  404886:	ds push 0x8828f207
  40488c:	test   bh,al
  40488e:	or     al,BYTE PTR [eax+0x1f933384]
  404894:	in     al,dx
  404895:	pop    esp
  404896:	dec    esp
  404897:	gs fsubr st(4),st
  40489a:	lahf   
  40489b:	mov    ds:0x476c655f,al
  4048a0:	pmaxub mm7,mm0
  4048a3:	mov    eax,DWORD PTR [ebp-0x3a50b95d]
  4048a9:	aaa    
  4048aa:	repnz push ecx
  4048ac:	or     BYTE PTR [edx],bl
  4048ae:	pop    ecx
  4048af:	cmp    al,0xb1
  4048b1:	outs   dx,DWORD PTR ds:[esi]
  4048b2:	cmp    DWORD PTR [ecx+0x38a5aae5],ebp
  4048b8:	mov    cl,0x3
  4048ba:	pop    edi
  4048bb:	nop
  4048bc:	push   esp
  4048bd:	push   edi
  4048be:	adc    ah,bl
  4048c0:	shr    BYTE PTR [esp+esi*1-0x73],1
  4048c4:	arpl   WORD PTR [eax-0x5d73cd01],bx
  4048ca:	jbe    0x404881
  4048cc:	ror    DWORD PTR [ebp-0x1b],1
  4048cf:	or     ecx,ebp
  4048d1:	xor    ax,0xe0f9
  4048d5:	into   
  4048d6:	push   0x2777dfda
  4048db:	xor    ebp,eax
  4048dd:	push   edx
  4048de:	call   0xbfb5:0xa7d603fb
  4048e5:	adc    BYTE PTR [esi+ebp*1],cl
  4048e8:	pop    ebp
  4048e9:	scas   eax,DWORD PTR es:[edi]
  4048ea:	pushf  
  4048eb:	and    cl,BYTE PTR [esi]
  4048ed:	in     eax,0x6d
  4048ef:	rcl    BYTE PTR [eax],1
  4048f1:	sar    DWORD PTR [edi],1
  4048f3:	popf   
  4048f4:	cmp    eax,0x930e7e77
  4048f9:	outs   dx,DWORD PTR ds:[esi]
  4048fa:	sbb    DWORD PTR [ecx+0x4c2fdcb1],ecx
  404900:	mov    al,0x6e
  404902:	push   0x3e
  404904:	mov    dl,0x54
  404906:	xchg   edx,eax
  404907:	mov    dh,0x9d
  404909:	dec    ecx
  40490a:	mov    al,0x70
  40490c:	adc    DWORD PTR [edi],esi
  40490e:	gs pushf 
  404910:	test   BYTE PTR [edi-0x37],0xd2
  404914:	or     bl,bl
  404916:	call   0xd63b293a
  40491b:	dec    esi
  40491c:	pop    ebp
  40491d:	clc    
  40491e:	std    
  40491f:	push   ebp
  404920:	or     eax,0xd1bcd52e
  404925:	xor    al,0x72
  404927:	mov    dl,0xc1
  404929:	and    ebp,DWORD PTR [eax+edi*8+0x21213a08]
  404930:	imul   eax,DWORD PTR [ecx-0x6dc96d16],0xfffffff0
  404937:	mov    edx,0x41594d07
  40493c:	mov    es,edx
  40493e:	(bad)  
  40493f:	rcr    BYTE PTR [esp+eiz*4],1
  404942:	scas   eax,DWORD PTR es:[edi]
  404943:	xor    al,0x55
  404945:	pop    ds
  404946:	mov    esp,0xae3e4d2d
  40494b:	cmp    edx,DWORD PTR [ecx]
  40494d:	xchg   cl,bh
  40494f:	mov    cl,0x2d
  404951:	popf   
  404952:	fisttp WORD PTR [ecx]
  404954:	mov    WORD PTR [edi+0x2e78989d],?
  40495a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495b:	loop   0x4049c7
  40495d:	in     eax,0x77
  40495f:	jle    0x404947
  404961:	jle    0x4048f0
  404963:	in     eax,0x28
  404965:	cmc    
  404966:	inc    ebx
  404967:	mov    dl,al
  404969:	dec    edx
  40496a:	jmp    0xe678af2a
  40496f:	mov    edx,0xfddc8f07
  404974:	sub    BYTE PTR [esi],0xd2
  404977:	outs   dx,BYTE PTR ds:[esi]
  404978:	imul   ebx,eax,0x75
  40497b:	dec    ebp
  40497c:	loope  0x40497b
  40497e:	xchg   edi,eax
  40497f:	cli    
  404980:	adc    al,BYTE PTR [ebx]
  404982:	cmp    esi,eax
  404984:	inc    ecx
  404985:	(bad)  
  404986:	sahf   
  404987:	mov    ss,WORD PTR [ebp+0x4b]
  40498a:	fld    DWORD PTR [eax]
  40498c:	xor    DWORD PTR [edx+esi*4],esi
  40498f:	div    bl
  404991:	mov    ds:0x798826d1,eax
  404996:	and    esi,DWORD PTR [edx]
  404998:	jns    0x404951
  40499a:	lahf   
  40499b:	push   ebp
  40499c:	jecxz  0x40497a
  40499e:	or     eax,0xfda7671e
  4049a3:	jb     0x404a1a
  4049a5:	setnp  BYTE PTR [edx+edx*4-0x62]
  4049aa:	aaa    
  4049ab:	or     edx,DWORD PTR [esi+eax*1]
  4049ae:	loope  0x404952
  4049b0:	jo     0x404a05
  4049b2:	into   
  4049b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b4:	jl     0x404a28
  4049b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b7:	pop    eax
  4049b8:	nop    DWORD PTR [eax+0x73]
  4049bc:	mov    DWORD PTR [edx],ebp
  4049be:	adc    al,0x55
  4049c0:	imul   esp,DWORD PTR [eax],0xffffffdf
  4049c3:	jno    0x404a1b
  4049c5:	iret   
  4049c6:	imul   ecx,esi,0xd
  4049c9:	ret    0xf7f2
  4049cc:	xor    bh,cl
  4049ce:	mul    ecx
  4049d0:	pop    edi
  4049d1:	sbb    ebp,DWORD PTR [eax-0x301c993b]
  4049d7:	mov    cl,0xae
  4049d9:	cmp    BYTE PTR [esp+ebp*4-0x66],ch
  4049dd:	sbb    al,0x89
  4049df:	or     edi,0xffffff89
  4049e2:	jns    0x404a30
  4049e4:	stos   DWORD PTR es:[edi],eax
  4049e5:	inc    ebp
  4049e6:	jmp    0x7621:0x31bc9f41
  4049ed:	jb     0x4049bf
  4049ef:	or     DWORD PTR cs:[ebx-0x4e],0x5e
  4049f4:	xchg   BYTE PTR [eax-0x77],al
  4049f7:	xchg   ebp,eax
  4049f8:	jo     0x404a78
  4049fa:	pusha  
  4049fb:	push   0x7c2960e7
  404a00:	pop    esi
  404a01:	push   esi
  404a02:	sub    ah,0xa9
  404a05:	mov    eax,0xc206f0fc
  404a0a:	cmc    
  404a0b:	mov    ah,0xc5
  404a0d:	and    dh,dl
  404a0f:	add    DWORD PTR [esi+0x1ec7a8b2],esi
  404a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a16:	dec    ebp
  404a17:	xlat   BYTE PTR ds:[ebx]
  404a18:	push   ss
  404a19:	fdiv   QWORD PTR [edx]
  404a1b:	les    edx,FWORD PTR [ebx+0x11]
  404a1e:	xchg   edx,eax
  404a1f:	into   
  404a20:	adc    BYTE PTR [ebx],bl
  404a22:	lock les ebp,FWORD PTR [ebp+0x34c60ebc]
  404a29:	leave  
  404a2a:	mov    ebp,0x4d9f818b
  404a2f:	mov    fs,edi
  404a31:	xor    dl,dh
  404a33:	(bad)  
  404a34:	xor    eax,0x76939656
  404a39:	xlat   BYTE PTR ds:[ebx]
  404a3a:	enter  0x2666,0xba
  404a3e:	adc    esi,DWORD PTR [eax-0x6847cf9]
  404a44:	add    edi,ebp
  404a46:	loopne 0x404a50
  404a48:	fcom   QWORD PTR es:[ecx]
  404a4b:	bound  ecx,QWORD PTR [esi]
  404a4d:	shl    DWORD PTR [ebx],cl
  404a4f:	test   al,0x78
  404a51:	sub    edi,edi
  404a53:	cmp    al,bl
  404a55:	pop    ebp
  404a56:	dec    edx
  404a57:	or     eax,0xe0604745
  404a5c:	inc    ecx
  404a5d:	dec    edx
  404a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5f:	mov    ch,0x8e
  404a61:	loopne 0x404a41
  404a63:	imul   edi,DWORD PTR [edx+0x50],0xc65dcb95
  404a6a:	rol    cl,1
  404a6c:	push   esi
  404a6d:	fistp  DWORD PTR [esi-0x30]
  404a70:	shr    DWORD PTR [ecx],cl
  404a72:	and    al,0x3a
  404a74:	sti    
  404a75:	out    dx,eax
  404a76:	mov    ebp,ebp
  404a78:	cs das 
  404a7a:	test   eax,0x9376f56c
  404a7f:	fidivr WORD PTR [ebx+0x5]
  404a82:	sbb    al,0x4f
  404a84:	cwde   
  404a85:	mov    eax,0x663769d5
  404a8a:	sub    DWORD PTR [edi],esp
  404a8c:	sbb    al,0xaf
  404a8e:	aaa    
  404a8f:	mov    eax,ds:0x50387f3
  404a94:	adc    edx,DWORD PTR [ebx+edx*1-0x6c]
  404a98:	das    
  404a99:	sti    
  404a9a:	xor    DWORD PTR [ebx-0x2c],0x1a5b6552
  404aa1:	dec    ebx
  404aa2:	fdiv   st(5),st
  404aa4:	jmp    0x9844981f
  404aa9:	out    0x98,al
  404aab:	adc    eax,0x27d2ffbf
  404ab0:	fisubr WORD PTR [ecx-0x34]
  404ab3:	push   eax
  404ab4:	repnz pop esp
  404ab6:	mul    DWORD PTR [edx+0xcef1850]
  404abc:	test   BYTE PTR [eax+eiz*1-0x2a],dl
  404ac0:	and    edx,DWORD PTR [ebp-0x7b]
  404ac3:	inc    edx
  404ac4:	jnp    0x404a7b
  404ac6:	push   0x77
  404ac8:	mov    al,0xbb
  404aca:	xor    BYTE PTR [ebp-0x2c89ee22],dh
  404ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad1:	test   eax,0x76f8adc3
  404ad6:	pop    ecx
  404ad7:	lahf   
  404ad8:	add    ebp,DWORD PTR [edx]
  404ada:	push   es
  404adb:	cdq    
  404adc:	cli    
  404add:	pop    eax
  404ade:	mov    bl,0xb4
  404ae0:	xlat   BYTE PTR ds:[ebx]
  404ae1:	cmp    DWORD PTR [ecx],edi
  404ae3:	pop    ss
  404ae4:	mov    ebx,0x90333380
  404ae9:	inc    ecx
  404aea:	icebp  
  404aeb:	sbb    BYTE PTR [esi+0x5313b8c4],bh
  404af1:	(bad)  
  404af2:	pop    ecx
  404af3:	outs   dx,DWORD PTR ds:[esi]
  404af4:	fwait
  404af5:	mov    BYTE PTR [ecx-0x66],0x6d
  404af9:	mov    esi,0x4fac771e
  404afe:	xchg   esi,eax
  404aff:	cmp    eax,ecx
  404b01:	loope  0x404b21
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	add    eax,0xbde3e5e7
  404b3d:	or     DWORD PTR [esi-0x413b4242],edi
  404b43:	mov    esi,0x94655435
  404b48:	cs jae 0x404bb4
  404b4b:	ds and al,0x49
  404b4f:	or     al,0x87
  404b51:	push   esp
  404b52:	fidiv  DWORD PTR [ecx+0x643648bb]
  404b58:	push   edi
  404b59:	push   esi
  404b5a:	mov    ebx,0xa10dced2
  404b5f:	push   es
  404b60:	pop    ebp
  404b61:	sbb    al,0x58
  404b63:	nop
  404b64:	idiv   BYTE PTR [edi-0x53546fe3]
  404b6a:	dec    esp
  404b6b:	add    esp,esp
  404b6d:	push   0x73
  404b6f:	pop    edx
  404b70:	dec    esi
  404b71:	inc    ebx
  404b72:	int    0x9b
  404b74:	outs   dx,DWORD PTR ds:[esi]
  404b75:	fwait
  404b76:	sbb    DWORD PTR [edi],esi
  404b78:	or     BYTE PTR [ecx+edi*2],ah
  404b7b:	inc    esp
  404b7c:	push   ss
  404b7d:	pop    ebp
  404b7e:	mov    bh,0xdf
  404b80:	fsub   QWORD PTR [ecx-0x2c]
  404b83:	jge    0x404bc1
  404b85:	mov    bl,0x35
  404b87:	mov    BYTE PTR [ebx+0x7f],ah
  404b8a:	push   ebx
  404b8b:	dec    eax
  404b8c:	cmp    eax,0x7ae31ae2
  404b91:	imul   ebp,eax,0xf9ef60cd
  404b97:	mov    WORD PTR [eax+edi*8],?
  404b9a:	pop    edi
  404b9b:	cdq    
  404b9c:	mov    ds:0x5b3b7630,eax
  404ba1:	fidivr DWORD PTR [esi]
  404ba3:	mov    ds:0xc7c296b4,al
  404ba8:	iret   
  404ba9:	inc    eax
  404baa:	test   BYTE PTR [ecx],ch
  404bac:	sub    BYTE PTR [ebp+0x4cec4117],bh
  404bb2:	data16 dec BYTE PTR [esi]
  404bb5:	shl    DWORD PTR [ebp-0x79],1
  404bb8:	ss adc cl,dh
  404bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbc:	into   
  404bbd:	mov    edi,DWORD PTR [eax+0x8c7547b]
  404bc3:	mov    esi,0x1c287cf0
  404bc8:	nop
  404bc9:	pop    ss
  404bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bcb:	dec    ecx
  404bcc:	mov    ah,0x87
  404bce:	sbb    BYTE PTR [edi+ebx*8+0x43],bl
  404bd2:	jae    0x404b6f
  404bd4:	hlt    
  404bd5:	lods   al,BYTE PTR ds:[esi]
  404bd6:	pop    ebx
  404bd7:	sbb    al,0x4f
  404bd9:	(bad)  
  404bda:	popa   
  404bdb:	mov    ebx,0xe8881fdc
  404be0:	sub    al,0xe1
  404be2:	loope  0x404be6
  404be4:	xlat   BYTE PTR ds:[ebx]
  404be5:	outs   dx,BYTE PTR ds:[esi]
  404be6:	in     eax,dx
  404be7:	loopne 0x404bb7
  404be9:	sbb    ah,bl
  404beb:	(bad)  
  404bec:	ffree  st(5)
  404bee:	cmp    DWORD PTR [ecx-0x22],ebp
  404bf1:	cmp    eax,0x8fbe7090
  404bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf7:	data16 adc al,0xe5
  404bfa:	js     0x404baf
  404bfc:	inc    ebp
  404bfd:	aam    0x8b
  404bff:	fsub   DWORD PTR [edi]
  404c01:	dec    edi
  404c02:	push   ecx
  404c03:	and    BYTE PTR [edi-0x14869640],al
  404c09:	addr16 into 
  404c0b:	dec    esp
  404c0c:	neg    cl
  404c0e:	mov    bl,0xf5
  404c10:	into   
  404c11:	hlt    
  404c12:	loop   0x404c5b
  404c14:	aad    0xc0
  404c16:	scas   al,BYTE PTR es:[edi]
  404c17:	(bad)  
  404c18:	mov    edi,0x6550c6b8
  404c1d:	loopne 0x404bdf
  404c1f:	(bad)
  404c24:	jnp    0x404c20
  404c26:	push   ebx
  404c27:	sbb    edx,DWORD PTR [ecx]
  404c29:	data16 and ch,BYTE PTR ds:0x3f66f877
  404c30:	jb     0x404c38
  404c32:	outs   dx,BYTE PTR ds:[esi]
  404c33:	mov    WORD PTR [edi],ss
  404c35:	xchg   ebp,eax
  404c36:	and    al,0xe6
  404c38:	push   ecx
  404c39:	jmp    0xd37a9ad1
  404c3e:	test   DWORD PTR [ebp-0x2f],esi
  404c41:	jne    0x404c98
  404c43:	mov    BYTE PTR [eax-0x6a],bh
  404c46:	cdq    
  404c47:	and    eax,0x133f9ef7
  404c4c:	inc    eax
  404c4d:	int    0x62
  404c4f:	adc    edi,ecx
  404c51:	sti    
  404c52:	cmp    DWORD PTR [eax],ecx
  404c54:	or     al,0x20
  404c56:	stc    
  404c57:	aaa    
  404c58:	sub    dl,BYTE PTR [ebp-0x26]
  404c5b:	push   es
  404c5c:	mov    ebp,0x38dc1a48
  404c61:	push   ecx
  404c62:	sub    dl,BYTE PTR [edi+0x29280b51]
  404c68:	sbb    al,0x69
  404c6a:	lods   al,BYTE PTR ds:[esi]
  404c6b:	lock add al,0x70
  404c6e:	retf   0xb92
  404c71:	add    al,0xef
  404c73:	sti    
  404c74:	and    esi,ebp
  404c76:	repz adc BYTE PTR ds:0x84d3f2b8,dl
  404c7d:	pop    ecx
  404c7e:	sti    
  404c7f:	adc    al,0xa0
  404c81:	mov    DWORD PTR [ecx+0x4d6c1e5e],edi
  404c87:	aad    0xf8
  404c89:	xor    al,0xf1
  404c8b:	int3   
  404c8c:	jne    0x404c75
  404c8e:	cmp    BYTE PTR [ecx+0x7703b848],0x58
  404c95:	jnp    0x404cef
  404c97:	adc    dh,dh
  404c99:	dec    esp
  404c9a:	inc    ecx
  404c9b:	mov    ah,0x48
  404c9d:	mov    DWORD PTR [ebx+0x1154d510],eax
  404ca3:	outs   dx,DWORD PTR ds:[esi]
  404ca4:	leave  
  404ca5:	mov    ds:0x42b6001f,eax
  404caa:	xor    al,0x5e
  404cac:	in     al,0xb1
  404cae:	sub    al,0x3b
  404cb0:	and    DWORD PTR [esi-0x46],edi
  404cb3:	(bad)  
  404cb5:	inc    esi
  404cb6:	mov    edi,0xc9791d41
  404cbb:	or     esp,DWORD PTR [edx]
  404cbd:	jle    0x404d2f
  404cbf:	mov    eax,ds:0x47228741
  404cc4:	(bad)  
  404cc5:	(bad)
  404cc9:	inc    eax
  404cca:	inc    ebx
  404ccb:	jle    0x404c74
  404ccd:	cmp    al,0xce
  404ccf:	pop    eax
  404cd0:	ficom  WORD PTR [ebp-0x96c9175]
  404cd6:	aas    
  404cd7:	dec    edx
  404cd8:	xor    eax,0x5c38a89f
  404cdd:	jmp    0x404d09
  404cdf:	or     eax,0x73a5e2e9
  404ce4:	push   ss
  404ce5:	inc    ebp
  404ce6:	add    DWORD PTR [edi-0x32],ecx
  404ce9:	add    ebx,DWORD PTR [eax-0x2a9adfb]
  404cef:	in     eax,dx
  404cf0:	xlat   BYTE PTR ds:[ebx]
  404cf1:	call   0x97da3f5c
  404cf6:	mov    edi,DWORD PTR gs:[edi+0x3a]
  404cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfb:	daa    
  404cfc:	inc    ecx
  404cfd:	popf   
  404cfe:	and    al,0x83
  404d00:	and    eax,0x31db3dcd
  404d05:	rcl    DWORD PTR [esi],cl
  404d07:	fwait
  404d08:	lods   al,BYTE PTR ds:[esi]
  404d09:	fiadd  WORD PTR [ebx-0x15]
  404d0c:	sbb    ah,0xe3
  404d0f:	retf   
  404d10:	enter  0xeb1c,0x48
  404d14:	mov    cl,0x72
  404d16:	add    BYTE PTR ds:0x59d5f4c5,dh
  404d1c:	jno    0x404d22
  404d1e:	push   0xc38b105a
  404d23:	jns    0x404caf
  404d25:	shl    DWORD PTR [esi+ebp*4-0x5798c544],0x51
  404d2d:	inc    edx
  404d2e:	adc    DWORD PTR [edi+0x57b8dd64],0xffffffe5
  404d35:	imul   eax,DWORD PTR [eax-0x5ec7f3e5],0x33
  404d3c:	cwde   
  404d3d:	and    ebx,0xffffffe1
  404d40:	lods   al,BYTE PTR ds:[esi]
  404d41:	adc    DWORD PTR [ecx-0x78a723d1],ecx
  404d47:	jne    0x404d60
  404d49:	dec    edi
  404d4a:	xor    eax,0xac9fbc25
  404d4f:	loope  0x404cf3
  404d51:	or     BYTE PTR [edi+edx*4+0x13],bl
  404d55:	pushf  
  404d56:	jo     0x404d66
  404d58:	pop    ss
  404d59:	iret   
  404d5a:	lds    esp,FWORD PTR [edx+0x2775b196]
  404d60:	pusha  
  404d61:	(bad)  
  404d62:	dec    edi
  404d63:	mov    ds:0xdd8e948d,al
  404d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d69:	xchg   esi,eax
  404d6a:	jecxz  0x404d56
  404d6c:	lock scas al,BYTE PTR es:[edi]
  404d6e:	sub    DWORD PTR [ebx+0x2b],edx
  404d71:	loope  0x404dd5
  404d73:	push   cs
  404d74:	dec    edi
  404d75:	sysexit 
  404d77:	bound  edi,QWORD PTR [ebx+edi*4]
  404d7a:	retf   0x9afd
  404d7d:	mov    ebx,0x2d920289
  404d82:	into   
  404d83:	lea    esi,[edi-0x35]
  404d86:	mov    WORD PTR [eax+0x59],ds
  404d89:	retf   
  404d8a:	sbb    edx,edi
  404d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8d:	test   BYTE PTR [eax],dh
  404d8f:	int    0x5b
  404d91:	gs sti 
  404d93:	sbb    al,0x43
  404d95:	(bad)  [ebp+0x6c8cc08c]
  404d9b:	jmp    0x404d8d
  404d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9e:	repz dec eax
  404da0:	push   ebx
  404da1:	mov    bl,0x94
  404da3:	cwde   
  404da4:	mov    DWORD PTR [esi+0x62f67d60],edx
  404daa:	leave  
  404dab:	jp     0x404d83
  404dad:	xchg   BYTE PTR [ebp-0x23],dl
  404db0:	loop   0x404d62
  404db2:	jae    0x404e06
  404db4:	xor    DWORD PTR [ebp-0x7d427e07],edi
  404dba:	imul   ebx,DWORD PTR [esi+0x3281ca80],0x6d
  404dc1:	fidiv  WORD PTR [esi+0x71a2a0c9]
  404dc7:	in     al,0xd0
  404dc9:	sbb    DWORD PTR ds:0x41b73c0e,esi
  404dcf:	mov    ebx,esi
  404dd1:	adc    ch,BYTE PTR [bp+di]
  404dd4:	adc    cl,bl
  404dd6:	or     BYTE PTR [esi],0xe8
  404dd9:	lock adc eax,0x1f0e9cdf
  404ddf:	gs dec eax
  404de1:	scas   eax,DWORD PTR es:[edi]
  404de2:	ficomp WORD PTR [esp+ebx*8]
  404de5:	and    eax,0xcbbf8422
  404dea:	mov    eax,ds:0x89356a4f
  404def:	sub    al,0x99
  404df1:	mov    bl,0xfe
  404df3:	out    0xc0,al
  404df5:	fwait
  404df6:	xchg   ecx,eax
  404df7:	jp     0x404ddf
  404df9:	push   ebx
  404dfa:	push   0xffffffee
  404dfc:	shr    BYTE PTR [esi+0x42],0x8f
  404e00:	rol    BYTE PTR [eax+0x11a7291b],0xfb
  404e07:	xor    DWORD PTR [eax],esp
  404e09:	xlat   BYTE PTR ds:[ebx]
  404e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0b:	adc    esp,DWORD PTR [ecx-0x63]
  404e0e:	aaa    
  404e0f:	call   0x3365:0xb00fa0d5
  404e16:	xchg   esp,eax
  404e17:	dec    edx
  404e18:	sbb    al,0xa6
  404e1a:	(bad)
  404e1e:	adc    ch,BYTE PTR [eax-0x4c371fc2]
  404e24:	sti    
  404e25:	call   0x8bda:0xceaedecc
  404e2c:	xchg   ebx,eax
  404e2d:	data16 sbb BYTE PTR [ebx-0x731a9029],ch
  404e34:	out    dx,al
  404e35:	inc    eax
  404e36:	mov    eax,ds:0xf77efc76
  404e3b:	pop    esp
  404e3c:	xlat   BYTE PTR ds:[ebx]
  404e3d:	es leave 
  404e3f:	sbb    ax,0x2579
  404e43:	mov    ds:0x56a339a4,eax
  404e48:	mov    ch,0xaf
  404e4a:	pop    esi
  404e4b:	push   ds
  404e4c:	test   DWORD PTR [edx],0xfeb8b84b
  404e52:	shl    DWORD PTR [edi],cl
  404e54:	fisttp DWORD PTR ds:0x88af13bc
  404e5a:	loop   0x404e8e
  404e5c:	and    dh,al
  404e5e:	cmp    eax,0x5fda3ab7
  404e63:	xchg   ebx,eax
  404e64:	push   DWORD PTR [ebp-0x6c]
  404e67:	fwait
  404e68:	cmp    BYTE PTR [ecx-0x277f90d],cl
  404e6e:	int    0x9a
  404e70:	sahf   
  404e71:	(bad)  
  404e73:	push   eax
  404e74:	data16 fcomip st,st(7)
  404e77:	jl     0x404e35
  404e79:	dec    edi
  404e7a:	sub    bh,dh
  404e7c:	xor    DWORD PTR [ecx+ecx*4-0xddf5d86],ebp
  404e83:	icebp  
  404e84:	push   0xb95108a7
  404e89:	arpl   WORD PTR [ebx+0x437b7d48],si
  404e8f:	jnp    0x404e9b
  404e91:	jp     0x404ed6
  404e93:	outs   dx,DWORD PTR ds:[esi]
  404e94:	pop    ecx
  404e95:	cmc    
  404e96:	leave  
  404e97:	sub    BYTE PTR [eax],cl
  404e99:	push   ds
  404e9a:	sub    eax,0x6b8a43ab
  404e9f:	push   esp
  404ea0:	arpl   WORD PTR es:[esi+0x78],bx
  404ea4:	sahf   
  404ea5:	mov    bh,0x1
  404ea7:	or     BYTE PTR [edi+edx*1-0x5e4c016],0x81
  404eaf:	sub    BYTE PTR [ebp-0x2a],al
  404eb2:	pop    ecx
  404eb3:	jg     0x404e68
  404eb5:	lock add bl,dh
  404eb8:	jnp    0x404ea6
  404eba:	mov    WORD PTR [edx-0x41],fs
  404ebd:	ja     0x404e7a
  404ebf:	(bad)  
  404ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec1:	sub    BYTE PTR [esp+ecx*2-0x4b],al
  404ec5:	ss pushf 
  404ec7:	inc    esp
  404ec8:	xor    eax,edi
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi-0x656df5c0]
  404f7f:	lods   al,BYTE PTR ds:[esi]
  404f80:	leave  
  404f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f82:	mov    esi,0xbdbebe11
  404f87:	les    edi,FWORD PTR [esi-0x8c21742]
  404f8d:	xchg   ebx,eax
  404f8e:	pop    esp
  404f8f:	mov    ebp,0x9b542606
  404f94:	mov    bl,0xc5
  404f96:	pop    es
  404f97:	scas   al,BYTE PTR es:[edi]
  404f98:	ror    DWORD PTR [ebp-0x3e],1
  404f9b:	and    dh,bh
  404f9d:	enter  0xf578,0x82
  404fa1:	inc    ecx
  404fa2:	aaa    
  404fa3:	ror    DWORD PTR [ebx],cl
  404fa5:	stc    
  404fa6:	ret    0xc90f
  404fa9:	fcom   DWORD PTR [edi-0x43]
  404fac:	fidivr DWORD PTR [esi+0x9]
  404faf:	shr    BYTE PTR [edi+0x11],1
  404fb2:	and    ah,BYTE PTR [ecx+0x42a95b63]
  404fb8:	jne    0x404f58
  404fba:	mov    al,ds:0x5d203816
  404fbf:	xchg   edi,eax
  404fc0:	jge    0x40503e
  404fc2:	adc    edx,DWORD PTR [edx]
  404fc4:	popa   
  404fc5:	lock ds push esp
  404fc8:	outs   dx,BYTE PTR ds:[esi]
  404fc9:	push   eax
  404fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fcb:	adc    bh,BYTE PTR [edi+0x4bb092e2]
  404fd1:	inc    ecx
  404fd2:	popa   
  404fd3:	(bad)  
  404fd4:	mov    eax,0xedc6747c
  404fd9:	stc    
  404fda:	lahf   
  404fdb:	sub    bl,bl
  404fdd:	add    bh,dl
  404fdf:	aaa    
  404fe0:	and    BYTE PTR ds:0xce6ea4cb,ch
  404fe6:	and    al,0x78
  404fe8:	inc    esi
  404fe9:	and    al,0xc2
  404feb:	div    DWORD PTR [eax-0x42f09eff]
  404ff1:	not    BYTE PTR [ebp+edi*8+0x28]
  404ff5:	clc    
  404ff6:	jbe    0x405040
  404ff8:	mov    dh,0x40
  404ffa:	inc    esp
  404ffb:	das    
  404ffc:	cmc    
  404ffd:	and    eax,0xe3a0fb76
  405002:	(bad)  
  405003:	jmp    0x89a4:0xd4905f48
  40500a:	iret   
  40500b:	pop    edx
  40500c:	pop    eax
  40500d:	repz rcl BYTE PTR [eax],0x9f
  405011:	inc    ecx
  405012:	pop    ss
  405013:	mov    al,ds:0x7305b8c6
  405018:	jmp    0x404fa6
  40501a:	xlat   BYTE PTR ds:[ebx]
  40501b:	imul   eax,DWORD PTR [ebx],0x9f3cd2b1
  405021:	jo     0x404ff8
  405023:	mov    edi,0xfc743ea2
  405028:	add    ah,BYTE PTR [edi+0x3e6a3d87]
  40502e:	cmp    bh,al
  405030:	xchg   BYTE PTR [ecx+0x1a],ch
  405033:	or     al,0x2
  405035:	cdq    
  405036:	repz push esi
  405038:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40503a:	pusha  
  40503b:	js     0x405096
  40503d:	jno    0x404fd5
  40503f:	bound  edi,QWORD PTR [ecx+0x7bfbfba8]
  405045:	rcr    BYTE PTR [edi-0x54],0x75
  405049:	mov    ebx,0xa03c2214
  40504e:	sub    eax,0xf9199d63
  405053:	dec    ebp
  405054:	repnz cmp eax,0xeae83789
  40505a:	xchg   ebp,eax
  40505b:	mov    esi,0x91f68f2a
  405060:	(bad)  
  405061:	jo     0x405017
  405063:	shr    ah,1
  405065:	dec    ebp
  405066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405067:	mov    BYTE PTR [edx+0x2c7108c8],ch
  40506d:	outs   dx,DWORD PTR ds:[esi]
  40506e:	xor    DWORD PTR [ecx-0x288c1d98],ebx
  405074:	pop    ss
  405075:	xchg   ebp,eax
  405076:	add    dl,BYTE PTR [esi]
  405078:	sub    esp,DWORD PTR [esi-0x6b388122]
  40507e:	or     eax,0x8f9a5338
  405083:	(bad)  
  405084:	xlat   BYTE PTR ds:[ebx]
  405085:	test   al,0x3c
  405087:	lods   eax,DWORD PTR ds:[esi]
  405088:	lea    ecx,[ecx-0x51d88d9]
  40508e:	jle    0x4050c4
  405090:	call   0xa512:0x4262b696
  405097:	sub    bl,BYTE PTR [ebx-0x31]
  40509a:	scas   al,BYTE PTR es:[edi]
  40509b:	cli    
  40509c:	jno    0x4050b0
  40509e:	(bad)  
  40509f:	stc    
  4050a0:	sbb    DWORD PTR [esi],ecx
  4050a2:	xlat   BYTE PTR ds:[ebx]
  4050a3:	fmul   DWORD PTR [eax]
  4050a5:	adc    al,0x23
  4050a7:	fimul  WORD PTR ds:0xec97896a
  4050ad:	push   0xc5b12b7e
  4050b2:	mov    dh,0x15
  4050b4:	sti    
  4050b5:	add    DWORD PTR [ecx],esp
  4050b7:	mov    ebx,ecx
  4050b9:	jmp    0x94ac9d37
  4050be:	shr    ch,1
  4050c0:	fs lahf 
  4050c2:	scas   eax,DWORD PTR es:[edi]
  4050c3:	and    ebp,DWORD PTR [ecx+0x71]
  4050c6:	xchg   edx,eax
  4050c7:	int    0xc6
  4050c9:	das    
  4050ca:	int3   
  4050cb:	sub    al,0xdd
  4050cd:	pushf  
  4050ce:	sbb    BYTE PTR [edx+0x5f],bh
  4050d1:	xor    eax,DWORD PTR [esi-0x5b]
  4050d4:	fadd   DWORD PTR [ebx]
  4050d6:	add    DWORD PTR [edi],edx
  4050d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d9:	inc    ecx
  4050da:	inc    DWORD PTR [ebp-0x529ea396]
  4050e0:	lds    ebx,FWORD PTR [ecx+0x76]
  4050e3:	mov    al,ds:0x362e27f6
  4050e8:	jns    0x405120
  4050ea:	in     eax,0xd4
  4050ec:	xor    DWORD PTR [esi-0xd],edi
  4050ef:	xchg   esp,eax
  4050f0:	cmc    
  4050f1:	repz jae 0x40514f
  4050f4:	cmc    
  4050f5:	dec    eax
  4050f6:	call   DWORD PTR [esi-0x3d]
  4050f9:	mov    esi,0x58f48110
  4050fe:	stos   DWORD PTR es:[edi],eax
  4050ff:	js     0x4050ab
  405101:	add    BYTE PTR [esi+edi*4-0x5256c8b9],bl
  405108:	loope  0x40517d
  40510a:	call   0xb143:0x29ed24f7
  405111:	into   
  405112:	mov    bh,dl
  405114:	sub    al,0x5f
  405116:	push   ebp
  405117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405118:	push   eax
  405119:	push   es
  40511a:	xchg   ebp,eax
  40511b:	inc    esp
  40511c:	je     0x405130
  40511e:	shr    cl,1
  405120:	sbb    eax,edx
  405122:	jb     0x4050ae
  405124:	test   DWORD PTR [eax],edi
  405126:	push   ss
  405127:	adc    bl,BYTE PTR [edx+0x11]
  40512a:	jae    0x405146
  40512c:	test   al,0x8f
  40512e:	sbb    DWORD PTR [ecx-0x446e5fd8],ebx
  405134:	pop    ecx
  405135:	push   es
  405136:	cmp    bh,BYTE PTR [edx+0x6f7f7c5a]
  40513c:	or     cl,ah
  40513e:	sbb    eax,0x7ed9ee0a
  405143:	fimul  WORD PTR [ebp+eiz*8+0x23]
  405147:	dec    esi
  405148:	shr    BYTE PTR [eax],cl
  40514a:	mov    BYTE PTR [eax-0x26],cl
  40514d:	fisubr WORD PTR [ecx]
  40514f:	(bad)  
  405150:	lods   al,BYTE PTR ds:[esi]
  405151:	enter  0x2fce,0xa7
  405155:	push   ecx
  405156:	call   0x2b3f8be0
  40515b:	icebp  
  40515c:	(bad)  
  40515e:	lock push ecx
  405160:	pop    ds
  405161:	fiadd  WORD PTR [ecx-0x463a63ec]
  405167:	xchg   esi,eax
  405168:	(bad)  
  405169:	imul   edi,DWORD PTR [esi+0x63],0xffffffbd
  40516d:	xchg   DWORD PTR [ecx+edi*8+0x3c44a267],edx
  405174:	adc    DWORD PTR [eax-0x1f6dcb08],eax
  40517a:	popf   
  40517b:	mov    edi,0x7e153649
  405180:	adc    al,0x6c
  405182:	outs   dx,BYTE PTR ds:[esi]
  405183:	mov    ds:0x984fcc66,eax
  405188:	in     eax,0x28
  40518a:	and    al,0xa5
  40518c:	add    eax,0xdb7b7a6b
  405191:	test   eax,0x4b7b993f
  405196:	ret    0x6d8b
  405199:	aad    0xf9
  40519b:	inc    ebp
  40519c:	aad    0x19
  40519e:	xor    BYTE PTR [eax],dh
  4051a0:	and    ch,BYTE PTR [ecx+ebp*1-0x8]
  4051a4:	fld    TBYTE PTR [eax+0x4a]
  4051a7:	mov    ah,0x6e
  4051a9:	push   ds
  4051aa:	mov    bh,0x52
  4051ac:	sbb    dl,BYTE PTR [edx-0x23]
  4051af:	xchg   esp,eax
  4051b0:	xchg   esp,eax
  4051b1:	rcr    dl,0x8d
  4051b4:	pop    edx
  4051b5:	or     esp,DWORD PTR [edi+0x3b886d79]
  4051bb:	inc    ebp
  4051bc:	adc    DWORD PTR [eax],edi
  4051be:	xor    eax,0x3ff4f5ba
  4051c3:	fstp   TBYTE PTR [ecx]
  4051c5:	sub    dh,dl
  4051c7:	mov    ah,0xd7
  4051c9:	cmp    esp,DWORD PTR [edx+0x65]
  4051cc:	jns    0x40518c
  4051ce:	mov    ecx,0xf95ad733
  4051d3:	les    ebx,FWORD PTR [edx+eiz*2-0x69]
  4051d7:	inc    edx
  4051d8:	jae    0x405230
  4051da:	aas    
  4051db:	sub    bh,BYTE PTR [esi+0x4637b7d2]
  4051e1:	jmp    0x7bccde2
  4051e6:	mov    al,ds:0xa1be30ba
  4051eb:	aaa    
  4051ec:	inc    ebx
  4051ed:	and    bl,BYTE PTR [edx-0x1b]
  4051f0:	out    0xc6,eax
  4051f2:	cmp    DWORD PTR [edx-0x2787fd5],edi
  4051f8:	psubq  mm3,QWORD PTR [edx]
  4051fb:	or     dh,al
  4051fd:	rcr    BYTE PTR [ebx],0x69
  405200:	in     al,dx
  405201:	cdq    
  405202:	pop    edx
  405203:	add    eax,0x6d56911d
  405208:	pop    ecx
  405209:	arpl   WORD PTR [esi+esi*4-0x64e4df24],cx
  405210:	shl    BYTE PTR [esi],cl
  405212:	cli    
  405213:	xor    ecx,DWORD PTR [edi-0x5e]
  405216:	or     edi,DWORD PTR [ebp+0x13]
  405219:	push   0xde4200f5
  40521e:	add    eax,0xcbf9976b
  405223:	push   ebp
  405224:	jmp    0x7121:0xb3f69c7b
  40522b:	xor    al,BYTE PTR [eax]
  40522d:	daa    
  40522e:	cli    
  40522f:	mov    ecx,0x43542f37
  405234:	pop    edx
  405235:	mov    DWORD PTR [eax-0x55def29f],ebx
  40523b:	data16 (bad) 
  40523d:	leave  
  40523e:	arpl   WORD PTR [esi-0x49],dx
  405241:	pop    edx
  405242:	(bad)  
  405243:	mov    al,bl
  405245:	pusha  
  405246:	cmp    ebx,DWORD PTR [ecx]
  405248:	cli    
  405249:	pop    edi
  40524a:	adc    ebx,DWORD PTR [edi]
  40524c:	fwait
  40524d:	mov    edx,0x14acf471
  405252:	jle    0x4051db
  405254:	bound  eax,QWORD PTR [eax+0x10]
  405257:	xchg   ebx,ebp
  405259:	cmp    eax,0xdff70a56
  40525e:	lahf   
  40525f:	add    al,0xd3
  405261:	outs   dx,BYTE PTR ds:[esi]
  405262:	mov    ?,WORD PTR cs:[ecx]
  405265:	fsub   DWORD PTR [edx-0x4f]
  405268:	arpl   ax,ax
  40526a:	and    al,0xec
  40526c:	mov    eax,DWORD PTR [edx+0x7]
  40526f:	inc    esp
  405270:	mov    ah,0xc2
  405272:	hlt    
  405273:	push   edx
  405274:	cld    
  405275:	cmp    DWORD PTR [esi+0x52d934af],edi
  40527b:	repz pop ebp
  40527d:	sub    DWORD PTR [edx-0x28e3b369],ebx
  405283:	rcl    BYTE PTR [eax-0x39],1
  405286:	outs   dx,DWORD PTR ds:[esi]
  405287:	push   ebx
  405288:	js     0x405216
  40528a:	and    BYTE PTR [esi+0x1d],dl
  40528d:	cwde   
  40528e:	inc    ecx
  40528f:	mov    esp,0x284cf7f0
  405294:	inc    esi
  405295:	mov    edi,0xe512e102
  40529a:	jmp    0x405276
  40529c:	mov    edi,0xe4ec6199
  4052a1:	inc    edi
  4052a2:	dec    DWORD PTR [ecx-0x295bce94]
  4052a8:	push   0x33
  4052aa:	push   es
  4052ab:	mov    eax,0xdd50e6e5
  4052b0:	adc    BYTE PTR [eax],dl
  4052b2:	jbe    0x405323
  4052b4:	shl    DWORD PTR ds:0xf42eafa7,1
  4052ba:	or     al,0x4d
  4052bc:	dec    edx
  4052bd:	adc    dl,al
  4052bf:	push   0x19
  4052c1:	fbstp  TBYTE PTR [esp+edx*2-0x27]
  4052c5:	in     eax,dx
  4052c6:	je     0x405278
  4052c8:	out    dx,al
  4052c9:	std    
  4052ca:	xchg   esi,eax
  4052cb:	cmp    al,0x2a
  4052cd:	jg     0x40530a
  4052cf:	lods   ax,WORD PTR ds:[esi]
  4052d1:	mov    bl,0x23
  4052d3:	xlat   BYTE PTR ds:[ebx]
  4052d4:	adc    BYTE PTR [esi+eax*1],bh
  4052d7:	and    bh,dh
  4052d9:	imul   ecx,DWORD PTR ds:0x4038537f,0x94c96791
  4052e3:	in     al,0xfe
  4052e5:	enter  0xa19a,0x12
  4052e9:	aad    0x2f
  4052eb:	ins    DWORD PTR es:[edi],dx
  4052ec:	outs   dx,DWORD PTR ds:[esi]
  4052ed:	sbb    al,0x64
  4052ef:	inc    ebp
  4052f0:	adc    esp,DWORD PTR [eax]
  4052f2:	fdivr  QWORD PTR [ebx+ebp*1+0x4d]
  4052f6:	cmp    BYTE PTR [edx+0x2a],dl
  4052f9:	inc    esp
  4052fa:	jb     0x405323
  4052fc:	test   eax,0x2095166a
  405301:	or     BYTE PTR ds:0xc1e5d933,cl
  405307:	sbb    eax,DWORD PTR [ecx-0x51a99cb9]
  40530d:	call   0x8b50989d
  405312:	enter  0xac0f,0xd1
  405316:	add    al,cl
  405318:	loopne 0x405338
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	sbb    al,0xbf
  40533a:	call   0xbdbe:0xbe17bde3
  405341:	les    edi,FWORD PTR [esi+0x36f0debe]
  405347:	xchg   edx,eax
  405348:	bound  ebp,QWORD PTR [ebp+ecx*4+0x64a8784]
  40534f:	mov    cs,edi
  405351:	pop    ebx
  405352:	les    esi,FWORD PTR [esi+0xb5482ae]
  405358:	daa    
  405359:	add    ch,dl
  40535b:	adc    DWORD PTR [ecx+eax*1-0x64391a62],0xffffffc6
  405363:	mov    ebp,0x450af385
  405368:	inc    edi
  405369:	inc    edi
  40536a:	cmp    BYTE PTR [ebx],cl
  40536c:	jbe    0x40531d
  40536e:	push   es
  40536f:	mov    al,BYTE PTR [esi]
  405371:	cwde   
  405372:	or     ch,BYTE PTR [eax+0x39]
  405375:	jne    0x40537d
  405377:	pop    esi
  405378:	add    al,0x4a
  40537a:	(bad)  
  40537b:	cmp    ebx,esi
  40537d:	and    eax,0x11ebdf7e
  405382:	push   ecx
  405383:	mov    al,0xd1
  405385:	aas    
  405386:	inc    eax
  405387:	ret    
  405388:	pop    esp
  405389:	jmp    0xd5f6:0x452a037b
  405390:	pop    ebx
  405391:	mov    bh,0x48
  405393:	push   cs
  405394:	push   0x57683b1b
  405399:	add    BYTE PTR [esi-0x3554a492],bl
  40539f:	inc    ebx
  4053a0:	inc    esi
  4053a1:	push   ebp
  4053a2:	(bad)  
  4053a4:	ret    
  4053a5:	out    dx,eax
  4053a6:	mov    eax,ds:0x3b96051
  4053ab:	sti    
  4053ac:	xchg   esi,eax
  4053ad:	xor    DWORD PTR [ebp+ecx*2+0x2e],eax
  4053b1:	fild   QWORD PTR [esi-0xb]
  4053b4:	fdivr  st,st(4)
  4053b6:	mov    dh,ch
  4053b8:	ins    DWORD PTR es:[edi],dx
  4053b9:	jl     0x40536c
  4053bb:	mov    al,ds:0xf9e5446f
  4053c0:	in     eax,0x5c
  4053c2:	mov    cl,0xe3
  4053c4:	les    esi,FWORD PTR [edi]
  4053c6:	or     DWORD PTR [edx-0x6a365649],0x13
  4053cd:	call   0x9533e297
  4053d2:	mov    cl,0x6b
  4053d4:	cmp    eax,0x232205cf
  4053d9:	inc    ebx
  4053da:	mov    es,edi
  4053dc:	dec    eax
  4053dd:	pop    esi
  4053de:	mov    ebx,0xbcf6f706
  4053e3:	xchg   edi,eax
  4053e4:	mov    bh,0x6
  4053e6:	push   edx
  4053e7:	in     al,0x5
  4053e9:	int    0xbf
  4053eb:	std    
  4053ec:	repz js 0x40545e
  4053ef:	cmp    eax,0x6e39f420
  4053f4:	jne    0x4053f5
  4053f6:	jnp    0x40540d
  4053f8:	and    eax,0xefb50fd2
  4053fd:	jnp    0x4053a2
  4053ff:	popa   
  405400:	mov    bl,0x15
  405402:	addr16 xchg ecx,eax
  405404:	xor    ebp,edi
  405406:	jns    0x405459
  405408:	stos   DWORD PTR es:[edi],eax
  405409:	aas    
  40540a:	adc    ah,BYTE PTR [ecx]
  40540c:	pop    edx
  40540d:	xchg   ebx,eax
  40540e:	(bad)  
  40540f:	test   dl,cl
  405411:	adc    ebx,DWORD PTR fs:[ecx]
  405414:	in     eax,0xb2
  405416:	out    0xd4,eax
  405418:	sbb    dl,BYTE PTR [ecx+0x4a2d3aa1]
  40541e:	sbb    al,0xf5
  405420:	out    0xb8,eax
  405422:	sbb    DWORD PTR [ecx+ebp*1],0xffffff8e
  405426:	out    dx,eax
  405427:	stos   BYTE PTR es:[edi],al
  405428:	sti    
  405429:	jns    0x4053ea
  40542b:	mov    ds:0xf66cbe15,al
  405430:	sbb    al,0x39
  405432:	daa    
  405433:	call   0x21313830
  405438:	loop   0x405492
  40543a:	cmc    
  40543b:	sbb    BYTE PTR [eax],0x36
  40543e:	arpl   dx,ax
  405440:	mov    ds:0x156a05d0,eax
  405445:	jge    0x405485
  405447:	fidiv  DWORD PTR [eax+0x5eefab71]
  40544d:	push   ds
  40544e:	jne    0x40546d
  405450:	sub    ah,BYTE PTR [ebx]
  405452:	mov    ch,dl
  405454:	aad    0x6f
  405456:	or     bl,BYTE PTR [eax-0x7d]
  405459:	inc    eax
  40545a:	jo     0x4053eb
  40545c:	or     DWORD PTR gs:[ebx+0x7b],esp
  405460:	(bad)  
  405461:	push   0x3d220f1d
  405466:	sbb    eax,0x8b57c34f
  40546b:	cmp    bl,dh
  40546d:	outs   dx,BYTE PTR ds:[esi]
  40546e:	mov    DWORD PTR [ecx-0x74f803fd],edx
  405474:	es ins DWORD PTR es:[edi],dx
  405476:	jb     0x40543b
  405478:	and    ecx,esp
  40547a:	xchg   esp,eax
  40547b:	push   ds
  40547c:	jo     0x405440
  40547e:	aas    
  40547f:	cld    
  405480:	pop    es
  405481:	mov    dh,0x14
  405483:	mov    esp,0x648cc40c
  405488:	cdq    
  405489:	or     dh,0xce
  40548c:	or     DWORD PTR [eax-0x80],0xd95e14f8
  405493:	pop    ss
  405494:	arpl   WORD PTR [edi+0x4f],bp
  405497:	jmp    0x40547e
  405499:	xor    ch,dl
  40549b:	das    
  40549c:	or     al,0x7e
  40549e:	(bad)
  4054a1:	cmp    DWORD PTR [edi+0x13ad4af8],edi
  4054a7:	jns    0x4054ae
  4054a9:	dec    ebp
  4054aa:	mov    al,0xaa
  4054ac:	shr    esi,cl
  4054ae:	mov    eax,0xaaa40cd9
  4054b3:	retf   
  4054b4:	fisttp WORD PTR [edx+esi*1+0x368cfb17]
  4054bb:	adc    al,BYTE PTR [edx]
  4054bd:	mov    edi,0x7a3c21ff
  4054c2:	pop    ebp
  4054c3:	int    0xf3
  4054c5:	push   es
  4054c6:	sub    BYTE PTR [eax+esi*1+0x62],0x6f
  4054cb:	popf   
  4054cc:	sub    eax,0x5183ff47
  4054d1:	pop    edi
  4054d2:	add    al,dl
  4054d4:	lds    edx,FWORD PTR [edi]
  4054d6:	das    
  4054d7:	imul   esp,DWORD PTR [ecx+0x6966bca1]
  4054de:	jg     0x4054b0
  4054e0:	hlt    
  4054e1:	cli    
  4054e2:	scas   eax,DWORD PTR es:[edi]
  4054e3:	ret    0xd7aa
  4054e6:	or     esp,DWORD PTR [ecx-0x3e]
  4054e9:	bound  edi,QWORD PTR [edx]
  4054eb:	inc    edx
  4054ec:	jmp    0x405555
  4054ee:	mov    cl,0x11
  4054f0:	rcl    ah,1
  4054f2:	mov    DWORD PTR ds:0xd2a542bc,edx
  4054f8:	jp     0x4054cd
  4054fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054fb:	es stos BYTE PTR es:[edi],al
  4054fd:	pusha  
  4054fe:	rcr    ch,cl
  405500:	int    0x51
  405502:	push   ebp
  405503:	icebp  
  405504:	push   eax
  405505:	adc    ah,bh
  405507:	sbb    bl,BYTE PTR [eax]
  405509:	mov    edi,0xc574fc06
  40550e:	sbb    esp,ecx
  405510:	mov    DWORD PTR [eax],ecx
  405512:	out    0x80,al
  405514:	mov    ds:0xfff7ba82,al
  405519:	push   esp
  40551a:	adc    ecx,esi
  40551c:	loop   0x405538
  40551e:	pop    ebx
  40551f:	in     eax,0x7a
  405521:	mov    ebx,0xd91806d7
  405526:	xchg   edx,eax
  405527:	pop    ebp
  405528:	push   esi
  405529:	in     al,0xfa
  40552b:	out    dx,eax
  40552c:	rcl    BYTE PTR [eax-0x68ed6f43],0x4b
  405533:	or     eax,0xa9e69051
  405538:	push   cs
  405539:	int3   
  40553a:	pop    ecx
  40553b:	iret   
  40553c:	std    
  40553d:	outs   dx,BYTE PTR ds:[esi]
  40553e:	data16 sub al,0xe9
  405541:	adc    ah,BYTE PTR [eax]
  405543:	ds mov edi,0x586b0b35
  405549:	jmp    0xd3e7:0x5a2f73ce
  405550:	not    BYTE PTR [ecx+eiz*8]
  405553:	xchg   BYTE PTR [eax-0xe52b618],al
  405559:	xchg   ebp,eax
  40555a:	lahf   
  40555b:	and    edx,edx
  40555d:	pop    ebx
  40555e:	repz test DWORD PTR [edi+0x56],ebp
  405562:	and    DWORD PTR [esi-0x2c],esi
  405565:	and    BYTE PTR [ecx+ebx*4-0x9],ah
  405569:	push   0xca6e3a3a
  40556e:	rol    BYTE PTR [edi],cl
  405570:	fdivr  DWORD PTR [esi-0x22]
  405573:	mov    ecx,es
  405575:	imul   edx,DWORD PTR cs:[edx+edi*2],0x6f
  40557a:	mov    ebp,0x981947a5
  40557f:	add    eax,0xba018d51
  405584:	fadd   DWORD PTR [bx+di+0x1f]
  405588:	sbb    bl,BYTE PTR [edi-0x50e3426b]
  40558e:	nop
  40558f:	rcr    DWORD PTR [ecx+esi*1],1
  405592:	outs   dx,BYTE PTR ds:[esi]
  405593:	cmp    eax,0x100c96d0
  405598:	push   ebp
  405599:	daa    
  40559a:	outs   dx,BYTE PTR ds:[esi]
  40559b:	jbe    0x4055ac
  40559d:	dec    ebp
  40559e:	fldenv fs:[ebx+0x7f]
  4055a2:	popa   
  4055a3:	sti    
  4055a4:	pop    ecx
  4055a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a6:	add    al,BYTE PTR [ebx+0x1e7bf144]
  4055ac:	jmp    0x4055a5
  4055ae:	mov    dl,ch
  4055b0:	aam    0x67
  4055b2:	jns    0x405535
  4055b4:	test   eax,0xa61d6474
  4055b9:	and    edi,ebx
  4055bb:	or     BYTE PTR [eax],bl
  4055bd:	mov    ebp,0xc565a3eb
  4055c2:	in     eax,0x5c
  4055c4:	sbb    dl,al
  4055c6:	loope  0x40558b
  4055c8:	pop    es
  4055c9:	mov    ?,esp
  4055cb:	loope  0x405592
  4055cd:	pop    esp
  4055ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055cf:	add    dl,BYTE PTR [bp+di+0x70]
  4055d3:	stos   DWORD PTR es:[edi],eax
  4055d4:	mov    ch,0x0
  4055d6:	inc    ecx
  4055d7:	es mov ah,0x79
  4055da:	int3   
  4055db:	xor    al,0x2c
  4055dd:	cli    
  4055de:	mov    eax,0x5a5d14a3
  4055e3:	iret   
  4055e4:	and    eax,0xed24fb25
  4055e9:	mov    cl,0x3e
  4055eb:	adc    cl,BYTE PTR [edx-0x76af21ab]
  4055f1:	mov    ebp,0x21c37c38
  4055f6:	stos   BYTE PTR es:[edi],al
  4055f7:	or     esi,DWORD PTR [esi+eiz*1]
  4055fa:	or     eax,0xc8a20233
  4055ff:	jne    0x405606
  405601:	mov    ecx,DWORD PTR [ebx-0x6a]
  405604:	dec    edi
  405605:	cmp    BYTE PTR [esi-0x1200d3c6],dh
  40560b:	mov    DWORD PTR [eax+0x10786596],0xc1b8b77d
  405615:	mov    bh,0x1b
  405617:	dec    esi
  405618:	in     eax,dx
  405619:	scas   al,BYTE PTR es:[edi]
  40561a:	xchg   edi,eax
  40561b:	push   0xbf1cfeb9
  405620:	push   esp
  405621:	push   cs
  405622:	jl     0x405642
  405624:	inc    eax
  405625:	lock bound eax,QWORD PTR [ecx+0x53dff94e]
  40562c:	pop    esp
  40562d:	jecxz  0x4055b8
  40562f:	sub    ch,0x1f
  405632:	mov    edx,0xb2439e8c
  405637:	addr16 mov ebp,0x50712633
  40563d:	push   edi
  40563e:	push   ds
  40563f:	cld    
  405640:	imul   esi,DWORD PTR [ecx+0x57],0xfffffff6
  405644:	pop    edx
  405645:	aam    0xf3
  405647:	fbstp  TBYTE PTR [ebx+0x2fa0f832]
  40564d:	xor    al,0x3b
  40564f:	cli    
  405650:	dec    edi
  405651:	addr16 sbb eax,edi
  405654:	js     0x4055f8
  405656:	pop    esp
  405657:	ror    ebx,cl
  405659:	sub    ebp,ebp
  40565b:	daa    
  40565c:	mov    al,0xf3
  40565e:	(bad)  [ebx+0x3ac402e9]
  405664:	pop    es
  405665:	mov    eax,0xd4777037
  40566a:	cmp    al,0xf2
  40566c:	dec    esp
  40566d:	push   eax
  40566e:	retf   
  40566f:	jnp    0x4056c0
  405671:	cmp    edx,esp
  405673:	xchg   DWORD PTR [ebx+0x60],ebx
  405676:	sbb    ch,BYTE PTR [edx+ebx*8-0x32]
  40567a:	cmp    dl,BYTE PTR [esi+0x7]
  40567d:	pop    ss
  40567e:	lock (bad) 
  405680:	cmc    
  405681:	adc    ch,BYTE PTR [eax]
  405683:	mov    edi,0x540cb02
  405688:	jl     0x4056f8
  40568a:	mov    ds:0xc27f83,al
  40568f:	in     eax,0x2a
  405691:	jae    0x4056b1
  405693:	inc    edi
  405694:	ror    BYTE PTR [edi-0x4ade81],1
  40569a:	cmp    al,cl
  40569c:	push   0x503c90b0
  4056a1:	sub    al,0x4c
  4056a3:	mov    eax,0x77e8e90d
  4056a8:	fnstcw WORD PTR [ecx]
  4056aa:	cmp    ah,dl
  4056ac:	dec    ebp
  4056ad:	sub    DWORD PTR cs:[ebx+0x5a],edx
  4056b1:	dec    edi
  4056b2:	mov    dh,0xc7
  4056b4:	jns    0x4056c3
  4056b6:	jecxz  0x405710
  4056b8:	in     eax,dx
  4056b9:	in     al,dx
  4056ba:	ret    0x7b73
  4056bd:	lods   eax,DWORD PTR ds:[esi]
  4056be:	lea    edi,gs:[ecx-0x4]
  4056c2:	pop    ebx
  4056c3:	popf   
  4056c4:	int3   
  4056c5:	dec    ecx
  4056c6:	add    al,BYTE PTR [ebx+esi*1-0x743df439]
  4056cd:	push   ebp
  4056ce:	cld    
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	rcl    DWORD PTR [ecx],1
  4056e4:	or     al,0x36
  4056e6:	xchg   edx,eax
  4056e7:	mov    esi,0xbdbebe1f
  4056ec:	les    edi,FWORD PTR [esi-0x593b3742]
  4056f2:	fdiv   QWORD PTR [edx]
  4056f4:	push   ecx
  4056f5:	lock fcomp DWORD PTR [edi+0x43]
  4056f9:	(bad)  
  4056fa:	jbe    0x405761
  4056fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fd:	jecxz  0x4056db
  4056ff:	mov    edi,0x8825a85c
  405704:	call   0xc4c1f6eb
  405709:	(bad)  
  40570a:	push   edx
  40570b:	dec    edi
  40570c:	push   0xffffff8d
  40570e:	inc    eax
  40570f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405710:	and    dh,BYTE PTR [esi+0x21d318de]
  405716:	xchg   esp,eax
  405717:	and    dl,BYTE PTR [eax-0x4c54bd8b]
  40571d:	idiv   DWORD PTR [edx-0x65]
  405720:	add    DWORD PTR [edi-0x31c85fd7],ebp
  405726:	fnstsw WORD PTR [ecx-0x61]
  405729:	aas    
  40572a:	out    0xf,al
  40572c:	inc    eax
  40572d:	aad    0x1b
  40572f:	loope  0x4057ab
  405731:	xchg   ecx,eax
  405732:	repz mov cl,0xd7
  405735:	sbb    DWORD PTR [esi-0x15],0xa
  405739:	bt     esi,eax
  40573c:	aas    
  40573d:	outs   dx,BYTE PTR ds:[esi]
  40573e:	loope  0x40573d
  405740:	enter  0x1fed,0x64
  405744:	mov    ecx,0x45b70de8
  405749:	xchg   ebp,eax
  40574a:	(bad)  
  40574b:	and    BYTE PTR ds:0xd3cd98f1,ah
  405751:	mov    ds:0x345b1360,eax
  405756:	add    BYTE PTR [ebp+0x76],al
  405759:	lods   eax,DWORD PTR ds:[si]
  40575b:	xor    al,al
  40575d:	fcomip st,st(7)
  40575f:	adc    dl,ch
  405761:	in     eax,0xf2
  405763:	add    BYTE PTR [edx+0x2b],ah
  405766:	jmp    0x40570b
  405768:	sahf   
  405769:	pop    ss
  40576a:	inc    ebp
  40576b:	push   esp
  40576c:	mov    esp,ecx
  40576e:	jg     0x405731
  405770:	inc    esi
  405771:	retf   0xec25
  405774:	fimul  WORD PTR ds:0x75b0e497
  40577a:	shr    DWORD PTR [edx],0x45
  40577d:	sub    BYTE PTR [eax+eiz*4-0x32],0x90
  405782:	adc    eax,edi
  405784:	out    0xb9,al
  405786:	(bad)  
  405787:	dec    ebp
  405788:	push   esi
  405789:	xchg   edi,eax
  40578a:	in     eax,dx
  40578b:	enter  0x4d0f,0x57
  40578f:	stos   DWORD PTR es:[edi],eax
  405790:	es jno 0x4057da
  405793:	sub    bl,BYTE PTR [edx]
  405795:	lds    edx,FWORD PTR [ecx+0x62]
  405798:	push   ecx
  405799:	(bad)  
  40579a:	cmp    dh,ah
  40579c:	xor    eax,0x852cc647
  4057a1:	dec    esp
  4057a2:	imul   esp,DWORD PTR [esi-0x53],0x114f49e6
  4057a9:	adc    dl,ch
  4057ab:	aam    0xf6
  4057ad:	push   0xffffff92
  4057af:	fwait
  4057b0:	dec    edi
  4057b1:	jbe    0x40579c
  4057b3:	mov    ch,0xd3
  4057b5:	or     al,0x77
  4057b7:	inc    ebx
  4057b8:	ss add edx,ebp
  4057bb:	push   es
  4057bc:	je     0x40582e
  4057be:	(bad)  
  4057bf:	out    dx,al
  4057c0:	loopne 0x4057f6
  4057c2:	jge    0x4057b8
  4057c4:	mov    eax,0x32fa7310
  4057c9:	aaa    
  4057ca:	sar    BYTE PTR cs:[ecx+0x75818961],1
  4057d1:	mov    DWORD PTR ss:[ecx],ebx
  4057d4:	test   DWORD PTR [edi+0x163171f1],eax
  4057da:	ins    BYTE PTR es:[edi],dx
  4057db:	fs mov ecx,0xb1a4c2bf
  4057e1:	fnstcw WORD PTR [edi+edi*4-0x2c2b5d3c]
  4057e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e9:	and    BYTE PTR [edi+0x3daf66bf],dh
  4057ef:	repnz pushf 
  4057f1:	pop    ebp
  4057f2:	inc    edi
  4057f3:	ins    DWORD PTR es:[edi],dx
  4057f4:	lds    edx,FWORD PTR [ebp-0x1]
  4057f7:	ds mov cl,0x7c
  4057fa:	clc    
  4057fb:	cmp    edx,DWORD PTR [esi-0x73]
  4057fe:	cmc    
  4057ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405800:	adc    BYTE PTR [ecx-0x1b],0xc5
  405804:	(bad)  
  405805:	inc    ebx
  405806:	popf   
  405807:	push   ecx
  405808:	adc    DWORD PTR [edx+0x79],ebp
  40580b:	fwait
  40580c:	inc    esp
  40580d:	repz inc ecx
  40580f:	sar    al,0x11
  405812:	push   cs
  405813:	fdivr  QWORD PTR [edx]
  405815:	inc    ebp
  405816:	dec    ebx
  405817:	call   0x95ec:0x39c9943d
  40581e:	sti    
  40581f:	and    BYTE PTR [ecx-0x50dfe157],0x8b
  405826:	xor    BYTE PTR [ebx+0x7acf55e7],dl
  40582c:	enter  0xc6e6,0x91
  405830:	dec    ebp
  405831:	cmp    eax,0x63ae44eb
  405836:	xchg   BYTE PTR [ecx-0x781f3c3c],ah
  40583c:	xchg   ebp,eax
  40583d:	pop    es
  40583e:	aam    0x3d
  405840:	and    eax,0x2bcc48e0
  405845:	sub    cl,bl
  405847:	imul   edi,DWORD PTR [ebp+0x51],0x8f4524ec
  40584e:	enter  0x50e6,0x65
  405852:	scas   eax,DWORD PTR es:[edi]
  405853:	sbb    al,0xe7
  405855:	inc    ecx
  405856:	pop    es
  405857:	lahf   
  405858:	mov    edi,0x3bc4ce0c
  40585d:	push   ecx
  40585e:	cmp    al,0xc5
  405860:	idiv   DWORD PTR [ebx-0x68b5b921]
  405866:	icebp  
  405867:	lea    edx,[ecx]
  405869:	addr16 push 0xedfc5322
  40586f:	sub    al,0x90
  405871:	scas   eax,DWORD PTR es:[edi]
  405872:	sub    ebx,DWORD PTR [eax]
  405874:	lahf   
  405875:	add    al,0xe8
  405877:	jle    0x405851
  405879:	clc    
  40587a:	fdivr  DWORD PTR [ebp+0x10]
  40587d:	out    0x16,al
  40587f:	test   al,0x21
  405881:	int3   
  405882:	inc    DWORD PTR [edx]
  405884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405885:	add    eax,0xf1a0d74c
  40588a:	cmp    DWORD PTR [edi],edx
  40588c:	out    dx,eax
  40588d:	jno    0x4058a2
  40588f:	mov    edx,0xd77ebb8
  405894:	mov    bl,0x91
  405896:	out    dx,al
  405897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405898:	ds das 
  40589a:	pop    esi
  40589b:	xor    ebx,ebx
  40589d:	gs jmp 0xc74f:0x2b377077
  4058a5:	xor    edx,esi
  4058a7:	xchg   edx,eax
  4058a8:	xlat   BYTE PTR ds:[ebx]
  4058a9:	adc    DWORD PTR ds:0x473b41b2,0xffffffec
  4058b0:	not    DWORD PTR [ebp+0x26]
  4058b3:	sbb    al,0xa8
  4058b5:	in     eax,dx
  4058b6:	or     ebx,DWORD PTR [di]
  4058b9:	aaa    
  4058ba:	es mov ah,0x7
  4058bd:	jns    0x40584e
  4058bf:	cli    
  4058c0:	add    esp,DWORD PTR [ebp+ecx*4+0x67042577]
  4058c7:	cwde   
  4058c8:	add    al,0x6b
  4058ca:	or     ch,0x4
  4058cd:	dec    eax
  4058ce:	mov    bh,0x15
  4058d0:	mov    BYTE PTR [ecx-0x15],dh
  4058d3:	or     al,0xcd
  4058d5:	in     al,0xae
  4058d7:	cmp    DWORD PTR [ebp+0x4ed2a128],esp
  4058dd:	mov    dl,0xe5
  4058df:	rcr    DWORD PTR [esi-0x4c7bb302],0xcf
  4058e6:	in     eax,0xa3
  4058e8:	(bad)  
  4058e9:	fild   DWORD PTR ds:0x8026d7e
  4058ef:	popf   
  4058f0:	fs jne 0x4058f1
  4058f3:	lea    edi,[esi+edx*4-0x17]
  4058f7:	mov    DWORD PTR [ebp-0x5fd2844c],eax
  4058fd:	mov    DWORD PTR fs:[edx+0x13],edi
  405901:	adc    al,0x6b
  405903:	ret    
  405904:	cmc    
  405905:	aam    0xaf
  405907:	ret    0x4719
  40590a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40590b:	test   eax,0x9446f434
  405910:	mov    al,BYTE PTR [ebp-0x4a59f1c1]
  405916:	sub    BYTE PTR [edi],ch
  405918:	loop   0x40596b
  40591a:	jmp    0xfd0e:0x2f54de06
  405921:	push   0xbb7c77fa
  405926:	push   ss
  405927:	mov    ebp,0x8779080d
  40592c:	inc    esi
  40592d:	jl     0x4058f0
  40592f:	icebp  
  405930:	(bad)  
  405932:	ins    BYTE PTR es:[edi],dx
  405933:	xor    al,0x5
  405935:	repz and BYTE PTR [ecx+0x22],bl
  405939:	mov    ecx,0x5a8409b2
  40593e:	push   edx
  40593f:	std    
  405940:	lahf   
  405941:	cmp    bh,dl
  405943:	nop
  405944:	btr    DWORD PTR [ebp-0x7a],edx
  405948:	mov    eax,ds:0x958afaa6
  40594d:	inc    edx
  40594e:	adc    bl,dl
  405950:	xchg   ebp,eax
  405951:	and    BYTE PTR [edx-0xc],cl
  405954:	daa    
  405955:	sahf   
  405956:	push   0xe7ad37a5
  40595b:	cld    
  40595c:	push   edx
  40595d:	scas   eax,DWORD PTR es:[edi]
  40595e:	sbb    eax,0xbf01ce4d
  405963:	mov    ebp,DWORD PTR [edx]
  405965:	out    0x40,eax
  405967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405968:	stos   DWORD PTR es:[edi],eax
  405969:	test   BYTE PTR [edi],0x0
  40596c:	or     DWORD PTR [esi-0x15f616b2],esp
  405972:	sbb    eax,0xe7eaee8
  405977:	jmp    0x405965
  405979:	sub    eax,0x4b800873
  40597e:	bound  esp,QWORD PTR [edx]
  405980:	push   edx
  405981:	test   BYTE PTR [esi],al
  405983:	das    
  405984:	mov    bh,0x7f
  405986:	inc    edx
  405987:	xor    BYTE PTR [esi+0x4f542575],0x66
  40598e:	cs and al,0x90
  405991:	cmp    BYTE PTR [ebx+edi*2-0x4cf1b050],ch
  405998:	in     eax,dx
  405999:	add    eax,0xde9eb43b
  40599e:	mov    dl,0xb1
  4059a0:	mov    ecx,0xb3091380
  4059a5:	aam    0xef
  4059a7:	cli    
  4059a8:	iret   
  4059a9:	hlt    
  4059aa:	cmp    ebx,DWORD PTR [edx]
  4059ac:	rcl    BYTE PTR [edi+edx*1-0x4d],0x54
  4059b1:	dec    esp
  4059b2:	nop
  4059b3:	rcl    ch,cl
  4059b5:	adc    eax,0xb5964f0a
  4059ba:	dec    edi
  4059bb:	mov    bh,0xb9
  4059bd:	jle    0x40598a
  4059bf:	mov    ebx,es
  4059c1:	mov    ecx,ds
  4059c3:	cmp    esp,DWORD PTR [ebx]
  4059c5:	jno    0x405968
  4059c7:	faddp  st(5),st
  4059c9:	sub    ah,BYTE PTR [ebx]
  4059cb:	cs popa 
  4059cd:	sbb    DWORD PTR [esi-0x7bb0af33],ecx
  4059d3:	scas   eax,DWORD PTR es:[edi]
  4059d4:	push   ds
  4059d5:	push   ebx
  4059d6:	in     eax,0xc5
  4059d8:	pop    ds
  4059d9:	cli    
  4059da:	pushf  
  4059db:	mov    bl,ch
  4059dd:	stos   DWORD PTR es:[edi],eax
  4059de:	dec    edx
  4059df:	aam    0xa8
  4059e1:	jb     0x4059f9
  4059e3:	mov    ds:0xfbfdf8e,eax
  4059e8:	std    
  4059e9:	(bad)  
  4059eb:	and    al,dl
  4059ed:	push   ecx
  4059ee:	stos   DWORD PTR es:[edi],eax
  4059ef:	and    DWORD PTR [edi+ebx*4],eax
  4059f2:	sub    eax,0xa7ee563e
  4059f7:	aad    0x99
  4059f9:	sahf   
  4059fa:	pop    ebx
  4059fb:	ins    DWORD PTR es:[edi],dx
  4059fc:	or     eax,0xa291468b
  405a01:	cmp    eax,0x7f90854
  405a06:	pop    es
  405a07:	iret   
  405a08:	xor    esp,DWORD PTR [ecx]
  405a0a:	inc    ebx
  405a0b:	push   ss
  405a0c:	jecxz  0x405a2f
  405a0e:	leave  
  405a0f:	lahf   
  405a10:	inc    ebp
  405a11:	pop    es
  405a12:	mov    edx,0xd2b6c202
  405a17:	ins    DWORD PTR es:[edi],dx
  405a18:	xor    BYTE PTR [esi-0x4a],dl
  405a1b:	lds    eax,FWORD PTR [ebx+ecx*4]
  405a1e:	stc    
  405a1f:	xchg   edi,eax
  405a20:	je     0x405a0f
  405a22:	mov    cs,WORD PTR [eax]
  405a24:	push   esp
  405a25:	dec    ebp
  405a26:	adc    cl,BYTE PTR [edx-0x2f693368]
  405a2c:	or     ebx,esp
  405a2e:	rcr    BYTE PTR [edx],0xd9
  405a31:	mov    esi,0xf749a4ac
  405a36:	mov    esi,DWORD PTR [esi-0x65a1673b]
  405a3c:	and    al,0x38
  405a3e:	stc    
  405a3f:	inc    eax
  405a40:	popf   
  405a41:	loope  0x4059ca
  405a43:	pop    edx
  405a44:	test   dh,dh
  405a46:	arpl   WORD PTR [edx+0x50470617],cx
  405a4c:	test   BYTE PTR [esi],al
  405a4e:	cmp    DWORD PTR [eax+0x52],ebp
  405a51:	cmp    al,0xd
  405a53:	gs fwait
  405a55:	out    dx,al
  405a56:	rcl    BYTE PTR [ecx],cl
  405a58:	(bad)  
  405a59:	and    eax,0x4ec83639
  405a5e:	ret    
  405a5f:	cmp    edx,DWORD PTR [esi-0x3a691d6]
  405a65:	iret   
  405a66:	xchg   ebx,eax
  405a67:	dec    ecx
  405a68:	or     al,0x82
  405a6a:	inc    ecx
  405a6b:	push   edi
  405a6c:	ret    
  405a6d:	jmp    0x23b1:0x9d8e2d42
  405a74:	ret    0xcf33
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	shr    DWORD PTR [eax+0x25bd924c],1
  405ad6:	mov    esi,0xbec4bdbe
  405adb:	mov    esi,0xdaef4fc7
  405ae0:	icebp  
  405ae1:	dec    ebx
  405ae2:	ds hlt 
  405ae4:	xchg   esi,eax
  405ae5:	fwait
  405ae6:	arpl   ax,bx
  405ae8:	loopne 0x405aea
  405aea:	jnp    0x405b37
  405aec:	(bad)
  405aef:	push   esi
  405af0:	mov    ?,WORD PTR [edi+0x247fa450]
  405af6:	fucomip st,st(1)
  405af8:	aam    0x47
  405afa:	adc    ch,BYTE PTR [edx-0x3a]
  405afd:	dec    eax
  405afe:	xchg   esp,eax
  405aff:	mov    ds:0xbd6492a9,eax
  405b04:	inc    ebp
  405b05:	xor    dh,BYTE PTR [ebx]
  405b07:	retf   0xe7b3
  405b0a:	sub    DWORD PTR [ebp+0x72],ebx
  405b0d:	cmp    esp,DWORD PTR [edi]
  405b0f:	adc    dh,BYTE PTR [edx-0x64]
  405b12:	pop    eax
  405b13:	sub    al,0xbf
  405b15:	ficom  WORD PTR [ecx]
  405b17:	mov    ebx,0x4d0cc38c
  405b1c:	cwde   
  405b1d:	fwait
  405b1e:	loopne 0x405aa2
  405b20:	fs dec esp
  405b22:	xchg   DWORD PTR [edi+0x4e],esi
  405b25:	inc    eax
  405b26:	push   ebp
  405b27:	cmp    eax,0x6765ec23
  405b2c:	mov    ah,0xf6
  405b2e:	xchg   esi,eax
  405b2f:	scas   al,BYTE PTR es:[edi]
  405b30:	xchg   edi,eax
  405b31:	lahf   
  405b32:	fimul  DWORD PTR [edi+0x63c760d8]
  405b38:	cmp    ebx,0xafb4b547
  405b3e:	aam    0x3e
  405b40:	pop    esi
  405b41:	dec    ebp
  405b42:	xlat   BYTE PTR ds:[ebx]
  405b43:	pushf  
  405b44:	push   edi
  405b45:	jl     0x405b65
  405b47:	dec    eax
  405b48:	(bad)  
  405b4a:	das    
  405b4b:	xor    al,0xde
  405b4d:	xor    ecx,eax
  405b4f:	cmc    
  405b50:	sub    edi,ebx
  405b52:	ret    0xf3e6
  405b55:	data16 xor BYTE PTR [ebx],ch
  405b58:	jb     0x405b4c
  405b5a:	jle    0x405b0c
  405b5c:	std    
  405b5d:	jae    0x405ae8
  405b5f:	pop    edx
  405b60:	jns    0x405b4c
  405b62:	outs   dx,DWORD PTR ds:[esi]
  405b63:	(bad)  
  405b64:	push   ebp
  405b65:	adc    dh,BYTE PTR ds:0x7bb8edf
  405b6b:	inc    eax
  405b6c:	cld    
  405b6d:	pop    eax
  405b6e:	fs dec edi
  405b70:	push   0x4df6ae56
  405b75:	xchg   ecx,eax
  405b76:	cmp    BYTE PTR [eax],al
  405b78:	call   0x535b:0x9f9c6033
  405b7f:	mov    eax,es:0x7733be04
  405b85:	adc    al,BYTE PTR [ebx+edi*1]
  405b88:	sbb    eax,0x2da62455
  405b8d:	aam    0x29
  405b8f:	pop    ds
  405b90:	push   0xffffffb0
  405b92:	jg     0x405bc4
  405b94:	sti    
  405b95:	pop    eax
  405b96:	fstp   QWORD PTR [eax+0x14c5dd5d]
  405b9c:	loop   0x405b45
  405b9e:	repz mov ds:0x7e8c2776,al
  405ba4:	les    esp,FWORD PTR [edi+0x6a]
  405ba7:	ins    DWORD PTR es:[edi],dx
  405ba8:	sbb    eax,0x8b4689ba
  405bad:	cld    
  405bae:	jno    0x405be0
  405bb0:	jg     0x405b69
  405bb2:	bound  ebx,QWORD PTR [esi]
  405bb4:	test   eax,0x6e2e5d31
  405bb9:	xor    bh,BYTE PTR [eax+ebp*2-0x4c]
  405bbd:	and    bl,BYTE PTR [ebx+edx*8+0x2b]
  405bc1:	add    al,BYTE PTR [esi+ebp*4]
  405bc4:	sub    eax,0xb78b5eb6
  405bc9:	leave  
  405bca:	fcomp  st(1)
  405bcc:	mov    ebp,esp
  405bce:	or     BYTE PTR ds:0x5f5b1579,ch
  405bd4:	mov    ch,0xa
  405bd6:	push   esi
  405bd7:	sub    DWORD PTR [esi],ebx
  405bd9:	sub    bh,BYTE PTR [edi-0x52f6cdfb]
  405bdf:	sub    ch,0x84
  405be2:	push   ebp
  405be3:	sub    eax,0x80973ce
  405be8:	dec    edi
  405be9:	icebp  
  405bea:	add    eax,0x7c08e57e
  405bef:	jp     0x405b76
  405bf1:	sub    DWORD PTR [ecx],ecx
  405bf3:	sbb    DWORD PTR [ebp+0x69b6a9ad],0xffffff81
  405bfa:	push   ecx
  405bfb:	mov    ecx,0xaafbcf3
  405c00:	lods   eax,DWORD PTR ds:[esi]
  405c02:	dec    ebx
  405c03:	imul   esp,esp,0x28
  405c06:	into   
  405c07:	or     bl,bh
  405c09:	das    
  405c0a:	pop    ss
  405c0b:	xchg   esp,eax
  405c0c:	int3   
  405c0d:	out    0xbc,al
  405c0f:	mov    edx,0x95307fb9
  405c14:	sahf   
  405c15:	jl     0x405c6a
  405c17:	sbb    eax,0x9fa1d56c
  405c1c:	inc    esi
  405c1d:	pop    esi
  405c1e:	aam    0xf9
  405c20:	mov    al,0xb8
  405c22:	addr16 lahf 
  405c24:	mov    bh,0x4d
  405c26:	jns    0x405bac
  405c28:	sub    edi,DWORD PTR [edx+0x25]
  405c2b:	retf   0xd19a
  405c2e:	jb     0x405c74
  405c30:	mov    ds:0x1d3957f,al
  405c35:	jnp    0x405c72
  405c37:	ret    0xe100
  405c3a:	push   eax
  405c3b:	js     0x405bc5
  405c3d:	outs   dx,DWORD PTR ds:[esi]
  405c3e:	(bad)  
  405c3f:	ins    BYTE PTR es:[edi],dx
  405c40:	or     bh,BYTE PTR [edx]
  405c42:	aad    0x9
  405c44:	sbb    al,0xd5
  405c46:	aaa    
  405c47:	stos   DWORD PTR es:[edi],eax
  405c48:	pop    ds
  405c49:	push   ecx
  405c4a:	imul   ecx,DWORD PTR [ebp+0x51dc8645],0x3440cfb6
  405c54:	(bad)  
  405c55:	arpl   WORD PTR [edx],bx
  405c57:	mov    ah,0x53
  405c59:	gs jle 0x405bfb
  405c5c:	xchg   ebp,ebp
  405c5e:	out    dx,al
  405c5f:	xor    al,0x90
  405c61:	mov    ch,0xed
  405c63:	jo     0x405cde
  405c65:	push   cs
  405c66:	bound  edi,QWORD PTR [edx+esi*8+0x49]
  405c6a:	lahf   
  405c6b:	arpl   WORD PTR ds:0xe62ff372,bx
  405c71:	mov    ecx,0x6035b77b
  405c76:	mov    bl,0x30
  405c78:	fs arpl cx,si
  405c7b:	in     al,0x87
  405c7d:	sub    ebx,DWORD PTR [ecx-0x4217e8c8]
  405c83:	mov    cs,eax
  405c85:	cmp    BYTE PTR [esi],cl
  405c87:	leave  
  405c88:	(bad)  
  405c89:	es test al,0x81
  405c8c:	push   ebp
  405c8d:	inc    esp
  405c8e:	jbe    0x405c71
  405c90:	imul   edi,ecx,0xddbe0d30
  405c96:	fs cli 
  405c98:	outs   dx,DWORD PTR ds:[esi]
  405c99:	rcl    DWORD PTR [edi],cl
  405c9b:	xchg   ebx,eax
  405c9c:	(bad)  
  405c9d:	xlat   BYTE PTR ds:[ebx]
  405c9e:	inc    ebx
  405c9f:	cli    
  405ca0:	in     eax,dx
  405ca1:	scas   al,BYTE PTR es:[edi]
  405ca2:	inc    eax
  405ca3:	cmp    eax,0x16be7c0c
  405ca8:	es test eax,0x34f1d4cc
  405cae:	pop    ecx
  405caf:	inc    eax
  405cb0:	cmp    BYTE PTR [edx+ebp*1],0xa
  405cb4:	stos   DWORD PTR es:[edi],eax
  405cb5:	std    
  405cb6:	mov    edx,0xd93d7cdf
  405cbb:	repnz pop ecx
  405cbd:	push   0x51
  405cbf:	xchg   edx,eax
  405cc0:	sbb    DWORD PTR [ebx],ecx
  405cc2:	mov    eax,ds:0x7e40d8dc
  405cc7:	push   esp
  405cc8:	shl    DWORD PTR [ecx],1
  405cca:	stc    
  405ccb:	push   edx
  405ccc:	pop    bx
  405cce:	pop    ds
  405ccf:	push   ebx
  405cd0:	ins    DWORD PTR es:[edi],dx
  405cd1:	in     eax,dx
  405cd2:	add    eax,0xf68be5ff
  405cd7:	call   0x4369:0x88110bdc
  405cde:	cli    
  405cdf:	in     al,dx
  405ce0:	sbb    edi,DWORD PTR [ebx*2-0x570dd783]
  405ce7:	gs data16 js 0x405ca3
  405ceb:	cmp    BYTE PTR [esi+edi*1-0x29],bl
  405cef:	fidiv  WORD PTR [eax]
  405cf1:	je     0x405d26
  405cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf4:	ret    0x5526
  405cf7:	xor    eax,0xd5aefadf
  405cfc:	add    DWORD PTR [ebx],edx
  405cfe:	sbb    bh,BYTE PTR [edi]
  405d00:	mov    al,0xe4
  405d02:	or     eax,0xfd61997f
  405d07:	sub    BYTE PTR [edi],ch
  405d09:	jae    0x405d3a
  405d0b:	jg     0x405d30
  405d0d:	adc    al,0x83
  405d0f:	call   0xb718935
  405d14:	pop    esi
  405d15:	jae    0x405d0d
  405d17:	fcom   st(3)
  405d19:	into   
  405d1a:	rcl    BYTE PTR [ecx+ecx*8-0x4d],1
  405d1e:	sbb    eax,0xc393cf83
  405d23:	fsubp  st(5),st
  405d25:	int    0xbd
  405d27:	cmp    al,0x61
  405d29:	test   eax,0xc577ff83
  405d2e:	push   esi
  405d2f:	cmp    al,0x1b
  405d31:	test   DWORD PTR [edx],eax
  405d33:	mov    bl,0x60
  405d35:	jo     0x405ce6
  405d37:	adc    ebp,DWORD PTR [esi+0x75dc5d3]
  405d3d:	jae    0x405db6
  405d3f:	mov    ch,0x27
  405d41:	jbe    0x405d4f
  405d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d44:	mov    ds:0xb164760d,al
  405d49:	retf   
  405d4a:	sbb    ah,BYTE PTR [edi+edi*4-0x4e]
  405d4e:	jno    0x405d61
  405d50:	push   cs
  405d51:	mov    al,0xa
  405d53:	mov    eax,ds:0xe7ac493b
  405d58:	mov    ebx,0x8328843d
  405d5d:	mov    eax,DWORD PTR ds:0x9cac5231
  405d63:	out    dx,eax
  405d64:	or     eax,0x7ba0cc7a
  405d69:	push   ds
  405d6a:	in     al,dx
  405d6b:	pop    ebx
  405d6c:	xlat   BYTE PTR ds:[ebx]
  405d6d:	mov    ch,0x89
  405d6f:	shr    BYTE PTR [ebx-0x5b067ebd],cl
  405d75:	nop
  405d76:	hlt    
  405d77:	add    eax,0xf6599a13
  405d7c:	xor    bl,BYTE PTR [edi-0x5e]
  405d7f:	ss sti 
  405d81:	inc    ebp
  405d82:	dec    ecx
  405d83:	fsub   QWORD PTR [esi+0x30dfd41b]
  405d89:	lods   eax,DWORD PTR ds:[esi]
  405d8a:	retf   
  405d8b:	fdivr  st,st(6)
  405d8d:	lahf   
  405d8e:	inc    eax
  405d8f:	mov    cl,0x6b
  405d91:	push   si
  405d93:	pop    edx
  405d94:	inc    eax
  405d95:	push   esp
  405d96:	aad    0x84
  405d98:	(bad)  
  405d99:	push   0x86da5a55
  405d9e:	add    esp,DWORD PTR [edi-0x7bf80a82]
  405da4:	stos   DWORD PTR es:[edi],eax
  405da5:	and    eax,DWORD PTR [ecx-0x2d]
  405da8:	jg     0x405da4
  405daa:	ficomp WORD PTR [esi+0x1c78f6da]
  405db0:	fisub  WORD PTR [esi+0x45]
  405db3:	or     ebp,ebx
  405db5:	loopne 0x405d3c
  405db7:	aam    0xd9
  405db9:	mov    al,0x47
  405dbb:	mov    DWORD PTR [edx],esp
  405dbd:	sbb    eax,0xdb97a913
  405dc2:	mov    cl,0xdb
  405dc4:	sbb    ecx,DWORD PTR [ebx+ebx*4]
  405dc7:	mov    al,0x8b
  405dc9:	adc    al,BYTE PTR ds:0x108c3ce3
  405dcf:	jnp    0x405d74
  405dd1:	sar    dh,1
  405dd3:	xor    dl,BYTE PTR [edx+ebx*2]
  405dd6:	repnz pop ds
  405dd8:	out    dx,eax
  405dd9:	push   0xffffffaf
  405ddb:	inc    ebp
  405ddc:	adc    al,dl
  405dde:	mov    esi,0x4abe086a
  405de3:	cs mov bl,0xb5
  405de6:	sbb    al,0x2a
  405de8:	pop    esi
  405de9:	pusha  
  405dea:	and    ebx,ecx
  405dec:	mov    al,BYTE PTR [edi+0x8]
  405def:	fdivr  st,st(2)
  405df1:	mov    al,ds:0xa45037b6
  405df6:	sbb    dl,ch
  405df8:	add    BYTE PTR [edx+0x7720acb3],al
  405dfe:	sysexit 
  405e00:	cwde   
  405e01:	sbb    al,0x39
  405e03:	push   ebx
  405e04:	dec    edx
  405e05:	repnz fbstp TBYTE PTR [ebx+0x1ae8f98f]
  405e0c:	adc    eax,0x4821fbe5
  405e11:	int    0x78
  405e13:	fist   WORD PTR [ecx-0xc3168ce]
  405e19:	pusha  
  405e1a:	cmp    al,0x9d
  405e1c:	push   ebp
  405e1d:	add    ecx,esp
  405e1f:	retf   
  405e20:	ud1    ecx,DWORD PTR es:[ebx-0x35d3a570]
  405e28:	aaa    
  405e29:	inc    ebx
  405e2a:	jge    0x405dd4
  405e2c:	in     al,0x56
  405e2e:	mov    eax,ds:0x90bb453b
  405e33:	cmp    DWORD PTR [ebp+0x1],ebp
  405e36:	and    ah,BYTE PTR [ecx]
  405e38:	adc    BYTE PTR [esi],ah
  405e3a:	mov    al,ds:0xacceae31
  405e3f:	push   ecx
  405e40:	popf   
  405e41:	(bad)  
  405e42:	xchg   edi,eax
  405e43:	fadd   DWORD PTR [edi-0x32]
  405e46:	daa    
  405e47:	sbb    eax,0xcc8baa78
  405e4c:	sti    
  405e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e4e:	rcl    BYTE PTR [eax+0x798c0603],0xfb
  405e55:	dec    edi
  405e56:	jno    0x405eaf
  405e58:	or     BYTE PTR [ebx],cl
  405e5a:	hlt    
  405e5b:	pop    esi
  405e5c:	fwait
  405e5d:	rol    BYTE PTR [ecx-0x55],cl
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	frstor ds:[esi+esi*8+0x2dbe90df]
  405e8d:	mov    esi,0xbec4bdbe
  405e92:	mov    esi,0xc43d967f
  405e97:	pop    esi
  405e98:	mov    ebp,0x1f472a49
  405e9d:	and    DWORD PTR [edi+0x3],esp
  405ea0:	mov    ah,0xeb
  405ea2:	loop   0x405f0c
  405ea4:	fadd   QWORD PTR [ebp-0xde05a1b]
  405eaa:	inc    ebp
  405eab:	jb     0x405e71
  405ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eae:	sub    eax,0xc6abb130
  405eb3:	fld    DWORD PTR [esi]
  405eb5:	xchg   esp,eax
  405eb6:	ins    DWORD PTR es:[edi],dx
  405eb7:	lahf   
  405eb8:	jmp    0x405efe
  405eba:	push   ebp
  405ebb:	jno    0x405e89
  405ebd:	push   cs
  405ebe:	push   esp
  405ebf:	add    ch,BYTE PTR [edi-0x3fbbe486]
  405ec5:	jmp    0xc0aa:0xdbfdadea
  405ecc:	dec    edi
  405ecd:	jmp    0x98be:0x10a25a5f
  405ed4:	cmp    BYTE PTR [esp+edi*4],ch
  405ed7:	dec    ebx
  405ed8:	pop    ss
  405ed9:	dec    esp
  405eda:	mov    esi,0x760b28d5
  405edf:	jmp    0xaff54c8
  405ee4:	gs ja  0x405f5f
  405ee7:	jge    0x405f4f
  405ee9:	push   ds
  405eea:	sbb    bl,al
  405eec:	cmp    BYTE PTR [ecx-0x3084d549],dl
  405ef2:	cli    
  405ef3:	sbb    edx,eax
  405ef5:	lock jmp 0x9ab644f9
  405efb:	sti    
  405efc:	sub    esi,DWORD PTR [esi+ebp*1-0x17]
  405f00:	(bad)  
  405f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f02:	sar    al,cl
  405f04:	and    bl,BYTE PTR [esi+eiz*4]
  405f07:	call   0x57335293
  405f0c:	aaa    
  405f0d:	(bad)  [ebx]
  405f0f:	mov    eax,DWORD PTR [ebx]
  405f11:	or     DWORD PTR [edi+0x61],edi
  405f14:	int3   
  405f15:	jp     0x405efb
  405f17:	mov    ch,0x82
  405f19:	cli    
  405f1a:	ins    DWORD PTR es:[edi],dx
  405f1b:	and    eax,0x7165d5e3
  405f20:	ja     0x405eea
  405f22:	nop
  405f23:	mov    eax,ds:0xca90901f
  405f28:	adc    bh,BYTE PTR [edx+0x16]
  405f2b:	cmp    eax,0xb1a45eed
  405f30:	and    dh,BYTE PTR [edx+0x29a4392]
  405f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f37:	dec    esi
  405f38:	clc    
  405f39:	(bad)  
  405f3a:	mov    ebx,0x9beb0d13
  405f3f:	pop    ecx
  405f40:	jmp    0x83c4:0xb98e7dcc
  405f47:	xchg   DWORD PTR [esi],esi
  405f49:	inc    edx
  405f4a:	jmp    0x4f52:0xa3f3cac
  405f51:	xchg   esp,eax
  405f52:	inc    sp
  405f54:	pop    esp
  405f55:	ss (bad) 
  405f57:	xchg   edx,eax
  405f58:	mov    ebp,0x1272d87f
  405f5d:	ror    BYTE PTR [ecx+0x43],cl
  405f60:	rcl    BYTE PTR [edx],cl
  405f62:	scas   al,BYTE PTR es:[edi]
  405f63:	cmc    
  405f64:	push   cs
  405f65:	mov    dl,BYTE PTR [ebx]
  405f67:	xchg   esi,eax
  405f68:	repnz stc 
  405f6a:	inc    eax
  405f6b:	fiadd  WORD PTR [ecx-0x4b3948b0]
  405f71:	xchg   esp,eax
  405f72:	iret   
  405f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f74:	sbb    al,0x19
  405f76:	ins    BYTE PTR es:[edi],dx
  405f77:	sahf   
  405f78:	leave  
  405f79:	(bad)  
  405f7a:	adc    BYTE PTR es:[ebp-0x25b4075f],bh
  405f81:	(bad)  
  405f82:	imul   ebp,DWORD PTR [eax-0x4eb3f0a],0xae3aeb36
  405f8c:	in     al,dx
  405f8d:	loop   0x40600a
  405f8f:	lea    eax,[edx]
  405f91:	mov    ah,0xd3
  405f93:	outs   dx,DWORD PTR ds:[esi]
  405f94:	pop    ss
  405f95:	push   ds
  405f96:	int    0xbc
  405f98:	add    al,0x33
  405f9a:	push   edx
  405f9b:	pop    eax
  405f9c:	jmp    0x61ecd3c4
  405fa1:	sub    eax,0x5b01132a
  405fa6:	pop    ss
  405fa7:	sbb    al,0x92
  405fa9:	frndint 
  405fab:	xchg   BYTE PTR [ecx+edx*4-0x59c5c47b],bh
  405fb2:	stos   DWORD PTR es:[edi],eax
  405fb3:	adc    eax,0x87bed06d
  405fb9:	mov    dl,0xad
  405fbb:	sub    ebp,ebx
  405fbd:	pop    ds
  405fbe:	ins    BYTE PTR es:[edi],dx
  405fbf:	nop
  405fc0:	(bad)  
  405fc1:	pop    ebp
  405fc2:	out    dx,eax
  405fc3:	out    dx,al
  405fc4:	pop    es
  405fc5:	xchg   edi,eax
  405fc6:	mov    gs,WORD PTR [edi-0x236f407b]
  405fcc:	stc    
  405fcd:	cmp    DWORD PTR [ebp-0x77],ebx
  405fd0:	sub    ecx,DWORD PTR [edi+0x1925647]
  405fd6:	sub    BYTE PTR [edi-0x24],0xac
  405fda:	pop    ebp
  405fdb:	idiv   DWORD PTR [ebx+0x41]
  405fde:	ja     0x405fbb
  405fe0:	push   edx
  405fe1:	imul   esi,DWORD PTR [edx-0x2187a60a],0xffffff97
  405fe8:	jge    0x40603b
  405fea:	mov    ebx,0xefc955da
  405fef:	mov    ecx,0x998dba62
  405ff4:	inc    ebx
  405ff5:	mov    eax,ds:0xb48c418e
  405ffa:	or     bl,dl
  405ffc:	mov    eax,0xa31e0a2c
  406001:	cmp    BYTE PTR [ecx+0x2],dh
  406004:	ret    
  406005:	out    dx,al
  406006:	sub    eax,0x460bea1c
  40600b:	dec    edi
  40600c:	dec    eax
  40600d:	arpl   WORD PTR [esp+ebx*1-0x16c29fa4],bp
  406014:	fidiv  DWORD PTR [eax-0xcccbd35]
  40601a:	inc    esp
  40601b:	out    dx,eax
  40601c:	pop    es
  40601d:	pop    edi
  40601e:	test   BYTE PTR [edx+0x5],al
  406021:	pop    ds
  406022:	das    
  406023:	mov    DWORD PTR [esi+0x5145b1e3],edx
  406029:	lds    edi,FWORD PTR [ebx+edx*8+0x11]
  40602d:	enter  0xa63e,0x3a
  406031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406032:	pop    ss
  406033:	mov    bl,0x23
  406035:	add    edx,DWORD PTR [edi+0x8]
  406038:	pop    ss
  406039:	jp     0x40609b
  40603b:	dec    esp
  40603c:	jmp    0x793bc06c
  406041:	jns    0x406060
  406043:	loope  0x406033
  406045:	aas    
  406046:	std    
  406047:	out    0x88,al
  406049:	stos   DWORD PTR es:[edi],eax
  40604a:	fist   DWORD PTR [esi]
  40604c:	ins    DWORD PTR es:[edi],dx
  40604d:	xor    BYTE PTR [ebp+eax*8-0x55f1a17],bh
  406054:	jmp    0xf08a:0xda690e74
  40605b:	leave  
  40605c:	push   0x1a
  40605e:	jno    0x406023
  406060:	dec    ebp
  406061:	mov    edi,0x8e302d40
  406066:	ins    BYTE PTR es:[edi],dx
  406067:	dec    eax
  406068:	fisttp DWORD PTR [ebp+0x66]
  40606b:	std    
  40606c:	pop    esp
  40606d:	ins    DWORD PTR es:[edi],dx
  40606e:	jle    0x40606d
  406070:	inc    edi
  406071:	jle    0x40602b
  406073:	in     eax,dx
  406074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406075:	push   es
  406076:	(bad)  
  406077:	setle  BYTE PTR [eax-0x3a]
  40607b:	out    dx,al
  40607c:	enter  0x1c39,0x61
  406080:	int3   
  406081:	int3   
  406082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406083:	pop    esi
  406084:	ret    
  406085:	sbb    eax,0x4624fe0d
  40608a:	pop    ss
  40608b:	adc    al,0xb2
  40608d:	mov    al,0x5c
  40608f:	mov    ah,al
  406091:	clc    
  406092:	(bad)  
  406093:	and    al,0x97
  406095:	in     eax,dx
  406096:	lea    eax,[esi-0x4779793a]
  40609c:	js     0x406056
  40609e:	cmp    al,0x30
  4060a0:	pop    esp
  4060a1:	and    eax,0xcf69a7a6
  4060a6:	in     eax,0xc0
  4060a8:	ins    DWORD PTR es:[edi],dx
  4060a9:	dec    ebp
  4060aa:	fidivr WORD PTR [eax-0x17]
  4060ad:	adc    esp,ecx
  4060af:	pop    esp
  4060b0:	stos   BYTE PTR es:[edi],al
  4060b1:	pop    edx
  4060b2:	scas   al,BYTE PTR es:[edi]
  4060b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b4:	add    eax,0xb756fc64
  4060b9:	ins    BYTE PTR es:[edi],dx
  4060ba:	(bad)  
  4060bb:	mov    eax,ds:0x28174020
  4060c0:	mov    ds:0x740a9be8,eax
  4060c5:	sbb    BYTE PTR [ebx+0x3da9dec6],dl
  4060cb:	test   eax,0xcd19f828
  4060d0:	test   BYTE PTR [ebp+0x7e],ah
  4060d3:	mov    ds:0xd0f6557d,eax
  4060d8:	xlat   BYTE PTR ds:[ebx]
  4060d9:	js     0x4060bb
  4060db:	jecxz  0x4060aa
  4060dd:	xchg   esp,eax
  4060de:	repz add eax,0x50034c30
  4060e4:	jmp    0x40606e
  4060e6:	fwait
  4060e7:	stos   DWORD PTR es:[edi],eax
  4060e8:	mov    ds:0x3161776c,eax
  4060ed:	inc    esi
  4060ee:	scas   al,BYTE PTR es:[edi]
  4060ef:	push   ds
  4060f0:	shl    DWORD PTR fs:[edi],1
  4060f3:	mov    dh,0x5d
  4060f5:	aam    0x9a
  4060f7:	or     DWORD PTR [ebx+0x1f05b238],ebx
  4060fd:	xchg   edx,eax
  4060fe:	das    
  4060ff:	mov    dl,0x64
  406101:	pop    esi
  406102:	ds jns 0x406119
  406105:	lds    ebp,FWORD PTR [eax-0x2692d63]
  40610b:	or     ecx,DWORD PTR [ecx-0x391bb86c]
  406111:	cli    
  406112:	out    0x29,eax
  406114:	push   edi
  406115:	mov    dh,0xd9
  406117:	into   
  406118:	cs ins DWORD PTR es:[edi],dx
  40611a:	xchg   ebp,eax
  40611b:	sbb    edx,eax
  40611d:	(bad)  
  40611e:	adc    eax,0xb2279774
  406123:	pop    ebp
  406124:	jge    0x40617e
  406126:	mov    cl,0xc
  406128:	out    dx,al
  406129:	ins    BYTE PTR es:[edi],dx
  40612a:	test   al,0x17
  40612c:	shl    BYTE PTR [ebx-0x4],1
  40612f:	mov    eax,0xac66e14e
  406134:	mov    cl,ch
  406136:	outs   dx,WORD PTR ds:[esi]
  406138:	adc    esp,DWORD PTR [edx-0x7dd6ddf1]
  40613e:	dec    ebp
  40613f:	mov    al,ds:0xfe126989
  406144:	jo     0x4060de
  406146:	jbe    0x4060e4
  406148:	int    0x2a
  40614a:	mov    bl,0x5e
  40614c:	aaa    
  40614d:	lods   al,BYTE PTR ds:[esi]
  40614e:	push   ss
  40614f:	fisttp WORD PTR [esp+eax*8]
  406152:	sar    edx,0x1d
  406155:	pop    edx
  406156:	add    eax,0xcffe668d
  40615b:	mov    ds:0x794cbe5,eax
  406160:	ficom  WORD PTR [ebp+0x241378b1]
  406166:	pop    ds
  406167:	push   esi
  406168:	fcmovbe st,st(3)
  40616a:	in     al,0x67
  40616c:	inc    ecx
  40616d:	xchg   BYTE PTR [esp+ebx*8+0x7aa23deb],al
  406174:	or     ebp,DWORD PTR [esp+ecx*4+0x6668cdb1]
  40617b:	pop    esi
  40617c:	mov    ch,0x94
  40617e:	adc    cl,bh
  406180:	mov    al,0xbd
  406182:	xor    eax,0x763aa7b
  406187:	(bad)  
  406188:	out    0xce,al
  40618a:	jo     0x4061bd
  40618c:	push   edi
  40618d:	mov    edi,0x3cac5a58
  406192:	push   esi
  406193:	push   ecx
  406194:	inc    esi
  406195:	mov    ecx,0x2e729608
  40619a:	pop    ebp
  40619b:	(bad)  
  40619c:	aad    0xb1
  40619e:	ins    BYTE PTR es:[edi],dx
  40619f:	dec    eax
  4061a0:	test   DWORD PTR [edi+0x432de721],edx
  4061a6:	mov    edx,0xb2b7c6e5
  4061ab:	shl    DWORD PTR [ebx],0x8d
  4061ae:	add    ah,dl
  4061b0:	xor    al,0x72
  4061b2:	push   edx
  4061b3:	push   ds
  4061b4:	mov    ch,0x27
  4061b6:	mov    eax,0x81d50bad
  4061bb:	rcr    DWORD PTR [eax-0x26],cl
  4061be:	pop    edx
  4061bf:	sahf   
  4061c0:	loopne 0x4061de
  4061c2:	inc    esi
  4061c3:	push   ds
  4061c4:	repz mov ds:0x657f1b02,eax
  4061ca:	sbb    cl,BYTE PTR [ecx+0x5d]
  4061cd:	inc    edi
  4061ce:	sub    eax,0xe9940348
  4061d3:	popf   
  4061d4:	push   es
  4061d5:	int    0x50
  4061d7:	xchg   ebx,ebp
  4061d9:	jns    0x40619c
  4061db:	or     edx,DWORD PTR [edi]
  4061dd:	and    DWORD PTR [esi+0x3f],ebp
  4061e0:	mov    ?,ebp
  4061e2:	mov    edx,0x5fcfe483
  4061e7:	fst    st(6)
  4061e9:	hlt    
  4061ea:	mov    ?,WORD PTR [edx-0x394859a8]
  4061f0:	mov    BYTE PTR [ecx-0x77],dh
  4061f3:	std    
  4061f4:	out    dx,al
  4061f5:	pop    esi
  4061f6:	add    al,0x77
  4061f8:	ja     0x4061bb
  4061fa:	push   ebp
  4061fb:	push   esi
  4061fc:	pop    ss
  4061fd:	cmp    edi,DWORD PTR [edx]
  4061ff:	xor    al,0xaa
  406201:	(bad)  
  406202:	xor    eax,0xde3391b8
  406207:	pop    esi
  406208:	mov    dh,0x37
  40620a:	mov    cl,0xc4
  40620c:	js     0x40627f
  40620e:	test   al,0xd0
  406210:	add    ebx,0x716a873b
  406216:	retf   
  406217:	xor    edx,0x9c2b8ae8
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	xlat   BYTE PTR ds:[ebx]
  4062e9:	and    eax,DWORD PTR [esi-0x6e]
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi-0x15a00f42]
  4062f7:	fcmovbe st,st(2)
  4062f9:	jmp    0xaad5:0x348d5de8
  406300:	std    
  406301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406303:	scas   eax,DWORD PTR es:[edi]
  406304:	xchg   esi,eax
  406305:	cmp    ebp,0x937bdc6e
  40630b:	pop    esp
  40630c:	inc    eax
  40630d:	or     BYTE PTR [edx],cl
  40630f:	repz jmp 0xa4ae:0x6daa5e20
  406317:	jle    0x40635f
  406319:	popa   
  40631a:	pop    ebp
  40631b:	dec    ebp
  40631c:	pop    ss
  40631d:	dec    edi
  40631e:	mov    ecx,0x5c52f804
  406323:	mov    bh,0x39
  406325:	inc    ebx
  406326:	pop    sp
  406328:	daa    
  406329:	inc    ecx
  40632a:	and    esp,esp
  40632c:	cmp    DWORD PTR [esi+0x35],ecx
  40632f:	push   edi
  406330:	test   al,al
  406332:	bound  edi,QWORD PTR [esi-0x35a13dc6]
  406338:	push   esi
  406339:	jecxz  0x406310
  40633b:	cdq    
  40633c:	mov    WORD PTR [eax+eax*4+0x72e882f4],gs
  406343:	fs push eax
  406345:	(bad)  
  406346:	sbb    BYTE PTR [ecx-0x29820848],bl
  40634c:	pop    esi
  40634d:	cmp    ch,BYTE PTR [edi-0x79]
  406350:	sub    BYTE PTR [edi],bl
  406352:	or     DWORD PTR [ecx-0x73],edi
  406355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406356:	mov    cl,0x6
  406358:	cmp    al,0xca
  40635a:	cwde   
  40635b:	and    DWORD PTR [edi],0xa
  40635e:	lock shl BYTE PTR [edi+0x7f],1
  406362:	inc    BYTE PTR [esi+0x3]
  406365:	clc    
  406366:	xchg   DWORD PTR [esi+0x2dd0a078],eax
  40636c:	inc    edx
  40636d:	sbb    DWORD PTR [ecx-0x9],ebp
  406370:	sub    al,BYTE PTR [edx]
  406372:	jg     0x406396
  406374:	jbe    0x4063e5
  406376:	bnd jns 0x4063e0
  406379:	jmp    0x228f:0x23ae23ba
  406380:	arpl   WORD PTR [esi+0x75950bf5],bp
  406386:	hlt    
  406387:	sbb    DWORD PTR [ebx-0x698b7bcc],edx
  40638d:	inc    BYTE PTR [ebp-0x6f]
  406390:	int3   
  406391:	popa   
  406392:	fsubr  DWORD PTR [eax]
  406394:	jecxz  0x406403
  406396:	aam    0x82
  406398:	jecxz  0x406393
  40639a:	mov    cl,0x7f
  40639c:	xor    al,0xf3
  40639e:	(bad)
  4063a3:	loop   0x406399
  4063a5:	idiv   BYTE PTR [eax+eiz*1]
  4063a8:	push   esi
  4063a9:	test   DWORD PTR [eax],esi
  4063ab:	jmp    FWORD PTR [ecx+edx*8+0x53]
  4063af:	stos   DWORD PTR es:[edi],eax
  4063b0:	sbb    BYTE PTR [eax+0x4d784dd8],ch
  4063b6:	mov    DWORD PTR [edx+0x6ae6ccf5],esp
  4063bc:	stos   BYTE PTR es:[edi],al
  4063bd:	sbb    esi,DWORD PTR [eax+0x3dc41ea5]
  4063c3:	add    eax,0x10efd21e
  4063c8:	div    DWORD PTR [edi-0x5]
  4063cb:	and    DWORD PTR [esi],0x2bcf02c
  4063d1:	sub    eax,0xc7b87952
  4063d6:	sbb    al,0x7e
  4063d8:	test   ah,al
  4063da:	imul   edi,DWORD PTR [edx],0x2fe89ba4
  4063e0:	fiadd  WORD PTR [ebp+eax*2-0x7f]
  4063e4:	je     0x4063fb
  4063e6:	fwait
  4063e7:	push   edx
  4063e8:	loop   0x4063f4
  4063ea:	shr    DWORD PTR [esp+ecx*4],cl
  4063ed:	jae    0x4063d5
  4063ef:	jp     0x40637e
  4063f1:	fcomip st,st(7)
  4063f3:	outs   dx,DWORD PTR ds:[esi]
  4063f4:	scas   eax,DWORD PTR es:[edi]
  4063f5:	arpl   WORD PTR [edi-0x222492a0],bx
  4063fb:	fisttp QWORD PTR [eax-0x2a95f7b0]
  406401:	xor    esp,esi
  406403:	push   ss
  406404:	shl    DWORD PTR [eax+0x49],cl
  406407:	aad    0xcd
  406409:	loope  0x4063b1
  40640b:	jae    0x406437
  40640d:	sbb    bl,BYTE PTR [ebp+0x369e6c29]
  406413:	push   edx
  406414:	adc    dh,BYTE PTR [eax+ecx*4+0x348ed]
  40641b:	sbb    eax,0xd51b6c9
  406420:	push   es
  406421:	ds dec edi
  406423:	cli    
  406424:	scas   eax,DWORD PTR es:[edi]
  406425:	and    ebx,0x3206a2fc
  40642b:	scas   eax,DWORD PTR es:[edi]
  40642c:	in     al,dx
  40642d:	jnp    0x4063f0
  40642f:	xor    al,0x9f
  406431:	jbe    0x40640d
  406433:	sbb    BYTE PTR [esi+0x59923260],ah
  406439:	cmc    
  40643a:	les    esi,FWORD PTR [ecx-0x6210178]
  406440:	jl     0x40648f
  406442:	pop    es
  406443:	aam    0xf
  406445:	ret    0xb197
  406448:	jo     0x4063e2
  40644a:	pop    esp
  40644b:	or     ah,BYTE PTR [ecx]
  40644d:	or     dl,dl
  40644f:	test   BYTE PTR [ebx-0x1f],0x78
  406453:	iret   
  406454:	scas   al,BYTE PTR es:[edi]
  406455:	mov    bh,0x99
  406457:	das    
  406458:	add    ebx,DWORD PTR [ebx+0xf8e6027]
  40645e:	loopne 0x40645f
  406460:	ret    
  406461:	addr16 jno 0x4064dd
  406464:	(bad)  
  406465:	stos   DWORD PTR es:[edi],eax
  406466:	push   ebp
  406467:	jne    0x4064a4
  406469:	add    edi,edi
  40646b:	add    ch,BYTE PTR [edi-0x1bf68511]
  406471:	out    0x82,al
  406473:	mov    ah,0xcc
  406475:	xor    ebp,DWORD PTR [esi]
  406477:	dec    edi
  406478:	push   0x1d
  40647a:	sub    eax,0x965bed66
  40647f:	mov    ds:0x37275e8,eax
  406484:	sub    al,0x98
  406486:	dec    ecx
  406487:	fwait
  406488:	cmp    eax,DWORD PTR [ebp+0x26]
  40648b:	jbe    0x406494
  40648d:	pop    edi
  40648e:	xchg   ecx,eax
  40648f:	adc    dh,0xf
  406492:	adc    cl,BYTE PTR ds:0x43ad19ad
  406498:	inc    edi
  406499:	fdivrp st(2),st
  40649b:	rcl    DWORD PTR [esi],cl
  40649d:	popf   
  40649e:	cmp    DWORD PTR [esi+0x5d422f23],edx
  4064a4:	push   ss
  4064a5:	scas   al,BYTE PTR es:[edi]
  4064a6:	jb     0x40651c
  4064a8:	cmp    DWORD PTR [eax+0x26],edi
  4064ab:	dec    esp
  4064ac:	or     eax,0x423b3815
  4064b1:	out    0x6f,al
  4064b3:	(bad)  [eax-0x5506a947]
  4064b9:	push   0x4323897f
  4064be:	daa    
  4064bf:	or     al,ch
  4064c1:	xchg   edi,eax
  4064c2:	dec    ecx
  4064c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c4:	outs   dx,DWORD PTR ds:[esi]
  4064c5:	les    ebp,FWORD PTR ds:[eax-0x2ff4ef9b]
  4064cc:	popf   
  4064cd:	xor    ah,ch
  4064cf:	mov    al,ds:0xf324cff2
  4064d4:	xor    eax,0x2cf8b433
  4064d9:	xchg   ecx,eax
  4064da:	mov    ds:0x77b75bfe,eax
  4064df:	xchg   DWORD PTR [edi],edx
  4064e1:	lahf   
  4064e2:	push   edi
  4064e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e4:	and    ch,bl
  4064e6:	jae    0x40650c
  4064e8:	sti    
  4064e9:	fsub   st,st(3)
  4064eb:	jmp    FWORD PTR [edx-0x5e]
  4064ee:	add    BYTE PTR [edi+0x35f99db4],bh
  4064f4:	push   ecx
  4064f5:	or     ebp,DWORD PTR [edx+0x7bff8f19]
  4064fb:	inc    eax
  4064fc:	push   0xffffffc0
  4064fe:	sar    BYTE PTR [edi-0x3399fc38],1
  406504:	inc    esi
  406505:	jg     0x4064f9
  406507:	out    dx,eax
  406508:	cmp    DWORD PTR [ecx-0x2],edi
  40650b:	pushf  
  40650c:	test   DWORD PTR [eax],0x605e878f
  406512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406513:	mov    ebx,0xf6ad09e4
  406518:	stos   DWORD PTR es:[di],eax
  40651a:	mov    cl,0xa
  40651c:	out    dx,al
  40651d:	das    
  40651e:	push   eax
  40651f:	lods   al,BYTE PTR ds:[esi]
  406520:	sbb    esi,DWORD PTR ds:0xff261be
  406526:	fnstcw WORD PTR [ebx+eiz*4]
  406529:	hlt    
  40652a:	xor    BYTE PTR [esi],bl
  40652c:	iret   
  40652d:	in     eax,0xe5
  40652f:	rcr    DWORD PTR [edx],cl
  406531:	sub    BYTE PTR [esi+eax*2+0x52],dh
  406535:	jo     0x4065ac
  406537:	xor    edx,edi
  406539:	rcr    DWORD PTR es:[ecx-0x2a],0xd8
  40653e:	pushf  
  40653f:	xchg   DWORD PTR [ebx-0x58],edx
  406542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406543:	shl    eax,1
  406545:	les    ecx,FWORD PTR [edi+0x6001b641]
  40654b:	add    ebx,esp
  40654d:	rcr    BYTE PTR [edi-0x441d3ea3],1
  406553:	dec    ebx
  406554:	sub    al,0x1e
  406556:	shl    dl,cl
  406558:	jle    0x40657d
  40655a:	sbb    eax,0x960632a5
  40655f:	push   esp
  406560:	icebp  
  406561:	push   0xdae6ce94
  406566:	popf   
  406567:	jae    0x40651b
  406569:	sahf   
  40656a:	sbb    esp,DWORD PTR [edx+ecx*4-0x7906db64]
  406571:	pop    esi
  406572:	shl    DWORD PTR [ecx-0x58],1
  406575:	and    eax,0x7a4e93be
  40657a:	xor    DWORD PTR [ebp+0x313072c9],ebp
  406580:	shr    DWORD PTR [edi+esi*8-0x5a],1
  406584:	scas   al,BYTE PTR es:[edi]
  406585:	cmp    esp,ecx
  406587:	out    dx,al
  406588:	jns    0x4065d0
  40658a:	(bad)  
  40658b:	out    0xb1,al
  40658d:	(bad)  
  40658e:	pop    ebx
  40658f:	aam    0x2a
  406591:	mov    edi,0x39037c2
  406596:	dec    DWORD PTR [eax-0x7]
  406599:	jbe    0x4065c0
  40659b:	mov    esp,0x6460b241
  4065a0:	nop
  4065a1:	pop    ds
  4065a2:	nop
  4065a3:	push   cs
  4065a4:	out    dx,al
  4065a5:	int3   
  4065a6:	in     eax,0xbe
  4065a8:	dec    eax
  4065a9:	push   edi
  4065aa:	push   ebx
  4065ab:	mov    esi,0xf25bf29b
  4065b0:	gs fsub st(4),st
  4065b3:	mov    al,ds:0x4804afe3
  4065b8:	mov    cl,0x35
  4065ba:	test   eax,0x272fe56f
  4065bf:	xchg   DWORD PTR [esi],ebp
  4065c1:	mov    ebp,0x8c916165
  4065c6:	out    dx,eax
  4065c7:	adc    ecx,DWORD PTR [ebp+0x78a6dcaa]
  4065cd:	out    dx,al
  4065ce:	ret    
  4065cf:	add    eax,0x8aae3847
  4065d4:	enter  0x7efd,0x46
  4065d8:	fidiv  DWORD PTR [ecx+0x2a]
  4065db:	cmp    BYTE PTR ds:[eax+0x4b],bl
  4065df:	nop
  4065e0:	leave  
  4065e1:	(bad)  
  4065e2:	(bad)  
  4065e3:	cmc    
  4065e4:	mov    ebp,0x2c63921a
  4065e9:	jnp    0x4065b3
  4065eb:	inc    esi
  4065ec:	or     bh,BYTE PTR [ecx]
  4065ee:	push   esi
  4065ef:	in     al,dx
  4065f0:	aaa    
  4065f1:	clc    
  4065f2:	sub    eax,0xc01cc33d
  4065f7:	mov    ecx,0x1ed4ca9d
  4065fc:	cmp    ah,BYTE PTR [edi-0x5a2647d8]
  406602:	push   edx
  406603:	push   ss
  406604:	repz xchg esp,eax
  406606:	repnz scas eax,DWORD PTR es:[edi]
  406608:	xor    DWORD PTR [ebx-0x2dd41fd9],ecx
  40660e:	jbe    0x406625
  406610:	(bad)  
  406612:	xor    al,0xb
  406614:	cwde   
  406615:	ret    0x98bf
  406618:	mov    edx,0xcd52db55
  40661d:	mov    esp,0x258b7ec2
  406622:	inc    ebp
  406623:	into   
  406624:	sbb    eax,0x799003b1
  406629:	stos   DWORD PTR es:[edi],eax
  40662a:	out    dx,al
  40662b:	iret   
  40662c:	jge    0x406670
  40662e:	and    al,0x66
  406630:	push   eax
  406631:	adc    eax,0xa6edfa8e
  406636:	dec    edx
  406637:	imul   edi,DWORD PTR [esi],0x1f
  40663a:	xchg   ebp,eax
  40663b:	ret    
  40663c:	imul   esi,edi,0x40
  40663f:	frstor [eax-0x6f]
  406642:	repz popf 
  406644:	adc    esp,DWORD PTR [ecx]
  406646:	xlat   BYTE PTR ds:[ebx]
  406647:	xchg   edx,eax
  406648:	fistp  DWORD PTR [esi+esi*8]
  40664b:	mov    dl,0x4a
  40664d:	jg     0x406603
  40664f:	popa   
  406650:	or     al,0xf4
  406652:	sbb    ecx,DWORD PTR [esi+0x3d]
  406655:	hlt    
  406656:	ins    DWORD PTR es:[edi],dx
  406657:	cmc    
  406658:	mov    eax,ds:0x7b9b9aa3
  40665d:	popa   
  40665e:	lock icebp 
  406660:	into   
  406661:	and    ch,BYTE PTR [edi-0xe]
  406664:	retf   
  406665:	dec    edx
  406666:	xchg   edx,ecx
  406668:	adc    eax,0xe854e956
  40666d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40666e:	out    0xdf,al
  406670:	adc    ah,BYTE PTR [ebx]
  406672:	mov    al,0xb6
  406674:	retf   0x751c
  406677:	pop    esi
  406678:	mov    edx,DWORD PTR [ebx+0x4]
  40667b:	xor    eax,0xcb79b577
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x4049920c
  4066b2:	mul    BYTE PTR [esi+edi*4-0x424141c5]
  4066b9:	les    edi,FWORD PTR [esi-0x580dd742]
  4066bf:	xchg   ebx,eax
  4066c0:	mov    esi,0x410d8c17
  4066c5:	jmp    0x40671f
  4066c7:	xchg   ebp,eax
  4066c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c9:	dec    edi
  4066ca:	div    BYTE PTR [ebx-0x274683d4]
  4066d0:	add    DWORD PTR [edx+0x4d601530],esp
  4066d6:	jle    0x40669a
  4066d8:	int3   
  4066d9:	dec    ecx
  4066da:	mov    cl,0xd4
  4066dc:	cmp    DWORD PTR [ebx+edi*2-0x40ba010b],edi
  4066e3:	jbe    0x40667b
  4066e5:	cmp    dl,ch
  4066e7:	nop
  4066e8:	add    al,0x1a
  4066ea:	int    0xc8
  4066ec:	shl    edi,1
  4066ee:	clc    
  4066ef:	xchg   DWORD PTR [edx-0x1e],edi
  4066f2:	fsubr  st(2),st
  4066f4:	pop    ebx
  4066f5:	mov    ecx,0xd0a4e213
  4066fa:	and    ch,al
  4066fc:	xor    al,0x22
  4066fe:	repz call 0x2f6cd8e5
  406704:	add    al,BYTE PTR [esp+edi*1-0x4dfd9b56]
  40670b:	call   0xf905:0xc3464e97
  406712:	call   0x88cb:0x64a7e8c6
  406719:	icebp  
  40671a:	jmp    0x1aa8:0x27d91088
  406721:	in     eax,dx
  406722:	push   edx
  406723:	mov    esi,0x9da80ce0
  406728:	mov    bh,0x52
  40672a:	and    eax,0x102b4516
  40672f:	inc    ebp
  406730:	jae    0x40670b
  406732:	cs pop es
  406734:	mov    edi,0x2e1ba5ea
  406739:	(bad)  
  40673a:	pop    DWORD PTR [edx-0x55]
  40673d:	push   ss
  40673e:	sbb    eax,DWORD PTR [ebx-0x6cf752ac]
  406744:	pop    ds
  406745:	pop    ds
  406746:	retf   
  406747:	pop    esp
  406748:	push   0x50
  40674a:	js     0x406729
  40674c:	ss xchg edi,eax
  40674e:	aaa    
  40674f:	call   0xc5a16955
  406754:	lods   al,BYTE PTR ds:[esi]
  406755:	mov    ah,0xea
  406757:	dec    edi
  406758:	sbb    eax,0xbab75f6e
  40675d:	jp     0x4067ad
  40675f:	ss daa 
  406761:	fiadd  WORD PTR [edi-0x1]
  406764:	pop    ds
  406765:	push   0x10b6317e
  40676a:	sub    al,0xa9
  40676c:	sti    
  40676d:	and    ecx,eax
  40676f:	fwait
  406770:	or     BYTE PTR [ebp+0x76c2af7d],0x30
  406777:	fmul   DWORD PTR [ebx+0x6806fa5]
  40677d:	outs   dx,DWORD PTR ds:[esi]
  40677e:	imul   ecx,ebp,0x24
  406781:	stc    
  406782:	rcr    BYTE PTR cs:[eax],1
  406785:	xlat   BYTE PTR gs:[ebx]
  406787:	sar    esp,1
  406789:	lods   eax,DWORD PTR ds:[esi]
  40678a:	jp     0x406730
  40678c:	push   ecx
  40678d:	test   al,0x98
  40678f:	(bad)  
  406791:	(bad)  
  406792:	xchg   edx,eax
  406793:	dec    DWORD PTR [ecx-0x4e]
  406796:	pop    ds
  406797:	or     ch,BYTE PTR [ebx]
  406799:	idiv   edi
  40679b:	imul   edx,DWORD PTR [eax-0x4eea3828],0x21
  4067a2:	es pop edx
  4067a4:	jle    0x4067c8
  4067a6:	adc    BYTE PTR [esi+ebp*1+0x5c5ac571],cl
  4067ad:	pop    ds
  4067ae:	xor    DWORD PTR [ebx],ecx
  4067b0:	das    
  4067b1:	mov    ah,0x56
  4067b3:	pop    esi
  4067b4:	hlt    
  4067b5:	and    ecx,DWORD PTR [esp+ecx*4-0x6]
  4067b9:	cdq    
  4067ba:	adc    ch,BYTE PTR [ebp-0x5923481d]
  4067c0:	int3   
  4067c1:	sub    ebp,eax
  4067c3:	or     eax,DWORD PTR [esi+0x4ce39a72]
  4067c9:	adc    BYTE PTR [ebx-0x5980301a],bh
  4067cf:	daa    
  4067d0:	mov    edi,0xc1d560c
  4067d5:	pop    esp
  4067d6:	int3   
  4067d7:	push   cs
  4067d8:	test   al,0x7f
  4067da:	lods   eax,DWORD PTR ds:[esi]
  4067db:	sbb    dl,BYTE PTR cs:[edx-0x4ed47095]
  4067e2:	cld    
  4067e3:	dec    esp
  4067e4:	jb     0x406802
  4067e6:	sbb    DWORD PTR [edx],0x231e3e96
  4067ec:	or     DWORD PTR [edx-0x7fea0514],ebp
  4067f2:	push   ds
  4067f3:	mov    DWORD PTR ds:0x9d3d40a6,esp
  4067f9:	dec    ebx
  4067fa:	sub    eax,0x1d5b323
  4067ff:	ficom  DWORD PTR [eax-0x1e]
  406802:	mov    bl,0xac
  406804:	cs test eax,0x4feeb5d6
  40680a:	lea    edi,[edx+0x7a48fff3]
  406810:	mov    al,0x7a
  406812:	add    DWORD PTR [ebx-0x79e523c8],esp
  406818:	sbb    eax,0x7dd528f8
  40681d:	xor    eax,0xed49b2e8
  406822:	popf   
  406823:	out    dx,al
  406824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406825:	addr16 xor al,cl
  406828:	movups xmm1,xmm2
  40682b:	mov    al,ds:0x99d4a4b7
  406830:	cmc    
  406831:	or     bh,0xa7
  406834:	pop    ds
  406835:	sub    ebx,DWORD PTR [esi]
  406837:	rcr    DWORD PTR [edi+eax*2-0x4d],cl
  40683b:	mov    DWORD PTR [esi],eax
  40683d:	push   esi
  40683e:	out    0x1d,al
  406840:	fs sub eax,0x567c7e6c
  406846:	dec    ecx
  406847:	leave  
  406848:	rol    esp,cl
  40684a:	scas   eax,DWORD PTR es:[edi]
  40684b:	sbb    ecx,ebx
  40684d:	mov    dh,0x63
  40684f:	out    0x9c,al
  406851:	and    eax,0x1bd5cc39
  406856:	mov    ds:0xd8d7191,eax
  40685b:	cmp    BYTE PTR ds:0xdbb1aa13,bh
  406861:	dec    edx
  406862:	and    al,0xb3
  406864:	or     DWORD PTR [esi+0x1031e167],eax
  40686a:	pop    es
  40686b:	xlat   BYTE PTR ds:[ebx]
  40686c:	mov    al,0x7a
  40686e:	leave  
  40686f:	das    
  406870:	sbb    bh,BYTE PTR [ecx]
  406872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406873:	(bad)  
  406874:	rcr    DWORD PTR [ecx+ebx*2-0x4e6886d6],0xf
  40687c:	pop    esi
  40687d:	or     ah,BYTE PTR [ecx+0x7d663de8]
  406883:	xor    dl,BYTE PTR [esi+0x48]
  406886:	jae    0x4068a0
  406888:	out    0x6,eax
  40688a:	add    ecx,DWORD PTR [esp+eax*4-0x458e0f74]
  406891:	push   cs
  406892:	mov    dh,0x99
  406894:	push   ecx
  406895:	ss inc ebp
  406897:	inc    ebp
  406898:	sti    
  406899:	push   esp
  40689a:	addr16 inc ecx
  40689c:	dec    ecx
  40689d:	inc    esp
  40689e:	les    esi,FWORD PTR [ebx-0x7c]
  4068a1:	mov    ah,0xa2
  4068a3:	ror    ebp,cl
  4068a5:	cmovne edi,DWORD PTR [ebp+0x3c05f71c]
  4068ac:	(bad)  ds:0x4bd14a1e
  4068b2:	ss sub ecx,ebp
  4068b5:	int3   
  4068b6:	jmp    0x406890
  4068b8:	xchg   esi,eax
  4068b9:	mov    al,ds:0x514f643a
  4068be:	jno    0x4068a3
  4068c0:	jmp    0x40686d
  4068c2:	test   BYTE PTR [esp+edi*1],cl
  4068c5:	ja     0x4068c6
  4068c7:	xchg   esp,eax
  4068c8:	xor    bh,BYTE PTR [edi-0x58]
  4068cb:	xchg   DWORD PTR [eax+0x52],esp
  4068ce:	push   ebx
  4068cf:	xor    al,0x1
  4068d1:	dec    edi
  4068d2:	fstp   QWORD PTR [esi-0x9aeb917]
  4068d8:	fist   DWORD PTR [ebp-0x12]
  4068db:	sti    
  4068dc:	mov    ecx,0xfa5f42dd
  4068e1:	inc    eax
  4068e2:	mov    ebx,0x5a1c6b8f
  4068e7:	mov    BYTE PTR [ebp+0x7c],dh
  4068ea:	pop    edx
  4068eb:	mov    ch,0x94
  4068ed:	stc    
  4068ee:	inc    eax
  4068ef:	imul   ebx,edx,0x1e
  4068f2:	out    0x5b,eax
  4068f4:	les    eax,FWORD PTR [ebx]
  4068f6:	dec    ebp
  4068f7:	mov    ch,0x6c
  4068f9:	dec    ebp
  4068fa:	fs int 0x8d
  4068fd:	pushf  
  4068fe:	pop    es
  4068ff:	mov    al,ds:0xf8eb822
  406904:	jns    0x40694e
  406906:	adc    al,0x58
  406908:	lahf   
  406909:	add    dl,BYTE PTR [eax+0x61ecb8b5]
  40690f:	push   esp
  406910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406911:	cli    
  406912:	mov    edx,DWORD PTR [edi+0x6c]
  406915:	xchg   esi,eax
  406916:	mov    bh,BYTE PTR gs:[ebp+0x330e463d]
  40691d:	loop   0x4068a6
  40691f:	add    BYTE PTR [ecx+0x1],dl
  406922:	push   cs
  406923:	inc    ebp
  406924:	sti    
  406925:	pusha  
  406926:	nop
  406927:	(bad)
  40692a:	dec    ebx
  40692b:	xor    ah,ch
  40692d:	ret    
  40692e:	jb     0x40699f
  406930:	sub    BYTE PTR [edx+0x74a14a77],al
  406936:	xchg   esp,eax
  406937:	mov    esi,0x8c5f6dff
  40693c:	and    eax,DWORD PTR [esi+0x4b]
  40693f:	jae    0x40696c
  406941:	sbb    eax,0x82534171
  406946:	push   es
  406947:	stos   DWORD PTR es:[edi],eax
  406948:	dec    ecx
  406949:	mov    ds:0x5bb434cb,al
  40694e:	in     eax,dx
  40694f:	out    0xce,al
  406951:	aad    0x9
  406953:	stos   BYTE PTR es:[edi],al
  406954:	inc    eax
  406955:	xchg   ax,ax
  406957:	xor    DWORD PTR [esi],esp
  406959:	mov    BYTE PTR [eax],bh
  40695b:	pop    ds
  40695c:	frstor ds:0x3b8f5cd6
  406962:	and    eax,0x95ce209a
  406967:	in     al,0x72
  406969:	and    al,0x6d
  40696b:	rcr    cl,0xf9
  40696e:	dec    edi
  40696f:	xchg   esp,eax
  406970:	int3   
  406971:	xchg   DWORD PTR [edx],esp
  406973:	push   cs
  406974:	inc    edi
  406976:	dec    ecx
  406977:	jne    0x4069c7
  406979:	fnstenv [ebp-0x70]
  40697c:	outs   dx,DWORD PTR ds:[esi]
  40697d:	mov    ds,WORD PTR [ebp+0x6db095d9]
  406983:	or     BYTE PTR [ebp+esi*1+0x759de22c],dh
  40698a:	(bad)
  40698d:	(bad)  
  40698e:	iret   
  40698f:	cmp    BYTE PTR [ebx],al
  406991:	dec    esi
  406992:	daa    
  406993:	jo     0x4069e9
  406995:	or     ebp,DWORD PTR [ecx+edx*2]
  406998:	enter  0x93ce,0x28
  40699c:	(bad)  
  40699e:	xor    ah,cl
  4069a0:	cli    
  4069a1:	bound  ebp,QWORD PTR [esi+0x13]
  4069a4:	mov    eax,0x17e97cc2
  4069a9:	ins    BYTE PTR es:[edi],dx
  4069aa:	and    eax,0x65e981e7
  4069af:	dec    ebp
  4069b0:	inc    ebx
  4069b1:	jne    0x406958
  4069b3:	outs   dx,BYTE PTR ds:[esi]
  4069b4:	cmp    ah,BYTE PTR [eax]
  4069b6:	xchg   edi,eax
  4069b7:	outs   dx,BYTE PTR ds:[esi]
  4069b8:	or     al,0x88
  4069ba:	inc    ebp
  4069bb:	cmp    bl,ah
  4069bd:	inc    ecx
  4069be:	jle    0x406a32
  4069c0:	call   0x8ea2e8b
  4069c5:	aad    0xaf
  4069c7:	mov    edi,DWORD PTR [esi]
  4069c9:	fs ins BYTE PTR es:[edi],dx
  4069cb:	data16 cmc 
  4069cd:	xchg   DWORD PTR [eax-0x34],ecx
  4069d0:	dec    ebx
  4069d1:	and    BYTE PTR [esi+0x75],0x3
  4069d5:	cmp    dl,BYTE PTR [ebx-0x10a866f6]
  4069db:	aaa    
  4069dc:	inc    ecx
  4069dd:	adc    eax,0xd1ba24d9
  4069e2:	dec    eax
  4069e3:	xchg   ebx,eax
  4069e4:	dec    edi
  4069e5:	stos   DWORD PTR es:[edi],eax
  4069e6:	retf   
  4069e7:	sbb    eax,0xa81af2af
  4069ec:	pop    esi
  4069ed:	push   es
  4069ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f0:	imul   esp,DWORD PTR [ebx*8+0x16ffa90f],0x8ae76db0
  4069fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fc:	xchg   esp,eax
  4069fd:	xor    bl,BYTE PTR [edx]
  4069ff:	push   edi
  406a00:	mov    cl,0xc3
  406a02:	and    eax,0x6a5582e2
  406a07:	pop    edx
  406a08:	lods   eax,DWORD PTR ds:[esi]
  406a09:	xor    DWORD PTR [ebp+0x389071b3],esp
  406a0f:	jecxz  0x4069c4
  406a11:	cmp    al,BYTE PTR [edx+0x4ea02683]
  406a17:	out    0x8,al
  406a19:	jp     0x4069d5
  406a1b:	cmp    al,ch
  406a1d:	adc    eax,0x20c242f8
  406a22:	xchg   ebp,eax
  406a23:	xchg   esi,eax
  406a24:	cli    
  406a25:	mov    ds:0xf01dd532,al
  406a2a:	cmp    BYTE PTR [ebx],dl
  406a2c:	pushf  
  406a2d:	scas   eax,DWORD PTR es:[edi]
  406a2e:	mov    dh,BYTE PTR [ebx+0x70178d56]
  406a34:	sub    eax,0x320e4b00
  406a39:	fcmove st,st(2)
  406a3b:	inc    edi
  406a3c:	mov    ah,0x1
  406a3e:	push   0x94458977
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	fisttp QWORD PTR [edi+0x58]
  406ac0:	sar    DWORD PTR [ebp-0x424141bf],1
  406ac6:	les    edi,FWORD PTR [esi+0x233096be]
  406acc:	(bad)  
  406ace:	ins    DWORD PTR es:[edi],dx
  406acf:	js     0x406a89
  406ad1:	push   edi
  406ad2:	enter  0x6135,0xdc
  406ad6:	fldenv [eax]
  406ad8:	mov    fs,WORD PTR [ebp-0x65]
  406adb:	dec    esi
  406adc:	jb     0x406ad4
  406ade:	retf   
  406adf:	retf   
  406ae0:	dec    esi
  406ae1:	(bad)  
  406ae2:	ss jns 0x406b0b
  406ae5:	cmp    BYTE PTR [edx+0x46cbd870],dh
  406aeb:	xchg   ebp,eax
  406aec:	push   ds
  406aed:	pop    eax
  406aee:	loop   0x406b4e
  406af0:	div    DWORD PTR [ecx+esi*1+0x67f0d598]
  406af7:	push   eax
  406af8:	outs   dx,DWORD PTR ds:[esi]
  406af9:	ds int3 
  406afb:	xchg   ebp,eax
  406afc:	xor    edi,DWORD PTR [ebx+esi*1-0x3e]
  406b00:	ficom  WORD PTR [ebp+0x69]
  406b03:	xor    DWORD PTR [ebp+ecx*1-0x522ac888],ebx
  406b0a:	stos   BYTE PTR es:[edi],al
  406b0b:	inc    edx
  406b0c:	and    al,0xa8
  406b0e:	out    dx,al
  406b0f:	dec    eax
  406b10:	mov    sp,0x89ac
  406b14:	pop    eax
  406b15:	cld    
  406b16:	mov    cl,0x59
  406b18:	test   ah,bh
  406b1a:	mov    edx,0x13b164c6
  406b1f:	int    0xd0
  406b21:	or     al,0x4e
  406b23:	adc    bl,BYTE PTR [ebx+0xf]
  406b26:	dec    ebp
  406b27:	dec    ebp
  406b28:	cdq    
  406b29:	in     eax,0x60
  406b2b:	clc    
  406b2c:	mov    dl,0xf2
  406b2e:	hlt    
  406b2f:	ss mov ch,0xce
  406b32:	fidiv  WORD PTR [ecx]
  406b34:	ins    DWORD PTR es:[edi],dx
  406b35:	call   0xcfb0d580
  406b3a:	xchg   esi,eax
  406b3b:	mov    ebx,0xa42539d0
  406b40:	push   esi
  406b41:	inc    ecx
  406b42:	scas   eax,DWORD PTR es:[edi]
  406b43:	(bad)  
  406b44:	push   esp
  406b45:	neg    BYTE PTR [edi+0x230527c2]
  406b4b:	cs mov esp,0xe7e1590e
  406b51:	mov    esi,0x36457ff4
  406b56:	cmp    al,ah
  406b58:	dec    ecx
  406b59:	jno    0x406b13
  406b5b:	or     BYTE PTR [edi+0x26],dl
  406b5e:	arpl   WORD PTR [ebp+0x4a],di
  406b61:	adc    BYTE PTR [ecx+0x33],bh
  406b64:	lods   al,BYTE PTR ds:[esi]
  406b65:	jp     0x406af8
  406b67:	sbb    eax,0x7d98a357
  406b6c:	addr16 (bad) 
  406b6e:	loop   0x406b6e
  406b70:	arpl   WORD PTR ds:0x80159c12,ax
  406b76:	mov    esi,0x82a86bfc
  406b7b:	adc    ebp,edi
  406b7d:	cmp    BYTE PTR [ebp-0x3e],cl
  406b80:	call   FWORD PTR [edi]
  406b82:	inc    ecx
  406b83:	adc    DWORD PTR [edi],0xffffffe0
  406b86:	mov    ds:0x906c5eab,eax
  406b8b:	jecxz  0x406b7b
  406b8d:	dec    eax
  406b8e:	inc    esi
  406b8f:	xor    eax,0x68a14777
  406b94:	aam    0xfe
  406b96:	push   es
  406b97:	stos   DWORD PTR es:[edi],eax
  406b98:	push   esi
  406b99:	jmp    0x406b70
  406b9b:	dec    ecx
  406b9c:	ins    BYTE PTR es:[edi],dx
  406b9d:	sti    
  406b9e:	push   ecx
  406b9f:	sbb    BYTE PTR [esi],dh
  406ba1:	pop    ecx
  406ba3:	push   ebx
  406ba4:	xchg   ebx,eax
  406ba5:	mov    al,0x36
  406ba7:	mov    ecx,0xd5d66f8f
  406bac:	xchg   BYTE PTR [edx+0x53],dl
  406baf:	inc    eax
  406bb0:	mov    dl,0xf3
  406bb2:	dec    ecx
  406bb3:	mov    esp,0xc62a4910
  406bb8:	dec    ebx
  406bb9:	ss push ecx
  406bbb:	aas    
  406bbc:	stos   BYTE PTR es:[edi],al
  406bbd:	inc    esp
  406bbe:	adc    DWORD PTR [ebp-0x6058fb6a],0xc8c8007
  406bc8:	push   ebx
  406bc9:	or     al,0x6e
  406bcb:	repz cs pop ebp
  406bce:	loop   0x406c3b
  406bd0:	cs ss mov bh,0x45
  406bd4:	fnstcw WORD PTR [ebx]
  406bd6:	cs push edx
  406bd8:	adc    ch,BYTE PTR [ebx+0xeaafe6e]
  406bde:	test   al,0x61
  406be0:	jecxz  0x406b99
  406be2:	or     eax,0xf180c53a
  406be7:	push   edx
  406be8:	pop    esi
  406be9:	ret    
  406bea:	cmp    eax,0x140be9a5
  406bef:	xchg   BYTE PTR [ebx+0x2a91fab3],ah
  406bf5:	ret    
  406bf6:	daa    
  406bf7:	div    BYTE PTR [edx+edx*8-0x72]
  406bfb:	data16 jnp 0x406b97
  406bfe:	mov    ds:0xf0501d91,al
  406c03:	xor    esi,edx
  406c05:	xchg   ebp,eax
  406c06:	cs cli 
  406c08:	mov    cl,0x71
  406c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c0b:	jb     0x406bc1
  406c0d:	and    al,0xd4
  406c0f:	xchg   esi,eax
  406c10:	loope  0x406c24
  406c12:	fbld   TBYTE PTR ds:0x5d2130d8
  406c18:	add    esp,DWORD PTR [edi-0x57670de2]
  406c1e:	dec    esi
  406c1f:	inc    eax
  406c20:	mov    ds:0xc36d09a5,eax
  406c25:	pop    ebp
  406c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c27:	dec    esp
  406c28:	or     DWORD PTR [eax+0x631442b3],ecx
  406c2e:	aad    0x21
  406c30:	sbb    eax,0x7a861806
  406c35:	xchg   DWORD PTR [eax+eax*8-0x4],eax
  406c39:	sbb    eax,0x4f997881
  406c3e:	sub    al,0x56
  406c40:	sub    DWORD PTR [edx*8+0x378de3],esi
  406c47:	ret    
  406c48:	shl    BYTE PTR [edi],cl
  406c4a:	mov    ch,0x69
  406c4c:	inc    edx
  406c4d:	push   ebx
  406c4e:	fdivp  st(0),st
  406c50:	inc    edi
  406c51:	mov    dl,0x66
  406c53:	xor    dl,dl
  406c55:	adc    cl,dl
  406c57:	mov    ds:0xa39bc155,eax
  406c5c:	shr    DWORD PTR [esi-0x302bf256],0xb7
  406c63:	jge    0x406c72
  406c65:	test   BYTE PTR ds:0x785e7a33,cl
  406c6b:	or     ebp,DWORD PTR [edx+0x6d]
  406c6e:	(bad)  
  406c6f:	xchg   ecx,eax
  406c70:	inc    edi
  406c71:	(bad)  
  406c73:	(bad)  
  406c74:	rcr    al,1
  406c76:	jmp    0x406c5c
  406c78:	dec    edi
  406c79:	call   FWORD PTR [eax+0x6ec66d8e]
  406c7f:	cmp    eax,0xae3ef519
  406c84:	push   eax
  406c85:	mov    dl,0x6
  406c87:	push   0x958e68cc
  406c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8d:	jmp    0x406c50
  406c8f:	dec    eax
  406c90:	sbb    al,0xbe
  406c92:	ss jae 0x406cc7
  406c95:	lea    ecx,[edi+0x59]
  406c98:	pop    ebx
  406c99:	xor    ecx,DWORD PTR [ebx*1-0x29186e2e]
  406ca0:	jge    0x406d12
  406ca2:	lds    eax,FWORD PTR [edi+0x6f3ba09a]
  406ca8:	sahf   
  406ca9:	adc    ebx,DWORD PTR [ebx]
  406cab:	int3   
  406cac:	add    ebx,edx
  406cae:	enterw 0x25e9,0xf4
  406cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb4:	xchg   ebp,eax
  406cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb6:	pop    es
  406cb7:	push   0xc9222bfd
  406cbc:	pop    ds
  406cbd:	es mov ch,0xef
  406cc0:	cmp    BYTE PTR [ebx-0x38],ch
  406cc3:	or     ch,BYTE PTR [ebp+0x2e612ca6]
  406cc9:	inc    esp
  406cca:	add    eax,0xec8194b
  406ccf:	and    ebp,DWORD PTR [ebx]
  406cd1:	xchg   esp,eax
  406cd2:	inc    ebp
  406cd3:	loope  0x406d4f
  406cd5:	pop    esi
  406cd6:	xor    al,0x5c
  406cd8:	in     al,0x50
  406cda:	data16 clc 
  406cdc:	push   0xffffffac
  406cde:	dec    esp
  406cdf:	add    al,cl
  406ce1:	and    ecx,DWORD PTR [edi+ecx*2+0x31]
  406ce5:	xor    eax,0xb0970ff
  406cea:	push   ecx
  406ceb:	mov    DWORD PTR [edi+0x20],edi
  406cee:	xchg   BYTE PTR [edx-0x72],cl
  406cf1:	gs mov ch,0xcb
  406cf4:	dec    eax
  406cf5:	inc    ebx
  406cf6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406cf8:	addr16 and al,0x9c
  406cfb:	push   ecx
  406cfc:	cmp    DWORD PTR [edx+0x3dba248e],ebp
  406d02:	jne    0x406d04
  406d04:	loope  0x406c95
  406d06:	cmp    al,0x79
  406d08:	xchg   esi,eax
  406d09:	test   DWORD PTR [ebp+ecx*4+0xa770339],ebp
  406d10:	jmp    0x406d19
  406d12:	bound  ebp,QWORD PTR [ebx+eax*8-0x74]
  406d16:	push   edi
  406d17:	jno    0x406ca0
  406d19:	mov    ebp,0xf88be8b9
  406d1e:	mov    dl,0x87
  406d20:	cs popa 
  406d22:	jp     0x406d7a
  406d24:	retf   
  406d25:	jp     0x406d15
  406d27:	jb     0x406d4a
  406d29:	push   esp
  406d2a:	shl    esp,0x3c
  406d2d:	retf   
  406d2e:	add    ecx,DWORD PTR [edx]
  406d30:	addr16 inc ecx
  406d32:	pop    esi
  406d33:	sbb    bl,ch
  406d35:	pop    edi
  406d36:	pop    es
  406d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d38:	(bad)  
  406d39:	adc    al,0x9b
  406d3b:	stos   BYTE PTR es:[edi],al
  406d3c:	cmp    BYTE PTR ds:0x48b1ce29,ah
  406d42:	xchg   esp,eax
  406d43:	push   es
  406d44:	nop
  406d45:	push   esp
  406d46:	push   eax
  406d47:	lods   al,BYTE PTR ds:[esi]
  406d48:	and    al,0x28
  406d4a:	sub    DWORD PTR [ecx],esp
  406d4c:	cmp    esp,DWORD PTR [ecx-0x3158564a]
  406d52:	fild   WORD PTR [eax]
  406d54:	retf   
  406d55:	adc    eax,0xd5414789
  406d5a:	loop   0x406d95
  406d5c:	dec    esp
  406d5d:	inc    edi
  406d5e:	mov    edi,DWORD PTR [edx+0x6a]
  406d61:	scas   al,BYTE PTR es:[edi]
  406d62:	cmp    al,BYTE PTR ds:[eax]
  406d65:	dec    esi
  406d66:	sub    DWORD PTR [eax+0x63],edi
  406d69:	push   esp
  406d6a:	ja     0x406d9b
  406d6c:	push   edx
  406d6d:	inc    ecx
  406d6e:	push   esp
  406d6f:	xor    DWORD PTR [edi],edi
  406d71:	mov    ecx,0xce9ce343
  406d76:	in     eax,dx
  406d77:	cdq    
  406d78:	ret    0xc9d9
  406d7b:	mov    esi,0xad576f05
  406d80:	out    dx,al
  406d81:	fistp  DWORD PTR [ebx]
  406d83:	sbb    ebx,DWORD PTR [ebp-0x2d]
  406d86:	inc    esi
  406d87:	push   edx
  406d88:	push   edx
  406d89:	pusha  
  406d8a:	js     0x406df1
  406d8c:	out    dx,eax
  406d8d:	loop   0x406e06
  406d8f:	std    
  406d90:	dec    ecx
  406d91:	iret   
  406d92:	call   0x673:0x7b897e72
  406d99:	js     0x406df4
  406d9b:	int3   
  406d9c:	(bad)  
  406d9d:	cld    
  406d9e:	sbb    eax,esi
  406da0:	push   0x97c6d909
  406da5:	and    al,0xa5
  406da7:	inc    eax
  406da8:	jbe    0x406dcc
  406daa:	retf   0xb179
  406dad:	push   esi
  406dae:	sbb    dh,ch
  406db0:	iret   
  406db1:	into   
  406db2:	jo     0x406e04
  406db4:	inc    esi
  406db5:	sub    al,0x39
  406db7:	cmp    al,0x5e
  406db9:	adc    DWORD PTR [ebx],ebx
  406dbb:	sub    esi,edx
  406dbd:	dec    esi
  406dbe:	sub    esp,DWORD PTR [eax+0x31ed926a]
  406dc4:	mov    dh,0xdd
  406dc6:	and    edx,ecx
  406dc8:	not    BYTE PTR [edx+0x25]
  406dcb:	cwde   
  406dcc:	mov    dx,0xee04
  406dd0:	push   ss
  406dd1:	repnz mov esp,0x6034d215
  406dd7:	pop    esp
  406dd8:	jnp    0x406dad
  406dda:	int3   
  406ddb:	push   edi
  406ddc:	loopne 0x406e27
  406dde:	and    BYTE PTR [esi-0x5b1e4866],ah
  406de4:	cmp    dl,BYTE PTR [ecx]
  406de6:	fisttp DWORD PTR [eax+0x4793295f]
  406dec:	mov    WORD PTR [edi+0x46b35c78],?
  406df2:	sub    eax,0x55be7051
  406df7:	cmp    BYTE PTR [ebx-0x5],0x6
  406dfb:	sar    BYTE PTR [eax+ebp*8-0x49],cl
  406dff:	push   edi
  406e00:	adc    bl,BYTE PTR [edx+0x1e]
  406e03:	dec    edx
  406e04:	mov    dh,BYTE PTR [edi]
  406e06:	inc    ebx
  406e07:	pusha  
  406e08:	mov    eax,DWORD PTR [ecx+0x47]
  406e0b:	adc    eax,0xada43c21
  406e10:	jp     0x406e51
  406e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e13:	cwde   
  406e14:	in     al,0xbf
  406e16:	jp     0x406e94
  406e18:	jno    0x406e56
  406e1a:	(bad)  [ecx-0x18d2afc9]
  406e20:	mov    dl,0x4b
  406e22:	sti    
  406e23:	xchg   ebp,eax
  406e24:	xlat   BYTE PTR ds:[ebx]
  406e25:	xchg   esi,eax
  406e26:	cli    
  406e27:	das    
  406e28:	pop    ebp
  406e29:	jo     0x406e76
  406e2b:	ja     0x406e0b
  406e2d:	scas   al,BYTE PTR es:[edi]
  406e2e:	push   ebx
  406e2f:	jle    0x406dcd
  406e31:	add    BYTE PTR [eax-0xa],ah
  406e34:	xchg   BYTE PTR [ecx],al
  406e36:	xchg   ebp,eax
  406e37:	mov    bh,0xf1
  406e39:	pop    esp
  406e3a:	mov    bl,BYTE PTR [edi-0x2371bc8e]
  406e40:	in     al,0x9c
  406e42:	dec    esp
  406e43:	retf   
  406e44:	shl    DWORD PTR [ecx-0x14624521],cl
  406e4a:	icebp  
  406e4b:	cmp    DWORD PTR [esi-0x77],edx
  406e4e:	push   ebp
  406e4f:	adc    BYTE PTR [ebx+0x76350456],cl
  406e55:	mov    ch,0x79
  406e57:	retf   
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [ecx+ecx*2-0x415b43aa]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x91b01a28
  406f18:	jb     0x406ea8
  406f1a:	push   ecx
  406f1b:	mov    al,ds:0x5d6fb043
  406f20:	mov    edi,0xf29e9394
  406f25:	call   0xc72b6893
  406f2a:	pop    edi
  406f2b:	pop    edi
  406f2c:	sar    DWORD PTR [eax],0xd8
  406f2f:	push   edi
  406f30:	xor    dh,BYTE PTR [ebx-0x7b]
  406f33:	js     0x406f45
  406f35:	cs or  al,0x31
  406f38:	xor    DWORD PTR [edx],0x5a
  406f3b:	pop    eax
  406f3c:	inc    esi
  406f3d:	inc    eax
  406f3e:	mov    al,dl
  406f40:	push   esp
  406f41:	push   ss
  406f42:	sar    BYTE PTR [eax],0xa8
  406f45:	mov    ebx,DWORD PTR [ebx-0x1f1b279c]
  406f4b:	imul   ecx,DWORD PTR [eax],0x33cbddd9
  406f51:	(bad)  
  406f52:	dec    ecx
  406f53:	aam    0xcd
  406f55:	repz push ds
  406f57:	or     al,0x3f
  406f59:	mov    ecx,DWORD PTR [edi]
  406f5b:	mov    bl,0x38
  406f5d:	cmp    al,0xba
  406f5f:	arpl   WORD PTR [edx+ebp*8-0x54a9543b],bx
  406f66:	inc    ebx
  406f67:	jo     0x406fbc
  406f69:	bswap  bx
  406f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6d:	mov    esp,0x1774960
  406f72:	cmp    cl,cl
  406f74:	scas   eax,DWORD PTR es:[edi]
  406f75:	dec    ebp
  406f76:	loop   0x406fa7
  406f78:	loop   0x406fab
  406f7a:	pop    esi
  406f7b:	loopne 0x406f30
  406f7d:	ja     0x406f39
  406f7f:	fmul   QWORD PTR [eax]
  406f81:	in     eax,0x61
  406f83:	cmp    DWORD PTR [ebx+0x420ce256],edx
  406f89:	push   ebp
  406f8a:	and    ch,bh
  406f8c:	dec    edi
  406f8d:	cdq    
  406f8e:	iret   
  406f8f:	pop    ecx
  406f90:	(bad)  
  406f91:	lods   eax,DWORD PTR ds:[esi]
  406f92:	jmp    0x709aecd8
  406f97:	and    BYTE PTR [ebx-0x41],ch
  406f9a:	mov    ebx,0xe1052904
  406f9f:	(bad)  
  406fa0:	jbe    0x406f32
  406fa2:	les    ebx,FWORD PTR [esp+eax*1+0x2]
  406fa6:	(bad)  
  406fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa8:	mov    dh,0x54
  406faa:	add    eax,0x9857d9ef
  406faf:	mov    ecx,0x35fda408
  406fb4:	aaa    
  406fb5:	stos   DWORD PTR es:[edi],eax
  406fb6:	xor    ah,bh
  406fb8:	cmp    dl,BYTE PTR [edx-0x3d]
  406fbb:	test   eax,0xbfe53aaa
  406fc0:	scas   al,BYTE PTR es:[edi]
  406fc1:	xchg   esp,eax
  406fc2:	out    0xf5,eax
  406fc4:	cmp    dh,BYTE PTR [ebx]
  406fc6:	sbb    BYTE PTR [eax-0x26ef68e1],bh
  406fcc:	pop    edx
  406fcd:	xchg   ebp,eax
  406fce:	(bad)  
  406fcf:	imul   ecx,DWORD PTR [edx],0x94da6d79
  406fd5:	push   es
  406fd6:	xor    al,0x9b
  406fd8:	(bad)  
  406fd9:	sbb    al,0xd1
  406fdb:	mov    dl,0xc6
  406fdd:	adc    DWORD PTR [ebx],0x7a0b6ae0
  406fe3:	ficomp WORD PTR ds:0x51fe774f
  406fe9:	jmp    edx
  406feb:	fdivr  QWORD PTR [edi+edx*1]
  406fee:	loopne 0x406fef
  406ff0:	and    al,0xa
  406ff2:	mov    esp,DWORD PTR [eax]
  406ff4:	mov    DWORD PTR [ebx],esi
  406ff6:	inc    edx
  406ff7:	rcl    esp,1
  406ff9:	add    edx,ebp
  406ffb:	mov    cl,0x41
  406ffd:	mov    edx,DWORD PTR [ebp+0xeaf70a0]
  407003:	jb     0x406fcb
  407005:	add    DWORD PTR [ecx-0x4c6aa7ce],0xffffff87
  40700c:	leave  
  40700d:	xor    BYTE PTR [edi],dh
  40700f:	adc    ch,BYTE PTR [eax]
  407011:	imul   edi,DWORD PTR [ebp-0x62],0xffffff99
  407015:	sub    al,0x77
  407017:	fs dec ebp
  407019:	pop    esi
  40701a:	gs daa 
  40701c:	or     BYTE PTR ds:0x6d21f888,dl
  407022:	mov    ch,BYTE PTR [ebx]
  407024:	adc    ecx,DWORD PTR [edi+ecx*2+0x22]
  407028:	out    dx,al
  407029:	sub    edx,DWORD PTR [ebp+ecx*2-0x1e]
  40702d:	and    eax,0xa7a2d417
  407032:	jg     0x407077
  407034:	clc    
  407035:	push   ss
  407036:	in     al,dx
  407037:	and    ebp,DWORD PTR [edx]
  407039:	xor    esi,ebx
  40703b:	sub    ebp,DWORD PTR [ecx-0x4872942]
  407041:	xor    BYTE PTR [edx-0x31],dl
  407044:	sbb    bh,BYTE PTR [esi]
  407046:	(bad)  
  407047:	adc    eax,0x7893453c
  40704c:	xchg   ebx,eax
  40704d:	add    BYTE PTR ds:0xa6bceb54,al
  407053:	cmp    eax,0x9510f931
  407058:	sbb    BYTE PTR [edx],dl
  40705a:	daa    
  40705b:	or     al,0xee
  40705d:	cmp    DWORD PTR [ebp-0x235b169e],esp
  407063:	pop    es
  407064:	xor    BYTE PTR [edx+0x6a],ch
  407067:	adc    BYTE PTR [edi-0x62],cl
  40706a:	pop    es
  40706b:	jbe    0x407098
  40706d:	lds    esp,FWORD PTR [ebx]
  40706f:	mov    ch,0xf1
  407071:	adc    eax,0x59174319
  407076:	daa    
  407077:	push   cs
  407078:	cwde   
  407079:	fs mov esp,0xd9fe6bc5
  40707f:	rcr    DWORD PTR [edi-0x1ddbddf],0x84
  407086:	jp     0x40702e
  407088:	xor    DWORD PTR gs:[eax],0x659c55b7
  40708f:	in     eax,0xf4
  407091:	or     dh,BYTE PTR [ebp-0x55]
  407094:	adc    al,0x0
  407096:	xor    eax,0xa7d6417e
  40709b:	xor    BYTE PTR ds:0xa769f97d,0x93
  4070a2:	sub    eax,0x1b15cec1
  4070a7:	or     cl,al
  4070a9:	push   ebx
  4070aa:	mov    edi,0xde2a8874
  4070af:	pusha  
  4070b0:	scas   eax,DWORD PTR es:[edi]
  4070b1:	sub    bh,dh
  4070b3:	shl    DWORD PTR [eax+esi*1+0x6c],0xb0
  4070b8:	shl    BYTE PTR [ebx+eax*4+0x71fd3bf2],1
  4070bf:	add    eax,0x3087f89f
  4070c4:	cmp    edx,DWORD PTR [esi+0x4e]
  4070c7:	mov    ds:0x32e63fc8,eax
  4070cc:	jne    0x4070b3
  4070ce:	push   edi
  4070cf:	shl    DWORD PTR [edx+0x6f3bd213],0x75
  4070d6:	pop    esi
  4070d7:	and    al,0xbf
  4070d9:	test   al,0x82
  4070db:	and    BYTE PTR [ecx],ch
  4070dd:	(bad)
  4070e1:	push   eax
  4070e2:	mov    bh,0x72
  4070e4:	cmc    
  4070e5:	push   ebx
  4070e6:	or     BYTE PTR [eax-0x43],dh
  4070e9:	dec    edx
  4070ea:	idiv   BYTE PTR [ecx]
  4070ec:	mov    al,0xf7
  4070ee:	inc    eax
  4070ef:	cwde   
  4070f0:	jne    0x407075
  4070f2:	mov    ecx,0xb0ec4fd0
  4070f7:	aam    0xc8
  4070f9:	fst    QWORD PTR [esi-0x48]
  4070fc:	inc    edi
  4070fd:	dec    esi
  4070fe:	mov    edx,esp
  407100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407101:	push   es
  407102:	aam    0x1f
  407104:	enter  0xd6ec,0xe6
  407108:	pop    ds
  407109:	dec    esp
  40710a:	inc    ebx
  40710b:	inc    edi
  40710c:	xchg   esi,eax
  40710d:	test   eax,ecx
  40710f:	jb     0x407124
  407111:	lock mov BYTE PTR [eax],al
  407114:	mov    ecx,edi
  407116:	jl     0x407133
  407118:	sub    ch,0xff
  40711b:	ss mov ecx,0x83cec459
  407121:	repnz hlt 
  407123:	sahf   
  407124:	mov    esp,0xc4e43313
  407129:	dec    ecx
  40712a:	and    ebx,DWORD PTR [edi+esi*1-0x31]
  40712e:	and    ch,cl
  407130:	adc    dl,ch
  407132:	ja     0x407143
  407134:	mov    eax,0x530adfc0
  407139:	es and cl,bh
  40713c:	call   0x2395:0x276848a6
  407143:	(bad)  
  407144:	fdiv   DWORD PTR [esp+eiz*4+0x614ad5b1]
  40714b:	adc    eax,0x1c76d4ec
  407150:	popf   
  407151:	fwait
  407152:	lea    edi,[ebx]
  407154:	inc    ecx
  407155:	mov    ds:0x8356af37,al
  40715a:	jae    0x40719a
  40715c:	popf   
  40715d:	xor    edx,DWORD PTR [eax+edx*8+0x310f8e36]
  407164:	xor    al,0x45
  407166:	in     al,dx
  407167:	shl    BYTE PTR [ebx+0x46],cl
  40716a:	ins    BYTE PTR es:[edi],dx
  40716b:	imul   edx,DWORD PTR [edi+0x23],0xffffffb6
  40716f:	rcl    DWORD PTR [ebp+0x7c],cl
  407172:	push   0x7123897
  407177:	jl     0x4071af
  407179:	pop    ecx
  40717a:	mov    ch,0xb6
  40717c:	in     eax,0xd3
  40717e:	xchg   esi,eax
  40717f:	add    ecx,DWORD PTR [ebx+0x23]
  407182:	or     ebp,DWORD PTR [edx+0x4b]
  407185:	adc    ch,al
  407187:	dec    ebp
  407188:	(bad)  
  407189:	mov    eax,0x49ac3331
  40718e:	js     0x40714c
  407190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407191:	jmp    0xd95f:0xa97bae6a
  407198:	lahf   
  407199:	iret   
  40719a:	mov    BYTE PTR [esi-0x728d1539],bh
  4071a0:	dec    DWORD PTR [ecx]
  4071a2:	sbb    eax,0xe9421237
  4071a7:	test   DWORD PTR [edi-0x72b1968],edx
  4071ad:	pop    ds
  4071ae:	mov    al,ds:0xb843a764
  4071b3:	stos   DWORD PTR es:[edi],eax
  4071b4:	or     edi,DWORD PTR ds:0x7784d156
  4071ba:	mov    ss,WORD PTR [edx+0x61]
  4071bd:	and    dl,BYTE PTR [esi]
  4071bf:	in     eax,0x12
  4071c1:	sub    ch,BYTE PTR [ebx+0x379ea882]
  4071c7:	push   ebp
  4071c8:	repz addr16 out dx,eax
  4071cb:	xor    ebx,DWORD PTR [eax]
  4071cd:	retf   
  4071ce:	loopne 0x4071ff
  4071d0:	xor    DWORD PTR [ecx],0x15
  4071d3:	mov    cl,0xe4
  4071d5:	push   cs
  4071d6:	cmp    al,0xea
  4071d8:	lds    esi,FWORD PTR [edx-0x1b]
  4071db:	sbb    al,BYTE PTR [ecx+0x5e]
  4071de:	mov    ds:0x59e4cc5a,eax
  4071e3:	ins    BYTE PTR es:[edi],dx
  4071e4:	aam    0x82
  4071e6:	mov    ch,0xb5
  4071e8:	gs sbb esp,edx
  4071eb:	mov    al,0x5c
  4071ed:	mov    eax,0xd24dff52
  4071f2:	adc    bh,cl
  4071f4:	ror    DWORD PTR [eax],0xc9
  4071f7:	iret   
  4071f8:	xor    cl,BYTE PTR [esi+0x7ebfaac]
  4071fe:	repnz sub al,0xf4
  407201:	push   esp
  407202:	not    ecx
  407204:	scas   al,BYTE PTR es:[edi]
  407205:	or     DWORD PTR [ebp-0x5b778fe3],0x7909b49d
  40720f:	pop    es
  407210:	xchg   esp,eax
  407211:	xor    eax,0x2a3de54
  407216:	nop
  407217:	xchg   edx,eax
  407218:	xor    BYTE PTR [edi],0x2
  40721b:	jnp    0x4071fc
  40721d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721e:	bound  edx,QWORD PTR [edi+ebx*4-0x3]
  407222:	xor    BYTE PTR [edi],dh
  407224:	cmp    BYTE PTR [ecx+0x21],dh
  407227:	push   ebp
  407228:	imul   eax,DWORD PTR [edx],0x2359762b
  40722e:	bound  ecx,QWORD PTR [eax-0x139aae0c]
  407234:	test   eax,0xfedaa01c
  407239:	cmovle ebx,DWORD PTR [eax-0x1f20d496]
  407240:	xchg   eax,edx
  407242:	test   DWORD PTR [esi+0x2b],edx
  407245:	(bad)  
  407246:	imul   ebx,eax,0x64
  407249:	adc    al,0xe
  40724b:	and    al,0x63
  40724d:	test   al,0x1a
  40724f:	test   edi,edx
  407251:	repz iret 
  407253:	cmp    dl,BYTE PTR [edx+0x6b]
  407256:	jmp    0xb49f:0x29f1dea9
  40725d:	cdq    
  40725e:	adc    cl,BYTE PTR [eax-0x7877d665]
  407264:	push   ss
  407265:	inc    esi
  407266:	ds or  eax,ebp
  407269:	hlt    
  40726a:	mov    bl,0xa3
  40726c:	xchg   edx,eax
  40726d:	(bad)  
  40726f:	and    ebx,DWORD PTR [edx+0x245f09de]
  407275:	cdq    
  407276:	ins    DWORD PTR es:[edi],dx
  407277:	jo     0x407215
  407279:	mul    DWORD PTR [edi]
  40727b:	mov    dl,0xd2
  40727d:	mov    dh,0xfb
  40727f:	div    ebx
  407281:	into   
  407282:	adc    ah,BYTE PTR [ecx]
  407284:	jmp    0x59548538
  407289:	sti    
  40728a:	repz jae 0x407261
  40728d:	lea    esp,[esi+0x6d]
  407290:	sub    bh,ah
  407292:	ud2    
  407294:	jecxz  0x407302
  407296:	outs   dx,DWORD PTR ds:[esi]
  407297:	sub    eax,0xd033f933
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	(bad)  
  4072bc:	jl     0x4072e6
  4072be:	sar    DWORD PTR [ebp-0x424141b1],1
  4072c4:	les    edi,FWORD PTR [esi+0x608015be]
  4072ca:	fistp  DWORD PTR [esi-0x1cce2a9c]
  4072d0:	in     al,dx
  4072d1:	push   esi
  4072d2:	lds    ebp,FWORD PTR [edx-0x28]
  4072d5:	mov    edx,0xd0dd757a
  4072da:	mov    cl,0xd1
  4072dc:	test   ah,0x6
  4072df:	lock fbstp TBYTE PTR [edx]
  4072e2:	leave  
  4072e3:	ja     0x40728b
  4072e5:	inc    edi
  4072e6:	push   eax
  4072e8:	sub    DWORD PTR [eax+ebx*4-0x1a2a4eac],0x9
  4072f0:	adc    eax,0xa9aec74b
  4072f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f6:	fidiv  DWORD PTR [bx+si+0x68]
  4072fa:	adc    eax,0xe7f9e834
  4072ff:	inc    eax
  407300:	add    DWORD PTR ds:0xd90c0fc2,ecx
  407306:	mov    ecx,0x2f1d460e
  40730b:	cli    
  40730c:	sbb    eax,DWORD PTR [ebp-0x24b64446]
  407312:	mov    BYTE PTR [esi-0x521ce5c1],cl
  407318:	aam    0x16
  40731a:	jecxz  0x4072a4
  40731c:	add    al,0x6f
  40731e:	pusha  
  40731f:	cs ss inc esi
  407322:	mov    eax,ds:0x35d14595
  407327:	shr    BYTE PTR [esi],1
  407329:	or     BYTE PTR ds:0x4e506d51,dh
  40732f:	les    eax,FWORD PTR [eax]
  407331:	and    ebx,DWORD PTR [eax]
  407333:	(bad)
  407336:	dec    ebx
  407337:	add    DWORD PTR [eax],edx
  407339:	jg     0x4072c6
  40733b:	add    dl,bh
  40733d:	mov    BYTE PTR [esp+edi*8-0x3ba9278d],ah
  407344:	mov    edx,0x22501dec
  407349:	mov    dl,0x8
  40734b:	stc    
  40734c:	outs   dx,DWORD PTR ds:[esi]
  40734d:	daa    
  40734e:	stc    
  40734f:	retf   
  407350:	shl    esp,cl
  407352:	aam    0xbb
  407354:	pop    ds
  407355:	test   eax,0x8a56d190
  40735a:	jno    0x4073b2
  40735c:	call   0x235c050f
  407361:	popf   
  407362:	in     al,0x7b
  407364:	cmc    
  407365:	int    0x48
  407367:	xor    al,0x66
  407369:	mov    cl,0x91
  40736b:	vsubsd xmm7,xmm3,QWORD PTR [edi+0x4c]
  407370:	pop    ebx
  407371:	mov    esi,0xa6af795
  407376:	pand   mm7,QWORD PTR [eax]
  407379:	les    ecx,FWORD PTR [eax]
  40737b:	les    ebx,FWORD PTR [ebp+0x4f677cb3]
  407381:	push   eax
  407382:	jbe    0x407383
  407384:	add    al,0x70
  407386:	aad    0x41
  407388:	mov    edi,0x7108e1f9
  40738d:	dec    esi
  40738e:	sbb    DWORD PTR ds:[edx+0x21aec6e],esi
  407395:	pop    esp
  407396:	inc    esi
  407397:	inc    esi
  407398:	cmp    ah,BYTE PTR [edx+edx*4+0x6d]
  40739c:	mov    ebx,DWORD PTR [esi+0x79]
  40739f:	add    al,0x8
  4073a1:	ins    BYTE PTR es:[edi],dx
  4073a2:	adc    ebp,esi
  4073a4:	mov    ecx,0xdfd0e16
  4073a9:	cmp    bl,ah
  4073ab:	repz jne 0x4073c8
  4073ae:	jmp    0xb7bbec67
  4073b3:	xchg   esi,eax
  4073b4:	je     0x407422
  4073b6:	or     eax,0x8a3c997a
  4073bb:	push   0x616fbf38
  4073c0:	addr16 jle 0x40735c
  4073c3:	adc    ch,cl
  4073c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073c6:	jnp    0x407410
  4073c8:	push   esp
  4073c9:	inc    edi
  4073ca:	dec    esp
  4073cb:	sub    cl,BYTE PTR [edx]
  4073cd:	sbb    DWORD PTR [ebx+esi*8-0x3d15b757],0x4
  4073d5:	or     edi,ecx
  4073d7:	jle    0x40737e
  4073d9:	jmp    0xa73d9e85
  4073de:	mov    al,ds:0xcc452288
  4073e3:	push   edi
  4073e4:	mov    ecx,ebp
  4073e6:	outs   dx,DWORD PTR ds:[esi]
  4073e7:	stc    
  4073e8:	jae    0x407461
  4073ea:	xchg   edx,eax
  4073eb:	mov    al,ds:0x4631f757
  4073f0:	mov    bl,0xe8
  4073f2:	stos   BYTE PTR es:[edi],al
  4073f3:	jp     0x407427
  4073f5:	arpl   WORD PTR [esi-0x668c2457],si
  4073fb:	and    BYTE PTR [ebx],0x5
  4073fe:	xchg   edx,eax
  4073ff:	mov    dl,0x67
  407401:	jge    0x4073b1
  407403:	enter  0xc182,0x31
  407407:	add    ch,ch
  407409:	mov    eax,ds:0xe09bec45
  40740e:	sbb    al,0xb1
  407410:	test   DWORD PTR [eax+0xc36b356],eax
  407416:	imul   ebx,DWORD PTR [ebp-0x3d],0x32d91572
  40741d:	push   esi
  40741e:	(bad)  
  40741f:	sti    
  407420:	imul   edx,DWORD PTR [eax+0x20],0xffffff82
  407424:	xchg   esp,eax
  407425:	cld    
  407426:	cs out dx,eax
  407428:	jb     0x407456
  40742a:	dec    ecx
  40742b:	ror    BYTE PTR [ecx+0x43cb8b79],cl
  407431:	add    edi,DWORD PTR ds:[ecx]
  407434:	scas   al,BYTE PTR es:[edi]
  407435:	mov    ah,0xdb
  407437:	mov    cl,bh
  407439:	dec    ecx
  40743a:	fwait
  40743b:	jb     0x4074b6
  40743d:	retf   0x8cd0
  407440:	xchg   esp,eax
  407441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407442:	int    0xec
  407444:	les    esp,FWORD PTR [ecx+0x60]
  407447:	hlt    
  407448:	fstp   DWORD PTR [edi+0x77650150]
  40744e:	cld    
  40744f:	sar    bl,1
  407451:	call   0x85e4209f
  407456:	test   eax,0xece2c1e
  40745b:	mov    dl,0xc
  40745d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40745e:	and    al,0xd0
  407460:	mov    dl,BYTE PTR [edi+0x339aa4a]
  407466:	xchg   esp,eax
  407467:	xchg   dl,al
  407469:	mov    ds:0xbf88f6a4,eax
  40746e:	jl     0x4073f8
  407470:	in     al,dx
  407471:	dec    edi
  407472:	and    eax,0xc71e1c47
  407477:	mov    dh,0xc5
  407479:	jp     0x407407
  40747b:	push   esi
  40747c:	loop   0x407458
  40747e:	pop    edx
  40747f:	arpl   WORD PTR [esi],dx
  407481:	fwait
  407482:	xchg   ch,ch
  407484:	shr    esp,cl
  407486:	fs scas al,BYTE PTR es:[edi]
  407488:	outs   dx,DWORD PTR ds:[esi]
  407489:	cmp    ebp,eax
  40748b:	test   BYTE PTR [ebp+0x29bc06a2],bh
  407491:	stos   BYTE PTR es:[edi],al
  407492:	jmp    0x4852:0x98a96036
  407499:	shl    BYTE PTR [edi-0x748b863d],cl
  40749f:	or     al,0x21
  4074a1:	pop    ds
  4074a2:	push   eax
  4074a3:	ret    
  4074a4:	es push edx
  4074a6:	sub    al,0xb3
  4074a8:	push   ecx
  4074a9:	mov    ecx,0x754564ed
  4074ae:	sub    al,0x7e
  4074b0:	das    
  4074b1:	out    dx,al
  4074b2:	adc    esi,DWORD PTR [esi+ebp*2+0xb]
  4074b6:	push   edx
  4074b7:	add    eax,0xe8d34ce0
  4074bc:	or     eax,0xc3592b3c
  4074c1:	in     eax,dx
  4074c2:	add    bl,dh
  4074c4:	mov    bh,0x2a
  4074c6:	and    eax,0xccc2aab1
  4074cb:	adc    BYTE PTR [edx+0x2c],bh
  4074ce:	mov    eax,ds:0x36eb644
  4074d3:	ja     0x40745a
  4074d5:	in     al,0x86
  4074d7:	sub    BYTE PTR [edx],dl
  4074d9:	(bad)  
  4074da:	mov    ebx,0x137541a9
  4074df:	inc    edx
  4074e0:	pop    edi
  4074e1:	inc    BYTE PTR [edx+0x4c]
  4074e4:	mul    WORD PTR [edi+0x6c579164]
  4074eb:	fld    QWORD PTR [eax]
  4074ed:	cmp    BYTE PTR [ebp+edi*2+0x7c4ff6ab],0x2b
  4074f5:	dec    ebp
  4074f6:	leave  
  4074f7:	loop   0x407544
  4074f9:	nop
  4074fa:	inc    ebp
  4074fb:	mov    DWORD PTR [edx+ecx*4+0x74d840ed],eax
  407502:	stc    
  407503:	test   BYTE PTR [esp-0x57947a46],al
  40750a:	pusha  
  40750b:	adc    esi,ecx
  40750d:	lock ss push eax
  407510:	mov    esp,0xd5d61e11
  407515:	inc    edx
  407516:	jnp    0x407501
  407518:	cmp    dl,BYTE PTR [eax-0x3a]
  40751b:	out    0x37,eax
  40751d:	out    dx,al
  40751e:	ss in  al,0xf2
  407521:	jbe    0x407586
  407523:	out    0xac,al
  407525:	xchg   esp,eax
  407526:	xor    dl,BYTE PTR [ebp-0x7f]
  407529:	xor    DWORD PTR [esi+0x7849c125],eax
  40752f:	in     eax,dx
  407530:	pop    ss
  407531:	xchg   BYTE PTR [edi-0xa],dh
  407534:	mov    ds:0xa458a78e,al
  407539:	out    0x25,al
  40753b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40753c:	pop    edi
  40753d:	ins    BYTE PTR es:[edi],dx
  40753e:	pop    ds
  40753f:	jg     0x4074e5
  407541:	jbe    0x407582
  407543:	ja     0x40753a
  407545:	test   BYTE PTR [ecx],dh
  407547:	dec    BYTE PTR [eax]
  407549:	stc    
  40754a:	jl     0x407515
  40754c:	aaa    
  40754d:	and    bh,ch
  40754f:	push   0x8f4500b7
  407554:	jge    0x4075a5
  407556:	xor    ch,BYTE PTR [ebx-0x53]
  407559:	push   edi
  40755a:	jbe    0x407517
  40755c:	or     bl,ah
  40755e:	test   eax,0x68ce154f
  407563:	and    ah,ah
  407565:	mov    ds:0x9f87e1b8,al
  40756a:	mov    bl,0xd6
  40756c:	push   eax
  40756d:	and    BYTE PTR [eax+edx*2],cl
  407570:	(bad)  
  407571:	mov    ch,0x77
  407573:	pop    edi
  407574:	push   cs
  407575:	mov    dl,0x4b
  407577:	jne    0x407545
  407579:	fs inc edx
  40757b:	(bad)
  40757f:	retf   0xe4d1
  407582:	lds    ebp,FWORD PTR es:[ebx-0x1af9802b]
  407589:	sbb    cl,BYTE PTR [ecx+0x7f8c7c14]
  40758f:	push   0xffffff9f
  407591:	pop    ebp
  407592:	scas   ax,WORD PTR es:[edi]
  407594:	fiadd  WORD PTR [esi-0x39]
  407597:	and    eax,0x6ce1d2e8
  40759c:	ins    BYTE PTR es:[edi],dx
  40759d:	xchg   ebp,eax
  40759e:	xor    DWORD PTR [ebx],esi
  4075a0:	push   ds
  4075a1:	sbb    BYTE PTR [ecx+0x5f7ca98f],bh
  4075a7:	mov    dh,0x9e
  4075a9:	mov    ecx,0x4a564ffa
  4075ae:	iret   
  4075af:	pushf  
  4075b0:	xchg   edx,eax
  4075b1:	punpcklbw mm3,DWORD PTR [ecx+edx*4]
  4075b5:	retf   0x64b7
  4075b8:	test   DWORD PTR [eax+0x4214e68c],edx
  4075be:	cmp    bl,cl
  4075c0:	mov    bh,0x5b
  4075c2:	xor    edi,DWORD PTR [esi+0x7082f643]
  4075c8:	ja     0x407569
  4075ca:	adc    ebx,DWORD PTR [ecx+0x48b977d5]
  4075d0:	idiv   ch
  4075d2:	mov    al,0x0
  4075d4:	icebp  
  4075d5:	lea    ebx,[edi-0x64bd6b29]
  4075db:	xor    bl,BYTE PTR [ebx+0x69c2e21b]
  4075e1:	cwde   
  4075e2:	les    edi,FWORD PTR [edx+edx*4-0x5080cc6f]
  4075e9:	pushf  
  4075ea:	sbb    eax,0xa46f45f
  4075ef:	mov    ecx,0x249d5842
  4075f4:	mov    ebp,0x66ef0c6
  4075f9:	addr16 loopne 0x407626
  4075fc:	cwde   
  4075fd:	push   ds
  4075fe:	aas    
  4075ff:	mov    cl,0xb6
  407601:	and    ecx,esp
  407603:	mov    ?,ecx
  407605:	cwde   
  407606:	fsubrp st(3),st
  407608:	inc    esp
  407609:	(bad)  
  40760a:	js     0x4075af
  40760c:	xor    DWORD PTR [ebp+0x69b5d97f],edi
  407612:	add    eax,0xc1024ba4
  407617:	cmp    edx,ebx
  407619:	fdiv   QWORD PTR [edx-0x69cceb5f]
  40761f:	pop    ecx
  407620:	arpl   WORD PTR [edx+edi*8],sp
  407623:	pop    es
  407624:	mov    edi,0xa762f8f
  407629:	fsubr  QWORD PTR [edx+0x31]
  40762c:	or     eax,0x5174a2b1
  407631:	inc    esi
  407632:	push   esi
  407633:	mov    esi,0xfbde266d
  407638:	sbb    eax,0xa5a08858
  40763d:	inc    edx
  40763e:	sar    ecx,1
  407640:	inc    ecx
  407641:	adc    dl,0xb8
  407644:	jp     0x4075da
  407646:	imul   DWORD PTR [edi+0x50]
  407649:	cmp    BYTE PTR [ebx],ah
  40764b:	mov    DWORD PTR [esi+0x4],edi
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fld    QWORD PTR [ebx-0x411c69f0]
  40768f:	push   edi
  407690:	mov    esi,0xbec4bdbe
  407695:	mov    esi,0x922631fd
  40769a:	inc    ecx
  40769b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40769c:	adc    edi,DWORD PTR [edi]
  40769e:	mov    ecx,0x54a52022
  4076a3:	add    BYTE PTR [ecx+ebx*8-0x78],bl
  4076a7:	sbb    DWORD PTR [ecx+0x32689ce8],edi
  4076ad:	lock mov ch,0x13
  4076b0:	loope  0x407670
  4076b2:	scas   eax,DWORD PTR es:[edi]
  4076b3:	ficomp DWORD PTR [ecx]
  4076b5:	xchg   edi,eax
  4076b6:	xchg   bl,al
  4076b8:	jmp    0xe817:0x33d615ea
  4076bf:	inc    edx
  4076c0:	sbb    bl,cl
  4076c2:	mov    bl,0xa3
  4076c4:	mov    al,ds:0x491fb044
  4076c9:	lea    esi,[ecx-0x38e19079]
  4076cf:	pop    edx
  4076d0:	pop    eax
  4076d1:	pop    ebx
  4076d2:	cli    
  4076d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d4:	push   esp
  4076d5:	div    DWORD PTR [ecx+0x7524da38]
  4076db:	pushf  
  4076dc:	sub    ecx,esp
  4076de:	imul   esp,DWORD PTR [ebp+0x11],0x45
  4076e2:	cmp    DWORD PTR [ebp+0x45],0xffffffc6
  4076e6:	cmp    esp,ebp
  4076e8:	sub    DWORD PTR [ebx-0x39e2e554],edi
  4076ee:	js     0x40768c
  4076f0:	mov    ds:0x96d612df,al
  4076f5:	xor    eax,0xfeb37e18
  4076fa:	xor    BYTE PTR [ecx+0x381f0345],bl
  407700:	mov    cl,0xdd
  407702:	mov    bh,0x83
  407704:	inc    edx
  407705:	cld    
  407706:	or     ah,BYTE PTR [ebp-0x5a]
  407709:	daa    
  40770a:	cmp    DWORD PTR [esi],edi
  40770c:	jge    0x407780
  40770e:	xchg   esi,eax
  40770f:	les    ecx,FWORD PTR gs:[eax+0x407fffc6]
  407716:	leave  
  407717:	xchg   esi,eax
  407718:	and    al,0x6d
  40771a:	daa    
  40771b:	xor    al,0xb4
  40771d:	mov    ch,0x3f
  40771f:	or     BYTE PTR [esp+ebx*4-0xb02deb1],0x48
  407727:	cmp    edx,DWORD PTR [ecx+eiz*2]
  40772a:	leave  
  40772b:	xchg   edi,eax
  40772c:	icebp  
  40772d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40772e:	xchg   ebp,eax
  40772f:	mov    eax,ds:0x6c8342e9
  407734:	and    al,0xbb
  407736:	imul   edi
  407738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407739:	xchg   BYTE PTR [eax],al
  40773b:	jae    0x40776f
  40773d:	sar    DWORD PTR [ebp-0x2b],1
  407740:	leave  
  407741:	jae    0x407725
  407743:	and    edx,ebp
  407745:	js     0x407751
  407747:	xor    dl,BYTE PTR [ecx-0x4e021244]
  40774d:	xchg   esp,eax
  40774e:	xor    BYTE PTR [esi],bh
  407750:	cmp    bh,BYTE PTR [eax+0x2be64ab9]
  407756:	mov    cl,0xe
  407758:	pushf  
  407759:	mov    ah,BYTE PTR [ecx]
  40775b:	ins    BYTE PTR es:[edi],dx
  40775c:	and    edx,edi
  40775e:	scas   al,BYTE PTR es:[edi]
  40775f:	inc    esi
  407760:	jne    0x407765
  407762:	hlt    
  407763:	lea    esp,[esi]
  407765:	sub    BYTE PTR [ecx-0x60],al
  407768:	es in  eax,0xcc
  40776b:	adc    ebx,ebx
  40776d:	pop    edx
  40776e:	and    edi,eax
  407770:	inc    ebp
  407771:	dec    ebp
  407772:	(bad)  
  407773:	mov    ecx,0xf0093f2c
  407778:	int3   
  407779:	popa   
  40777a:	xchg   esi,eax
  40777b:	out    0xdb,al
  40777d:	aad    0x54
  40777f:	or     al,0xa1
  407781:	xor    cl,ch
  407783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407784:	(bad)  
  407785:	sti    
  407786:	icebp  
  407787:	push   ebp
  407788:	sub    DWORD PTR [ebp-0x5a2016be],0x33
  40778f:	jge    0x407804
  407791:	sbb    esi,DWORD PTR [edx-0x80]
  407794:	aam    0xd8
  407796:	bound  eax,QWORD PTR ds:0xecaed5b5
  40779c:	rol    BYTE PTR [edi+0x5fff9164],cl
  4077a2:	cmp    BYTE PTR [eax+0x66eefccb],al
  4077a8:	dec    ebx
  4077a9:	cmp    al,BYTE PTR [ebx+0x69151564]
  4077af:	and    al,0xc0
  4077b1:	mov    al,0x6d
  4077b3:	repnz inc esp
  4077b5:	lea    esi,[esi+0x59]
  4077b8:	outs   dx,BYTE PTR ds:[esi]
  4077b9:	or     ebp,0x4c
  4077bc:	or     DWORD PTR [esi-0x4],edx
  4077bf:	inc    ecx
  4077c0:	pop    esi
  4077c1:	cmp    esi,esi
  4077c3:	dec    ebp
  4077c4:	mov    bl,0xf6
  4077c6:	arpl   bx,bp
  4077c8:	add    ebx,esp
  4077ca:	xchg   ecx,eax
  4077cb:	mov    edx,0x858fbc55
  4077d0:	mov    ebp,0x5cae7633
  4077d5:	shl    BYTE PTR [eax],cl
  4077d7:	add    ecx,DWORD PTR [esp+esi*1]
  4077da:	sbb    cl,BYTE PTR [eax+0x1af450ad]
  4077e0:	xchg   cl,dl
  4077e2:	dec    eax
  4077e3:	inc    ebx
  4077e4:	xchg   DWORD PTR [edx],ebx
  4077e6:	cmp    esp,DWORD PTR [esi+0x31]
  4077e9:	je     0x4077cc
  4077eb:	and    DWORD PTR [ecx],ebx
  4077ed:	outs   dx,DWORD PTR ds:[esi]
  4077ee:	xor    DWORD PTR [esi],eax
  4077f0:	push   edi
  4077f1:	jns    0x4077b7
  4077f3:	cmc    
  4077f4:	fwait
  4077f5:	idiv   al
  4077f7:	ds pop eax
  4077f9:	adc    al,0xac
  4077fb:	retf   0x9d64
  4077fe:	pop    ebp
  4077ff:	cwde   
  407800:	shl    dl,0x7e
  407803:	adc    eax,0x6cfe4038
  407808:	js     0x4077ae
  40780a:	jae    0x4077b2
  40780c:	(bad)
  40780f:	icebp  
  407810:	push   0xbda38c93
  407815:	or     DWORD PTR [esi+0x26d72e05],edx
  40781b:	push   esi
  40781c:	push   edi
  40781d:	mov    eax,ds:0xcbd73c24
  407822:	fbstp  TBYTE PTR [ebx+0x71]
  407825:	lods   eax,DWORD PTR ds:[esi]
  407826:	inc    ebx
  407827:	nop
  407828:	repnz push ss
  40782a:	shr    DWORD PTR [ebp+0x77],0x64
  40782e:	sub    cl,dh
  407830:	push   eax
  407831:	iret   
  407832:	mov    al,ds:0xcc81165
  407837:	jge    0x407835
  407839:	pop    edx
  40783a:	scas   eax,DWORD PTR es:[edi]
  40783b:	int3   
  40783c:	and    DWORD PTR [esi+0x7ecb2ecb],ecx
  407842:	and    al,0x49
  407844:	jnp    0x40785b
  407846:	jecxz  0x40783d
  407848:	pop    ds
  407849:	sub    ebp,DWORD PTR [ebp+0x220e701c]
  40784f:	push   ebx
  407850:	fcomip st,st(6)
  407852:	inc    ecx
  407853:	fnsave [ebx+0x17]
  407856:	fwait
  407857:	popw   ss
  407859:	(bad)  
  40785b:	xchg   ebp,eax
  40785c:	test   DWORD PTR [ecx],0x7b86380
  407862:	ja     0x407895
  407864:	jl     0x40789c
  407866:	(bad)  
  407867:	mov    dh,0x48
  407869:	add    al,0xd2
  40786b:	ins    BYTE PTR es:[edi],dx
  40786c:	call   0x2bbb8849
  407871:	add    eax,0xb40538ca
  407876:	xor    BYTE PTR [esi],0x6b
  407879:	test   dl,bh
  40787b:	push   eax
  40787c:	enter  0x8ff6,0x1d
  407880:	fcomp  st(4)
  407882:	in     eax,dx
  407883:	int3   
  407884:	pusha  
  407885:	push   esp
  407886:	ror    DWORD PTR [edi-0x77a98359],0x57
  40788d:	loopne 0x4078fd
  40788f:	sub    al,0x69
  407891:	dec    edx
  407892:	(bad)  
  407893:	aaa    
  407894:	daa    
  407895:	clc    
  407896:	sub    cl,bl
  407898:	loop   0x4078a0
  40789a:	mov    ah,0x76
  40789c:	jle    0x4078af
  40789e:	mov    dl,0xfb
  4078a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a1:	or     DWORD PTR [edi-0xa514d72],edi
  4078a7:	mov    ah,0x8
  4078a9:	ja     0x407840
  4078ab:	int    0x28
  4078ad:	scas   al,BYTE PTR es:[edi]
  4078ae:	dec    esi
  4078af:	pop    ebp
  4078b0:	call   0x406c2445
  4078b5:	inc    edi
  4078b6:	mov    bl,BYTE PTR [ebp+0x2a558a95]
  4078bc:	mov    ebp,0xc881ab22
  4078c1:	jb     0x407887
  4078c3:	cmp    esi,esi
  4078c5:	pop    ebp
  4078c6:	mul    DWORD PTR [edi-0x23]
  4078c9:	jg     0x407887
  4078cb:	xor    eax,DWORD PTR [ebp+0x4a7b8744]
  4078d1:	push   ebp
  4078d2:	cmp    BYTE PTR [ebp+ecx*2+0x633ff54],dl
  4078d9:	shl    BYTE PTR [edx-0x5c0b7eed],1
  4078df:	mov    bh,0x77
  4078e1:	div    DWORD PTR ds:0x900f710f
  4078e7:	sti    
  4078e8:	dec    edx
  4078e9:	scas   al,BYTE PTR es:[edi]
  4078ea:	call   0xaa66:0x693ec0c5
  4078f1:	jl     0x4078ec
  4078f3:	jl     0x407920
  4078f5:	dec    esp
  4078f6:	mov    edx,0x96cbaa7b
  4078fb:	add    DWORD PTR [ebp+0x5a296c68],esi
  407901:	and    al,0x1c
  407903:	and    eax,0x34b0a185
  407908:	inc    ebx
  407909:	int    0x3c
  40790b:	push   eax
  40790c:	imul   ebp,ebp,0x5
  40790f:	in     eax,dx
  407910:	adc    al,0xe4
  407912:	test   dl,ah
  407914:	jb     0x4078de
  407916:	sub    esp,ebp
  407918:	test   eax,0x941bff2d
  40791d:	sbb    eax,0xc440627a
  407922:	mov    BYTE PTR [si],dh
  407925:	scas   al,BYTE PTR es:[edi]
  407926:	dec    ebx
  407927:	pop    es
  407928:	outs   dx,DWORD PTR ds:[esi]
  407929:	sbb    al,0x74
  40792b:	cmp    al,0xb5
  40792d:	and    DWORD PTR [edi-0x14c4a26],edx
  407933:	int3   
  407934:	pop    ebx
  407935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407936:	add    DWORD PTR [esi+0x55cc1fbd],ebx
  40793c:	lock sbb DWORD PTR [esp+edx*4-0x10],0x2ff2cfdf
  407945:	popa   
  407946:	call   0xa8df:0xd7ef7958
  40794d:	sub    ebx,edi
  40794f:	ins    DWORD PTR es:[edi],dx
  407950:	sar    BYTE PTR [edi-0x5e],cl
  407953:	xchg   DWORD PTR [edx+0x6e5912b5],edi
  407959:	dec    edi
  40795a:	fs stc 
  40795c:	in     eax,dx
  40795d:	retf   0x92b8
  407960:	jp     0x407957
  407962:	aam    0xc5
  407964:	dec    edx
  407965:	xlat   BYTE PTR ds:[ebx]
  407966:	jge    0x407982
  407968:	push   edi
  407969:	sub    al,0x1a
  40796b:	add    edx,eax
  40796d:	mov    es,edi
  40796f:	mov    bh,BYTE PTR [ecx+0x32]
  407972:	mov    bl,0xaf
  407974:	mov    al,ds:0x59ddf381
  407979:	dec    eax
  40797a:	or     edi,DWORD PTR [esi+0x0]
  40797d:	or     ecx,eax
  40797f:	jmp    0x9d9cf382
  407984:	enter  0x3b4b,0xad
  407988:	mov    ds:0xfeecceb0,al
  40798d:	dec    ecx
  40798e:	(bad)  [edx-0x6f]
  407991:	(bad)  
  407992:	xchg   BYTE PTR [eax+edi*4+0x23cee4c8],dh
  407999:	fisub  WORD PTR [ecx-0x7f]
  40799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40799d:	jp     0x4079b4
  40799f:	stos   DWORD PTR es:[edi],eax
  4079a0:	pop    edx
  4079a1:	call   0x2500e382
  4079a6:	jne    0x407a00
  4079a8:	dec    edx
  4079aa:	in     al,dx
  4079ab:	pop    ebx
  4079ac:	mov    bh,0x97
  4079ae:	cmp    bl,BYTE PTR [edx+0x61]
  4079b1:	jne    0x4079de
  4079b3:	ret    
  4079b4:	dec    eax
  4079b5:	inc    DWORD PTR [edx]
  4079b7:	push   edx
  4079b8:	pop    ss
  4079b9:	pop    es
  4079ba:	sahf   
  4079bb:	sbb    cl,BYTE PTR [ebx+0x1e]
  4079be:	cmc    
  4079bf:	mov    edx,0x17eac62d
  4079c4:	cld    
  4079c5:	inc    edx
  4079c6:	jno    0x407a05
  4079c8:	sub    edx,ecx
  4079ca:	cld    
  4079cb:	repnz push ebx
  4079cd:	popa   
  4079ce:	sbb    bh,BYTE PTR [ecx+0x453b56da]
  4079d4:	(bad)  
  4079d5:	inc    eax
  4079d6:	jmp    0x9ab1ebf7
  4079db:	mov    ds:0xd708d0b6,al
  4079e0:	call   0x20b39c6b
  4079e5:	jns    0x407a32
  4079e7:	xchg   ebp,eax
  4079e8:	and    DWORD PTR [esp+ebp*8+0x3d],eax
  4079ec:	dec    ebx
  4079ed:	pop    ss
  4079ee:	popa   
  4079ef:	adc    eax,0xdbd17adb
  4079f4:	add    BYTE PTR [esi-0x40a1a219],0x8a
  4079fb:	iret   
  4079fc:	pop    esi
  4079fd:	repnz mov ebx,0x43e26705
  407a03:	lea    edx,[ebp+0x27825]
  407a09:	pop    esi
  407a0a:	sti    
  407a0b:	sub    al,0x8d
  407a0d:	scas   eax,DWORD PTR es:[edi]
  407a0e:	push   esi
  407a0f:	or     DWORD PTR [ecx-0x5863e73c],eax
  407a15:	or     DWORD PTR [edx],0x50
  407a18:	scas   eax,DWORD PTR es:[edi]
  407a19:	adc    al,0x8b
  407a1b:	push   ebp
  407a1c:	test   al,0xc1
  407a1e:	loopne 0x407a22
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	test   BYTE PTR [esi],0x60
  407a81:	sahf   
  407a82:	mov    ebp,0xbdbebe5d
  407a87:	les    edi,FWORD PTR [esi+0x3d3778be]
  407a8d:	mov    esi,edx
  407a8f:	inc    esi
  407a90:	fisttp QWORD PTR [esi-0x377f02d7]
  407a96:	sub    eax,0x58b8922d
  407a9b:	pusha  
  407a9c:	in     al,dx
  407a9d:	inc    ebx
  407a9e:	cmc    
  407a9f:	stc    
  407aa0:	jne    0x407ad2
  407aa2:	shr    DWORD PTR [ecx+0x60dbf145],0x9d
  407aa9:	mov    edx,0xb0b83a97
  407aae:	mov    edx,0x757f854d
  407ab3:	xchg   BYTE PTR [ebx-0x52],cl
  407ab6:	cmp    BYTE PTR [edx+0x37],0x23
  407aba:	jns    0x407a97
  407abc:	push   ds
  407abd:	and    BYTE PTR [edx+0x6a],dl
  407ac0:	inc    ebx
  407ac1:	add    DWORD PTR [edx],0x40
  407ac4:	scas   eax,DWORD PTR es:[edi]
  407ac5:	(bad)  
  407ac6:	js     0x407a84
  407ac8:	lods   eax,DWORD PTR ds:[esi]
  407ac9:	int    0xa6
  407acb:	int    0x3c
  407acd:	(bad)  
  407ace:	fucomp st(4)
  407ad0:	fucomip st,st(4)
  407ad2:	inc    ebx
  407ad3:	ficom  WORD PTR ds:0xf06613cb
  407ad9:	push   ebp
  407ada:	jae    0x407ad1
  407adc:	test   BYTE PTR [ebx-0x4b3d1c3b],bh
  407ae2:	adc    esi,DWORD PTR ds:0xed4ce3ee
  407ae8:	stc    
  407ae9:	(bad)  
  407aea:	dec    ebx
  407aeb:	rcl    DWORD PTR [esi+0x39],cl
  407aee:	clc    
  407aef:	(bad)  
  407af0:	rcr    BYTE PTR [edi+eiz*1+0x8165aa5],1
  407af7:	pop    ds
  407af8:	dec    edi
  407af9:	pop    eax
  407afa:	jb     0x407af2
  407afc:	and    BYTE PTR [esi+0x54317ed4],bl
  407b02:	mov    ebx,0x5d87cb3b
  407b07:	or     eax,0x47943242
  407b0c:	test   BYTE PTR [edx-0x2e],ch
  407b0f:	sysenter 
  407b11:	cmp    BYTE PTR [edi+0x64],cl
  407b14:	sahf   
  407b15:	notrack jmp DWORD PTR [esi+eax*4]
  407b19:	xor    eax,ebx
  407b1b:	mov    ecx,ebx
  407b1d:	dec    al
  407b1f:	int3   
  407b20:	jbe    0x407abb
  407b22:	push   ebx
  407b23:	rol    BYTE PTR [ebp+0x51],cl
  407b26:	loop   0x407b5c
  407b28:	xor    al,0xa7
  407b2a:	retf   0xce5b
  407b2d:	inc    eax
  407b2e:	push   0x96b67cfb
  407b33:	cmp    ah,cl
  407b35:	push   ss
  407b36:	jmp    0x9d608ba8
  407b3b:	add    al,0xc5
  407b3d:	adc    al,0x94
  407b3f:	pop    es
  407b40:	out    0x7,al
  407b42:	cdq    
  407b43:	sub    BYTE PTR [edi],dh
  407b45:	in     eax,dx
  407b46:	pop    edi
  407b47:	fst    st(4)
  407b49:	or     dh,BYTE PTR [edx+edi*1]
  407b4c:	call   0xf7723f4d
  407b51:	jns    0x407b6f
  407b53:	je     0x407bc2
  407b55:	mov    ebp,0x7928f651
  407b5a:	test   DWORD PTR [eax],0xbf448475
  407b60:	dec    edx
  407b61:	or     esp,DWORD PTR [edx+0x6bf0d5dc]
  407b67:	lea    ebx,[ebx-0x43a115cf]
  407b6d:	test   eax,0x3261b3a6
  407b72:	ror    eax,cl
  407b74:	in     al,dx
  407b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b76:	cmovne ecx,DWORD PTR [ebx+edi*4+0x1b040612]
  407b7e:	inc    edx
  407b7f:	dec    eax
  407b80:	in     al,0xa
  407b82:	into   
  407b83:	and    edi,esp
  407b85:	push   ebx
  407b86:	mov    esp,DWORD PTR [ebx+0x54497957]
  407b8c:	pop    ds
  407b8d:	iret   
  407b8e:	retf   0x567d
  407b91:	push   0x34494c43
  407b96:	iret   
  407b97:	cmp    DWORD PTR ds:0x2f4f5264,eax
  407b9d:	pop    ebp
  407b9e:	sub    DWORD PTR [edi-0x49],esp
  407ba1:	mov    ds:0xff05090e,al
  407ba6:	retf   
  407ba7:	std    
  407ba8:	sbb    BYTE PTR [ecx],bh
  407baa:	out    0x7a,eax
  407bac:	xlat   BYTE PTR ds:[ebx]
  407bad:	imul   eax,ebx,0x54f656fa
  407bb3:	scas   eax,DWORD PTR es:[edi]
  407bb4:	pusha  
  407bb5:	pop    ebx
  407bb6:	test   BYTE PTR ds:0x82dd671f,dl
  407bbc:	shl    DWORD PTR [ebx-0x63],0xf6
  407bc0:	test   DWORD PTR [ecx-0x20b84823],esp
  407bc6:	and    al,0x34
  407bc8:	(bad)  
  407bc9:	(bad)  
  407bca:	call   0xa9a7:0x80b72fbb
  407bd1:	or     al,0xc0
  407bd3:	lahf   
  407bd4:	sub    eax,0xe6138bda
  407bd9:	jbe    0x407b84
  407bdb:	les    ecx,FWORD PTR [ebp+0x2e]
  407bde:	dec    eax
  407bdf:	mov    ecx,0xfaadcfce
  407be4:	mov    al,cl
  407be6:	lock scas al,BYTE PTR es:[edi]
  407be8:	popa   
  407be9:	mov    ah,0x6c
  407beb:	clc    
  407bec:	cmp    al,0xf8
  407bee:	sbb    al,0x4f
  407bf0:	pusha  
  407bf1:	cs dec esp
  407bf3:	not    DWORD PTR [edi-0x29]
  407bf6:	arpl   sp,dx
  407bf8:	mov    bh,0x88
  407bfa:	jge    0x407be8
  407bfc:	enter  0x4662,0x89
  407c00:	fwait
  407c01:	pop    ecx
  407c02:	call   0x2b5e:0xbee9188a
  407c09:	repnz in eax,0x65
  407c0c:	dec    esp
  407c0d:	in     eax,0x62
  407c0f:	int    0xb7
  407c11:	stc    
  407c12:	add    DWORD PTR [ecx+eiz*8+0xd69507a],ebp
  407c19:	lock shl ebp,0xb1
  407c1d:	daa    
  407c1e:	sub    al,0x17
  407c20:	push   0x5091fb68
  407c25:	xchg   edi,eax
  407c26:	pop    edi
  407c27:	cdq    
  407c28:	in     eax,dx
  407c29:	jnp    0x407c81
  407c2b:	xchg   ecx,eax
  407c2c:	call   0x55a5:0x57538369
  407c33:	test   eax,0x6b65d260
  407c38:	pop    esi
  407c39:	fsubr  st(1),st
  407c3b:	add    BYTE PTR [eax],cl
  407c3d:	pop    ecx
  407c3e:	stos   BYTE PTR es:[edi],al
  407c3f:	sub    eax,0xd10244b3
  407c44:	sub    esp,DWORD PTR [eax]
  407c46:	push   ss
  407c47:	sar    DWORD PTR [esi+ebp*2+0x20],1
  407c4b:	xchg   ecx,eax
  407c4c:	sbb    BYTE PTR [esi+0x5e],bl
  407c4f:	frstor [ecx-0x7d]
  407c52:	out    0x15,eax
  407c54:	xor    ch,BYTE PTR cs:[eax+0x9]
  407c58:	stos   DWORD PTR es:[edi],eax
  407c59:	sbb    edx,eax
  407c5b:	jb     0x407c0f
  407c5d:	or     eax,0x212f6118
  407c62:	push   ss
  407c63:	aas    
  407c64:	and    dl,BYTE PTR [edx+0x29]
  407c67:	call   0xf1db:0x88eb0163
  407c6e:	jg     0x407cd1
  407c70:	mov    edx,DWORD PTR [edx]
  407c72:	adc    DWORD PTR [esi-0x673a51d3],eax
  407c78:	mov    ch,0xdf
  407c7a:	pop    edx
  407c7b:	loope  0x407c49
  407c7d:	lods   eax,DWORD PTR ds:[esi]
  407c7e:	dec    esi
  407c7f:	mov    eax,DWORD PTR [esi+eiz*2]
  407c82:	or     eax,0xef127be0
  407c87:	adc    DWORD PTR [eax+esi*2],ebx
  407c8a:	jle    0x407ca3
  407c8c:	ins    DWORD PTR es:[edi],dx
  407c8d:	sub    DWORD PTR [edi-0x6c6bc4a7],esi
  407c93:	push   esi
  407c94:	and    BYTE PTR [ecx+edx*4+0x53],0xc7
  407c99:	or     BYTE PTR [edi],al
  407c9b:	jg     0x407c9c
  407c9d:	dec    edx
  407c9e:	xchg   esi,eax
  407c9f:	xchg   ebx,eax
  407ca0:	sub    DWORD PTR [edx+ecx*1-0x49288151],esp
  407ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ca8:	sbb    DWORD PTR [ebp+0x44f60116],ebx
  407cae:	mov    bl,0xca
  407cb0:	scas   eax,DWORD PTR es:[edi]
  407cb1:	je     0x407c62
  407cb3:	rol    esi,0xfe
  407cb6:	cs test esp,edx
  407cb9:	enter  0x7951,0x2e
  407cbd:	aaa    
  407cbe:	mov    bl,0x65
  407cc0:	scas   al,BYTE PTR es:[edi]
  407cc1:	outs   dx,DWORD PTR ds:[esi]
  407cc2:	mov    cl,0xb0
  407cc4:	mov    esi,0xdd210b52
  407cc9:	stos   DWORD PTR es:[edi],eax
  407cca:	push   edi
  407ccb:	pop    ecx
  407ccc:	mov    bh,0x92
  407cce:	int    0xd9
  407cd0:	ss and bh,ah
  407cd3:	(bad)  
  407cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd6:	les    esp,FWORD PTR [esi-0x35c64f88]
  407cdc:	dec    eax
  407cdd:	shl    DWORD PTR [ecx+eiz*1+0x39],0xa2
  407ce2:	jns    0x407c9d
  407ce4:	cmp    BYTE PTR [esi],bl
  407ce6:	xor    al,0xf7
  407ce8:	ror    DWORD PTR [ebp-0x7],1
  407ceb:	ret    0x68d1
  407cee:	mov    DWORD PTR [esi+0x3998fe7b],ebp
  407cf4:	dec    esp
  407cf5:	push   edx
  407cf6:	inc    esp
  407cf7:	jg     0x407cef
  407cf9:	cmp    DWORD PTR [esi-0x57],0x4f0c5259
  407d00:	outs   dx,BYTE PTR ds:[esi]
  407d01:	and    BYTE PTR [edi-0x6f],al
  407d04:	mov    ebx,0x8957744a
  407d09:	dec    esp
  407d0a:	cmp    BYTE PTR [edi+0x27a5aef5],cl
  407d10:	cmp    eax,0x14b1f2a0
  407d15:	ret    
  407d16:	push   ds
  407d17:	and    DWORD PTR [eax+0x236d0765],esp
  407d1d:	ret    0x745
  407d20:	xor    BYTE PTR [ebx+0x10081860],dh
  407d26:	stc    
  407d27:	jl     0x407da7
  407d29:	dec    ebx
  407d2a:	mov    dh,0x83
  407d2c:	aaa    
  407d2d:	push   es
  407d2e:	popf   
  407d2f:	cmc    
  407d30:	xchg   ebx,eax
  407d31:	sub    edx,DWORD PTR [eax+0x7114f29a]
  407d37:	aam    0xf1
  407d39:	cld    
  407d3a:	jo     0x407d6c
  407d3c:	push   ecx
  407d3d:	lods   eax,DWORD PTR ds:[esi]
  407d3e:	xor    BYTE PTR [ecx],bl
  407d40:	inc    esp
  407d41:	pop    ss
  407d42:	pop    ebp
  407d43:	add    BYTE PTR [esi-0xb],dl
  407d46:	loope  0x407ceb
  407d48:	mov    ds:0x4e8ebcf,al
  407d4d:	jp     0x407da7
  407d4f:	jg     0x407d77
  407d51:	inc    edx
  407d52:	stc    
  407d53:	or     al,BYTE PTR [ebx]
  407d55:	adc    al,0xb4
  407d57:	pop    edx
  407d58:	xchg   ebp,eax
  407d59:	cs loop 0x407dcb
  407d5c:	shr    DWORD PTR [ecx],1
  407d5e:	pop    esp
  407d5f:	js     0x407d55
  407d61:	xor    al,0x96
  407d63:	sub    edi,DWORD PTR [esi+0xa9ca21]
  407d69:	pushw  es
  407d6b:	xor    edi,DWORD PTR [esi+0x133232f0]
  407d71:	pop    eax
  407d72:	sbb    eax,0xffffffbc
  407d75:	arpl   sp,sp
  407d77:	test   ebp,esi
  407d79:	push   ds
  407d7a:	dec    eax
  407d7b:	call   0xcc1a:0x6a30df1
  407d82:	int3   
  407d83:	pop    ebx
  407d84:	fsubr  DWORD PTR [esi+0x232ff6b7]
  407d8a:	int    0x64
  407d8c:	cmp    ebx,esi
  407d8e:	dec    edi
  407d8f:	fwait
  407d90:	pop    edi
  407d91:	dec    edx
  407d92:	jb     0x407e12
  407d94:	or     cl,BYTE PTR [esi-0x52]
  407d97:	and    eax,0x2f27ee79
  407d9c:	ret    
  407d9d:	or     eax,0x5ac5f6ae
  407da2:	or     ah,BYTE PTR gs:[eax+0x2c]
  407da6:	icebp  
  407da7:	pop    ebx
  407da8:	sbb    BYTE PTR [esi+0x35fd381e],cl
  407dae:	mov    ch,0xf7
  407db0:	and    DWORD PTR [ebp-0x3721a793],ebp
  407db6:	es out 0x9e,al
  407db9:	xor    al,0x4a
  407dbb:	and    al,BYTE PTR [ebx-0x26ec36a5]
  407dc1:	xor    cl,bl
  407dc3:	cmc    
  407dc4:	aaa    
  407dc5:	or     BYTE PTR [edi],0xeb
  407dc8:	inc    ecx
  407dc9:	lea    ecx,[ecx]
  407dcb:	and    al,0x20
  407dcd:	daa    
  407dce:	xchg   edx,eax
  407dcf:	push   0x6d255db6
  407dd4:	cmp    DWORD PTR [ecx-0x35ce3e69],eax
  407dda:	fnstsw WORD PTR [ebx]
  407ddc:	inc    eax
  407ddd:	mov    dl,0xe7
  407ddf:	fiadd  WORD PTR [eax+0x4212479d]
  407de5:	out    0xff,al
  407de7:	nop
  407de8:	jge    0x407dbe
  407dea:	pusha  
  407deb:	cmp    al,0x17
  407ded:	test   DWORD PTR [ebx+eiz*1],ebp
  407df0:	fcmovbe st,st(0)
  407df2:	jmp    0x8057:0x97689f25
  407df9:	sub    ebx,esp
  407dfb:	rcr    BYTE PTR [edi-0x6a],1
  407dfe:	mov    cl,0xef
  407e00:	jmp    0x9d14514a
  407e05:	out    dx,al
  407e06:	fsub   QWORD PTR [ebx+0xc804cf6]
  407e0c:	test   ebp,esp
  407e0e:	mov    ecx,DWORD PTR [ebp+0xc]
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422728
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422728
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0xa2
  407ec6:	push   0xffffffdb
  407ec8:	jecxz  0x407e88
  407eca:	gs mov esi,0xbec4bdbe
  407ed0:	mov    esi,0x942f4685
  407ed5:	mov    cl,0xc5
  407ed7:	lahf   
  407ed8:	not    ch
  407eda:	and    al,0x3e
  407edc:	cmp    cl,BYTE PTR [edi+0x5a]
  407edf:	not    DWORD PTR [esi]
  407ee1:	sbb    ch,BYTE PTR [edx+0x643ae12e]
  407ee7:	inc    edi
  407ee8:	jmp    0x407e99
  407eea:	iret   
  407eeb:	jl     0x407ed4
  407eed:	(bad)  
  407eee:	les    edx,FWORD PTR [eax-0x13]
  407ef1:	mov    eax,ds:0xf6c1b2c3
  407ef6:	mov    ecx,0x91fec22e
  407efb:	and    esp,DWORD PTR [esp+esi*1+0x6]
  407eff:	jns    0x407ebe
  407f01:	pop    esp
  407f02:	mov    ds:0x7621db38,al
  407f07:	fs ins BYTE PTR es:[edi],dx
  407f09:	jae    0x407f45
  407f0b:	ret    0x9403
  407f0e:	mov    bl,0xf1
  407f10:	pop    esp
  407f11:	add    bl,BYTE PTR [esi]
  407f13:	ja     0x407f53
  407f15:	je     0x407ea0
  407f17:	fwait
  407f18:	inc    ecx
  407f19:	cmp    al,0xd
  407f1b:	or     DWORD PTR [ecx-0x4a246a60],ebp
  407f21:	pop    edi
  407f22:	rcr    BYTE PTR [ebx-0x39],0xdb
  407f26:	add    DWORD PTR [esp+ebp*4+0x733dab68],ebp
  407f2d:	mov    esp,DWORD PTR [esi-0x615d5c9b]
  407f33:	fistp  WORD PTR [eax]
  407f35:	(bad)
  407f38:	fisttp DWORD PTR cs:[edx-0x49144f7f]
  407f3f:	ds pusha 
  407f41:	stos   DWORD PTR es:[edi],eax
  407f42:	dec    edx
  407f43:	lods   al,BYTE PTR ds:[esi]
  407f44:	push   esi
  407f45:	jle    0x407f9c
  407f47:	neg    DWORD PTR [esi+edx*8+0x53]
  407f4b:	aam    0x4b
  407f4d:	jne    0x407f0c
  407f4f:	mov    eax,0xedbc5c81
  407f54:	aam    0x37
  407f56:	add    DWORD PTR [ebp-0x2978b7dc],eax
  407f5c:	test   eax,0x951a00bc
  407f61:	sbb    edi,edi
  407f63:	shl    DWORD PTR [ecx],1
  407f65:	sbb    bl,BYTE PTR [ecx]
  407f67:	xor    eax,0x82e98270
  407f6c:	imul   ecx,DWORD PTR [eax+0x1413e5a0],0xffffffc1
  407f73:	mov    bh,0xee
  407f75:	xchg   esi,eax
  407f76:	aam    0xd
  407f78:	stos   DWORD PTR es:[edi],eax
  407f79:	push   ebp
  407f7a:	mov    eax,ds:0xb1f83d2c
  407f7f:	popf   
  407f80:	or     al,0xe8
  407f82:	mov    ds:0xe48bdf10,al
  407f87:	les    edx,FWORD PTR [edi+eax*4-0x65]
  407f8b:	sbb    al,0xb6
  407f8d:	push   ecx
  407f8e:	out    0xb0,al
  407f90:	aad    0xb2
  407f92:	jp     0x407f95
  407f94:	mov    esp,0xbaf3690
  407f99:	inc    edx
  407f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9b:	jecxz  0x407ff0
  407f9d:	and    ch,bh
  407f9f:	shr    DWORD PTR [esi+eax*1-0x15c97f18],0x59
  407fa7:	xchg   edi,eax
  407fa8:	popa   
  407fa9:	(bad)  [eax-0x64]
  407fac:	push   edx
  407fad:	and    DWORD PTR [edx+0x3ac35234],edx
  407fb3:	jecxz  0x407fd0
  407fb5:	dec    ecx
  407fb6:	outs   dx,DWORD PTR ds:[esi]
  407fb7:	iret   
  407fb8:	mov    ebp,0xfe5f7206
  407fbd:	lahf   
  407fbe:	pop    ecx
  407fbf:	xchg   ebp,eax
  407fc0:	xchg   edx,eax
  407fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc2:	push   ss
  407fc3:	cwde   
  407fc4:	repnz cld 
  407fc6:	es pop esi
  407fc8:	and    al,0x8b
  407fca:	push   ecx
  407fcb:	jmp    0x407fe0
  407fcd:	mov    dl,0x7e
  407fcf:	loop   0x408013
  407fd1:	mov    BYTE PTR [eax],0x2f
  407fd4:	pushf  
  407fd5:	and    dh,BYTE PTR [ecx+0x4]
  407fd8:	test   DWORD PTR [edi-0x4b42069c],eax
  407fde:	mov    bl,0x78
  407fe0:	gs xor bh,ah
  407fe3:	daa    
  407fe4:	or     cl,al
  407fe6:	dec    ebx
  407fe7:	and    ch,BYTE PTR [eax+ebp*1+0x6]
  407feb:	push   ecx
  407fec:	add    DWORD PTR [esi+eiz*2-0x447a18db],esi
  407ff3:	xchg   ebx,eax
  407ff4:	outs   dx,BYTE PTR ds:[esi]
  407ff5:	(bad)  
  407ff6:	in     eax,0x99
  407ff8:	pop    eax
  407ff9:	ins    BYTE PTR es:[edi],dx
  407ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ffb:	imul   eax,DWORD PTR [ebp-0x34eabc44],0xdf2ed278
  408005:	push   0xffffffb3
  408007:	lods   al,BYTE PTR ds:[esi]
  408008:	jne    0x408005
  40800a:	jmp    0x407fbc
  40800c:	fs imul eax,ecx,0x3e2d14a4
  408013:	adc    eax,0x2fee121e
  408018:	xchg   edi,eax
  408019:	daa    
  40801a:	fwait
  40801b:	je     0x408080
  40801d:	cdq    
  40801e:	cmc    
  40801f:	inc    edx
  408020:	fdivr  st,st(2)
  408022:	xor    al,0x9
  408024:	pop    ss
  408025:	jb     0x407fc3
  408027:	xor    bl,BYTE PTR [eax+0x1590b127]
  40802d:	out    0x14,al
  40802f:	pop    esp
  408030:	das    
  408031:	sar    BYTE PTR [esi+0x4cd1381a],cl
  408037:	push   ecx
  408038:	sub    DWORD PTR [eax-0x1b055005],eax
  40803e:	jl     0x408053
  408040:	or     BYTE PTR [edx-0x35],0xc7
  408044:	dec    esi
  408045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408046:	stc    
  408047:	stos   DWORD PTR es:[edi],eax
  408048:	push   es
  408049:	mov    ebp,0xff8170b0
  40804e:	stos   DWORD PTR es:[edi],eax
  40804f:	mov    WORD PTR [ebx],?
  408051:	mov    BYTE PTR [eax],ch
  408053:	call   0xf558:0xd97b998
  40805a:	inc    BYTE PTR [esi+0x754e164d]
  408060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408061:	jp     0x4080a3
  408063:	add    esi,edi
  408065:	imul   esi,DWORD PTR ds:0xc5e2a8c4,0x4df99209
  40806f:	retf   0x97b3
  408072:	mov    al,BYTE PTR [esi+edx*8-0x5c]
  408076:	adc    DWORD PTR [edi+0x26ea3aad],ebx
  40807c:	mov    ah,0xb3
  40807e:	fiadd  DWORD PTR [ebx+edx*4-0x4e]
  408082:	and    al,0x9d
  408084:	xor    al,0x98
  408086:	js     0x4080ad
  408088:	xor    eax,0x873a5ff4
  40808d:	dec    esi
  40808e:	and    eax,0x4a8a2ddc
  408093:	add    al,0x8
  408095:	call   0x27a5:0x7fc6594f
  40809c:	cld    
  40809d:	or     BYTE PTR [esi-0x3655521c],bh
  4080a3:	mov    dh,0x43
  4080a5:	js     0x4080b3
  4080a7:	mov    edx,0x238ed0b5
  4080ac:	mov    edx,0xa08d9a91
  4080b1:	nop
  4080b2:	cdq    
  4080b3:	or     ecx,esi
  4080b5:	jg     0x4080da
  4080b7:	sub    al,0x23
  4080b9:	lods   eax,DWORD PTR ds:[esi]
  4080ba:	add    al,0xe
  4080bc:	dec    esi
  4080bd:	xchg   BYTE PTR [edx],dh
  4080bf:	add    bx,WORD PTR [edi+eiz*8+0x40]
  4080c4:	fdivr  st(6),st
  4080c6:	imul   eax,DWORD PTR [ebx+ecx*1],0xf21639de
  4080cd:	enter  0x65bb,0x19
  4080d1:	xor    eax,0x420c3bbc
  4080d6:	sub    dh,BYTE PTR ds:0x6558a080
  4080dc:	push   ds
  4080dd:	popf   
  4080de:	xchg   DWORD PTR [edx+0x2bed1394],ecx
  4080e4:	sub    edi,ebx
  4080e6:	repz sub DWORD PTR [ecx+0x7d5c1a34],esp
  4080ed:	dec    edx
  4080ee:	xchg   ebx,eax
  4080ef:	test   BYTE PTR [ecx+0xb583191],bh
  4080f5:	aas    
  4080f6:	call   0xd8fc:0xc26f454a
  4080fd:	scas   eax,DWORD PTR es:[edi]
  4080fe:	adc    edi,DWORD PTR [esp+esi*4+0x6df58c08]
  408105:	call   DWORD PTR [edx+0x4f]
  408108:	cdq    
  408109:	cld    
  40810a:	add    eax,DWORD PTR [eax-0x3b]
  40810d:	or     eax,0xaaea17ce
  408112:	mov    ds,WORD PTR [esp+edi*1]
  408115:	adc    DWORD PTR [edi],0x31
  408118:	out    dx,al
  408119:	daa    
  40811a:	dec    edx
  40811b:	les    esi,FWORD PTR [edx]
  40811d:	xor    eax,0x95ca891e
  408122:	cs mov al,0x6d
  408125:	test   al,ah
  408127:	pushf  
  408128:	sbb    eax,0x918cc889
  40812d:	sar    DWORD PTR [esi+0x38],cl
  408130:	jnp    0x4080e6
  408132:	(bad)  
  408133:	scas   al,BYTE PTR es:[edi]
  408134:	ds ja  0x4080c0
  408137:	push   ecx
  408138:	data16 mov ch,0xf1
  40813b:	sub    eax,esi
  40813d:	adc    eax,0x3767ddc
  408142:	mov    ebx,0xa8342baf
  408147:	in     al,dx
  408148:	rol    DWORD PTR [ecx-0x4d06dc28],1
  40814e:	fidivr WORD PTR [ecx]
  408150:	adc    cl,BYTE PTR [edi+0x5966cdbf]
  408156:	data16 fimul DWORD PTR [edx-0x3f9f31b5]
  40815d:	ficomp DWORD PTR [eax+0xb66044b]
  408163:	sti    
  408164:	add    al,0xb7
  408166:	stc    
  408167:	jb     0x4080ff
  408169:	repnz mov ds:0xa75799fd,al
  40816f:	(bad)  
  408170:	ins    BYTE PTR es:[edi],dx
  408171:	cli    
  408172:	sbb    eax,0x77f94074
  408177:	fist   DWORD PTR [edx+0x58f4b8]
  40817d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817e:	jnp    0x408145
  408180:	add    al,0xdf
  408182:	jb     0x408181
  408184:	ret    
  408185:	in     al,dx
  408186:	push   esp
  408187:	xchg   edi,eax
  408188:	jae    0x4081b5
  40818a:	fxch   st(3)
  40818c:	and    BYTE PTR [edi+0x27addd8d],dh
  408192:	xchg   esi,eax
  408193:	lds    ebp,FWORD PTR [ecx+0x6b13ef60]
  408199:	pop    ebx
  40819a:	outs   dx,DWORD PTR ds:[esi]
  40819b:	sub    BYTE PTR [edx],0x57
  40819e:	les    edi,FWORD PTR [esi-0x36]
  4081a1:	out    0xbd,al
  4081a3:	(bad)  
  4081a4:	push   ds
  4081a5:	sub    edi,DWORD PTR [esi+0x47]
  4081a8:	xchg   DWORD PTR [ebx+0x45c2c45f],ebx
  4081ae:	fwait
  4081af:	push   eax
  4081b0:	shl    BYTE PTR [eax],cl
  4081b2:	mov    DWORD PTR [ecx-0x56c37da1],ebp
  4081b8:	and    cl,bl
  4081ba:	aad    0x74
  4081bc:	mov    dl,0x8
  4081be:	aam    0xfe
  4081c0:	xchg   ecx,eax
  4081c1:	ins    BYTE PTR es:[edi],dx
  4081c2:	cld    
  4081c3:	and    DWORD PTR [ebx],0x6b
  4081c6:	rol    BYTE PTR [eax+0x4f320cbf],0x89
  4081cd:	in     eax,dx
  4081ce:	xor    al,0xb5
  4081d0:	test   BYTE PTR [esi],dl
  4081d2:	std    
  4081d3:	call   0x77d:0xff27878f
  4081da:	aam    0xc1
  4081dc:	xor    ah,BYTE PTR [ebx+edi*8-0x62a7adcf]
  4081e3:	leave  
  4081e4:	shr    BYTE PTR [esi+eax*8-0x4b6d9f3f],0xe8
  4081ec:	sub    esp,DWORD PTR [edi-0x1e]
  4081ef:	adc    DWORD PTR [ecx],edx
  4081f1:	cmp    cl,BYTE PTR [ecx+0x11]
  4081f4:	jnp    0x4081a7
  4081f6:	fcom   DWORD PTR [edx+0x3e8e3664]
  4081fc:	cwde   
  4081fd:	sar    BYTE PTR [ebx-0x59],1
  408200:	int    0xfa
  408202:	push   eax
  408203:	xor    dh,dl
  408205:	add    eax,0xb0c0143d
  40820a:	mov    ecx,0xece78fa1
  40820f:	sbb    al,0xaf
  408211:	pusha  
  408212:	arpl   WORD PTR [ebp+0x1d400ca3],sp
  408218:	dec    edx
  408219:	xchg   DWORD PTR [eax-0x498b79d6],ebp
  40821f:	call   0x136b:0xd8b7b10b
  408226:	gs push ebx
  408228:	aaa    
  408229:	retf   
  40822a:	jp     0x40820e
  40822c:	inc    bp
  40822e:	(bad)  
  40822f:	jge    0x40821a
  408231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408232:	and    DWORD PTR [ebx],edi
  408234:	mov    ebx,0x5a6cc509
  408239:	fcomp  DWORD PTR [edx-0x20f20b89]
  40823f:	shl    eax,0xe0
  408242:	and    BYTE PTR [ebx+0x3330278d],dl
  408248:	(bad)  
  408249:	adc    ebp,DWORD PTR [edi-0x2d]
  40824c:	in     eax,dx
  40824d:	mov    ds:0xf2a6bd03,eax
  408252:	push   ss
  408253:	clc    
  408254:	xor    DWORD PTR [ebx],0x3c20bd2
  40825a:	add    eax,0x422728
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422728
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	rsm    
  40844e:	jo     0x40842d
  408450:	mov    ebp,0xbdbebe6b
  408455:	les    edi,FWORD PTR [esi+0x7f4bcebe]
  40845b:	mov    cl,BYTE PTR [edx-0x1555f7fc]
  408461:	mov    ebx,ebp
  408463:	pop    ebp
  408464:	nop
  408465:	push   esi
  408466:	test   eax,0xa680f3c4
  40846b:	jnp    0x408453
  40846d:	pop    es
  40846e:	pop    esi
  40846f:	cmp    al,0xb9
  408471:	enter  0x5c89,0x92
  408475:	daa    
  408476:	nop
  408477:	and    al,0x12
  408479:	mov    ebx,0x49788fd1
  40847e:	clc    
  40847f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408480:	push   es
  408481:	rcl    ch,0xa4
  408484:	pop    esp
  408485:	jae    0x40848e
  408487:	pop    edi
  408488:	mov    esp,0xab8c2142
  40848d:	adc    eax,0xd6df2b64
  408492:	push   edx
  408493:	cmc    
  408494:	aas    
  408495:	pop    edi
  408496:	xor    ecx,DWORD PTR [eax]
  408498:	add    BYTE PTR [ebx-0xcd897d],0xd0
  40849f:	std    
  4084a0:	cmp    DWORD PTR [ebx-0x1f],esi
  4084a3:	gs repnz adc al,0x4e
  4084a7:	add    esp,esi
  4084a9:	dec    edi
  4084aa:	sti    
  4084ab:	xchg   ecx,eax
  4084ac:	ret    0x2fe5
  4084af:	inc    eax
  4084b0:	adc    al,BYTE PTR [eax-0x5c]
  4084b3:	cmp    esi,esp
  4084b5:	jbe    0x4084f5
  4084b7:	inc    esp
  4084b8:	(bad)  
  4084ba:	and    al,0x49
  4084bc:	add    eax,0xe409850c
  4084c1:	mov    esp,0xf860496a
  4084c6:	pop    ecx
  4084c7:	push   ebp
  4084c8:	call   0x62baffb9
  4084cd:	fldcw  WORD PTR [ebp+ecx*8+0x3b28c288]
  4084d4:	pop    edi
  4084d5:	xchg   ecx,eax
  4084d6:	jge    0x408504
  4084d8:	xor    al,0xe7
  4084da:	push   ebx
  4084db:	iret   
  4084dc:	push   cs
  4084dd:	(bad)  
  4084de:	not    DWORD PTR [esi-0x2f]
  4084e1:	repz enter 0xf851,0xf2
  4084e6:	clc    
  4084e7:	test   DWORD PTR [edx-0x67],ecx
  4084ea:	(bad)  
  4084eb:	out    dx,al
  4084ec:	test   al,0x52
  4084ee:	or     eax,0xae17edaf
  4084f3:	idiv   dl
  4084f5:	outs   dx,BYTE PTR ds:[esi]
  4084f6:	mov    ebx,0xdb883ad6
  4084fb:	inc    esi
  4084fc:	nop
  4084fd:	aam    0x20
  4084ff:	jne    0x408554
  408501:	or     al,0x51
  408503:	xor    bl,BYTE PTR [eax]
  408505:	jmp    0xa61c964a
  40850a:	mov    gs,WORD PTR [edi+0x7]
  40850d:	cmp    edx,edi
  40850f:	dec    edi
  408510:	add    ch,ah
  408512:	fwait
  408513:	sub    eax,edi
  408515:	sti    
  408516:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408518:	imul   esp,DWORD PTR [esi],0xffffff81
  40851b:	sbb    bh,BYTE PTR [eax-0x53]
  40851e:	retf   0x2683
  408521:	mov    cl,0xac
  408523:	mov    bl,0xc7
  408525:	or     esi,DWORD PTR [ebx+eiz*1]
  408528:	dec    eax
  408529:	jg     0x408574
  40852b:	jo     0x408513
  40852d:	jmp    edx
  40852f:	cmp    dh,al
  408531:	inc    esp
  408532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408533:	cmp    al,0xdb
  408535:	and    bl,BYTE PTR [eax]
  408537:	pop    ss
  408538:	jecxz  0x4085a3
  40853a:	xor    DWORD PTR [edi+esi*8],edx
  40853d:	push   eax
  40853e:	xchg   edi,eax
  40853f:	(bad)  [edx-0xd]
  408542:	cmp    al,0x6e
  408544:	dec    edi
  408545:	jne    0x4085aa
  408547:	dec    edi
  408548:	sub    esi,DWORD PTR [ecx+0x5afcc175]
  40854e:	add    BYTE PTR [ebx],dl
  408550:	outs   dx,DWORD PTR ds:[esi]
  408551:	dec    esp
  408552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408553:	out    dx,al
  408554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408555:	mov    cl,cl
  408557:	ds out dx,al
  408559:	mov    ch,ch
  40855b:	rcr    DWORD PTR [edi+0x66],1
  40855e:	sub    DWORD PTR [ebx-0x74],ebp
  408561:	sbb    edi,DWORD PTR [ebp-0x43]
  408564:	mov    dl,0x8f
  408566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408567:	push   0x68
  408569:	lods   al,BYTE PTR ds:[esi]
  40856a:	out    dx,al
  40856b:	and    dl,BYTE PTR [edx+0x8]
  40856e:	cmp    eax,0x52413c33
  408573:	mov    esi,0x5105a08b
  408578:	fstp   TBYTE PTR [eax]
  40857a:	mov    al,ds:0xd27448b8
  40857f:	aas    
  408580:	lods   eax,DWORD PTR ds:[esi]
  408581:	cld    
  408582:	jl     0x408515
  408584:	(bad)  
  408585:	and    eax,0xeeee4f28
  40858a:	xor    ecx,DWORD PTR [ebx]
  40858c:	mov    ah,BYTE PTR [ebx]
  40858e:	out    0xa7,al
  408590:	xor    al,0x76
  408592:	(bad)  
  408593:	xchg   ebp,eax
  408594:	repnz cmp BYTE PTR [ebx+0x4453d382],ah
  40859b:	sub    eax,0xc75a7855
  4085a0:	not    DWORD PTR [edi]
  4085a2:	in     eax,0x66
  4085a4:	mov    edx,0xec9dcb8f
  4085a9:	xor    eax,0xc113788f
  4085ae:	ds cmp ebx,esi
  4085b1:	add    edi,DWORD PTR [edx+0x3d]
  4085b4:	sub    al,0xd1
  4085b6:	into   
  4085b7:	ret    0x2e51
  4085ba:	mov    DWORD PTR [edx],0x960109be
  4085c0:	cdq    
  4085c1:	lock scas eax,DWORD PTR es:[edi]
  4085c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085c4:	push   ds
  4085c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c6:	jb     0x4085d0
  4085c8:	cmp    BYTE PTR [edi+0x54],ch
  4085cb:	ficomp WORD PTR [edi+0x39]
  4085ce:	cmp    dl,0xc9
  4085d1:	sub    DWORD PTR [esi+0x183fce2e],esi
  4085d7:	adc    eax,0x555b7bf5
  4085dc:	sbb    DWORD PTR [edx],eax
  4085de:	and    ah,ah
  4085e0:	rcl    edi,1
  4085e2:	mov    esi,0xea017fdb
  4085e7:	pop    eax
  4085e8:	add    DWORD PTR [ecx],ebx
  4085ea:	push   eax
  4085eb:	adc    edi,DWORD PTR [eax+eax*2]
  4085ee:	cli    
  4085ef:	ja     0x40859d
  4085f1:	mov    esp,0xb11cd7e5
  4085f6:	adc    esp,edi
  4085f8:	int    0xe6
  4085fa:	data16 jge 0x4085b6
  4085fd:	out    dx,eax
  4085fe:	popf   
  4085ff:	mov    esp,0x6a7e951f
  408604:	jne    0x40863c
  408606:	add    DWORD PTR [esi+ecx*4+0x5f],ebp
  40860a:	or     eax,0xfc420b2b
  40860f:	pop    ebx
  408610:	retf   0x2a78
  408613:	dec    edi
  408614:	scas   al,BYTE PTR es:[edi]
  408615:	lock dec ebx
  408618:	mov    DWORD PTR [ecx-0x64],ebp
  40861b:	in     eax,0xac
  40861d:	xchg   DWORD PTR [ebx],ecx
  40861f:	push   ecx
  408620:	push   cs
  408621:	and    al,0xe1
  408623:	push   edx
  408624:	scas   al,BYTE PTR es:[edi]
  408625:	mov    BYTE PTR [edi-0x17603a0f],ch
  40862b:	fwait
  40862c:	and    eax,0x3f8787c4
  408631:	add    eax,0x6de27e7b
  408636:	ds dec ebx
  408638:	rol    bh,0x2f
  40863b:	xor    DWORD PTR [bx],eax
  40863e:	into   
  40863f:	push   ebp
  408640:	cli    
  408641:	push   cs
  408642:	xor    dl,ah
  408644:	xchg   BYTE PTR [esi-0x58],ah
  408647:	jo     0x40866f
  408649:	shr    dh,0x18
  40864c:	in     eax,dx
  40864d:	inc    edi
  40864e:	es pusha 
  408650:	les    edi,FWORD PTR [edi]
  408652:	add    dl,BYTE PTR [ebx+0x222dfd75]
  408658:	add    eax,0x1a27804c
  40865d:	mov    eax,ds:0xc561776
  408662:	xchg   edx,eax
  408663:	(bad)  
  408664:	cmp    DWORD PTR [edx+0x1f],0xffffffee
  408668:	scas   eax,DWORD PTR es:[edi]
  408669:	inc    ecx
  40866a:	sbb    al,0xdc
  40866c:	cmc    
  40866d:	lahf   
  40866e:	inc    esp
  40866f:	cmp    BYTE PTR [edi],dh
  408671:	add    DWORD PTR [esi],esp
  408673:	pop    ebx
  408674:	pushf  
  408675:	lock out dx,al
  408677:	inc    edx
  408678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408679:	mov    esp,0x1fb3f7c8
  40867e:	push   esp
  40867f:	adc    DWORD PTR [ecx+edi*1],esi
  408682:	adc    BYTE PTR [edi-0x27],dh
  408685:	jl     0x40862b
  408687:	push   es
  408688:	xor    BYTE PTR cs:[edx+ebp*4-0x53],al
  40868d:	sbb    DWORD PTR [edx-0x28],ecx
  408690:	xor    eax,0xf681f2a8
  408695:	int3   
  408696:	in     al,0x15
  408698:	sbb    bh,BYTE PTR [esi+0x6]
  40869b:	mov    ah,0xa
  40869d:	fs (bad) 
  4086a0:	jb     0x4086a5
  4086a2:	shr    cl,0x5f
  4086a5:	mov    ds:0x29356909,al
  4086aa:	jecxz  0x4086ef
  4086ac:	jno    0x408722
  4086ae:	or     eax,0x318b0455
  4086b3:	call   0x5ba5e3df
  4086b8:	inc    ebp
  4086b9:	pusha  
  4086ba:	mov    ebx,0xc29116cc
  4086bf:	loope  0x408686
  4086c1:	jp     0x40870c
  4086c3:	adc    dh,cl
  4086c5:	cld    
  4086c6:	pop    ds
  4086c7:	ret    
  4086c8:	jmp    0x40871a
  4086ca:	loopne 0x408735
  4086cc:	in     eax,0x76
  4086ce:	add    ax,0x1a77
  4086d2:	jns    0x4086c1
  4086d4:	(bad)
  4086d7:	frstor [edx+0x68394d5]
  4086dd:	aad    0x3c
  4086df:	xor    al,0xbe
  4086e1:	mov    edx,0x99babda3
  4086e6:	pop    eax
  4086e7:	dec    ecx
  4086e8:	mov    al,ds:0x5f969fdd
  4086ed:	and    bh,BYTE PTR [eax+ebx*8]
  4086f0:	call   0xe551:0xef666422
  4086f7:	iret   
  4086f8:	sub    al,0xd1
  4086fa:	and    al,bl
  4086fc:	call   0x3dcc081c
  408701:	sbb    DWORD PTR [edi+0x9],0x87c967a7
  408708:	clc    
  408709:	mov    esi,0x34cdc5e0
  40870e:	pushf  
  40870f:	inc    BYTE PTR [ecx]
  408711:	stos   DWORD PTR es:[edi],eax
  408712:	jle    0x4086b6
  408714:	cmp    al,0xce
  408716:	and    eax,0xd7876118
  40871b:	cmp    al,0xd8
  40871d:	repnz inc esp
  40871f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408720:	mov    ebp,0x8113cccc
  408725:	add    BYTE PTR [eax+edx*4],dh
  408728:	or     eax,0x9ba8cd46
  40872d:	sbb    DWORD PTR [ebx-0xd],0xa50a4087
  408734:	sub    edi,DWORD PTR [esi-0xb]
  408737:	repnz (bad) 
  408739:	sub    BYTE PTR cs:[edi+0x2d],ah
  40873d:	mov    esp,0xb359f8b4
  408742:	adc    BYTE PTR [eax+0x25],dl
  408745:	int    0x79
  408747:	jge    0x4087b0
  408749:	in     eax,dx
  40874a:	shr    bh,cl
  40874c:	lock inc edi
  40874e:	or     ebx,DWORD PTR [ebp-0x6]
  408751:	mov    esi,0x1fdc987a
  408756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408757:	xchg   BYTE PTR [ecx+0x59c1b958],bl
  40875d:	nop
  40875e:	fsubr  st,st(0)
  408760:	ss inc edi
  408762:	inc    ebx
  408763:	int    0x4d
  408765:	fldcw  WORD PTR [edi+ecx*2-0x62]
  408769:	gs mov dl,0xc4
  40876c:	xlat   BYTE PTR ds:[ebx]
  40876d:	retf   
  40876e:	xchg   edx,eax
  40876f:	and    DWORD PTR ds:0x2c0508da,ecx
  408775:	jp     0x4087d6
  408777:	sar    BYTE PTR [esi],cl
  408779:	sahf   
  40877a:	xor    BYTE PTR [edi-0x31d2b8c3],cl
  408780:	mul    DWORD PTR [ecx-0x67]
  408783:	push   cs
  408784:	cli    
  408785:	xchg   DWORD PTR [eax-0x5857a256],eax
  40878b:	mov    WORD PTR [edi+0x6fd2dfbd],fs
  408791:	jns    0x408713
  408793:	push   ebx
  408794:	jmp    0x6112:0x77af6149
  40879b:	xor    dh,BYTE PTR [esi]
  40879d:	aaa    
  40879e:	(bad)  
  40879f:	fs jmp 0x50b3:0x37ea9c65
  4087a7:	mov    dh,0x29
  4087a9:	adc    edx,DWORD PTR [edi]
  4087ab:	retf   
  4087ac:	inc    esi
  4087ad:	xchg   ebp,eax
  4087ae:	dec    esp
  4087af:	push   ds
  4087b0:	add    bh,BYTE PTR [ecx+0x678af879]
  4087b6:	and    DWORD PTR [edi+0x3],ebp
  4087b9:	scas   eax,DWORD PTR es:[edi]
  4087ba:	xor    eax,0x5a25bbc5
  4087bf:	adc    cl,dh
  4087c1:	rep outs dx,DWORD PTR ds:[esi]
  4087c3:	add    BYTE PTR [edi],al
  4087c5:	xor    ebp,ecx
  4087c7:	dec    edi
  4087c8:	not    BYTE PTR [esi-0x1c8307c0]
  4087ce:	mov    bh,0xec
  4087d0:	sbb    esi,ebx
  4087d2:	dec    ebp
  4087d3:	xchg   ebx,eax
  4087d4:	push   eax
  4087d5:	mov    ch,0xbd
  4087d7:	cwde   
  4087d8:	jno    0x40876a
  4087da:	cmp    edx,DWORD PTR [edx-0x7517087f]
  4087e0:	sub    ebx,DWORD PTR [ebx+ecx*4-0x3753f031]
  4087e7:	add    cl,BYTE PTR [ebx]
  4087e9:	inc    ebp
  4087ea:	adc    cl,al
  4087ec:	jmp    0x148d92f3
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	lods   eax,DWORD PTR ds:[esi]
  408803:	dec    ecx
  408804:	xchg   edx,eax
  408805:	nop
  408806:	mov    esi,0xbdbebe73
  40880b:	les    edi,FWORD PTR [esi+0x1cc957be]
  408811:	ret    0x6028
  408814:	bound  edi,QWORD PTR [esi+0x612a9910]
  40881a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40881b:	sub    DWORD PTR [ecx-0x2d],eax
  40881e:	addr16 test al,0x71
  408821:	stos   DWORD PTR es:[edi],eax
  408822:	pop    esp
  408823:	pop    ds
  408824:	dec    esp
  408825:	retf   
  408826:	jle    0x408868
  408828:	push   ebp
  408829:	cs jbe 0x40880a
  40882c:	mov    eax,0x7025fd32
  408831:	push   DWORD PTR [eax+0x12]
  408834:	adc    eax,edx
  408836:	push   edx
  408837:	and    esi,DWORD PTR [eax+edi*8-0x777d55a8]
  40883e:	retf   
  40883f:	fld    DWORD PTR [ebx+0x49a0fe30]
  408845:	push   eax
  408846:	fisubr WORD PTR [edi+0x7a0511e5]
  40884c:	push   eax
  40884d:	sar    DWORD PTR [edi],cl
  40884f:	and    DWORD PTR [di],esi
  408852:	mov    dh,0x42
  408854:	add    BYTE PTR [ebp+0x221ed1df],dl
  40885a:	jmp    0x2e18d57
  40885f:	or     al,0x45
  408861:	fnstsw WORD PTR [ecx-0x55]
  408864:	inc    esi
  408865:	(bad)  
  408866:	outs   dx,DWORD PTR ds:[esi]
  408867:	loope  0x4087ff
  408869:	popa   
  40886a:	add    DWORD PTR [esi],edi
  40886c:	aaa    
  40886d:	dec    esp
  40886e:	loopne 0x4087f8
  408870:	mov    esp,0x6b6e61da
  408875:	pop    edx
  408876:	dec    ebp
  408877:	pop    ds
  408878:	xor    BYTE PTR [esi-0x3e],bh
  40887b:	test   BYTE PTR [ecx],dh
  40887d:	scas   al,BYTE PTR es:[edi]
  40887e:	and    DWORD PTR [edi+0x76],ebp
  408881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408882:	test   al,0x5a
  408884:	rcr    BYTE PTR [esi-0x5e765560],0xe8
  40888b:	pop    eax
  40888c:	inc    ecx
  40888d:	iret   
  40888e:	jnp    0x408874
  408890:	in     al,0xcf
  408892:	dec    ecx
  408893:	cmp    al,dh
  408895:	(bad)  
  408896:	(bad)  
  408897:	and    bl,BYTE PTR [ecx]
  408899:	cmp    ecx,DWORD PTR [edx+0x4da94828]
  40889f:	cld    
  4088a0:	out    dx,eax
  4088a1:	xchg   edx,eax
  4088a2:	mov    ds:0x88b94f8a,eax
  4088a7:	xor    al,0x85
  4088a9:	adc    al,0x99
  4088ab:	push   0x7a7fb979
  4088b0:	pushf  
  4088b1:	out    dx,al
  4088b2:	in     eax,0xcf
  4088b4:	mov    edi,0x4e59de34
  4088b9:	pop    ss
  4088ba:	cmp    esp,edi
  4088bc:	xor    DWORD PTR [edi-0x363eb78],ecx
  4088c2:	jecxz  0x40888a
  4088c4:	dec    edx
  4088c5:	fdiv   QWORD PTR [ebp-0x46]
  4088c8:	push   es
  4088c9:	or     cl,BYTE PTR [ebp+0x52]
  4088cc:	jns    0x408927
  4088ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088cf:	test   eax,0x9c5ec5df
  4088d4:	jecxz  0x40888f
  4088d6:	mov    ah,0xed
  4088d8:	fidivr DWORD PTR [edi+ebp*4+0x2c37d976]
  4088df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e0:	push   ebx
  4088e1:	aaa    
  4088e2:	sub    al,0xf2
  4088e4:	cdq    
  4088e5:	test   dh,ch
  4088e7:	add    eax,0xa0dbcaeb
  4088ec:	std    
  4088ed:	loop   0x408937
  4088ef:	xchg   esp,eax
  4088f0:	xchg   BYTE PTR [edx+ebx*2+0x5],cl
  4088f4:	ja     0x40887b
  4088f6:	mov    ch,0x96
  4088f8:	dec    ebp
  4088f9:	cmp    BYTE PTR [edx-0x1e294ade],bh
  4088ff:	sbb    esp,ebp
  408901:	call   0xc357:0xa8603ef3
  408908:	fldz   
  40890a:	cs push ebp
  40890c:	mov    esp,0x3c2772f3
  408911:	xchg   esi,eax
  408912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408913:	push   ecx
  408914:	retf   0x78ba
  408917:	sahf   
  408918:	lea    esi,[edi]
  40891a:	enter  0xd8a1,0xd8
  40891e:	sar    BYTE PTR [edi-0x2952446],0x4b
  408925:	xlat   BYTE PTR ds:[ebx]
  408926:	xor    DWORD PTR [eax-0x63],ebp
  408929:	retf   
  40892a:	and    eax,0xf7ce63d4
  40892f:	out    dx,al
  408930:	adc    esp,ebx
  408932:	push   es
  408933:	mov    ds:0x1ffda72f,al
  408938:	inc    esi
  408939:	pop    es
  40893a:	imul   edi,edx,0x2c1c470d
  408940:	call   0x2915:0xe663186
  408947:	aas    
  408948:	mov    eax,ds:0x4ffe2ddc
  40894d:	out    0xfd,eax
  40894f:	vmread esi,eax
  408952:	pop    esi
  408953:	mov    eax,0xc0faacba
  408958:	mov    es,WORD PTR cs:0x7e04a012
  40895f:	(bad)  
  408960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408961:	xor    al,0x93
  408963:	stos   BYTE PTR es:[edi],al
  408964:	inc    esi
  408965:	mov    bl,0xe0
  408967:	iret   
  408968:	adc    eax,0xf957dfd
  40896d:	cmc    
  40896e:	add    esi,DWORD PTR [ecx]
  408970:	push   ecx
  408971:	ds into 
  408973:	xchg   BYTE PTR [esi+ebp*1-0x726ad95],bl
  40897a:	(bad)  
  40897b:	ds ss ret 0x5c9b
  408980:	mov    dh,BYTE PTR [ecx-0x7b50150c]
  408986:	popf   
  408987:	or     edi,edx
  408989:	or     esi,DWORD PTR [eax-0xfa86dcd]
  40898f:	mov    ch,0x51
  408991:	movaps xmm3,xmm5
  408994:	sbb    ebx,DWORD PTR [edi-0x76]
  408997:	ins    BYTE PTR es:[edi],dx
  408998:	cmp    al,0x5a
  40899a:	dec    edx
  40899b:	pop    eax
  40899c:	push   es
  40899d:	ret    
  40899e:	(bad)  
  40899f:	popf   
  4089a0:	vpmulhuw xmm1,xmm3,xmm3
  4089a4:	addr16 sbb eax,0xb6ba80e5
  4089aa:	nop
  4089ab:	cmp    BYTE PTR ds:0xaad20793,ah
  4089b1:	(bad)  
  4089b3:	sub    DWORD PTR [edx+0x7c],eax
  4089b6:	(bad)  
  4089b7:	adc    DWORD PTR [ecx-0x35c15aa],esi
  4089bd:	inc    esi
  4089be:	lahf   
  4089bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c0:	xchg   BYTE PTR [edx-0x54],ch
  4089c3:	stos   DWORD PTR es:[edi],eax
  4089c4:	xor    DWORD PTR [edx+ecx*1-0x3a],ebp
  4089c8:	adc    BYTE PTR [edi],bl
  4089ca:	mov    esp,DWORD PTR [edi-0x1f]
  4089cd:	sub    al,0x76
  4089cf:	add    BYTE PTR [ecx-0x32],al
  4089d2:	lea    esp,[esi]
  4089d4:	outs   dx,DWORD PTR ds:[esi]
  4089d5:	jecxz  0x408a3f
  4089d7:	mov    ecx,0xd6389155
  4089dc:	add    DWORD PTR [edx],edi
  4089de:	xchg   ecx,eax
  4089df:	outs   dx,DWORD PTR ds:[esi]
  4089e0:	sub    al,0x9c
  4089e2:	lds    ebp,FWORD PTR [eax]
  4089e4:	pop    eax
  4089e5:	push   esi
  4089e6:	mov    eax,ds:0xe2fc6976
  4089eb:	ins    BYTE PTR es:[edi],dx
  4089ec:	sub    BYTE PTR [ecx+ecx*2],bh
  4089ef:	push   0xebbce14d
  4089f4:	pop    ss
  4089f5:	add    bh,BYTE PTR [edx+0x8]
  4089f8:	sub    cl,BYTE PTR [edi-0x206be77c]
  4089fe:	inc    esp
  4089ff:	sub    BYTE PTR [ebx+0x77d8c9eb],cl
  408a05:	out    dx,al
  408a06:	imul   BYTE PTR [ebx-0x7]
  408a09:	dec    ebp
  408a0a:	and    DWORD PTR [edx+0x4bbba464],esp
  408a10:	mov    DWORD PTR [ebx-0x217d2dc5],edx
  408a16:	out    0xcc,al
  408a18:	jle    0x4089d0
  408a1a:	jmp    0x4089eb
  408a1c:	data16 js 0x4089e9
  408a1f:	jp     0x4089f7
  408a21:	aaa    
  408a22:	ucomiss xmm3,DWORD PTR [eax+0xcb1ed4c]
  408a29:	retf   
  408a2a:	dec    ebp
  408a2b:	sub    ebx,DWORD PTR [edi]
  408a2d:	xor    esi,ecx
  408a2f:	mov    dl,0xf6
  408a31:	and    DWORD PTR [esi-0x439ab695],ebp
  408a37:	cmp    BYTE PTR [ecx+0x5a],bh
  408a3a:	pushf  
  408a3b:	mov    al,ds:0xd471534e
  408a40:	push   eax
  408a41:	jmp    0x4089e5
  408a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a45:	push   0x6c
  408a47:	mov    bl,0x67
  408a49:	add    dh,bh
  408a4b:	jnp    0x408a5e
  408a4d:	out    0x51,al
  408a4f:	ss icebp 
  408a51:	cmp    ch,BYTE PTR [ecx-0x6b]
  408a54:	add    dl,cl
  408a56:	and    eax,esp
  408a58:	push   esp
  408a59:	das    
  408a5a:	pushf  
  408a5b:	adc    ecx,DWORD PTR [eax-0x547efed2]
  408a61:	lds    edi,FWORD PTR ds:0xe38fd7ba
  408a67:	lahf   
  408a68:	enter  0xd179,0x8a
  408a6c:	xchg   edi,eax
  408a6d:	jno    0x408a7c
  408a6f:	in     al,0x8c
  408a71:	inc    ebp
  408a72:	jecxz  0x408a46
  408a74:	push   cs
  408a75:	cmp    al,0x4a
  408a77:	pop    ecx
  408a78:	or     eax,0x4e9294b
  408a7d:	cmp    al,0x7e
  408a7f:	dec    edi
  408a80:	mov    ecx,0x272360d2
  408a85:	ds ucomiss xmm6,xmm5
  408a89:	(bad)  
  408a8a:	xchg   ebx,eax
  408a8b:	fdiv   st(1),st
  408a8d:	ret    
  408a8e:	cmp    eax,0xde547445
  408a93:	dec    esp
  408a94:	xlat   BYTE PTR ds:[ebx]
  408a95:	test   eax,0x97f44061
  408a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a9b:	mov    eax,ds:0x82742eb6
  408aa0:	fbstp  TBYTE PTR [esi-0x50]
  408aa3:	test   DWORD PTR [edi],esi
  408aa5:	sahf   
  408aa6:	sbb    BYTE PTR [edi+0x64],bl
  408aa9:	pop    ebx
  408aaa:	and    cl,ah
  408aac:	add    eax,0x4715357
  408ab1:	pop    ecx
  408ab2:	fldcw  WORD PTR [eax+0x72]
  408ab5:	dec    eax
  408ab6:	int3   
  408ab7:	aaa    
  408ab8:	out    dx,al
  408ab9:	push   0x666d151b
  408abe:	loop   0x408b29
  408ac0:	popf   
  408ac1:	pop    ds
  408ac2:	adc    edx,DWORD PTR [ebp-0x54]
  408ac5:	call   0xc0fd0a5e
  408aca:	bound  edi,QWORD PTR gs:[ecx-0x148ffbe2]
  408ad1:	ins    DWORD PTR es:[edi],dx
  408ad2:	and    BYTE PTR [ebx+0x24ac38f9],dh
  408ad8:	xor    BYTE PTR [ebp+0x15],bh
  408adb:	inc    esi
  408adc:	test   al,0x1
  408ade:	int    0xf1
  408ae0:	xchg   ebp,eax
  408ae1:	adc    ch,BYTE PTR gs:[edx+edx*1]
  408ae5:	into   
  408ae6:	ret    
  408ae7:	and    al,bh
  408ae9:	ins    BYTE PTR es:[edi],dx
  408aea:	loope  0x408b0c
  408aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aed:	aas    
  408aee:	mov    edi,0x731c3586
  408af3:	out    dx,eax
  408af4:	mov    bl,0xba
  408af6:	jnp    0x408ac3
  408af8:	fsub   DWORD PTR [ebx]
  408afa:	mov    cl,0xc0
  408afc:	add    esi,edx
  408afe:	push   0x55
  408b00:	dec    ebp
  408b01:	sub    esi,DWORD PTR [ebx-0x23c0ba99]
  408b07:	jecxz  0x408b2d
  408b09:	lahf   
  408b0a:	and    al,0x61
  408b0c:	jg     0x408ac3
  408b0e:	in     al,0x9
  408b10:	cmp    ah,BYTE PTR [eax]
  408b12:	jp     0x408b06
  408b14:	aad    0xa0
  408b16:	or     eax,0x6f5d6907
  408b1b:	sbb    dl,ch
  408b1d:	cmp    dl,BYTE PTR [esp+eax*4]
  408b20:	cmp    eax,0x9bd79032
  408b25:	cld    
  408b26:	pop    ecx
  408b27:	inc    edx
  408b28:	test   eax,0xeb07499b
  408b2d:	push   ds
  408b2e:	mov    WORD PTR [eax+ebx*1+0x2c39ce9b],gs
  408b35:	(bad)  
  408b36:	rol    bh,0xfd
  408b39:	add    dl,BYTE PTR [esi+0x4c]
  408b3c:	lods   al,BYTE PTR ds:[esi]
  408b3d:	sub    al,0x3a
  408b3f:	mov    ds:0x6af6a517,eax
  408b44:	sub    dl,bl
  408b46:	or     DWORD PTR ds:0x1eee86e7,ecx
  408b4c:	pop    ds
  408b4d:	fs enter 0xf0a2,0xab
  408b52:	pop    edx
  408b53:	inc    DWORD PTR [ecx+eax*2+0x1d2805f1]
  408b5a:	loop   0x408ade
  408b5c:	xchg   BYTE PTR [edx-0x46c49b3e],ch
  408b62:	leave  
  408b63:	fist   DWORD PTR [ebx-0x4]
  408b66:	push   edx
  408b67:	add    edi,DWORD PTR [ebp-0x79]
  408b6a:	and    edx,DWORD PTR [ecx+0x33d32724]
  408b70:	and    ah,BYTE PTR [ecx+edx*1+0x29bade5]
  408b77:	mov    ds:0x3a570c13,eax
  408b7c:	xchg   edx,eax
  408b7d:	div    BYTE PTR [edx+edx*4]
  408b80:	inc    ecx
  408b81:	add    BYTE PTR [edx],bl
  408b83:	sub    esp,DWORD PTR [esi-0x1c]
  408b86:	stos   DWORD PTR es:[edi],eax
  408b87:	mov    ebp,0x1464213a
  408b8c:	inc    esp
  408b8d:	or     esi,DWORD PTR [eax+0x3b754007]
  408b93:	ror    BYTE PTR [edi],1
  408b95:	test   DWORD PTR [ecx],ecx
  408b97:	add    BYTE PTR [eax],al
  408b99:	add    BYTE PTR [ecx],bh
  408b9b:	dec    ebp
  408b9c:	or     al,0xf
  408b9e:	test   BYTE PTR [eax],dl
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	add    bh,bh
  408ba4:	jne    0x408bc6
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42832d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x4284f1,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428549,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	icebp  
  408c12:	lahf   
  408c13:	xchg   esp,eax
  408c14:	nop
  408c15:	mov    ebp,0x79bebe79
  408c1a:	ret    0xbebe
  408c1d:	dec    eax
  408c1e:	jae    0x408c34
  408c20:	ret    0x8422
  408c23:	adc    BYTE PTR [ebp-0x3697ceec],0x8a
  408c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2b:	ret    0x58c7
  408c2e:	mov    esp,0x7deea6d5
  408c33:	xchg   ebx,eax
  408c34:	inc    edx
  408c35:	sbb    DWORD PTR [ebp-0x7e],edx
  408c38:	cld    
  408c39:	mov    ds:0x40da8fa8,eax
  408c3e:	(bad)  
  408c3f:	inc    edx
  408c40:	and    al,0xca
  408c42:	or     eax,0xad2bb0f6
  408c48:	call   DWORD PTR [esi+0x65d4f18b]
  408c4e:	popf   
  408c4f:	sbb    BYTE PTR [esi-0x21d4bc44],dh
  408c55:	xchg   esp,eax
  408c56:	ss retf 0x3865
  408c5a:	lds    edi,FWORD PTR [esi-0x28]
  408c5d:	mov    eax,ds:0xb0dea205
  408c62:	dec    ebx
  408c63:	sbb    DWORD PTR [ecx],0x4c
  408c66:	push   edx
  408c67:	sahf   
  408c68:	dec    ecx
  408c69:	scas   eax,DWORD PTR es:[edi]
  408c6a:	pop    ebp
  408c6b:	cmp    al,0x4e
  408c6d:	call   FWORD PTR [esi-0x24d88174]
  408c73:	pushf  
  408c74:	pop    ebp
  408c75:	mov    ebx,esi
  408c77:	pop    edi
  408c78:	push   edx
  408c79:	cmp    eax,0x798d54a2
  408c7e:	aas    
  408c7f:	push   0x489d30b1
  408c84:	sbb    BYTE PTR [ecx],ah
  408c86:	sub    BYTE PTR [esi],dl
  408c88:	push   cs
  408c89:	push   ecx
  408c8a:	pop    ecx
  408c8b:	add    eax,0x7ee40f1b
  408c90:	enter  0xe57b,0xcc
  408c94:	mov    WORD PTR [edx],cs
  408c96:	out    dx,al
  408c97:	and    al,BYTE PTR ds:0x9cc37aee
  408c9d:	push   esp
  408c9e:	mov    ebx,0xf830bcf8
  408ca3:	xor    eax,0xb65efcd2
  408ca8:	pop    ss
  408ca9:	dec    eax
  408caa:	mov    ebp,0xd802e28f
  408caf:	les    edx,FWORD PTR [ebx]
  408cb1:	mov    edx,0x31a15e8e
  408cb6:	jge    0x408cd5
  408cb8:	mov    bh,0x7c
  408cba:	mov    ebx,0x77534598
  408cbf:	xlat   BYTE PTR ds:[ebx]
  408cc0:	push   esi
  408cc1:	fwait
  408cc2:	retf   
  408cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc4:	mov    dl,0x76
  408cc6:	es and al,0xce
  408cc9:	out    dx,al
  408cca:	push   0x831d9781
  408ccf:	popa   
  408cd0:	add    ch,BYTE PTR [edx-0x72]
  408cd3:	pop    ds
  408cd4:	push   edi
  408cd5:	stos   BYTE PTR es:[edi],al
  408cd6:	fist   WORD PTR [ebx]
  408cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd9:	int    0xc7
  408cdb:	xchg   bh,bl
  408cdd:	imul   eax,esi,0x6e
  408ce0:	push   0x7b2e222
  408ce5:	inc    esp
  408ce6:	adc    bh,BYTE PTR [eax]
  408ce8:	arpl   WORD PTR ds:0x95d7409f,ax
  408cee:	mov    esi,0xd9be51dd
  408cf3:	stc    
  408cf4:	jge    0x408d2e
  408cf6:	div    BYTE PTR [esi-0x21ea9da1]
  408cfc:	mov    edx,0x401840ab
  408d01:	add    bh,BYTE PTR [ecx]
  408d03:	test   DWORD PTR [ebp-0x58],ebx
  408d06:	mov    dh,0xcd
  408d08:	pusha  
  408d09:	mov    edi,0xa3ead263
  408d0e:	pcmpgtb mm5,mm3
  408d11:	in     al,0xc4
  408d13:	mov    ch,0x9c
  408d15:	shl    DWORD PTR [edx+0x30],1
  408d18:	lock stos DWORD PTR es:[edi],eax
  408d1a:	pushf  
  408d1b:	xchg   ebp,eax
  408d1c:	or     bh,BYTE PTR [esi+0x6b4e66e0]
  408d22:	mov    ch,0xf4
  408d24:	xchg   edi,eax
  408d25:	xchg   BYTE PTR [esi+0x40],ch
  408d28:	test   DWORD PTR [ebp-0x19183b57],edi
  408d2e:	push   ecx
  408d2f:	mov    bh,0x7b
  408d31:	sbb    BYTE PTR [ecx+0x1b],dl
  408d34:	xchg   ebp,eax
  408d35:	cld    
  408d36:	aam    0x18
  408d38:	dec    edi
  408d39:	inc    edx
  408d3a:	or     BYTE PTR [edx+0x75],bh
  408d3d:	aam    0x45
  408d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d40:	icebp  
  408d41:	jge    0x408d71
  408d43:	out    0x21,eax
  408d45:	push   ebp
  408d46:	add    bh,BYTE PTR [eax+ebx*4]
  408d49:	pop    DWORD PTR [eax-0xb21f530]
  408d4f:	ins    DWORD PTR es:[edi],dx
  408d50:	push   ebx
  408d51:	add    eax,0x4108c4e2
  408d56:	jbe    0x408dbe
  408d58:	pop    ss
  408d59:	ins    DWORD PTR es:[edi],dx
  408d5a:	cwde   
  408d5b:	fcom   DWORD PTR [edi]
  408d5d:	fsub   QWORD PTR [edi+eiz*8+0x1a]
  408d61:	pushf  
  408d62:	sub    al,0x3b
  408d64:	adc    al,0xbe
  408d66:	cmp    ch,dl
  408d68:	and    DWORD PTR [eax],edx
  408d6a:	in     eax,0xe6
  408d6c:	in     al,dx
  408d6d:	sahf   
  408d6e:	xchg   ecx,eax
  408d6f:	jmp    0x577:0xb1253ffa
  408d76:	shr    DWORD PTR [edi+0x11],0xe4
  408d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7b:	lock loope 0x408d37
  408d7e:	mov    ecx,0x1cd48995
  408d83:	inc    edx
  408d84:	ds add esi,edx
  408d87:	mov    ebx,0xa021c741
  408d8c:	into   
  408d8d:	mov    esp,0x34ca392e
  408d92:	and    eax,DWORD PTR [edi]
  408d94:	xor    al,0x82
  408d96:	mov    eax,ds:0xbf5a6136
  408d9b:	xchg   edx,eax
  408d9c:	cmp    ebp,DWORD PTR [ebx+0x753ed3f0]
  408da2:	pusha  
  408da3:	xor    bh,BYTE PTR [ebx-0x6f]
  408da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da7:	enter  0xab3f,0xa1
  408dab:	pop    ds
  408dac:	push   ebp
  408dad:	pop    es
  408dae:	sar    BYTE PTR [ebx+0x328c7cb6],0x3
  408db5:	repz out 0xa9,eax
  408db8:	aam    0x9c
  408dba:	imul   esp,DWORD PTR [ecx-0x78a5e316],0x2a25998e
  408dc4:	aad    0x51
  408dc6:	rol    bl,0xab
  408dc9:	mov    bh,0x2
  408dcb:	and    al,0x96
  408dcd:	jmp    0x4329dd6a
  408dd2:	cmp    eax,0x62f74b15
  408dd7:	ret    0xcee8
  408dda:	je     0x408d69
  408ddc:	pop    ebx
  408ddd:	sub    ch,cl
  408ddf:	outs   dx,DWORD PTR ds:[esi]
  408de0:	add    al,BYTE PTR [edx+esi*2-0x1c206e47]
  408de7:	push   edi
  408de8:	call   0x1578b2b9
  408ded:	pushf  
  408dee:	in     eax,dx
  408def:	aaa    
  408df0:	push   0x77802acc
  408df5:	stos   BYTE PTR es:[edi],al
  408df6:	imul   esi,esp,0x6d0bd637
  408dfc:	pop    esi
  408dfd:	inc    DWORD PTR [ebx+ebp*2]
  408e00:	sti    
  408e01:	push   eax
  408e02:	or     DWORD PTR ds:0x1803fdcc,ebx
  408e08:	call   0x2704ed74
  408e0d:	test   eax,0xd592b578
  408e12:	stc    
  408e13:	out    dx,al
  408e14:	pop    edx
  408e15:	in     eax,0x57
  408e17:	mov    BYTE PTR [eax],dl
  408e19:	ficomp WORD PTR [edi]
  408e1b:	jmp    0xcf1bcb87
  408e20:	adc    BYTE PTR [edx],0x1e
  408e23:	cwde   
  408e24:	jle    0x408e21
  408e26:	(bad)  
  408e27:	out    0x1e,eax
  408e29:	mov    ebp,0x6f5b60f4
  408e2e:	cmp    eax,0x95e247ee
  408e33:	pop    ss
  408e34:	hlt    
  408e35:	stos   BYTE PTR es:[edi],al
  408e36:	nop
  408e37:	pop    ss
  408e38:	jno    0x408dc9
  408e3a:	adc    esp,edi
  408e3c:	fdivp  st(2),st
  408e3e:	in     eax,dx
  408e3f:	jge    0x408e12
  408e41:	retf   0x995d
  408e44:	jg     0x408e77
  408e46:	xor    bh,bh
  408e48:	xor    eax,0x90a4e139
  408e4d:	cmovl  esi,DWORD PTR [edx+0x39]
  408e51:	sbb    ah,cl
  408e53:	fwait
  408e54:	push   ds
  408e55:	inc    edi
  408e56:	nop
  408e57:	sub    esi,0x6a
  408e5a:	js     0x408ea2
  408e5c:	mov    al,0xe8
  408e5e:	mov    BYTE PTR [eax],bl
  408e60:	cwde   
  408e61:	pop    edx
  408e62:	mov    BYTE PTR [edx],bl
  408e64:	je     0x408e3a
  408e66:	test   eax,0x2a023606
  408e6b:	jge    0x408e63
  408e6d:	and    eax,0x565999b1
  408e72:	fucomp st(1)
  408e74:	add    al,0x8f
  408e76:	(bad)  
  408e77:	push   cs
  408e78:	stos   DWORD PTR es:[edi],eax
  408e79:	jns    0x408ef8
  408e7b:	inc    edx
  408e7c:	xor    bh,0x1
  408e7f:	sub    esp,0x30
  408e82:	mov    DWORD PTR [ebp-0x18],0xcb79b576
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428439,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	pop    ebp
  408eaf:	sbb    eax,edi
  408eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb2:	jp     0x408f31
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0x93a10998
  408ebe:	mov    bh,BYTE PTR [edx-0x1fa45c4a]
  408ec4:	(bad)
  408ec7:	jb     0x408ef3
  408ec9:	jnp    0x408ef7
  408ecb:	sub    eax,0xd261cbc6
  408ed0:	outs   dx,DWORD PTR ds:[esi]
  408ed1:	add    bh,BYTE PTR [edi+eax*1]
  408ed4:	xor    ch,BYTE PTR [ecx+ebx*4]
  408ed7:	sbb    edi,DWORD PTR [ebp-0x701bc290]
  408edd:	sbb    ah,bh
  408edf:	test   DWORD PTR [ecx+0x1d147192],edx
  408ee5:	(bad)  
  408ee7:	popf   
  408ee8:	lds    esp,FWORD PTR [esi-0x141247b2]
  408eee:	jmp    0x408f0d
  408ef0:	les    ebx,FWORD PTR [esi-0x11a7881b]
  408ef6:	loop   0x408f1f
  408ef8:	dec    ebx
  408ef9:	iret   
  408efa:	test   BYTE PTR [ebx],ah
  408efc:	in     eax,dx
  408efd:	jbe    0x408f6b
  408eff:	adc    ecx,ebx
  408f01:	mov    edi,0xd487da5a
  408f06:	int    0x8d
  408f08:	ss fs rcl ebx,cl
  408f0c:	ret    0x1269
  408f0f:	imul   ebp,DWORD PTR [edx-0x2d61e417],0x1916cf1d
  408f19:	jne    0x408f46
  408f1b:	cli    
  408f1c:	mov    cs,edi
  408f1e:	leave  
  408f1f:	pop    edi
  408f20:	xchg   ebx,eax
  408f21:	fcmovu st,st(5)
  408f23:	ins    BYTE PTR es:[edi],dx
  408f24:	int3   
  408f25:	sub    BYTE PTR [esi+0x35ddfd9e],bh
  408f2b:	sahf   
  408f2c:	es sahf 
  408f2e:	pop    eax
  408f2f:	std    
  408f30:	test   ebp,ecx
  408f32:	adc    cl,dh
  408f34:	inc    ecx
  408f35:	inc    edi
  408f36:	xchg   ebx,eax
  408f37:	cmp    bl,bh
  408f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3a:	xor    al,0x63
  408f3c:	rcl    BYTE PTR [ecx-0x35],0x21
  408f40:	cmp    al,0x8a
  408f42:	retf   0x8bae
  408f45:	add    dh,BYTE PTR [edi-0xa]
  408f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f49:	xchg   ebp,eax
  408f4a:	or     al,0xc3
  408f4c:	scas   eax,DWORD PTR es:[edi]
  408f4d:	and    bh,ah
  408f4f:	in     al,0x8c
  408f51:	sub    ah,BYTE PTR [edi+0x1e]
  408f54:	pop    ebp
  408f55:	or     BYTE PTR [edx-0x43],al
  408f58:	call   0x78f1:0xc4199970
  408f5f:	out    dx,al
  408f60:	dec    edi
  408f61:	adc    al,0xed
  408f63:	mov    BYTE PTR [ebx],cl
  408f65:	(bad)  
  408f66:	and    DWORD PTR [esi+0x76],eax
  408f69:	repz push esp
  408f6b:	sub    edi,0x6b642729
  408f71:	pop    edx
  408f72:	icebp  
  408f73:	fmul   QWORD PTR ds:0x49babfbd
  408f79:	push   0xdfb6a0d7
  408f7e:	aaa    
  408f7f:	mov    ebp,0x5d589f20
  408f84:	nop
  408f85:	jle    0x408f83
  408f87:	xchg   ah,al
  408f89:	nop
  408f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8b:	shl    DWORD PTR [ebx-0x231f4807],1
  408f91:	mov    al,ds:0x9a7402fc
  408f96:	sub    al,0x73
  408f98:	xchg   esp,eax
  408f99:	mov    cl,0xe5
  408f9b:	(bad)  
  408f9c:	call   0x5c52:0x958dfaaf
  408fa3:	pop    edi
  408fa4:	and    DWORD PTR [edx],ebx
  408fa6:	cmp    al,0x13
  408fa8:	(bad)  
  408fa9:	sub    al,0x39
  408fab:	outs   dx,DWORD PTR ds:[esi]
  408fac:	test   eax,esp
  408fae:	xchg   ebp,eax
  408faf:	add    WORD PTR [edx-0x7],0xfffc
  408fb4:	sbb    edx,ebp
  408fb6:	inc    ecx
  408fb7:	push   ss
  408fb8:	jne    0x408fa6
  408fba:	dec    edi
  408fbb:	dec    ebp
  408fbc:	and    BYTE PTR [esi-0x7d],ah
  408fbf:	cmc    
  408fc0:	xchg   edi,eax
  408fc1:	mov    al,ds:0xaf55acb
  408fc6:	mov    al,0x59
  408fc8:	mov    ebx,0xf608cdf6
  408fcd:	adc    BYTE PTR [edx-0x28],dh
  408fd0:	xor    al,0x40
  408fd2:	or     ebx,ebx
  408fd4:	sahf   
  408fd5:	pop    ebp
  408fd6:	scas   eax,DWORD PTR es:[edi]
  408fd7:	pop    esi
  408fd8:	mov    ?,esi
  408fda:	pop    es
  408fdb:	push   0x13bb164b
  408fe0:	or     DWORD PTR [esi],esp
  408fe2:	imul   eax,DWORD PTR [edx+0x43],0xffffff94
  408fe6:	dec    esi
  408fe7:	sub    al,0x7a
  408fe9:	add    dh,BYTE PTR [ebp-0x8]
  408fec:	imul   eax,DWORD PTR [edi+0x25],0xc411bcf9
  408ff3:	dec    ecx
  408ff4:	popf   
  408ff5:	add    dh,BYTE PTR [esi]
  408ff7:	imul   BYTE PTR [edx+0x5d]
  408ffa:	add    dh,BYTE PTR [ecx+0x37eb47db]
  409000:	rcr    BYTE PTR [esi],0x96
  409003:	sub    eax,0xac711dc7
  409008:	inc    esp
  409009:	inc    ebp
  40900a:	ins    BYTE PTR es:[edi],dx
  40900b:	(bad)  
  40900c:	fimul  DWORD PTR [edx-0xb6b10eb]
  409012:	dec    edi
  409013:	and    DWORD PTR [edi],ecx
  409015:	ja     0x409031
  409017:	pop    edi
  409018:	shl    BYTE PTR [esi],cl
  40901a:	xor    BYTE PTR [ebp+0xe],ah
  40901d:	outs   dx,BYTE PTR ds:[esi]
  40901e:	dec    ebp
  40901f:	rol    ch,cl
  409021:	dec    edx
  409022:	sbb    cl,0x2b
  409025:	pop    edi
  409026:	out    0x9e,eax
  409028:	sti    
  409029:	push   0xffffff83
  40902b:	inc    ecx
  40902c:	cwde   
  40902d:	and    al,0xe7
  40902f:	loop   0x409021
  409031:	iret   
  409032:	fld    QWORD PTR ds:0x481466a8
  409038:	or     ebx,edx
  40903a:	push   ecx
  40903b:	stos   BYTE PTR es:[edi],al
  40903c:	scas   eax,DWORD PTR es:[edi]
  40903d:	xchg   esp,eax
  40903e:	dec    esi
  40903f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409040:	fsub   st,st(6)
  409042:	fdivr  DWORD PTR [ebp+0x5753ff99]
  409048:	stc    
  409049:	cs mov bl,0x21
  40904c:	mov    cl,bl
  40904e:	(bad)  
  40904f:	je     0x4090a2
  409051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409052:	sbb    esi,edx
  409054:	call   0x6715:0x885eff56
  40905b:	div    DWORD PTR [eax+0x18e6c2d]
  409061:	retf   
  409062:	jb     0x4090af
  409064:	dec    edi
  409065:	fidivr WORD PTR [ecx]
  409067:	push   esp
  409068:	push   esp
  409069:	out    dx,eax
  40906a:	test   BYTE PTR [edi+0x12944961],ah
  409070:	dec    ebx
  409071:	mov    ch,0xba
  409073:	mov    ecx,DWORD PTR [esi]
  409075:	iret   
  409076:	cld    
  409077:	fisubr WORD PTR [ebx-0x4ec27e3]
  40907d:	jo     0x4090b0
  40907f:	popa   
  409080:	pop    eax
  409081:	mov    ecx,0xd76d0970
  409086:	into   
  409087:	pushf  
  409088:	xor    al,0xca
  40908a:	mov    edx,0x8792b56f
  40908f:	sti    
  409090:	jne    0x40909a
  409092:	xor    dl,BYTE PTR [ecx-0x93ee8f0]
  409098:	jno    0x4090b3
  40909a:	popa   
  40909b:	shl    DWORD PTR [edx-0x49],cl
  40909e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40909f:	cmp    al,0x7
  4090a1:	gs pop ebp
  4090a3:	mov    DWORD PTR [esi+0x22285e2a],esp
  4090a9:	mov    al,ds:0x50a9406b
  4090ae:	add    al,0x47
  4090b0:	sub    ebp,DWORD PTR [esp+0x2948b2d8]
  4090b7:	or     eax,0xee51a3b6
  4090bc:	jmp    0x8faa:0x17957f2c
  4090c3:	mov    al,ds:0x2b3caa09
  4090c8:	out    0x8a,al
  4090ca:	std    
  4090cb:	fistp  WORD PTR [ebx]
  4090cd:	ds stc 
  4090cf:	cmc    
  4090d0:	xor    al,0x89
  4090d2:	cmp    al,0x22
  4090d4:	mov    ds:0x728a8291,eax
  4090d9:	mov    esi,0x36766fe
  4090de:	pop    ecx
  4090df:	push   ss
  4090e0:	je     0x40910f
  4090e2:	mov    eax,ds:0xc45e2c41
  4090e7:	pop    edx
  4090e8:	sub    BYTE PTR [edx-0x7a647460],bh
  4090ee:	cdq    
  4090ef:	sbb    BYTE PTR [ebx-0x34a936fc],0xec
  4090f6:	out    0xcb,eax
  4090f8:	das    
  4090f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090fa:	stos   BYTE PTR es:[edi],al
  4090fb:	aas    
  4090fc:	fstp   TBYTE PTR [ebp-0x55]
  4090ff:	fld    TBYTE PTR [edi+0x2c]
  409102:	and    BYTE PTR [eax],dl
  409104:	add    BYTE PTR [esi+0x2e],cl
  409107:	fwait
  409108:	pop    es
  409109:	mov    cl,0x70
  40910b:	pushf  
  40910c:	das    
  40910d:	jb     0x4090e2
  40910f:	mov    dl,0x7c
  409111:	xchg   ecx,eax
  409112:	repnz inc bp
  409115:	and    bh,0xe8
  409118:	mov    gs,ebx
  40911a:	cmp    eax,0xd045c751
  40911f:	jb     0x4090d6
  409121:	jns    0x4090ee
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428561,0x0
  40912d:	mov    DWORD PTR ds:0x42855d,0x24a6
  409137:	mov    DWORD PTR ds:0x428411,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284b5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428561,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428137
  409169:	push   0x4282e3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428359
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x4283f9,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428461
  409188:	add    DWORD PTR ds:0x428331,ecx
  40918e:	neg    DWORD PTR ds:0x428325
  409194:	xor    DWORD PTR ds:0x4284e5,ebx
  40919a:	or     DWORD PTR ds:0x428419,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283a9
  4091cb:	mov    eax,ds:0x42851d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428331,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284e1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284e1,0x428569
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284ed,0x428409
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284dd,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284dd,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284e9,0x428401
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428431,0x42854d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428415,0x4284b9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428359,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42841d
  409280:	xor    esi,DWORD PTR ds:0x428455
  409286:	mov    DWORD PTR ds:0x42841d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428559
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	ins    DWORD PTR es:[edi],dx
  4092a7:	mov    eax,0x8335d16c
  4092ac:	mov    esi,0xbec279be
  4092b1:	mov    esi,0xd96f9156
  4092b6:	push   ds
  4092b7:	das    
  4092b8:	adc    DWORD PTR [esi+0xd8d6661],0x2ca5943c
  4092c2:	inc    ebp
  4092c3:	pop    esp
  4092c4:	jp     0x4092f5
  4092c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c7:	push   0x4e
  4092c9:	pop    esp
  4092ca:	rol    ecx,1
  4092cc:	aas    
  4092cd:	test   al,0x9e
  4092cf:	es mov edi,0xcb7c9107
  4092d5:	add    BYTE PTR [edx],bl
  4092d7:	or     dl,BYTE PTR [eax-0x4a]
  4092da:	cs dec edi
  4092dc:	xchg   ecx,eax
  4092dd:	stos   BYTE PTR es:[edi],al
  4092de:	rol    edx,1
  4092e0:	ret    
  4092e1:	sub    al,0xbb
  4092e3:	adc    ch,al
  4092e5:	inc    edi
  4092e6:	es fstp st(3)
  4092e9:	inc    esi
  4092ea:	mov    esp,0x1c8b9c15
  4092ef:	mov    BYTE PTR [edx+ecx*1],ah
  4092f2:	out    dx,al
  4092f3:	mov    dl,0xc9
  4092f5:	das    
  4092f6:	push   ds
  4092f7:	mov    cl,0xec
  4092f9:	and    edx,DWORD PTR [esi-0xd29e154]
  4092ff:	push   ebx
  409300:	sti    
  409301:	cmc    
  409302:	retf   0x4270
  409305:	pusha  
  409306:	cmp    ebp,DWORD PTR [ecx]
  409308:	jmp    0x3ba287c8
  40930d:	xor    DWORD PTR [ebp+0x3498399c],esi
  409313:	loopne 0x409392
  409315:	fcomp  st(6)
  409317:	adc    BYTE PTR [ebx+0x4ba46a5f],al
  40931d:	bound  ebp,QWORD PTR [ebp+0x243bd634]
  409323:	pop    ds
  409324:	push   esi
  409325:	cmc    
  409326:	cmp    ebx,esp
  409328:	cs push ebp
  40932a:	xor    dh,BYTE PTR [eax+esi*4+0x3d174136]
  409331:	add    edx,DWORD PTR [ebp+0x1fb72af6]
  409337:	sbb    esi,ebx
  409339:	inc    esi
  40933a:	dec    esi
  40933b:	test   al,0x15
  40933d:	xor    DWORD PTR [esi-0x752f9525],0xffffff8a
  409344:	fisubr WORD PTR [ebp-0x17]
  409347:	popa   
  409348:	sub    ch,BYTE PTR [esi]
  40934a:	inc    edi
  40934b:	fst    QWORD PTR [eax+edx*8+0x27]
  40934f:	inc    ebx
  409350:	sar    esp,cl
  409352:	mov    ch,0xad
  409354:	push   ebp
  409355:	inc    edi
  409356:	mov    edi,DWORD PTR [eax+0x6]
  409359:	bound  ecx,QWORD PTR [edi+eax*4+0x1e92a1cc]
  409360:	test   bh,0xb4
  409363:	xor    DWORD PTR [ecx+0x2a5009b0],ebx
  409369:	test   DWORD PTR [ebx+0x545d4d3d],ebx
  40936f:	inc    DWORD PTR [ebx]
  409371:	in     eax,0x80
  409373:	xor    dh,BYTE PTR [ecx]
  409375:	cli    
  409376:	outs   dx,DWORD PTR ds:[esi]
  409377:	hlt    
  409378:	icebp  
  409379:	iret   
  40937a:	daa    
  40937b:	mov    bh,0x47
  40937d:	add    eax,0x5d01f529
  409382:	out    dx,al
  409383:	les    edx,FWORD PTR [ebx-0x38]
  409386:	scas   eax,DWORD PTR es:[edi]
  409387:	xchg   edi,eax
  409388:	retf   0xd1e1
  40938b:	mov    ds:0x8194a240,al
  409390:	or     DWORD PTR [edi+eiz*8-0x5f91df1],ecx
  409397:	cmp    BYTE PTR [esi+0x2d],ch
  40939a:	jb     0x4093d9
  40939c:	outs   dx,BYTE PTR ds:[esi]
  40939d:	jmp    0x1c8b58fd
  4093a2:	push   ds
  4093a3:	adc    eax,0x6321a659
  4093a8:	fimul  WORD PTR [edx+edx*4-0x3d]
  4093ac:	push   ds
  4093ad:	out    0x7d,al
  4093af:	and    DWORD PTR [esp+ebp*1+0x76cbf5c5],0x157e123d
  4093ba:	sbb    BYTE PTR [ecx],ch
  4093bc:	out    dx,al
  4093bd:	sub    esp,DWORD PTR [eax-0x59]
  4093c0:	mov    ds:0x52068b2,al
  4093c5:	in     al,dx
  4093c6:	pushf  
  4093c7:	pop    ds
  4093c8:	push   0xffffffaa
  4093ca:	addr16 adc al,0xe
  4093cd:	in     eax,dx
  4093ce:	xchg   BYTE PTR [edi+edx*2],al
  4093d1:	cmp    WORD PTR [eax+eax*4+0x1b5553c1],bx
  4093d9:	rcr    BYTE PTR [ecx+0x16],0x1c
  4093dd:	in     eax,dx
  4093de:	jle    0x409458
  4093e0:	pop    esp
  4093e1:	stc    
  4093e2:	dec    esi
  4093e3:	neg    BYTE PTR [ebx+0x35]
  4093e6:	into   
  4093e7:	add    DWORD PTR [eax*2-0x68f8acd0],0xccc82753
  4093f2:	xchg   DWORD PTR [eax+edx*4-0x24580825],ebp
  4093f9:	pop    ss
  4093fa:	push   esi
  4093fb:	outs   dx,BYTE PTR ds:[esi]
  4093fc:	and    dh,BYTE PTR [edx+ebx*8]
  4093ff:	mov    edx,0x502f4224
  409404:	dec    esp
  409405:	popf   
  409406:	jo     0x40946f
  409408:	div    BYTE PTR [edi+0x6c]
  40940b:	dec    esi
  40940c:	dec    esi
  40940d:	or     DWORD PTR [ebp+0x0],ebx
  409410:	jmp    0x409486
  409412:	adc    eax,DWORD PTR [ecx-0x2adc62b7]
  409418:	nop
  409419:	inc    ebx
  40941a:	mov    al,0x54
  40941c:	mov    eax,ds:0xbf25d00c
  409421:	nop
  409422:	xchg   ecx,eax
  409423:	jmp    0x409409
  409425:	inc    ebp
  409426:	sub    al,0x1c
  409428:	inc    ecx
  409429:	or     ecx,ecx
  40942b:	stos   DWORD PTR es:[edi],eax
  40942c:	cmp    BYTE PTR ds:0xdad56d22,al
  409432:	dec    esp
  409433:	sub    ch,BYTE PTR [edx+ebp*1]
  409436:	cmp    al,0xe1
  409438:	xchg   edx,eax
  409439:	xor    dl,BYTE PTR [edx+0x58ad0d78]
  40943f:	sbb    al,0xcf
  409441:	jae    0x4093cf
  409443:	jmp    0x4094bc
  409445:	mov    ecx,0x324b80cf
  40944a:	scas   al,BYTE PTR es:[edi]
  40944b:	cmp    al,0xbc
  40944d:	jge    0x4094cd
  40944f:	mov    bl,0x8
  409451:	cmp    cl,BYTE PTR [ebx]
  409453:	or     esp,DWORD PTR [esi-0xe482660]
  409459:	lahf   
  40945a:	pop    esi
  40945b:	sub    ecx,DWORD PTR [edi+0x6b]
  40945e:	mov    ch,0x38
  409460:	ds pop es
  409462:	and    DWORD PTR [ebx+edx*4],ebp
  409465:	and    BYTE PTR ds:[ecx-0x1c],cl
  409469:	xor    BYTE PTR [ebp-0x68620bdf],ah
  40946f:	fwait
  409470:	pop    edx
  409471:	xrelease xchg DWORD PTR [ebp+0x5b90f61b],ebx
  409478:	mov    ebp,0x7aff3fd5
  40947d:	sbb    ebx,DWORD PTR [ebx-0x48]
  409480:	ins    DWORD PTR es:[edi],dx
  409481:	push   esi
  409482:	out    0x55,al
  409484:	les    eax,FWORD PTR [edi+0x0]
  409487:	push   esp
  409488:	(bad)  
  409489:	in     eax,dx
  40948a:	xchg   ebp,eax
  40948b:	mov    dh,0x4c
  40948d:	addr16 mov ebp,0x1d21ba24
  409493:	pop    es
  409494:	lock mov ecx,0xa87717b2
  40949a:	adc    DWORD PTR [eax],ebp
  40949c:	in     al,dx
  40949d:	pop    esp
  40949e:	jo     0x409495
  4094a0:	scas   al,BYTE PTR es:[edi]
  4094a1:	push   cs
  4094a2:	xor    eax,0x80b14dd5
  4094a7:	xchg   esp,eax
  4094a8:	jb     0x409525
  4094aa:	xchg   ebp,eax
  4094ab:	scas   eax,DWORD PTR es:[edi]
  4094ac:	xor    al,0x51
  4094ae:	mov    cl,0xfe
  4094b0:	push   ss
  4094b1:	enter  0xbaf4,0x8a
  4094b5:	ins    DWORD PTR es:[edi],dx
  4094b6:	call   0x31ba:0xb48aa311
  4094bd:	mov    ds:0xf00c0fed,al
  4094c2:	(bad)  [edi+0x203500c5]
  4094c8:	pop    edi
  4094c9:	cld    
  4094ca:	sub    eax,0x38992c01
  4094cf:	jbe    0x409520
  4094d1:	cs fwait
  4094d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d4:	add    BYTE PTR [esp+ebp*2+0x77],ch
  4094d8:	(bad)  
  4094da:	clc    
  4094db:	call   0x4115a9bc
  4094e0:	sbb    DWORD PTR [edx+0x2b66229c],edi
  4094e6:	push   ss
  4094e7:	out    dx,al
  4094e8:	sti    
  4094e9:	xchg   esp,eax
  4094ea:	mov    fs,WORD PTR [ebx+0x762113e3]
  4094f0:	loope  0x40948d
  4094f2:	outs   dx,BYTE PTR ds:[esi]
  4094f3:	lods   eax,DWORD PTR ds:[esi]
  4094f4:	daa    
  4094f5:	ror    ebx,1
  4094f7:	jl     0x40949d
  4094f9:	mov    ds:0x8457c534,eax
  4094fe:	mov    edi,DWORD PTR [edx]
  409500:	popf   
  409501:	(bad)  
  409502:	jge    0x4094a0
  409504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409505:	and    ebx,DWORD PTR [eax+eax*2-0x2c]
  409509:	(bad)  
  40950a:	jl     0x409580
  40950c:	dec    esi
  40950d:	inc    edi
  40950e:	dec    edx
  40950f:	cmc    
  409510:	clc    
  409511:	jb     0x4094df
  409513:	push   ds
  409514:	mov    esi,DWORD PTR [ebp-0x24]
  409517:	adc    DWORD PTR ds:0x42833d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428331
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428541
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428441,0x42845d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428335,0x42833d
  409545:	call   0x42226d
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428429,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428539,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428425
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428429,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428441
  40958b:	push   0x4282e3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42854d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42843d
  4095a6:	or     ecx,DWORD PTR ds:0x428455
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284dd,edx
  4095b4:	sbb    DWORD PTR ds:0x428431,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428455,0x428571
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428405,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283d9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42834d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42841d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428561,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428425,0x0
  409635:	mov    DWORD PTR ds:0x42842d,edi
  40963b:	mov    DWORD PTR ds:0x4283f5,ecx
  409641:	mov    DWORD PTR ds:0x428435,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428431
  409656:	mov    DWORD PTR ds:0x4284c9,ebx
  40965c:	cmp    DWORD PTR ds:0x428425,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428429,ecx
  40967a:	sbb    DWORD PTR ds:0x428425,edi
  409680:	dec    DWORD PTR ds:0x428339
  409686:	mov    esi,DWORD PTR ds:0x428325
  40968c:	xor    DWORD PTR ds:0x4284cd,esi
  409692:	and    DWORD PTR ds:0x4284d5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284d9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284e1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428331
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42841d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284d9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284c1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284b5
  4096ef:	and    DWORD PTR ds:0x42831d,edx
  4096f5:	dec    DWORD PTR ds:0x428559
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428405,0x146d
  40970b:	sbb    DWORD PTR ds:0x428555,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42835d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428321,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428355,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428349,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42853d
  40975e:	xor    edx,DWORD PTR ds:0x428455
  409764:	mov    DWORD PTR ds:0x42853d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428459
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42844d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428431,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x4283fd,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x4283fd,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42854d
  4097c3:	adc    DWORD PTR ds:0x4284d5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	and    BYTE PTR [ecx+0x58],dl
  40989e:	shl    edx,1
  4098a0:	xchg   DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0xd923288d
  4098ab:	loopne 0x40989e
  4098ad:	xchg   DWORD PTR [edi-0x3b],edi
  4098b0:	sahf   
  4098b1:	retf   0xe1ec
  4098b4:	pop    ebp
  4098b5:	lock dec ecx
  4098b7:	or     esp,ebx
  4098b9:	or     eax,0x3299a9be
  4098be:	or     ebx,DWORD PTR [ebp-0x57]
  4098c1:	cs jmp 0x409907
  4098c4:	out    0x5f,eax
  4098c6:	aam    0x93
  4098c8:	dec    esp
  4098c9:	aaa    
  4098ca:	pop    ecx
  4098cb:	inc    edi
  4098cc:	cmp    DWORD PTR [eax-0x1c],0x5b37f382
  4098d3:	jns    0x4098f9
  4098d5:	fcmovne st,st(5)
  4098d7:	mov    dh,0xce
  4098d9:	dec    ebx
  4098da:	sahf   
  4098db:	retf   0x28ac
  4098de:	fmulp  st(4),st
  4098e0:	add    cl,BYTE PTR [ebx]
  4098e2:	repnz mov dh,0xa6
  4098e5:	and    BYTE PTR [ebp+0x759e3a5d],dl
  4098eb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4098ed:	mov    esi,0x1f034cd6
  4098f2:	and    eax,0xe3ca914e
  4098f7:	sti    
  4098f8:	aaa    
  4098f9:	fist   WORD PTR [esi]
  4098fb:	pop    esp
  4098fc:	lock push ss
  4098fe:	ins    DWORD PTR es:[edi],dx
  4098ff:	adc    eax,ebx
  409901:	fwait
  409902:	int3   
  409903:	xchg   esp,eax
  409904:	mov    dh,0x5c
  409906:	fisubr DWORD PTR [esp+ebp*8-0x23eef4a6]
  40990d:	es or  eax,0x6ed4ba84
  409913:	dec    esp
  409914:	ret    0x5a7f
  409917:	lahf   
  409918:	jp     0x4098e5
  40991a:	retf   0xc802
  40991d:	lock sub esp,DWORD PTR [ecx]
  409920:	mov    eax,0x8be8f329
  409925:	sbb    al,0x16
  409927:	dec    ebp
  409928:	push   ebp
  409929:	cld    
  40992a:	jbe    0x409943
  40992c:	pop    es
  40992d:	fsubr  st(5),st
  40992f:	mov    bh,0x15
  409931:	mov    ds:0xe4f4fb00,al
  409936:	push   ebp
  409937:	add    ebp,DWORD PTR [ebx+0x51]
  40993a:	adc    ah,BYTE PTR [esi]
  40993c:	xor    BYTE PTR [esi+0x4d],bl
  40993f:	js     0x40995b
  409941:	mov    ah,0xad
  409943:	push   eax
  409944:	mov    edi,0x41c1d05e
  409949:	adc    al,0xde
  40994b:	mov    es,WORD PTR [ebp+0x57d47cd0]
  409951:	mov    dh,0x97
  409953:	mov    ebp,ebx
  409955:	test   eax,0xdd588d95
  40995a:	cmp    DWORD PTR [edi+esi*1-0x1abe0862],0x4bd30ab8
  409965:	or     ebp,DWORD PTR [si-0x7dbc]
  40996a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996b:	or     BYTE PTR [ecx+0x766c6380],bl
  409971:	mov    eax,ds:0x1e35b065
  409976:	aas    
  409977:	xchg   ebx,eax
  409978:	push   edi
  409979:	mov    ch,0xe9
  40997b:	xchg   DWORD PTR [edx-0x4bca642e],eax
  409981:	dec    ebp
  409982:	adc    eax,0xe93427cb
  409987:	mov    ah,0x2a
  409989:	nop
  40998a:	mov    edx,0x2c75b1ef
  40998f:	ins    BYTE PTR es:[edi],dx
  409990:	or     ebp,DWORD PTR [ecx-0x51]
  409993:	xor    DWORD PTR [eax-0x6d748cf7],eax
  409999:	cmc    
  40999a:	jmp    0x8d95:0xb633a30
  4099a1:	sahf   
  4099a2:	push   ecx
  4099a3:	adc    eax,0xadd349fd
  4099a8:	add    al,0x7
  4099aa:	test   eax,0xc295b4c8
  4099af:	je     0x409948
  4099b1:	popa   
  4099b2:	inc    edx
  4099b3:	xchg   edi,eax
  4099b4:	adc    al,0x77
  4099b6:	retf   
  4099b7:	push   0x59810286
  4099bc:	ror    dh,1
  4099be:	mov    esp,0x624e3867
  4099c3:	mul    bl
  4099c5:	(bad)  [ebx+ebp*2+0x4ec9c851]
  4099cc:	sbb    al,0xb0
  4099ce:	mul    edi
  4099d0:	xchg   dh,al
  4099d2:	arpl   WORD PTR [edx-0x56],di
  4099d5:	cmp    cl,cl
  4099d7:	mov    esi,0xda3e95d7
  4099dc:	sbb    DWORD PTR [ebx+esi*4-0x75ccd172],ebx
  4099e3:	jb     0x4099fa
  4099e5:	dec    ah
  4099e7:	mov    DWORD PTR [ecx-0x46e77e9],ecx
  4099ed:	push   ebp
  4099ee:	cdq    
  4099ef:	pop    edx
  4099f0:	outs   dx,BYTE PTR ds:[esi]
  4099f1:	data16 xlat BYTE PTR ds:[ebx]
  4099f3:	cs in  eax,0x99
  4099f6:	test   DWORD PTR [esi-0x14795f48],esi
  4099fc:	adc    BYTE PTR [ecx+0x4b15146],bh
  409a02:	cmp    edx,0xe1525182
  409a08:	cmp    al,0x5d
  409a0a:	cmp    ecx,ecx
  409a0c:	xor    eax,0xba88b0d8
  409a11:	clc    
  409a12:	mov    ch,0xe6
  409a14:	addr16 push ebx
  409a16:	in     eax,dx
  409a17:	into   
  409a18:	mov    bl,0xe3
  409a1a:	jb     0x4099d4
  409a1c:	xor    edi,edi
  409a1e:	repnz sti 
  409a20:	test   eax,0xbb8b9684
  409a25:	sbb    DWORD PTR [ebx+0x5afcfca1],ebp
  409a2b:	dec    edi
  409a2c:	in     eax,0xa5
  409a2e:	outs   dx,DWORD PTR ds:[esi]
  409a2f:	sbb    DWORD PTR ds:0x4ab35af0,edi
  409a35:	js     0x4099e3
  409a37:	xor    al,0xca
  409a39:	xchg   edx,eax
  409a3a:	div    ebp
  409a3c:	retf   0x9ec3
  409a3f:	test   BYTE PTR [ebp+0x1142793d],0xc0
  409a46:	mov    ds:0x4e7760e7,al
  409a4b:	mov    ebp,0x6e30b37b
  409a50:	hlt    
  409a51:	icebp  
  409a52:	aam    0x40
  409a54:	mov    esi,0x4a7a79c0
  409a59:	wbinvd 
  409a5b:	inc    edx
  409a5c:	fdiv   DWORD PTR [edi+0x5fa66bc1]
  409a62:	std    
  409a63:	popa   
  409a64:	jge    0x4099f4
  409a66:	inc    DWORD PTR [ecx+0x59a6b4d8]
  409a6c:	pop    ss
  409a6d:	cwde   
  409a6e:	ins    DWORD PTR es:[edi],dx
  409a6f:	nop
  409a70:	mov    ah,0x9f
  409a72:	push   es
  409a73:	jg     0x409a6a
  409a75:	xor    DWORD PTR [ebp+0x27b82cfe],ebx
  409a7b:	pop    edx
  409a7c:	clc    
  409a7d:	mov    edi,ss
  409a7f:	push   edx
  409a80:	scas   eax,DWORD PTR es:[edi]
  409a81:	adc    al,0x84
  409a83:	retf   
  409a84:	jmp    0xbf2c:0x21f3396f
  409a8b:	add    edi,edx
  409a8d:	mov    eax,0x8177c38c
  409a92:	push   ecx
  409a93:	xchg   DWORD PTR [ebx],esi
  409a95:	push   ecx
  409a96:	adc    ebx,ebp
  409a98:	jmp    0xd6f5071f
  409a9d:	dec    esi
  409a9e:	or     esp,edx
  409aa0:	ins    DWORD PTR es:[edi],dx
  409aa1:	js     0x409aca
  409aa3:	mov    edx,0xe58259e8
  409aa8:	hlt    
  409aa9:	sbb    eax,0xd6f214bd
  409aae:	adc    al,0x79
  409ab0:	mov    ebx,0x53a4d486
  409ab5:	pop    eax
  409ab6:	inc    edx
  409ab7:	pop    es
  409ab8:	lds    ebx,FWORD PTR [esi-0x61]
  409abb:	hlt    
  409abc:	mov    ds:0x8b416365,al
  409ac1:	lds    esi,FWORD PTR [eax-0x6a46501a]
  409ac7:	push   edx
  409ac8:	inc    ebp
  409ac9:	jle    0x409a69
  409acb:	xor    BYTE PTR [ebx+0x10],al
  409ace:	or     ecx,eax
  409ad0:	fimul  DWORD PTR [eax]
  409ad2:	jecxz  0x409a6e
  409ad4:	push   esp
  409ad5:	sar    BYTE PTR [ebx],cl
  409ad7:	push   es
  409ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad9:	rcl    BYTE PTR [ebp+0x3cff68d9],1
  409adf:	repnz sub bl,BYTE PTR [edi-0x31]
  409ae3:	ret    0x8a7a
  409ae6:	rcr    DWORD PTR ds:0x7e4b88bb,0x3f
  409aed:	jecxz  0x409aef
  409aef:	push   0xffffffc9
  409af1:	sar    BYTE PTR [edi],0xec
  409af4:	sub    al,0xdb
  409af6:	arpl   WORD PTR [ecx],di
  409af8:	add    ecx,DWORD PTR [eax+0x253ce072]
  409afe:	jl     0x409aea
  409b00:	pop    es
  409b01:	scas   eax,DWORD PTR es:[edi]
  409b02:	retf   
  409b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b04:	cld    
  409b05:	xchg   esp,eax
  409b06:	addr16 mov bh,0x88
  409b09:	mov    eax,DWORD PTR [ebp-0x30]
  409b0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  409b0f:	push   0x7c8f
  409b14:	push   ecx
  409b15:	push   eax
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42290c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x4226f8
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42290c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409b4d
  409bcc:	xchg   esp,eax
  409bcd:	mov    al,0xcf
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0xc1802105
  409bdb:	mov    ecx,0xd9437d2c
  409be0:	enter  0x89a1,0xd3
  409be4:	je     0x409b6a
  409be6:	outs   dx,BYTE PTR ds:[esi]
  409be7:	pop    es
  409be8:	ret    
  409be9:	inc    ebp
  409bea:	sub    DWORD PTR ss:0xf0b874a9,esi
  409bf1:	dec    ecx
  409bf2:	test   BYTE PTR [ecx-0x16],dl
  409bf5:	jnp    0x409bc5
  409bf7:	jno    0x409bd7
  409bf9:	xor    dl,BYTE PTR [edi-0x1f]
  409bfc:	push   edx
  409bfd:	cld    
  409bfe:	cwde   
  409bff:	jb     0x409c3f
  409c01:	xchg   edx,eax
  409c02:	mov    eax,0x83eb4937
  409c07:	lods   al,BYTE PTR ds:[esi]
  409c08:	push   ebx
  409c09:	int3   
  409c0a:	sahf   
  409c0b:	stc    
  409c0c:	ins    BYTE PTR es:[edi],dx
  409c0d:	dec    esp
  409c0e:	std    
  409c0f:	mov    ebp,0xec272c3d
  409c14:	ja     0x409c89
  409c16:	mov    esp,0xe9908369
  409c1b:	inc    eax
  409c1c:	call   0xa17d:0xfe1dbd06
  409c23:	pop    esi
  409c24:	test   bl,ah
  409c26:	repnz rol BYTE PTR [ebp-0x50c1df6d],0xa2
  409c2e:	add    ch,bl
  409c30:	popa   
  409c31:	dec    esi
  409c32:	xchg   sp,ax
  409c34:	push   edx
  409c35:	cmc    
  409c36:	fcmovnbe st,st(2)
  409c38:	inc    edx
  409c39:	xchg   ebp,eax
  409c3a:	int    0xc5
  409c3c:	inc    esp
  409c3d:	js     0x409c45
  409c3f:	fdivr  DWORD PTR [ebx-0x68167177]
  409c45:	int    0x14
  409c47:	jg     0x409c09
  409c49:	in     al,dx
  409c4a:	or     edi,DWORD PTR [eax]
  409c4c:	mov    dh,0xdd
  409c4e:	iret   
  409c4f:	mov    ebp,0x5620d8cb
  409c54:	shl    DWORD PTR [eax+0x7647afc6],0x37
  409c5b:	popf   
  409c5c:	(bad)  
  409c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c5e:	into   
  409c5f:	push   0xffffffcd
  409c61:	and    dl,BYTE PTR [edi-0x6c]
  409c64:	ss push eax
  409c66:	mov    ds:0x7e71b913,eax
  409c6b:	pop    es
  409c6c:	mov    ds:0x93354570,eax
  409c71:	loop   0x409c98
  409c73:	imul   ebp,esp,0x71473bcd
  409c79:	arpl   WORD PTR [ebp+esi*4+0xc],dx
  409c7d:	(bad)  
  409c7e:	lods   eax,DWORD PTR ds:[esi]
  409c7f:	aad    0x59
  409c81:	ins    DWORD PTR es:[edi],dx
  409c82:	inc    eax
  409c83:	mov    al,0x9b
  409c85:	adc    DWORD PTR [esi],ecx
  409c87:	pushf  
  409c88:	scas   eax,DWORD PTR es:[edi]
  409c89:	in     eax,0x1c
  409c8b:	mov    BYTE PTR [ebx-0x44],bl
  409c8e:	je     0x409c76
  409c90:	push   DWORD PTR ds:0x92a7a823
  409c96:	fninit 
  409c98:	adc    DWORD PTR [ebx],0x2f0ad03
  409c9e:	leave  
  409c9f:	ret    0x24c2
  409ca2:	lods   eax,DWORD PTR ds:[esi]
  409ca3:	cmp    BYTE PTR [edi+0x546a3795],al
  409ca9:	pop    esi
  409caa:	gs inc ebp
  409cac:	push   ss
  409cad:	or     eax,0x996f8f67
  409cb2:	mov    edi,ebp
  409cb4:	es pop ss
  409cb6:	mov    bh,0x28
  409cb8:	sub    BYTE PTR [ebx-0x266ce37c],ah
  409cbe:	sub    dl,BYTE PTR [ebp+0xe]
  409cc1:	xor    eax,0x693843b5
  409cc6:	inc    edx
  409cc7:	and    bl,BYTE PTR [eax-0x37]
  409cca:	inc    edi
  409ccb:	add    al,0x26
  409ccd:	mov    esi,ebp
  409ccf:	inc    edi
  409cd0:	aas    
  409cd1:	jno    0x409d48
  409cd3:	adc    ecx,ebp
  409cd5:	mov    ds:0xa090441d,eax
  409cda:	inc    dh
  409cdc:	popa   
  409cdd:	sti    
  409cde:	std    
  409cdf:	pop    esp
  409ce0:	xor    esi,ebp
  409ce2:	push   esi
  409ce3:	outs   dx,BYTE PTR ds:[esi]
  409ce4:	imul   eax,DWORD PTR ds:0x7c86ee6c,0x7b
  409ceb:	xchg   ecx,eax
  409cec:	test   al,0x9c
  409cee:	xor    al,0xa3
  409cf0:	xlat   BYTE PTR ds:[ebx]
  409cf1:	fbld   TBYTE PTR [ebp+0x14]
  409cf4:	jbe    0x409d2a
  409cf6:	jmp    0x409ce3
  409cf8:	mov    ah,0x55
  409cfa:	shl    BYTE PTR [edi-0x701bd1eb],0x8b
  409d01:	push   ds
  409d02:	cmovl  esi,DWORD PTR [eax]
  409d05:	xchg   ebx,eax
  409d06:	jnp    0x409d2f
  409d08:	pop    eax
  409d09:	(bad)  
  409d0a:	lock jmp 0x409d34
  409d0d:	call   0x2b90:0x16735bb1
  409d14:	xor    al,0xa5
  409d16:	test   edi,esi
  409d18:	fisttp WORD PTR [esi+0x51]
  409d1b:	(bad)  
  409d1c:	mov    esi,0x40da6866
  409d21:	pop    eax
  409d22:	add    ebx,DWORD PTR [ecx]
  409d24:	xchg   ebp,eax
  409d25:	push   0x67e236bf
  409d2a:	fmul   st,st(0)
  409d2c:	cmp    ebp,0xd4e251a3
  409d32:	mov    bl,0x15
  409d34:	push   ss
  409d35:	mov    ah,0x39
  409d37:	fistp  DWORD PTR [edi+eiz*1]
  409d3a:	dec    edi
  409d3b:	inc    esi
  409d3c:	or     eax,0x724e7c32
  409d41:	repnz scas al,BYTE PTR es:[edi]
  409d43:	xlat   BYTE PTR ds:[ebx]
  409d44:	sbb    bh,BYTE PTR [ecx-0x2f]
  409d47:	jmp    0x409d5f
  409d49:	fnsave [ebx-0x45]
  409d4c:	sbb    BYTE PTR [ebx],bh
  409d4e:	sub    bl,BYTE PTR [ecx+0x6f]
  409d51:	pop    es
  409d52:	xchg   edi,eax
  409d53:	pop    esp
  409d54:	call   0x93ed2c24
  409d59:	dec    esi
  409d5a:	inc    BYTE PTR [esi]
  409d5c:	xchg   esp,eax
  409d5d:	or     DWORD PTR [esi+esi*8-0x2d079e7c],0xffffffbb
  409d65:	fwait
  409d66:	int    0xe
  409d68:	sbb    al,BYTE PTR [edi-0x7f]
  409d6b:	aaa    
  409d6c:	dec    edi
  409d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6e:	jle    0x409cf9
  409d70:	pop    ss
  409d71:	popa   
  409d72:	jl     0x409db0
  409d74:	lods   eax,DWORD PTR ds:[esi]
  409d75:	xor    DWORD PTR [ecx-0x72],esi
  409d78:	mov    bl,0x77
  409d7a:	sbb    DWORD PTR [esi+0x7a9ae16f],ecx
  409d80:	ins    BYTE PTR es:[edi],dx
  409d81:	inc    ebx
  409d82:	adc    eax,0xf122c37f
  409d87:	dec    eax
  409d88:	(bad)  
  409d8a:	add    al,0xf9
  409d8c:	sub    eax,DWORD PTR [ebp+0x55]
  409d8f:	into   
  409d90:	sti    
  409d91:	jns    0x409d7e
  409d93:	div    DWORD PTR [eax-0x77]
  409d96:	sahf   
  409d97:	into   
  409d98:	push   es
  409d99:	push   es
  409d9a:	xchg   ecx,eax
  409d9b:	and    edi,eax
  409d9d:	(bad)  
  409d9e:	pop    ebp
  409d9f:	dec    esi
  409da0:	pop    ds
  409da1:	out    dx,eax
  409da2:	pushf  
  409da3:	stc    
  409da4:	mov    ds:0xf3d72f5d,eax
  409da9:	push   0x7450bc71
  409dae:	cld    
  409daf:	xor    DWORD PTR [ecx+0x3e],ebp
  409db2:	mov    ecx,0x39247519
  409db7:	add    DWORD PTR [esi],ecx
  409db9:	mov    ch,0x72
  409dbb:	and    al,0x9a
  409dbd:	mov    al,0xc5
  409dbf:	xor    ecx,eax
  409dc1:	in     al,dx
  409dc2:	loope  0x409d8f
  409dc4:	int3   
  409dc5:	push   eax
  409dc6:	arpl   WORD PTR [edx+0x3db46118],si
  409dcc:	inc    edx
  409dcd:	add    ebp,ebx
  409dcf:	loop   0x409d5b
  409dd1:	outs   dx,DWORD PTR ds:[esi]
  409dd2:	xchg   edi,eax
  409dd3:	(bad)  
  409dd4:	lahf   
  409dd5:	mov    cl,0x3b
  409dd7:	out    dx,eax
  409dd8:	mov    al,ds:0x6548f51e
  409ddd:	ficom  WORD PTR [ecx]
  409ddf:	pop    es
  409de0:	push   esi
  409de1:	sub    eax,0x5e3f98b3
  409de6:	pop    esp
  409de7:	pop    ebx
  409de8:	je     0x409e68
  409dea:	sub    al,0x7f
  409dec:	inc    eax
  409ded:	out    dx,eax
  409dee:	push   edi
  409def:	jnp    0x409dea
  409df1:	popa   
  409df2:	aas    
  409df3:	push   edi
  409df4:	aad    0x39
  409df6:	mov    BYTE PTR [eax],dh
  409df8:	push   0x5b
  409dfa:	popa   
  409dfb:	pop    ecx
  409dfc:	and    dl,BYTE PTR [edi+0x11da410e]
  409e02:	sahf   
  409e03:	enter  0xa18f,0xca
  409e07:	pop    esi
  409e08:	cmp    BYTE PTR [ebx],ah
  409e0a:	int    0xee
  409e0c:	idiv   DWORD PTR [eax+0x24b5f4c4]
  409e12:	cli    
  409e13:	je     0x409d98
  409e15:	xchg   DWORD PTR [ebx+0x53e06b04],esi
  409e1b:	push   ss
  409e1c:	iret   
  409e1d:	jge    0x409dee
  409e1f:	js     0x409e78
  409e21:	imul   edx,DWORD PTR [ebp-0x315ce3a6],0xf58d374d
  409e2b:	push   ebx
  409e2c:	xor    DWORD PTR [edx],0xdf741c70
  409e32:	sbb    eax,0xd351c77a
  409e37:	sub    al,0xd4
  409e39:	push   0x6
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0x75b79d4],0xfffffff0
  409e85:	mov    ah,0xcf
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0xb06ebebe
  409e91:	mov    es,ecx
  409e93:	imul   esi,DWORD PTR [edi],0x7131dd7a
  409e99:	dec    ecx
  409e9a:	lock sti 
  409e9c:	outs   dx,BYTE PTR ds:[esi]
  409e9d:	dec    edi
  409e9e:	xchg   edi,eax
  409e9f:	out    dx,eax
  409ea0:	(bad)  
  409ea2:	das    
  409ea3:	leave  
  409ea4:	pop    eax
  409ea5:	int    0xc0
  409ea7:	dec    ebx
  409ea8:	push   eax
  409ea9:	loopne 0x409e8e
  409eab:	in     eax,dx
  409eac:	aaa    
  409ead:	adc    esi,DWORD PTR [eax-0x5e16fcd4]
  409eb3:	push   ss
  409eb4:	or     edx,DWORD PTR [edx-0xb11e48c]
  409eba:	out    dx,al
  409ebb:	fwait
  409ebc:	mov    ah,0x8f
  409ebe:	shr    DWORD PTR [edi+ebx*4-0x3b],1
  409ec2:	call   DWORD PTR [eax-0x73]
  409ec5:	sbb    eax,0x4becc74d
  409eca:	retf   0xd157
  409ecd:	pop    ebx
  409ece:	ins    DWORD PTR es:[edi],dx
  409ecf:	mov    WORD PTR [edx+ebx*8+0x6e],fs
  409ed3:	and    edi,DWORD PTR [eax]
  409ed5:	push   eax
  409ed6:	adc    al,0x10
  409ed8:	mov    esi,DWORD PTR [ecx-0x2d2fb5a5]
  409ede:	push   ds
  409edf:	push   es
  409ee0:	pop    ss
  409ee1:	jg     0x409f38
  409ee3:	inc    eax
  409ee4:	gs mov bl,0xb9
  409ee7:	xor    DWORD PTR [eax],edi
  409ee9:	mov    esp,0xe4e0c07
  409eee:	adc    edx,DWORD PTR [ecx]
  409ef0:	jmp    0x88cc:0x4e92647a
  409ef7:	scas   eax,DWORD PTR es:[edi]
  409ef8:	cmp    al,0x38
  409efa:	inc    ebx
  409efb:	sbb    eax,0xe9b74317
  409f00:	stos   DWORD PTR es:[edi],eax
  409f01:	add    esp,DWORD PTR [ecx]
  409f03:	aad    0x62
  409f05:	les    edi,FWORD PTR [ebp+0x43bf776f]
  409f0b:	(bad)  
  409f0c:	push   ecx
  409f0d:	pop    ebp
  409f0e:	or     edx,DWORD PTR [edi]
  409f10:	mov    eax,ds:0x6b4f4d0a
  409f15:	dec    ecx
  409f16:	scas   al,BYTE PTR es:[edi]
  409f17:	sti    
  409f18:	fild   WORD PTR [edi+0x57]
  409f1b:	push   ecx
  409f1c:	adc    esp,DWORD PTR [esi]
  409f1e:	cmp    al,0x82
  409f20:	push   edi
  409f21:	cmp    al,0xda
  409f23:	dec    edi
  409f24:	outs   dx,BYTE PTR ds:[esi]
  409f25:	pop    edi
  409f26:	cdq    
  409f27:	pop    ss
  409f28:	lds    esp,FWORD PTR [ebp-0x61]
  409f2b:	loopne 0x409ed6
  409f2d:	and    esi,DWORD PTR [edi]
  409f2f:	icebp  
  409f30:	inc    edi
  409f31:	ret    0xaace
  409f34:	mov    ebp,esi
  409f36:	sub    bh,ch
  409f38:	pusha  
  409f39:	pop    edx
  409f3a:	sbb    eax,0x33a4b1dd
  409f3f:	push   ds
  409f40:	leave  
  409f41:	addr16 imul ebp,esp,0x44ffdcec
  409f48:	cmc    
  409f49:	packsswb mm3,QWORD PTR [edx]
  409f4c:	test   al,0x6
  409f4e:	test   eax,0x56db0252
  409f53:	pushf  
  409f54:	rol    DWORD PTR [edi+0x78],0x1c
  409f58:	or     DWORD PTR [edx],edi
  409f5a:	mov    edi,DWORD PTR [ebp-0x4]
  409f5d:	shl    DWORD PTR ds:0xf5016124,cl
  409f63:	pop    eax
  409f64:	push   edx
  409f65:	mov    esi,0x2cb1fd33
  409f6a:	ret    0x6b77
  409f6d:	sbb    ebp,DWORD PTR [edi+0x6f]
  409f70:	lea    ebx,[edi-0x5]
  409f73:	jl     0x140d9ef0
  409f79:	xchg   esp,eax
  409f7a:	jo     0x409fe3
  409f7c:	fwait
  409f7d:	sbb    eax,0x6dc408c
  409f82:	data16 daa 
  409f84:	(bad)  [ecx+0x5c880940]
  409f8a:	(bad)  
  409f8b:	jmp    0x409f0e
  409f8d:	pop    edx
  409f8e:	dec    eax
  409f8f:	shr    BYTE PTR [esi+0x592a3b4a],1
  409f95:	shr    BYTE PTR [edx-0x4ab07acd],cl
  409f9b:	pop    ebp
  409f9c:	cmc    
  409f9d:	or     BYTE PTR [ebx],0x70
  409fa0:	jmp    0x7be41594
  409fa5:	xchg   esp,eax
  409fa6:	jg     0x409f9c
  409fa8:	or     DWORD PTR [edx-0x7e],edx
  409fab:	cmp    BYTE PTR [ebx],0x74
  409fae:	sub    DWORD PTR [edx],ebx
  409fb0:	add    eax,0xcedc8028
  409fb5:	lea    esp,[ebp-0x27]
  409fb8:	cmp    al,BYTE PTR [edx+0x2]
  409fbb:	inc    al
  409fbd:	mov    cl,0xe8
  409fbf:	loopne 0x409f96
  409fc1:	in     al,0x6e
  409fc3:	inc    edx
  409fc4:	mov    edi,0x89640244
  409fc9:	int3   
  409fca:	addr16 mov fs:0x139f,al
  409fcf:	mov    edi,0x74ac963e
  409fd4:	sub    bh,cl
  409fd6:	outs   dx,BYTE PTR ds:[esi]
  409fd7:	dec    esp
  409fd8:	sbb    al,0x76
  409fda:	sbb    eax,0xc9a8ab61
  409fdf:	pop    ebx
  409fe0:	push   esi
  409fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe2:	nop
  409fe3:	ins    DWORD PTR es:[edi],dx
  409fe4:	hlt    
  409fe5:	or     BYTE PTR [edi+0x5a],cl
  409fe8:	push   cx
  409fea:	iret   
  409feb:	cdq    
  409fec:	push   ecx
  409fed:	mov    ecx,0x32457b21
  409ff2:	adc    al,BYTE PTR [ebx-0x58]
  409ff5:	sub    eax,0x2270d111
  409ffa:	ror    DWORD PTR [edi],1
  409ffc:	ror    BYTE PTR [edi],0x7d
  409fff:	mov    WORD PTR [ecx-0x77885ace],ds
  40a005:	in     eax,dx
  40a006:	cli    
  40a007:	push   esp
  40a008:	or     eax,0xf48d45e4
  40a00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a00e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a00f:	adc    esi,DWORD PTR fs:[eax+0x683a1a5b]
  40a016:	es (bad) 
  40a018:	gs test dl,ah
  40a01b:	sti    
  40a01c:	call   0x23a7b66
  40a021:	mov    edx,0xba8e042a
  40a026:	dec    ebx
  40a027:	outs   dx,DWORD PTR ds:[esi]
  40a028:	jo     0x40a000
  40a02a:	and    eax,0x3a3e0fb2
  40a02f:	sub    dl,BYTE PTR [esi-0x4a]
  40a032:	out    0x72,eax
  40a034:	scas   al,BYTE PTR es:[edi]
  40a035:	repz in eax,dx
  40a037:	xchg   edi,eax
  40a038:	and    ebx,ebx
  40a03a:	sbb    ah,ch
  40a03c:	cmp    DWORD PTR [edi+0x6cc482a2],ebp
  40a042:	mov    eax,0x1e36e9d5
  40a047:	push   esi
  40a048:	mov    BYTE PTR [esi+eax*2-0x5ef404c],0x4d
  40a050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a051:	out    dx,al
  40a052:	ror    BYTE PTR [esi-0x4b],1
  40a055:	out    0xd4,eax
  40a057:	pusha  
  40a058:	lods   al,BYTE PTR ds:[esi]
  40a059:	es ds das 
  40a05c:	leave  
  40a05d:	dec    ebp
  40a05e:	rcl    cl,cl
  40a060:	cmc    
  40a061:	imul   edi,DWORD PTR [edi-0x55],0x3f8b3da8
  40a068:	ins    DWORD PTR es:[edi],dx
  40a069:	xchg   ebp,eax
  40a06a:	retf   
  40a06b:	add    DWORD PTR [ebp+0x40],edx
  40a06e:	rcl    BYTE PTR [ebx-0x39],cl
  40a071:	or     al,0x86
  40a073:	es mov al,0x5d
  40a076:	jns    0x40a09e
  40a078:	inc    edi
  40a079:	aam    0xe3
  40a07b:	int    0xfc
  40a07d:	push   esi
  40a07e:	jbe    0x40a079
  40a080:	mov    esi,0x2e47bee0
  40a085:	sahf   
  40a086:	repz popa 
  40a088:	jge    0x40a071
  40a08a:	lahf   
  40a08b:	mov    bl,0xa1
  40a08d:	ja     0x40a097
  40a08f:	or     al,0xf7
  40a091:	es mov esp,0x480f2d76
  40a097:	iret   
  40a098:	dec    ecx
  40a099:	clc    
  40a09a:	call   0x50d668f6
  40a09f:	cmp    eax,0x5950f5a5
  40a0a4:	ss leave 
  40a0a6:	jmp    0x2d66:0x1916522a
  40a0ad:	retf   0xb169
  40a0b0:	addr16 fcomip st,st(2)
  40a0b3:	fcmovnb st,st(7)
  40a0b5:	or     al,0x8d
  40a0b7:	popf   
  40a0b8:	mov    dh,0xe0
  40a0ba:	test   DWORD PTR gs:[edi-0x2b],ebx
  40a0be:	push   ecx
  40a0bf:	push   cs
  40a0c0:	(bad)  
  40a0c1:	(bad)  
  40a0c2:	aas    
  40a0c3:	dec    eax
  40a0c4:	retf   0x399
  40a0c7:	ror    DWORD PTR [eax+0x498b9046],cl
  40a0cd:	xchg   ecx,eax
  40a0ce:	imul   esi,DWORD PTR [esi+eiz*8+0x31],0xffffffb6
  40a0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d4:	pushf  
  40a0d5:	dec    edx
  40a0d6:	stos   BYTE PTR es:[edi],al
  40a0d7:	rol    BYTE PTR [ecx+0x61ace54f],0xc5
  40a0de:	sahf   
  40a0df:	sbb    al,0xde
  40a0e1:	jno    0x40a111
  40a0e3:	ss push cs
  40a0e5:	and    ah,BYTE PTR [esp+edx*4+0x35]
  40a0e9:	pop    ebp
  40a0ea:	mov    eax,ds:0xa9185626
  40a0ef:	mov    edi,0xec558b04
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422800,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a132
  40a134:	ret    
  40a135:	(bad)  
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0x9435df15
  40a143:	pop    eax
  40a144:	iret   
  40a145:	cs out dx,eax
  40a147:	(bad)  
  40a149:	cmp    DWORD PTR [esi+0xa277324],0x40a88695
  40a153:	pop    ss
  40a154:	fsubp  st(2),st
  40a156:	cmp    ecx,esp
  40a158:	pop    es
  40a159:	sub    eax,0x2decb9bf
  40a15e:	mov    dh,0x32
  40a160:	daa    
  40a161:	ja     0x40a0f8
  40a163:	pop    eax
  40a164:	hlt    
  40a165:	mov    bl,0x4d
  40a167:	mov    DWORD PTR [ebx-0x5c1b723c],edx
  40a16d:	jnp    0x40a0fa
  40a16f:	and    BYTE PTR [edx-0x653836bc],ch
  40a175:	imul   ecx,DWORD PTR [edi+0x25],0xa4bfd263
  40a17c:	imul   edi,DWORD PTR [ebx],0xf0522b0f
  40a182:	ss adc eax,0xc92cbd74
  40a188:	(bad)  [edi-0x4abda18c]
  40a18e:	mov    eax,ds:0x1a46056d
  40a193:	push   edx
  40a194:	push   0xbef572a2
  40a199:	test   DWORD PTR [edi],ebp
  40a19b:	sub    BYTE PTR [ebx+esi*4-0x44bc2770],0x45
  40a1a3:	out    dx,eax
  40a1a4:	cmp    esi,DWORD PTR [ebx]
  40a1a6:	pop    eax
  40a1a7:	dec    edx
  40a1a8:	dec    eax
  40a1a9:	(bad)  
  40a1aa:	cli    
  40a1ab:	aas    
  40a1ac:	ins    BYTE PTR es:[edi],dx
  40a1ad:	jg     0x40a1ad
  40a1af:	(bad)  
  40a1b0:	fsub   QWORD PTR [edx]
  40a1b2:	lahf   
  40a1b3:	sub    al,0x8a
  40a1b5:	ficomp DWORD PTR [eax-0x4387e5aa]
  40a1bb:	std    
  40a1bc:	test   BYTE PTR [edx+0xd],dh
  40a1bf:	in     eax,dx
  40a1c0:	call   0xa11e13a7
  40a1c5:	sbb    al,0xdf
  40a1c7:	push   esp
  40a1c8:	add    eax,edx
  40a1ca:	adc    eax,0x538040a3
  40a1cf:	stc    
  40a1d0:	dec    eax
  40a1d1:	ins    BYTE PTR es:[edi],dx
  40a1d2:	and    eax,0x2c9f1f17
  40a1d7:	fimul  WORD PTR [ebp-0x696d1eb6]
  40a1dd:	adc    cl,BYTE PTR [esi+0x4c]
  40a1e0:	ror    DWORD PTR ds:0xeacbade,1
  40a1e6:	outs   dx,DWORD PTR ds:[esi]
  40a1e7:	jmp    0x8abb93a1
  40a1ec:	or     DWORD PTR [eax-0x7c],ebx
  40a1ef:	pop    esi
  40a1f0:	gs jecxz 0x40a1f8
  40a1f3:	mov    edi,0x594d8dce
  40a1f8:	sub    edx,DWORD PTR [ebx]
  40a1fa:	ss sub eax,0x53b6fdef
  40a200:	loop   0x40a262
  40a202:	mov    eax,0xb720d770
  40a207:	arpl   WORD PTR [edi+0x26656d5d],di
  40a20d:	clc    
  40a20e:	mov    edx,0x1411b68b
  40a213:	pop    ss
  40a214:	(bad)
  40a217:	ss mov bh,0x90
  40a21a:	scas   al,BYTE PTR es:[di]
  40a21c:	push   esp
  40a21d:	push   cs
  40a21e:	dec    ecx
  40a21f:	push   edi
  40a220:	jge    0x40a20f
  40a222:	(bad)  [ecx+eiz*4-0x42ae9503]
  40a229:	push   edx
  40a22a:	mov    DWORD PTR [ebp-0x71ca15d2],edi
  40a230:	jb     0x40a2a3
  40a232:	mov    BYTE PTR [edx],dl
  40a234:	test   eax,0xdd505cd1
  40a239:	and    DWORD PTR [ecx],edi
  40a23b:	fnsave [eax+0x3d]
  40a23e:	pop    ss
  40a23f:	mov    eax,?
  40a241:	faddp  st(1),st
  40a244:	push   ecx
  40a245:	fidivr DWORD PTR [eax-0x75fc642e]
  40a24b:	pop    ss
  40a24c:	xchg   ebp,eax
  40a24d:	ror    BYTE PTR [edi+0x8],cl
  40a250:	cmp    cl,BYTE PTR [eax-0xe]
  40a253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a254:	mov    al,ds:0xa75e4161
  40a259:	xor    DWORD PTR [ebp-0x5e],esp
  40a25c:	jecxz  0x40a216
  40a25e:	mov    esp,0x54b04366
  40a263:	sub    BYTE PTR gs:[edx+esi*8],cl
  40a267:	in     al,dx
  40a268:	xchg   ebp,eax
  40a269:	mov    ebx,0xa6868c80
  40a26e:	cmp    DWORD PTR [edx+0x5b9511c],esi
  40a274:	dec    ebp
  40a275:	sti    
  40a276:	jecxz  0x40a2b7
  40a278:	retf   0xcd18
  40a27b:	aas    
  40a27c:	sub    edi,esi
  40a27e:	(bad)  
  40a27f:	mov    esi,0x3accb926
  40a284:	pop    ecx
  40a285:	jo     0x40a21e
  40a287:	push   esi
  40a288:	retf   
  40a289:	imul   edx,DWORD PTR [ebp+0x77],0xd350b684
  40a290:	mov    esp,0x6fb81682
  40a295:	outs   dx,BYTE PTR ds:[esi]
  40a296:	aam    0xe0
  40a298:	inc    ebp
  40a299:	and    eax,0x514ebc8f
  40a29e:	push   0x8aa45d2e
  40a2a3:	mov    ch,dl
  40a2a5:	push   ebx
  40a2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a7:	inc    esp
  40a2a8:	scas   eax,DWORD PTR es:[edi]
  40a2a9:	xor    BYTE PTR [esp+edx*8+0x11f3e9b6],ch
  40a2b0:	and    eax,0xc1be3291
  40a2b5:	add    al,0x75
  40a2b7:	xor    dh,BYTE PTR [esi]
  40a2b9:	push   edi
  40a2ba:	cmp    BYTE PTR [ebp+0x3968a7ac],cl
  40a2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2c2:	add    BYTE PTR [ebp-0x20],al
  40a2c5:	add    esp,ecx
  40a2c7:	leave  
  40a2c8:	mov    ch,0xa7
  40a2ca:	lods   al,BYTE PTR ds:[esi]
  40a2cb:	mul    DWORD PTR [ecx]
  40a2cd:	cmp    al,0x70
  40a2cf:	pop    edi
  40a2d0:	lds    edx,FWORD PTR [edx+0x4164dcd8]
  40a2d6:	lds    eax,FWORD PTR [ebp-0x4086257c]
  40a2dc:	inc    ecx
  40a2dd:	jg     0x40a2c3
  40a2df:	shr    BYTE PTR [ecx+edx*8],1
  40a2e2:	jo     0x40a2cf
  40a2e4:	scas   al,BYTE PTR es:[edi]
  40a2e5:	leave  
  40a2e6:	push   0x57e90c04
  40a2eb:	(bad)  
  40a2ec:	(bad)
  40a2ef:	mov    esi,0x68361e92
  40a2f4:	aas    
  40a2f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f6:	xor    eax,0x4443e124
  40a2fb:	sub    DWORD PTR ds:0x8c45fb59,0x8357042d
  40a305:	fsubr  QWORD PTR [edx-0x3c129af2]
  40a30b:	aam    0x4a
  40a30d:	jl     0x40a2e5
  40a30f:	or     eax,0xc3c4a5b1
  40a314:	std    
  40a315:	ja     0x40a332
  40a317:	cmp    DWORD PTR [ebp+0x59],0x1f
  40a31b:	jo     0x40a341
  40a31d:	fcomp  DWORD PTR [edi]
  40a31f:	push   edx
  40a320:	jae    0x40a37d
  40a322:	(bad)
  40a325:	add    dh,BYTE PTR [ecx+0x28]
  40a328:	mov    al,ds:0x25b4f249
  40a32d:	adc    ebx,esp
  40a32f:	hlt    
  40a330:	mov    al,0x19
  40a332:	scas   eax,DWORD PTR es:[edi]
  40a333:	pop    ss
  40a334:	js     0x40a2c3
  40a336:	stos   DWORD PTR es:[edi],eax
  40a337:	in     al,0x28
  40a339:	(bad)  
  40a33a:	fwait
  40a33b:	jecxz  0x40a36e
  40a33d:	xchg   esi,eax
  40a33e:	mov    esp,0xfa44dbdb
  40a343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a344:	out    0x3a,eax
  40a346:	mov    eax,0x7977bd18
  40a34b:	adc    cl,BYTE PTR [esi]
  40a34d:	popf   
  40a34e:	fld    TBYTE PTR [eax-0x13b9d50f]
  40a354:	ins    BYTE PTR es:[edi],dx
  40a355:	xor    eax,0x75f21cdd
  40a35a:	xor    al,BYTE PTR [ebx+0x292f6a2]
  40a360:	or     cl,ch
  40a362:	jbe    0x40a32f
  40a364:	shr    DWORD PTR [ebx+0x79d557a6],0x47
  40a36b:	push   ebx
  40a36c:	mov    ecx,0xf758fb4a
  40a371:	lods   eax,DWORD PTR ds:[esi]
  40a372:	xchg   ecx,eax
  40a373:	mov    edx,0xfaca923a
  40a378:	inc    ebp
  40a379:	jp     0x40a3e3
  40a37b:	not    BYTE PTR [esi-0x4c592cd6]
  40a381:	jo     0x40a3bd
  40a383:	aaa    
  40a384:	in     eax,0x3b
  40a386:	sar    ebp,1
  40a388:	jmp    0x40a3b7
  40a38a:	div    BYTE PTR [esi-0x22cdee0e]
  40a390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a391:	ins    BYTE PTR es:[edi],dx
  40a392:	outs   dx,BYTE PTR ds:[esi]
  40a393:	mov    DWORD PTR ds:0x11f8f137,ecx
  40a399:	mov    esp,0x9848d029
  40a39e:	jmp    0x40a3f4
  40a3a0:	loope  0x40a3ed
  40a3a2:	stos   DWORD PTR es:[edi],eax
  40a3a3:	jecxz  0x40a370
  40a3a5:	sar    esi,cl
  40a3a7:	sbb    esp,eax
  40a3a9:	push   ebx
  40a3aa:	jb     0x40a389
  40a3ac:	outs   dx,DWORD PTR ds:[esi]
  40a3ad:	jl     0x40a3d5
  40a3af:	test   al,0xc1
  40a3b1:	stc    
  40a3b2:	inc    DWORD PTR [ecx+0x69]
  40a3b5:	and    cl,BYTE PTR [eax]
  40a3b7:	mov    edx,0xfc45c7a5
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	xor    al,0x92
  40a400:	jle    0x40a3d1
  40a402:	adc    DWORD PTR [ebx-0x3d564142],ebx
  40a408:	mov    esi,0xc7273dbe
  40a40d:	shr    esi,0x36
  40a410:	dec    ebp
  40a411:	pop    es
  40a412:	mov    ebp,es
  40a414:	or     bl,0xca
  40a417:	je     0x40a3b8
  40a419:	iret   
  40a41a:	xchg   edx,eax
  40a41b:	pop    eax
  40a41c:	shl    DWORD PTR [ebp+0x51323c72],cl
  40a422:	jle    0x40a454
  40a424:	(bad)  
  40a425:	cmp    BYTE PTR [ebx],ah
  40a427:	or     ecx,DWORD PTR [ebx+0x1b]
  40a42a:	repz pop ebp
  40a42c:	test   BYTE PTR [ecx-0x359bbc39],cl
  40a432:	outs   dx,DWORD PTR ds:[esi]
  40a433:	es jle 0x40a3f1
  40a436:	inc    edx
  40a437:	shl    BYTE PTR [edx-0x6],0x4b
  40a43b:	shr    BYTE PTR [ebp+0x60fa5b9c],0x2a
  40a442:	test   BYTE PTR [edi-0x3bbaa0ee],dl
  40a448:	mov    ch,0xd1
  40a44a:	shr    esp,cl
  40a44c:	sbb    al,0x8
  40a44e:	ins    DWORD PTR es:[edi],dx
  40a44f:	icebp  
  40a450:	xor    eax,DWORD PTR [ebp-0x76f8caa4]
  40a456:	outs   dx,DWORD PTR ds:[esi]
  40a457:	xchg   edi,eax
  40a458:	push   es
  40a459:	jnp    0x40a448
  40a45b:	push   ebx
  40a45c:	push   0x3d
  40a45e:	repz ss inc edx
  40a461:	fisttp DWORD PTR [edi-0x59d61b56]
  40a467:	in     al,dx
  40a468:	icebp  
  40a469:	inc    BYTE PTR [ebp+0x6dd195f]
  40a46f:	dec    ecx
  40a470:	jle    0x40a45d
  40a472:	xchg   ebx,eax
  40a473:	fcmovbe st,st(0)
  40a475:	call   0x32029715
  40a47a:	and    ch,BYTE PTR [ecx]
  40a47c:	or     edi,DWORD PTR [edx]
  40a47e:	arpl   WORD PTR [ebx-0x47],bp
  40a481:	in     eax,0xa8
  40a483:	cmp    eax,0x7f5f5646
  40a488:	out    dx,eax
  40a489:	loope  0x40a43d
  40a48b:	xchg   ah,bh
  40a48d:	jecxz  0x40a422
  40a48f:	ins    DWORD PTR es:[edi],dx
  40a490:	jno    0x40a4b7
  40a492:	cmp    ebx,ebx
  40a494:	shl    bh,1
  40a496:	cmp    al,0xf2
  40a498:	js     0x40a517
  40a49a:	cli    
  40a49b:	push   ecx
  40a49c:	jmp    0xa9902141
  40a4a1:	xor    al,0xb
  40a4a3:	mov    WORD PTR [esi+0x5b],cs
  40a4a6:	jl     0x40a4f3
  40a4a8:	sti    
  40a4a9:	xor    al,BYTE PTR [edx+edi*2-0x6a]
  40a4ad:	scas   eax,DWORD PTR es:[edi]
  40a4ae:	xor    DWORD PTR [esi-0x45],0x5a
  40a4b2:	fwait
  40a4b3:	aam    0x78
  40a4b5:	in     al,dx
  40a4b6:	sub    BYTE PTR [edx],bl
  40a4b8:	xor    eax,0xa70dd4fa
  40a4bd:	pop    esp
  40a4be:	jmp    0xe9d1:0xb9b9a26
  40a4c5:	adc    al,BYTE PTR [ecx]
  40a4c7:	push   0x37d81463
  40a4cc:	jp     0x40a451
  40a4ce:	dec    ebx
  40a4cf:	sar    BYTE PTR fs:[edx+0x67505058],1
  40a4d6:	test   BYTE PTR [esi+0x41],al
  40a4d9:	mov    eax,0x6ffaf435
  40a4de:	stos   DWORD PTR es:[edi],eax
  40a4df:	xchg   ah,ah
  40a4e1:	or     BYTE PTR [edi],0x1b
  40a4e4:	mov    BYTE PTR [edx-0xf],ah
  40a4e7:	bound  esp,QWORD PTR [ecx*2+0x1d6af358]
  40a4ee:	or     dh,BYTE PTR [ebx-0x2e6aa815]
  40a4f4:	push   esi
  40a4f5:	leave  
  40a4f6:	out    0x51,eax
  40a4f8:	sub    DWORD PTR [eax-0x46],ecx
  40a4fb:	std    
  40a4fc:	and    al,0xb5
  40a4fe:	add    eax,0x7993b91e
  40a503:	add    al,0x2f
  40a505:	inc    ebp
  40a506:	addr16 jae 0x40a542
  40a509:	nop
  40a50a:	hlt    
  40a50b:	cmp    DWORD PTR [edi+0x777689c1],eax
  40a511:	in     al,0x8e
  40a513:	adc    BYTE PTR [ebp+0x2512ff9c],bl
  40a519:	loope  0x40a586
  40a51b:	push   es
  40a51c:	mov    al,0x20
  40a51e:	mov    dl,0x89
  40a520:	cmp    eax,0x537cfbea
  40a525:	pop    edx
  40a526:	xor    ecx,DWORD PTR [edx+0x1c]
  40a529:	jmp    0xa3f8e86c
  40a52e:	or     eax,0x71586a39
  40a533:	pop    DWORD PTR [esi-0x38]
  40a536:	push   cs
  40a537:	inc    edi
  40a538:	add    eax,0x7856c7a3
  40a53d:	je     0x40a5b9
  40a53f:	and    dl,BYTE PTR [ebx+0x50]
  40a542:	ror    DWORD PTR [ecx+0x47a17f71],1
  40a548:	push   ss
  40a549:	jle    0x40a5a1
  40a54b:	bound  esi,QWORD PTR [edx]
  40a54d:	leave  
  40a54e:	int3   
  40a54f:	es pop ecx
  40a551:	adc    DWORD PTR [ecx-0x35],esp
  40a554:	xchg   BYTE PTR [edx+0x3f],bl
  40a557:	dec    edx
  40a558:	inc    ebp
  40a559:	jl     0x40a58e
  40a55b:	xor    eax,DWORD PTR [ebx+0x2a]
  40a55e:	jmp    0x87b0:0xd7e024d6
  40a565:	shl    DWORD PTR [ebx-0x350b4383],0xb3
  40a56c:	sti    
  40a56d:	push   0xffffffca
  40a56f:	dec    eax
  40a570:	mov    ch,0xf3
  40a572:	push   esi
  40a573:	out    dx,eax
  40a574:	and    BYTE PTR [esi],bl
  40a576:	clc    
  40a577:	push   cs
  40a578:	shr    BYTE PTR [esp+edi*4],1
  40a57b:	pop    eax
  40a57c:	jmp    0xa37f499b
  40a581:	lods   eax,DWORD PTR ds:[esi]
  40a582:	cmp    edi,DWORD PTR [ebx-0x65]
  40a585:	xsavec [edx+esi*8]
  40a589:	js     0x40a5c6
  40a58b:	and    BYTE PTR [ebp-0x77],bh
  40a58e:	inc    esi
  40a58f:	push   ecx
  40a590:	mov    edi,0x9c8b202f
  40a595:	mov    eax,0x11fd15fa
  40a59a:	and    al,0xdd
  40a59c:	inc    eax
  40a59d:	retf   0xf522
  40a5a0:	jmp    0x40a58a
  40a5a2:	pop    ds
  40a5a3:	dec    edx
  40a5a4:	sahf   
  40a5a5:	imul   edi,DWORD PTR [edx+esi*2-0x2a],0x61
  40a5aa:	shl    BYTE PTR [esi+eax*4+0x5a],0x40
  40a5af:	xchg   ebx,eax
  40a5b0:	repz ficomp WORD PTR [edx+ecx*4]
  40a5b4:	test   al,0x8b
  40a5b6:	fcmovne st,st(0)
  40a5b8:	mov    esi,0x6759bb91
  40a5bd:	outs   dx,DWORD PTR ds:[esi]
  40a5be:	jle    0x40a57d
  40a5c0:	pop    edi
  40a5c1:	mov    dl,bh
  40a5c3:	jge    0xb621edd9
  40a5c9:	in     eax,0xe3
  40a5cb:	popa   
  40a5cc:	jp     0x40a5cc
  40a5ce:	add    ah,ch
  40a5d0:	dec    eax
  40a5d1:	add    bh,ch
  40a5d3:	add    DWORD PTR [edx+0x4],ecx
  40a5d6:	xchg   esi,eax
  40a5d7:	xchg   edx,eax
  40a5d8:	iret   
  40a5d9:	ucomiss xmm7,xmm2
  40a5dc:	dec    edx
  40a5dd:	das    
  40a5de:	ins    BYTE PTR es:[edi],dx
  40a5df:	push   esp
  40a5e0:	push   ss
  40a5e1:	dec    ebx
  40a5e2:	js     0x40a654
  40a5e4:	neg    BYTE PTR [ebx]
  40a5e6:	fidivr WORD PTR [edi+0x6dae23f9]
  40a5ec:	lock fninit 
  40a5ef:	mov    edx,0x1cbfb3f6
  40a5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f5:	(bad)  
  40a5f6:	test   eax,0x2e1c28f2
  40a5fb:	mov    ecx,0x9aaaf54d
  40a600:	fst    st(0)
  40a602:	sahf   
  40a603:	xchg   edi,eax
  40a604:	and    eax,0xdc96de88
  40a609:	xchg   edx,eax
  40a60a:	sbb    BYTE PTR [ebx],bl
  40a60c:	ret    
  40a60d:	daa    
  40a60e:	add    eax,0x12003f3e
  40a613:	inc    eax
  40a614:	mov    WORD PTR [ebp+0x4f],?
  40a617:	lods   al,BYTE PTR ds:[esi]
  40a618:	int3   
  40a619:	mov    al,0xb
  40a61b:	rol    BYTE PTR [ecx+0x29],cl
  40a61e:	push   0xffffff8e
  40a620:	jmp    FWORD PTR [edi]
  40a622:	push   es
  40a623:	or     eax,0xe1f4e2d8
  40a628:	xor    BYTE PTR [edi-0x4f4849d2],0x84
  40a62f:	cwde   
  40a630:	xor    eax,0x9cb92667
  40a635:	or     eax,0x401172b9
  40a63a:	sub    cl,dh
  40a63c:	jb     0x40a60f
  40a63e:	and    ah,BYTE PTR [ebx+0x5f]
  40a641:	enter  0x85bf,0xde
  40a645:	outs   dx,BYTE PTR ds:[esi]
  40a646:	ja     0x40a5d2
  40a648:	xchg   esi,eax
  40a649:	mov    ds:0xba569b97,eax
  40a64e:	shl    DWORD PTR [ecx],1
  40a650:	pop    ecx
  40a651:	call   0xf9a05a9c
  40a656:	int    0xda
  40a658:	cwde   
  40a659:	inc    ebx
  40a65a:	dec    eax
  40a65b:	xchg   DWORD PTR [edi+0x1bad4b84],esp
  40a661:	in     al,0x8d
  40a663:	stos   BYTE PTR es:[edi],al
  40a664:	inc    ecx
  40a665:	push   ds
  40a666:	pop    ss
  40a667:	push   0xa
  40a669:	es dec esi
  40a66b:	xchg   esp,esp
  40a66d:	jnp    0x40a61f
  40a66f:	arpl   WORD PTR [esi-0x8],sp
  40a672:	fild   QWORD PTR [edx+eax*2-0x1a]
  40a676:	mov    esi,0x1c530ecb
  40a67b:	and    eax,DWORD PTR [ebp-0x1f]
  40a67e:	retf   
  40a67f:	ror    BYTE PTR ds:0x89fc526a,cl
  40a685:	pop    ebp
  40a686:	call   0xb22cec52
  40a68b:	jbe    0x40a68d
  40a68d:	add    BYTE PTR [ebx+0x458bf84d],cl
  40a693:	cld    
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x4226f8
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	pop    eax
  40a7d7:	sub    ebp,esi
  40a7d9:	iret   
  40a7da:	(bad)  
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0xc3893dee
  40a7e6:	out    0xff,eax
  40a7e8:	mov    dl,0x3a
  40a7ea:	xor    ebx,esp
  40a7ec:	lds    ax,DWORD PTR [esi-0x241e6cad]
  40a7f3:	loop   0x40a863
  40a7f5:	rcl    DWORD PTR [esi-0x69ed634b],1
  40a7fb:	push   0x6ab3b2b
  40a800:	std    
  40a801:	hlt    
  40a802:	nop
  40a803:	loopne 0x40a7c6
  40a805:	mov    al,ds:0xa3d69862
  40a80a:	test   al,0xc0
  40a80c:	lock test BYTE PTR [edi+esi*8],ah
  40a810:	jg     0x40a808
  40a812:	call   0xb44a:0xfe7cd79c
  40a819:	mov    dl,0x39
  40a81b:	(bad)  
  40a81d:	int3   
  40a81e:	adc    DWORD PTR [edi],0xf76a1658
  40a824:	mov    al,0x2
  40a826:	add    BYTE PTR ds:0xb80f99ff,0xf1
  40a82d:	lahf   
  40a82e:	stos   BYTE PTR es:[edi],al
  40a82f:	dec    edi
  40a830:	rcl    BYTE PTR [edi-0x67e0b96f],0x9c
  40a837:	(bad)  
  40a838:	loope  0x40a8b5
  40a83a:	mov    WORD PTR [eax],es
  40a83c:	int3   
  40a83d:	data16 and dh,bh
  40a840:	cs scas al,BYTE PTR es:[edi]
  40a842:	sub    bx,WORD PTR [ebx+0x6896d429]
  40a849:	sbb    al,bl
  40a84b:	out    0x78,eax
  40a84d:	xchg   edi,eax
  40a84e:	cmp    BYTE PTR [edi-0x3a],0x9d
  40a852:	add    bl,ch
  40a854:	scas   al,BYTE PTR es:[edi]
  40a855:	xchg   DWORD PTR [edx+0x4c],ebp
  40a858:	inc    esi
  40a859:	pop    edi
  40a85a:	fiadd  DWORD PTR [edi+0x3db441a3]
  40a860:	mov    dh,0x75
  40a862:	fisttp DWORD PTR [ebp-0x2c]
  40a865:	jmp    0x40a801
  40a867:	stos   BYTE PTR es:[edi],al
  40a868:	jno    0x40a86e
  40a86a:	xor    eax,0xa258ddfe
  40a86f:	loop   0x40a802
  40a871:	dec    eax
  40a872:	loopne 0x40a82a
  40a874:	pop    ebx
  40a875:	cmp    DWORD PTR [esi-0x7d440035],edi
  40a87b:	sub    eax,0x63ca99b
  40a880:	or     al,0xeb
  40a882:	imul   ebx,DWORD PTR [ebx+0x4e],0x98d98a35
  40a889:	pop    eax
  40a88a:	lods   al,BYTE PTR ds:[esi]
  40a88b:	jns    0x40a81a
  40a88d:	push   esi
  40a88e:	(bad)  
  40a88f:	mov    edi,0x5186dfea
  40a894:	xchg   ebx,eax
  40a895:	sbb    eax,0x97dc7631
  40a89a:	cmp    al,cl
  40a89c:	and    al,0x51
  40a89e:	loop   0x40a827
  40a8a0:	xchg   esp,eax
  40a8a1:	imul   edx,ebx,0xffffffb6
  40a8a4:	sub    DWORD PTR [edi],edx
  40a8a6:	pushf  
  40a8a7:	xor    ebp,DWORD PTR [ecx-0x5855ba4]
  40a8ad:	call   0x129dc003
  40a8b2:	enter  0xbc5d,0x41
  40a8b6:	(bad)  
  40a8b7:	jo     0x40a84f
  40a8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ba:	sbb    ah,dh
  40a8bc:	std    
  40a8bd:	xlat   BYTE PTR ds:[ebx]
  40a8be:	aad    0xf4
  40a8c0:	jge    0x40a933
  40a8c2:	sti    
  40a8c3:	cmp    eax,0xdf768d4b
  40a8c8:	mov    al,ds:0xcc1d3f5
  40a8cd:	pop    ss
  40a8ce:	retf   
  40a8cf:	xor    DWORD PTR [ecx+0x4ba8b021],eax
  40a8d5:	cmp    ebx,edx
  40a8d7:	imul   eax,DWORD PTR [ebx],0x8a0618cd
  40a8dd:	mov    edi,DWORD PTR [ecx-0x66]
  40a8e0:	add    esp,DWORD PTR ds:0xed10ec8d
  40a8e6:	rol    bh,cl
  40a8e8:	inc    ecx
  40a8e9:	add    al,0xb1
  40a8eb:	xor    BYTE PTR [edi],ch
  40a8ed:	js     0x40a94e
  40a8ef:	hlt    
  40a8f0:	push   esp
  40a8f1:	popa   
  40a8f2:	dec    ebx
  40a8f3:	mov    bl,0xe
  40a8f5:	fldenv [eax]
  40a8f7:	sub    ah,0x21
  40a8fa:	pop    eax
  40a8fb:	adc    al,al
  40a8fd:	or     DWORD PTR [esi],0x70586cb8
  40a903:	push   esi
  40a904:	ins    DWORD PTR es:[edi],dx
  40a905:	daa    
  40a906:	shl    DWORD PTR [ebp+0x787043fe],0xb5
  40a90d:	xor    edi,DWORD PTR [edx+0x2b]
  40a910:	ins    BYTE PTR es:[edi],dx
  40a911:	push   cs
  40a912:	stos   BYTE PTR es:[edi],al
  40a913:	xchg   esp,eax
  40a914:	dec    esi
  40a915:	pop    esi
  40a916:	sbb    eax,0x158f244b
  40a91b:	and    eax,0x548a0f29
  40a920:	mov    WORD PTR [ecx],?
  40a922:	lock dec edx
  40a924:	xor    eax,0x5b23c0c0
  40a929:	push   ss
  40a92a:	push   edi
  40a92b:	aam    0x97
  40a92d:	daa    
  40a92e:	jno    0x40a913
  40a930:	cmp    ah,BYTE PTR [eax-0x52]
  40a933:	cwde   
  40a934:	mov    esi,0xfb726d4f
  40a939:	je     0x40a985
  40a93b:	xchg   BYTE PTR [edi+ecx*8],ch
  40a93e:	pop    ecx
  40a93f:	xchg   esi,eax
  40a940:	scas   al,BYTE PTR es:[edi]
  40a941:	fcom   QWORD PTR [ebp+0x1e]
  40a944:	ds mov dl,0xf
  40a947:	adc    dh,BYTE PTR [ecx]
  40a949:	fwait
  40a94a:	jmp    0xa43e:0xd6429f3
  40a951:	aam    0x5d
  40a953:	jl     0x40a965
  40a955:	push   ebp
  40a956:	cmp    BYTE PTR [ebx-0x6dc3f0ae],0x7f
  40a95d:	xchg   esi,eax
  40a95e:	dec    edi
  40a95f:	xchg   esi,eax
  40a960:	mov    ch,0x8d
  40a962:	jmp    0x40a96f
  40a964:	add    DWORD PTR [edi],0x6d
  40a967:	add    dh,dh
  40a969:	(bad)  
  40a96a:	fucomp st(3)
  40a96c:	jnp    0x40a999
  40a96e:	mov    ebp,0x642d80a8
  40a973:	inc    edi
  40a974:	push   ebp
  40a975:	push   es
  40a976:	mov    BYTE PTR [edx-0x1f878743],ch
  40a97c:	xlat   BYTE PTR ds:[ebx]
  40a97d:	ficom  DWORD PTR [eax]
  40a97f:	pusha  
  40a980:	cli    
  40a981:	xor    ch,BYTE PTR [edi]
  40a983:	xor    eax,0xd59921e7
  40a988:	in     eax,dx
  40a989:	in     eax,dx
  40a98a:	mov    ds:0xfac5568f,eax
  40a98f:	repz dec ebp
  40a991:	mov    dh,BYTE PTR [esi+eax*2+0x26fc8e18]
  40a998:	sbb    esp,DWORD PTR [edx-0x4044c0b2]
  40a99e:	push   ecx
  40a99f:	je     0x40a9a1
  40a9a1:	push   ebx
  40a9a2:	mov    edi,0x297cbd13
  40a9a7:	dec    esi
  40a9a8:	call   0x6f183843
  40a9ad:	aaa    
  40a9ae:	inc    esp
  40a9af:	and    eax,0x304b3c52
  40a9b4:	(bad)
  40a9b9:	retf   
  40a9ba:	inc    ebx
  40a9bb:	int    0x6e
  40a9bd:	add    eax,0xdbe5f986
  40a9c2:	or     ah,BYTE PTR [ebx+esi*1]
  40a9c5:	aam    0xe8
  40a9c7:	jo     0x40a9df
  40a9c9:	pop    ecx
  40a9ca:	cmp    ebp,edx
  40a9cc:	push   es
  40a9cd:	xchg   edi,ebx
  40a9cf:	pop    edi
  40a9d0:	addr16 inc edx
  40a9d2:	das    
  40a9d3:	pop    es
  40a9d4:	std    
  40a9d5:	add    al,BYTE PTR [ecx-0x1680c7b5]
  40a9db:	mov    esi,0x408f1fb6
  40a9e0:	(bad)  
  40a9e1:	in     eax,0xa4
  40a9e3:	inc    eax
  40a9e4:	xchg   edx,eax
  40a9e5:	jnp    0x40a9df
  40a9e7:	inc    ebx
  40a9e8:	addr16 push 0xffffffe2
  40a9eb:	sub    ebx,edx
  40a9ed:	in     al,dx
  40a9ee:	hlt    
  40a9ef:	mov    eax,0x752c7139
  40a9f4:	test   DWORD PTR [ebp+0x2c],edi
  40a9f7:	xor    DWORD PTR ds:0xa275e4c0,esp
  40a9fd:	add    DWORD PTR [ebx],edi
  40a9ff:	mov    bl,0x7
  40aa01:	mov    ch,0x88
  40aa03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa04:	pop    esi
  40aa05:	or     al,0x36
  40aa07:	mov    ebx,0x4de1790a
  40aa0c:	sbb    ebx,edx
  40aa0e:	(bad)  
  40aa10:	jle    0x40a9b5
  40aa12:	xchg   ebx,eax
  40aa13:	scas   eax,DWORD PTR es:[edi]
  40aa14:	int    0x12
  40aa16:	fwait
  40aa17:	sub    BYTE PTR [esi],0xe1
  40aa1a:	add    bl,BYTE PTR [edx+0x4baeef10]
  40aa20:	push   esi
  40aa21:	xor    al,0x5
  40aa23:	jmp    0x40a9a6
  40aa25:	xchg   esi,eax
  40aa26:	int3   
  40aa27:	adc    edi,DWORD PTR [eax-0x5e9db648]
  40aa2d:	scas   eax,DWORD PTR es:[edi]
  40aa2e:	pop    ss
  40aa2f:	icebp  
  40aa30:	ror    edx,cl
  40aa32:	icebp  
  40aa33:	ficomp WORD PTR [ebx]
  40aa35:	shr    BYTE PTR [esi],1
  40aa37:	cmp    ebp,ebp
  40aa39:	ss sbb eax,0xfb762665
  40aa3f:	fs es jo 0x40aac0
  40aa43:	cwde   
  40aa44:	push   ss
  40aa45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa46:	cs xchg edx,eax
  40aa48:	xlat   BYTE PTR ds:[ebx]
  40aa49:	jno    0x40a9e7
  40aa4b:	out    dx,al
  40aa4c:	add    DWORD PTR [edi-0x3d],esp
  40aa4f:	xchg   DWORD PTR [eax+0x2c],edi
  40aa52:	mov    eax,ds:0xae975e6b
  40aa57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa58:	push   edi
  40aa59:	mov    gs,WORD PTR [edi+0x33c22b39]
  40aa5f:	shl    bh,cl
  40aa61:	idiv   BYTE PTR [esi+0xdbd]
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	icebp  
  40aa9f:	adc    al,BYTE PTR [eax]
  40aaa1:	fucomp st(2)
  40aaa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa4:	mov    esi,0xbec2a9be
  40aaa9:	mov    esi,0x8cbd2b46
  40aaae:	ins    BYTE PTR es:[edi],dx
  40aaaf:	pop    esi
  40aab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab1:	dec    esi
  40aab2:	mov    ecx,eax
  40aab4:	js     0x40ab33
  40aab6:	and    al,0x0
  40aab8:	mov    edx,0xab20edda
  40aabd:	ror    BYTE PTR [esi-0x68be296f],0x6
  40aac4:	xchg   esi,eax
  40aac5:	test   eax,0x18f3650b
  40aaca:	aaa    
  40aacb:	je     0x40ab24
  40aacd:	aas    
  40aace:	dec    ebx
  40aacf:	push   edi
  40aad0:	and    DWORD PTR [ebx-0x35499a02],ebp
  40aad6:	pop    ds
  40aad7:	push   ss
  40aad8:	jne    0x40ab47
  40aada:	inc    esp
  40aadb:	(bad)  
  40aadc:	nop
  40aadd:	mov    al,0xba
  40aadf:	stos   BYTE PTR es:[edi],al
  40aae0:	xor    eax,0xc783b14a
  40aae6:	lock and BYTE PTR [eax+0x47],bl
  40aaea:	repnz mov al,ds:0xf596863e
  40aaf0:	jmp    0x40aae6
  40aaf2:	stc    
  40aaf3:	xor    al,0xcf
  40aaf5:	dec    edx
  40aaf6:	sbb    ebx,DWORD PTR [ecx]
  40aaf8:	mov    dl,0xc4
  40aafa:	pop    es
  40aafb:	sbb    BYTE PTR [esi],al
  40aafd:	test   DWORD PTR [eax],ecx
  40aaff:	fisttp WORD PTR [edx]
  40ab01:	popa   
  40ab02:	dec    edi
  40ab03:	adc    bh,BYTE PTR [eax-0x2a]
  40ab06:	fs jbe 0x40ab35
  40ab09:	sbb    DWORD PTR [edx+0x2f2bd7a2],eax
  40ab0f:	hlt    
  40ab10:	dec    edi
  40ab11:	scas   al,BYTE PTR es:[edi]
  40ab12:	xor    DWORD PTR [edi],0xffffff99
  40ab15:	ret    
  40ab16:	mov    BYTE PTR [esi],bh
  40ab18:	(bad)  
  40ab19:	loop   0x40ab37
  40ab1b:	add    ebp,DWORD PTR [ebp-0x2a]
  40ab1e:	xchg   ebp,eax
  40ab1f:	jnp    0x40ab7d
  40ab21:	and    DWORD PTR [ebp-0x13ccc4aa],edx
  40ab27:	or     eax,0x3d335566
  40ab2c:	dec    ebx
  40ab2d:	mov    eax,0x18c63118
  40ab32:	mov    DWORD PTR [eax-0xc],ebx
  40ab35:	jo     0x40ab1b
  40ab37:	mov    ds:0x84c69f14,eax
  40ab3c:	jno    0x40ab98
  40ab3e:	sub    al,0xe4
  40ab40:	pop    ecx
  40ab41:	pushfw 
  40ab43:	pop    ss
  40ab44:	inc    esi
  40ab45:	inc    ebx
  40ab46:	lock sub dl,BYTE PTR [edi]
  40ab49:	inc    eax
  40ab4a:	dec    edx
  40ab4b:	mov    BYTE PTR [eax],bh
  40ab4d:	imul   esi,DWORD PTR [esi],0xc9cc5cd3
  40ab53:	mov    al,0x4
  40ab55:	sbb    ah,BYTE PTR [edi+0x449d6e36]
  40ab5b:	outs   dx,BYTE PTR ds:[esi]
  40ab5c:	xlat   BYTE PTR ds:[ebx]
  40ab5d:	shr    BYTE PTR [ecx+0x1c],cl
  40ab60:	inc    edx
  40ab61:	fs lock mov esp,0x1ac5d489
  40ab68:	aad    0xd4
  40ab6a:	bswap  ebp
  40ab6c:	cmovae ecx,eax
  40ab6f:	xlat   BYTE PTR ds:[ebx]
  40ab70:	adc    BYTE PTR ds:0xb1758c8b,bh
  40ab76:	sahf   
  40ab77:	lahf   
  40ab78:	shr    DWORD PTR [edx+ebp*2-0x12],0xa9
  40ab7d:	xor    BYTE PTR [eax],ch
  40ab7f:	sbb    esp,esp
  40ab81:	in     al,0x3d
  40ab83:	xor    eax,0x6a8a473c
  40ab88:	cli    
  40ab89:	dec    eax
  40ab8a:	and    eax,0x82ed2e0f
  40ab8f:	pusha  
  40ab90:	xchg   esi,eax
  40ab91:	dec    ecx
  40ab92:	retf   
  40ab93:	pop    ebx
  40ab94:	and    edx,ecx
  40ab96:	test   dl,bl
  40ab98:	aad    0x17
  40ab9a:	std    
  40ab9b:	loope  0x40abc0
  40ab9d:	adc    ecx,DWORD PTR [edx+0x1197d22b]
  40aba3:	jge    0x40abd9
  40aba5:	test   al,0xff
  40aba7:	test   al,0xd
  40aba9:	and    esp,DWORD PTR [eax]
  40abab:	xor    al,0x6e
  40abad:	push   ecx
  40abae:	pop    esi
  40abaf:	lods   eax,DWORD PTR ds:[esi]
  40abb0:	test   al,0xa4
  40abb2:	(bad)  
  40abb3:	mov    eax,DWORD PTR [ecx]
  40abb5:	mov    cl,0x25
  40abb7:	mov    dl,0x70
  40abb9:	pop    ecx
  40abba:	push   cs
  40abbb:	iret   
  40abbc:	pop    ds
  40abbd:	mov    edx,DWORD PTR ds:0x456fa710
  40abc3:	iret   
  40abc4:	mov    esp,0xd80da240
  40abc9:	inc    BYTE PTR [eax]
  40abcb:	icebp  
  40abcc:	int    0xa1
  40abce:	and    eax,0xf1d42766
  40abd3:	push   edi
  40abd4:	hlt    
  40abd5:	pop    esp
  40abd6:	jo     0x40ac3a
  40abd8:	icebp  
  40abd9:	aas    
  40abda:	test   BYTE PTR [edx-0x13f5de60],0xf4
  40abe1:	sub    DWORD PTR [ecx+edx*8+0x3df3f0ed],edx
  40abe8:	mov    ebp,0xec2bf2a0
  40abed:	push   cs
  40abee:	inc    ebp
  40abef:	call   0xd5a9f4d
  40abf4:	or     ebx,DWORD PTR [ebp+0x589a2df3]
  40abfa:	or     eax,0x56818f05
  40abff:	push   ebx
  40ac00:	pushf  
  40ac01:	(bad)  [ecx-0x1f]
  40ac04:	enter  0xc86d,0xf2
  40ac08:	leave  
  40ac09:	imul   esi,ebx,0x18
  40ac0c:	pop    edx
  40ac0d:	cmp    edx,DWORD PTR [ebp-0x18]
  40ac10:	xchg   DWORD PTR [edx],ecx
  40ac12:	adc    al,0x72
  40ac14:	mov    cl,0xd3
  40ac16:	lods   eax,DWORD PTR ds:[esi]
  40ac17:	sub    al,0x1b
  40ac19:	les    eax,FWORD PTR [edx+ebp*8]
  40ac1c:	call   0x4e40877d
  40ac21:	push   ebp
  40ac22:	rcl    DWORD PTR [ecx],0x5
  40ac25:	out    dx,al
  40ac26:	adc    dh,bl
  40ac28:	add    dh,BYTE PTR [ecx]
  40ac2a:	out    dx,eax
  40ac2b:	adc    DWORD PTR [edx],ebp
  40ac2d:	jp     0x40aca1
  40ac2f:	iret   
  40ac30:	or     ebx,DWORD PTR [esi-0x3b78e19e]
  40ac36:	dec    esp
  40ac37:	pop    esi
  40ac38:	imul   ecx,DWORD PTR [ebx-0x30],0xfffffff9
  40ac3c:	mov    esp,0xfacf816c
  40ac41:	jb     0x40abc5
  40ac43:	cwde   
  40ac44:	int3   
  40ac45:	xchg   esi,eax
  40ac46:	fld    TBYTE PTR [edi+0x7d3d1a01]
  40ac4c:	xchg   ebp,eax
  40ac4d:	scas   eax,DWORD PTR es:[edi]
  40ac4e:	pop    esi
  40ac4f:	jb     0x40acb9
  40ac51:	fstp   TBYTE PTR [esi]
  40ac53:	dec    ecx
  40ac54:	js     0x40ac10
  40ac56:	and    DWORD PTR [edi],edx
  40ac58:	and    BYTE PTR [edi-0x54],0xe
  40ac5c:	inc    ebx
  40ac5e:	int    0xb2
  40ac60:	inc    ebx
  40ac61:	es xchg edi,eax
  40ac63:	je     0x40ac63
  40ac65:	push   ds
  40ac66:	shl    BYTE PTR [esi+0x148985c8],cl
  40ac6c:	imul   ebp,DWORD PTR [esp+ebx*2-0x194951e0],0x75
  40ac74:	test   BYTE PTR [edi],dh
  40ac76:	xchg   esp,eax
  40ac77:	xchg   ecx,eax
  40ac78:	data16 daa 
  40ac7a:	fwait
  40ac7b:	pop    ecx
  40ac7c:	push   es
  40ac7d:	add    al,0xfa
  40ac7f:	fimul  DWORD PTR [ebx+ebx*8-0x1]
  40ac83:	mov    dh,0x3c
  40ac85:	repz xor cl,BYTE PTR [ecx]
  40ac88:	mov    ds:0xc2d5bf76,eax
  40ac8d:	and    esi,esp
  40ac8f:	mov    al,0x16
  40ac91:	cs ja  0x40ac2a
  40ac94:	mov    edi,0x52eddd47
  40ac99:	sub    eax,0xacaa16b2
  40ac9e:	sub    ah,al
  40aca0:	mov    WORD PTR [ecx-0x5b],es
  40aca3:	into   
  40aca4:	repz mov WORD PTR [edi-0x20f95425],ss
  40acab:	xchg   ecx,eax
  40acac:	add    BYTE PTR [ebp-0x5db7cb49],dl
  40acb2:	lods   al,BYTE PTR ds:[esi]
  40acb3:	pop    ebx
  40acb4:	fs mov esp,0x8593d684
  40acba:	out    dx,al
  40acbb:	sbb    BYTE PTR [ebx],dl
  40acbd:	je     0x40acc1
  40acbf:	jne    0x40ad31
  40acc1:	pop    ebp
  40acc2:	xchg   ebx,edi
  40acc4:	jecxz  0x40ad2e
  40acc6:	jo     0x40ad46
  40acc8:	jg     0x40acc1
  40acca:	xchg   esi,eax
  40accb:	sub    dh,BYTE PTR [ebx+esi*8-0x5e2e1252]
  40acd2:	sub    eax,DWORD PTR [ecx-0x25]
  40acd5:	(bad)  
  40acd6:	shr    BYTE PTR [ecx+0x6b3bf353],1
  40acdc:	imul   esi,DWORD PTR [esi-0xe],0x6c239acb
  40ace3:	mov    es,ebx
  40ace5:	mov    edx,0x6b79da8f
  40acea:	pop    eax
  40aceb:	jge    0x40acf1
  40aced:	dec    ebx
  40acee:	add    ebp,DWORD PTR [edi-0x6fde034a]
  40acf4:	add    edi,DWORD PTR [edx-0x40]
  40acf7:	inc    ecx
  40acf8:	jecxz  0x40ac98
  40acfa:	xchg   BYTE PTR [esi*2+0x4e0e727b],cl
  40ad01:	fsubr  QWORD PTR [edi+ebx*1+0xa12c08f]
  40ad08:	addr16 aas 
  40ad0a:	fcom   QWORD PTR ds:0x7f827e2f
  40ad10:	mov    al,0x5d
  40ad12:	ret    
  40ad13:	outs   dx,DWORD PTR ds:[esi]
  40ad14:	xor    eax,0xbbc4c23a
  40ad19:	pop    ebp
  40ad1a:	pop    ss
  40ad1b:	add    eax,0xb6ca7fab
  40ad20:	in     al,dx
  40ad21:	inc    ecx
  40ad22:	iret   
  40ad23:	push   edx
  40ad24:	xor    edx,edx
  40ad26:	mov    DWORD PTR [ebp-0x18],0x187
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x4226f8
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi-0x5bfba70],bl
  40ad62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0x93b7f238
  40ad6f:	push   eax
  40ad70:	xchg   esp,esi
  40ad72:	cmp    DWORD PTR [esi+0x2218ca6b],esi
  40ad78:	aad    0x33
  40ad7a:	gs push ecx
  40ad7c:	mov    edi,0xf212e6f5
  40ad81:	mov    bl,0x8b
  40ad83:	push   ss
  40ad84:	popa   
  40ad85:	mov    bl,BYTE PTR [ebx+0x4bb162e2]
  40ad8b:	scas   al,BYTE PTR es:[edi]
  40ad8c:	iret   
  40ad8d:	xor    bh,dh
  40ad8f:	dec    ecx
  40ad90:	xchg   edx,eax
  40ad91:	outs   dx,DWORD PTR ds:[esi]
  40ad92:	repnz retf 0x4f9
  40ad96:	jae    0x40ad22
  40ad98:	pushf  
  40ad99:	lahf   
  40ad9a:	mov    ah,0xd1
  40ad9c:	aam    0xca
  40ad9e:	arpl   WORD PTR [edi+eax*4],di
  40ada1:	jne    0x40ada7
  40ada3:	mov    ds:0x356e442f,al
  40ada8:	bound  ecx,QWORD PTR [ebx+0xa]
  40adab:	or     al,0x5a
  40adad:	outs   dx,BYTE PTR ds:[esi]
  40adae:	push   edx
  40adaf:	dec    esi
  40adb0:	sbb    bh,BYTE PTR [ecx+0x64]
  40adb3:	jnp    0x40ad5a
  40adb5:	fs jg  0x40ad74
  40adb8:	test   BYTE PTR [esi+0x21e79f99],dl
  40adbe:	jecxz  0x40adac
  40adc0:	sahf   
  40adc1:	(bad)  
  40adc3:	gs jns 0x40adc2
  40adc6:	or     ebx,esi
  40adc8:	push   0xde73a717
  40adcd:	add    DWORD PTR [eax+eax*4],eax
  40add0:	dec    edx
  40add1:	push   eax
  40add2:	ins    BYTE PTR es:[edi],dx
  40add3:	xlat   BYTE PTR ds:[ebx]
  40add4:	test   BYTE PTR [eax],al
  40add6:	jb     0x40ae14
  40add8:	push   edi
  40add9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adda:	lea    ebp,[ecx+0x20]
  40addd:	popa   
  40adde:	(bad)
  40ade2:	push   0xffffff93
  40ade4:	mov    bl,0xb
  40ade6:	and    al,0x95
  40ade8:	inc    ecx
  40ade9:	retf   
  40adea:	push   ecx
  40adeb:	adc    esp,DWORD PTR [eax+edi*8]
  40adee:	cmc    
  40adef:	jae    0x40adbe
  40adf1:	jbe    0x40ae50
  40adf3:	not    esp
  40adf5:	rcl    DWORD PTR [edx-0x44],0xc
  40adf9:	mov    ebp,0x5ecbe472
  40adfe:	mov    ah,0xd4
  40ae00:	(bad)  [eax+0x1]
  40ae03:	ss pop edi
  40ae05:	mov    eax,0xa54cd4c
  40ae0a:	and    al,0x5b
  40ae0c:	xor    al,BYTE PTR [ecx+0x3a]
  40ae0f:	leave  
  40ae10:	sbb    bh,dh
  40ae12:	iret   
  40ae13:	out    0xf7,al
  40ae15:	push   ebx
  40ae16:	ss (bad) 
  40ae18:	in     eax,dx
  40ae19:	(bad)  
  40ae1a:	mov    ds:0x3a96d99,al
  40ae1f:	fnstenv [ebx-0x4469c63a]
  40ae25:	adc    eax,0x862989d7
  40ae2a:	popf   
  40ae2b:	popf   
  40ae2c:	xor    esi,eax
  40ae2e:	sbb    DWORD PTR [ebx-0x5d],0xffffff8b
  40ae32:	add    al,0x24
  40ae34:	cwde   
  40ae35:	pop    ds
  40ae36:	push   eax
  40ae37:	fwait
  40ae38:	popa   
  40ae39:	mov    al,0xcf
  40ae3b:	inc    ecx
  40ae3c:	jns    0x40ae2c
  40ae3e:	pop    ss
  40ae3f:	push   esp
  40ae40:	je     0x40add9
  40ae42:	dec    ebx
  40ae43:	jb     0x40ae16
  40ae45:	mov    dh,BYTE PTR [ebx]
  40ae47:	mov    ecx,0xd3b37c92
  40ae4c:	lock lahf 
  40ae4e:	es inc esi
  40ae50:	lea    edi,[edx-0x19]
  40ae53:	mov    dh,BYTE PTR [ecx-0x28]
  40ae56:	cs inc eax
  40ae58:	jmp    0x3024:0xbbd4262b
  40ae5f:	ffree  st(4)
  40ae61:	(bad)  
  40ae63:	stos   BYTE PTR es:[edi],al
  40ae64:	and    eax,0xe89a8dd2
  40ae69:	mov    ds:0x50dc63c5,eax
  40ae6e:	ret    
  40ae6f:	mov    fs:0xa4cc2347,eax
  40ae75:	jns    0x40ae14
  40ae77:	mov    esi,0x449017e
  40ae7c:	jecxz  0x40ae12
  40ae7e:	(bad)  
  40ae7f:	enter  0xf1,0xf7
  40ae83:	adc    DWORD PTR [esi],edx
  40ae85:	ror    ch,1
  40ae87:	jbe    0x40aed2
  40ae89:	lods   al,BYTE PTR ds:[esi]
  40ae8a:	out    dx,al
  40ae8b:	mov    ch,BYTE PTR [edx-0x22a22cad]
  40ae91:	fldcw  WORD PTR [edi-0x4461143d]
  40ae97:	hlt    
  40ae98:	loop   0x40aef2
  40ae9a:	pop    ds
  40ae9b:	cmc    
  40ae9c:	sbb    edi,DWORD PTR [ebp-0x744ccd76]
  40aea2:	enter  0x497a,0x58
  40aea6:	jo     0x40aecd
  40aea8:	out    dx,al
  40aea9:	mov    ds:0x2bdc244d,eax
  40aeae:	ja     0x40ae66
  40aeb0:	test   eax,0xef107bba
  40aeb5:	jne    0x40aefe
  40aeb7:	ds sbb al,0x5b
  40aeba:	popa   
  40aebb:	popf   
  40aebc:	mov    ch,0xac
  40aebe:	pop    esi
  40aebf:	(bad)  
  40aec0:	dec    eax
  40aec1:	aas    
  40aec2:	push   edx
  40aec3:	xchg   edx,eax
  40aec4:	mov    dl,ah
  40aec6:	sbb    eax,0xf7b685a7
  40aecb:	cmp    al,0xc0
  40aecd:	dec    eax
  40aece:	push   ecx
  40aecf:	add    al,0x24
  40aed1:	in     al,dx
  40aed2:	loopne 0x40af3d
  40aed4:	fisub  DWORD PTR [ebx]
  40aed6:	mov    bh,0x1b
  40aed8:	xor    BYTE PTR [edi-0x7f0e92ce],cl
  40aede:	retf   
  40aedf:	xchg   bh,ah
  40aee1:	or     DWORD PTR [eax+0x533dcd0],edi
  40aee7:	(bad)  
  40aee8:	adc    al,0xaf
  40aeea:	jno    0x40af69
  40aeec:	test   al,0xba
  40aeee:	mov    es,WORD PTR [edx-0x793e6da8]
  40aef4:	and    eax,edx
  40aef6:	fwait
  40aef7:	test   BYTE PTR [eax],0xa
  40aefa:	clc    
  40aefb:	or     DWORD PTR [ecx-0x1e7cfcb8],0xffffffbc
  40af02:	pop    edx
  40af03:	pop    esp
  40af04:	in     al,0xf
  40af06:	int3   
  40af07:	test   eax,0xe5780ea6
  40af0c:	jno    0x40aeb9
  40af0e:	addr16 sbb ebx,edi
  40af11:	sub    eax,0x5efe0551
  40af16:	clc    
  40af17:	cdq    
  40af18:	fsub   st(1),st
  40af1a:	push   ecx
  40af1b:	sti    
  40af1c:	sbb    ah,bl
  40af1e:	outs   dx,BYTE PTR ds:[esi]
  40af1f:	jae    0x40af5e
  40af21:	ss lahf 
  40af23:	fidivr DWORD PTR [ebx-0x5b]
  40af26:	jle    0x40aed9
  40af28:	push   esi
  40af29:	pop    edi
  40af2a:	repz push ss
  40af2c:	and    BYTE PTR [ebp-0x32],al
  40af2f:	das    
  40af30:	out    dx,eax
  40af31:	call   0x5544:0x9e0cd97d
  40af38:	or     al,BYTE PTR ds:0x2ffabf3e
  40af3e:	sub    eax,0xc346828f
  40af43:	clc    
  40af44:	dec    esi
  40af45:	repnz test BYTE PTR ds:0xc89a9973,0xc
  40af4d:	mov    DWORD PTR [esi+eax*4],ebx
  40af50:	or     ch,BYTE PTR [edi]
  40af52:	mov    esi,0xf498e459
  40af57:	pop    ecx
  40af58:	out    dx,al
  40af59:	mov    eax,ds:0xdb37fade
  40af5e:	cs stos BYTE PTR es:[edi],al
  40af60:	push   edx
  40af61:	jmp    0x766b91aa
  40af66:	or     DWORD PTR [ebx-0x19],0x28
  40af6a:	imul   eax,esi,0x29b66894
  40af70:	jle    0x40af53
  40af72:	sbb    ebp,DWORD PTR [ebp+0x59f5c4d2]
  40af78:	mov    cl,dh
  40af7a:	pop    es
  40af7b:	(bad)  
  40af7c:	aas    
  40af7d:	fld    st(6)
  40af7f:	cmp    al,0x66
  40af81:	xchg   esi,eax
  40af82:	mov    ebp,0x11db7296
  40af87:	dec    esi
  40af88:	mov    ecx,0x4da72b87
  40af8d:	mov    edi,0xbc2f709e
  40af92:	mov    ch,0x88
  40af94:	shl    dh,0xc5
  40af97:	cmp    ebp,esi
  40af99:	retf   
  40af9a:	mov    bl,0x46
  40af9c:	xor    dl,BYTE PTR [edi-0x5000209]
  40afa2:	daa    
  40afa3:	jmp    0x4f02ac34
  40afa8:	sbb    eax,0xcf2cdfd9
  40afad:	shl    ebx,0x58
  40afb0:	pop    ds
  40afb1:	sub    DWORD PTR [edi+ebx*2],esi
  40afb4:	cmp    dl,bl
  40afb6:	cwde   
  40afb7:	shl    esi,1
  40afb9:	xchg   DWORD PTR [esp+esi*1+0x5fc88a84],eax
  40afc0:	and    ebx,DWORD PTR [eax]
  40afc2:	hlt    
  40afc3:	test   BYTE PTR [ebx],dl
  40afc5:	inc    edx
  40afc6:	stc    
  40afc7:	or     cl,BYTE PTR [edx]
  40afc9:	cwde   
  40afca:	dec    edi
  40afcb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afcd:	cmovle ecx,DWORD PTR [ecx-0xb1e537d]
  40afd4:	sbb    ch,BYTE PTR [ebx-0x75]
  40afd7:	lods   eax,DWORD PTR ds:[esi]
  40afd8:	jnp    0x40b055
  40afda:	adc    dl,BYTE PTR [esi]
  40afdc:	push   ds
  40afdd:	sub    ch,dl
  40afdf:	bound  ebx,QWORD PTR [ebp+0x52]
  40afe2:	pop    eax
  40afe3:	(bad)  
  40afe4:	dec    esi
  40afe5:	mov    ebx,DWORD PTR [ebp-0x20]
  40afe8:	imul   edx,ebx
  40afeb:	mov    ebx,DWORD PTR [ebp-0x1c]
  40afee:	xor    edx,ebx
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fisttp QWORD PTR [edi]
  40b0f6:	jmp    0x40b112
  40b0f8:	rol    edx,1
  40b0fa:	scas   eax,DWORD PTR es:[edi]
  40b0fb:	mov    esi,0xbec2a9be
  40b100:	mov    esi,0xdb3644ce
  40b105:	add    DWORD PTR [ecx+0x35],0x4e9fb642
  40b10c:	inc    ecx
  40b10d:	es popa 
  40b10f:	inc    ecx
  40b110:	xchg   ecx,eax
  40b111:	jae    0x40b0af
  40b113:	out    0x55,al
  40b115:	pop    edi
  40b116:	test   DWORD PTR [ebp+0x304000dc],esp
  40b11c:	arpl   WORD PTR [edi+0x7dc1c26c],si
  40b122:	inc    ebx
  40b123:	sbb    esp,DWORD PTR [ecx]
  40b125:	into   
  40b126:	sub    BYTE PTR [esi+0x59fe88f2],bl
  40b12c:	mov    ebp,0x687a1fff
  40b131:	test   BYTE PTR [edi+0x3f],0xaf
  40b135:	pop    esi
  40b136:	ins    BYTE PTR es:[edi],dx
  40b137:	out    0x6c,al
  40b139:	mov    ?,eax
  40b13b:	aam    0x44
  40b13d:	retf   
  40b13e:	push   ss
  40b13f:	in     eax,0x2f
  40b141:	cli    
  40b142:	fiadd  WORD PTR [edi-0x18]
  40b145:	cmp    eax,0x762d8747
  40b14a:	and    eax,0x60302bd4
  40b14f:	ret    0x3080
  40b152:	int    0xd
  40b154:	dec    ebx
  40b155:	mov    ecx,0x90c3dca4
  40b15a:	cs xchg ecx,eax
  40b15c:	mov    ebx,0x20bd8bb5
  40b161:	les    ebx,FWORD PTR [ebp+0x359deca5]
  40b167:	dec    esi
  40b168:	mov    bl,0xf2
  40b16a:	data16 and al,0xb1
  40b16d:	jb     0x40b1a9
  40b16f:	mov    edi,0xfc1fc9a0
  40b174:	adc    eax,0x23d1ae53
  40b179:	retf   
  40b17a:	sbb    BYTE PTR [edx+0x17fc9f9b],ch
  40b180:	in     eax,0x2b
  40b182:	out    0x8e,al
  40b184:	sar    DWORD PTR [esi],1
  40b186:	iret   
  40b187:	pop    ecx
  40b188:	shl    DWORD PTR [ebx-0x30aac9b6],cl
  40b18e:	cdq    
  40b18f:	retf   0x20d6
  40b192:	rol    DWORD PTR [edx-0x78a6b1a6],cl
  40b198:	ins    BYTE PTR es:[edi],dx
  40b199:	sbb    esi,ecx
  40b19b:	out    dx,eax
  40b19c:	shl    ebp,1
  40b19e:	jno    0x40b179
  40b1a0:	mul    DWORD PTR [edx+ebp*4+0x1c811d42]
  40b1a7:	fmul   QWORD PTR [esi-0x3379134b]
  40b1ad:	and    cl,0xe3
  40b1b0:	les    eax,FWORD PTR [edi]
  40b1b2:	(bad)  
  40b1b3:	aaa    
  40b1b4:	test   al,0xfc
  40b1b6:	sub    al,BYTE PTR [edi-0x6ebe4837]
  40b1bc:	xor    BYTE PTR [edx+0x39],ah
  40b1bf:	in     al,dx
  40b1c0:	stos   DWORD PTR es:[edi],eax
  40b1c1:	test   ah,0x8d
  40b1c4:	dec    esp
  40b1c5:	sub    al,0x9c
  40b1c7:	mov    gs,WORD PTR [ebx-0xc]
  40b1ca:	xor    al,0x5c
  40b1cc:	movntps XMMWORD PTR [edi],xmm2
  40b1cf:	add    al,dh
  40b1d1:	jg     0x40b194
  40b1d3:	mov    bh,0x13
  40b1d5:	cld    
  40b1d6:	mov    esi,0x9c898b6f
  40b1db:	mov    edi,0x4a2582f
  40b1e0:	xchg   esp,eax
  40b1e1:	push   ss
  40b1e2:	adc    al,0x87
  40b1e4:	ds lahf 
  40b1e6:	lahf   
  40b1e7:	inc    ebx
  40b1e8:	push   0x72798d66
  40b1ed:	in     eax,0x4f
  40b1ef:	xor    eax,DWORD PTR [edi-0x4da14ac0]
  40b1f5:	aad    0xd3
  40b1f7:	adc    al,0x83
  40b1f9:	pop    edi
  40b1fa:	mov    ds:0x9e518979,eax
  40b1ff:	mov    al,0x9e
  40b201:	into   
  40b202:	shl    BYTE PTR [edx+esi*8-0x6a],1
  40b206:	fcomp  QWORD PTR [edx]
  40b208:	mov    eax,0x93530fb3
  40b20d:	push   ebx
  40b20e:	imul   edx,DWORD PTR [edx],0x53c4be07
  40b214:	aas    
  40b215:	enter  0xd6b5,0xf0
  40b219:	push   edx
  40b21a:	add    eax,0xbd751289
  40b21f:	xlat   BYTE PTR ds:[ebx]
  40b220:	ret    0x7c03
  40b223:	aam    0x19
  40b225:	xlat   BYTE PTR ds:[ebx]
  40b226:	lods   al,BYTE PTR ds:[esi]
  40b227:	pop    sp
  40b229:	and    eax,0x21fe11dd
  40b22e:	es fs mov esi,0xbe76f4dd
  40b235:	ja     0x40b21d
  40b237:	(bad)  
  40b238:	int3   
  40b239:	pop    ecx
  40b23a:	add    DWORD PTR fs:[ecx],edx
  40b23d:	sub    bl,ah
  40b23f:	mov    ecx,0x23082a72
  40b244:	outs   dx,BYTE PTR ss:[esi]
  40b246:	cwde   
  40b247:	rol    BYTE PTR [eax-0x25],cl
  40b24a:	imul   eax,DWORD PTR [edi+0x539284e4],0xa893cf51
  40b254:	div    DWORD PTR [esi+0x78f13783]
  40b25a:	push   esp
  40b25b:	(bad)  
  40b25c:	out    dx,eax
  40b25d:	dec    edx
  40b25e:	mov    ds:0xc701aacc,eax
  40b263:	call   DWORD PTR [esi+0x2f7fbf67]
  40b269:	cs data16 mov al,0x22
  40b26d:	mov    fs,esp
  40b26f:	cmc    
  40b270:	gs loop 0x40b23a
  40b273:	xor    al,0xe9
  40b275:	(bad)  
  40b276:	sbb    esi,ebx
  40b278:	mov    eax,ds:0x33639ca0
  40b27d:	shl    DWORD PTR [ebp+0x4b0c15f4],cl
  40b283:	icebp  
  40b284:	cmp    al,cl
  40b286:	dec    eax
  40b287:	dec    ecx
  40b288:	xor    edi,ebp
  40b28a:	imul   ebx,esp,0x20286762
  40b290:	rcl    BYTE PTR fs:[edx-0x30],cl
  40b294:	xchg   DWORD PTR [eax],esi
  40b296:	mov    dl,0x81
  40b298:	(bad)  
  40b299:	test   BYTE PTR [edi+eiz*4],bh
  40b29c:	ins    DWORD PTR es:[edi],dx
  40b29d:	dec    ebp
  40b29e:	cmp    al,0xf7
  40b2a0:	into   
  40b2a1:	gs cwde 
  40b2a3:	xor    ah,BYTE PTR [esp+edx*4+0x56b3780d]
  40b2aa:	shr    BYTE PTR [eax-0x215b9baf],1
  40b2b0:	jns    0x40b301
  40b2b2:	(bad)  
  40b2b3:	enter  0x978f,0x86
  40b2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b8:	dec    esp
  40b2b9:	aas    
  40b2ba:	mov    dl,0xce
  40b2bc:	and    al,0x5b
  40b2be:	fisubr WORD PTR [ecx-0x6b]
  40b2c1:	mov    ds:0xe131113e,al
  40b2c6:	(bad)  
  40b2c7:	xchg   ebx,eax
  40b2c8:	fmul   QWORD PTR [ebp-0x49]
  40b2cb:	mov    edx,0x55befd22
  40b2d0:	scas   eax,DWORD PTR es:[edi]
  40b2d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2d2:	je     0x40b339
  40b2d4:	pop    edx
  40b2d5:	mov    edx,0xfb5b2fb6
  40b2da:	aam    0x33
  40b2dc:	or     DWORD PTR [edx+0xf],0xffffff91
  40b2e0:	loope  0x40b322
  40b2e2:	cld    
  40b2e3:	sub    edi,DWORD PTR [ebp+0x287dc92a]
  40b2e9:	add    DWORD PTR [ebp-0xc],ebp
  40b2ec:	into   
  40b2ed:	fstp   QWORD PTR [esi-0x40400bff]
  40b2f3:	adc    DWORD PTR [eax-0x73],edx
  40b2f6:	int    0x48
  40b2f8:	xor    DWORD PTR [ebx-0x517c317c],0x69
  40b2ff:	xor    esp,DWORD PTR [esi]
  40b301:	addr16 jne 0x40b2df
  40b304:	inc    esi
  40b305:	add    DWORD PTR [edi-0x4d],eax
  40b308:	sti    
  40b309:	jg     0x40b32e
  40b30b:	(bad)  
  40b30c:	mov    esi,0x2457baf1
  40b311:	adc    BYTE PTR [esi+edx*4+0x48],ch
  40b315:	popa   
  40b316:	pop    ecx
  40b317:	sub    BYTE PTR [ecx+0xf],bl
  40b31a:	mov    ecx,0x9667e0bc
  40b31f:	xchg   DWORD PTR [eax+0x12],ebp
  40b322:	xlat   BYTE PTR ds:[ebx]
  40b323:	add    bl,BYTE PTR [edx+0x55]
  40b326:	pop    edx
  40b327:	adc    ch,dl
  40b329:	jbe    0x40b2f5
  40b32b:	das    
  40b32c:	je     0x40b385
  40b32e:	push   ebx
  40b32f:	in     eax,dx
  40b330:	ret    0x4c3
  40b333:	iret   
  40b334:	jo     0x40b375
  40b336:	std    
  40b337:	clc    
  40b338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b339:	das    
  40b33a:	xchg   DWORD PTR [esi+0x3cb059d7],edi
  40b340:	std    
  40b341:	pop    edx
  40b342:	mov    al,ds:0x13255e7c
  40b347:	jmp    0x4e15:0xa115b367
  40b34e:	outs   dx,DWORD PTR ds:[esi]
  40b34f:	mov    DWORD PTR [eax+ebx*2-0x65],ecx
  40b353:	mov    eax,ds:0x2ae662e6
  40b358:	xor    al,0xed
  40b35a:	in     eax,dx
  40b35b:	mov    ebx,0xd2be353a
  40b360:	lock mov ebp,0xb64e0919
  40b366:	sar    BYTE PTR [edi],1
  40b368:	sub    DWORD PTR ds:0x309b61f6,esi
  40b36e:	imul   esi,ebp,0xcd1f46e6
  40b374:	dec    edx
  40b375:	push   eax
  40b376:	dec    edx
  40b377:	push   esi
  40b378:	(bad)  
  40b37a:	mov    dl,0x2b
  40b37c:	lock mov eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x4226f8
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d2:	sub    eax,0xb3addd32
  40b3d7:	mov    esi,0xbec2a9be
  40b3dc:	mov    esi,0x8c9ab57d
  40b3e1:	jne    0x40b38c
  40b3e3:	mov    edx,DWORD PTR [eax+0x631b86d7]
  40b3e9:	sub    ecx,esi
  40b3eb:	outs   dx,DWORD PTR ds:[esi]
  40b3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ed:	jle    0x40b39f
  40b3ef:	sbb    eax,0xf0a1f5ec
  40b3f4:	mov    edx,0x9f8bf94c
  40b3f9:	fiadd  WORD PTR [edi]
  40b3fb:	xchg   BYTE PTR [edx],dh
  40b3fd:	mov    al,0xf9
  40b3ff:	(bad)  
  40b400:	lods   al,BYTE PTR ds:[esi]
  40b401:	mov    edi,0xfc33a081
  40b406:	xchg   esp,eax
  40b407:	fdecstp 
  40b409:	std    
  40b40a:	or     ebp,edx
  40b40c:	push   esp
  40b40d:	test   eax,0xafe6930d
  40b412:	xor    al,0x55
  40b414:	dec    esp
  40b415:	test   DWORD PTR [eax-0x5089693e],ecx
  40b41b:	push   ebp
  40b41c:	daa    
  40b41d:	xchg   ebx,eax
  40b41e:	mov    DWORD PTR [ebx],esi
  40b420:	mov    ecx,0x2be5825d
  40b425:	add    BYTE PTR es:[ebx-0x37],ah
  40b429:	jge    0x40b49b
  40b42b:	xor    eax,0xf1440eb1
  40b430:	dec    ebp
  40b431:	repz sbb ah,bl
  40b434:	xor    DWORD PTR [edx-0x6d6ed559],esp
  40b43a:	popa   
  40b43b:	push   ebp
  40b43c:	pop    esi
  40b43d:	cmp    eax,0x554c6e96
  40b442:	jmp    0x40b419
  40b444:	xor    al,0x2d
  40b446:	or     al,0xe
  40b448:	mov    eax,0x8dd96e81
  40b44d:	mov    ds:0xa11cd1b1,eax
  40b452:	aas    
  40b453:	jg     0x40b3f8
  40b455:	xchg   edx,eax
  40b456:	lds    esi,FWORD PTR [ecx]
  40b458:	and    ch,ch
  40b45a:	push   edx
  40b45b:	mov    BYTE PTR [eax-0x65562954],dl
  40b461:	inc    ebp
  40b462:	inc    edx
  40b463:	mov    al,ds:0x1b7ead5b
  40b468:	push   ds
  40b469:	lds    esp,FWORD PTR [edi+0x6bb9f8dc]
  40b46f:	mov    dl,0x21
  40b471:	or     eax,0x17a53ee4
  40b476:	jmp    0x40b4d3
  40b478:	fstp   st(1)
  40b47a:	ret    0x5747
  40b47d:	hlt    
  40b47e:	outs   dx,BYTE PTR ds:[esi]
  40b47f:	adc    eax,0x7913b8fe
  40b484:	out    0x54,al
  40b486:	mov    esp,0x7dc4abdf
  40b48b:	sbb    al,0x3f
  40b48d:	xor    eax,DWORD PTR [edx-0x27]
  40b490:	pop    ss
  40b491:	mov    al,ds:0x7296365a
  40b496:	(bad)  cs:[ecx]
  40b499:	popa   
  40b49a:	mov    dl,0x9b
  40b49c:	jmp    0x8b8f:0x229e24c2
  40b4a3:	mov    bl,BYTE PTR [esi+0xc]
  40b4a6:	gs pop eax
  40b4a8:	inc    edx
  40b4a9:	int    0x14
  40b4ab:	mov    dh,0x8b
  40b4ad:	scas   al,BYTE PTR es:[edi]
  40b4ae:	stos   BYTE PTR es:[edi],al
  40b4af:	out    dx,eax
  40b4b0:	mov    esi,0xc83432b7
  40b4b5:	ins    BYTE PTR es:[edi],dx
  40b4b6:	les    edx,FWORD PTR [edi+0x5777c974]
  40b4bc:	inc    ebx
  40b4bd:	or     ch,BYTE PTR [edx+0x574b617a]
  40b4c3:	retf   
  40b4c4:	out    dx,eax
  40b4c5:	cmp    dh,ch
  40b4c7:	sbb    esp,DWORD PTR [esi-0x13b9cdc6]
  40b4cd:	loope  0x40b4c1
  40b4cf:	ret    
  40b4d0:	in     al,0x5a
  40b4d2:	xor    ebp,esp
  40b4d4:	(bad)  
  40b4d5:	aaa    
  40b4d6:	mov    ebp,0x9db2ac71
  40b4db:	push   esp
  40b4dc:	mov    ds:0x5bdebc2,al
  40b4e1:	push   edx
  40b4e2:	ret    0xf346
  40b4e5:	or     ebp,0x149fd6ad
  40b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ed:	sub    eax,DWORD PTR [esp+eax*8+0x6375e57a]
  40b4f4:	push   ebx
  40b4f5:	xchg   ebp,eax
  40b4f6:	dec    eax
  40b4f7:	(bad)
  40b4fb:	bound  edi,QWORD PTR [esi+0x71]
  40b4fe:	into   
  40b4ff:	jl     0x40b51e
  40b501:	adc    BYTE PTR [ebp+0x2d3130cf],dh
  40b507:	jbe    0x40b50e
  40b509:	scas   al,BYTE PTR es:[edi]
  40b50a:	data16 cmp BYTE PTR [edi+0x494c2f14],cl
  40b511:	aam    0xf9
  40b513:	push   ebp
  40b514:	push   ecx
  40b515:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b517:	(bad)  
  40b519:	sahf   
  40b51a:	jle    0x40b4dc
  40b51c:	and    dh,BYTE PTR [edi]
  40b51e:	sub    BYTE PTR [ebp+0x1a],bl
  40b521:	dec    ecx
  40b522:	int3   
  40b523:	cmp    bh,dh
  40b525:	inc    ebp
  40b526:	hlt    
  40b527:	cmp    BYTE PTR ds:0x1f41908a,ah
  40b52d:	xor    bl,al
  40b52f:	mov    ah,0x47
  40b531:	dec    ecx
  40b532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b533:	pop    esp
  40b534:	das    
  40b535:	call   0x250:0x9d2ba9a8
  40b53c:	ror    DWORD PTR [esi-0x41],1
  40b53f:	or     al,BYTE PTR [ebx+0x1c]
  40b542:	pushf  
  40b543:	dec    esi
  40b544:	loop   0x40b597
  40b546:	iret   
  40b547:	adc    DWORD PTR [ebx+0x3c9a8546],edx
  40b54d:	mov    cl,0x3f
  40b54f:	pop    ebp
  40b550:	call   0x9bd7:0x8385d039
  40b557:	test   DWORD PTR [edx-0x3a],esp
  40b55a:	ss xor dl,bh
  40b55d:	js     0x40b59b
  40b55f:	bound  eax,QWORD PTR [ebx]
  40b561:	inc    edx
  40b562:	pop    eax
  40b563:	add    BYTE PTR [ebx+0x634bee67],dh
  40b569:	(bad)  
  40b56a:	retf   0x6555
  40b56d:	pop    ds
  40b56e:	scas   eax,DWORD PTR es:[edi]
  40b56f:	sti    
  40b570:	gs out dx,eax
  40b572:	mov    dh,0x56
  40b574:	jle    0x40b583
  40b576:	div    BYTE PTR [eax-0x70]
  40b579:	popa   
  40b57a:	scas   eax,DWORD PTR es:[edi]
  40b57b:	into   
  40b57c:	enter  0xc7bb,0xe9
  40b580:	ror    BYTE PTR [eax+0x690d2a97],cl
  40b586:	push   edi
  40b587:	sbb    BYTE PTR [ecx-0x32c495ad],dh
  40b58d:	cmp    eax,0xffffffc2
  40b590:	(bad)  
  40b591:	cmp    al,0x18
  40b593:	xor    eax,0x67c53a0a
  40b598:	das    
  40b599:	dec    ebp
  40b59a:	pushf  
  40b59b:	pop    ecx
  40b59c:	bnd jge 0x40b5a1
  40b59f:	mov    dl,0x3f
  40b5a1:	stc    
  40b5a2:	cdq    
  40b5a3:	std    
  40b5a4:	pop    ds
  40b5a5:	hlt    
  40b5a6:	dec    ebp
  40b5a7:	fsubr  DWORD PTR [ebx+0x5b960f40]
  40b5ad:	je     0x40b552
  40b5af:	pushf  
  40b5b0:	dec    ecx
  40b5b1:	pop    ebp
  40b5b2:	les    esp,FWORD PTR [edi+0x1]
  40b5b5:	jmp    0x40b541
  40b5b7:	and    eax,DWORD PTR [edx+0x33230cfe]
  40b5bd:	push   edi
  40b5be:	sbb    DWORD PTR [esi],0xffffffbd
  40b5c1:	mov    ebp,0x7b6b2a81
  40b5c7:	mov    al,0x98
  40b5c9:	loopne 0x40b5ad
  40b5cb:	cmp    eax,0x934b7341
  40b5d0:	out    dx,al
  40b5d1:	push   ss
  40b5d2:	popa   
  40b5d3:	pop    esi
  40b5d4:	out    0x93,al
  40b5d6:	(bad)  
  40b5d7:	or     esi,DWORD PTR [esi-0x322ee0e6]
  40b5dd:	icebp  
  40b5de:	sbb    ch,BYTE PTR [edi+0x2156a301]
  40b5e4:	enter  0x9d07,0xef
  40b5e8:	imul   edi,DWORD PTR ds:0xc674e83a,0xffffff88
  40b5ef:	sub    al,0x80
  40b5f1:	out    dx,eax
  40b5f2:	adc    edx,DWORD PTR [esi-0x64]
  40b5f5:	enter  0x4c59,0x3b
  40b5f9:	js     0x40b5a8
  40b5fb:	xlat   BYTE PTR ds:[ebx]
  40b5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fd:	aaa    
  40b5fe:	and    edx,ecx
  40b600:	push   ecx
  40b601:	fdivp  st(6),st
  40b603:	pop    edi
  40b604:	mov    dl,0xcd
  40b606:	inc    BYTE PTR [edi-0x43d71c54]
  40b60c:	test   eax,0x8d218fe9
  40b611:	arpl   WORD PTR [ebp-0x7c],bp
  40b614:	push   cs
  40b615:	inc    DWORD PTR [edi+0x33]
  40b618:	cwde   
  40b619:	sbb    eax,0x4e73ec36
  40b61e:	fnstsw WORD PTR [ebx]
  40b620:	cmp    dl,BYTE PTR [esi+ebp*2+0x4c]
  40b624:	enter  0xdf7f,0x87
  40b628:	sbb    eax,0xc3624496
  40b62d:	push   eax
  40b62e:	lods   al,BYTE PTR ds:[esi]
  40b62f:	out    dx,eax
  40b630:	jo     0x40b610
  40b632:	push   0xbc7b7a3d
  40b637:	pop    ebp
  40b638:	mov    cs:0xa975d14d,al
  40b63e:	fild   DWORD PTR [ecx]
  40b640:	imul   esp,ebp,0xfffffff4
  40b643:	inc    eax
  40b644:	mov    al,0xc8
  40b646:	sub    DWORD PTR [edi+0x6c],0xffffff80
  40b64a:	jmp    0xf5ebbc9c
  40b64f:	jmp    0x40b65e
  40b651:	pop    eax
  40b652:	dec    dh
  40b654:	push   ecx
  40b655:	shl    BYTE PTR [edx+0xbf0558b],cl
  40b65b:	ret    0xf635
  40b65e:	pop    ecx
  40b65f:	add    BYTE PTR [eax],al
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x7ce39e60,eax
  40b6b1:	xor    al,0xdd
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0x8c90807e
  40b6bf:	dec    esi
  40b6c0:	test   BYTE PTR [edx],dl
  40b6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c3:	push   edi
  40b6c4:	jg     0x40b707
  40b6c6:	dec    edi
  40b6c7:	(bad)  
  40b6c8:	(bad)  
  40b6c9:	xchg   esi,eax
  40b6ca:	and    dh,BYTE PTR [eax+edi*1]
  40b6cd:	pop    esp
  40b6ce:	loope  0x40b686
  40b6d0:	inc    edi
  40b6d1:	inc    edx
  40b6d2:	xchg   edx,eax
  40b6d3:	xchg   BYTE PTR [edi+0x7c],cl
  40b6d6:	aas    
  40b6d7:	mov    WORD PTR [ecx+0x46],es
  40b6da:	out    0xb8,al
  40b6dc:	dec    edi
  40b6dd:	and    BYTE PTR [esi+ebx*1],0xe1
  40b6e1:	lods   eax,DWORD PTR ds:[esi]
  40b6e2:	gs push edi
  40b6e4:	(bad)  
  40b6e5:	sub    esi,DWORD PTR [ebp-0x54381f80]
  40b6eb:	jmp    0x1e83ffdb
  40b6f0:	mov    esi,0x8e789f12
  40b6f5:	push   edi
  40b6f6:	cs dec esi
  40b6f8:	inc    ecx
  40b6f9:	ins    DWORD PTR es:[edi],dx
  40b6fa:	xchg   BYTE PTR [edi],ah
  40b6fc:	push   ebx
  40b6fd:	push   ss
  40b6fe:	loope  0x40b6af
  40b700:	xlat   BYTE PTR ds:[ebx]
  40b701:	pop    esi
  40b702:	jp     0x40b6a5
  40b704:	jl     0x40b6ea
  40b706:	xchg   ecx,eax
  40b707:	sub    BYTE PTR [eax+0x29],al
  40b70a:	add    DWORD PTR [ebp-0x6],esi
  40b70d:	js     0x40b6f6
  40b70f:	mul    ah
  40b711:	pop    eax
  40b712:	popa   
  40b713:	lahf   
  40b714:	mov    es,esi
  40b716:	push   ebp
  40b717:	aam    0x28
  40b719:	icebp  
  40b71a:	jbe    0x40b761
  40b71c:	sub    al,0x67
  40b71e:	scas   al,BYTE PTR es:[edi]
  40b71f:	push   esp
  40b720:	push   esi
  40b721:	pop    ebp
  40b722:	sbb    al,0xfe
  40b724:	add    edx,esi
  40b726:	mov    DWORD PTR [ebx+ecx*4],edx
  40b729:	and    bl,BYTE PTR [edi-0x6a]
  40b72c:	ins    DWORD PTR es:[edi],dx
  40b72d:	adc    DWORD PTR [edi-0x73078868],0x48
  40b734:	call   0x1a447f5a
  40b739:	mov    bl,0x23
  40b73b:	adc    eax,0xefed1f49
  40b740:	jecxz  0x40b6d1
  40b742:	test   bl,al
  40b744:	repnz (bad) 
  40b746:	sbb    ebp,DWORD PTR [edx-0x6e8e2850]
  40b74c:	dec    ecx
  40b74d:	xchg   ebx,eax
  40b74e:	mov    edi,0xb4221854
  40b753:	sbb    BYTE PTR [esp+ebx*2+0x2e024b14],0x15
  40b75b:	(bad)  
  40b75c:	pop    ss
  40b75d:	inc    ebx
  40b75e:	arpl   WORD PTR [ecx-0x29],bp
  40b761:	xor    al,0xb9
  40b763:	int    0x4c
  40b765:	inc    esp
  40b766:	fcomp  DWORD PTR [edx+0x3b]
  40b769:	mov    ds,WORD PTR [eax-0x1e]
  40b76c:	(bad)  
  40b76d:	jle    0x40b6f3
  40b76f:	sbb    ah,BYTE PTR [ecx-0x7a728ec2]
  40b775:	pop    edx
  40b776:	push   ds
  40b777:	or     dl,BYTE PTR [edx-0x33]
  40b77a:	in     eax,0x36
  40b77c:	retf   
  40b77d:	jb     0x40b77d
  40b77f:	mov    WORD PTR [edx+0x1],fs
  40b782:	pop    DWORD PTR [edi]
  40b784:	jbe    0x40b712
  40b786:	mov    cl,0x82
  40b788:	ss in  eax,0x72
  40b78b:	jne    0x40b762
  40b78d:	mov    ch,0x32
  40b78f:	mov    ebx,0x2eb9b041
  40b794:	and    ah,bl
  40b796:	in     eax,0x2c
  40b798:	cmc    
  40b799:	loopne 0x40b7b3
  40b79b:	dec    ecx
  40b79c:	popa   
  40b79d:	mov    al,ds:0x1029c6ce
  40b7a2:	push   edi
  40b7a3:	and    edx,ebx
  40b7a5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a7:	shl    DWORD PTR ds:0x272a00e7,0xbd
  40b7ae:	nop
  40b7af:	sub    DWORD PTR [ebx],eax
  40b7b1:	push   eax
  40b7b2:	int    0x2c
  40b7b4:	mov    esp,0x5c6e2a46
  40b7b9:	xchg   esi,eax
  40b7ba:	ret    
  40b7bb:	(bad)  
  40b7bc:	in     eax,dx
  40b7bd:	sbb    ebp,edx
  40b7bf:	sbb    ch,bh
  40b7c1:	test   DWORD PTR [ebx],edi
  40b7c3:	push   ebx
  40b7c4:	mov    esi,0x531b45f1
  40b7c9:	lahf   
  40b7ca:	mov    al,BYTE PTR [ecx]
  40b7cc:	jo     0x40b7cb
  40b7ce:	push   edx
  40b7cf:	mov    edi,0x197ca7c
  40b7d4:	jle    0x40b82b
  40b7d6:	pushf  
  40b7d7:	adc    dl,BYTE PTR [eax-0x647cf1bb]
  40b7dd:	push   0x43b2e425
  40b7e2:	ret    0xf383
  40b7e5:	sbb    BYTE PTR [edi],dh
  40b7e7:	shr    DWORD PTR [edx],0x6
  40b7ea:	adc    dh,BYTE PTR [esi+0x42506588]
  40b7f0:	mov    eax,es:0x8ae60b6d
  40b7f6:	aas    
  40b7f7:	inc    esp
  40b7f8:	jns    0x40b784
  40b7fa:	loop   0x40b7fe
  40b7fc:	sub    ebx,DWORD PTR [ebx+0xe1c9c29]
  40b802:	pushf  
  40b803:	adc    esp,DWORD PTR [eax+0x70330622]
  40b809:	xchg   esi,eax
  40b80a:	jns    0x40b7df
  40b80c:	xor    al,0x74
  40b80e:	push   ecx
  40b80f:	inc    ebp
  40b810:	jp     0x40b7ee
  40b812:	imul   esp,DWORD PTR [ebp-0x3f],0xf000514
  40b819:	fcomip st,st(3)
  40b81b:	jecxz  0x40b7f3
  40b81d:	add    eax,0x3f8a9eaa
  40b822:	shl    esi,cl
  40b824:	shl    DWORD PTR [ebx+0x5b0c2c00],cl
  40b82a:	adc    BYTE PTR [eax+0x53aee3e5],bl
  40b830:	cmp    al,ah
  40b832:	iret   
  40b833:	adc    eax,0xe54283ef
  40b838:	sub    ebp,DWORD PTR [ebp-0x9]
  40b83b:	mov    ah,0x5a
  40b83d:	or     dl,al
  40b83f:	shl    DWORD PTR [ebx+0x21],cl
  40b842:	push   ebp
  40b843:	aas    
  40b844:	(bad)  
  40b846:	mov    eax,ds:0xa802e5c4
  40b84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b84c:	push   ebp
  40b84d:	pop    esp
  40b84e:	pop    ebx
  40b84f:	xlat   BYTE PTR ds:[ebx]
  40b850:	mov    DWORD PTR [edi],esi
  40b852:	xchg   edi,eax
  40b853:	jno    0x40b7d5
  40b855:	jge    0x40b7f3
  40b857:	cli    
  40b858:	pop    edi
  40b859:	rcr    DWORD PTR [ecx+eiz*1],cl
  40b85c:	adc    ebx,esi
  40b85e:	addr16 js 0x40b89d
  40b861:	fscale 
  40b863:	(bad)  
  40b864:	fs out 0x54,al
  40b867:	into   
  40b868:	and    BYTE PTR [ebx+0x1f],dl
  40b86b:	xor    esp,DWORD PTR [ecx-0x2b]
  40b86e:	xor    DWORD PTR [ebp+0x52235a02],0x79f63761
  40b878:	or     al,BYTE PTR [esi]
  40b87a:	xchg   ebx,eax
  40b87b:	pop    edi
  40b87c:	scas   eax,DWORD PTR es:[edi]
  40b87d:	and    eax,0x9ce44493
  40b882:	(bad)  
  40b883:	fldenv [edi]
  40b885:	ror    DWORD PTR [esi-0x42],0xa5
  40b889:	mov    ecx,0x1eb3d7cf
  40b88e:	pop    esi
  40b88f:	outs   dx,BYTE PTR ds:[esi]
  40b890:	(bad)  [esi-0x7d173a2f]
  40b896:	jge    0x40b81a
  40b898:	les    esp,FWORD PTR [eax]
  40b89a:	xchg   edi,eax
  40b89b:	push   ebp
  40b89c:	mov    cl,BYTE PTR [edi-0x6cc4d23e]
  40b8a2:	push   ss
  40b8a3:	stos   BYTE PTR es:[edi],al
  40b8a4:	dec    eax
  40b8a5:	inc    esp
  40b8a6:	js     0x40b84b
  40b8a8:	xchg   edi,eax
  40b8a9:	inc    edi
  40b8aa:	pop    ecx
  40b8ab:	jo     0x40b8ca
  40b8ad:	cmp    BYTE PTR [ecx+esi*2],bl
  40b8b0:	xchg   edi,eax
  40b8b1:	pop    esi
  40b8b2:	mov    al,ds:0xdec11857
  40b8b7:	fisub  DWORD PTR [ebp+0x76]
  40b8ba:	lea    esi,[eax-0x45]
  40b8bd:	and    eax,0xed35e184
  40b8c2:	int3   
  40b8c3:	in     al,0xf7
  40b8c5:	out    dx,eax
  40b8c6:	lods   eax,DWORD PTR ds:[esi]
  40b8c7:	scas   al,BYTE PTR es:[edi]
  40b8c8:	mov    DWORD PTR [ebp-0xe],esi
  40b8cb:	xor    ebp,ecx
  40b8cd:	cmp    edx,DWORD PTR [eax+0x73ec8d67]
  40b8d3:	inc    ecx
  40b8d4:	xchg   ebp,eax
  40b8d5:	adc    esp,DWORD PTR [ebp+0x2ce8a0e]
  40b8db:	fisttp DWORD PTR [eax]
  40b8dd:	test   bh,bh
  40b8df:	ins    BYTE PTR es:[edi],dx
  40b8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e1:	mov    dl,0xd9
  40b8e3:	dec    eax
  40b8e4:	loopne 0x40b908
  40b8e6:	inc    edx
  40b8e7:	jne    0x40b94e
  40b8e9:	mov    edi,0x6705cce3
  40b8ee:	aad    0xbd
  40b8f0:	push   es
  40b8f1:	and    DWORD PTR [edi+0x24fafb70],0xffffffb6
  40b8f8:	sar    bh,cl
  40b8fa:	(bad)  
  40b8fb:	xor    eax,0x7a425404
  40b900:	jmp    0x12cad69b
  40b905:	inc    esi
  40b906:	out    dx,al
  40b907:	add    eax,0xd1e5ecf3
  40b90c:	sar    DWORD PTR [ebp-0x29],cl
  40b90f:	xchg   ecx,eax
  40b910:	fs xor bl,ch
  40b913:	inc    esp
  40b914:	pushf  
  40b915:	cld    
  40b916:	ja     0x40b932
  40b918:	rcr    DWORD PTR [edi+0x139b5078],0xad
  40b91f:	jno    0x40b968
  40b921:	sbb    edi,edx
  40b923:	into   
  40b924:	pop    ebp
  40b925:	xor    eax,0xb36d286f
  40b92a:	pop    ebp
  40b92b:	pop    ebx
  40b92c:	in     eax,0xfb
  40b92e:	icebp  
  40b92f:	add    esi,DWORD PTR [eax]
  40b931:	fcomp  QWORD PTR es:[eax]
  40b934:	adc    ax,cx
  40b937:	pop    ds
  40b938:	cdq    
  40b939:	dec    esi
  40b93a:	jg     0x40b94f
  40b93c:	retf   0x554a
  40b93f:	mov    esi,0xa0f53d86
  40b944:	or     BYTE PTR [ecx+0x5a15effb],0x98
  40b94b:	push   ecx
  40b94c:	add    ebx,edi
  40b94e:	stos   BYTE PTR es:[edi],al
  40b94f:	xor    al,0xc2
  40b951:	sub    ch,BYTE PTR [edx+0x3906c7b]
  40b957:	aad    0x8a
  40b959:	(bad)  
  40b95a:	adc    DWORD PTR [esi],esp
  40b95c:	or     BYTE PTR [esi+0x10af76bb],ah
  40b962:	mov    ds:0x97fa4b08,eax
  40b967:	test   eax,0x684e157f
  40b96c:	and    BYTE PTR fs:[esi-0x7d],dh
  40b970:	or     al,0xb2
  40b972:	and    al,dh
  40b974:	inc    edi
  40b975:	loop   0x40b982
  40b977:	push   0xaaa5befd
  40b97c:	inc    ecx
  40b97d:	pop    esp
  40b97e:	lds    eax,FWORD PTR [edx+0x6a]
  40b981:	fmul   st(3),st
  40b983:	into   
  40b984:	fisttp DWORD PTR [edi+edi*1-0x717fd534]
  40b98b:	xlat   BYTE PTR ds:[ebx]
  40b98c:	inc    ebp
  40b98d:	and    al,0xcc
  40b98f:	(bad)  
  40b991:	or     al,0x8d
  40b993:	cmp    al,0x2a
  40b995:	and    esi,edi
  40b997:	imul   eax,DWORD PTR [edi-0x24f034e4],0xfffffffd
  40b99e:	lods   al,BYTE PTR ds:[esi]
  40b99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a0:	add    esp,DWORD PTR [edi]
  40b9a2:	dec    esi
  40b9a3:	jg     0x40ba0c
  40b9a5:	push   esp
  40b9a6:	sti    
  40b9a7:	pop    ds
  40b9a8:	dec    ebp
  40b9a9:	dec    esi
  40b9aa:	or     BYTE PTR [edi+ecx*1-0x288dfba3],bl
  40b9b1:	push   es
  40b9b2:	int    0x25
  40b9b4:	sub    bl,bl
  40b9b6:	xor    al,0xa8
  40b9b8:	sbb    DWORD PTR [edx+esi*4],ebx
  40b9bb:	dec    ecx
  40b9bc:	bound  ecx,QWORD PTR gs:[ecx-0x7c]
  40b9c0:	xor    DWORD PTR [esi+0x5],ebp
  40b9c3:	pop    es
  40b9c4:	sahf   
  40b9c5:	ret    
  40b9c6:	mov    eax,ds:0x46118f13
  40b9cb:	iret   
  40b9cc:	adc    eax,0x6c00ed95
  40b9d1:	or     esp,ecx
  40b9d3:	test   al,0x44
  40b9d5:	xchg   edx,eax
  40b9d6:	addr16 push ds
  40b9d8:	pop    esp
  40b9d9:	jge    0x40b98c
  40b9db:	mov    ds:0x823120a0,eax
  40b9e0:	into   
  40b9e1:	xchg   ebx,eax
  40b9e2:	and    DWORD PTR [ecx],ecx
  40b9e4:	repz ja 0x40b9cb
  40b9e7:	loope  0x40b979
  40b9e9:	mov    bh,0x60
  40b9eb:	inc    eax
  40b9ec:	jg     0x40ba23
  40b9ee:	xchg   esp,eax
  40b9ef:	loop   0x40b9ce
  40b9f1:	sahf   
  40b9f2:	jmp    0x40b9ff
  40b9f4:	stos   BYTE PTR es:[edi],al
  40b9f5:	dec    eax
  40b9f6:	mov    ds:0x9dc076b9,eax
  40b9fb:	aas    
  40b9fc:	scas   al,BYTE PTR es:[edi]
  40b9fd:	jae    0x40ba0b
  40b9ff:	pop    esi
  40ba00:	jge    0x40b9a1
  40ba02:	jb     0x40b9a3
  40ba04:	stos   DWORD PTR es:[edi],eax
  40ba05:	cdq    
  40ba06:	or     al,0x84
  40ba08:	pusha  
  40ba09:	or     DWORD PTR [esp+ebp*2+0x6b],esi
  40ba0d:	or     eax,0xb3c4e592
  40ba12:	pop    edx
  40ba13:	add    ebx,esp
  40ba15:	sub    al,BYTE PTR [edx+0x5f]
  40ba18:	popf   
  40ba19:	add    bh,dh
  40ba1b:	sub    dl,dh
  40ba1d:	mov    ebp,0xc493ba42
  40ba22:	mov    ds:0xe5539201,eax
  40ba27:	inc    edi
  40ba28:	mov    al,0xab
  40ba2a:	jmp    0x4742db64
  40ba2f:	pusha  
  40ba30:	lods   eax,DWORD PTR ds:[esi]
  40ba31:	add    dh,al
  40ba33:	and    eax,0xf8be8281
  40ba38:	daa    
  40ba39:	sbb    ecx,DWORD PTR [edi+0x77]
  40ba3c:	xchg   ebx,eax
  40ba3d:	inc    esi
  40ba3e:	fmul   DWORD PTR [ecx*2-0x45f67afd]
  40ba45:	xchg   edi,eax
  40ba46:	ficom  WORD PTR [esi+0x5b]
  40ba49:	and    al,0x1
  40ba4b:	mov    ds:0x8d2f7e6a,al
  40ba50:	pusha  
  40ba51:	shl    BYTE PTR [ebp-0x23],1
  40ba54:	push   edi
  40ba55:	mov    ds:0x326b9b5c,eax
  40ba5a:	ss ja  0x40baad
  40ba5d:	push   edi
  40ba5e:	ja     0x40bad8
  40ba60:	dec    edi
  40ba61:	ds push ebx
  40ba63:	test   BYTE PTR [ecx],al
  40ba65:	call   0x3788634f
  40ba6a:	jle    0x40bac2
  40ba6c:	mov    esi,0x5169ae36
  40ba71:	sub    cl,BYTE PTR [esi-0x33]
  40ba74:	xor    esi,DWORD PTR [edi]
  40ba76:	retf   0x5f9f
  40ba79:	jno    0x40ba0c
  40ba7b:	and    esp,ebx
  40ba7d:	mov    WORD PTR [edx-0x2185fc9c],ss
  40ba83:	(bad)  
  40ba84:	in     al,dx
  40ba85:	cmp    cl,BYTE PTR [eax-0x2d]
  40ba88:	mov    ch,0xbb
  40ba8a:	std    
  40ba8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8c:	or     al,0x8e
  40ba8e:	jge    0x40ba2c
  40ba90:	rcl    dl,1
  40ba92:	jae    0x40baf6
  40ba94:	inc    ebx
  40ba95:	pop    esi
  40ba96:	std    
  40ba97:	sub    eax,0xc9fca294
  40ba9c:	in     eax,dx
  40ba9d:	mov    bl,0x18
  40ba9f:	xchg   edi,eax
  40baa0:	mov    eax,ds:0xac3cfda6
  40baa5:	jmp    0x40ba53
  40baa7:	adc    al,0xe8
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x4226f8
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42282c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	repz push eax
  40bb0f:	inc    esp
  40bb10:	(bad)  [esi-0x41]
  40bb13:	mov    esi,0xbec492be
  40bb18:	mov    esi,0x8ad0343e
  40bb1d:	mov    cl,0xf8
  40bb1f:	test   al,0x3c
  40bb21:	jbe    0x40baff
  40bb23:	or     BYTE PTR [esi+0x26],0xec
  40bb27:	loopne 0x40bab3
  40bb29:	dec    esi
  40bb2a:	inc    edx
  40bb2b:	xor    al,BYTE PTR [esi+0x29cc9ab8]
  40bb31:	(bad)  
  40bb32:	dec    ecx
  40bb33:	in     al,0x1c
  40bb35:	lock sar BYTE PTR [edx-0x3739928d],0xc9
  40bb3d:	jle    0x40bb8e
  40bb3f:	(bad)  
  40bb40:	outs   dx,DWORD PTR ds:[esi]
  40bb41:	fist   WORD PTR fs:[edx+0xa]
  40bb45:	fs inc esp
  40bb47:	out    0xa7,al
  40bb49:	adc    al,0x93
  40bb4b:	or     al,0xa9
  40bb4d:	retf   0xd4f4
  40bb50:	shr    BYTE PTR [edi+eax*8+0x62bd11],1
  40bb57:	mov    eax,0xffc73a5
  40bb5c:	(bad)  
  40bb5e:	cmc    
  40bb5f:	loopne 0x40bb65
  40bb61:	mov    cl,0xd3
  40bb63:	(bad)  
  40bb64:	sbb    DWORD PTR [edi-0x4f],edx
  40bb67:	sbb    ebp,DWORD PTR ss:[edx]
  40bb6a:	xchg   ebx,eax
  40bb6b:	mov    ebx,DWORD PTR [esi-0x2b20ebfb]
  40bb71:	popa   
  40bb72:	call   0x5bd5:0xb87419a4
  40bb79:	icebp  
  40bb7a:	jnp    0x40bb98
  40bb7c:	mov    eax,DWORD PTR [ecx+edi*8]
  40bb7f:	ror    dl,cl
  40bb81:	retf   
  40bb82:	pop    ds
  40bb83:	add    DWORD PTR [ecx+ebp*1],ebx
  40bb86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb87:	cmp    DWORD PTR [eax-0x5309989b],edx
  40bb8d:	gs imul ecx,edi,0x66
  40bb91:	push   0xffffff9a
  40bb93:	lods   eax,DWORD PTR ds:[esi]
  40bb94:	push   edi
  40bb95:	or     DWORD PTR [edi-0x48fcb11a],esi
  40bb9b:	imul   ecx,ebp,0xffffff91
  40bb9e:	mov    eax,0x77499b04
  40bba3:	mov    al,ds:0xefbb042c
  40bba8:	push   ebx
  40bba9:	cdq    
  40bbaa:	sub    al,0x45
  40bbac:	and    eax,0x2756d396
  40bbb1:	or     eax,0xc4fc8d88
  40bbb6:	jbe    0x40bb42
  40bbb8:	(bad)  
  40bbb9:	call   0xf705f599
  40bbbe:	sbb    cl,BYTE PTR ds:[edx-0x79]
  40bbc2:	pop    edx
  40bbc3:	xchg   DWORD PTR ds:0x54f0d7c,ebp
  40bbca:	push   ss
  40bbcb:	xchg   ebx,eax
  40bbcc:	sub    DWORD PTR es:[esp+eiz*2],ebp
  40bbd0:	mov    dl,0xca
  40bbd2:	xchg   edi,eax
  40bbd3:	xor    al,0x76
  40bbd5:	jg     0x40bbd3
  40bbd7:	scas   eax,DWORD PTR es:[edi]
  40bbd8:	sbb    ecx,eax
  40bbda:	fwait
  40bbdb:	loopne 0x40bc31
  40bbdd:	test   DWORD PTR [edi-0xc2151c9],0x8369d3bd
  40bbe7:	fsin   
  40bbe9:	test   al,0x82
  40bbeb:	mov    edx,esp
  40bbed:	cld    
  40bbee:	xor    ecx,DWORD PTR [eax+0x42]
  40bbf1:	cli    
  40bbf2:	lea    ebx,[edi-0x255f2fee]
  40bbf8:	cmp    DWORD PTR [ebx],ebx
  40bbfa:	icebp  
  40bbfb:	mov    ah,0x25
  40bbfd:	pushf  
  40bbfe:	call   0x7246d8fa
  40bc03:	xchg   ebp,eax
  40bc04:	ror    BYTE PTR [eax],cl
  40bc06:	xchg   ebx,eax
  40bc07:	shr    DWORD PTR [ebp+eax*1+0x398e1288],0xd3
  40bc0f:	xor    BYTE PTR [ebx],0x15
  40bc12:	push   cs
  40bc13:	or     DWORD PTR [eax+esi*8+0x4751d9e5],esi
  40bc1a:	mov    edx,0xa01f0a6c
  40bc1f:	xor    DWORD PTR [eax],ebx
  40bc21:	adc    DWORD PTR [esi],esp
  40bc23:	(bad)  
  40bc24:	fidiv  WORD PTR [ebx+0x787388a8]
  40bc2a:	aaa    
  40bc2b:	cmp    eax,0x174bde3c
  40bc30:	or     dh,0x8d
  40bc33:	mov    cl,0xbb
  40bc35:	jne    0x40bc88
  40bc37:	adc    edi,ecx
  40bc39:	jl     0x40bc1c
  40bc3b:	shl    BYTE PTR [edx-0x3],0x4
  40bc3f:	dec    edx
  40bc40:	mov    eax,0x14f4ccd6
  40bc45:	pusha  
  40bc46:	aas    
  40bc47:	dec    edi
  40bc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc49:	mov    ebp,0xa7a8332f
  40bc4e:	sub    al,0x1f
  40bc50:	jo     0x40bbdb
  40bc52:	push   ds
  40bc53:	imul   esp,DWORD PTR [edi],0x36
  40bc56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc57:	or     esp,DWORD PTR [eax+esi*8-0x4c]
  40bc5b:	adc    ebp,DWORD PTR [ebp+0x3e3d07de]
  40bc61:	cmp    BYTE PTR [ebp+0x39],bl
  40bc64:	into   
  40bc65:	hlt    
  40bc66:	adc    ah,BYTE PTR [ebp+0x444f184b]
  40bc6c:	xchg   BYTE PTR [eax-0x7e],dl
  40bc6f:	xchg   BYTE PTR [esi+eiz*4+0x54],ah
  40bc73:	add    BYTE PTR [ebp-0x51],cl
  40bc76:	lahf   
  40bc77:	adc    ch,BYTE PTR [ecx]
  40bc79:	or     DWORD PTR [eax],0x63c08cab
  40bc7f:	xlat   BYTE PTR ds:[ebx]
  40bc80:	mov    eax,0x231cc20a
  40bc85:	pop    ecx
  40bc86:	stos   BYTE PTR es:[edi],al
  40bc87:	popf   
  40bc88:	xchg   esp,eax
  40bc89:	mov    esp,0xbb7a2e6b
  40bc8e:	mov    BYTE PTR [ecx],dl
  40bc90:	jmp    0x40bc57
  40bc92:	mov    WORD PTR [ebx-0x2b103daa],fs
  40bc98:	and    ecx,DWORD PTR [esi-0x4c1662fe]
  40bc9e:	fs mov esp,0x2c66b6e5
  40bca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca5:	push   esp
  40bca6:	fsub   QWORD PTR ds:0x2fff1f86
  40bcac:	shr    bl,cl
  40bcae:	inc    ebx
  40bcaf:	aam    0xd9
  40bcb1:	add    edi,0xffffff9e
  40bcb4:	cs push edx
  40bcb6:	ins    BYTE PTR es:[edi],dx
  40bcb7:	sahf   
  40bcb8:	into   
  40bcb9:	or     BYTE PTR [ecx+edx*1+0x215f980f],cl
  40bcc0:	aaa    
  40bcc1:	pop    esi
  40bcc2:	les    esi,FWORD PTR [ebp+0x6d]
  40bcc5:	inc    edx
  40bcc6:	out    0x97,eax
  40bcc8:	jns    0x40bca0
  40bcca:	jnp    0x40bcd3
  40bccc:	cmc    
  40bccd:	ins    DWORD PTR es:[edi],dx
  40bcce:	add    al,0x0
  40bcd0:	es cld 
  40bcd2:	adc    eax,0x1f1f05d6
  40bcd7:	ret    0x7b61
  40bcda:	mov    esi,0x367c3b79
  40bcdf:	mov    ch,bh
  40bce1:	or     edx,DWORD PTR ds:0x9971add5
  40bce7:	cmc    
  40bce8:	jge    0x40bc86
  40bcea:	sub    eax,0x4f6dc425
  40bcef:	cmp    DWORD PTR [ecx+edx*1],edi
  40bcf2:	jle    0x40bcbb
  40bcf4:	push   ebx
  40bcf5:	dec    eax
  40bcf6:	push   ebx
  40bcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf8:	ss xchg esp,eax
  40bcfa:	stos   BYTE PTR es:[edi],al
  40bcfb:	fadd   DWORD PTR [ecx-0x6ea2b517]
  40bd01:	and    al,0x6e
  40bd03:	aas    
  40bd04:	popa   
  40bd05:	lods   al,BYTE PTR ds:[esi]
  40bd06:	data16 jo 0x40bc98
  40bd09:	loope  0x40bd0f
  40bd0b:	inc    ebp
  40bd0c:	pop    ds
  40bd0d:	cmp    bl,BYTE PTR [ebp-0x53d94190]
  40bd13:	fidivr WORD PTR [esi]
  40bd15:	dec    eax
  40bd16:	scas   eax,DWORD PTR es:[edi]
  40bd17:	pop    ecx
  40bd18:	pop    es
  40bd19:	std    
  40bd1a:	add    BYTE PTR [edi],al
  40bd1c:	sar    dh,0x44
  40bd1f:	in     al,dx
  40bd20:	test   dh,bh
  40bd22:	loope  0x40bd6b
  40bd24:	test   DWORD PTR [eax-0x61],ebp
  40bd27:	mov    ds:0xd5f3d97d,eax
  40bd2c:	loope  0x40bd61
  40bd2e:	(bad)  
  40bd2f:	in     eax,dx
  40bd30:	mov    cl,0x41
  40bd32:	hlt    
  40bd33:	and    edx,DWORD PTR [ecx]
  40bd35:	adc    eax,DWORD PTR [esi+0x78]
  40bd38:	sahf   
  40bd39:	push   ecx
  40bd3a:	add    BYTE PTR [edi+0x77],dl
  40bd3d:	jg     0x40bd1d
  40bd3f:	imul   DWORD PTR [esi+0x7e66dc5f]
  40bd45:	pop    edx
  40bd46:	push   cs
  40bd47:	pop    esp
  40bd48:	sbb    BYTE PTR ds:0x4542f119,0x82
  40bd4f:	pop    ecx
  40bd50:	xor    ebp,DWORD PTR [esi-0x585793dc]
  40bd56:	dec    esp
  40bd57:	jl     0x40bd0d
  40bd59:	mov    ds:0xd2cd7e01,eax
  40bd5e:	lods   eax,DWORD PTR ds:[esi]
  40bd5f:	sbb    eax,0x1c22ec4d
  40bd64:	mov    ebp,0x563f3f7c
  40bd69:	cmp    BYTE PTR [esi-0x9],0x6b
  40bd6d:	ja     0x40bd19
  40bd6f:	les    edx,FWORD PTR [edx]
  40bd71:	adc    BYTE PTR [edx],al
  40bd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd74:	pop    es
  40bd75:	(bad)  
  40bd76:	loope  0x40bd2c
  40bd78:	aad    0xbd
  40bd7a:	xchg   esi,eax
  40bd7b:	mov    DWORD PTR ds:0xe380a325,edi
  40bd81:	adc    BYTE PTR [ecx],dl
  40bd83:	ret    
  40bd84:	inc    DWORD PTR [ebp-0x7218f57e]
  40bd8a:	mov    al,ds:0x44ced069
  40bd8f:	xchg   ebx,eax
  40bd90:	add    esi,DWORD PTR [ebx-0x4a]
  40bd93:	or     dl,BYTE PTR [edi+0x2cbd2e9]
  40bd99:	xor    cl,BYTE PTR [edx]
  40bd9b:	lods   al,BYTE PTR ds:[esi]
  40bd9c:	xor    ebp,ebx
  40bd9e:	dec    ebp
  40bd9f:	in     al,dx
  40bda0:	xor    DWORD PTR [ecx-0xe15a3a0],0x44
  40bda7:	add    al,0xfd
  40bda9:	cmp    al,0xc4
  40bdab:	test   eax,0x9257f529
  40bdb0:	pop    esp
  40bdb1:	dec    edx
  40bdb2:	xchg   ebp,eax
  40bdb3:	mov    ch,0x89
  40bdb5:	push   eax
  40bdb6:	adc    al,0xba
  40bdb8:	stc    
  40bdb9:	sti    
  40bdba:	je     0x40bddb
  40bdbc:	sahf   
  40bdbd:	loopne 0x40be33
  40bdbf:	inc    esi
  40bdc0:	imul   eax,DWORD PTR [edx],0x5ecfa2d7
  40bdc6:	arpl   WORD PTR [ebx+ecx*8+0x53],si
  40bdca:	mov    al,ds:0x1574c131
  40bdcf:	jo     0x40bddb
  40bdd1:	sbb    al,bh
  40bdd3:	add    DWORD PTR [edx],eax
  40bdd5:	mov    dh,0xa3
  40bdd7:	pmulhuw mm4,QWORD PTR [ebp+0x177f8a86]
  40bdde:	xchg   esp,eax
  40bddf:	cli    
  40bde0:	fstp   QWORD PTR [edi-0x13c7584a]
  40bde6:	test   eax,0xe79291ec
  40bdeb:	hlt    
  40bdec:	je     0x40bd8c
  40bdee:	push   cs
  40bdef:	xor    eax,0x8f44fa87
  40bdf4:	mov    edx,DWORD PTR [eax-0x6dd16689]
  40bdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfb:	jne    0x40be0e
  40bdfd:	mov    esp,0xe1f7a905
  40be02:	pop    eax
  40be03:	lahf   
  40be04:	add    dl,dh
  40be06:	rcl    bh,1
  40be08:	xchg   esi,eax
  40be09:	sbb    DWORD PTR [ecx+0x4b],ebp
  40be0c:	call   0x9da02fde
  40be11:	lods   al,BYTE PTR ds:[esi]
  40be12:	loop   0x40be5b
  40be14:	sub    dh,dh
  40be16:	pop    ebx
  40be17:	sbb    eax,0x3263f0eb
  40be1c:	ret    0x6776
  40be1f:	add    al,BYTE PTR [edi-0x5d97e40d]
  40be25:	mov    ch,BYTE PTR [ebx]
  40be27:	clc    
  40be28:	cmp    ecx,DWORD PTR [ebx]
  40be2a:	adc    al,0xa1
  40be2c:	jmp    0x40be49
  40be2e:	das    
  40be2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be30:	add    al,0x51
  40be32:	inc    edi
  40be33:	mov    esi,0xc4239267
  40be38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be39:	jno    0x40be8b
  40be3b:	inc    ebx
  40be3c:	or     al,0xf6
  40be3e:	int    0x6a
  40be40:	mov    cx,0xea8c
  40be44:	(bad)  
  40be45:	(bad)  
  40be46:	xor    esp,DWORD PTR [ebp+0x1cf73015]
  40be4c:	push   edx
  40be4d:	pop    eax
  40be4e:	mov    al,0xbe
  40be50:	xchg   ecx,eax
  40be51:	sub    al,0xae
  40be53:	dec    edx
  40be54:	loopne 0x40beb9
  40be56:	fwait
  40be57:	xchg   edx,eax
  40be58:	sahf   
  40be59:	call   0x73adf2d6
  40be5e:	aam    0xd4
  40be60:	adc    eax,0xc747fa7c
  40be65:	je     0x40be30
  40be67:	call   0x3c92:0xe3faf40e
  40be6e:	(bad)  
  40be6f:	js     0x40bee6
  40be71:	adc    edi,esi
  40be73:	push   0xe75d759d
  40be78:	mov    ch,0x52
  40be7a:	xchg   cl,bl
  40be7c:	cmp    DWORD PTR [ecx-0x50],eax
  40be7f:	div    BYTE PTR [ebx+eiz*4-0x2a]
  40be83:	icebp  
  40be84:	pop    edx
  40be85:	cs cs jmp 0x40be3f
  40be89:	xchg   ecx,eax
  40be8a:	sbb    bh,BYTE PTR [ebx]
  40be8c:	add    eax,0xd7de1245
  40be91:	add    al,0x63
  40be93:	(bad)  
  40be94:	fcomp  QWORD PTR ds:0x99bf5c07
  40be9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be9b:	dec    ecx
  40be9c:	idiv   BYTE PTR [ebx-0x1ee42183]
  40bea2:	(bad)  
  40bea3:	bound  eax,QWORD PTR [esi]
  40bea5:	mov    ecx,0xd5e84976
  40beaa:	dec    ebx
  40beab:	in     eax,0xaf
  40bead:	push   DWORD PTR [edi]
  40beaf:	adc    al,0x18
  40beb1:	pop    ds
  40beb2:	es shl cl,cl
  40beb5:	cmp    DWORD PTR [eax+0x4],ebx
  40beb8:	imul   ecx,ebp,0xbb774eca
  40bebe:	(bad)  
  40bebf:	mov    esi,0x28954a11
  40bec4:	push   eax
  40bec5:	inc    edx
  40bec6:	pop    esi
  40bec7:	imul   edi,edx,0xdbd3b8d6
  40becd:	pop    esi
  40bece:	test   DWORD PTR [edi],ebx
  40bed0:	mov    ds:0x86bf4ddf,eax
  40bed5:	dec    eax
  40bed6:	daa    
  40bed7:	daa    
  40bed8:	and    eax,0x98e5918e
  40bedd:	xchg   DWORD PTR [ecx+0xc],edx
  40bee0:	retf   
  40bee1:	clc    
  40bee2:	(bad)  
  40bee3:	leave  
  40bee4:	push   esi
  40bee5:	dec    edi
  40bee6:	in     al,0xfc
  40bee8:	fs mov ebx,0xa4fd39c3
  40beee:	jnp    0x40bf08
  40bef0:	push   esp
  40bef1:	dec    ebp
  40bef2:	icebp  
  40bef3:	jno    0x40bf1d
  40bef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef6:	inc    edx
  40bef7:	in     al,0x5d
  40bef9:	sub    BYTE PTR [eax],0xd2
  40befc:	call   DWORD PTR ds:0x417fd277
  40bf02:	push   eax
  40bf03:	sbb    esi,DWORD PTR [ecx+0x74]
  40bf06:	push   cs
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi-0x18bfe670],1
  40bf66:	jecxz  0x40bfaa
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x945ff4e6
  40bf73:	addr16 popf 
  40bf75:	and    cl,ah
  40bf77:	mov    al,BYTE PTR [edi+edx*8+0x65b27fec]
  40bf7e:	xor    bl,BYTE PTR [ecx+0x1479cbc8]
  40bf84:	(bad)  
  40bf85:	shl    BYTE PTR ds:0x586cbfa7,1
  40bf8b:	into   
  40bf8c:	test   al,0xac
  40bf8e:	pusha  
  40bf8f:	push   ebp
  40bf90:	das    
  40bf91:	and    BYTE PTR [ebx-0x53],ah
  40bf94:	gs sub al,0x63
  40bf97:	mov    al,0xd6
  40bf99:	call   0xaf0e:0x4104d653
  40bfa0:	adc    DWORD PTR [edx],ebp
  40bfa2:	or     dl,dl
  40bfa4:	mov    eax,0xcbbf3c99
  40bfa9:	mov    ah,0xc6
  40bfab:	dec    esp
  40bfac:	sub    edx,eax
  40bfae:	arpl   WORD PTR [edi+0x24702e18],sp
  40bfb4:	push   0xdd06c172
  40bfb9:	mov    WORD PTR [esi+0x60f4f50c],?
  40bfbf:	cmp    al,ch
  40bfc1:	lock lock sbb DWORD PTR [eax+0x7e6c83a4],eax
  40bfc9:	and    BYTE PTR [ebp-0x139f32de],dh
  40bfcf:	int    0x71
  40bfd1:	loop   0x40bfc8
  40bfd3:	repz xor al,0x1e
  40bfd6:	addr16 mov edi,0x66acddb3
  40bfdc:	repnz clc 
  40bfde:	sub    BYTE PTR [eax-0x72c9fb3f],bl
  40bfe4:	push   esi
  40bfe5:	jl     0x40bf83
  40bfe7:	lock xor ebp,DWORD PTR [edx]
  40bfea:	mov    ebx,0xf583272c
  40bfef:	pop    esp
  40bff0:	mov    al,ds:0xf7c00b49
  40bff5:	pop    edx
  40bff6:	add    al,0x96
  40bff8:	xchg   ecx,eax
  40bff9:	ror    ch,cl
  40bffb:	pop    ss
  40bffc:	inc    ecx
  40bffd:	ss cmp al,0xf1
  40c000:	retf   
  40c001:	hlt    
  40c002:	imul   BYTE PTR [edx+0x73]
  40c005:	cdq    
  40c006:	sbb    dh,0xd5
  40c009:	fmul   DWORD PTR [esi+0x354a2bf2]
  40c00f:	rol    DWORD PTR [eax-0x5c],0x7e
  40c013:	stos   DWORD PTR es:[edi],eax
  40c014:	fstp   TBYTE PTR [eax]
  40c016:	cli    
  40c017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c018:	sbb    DWORD PTR [edi+ebp*2+0x29],0xd18b9207
  40c020:	cmp    bh,dh
  40c022:	scas   eax,DWORD PTR es:[edi]
  40c023:	and    BYTE PTR [esi+0x1b],al
  40c026:	xor    dl,BYTE PTR [esi+0x5448fecf]
  40c02c:	lea    ebp,[esi-0x25881bf1]
  40c032:	popa   
  40c033:	add    BYTE PTR [edx+0x4b8b4a3b],0xa1
  40c03a:	retf   
  40c03b:	pop    ebx
  40c03c:	movlps QWORD PTR [edi+edi*8],xmm0
  40c040:	pop    eax
  40c041:	inc    ebp
  40c042:	inc    eax
  40c043:	gs sbb al,0x3f
  40c046:	jae    0x40c099
  40c048:	dec    edx
  40c049:	push   esi
  40c04a:	in     al,dx
  40c04b:	outs   dx,DWORD PTR ds:[esi]
  40c04c:	push   ds
  40c04d:	mov    eax,ds:0x9161842e
  40c052:	inc    eax
  40c053:	fcomp  QWORD PTR [eax]
  40c055:	fcmovb st,st(6)
  40c057:	dec    ecx
  40c058:	out    0x1e,al
  40c05a:	sbb    eax,0xdf4791fa
  40c05f:	sbb    ch,BYTE PTR [eax+0x27]
  40c062:	mov    al,BYTE PTR [esi]
  40c064:	sti    
  40c065:	idiv   BYTE PTR [edx-0x932f255]
  40c06b:	jnp    0x40c062
  40c06d:	xchg   esp,eax
  40c06e:	mov    bh,BYTE PTR [esi+0x33]
  40c071:	sub    edi,edx
  40c073:	pushf  
  40c074:	sub    esi,DWORD PTR [ebx+0xe]
  40c077:	stos   DWORD PTR es:[edi],eax
  40c078:	inc    edi
  40c079:	outs   dx,BYTE PTR ds:[esi]
  40c07a:	aad    0x32
  40c07c:	cmp    dh,BYTE PTR [ebx+ecx*1-0x26]
  40c080:	pop    ebp
  40c081:	xchg   edi,eax
  40c082:	jne    0x40c046
  40c084:	adc    eax,0x7f96e516
  40c089:	test   DWORD PTR [ebx],esp
  40c08b:	mov    dl,0x3c
  40c08d:	std    
  40c08e:	sub    eax,0xa35d3300
  40c093:	fnsave [edx]
  40c095:	adc    edx,DWORD PTR [ebx]
  40c097:	pop    ss
  40c098:	lds    esi,FWORD PTR [ebx-0x29]
  40c09b:	dec    eax
  40c09c:	idiv   ecx
  40c09e:	lods   al,BYTE PTR ds:[esi]
  40c09f:	(bad)  [bp+0x40]
  40c0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a4:	xor    eax,DWORD PTR [ecx+0x192ec21]
  40c0aa:	cwde   
  40c0ab:	jnp    0x40c09f
  40c0ad:	inc    ebp
  40c0ae:	sti    
  40c0af:	je     0x40c0b4
  40c0b1:	cmp    al,0xc8
  40c0b3:	adc    DWORD PTR [ebx+0x2],0xf3ebfb5
  40c0ba:	cli    
  40c0bb:	lods   al,BYTE PTR ds:[esi]
  40c0bc:	mov    edi,0x5cedb013
  40c0c1:	imul   esp,DWORD PTR [edx-0x70],0x64403560
  40c0c8:	or     al,0xe3
  40c0ca:	ins    BYTE PTR es:[edi],dx
  40c0cb:	out    dx,eax
  40c0cc:	in     eax,0x32
  40c0ce:	or     ebp,ebp
  40c0d0:	bnd ret 
  40c0d2:	mov    ?,WORD PTR [eax-0x30a6cd19]
  40c0d8:	int3   
  40c0d9:	fdivr  QWORD PTR [eax+0x3d6f9e5c]
  40c0df:	stc    
  40c0e0:	add    al,0xbf
  40c0e2:	xchg   BYTE PTR [ebp+0x23],bl
  40c0e5:	(bad)  
  40c0e6:	test   al,0x3a
  40c0e8:	in     al,dx
  40c0e9:	scas   al,BYTE PTR es:[edi]
  40c0ea:	(bad)  
  40c0eb:	jmp    0xe6a97756
  40c0f0:	jnp    0x40c150
  40c0f2:	mov    dl,0xbb
  40c0f4:	sub    edi,DWORD PTR [ecx+0x4cf9024a]
  40c0fa:	test   eax,0x87911a7
  40c0ff:	shl    BYTE PTR [eax-0x1e],0xd1
  40c103:	sbb    al,0xbd
  40c105:	sbb    BYTE PTR [ebp-0xfcfb56a],0x15
  40c10c:	in     eax,0xee
  40c10e:	mov    ebp,0xc826fb0d
  40c113:	xchg   esp,eax
  40c114:	jecxz  0x40c15d
  40c116:	retf   0xde9e
  40c119:	mov    al,0x77
  40c11b:	adc    esp,ebp
  40c11d:	xor    al,0x8d
  40c11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c120:	fbld   TBYTE PTR fs:[edi-0x2f]
  40c124:	std    
  40c125:	js     0x40c19e
  40c127:	call   0xbb6a:0xecae0f3c
  40c12e:	data16 out 0xf8,al
  40c131:	loope  0x40c0db
  40c133:	lods   al,BYTE PTR ds:[esi]
  40c134:	push   ebp
  40c135:	inc    edi
  40c136:	xor    al,0xb5
  40c138:	(bad)  
  40c139:	fadd   DWORD PTR [ebx-0x72b92b81]
  40c13f:	mov    eax,0x5ef7fa5a
  40c144:	fld    QWORD PTR [ebp-0x5c]
  40c147:	scas   al,BYTE PTR es:[edi]
  40c148:	sub    edi,DWORD PTR [edx]
  40c14a:	inc    edx
  40c14b:	mov    al,ds:0xe3818f0e
  40c150:	sbb    eax,0x5b9ff0c2
  40c155:	icebp  
  40c156:	aas    
  40c157:	int    0x41
  40c159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15a:	int3   
  40c15b:	mov    esi,0xe1c207bd
  40c160:	add    DWORD PTR [ebx],0x83e1f1a7
  40c166:	jnp    0x40c179
  40c168:	inc    esi
  40c169:	js     0x40c129
  40c16b:	shl    BYTE PTR [ebx-0x2b],0x24
  40c16f:	pop    eax
  40c170:	imul   esi,DWORD PTR [edi+eiz*2-0x70],0x6f221262
  40c178:	adc    eax,0xbcd25acf
  40c17d:	outs   dx,BYTE PTR ds:[esi]
  40c17e:	sahf   
  40c17f:	out    0x41,al
  40c181:	rcl    BYTE PTR [ebp-0x5f],1
  40c184:	repnz enter 0xdc5f,0xf9
  40c189:	inc    ebp
  40c18a:	cmp    BYTE PTR [edi-0x1275cd32],cl
  40c190:	add    BYTE PTR [edi+edx*8-0x37],ch
  40c194:	mov    eax,0xdbedd2d0
  40c199:	dec    edi
  40c19a:	stos   BYTE PTR es:[edi],al
  40c19b:	mov    dl,0x8b
  40c19d:	push   eax
  40c19e:	(bad)  
  40c19f:	lods   al,BYTE PTR ds:[esi]
  40c1a0:	mov    ds:0x2a37dd5d,al
  40c1a5:	out    dx,al
  40c1a6:	jo     0x40c1a4
  40c1a8:	adc    BYTE PTR [ebx-0x12d71be7],al
  40c1ae:	scas   eax,DWORD PTR es:[edi]
  40c1af:	out    0x86,eax
  40c1b1:	mov    ds:0x7150ab39,eax
  40c1b6:	sbb    ebx,DWORD PTR [esi+0x68]
  40c1b9:	fcmovne st,st(3)
  40c1bb:	in     al,dx
  40c1bc:	das    
  40c1bd:	pop    esp
  40c1be:	ins    DWORD PTR es:[edi],dx
  40c1bf:	add    al,0x47
  40c1c1:	dec    edx
  40c1c2:	sti    
  40c1c3:	shl    DWORD PTR [eax+ecx*2],cl
  40c1c6:	stc    
  40c1c7:	dec    esp
  40c1c8:	ins    DWORD PTR es:[edi],dx
  40c1c9:	sub    ebp,ecx
  40c1cb:	jmp    0x40c174
  40c1cd:	push   ds
  40c1ce:	scas   al,BYTE PTR es:[edi]
  40c1cf:	sar    DWORD PTR [eax],0x9e
  40c1d2:	adc    al,0x52
  40c1d4:	mov    dh,0xd2
  40c1d6:	lods   eax,DWORD PTR ds:[esi]
  40c1d7:	lea    eax,[ecx-0xa]
  40c1da:	stc    
  40c1db:	xlat   BYTE PTR ds:[ebx]
  40c1dc:	test   eax,0xaf160d2
  40c1e1:	jp     0x40c230
  40c1e3:	xor    DWORD PTR [edi],edi
  40c1e5:	sbb    eax,0xa0cd3b13
  40c1ea:	lds    edx,FWORD PTR [ebp-0x6457e2c9]
  40c1f0:	stc    
  40c1f1:	jmp    0x50952ccd
  40c1f6:	(bad)  
  40c1f7:	xor    BYTE PTR gs:[ecx],al
  40c1fa:	pop    esp
  40c1fb:	jge    0x40c1ce
  40c1fd:	repnz and DWORD PTR [eax+0x5f10dafb],esp
  40c204:	leave  
  40c205:	jne    0x40c228
  40c207:	sub    al,0xb4
  40c209:	jecxz  0x40c1d3
  40c20b:	add    eax,0x18b9fb08
  40c210:	leave  
  40c211:	sar    DWORD PTR ds:0x17255470,cl
  40c217:	cmc    
  40c218:	(bad)  
  40c219:	ffree  st(2)
  40c21b:	mov    bh,BYTE PTR [esp+ebp*1-0x177e597e]
  40c222:	fist   DWORD PTR [ebp+0x533e792d]
  40c228:	mov    eax,ds:0xc95f8145
  40c22d:	cld    
  40c22e:	pushf  
  40c22f:	mov    ds:0x280b49b1,al
  40c234:	sbb    BYTE PTR [eax-0x68ffbda0],cl
  40c23a:	call   0x781f:0x2ba70c9c
  40c241:	xor    eax,0xbf32955f
  40c246:	mov    cl,0x1a
  40c248:	popf   
  40c249:	mov    dh,0x94
  40c24b:	out    dx,al
  40c24c:	sub    ecx,ebp
  40c24e:	bound  eax,QWORD PTR [eax+0x7d4e92cc]
  40c254:	pop    ebp
  40c255:	jl     0x40c1f2
  40c257:	inc    ecx
  40c258:	xchg   ebx,eax
  40c259:	pop    esi
  40c25a:	clc    
  40c25b:	pop    ss
  40c25c:	dec    ecx
  40c25d:	mov    edx,DWORD PTR [edi+0xbc3f39b]
  40c263:	(bad)  
  40c264:	xchg   esp,eax
  40c265:	popa   
  40c266:	(bad)  
  40c267:	lods   eax,DWORD PTR ds:[esi]
  40c268:	push   0x59682fc4
  40c26d:	loopne 0x40c28b
  40c26f:	push   cs
  40c270:	jne    0x40c27f
  40c272:	xlat   BYTE PTR ds:[ebx]
  40c273:	or     ah,BYTE PTR [esi+eax*2-0x56]
  40c277:	mov    ecx,0xb7281eba
  40c27c:	fiadd  DWORD PTR [edi]
  40c27e:	outs   dx,BYTE PTR ds:[esi]
  40c27f:	and    DWORD PTR cs:[edx+0xf349d6a],ebx
  40c286:	xlat   BYTE PTR ds:[ebx]
  40c287:	loop   0x40c282
  40c289:	mov    al,ds:0x9ec2d5e5
  40c28e:	jle    0x40c266
  40c290:	mov    esi,0xf3a2856b
  40c295:	fisub  DWORD PTR [edi]
  40c297:	cli    
  40c298:	cld    
  40c299:	pusha  
  40c29a:	std    
  40c29b:	(bad)  
  40c29c:	adc    al,0xff
  40c29e:	mov    cl,0xa9
  40c2a0:	mov    ?,WORD PTR [edi]
  40c2a2:	cld    
  40c2a3:	pusha  
  40c2a4:	out    0x34,al
  40c2a6:	push   cs
  40c2a7:	(bad)  
  40c2a8:	pop    ebx
  40c2a9:	push   esi
  40c2aa:	fistp  WORD PTR [ebp-0x7e]
  40c2ad:	(bad)  
  40c2ae:	ins    BYTE PTR es:[edi],dx
  40c2af:	pop    es
  40c2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b1:	cmp    edx,edi
  40c2b3:	jl     0x40c289
  40c2b5:	mov    eax,DWORD PTR [edi-0x55dda8b7]
  40c2bb:	and    ebx,DWORD PTR [edi-0x1b023564]
  40c2c1:	jne    0x40c2f3
  40c2c3:	mov    BYTE PTR [eax],cl
  40c2c5:	popf   
  40c2c6:	and    ebx,edx
  40c2c8:	mov    edx,0xfe600d4e
  40c2cd:	mov    esi,0xc91d7311
  40c2d2:	daa    
  40c2d3:	xchg   esp,eax
  40c2d4:	(bad)  
  40c2d5:	cmp    ebx,ebp
  40c2d7:	dec    ecx
  40c2d8:	ja     0x40c265
  40c2da:	mov    esp,DWORD PTR [ecx+0x75]
  40c2dd:	jge    0x40c31f
  40c2df:	in     eax,0xf5
  40c2e1:	push   es
  40c2e2:	lods   eax,DWORD PTR ds:[esi]
  40c2e3:	out    0xb0,al
  40c2e5:	icebp  
  40c2e6:	inc    esi
  40c2e7:	pop    edx
  40c2e8:	dec    edi
  40c2e9:	add    al,dh
  40c2eb:	nop
  40c2ec:	cmp    DWORD PTR gs:[ecx],0x2c547417
  40c2f3:	sub    cl,BYTE PTR [edx-0x1977692a]
  40c2f9:	mov    DWORD PTR [ecx],ebx
  40c2fb:	das    
  40c2fc:	pop    es
  40c2fd:	mov    ds:0xed8e820f,eax
  40c302:	clc    
  40c303:	mov    dl,BYTE PTR ds:0xa5e3885e
  40c309:	inc    esi
  40c30a:	dec    eax
  40c30b:	push   edi
  40c30c:	mov    ebx,0x6a55092
  40c311:	aad    0x80
  40c313:	cmp    BYTE PTR [edx+0x604f40e4],dh
  40c319:	cmp    eax,0x4555d46b
  40c31e:	test   eax,0xa21118b3
  40c323:	hlt    
  40c324:	outs   dx,DWORD PTR ds:[esi]
  40c325:	cmp    dh,dl
  40c327:	sbb    BYTE PTR [esi-0x45],bl
  40c32a:	mov    ah,0x8c
  40c32c:	int3   
  40c32d:	imul   esp,esi,0xffffffb9
  40c330:	dec    esp
  40c331:	and    eax,0x5839a9e
  40c336:	inc    ebp
  40c337:	pop    ds
  40c338:	data16 jle 0x40c33c
  40c33b:	jg     0x40c2e9
  40c33d:	nop
  40c33e:	pop    eax
  40c33f:	xchg   edi,eax
  40c340:	(bad)  
  40c341:	xlat   BYTE PTR ds:[ebx]
  40c342:	es out 0x8f,eax
  40c345:	test   al,0xdf
  40c347:	in     eax,dx
  40c348:	add    BYTE PTR [edi-0x3412c8d8],0xb0
  40c34f:	sub    al,0x9
  40c351:	xchg   ebp,eax
  40c352:	daa    
  40c353:	dec    ebx
  40c354:	dec    eax
  40c355:	data16 fiadd WORD PTR [esi+0x66]
  40c359:	cmp    al,0x15
  40c35b:	or     eax,0x1848d4c
  40c360:	adc    al,0x9a
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0x5626b9cf],ebp
  40c476:	rcl    DWORD PTR [esi],1
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xd9255965
  40c483:	mov    al,ds:0xab9b96c8
  40c488:	ds push ds
  40c48a:	mov    al,0xde
  40c48c:	mul    DWORD PTR [esi+edi*4]
  40c48f:	das    
  40c490:	and    DWORD PTR [edx],esi
  40c492:	mov    eax,0xb30165c6
  40c497:	add    eax,DWORD PTR [ebx]
  40c499:	mov    eax,0xa1ff97e9
  40c49e:	out    dx,al
  40c49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a0:	es and eax,0x23ec09d6
  40c4a6:	cs mov ebx,0x489eb8e6
  40c4ac:	std    
  40c4ad:	or     eax,0x6f9a78e5
  40c4b2:	lods   al,BYTE PTR ds:[esi]
  40c4b3:	adc    BYTE PTR [edx+0x4],0x40
  40c4b7:	daa    
  40c4b8:	push   ebp
  40c4b9:	mov    ebp,0xbe4f7ae2
  40c4be:	push   ecx
  40c4bf:	add    BYTE PTR [edi],bh
  40c4c1:	sbb    eax,0xf975216a
  40c4c6:	jmp    0xa083:0x8d4152bf
  40c4cd:	stos   DWORD PTR es:[edi],eax
  40c4ce:	in     al,0x4e
  40c4d0:	or     eax,0xa52c448
  40c4d5:	pop    ebx
  40c4d6:	in     al,0x36
  40c4d8:	inc    ebx
  40c4d9:	fs data16 or al,0xa8
  40c4dd:	xor    al,0x95
  40c4df:	xchg   esp,eax
  40c4e0:	in     eax,dx
  40c4e1:	int3   
  40c4e2:	out    0xc2,al
  40c4e4:	scas   eax,DWORD PTR es:[edi]
  40c4e5:	call   0xe96b:0xa8358a11
  40c4ec:	add    eax,DWORD PTR [edx]
  40c4ee:	dec    edi
  40c4ef:	add    BYTE PTR [ebx],0xfa
  40c4f2:	das    
  40c4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4f4:	aas    
  40c4f5:	sub    eax,0x23a003eb
  40c4fa:	rol    BYTE PTR [eax+0x540fb1a7],1
  40c500:	addr16 mov bl,0x27
  40c503:	outs   dx,DWORD PTR ds:[esi]
  40c504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c505:	sbb    DWORD PTR [ecx+0xa014673],esp
  40c50b:	mov    ebp,0x815376cc
  40c510:	cvttps2pi mm0,QWORD PTR [edi-0x28]
  40c514:	aas    
  40c515:	out    0xfa,al
  40c517:	std    
  40c518:	xor    ah,ah
  40c51a:	dec    ebp
  40c51b:	outs   dx,DWORD PTR ds:[esi]
  40c51c:	(bad)  
  40c51d:	xor    al,0xc3
  40c51f:	stc    
  40c520:	imul   ecx,DWORD PTR [edx+ebx*4+0x60],0x73d1599a
  40c528:	mov    al,ds:0xba086bd1
  40c52d:	loope  0x40c4ca
  40c52f:	div    BYTE PTR [ebx+0x78592c52]
  40c535:	mov    DWORD PTR [esi-0x58a15c64],eax
  40c53b:	pop    edx
  40c53c:	inc    ebx
  40c53d:	adc    al,0xf4
  40c53f:	and    esi,esi
  40c541:	adc    al,0xbe
  40c543:	mov    al,ds:0x93a5ac20
  40c548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c549:	(bad)  
  40c54a:	rcr    dl,1
  40c54c:	ret    
  40c54d:	inc    esp
  40c54e:	sbb    eax,0x8e815dba
  40c553:	cmp    DWORD PTR ds:0x31afa45a,0xffffff92
  40c55a:	sub    BYTE PTR [edx-0x20168d34],dl
  40c560:	mov    al,ds:0x6cc54ab2
  40c565:	push   0x8fb3f529
  40c56a:	jge    0x40c587
  40c56c:	jnp    0x40c582
  40c56e:	mov    ds:0xea6f0db,al
  40c573:	outs   dx,DWORD PTR ds:[esi]
  40c574:	jnp    0x40c534
  40c576:	or     esi,DWORD PTR [ebp-0x4c]
  40c579:	gs cdq 
  40c57b:	(bad)  
  40c57c:	pcmpeqb mm0,QWORD PTR [edx+0x18]
  40c580:	stos   BYTE PTR es:[edi],al
  40c581:	inc    esi
  40c582:	mov    esp,0x775c63a3
  40c587:	jp     0x40c5c9
  40c589:	les    edi,FWORD PTR [esp+edi*1]
  40c58c:	inc    ebp
  40c58d:	cmp    al,0x6f
  40c58f:	pop    es
  40c590:	mov    ?,WORD PTR [esi-0x80]
  40c593:	fcmovnbe st,st(6)
  40c595:	sbb    al,0x24
  40c597:	dec    esi
  40c598:	ret    
  40c599:	cmp    esp,DWORD PTR [edx-0x6f9b5fb6]
  40c59f:	mov    WORD PTR [esi+0xd],?
  40c5a2:	test   edx,edx
  40c5a4:	sbb    al,BYTE PTR [ebp-0x68]
  40c5a7:	mov    ch,0x3a
  40c5a9:	sub    al,0xa0
  40c5ab:	and    ecx,eax
  40c5ad:	mov    ebp,0x59930278
  40c5b2:	scas   eax,DWORD PTR es:[edi]
  40c5b3:	sub    eax,0xe4e16abc
  40c5b8:	pop    es
  40c5b9:	inc    ebp
  40c5ba:	ficomp WORD PTR [edx-0x58]
  40c5bd:	xchg   ebp,eax
  40c5be:	test   al,0x6e
  40c5c0:	shl    cl,cl
  40c5c2:	fld    DWORD PTR [ebp+0x34]
  40c5c5:	xchg   ecx,eax
  40c5c6:	cmp    ah,BYTE PTR [eax-0x7f]
  40c5c9:	int3   
  40c5ca:	test   al,0x61
  40c5cc:	les    eax,FWORD PTR [esi]
  40c5ce:	dec    edi
  40c5cf:	xor    BYTE PTR [edi-0x32b61fb0],0x4a
  40c5d6:	adc    eax,0xb532165d
  40c5db:	mov    ah,0xc9
  40c5dd:	push   esp
  40c5de:	or     eax,0x8f6f3432
  40c5e3:	sahf   
  40c5e4:	stos   DWORD PTR es:[edi],eax
  40c5e5:	es mov bl,0x93
  40c5e8:	cmp    DWORD PTR [ecx],ecx
  40c5ea:	sahf   
  40c5eb:	pushf  
  40c5ec:	add    edx,DWORD PTR [ebx]
  40c5ee:	mov    DWORD PTR [esi+0xa],edx
  40c5f1:	inc    edi
  40c5f2:	or     eax,0x8c9848c4
  40c5f7:	popf   
  40c5f8:	sbb    BYTE PTR [edi-0x35],dh
  40c5fb:	sbb    DWORD PTR [edx+0x4b],ebp
  40c5fe:	daa    
  40c5ff:	ror    DWORD PTR [ebx],1
  40c601:	fst    QWORD PTR [esp+ecx*8+0x71]
  40c605:	aam    0x35
  40c607:	sahf   
  40c608:	popf   
  40c609:	test   eax,0x1feb807a
  40c60e:	test   eax,0x2350d670
  40c613:	loopne 0x40c67b
  40c615:	pop    ebp
  40c616:	or     BYTE PTR [edx],bh
  40c618:	pop    es
  40c619:	or     ecx,DWORD PTR [ecx-0x5507d692]
  40c61f:	pop    ds
  40c620:	mov    edx,0xbd9c086a
  40c625:	mov    cl,0x9b
  40c627:	sub    DWORD PTR [eax-0x5c],eax
  40c62a:	mov    edi,0x6dc141d9
  40c62f:	or     ch,BYTE PTR [ebx+0x58]
  40c632:	xchg   ebx,eax
  40c633:	fmulp  st(4),st
  40c635:	sub    DWORD PTR [eax+0x77],esi
  40c638:	jbe    0x40c6ab
  40c63a:	and    edi,ebp
  40c63c:	adc    DWORD PTR [ebp-0xb5782ee],edx
  40c642:	sbb    edi,DWORD PTR [edx+edx*4+0x6de8ce5f]
  40c649:	test   eax,0xd6a351c2
  40c64e:	add    eax,0x3721642a
  40c653:	ret    0xdc8
  40c656:	jg     0x40c63a
  40c658:	jne    0x40c635
  40c65a:	or     DWORD PTR [edx+0x27],ebx
  40c65d:	push   ebx
  40c65e:	int    0x37
  40c660:	psrlw  mm5,QWORD PTR [ebx+0x3d]
  40c664:	fld    st(1)
  40c666:	(bad)  
  40c667:	out    dx,eax
  40c668:	shl    BYTE PTR [edx+edx*4-0x6593e318],1
  40c66f:	xchg   edx,eax
  40c670:	jecxz  0x40c624
  40c672:	inc    esi
  40c673:	retf   
  40c674:	retf   0x90e5
  40c677:	dec    edx
  40c678:	ret    0x4c3b
  40c67b:	aam    0xfe
  40c67d:	mov    ebx,0x692270f7
  40c682:	push   esi
  40c683:	stos   BYTE PTR es:[edi],al
  40c684:	add    al,0xc9
  40c686:	add    eax,DWORD PTR [ecx-0xf8943a7]
  40c68c:	repz js 0x40c646
  40c68f:	jle    0x40c6de
  40c691:	jne    0x40c703
  40c693:	inc    eax
  40c694:	jl     0x40c703
  40c696:	mov    BYTE PTR [eax],ch
  40c698:	addr16 clc 
  40c69a:	stos   BYTE PTR es:[edi],al
  40c69b:	mov    ah,BYTE PTR [edx-0x10]
  40c69e:	hlt    
  40c69f:	das    
  40c6a0:	push   ecx
  40c6a2:	mov    al,al
  40c6a4:	je     0x40c63f
  40c6a6:	mov    cl,0x2
  40c6a8:	inc    esp
  40c6a9:	jg     0x40c648
  40c6ab:	sub    ebx,DWORD PTR [edx]
  40c6ad:	gs shl cl,cl
  40c6b0:	push   0xffffff90
  40c6b2:	dec    ebp
  40c6b3:	out    0x58,al
  40c6b5:	adc    cl,ah
  40c6b7:	lods   al,BYTE PTR ds:[esi]
  40c6b8:	enter  0xb45e,0x68
  40c6bc:	push   cs
  40c6bd:	push   edx
  40c6be:	out    0xe6,eax
  40c6c0:	je     0x40c698
  40c6c2:	jmp    0x8014:0xaf7fb91f
  40c6c9:	dec    ebp
  40c6ca:	and    edx,edx
  40c6cc:	dec    eax
  40c6cd:	ds nop
  40c6cf:	fcomp  DWORD PTR [edi]
  40c6d1:	outs   dx,DWORD PTR ds:[esi]
  40c6d2:	xor    BYTE PTR [edi+0x6c],ch
  40c6d5:	xor    DWORD PTR [ebx-0x2],ecx
  40c6d8:	out    dx,eax
  40c6d9:	sbb    BYTE PTR [ebp-0x3],0x3d
  40c6dd:	lea    ebx,[eax-0x4d]
  40c6e0:	xchg   ebx,eax
  40c6e1:	jle    0x40c71b
  40c6e3:	mov    bh,0xd8
  40c6e5:	push   ebp
  40c6e6:	xor    al,0x5
  40c6e8:	mov    edx,0xb7cf66a5
  40c6ed:	scas   al,BYTE PTR es:[edi]
  40c6ee:	in     al,dx
  40c6ef:	push   edi
  40c6f0:	in     eax,0x7b
  40c6f2:	pop    es
  40c6f3:	jge    0x40c6e7
  40c6f5:	jne    0x40c6fe
  40c6f7:	mov    esi,0xaba02356
  40c6fc:	dec    ebp
  40c6fd:	je     0x40c6b1
  40c6ff:	fimul  DWORD PTR [esi-0x279f21f7]
  40c705:	sar    DWORD PTR [edx+eax*4-0x3d],0x36
  40c70a:	not    al
  40c70c:	cmc    
  40c70d:	ds mov ebp,0xb395ae19
  40c713:	fcomp  DWORD PTR [edx]
  40c715:	mov    eax,ds:0x1469ed99
  40c71a:	(bad)  
  40c71b:	push   esp
  40c71c:	add    esi,edx
  40c71e:	inc    esp
  40c71f:	inc    esp
  40c720:	add    BYTE PTR [ecx+0x1a],bl
  40c723:	js     0x40c726
  40c725:	loopne 0x40c73a
  40c727:	or     eax,DWORD PTR [ecx]
  40c729:	sti    
  40c72a:	push   esi
  40c72b:	or     bh,BYTE PTR [ecx]
  40c72d:	pop    esi
  40c72e:	mov    ch,0x8b
  40c730:	dec    edx
  40c731:	jecxz  0x40c722
  40c733:	cs out dx,al
  40c735:	jecxz  0x40c727
  40c737:	jmp    DWORD PTR [ebp+0x5e4da72a]
  40c73d:	or     DWORD PTR [edx-0x3bbd3b0c],edx
  40c743:	sub    esi,ebx
  40c745:	cmp    BYTE PTR [edx-0x64],ch
  40c748:	or     al,0xa1
  40c74a:	rcr    DWORD PTR [edi+0x665c1c82],cl
  40c750:	mov    ebp,ds
  40c752:	rcl    DWORD PTR [edx-0x7b807471],0x1a
  40c759:	aad    0xc4
  40c75b:	mov    eax,ds:0x754deb3f
  40c760:	cmp    edx,DWORD PTR [ebx+ebp*1+0x10]
  40c764:	xchg   ecx,eax
  40c765:	ds jle 0x40c75d
  40c768:	mov    al,0xac
  40c76a:	gs std 
  40c76c:	lds    ebp,FWORD PTR [edi+esi*4]
  40c76f:	jmp    0x40c751
  40c771:	xor    cl,dl
  40c773:	jp     0x40c72c
  40c775:	ja     0x40c7a3
  40c777:	sub    BYTE PTR [eax+0xb],ah
  40c77a:	out    dx,eax
  40c77b:	mov    esi,0x63e92d87
  40c780:	es mov ebp,0xf776834e
  40c786:	test   BYTE PTR [eax-0x6c479d41],al
  40c78c:	dec    eax
  40c78d:	ins    BYTE PTR es:[edi],dx
  40c78e:	call   0x1155:0x8fe4724d
  40c795:	jmp    0x7a13:0xfd762614
  40c79c:	adc    edi,DWORD PTR [eax+0x3125820d]
  40c7a2:	sbb    DWORD PTR [edx],edx
  40c7a4:	(bad)  
  40c7a5:	adc    esp,ebp
  40c7a7:	das    
  40c7a8:	loope  0x40c7a6
  40c7aa:	out    dx,eax
  40c7ab:	jbe    0x40c797
  40c7ad:	cwde   
  40c7ae:	dec    edi
  40c7af:	cmc    
  40c7b0:	enter  0xc998,0x5b
  40c7b4:	xor    al,0x18
  40c7b6:	xor    ah,BYTE PTR [ecx-0x45]
  40c7b9:	cwde   
  40c7ba:	or     bh,dl
  40c7bc:	aam    0xad
  40c7be:	js     0x40c78b
  40c7c0:	jno    0x40c808
  40c7c2:	ret    
  40c7c3:	or     DWORD PTR [edi-0x70],ecx
  40c7c6:	test   DWORD PTR [esi-0x61],ebx
  40c7c9:	pusha  
  40c7ca:	add    ebp,DWORD PTR [edi-0x412d31ce]
  40c7d0:	mov    BYTE PTR ds:0xa9e216bc,al
  40c7d6:	repz hlt 
  40c7d8:	std    
  40c7d9:	and    al,0xc
  40c7db:	imul   esi,DWORD PTR [ecx-0x250797e9],0x2b
  40c7e2:	inc    esp
  40c7e3:	mov    bl,0x66
  40c7e5:	mov    ds:0xa17abf9c,al
  40c7ea:	out    0xd5,eax
  40c7ec:	add    ch,dh
  40c7ee:	pop    ds
  40c7ef:	pop    ebp
  40c7f0:	arpl   WORD PTR ds:[ebx+0x3e52d1ee],sp
  40c7f7:	fmul   QWORD PTR [esi]
  40c7f9:	js     0x40c795
  40c7fb:	je     0x40c836
  40c7fd:	in     eax,0xf3
  40c7ff:	pmaxub mm3,QWORD PTR [esi-0x18a2688c]
  40c806:	mov    ebp,0x4a282d62
  40c80b:	inc    ebp
  40c80c:	push   esp
  40c80d:	fiadd  WORD PTR [ebx+0x5ed7a0f6]
  40c813:	js     0x40c7b0
  40c815:	sbb    BYTE PTR [esi-0x1d98532c],ch
  40c81b:	js     0x40c867
  40c81d:	cmp    al,0xb
  40c81f:	add    ebx,DWORD PTR [edi]
  40c821:	mov    eax,0x77d1b3bc
  40c826:	out    dx,eax
  40c827:	fstp   QWORD PTR [ecx]
  40c829:	shl    DWORD PTR [eax-0x47],0x5d
  40c82d:	push   esi
  40c82e:	jecxz  0x40c7c7
  40c830:	adc    al,0x10
  40c832:	hlt    
  40c833:	es fwait
  40c835:	icebp  
  40c836:	push   cs
  40c837:	enter  0x5a65,0x3
  40c83b:	shl    DWORD PTR [edi],cl
  40c83d:	add    DWORD PTR [esi-0x42],esi
  40c840:	pop    ss
  40c841:	jmp    0x40c7cb
  40c843:	jmp    0x40c878
  40c845:	test   DWORD PTR [edx+eax*4+0x6a],0x1086ce9e
  40c84d:	not    DWORD PTR [ebx-0xa]
  40c850:	and    DWORD PTR ds:0xb561e336,0x46
  40c857:	scas   al,BYTE PTR es:[edi]
  40c858:	mov    bl,0x37
  40c85a:	mul    BYTE PTR [ebx+0x63]
  40c85d:	fld    TBYTE PTR [eax-0x30]
  40c860:	cmp    dl,dl
  40c862:	push   ds
  40c863:	xchg   edi,eax
  40c864:	dec    ecx
  40c865:	lods   al,BYTE PTR ds:[esi]
  40c866:	sahf   
  40c867:	sbb    ecx,DWORD PTR [ebx-0x4b1a3771]
  40c86d:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x7106e3ac
  40c891:	aad    0xe3
  40c893:	jmp    0x92ff876f
  40c898:	les    edi,FWORD PTR [esi+0x2ba835be]
  40c89e:	xchg   esp,eax
  40c89f:	xchg   ebp,eax
  40c8a0:	sbb    eax,0xfef8a2a
  40c8a5:	pop    es
  40c8a6:	xchg   esi,eax
  40c8a7:	call   0x28d:0xcfa83c0e
  40c8ae:	loope  0x40c88b
  40c8b0:	dec    edx
  40c8b1:	retf   0x3643
  40c8b4:	mov    esi,0xa0144bd0
  40c8b9:	jl     0x40c8b8
  40c8bb:	sahf   
  40c8bc:	jb     0x40c864
  40c8be:	gs inc ebx
  40c8c0:	add    al,0x27
  40c8c2:	test   eax,0x9b2c78dd
  40c8c7:	pop    DWORD PTR [edx]
  40c8c9:	scas   al,BYTE PTR es:[edi]
  40c8ca:	stos   DWORD PTR es:[edi],eax
  40c8cb:	out    0x19,al
  40c8cd:	scas   al,BYTE PTR es:[edi]
  40c8ce:	jb     0x40c909
  40c8d0:	shr    BYTE PTR [edi+0x2dfe254],cl
  40c8d6:	mov    eax,ds:0xa7f480b4
  40c8db:	mov    ds:0x70e0afcf,al
  40c8e1:	jb     0x40c8c5
  40c8e3:	cmp    eax,ebx
  40c8e5:	es push ecx
  40c8e7:	test   eax,0xa35cb7c1
  40c8ed:	imul   eax,DWORD PTR [ecx],0xb50cd7ba
  40c8f3:	dec    ebx
  40c8f4:	add    dh,al
  40c8f6:	mov    dh,0x87
  40c8f8:	(bad)  
  40c8f9:	push   esi
  40c8fa:	rcr    BYTE PTR [ebp-0x79],1
  40c8fd:	sub    DWORD PTR ds:0x5f6f62a9,edx
  40c903:	fdivr  DWORD PTR [ecx+eax*1]
  40c906:	daa    
  40c907:	in     eax,0xbe
  40c909:	out    dx,al
  40c90a:	inc    eax
  40c90b:	fisttp WORD PTR [ebx]
  40c90d:	cs jle 0x40c89e
  40c910:	and    DWORD PTR [ecx+0x42],0xffffffb3
  40c914:	jbe    0x40c987
  40c916:	xor    DWORD PTR [ebx+eax*4],ecx
  40c919:	out    0x21,eax
  40c91b:	fidiv  WORD PTR [edi-0x5f]
  40c91e:	add    DWORD PTR [ebx+ebx*1-0x5e099592],edx
  40c925:	repz clc 
  40c927:	xchg   edx,eax
  40c928:	pop    eax
  40c929:	push   ss
  40c92a:	gs mov ecx,0x23b20b26
  40c930:	sar    ebp,1
  40c932:	and    cl,BYTE PTR [edx+eax*2-0x46ab81dc]
  40c939:	adc    esp,DWORD PTR [ecx]
  40c93b:	scas   al,BYTE PTR es:[edi]
  40c93c:	xchg   ch,al
  40c93e:	cmp    ch,dh
  40c940:	or     al,0x77
  40c942:	lds    eax,FWORD PTR [ebp+0x36a8f91f]
  40c948:	mov    dl,0xa8
  40c94a:	jg     0x40c999
  40c94c:	xor    esp,DWORD PTR [ebx-0x40eb1d9d]
  40c952:	dec    ebp
  40c953:	repnz test BYTE PTR [eax],0xf1
  40c957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c958:	in     eax,dx
  40c959:	sub    cl,BYTE PTR [ebx]
  40c95b:	inc    eax
  40c95c:	js     0x40c95a
  40c95e:	test   BYTE PTR [ecx+0x21],cl
  40c961:	icebp  
  40c962:	arpl   WORD PTR [edx+ecx*4-0x4b],si
  40c966:	cwde   
  40c967:	pop    esi
  40c968:	add    BYTE PTR [edx-0x426f1e33],ch
  40c96e:	in     eax,0xa5
  40c970:	test   eax,0xb7e72ada
  40c975:	pop    esi
  40c976:	sub    al,0x77
  40c978:	sbb    BYTE PTR fs:[ebx+0x31],dl
  40c97c:	scas   al,BYTE PTR es:[edi]
  40c97d:	test   ecx,eax
  40c97f:	icebp  
  40c980:	pop    ss
  40c981:	sbb    BYTE PTR [edi],dh
  40c983:	mov    ch,0xb3
  40c985:	inc    ecx
  40c986:	inc    edx
  40c987:	lahf   
  40c988:	jl     0x40c91f
  40c98a:	push   ebp
  40c98b:	adc    BYTE PTR ds:0x108480ff,0x76
  40c992:	and    esi,DWORD PTR [eax]
  40c994:	xor    ebp,DWORD PTR [eax]
  40c996:	push   esp
  40c997:	add    BYTE PTR [eax+0x12],ah
  40c99a:	call   0x8b976b14
  40c99f:	and    cl,cl
  40c9a1:	inc    ecx
  40c9a2:	sbb    DWORD PTR [eax-0x6],0xb0f39517
  40c9a9:	sbb    esp,ebp
  40c9ab:	and    BYTE PTR [eax],0xf7
  40c9ae:	mov    al,ds:0x829dfdf1
  40c9b3:	cmp    cl,ah
  40c9b5:	adc    edx,ebp
  40c9b7:	enter  0x3cf4,0xca
  40c9bb:	gs dec ecx
  40c9bd:	inc    esi
  40c9be:	add    al,0x3d
  40c9c0:	and    DWORD PTR ds:0xa69e45af,eax
  40c9c6:	sahf   
  40c9c7:	or     sp,cx
  40c9ca:	xlat   BYTE PTR ds:[ebx]
  40c9cb:	dec    ebp
  40c9cc:	into   
  40c9cd:	inc    edx
  40c9ce:	mov    cl,bh
  40c9d0:	pop    eax
  40c9d1:	mov    bh,0x6c
  40c9d3:	cmp    al,0xba
  40c9d5:	xor    al,BYTE PTR [ecx]
  40c9d7:	ret    
  40c9d8:	sbb    bl,BYTE PTR ds:0x5610387d
  40c9de:	mov    esp,0x5dd15bbc
  40c9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e4:	test   al,0x6a
  40c9e6:	jnp    0x40ca66
  40c9e8:	jb     0x40ca47
  40c9ea:	or     eax,0x60a87118
  40c9ef:	pusha  
  40c9f0:	ret    
  40c9f1:	adc    eax,0x240dec15
  40c9f6:	adc    al,0xac
  40c9f8:	rcr    DWORD PTR [edi],1
  40c9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9fb:	adc    eax,ebx
  40c9fd:	xchg   DWORD PTR [eax],esi
  40c9ff:	xor    al,0x3c
  40ca01:	mov    ah,0xfa
  40ca03:	cmp    al,BYTE PTR [ecx]
  40ca05:	popa   
  40ca06:	data16 and al,0xed
  40ca09:	loop   0x40ca2d
  40ca0b:	dec    ecx
  40ca0c:	pusha  
  40ca0d:	jp     0x40c9a6
  40ca0f:	in     al,dx
  40ca10:	mov    ds:0x392a9cfe,eax
  40ca15:	out    0xd7,al
  40ca17:	rcl    BYTE PTR [esi-0x8],1
  40ca1a:	jns    0x40ca84
  40ca1c:	js     0x40c9ee
  40ca1e:	sti    
  40ca1f:	fcmovbe st,st(4)
  40ca21:	shl    BYTE PTR [edx-0x268a2b02],1
  40ca27:	push   ecx
  40ca28:	fstp   DWORD PTR [ebx+0x3e2a8d93]
  40ca2e:	jae    0x40c9b2
  40ca30:	add    al,0x4f
  40ca32:	test   eax,0xf8a88882
  40ca37:	and    bh,dh
  40ca39:	stos   BYTE PTR es:[edi],al
  40ca3a:	mov    edi,ebp
  40ca3c:	repnz loopne 0x40c9ee
  40ca3f:	idiv   BYTE PTR [ebp+0x33]
  40ca42:	pop    esi
  40ca43:	or     al,0x5b
  40ca45:	inc    ebx
  40ca46:	xlat   BYTE PTR ds:[ebx]
  40ca47:	nop
  40ca48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca49:	add    DWORD PTR [esi+0x46],edi
  40ca4c:	xchg   BYTE PTR [ecx+0x5f],al
  40ca4f:	jns    0x40ca00
  40ca51:	add    DWORD PTR [eax],0x5763c6ef
  40ca57:	dec    edx
  40ca58:	jle    0x40ca1c
  40ca5a:	shr    al,1
  40ca5c:	and    BYTE PTR [ebp+edx*8+0x43],al
  40ca60:	push   esi
  40ca61:	jae    0x40cad3
  40ca63:	cwde   
  40ca64:	push   0x4
  40ca66:	js     0x40ca53
  40ca68:	cmp    DWORD PTR [ebx],esi
  40ca6a:	jg     0x40ca50
  40ca6c:	stc    
  40ca6d:	xchg   ebp,eax
  40ca6e:	into   
  40ca6f:	and    eax,0x49ade96a
  40ca74:	inc    edi
  40ca75:	and    bl,BYTE PTR [ecx+0x462d831]
  40ca7b:	stos   DWORD PTR es:[edi],eax
  40ca7c:	mov    ebx,0x83a0a9c2
  40ca81:	mov    esi,DWORD PTR [eax]
  40ca83:	xchg   edi,eax
  40ca84:	stc    
  40ca85:	mov    eax,DWORD PTR [edi]
  40ca87:	shl    BYTE PTR [ebx-0x42],1
  40ca8a:	pop    ds
  40ca8b:	mov    es,WORD PTR [eax-0x1e367d04]
  40ca91:	div    ebx
  40ca93:	je     0x40ca2f
  40ca95:	push   edx
  40ca96:	sti    
  40ca97:	mov    ch,BYTE PTR [ecx-0x5d341f0d]
  40ca9d:	inc    eax
  40ca9e:	popf   
  40ca9f:	les    eax,FWORD PTR [ecx-0x14a3e356]
  40caa5:	test   eax,0x2918d2d3
  40caaa:	lock mov cl,0x24
  40caad:	enter  0x6da2,0x24
  40cab1:	mov    bl,0xfa
  40cab3:	mov    WORD PTR ds:0xd06553cc,ss
  40cab9:	add    al,0x1e
  40cabb:	mov    WORD PTR [ebp+0x24],ds
  40cabe:	inc    ecx
  40cabf:	mov    cl,0x80
  40cac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac2:	outs   dx,BYTE PTR gs:[esi]
  40cac4:	popa   
  40cac5:	mov    ebx,0xfd1331
  40caca:	daa    
  40cacb:	outs   dx,DWORD PTR ds:[esi]
  40cacc:	mov    al,ds:0xf91a880d
  40cad1:	in     al,0x90
  40cad3:	or     eax,0xedff2624
  40cad8:	icebp  
  40cad9:	sub    al,0xb0
  40cadb:	loopne 0x40cb16
  40cadd:	pop    edi
  40cade:	xor    al,0x19
  40cae0:	sub    dh,0xca
  40cae3:	jnp    0x40cab1
  40cae5:	dec    eax
  40cae6:	dec    edx
  40cae7:	fiadd  DWORD PTR [eax]
  40cae9:	sar    BYTE PTR [edi],cl
  40caeb:	mov    al,0x64
  40caed:	and    bl,BYTE PTR [esi-0x22]
  40caf0:	fisub  DWORD PTR [edx+0xf]
  40caf3:	pop    ss
  40caf4:	loopne 0x40ca90
  40caf6:	adc    DWORD PTR [esi+0x31],0xdcd8dc96
  40cafd:	ins    DWORD PTR es:[edi],dx
  40cafe:	pop    edi
  40caff:	and    al,0x66
  40cb01:	cmp    ah,BYTE PTR [ebx-0x109d4341]
  40cb07:	jmp    0xbb2d0316
  40cb0c:	gs add cl,al
  40cb0f:	push   esp
  40cb10:	loope  0x40ca9e
  40cb12:	rol    DWORD PTR ds:0x2770c1ca,cl
  40cb18:	sbb    eax,0xb144a767
  40cb1d:	cwde   
  40cb1e:	call   0x9b23371a
  40cb23:	xchg   edi,eax
  40cb24:	mov    edx,0xdc22c840
  40cb29:	loop   0x40cab4
  40cb2b:	or     ch,BYTE PTR [ecx+edx*1-0x42]
  40cb2f:	add    edx,edi
  40cb31:	add    ecx,DWORD PTR [eax+0x29]
  40cb34:	mov    ebx,0xfde00a
  40cb39:	fild   WORD PTR [edx-0x7c0aadb3]
  40cb3f:	shr    al,1
  40cb41:	or     ch,bh
  40cb43:	repnz mov ds:0xd6085790,al
  40cb49:	push   ebx
  40cb4a:	dec    edi
  40cb4b:	push   ds
  40cb4c:	aad    0xb9
  40cb4e:	outs   dx,DWORD PTR ds:[esi]
  40cb4f:	sbb    al,bl
  40cb51:	add    dh,BYTE PTR [ebx+0x7]
  40cb54:	mov    ecx,ebp
  40cb56:	retf   
  40cb57:	daa    
  40cb58:	ret    
  40cb59:	jp     0x40cb18
  40cb5b:	and    ecx,edx
  40cb5d:	inc    edi
  40cb5e:	jb     0x40cb1f
  40cb60:	mov    bh,0xf
  40cb62:	shr    BYTE PTR [ebx+0x726afa07],1
  40cb68:	(bad)  [edi+edi*2]
  40cb6b:	ret    
  40cb6c:	and    BYTE PTR [eax],bl
  40cb6e:	lock or ah,BYTE PTR [edx-0x29f0e744]
  40cb75:	jmp    0x40cb3b
  40cb77:	xchg   esp,eax
  40cb78:	xor    eax,0xe84a93bd
  40cb7d:	cld    
  40cb7e:	push   ss
  40cb7f:	xchg   esi,eax
  40cb80:	scas   eax,DWORD PTR es:[edi]
  40cb81:	fisttp QWORD PTR [esi]
  40cb83:	and    BYTE PTR [eax+0x4b],bh
  40cb86:	pop    ss
  40cb87:	adc    bl,BYTE PTR [ebx-0x321a358c]
  40cb8d:	push   ds
  40cb8e:	push   esi
  40cb8f:	cs cmp eax,0xd5f6d4ff
  40cb95:	or     DWORD PTR [edi+ebx*2-0x7f],eax
  40cb99:	add    ch,ch
  40cb9b:	ss dec ebx
  40cb9d:	(bad)  
  40cb9e:	adc    BYTE PTR [ecx+0xef051f7],bh
  40cba4:	lock hlt 
  40cba6:	popf   
  40cba7:	inc    esp
  40cba8:	data16 shl al,0xe1
  40cbac:	iret   
  40cbad:	lahf   
  40cbae:	daa    
  40cbaf:	int3   
  40cbb0:	push   ss
  40cbb1:	lahf   
  40cbb2:	xlat   BYTE PTR ds:[ebx]
  40cbb3:	push   esi
  40cbb4:	pop    ebp
  40cbb5:	and    ebp,esp
  40cbb7:	rcr    BYTE PTR [esi+0x5d61c432],0xa4
  40cbbe:	cwde   
  40cbbf:	enter  0xdcb0,0xb0
  40cbc3:	addr16 gs cli 
  40cbc6:	pushf  
  40cbc7:	mov    ds:0x503f02c8,al
  40cbcc:	push   eax
  40cbcd:	and    DWORD PTR [edi-0xf],esp
  40cbd0:	adc    BYTE PTR [esi-0x3e],0x4d
  40cbd4:	scas   al,BYTE PTR es:[edi]
  40cbd5:	push   es
  40cbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbd7:	sub    eax,0x8c7ab93c
  40cbdc:	mov    bh,0x86
  40cbde:	icebp  
  40cbdf:	fcomp  DWORD PTR [ebx-0x3b73916a]
  40cbe5:	pop    es
  40cbe6:	xchg   ebx,eax
  40cbe7:	cmp    DWORD PTR [ecx+0x65],eax
  40cbea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbeb:	jo     0x40cb9b
  40cbed:	ret    
  40cbee:	ror    ebp,1
  40cbf0:	add    ah,BYTE PTR [esi-0x239884c]
  40cbf6:	fwait
  40cbf7:	mov    ds:0x1977ccf1,al
  40cbfc:	enter  0x9c26,0x88
  40cc00:	ret    
  40cc01:	mov    dl,0x93
  40cc03:	dec    edx
  40cc04:	xchg   ebx,eax
  40cc05:	dec    esp
  40cc06:	fsubrp st(2),st
  40cc08:	sub    BYTE PTR [ebx-0x3c],cl
  40cc0b:	jb     0x40cc2d
  40cc0d:	jecxz  0x40cbc2
  40cc0f:	and    eax,DWORD PTR [eax]
  40cc11:	out    dx,al
  40cc12:	addr16 jnp 0x40cbb3
  40cc15:	mov    al,0xa9
  40cc17:	or     DWORD PTR [esi+0x2aa98ea1],ecx
  40cc1d:	mov    bh,0xb0
  40cc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc20:	aaa    
  40cc21:	mov    WORD PTR [esi+eax*2+0x4e],ds
  40cc25:	loope  0x40cbbc
  40cc27:	push   es
  40cc28:	ins    DWORD PTR es:[edi],dx
  40cc29:	add    ch,BYTE PTR [esi+0x2504411e]
  40cc2f:	xrelease xchg BYTE PTR [edx-0x746afc8c],al
  40cc36:	test   BYTE PTR [esi-0x20],dl
  40cc39:	xor    al,0x21
  40cc3b:	loope  0x40cbe4
  40cc3d:	stos   DWORD PTR es:[edi],eax
  40cc3e:	fld    DWORD PTR ds:0xab617c1d
  40cc44:	and    dl,BYTE PTR [eax+esi*1-0x4b]
  40cc48:	lods   al,BYTE PTR ds:[esi]
  40cc49:	adc    eax,0xc195864f
  40cc4e:	stos   DWORD PTR es:[edi],eax
  40cc4f:	push   ss
  40cc50:	pop    ss
  40cc51:	test   al,0x66
  40cc53:	cmp    dl,ch
  40cc55:	in     eax,dx
  40cc56:	xor    eax,0x3ac30a2a
  40cc5b:	das    
  40cc5c:	jge    0x40cc5a
  40cc5e:	(bad)  
  40cc5f:	pop    ecx
  40cc60:	clc    
  40cc61:	call   DWORD PTR [ecx+0x5d]
  40cc64:	push   edx
  40cc65:	jle    0x40ccc1
  40cc67:	push   ss
  40cc68:	adc    esi,ebx
  40cc6a:	fisttp WORD PTR [edx]
  40cc6c:	or     al,0xd4
  40cc6e:	inc    ebp
  40cc6f:	push   ds
  40cc70:	mov    esp,0x53c92134
  40cc75:	mov    ah,0x98
  40cc77:	cmp    BYTE PTR [ebx],0x2
  40cc7a:	and    eax,0x67063bf0
  40cc7f:	repnz out 0x71,eax
  40cc82:	push   0x22
  40cc84:	mov    ds:0xec9af80f,al
  40cc89:	mov    edx,DWORD PTR [ebp-0x1c]
  40cc8c:	mov    esi,DWORD PTR [ebp-0x28]
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40ccaa
  40ccd6:	mov    WORD PTR [eax-0x41204270],fs
  40ccdc:	mov    esi,0xbebec492
  40cce1:	mov    edi,0xdcc240c4
  40cce6:	div    DWORD PTR [ebx+edx*8-0x77]
  40ccea:	jle    0x40ccba
  40ccec:	mov    cl,0x8d
  40ccee:	push   eax
  40ccef:	xchg   ebx,eax
  40ccf0:	retf   0x6300
  40ccf3:	aad    0xc6
  40ccf5:	lds    esi,FWORD PTR [esi+0x403e5350]
  40ccfb:	retf   0x7579
  40ccfe:	in     al,0x7
  40cd00:	div    BYTE PTR ds:0x283b89b
  40cd06:	ins    BYTE PTR es:[edi],dx
  40cd07:	jl     0x40cd05
  40cd09:	(bad)  
  40cd0a:	xor    DWORD PTR [edi-0x73],edi
  40cd0d:	jge    0x40cc93
  40cd0f:	fwait
  40cd10:	iret   
  40cd11:	nop
  40cd12:	ss into 
  40cd14:	inc    esi
  40cd15:	mov    ds:0xc9673c5e,al
  40cd1a:	xchg   ebx,eax
  40cd1b:	js     0x40ccd1
  40cd1d:	inc    ebp
  40cd1e:	mov    es,WORD PTR [ecx-0x34]
  40cd21:	mov    al,0x3e
  40cd23:	pop    edi
  40cd24:	fild   QWORD PTR [ebx+0x7c]
  40cd27:	test   eax,0xf513de25
  40cd2c:	stos   DWORD PTR es:[edi],eax
  40cd2d:	inc    ebp
  40cd2e:	jl     0x40cd41
  40cd30:	mov    eax,ds:0x16c19380
  40cd35:	jecxz  0x40ccdb
  40cd37:	xchg   ebp,eax
  40cd38:	sub    ebp,DWORD PTR [eax+edx*4]
  40cd3b:	stos   DWORD PTR es:[edi],eax
  40cd3c:	call   0x9e437c66
  40cd41:	call   0x799c:0x30a666d9
  40cd48:	(bad)  
  40cd49:	cmp    cl,BYTE PTR [eax]
  40cd4b:	repnz push es
  40cd4d:	mov    ecx,0x7f1fad9e
  40cd52:	push   ecx
  40cd53:	popa   
  40cd54:	push   ds
  40cd55:	cmp    BYTE PTR [ebx+0x29],ch
  40cd58:	fstp   TBYTE PTR [esi-0x2]
  40cd5b:	daa    
  40cd5c:	mov    esp,0xc817d54b
  40cd61:	fdivr  st(4),st
  40cd63:	xchg   ebp,eax
  40cd64:	pop    ebx
  40cd65:	and    DWORD PTR [esi-0x5b],eax
  40cd68:	mov    esi,0x17cfc35
  40cd6d:	imul   esi,DWORD PTR [eax-0x53c0830c],0xffffffda
  40cd74:	inc    edi
  40cd75:	pop    esi
  40cd76:	pop    ss
  40cd77:	xchg   ebp,eax
  40cd78:	ret    
  40cd79:	into   
  40cd7a:	mov    dl,0x5a
  40cd7c:	outs   dx,BYTE PTR ds:[esi]
  40cd7d:	test   BYTE PTR [ecx-0x58],dl
  40cd80:	and    BYTE PTR [eax+0x2a],0x9e
  40cd84:	jge    0x40cd20
  40cd86:	sar    BYTE PTR [esi+esi*1-0x60],cl
  40cd8a:	frstor [esi+0x3fd8e925]
  40cd90:	and    al,0xd8
  40cd92:	shl    bh,0xaa
  40cd95:	mov    dl,0xea
  40cd97:	les    eax,FWORD PTR [ebp+0xd]
  40cd9a:	(bad)  
  40cd9b:	and    DWORD PTR [edx-0x3e],edx
  40cd9e:	(bad)  
  40cd9f:	lods   eax,DWORD PTR ds:[esi]
  40cda0:	das    
  40cda1:	dec    BYTE PTR [ebx+ebp*2+0x19ddd18b]
  40cda8:	les    ecx,FWORD PTR [eax+0x6e689e26]
  40cdae:	imul   ebp,DWORD PTR [esp+esi*8],0xc0f63b02
  40cdb5:	xor    ah,BYTE PTR [edx-0x204df5d5]
  40cdbb:	pop    eax
  40cdbc:	icebp  
  40cdbd:	lock clc 
  40cdbf:	fidivr WORD PTR [ecx+0x16]
  40cdc2:	and    dl,BYTE PTR [ecx+edx*4+0x536d55ba]
  40cdc9:	out    0x1b,al
  40cdcb:	out    0xbe,eax
  40cdcd:	push   0xf2b43326
  40cdd2:	jns    0x40cda8
  40cdd4:	not    eax
  40cdd6:	out    dx,al
  40cdd7:	dec    esi
  40cdd8:	inc    edi
  40cdd9:	xchg   ecx,eax
  40cdda:	mov    al,0x2f
  40cddc:	add    BYTE PTR [ebp-0x4],0x56
  40cde0:	neg    DWORD PTR [eax+0xb]
  40cde3:	ja     0x40ce3d
  40cde5:	fs jb  0x40ce09
  40cde8:	mov    esp,0x10468364
  40cded:	std    
  40cdee:	loopne 0x40ce1b
  40cdf0:	add    BYTE PTR [eax+0x341ce045],0x9
  40cdf7:	loope  0x40cd80
  40cdf9:	pop    ebx
  40cdfa:	add    ch,BYTE PTR [esi+0x1b546a89]
  40ce00:	imul   ecx,edx,0xffffffd0
  40ce03:	jp     0x40cda6
  40ce05:	aam    0x89
  40ce07:	push   ds
  40ce08:	adc    DWORD PTR [edi-0x3512713d],edi
  40ce0e:	xor    ebp,DWORD PTR [edx]
  40ce10:	sti    
  40ce11:	sub    ecx,DWORD PTR [eax+edi*8+0x31]
  40ce15:	sbb    BYTE PTR [edx],dh
  40ce17:	adc    cl,bl
  40ce19:	dec    ebp
  40ce1a:	cdq    
  40ce1b:	lods   eax,DWORD PTR ds:[esi]
  40ce1c:	push   ecx
  40ce1d:	push   esi
  40ce1e:	jl     0x40ce60
  40ce20:	jecxz  0x40cdde
  40ce22:	pusha  
  40ce23:	in     al,0xe7
  40ce25:	cmp    BYTE PTR [ebp+edi*1+0x7c],0x8c
  40ce2a:	inc    ebx
  40ce2b:	retf   0xd4b9
  40ce2e:	pop    eax
  40ce2f:	call   0xb9a6:0x6d1d9b61
  40ce36:	jnp    0x40cdf1
  40ce38:	inc    edi
  40ce39:	ret    
  40ce3a:	push   esp
  40ce3b:	push   esi
  40ce3c:	ror    cl,0xb1
  40ce3f:	mov    dh,0x9e
  40ce41:	inc    edx
  40ce42:	or     ebx,DWORD PTR [ebp+0x4a]
  40ce45:	movhps xmm3,QWORD PTR [eax+esi*8]
  40ce49:	jb     0x40ce4d
  40ce4b:	push   0x7662741b
  40ce50:	cmp    al,BYTE PTR [ecx+0x2b204140]
  40ce56:	fist   WORD PTR [ebp-0x48]
  40ce59:	pop    eax
  40ce5a:	push   ecx
  40ce5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5c:	enter  0xafb2,0xf0
  40ce60:	xchg   BYTE PTR [edx+0x44],cl
  40ce63:	push   edi
  40ce64:	stos   DWORD PTR es:[edi],eax
  40ce65:	popa   
  40ce66:	dec    edi
  40ce67:	mov    esi,0xcfd73559
  40ce6c:	lea    ebp,[ecx+0x5]
  40ce6f:	push   edx
  40ce70:	lahf   
  40ce71:	xchg   DWORD PTR [esi-0x47],ebp
  40ce74:	add    al,0x1a
  40ce76:	out    dx,al
  40ce77:	mov    esp,0x4a8655d6
  40ce7c:	dec    edx
  40ce7d:	out    dx,eax
  40ce7e:	fcomp  DWORD PTR [eax]
  40ce80:	jbe    0x40ceaf
  40ce82:	loope  0x40ced4
  40ce84:	mov    ah,0x68
  40ce86:	sbb    al,0x33
  40ce88:	fwait
  40ce89:	push   es
  40ce8a:	pop    esi
  40ce8b:	sti    
  40ce8c:	aad    0x84
  40ce8e:	adc    al,BYTE PTR [eax+0x567b6ba5]
  40ce94:	ret    0xb4dd
  40ce97:	std    
  40ce98:	popa   
  40ce99:	imul   esp,esp,0x7220b3f2
  40ce9f:	je     0x40cf1b
  40cea1:	aam    0x46
  40cea3:	ret    
  40cea4:	out    0x85,eax
  40cea6:	push   0x7a
  40cea8:	retf   0xf3d7
  40ceab:	out    0x3d,eax
  40cead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceae:	mov    ah,0x2
  40ceb0:	add    al,0xd1
  40ceb2:	fnstsw WORD PTR [ebx]
  40ceb4:	call   0xdd275a2f
  40ceb9:	mov    dl,0xea
  40cebb:	fdiv   QWORD PTR [ecx]
  40cebd:	and    ebx,DWORD PTR ss:[edi-0x6560f7fc]
  40cec4:	push   edx
  40cec5:	push   ebx
  40cec6:	sbb    DWORD PTR [edx+0xf],edi
  40cec9:	ret    
  40ceca:	mul    DWORD PTR [ecx]
  40cecc:	ins    DWORD PTR es:[edi],dx
  40cecd:	jno    0x40ce75
  40cecf:	cmc    
  40ced0:	icebp  
  40ced1:	into   
  40ced2:	and    ecx,DWORD PTR [ebp-0x1e]
  40ced5:	div    DWORD PTR [bp+0x7e]
  40ced9:	and    al,0x1e
  40cedb:	cmp    al,0x4f
  40cedd:	shl    edi,cl
  40cedf:	jbe    0x40cf51
  40cee1:	jmp    0x40cf05
  40cee3:	or     al,0xab
  40cee5:	push   0xffffff83
  40cee7:	cmp    al,dh
  40cee9:	aaa    
  40ceea:	fidivr WORD PTR [edi+0x0]
  40ceed:	test   al,0x39
  40ceef:	pusha  
  40cef0:	lahf   
  40cef1:	dec    ebp
  40cef2:	adc    eax,0x8ae419b
  40cef7:	and    esi,DWORD PTR [ebp+0x380ca10b]
  40cefd:	jl     0x40cf04
  40ceff:	icebp  
  40cf00:	push   edx
  40cf01:	xchg   ecx,eax
  40cf02:	call   0xab5f:0x4079fd64
  40cf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0b:	loop   0x40cee8
  40cf0d:	jecxz  0x40cef2
  40cf0f:	sub    eax,0x59e1a0f5
  40cf14:	add    bh,BYTE PTR [esi-0x7a341eea]
  40cf1a:	cs loop 0x40ceb8
  40cf1d:	dec    ecx
  40cf1e:	lahf   
  40cf1f:	xchg   edi,eax
  40cf20:	aam    0xd0
  40cf22:	mov    bl,0x3d
  40cf24:	xchg   ebx,eax
  40cf25:	lds    esi,FWORD PTR [ebp-0x10]
  40cf28:	in     al,0x28
  40cf2a:	mov    ebx,0x951bfd31
  40cf2f:	fldenv [eax+esi*8+0x1d]
  40cf33:	cmp    eax,0x53ce80cb
  40cf38:	cs pusha 
  40cf3a:	cmp    al,0x49
  40cf3c:	mov    cl,0x9
  40cf3e:	xchg   ebp,eax
  40cf3f:	jbe    0x40cee1
  40cf41:	push   esp
  40cf42:	mov    al,0x83
  40cf44:	data16 aad 0xf7
  40cf47:	and    DWORD PTR [ecx+eiz*1-0x34],ebx
  40cf4b:	call   0xe104368c
  40cf50:	jb     0x40cf18
  40cf52:	out    0xb4,eax
  40cf54:	into   
  40cf55:	xchg   BYTE PTR [ecx-0x71],dh
  40cf58:	cli    
  40cf59:	push   ebx
  40cf5a:	mov    esi,0xb21e31f4
  40cf5f:	mov    ebx,0x336a2e62
  40cf64:	add    BYTE PTR [ebx+edx*2],bh
  40cf67:	mov    eax,ds:0x1191e805
  40cf6c:	rcl    BYTE PTR [esi],0x8d
  40cf6f:	je     0x40cef5
  40cf71:	push   0xffffffcc
  40cf73:	jp     0x40cfe4
  40cf75:	cld    
  40cf76:	mov    dh,0xdf
  40cf78:	push   ecx
  40cf79:	dec    edx
  40cf7a:	mov    ebx,0xf4ef4c8d
  40cf7f:	mov    cs,WORD PTR [ebp-0x48712886]
  40cf85:	out    dx,eax
  40cf86:	cmp    DWORD PTR [edx-0x1ca73170],esi
  40cf8c:	jmp    0x40cf72
  40cf8e:	pop    edx
  40cf8f:	ja     0x40cf76
  40cf91:	cmp    ch,al
  40cf93:	fcmovbe st,st(5)
  40cf95:	mov    edi,0xae27dbb3
  40cf9a:	mov    edx,0xb96aff26
  40cf9f:	xlat   BYTE PTR ds:[ebx]
  40cfa0:	push   ss
  40cfa1:	imul   DWORD PTR [ebp-0x7810293f]
  40cfa7:	mov    bl,0x2b
  40cfa9:	cmp    BYTE PTR [esi],ch
  40cfab:	lods   al,BYTE PTR ds:[esi]
  40cfac:	daa    
  40cfad:	dec    eax
  40cfae:	frstor ds:0x13359c3a
  40cfb4:	dec    ebp
  40cfb5:	sbb    dh,BYTE PTR ss:[ebp+0xf]
  40cfb9:	addr16 in al,dx
  40cfbb:	adc    ebx,DWORD PTR [ebp+0x22]
  40cfbe:	sbb    al,0x6e
  40cfc0:	in     eax,0x55
  40cfc2:	mov    WORD PTR [esi+ecx*2-0x3913d9a3],?
  40cfc9:	mov    al,0xda
  40cfcb:	cmp    BYTE PTR [ebx],cl
  40cfcd:	outs   dx,DWORD PTR ds:[esi]
  40cfce:	and    ch,BYTE PTR [ecx-0xb]
  40cfd1:	mov    cl,0x90
  40cfd3:	add    BYTE PTR [eax],ah
  40cfd5:	sub    DWORD PTR [edi],ebx
  40cfd7:	and    dl,bl
  40cfd9:	int3   
  40cfda:	jnp    0x40cfef
  40cfdc:	inc    esi
  40cfdd:	repz mov eax,0x35eb4c0b
  40cfe3:	mov    ds:0x3926a856,eax
  40cfe8:	ret    
  40cfe9:	xchg   ebx,eax
  40cfea:	cdq    
  40cfeb:	mov    ds:0xbe1ac383,al
  40cff0:	jnp    0x40cff2
  40cff2:	sar    DWORD PTR [ebx-0x7bcc6ab0],0xad
  40cff9:	shr    DWORD PTR [ebx+0x72],0xd2
  40cffd:	(bad)  
  40cffe:	xor    BYTE PTR [eax-0x6ff85640],ch
  40d004:	mov    eax,ds:0x70ce7c74
  40d009:	loope  0x40d02b
  40d00b:	pop    edi
  40d00c:	mov    BYTE PTR [edx+0x2d32a566],bl
  40d012:	into   
  40d013:	lods   eax,DWORD PTR ds:[esi]
  40d014:	pop    ebx
  40d015:	(bad)  
  40d016:	in     eax,0x0
  40d018:	test   ah,ch
  40d01a:	inc    BYTE PTR [edi+0x291cf9b5]
  40d020:	dec    eax
  40d021:	mov    cl,ah
  40d023:	xchg   esp,eax
  40d024:	jb     0x40d038
  40d026:	fs jno 0x40d0a4
  40d029:	das    
  40d02a:	sub    al,0x56
  40d02c:	daa    
  40d02d:	jo     0x40d066
  40d02f:	xor    ch,dh
  40d031:	and    al,0x50
  40d033:	cmp    edx,esi
  40d035:	push   cs
  40d036:	xchg   BYTE PTR [eax],dl
  40d038:	pop    eax
  40d039:	sub    al,0xa0
  40d03b:	push   esi
  40d03c:	inc    esp
  40d03d:	push   ebx
  40d03e:	int    0x8c
  40d040:	jmp    0xb9f8:0x78f6d6e2
  40d047:	fidiv  DWORD PTR [edi]
  40d049:	jno    0x40d0b4
  40d04b:	fcmovb st,st(7)
  40d04d:	std    
  40d04e:	shl    DWORD PTR [eax-0x645fc3d3],0xae
  40d055:	or     DWORD PTR [esp+ecx*2+0x16d5a4d3],0xd0845b3
  40d060:	stos   DWORD PTR es:[edi],eax
  40d061:	push   0x87daf432
  40d066:	cld    
  40d067:	push   edi
  40d068:	out    dx,al
  40d069:	call   edi
  40d06b:	fidiv  DWORD PTR [ebx]
  40d06d:	test   dl,0x48
  40d070:	adc    DWORD PTR [edi],edx
  40d072:	inc    esp
  40d073:	shl    DWORD PTR ds:0x8f591f65,0x25
  40d07a:	push   es
  40d07b:	jl     0x40d073
  40d07d:	(bad)  
  40d07e:	popf   
  40d07f:	mov    cl,0x8e
  40d081:	pop    ds
  40d082:	aaa    
  40d083:	stos   BYTE PTR es:[edi],al
  40d084:	adc    al,0x29
  40d086:	fmul   QWORD PTR [esi+eiz*8-0x38ffb05]
  40d08d:	das    
  40d08e:	dec    edx
  40d08f:	mov    al,0x95
  40d091:	call   0xcc91:0x43feb2cd
  40d098:	mov    ah,0x15
  40d09a:	mov    BYTE PTR [edi],al
  40d09c:	inc    edx
  40d09d:	pop    esp
  40d09e:	adc    BYTE PTR [edi-0x5edc7a05],ch
  40d0a4:	or     BYTE PTR [edx+0x1c],bh
  40d0a7:	popf   
  40d0a8:	mov    esi,0x1200162
  40d0ad:	xchg   edx,eax
  40d0ae:	in     eax,dx
  40d0af:	popf   
  40d0b0:	lods   al,BYTE PTR ds:[esi]
  40d0b1:	gs data16 fs stc 
  40d0b5:	adc    bl,BYTE PTR [edi]
  40d0b7:	dec    edx
  40d0b8:	ror    esi,1
  40d0ba:	sahf   
  40d0bb:	rol    BYTE PTR [esp+esi*4-0x53],1
  40d0bf:	(bad)  
  40d0c0:	sbb    DWORD PTR [ebx+0x25],ebx
  40d0c3:	repz mov ecx,0xee957a75
  40d0c9:	pop    esp
  40d0ca:	jmp    0x40d0a0
  40d0cc:	lods   eax,DWORD PTR ds:[esi]
  40d0cd:	pop    eax
  40d0ce:	and    BYTE PTR [ecx-0x2d7c1fbb],cl
  40d0d4:	pop    edx
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	fldenv [eax-0x186e6dba]
  40d1b0:	mov    esi,0xbec492be
  40d1b5:	mov    esi,0xdae86fe7
  40d1ba:	inc    esi
  40d1bb:	inc    ebx
  40d1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1bd:	xchg   eax,ecx
  40d1bf:	repz ret 
  40d1c1:	std    
  40d1c2:	mov    ebx,0x2d19a9a2
  40d1c7:	ficom  DWORD PTR [edx+ebx*4+0x713b16cf]
  40d1ce:	cmp    al,BYTE PTR [ebx]
  40d1d0:	inc    edi
  40d1d1:	mov    ds:0x233cfd91,eax
  40d1d6:	cmp    ebp,DWORD PTR ds:0xd556aedf
  40d1dc:	push   0xdc8f140e
  40d1e1:	xlat   BYTE PTR ds:[ebx]
  40d1e2:	mov    esp,0xd8f89b7e
  40d1e7:	leave  
  40d1e8:	(bad)  
  40d1e9:	(bad)  
  40d1ea:	pop    esp
  40d1eb:	std    
  40d1ec:	dec    BYTE PTR [esi]
  40d1ee:	adc    esp,DWORD PTR [eax+0x50]
  40d1f1:	pop    ebp
  40d1f2:	popa   
  40d1f3:	sbb    BYTE PTR [ecx],dh
  40d1f5:	(bad)  
  40d1f6:	(bad)  
  40d1f7:	mov    edx,0x286fbb4b
  40d1fc:	stos   DWORD PTR es:[edi],eax
  40d1fd:	add    al,0x54
  40d1ff:	mov    al,ds:0x42bc2f9f
  40d204:	cmp    DWORD PTR [edi-0x16],0x25228c7f
  40d20b:	mov    cs:0xba17fae3,eax
  40d211:	call   0xb7a80aa7
  40d216:	jb     0x40d1fc
  40d218:	fcomp  st(3)
  40d21a:	push   ebp
  40d21b:	push   ebx
  40d21c:	leave  
  40d21d:	or     eax,0xcede02e1
  40d222:	mov    eax,0x9907edaa
  40d227:	mov    al,ds:0x9c73269c
  40d22c:	stos   BYTE PTR es:[edi],al
  40d22d:	jnp    0x40d1df
  40d22f:	adc    DWORD PTR [edi+edx*8],ebx
  40d232:	push   ebp
  40d233:	fs ds int3 
  40d236:	sbb    eax,DWORD PTR [ebp-0x6a017b70]
  40d23c:	jns    0x40d205
  40d23e:	and    bl,bh
  40d240:	repnz out dx,eax
  40d242:	fstp   TBYTE PTR [edi]
  40d244:	out    0x65,eax
  40d246:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d248:	inc    esi
  40d249:	sti    
  40d24a:	fsub   DWORD PTR [ecx+ecx*1]
  40d24d:	mov    BYTE PTR [ebx+0x72],bl
  40d250:	mov    cl,0xe8
  40d252:	mov    WORD PTR fs:[ecx+0x43da34ac],gs
  40d259:	push   0x49b20196
  40d25e:	add    DWORD PTR [edx+eax*1-0x2e],ebp
  40d262:	xcrypt-cfb (bad)
  40d263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d264:	fsubr  DWORD PTR gs:[edi-0x5f]
  40d268:	test   eax,0x914f2ae5
  40d26d:	jmp    0x40d216
  40d26f:	outs   dx,DWORD PTR ds:[esi]
  40d270:	mov    DWORD PTR fs:[eax-0x80],eax
  40d274:	mov    esp,0x4bd6a266
  40d279:	dec    edx
  40d27a:	ins    DWORD PTR es:[edi],dx
  40d27b:	addr16 in al,0xdc
  40d27e:	xor    edx,eax
  40d280:	imul   ebx,DWORD PTR [edi+0x7b],0xffffffca
  40d284:	popa   
  40d285:	scas   al,BYTE PTR es:[edi]
  40d286:	push   edi
  40d287:	fwait
  40d288:	sub    esi,DWORD PTR [ebx+0x204afe45]
  40d28e:	retf   0x7c95
  40d291:	mov    ebx,0xd6c3e0d4
  40d296:	ret    0x607a
  40d299:	outs   dx,DWORD PTR ds:[esi]
  40d29a:	dec    eax
  40d29b:	sub    eax,DWORD PTR [ebp+0x50]
  40d29e:	push   edx
  40d29f:	lds    edx,FWORD PTR [ebp-0x6872f9c0]
  40d2a5:	xchg   edi,eax
  40d2a6:	pop    ss
  40d2a7:	daa    
  40d2a8:	lahf   
  40d2a9:	jns    0x40d313
  40d2ab:	sub    ch,ah
  40d2ad:	pop    edx
  40d2ae:	and    BYTE PTR [ebp+0x36c2aaf6],dl
  40d2b4:	scas   al,BYTE PTR es:[edi]
  40d2b5:	mov    esi,0xe66524da
  40d2ba:	sub    eax,0xc84cdd41
  40d2bf:	lods   eax,DWORD PTR ds:[esi]
  40d2c0:	not    eax
  40d2c2:	push   ds
  40d2c3:	dec    esp
  40d2c4:	scas   eax,DWORD PTR es:[edi]
  40d2c5:	(bad)  
  40d2c7:	inc    edx
  40d2c8:	jno    0x40d277
  40d2ca:	sti    
  40d2cb:	outs   dx,DWORD PTR ds:[esi]
  40d2cc:	pop    es
  40d2cd:	mov    ebx,0x32f6800e
  40d2d2:	mov    ch,0xc9
  40d2d4:	sahf   
  40d2d5:	xor    edi,DWORD PTR [ebx]
  40d2d7:	ss cmp edx,esi
  40d2da:	and    al,0x2a
  40d2dc:	and    eax,0x94cb3f3
  40d2e1:	jae    0x40d357
  40d2e3:	(bad)  
  40d2e4:	into   
  40d2e5:	mov    cl,0x47
  40d2e7:	sbb    al,0xb4
  40d2e9:	push   ebx
  40d2ea:	xor    DWORD PTR [ebx],edx
  40d2ec:	mov    dh,0xf7
  40d2ee:	shl    BYTE PTR [ecx-0x22],1
  40d2f1:	ret    0x8118
  40d2f4:	dec    esi
  40d2f5:	adc    al,0xd5
  40d2f7:	fmul   DWORD PTR [edx]
  40d2f9:	out    0x9a,al
  40d2fb:	or     DWORD PTR [esi],esp
  40d2fd:	mov    eax,DWORD PTR [esi*8-0x6dc30e70]
  40d304:	loope  0x40d2ed
  40d306:	sub    eax,0xb5a1d97b
  40d30b:	repz inc ebx
  40d30d:	out    0x3e,eax
  40d30f:	jmp    0x25450edd
  40d314:	ret    0xa949
  40d317:	fs das 
  40d319:	sbb    edi,DWORD PTR [edx+0x1a]
  40d31c:	or     eax,0xd743b8e0
  40d321:	das    
  40d322:	sbb    DWORD PTR [ecx+0x7f],ecx
  40d325:	sbb    BYTE PTR [ecx],ch
  40d327:	xchg   edi,eax
  40d328:	mov    edx,0x44d9f29f
  40d32d:	int    0x1b
  40d32f:	test   al,0xaa
  40d331:	js     0x40d31c
  40d333:	and    bh,BYTE PTR [eax-0x7b4eebd0]
  40d339:	inc    eax
  40d33a:	jle    0x40d358
  40d33c:	lock retf 0xa409
  40d340:	add    DWORD PTR [edi],esp
  40d342:	shl    BYTE PTR [eax-0x60b46e71],0xf5
  40d349:	adc    ebp,eax
  40d34b:	xor    ecx,esi
  40d34d:	xchg   ebp,eax
  40d34e:	test   eax,0x2d347c50
  40d353:	mov    edi,0x791344bb
  40d358:	rcl    dh,0x58
  40d35b:	retf   0x1a16
  40d35e:	pop    ss
  40d35f:	add    DWORD PTR [ecx],edi
  40d361:	into   
  40d362:	dec    eax
  40d363:	xchg   ebx,eax
  40d364:	push   es
  40d365:	push   ecx
  40d366:	retf   
  40d367:	cmp    eax,0x5913d65b
  40d36c:	in     al,0x58
  40d36e:	inc    edx
  40d36f:	push   DWORD PTR [ecx-0x38840816]
  40d375:	dec    esi
  40d376:	sub    ebp,DWORD PTR [esi]
  40d378:	and    ah,BYTE PTR [ebx-0x649522e4]
  40d37e:	dec    ebx
  40d37f:	dec    edx
  40d380:	retf   
  40d381:	mov    esp,0xbc7e738c
  40d386:	call   0xf47c:0xf95bb1f9
  40d38d:	sbb    al,0x4d
  40d38f:	cli    
  40d390:	mov    DWORD PTR [eax-0x21300ff3],eax
  40d396:	fs shl bl,0x4c
  40d39a:	inc    edi
  40d39b:	adc    bh,BYTE PTR [ecx+0x70]
  40d39e:	pop    ebx
  40d39f:	or     al,0x63
  40d3a1:	es fwait
  40d3a3:	push   es
  40d3a4:	xchg   esp,eax
  40d3a5:	mov    es,WORD PTR [edx]
  40d3a7:	fcomp  QWORD PTR [ecx]
  40d3a9:	mov    al,0x38
  40d3ab:	mov    ebp,0xf69103e
  40d3b0:	and    DWORD PTR [eax-0x59],edi
  40d3b3:	or     eax,0x3f4a7745
  40d3b8:	sbb    BYTE PTR [edx+0x7],0xd5
  40d3bc:	mov    es,WORD PTR [ebp-0x771156fa]
  40d3c2:	(bad)  
  40d3c3:	das    
  40d3c4:	popf   
  40d3c5:	push   ebp
  40d3c6:	dec    esp
  40d3c7:	xor    al,0x89
  40d3c9:	mov    ah,0x80
  40d3cb:	mov    dl,0x45
  40d3cd:	ins    BYTE PTR es:[edi],dx
  40d3ce:	push   es
  40d3cf:	add    ebp,DWORD PTR [ebx+esi*1+0x16a65230]
  40d3d6:	push   ebx
  40d3d7:	dec    edx
  40d3d8:	imul   ecx,esi,0xffffffce
  40d3db:	pop    ds
  40d3dc:	sbb    edx,ebp
  40d3de:	das    
  40d3df:	repnz (bad) 
  40d3e1:	fisub  DWORD PTR [ebx+0x14ccc8]
  40d3e7:	lahf   
  40d3e8:	shl    bh,0x16
  40d3eb:	mov    dl,0xad
  40d3ed:	scas   eax,DWORD PTR es:[edi]
  40d3ee:	push   ecx
  40d3ef:	pop    ecx
  40d3f0:	mov    edx,0xb92f45ec
  40d3f5:	cmp    edi,DWORD PTR [edi]
  40d3f7:	pop    ecx
  40d3f8:	sbb    ebx,esp
  40d3fa:	jbe    0x40d445
  40d3fc:	xchg   esp,eax
  40d3fd:	sar    DWORD PTR [esi+eiz*8+0x54],1
  40d401:	fld    DWORD PTR [ebx]
  40d403:	(bad)  
  40d404:	in     al,0x2b
  40d406:	jmp    0x40d467
  40d408:	in     al,0x18
  40d40a:	int    0x47
  40d40c:	push   0x60bb9cbd
  40d411:	mov    ds:0x34c2f6c2,al
  40d416:	or     al,0x37
  40d418:	adc    ecx,DWORD PTR [edi-0x482f0b95]
  40d41e:	jge    0x40d431
  40d420:	lods   al,BYTE PTR ds:[esi]
  40d421:	jbe    0x40d3ee
  40d423:	popa   
  40d424:	sub    eax,0xfc47c391
  40d429:	aad    0x7c
  40d42b:	mov    eax,0x379d5b5d
  40d430:	mov    ebx,ss
  40d432:	push   ds
  40d433:	ror    BYTE PTR [eax],cl
  40d435:	mov    dh,0x5f
  40d437:	jo     0x40d429
  40d439:	hlt    
  40d43a:	and    BYTE PTR [edi+eax*1],ch
  40d43d:	test   BYTE PTR [ecx],ch
  40d43f:	pop    esp
  40d440:	mov    cl,BYTE PTR ds:0x112f1651
  40d446:	call   0xf3cdd459
  40d44b:	push   ebx
  40d44c:	sub    esi,DWORD PTR ds:0x806c9aea
  40d452:	cmp    BYTE PTR [ebx-0x4c56ab73],dh
  40d458:	loopne 0x40d3ed
  40d45a:	aad    0x9b
  40d45c:	adc    DWORD PTR [edi+0x35],edi
  40d45f:	hlt    
  40d460:	xor    al,ch
  40d462:	pop    ebp
  40d463:	jmp    0x40d4d0
  40d465:	test   eax,0xe6b56b4b
  40d46a:	stos   BYTE PTR es:[edi],al
  40d46b:	call   0x8721:0xcd322571
  40d472:	adc    bh,BYTE PTR [edi]
  40d474:	aas    
  40d475:	jp     0x40d44e
  40d477:	sbb    eax,0x9d8ba58f
  40d47c:	mov    esp,0x9ce80041
  40d481:	sbb    al,0x61
  40d483:	ins    DWORD PTR es:[edi],dx
  40d484:	iret   
  40d485:	(bad)  
  40d486:	stc    
  40d487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d488:	push   ds
  40d489:	mov    ebp,esp
  40d48b:	inc    ecx
  40d48c:	dec    edi
  40d48d:	bound  ecx,QWORD PTR [esi+0x32]
  40d490:	stos   DWORD PTR es:[edi],eax
  40d491:	fisub  WORD PTR [edx-0x5c]
  40d494:	leave  
  40d495:	aam    0xc9
  40d497:	fwait
  40d498:	xor    DWORD PTR [eax-0x47659467],esp
  40d49e:	push   0x2a
  40d4a0:	outs   dx,DWORD PTR ds:[esi]
  40d4a1:	xchg   BYTE PTR [edi+ebp*8-0x60],dh
  40d4a5:	add    bh,BYTE PTR [esi+0x338b2db4]
  40d4ab:	xchg   ebp,eax
  40d4ac:	imul   ebx,DWORD PTR [ebx+0x44],0xdd374c77
  40d4b3:	xor    BYTE PTR [edi-0x7a],0xae
  40d4b7:	icebp  
  40d4b8:	inc    edx
  40d4b9:	sbb    DWORD PTR [eax+0x6a],eax
  40d4bc:	push   edx
  40d4bd:	pop    ss
  40d4be:	cmp    eax,0x538e52c1
  40d4c3:	xchg   DWORD PTR [esi-0x65],eax
  40d4c6:	cmp    edi,DWORD PTR [ebx-0x61b39d3d]
  40d4cc:	jbe    0x40d452
  40d4ce:	cmp    al,0x32
  40d4d0:	test   BYTE PTR [eax-0x18],bl
  40d4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d4:	cmp    al,0xe
  40d4d6:	daa    
  40d4d7:	xor    BYTE PTR [eax-0x1],al
  40d4da:	stc    
  40d4db:	xor    ah,BYTE PTR [ebx]
  40d4dd:	sti    
  40d4de:	sbb    BYTE PTR [eax-0x12c8d5b9],dh
  40d4e4:	scas   al,BYTE PTR es:[edi]
  40d4e5:	sbb    eax,0xa5dbd342
  40d4ea:	dec    esp
  40d4eb:	in     eax,dx
  40d4ec:	sar    BYTE PTR [esi-0x4b8ab432],cl
  40d4f2:	sub    al,0x98
  40d4f4:	aaa    
  40d4f5:	xor    al,0x37
  40d4f7:	cmp    al,0x5c
  40d4f9:	dec    edx
  40d4fa:	test   edx,esi
  40d4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fd:	adc    eax,0x775d8583
  40d502:	cmp    BYTE PTR [edi+0x40],al
  40d505:	bound  eax,QWORD PTR [ecx+edx*1-0x1bcd5785]
  40d50c:	pop    edi
  40d50d:	xor    eax,0x86e82c35
  40d512:	loopne 0x40d50c
  40d514:	sbb    esp,DWORD PTR [edx+0x478b2902]
  40d51a:	mov    esi,0x5c582e33
  40d51f:	jbe    0x40d4db
  40d521:	test   BYTE PTR [ebx-0x2ad061ef],0x35
  40d528:	xchg   ebx,eax
  40d529:	retf   0xbfd0
  40d52c:	or     dh,BYTE PTR [edx]
  40d52e:	out    dx,eax
  40d52f:	stos   DWORD PTR es:[edi],eax
  40d530:	ins    BYTE PTR es:[edi],dx
  40d531:	adc    edx,DWORD PTR [eax-0x35db36c4]
  40d537:	jns    0x40d551
  40d539:	mov    dl,0x88
  40d53b:	jo     0x40d4f2
  40d53d:	add    esi,DWORD PTR [edx-0x24]
  40d540:	mov    bh,0x1d
  40d542:	add    eax,0x77ad3396
  40d547:	out    0xf7,eax
  40d549:	and    eax,0x15c86818
  40d54e:	(bad)  
  40d54f:	push   ebp
  40d550:	fistp  DWORD PTR [ebx+0x4f0d8792]
  40d556:	cmc    
  40d557:	stos   BYTE PTR es:[edi],al
  40d558:	jnp    0x40d54d
  40d55a:	lods   eax,DWORD PTR ds:[esi]
  40d55b:	jne    0x40d572
  40d55d:	cmp    BYTE PTR [edx+0x467beeaf],cl
  40d563:	and    BYTE PTR [eax-0x549d2c04],ch
  40d569:	cmp    DWORD PTR [edx],edx
  40d56b:	fistp  QWORD PTR [esi+eax*4-0xde32488]
  40d572:	ret    0x893
  40d575:	sub    al,0x3d
  40d577:	sbb    BYTE PTR [esi-0x72],0x9b
  40d57b:	(bad)  
  40d57c:	pop    edi
  40d57d:	in     eax,dx
  40d57e:	xchg   esp,eax
  40d57f:	cli    
  40d580:	dec    ecx
  40d581:	jne    0x40d5c1
  40d583:	pop    edi
  40d584:	inc    eax
  40d585:	add    esi,ecx
  40d587:	fs (bad) 
  40d589:	retf   
  40d58a:	daa    
  40d58b:	pop    eax
  40d58c:	pop    edi
  40d58d:	mov    ebp,0x29aaa260
  40d593:	push   ebx
  40d594:	nop
  40d595:	icebp  
  40d596:	hlt    
  40d597:	ds (bad) 
  40d599:	mov    ds:0x7c8ad2a,eax
  40d59e:	in     al,0x8
  40d5a0:	or     eax,DWORD PTR [ebx+0x458bcb4d]
  40d5a6:	hlt    
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x42226d
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x4226f8
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x4226f8
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422800
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x4227f8],eax
  40d707:	inc    DWORD PTR ds:0x422800
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422574
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227e8
  40d78f:	push   DWORD PTR ds:0x42257c
  40d795:	push   DWORD PTR ds:0x4227c8
  40d79b:	push   DWORD PTR ds:0x42283c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x4226f8
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	xor    eax,ebp
  40d7f9:	jecxz  0x40d78b
  40d7fb:	gs lock mov esi,0xbec492be
  40d802:	mov    esi,0xc44ddb3f
  40d807:	mov    eax,ds:0x20bdd7d7
  40d80c:	imul   ecx,DWORD PTR [ebp+eax*1+0x1e7fcb02],0x76279372
  40d817:	(bad)
  40d81b:	ror    DWORD PTR [ecx-0x4f521130],cl
  40d821:	and    al,bh
  40d823:	mov    ah,0x51
  40d825:	leave  
  40d826:	dec    ecx
  40d827:	fisttp DWORD PTR [eax+0x73c74e5d]
  40d82d:	clc    
  40d82e:	inc    ebx
  40d82f:	(bad)  
  40d830:	mov    ch,0x77
  40d832:	jne    0x40d7d7
  40d834:	add    ch,BYTE PTR [ecx-0x73b4a94d]
  40d83a:	jecxz  0x40d7ff
  40d83c:	das    
  40d83d:	mov    ebx,0x99998dbe
  40d842:	(bad)  
  40d843:	outs   dx,DWORD PTR ds:[esi]
  40d844:	stos   DWORD PTR es:[edi],eax
  40d845:	hlt    
  40d846:	xor    DWORD PTR [ecx-0x80],0x2bdee207
  40d84d:	cli    
  40d84e:	shl    DWORD PTR [edi],1
  40d850:	push   0x57
  40d852:	adc    BYTE PTR [ebp-0x7a],bl
  40d855:	dec    DWORD PTR [ebp+0x53]
  40d858:	push   ds
  40d859:	adc    BYTE PTR [esi-0x68],0x76
  40d85d:	mov    edx,DWORD PTR [edi]
  40d85f:	les    ebx,FWORD PTR [edi]
  40d861:	inc    ebp
  40d862:	dec    ebx
  40d863:	(bad)  
  40d864:	jmp    0x40d842
  40d866:	sub    eax,0xc8821bfc
  40d86b:	retf   0x1df1
  40d86e:	dec    edi
  40d86f:	js     0x40d83f
  40d871:	adc    eax,0x555c95f4
  40d876:	hlt    
  40d877:	jnp    0x40d862
  40d879:	push   0x5175ee66
  40d87e:	mov    ah,0x44
  40d880:	imul   edi,DWORD PTR fs:[edi+0x32e26706],0x64e014c7
  40d88b:	repnz push eax
  40d88d:	xchg   esi,eax
  40d88e:	push   edx
  40d88f:	mov    edi,DWORD PTR [esi+ebx*1]
  40d892:	adc    eax,0x815fc8d
  40d897:	push   es
  40d898:	and    al,0x1d
  40d89a:	inc    edi
  40d89b:	sbb    eax,0xbda6c2a4
  40d8a0:	or     eax,edi
  40d8a2:	pop    esi
  40d8a3:	into   
  40d8a4:	shl    BYTE PTR [esi+0x77c9f3a0],0x63
  40d8ab:	pushf  
  40d8ac:	fmul   QWORD PTR [edx+0x6746774e]
  40d8b2:	sub    dh,BYTE PTR [edx]
  40d8b4:	sub    eax,0xec8dc825
  40d8b9:	push   0xc08b83cb
  40d8be:	pushf  
  40d8bf:	push   es
  40d8c0:	cmp    DWORD PTR [esi+0x43042917],ebx
  40d8c6:	or     edi,DWORD PTR [eax-0x4a]
  40d8c9:	leave  
  40d8ca:	sbb    eax,0xb16b57c8
  40d8cf:	mov    ds:0xbeaac0f2,eax
  40d8d4:	test   DWORD PTR [esi+0x17],esi
  40d8d7:	push   ds
  40d8d8:	sbb    eax,0x39287c2f
  40d8dd:	xor    edi,DWORD PTR [edi+0x77]
  40d8e0:	lahf   
  40d8e1:	adc    al,BYTE PTR cs:[ebx-0x36bf1c46]
  40d8e8:	hlt    
  40d8e9:	jmp    0xefd8:0xe8abb94a
  40d8f0:	fld    st(5)
  40d8f2:	loope  0x40d957
  40d8f4:	gs inc edx
  40d8f6:	ret    0x203d
  40d8f9:	pop    es
  40d8fa:	(bad)  
  40d8fb:	push   edx
  40d8fc:	push   edx
  40d8fd:	add    ch,BYTE PTR [esi]
  40d8ff:	sbb    BYTE PTR [ebx-0x73386f23],bl
  40d905:	bound  esi,QWORD PTR [ebx+0x77]
  40d908:	pusha  
  40d909:	ss adc al,0x6f
  40d90c:	jp     0x40d92d
  40d90e:	lock inc ebx
  40d910:	test   BYTE PTR [edi+0x6f],ch
  40d913:	loop   0x40d897
  40d915:	out    dx,al
  40d916:	mov    dl,BYTE PTR [ebx+ebp*2+0x2d9f4b17]
  40d91d:	stos   BYTE PTR es:[edi],al
  40d91e:	std    
  40d91f:	mov    bl,0x8f
  40d921:	leave  
  40d922:	add    bh,ah
  40d924:	es pop edx
  40d926:	test   esp,0x50902677
  40d92c:	mov    al,0xbe
  40d92e:	mov    bl,0x2b
  40d930:	cs or  ecx,edx
  40d933:	aad    0x86
  40d935:	out    0x75,eax
  40d937:	xchg   esp,esi
  40d939:	mov    ch,0x9b
  40d93b:	hlt    
  40d93c:	imul   edi,edx,0xd33e1fe5
  40d942:	out    dx,al
  40d943:	push   es
  40d944:	dec    ebp
  40d945:	imul   ebx,DWORD PTR [ecx],0x23d169e4
  40d94b:	mov    dl,0x66
  40d94d:	mov    edx,0x26255088
  40d952:	sbb    al,0xe7
  40d954:	sbb    BYTE PTR [esi-0x2186fd63],cl
  40d95a:	add    ah,cl
  40d95c:	out    dx,eax
  40d95d:	hlt    
  40d95e:	push   0x12
  40d960:	jmp    0x8344:0x1d0aae02
  40d967:	rcr    DWORD PTR [ebp+0x5],1
  40d96a:	cmp    dh,BYTE PTR [esi+eax*2]
  40d96d:	dec    edi
  40d96e:	mov    edx,ebx
  40d970:	scas   ax,WORD PTR es:[edi]
  40d972:	aaa    
  40d973:	icebp  
  40d974:	std    
  40d975:	jecxz  0x40d9af
  40d977:	data16 shr al,cl
  40d97a:	scas   eax,DWORD PTR es:[edi]
  40d97b:	cmp    eax,ecx
  40d97d:	rcr    BYTE PTR [eax+0x29],cl
  40d980:	imul   DWORD PTR [ebx-0x77]
  40d983:	pusha  
  40d984:	sub    cl,bh
  40d986:	inc    esi
  40d987:	mov    cl,0xe4
  40d989:	add    esi,DWORD PTR [edx]
  40d98b:	adc    ecx,DWORD PTR [ebp+0x79e82b4c]
  40d991:	stos   BYTE PTR es:[edi],al
  40d992:	repz out dx,al
  40d994:	call   0x913a:0x46d48a6c
  40d99b:	add    ah,BYTE PTR [esi+0x29]
  40d99e:	addr16 fwait
  40d9a0:	cmp    edx,DWORD PTR [eax+eax*4-0x74]
  40d9a4:	and    esi,ebx
  40d9a6:	jle    0x40d9b2
  40d9a8:	push   ebp
  40d9a9:	jb     0x40d96f
  40d9ab:	mov    ch,0x9
  40d9ad:	jb     0x40d976
  40d9af:	add    eax,0xcd9ee00d
  40d9b4:	lea    esp,[eax+0x5f]
  40d9b7:	mov    cl,0xdb
  40d9b9:	stos   DWORD PTR es:[edi],eax
  40d9ba:	inc    eax
  40d9bb:	xchg   esp,eax
  40d9bc:	pushf  
  40d9bd:	jp     0x40d9b3
  40d9bf:	bound  ecx,QWORD PTR [edi+0x6e018ae7]
  40d9c5:	arpl   WORD PTR [edi+0x34],dx
  40d9c8:	fistp  DWORD PTR [eax]
  40d9ca:	inc    ebx
  40d9cb:	fadd   DWORD PTR [ebp+0x7b]
  40d9ce:	test   esp,edx
  40d9d0:	mov    bl,0x57
  40d9d2:	sub    ebp,DWORD PTR ds:0xd0bee7c7
  40d9d8:	pop    esp
  40d9d9:	xchg   esi,eax
  40d9da:	(bad)  
  40d9db:	sbb    BYTE PTR [ebp+0x70],bh
  40d9de:	and    ch,BYTE PTR [ecx+0x51]
  40d9e1:	aas    
  40d9e2:	cmp    al,0xe8
  40d9e4:	cmp    BYTE PTR [ebp+edi*4+0x47],dh
  40d9e8:	pop    ss
  40d9e9:	mov    eax,0xaf34541e
  40d9ee:	xchg   DWORD PTR [ebp+0x65fd999],esi
  40d9f4:	sub    eax,0xde4eff1c
  40d9f9:	mov    ds:0x8d31531a,al
  40d9fe:	pop    edi
  40d9ff:	add    ah,BYTE PTR [eax-0x251ecb94]
  40da05:	mov    ds:0xf65b8b38,eax
  40da0a:	pusha  
  40da0b:	cmc    
  40da0c:	add    DWORD PTR [ebx+0x4563f82],0x11fe233e
  40da16:	pop    ebx
  40da17:	xchg   ecx,eax
  40da18:	stc    
  40da19:	xor    ah,al
  40da1b:	mov    ecx,0x4fcd24f4
  40da20:	mov    al,BYTE PTR [esi-0x17]
  40da23:	adc    esp,edx
  40da25:	popf   
  40da26:	les    ecx,FWORD PTR [edi]
  40da28:	sub    al,0xf8
  40da2a:	or     edx,ecx
  40da2c:	mov    ds:0x777d661e,eax
  40da31:	(bad)  
  40da32:	mov    dl,0xc4
  40da34:	dec    ebp
  40da35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da36:	sbb    edx,DWORD PTR [ecx-0x6fd0f378]
  40da3c:	mov    edx,edi
  40da3e:	(bad)  
  40da3f:	sbb    eax,0x41c67b3f
  40da44:	cmp    al,0x56
  40da46:	cmp    ah,BYTE PTR [edx+0x384ec18]
  40da4c:	into   
  40da4d:	sbb    BYTE PTR [edi+0x5b],dh
  40da50:	stos   BYTE PTR es:[edi],al
  40da51:	ret    0x6c02
  40da54:	or     bh,BYTE PTR [eax-0x55b8cc98]
  40da5a:	outs   dx,DWORD PTR ds:[esi]
  40da5b:	add    DWORD PTR [ebp+0x766ecc00],esi
  40da61:	test   BYTE PTR [ecx-0x10],bl
  40da64:	jno    0x40dac7
  40da66:	sti    
  40da67:	xchg   edx,eax
  40da68:	jg     0x40dae1
  40da6a:	xchg   edx,edi
  40da6c:	fisub  DWORD PTR [ecx]
  40da6e:	fnstenv [eax+esi*8-0x1ca6a3a9]
  40da75:	xchg   ecx,eax
  40da76:	xor    al,BYTE PTR [esi]
  40da78:	jmp    0x36a098ff
  40da7d:	or     al,0x9d
  40da7f:	ret    
  40da80:	in     al,0xb5
  40da82:	(bad)  
  40da83:	xchg   dx,ax
  40da85:	or     eax,0x3c62301d
  40da8a:	lods   eax,DWORD PTR ds:[esi]
  40da8b:	mov    ch,0xc6
  40da8d:	sub    eax,0xd989736c
  40da92:	(bad)  
  40da94:	add    DWORD PTR [ebp-0x7672c0c7],ebx
  40da9a:	mov    ds,WORD PTR [edx-0x60]
  40da9d:	pop    esp
  40da9e:	and    ah,BYTE PTR [edx+0x847885b]
  40daa4:	pop    esi
  40daa5:	or     BYTE PTR ds:[edx],dh
  40daa8:	fisttp DWORD PTR [ebp-0x6394c027]
  40daae:	jno    0x40db15
  40dab0:	enter  0x7a22,0x5a
  40dab4:	or     ch,al
  40dab6:	retf   
  40dab7:	fsub   DWORD PTR [ecx-0x68]
  40daba:	mov    dh,0x1e
  40dabc:	inc    eax
  40dabd:	sar    edi,0x51
  40dac0:	int    0xb6
  40dac2:	dec    ebx
  40dac3:	adc    esp,DWORD PTR [ebx-0x5f]
  40dac6:	sbb    DWORD PTR [ecx],edx
  40dac8:	or     al,BYTE PTR [eax+0x1ff7f3fb]
  40dace:	push   esi
  40dacf:	jge    0x40dad1
  40dad1:	fs icebp 
  40dad3:	gs mov dl,0xe7
  40dad6:	sub    eax,0xf8498fcc
  40dadb:	mov    al,ds:0xbb764a52
  40dae0:	retf   
  40dae1:	xchg   ebp,eax
  40dae2:	cmp    bh,BYTE PTR [edi]
  40dae4:	sub    BYTE PTR [esi+ebx*1+0x772aef2a],bl
  40daeb:	je     0x40da76
  40daed:	loop   0x40dabb
  40daef:	cdq    
  40daf0:	arpl   WORD PTR [ecx+0x2ea4e23d],bp
  40daf6:	int    0x27
  40daf8:	shl    DWORD PTR [edi-0x987675],1
  40dafe:	xor    DWORD PTR [ebp-0x5e],0x15ecdd1c
  40db05:	repnz xor eax,0x1033c3fc
  40db0b:	cld    
  40db0c:	pop    es
  40db0d:	pop    eax
  40db0e:	pop    ebx
  40db0f:	pop    ss
  40db10:	pop    esi
  40db11:	xchg   ebp,eax
  40db12:	pushf  
  40db13:	mov    ebp,0x4f0215aa
  40db18:	mov    BYTE PTR [ecx],dl
  40db1a:	dec    esi
  40db1b:	loop   0x40db70
  40db1d:	dec    esp
  40db1e:	fidivr DWORD PTR [eax-0x9]
  40db21:	aad    0x6a
  40db23:	ins    BYTE PTR es:[edi],dx
  40db24:	js     0x40dab8
  40db26:	push   0xfffffff8
  40db28:	scas   al,BYTE PTR es:[edi]
  40db29:	mov    edx,0x72d43386
  40db2e:	sti    
  40db2f:	jecxz  0x40db4a
  40db31:	cdq    
  40db32:	push   0x79818c80
  40db37:	mov    eax,ds:0x6d1e58a2
  40db3c:	xchg   esi,eax
  40db3d:	in     eax,dx
  40db3e:	les    edi,FWORD PTR [ecx-0x4bb9ebcf]
  40db44:	mov    dl,0x12
  40db46:	imul   ebx,DWORD PTR fs:[ebx-0x60],0x4f
  40db4b:	jbe    0x40db1c
  40db4d:	shl    BYTE PTR [eax-0x6d],0x42
  40db51:	push   edi
  40db52:	(bad)  
  40db53:	outs   dx,BYTE PTR ds:[esi]
  40db54:	inc    eax
  40db55:	jmp    0x9a1da607
  40db5a:	iret   
  40db5b:	int3   
  40db5c:	jmp    0xedba:0xb29e8865
  40db63:	or     eax,0x6453f332
  40db68:	gs adc esp,eax
  40db6b:	aad    0x4e
  40db6d:	jl     0x40db3d
  40db6f:	push   edx
  40db70:	sahf   
  40db71:	or     al,0xb2
  40db73:	lahf   
  40db74:	mov    ch,0x91
  40db76:	jmp    0x40db41
  40db78:	mov    bl,0x23
  40db7a:	jno    0x40db79
  40db7c:	mov    eax,ds:0xd5786dd6
  40db81:	out    dx,eax
  40db82:	xchg   BYTE PTR [esi],ah
  40db84:	(bad)  
  40db85:	into   
  40db86:	xchg   ebx,eax
  40db87:	sub    al,0x48
  40db89:	(bad)  
  40db8a:	aam    0xba
  40db8c:	call   0x4eb7:0x1319794b
  40db93:	into   
  40db94:	push   es
  40db95:	push   ss
  40db96:	in     al,0xd1
  40db98:	fcom   DWORD PTR [edi+0x79]
  40db9b:	ret    0x68d0
  40db9e:	loope  0x40db88
  40dba0:	push   edx
  40dba1:	mov    cl,0x58
  40dba3:	inc    ebx
  40dba4:	std    
  40dba5:	push   0x4fba0a02
  40dbaa:	iret   
  40dbab:	leave  
  40dbac:	mov    eax,ds:0x3d002bfd
  40dbb1:	loopne 0x40db39
  40dbb3:	add    DWORD PTR [ebp+ebp*4+0x6a],eax
  40dbb7:	stos   DWORD PTR es:[edi],eax
  40dbb8:	popa   
  40dbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbba:	push   0x44
  40dbbc:	adc    ebp,ecx
  40dbbe:	mov    ecx,0x1c74e828
  40dbc3:	inc    esi
  40dbc4:	mov    edi,0x15349696
  40dbc9:	test   BYTE PTR [eax+ebp*4-0x6e2ca2a],dh
  40dbd0:	cmp    esi,esp
  40dbd2:	xchg   esp,eax
  40dbd3:	and    DWORD PTR [ecx+eiz*4],ecx
  40dbd6:	jae    0x40dbb8
  40dbd8:	xchg   ecx,eax
  40dbd9:	aam    0x66
  40dbdb:	inc    esi
  40dbdc:	push   ecx
  40dbdd:	mov    esp,DWORD PTR [edx+0x15]
  40dbe0:	and    ah,bl
  40dbe2:	movlps xmm6,QWORD PTR [ecx]
  40dbe5:	ror    bh,cl
  40dbe7:	nop
  40dbe8:	fnsave [edi+0x77]
  40dbeb:	or     BYTE PTR [ecx+0x7a6b1e64],dl
  40dbf1:	pop    esi
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	shl    ebx,1
  40dc2d:	leave  
  40dc2e:	push   esi
  40dc2f:	sar    DWORD PTR [ecx],1
  40dc31:	clc    
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xd925cb3e
  40dc3c:	fistp  WORD PTR [ebx+0x61]
  40dc3f:	out    0x14,al
  40dc41:	xlat   BYTE PTR ds:[ebx]
  40dc42:	jbe    0x40dcb0
  40dc44:	xor    DWORD PTR [eax-0xa],0xffffffb2
  40dc48:	adc    DWORD PTR [eax+0xf40f6f3],ebp
  40dc4e:	cmp    al,0xd9
  40dc50:	cli    
  40dc51:	add    BYTE PTR [eax+0x46],cl
  40dc54:	lahf   
  40dc55:	not    BYTE PTR [ecx+0x38]
  40dc58:	sbb    al,0xdf
  40dc5a:	dec    edi
  40dc5b:	dec    esi
  40dc5c:	xor    BYTE PTR [esi+0x5f4a5339],cl
  40dc62:	jne    0x40dc6d
  40dc64:	pop    ebx
  40dc65:	pushf  
  40dc66:	adc    dl,BYTE PTR [edi]
  40dc68:	push   edx
  40dc69:	mov    BYTE PTR [ecx+0x58],bl
  40dc6c:	sub    al,0x4c
  40dc6e:	or     bh,ah
  40dc70:	outs   dx,DWORD PTR ds:[esi]
  40dc71:	or     ebx,DWORD PTR [ecx]
  40dc73:	fsub   st,st(6)
  40dc75:	retf   0x51c0
  40dc78:	out    dx,eax
  40dc79:	ds in  al,0xb6
  40dc7c:	scas   al,BYTE PTR es:[edi]
  40dc7d:	jmp    0x4457:0x1454bf0a
  40dc84:	xor    al,0x47
  40dc86:	jb     0x40dccc
  40dc88:	add    eax,0xaea69d3e
  40dc8d:	add    DWORD PTR [edx+0x13],ebx
  40dc90:	xor    ah,0xe6
  40dc93:	and    eax,0xdeaf63db
  40dc98:	pop    ds
  40dc99:	lea    esi,[esi-0x2f]
  40dc9c:	inc    eax
  40dc9d:	inc    esi
  40dc9e:	sub    ah,BYTE PTR [esi-0x68698945]
  40dca4:	push   esi
  40dca5:	cmp    al,0x71
  40dca7:	inc    edx
  40dca8:	push   ebp
  40dca9:	fwait
  40dcaa:	and    DWORD PTR [ebp-0x7],ecx
  40dcad:	mov    edi,DWORD PTR [esi+0x32]
  40dcb0:	lods   eax,DWORD PTR ds:[esi]
  40dcb1:	mov    esi,0x9ca0d8bf
  40dcb6:	nop
  40dcb7:	xor    DWORD PTR [esi-0x42],ecx
  40dcba:	sbb    BYTE PTR [esi],bl
  40dcbc:	ret    
  40dcbd:	or     dl,dl
  40dcbf:	adc    BYTE PTR [esi+0x8],0x33
  40dcc3:	jecxz  0x40dd2a
  40dcc5:	into   
  40dcc6:	pop    ds
  40dcc7:	push   ebx
  40dcc8:	scas   eax,DWORD PTR es:[edi]
  40dcc9:	arpl   WORD PTR [eax+ebx*2],ax
  40dccc:	(bad)  
  40dccd:	(bad)  
  40dcce:	(bad)  
  40dccf:	not    eax
  40dcd1:	push   bp
  40dcd3:	xchg   DWORD PTR [ebp-0x3a81edf],esp
  40dcd9:	inc    ebp
  40dcda:	sbb    dl,BYTE PTR [ecx]
  40dcdc:	mov    cl,0x5e
  40dcde:	xchg   ebx,eax
  40dcdf:	dec    esi
  40dce0:	mov    bh,0xd5
  40dce2:	(bad)  
  40dce3:	(bad)  
  40dce4:	xlat   BYTE PTR ds:[ebx]
  40dce5:	xor    BYTE PTR [edi+0x1ec239ef],dh
  40dceb:	cmp    eax,0x7931a373
  40dcf0:	in     al,dx
  40dcf1:	add    DWORD PTR [edx-0x2d],0xffffff99
  40dcf5:	dec    edx
  40dcf6:	(bad)  
  40dcf7:	mov    WORD PTR [ebp-0x77],es
  40dcfa:	inc    eax
  40dcfb:	dec    ebp
  40dcfc:	sbb    eax,0xbba4eb0e
  40dd01:	mov    ebx,0xb3db272b
  40dd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd07:	pop    ds
  40dd08:	test   DWORD PTR [ebp-0x24],0xc717386b
  40dd0f:	jno    0x40dc96
  40dd11:	outs   dx,BYTE PTR ds:[esi]
  40dd12:	dec    esi
  40dd13:	std    
  40dd14:	jno    0x40dd86
  40dd16:	cmp    al,0xaa
  40dd18:	xchg   ebp,eax
  40dd19:	repnz dec ebp
  40dd1b:	(bad)  [edx-0x4e]
  40dd1e:	inc    ebx
  40dd1f:	cmp    eax,0x5349d865
  40dd24:	out    dx,al
  40dd25:	cmp    bl,dl
  40dd27:	mov    eax,ds:0xd1ef60ee
  40dd2c:	rcr    BYTE PTR [ecx-0x1f],cl
  40dd2f:	loop   0x40dd9b
  40dd31:	(bad)  
  40dd32:	pop    ss
  40dd33:	daa    
  40dd34:	icebp  
  40dd35:	pop    ebx
  40dd36:	call   ebx
  40dd38:	sub    al,0xf8
  40dd3a:	cmc    
  40dd3b:	stos   DWORD PTR es:[edi],eax
  40dd3c:	rcl    BYTE PTR [ebx],0x67
  40dd3f:	dec    ebp
  40dd40:	jae    0x40dcd3
  40dd42:	mov    ebp,0xd7fa6596
  40dd47:	and    dl,BYTE PTR [edx+0x5799b84d]
  40dd4d:	cld    
  40dd4e:	cmp    eax,ebx
  40dd50:	ins    BYTE PTR es:[edi],dx
  40dd51:	adc    DWORD PTR [eax-0x625db2d8],eax
  40dd57:	push   ebx
  40dd58:	in     al,0xfd
  40dd5a:	xlat   BYTE PTR ds:[ebx]
  40dd5b:	adc    ah,BYTE PTR [ebx+0x112eeef2]
  40dd61:	ja     0x40dd33
  40dd63:	out    0xe5,al
  40dd65:	jecxz  0x40dd91
  40dd67:	add    BYTE PTR [edx-0x46],dh
  40dd6a:	shl    DWORD PTR [ecx-0xd17b276],0xe4
  40dd71:	jle    0x40ddcf
  40dd73:	fisttp DWORD PTR [ebx]
  40dd75:	iret   
  40dd76:	xchg   ebp,eax
  40dd77:	mov    ds:0x5d9ed309,al
  40dd7c:	(bad)  
  40dd7d:	stos   DWORD PTR es:[edi],eax
  40dd7e:	lock sbb ecx,edi
  40dd81:	push   ss
  40dd82:	xchg   edx,eax
  40dd83:	dec    BYTE PTR [eax+esi*1]
  40dd86:	xchg   esi,edx
  40dd88:	mul    DWORD PTR [ebx+0x75]
  40dd8b:	cmp    ch,BYTE PTR [edx+ecx*8+0x4a]
  40dd8f:	aaa    
  40dd90:	leave  
  40dd91:	lahf   
  40dd92:	mov    BYTE PTR [edi],bl
  40dd94:	mov    eax,0x7bdaeee6
  40dd99:	arpl   WORD PTR [ebp+ebx*2-0x22903dd5],sp
  40dda0:	mov    ebp,ds
  40dda2:	aas    
  40dda3:	mov    ecx,DWORD PTR [ecx]
  40dda5:	mov    eax,ds:0x388e6ef0
  40ddaa:	or     DWORD PTR [ebp+eiz*1-0x71983ddb],0x2d
  40ddb2:	mov    ds:0x7c3ffe23,eax
  40ddb7:	push   0xa324fdb1
  40ddbc:	mov    al,0x99
  40ddbe:	jb     0x40ddbe
  40ddc0:	or     DWORD PTR [ebx+0x6e],edx
  40ddc3:	addr16 jno 0x40dd52
  40ddc6:	or     DWORD PTR [esi+0x7ed2fc42],edi
  40ddcc:	sbb    DWORD PTR [edi+0x52e417e5],0x9eaa8a2a
  40ddd6:	sbb    ch,BYTE PTR [eax-0x27495c0f]
  40dddc:	inc    edx
  40dddd:	aaa    
  40ddde:	in     al,0x5d
  40dde0:	sub    dl,BYTE PTR [ebx+0x1b]
  40dde3:	or     ah,cl
  40dde5:	cwde   
  40dde6:	(bad)  
  40dde7:	(bad)  
  40dde8:	xor    BYTE PTR [edx],dh
  40ddea:	dec    ecx
  40ddeb:	shl    DWORD PTR [ecx-0x42],0x24
  40ddef:	xor    BYTE PTR [ebp+0x53],bh
  40ddf2:	mov    cl,0x44
  40ddf4:	popa   
  40ddf5:	jg     0x40de60
  40ddf7:	mov    ecx,0x4cff5acd
  40ddfc:	arpl   WORD PTR [ebx],si
  40ddfe:	pushf  
  40ddff:	push   edx
  40de00:	(bad)  
  40de01:	pop    ss
  40de02:	fld    st(6)
  40de04:	jp     0x40dda2
  40de06:	mov    esp,0x44f9cf07
  40de0b:	cs xchg ebp,eax
  40de0d:	mov    dh,0xdc
  40de0f:	inc    esi
  40de10:	and    BYTE PTR [ecx-0x38],al
  40de13:	pop    edx
  40de14:	repnz mov esp,0xf159ae72
  40de1a:	mov    ebx,0x401239e9
  40de1f:	popa   
  40de20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de21:	pushf  
  40de22:	add    bh,BYTE PTR [edi]
  40de24:	inc    ecx
  40de26:	or     ah,BYTE PTR [ebx]
  40de28:	or     al,0xf6
  40de2a:	and    ebp,DWORD PTR [edx+edx*8+0x19305b0e]
  40de31:	retf   
  40de32:	push   esi
  40de33:	push   ecx
  40de34:	sbb    al,0xfb
  40de36:	fsubr  DWORD PTR [ebx]
  40de38:	add    al,0xb7
  40de3a:	push   ebp
  40de3b:	je     0x40de53
  40de3d:	imul   ebp,DWORD PTR [edx-0x53],0xf991dd87
  40de44:	jp     0x40deac
  40de46:	xchg   esp,eax
  40de47:	push   edx
  40de48:	idiv   BYTE PTR [esi+0x750dd671]
  40de4e:	pop    ecx
  40de4f:	cmp    ah,BYTE PTR [ebx-0xd06fb23]
  40de55:	test   DWORD PTR [edx-0x112342a3],ebx
  40de5b:	dec    edx
  40de5c:	aad    0x77
  40de5e:	xor    bh,bh
  40de60:	xor    BYTE PTR [edx],al
  40de62:	mov    edi,0xde776c8c
  40de67:	mov    ebp,0x1cd9642c
  40de6c:	mov    ebx,0xccf61dd8
  40de71:	inc    ebp
  40de72:	test   eax,0xc9acb244
  40de77:	and    BYTE PTR [eax],dl
  40de79:	stos   BYTE PTR es:[edi],al
  40de7a:	dec    edx
  40de7b:	mov    esi,0xd5dc145d
  40de80:	adc    eax,0x4a944407
  40de85:	repnz sbb al,0xc0
  40de88:	pop    ebp
  40de89:	(bad)  
  40de8a:	and    ecx,DWORD PTR [ebx+0x22]
  40de8d:	mov    esi,0xaef10b57
  40de92:	aas    
  40de93:	push   esi
  40de94:	inc    esi
  40de95:	mov    bh,0x29
  40de97:	mov    edx,DWORD PTR [esi]
  40de99:	std    
  40de9a:	mov    BYTE PTR [ebx-0x6c],cl
  40de9d:	test   BYTE PTR [ecx-0x130adec6],bl
  40dea3:	xor    esp,DWORD PTR [ebp-0x4ec22e1b]
  40dea9:	xor    al,bh
  40deab:	inc    ebp
  40deac:	call   0x4130fe
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x42226d
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	in     eax,dx
  40df1b:	add    eax,0xfc1690df
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0xc441dc58
  40df2a:	or     BYTE PTR [edi-0x73],dh
  40df2d:	dec    ecx
  40df2e:	dec    ecx
  40df2f:	xor    DWORD PTR [eax+0x20f7d5e8],ecx
  40df35:	mov    bh,0x91
  40df37:	sub    DWORD PTR [ebx],ebx
  40df39:	jl     0x40df4c
  40df3b:	mov    DWORD PTR [esi],ebx
  40df3d:	call   DWORD PTR [ebp+0x6f]
  40df40:	mov    al,ds:0x51a07810
  40df45:	shl    DWORD PTR [ebx],cl
  40df47:	xor    al,0xb5
  40df49:	lahf   
  40df4a:	or     BYTE PTR [eax-0x6f5725c2],dh
  40df50:	jns    0x40df98
  40df52:	mov    ds,WORD PTR [ebx+0xbda0973]
  40df58:	sbb    bh,BYTE PTR [esi]
  40df5a:	mov    bh,0xbc
  40df5c:	jmp    0x40df7d
  40df5e:	bnd jmp 0x9a180f0a
  40df64:	mov    al,0x40
  40df66:	daa    
  40df67:	mov    bl,0x45
  40df69:	mov    bh,0x58
  40df6b:	mov    bh,0xb8
  40df6d:	hlt    
  40df6e:	push   ecx
  40df6f:	das    
  40df70:	loopne 0x40df2a
  40df72:	xchg   ebp,eax
  40df73:	jecxz  0x40dfa4
  40df75:	jae    0x40df52
  40df77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df78:	mov    ebp,?
  40df7a:	fwait
  40df7b:	sti    
  40df7c:	mov    ch,0x4a
  40df7e:	ret    0xc6ae
  40df81:	xchg   edx,eax
  40df82:	pop    eax
  40df83:	pop    esi
  40df84:	popf   
  40df85:	lds    esi,FWORD PTR [esi+0x23cb7255]
  40df8b:	(bad)  [esi+0x408505de]
  40df91:	aam    0x8b
  40df93:	ret    
  40df94:	(bad)  
  40df95:	fdiv   QWORD PTR [ecx]
  40df97:	sbb    dl,BYTE PTR ds:0xe6224e3b
  40df9d:	ins    DWORD PTR es:[edi],dx
  40df9e:	dec    ecx
  40df9f:	(bad)  
  40dfa0:	scas   al,BYTE PTR es:[di]
  40dfa2:	push   edi
  40dfa3:	out    dx,al
  40dfa4:	xor    DWORD PTR [ebp-0x41abe198],esp
  40dfaa:	or     al,BYTE PTR [esp+eiz*8-0x18]
  40dfae:	mov    esp,DWORD PTR [eax+0x4f]
  40dfb1:	test   ecx,ebx
  40dfb3:	dec    eax
  40dfb4:	retf   
  40dfb5:	out    0xdf,al
  40dfb7:	mov    dl,0xf7
  40dfb9:	xor    eax,0x256b0284
  40dfbe:	jp     0x40dfb5
  40dfc0:	or     eax,DWORD PTR [edi+edx*1-0x51]
  40dfc4:	mov    ch,0xff
  40dfc6:	in     al,0x97
  40dfc8:	iret   
  40dfc9:	sub    al,0xf7
  40dfcb:	enter  0x46f0,0x27
  40dfcf:	lds    esi,FWORD PTR [edi]
  40dfd1:	mov    dh,0x1
  40dfd3:	mov    cl,0x15
  40dfd5:	fcom   QWORD PTR [ebp+0x76fa7656]
  40dfdb:	fwait
  40dfdc:	mov    ds,WORD PTR [edx-0x53]
  40dfdf:	inc    esp
  40dfe0:	push   ds
  40dfe1:	sbb    ah,BYTE PTR [esi]
  40dfe3:	test   BYTE PTR [ebx-0x3e],ah
  40dfe6:	fs call 0x4cfe9852
  40dfec:	in     eax,dx
  40dfed:	hlt    
  40dfee:	inc    eax
  40dfef:	cld    
  40dff0:	inc    edx
  40dff1:	lods   al,BYTE PTR gs:[esi]
  40dff3:	int    0x6
  40dff5:	jbe    0x40df9a
  40dff7:	fwait
  40dff8:	pop    esi
  40dff9:	stos   DWORD PTR es:[edi],eax
  40dffa:	add    DWORD PTR [edx],edx
  40dffc:	cld    
  40dffd:	js     0x40e034
  40dfff:	retf   
  40e000:	adc    ebp,DWORD PTR [ebx-0x7a]
  40e003:	sti    
  40e004:	(bad)  [ebp+0x46760636]
  40e00a:	jecxz  0x40dfee
  40e00c:	and    eax,0x3e0e90e5
  40e011:	pop    edx
  40e012:	test   DWORD PTR [ebx],ebx
  40e014:	scas   eax,DWORD PTR es:[edi]
  40e015:	popf   
  40e016:	jb     0x40e01e
  40e018:	mov    eax,ds:0xedf5beb4
  40e01d:	push   0xafb14a9c
  40e022:	add    DWORD PTR ds:0x6545ad45,eax
  40e028:	add    eax,0x185a013b
  40e02d:	inc    edx
  40e02e:	mov    dh,0x77
  40e030:	adc    eax,0xc3509686
  40e035:	mov    dx,0x6019
  40e039:	icebp  
  40e03a:	push   eax
  40e03b:	sub    eax,DWORD PTR [esi+0x3]
  40e03e:	repz sbb BYTE PTR ds:0x1675da24,0xe6
  40e046:	in     al,0xc4
  40e048:	add    dh,BYTE PTR [edx+0x2]
  40e04b:	push   esi
  40e04c:	loop   0x40dffb
  40e04e:	mov    ebx,0x6fe3ee97
  40e054:	imul   ecx,DWORD PTR [ebx+ebp*2-0x1a3108a],0x8100f9a2
  40e05f:	icebp  
  40e060:	mov    bh,BYTE PTR [esi+edi*2+0x35]
  40e064:	loope  0x40e02a
  40e066:	cdq    
  40e067:	retf   
  40e068:	clc    
  40e069:	or     edx,esi
  40e06b:	jne    0x40e01a
  40e06d:	sub    ebx,ebp
  40e06f:	leave  
  40e070:	sub    BYTE PTR [ebp-0x11],al
  40e073:	dec    esp
  40e074:	and    BYTE PTR [ebp+0x16],cl
  40e077:	jge    0x40e0b5
  40e079:	sub    ah,BYTE PTR [ebp-0x21]
  40e07c:	sbb    eax,0x9369d437
  40e081:	in     al,dx
  40e082:	stc    
  40e083:	out    dx,eax
  40e084:	mov    cl,0xb0
  40e086:	call   FWORD PTR [eax+0x25]
  40e089:	sub    al,0x77
  40e08b:	mov    ebx,0x6648a115
  40e090:	out    0xa7,al
  40e092:	(bad)  
  40e093:	sti    
  40e094:	inc    edx
  40e095:	ss mov al,0xec
  40e098:	inc    edi
  40e099:	inc    bl
  40e09b:	or     ebx,ebp
  40e09d:	adc    BYTE PTR [ecx],ah
  40e09f:	test   al,0x70
  40e0a1:	retf   
  40e0a2:	push   esi
  40e0a3:	lock fisub WORD PTR [eax]
  40e0a6:	call   0xa617:0x22bd196e
  40e0ad:	stos   BYTE PTR es:[edi],al
  40e0ae:	mov    gs,edi
  40e0b0:	test   eax,0x62c3725b
  40e0b5:	es cmp al,0xd5
  40e0b8:	sti    
  40e0b9:	or     al,0x27
  40e0bb:	cmp    edi,ecx
  40e0bd:	ss enter 0x1c69,0x9c
  40e0c2:	icebp  
  40e0c3:	jge    0x40e0a3
  40e0c5:	cwde   
  40e0c6:	out    dx,eax
  40e0c7:	fisttp DWORD PTR [edi]
  40e0c9:	inc    edx
  40e0ca:	aas    
  40e0cb:	lods   eax,DWORD PTR ds:[esi]
  40e0cc:	(bad)  
  40e0cd:	(bad)  
  40e0cf:	jp     0x40e12a
  40e0d1:	dec    edi
  40e0d2:	xor    al,0xb8
  40e0d4:	(bad)  
  40e0d5:	lock aaa 
  40e0d7:	aaa    
  40e0d8:	sahf   
  40e0d9:	iret   
  40e0da:	out    0x90,eax
  40e0dc:	arpl   WORD PTR [edx+0x6a],bp
  40e0df:	pop    ecx
  40e0e0:	imul   ebx,DWORD PTR [esi+0x160bd984],0x42
  40e0e7:	mov    dh,0x94
  40e0e9:	fs call 0x80de:0x725c2f49
  40e0f1:	jg     0x40e153
  40e0f3:	shl    BYTE PTR [edx+0x14],cl
  40e0f6:	mov    al,ds:0x489952d7
  40e0fb:	mov    ebp,0xda3f8f94
  40e100:	adc    al,0x5d
  40e102:	or     eax,0x357e43d9
  40e107:	or     esp,ecx
  40e109:	sbb    al,0x4e
  40e10b:	push   es
  40e10c:	xlat   BYTE PTR ds:[ebx]
  40e10d:	out    dx,al
  40e10e:	out    0x5f,eax
  40e110:	out    0x8d,al
  40e112:	int    0x13
  40e114:	push   ss
  40e115:	jb     0x40e0db
  40e117:	add    al,0x29
  40e119:	outs   dx,DWORD PTR ds:[esi]
  40e11a:	test   eax,0xf17f4434
  40e11f:	jbe    0x40e0e0
  40e121:	and    cl,ah
  40e123:	loopne 0x40e198
  40e125:	mov    edx,0x8661d7cc
  40e12a:	mov    edx,0x5c1f0a31
  40e12f:	retf   0x5c7
  40e132:	int3   
  40e133:	jge    0x40e12f
  40e135:	inc    ebp
  40e136:	int    0x9b
  40e138:	sub    eax,0x81ac79e4
  40e13d:	rcl    BYTE PTR [edx+esi*1],cl
  40e140:	shr    edx,0x6c
  40e143:	adc    BYTE PTR [edx],0xf4
  40e146:	loopne 0x40e165
  40e148:	jnp    0x40e15d
  40e14a:	xchg   edx,eax
  40e14b:	adc    eax,DWORD PTR [eax+0x7b3ea110]
  40e151:	mov    ebx,0xd96a4367
  40e156:	add    BYTE PTR [eax+ebp*2],0x59
  40e15a:	in     eax,0xf6
  40e15c:	aam    0xb6
  40e15e:	cwde   
  40e15f:	xchg   esi,eax
  40e160:	or     ah,BYTE PTR [ebx+eax*4-0x2]
  40e164:	add    eax,0xb493e03d
  40e169:	push   ebp
  40e16a:	mov    ebx,0x8c4b599e
  40e16f:	pop    ecx
  40e170:	inc    ebx
  40e171:	dec    ecx
  40e172:	imul   edx,edi,0xffffffea
  40e175:	cmp    al,0x65
  40e177:	xchg   ebp,eax
  40e178:	(bad)  
  40e17c:	mov    ch,0xe
  40e17e:	lods   al,BYTE PTR ds:[esi]
  40e17f:	aaa    
  40e180:	sar    ebx,0x88
  40e183:	inc    esi
  40e184:	push   esi
  40e185:	jmp    0x8fdd:0x9379f33d
  40e18c:	pop    ebp
  40e18d:	jne    0x40e14a
  40e18f:	neg    DWORD PTR [ebx-0x2985acbc]
  40e195:	cs in  al,0xfb
  40e198:	mov    DWORD PTR [esi],eax
  40e19a:	mov    DWORD PTR [ebp-0x20],0x3354
  40e1a1:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  40e1a8:	mov    DWORD PTR [ebp-0x18],0x3d36
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	fwait
  40e1d6:	mov    edi,0x2f1dd40
  40e1db:	mov    esi,0xbec299be
  40e1e0:	mov    esi,0x8abef2de
  40e1e5:	cmc    
  40e1e6:	jo     0x40e1af
  40e1e8:	xor    DWORD PTR [ecx],esp
  40e1ea:	add    bh,BYTE PTR [ebx+ebp*4]
  40e1ed:	add    BYTE PTR [ebx-0xefe63a8],0x4f
  40e1f4:	cwde   
  40e1f5:	push   es
  40e1f6:	add    al,0x38
  40e1f8:	add    eax,0xd5b65331
  40e1fd:	mov    edx,ss
  40e1ff:	ss inc ebp
  40e201:	push   ds
  40e202:	icebp  
  40e203:	daa    
  40e204:	jge    0x40e188
  40e206:	enter  0xe5f2,0x8a
  40e20a:	inc    edx
  40e20b:	cmp    al,0xbb
  40e20d:	pop    ss
  40e20e:	pop    es
  40e20f:	adc    BYTE PTR [eax],dh
  40e211:	repz inc eax
  40e213:	mov    ebp,0xe776fe53
  40e218:	sbb    BYTE PTR [edi],0xee
  40e21b:	mov    dl,0x2a
  40e21d:	in     al,0xdf
  40e21f:	push   ss
  40e220:	xchg   BYTE PTR [edx],ah
  40e222:	jp     0x40e1d7
  40e224:	mov    ?,WORD PTR [ebp+0x555e96c4]
  40e22a:	fsubp  st(2),st
  40e22c:	push   ebx
  40e22d:	jle    0x40e29f
  40e22f:	mov    dh,0xf2
  40e231:	sahf   
  40e232:	xchg   BYTE PTR [ebx-0x1d],dh
  40e235:	in     eax,dx
  40e236:	mov    bh,0xf6
  40e238:	ror    DWORD PTR [esi-0x31],1
  40e23b:	pop    edx
  40e23c:	rcr    DWORD PTR ds:0x4c0181cb,1
  40e242:	pop    esp
  40e243:	xchg   ebx,eax
  40e244:	push   0xffffffe9
  40e246:	in     al,0x55
  40e248:	outs   dx,DWORD PTR ds:[esi]
  40e249:	adc    eax,0xc415266f
  40e24e:	fadd   QWORD PTR [ebx+0x2994c4fa]
  40e254:	push   ebp
  40e255:	inc    eax
  40e256:	addr16 push ds
  40e258:	xchg   ebx,eax
  40e259:	ficomp DWORD PTR [esi-0x5612e212]
  40e25f:	scas   al,BYTE PTR es:[edi]
  40e260:	repz jle 0x40e1ea
  40e263:	sbb    BYTE PTR [edx-0x6fc42a72],bl
  40e269:	repnz popa 
  40e26b:	cmp    al,0x1a
  40e26d:	(bad)  
  40e26e:	adc    al,0xc9
  40e270:	(bad)  
  40e271:	aaa    
  40e272:	adc    edi,DWORD PTR [esi-0x5126e62c]
  40e278:	pop    ecx
  40e279:	push   ebp
  40e27a:	test   BYTE PTR [ecx+eiz*2+0x71],ch
  40e27e:	int3   
  40e27f:	pop    ds
  40e280:	cmp    bh,0x22
  40e283:	add    eax,0x7fea4fae
  40e288:	in     eax,dx
  40e289:	mov    esi,0xaf26aff5
  40e28e:	pop    es
  40e28f:	out    dx,eax
  40e290:	cmp    ecx,ebx
  40e292:	mov    dh,0x6c
  40e294:	fwait
  40e295:	jmp    0x40e2f5
  40e297:	retf   0x3ea3
  40e29a:	ds push edx
  40e29c:	jle    0x40e307
  40e29e:	push   ds
  40e29f:	imul   eax,DWORD PTR [esi+0x7e0b39cb],0x78
  40e2a6:	loopne 0x40e2a1
  40e2a8:	mov    dh,0x35
  40e2aa:	sub    al,BYTE PTR [ebx+0xa97afc3]
  40e2b0:	xchg   edx,eax
  40e2b1:	push   ebx
  40e2b2:	mov    ebx,DWORD PTR [edi+edx*1]
  40e2b5:	scas   eax,DWORD PTR es:[edi]
  40e2b6:	and    ch,BYTE PTR [edx+ebp*8+0x53]
  40e2ba:	loop   0x40e2d4
  40e2bc:	cmp    al,0x93
  40e2bf:	jg     0x40e31b
  40e2c1:	fcomp  QWORD PTR [ecx+0x7e]
  40e2c4:	dec    esi
  40e2c5:	stos   BYTE PTR es:[edi],al
  40e2c6:	mov    edx,0x8b205a51
  40e2cb:	fsubr  DWORD PTR [esi-0x1e02b555]
  40e2d1:	call   0x8001:0x4140dce1
  40e2d8:	arpl   WORD PTR [edi+0x24],di
  40e2db:	jmp    0x40e28c
  40e2dd:	push   esp
  40e2de:	in     eax,0xb3
  40e2e0:	and    bh,BYTE PTR [ecx*1-0x4d42f851]
  40e2e7:	push   ebx
  40e2e8:	shl    BYTE PTR [ebx],0x78
  40e2eb:	mov    eax,ds:0x570656da
  40e2f0:	je     0x40e2f2
  40e2f2:	fnstsw WORD PTR [ebx+0x43930a46]
  40e2f8:	mov    ecx,0xad69e44
  40e2fd:	jecxz  0x40e2c8
  40e2ff:	xchg   ebx,eax
  40e300:	dec    ebx
  40e301:	ins    BYTE PTR es:[edi],dx
  40e302:	in     al,0x70
  40e304:	clc    
  40e305:	loopne 0x40e2bb
  40e307:	mov    bh,BYTE PTR [edx-0x59]
  40e30a:	je     0x40e37c
  40e30c:	dec    edi
  40e30d:	dec    edi
  40e30e:	mov    ah,0x89
  40e310:	push   0xaa77c77f
  40e315:	push   0x1a
  40e317:	push   edi
  40e318:	(bad)  
  40e319:	push   eax
  40e31a:	int3   
  40e31b:	pop    ss
  40e31c:	xor    bl,BYTE PTR [eax+ecx*8+0x64ae41d]
  40e323:	popf   
  40e324:	mov    ah,cl
  40e326:	xchg   ebp,eax
  40e327:	cmp    al,0x25
  40e329:	add    ch,cl
  40e32b:	lods   eax,DWORD PTR ds:[esi]
  40e32c:	xchg   ecx,eax
  40e32d:	add    al,0x78
  40e32f:	neg    BYTE PTR [edi-0x1c]
  40e332:	cli    
  40e333:	rcr    ch,1
  40e335:	in     al,0x41
  40e337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e338:	xchg   ebx,eax
  40e339:	xor    DWORD PTR [edi+0x7971ceff],ebp
  40e33f:	adc    esi,DWORD PTR [ebx-0x39]
  40e342:	push   ebx
  40e343:	into   
  40e344:	jmp    0x40e2f0
  40e346:	adc    BYTE PTR [ecx],ch
  40e348:	mov    ecx,DWORD PTR [esi]
  40e34a:	inc    esi
  40e34b:	jg     0x40e391
  40e34d:	xor    eax,0xeefdaebc
  40e352:	push   0xffffff85
  40e354:	cdq    
  40e355:	cmc    
  40e356:	mov    edi,0x7e28b7e4
  40e35b:	(bad)  
  40e35c:	shl    BYTE PTR [edx+esi*1-0x6da7f87d],cl
  40e363:	push   0xffffffeb
  40e365:	mov    eax,ds:0xf7609898
  40e36a:	dec    ecx
  40e36b:	scas   eax,DWORD PTR es:[edi]
  40e36c:	xchg   dx,ax
  40e36e:	jmp    0x1166:0x46484ecc
  40e375:	jns    0x40e3ed
  40e377:	shl    BYTE PTR [edx],0x6b
  40e37a:	and    eax,0xe2ed31d
  40e37f:	(bad)  
  40e380:	aaa    
  40e381:	in     al,dx
  40e382:	push   esi
  40e383:	call   0xc556d69e
  40e388:	js     0x40e3fd
  40e38a:	or     esp,DWORD PTR [ebp+0x10]
  40e38d:	push   ecx
  40e38e:	push   esp
  40e38f:	(bad)  
  40e390:	add    BYTE PTR [edi-0x3d],bl
  40e393:	das    
  40e394:	cmp    ch,ah
  40e396:	mov    esp,0x575c917c
  40e39b:	or     BYTE PTR [ebp+0x67c13a32],ch
  40e3a1:	xchg   DWORD PTR [eax+0x4e3ffba0],esi
  40e3a7:	xchg   esi,eax
  40e3a8:	xchg   cl,bh
  40e3aa:	mov    ecx,0x581e2e1c
  40e3af:	add    DWORD PTR [esi+esi*2+0x16],ebx
  40e3b3:	out    dx,eax
  40e3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b5:	scas   al,BYTE PTR es:[di]
  40e3b7:	call   0x1804157f
  40e3bc:	scas   eax,DWORD PTR es:[edi]
  40e3bd:	sbb    ebx,DWORD PTR [ecx]
  40e3bf:	sbb    BYTE PTR [esi+eax*4+0x3c],bl
  40e3c3:	cwde   
  40e3c4:	push   ds
  40e3c5:	jmp    0x59562c8c
  40e3ca:	scas   al,BYTE PTR es:[edi]
  40e3cb:	xchg   ebp,eax
  40e3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3cd:	pusha  
  40e3ce:	fsubr  QWORD PTR [eax-0x70]
  40e3d1:	aaa    
  40e3d2:	ss dec esi
  40e3d4:	inc    ebp
  40e3d5:	jg     0x40e3d6
  40e3d7:	dec    edi
  40e3d8:	dec    ebp
  40e3d9:	mov    ds:0xd6b199e4,al
  40e3de:	inc    ecx
  40e3df:	outs   dx,DWORD PTR ds:[esi]
  40e3e0:	mov    bh,0x4f
  40e3e2:	scas   eax,DWORD PTR es:[edi]
  40e3e3:	pop    eax
  40e3e4:	jle    0x40e36a
  40e3e6:	and    esi,DWORD PTR [edi-0x3e]
  40e3e9:	pop    eax
  40e3ea:	out    dx,al
  40e3eb:	mov    BYTE PTR [ecx+0x3],bh
  40e3ee:	stos   DWORD PTR es:[edi],eax
  40e3ef:	inc    edi
  40e3f0:	bound  edi,QWORD PTR [ecx+0x3e179d23]
  40e3f6:	retf   
  40e3f7:	sbb    al,0xff
  40e3f9:	std    
  40e3fa:	dec    eax
  40e3fb:	adc    esi,DWORD PTR [edx-0x320472f]
  40e401:	mov    edx,0xc6842b95
  40e406:	jb     0x40e42b
  40e408:	nop
  40e409:	pop    esp
  40e40a:	sub    edi,esp
  40e40c:	shl    esi,1
  40e40e:	xor    edi,DWORD PTR [ecx+0x6b0d37f7]
  40e414:	and    eax,0xe1eb976b
  40e419:	jo     0x40e496
  40e41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41c:	stos   DWORD PTR es:[edi],eax
  40e41d:	mov    edx,0x31e36a5f
  40e422:	jnp    0x40e48c
  40e424:	rcr    DWORD PTR [ecx],1
  40e426:	xor    al,0x15
  40e428:	sbb    al,0xbd
  40e42a:	dec    esp
  40e42b:	pop    ss
  40e42c:	lods   al,BYTE PTR ds:[esi]
  40e42d:	aaa    
  40e42e:	push   es
  40e42f:	push   ebx
  40e430:	rol    BYTE PTR [eax+0x2a],cl
  40e433:	and    ah,bl
  40e435:	mov    ds:0x4c5baf05,al
  40e43a:	add    al,0xb7
  40e43c:	or     BYTE PTR [ecx+esi*4-0x4d],0x41
  40e441:	xor    DWORD PTR [eax+0x1051905c],eax
  40e447:	adc    edx,edi
  40e449:	xchg   edx,eax
  40e44a:	mov    ebx,ebx
  40e44c:	sbb    edi,DWORD PTR ds:0x563b2d61
  40e452:	ins    BYTE PTR es:[edi],dx
  40e453:	inc    edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x42226d
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fst    QWORD PTR [edi+0x63]
  40e546:	outs   dx,BYTE PTR ds:[esi]
  40e547:	(bad)  
  40e549:	push   es
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0x8a8b62ee
  40e554:	in     al,0x3f
  40e556:	pop    ebp
  40e557:	push   ecx
  40e558:	ds aas 
  40e55a:	jle    0x40e5c2
  40e55c:	inc    ebp
  40e55d:	inc    esp
  40e55e:	pop    ebp
  40e55f:	push   ds
  40e560:	icebp  
  40e561:	cmp    BYTE PTR [esi],0xd1
  40e564:	add    ch,BYTE PTR [ecx-0x6f1a03cd]
  40e56a:	push   eax
  40e56b:	sahf   
  40e56c:	dec    ecx
  40e56d:	mov    ebx,0x67ba985e
  40e572:	mov    bh,0x7a
  40e574:	fs mov ebx,ds
  40e577:	pop    edx
  40e578:	(bad)  [ecx+0x30]
  40e57b:	ja     0x40e5fc
  40e57d:	push   ebp
  40e57e:	fist   WORD PTR [ebx+0x7]
  40e581:	pop    esp
  40e582:	in     al,dx
  40e583:	dec    esp
  40e584:	jo     0x40e554
  40e586:	and    al,0x89
  40e588:	dec    edi
  40e589:	and    eax,0xf572df13
  40e58e:	push   esi
  40e58f:	cli    
  40e590:	xchg   edx,eax
  40e591:	stos   DWORD PTR es:[edi],eax
  40e592:	push   ss
  40e593:	pop    es
  40e594:	enter  0xd4f5,0x83
  40e598:	push   esp
  40e599:	cli    
  40e59a:	push   cs
  40e59b:	pushf  
  40e59c:	sahf   
  40e59d:	mov    eax,ds:0x182d19ed
  40e5a2:	sbb    al,ch
  40e5a4:	test   DWORD PTR [ebx-0x6dc37717],esp
  40e5aa:	rol    BYTE PTR gs:[edi],cl
  40e5ad:	test   BYTE PTR [esi-0x10],0x1
  40e5b1:	dec    esi
  40e5b2:	xor    edi,DWORD PTR [edx+0x519ce4ae]
  40e5b8:	in     eax,0x65
  40e5ba:	pop    edi
  40e5bb:	jbe    0x40e566
  40e5bd:	xchg   edx,eax
  40e5be:	xchg   ebx,eax
  40e5bf:	repz scas al,BYTE PTR es:[edi]
  40e5c1:	into   
  40e5c2:	cmp    al,0x82
  40e5c4:	mov    edi,0x28c7a582
  40e5c9:	inc    esi
  40e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5cb:	pushf  
  40e5cc:	in     al,0x4f
  40e5ce:	int    0x77
  40e5d0:	cmp    ch,ch
  40e5d2:	xchg   edx,eax
  40e5d3:	enter  0x977f,0xf2
  40e5d7:	xchg   ebx,eax
  40e5d8:	aas    
  40e5d9:	push   0xc05d0848
  40e5de:	sar    BYTE PTR [ebx+0x36],1
  40e5e1:	add    cl,BYTE PTR [edx+0x60]
  40e5e4:	sbb    eax,0xfd566bb7
  40e5e9:	pop    es
  40e5ea:	adc    ebp,ebp
  40e5ec:	lea    edx,[edx+0x47d652f2]
  40e5f2:	pop    edi
  40e5f3:	stc    
  40e5f4:	jmp    0xa4bcad79
  40e5f9:	aad    0x3d
  40e5fb:	lods   eax,DWORD PTR ds:[esi]
  40e5fc:	add    al,0x60
  40e5fe:	or     DWORD PTR [ebx],esi
  40e600:	je     0x40e65c
  40e602:	pusha  
  40e603:	inc    eax
  40e604:	add    bl,BYTE PTR [eax]
  40e606:	popa   
  40e607:	add    eax,0xd7d6c671
  40e60c:	arpl   WORD PTR [esi],di
  40e60e:	xchg   esp,eax
  40e60f:	push   ebx
  40e610:	xchg   edi,eax
  40e611:	out    0xf9,eax
  40e613:	int    0xcf
  40e615:	call   0xebe3521d
  40e61a:	pop    DWORD PTR [esi+0x27b339f1]
  40e620:	je     0x40e69a
  40e622:	icebp  
  40e623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e624:	xchg   ecx,eax
  40e625:	pmulhuw mm1,QWORD PTR [esi]
  40e628:	pop    ecx
  40e629:	pop    eax
  40e62a:	cmp    eax,0xfc97ddaa
  40e62f:	cdq    
  40e630:	and    bl,dl
  40e632:	cmc    
  40e633:	cmp    BYTE PTR [edi-0x3b],0xba
  40e637:	fnstsw WORD PTR [ecx-0x6639ee1]
  40e63d:	cwde   
  40e63e:	cmp    ch,BYTE PTR [edi-0x55]
  40e641:	add    esi,0xffffff91
  40e644:	push   0xd1241f14
  40e649:	inc    ebp
  40e64a:	imul   BYTE PTR [ebp-0x7e7c81ee]
  40e650:	dec    eax
  40e651:	lds    ebx,FWORD PTR [esi+0x2aac1294]
  40e657:	aad    0xe7
  40e659:	(bad)  
  40e65a:	jns    0x40e651
  40e65c:	mov    ebp,0xc2353d6b
  40e661:	jmp    0xadc2fae3
  40e666:	xor    eax,0x61e176c5
  40e66b:	(bad)  
  40e66c:	ror    DWORD PTR [ecx],cl
  40e66e:	mov    ds:0xc8e040f7,eax
  40e673:	or     esp,DWORD PTR [eax]
  40e675:	cmp    eax,edi
  40e677:	xor    al,0xa2
  40e679:	mov    ebp,0xfe818a64
  40e67e:	jnp    0x40e6ef
  40e680:	das    
  40e681:	popf   
  40e682:	loop   0x40e6b1
  40e684:	outs   dx,BYTE PTR ds:[esi]
  40e685:	adc    ecx,DWORD PTR [ecx+0x3f]
  40e688:	adc    DWORD PTR [esi-0x35dce5c0],esi
  40e68e:	mov    eax,ds:0x337a63c9
  40e693:	clc    
  40e694:	mov    BYTE PTR [edi-0x4e],al
  40e697:	popa   
  40e698:	jnp    0x40e6ba
  40e69a:	hlt    
  40e69b:	xchg   dh,bh
  40e69d:	and    bl,BYTE PTR [ebp+0x6a14bdc9]
  40e6a3:	scas   al,BYTE PTR es:[edi]
  40e6a4:	jp     0x40e6de
  40e6a6:	cmp    BYTE PTR [ebp-0x62],dl
  40e6a9:	xchg   edx,eax
  40e6aa:	push   ebp
  40e6ab:	push   ds
  40e6ac:	add    al,0xac
  40e6ae:	ficom  WORD PTR [edi]
  40e6b0:	fcom   QWORD PTR [edi-0x75c16621]
  40e6b6:	jle    0x40e70f
  40e6b8:	push   es
  40e6b9:	daa    
  40e6ba:	arpl   WORD PTR [edi+0x17f5044f],cx
  40e6c0:	imul   esi,DWORD PTR [ecx-0x59],0xc
  40e6c4:	retf   0x6966
  40e6c7:	rcl    ebx,0x7c
  40e6ca:	sar    DWORD PTR [edx+0x3661b786],0x6b
  40e6d1:	test   al,0x2c
  40e6d3:	add    al,0xe3
  40e6d5:	and    al,0x19
  40e6d7:	in     al,dx
  40e6d8:	jno    0x40e710
  40e6da:	inc    ecx
  40e6db:	jno    0x40e736
  40e6dd:	pop    ss
  40e6de:	imul   edx,DWORD PTR [eax+0x72888823],0xec441e21
  40e6e8:	iret   
  40e6e9:	xchg   esp,eax
  40e6ea:	jae    0x40e6a9
  40e6ec:	cs mov esp,0xc81df1d1
  40e6f2:	mov    WORD PTR [edi+0x9],cs
  40e6f5:	sbb    ebp,ecx
  40e6f7:	mov    al,ds:0x86cfc023
  40e6fc:	lods   eax,DWORD PTR ds:[esi]
  40e6fd:	in     al,0x29
  40e6ff:	xchg   ebx,eax
  40e700:	push   cs
  40e701:	sub    dh,ch
  40e703:	sbb    BYTE PTR [ecx+0x4c],al
  40e706:	add    DWORD PTR [ebx+0x25],0x291d9f82
  40e70d:	ss iret 
  40e70f:	mov    ecx,DWORD PTR [eax+0x30]
  40e712:	add    eax,0x8ee789a0
  40e717:	push   esp
  40e718:	pop    ss
  40e719:	dec    ebp
  40e71a:	pusha  
  40e71b:	dec    esp
  40e71c:	ret    0x9247
  40e71f:	rcl    BYTE PTR [ebx],cl
  40e721:	adc    esi,esp
  40e723:	rcr    DWORD PTR [edi-0x5df842a7],0xc5
  40e72a:	cwde   
  40e72b:	cmp    BYTE PTR [ecx+0x5b],al
  40e72e:	retf   0x509a
  40e731:	enter  0xedb5,0x55
  40e735:	xor    eax,0x7801b89a
  40e73a:	leave  
  40e73b:	push   ds
  40e73c:	dec    edx
  40e73d:	sub    bl,dh
  40e73f:	mov    ah,0xdd
  40e741:	jmp    FWORD PTR [edx-0x5c079316]
  40e747:	dec    ebx
  40e748:	or     ebp,DWORD PTR [edi-0x1546c86]
  40e74e:	mov    bl,0x98
  40e750:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e752:	in     eax,dx
  40e753:	pop    ss
  40e754:	mov    edx,0x5cea84a8
  40e759:	jbe    0x40e730
  40e75b:	(bad)  
  40e75c:	popa   
  40e75d:	repz jle 0x40e7c5
  40e760:	loopne 0x40e7b9
  40e762:	jmp    0xb1f6a7a8
  40e767:	bnd jg 0x40e719
  40e76a:	mov    ds:0xd6760ae5,eax
  40e76f:	sbb    eax,0xa210017d
  40e774:	sbb    ecx,DWORD PTR [eax+0x7cfc0787]
  40e77a:	out    dx,eax
  40e77b:	(bad)  
  40e77c:	neg    DWORD PTR [ecx+0x2]
  40e77f:	int    0x60
  40e781:	dec    ebx
  40e782:	leave  
  40e783:	mov    esp,0x2633397a
  40e788:	xchg   DWORD PTR [ebx-0x6e],ebp
  40e78b:	mov    ah,cl
  40e78d:	sub    BYTE PTR [esi-0x24],0x40
  40e791:	xor    al,BYTE PTR ds:0xc4e1cd91
  40e797:	mov    ah,0xe6
  40e799:	pop    ds
  40e79a:	mov    bl,0x42
  40e79c:	retf   0xd110
  40e79f:	jg     0x40e72b
  40e7a1:	cld    
  40e7a2:	(bad)  
  40e7a4:	sbb    al,0x48
  40e7a6:	or     BYTE PTR [ecx+edx*4],cl
  40e7a9:	xchg   ebp,eax
  40e7aa:	rol    DWORD PTR [edx-0x6],0x28
  40e7ae:	add    al,0x36
  40e7b0:	mov    bl,BYTE PTR [eax+ebp*8-0x27]
  40e7b4:	sub    al,0xa2
  40e7b6:	lock sar BYTE PTR [ecx+0x41],cl
  40e7ba:	stos   BYTE PTR es:[edi],al
  40e7bb:	xchg   esi,eax
  40e7bc:	cmp    eax,0x9b9bd7cc
  40e7c1:	int3   
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax-0xd552e31]
  40e85d:	iret   
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0xc39747c5
  40e86a:	into   
  40e86b:	xlat   BYTE PTR ds:[ebx]
  40e86c:	jno    0x40e8cd
  40e86e:	mov    eax,ds:0x9d5e81e3
  40e873:	(bad)  
  40e874:	loopne 0x40e859
  40e876:	push   edx
  40e877:	pop    eax
  40e878:	les    esi,FWORD PTR [esi]
  40e87a:	cmp    bh,BYTE PTR [edi]
  40e87c:	daa    
  40e87d:	rol    edi,1
  40e87f:	pushf  
  40e880:	je     0x40e84e
  40e882:	ss jno 0x40e8db
  40e885:	and    edi,DWORD PTR [esi+0x63ed425a]
  40e88b:	es ret 
  40e88d:	iret   
  40e88e:	mov    eax,ds:0x5bebb00e
  40e893:	mov    ah,0xff
  40e895:	retf   0x62e0
  40e898:	and    eax,0x44346d09
  40e89d:	add    al,0x28
  40e89f:	pop    ecx
  40e8a0:	xchg   BYTE PTR [esi+0x51],al
  40e8a3:	sbb    ah,BYTE PTR [edi+0x5793d192]
  40e8a9:	jns    0x40e89a
  40e8ab:	adc    ebp,ebx
  40e8ad:	icebp  
  40e8ae:	xor    DWORD PTR fs:[edi+0x4f33692],ebp
  40e8b5:	neg    DWORD PTR [edx]
  40e8b7:	arpl   WORD PTR [esi+0x2e9a2e8b],bp
  40e8bd:	push   edx
  40e8be:	mov    al,0x11
  40e8c0:	bound  esp,QWORD PTR [edx+0x51]
  40e8c3:	out    dx,eax
  40e8c4:	add    DWORD PTR [ecx-0x42b0b17c],0xa4a02947
  40e8ce:	test   eax,0x4c75eaac
  40e8d3:	or     eax,0xd5286332
  40e8d8:	xchg   esi,eax
  40e8d9:	in     al,0x9f
  40e8db:	inc    esi
  40e8dc:	in     eax,0x28
  40e8de:	push   esp
  40e8df:	mov    cl,0x71
  40e8e2:	pop    ebp
  40e8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e4:	xor    eax,0x5ac9b3b4
  40e8e9:	mov    dl,BYTE PTR [edx]
  40e8eb:	fwait
  40e8ec:	or     ebx,0x4bb6d0d8
  40e8f2:	pop    eax
  40e8f3:	and    al,0x8e
  40e8f5:	xchg   edx,eax
  40e8f6:	inc    esi
  40e8f7:	inc    esi
  40e8f8:	clc    
  40e8f9:	dec    esp
  40e8fa:	sahf   
  40e8fb:	xor    ebp,DWORD PTR [eax+0x28]
  40e8fe:	(bad)
  40e903:	mov    BYTE PTR [eax+edi*1],cl
  40e906:	fist   DWORD PTR [ebp-0x40]
  40e909:	push   esi
  40e90a:	and    ch,BYTE PTR [eax]
  40e90c:	xlat   BYTE PTR ds:[ebx]
  40e90d:	cdq    
  40e90e:	fidivr WORD PTR [edi+0x50]
  40e911:	sbb    edi,eax
  40e913:	loope  0x40e94d
  40e915:	shl    dh,cl
  40e917:	imul   esi,DWORD PTR [edi-0x4f],0x22
  40e91b:	and    al,0x7a
  40e91d:	scas   al,BYTE PTR es:[edi]
  40e91e:	sbb    DWORD PTR [esi-0x6bd360e3],esi
  40e924:	fidiv  DWORD PTR [edx+0x2d]
  40e927:	sub    al,0x67
  40e929:	fstp   QWORD PTR [esi+ecx*8+0x32]
  40e92d:	int3   
  40e92e:	inc    eax
  40e92f:	dec    edx
  40e930:	jl     0x40e8c0
  40e932:	std    
  40e933:	push   0x64
  40e935:	pop    edx
  40e936:	aad    0xad
  40e938:	mov    eax,0x3b436deb
  40e93d:	mov    WORD PTR [esi],fs
  40e93f:	pop    edi
  40e940:	cwde   
  40e941:	std    
  40e942:	nop
  40e943:	repz int 0x49
  40e946:	push   ss
  40e947:	(bad)  
  40e948:	jno    0x40e93e
  40e94a:	sbb    DWORD PTR ds:0x29683ae4,esi
  40e950:	test   al,0xe0
  40e952:	xchg   ebx,eax
  40e953:	jg     0x40e99b
  40e955:	fld    DWORD PTR ds:0xe769f782
  40e95b:	loop   0x40e99d
  40e95d:	mov    cl,0x36
  40e95f:	out    dx,eax
  40e960:	loop   0x40e946
  40e962:	pop    ebp
  40e963:	les    ebx,FWORD PTR [eax]
  40e965:	add    bl,BYTE PTR [ecx]
  40e967:	mov    ds:0xff82a6bb,eax
  40e96c:	cmp    eax,0xf7b525b2
  40e971:	popf   
  40e972:	adc    al,BYTE PTR [edx-0x4e5d96c8]
  40e978:	sbb    eax,0xedbba72
  40e97d:	aam    0x32
  40e97f:	xchg   edi,eax
  40e980:	push   esi
  40e981:	fprem  
  40e983:	xchg   edx,esp
  40e985:	inc    ebx
  40e986:	sbb    bh,BYTE PTR [eax+0x13]
  40e989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98a:	mov    cl,0x1a
  40e98c:	xchg   edi,eax
  40e98d:	pop    edx
  40e98e:	xchg   BYTE PTR ds:0xc3ae0d7a,ah
  40e994:	cwde   
  40e995:	je     0x40e949
  40e997:	cmc    
  40e998:	aaa    
  40e999:	or     ebx,DWORD PTR [eax-0x77b59f3d]
  40e99f:	ret    
  40e9a0:	jle    0x40e943
  40e9a2:	ror    BYTE PTR [ecx-0x9],1
  40e9a5:	pop    ebx
  40e9a6:	js     0x40e9f2
  40e9a8:	xchg   ecx,eax
  40e9a9:	push   ebx
  40e9aa:	mov    bl,0xb3
  40e9ac:	ret    0xb95f
  40e9af:	aam    0xd7
  40e9b1:	adc    BYTE PTR [ebx],0xda
  40e9b4:	mov    bl,dl
  40e9b6:	call   0xc4fd:0x3f91c392
  40e9bd:	popf   
  40e9be:	ret    
  40e9bf:	inc    esi
  40e9c0:	mov    eax,0x28d7acb7
  40e9c5:	fwait
  40e9c6:	xor    eax,0x920525e0
  40e9cb:	sub    edx,esi
  40e9cd:	cld    
  40e9ce:	rcr    dl,1
  40e9d0:	mov    bl,0x66
  40e9d2:	mov    al,ds:0x95a93715
  40e9d7:	sub    al,0xe0
  40e9d9:	sahf   
  40e9da:	sbb    bl,BYTE PTR [esi]
  40e9dc:	xor    BYTE PTR [ebx],dl
  40e9de:	jg     0x40ea51
  40e9e0:	test   BYTE PTR [ecx],ah
  40e9e2:	gs mov eax,0x28570081
  40e9e8:	inc    esi
  40e9e9:	dec    edi
  40e9ea:	sub    BYTE PTR [ecx],bh
  40e9ec:	cwde   
  40e9ed:	data16 aam 0xc
  40e9f0:	leave  
  40e9f1:	les    ebx,FWORD PTR [eax+0x39d242e8]
  40e9f7:	mov    ds:0xd56c8fed,al
  40e9fc:	mov    al,ds:0xf0361ac7
  40ea01:	pop    edi
  40ea02:	sub    BYTE PTR [ebx],bh
  40ea04:	retf   0x7a18
  40ea07:	leave  
  40ea08:	pusha  
  40ea09:	shl    BYTE PTR [eax+0x5532568f],cl
  40ea0f:	imul   ebx,edi,0xecdc367e
  40ea15:	dec    ecx
  40ea16:	xchg   ebx,eax
  40ea17:	aam    0x5b
  40ea19:	sbb    DWORD PTR [edx],0x22
  40ea1c:	out    dx,eax
  40ea1d:	xchg   ecx,eax
  40ea1e:	mov    esi,0xa5063921
  40ea23:	sar    ah,1
  40ea25:	and    eax,0x14c1552c
  40ea2a:	js     0x40ea37
  40ea2c:	icebp  
  40ea2d:	addr16 push ecx
  40ea2f:	test   DWORD PTR [edx+ebp*1],esi
  40ea32:	ja     0x40ea4c
  40ea34:	outs   dx,BYTE PTR ds:[esi]
  40ea35:	repz sub eax,0xf996e8b3
  40ea3b:	xor    al,0xfc
  40ea3d:	dec    ebx
  40ea3e:	test   eax,0xf61db2e8
  40ea43:	enter  0x61c3,0xcf
  40ea47:	or     al,0xc2
  40ea49:	mov    al,0x33
  40ea4b:	(bad)  
  40ea4d:	sub    eax,0x231ca0eb
  40ea52:	scas   eax,DWORD PTR es:[edi]
  40ea53:	out    dx,al
  40ea54:	outs   dx,BYTE PTR ds:[esi]
  40ea55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea56:	(bad)  
  40ea57:	lock adc esi,edi
  40ea5a:	and    edi,edi
  40ea5c:	dec    edx
  40ea5d:	sub    DWORD PTR [edi],ebp
  40ea5f:	mov    dh,0x8d
  40ea61:	pop    esp
  40ea62:	jecxz  0x40e9f9
  40ea64:	or     DWORD PTR [ecx+0x7911488c],edi
  40ea6a:	jmp    0x40eacc
  40ea6c:	cmc    
  40ea6d:	popf   
  40ea6e:	into   
  40ea6f:	pop    ds
  40ea70:	dec    esi
  40ea71:	pushf  
  40ea72:	mov    ds:0x3f00ca10,eax
  40ea77:	cmp    BYTE PTR [ebp-0x5bf0cb9a],bl
  40ea7d:	aad    0xff
  40ea7f:	inc    ebx
  40ea80:	lock retf 0x3792
  40ea84:	inc    edx
  40ea85:	fidiv  DWORD PTR [edx-0x4b4239f5]
  40ea8b:	rol    dh,cl
  40ea8d:	ins    DWORD PTR es:[edi],dx
  40ea8e:	in     al,0xf2
  40ea90:	nop
  40ea91:	jg     0x40eb0a
  40ea93:	pop    eax
  40ea94:	sub    edx,ebx
  40ea96:	pop    ebx
  40ea97:	data16 scas al,BYTE PTR es:[edi]
  40ea99:	ins    DWORD PTR es:[edi],dx
  40ea9a:	enter  0xe79f,0xf2
  40ea9e:	jno    0x40ea7f
  40eaa0:	pop    esp
  40eaa1:	mov    BYTE PTR [ecx-0x29439c3a],cl
  40eaa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa8:	rol    DWORD PTR [ecx],cl
  40eaaa:	fbld   TBYTE PTR [edi]
  40eaac:	mov    ebp,0xf8b92a64
  40eab1:	and    al,0xb2
  40eab3:	inc    ebx
  40eab4:	pop    ss
  40eab5:	cmp    cl,bh
  40eab7:	cs jg  0x57d61b4
  40eabe:	inc    ebp
  40eabf:	aas    
  40eac0:	imul   ebp,DWORD PTR [ebp+0xc57d420],0xc23830d6
  40eaca:	or     al,0xc5
  40eacc:	xchg   ebp,eax
  40eacd:	push   ecx
  40eace:	stos   DWORD PTR es:[edi],eax
  40eacf:	retf   
  40ead0:	pushf  
  40ead1:	dec    ebx
  40ead2:	daa    
  40ead3:	push   esi
  40ead4:	pop    esi
  40ead5:	xchg   DWORD PTR [ebx+0x585dd71b],esi
  40eadb:	pop    edx
  40eadc:	mov    BYTE PTR [ecx-0x1753dd82],0xb7
  40eae3:	xchg   esi,eax
  40eae4:	in     al,dx
  40eae5:	push   edi
  40eae6:	or     bl,bh
  40eae8:	lahf   
  40eae9:	pop    eax
  40eaea:	int    0xae
  40eaec:	sub    BYTE PTR [eax],ah
  40eaee:	ucomiss xmm3,DWORD PTR [eax+0x6c]
  40eaf2:	daa    
  40eaf3:	sti    
  40eaf4:	sub    esi,DWORD PTR ds:0x1fa8b6a
  40eafa:	jp     0x40eb69
  40eafc:	cmp    ebx,DWORD PTR [ecx+ecx*8-0x586191b8]
  40eb03:	dec    esp
  40eb04:	fist   DWORD PTR [esi]
  40eb06:	pop    edi
  40eb07:	dec    eax
  40eb08:	rol    DWORD PTR [ebx+0x6c87efd1],cl
  40eb0e:	popf   
  40eb0f:	jo     0x40eb1a
  40eb11:	inc    esp
  40eb12:	shl    BYTE PTR [ebx-0xd],cl
  40eb15:	repnz lahf 
  40eb17:	js     0x40eaca
  40eb19:	call   0xe0c3363
  40eb1e:	dec    ebx
  40eb1f:	sbb    al,cl
  40eb21:	lea    esi,[edx+0x41f1ebcd]
  40eb27:	div    DWORD PTR [edi+0x2e2a27e6]
  40eb2d:	xchg   esp,eax
  40eb2e:	xor    eax,0x243b90f3
  40eb33:	outs   dx,BYTE PTR ds:[esi]
  40eb34:	jmp    0xd7cd:0x79283ecd
  40eb3b:	pop    ss
  40eb3c:	ror    DWORD PTR [ebx-0x4141dbf2],cl
  40eb42:	mov    edi,0xbcac143f
  40eb47:	ret    0x7c4d
  40eb4a:	add    DWORD PTR [esi-0x6d2c7cb],edi
  40eb50:	inc    edi
  40eb51:	cdq    
  40eb52:	into   
  40eb53:	popa   
  40eb54:	arpl   WORD PTR [edx],di
  40eb56:	add    eax,0x55b12e7a
  40eb5b:	mov    eax,ds:0x67ed3c43
  40eb60:	in     al,dx
  40eb61:	mov    bl,0x3c
  40eb64:	inc    edx
  40eb65:	dec    ebp
  40eb66:	into   
  40eb67:	pop    ebp
  40eb68:	mov    ecx,DWORD PTR [ecx-0x44]
  40eb6b:	scas   eax,DWORD PTR es:[edi]
  40eb6c:	or     al,0xa0
  40eb6e:	fwait
  40eb6f:	pop    ebp
  40eb70:	jmp    0xa95f:0x544b097b
  40eb77:	mov    eax,0x9f4ad6ce
  40eb7c:	sub    eax,0xe25d4925
  40eb81:	pop    ds
  40eb82:	mov    eax,ds:0x32ba6d6f
  40eb87:	cmp    BYTE PTR [edi+ebp*2+0x45c7bcc7],0xa0
  40eb8f:	xchg   edi,eax
  40eb90:	inc    ecx
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x4226f8
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x4226f8
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x422794
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42278c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42278c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x42226d
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42278c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	add    DWORD PTR [ebx],0x64
  40ee78:	sahf   
  40ee79:	in     eax,dx
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0x8951e2ff
  40ee85:	inc    eax
  40ee86:	adc    eax,0xbe26a8eb
  40ee8b:	mov    DWORD PTR [esi+0x72],ebp
  40ee8e:	(bad)  
  40ee8f:	ror    DWORD PTR [edx+0x36],cl
  40ee92:	push   ebx
  40ee93:	xchg   BYTE PTR [eax+0x20],al
  40ee96:	jle    0x40ef08
  40ee98:	mov    dl,0x83
  40ee9a:	cmc    
  40ee9b:	popa   
  40ee9c:	sbb    al,0x9a
  40ee9e:	and    esi,edi
  40eea0:	test   al,0xc4
  40eea2:	(bad)  
  40eea3:	pushf  
  40eea4:	inc    edi
  40eea5:	jle    0x40ee4f
  40eea7:	mov    dl,0x13
  40eea9:	ds pushf 
  40eeab:	loopne 0x40ee3a
  40eead:	out    0x2d,eax
  40eeaf:	adc    esp,DWORD PTR [ebp-0x51]
  40eeb2:	scas   eax,DWORD PTR es:[edi]
  40eeb3:	pop    esp
  40eeb4:	push   ds
  40eeb5:	icebp  
  40eeb6:	imul   ecx,DWORD PTR [ebp-0x6c],0xbc4b73e
  40eebd:	je     0x40eea0
  40eebf:	mov    dh,0x76
  40eec1:	rcr    BYTE PTR [esi],cl
  40eec3:	rol    ah,cl
  40eec5:	fld    DWORD PTR [esi+0x33]
  40eec8:	clc    
  40eec9:	xor    dh,cl
  40eecb:	mov    ebp,ecx
  40eecd:	xchg   ebp,eax
  40eece:	mov    esp,0xc86a0ee3
  40eed3:	mov    al,0x9b
  40eed5:	add    eax,0x214ae756
  40eeda:	and    al,0xee
  40eedc:	push   ebx
  40eedd:	or     al,0xe1
  40eedf:	pop    esi
  40eee0:	es xchg ecx,eax
  40eee2:	sub    al,0xc1
  40eee4:	or     BYTE PTR [ecx+ecx*1-0x710c1e36],dh
  40eeeb:	pushf  
  40eeec:	dec    dl
  40eeee:	mov    ebp,DWORD PTR [edi-0x1d]
  40eef1:	mov    ch,BYTE PTR [edi+ecx*4+0x1dfb6ad0]
  40eef8:	add    DWORD PTR [edx-0x57],edi
  40eefb:	aas    
  40eefc:	aaa    
  40eefd:	in     al,0x8b
  40eeff:	push   cs
  40ef00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef01:	mov    ds:0x48d0cd4d,eax
  40ef06:	sbb    DWORD PTR [edi],eax
  40ef08:	call   0xc7af:0x903bd57d
  40ef0f:	test   BYTE PTR [ebx],cl
  40ef11:	fmul   DWORD PTR [edx+0x4c5b591e]
  40ef17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef18:	push   ds
  40ef19:	loop   0x40ef68
  40ef1b:	test   DWORD PTR [ebx+0x7b],esp
  40ef1e:	and    BYTE PTR [edx],bh
  40ef20:	inc    esp
  40ef21:	loopne 0x40ef50
  40ef23:	shl    BYTE PTR [eax-0x6a],1
  40ef26:	lock inc ebx
  40ef28:	es push esi
  40ef2a:	popf   
  40ef2b:	cmc    
  40ef2c:	outs   dx,DWORD PTR ds:[esi]
  40ef2d:	in     al,0x98
  40ef2f:	and    eax,0x32f10fb8
  40ef34:	jl     0x40ef98
  40ef36:	and    DWORD PTR [esi-0x3fad922c],eax
  40ef3c:	aad    0x32
  40ef3e:	ror    BYTE PTR [edi],cl
  40ef40:	test   DWORD PTR [ebx+0x43bd7655],0xea0329f5
  40ef4a:	mov    bh,0xee
  40ef4c:	mov    bh,al
  40ef4e:	mov    dh,0x71
  40ef50:	fld    st(4)
  40ef52:	cmp    DWORD PTR [edi+ebx*8-0x53e273e6],ebx
  40ef59:	addr16 inc ebx
  40ef5b:	mov    cl,0xf4
  40ef5d:	sbb    al,0x80
  40ef5f:	push   ecx
  40ef60:	xor    eax,0xb154768f
  40ef65:	inc    ecx
  40ef66:	mov    ch,0x1e
  40ef68:	adc    bh,dl
  40ef6a:	sbb    BYTE PTR [edi+0xf1eb832],dl
  40ef70:	cwde   
  40ef71:	in     al,0x4d
  40ef73:	cmp    ebx,DWORD PTR [esi-0x1ca45004]
  40ef79:	jmp    0x72e6:0x9d2fdd57
  40ef80:	or     eax,0x96d85c3
  40ef85:	inc    edi
  40ef86:	mov    edi,DWORD PTR [eax]
  40ef88:	push   ebx
  40ef89:	test   eax,0x79bf53eb
  40ef8e:	(bad)  
  40ef8f:	sub    edi,DWORD PTR [esi-0x5584367a]
  40ef95:	sbb    eax,0x3a8c6392
  40ef9a:	push   edi
  40ef9b:	push   eax
  40ef9c:	rcl    DWORD PTR [edi-0x58e56688],cl
  40efa2:	popf   
  40efa3:	dec    ebp
  40efa4:	mov    al,ds:0x67a7e64d
  40efa9:	inc    esp
  40efaa:	out    dx,al
  40efab:	mov    edi,0x8807eea3
  40efb0:	mov    bh,0x5e
  40efb2:	xor    eax,DWORD PTR [eax-0xb27e63d]
  40efb8:	in     al,0x65
  40efba:	stc    
  40efbb:	dec    esi
  40efbc:	call   0x740d:0x96256306
  40efc3:	push   ebx
  40efc4:	in     al,dx
  40efc5:	in     al,0x1c
  40efc7:	xchg   esi,eax
  40efc8:	fcmove st,st(3)
  40efca:	or     eax,0x85ffae59
  40efcf:	add    BYTE PTR [esi+0x7f46245a],cl
  40efd5:	cmp    DWORD PTR [eax-0x318d9dc6],ebx
  40efdb:	inc    esi
  40efdc:	or     dl,BYTE PTR [edi]
  40efde:	push   eax
  40efdf:	fsubr  DWORD PTR [ecx]
  40efe1:	push   ebp
  40efe2:	xor    eax,0xb7f7c8e9
  40efe7:	fadd   st(2),st
  40efe9:	push   eax
  40efea:	jb     0x40f016
  40efec:	pop    ds
  40efed:	popa   
  40efee:	cs cmp al,0x33
  40eff1:	repz or al,0x15
  40eff4:	push   0x48
  40eff6:	jae    0x40efbc
  40eff8:	xchg   esp,eax
  40eff9:	xor    al,BYTE PTR ds:0x653ccba6
  40efff:	sbb    eax,0xe9b01f5b
  40f004:	xlat   BYTE PTR ds:[ebx]
  40f005:	add    dl,BYTE PTR [ecx+0x1d4650db]
  40f00b:	pop    esi
  40f00c:	clc    
  40f00d:	popf   
  40f00e:	xchg   ecx,eax
  40f00f:	hlt    
  40f010:	hlt    
  40f011:	aam    0x6
  40f013:	aaa    
  40f014:	cs (bad) 
  40f017:	mov    ebx,0x60d49d2d
  40f01c:	xor    ebx,eax
  40f01e:	scas   eax,DWORD PTR es:[edi]
  40f01f:	mov    eax,0x94fc6b4c
  40f024:	ja     0x63943457
  40f02a:	jmp    0x36217897
  40f02f:	mov    cl,0x33
  40f031:	fbstp  TBYTE PTR [eax]
  40f033:	and    BYTE PTR [edi],ah
  40f035:	fmul   QWORD PTR [edi-0xd]
  40f038:	jb     0x40efc2
  40f03a:	stos   DWORD PTR es:[edi],eax
  40f03b:	push   ds
  40f03c:	ret    0xfde9
  40f03f:	cs and al,0x57
  40f042:	jns    0x40f063
  40f044:	inc    esi
  40f045:	jl     0x40f044
  40f047:	xchg   esp,eax
  40f048:	xchg   esi,eax
  40f049:	adc    al,0xfd
  40f04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f04c:	push   cs
  40f04d:	es mov eax,0x9e5c14e
  40f053:	fldenv [edi+0x625fcc03]
  40f059:	jnp    0x40f03f
  40f05b:	cmp    edi,eax
  40f05d:	iret   
  40f05e:	std    
  40f05f:	push   esp
  40f060:	adc    DWORD PTR [ecx+0x42],edi
  40f063:	mov    ds:0x4370eb2,al
  40f068:	sahf   
  40f069:	dec    BYTE PTR [ecx+0x62]
  40f06c:	imul   ebx,DWORD PTR [ecx+0x7b88209c],0xffffff8a
  40f073:	xor    ch,dl
  40f075:	fiadd  WORD PTR [ebp+esi*2-0x33]
  40f079:	int    0x39
  40f07b:	sbb    eax,0xf3356bdb
  40f080:	loop   0x40f097
  40f082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f083:	sbb    al,0x99
  40f085:	int    0x44
  40f087:	cdq    
  40f088:	dec    esi
  40f089:	sbb    al,0x18
  40f08b:	lods   eax,DWORD PTR ds:[esi]
  40f08c:	push   es
  40f08d:	xchg   ebx,eax
  40f08e:	ror    BYTE PTR [ecx+0x6b5bc75d],0xc3
  40f095:	and    eax,0x9d0277
  40f09a:	lods   al,BYTE PTR ds:[esi]
  40f09b:	(bad)  
  40f09d:	in     al,dx
  40f09e:	js     0x40f0c4
  40f0a0:	aam    0x28
  40f0a2:	sbb    bh,bh
  40f0a4:	bnd ret 0x217d
  40f0a8:	cmp    DWORD PTR [edi+eiz*4+0x38948d6e],esp
  40f0af:	mov    edx,0x2f7688a2
  40f0b4:	aaa    
  40f0b5:	and    BYTE PTR [ecx-0x11],dh
  40f0b8:	xchg   esp,eax
  40f0b9:	out    0xca,al
  40f0bb:	xlat   BYTE PTR ds:[ebx]
  40f0bc:	jg     0x40f0e0
  40f0be:	addr16 aad 0xaf
  40f0c1:	pop    eax
  40f0c2:	test   BYTE PTR [ebp-0x47f49dbf],0xa2
  40f0c9:	pop    edx
  40f0ca:	lock adc al,bl
  40f0cd:	icebp  
  40f0ce:	push   esp
  40f0cf:	dec    eax
  40f0d0:	push   ecx
  40f0d1:	cs cs into 
  40f0d4:	mov    cl,0x1b
  40f0d6:	lds    ecx,FWORD PTR [eax+ebx*1]
  40f0d9:	inc    esp
  40f0da:	sub    al,0xc5
  40f0dc:	xchg   ecx,eax
  40f0dd:	out    dx,al
  40f0de:	jns    0x40f0fe
  40f0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e1:	arpl   bp,dx
  40f0e3:	dec    edx
  40f0e4:	xchg   bl,ch
  40f0e6:	sub    dl,BYTE PTR [esi-0x76e47553]
  40f0ec:	mov    al,0xa3
  40f0ee:	mov    eax,0xea9f35ec
  40f0f3:	pop    eax
  40f0f4:	lea    ebp,[edx]
  40f0f6:	push   esi
  40f0f7:	push   0x2
  40f0f9:	inc    edi
  40f0fa:	pop    esi
  40f0fb:	cmc    
  40f0fc:	cmp    dh,BYTE PTR [edx]
  40f0fe:	in     al,0xbc
  40f100:	jne    0x40f0d7
  40f102:	add    DWORD PTR [esi+0x76],esi
  40f105:	and    ecx,DWORD PTR [ebp+0x5da9d8d0]
  40f10b:	imul   eax,DWORD PTR [edi+0x3b23289b],0xfb40233d
  40f115:	in     eax,dx
  40f116:	(bad)  
  40f117:	sub    dl,BYTE PTR [edi+ebx*8-0x459276a8]
  40f11e:	jmp    0x40f0a3
  40f120:	mov    bl,0x1
  40f122:	xchg   BYTE PTR [ebx],cl
  40f124:	jle    0x40f15e
  40f126:	mov    edi,0x1fd284cb
  40f12b:	int    0x35
  40f12d:	je     0x40f0b9
  40f12f:	imul   ebp,DWORD PTR [ebx-0x2c],0x5a
  40f133:	inc    eax
  40f134:	mov    esp,0x77a2b512
  40f139:	dec    esi
  40f13a:	les    edi,FWORD PTR [ebp-0x24434626]
  40f140:	shr    esi,1
  40f142:	inc    eax
  40f143:	in     eax,dx
  40f144:	pop    esi
  40f145:	pusha  
  40f146:	xor    bl,al
  40f148:	loope  0x40f1c9
  40f14a:	mov    bl,BYTE PTR [eax]
  40f14c:	retf   
  40f14d:	mov    cl,0xec
  40f14f:	sbb    ah,BYTE PTR [edx+0x76]
  40f152:	arpl   dx,di
  40f154:	cld    
  40f155:	mov    ebx,0xd58a3b85
  40f15a:	xchg   edi,eax
  40f15b:	inc    edi
  40f15c:	rcr    DWORD PTR [ebp-0x72],1
  40f15f:	xchg   DWORD PTR ds:[ebx+0x27635923],esp
  40f166:	jne    0x40f160
  40f168:	retf   
  40f169:	push   0xd9ecc4af
  40f16e:	inc    esp
  40f16f:	into   
  40f170:	loop   0x40f1a9
  40f172:	rcr    BYTE PTR [edx+ebx*8],1
  40f175:	repnz dec ebp
  40f177:	fistp  WORD PTR [edx]
  40f179:	pop    ecx
  40f17a:	jmp    0xdcc3:0x1d80ec2c
  40f181:	lods   al,BYTE PTR ds:[esi]
  40f182:	rol    BYTE PTR [edi],0x1e
  40f185:	mul    bh
  40f187:	loope  0x40f14a
  40f189:	aad    0xc9
  40f18b:	loop   0x40f1e1
  40f18d:	mov    edi,0x6696f7f5
  40f192:	or     eax,DWORD PTR [edx-0x6a463c59]
  40f198:	dec    ebx
  40f199:	mov    bh,BYTE PTR [ebx+0x627dbfce]
  40f19f:	sbb    ch,BYTE PTR [ebp-0x790d4a5e]
  40f1a5:	add    bh,BYTE PTR [ebx+edi*1+0x2d850fd1]
  40f1ac:	add    BYTE PTR [eax],al
  40f1ae:	add    BYTE PTR [ebx],bh
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42278c
  40f1d7:	mov    ds:0x422794,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x4d]
  40f1fb:	pop    ebp
  40f1fc:	jb     0x40f1db
  40f1fe:	xor    DWORD PTR [eax],ebx
  40f200:	mov    esi,0xbec4e3be
  40f205:	mov    esi,0x8a9b7ad5
  40f20a:	(bad)  
  40f20b:	in     eax,dx
  40f20c:	ficomp DWORD PTR [edx+0x130a22e8]
  40f212:	mov    al,ds:0xe356886
  40f217:	jecxz  0x40f286
  40f219:	shl    DWORD PTR [eax],1
  40f21b:	mov    edi,cs
  40f21d:	cwde   
  40f21e:	pop    es
  40f21f:	sbb    DWORD PTR ds:0xa05aa5d4,eax
  40f225:	loopne 0x40f26d
  40f227:	pop    es
  40f228:	inc    ebx
  40f229:	(bad)  
  40f22a:	sub    eax,0x4dc40102
  40f22f:	or     eax,0xb97caa9e
  40f234:	ret    
  40f235:	stc    
  40f236:	je     0x40f20b
  40f238:	sub    ah,BYTE PTR [esi-0x687aab3b]
  40f23e:	mov    cl,0xec
  40f240:	mov    edx,0xd2f6ab3b
  40f245:	push   ebp
  40f246:	ret    
  40f247:	retf   
  40f248:	cmp    DWORD PTR [esi],esp
  40f24a:	mov    edi,0xfa63489b
  40f24f:	lahf   
  40f250:	dec    esp
  40f251:	in     al,0xb3
  40f253:	mov    es,WORD PTR [esp+esi*1]
  40f256:	inc    ebx
  40f257:	not    DWORD PTR [ecx]
  40f259:	test   al,0x1b
  40f25b:	pop    esi
  40f25c:	jp     0x40f204
  40f25e:	dec    eax
  40f25f:	or     esi,0x1c
  40f262:	mov    al,0xe8
  40f264:	jecxz  0x40f2e5
  40f266:	inc    ebp
  40f267:	push   cs
  40f268:	xor    eax,0x7a41819
  40f26d:	pop    edx
  40f26e:	inc    edi
  40f26f:	mov    esp,0x89db9158
  40f274:	xacquire xchg DWORD PTR [eax-0xd],edx
  40f278:	add    BYTE PTR [edi+eiz*2],dh
  40f27b:	jp     0x40f20a
  40f27d:	ja     0x40f22c
  40f27f:	adc    esp,eax
  40f281:	(bad)  
  40f282:	pushf  
  40f283:	inc    ebx
  40f284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f285:	sub    BYTE PTR [edi-0x3e],bh
  40f288:	or     al,0xa4
  40f28a:	cmp    DWORD PTR [esi],edi
  40f28c:	test   DWORD PTR [eax],esp
  40f28e:	push   ss
  40f28f:	mov    bl,0xd0
  40f291:	jecxz  0x40f27a
  40f293:	test   BYTE PTR [edi],cl
  40f295:	push   esp
  40f296:	callw  0xa3ef
  40f29a:	inc    esi
  40f29b:	popf   
  40f29c:	add    eax,0xfc8d392a
  40f2a1:	sub    al,BYTE PTR [edi-0x55cb6a12]
  40f2a7:	cmc    
  40f2a8:	fnsave [edx]
  40f2aa:	mov    ds:0xaba60bee,al
  40f2af:	ins    BYTE PTR es:[edi],dx
  40f2b0:	push   cs
  40f2b1:	or     al,BYTE PTR [ecx+0x40]
  40f2b4:	inc    ebp
  40f2b5:	pusha  
  40f2b6:	xchg   BYTE PTR [ebp+eiz*4+0x7052b3aa],dh
  40f2bd:	jp     0x40f2cc
  40f2bf:	jae    0x40f248
  40f2c1:	add    al,0x6c
  40f2c3:	dec    edi
  40f2c4:	jnp    0x40f2a9
  40f2c6:	push   es
  40f2c7:	lods   al,BYTE PTR ds:[esi]
  40f2c8:	outs   dx,BYTE PTR ds:[esi]
  40f2c9:	lods   eax,DWORD PTR ds:[esi]
  40f2ca:	ret    0x4713
  40f2cd:	and    eax,0x1e5b58bc
  40f2d2:	dec    ecx
  40f2d3:	sub    bl,BYTE PTR [ecx-0x63]
  40f2d6:	(bad)  
  40f2d7:	push   ss
  40f2d8:	adc    al,0xf4
  40f2da:	loopne 0x40f2e8
  40f2dc:	adc    BYTE PTR [edi+edx*4-0x20cacc55],ch
  40f2e3:	inc    ebp
  40f2e4:	js     0x40f35e
  40f2e6:	sub    DWORD PTR [edi-0x14],edx
  40f2e9:	pop    ebx
  40f2ea:	mov    DWORD PTR [edx-0x1a41a798],0x9aa29d1d
  40f2f4:	gs sbb al,0x71
  40f2f7:	or     ecx,esi
  40f2f9:	outs   dx,BYTE PTR ds:[esi]
  40f2fa:	jp     0x40f36c
  40f2fc:	fcom   QWORD PTR [ebx+0x26cceab9]
  40f302:	loope  0x40f2e9
  40f304:	ins    DWORD PTR es:[edi],dx
  40f305:	push   0x910b7b4f
  40f30a:	adc    BYTE PTR [ebx-0x1a],al
  40f30d:	mov    ebp,DWORD PTR [edx]
  40f30f:	mov    eax,ds:0xc230b971
  40f314:	inc    ebp
  40f315:	cs push ss
  40f317:	mul    BYTE PTR [eax-0x8b61f98]
  40f31d:	xchg   BYTE PTR [ecx],ch
  40f31f:	(bad)  
  40f320:	jns    0x40f388
  40f322:	adc    BYTE PTR [eax],ah
  40f324:	in     al,0x5d
  40f326:	mov    bl,0x0
  40f328:	rcr    DWORD PTR [ebx],1
  40f32a:	jmp    0x4efa607d
  40f32f:	mov    ebx,0xfe6da942
  40f334:	pop    ss
  40f335:	mov    dh,0x24
  40f337:	pop    edx
  40f338:	jnp    0x40f301
  40f33a:	ror    BYTE PTR ds:0x8cd8da0a,0x50
  40f341:	call   0x34115237
  40f346:	jno    0x40f326
  40f348:	xor    DWORD PTR [eax],edx
  40f34a:	sahf   
  40f34b:	into   
  40f34c:	fld    DWORD PTR [ecx+0x51591575]
  40f352:	ds call 0x785e:0x719a4514
  40f35a:	test   BYTE PTR [ebx+0x13573539],0x6
  40f361:	ret    
  40f362:	mov    esi,0x432e1cc1
  40f367:	test   DWORD PTR [ebx+edx*2+0x4e],ebp
  40f36b:	jmp    0x40f377
  40f36d:	xchg   esi,eax
  40f36e:	pushf  
  40f36f:	or     ebx,ebx
  40f371:	inc    ebp
  40f372:	or     DWORD PTR [esi+edx*4+0x3f9c80c7],edi
  40f379:	in     eax,dx
  40f37a:	jns    0x40f38c
  40f37c:	(bad)  
  40f37d:	fdivr  DWORD PTR [ebx]
  40f37f:	xor    DWORD PTR [ebx+0x45],0xe58023ab
  40f386:	or     DWORD PTR [ecx-0x1e],ebp
  40f389:	xor    DWORD PTR [ecx-0x1cbc1130],ecx
  40f38f:	outs   dx,BYTE PTR ds:[esi]
  40f390:	xor    DWORD PTR [esi],edx
  40f392:	mov    cx,0x7673
  40f396:	or     DWORD PTR [edi],edx
  40f398:	mov    ds:0x5b23e7ca,eax
  40f39d:	popf   
  40f39e:	cmp    BYTE PTR [edi+0x31],cl
  40f3a1:	loopne 0x40f379
  40f3a3:	mov    dl,0x9e
  40f3a5:	and    al,0xc1
  40f3a7:	aaa    
  40f3a8:	mov    edi,0xb8324b1a
  40f3ad:	lods   al,BYTE PTR ds:[esi]
  40f3ae:	jb     0x40f399
  40f3b0:	call   0x6a6b:0xcae76f7f
  40f3b7:	ins    BYTE PTR es:[edi],dx
  40f3b8:	xor    ebx,ebx
  40f3ba:	psubusw mm1,mm5
  40f3bd:	(bad)  [ecx+ecx*8-0x62]
  40f3c1:	pop    edi
  40f3c2:	(bad)  
  40f3c3:	icebp  
  40f3c4:	jl     0x40f3d6
  40f3c6:	in     al,0xa6
  40f3c8:	jns    0x40f3c3
  40f3ca:	cmp    al,0x67
  40f3cc:	test   BYTE PTR [ecx+0x699b2893],dl
  40f3d2:	std    
  40f3d3:	popa   
  40f3d4:	add    BYTE PTR [edx],ch
  40f3d6:	lahf   
  40f3d7:	cmc    
  40f3d8:	jmp    0xa50c:0x58fdb6a7
  40f3df:	bound  ebp,QWORD PTR [edi-0x56]
  40f3e2:	xchg   esi,eax
  40f3e3:	fnstcw WORD PTR [edi]
  40f3e5:	(bad)  
  40f3e7:	jb     0x40f3f6
  40f3e9:	cmp    al,0x96
  40f3eb:	sar    BYTE PTR [eax+eax*8],0x31
  40f3ef:	outs   dx,DWORD PTR ds:[esi]
  40f3f0:	or     BYTE PTR [ebp+0x53],0xa2
  40f3f4:	ja     0x40f417
  40f3f6:	add    eax,0x6e45fa96
  40f3fb:	pop    ebp
  40f3fc:	add    eax,0x14b72cee
  40f401:	and    edx,ebx
  40f403:	jle    0x40f3fa
  40f405:	xor    eax,0x2d69103c
  40f40a:	or     ah,BYTE PTR [edx-0x4130ca9d]
  40f410:	add    al,0x8f
  40f412:	or     ebx,ebp
  40f414:	in     eax,0xa3
  40f416:	call   0x696fa7fd
  40f41b:	(bad)  
  40f41c:	push   esp
  40f41d:	into   
  40f41e:	jp     0x40f3a4
  40f420:	mov    ds:0x75b0b387,eax
  40f425:	mov    ebp,0xe0449bdb
  40f42a:	sahf   
  40f42b:	loope  0x40f464
  40f42d:	and    eax,0xb7469513
  40f432:	ror    DWORD PTR [ebx+0x2f],cl
  40f435:	pusha  
  40f436:	jo     0x40f444
  40f438:	cmp    esp,esp
  40f43a:	cwde   
  40f43b:	pop    ds
  40f43c:	ss loope 0x40f4a1
  40f43f:	loope  0x40f461
  40f441:	shr    DWORD PTR [edi],0x2b
  40f444:	or     edi,edi
  40f446:	dec    edi
  40f447:	lods   eax,DWORD PTR ds:[esi]
  40f448:	jo     0x40f4c6
  40f44a:	sahf   
  40f44b:	loopne 0x40f4b6
  40f44d:	xor    edi,DWORD PTR [esi-0x7e58c3d8]
  40f453:	ds push esi
  40f455:	pop    es
  40f456:	call   0xd1d496dc
  40f45b:	or     DWORD PTR [eax+0x20],ecx
  40f45e:	sub    al,0x8d
  40f460:	lea    edi,[ebp+0x30759207]
  40f466:	push   0x834a9645
  40f46b:	ins    DWORD PTR es:[edi],dx
  40f46c:	cld    
  40f46d:	and    bh,BYTE PTR [eax-0x5d399db]
  40f473:	sti    
  40f474:	in     al,0x11
  40f476:	sbb    ch,BYTE PTR [ecx-0x22]
  40f479:	pusha  
  40f47a:	jno    0x40f480
  40f47c:	mov    esi,0x86d995a3
  40f481:	xor    al,0x2f
  40f483:	xchg   ebx,eax
  40f484:	mov    esi,0x8e4873e6
  40f489:	mov    bh,0xbc
  40f48b:	scas   eax,DWORD PTR es:[edi]
  40f48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48d:	xchg   ebx,eax
  40f48e:	fst    QWORD PTR [ebx]
  40f490:	pushf  
  40f491:	int    0x4f
  40f493:	rcl    BYTE PTR [ebx+eiz*2],0x39
  40f497:	shl    BYTE PTR [ebx],1
  40f499:	cmp    eax,0x7dbd8023
  40f49e:	pop    esi
  40f49f:	jle    0x40f4da
  40f4a1:	mov    ds:0xc68c2df3,al
  40f4a6:	mov    eax,ds:0xfebae51f
  40f4ab:	aas    
  40f4ac:	xor    DWORD PTR [esi-0x3b8cada6],0xae1fdd75
  40f4b6:	pop    ebx
  40f4b7:	jb     0x40f525
  40f4b9:	daa    
  40f4ba:	sbb    eax,0xec23099
  40f4bf:	lock sahf 
  40f4c1:	inc    edx
  40f4c2:	inc    edi
  40f4c3:	aad    0x6f
  40f4c5:	hlt    
  40f4c6:	dec    esp
  40f4c7:	idiv   BYTE PTR [eax+0x273fe860]
  40f4cd:	jmp    0x9f855079
  40f4d2:	in     al,0xbf
  40f4d4:	add    al,0x1c
  40f4d6:	and    cl,dl
  40f4d8:	dec    edi
  40f4d9:	pop    edx
  40f4da:	jmp    0xdfa2f809
  40f4df:	adc    al,0x65
  40f4e1:	xchg   edx,eax
  40f4e2:	sub    BYTE PTR [edi+0x3a562c20],0xbf
  40f4e9:	xchg   ebx,eax
  40f4ea:	push   esp
  40f4eb:	mov    ebx,0x12c163b1
  40f4f0:	jb     0x40f542
  40f4f2:	fwait
  40f4f3:	add    ch,al
  40f4f5:	inc    edi
  40f4f6:	dec    ecx
  40f4f7:	pop    esp
  40f4f8:	mov    ds:0x6bf2de7e,eax
  40f4fd:	cmp    DWORD PTR [ecx],ebx
  40f4ff:	and    eax,0xcc1f2dde
  40f504:	mov    edi,0x39cc6596
  40f509:	mov    esi,0x32abc034
  40f50e:	or     BYTE PTR [ecx+0x1a],ah
  40f511:	mov    al,ds:0x52611fef
  40f516:	jge    0x40f55f
  40f518:	rol    BYTE PTR [ebp+0x49],0x90
  40f51c:	ins    DWORD PTR es:[edi],dx
  40f51d:	popa   
  40f51e:	in     al,0xce
  40f520:	sahf   
  40f521:	push   edx
  40f522:	pop    ss
  40f523:	dec    ecx
  40f524:	shr    DWORD PTR [ecx],cl
  40f526:	loope  0x40f59b
  40f528:	std    
  40f529:	xchg   edi,eax
  40f52a:	xchg   BYTE PTR ds:0xd89f8e08,bh
  40f530:	inc    ecx
  40f531:	jnp    0x40f4cc
  40f533:	push   0xcedaccfa
  40f538:	pusha  
  40f539:	ins    BYTE PTR es:[edi],dx
  40f53a:	dec    edx
  40f53b:	jge    0x40f4e8
  40f53d:	jns    0x40f58c
  40f53f:	xchg   esp,eax
  40f540:	outs   dx,BYTE PTR ds:[esi]
  40f541:	(bad)  
  40f542:	call   0x2c72:0x47c5af05
  40f549:	push   ebp
  40f54a:	hlt    
  40f54b:	std    
  40f54c:	aam    0x2e
  40f54e:	dec    ecx
  40f54f:	stc    
  40f550:	and    DWORD PTR [esp+ecx*4+0x15],ebx
  40f554:	mov    DWORD PTR [eax+0x6a],0x6b46dda8
  40f55b:	dec    BYTE PTR ds:0x70797b0e
  40f561:	jae    0x40f58e
  40f563:	hlt    
  40f564:	shr    BYTE PTR [edi],1
  40f566:	and    BYTE PTR [edx+0x47],0x6f
  40f56a:	jmp    0xbe9e:0x35fa0c79
  40f571:	adc    cl,BYTE PTR [edx]
  40f573:	adc    DWORD PTR [ebx],0xf
  40f576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f577:	jg     0x40f515
  40f579:	rol    dl,cl
  40f57b:	mov    edi,0xf233293e
  40f580:	retf   0xc344
  40f583:	cmp    eax,0x6f3cfeac
  40f588:	rcl    DWORD PTR [esi-0x392cde82],cl
  40f58e:	adc    eax,0x428830e6
  40f593:	retf   0xe900
  40f596:	aas    
  40f597:	xor    eax,0x9bd2d6c
  40f59c:	xchg   DWORD PTR [edi-0x39],edx
  40f59f:	inc    ebp
  40f5a0:	test   al,0x82
  40f5a2:	xor    BYTE PTR [eax],al
  40f5a4:	add    bh,al
  40f5a6:	inc    ebp
  40f5a7:	lods   al,BYTE PTR ds:[esi]
  40f5a8:	mov    ds:0xc7000037,al
  40f5ad:	inc    ebp
  40f5ae:	mov    al,0xd6
  40f5b0:	dec    ecx
  40f5b1:	add    BYTE PTR [eax],al
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	push   esi
  40f660:	cli    
  40f661:	fninit 
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x942d86f6
  40f66f:	push   ds
  40f670:	outs   dx,BYTE PTR ds:[esi]
  40f671:	mov    ah,0x64
  40f673:	and    dl,BYTE PTR [eax-0x68]
  40f676:	inc    esi
  40f677:	push   esp
  40f678:	test   eax,0x45801303
  40f67d:	push   edx
  40f67e:	add    al,0x67
  40f680:	cmp    bh,BYTE PTR [edi]
  40f682:	shr    BYTE PTR [ebx],0x31
  40f685:	lods   eax,DWORD PTR ds:[esi]
  40f686:	shl    cl,1
  40f688:	lods   eax,DWORD PTR ds:[esi]
  40f689:	jge    0x40f6c1
  40f68b:	and    al,0xb8
  40f68d:	ja     0x40f61e
  40f68f:	call   0x619c58a5
  40f694:	xchg   DWORD PTR [esi],edx
  40f696:	mov    dh,0x92
  40f698:	sbb    dh,bl
  40f69a:	fwait
  40f69b:	mov    ecx,0xd4d60cee
  40f6a0:	arpl   WORD PTR [edi+0x66],si
  40f6a3:	lods   al,BYTE PTR ds:[esi]
  40f6a4:	pop    ds
  40f6a5:	dec    ebx
  40f6a6:	pop    ds
  40f6a7:	test   BYTE PTR [edi+ebx*4-0x5e],bl
  40f6ab:	xor    edx,DWORD PTR [edi]
  40f6ad:	stos   DWORD PTR es:[edi],eax
  40f6ae:	pop    edx
  40f6af:	and    eax,0x116e74a7
  40f6b4:	not    edx
  40f6b6:	leave  
  40f6b7:	sub    DWORD PTR [eax+0x47ce96f5],0xffffffa9
  40f6be:	and    DWORD PTR [edx-0x27],0x45
  40f6c2:	jne    0x40f659
  40f6c4:	sub    ecx,DWORD PTR [ecx]
  40f6c6:	push   bx
  40f6c8:	lock pop ecx
  40f6ca:	push   eax
  40f6cb:	dec    edi
  40f6cc:	sub    DWORD PTR [edi-0x505c5e14],0x54bc7250
  40f6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d7:	xchg   ebp,eax
  40f6d8:	or     eax,0x8d78df5a
  40f6dd:	in     eax,0x5
  40f6df:	test   al,0x66
  40f6e1:	pop    edx
  40f6e2:	mov    ?,WORD PTR [eax+0x32b1f259]
  40f6e8:	jp     0xcdb04b16
  40f6ee:	and    DWORD PTR [edi-0x7],esp
  40f6f1:	mov    ebx,0xc5ac1fdf
  40f6f6:	(bad)  [edi]
  40f6f8:	lods   al,BYTE PTR ds:[esi]
  40f6f9:	shl    BYTE PTR [bx+0x31e8],1
  40f6fe:	dec    edx
  40f6ff:	xchg   ebx,eax
  40f700:	xchg   esp,eax
  40f701:	push   ecx
  40f702:	mov    dl,0x79
  40f704:	jne    0x40f6d4
  40f706:	pop    ss
  40f707:	repz or al,0x25
  40f70a:	stos   BYTE PTR es:[edi],al
  40f70b:	fxch   st(0)
  40f70d:	and    al,0xa3
  40f70f:	(bad)  
  40f710:	lahf   
  40f711:	retf   
  40f712:	outs   dx,BYTE PTR ds:[esi]
  40f713:	pop    esi
  40f714:	sbb    esi,DWORD PTR [ebp+0x649192cf]
  40f71a:	xchg   esp,eax
  40f71b:	and    DWORD PTR [eax],esp
  40f71d:	popf   
  40f71e:	jo     0x40f752
  40f720:	in     al,0x51
  40f722:	or     DWORD PTR ds:[edx],0x6d
  40f726:	push   ecx
  40f727:	push   0x25c7a397
  40f72c:	push   ebx
  40f72d:	in     eax,0x31
  40f72f:	add    al,0xc1
  40f731:	cmp    edx,DWORD PTR [eax]
  40f733:	fnstsw WORD PTR [ebp+0x21]
  40f736:	cmp    BYTE PTR [ecx-0x7a],bh
  40f739:	rcr    ecx,cl
  40f73b:	retf   
  40f73c:	jle    0x40f6f1
  40f73e:	in     al,dx
  40f73f:	imul   esi,DWORD PTR [esi+0x7f],0xffffffee
  40f743:	xchg   edi,eax
  40f744:	mov    cl,0xa9
  40f746:	or     edx,DWORD PTR [esi+0x4715c957]
  40f74c:	mov    ebx,0x6c9c1b89
  40f751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f752:	push   esi
  40f753:	jno    0x40f792
  40f755:	mov    dl,0x5a
  40f757:	repz sahf 
  40f759:	add    al,0xda
  40f75b:	lea    ebx,[esi+0x47]
  40f75e:	push   ecx
  40f75f:	(bad)  
  40f760:	lock iret 
  40f762:	cmp    eax,edx
  40f764:	out    dx,al
  40f765:	or     eax,0x35de2d00
  40f76a:	dec    edi
  40f76b:	pop    esi
  40f76c:	sahf   
  40f76d:	inc    edx
  40f76e:	and    ecx,DWORD PTR [edx-0x79]
  40f771:	sbb    ebx,esp
  40f773:	(bad)  
  40f774:	cld    
  40f775:	icebp  
  40f776:	push   ebp
  40f777:	mov    ds:0xa06f8a7f,eax
  40f77c:	mov    BYTE PTR [ecx+0x271f42ab],0x61
  40f783:	lock fs test eax,0xf6235248
  40f78a:	and    BYTE PTR [esi],dh
  40f78c:	dec    eax
  40f78d:	rol    BYTE PTR [esi],1
  40f78f:	popa   
  40f790:	cs pop edi
  40f792:	xchg   BYTE PTR [edx-0x73],bh
  40f795:	xor    BYTE PTR [edx],al
  40f797:	cdq    
  40f798:	sbb    DWORD PTR [esi-0x4b],ebp
  40f79b:	xor    ebx,DWORD PTR [ecx]
  40f79d:	clc    
  40f79e:	adc    DWORD PTR [edi+0x1c9950f7],edi
  40f7a4:	aad    0xe5
  40f7a6:	xchg   esp,eax
  40f7a7:	aaa    
  40f7a8:	cmp    BYTE PTR [ebx+edi*1+0x69],al
  40f7ac:	aam    0x0
  40f7ae:	jo     0x40f754
  40f7b0:	pop    es
  40f7b1:	icebp  
  40f7b2:	push   0x71
  40f7b4:	dec    esp
  40f7b5:	jno    0x40f789
  40f7b7:	rol    dh,cl
  40f7b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ba:	jns    0x40f7d4
  40f7bc:	cwde   
  40f7bd:	sbb    BYTE PTR [esi],al
  40f7bf:	inc    ebp
  40f7c0:	nop
  40f7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c2:	lods   eax,DWORD PTR ds:[esi]
  40f7c3:	out    0x42,al
  40f7c5:	popa   
  40f7c6:	inc    ecx
  40f7c7:	icebp  
  40f7c8:	or     ebp,DWORD PTR [edx-0x40]
  40f7cb:	out    0x79,eax
  40f7cd:	mov    ebx,0xecc686e2
  40f7d2:	sbb    edi,DWORD PTR [ebp+0x36]
  40f7d5:	cmp    DWORD PTR [edi],0xffffffab
  40f7d8:	inc    ebp
  40f7d9:	mov    bl,0x32
  40f7db:	push   ebx
  40f7dc:	sub    al,0xbb
  40f7de:	sub    al,0xd
  40f7e0:	push   ebp
  40f7e1:	dec    ebp
  40f7e2:	int3   
  40f7e3:	sar    ah,cl
  40f7e5:	leave  
  40f7e6:	pop    ecx
  40f7e7:	adc    eax,0xae410687
  40f7ec:	mov    cl,0x2e
  40f7ee:	pop    ebp
  40f7ef:	ror    bl,0xc4
  40f7f2:	add    BYTE PTR [esi],0x69
  40f7f5:	adc    eax,0x244ad31a
  40f7fa:	fisub  DWORD PTR [edi+0x3993e888]
  40f800:	push   cs
  40f801:	and    al,0x5f
  40f803:	aam    0x8
  40f805:	cs mov dl,0x48
  40f808:	inc    ebx
  40f809:	(bad)  
  40f80a:	out    0x1f,al
  40f80c:	dec    esi
  40f80d:	mov    ecx,0x8d436292
  40f812:	daa    
  40f813:	pop    ss
  40f814:	aas    
  40f815:	jmp    0x40f867
  40f817:	clc    
  40f818:	adc    ebx,DWORD PTR [eax+edx*8]
  40f81b:	jmp    0x6d5a48ad
  40f820:	cld    
  40f821:	pop    ebp
  40f822:	mov    ebx,0x3b66130e
  40f827:	mov    ch,0x5a
  40f829:	pop    ebx
  40f82a:	mov    eax,ds:0xbc4c9fa5
  40f82f:	mov    cl,0x3
  40f831:	dec    edi
  40f832:	iret   
  40f833:	cli    
  40f834:	sub    BYTE PTR [esi+0x7],0xe7
  40f838:	es mov ebp,0x1044d912
  40f83e:	shr    ebx,0x5b
  40f841:	retf   
  40f842:	bound  edi,QWORD PTR [edx]
  40f844:	fcomi  st,st(4)
  40f846:	sub    ebp,DWORD PTR [edx-0x62]
  40f849:	js     0x40f882
  40f84b:	add    al,0x70
  40f84d:	xchg   edx,eax
  40f84e:	shl    BYTE PTR [ecx],0xeb
  40f851:	mov    dl,0x49
  40f853:	shr    edi,cl
  40f855:	dec    esi
  40f856:	ret    
  40f857:	mov    edi,0x936b5c05
  40f85c:	xchg   esp,eax
  40f85d:	jle    0x40f838
  40f85f:	pop    ebp
  40f860:	jecxz  0x40f8c7
  40f862:	repnz push ebx
  40f864:	push   0x64
  40f866:	or     dh,BYTE PTR [ecx+0x77]
  40f869:	shl    DWORD PTR [esi-0x5a],1
  40f86c:	ins    DWORD PTR es:[edi],dx
  40f86d:	or     edx,DWORD PTR [esi+edi*2-0x1d]
  40f871:	sbb    ah,al
  40f873:	loop   0x40f879
  40f875:	cld    
  40f876:	xchg   DWORD PTR [ebp-0x1aa18ae],edx
  40f87c:	push   ebp
  40f87d:	add    dl,dl
  40f87f:	fiadd  DWORD PTR ds:0xdf70785e
  40f885:	stos   BYTE PTR es:[edi],al
  40f886:	cs inc ebx
  40f888:	xrelease lock add BYTE PTR [ecx],ch
  40f88c:	ins    DWORD PTR es:[edi],dx
  40f88d:	fisttp DWORD PTR [ecx]
  40f88f:	inc    ebx
  40f890:	fadd   DWORD PTR ds:[edi-0x63]
  40f894:	jo     0x40f8dd
  40f896:	cmp    eax,DWORD PTR [ecx+0x6ef507db]
  40f89c:	push   eax
  40f89d:	hlt    
  40f89e:	sbb    dh,BYTE PTR [ecx-0x45]
  40f8a1:	sar    BYTE PTR [edx],1
  40f8a3:	ret    0x2146
  40f8a6:	or     BYTE PTR [eax+0x32],0x7d
  40f8aa:	and    BYTE PTR es:[esi+0x36385497],bh
  40f8b1:	out    dx,al
  40f8b2:	rol    DWORD PTR [edx-0x6e],0x83
  40f8b6:	sbb    eax,0x7d0f7a43
  40f8bb:	and    bl,dl
  40f8bd:	dec    eax
  40f8be:	jae    0x40f84d
  40f8c0:	inc    edx
  40f8c1:	mov    ds:0x91222d40,eax
  40f8c6:	or     BYTE PTR [ebx-0x4fa66cfc],bh
  40f8cc:	loope  0x40f887
  40f8ce:	mov    ebx,0xd88895c5
  40f8d3:	test   BYTE PTR [edx-0x120bcf48],al
  40f8d9:	jmp    0x37f6:0xb78b35d9
  40f8e0:	rol    DWORD PTR [ecx],1
  40f8e2:	or     BYTE PTR [edi-0x69e5ac75],ch
  40f8e8:	mov    al,0x72
  40f8ea:	cmp    al,0x43
  40f8ec:	fwait
  40f8ed:	into   
  40f8ee:	(bad)
  40f8f2:	sub    al,0x20
  40f8f4:	(bad)  
  40f8f5:	fisttp QWORD PTR [edi+edi*8-0x47]
  40f8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8fa:	mov    esi,0x67249093
  40f8ff:	xor    al,0x38
  40f901:	icebp  
  40f902:	mov    edi,0x5e46046b
  40f907:	hlt    
  40f908:	call   0x58251653
  40f90d:	cwde   
  40f90e:	and    dh,bl
  40f910:	lahf   
  40f911:	aad    0xa2
  40f913:	aam    0x5a
  40f915:	add    al,0x7
  40f917:	or     ebp,ecx
  40f919:	pop    ds
  40f91a:	jo     0x40f948
  40f91c:	jo     0x40f946
  40f91e:	frstor [edx]
  40f920:	push   es
  40f921:	ja     0x40f91c
  40f923:	aaa    
  40f924:	mov    DWORD PTR [ebp+edi*8+0x67de72fb],eax
  40f92b:	xchg   ecx,eax
  40f92c:	test   DWORD PTR [eax],ecx
  40f92e:	jne    0x40f8c8
  40f930:	pusha  
  40f931:	lds    ecx,FWORD PTR [edx+eax*8]
  40f934:	fimul  WORD PTR [ecx+0x323d1729]
  40f93a:	icebp  
  40f93b:	mov    edx,0x222a45db
  40f940:	arpl   si,ax
  40f942:	call   DWORD PTR [esi-0x1fa9e8fb]
  40f948:	shl    DWORD PTR [eax],0x11
  40f94b:	mov    ecx,0x67d2ab8e
  40f950:	mov    DWORD PTR [edx],0x2d961128
  40f956:	lds    edi,FWORD PTR [edx]
  40f958:	jne    0x40f948
  40f95a:	or     DWORD PTR [eax-0x798139b2],edi
  40f960:	xor    DWORD PTR [esi],edi
  40f962:	ins    DWORD PTR es:[edi],dx
  40f963:	ror    BYTE PTR [edx+eax*1],cl
  40f966:	les    edi,FWORD PTR [ebp-0x52100321]
  40f96c:	stc    
  40f96d:	mov    eax,0x4152049b
  40f972:	mov    eax,ds:0x33822069
  40f977:	and    BYTE PTR [eax+ebx*1+0x57],0xb8
  40f97c:	xchg   BYTE PTR [ebp+0x35],ah
  40f97f:	jmp    0x40f99f
  40f981:	mov    al,ds:0x4abadc4f
  40f986:	nop
  40f987:	sbb    bh,dh
  40f989:	xor    ah,BYTE PTR [ebx-0x618a939]
  40f98f:	out    0xd4,eax
  40f991:	jmp    0x40f93d
  40f993:	data16 jbe 0x40fa09
  40f996:	push   edi
  40f997:	js     0x40f95b
  40f999:	inc    esp
  40f99a:	pop    esi
  40f99b:	mov    ds:0x9ffa1fda,al
  40f9a0:	aam    0xca
  40f9a2:	jge    0x40f932
  40f9a4:	xchg   dl,dl
  40f9a6:	aad    0xd6
  40f9a8:	test   eax,0x3be92a41
  40f9ad:	sub    al,0x82
  40f9af:	mov    ch,dh
  40f9b1:	and    eax,0xdf7187b8
  40f9b6:	out    dx,eax
  40f9b7:	mov    ch,0x45
  40f9b9:	xor    edx,DWORD PTR [edx-0x1b2d170]
  40f9bf:	cmp    edi,DWORD PTR [ecx+0x61ecdaf5]
  40f9c5:	sbb    al,dh
  40f9c7:	and    DWORD PTR [ecx],0x21
  40f9ca:	fisttp QWORD PTR [edx-0x3b]
  40f9cd:	outs   dx,DWORD PTR ds:[esi]
  40f9ce:	stc    
  40f9cf:	pop    ds
  40f9d0:	mov    eax,ds:0xeabd1ba7
  40f9d5:	arpl   WORD PTR [esi-0x6091be24],sp
  40f9db:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40f9dd:	push   ebx
  40f9de:	sub    DWORD PTR [ebx-0x53],0xffffff83
  40f9e2:	jbe    0x40f96d
  40f9e4:	(bad)  
  40f9e5:	mov    eax,ds:0x653f18e4
  40f9ea:	sbb    eax,0xe1489532
  40f9ef:	jmp    0x616995c5
  40f9f4:	jmp    0xb509f41a
  40f9f9:	jmp    0x40fa70
  40f9fb:	cmp    ah,ah
  40f9fd:	sub    eax,0x926047a5
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x42226d
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	pop    esi
  40fa46:	mov    ah,0x90
  40fa48:	nop
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xc2009d98
  40fa55:	pop    ebp
  40fa56:	stc    
  40fa57:	sbb    eax,0x696bfca7
  40fa5c:	retf   0xd2b
  40fa5f:	pushf  
  40fa60:	cli    
  40fa61:	mov    edi,0x8e8bf67
  40fa66:	or     eax,0x97b74939
  40fa6b:	lea    ecx,[edx+0x3baf7cfb]
  40fa71:	inc    eax
  40fa72:	faddp  st(0),st
  40fa74:	pop    ss
  40fa75:	ret    
  40fa76:	xor    al,BYTE PTR [edx]
  40fa78:	pop    esp
  40fa79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa7a:	lds    esp,FWORD PTR [esp+edx*1+0x31ccf885]
  40fa81:	xchg   ecx,eax
  40fa82:	inc    esp
  40fa83:	inc    ecx
  40fa84:	pop    ecx
  40fa85:	sub    BYTE PTR [ecx],ah
  40fa87:	in     al,dx
  40fa88:	xchg   esi,eax
  40fa89:	out    0x8f,eax
  40fa8b:	push   ebx
  40fa8c:	xchg   ebp,eax
  40fa8d:	je     0x40fa0f
  40fa8f:	add    ebx,DWORD PTR [esp+edx*4]
  40fa92:	(bad)  [esi+0x7f2bc5b3]
  40fa98:	fucomi st,st(1)
  40fa9a:	pop    edi
  40fa9b:	scas   eax,DWORD PTR es:[edi]
  40fa9c:	js     0x40fadf
  40fa9e:	adc    bh,dh
  40faa0:	sti    
  40faa1:	mov    cl,0x2c
  40faa3:	retf   
  40faa4:	or     BYTE PTR [ebx],0xf8
  40faa7:	adc    eax,0x9bfb9d63
  40faac:	sbb    DWORD PTR [eax+ebx*2+0x3e],eax
  40fab0:	out    dx,eax
  40fab1:	and    ch,bl
  40fab3:	cmp    cl,dl
  40fab5:	test   BYTE PTR [bp+di],bh
  40fab8:	push   esp
  40fab9:	ss inc ecx
  40fabb:	fsub   QWORD PTR [edi]
  40fabd:	and    DWORD PTR ds:0xab86e0ef,esi
  40fac3:	(bad)  
  40fac6:	and    ecx,DWORD PTR [ebx]
  40fac8:	sub    al,0xe5
  40faca:	sub    bl,cl
  40facc:	test   DWORD PTR [edi-0xc],0xf0edb0ec
  40fad3:	jno    0x40fae6
  40fad5:	xchg   BYTE PTR ds:0x848dae59,dh
  40fadb:	aaa    
  40fadc:	test   BYTE PTR [ecx+0x6a],bh
  40fadf:	call   0xd17e4d43
  40fae4:	arpl   WORD PTR [ebp+0x14b9114e],cx
  40faea:	jne    0x40fa95
  40faec:	out    dx,eax
  40faed:	cwde   
  40faee:	and    DWORD PTR [esi-0x1b6e9eba],0xc7586c0a
  40faf8:	das    
  40faf9:	dec    ebx
  40fafa:	dec    esi
  40fafb:	mov    WORD PTR [ecx-0x40],cs
  40fafe:	popf   
  40faff:	add    ebx,DWORD PTR [eax+edx*2]
  40fb02:	cmp    al,0xa2
  40fb04:	fwait
  40fb05:	iret   
  40fb06:	jl     0x40fae6
  40fb08:	scas   eax,DWORD PTR es:[edi]
  40fb09:	psllw  mm2,QWORD PTR [edx]
  40fb0c:	inc    ebx
  40fb0d:	es mov al,0x86
  40fb10:	loop   0x40fb57
  40fb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb13:	mov    bl,0xf5
  40fb15:	je     0x40fb40
  40fb17:	adc    ebp,DWORD PTR [esi-0x43]
  40fb1a:	dec    ebp
  40fb1b:	aad    0x3a
  40fb1d:	inc    esi
  40fb1e:	push   ebx
  40fb1f:	jmp    FWORD PTR [eax+0x24]
  40fb22:	jmp    0xf5ff:0xf144e553
  40fb29:	dec    ecx
  40fb2a:	lahf   
  40fb2b:	stos   DWORD PTR es:[edi],eax
  40fb2c:	in     eax,0x8b
  40fb2e:	pop    ebx
  40fb2f:	mov    al,es:0xb6c5fd3a
  40fb35:	and    BYTE PTR ds:0x6de43e42,0x61
  40fb3c:	inc    ecx
  40fb3d:	mov    ds:0x965a3f7,al
  40fb42:	xchg   DWORD PTR [ecx+eiz*1+0x54f8ccd5],edi
  40fb49:	dec    esp
  40fb4a:	shl    BYTE PTR [ecx-0x41],0xde
  40fb4e:	mov    BYTE PTR [esi],al
  40fb50:	sbb    edx,DWORD PTR ss:[eax]
  40fb53:	add    eax,0x910c2db
  40fb58:	cmp    esi,DWORD PTR [ebx-0x6f808859]
  40fb5e:	aad    0x50
  40fb60:	rol    DWORD PTR [ecx],cl
  40fb62:	ret    
  40fb63:	icebp  
  40fb64:	push   edx
  40fb65:	(bad)  
  40fb67:	xor    BYTE PTR [ebp-0x24],0xe5
  40fb6b:	test   eax,0x7152534e
  40fb70:	in     eax,dx
  40fb71:	mov    bl,0x6d
  40fb73:	sti    
  40fb74:	leave  
  40fb75:	mov    ch,0xfa
  40fb77:	add    eax,0xe5bd8b10
  40fb7c:	adc    eax,0xf53d11cb
  40fb81:	jmp    0x40fb80
  40fb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb84:	mov    bh,0xc3
  40fb86:	mov    ch,0x83
  40fb88:	loop   0x40fb4e
  40fb8a:	call   DWORD PTR [ecx]
  40fb8c:	add    al,0x61
  40fb8e:	(bad)  
  40fb8f:	push   edx
  40fb90:	push   ebx
  40fb91:	es jb  0x40fbff
  40fb94:	push   cs
  40fb95:	mov    dh,0xdd
  40fb97:	jns    0x40fb1c
  40fb99:	js     0x40fb47
  40fb9b:	rcl    DWORD PTR [esi],0xcf
  40fb9e:	outs   dx,DWORD PTR ds:[esi]
  40fb9f:	inc    ecx
  40fba0:	fisttp DWORD PTR [esi+ebx*1]
  40fba3:	mov    al,0xe6
  40fba5:	and    DWORD PTR [ebx+0x1d51f2b6],edi
  40fbab:	cmp    al,0x40
  40fbad:	xchg   DWORD PTR [ebp+0x49],ebx
  40fbb0:	adc    edx,DWORD PTR [esi-0x22]
  40fbb3:	pop    esp
  40fbb4:	(bad)  
  40fbb5:	jb     0x40fbb9
  40fbb7:	jnp    0x40fc10
  40fbb9:	or     DWORD PTR [edi+eiz*8+0x4e],ebx
  40fbbd:	adc    DWORD PTR [ecx],eax
  40fbbf:	retf   0x137d
  40fbc2:	pop    esi
  40fbc3:	and    bl,BYTE PTR [esi-0x58]
  40fbc6:	pusha  
  40fbc7:	adc    edx,edx
  40fbc9:	(bad)  [ecx+0x60f9c5ae]
  40fbcf:	popa   
  40fbd0:	shr    esi,1
  40fbd2:	test   al,0xc0
  40fbd4:	mov    fs,WORD PTR [ebp+0x455bf114]
  40fbda:	int3   
  40fbdb:	jns    0x40fbfc
  40fbdd:	push   edi
  40fbde:	sti    
  40fbdf:	into   
  40fbe0:	inc    eax
  40fbe1:	inc    ebp
  40fbe2:	lods   al,BYTE PTR ds:[esi]
  40fbe3:	pop    ebp
  40fbe4:	dec    esp
  40fbe5:	(bad)  
  40fbe6:	ret    
  40fbe7:	aas    
  40fbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe9:	cld    
  40fbea:	(bad)  
  40fbeb:	jmp    FWORD PTR ds:[eax+0x3f5d5abb]
  40fbf2:	xor    eax,0x82cb45dd
  40fbf7:	jecxz  0x40fc25
  40fbf9:	push   esi
  40fbfa:	cmp    eax,0xaf359016
  40fbff:	push   ebx
  40fc00:	dec    ecx
  40fc01:	jg     0x40fc37
  40fc03:	xchg   esi,eax
  40fc04:	push   edx
  40fc05:	inc    ebx
  40fc06:	lods   al,BYTE PTR ds:[esi]
  40fc07:	jb     0x40fc7a
  40fc09:	ins    DWORD PTR es:[edi],dx
  40fc0a:	add    ebx,DWORD PTR [edx]
  40fc0c:	sub    al,BYTE PTR [ecx]
  40fc0e:	outs   dx,BYTE PTR ds:[esi]
  40fc0f:	dec    ebp
  40fc10:	dec    ebx
  40fc11:	dec    edx
  40fc12:	ss mov ah,0xbf
  40fc15:	push   edx
  40fc16:	dec    esi
  40fc17:	lea    edx,[ecx-0x72]
  40fc1a:	jo     0x40fbf5
  40fc1c:	dec    edi
  40fc1d:	imul   edi,DWORD PTR [esi+ebx*4-0x747ebf46],0xda324fe0
  40fc28:	(bad)  
  40fc2a:	xchg   ebx,eax
  40fc2b:	js     0x40fc19
  40fc2d:	inc    esp
  40fc2e:	jo     0x40fbd8
  40fc30:	mov    dh,0xaf
  40fc32:	and    DWORD PTR [edi],ebp
  40fc34:	shl    BYTE PTR ds:0x6643cb73,cl
  40fc3a:	pop    ds
  40fc3b:	and    al,0x5e
  40fc3d:	mov    al,0x77
  40fc3f:	adc    DWORD PTR [ecx+0x76f5a57a],0x66
  40fc46:	dec    esi
  40fc47:	(bad)  
  40fc48:	ins    BYTE PTR es:[edi],dx
  40fc49:	out    dx,eax
  40fc4a:	push   ss
  40fc4b:	popf   
  40fc4c:	lds    esp,FWORD PTR [edx]
  40fc4e:	cmp    esi,ebp
  40fc50:	inc    edx
  40fc51:	les    edi,FWORD PTR [edx-0x486eba14]
  40fc57:	dec    esi
  40fc58:	in     al,0x6b
  40fc5a:	dec    bl
  40fc5c:	dec    ebp
  40fc5d:	iret   
  40fc5e:	mov    dl,ah
  40fc60:	es pop es
  40fc62:	mov    ds:0x7b7b18dc,al
  40fc67:	fld    TBYTE PTR [eax+0x19]
  40fc6a:	cdq    
  40fc6b:	adc    BYTE PTR [eax-0x50df9880],0x5c
  40fc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc73:	adc    dl,dh
  40fc75:	bound  ebp,QWORD PTR [edi-0x47fe8cda]
  40fc7b:	addr16 mov edi,0xc9c36f8
  40fc81:	and    DWORD PTR [eax],ecx
  40fc83:	js     0x40fc1d
  40fc85:	enter  0xae02,0x7c
  40fc89:	inc    ebx
  40fc8a:	xor    eax,0x67e5d3e8
  40fc8f:	adc    ah,BYTE PTR [ebx+esi*1+0x6]
  40fc93:	push   esp
  40fc94:	fdivr  QWORD PTR [eax+eiz*1-0x35bc0d5e]
  40fc9b:	iret   
  40fc9c:	and    esp,DWORD PTR [esi]
  40fc9e:	or     eax,0xfc4071cf
  40fca3:	or     bl,BYTE PTR [ebp+0x38]
  40fca6:	xor    BYTE PTR [ecx+edi*1+0xe],ch
  40fcaa:	inc    esp
  40fcab:	std    
  40fcac:	inc    edx
  40fcad:	jecxz  0x40fce9
  40fcaf:	push   ss
  40fcb0:	mov    ds:0xd449b21,eax
  40fcb5:	sti    
  40fcb6:	push   ecx
  40fcb7:	sbb    esi,DWORD PTR [eax+0x71]
  40fcba:	(bad)  
  40fcbb:	push   esi
  40fcbc:	mov    ch,0x41
  40fcbe:	push   ebx
  40fcbf:	lahf   
  40fcc0:	jmp    0x40fd3d
  40fcc2:	mov    eax,ds:0xfd2e1c33
  40fcc7:	push   0x5283f93d
  40fccc:	sub    esi,DWORD PTR [edx+0x3616b9f3]
  40fcd2:	pop    ebp
  40fcd3:	jmp    0xe73cd1da
  40fcd8:	int    0x16
  40fcda:	add    edx,DWORD PTR [ebx-0x14d7a7c]
  40fce0:	imul   ecx,esi,0x90882c66
  40fce6:	dec    esi
  40fce7:	add    dh,BYTE PTR [ebx-0x1b]
  40fcea:	and    BYTE PTR [edi-0x71],ah
  40fced:	lods   eax,DWORD PTR ds:[esi]
  40fcee:	les    esi,FWORD PTR [eax-0x23]
  40fcf1:	test   eax,0xd3968654
  40fcf6:	sbb    DWORD PTR [esi+0xf0fe240],edi
  40fcfc:	adc    eax,0xbfe08614
  40fd01:	push   edx
  40fd02:	retf   
  40fd03:	push   esp
  40fd04:	mov    BYTE PTR [edi-0x75],0xfb
  40fd08:	sahf   
  40fd09:	icebp  
  40fd0a:	in     al,0x75
  40fd0c:	sub    dl,BYTE PTR [eax+0x6c5bb9de]
  40fd12:	je     0x40fce1
  40fd14:	mov    bl,0x95
  40fd16:	loopne 0x40fd2f
  40fd18:	lock mov edx,0xd68cd400
  40fd1e:	ins    DWORD PTR es:[edi],dx
  40fd1f:	icebp  
  40fd20:	jbe    0x40fd19
  40fd22:	out    dx,al
  40fd23:	out    0xd2,eax
  40fd25:	mov    dh,BYTE PTR [edi+0xb]
  40fd28:	and    eax,0x314507a6
  40fd2d:	jmp    0x40fcf7
  40fd2f:	outs   dx,DWORD PTR ds:[esi]
  40fd30:	aaa    
  40fd31:	div    DWORD PTR [esp+edi*1]
  40fd34:	aam    0x7b
  40fd36:	(bad)  
  40fd37:	sbb    esi,ebx
  40fd39:	add    BYTE PTR [esi],bh
  40fd3b:	ds ror esp,1
  40fd3e:	or     DWORD PTR [ebp+0x1a],esi
  40fd41:	mov    ds:0xf7b8711a,eax
  40fd46:	pusha  
  40fd47:	and    al,0xc8
  40fd49:	mov    DWORD PTR [ebx-0x4466545c],edi
  40fd4f:	xor    DWORD PTR [edi+0x5],esp
  40fd52:	xchg   dh,dh
  40fd54:	add    eax,0x83e30e3e
  40fd59:	not    DWORD PTR ds:0x1ebabeec
  40fd5f:	add    DWORD PTR ss:[ecx+edx*4-0x7b],esp
  40fd64:	ret    
  40fd65:	jbe    0x40fde1
  40fd67:	fdiv   DWORD PTR [ecx-0x3af4b7d0]
  40fd6d:	arpl   bp,sp
  40fd6f:	out    dx,al
  40fd70:	test   DWORD PTR [ecx+0x7e],eax
  40fd73:	aad    0xe2
  40fd75:	test   bh,0x92
  40fd78:	pop    ecx
  40fd79:	pop    eax
  40fd7a:	xlat   BYTE PTR ds:[ebx]
  40fd7b:	ret    
  40fd7c:	sub    edi,DWORD PTR [edi]
  40fd7e:	sbb    ebp,DWORD PTR [edi-0x7313e4c8]
  40fd84:	aaa    
  40fd85:	in     al,dx
  40fd86:	cli    
  40fd87:	fsubr  DWORD PTR [edi+0x20]
  40fd8a:	add    eax,0xf976272c
  40fd8f:	xor    BYTE PTR [ecx+0x4a195780],al
  40fd95:	and    al,0x97
  40fd97:	ds xchg edi,eax
  40fd99:	lods   al,BYTE PTR ds:[esi]
  40fd9a:	mov    bl,0x21
  40fd9c:	xor    DWORD PTR [ebp+0x38],ecx
  40fd9f:	push   0xffffffce
  40fda1:	xchg   ebp,eax
  40fda2:	sub    ch,BYTE PTR [eax+esi*2+0x59dfa315]
  40fda9:	inc    ebp
  40fdaa:	stos   DWORD PTR es:[edi],eax
  40fdab:	outs   dx,DWORD PTR ds:[esi]
  40fdac:	mov    ah,0x89
  40fdae:	sub    al,0x2c
  40fdb0:	stos   DWORD PTR es:[edi],eax
  40fdb1:	push   es
  40fdb2:	xchg   DWORD PTR [ebx+ebx*2],eax
  40fdb5:	xor    ebp,DWORD PTR [edi]
  40fdb7:	(bad)  
  40fdb8:	je     0x40fdf9
  40fdba:	fwait
  40fdbb:	(bad)  
  40fdbc:	test   BYTE PTR [edi],0x2
  40fdbf:	ins    BYTE PTR es:[edi],dx
  40fdc0:	shr    DWORD PTR [edi-0x1f],1
  40fdc3:	sbb    al,0xd1
  40fdc5:	jns    0x40fdaa
  40fdc7:	jl     0x40fe3c
  40fdc9:	repz cmp edx,DWORD PTR [esi]
  40fdcc:	cld    
  40fdcd:	(bad)  
  40fdce:	imul   esi,DWORD PTR [ebx+edx*2+0x24],0xffffffca
  40fdd3:	scas   eax,DWORD PTR es:[edi]
  40fdd4:	pop    ecx
  40fdd5:	sbb    bh,ah
  40fdd7:	js     0x40fd64
  40fdd9:	sbb    DWORD PTR [edx+0x20beff9b],esp
  40fddf:	call   0x3d2e67d6
  40fde4:	ja     0x40fda2
  40fde6:	std    
  40fde7:	je     0x40fdf4
  40fde9:	ror    DWORD PTR [ebx+0x4d8be04d],0xe4
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x42226d
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0x7
  40fe8f:	outs   dx,DWORD PTR ds:[esi]
  40fe90:	pusha  
  40fe91:	sahf   
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	das    
  40fe9b:	mov    ah,0x43
  40fe9d:	mov    ecx,edi
  40fe9f:	into   
  40fea0:	mov    bh,0x57
  40fea2:	sub    ch,dh
  40fea4:	add    al,0x21
  40fea6:	jo     0x40febb
  40fea8:	sahf   
  40fea9:	or     bl,al
  40feab:	imul   edi,ecx,0x993889be
  40feb1:	imul   DWORD PTR [edi-0x59]
  40feb4:	ret    
  40feb5:	inc    eax
  40feb6:	pop    ebp
  40feb7:	mov    bl,0x39
  40feb9:	and    BYTE PTR [ebp+0x4a13273b],ah
  40febf:	and    eax,0xaf3d1adc
  40fec4:	cs call 0x97cf:0x4d4b36c0
  40fecc:	fs dec ebx
  40fece:	xchg   esi,eax
  40fecf:	sbb    eax,DWORD PTR ds:0xdea072eb
  40fed5:	stos   BYTE PTR es:[edi],al
  40fed6:	or     DWORD PTR [edx+0x742f507b],0x9f50e0a9
  40fee0:	or     eax,0xb5303d2e
  40fee5:	mov    fs,ebp
  40fee7:	pop    ss
  40fee8:	arpl   WORD PTR [ebx-0x210c3687],di
  40feee:	xor    al,0x59
  40fef0:	sub    bl,bh
  40fef2:	rcl    BYTE PTR [esp-0x5c772ab1],cl
  40fef9:	dec    esi
  40fefa:	inc    ebx
  40fefb:	xor    DWORD PTR cs:[eax+ebx*2],ebp
  40feff:	add    ebx,DWORD PTR [edi+0x7d]
  40ff02:	mov    eax,esi
  40ff04:	cld    
  40ff05:	inc    ecx
  40ff06:	cmp    edx,DWORD PTR [ebp+0x4d376293]
  40ff0c:	mov    edi,DWORD PTR [ebx]
  40ff0e:	push   ebx
  40ff0f:	and    ah,al
  40ff11:	nop
  40ff12:	ds pop edi
  40ff14:	pusha  
  40ff15:	mov    dl,0x91
  40ff17:	push   0xaab07286
  40ff1c:	daa    
  40ff1d:	in     eax,dx
  40ff1e:	repz fnstenv [ebx]
  40ff21:	xor    eax,0x7fdff1
  40ff26:	mov    edx,0xb7b0594c
  40ff2b:	ins    BYTE PTR es:[edi],dx
  40ff2c:	sbb    DWORD PTR [esi],ebx
  40ff2e:	mov    eax,0x8b0399d0
  40ff33:	mov    eax,ds:0xb0b4acdc
  40ff38:	mov    eax,ds:0x158f265f
  40ff3d:	clc    
  40ff3e:	call   0xd99e39f7
  40ff43:	fld    QWORD PTR [ebx+ecx*1+0x33]
  40ff47:	fst    QWORD PTR [ebx]
  40ff49:	mov    esp,0x78b05969
  40ff4e:	fild   WORD PTR [edi]
  40ff50:	push   ebp
  40ff51:	push   eax
  40ff52:	jecxz  0x40ffc3
  40ff54:	dec    esi
  40ff55:	bound  edx,QWORD PTR [ebp+0x7c]
  40ff58:	data16 jmp 0x40ff23
  40ff5b:	jg     0x40ff0d
  40ff5d:	mov    ds:0x6ad4322b,al
  40ff62:	outs   dx,BYTE PTR ds:[esi]
  40ff63:	fadd   DWORD PTR [ebx-0x6a]
  40ff66:	repnz lds ecx,FWORD PTR [ebx]
  40ff69:	inc    esi
  40ff6a:	ficomp WORD PTR [eax]
  40ff6c:	dec    edx
  40ff6d:	mov    esp,0x20c486f3
  40ff72:	cs pushw 0x4d8
  40ff77:	leave  
  40ff78:	mov    esi,0xca9c683
  40ff7d:	sub    eax,0xb25f0548
  40ff82:	sub    al,0xe
  40ff84:	dec    eax
  40ff85:	pop    ebp
  40ff86:	push   es
  40ff87:	xchg   ecx,eax
  40ff88:	stos   DWORD PTR es:[edi],eax
  40ff89:	push   ss
  40ff8a:	xor    eax,0x9afccada
  40ff8f:	pop    edi
  40ff90:	scas   al,BYTE PTR es:[edi]
  40ff91:	xor    eax,0xe276ce62
  40ff96:	popf   
  40ff97:	xchg   esp,eax
  40ff98:	test   DWORD PTR [eax],esp
  40ff9a:	nop
  40ff9b:	std    
  40ff9c:	and    DWORD PTR [ecx],0xffffffbf
  40ff9f:	xchg   edx,eax
  40ffa0:	out    0xfa,eax
  40ffa2:	fcomip st,st(7)
  40ffa4:	adc    eax,eax
  40ffa6:	dec    edx
  40ffa7:	mov    eax,gs:0xf9324951
  40ffad:	sub    eax,0xd5bb5a67
  40ffb2:	loope  0x40ff6f
  40ffb4:	and    al,0xa1
  40ffb6:	add    ah,0xa3
  40ffb9:	mov    edi,0xfab57af9
  40ffbe:	lods   al,BYTE PTR ds:[esi]
  40ffbf:	arpl   WORD PTR [edi-0x32],bx
  40ffc2:	lock xchg edx,eax
  40ffc4:	aaa    
  40ffc5:	jmp    0x17ac:0xc39e0f2e
  40ffcc:	sbb    edx,DWORD PTR [edx]
  40ffce:	sbb    DWORD PTR [ebx+0x70d8d9b3],esi
  40ffd4:	mov    edi,0xb49193ed
  40ffd9:	cwde   
  40ffda:	je     0x40ffbd
  40ffdc:	add    esp,DWORD PTR [ecx]
  40ffde:	inc    edx
  40ffdf:	(bad)  
  40ffe0:	ds mov eax,0x8ac97abf
  40ffe6:	addr16 pop ds
  40ffe8:	gs fwait
  40ffea:	aad    0x3a
  40ffec:	adc    bl,BYTE PTR [eax+edx*1+0x333e5cc5]
  40fff3:	arpl   WORD PTR [edi-0x4e153058],sp
  40fff9:	(bad)  
  40fffa:	into   
  40fffb:	cmp    DWORD PTR [ebp-0x4d],0x63cb742b
  410002:	xchg   ebx,eax
  410003:	push   0x32eac51
  410008:	shl    BYTE PTR ds:0x47c2e7fe,cl
  41000e:	or     DWORD PTR [esi],ebx
  410010:	pop    ebx
  410011:	pop    esi
  410012:	enter  0x6f38,0x11
  410016:	push   eax
  410017:	mov    bh,0xec
  410019:	int    0x7e
  41001b:	call   0xe8eea829
  410020:	mov    esp,0xc4056eed
  410025:	loope  0x40ffd5
  410027:	or     ch,dl
  410029:	call   0x9a81ba2b
  41002e:	push   0x6d80a9b5
  410033:	in     al,dx
  410034:	inc    esi
  410035:	add    eax,0xf8b54cb2
  41003a:	pop    esp
  41003b:	mov    ah,0xd0
  41003d:	xlat   BYTE PTR ds:[ebx]
  41003e:	inc    esi
  41003f:	fmul   DWORD PTR [edi+0x7ec6fd4e]
  410045:	xor    DWORD PTR [edi-0x4f984ce5],ebx
  41004b:	push   es
  41004c:	(bad)  [ebx-0x4b13e2e1]
  410052:	mov    dl,0x4c
  410054:	aam    0xa5
  410056:	icebp  
  410057:	ret    0x73b1
  41005a:	enter  0x675d,0x47
  41005e:	jmp    0x41000c
  410060:	sub    eax,0xf693b67d
  410065:	pop    edx
  410066:	daa    
  410067:	ins    DWORD PTR es:[edi],dx
  410068:	push   ebp
  410069:	shr    esi,0x2
  41006c:	out    dx,al
  41006d:	mov    dh,BYTE PTR ds:0x6dbc68f1
  410073:	out    0xc8,al
  410075:	jg     0x410091
  410077:	xor    DWORD PTR [ebx],0xb54c1e14
  41007d:	pop    ebx
  41007e:	call   0x54b6d0a5
  410083:	cmc    
  410084:	dec    edx
  410085:	lock add esi,DWORD PTR [ecx-0x25033928]
  41008c:	fdivr  QWORD PTR [ecx+ebp*1-0xd46e5dd]
  410093:	iret   
  410094:	xchg   bh,bl
  410096:	std    
  410097:	scas   al,BYTE PTR es:[edi]
  410098:	push   ecx
  410099:	add    al,0xb8
  41009b:	dec    esp
  41009c:	mov    dl,0x9b
  41009e:	(bad)  
  41009f:	gs add eax,0xae9e20d8
  4100a5:	mov    ds:0x5812cb9b,al
  4100aa:	xor    bh,ch
  4100ac:	mov    edi,eax
  4100ae:	pop    es
  4100af:	das    
  4100b0:	jl     0x410099
  4100b2:	test   eax,0x6cfb1ab
  4100b8:	jb     0x4100ac
  4100ba:	loopne 0x410112
  4100bc:	mov    ds:0xd8cb6c56,al
  4100c1:	inc    ecx
  4100c2:	test   DWORD PTR [ecx+0x7d710a90],edi
  4100c8:	test   DWORD PTR [esi],0x2d3acfdd
  4100ce:	shr    BYTE PTR [ecx+0x2f],cl
  4100d1:	xor    BYTE PTR [edi+0x6c47396],ah
  4100d7:	out    0x30,al
  4100d9:	add    al,0x93
  4100db:	mov    BYTE PTR [ebx-0x15660a89],bl
  4100e1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4100e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e4:	out    0x44,al
  4100e6:	cmp    edx,DWORD PTR [ebx]
  4100e8:	jmp    0x95673f98
  4100ed:	inc    edi
  4100ee:	push   ebp
  4100ef:	xchg   edx,eax
  4100f0:	call   0xcab70536
  4100f5:	cmc    
  4100f6:	mov    al,BYTE PTR [edi+0x74]
  4100f9:	sbb    DWORD PTR [eax],eax
  4100fb:	jno    0x4100be
  4100fd:	in     al,0x7a
  4100ff:	inc    esp
  410100:	ja     0x4100c2
  410102:	lods   al,BYTE PTR ds:[esi]
  410103:	jne    0x4100e0
  410105:	xchg   esp,eax
  410106:	cwde   
  410107:	dec    edi
  410108:	jle    0x4100c6
  41010a:	loopne 0x4100c9
  41010c:	out    0x66,al
  41010e:	mov    ds:0x76b722a2,eax
  410113:	mov    cl,0x34
  410115:	sar    edi,0x50
  410118:	retf   
  410119:	and    eax,0xbc51e567
  41011e:	clc    
  41011f:	jecxz  0x4100d4
  410121:	mov    ecx,DWORD PTR [eax]
  410123:	ja     0x41010a
  410125:	repnz int3 
  410127:	adc    DWORD PTR [ebx],0xffffffee
  41012a:	nop
  41012b:	sub    DWORD PTR [ecx-0x2d],0x66e64f13
  410132:	and    DWORD PTR [ecx],ecx
  410134:	(bad)
  410137:	adc    dh,BYTE PTR [ecx]
  410139:	dec    edx
  41013a:	dec    eax
  41013b:	cmc    
  41013c:	and    al,0x33
  41013e:	aad    0xd5
  410140:	loopne 0x410102
  410142:	xor    edx,DWORD PTR [ecx+0x78e46c82]
  410148:	jbe    0x4100ef
  41014a:	lahf   
  41014b:	fst    DWORD PTR [ebp+0x2108cbbf]
  410152:	mov    ?,WORD PTR [eax]
  410154:	das    
  410155:	xor    eax,0xc09febec
  41015a:	ror    DWORD PTR [edx+eax*4+0x6c],0xe7
  41015f:	data16 mov ds:0x1dbacac6,al
  410165:	scas   eax,DWORD PTR es:[edi]
  410166:	stos   DWORD PTR es:[edi],eax
  410167:	iret   
  410168:	test   DWORD PTR [eax-0x55],eax
  41016b:	inc    eax
  41016c:	sub    eax,0xa7a48de9
  410171:	aaa    
  410172:	arpl   WORD PTR [ebp+0x5f],cx
  410175:	icebp  
  410176:	and    cl,BYTE PTR [ebx]
  410178:	push   eax
  410179:	stos   DWORD PTR es:[edi],eax
  41017a:	mov    eax,0xeb29f11d
  41017f:	jle    0x410115
  410181:	xor    ecx,esp
  410183:	scas   al,BYTE PTR es:[edi]
  410184:	clc    
  410185:	out    dx,al
  410186:	(bad)  
  410188:	push   ecx
  410189:	mov    al,ds:0xcdf73d0e
  41018e:	dec    eax
  41018f:	and    eax,0xeed0e1f8
  410194:	mov    edx,0x8bb9fed3
  410199:	in     eax,dx
  41019a:	cdq    
  41019b:	popf   
  41019c:	or     DWORD PTR [eax],ecx
  41019e:	dec    DWORD PTR [edi-0x411b5cf9]
  4101a4:	jge    0x410217
  4101a6:	adc    al,0x4d
  4101a8:	push   ss
  4101a9:	push   ebp
  4101aa:	dec    esi
  4101ab:	cmp    eax,0x29818dc8
  4101b0:	sub    dl,cl
  4101b2:	inc    edx
  4101b3:	lahf   
  4101b4:	adc    eax,0x4c0dbf1d
  4101b9:	mov    ds:0xd258abbb,al
  4101be:	add    cl,BYTE PTR cs:[ebx-0x48]
  4101c2:	test   WORD PTR [edx+0x3915d1e5],sp
  4101c9:	fwait
  4101ca:	dec    edx
  4101cb:	dec    ebp
  4101cc:	mov    ch,0x69
  4101ce:	inc    eax
  4101cf:	and    esi,edx
  4101d1:	lea    edi,[eax-0x29]
  4101d4:	jmp    0x410206
  4101d6:	pop    edx
  4101d7:	adc    DWORD PTR [esi],esi
  4101d9:	ss movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4101dc:	and    DWORD PTR [ecx],esp
  4101de:	jmp    0x41023a
  4101e0:	stc    
  4101e1:	loop   0x41018f
  4101e3:	(bad)  
  4101e4:	fdivr  QWORD PTR [ecx]
  4101e6:	into   
  4101e7:	icebp  
  4101e8:	dec    ebp
  4101e9:	pop    ds
  4101ea:	scas   eax,DWORD PTR es:[edi]
  4101eb:	xlat   BYTE PTR ds:[ebx]
  4101ec:	test   al,0x7b
  4101ee:	shl    DWORD PTR fs:[ebx+0x1a6d24e1],0xaa
  4101f6:	and    bh,ah
  4101f8:	pop    ecx
  4101f9:	mov    edi,0xb5a20d2b
  4101fe:	fdivr  st(3),st
  410200:	pop    ss
  410201:	clc    
  410202:	(bad)  
  410203:	mov    ds:0x2eafefcc,eax
  410208:	mov    eax,ds:0x4110ea1a
  41020d:	bound  ecx,QWORD PTR [edi]
  41020f:	aas    
  410210:	nop
  410211:	ficomp DWORD PTR [ebx+0x7d1d4054]
  410217:	ja     0x4101fc
  410219:	push   ecx
  41021a:	out    0xae,al
  41021c:	mov    eax,0x784cc90c
  410221:	(bad)  
  410222:	loopne 0x410253
  410224:	mov    edx,0xf95b1cd7
  410229:	sti    
  41022a:	test   edx,edi
  41022c:	adc    BYTE PTR cs:[ecx],0xb4
  410230:	add    eax,0xbbd8458b
  410235:	add    cl,BYTE PTR [eax+eax*1+0x0]
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	mov    ebp,DWORD PTR [ecx+0x34c9cfae]
  410275:	mov    esi,0xbec4e3be
  41027a:	mov    esi,0xc18c491d
  41027f:	push   edi
  410280:	cmp    al,0x4b
  410282:	ret    
  410283:	sub    DWORD PTR [esi],ecx
  410285:	out    0xad,eax
  410287:	repz popa 
  410289:	rcl    DWORD PTR [eax-0x1a253a97],1
  41028f:	data16 cli 
  410291:	pop    edi
  410292:	xor    cl,dh
  410294:	shr    dl,cl
  410296:	dec    ecx
  410297:	add    al,0x9
  410299:	push   cs
  41029a:	push   es
  41029b:	sub    ah,BYTE PTR [edi+0xd3a657b]
  4102a1:	jns    0x4102d7
  4102a3:	cmp    eax,0x626ac7aa
  4102a8:	repnz addr16 out 0xd,eax
  4102ac:	mov    WORD PTR [edi],cs
  4102ae:	mul    esi
  4102b0:	push   ss
  4102b1:	aas    
  4102b2:	cmp    al,0xce
  4102b4:	out    dx,eax
  4102b5:	adc    bh,BYTE PTR [ecx+ecx*1-0x150270a6]
  4102bc:	addr16 out 0xdc,eax
  4102bf:	clc    
  4102c0:	out    0x2,al
  4102c2:	sar    esp,0xfc
  4102c5:	enter  0x82da,0x5c
  4102c9:	fistp  WORD PTR [esi-0x3251389e]
  4102cf:	cmp    BYTE PTR [ebx],cl
  4102d1:	mov    ds:0x367dcbef,al
  4102d6:	push   ebp
  4102d7:	mov    dh,0xc8
  4102d9:	pop    edx
  4102da:	outs   dx,DWORD PTR ds:[esi]
  4102db:	mov    bl,0xc5
  4102dd:	(bad)  
  4102de:	jecxz  0x41028f
  4102e0:	mov    bh,0x8c
  4102e2:	adc    DWORD PTR [eax-0x3b9b329e],esi
  4102e8:	(bad)  
  4102e9:	xor    ah,bh
  4102eb:	pop    esi
  4102ec:	cld    
  4102ed:	dec    edx
  4102ee:	test   eax,0x96888e10
  4102f3:	fisubr DWORD PTR ds:0xa1829b6e
  4102f9:	xchg   edi,eax
  4102fa:	(bad)  
  4102fb:	std    
  4102fc:	lds    ebp,FWORD PTR [esi-0x798d5617]
  410302:	lahf   
  410303:	xor    al,0xb9
  410305:	lods   al,BYTE PTR fs:[esi]
  410307:	inc    ecx
  410308:	in     al,0x7c
  41030a:	cmc    
  41030b:	or     BYTE PTR [ecx+edi*1-0x18],ch
  41030f:	push   0xfffffffb
  410311:	shr    DWORD PTR [ebx],0xd8
  410314:	aas    
  410315:	cli    
  410316:	pop    esp
  410317:	push   esp
  410318:	or     cl,BYTE PTR [ebp+0x1d979d4]
  41031e:	sbb    eax,0xf1696b5f
  410323:	sbb    esi,edx
  410325:	psubq  mm1,mm2
  410328:	outs   dx,DWORD PTR ds:[esi]
  410329:	xchg   DWORD PTR [ecx+0x4f19b068],esi
  41032f:	push   ebp
  410330:	xor    dh,bl
  410332:	and    edi,edi
  410334:	lea    esi,ds:0x8c389dc2
  41033a:	push   ss
  41033b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033c:	xchg   ebx,eax
  41033d:	sub    al,0xa
  41033f:	push   edi
  410340:	xchg   ecx,esi
  410342:	pop    es
  410343:	or     esi,DWORD PTR [ecx+0x7135931a]
  410349:	pop    ds
  41034a:	(bad)  
  41034b:	adc    cl,BYTE PTR [eax-0x4d]
  41034e:	ds (bad) 
  410350:	cld    
  410351:	mov    al,BYTE PTR [edx]
  410353:	push   eax
  410354:	and    BYTE PTR [esi+0x3b40843b],dh
  41035a:	and    ch,bl
  41035c:	jg     0x41033b
  41035e:	mov    esp,0x66b0927e
  410363:	cs int 0x7f
  410366:	mov    edx,0x41be0e1a
  41036b:	xlat   BYTE PTR ds:[ebx]
  41036c:	jb     0x410379
  41036e:	ror    BYTE PTR [edi],cl
  410370:	seta   BYTE PTR [esp+ebx*2+0x625228ba]
  410378:	jp     0x410352
  41037a:	cs jge 0x4103ef
  41037d:	imul   esp,DWORD PTR [esp+edx*1-0x11dc107b],0x9268afa1
  410388:	popf   
  410389:	pop    edi
  41038a:	retf   
  41038b:	mov    es,WORD PTR gs:[eax]
  41038e:	adc    al,0xa2
  410390:	sbb    BYTE PTR [ecx+0x7e29f47f],0x9c
  410397:	inc    ebx
  410398:	ror    BYTE PTR [edx*2-0x5e2de7c1],1
  41039f:	or     BYTE PTR [ebx-0xa028cbd],ah
  4103a5:	mov    ds:0xb611b896,eax
  4103aa:	ds mov dl,0xec
  4103ad:	sbb    DWORD PTR [ebx],edi
  4103af:	xchg   edx,eax
  4103b0:	out    0x11,al
  4103b2:	push   cs
  4103b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b4:	sub    edx,ebp
  4103b6:	scas   eax,DWORD PTR es:[edi]
  4103b7:	lds    edx,FWORD PTR [ebx+0x719bcfd2]
  4103bd:	pop    ebx
  4103be:	push   edi
  4103bf:	iret   
  4103c0:	fs (bad) 
  4103c2:	(bad)  
  4103c4:	pusha  
  4103c5:	retf   
  4103c6:	je     0x410433
  4103c8:	push   eax
  4103c9:	jge    0x4103fc
  4103cb:	mov    ds:0x49121240,al
  4103d0:	sub    esi,ecx
  4103d2:	xchg   edx,eax
  4103d3:	xor    eax,0x5fd4b3aa
  4103d8:	pop    esp
  4103d9:	mov    edx,0x22ec90e8
  4103de:	test   ch,ch
  4103e0:	mov    bh,0xc1
  4103e2:	dec    esp
  4103e3:	lods   eax,DWORD PTR ds:[esi]
  4103e4:	pop    ds
  4103e5:	in     al,0xb5
  4103e7:	mul    BYTE PTR [ebp+0x50]
  4103ea:	cmp    eax,ebx
  4103ec:	enter  0x4877,0xe5
  4103f0:	mov    WORD PTR ds:[ebp+0x73076b1d],cs
  4103f7:	ffree  st(3)
  4103f9:	ss pop eax
  4103fb:	push   0xffffffd4
  4103fd:	and    BYTE PTR [edx+0x6e],ah
  410400:	sub    cl,BYTE PTR [ebx]
  410402:	adc    DWORD PTR [eax],0xfffffff4
  410405:	jns    0x4103ac
  410407:	call   0xe4710eaf
  41040c:	dec    esi
  41040d:	js     0x410476
  41040f:	inc    ebx
  410410:	jo     0x41043c
  410412:	xchg   ebx,eax
  410413:	hlt    
  410414:	push   ecx
  410415:	xchg   ebp,eax
  410416:	nop
  410417:	fwait
  410418:	mov    dh,BYTE PTR [ecx+0x75]
  41041b:	adc    edi,esp
  41041d:	fwait
  41041e:	mov    ah,0xf0
  410420:	popa   
  410421:	jo     0x4103c5
  410423:	jno    0x410484
  410425:	imul   esp,DWORD PTR [ecx-0x2f],0x2f5f7564
  41042c:	xor    bh,ah
  41042e:	stos   DWORD PTR es:[edi],eax
  41042f:	nop
  410430:	clc    
  410431:	or     edx,DWORD PTR [esi-0x68b41a86]
  410437:	dec    esi
  410438:	bound  ebp,QWORD PTR [edx+0x53b1ba2c]
  41043e:	fisub  DWORD PTR [eax+0x1a]
  410441:	jnp    0x4103dc
  410443:	and    dh,BYTE PTR [edx+0x21]
  410446:	pop    ecx
  410447:	(bad)  [ebx-0x62e39d3c]
  41044d:	mov    bh,0x45
  41044f:	or     esi,DWORD PTR [edi-0x6a]
  410452:	dec    esi
  410453:	popa   
  410454:	inc    edi
  410455:	dec    DWORD PTR [ebp+0x484e98e7]
  41045b:	iret   
  41045c:	inc    ebx
  41045d:	add    esp,DWORD PTR [ebp+0x3b0e017b]
  410463:	mov    esi,0x6dd303e3
  410468:	mov    edi,0x1584dd37
  41046d:	cmc    
  41046e:	mov    dl,0x83
  410470:	or     ah,dh
  410472:	cli    
  410473:	sar    DWORD PTR [ebx+0x724d432b],0x42
  41047a:	in     al,0xc2
  41047c:	dec    edx
  41047d:	add    DWORD PTR [edi+0x23],0xffffffa5
  410481:	pop    ss
  410482:	ret    0x9516
  410485:	das    
  410486:	inc    edx
  410487:	push   ds
  410488:	pop    ebp
  410489:	(bad)  [ebp-0x74]
  41048c:	or     eax,0xc4a1ec82
  410491:	out    dx,al
  410492:	add    ch,BYTE PTR [edx-0x7d80f9c6]
  410498:	pusha  
  410499:	loope  0x410452
  41049b:	mov    eax,ds:0x8d51e7c8
  4104a0:	loop   0x410465
  4104a2:	mov    cl,0x78
  4104a4:	cmp    BYTE PTR [ebx-0x22],dh
  4104a7:	push   eax
  4104a8:	jno    0x4104b2
  4104aa:	xor    al,0x88
  4104ac:	popa   
  4104ad:	js     0x410495
  4104af:	fcomp  QWORD PTR [edi+ebx*8+0x44]
  4104b3:	jnp    0x4104f9
  4104b5:	idiv   DWORD PTR ds:0xf0f0fe99
  4104bb:	or     ebp,ebx
  4104bd:	test   ebx,esi
  4104bf:	mov    al,0x45
  4104c1:	sbb    dh,bh
  4104c3:	addr16 std 
  4104c5:	je     0x4104e0
  4104c7:	sbb    bh,BYTE PTR [ebx]
  4104c9:	push   0xf
  4104cb:	lea    ebx,[ecx]
  4104cd:	enter  0xdece,0x6c
  4104d1:	mov    ds:0x113a4f7b,eax
  4104d6:	cmp    eax,0x7d5f885
  4104db:	mov    eax,ds:0x1d6becea
  4104e0:	fild   WORD PTR [esi-0x28]
  4104e3:	xchg   edi,eax
  4104e4:	lds    esp,FWORD PTR [edx+0x6e]
  4104e7:	test   eax,0x8091c792
  4104ec:	gs test ecx,edx
  4104ef:	repz repnz in al,0x5e
  4104f3:	jg     0x410572
  4104f5:	dec    esi
  4104f6:	icebp  
  4104f7:	pop    ebx
  4104f8:	pusha  
  4104f9:	arpl   WORD PTR [ecx+0x22],cx
  4104fc:	retf   0x3834
  4104ff:	adc    al,cl
  410501:	in     eax,dx
  410502:	xchg   ebx,eax
  410503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410504:	iret   
  410505:	mov    ecx,0xa7b725e9
  41050a:	adc    DWORD PTR [ebx],ebx
  41050c:	dec    edx
  41050d:	sar    esi,1
  41050f:	loope  0x41053a
  410511:	and    BYTE PTR [ebx],0xb8
  410514:	push   ss
  410515:	xor    al,0x82
  410517:	not    BYTE PTR [edi+ecx*4-0x5ef6124e]
  41051e:	bound  ecx,QWORD PTR [eax-0x670bf68e]
  410524:	mov    ebp,0xd69d7fb3
  410529:	xchg   esi,eax
  41052a:	mov    al,0x83
  41052c:	dec    ecx
  41052d:	or     BYTE PTR [edi+0x21],0xd2
  410531:	add    eax,esp
  410533:	add    al,0x3f
  410535:	cwde   
  410536:	or     eax,0xd05dae2c
  41053b:	mov    esp,0x37e19ee
  410540:	pop    edi
  410541:	dec    eax
  410542:	imul   ecx,DWORD PTR ds:0x2457846d,0x18
  410549:	mov    bl,0x7f
  41054b:	dec    ecx
  41054c:	and    al,BYTE PTR [ebp-0x67]
  41054f:	popa   
  410550:	jae    0x41052b
  410552:	retf   
  410553:	outs   dx,DWORD PTR ds:[esi]
  410554:	in     eax,0x91
  410556:	sub    DWORD PTR [esi-0x417b6fc1],ecx
  41055c:	stos   BYTE PTR es:[edi],al
  41055d:	cmp    al,0xe0
  41055f:	xor    al,0x45
  410561:	aaa    
  410562:	cli    
  410563:	mov    ds:0x8988e87c,eax
  410568:	and    dl,BYTE PTR [esp+ebp*1]
  41056b:	jl     0x4105c7
  41056d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41056e:	adc    DWORD PTR [ebx+0x20028c5d],esi
  410574:	push   esp
  410575:	mov    ah,0x52
  410577:	jg     0x410521
  410579:	fucomp st(2)
  41057b:	repnz loopne 0x4105e7
  41057e:	jbe    0x410527
  410580:	rol    edi,cl
  410582:	repnz cmp eax,0x96073e49
  410588:	xchg   BYTE PTR [ebp-0xa],dh
  41058b:	rcl    ch,0xf6
  41058e:	es ret 
  410590:	push   ebx
  410591:	sub    eax,0x20905709
  410596:	mov    ds:0x7ceaf7d7,al
  41059b:	fcom   st(7)
  41059d:	xchg   ebx,eax
  41059e:	jg     0x4105f6
  4105a0:	mov    al,0x1
  4105a2:	add    eax,ebp
  4105a4:	std    
  4105a5:	push   0x8fdd5b6a
  4105aa:	mov    ds:0x19e4482a,al
  4105af:	push   0xffffffb5
  4105b1:	adc    eax,0xfd5a9cc6
  4105b6:	push   ss
  4105b7:	push   esi
  4105b8:	jecxz  0x4105dc
  4105ba:	dec    ebx
  4105bb:	xlat   BYTE PTR ds:[ebx]
  4105bc:	push   ebx
  4105bd:	lods   eax,DWORD PTR ds:[esi]
  4105be:	cmp    al,ah
  4105c0:	cmc    
  4105c1:	push   edi
  4105c2:	mov    DWORD PTR [edi+0x238d68b8],ebx
  4105c8:	pushf  
  4105c9:	std    
  4105ca:	rcr    esi,cl
  4105cc:	jns    0x4105e2
  4105ce:	dec    eax
  4105cf:	(bad)  
  4105d0:	call   0x9aa0:0xb98ba94a
  4105d7:	stc    
  4105d8:	mov    bl,0x22
  4105da:	lahf   
  4105db:	inc    ebp
  4105dc:	push   esp
  4105dd:	jge    0x41059f
  4105df:	adc    dh,BYTE PTR [ebx+eiz*1-0x5c7b52d7]
  4105e6:	push   ebp
  4105e7:	iret   
  4105e8:	add    ebx,DWORD PTR [ebx+eax*2]
  4105eb:	jge    0x410628
  4105ed:	pop    bp
  4105ef:	loop   0x410667
  4105f1:	int    0xb1
  4105f3:	fild   WORD PTR [edi-0x91a238e]
  4105f9:	retf   0x3b7d
  4105fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fd:	mov    al,0x8f
  4105ff:	push   esp
  410600:	inc    edi
  410601:	aas    
  410602:	or     bl,BYTE PTR [esi-0x6d]
  410605:	sub    esi,DWORD PTR [ebp-0x35]
  410608:	inc    ecx
  410609:	jge    0x410648
  41060b:	ret    
  41060c:	inc    ebx
  41060d:	mov    cl,0x1
  41060f:	retf   0x3fd0
  410612:	mov    ebx,DWORD PTR [ebp-0x2c]
  410615:	mov    ecx,DWORD PTR [ebp+0xc]
  410618:	add    esi,DWORD PTR [ecx]
  41061a:	xor    edx,0xcb79b577
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x42226d
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fst    QWORD PTR [ebx+ebp*4]
  410673:	pop    esi
  410674:	sahf   
  410675:	out    dx,eax
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	sar    BYTE PTR [edi],0x4b
  410680:	mov    ecx,esp
  410682:	and    BYTE PTR [edx+0x337fa2ad],0x15
  410689:	sti    
  41068a:	inc    edx
  41068b:	pop    edi
  41068c:	mov    al,ds:0x5038b0a6
  410691:	cli    
  410692:	aad    0xf3
  410694:	sbb    al,0x19
  410696:	retf   
  410697:	cmp    bl,BYTE PTR [ebx]
  410699:	scas   eax,DWORD PTR es:[edi]
  41069a:	pop    esi
  41069b:	repnz mov WORD PTR [edx],cs
  41069e:	xchg   ebx,eax
  41069f:	imul   edi,DWORD PTR [ebx-0x3f],0x57
  4106a3:	add    DWORD PTR [ebp+0x412f0c27],ecx
  4106a9:	je     0x4106d0
  4106ab:	or     eax,0xe6c038a1
  4106b0:	outs   dx,BYTE PTR ds:[esi]
  4106b1:	dec    ebx
  4106b2:	mov    al,BYTE PTR [eax-0x673cb734]
  4106b8:	(bad)  
  4106ba:	retf   
  4106bb:	mov    esp,0xc9d13134
  4106c0:	cmp    esp,0x7a
  4106c3:	(bad)  
  4106c4:	and    al,0xe7
  4106c6:	or     cl,ah
  4106c8:	jno    0x4106f4
  4106ca:	ins    BYTE PTR es:[edi],dx
  4106cb:	jbe    0x4106b9
  4106cd:	inc    bx
  4106cf:	xor    BYTE PTR [esi],0xf0
  4106d2:	jae    0x4106fc
  4106d4:	lods   eax,DWORD PTR ds:[esi]
  4106d5:	mov    ds:0x5daf719a,al
  4106da:	fisubr WORD PTR [esp+ebx*4+0x6e39f1c]
  4106e1:	xor    cl,BYTE PTR [ebp+ebp*8+0x1b]
  4106e5:	mov    esi,0xab963803
  4106ea:	inc    edi
  4106eb:	sbb    eax,0x9236cf96
  4106f0:	mov    ds:0x16f8c82a,al
  4106f5:	fcomp  st(5)
  4106f7:	idiv   BYTE PTR [edi+ecx*2-0x2a271632]
  4106fe:	fsub   DWORD PTR [edx-0xa]
  410701:	xchg   ebp,eax
  410702:	jmp    0x4106ad
  410704:	scas   al,BYTE PTR es:[edi]
  410705:	es std 
  410707:	xor    ebx,esi
  410709:	mov    edx,0xc63108e2
  41070e:	sti    
  41070f:	pop    es
  410710:	leave  
  410711:	in     eax,0xc5
  410713:	leave  
  410714:	ss pop ds
  410716:	hlt    
  410717:	iret   
  410718:	inc    esi
  410719:	and    BYTE PTR [edx],0x54
  41071c:	xchg   BYTE PTR [edx-0x69],bl
  41071f:	arpl   WORD PTR [eax+0x76],bx
  410722:	pop    esi
  410723:	pop    esi
  410724:	inc    esi
  410725:	idiv   BYTE PTR [edx+0x6f]
  410728:	dec    eax
  410729:	ficomp DWORD PTR [edx-0x60ed6e64]
  41072f:	adc    eax,0xc592edc0
  410734:	mov    al,0xbd
  410736:	pop    edi
  410737:	add    edi,esi
  410739:	mov    ds:0x60c38bd6,eax
  41073e:	jmp    0x41079b
  410740:	shl    DWORD PTR [eax-0x4a20a2a6],1
  410746:	jmp    0xf9e0:0x5dfd4c43
  41074d:	sub    ebx,ecx
  41074f:	and    al,0x4e
  410751:	and    eax,0x3d34e321
  410756:	stc    
  410757:	xchg   esp,eax
  410758:	push   edi
  410759:	jle    0x4106fb
  41075b:	mov    al,ds:0xda25100e
  410760:	adc    DWORD PTR [ebp-0x79],edx
  410763:	jne    0x410781
  410765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410766:	shl    BYTE PTR [esi],1
  410768:	inc    ebx
  410769:	data16 das 
  41076b:	inc    edx
  41076c:	jae    0x4107b3
  41076e:	xchg   esi,eax
  41076f:	retf   0x532f
  410772:	inc    edx
  410773:	mov    edi,eax
  410775:	cs xor eax,0x90459e26
  41077b:	out    0x12,eax
  41077d:	enter  0x8c43,0x31
  410781:	cli    
  410782:	ror    DWORD PTR [edi],1
  410784:	lock mov dh,0x9a
  410787:	adc    bl,BYTE PTR [ecx-0x240000d3]
  41078d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078e:	sbb    bh,BYTE PTR [ebx-0x5a471350]
  410794:	inc    eax
  410795:	jb     0x4107c3
  410797:	jns    0x41078c
  410799:	rol    DWORD PTR [edx],0x12
  41079c:	pop    esi
  41079d:	mov    cl,0x61
  41079f:	mov    ds:0x84b08b5f,al
  4107a4:	enter  0xf86d,0xfc
  4107a8:	push   ebx
  4107a9:	scas   al,BYTE PTR es:[edi]
  4107aa:	out    dx,al
  4107ab:	in     al,dx
  4107ac:	mov    esi,0x3e117fec
  4107b1:	test   eax,0xd389a82a
  4107b6:	mov    ch,BYTE PTR [eax+0x13e7b0d2]
  4107bc:	push   edx
  4107bd:	cdq    
  4107be:	mov    ecx,0x857c5a2e
  4107c3:	jae    0x410763
  4107c5:	pop    ecx
  4107c6:	cmp    bh,cl
  4107c8:	add    bh,BYTE PTR [ebx+0x3c]
  4107cb:	retf   0x6560
  4107ce:	xor    dh,bl
  4107d0:	cdq    
  4107d1:	fwait
  4107d2:	mov    bh,BYTE PTR [eax]
  4107d4:	push   ss
  4107d5:	lea    eax,[ecx]
  4107d7:	cld    
  4107d8:	xchg   edi,eax
  4107d9:	and    eax,0x2408550d
  4107de:	sbb    DWORD PTR [edi],0x3b
  4107e1:	cmp    dh,BYTE PTR [eax]
  4107e3:	mov    dh,0xba
  4107e5:	(bad)  
  4107e6:	mov    al,0xca
  4107e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e9:	jno    0x41078d
  4107eb:	cld    
  4107ec:	xor    eax,0x93f69121
  4107f1:	xor    DWORD PTR [ecx+0x12],edi
  4107f4:	sub    BYTE PTR [esi-0xb42ce8c],ah
  4107fa:	add    dh,al
  4107fc:	pop    eax
  4107fd:	mov    dh,BYTE PTR [edx+0x2bf4b6ab]
  410803:	mov    BYTE PTR [ebx-0x1],ah
  410806:	jmp    0xe48b0ee1
  41080b:	or     al,0x95
  41080d:	sub    bh,bh
  41080f:	jl     0x41086e
  410811:	stos   DWORD PTR es:[edi],eax
  410812:	pop    ss
  410813:	mov    eax,ds:0x4d94e21d
  410818:	dec    ecx
  410819:	rcr    DWORD PTR [edx],0x20
  41081c:	xchg   esp,eax
  41081d:	pushf  
  41081e:	jno    0x41085a
  410820:	jmp    0xa791:0xf078ff5a
  410827:	jbe    0x410879
  410829:	(bad)  
  41082a:	pop    ecx
  41082b:	fs push edi
  41082d:	mov    esi,0x9e27d489
  410832:	ins    BYTE PTR es:[edi],dx
  410833:	inc    esp
  410834:	and    BYTE PTR [eax+0x6603c3a3],bh
  41083a:	pop    edx
  41083b:	imul   edi,esi,0xe7c706e8
  410841:	pop    esi
  410842:	in     al,0xef
  410844:	xor    DWORD PTR [eax],ebp
  410846:	jae    0x4107e0
  410848:	es mov ch,0x37
  41084b:	stos   DWORD PTR es:[edi],eax
  41084c:	sbb    ebx,esi
  41084e:	mov    ecx,0x3178f609
  410853:	jo     0x410868
  410855:	or     eax,0x346a6324
  41085a:	sbb    al,al
  41085c:	sbb    eax,0xbe3b8f83
  410861:	xchg   BYTE PTR [esi*8-0x63624b6a],bh
  410868:	loop   0x410849
  41086a:	sub    ebp,DWORD PTR [edx-0x4f7d7beb]
  410870:	push   ss
  410871:	mov    ebx,0x33531c6e
  410876:	adc    DWORD PTR [ebx],0xffffff8f
  410879:	fwait
  41087a:	mov    esi,0xe9efea8b
  41087f:	ins    BYTE PTR es:[edi],dx
  410880:	xchg   BYTE PTR [ecx],ch
  410882:	stc    
  410883:	sbb    eax,edi
  410885:	sbb    edx,DWORD PTR [edi+esi*8-0x235630ba]
  41088c:	or     DWORD PTR [eax+0x2b],edi
  41088f:	lods   eax,DWORD PTR ds:[esi]
  410890:	retf   0x122d
  410893:	fsub   st,st(5)
  410895:	or     al,BYTE PTR [eax+0x1701bb06]
  41089b:	call   0xa6a6:0x273ceb42
  4108a2:	call   0xa0e3e6ef
  4108a7:	test   eax,0x87bd51b4
  4108ac:	jle    0x4108b2
  4108ae:	dec    esp
  4108af:	scas   eax,DWORD PTR es:[edi]
  4108b0:	int3   
  4108b1:	popf   
  4108b2:	adc    ebx,DWORD PTR [esi]
  4108b4:	cld    
  4108b5:	sub    al,dh
  4108b7:	mov    bl,0x5a
  4108b9:	pop    edx
  4108ba:	cmp    al,0xb3
  4108bc:	lea    eax,[edx-0x32267cd]
  4108c2:	adc    esp,ebp
  4108c4:	mov    ebp,0x26dcff11
  4108c9:	div    DWORD PTR [ebp+0x21]
  4108cc:	mov    edi,0xaeba3b76
  4108d1:	xchg   esi,eax
  4108d2:	jo     0x410934
  4108d4:	aas    
  4108d5:	ror    DWORD PTR cs:[edi+ecx*4+0x60b9e362],cl
  4108dd:	(bad)  
  4108de:	or     DWORD PTR [esi],edx
  4108e0:	or     al,ah
  4108e2:	sahf   
  4108e3:	cmp    edx,DWORD PTR [esi]
  4108e5:	jo     0x410905
  4108e7:	mov    ds:0x56c63d9a,eax
  4108ec:	pop    ss
  4108ed:	xchg   esp,eax
  4108ee:	das    
  4108ef:	cmp    edi,DWORD PTR [edi-0x52]
  4108f2:	cmp    ecx,DWORD PTR ds:0xe3e5f479
  4108f8:	neg    BYTE PTR [ebp+0x966f6e]
  4108fe:	push   DWORD PTR [ebp+0xb194f21]
  410904:	ja     0x410903
  410906:	in     eax,dx
  410907:	std    
  410908:	sar    BYTE PTR [esi],0x77
  41090b:	jmp    0x92a8:0xf490e535
  410912:	ins    BYTE PTR es:[edi],dx
  410913:	rcl    DWORD PTR [eax-0x75],0xe0
  410917:	les    ebx,FWORD PTR [edx+0x119e922a]
  41091d:	pop    esp
  41091e:	pusha  
  41091f:	push   es
  410920:	call   0xd686789e
  410925:	or     al,0xc6
  410927:	pop    esi
  410928:	jg     0x410931
  41092a:	fadd   QWORD PTR [eax+0x43]
  41092d:	call   FWORD PTR [ecx+0x6b]
  410930:	push   ecx
  410931:	and    DWORD PTR [eax-0x4312b7ee],ecx
  410937:	mov    ecx,ebp
  410939:	out    dx,al
  41093a:	(bad)  
  41093b:	aad    0xdf
  41093d:	lods   al,BYTE PTR ds:[esi]
  41093e:	mov    ah,0xd5
  410940:	shl    ebx,cl
  410942:	iret   
  410943:	inc    edx
  410944:	sbb    eax,0x6bd14f9d
  410949:	add    eax,DWORD PTR [eax]
  41094b:	daa    
  41094c:	jne    0x410984
  41094e:	pushf  
  41094f:	pop    ebp
  410950:	int3   
  410951:	adc    BYTE PTR [eax+0x2f198b94],ch
  410957:	add    eax,DWORD PTR [edi+0x6d]
  41095a:	sti    
  41095b:	inc    edx
  41095c:	retf   
  41095d:	int    0x29
  41095f:	sbb    al,0x4d
  410961:	push   ebp
  410962:	cmp    eax,0xbb37e8f7
  410967:	retf   
  410968:	add    eax,0xf171fd11
  41096d:	retf   0x306c
  410970:	inc    ebx
  410971:	mov    ah,0x1c
  410973:	enter  0x6d74,0x90
  410977:	adc    eax,0x561223c3
  41097c:	inc    ecx
  41097d:	ss mov bh,0xb8
  410980:	and    eax,0x374e2c24
  410985:	sbb    eax,eax
  410987:	dec    edi
  410988:	arpl   WORD PTR [esi+0x1a],di
  41098b:	mov    ds:0xa453de75,al
  410990:	jno    0x410a09
  410992:	sar    BYTE PTR [ebp-0x5af43c0f],cl
  410998:	(bad)  
  410999:	repnz les eax,FWORD PTR [eax+edi*2]
  41099d:	in     al,dx
  41099e:	fs imul esi,eax,0xffffffe4
  4109a2:	mov    dl,0x28
  4109a4:	rol    BYTE PTR [edx-0x3c],0x82
  4109a8:	jo     0x41092a
  4109aa:	test   al,dh
  4109ac:	stc    
  4109ad:	pushf  
  4109ae:	cmp    DWORD PTR [esi],0x9bda7dbf
  4109b4:	pop    esi
  4109b5:	sar    DWORD PTR [eax+eiz*2],0xf5
  4109b9:	xor    BYTE PTR [edi+0x4e],ah
  4109bc:	mov    ecx,0x85e2daba
  4109c1:	jne    0x410a03
  4109c3:	xor    ch,BYTE PTR ds:0x4b62b726
  4109c9:	scas   eax,DWORD PTR es:[edi]
  4109ca:	cmp    esi,esp
  4109cc:	or     eax,DWORD PTR [ebp+edx*2-0x3f6f1601]
  4109d3:	push   cs
  4109d4:	sbb    al,BYTE PTR [ebp+0xc71db98]
  4109da:	inc    edi
  4109db:	outs   dx,DWORD PTR ds:[esi]
  4109dc:	std    
  4109dd:	xchg   edx,eax
  4109de:	imul   edi,DWORD PTR [ecx-0x728e8b30],0x70
  4109e5:	jb     0x410a30
  4109e7:	ins    BYTE PTR es:[edi],dx
  4109e8:	add    BYTE PTR [esi-0x6],al
  4109eb:	call   FWORD PTR [ebx]
  4109ed:	sub    DWORD PTR ds:0xeb649d68,0x56db2e4f
  4109f7:	ins    DWORD PTR es:[edi],dx
  4109f8:	in     eax,0x9b
  4109fa:	in     eax,dx
  4109fb:	arpl   sp,di
  4109fd:	gs dec ebx
  4109ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a00:	xchg   edi,eax
  410a01:	std    
  410a02:	ins    BYTE PTR es:[edi],dx
  410a03:	push   ebp
  410a04:	pop    edx
  410a05:	dec    esp
  410a06:	ret    
  410a07:	pop    ss
  410a08:	(bad)  
  410a09:	out    dx,al
  410a0a:	xchg   BYTE PTR [esi],bl
  410a0c:	mov    dl,0xf3
  410a0e:	sub    DWORD PTR [ecx+0x61613960],edi
  410a14:	mov    esi,DWORD PTR [ebp-0x3c]
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0xee06fba4
  410a4c:	iret   
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0xc385dc5e
  410a59:	popa   
  410a5a:	mov    edx,0xd6e87a01
  410a5f:	popa   
  410a60:	pop    DWORD PTR [eax-0x49cb776c]
  410a66:	div    cl
  410a68:	cs fst st(7)
  410a6b:	call   0xaaf5:0x211705fe
  410a72:	scas   eax,DWORD PTR es:[edi]
  410a73:	cdq    
  410a74:	and    DWORD PTR [ebx],esi
  410a76:	sti    
  410a77:	jp     0x410a04
  410a79:	(bad)  
  410a7a:	adc    eax,0x5b1a6205
  410a7f:	into   
  410a80:	sbb    eax,esp
  410a82:	dec    ebx
  410a83:	outs   dx,BYTE PTR ds:[esi]
  410a84:	loop   0x410a33
  410a86:	adc    eax,0x19f5752f
  410a8b:	jne    0x410a8b
  410a8d:	sar    BYTE PTR [eax+0x65],0xbe
  410a91:	rcr    BYTE PTR [ebx],0x6
  410a94:	and    DWORD PTR [ebx-0x32633abd],ecx
  410a9a:	mov    eax,0x323168e1
  410a9f:	(bad)  
  410aa0:	not    BYTE PTR [esp+ecx*4]
  410aa3:	lds    esi,FWORD PTR [eax]
  410aa5:	daa    
  410aa6:	pop    edx
  410aa7:	jbe    0x410a48
  410aa9:	jmp    0x98dd:0x4fe6050e
  410ab0:	ins    DWORD PTR es:[edi],dx
  410ab1:	sbb    esp,DWORD PTR ds:0x54e98e6c
  410ab7:	and    esp,DWORD PTR [eax-0x6]
  410aba:	push   ds
  410abb:	dec    eax
  410abc:	call   0xe641:0xaa3e7a72
  410ac3:	outs   dx,DWORD PTR ds:[esi]
  410ac4:	idiv   BYTE PTR [edi+0x684326ab]
  410aca:	cmc    
  410acb:	jmp    0xf932:0x7c070543
  410ad2:	ret    0x53a3
  410ad5:	hlt    
  410ad6:	verr   WORD PTR [eax+0x78]
  410ada:	cmp    eax,0x605fb08b
  410adf:	nop
  410ae0:	fidiv  DWORD PTR [ebx-0x2f]
  410ae3:	stos   DWORD PTR es:[edi],eax
  410ae4:	add    esi,ecx
  410ae6:	mov    ds:0x3e5a6df8,eax
  410aeb:	jle    0x410b47
  410aed:	ror    DWORD PTR [ecx+0x43],0x72
  410af1:	ins    DWORD PTR es:[edi],dx
  410af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af3:	jne    0x410a80
  410af5:	in     al,0x80
  410af7:	pushf  
  410af8:	push   edx
  410af9:	or     eax,edi
  410afb:	sub    BYTE PTR [esi],dl
  410afd:	fst    DWORD PTR [ebp+0x1559d73b]
  410b03:	nop
  410b04:	sti    
  410b05:	cmp    DWORD PTR [ecx*8+0x5b55ebd8],ebx
  410b0c:	sahf   
  410b0d:	sub    ch,BYTE PTR [esi]
  410b0f:	loopne 0x410b1a
  410b11:	cmp    ebx,esi
  410b13:	std    
  410b14:	fsub   QWORD PTR [edx-0x766e3b26]
  410b1a:	neg    ebx
  410b1c:	add    eax,0x80b615b8
  410b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b22:	fs jbe 0x410acd
  410b25:	dec    ebp
  410b26:	push   ecx
  410b27:	dec    eax
  410b28:	mov    esi,0x26f8d4a1
  410b2d:	lods   al,BYTE PTR ds:[esi]
  410b2e:	cmp    al,0xcc
  410b30:	pop    ebp
  410b31:	ror    bh,0xbe
  410b34:	paddb  mm3,QWORD PTR [edx-0x6beb7007]
  410b3b:	ja     0x410b02
  410b3d:	iret   
  410b3e:	adc    DWORD PTR [esi+0x0],edi
  410b41:	and    eax,0xc74bd2ed
  410b46:	push   edx
  410b47:	adc    bl,ah
  410b49:	call   0x84d:0xf4fca7f1
  410b50:	xor    ecx,edi
  410b52:	or     DWORD PTR [edx+0x18],esi
  410b55:	out    0xa0,eax
  410b57:	push   esp
  410b58:	and    esp,eax
  410b5a:	je     0x410bbf
  410b5c:	pop    ds
  410b5d:	cli    
  410b5e:	ins    BYTE PTR es:[edi],dx
  410b5f:	fwait
  410b60:	pop    edi
  410b61:	retf   0xfb0f
  410b64:	fmul   QWORD PTR [ebp-0xe08b9f3]
  410b6a:	pop    eax
  410b6b:	cwde   
  410b6c:	into   
  410b6d:	and    edi,DWORD PTR [esp+edx*8-0x12]
  410b71:	je     0x410b79
  410b73:	jbe    0x410bd8
  410b75:	pop    es
  410b76:	leave  
  410b77:	shl    BYTE PTR [ebp-0x64],cl
  410b7a:	inc    DWORD PTR [ebx+0x15]
  410b7d:	out    0x8,al
  410b7f:	pop    ebp
  410b80:	popa   
  410b81:	cmp    al,0xc4
  410b83:	sbb    dl,al
  410b85:	mov    esi,0x73862016
  410b8a:	xchg   edx,eax
  410b8b:	mov    ebp,0x83876df
  410b90:	fnstcw WORD PTR [ebx+0x55]
  410b93:	jo     0x410b4b
  410b95:	ret    
  410b96:	jp     0x410bc7
  410b98:	loope  0x410bed
  410b9a:	ja     0x410bc9
  410b9c:	jae    0x410c1d
  410b9e:	ret    
  410b9f:	mov    edx,0x9f33e413
  410ba4:	test   al,0x93
  410ba6:	rol    DWORD PTR [eax],1
  410ba8:	push   ebx
  410ba9:	sbb    esp,DWORD PTR [eax-0x2c]
  410bac:	push   ebp
  410bad:	cmp    DWORD PTR [eax-0x73],edx
  410bb0:	push   ecx
  410bb1:	jge    0x410ba1
  410bb3:	or     eax,esp
  410bb5:	aam    0x5a
  410bb7:	(bad)  
  410bb8:	stc    
  410bb9:	and    eax,0xe1c8d5e8
  410bbe:	pop    ds
  410bbf:	mul    DWORD PTR [esi-0x75b321a9]
  410bc5:	pop    esi
  410bc6:	fs inc eax
  410bc8:	mov    eax,ds:0x6f088356
  410bcd:	ins    DWORD PTR es:[edi],dx
  410bce:	(bad)  
  410bcf:	push   edx
  410bd0:	(bad)  
  410bd1:	pop    esp
  410bd2:	ja     0x410b97
  410bd4:	outs   dx,BYTE PTR fs:[esi]
  410bd6:	iret   
  410bd7:	mov    al,ds:0xd2b88572
  410bdc:	jmp    0x24d8:0xe1f2903a
  410be3:	push   edi
  410be4:	inc    edx
  410be5:	sti    
  410be6:	push   cs
  410be7:	sub    esi,esi
  410be9:	xor    BYTE PTR [ebp-0x4d],ch
  410bec:	rcl    DWORD PTR [esi],1
  410bee:	push   ds
  410bef:	sub    DWORD PTR [edi-0x5d],ecx
  410bf2:	call   0xc347:0xc1baac87
  410bf9:	jge    0x410be0
  410bfb:	gs mov ah,0x39
  410bfe:	jp     0x410bda
  410c00:	repnz push 0x10
  410c03:	je     0x410b85
  410c05:	mov    ecx,0xfcb6da06
  410c0a:	push   edx
  410c0b:	push   0x21
  410c0d:	cmp    dh,BYTE PTR [ecx-0xaa1f158]
  410c13:	fwait
  410c14:	xchg   ebx,eax
  410c15:	fiadd  DWORD PTR [ebp-0x6f]
  410c18:	dec    ebx
  410c19:	xchg   edi,eax
  410c1a:	lahf   
  410c1b:	cld    
  410c1c:	aam    0xbc
  410c1e:	not    DWORD PTR [edi]
  410c20:	and    DWORD PTR [ebx+0x3c],eax
  410c23:	sbb    BYTE PTR [ecx-0x3d],dl
  410c26:	div    edi
  410c28:	imul   esi,DWORD PTR ds:0x5a0d1843,0xffffffcd
  410c2f:	mov    bh,BYTE PTR [esi]
  410c31:	into   
  410c32:	and    al,0x33
  410c34:	daa    
  410c35:	lods   al,BYTE PTR ds:[esi]
  410c36:	clc    
  410c37:	aas    
  410c38:	je     0x410c7e
  410c3a:	xchg   edi,eax
  410c3b:	pop    ebp
  410c3c:	jge    0x410c07
  410c3e:	xchg   ecx,ebx
  410c40:	data16 in al,0x11
  410c43:	jmp    0x410cbe
  410c45:	jne    0x410c36
  410c47:	xchg   ebp,eax
  410c48:	retf   
  410c49:	add    al,0x65
  410c4b:	add    al,0x4c
  410c4d:	jae    0x410cc6
  410c4f:	sbb    dh,dl
  410c51:	ret    
  410c52:	test   cl,ah
  410c54:	call   0x38590096
  410c59:	xor    al,0xb3
  410c5b:	in     eax,0x9b
  410c5d:	fs cld 
  410c5f:	cmp    BYTE PTR [ecx-0x7a],0x33
  410c63:	aam    0x66
  410c65:	push   ds
  410c66:	sub    BYTE PTR [ecx+0x19],bl
  410c69:	dec    ebp
  410c6a:	popa   
  410c6b:	lods   eax,DWORD PTR ds:[esi]
  410c6c:	and    al,0x57
  410c6e:	test   al,0xad
  410c70:	imul   ecx,DWORD PTR [ebp-0x34d06a45],0xed800013
  410c7a:	push   ds
  410c7b:	pop    ss
  410c7c:	fdivr  QWORD PTR [esi+ebx*1]
  410c7f:	pop    ebp
  410c80:	dec    esp
  410c81:	add    eax,0x18f9e6fe
  410c86:	xchg   ecx,eax
  410c87:	repz jl 0x410c40
  410c8a:	jmp    0x6825:0xf85f3800
  410c91:	dec    edx
  410c92:	hlt    
  410c93:	jl     0x410c68
  410c95:	sar    BYTE PTR [ecx],1
  410c97:	leave  
  410c98:	pop    edx
  410c99:	ret    0xa4ee
  410c9c:	mov    edi,0x6914cf03
  410ca1:	lock rol DWORD PTR [ebp+eiz*2+0x54],1
  410ca6:	fldcw  WORD PTR [edi+0x5a]
  410ca9:	jo     0x410cde
  410cab:	popf   
  410cac:	mov    dh,0x36
  410cae:	retf   
  410caf:	jmp    0xce53:0x6df2c2b7
  410cb6:	xlat   BYTE PTR ds:[ebx]
  410cb7:	mov    dh,0x4e
  410cb9:	lods   al,BYTE PTR ds:[esi]
  410cba:	lods   eax,DWORD PTR ds:[esi]
  410cbb:	or     bh,BYTE PTR [ebp-0x3dba551a]
  410cc1:	dec    ebx
  410cc2:	(bad)  
  410cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc4:	(bad)  
  410cc5:	xchg   edx,eax
  410cc6:	push   edi
  410cc7:	test   eax,0x1632019b
  410ccc:	mov    cs,esp
  410cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccf:	jo     0x410d44
  410cd1:	sub    DWORD PTR [ebp+0x7723c59d],esp
  410cd7:	paddq  mm2,mm7
  410cda:	and    DWORD PTR ds:0x84e4f655,ebx
  410ce0:	imul   esi,DWORD PTR [ebx-0x7c4f8de2],0x50008808
  410cea:	inc    edi
  410ceb:	stc    
  410cec:	gs js  0x410d59
  410cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf0:	jmp    0xe25fe38f
  410cf5:	mov    bh,0xee
  410cf7:	shr    DWORD PTR [ecx+esi*1],1
  410cfa:	leave  
  410cfb:	mov    ebx,0xf22d6d52
  410d00:	inc    ebx
  410d01:	xchg   edi,eax
  410d02:	lods   eax,DWORD PTR ds:[esi]
  410d03:	daa    
  410d04:	push   ebp
  410d05:	jg     0x410c89
  410d07:	mov    ds:0x8eb449c5,al
  410d0c:	inc    ebx
  410d0d:	sub    BYTE PTR [esi-0x41],bl
  410d10:	loopne 0x410d91
  410d12:	mov    bl,0xb6
  410d14:	shr    BYTE PTR [ebp-0x654b9c5e],1
  410d1a:	cwde   
  410d1b:	mov    ebx,0xcc4f696b
  410d20:	and    dl,0xef
  410d23:	ret    0xb2d1
  410d26:	and    eax,0x2601a134
  410d2b:	test   BYTE PTR [ecx],dh
  410d2d:	add    eax,DWORD PTR ds:0x3aa7ab8e
  410d33:	lahf   
  410d34:	adc    ch,ch
  410d36:	stos   DWORD PTR es:[edi],eax
  410d37:	loop   0x410d81
  410d39:	dec    ebp
  410d3a:	jmp    0x410cde
  410d3c:	mov    ecx,esp
  410d3e:	ins    BYTE PTR es:[edi],dx
  410d3f:	inc    esi
  410d40:	jmp    0x6c1724dd
  410d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d46:	aas    
  410d47:	add    BYTE PTR [ebp+0x7e],ah
  410d4a:	jmp    0x3adbcd98
  410d4f:	icebp  
  410d50:	lahf   
  410d51:	xor    dl,bl
  410d53:	ret    
  410d54:	pop    edi
  410d55:	call   0xf9e2:0xbfa1a850
  410d5c:	sub    al,0x67
  410d5e:	jmp    0x1a2d:0xa29f2cbd
  410d65:	call   0x2d4a4b91
  410d6a:	inc    eax
  410d6b:	imul   esp,ebx,0x61fc90fc
  410d71:	or     eax,DWORD PTR [eax-0x1f]
  410d74:	sbb    DWORD PTR [esi+0x5b],esp
  410d77:	or     ah,BYTE PTR [edi-0x6c]
  410d7a:	and    eax,0x82ba649a
  410d7f:	mov    ah,0x38
  410d81:	mov    bh,0x63
  410d83:	pop    DWORD PTR [edi+ebp*4-0x6f0a06de]
  410d8a:	mov    dh,ch
  410d8c:	jp     0x410d4f
  410d8e:	call   0xada3:0xd2ccafd5
  410d95:	outs   dx,BYTE PTR ds:[esi]
  410d96:	cli    
  410d97:	mov    eax,0x5ca49ea9
  410d9c:	push   esp
  410d9d:	inc    ebp
  410d9e:	sub    DWORD PTR [ecx+0x502c2dca],eax
  410da4:	pop    esp
  410da5:	es ret 0x38d7
  410da9:	fistp  WORD PTR [ebp+0x6b29d4b]
  410daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db0:	sub    DWORD PTR [esi+ebx*2],ecx
  410db3:	stos   BYTE PTR es:[edi],al
  410db4:	int3   
  410db5:	or     al,dl
  410db7:	sbb    al,0xeb
  410db9:	inc    edx
  410dba:	xchg   ebx,eax
  410dbb:	cmp    bl,BYTE PTR ds:0xedc81a33
  410dc1:	xchg   edx,eax
  410dc2:	xchg   esi,eax
  410dc3:	neg    DWORD PTR [eax-0x58]
  410dc6:	ret    
  410dc7:	mov    WORD PTR [ecx-0x12],gs
  410dca:	xchg   edx,eax
  410dcb:	pop    ebp
  410dcc:	test   eax,0xf540d0f2
  410dd1:	push   ebp
  410dd2:	jae    0x410dd9
  410dd4:	jo     0x410dcc
  410dd6:	sbb    cl,al
  410dd8:	jns    0x410e2a
  410dda:	test   al,0x8b
  410ddc:	shr    dh,cl
  410dde:	loop   0x410e24
  410de0:	cmp    DWORD PTR [edx],0xffffffd8
  410de3:	adc    dl,BYTE PTR [edi+0x1ddfe4cb]
  410de9:	jecxz  0x410dd0
  410deb:	out    0x89,al
  410ded:	push   eax
  410dee:	add    al,0x5b
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [esi+edx*1+0x3ba4b87b]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0x91a480f7
  410e45:	jmp    0x43dea1f6
  410e4a:	pop    esi
  410e4b:	cli    
  410e4c:	jbe    0x410e04
  410e4e:	jne    0x410eb4
  410e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e51:	iret   
  410e52:	adc    ch,cl
  410e54:	aaa    
  410e55:	cli    
  410e56:	add    al,0xba
  410e58:	xlat   BYTE PTR ds:[ebx]
  410e59:	jb     0x410e88
  410e5b:	dec    ebp
  410e5c:	or     dl,bh
  410e5e:	imul   ebp,ebp,0x51
  410e61:	sar    bl,1
  410e63:	fild   QWORD PTR [ecx+edi*4-0x7f1e7df2]
  410e6a:	adc    eax,0x938de32e
  410e6f:	adc    BYTE PTR [edi-0x6320f4f6],dl
  410e75:	and    esp,esi
  410e77:	adc    esp,ecx
  410e79:	push   eax
  410e7a:	mov    WORD PTR [eax-0x7e6e43f],fs
  410e80:	inc    edi
  410e81:	ins    BYTE PTR es:[edi],dx
  410e82:	inc    eax
  410e83:	in     al,0x47
  410e85:	xor    al,cl
  410e87:	mov    dh,0x16
  410e89:	xchg   ebp,eax
  410e8a:	sbb    eax,0xbe1c501a
  410e8f:	xchg   ebx,eax
  410e90:	sub    al,0x9a
  410e92:	sahf   
  410e93:	mov    ebp,DWORD PTR ds:0x5809416d
  410e99:	jns    0x410e86
  410e9b:	mov    DWORD PTR [edi+ebp*1],eax
  410e9e:	and    DWORD PTR [ecx-0x200ac38],edx
  410ea4:	imul   DWORD PTR [ebx*8+0x466269e]
  410eab:	mov    edx,ebx
  410ead:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410eaf:	scas   eax,DWORD PTR es:[edi]
  410eb0:	mov    ebx,0xf88c91a4
  410eb5:	loope  0x410ef6
  410eb7:	rol    BYTE PTR [edi],cl
  410eb9:	(bad)  
  410ebb:	dec    edx
  410ebc:	push   0x5b7fd9da
  410ec1:	stos   DWORD PTR es:[edi],eax
  410ec2:	push   esi
  410ec3:	icebp  
  410ec4:	lea    edi,[edx+0x5e8a1732]
  410eca:	jp     0x410e9f
  410ecc:	pushw  es
  410ece:	sbb    eax,0x6321a408
  410ed3:	xchg   esi,eax
  410ed4:	hlt    
  410ed5:	loopne 0x410e5e
  410ed7:	outs   dx,BYTE PTR ds:[esi]
  410ed8:	shl    DWORD PTR [edi],cl
  410eda:	retf   0x50df
  410edd:	rol    BYTE PTR [edi+0x53],1
  410ee0:	pop    ecx
  410ee1:	mov    eax,0xb463885c
  410ee6:	mov    ebp,0xfbe9db34
  410eeb:	inc    ebp
  410eec:	jnp    0x410ea4
  410eee:	pop    ds
  410eef:	adc    DWORD PTR [eax],edi
  410ef1:	std    
  410ef2:	clc    
  410ef3:	and    al,0x71
  410ef5:	stos   DWORD PTR es:[edi],eax
  410ef6:	xchg   edi,eax
  410ef7:	mov    al,ds:0x482328a0
  410efc:	lds    esp,FWORD PTR [esi-0x47a1765e]
  410f02:	jp     0x410f66
  410f04:	sub    DWORD PTR [ecx-0x25f1da4c],0x1e66e75
  410f0e:	sbb    DWORD PTR [edx+0x45],edx
  410f11:	add    DWORD PTR [ebp+ebx*1-0x6e],ebp
  410f15:	dec    esp
  410f16:	mov    ds:0x4f788ea1,eax
  410f1b:	in     al,0x9d
  410f1d:	hlt    
  410f1e:	dec    ebp
  410f1f:	cld    
  410f20:	sbb    eax,0x7fcbf406
  410f25:	inc    ecx
  410f26:	add    dl,bl
  410f28:	nop
  410f29:	dec    DWORD PTR [ebp+0x5c]
  410f2c:	test   BYTE PTR [edx+0x2d4604e4],dh
  410f32:	inc    edi
  410f33:	xor    BYTE PTR [edi],dl
  410f35:	xor    dh,cl
  410f37:	cmp    DWORD PTR [edx-0x523549dc],esi
  410f3d:	mov    eax,0xd88f73c4
  410f42:	aas    
  410f43:	adc    bh,BYTE PTR ds:0x857c4fca
  410f49:	loope  0x410f99
  410f4b:	inc    esi
  410f4c:	xchg   ecx,eax
  410f4d:	mov    edi,0x4246cfe0
  410f52:	push   ebx
  410f53:	repnz daa 
  410f55:	push   ds
  410f56:	dec    al
  410f58:	imul   esi,DWORD PTR [edx+0x5a],0x73
  410f5c:	daa    
  410f5d:	repnz adc DWORD PTR [ebx-0x55],esi
  410f61:	and    BYTE PTR [edx+0xa],0x1c
  410f65:	mov    ds:0x70db18c,eax
  410f6a:	push   0x6fdf1374
  410f6f:	bound  ebx,QWORD PTR [ecx]
  410f71:	dec    eax
  410f72:	stc    
  410f73:	imul   eax,DWORD PTR [eax+0x11],0xffffff8f
  410f77:	in     al,dx
  410f78:	push   DWORD PTR [eax+eiz*2+0x74849c94]
  410f7f:	inc    ebx
  410f80:	and    esp,edx
  410f82:	mov    al,0xc7
  410f84:	adc    bl,BYTE PTR ds:0xd1e39fcc
  410f8a:	out    0x16,eax
  410f8c:	jle    0x410f60
  410f8e:	and    BYTE PTR [edi-0x6b],ch
  410f91:	lahf   
  410f92:	ret    0xab3
  410f95:	jp     0x411007
  410f97:	pop    ss
  410f98:	pop    eax
  410f99:	mov    ch,0xbe
  410f9b:	dec    ebx
  410f9c:	push   0xc9a6c8d5
  410fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa2:	stos   DWORD PTR es:[edi],eax
  410fa3:	sbb    ebp,esi
  410fa5:	sbb    al,0x9
  410fa7:	sbb    eax,0xda4ef000
  410fac:	loope  0x411000
  410fae:	cld    
  410faf:	mov    bl,0xd
  410fb1:	aam    0x98
  410fb3:	mov    eax,0x24801c42
  410fb8:	pop    ebx
  410fb9:	mov    edx,0xd44c62bf
  410fbe:	xor    BYTE PTR [edx+eax*8-0x7bcdf52c],ch
  410fc5:	mov    WORD PTR [edx-0x6e],?
  410fc8:	jo     0x41102a
  410fca:	data16 jb 0x411047
  410fcd:	std    
  410fce:	(bad)  
  410fcf:	cmp    al,0x5e
  410fd1:	pushf  
  410fd2:	inc    ecx
  410fd3:	xchg   ebx,eax
  410fd4:	add    eax,0x3568586f
  410fd9:	mov    al,0x41
  410fdb:	pop    DWORD PTR [ecx+0x341a99f8]
  410fe1:	sar    BYTE PTR ds:0xb166d3d1,1
  410fe7:	out    0x76,al
  410fe9:	mov    cl,0xda
  410feb:	cmp    edx,DWORD PTR [esi-0x76]
  410fee:	mov    ecx,0x34bdf2c6
  410ff3:	add    esp,DWORD PTR [eax-0x70]
  410ff6:	sar    DWORD PTR [ecx*4-0x1d8da866],cl
  410ffd:	out    0x8e,al
  410fff:	mov    esp,0xbfda412a
  411004:	fwait
  411005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411006:	fsub   st,st(6)
  411008:	jg     0x41102b
  41100a:	adc    dl,bh
  41100c:	test   BYTE PTR [ebx],0xda
  41100f:	mov    ebp,DWORD PTR ds:0x68e10ae4
  411015:	(bad)  
  411016:	push   es
  411017:	push   esi
  411018:	fwait
  411019:	jmp    0x216d:0x44c83402
  411020:	push   esp
  411021:	test   ecx,ebx
  411023:	(bad)
  411026:	mov    al,0x30
  411028:	sti    
  411029:	mov    edi,0x1e78ce46
  41102e:	cs and eax,0xec1dec
  411034:	pop    esp
  411035:	sbb    al,0xd6
  411037:	adc    esp,eax
  411039:	sahf   
  41103a:	inc    ebx
  41103b:	outs   dx,DWORD PTR ds:[esi]
  41103c:	inc    eax
  41103d:	pop    ebp
  41103e:	cdq    
  41103f:	jg     0x410fc4
  411041:	push   ss
  411042:	cli    
  411043:	inc    BYTE PTR [esi-0x467add2e]
  411049:	cwde   
  41104a:	mov    bh,0x17
  41104c:	mov    eax,ds:0x5daa1974
  411051:	fild   DWORD PTR [ecx+edx*8-0x1308680f]
  411058:	fld    TBYTE PTR [ebx+0x14fa9000]
  41105e:	imul   esi,DWORD PTR [ecx],0x3d
  411061:	pop    eax
  411062:	mov    esi,0xd4e5bda6
  411067:	inc    ecx
  411068:	(bad)  
  411069:	pop    ss
  41106a:	mov    eax,0x4b90b3f0
  41106f:	mov    ds:0xead7fe91,al
  411074:	rol    DWORD PTR [edi-0x5f50fced],cl
  41107a:	dec    ebx
  41107b:	imul   ebx,DWORD PTR [edi+0x55],0x81a2accf
  411082:	mov    gs,WORD PTR [ebx-0x32b1575a]
  411088:	inc    eax
  411089:	sbb    esi,DWORD PTR [esi-0xd]
  41108c:	or     eax,DWORD PTR [eax+0x2b]
  41108f:	sub    eax,0x6ce9be9b
  411094:	mov    ebp,ecx
  411096:	stc    
  411097:	inc    ebp
  411098:	pop    ds
  411099:	mov    edx,0xde6b3854
  41109e:	or     eax,0x2cde7736
  4110a3:	(bad)  
  4110a4:	aam    0x29
  4110a6:	pop    edi
  4110a7:	(bad)  
  4110a8:	int3   
  4110a9:	add    al,0x14
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	cld    
  4110d2:	mov    bh,0x50
  4110d4:	sahf   
  4110d5:	or     BYTE PTR [esi-0x42],cl
  4110d8:	mov    esi,0xbebec289
  4110dd:	pusha  
  4110de:	pop    DWORD PTR [ebx]
  4110e0:	mov    DWORD PTR [edx+0x42],ebx
  4110e3:	and    eax,0xec624f20
  4110e8:	ret    0x6a1e
  4110eb:	pop    edi
  4110ec:	cmp    al,0x1e
  4110ee:	sub    al,0x13
  4110f0:	in     eax,dx
  4110f1:	adc    dl,BYTE PTR [esi+0x41]
  4110f4:	out    dx,al
  4110f5:	(bad)  
  4110f6:	hlt    
  4110f7:	pop    esi
  4110f8:	fld    QWORD PTR [ebx]
  4110fa:	xor    bl,bh
  4110fc:	jl     0x411115
  4110fe:	popa   
  4110ff:	adc    edx,DWORD PTR [esi]
  411101:	mov    al,ds:0x1a58b3ad
  411106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411107:	aam    0xf0
  411109:	dec    ecx
  41110a:	adc    dl,BYTE PTR [edx-0x12ca4bc7]
  411110:	inc    edi
  411111:	xor    bh,dl
  411113:	mov    ebx,0x4901d2b5
  411118:	repz cmp eax,0x969a68c6
  41111e:	stc    
  41111f:	sar    BYTE PTR [esp+esi*4+0x4b],cl
  411123:	mov    ds:0x662c7d2a,al
  411128:	dec    edi
  411129:	mov    bh,0xe3
  41112b:	pop    es
  41112c:	mov    dh,0x6e
  41112e:	xor    eax,0x1ca5b657
  411133:	jp     0x4110c7
  411135:	call   0x91e8bcf0
  41113a:	dec    esp
  41113b:	jae    0x411178
  41113d:	push   0x51
  41113f:	mov    BYTE PTR [edx-0x25],ch
  411142:	int    0xf6
  411144:	mov    ch,BYTE PTR [ebx+0x412119d8]
  41114a:	(bad)
  41114f:	jl     0x411119
  411151:	mov    esp,0xdfbd97dd
  411156:	pop    esp
  411157:	add    ebp,ecx
  411159:	push   0x3393c407
  41115e:	ja     0x411150
  411160:	jmp    0xc6ec60c0
  411165:	jp     0x411182
  411167:	rcr    DWORD PTR [edi+0x18a6fa71],cl
  41116d:	jmp    0xa8dcc6b4
  411172:	or     eax,0x3797d9
  411177:	or     al,0x14
  411179:	pushf  
  41117a:	popf   
  41117b:	inc    esi
  41117c:	pusha  
  41117d:	je     0x411105
  41117f:	and    esi,DWORD PTR [esi+0x59]
  411182:	dec    ebp
  411183:	sbb    ebx,ebp
  411185:	xor    ebp,ecx
  411187:	jmp    0x4111ec
  411189:	loop   0x411176
  41118b:	mov    ch,0x29
  41118d:	test   al,0x56
  41118f:	jecxz  0x41120d
  411191:	adc    bh,BYTE PTR [edi]
  411193:	cld    
  411194:	xor    ecx,DWORD PTR [eax+0x42]
  411197:	and    bl,BYTE PTR [ebp-0x5e3251d9]
  41119d:	dec    ecx
  41119e:	mov    al,BYTE PTR [edx-0x5ba70c78]
  4111a4:	gs push ecx
  4111a6:	add    DWORD PTR [edx-0x23],0xcc3db3ed
  4111ad:	in     al,0x84
  4111af:	call   0xc745fef6
  4111b4:	cmp    al,BYTE PTR [edi-0x5]
  4111b7:	outs   dx,DWORD PTR ds:[esi]
  4111b8:	lods   al,BYTE PTR ds:[esi]
  4111b9:	jno    0x411174
  4111bb:	call   0x9d215f4a
  4111c0:	pop    ebp
  4111c1:	add    ebp,DWORD PTR [ebp+0xd0a371b]
  4111c7:	popa   
  4111c8:	dec    eax
  4111c9:	inc    esp
  4111ca:	js     0x411185
  4111cc:	ja     0x4111ae
  4111ce:	mov    bl,0xe6
  4111d0:	aam    0x60
  4111d2:	jae    0x4111b1
  4111d4:	cmp    eax,0x75803390
  4111d9:	and    eax,0xd1e79dbd
  4111de:	int    0x42
  4111e0:	fild   QWORD PTR [edx*2-0x69821815]
  4111e7:	cs pop ecx
  4111e9:	adc    ebx,DWORD PTR [ebx]
  4111eb:	push   ds
  4111ec:	and    DWORD PTR [ecx+ebp*1-0x312a7327],edi
  4111f3:	xchg   edx,eax
  4111f4:	lods   eax,DWORD PTR ds:[esi]
  4111f5:	pop    esi
  4111f6:	add    edi,edi
  4111f8:	jns    0x4111a3
  4111fa:	sbb    eax,0x62d7ab85
  4111ff:	imul   ebp,DWORD PTR [ecx-0x114caea4],0xc20fadd2
  411209:	push   edi
  41120a:	test   bl,al
  41120c:	sub    ebp,DWORD PTR [ebx+0x7e]
  41120f:	push   esi
  411210:	xchg   ecx,eax
  411211:	jbe    0x411207
  411213:	fcomp  DWORD PTR [ebx]
  411215:	mov    edx,esi
  411217:	sub    eax,DWORD PTR [eax-0x1f]
  41121a:	in     eax,0x2b
  41121c:	idiv   ebx
  41121e:	pop    esi
  41121f:	xchg   esi,eax
  411220:	xor    eax,0x5803b997
  411225:	sbb    BYTE PTR [edi-0x1e06dbf9],al
  41122b:	jne    0x411282
  41122d:	repnz push esp
  41122f:	jmp    0x4111bc
  411231:	hlt    
  411232:	mov    esi,0x904a8cbb
  411237:	cmp    al,0xc5
  411239:	call   0x15f247a7
  41123e:	push   esp
  41123f:	out    dx,al
  411240:	in     eax,dx
  411241:	fdivr  DWORD PTR [ecx+0x27]
  411244:	mov    eax,0x27cef54
  411249:	cli    
  41124a:	cwde   
  41124b:	das    
  41124c:	pop    edx
  41124d:	outs   dx,BYTE PTR ds:[esi]
  41124e:	xor    esp,DWORD PTR cs:[ebx+0x4b973ed1]
  411255:	xor    ch,dh
  411257:	xchg   ecx,eax
  411258:	imul   DWORD PTR [ecx-0x6f]
  41125b:	aam    0xeb
  41125d:	mov    dh,0xa3
  41125f:	or     DWORD PTR [ecx+eax*4-0x5],eax
  411263:	pop    esi
  411264:	or     BYTE PTR cs:[ebx],bl
  411267:	fs xchg edx,eax
  411269:	push   ss
  41126a:	ins    DWORD PTR es:[edi],dx
  41126b:	pop    eax
  41126c:	dec    ebp
  41126d:	aaa    
  41126e:	mov    eax,DWORD PTR [ecx+esi*1]
  411271:	addr16 pusha 
  411273:	sbb    al,0xf4
  411275:	dec    esi
  411276:	mov    ebx,0x6cd78c36
  41127b:	pop    edx
  41127c:	fistp  QWORD PTR [esi+0x698f7b8]
  411282:	and    al,al
  411284:	mov    esp,cs
  411286:	fnstsw WORD PTR [edx+0x2fd1695c]
  41128c:	xchg   cl,dl
  41128e:	sub    edi,ebx
  411290:	repnz mov eax,ds:0x29a9da84
  411296:	fsubr  DWORD PTR [eax]
  411298:	stos   DWORD PTR es:[edi],eax
  411299:	mov    ebx,0x144e0266
  41129e:	loop   0x4112be
  4112a0:	lods   al,BYTE PTR ds:[esi]
  4112a1:	inc    ecx
  4112a2:	cli    
  4112a3:	loopne 0x4112cf
  4112a5:	add    eax,0xabfcbcf4
  4112aa:	xchg   ecx,eax
  4112ab:	sti    
  4112ac:	dec    esi
  4112ad:	inc    esp
  4112ae:	cmp    cl,BYTE PTR [edi-0x53]
  4112b1:	lea    ebp,[edx-0x148e0cc1]
  4112b7:	bound  esi,QWORD PTR [ebx]
  4112b9:	or     BYTE PTR [edx+0x6],dh
  4112bc:	sub    al,0x2f
  4112be:	mov    DWORD PTR [ebx+0x4f],esp
  4112c1:	scas   eax,DWORD PTR es:[edi]
  4112c2:	inc    esi
  4112c3:	xlat   BYTE PTR ds:[ebx]
  4112c4:	mov    bh,0x89
  4112c6:	jne    0x41128a
  4112c8:	rcl    BYTE PTR [ebx+0x7e],cl
  4112cb:	in     eax,dx
  4112cc:	loopne 0x41131c
  4112ce:	adc    edi,ecx
  4112d0:	scas   eax,DWORD PTR es:[edi]
  4112d1:	add    eax,0xe3ec5f35
  4112d6:	or     dl,bl
  4112d8:	sti    
  4112d9:	sub    BYTE PTR [edx+0x54],cl
  4112dc:	hlt    
  4112dd:	xchg   DWORD PTR [eax],esp
  4112df:	xchg   ebx,eax
  4112e0:	into   
  4112e1:	popf   
  4112e2:	jo     0x411359
  4112e4:	cmp    BYTE PTR [eax],0x54
  4112e7:	sub    eax,0xd6315f25
  4112ec:	inc    edx
  4112ed:	sbb    BYTE PTR [edi],cl
  4112ef:	inc    edx
  4112f0:	jmp    0xea2ccf30
  4112f5:	repz sbb eax,0xe2bbf221
  4112fb:	scas   al,BYTE PTR es:[edi]
  4112fc:	ja     0x41136e
  4112fe:	xor    BYTE PTR [ebx+ebp*4+0x63],cl
  411302:	jbe    0x4112b6
  411304:	or     eax,0x7372c97f
  411309:	lahf   
  41130a:	cmp    cl,BYTE PTR [ebx-0x11e1b3e7]
  411310:	inc    edi
  411311:	(bad)  
  411312:	push   ss
  411313:	out    dx,al
  411314:	iret   
  411315:	dec    edi
  411316:	and    eax,DWORD PTR ds:0x97e95586
  41131c:	es inc eax
  41131e:	jmp    0x3d155fa8
  411323:	js     0x4112bb
  411325:	or     eax,0x62234de5
  41132a:	in     al,dx
  41132b:	stos   BYTE PTR es:[edi],al
  41132c:	nop
  41132d:	leave  
  41132e:	add    edx,DWORD PTR [ecx+ebx*4-0x39e12090]
  411335:	cmp    DWORD PTR [ecx-0x66abb86e],ebp
  41133b:	mov    bh,0x51
  41133d:	jl     0x4113ad
  41133f:	cli    
  411340:	jmp    0x8720:0xb5a72441
  411347:	mov    DWORD PTR [ebp-0x34],0x7f89
  41134e:	mov    DWORD PTR [ebp-0x30],0x7fda
  411355:	mov    DWORD PTR [ebp-0x2c],0x2889
  41135c:	mov    DWORD PTR [ebp-0x28],0xf0f
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	dec    ebx
  4114bd:	jg     0x4114c5
  4114bf:	xchg   edx,eax
  4114c0:	aam    0x54
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0xdcebf120
  4114cc:	int    0xfb
  4114ce:	repnz mov dl,0x20
  4114d1:	and    ebx,eax
  4114d3:	test   edi,0x41664bf
  4114d9:	push   ds
  4114da:	add    dh,ch
  4114dc:	inc    eax
  4114dd:	mov    gs,WORD PTR [edi+0x56]
  4114e0:	mov    edi,0x90c8e950
  4114e5:	pop    ebp
  4114e6:	call   DWORD PTR [edx*1-0x76d57c45]
  4114ed:	shr    dl,cl
  4114ef:	mov    esp,0x16dce768
  4114f4:	aaa    
  4114f5:	aad    0xa9
  4114f7:	push   ss
  4114f8:	and    al,0xa1
  4114fa:	xchg   ebp,eax
  4114fb:	(bad)  
  4114fc:	sub    dl,BYTE PTR [ebp-0x2c]
  4114ff:	stc    
  411500:	mov    esi,0xeca4398f
  411505:	popf   
  411506:	stc    
  411507:	inc    esi
  411508:	aas    
  411509:	jg     0x4114ad
  41150b:	(bad)  
  41150c:	push   esi
  41150d:	mov    ah,0x15
  41150f:	mov    bh,0x52
  411511:	mov    edi,0x140663e8
  411516:	sub    DWORD PTR [edx+0x63695e29],0xffffff9e
  41151d:	das    
  41151e:	mov    ecx,0x99846dfa
  411523:	pusha  
  411524:	enter  0x5cee,0x71
  411528:	in     al,0xfa
  41152a:	mov    esi,0xa3d4a0d
  41152f:	or     DWORD PTR [eax+0x7c],esi
  411532:	sbb    eax,0xf75282f9
  411537:	retf   
  411538:	xchg   ecx,eax
  411539:	mov    al,ds:0x23a26a13
  41153e:	mov    ebp,DWORD PTR ds:0xb6204d9e
  411544:	and    al,BYTE PTR [eax]
  411546:	lods   eax,DWORD PTR ds:[esi]
  411547:	xchg   edx,eax
  411548:	fucomi st,st(5)
  41154a:	jne    0x41158a
  41154c:	add    DWORD PTR [ecx-0x43117f8b],ebp
  411552:	inc    ebp
  411553:	cmc    
  411554:	or     bh,bh
  411556:	icebp  
  411557:	mov    al,ds:0xec3b5766
  41155c:	scas   eax,DWORD PTR es:[edi]
  41155d:	lods   eax,DWORD PTR ds:[esi]
  41155e:	adc    al,0x8d
  411560:	or     al,0x50
  411562:	dec    esi
  411563:	ret    
  411564:	std    
  411565:	push   ds
  411566:	repnz div DWORD PTR [esi-0x5e]
  41156a:	push   edi
  41156b:	xchg   ecx,eax
  41156c:	or     al,dl
  41156e:	xchg   ebx,eax
  41156f:	pushf  
  411570:	adc    al,0xbb
  411572:	out    dx,al
  411573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411574:	sbb    bh,dh
  411576:	imul   esi,DWORD PTR [esi+0x1f8ef106],0x5ffefbe2
  411580:	adc    dl,BYTE PTR [esi-0x16]
  411583:	test   eax,0x214944d6
  411588:	mov    bh,0xda
  41158a:	icebp  
  41158b:	fiadd  WORD PTR [ebx]
  41158d:	pushf  
  41158e:	imul   esi,DWORD PTR [edi+0x2f4a346f],0xaf6a8fc2
  411598:	pop    esi
  411599:	sub    eax,0x7c897866
  41159e:	fsub   DWORD PTR [ebx]
  4115a0:	xchg   esi,eax
  4115a1:	cwde   
  4115a2:	add    ch,ah
  4115a4:	xor    DWORD PTR [esi-0x3bcf425d],edi
  4115aa:	inc    esi
  4115ab:	out    dx,eax
  4115ac:	adc    DWORD PTR [edi+0x46],ebp
  4115af:	adc    BYTE PTR [ebx+eiz*2],bl
  4115b2:	hlt    
  4115b3:	dec    eax
  4115b4:	dec    ebp
  4115b5:	repz in al,0x90
  4115b8:	pop    ss
  4115b9:	push   edi
  4115ba:	mov    ?,WORD PTR [esi]
  4115bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115bd:	adc    al,0x68
  4115bf:	xor    edx,ebp
  4115c1:	int3   
  4115c2:	ins    BYTE PTR es:[edi],dx
  4115c3:	rcl    BYTE PTR [edx-0x7f],cl
  4115c6:	push   si
  4115c8:	aas    
  4115c9:	das    
  4115ca:	scas   al,BYTE PTR es:[edi]
  4115cb:	cmp    edx,DWORD PTR [esi]
  4115cd:	mov    ds:0xfa5e91e4,eax
  4115d2:	mov    edx,0x6ee9f67b
  4115d7:	in     eax,0x88
  4115d9:	pusha  
  4115da:	sub    eax,DWORD PTR ds:0x91f3c9c9
  4115e0:	mov    edx,0xdbec122b
  4115e5:	cmc    
  4115e6:	pop    ecx
  4115e7:	stos   BYTE PTR es:[edi],al
  4115e8:	push   edx
  4115e9:	mov    esp,cs
  4115eb:	push   ds
  4115ec:	adc    ch,BYTE PTR [eax-0x54e38ae3]
  4115f2:	and    ah,0x43
  4115f5:	fcomp  st(4)
  4115f7:	adc    al,0xf8
  4115f9:	mov    ebx,0x4006c033
  4115fe:	ins    DWORD PTR es:[edi],dx
  4115ff:	fs (bad) 
  411601:	jl     0x411630
  411603:	data16 (bad) 
  411605:	scas   al,BYTE PTR es:[edi]
  411606:	dec    esi
  411607:	jns    0x41163e
  411609:	mov    bh,0x7
  41160b:	out    dx,al
  41160c:	gs push esp
  41160e:	shl    DWORD PTR [eax+0x279f7d02],0x8d
  411615:	clc    
  411616:	inc    edx
  411617:	call   0xb792bec0
  41161c:	pop    esi
  41161d:	dec    ecx
  41161e:	adc    eax,0xa87d9637
  411623:	push   ebx
  411624:	push   ebx
  411625:	addr16 mov dh,0x4f
  411628:	inc    eax
  411629:	jg     0x411604
  41162b:	cmp    DWORD PTR ds:0x6bcac2e3,ebp
  411631:	sbb    al,0x8b
  411633:	stc    
  411634:	jns    0x4115d4
  411636:	mov    ah,0x48
  411638:	fdiv   QWORD PTR [ecx+ebp*4]
  41163b:	push   0x3d
  41163d:	mov    BYTE PTR [ebx-0x4d],cl
  411640:	add    bh,BYTE PTR [edx+0x5d]
  411643:	ins    BYTE PTR es:[edi],dx
  411644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411645:	dec    esi
  411646:	pop    ebp
  411647:	adc    DWORD PTR [ebx+0x1f],ebx
  41164a:	out    dx,eax
  41164b:	inc    esp
  41164c:	out    0x63,eax
  41164e:	fnstenv [ebx]
  411650:	mov    BYTE PTR [ecx+0x489f4bcc],0xc3
  411657:	loopne 0x4116ae
  411659:	xor    eax,DWORD PTR [eax+eax*1+0x27]
  41165d:	adc    cl,BYTE PTR [eax]
  41165f:	sub    al,BYTE PTR [edx+0x39afe84f]
  411665:	sub    BYTE PTR [esi],ch
  411667:	aad    0x6f
  411669:	stos   BYTE PTR es:[edi],al
  41166a:	in     eax,dx
  41166b:	push   ss
  41166c:	jg     0x4116ce
  41166e:	test   BYTE PTR [esi],ah
  411670:	ins    BYTE PTR es:[edi],dx
  411671:	pop    ebp
  411672:	retf   
  411673:	fs pop ss
  411675:	les    esp,FWORD PTR [ecx]
  411677:	inc    eax
  411678:	bswap  eax
  41167a:	imul   ebp,DWORD PTR [eax],0x43c9bec3
  411680:	inc    edi
  411681:	outs   dx,BYTE PTR ds:[esi]
  411682:	(bad)  
  411683:	sti    
  411684:	jno    0x41169d
  411686:	mov    ecx,0x3569bf2
  41168b:	inc    ebp
  41168c:	push   ebp
  41168d:	cmp    DWORD PTR [ebp+eiz*8-0x17],0xffffffe9
  411692:	jecxz  0x4116ac
  411694:	and    eax,DWORD PTR [ebx-0x47]
  411697:	test   eax,0x21e3b9f3
  41169c:	(bad)  
  41169d:	arpl   cx,sp
  41169f:	adc    al,0x9c
  4116a1:	jb     0x411645
  4116a3:	push   ds
  4116a4:	push   ecx
  4116a5:	jmp    0xa348:0x7eb9592b
  4116ac:	and    BYTE PTR [ebx],dh
  4116ae:	adc    DWORD PTR [ebx-0x79f22258],eax
  4116b4:	mov    al,cl
  4116b6:	stos   BYTE PTR es:[edi],al
  4116b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116b8:	fmulp  st(4),st
  4116ba:	ret    
  4116bb:	xor    DWORD PTR [ebx],ecx
  4116bd:	das    
  4116be:	in     al,0x50
  4116c0:	mov    bl,0xb3
  4116c2:	int3   
  4116c3:	xchg   esi,eax
  4116c4:	mov    ebx,0x500a8c6e
  4116c9:	(bad)  
  4116ca:	jmp    0x89d06e81
  4116cf:	call   0x8b4c59ad
  4116d4:	add    BYTE PTR ss:[ecx],al
  4116d7:	mov    ecx,0x1d7af955
  4116dc:	pop    edi
  4116dd:	inc    ecx
  4116de:	icebp  
  4116df:	fnsave [eax]
  4116e1:	outs   dx,BYTE PTR ds:[esi]
  4116e2:	es pop ebx
  4116e4:	(bad)  
  4116e5:	jmp    0x4116ee
  4116e7:	xchg   DWORD PTR [eax+0x55],esi
  4116ea:	popf   
  4116eb:	(bad)  
  4116ec:	imul   ebp,DWORD PTR [edx-0xc3793bf],0x4ce3272a
  4116f6:	mov    dl,0x29
  4116f8:	dec    ecx
  4116f9:	add    eax,0xbf68b5f7
  4116fe:	popf   
  4116ff:	stos   BYTE PTR es:[edi],al
  411700:	xor    eax,0xbcb9e6a9
  411705:	push   esp
  411706:	add    eax,0x708abe82
  41170b:	mov    ecx,DWORD PTR [ebx-0x44168325]
  411711:	cli    
  411712:	cmc    
  411713:	leave  
  411714:	out    dx,eax
  411715:	cmp    esp,DWORD PTR [eax+0x61]
  411718:	test   eax,0x97c2ecdf
  41171d:	ss pop ds
  41171f:	jne    0x4116e5
  411721:	sar    ebx,1
  411723:	out    0x9a,al
  411725:	in     eax,dx
  411726:	jg     0x411744
  411728:	std    
  411729:	jb     0x41170b
  41172b:	push   eax
  41172c:	push   es
  41172d:	cmc    
  41172e:	xor    DWORD PTR [ecx+0x38557ec7],edi
  411734:	bound  eax,QWORD PTR [ebx]
  411736:	xor    al,0x49
  411738:	jg     0x4116f4
  41173a:	sbb    bl,0xed
  41173d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41173e:	ins    BYTE PTR es:[edi],dx
  41173f:	shr    BYTE PTR [eax],1
  411741:	into   
  411742:	ret    0x7eef
  411745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411746:	mov    esp,0x7442e079
  41174b:	scas   al,BYTE PTR es:[edi]
  41174c:	out    0xc2,al
  41174e:	out    0x69,al
  411750:	cmp    eax,DWORD PTR [ebx+edi*1-0x1b]
  411754:	stos   DWORD PTR es:[edi],eax
  411755:	xor    eax,0x23275460
  41175a:	(bad)  
  41175b:	scas   eax,DWORD PTR es:[edi]
  41175c:	test   BYTE PTR [esi],ah
  41175e:	jo     0x411778
  411760:	rol    DWORD PTR [ebx+0x54],0x13
  411764:	jge    0x411748
  411766:	out    dx,al
  411767:	cmp    cl,BYTE PTR [edi]
  411769:	mov    bh,0x19
  41176b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176c:	mov    ds:0x5d1e8649,eax
  411771:	sub    al,0x30
  411773:	mov    edx,0xb34dd035
  411778:	push   0xd09a6d5a
  41177d:	sub    edx,DWORD PTR [ebx-0x6a]
  411780:	sbb    DWORD PTR [esi],edx
  411782:	and    al,BYTE PTR [eax-0x4f]
  411785:	and    edi,DWORD PTR [ebx+edx*4-0x26]
  411789:	add    BYTE PTR [edx],cl
  41178b:	or     DWORD PTR [esi+ebp*8],ebx
  41178e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41178f:	clc    
  411790:	inc    ebx
  411791:	mov    DWORD PTR [ebp+0x21475111],esp
  411797:	push   esi
  411798:	aam    0x85
  41179a:	sbb    ebp,DWORD PTR [eax]
  41179c:	add    al,ah
  41179e:	cmp    edx,DWORD PTR [edi+0x48bab696]
  4117a4:	inc    esi
  4117a5:	mov    edx,0x55a069d3
  4117aa:	mov    bh,0xcc
  4117ac:	xchg   DWORD PTR [eax-0x2c8c818f],ebp
  4117b2:	sbb    eax,0xc8747c5
  4117b7:	in     eax,dx
  4117b8:	inc    edi
  4117b9:	sahf   
  4117ba:	push   es
  4117bb:	mov    ch,0xca
  4117bd:	loop   0x41176a
  4117bf:	jge    0x4117bb
  4117c1:	inc    eax
  4117c2:	xchg   ebp,eax
  4117c3:	push   eax
  4117c4:	sbb    al,BYTE PTR [edx+0x7f]
  4117c7:	int3   
  4117c8:	lods   al,BYTE PTR ds:[esi]
  4117c9:	cwde   
  4117ca:	fwait
  4117cb:	sub    DWORD PTR ds:0x7509f07e,esi
  4117d1:	jg     0x4117c9
  4117d3:	addr16 jmp 0x411848
  4117d6:	outs   dx,DWORD PTR ds:[esi]
  4117d7:	push   eax
  4117d8:	arpl   WORD PTR [ebx],si
  4117da:	das    
  4117db:	mov    ds:0xd8ae1128,al
  4117e0:	outs   dx,BYTE PTR ds:[esi]
  4117e1:	jno    0x4117c9
  4117e3:	arpl   cx,si
  4117e5:	test   eax,0xf63986b6
  4117ea:	bound  ecx,QWORD PTR [ebx+0x4e]
  4117ed:	rcr    BYTE PTR [eax],cl
  4117ef:	inc    eax
  4117f0:	(bad)  
  4117f1:	adc    cl,BYTE PTR [esi]
  4117f3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f6:	mov    ebx,edi
  4117f8:	or     ecx,DWORD PTR [ebx]
  4117fa:	adc    bh,BYTE PTR [ecx+ebp*8-0x5c]
  4117fe:	pop    ss
  4117ff:	retf   
  411800:	imul   edx,DWORD PTR [edi-0x2c],0x5c9d5e85
  411807:	mov    cl,0xfa
  411809:	or     eax,ecx
  41180b:	inc    ebp
  41180c:	jbe    0x4117ef
  41180e:	jo     0x41182f
  411810:	into   
  411811:	mov    ebp,0xd39f83c
  411816:	das    
  411817:	test   eax,0x96d32c5f
  41181c:	ds loopne 0x411887
  41181f:	xor    edx,DWORD PTR [esi]
  411821:	sbb    al,BYTE PTR [edi+0x32137059]
  411827:	loopne 0x41186c
  411829:	push   0x9cc40a7d
  41182e:	das    
  41182f:	pop    edx
  411830:	icebp  
  411831:	adc    al,0x10
  411833:	popf   
  411834:	xor    al,0x83
  411836:	sbb    dl,BYTE PTR [edx-0x16af5114]
  41183c:	mov    al,BYTE PTR [ebx]
  41183e:	add    BYTE PTR [eax],al
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax-0x2c8d5570]
  41184f:	nop
  411850:	scas   eax,DWORD PTR es:[edi]
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0xc40fa6a7
  41185c:	aas    
  41185d:	pop    edi
  41185e:	fidivr DWORD PTR [ecx]
  411860:	jo     0x4118ab
  411862:	in     eax,dx
  411863:	loopne 0x41182e
  411865:	add    cl,ch
  411867:	fwait
  411868:	xor    eax,0xda48df14
  41186d:	inc    edi
  41186e:	ins    BYTE PTR es:[edi],dx
  41186f:	retf   
  411870:	mov    bl,0x52
  411872:	push   ecx
  411873:	ins    BYTE PTR es:[edi],dx
  411874:	clc    
  411875:	xchg   edx,eax
  411876:	ins    BYTE PTR es:[edi],dx
  411877:	in     al,dx
  411878:	push   ebp
  411879:	in     al,0x3f
  41187b:	cmp    al,0xb6
  41187d:	pop    ss
  41187e:	popf   
  41187f:	mov    dh,BYTE PTR [ebx+0x4e8ef8f9]
  411885:	jecxz  0x41184c
  411887:	repz or BYTE PTR [eax-0x130b4134],dl
  41188e:	mov    ss,WORD PTR [ecx]
  411890:	xchg   DWORD PTR [ecx+0x61],ebx
  411893:	push   ss
  411894:	(bad)  
  411895:	cwde   
  411896:	mov    ds:0xc0054804,eax
  41189b:	mov    ds:0x7dcd16d6,eax
  4118a0:	or     eax,0xb9583a15
  4118a5:	neg    ebp
  4118a7:	cmp    BYTE PTR [edi+0x1d220427],ch
  4118ad:	and    ah,al
  4118af:	scas   al,BYTE PTR es:[edi]
  4118b0:	jmp    0x32203f38
  4118b5:	jae    0x41183d
  4118b7:	cdq    
  4118b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b9:	fsubr  DWORD PTR [ebp-0x360b48f1]
  4118bf:	scas   eax,DWORD PTR es:[edi]
  4118c0:	test   al,0x2b
  4118c2:	in     al,0x2f
  4118c4:	cmp    DWORD PTR [eax-0x6b7f6b18],ebx
  4118ca:	addr16 pop esi
  4118cc:	icebp  
  4118cd:	out    dx,al
  4118ce:	inc    BYTE PTR [edi-0x17]
  4118d1:	lahf   
  4118d2:	aas    
  4118d3:	adc    ch,BYTE PTR [eax+0x60165cbd]
  4118d9:	mov    ebx,0x13c133b1
  4118de:	test   al,0x8b
  4118e0:	add    ecx,DWORD PTR [edi]
  4118e2:	arpl   cx,sp
  4118e4:	(bad)  
  4118e5:	adc    al,0x5a
  4118e7:	inc    eax
  4118e8:	mov    cl,0x4a
  4118ea:	popa   
  4118eb:	dec    eax
  4118ec:	iret   
  4118ed:	aad    0x8
  4118ef:	sbb    BYTE PTR [ebx-0x43],0xb1
  4118f3:	adc    eax,0x5c4ead76
  4118f8:	mov    ah,0x4c
  4118fa:	dec    ebp
  4118fb:	inc    edx
  4118fc:	cmp    ch,BYTE PTR [ebp-0x759bfa1f]
  411902:	cmp    BYTE PTR [ebp+0x7e023427],dl
  411908:	cmp    al,0xb0
  41190a:	push   ebx
  41190b:	pop    esi
  41190c:	pop    esp
  41190d:	in     eax,0xff
  41190f:	adc    BYTE PTR [edx+0x2f],cl
  411912:	jne    0x4118c6
  411914:	test   al,0x7d
  411916:	xor    ah,BYTE PTR [edx-0x12]
  411919:	xor    al,0x69
  41191b:	xchg   ecx,eax
  41191c:	(bad)  
  41191d:	fnstcw WORD PTR [esi-0x4eb9d270]
  411923:	adc    BYTE PTR [eax+ebp*8-0x45588e03],ch
  41192a:	js     0x4118b9
  41192c:	and    DWORD PTR [ebp+eax*2+0x5a],esi
  411930:	(bad)  
  411931:	inc    edx
  411932:	mov    ebx,0xe7b4be9a
  411937:	pop    es
  411938:	mov    ss,WORD PTR ds:0xbf18b58a
  41193e:	or     edx,edx
  411940:	leave  
  411941:	cmp    edx,ebx
  411943:	imul   ebp,edx,0xf2322a91
  411949:	jle    0x4119b6
  41194b:	stc    
  41194c:	test   DWORD PTR [ebp-0x55],ebx
  41194f:	xchg   esi,eax
  411950:	gs pop edx
  411952:	jne    0x411983
  411954:	xor    ecx,DWORD PTR [ebx+eiz*4]
  411957:	cs push 0x753cf42b
  41195d:	outs   dx,DWORD PTR ds:[esi]
  41195e:	dec    ecx
  41195f:	fcmovnb st,st(4)
  411961:	inc    edx
  411962:	and    DWORD PTR [ebp-0x5efad3cd],ecx
  411968:	mov    bl,0xf2
  41196a:	mov    ah,0xfb
  41196c:	test   DWORD PTR [esi-0x6814c563],0x9164a578
  411976:	cs aas 
  411978:	adc    eax,0x9eec1116
  41197d:	out    0x21,al
  41197f:	imul   dh
  411981:	pop    ss
  411982:	cmp    BYTE PTR [edi-0x10],ah
  411985:	cmp    DWORD PTR [ebp-0x1544741e],esi
  41198b:	test   BYTE PTR [edx],dh
  41198d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41198f:	add    al,0x3a
  411991:	inc    edx
  411992:	and    bh,BYTE PTR [ecx]
  411994:	pop    esp
  411995:	int3   
  411996:	fild   DWORD PTR [esi]
  411998:	xchg   BYTE PTR [ecx+0x3ef46b7c],dh
  41199e:	add    ch,0x1
  4119a1:	popa   
  4119a2:	mov    al,0xae
  4119a4:	mov    ah,0xeb
  4119a6:	jge    0x4119ac
  4119a8:	cs loop 0x41193e
  4119ab:	test   BYTE PTR [esi],cl
  4119ad:	mov    al,ds:0x5ba1797a
  4119b2:	mov    ch,0x98
  4119b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b5:	push   cs
  4119b6:	inc    eax
  4119b7:	jb     0x411957
  4119b9:	add    esi,DWORD PTR [edx]
  4119bb:	repnz mov al,ds:0x557332d1
  4119c1:	push   es
  4119c2:	call   0xf205:0xc6947067
  4119c9:	sub    al,0xb4
  4119cb:	movups XMMWORD PTR [edx],xmm3
  4119ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119cf:	mov    bl,0x58
  4119d1:	dec    eax
  4119d2:	jl     0x4119b1
  4119d4:	jne    0x4119eb
  4119d6:	pop    ebp
  4119d7:	dec    eax
  4119d8:	mov    ch,0x4d
  4119da:	pop    eax
  4119db:	in     al,0x57
  4119dd:	add    esp,DWORD PTR [edx-0x4b]
  4119e0:	hlt    
  4119e1:	push   0x566b2144
  4119e6:	arpl   WORD PTR [edx],di
  4119e8:	pop    eax
  4119e9:	dec    edx
  4119ea:	aad    0x7c
  4119ec:	stos   BYTE PTR es:[edi],al
  4119ed:	pop    ds
  4119ee:	sub    BYTE PTR [edx-0x6c2d52ba],cl
  4119f4:	test   DWORD PTR [ecx-0xb3dfe38],0x7db68d1b
  4119fe:	xchg   esp,eax
  4119ff:	cmp    ecx,ebp
  411a01:	scas   al,BYTE PTR es:[edi]
  411a02:	mov    dl,0x1a
  411a04:	adc    ebx,DWORD PTR [ebp+0xb]
  411a07:	imul   esi,ebp,0x1f50cd90
  411a0d:	test   eax,0x674cbe46
  411a12:	push   ds
  411a13:	in     al,dx
  411a14:	dec    eax
  411a15:	inc    esp
  411a16:	jg     0x411a73
  411a18:	dec    eax
  411a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1a:	xchg   ebx,eax
  411a1b:	sub    eax,0xf13344e8
  411a20:	jno    0x411a39
  411a22:	cli    
  411a23:	push   esi
  411a24:	xor    eax,0x97e5945f
  411a29:	push   ebp
  411a2a:	mov    eax,ds:0xdcd3dfc6
  411a2f:	dec    ebp
  411a30:	das    
  411a31:	and    al,0x9b
  411a33:	xor    ebx,ecx
  411a35:	mov    eax,DWORD PTR [esi]
  411a37:	push   edi
  411a38:	ret    0x73ac
  411a3b:	(bad)  
  411a3c:	mov    ebx,0xf670a8cf
  411a41:	leave  
  411a42:	test   al,0x7f
  411a44:	pop    es
  411a45:	or     eax,0x28e4dbca
  411a4a:	hlt    
  411a4b:	ret    0xd7b5
  411a4e:	xchg   ecx,eax
  411a4f:	sub    al,dl
  411a51:	ja     0x411a77
  411a53:	push   cs
  411a54:	inc    ebp
  411a55:	stc    
  411a56:	outs   dx,BYTE PTR ds:[esi]
  411a57:	enter  0xffe5,0x3f
  411a5b:	and    eax,0xc813adb4
  411a60:	jae    0x411a1c
  411a62:	cmp    al,0x2c
  411a64:	pop    eax
  411a65:	imul   ecx,DWORD PTR [eax+0x7707f219],0x7a0f39f
  411a6f:	jle    0x411a8c
  411a71:	les    ecx,FWORD PTR [ecx]
  411a73:	or     BYTE PTR [esi-0x6d],bl
  411a76:	pop    ss
  411a77:	xor    bh,cl
  411a79:	scas   eax,DWORD PTR es:[edi]
  411a7a:	imul   ecx,DWORD PTR [edx+ecx*4-0x63],0xd74b550b
  411a82:	ja     0x411a33
  411a84:	addr16 pop ebx
  411a86:	loop   0x411a2f
  411a88:	fcmovnu st,st(7)
  411a8a:	test   DWORD PTR [ebx],edi
  411a8c:	shr    DWORD PTR [eax*4+0x39ce2de7],cl
  411a93:	pop    eax
  411a94:	dec    ebx
  411a95:	jg     0x411a62
  411a97:	or     bh,BYTE PTR [eax-0x544588d5]
  411a9d:	into   
  411a9e:	and    al,0x2c
  411aa0:	xor    DWORD PTR [esi*1+0x6207a246],ebx
  411aa7:	xor    BYTE PTR [eax+0x311be06e],cl
  411aad:	jb     0x411a9c
  411aaf:	xchg   ebx,eax
  411ab0:	out    dx,eax
  411ab1:	mov    esp,0x66ec1327
  411ab6:	fcomip st,st(7)
  411ab8:	mov    ds:0x6b88284b,eax
  411abd:	scas   eax,DWORD PTR es:[edi]
  411abe:	add    al,0x6f
  411ac0:	into   
  411ac1:	dec    edx
  411ac2:	mov    dh,0x6d
  411ac4:	pop    edx
  411ac5:	icebp  
  411ac6:	sbb    BYTE PTR [edx-0x6a],ah
  411ac9:	add    eax,0xb5abe19b
  411ace:	ret    0x34db
  411ad1:	or     BYTE PTR [ebx+0x57],ah
  411ad4:	mov    BYTE PTR ds:0x9bb69396,al
  411ada:	and    BYTE PTR [eax-0x776de09f],0x67
  411ae1:	cld    
  411ae2:	rol    BYTE PTR [eax+0x44],0xd6
  411ae6:	push   esp
  411ae7:	test   DWORD PTR [ecx],edx
  411ae9:	mov    al,0x1
  411aeb:	cmp    BYTE PTR [ebp+0x6f],0x7a
  411aef:	mov    dl,0x58
  411af1:	pop    ecx
  411af2:	sub    al,0x6f
  411af4:	je     0x411b68
  411af6:	mov    al,ds:0xdd54b7f3
  411afb:	add    ah,bl
  411afd:	dec    ebp
  411afe:	stc    
  411aff:	(bad)  
  411b00:	in     al,dx
  411b01:	push   edi
  411b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b03:	cmp    eax,esi
  411b05:	jecxz  0x411a9e
  411b07:	into   
  411b08:	sbb    al,0x81
  411b0a:	(bad)  
  411b0b:	cmp    al,0xc
  411b0d:	cmp    BYTE PTR [esi+0xb],ch
  411b10:	push   ebp
  411b11:	sti    
  411b12:	hlt    
  411b13:	mov    WORD PTR [edi-0x4c4465c],fs
  411b19:	ss or  eax,0x547f653c
  411b1f:	adc    edx,DWORD PTR [ecx]
  411b21:	sbb    al,BYTE PTR [ecx-0x2ade9ca9]
  411b27:	lods   eax,DWORD PTR ds:[esi]
  411b28:	dec    esi
  411b29:	xor    eax,0xddf5a27b
  411b2e:	fwait
  411b2f:	inc    ebx
  411b30:	push   edi
  411b31:	cmc    
  411b32:	xadd   DWORD PTR [edx+0x396d7c18],eax
  411b39:	in     eax,0x30
  411b3b:	retf   
  411b3c:	loop   0x411b6e
  411b3e:	xor    eax,0x462776ba
  411b43:	test   dl,al
  411b45:	adc    al,0x21
  411b47:	clc    
  411b48:	mov    esi,gs
  411b4a:	in     eax,0xf5
  411b4c:	nop    DWORD PTR [ecx-0x665fbf00]
  411b53:	inc    esi
  411b54:	adc    BYTE PTR [ebx-0x28],bh
  411b57:	mov    edx,0x419e5815
  411b5c:	lods   al,BYTE PTR ds:[esi]
  411b5d:	sbb    ah,BYTE PTR [ebx-0x11]
  411b60:	fisubr DWORD PTR [esi]
  411b62:	cld    
  411b63:	inc    edi
  411b64:	(bad)  
  411b65:	shld   DWORD PTR [edx-0x2a367dcf],ebx,cl
  411b6c:	mov    ds:0xf1262c1e,al
  411b71:	pop    esp
  411b72:	push   ebx
  411b73:	out    dx,eax
  411b74:	pushf  
  411b75:	add    BYTE PTR [ecx],ah
  411b77:	repz add al,0xd4
  411b7a:	js     0x411bf1
  411b7c:	mov    bl,0xcf
  411b7e:	retf   
  411b7f:	out    dx,al
  411b80:	aad    0x3d
  411b82:	dec    edx
  411b83:	push   edx
  411b84:	mov    ds:0xfd2e3e71,al
  411b89:	repz xchg ecx,eax
  411b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8c:	pop    edi
  411b8d:	cmc    
  411b8e:	mov    bl,0x7e
  411b90:	push   cs
  411b91:	mov    ebp,0x11895e74
  411b96:	stos   BYTE PTR es:[edi],al
  411b97:	mov    edx,0xd62b2f7b
  411b9c:	jmp    0x411bb6
  411b9e:	test   DWORD PTR [edx+0x2d],edi
  411ba1:	aas    
  411ba2:	push   ds
  411ba3:	loop   0x411bb3
  411ba5:	mov    WORD PTR [ecx+0x4bccae33],?
  411bab:	add    BYTE PTR [esi+ebx*2],dl
  411bae:	pop    edi
  411baf:	sub    eax,0x67
  411bb2:	jbe    0x411b42
  411bb4:	pop    edx
  411bb5:	jb     0x411c07
  411bb7:	dec    ecx
  411bb8:	in     al,0x4f
  411bba:	pop    esp
  411bbb:	fmul   DWORD PTR [edi-0x1c]
  411bbe:	sbb    eax,DWORD PTR [edx+0x5017153f]
  411bc4:	rcr    DWORD PTR [eax+0x45],cl
  411bc7:	fsubr  QWORD PTR [ebx]
  411bc9:	jge    0x50654013
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	lods   eax,DWORD PTR ds:[esi]
  411ce2:	fucompp 
  411ce4:	jecxz  0x411c72
  411ce6:	pusha  
  411ce7:	mov    esi,0xbec28ebe
  411cec:	mov    esi,0x94790a55
  411cf1:	je     0x411cd4
  411cf3:	adc    BYTE PTR [ecx-0x76],dh
  411cf6:	dec    esi
  411cf7:	dec    ebx
  411cf8:	dec    dx
  411cfa:	das    
  411cfb:	xor    DWORD PTR [ecx+0x37539956],esi
  411d01:	fistp  DWORD PTR [ecx-0x55]
  411d04:	jge    0x411d4e
  411d06:	push   ebp
  411d07:	imul   eax,DWORD PTR [edx-0x3669ff05],0xffffffff
  411d0e:	xchg   ebp,eax
  411d0f:	xor    eax,0xf016a975
  411d14:	and    ah,BYTE PTR [edx]
  411d16:	test   DWORD PTR [edi],edi
  411d18:	repz test al,0x18
  411d1b:	frstor [esi+0x6bace9d2]
  411d21:	push   esp
  411d22:	sti    
  411d23:	pop    edi
  411d24:	scas   eax,DWORD PTR es:[edi]
  411d25:	in     al,dx
  411d26:	cwde   
  411d27:	aaa    
  411d28:	hlt    
  411d29:	mov    eax,0x5d86b1a2
  411d2e:	jl     0x411d76
  411d30:	mov    esp,0xbd1456f3
  411d35:	pop    ebp
  411d36:	pop    es
  411d37:	xchg   ebx,eax
  411d38:	mov    dl,0x74
  411d3a:	enter  0x4f45,0xb5
  411d3e:	pop    esi
  411d3f:	add    al,0xdd
  411d41:	mov    al,0x3
  411d43:	dec    ebx
  411d44:	cmp    eax,0xc7f8702d
  411d49:	cmp    eax,0xb35023
  411d4e:	cmp    BYTE PTR [edx+0x10d89b5c],dh
  411d54:	pop    ecx
  411d55:	rcl    DWORD PTR [esi],cl
  411d57:	mov    eax,0x81bffb08
  411d5c:	cmp    ecx,ecx
  411d5e:	(bad)  
  411d5f:	aam    0x8f
  411d61:	jae    0x411d20
  411d63:	jge    0x411d23
  411d65:	jg     0x411dd4
  411d67:	test   BYTE PTR [edx-0x76],bh
  411d6a:	in     al,0x53
  411d6c:	xchg   esp,eax
  411d6d:	sbb    BYTE PTR ds:0x15fa146b,cl
  411d73:	add    al,0xc
  411d75:	adc    edx,esi
  411d77:	push   es
  411d78:	mov    eax,ds:0x34c41565
  411d7d:	fyl2x  
  411d7f:	lods   eax,DWORD PTR ds:[esi]
  411d80:	mov    ds:0x924f7b34,al
  411d85:	mov    al,ds:0x67eca9b6
  411d8a:	xchg   esi,eax
  411d8b:	pop    ebx
  411d8c:	add    BYTE PTR [edi-0x59],0xcd
  411d90:	lahf   
  411d91:	leave  
  411d92:	push   esi
  411d93:	lahf   
  411d94:	push   esp
  411d95:	mov    cl,0x4c
  411d97:	test   al,0xe9
  411d99:	and    BYTE PTR [edi-0xe],0x6c
  411d9d:	mov    ecx,0xaf383864
  411da2:	inc    ebp
  411da3:	sbb    al,0x84
  411da5:	cli    
  411da6:	inc    eax
  411da7:	sbb    al,0xe8
  411da9:	repz jns 0x411d6f
  411dac:	and    al,0x99
  411dae:	loopne 0x411d91
  411db0:	test   eax,0xcf2a8daf
  411db5:	pop    ds
  411db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db7:	fisttp DWORD PTR [ebx]
  411db9:	adc    edi,DWORD PTR [edx-0x1fa80019]
  411dbf:	pop    es
  411dc0:	adc    BYTE PTR [ecx+ebx*8],cl
  411dc3:	repz data16 int 0x5e
  411dc7:	xor    edi,DWORD PTR [ecx-0x11]
  411dca:	pop    ebp
  411dcb:	add    al,0xe7
  411dcd:	outs   dx,DWORD PTR ds:[esi]
  411dce:	xchg   ebp,eax
  411dcf:	ret    
  411dd0:	cli    
  411dd1:	loopne 0x411db2
  411dd3:	cmp    DWORD PTR [esi],ebx
  411dd5:	inc    ebp
  411dd6:	inc    ebp
  411dd7:	mov    bl,0x2d
  411dd9:	(bad)  
  411dda:	ins    BYTE PTR es:[edi],dx
  411ddb:	lock repz mov edx,0xd2a26100
  411de2:	mov    edx,0x424eca80
  411de7:	retf   
  411de8:	cmp    ebp,ebp
  411dea:	dec    ebp
  411deb:	dec    ebp
  411dec:	daa    
  411ded:	int3   
  411dee:	adc    bh,BYTE PTR [ecx+0x20]
  411df1:	dec    edi
  411df2:	in     eax,dx
  411df3:	jnp    0x411e06
  411df5:	out    dx,al
  411df6:	mov    bl,0x2c
  411df8:	mov    cl,0x16
  411dfa:	bound  ecx,QWORD PTR [ebp-0x68]
  411dfd:	push   ecx
  411dfe:	xchg   esi,eax
  411dff:	ror    BYTE PTR [ebx-0x33b02623],1
  411e05:	inc    ebx
  411e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e07:	jae    0x411e12
  411e09:	je     0x411d93
  411e0b:	and    DWORD PTR [esi+0x59],0x2054c246
  411e12:	push   DWORD PTR [eax]
  411e14:	or     edi,edi
  411e16:	cmp    esi,eax
  411e18:	repz aam 0xe7
  411e1b:	fs dec eax
  411e1d:	imul   ecx,DWORD PTR [edi-0x7d3b1e7],0xcbc472c4
  411e27:	loope  0x411e07
  411e29:	iret   
  411e2a:	push   0xffffffd4
  411e2c:	pop    ebp
  411e2d:	clc    
  411e2e:	gs and BYTE PTR es:[edi-0x4a0d144a],0x75
  411e37:	in     al,dx
  411e38:	test   DWORD PTR [edx-0x4bc35d2d],esi
  411e3e:	dec    edx
  411e3f:	xchg   edi,edi
  411e41:	test   eax,0x4919bb44
  411e46:	clc    
  411e47:	out    0x6f,eax
  411e49:	push   es
  411e4a:	xor    DWORD PTR [edi],ebp
  411e4c:	scas   al,BYTE PTR es:[edi]
  411e4d:	mov    ch,0x78
  411e4f:	lds    eax,FWORD PTR [ebx]
  411e51:	in     al,dx
  411e52:	call   0xccb8dbb5
  411e57:	or     DWORD PTR [esi+0x1d],0x1b
  411e5b:	and    ch,BYTE PTR [ebx-0x5566f7bd]
  411e61:	push   esp
  411e62:	sub    DWORD PTR [esi+0x4f7396e1],edi
  411e68:	adc    BYTE PTR [ecx],bh
  411e6a:	cld    
  411e6b:	jle    0x411ebc
  411e6d:	lds    esi,FWORD PTR [edx+0x2416186b]
  411e73:	inc    ecx
  411e74:	mov    bl,BYTE PTR [ebx-0x48]
  411e77:	dec    esi
  411e78:	(bad)  
  411e79:	adc    DWORD PTR [edi-0x58],edi
  411e7c:	loop   0x411e65
  411e7e:	mov    edx,0xe4398f77
  411e83:	fsubr  QWORD PTR [esi]
  411e85:	cmp    DWORD PTR [bx+si],ebp
  411e88:	xor    BYTE PTR [edi+0x6b],bl
  411e8b:	dec    ebp
  411e8c:	aad    0xa0
  411e8e:	cs push esi
  411e90:	in     eax,0x7d
  411e92:	je     0x411e21
  411e94:	push   esp
  411e95:	(bad)  
  411e96:	call   0xccbd7a0c
  411e9b:	pop    esi
  411e9c:	icebp  
  411e9d:	ret    
  411e9e:	jmp    0x411e34
  411ea0:	dec    ecx
  411ea1:	jle    0x411e71
  411ea3:	imul   esp,DWORD PTR [edi+esi*8],0x33
  411ea7:	repz fwait
  411ea9:	aaa    
  411eaa:	xor    ebx,esp
  411eac:	popf   
  411ead:	mov    edx,0xd06fa035
  411eb2:	jb     0x411e7e
  411eb4:	mov    ebp,0xafdb7954
  411eb9:	ffreep st(6)
  411ebb:	imul   esp,DWORD PTR [esi-0x566c3f4f],0x484e7a6e
  411ec5:	retf   
  411ec6:	shl    DWORD PTR [eax],cl
  411ec8:	out    dx,al
  411ec9:	mov    WORD PTR [ebx+ecx*4+0x2c],es
  411ecd:	ret    0xafd9
  411ed0:	pusha  
  411ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed2:	or     bh,BYTE PTR [ebx+0x54fb0574]
  411ed8:	js     0x411f58
  411eda:	sbb    eax,0xd3a9ecfe
  411edf:	push   edi
  411ee0:	les    esi,FWORD PTR [ecx-0x4beb96e1]
  411ee6:	push   ebp
  411ee7:	les    esp,FWORD PTR [eax-0x114f3114]
  411eed:	call   0x39f6:0xa6b54d77
  411ef4:	cmp    eax,0x3a1f4ce1
  411ef9:	fsub   DWORD PTR [edi-0x5931f9cd]
  411eff:	js     0x411f70
  411f01:	or     eax,0x170d44bb
  411f06:	xchg   ebp,eax
  411f07:	add    edi,DWORD PTR [eax]
  411f09:	sub    BYTE PTR ds:0x52ae7f7e,ah
  411f0f:	aad    0x25
  411f11:	stos   DWORD PTR es:[edi],eax
  411f12:	mov    bh,0xee
  411f14:	mov    eax,ds:0xbebd91c8
  411f19:	adc    DWORD PTR [ecx+0x57db89bb],0x662e34c5
  411f23:	and    BYTE PTR [eax+0xdbd839c],ah
  411f29:	(bad)  
  411f2a:	sbb    DWORD PTR [esi+0x24fee271],esi
  411f30:	ins    DWORD PTR es:[edi],dx
  411f31:	xor    eax,0x393474eb
  411f36:	xor    BYTE PTR [edx-0x18762113],ah
  411f3c:	adc    DWORD PTR [ebx],esi
  411f3e:	call   0xbe668f1c
  411f43:	mov    dh,0x1c
  411f45:	mov    cl,0x3a
  411f47:	mov    edx,0xd5027833
  411f4c:	pop    edi
  411f4d:	or     edi,esi
  411f4f:	(bad)  
  411f50:	std    
  411f51:	push   edi
  411f52:	lock imul esp,esp,0x54
  411f56:	call   FWORD PTR [ebx-0x77594af7]
  411f5c:	or     DWORD PTR [ebx+0x70a5ecd7],0xec804331
  411f66:	sub    al,BYTE PTR [ebp-0x17]
  411f69:	aam    0x9f
  411f6b:	out    0x9,al
  411f6d:	xor    al,0xa0
  411f6f:	pop    ebp
  411f70:	lea    ebx,[esi]
  411f72:	sub    al,0xcd
  411f74:	sbb    DWORD PTR [edx+0x40],esp
  411f77:	(bad)  
  411f78:	dec    edx
  411f79:	sbb    BYTE PTR [esp+ecx*4+0x6c6d4cb0],0x6a
  411f81:	cmp    BYTE PTR [ebx-0x9af365d],ah
  411f87:	popa   
  411f88:	loop   0x411f51
  411f8a:	cmp    BYTE PTR [ebx+0x23],ah
  411f8d:	(bad)  
  411f8e:	fucomi st,st(7)
  411f90:	rol    DWORD PTR [ebp+0x5a64875a],1
  411f96:	mov    dh,0x18
  411f98:	fucomp st(2)
  411f9a:	jmp    0xace1:0xc65f063c
  411fa1:	imul   ebx,DWORD PTR es:[eax-0x35105d4c],0xffffff98
  411fa9:	cmp    BYTE PTR [edi],ch
  411fab:	icebp  
  411fac:	ret    0x3921
  411faf:	cwde   
  411fb0:	ror    BYTE PTR [edx+0x346c683c],cl
  411fb6:	add    BYTE PTR [esi],0x1e
  411fb9:	lods   al,BYTE PTR ds:[esi]
  411fba:	xor    edi,edx
  411fbc:	out    dx,eax
  411fbd:	dec    esp
  411fbe:	icebp  
  411fbf:	sti    
  411fc0:	rcl    DWORD PTR [ebx-0x11246bec],cl
  411fc6:	repz out dx,al
  411fc8:	gs mov cl,0x17
  411fcb:	sbb    DWORD PTR [edx-0x20cf9204],eax
  411fd1:	out    0xec,eax
  411fd3:	punpcklbw mm0,mm5
  411fd6:	xchg   edx,eax
  411fd7:	xor    eax,edx
  411fd9:	imul   eax,eax,0x43bd290
  411fdf:	and    eax,edx
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	sbb    BYTE PTR [eax+0x665cd158],al
  41201e:	mov    esi,0xbec28ebe
  412023:	mov    esi,0xd91fefed
  412028:	jnp    0x411fdc
  41202a:	add    DWORD PTR [ebp-0x69da2e92],edx
  412030:	cld    
  412031:	lods   eax,DWORD PTR ds:[esi]
  412032:	stc    
  412033:	les    esi,FWORD PTR [edx-0x2c]
  412036:	(bad)  
  412037:	ss cli 
  412039:	mov    ecx,0x77dfb4c
  41203e:	xchg   ecx,eax
  41203f:	cmp    eax,0xb87ef118
  412044:	leave  
  412045:	push   eax
  412046:	cld    
  412047:	out    0xda,al
  412049:	in     eax,0x51
  41204b:	sub    eax,0x8a4cb5fe
  412050:	xchg   esi,eax
  412051:	out    dx,al
  412052:	cwde   
  412053:	ret    0x6b5f
  412056:	cli    
  412057:	mov    dh,0x49
  412059:	aaa    
  41205a:	cmp    al,0x3c
  41205c:	mov    eax,ds:0xf7632513
  412061:	dec    esp
  412062:	pop    es
  412063:	pop    ss
  412064:	les    ebp,FWORD PTR [eax+0x20]
  412067:	inc    eax
  412068:	sub    esi,ecx
  41206a:	cwde   
  41206b:	(bad)  
  41206c:	jne    0x412098
  41206e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206f:	push   0x47
  412071:	(bad)  
  412072:	pop    edi
  412073:	bound  ecx,QWORD PTR ds:0xa517cc5c
  412079:	and    DWORD PTR [eax+0xef35c9f],edi
  41207f:	push   esp
  412080:	mov    gs,WORD PTR [ecx]
  412082:	imul   edx,DWORD PTR [eax],0x7da3569a
  412088:	data16 sub al,0x49
  41208b:	pop    es
  41208c:	sub    al,0x55
  41208e:	leave  
  41208f:	pop    ss
  412090:	xchg   esi,eax
  412091:	imul   ebx,eax,0x3b
  412094:	dec    ebx
  412095:	sbb    esp,0xfffffff6
  412098:	pop    es
  412099:	test   al,0x2a
  41209b:	mov    dh,0xf9
  41209d:	inc    edx
  41209e:	les    esp,FWORD PTR [ecx+0x300f0020]
  4120a4:	mov    dl,BYTE PTR [edx-0x42926bdf]
  4120aa:	lahf   
  4120ab:	lods   eax,DWORD PTR ds:[esi]
  4120ac:	fs fmul st,st(1)
  4120af:	adc    eax,0x248804dd
  4120b4:	rcl    BYTE PTR [esi+eiz*4-0x34ceb76d],cl
  4120bb:	add    DWORD PTR [ecx],edi
  4120bd:	add    DWORD PTR [edi],0x6b
  4120c0:	or     eax,0x9765dfae
  4120c5:	aaa    
  4120c6:	dec    edx
  4120c7:	gs stc 
  4120c9:	or     edx,DWORD PTR [esi-0x18ca1d61]
  4120cf:	addr16 fninit 
  4120d2:	mov    esp,DWORD PTR [edx-0x10536ed0]
  4120d8:	iret   
  4120d9:	ins    BYTE PTR es:[edi],dx
  4120da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120db:	and    bh,BYTE PTR [ebx+0x5a578416]
  4120e1:	or     BYTE PTR [ecx-0x2a6dd4f9],ah
  4120e7:	out    0x72,eax
  4120e9:	int3   
  4120ea:	test   DWORD PTR [edi],eax
  4120ec:	mov    esi,0x39f40d88
  4120f1:	rep ins BYTE PTR es:[edi],dx
  4120f3:	pop    esp
  4120f4:	les    ebx,FWORD PTR [edx-0x5c]
  4120f7:	icebp  
  4120f8:	sub    al,0x24
  4120fa:	ret    
  4120fb:	and    eax,DWORD PTR ds:0x781270
  412101:	xor    al,0x46
  412103:	mov    cl,0x31
  412105:	cmp    ch,al
  412107:	adc    eax,0x19d53acc
  41210c:	fwait
  41210d:	adc    BYTE PTR [eax+0x70],bh
  412110:	test   al,0x89
  412112:	add    eax,0x4ccf808a
  412117:	fsub   st,st(6)
  412119:	jecxz  0x4120d7
  41211b:	fsubr  st,st(2)
  41211d:	sub    esp,eax
  41211f:	mov    eax,0x9bf48ace
  412124:	lea    esi,[ecx-0x1ab0e9b]
  41212a:	bound  ebx,QWORD PTR [edi+0x3b]
  41212d:	xchg   ebp,eax
  41212e:	(bad)  
  41212f:	mov    eax,0x934e6d9
  412134:	mov    ds:0x4829cc4f,eax
  412139:	add    DWORD PTR [esi+eax*1-0x4cc13f9d],0xbb3f477e
  412144:	fucomp st(3)
  412146:	fistp  WORD PTR [ebx+0x4cde0a2d]
  41214c:	or     DWORD PTR [edi],edx
  41214e:	in     al,dx
  41214f:	push   esp
  412150:	or     cl,BYTE PTR [eax+0x1a9d31da]
  412156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412157:	pop    es
  412158:	out    0xac,al
  41215a:	mov    edx,0x16d1ea28
  41215f:	and    edi,DWORD PTR [ebp-0x7a]
  412162:	cmp    eax,0x9d21b343
  412167:	push   ecx
  412168:	mov    al,0xa3
  41216a:	dec    ebp
  41216b:	clc    
  41216c:	es jp  0x412115
  41216f:	int3   
  412170:	push   0xcd774424
  412175:	sub    DWORD PTR [ebp+0x55815da9],esp
  41217b:	jbe    0x412189
  41217d:	popf   
  41217e:	ds shl ecx,cl
  412181:	cmp    DWORD PTR [ecx+0x52],0x98b0eea7
  412188:	push   edx
  412189:	je     0x4121ae
  41218b:	cmc    
  41218c:	sub    cl,dl
  41218e:	mov    bl,0x3d
  412190:	jmp    0xb1c28469
  412195:	mov    gs,WORD PTR [edi]
  412197:	bnd jge 0x412142
  41219a:	mov    cl,0xa9
  41219c:	pop    edx
  41219d:	pushf  
  41219e:	xchg   edx,eax
  41219f:	dec    esp
  4121a0:	(bad)  
  4121a1:	mov    WORD PTR [ecx],ss
  4121a3:	js     0x41218f
  4121a5:	pusha  
  4121a6:	in     eax,dx
  4121a7:	popf   
  4121a8:	(bad)  
  4121a9:	adc    al,0x7d
  4121ab:	adc    bh,BYTE PTR [eax-0x3c]
  4121ae:	(bad)  [ebp+0x59]
  4121b1:	loope  0x412208
  4121b3:	jae    0x41221f
  4121b5:	mov    ecx,0x71eaf882
  4121ba:	dec    esi
  4121bb:	push   eax
  4121bc:	xor    dl,BYTE PTR [esi-0x201eb96f]
  4121c2:	aas    
  4121c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c4:	add    BYTE PTR [ecx+0x7be6d648],0x91
  4121cb:	mov    ds:0x38b2fb52,al
  4121d0:	sbb    cl,ah
  4121d2:	mov    ebx,0x8507ea20
  4121d7:	inc    ebx
  4121d8:	(bad)  
  4121da:	or     DWORD PTR [esi-0x5a],edi
  4121dd:	loope  0x412183
  4121df:	sahf   
  4121e0:	mov    ds:0xe69e9b39,eax
  4121e5:	in     eax,0x59
  4121e7:	mov    dl,0x9b
  4121e9:	adc    al,0xc0
  4121eb:	mov    eax,ds:0x1452129
  4121f0:	stc    
  4121f1:	inc    eax
  4121f2:	pop    edx
  4121f3:	hlt    
  4121f4:	hlt    
  4121f5:	push   ebx
  4121f6:	adc    DWORD PTR [esi+0x23],esp
  4121f9:	mov    ch,dl
  4121fb:	pusha  
  4121fc:	dec    eax
  4121fd:	jnp    0x412229
  4121ff:	jo     0x41219d
  412201:	dec    edi
  412202:	pop    eax
  412203:	jb     0x412219
  412205:	loope  0x4121b4
  412207:	inc    esp
  412208:	jbe    0x412199
  41220a:	cs repnz xchg esi,edx
  41220e:	fs loope 0x412215
  412211:	dec    edx
  412212:	int3   
  412213:	push   ss
  412214:	push   cs
  412215:	call   0x65b5:0x99cb4efd
  41221c:	fwait
  41221d:	mov    dl,ch
  41221f:	daa    
  412220:	dec    eax
  412221:	rcl    ah,1
  412223:	fsub   DWORD PTR [edi+0x4c]
  412226:	es loopne 0x412220
  412229:	loopne 0x4121fd
  41222b:	and    DWORD PTR [ebp-0x7cca6445],edx
  412231:	cmp    eax,0x129feabd
  412236:	or     dh,cl
  412238:	jp     0x412244
  41223a:	sub    BYTE PTR [edx+0x1c],bl
  41223d:	js     0x412234
  41223f:	lahf   
  412240:	outs   dx,BYTE PTR ds:[esi]
  412241:	mov    edi,0x74c85ac4
  412246:	mov    bl,BYTE PTR [ebx]
  412248:	in     al,0x60
  41224a:	inc    esp
  41224b:	mov    edx,0x36d73ddb
  412250:	mov    ds,WORD PTR [ecx+eiz*2+0x5]
  412254:	xor    DWORD PTR [eax],ecx
  412256:	addr16 cmp al,0xa7
  412259:	test   eax,0xeb333f08
  41225e:	sub    cl,dh
  412260:	ja     0x412266
  412262:	xor    dh,dh
  412264:	cs mov ebx,0x87d1f025
  41226a:	clc    
  41226b:	inc    ebx
  41226c:	out    dx,eax
  41226d:	rol    BYTE PTR [esi],0xb8
  412270:	std    
  412271:	dec    edi
  412272:	lds    eax,FWORD PTR [esi-0x2fa70c98]
  412278:	idiv   BYTE PTR [edx]
  41227a:	cdq    
  41227b:	xchg   edx,eax
  41227c:	jmp    DWORD PTR [ebx+ebx*8+0x55]
  412280:	fstp   DWORD PTR [edx+0x5e5e4c5c]
  412286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412287:	(bad)  
  412288:	xor    al,0x8c
  41228a:	add    eax,0x82cbc546
  41228f:	stc    
  412290:	lock jl 0x412239
  412293:	adc    eax,0xdf5e67a
  412298:	push   ds
  412299:	push   ecx
  41229a:	push   esi
  41229b:	mov    ds:0xd1863457,eax
  4122a0:	pop    ebx
  4122a1:	out    dx,al
  4122a2:	int    0xa
  4122a4:	mov    edx,0x498e5d2c
  4122a9:	xchg   ecx,eax
  4122aa:	shl    ch,cl
  4122ac:	or     esp,edx
  4122ae:	jnp    0x41229f
  4122b0:	dec    DWORD PTR [ecx-0x3d]
  4122b3:	les    edi,FWORD PTR [edi+0x6c93b839]
  4122b9:	fs inc esi
  4122bb:	mov    BYTE PTR ds:[edx],dl
  4122be:	pop    ecx
  4122bf:	push   ss
  4122c0:	stos   BYTE PTR es:[edi],al
  4122c1:	inc    ebx
  4122c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c3:	add    DWORD PTR [ecx-0x67cb4845],edx
  4122c9:	cmp    eax,DWORD PTR [edx]
  4122cb:	and    ecx,esi
  4122cd:	imul   eax,DWORD PTR [esi-0x7f430f54],0x4af74436
  4122d7:	shl    DWORD PTR [eax+eiz*1+0xc11835f],cl
  4122de:	stc    
  4122df:	fucom  st(0)
  4122e1:	jmp    0xad657e75
  4122e6:	mov    esp,0xbfd15356
  4122eb:	or     ch,BYTE PTR [edi-0x50bba79d]
  4122f1:	gs ss (bad) 
  4122f4:	psubq  mm5,QWORD PTR [edi+eax*4]
  4122f8:	mov    edi,0x8e89085b
  4122fd:	aas    
  4122fe:	mov    ds:0xcd34b4f4,eax
  412303:	callw  0x7365
  412307:	mov    WORD PTR [ebx+0x65],ds
  41230a:	sti    
  41230b:	popa   
  41230c:	push   ds
  41230d:	repnz fcom QWORD PTR [ecx+eax*4-0xe]
  412312:	adc    eax,0x2b000070
  412317:	ret    0x558b
  41231a:	fmul   DWORD PTR [ebx-0x1d7e2b8b]
  412320:	jnp    0x41234c
  412322:	add    BYTE PTR [eax],al
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	and    DWORD PTR [edi-0xa],ecx
  412367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412368:	sub    al,0x6c
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x93ab3487
  412374:	mov    ds:0xf8d48b67,eax
  412379:	mov    ebp,es
  41237b:	mov    eax,0xa76bcd26
  412380:	xor    edi,DWORD PTR [ecx+0x54a5b336]
  412386:	sub    ebx,DWORD PTR [ebx]
  412388:	pop    edi
  412389:	xchg   edx,eax
  41238a:	jg     0x412323
  41238c:	mov    esp,0x2a4a7c8e
  412391:	dec    edx
  412392:	ret    
  412393:	or     edi,0x12
  412396:	(bad)  
  412397:	cmp    DWORD PTR [edx-0x74],ebp
  41239a:	mov    dl,0x88
  41239c:	sbb    al,0x38
  41239e:	sbb    DWORD PTR [edi-0x2b81b24],ebx
  4123a4:	test   BYTE PTR [ebp+0x42],dl
  4123a7:	sar    cl,cl
  4123a9:	retf   
  4123aa:	clc    
  4123ab:	push   cs
  4123ac:	sub    eax,0x929d7e9c
  4123b1:	dec    esi
  4123b2:	movlps QWORD PTR [ebx+0x53],xmm2
  4123b6:	jle    0x412437
  4123b8:	xchg   esi,eax
  4123b9:	cwde   
  4123ba:	dec    esi
  4123bb:	dec    eax
  4123bc:	inc    edi
  4123bd:	mov    ebx,0xd195295c
  4123c2:	cvtps2pd xmm3,xmm1
  4123c5:	sti    
  4123c6:	out    dx,eax
  4123c7:	cld    
  4123c8:	adc    BYTE PTR [edx],cl
  4123ca:	cmp    BYTE PTR [ecx-0x16702b06],0xb8
  4123d1:	xchg   edx,eax
  4123d2:	bnd jge 0x4123e0
  4123d5:	shl    BYTE PTR [ebx+0x40dcd965],1
  4123db:	shl    BYTE PTR [eax],0x21
  4123de:	cdq    
  4123df:	jecxz  0x412387
  4123e1:	es cmc 
  4123e3:	and    DWORD PTR ds:0xdbdc952b,ebx
  4123e9:	in     eax,0x65
  4123eb:	push   0x53
  4123ed:	push   esp
  4123ee:	adc    DWORD PTR [edx+ecx*4-0x76],ecx
  4123f2:	sar    BYTE PTR [ebx],1
  4123f4:	mov    bl,0xc4
  4123f6:	mul    DWORD PTR [ebx-0x3d]
  4123f9:	xchg   ebx,eax
  4123fa:	xchg   esi,eax
  4123fb:	cmc    
  4123fc:	shr    BYTE PTR [esi+0x64],cl
  4123ff:	arpl   WORD PTR [ecx],sp
  412401:	mov    bh,0x12
  412403:	cmp    dl,BYTE PTR [edi-0x28]
  412406:	dec    esi
  412407:	jmp    0x7c798d40
  41240c:	xchg   edx,eax
  41240d:	int    0xf3
  41240f:	inc    eax
  412410:	xor    esi,DWORD PTR [ecx+0x50c34eef]
  412416:	scas   eax,DWORD PTR es:[edi]
  412417:	les    edi,FWORD PTR [ebp-0x33]
  41241a:	fistp  DWORD PTR [edi+0x16]
  41241d:	xor    BYTE PTR ds:0x6d72ef22,0x1
  412424:	test   eax,0xdc2c4396
  412429:	adc    BYTE PTR [edx-0x255faa8f],bh
  41242f:	xor    al,0x8
  412431:	push   ss
  412432:	fst    QWORD PTR [esi+0x1d2f51cb]
  412438:	pop    ebp
  412439:	sub    edx,edi
  41243b:	or     BYTE PTR [esi],dh
  41243d:	mov    edi,0xbf980c7e
  412442:	mov    ecx,0x9e3da15d
  412447:	pop    ebp
  412448:	adc    eax,0x30c73d9
  41244d:	lods   al,BYTE PTR ds:[esi]
  41244e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244f:	loop   0x412474
  412451:	inc    edi
  412452:	or     al,0x67
  412454:	xchg   BYTE PTR [esi+0x6d5ce816],bh
  41245a:	inc    edx
  41245b:	pop    edx
  41245c:	mov    edi,0x517050e3
  412461:	in     al,dx
  412462:	adc    dh,BYTE PTR [ebx]
  412464:	adc    DWORD PTR [ebx+edi*1],edi
  412467:	push   ebx
  412468:	push   esp
  412469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41246a:	push   ebp
  41246b:	stc    
  41246c:	mov    ecx,0x606d87f4
  412471:	fsub   DWORD PTR [edx-0x7aa8a7c]
  412477:	sbb    al,0x87
  412479:	cmp    cl,BYTE PTR [ecx+edx*8-0x4e3adfe8]
  412480:	push   cs
  412481:	or     eax,0x59d171b5
  412486:	stos   DWORD PTR es:[edi],eax
  412487:	aam    0xf7
  412489:	sbb    eax,0xc45bd8a9
  41248e:	fs loop 0x4124ee
  412491:	dec    ecx
  412492:	push   ecx
  412493:	jns    0x4124fd
  412495:	mov    WORD PTR [esi+ecx*1+0x4b1f9549],cs
  41249c:	das    
  41249d:	rol    BYTE PTR [eax-0x2b39b393],0xf2
  4124a4:	in     eax,0xea
  4124a6:	test   DWORD PTR [edi+0x7a],edi
  4124a9:	mov    bh,0x5
  4124ab:	or     al,0xcd
  4124ad:	shl    BYTE PTR [esi-0x24],1
  4124b0:	test   al,0xc9
  4124b2:	stos   BYTE PTR es:[edi],al
  4124b3:	mov    BYTE PTR [edx],dl
  4124b5:	jge    0x412501
  4124b7:	vunpckhps xmm1,xmm2,XMMWORD PTR [ecx-0x57106f6c]
  4124bf:	pop    ecx
  4124c0:	ret    0x47b9
  4124c3:	fisub  DWORD PTR [ebp+0x7a8b006b]
  4124c9:	(bad)  
  4124ca:	push   cx
  4124cc:	mov    eax,ds:0x4e1e4785
  4124d1:	retf   0xdc77
  4124d4:	arpl   cx,di
  4124d6:	int3   
  4124d7:	test   eax,0x88afb655
  4124dc:	(bad)  
  4124dd:	xlat   BYTE PTR ds:[ebx]
  4124de:	mov    edi,0x17208bd0
  4124e3:	popf   
  4124e4:	je     0x41253e
  4124e6:	inc    edi
  4124e7:	(bad)  
  4124e9:	inc    esp
  4124ea:	btc    DWORD PTR [edx+esi*4+0xf],ebp
  4124ef:	or     dh,BYTE PTR [ebx]
  4124f1:	pop    ss
  4124f2:	js     0x41251d
  4124f4:	add    bl,al
  4124f6:	push   ecx
  4124f7:	push   edi
  4124f8:	aad    0x71
  4124fa:	cmp    eax,0x8d6f2895
  4124ff:	daa    
  412500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412501:	je     0x4124d2
  412503:	(bad)  
  412504:	mov    edi,0x60b70a61
  412509:	push   0x29
  41250b:	push   0xffffffbf
  41250d:	loope  0x412551
  41250f:	dec    ebp
  412510:	xchg   ecx,eax
  412511:	ins    BYTE PTR es:[edi],dx
  412512:	lods   al,BYTE PTR ds:[esi]
  412513:	rcr    BYTE PTR [ebx+ecx*2],1
  412516:	xchg   ebx,eax
  412517:	popf   
  412518:	fild   QWORD PTR [ecx+0x77]
  41251b:	inc    edi
  41251c:	mov    bh,0x8
  41251e:	pop    ebp
  41251f:	test   al,0xd1
  412521:	js     0x412574
  412523:	xor    al,0x39
  412525:	pop    edx
  412526:	inc    esi
  412527:	jb     0x4124c5
  412529:	mov    bl,0xe9
  41252b:	cdq    
  41252c:	arpl   WORD PTR [eax-0x9],si
  41252f:	mov    ch,BYTE PTR [eax+0x49]
  412532:	mov    dl,0xda
  412534:	imul   esi,DWORD PTR [edx-0x65],0x8eaa3cdd
  41253b:	mov    edi,0x9a38ee1a
  412540:	pop    eax
  412541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412542:	(bad)  
  412543:	retf   
  412544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412545:	std    
  412546:	sbb    BYTE PTR [ecx],ch
  412548:	jmp    0x412519
  41254a:	pop    eax
  41254b:	xchg   esi,eax
  41254c:	je     0x41258c
  41254e:	adc    DWORD PTR [edx-0x56],ebx
  412551:	jmp    0x63ab574a
  412556:	sub    DWORD PTR [ebp-0x601bad48],edi
  41255c:	xrelease xchg BYTE PTR [esi],ch
  41255f:	and    al,BYTE PTR [eax-0x2d1d1837]
  412565:	add    bh,dl
  412567:	jmp    0x4125cc
  412569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256a:	dec    ebp
  41256b:	ret    
  41256c:	sbb    DWORD PTR [ecx-0x4517a1],edi
  412572:	sub    cl,dh
  412574:	xor    al,0x7
  412576:	mov    cl,0x8a
  412578:	jbe    0x4125ac
  41257a:	dec    edi
  41257b:	xchg   ebp,eax
  41257c:	sbb    eax,0xe3b04313
  412581:	sbb    eax,0xc6fe0266
  412586:	add    dh,BYTE PTR [ebx]
  412588:	and    edi,edi
  41258a:	cwde   
  41258b:	inc    esp
  41258c:	xchg   esp,eax
  41258d:	aas    
  41258e:	call   0xc32d:0xeb2a4f9c
  412595:	jne    0x412576
  412597:	cmp    ecx,DWORD PTR [ecx-0x66]
  41259a:	aam    0xdc
  41259c:	(bad)  
  41259d:	fadd   QWORD PTR [ebp+0x2276af16]
  4125a3:	xor    ebp,DWORD PTR [eax+0x75]
  4125a6:	test   DWORD PTR [eax+0x1c],0x33c54658
  4125ad:	add    esi,eax
  4125af:	in     al,dx
  4125b0:	loope  0x41262d
  4125b2:	or     eax,0x7481277c
  4125b7:	ss jne 0x4125c6
  4125ba:	xchg   DWORD PTR [ebx+eiz*1-0x5770b75c],edx
  4125c1:	jae    0x412627
  4125c3:	pop    esp
  4125c4:	xchg   esp,eax
  4125c5:	ins    BYTE PTR es:[edi],dx
  4125c6:	lods   al,BYTE PTR ds:[esi]
  4125c7:	cld    
  4125c8:	mov    ah,0x37
  4125ca:	mov    ds:0x76611ccd,al
  4125cf:	pop    esp
  4125d0:	jmp    0x98e9:0x42e156eb
  4125d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d8:	iret   
  4125d9:	xchg   esp,eax
  4125da:	dec    ebp
  4125db:	shl    bl,cl
  4125dd:	and    BYTE PTR [eax+ebx*2],0x95
  4125e1:	aas    
  4125e2:	cmp    eax,DWORD PTR [ecx+0x1675be4f]
  4125e8:	jg     0x41260a
  4125ea:	push   eax
  4125eb:	bound  edx,QWORD PTR [eax+0x5f]
  4125ee:	pop    ebp
  4125ef:	ror    BYTE PTR ds:0xd1a5e79,0xff
  4125f6:	hlt    
  4125f7:	push   edi
  4125f8:	sbb    ebp,eax
  4125fa:	xor    eax,0xd69fd32c
  4125ff:	xchg   BYTE PTR [ebp+0x1c],cl
  412602:	push   0x19
  412604:	xchg   esi,eax
  412605:	xor    bh,BYTE PTR [eax-0x5d]
  412608:	pop    ecx
  412609:	push   ebx
  41260a:	dec    esi
  41260b:	in     al,0x83
  41260d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260e:	ss lock ja 0x412675
  412612:	or     eax,0xe7c11788
  412617:	ffree  st(0)
  412619:	mov    BYTE PTR [edx+0x10],ch
  41261c:	mov    ebp,0xc8a37ed5
  412621:	std    
  412622:	dec    eax
  412623:	inc    eax
  412624:	sbb    esp,DWORD PTR [edx-0x2bdbd6b5]
  41262a:	push   ebx
  41262b:	call   0x7aec:0x68ab0999
  412632:	inc    edx
  412633:	call   0xe90a889c
  412638:	pop    edx
  412639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41263a:	dec    cx
  41263c:	jnp    0x412637
  41263e:	jmp    0xc87a:0xe609b865
  412645:	sbb    DWORD PTR [ecx+0x3b],ebx
  412648:	dec    edx
  412649:	and    eax,0x7cfe1635
  41264e:	xchg   edx,eax
  41264f:	imul   ebx,ebp,0xfffffff7
  412652:	scas   eax,DWORD PTR es:[edi]
  412653:	sbb    DWORD PTR [edi],0x92ed5bcb
  412659:	mov    al,0xff
  41265b:	xchg   edi,eax
  41265c:	mov    edi,fs
  41265e:	mov    ds:0x6d09c87f,al
  412663:	or     BYTE PTR [edx+0x5d],bh
  412666:	iret   
  412667:	repnz mov eax,ds:0x325db32c
  41266d:	xor    DWORD PTR fs:[esi-0x71],esi
  412671:	push   esp
  412672:	shl    DWORD PTR [edx+0x760af6f3],1
  412678:	in     eax,0x35
  41267a:	inc    ebx
  41267b:	pop    eax
  41267c:	add    eax,0xe07bb9ad
  412681:	xlat   BYTE PTR ds:[ebx]
  412682:	push   esi
  412683:	pop    ecx
  412684:	mov    ds:0x1cbe7772,al
  412689:	popa   
  41268a:	push   edi
  41268b:	rcl    DWORD PTR [esi+0x57],cl
  41268e:	xor    DWORD PTR ds:0x428545,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428341
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428539
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428555
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284bd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42854d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428559,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428409
  4126e3:	mov    DWORD PTR ds:0x428359,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284bd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428551
  412718:	and    edx,DWORD PTR ds:0x4284f1
  41271e:	mov    DWORD PTR ds:0x428551,edx
  412724:	and    edi,DWORD PTR ds:0x428341
  41272a:	adc    DWORD PTR ds:0x428329,edi
  412730:	add    DWORD PTR ds:0x428561,edi
  412736:	mov    DWORD PTR ds:0x428459,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428439,0x0
  41274a:	mov    DWORD PTR ds:0x428321,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42844d,0x50a2
  412760:	mov    DWORD PTR ds:0x428421,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428559,0x3c96
  412775:	cmp    DWORD PTR ds:0x428439,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282a5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428421,edi
  412796:	neg    DWORD PTR ds:0x428335
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42835d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428439,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428325,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42834d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428439,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42845d
  4127dc:	mov    edi,DWORD PTR ds:0x42834d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428439,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428359
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428415
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284d9
  412817:	or     ebx,DWORD PTR ds:0x428431
  41281d:	mov    DWORD PTR ds:0x4284d9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428429,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284e9,0x0
  412846:	mov    DWORD PTR ds:0x428411,0x17f6
  412850:	mov    DWORD PTR ds:0x428415,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284cd
  412862:	cmp    DWORD PTR ds:0x4284e9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42840d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283b5
  412886:	mov    edi,DWORD PTR ds:0x428515
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284b5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428545
  4128a3:	sbb    ebx,DWORD PTR ds:0x428555
  4128a9:	cmp    DWORD PTR ds:0x428459,0x0
  4128b0:	mov    DWORD PTR ds:0x4284e5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42855d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428435
  4128cb:	mov    DWORD PTR ds:0x428351,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428459,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284a1
  4128f8:	mov    edi,DWORD PTR ds:0x4285ad
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428539,ebx
  412909:	add    DWORD PTR ds:0x42854d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284e9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428549
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428551,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428401
  41292e:	mov    edi,DWORD PTR ds:0x428441
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284dd,0x3a54
  412943:	mov    DWORD PTR ds:0x428335,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428551,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284d5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428335,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428381
  412997:	mov    edi,DWORD PTR ds:0x42857d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428459,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422578
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x422798
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42848d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284cd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284c5
  4129ed:	sbb    DWORD PTR ds:0x428351,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42832d
  4129fc:	adc    DWORD PTR ds:0x428365,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428325,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x519090d1
  412a21:	jl     0x4129b5
  412a23:	pop    esp
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	shl    BYTE PTR [esi],1
  412a2d:	mov    bl,0xda
  412a2f:	dec    eax
  412a30:	pop    edx
  412a31:	daa    
  412a32:	ss out dx,al
  412a34:	repnz lods al,BYTE PTR ds:[esi]
  412a36:	mov    ch,0x4a
  412a38:	mov    esi,0xc84c6405
  412a3d:	adc    ch,bh
  412a3f:	icebp  
  412a40:	mov    esi,0x665df708
  412a45:	retf   0xae27
  412a48:	pop    ss
  412a49:	retf   0x98cf
  412a4c:	loopne 0x412a77
  412a4e:	pop    es
  412a4f:	dec    ebp
  412a50:	adc    BYTE PTR [eax-0x33],0xf5
  412a54:	stos   BYTE PTR es:[edi],al
  412a55:	push   cs
  412a56:	mov    cl,0x77
  412a58:	(bad)  
  412a59:	mov    al,BYTE PTR [edx+0x61]
  412a5c:	jle    0x412a7d
  412a5e:	fsubr  QWORD PTR [ebx+0x30]
  412a61:	sbb    bh,BYTE PTR [edi-0x20]
  412a64:	mov    eax,0x5e6d9a29
  412a69:	pop    ebx
  412a6a:	dec    esi
  412a6b:	mov    edi,0x14a052df
  412a70:	(bad)  
  412a71:	call   0x625986ba
  412a76:	sub    esi,edx
  412a78:	call   0xb251022e
  412a7d:	xchg   ecx,eax
  412a7e:	ins    BYTE PTR es:[edi],dx
  412a7f:	adc    cl,BYTE PTR [edx-0x7f]
  412a82:	sbb    al,0xfb
  412a84:	popa   
  412a85:	out    dx,al
  412a86:	gs dec eax
  412a88:	jmp    0x412a5f
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	mov    BYTE PTR [eax+0x30b317c6],bl
  412a91:	scas   ax,WORD PTR es:[edi]
  412a93:	xor    eax,0xd467bbe9
  412a98:	jecxz  0x412a94
  412a9a:	mov    edi,0x83d3ab49
  412a9f:	jmp    0xe788:0xce4c6ba8
  412aa6:	jmp    0x412a74
  412aa8:	call   0xdd1272f9
  412aad:	loop   0x412a82
  412aaf:	sbb    DWORD PTR [eax-0x31],edx
  412ab2:	and    ah,BYTE PTR [edx-0x4c]
  412ab5:	adc    ch,ch
  412ab7:	js     0x412b09
  412ab9:	jno    0x412a9d
  412abb:	out    0xc9,eax
  412abd:	fisub  DWORD PTR [edi+0x1]
  412ac0:	fcom   DWORD PTR [ebx-0x78]
  412ac3:	mov    ds:0xe2bf9141,eax
  412ac8:	cmp    eax,0x9a783c17
  412acd:	and    DWORD PTR fs:[ecx],edi
  412ad0:	cs jo  0x412a94
  412ad3:	jp     0x412afb
  412ad5:	frstor [edi]
  412ad7:	sub    esp,0x13
  412ada:	(bad)  
  412adb:	sub    edi,esi
  412add:	arpl   WORD PTR [edi+0x5eb62539],bx
  412ae3:	and    BYTE PTR [edx+ebp*1-0x2c6037af],bh
  412aea:	jmp    0xd09d96b5
  412aef:	inc    esp
  412af0:	shl    DWORD PTR [ebp+0x1c],1
  412af3:	shl    esp,cl
  412af5:	sbb    BYTE PTR [eax-0x58c5a186],0x3d
  412afc:	jmp    0x9cf920a5
  412b01:	cli    
  412b02:	shr    BYTE PTR [edi-0x6307a134],cl
  412b08:	fwait
  412b09:	cmp    BYTE PTR [edi-0x2e22f64b],bh
  412b0f:	out    dx,eax
  412b10:	add    al,0x72
  412b12:	scas   al,BYTE PTR es:[edi]
  412b13:	add    BYTE PTR [ebx],0x83
  412b16:	jb     0x412afa
  412b18:	and    al,0x8e
  412b1a:	js     0x412b43
  412b1c:	pop    edi
  412b1d:	leave  
  412b1e:	dec    esp
  412b1f:	push   edx
  412b20:	mov    ebp,0x65566f5e
  412b25:	push   eax
  412b26:	push   ds
  412b27:	rcr    DWORD PTR [eax-0x62],0x42
  412b2b:	shl    BYTE PTR [ebx+eiz*1+0x35c9c8b1],0x99
  412b33:	in     al,0xd7
  412b35:	sub    ecx,DWORD PTR [esi+0x3a]
  412b38:	jge    0x412b11
  412b3a:	leave  
  412b3b:	push   edx
  412b3c:	jmp    0x30b984fb
  412b41:	test   al,0x9f
  412b43:	iret   
  412b44:	cdq    
  412b45:	mov    ch,0x76
  412b47:	mov    esi,0x812c7a31
  412b4c:	sbb    al,0xc2
  412b4e:	lds    ebx,FWORD PTR [edi]
  412b50:	inc    esi
  412b51:	aam    0x42
  412b53:	sahf   
  412b54:	cmp    eax,0xfeb0684b
  412b59:	mov    DWORD PTR [edi],esp
  412b5b:	sbb    dh,cl
  412b5d:	ins    DWORD PTR es:[edi],dx
  412b5e:	sub    DWORD PTR [ebp+ebx*1+0x1c3b0ef1],edx
  412b65:	cmp    edi,edi
  412b67:	adc    DWORD PTR [ebp+eax*1-0x6e],edi
  412b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6c:	dec    ebx
  412b6d:	xchg   ebp,eax
  412b6e:	pop    ecx
  412b6f:	mov    eax,0x663e2376
  412b74:	in     eax,0x4b
  412b76:	mov    eax,0x4e56cf1f
  412b7b:	sub    eax,0x1152c38c
  412b80:	(bad)  
  412b81:	rcl    cl,1
  412b83:	adc    BYTE PTR [ebp+0x7f],al
  412b86:	pop    esi
  412b87:	dec    ebx
  412b88:	fbld   TBYTE PTR [eax-0x42e12f0f]
  412b8e:	and    eax,0xcc530958
  412b93:	sub    eax,esi
  412b95:	jg     0x412bb0
  412b97:	(bad)  
  412b98:	(bad)  
  412b9a:	and    BYTE PTR [edi],al
  412b9c:	les    esp,FWORD PTR [edi+0x4a]
  412b9f:	adc    al,0xfe
  412ba1:	cmp    eax,0x7bef9349
  412ba6:	xlat   BYTE PTR ds:[ebx]
  412ba7:	(bad)  
  412baa:	add    ebx,eax
  412bac:	pushf  
  412bad:	sahf   
  412bae:	jmp    0xb5b92d3d
  412bb3:	dec    edx
  412bb4:	fsubr  DWORD PTR [ebp-0x6a]
  412bb7:	loope  0x412b6b
  412bb9:	repnz xor ecx,DWORD PTR es:[edx]
  412bbd:	jae    0x412b93
  412bbf:	xchg   edx,eax
  412bc0:	or     dl,cl
  412bc2:	fsubp  st(4),st
  412bc4:	sbb    ebx,DWORD PTR [eax]
  412bc6:	es ja  0x412ba9
  412bc9:	xchg   DWORD PTR [ebx+0x198cdabf],esi
  412bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd0:	icebp  
  412bd1:	sbb    eax,0xddf07dff
  412bd6:	scas   eax,DWORD PTR es:[edi]
  412bd7:	mov    ch,0x57
  412bd9:	push   esi
  412bda:	out    dx,al
  412bdb:	jne    0x412bb4
  412bdd:	repz out dx,eax
  412bdf:	xchg   edi,eax
  412be0:	imul   esi,DWORD PTR [esp+ebp*1-0x49],0x28
  412be5:	add    eax,0xde52e0e1
  412bea:	cdq    
  412beb:	cmp    al,0x58
  412bed:	ss retf 
  412bef:	mov    eax,DWORD PTR [ecx+0x45]
  412bf2:	call   0xa641798d
  412bf7:	or     cl,dl
  412bf9:	mov    ch,0xe
  412bfb:	pop    ds
  412bfc:	daa    
  412bfd:	dec    esi
  412bfe:	pop    ss
  412bff:	call   0x12c1d920
  412c04:	repz sahf 
  412c06:	ret    0x3c60
  412c09:	jae    0x412c3f
  412c0b:	sub    al,0xff
  412c0d:	or     edx,eax
  412c0f:	mov    ss,eax
  412c11:	dec    edx
  412c12:	xchg   ebp,eax
  412c13:	xchg   edx,eax
  412c14:	cmp    cl,BYTE PTR [eax]
  412c16:	cs dec ecx
  412c18:	sbb    ebp,DWORD PTR [esi+0x1c]
  412c1b:	and    ebx,0x7b62c25a
  412c21:	jbe    0x412c08
  412c23:	hlt    
  412c24:	test   eax,0x5dc31b11
  412c29:	dec    ebx
  412c2a:	sbb    eax,0x9065b3b1
  412c2f:	lods   eax,DWORD PTR ds:[esi]
  412c30:	scas   al,BYTE PTR es:[edi]
  412c31:	icebp  
  412c32:	pop    edi
  412c33:	stc    
  412c34:	adc    al,0x9b
  412c36:	lea    esi,[edi]
  412c38:	inc    esp
  412c39:	mov    bh,0x78
  412c3b:	ret    0xb55c
  412c3e:	rcr    ebp,1
  412c40:	xchg   ecx,eax
  412c41:	fisubr WORD PTR [ebx]
  412c43:	adc    al,0x30
  412c45:	call   0x9c9a766
  412c4a:	add    BYTE PTR [ebx+0x9],bh
  412c4d:	xor    al,0x38
  412c4f:	jo     0x412c8f
  412c51:	retf   0x3d9b
  412c54:	jg     0x412c36
  412c56:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c58:	add    cl,BYTE PTR [ecx+0x38]
  412c5b:	fsub   DWORD PTR ds:0x7d836f9c
  412c61:	adc    ecx,DWORD PTR [ebp-0x622478c3]
  412c67:	ret    
  412c68:	sbb    al,0x12
  412c6a:	mov    cl,0xb6
  412c6c:	lods   al,BYTE PTR ds:[esi]
  412c6d:	xchg   ebp,eax
  412c6e:	lahf   
  412c6f:	in     al,dx
  412c70:	adc    BYTE PTR [esi-0x2c],0xe2
  412c74:	pop    eax
  412c75:	stos   DWORD PTR es:[edi],eax
  412c76:	mov    WORD PTR [edi],ss
  412c78:	push   edi
  412c79:	out    dx,al
  412c7a:	rcr    edi,cl
  412c7c:	mov    bl,0x5c
  412c7e:	mov    eax,0x5b742630
  412c83:	and    bh,BYTE PTR [eax]
  412c85:	and    eax,0x70b6bc58
  412c8a:	pop    eax
  412c8b:	pop    es
  412c8c:	push   0xd79114dc
  412c91:	repnz and DWORD PTR ss:[eax+edi*2],edx
  412c96:	(bad)  
  412c97:	push   cs
  412c98:	pop    edi
  412c99:	(bad)  
  412c9a:	in     al,0x44
  412c9c:	retf   0xa2d2
  412c9f:	jle    0x412c94
  412ca1:	mov    eax,0xe5468412
  412ca6:	sub    al,0xf8
  412ca8:	f2xm1  
  412caa:	jge    0x412c39
  412cac:	ss xchg esp,eax
  412cae:	mov    WORD PTR [eax],gs
  412cb0:	call   0xb5cb:0x5004efcc
  412cb7:	popa   
  412cb8:	(bad)  
  412cb9:	mov    WORD PTR [eax],ss
  412cbb:	jg     0x412cec
  412cbd:	mov    edx,0x3c6a4829
  412cc2:	fcomp  QWORD PTR [edx]
  412cc4:	cmp    edx,DWORD PTR [edi-0x12]
  412cc7:	adc    BYTE PTR [edx-0x5],bh
  412cca:	les    edx,FWORD PTR [eax-0x7b]
  412ccd:	push   ecx
  412cce:	sbb    DWORD PTR [esi+esi*8+0x19],ebx
  412cd2:	adc    BYTE PTR [ebp+0x2b25047f],bl
  412cd8:	mov    al,ds:0x8ccf1a9
  412cdd:	inc    esi
  412cde:	(bad)  
  412ce0:	pushf  
  412ce1:	or     esi,DWORD PTR [edi]
  412ce3:	pop    es
  412ce4:	mov    edx,0xcb6775a
  412ce9:	clc    
  412cea:	xchg   esi,eax
  412ceb:	shl    dh,1
  412ced:	nop
  412cee:	dec    edi
  412cef:	sar    BYTE PTR [ebx],0xb0
  412cf2:	inc    esi
  412cf3:	aaa    
  412cf4:	cdq    
  412cf5:	ins    BYTE PTR es:[edi],dx
  412cf6:	push   cs
  412cf7:	mov    edi,0x2a804ff0
  412cfc:	(bad)
  412cff:	shl    al,1
  412d01:	and    bh,BYTE PTR [ebp-0x44]
  412d04:	pop    ebx
  412d05:	ins    BYTE PTR es:[edi],dx
  412d06:	sahf   
  412d07:	shl    BYTE PTR [eax+0x28],1
  412d0a:	jb     0x412d38
  412d0c:	dec    esp
  412d0d:	inc    edx
  412d0e:	mov    ebp,0xd1dfb86b
  412d13:	ins    DWORD PTR es:[edi],dx
  412d14:	push   esp
  412d15:	fcom   DWORD PTR [ecx-0x63]
  412d18:	shr    BYTE PTR [esi],cl
  412d1a:	push   ecx
  412d1b:	mov    esp,DWORD PTR [ecx+0x7]
  412d1e:	outs   dx,DWORD PTR ds:[esi]
  412d1f:	jle    0x412cca
  412d21:	push   edx
  412d22:	ins    DWORD PTR es:[edi],dx
  412d23:	pop    esi
  412d24:	(bad)  
  412d25:	sbb    dh,BYTE PTR [edi]
  412d27:	fs mov ch,bh
  412d2a:	aad    0x8d
  412d2c:	fwait
  412d2d:	and    BYTE PTR [ecx-0x3e],bl
  412d30:	sub    bl,bh
  412d32:	ja     0x412d29
  412d34:	out    0xa4,eax
  412d36:	std    
  412d37:	shl    BYTE PTR [ebp-0x68ac2bee],0x33
  412d3e:	in     eax,0xe9
  412d40:	lods   al,BYTE PTR ds:[esi]
  412d41:	in     eax,0x7
  412d43:	add    DWORD PTR [edx+0x57],edi
  412d46:	mov    cl,0xe0
  412d49:	add    ah,BYTE PTR [ebx]
  412d4b:	(bad)  
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428455,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42841d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428455,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42856d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428549,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428401,0x4284d9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428439,0x4284d1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284d1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42854d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284d1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428419
  412e17:	xor    DWORD PTR ds:0x428549,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428569
  412e23:	sub    DWORD PTR ds:0x428565,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428565
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428461
  412e38:	adc    DWORD PTR ds:0x428559,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428351,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428321,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428365,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428421
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428329
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428361,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42856d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x6f30607a],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	aaa    
  412eb3:	ins    DWORD PTR es:[edi],dx
  412eb4:	add    eax,esp
  412eb6:	cs (bad) 
  412eb8:	mov    dl,BYTE PTR [eax-0x2ddfc402]
  412ebe:	test   al,0x24
  412ec0:	push   esp
  412ec1:	lahf   
  412ec2:	cwde   
  412ec3:	ins    BYTE PTR es:[edi],dx
  412ec4:	sub    DWORD PTR [eax+0xd],ebp
  412ec7:	ret    0x5d01
  412eca:	mov    ds:0x298b2a08,eax
  412ecf:	push   es
  412ed0:	std    
  412ed1:	imul   ebx,DWORD PTR [edx],0x4ceb6617
  412ed7:	loope  0x412e83
  412ed9:	inc    ecx
  412eda:	rol    BYTE PTR [edi],1
  412edc:	or     eax,0xe95aec61
  412ee1:	push   ds
  412ee2:	mov    esi,0xa8724ebf
  412ee7:	clc    
  412ee8:	hlt    
  412ee9:	pusha  
  412eea:	test   BYTE PTR [eax+ecx*1],dl
  412eed:	sbb    esp,edi
  412eef:	sub    al,0x3
  412ef1:	cdq    
  412ef2:	arpl   WORD PTR [edi+0x5abc441c],bp
  412ef8:	inc    edi
  412ef9:	dec    eax
  412efa:	ss push ss
  412efc:	sub    esi,esp
  412efe:	jle    0x412ec9
  412f00:	inc    edi
  412f01:	jne    0x412ed2
  412f03:	push   0xffffffed
  412f05:	sbb    dl,BYTE PTR [eax-0x49]
  412f08:	shl    BYTE PTR [edi],0xf5
  412f0b:	dec    esp
  412f0c:	cmc    
  412f0d:	ret    
  412f0e:	add    dh,BYTE PTR [esi+0x11]
  412f11:	sti    
  412f12:	or     BYTE PTR [edi+0x2e],al
  412f15:	test   al,0xea
  412f17:	in     al,dx
  412f18:	inc    edi
  412f19:	mov    DWORD PTR [esi-0x78],edx
  412f1c:	aad    0xc3
  412f1e:	inc    eax
  412f1f:	adc    eax,0x8e66a0a6
  412f24:	test   edi,edi
  412f26:	dec    edx
  412f27:	and    cl,BYTE PTR [edx-0xbeb4490]
  412f2d:	gs test eax,0x419bb294
  412f34:	bnd jno 0x412ecb
  412f37:	sub    al,0x7e
  412f39:	sbb    al,0x69
  412f3b:	out    dx,al
  412f3c:	xor    eax,0x246843c1
  412f41:	das    
  412f42:	push   es
  412f43:	mov    ds:0x6379650a,al
  412f48:	or     DWORD PTR [edi-0x24c28fc5],0x68
  412f4f:	add    DWORD PTR [edx+0x1b],0xe792eae
  412f56:	cmp    eax,0xa83936de
  412f5b:	imul   ecx,DWORD PTR [ebp+edi*1-0x29d5d6dc],0x36
  412f63:	jle    0x412fb6
  412f65:	ror    cl,1
  412f67:	jg     0x412ef3
  412f69:	rol    BYTE PTR [ebp+esi*4-0x7d],1
  412f6d:	xor    DWORD PTR [edx+0x5bf9877e],edi
  412f73:	nop
  412f74:	fld    DWORD PTR [ecx+0x4794fb7c]
  412f7a:	inc    eax
  412f7b:	cmc    
  412f7c:	shl    DWORD PTR [esi-0x5],0xa6
  412f80:	stos   DWORD PTR es:[edi],eax
  412f81:	pusha  
  412f82:	xlat   BYTE PTR ds:[ebx]
  412f83:	ret    0x5027
  412f86:	dec    ecx
  412f87:	dec    eax
  412f88:	je     0x412fef
  412f8a:	pop    esp
  412f8b:	into   
  412f8c:	ret    
  412f8d:	add    bl,bl
  412f8f:	xchg   esp,eax
  412f90:	mov    bh,0xc6
  412f92:	pop    esi
  412f93:	in     al,0x64
  412f95:	mov    dl,0x1f
  412f97:	shl    cl,cl
  412f99:	push   ecx
  412f9a:	jmp    0x412fe2
  412f9c:	ds out 0xda,eax
  412f9f:	jmp    0x2ffa:0x10cedec9
  412fa6:	(bad)  
  412fa7:	fwait
  412fa8:	(bad)  
  412fa9:	mov    eax,0xd6132a93
  412fae:	rcl    BYTE PTR [eax+0x54],1
  412fb1:	jmp    0x412fba
  412fb3:	outs   dx,BYTE PTR ds:[esi]
  412fb4:	push   esi
  412fb5:	aad    0xd7
  412fb7:	cli    
  412fb8:	sub    bh,BYTE PTR [edx]
  412fba:	test   al,0x89
  412fbc:	out    dx,al
  412fbd:	pop    ebp
  412fbe:	fdiv   DWORD PTR [esi]
  412fc0:	adc    ch,BYTE PTR [ecx-0x6a54f3d]
  412fc6:	or     BYTE PTR [ebx+0xd518f5b],bl
  412fcc:	pop    edi
  412fcd:	mov    esi,0xdfecafff
  412fd2:	std    
  412fd3:	loopne 0x412f55
  412fd5:	ins    BYTE PTR es:[edi],dx
  412fd6:	fwait
  412fd7:	mov    ah,0x67
  412fd9:	leave  
  412fda:	sbb    edx,edx
  412fdc:	int3   
  412fdd:	mov    ecx,0x3a89ff34
  412fe2:	jae    0x412fe5
  412fe4:	mov    dl,0x1c
  412fe6:	push   0x12f85c4c
  412feb:	jo     0x413015
  412fed:	pop    edi
  412fee:	add    DWORD PTR [edi-0x30],eax
  412ff1:	xor    BYTE PTR ds:0x8dcc1c70,0xe8
  412ff8:	les    esi,FWORD PTR [eax]
  412ffa:	push   0xb787faa
  412fff:	jnp    0x41304f
  413001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413002:	data16 stc 
  413004:	nop
  413005:	push   esp
  413006:	or     al,ah
  413008:	aad    0x4c
  41300a:	ins    BYTE PTR es:[edi],dx
  41300b:	aas    
  41300c:	push   edi
  41300d:	xchg   ecx,eax
  41300e:	aam    0x27
  413010:	lock les esp,FWORD PTR [ebp-0x53e9a739]
  413017:	and    edi,ebx
  413019:	in     eax,0xaf
  41301b:	addr16 cs xchg esp,eax
  41301e:	or     DWORD PTR [esi+ebp*8+0x4c],esp
  413022:	xchg   BYTE PTR [ecx+0x1c1287e8],ah
  413028:	jle    0x413031
  41302a:	inc    ecx
  41302b:	js     0x412fe4
  41302d:	sub    al,0x85
  41302f:	pop    ebx
  413030:	aas    
  413031:	jge    0x413005
  413033:	nop
  413034:	loopne 0x412ff7
  413036:	xchg   DWORD PTR [eax+edi*1+0x50],esp
  41303a:	xchg   ebx,eax
  41303b:	ror    BYTE PTR [esi+0x31],1
  41303e:	mov    ebp,0x15719c35
  413043:	sub    eax,0x90897ed1
  413048:	xor    ecx,DWORD PTR [ebx]
  41304a:	adc    al,0x85
  41304c:	pusha  
  41304d:	ss test ebx,edi
  413050:	mov    BYTE PTR [eax+0x14e583e4],dl
  413056:	or     eax,edi
  413058:	rcl    DWORD PTR [edi],0x45
  41305b:	push   eax
  41305c:	sbb    DWORD PTR [ecx],edi
  41305e:	aaa    
  41305f:	push   esi
  413060:	test   DWORD PTR [esi+0x6242d02a],edi
  413066:	sbb    al,0xd0
  413068:	scas   eax,DWORD PTR es:[edi]
  413069:	sub    eax,DWORD PTR [edi+0x24404320]
  41306f:	fcom   st(7)
  413071:	inc    ebp
  413072:	cdq    
  413073:	mov    es,WORD PTR [eax-0x15a693b4]
  413079:	adc    BYTE PTR [ebp+eiz*2-0x5c],dh
  41307d:	cld    
  41307e:	mov    edx,0xd1ad832a
  413083:	sub    al,0x4f
  413085:	xor    WORD PTR es:[ecx],bx
  413089:	out    dx,al
  41308a:	outs   dx,DWORD PTR ds:[esi]
  41308b:	jge    0x413011
  41308d:	push   es
  41308e:	aas    
  41308f:	xor    ebx,DWORD PTR [ecx+0x62]
  413092:	(bad)  
  413093:	rcr    BYTE PTR [ebx],0x5a
  413096:	retf   0xb324
  413099:	test   BYTE PTR [ecx],bh
  41309b:	addr16 inc eax
  41309d:	outs   dx,DWORD PTR ds:[esi]
  41309e:	jae    0x41303b
  4130a0:	mov    dl,0x70
  4130a2:	test   BYTE PTR [ebx],bl
  4130a4:	cmp    al,0xa5
  4130a6:	jae    0x413031
  4130a8:	lahf   
  4130a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130aa:	lds    esi,FWORD PTR [edi]
  4130ac:	imul   edx,DWORD PTR [edi-0x23],0x5
  4130b0:	mov    ?,esp
  4130b2:	fwait
  4130b3:	or     esi,DWORD PTR [edx-0x4f]
  4130b6:	(bad)  
  4130b7:	pop    ss
  4130b8:	xchg   ecx,eax
  4130b9:	adc    dh,bh
  4130bb:	in     eax,dx
  4130bc:	push   eax
  4130bd:	and    DWORD PTR [eax+0x63],0x4c551b1e
  4130c4:	push   0xdc3867a1
  4130c9:	sahf   
  4130ca:	cmp    al,0x3e
  4130cc:	sub    al,0xd0
  4130ce:	dec    ebx
  4130cf:	push   ss
  4130d0:	sub    dh,al
  4130d2:	pop    ebp
  4130d3:	iret   
  4130d4:	push   0x2a422b8
  4130d9:	xor    DWORD PTR [ebp-0x1ea12cfb],eax
  4130df:	mov    BYTE PTR [edi],dh
  4130e1:	test   eax,0x703453a2
  4130e6:	imul   edx,edx,0x3665935d
  4130ec:	jns    0x41311a
  4130ee:	pop    esp
  4130ef:	scas   al,BYTE PTR es:[edi]
  4130f0:	xchg   esi,eax
  4130f1:	mov    al,ds:0x5e7fc0be
  4130f6:	mov    bh,0x76
  4130f8:	jne    0x41309e
  4130fa:	(bad)  
  4130fb:	aam    0x84
  4130fd:	lea    ebp,[ebx+0x41671208]
  413103:	push   eax
  413104:	out    0xc1,al
  413106:	in     al,0xfc
  413108:	aam    0xff
  41310a:	loop   0x4130a7
  41310c:	or     DWORD PTR [ebp+0x54],esp
  41310f:	into   
  413110:	mov    ah,0xf1
  413112:	adc    DWORD PTR [eax+0x29414cd4],ebx
  413118:	or     al,0xbe
  41311a:	test   al,0xff
  41311c:	pop    edi
  41311d:	xchg   edx,eax
  41311e:	rcr    DWORD PTR [esi],0xb6
  413121:	pop    edx
  413122:	jge    0x4130bf
  413124:	outs   dx,BYTE PTR ds:[esi]
  413125:	mov    dl,0x92
  413127:	inc    ebx
  413128:	inc    eax
  413129:	sub    al,0xc3
  41312b:	mov    ebx,DWORD PTR [esi+0x2d]
  41312e:	add    DWORD PTR [ebp-0x538f5f9a],ebx
  413134:	(bad)  
  413135:	pushf  
  413136:	sub    bl,dl
  413138:	mov    esp,0x75ba5979
  41313d:	cmp    al,0xfe
  41313f:	mov    bl,0xdd
  413141:	aam    0x65
  413143:	aad    0x61
  413145:	adc    edx,esp
  413147:	jge    0x4131c5
  413149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41314a:	idiv   BYTE PTR [ebx*1+0x8263a48]
  413151:	shr    DWORD PTR [eax+0x5f],0xf8
  413155:	pop    ebp
  413156:	xchg   ebp,eax
  413157:	pop    es
  413158:	sbb    al,0xaf
  41315a:	xchg   edi,eax
  41315b:	shl    DWORD PTR [edx+edx*8-0x323abc74],0x9e
  413163:	inc    ebx
  413164:	push   esi
  413165:	stos   DWORD PTR es:[edi],eax
  413166:	pop    ds
  413167:	add    bl,BYTE PTR [esi]
  413169:	jecxz  0x413123
  41316b:	cwde   
  41316c:	icebp  
  41316d:	xchg   ebx,eax
  41316e:	jb     0x413140
  413170:	jbe    0x4131be
  413172:	repnz or ch,BYTE PTR [edx-0x595b820d]
  413179:	sbb    BYTE PTR [edi-0x79578961],ah
  41317f:	addr16 mov edi,ds
  413182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413183:	test   ecx,edx
  413185:	mov    bh,0x7e
  413187:	sub    cl,BYTE PTR [edi-0x69]
  41318a:	nop
  41318b:	sub    al,0x86
  41318d:	clc    
  41318e:	(bad)  
  41318f:	addr16 sti 
  413191:	imul   ebp,DWORD PTR [ebx-0x80],0x3c8c256a
  413198:	push   cs
  413199:	cdq    
  41319a:	fldenv [eax+ebp*4]
  41319d:	push   0x2a
  41319f:	mov    edx,0xd11625b2
  4131a4:	mov    ebx,0x888eaf90
  4131a9:	add    al,0xd3
  4131ab:	xchg   edx,eax
  4131ac:	aam    0x4a
  4131ae:	fild   WORD PTR [edx]
  4131b0:	call   0xbbb46bfa
  4131b5:	in     eax,0x8a
  4131b7:	enter  0x9b25,0xdd
  4131bb:	add    dh,BYTE PTR [eax-0x24]
  4131be:	fisub  WORD PTR [eax+0x61]
  4131c1:	rcl    BYTE PTR [ebx],0x89
  4131c4:	das    
  4131c5:	mov    ecx,0x3c3be323
  4131ca:	into   
  4131cb:	or     dh,BYTE PTR [esi+ecx*2-0xcc34cd]
  4131d2:	add    edi,DWORD PTR ds:0x428425
  4131d8:	sub    DWORD PTR ds:0x428405,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428355,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	jns    0x4131c5
  413208:	lods   al,BYTE PTR ds:[esi]
  413209:	jecxz  0x4131c7
  41320b:	jle    0x4131cb
  41320d:	mov    esi,0xbebec4ed
  413212:	data16 cli 
  413214:	outs   dx,BYTE PTR ds:[esi]
  413215:	xchg   edx,eax
  413216:	loop   0x413207
  413218:	pusha  
  413219:	stos   BYTE PTR es:[edi],al
  41321a:	imul   ebx,eax,0xc0e203c9
  413220:	mov    edi,0xde10bb84
  413225:	ret    0x603c
  413228:	(bad)  
  41322a:	dec    esp
  41322b:	xchg   esp,ecx
  41322d:	in     al,dx
  41322e:	jg     0x4131bd
  413230:	sub    al,0xf4
  413232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413233:	cmp    ah,bl
  413235:	sbb    al,0x3
  413237:	mov    dh,0xf0
  413239:	sub    ah,BYTE PTR [edx-0x4f580b93]
  41323f:	xor    eax,0x38a5eefe
  413244:	bound  eax,QWORD PTR [ebx]
  413246:	call   0x5fed:0xc1418977
  41324d:	cmp    eax,0x7a781bb2
  413252:	lahf   
  413253:	(bad)  
  413254:	shl    DWORD PTR [edx-0x43],cl
  413257:	int3   
  413258:	xchg   esp,eax
  413259:	xchg   ebp,eax
  41325a:	gs pop ebx
  41325c:	jmp    0x160d:0x9013af50
  413263:	jmp    0x7b60b35a
  413268:	pop    edi
  413269:	pop    esp
  41326a:	xchg   edi,eax
  41326b:	jne    0x4131ee
  41326d:	jns    0x4132c6
  41326f:	xor    esp,DWORD PTR [ebp-0x66]
  413272:	retf   
  413273:	cmp    ah,dh
  413275:	push   ebp
  413276:	fsubr  QWORD PTR [edi]
  413278:	lods   al,BYTE PTR ds:[esi]
  413279:	inc    edi
  41327a:	dec    eax
  41327b:	dec    ecx
  41327c:	outs   dx,DWORD PTR ds:[esi]
  41327d:	inc    esi
  41327e:	add    BYTE PTR [edx+0x7d],cl
  413281:	or     DWORD PTR [esi+0x30],ecx
  413284:	loop   0x413207
  413286:	pushf  
  413287:	out    dx,eax
  413288:	mov    ecx,0x96622a42
  41328d:	cmc    
  41328e:	cmp    DWORD PTR [ebp+0x40],0x1b
  413292:	sub    DWORD PTR [ebx+ebp*4],esp
  413295:	adc    al,al
  413297:	retf   0x8e32
  41329a:	retf   
  41329b:	(bad)  
  41329c:	mov    ds:0x16d32d2f,eax
  4132a1:	add    DWORD PTR [eax],0x81edf70a
  4132a7:	ret    
  4132a8:	jge    0x413267
  4132aa:	jnp    0x4132c7
  4132ac:	xchg   esi,eax
  4132ad:	rcr    DWORD PTR [eax+0x28097013],cl
  4132b3:	cmc    
  4132b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b5:	mov    WORD PTR [ebx-0x56],fs
  4132b8:	sub    eax,0xc1d51b94
  4132bd:	and    al,0x30
  4132bf:	add    eax,0x2a749fcc
  4132c4:	les    esi,FWORD PTR [esi+0x15248b0e]
  4132ca:	mov    esp,0xb7992d8d
  4132cf:	test   BYTE PTR [edx-0x68],ch
  4132d2:	mov    al,0x61
  4132d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d5:	icebp  
  4132d6:	sub    BYTE PTR [edx+0x9],0xda
  4132da:	in     al,0xd2
  4132dc:	fisttp QWORD PTR [edx+0x4e]
  4132df:	test   al,0xb7
  4132e1:	addr16 shl eax,1
  4132e4:	sub    ebp,DWORD PTR [ebp+0x6d788422]
  4132ea:	(bad)  
  4132eb:	int    0x48
  4132ed:	call   0x364f25c6
  4132f2:	imul   ebp,DWORD PTR [ebp-0x2543853d],0xffffffbc
  4132f9:	test   DWORD PTR [esi-0x780a32cf],edx
  4132ff:	pop    ebp
  413300:	cmc    
  413301:	repz xchg ebx,eax
  413303:	aam    0x43
  413305:	in     eax,dx
  413306:	outs   dx,DWORD PTR ds:[esi]
  413307:	(bad)  
  413308:	mov    eax,0xe4614265
  41330d:	and    dh,ch
  41330f:	in     al,0xb2
  413311:	fadd   DWORD PTR [esi]
  413313:	jo     0x413373
  413315:	sbb    BYTE PTR [ebx-0x58],bh
  413318:	call   0x197499e8
  41331d:	jb     0x4132bc
  41331f:	jnp    0x41338b
  413321:	js     0x4132ea
  413323:	add    DWORD PTR [ecx+eiz*8+0x732d22f6],esp
  41332a:	fmul   DWORD PTR [edx-0x58]
  41332d:	inc    ebx
  41332e:	les    edx,FWORD PTR [ebp-0x6c2224a9]
  413334:	(bad)  
  413335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413336:	hlt    
  413337:	aad    0xcb
  413339:	in     al,0xb0
  41333b:	cld    
  41333c:	or     DWORD PTR [esi+ebx*1-0x4451aad3],ebx
  413343:	and    bl,dh
  413345:	aas    
  413346:	test   ecx,esp
  413348:	push   ss
  413349:	and    al,ah
  41334b:	cmp    bl,al
  41334d:	xchg   ecx,eax
  41334e:	xchg   esp,eax
  41334f:	push   esp
  413350:	ret    0xf8da
  413353:	fiadd  WORD PTR [ebp-0x3b576c07]
  413359:	xchg   esi,edx
  41335b:	push   ebp
  41335c:	jno    0x413335
  41335e:	lock sub DWORD PTR [ecx],eax
  413361:	pushf  
  413362:	pop    ecx
  413363:	push   DWORD PTR ds:0x226e0284
  413369:	pop    ds
  41336a:	test   eax,0xbb778de8
  41336f:	mov    ds:0x816700d9,eax
  413374:	nop
  413375:	xor    DWORD PTR [esi-0x6e],ecx
  413378:	hlt    
  413379:	in     al,0xc8
  41337b:	aaa    
  41337c:	adc    al,0x5f
  41337e:	pop    esp
  41337f:	mov    WORD PTR [edx+0x22ae9b49],?
  413385:	mov    bl,BYTE PTR ss:[edi]
  413388:	es imul esp,esi,0xffffffc4
  41338c:	scas   al,BYTE PTR es:[edi]
  41338d:	rcr    ch,0xbc
  413390:	cld    
  413391:	push   ecx
  413392:	addr16 jmp 0x4133bd
  413395:	aas    
  413396:	icebp  
  413397:	or     BYTE PTR [edi],dl
  413399:	aam    0x38
  41339b:	sub    DWORD PTR [eax-0x61],ecx
  41339e:	jmp    0x8b0:0x51f924ad
  4133a5:	aas    
  4133a6:	loopne 0x413361
  4133a8:	(bad)  
  4133a9:	(bad)  
  4133aa:	mov    esi,0x794d3f52
  4133af:	imul   ecx,DWORD PTR [edi+0x6142073c],0xa56924c2
  4133b9:	imul   esp,DWORD PTR [esi],0x47
  4133bc:	nop
  4133bd:	retf   
  4133be:	add    DWORD PTR [edi+0xa],eax
  4133c1:	cmp    al,0x96
  4133c3:	clc    
  4133c4:	stos   DWORD PTR es:[edi],eax
  4133c5:	pop    esi
  4133c6:	dec    esp
  4133c7:	iret   
  4133c8:	xchg   edi,eax
  4133c9:	jmp    0x413392
  4133cb:	jl     0x41342e
  4133cd:	xchg   ebp,eax
  4133ce:	retf   0xe051
  4133d1:	ret    0x8f97
  4133d4:	pop    ebx
  4133d5:	sub    eax,DWORD PTR [eax]
  4133d7:	loopne 0x413374
  4133d9:	sbb    dh,BYTE PTR [eax+0x5549533d]
  4133df:	mov    ds:0x178cf170,eax
  4133e4:	neg    DWORD PTR [esp+edi*1]
  4133e7:	mov    bl,0xb7
  4133e9:	dec    ebp
  4133ea:	ins    BYTE PTR es:[edi],dx
  4133eb:	scas   al,BYTE PTR es:[edi]
  4133ec:	stos   BYTE PTR es:[edi],al
  4133ed:	add    BYTE PTR [eax-0x79614ef6],0x98
  4133f4:	sub    ebx,DWORD PTR [edx]
  4133f6:	xchg   ebp,eax
  4133f7:	pop    edi
  4133f8:	adc    BYTE PTR [esi+0x33d76c6e],cl
  4133fe:	adc    esi,eax
  413400:	pop    ecx
  413401:	pop    ss
  413402:	sbb    bl,dh
  413404:	sbb    cl,bl
  413406:	int    0xde
  413408:	adc    al,BYTE PTR [edi+eiz*2]
  41340b:	xor    al,0x1a
  41340d:	and    DWORD PTR [esi+0x32],ebx
  413410:	cmp    eax,0x4fcd0997
  413415:	hlt    
  413416:	mov    dh,0xa3
  413418:	xchg   ecx,eax
  413419:	xlat   BYTE PTR ds:[ebx]
  41341a:	daa    
  41341b:	(bad)  
  41341d:	xor    esi,DWORD PTR [esi-0x20]
  413420:	pop    ebp
  413421:	adc    bh,BYTE PTR [edx]
  413423:	outs   dx,BYTE PTR ds:[esi]
  413424:	xchg   edx,eax
  413425:	(bad)  
  413426:	or     DWORD PTR [ecx],0x2fe76710
  41342c:	repz cmp edi,edi
  41342f:	and    eax,0xb00c8069
  413434:	inc    edi
  413435:	cli    
  413436:	aam    0x47
  413438:	cli    
  413439:	jo     0x41349d
  41343b:	int3   
  41343c:	ins    BYTE PTR es:[edi],dx
  41343d:	rcr    ebp,1
  41343f:	adc    edi,DWORD PTR [ecx-0x64633657]
  413445:	cmp    bh,bl
  413447:	leave  
  413448:	sbb    BYTE PTR [ebp+0x1dba0b34],dh
  41344e:	test   eax,0x4f569648
  413453:	mov    dl,0x60
  413455:	dec    esp
  413456:	jo     0x413433
  413458:	and    eax,eax
  41345a:	push   cs
  41345b:	adc    BYTE PTR [ecx-0x48],bl
  41345e:	pop    ds
  41345f:	test   eax,0x66999f2f
  413464:	(bad)  
  413466:	ficomp WORD PTR [eax-0x6f6e3909]
  41346c:	jmp    0xe442:0x3d21f20
  413473:	imul   edi,eax,0xa9d4bc51
  413479:	pop    ecx
  41347a:	popa   
  41347b:	stos   BYTE PTR es:[edi],al
  41347c:	push   eax
  41347d:	dec    ebp
  41347e:	repz pop edx
  413480:	ret    
  413481:	fimul  WORD PTR [esi-0x5dd2e467]
  413487:	pop    DWORD PTR [edx+eiz*1+0x58]
  41348b:	adc    ah,BYTE PTR [ecx-0x5f]
  41348e:	cmp    eax,esi
  413490:	pop    edx
  413491:	popf   
  413492:	pop    es
  413493:	or     DWORD PTR [eax-0x582c6423],ecx
  413499:	inc    esi
  41349a:	push   0x52
  41349c:	call   0x4771bafd
  4134a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a2:	jo     0x413510
  4134a4:	outs   dx,BYTE PTR ds:[esi]
  4134a5:	push   0x97434b2a
  4134aa:	mov    ebx,0xc5dd144b
  4134af:	jl     0x413469
  4134b1:	ficom  WORD PTR [esi]
  4134b3:	data16 cld 
  4134b5:	in     eax,dx
  4134b6:	jmp    0xc942:0xf5af21cb
  4134bd:	in     al,0xaf
  4134bf:	outs   dx,BYTE PTR ds:[esi]
  4134c0:	in     eax,0x4
  4134c2:	push   esi
  4134c3:	pop    ds
  4134c4:	hlt    
  4134c5:	into   
  4134c6:	pop    ebp
  4134c7:	mov    esi,0xa90ffd
  4134cc:	adc    DWORD PTR [esi+0x23],edx
  4134cf:	fnsave [esi]
  4134d1:	das    
  4134d2:	mov    dl,0xa2
  4134d4:	pop    ebx
  4134d5:	rol    DWORD PTR [esi-0x1],1
  4134d8:	pop    es
  4134d9:	pushf  
  4134da:	bound  ebx,QWORD PTR [edi-0x3c33c405]
  4134e0:	add    al,BYTE PTR [ecx+esi*1-0x5a]
  4134e4:	adc    BYTE PTR [edi+0x51],0xa6
  4134e8:	mov    esi,DWORD PTR [eax+0x76f9396e]
  4134ee:	popa   
  4134ef:	inc    edi
  4134f0:	jle    0x4134c5
  4134f2:	jmp    DWORD PTR [ebx+0x14cd09e8]
  4134f8:	push   eax
  4134f9:	outs   dx,BYTE PTR ds:[esi]
  4134fa:	xchg   ebp,eax
  4134fb:	jmp    0x41355f
  4134fd:	lods   al,BYTE PTR ds:[esi]
  4134fe:	xor    DWORD PTR [ebx+0x5da30f28],0x6b1f85f7
  413508:	add    BYTE PTR [ebp+0x59],cl
  41350b:	or     BYTE PTR ds:0xcc3d90dc,dh
  413511:	push   eax
  413512:	xorps  xmm4,XMMWORD PTR [esi-0x68e22e89]
  413519:	sbb    ebp,0x403f4d46
  41351f:	inc    edi
  413520:	fcom   DWORD PTR [edx]
  413522:	aad    0xe
  413524:	xchg   edi,eax
  413525:	mov    ecx,DWORD PTR [ebx+edx*8]
  413528:	and    bh,BYTE PTR [edi+esi*1+0xb530178]
  41352f:	rol    DWORD PTR [ebx+0x4283213d],0x0
  413536:	add    bh,al
  413538:	add    eax,0x428431
  41353d:	or     DWORD PTR [ebx+0x0],ebx
  413540:	add    BYTE PTR [edi],cl
  413542:	mov    bh,0xd
  413544:	dec    ecx
  413545:	add    DWORD PTR [edx+0x0],0xffffffe9
  413549:	fld    DWORD PTR [eax]
  41354b:	add    BYTE PTR [eax],al
  41354d:	mov    DWORD PTR ds:0x42835d,0x463b
  413557:	cmp    DWORD PTR ds:0x428321,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428285
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284e9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428539
  413594:	mov    ecx,DWORD PTR ds:0x4284c9
  41359a:	xor    DWORD PTR ds:0x428555,ecx
  4135a0:	add    DWORD PTR ds:0x4284b5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284c1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284ed,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42833d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284c1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42833d
  4135df:	cmp    DWORD PTR ds:0x4284ed,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42841d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428331
  413607:	and    DWORD PTR ds:0x42853d,ecx
  41360d:	and    DWORD PTR ds:0x428345,edx
  413613:	mov    ecx,DWORD PTR ds:0x428411
  413619:	xor    ecx,DWORD PTR ds:0x428441
  41361f:	mov    DWORD PTR ds:0x428411,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428439,0x0
  413630:	mov    DWORD PTR ds:0x428415,0x7db5
  41363a:	mov    DWORD PTR ds:0x42844d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428325
  41364b:	mov    eax,ds:0x42842d
  413650:	cmp    DWORD PTR ds:0x428439,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42841d
  413695:	and    DWORD PTR ds:0x428539,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284b5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428465
  4136ad:	add    DWORD PTR ds:0x42840d,ecx
  4136b3:	and    DWORD PTR ds:0x42835d,0x5196
  4136bd:	mov    eax,ds:0x4226f8
  4136c2:	adc    DWORD PTR ds:0x428415,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284c1,0x0
  4136d6:	mov    DWORD PTR ds:0x428335,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428431
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284cd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428571,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284c1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284c1
  413711:	push   0x4283f5
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x42839d
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42835d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284dd,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284e5,ecx
  413743:	adc    DWORD PTR ds:0x428461,0x1149
  41374d:	or     DWORD PTR ds:0x4284e1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428445,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42840d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284e1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284d1,0x86c
  413785:	cmp    DWORD PTR ds:0x428445,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428355,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284e1
  4137ad:	mov    ecx,DWORD PTR ds:0x428555
  4137b3:	xor    ecx,DWORD PTR ds:0x428421
  4137b9:	mov    DWORD PTR ds:0x428555,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428355
  4137c7:	sub    ecx,DWORD PTR ds:0x4284c1
  4137cd:	mov    DWORD PTR ds:0x428355,ecx
  4137d3:	cmp    DWORD PTR ds:0x42843d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x4283fd,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428571,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42843d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x4281ff
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428359,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42856d
  41381e:	and    DWORD PTR ds:0x42842d,edi
  413824:	inc    DWORD PTR ds:0x428441
  41382a:	add    DWORD PTR ds:0x428349,0x3293
  413834:	or     DWORD PTR ds:0x428415,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284cd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42854d,0x428349
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428361,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284e1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428339
  41386f:	mov    ecx,DWORD PTR ds:0x428455
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428361,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284d5
  413896:	push   0x4282cf
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428451,0x428415
  4138ab:	mov    DWORD PTR ds:0x428411,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42844d
  4138bb:	or     ecx,DWORD PTR ds:0x4283fd
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x3ae3e744
  413973:	and    al,0x20
  413975:	sahf   
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0x8b3e5f67
  413982:	pusha  
  413983:	cld    
  413984:	gs xchg ecx,eax
  413986:	out    dx,eax
  413987:	xchg   edi,eax
  413988:	or     edx,eax
  41398a:	jg     0x41395b
  41398c:	dec    ebp
  41398d:	cwde   
  41398e:	push   eax
  41398f:	int3   
  413990:	mov    al,0xbb
  413992:	(bad)  
  413993:	outs   dx,BYTE PTR ds:[esi]
  413994:	xor    esp,esp
  413996:	in     al,dx
  413997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413998:	push   0x7f
  41399a:	xor    cl,BYTE PTR [ebx+0x2]
  41399d:	loop   0x41396a
  41399f:	mov    esi,DWORD PTR [eiz*4-0x1dc95684]
  4139a6:	repz and eax,0x5c60a144
  4139ac:	adc    BYTE PTR [ebx],ah
  4139ae:	mov    ch,0x3f
  4139b0:	push   eax
  4139b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b2:	sub    al,0xf6
  4139b4:	and    eax,0x7b67f80f
  4139b9:	xchg   edx,eax
  4139ba:	loop   0x413a1c
  4139bc:	xchg   esp,eax
  4139bd:	(bad)  
  4139be:	in     eax,0x27
  4139c0:	aaa    
  4139c1:	(bad)  
  4139c2:	dec    BYTE PTR [eax-0x68]
  4139c5:	icebp  
  4139c6:	daa    
  4139c7:	icebp  
  4139c8:	dec    esp
  4139c9:	test   cl,ah
  4139cb:	call   0x31b2957a
  4139d0:	push   0x3e7a1f76
  4139d5:	add    ebp,DWORD PTR [edx-0x6eaa454a]
  4139db:	sbb    ebx,DWORD PTR [esi]
  4139dd:	scas   eax,DWORD PTR es:[edi]
  4139de:	mov    bh,0x6f
  4139e0:	jecxz  0x413985
  4139e2:	sub    DWORD PTR [ebx+0x4a],ebp
  4139e5:	sbb    DWORD PTR [edi-0x38b0e684],esi
  4139eb:	retf   0x97c4
  4139ee:	stos   DWORD PTR es:[edi],eax
  4139ef:	fistp  DWORD PTR [ecx]
  4139f1:	push   esi
  4139f2:	loop   0x4139eb
  4139f4:	in     al,0x8e
  4139f6:	jle    0x4139d0
  4139f8:	aam    0x9c
  4139fa:	mov    dl,bh
  4139fc:	in     al,0x83
  4139fe:	aad    0x21
  413a00:	jns    0x413999
  413a02:	cmp    eax,0xa6cb79c0
  413a07:	mov    DWORD PTR [ecx],eax
  413a09:	ss dec esi
  413a0b:	add    eax,0xe8ce7f6b
  413a10:	clc    
  413a11:	ret    
  413a12:	lahf   
  413a13:	pop    eax
  413a14:	lea    ebx,[ebx-0x5d]
  413a17:	imul   ebp,esp,0xb878c718
  413a1d:	inc    esp
  413a1e:	mov    edi,0x5cc0c76d
  413a23:	lea    edx,[esi+0x25]
  413a26:	ret    0x3f3b
  413a29:	neg    ecx
  413a2b:	mov    cl,0xca
  413a2d:	les    ecx,FWORD PTR [edi]
  413a2f:	mov    eax,ds:0x9b678390
  413a34:	in     al,0x1a
  413a36:	loopne 0x4139d2
  413a38:	pop    edx
  413a39:	mov    ebx,?
  413a3b:	fcomp  DWORD PTR [edx-0x11]
  413a3e:	push   ds
  413a3f:	push   ecx
  413a40:	pop    esi
  413a41:	fcmovb st,st(0)
  413a43:	arpl   WORD PTR [ecx+0x24],cx
  413a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a47:	aam    0x82
  413a49:	arpl   sp,bp
  413a4b:	iret   
  413a4c:	jb     0x413aa8
  413a4e:	pop    ds
  413a4f:	bswap  ecx
  413a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a52:	push   cs
  413a53:	jnp    0x413a96
  413a55:	stos   BYTE PTR es:[edi],al
  413a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a57:	lahf   
  413a58:	sbb    BYTE PTR [eax+ecx*4+0x2f646207],bh
  413a5f:	dec    ecx
  413a60:	in     eax,dx
  413a61:	inc    ecx
  413a62:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413a64:	cmp    DWORD PTR [ebp+0x37],0x16
  413a68:	daa    
  413a69:	sub    bh,BYTE PTR [ecx-0x403a2ab1]
  413a6f:	mov    dl,0xec
  413a71:	mov    BYTE PTR [esi-0xc],ch
  413a74:	addr16 sahf 
  413a76:	mov    ah,0xb2
  413a78:	std    
  413a79:	or     bl,0x2
  413a7c:	rcr    DWORD PTR ds:0x8eb4be45,cl
  413a82:	iret   
  413a83:	mov    ch,0xcd
  413a85:	xlat   BYTE PTR ds:[ebx]
  413a86:	ret    0xe0b1
  413a89:	pop    edi
  413a8a:	hlt    
  413a8b:	mov    esi,0x94f2261
  413a90:	std    
  413a91:	inc    ecx
  413a92:	call   0xd68f:0xccb1003
  413a99:	mov    ds:0x8f285c87,al
  413a9e:	aam    0xe9
  413aa0:	sub    al,0xc6
  413aa2:	scas   al,BYTE PTR es:[edi]
  413aa3:	fnstsw WORD PTR [edx+0x44896434]
  413aa9:	jmp    0x2aaa:0x559664a0
  413ab0:	jmp    0x413a47
  413ab2:	mov    ebp,0x6376eee9
  413ab7:	push   0xfffffff7
  413ab9:	ror    DWORD PTR [edi+0x2d],0x56
  413abd:	clc    
  413abe:	inc    ecx
  413abf:	ret    
  413ac0:	daa    
  413ac1:	stc    
  413ac2:	clc    
  413ac3:	lea    ebp,[esi+0x2c]
  413ac6:	int3   
  413ac7:	xchg   esp,eax
  413ac8:	popa   
  413ac9:	adc    eax,eax
  413acb:	out    0x6b,al
  413acd:	test   dh,dh
  413acf:	sub    al,BYTE PTR [esi+eax*8]
  413ad2:	test   eax,0x5baeca64
  413ad7:	xchg   edx,eax
  413ad8:	pop    ebx
  413ada:	daa    
  413adb:	test   DWORD PTR [edx+0x74],ebp
  413ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413adf:	adc    al,0x1
  413ae1:	dec    ecx
  413ae2:	test   eax,0x8132adcc
  413ae7:	jbe    0x413b60
  413ae9:	std    
  413aea:	xchg   DWORD PTR ds:0xfdeabada,ecx
  413af0:	bound  edi,QWORD PTR [ebp+edi*2+0x6b]
  413af4:	and    edx,DWORD PTR ds:0xc707dcf0
  413afa:	cmp    BYTE PTR [ebx],dl
  413afc:	in     eax,dx
  413afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413afe:	call   0x716d:0xfcdbf760
  413b05:	test   al,0x88
  413b07:	loop   0x413b86
  413b09:	ds mov eax,0xf53769df
  413b0f:	out    dx,eax
  413b10:	mov    eax,0xa7906a29
  413b15:	fsub   st,st(3)
  413b17:	xchg   esp,eax
  413b18:	or     esp,DWORD PTR [ebx+0x49]
  413b1b:	pop    es
  413b1c:	adc    ebx,edx
  413b1e:	sbb    al,cl
  413b20:	mov    eax,0x9bdcc301
  413b25:	cs mov ah,0xf5
  413b28:	xor    BYTE PTR [ebx],ah
  413b2a:	sub    BYTE PTR [esp+ebp*8],ch
  413b2d:	xchg   ecx,eax
  413b2e:	pop    ecx
  413b2f:	xchg   esi,eax
  413b30:	cs ja  0x413ac3
  413b33:	sub    BYTE PTR es:[esi],bl
  413b36:	jle    0x413ad2
  413b38:	iret   
  413b39:	js     0x413b7e
  413b3b:	push   edi
  413b3c:	mov    BYTE PTR [esi],bl
  413b3e:	fnsave [eax-0x73ef6fcb]
  413b44:	cwde   
  413b45:	aam    0x33
  413b47:	sbb    al,ch
  413b49:	inc    ebx
  413b4a:	out    dx,al
  413b4b:	jle    0x413b3a
  413b4d:	push   eax
  413b4e:	dec    esi
  413b4f:	or     al,0xcf
  413b51:	and    eax,0x896dd14d
  413b56:	in     al,dx
  413b57:	jecxz  0x413b5d
  413b59:	outs   dx,DWORD PTR ds:[esi]
  413b5a:	xchg   dl,dl
  413b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b5d:	aad    0x44
  413b5f:	sub    ebp,DWORD PTR [edx-0x1f]
  413b62:	outs   dx,BYTE PTR ds:[esi]
  413b63:	rcl    BYTE PTR [esi],cl
  413b65:	mov    ch,0xcc
  413b67:	and    ebp,0xe
  413b6a:	dec    eax
  413b6b:	sbb    BYTE PTR [edi-0x43],0xcf
  413b6f:	inc    ebp
  413b70:	stos   DWORD PTR es:[edi],eax
  413b71:	(bad)  
  413b72:	mov    dl,0x30
  413b74:	mov    ch,0xd
  413b76:	aad    0x3f
  413b78:	retf   
  413b79:	fs push ebp
  413b7b:	cmp    eax,0x327cf5c2
  413b80:	fdiv   DWORD PTR [eax]
  413b82:	movaps xmm5,XMMWORD PTR [ecx]
  413b85:	adc    DWORD PTR [esi-0x5b260164],esp
  413b8b:	pop    es
  413b8c:	enter  0xfbd4,0xb5
  413b90:	inc    esp
  413b91:	std    
  413b92:	jbe    0x413b9e
  413b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b95:	(bad)  
  413b96:	and    BYTE PTR [edi-0x706f548e],0xad
  413b9d:	mov    dl,BYTE PTR [edx]
  413b9f:	imul   ebx,DWORD PTR [edx+esi*8],0xffffffa5
  413ba3:	push   ss
  413ba4:	adc    BYTE PTR [edx+0x1f],0xe
  413ba8:	mov    bl,0xe
  413baa:	scas   al,BYTE PTR es:[edi]
  413bab:	adc    ebx,DWORD PTR [edx+0x44]
  413bae:	pushf  
  413baf:	out    0x2a,eax
  413bb1:	xlat   BYTE PTR ds:[ebx]
  413bb2:	mov    DWORD PTR [ebx],esp
  413bb4:	dec    ebp
  413bb5:	in     eax,dx
  413bb6:	sbb    bh,0xe6
  413bb9:	xchg   ecx,eax
  413bba:	add    al,cl
  413bbc:	js     0x413c31
  413bbe:	fild   QWORD PTR [edi]
  413bc0:	fisubr WORD PTR [eax+0x3d12ddc8]
  413bc6:	add    ebp,DWORD PTR [ebp-0x1e10c36a]
  413bcc:	push   edi
  413bcd:	or     dh,BYTE PTR [ecx]
  413bcf:	sbb    dl,BYTE PTR [esi]
  413bd1:	adc    eax,0x856b667
  413bd6:	sub    dl,0x14
  413bd9:	dec    ecx
  413bda:	pop    esi
  413bdb:	jmp    0xcabaf24e
  413be0:	sbb    BYTE PTR [ebp+0x71],bl
  413be3:	loope  0x413bce
  413be5:	xor    DWORD PTR [edx+0x53595611],esp
  413beb:	imul   ecx,DWORD PTR [edx-0x60962c04],0x16
  413bf2:	jle    0x413c6b
  413bf4:	push   edx
  413bf5:	rcl    DWORD PTR [esi+0x56b6348e],0x67
  413bfc:	fnstcw WORD PTR ds:0xf32ace50
  413c02:	xor    DWORD PTR [ebp+0x452d2494],0x20
  413c09:	sbb    bh,BYTE PTR [ebx-0x64]
  413c0c:	es dec edx
  413c0e:	popa   
  413c0f:	xchg   al,dh
  413c11:	and    ah,BYTE PTR [ebx-0x53a03544]
  413c17:	jnp    0x413bbf
  413c19:	push   cs
  413c1a:	stc    
  413c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1c:	push   edx
  413c1d:	mov    ebp,0x28732a17
  413c22:	xchg   esp,eax
  413c23:	icebp  
  413c24:	sahf   
  413c25:	std    
  413c26:	sbb    ebp,eax
  413c28:	je     0x413c7b
  413c2a:	jnp    0x413c0c
  413c2c:	icebp  
  413c2d:	xchg   BYTE PTR [esi-0x5a],bh
  413c30:	xchg   BYTE PTR [esi-0x2e3e2c0b],dl
  413c36:	adc    eax,esi
  413c38:	sti    
  413c39:	cwde   
  413c3a:	daa    
  413c3b:	jns    0x413c3a
  413c3d:	test   eax,0xe3e0087b
  413c42:	jg     0x413c01
  413c44:	ret    
  413c45:	rol    DWORD PTR [ebx],1
  413c47:	in     al,0xb2
  413c49:	push   es
  413c4a:	or     ah,BYTE PTR [eax]
  413c4c:	sbb    BYTE PTR [esi-0x46],0x99
  413c50:	or     ebx,esi
  413c52:	jle    0x413be5
  413c54:	mov    ch,0xf1
  413c56:	jge    0x413cbb
  413c58:	push   0xfffffffa
  413c5a:	stos   DWORD PTR es:[edi],eax
  413c5b:	pop    ebx
  413c5c:	cmp    eax,0x7c5e0d59
  413c61:	pop    ds
  413c62:	and    DWORD PTR [edx-0x3b],ebp
  413c65:	xor    eax,0x54dc69f2
  413c6a:	cwde   
  413c6b:	test   al,0x13
  413c6d:	cmp    ch,cl
  413c6f:	fsub   DWORD PTR [eax]
  413c71:	inc    eax
  413c72:	sub    eax,0x1b5ce600
  413c77:	psrad  mm0,QWORD PTR [edx+esi*1]
  413c7b:	fmul   QWORD PTR [ecx-0x471ec46f]
  413c81:	and    dh,cl
  413c83:	jns    0x413cb8
  413c85:	call   0xa5de:0xd9bf636
  413c8c:	(bad)
  413c8f:	icebp  
  413c90:	fimul  WORD PTR [edx]
  413c92:	and    DWORD PTR [edx+0x10f8662e],ecx
  413c98:	pop    eax
  413c99:	int    0x8b
  413c9b:	inc    ebp
  413c9c:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xc9f0dd72
  413d53:	scas   al,BYTE PTR es:[edi]
  413d54:	iret   
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xc186c74e
  413d61:	mov    ds:0xd886eedf,al
  413d66:	push   edi
  413d68:	pop    esp
  413d69:	loope  0x413d99
  413d6b:	mov    ds:0xa4d76b44,eax
  413d70:	idiv   DWORD PTR [ebx+ebx*2+0x6e6007a9]
  413d77:	cmc    
  413d78:	nop
  413d79:	add    ebp,DWORD PTR [edi+0x386fe93d]
  413d7f:	clc    
  413d80:	sub    al,0x6a
  413d82:	iret   
  413d83:	or     al,BYTE PTR [ebp-0x4a]
  413d86:	shl    DWORD PTR [ebx-0x52f63e6d],cl
  413d8c:	je     0x413d5b
  413d8e:	and    ebp,0x614a8c25
  413d94:	in     al,0xe9
  413d96:	push   es
  413d97:	pop    es
  413d98:	fimul  DWORD PTR [esi+0x57]
  413d9b:	mov    edi,0x7ed25375
  413da0:	jg     0x413d50
  413da2:	loop   0x413dbb
  413da4:	int3   
  413da5:	xchg   ch,ch
  413da7:	clc    
  413da8:	sub    al,0xa2
  413daa:	mov    cl,0x9
  413dac:	mov    ah,0x12
  413dae:	xchg   ebx,eax
  413daf:	fnstcw WORD PTR [edx+0x6ad56f15]
  413db5:	mov    ah,0xf7
  413db7:	icebp  
  413db8:	jmp    0x71b3:0x7d6e679d
  413dbf:	mov    cl,0xa9
  413dc1:	nop
  413dc2:	xchg   WORD PTR [esi+0x6eb240e7],bx
  413dc9:	and    edi,eax
  413dcb:	inc    edx
  413dcc:	cs mov al,0x82
  413dcf:	or     al,0x2c
  413dd1:	ret    
  413dd2:	mov    ds:0x8784b22e,eax
  413dd7:	and    ebp,ebp
  413dd9:	int3   
  413dda:	mov    bl,0x87
  413ddc:	jle    0x413dc7
  413dde:	aas    
  413ddf:	add    BYTE PTR [esi-0x52435892],dl
  413de5:	jp     0x413db9
  413de7:	push   ss
  413de8:	jmp    eax
  413dea:	mov    dh,0x15
  413dec:	mov    ecx,0x92470a37
  413df1:	sti    
  413df2:	mov    ecx,0x3e31ae21
  413df7:	push   ss
  413df8:	syscall 
  413dfa:	jmp    0xaabcee35
  413dff:	(bad)  
  413e00:	out    0xa8,al
  413e02:	dec    esi
  413e03:	inc    eax
  413e04:	jecxz  0x413e0a
  413e06:	call   0x51e9:0xc4697b4f
  413e0d:	dec    ebx
  413e0e:	inc    edx
  413e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e10:	call   FWORD PTR [edx]
  413e12:	dec    ecx
  413e13:	scas   eax,DWORD PTR es:[edi]
  413e14:	jns    0x413e26
  413e16:	xchg   ebx,ebx
  413e18:	xchg   ecx,eax
  413e19:	inc    eax
  413e1a:	mov    gs,WORD PTR [ebx]
  413e1c:	jne    0x413df4
  413e1e:	fidiv  DWORD PTR [eax-0x4b]
  413e21:	out    0x30,eax
  413e23:	xor    BYTE PTR [esi-0x3350ef82],ch
  413e29:	arpl   WORD PTR [edi],dx
  413e2b:	inc    edi
  413e2c:	por    mm7,QWORD PTR [edi+0x7bd41611]
  413e33:	popf   
  413e34:	into   
  413e35:	je     0x413e41
  413e37:	fild   QWORD PTR [eax-0xe98b107]
  413e3d:	xor    al,0x14
  413e40:	mov    eax,ds:0x8a007fc8
  413e45:	adc    DWORD PTR [ecx],edi
  413e47:	mov    cl,BYTE PTR [ebx]
  413e49:	jecxz  0x413e67
  413e4b:	es xchg edi,eax
  413e4d:	mov    esi,0x71fceec5
  413e52:	outs   dx,DWORD PTR ds:[esi]
  413e53:	sbb    eax,0xe7860e58
  413e58:	ja     0x413e7d
  413e5a:	mov    bh,0xed
  413e5c:	sub    BYTE PTR [ecx+0x1c],0x30
  413e60:	sbb    edx,0xffffffcb
  413e63:	jmp    0x563518da
  413e68:	push   0x9b1ceb4b
  413e6d:	test   esi,esp
  413e6f:	cmp    eax,0xd5efb6f1
  413e74:	imul   edx,DWORD PTR [edi],0x32660a58
  413e7a:	xchg   ebx,eax
  413e7b:	shl    BYTE PTR [esi-0xa],cl
  413e7e:	push   esi
  413e7f:	lds    edi,FWORD PTR [ebx+0x387a995e]
  413e85:	mov    cl,BYTE PTR [ebp+edi*8+0x3b]
  413e89:	or     eax,0x681fc2cf
  413e8e:	cmp    BYTE PTR [ebp+0x59],al
  413e91:	xor    ecx,0x62
  413e94:	icebp  
  413e95:	lds    esi,FWORD PTR [edx]
  413e97:	daa    
  413e98:	dec    edi
  413e9a:	jg     0x413e63
  413e9c:	adc    esi,ecx
  413e9e:	sbb    ebx,DWORD PTR [esi+0x5]
  413ea1:	pushw  0xab7
  413ea5:	mov    ah,0xb6
  413ea7:	mov    ebx,0xf9871ab3
  413eac:	imul   ebp,DWORD PTR [esi+0x319dcbff],0x6d
  413eb3:	mov    ds:0xaa641ff1,eax
  413eb8:	xchg   BYTE PTR [ebx-0x3e],bl
  413ebb:	push   edi
  413ebc:	push   0xffffffd0
  413ebe:	mov    dh,0x44
  413ec0:	mov    ebp,0x33addb63
  413ec5:	sub    dl,BYTE PTR [esi]
  413ec7:	(bad)  
  413ec9:	adc    al,0xc5
  413ecb:	out    dx,eax
  413ecc:	lds    eax,FWORD PTR [esi-0x4ecb5d56]
  413ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed3:	pop    ecx
  413ed4:	mov    cl,0xdf
  413ed6:	or     DWORD PTR [edi+0x74],0x632a7fb2
  413edd:	sub    BYTE PTR [ebx],dh
  413edf:	daa    
  413ee0:	outs   dx,DWORD PTR ds:[esi]
  413ee1:	dec    eax
  413ee2:	(bad)
  413ee5:	adc    al,0x2b
  413ee7:	dec    edx
  413ee8:	rcr    BYTE PTR [ecx-0x3c318a9a],1
  413eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eef:	sbb    eax,0x779875d0
  413ef4:	lods   al,BYTE PTR ds:[esi]
  413ef5:	cmc    
  413ef6:	mov    edx,0xa656d074
  413efb:	clc    
  413efc:	dec    ecx
  413efd:	sbb    al,0xae
  413eff:	dec    edi
  413f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f01:	xchg   DWORD PTR [ebx],ebx
  413f03:	xchg   DWORD PTR [ebx],eax
  413f05:	pop    es
  413f06:	into   
  413f07:	test   edx,ebp
  413f09:	sub    eax,eax
  413f0b:	sub    DWORD PTR [esi],ecx
  413f0d:	xor    ebp,DWORD PTR ds:0x61f5db84
  413f13:	mov    bh,0xcd
  413f15:	dec    esi
  413f16:	jns    0x413f2e
  413f18:	fldenv [edi-0x560f996f]
  413f1e:	mov    al,ds:0x236e2d46
  413f23:	imul   edx,ecx,0x5c949d99
  413f29:	dec    ecx
  413f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2b:	add    BYTE PTR [esi],ah
  413f2d:	call   0x214a:0xe8bee09
  413f34:	addr16 xchg edi,eax
  413f36:	or     BYTE PTR [ebx+edx*1-0x777b2df9],bl
  413f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3e:	rol    BYTE PTR [esi+ebp*1-0x5be614e7],0x59
  413f46:	add    ecx,ecx
  413f48:	repz push esi
  413f4a:	out    dx,eax
  413f4b:	lahf   
  413f4c:	loop   0x413fb4
  413f4e:	into   
  413f4f:	sbb    edi,esi
  413f51:	mov    dh,0xc7
  413f53:	out    dx,eax
  413f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f55:	mov    esi,0x9901229a
  413f5a:	mov    bh,0x26
  413f5c:	add    al,0x96
  413f5e:	movzx  esp,WORD PTR [esi]
  413f61:	lods   al,BYTE PTR ds:[esi]
  413f62:	leave  
  413f63:	pop    edx
  413f64:	adc    DWORD PTR [edx-0x7],ebx
  413f67:	pushw  0x5c
  413f6a:	imul   eax,edx,0x2e3780b8
  413f70:	mov    al,0x23
  413f72:	fmul   st(3),st
  413f74:	loop   0x413fb7
  413f76:	cmp    eax,0xc172f816
  413f7b:	push   0xffffffc1
  413f7d:	push   edi
  413f7e:	fadd   st,st(3)
  413f80:	xor    BYTE PTR [esi],ah
  413f82:	jmp    0x413f0a
  413f84:	sar    dl,0x6e
  413f87:	xchg   ecx,eax
  413f88:	and    eax,0xf7883074
  413f8d:	cwde   
  413f8e:	rol    DWORD PTR [eax],0xf0
  413f91:	inc    eax
  413f92:	push   cs
  413f93:	jae    0x99dfc5bf
  413f99:	jnp    0x413f20
  413f9b:	popf   
  413f9c:	ret    0x72fb
  413f9f:	cmp    bh,BYTE PTR [ebx+edi*4]
  413fa2:	xor    al,0xe4
  413fa4:	sbb    al,0xf6
  413fa6:	leave  
  413fa7:	iret   
  413fa8:	sub    eax,0x588fecb8
  413fad:	and    ch,BYTE PTR [ebx+0x4befb39a]
  413fb3:	fadd   QWORD PTR [edx]
  413fb5:	fstp   DWORD PTR [ebx-0x5370b87e]
  413fbb:	mov    cl,0xdd
  413fbd:	or     DWORD PTR [eax-0x63],ebp
  413fc0:	std    
  413fc1:	sbb    al,0x3b
  413fc3:	mov    al,ds:0x8f312a87
  413fc8:	cmp    al,0xc6
  413fca:	sti    
  413fcb:	fsub   QWORD PTR [eax-0x59]
  413fce:	inc    eax
  413fcf:	mov    ecx,0x433aa8df
  413fd4:	adc    BYTE PTR [ebx+0x2f7d55f2],0xcc
  413fdb:	std    
  413fdc:	mov    dl,0xf0
  413fde:	in     eax,0x87
  413fe0:	sbb    bl,al
  413fe2:	push   edx
  413fe3:	cwde   
  413fe4:	mov    eax,0x5676935a
  413fe9:	mov    ch,0x9d
  413feb:	ds sbb al,0x1a
  413fee:	add    DWORD PTR [ebx],eax
  413ff0:	imul   esp,DWORD PTR [edx-0x27],0x1962ae3
  413ff7:	test   eax,0xa92ebf71
  413ffc:	repz mov cl,0x78
  413fff:	gs xchg edx,eax
  414001:	adc    al,0xf6
  414003:	add    al,BYTE PTR [ecx+0x26]
  414006:	cmp    eax,0xa6c139e6
  41400c:	into   
  41400d:	sbb    BYTE PTR [edi-0x7c],dh
  414010:	mov    edi,0x16fd66dd
  414015:	in     eax,0xcf
  414017:	adc    BYTE PTR [edi+0xe93e4c1],bl
  41401d:	add    eax,esp
  41401f:	sti    
  414020:	pop    ds
  414021:	ins    BYTE PTR es:[edi],dx
  414022:	mov    ebp,DWORD PTR [ecx+0x5b]
  414025:	add    dl,BYTE PTR [ebx+0x2f]
  414028:	(bad)
  41402c:	add    DWORD PTR [edi+eax*8+0x5983973d],ebp
  414033:	cmp    edx,DWORD PTR [ebp-0x66]
  414036:	or     al,0x20
  414038:	mov    BYTE PTR ds:0x49417e92,ah
  41403e:	pop    ecx
  41403f:	pop    esp
  414040:	outs   dx,BYTE PTR ds:[esi]
  414041:	mov    fs,WORD PTR [eax]
  414043:	cmp    DWORD PTR [edi],edx
  414045:	in     eax,dx
  414046:	sti    
  414047:	arpl   sp,cx
  414049:	xchg   DWORD PTR [eax],ebp
  41404b:	addr16 jnp 0x4140a6
  41404e:	mov    ecx,0x911563e3
  414053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414054:	inc    esi
  414055:	mov    esp,0x77a617ed
  41405a:	xchg   BYTE PTR [edi+eax*8-0x7b2db66b],bl
  414061:	xor    al,0x10
  414063:	cmp    cl,BYTE PTR [esi-0x5d]
  414066:	dec    esi
  414067:	gs nop
  414069:	sar    DWORD PTR [edx+0x76],cl
  41406c:	xchg   ebx,eax
  41406d:	adc    edx,0xffffffc3
  414070:	repz aas 
  414072:	adc    BYTE PTR [eax-0x7b],0xb5
  414076:	add    eax,0x4d8b1df4
  41407b:	adc    BYTE PTR [ebx-0x2dccebab],cl
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx+0x5448a486]
  4140b7:	nop
  4140b8:	nop
  4140b9:	dec    ebx
  4140ba:	xchg   edx,eax
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0xc2001e30
  4140c5:	dec    esp
  4140c6:	dec    edx
  4140c7:	xchg   edx,eax
  4140c8:	cwde   
  4140c9:	or     DWORD PTR [ebx],ecx
  4140cb:	jmp    0x73c01d2d
  4140d0:	into   
  4140d1:	mov    fs,ebx
  4140d3:	pop    ecx
  4140d4:	adc    ah,bh
  4140d6:	out    0xc4,eax
  4140d8:	push   cs
  4140d9:	xchg   ebx,eax
  4140da:	rcl    BYTE PTR [edx+0x122b9fa3],0x97
  4140e1:	mov    BYTE PTR [edi+ecx*4],dl
  4140e4:	sub    BYTE PTR [ebp+0x24fd3e8a],0xa2
  4140eb:	add    edx,edi
  4140ed:	xor    esi,edx
  4140ef:	sbb    eax,0x32f3eddd
  4140f4:	imul   edi,DWORD PTR ss:[edi+0x34],0xb84ea641
  4140fc:	lds    edx,FWORD PTR [eax-0x66e84d71]
  414102:	imul   eax,DWORD PTR [edx-0x5b],0xaf141f4c
  414109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410a:	rol    DWORD PTR [eax+0x60],0x51
  41410e:	repnz dec esi
  414110:	les    esp,FWORD PTR [esi+0x1c947ad5]
  414116:	mul    BYTE PTR [eax+esi*2]
  414119:	leave  
  41411a:	and    al,0x35
  41411c:	sbb    DWORD PTR [edi],ecx
  41411e:	gs mov esi,0x85107e0c
  414124:	pop    es
  414125:	inc    eax
  414126:	cmp    cl,BYTE PTR [esi+0x2c]
  414129:	and    edi,DWORD PTR [esi-0x192750dc]
  41412f:	(bad)  
  414130:	jne    0x414162
  414132:	fwait
  414133:	xchg   edx,eax
  414134:	das    
  414135:	add    eax,0xb4fe6655
  41413a:	outs   dx,BYTE PTR ds:[esi]
  41413b:	cwde   
  41413c:	cli    
  41413d:	jne    0x414163
  41413f:	ror    DWORD PTR [esi+eiz*1],1
  414142:	fs jno 0x4140ed
  414145:	aad    0xe2
  414147:	lods   al,BYTE PTR ds:[esi]
  414148:	retf   0x9fc4
  41414b:	add    al,0x85
  41414d:	push   esp
  41414e:	addr16 sbb eax,0xf3ffc51a
  414154:	xchg   edi,eax
  414155:	test   DWORD PTR [edi+0x2f],ebx
  414158:	jmp    DWORD PTR [edi+0x37]
  41415b:	sub    eax,0xe723d299
  414160:	cli    
  414161:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414163:	cdq    
  414164:	leave  
  414165:	jle    0x41412b
  414167:	out    0x8,eax
  414169:	shr    DWORD PTR [ebp-0x750afbcb],0x55
  414170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414171:	pushf  
  414172:	test   eax,0x12013f3b
  414177:	std    
  414178:	mov    dh,0xe2
  41417a:	out    dx,eax
  41417b:	push   eax
  41417c:	loop   0x4141a8
  41417e:	jecxz  0x414123
  414180:	or     eax,0xb0ce0981
  414185:	clc    
  414186:	mov    DWORD PTR [edi],ebp
  414188:	mov    eax,ds:0x2f7ef4eb
  41418d:	mov    bl,0xf5
  41418f:	test   eax,0xffb1c683
  414194:	es mov esi,esi
  414197:	sub    bh,BYTE PTR [edx+0x8]
  41419a:	xor    ecx,DWORD PTR [esi-0x53653440]
  4141a0:	xchg   ebp,eax
  4141a1:	cmp    DWORD PTR [edx+0x7f],0xe9b4d410
  4141a8:	push   edi
  4141a9:	pop    ss
  4141aa:	jmp    0x444b:0x8e0d5fd7
  4141b1:	inc    esp
  4141b2:	xor    edx,DWORD PTR [ebx+edx*1+0x37]
  4141b6:	(bad)  
  4141b7:	mov    ebx,0xf0831880
  4141bc:	cmp    al,0x2e
  4141be:	das    
  4141bf:	push   ebx
  4141c0:	xchg   ebx,eax
  4141c1:	mov    ds:0xd364006c,eax
  4141c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c7:	aad    0x1
  4141c9:	xchg   ebx,eax
  4141ca:	nop
  4141cb:	xchg   ecx,eax
  4141cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cd:	dec    eax
  4141ce:	adc    BYTE PTR [esi+0x7e6b140f],dl
  4141d4:	mov    dh,0xb
  4141d6:	repnz mov eax,DWORD PTR [edi]
  4141d9:	push   ds
  4141da:	mov    eax,0x307468b8
  4141df:	movnti DWORD PTR [ebp+0xb4ae8e],ecx
  4141e6:	cmp    edi,ecx
  4141e8:	loope  0x41419f
  4141ea:	cwde   
  4141eb:	push   ds
  4141ec:	mov    bh,0x34
  4141ee:	fiadd  WORD PTR [edx]
  4141f0:	pop    es
  4141f1:	inc    eax
  4141f2:	icebp  
  4141f3:	push   ds
  4141f4:	push   ecx
  4141f5:	mov    ch,0xaf
  4141f7:	add    ebx,DWORD PTR [edx-0x21]
  4141fa:	push   eax
  4141fb:	pop    ecx
  4141fc:	xor    ah,cl
  4141fe:	addr16 mov ch,0xdb
  414201:	xor    BYTE PTR [ebp-0xcd4f05c],dh
  414207:	jle    0x4141ff
  414209:	repz push cs
  41420b:	(bad)  
  41420c:	por    mm3,QWORD PTR [edi]
  41420f:	inc    edi
  414210:	ss sub al,0x74
  414213:	cmc    
  414214:	out    dx,eax
  414215:	xchg   edi,eax
  414216:	bound  ebp,QWORD PTR [edx+0x8c987b4]
  41421c:	scas   al,BYTE PTR es:[edi]
  41421d:	inc    edx
  41421e:	inc    ecx
  41421f:	ret    0x53fc
  414222:	add    eax,DWORD PTR [ecx]
  414224:	cmp    al,0x46
  414226:	rol    DWORD PTR [ebp+0x1a098bca],1
  41422c:	xlat   BYTE PTR ds:[ebx]
  41422d:	inc    esi
  41422e:	mov    dl,0x8
  414230:	push   ecx
  414231:	les    ebx,FWORD PTR [esi]
  414233:	cli    
  414234:	xor    ebp,DWORD PTR [ebp-0x63c6d5de]
  41423a:	sbb    al,0x46
  41423c:	add    al,0x2c
  41423e:	pop    esp
  41423f:	cmp    al,BYTE PTR [ebx]
  414241:	mov    ds:0xfbd0ddc3,al
  414246:	cmp    ecx,DWORD PTR [esi]
  414248:	jne    0x414262
  41424a:	lds    esp,FWORD PTR [ebp-0x50]
  41424d:	and    eax,DWORD PTR [esi]
  41424f:	add    DWORD PTR [ecx+0x6d95b6f6],edi
  414255:	sub    DWORD PTR [ebx+esi*8],esp
  414258:	inc    ecx
  414259:	sbb    ebx,0x1b
  41425c:	into   
  41425d:	ror    DWORD PTR [esi+0x2d],0xe6
  414261:	cmp    eax,0x950c4238
  414266:	push   0xffffff91
  414268:	in     al,dx
  414269:	dec    edx
  41426a:	cwd    
  41426c:	add    ch,al
  41426e:	(bad)  
  41426f:	test   eax,0xca0487cc
  414274:	mov    bl,0x8a
  414276:	mov    al,ds:0x95589d60
  41427b:	lock in eax,dx
  41427d:	jne    0x414251
  41427f:	cmp    DWORD PTR ds:0xae4459af,esp
  414285:	icebp  
  414286:	sub    bl,BYTE PTR [edx+0x4567ccf3]
  41428c:	ja     0x414289
  41428e:	popa   
  41428f:	mov    al,ds:0x2c2688c7
  414294:	mov    esi,0x17a54d7a
  414299:	jge    0x414226
  41429b:	xchg   edx,eax
  41429c:	psubq  mm2,QWORD PTR [edx]
  41429f:	inc    esi
  4142a0:	xor    DWORD PTR [edx-0x4f1d7e38],eax
  4142a6:	shr    DWORD PTR [edi],cl
  4142a8:	(bad)  
  4142a9:	(bad)  
  4142aa:	es leave 
  4142ac:	pop    ds
  4142ad:	mov    ds:0xe8dbb332,eax
  4142b2:	inc    ebp
  4142b3:	outs   dx,BYTE PTR ds:[esi]
  4142b4:	outs   dx,BYTE PTR ds:[esi]
  4142b5:	push   edx
  4142b6:	cld    
  4142b7:	add    bh,BYTE PTR [eax]
  4142b9:	or     BYTE PTR [edx+0x3720c4f],bl
  4142bf:	shld   DWORD PTR [esi+0x19],ebp,cl
  4142c3:	(bad)  
  4142c4:	jle    0x414253
  4142c6:	imul   esi,DWORD PTR [edx+0x770cfbc4],0x6d
  4142cd:	loop   0x41428a
  4142cf:	and    al,BYTE PTR [esi+esi*8+0x45]
  4142d3:	push   esi
  4142d4:	stos   DWORD PTR es:[edi],eax
  4142d5:	cmp    ebp,0xffffffbf
  4142d8:	push   ebp
  4142d9:	stos   DWORD PTR es:[edi],eax
  4142da:	add    DWORD PTR [ebp-0x6b],ecx
  4142dd:	std    
  4142de:	(bad)  
  4142df:	cmp    eax,0xa58c13bc
  4142e4:	add    al,0xe1
  4142e6:	add    DWORD PTR [ebx+0x47],ecx
  4142e9:	cmovne esi,DWORD PTR [ebp+0x5]
  4142ed:	leave  
  4142ee:	push   ecx
  4142ef:	mov    BYTE PTR [esi+ebx*8-0x19546c29],ch
  4142f6:	retf   0x9a54
  4142f9:	imul   edi,DWORD PTR [ebp+0x720655f1],0x355047a5
  414303:	iret   
  414304:	push   ebx
  414305:	push   es
  414306:	test   DWORD PTR [ebp+0x25],esp
  414309:	fldcw  WORD PTR [ebx-0x4d]
  41430c:	inc    edx
  41430d:	jl     0x4142ce
  41430f:	sbb    eax,0x11bc535f
  414314:	in     eax,0x11
  414316:	mov    esp,0x99a2ba0d
  41431b:	jmp    0x4c8df292
  414320:	ret    
  414321:	int3   
  414322:	aaa    
  414323:	fdivr  QWORD PTR [edi+edx*4]
  414326:	mov    edx,0xea6dd1f4
  41432b:	out    dx,eax
  41432c:	jmp    FWORD PTR [ebx-0xff8837a]
  414332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414333:	rcr    BYTE PTR [ebx+0x1b],0x1d
  414337:	in     eax,dx
  414338:	pop    ecx
  414339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41433a:	dec    ebp
  41433b:	fsubr  QWORD PTR [esi+ebx*8]
  41433e:	ret    
  41433f:	arpl   WORD PTR [esi+0x44],cx
  414342:	push   edi
  414343:	lock gs inc esp
  414346:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414348:	icebp  
  414349:	mov    edi,0x5c57e536
  41434e:	push   esp
  41434f:	out    0x66,eax
  414351:	mov    bl,0xa5
  414353:	xchg   esi,eax
  414354:	cmp    bh,BYTE PTR [edi+0x3c510794]
  41435a:	mov    bh,0x43
  41435c:	retf   
  41435d:	push   edx
  41435e:	push   ss
  41435f:	stos   DWORD PTR es:[edi],eax
  414360:	enter  0x3797,0x3
  414364:	aaa    
  414365:	les    esp,FWORD PTR [esi]
  414367:	mov    ah,0x94
  414369:	(bad)  
  41436a:	sbb    al,0x4f
  41436c:	mov    ds:0xa7b4f331,eax
  414371:	cmp    BYTE PTR [esi+0x3eb53e12],0x7e
  414378:	call   FWORD PTR [eax]
  41437a:	push   0x906cb3aa
  41437f:	push   cs
  414380:	(bad)  
  414381:	and    eax,0x8c3d395e
  414386:	or     DWORD PTR [ebp-0x23],edi
  414389:	adc    BYTE PTR [edi],ch
  41438b:	nop
  41438c:	std    
  41438d:	pop    eax
  41438e:	scas   eax,DWORD PTR es:[edi]
  41438f:	jb     0x4143f0
  414391:	xor    BYTE PTR [esp+ebx*1+0x5504e0f1],al
  414398:	adc    DWORD PTR [ecx-0x17d7314],esi
  41439e:	jle    0x414361
  4143a0:	lods   eax,DWORD PTR ds:[esi]
  4143a1:	enter  0xd5ad,0xdd
  4143a5:	(bad)  
  4143a6:	mov    eax,0x7576fd1
  4143ab:	pop    edx
  4143ac:	in     al,dx
  4143ad:	dec    edi
  4143ae:	ja     0x41439c
  4143b0:	jg     0x4143cd
  4143b2:	(bad)  
  4143b3:	and    al,BYTE PTR [eax+ecx*8-0x7e]
  4143b7:	push   0x79713d4e
  4143bc:	pushf  
  4143bd:	aad    0x56
  4143bf:	loopne 0x4143c6
  4143c1:	add    eax,0x29a9e1f
  4143c6:	mov    dh,ah
  4143c8:	push   ecx
  4143c9:	jle    0x4143b1
  4143cb:	adc    al,0x5c
  4143cd:	push   0xffffff9d
  4143cf:	mov    edx,0xbd8f6d4
  4143d4:	mov    bl,0xa4
  4143d6:	push   es
  4143d7:	(bad)  
  4143d8:	test   eax,0xe25e0001
  4143dd:	add    eax,ecx
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	sbb    bh,BYTE PTR [esi-0x6784619c]
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x8951f8e8
  41440f:	inc    eax
  414410:	out    dx,al
  414411:	dec    ebx
  414412:	arpl   WORD PTR [ecx+0x2d],dx
  414415:	and    eax,0x9f22f1a7
  41441a:	inc    eax
  41441b:	jmp    0xc9e8:0x167ffc0f
  414422:	fdiv   st(2),st
  414424:	jmp    0x5c37f87c
  414429:	hlt    
  41442a:	sub    al,0x16
  41442c:	loopne 0x414442
  41442e:	(bad)  
  41442f:	jno    0x41444a
  414431:	cmc    
  414432:	mov    esp,0xdb50ea0c
  414437:	inc    esp
  414438:	test   BYTE PTR [ecx+0x7b075e39],cl
  41443e:	in     eax,dx
  41443f:	xor    ecx,DWORD PTR [esi]
  414441:	ror    DWORD PTR [edi-0x7b],1
  414444:	lea    ecx,[ebp+0x2a35e73a]
  41444a:	push   ss
  41444b:	or     eax,0x786f399a
  414450:	stc    
  414451:	pop    ebp
  414452:	(bad)  
  414453:	fistp  WORD PTR [edx+0x2eb3e7ef]
  414459:	jb     0x414438
  41445b:	cmp    al,0x12
  41445d:	(bad)
  414460:	push   cs
  414461:	push   ebx
  414462:	xchg   edx,eax
  414463:	adc    BYTE PTR es:[ebx+edi*4+0x65e6db72],0x20
  41446c:	daa    
  41446d:	xchg   edx,eax
  41446e:	inc    eax
  41446f:	mov    edx,0x7dc8209
  414474:	retf   
  414475:	scas   al,BYTE PTR es:[edi]
  414476:	das    
  414477:	jl     0x414434
  414479:	icebp  
  41447a:	fst    st(0)
  41447c:	mov    dl,cl
  41447e:	push   ebp
  41447f:	mov    BYTE PTR [esi*2-0x1318247],bh
  414486:	lds    edi,FWORD PTR [eax]
  414488:	out    0x72,al
  41448a:	fnstsw WORD PTR [eax+0x71d2795c]
  414490:	xchg   edx,eax
  414491:	xchg   ecx,eax
  414492:	fnstcw WORD PTR [edi+0x20]
  414495:	fld    QWORD PTR [edi+0xa5acfc6]
  41449b:	adc    BYTE PTR [esi-0x59],ch
  41449e:	and    BYTE PTR [ecx],al
  4144a0:	aas    
  4144a1:	inc    esi
  4144a2:	sti    
  4144a3:	inc    eax
  4144a4:	mov    edi,0x5b66d655
  4144a9:	jmp    0x559b16db
  4144ae:	je     0x414512
  4144b0:	adc    bh,bh
  4144b2:	test   DWORD PTR [ecx+0x220fd7d7],ebp
  4144b8:	or     ah,bh
  4144ba:	sahf   
  4144bb:	jno    0x414474
  4144bd:	pop    edi
  4144be:	retf   0xd0a6
  4144c1:	aad    0x70
  4144c3:	sbb    BYTE PTR [edi+0x24],bh
  4144c6:	adc    al,0xf7
  4144c8:	jb     0x4144e0
  4144ca:	jge    0x41447e
  4144cc:	retf   0x9252
  4144cf:	das    
  4144d0:	cmp    al,0xd9
  4144d2:	sub    DWORD PTR [eax+edi*2-0x57],ebp
  4144d6:	inc    eax
  4144d7:	daa    
  4144d8:	pushf  
  4144d9:	cmp    BYTE PTR [edx+edx*4],bl
  4144dc:	jne    0x414487
  4144de:	sub    BYTE PTR [esi-0x74f31458],0x8d
  4144e5:	popf   
  4144e6:	das    
  4144e7:	sbb    DWORD PTR [eax+ebp*4-0x1026840b],edi
  4144ee:	das    
  4144ef:	xor    bh,dh
  4144f1:	adc    ebx,esp
  4144f3:	sbb    al,0x97
  4144f5:	mov    eax,ds:0x16d49f62
  4144fa:	into   
  4144fb:	mov    esi,0xbc9eeb89
  414500:	jmp    0x75a7:0x165f6dc4
  414507:	mov    esp,0xc4535834
  41450c:	xor    BYTE PTR ds:0x327ed438,0x79
  414513:	and    al,dl
  414515:	mov    ecx,0x935893c4
  41451a:	or     eax,0x205860db
  41451f:	mov    bl,dl
  414521:	sbb    BYTE PTR [edx-0x45abc4cb],dh
  414527:	xchg   edi,eax
  414528:	arpl   WORD PTR [edx-0x596feaf8],bp
  41452e:	cli    
  41452f:	test   BYTE PTR [ebx+0xb],0x79
  414533:	out    0x39,eax
  414535:	add    BYTE PTR [ebx+0x5],dl
  414538:	ret    
  414539:	xor    ch,BYTE PTR [edi+eiz*2+0x14efcf14]
  414540:	cmp    esi,ebp
  414542:	add    dl,BYTE PTR es:[edi]
  414545:	pushf  
  414546:	and    cl,BYTE PTR [eax-0x646b4fb9]
  41454c:	(bad)  
  41454d:	and    al,dh
  41454f:	jo     0x414599
  414551:	push   ds
  414552:	adc    al,0x3b
  414554:	mov    dl,BYTE PTR [esi]
  414556:	test   DWORD PTR [ebx+0x64],edx
  414559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455a:	imul   ebp,DWORD PTR [ecx],0xffffffc5
  41455d:	and    DWORD PTR [edi-0x50],eax
  414560:	inc    ebx
  414561:	(bad)  
  414562:	sbb    al,0x2d
  414564:	push   ebx
  414565:	jns    0x4145cc
  414567:	inc    ebx
  414568:	test   BYTE PTR [ecx+0x16],dh
  41456b:	fistp  WORD PTR ds:0xde6c01b8
  414571:	push   es
  414572:	bound  edx,QWORD PTR [ebx]
  414574:	pop    edi
  414575:	jecxz  0x414506
  414577:	imul   ebx,DWORD PTR [ecx-0x43],0x5d
  41457b:	sar    BYTE PTR [edx+0x2b95c8ac],cl
  414581:	(bad)  
  414582:	in     al,0x90
  414584:	jecxz  0x41454e
  414586:	cmp    eax,0x450f41e0
  41458b:	sub    ebx,DWORD PTR [edx+0x40]
  41458e:	sbb    cl,ch
  414590:	mov    edx,0x83eafbb1
  414595:	leave  
  414596:	mov    fs:0xd8592170,eax
  41459c:	mov    ds:0xcb6d5987,al
  4145a1:	pop    edx
  4145a2:	in     al,dx
  4145a3:	jns    0x4145aa
  4145a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145a6:	enter  0xb3bb,0x64
  4145aa:	pop    ebx
  4145ab:	add    DWORD PTR [esi+0x42],esi
  4145ae:	stos   BYTE PTR es:[edi],al
  4145af:	cli    
  4145b0:	test   BYTE PTR [eax+0x7c],bh
  4145b3:	add    edx,DWORD PTR [edi+0x4c]
  4145b6:	pop    ss
  4145b7:	rcl    BYTE PTR [edx+0x37],cl
  4145ba:	ror    edi,1
  4145bc:	(bad)  
  4145bd:	sub    al,BYTE PTR ds:0x4c77
  4145c2:	push   esi
  4145c3:	mov    edi,0x7d801f6a
  4145c8:	cmp    esp,edi
  4145ca:	lods   al,BYTE PTR ds:[esi]
  4145cb:	sti    
  4145cc:	jbe    0x4145d6
  4145ce:	xchg   ebp,eax
  4145cf:	cmc    
  4145d0:	les    ebp,FWORD PTR [esi+0x10]
  4145d3:	adc    dh,BYTE PTR [edx]
  4145d5:	or     eax,DWORD PTR [edi-0x79bbe418]
  4145db:	or     eax,DWORD PTR ds:0xa7b168e6
  4145e1:	jg     0x41456f
  4145e3:	sbb    al,0x8f
  4145e5:	dec    esi
  4145e6:	out    dx,al
  4145e7:	jbe    0x414620
  4145e9:	fcmovne st,st(5)
  4145eb:	jge    0x414630
  4145ed:	jge    0x4145ce
  4145ef:	fst    QWORD PTR [eax-0xb]
  4145f2:	cmp    bl,BYTE PTR [edi-0x21fd90fc]
  4145f8:	js     0x414652
  4145fa:	scas   al,BYTE PTR es:[edi]
  4145fb:	scas   al,BYTE PTR es:[edi]
  4145fc:	out    0xf1,eax
  4145fe:	popf   
  4145ff:	scas   al,BYTE PTR es:[edi]
  414600:	push   edx
  414601:	xor    DWORD PTR [ebx+0x6f75fca7],edx
  414607:	stos   BYTE PTR es:[edi],al
  414608:	dec    ebx
  41460a:	xor    eax,0x27c18c8d
  41460f:	fist   WORD PTR [esi+0x7f9f6999]
  414615:	push   esi
  414616:	xchg   esi,eax
  414617:	pusha  
  414618:	in     al,dx
  414619:	xor    al,ah
  41461b:	mov    edx,0x563a1747
  414620:	mov    edi,0x4b25e9b8
  414625:	cmc    
  414626:	int    0xf7
  414628:	sahf   
  414629:	push   0xc1cb5302
  41462e:	loop   0x414683
  414630:	cld    
  414631:	(bad)  
  414632:	in     al,dx
  414633:	jle    0x41461b
  414635:	call   0x2caa899e
  41463a:	repnz aam 0xd2
  41463d:	push   ecx
  41463e:	inc    edx
  41463f:	push   esp
  414640:	(bad)  
  414641:	gs aas 
  414643:	in     eax,dx
  414644:	or     esi,eax
  414646:	daa    
  414647:	jmp    0x414632
  414649:	adc    al,0x2c
  41464b:	jb     0x4146a2
  41464d:	icebp  
  41464e:	ret    0xf6e
  414651:	sar    bl,0xcd
  414654:	mov    ah,0x23
  414656:	vpshaw xmm4,xmm7,xmm3
  41465b:	ss into 
  41465d:	jo     0x41464f
  41465f:	add    cl,BYTE PTR [edx-0x181f7ea1]
  414665:	add    al,0x66
  414667:	ds add al,0xc7
  41466a:	sbb    eax,0x665161e3
  41466f:	out    dx,al
  414670:	push   0xffffff99
  414672:	inc    ecx
  414673:	mov    esp,0xa88d255d
  414678:	in     eax,dx
  414679:	mov    BYTE PTR [ebx+0x43c6dffd],0x6c
  414680:	cdq    
  414681:	pop    ds
  414682:	pop    eax
  414683:	pop    ds
  414684:	sbb    al,0x7a
  414686:	jns    0x414681
  414688:	adc    BYTE PTR [edi],bh
  41468a:	in     eax,dx
  41468b:	xchg   edx,eax
  41468c:	sbb    ebx,DWORD PTR [esi+0x71]
  41468f:	scas   al,BYTE PTR es:[edi]
  414690:	jp     0x414692
  414692:	mov    dl,0xed
  414694:	stc    
  414695:	inc    eax
  414696:	push   ecx
  414697:	leave  
  414698:	stos   BYTE PTR es:[edi],al
  414699:	jp     0x414626
  41469b:	mov    dh,0xa8
  41469d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41469e:	shr    DWORD PTR [ebx],cl
  4146a0:	mov    ds:0xdf05bb6b,eax
  4146a5:	pusha  
  4146a6:	pop    ss
  4146a7:	jns    0x414693
  4146a9:	jns    0x4146fb
  4146ab:	iret   
  4146ac:	cdq    
  4146ad:	nop
  4146ae:	cmp    bh,BYTE PTR [ecx+0x36]
  4146b1:	test   ch,0x81
  4146b4:	dec    esp
  4146b5:	mov    al,ds:0xb6553035
  4146ba:	cmp    eax,0x483f3da7
  4146bf:	inc    ebp
  4146c0:	sbb    cl,0xcd
  4146c3:	jmp    0xb992e7ff
  4146c8:	lods   eax,DWORD PTR ds:[esi]
  4146c9:	xlat   BYTE PTR ds:[ebx]
  4146ca:	je     0x414667
  4146cc:	inc    eax
  4146cd:	test   eax,0x7a826651
  4146d2:	test   eax,0xfe5da242
  4146d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d8:	ficom  WORD PTR [ebx+ebx*2-0x312199d]
  4146df:	lock ret 
  4146e1:	pop    ds
  4146e2:	rcl    BYTE PTR ss:[ebp*1+0x2f198621],cl
  4146ea:	outs   dx,DWORD PTR ds:[esi]
  4146eb:	pop    DWORD PTR [edi]
  4146ed:	div    BYTE PTR [ecx-0x7e986936]
  4146f3:	sub    dl,BYTE PTR [edx]
  4146f5:	mov    ebp,0x27039a9b
  4146fa:	nop
  4146fb:	or     BYTE PTR [esi],bh
  4146fd:	mov    ah,0xc4
  4146ff:	(bad)  
  414700:	out    0x5f,eax
  414702:	mov    DWORD PTR [esi-0x4e],eax
  414705:	jnp    0x414760
  414707:	sbb    al,0xee
  414709:	xchg   dh,al
  41470b:	mov    eax,0x27d57a3e
  414710:	and    DWORD PTR [esi-0xb892686],ebp
  414716:	pop    edi
  414717:	dec    eax
  414718:	dec    ebp
  414719:	fadd   QWORD PTR [edx]
  41471b:	sti    
  41471c:	cmp    ebp,DWORD PTR [ebp+0x74]
  41471f:	lock mov esi,0x2b655d38
  414725:	hlt    
  414726:	fimul  WORD PTR [ebx+0x5d8b1055]
  41472c:	adc    al,0x33
  41472e:	fisttp DWORD PTR [ebx]
  414730:	retf   
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422728
  414779:	mov    edi,0x42266e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi+0x2865a4c7],edi
  4147a3:	out    dx,al
  4147a4:	iret   
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0xc38551b6
  4147b1:	push   ss
  4147b2:	cmp    ebp,esp
  4147b4:	mov    ds:0x703c5fa3,eax
  4147b9:	xrelease mov BYTE PTR [ebp+0xa],0x11
  4147be:	ret    0x9624
  4147c1:	sbb    al,0x8f
  4147c3:	rcl    BYTE PTR ds:0xad661b28,0xaf
  4147ca:	dec    ebx
  4147cb:	jns    0x41475f
  4147cd:	imul   esi,DWORD PTR [ecx],0xaacb7448
  4147d3:	push   edi
  4147d4:	dec    ecx
  4147d5:	xchg   esi,eax
  4147d6:	dec    edi
  4147d7:	jns    0x414786
  4147d9:	les    esp,FWORD PTR [ecx+0x448875c]
  4147df:	jg     0x4147bf
  4147e1:	adc    al,0x21
  4147e3:	push   ebp
  4147e4:	pop    di
  4147e6:	sub    BYTE PTR [ecx-0x417df252],ch
  4147ec:	test   eax,0x86eea0ee
  4147f1:	shl    edi,0xac
  4147f4:	out    dx,al
  4147f5:	loope  0x414839
  4147f7:	cld    
  4147f8:	outs   dx,DWORD PTR ds:[esi]
  4147f9:	jge    0x4147eb
  4147fb:	dec    edx
  4147fc:	pop    ebx
  4147fd:	test   dl,ch
  4147ff:	adc    al,BYTE PTR [eax+0x5]
  414802:	hlt    
  414803:	in     eax,dx
  414804:	into   
  414805:	sub    al,BYTE PTR [edi+0x50]
  414808:	pop    edx
  414809:	adc    BYTE PTR [esi-0x61cfa845],0xcd
  414810:	cli    
  414811:	fidivr DWORD PTR [eax]
  414813:	retf   0xfb74
  414816:	pop    ebp
  414817:	push   edx
  414818:	pop    es
  414819:	lock stos BYTE PTR es:[edi],al
  41481b:	and    ebp,DWORD PTR [esi-0x62]
  41481e:	add    bh,BYTE PTR [eax-0x5bc71d4b]
  414824:	clc    
  414825:	mov    esp,0x416855b7
  41482a:	popa   
  41482b:	fld    DWORD PTR [edi+0x30]
  41482e:	cmp    ebp,eax
  414830:	shl    DWORD PTR [edx-0x5d0ab2d8],cl
  414836:	sahf   
  414837:	iret   
  414838:	lds    edx,FWORD PTR [eax-0x404db14c]
  41483e:	mul    DWORD PTR [esp+edi*8+0x38c95259]
  414845:	jmp    0x25c0:0xb21e2a37
  41484c:	push   es
  41484d:	and    al,0x7f
  41484f:	arpl   WORD PTR [eax+0xc],si
  414852:	inc    edi
  414853:	adc    BYTE PTR [esi-0x5b],al
  414856:	jecxz  0x4147fe
  414858:	cmp    bl,BYTE PTR [ebp+0x25]
  41485b:	add    edx,eax
  41485d:	test   BYTE PTR gs:[ebp-0x3c847968],dl
  414864:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  414866:	jno    0x4148d8
  414868:	inc    edx
  414869:	sbb    cl,BYTE PTR [eax-0x6b]
  41486c:	push   edi
  41486d:	cli    
  41486e:	mov    esp,edi
  414870:	in     eax,0x5
  414872:	icebp  
  414873:	mov    bh,0xaa
  414875:	xchg   edi,eax
  414876:	in     eax,0x96
  414878:	imul   ebx,esp,0x485cac35
  41487e:	sbb    DWORD PTR [ebx+0x4876fe3],esi
  414884:	dec    ebx
  414885:	push   eax
  414886:	push   0x26
  414888:	les    edi,FWORD PTR [edi+0x161b0731]
  41488e:	or     ah,BYTE PTR [ebp+0x6efa76c6]
  414894:	cmp    eax,0x80348e5a
  414899:	dec    eax
  41489a:	(bad)  
  41489b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41489c:	test   al,0xde
  41489e:	xchg   DWORD PTR [edi+0x602e285e],ebp
  4148a4:	push   es
  4148a5:	mov    ebx,esi
  4148a7:	sub    dl,BYTE PTR [ebp+0x12629f03]
  4148ad:	mov    esi,0x46bcc98a
  4148b2:	in     eax,0x74
  4148b4:	and    eax,0x759c4ffb
  4148b9:	mov    fs,WORD PTR [ecx+ebx*2-0x50]
  4148bd:	pop    edi
  4148be:	or     al,0x5c
  4148c0:	xchg   ecx,eax
  4148c1:	jp     0x4148d6
  4148c3:	adc    ah,dl
  4148c5:	test   al,0x3e
  4148c7:	and    esp,DWORD PTR [edi+0xa]
  4148ca:	ret    0xa4d2
  4148cd:	stos   DWORD PTR es:[edi],eax
  4148ce:	aas    
  4148cf:	repnz int3 
  4148d1:	mov    al,ds:0x63aee83f
  4148d6:	mov    ecx,0xe5531a4e
  4148db:	scas   al,BYTE PTR es:[edi]
  4148dc:	gs dec esp
  4148de:	cli    
  4148df:	sub    BYTE PTR [eax-0x2b],dh
  4148e2:	test   al,0x69
  4148e4:	and    DWORD PTR [ebx+0x59],ebp
  4148e7:	add    eax,0x335a4925
  4148ec:	push   ebp
  4148ed:	sub    eax,0xe6db7741
  4148f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f3:	lahf   
  4148f4:	(bad)  
  4148f5:	fcmovnu st,st(5)
  4148f7:	int3   
  4148f8:	inc    edi
  4148f9:	in     al,0x26
  4148fb:	xor    WORD PTR [edi+ebx*1-0xa402d16],si
  414903:	addr16 push ss
  414905:	mov    ds:0x3d28af37,eax
  41490a:	call   0x809070e4
  41490f:	xor    eax,DWORD PTR [ecx-0x4d]
  414912:	xchg   ebx,eax
  414913:	sub    al,0xc1
  414915:	xchg   BYTE PTR [esi],ah
  414917:	push   ecx
  414918:	mov    eax,ds:0x9b79740c
  41491d:	sti    
  41491e:	mov    ds,WORD PTR [ebx]
  414920:	and    BYTE PTR [edx+edx*4+0xa7a3e7],0x45
  414928:	fsub   QWORD PTR [edx]
  41492a:	stos   DWORD PTR es:[edi],eax
  41492b:	(bad)  
  41492c:	es inc edi
  41492e:	mov    ch,0xac
  414930:	dec    edx
  414931:	lock iret 
  414933:	fsubr  QWORD PTR [ebp-0x7ce26247]
  414939:	mov    esp,0x3dc2a6cd
  41493e:	call   0x8242f29e
  414943:	xchg   ecx,eax
  414944:	imul   esp,DWORD PTR [esi-0x5de9569f],0x68
  41494b:	cmp    al,0x2
  41494d:	jge    0x4149b5
  41494f:	xchg   BYTE PTR [ebx-0x138080e5],ch
  414955:	stos   BYTE PTR es:[edi],al
  414956:	xor    BYTE PTR [edx+0x6d],bl
  414959:	js     0x414918
  41495b:	jl     0x4149a6
  41495d:	aam    0x65
  41495f:	cmp    BYTE PTR [esi],bl
  414961:	fs push edi
  414963:	das    
  414964:	stos   DWORD PTR es:[edi],eax
  414965:	pop    es
  414966:	es loope 0x414974
  414969:	push   esp
  41496a:	lea    esp,[ecx+0x33d1336e]
  414970:	mov    ebx,0xc9173e
  414975:	mov    ds,WORD PTR [eax-0x7dd72d54]
  41497b:	in     eax,dx
  41497c:	and    esi,ebx
  41497e:	adc    dh,ah
  414980:	test   ch,al
  414982:	push   0xffffffe3
  414984:	stos   BYTE PTR es:[edi],al
  414985:	pop    ds
  414986:	imul   ecx,DWORD PTR [esi],0x9e73755f
  41498c:	aas    
  41498d:	cmp    DWORD PTR [esi+0x1218fa57],ecx
  414993:	or     edx,DWORD PTR [esi-0x68]
  414996:	adc    al,BYTE PTR [edx+0x67]
  414999:	(bad)  
  41499a:	jecxz  0x4149d9
  41499c:	inc    esp
  41499d:	(bad)  
  41499f:	sub    al,0x5e
  4149a1:	inc    ebp
  4149a2:	jl     0x4149bb
  4149a4:	fadd   st(5),st
  4149a6:	mov    ah,0xad
  4149a8:	dec    esp
  4149a9:	add    dh,BYTE PTR [edi]
  4149ab:	or     al,BYTE PTR [ecx-0x77]
  4149ae:	push   ecx
  4149af:	outs   dx,DWORD PTR ds:[esi]
  4149b0:	push   0x413a8a3a
  4149b5:	push   edx
  4149b6:	push   edx
  4149b7:	dec    esi
  4149b8:	push   ss
  4149b9:	icebp  
  4149ba:	adc    BYTE PTR [ebp-0x59e18e6f],ah
  4149c0:	sub    edi,eax
  4149c2:	(bad)  
  4149c3:	pusha  
  4149c4:	mov    ds:0x22d8172,eax
  4149c9:	dec    ecx
  4149ca:	lock push esi
  4149cc:	out    dx,eax
  4149cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ce:	test   DWORD PTR [edx+0x29cda80b],ecx
  4149d4:	inc    eax
  4149d5:	scas   al,BYTE PTR es:[edi]
  4149d6:	(bad)  
  4149d7:	push   eax
  4149d8:	jbe    0x414a44
  4149da:	inc    esp
  4149db:	int    0x17
  4149dd:	adc    ebp,DWORD PTR [esi-0x5eb2a3aa]
  4149e3:	or     al,0x22
  4149e5:	dec    edi
  4149e6:	or     al,0x80
  4149e8:	or     cl,ah
  4149ea:	xor    eax,0x33181ebe
  4149ef:	sub    al,0x3b
  4149f1:	jne    0x4149bf
  4149f3:	test   DWORD PTR [ebp+0x692a8dd],esi
  4149f9:	mov    ds:0x7f35da1f,al
  4149fe:	ret    
  4149ff:	cli    
  414a00:	scas   eax,DWORD PTR es:[edi]
  414a01:	cs loopne 0x414a7b
  414a04:	add    BYTE PTR [edi],bh
  414a06:	pop    esi
  414a07:	xlat   BYTE PTR ds:[ebx]
  414a08:	mov    eax,ds:0x70472d69
  414a0d:	push   0xffffffa6
  414a0f:	test   eax,0xc9921b68
  414a14:	fwait
  414a15:	nop
  414a16:	sbb    eax,0x765991ea
  414a1b:	ds fwait
  414a1d:	sub    bh,al
  414a1f:	popa   
  414a20:	(bad)  
  414a21:	cdq    
  414a22:	int    0x92
  414a24:	fsubr  QWORD PTR [ebx]
  414a26:	sti    
  414a27:	in     eax,0x1d
  414a29:	cmp    cl,al
  414a2b:	xchg   ebx,eax
  414a2c:	icebp  
  414a2d:	and    esi,DWORD PTR [ecx]
  414a2f:	mov    cl,0x9f
  414a31:	adc    esi,DWORD PTR [ecx-0x2860ab94]
  414a37:	js     0x414a18
  414a39:	adc    DWORD PTR [ecx-0x7e],edx
  414a3c:	cmc    
  414a3d:	std    
  414a3e:	addr16 sub al,0x62
  414a41:	fild   DWORD PTR [edi-0x50]
  414a44:	in     eax,0xab
  414a46:	mov    edi,0x8083bbec
  414a4b:	popa   
  414a4c:	jge    0x414aa5
  414a4e:	das    
  414a4f:	pop    ebx
  414a50:	test   eax,0x8d5dfab9
  414a55:	sbb    bl,BYTE PTR [ecx+eax*8]
  414a58:	out    dx,eax
  414a59:	aas    
  414a5a:	or     al,0x8d
  414a5c:	xchg   edi,eax
  414a5d:	jb     0x414a50
  414a5f:	mov    bl,0x1f
  414a61:	stos   BYTE PTR es:[edi],al
  414a62:	cmp    al,0xd
  414a64:	mov    ch,0xe6
  414a66:	(bad)
  414a69:	push   esi
  414a6a:	sbb    ecx,DWORD PTR [ecx]
  414a6c:	and    edx,DWORD PTR gs:[esi-0x17]
  414a70:	gs mov esp,0x5ca22293
  414a76:	or     al,0xd8
  414a78:	rcr    DWORD PTR [ebx-0x6c8488f],0x4b
  414a7f:	shl    DWORD PTR ds:0x61fba867,cl
  414a85:	and    DWORD PTR [esi],esi
  414a87:	(bad)
  414a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8c:	scas   eax,DWORD PTR es:[di]
  414a8e:	leave  
  414a8f:	sbb    eax,0x4d8bb9f
  414a94:	or     al,0xff
  414a96:	mov    bl,0xff
  414a98:	les    ebp,FWORD PTR [ecx+0x75]
  414a9b:	push   ebx
  414a9c:	xchg   ebx,eax
  414a9d:	fidiv  DWORD PTR [ecx-0x66da5ebd]
  414aa3:	scas   eax,DWORD PTR es:[edi]
  414aa4:	sbb    bh,BYTE PTR [edx+0x7]
  414aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa8:	adc    cl,dh
  414aaa:	pop    ebx
  414aab:	and    al,0x1c
  414aad:	shl    BYTE PTR ds:0x585bb5db,0xc
  414ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab5:	jg     0x414a89
  414ab7:	js     0x414ab4
  414ab9:	pop    es
  414aba:	and    ecx,DWORD PTR ds:[ecx-0xbc9605e]
  414ac1:	add    eax,0x150498ae
  414ac6:	arpl   WORD PTR [bx+0x4d8b],dx
  414acb:	adc    al,0xf
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422728
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x5c9e14bc],bh
  414b1d:	cli    
  414b1e:	test   bh,cl
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0xc1cd86dd
  414b2c:	aam    0x75
  414b2e:	mov    ebp,0x14815820
  414b33:	or     dh,BYTE PTR [esi-0x5a]
  414b36:	fs loope 0x414add
  414b39:	push   esp
  414b3a:	inc    ecx
  414b3b:	push   esi
  414b3c:	loopne 0x414b7c
  414b3e:	dec    esp
  414b3f:	xchg   BYTE PTR [ebp-0x5d],al
  414b42:	mov    ds:0xd7d1b63c,eax
  414b47:	mov    dh,0x56
  414b49:	add    eax,0x11254455
  414b4e:	std    
  414b4f:	and    eax,0x4726d4e6
  414b54:	jle    0x96e8a217
  414b5a:	adc    DWORD PTR [ebx-0x19],ebp
  414b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5e:	lock fmulp st(7),st
  414b62:	sbb    BYTE PTR [edi],0x7a
  414b65:	mov    BYTE PTR [eax+0x7fdec45],dl
  414b6b:	fistp  QWORD PTR [edx]
  414b6d:	cs mov edi,0x5a21399c
  414b73:	push   0xffffffa3
  414b75:	pushf  
  414b76:	cwde   
  414b77:	or     BYTE PTR [eax],dl
  414b79:	mov    bl,0xd4
  414b7b:	in     eax,dx
  414b7c:	ss sahf 
  414b7e:	call   0xa3a0:0x7a9d4194
  414b85:	dec    ebx
  414b86:	iret   
  414b87:	les    eax,FWORD PTR [ecx+edx*4]
  414b8a:	sbb    eax,DWORD PTR [ebx]
  414b8c:	adc    ecx,eax
  414b8e:	mov    cl,0x20
  414b90:	shl    DWORD PTR [edi],cl
  414b92:	mov    ds:0x6ed2430f,al
  414b97:	jge    0x414bc7
  414b99:	inc    ecx
  414b9a:	(bad)  
  414b9b:	ret    
  414b9c:	dec    edi
  414b9d:	xor    eax,0xb3c033c3
  414ba2:	cmp    eax,0x89954774
  414ba7:	(bad)  
  414ba8:	jbe    0x414c0c
  414baa:	fidiv  WORD PTR [ebx+0x27252d50]
  414bb0:	in     al,0xfb
  414bb2:	lods   eax,DWORD PTR ds:[esi]
  414bb3:	test   BYTE PTR [ebp-0x440c377a],bh
  414bb9:	in     al,0x8b
  414bbb:	sub    DWORD PTR [ecx+ebx*8+0x7d],0xffffff86
  414bc0:	cdq    
  414bc1:	outs   dx,BYTE PTR ds:[esi]
  414bc2:	out    dx,eax
  414bc3:	xor    edx,edx
  414bc5:	gs cdq 
  414bc7:	repnz sub al,0x6d
  414bca:	inc    edi
  414bcb:	js     0x414bed
  414bcd:	xor    esi,eax
  414bcf:	dec    edi
  414bd0:	imul   edx,DWORD PTR [esi+0x46],0xb6be048b
  414bd7:	push   ebx
  414bd9:	sbb    cl,BYTE PTR [eax]
  414bdb:	lods   eax,DWORD PTR ds:[esi]
  414bdc:	inc    esp
  414bdd:	ret    0x4251
  414be0:	pop    ds
  414be1:	mov    ds:0x1f0f6a44,al
  414be6:	cmp    ebp,ebx
  414be8:	or     ebp,ebp
  414bea:	pop    eax
  414beb:	cld    
  414bec:	jp     0x414b91
  414bee:	mov    esi,0xed17289
  414bf3:	aam    0x7c
  414bf5:	stos   BYTE PTR es:[edi],al
  414bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf7:	sub    DWORD PTR [ebp+0x48],edi
  414bfa:	sbb    DWORD PTR [edx],esp
  414bfc:	cmc    
  414bfd:	mov    cl,0x13
  414bff:	xor    DWORD PTR [esi+0x35],ebp
  414c02:	and    ah,0x13
  414c05:	mov    ds:0xc89efb57,al
  414c0a:	cmp    al,ah
  414c0c:	call   0x619e5ed1
  414c11:	mov    bh,0x49
  414c13:	ficom  DWORD PTR [ecx+0x5f5ba0ea]
  414c19:	loop   0x414c28
  414c1b:	pusha  
  414c1c:	or     DWORD PTR [esi-0x74],esp
  414c1f:	mov    al,ds:0xbd5a9f22
  414c24:	dec    ebp
  414c25:	je     0x414c03
  414c27:	hlt    
  414c28:	and    eax,0xca548cc7
  414c2d:	repz stc 
  414c2f:	push   esi
  414c30:	outs   dx,DWORD PTR ds:[esi]
  414c31:	pushf  
  414c32:	jne    0x414cae
  414c34:	jle    0x414cb0
  414c36:	cli    
  414c37:	shl    BYTE PTR [ebx-0x48],0x82
  414c3b:	test   eax,0xdeee81ca
  414c40:	stc    
  414c41:	in     eax,dx
  414c42:	dec    esp
  414c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c44:	inc    esp
  414c45:	lea    ebp,[eax-0x3e703626]
  414c4b:	and    dl,ch
  414c4d:	xor    eax,0x8a0bc111
  414c52:	je     0x414c19
  414c54:	ins    DWORD PTR es:[edi],dx
  414c55:	mov    ecx,0x4e6d1212
  414c5a:	popf   
  414c5b:	test   DWORD PTR [ecx],ebp
  414c5d:	fiadd  WORD PTR [ecx-0x29]
  414c60:	test   DWORD PTR [edi-0x72],eax
  414c63:	outs   dx,BYTE PTR ds:[esi]
  414c64:	sbb    ah,dl
  414c66:	push   esp
  414c67:	mov    ah,0x4e
  414c69:	pop    esi
  414c6a:	dec    edi
  414c6b:	mov    ch,0x96
  414c6d:	jb     0x414c18
  414c6f:	aas    
  414c70:	aaa    
  414c71:	out    0x5c,al
  414c73:	rcl    DWORD PTR [ebx],1
  414c75:	ins    DWORD PTR es:[edi],dx
  414c76:	lods   al,BYTE PTR ds:[esi]
  414c77:	pop    es
  414c78:	daa    
  414c79:	and    al,0x69
  414c7b:	outs   dx,DWORD PTR ds:[esi]
  414c7c:	xor    eax,0x159d5b02
  414c81:	jge    0x414c17
  414c83:	mov    ebp,ebx
  414c85:	xor    al,0x96
  414c87:	(bad)  
  414c88:	or     al,0xe7
  414c8a:	mov    ebx,0x4700458c
  414c8f:	icebp  
  414c90:	call   0xc5edaa34
  414c95:	inc    edx
  414c96:	fwait
  414c97:	jge    0x414c55
  414c99:	inc    ebp
  414c9a:	inc    esi
  414c9b:	(bad)  
  414c9c:	rol    DWORD PTR [edi],0xa6
  414c9f:	jl     0x414c7d
  414ca1:	inc    esi
  414ca2:	fld    DWORD PTR [edi+esi*8-0x3c]
  414ca6:	aad    0xa4
  414ca8:	fimul  DWORD PTR [edi-0x2345c401]
  414cae:	dec    ebx
  414caf:	test   ch,ch
  414cb1:	pop    esp
  414cb2:	ret    0x7743
  414cb5:	retf   
  414cb6:	(bad)  
  414cb8:	cmp    BYTE PTR [esi+0x7c],bh
  414cbb:	retf   0x5376
  414cbe:	xchg   BYTE PTR [esi],ah
  414cc0:	lock pusha 
  414cc2:	leave  
  414cc3:	add    edx,DWORD PTR [ebp+0x701b05f6]
  414cc9:	loop   0x414cca
  414ccb:	pop    ebx
  414ccc:	out    dx,eax
  414ccd:	std    
  414cce:	out    0xe5,al
  414cd0:	imul   edi
  414cd2:	bound  eax,QWORD PTR es:[ecx]
  414cd5:	sbb    al,0xeb
  414cd7:	stos   BYTE PTR es:[edi],al
  414cd8:	jmp    0x414c74
  414cda:	enter  0x5d25,0x4
  414cde:	and    esi,DWORD PTR [ebx-0x48]
  414ce1:	inc    eax
  414ce2:	jnp    0x414ceb
  414ce4:	(bad)  
  414ce5:	out    0x28,eax
  414ce7:	xchg   esi,eax
  414ce8:	jmp    0x3ea79923
  414ced:	mov    esi,0xc7a32e63
  414cf2:	sub    bl,BYTE PTR [ebp+0x11]
  414cf5:	jle    0x414ccd
  414cf7:	sub    dh,cl
  414cf9:	pop    eax
  414cfa:	sub    eax,0x34174f2a
  414cff:	imul   ebp,ebp,0x620d8389
  414d05:	jg     0x414cd4
  414d07:	or     bh,ch
  414d09:	cli    
  414d0a:	mov    esp,0xe641001a
  414d0f:	arpl   WORD PTR [ebx-0x5e],ax
  414d12:	jle    0x414d3c
  414d14:	cmp    al,0xb8
  414d16:	ret    0x9f53
  414d19:	imul   edi,DWORD PTR ds:0xb3bb1a50,0x47de5b1
  414d23:	xchg   esp,eax
  414d24:	ror    BYTE PTR [ecx],cl
  414d26:	xchg   esi,eax
  414d27:	dec    DWORD PTR [edx+0x7b]
  414d2a:	lahf   
  414d2b:	jo     0x414d51
  414d2d:	mov    eax,0xefcc85df
  414d32:	jg     0x414cfd
  414d34:	hlt    
  414d35:	inc    edi
  414d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d37:	dec    edi
  414d38:	pop    esp
  414d39:	in     al,0x2b
  414d3b:	cli    
  414d3c:	pop    edx
  414d3d:	mov    DWORD PTR [ebx],esp
  414d3f:	int    0xae
  414d41:	adc    ecx,ebx
  414d43:	stc    
  414d44:	pop    ecx
  414d45:	mov    bh,BYTE PTR [ebx]
  414d47:	in     al,dx
  414d48:	stos   DWORD PTR es:[edi],eax
  414d49:	repnz test al,0xc1
  414d4c:	dec    edx
  414d4d:	mov    ch,0x51
  414d4f:	idiv   DWORD PTR [ecx]
  414d51:	jo     0x414d82
  414d53:	inc    ebx
  414d54:	mov    ebp,0xa3b5da00
  414d59:	mov    ds:0x1233861b,al
  414d5e:	sbb    BYTE PTR [eax-0x50],cl
  414d61:	scas   al,BYTE PTR es:[edi]
  414d62:	mov    eax,0xb35072bc
  414d67:	jne    0x414cfb
  414d69:	jmp    0xdf1d:0x6a962794
  414d70:	xchg   BYTE PTR [edx-0x2eff4ae4],ah
  414d76:	xchg   edx,eax
  414d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d78:	cmp    DWORD PTR [edi],esp
  414d7a:	test   ecx,ecx
  414d7c:	fadd   DWORD PTR [eax-0x29]
  414d7f:	aam    0xc5
  414d81:	xor    BYTE PTR [ebp+0x4],bh
  414d84:	jg     0x414d5e
  414d86:	dec    ebx
  414d87:	shr    ebx,cl
  414d89:	inc    esi
  414d8a:	push   eax
  414d8b:	push   ecx
  414d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8d:	(bad)
  414d91:	cmp    eax,0x7716d997
  414d96:	int3   
  414d97:	and    DWORD PTR [ebx],ecx
  414d99:	mov    esi,0xd7c5141c
  414d9e:	clc    
  414d9f:	push   ebp
  414da0:	out    dx,eax
  414da1:	not    al
  414da3:	imul   edx,DWORD PTR [edi+edx*4+0x18],0xffffffbb
  414da8:	mov    ecx,0xec090753
  414dad:	and    bh,BYTE PTR [esp+ebp*8+0x5025c734]
  414db4:	rcr    DWORD PTR [eax+0x59825107],cl
  414dba:	retf   0x3500
  414dbd:	repz mov eax,0xc0f19e58
  414dc3:	mov    eax,0xf85d9f4e
  414dc8:	shl    eax,0x18
  414dcb:	add    ebp,DWORD PTR [ebp+0x492b499]
  414dd1:	icebp  
  414dd2:	inc    eax
  414dd3:	xor    eax,0xf1c9f71d
  414dd8:	adc    esi,DWORD PTR [ebx+0x51]
  414ddb:	xor    al,0xee
  414ddd:	mov    bh,0x3c
  414ddf:	in     eax,dx
  414de0:	sub    al,0x5
  414de2:	cmc    
  414de3:	mov    dh,BYTE PTR [edx+0x371fb711]
  414de9:	mov    al,0x81
  414deb:	jb     0x414e33
  414ded:	adc    eax,0x162591e9
  414df2:	pop    DWORD PTR [ecx+0x77b8a7ba]
  414df8:	or     eax,0xff2ad492
  414dfd:	loope  0x414e1b
  414dff:	nop
  414e00:	jo     0x414d9e
  414e02:	sahf   
  414e03:	inc    esi
  414e04:	push   eax
  414e05:	cdq    
  414e06:	jp     0x414dad
  414e08:	imul   ebp,DWORD PTR [esi-0x55c49932],0xaf774323
  414e12:	and    DWORD PTR [ebp-0x71],edi
  414e15:	popa   
  414e16:	xlat   BYTE PTR ds:[ebx]
  414e17:	nop
  414e18:	outs   dx,DWORD PTR ds:[esi]
  414e19:	mov    cl,0x9
  414e1b:	retf   
  414e1c:	sbb    eax,0x7ab72644
  414e21:	push   eax
  414e22:	mov    eax,ds:0x8ca5b6f3
  414e27:	(bad)  
  414e28:	push   eax
  414e29:	mov    bl,0x6f
  414e2b:	jge    0x414de4
  414e2d:	call   0x6ab4:0x70dfe7a9
  414e34:	loope  0x414e74
  414e36:	fs loopne 0x414e43
  414e39:	in     eax,0xfd
  414e3b:	aam    0x6a
  414e3d:	push   edi
  414e3e:	sbb    eax,0x5078d904
  414e43:	mov    esp,0x34e9c83b
  414e48:	add    eax,DWORD PTR [eax]
  414e4a:	add    al,ch
  414e4c:	add    eax,0x8ca40c84
  414e51:	sub    bh,BYTE PTR [bx+si+0x22a6]
  414e56:	sahf   
  414e57:	in     al,dx
  414e58:	arpl   bp,dx
  414e5a:	jecxz  0x414e68
  414e5c:	stos   BYTE PTR es:[edi],al
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0x942b649e
  414e67:	enter  0xc8e2,0x86
  414e6b:	imul   ebp,DWORD PTR [esi],0x4a
  414e6e:	mov    ebp,0xa9ca62fc
  414e73:	push   ebx
  414e74:	test   BYTE PTR [eax+0x6629f361],0xed
  414e7b:	or     ebx,ebx
  414e7d:	rcr    DWORD PTR [ebp-0x1ef47756],0x98
  414e84:	cwde   
  414e85:	cs hlt 
  414e87:	xchg   edx,eax
  414e88:	stos   BYTE PTR es:[edi],al
  414e89:	inc    ecx
  414e8a:	iret   
  414e8b:	ins    DWORD PTR es:[edi],dx
  414e8c:	push   edx
  414e8d:	xlat   BYTE PTR es:[ebx]
  414e8f:	fsub   DWORD PTR [edx]
  414e91:	icebp  
  414e92:	ins    BYTE PTR es:[edi],dx
  414e93:	jbe    0x414e78
  414e95:	inc    esp
  414e96:	mov    bh,0x6d
  414e98:	sub    eax,0xd2145331
  414e9d:	dec    ebp
  414e9e:	push   ds
  414e9f:	lds    esi,FWORD PTR ds:0xbe5da29e
  414ea5:	lods   eax,DWORD PTR ds:[esi]
  414ea6:	ror    DWORD PTR [ebx+0x35],0xf8
  414eaa:	fst    QWORD PTR [edi+0x74e06219]
  414eb0:	xor    eax,0x10a0144b
  414eb5:	mov    edi,?
  414eb7:	test   al,0xb
  414eb9:	aas    
  414eba:	push   ds
  414ebb:	fsubr  QWORD PTR gs:[edi]
  414ebe:	pop    edi
  414ebf:	sbb    DWORD PTR [eax-0x77f2ed2b],ebp
  414ec5:	cmp    DWORD PTR [edi+0x4c],esi
  414ec8:	xchg   ebx,eax
  414ec9:	in     al,0x1d
  414ecb:	mov    cl,BYTE PTR [eax]
  414ecd:	ins    DWORD PTR es:[edi],dx
  414ece:	fmul   st(3),st
  414ed0:	sbb    edi,edi
  414ed2:	stos   BYTE PTR es:[edi],al
  414ed3:	ja     0x414eb7
  414ed5:	(bad)  [edi+edx*4+0x21]
  414ed9:	shr    DWORD PTR [esi],cl
  414edb:	xor    ch,BYTE PTR [ebx+0x65]
  414ede:	fcom   QWORD PTR [ebp+0x53]
  414ee1:	push   es
  414ee2:	repz pop esi
  414ee4:	fwait
  414ee5:	mov    dh,0xe1
  414ee7:	jbe    0x414eac
  414ee9:	jmp    0x3caf828b
  414eee:	test   al,0x3f
  414ef0:	jge    0x414ebf
  414ef2:	and    edi,DWORD PTR [esi+0x4bbadae5]
  414ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef9:	mov    ebp,0xb9a2cf1c
  414efe:	hlt    
  414eff:	out    dx,al
  414f00:	adc    eax,0x85228e29
  414f05:	cmp    ah,BYTE PTR [eax]
  414f07:	sub    ch,ah
  414f09:	imul   ecx,DWORD PTR [edx],0xfffffff5
  414f0c:	sbb    esi,DWORD PTR [edx]
  414f0e:	jl     0x414f19
  414f10:	jmp    0x94b74bec
  414f15:	test   eax,0x864d5cc1
  414f1a:	sbb    edx,DWORD PTR [esi-0x6e]
  414f1d:	and    BYTE PTR [eax-0x51e6978a],0xc6
  414f24:	call   0x4fe0a4b3
  414f29:	addr16 mov esi,0x511037fd
  414f2f:	adc    eax,0xc5ec29
  414f34:	test   ah,0x3d
  414f37:	xchg   esp,eax
  414f38:	jecxz  0x414f18
  414f3a:	push   cs
  414f3b:	aas    
  414f3c:	or     al,BYTE PTR [ebx-0x1ed2f048]
  414f42:	dec    esp
  414f43:	std    
  414f44:	cmp    dl,BYTE PTR [edx]
  414f46:	inc    esp
  414f47:	or     eax,0xd2db086e
  414f4c:	shl    DWORD PTR [esi-0x220445f5],cl
  414f52:	adc    esp,DWORD PTR [ebx+0x0]
  414f55:	aaa    
  414f56:	clc    
  414f57:	ret    
  414f58:	xchg   esi,eax
  414f59:	push   cs
  414f5a:	movsx  edx,WORD PTR [ebx]
  414f5d:	vpsubd xmm4,xmm7,XMMWORD PTR ds:0xefd8069a
  414f65:	sahf   
  414f66:	repnz clc 
  414f68:	push   0xffffffa0
  414f6a:	into   
  414f6b:	popf   
  414f6c:	out    dx,al
  414f6d:	imul   esp,DWORD PTR [esi],0x55f8b4c2
  414f73:	gs or  ebx,ebx
  414f76:	iret   
  414f77:	mov    ebx,0x494c2197
  414f7c:	xchg   esi,eax
  414f7d:	jmp    0xe227:0x2e4aa887
  414f84:	jge    0x414f73
  414f86:	pop    ebx
  414f87:	push   ss
  414f88:	dec    eax
  414f89:	fwait
  414f8a:	jg     0x414f85
  414f8c:	dec    edi
  414f8d:	inc    edx
  414f8e:	jmp    0x414f4b
  414f90:	sbb    BYTE PTR [edx],0xad
  414f93:	dec    esi
  414f94:	fwait
  414f95:	xchg   edx,eax
  414f96:	jmp    0xb7af4ee2
  414f9b:	mov    bl,0xf3
  414f9d:	or     edi,edx
  414f9f:	cmp    al,0xf5
  414fa1:	adc    al,0x93
  414fa3:	call   0x663b:0xf46333f2
  414faa:	icebp  
  414fab:	lahf   
  414fac:	gs mov cl,0x1b
  414faf:	and    al,0x15
  414fb1:	orps   xmm0,XMMWORD PTR [edx+0x11951824]
  414fb8:	jae    0x41501f
  414fba:	in     eax,dx
  414fbb:	xor    eax,DWORD PTR [ebp+0x6217bf07]
  414fc1:	push   edx
  414fc2:	mov    ds:0xf6f1794a,eax
  414fc7:	ss dec edx
  414fc9:	cld    
  414fca:	sub    ebx,DWORD PTR [eax-0x4e30ce01]
  414fd0:	mov    ebx,0x105d26c2
  414fd5:	cli    
  414fd6:	sbb    DWORD PTR [esi+0x20],esp
  414fd9:	retf   0x860f
  414fdc:	dec    esp
  414fdd:	popf   
  414fde:	daa    
  414fdf:	aaa    
  414fe0:	push   es
  414fe1:	cld    
  414fe2:	dec    ebx
  414fe3:	faddp  st(6),st
  414fe5:	pop    ebp
  414fe6:	(bad)  
  414fe7:	repz jmp 0xe071:0xb76fc3e2
  414fef:	fwait
  414ff0:	push   ebp
  414ff1:	sbb    DWORD PTR [edi+0x5a],0xeebe1ef1
  414ff8:	inc    eax
  414ff9:	inc    edx
  414ffa:	mov    dh,0x53
  414ffc:	ins    BYTE PTR es:[edi],dx
  414ffd:	outs   dx,DWORD PTR gs:[esi]
  414fff:	mov    ds,WORD PTR [ebx-0x7e]
  415002:	ins    DWORD PTR es:[edi],dx
  415003:	shl    DWORD PTR [edi],0x7
  415006:	test   edi,ebx
  415008:	in     al,dx
  415009:	cwde   
  41500a:	or     BYTE PTR ds:0x69ecd545,ah
  415010:	ins    DWORD PTR es:[edi],dx
  415011:	dec    ebx
  415012:	sub    eax,0x2f2a01d4
  415017:	shl    DWORD PTR [ebx],0xc1
  41501a:	jns    0x414fb8
  41501c:	test   DWORD PTR [ecx],edx
  41501e:	xor    DWORD PTR [edi+0x3c1ce9bf],eax
  415024:	mov    ss,WORD PTR [edx+0x3f9cc918]
  41502a:	stos   BYTE PTR es:[edi],al
  41502b:	lahf   
  41502c:	mov    al,0x45
  41502e:	push   ecx
  41502f:	jl     0x414fbd
  415031:	pop    esi
  415032:	mov    eax,ds:0x6a26a2c3
  415037:	add    DWORD PTR [ebp+0x5b9f40e8],esi
  41503d:	jp     0x4150a7
  41503f:	inc    edx
  415040:	dec    BYTE PTR [ecx]
  415042:	jle    0x415009
  415044:	fcomp  QWORD PTR [ecx]
  415046:	jmp    0x1ec1:0x500eaa96
  41504d:	pop    ebx
  41504e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504f:	mov    cl,BYTE PTR [ebp-0x12]
  415052:	pop    esp
  415053:	(bad)  
  415054:	cmp    eax,0x4493fcfe
  415059:	cmc    
  41505a:	es cmc 
  41505c:	fwait
  41505d:	in     eax,dx
  41505e:	popa   
  41505f:	jns    0x415047
  415061:	adc    BYTE PTR [esi],0x75
  415064:	sti    
  415065:	and    edi,DWORD PTR [edi-0x49]
  415068:	les    eax,FWORD PTR [ebx-0x15875698]
  41506e:	xor    eax,0x9e94e403
  415073:	inc    ebp
  415074:	cs jno 0x4150cc
  415077:	cmp    edx,DWORD PTR [esi-0x1d31606f]
  41507d:	stc    
  41507e:	sbb    edx,DWORD PTR [esi+0x15]
  415081:	cmp    BYTE PTR [edi+edx*2+0x5ca6afe5],0x91
  415089:	out    dx,eax
  41508a:	pop    ebp
  41508b:	std    
  41508c:	lds    esp,FWORD PTR [eax]
  41508e:	jmp    0xcf7f3c46
  415093:	ficom  WORD PTR [ebx-0x7f]
  415096:	inc    ecx
  415097:	icebp  
  415098:	popf   
  415099:	xor    BYTE PTR [ecx+eiz*2],0xb6
  41509d:	out    dx,al
  41509e:	ja     0x415056
  4150a0:	adc    al,0xfa
  4150a2:	rcl    DWORD PTR [esi+0x70],cl
  4150a5:	xor    DWORD PTR [ebx],edx
  4150a7:	out    dx,al
  4150a8:	in     eax,0x80
  4150aa:	test   eax,0x19163825
  4150af:	mov    DWORD PTR [edi+0x58],esp
  4150b2:	cmc    
  4150b3:	aad    0x62
  4150b5:	stos   DWORD PTR es:[edi],eax
  4150b6:	push   edi
  4150b7:	jg     0x415080
  4150b9:	adc    al,0x1
  4150bb:	mov    ebx,0xa8684160
  4150c0:	dec    ebp
  4150c1:	call   0xf884:0x331827c6
  4150c8:	dec    ecx
  4150c9:	jp     0x415107
  4150cb:	pop    ds
  4150cc:	(bad)  
  4150cd:	gs (bad) 
  4150cf:	fld    DWORD PTR [eax]
  4150d1:	jo     0x415073
  4150d3:	mov    ecx,0x9069bb74
  4150d8:	in     al,dx
  4150d9:	xor    ebx,DWORD PTR [bx+di-0x1e46]
  4150de:	dec    edx
  4150df:	mov    ebx,0xd94ef427
  4150e4:	ror    DWORD PTR [ebx-0x77457237],0x59
  4150eb:	test   ebx,ebx
  4150ed:	pop    esp
  4150ee:	jge    0x415079
  4150f0:	fsubr  DWORD PTR [esi-0x57]
  4150f3:	pop    ds
  4150f4:	test   eax,0x8b65f619
  4150f9:	pop    edx
  4150fa:	add    ah,BYTE PTR [eax*2-0x31c55bf2]
  415101:	jl     0x41514c
  415103:	or     dl,BYTE PTR [esi+0x4e7757d]
  415109:	mov    BYTE PTR [edx-0x522d4a71],cl
  41510f:	retf   
  415110:	pop    es
  415111:	nop
  415112:	repz dec ebp
  415114:	add    ebp,eax
  415116:	add    BYTE PTR [edx-0x2ac55ef3],bh
  41511c:	pop    es
  41511d:	or     DWORD PTR [eax+edx*4],esi
  415120:	shr    BYTE PTR [edx],cl
  415122:	js     0x415135
  415124:	sbb    cl,BYTE PTR [ebx+0x51]
  415127:	xchg   BYTE PTR [eax],cl
  415129:	sbb    ecx,ebp
  41512b:	inc    esi
  41512c:	mov    ds:0xe1d84f3d,eax
  415131:	data16 loop 0x415192
  415134:	repz je 0x41513d
  415137:	dec    ecx
  415138:	sahf   
  415139:	dec    eax
  41513a:	inc    ecx
  41513b:	add    edx,esp
  41513d:	push   ss
  41513e:	mov    al,ds:0x9a180e34
  415143:	and    dh,BYTE PTR [ebx+edx*1+0xe]
  415147:	adc    DWORD PTR [esi-0x3d2aa866],ebp
  41514d:	loopne 0x415196
  41514f:	scas   eax,DWORD PTR es:[edi]
  415150:	dec    ebx
  415151:	mov    WORD PTR [ebx-0x89cf252],ds
  415157:	test   BYTE PTR [eax],0x29
  41515a:	dec    eax
  41515b:	push   ebx
  41515c:	mov    ds:0x777e6da,al
  415161:	out    dx,al
  415162:	jns    0x4150ee
  415164:	mov    esp,0x9c1be4f6
  415169:	xor    ebx,DWORD PTR [edx+0x52]
  41516c:	clc    
  41516d:	mov    esp,0x664e3807
  415172:	nop
  415173:	jl     0x415159
  415175:	sub    eax,0x40a813f4
  41517a:	jne    0x415108
  41517c:	push   ebx
  41517d:	inc    ebx
  41517e:	les    ecx,FWORD PTR [edi]
  415180:	test   BYTE PTR [esi-0x38fffff9],ah
  415186:	inc    ebp
  415187:	call   0x41618d
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	pop    ds
  4151a5:	push   ds
  4151a6:	jb     0x415185
  4151a8:	cmp    al,0xb0
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0x8a957b8d
  4151b4:	mov    edi,ss
  4151b6:	mov    ah,0x95
  4151b8:	mov    esp,DWORD PTR [ebx]
  4151ba:	dec    esi
  4151bb:	lahf   
  4151bc:	add    DWORD PTR [ecx+0x21109b16],esp
  4151c2:	aad    0xe
  4151c4:	(bad)  
  4151c5:	sti    
  4151c6:	in     eax,0xa5
  4151c8:	aad    0x39
  4151ca:	jnp    0x4151bd
  4151cc:	cmp    cl,BYTE PTR [edx+edi*4+0x5e]
  4151d0:	shl    DWORD PTR [edi+0x1d],0x84
  4151d4:	fs inc esp
  4151d6:	mov    ebp,0xe235126a
  4151db:	mov    ds:0xa448be01,al
  4151e0:	jecxz  0x4151fa
  4151e2:	and    DWORD PTR [ebx-0x7544139],ebp
  4151e8:	stos   BYTE PTR es:[edi],al
  4151e9:	mov    ebp,0x19c490b3
  4151ee:	sar    DWORD PTR [ebx-0x26],cl
  4151f1:	cld    
  4151f2:	sub    BYTE PTR [ebx-0x27da1691],al
  4151f8:	sub    DWORD PTR [eax+0x6c],ebx
  4151fb:	sbb    ebx,DWORD PTR [ebp-0x68]
  4151fe:	adc    ah,BYTE PTR [ebp-0x38049aa4]
  415204:	cmp    al,0x37
  415206:	and    DWORD PTR [ecx],edx
  415208:	shl    DWORD PTR [ebx+0x5142c1d6],cl
  41520e:	inc    ebx
  41520f:	rcr    DWORD PTR [ebx+0x67],0xbc
  415213:	test   DWORD PTR [edi+0x45fc1909],ecx
  415219:	pop    esp
  41521a:	fs or  al,0x1f
  41521d:	mov    ecx,0xbf9c63fc
  415222:	or     ebp,eax
  415224:	jecxz  0x4151c7
  415226:	arpl   bp,bp
  415228:	aas    
  415229:	sbb    eax,0x6074e24
  41522e:	and    eax,0x477c08e
  415233:	bound  ebp,QWORD PTR [edi]
  415235:	sar    BYTE PTR [edi+ebx*4-0x42],0x5c
  41523a:	in     eax,0xfc
  41523c:	in     al,0x1d
  41523e:	jp     0x415271
  415240:	jmp    0x4151e9
  415242:	mov    al,ds:0x4a8492ec
  415247:	jl     0x415246
  415249:	pop    ecx
  41524a:	call   0x25d7:0xb205611d
  415251:	out    dx,eax
  415252:	lods   eax,DWORD PTR ds:[esi]
  415253:	jb     0x4151ec
  415255:	xchg   ebp,eax
  415256:	inc    esp
  415257:	into   
  415258:	mov    ebx,ebp
  41525a:	int3   
  41525b:	mov    esp,DWORD PTR [eax]
  41525d:	rcr    BYTE PTR [ecx],0xc1
  415260:	rol    DWORD PTR [ebx-0x25],0xe8
  415264:	sbb    edx,DWORD PTR [esi]
  415266:	mov    dh,0xfb
  415268:	mov    esp,DWORD PTR ds:0xf2a70a13
  41526e:	sbb    edi,DWORD PTR [esi+0x78]
  415271:	xchg   ebp,eax
  415272:	mov    al,ds:0xc31ddb4e
  415277:	lods   al,BYTE PTR ds:[esi]
  415278:	adc    eax,0x837f219
  41527d:	push   cs
  41527e:	nop
  41527f:	and    edx,DWORD PTR [eax]
  415281:	mov    ecx,0x21a18028
  415286:	pop    ecx
  415287:	pop    esp
  415288:	div    DWORD PTR [ecx-0x2d]
  41528b:	adc    al,0xca
  41528d:	test   al,0xb7
  41528f:	lock xlat BYTE PTR ds:[ebx]
  415291:	jno    0x415222
  415293:	fs xchg edx,eax
  415295:	jmp    0x6250:0x9aa7b36e
  41529c:	sbb    bl,BYTE PTR [edx-0x21]
  41529f:	iret   
  4152a0:	add    esi,esp
  4152a2:	dec    edx
  4152a3:	jp     0x415273
  4152a5:	xlat   BYTE PTR ds:[ebx]
  4152a6:	jg     0x4152b7
  4152a8:	inc    edi
  4152a9:	enter  0x8b41,0xdb
  4152ad:	xor    eax,0xc213ed09
  4152b2:	or     DWORD PTR [edi-0x6034f28f],edx
  4152b8:	jne    0x4152e8
  4152ba:	jne    0x4152be
  4152bc:	inc    DWORD PTR [edx-0x20]
  4152bf:	jnp    0x4152e3
  4152c1:	mov    al,0x76
  4152c3:	pusha  
  4152c4:	sub    ecx,esi
  4152c6:	sub    eax,0x8ba9c39f
  4152cb:	mov    BYTE PTR [edi+0x79c4ecca],bl
  4152d1:	scas   al,BYTE PTR es:[edi]
  4152d2:	jl     0x415332
  4152d4:	data16 je 0x41532c
  4152d7:	ret    0x391b
  4152da:	imul   BYTE PTR cs:[edx-0x56c5ca9c]
  4152e1:	sub    edx,DWORD PTR [ecx+ebp*2+0x54]
  4152e5:	cmp    dh,BYTE PTR [edx+ebx*2+0x429ea63c]
  4152ec:	rcr    BYTE PTR [edx-0x4f1aab60],cl
  4152f2:	push   ebp
  4152f3:	test   DWORD PTR [esi+edx*2+0x3e],0x43b0f65c
  4152fb:	lock jne 0x415370
  4152fe:	repz add al,0x22
  415301:	push   0x77
  415303:	std    
  415304:	lods   al,BYTE PTR ds:[esi]
  415305:	xor    al,0xda
  415307:	out    0x0,eax
  415309:	iret   
  41530a:	xchg   dh,ah
  41530c:	pop    edi
  41530d:	xchg   edi,eax
  41530e:	pop    ebx
  41530f:	adc    eax,0x24a9f053
  415314:	push   esi
  415315:	fcom   DWORD PTR [ecx-0x49]
  415318:	xor    cl,BYTE PTR [edi]
  41531a:	jae    0x41535d
  41531c:	push   edx
  41531d:	pop    ecx
  41531e:	cmp    ch,dh
  415320:	popf   
  415321:	pop    ecx
  415322:	mov    al,ds:0xab59d9b
  415327:	mov    WORD PTR [edi],gs
  415329:	dec    esp
  41532a:	daa    
  41532b:	sbb    ah,dh
  41532d:	add    DWORD PTR ss:[eax-0x31],edi
  415331:	shr    BYTE PTR [esp+esi*8],0x84
  415335:	lods   eax,DWORD PTR ds:[esi]
  415336:	cmp    dl,dl
  415338:	sar    cl,1
  41533a:	adc    eax,DWORD PTR [ebp+0x1f]
  41533d:	cdq    
  41533e:	mov    WORD PTR [ebp-0x254bf8ed],es
  415344:	and    BYTE PTR [edx+0x67],0x5e
  415348:	outs   dx,DWORD PTR ds:[esi]
  415349:	jo     0x41530f
  41534b:	xchg   edx,eax
  41534c:	or     DWORD PTR [ebx+0x20],esi
  41534f:	or     bl,dl
  415351:	xchg   ebp,eax
  415352:	aam    0x40
  415354:	idiv   bl
  415356:	add    edx,ecx
  415358:	pop    ebx
  415359:	adc    dh,BYTE PTR [eax-0x6966ae89]
  41535f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415360:	imul   edi,DWORD PTR [edx],0x4
  415363:	sti    
  415364:	push   ebx
  415365:	fist   DWORD PTR [edx]
  415367:	aam    0x30
  415369:	xor    dl,BYTE PTR [eax-0x4169022]
  41536f:	add    edx,ecx
  415371:	retf   
  415372:	push   es
  415373:	pop    ebp
  415374:	sub    DWORD PTR [edx-0x3d7b5c56],0x609c9695
  41537e:	jge    0x4153b3
  415380:	call   0xe1ba:0xc0351e
  415387:	mov    ebx,0x80e556fe
  41538c:	and    BYTE PTR [esi],ah
  41538e:	sub    al,0x86
  415390:	ret    
  415391:	test   esp,eax
  415393:	lahf   
  415394:	iret   
  415395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415396:	out    0x28,al
  415398:	std    
  415399:	cmp    al,0x6f
  41539b:	cmp    al,0x5d
  41539d:	mov    eax,0xebfdbd69
  4153a2:	pusha  
  4153a3:	js     0x4153e6
  4153a5:	pop    esp
  4153a6:	out    dx,eax
  4153a7:	or     eax,0x1d8c0763
  4153ac:	adc    BYTE PTR [ecx+ebp*1-0x96cef00],dl
  4153b3:	push   es
  4153b4:	xchg   edi,eax
  4153b5:	push   ss
  4153b6:	(bad)  
  4153b7:	das    
  4153b8:	lock int3 
  4153ba:	js     0x415416
  4153bc:	sub    eax,0x5c09b656
  4153c1:	push   ecx
  4153c2:	xchg   ecx,eax
  4153c3:	test   DWORD PTR [edi-0x4],ebx
  4153c6:	adc    DWORD PTR [edi-0x28],0x50
  4153ca:	loope  0x415410
  4153cc:	neg    BYTE PTR [edi-0x4c]
  4153cf:	pushw  0x77
  4153d2:	push   esp
  4153d3:	jb     0x41535e
  4153d5:	retf   
  4153d6:	and    eax,DWORD PTR ds:0xbe0a6f97
  4153dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153dd:	sbb    eax,0x5d7edb0e
  4153e2:	test   BYTE PTR [edx+ebp*2-0x49],bl
  4153e6:	adc    eax,0xad411c1d
  4153eb:	adc    BYTE PTR cs:[ecx-0x4723f9ec],dh
  4153f2:	jnp    0x415398
  4153f4:	xor    BYTE PTR [esi-0x3b],ah
  4153f7:	pushf  
  4153f8:	and    BYTE PTR [eax-0x61],bh
  4153fb:	cdq    
  4153fc:	add    al,0x36
  4153fe:	into   
  4153ff:	lods   eax,DWORD PTR ds:[esi]
  415400:	mov    ebx,0xfa944ea8
  415405:	(bad)  
  415406:	lds    ebp,FWORD PTR [eax+0x3d81d031]
  41540c:	loop   0x415407
  41540e:	push   0xfe40b68a
  415413:	mov    al,0x83
  415415:	or     BYTE PTR [ebx],ah
  415417:	jecxz  0x4153ca
  415419:	jb     0x41545e
  41541b:	jmp    0xf75a73b1
  415420:	jle    0x4153f2
  415422:	push   gs
  415424:	add    esp,ebx
  415426:	xchg   ebx,eax
  415427:	push   edx
  415428:	lods   eax,DWORD PTR ds:[esi]
  415429:	push   ebx
  41542a:	and    DWORD PTR [esi-0x59],0x2f
  41542e:	lods   eax,DWORD PTR ds:[esi]
  41542f:	add    esi,DWORD PTR [edi]
  415431:	adc    bl,BYTE PTR [esi]
  415433:	adc    ecx,esi
  415435:	jno    0x415461
  415437:	mov    ds:0xebfd4b83,al
  41543c:	lock (bad) 
  41543f:	daa    
  415440:	sbb    BYTE PTR [edi-0x15],bh
  415443:	out    dx,al
  415444:	jecxz  0x415469
  415446:	cmp    bh,BYTE PTR [ebx+0x54]
  415449:	sub    BYTE PTR [edx],0xf4
  41544c:	or     DWORD PTR [eax],ecx
  41544e:	int3   
  41544f:	loopne 0x4154cf
  415451:	push   ecx
  415452:	sbb    esi,DWORD PTR [edi]
  415454:	or     ebp,DWORD PTR [edx+0x5b362e17]
  41545a:	pusha  
  41545b:	fwait
  41545c:	pop    edx
  41545d:	mov    WORD PTR [eax-0x42],?
  415460:	xor    edx,edx
  415462:	mov    cl,0xaf
  415464:	aaa    
  415465:	pop    esi
  415466:	ror    BYTE PTR [edi],cl
  415468:	scas   eax,DWORD PTR es:[edi]
  415469:	cmp    eax,0x249d001e
  41546e:	loopne 0x415407
  415470:	in     eax,dx
  415471:	scas   eax,DWORD PTR es:[edi]
  415472:	imul   edi,DWORD PTR [edx],0x72b8ef51
  415478:	dec    edi
  415479:	ss enter 0x106d,0x51
  41547e:	jne    0x415411
  415480:	sbb    BYTE PTR [ebx+0x46],cl
  415483:	outs   dx,BYTE PTR ds:[esi]
  415484:	or     DWORD PTR [edi-0x1f],eax
  415487:	sbb    al,0x85
  415489:	(bad)  
  41548a:	mov    ch,0x6d
  41548c:	loopne 0x415437
  41548e:	and    DWORD PTR [ecx],ebp
  415490:	pop    ds
  415491:	cmp    ebx,edx
  415493:	mov    ecx,0x7fe7604a
  415498:	or     edx,DWORD PTR [ebp-0x73]
  41549b:	leave  
  41549c:	xchg   ebp,eax
  41549d:	rol    BYTE PTR [ebp-0xb7edfb2],cl
  4154a3:	rcr    edx,cl
  4154a5:	and    edx,esp
  4154a7:	sub    al,0x60
  4154a9:	loopne 0x415469
  4154ab:	jp     0x4154e7
  4154ad:	inc    ebp
  4154ae:	mov    esp,0x754b2cc
  4154b3:	inc    ebx
  4154b4:	out    dx,eax
  4154b5:	pop    esi
  4154b6:	repnz leave 
  4154b8:	outs   dx,DWORD PTR ds:[esi]
  4154b9:	(bad)  
  4154ba:	cli    
  4154bb:	ror    DWORD PTR [ecx],cl
  4154bd:	retf   0xef44
  4154c0:	retf   
  4154c1:	jb     0x4154f4
  4154c3:	shr    DWORD PTR [ebx-0x65360842],1
  4154c9:	add    bh,bh
  4154cb:	mov    bh,0xf
  4154cd:	test   BYTE PTR [esi+0x0],bh
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fisttp QWORD PTR [ecx+0x6c924643]
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	daa    
  41558e:	loope  0x41557c
  415590:	ficomp DWORD PTR [edi+0x5e]
  415593:	(bad)  
  415594:	xor    eax,0x55385538
  415599:	adc    cl,BYTE PTR [edi-0x57]
  41559c:	test   BYTE PTR [esi+0x45b4730a],0xc7
  4155a3:	enter  0x40af,0xd
  4155a7:	leave  
  4155a8:	mov    ebp,0xadd1f701
  4155ad:	adc    bh,BYTE PTR [esi+0x43]
  4155b0:	mov    bl,0x82
  4155b2:	push   ebp
  4155b3:	out    0x75,al
  4155b5:	arpl   bx,cx
  4155b7:	into   
  4155b8:	xchg   BYTE PTR ds:0xcb31f553,ch
  4155be:	les    ebp,FWORD PTR [edi]
  4155c0:	push   ecx
  4155c1:	add    DWORD PTR [ebp+0x37],ebp
  4155c4:	or     al,0x22
  4155c6:	cwde   
  4155c7:	or     ebx,esi
  4155c9:	mov    edi,0x7e99e913
  4155ce:	sahf   
  4155cf:	jge    0x415610
  4155d1:	adc    eax,0x6c513752
  4155d6:	mov    esp,0xee0b0664
  4155db:	test   BYTE PTR [eax+0xa],dl
  4155de:	jo     0x41557b
  4155e0:	sub    dl,BYTE PTR [edx]
  4155e2:	push   0xffffffbe
  4155e4:	aas    
  4155e5:	mov    edx,0x8f085f95
  4155ea:	inc    ecx
  4155eb:	add    BYTE PTR [ebp+0x4a],dl
  4155ee:	mov    bl,0x2b
  4155f0:	outs   dx,DWORD PTR ds:[esi]
  4155f1:	mov    bh,0xa2
  4155f3:	add    dl,BYTE PTR [ebx]
  4155f5:	loop   0x415585
  4155f7:	and    bh,BYTE PTR [ebx-0x8802487]
  4155fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155fe:	mov    ebx,0x1f97cb63
  415603:	sti    
  415604:	pop    ss
  415605:	jo     0x4155cc
  415607:	adc    esp,ebx
  415609:	ret    0xd540
  41560c:	cmp    dl,dh
  41560e:	or     cl,0x3b
  415611:	ret    
  415612:	dec    eax
  415613:	push   esi
  415614:	mov    ah,0xae
  415616:	out    dx,eax
  415617:	sar    BYTE PTR [edx+0x20],1
  41561a:	push   0x4a
  41561c:	addr16 xchg ebx,eax
  41561e:	push   cs
  41561f:	rcl    bh,cl
  415621:	jge    0x415680
  415623:	int3   
  415624:	fnsave [ebx]
  415626:	lods   eax,DWORD PTR ds:[esi]
  415627:	mov    edx,0x924ec950
  41562c:	scas   al,BYTE PTR es:[edi]
  41562d:	stc    
  41562e:	hlt    
  41562f:	outs   dx,DWORD PTR ds:[esi]
  415630:	ja     0x4155da
  415632:	out    dx,eax
  415633:	nop
  415634:	mov    ds:0x2ea0c695,al
  415639:	fnstsw WORD PTR [eax+ebp*8+0x54]
  41563d:	repnz das 
  41563f:	scas   al,BYTE PTR es:[edi]
  415640:	jno    0x41567a
  415642:	xor    BYTE PTR [ecx],dl
  415644:	push   es
  415645:	data16 sbb al,0xc6
  415648:	mov    ch,0xef
  41564a:	mov    WORD PTR [ebx-0x5aca1e70],ss
  415650:	mov    bl,0x2f
  415652:	shl    BYTE PTR [ebx+0x5678e50a],cl
  415658:	mov    al,0xde
  41565a:	and    DWORD PTR [ecx-0x79],esp
  41565d:	fadd   DWORD PTR [esi-0x33]
  415660:	test   al,0x83
  415662:	mov    ds:0x2dcbc663,eax
  415667:	push   ss
  415668:	mov    esp,0x153c2732
  41566d:	pop    edx
  41566e:	push   cs
  41566f:	pop    ecx
  415670:	test   al,0xf9
  415672:	adc    ah,dl
  415674:	fadd   DWORD PTR [ecx-0x80]
  415677:	test   al,0x55
  415679:	or     bl,BYTE PTR [edi]
  41567b:	pop    esi
  41567c:	push   DWORD PTR [edx+0x71]
  41567f:	ds push es
  415681:	push   ecx
  415682:	neg    dh
  415684:	fsub   DWORD PTR [edx-0x3ef97a2]
  41568a:	and    al,ah
  41568c:	sbb    edx,eax
  41568e:	mov    cl,0xcb
  415690:	sbb    al,0x7a
  415692:	push   esi
  415693:	cmp    al,0xdd
  415695:	and    BYTE PTR [ecx],bl
  415697:	xor    bl,BYTE PTR [ecx+0x64]
  41569a:	scas   al,BYTE PTR es:[edi]
  41569b:	mov    al,ds:0xb0812ba7
  4156a0:	das    
  4156a1:	and    edx,ebp
  4156a3:	fiadd  DWORD PTR [edi]
  4156a5:	or     cl,al
  4156a7:	pop    ebx
  4156a8:	data16 adc dl,BYTE PTR [ebp-0x3f56de2e]
  4156af:	int3   
  4156b0:	bound  ebp,QWORD PTR [edi-0x2f88b295]
  4156b6:	inc    esp
  4156b7:	retf   0x3200
  4156ba:	sub    bl,BYTE PTR [edx-0x52]
  4156bd:	stc    
  4156be:	sub    eax,0x3b26b6a9
  4156c3:	xchg   ebp,eax
  4156c4:	fistp  WORD PTR [eax-0x4f]
  4156c7:	in     al,0x60
  4156c9:	into   
  4156ca:	jl     0x415746
  4156cc:	cmp    ecx,ebp
  4156ce:	div    cl
  4156d0:	gs inc eax
  4156d2:	mov    esi,0xe2e3e7e
  4156d7:	out    dx,al
  4156d8:	cli    
  4156d9:	out    dx,eax
  4156da:	sub    al,BYTE PTR [ebx+ebp*2+0x3c]
  4156de:	ret    0x4e29
  4156e1:	jecxz  0x415739
  4156e3:	sbb    BYTE PTR [esi-0x6c18e2a1],bh
  4156e9:	and    eax,0xbf7d64c1
  4156ee:	pop    ebx
  4156ef:	mov    esp,0xc3028ab3
  4156f4:	aad    0x8c
  4156f6:	daa    
  4156f7:	push   edi
  4156f8:	test   cl,bh
  4156fa:	or     ebp,ebp
  4156fc:	bound  eax,QWORD PTR [edx-0x29]
  4156ff:	clc    
  415700:	or     DWORD PTR [ebx-0x5fa5434c],esi
  415706:	xchg   edx,eax
  415707:	gs sub eax,eax
  41570a:	xchg   esp,eax
  41570b:	aas    
  41570c:	outs   dx,BYTE PTR ds:[esi]
  41570d:	ficomp WORD PTR [esi-0x4bf4a98d]
  415713:	mov    dh,BYTE PTR [edi+0x6acf1d50]
  415719:	test   DWORD PTR [esi+ebp*1+0x78],edx
  41571d:	sbb    esp,DWORD PTR [edi+0x38]
  415720:	xchg   BYTE PTR [eax-0x386fd1d9],ah
  415726:	outs   dx,BYTE PTR ds:[esi]
  415727:	inc    esi
  415728:	xchg   BYTE PTR [ebp+0x12],bh
  41572b:	mov    bl,0x54
  41572d:	lds    esp,FWORD PTR [esi]
  41572f:	imul   esp,esp,0x91e3a20c
  415735:	jmp    0xccc82c80
  41573a:	fmul   DWORD PTR [esi-0xf]
  41573d:	or     al,0x6f
  41573f:	fmul   QWORD PTR [ebx+0x79]
  415742:	pop    ecx
  415743:	or     BYTE PTR [ebx+0x29],bh
  415746:	mov    edx,0x4bfa8e12
  41574b:	jne    0x415710
  41574d:	sbb    al,0x1b
  41574f:	xchg   ecx,eax
  415750:	mov    al,ds:0x984eedcf
  415755:	nop
  415756:	push   edi
  415757:	sbb    cl,BYTE PTR [edx-0x7eef4df5]
  41575d:	shufps xmm0,xmm7,0x6d
  415761:	inc    edx
  415762:	push   edx
  415763:	sub    bh,bh
  415765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415766:	inc    eax
  415767:	fild   DWORD PTR [ebx]
  415769:	(bad)  
  41576a:	mov    esp,0x549c71d9
  41576f:	pushf  
  415770:	lea    esi,[edx+0x7bc169]
  415776:	in     eax,dx
  415777:	fnstenv [edx]
  415779:	mov    edi,ecx
  41577b:	xchg   esi,eax
  41577c:	dec    edx
  41577d:	dec    esi
  41577e:	adc    DWORD PTR [edx],esp
  415780:	fcomp  DWORD PTR [eax+0x25]
  415783:	es push esp
  415785:	xchg   ecx,eax
  415786:	les    edi,FWORD PTR [edx+eax*2+0x36]
  41578a:	outs   dx,DWORD PTR ds:[esi]
  41578b:	add    bh,BYTE PTR [eax]
  41578d:	mov    ds:0x3cb514fb,eax
  415792:	fwait
  415793:	test   eax,0x96e2f77b
  415798:	in     al,dx
  415799:	mov    edx,0x25734a66
  41579e:	push   cs
  41579f:	shr    edx,1
  4157a1:	repnz in eax,dx
  4157a3:	pushf  
  4157a4:	popa   
  4157a5:	leave  
  4157a6:	jno    0x415737
  4157a8:	daa    
  4157a9:	ins    BYTE PTR es:[edi],dx
  4157aa:	xchg   esp,eax
  4157ab:	leave  
  4157ac:	(bad)  
  4157ad:	test   dh,bl
  4157af:	xchg   ecx,eax
  4157b0:	push   esp
  4157b1:	les    ebx,FWORD PTR [ebx+0x22]
  4157b4:	dec    ecx
  4157b5:	not    DWORD PTR [edx]
  4157b7:	push   ecx
  4157b8:	add    edi,edi
  4157ba:	addr16 js 0x4157dd
  4157bd:	out    0x92,eax
  4157bf:	xchg   BYTE PTR [ecx+eax*8],ch
  4157c2:	fild   QWORD PTR [ebx]
  4157c4:	mov    ds:0xd2909b5d,al
  4157c9:	jnp    0x41574b
  4157cb:	xchg   ecx,eax
  4157cc:	cwde   
  4157cd:	xchg   DWORD PTR [esi*8+0x490a7769],ebp
  4157d4:	(bad)  
  4157d5:	sti    
  4157d6:	dec    edi
  4157d7:	outs   dx,BYTE PTR ds:[esi]
  4157d8:	add    BYTE PTR [esi],dl
  4157da:	iret   
  4157db:	mov    ebx,DWORD PTR [edx+eax*2+0x30]
  4157df:	mov    WORD PTR gs:[eax+0x6e714429],gs
  4157e6:	test   eax,0xc088703c
  4157eb:	sub    cl,bl
  4157ed:	jg     0x415852
  4157ef:	pusha  
  4157f0:	inc    esi
  4157f1:	ins    DWORD PTR es:[edi],dx
  4157f2:	fwait
  4157f3:	(bad)  
  4157f5:	imul   ebp,DWORD PTR [edi-0x38],0xffffff81
  4157f9:	dec    esi
  4157fa:	xchg   ecx,eax
  4157fb:	lahf   
  4157fc:	lods   al,BYTE PTR ds:[esi]
  4157fd:	clc    
  4157fe:	aas    
  4157ff:	bound  esp,QWORD PTR [edi+esi*2-0x3bf324c2]
  415806:	pusha  
  415807:	jns    0x41578e
  415809:	pusha  
  41580a:	adc    al,0xbc
  41580c:	jb     0x4157ea
  41580e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41580f:	mov    dh,0x22
  415811:	sbb    DWORD PTR [esi+ecx*8],esi
  415814:	xchg   edi,eax
  415815:	xrelease mov BYTE PTR [eax],ch
  415818:	pop    esp
  415819:	pop    esp
  41581a:	lods   eax,DWORD PTR ds:[esi]
  41581b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581c:	pop    eax
  41581d:	cli    
  41581e:	sub    dl,BYTE PTR [edi+0x72241e72]
  415824:	scas   eax,DWORD PTR es:[edi]
  415825:	shl    BYTE PTR [eax+0x66],cl
  415828:	pop    ebp
  415829:	enter  0x7a7a,0x47
  41582d:	mov    WORD PTR [edi],fs
  41582f:	and    eax,0xcdd29e35
  415834:	push   ebp
  415835:	xchg   DWORD PTR [esi-0x40],ecx
  415838:	sbb    eax,0xc741d300
  41583d:	(bad)  
  41583e:	icebp  
  41583f:	dec    edx
  415840:	dec    esi
  415841:	mov    ebx,0x4106f59d
  415846:	ret    0x94b6
  415849:	xor    eax,0x94b38c2f
  41584e:	cmp    BYTE PTR [edi+0x715184a9],0x55
  415855:	gs inc sp
  415858:	cmc    
  415859:	cli    
  41585a:	int    0xea
  41585c:	cld    
  41585d:	popf   
  41585e:	mov    al,0x93
  415860:	mov    al,0x43
  415862:	mov    al,ds:0x6d2688dd
  415867:	sub    eax,0xf5a23b4d
  41586c:	push   edi
  41586d:	lahf   
  41586e:	test   BYTE PTR [ebx+ebp*8-0x53a0386d],0x61
  415876:	push   ss
  415877:	mov    al,ds:0xcf7fdb60
  41587c:	sub    esp,DWORD PTR [ebx]
  41587e:	cmp    al,0xf5
  415880:	fimul  DWORD PTR [esp+edx*8]
  415883:	cmc    
  415884:	sub    eax,0x73361666
  415889:	pop    ss
  41588a:	cmp    al,0xb7
  41588c:	or     ebx,esi
  41588e:	pop    esi
  41588f:	adc    ch,dh
  415891:	hlt    
  415892:	adc    al,0xdc
  415894:	inc    ecx
  415895:	jo     0x415833
  415897:	mov    ah,al
  415899:	xchg   esp,eax
  41589a:	adc    edi,DWORD PTR [eax+ebx*4]
  41589d:	sub    DWORD PTR [ecx+0x3d88b43b],edi
  4158a3:	cmp    BYTE PTR [esi+edx*1-0xc],bl
  4158a7:	cmp    DWORD PTR [edx+0x16ac20b],0x3
  4158ae:	(bad)  
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284b5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428551,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428425,0x0
  41597d:	mov    DWORD PTR ds:0x428545,0x1bde
  415987:	mov    DWORD PTR ds:0x428469,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428571,ebx
  4159a1:	cmp    DWORD PTR ds:0x428425,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284b5,0x4283f9
  4159c1:	sub    DWORD PTR ds:0x42842d,0x4284e9
  4159cb:	and    DWORD PTR ds:0x428445,edi
  4159d1:	mov    DWORD PTR ds:0x42845d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284cd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0xf29651cf
  415b02:	iret   
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0x9719c5be
  415b0e:	ret    
  415b0f:	repz cwde 
  415b11:	push   esp
  415b12:	sub    BYTE PTR [ebx],dl
  415b14:	into   
  415b15:	adc    bl,dh
  415b17:	dec    esi
  415b18:	hlt    
  415b19:	jnp    0x415b3c
  415b1b:	or     BYTE PTR [eax+0x14],0xe9
  415b1f:	mov    ah,0x80
  415b21:	mov    edx,0xd436375a
  415b26:	and    cl,BYTE PTR [edx+ebx*4]
  415b29:	sbb    eax,0x5770a023
  415b2e:	and    al,0xd2
  415b30:	add    al,0xd5
  415b32:	mov    al,ds:0xe2ebccb6
  415b37:	leave  
  415b38:	pop    eax
  415b39:	loope  0x415ada
  415b3b:	clc    
  415b3c:	pop    ds
  415b3d:	and    dh,BYTE PTR [ecx-0x77a18b88]
  415b43:	rol    ebp,cl
  415b45:	lods   al,BYTE PTR ds:[esi]
  415b46:	jb     0x415b59
  415b48:	cmp    ebp,ebx
  415b4a:	jo     0x415bb6
  415b4c:	aas    
  415b4d:	xor    cl,BYTE PTR [esi+ecx*8]
  415b50:	xor    eax,0x975945e9
  415b55:	xlat   BYTE PTR ds:[ebx]
  415b56:	dec    esi
  415b57:	scas   eax,DWORD PTR es:[edi]
  415b58:	ss jb  0x415b8b
  415b5b:	sbb    esp,DWORD PTR [ebp+0x18146b55]
  415b61:	stc    
  415b62:	je     0x415b39
  415b64:	jecxz  0x415b87
  415b66:	xor    ah,al
  415b68:	push   es
  415b69:	xchg   eax,edi
  415b6b:	leave  
  415b6c:	pop    ebx
  415b6d:	push   0x98c1ba08
  415b72:	mov    eax,ds:0x6a75f122
  415b77:	pusha  
  415b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b79:	stc    
  415b7a:	push   edi
  415b7b:	fidivr DWORD PTR ss:[ecx+0x7060d6a1]
  415b82:	cwde   
  415b83:	jae    0x415b38
  415b85:	xor    eax,0x68e000b3
  415b8a:	(bad)
  415b8e:	and    esi,ebp
  415b90:	in     eax,0x59
  415b92:	sbb    al,0x4
  415b94:	mov    ecx,DWORD PTR [ebx]
  415b96:	aaa    
  415b97:	pop    edx
  415b98:	mov    ch,0x58
  415b9a:	adc    ebx,ecx
  415b9c:	mov    ds:0x48eada5c,eax
  415ba1:	add    al,0xa0
  415ba3:	test   DWORD PTR ds:0x78490d58,0x906cf43f
  415bad:	ret    0x3fbe
  415bb0:	sub    al,0xda
  415bb2:	pusha  
  415bb3:	push   edi
  415bb4:	aam    0xe6
  415bb6:	dec    edi
  415bb7:	or     al,0xed
  415bb9:	iret   
  415bba:	add    al,ch
  415bbc:	xchg   ah,dl
  415bbe:	mov    edi,0x3cd84467
  415bc3:	xor    BYTE PTR [ebp+0x6105cd47],ah
  415bc9:	stos   DWORD PTR es:[edi],eax
  415bca:	shl    BYTE PTR [edi+0x1],0x76
  415bce:	fistp  DWORD PTR [edx-0x28]
  415bd1:	jp     0x415bd4
  415bd3:	and    DWORD PTR [ebx+0x78],ebp
  415bd6:	fsubr  st,st(1)
  415bd8:	push   0x50
  415bda:	xchg   BYTE PTR ds:0x11474cfb,bh
  415be0:	jae    0x415bb7
  415be2:	jg     0x415c4e
  415be4:	sub    BYTE PTR [edx+0x24],0xdf
  415be8:	popa   
  415be9:	and    ebp,0x14
  415bec:	and    eax,DWORD PTR [esi+eax*4+0x59edd852]
  415bf3:	shl    BYTE PTR [bp+si+0x5b],cl
  415bf7:	out    dx,eax
  415bf8:	xchg   ebp,eax
  415bf9:	or     cl,BYTE PTR [eax+0x65c47dd1]
  415bff:	jb     0x415bcb
  415c01:	dec    BYTE PTR [ebp-0x33]
  415c04:	cdq    
  415c05:	cli    
  415c06:	mov    ah,0xd6
  415c08:	fbld   TBYTE PTR [ebp+0x3a49aa91]
  415c0e:	repnz or eax,DWORD PTR [ebp-0x64b69fb1]
  415c15:	(bad)  
  415c16:	out    0x3,eax
  415c18:	xchg   edx,eax
  415c19:	out    dx,eax
  415c1a:	or     eax,DWORD PTR [edi-0x5d]
  415c1d:	push   cs
  415c1e:	sahf   
  415c1f:	cmp    BYTE PTR [edi],ah
  415c21:	inc    edx
  415c22:	inc    eax
  415c23:	cmp    bl,BYTE PTR [edx]
  415c25:	mov    ch,0x6a
  415c27:	mov    WORD PTR [ebx+0x78],gs
  415c2a:	lahf   
  415c2b:	jl     0x415c71
  415c2d:	cmp    ebp,DWORD PTR [ebx]
  415c2f:	loop   0x415c33
  415c31:	loop   0x415c8a
  415c33:	adc    al,ah
  415c35:	lds    edx,FWORD PTR [ebx]
  415c37:	dec    esp
  415c38:	fmul   st,st(0)
  415c3a:	data16 (bad) 
  415c3c:	bound  ebp,QWORD PTR [ebp+0x50]
  415c3f:	cdq    
  415c40:	leave  
  415c41:	push   edx
  415c42:	bound  edx,QWORD PTR [edx-0xe]
  415c45:	add    BYTE PTR [ebx+edx*2-0x8],cl
  415c49:	inc    esp
  415c4a:	cld    
  415c4b:	lahf   
  415c4c:	and    al,0x81
  415c4e:	ficomp DWORD PTR [edi-0xd580139]
  415c54:	stc    
  415c55:	add    DWORD PTR [ebp-0x7cde3403],0xe553e4ca
  415c5f:	jo     0x415c0f
  415c61:	jbe    0x415cb9
  415c63:	mov    edi,0x7615243
  415c68:	jo     0x415cb4
  415c6a:	aam    0xac
  415c6c:	dec    ecx
  415c6d:	dec    esp
  415c6e:	mov    esi,0x51b716ff
  415c73:	loope  0x415ce3
  415c75:	pop    ds
  415c76:	daa    
  415c77:	xchg   BYTE PTR [ebx-0x39d0ad53],dh
  415c7d:	add    eax,0x9dde6ae7
  415c82:	add    dl,ch
  415c84:	fistp  QWORD PTR [eax+0x1]
  415c87:	mov    dl,0x88
  415c89:	aaa    
  415c8a:	pop    ecx
  415c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c8c:	lock in eax,0x17
  415c8f:	mov    ss,eax
  415c91:	add    BYTE PTR [edi-0x349cef28],dl
  415c97:	mov    esp,0x22edef2
  415c9c:	or     ebx,DWORD PTR [eax+ebp*4+0x85890ab]
  415ca3:	jno    0x415d22
  415ca5:	mov    dh,0xe6
  415ca7:	aam    0xbe
  415ca9:	jne    0x415cde
  415cab:	jnp    0x415c5d
  415cad:	(bad)  
  415cae:	and    bh,dh
  415cb0:	inc    esi
  415cb1:	mov    dl,0x78
  415cb3:	into   
  415cb4:	add    eax,0x4f2a77c9
  415cb9:	out    0x17,al
  415cbb:	mov    BYTE PTR [ebx+0x2029a38f],0x67
  415cc2:	xchg   esi,eax
  415cc3:	lds    ebp,FWORD PTR [ebx+0x4d]
  415cc6:	push   edi
  415cc7:	xor    ebx,DWORD PTR [eax-0x28]
  415cca:	jecxz  0x415d41
  415ccc:	test   DWORD PTR [ebx-0x18],0xa1419257
  415cd3:	neg    BYTE PTR [ecx]
  415cd5:	out    0x24,al
  415cd7:	sub    ebx,DWORD PTR [edi+ebp*2+0x59]
  415cdb:	adc    al,0x6c
  415cdd:	fidivr WORD PTR [ecx]
  415cdf:	mov    edx,0x704804e9
  415ce4:	aam    0xb6
  415ce6:	fs xchg ecx,eax
  415ce8:	add    al,0x5f
  415cea:	lock mov ebp,0xec0b22f
  415cf0:	jns    0x415c77
  415cf2:	es dec edx
  415cf4:	aas    
  415cf5:	test   al,0x5
  415cf7:	fadd   DWORD PTR [ebp+0x7db68dc1]
  415cfd:	xchg   ch,dl
  415cff:	xchg   ecx,eax
  415d00:	aaa    
  415d01:	xrelease xchg BYTE PTR [edx],al
  415d04:	ins    BYTE PTR es:[edi],dx
  415d05:	mov    bl,0x2c
  415d07:	daa    
  415d08:	mov    bh,0xa1
  415d0a:	xor    ah,BYTE PTR [ecx-0x28d36d13]
  415d10:	js     0x415ce9
  415d12:	adc    DWORD PTR [edi-0x3e],eax
  415d15:	(bad)  
  415d16:	mov    es,WORD PTR [ecx]
  415d18:	mov    ecx,0x7faba3ff
  415d1d:	test   al,0x57
  415d1f:	sub    eax,0xa42567f4
  415d24:	ja     0x415d91
  415d26:	jp     0x415d28
  415d28:	inc    esi
  415d29:	clc    
  415d2a:	adc    al,0x4
  415d2c:	mov    eax,ds:0xb7f434fe
  415d31:	(bad)  
  415d32:	sbb    DWORD PTR [ebp+0xc],eax
  415d35:	test   BYTE PTR [eax-0x2f42dec7],al
  415d3b:	add    BYTE PTR [edi],0x2f
  415d3e:	int3   
  415d3f:	xor    DWORD PTR [edi-0x77],edi
  415d42:	sbb    DWORD PTR [edi+0x2fc98684],0x33f1b408
  415d4c:	mov    BYTE PTR [esi+0x1a12cd21],ch
  415d52:	loope  0x415d2b
  415d54:	fwait
  415d55:	xor    BYTE PTR [edx],bh
  415d57:	add    eax,0xde7ab4ae
  415d5c:	add    BYTE PTR [edx+0x27f21724],0x65
  415d63:	inc    esi
  415d64:	inc    ecx
  415d65:	pop    edi
  415d66:	jecxz  0x415d80
  415d68:	arpl   bp,di
  415d6a:	pop    es
  415d6b:	jo     0x415d90
  415d6d:	pop    edx
  415d6e:	xor    ecx,ebx
  415d70:	ret    0x268f
  415d73:	add    ebp,DWORD PTR [ecx+0x2b]
  415d76:	jne    0x415d9c
  415d78:	adc    DWORD PTR [ebx+0x46],0x11e63bab
  415d7f:	out    dx,al
  415d80:	jmp    0xa340e818
  415d85:	mov    edi,DWORD PTR [eax]
  415d87:	shl    DWORD PTR [edx],cl
  415d89:	add    ebp,DWORD PTR [esi-0x46a61344]
  415d8f:	fcomp  DWORD PTR [ecx]
  415d91:	nop
  415d92:	pop    ss
  415d93:	out    dx,al
  415d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d95:	cmp    al,0xee
  415d97:	sub    ch,bh
  415d99:	add    DWORD PTR [ecx+0x4d],edi
  415d9c:	in     al,dx
  415d9d:	mov    edi,0xeeae2df7
  415da2:	call   0xb62e:0xe26d3f78
  415da9:	mov    WORD PTR [edi],es
  415dab:	das    
  415dac:	cld    
  415dad:	and    DWORD PTR [eax+0x6616cd02],ebx
  415db3:	xchg   esp,eax
  415db4:	xor    ebp,ebx
  415db6:	sar    ecx,1
  415db8:	cmp    eax,esp
  415dba:	inc    edi
  415dbb:	lahf   
  415dbc:	xor    DWORD PTR [ebx-0x56987878],ecx
  415dc2:	mov    ds:0x200161d7,al
  415dc7:	inc    esp
  415dc8:	inc    esp
  415dc9:	xchg   esp,eax
  415dca:	mov    es,WORD PTR [edx]
  415dcc:	fisubr WORD PTR [esi+0x50dc3684]
  415dd2:	jbe    0x415d66
  415dd4:	jbe    0x415df8
  415dd6:	(bad)  
  415dd7:	(bad)  
  415dd8:	xchg   esp,eax
  415dd9:	sbb    eax,ecx
  415ddb:	dec    edi
  415ddc:	outs   dx,DWORD PTR ds:[esi]
  415ddd:	stos   BYTE PTR es:[edi],al
  415dde:	pop    ecx
  415ddf:	ret    0x8193
  415de2:	mov    bh,0x60
  415de4:	dec    edi
  415de5:	xchg   esi,eax
  415de6:	mov    edx,0xf7bd7b6e
  415deb:	cli    
  415dec:	leave  
  415ded:	mov    BYTE PTR [ebx],0x25
  415df0:	lods   eax,DWORD PTR ds:[esi]
  415df1:	and    eax,0x23007fb0
  415df6:	xchg   ebp,eax
  415df7:	data16 xchg BYTE PTR [esi-0x60c23898],ch
  415dfe:	add    BYTE PTR [ebx],al
  415e00:	mov    ecx,0xb7a28e5
  415e05:	adc    BYTE PTR [ebp+0x36],bl
  415e08:	mov    ds:0xec69c3e6,eax
  415e0d:	imul   edx,esp,0x48e479ed
  415e13:	mov    cl,cl
  415e15:	and    al,0x86
  415e17:	add    al,0x39
  415e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1a:	sub    BYTE PTR [esi],al
  415e1c:	inc    ebp
  415e1d:	das    
  415e1e:	dec    esi
  415e1f:	jge    0x415e33
  415e21:	and    DWORD PTR [esi],esp
  415e23:	adc    ch,BYTE PTR [edi]
  415e25:	sbb    eax,0x3303c4c7
  415e2a:	mov    ch,0xf7
  415e2c:	bound  eax,QWORD PTR es:[edi]
  415e2f:	data16 cld 
  415e31:	push   DWORD PTR [esi-0x6c6cef27]
  415e37:	std    
  415e38:	pop    ebp
  415e39:	fsubr  st,st(7)
  415e3b:	mov    edi,0x6293c2d4
  415e40:	shl    DWORD PTR [ebp+ebp*4-0x6b],0x48
  415e45:	xchg   esp,eax
  415e46:	popa   
  415e47:	aam    0x9a
  415e49:	sbb    DWORD PTR [esi+ecx*8-0x57],esi
  415e4d:	cli    
  415e4e:	mov    al,0x76
  415e50:	mov    gs,WORD PTR [edx+0x6984d147]
  415e56:	mov    ch,0x6a
  415e58:	aad    0x1c
  415e5a:	xor    dl,BYTE PTR [edx-0x19e471ae]
  415e60:	div    DWORD PTR [esi]
  415e62:	ins    DWORD PTR es:[edi],dx
  415e63:	arpl   bp,si
  415e65:	(bad)  
  415e66:	cli    
  415e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e68:	fs or  eax,0xf9a1ca81
  415e6e:	fst    QWORD PTR [ecx-0x178555c]
  415e74:	pop    ebp
  415e75:	ins    DWORD PTR es:[edi],dx
  415e76:	mov    dh,0x23
  415e78:	mov    eax,ds:0x8b8a1fa3
  415e7d:	ror    DWORD PTR [ebp-0x16],1
  415e80:	into   
  415e81:	out    0x52,eax
  415e83:	aas    
  415e84:	mov    ecx,0xec31ec4f
  415e89:	mov    ds:0xfb996f89,al
  415e8e:	mov    ebp,0x31373c1f
  415e93:	push   ecx
  415e94:	sbb    al,0xde
  415e96:	or     bh,dh
  415e98:	sti    
  415e99:	adc    edi,DWORD PTR [esi-0x25]
  415e9c:	cmc    
  415e9d:	jge    0x415e49
  415e9f:	or     al,0x8b
  415ea1:	mov    cl,0xf7
  415ea3:	es mov ecx,0x54ae0839
  415ea9:	or     edi,DWORD PTR [edi+0x6c]
  415eac:	stos   DWORD PTR es:[edi],eax
  415ead:	outs   dx,DWORD PTR ds:[esi]
  415eae:	loopne 0x415f0a
  415eb0:	pop    edx
  415eb1:	and    BYTE PTR [ebx-0x6f],0x85
  415eb5:	jo     0x415e71
  415eb7:	sub    DWORD PTR [ebp-0x13],ebp
  415eba:	jecxz  0x415e59
  415ebc:	push   ss
  415ebd:	pop    edi
  415ebe:	push   ecx
  415ebf:	mov    esp,0xcf702cd
  415ec4:	add    esi,ebx
  415ec6:	mov    eax,ds:0x16b09ce9
  415ecb:	and    edx,DWORD PTR ds:0x57df8a3f
  415ed1:	xchg   BYTE PTR [eax-0x62],cl
  415ed4:	loopne 0x415f35
  415ed6:	jmp    0x415f3c
  415ed8:	call   0xed75eb74
  415edd:	and    DWORD PTR [ecx-0x24],0x46ba4a5d
  415ee4:	retf   
  415ee5:	or     al,0xbb
  415ee7:	mov    al,BYTE PTR [esi]
  415ee9:	fdivr  QWORD PTR [esi]
  415eeb:	push   esi
  415eec:	lods   al,BYTE PTR ds:[esi]
  415eed:	sbb    al,0x4f
  415eef:	fadd   QWORD PTR [edi-0x769fb823]
  415ef5:	stc    
  415ef6:	sub    BYTE PTR [ebx],0xd0
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0xc1819ee3
  415f32:	iret   
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x95
  415f3c:	out    0xdc,al
  415f3e:	ret    
  415f3f:	cmp    al,0xe0
  415f41:	mov    ds:0x87200bf5,al
  415f46:	(bad)  [ebx+eax*1-0xe]
  415f4a:	(bad)  
  415f4b:	(bad)  
  415f4c:	push   0xd28f2342
  415f51:	fstp   st(4)
  415f53:	xor    BYTE PTR [edx+eax*2-0x5eed3629],bh
  415f5a:	fcomp  QWORD PTR [esi+0x6cea7e07]
  415f60:	in     eax,0x88
  415f62:	sub    esi,DWORD PTR [eax]
  415f64:	popa   
  415f65:	jp     0x415f27
  415f67:	nop
  415f68:	lods   al,BYTE PTR ds:[esi]
  415f69:	out    dx,eax
  415f6a:	cld    
  415f6b:	test   BYTE PTR [ebx+ebx*2],dh
  415f6e:	mov    eax,0xcb6519a5
  415f73:	and    BYTE PTR [esi-0xe],dh
  415f76:	xchg   esp,eax
  415f77:	sub    DWORD PTR [edx],ebp
  415f79:	stos   BYTE PTR es:[edi],al
  415f7a:	dec    edx
  415f7b:	sub    edx,edx
  415f7d:	xchg   ebp,eax
  415f7e:	jae    0x415f05
  415f80:	mov    ds,esp
  415f82:	retf   0xb98
  415f85:	add    BYTE PTR [edx],ah
  415f87:	ficomp DWORD PTR [ebp+0x2bb0910f]
  415f8d:	adc    dh,BYTE PTR [eax]
  415f8f:	std    
  415f90:	ja     0x415fe6
  415f92:	sub    al,ch
  415f94:	dec    ecx
  415f95:	mov    eax,ds:0xaedddc7d
  415f9a:	xor    eax,esi
  415f9c:	imul   esi,edx,0xacf943e1
  415fa2:	jbe    0x415fd5
  415fa4:	jp     0x415f28
  415fa6:	sub    esi,DWORD PTR [ebx+0x1928577d]
  415fac:	sbb    bl,dh
  415fae:	inc    edx
  415faf:	dec    edx
  415fb0:	adc    ebx,DWORD PTR [ebx-0x13]
  415fb3:	pop    ecx
  415fb4:	jp     0x415f64
  415fb6:	xchg   esp,eax
  415fb7:	in     al,dx
  415fb8:	repnz ss ins DWORD PTR es:[edi],dx
  415fbb:	xchg   esi,eax
  415fbc:	jbe    0x415fcc
  415fbe:	jp     0x416002
  415fc0:	jle    0x415fa7
  415fc2:	js     0x415f49
  415fc4:	pop    ebp
  415fc5:	inc    edi
  415fc6:	addr16 jmp 0x816ce7fc
  415fcc:	aad    0xe2
  415fce:	pop    esp
  415fcf:	and    DWORD PTR [eax+0x35],edi
  415fd2:	leave  
  415fd3:	dec    edi
  415fd4:	aam    0xe8
  415fd6:	lahf   
  415fd7:	nop
  415fd8:	jmp    0x8efe:0xb34d4870
  415fdf:	outs   dx,DWORD PTR ds:[esi]
  415fe0:	nop
  415fe1:	iret   
  415fe2:	add    DWORD PTR [edi+0x76c9c0b2],edx
  415fe8:	test   DWORD PTR [edi-0x40],0x78181c92
  415fef:	and    DWORD PTR [ebp-0x34],0x22
  415ff3:	adc    BYTE PTR [edi+0x35],ah
  415ff6:	mov    ebx,0x6dd15a4c
  415ffb:	push   esp
  415ffc:	retf   0xe4f2
  415fff:	inc    edi
  416000:	xchg   esi,eax
  416001:	add    al,0x3c
  416003:	aas    
  416004:	inc    ebx
  416005:	cld    
  416006:	mov    DWORD PTR [esi],esp
  416008:	cmc    
  416009:	stc    
  41600a:	addr16 add al,0x15
  41600d:	xchg   BYTE PTR [edx-0x40],dl
  416010:	mov    bl,0xc3
  416012:	mov    eax,ds:0xd548ee54
  416017:	and    eax,0x92d5adc2
  41601c:	inc    ecx
  41601d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41601e:	or     bh,0xaa
  416021:	push   ebp
  416022:	stc    
  416023:	shl    BYTE PTR [ebx],1
  416025:	ror    BYTE PTR [ebx+0x431a2db8],0xb6
  41602c:	enter  0xb768,0x74
  416030:	cwde   
  416031:	cmp    eax,0x5b71bd1c
  416036:	ret    0xd6
  416039:	mov    ds:0xdf9694bf,al
  41603e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603f:	retf   
  416040:	xchg   ecx,eax
  416041:	sbb    edx,edx
  416043:	adc    ch,BYTE PTR [esi+0x3e5b272a]
  416049:	js     0x415fde
  41604b:	stos   DWORD PTR es:[edi],eax
  41604c:	or     edi,DWORD PTR ds:0x4ae75eef
  416052:	test   DWORD PTR [edi+0x2e837db2],edx
  416058:	int    0xd8
  41605a:	mov    esi,DWORD PTR [edx]
  41605c:	std    
  41605d:	mov    cl,0x8e
  41605f:	sub    ebx,ecx
  416061:	shl    al,1
  416063:	mov    edi,DWORD PTR [ebp-0x3a]
  416066:	fisttp DWORD PTR [edi-0x57]
  416069:	adc    bl,ch
  41606b:	sbb    edi,esi
  41606d:	dec    ecx
  41606e:	inc    edx
  41606f:	pop    ebp
  416070:	scas   al,BYTE PTR es:[edi]
  416071:	pop    edx
  416072:	neg    ah
  416074:	mov    ch,BYTE PTR [edi]
  416076:	ds pop ds
  416078:	xor    ebp,DWORD PTR [esi]
  41607a:	pop    ecx
  41607b:	inc    ebp
  41607c:	(bad)  
  41607d:	push   0xcccabd36
  416082:	xor    DWORD PTR [ebp-0x471e8172],ebx
  416088:	sub    eax,0x3235a553
  41608d:	jbe    0x4160ab
  41608f:	and    eax,0x8f9f5bb0
  416094:	cmp    DWORD PTR [ecx-0x16],esi
  416097:	cwde   
  416098:	mov    ds:0x2fb6d895,eax
  41609d:	pop    ecx
  41609e:	fsubr  QWORD PTR [esi-0xc555097]
  4160a4:	in     eax,0xab
  4160a6:	cmp    BYTE PTR [edx+0x29e41bdf],ch
  4160ac:	es pushf 
  4160ae:	mov    al,0x72
  4160b0:	je     0x41603f
  4160b2:	add    ch,bh
  4160b4:	lahf   
  4160b5:	ds add esp,ecx
  4160b8:	scas   eax,DWORD PTR es:[edi]
  4160b9:	pop    ds
  4160ba:	mov    ds:0xab3dfeb6,al
  4160bf:	test   BYTE PTR [ebx-0x4f2ca2c9],al
  4160c5:	adc    eax,0xcb8c9345
  4160ca:	sub    al,BYTE PTR [edi]
  4160cc:	lahf   
  4160cd:	dec    edx
  4160ce:	shl    BYTE PTR [edx+ebp*1+0x78],cl
  4160d2:	or     BYTE PTR [eax+0x1ef81e8c],al
  4160d8:	push   edx
  4160d9:	lahf   
  4160da:	jae    0x41609d
  4160dc:	pop    ss
  4160dd:	call   0xbfab:0x8af3a85e
  4160e4:	sbb    al,0x68
  4160e6:	pop    ds
  4160e7:	(bad)  
  4160e8:	fld    DWORD PTR [edi-0x12]
  4160eb:	rcr    DWORD PTR [esi-0x13f890fa],cl
  4160f1:	xchg   dl,al
  4160f3:	pop    edx
  4160f4:	xor    BYTE PTR [eax-0x45a10c62],bl
  4160fa:	jo     0x41614e
  4160fc:	sar    esp,cl
  4160fe:	dec    ebp
  4160ff:	mov    ah,0x3f
  416101:	sub    BYTE PTR [edi+0x4],al
  416104:	inc    edi
  416105:	sub    al,0xef
  416107:	xor    edx,0x47ca5a20
  41610d:	aam    0x2
  41610f:	outs   dx,BYTE PTR ds:[esi]
  416110:	clc    
  416111:	sahf   
  416112:	jp     0x416159
  416114:	push   0xa26e34c1
  416119:	rol    BYTE PTR [edx],0x87
  41611c:	aam    0x93
  41611e:	lock retf 0xcf8
  416122:	adc    ebp,edx
  416124:	mov    bl,0x59
  416126:	int3   
  416127:	fwait
  416128:	cdq    
  416129:	sbb    DWORD PTR [ecx+edx*8],ecx
  41612c:	dec    ecx
  41612d:	xchg   edi,eax
  41612e:	in     eax,dx
  41612f:	scas   al,BYTE PTR es:[edi]
  416130:	imul   esp,DWORD PTR [ebp+0x190850b],0x4
  416137:	in     al,dx
  416138:	xor    bh,dh
  41613a:	es add eax,0x4e9a2e82
  416140:	cmp    bh,BYTE PTR [edi]
  416142:	inc    ecx
  416143:	call   0xad148229
  416148:	add    eax,0xe5a065c3
  41614d:	fwait
  41614e:	cs jecxz 0x41614f
  416151:	into   
  416152:	iret   
  416153:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416155:	inc    edx
  416156:	cmc    
  416157:	fidiv  WORD PTR [ebx]
  416159:	aas    
  41615a:	(bad)  
  41615b:	nop
  41615c:	mov    ch,0x28
  41615e:	mov    al,ds:0x8e6efa5
  416163:	push   ebp
  416164:	jle    0x416123
  416166:	push   edx
  416167:	adc    DWORD PTR [edi-0x23],esi
  41616a:	rol    BYTE PTR [ecx+0x11fb833e],1
  416170:	add    eax,0xdf35546c
  416175:	sbb    eax,0x33cc4c94
  41617a:	les    ebp,FWORD PTR [edx+edi*2+0x1d]
  41617e:	inc    dx
  416180:	xor    BYTE PTR cs:[eax-0x40656e9e],ah
  416187:	push   ebx
  416188:	sub    ebx,DWORD PTR [ebp-0x503945c9]
  41618e:	(bad)  
  41618f:	mov    al,ds:0xc7881ba1
  416194:	retf   
  416195:	dec    ebp
  416196:	mov    WORD PTR [ebx-0x717b7404],cs
  41619c:	mov    ds:0xb395a70c,eax
  4161a1:	mov    eax,ds:0x81daa0f6
  4161a6:	pop    edx
  4161a7:	or     bh,BYTE PTR [ebx-0x1f4d21c]
  4161ad:	lods   eax,DWORD PTR ds:[esi]
  4161ae:	scas   al,BYTE PTR es:[edi]
  4161af:	pushf  
  4161b0:	hlt    
  4161b1:	pop    eax
  4161b2:	or     edi,DWORD PTR [edx-0x77]
  4161b5:	mov    ds:0xcf36d0e5,al
  4161ba:	ds dec eax
  4161bc:	xchg   esi,eax
  4161bd:	dec    edx
  4161be:	inc    edx
  4161bf:	(bad)  
  4161c0:	cli    
  4161c1:	fsubr  QWORD PTR [ecx+ebx*1]
  4161c4:	cmp    al,0xce
  4161c6:	in     eax,0x2c
  4161c8:	mov    bl,0x9f
  4161ca:	std    
  4161cb:	dec    ecx
  4161cc:	jecxz  0x416155
  4161ce:	add    eax,0x39b64eb
  4161d3:	pop    ebx
  4161d4:	add    BYTE PTR [ebx-0x7356a52b],0x94
  4161db:	inc    esi
  4161dc:	rcl    BYTE PTR [eax-0x30],0xd6
  4161e0:	add    BYTE PTR [edx+eax*4],al
  4161e3:	mov    ds:0x8440e0c6,eax
  4161e8:	mov    eax,0x43701513
  4161ed:	push   esp
  4161ee:	and    bh,bl
  4161f0:	jnp    0x41626d
  4161f2:	ja     0x416242
  4161f4:	stc    
  4161f5:	ret    0x8546
  4161f8:	and    DWORD PTR [edx],0x4c
  4161fb:	jns    0x416206
  4161fd:	and    eax,0x5de8f835
  416202:	inc    ebp
  416203:	mov    dh,bh
  416205:	pop    es
  416206:	jo     0x416204
  416208:	sub    ch,BYTE PTR [ecx+ecx*8-0x76]
  41620c:	xor    al,0x8b
  41620e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41620f:	push   0xffffffdc
  416211:	fmul   QWORD PTR [ebx]
  416213:	mov    ds:0x74308b23,al
  416218:	fld    st(4)
  41621a:	fldcw  WORD PTR [edx+0x7964a6d]
  416220:	push   ecx
  416221:	sbb    eax,0xcf5db584
  416226:	adc    dl,bl
  416228:	das    
  416229:	jg     0x416222
  41622b:	xchg   edi,eax
  41622c:	push   esp
  41622d:	adc    eax,0x8c863dd2
  416232:	and    DWORD PTR [edi+0x622d83f7],esp
  416238:	daa    
  416239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623a:	xor    dl,BYTE PTR [edi+esi*1+0x5]
  41623e:	loopne 0x4161f0
  416240:	dec    esp
  416241:	add    dh,BYTE PTR [eax+0xf06079d]
  416247:	inc    edx
  416248:	mov    al,ds:0xab5183ee
  41624d:	dec    edx
  41624e:	mov    ds:0x94843eda,eax
  416253:	jnp    0x4162cd
  416255:	adc    al,0xb2
  416257:	add    DWORD PTR [ebp-0x29c4e2e6],esp
  41625d:	dec    esi
  41625e:	cwde   
  41625f:	retf   0xc483
  416262:	pop    ebp
  416263:	retf   0x7fc1
  416266:	loop   0x416237
  416268:	and    al,0xf9
  41626a:	retf   0xf5fe
  41626d:	jne    0x416261
  41626f:	sbb    ecx,edi
  416271:	or     eax,0x698dfa6d
  416276:	push   eax
  416277:	test   BYTE PTR [eax+ebx*8],bl
  41627a:	mov    esi,0xa9567237
  41627f:	cmp    edi,DWORD PTR [edx+ecx*8-0x30e11d51]
  416286:	lods   al,BYTE PTR ds:[esi]
  416287:	sub    DWORD PTR [ecx+0x33],ecx
  41628a:	fisttp QWORD PTR [eax-0x26]
  41628d:	or     ah,BYTE PTR [ebp+0x2f]
  416290:	mov    BYTE PTR [ecx],bh
  416292:	pop    gs
  416294:	retf   
  416295:	pop    es
  416296:	div    BYTE PTR [eax]
  416298:	push   eax
  416299:	pop    esi
  41629a:	mov    ecx,0x3c1d881a
  41629f:	imul   ebp,DWORD PTR [esi],0xffffffde
  4162a2:	mov    esi,0x1bd9ab6c
  4162a7:	push   ds
  4162a8:	push   es
  4162a9:	inc    ebx
  4162aa:	fcmovbe st,st(5)
  4162ac:	xor    dl,BYTE PTR [edx+0x1a]
  4162af:	fbld   TBYTE PTR [esi+0x429aa50c]
  4162b5:	jge    0x416316
  4162b7:	xchg   edi,eax
  4162b8:	ror    DWORD PTR [esi],cl
  4162ba:	lfs    esi,FWORD PTR [ecx+eax*4]
  4162be:	push   esp
  4162bf:	sub    ebx,ebp
  4162c1:	xchg   ebx,eax
  4162c2:	jne    0x416284
  4162c4:	jl     0x41632c
  4162c6:	xor    eax,0x118d81aa
  4162cb:	add    al,0xda
  4162cd:	pop    ds
  4162ce:	xchg   ecx,eax
  4162cf:	pushf  
  4162d0:	ins    DWORD PTR es:[edi],dx
  4162d1:	popf   
  4162d2:	shl    DWORD PTR [esi],0xd3
  4162d5:	addr16 adc eax,0x3bd9b183
  4162db:	adc    DWORD PTR [edx-0x51],ecx
  4162de:	push   ebp
  4162df:	enter  0xdc2e,0xdf
  4162e3:	xchg   ebp,eax
  4162e4:	add    DWORD PTR [esi-0x7f],eax
  4162e7:	iret   
  4162e8:	xchg   DWORD PTR [eax+0x46d323c9],edi
  4162ee:	jo     0x4162ee
  4162f0:	pusha  
  4162f1:	jl     0x41633c
  4162f3:	cdq    
  4162f4:	xor    esi,esi
  4162f6:	je     0x4162cf
  4162f8:	pop    esi
  4162f9:	adc    DWORD PTR [ecx+ecx*1-0xf8b73db],ebp
  416300:	cmp    BYTE PTR [edi-0x4594cb1e],0x14
  416307:	mov    al,ds:0x49abd418
  41630c:	ds imul ecx
  41630f:	pushf  
  416310:	add    ah,BYTE PTR [esi]
  416312:	and    ebp,esp
  416314:	pop    esp
  416315:	cmp    cl,bh
  416317:	pop    ecx
  416318:	mov    ebx,0x576fd965
  41631d:	mov    ds:0xa6ffd2bc,al
  416322:	out    dx,al
  416323:	into   
  416324:	pop    edx
  416325:	pop    esp
  416326:	jne    0x4162ef
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	in     eax,dx
  416385:	pusha  
  416386:	mov    ds:0xc0cc3c90,al
  41638b:	mov    esi,0xbebec48e
  416390:	pop    eax
  416391:	je     0x4163eb
  416393:	ret    0x3fd5
  416396:	jmp    0x4163f3
  416398:	xchg   edi,eax
  416399:	loope  0x4163df
  41639b:	les    edx,FWORD PTR [edi+0x767088c9]
  4163a1:	call   0x5230:0xf68d66d4
  4163a8:	js     0x416333
  4163aa:	adc    ecx,DWORD PTR [eax+0x292aff4]
  4163b0:	aam    0x9
  4163b2:	sbb    dh,BYTE PTR [ebp+edx*1-0x42]
  4163b6:	or     BYTE PTR [ebx],0x55
  4163b9:	jge    0x416369
  4163bb:	or     eax,0x468762af
  4163c0:	add    DWORD PTR [ecx+0xd],ecx
  4163c3:	xchg   edi,eax
  4163c4:	ja     0x4163df
  4163c6:	into   
  4163c7:	inc    esi
  4163c8:	dec    ebx
  4163c9:	mov    eax,ds:0x1290e95d
  4163ce:	xor    al,al
  4163d0:	xor    dl,ch
  4163d2:	mov    ebp,0x510c1285
  4163d7:	pop    ebp
  4163d8:	push   edx
  4163d9:	out    dx,eax
  4163da:	jb     0x4163b7
  4163dc:	loopne 0x416384
  4163de:	or     al,0x5e
  4163e0:	nop
  4163e1:	mov    ebp,DWORD PTR [edi-0x69]
  4163e4:	cmc    
  4163e5:	xor    DWORD PTR [ebx+0x5b],ebx
  4163e8:	xchg   dh,dl
  4163ea:	das    
  4163eb:	fidiv  DWORD PTR [edi]
  4163ed:	xchg   esi,eax
  4163ee:	push   esi
  4163ef:	test   al,0x60
  4163f1:	push   ebp
  4163f2:	ja     0x416464
  4163f4:	or     ah,0xb7
  4163f7:	xchg   edi,eax
  4163f8:	and    al,0x74
  4163fa:	xor    BYTE PTR [edx+ebx*4-0x27a5d4b],cl
  416401:	(bad)  
  416402:	leave  
  416403:	sbb    esi,ecx
  416405:	jl     0x416389
  416407:	lock jl 0x4163d6
  41640a:	jle    0x4163cc
  41640c:	data16 loop 0x416394
  41640f:	sub    al,0x71
  416411:	xchg   ebx,edi
  416413:	and    al,bh
  416415:	mov    al,ds:0x6a8c8800
  41641a:	test   al,0x0
  41641c:	and    al,0xb
  41641e:	popa   
  41641f:	test   DWORD PTR [eax+esi*1],eax
  416422:	call   0x50ae:0xe20dbc99
  416429:	jnp    0x4163ca
  41642b:	cs (bad) 
  41642d:	mov    ebx,0x744bed58
  416432:	sbb    al,0xff
  416434:	jecxz  0x41644e
  416436:	xchg   ebx,eax
  416437:	dec    edi
  416438:	ds call 0xbc2ae4dd
  41643e:	mov    esi,0x1b9ccffd
  416443:	add    DWORD PTR [ebp-0x2c],ecx
  416446:	jle    0x4163d4
  416448:	jmp    0x7c32585c
  41644d:	ficomp WORD PTR [ecx]
  41644f:	das    
  416450:	push   0xffffffcd
  416452:	outs   dx,DWORD PTR ds:[esi]
  416453:	sbb    BYTE PTR [edi-0x5c773784],ch
  416459:	fisttp QWORD PTR [edx-0x2b212886]
  41645f:	icebp  
  416460:	hlt    
  416461:	push   0xa689ef2
  416466:	lods   eax,DWORD PTR ds:[esi]
  416467:	xchg   edi,eax
  416468:	test   al,0xa6
  41646a:	and    bl,BYTE PTR [edi+0x129c6a0e]
  416470:	ins    DWORD PTR es:[edi],dx
  416471:	bound  eax,QWORD PTR [ebx-0x57251fc9]
  416477:	jae    0x416465
  416479:	pop    ss
  41647a:	or     dh,bl
  41647c:	aad    0x97
  41647e:	iret   
  41647f:	test   DWORD PTR ds:0xdb17500d,0x64a02ab
  416489:	out    dx,al
  41648a:	fnstsw WORD PTR [edx+0x53]
  41648d:	xchg   ebx,eax
  41648e:	imul   esp,esp,0xffffffc7
  416491:	xor    al,0xf3
  416493:	push   esi
  416494:	xchg   ebx,eax
  416495:	aad    0x37
  416497:	mov    eax,ds:0xee1c44ea
  41649c:	aaa    
  41649d:	and    al,0xfe
  41649f:	popf   
  4164a0:	fwait
  4164a1:	leave  
  4164a2:	stos   BYTE PTR es:[edi],al
  4164a3:	jbe    0x416499
  4164a5:	jg     0x8662588d
  4164ab:	sub    BYTE PTR [esi+ecx*1+0x5],0xa4
  4164b0:	sbb    eax,0x34038276
  4164b5:	aad    0x49
  4164b7:	xor    ebp,DWORD PTR [esp+esi*1-0x7a]
  4164bb:	jg     0x416498
  4164bd:	lea    eax,[ecx]
  4164bf:	mov    al,BYTE PTR [esi-0x6]
  4164c2:	shr    DWORD PTR [edi+0x2d3d348b],0x94
  4164c9:	rol    BYTE PTR [ecx-0x3b7bcd24],0x71
  4164d0:	daa    
  4164d1:	and    al,BYTE PTR [edx+0x16c9b2df]
  4164d7:	mov    ah,0x64
  4164d9:	xchg   ecx,esp
  4164db:	push   edi
  4164dc:	mov    bh,0x63
  4164de:	sub    BYTE PTR ds:0x5fa1baae,dl
  4164e4:	mov    al,0x96
  4164e6:	xchg   esi,eax
  4164e7:	sub    ch,BYTE PTR [eax]
  4164e9:	cs fs stos DWORD PTR es:[edi],eax
  4164ec:	mov    al,ds:0xd9037ff0
  4164f1:	pop    ds
  4164f2:	dec    ebx
  4164f3:	lds    ebx,FWORD PTR [ebx+0x2ad2b0d4]
  4164f9:	sub    ecx,DWORD PTR [esi+0x5d]
  4164fc:	sbb    ecx,ecx
  4164fe:	pop    edx
  4164ff:	adc    al,0xbf
  416501:	out    dx,al
  416502:	pop    es
  416503:	push   ss
  416504:	shl    bl,cl
  416506:	xchg   ah,cl
  416508:	pop    ebp
  416509:	test   DWORD PTR cs:[ebp+0x5c],ecx
  41650d:	cmp    eax,0x1cbdaf1b
  416512:	jns    0x4164b9
  416514:	stos   DWORD PTR es:[edi],eax
  416515:	(bad)  
  416516:	cmc    
  416517:	jl     0x416532
  416519:	cmp    al,0x23
  41651b:	(bad)  
  41651c:	push   eax
  41651d:	xchg   edx,eax
  41651e:	jns    0x41652f
  416520:	(bad)  
  416521:	inc    esi
  416522:	push   esi
  416523:	or     BYTE PTR [edx+0x4196d365],al
  416529:	enter  0x2256,0xb0
  41652d:	dec    ecx
  41652e:	add    ch,BYTE PTR ss:[ebx-0x5b]
  416532:	push   esp
  416533:	xor    al,0xdf
  416535:	add    BYTE PTR [eax],0xb8
  416538:	fistp  WORD PTR [eax]
  41653a:	out    0xd4,al
  41653c:	push   ecx
  41653d:	cmp    esp,edx
  41653f:	mov    cl,0xee
  416541:	pop    ebx
  416542:	pusha  
  416543:	in     al,dx
  416544:	jne    0x41653a
  416546:	jle    0x4165ae
  416548:	mov    edi,0xaff68a53
  41654d:	xchg   BYTE PTR [ecx],cl
  41654f:	jle    0x416566
  416551:	jg     0x416595
  416553:	sti    
  416554:	addr16 fcmovbe st,st(3)
  416557:	add    BYTE PTR [ebx-0x28],0x23
  41655b:	in     eax,dx
  41655c:	fild   WORD PTR [edi+0x16bb5cff]
  416562:	mov    DWORD PTR [eax+ebp*4],edi
  416565:	push   edi
  416566:	and    al,0x56
  416568:	inc    ebp
  416569:	add    dl,BYTE PTR [ecx+0x3b]
  41656c:	jg     0x41655b
  41656e:	(bad)  
  41656f:	cmc    
  416570:	mov    ch,0xad
  416572:	sub    eax,0x19615521
  416577:	dec    ebp
  416578:	stc    
  416579:	mov    ch,0x4e
  41657b:	inc    edx
  41657c:	jl     0x41656e
  41657e:	sar    ecx,0x9e
  416581:	pusha  
  416582:	jp     0x4165ee
  416584:	in     eax,dx
  416585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416586:	push   esp
  416587:	inc    esi
  416588:	hlt    
  416589:	mov    dh,0xd4
  41658b:	or     al,0xb4
  41658d:	push   eax
  41658e:	out    dx,al
  41658f:	and    eax,0x255e713
  416594:	sub    al,0x81
  416596:	push   edx
  416597:	outs   dx,DWORD PTR ds:[esi]
  416598:	inc    esi
  416599:	aad    0xd2
  41659b:	test   BYTE PTR [edi+0x3f07eb51],dl
  4165a1:	ins    DWORD PTR es:[edi],dx
  4165a2:	jmp    0x3c77bd92
  4165a7:	call   0x3927:0x2b189027
  4165ae:	test   al,0x30
  4165b0:	push   ds
  4165b1:	mov    ebp,0xa216b956
  4165b6:	dec    ebp
  4165b7:	daa    
  4165b8:	adc    edx,DWORD PTR [ebx-0xd516e19]
  4165be:	pop    es
  4165bf:	cmp    bl,BYTE PTR [edx-0x2defcde0]
  4165c5:	pop    ecx
  4165c6:	cmp    ax,0xefa1
  4165ca:	mov    dl,0x8
  4165cc:	cli    
  4165cd:	mov    ch,0x3a
  4165cf:	test   DWORD PTR [esi],edi
  4165d1:	sub    al,0x14
  4165d3:	cmp    edi,DWORD PTR [ebp-0x63dfb76f]
  4165d9:	outs   dx,DWORD PTR ds:[esi]
  4165da:	repz inc edx
  4165dc:	xor    al,0x29
  4165de:	lods   al,BYTE PTR ds:[esi]
  4165df:	adc    bl,ch
  4165e1:	add    al,0x42
  4165e3:	add    cl,ah
  4165e5:	mov    esp,ebp
  4165e7:	ins    DWORD PTR es:[edi],dx
  4165e8:	pop    edi
  4165e9:	loopne 0x41656b
  4165eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ec:	sbb    BYTE PTR [eax+0x6a],0xaa
  4165f0:	ins    DWORD PTR es:[edi],dx
  4165f1:	jb     0x4165bb
  4165f3:	ds inc ecx
  4165f5:	dec    edi
  4165f6:	call   0xcc26:0x219a6494
  4165fd:	popa   
  4165fe:	mov    dh,0x62
  416600:	in     al,dx
  416601:	jo     0x41663b
  416603:	out    dx,al
  416604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416605:	or     dl,ch
  416607:	dec    ebx
  416608:	jp     0x416606
  41660a:	stc    
  41660b:	sbb    al,0x2e
  41660d:	jle    0x416591
  41660f:	aam    0xc2
  416611:	xor    DWORD PTR [ebx-0xf],ebp
  416614:	mov    ch,0xe5
  416616:	and    esi,DWORD PTR [edx+0x134acd2e]
  41661c:	hlt    
  41661d:	adc    eax,0xe12dd040
  416622:	cmc    
  416623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416624:	fsubr  st,st(2)
  416626:	(bad)  
  416627:	xchg   ebp,eax
  416628:	(bad)  
  416629:	mov    ah,0x4c
  41662b:	aaa    
  41662c:	enter  0x950a,0xb8
  416630:	call   0xf7067c9
  416635:	call   0x9676e337
  41663a:	or     ebx,DWORD PTR [ecx+edx*2+0x31]
  41663e:	in     al,0xd8
  416640:	add    eax,0x37d4f8a7
  416645:	mov    DWORD PTR [eax+0x64],ecx
  416648:	xchg   ecx,eax
  416649:	pop    ebx
  41664a:	mov    al,ds:0x5cd53680
  41664f:	ins    BYTE PTR es:[edi],dx
  416650:	ror    BYTE PTR [eax-0x65],cl
  416653:	dec    edx
  416654:	sbb    al,0xef
  416656:	inc    edx
  416657:	call   0x48dda1a
  41665c:	clc    
  41665d:	neg    DWORD PTR [esi+0x6c]
  416660:	dec    DWORD PTR [edx+0x591377b0]
  416666:	pushf  
  416667:	jl     0x41667a
  416669:	jle    0x41669c
  41666b:	(bad)  
  41666c:	sar    bh,0xfa
  41666f:	mov    ebp,0xd2659c67
  416674:	or     BYTE PTR [ebp-0x76],0x2c
  416678:	and    al,0x89
  41667a:	dec    ecx
  41667b:	add    ah,bh
  41667d:	add    cl,0x21
  416680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416681:	mov    bl,0xf9
  416683:	mov    esi,0x1cd19f77
  416688:	mov    ss,WORD PTR [eax]
  41668a:	test   eax,0x7b0a99c1
  41668f:	xor    esi,DWORD PTR [esi-0x14]
  416692:	xchg   edi,eax
  416693:	ins    BYTE PTR es:[edi],dx
  416694:	mov    gs,WORD PTR [ebx+0x2f]
  416697:	or     ah,BYTE PTR ds:0xe39cbd64
  41669d:	fnstcw WORD PTR ds:[edx-0x75]
  4166a1:	dec    ebp
  4166a2:	xchg   edi,eax
  4166a3:	(bad)  
  4166a5:	js     0x4166c2
  4166a7:	adc    BYTE PTR [edi+edi*8+0x70afd657],bl
  4166ae:	pop    ss
  4166af:	jae    0x4166a6
  4166b1:	mov    edx,0x796e913d
  4166b6:	scas   eax,DWORD PTR es:[edi]
  4166b7:	fild   DWORD PTR [ebx-0x29618da4]
  4166bd:	enter  0x3547,0xb
  4166c1:	pop    edx
  4166c2:	pushf  
  4166c3:	popa   
  4166c4:	mov    ch,0xaa
  4166c6:	push   esp
  4166c7:	sahf   
  4166c8:	pop    ebp
  4166c9:	mov    esp,0x72b6a594
  4166ce:	mov    eax,ds:0x50319953
  4166d3:	rcr    BYTE PTR [eax+0x5423b039],cl
  4166d9:	cmc    
  4166da:	mov    ss,WORD PTR [ebp+0x32]
  4166dd:	mov    ebx,0x62d5194e
  4166e2:	and    ch,0x50
  4166e5:	mov    eax,ds:0x70167d37
  4166ea:	mov    ah,0xd0
  4166ec:	jne    0x4166b7
  4166ee:	ror    DWORD PTR [ebp-0x5a],1
  4166f1:	push   DWORD PTR [esi]
  4166f3:	pop    ecx
  4166f4:	rcl    BYTE PTR [edi-0x29],cl
  4166f7:	retf   
  4166f8:	ret    0x4c03
  4166fb:	push   ebp
  4166fc:	fild   QWORD PTR [eax+0x22]
  4166ff:	mov    BYTE PTR [edx],ch
  416701:	mov    es,WORD PTR [ebx-0x401854f5]
  416707:	pop    ebp
  416708:	fucomi st,st(0)
  41670a:	popa   
  41670b:	retf   
  41670c:	push   eax
  41670d:	leave  
  41670e:	pop    ebx
  41670f:	mov    bh,0x8
  416711:	ror    DWORD PTR [esi],0x49
  416714:	pop    eax
  416715:	xchg   ebp,eax
  416716:	fstp   st(4)
  416718:	(bad)  ds:0xb481686
  41671e:	loop   0x4166f7
  416720:	xlat   BYTE PTR ds:[ebx]
  416721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416722:	dec    esi
  416723:	dec    esp
  416724:	or     esi,DWORD PTR [ebp+0x4c]
  416727:	stos   BYTE PTR es:[edi],al
  416728:	repnz daa 
  41672a:	push   DWORD PTR [edi]
  41672c:	mov    ebp,0x3e69b238
  416731:	xor    bl,BYTE PTR [eax+eax*4-0x1c]
  416735:	nop
  416736:	jmp    0x4166f4
  416738:	std    
  416739:	mov    cl,0x41
  41673b:	and    ebx,DWORD PTR [edi+ecx*8]
  41673e:	or     ecx,DWORD PTR [edx-0x5e]
  416741:	mov    bh,0x47
  416743:	mov    dl,0xc4
  416745:	(bad)  
  416746:	sub    eax,0x15d58521
  41674b:	ins    DWORD PTR es:[edi],dx
  41674c:	lock stc 
  41674e:	or     eax,0x402fe549
  416753:	jg     0x4167cf
  416755:	jl     0x416731
  416757:	jmp    0xa33e6772
  41675c:	mov    DWORD PTR [esi+0x1b],esi
  41675f:	inc    edx
  416760:	sbb    dh,BYTE PTR ds:0xc3ad3002
  416766:	rcr    al,cl
  416768:	and    BYTE PTR [ebp+ebp*8+0x13],al
  41676c:	jbe    0x416789
  41676e:	or     BYTE PTR [ebx],ah
  416770:	inc    edx
  416771:	xchg   DWORD PTR [ecx],edx
  416773:	js     0x416767
  416775:	cmp    DWORD PTR [esi+0x4],ebp
  416778:	push   0x887afcc5
  41677d:	add    al,0x1a
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422564
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422550
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428545,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428559,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284c5,0x96c
  416847:	cmp    DWORD PTR ds:0x428545,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428137
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428555
  416866:	and    DWORD PTR ds:0x4284b9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428419
  416876:	sub    ecx,DWORD PTR ds:0x4284f1
  41687c:	mov    DWORD PTR ds:0x428419,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422918
  416888:	and    DWORD PTR ds:0x428365,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428555,0x4284c9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42844d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428339,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42840d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428345,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42844d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42846d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42840d
  4168f9:	movzx  eax,WORD PTR ds:0x428469
  416900:	cmp    DWORD PTR ds:0x42840d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428569
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428325,0x42840d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428355,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42853d,0x428559
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428401,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428465
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42844d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428551,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x4283fd,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428435,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42834d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42831d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428341
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	mov    BYTE PTR [edx-0x2bf35b4a],0xc0
  416a34:	mov    esi,0xbebec235
  416a39:	cmp    ah,ch
  416a3b:	test   al,0x91
  416a3d:	pop    esi
  416a3e:	push   edx
  416a3f:	ja     0x416a1b
  416a41:	xchg   DWORD PTR [edx+0x34],eax
  416a44:	cmp    esi,DWORD PTR [edi-0x7312ab3]
  416a4a:	(bad)  
  416a4b:	jo     0x416a80
  416a4d:	icebp  
  416a4e:	std    
  416a4f:	sbb    ebx,DWORD PTR [edi-0x7a]
  416a52:	std    
  416a53:	jno    0x4169f2
  416a55:	and    ebp,DWORD PTR [ecx+0x59]
  416a58:	jae    0x416a9f
  416a5a:	add    DWORD PTR [eax+0x2248d7de],edx
  416a60:	leave  
  416a61:	ret    0x2354
  416a64:	jp     0x416a2a
  416a66:	out    dx,eax
  416a67:	cmp    DWORD PTR [esi-0x1e099651],ecx
  416a6d:	push   edx
  416a6e:	sbb    ah,BYTE PTR [esi]
  416a70:	push   ss
  416a71:	or     BYTE PTR [ebx+0x3d0a1a01],al
  416a77:	push   esi
  416a78:	hlt    
  416a79:	jecxz  0x416a4e
  416a7b:	jno    0x416a5a
  416a7d:	jne    0x416a68
  416a7f:	push   0x5652e775
  416a84:	dec    esp
  416a85:	mov    bl,0x79
  416a87:	mov    edi,0xc4e13ea8
  416a8c:	jne    0x416a4e
  416a8e:	inc    edx
  416a8f:	xor    eax,0x869dabc0
  416a94:	es jg  0x416af0
  416a97:	push   ecx
  416a98:	cmp    BYTE PTR [ebp-0x76672401],dl
  416a9e:	pop    ss
  416a9f:	add    eax,0x482feca5
  416aa4:	and    eax,0xd2700e37
  416aa9:	dec    edx
  416aaa:	sbb    DWORD PTR [ecx],0xffffffe0
  416aad:	sbb    BYTE PTR [ecx],dl
  416aaf:	hlt    
  416ab0:	mov    eax,ds:0xa10eb71f
  416ab5:	out    dx,eax
  416ab6:	out    dx,eax
  416ab7:	push   0x6e
  416ab9:	sub    ebp,DWORD PTR [ebx-0x2b]
  416abc:	adc    DWORD PTR [ecx+0x72],ecx
  416abf:	in     al,dx
  416ac0:	rcl    DWORD PTR [edx+0x1d],0x99
  416ac4:	xchg   ebx,eax
  416ac5:	ins    DWORD PTR es:[edi],dx
  416ac6:	inc    ebp
  416ac7:	fcom   QWORD PTR [eax+0xd488954]
  416acd:	sti    
  416ace:	retf   
  416acf:	hlt    
  416ad0:	or     eax,0x21452d6e
  416ad5:	jmp    0x416a90
  416ad7:	pop    ds
  416ad8:	pop    eax
  416ad9:	mov    edx,0x507e743c
  416ade:	mov    WORD PTR [eax],?
  416ae0:	inc    ecx
  416ae1:	xchg   BYTE PTR cs:[ecx-0x21],al
  416ae5:	add    eax,0x74eb4d3a
  416aea:	xor    bh,cl
  416aec:	out    dx,eax
  416aed:	jne    0x416b60
  416aef:	ins    BYTE PTR es:[edi],dx
  416af0:	xlat   BYTE PTR ds:[ebx]
  416af1:	repz jne 0x416b69
  416af4:	and    ch,ah
  416af6:	dec    ebx
  416af7:	xchg   esp,eax
  416af8:	in     eax,dx
  416af9:	test   al,0x86
  416afb:	call   esp
  416afd:	adc    BYTE PTR [esi+0x109db463],bl
  416b03:	push   ebx
  416b04:	jle    0x416b31
  416b06:	adc    eax,0x7a389e5e
  416b0b:	mov    cl,0xed
  416b0d:	and    DWORD PTR [eax],esi
  416b0f:	pop    ds
  416b10:	xchg   ah,dh
  416b12:	jecxz  0x416ad9
  416b14:	mov    bl,0xbe
  416b16:	aad    0x6
  416b18:	sbb    DWORD PTR [edi-0x140f80f7],ebp
  416b1e:	test   al,0x54
  416b20:	addr16 add eax,0xc7ec597d
  416b26:	xlat   BYTE PTR ds:[ebx]
  416b27:	mov    edi,0x460c9833
  416b2c:	pop    ss
  416b2d:	inc    esp
  416b2e:	xchg   edi,eax
  416b2f:	nop
  416b30:	test   cl,dh
  416b32:	push   0xbe2e4adf
  416b37:	test   ebp,esi
  416b39:	aas    
  416b3a:	xlat   BYTE PTR ds:[ebx]
  416b3b:	push   ebp
  416b3c:	or     esp,DWORD PTR [edx]
  416b3e:	(bad)  
  416b3f:	cli    
  416b40:	out    0xfe,al
  416b42:	sub    ecx,DWORD PTR [ecx-0x3b]
  416b45:	in     al,dx
  416b46:	cmp    BYTE PTR [esi],ch
  416b48:	sti    
  416b49:	pop    edx
  416b4a:	xchg   esi,eax
  416b4b:	(bad)  
  416b4c:	add    DWORD PTR [eax-0x38],ecx
  416b4f:	int    0xe8
  416b51:	leave  
  416b52:	pop    eax
  416b53:	mov    edi,0x1ab1d3f9
  416b58:	neg    DWORD PTR [ebx]
  416b5a:	or     cl,ah
  416b5c:	dec    esi
  416b5d:	in     eax,dx
  416b5e:	loop   0x416af8
  416b60:	call   0x9d2e29c7
  416b65:	loope  0x416b8b
  416b67:	je     0x416b18
  416b69:	loope  0x416b7a
  416b6b:	imul   ebx,DWORD PTR [esi],0xfd5fba21
  416b71:	in     eax,dx
  416b72:	push   ss
  416b73:	(bad)  
  416b74:	retf   0x3256
  416b77:	fwait
  416b78:	jnp    0x416b8c
  416b7a:	jns    0x416bea
  416b7c:	in     al,dx
  416b7d:	add    al,0xbd
  416b7f:	push   ebp
  416b80:	sub    ah,ah
  416b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b83:	stos   BYTE PTR es:[edi],al
  416b84:	pop    esp
  416b85:	lea    esp,cs:[edi+0x23a5871]
  416b8c:	xor    al,0x23
  416b8e:	retf   0x8c54
  416b91:	repz xor eax,0x24ed3f68
  416b97:	dec    esi
  416b98:	dec    ecx
  416b99:	cmp    BYTE PTR [ebp+0x53],0x87
  416b9d:	in     eax,0x53
  416b9f:	mov    DWORD PTR [esp+ecx*2],eax
  416ba2:	lods   al,BYTE PTR ds:[esi]
  416ba3:	jnp    0x416bdc
  416ba5:	cmp    ah,BYTE PTR [edx-0x5b62e927]
  416bab:	ds xchg ecx,eax
  416bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bae:	in     al,0x4b
  416bb0:	xchg   DWORD PTR [esi-0x7082717c],eax
  416bb6:	js     0x416be1
  416bb8:	adc    BYTE PTR [edi],bl
  416bba:	shl    BYTE PTR [esi+0x503ab033],cl
  416bc0:	fdiv   QWORD PTR [ecx+0x6a]
  416bc3:	fsubr  QWORD PTR [esi+eax*8]
  416bc6:	mov    dl,0xd6
  416bc8:	fstp   TBYTE PTR [ebx-0x38]
  416bcb:	push   edi
  416bcc:	xor    eax,DWORD PTR [eax+0x4]
  416bcf:	loop   0x416c16
  416bd1:	cwde   
  416bd2:	or     DWORD PTR [edx-0x6e],esp
  416bd5:	or     al,0x91
  416bd7:	cmp    ah,al
  416bd9:	pop    esi
  416bda:	mov    bh,0x61
  416bdc:	ror    ecx,1
  416bde:	or     eax,0xe9a34a5d
  416be3:	je     0x416c2f
  416be5:	lahf   
  416be6:	dec    eax
  416be7:	mov    dh,0xac
  416be9:	fidiv  WORD PTR [esi+eax*8-0x1d0214d6]
  416bf0:	cs aad 0x7d
  416bf3:	movlps xmm6,QWORD PTR [esp+esi*4-0x5d3dc6f8]
  416bfb:	xchg   ecx,eax
  416bfc:	hlt    
  416bfd:	ret    
  416bfe:	out    dx,al
  416bff:	out    dx,eax
  416c00:	cmp    al,BYTE PTR [esi+ebp*4-0x54a32aa]
  416c07:	dec    esp
  416c08:	sub    ebx,DWORD PTR [edx]
  416c0a:	push   ebp
  416c0b:	adc    eax,0x39f3877c
  416c10:	shl    BYTE PTR [edi+eiz*1],0x9
  416c14:	iret   
  416c15:	out    dx,eax
  416c16:	mov    ebp,0xd8ef161b
  416c1b:	adc    DWORD PTR [ebx],0xffffff82
  416c1e:	and    ah,0x6a
  416c21:	js     0x416c47
  416c23:	cli    
  416c24:	mov    bh,0x34
  416c26:	ret    0xc257
  416c29:	push   edi
  416c2a:	adc    eax,0x1a22f76
  416c2f:	push   eax
  416c30:	in     al,dx
  416c31:	dec    eax
  416c32:	xchg   esi,eax
  416c33:	fisttp QWORD PTR [eax+0x7a5a2ec4]
  416c39:	mov    esi,0xbc481268
  416c3e:	mov    ds:0x4e67e6d7,eax
  416c43:	mov    edi,0xf36aae70
  416c48:	xor    al,0xe2
  416c4a:	jae    0x416c08
  416c4c:	cmp    esi,0xb0695359
  416c52:	sub    eax,0xf6e9148a
  416c57:	dec    ebx
  416c58:	mov    al,ds:0xbb941a89
  416c5d:	sbb    DWORD PTR [edx-0x21],0xffffffed
  416c61:	arpl   WORD PTR [ebp+edx*8+0x120df4ec],bp
  416c68:	rcr    BYTE PTR [esi-0x26],cl
  416c6b:	lds    edi,FWORD PTR [esi]
  416c6d:	mov    ebp,0xc9ed41a9
  416c72:	fwait
  416c73:	gs sti 
  416c75:	ss dec esi
  416c77:	stc    
  416c78:	cmp    edi,eax
  416c7a:	inc    esp
  416c7b:	and    al,0x50
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428421
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428429,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284e1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284c5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428349,0x0
  416d09:	mov    DWORD PTR ds:0x428331,edi
  416d0f:	mov    DWORD PTR ds:0x428435,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284ed,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428409,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428349,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428551,0x42835d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428355
  416d72:	adc    DWORD PTR ds:0x428429,ecx
  416d78:	cmp    DWORD PTR ds:0x428545,0x0
  416d7f:	mov    DWORD PTR ds:0x428569,edi
  416d85:	mov    DWORD PTR ds:0x428569,ebx
  416d8b:	mov    DWORD PTR ds:0x4283fd,0x662b
  416d95:	mov    DWORD PTR ds:0x428551,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428345,ebx
  416daa:	cmp    DWORD PTR ds:0x428545,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281cb
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428521
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42855d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428541
  416de1:	and    DWORD PTR ds:0x428451,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428349
  416df3:	add    DWORD PTR ds:0x42832d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428359,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428471,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428341,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428421
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42853d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428535
  416e57:	mov    ecx,DWORD PTR ds:0x428471
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428441,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42853d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428401,edi
  416e87:	and    DWORD PTR ds:0x428361,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428431
  416e97:	or     DWORD PTR ds:0x428565,ecx
  416e9d:	add    DWORD PTR ds:0x4284d1,ebx
  416ea3:	or     DWORD PTR ds:0x4284c1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428355
  416eb3:	sub    DWORD PTR ds:0x4284b9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428365,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x4283fd,0x0
  416ecf:	mov    DWORD PTR ds:0x428321,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284d1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x4283fd,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428341
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284c1,0x2a49
  416f10:	and    DWORD PTR ds:0x428551,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42844d
  416f21:	adc    DWORD PTR ds:0x428465,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428535
  416f2d:	adc    DWORD PTR ds:0x428411,ecx
  416f33:	or     DWORD PTR ds:0x428351,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284b5,edx
  416f43:	or     DWORD PTR ds:0x4284ed,0x469c
  416f4d:	or     DWORD PTR ds:0x428449,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428451,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428411
  416f70:	or     ecx,DWORD PTR ds:0x4284f1
  416f76:	mov    DWORD PTR ds:0x428411,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428545,0x428541
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428365,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x4283f5,0x428435
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428541,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428339,0x42831d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42831d,0x428355
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428449,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42835d,0x42831d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428415,0x4284e5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284c1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428441,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284c5,0x0
  417044:	not    DWORD PTR ds:0x428409
  41704a:	mov    DWORD PTR ds:0x4284cd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42834d
  417060:	cmp    DWORD PTR ds:0x4284c5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281a5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428329,edi
  417091:	xor    DWORD PTR ds:0x428449,0x58f
  41709b:	sbb    DWORD PTR ds:0x42845d,ecx
  4170a1:	sub    DWORD PTR ds:0x428551,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283cd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428571,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428451
  4170c0:	add    esi,DWORD PTR ds:0x4284f1
  4170c6:	mov    DWORD PTR ds:0x428451,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42835d,0x428431
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x4170d9
  417104:	xchg   esp,eax
  417105:	hlt    
  417106:	iret   
  417107:	test   al,bl
  417109:	sar    BYTE PTR [esi-0x41413dcb],0xf6
  417110:	pop    ds
  417111:	pop    ebx
  417113:	stos   WORD PTR es:[edi],ax
  417115:	int    0x9a
  417117:	jns    0x417132
  417119:	(bad)  
  41711a:	je     0x4170d9
  41711c:	std    
  41711d:	sbb    esi,eax
  41711f:	fnstcw WORD PTR [ecx]
  417121:	enter  0xe1dd,0x46
  417125:	ja     0x417188
  417127:	inc    edx
  417128:	dec    edi
  417129:	mov    ds:0x19d30a94,eax
  41712e:	int3   
  41712f:	jge    0x4170c0
  417131:	adc    DWORD PTR [edx-0x21],edi
  417134:	mov    esi,0x9efd0b8e
  417139:	sub    ch,BYTE PTR [ebp-0x62a1acd0]
  41713f:	shr    BYTE PTR [esi+0x4e],cl
  417142:	mov    dl,0x3f
  417144:	inc    esi
  417145:	mov    gs,WORD PTR ds:0xf0a3d0b1
  41714b:	popf   
  41714c:	push   ecx
  41714d:	ins    BYTE PTR es:[edi],dx
  41714e:	das    
  41714f:	mov    al,ds:0x265f5936
  417154:	cld    
  417155:	inc    bl
  417157:	enter  0x9062,0xb5
  41715b:	(bad)  
  41715c:	push   edx
  41715d:	or     bl,ah
  41715f:	sar    cl,1
  417161:	mov    edi,0x49327bf6
  417166:	inc    ebp
  417167:	cmp    DWORD PTR [ebp-0x25],eax
  41716a:	mov    ecx,ecx
  41716c:	mov    DWORD PTR [edi+0xe],0x6ea13474
  417173:	(bad)
  417179:	push   0xa6a6aeeb
  41717e:	pop    edx
  41717f:	xor    eax,0xe7279afe
  417184:	push   ebp
  417185:	popa   
  417186:	lahf   
  417187:	xchg   ebp,eax
  417188:	in     al,0x4d
  41718a:	ss push ds
  41718c:	fadd   DWORD PTR [esi+0x31]
  41718f:	jns    0x417137
  417191:	push   ss
  417192:	jae    0x417169
  417194:	sub    DWORD PTR [edx-0x479106e6],esp
  41719a:	sub    eax,0x9cf2a09e
  41719f:	jg     0x417154
  4171a1:	add    ah,BYTE PTR [ecx+0x3498797a]
  4171a7:	stos   DWORD PTR es:[edi],eax
  4171a8:	mov    dl,0xe9
  4171aa:	not    BYTE PTR ds:[esi]
  4171ad:	inc    ebx
  4171ae:	jl     0x417187
  4171b0:	mov    dh,0x4a
  4171b2:	hlt    
  4171b3:	mov    ds:0x87f54a83,eax
  4171b8:	mov    ebp,0xb83747c1
  4171bd:	mov    BYTE PTR [eax+0x13],dl
  4171c0:	test   al,0x29
  4171c2:	stos   DWORD PTR es:[edi],eax
  4171c3:	int    0x2d
  4171c5:	sub    al,0xa8
  4171c7:	mov    cl,0xb3
  4171c9:	retf   0xcc50
  4171cc:	lock adc eax,0x8966c7e6
  4171d2:	iret   
  4171d3:	sub    al,0x8d
  4171d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d6:	xchg   esi,eax
  4171d7:	xchg   ecx,eax
  4171d8:	xor    BYTE PTR [ebx+0x7e05777c],0xf6
  4171df:	fwait
  4171e0:	xchg   edi,eax
  4171e1:	sbb    al,0x14
  4171e3:	adc    al,0x3a
  4171e5:	cmp    dh,BYTE PTR [ebx]
  4171e7:	lds    eax,FWORD PTR [esi-0x51704212]
  4171ed:	fwait
  4171ee:	inc    esp
  4171ef:	xchg   esp,eax
  4171f0:	add    DWORD PTR [ebx+ebp*1+0x1571e718],esi
  4171f7:	ret    
  4171f8:	ffree  st(7)
  4171fa:	mov    ebp,0x181ccd6d
  4171ff:	xchg   edi,eax
  417200:	mov    dh,0x47
  417202:	sbb    BYTE PTR [esi+0x2fec1311],dh
  417208:	sub    BYTE PTR [ecx-0x482fd49e],dh
  41720e:	retf   
  41720f:	fs call 0x741f339a
  417215:	inc    esp
  417216:	cmc    
  417217:	out    dx,al
  417218:	fld    DWORD PTR [edi-0x6d]
  41721b:	lods   al,BYTE PTR ds:[esi]
  41721c:	xor    eax,DWORD PTR [ebp-0x2f2cdb75]
  417222:	push   ebx
  417223:	dec    ecx
  417224:	sbb    cl,ah
  417226:	push   es
  417227:	mov    esi,0xc2c5ced8
  41722c:	fild   DWORD PTR [ecx]
  41722e:	sahf   
  41722f:	bswap  ebx
  417231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417232:	loopne 0x417245
  417234:	aam    0x66
  417236:	jmp    0xb7a646f0
  41723b:	int3   
  41723c:	(bad)  
  41723d:	jl     0x4172aa
  41723f:	mov    WORD PTR [eax+0x63d4be5a],cs
  417245:	dec    edi
  417246:	xchg   ecx,eax
  417247:	(bad)  
  417248:	repnz div BYTE PTR ds:0x78ae1663
  417250:	adc    DWORD PTR [eax+0x4c],eax
  417253:	push   cs
  417254:	pop    eax
  417255:	in     eax,0xbc
  417257:	addr16 sti 
  417259:	push   eax
  41725a:	aam    0xa9
  41725c:	fidivr WORD PTR [ebp+0x248a6d7e]
  417262:	bound  edx,QWORD PTR [ebx]
  417264:	dec    ebp
  417265:	jmp    0x6806:0xae7a67ff
  41726c:	mov    bh,0x88
  41726e:	mov    ss,WORD PTR [edi-0x6c]
  417271:	and    esi,0xffffffaf
  417274:	dec    edi
  417275:	scas   al,BYTE PTR es:[edi]
  417276:	js     0x41725c
  417278:	test   BYTE PTR [ebx+0x36440711],dl
  41727e:	mov    BYTE PTR [edi],cl
  417280:	jbe    0x41724d
  417282:	ins    BYTE PTR es:[edi],dx
  417283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417284:	in     eax,dx
  417285:	sahf   
  417286:	and    eax,0x8cf2d104
  41728b:	(bad)  
  41728c:	fldcw  WORD PTR [esi+0x35]
  41728f:	fs stos BYTE PTR es:[edi],al
  417291:	hlt    
  417292:	sbb    bl,0xc8
  417295:	popa   
  417296:	sub    DWORD PTR [ecx+0x48871b2b],ebx
  41729c:	jg     0x417314
  41729e:	jno    0x417239
  4172a0:	shufps xmm4,XMMWORD PTR [eax+0x6a],0x37
  4172a5:	inc    edx
  4172a6:	adc    bl,al
  4172a8:	push   ds
  4172a9:	cmp    dh,BYTE PTR [edx]
  4172ab:	cmp    ah,BYTE PTR [esi+0x50]
  4172ae:	mov    BYTE PTR [edi],cl
  4172b0:	push   edi
  4172b1:	(bad)  
  4172b2:	mov    ah,0xf1
  4172b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b5:	fwait
  4172b6:	out    dx,al
  4172b7:	nop
  4172b8:	scas   eax,DWORD PTR es:[edi]
  4172b9:	cld    
  4172ba:	sbb    dh,bh
  4172bc:	sbb    BYTE PTR [ecx-0x3c331e1e],0x98
  4172c3:	call   0xcf3f:0xf4916b93
  4172ca:	les    esp,FWORD PTR [eax+0x66]
  4172cd:	loopne 0x4172dc
  4172cf:	outs   dx,DWORD PTR ds:[esi]
  4172d0:	aam    0x14
  4172d2:	sbb    eax,0xb97a27b3
  4172d7:	popa   
  4172d8:	and    cl,cl
  4172da:	scas   eax,DWORD PTR es:[edi]
  4172db:	stos   DWORD PTR es:[edi],eax
  4172dc:	dec    ebp
  4172dd:	xchg   esi,eax
  4172de:	fwait
  4172df:	in     eax,dx
  4172e0:	daa    
  4172e1:	xor    BYTE PTR [edx-0x11],al
  4172e4:	add    edx,DWORD PTR [ebp-0x31]
  4172e7:	or     al,0xc0
  4172e9:	add    BYTE PTR [edi-0x78],al
  4172ec:	push   ebx
  4172ed:	dec    esp
  4172ee:	shl    ah,cl
  4172f0:	retf   0x5a0d
  4172f3:	imul   esi,esp,0xffffffa4
  4172f6:	push   edx
  4172f7:	jg     0x4172fe
  4172f9:	xor    al,0x62
  4172fb:	or     eax,0x8b16a3de
  417300:	and    eax,0x55617ad6
  417305:	je     0x4172af
  417307:	ins    BYTE PTR es:[edi],dx
  417308:	xchg   ebx,eax
  417309:	push   ebx
  41730a:	lahf   
  41730b:	or     DWORD PTR [edx+0x472c16d3],eax
  417311:	cmp    BYTE PTR [ebx+0x2d39d08b],ch
  417317:	mov    esp,0xae7f7386
  41731c:	(bad)  
  41731d:	sub    eax,0x115b6f5d
  417322:	nop
  417323:	fistp  QWORD PTR [edi-0x530acaf]
  417329:	adc    al,0xaa
  41732b:	pop    es
  41732c:	loope  0x417348
  41732e:	pop    ebp
  41732f:	fld    TBYTE PTR [eax]
  417331:	push   edx
  417332:	sbb    al,0xb2
  417334:	call   0x7677:0xac75fbb8
  41733b:	pop    edi
  41733c:	int    0xa0
  41733e:	push   ds
  41733f:	jb     0x4172c6
  417341:	mov    bl,0xa1
  417343:	sar    BYTE PTR [edx+0x5c],cl
  417346:	pusha  
  417347:	dec    edi
  417348:	lds    ebp,FWORD PTR [eax-0x26]
  41734b:	out    0x7f,eax
  41734d:	add    bh,BYTE PTR [edi]
  41734f:	lea    eax,[esp+0x44]
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42831d,0x0
  41735e:	mov    DWORD PTR ds:0x428461,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428405,0x6fab
  417378:	mov    DWORD PTR ds:0x4283f9,0x3325
  417382:	cmp    DWORD PTR ds:0x42831d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42854d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428569
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x42849d
  4173bb:	mov    edx,DWORD PTR ds:0x428595
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428345,0x0
  4173ce:	mov    DWORD PTR ds:0x428469,0x322b
  4173d8:	mov    DWORD PTR ds:0x428365,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428335
  4173e8:	mov    DWORD PTR ds:0x4284bd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42833d,edx
  4173fd:	cmp    DWORD PTR ds:0x428345,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428233
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428341,0x4806
  417422:	add    DWORD PTR ds:0x4284d1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428349,0x2f2b
  41743c:	add    DWORD PTR ds:0x428571,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42832d
  417452:	xor    DWORD PTR ds:0x428349,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284ed
  417462:	mov    eax,ds:0x4226f8
  417467:	sbb    DWORD PTR ds:0x428469,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42846d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42835d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42846d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284dd,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428331,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428549
  4174c1:	sub    DWORD PTR ds:0x428459,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42840d
  4174d1:	or     DWORD PTR ds:0x4284d5,edx
  4174d7:	adc    DWORD PTR ds:0x4284e1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428505
  4174e5:	mov    ecx,DWORD PTR ds:0x428581
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428439
  417500:	sub    edx,DWORD PTR ds:0x42845d
  417506:	mov    DWORD PTR ds:0x428439,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428329,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428405,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428335
  417547:	movzx  ecx,BYTE PTR ds:0x428429
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428405,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428571
  417587:	add    edx,DWORD PTR ds:0x4284d9
  41758d:	mov    DWORD PTR ds:0x428571,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283a9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428521
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42835d,edx
  4175ae:	xor    DWORD PTR ds:0x428559,ebx
  4175b4:	sbb    DWORD PTR ds:0x4283f5,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428469,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42846d
  4175d9:	mov    DWORD PTR ds:0x428339,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x4283fd
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428421,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428469,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428341
  417614:	adc    DWORD PTR ds:0x42840d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284c5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x4283f5
  41762c:	xor    DWORD PTR ds:0x42853d,edx
  417632:	add    DWORD PTR ds:0x4283fd,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x4284f1,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284e5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428535
  41766e:	mov    DWORD PTR ds:0x428361,edi
  417674:	cmp    DWORD PTR ds:0x4284f1,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428439,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428571
  41769a:	or     DWORD PTR ds:0x428555,edx
  4176a0:	sub    DWORD PTR ds:0x42853d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428321
  4176ae:	movzx  edx,WORD PTR ds:0x428535
  4176b5:	sub    DWORD PTR ds:0x4284ed,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428325,0x428351
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428355,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284cd,0x428341
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428455
  4176f8:	adc    DWORD PTR ds:0x428561,eax
  4176fe:	mov    eax,ds:0x4226f8
  417703:	or     DWORD PTR ds:0x4283fd,0x428431
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428415,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428341,0x428455
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x4283fd,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428425,0x428361
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428401,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42855d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428555,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428471,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428469,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	sbb    eax,0xfbd12cea
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	xchg   ebp,eax
  4177b7:	dec    esp
  4177b8:	jb     0x417795
  4177ba:	das    
  4177bb:	loopne 0x4177e8
  4177bd:	mov    DWORD PTR [edi],esi
  4177bf:	les    ebx,FWORD PTR [eax]
  4177c1:	lds    ebx,FWORD PTR [edx+0x17]
  4177c4:	mov    eax,ecx
  4177c6:	mov    WORD PTR [edi-0xdc292b9],gs
  4177cc:	push   eax
  4177cd:	cmp    al,0x1f
  4177d0:	mov    eax,DWORD PTR [ecx+0x14]
  4177d3:	push   0xd203720d
  4177d8:	stc    
  4177d9:	mov    ebp,0xfd83b2b5
  4177de:	push   esp
  4177df:	fucomp st(1)
  4177e1:	jne    0x4177f0
  4177e3:	jno    0x417832
  4177e5:	mov    ds:0x15909f13,eax
  4177ea:	mov    edx,0xcb665db3
  4177ef:	cmp    esi,DWORD PTR [edx-0x5]
  4177f2:	jnp    0x41783d
  4177f4:	sub    eax,0x9ade0874
  4177f9:	gs cli 
  4177fb:	aad    0xa0
  4177fd:	sti    
  4177fe:	pop    es
  4177ff:	loopne 0x4177ae
  417801:	and    ebp,ecx
  417803:	shl    BYTE PTR [ebx-0xc],cl
  417806:	pusha  
  417807:	bound  esp,QWORD PTR [esi+0x677650aa]
  41780d:	xchg   edx,eax
  41780e:	push   0x18caf693
  417813:	test   al,0x7f
  417815:	sub    bl,ch
  417817:	bound  edi,QWORD PTR [esi]
  417819:	sub    ebp,DWORD PTR [ebp+0x73]
  41781c:	push   ss
  41781d:	adc    dl,BYTE PTR [edx]
  41781f:	vandnpd xmm6,xmm1,XMMWORD PTR [esi+0x782a8391]
  417827:	add    eax,DWORD PTR [eax-0x7ecbd344]
  41782d:	shl    DWORD PTR [edx],cl
  41782f:	ret    
  417830:	fild   QWORD PTR [edi]
  417832:	fwait
  417833:	and    ebx,ebp
  417835:	inc    ecx
  417836:	jnp    0x41784f
  417838:	sub    al,0x37
  41783a:	std    
  41783b:	mov    dh,0xf0
  41783d:	and    DWORD PTR [edi-0x1e105dea],eax
  417843:	dec    esp
  417844:	xchg   esi,eax
  417845:	or     eax,0x97677394
  41784a:	pop    eax
  41784b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784c:	fmul   QWORD PTR [ebp-0x359aefd]
  417852:	dec    edx
  417853:	xor    BYTE PTR [edi+0x33],ch
  417856:	es inc ebx
  417858:	dec    eax
  417859:	imul   esp,DWORD PTR gs:[eax],0xffffffc5
  41785d:	mov    al,ss:0xd1e6f785
  417863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417864:	invd   
  417866:	adc    ah,BYTE PTR ds:0x3a7fa842
  41786c:	xchg   DWORD PTR [eax-0x13],ebp
  41786f:	fs dec edi
  417871:	add    dh,BYTE PTR [esi+0x66a6dab3]
  417877:	jle    0x41789c
  417879:	cwde   
  41787a:	not    BYTE PTR [edi]
  41787c:	jo     0x417813
  41787e:	and    bh,bh
  417880:	sbb    BYTE PTR ds:0xa265d2aa,dl
  417886:	not    DWORD PTR [eax-0xc0c4b80]
  41788c:	retf   
  41788d:	and    bl,BYTE PTR [edx+0x257ee869]
  417893:	cld    
  417894:	xchg   ebp,eax
  417895:	push   ebx
  417896:	inc    esi
  417897:	mov    eax,ds:0xbb86c045
  41789c:	xchg   esp,eax
  41789d:	aas    
  41789e:	cmp    al,0x97
  4178a0:	ret    
  4178a1:	jbe    0x4178c2
  4178a3:	(bad)  
  4178a4:	or     eax,esp
  4178a6:	mov    ah,0x79
  4178a8:	rcr    DWORD PTR [edi],0xf7
  4178ab:	inc    ecx
  4178ac:	mov    dl,0x48
  4178ae:	cmp    edi,DWORD PTR [edi-0x3]
  4178b1:	push   cs
  4178b2:	in     al,0x42
  4178b4:	std    
  4178b5:	aam    0x5d
  4178b7:	inc    ebx
  4178b8:	sahf   
  4178b9:	ds push ecx
  4178bb:	(bad)  
  4178bc:	mov    ds:0x2492b696,eax
  4178c1:	jg     0x41792a
  4178c3:	jl     0x4178f7
  4178c5:	enter  0x8862,0x43
  4178c9:	mov    ebx,0x38af858a
  4178ce:	dec    edi
  4178cf:	adc    eax,0x35d8dc4b
  4178d4:	jl     0x417913
  4178d6:	xchg   ecx,eax
  4178d7:	mov    dh,BYTE PTR [ebx+edi*4+0x79]
  4178db:	fadd   st(6),st
  4178dd:	adc    al,0xab
  4178df:	mov    ds:0x53904fbd,eax
  4178e4:	(bad)  
  4178e5:	(bad)  
  4178e6:	jbe    0x4178c7
  4178e8:	data16 daa 
  4178ea:	xchg   BYTE PTR [esi],al
  4178ec:	mov    ebx,0x821f8c72
  4178f1:	aad    0x67
  4178f3:	jg     0x4178af
  4178f5:	loope  0x41787e
  4178f7:	jbe    0x4178e7
  4178f9:	add    al,BYTE PTR [ebx+0x56c2d607]
  4178ff:	mov    ds:0x133afd04,eax
  417904:	and    eax,0x2d42f316
  417909:	mov    dh,0xbc
  41790b:	sub    eax,0xcb712378
  417910:	mov    al,0x22
  417912:	imul   edi,DWORD PTR ds:0xa6bb18ba,0x5d
  417919:	mov    eax,ds:0xfbb349c5
  41791e:	jns    0x417965
  417920:	cs dec ebp
  417922:	and    bl,ch
  417924:	lock dec ecx
  417926:	cmp    al,0x87
  417928:	mov    edi,0x1345950f
  41792d:	(bad)  
  41792e:	fld    st(0)
  417930:	cld    
  417931:	mov    BYTE PTR [ebp+0x6977259f],bh
  417937:	pop    ds
  417938:	mov    WORD PTR [edx+0x59e97dff],?
  41793e:	dec    esi
  41793f:	sbb    BYTE PTR [ebp-0xd6fff95],0xcd
  417946:	mov    cs,edx
  417948:	mov    bl,0x2f
  41794a:	xchg   BYTE PTR [ecx],ah
  41794c:	push   ecx
  41794d:	jp     0x4178f8
  41794f:	push   ax
  417951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417952:	pop    ds
  417953:	popa   
  417954:	cmp    BYTE PTR ds:0x4432d349,bl
  41795a:	les    ecx,FWORD PTR [esi-0xa]
  41795d:	pop    edx
  41795e:	(bad)  
  417960:	shl    DWORD PTR [edi+0x1ead9c8c],1
  417966:	pop    esi
  417967:	lods   eax,DWORD PTR ds:[esi]
  417968:	mov    bh,0xbd
  41796a:	or     al,0x39
  41796c:	inc    esp
  41796d:	loopne 0x41794b
  41796f:	inc    eax
  417970:	in     al,dx
  417971:	jmp    0x41514a98
  417976:	or     edi,eax
  417978:	xlat   BYTE PTR ds:[ebx]
  417979:	or     ebp,edi
  41797b:	xchg   esi,eax
  41797c:	mov    cl,0x5
  41797e:	jle    0x4179bc
  417980:	rol    DWORD PTR [eax-0x15],cl
  417983:	inc    esi
  417984:	lods   eax,DWORD PTR ds:[esi]
  417985:	dec    eax
  417986:	jne    0x4179f1
  417988:	xchg   DWORD PTR [ecx],esp
  41798a:	jecxz  0x41791a
  41798c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798d:	sbb    BYTE PTR [esi+eax*1-0x5f5d74d2],ah
  417994:	mov    edx,0x64362a9e
  417999:	pop    esp
  41799a:	stc    
  41799b:	in     al,dx
  41799c:	or     DWORD PTR [ecx+0x46],edx
  41799f:	loope  0x4179bd
  4179a1:	sub    al,0xc9
  4179a3:	xchg   ebp,eax
  4179a4:	addr16 test eax,0x7e1e6bc5
  4179aa:	je     0x41794c
  4179ac:	je     0x417a1b
  4179ae:	ds pop ds
  4179b0:	push   ecx
  4179b1:	rcl    DWORD PTR [eax+0x19],cl
  4179b4:	cwde   
  4179b5:	mov    al,ds:0x10dd04ad
  4179ba:	pop    esi
  4179bb:	pop    ebx
  4179bc:	test   BYTE PTR [ebp+0x31f0bca4],ah
  4179c2:	fisttp DWORD PTR [eax+eax*2+0x55]
  4179c6:	or     DWORD PTR [ebx-0x7a41d911],edi
  4179cc:	mov    ecx,DWORD PTR [eax+0x679ea7e0]
  4179d2:	rcr    DWORD PTR [edi-0x2b],1
  4179d5:	stc    
  4179d6:	das    
  4179d7:	jl     0x4179a3
  4179d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179da:	cs ja  0x417a4c
  4179dd:	leave  
  4179de:	inc    eax
  4179df:	mov    dh,dh
  4179e1:	inc    ebp
  4179e2:	in     al,dx
  4179e3:	push   esp
  4179e4:	sub    al,0xe6
  4179e6:	dec    ebx
  4179e7:	in     al,0x4b
  4179e9:	push   0xffffffdd
  4179eb:	jg     0x417a54
  4179ed:	and    BYTE PTR [ebx],dl
  4179ef:	push   0x309061e7
  4179f4:	sub    eax,0x247c891d
  4179f9:	sbb    BYTE PTR [ecx+0x4284c915],al
  4179ff:	add    BYTE PTR [ebp-0x7d],bl
  417a02:	inc    edx
  417a03:	add    cl,ch
  417a05:	pop    eax
  417a06:	add    al,BYTE PTR [eax]
  417a08:	add    BYTE PTR [eax],ah
  417a0a:	add    ebp,ebx
  417a0c:	xchg   ecx,eax
  417a0d:	jecxz  0x4179c1
  417a0f:	mov    ah,0xb4
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	adc    BYTE PTR [eax],bh
  417a17:	or     bh,0x73
  417a1a:	loop   0x4179dc
  417a1c:	mov    esi,0xbebec235
  417a21:	into   
  417a22:	(bad)  
  417a23:	mov    ebp,0x81063cc1
  417a28:	dec    esp
  417a29:	bnd ret 0x66af
  417a2d:	add    eax,0xb84fee98
  417a32:	dec    esi
  417a33:	fldlg2 
  417a35:	mov    al,0xf5
  417a37:	push   ecx
  417a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a39:	mov    esi,0x3dfbf949
  417a3e:	out    dx,eax
  417a3f:	push   DWORD PTR [ebx]
  417a41:	mov    eax,0x970c7574
  417a46:	jl     0x417a92
  417a48:	jbe    0x417a75
  417a4a:	mov    ah,0xab
  417a4c:	pop    esp
  417a4d:	jns    0x417a1d
  417a4f:	cld    
  417a50:	xchg   edx,eax
  417a51:	dec    esi
  417a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a53:	ret    
  417a54:	daa    
  417a55:	inc    eax
  417a56:	and    edi,ebx
  417a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a59:	jno    0x417a1d
  417a5b:	mov    dl,0x37
  417a5d:	outs   dx,DWORD PTR ds:[esi]
  417a5e:	sub    BYTE PTR [eax+0x151a0543],bl
  417a64:	mov    bl,0x8b
  417a66:	inc    edx
  417a67:	out    0x2a,al
  417a69:	js     0x417a7a
  417a6b:	pop    ds
  417a6c:	inc    ebx
  417a6d:	repz lock mov edx,DWORD PTR [ecx-0x4cd3c792]
  417a75:	ss iret 
  417a77:	dec    ebp
  417a78:	aad    0xa3
  417a7a:	pop    ecx
  417a7b:	pop    ebp
  417a7c:	lea    ebp,gs:0x72c09ccf
  417a83:	inc    eax
  417a84:	pop    esp
  417a85:	push   ebp
  417a86:	jmp    0x7e6b:0x7f09d479
  417a8d:	(bad)  
  417a8e:	data16 and al,0xd7
  417a91:	dec    esi
  417a92:	adc    al,0xdb
  417a94:	ja     0x417a86
  417a96:	add    al,0x5b
  417a98:	ins    BYTE PTR es:[edi],dx
  417a99:	mov    ch,0x7f
  417a9b:	cwde   
  417a9c:	sub    ch,BYTE PTR [eax-0x7c2a6ce3]
  417aa2:	gs xor eax,0xf8e6cdc2
  417aa8:	xchg   esp,eax
  417aa9:	and    bl,al
  417aab:	shr    DWORD PTR [esi+edi*4],0x6b
  417aaf:	out    dx,eax
  417ab0:	mov    ss,WORD PTR [edi-0x43]
  417ab3:	rcl    BYTE PTR [esi],1
  417ab5:	lds    eax,FWORD PTR [ecx+0x58fb97c7]
  417abb:	pop    ds
  417abc:	and    BYTE PTR [ecx+0x4c99cb93],ch
  417ac2:	into   
  417ac3:	mov    edi,0x5e2cb1fe
  417ac8:	xchg   esp,eax
  417ac9:	div    BYTE PTR [ebx-0x70]
  417acc:	aas    
  417acd:	in     al,0xf3
  417acf:	fidivr DWORD PTR [edi+edi*8-0x4f]
  417ad3:	gs pusha 
  417ad5:	push   cs
  417ad6:	dec    ebp
  417ad7:	cmp    eax,0x87ae3d43
  417adc:	fldenv [esi]
  417ade:	or     DWORD PTR [edx-0x6d445759],ebp
  417ae4:	cmp    al,0xb0
  417ae6:	out    0xb0,al
  417ae8:	ins    BYTE PTR es:[edi],dx
  417ae9:	pop    ecx
  417aea:	arpl   WORD PTR [ebx+0x3b],bp
  417aed:	push   ebx
  417aee:	sbb    al,0xc8
  417af0:	push   ss
  417af1:	and    ebx,DWORD PTR [ecx-0x4]
  417af4:	out    dx,eax
  417af5:	cmp    ebp,esi
  417af7:	xor    ebp,esi
  417af9:	add    al,0x0
  417afb:	mov    edi,DWORD PTR [edx-0x7993742d]
  417b01:	inc    ecx
  417b02:	xor    bh,BYTE PTR [ebx+0x58]
  417b05:	mov    edi,ebx
  417b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b08:	inc    esi
  417b09:	outs   dx,BYTE PTR ds:[esi]
  417b0a:	ret    0xe6b
  417b0d:	lds    ecx,FWORD PTR [ecx+0x5a]
  417b10:	add    ecx,DWORD PTR [ebx-0x6bf5e08e]
  417b16:	nop
  417b17:	fild   QWORD PTR [ebx+0x5]
  417b1a:	js     0x417aa7
  417b1c:	cmp    al,BYTE PTR [edx]
  417b1e:	jl     0x417aad
  417b20:	xor    cl,dh
  417b22:	fcom   DWORD PTR [ecx-0x42]
  417b25:	fisttp DWORD PTR [ecx+0x43ab69b6]
  417b2b:	in     eax,dx
  417b2c:	sbb    DWORD PTR es:[ecx-0x19],esi
  417b30:	push   ebp
  417b31:	sub    al,0x32
  417b33:	xchg   edx,eax
  417b34:	dec    ebx
  417b35:	hlt    
  417b36:	and    ecx,0xffffff8a
  417b39:	lods   eax,DWORD PTR ds:[esi]
  417b3a:	dec    eax
  417b3b:	cmc    
  417b3c:	dec    ebx
  417b3d:	adc    BYTE PTR [esp+eiz*8+0x751d6268],bl
  417b44:	idiv   esi
  417b46:	and    al,0xbf
  417b48:	shr    DWORD PTR [edi+0x3],cl
  417b4b:	into   
  417b4c:	xor    ch,BYTE PTR [ebp-0xc]
  417b4f:	ss lahf 
  417b51:	add    BYTE PTR [eax+0x45],bl
  417b54:	mov    dh,0xa3
  417b56:	mov    gs,esp
  417b58:	jbe    0x417b2c
  417b5a:	jnp    0x417b41
  417b5c:	or     bl,ch
  417b5e:	mov    BYTE PTR [ebx+eax*2],dl
  417b61:	lea    eax,[edx]
  417b63:	sub    edi,DWORD PTR [eax]
  417b65:	bound  ebx,QWORD PTR [edx+0x1d]
  417b68:	jae    0x417b0d
  417b6a:	mov    ebp,esi
  417b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b6d:	popf   
  417b6e:	cld    
  417b6f:	inc    edx
  417b70:	mov    eax,ds:0x9e8f90fb
  417b75:	and    bl,BYTE PTR [ecx]
  417b77:	data16 jb 0x417b90
  417b7a:	mov    ds:0xdfa8f47a,eax
  417b7f:	mov    ecx,0x5f1cbf4
  417b84:	jmp    0x417bd9
  417b86:	push   eax
  417b87:	pop    esi
  417b88:	les    esi,FWORD PTR [edi-0x26]
  417b8b:	xor    eax,0x39ea325a
  417b90:	and    DWORD PTR [eax],ebp
  417b92:	mov    esi,0x43eaef91
  417b97:	adc    BYTE PTR [edi],ah
  417b99:	ja     0x417ba3
  417b9b:	pop    edi
  417b9c:	jge    0x417b75
  417b9e:	fsubr  QWORD PTR [ecx+0x33]
  417ba1:	(bad)  
  417ba2:	inc    ecx
  417ba3:	shl    DWORD PTR [ebx],1
  417ba5:	ss push edi
  417ba7:	mov    dl,0xe4
  417ba9:	sbb    ecx,DWORD PTR [edi]
  417bab:	fcom   DWORD PTR [edi+eax*1]
  417bae:	add    eax,eax
  417bb0:	jle    0x417bc1
  417bb2:	clc    
  417bb3:	(bad)  
  417bb4:	out    0xac,eax
  417bb6:	sbb    BYTE PTR [ebx-0x48780eac],bl
  417bbc:	xchg   esi,eax
  417bbd:	out    0xa6,al
  417bbf:	test   BYTE PTR [ebp-0x4e],0x27
  417bc3:	sbb    cl,ch
  417bc5:	sbb    DWORD PTR [esi],esp
  417bc7:	pusha  
  417bc8:	adc    DWORD PTR [edi-0x5dd80e46],ebx
  417bce:	loope  0x417b60
  417bd0:	sbb    DWORD PTR [eax+eax*1+0x55],ebp
  417bd4:	push   ecx
  417bd5:	popa   
  417bd6:	int3   
  417bd7:	jp     0x417bc9
  417bd9:	sub    cl,BYTE PTR [esi+0x68]
  417bdc:	xchg   esi,eax
  417bdd:	pop    esp
  417bde:	das    
  417bdf:	stos   DWORD PTR es:[edi],eax
  417be0:	mov    al,0x14
  417be2:	loop   0x417bbd
  417be4:	jg     0x417b8a
  417be6:	dec    esi
  417be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be8:	out    0xbc,eax
  417bea:	int    0xf4
  417bec:	lods   eax,DWORD PTR ds:[esi]
  417bed:	in     eax,0x72
  417bef:	sbb    eax,0xd9c53efa
  417bf4:	mov    es,esi
  417bf6:	retf   0x8f7b
  417bf9:	push   ebp
  417bfa:	push   es
  417bfb:	mov    esi,0x62d15030
  417c00:	xor    BYTE PTR [edi+ebx*4],bl
  417c03:	mov    bh,0x1f
  417c05:	(bad)  
  417c07:	push   0x69c01c22
  417c0c:	mov    esp,0xe347eb3a
  417c11:	test   eax,0x1ec01fcc
  417c16:	rol    BYTE PTR [ecx+0x1c],1
  417c19:	push   edx
  417c1a:	outs   dx,DWORD PTR ds:[esi]
  417c1b:	neg    BYTE PTR [esi]
  417c1d:	fisttp QWORD PTR [ecx]
  417c1f:	pop    ebx
  417c20:	jo     0x417c01
  417c22:	ins    DWORD PTR es:[edi],dx
  417c23:	mov    ah,0x49
  417c25:	or     DWORD PTR [edx+0x2],esp
  417c28:	add    ah,BYTE PTR [ebp-0x54ba9490]
  417c2e:	mov    edi,DWORD PTR [edi+0x1c43c8ca]
  417c34:	jb     0x417c1e
  417c36:	jae    0xa39c1897
  417c3c:	sti    
  417c3d:	cs stos DWORD PTR es:[edi],eax
  417c3f:	adc    edi,DWORD PTR [esp+eiz*4-0x67]
  417c43:	pop    esp
  417c44:	mov    bh,0xf5
  417c46:	es loopne 0x417c36
  417c49:	inc    eax
  417c4a:	aam    0x4c
  417c4c:	out    dx,eax
  417c4d:	xor    DWORD PTR [ebx],ebp
  417c4f:	pop    edx
  417c50:	fnsave [ebp+0x55]
  417c53:	inc    esp
  417c54:	pop    eax
  417c55:	jle    0x417c6f
  417c57:	mov    esp,0xc242a2fe
  417c5c:	cli    
  417c5d:	xor    edx,DWORD PTR [ecx+0x3f]
  417c60:	jp     0x417beb
  417c62:	je     0x417c88
  417c64:	sbb    al,0x81
  417c66:	add    eax,0x428425
  417c6b:	aam    0x4d
  417c6d:	add    BYTE PTR [eax],al
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42856d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42842d,0x42846d
  417c89:	push   0x4
  417c8b:	push   0x42257c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42843d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284cd,0x0
  417cb2:	mov    DWORD PTR ds:0x428561,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42843d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284cd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284e5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42853d
  417d00:	and    DWORD PTR ds:0x42834d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42832d
  417d10:	and    DWORD PTR ds:0x42831d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428411
  417d1e:	mov    edx,DWORD PTR ds:0x428485
  417d24:	mov    ebx,DWORD PTR ds:0x428501
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428325,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284bd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428349,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42843d,edi
  417d61:	cmp    DWORD PTR ds:0x428325,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428341
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428455,ecx
  417d87:	mov    DWORD PTR ds:0x4284e1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428559
  417d97:	adc    DWORD PTR ds:0x4284e9,0x890
  417da1:	xor    DWORD PTR ds:0x428355,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42831d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e3a
  417ddf:	push   0xe6eb9e5e
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xdf
  417deb:	push   edx
  417dec:	inc    edi
  417ded:	mov    DWORD PTR [ecx-0x2231961d],edx
  417df3:	shr    DWORD PTR [esp+esi*2],cl
  417df6:	jg     0x417def
  417df8:	pushf  
  417df9:	fbld   TBYTE PTR [ecx+0x193d8c17]
  417dff:	outs   dx,DWORD PTR ds:[esi]
  417e00:	and    ch,BYTE PTR [eax-0x1262003b]
  417e06:	xchg   DWORD PTR [eax],edi
  417e08:	repz in eax,dx
  417e0a:	(bad)  
  417e0b:	icebp  
  417e0c:	popa   
  417e0d:	lds    ebx,FWORD PTR [ebp+0x4ca32dc9]
  417e13:	cwde   
  417e14:	addr16 push edx
  417e16:	cmc    
  417e17:	mov    bl,0x82
  417e19:	mul    DWORD PTR [esi]
  417e1b:	fisttp WORD PTR [ecx+0x39686069]
  417e21:	inc    ebp
  417e22:	mov    eax,ds:0x1aa6c43
  417e27:	dec    ecx
  417e28:	cdq    
  417e29:	mov    bh,BYTE PTR [eax-0x67]
  417e2c:	sub    DWORD PTR [eax+0x5f],ebp
  417e2f:	and    eax,0x890c98c8
  417e34:	adc    al,0x13
  417e36:	sahf   
  417e37:	push   es
  417e38:	test   al,0x96
  417e3a:	ret    0x834
  417e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e3e:	inc    ebp
  417e3f:	dec    eax
  417e40:	inc    ebp
  417e41:	das    
  417e42:	or     BYTE PTR [eax+0x18dc42d0],dl
  417e48:	imul   esp,ecx,0xd89bf567
  417e4e:	or     BYTE PTR [esi],0x4e
  417e51:	je     0x417e18
  417e53:	jl     0x417de8
  417e55:	mov    esp,0x3190d204
  417e5a:	(bad)  [ecx]
  417e5c:	out    0x4c,al
  417e5e:	inc    esi
  417e5f:	pop    esp
  417e60:	movaps xmm7,XMMWORD PTR [ebx]
  417e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e64:	call   0xfd6bcacd
  417e69:	pop    esp
  417e6a:	push   esi
  417e6b:	arpl   WORD PTR ss:[edi-0x27c8a7c1],di
  417e72:	jne    0x417e3c
  417e74:	jge    0x417e12
  417e76:	jae    0x417e87
  417e78:	cli    
  417e79:	push   cs
  417e7a:	neg    BYTE PTR [ebp+0x65ef80f5]
  417e80:	enter  0xac4b,0xa1
  417e84:	arpl   WORD PTR [eax+esi*1+0xf],bx
  417e88:	fadd   QWORD PTR [edi+ebp*4-0xe]
  417e8c:	mov    cl,0xc6
  417e8e:	xor    bh,al
  417e90:	(bad)  
  417e91:	repnz or DWORD PTR [ebp-0x7f6a2e0b],edi
  417e98:	and    cl,bh
  417e9a:	push   0x33
  417e9c:	mov    bh,0x60
  417e9e:	sub    bh,bl
  417ea0:	in     eax,0xe3
  417ea2:	inc    esi
  417ea3:	imul   BYTE PTR [ebp+0xe]
  417ea6:	outs   dx,DWORD PTR ds:[esi]
  417ea7:	mov    ds:0xf90796b0,al
  417eac:	jno    0x417f04
  417eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb0:	frstor [esi-0x631618a9]
  417eb6:	pop    edx
  417eb7:	ja     0x417e89
  417eb9:	mov    esi,0x58825a5c
  417ebe:	or     ebx,DWORD PTR [eax+0x557a8bf8]
  417ec4:	mov    eax,DWORD PTR [ecx]
  417ec6:	leave  
  417ec7:	and    BYTE PTR [edx+0x3266ec13],bh
  417ecd:	push   esi
  417ece:	and    eax,0x70a59dad
  417ed3:	pop    ss
  417ed4:	xchg   esi,eax
  417ed5:	inc    esp
  417ed6:	sbb    BYTE PTR [ebp+0x64],0x85
  417eda:	dec    edi
  417edb:	jg     0x417ea3
  417edd:	scas   al,BYTE PTR es:[edi]
  417ede:	fbld   TBYTE PTR [ebx+ebp*4-0x4e]
  417ee2:	outs   dx,DWORD PTR ds:[esi]
  417ee3:	cmp    eax,0x93b0b3a5
  417ee8:	pop    es
  417ee9:	test   al,0x40
  417eeb:	cmp    ecx,ebp
  417eed:	xchg   edx,eax
  417eee:	cmp    eax,0xebb130
  417ef3:	or     BYTE PTR [ecx],0xde
  417ef6:	add    eax,0x37533f80
  417efb:	lea    edi,[esi-0x415c1437]
  417f01:	pop    edi
  417f02:	and    dl,BYTE PTR [ebp-0x70]
  417f05:	add    eax,0x40783a4b
  417f0a:	jle    0x417f0d
  417f0c:	dec    esi
  417f0d:	mov    esi,DWORD PTR [ebx]
  417f0f:	repnz enter 0xc6e0,0xaf
  417f14:	scas   eax,DWORD PTR es:[edi]
  417f15:	fimul  DWORD PTR [esi+0x25]
  417f18:	rol    ebp,cl
  417f1a:	pop    ss
  417f1b:	jle    0x417f44
  417f1d:	xchg   esp,eax
  417f1e:	push   ss
  417f1f:	adc    al,0x81
  417f21:	into   
  417f22:	lods   al,BYTE PTR ds:[esi]
  417f23:	sbb    DWORD PTR [edx],0xffffff97
  417f26:	pop    eax
  417f27:	push   0x90257291
  417f2c:	jnp    0x417eb2
  417f2e:	call   0x2942:0xfc67a6aa
  417f35:	or     al,0x17
  417f37:	test   DWORD PTR [esp+edi*2+0x5],esi
  417f3b:	stos   BYTE PTR es:[edi],al
  417f3c:	call   0xae52:0xfc484c63
  417f43:	push   0xffffffe5
  417f45:	push   eax
  417f46:	add    eax,0x8a89f815
  417f4b:	pop    ds
  417f4c:	clc    
  417f4d:	in     eax,0xd1
  417f4f:	mov    dh,0x31
  417f51:	mov    WORD PTR [ebp+ecx*1+0x5f],?
  417f55:	aaa    
  417f56:	call   0x9eb8:0x8694bf67
  417f5d:	sbb    esi,eax
  417f5f:	in     al,dx
  417f60:	out    0x90,al
  417f62:	fst    st(3)
  417f64:	push   ebx
  417f65:	inc    ebx
  417f66:	mov    BYTE PTR [ecx+edx*1-0x1743a841],ch
  417f6d:	scas   eax,DWORD PTR es:[edi]
  417f6e:	push   es
  417f6f:	push   edi
  417f70:	dec    edx
  417f71:	mov    al,ds:0x50e73690
  417f76:	ins    BYTE PTR es:[edi],dx
  417f77:	popf   
  417f78:	jmp    0x77cd256d
  417f7d:	jnp    0x417fc5
  417f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f80:	iret   
  417f81:	mov    eax,cs
  417f83:	sbb    BYTE PTR [esi-0x16bdff93],bh
  417f89:	(bad)  
  417f8a:	sub    BYTE PTR [edx+0x54],dl
  417f8d:	push   edx
  417f8e:	mov    dh,0xd7
  417f90:	clc    
  417f91:	pop    edi
  417f92:	push   ecx
  417f93:	xor    al,0x73
  417f95:	fnstenv [edi+0x131fc3e2]
  417f9b:	(bad)  
  417f9d:	sub    DWORD PTR [ebx-0x4b],esi
  417fa0:	cld    
  417fa1:	sub    DWORD PTR [ecx-0x129bf4e1],esp
  417fa7:	(bad)  
  417fa8:	jae    0x417fa9
  417faa:	mov    dh,BYTE PTR [ebp+0x560fac67]
  417fb0:	in     eax,dx
  417fb1:	adc    edi,DWORD PTR [eax+ebx*1]
  417fb4:	adc    al,BYTE PTR [eax+0x5741cf9f]
  417fba:	inc    edx
  417fbb:	add    al,0xb5
  417fbd:	jnp    0x418039
  417fbf:	out    0xd3,eax
  417fc1:	ret    
  417fc2:	mov    al,ds:0x6924ac53
  417fc7:	inc    esi
  417fc8:	cwde   
  417fc9:	ins    DWORD PTR es:[edi],dx
  417fca:	mov    ds:0x15d04df6,eax
  417fcf:	xchg   BYTE PTR ds:[eax+0x2d9984d6],dh
  417fd6:	and    BYTE PTR [eax],bl
  417fd8:	mov    edi,0x14b2438b
  417fdd:	add    esi,DWORD PTR [edx+0x5d2882e2]
  417fe3:	arpl   bx,si
  417fe5:	sub    BYTE PTR [esp+ebx*1],al
  417fe8:	or     eax,0x7568234d
  417fed:	or     ebx,DWORD PTR [edx+0x15]
  417ff0:	mov    bh,0x3d
  417ff2:	jle    0x41805a
  417ff4:	ja     0x417fdc
  417ff6:	lods   al,BYTE PTR ds:[esi]
  417ff7:	mov    eax,0x92977733
  417ffc:	fld    st(7)
  417ffe:	lods   eax,DWORD PTR ds:[esi]
  417fff:	les    esi,FWORD PTR [ecx]
  418001:	imul   ecx,ebp,0xdc677629
  418007:	dec    eax
  418008:	loop   0x417fea
  41800a:	mov    ds:0x884aeac1,eax
  41800f:	xor    DWORD PTR [edi],ebx
  418011:	fild   WORD PTR [ebp+0x266717b1]
  418017:	hlt    
  418018:	sbb    al,0xca
  41801a:	fdivp  st(2),st
  41801c:	or     eax,DWORD PTR ds:0xc549443b
  418022:	mov    ebx,0xa8515011
  418027:	fcom   QWORD PTR [ebp+0x24848dac]
  41802d:	cwde   
  41802e:	add    BYTE PTR [eax],al
  418030:	add    BYTE PTR [ebx+0x42844d3d],al
  418036:	add    BYTE PTR [eax],al
  418038:	mov    DWORD PTR ds:0x428325,0x1551
  418042:	mov    DWORD PTR ds:0x428535,0x780e
  41804c:	mov    DWORD PTR ds:0x428329,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428331,edx
  418061:	mov    DWORD PTR ds:0x42832d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42844d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281e1
  41807d:	push   0x428147
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428485
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42852d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x4283f5
  4180a1:	adc    DWORD PTR ds:0x4284f1,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42843d,edi
  4180ae:	adc    DWORD PTR ds:0x4284c9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283a1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428415,ebx
  4180c4:	xor    DWORD PTR ds:0x4284d9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428455,0x0
  4180d5:	mov    DWORD PTR ds:0x42843d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284cd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42856d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428455,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428401
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428359,ecx
  41810f:	adc    DWORD PTR ds:0x428539,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428465
  418121:	mov    edx,DWORD PTR ds:0x428379
  418127:	mov    ebx,DWORD PTR ds:0x428501
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428539
  418138:	mov    ebx,DWORD PTR ds:0x4283a9
  41813e:	mov    ecx,DWORD PTR ds:0x4285a9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428441,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42856d
  418164:	sub    DWORD PTR ds:0x42844d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428565,0x0
  418174:	mov    DWORD PTR ds:0x4284cd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428565,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428465,ebx
  4181b3:	add    DWORD PTR ds:0x428569,0x428431
  4181bd:	mov    ebx,DWORD PTR ds:0x428551
  4181c3:	sbb    ebx,DWORD PTR ds:0x4283f9
  4181c9:	mov    DWORD PTR ds:0x428551,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x42839d
  4181d5:	mov    ebx,DWORD PTR ds:0x428519
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42831d
  4181e6:	and    ebx,DWORD PTR ds:0x428419
  4181ec:	mov    DWORD PTR ds:0x42831d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42854d,0x0
  418207:	mov    DWORD PTR ds:0x4284d5,0x564a
  418211:	mov    DWORD PTR ds:0x428455,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42854d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428449
  418252:	adc    DWORD PTR ds:0x42855d,ecx
  418258:	xor    DWORD PTR ds:0x428335,0x4309
  418262:	sub    DWORD PTR ds:0x428365,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	mov    fs,WORD PTR [eax+0x3c]
  418280:	xchg   edx,eax
  418281:	fs jmp 0xbebe:0xc235bec0
  418289:	fsubr  DWORD PTR [esi-0x50]
  41828c:	fcom   QWORD PTR [esi-0x4a]
  41828f:	jae    0x418253
  418291:	iret   
  418292:	push   edx
  418293:	loop   0x4182ab
  418295:	mov    esi,0xbf6c126d
  41829a:	cld    
  41829b:	xchg   edi,eax
  41829c:	add    DWORD PTR [ebx],ecx
  41829e:	int3   
  41829f:	and    eax,DWORD PTR [edx]
  4182a1:	add    DWORD PTR [ebp-0x7edfe6d4],eax
  4182a7:	add    dh,BYTE PTR [bx+0x2b03]
  4182ac:	repnz sub al,0x23
  4182af:	loopne 0x4182d5
  4182b1:	test   eax,0x4fb9ee6f
  4182b6:	sbb    eax,0x27c37a1c
  4182bb:	and    al,0x7d
  4182bd:	gs jno 0x418265
  4182c0:	and    DWORD PTR [ebp+0x2b],edi
  4182c3:	ret    
  4182c4:	sub    bh,BYTE PTR [ebx+0x6a]
  4182c7:	stc    
  4182c8:	mov    esi,0x35ff1ba4
  4182cd:	dec    edi
  4182ce:	popf   
  4182cf:	add    eax,DWORD PTR [esp+ecx*4]
  4182d2:	test   eax,0xd1d85fc0
  4182d7:	sbb    eax,0xa3c7a790
  4182dc:	dec    edi
  4182dd:	cmp    eax,0xc680ce28
  4182e2:	and    al,BYTE PTR [edx]
  4182e4:	sub    BYTE PTR [ebx-0x4d],bl
  4182e7:	jg     0x41833f
  4182e9:	ins    DWORD PTR es:[edi],dx
  4182ea:	ins    BYTE PTR es:[edi],dx
  4182eb:	aad    0x37
  4182ed:	int    0xf9
  4182ef:	fs loope 0x418326
  4182f2:	leave  
  4182f3:	pop    es
  4182f4:	fst    QWORD PTR [edi]
  4182f6:	retf   0x7bc2
  4182f9:	test   DWORD PTR [eax-0x661e6fa1],edi
  4182ff:	loop   0x4182f0
  418301:	jo     0x4182b9
  418303:	shl    BYTE PTR [ebx-0x47],cl
  418306:	shl    DWORD PTR [eax+ebp*2-0x7f9b8ec1],1
  41830d:	bound  esi,QWORD PTR [ebx+eiz*1]
  418310:	std    
  418311:	push   ecx
  418312:	ds lock mov edx,0x9719075e
  418319:	jo     0x418344
  41831b:	mov    BYTE PTR [ebp-0x7e],ah
  41831e:	mov    bl,0x5c
  418320:	jbe    0x4182ed
  418322:	sub    edx,DWORD PTR [esi+esi*8+0xd]
  418326:	jle    0x4182c6
  418328:	sahf   
  418329:	dec    esi
  41832a:	dec    ebx
  41832b:	ret    0x7848
  41832e:	gs stos DWORD PTR es:[edi],eax
  418330:	(bad)  
  418331:	jbe    0x4182fb
  418333:	jns    0x418393
  418335:	pop    eax
  418336:	icebp  
  418337:	enter  0x1420,0x76
  41833b:	mov    ch,BYTE PTR [ecx+edi*8+0x1e]
  41833f:	in     eax,dx
  418340:	out    dx,al
  418341:	dec    edi
  418342:	xor    eax,0x38eafeb7
  418347:	xchg   edx,eax
  418348:	fs ret 0x8f5
  41834c:	cdq    
  41834d:	pop    ss
  41834e:	inc    esp
  41834f:	iret   
  418350:	jo     0x4183b6
  418352:	jl     0x4182f7
  418354:	sub    DWORD PTR [edi-0x17],0xd309ed
  41835b:	and    eax,0x9395e482
  418360:	add    DWORD PTR [ebp-0x131c68d9],ecx
  418366:	adc    bl,BYTE PTR [eax+ecx*4]
  418369:	or     al,0xe4
  41836b:	mov    eax,0xe7cf800d
  418370:	(bad)  
  418371:	shr    ecx,1
  418373:	test   eax,0xdec9cafd
  418378:	add    eax,0x87c12fa6
  41837d:	mov    ecx,0xd5f0ac7f
  418382:	inc    edx
  418383:	fld    TBYTE PTR [ecx+0x7e]
  418386:	xor    DWORD PTR [esi+0x10cacae8],0xffffffbc
  41838d:	dec    edx
  41838e:	fcomp  QWORD PTR [eax-0x6f6e8b2]
  418394:	int    0x3
  418396:	jb     0x41832f
  418398:	xor    al,0xff
  41839a:	or     eax,0x838e6889
  41839f:	cmp    DWORD PTR [edi+0x4d0d6d5c],ebx
  4183a5:	push   edi
  4183a6:	in     eax,0x33
  4183a8:	fdiv   DWORD PTR [ebx]
  4183aa:	in     eax,dx
  4183ab:	gs inc eax
  4183ad:	or     al,0x93
  4183af:	sbb    bh,BYTE PTR [edx-0x7c0cc993]
  4183b5:	jg     0x418346
  4183b7:	call   0x64f55242
  4183bc:	add    eax,0x8f29b92d
  4183c1:	jnp    0x41835b
  4183c3:	fdivr  st,st(6)
  4183c5:	in     eax,0xfd
  4183c7:	lea    eax,[edi+0x7a7e6edc]
  4183cd:	pusha  
  4183ce:	add    eax,0xed60396e
  4183d3:	out    0x4e,al
  4183d5:	inc    esi
  4183d6:	add    bl,BYTE PTR ds:0x3588318e
  4183dc:	test   BYTE PTR [eax],dh
  4183de:	in     eax,0xfd
  4183e0:	xchg   edx,eax
  4183e1:	add    al,0x79
  4183e3:	ja     0x41842a
  4183e5:	dec    edx
  4183e6:	fcmovnbe st,st(5)
  4183e8:	cs mov bl,0xab
  4183eb:	pop    es
  4183ec:	loop   0x4183cd
  4183ee:	mov    edi,0xaf154b74
  4183f3:	ret    
  4183f4:	add    BYTE PTR [ebp+0x7e],0x46
  4183f8:	inc    ebp
  4183f9:	adc    DWORD PTR [esi+0x3033960f],esp
  4183ff:	cmc    
  418400:	jge    0x418427
  418402:	in     eax,dx
  418403:	sahf   
  418404:	mov    ebp,0xca5f818d
  418409:	sbb    al,0xe2
  41840b:	adc    BYTE PTR [eax+0x55061592],al
  418411:	sar    DWORD PTR [eax+ecx*1],0xe3
  418415:	adc    BYTE PTR [ebp+ebp*1-0xee58b7],0x86
  41841d:	les    esi,FWORD PTR [ebx]
  41841f:	loop   0x4183d2
  418421:	iret   
  418422:	ins    DWORD PTR es:[edi],dx
  418423:	or     edx,DWORD PTR [eax+0x75]
  418426:	sub    al,0x49
  418428:	or     cl,BYTE PTR [edi-0x35]
  41842b:	adc    al,BYTE PTR [edi+ecx*8-0x48]
  41842f:	or     DWORD PTR [ebx],ecx
  418431:	stos   BYTE PTR es:[edi],al
  418432:	ficomp WORD PTR [esi-0x46]
  418435:	jno    0x4183c0
  418437:	xor    edi,esp
  418439:	rol    DWORD PTR [edx-0x2efbe7cc],1
  41843f:	mov    ds:0x4b782a67,eax
  418444:	dec    ebp
  418445:	les    edi,FWORD PTR [ebx+0xc11c00e]
  41844b:	stos   DWORD PTR es:[edi],eax
  41844c:	or     al,0x1b
  41844e:	inc    ebp
  41844f:	int    0x8b
  418451:	xor    eax,0xcac635a1
  418456:	cmp    al,0xaa
  418458:	sub    ebp,edx
  41845a:	jbe    0x418445
  41845c:	imul   ch
  41845e:	xchg   edi,eax
  41845f:	arpl   WORD PTR [ebp-0x4d],dx
  418462:	hlt    
  418463:	dec    eax
  418464:	mov    eax,ds:0x20dbe317
  418469:	jae    0x4184dd
  41846b:	pushf  
  41846c:	lods   al,BYTE PTR ds:[esi]
  41846d:	jmp    0x418453
  41846f:	iret   
  418470:	popa   
  418471:	push   cs
  418472:	fucomip st,st(5)
  418474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418475:	pop    es
  418476:	sar    dl,1
  418478:	xchg   esi,eax
  418479:	push   ecx
  41847a:	mov    esp,0xec24e2f9
  41847f:	mov    WORD PTR [ebp+0x74],fs
  418482:	and    DWORD PTR [esi+0x3e],ebx
  418485:	adc    dl,BYTE PTR [ecx+0x8267b9d]
  41848b:	or     BYTE PTR [edx+0x45f46694],dh
  418491:	(bad)  
  418492:	and    al,0x4f
  418494:	xchg   ebp,eax
  418495:	stc    
  418496:	aas    
  418497:	mov    ecx,0xd3920e75
  41849c:	sbb    al,0x45
  41849e:	ss inc eax
  4184a0:	and    BYTE PTR [eax],bl
  4184a2:	jp     0x418441
  4184a4:	lods   eax,DWORD PTR ds:[esi]
  4184a5:	dec    ebx
  4184a6:	out    0xfc,al
  4184a8:	call   0x5f350c27
  4184ad:	inc    edi
  4184ae:	pop    edx
  4184af:	into   
  4184b0:	sar    BYTE PTR gs:[ebp+0x40],1
  4184b4:	aad    0xe3
  4184b6:	in     al,0xe8
  4184b8:	pop    edi
  4184b9:	xchg   ebx,eax
  4184ba:	out    0x46,al
  4184bc:	(bad)  
  4184bd:	(bad)  
  4184be:	adc    edi,edx
  4184c0:	mov    bl,0xe9
  4184c2:	dec    esp
  4184c3:	mov    ch,0xde
  4184c5:	cmc    
  4184c6:	pusha  
  4184c7:	cmp    al,0x88
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x9e9fd9a4
  4185cf:	nop
  4185d0:	fsub   st(7),st
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0xe7
  4185d9:	outs   dx,DWORD PTR ds:[esi]
  4185da:	dec    esp
  4185db:	ret    0x408
  4185de:	mov    bh,BYTE PTR [esi+0xde0b952]
  4185e4:	jge    0x41865b
  4185e6:	loope  0x4185b5
  4185e8:	xchg   BYTE PTR [ebx],dl
  4185ea:	mov    bl,0x3d
  4185ec:	hlt    
  4185ed:	mov    eax,0xe92c60d6
  4185f2:	stc    
  4185f3:	inc    esi
  4185f4:	add    al,0xc
  4185f6:	add    eax,0x7d0c75b7
  4185fb:	les    eax,FWORD PTR [esi+0x68481134]
  418601:	pusha  
  418602:	dec    DWORD PTR [ebx+0x640c7402]
  418608:	inc    esp
  418609:	(bad)  
  41860a:	pop    esp
  41860b:	jp     0x4185ea
  41860d:	mov    esi,0x37cf0819
  418612:	ss scas al,BYTE PTR es:[edi]
  418614:	xor    dl,al
  418616:	dec    ecx
  418617:	out    dx,al
  418618:	xchg   ebp,eax
  418619:	mov    bl,0xf1
  41861b:	inc    esp
  41861c:	in     al,dx
  41861d:	jno    0x41864d
  41861f:	jno    0x41863c
  418621:	pop    ecx
  418622:	test   BYTE PTR [ebx+0x78],cl
  418625:	ret    
  418626:	cmc    
  418627:	xor    eax,0x8110d09b
  41862c:	xor    cl,BYTE PTR [edx]
  41862e:	call   0xda30:0x1dab6c83
  418635:	pop    edx
  418636:	jno    0x418665
  418638:	clc    
  418639:	dec    esi
  41863a:	aas    
  41863b:	cwde   
  41863c:	rcl    BYTE PTR [ebp+edi*2+0x585681ca],0xb9
  418644:	cmp    esi,DWORD PTR [ecx+esi*1+0x2a]
  418648:	mov    bl,0x5b
  41864a:	sub    DWORD PTR [esi],ebp
  41864c:	sbb    DWORD PTR [esi],0xffffffff
  41864f:	cmp    eax,0x90c722f1
  418654:	xchg   esp,eax
  418655:	inc    esi
  418656:	mov    ds:0xa3ce8470,al
  41865b:	pop    es
  41865c:	dec    eax
  41865d:	ins    DWORD PTR es:[edi],dx
  41865e:	pop    ds
  41865f:	cld    
  418660:	and    al,0x62
  418662:	jl     0x418657
  418664:	rcl    DWORD PTR [esi],1
  418666:	jo     0x418671
  418668:	fdivr  DWORD PTR [edx]
  41866a:	push   ds
  41866b:	dec    edx
  41866c:	loopne 0x4186bd
  41866e:	outs   dx,DWORD PTR ds:[esi]
  41866f:	arpl   WORD PTR ds:0x50ac71d8,ax
  418675:	adc    BYTE PTR [edx],0x40
  418678:	ss pop eax
  41867a:	mov    edx,0x8a1c2e2a
  41867f:	int3   
  418680:	bound  esi,QWORD PTR [esp+eax*2+0x577d4210]
  418687:	clc    
  418688:	or     eax,0xa8806aff
  41868d:	dec    ebp
  41868e:	stos   BYTE PTR es:[edi],al
  41868f:	mov    ds:0x7afa520d,al
  418694:	out    dx,al
  418695:	addr16 pop esi
  418697:	jmp    0x4186c6
  418699:	outs   dx,BYTE PTR ds:[esi]
  41869a:	das    
  41869b:	add    BYTE PTR [edi+esi*1-0x4f60c74e],dl
  4186a2:	sahf   
  4186a3:	icebp  
  4186a4:	daa    
  4186a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a6:	push   cs
  4186a7:	cmove  edx,DWORD PTR [ebx-0x3acbc385]
  4186ae:	aas    
  4186af:	ins    BYTE PTR es:[edi],dx
  4186b0:	mov    bl,0xbf
  4186b2:	push   ebx
  4186b3:	cdq    
  4186b4:	dec    edx
  4186b5:	jmp    0x4186b9
  4186b7:	adc    edi,edi
  4186b9:	adc    DWORD PTR [edx],edi
  4186bb:	adc    BYTE PTR [esi-0x2a],dl
  4186be:	in     al,0xb7
  4186c0:	int    0xf8
  4186c2:	mov    dl,0x1e
  4186c4:	(bad)  
  4186c5:	jmp    ebx
  4186c7:	sbb    DWORD PTR [eax],0x10
  4186ca:	add    al,0x31
  4186cc:	mov    esp,0xcae453de
  4186d1:	test   BYTE PTR [edx-0x33],dh
  4186d4:	or     al,0xfa
  4186d6:	stos   BYTE PTR es:[edi],al
  4186d7:	inc    ebx
  4186d8:	call   0xc4d3:0x236a4b70
  4186df:	jb     0x41875c
  4186e1:	and    eax,0x59c0e697
  4186e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e7:	repnz sub al,0xfb
  4186ea:	xor    BYTE PTR [esi],bl
  4186ec:	and    cl,dl
  4186ee:	cmp    ecx,DWORD PTR [ebp-0x63]
  4186f1:	imul   esi,DWORD PTR [edx+0x5c6afac5],0x2bdfe6ac
  4186fb:	xchg   ebp,eax
  4186fc:	pop    ebx
  4186fd:	je     0x418778
  4186ff:	sti    
  418700:	push   es
  418701:	and    eax,DWORD PTR [ecx]
  418703:	cmp    edi,0x956f5bd4
  418709:	adc    DWORD PTR gs:[esp+eiz*8-0x3fcdbac3],0xd203f49f
  418715:	retf   0x406d
  418718:	out    0x72,eax
  41871a:	dec    edx
  41871b:	sub    DWORD PTR [ecx+edx*8+0x27],esp
  41871f:	push   ebx
  418720:	inc    esp
  418721:	xchg   ecx,eax
  418722:	push   ss
  418723:	mov    eax,gs
  418725:	addr16 sahf 
  418727:	ds jle 0x418713
  41872a:	xchg   edi,eax
  41872b:	pop    edi
  41872c:	and    ebp,DWORD PTR [edi-0x4f48c2df]
  418732:	mov    BYTE PTR [ebp-0x15c0fbd1],bl
  418738:	fs mov eax,0xf16e0591
  41873e:	leave  
  41873f:	popa   
  418740:	and    ah,BYTE PTR [esi-0x2f430183]
  418746:	sahf   
  418747:	mov    eax,0x4eba870d
  41874c:	scas   eax,DWORD PTR es:[edi]
  41874d:	or     eax,0x8adab526
  418752:	cli    
  418753:	sti    
  418754:	mov    dh,0x3a
  418756:	jmp    0x4d35:0x3a3329b2
  41875d:	sbb    BYTE PTR [edi-0x4be1a718],ch
  418763:	out    0xdf,al
  418765:	outs   dx,DWORD PTR ds:[esi]
  418766:	test   BYTE PTR [ecx],bh
  418768:	xor    al,0x14
  41876a:	fist   WORD PTR [ecx-0x33]
  41876d:	sub    al,0x12
  41876f:	mov    cl,0x5b
  418771:	fbld   TBYTE PTR [ebx]
  418773:	bound  ebp,QWORD PTR [ebx]
  418775:	pop    ss
  418776:	xchg   edi,eax
  418777:	sar    BYTE PTR [edx+0x13e181a6],0xf5
  41877e:	xor    al,0x14
  418780:	or     al,al
  418782:	cli    
  418783:	not    DWORD PTR [ebp-0x69]
  418786:	cmc    
  418787:	pop    esp
  418788:	push   edi
  418789:	je     0x418726
  41878b:	pushf  
  41878c:	in     eax,0xe7
  41878e:	sbb    BYTE PTR [eax+edi*8+0x6e],bl
  418792:	push   ss
  418793:	ret    
  418794:	or     al,0x50
  418796:	test   DWORD PTR [ebx],ebx
  418798:	inc    eax
  418799:	scas   eax,DWORD PTR es:[edi]
  41879a:	push   0xffffffd3
  41879c:	ds retf 0x761c
  4187a0:	mov    ch,0x24
  4187a2:	idiv   al
  4187a4:	lahf   
  4187a5:	hlt    
  4187a6:	pop    ss
  4187a7:	iret   
  4187a8:	enter  0xa2ff,0x27
  4187ac:	sub    eax,0x421825b3
  4187b1:	add    eax,0x59d66442
  4187b6:	jle    0x41877d
  4187b8:	aam    0x6e
  4187ba:	jnp    0x4187e6
  4187bc:	mov    DWORD PTR [ecx+0x70],eax
  4187bf:	fidivr WORD PTR [edi-0x4d]
  4187c2:	pop    ds
  4187c3:	sbb    eax,0x668a3fc
  4187c8:	or     bl,BYTE PTR [ebx]
  4187ca:	dec    esi
  4187cb:	dec    ecx
  4187cc:	popa   
  4187cd:	ror    DWORD PTR [esi+eax*2+0x1690dd8a],cl
  4187d4:	mov    bl,BYTE PTR [esi-0x60]
  4187d7:	mov    WORD PTR [edx-0x64b6c206],gs
  4187dd:	sub    DWORD PTR ds:0x9fdbc4ab,ecx
  4187e3:	dec    edx
  4187e4:	xchg   esi,eax
  4187e5:	sub    BYTE PTR [eax+edi*4],dl
  4187e8:	test   DWORD PTR [edi-0x8],eax
  4187eb:	iret   
  4187ec:	xchg   ebx,eax
  4187ed:	jo     0x4187df
  4187ef:	cdq    
  4187f0:	adc    edx,DWORD PTR [edi+0xfa9a5ae]
  4187f6:	xor    bl,BYTE PTR [ebx]
  4187f8:	push   edi
  4187f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fa:	outs   dx,BYTE PTR ds:[esi]
  4187fb:	jp     0x41879c
  4187fd:	es or  ch,dh
  418800:	in     eax,dx
  418801:	cmp    al,0x74
  418803:	jo     0x41887b
  418805:	adc    esi,edi
  418807:	adc    eax,0xc18b617a
  41880c:	jmp    0xb512:0x96fa85e2
  418813:	in     al,0x4e
  418815:	test   DWORD PTR [ebp+0x3646055e],eax
  41881b:	add    BYTE PTR [eax],al
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0x5fa47b70],ebx
  418894:	nop
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0xff
  41889e:	inc    BYTE PTR [edx+eax*8+0x4d]
  4188a2:	mov    cl,0x2
  4188a4:	dec    ebx
  4188a5:	add    al,0xd3
  4188a7:	push   0x5c1985c5
  4188ac:	adc    ah,BYTE PTR [esi+esi*2+0x70f493d8]
  4188b3:	add    BYTE PTR [esi],al
  4188b5:	fs xchg ebx,eax
  4188b7:	push   ebx
  4188b8:	jae    0x4188a0
  4188ba:	scas   al,BYTE PTR es:[edi]
  4188bb:	xchg   esp,eax
  4188bc:	xlat   BYTE PTR ds:[ebx]
  4188bd:	and    BYTE PTR [ecx-0x1a],bl
  4188c0:	popa   
  4188c1:	je     0x4188d6
  4188c3:	dec    ebp
  4188c4:	mov    esp,0xa27bddd5
  4188c9:	fwait
  4188ca:	cld    
  4188cb:	inc    eax
  4188cc:	ss (bad) 
  4188cf:	popf   
  4188d0:	mov    cs,edx
  4188d2:	clc    
  4188d3:	into   
  4188d4:	pop    esi
  4188d5:	addr16 test eax,0xfbba9bd2
  4188db:	mov    fs,esp
  4188dd:	dec    esi
  4188de:	push   edx
  4188df:	mov    ebx,0x71498a34
  4188e4:	les    edi,FWORD PTR [edx-0x8e34719]
  4188ea:	pop    esi
  4188eb:	arpl   WORD PTR [edi],di
  4188ed:	test   DWORD PTR [ebp-0x73],esi
  4188f0:	(bad)  
  4188f1:	std    
  4188f2:	mov    ebx,0xd9462166
  4188f7:	fdiv   QWORD PTR [ebp-0x2aa472ae]
  4188fd:	js     0x41890e
  4188ff:	ins    DWORD PTR es:[edi],dx
  418900:	ins    BYTE PTR es:[edi],dx
  418901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418902:	cmc    
  418903:	jge    0x4188f5
  418905:	scas   al,BYTE PTR es:[edi]
  418906:	xor    bh,ah
  418908:	js     0x418980
  41890a:	push   esi
  41890b:	iret   
  41890c:	lahf   
  41890d:	jnp    0x418929
  41890f:	fs pop eax
  418911:	shl    DWORD PTR [ecx],0x15
  418914:	bound  esp,QWORD PTR [ebx]
  418916:	lahf   
  418917:	es nop
  418919:	cwde   
  41891a:	daa    
  41891b:	call   FWORD PTR [edi+ecx*2]
  41891e:	ja     0x41899a
  418920:	push   edx
  418921:	rcr    edx,1
  418923:	dec    ebx
  418924:	ror    DWORD PTR [ebx],1
  418926:	pop    edx
  418927:	fcomp  st(3)
  418929:	dec    eax
  41892a:	outs   dx,DWORD PTR ds:[esi]
  41892b:	in     al,dx
  41892c:	arpl   WORD PTR [edx],ax
  41892e:	inc    ebx
  41892f:	xchg   BYTE PTR [esi],dh
  418931:	neg    DWORD PTR [edi-0x45]
  418934:	adc    ah,ah
  418936:	jae    0x418944
  418938:	sbb    eax,0x4ff76953
  41893d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41893e:	mov    esi,eax
  418940:	mov    WORD PTR [edi],gs
  418942:	iret   
  418943:	lock ds lock push cs
  418947:	not    dl
  418949:	pop    es
  41894a:	cli    
  41894b:	dec    esi
  41894c:	outs   dx,BYTE PTR ds:[esi]
  41894d:	or     cl,BYTE PTR [ecx-0x5069a375]
  418953:	add    al,0xe5
  418955:	out    0x3,al
  418957:	aas    
  418958:	gs mov esi,0xf564c3ff
  41895e:	adc    BYTE PTR [ebp+0x2e7e4af1],0x0
  418965:	aaa    
  418966:	or     ah,BYTE PTR [ebp-0x667824cd]
  41896c:	lock retf 
  41896e:	int    0x52
  418970:	or     eax,0x150a1dac
  418975:	out    dx,al
  418976:	imul   eax,DWORD PTR [esi-0x35e357e7],0x334516af
  418980:	push   ecx
  418981:	mov    ecx,0xe60437fc
  418986:	or     cl,BYTE PTR [ecx-0x43]
  418989:	or     ebp,DWORD PTR [ecx+eiz*1+0x23178dcb]
  418990:	sbb    ch,dl
  418992:	retf   
  418993:	icebp  
  418994:	bound  edx,QWORD PTR [eax]
  418996:	stc    
  418997:	cwde   
  418998:	aad    0xd4
  41899a:	and    al,dh
  41899c:	ds adc eax,0x16c13c83
  4189a2:	jmp    0x4189ee
  4189a4:	fwait
  4189a5:	ror    DWORD PTR [edi+0x5],cl
  4189a8:	mov    esi,0x6500f272
  4189ad:	stos   BYTE PTR es:[edi],al
  4189ae:	adc    eax,0xaceab173
  4189b3:	lods   al,BYTE PTR ds:[esi]
  4189b4:	mov    ebp,0x4d969a19
  4189b9:	rol    ch,cl
  4189bb:	pop    ebx
  4189bc:	push   cs
  4189bd:	ror    DWORD PTR [ecx+0x74],cl
  4189c0:	mov    dh,0x19
  4189c2:	and    DWORD PTR [ebx],edx
  4189c4:	adc    cl,BYTE PTR ds:0xec0c0a46
  4189ca:	inc    edi
  4189cb:	enter  0x619a,0x82
  4189cf:	addr16 iret 
  4189d1:	jmp    0x418a20
  4189d3:	push   ds
  4189d4:	mov    ds:0x9f2ad723,eax
  4189d9:	dec    eax
  4189da:	or     ecx,DWORD PTR [edx]
  4189dc:	jnp    0x4189a3
  4189de:	rol    ecx,0xb6
  4189e1:	xor    eax,0xcc93cda4
  4189e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e7:	loope  0x418978
  4189e9:	adc    al,0x9d
  4189eb:	enter  0x7a44,0xa1
  4189ef:	daa    
  4189f0:	pusha  
  4189f1:	(bad)  
  4189f2:	or     BYTE PTR [esi+0x1e],0x62
  4189f6:	or     esp,DWORD PTR [esi-0x63]
  4189f9:	out    0xbf,al
  4189fb:	add    eax,0xb1a321d1
  418a00:	jg     0x418a54
  418a02:	rcr    esi,1
  418a04:	xor    ecx,DWORD PTR [edx]
  418a06:	pop    ss
  418a07:	cmp    DWORD PTR [edx+0x15e4e485],esi
  418a0d:	lock pop es
  418a0f:	dec    edi
  418a10:	aam    0x87
  418a12:	je     0x418a63
  418a14:	inc    ecx
  418a15:	mov    ds:0x878653ad,eax
  418a1a:	fwait
  418a1b:	mov    bl,0x65
  418a1d:	push   ebp
  418a1e:	jecxz  0x418a89
  418a20:	push   esp
  418a21:	out    0xc8,eax
  418a23:	pop    ecx
  418a24:	or     edx,DWORD PTR [ecx+0x6e]
  418a27:	sub    al,0x3c
  418a29:	mov    cl,0xb4
  418a2b:	fmul   st,st(6)
  418a2d:	mov    dh,0xdf
  418a2f:	xchg   edi,eax
  418a30:	je     0x4189ce
  418a32:	pop    esi
  418a33:	push   0xd03fd8ed
  418a38:	push   esi
  418a39:	xor    BYTE PTR [eax],ch
  418a3b:	jmp    0xe4f2:0x704b83b
  418a42:	je     0x418a11
  418a44:	fs stos BYTE PTR es:[edi],al
  418a46:	loope  0x418a2b
  418a48:	mov    al,0x9f
  418a4a:	cli    
  418a4b:	adc    DWORD PTR [eax+0x8],eax
  418a4e:	out    dx,al
  418a4f:	mov    ecx,0xd8db1d07
  418a54:	imul   ebp,ecx,0x16cd7a10
  418a5a:	clc    
  418a5b:	add    eax,0x5cc7066d
  418a60:	pop    edi
  418a61:	daa    
  418a62:	add    BYTE PTR [ebp+0x2],dh
  418a65:	add    ch,0x42
  418a68:	cli    
  418a69:	inc    eax
  418a6a:	repnz dec eax
  418a6c:	jg     0x418ac4
  418a6e:	ins    DWORD PTR es:[edi],dx
  418a6f:	loope  0x418ad6
  418a71:	pop    eax
  418a72:	loopne 0x418ab8
  418a74:	retf   
  418a75:	sub    BYTE PTR [ebx+eax*2-0x5d],ah
  418a79:	shl    ah,0xb
  418a7c:	retf   0xb47e
  418a7f:	add    eax,0xe6a5d897
  418a84:	aas    
  418a85:	in     eax,0x52
  418a87:	mov    esi,DWORD PTR [edx-0xe]
  418a8a:	shl    esi,0x40
  418a8d:	adc    eax,0x340bb2df
  418a92:	cli    
  418a93:	lods   eax,DWORD PTR ds:[esi]
  418a94:	es inc eax
  418a96:	sub    al,0xd
  418a98:	scas   eax,DWORD PTR es:[edi]
  418a99:	leave  
  418a9a:	cmp    DWORD PTR [esp+esi*1],edi
  418a9d:	sub    DWORD PTR [ebp-0x2],edx
  418aa0:	or     DWORD PTR [esi],0xffffffad
  418aa3:	cli    
  418aa4:	retf   
  418aa5:	nop
  418aa6:	mov    ah,0xef
  418aa8:	idiv   BYTE PTR [esi-0x6e278413]
  418aae:	jmp    0xfb9b:0x752594
  418ab5:	cld    
  418ab6:	fs hlt 
  418ab8:	das    
  418ab9:	enter  0xc076,0x49
  418abd:	or     bh,BYTE PTR [ebx+0x5b]
  418ac0:	adc    BYTE PTR [edx],ah
  418ac2:	mov    edx,0xf9d0b708
  418ac7:	or     al,0x70
  418ac9:	sti    
  418aca:	outs   dx,DWORD PTR ds:[esi]
  418acb:	dec    esp
  418acc:	xchg   BYTE PTR [ecx-0x74],dh
  418acf:	les    edi,FWORD PTR [eiz*4-0x1c48d241]
  418ad6:	pcmpgtd mm5,QWORD PTR [ebx-0x2e534520]
  418add:	mov    eax,DWORD PTR [esp+0x10]
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x42226d
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x42226d
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	xor    DWORD PTR ds:0xf7cb923a,esp
  418b2e:	sar    BYTE PTR [esi-0x41413dcb],0x47
  418b35:	pop    ebx
  418b36:	mov    edx,0x17fa5dc
  418b3b:	adc    bl,al
  418b3d:	js     0x418b2e
  418b3f:	mov    ebx,0x404938d
  418b44:	jmp    0x2a9424f6
  418b49:	lahf   
  418b4a:	sbb    DWORD PTR [edx],ebx
  418b4c:	jbe    0x418adb
  418b4e:	or     al,0x4b
  418b50:	xor    ah,BYTE PTR [ebx-0xe]
  418b53:	push   cs
  418b54:	or     dh,BYTE PTR [ebx+0x62eaa75]
  418b5a:	sbb    eax,esp
  418b5c:	dec    esi
  418b5d:	sbb    dh,bh
  418b5f:	mov    eax,ds:0x1b5c470f
  418b64:	jge    0x418b8e
  418b66:	ficomp WORD PTR [edx+0x650f01f6]
  418b6c:	mov    esp,0xb93a68e5
  418b71:	lods   eax,DWORD PTR ds:[esi]
  418b72:	mov    ah,0x0
  418b74:	xor    DWORD PTR [ebp-0x7293466f],edi
  418b7a:	ret    
  418b7b:	jge    0x418b77
  418b7d:	sub    eax,0x887fec98
  418b82:	mov    bl,0x79
  418b84:	inc    ebx
  418b85:	or     eax,0x76fa60c8
  418b8a:	lds    ecx,FWORD PTR [eax]
  418b8c:	jno    0x418b67
  418b8e:	adc    BYTE PTR [edi+0x36],bh
  418b91:	iret   
  418b92:	iret   
  418b93:	xor    ch,BYTE PTR ds:0xc4a348c0
  418b99:	pop    eax
  418b9a:	xor    cl,BYTE PTR [ecx+0x6a281876]
  418ba0:	mov    bh,dh
  418ba2:	or     DWORD PTR [esi+0x1819bceb],ecx
  418ba8:	mov    BYTE PTR [edx+0x33],ah
  418bab:	pushf  
  418bac:	add    ebx,edi
  418bae:	dec    esp
  418baf:	jne    0x418b90
  418bb1:	fisttp QWORD PTR [esi+0x5b9b26d9]
  418bb7:	ja     0x418b79
  418bb9:	mov    ebx,0xf218e5f8
  418bbe:	pusha  
  418bbf:	push   edx
  418bc0:	inc    eax
  418bc1:	push   esi
  418bc2:	push   esi
  418bc3:	and    al,0x68
  418bc5:	xchg   esp,eax
  418bc6:	ins    DWORD PTR es:[edi],dx
  418bc7:	mov    dl,0xea
  418bc9:	jno    0x418c10
  418bcb:	nop
  418bcc:	out    dx,al
  418bcd:	inc    esi
  418bce:	adc    edx,DWORD PTR [ecx-0x2]
  418bd1:	mov    esi,DWORD PTR [esi*2-0x2ed2db90]
  418bd8:	aas    
  418bd9:	(bad)  
  418bda:	call   0x128ea2ab
  418bdf:	jp     0x418bfb
  418be1:	push   ds
  418be2:	stos   DWORD PTR es:[edi],eax
  418be3:	pop    es
  418be4:	sub    edi,DWORD PTR es:[edi]
  418be7:	mul    BYTE PTR ss:[ebx+0x15]
  418beb:	js     0x418b90
  418bed:	ret    
  418bee:	rcr    DWORD PTR ds:0x4b2fe6e6,1
  418bf4:	and    dl,BYTE PTR [edi+0x732d96d]
  418bfa:	fldenv [ecx+0x75]
  418bfd:	fistp  QWORD PTR [ecx]
  418bff:	in     al,dx
  418c00:	retf   0x8ecf
  418c03:	xor    BYTE PTR [edi+0x57020e57],bh
  418c09:	in     al,dx
  418c0a:	jo     0x418c5d
  418c0c:	xchg   edi,eax
  418c0d:	push   ebx
  418c0e:	ins    BYTE PTR es:[edi],dx
  418c0f:	sahf   
  418c10:	and    BYTE PTR [eax],ah
  418c12:	push   ecx
  418c13:	mov    edi,0x141f9d73
  418c18:	sbb    BYTE PTR [esi+0x41],0xb5
  418c1c:	sbb    eax,0x2f07540e
  418c21:	or     ecx,DWORD PTR [ebp+0x1a5ee83c]
  418c27:	addr16 push eax
  418c29:	lods   eax,DWORD PTR ds:[esi]
  418c2a:	scas   al,BYTE PTR es:[edi]
  418c2b:	pop    ebp
  418c2c:	mov    ds:0x1580014d,eax
  418c31:	rcl    DWORD PTR [edi],cl
  418c33:	push   esp
  418c34:	icebp  
  418c35:	inc    ch
  418c37:	sbb    dh,BYTE PTR [ebx+0x195855ab]
  418c3d:	and    ebp,ecx
  418c3f:	sti    
  418c40:	and    BYTE PTR [ebx+0x7d82e139],cl
  418c46:	ret    
  418c47:	retf   
  418c48:	inc    edx
  418c49:	jl     0x418c41
  418c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c4c:	mov    ecx,0xec434392
  418c51:	pop    es
  418c52:	popa   
  418c53:	push   esp
  418c54:	sub    ch,BYTE PTR [edx-0x4956e737]
  418c5a:	push   edx
  418c5b:	(bad)  
  418c5c:	into   
  418c5d:	jg     0x418bf2
  418c5f:	aas    
  418c60:	jno    0x418caf
  418c62:	xlat   BYTE PTR ds:[ebx]
  418c63:	call   0xa89ec860
  418c68:	mov    BYTE PTR [edi+0x3ff93c46],al
  418c6e:	fldcw  WORD PTR [ecx]
  418c70:	frstor [edi+0x2943b41c]
  418c76:	mov    esi,0x28f049e9
  418c7b:	sbb    al,0xbe
  418c7d:	push   ebx
  418c7e:	cmp    DWORD PTR [edx+0xc],ecx
  418c81:	call   DWORD PTR ds:0x4827efff
  418c87:	jle    0x418c91
  418c89:	pop    ds
  418c8a:	std    
  418c8b:	bound  edi,QWORD PTR [esi-0x5c9b58ed]
  418c91:	xchg   ecx,eax
  418c92:	xor    eax,0x8aa551e3
  418c97:	test   al,0xb0
  418c99:	bound  esp,QWORD PTR [ecx]
  418c9b:	sbb    DWORD PTR [edi-0x7c],ebp
  418c9e:	popf   
  418c9f:	popa   
  418ca0:	mov    ds:0x2d65f30a,eax
  418ca5:	test   eax,0xea2b3d63
  418caa:	es (bad) 
  418cac:	sub    DWORD PTR ds:0x7eb9b0ac,0x473f0afb
  418cb6:	pop    es
  418cb7:	add    BYTE PTR [ebp+0x349d12c7],bh
  418cbd:	mov    edx,0x2dbd3650
  418cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc3:	jecxz  0x418c55
  418cc5:	(bad)
  418cc9:	out    0xf5,eax
  418ccb:	in     eax,dx
  418ccc:	aam    0xfd
  418cce:	sar    DWORD PTR ds:0x57de4a9f,1
  418cd4:	enter  0xcca4,0xa9
  418cd8:	mov    ds:0x36cae47a,al
  418cdd:	jnp    0x418c71
  418cdf:	inc    ecx
  418ce0:	aad    0x12
  418ce2:	xor    eax,0xac8d82a8
  418ce7:	add    eax,0x675e8915
  418cec:	test   DWORD PTR [ecx-0x5aa50fd6],ebp
  418cf2:	push   eax
  418cf3:	repnz mov edi,0xfaf7274f
  418cf9:	mov    ecx,0xb981d9e2
  418cfe:	cmp    dh,dl
  418d00:	nop
  418d01:	call   0x1a9a6e56
  418d06:	xchg   BYTE PTR [ecx+eax*4+0x712d9fc2],cl
  418d0d:	bnd jp 0x418ca7
  418d10:	(bad)  
  418d11:	int    0x27
  418d13:	push   es
  418d14:	or     DWORD PTR [eax],esi
  418d16:	xchg   esp,eax
  418d17:	in     eax,0xc0
  418d19:	sahf   
  418d1a:	xchg   edi,eax
  418d1b:	jb     0x418d34
  418d1d:	cmp    al,0x1
  418d1f:	or     bl,dl
  418d21:	call   0x953c:0xb76185f4
  418d28:	inc    dx
  418d2a:	jl     0x418d89
  418d2c:	xlat   BYTE PTR ds:[ebx]
  418d2d:	cmp    bl,ch
  418d2f:	lods   eax,DWORD PTR ds:[esi]
  418d30:	xchg   ebx,eax
  418d31:	push   ebp
  418d32:	test   DWORD PTR [esi],ecx
  418d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d35:	inc    ecx
  418d36:	xor    BYTE PTR [esi-0x5f],dh
  418d39:	xor    al,0x5b
  418d3b:	mov    ?,WORD PTR [ebp-0x17]
  418d3e:	xchg   ebx,eax
  418d3f:	lds    edx,FWORD PTR [esi+0x36e33845]
  418d45:	addr16 push cs
  418d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d48:	jbe    0x418d81
  418d4a:	leave  
  418d4b:	sti    
  418d4c:	retf   0x52ff
  418d4f:	(bad)  
  418d50:	fld    DWORD PTR [ebp-0x76e10b08]
  418d56:	bound  esp,QWORD PTR [eax-0x66f8c4fa]
  418d5c:	dec    ebp
  418d5d:	cdq    
  418d5e:	aam    0xf4
  418d60:	(bad)  
  418d61:	push   edx
  418d62:	sub    al,0x2c
  418d64:	jmp    0x418d3b
  418d66:	mov    bl,0xc6
  418d68:	adc    DWORD PTR [esi-0x73cc638f],edx
  418d6e:	mov    esi,0x74ce9313
  418d73:	ficom  DWORD PTR [ebx+0x51]
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x42226d
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x299e2a4
  418da4:	fld    QWORD PTR [ebx+edi*8-0x40]
  418da8:	mov    esi,0xbebec235
  418dad:	xchg   BYTE PTR [ebx],cl
  418daf:	fisttp DWORD PTR [ebx+eax*1+0x4349a5a2]
  418db6:	jmp    0xad3:0x27f79372
  418dbd:	sar    DWORD PTR [edi-0x34acf739],0x8a
  418dc4:	fisub  DWORD PTR [ebx]
  418dc6:	and    DWORD PTR [ebp+0x4e1ee328],esp
  418dcc:	pop    es
  418dcd:	test   eax,0x9d903d8d
  418dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dd3:	jae    0x418dd0
  418dd5:	push   esi
  418dd6:	adc    esp,DWORD PTR [edx-0x5efee484]
  418ddc:	lds    edx,FWORD PTR [edx]
  418dde:	lods   eax,DWORD PTR ds:[esi]
  418de0:	in     al,0x27
  418de2:	pop    ebp
  418de3:	scas   eax,DWORD PTR es:[edi]
  418de4:	jp     0x418d97
  418de6:	or     esi,ecx
  418de8:	into   
  418de9:	ret    0x2100
  418dec:	scas   eax,DWORD PTR es:[edi]
  418ded:	aam    0xda
  418def:	iret   
  418df0:	repz jmp 0xd1bf8abe
  418df6:	dec    eax
  418df7:	fwait
  418df8:	push   ecx
  418df9:	xchg   ecx,eax
  418dfa:	out    dx,eax
  418dfb:	mov    BYTE PTR [ecx+0x2a9da77a],al
  418e01:	pop    edx
  418e02:	pop    ds
  418e03:	sub    eax,0xc4758736
  418e08:	and    ebx,esp
  418e0a:	mov    al,0x33
  418e0c:	jl     0x418ddc
  418e0e:	mov    ebx,0x8f1b61d0
  418e13:	das    
  418e14:	push   eax
  418e15:	sar    BYTE PTR [ebx-0x1001c81b],1
  418e1b:	xor    al,0x5b
  418e1d:	pop    ebx
  418e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e1f:	popf   
  418e20:	xchg   esi,eax
  418e21:	aaa    
  418e22:	je     0x418e9c
  418e24:	cwde   
  418e25:	or     esp,0x4a
  418e28:	es push esi
  418e2a:	adc    esp,edi
  418e2c:	mov    ds:0x266a88c3,eax
  418e31:	in     eax,0xbb
  418e33:	pop    edi
  418e34:	xchg   esi,eax
  418e35:	test   esp,esp
  418e37:	sub    al,0xd0
  418e39:	push   ebx
  418e3a:	test   al,0x11
  418e3c:	cmp    al,0x5e
  418e3e:	cmp    esp,ecx
  418e40:	sar    ah,1
  418e42:	dec    ecx
  418e43:	loopne 0x418e0f
  418e45:	cmp    ah,dh
  418e47:	imul   ebx,ebp,0xffffffdf
  418e4a:	out    dx,al
  418e4b:	cmp    ch,ch
  418e4d:	dec    edx
  418e4e:	sbb    DWORD PTR [esi],edx
  418e50:	clc    
  418e51:	ins    DWORD PTR es:[edi],dx
  418e52:	out    0x32,eax
  418e54:	dec    ebx
  418e55:	dec    esi
  418e56:	dec    esp
  418e57:	out    0x8b,eax
  418e59:	cld    
  418e5a:	mov    cl,BYTE PTR [edx-0x4d2c3f8d]
  418e60:	push   cs
  418e61:	and    edx,DWORD PTR [edx+0x73c653ae]
  418e67:	sub    BYTE PTR [eax-0x57a76e5e],dh
  418e6d:	push   ebx
  418e6e:	xchg   esi,eax
  418e6f:	aam    0xc
  418e71:	shl    BYTE PTR [edi],0x63
  418e74:	or     eax,0xc03d0307
  418e79:	xor    al,0xb1
  418e7b:	pop    ecx
  418e7c:	cwde   
  418e7d:	aam    0x86
  418e7f:	dec    ebp
  418e80:	or     eax,0xfcb402d4
  418e85:	loop   0x418eda
  418e87:	call   0xc57957b1
  418e8c:	adc    eax,DWORD PTR [ecx]
  418e8e:	mov    esp,0x2c37c73e
  418e93:	ss ret 
  418e95:	ins    BYTE PTR es:[edi],dx
  418e96:	sti    
  418e97:	cmpxchg BYTE PTR [edx+0x40],ch
  418e9b:	cdq    
  418e9c:	ds fs or al,0xab
  418ea0:	jb     0x418ecf
  418ea2:	inc    ecx
  418ea3:	or     dh,BYTE PTR [edi+0x4ae809e4]
  418ea9:	inc    eax
  418eaa:	push   eax
  418eab:	int    0xa5
  418ead:	sbb    eax,0x34ea4058
  418eb2:	ficom  DWORD PTR [ecx-0x5b49735]
  418eb8:	fs loop 0x418eaf
  418ebb:	and    BYTE PTR [edx+0x51a79695],dh
  418ec1:	xchg   ecx,eax
  418ec2:	in     al,0x2f
  418ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ec5:	jns    0x418e91
  418ec7:	fld    QWORD PTR [edx]
  418ec9:	mov    al,ds:0xd4e60270
  418ece:	jmp    0xf9be:0xaf16ca5
  418ed5:	sub    ebx,DWORD PTR [ecx+0xb]
  418ed8:	cwde   
  418ed9:	and    esi,DWORD PTR [ebp+0x44]
  418edc:	sar    DWORD PTR [edx-0x6a98b477],1
  418ee2:	iret   
  418ee3:	push   0x94d95551
  418ee8:	cmp    eax,0x9751978
  418eed:	lds    esi,FWORD PTR [esi]
  418eef:	outs   dx,BYTE PTR ds:[esi]
  418ef0:	cld    
  418ef1:	int3   
  418ef2:	add    eax,0x85b24d7b
  418ef7:	imul   esp,DWORD PTR [eax+edi*8+0x35],0xffffffc3
  418efc:	sub    esi,DWORD PTR [edi+0x568a6543]
  418f02:	and    eax,0x7d56f8aa
  418f07:	ret    
  418f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f09:	loopne 0x418eb6
  418f0b:	pop    esi
  418f0c:	mov    esi,0x22baf1da
  418f11:	cmp    eax,0xd2192c7e
  418f16:	ficom  WORD PTR [edx]
  418f18:	inc    edi
  418f19:	sub    eax,0xa5f19689
  418f1e:	fs jmp 0x35e8:0x3528bf8e
  418f26:	neg    DWORD PTR [eax+eax*1+0x4e0be9f3]
  418f2d:	es pop edi
  418f2f:	dec    ebp
  418f30:	inc    eax
  418f31:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418f33:	sbb    dl,bl
  418f35:	mov    ebp,0x13b29c8a
  418f3a:	ins    WORD PTR es:[edi],dx
  418f3c:	xchg   ebp,eax
  418f3d:	retf   0xa0e9
  418f40:	dec    esi
  418f41:	push   ecx
  418f42:	mov    eax,ds:0x9f0ae7e0
  418f47:	add    al,0x72
  418f49:	pusha  
  418f4a:	das    
  418f4b:	push   ecx
  418f4c:	shl    DWORD PTR [ecx+eax*2+0x2b],0xf4
  418f51:	jecxz  0x418f70
  418f53:	mov    dl,0x95
  418f55:	out    0xa4,al
  418f57:	(bad)  
  418f58:	adc    ebx,esi
  418f5a:	(bad)  
  418f5b:	sti    
  418f5c:	mov    dh,0xba
  418f5e:	adc    al,0x84
  418f60:	push   0xf
  418f62:	sub    DWORD PTR [esi+0x6a],edx
  418f65:	sbb    DWORD PTR [ebp-0x18],esp
  418f68:	sbb    eax,0x620698bc
  418f6d:	xor    BYTE PTR [ebx+eax*8+0xa],dl
  418f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f72:	stos   DWORD PTR es:[edi],eax
  418f73:	cmp    bh,BYTE PTR [ecx-0x2a77b8c]
  418f79:	(bad)  
  418f7a:	jl     0x418f2f
  418f7c:	pop    eax
  418f7d:	cmp    BYTE PTR [esi],al
  418f7f:	sbb    DWORD PTR [esi-0xd],esp
  418f82:	fild   WORD PTR [edi]
  418f84:	(bad)  
  418f85:	fistp  QWORD PTR [ebx+0x2637091e]
  418f8b:	jae    0x418f27
  418f8d:	mov    ebx,0x8648027f
  418f92:	sbb    DWORD PTR [esi+0x6e],ecx
  418f95:	or     bh,BYTE PTR [ecx+0x4b]
  418f98:	inc    edx
  418f99:	bound  ebx,QWORD PTR [ebx-0x7b]
  418f9c:	push   esp
  418f9d:	aad    0xa5
  418f9f:	adc    DWORD PTR [esi-0x5bd12374],eax
  418fa5:	cmp    ecx,ecx
  418fa7:	in     al,dx
  418fa8:	jne    0x418f60
  418faa:	sar    BYTE PTR [ebp+0x1042bbd5],cl
  418fb0:	pop    edx
  418fb1:	dec    esp
  418fb2:	pop    ebx
  418fb3:	push   edx
  418fb4:	jns    0x418f64
  418fb6:	or     bl,bl
  418fb8:	imul   esp,DWORD PTR ds:0xc55ffe48,0xd6b6b8e4
  418fc2:	mov    cl,0x15
  418fc4:	xor    ecx,ecx
  418fc6:	les    ebx,FWORD PTR [ebp+esi*8+0x72]
  418fca:	and    al,0xf1
  418fcc:	xlat   BYTE PTR ds:[ebx]
  418fcd:	retf   0x54d9
  418fd0:	jmp    0x41902f
  418fd2:	pop    ebp
  418fd3:	push   eax
  418fd4:	(bad)  
  418fd6:	retf   0xbd8
  418fd9:	test   BYTE PTR [edi],0xd4
  418fdc:	push   ebp
  418fdd:	leave  
  418fde:	dec    ebp
  418fdf:	inc    ebp
  418fe0:	mov    edx,0xc58ec931
  418fe5:	daa    
  418fe6:	dec    edi
  418fe7:	(bad)  
  418fe8:	icebp  
  418fe9:	sahf   
  418fea:	nop
  418feb:	les    eax,FWORD PTR [ebp-0x75]
  418fee:	pushf  
  418fef:	and    al,0x8c
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [ebx],bh
  418ff5:	enter  0x850f,0x8
  418ff9:	add    BYTE PTR [eax],al
  418ffb:	add    BYTE PTR [ebx],bh
  418ffd:	fimul  DWORD PTR [edi]
  418fff:	test   BYTE PTR [ebx],dh
  419001:	sbb    DWORD PTR [eax],eax
  419003:	add    BYTE PTR [ebx-0x74bfdbbc],cl
  419009:	push   esp
  41900a:	and    al,0x18
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	jb     0x419016
  419025:	rcl    DWORD PTR [eax-0x413f0044],cl
  41902b:	xor    eax,0x48bebec2
  419030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419031:	adc    esp,eax
  419033:	jp     0x419039
  419035:	inc    ecx
  419036:	mov    al,ds:0x2feaa5ab
  41903b:	aad    0x91
  41903d:	mov    dl,BYTE PTR [ebx+0x2d]
  419040:	aam    0x56
  419042:	js     0x419037
  419044:	fwait
  419045:	dec    eax
  419046:	jecxz  0x41902d
  419048:	xlat   BYTE PTR ds:[bx]
  41904a:	outs   dx,DWORD PTR ds:[esi]
  41904b:	pusha  
  41904c:	fst    DWORD PTR [edi]
  41904e:	lock sub eax,0x953d4f42
  419054:	lods   al,BYTE PTR es:[esi]
  419056:	(bad)  
  419058:	jge    0x4190d8
  41905a:	loop   0x419037
  41905c:	mov    edx,0xadbf0c0
  419061:	mov    eax,0xb9ff6513
  419066:	leave  
  419067:	sti    
  419068:	test   BYTE PTR [edi+eax*2-0x25],bl
  41906c:	sti    
  41906d:	sub    dh,BYTE PTR [edi+eax*2]
  419070:	and    cl,ch
  419072:	test   eax,0xe0809657
  419077:	xchg   BYTE PTR [esi+0x7caa9653],dl
  41907d:	pusha  
  41907e:	inc    esp
  41907f:	jae    0x419029
  419081:	mov    bh,0x79
  419083:	xor    eax,0xf46e8e0
  419088:	jge    0x419106
  41908a:	mov    DWORD PTR [edx+0x5fae5087],edi
  419090:	mov    ds:0x706fce39,eax
  419095:	cmp    ebp,DWORD PTR [eax]
  419097:	sub    ebx,DWORD PTR [ecx+0x6f]
  41909a:	int    0x29
  41909c:	xchg   BYTE PTR [ebp-0x79bd528c],bh
  4190a2:	les    esi,FWORD PTR [ebx-0x29]
  4190a5:	sahf   
  4190a6:	add    esp,DWORD PTR [eax+0x51]
  4190a9:	xor    bh,BYTE PTR [edx-0x72c1da82]
  4190af:	xchg   esi,eax
  4190b0:	adc    DWORD PTR [edx],eax
  4190b2:	xchg   BYTE PTR [eax],al
  4190b4:	popa   
  4190b5:	adc    al,0x97
  4190b7:	(bad)
  4190ba:	push   ebx
  4190bb:	popf   
  4190bc:	jle    0x419123
  4190be:	push   ecx
  4190bf:	jns    0x419105
  4190c1:	and    edx,DWORD PTR [esi+eax*8]
  4190c4:	sahf   
  4190c5:	pop    es
  4190c6:	popa   
  4190c7:	jbe    0x41912c
  4190c9:	ins    BYTE PTR es:[edi],dx
  4190ca:	jne    0x419139
  4190cc:	ror    DWORD PTR [edx-0x5d],cl
  4190cf:	mov    bh,0x69
  4190d1:	or     ebx,0xffffffda
  4190d4:	ins    DWORD PTR es:[edi],dx
  4190d5:	test   eax,0xbb69e6aa
  4190da:	add    BYTE PTR [eax+eax*8],al
  4190dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190de:	push   es
  4190df:	inc    eax
  4190e0:	sub    eax,0xfbd23271
  4190e5:	pop    es
  4190e6:	xlat   BYTE PTR ds:[ebx]
  4190e7:	retf   
  4190e8:	jns    0x419080
  4190ea:	push   cs
  4190eb:	das    
  4190ec:	inc    esi
  4190ed:	dec    esp
  4190ee:	enter  0x3842,0x6a
  4190f2:	mov    al,ds:0xe6d87883
  4190f7:	icebp  
  4190f8:	std    
  4190f9:	test   eax,0x50d7e20
  4190fe:	mov    edi,0x1051608
  419103:	pushf  
  419104:	imul   ecx,DWORD PTR [edx],0x4a5634bf
  41910a:	xor    DWORD PTR ds:0xbefaaf94,ecx
  419110:	icebp  
  419111:	shl    esi,1
  419113:	pop    es
  419114:	add    DWORD PTR [ecx],edx
  419116:	fistp  DWORD PTR ss:[edx+eiz*1-0x2665046]
  41911e:	call   0xaf02:0x2c56d412
  419125:	lea    edi,[ecx+0x6afe0754]
  41912b:	adc    eax,0xd16dd687
  419130:	daa    
  419131:	cmp    cl,BYTE PTR [edx+edx*1-0x68f854e5]
  419138:	jge    0x4190d2
  41913a:	adc    ebp,DWORD PTR [ebx+eax*2+0x4c5321fd]
  419141:	dec    eax
  419142:	inc    ebp
  419143:	repz cs daa 
  419146:	adc    al,0x3f
  419148:	(bad)  
  419149:	adc    dh,BYTE PTR [eax-0x40440a72]
  41914f:	lods   eax,DWORD PTR ds:[esi]
  419150:	out    0x6e,eax
  419152:	je     0x419171
  419154:	cmp    ah,BYTE PTR [esi-0x7953afc1]
  41915a:	sub    ebx,DWORD PTR [eax]
  41915c:	fisttp DWORD PTR [edx]
  41915e:	or     ebx,esp
  419160:	pop    ss
  419161:	mov    ecx,0x3704c0c4
  419166:	xchg   ebp,eax
  419167:	(bad)  
  419168:	std    
  419169:	mov    BYTE PTR [edi],cl
  41916b:	add    BYTE PTR [ebx+0x1d],0x4a
  41916f:	push   ss
  419170:	aaa    
  419171:	mov    al,BYTE PTR [edx+0x67]
  419174:	rcr    DWORD PTR [ebp+0x64],1
  419177:	xchg   ebx,eax
  419178:	scas   eax,DWORD PTR es:[edi]
  419179:	arpl   WORD PTR [esi],cx
  41917b:	retf   0x545d
  41917e:	dec    ebp
  41917f:	cmp    al,0x2d
  419181:	cmp    al,0xde
  419183:	xchg   edi,eax
  419184:	and    BYTE PTR [edi+0x5071df81],al
  41918a:	sub    eax,0x77646acd
  41918f:	cmc    
  419190:	xor    al,0xb
  419192:	mov    edx,esi
  419194:	scas   al,BYTE PTR es:[edi]
  419195:	clc    
  419196:	or     edx,DWORD PTR [edx]
  419198:	fdivr  QWORD PTR [edi+0x3c]
  41919b:	add    bl,BYTE PTR [eax-0x70fa1282]
  4191a1:	loopne 0x4191ec
  4191a3:	jno    0x4191fd
  4191a5:	aam    0x62
  4191a7:	ret    0x6c54
  4191aa:	push   esi
  4191ab:	dec    edi
  4191ac:	retf   0xe56e
  4191af:	fs jmp 0x5de35788
  4191b5:	mov    esi,DWORD PTR [eax+edx*8]
  4191b8:	sub    eax,eax
  4191ba:	sbb    BYTE PTR [esi+ebx*4-0x53],dh
  4191be:	and    DWORD PTR [esi+0x16eca4db],0x1
  4191c5:	xor    al,0xca
  4191c7:	mov    DWORD PTR [eax+eax*8+0x16],ecx
  4191cb:	push   0xffffffb8
  4191cd:	sar    BYTE PTR [ecx],0xe8
  4191d0:	repz and DWORD PTR [eax-0x7042840],ebx
  4191d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d8:	jecxz  0x4191af
  4191da:	shl    BYTE PTR [edi+esi*4-0x67],1
  4191de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191df:	(bad)  
  4191e0:	mov    al,0x56
  4191e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191e3:	dec    edi
  4191e4:	mov    bl,0xb1
  4191e6:	sub    eax,0x8b274843
  4191eb:	(bad)  
  4191ec:	out    dx,eax
  4191ed:	sub    eax,0x3dee4869
  4191f2:	fistp  QWORD PTR [ecx+0x3a96e835]
  4191f8:	xor    BYTE PTR [eax],dh
  4191fa:	ss push eax
  4191fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191fd:	adc    BYTE PTR [edi+edx*2+0x416b4139],bl
  419204:	fcomp  QWORD PTR [ecx]
  419206:	add    BYTE PTR [esp+esi*8],ah
  419209:	fiadd  DWORD PTR [ecx+esi*1]
  41920c:	cwde   
  41920d:	fwait
  41920e:	cmp    cl,al
  419210:	sbb    eax,0x9007d5eb
  419215:	add    eax,0xef7d3d6e
  41921a:	popa   
  41921b:	add    eax,0xfc76512e
  419220:	frstor [edx]
  419222:	sbb    edi,DWORD PTR [edx+0x55]
  419225:	mov    ds:0xd758ccc2,al
  41922a:	xlat   BYTE PTR ds:[ebx]
  41922b:	dec    ebp
  41922c:	retf   
  41922d:	add    ah,dh
  41922f:	leave  
  419230:	fwait
  419231:	icebp  
  419232:	pop    edx
  419233:	pop    ebx
  419234:	ror    eax,cl
  419236:	mov    cl,0xed
  419238:	les    ecx,FWORD PTR [esi-0x7d]
  41923b:	jmp    0xb2dfb6a5
  419240:	push   edi
  419241:	in     al,dx
  419242:	ror    DWORD PTR [edi-0x237c61fb],1
  419248:	xchg   DWORD PTR [eax-0x5],edx
  41924b:	adc    eax,0x6d015ff5
  419250:	(bad)  [edx]
  419252:	in     eax,0xab
  419254:	xchg   ebp,eax
  419255:	push   0x15
  419257:	dec    ecx
  419258:	dec    edx
  419259:	in     eax,dx
  41925a:	mov    cl,0x1d
  41925c:	inc    edi
  41925d:	adc    cl,0x32
  419260:	dec    edi
  419261:	adc    BYTE PTR ds:0x86ef05ff,dh
  419267:	mov    ch,0x34
  419269:	call   0x3fcb8cf0
  41926e:	test   eax,0xbb02e0c1
  419273:	jbe    0x41922a
  419275:	jns    0x419242
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x422794
  4192fe:	mov    DWORD PTR [esp+0x68],0x42278c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42271c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	pop    ss
  41940b:	jae    0x419485
  41940d:	xchg   edx,eax
  41940e:	xor    eax,DWORD PTR ds:0xc235bec0
  419414:	mov    esi,0xa3a4efbe
  419419:	fisub  DWORD PTR [ebx-0x66b2cee0]
  41941f:	(bad)  
  419420:	jmp    0xb28f844f
  419425:	pop    esi
  419426:	aad    0x5b
  419428:	fbstp  TBYTE PTR [ecx+0x187a4c69]
  41942e:	xlat   BYTE PTR ds:[ebx]
  41942f:	fcmovne st,st(0)
  419431:	(bad)  
  419432:	lea    edi,ds:0x64179c37
  419438:	cli    
  419439:	add    BYTE PTR [eax-0x42e61f27],ch
  41943f:	fs jo  0x41940d
  419442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419443:	out    dx,eax
  419444:	std    
  419445:	repz sbb edx,DWORD PTR [esi]
  419448:	fwait
  419449:	loop   0x41945a
  41944b:	pop    es
  41944c:	clc    
  41944d:	xor    al,0x61
  41944f:	jecxz  0x419420
  419451:	enter  0x33e1,0x1c
  419455:	icebp  
  419456:	in     al,0xea
  419458:	std    
  419459:	sbb    al,0x31
  41945b:	ret    
  41945c:	xor    al,0x9c
  41945e:	cmp    DWORD PTR [edi-0x72],esp
  419461:	xchg   BYTE PTR [esi+0x3b2aa267],bl
  419467:	leave  
  419468:	arpl   WORD PTR [ecx-0x2a784a71],si
  41946e:	dec    edx
  41946f:	mov    dl,BYTE PTR [ebp-0xc]
  419472:	retf   0x3d0b
  419475:	push   0xa960673
  41947a:	int    0x3f
  41947c:	jno    0x419412
  41947e:	push   ds
  41947f:	sar    BYTE PTR [edx+0x5d23a440],cl
  419485:	sbb    cl,BYTE PTR [ecx+0x316cb1f5]
  41948b:	xor    dh,BYTE PTR [ebp-0xe1ceb25]
  419491:	es aam 0x43
  419494:	sub    al,0xbc
  419496:	jle    0x4194c6
  419498:	(bad)
  41949b:	mov    al,0x23
  41949d:	int3   
  41949e:	dec    ebx
  41949f:	sahf   
  4194a0:	(bad)  
  4194a2:	sbb    al,0x85
  4194a4:	pop    ecx
  4194a5:	mov    ah,0x4
  4194a7:	fiadd  WORD PTR [esi-0x7c]
  4194aa:	push   esp
  4194ab:	mov    ah,0x31
  4194ad:	int3   
  4194ae:	fprem1 
  4194b0:	push   edi
  4194b1:	push   ss
  4194b2:	cmc    
  4194b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b4:	push   ss
  4194b5:	ss enter 0xda94,0x11
  4194ba:	je     0x41947d
  4194bc:	imul   ebp,DWORD PTR [eax+0x5a],0xf7a17d0
  4194c3:	or     eax,0xf6b5886a
  4194c8:	ror    BYTE PTR [ebx-0x6abc2614],cl
  4194ce:	push   edx
  4194cf:	pop    ss
  4194d0:	cmp    bl,BYTE PTR [ebx+edx*4]
  4194d3:	push   ds
  4194d4:	(bad)  
  4194d5:	out    0xba,al
  4194d7:	add    DWORD PTR [ebp+0x15],ecx
  4194da:	mov    esp,0x67a62a06
  4194df:	mov    ah,0x9d
  4194e1:	ins    BYTE PTR es:[edi],dx
  4194e2:	and    eax,0xb2875daf
  4194e7:	xor    DWORD PTR [ebp-0x26b9602c],ecx
  4194ed:	push   eax
  4194ee:	fiadd  WORD PTR ds:0xf24ef4e2
  4194f4:	iret   
  4194f5:	sbb    DWORD PTR [esi-0xe85e490],ecx
  4194fb:	int    0xf5
  4194fd:	cld    
  4194fe:	adc    al,0x1b
  419500:	dec    ebx
  419501:	scas   eax,DWORD PTR es:[edi]
  419502:	push   ss
  419503:	lods   al,BYTE PTR ds:[esi]
  419504:	mov    eax,0x98f4f592
  419509:	dec    esp
  41950a:	mov    eax,0x4a1cd2a7
  41950f:	shl    DWORD PTR [ebx],cl
  419511:	adc    al,0x8e
  419513:	pop    es
  419514:	test   eax,0xb8d29ce2
  419519:	xor    ch,al
  41951b:	imul   ecx,DWORD PTR [ebx+ebp*4],0xffffffdc
  41951f:	cmp    eax,0x10714a78
  419524:	or     DWORD PTR [ebx],ebx
  419526:	lock aam 0xe2
  419529:	mov    bh,cl
  41952b:	dec    edi
  41952c:	mov    cs,WORD PTR [ecx+0x536e300d]
  419532:	sub    DWORD PTR [eax],0xdddcbbc1
  419538:	(bad)  
  419539:	push   ebx
  41953a:	stc    
  41953b:	dec    edx
  41953c:	add    al,0xcb
  41953e:	mov    al,BYTE PTR [ecx-0x46]
  419541:	inc    edi
  419542:	xchg   DWORD PTR [esi+0x0],edi
  419545:	mov    dl,0x65
  419547:	popf   
  419548:	mov    eax,0x5cd917fc
  41954d:	xchg   ebp,eax
  41954e:	or     bh,BYTE PTR [edx]
  419550:	adc    al,0xdf
  419552:	outs   dx,BYTE PTR ds:[esi]
  419553:	je     0x41953c
  419555:	or     bh,dh
  419557:	popf   
  419558:	lods   al,BYTE PTR ds:[esi]
  419559:	nop
  41955a:	sbb    al,0xf7
  41955c:	out    0xd1,eax
  41955e:	add    DWORD PTR ds:0x286cfc6b,esi
  419564:	adc    ebp,DWORD PTR [edi+0x7d]
  419567:	div    BYTE PTR [ecx-0x3f]
  41956a:	call   0x60305295
  41956f:	pop    ss
  419570:	into   
  419571:	mov    esp,0x10765aa2
  419576:	cwde   
  419577:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419579:	sbb    al,0x56
  41957b:	mov    gs,WORD PTR [esi-0x1f623a00]
  419581:	push   ss
  419582:	call   FWORD PTR [edx]
  419584:	sub    ebx,ebx
  419586:	pop    es
  419587:	cdq    
  419588:	or     eax,0xd4b19835
  41958d:	or     BYTE PTR [ebx-0x1d140bd6],al
  419593:	and    eax,0x399d34e6
  419598:	hlt    
  419599:	and    edx,DWORD PTR [eax]
  41959b:	and    edi,esp
  41959d:	push   cs
  41959e:	push   esi
  41959f:	mov    ah,0x55
  4195a1:	mov    eax,0xd9480145
  4195a6:	and    dh,al
  4195a8:	add    dl,BYTE PTR [esi+0x298a0149]
  4195ae:	sbb    ah,BYTE PTR [eax+0x45018e2]
  4195b4:	arpl   ax,bp
  4195b6:	xor    al,0xc0
  4195b8:	pushf  
  4195b9:	mov    BYTE PTR [edi+0x3],ch
  4195bc:	int3   
  4195bd:	ret    
  4195be:	adc    DWORD PTR [ebx],edi
  4195c0:	mov    edi,0xb19e58d3
  4195c5:	push   cs
  4195c6:	dec    esi
  4195c7:	push   esi
  4195c8:	sbb    dh,dh
  4195ca:	jne    0x419579
  4195cc:	das    
  4195cd:	mov    WORD PTR [esi+0x6b],cs
  4195d0:	xchg   edi,eax
  4195d1:	or     ah,BYTE PTR [ebp+0x49c0e3bb]
  4195d7:	sub    bl,ch
  4195d9:	mov    bl,0xd1
  4195db:	push   es
  4195dc:	adc    cl,BYTE PTR [eax-0x38595c4a]
  4195e2:	shr    DWORD PTR [esi+edi*8+0x2ae9a620],0x69
  4195ea:	loope  0x4195da
  4195ec:	adc    al,0x5f
  4195ee:	push   esp
  4195ef:	fist   WORD PTR [ebx-0x5f]
  4195f2:	repnz inc bl
  4195f5:	jns    0x41958f
  4195f7:	xchg   esi,eax
  4195f8:	push   0x3
  4195fa:	test   BYTE PTR [ebx+0x1358b4],ah
  419600:	fisubr DWORD PTR [ebp+0x62]
  419603:	sbb    ah,bh
  419605:	pop    edx
  419606:	arpl   WORD PTR [edx-0x4abc6dfc],ax
  41960c:	sub    eax,0x2f4afa24
  419611:	adc    al,0xdf
  419613:	mov    dl,0x9c
  419615:	imul   edx,esi,0xfffffff8
  419618:	aas    
  419619:	popa   
  41961a:	mov    bl,0xfd
  41961c:	fnsave [edi-0x106d6774]
  419622:	dec    ebx
  419623:	leave  
  419624:	adc    ah,BYTE PTR [ecx]
  419626:	shl    DWORD PTR [ebx],0xa8
  419629:	mov    ch,0x30
  41962b:	ds ds ins BYTE PTR es:[edi],dx
  41962e:	xchg   edi,eax
  41962f:	pop    esp
  419630:	or     DWORD PTR [eax-0x1bd4ebb],0xffffffff
  419637:	mov    edx,0x22b06394
  41963c:	rcl    BYTE PTR [eax+0x6],1
  41963f:	call   0x4cc749ed
  419644:	arpl   WORD PTR [ebp-0x30],di
  419647:	push   edx
  419648:	mov    eax,0xdb8e4b00
  41964d:	add    eax,0x15933a
  419652:	jmp    0xca0b:0x66da4a41
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	xlat   BYTE PTR ds:[ebx]
  419696:	call   0xbec0:0x9ab9e54
  41969d:	xor    eax,0xf0bebec2
  4196a2:	pop    es
  4196a3:	jns    0x3c17a28f
  4196a9:	stos   DWORD PTR es:[edi],eax
  4196aa:	outs   dx,BYTE PTR ds:[esi]
  4196ab:	push   ebp
  4196ac:	repz fstp QWORD PTR [ecx]
  4196af:	call   0xa14d:0x29d0c82a
  4196b6:	pop    edi
  4196b7:	or     BYTE PTR [ebp-0x485156ab],bl
  4196bd:	call   0x901c:0x65ab64a2
  4196c4:	pop    ds
  4196c5:	sbb    eax,0x9429fdc4
  4196ca:	mul    BYTE PTR [ecx-0x7b]
  4196cd:	imul   edx,eax,0xffffffe2
  4196d0:	es js  0x4196eb
  4196d3:	popf   
  4196d4:	xchg   dl,bl
  4196d6:	push   edi
  4196d7:	sahf   
  4196d8:	das    
  4196d9:	sahf   
  4196da:	aad    0xaa
  4196dc:	xor    BYTE PTR ds:0x7d792e11,bh
  4196e2:	dec    edi
  4196e3:	ret    
  4196e4:	mov    al,ds:0x4a7412d0
  4196e9:	ret    
  4196ea:	and    edi,DWORD PTR [eax-0x7c]
  4196ed:	mov    ebp,0xd9862811
  4196f2:	int    0x1d
  4196f4:	jae    0x419762
  4196f6:	sub    edx,DWORD PTR [eax+ebp*1]
  4196f9:	pop    ebp
  4196fa:	or     al,BYTE PTR [edx+0x7f3bba3f]
  419700:	jnp    0x4196fc
  419702:	dec    esp
  419703:	pop    ds
  419704:	or     DWORD PTR [ebx],esi
  419706:	mov    al,0xc7
  419708:	jp     0x4196ff
  41970a:	xchg   ecx,eax
  41970b:	dec    eax
  41970c:	iret   
  41970d:	stos   DWORD PTR es:[edi],eax
  41970e:	fld    st(1)
  419710:	mov    al,0xbf
  419712:	xor    ecx,DWORD PTR [esi]
  419714:	inc    eax
  419715:	fadd   DWORD PTR [esi]
  419717:	int    0xc3
  419719:	out    dx,al
  41971a:	sbb    ebx,DWORD PTR [edi+0x5782f20d]
  419720:	(bad)  
  419721:	in     al,0x32
  419723:	jae    0x4196ac
  419725:	push   eax
  419726:	adc    dh,bh
  419728:	lds    esp,FWORD PTR [ebp-0x2]
  41972b:	add    BYTE PTR [esi+0x75c3f40f],0x26
  419732:	inc    ebp
  419733:	inc    esp
  419734:	jne    0x41973e
  419736:	mov    WORD PTR [esi],ss
  419738:	addr16 adc dl,0xf6
  41973c:	or     al,0xb6
  41973e:	xor    al,0xae
  419740:	fmul   DWORD PTR [ebp-0xe2a6a4b]
  419746:	(bad)  
  419747:	dec    edi
  419748:	inc    ecx
  419749:	popf   
  41974a:	jl     0x4196f6
  41974c:	mov    dl,0xd8
  41974e:	jo     0x41978f
  419750:	mov    ch,0x4f
  419752:	ins    DWORD PTR es:[edi],dx
  419753:	adc    BYTE PTR [eax],cl
  419755:	pop    ebx
  419756:	dec    ebx
  419758:	pop    es
  419759:	cmc    
  41975a:	xchg   esi,eax
  41975b:	mov    ebp,0xf9b5362e
  419760:	mov    cl,0x9d
  419762:	clc    
  419763:	div    DWORD PTR [ebp+0x2ff9754d]
  419769:	gs inc esi
  41976b:	jge    0x419780
  41976d:	mov    ds:0x47c5ded7,al
  419772:	sub    al,0xc5
  419774:	outs   dx,DWORD PTR ds:[esi]
  419775:	pop    edx
  419776:	jbe    0x4197b1
  419778:	and    DWORD PTR [ebp+0x40854629],ebx
  41977e:	jb     0x4197da
  419780:	xchg   ebp,eax
  419781:	std    
  419782:	sbb    DWORD PTR [edi-0x2],eax
  419785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419786:	cmp    ah,al
  419788:	(bad)  
  41978a:	jnp    0x4197a0
  41978c:	fld    QWORD PTR ds:0x1def9d43
  419792:	jnp    0x419771
  419794:	dec    eax
  419795:	arpl   bp,dx
  419797:	cdq    
  419798:	cld    
  419799:	inc    edx
  41979a:	pushf  
  41979b:	add    cl,bl
  41979d:	outs   dx,BYTE PTR ds:[esi]
  41979e:	test   BYTE PTR [ebx*4+0x7ab8f66c],dl
  4197a5:	cmp    al,0x5a
  4197a7:	sti    
  4197a8:	dec    eax
  4197a9:	cdq    
  4197aa:	jp     0x41974e
  4197ac:	xchg   edx,eax
  4197ad:	repz shl DWORD PTR [esi-0x61d2f485],0x5b
  4197b5:	aaa    
  4197b6:	sbb    al,0x6b
  4197b8:	dec    ebx
  4197b9:	arpl   WORD PTR [ecx],cx
  4197bb:	xchg   ecx,eax
  4197bc:	jae    0x4197b8
  4197be:	daa    
  4197bf:	and    DWORD PTR [ebp-0x7d],ecx
  4197c2:	push   ebx
  4197c3:	sub    eax,0xea62670b
  4197c8:	xlat   BYTE PTR ds:[ebx]
  4197c9:	out    0x24,al
  4197cb:	jo     0x41983e
  4197cd:	sub    ch,BYTE PTR [ecx]
  4197cf:	das    
  4197d0:	adc    al,0x47
  4197d2:	lods   eax,DWORD PTR ds:[esi]
  4197d3:	js     0x419793
  4197d5:	mov    ds:0xe0dfb292,al
  4197da:	fcmovnu st,st(7)
  4197dc:	int3   
  4197dd:	mov    cl,0x5b
  4197df:	push   edi
  4197e0:	inc    ebx
  4197e1:	addr16 into 
  4197e3:	push   esp
  4197e4:	jl     0x4197f8
  4197e6:	cmp    BYTE PTR [edi+ebp*4+0x6],dl
  4197ea:	ss adc al,0xe9
  4197ed:	jecxz  0x4197b1
  4197ef:	mov    esi,0xf62d46c3
  4197f4:	clc    
  4197f5:	aas    
  4197f6:	and    eax,0x63cf07b1
  4197fb:	sbb    eax,0x20fee0ac
  419800:	loop   0x41985f
  419802:	fimul  DWORD PTR [eax+0x197a1d2d]
  419808:	inc    eax
  419809:	cmp    BYTE PTR [edx+0x6c],al
  41980c:	mov    bh,0xd5
  41980e:	mov    BYTE PTR [ebp+ebx*4+0x4b],dl
  419812:	mov    dh,ah
  419814:	push   eax
  419815:	lock cmp BYTE PTR [edi-0x1a74fd8e],bh
  41981c:	pop    esp
  41981d:	jne    0x419845
  41981f:	sub    edi,ecx
  419821:	or     bl,BYTE PTR [edi+0x6d]
  419824:	ja     0x419892
  419826:	stc    
  419827:	ficom  WORD PTR [ebx]
  419829:	shl    BYTE PTR [edi+ebx*4+0x3e],cl
  41982d:	sub    dh,BYTE PTR [ecx+0x5a]
  419830:	(bad)  
  419831:	push   edi
  419832:	jmp    0x7af0:0x73402a15
  419839:	cdq    
  41983a:	stos   BYTE PTR es:[edi],al
  41983b:	nop
  41983c:	in     eax,0xd7
  41983e:	js     0x419844
  419840:	pop    eax
  419841:	pop    eax
  419842:	push   cs
  419843:	rol    BYTE PTR [ecx+0x5],cl
  419846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419847:	outs   dx,BYTE PTR ds:[esi]
  419848:	scas   al,BYTE PTR es:[edi]
  419849:	(bad)  
  41984a:	(bad)  
  41984c:	sbb    al,bh
  41984e:	add    dh,BYTE PTR ds:0xb37f51b
  419854:	mov    dh,0x96
  419856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419857:	ss retf 
  419859:	push   ecx
  41985a:	jmp    0x78d1:0xe2e40994
  419861:	cmp    eax,0xdcc04f0e
  419866:	mov    bl,0xfe
  419868:	ins    BYTE PTR es:[edi],dx
  419869:	pop    ds
  41986a:	scas   al,BYTE PTR es:[edi]
  41986b:	in     al,dx
  41986c:	fisub  WORD PTR [edi]
  41986e:	sub    eax,DWORD PTR [ecx-0x72863e9c]
  419874:	sar    ch,0xac
  419877:	les    edx,FWORD PTR [edi+0x3f63d5f6]
  41987d:	aaa    
  41987e:	jmp    0xb10a:0x1b9f3de4
  419885:	add    al,0x64
  419887:	jo     0x419900
  419889:	sbb    bh,al
  41988b:	stos   DWORD PTR es:[edi],eax
  41988c:	into   
  41988d:	dec    edx
  41988e:	sbb    bl,BYTE PTR [bp+di-0x7359]
  419893:	push   ecx
  419894:	call   0x564c:0xb7c01517
  41989b:	in     al,0x18
  41989d:	mov    eax,ds:0xd131ef95
  4198a2:	out    dx,eax
  4198a3:	outs   dx,BYTE PTR ds:[esi]
  4198a4:	fmul   DWORD PTR [ebp+0x4d]
  4198a7:	loop   0x4198d4
  4198a9:	hlt    
  4198aa:	mov    WORD PTR [ebp+edi*8+0x27],es
  4198ae:	push   0xffffff87
  4198b0:	xor    ebx,ebp
  4198b2:	sub    eax,0xcfc267bd
  4198b7:	xlat   BYTE PTR ds:[ebx]
  4198b8:	test   dl,cl
  4198ba:	dec    ebx
  4198bb:	fadd   st,st(1)
  4198bd:	pop    esp
  4198be:	test   eax,0x39d94493
  4198c3:	(bad)  
  4198c4:	ss or  al,0x41
  4198c7:	iret   
  4198c8:	dec    ebx
  4198c9:	dec    ebp
  4198ca:	sub    BYTE PTR [esi+0x1f],ah
  4198cd:	imul   edx,eax,0x13
  4198d0:	push   ecx
  4198d1:	jmp    0x41994a
  4198d3:	shl    BYTE PTR [ecx+0x66],1
  4198d6:	dec    esi
  4198d7:	mov    es,WORD PTR [esi-0x6e87ba4c]
  4198dd:	pop    esp
  4198de:	and    ebp,DWORD PTR [ebx+0x2]
  4198e1:	mov    WORD PTR [esp+0x24],cx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	push   edi
  419917:	push   edx
  419918:	push   cs
  419919:	sahf   
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0xf0
  419923:	sub    cl,BYTE PTR [eax]
  419925:	mov    edi,DWORD PTR [ebx-0x37]
  419928:	xlat   BYTE PTR ds:[ebx]
  419929:	jmp    0x419955
  41992b:	mov    ecx,0xd3605c83
  419930:	and    DWORD PTR [edi],esi
  419932:	lds    esp,FWORD PTR [ebx+edx*2]
  419935:	lea    esp,[edx+0x190cf50a]
  41993b:	jo     0x4198c3
  41993d:	nop
  41993e:	fbstp  TBYTE PTR [esi-0x26]
  419941:	(bad)  
  419943:	retf   
  419944:	cmc    
  419945:	add    ebp,DWORD PTR [edi+ebx*1]
  419948:	test   eax,0xe5c931c6
  41994d:	pusha  
  41994e:	xor    esi,DWORD PTR [edx]
  419950:	add    ah,bl
  419952:	mov    eax,0x954f4640
  419957:	cmp    al,cl
  419959:	leave  
  41995a:	pop    edi
  41995b:	fs push esp
  41995d:	pop    edi
  41995e:	mov    DWORD PTR ds:0xaf4850d1,edx
  419964:	les    ecx,FWORD PTR ds:0xf54488c
  41996a:	inc    ebx
  41996b:	inc    esi
  41996c:	mov    eax,ds:0xaf324c8e
  419971:	popa   
  419972:	inc    ebx
  419973:	data16 loope 0x419917
  419976:	ins    DWORD PTR es:[edi],dx
  419977:	sbb    al,0x8d
  419979:	out    dx,eax
  41997a:	xchg   DWORD PTR [edx],esp
  41997c:	add    BYTE PTR [ebx-0x29],0x26
  419980:	xchg   DWORD PTR [ebx-0x7c],ecx
  419983:	lods   al,BYTE PTR ds:[esi]
  419984:	mov    edx,0x14059221
  419989:	rcr    esi,cl
  41998b:	push   0xfffffffc
  41998d:	add    eax,0xc0d93488
  419992:	neg    ah
  419994:	fisubr WORD PTR ds:0x1da9da74
  41999a:	mov    ebx,ebx
  41999c:	je     0x4199cd
  41999e:	mov    DWORD PTR [ebp-0x5a],ecx
  4199a1:	idiv   DWORD PTR [ecx]
  4199a3:	jge    0x4199cf
  4199a5:	fsub   QWORD PTR [ecx]
  4199a7:	and    edx,DWORD PTR es:[edx-0x61d5cbca]
  4199ae:	(bad)  
  4199af:	lock push 0x54
  4199b2:	sahf   
  4199b3:	and    BYTE PTR ds:[edx+0x7aad77dc],cl
  4199ba:	mov    ebx,eax
  4199bc:	and    edi,ebx
  4199be:	sbb    ch,BYTE PTR [esi+0x4f]
  4199c1:	lods   eax,DWORD PTR ds:[esi]
  4199c2:	rol    edx,cl
  4199c4:	and    al,0xff
  4199c6:	in     al,dx
  4199c7:	aam    0x5d
  4199c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ca:	pop    edx
  4199cb:	inc    esi
  4199cc:	dec    eax
  4199cd:	rol    edi,cl
  4199cf:	out    dx,eax
  4199d0:	adc    eax,0x90ae3412
  4199d5:	test   al,0x62
  4199d7:	pop    eax
  4199d8:	or     edi,DWORD PTR [ecx+0x3c]
  4199db:	das    
  4199dc:	fadd   DWORD PTR fs:[edi-0xe]
  4199e0:	sub    eax,0xe4b83173
  4199e5:	jg     0x419a19
  4199e7:	or     al,0xda
  4199e9:	mov    ds:0x447e1209,al
  4199ee:	mov    edi,0x7a2c9665
  4199f3:	jne    0x419a54
  4199f5:	dec    ebp
  4199f6:	ins    BYTE PTR es:[edi],dx
  4199f7:	xor    esp,DWORD PTR [ebp-0x233e3393]
  4199fd:	lock add eax,0x9925c46f
  419a03:	imul   ecx,ebx,0x1f4bd386
  419a09:	icebp  
  419a0a:	jo     0x419a01
  419a0c:	or     DWORD PTR [esi-0xc038352],0xecf78bb8
  419a16:	rcl    DWORD PTR [edi+0x1f],0xf5
  419a1a:	into   
  419a1b:	dec    eax
  419a1c:	mov    BYTE PTR [ebx+0xb35d46f],bh
  419a22:	xor    al,bh
  419a24:	and    BYTE PTR [esi],ah
  419a26:	jb     0x4199d1
  419a28:	xchg   esi,eax
  419a29:	jae    0x4199af
  419a2b:	cmp    eax,0x9cea6122
  419a30:	rcr    BYTE PTR [ebx+0x5ec62c72],cl
  419a36:	xchg   ebp,eax
  419a37:	mov    esi,0x8d17091c
  419a3c:	push   eax
  419a3d:	mov    eax,0xe16bfd6c
  419a42:	mov    cl,0x43
  419a44:	jne    0x419aaf
  419a46:	push   ebp
  419a47:	or     al,0x11
  419a49:	mov    bl,0xd5
  419a4b:	push   cs
  419a4c:	xchg   edi,eax
  419a4d:	iret   
  419a4e:	ror    ecx,1
  419a50:	add    bl,BYTE PTR [esi]
  419a52:	ins    BYTE PTR es:[edi],dx
  419a53:	push   esi
  419a54:	fst    QWORD PTR [edx]
  419a56:	cmp    DWORD PTR [edx+ebp*2],ebx
  419a59:	sub    DWORD PTR [edx+0x75],ebp
  419a5c:	xchg   esp,eax
  419a5d:	pushf  
  419a5e:	icebp  
  419a5f:	aad    0xca
  419a61:	mov    ch,0xd3
  419a63:	int3   
  419a64:	add    DWORD PTR [ecx+0x1edaf9a],esp
  419a6a:	jmp    0xba73:0xbe50cdc
  419a71:	lods   al,BYTE PTR ds:[esi]
  419a72:	pop    es
  419a73:	lods   eax,DWORD PTR ds:[esi]
  419a74:	xchg   ebx,eax
  419a75:	push   esp
  419a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a77:	dec    ebp
  419a78:	xchg   ecx,eax
  419a79:	pop    ds
  419a7a:	and    eax,DWORD PTR [edi-0x2e]
  419a7d:	call   0x16af:0xba0475ba
  419a84:	mov    esi,DWORD PTR [edx-0x20554251]
  419a8a:	popa   
  419a8b:	jnp    0x419a3e
  419a8d:	test   al,0xdd
  419a8f:	aam    0x73
  419a91:	mov    ah,0x78
  419a93:	pop    edx
  419a94:	sbb    eax,0x2bb08a99
  419a99:	test   DWORD PTR [esi-0x30],0xb494570d
  419aa0:	sub    al,0x7e
  419aa2:	dec    eax
  419aa3:	add    eax,edi
  419aa5:	mov    esp,DWORD PTR [eax+eiz*1]
  419aa8:	cwde   
  419aa9:	ficomp DWORD PTR [esi-0x24]
  419aac:	repz sub BYTE PTR [edx-0x34aa4ce5],bh
  419ab3:	push   es
  419ab4:	pop    esp
  419ab5:	lea    eax,[edi+0x53045709]
  419abb:	push   es
  419abc:	mov    esp,0x8570558d
  419ac1:	push   0xcada0907
  419ac6:	pusha  
  419ac7:	xor    dl,BYTE PTR [ebx]
  419ac9:	jns    0x419af6
  419acb:	(bad)  
  419acc:	sbb    esp,eax
  419ace:	stos   DWORD PTR es:[edi],eax
  419acf:	ins    BYTE PTR es:[edi],dx
  419ad0:	icebp  
  419ad1:	das    
  419ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad3:	jmp    0xba00e389
  419ad8:	into   
  419ad9:	pop    ds
  419ada:	test   eax,0x6edcaf2c
  419adf:	in     eax,dx
  419ae0:	mov    bh,0x37
  419ae2:	xor    DWORD PTR [ecx+0x71fbbd65],esp
  419ae8:	stos   DWORD PTR es:[edi],eax
  419ae9:	cdq    
  419aea:	push   0x76
  419aec:	push   ds
  419aed:	and    dh,BYTE PTR [eax-0x6afe84fc]
  419af3:	cmc    
  419af4:	inc    ebp
  419af5:	jl     0x419b15
  419af7:	jl     0x419b02
  419af9:	push   ebx
  419afa:	adc    BYTE PTR [eax],al
  419afc:	mov    ebx,0x5957050f
  419b01:	and    BYTE PTR [eax+eiz*2],0x93
  419b05:	jns    0x419b48
  419b07:	add    al,0xf5
  419b09:	mov    ebp,0x76f3886
  419b0e:	xlat   BYTE PTR ds:[ebx]
  419b0f:	(bad)  
  419b10:	in     eax,dx
  419b11:	out    dx,al
  419b12:	les    ebp,FWORD PTR [edx-0x3047ebd4]
  419b18:	mov    ds:0x3cb90e84,eax
  419b1d:	mov    ecx,0xf6f8da8d
  419b22:	jne    0x419b4e
  419b24:	ins    DWORD PTR es:[edi],dx
  419b25:	mov    ch,0x23
  419b27:	neg    DWORD PTR [ebp+0x6bc23deb]
  419b2d:	cdq    
  419b2e:	xor    al,0x88
  419b30:	xlat   BYTE PTR ds:[ebx]
  419b31:	adc    DWORD PTR [edx+0x22289fec],0xffffffe4
  419b38:	xchg   edi,eax
  419b39:	retf   0xfc4e
  419b3c:	mov    cl,BYTE PTR [eax]
  419b3e:	in     eax,dx
  419b3f:	jge    0x419ba0
  419b41:	mov    al,0x5c
  419b43:	fistp  DWORD PTR [esp+ebp*4+0x1d]
  419b47:	pop    DWORD PTR [edx]
  419b49:	xchg   edx,eax
  419b4a:	pop    ds
  419b4b:	fnclex 
  419b4d:	jbe    0x419b35
  419b4f:	adc    BYTE PTR [ebx+0x62],dl
  419b52:	icebp  
  419b53:	(bad)  
  419b55:	fidiv  WORD PTR [ecx+0x370e3b5d]
  419b5b:	rcl    DWORD PTR [ebp-0x2831da37],1
  419b61:	xor    eax,0x10deba
  419b66:	add    BYTE PTR [ecx+0x742fc9],al
  419b6c:	add    BYTE PTR [ecx-0x37],ch
  419b6f:	mov    dl,0x30
  419b71:	add    BYTE PTR [eax],al
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	cdq    
  419bba:	cli    
  419bbb:	out    dx,al
  419bbc:	iret   
  419bbd:	pushf  
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	out    0x8a,al
  419bc7:	test   ebx,eax
  419bc9:	das    
  419bca:	ds aaa 
  419bcc:	iret   
  419bcd:	sahf   
  419bce:	mov    fs,WORD PTR [esi+0x276347cd]
  419bd4:	lock dec ebp
  419bd6:	jp     0x419bb0
  419bd8:	(bad)  
  419bd9:	outs   dx,BYTE PTR ds:[esi]
  419bda:	enter  0x5e3b,0x52
  419bde:	mov    WORD PTR [ebp+0x17794b6e],cs
  419be4:	mov    ch,0x21
  419be6:	pop    esp
  419be7:	mov    BYTE PTR [ebx-0x5cb540cb],ah
  419bed:	cmp    dl,BYTE PTR [ebp-0x8ce7ab1]
  419bf3:	dec    ebx
  419bf4:	push   edx
  419bf5:	sub    al,0xae
  419bf7:	inc    esp
  419bf8:	inc    ebx
  419bf9:	push   eax
  419bfa:	and    DWORD PTR [edi*8-0x35c0fa82],edx
  419c01:	getsec 
  419c03:	stc    
  419c04:	dec    esp
  419c05:	mov    BYTE PTR [edi+0x763ee981],bl
  419c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c0c:	imul   edi,DWORD PTR [edi+0x3c],0xfffffffb
  419c10:	loopne 0x419c5a
  419c12:	jp     0x419c62
  419c14:	stos   BYTE PTR es:[edi],al
  419c15:	into   
  419c16:	ins    DWORD PTR es:[edi],dx
  419c17:	out    dx,al
  419c18:	mov    edi,0x9be440df
  419c1d:	cmp    eax,DWORD PTR [ebx]
  419c1f:	bound  ecx,QWORD PTR [ebp-0x60]
  419c22:	push   esi
  419c23:	add    BYTE PTR [eax],0x79
  419c26:	bound  ebp,QWORD PTR [esi]
  419c28:	hlt    
  419c29:	std    
  419c2a:	mov    ebx,0x62d9224b
  419c2f:	jp     0x419bfa
  419c31:	shr    DWORD PTR [ecx-0x67],cl
  419c34:	xor    al,BYTE PTR [ebx+0x27]
  419c37:	fs jne 0x419c1b
  419c3a:	out    0xf7,al
  419c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c3d:	xor    BYTE PTR [edx-0x33],ah
  419c40:	stos   DWORD PTR es:[edi],eax
  419c41:	in     eax,dx
  419c42:	inc    esi
  419c43:	pop    ss
  419c44:	in     eax,dx
  419c45:	daa    
  419c46:	sub    ah,0xc9
  419c49:	out    dx,al
  419c4a:	loope  0x419cbd
  419c4c:	fwait
  419c4d:	int    0xa2
  419c4f:	xchg   edx,eax
  419c50:	mov    ebx,DWORD PTR [esi-0x1]
  419c53:	(bad)  
  419c54:	adc    esi,DWORD PTR [esp+ebp*4]
  419c57:	inc    esi
  419c58:	out    dx,al
  419c59:	jne    0x419c00
  419c5b:	or     esi,DWORD PTR [ecx]
  419c5d:	cmp    BYTE PTR [ecx-0x6da1ba36],ah
  419c63:	retf   
  419c64:	sub    al,0x40
  419c66:	and    al,cl
  419c68:	pop    esi
  419c69:	(bad)  
  419c6a:	scas   al,BYTE PTR es:[edi]
  419c6b:	outs   dx,BYTE PTR ds:[esi]
  419c6c:	sbb    ebp,DWORD PTR [ecx+0xf]
  419c6f:	jae    0x419c65
  419c71:	(bad)  
  419c72:	sbb    BYTE PTR [ebp-0x77ee9f66],ch
  419c78:	xchg   BYTE PTR [esi],ch
  419c7a:	dec    esi
  419c7b:	cwde   
  419c7c:	js     0x419ce7
  419c7e:	and    bl,BYTE PTR [eax]
  419c80:	xchg   ebp,eax
  419c81:	jb     0x419c36
  419c83:	and    DWORD PTR [esp+ecx*4+0x337cd703],edi
  419c8a:	xchg   edx,eax
  419c8b:	das    
  419c8c:	stos   BYTE PTR es:[edi],al
  419c8d:	jb     0x419c39
  419c8f:	mov    al,0x14
  419c91:	cmp    BYTE PTR [edx+0x6e],al
  419c94:	out    0x26,eax
  419c96:	std    
  419c97:	aas    
  419c98:	cmp    BYTE PTR [edi-0x11],bh
  419c9b:	cli    
  419c9c:	cli    
  419c9d:	mov    ecx,0x7a03f408
  419ca2:	pop    edx
  419ca3:	les    eax,FWORD PTR [edx+0x35]
  419ca6:	ret    0x8227
  419ca9:	sub    edx,DWORD PTR [edi+0x33b62b1f]
  419caf:	xchg   edx,eax
  419cb0:	xchg   ebx,eax
  419cb1:	sub    ah,dl
  419cb3:	jle    0x419d2c
  419cb5:	mov    dh,bh
  419cb7:	mov    ch,0x1d
  419cb9:	jp     0x419c64
  419cbb:	inc    ecx
  419cbc:	mov    dl,0xd
  419cbe:	cmp    DWORD PTR [ecx+0x5a],esp
  419cc1:	mov    dh,0xb4
  419cc3:	retf   0xe5a2
  419cc6:	dec    esi
  419cc7:	cmp    al,0xf2
  419cc9:	pop    edi
  419cca:	in     al,dx
  419ccb:	das    
  419ccc:	out    0xc0,al
  419cce:	mov    eax,ds:0x5dfee1ac
  419cd3:	enter  0xab7f,0xf2
  419cd7:	mov    ebp,0x8ac7e5cf
  419cdc:	push   esp
  419cdd:	es ja  0x419d26
  419ce0:	mov    al,ds:0x5bd2a402
  419ce5:	pop    edx
  419ce6:	fisttp QWORD PTR [esi]
  419ce8:	cwde   
  419ce9:	fs ins BYTE PTR es:[edi],dx
  419ceb:	jae    0x419d46
  419ced:	ror    BYTE PTR [esi],cl
  419cef:	cwde   
  419cf0:	fimul  DWORD PTR [eax+ecx*2+0xb66da2b]
  419cf7:	mov    edi,0xa1729221
  419cfc:	pushf  
  419cfd:	xchg   edi,eax
  419cfe:	jbe    0x419cd4
  419d00:	jb     0x419cbe
  419d02:	cdq    
  419d03:	or     DWORD PTR [eax+esi*8],edi
  419d06:	jnp    0x419d02
  419d08:	sahf   
  419d09:	mov    bl,0xe9
  419d0b:	in     al,0x50
  419d0d:	jle    0x419d2e
  419d0f:	in     al,dx
  419d10:	xchg   esi,eax
  419d11:	fdiv   QWORD PTR ds:0x44f11a9e
  419d17:	lahf   
  419d18:	mov    ds:0x4036f61e,eax
  419d1d:	lahf   
  419d1e:	jnp    0x419d17
  419d20:	xor    DWORD PTR [edi+0x72],0x31
  419d24:	loopne 0x419cf8
  419d26:	or     cl,BYTE PTR [ecx]
  419d28:	push   cs
  419d29:	call   0xea62:0xa52c6ab3
  419d30:	xor    edi,ebx
  419d32:	jnp    0x419cd6
  419d34:	in     eax,0xc7
  419d36:	cmp    bl,BYTE PTR [edi-0x1acd07a2]
  419d3c:	xchg   esp,eax
  419d3d:	pusha  
  419d3e:	clc    
  419d3f:	mov    ch,0xe2
  419d41:	je     0x419d5a
  419d43:	mov    ah,0xf
  419d45:	pop    ebp
  419d46:	rol    BYTE PTR [ebp+0x640cbd4],0xe9
  419d4d:	pop    ebp
  419d4e:	retf   
  419d4f:	imul   edx,DWORD PTR [ebp+ebx*2+0xb4eeab6],0xffffffed
  419d57:	push   cs
  419d58:	xchg   ebp,eax
  419d59:	(bad)  
  419d5a:	test   BYTE PTR [ebx-0x54b0394b],0x2c
  419d61:	dec    ebx
  419d62:	out    dx,al
  419d63:	and    BYTE PTR [ecx],ch
  419d65:	sub    al,0x11
  419d67:	pop    ds
  419d68:	xchg   BYTE PTR [eax],bh
  419d6a:	xchg   edx,eax
  419d6b:	cmp    al,0x8a
  419d6d:	pop    ecx
  419d6e:	pop    ds
  419d6f:	pop    esi
  419d70:	dec    ecx
  419d71:	jg     0x419d80
  419d73:	call   0xc4dc:0x280bb264
  419d7a:	jnp    0x419d73
  419d7c:	sub    edx,DWORD PTR [ecx+0x7c]
  419d7f:	int3   
  419d80:	mov    es,ebp
  419d82:	sub    eax,0x178eacda
  419d87:	mov    bh,0x57
  419d89:	mov    ds,WORD PTR [ecx]
  419d8b:	je     0x419d81
  419d8d:	jne    0x419d70
  419d8f:	mov    ss,edi
  419d91:	xchg   ecx,eax
  419d92:	rdmsr  
  419d94:	mov    al,0xcd
  419d96:	inc    ecx
  419d97:	cmp    eax,0x40ca3568
  419d9c:	or     eax,0x21c4e8df
  419da1:	dec    edx
  419da2:	push   ebp
  419da3:	inc    ecx
  419da4:	xchg   ebx,eax
  419da5:	(bad)  
  419da6:	(bad)  
  419da7:	fstp   TBYTE PTR [eax-0x4564943a]
  419dad:	mov    dh,0x1e
  419daf:	add    al,0xcc
  419db1:	mov    bh,0xfa
  419db3:	sub    eax,0x6873ee55
  419db8:	sbb    bl,BYTE PTR [ecx]
  419dba:	mov    esp,DWORD PTR [ecx+ecx*2-0x14]
  419dbe:	data16 jmp 0x419e3d
  419dc1:	push   esi
  419dc2:	dec    ebx
  419dc3:	push   0x46c538a9
  419dc8:	push   ebp
  419dc9:	test   eax,0x86c717b9
  419dce:	imul   esi,DWORD PTR [ebx],0x7b
  419dd1:	out    0x5,al
  419dd3:	or     al,0x17
  419dd5:	(bad)  
  419dd6:	test   al,0x56
  419dd8:	add    esp,DWORD PTR [edi+0x4925d7dc]
  419dde:	mov    ah,BYTE PTR [eax-0x508da6f2]
  419de4:	sub    cl,BYTE PTR [ebx-0x39]
  419de7:	addr16 loop 0x419e48
  419dea:	mov    eax,ds:0x577e88f5
  419def:	sbb    dh,BYTE PTR [ebx+ebp*8-0x67a9ab2b]
  419df6:	scas   al,BYTE PTR es:[edi]
  419df7:	cmc    
  419df8:	or     eax,0xcaa37b82
  419dfd:	(bad)  
  419dfe:	js     0x419e55
  419e00:	push   esp
  419e01:	loop   0x419e53
  419e03:	iret   
  419e04:	mov    ah,BYTE PTR [esi-0x75]
  419e07:	push   esp
  419e08:	and    al,0x24
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	ffree  st(4)
  419e4e:	frstor [eax-0x62]
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x0
  419e5a:	jl     0x419e99
  419e5c:	mov    edx,esi
  419e5e:	idiv   DWORD PTR [ecx-0x79]
  419e61:	shl    BYTE PTR [ebx],cl
  419e63:	fst    QWORD PTR [esi-0x2dfb7813]
  419e69:	fcom   QWORD PTR [eax-0x2cb7d18a]
  419e6f:	dec    edi
  419e70:	pop    es
  419e71:	sbb    BYTE PTR [edi+0x57],bh
  419e74:	(bad)  
  419e75:	fisttp WORD PTR [edi-0x5970903a]
  419e7b:	sbb    eax,0x51340f7f
  419e80:	sti    
  419e81:	pushf  
  419e82:	mov    bl,0x20
  419e84:	imul   esp,esi,0x7
  419e87:	mov    edi,edx
  419e89:	lods   al,BYTE PTR ds:[esi]
  419e8a:	aas    
  419e8b:	xor    esp,edi
  419e8d:	cld    
  419e8e:	xchg   esi,eax
  419e8f:	push   0x76f8362f
  419e94:	inc    eax
  419e95:	push   esp
  419e96:	pop    ecx
  419e97:	and    ch,BYTE PTR [edx-0x1461122c]
  419e9d:	cli    
  419e9e:	sbb    esi,edi
  419ea0:	and    ecx,DWORD PTR [esi+eiz*8]
  419ea3:	loop   0x419e55
  419ea5:	sub    ebp,edx
  419ea7:	repz enter 0x6e3a,0x64
  419eac:	ja     0x419e5d
  419eae:	(bad)  
  419eaf:	shl    bl,cl
  419eb1:	fstp   DWORD PTR [eax]
  419eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb4:	ds adc DWORD PTR ss:[ebx],esi
  419eb8:	push   es
  419eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eba:	inc    esp
  419ebb:	addr16 lahf 
  419ebd:	push   0xbfc41530
  419ec2:	fs out 0x4e,al
  419ec5:	dec    eax
  419ec6:	cmp    BYTE PTR [edi],bl
  419ec8:	pop    ebp
  419ec9:	xchg   edx,eax
  419eca:	inc    edx
  419ecb:	out    0x45,eax
  419ecd:	sbb    DWORD PTR [esi],eax
  419ecf:	jbe    0x419f1c
  419ed1:	mov    cs,WORD PTR [ecx+0x67]
  419ed4:	cmp    eax,0xa94fdb3c
  419ed9:	test   al,0x26
  419edb:	push   ds
  419edc:	adc    eax,0x57e556c6
  419ee1:	sub    DWORD PTR [ebx],eax
  419ee3:	sub    al,0x66
  419ee5:	jmp    0x6206:0xee51269c
  419eec:	scas   eax,DWORD PTR es:[edi]
  419eed:	arpl   WORD PTR [eax+0x2b273c21],si
  419ef3:	cdq    
  419ef4:	dec    ebx
  419ef5:	jno    0x419f40
  419ef7:	pop    ss
  419ef8:	mov    ah,0x7b
  419efa:	dec    ebp
  419efb:	in     eax,0xcb
  419efd:	inc    edx
  419efe:	test   al,0x14
  419f00:	pop    esp
  419f01:	mov    BYTE PTR [ebx+0x561dc73c],0x77
  419f08:	and    BYTE PTR [edi],al
  419f0a:	mov    dl,0x1e
  419f0c:	jae    0x419f32
  419f0e:	add    eax,0xf2d40440
  419f13:	mov    esi,0xff683e92
  419f18:	fbld   TBYTE PTR [eax-0x390089a4]
  419f1e:	imul   esi,edi,0xe4ba50f7
  419f24:	mov    ch,0xc9
  419f26:	retf   
  419f27:	sahf   
  419f28:	mov    cl,0x25
  419f2a:	sub    edx,DWORD PTR [edi+0x47]
  419f2d:	jno    0x419f51
  419f2f:	repz xchg ebp,esi
  419f32:	and    esi,edi
  419f34:	push   ebp
  419f35:	cmp    ecx,DWORD PTR [edi-0x5]
  419f38:	sub    DWORD PTR [esi+0x47554fa1],ebx
  419f3e:	sbb    ebx,DWORD PTR [ebp-0x9d0ab12]
  419f44:	icebp  
  419f45:	mov    ch,0xbf
  419f47:	and    edx,DWORD PTR [esi-0x2c326f92]
  419f4d:	xchg   BYTE PTR [esi-0x68],bl
  419f50:	idiv   dl
  419f52:	jmp    0x419f79
  419f54:	gs adc al,0x47
  419f57:	in     eax,dx
  419f58:	inc    ebx
  419f59:	push   es
  419f5a:	js     0x419f71
  419f5c:	and    al,0xb8
  419f5e:	jmp    0x419ee9
  419f60:	adc    al,0x92
  419f62:	(bad)  
  419f63:	stc    
  419f64:	and    DWORD PTR [ebx-0xa3769ea],ebx
  419f6a:	mov    esp,0xced08eaa
  419f6f:	xchg   esp,eax
  419f70:	in     al,0x98
  419f72:	xchg   DWORD PTR [ebx],esp
  419f74:	cmp    esp,DWORD PTR [edx-0x49]
  419f77:	or     ah,dl
  419f79:	push   ebp
  419f7a:	add    al,0x43
  419f7c:	mov    ch,0xc0
  419f7e:	ds adc al,0x38
  419f81:	mov    esi,0xc3d1b8b
  419f86:	or     esi,esp
  419f88:	sti    
  419f89:	fcomp  QWORD PTR [ebp-0x4ca5d565]
  419f8f:	jno    0x419fb9
  419f91:	mov    ah,0x6
  419f93:	mov    BYTE PTR [eax],dl
  419f95:	leave  
  419f96:	inc    ebx
  419f97:	mov    esi,0xe83e82bd
  419f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9d:	jnp    0x419f82
  419f9f:	adc    dh,al
  419fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa2:	or     eax,0xb3666397
  419fa7:	sbb    eax,0x7c0bb900
  419fac:	mov    ah,0xc3
  419fae:	xor    esi,DWORD PTR ds:0xcc0531e3
  419fb4:	pop    ds
  419fb5:	sahf   
  419fb6:	pop    ecx
  419fb7:	outs   dx,BYTE PTR ds:[esi]
  419fb8:	out    0xa,eax
  419fba:	sub    ch,0xe9
  419fbd:	push   ecx
  419fbe:	enter  0xfbcc,0xe7
  419fc2:	cmp    al,0x11
  419fc4:	dec    eax
  419fc5:	lds    esi,FWORD PTR [edx-0x6aa97e0c]
  419fcb:	jb     0x419fd8
  419fcd:	push   edx
  419fce:	jecxz  0x419f7b
  419fd0:	test   al,0xb7
  419fd2:	push   es
  419fd3:	lahf   
  419fd4:	dec    edi
  419fd5:	cs int 0x26
  419fd8:	push   eax
  419fd9:	push   0xffffffff
  419fdb:	pop    ebx
  419fdc:	inc    eax
  419fdd:	jns    0x419f74
  419fdf:	lods   al,BYTE PTR ds:[esi]
  419fe0:	es sbb bh,cl
  419fe3:	stc    
  419fe4:	push   esi
  419fe5:	jmp    0x419f8a
  419fe7:	in     eax,dx
  419fe8:	enter  0xb721,0x2f
  419fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fed:	hlt    
  419fee:	outs   dx,BYTE PTR ds:[esi]
  419fef:	jne    0x41a014
  419ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff2:	push   0xf4547b14
  419ff7:	scas   eax,DWORD PTR es:[edi]
  419ff8:	cli    
  419ff9:	cdq    
  419ffa:	imul   ebx,DWORD PTR [edx+0x7d3557d3],0x43
  41a001:	push   0xf309b9c9
  41a006:	adc    eax,0x38686681
  41a00b:	mov    ebx,0xc84d52b6
  41a010:	or     DWORD PTR [edx-0x2a],edx
  41a013:	pushf  
  41a014:	add    BYTE PTR ds:0x4c09f2d,al
  41a01a:	cmp    BYTE PTR [ebx],0xd5
  41a01d:	pop    ds
  41a01e:	inc    edx
  41a01f:	repz ja 0x419ff4
  41a022:	jmp    0x636a:0xc76ddbc0
  41a029:	cli    
  41a02a:	sub    ch,ch
  41a02c:	test   DWORD PTR [ebp-0x53],ebx
  41a02f:	and    BYTE PTR [esi+0x58],al
  41a032:	pop    ds
  41a033:	cli    
  41a034:	(bad)  
  41a035:	mov    ebp,0xb006273a
  41a03a:	fld    QWORD PTR ss:[eax]
  41a03d:	xchg   ebx,eax
  41a03e:	(bad)  
  41a03f:	or     BYTE PTR [ebx],cl
  41a041:	adc    al,ah
  41a043:	pop    edx
  41a044:	add    BYTE PTR [ebx],ch
  41a046:	mov    ecx,eax
  41a048:	rcl    DWORD PTR [ebx+eax*1-0xb],cl
  41a04c:	ror    edi,0xb9
  41a04f:	inc    esp
  41a050:	jmp    0x419fe4
  41a052:	xor    ecx,DWORD PTR [ebx]
  41a054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a055:	pop    esi
  41a056:	arpl   ax,dx
  41a058:	out    dx,eax
  41a059:	and    al,0x2f
  41a05b:	repnz pop ss
  41a05d:	bound  ebp,QWORD PTR [edx+0x5ef1695c]
  41a063:	outs   dx,BYTE PTR ds:[esi]
  41a064:	nop
  41a065:	xor    esi,DWORD PTR ss:[eax+esi*2]
  41a069:	fstp   TBYTE PTR [eax-0x1dc4c97e]
  41a06f:	rcr    BYTE PTR [ebx+0x4f],cl
  41a072:	fst    DWORD PTR [esi-0x7890a5f5]
  41a078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a079:	mov    ah,dh
  41a07b:	mov    bl,0x43
  41a07d:	xor    eax,0xd4678f6
  41a082:	dec    ebp
  41a083:	sbb    DWORD PTR [ebx],0x7d
  41a086:	adc    eax,0x11177a3e
  41a08b:	inc    esi
  41a08c:	or     bl,cl
  41a08e:	jbe    0x41a04c
  41a090:	jle    0x41a04b
  41a092:	pop    eax
  41a093:	sub    al,0x15
  41a095:	add    eax,0xfda1a4c
  41a09a:	lods   al,BYTE PTR ds:[esi]
  41a09b:	rol    DWORD PTR [edx],1
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	sar    DWORD PTR [edx+eiz*8+0x1b8be3eb],1
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0x5d
  41a0ca:	data16 jno 0x41a061
  41a0cd:	sub    bh,BYTE PTR [esi]
  41a0cf:	jmp    0x41a136
  41a0d1:	pop    ss
  41a0d2:	jbe    0x41a10f
  41a0d4:	stos   DWORD PTR es:[edi],eax
  41a0d5:	loopne 0x41a0d8
  41a0d7:	ins    DWORD PTR es:[edi],dx
  41a0d8:	xchg   BYTE PTR [ecx+ecx*2],al
  41a0db:	ret    
  41a0dc:	hlt    
  41a0dd:	inc    esi
  41a0de:	mov    eax,0x749db227
  41a0e3:	sub    eax,0x63331adc
  41a0e8:	je     0x41a117
  41a0ea:	lock int3 
  41a0ec:	xchg   DWORD PTR [ecx+0x3a8eb6ad],edi
  41a0f2:	jbe    0x41a0e8
  41a0f4:	xchg   esi,eax
  41a0f5:	shr    BYTE PTR [edx],1
  41a0f7:	and    al,0xf2
  41a0f9:	xchg   esp,eax
  41a0fa:	fild   DWORD PTR [esi+0x4f]
  41a0fd:	lods   al,BYTE PTR ds:[esi]
  41a0fe:	out    dx,al
  41a0ff:	mov    eax,0x43403e1
  41a104:	jmp    0x443:0x3d001f6
  41a10b:	repz out dx,al
  41a10d:	ds push ebx
  41a10f:	mov    BYTE PTR [edi+0xbf8ce87],ah
  41a115:	cwde   
  41a116:	and    al,0x97
  41a118:	adc    eax,0x26f6f945
  41a11d:	int3   
  41a11e:	aas    
  41a11f:	in     eax,0xb0
  41a121:	xchg   esp,eax
  41a122:	lea    esi,[edi+0x61]
  41a125:	push   0x92c608cc
  41a12a:	loopne 0x41a10e
  41a12c:	xchg   DWORD PTR [edx-0x28],edi
  41a12f:	nop
  41a130:	jmp    0xab2ca380
  41a135:	push   0xffffffa4
  41a137:	cmc    
  41a138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a139:	xchg   DWORD PTR [edi],edi
  41a13b:	out    0x6c,al
  41a13d:	repz push eax
  41a13f:	mul    BYTE PTR [eax]
  41a141:	or     eax,ecx
  41a143:	jae    0x41a0fd
  41a145:	retf   
  41a146:	outs   dx,DWORD PTR ds:[esi]
  41a147:	scas   eax,DWORD PTR es:[edi]
  41a148:	pop    eax
  41a149:	in     al,0x39
  41a14b:	std    
  41a14c:	out    dx,eax
  41a14d:	(bad)  
  41a14e:	scas   eax,DWORD PTR es:[edi]
  41a14f:	push   0x42
  41a151:	sti    
  41a152:	cmp    ebx,DWORD PTR cs:[edx]
  41a155:	push   edi
  41a156:	adc    DWORD PTR [eax+esi*2+0x63],0x35b5cfb9
  41a15e:	or     al,0x16
  41a160:	cmp    eax,0xed8d58dd
  41a165:	fcomp  DWORD PTR [esi+0x18]
  41a168:	ja     0x41a108
  41a16a:	push   eax
  41a16b:	call   0xf049:0x8c28dae9
  41a172:	jae    0x41a155
  41a174:	mov    ch,0xd8
  41a176:	push   esp
  41a177:	and    al,0x19
  41a179:	in     al,dx
  41a17a:	jnp    0x41a131
  41a17c:	(bad)  
  41a17d:	(bad)  
  41a17e:	iret   
  41a17f:	clc    
  41a180:	(bad)  
  41a181:	mov    bh,0xb0
  41a183:	icebp  
  41a184:	out    0xb9,eax
  41a186:	add    BYTE PTR [ebx+eax*2+0x6bd11271],bl
  41a18d:	mov    es,esp
  41a18f:	inc    ecx
  41a190:	lahf   
  41a191:	ficomp WORD PTR [ebx-0x66eaf98e]
  41a197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a198:	xor    eax,0xc73e1ae1
  41a19d:	inc    BYTE PTR ds:0x33712036
  41a1a3:	imul   eax,DWORD PTR [ecx-0x410610a1],0x7b
  41a1aa:	dec    ecx
  41a1ab:	cdq    
  41a1ac:	xor    esp,ecx
  41a1ae:	push   0xffffffd1
  41a1b0:	outs   dx,DWORD PTR ds:[esi]
  41a1b1:	mov    ah,0xcf
  41a1b3:	jns    0x41a13e
  41a1b5:	xlat   BYTE PTR ds:[ebx]
  41a1b6:	add    edi,ecx
  41a1b8:	idiv   DWORD PTR [ebx]
  41a1ba:	add    al,0x11
  41a1bc:	sahf   
  41a1bd:	(bad)
  41a1c1:	inc    esp
  41a1c2:	inc    ebx
  41a1c3:	in     eax,0x50
  41a1c5:	cmp    bl,BYTE PTR [esi+0x2b98ebf6]
  41a1cb:	into   
  41a1cc:	pop    es
  41a1cd:	push   ss
  41a1ce:	push   esi
  41a1cf:	(bad)  
  41a1d0:	enter  0x54a5,0x54
  41a1d4:	inc    edi
  41a1d5:	enter  0xe7ee,0x6e
  41a1d9:	int    0x2c
  41a1db:	cs push cs
  41a1dd:	popf   
  41a1de:	mov    ebp,0x3e641be
  41a1e3:	mov    ah,0x5c
  41a1e5:	repz add bh,BYTE PTR [ebx]
  41a1e8:	stos   BYTE PTR es:[edi],al
  41a1e9:	js     0x41a203
  41a1eb:	daa    
  41a1ec:	shl    eax,0xe8
  41a1ef:	sbb    BYTE PTR [esi+esi*1+0x37d6ff52],0x77
  41a1f7:	mov    cl,0x78
  41a1f9:	repz scas al,BYTE PTR es:[edi]
  41a1fb:	dec    ebp
  41a1fc:	push   edi
  41a1fd:	mul    bl
  41a1ff:	xchg   esp,eax
  41a200:	sbb    esp,edx
  41a202:	cmp    al,0x78
  41a204:	iret   
  41a205:	(bad)  
  41a206:	data16 sbb cl,dl
  41a209:	dec    eax
  41a20a:	aas    
  41a20b:	sub    eax,0xb04c2410
  41a210:	or     eax,0xe402cf21
  41a215:	pop    ds
  41a216:	xchg   edx,eax
  41a217:	clc    
  41a218:	icebp  
  41a219:	ror    BYTE PTR [ecx],1
  41a21b:	push   DWORD PTR [ebp+0x7f8727e2]
  41a221:	mov    WORD PTR [ecx+0x40451900],?
  41a227:	or     ecx,0xffffffde
  41a22a:	fbld   TBYTE PTR [ebp+edx*8-0x2c]
  41a22e:	dec    eax
  41a22f:	rcr    DWORD PTR [ebx],1
  41a231:	add    al,0xd9
  41a233:	retf   0x19d5
  41a236:	push   cs
  41a237:	add    al,BYTE PTR [edi]
  41a239:	sbb    eax,0x71ad2618
  41a23e:	aas    
  41a23f:	js     0x41a24f
  41a241:	rcr    DWORD PTR [eax+0x70],cl
  41a244:	adc    bh,0x60
  41a247:	xor    al,0x5e
  41a249:	mov    DWORD PTR [ebx],edx
  41a24b:	jge    0x41a222
  41a24d:	mov    eax,ds:0x3acdb2a2
  41a252:	cmp    cl,BYTE PTR [eax+0x357471bc]
  41a258:	push   ebp
  41a259:	fs ror eax,1
  41a25c:	inc    edx
  41a25d:	push   esi
  41a25e:	push   ecx
  41a25f:	icebp  
  41a260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a261:	push   ebx
  41a262:	stc    
  41a263:	test   eax,0x5066074f
  41a268:	sbb    DWORD PTR [ecx-0x18],0xffffffc6
  41a26c:	and    BYTE PTR [edi*1-0x25f289c1],ah
  41a273:	sar    DWORD PTR [eax],cl
  41a275:	sbb    BYTE PTR [edi],ah
  41a277:	add    eax,0xf9ad3501
  41a27c:	leave  
  41a27d:	fldenv [ebp-0x42d87ba0]
  41a283:	cwde   
  41a284:	jmp    0x41a293
  41a286:	ins    BYTE PTR es:[edi],dx
  41a287:	outs   dx,DWORD PTR ds:[esi]
  41a288:	es and al,bl
  41a28b:	enter  0x502,0x7a
  41a28f:	dec    DWORD PTR [edx-0x26b050d9]
  41a295:	lds    edx,FWORD PTR [esi+0x3fff008d]
  41a29b:	xchg   ecx,eax
  41a29c:	lea    edi,[eax*2-0x8e3231b]
  41a2a3:	adc    esp,DWORD PTR [ecx-0x35]
  41a2a6:	pop    DWORD PTR [edi]
  41a2a8:	fs jl  0x41a23c
  41a2ab:	and    ebx,DWORD PTR ds:0x23fe2100
  41a2b2:	jle    0x41a308
  41a2b4:	(bad)  
  41a2b6:	aam    0x90
  41a2b8:	cs pushf 
  41a2ba:	push   edx
  41a2bb:	push   edx
  41a2bc:	in     al,dx
  41a2bd:	shl    DWORD PTR [esi],cl
  41a2bf:	mov    ebx,0x29e3924e
  41a2c4:	xor    ch,dl
  41a2c6:	sub    esi,DWORD PTR [ebx+0x6c]
  41a2c9:	scas   eax,DWORD PTR es:[edi]
  41a2ca:	aam    0xe8
  41a2cc:	push   eax
  41a2cd:	scas   eax,DWORD PTR es:[edi]
  41a2ce:	clc    
  41a2cf:	loopne 0x41a26d
  41a2d1:	cs cld 
  41a2d3:	mov    ch,0x77
  41a2d5:	dec    BYTE PTR [bx+di]
  41a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d9:	add    DWORD PTR [eax],ecx
  41a2db:	adc    edx,DWORD PTR ss:[ecx+eiz*2-0x79d1db58]
  41a2e3:	adc    ebp,esp
  41a2e5:	jecxz  0x41a32b
  41a2e7:	test   al,0xec
  41a2e9:	dec    eax
  41a2ea:	hlt    
  41a2eb:	(bad)  
  41a2ec:	in     eax,dx
  41a2ed:	mov    ah,0x34
  41a2ef:	cmp    al,0xa9
  41a2f1:	jmp    0x6ee0dfb9
  41a2f6:	iret   
  41a2f7:	pushf  
  41a2f8:	push   0x6d7d5abc
  41a2fd:	gs sbb edx,eax
  41a300:	sub    BYTE PTR [ebx],bl
  41a302:	cld    
  41a303:	mov    esp,0x77c0db3e
  41a308:	xor    al,0xb
  41a30a:	rcl    DWORD PTR [edx+0x56],1
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	cmp    BYTE PTR [ebx+0x7c],al
  41a378:	xchg   edx,eax
  41a379:	add    al,0x1f
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x6f
  41a382:	fbstp  TBYTE PTR [ebx+0x15090ada]
  41a388:	mov    cl,0x75
  41a38a:	fcomp  DWORD PTR [ebx-0x4d]
  41a38d:	pop    ebx
  41a38e:	sbb    al,0x18
  41a390:	jmp    0x41a404
  41a392:	ja     0x41a31f
  41a394:	mov    bh,0x31
  41a396:	(bad)  
  41a397:	ror    DWORD PTR [ebx-0x56],cl
  41a39a:	pop    eax
  41a39b:	pop    ecx
  41a39c:	jl     0x41a385
  41a39e:	jns    0x41a396
  41a3a0:	ret    
  41a3a1:	pop    edx
  41a3a2:	mov    ds:0x9711f4e0,al
  41a3a7:	sub    DWORD PTR [edx],ebx
  41a3a9:	fadd   QWORD PTR [ebx]
  41a3ab:	inc    edx
  41a3ac:	jbe    0x41a3aa
  41a3ae:	adc    DWORD PTR [eax],ecx
  41a3b0:	into   
  41a3b1:	and    DWORD PTR [eax],ebx
  41a3b3:	cmc    
  41a3b4:	(bad)  
  41a3b5:	and    BYTE PTR [ecx+0x43],ch
  41a3b8:	mov    dh,0x48
  41a3ba:	ja     0x41a3d1
  41a3bc:	xor    ecx,DWORD PTR [edx]
  41a3be:	sbb    bl,BYTE PTR [esi+eiz*4]
  41a3c1:	push   ecx
  41a3c2:	push   es
  41a3c3:	sti    
  41a3c4:	pop    esp
  41a3c5:	mov    al,0xc0
  41a3c7:	adc    eax,0xdcba461d
  41a3cc:	shr    edi,1
  41a3ce:	leave  
  41a3cf:	out    0x85,al
  41a3d1:	dec    eax
  41a3d2:	sub    dh,BYTE PTR [edi+0x1]
  41a3d5:	call   0x2582:0xcd14272f
  41a3dc:	aam    0xcb
  41a3de:	in     al,dx
  41a3df:	mov    ecx,0x99c6b45f
  41a3e4:	jns    0x41a3a1
  41a3e6:	sti    
  41a3e7:	or     edx,DWORD PTR [ecx-0x68]
  41a3ea:	xor    al,0xfe
  41a3ec:	outs   dx,DWORD PTR ds:[esi]
  41a3ed:	jmp    0x32236659
  41a3f2:	lea    ecx,[eax-0x11]
  41a3f5:	add    DWORD PTR [esi-0x66],edx
  41a3f8:	push   ebx
  41a3f9:	xor    BYTE PTR [esp+eax*8-0x18],dh
  41a3fd:	outs   dx,DWORD PTR ds:[esi]
  41a3fe:	push   eax
  41a3ff:	or     edx,esp
  41a401:	mov    ah,0x6f
  41a403:	xlat   BYTE PTR ds:[ebx]
  41a404:	sbb    BYTE PTR [edi-0x34],al
  41a407:	cmp    ecx,DWORD PTR [edi]
  41a409:	mov    dl,bh
  41a40b:	add    edi,DWORD PTR [edx+0x9eb8662]
  41a411:	loope  0x41a3e2
  41a413:	mov    eax,0xd786d4aa
  41a418:	xchg   esp,eax
  41a419:	sub    DWORD PTR [ecx],ecx
  41a41b:	mov    ecx,0x47bcebf9
  41a420:	or     ebp,DWORD PTR [esi-0x54]
  41a423:	push   edi
  41a424:	lahf   
  41a425:	dec    edi
  41a426:	xor    DWORD PTR [ecx+0x3f228b88],esi
  41a42c:	inc    edx
  41a42d:	aad    0x7c
  41a42f:	mov    bh,0x4c
  41a431:	pop    edi
  41a432:	push   DWORD PTR ds:0xcddf38c9
  41a438:	sbb    dh,ch
  41a43a:	hlt    
  41a43b:	inc    ecx
  41a43c:	push   si
  41a43e:	and    BYTE PTR gs:[edx],dh
  41a441:	ds and ecx,DWORD PTR cs:0xca917f09
  41a449:	cmp    eax,0x6be3eeb8
  41a44e:	pop    ecx
  41a44f:	rcl    DWORD PTR [edx],0x9a
  41a452:	mov    eax,0xcdd2452f
  41a457:	sti    
  41a458:	scas   al,BYTE PTR es:[edi]
  41a459:	std    
  41a45a:	dec    esp
  41a45b:	jmp    0xf0d4:0x91a5abd2
  41a462:	out    dx,al
  41a463:	les    ebx,FWORD PTR [esp+ebp*8+0x7c]
  41a467:	(bad)  
  41a468:	mov    ch,0x34
  41a46a:	sbb    al,0xc4
  41a46c:	test   ch,ch
  41a46e:	ss jmp 0x41a4a3
  41a471:	or     DWORD PTR [edi+0x2e1988bb],0x3c4193b1
  41a47b:	scas   al,BYTE PTR es:[edi]
  41a47c:	lock dec ecx
  41a47e:	pop    es
  41a47f:	inc    esp
  41a480:	pop    edi
  41a481:	sbb    BYTE PTR [edi-0x19],0x52
  41a485:	push   esi
  41a486:	and    eax,0xdea97be6
  41a48b:	jne    0x41a4f6
  41a48d:	mov    bl,0xb9
  41a48f:	jg     0x41a4c2
  41a491:	and    edx,esi
  41a493:	inc    ecx
  41a494:	gs jns 0x41a4be
  41a497:	jbe    0x41a4be
  41a499:	add    al,0x7a
  41a49b:	scas   al,BYTE PTR es:[edi]
  41a49c:	das    
  41a49d:	and    eax,0x68b045eb
  41a4a2:	mov    cl,0x40
  41a4a4:	loopne 0x41a4d3
  41a4a6:	jns    0x41a4ef
  41a4a8:	mov    ebp,0x12a0c843
  41a4ad:	jg     0x41a46a
  41a4af:	xchg   esi,eax
  41a4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b1:	jge    0x41a458
  41a4b3:	or     eax,0x2da862a0
  41a4b8:	inc    ecx
  41a4b9:	xchg   ecx,eax
  41a4ba:	in     eax,0xae
  41a4bc:	mov    ah,0x6f
  41a4be:	mov    edi,0x48715443
  41a4c3:	inc    eax
  41a4c4:	clc    
  41a4c5:	ds pusha 
  41a4c7:	mov    dl,BYTE PTR [ecx+0x6a]
  41a4ca:	sbb    bh,ah
  41a4cc:	adc    eax,esi
  41a4ce:	sar    DWORD PTR [edi-0x6c173629],1
  41a4d4:	mov    ebx,0x8cc0ef16
  41a4d9:	jmp    0x41a542
  41a4db:	dec    esp
  41a4dc:	shr    DWORD PTR [edx*2+0x327ff803],cl
  41a4e3:	int3   
  41a4e4:	in     al,0xfa
  41a4e6:	(bad)  
  41a4e7:	add    edx,DWORD PTR [ebp-0x43]
  41a4ea:	sub    al,0xdc
  41a4ec:	rcr    esp,1
  41a4ee:	(bad)  
  41a4ef:	(bad)  
  41a4f0:	pop    ebp
  41a4f1:	dec    ebp
  41a4f2:	mov    cl,0xed
  41a4f4:	jg     0x41a487
  41a4f6:	pop    es
  41a4f7:	adc    ebp,DWORD PTR [esi+esi*4+0x1986f8fd]
  41a4fe:	adc    bl,dl
  41a500:	xor    BYTE PTR [ebx-0x74],bh
  41a503:	push   0xffffffcf
  41a505:	sub    al,0xf5
  41a507:	jne    0x41a550
  41a509:	jmp    0x8398:0xc3420f99
  41a510:	push   esp
  41a511:	push   ss
  41a512:	stos   BYTE PTR es:[edi],al
  41a513:	shr    DWORD PTR [eax+esi*2-0x25665c1d],1
  41a51a:	push   ds
  41a51b:	inc    eax
  41a51c:	inc    esp
  41a51d:	push   ebx
  41a51e:	in     eax,0xad
  41a520:	jp     0x41a55d
  41a522:	inc    esp
  41a523:	test   DWORD PTR ss:[ecx+0x67],edi
  41a527:	test   eax,0x87c4e6a7
  41a52c:	mov    ebx,DWORD PTR [esi+0x31]
  41a52f:	aam    0x66
  41a531:	sar    BYTE PTR [edi],0x38
  41a534:	or     bl,BYTE PTR [ebx+0x76938dfd]
  41a53a:	push   0xffffffa7
  41a53c:	and    esi,edi
  41a53e:	ins    DWORD PTR es:[edi],dx
  41a53f:	ror    DWORD PTR [ebp+0x40],0xd6
  41a543:	cmp    ah,0x3f
  41a546:	dec    eax
  41a547:	xchg   ebx,eax
  41a548:	int3   
  41a549:	popa   
  41a54a:	mov    ch,0x90
  41a54c:	sub    al,0xb4
  41a54e:	jg     0x41a5ca
  41a550:	test   bh,ch
  41a552:	int3   
  41a553:	iret   
  41a554:	mov    ss,WORD PTR [ecx+0x691f318a]
  41a55a:	sub    al,0x3
  41a55c:	cld    
  41a55d:	je     0x41a544
  41a55f:	cmp    al,0x35
  41a561:	sub    eax,0xbd39cc85
  41a566:	push   es
  41a567:	fmul   QWORD PTR [edi]
  41a569:	add    al,0xf9
  41a56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56c:	hlt    
  41a56d:	sbb    eax,0xac12c7b9
  41a572:	mov    ch,0xb9
  41a574:	in     al,0xfb
  41a576:	test   BYTE PTR [edi],ah
  41a578:	not    BYTE PTR [edi]
  41a57a:	or     BYTE PTR [esi-0xa],dh
  41a57d:	aam    0x38
  41a57f:	ds mov esp,0x5baededb
  41a585:	aam    0xb9
  41a587:	cdq    
  41a588:	cwde   
  41a589:	call   0x21f5:0xc01895ee
  41a590:	jbe    0x41a528
  41a592:	std    
  41a593:	sbb    eax,0xbeb6b1f4
  41a598:	iret   
  41a599:	xlat   BYTE PTR ds:[ebx]
  41a59a:	jg     0x41a5fa
  41a59c:	xor    al,0x39
  41a59e:	pop    ss
  41a59f:	push   0xbf46f168
  41a5a4:	pop    edi
  41a5a5:	add    DWORD PTR [ebp-0x15ff4a3b],ebp
  41a5ab:	je     0x41a600
  41a5ad:	bnd ret 
  41a5af:	xor    ah,BYTE PTR [edi+0x34]
  41a5b2:	add    BYTE PTR [esi-0x7a],dh
  41a5b5:	xchg   edx,eax
  41a5b6:	fisub  WORD PTR [ebx-0x7546ba5f]
  41a5bc:	jle    0x41a560
  41a5be:	fisttp DWORD PTR [ebx+0x24548bfc]
  41a5c4:	sbb    al,0xf
  41a5c6:	lods   al,BYTE PTR ds:[esi]
  41a5c7:	rol    DWORD PTR [edx],1
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	inc    esp
  41a623:	js     0x41a639
  41a625:	sahf   
  41a626:	jl     0x41a64b
  41a628:	sar    BYTE PTR [esi-0x41413dcb],0x0
  41a62f:	mov    ss,WORD PTR [eax]
  41a631:	mov    ecx,ecx
  41a633:	mov    ch,0xbb
  41a635:	popa   
  41a636:	outs   dx,BYTE PTR ds:[esi]
  41a637:	sar    BYTE PTR [ebp+0x4e],cl
  41a63a:	repz imul ebx,edi,0xaf3fe91b
  41a641:	data16 mov ah,0xd9
  41a644:	rol    esi,cl
  41a646:	je     0x41a62d
  41a648:	xor    al,BYTE PTR ds:0xa54b240a
  41a64e:	test   DWORD PTR [ebx-0x18],ecx
  41a651:	fmulp  st(1),st
  41a653:	popf   
  41a654:	mov    edi,ecx
  41a656:	jo     0x41a5f4
  41a658:	sub    eax,0x694d3f9c
  41a65d:	mov    eax,ds:0x460ae4af
  41a662:	mov    edi,DWORD PTR [ecx+0x788c042c]
  41a668:	hlt    
  41a669:	bound  ecx,QWORD PTR [ecx-0x63a50af2]
  41a66f:	rol    BYTE PTR [edi-0xa],1
  41a672:	push   edx
  41a673:	in     eax,0xd9
  41a675:	idiv   al
  41a677:	mov    al,0x33
  41a679:	cs adc cl,ah
  41a67c:	shl    BYTE PTR [ecx],cl
  41a67e:	pop    ss
  41a67f:	pop    eax
  41a680:	retf   
  41a681:	cmp    DWORD PTR [edx+0x1f8d6039],ebx
  41a687:	(bad)  
  41a688:	lods   eax,DWORD PTR ds:[esi]
  41a689:	bound  esp,QWORD PTR [ebx]
  41a68b:	in     eax,0xd7
  41a68d:	and    esi,DWORD PTR [ecx+0x2fa92841]
  41a693:	fild   DWORD PTR [eax+0x2b]
  41a696:	push   es
  41a697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a698:	jmp    0x3db4:0x3f72ea41
  41a69f:	pop    ebx
  41a6a0:	addr16 jo 0x41a6ad
  41a6a3:	jnp    0x41a626
  41a6a5:	dec    eax
  41a6a6:	loop   0x41a686
  41a6a8:	pushf  
  41a6a9:	out    dx,al
  41a6aa:	sub    eax,0xbef98cb9
  41a6af:	mov    bl,0x20
  41a6b1:	(bad)  
  41a6b2:	jnp    0x41a70b
  41a6b4:	inc    ebp
  41a6b5:	pop    ds
  41a6b6:	push   ebp
  41a6b7:	push   esi
  41a6b8:	or     al,BYTE PTR [edx]
  41a6ba:	pop    ebp
  41a6bb:	xor    BYTE PTR [esi+0x7b850d5],dl
  41a6c1:	pop    edx
  41a6c2:	cmp    edx,DWORD PTR [edx]
  41a6c4:	fidiv  WORD PTR [esi]
  41a6c6:	sbb    DWORD PTR [ecx+0xab8dc9e],eax
  41a6cc:	dec    ah
  41a6ce:	dec    ecx
  41a6cf:	or     BYTE PTR [ebp-0x439dff73],bl
  41a6d5:	add    dh,0x55
  41a6d8:	mov    al,0xf3
  41a6da:	jno    0x41a6e4
  41a6dc:	outs   dx,BYTE PTR ds:[esi]
  41a6dd:	mov    WORD PTR [bp+si-0x12],cs
  41a6e1:	stos   BYTE PTR es:[edi],al
  41a6e2:	xor    eax,0x721ec8db
  41a6e7:	sar    DWORD PTR [ecx],cl
  41a6e9:	xchg   ebp,eax
  41a6ea:	xchg   ebp,eax
  41a6eb:	lea    ebp,[ebx-0x6b]
  41a6ee:	and    al,0x48
  41a6f0:	das    
  41a6f1:	sub    BYTE PTR [edx+0x688ea345],ch
  41a6f7:	iret   
  41a6f8:	xor    ebp,DWORD PTR [eax]
  41a6fa:	push   edi
  41a6fb:	std    
  41a6fc:	icebp  
  41a6fd:	in     al,0x8f
  41a6ff:	ror    edi,0xe0
  41a702:	xor    ecx,ebp
  41a704:	or     eax,0x988adc52
  41a709:	cwde   
  41a70a:	push   edi
  41a70b:	shl    ebx,1
  41a70d:	loop   0x41a6f2
  41a70f:	(bad)  
  41a710:	repz pop es
  41a712:	fwait
  41a713:	add    dl,BYTE PTR [edx]
  41a715:	cdq    
  41a716:	or     al,0x49
  41a718:	inc    esp
  41a719:	or     ah,bl
  41a71b:	mov    al,0x6e
  41a71d:	and    ebp,DWORD PTR [eax]
  41a71f:	stos   DWORD PTR es:[edi],eax
  41a720:	sub    eax,DWORD PTR [eax]
  41a722:	les    eax,FWORD PTR [ecx+edi*8-0x5af1bfe4]
  41a729:	jmp    0x51009883
  41a72e:	xchg   ecx,eax
  41a72f:	push   0x3b51b7e7
  41a734:	inc    ecx
  41a735:	mov    eax,ds:0x919d8782
  41a73a:	loopne 0x41a721
  41a73c:	(bad)  
  41a73d:	stc    
  41a73e:	cmp    al,0x36
  41a740:	ins    BYTE PTR es:[edi],dx
  41a741:	cmp    DWORD PTR [edi],ebx
  41a743:	push   esp
  41a744:	in     al,0xa
  41a746:	xor    eax,edi
  41a748:	out    dx,eax
  41a749:	pop    es
  41a74a:	(bad)  
  41a74b:	or     DWORD PTR [ebx+0x3d5a6afb],esi
  41a751:	cmc    
  41a752:	pop    esi
  41a753:	xchg   edi,eax
  41a754:	gs sbb eax,0x7d1b0ea0
  41a75a:	pop    ecx
  41a75b:	retf   
  41a75c:	mov    ah,0x2
  41a75e:	sbb    al,0x95
  41a760:	cmc    
  41a761:	pop    edx
  41a762:	push   ds
  41a763:	add    eax,0x63bdee98
  41a768:	mov    al,ds:0xc49de65a
  41a76d:	addr16 cmc 
  41a76f:	lahf   
  41a770:	sub    eax,0xc87d15c3
  41a775:	jne    0x41a7d2
  41a777:	xchg   esp,eax
  41a778:	cld    
  41a779:	jmp    0x8b3a:0xeeece2a3
  41a780:	add    al,0x1c
  41a782:	or     eax,0xbd4cc830
  41a787:	sbb    BYTE PTR [ecx-0x4d],ch
  41a78a:	inc    ebx
  41a78b:	or     DWORD PTR [eax+eiz*8+0x56],0xc
  41a790:	dec    edx
  41a791:	stos   BYTE PTR es:[edi],al
  41a792:	inc    DWORD PTR [eax+0x1cd10e6c]
  41a798:	or     eax,0xe50c81c7
  41a79d:	mov    ecx,0x99ee3f7f
  41a7a3:	adc    DWORD PTR [ebx-0x5a1ae004],edx
  41a7a9:	mov    ch,BYTE PTR [esi+0x14421659]
  41a7af:	pop    ds
  41a7b0:	test   BYTE PTR ds:0x99c2f2da,ch
  41a7b6:	js     0x41a7e0
  41a7b8:	call   0xbc47:0xb4b58a9
  41a7bf:	mov    ebx,0xd8f5e06a
  41a7c4:	dec    ebp
  41a7c5:	xchg   esi,eax
  41a7c6:	mov    ds:0xe9db5e9b,eax
  41a7cb:	cmp    DWORD PTR [ebx+0x413b8015],ebx
  41a7d1:	push   ds
  41a7d2:	js     0x41a7b6
  41a7d4:	or     edi,DWORD PTR [ebp-0x27]
  41a7d7:	xor    ebp,DWORD PTR [ebx+0x2b425631]
  41a7dd:	(bad)  
  41a7de:	or     bh,BYTE PTR [esi]
  41a7e0:	pop    ebp
  41a7e1:	and    bl,0xd
  41a7e4:	sbb    eax,0xdf902894
  41a7e9:	jae    0x41a825
  41a7eb:	sbb    cl,cl
  41a7ed:	push   ebx
  41a7ee:	xor    BYTE PTR [edi+0x3e256c18],0xc5
  41a7f5:	shl    ecx,1
  41a7f7:	push   esp
  41a7f8:	pop    esp
  41a7f9:	jo     0x41a7ea
  41a7fb:	sahf   
  41a7fc:	xor    esp,ebp
  41a7fe:	ins    BYTE PTR es:[edi],dx
  41a7ff:	in     al,dx
  41a800:	lock xchg edi,eax
  41a802:	sti    
  41a803:	fst    DWORD PTR [ebx]
  41a805:	mov    dl,BYTE PTR [ecx]
  41a807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a808:	xor    al,0x27
  41a80a:	ret    0x89d
  41a80d:	fidiv  DWORD PTR [edi]
  41a80f:	add    al,0xc2
  41a811:	mov    edx,0xba7b5c37
  41a816:	mov    ebp,cs
  41a818:	repz inc eax
  41a81a:	pop    esi
  41a81b:	lahf   
  41a81c:	das    
  41a81d:	dec    eax
  41a81e:	or     ebp,DWORD PTR [ecx+esi*8-0x655ae648]
  41a825:	clc    
  41a826:	and    esp,DWORD PTR [edx-0x66c567d]
  41a82c:	jl     0x41a830
  41a82e:	xor    eax,0x557ec786
  41a833:	stos   BYTE PTR es:[edi],al
  41a834:	mov    al,ds:0x279581d
  41a839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83a:	(bad)  
  41a83b:	mov    ebx,0x9d50cc3b
  41a840:	cmp    eax,0xa8bd6a45
  41a845:	inc    esi
  41a846:	loopne 0x41a840
  41a848:	bound  eax,QWORD PTR [ecx+esi*8+0x7e]
  41a84c:	jmp    0x41a8b9
  41a84e:	add    BYTE PTR [edx],dl
  41a850:	(bad)  
  41a851:	sti    
  41a852:	rcl    dh,0xfa
  41a855:	cmc    
  41a856:	scas   eax,DWORD PTR es:[edi]
  41a857:	loop   0x41a8a9
  41a859:	lahf   
  41a85a:	cmp    eax,0x8d789129
  41a85f:	sar    esi,0x34
  41a862:	shl    eax,0x29
  41a865:	xchg   edi,eax
  41a866:	sbb    edx,edi
  41a868:	fadd   DWORD PTR [eax]
  41a86a:	mov    al,ds:0xc6162959
  41a86f:	inc    esp
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x4226f8
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x71d15a28
  41a9ae:	mov    ss,WORD PTR [eax-0x3fd60c70]
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	dec    eax
  41a9ba:	cmp    DWORD PTR [eax],eax
  41a9bc:	ret    0x3561
  41a9bf:	cmp    esp,edi
  41a9c1:	outs   dx,BYTE PTR ds:[esi]
  41a9c2:	out    0xae,eax
  41a9c4:	jbe    0x41aa45
  41a9c6:	ret    
  41a9c7:	push   edx
  41a9c8:	xchg   esi,eax
  41a9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ca:	call   0x326c6637
  41a9cf:	cld    
  41a9d0:	push   cs
  41a9d1:	and    dl,BYTE PTR [esi]
  41a9d3:	and    al,0x7b
  41a9d5:	sub    DWORD PTR [esi+0x5c76d2dd],esp
  41a9db:	loop   0x41a9aa
  41a9dd:	out    0x7a,al
  41a9df:	je     0x41a9fa
  41a9e1:	pop    eax
  41a9e2:	sub    DWORD PTR fs:[eax-0xf],eax
  41a9e6:	pop    edi
  41a9e7:	shr    BYTE PTR [ebx-0x7b],1
  41a9ea:	popf   
  41a9eb:	sti    
  41a9ec:	dec    edx
  41a9ed:	shl    BYTE PTR [edx],0xa8
  41a9f0:	dec    BYTE PTR [esi+0x46eea27c]
  41a9f6:	inc    edi
  41a9f7:	stc    
  41a9f8:	add    al,0xa2
  41a9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fb:	stc    
  41a9fc:	sbb    BYTE PTR [edx-0xe],cl
  41a9ff:	iret   
  41aa00:	sbb    eax,0x85d2c09a
  41aa05:	or     eax,0x63848859
  41aa0a:	lea    ecx,[esi-0x2b4120ad]
  41aa10:	ins    BYTE PTR es:[edi],dx
  41aa11:	fs jmp 0x41a9f8
  41aa14:	hlt    
  41aa15:	xchg   edi,eax
  41aa16:	xchg   edi,eax
  41aa17:	sbb    eax,0x60126af1
  41aa1c:	in     eax,0xec
  41aa1e:	jecxz  0x41aa4d
  41aa20:	in     al,0x69
  41aa22:	sub    edx,DWORD PTR [ebp-0x2af5ce2a]
  41aa28:	push   eax
  41aa29:	inc    ecx
  41aa2a:	cmp    DWORD PTR [ecx+0x2cb36db7],eax
  41aa30:	push   0xc
  41aa32:	xchg   ebx,eax
  41aa33:	adc    BYTE PTR [ecx-0x10],ch
  41aa36:	pop    eax
  41aa37:	(bad)  
  41aa38:	addr16 call 0xc74389d8
  41aa3e:	stos   BYTE PTR es:[edi],al
  41aa3f:	(bad)  
  41aa40:	fistp  QWORD PTR [ebp+0x62]
  41aa43:	adc    ch,BYTE PTR [edx]
  41aa45:	rcr    DWORD PTR [ebx+ecx*1+0x310e8e38],0x47
  41aa4d:	and    ch,BYTE PTR [ebx+ebx*2+0x1c2ed400]
  41aa54:	jno    0x41aa3d
  41aa56:	imul   edi,DWORD PTR [esi-0x27],0x128b8a80
  41aa5d:	mov    ch,0xb2
  41aa5f:	pop    edx
  41aa60:	out    0xc6,al
  41aa62:	mov    dh,0x7d
  41aa64:	pop    ds
  41aa65:	hlt    
  41aa66:	adc    eax,0xd4bd4ae3
  41aa6b:	adc    BYTE PTR [ebp+ebx*8-0x6fb959b1],ah
  41aa72:	jle    0x41aa27
  41aa74:	mov    ebx,0xd502f44e
  41aa79:	fnstsw WORD PTR [edx+ebp*4]
  41aa7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa7d:	daa    
  41aa7e:	in     eax,0xe6
  41aa80:	outs   dx,DWORD PTR ds:[esi]
  41aa81:	stos   BYTE PTR es:[edi],al
  41aa82:	fnsave [edx+edx*8+0x40]
  41aa86:	push   ebx
  41aa87:	adc    ecx,DWORD PTR [eax]
  41aa89:	loop   0x41aa86
  41aa8b:	pop    ecx
  41aa8c:	out    dx,eax
  41aa8d:	or     edi,DWORD PTR [ecx]
  41aa8f:	dec    esp
  41aa90:	fs fsubr st,st(7)
  41aa93:	push   ebp
  41aa94:	ins    BYTE PTR es:[edi],dx
  41aa95:	stos   BYTE PTR es:[edi],al
  41aa96:	jbe    0x41ab0a
  41aa98:	(bad)  
  41aa9a:	leave  
  41aa9b:	xor    al,bl
  41aa9d:	push   cs
  41aa9e:	sub    DWORD PTR [eax+ebx*1+0x58],ebx
  41aaa2:	xlat   BYTE PTR ds:[ebx]
  41aaa3:	mov    bl,0x22
  41aaa5:	xchg   edi,eax
  41aaa6:	push   ebx
  41aaa7:	mov    ds:0xb61053da,eax
  41aaac:	sub    BYTE PTR [eax+0x4a],ch
  41aaaf:	fisubr WORD PTR [esi+0x43fc2a0c]
  41aab5:	push   ss
  41aab6:	stos   BYTE PTR es:[edi],al
  41aab7:	out    dx,al
  41aab8:	ja     0x41aad0
  41aaba:	mov    ebp,0x6b0bb06f
  41aabf:	mov    esi,0x4ef36097
  41aac4:	push   ebx
  41aac5:	push   esi
  41aac6:	jmp    0x50c3:0x63b859b9
  41aacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aace:	adc    BYTE PTR [edi+0x79],dl
  41aad1:	xor    DWORD PTR [edx-0x7f],esp
  41aad4:	in     eax,dx
  41aad5:	lods   al,BYTE PTR ds:[esi]
  41aad6:	fld    QWORD PTR [esi]
  41aad8:	ja     0x41aae3
  41aada:	mov    ebx,0x68f152c4
  41aadf:	shl    DWORD PTR [edx+0x2],0x89
  41aae3:	faddp  st(7),st
  41aae5:	sbb    al,0x10
  41aae7:	rcl    ecx,cl
  41aae9:	inc    ecx
  41aaea:	xchg   ebx,eax
  41aaeb:	jle    0x41ab1e
  41aaed:	inc    edx
  41aaee:	lods   al,BYTE PTR ds:[esi]
  41aaef:	xchg   esp,eax
  41aaf0:	sub    BYTE PTR [edi+0x322c0eca],0xf9
  41aaf7:	xchg   ebx,eax
  41aaf8:	mov    dl,0x94
  41aafa:	push   edi
  41aafb:	bswap  ebx
  41aafd:	add    ebp,DWORD PTR [edx-0x1f590a29]
  41ab03:	pop    ss
  41ab04:	or     esi,DWORD PTR [ebx]
  41ab06:	(bad)  
  41ab07:	fisttp QWORD PTR [ecx+0x7c]
  41ab0a:	mov    bl,0xb8
  41ab0c:	mov    cl,BYTE PTR [ecx-0x2adb371b]
  41ab12:	sub    edx,edi
  41ab14:	mov    ecx,0x71ee6784
  41ab19:	icebp  
  41ab1a:	mov    bl,0xdd
  41ab1c:	mov    edx,DWORD PTR [ebx]
  41ab1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab1f:	mov    dl,BYTE PTR [ebp-0x5ed4237d]
  41ab25:	nop
  41ab26:	fs jo  0x41ab3b
  41ab29:	sub    dh,dl
  41ab2b:	cld    
  41ab2c:	push   esp
  41ab2d:	mov    cl,0x6b
  41ab2f:	outs   dx,DWORD PTR ds:[esi]
  41ab30:	add    al,ch
  41ab32:	sub    DWORD PTR [edx-0x3b249379],edx
  41ab38:	mov    esp,0xa59a0726
  41ab3d:	(bad)  
  41ab3e:	adc    al,0x6a
  41ab40:	bound  ebx,QWORD PTR ds:[edx-0x320e7e23]
  41ab47:	sahf   
  41ab48:	xor    ah,BYTE PTR ss:[ebp-0x37b493]
  41ab4f:	(bad)  
  41ab50:	sbb    BYTE PTR [eax-0x6fe1572f],ah
  41ab56:	xor    esp,DWORD PTR [edi-0x67]
  41ab59:	xchg   esp,eax
  41ab5a:	and    BYTE PTR [esi-0x1efce2ca],al
  41ab60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab61:	scas   eax,DWORD PTR es:[edi]
  41ab62:	pop    esi
  41ab63:	pop    esi
  41ab64:	dec    esi
  41ab65:	out    dx,al
  41ab66:	outs   dx,BYTE PTR ds:[esi]
  41ab67:	loopne 0x41ab80
  41ab69:	sbb    cl,bl
  41ab6b:	pop    esp
  41ab6c:	lods   al,BYTE PTR ds:[esi]
  41ab6d:	push   ss
  41ab6e:	lea    edx,[ebp-0x95a8d3d]
  41ab74:	imul   edx,DWORD PTR [ebx+ebp*1],0x7a
  41ab78:	mov    bh,0x7e
  41ab7a:	inc    ecx
  41ab7b:	bound  ebp,QWORD PTR [edi+0x33]
  41ab7e:	mov    DWORD PTR [ecx+0x4a],ebp
  41ab81:	psubsb mm3,QWORD PTR [esi-0x1a]
  41ab85:	inc    edx
  41ab86:	ds out dx,al
  41ab88:	xchg   edx,eax
  41ab89:	in     al,dx
  41ab8a:	jp     0x41abae
  41ab8c:	and    eax,0x5c2f241e
  41ab91:	and    al,BYTE PTR [edi-0x4a]
  41ab94:	and    esi,DWORD PTR [edi+ecx*2+0x47f09cc6]
  41ab9b:	ror    BYTE PTR [ebp+0x4f41e51],cl
  41aba1:	and    BYTE PTR [eax+0xa],0x20
  41aba5:	adc    dh,BYTE PTR [ebx]
  41aba7:	sub    al,0x30
  41aba9:	test   DWORD PTR [esi+0x7c],ebp
  41abac:	xchg   ebp,eax
  41abad:	add    al,0xbd
  41abaf:	test   BYTE PTR [edi],al
  41abb1:	fld    DWORD PTR [ebx-0x59515594]
  41abb7:	inc    esi
  41abb8:	lahf   
  41abb9:	repz leave 
  41abbb:	push   cs
  41abbc:	or     al,0x4a
  41abbe:	xor    eax,0x17f5ec14
  41abc3:	outs   dx,DWORD PTR ds:[esi]
  41abc4:	add    ebx,DWORD PTR [esi+0xcb9da12]
  41abca:	(bad)
  41abce:	add    dl,BYTE PTR [edx-0xd4dc197]
  41abd4:	push   esp
  41abd5:	dec    ecx
  41abd6:	ds push es
  41abd8:	pop    ebx
  41abd9:	dec    ecx
  41abda:	es pop es
  41abdc:	mov    edx,0xf0aad783
  41abe1:	xchg   esp,eax
  41abe2:	mov    ebp,0x4df6be65
  41abe7:	jmp    DWORD PTR [esi-0x4]
  41abea:	loopne 0x41ac23
  41abec:	fcomip st,st(1)
  41abee:	mov    WORD PTR [edi],ds
  41abf0:	in     al,dx
  41abf1:	jg     0x41abe2
  41abf3:	arpl   WORD PTR [edi],di
  41abf5:	stc    
  41abf6:	sbb    eax,DWORD PTR [ebx+0x4]
  41abf9:	and    eax,0xffffc244
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	mov    bh,0xff
  41ac1a:	sbb    al,0xd1
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0xdb32f16d
  41ac28:	adc    edi,DWORD PTR [eax*1-0x5b3be7d3]
  41ac2f:	jle    0x41ac59
  41ac31:	mov    al,0xc7
  41ac33:	sbb    edx,DWORD PTR [eax-0x7553ef34]
  41ac39:	stos   BYTE PTR es:[edi],al
  41ac3a:	inc    edx
  41ac3b:	iret   
  41ac3c:	push   edx
  41ac3d:	arpl   WORD PTR [edx],sp
  41ac3f:	lods   eax,DWORD PTR ds:[esi]
  41ac40:	adc    BYTE PTR [di+0x32],al
  41ac44:	inc    ecx
  41ac45:	cmp    eax,0xd37c818c
  41ac4a:	xor    esp,DWORD PTR [eax]
  41ac4c:	bound  ebx,QWORD PTR [esi+0x5bd77308]
  41ac52:	pop    edx
  41ac53:	xor    BYTE PTR es:[ebx+ebx*1],ah
  41ac57:	pmulhuw mm7,QWORD PTR [edi-0x42cbc69]
  41ac5e:	or     eax,0xef025179
  41ac63:	push   esi
  41ac64:	add    eax,0xa6ec81a5
  41ac69:	jne    0x41ac7b
  41ac6b:	xchg   esp,eax
  41ac6c:	sbb    BYTE PTR ds:0xd300756e,bh
  41ac72:	adc    eax,0xe1e9c5c9
  41ac77:	lahf   
  41ac78:	and    eax,0xb5f7c873
  41ac7d:	mov    DWORD PTR [ebp-0x56],edx
  41ac80:	ss jne 0x41ac95
  41ac83:	imul   ebp,DWORD PTR [edx-0x6f2cafbb],0x73
  41ac8a:	adc    BYTE PTR [esi+0x15bbb00],0x3f
  41ac91:	cmp    al,0x5c
  41ac93:	mov    ch,BYTE PTR [esi+0x3]
  41ac96:	icebp  
  41ac97:	out    dx,eax
  41ac98:	pushf  
  41ac99:	mov    dh,cl
  41ac9b:	outs   dx,BYTE PTR ds:[esi]
  41ac9c:	aad    0xd6
  41ac9e:	mov    ebx,0x1aa9d469
  41aca3:	xchg   ecx,eax
  41aca4:	dec    esi
  41aca5:	or     bl,BYTE PTR [esi+0x68641e57]
  41acab:	pop    es
  41acac:	push   esp
  41acad:	lahf   
  41acae:	sbb    BYTE PTR [ebp+0x3],dh
  41acb1:	adc    eax,0xda30a360
  41acb6:	inc    esi
  41acb7:	inc    esi
  41acb8:	push   0xffffffcd
  41acba:	pop    eax
  41acbb:	and    eax,0x963c1b4b
  41acc0:	addr16 dec ebp
  41acc2:	and    esp,DWORD PTR [esi-0x33]
  41acc5:	clc    
  41acc6:	push   0x2bbae952
  41accb:	dec    ecx
  41accc:	aaa    
  41accd:	add    dl,BYTE PTR [edi]
  41accf:	lods   al,BYTE PTR ds:[esi]
  41acd0:	lahf   
  41acd1:	outs   dx,BYTE PTR ds:[esi]
  41acd2:	inc    edi
  41acd3:	cwde   
  41acd4:	adc    edi,DWORD PTR [eax+edi*1]
  41acd7:	icebp  
  41acd8:	xor    eax,0x73205cef
  41acdd:	pop    edi
  41acde:	(bad)  
  41ace0:	aad    0x60
  41ace2:	loop   0x41ac73
  41ace4:	imul   eax,DWORD PTR [ecx+0x2aff8a83],0x20781863
  41acee:	cwde   
  41acef:	out    dx,al
  41acf0:	jmp    0x41ac7d
  41acf2:	fist   WORD PTR [esp+edx*4-0x55]
  41acf6:	shl    DWORD PTR [ebp+0x51],0x22
  41acfa:	adc    eax,0x820b5c42
  41acff:	arpl   WORD PTR [esi+eax*2-0x13],si
  41ad03:	xchg   esi,eax
  41ad04:	and    DWORD PTR [ecx-0x70],0xb90369dd
  41ad0b:	out    dx,al
  41ad0c:	and    ebx,DWORD PTR [ecx]
  41ad0e:	adc    BYTE PTR [edi+0x428459c8],ah
  41ad14:	mov    bl,0x1a
  41ad16:	xor    eax,0xa1a29fef
  41ad1b:	or     bl,BYTE PTR [eax+ebp*1-0x108e686e]
  41ad22:	xchg   edx,eax
  41ad23:	into   
  41ad24:	cmc    
  41ad25:	jo     0x41ad4c
  41ad27:	addr16 ret 
  41ad29:	outs   dx,DWORD PTR ds:[esi]
  41ad2a:	or     eax,0x7531ba0b
  41ad2f:	fimul  DWORD PTR [esi+ebx*8]
  41ad32:	repz xor edx,DWORD PTR [esi-0xf]
  41ad36:	mov    WORD PTR [edi-0x16],es
  41ad39:	xchg   ecx,eax
  41ad3a:	iret   
  41ad3b:	ror    BYTE PTR [edx-0x7692d946],1
  41ad41:	sti    
  41ad42:	mov    edx,0x67cf2095
  41ad47:	inc    esi
  41ad48:	push   cs
  41ad49:	(bad)  
  41ad4a:	cmp    dl,dh
  41ad4c:	nop
  41ad4d:	mov    ah,0x62
  41ad4f:	jmp    0x41ad8e
  41ad51:	jnp    0x41ad12
  41ad53:	sub    esp,eax
  41ad55:	sbb    al,0xba
  41ad57:	inc    eax
  41ad58:	mov    eax,ds:0x4ae19245
  41ad5d:	jg     0x41ad25
  41ad5f:	test   BYTE PTR [ebx+0x220ad8b8],dh
  41ad65:	(bad)  
  41ad66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad67:	fsubrp st(3),st
  41ad69:	adc    al,0xc5
  41ad6b:	mov    eax,ds:0xb8ec7f9d
  41ad70:	inc    esp
  41ad71:	lods   al,BYTE PTR ds:[esi]
  41ad72:	fcomp  DWORD PTR [ecx+0x6c]
  41ad75:	sbb    al,BYTE PTR [edi-0x1fa963ab]
  41ad7b:	call   0x8b86:0x73f584b0
  41ad82:	jle    0x41ad9c
  41ad84:	xchg   edx,eax
  41ad85:	mov    eax,0xfe51f285
  41ad8a:	or     BYTE PTR [esi+ebx*4+0x1037fe3e],ah
  41ad91:	std    
  41ad92:	inc    eax
  41ad93:	lods   al,BYTE PTR ds:[esi]
  41ad94:	or     eax,0x260cb0f8
  41ad99:	lahf   
  41ad9a:	inc    ecx
  41ad9b:	add    ebp,DWORD PTR [ecx+0x7d82b954]
  41ada1:	dec    ecx
  41ada2:	cmp    BYTE PTR [edx],bl
  41ada4:	jae    0x41adc9
  41ada6:	add    DWORD PTR ds:0x3b678a1b,ebx
  41adac:	xchg   BYTE PTR [eax-0x497561fd],cl
  41adb2:	in     eax,dx
  41adb3:	pop    edi
  41adb4:	push   ebx
  41adb5:	mov    ss,ebx
  41adb7:	sub    ebx,0x6e
  41adba:	call   0xdf180c2f
  41adbf:	ror    DWORD PTR fs:[esi],0xf8
  41adc3:	pushf  
  41adc4:	adc    ebp,DWORD PTR [edx]
  41adc6:	sbb    BYTE PTR [edx],cl
  41adc8:	stos   BYTE PTR es:[edi],al
  41adc9:	out    dx,eax
  41adca:	adc    eax,0x72ded91
  41adcf:	aas    
  41add0:	xor    BYTE PTR [ebx+0x8],al
  41add3:	hlt    
  41add4:	push   es
  41add5:	xor    ebx,DWORD PTR [ecx+esi*4]
  41add8:	adc    al,0x2d
  41adda:	out    0xff,al
  41addc:	inc    ebp
  41addd:	jg     0x41adf7
  41addf:	stos   DWORD PTR es:[edi],eax
  41ade0:	inc    edx
  41ade1:	int3   
  41ade2:	sub    al,0x75
  41ade4:	scas   eax,DWORD PTR es:[edi]
  41ade5:	out    0xdc,al
  41ade7:	mov    ds:0xccf66881,eax
  41adec:	and    edi,ecx
  41adee:	xchg   DWORD PTR [ebx],ecx
  41adf0:	mov    al,0xd6
  41adf2:	pop    ebx
  41adf3:	xor    ah,ch
  41adf5:	pop    ecx
  41adf6:	push   cs
  41adf7:	xor    BYTE PTR [esi],al
  41adf9:	int    0xb2
  41adfb:	xor    BYTE PTR [ebx+ebx*4+0x2a1d58ed],cl
  41ae02:	ror    BYTE PTR [edi],0xce
  41ae05:	push   0xffffffa1
  41ae07:	ret    0x185d
  41ae0a:	iret   
  41ae0b:	xor    al,0x29
  41ae0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae0e:	xor    DWORD PTR [eax],esi
  41ae10:	xor    al,0xcc
  41ae12:	and    dl,BYTE PTR [esi-0x1662b81f]
  41ae18:	nop
  41ae19:	cmp    al,0x8b
  41ae1b:	pop    ds
  41ae1c:	cmp    al,0x16
  41ae1e:	push   ss
  41ae1f:	mov    ecx,0xd4ac4358
  41ae24:	shr    BYTE PTR [edx+esi*2],0x7b
  41ae28:	aaa    
  41ae29:	(bad)  
  41ae2a:	adc    BYTE PTR [edx+0x7f],ch
  41ae2d:	in     al,0x34
  41ae2f:	mov    ebx,0xfc049604
  41ae34:	int    0x7f
  41ae36:	test   BYTE PTR [esi-0x66],cl
  41ae39:	neg    DWORD PTR cs:[edx+0x570bd858]
  41ae40:	xor    al,0xe
  41ae42:	out    dx,eax
  41ae43:	in     eax,0x80
  41ae45:	jno    0x41adef
  41ae47:	rcl    ah,cl
  41ae49:	jge    0x41adfd
  41ae4b:	sub    ebx,DWORD PTR [ecx-0x14bda33f]
  41ae51:	aam    0x51
  41ae53:	ds push esp
  41ae55:	ror    DWORD PTR [ebp-0x67ef28f],1
  41ae5b:	dec    edi
  41ae5c:	bound  edi,QWORD PTR [edx-0x5c]
  41ae5f:	xor    esi,edi
  41ae61:	jmp    DWORD PTR [edx+0x59]
  41ae64:	sub    eax,0x2ae1
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	(bad)  
  41ae90:	rol    bh,cl
  41ae92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae93:	jecxz  0x41aec6
  41ae95:	sar    BYTE PTR [esi-0x41413dcb],0x30
  41ae9c:	sub    dl,ah
  41ae9e:	xchg   ebx,eax
  41ae9f:	fmul   DWORD PTR [edi-0x25d9488d]
  41aea5:	lds    ecx,FWORD PTR ds:0x4d78477f
  41aeab:	mov    ecx,DWORD PTR [edi]
  41aead:	retf   0x8722
  41aeb0:	inc    edx
  41aeb1:	rcl    DWORD PTR [esi+0x5df6c1f7],1
  41aeb7:	sbb    BYTE PTR [eax-0x56],0xb1
  41aebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebc:	mov    WORD PTR [ebp-0x6b],gs
  41aebf:	scas   al,BYTE PTR es:[edi]
  41aec0:	jge    0x41ae9f
  41aec2:	inc    edx
  41aec3:	adc    eax,0xcd0ba91a
  41aec8:	add    DWORD PTR [edx],ecx
  41aeca:	or     esp,0x3ffbb57e
  41aed0:	rol    edx,cl
  41aed2:	enter  0x293b,0x20
  41aed6:	pop    esp
  41aed7:	jl     0x41af0d
  41aed9:	je     0x41af4c
  41aedb:	inc    edi
  41aedc:	iret   
  41aedd:	pushf  
  41aede:	mov    ebp,DWORD PTR [edx-0x3]
  41aee1:	jns    0x41af37
  41aee3:	mov    eax,ds:0x877b5a6f
  41aee8:	jns    0x41ae99
  41aeea:	sbb    bh,BYTE PTR [edi+0x43]
  41aeed:	(bad)  
  41aeef:	leave  
  41aef0:	fisubr DWORD PTR [edx+0x291c7d11]
  41aef6:	sahf   
  41aef7:	out    0xc4,eax
  41aef9:	pop    edi
  41aefa:	sub    al,0xad
  41aefc:	data16 cmp al,0x3d
  41aeff:	add    al,0xe3
  41af01:	ret    
  41af02:	push   0xffffffd0
  41af04:	outs   dx,DWORD PTR ds:[esi]
  41af05:	push   edx
  41af06:	pushf  
  41af07:	xchg   DWORD PTR [ecx],esp
  41af09:	cdq    
  41af0a:	shr    BYTE PTR [ecx-0x46],1
  41af0d:	xchg   BYTE PTR [ecx+0x31],cl
  41af10:	pop    ebp
  41af11:	cli    
  41af12:	jo     0x41aee5
  41af14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af15:	push   ecx
  41af16:	inc    edx
  41af17:	ins    DWORD PTR es:[edi],dx
  41af18:	xlat   BYTE PTR ds:[ebx]
  41af19:	jmp    0x41aef3
  41af1b:	xor    eax,DWORD PTR [ecx+eax*2+0x264f699d]
  41af22:	in     eax,0xc6
  41af24:	jae    0x41aed1
  41af26:	or     al,0x7a
  41af28:	jnp    0x41af92
  41af2a:	sub    eax,0x28984abe
  41af2f:	dec    ebx
  41af30:	int3   
  41af31:	sub    edx,edi
  41af33:	lods   eax,DWORD PTR ds:[esi]
  41af34:	(bad)  
  41af35:	sti    
  41af36:	xlat   BYTE PTR ds:[ebx]
  41af37:	cmovns esi,DWORD PTR [ecx-0x37]
  41af3b:	mov    esp,0x624dec9a
  41af40:	pop    edx
  41af41:	cmp    bh,BYTE PTR [eax]
  41af43:	cmp    al,0x46
  41af45:	imul   edx,DWORD PTR [ebp+0x1d],0x54
  41af49:	imul   esp,esi,0xb011a17
  41af4f:	xchg   DWORD PTR [ecx],eax
  41af51:	push   edi
  41af52:	mov    eax,DWORD PTR [edx+0x3c]
  41af55:	dec    esi
  41af56:	dec    ecx
  41af57:	ret    0xa3f7
  41af5a:	into   
  41af5b:	add    ecx,DWORD PTR [edi-0x46]
  41af5e:	sahf   
  41af5f:	dec    ebx
  41af60:	addr16 cwde 
  41af62:	mov    al,ds:0x65ca9936
  41af67:	fist   WORD PTR [esi+0x6fdb5a84]
  41af6d:	jg     0x41afa6
  41af6f:	scas   al,BYTE PTR es:[edi]
  41af70:	dec    ecx
  41af71:	cmp    al,0xb9
  41af73:	imul   esi,DWORD PTR [ebx-0xaf3f544],0x5ef6b691
  41af7d:	ficom  DWORD PTR [edx+0xb]
  41af80:	ret    
  41af81:	dec    ecx
  41af82:	dec    ecx
  41af83:	cmp    al,0xee
  41af85:	das    
  41af86:	ja     0x41afe7
  41af88:	and    BYTE PTR [edi+edx*2],dl
  41af8b:	push   ecx
  41af8c:	pause  
  41af8e:	pop    ebp
  41af8f:	int    0x1b
  41af91:	repnz sub DWORD PTR [esi-0xd],esp
  41af95:	xchg   esp,eax
  41af96:	(bad)  
  41af97:	cld    
  41af98:	dec    eax
  41af99:	mov    eax,0x7e317bb3
  41af9e:	retf   
  41af9f:	cmp    cl,BYTE PTR [ebp-0x7dc3ffe7]
  41afa5:	mov    ch,0xf3
  41afa7:	shl    DWORD PTR [ebp+0x25470a8b],0x1b
  41afae:	dec    edi
  41afaf:	ss pop edi
  41afb1:	mov    ds:0xfc0edf6a,eax
  41afb6:	xor    ah,BYTE PTR [ebp+eiz*2+0x42baeea5]
  41afbd:	push   0xb0b6cffe
  41afc2:	xchg   DWORD PTR [ebx-0x38],esp
  41afc5:	(bad)  
  41afc6:	neg    DWORD PTR [ecx-0x1]
  41afc9:	cmp    eax,0x9d7fc054
  41afce:	(bad)  
  41afcf:	test   eax,0xb27260df
  41afd4:	ficom  WORD PTR [edi+0x11]
  41afd7:	outs   dx,BYTE PTR ds:[esi]
  41afd8:	ror    edi,0x9f
  41afdb:	cli    
  41afdc:	sbb    BYTE PTR [eax],ah
  41afde:	mov    cl,0x7e
  41afe0:	mov    bh,0xb3
  41afe2:	cmp    al,BYTE PTR [ecx+eax*1+0x64f600d6]
  41afe9:	ins    BYTE PTR es:[edi],dx
  41afea:	cmp    dl,BYTE PTR [ebp-0x29]
  41afed:	rol    DWORD PTR [eax+0x76426f57],cl
  41aff3:	adc    bl,BYTE PTR [esi]
  41aff5:	stos   BYTE PTR es:[edi],al
  41aff6:	jae    0x41afba
  41aff8:	inc    ecx
  41aff9:	sar    BYTE PTR [eax],1
  41affb:	pusha  
  41affc:	add    edx,DWORD PTR [ebp-0xb]
  41afff:	mov    bl,0x5d
  41b001:	pop    eax
  41b002:	and    ch,BYTE PTR [eax]
  41b004:	push   ecx
  41b005:	sub    esp,DWORD PTR [edi]
  41b007:	lds    ebx,FWORD PTR [edx]
  41b009:	pop    edi
  41b00a:	aaa    
  41b00b:	imul   ebx,esp,0x7a
  41b00e:	inc    ch
  41b010:	mov    ecx,0x19e2d399
  41b015:	mov    ah,0x6c
  41b017:	sbb    al,0x39
  41b019:	jmp    0x88939f96
  41b01e:	fcomp  QWORD PTR [ecx+eiz*8+0x32115c60]
  41b025:	ret    0x4b73
  41b028:	xor    eax,0x97b1f8fe
  41b02d:	xor    ebx,DWORD PTR [esi+edi*1+0x10614fba]
  41b034:	inc    eax
  41b035:	adc    al,BYTE PTR [ebp-0x5a]
  41b038:	lahf   
  41b039:	sar    dh,cl
  41b03b:	xor    DWORD PTR ds:0xeabbaa8,0x40fc9ac8
  41b045:	loope  0x41b021
  41b047:	or     eax,0xc821c64f
  41b04c:	outs   dx,DWORD PTR ds:[esi]
  41b04d:	dec    edx
  41b04e:	addr16 inc ebx
  41b050:	inc    ebx
  41b051:	test   al,0xf4
  41b053:	imul   BYTE PTR [edi+0x54eadc8a]
  41b059:	adc    BYTE PTR [ecx-0x24724dc2],dl
  41b05f:	mov    eax,0x692afc2c
  41b064:	jns    0x41b0c4
  41b066:	mov    cl,0x7c
  41b068:	repnz mov edi,DWORD PTR [eax]
  41b06b:	bound  edx,QWORD PTR [esi-0x41]
  41b06e:	push   edx
  41b06f:	cmp    dh,BYTE PTR [edx-0x37bff7a6]
  41b075:	dec    esp
  41b076:	jmp    0x43016b3f
  41b07b:	mov    ds:0xaf160551,eax
  41b080:	popf   
  41b081:	mov    cl,BYTE PTR [ebx]
  41b083:	pop    ebp
  41b084:	or     BYTE PTR [eax-0x36722053],al
  41b08a:	sti    
  41b08b:	mov    esi,0xfdb08658
  41b090:	fsubrp st(4),st
  41b092:	pop    ebx
  41b093:	inc    edx
  41b094:	leave  
  41b095:	or     al,0xd8
  41b097:	push   ebx
  41b098:	sub    al,0xbc
  41b09a:	mov    cl,0xab
  41b09c:	add    BYTE PTR [esp+eax*4-0x1280c4ce],ch
  41b0a3:	mov    eax,ds:0xcd8e842b
  41b0a8:	imul   ecx,DWORD PTR [edx*4-0x55cb6b1c],0x8165a890
  41b0b3:	and    eax,0x25cab72e
  41b0b8:	lock scas al,BYTE PTR es:[edi]
  41b0ba:	outs   dx,BYTE PTR ds:[esi]
  41b0bb:	fdivr  DWORD PTR [eax]
  41b0bd:	sbb    al,0x20
  41b0bf:	rol    eax,0xe2
  41b0c2:	fidiv  WORD PTR [edi+edi*8]
  41b0c5:	ins    DWORD PTR es:[edi],dx
  41b0c6:	or     ecx,DWORD PTR [ebp-0x1ebe202]
  41b0cc:	(bad)  [edi]
  41b0ce:	xchg   edi,eax
  41b0cf:	dec    esp
  41b0d0:	rcl    DWORD PTR [eax],cl
  41b0d2:	push   ds
  41b0d3:	dec    ebp
  41b0d4:	fldcw  WORD PTR [ecx+ebx*1-0x618f84bd]
  41b0db:	mov    ecx,DWORD PTR [esp+0x30]
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	sub    eax,0x5c9e1e3a
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x468b57be
  41b14a:	mov    ecx,DWORD PTR [ecx-0x5d76871e]
  41b150:	imul   cl
  41b152:	aas    
  41b153:	out    0x4f,al
  41b155:	inc    ecx
  41b156:	jne    0x41b0eb
  41b158:	sub    al,0xe6
  41b15a:	jmp    DWORD PTR [ebx]
  41b15c:	das    
  41b15d:	mov    ch,0xe1
  41b15f:	(bad)  
  41b161:	(bad)  
  41b162:	mov    ch,0x3c
  41b164:	push   ss
  41b165:	pop    eax
  41b166:	ins    DWORD PTR es:[edi],dx
  41b167:	repnz xor al,0x28
  41b16a:	or     eax,0xef33342
  41b16f:	imul   eax,DWORD PTR [eax],0x30
  41b172:	imul   edi,DWORD PTR [ebp+ecx*1-0x296e6d05],0x475bbfd8
  41b17d:	push   0x39
  41b17f:	call   0xf69a79fd
  41b184:	adc    ebp,DWORD PTR [edi]
  41b186:	iret   
  41b187:	jb     0x41b12b
  41b189:	fs ins BYTE PTR es:[edi],dx
  41b18b:	mov    DWORD PTR [ecx+0x46],edi
  41b18e:	jne    0x41b1a1
  41b190:	scas   al,BYTE PTR es:[edi]
  41b191:	fbstp  TBYTE PTR [ecx+0x5e]
  41b194:	fadd   QWORD PTR ds:[ebx+ebp*2+0x77]
  41b199:	adc    BYTE PTR [edi],dh
  41b19b:	leave  
  41b19c:	mov    ch,0xa3
  41b19e:	sbb    dl,ch
  41b1a0:	ret    
  41b1a1:	pop    ecx
  41b1a2:	xchg   ebx,eax
  41b1a3:	xchg   ebx,eax
  41b1a4:	mov    ebx,0xbc087346
  41b1a9:	mov    ebp,0xe487d87
  41b1ae:	mov    al,0x80
  41b1b0:	push   ss
  41b1b1:	or     esi,ebp
  41b1b3:	test   DWORD PTR [ecx],0x35dd21ef
  41b1b9:	in     eax,0xa7
  41b1bb:	in     al,dx
  41b1bc:	lds    ebp,FWORD PTR [ebp-0x3cd8419a]
  41b1c2:	cmp    eax,DWORD PTR [edi]
  41b1c4:	jbe    0x41b1f7
  41b1c6:	stc    
  41b1c7:	sbb    DWORD PTR [ebx+eiz*4-0x61bd6c],0xfffffff3
  41b1cf:	inc    ecx
  41b1d0:	test   eax,0xa5c0d1c7
  41b1d5:	leave  
  41b1d6:	loope  0x41b17c
  41b1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d9:	add    al,BYTE PTR [ebp-0x20740d0c]
  41b1df:	push   0xffffff81
  41b1e1:	inc    edi
  41b1e2:	mov    DWORD PTR [esi+0x50d0fbd0],ebx
  41b1e8:	pop    es
  41b1e9:	xor    eax,0x8798d7cb
  41b1ee:	clc    
  41b1ef:	ficomp DWORD PTR [edx]
  41b1f1:	mov    ds:0x30a92945,al
  41b1f6:	sub    DWORD PTR [edx+ebp*2-0x16],esp
  41b1fa:	push   esp
  41b1fb:	or     edx,DWORD PTR [ecx+0x185c3846]
  41b201:	pop    es
  41b202:	mov    ecx,0xec94f010
  41b207:	call   0xc424:0x2ce38346
  41b20e:	js     0x41b193
  41b210:	ins    DWORD PTR es:[edi],dx
  41b211:	cmp    esi,ebp
  41b213:	pusha  
  41b214:	pop    eax
  41b215:	scas   eax,DWORD PTR es:[edi]
  41b216:	fmul   st,st(3)
  41b218:	lahf   
  41b219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21a:	fwait
  41b21b:	dec    ecx
  41b21c:	mov    eax,ds:0x792dd368
  41b221:	ins    BYTE PTR es:[edi],dx
  41b222:	stos   DWORD PTR es:[edi],eax
  41b223:	je     0x41b1d2
  41b225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b226:	popw   es
  41b228:	adc    al,BYTE PTR [eax-0x2ac7bce6]
  41b22e:	xor    DWORD PTR [ecx],edx
  41b230:	(bad)  
  41b231:	adc    edx,DWORD PTR ds:0xeccaa4b2
  41b237:	cmp    BYTE PTR [esi],al
  41b239:	inc    BYTE PTR ds:0x796eed87
  41b23f:	fst    st(0)
  41b241:	or     dl,0xa3
  41b244:	aam    0x2b
  41b246:	dec    edi
  41b247:	xchg   ch,bl
  41b249:	in     eax,dx
  41b24a:	retf   
  41b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b24c:	xchg   ecx,eax
  41b24d:	fisttp QWORD PTR [edi-0x3bb7fa77]
  41b253:	(bad)  
  41b254:	fwait
  41b255:	scas   eax,DWORD PTR es:[edi]
  41b256:	and    al,cl
  41b258:	cmc    
  41b259:	mov    BYTE PTR [ecx-0x47],ch
  41b25c:	lahf   
  41b25d:	add    DWORD PTR [edi-0x57ae1743],ebx
  41b263:	xor    dh,BYTE PTR [edi+0x67]
  41b266:	in     al,dx
  41b267:	pushf  
  41b268:	push   ecx
  41b269:	or     DWORD PTR [ecx+0x1e5d99a1],esi
  41b26f:	cmp    al,0x3c
  41b271:	shl    BYTE PTR [esi],cl
  41b273:	mov    dh,0x76
  41b275:	cdq    
  41b276:	adc    ebx,DWORD PTR [ebx]
  41b278:	or     bl,BYTE PTR [edx+esi*8-0x57]
  41b27c:	stos   DWORD PTR es:[edi],eax
  41b27d:	mov    ss,ebp
  41b27f:	add    DWORD PTR [edi+0x12],ebx
  41b282:	mov    edi,0x3d40ac6a
  41b287:	sti    
  41b288:	and    esi,DWORD PTR [ecx+0x2aec6b41]
  41b28e:	addr16 push ss
  41b290:	scas   al,BYTE PTR es:[edi]
  41b291:	cs call 0xcc7654a6
  41b297:	fcomp  QWORD PTR [esi-0x4f]
  41b29a:	fwait
  41b29b:	adc    al,BYTE PTR [ebx]
  41b29d:	mov    DWORD PTR [edx+0x6b],edi
  41b2a0:	(bad)  
  41b2a1:	push   esi
  41b2a2:	dec    edx
  41b2a3:	mov    dl,0xe3
  41b2a5:	outs   dx,DWORD PTR ds:[esi]
  41b2a6:	add    dx,bp
  41b2a9:	sti    
  41b2aa:	sbb    ecx,DWORD PTR [eax+edi*8-0x305b38d5]
  41b2b1:	test   eax,0x92213065
  41b2b6:	je     0x41b24d
  41b2b8:	scas   al,BYTE PTR es:[edi]
  41b2b9:	sbb    al,0x80
  41b2bb:	sahf   
  41b2bc:	stos   DWORD PTR es:[edi],eax
  41b2bd:	pushf  
  41b2be:	in     eax,0x86
  41b2c0:	push   0x2d
  41b2c2:	xor    ah,BYTE PTR [ebx-0x3]
  41b2c5:	push   ecx
  41b2c6:	add    DWORD PTR [eax],edx
  41b2c8:	xor    al,0xc2
  41b2ca:	mov    al,ds:0x3108ae18
  41b2cf:	les    esp,FWORD PTR [eax]
  41b2d1:	bound  eax,QWORD PTR [ebp+ecx*8-0x5ced6e1]
  41b2d8:	dec    edx
  41b2d9:	xchg   ebx,eax
  41b2da:	lods   eax,DWORD PTR ds:[esi]
  41b2db:	xor    edx,DWORD PTR [edi]
  41b2dd:	ret    
  41b2de:	loop   0x41b279
  41b2e0:	mov    ds:0xe7606c23,al
  41b2e5:	lods   eax,DWORD PTR ds:[esi]
  41b2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e7:	sbb    esp,esp
  41b2e9:	xor    ebp,DWORD PTR [edi+0x1af0f800]
  41b2ef:	xlat   BYTE PTR ds:[ebx]
  41b2f0:	sar    DWORD PTR [ebx+0x21],cl
  41b2f3:	push   esi
  41b2f4:	cmp    al,0x84
  41b2f6:	arpl   bx,cx
  41b2f8:	inc    edi
  41b2f9:	test   eax,0xb1859263
  41b2fe:	into   
  41b2ff:	push   ebx
  41b300:	call   0x7ce08d79
  41b305:	inc    esp
  41b306:	add    eax,0xb79d2c39
  41b30b:	out    0x36,eax
  41b30d:	add    eax,0x83caeb37
  41b312:	fidivr DWORD PTR [edi]
  41b314:	adc    eax,0x99bfc0a6
  41b319:	pop    esp
  41b31a:	fbld   TBYTE PTR [esi]
  41b31c:	bound  esi,QWORD PTR [edi-0x40]
  41b31f:	test   DWORD PTR [edx+0x29b11400],0xbb021eee
  41b329:	sti    
  41b32a:	and    edi,DWORD PTR [edx]
  41b32c:	js     0x41b2b2
  41b32e:	mov    ah,0x3a
  41b330:	out    dx,al
  41b331:	out    0xc8,al
  41b333:	ins    BYTE PTR es:[edi],dx
  41b334:	mov    al,ds:0x7787f467
  41b339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b33a:	mov    esp,0x27f9ad12
  41b33f:	or     BYTE PTR [esp+0x59],bl
  41b343:	dec    edi
  41b344:	jmp    0x5ae2:0xc9016853
  41b34b:	test   BYTE PTR [ecx],al
  41b34d:	sub    eax,0x41b4d804
  41b352:	out    0x3c,eax
  41b354:	in     al,0xa0
  41b356:	out    dx,al
  41b357:	lahf   
  41b358:	iret   
  41b359:	jl     0x41b339
  41b35b:	push   esi
  41b35c:	adc    eax,0x145b3379
  41b361:	push   es
  41b362:	push   ecx
  41b363:	int3   
  41b364:	ror    ebx,cl
  41b366:	xor    ch,dh
  41b368:	or     cl,BYTE PTR [edi]
  41b36a:	enter  0x8c64,0xc8
  41b36e:	in     eax,dx
  41b36f:	add    al,0x89
  41b371:	mov    eax,ds:0x5663ec06
  41b376:	or     eax,0x601968db
  41b37b:	loope  0x41b331
  41b37d:	mov    BYTE PTR [ebx-0x12369891],dl
  41b383:	inc    edi
  41b384:	int3   
  41b385:	std    
  41b386:	inc    edi
  41b387:	xor    eax,0xa5069baf
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227e8
  41b3f7:	push   DWORD PTR ds:0x42257c
  41b3fd:	mov    eax,ds:0x4226f8
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x4226f8
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x4226f8
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428555,0x0
  41b458:	mov    DWORD PTR ds:0x42833d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428455
  41b468:	mov    ecx,DWORD PTR ds:0x428429
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428471
  41b47a:	cmp    DWORD PTR ds:0x428555,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282e3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428351
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428441
  41b4af:	mov    DWORD PTR ds:0x428351,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428561
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428461
  41b4c3:	or     DWORD PTR ds:0x4284d5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428401
  41b4d4:	or     DWORD PTR ds:0x428409,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42856d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428561,ebx
  41b4ee:	mov    DWORD PTR ds:0x42840d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284dd,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428361,0x7065
  41b509:	cmp    DWORD PTR ds:0x42856d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428565
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428459
  41b541:	or     ecx,DWORD PTR ds:0x42841d
  41b547:	mov    DWORD PTR ds:0x428459,ecx
  41b54d:	add    DWORD PTR ds:0x4283f9,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428341,0x591d
  41b563:	dec    DWORD PTR ds:0x428471
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42856d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428351,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428359,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42856d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42841d
  41b5b3:	sbb    DWORD PTR ds:0x428441,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284c5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428465,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42843d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428359,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x4284f1,0x0
  41b613:	mov    DWORD PTR ds:0x428355,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42853d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284c5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428435,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428351
  41b643:	cmp    DWORD PTR ds:0x4284f1,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42841d
  41b655:	push   0x428459
  41b65a:	push   0x4283f5
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284d5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428331
  41b672:	sub    ecx,DWORD PTR ds:0x428439
  41b678:	mov    DWORD PTR ds:0x428331,ecx
  41b67e:	adc    DWORD PTR ds:0x428431,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428431
  41b690:	or     DWORD PTR ds:0x4284d5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284b1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428459,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42841d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428555,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428419,0x428469
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428415
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x4284f1
  41b6f5:	sub    DWORD PTR ds:0x428561,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428465,0x0
  41b719:	mov    DWORD PTR ds:0x428349,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428429
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284c5,edi
  41b737:	cmp    DWORD PTR ds:0x428465,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428147
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42833d
  41b756:	xor    DWORD PTR ds:0x428321,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284cd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284d5
  41b774:	mov    DWORD PTR ds:0x4284cd,ecx
  41b77a:	and    DWORD PTR ds:0x42834d,0x34b7
  41b784:	adc    DWORD PTR ds:0x4284f1,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428351,0x0
  41b7c2:	mov    DWORD PTR ds:0x428459,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42856d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428345,edx
  41b7d9:	cmp    DWORD PTR ds:0x428351,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428341
  41b80a:	sbb    DWORD PTR ds:0x428449,edx
  41b810:	or     edx,DWORD PTR ds:0x428361
  41b816:	and    edx,DWORD PTR ds:0x4284c5
  41b81c:	sub    edx,DWORD PTR ds:0x428559
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42845d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42850d
  41b839:	mov    ecx,DWORD PTR ds:0x428519
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428419,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428471,0x0
  41b879:	mov    DWORD PTR ds:0x428365,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x4284f1,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284cd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428471,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42853d,edx
  41b8c2:	add    DWORD PTR ds:0x428561,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428555
  41b8ce:	and    DWORD PTR ds:0x4284bd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428459,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428405
  41b8f9:	or     edx,DWORD PTR ds:0x428451
  41b8ff:	mov    DWORD PTR ds:0x428405,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284c5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284c5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42832d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428441,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284e1,0x428471
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428365,0x0
  41b996:	mov    DWORD PTR ds:0x428349,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42841d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428459,ebx
  41b9b6:	mov    DWORD PTR ds:0x428429,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428365,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284bd
  41b9d5:	push   0x4281a5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42854d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284d5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42834d
  41b9f5:	adc    DWORD PTR ds:0x428439,ecx
  41b9fb:	add    DWORD PTR ds:0x428341,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428345,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42833d,0x0
  41ba21:	mov    DWORD PTR ds:0x428435,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42843d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42833d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428409,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428535
  41ba6a:	sbb    DWORD PTR ds:0x428411,0x4284ed
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428455
  41ba80:	adc    ecx,DWORD PTR ds:0x428569
  41ba86:	mov    DWORD PTR ds:0x428455,ecx
  41ba8c:	adc    DWORD PTR ds:0x428559,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428359,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428565,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428459,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428409,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428421
  41bada:	mov    DWORD PTR ds:0x428445,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428445,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428409,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428551
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42841d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284c9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428405
  41bb31:	xor    DWORD PTR ds:0x428401,ecx
  41bb37:	sbb    DWORD PTR ds:0x42854d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428561,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428565
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284e1
  41bb50:	mov    DWORD PTR ds:0x42845d,edx
  41bb56:	mov    DWORD PTR ds:0x428415,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428561,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428285
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284b9,edi
  41bb90:	neg    DWORD PTR ds:0x428345
  41bb96:	movzx  ecx,WORD PTR ds:0x428549
  41bb9d:	sbb    DWORD PTR ds:0x428461,ecx
  41bba3:	or     DWORD PTR ds:0x428435,0x428441
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428341,0x0
  41bbb9:	mov    DWORD PTR ds:0x428441,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42843d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428341,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42826f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428361
  41bbfe:	adc    DWORD PTR ds:0x428355,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42843d
  41bc10:	adc    DWORD PTR ds:0x428569,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42832d
  41bc1c:	sub    DWORD PTR ds:0x428571,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428569,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42831d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284c1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428569,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284bd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284c1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282e3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428445
  41bca6:	movzx  ecx,BYTE PTR ds:0x428469
  41bcad:	add    DWORD PTR ds:0x428355,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284c5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x4283f9
  41bcc1:	or     DWORD PTR ds:0x428539,ecx
  41bcc7:	add    DWORD PTR ds:0x428401,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428555,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428449,0x0
  41bd09:	mov    DWORD PTR ds:0x428535,0x1421
  41bd13:	mov    DWORD PTR ds:0x428471,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428425
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42843d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428449,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284c5
  41bd52:	sub    DWORD PTR ds:0x428351,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428421
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428451
  41bd64:	mov    DWORD PTR ds:0x428421,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42833d
  41bd71:	or     DWORD PTR ds:0x4284b5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428335,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428345
  41bd85:	xor    ecx,DWORD PTR ds:0x4283f9
  41bd8b:	mov    DWORD PTR ds:0x428345,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284d9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42841d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428545
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284b9
  41bdcd:	mov    DWORD PTR ds:0x428545,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428465,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428401,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284cd
  41be1c:	sbb    eax,DWORD PTR ds:0x428465
  41be22:	mov    ds:0x4284cd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428401
  41be39:	xor    ecx,DWORD PTR ds:0x428461
  41be3f:	mov    DWORD PTR ds:0x428401,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428549,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284b5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42835d,0x428351
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284d1,0x0
  41be82:	mov    DWORD PTR ds:0x428401,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428569
  41be93:	mov    DWORD PTR ds:0x428545,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42832d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284d1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284bd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428421
  41becc:	sub    DWORD PTR ds:0x428355,ecx
  41bed2:	and    DWORD PTR ds:0x428429,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428559
  41bee0:	xor    DWORD PTR ds:0x4283f5,ecx
  41bee6:	or     DWORD PTR ds:0x428435,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428439
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284d1,0x428569
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428349
  41bf19:	and    ecx,DWORD PTR ds:0x42854d
  41bf1f:	mov    DWORD PTR ds:0x428349,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428359
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8-0x2e055231],bh
  41bf48:	nop
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0x57
  41bf52:	mov    dl,BYTE PTR ds:0x6af8b5c4
  41bf58:	inc    eax
  41bf59:	shl    BYTE PTR [edi+0x11],1
  41bf5c:	mov    bh,0x80
  41bf5e:	push   ecx
  41bf5f:	enter  0xe968,0x3c
  41bf63:	adc    BYTE PTR [eax-0x5e55015c],bh
  41bf69:	arpl   WORD PTR [edx+edx*4+0x6772d425],dx
  41bf70:	loop   0x41bf94
  41bf72:	call   0x7477:0x9c0164e5
  41bf79:	inc    edx
  41bf7a:	and    al,0x6a
  41bf7c:	push   ebp
  41bf7d:	cwde   
  41bf7e:	mov    eax,ds:0x35b2f440
  41bf83:	xor    eax,0xce72ed71
  41bf88:	xchg   esp,eax
  41bf89:	jnp    0x41bf66
  41bf8b:	cld    
  41bf8c:	xor    edi,ebx
  41bf8e:	xchg   esp,eax
  41bf8f:	rol    bl,cl
  41bf91:	push   ebx
  41bf92:	xchg   edx,eax
  41bf93:	adc    al,0xae
  41bf95:	int    0xfc
  41bf97:	cmp    al,0x9
  41bf99:	push   edi
  41bf9a:	fadd   QWORD PTR ds:0xa95a7b7f
  41bfa0:	jg     0x41bfee
  41bfa2:	bound  eax,QWORD PTR ds:0x781ffaa5
  41bfa8:	shr    DWORD PTR [ebp-0x43f96078],cl
  41bfae:	jnp    0x41bf84
  41bfb0:	stos   BYTE PTR es:[edi],al
  41bfb1:	inc    esi
  41bfb2:	sub    ecx,DWORD PTR [eax+0x5ffc3d6]
  41bfb8:	pop    es
  41bfb9:	mov    bh,al
  41bfbb:	leave  
  41bfbc:	dec    esp
  41bfbd:	xor    eax,0x16f34e43
  41bfc2:	dec    BYTE PTR [ebp+0x4a]
  41bfc5:	cld    
  41bfc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfc7:	retf   
  41bfc8:	push   cs
  41bfc9:	outs   dx,BYTE PTR ds:[esi]
  41bfca:	push   es
  41bfcb:	in     al,dx
  41bfcc:	fdiv   st(2),st
  41bfce:	cwde   
  41bfcf:	fcomp  QWORD PTR [eax-0x72]
  41bfd2:	jge    0x41bf75
  41bfd4:	jp     0x41c042
  41bfd6:	jno    0x41c052
  41bfd8:	(bad)  
  41bfd9:	jmp    0x41c030
  41bfdb:	les    edx,FWORD PTR [eax]
  41bfdd:	setns  BYTE PTR [ebx]
  41bfe0:	sub    eax,0xb0af454c
  41bfe5:	ret    
  41bfe6:	fwait
  41bfe7:	sub    BYTE PTR [ebx],ch
  41bfe9:	dec    ecx
  41bfea:	fst    QWORD PTR [edi]
  41bfec:	and    al,cl
  41bfee:	jp     0x41bfa3
  41bff0:	outs   dx,DWORD PTR ds:[esi]
  41bff1:	fwait
  41bff2:	inc    ebp
  41bff3:	push   cs
  41bff4:	cmp    BYTE PTR [eax+0x14],al
  41bff7:	jno    0x41bfdd
  41bff9:	imul   edx,DWORD PTR [esi-0x6e6e06b7],0xffffffa2
  41c000:	stos   BYTE PTR es:[edi],al
  41c001:	call   0x6c612738
  41c006:	sub    DWORD PTR [esi-0x8],edi
  41c009:	inc    esi
  41c00a:	mov    al,ds:0x71ccaf4f
  41c00f:	test   esp,0xb62b2ddb
  41c015:	(bad)  
  41c016:	push   ss
  41c017:	repnz sub edi,edi
  41c01a:	aam    0x11
  41c01c:	lea    ebp,ds:0x730ad057
  41c022:	mov    dl,0x9e
  41c024:	fistp  WORD PTR [esi]
  41c026:	mov    DWORD PTR [eax+0x65],0xb0489e3d
  41c02d:	inc    esp
  41c02e:	leave  
  41c02f:	cmp    al,bl
  41c031:	stc    
  41c032:	lods   eax,DWORD PTR ds:[esi]
  41c033:	call   0x6d48:0x21871640
  41c03a:	push   cs
  41c03b:	pushf  
  41c03c:	sub    BYTE PTR [edi],ah
  41c03e:	cmp    DWORD PTR [ecx+0x130992c4],0xffffffc8
  41c045:	lods   al,BYTE PTR ds:[esi]
  41c046:	xchg   edx,eax
  41c047:	xor    al,0x7
  41c049:	jge    0x41c0be
  41c04b:	dec    esi
  41c04c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c04e:	(bad)  
  41c04f:	pusha  
  41c050:	mov    bl,BYTE PTR [ecx+0x23b34a2f]
  41c056:	lahf   
  41c057:	mov    dh,0x73
  41c059:	imul   ecx,DWORD PTR ds:0x8acc8b02,0xfffffff8
  41c060:	add    DWORD PTR [edx+edi*1+0x14ec1e94],edx
  41c067:	or     ch,BYTE PTR [ecx]
  41c069:	test   BYTE PTR [edi+0x7],dl
  41c06c:	adc    edx,edx
  41c06e:	repnz loop 0x41c050
  41c071:	int3   
  41c072:	and    DWORD PTR [esi],edx
  41c074:	mov    cl,0x5a
  41c076:	in     al,dx
  41c077:	push   0x26
  41c079:	mov    cl,0x93
  41c07b:	mov    ebx,0x779cdb98
  41c080:	jmp    0xcdb9408e
  41c085:	jnp    0x41c0cf
  41c087:	test   DWORD PTR [ecx+eax*8],ecx
  41c08a:	arpl   WORD PTR [ecx+0x590875e],bx
  41c090:	and    BYTE PTR [ecx-0x28642a3a],0xa
  41c097:	cli    
  41c098:	jnp    0x41c0b5
  41c09a:	xor    BYTE PTR [edi-0x62a1c345],bl
  41c0a0:	clc    
  41c0a1:	xchg   esi,eax
  41c0a2:	mov    bl,0xfb
  41c0a4:	jns    0x41c076
  41c0a6:	and    ah,0x95
  41c0a9:	ss and eax,0xe7cd6e85
  41c0af:	dec    ebx
  41c0b0:	push   eax
  41c0b1:	mov    eax,DWORD PTR [eax]
  41c0b3:	mov    cl,0x86
  41c0b5:	stc    
  41c0b6:	jg     0x41c077
  41c0b8:	jno    0x41c0ce
  41c0ba:	sub    BYTE PTR [esi-0x47],al
  41c0bd:	push   ss
  41c0be:	jle    0x41c127
  41c0c0:	push   ds
  41c0c1:	ins    BYTE PTR es:[edi],dx
  41c0c2:	call   0xb6e2644
  41c0c7:	mov    edi,0x23f6756a
  41c0cc:	sub    esi,DWORD PTR [eax+eax*4]
  41c0cf:	pop    edx
  41c0d0:	rol    ecx,cl
  41c0d2:	cmp    BYTE PTR [eax+0x6a25c43],al
  41c0d8:	stos   DWORD PTR es:[edi],eax
  41c0d9:	sahf   
  41c0da:	dec    edi
  41c0db:	push   esi
  41c0dc:	loope  0x41c157
  41c0de:	xchg   edi,esp
  41c0e0:	int    0xa9
  41c0e2:	cmp    eax,0xd1b01f44
  41c0e7:	fmulp  st(1),st
  41c0e9:	push   cs
  41c0ea:	shl    DWORD PTR [ecx-0x75abe358],1
  41c0f0:	mov    ebx,0x15ce823f
  41c0f5:	daa    
  41c0f6:	sub    BYTE PTR [esi],dh
  41c0f8:	push   ds
  41c0f9:	je     0x41c124
  41c0fb:	call   0x849682cc
  41c100:	sbb    al,0xda
  41c102:	jl     0x41c0a7
  41c104:	aas    
  41c105:	and    eax,0xd11a3eeb
  41c10a:	enter  0x4a6,0xe
  41c10e:	inc    eax
  41c10f:	icebp  
  41c110:	xchg   esi,eax
  41c111:	popf   
  41c112:	mov    al,0xb0
  41c114:	add    esi,DWORD PTR [ebp+0x1f]
  41c117:	mov    edi,ebp
  41c119:	xor    BYTE PTR [edi+0x15],ch
  41c11c:	xchg   ebx,eax
  41c11d:	mov    dl,BYTE PTR [ebx+0x148cc5ea]
  41c123:	xchg   ebx,esi
  41c125:	push   ds
  41c126:	cmp    eax,0xf13a33e0
  41c12b:	pop    esp
  41c12c:	call   0x7f71:0xcf52bdad
  41c133:	mov    DWORD PTR [ebx+0x72b25e01],esp
  41c139:	sub    al,0x51
  41c13b:	or     al,0xa9
  41c13d:	aaa    
  41c13e:	xchg   DWORD PTR [edi],ebp
  41c140:	bound  esp,QWORD PTR [ebp-0x129825d]
  41c146:	jecxz  0x41c142
  41c148:	inc    edi
  41c149:	push   0xfffffff0
  41c14b:	adc    esp,esp
  41c14d:	popf   
  41c14e:	mov    ebx,0xe0118385
  41c153:	sub    BYTE PTR [ecx+0x520067e8],ah
  41c159:	sar    edx,cl
  41c15b:	dec    edx
  41c15c:	add    BYTE PTR [ecx+0x37],bh
  41c15f:	outs   dx,BYTE PTR ds:[esi]
  41c160:	jb     0x41c162
  41c162:	sbb    eax,0x91e41b5
  41c167:	arpl   WORD PTR [edx],si
  41c169:	es xchg ebp,eax
  41c16b:	push   ebp
  41c16c:	cld    
  41c16d:	add    eax,0x445fe76e
  41c172:	dec    esi
  41c173:	xchg   esi,eax
  41c174:	mov    bl,0x91
  41c176:	pop    edx
  41c177:	ins    BYTE PTR es:[edi],dx
  41c178:	js     0x41c10e
  41c17a:	in     al,0x91
  41c17c:	pop    ebx
  41c17d:	sub    cl,bl
  41c17f:	or     esi,DWORD PTR [eax]
  41c181:	jl     0x41c1b3
  41c183:	adc    ah,BYTE PTR [edi-0x32]
  41c186:	mov    ds:0xb05710e9,al
  41c18b:	xchg   dh,al
  41c18d:	out    dx,al
  41c18e:	je     0x41c153
  41c190:	(bad)  
  41c191:	push   ebx
  41c192:	sbb    ecx,DWORD PTR [eax-0x80]
  41c195:	mov    ds:0x95c51dde,eax
  41c19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c19b:	pushf  
  41c19c:	sar    ebp,1
  41c19e:	repnz imul eax,DWORD PTR [edx-0x72],0x4311432e
  41c1a6:	cmp    eax,0x3794b9d3
  41c1ab:	mov    eax,ds:0x97d2baa1
  41c1b0:	ret    0x1477
  41c1b3:	leave  
  41c1b4:	sbb    dl,BYTE PTR [ebp-0x76e1cc93]
  41c1ba:	jo     0x41c1ef
  41c1bc:	scas   eax,DWORD PTR es:[edi]
  41c1bd:	jb     0x41c1c2
  41c1bf:	call   0xa05f:0x3f2460f4
  41c1c6:	retf   0x2748
  41c1c9:	xchg   esp,eax
  41c1ca:	jp     0x41c16f
  41c1cc:	adc    al,0x58
  41c1ce:	gs ins DWORD PTR es:[edi],dx
  41c1d0:	jmp    FWORD PTR [ebx]
  41c1d2:	ret    
  41c1d3:	lea    edx,[ebx]
  41c1d5:	mov    cl,0x74
  41c1d7:	ins    DWORD PTR es:[edi],dx
  41c1d8:	stos   BYTE PTR es:[edi],al
  41c1d9:	ror    DWORD PTR [ecx+0x5e4c95bd],0xcb
  41c1e0:	push   cs
  41c1e1:	dec    edi
  41c1e2:	iret   
  41c1e3:	cmp    bl,cl
  41c1e5:	sub    ebp,DWORD PTR [ebx+0x5481c0fb]
  41c1eb:	mov    cs,WORD PTR [eax+edi*2-0x2bfba32e]
  41c1f2:	imul   dx,WORD PTR [edx-0x56f0b65],0x64c
  41c1fb:	rcr    DWORD PTR [esi-0x4b7625e0],cl
  41c201:	sbb    eax,0x3b98d932
  41c206:	fisub  DWORD PTR [esp+eax*2]
  41c209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c20a:	stos   BYTE PTR es:[edi],al
  41c20b:	ins    BYTE PTR es:[edi],dx
  41c20c:	adc    DWORD PTR es:[eax+0x4a],esi
  41c210:	je     0x41c1ca
  41c212:	(bad)  
  41c213:	icebp  
  41c214:	cwde   
  41c215:	mov    ecx,edx
  41c217:	call   0x483c3d4c
  41c21c:	in     al,0xa5
  41c21e:	xchg   esi,eax
  41c21f:	stos   BYTE PTR es:[edi],al
  41c220:	sbb    eax,0x334422ef
  41c225:	scas   eax,DWORD PTR es:[edi]
  41c226:	loopne 0x41c296
  41c228:	and    eax,0x72896755
  41c22d:	scas   al,BYTE PTR es:[edi]
  41c22e:	jbe    0x41c27c
  41c230:	stos   DWORD PTR es:[edi],eax
  41c231:	push   es
  41c232:	push   edi
  41c233:	mov    dh,0xfa
  41c235:	scas   eax,DWORD PTR es:[edi]
  41c236:	adc    ebp,DWORD PTR [edx]
  41c238:	das    
  41c239:	mov    edi,0xf4d8ed54
  41c23e:	outs   dx,DWORD PTR ds:[esi]
  41c23f:	dec    esp
  41c240:	in     al,0xc
  41c242:	ret    0x7927
  41c245:	mov    ebp,0xdaf77f74
  41c24a:	dec    esp
  41c24b:	push   ebx
  41c24c:	pop    es
  41c24d:	jae    0x41c286
  41c24f:	ds mov dl,0x34
  41c252:	shl    al,0xe
  41c255:	jno    0x41c2cb
  41c257:	ss jle 0x41c2c2
  41c25a:	add    eax,0x1913f052
  41c25f:	pop    ecx
  41c260:	jne    0x41c24f
  41c262:	cmc    
  41c263:	(bad)  
  41c264:	(bad)  
  41c265:	out    dx,al
  41c266:	jle    0x41c2e7
  41c268:	mov    ebx,esi
  41c26a:	adc    al,0x99
  41c26c:	mov    ds:0x97313a24,al
  41c271:	jb     0x41c200
  41c273:	adc    BYTE PTR [ebx-0x10610bdf],al
  41c279:	and    eax,0xba1b8d2b
  41c27e:	xchg   BYTE PTR [eax-0x5e439dd6],ah
  41c284:	lock push 0x62b4c248
  41c28a:	or     al,0x37
  41c28c:	iret   
  41c28d:	std    
  41c28e:	ficom  DWORD PTR [eax+0x3]
  41c291:	sub    DWORD PTR ds:0x5e6cf018,0x9a76e504
  41c29b:	fidiv  DWORD PTR [esi+0x3fbd99b7]
  41c2a1:	pop    ebp
  41c2a2:	test   BYTE PTR [edx+0x10],ah
  41c2a5:	and    ah,BYTE PTR [edx-0x6a]
  41c2a8:	sub    BYTE PTR [eax+0x63],0x62
  41c2ac:	pop    esi
  41c2ad:	push   cs
  41c2ae:	ins    DWORD PTR es:[edi],dx
  41c2af:	shl    ebp,cl
  41c2b1:	(bad)  
  41c2b2:	push   edi
  41c2b3:	pop    esi
  41c2b4:	add    eax,0xa3cd6db
  41c2b9:	sbb    DWORD PTR [edi],esi
  41c2bb:	jp     0x41c2fd
  41c2bd:	arpl   WORD PTR cs:[ecx],si
  41c2c0:	mov    edx,0xc648339a
  41c2c5:	int    0x18
  41c2c7:	or     eax,0x18610e58
  41c2cc:	out    0x14,eax
  41c2ce:	xor    eax,0xa80fe53f
  41c2d3:	jbe    0x41c293
  41c2d5:	out    dx,eax
  41c2d6:	(bad)  
  41c2d8:	aad    0xa4
  41c2da:	in     al,0xa3
  41c2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2dd:	sub    eax,edx
  41c2df:	jns    0x41c332
  41c2e1:	pop    esp
  41c2e2:	jno    0x41c2cc
  41c2e4:	fldenv [ecx+0x78]
  41c2e7:	out    dx,eax
  41c2e8:	(bad)  
  41c2e9:	jo     0x41c35f
  41c2eb:	adc    dl,BYTE PTR [edi]
  41c2ed:	hlt    
  41c2ee:	mov    ch,0x78
  41c2f0:	add    ah,BYTE PTR [bx]
  41c2f3:	aas    
  41c2f4:	sbb    al,0x4c
  41c2f6:	loopne 0x41c363
  41c2f8:	lods   al,BYTE PTR ds:[esi]
  41c2f9:	xor    eax,0x1f779071
  41c2fe:	dec    ebx
  41c2ff:	push   0xed70d2d
  41c304:	sbb    DWORD PTR ds:0xb3a0d5a6,eax
  41c30a:	and    DWORD PTR [esi],eax
  41c30c:	xchg   DWORD PTR [ebx+edi*1-0x442840df],ebp
  41c313:	retf   
  41c314:	stc    
  41c315:	xor    BYTE PTR [edx-0x39cbdd83],dl
  41c31b:	xor    eax,0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284d5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428545,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284b9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428415,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42855d,0x0
  41c374:	mov    DWORD PTR ds:0x428409,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284e9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42832d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284cd
  41c39c:	cmp    DWORD PTR ds:0x42855d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x4283f9,edx
  41c3be:	sub    DWORD PTR ds:0x428359,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42835d,0x428569
  41c3d2:	or     DWORD PTR ds:0x428539,edi
  41c3d8:	sbb    DWORD PTR ds:0x428355,0x428545
  41c3e2:	cmp    DWORD PTR ds:0x428461,0x0
  41c3e9:	mov    DWORD PTR ds:0x428431,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428441,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428455,0x897
  41c407:	mov    DWORD PTR ds:0x428349,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284bd
  41c422:	cmp    DWORD PTR ds:0x428461,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x4283f5,ecx
  41c44f:	not    DWORD PTR ds:0x4284c9
  41c455:	adc    DWORD PTR ds:0x428439,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284e5,0x42841d
  41c469:	add    DWORD PTR ds:0x4283fd,edi
  41c46f:	sub    DWORD PTR ds:0x42846d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428425,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428455
  41c493:	add    DWORD PTR ds:0x42856d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428569,0x0
  41c4a8:	mov    DWORD PTR ds:0x42844d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284c9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428469,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428409,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428569,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428449,0x4284d9
  41c4ff:	add    DWORD PTR ds:0x42833d,edi
  41c505:	xor    DWORD PTR ds:0x42840d,edx
  41c50b:	sbb    DWORD PTR ds:0x428455,0x428445
  41c515:	mov    DWORD PTR ds:0x428469,0x491d
  41c51f:	add    DWORD PTR ds:0x428341,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	mov    WORD PTR [ecx],ss
  41c538:	adc    bl,BYTE PTR [esi-0x413fbea0]
  41c53e:	dec    edx
  41c53f:	les    edi,FWORD PTR [esi+0x1a251fbe]
  41c545:	mov    edi,DWORD PTR [edi]
  41c547:	and    ecx,DWORD PTR [edi]
  41c549:	xchg   esi,eax
  41c54a:	(bad)  
  41c54b:	and    DWORD PTR [ebx+0x2e7c6c4b],edi
  41c551:	mov    esi,0xf7bc0af5
  41c556:	fcom   QWORD PTR [ebx-0xedc891]
  41c55c:	jl     0x41c5c7
  41c55e:	mov    ds:0xf5b1cd96,eax
  41c563:	lods   eax,DWORD PTR ds:[esi]
  41c564:	add    cl,BYTE PTR [esi-0x1121c922]
  41c56a:	ss ret 
  41c56c:	sub    cl,ch
  41c56e:	pop    edi
  41c56f:	xchg   esi,eax
  41c570:	hlt    
  41c571:	xchg   BYTE PTR [esp+edi*8],bh
  41c574:	cli    
  41c575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c576:	retf   0x73c9
  41c579:	(bad)  
  41c57a:	mov    ebx,0x1b8cd3d2
  41c57f:	jbe    0x41c56d
  41c581:	out    0x6c,eax
  41c583:	push   ebp
  41c584:	adc    eax,0xd630474b
  41c589:	add    DWORD PTR [eax],edx
  41c58b:	inc    BYTE PTR [edi-0x8]
  41c58e:	mov    ds:0x84af195d,al
  41c593:	lahf   
  41c594:	ror    DWORD PTR [ebx+0x5060cf99],cl
  41c59a:	int    0x1b
  41c59c:	pop    esi
  41c59d:	mov    ds:0x32963ca3,eax
  41c5a2:	out    0x6d,al
  41c5a4:	mov    al,ds:0x4b0e6e62
  41c5a9:	mov    ebp,DWORD PTR [ecx-0x35]
  41c5ac:	sub    al,0x81
  41c5ae:	or     eax,0x4fc28058
  41c5b3:	pop    ebp
  41c5b4:	jb     0x41c5d9
  41c5b6:	pop    es
  41c5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b8:	jle    0x41c582
  41c5ba:	sahf   
  41c5bb:	add    DWORD PTR [edi-0x19263c0e],esp
  41c5c1:	push   edx
  41c5c2:	js     0x41c591
  41c5c4:	add    eax,0xb0f5767c
  41c5c9:	xchg   ebp,ebx
  41c5cb:	fidiv  DWORD PTR [ecx]
  41c5cd:	sahf   
  41c5ce:	dec    eax
  41c5cf:	or     BYTE PTR [ebx-0x31],ah
  41c5d2:	dec    esp
  41c5d3:	or     ecx,DWORD PTR [ecx]
  41c5d5:	fs stos DWORD PTR es:[edi],eax
  41c5d7:	pop    edi
  41c5d8:	arpl   cx,si
  41c5da:	lods   eax,DWORD PTR ds:[esi]
  41c5db:	mov    al,0x99
  41c5dd:	push   ebp
  41c5de:	not    DWORD PTR [ebp+0x36]
  41c5e1:	popa   
  41c5e2:	scas   eax,DWORD PTR es:[edi]
  41c5e3:	test   BYTE PTR [edx-0x16],ch
  41c5e6:	and    DWORD PTR [ebp-0x4ef79378],edi
  41c5ec:	lahf   
  41c5ed:	std    
  41c5ee:	mov    al,0x2a
  41c5f0:	mov    al,BYTE PTR [eax-0x24]
  41c5f3:	loop   0x41c5f2
  41c5f5:	xlat   BYTE PTR ds:[ebx]
  41c5f6:	test   eax,0xe53f988c
  41c5fb:	jae    0x41c637
  41c5fd:	xor    esp,DWORD PTR [esp+ebx*1]
  41c600:	jns    0x41c610
  41c602:	mov    ebx,0x6391b092
  41c607:	fcmovu st,st(0)
  41c609:	mov    edi,0x7c033c9f
  41c60e:	sahf   
  41c60f:	lds    esi,FWORD PTR [edx]
  41c611:	cld    
  41c612:	sbb    ebp,DWORD PTR [eax]
  41c614:	jg     0x41c5f1
  41c616:	loopne 0x41c5bf
  41c618:	jno    0x41c643
  41c61a:	lahf   
  41c61b:	push   esi
  41c61c:	adc    DWORD PTR [edi+0x79],0xbeeef325
  41c623:	rcr    BYTE PTR [ecx-0x3850f88],0xb4
  41c62a:	push   eax
  41c62b:	xor    cl,BYTE PTR [edi]
  41c62d:	pop    ebp
  41c62e:	ds fld st(6)
  41c631:	cmp    DWORD PTR ds:0x3394e962,edx
  41c637:	pop    ebx
  41c638:	cmp    DWORD PTR [eax-0x5f],ecx
  41c63b:	jmp    DWORD PTR [eax-0x185daa6b]
  41c641:	lods   al,BYTE PTR ds:[esi]
  41c642:	rcr    DWORD PTR [ebp+0x9],1
  41c645:	das    
  41c646:	jno    0x41c605
  41c648:	mov    BYTE PTR [edi+0x4493cef8],al
  41c64e:	pop    ds
  41c64f:	cmp    al,0x8c
  41c651:	rcl    BYTE PTR [eax],0x54
  41c654:	inc    ebp
  41c655:	xchg   DWORD PTR [ecx],esp
  41c657:	out    0xf3,al
  41c659:	call   0x1238:0xfa5eae4a
  41c660:	in     eax,dx
  41c661:	retf   
  41c662:	cdq    
  41c663:	std    
  41c664:	jg     0x41c61a
  41c666:	scas   al,BYTE PTR es:[edi]
  41c667:	adc    edx,DWORD PTR [esi-0x2d4724a4]
  41c66d:	aas    
  41c66e:	pop    ss
  41c66f:	push   esi
  41c670:	out    0x4d,al
  41c672:	fadd   QWORD PTR [ebp+0x20]
  41c675:	cdq    
  41c676:	lahf   
  41c677:	dec    edx
  41c678:	jl     0x41c63e
  41c67a:	mul    DWORD PTR cs:[ebx+0x6ff83f70]
  41c681:	push   edx
  41c682:	jbe    0x41c6fe
  41c684:	into   
  41c685:	jbe    0x41c69a
  41c687:	xchg   edi,eax
  41c688:	aaa    
  41c689:	neg    DWORD PTR [ecx]
  41c68b:	mov    ds:0x8ad9f708,eax
  41c690:	fstp   DWORD PTR [edx+0x7b]
  41c693:	sub    esi,esp
  41c695:	mov    esi,0xcf60320b
  41c69a:	outs   dx,BYTE PTR ds:[esi]
  41c69b:	jp     0x41c67e
  41c69d:	or     BYTE PTR [edi+0x602ebea7],0x63
  41c6a4:	mov    eax,ds:0x2a2cb063
  41c6a9:	add    al,0x20
  41c6ab:	imul   ecx,DWORD PTR [eax],0x347ba5f9
  41c6b1:	jno    0x41c65e
  41c6b3:	sahf   
  41c6b4:	xchg   ecx,eax
  41c6b5:	mov    edi,0x8acf4a2e
  41c6ba:	mov    DWORD PTR [edx+0x9],ebx
  41c6bd:	mov    edx,0x7aa238e6
  41c6c2:	adc    eax,0x317538c8
  41c6c7:	aad    0xea
  41c6c9:	and    dl,0x27
  41c6cc:	cdq    
  41c6cd:	xor    dl,0x21
  41c6d0:	test   DWORD PTR [ebx+0x2],esi
  41c6d3:	pop    edi
  41c6d4:	rcl    ebp,0x9e
  41c6d7:	loope  0x41c6ad
  41c6d9:	fistp  QWORD PTR [ebx+0x33]
  41c6dc:	call   0xbe21:0x584ba8e
  41c6e3:	add    BYTE PTR [eax*4+0x3fb6d53],al
  41c6ea:	aas    
  41c6eb:	mov    bl,0xf6
  41c6ed:	sbb    DWORD PTR [eax],eax
  41c6ef:	sub    esp,ecx
  41c6f1:	iret   
  41c6f2:	(bad)  
  41c6f3:	fstp   TBYTE PTR [ecx+0x15]
  41c6f6:	inc    eax
  41c6f7:	add    ah,BYTE PTR [ecx+0x33f2e420]
  41c6fd:	mov    ecx,0x96baf0c
  41c702:	popa   
  41c703:	pop    esp
  41c704:	jns    0x41c729
  41c706:	jmp    0x18bf:0xef42b432
  41c70d:	xchg   ebx,eax
  41c70e:	mov    eax,0xb39749cc
  41c713:	mov    ebx,0xda256d1e
  41c718:	cdq    
  41c719:	and    al,0x1d
  41c71b:	and    ebx,DWORD PTR [edi-0x3004e6ba]
  41c721:	das    
  41c722:	imul   edx,DWORD PTR [edi+0x46],0x28
  41c726:	mov    eax,ds:0xb6ed4b
  41c72b:	shr    ecx,cl
  41c72d:	ret    0xae46
  41c730:	test   al,0x7e
  41c732:	sbb    BYTE PTR [edx+0x68],0x4a
  41c736:	pusha  
  41c737:	and    BYTE PTR [edi-0x17eecb2b],al
  41c73d:	xchg   esi,eax
  41c73e:	lock enter 0x905f,0xb8
  41c743:	enter  0xbe08,0x29
  41c747:	mov    ds:0x3c62f018,al
  41c74c:	mov    BYTE PTR [edx],ah
  41c74e:	js     0x41c78e
  41c750:	add    eax,0x2b036ad5
  41c755:	sar    DWORD PTR [edx+0x1ae6677d],cl
  41c75b:	add    BYTE PTR [esi+esi*2+0x26d0101f],0x32
  41c763:	push   ds
  41c764:	inc    esp
  41c765:	loop   0x41c75c
  41c767:	fucomp st(3)
  41c769:	addr16 hlt 
  41c76b:	sahf   
  41c76c:	clc    
  41c76d:	jmp    0x41c757
  41c76f:	shl    DWORD PTR [ebp-0x4bd213a6],cl
  41c775:	push   es
  41c776:	push   esp
  41c777:	popa   
  41c778:	aam    0x21
  41c77a:	jne    0x41c7a4
  41c77c:	push   es
  41c77d:	nop
  41c77e:	jnp    0x41c70b
  41c780:	mov    eax,0xaa5bb6e2
  41c786:	jl     0x41c715
  41c788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c789:	dec    ebp
  41c78a:	mov    ch,0xa
  41c78c:	adc    BYTE PTR [edx+0xf],al
  41c78f:	shr    BYTE PTR [ebx+edi*4+0x11],0x94
  41c794:	mov    ds:0xdce86ed4,al
  41c799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c79b:	push   edx
  41c79c:	dec    edi
  41c79d:	loop   0x41c810
  41c79f:	pop    ebp
  41c7a0:	xchg   edi,eax
  41c7a1:	and    cl,ch
  41c7a3:	add    eax,DWORD PTR [ebx]
  41c7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a6:	out    dx,al
  41c7a7:	pop    ecx
  41c7a8:	pop    edi
  41c7a9:	fisubr DWORD PTR [eax+0x722a5d07]
  41c7af:	mov    al,ds:0x70de5d89
  41c7b4:	fnstcw WORD PTR [edi+0x13b5e8c0]
  41c7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7bb:	out    dx,eax
  41c7bc:	stos   WORD PTR es:[edi],ax
  41c7be:	retf   0x1a9f
  41c7c1:	mov    ebp,ds
  41c7c3:	outs   dx,BYTE PTR ds:[esi]
  41c7c4:	jmp    0x278724cd
  41c7c9:	sti    
  41c7ca:	mov    al,0x2f
  41c7cc:	cdq    
  41c7cd:	xlat   BYTE PTR ds:[ebx]
  41c7ce:	sti    
  41c7cf:	call   0xf7f:0xf134a182
  41c7d6:	sub    BYTE PTR [eax+0x19],bh
  41c7d9:	nop
  41c7da:	out    dx,al
  41c7db:	sub    edx,eax
  41c7dd:	pop    ebp
  41c7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7df:	sub    DWORD PTR [edx-0x2c697bc8],ecx
  41c7e5:	or     DWORD PTR [eax+0x333f5e12],edi
  41c7eb:	test   BYTE PTR [ebp+0x7e],cl
  41c7ee:	fcom   DWORD PTR [edi+edi*4+0x76]
  41c7f2:	pop    ebp
  41c7f3:	xchg   edi,eax
  41c7f4:	dec    ecx
  41c7f5:	test   DWORD PTR [edx-0x350cae51],ecx
  41c7fb:	push   es
  41c7fc:	jb     0x41c83f
  41c7fe:	sub    al,0x86
  41c800:	data16 adc al,0x8
  41c803:	mov    ebx,0xcf9ef527
  41c808:	xlat   BYTE PTR ds:[ebx]
  41c809:	xchg   esi,eax
  41c80a:	jmp    0x2f35bd2a
  41c80f:	nop
  41c810:	(bad)  
  41c811:	cmc    
  41c812:	in     eax,dx
  41c813:	add    BYTE PTR [ecx+0x28],bh
  41c816:	jo     0x41c814
  41c818:	push   edx
  41c819:	fiadd  DWORD PTR [eax]
  41c81b:	xchg   BYTE PTR [edx],cl
  41c81d:	popa   
  41c81e:	call   0x759fe986
  41c823:	cmp    bl,ch
  41c825:	xchg   ecx,eax
  41c826:	hlt    
  41c827:	cwde   
  41c828:	pop    ebp
  41c829:	ror    BYTE PTR [eax+edi*1],1
  41c82c:	inc    esp
  41c82d:	stos   DWORD PTR es:[edi],eax
  41c82e:	popf   
  41c82f:	add    edx,DWORD PTR [edx-0x6c]
  41c832:	mov    eax,ds:0x5d99ab3e
  41c837:	bnd jne 0x41c802
  41c83a:	sub    eax,0x2057eb38
  41c83f:	scas   eax,DWORD PTR es:[edi]
  41c840:	mov    dh,0x6d
  41c842:	push   eax
  41c843:	push   eax
  41c844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c845:	sbb    ebx,eax
  41c847:	cwde   
  41c848:	stc    
  41c849:	mov    ds:0x715ed8a,eax
  41c84e:	add    ebp,DWORD PTR [esi+eax*8+0x41051647]
  41c855:	pop    esp
  41c856:	mov    esp,0x704704c9
  41c85b:	xchg   esp,eax
  41c85c:	int    0x4a
  41c85e:	mov    cs,WORD PTR [edi]
  41c860:	jge    0x41c7f1
  41c862:	je     0x41c861
  41c864:	mov    edx,0x89f67368
  41c869:	test   al,0xed
  41c86b:	lock sub al,0x9b
  41c86e:	sub    BYTE PTR [eax+ebx*2+0x68f359a0],ah
  41c875:	into   
  41c876:	addr16 pop eax
  41c878:	mov    dl,0x41
  41c87a:	cmc    
  41c87b:	mov    ds:0x3734d41f,eax
  41c880:	hlt    
  41c881:	(bad)  [esi]
  41c883:	sti    
  41c884:	stc    
  41c885:	jmp    0x41c828
  41c887:	mov    esp,0xcff7fd41
  41c88c:	mov    ebp,esi
  41c88e:	sbb    esp,0x2
  41c891:	int3   
  41c892:	jp     0x41c855
  41c894:	fidiv  DWORD PTR [esi+0x36e7870]
  41c89a:	dec    ebx
  41c89b:	rcl    DWORD PTR [ecx-0x28d9da],cl
  41c8a1:	test   BYTE PTR [edi],bh
  41c8a3:	mov    edx,0xe19615f3
  41c8a8:	or     bl,BYTE PTR [ecx+0x73742e0c]
  41c8ae:	sbb    al,0xdc
  41c8b0:	sbb    ebp,ebx
  41c8b2:	inc    esp
  41c8b3:	popa   
  41c8b4:	jbe    0x41c860
  41c8b6:	xchg   DWORD PTR [edx+0x1f],edi
  41c8b9:	pop    ebp
  41c8ba:	adc    BYTE PTR ds:[ebx-0x29c58b5f],ch
  41c8c1:	out    dx,al
  41c8c2:	push   0xc49bee6
  41c8c7:	icebp  
  41c8c8:	nop
  41c8c9:	clc    
  41c8ca:	test   eax,0x53373301
  41c8cf:	mov    edx,ecx
  41c8d1:	jae    0x41c8a9
  41c8d3:	sub    edx,eax
  41c8d5:	xor    BYTE PTR [edi-0x1d860dbb],ah
  41c8db:	ja     0x41c950
  41c8dd:	xor    cl,dh
  41c8df:	inc    ecx
  41c8e0:	je     0x41c95c
  41c8e2:	mov    ah,0xe7
  41c8e4:	jnp    0x41c87c
  41c8e6:	das    
  41c8e7:	scas   eax,DWORD PTR es:[edi]
  41c8e8:	cmp    DWORD PTR [ebp+0x69b180f9],eax
  41c8ee:	in     al,dx
  41c8ef:	push   eax
  41c8f0:	inc    edi
  41c8f1:	cdq    
  41c8f2:	mov    ebx,0x76d6ed98
  41c8f7:	scas   eax,DWORD PTR es:[edi]
  41c8f8:	jo     0x41c8df
  41c8fa:	pop    ebx
  41c8fb:	es mov edi,0xc20eb68f
  41c901:	push   edx
  41c902:	cmp    BYTE PTR [ebp+ebp*2+0x383e66f6],bh
  41c909:	pop    esi
  41c90a:	sbb    ebx,ebp
  41c90c:	mov    eax,0x3b18
  41c911:	or     DWORD PTR ds:0x42856d,0x428405
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42846d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284c9
  41c929:	mov    DWORD PTR ds:0x42846d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428349
  41c93c:	sub    eax,DWORD PTR ds:0x428329
  41c942:	mov    ds:0x428349,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42856d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428331,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42856d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42846d
  41c99d:	sbb    DWORD PTR ds:0x428459,ecx
  41c9a3:	xor    DWORD PTR ds:0x42855d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284d1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428445,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428555
  41c9bf:	sub    DWORD PTR ds:0x428421,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42841d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284b5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428459,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428355,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42841d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428349
  41ca23:	xor    ecx,DWORD PTR ds:0x42841d
  41ca29:	adc    DWORD PTR ds:0x42831d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42841d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42846d,0x428451
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428351
  41ca4e:	xor    DWORD PTR ds:0x428541,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428349
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284d9
  41ca65:	mov    DWORD PTR ds:0x428349,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x4284f1,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428435,0x0
  41ca8c:	mov    DWORD PTR ds:0x428341,edi
  41ca92:	mov    DWORD PTR ds:0x42840d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428419,edx
  41caa3:	mov    DWORD PTR ds:0x4284e9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428435,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x4284f1,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428581
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42844d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428541
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428549
  41cae5:	and    ecx,DWORD PTR ds:0x428451
  41caeb:	mov    DWORD PTR ds:0x428549,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x4283f9
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41caa6
  41cb1f:	jp     0x41cae6
  41cb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb22:	jmp    0x41cb6d
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x2f
  41cb2b:	mov    ch,al
  41cb2d:	xchg   ebx,eax
  41cb2e:	int3   
  41cb2f:	mov    bl,BYTE PTR [ecx]
  41cb31:	test   BYTE PTR [ebp+0x5b],ah
  41cb34:	repnz out dx,al
  41cb36:	into   
  41cb37:	push   cs
  41cb38:	or     esp,ecx
  41cb3a:	leave  
  41cb3b:	(bad)  
  41cb3c:	in     al,0xed
  41cb3e:	add    al,BYTE PTR [edx+0x3c943e2c]
  41cb44:	repnz xor BYTE PTR [ebx*1+0x51d15f0b],al
  41cb4c:	fild   QWORD PTR [edx-0xc]
  41cb4f:	cli    
  41cb50:	shl    esp,cl
  41cb52:	ins    BYTE PTR es:[edi],dx
  41cb53:	mov    ebx,0xb0fab191
  41cb58:	or     ecx,DWORD PTR [edi+0x4c]
  41cb5b:	sbb    ebx,ebx
  41cb5d:	out    dx,al
  41cb5e:	mov    ebx,0x2ffd0a8f
  41cb63:	shr    BYTE PTR [edi+ebp*2],0x7e
  41cb67:	push   ebx
  41cb68:	in     eax,dx
  41cb69:	mov    esi,0xb72f15d3
  41cb6e:	mov    eax,ds:0xf214be6f
  41cb73:	dec    edx
  41cb74:	cmova  esp,ecx
  41cb77:	adc    BYTE PTR [ebp-0x66c156c6],dh
  41cb7d:	pop    ds
  41cb7e:	js     0x41cb44
  41cb80:	(bad)  
  41cb81:	idiv   BYTE PTR [eax]
  41cb83:	mov    esi,0x4e3df66b
  41cb88:	es jo  0x41cbf5
  41cb8b:	push   esi
  41cb8c:	mov    ebp,0xc6a23e95
  41cb91:	call   FWORD PTR [ebx-0x71]
  41cb94:	outs   dx,DWORD PTR ds:[esi]
  41cb95:	xor    al,0xd1
  41cb97:	test   al,0xba
  41cb99:	stos   BYTE PTR es:[edi],al
  41cb9a:	cmp    BYTE PTR [eax],0x28
  41cb9d:	inc    ecx
  41cb9e:	sub    DWORD PTR [ecx+0x37],0xffffffa7
  41cba2:	push   0x60
  41cba4:	and    esi,DWORD PTR [ecx+0x21]
  41cba7:	adc    eax,0x6a1ebf6b
  41cbac:	test   eax,0x7a8bdce8
  41cbb1:	mov    al,0x5d
  41cbb3:	jg     0x41cb3f
  41cbb5:	in     eax,dx
  41cbb6:	pushf  
  41cbb7:	and    eax,0x8e2a77fd
  41cbbc:	pusha  
  41cbbd:	mov    esi,0xe65a1474
  41cbc2:	pop    ecx
  41cbc3:	ds jbe 0x41cc2d
  41cbc6:	mov    ecx,0xf46b992a
  41cbcb:	test   eax,0x1db2f140
  41cbd0:	clc    
  41cbd1:	ins    DWORD PTR es:[edi],dx
  41cbd2:	adc    eax,0x97a87349
  41cbd7:	lea    esi,[ebx+0x60]
  41cbda:	mov    ah,0xfb
  41cbdc:	fwait
  41cbdd:	shr    DWORD PTR [edi+0x63eb7031],0x2f
  41cbe4:	or     eax,0x5125d07c
  41cbe9:	aaa    
  41cbea:	inc    esi
  41cbeb:	fwait
  41cbec:	sub    al,0x62
  41cbee:	mov    esp,0x2f817cb7
  41cbf3:	jnp    0x41cb8b
  41cbf5:	cld    
  41cbf6:	and    esi,0xfffffffe
  41cbf9:	iret   
  41cbfa:	inc    esp
  41cbfb:	sub    al,0xaa
  41cbfd:	out    dx,al
  41cbfe:	xchg   esp,eax
  41cbff:	push   edi
  41cc00:	in     al,dx
  41cc01:	jecxz  0x41cc7b
  41cc03:	test   edx,edx
  41cc05:	sub    esp,DWORD PTR [ecx-0xbbd5a97]
  41cc0b:	dec    ebp
  41cc0c:	sar    esp,cl
  41cc0e:	mov    al,0xd5
  41cc10:	loopne 0x41cc28
  41cc12:	(bad)  
  41cc13:	fdiv   DWORD PTR [eax-0x4a159b6]
  41cc19:	jmp    0xd012aa61
  41cc1e:	sbb    eax,0x3357d682
  41cc23:	add    eax,0x641c4b4c
  41cc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc29:	fs pop esi
  41cc2b:	(bad)  
  41cc2d:	pop    ebp
  41cc2e:	cdq    
  41cc2f:	fst    DWORD PTR [ebp+0x5d]
  41cc32:	or     al,0x3d
  41cc34:	(bad)  
  41cc35:	(bad)  
  41cc36:	gs push esi
  41cc38:	jo     0x41cbd4
  41cc3a:	inc    edx
  41cc3b:	retf   0x45ff
  41cc3e:	mov    ds:0x563879aa,al
  41cc43:	lds    ebp,FWORD PTR [esi+0x122c12a5]
  41cc49:	and    edi,eax
  41cc4b:	or     al,0x7c
  41cc4d:	push   0xffffffe3
  41cc4f:	mov    esp,0xc076e15e
  41cc54:	clc    
  41cc55:	sbb    al,BYTE PTR [ebx-0x74]
  41cc58:	sbb    eax,0xef0e5f9d
  41cc5d:	aad    0x9c
  41cc5f:	push   0x1f0e51d1
  41cc64:	icebp  
  41cc65:	mov    ah,al
  41cc67:	shr    cl,1
  41cc69:	mov    gs,WORD PTR [ecx]
  41cc6b:	jo     0x41cc43
  41cc6d:	jg     0x41cc22
  41cc6f:	in     al,0xb9
  41cc71:	xor    DWORD PTR [eax+0x279a1171],edx
  41cc77:	fst    DWORD PTR [ecx]
  41cc79:	or     edi,edx
  41cc7b:	jns    0x41cce6
  41cc7d:	ret    0xc0bf
  41cc80:	repnz (bad) 
  41cc82:	rcr    BYTE PTR [ebx+eax*8+0x69],1
  41cc86:	mov    fs,ecx
  41cc88:	fwait
  41cc89:	inc    esi
  41cc8a:	mov    al,ds:0xc0dad0f2
  41cc8f:	adc    DWORD PTR [ebx-0x737b1bbc],esi
  41cc95:	sbb    ebp,ebp
  41cc97:	retf   0x7eec
  41cc9a:	mov    cl,0xb8
  41cc9c:	cli    
  41cc9d:	aaa    
  41cc9e:	dec    eax
  41cc9f:	sbb    edi,DWORD PTR [edi+0x1c]
  41cca2:	inc    edx
  41cca3:	cld    
  41cca4:	adc    dh,BYTE PTR [eax-0x2e]
  41cca7:	jmp    0xd2f3356
  41ccac:	dec    esi
  41ccad:	stc    
  41ccae:	inc    eax
  41ccaf:	mov    cl,0x3c
  41ccb1:	push   ebp
  41ccb2:	daa    
  41ccb3:	mov    eax,ds:0xfbd68ed6
  41ccb8:	loopne 0x41cc5c
  41ccba:	data16 cmp BYTE PTR [eax-0x11],dl
  41ccbe:	or     cl,BYTE PTR [edx*8-0xc764a05]
  41ccc5:	fld    QWORD PTR [ecx+edi*2]
  41ccc8:	mov    BYTE PTR [esi+eax*1],al
  41cccb:	leave  
  41cccc:	outs   dx,BYTE PTR ds:[esi]
  41cccd:	sbb    cl,BYTE PTR [esp+eiz*2-0x2e]
  41ccd1:	test   al,ah
  41ccd3:	sti    
  41ccd4:	into   
  41ccd5:	mov    DWORD PTR [edi],eax
  41ccd7:	pop    ebp
  41ccd8:	xor    BYTE PTR ds:0xa78f557e,bl
  41ccde:	(bad)  
  41cce0:	sbb    bh,dh
  41cce2:	hlt    
  41cce3:	loopne 0x41cd3d
  41cce5:	mov    ebx,edx
  41cce7:	in     eax,dx
  41cce8:	out    dx,eax
  41cce9:	cld    
  41ccea:	outs   dx,DWORD PTR ds:[esi]
  41cceb:	dec    DWORD PTR [ecx-0x8ae0bee]
  41ccf1:	shl    bh,0x61
  41ccf4:	xchg   ecx,eax
  41ccf5:	inc    ebx
  41ccf6:	mov    ebx,ecx
  41ccf8:	push   ebx
  41ccf9:	(bad)  
  41ccfb:	fadd   DWORD PTR [edi+edi*4]
  41ccfe:	push   ss
  41ccff:	out    0x8f,al
  41cd01:	rcl    BYTE PTR [eax-0x27],1
  41cd04:	repz mov ch,0x3e
  41cd07:	add    DWORD PTR [edi+eax*2],esp
  41cd0a:	cdq    
  41cd0b:	bound  esp,QWORD PTR [ecx-0x791ea504]
  41cd11:	enter  0x31e2,0x84
  41cd15:	push   ecx
  41cd16:	jp     0x41cd4d
  41cd18:	bound  esi,QWORD PTR ds:0x4702a6d8
  41cd1e:	pushf  
  41cd1f:	icebp  
  41cd20:	push   edx
  41cd21:	retf   
  41cd22:	cld    
  41cd23:	or     DWORD PTR [esp+ebp*4+0x14],edi
  41cd27:	push   cs
  41cd28:	sbb    BYTE PTR [ecx-0x74],al
  41cd2b:	xor    eax,DWORD PTR [edx+edi*8]
  41cd2e:	rol    ecx,0xfc
  41cd31:	sub    bh,cl
  41cd33:	aam    0x6f
  41cd35:	inc    ebx
  41cd36:	mov    BYTE PTR [esi+0x1db50bdf],cl
  41cd3c:	or     BYTE PTR [edx],bh
  41cd3e:	sub    eax,0x199f003e
  41cd43:	sbb    BYTE PTR [ebx],ah
  41cd45:	pop    ds
  41cd46:	inc    esp
  41cd47:	mov    al,0xaf
  41cd49:	push   ds
  41cd4a:	mov    ch,0x3a
  41cd4c:	push   0xb5e2c008
  41cd51:	cmp    ah,BYTE PTR [edi-0x856ebcc]
  41cd57:	inc    edi
  41cd58:	push   es
  41cd59:	daa    
  41cd5a:	mov    dh,0x2c
  41cd5c:	pop    edx
  41cd5d:	ss sti 
  41cd5f:	jb     0x41cd7a
  41cd61:	push   ecx
  41cd62:	and    eax,0x475a5fc3
  41cd67:	das    
  41cd68:	mov    ecx,0xe7c92aaf
  41cd6d:	lea    ebp,[ebx-0x121c84fa]
  41cd73:	sti    
  41cd74:	pop    ecx
  41cd75:	les    edx,FWORD PTR [ecx+0x3866f546]
  41cd7b:	(bad)
  41cd7e:	jo     0x41cd8a
  41cd80:	lds    edi,FWORD PTR [esi+0x1a8b41ee]
  41cd86:	repz inc ebx
  41cd88:	xor    al,BYTE PTR [ebx+0x61c1205c]
  41cd8e:	loop   0x41cdb8
  41cd90:	mov    bh,0x44
  41cd92:	out    0x52,eax
  41cd94:	jmp    0x675a8af
  41cd99:	cmp    eax,0x80c2aac0
  41cd9e:	mov    ecx,0x5267d299
  41cda3:	push   DWORD PTR [esi-0xfea2b38]
  41cda9:	cmp    ebp,ecx
  41cdab:	and    DWORD PTR [esi+0x56],eax
  41cdae:	mov    edx,0xa78bbec9
  41cdb3:	add    eax,edx
  41cdb5:	sti    
  41cdb6:	push   ds
  41cdb7:	inc    ebp
  41cdb8:	int3   
  41cdb9:	in     al,dx
  41cdba:	add    BYTE PTR [ebx-0x2864ef99],dl
  41cdc0:	add    bh,BYTE PTR [ecx]
  41cdc2:	loope  0x41ce03
  41cdc4:	fnstcw WORD PTR [ecx-0x49127b6d]
  41cdca:	in     al,dx
  41cdcb:	push   ecx
  41cdcc:	inc    eax
  41cdcd:	pop    es
  41cdce:	popa   
  41cdcf:	sbb    dl,BYTE PTR [edi]
  41cdd1:	or     BYTE PTR [eax+0x1f],cl
  41cdd4:	(bad)  
  41cdd6:	xor    DWORD PTR [edx-0x666de988],edx
  41cddc:	ins    BYTE PTR es:[edi],dx
  41cddd:	cmp    al,BYTE PTR [edi-0x6]
  41cde0:	adc    al,0xa1
  41cde2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde3:	xor    esp,DWORD PTR [edx]
  41cde5:	push   edi
  41cde6:	(bad)  
  41cde7:	popa   
  41cde8:	mov    ds:0x9d2f413e,al
  41cded:	mov    ds:0xd09998f3,al
  41cdf2:	mov    bh,0xfb
  41cdf4:	ins    BYTE PTR es:[edi],dx
  41cdf5:	fisttp DWORD PTR [eax+0x59]
  41cdf8:	jecxz  0x41cdc5
  41cdfa:	imul   esp,DWORD PTR [edi+0x67ddb698],0x1497fa95
  41ce04:	dec    ebp
  41ce05:	and    edi,ebx
  41ce07:	mov    eax,ds:0x5563cb35
  41ce0c:	dec    esp
  41ce0d:	rol    DWORD PTR [edx+0x599d609c],cl
  41ce13:	loopne 0x41ce57
  41ce15:	push   esp
  41ce16:	or     bh,BYTE PTR [esi+0x1a]
  41ce19:	loop   0x41ce96
  41ce1b:	push   ds
  41ce1c:	aam    0x20
  41ce1e:	xor    ah,BYTE PTR [ebx]
  41ce20:	pusha  
  41ce21:	lahf   
  41ce22:	call   DWORD PTR [ebp+0x6b3ad773]
  41ce28:	or     esp,DWORD PTR [edx+0x35]
  41ce2b:	mov    ebx,0x60f418ec
  41ce30:	mov    ecx,0xf9127a00
  41ce35:	or     al,0x45
  41ce37:	xor    al,0xda
  41ce39:	in     eax,0xf
  41ce3b:	lock rcr DWORD PTR [edx+0x4e],0x85
  41ce40:	mov    esi,0x7f66db11
  41ce45:	or     DWORD PTR [edx-0x43],0xffffff97
  41ce49:	fnsave [ecx]
  41ce4b:	xchg   BYTE PTR [edi+0xc2f7ffe],cl
  41ce51:	div    BYTE PTR [ebx]
  41ce53:	push   0x49e9e861
  41ce58:	mov    DWORD PTR [ecx+edi*4],edx
  41ce5b:	adc    dl,BYTE PTR [ebx-0x285fbb92]
  41ce61:	popa   
  41ce62:	mov    ebp,0x7ca4390e
  41ce67:	sub    esi,esp
  41ce69:	data16 int 0xfb
  41ce6c:	or     BYTE PTR [eax],0x98
  41ce6f:	sub    ch,BYTE PTR [ecx]
  41ce71:	sub    DWORD PTR [esi+0x6f],ebp
  41ce74:	push   ecx
  41ce75:	dec    ebx
  41ce76:	push   ecx
  41ce77:	fist   WORD PTR [eax]
  41ce79:	nop
  41ce7a:	stos   BYTE PTR es:[edi],al
  41ce7b:	cdq    
  41ce7c:	retf   
  41ce7d:	cmp    ebp,DWORD PTR [edi]
  41ce7f:	and    edi,DWORD PTR [edx]
  41ce81:	jle    0x41ceba
  41ce83:	outs   dx,BYTE PTR ds:[esi]
  41ce84:	cld    
  41ce85:	(bad)  
  41ce86:	mov    bl,0x2e
  41ce88:	adc    DWORD PTR [esi+ebp*2-0x7],0x5e6b5425
  41ce90:	imul   ecx,DWORD PTR [ebx+0x4b],0xffffffdd
  41ce94:	mov    BYTE PTR [ebx+0x5cacef58],ah
  41ce9a:	xlat   BYTE PTR ds:[ebx]
  41ce9b:	ins    BYTE PTR es:[edi],dx
  41ce9c:	ror    bh,0x64
  41ce9f:	call   0xa8295d02
  41cea4:	and    ecx,DWORD PTR [esi+ebx*1+0x5a]
  41cea8:	rol    DWORD PTR [edi],0xfe
  41ceab:	mov    ah,BYTE PTR [ebx-0x44]
  41ceae:	pop    edi
  41ceaf:	lock addr16 push ss
  41ceb2:	mov    cl,BYTE PTR [ebx+0xb]
  41ceb5:	sub    ecx,DWORD PTR [ebx+ebx*8+0x7]
  41ceb9:	mov    dh,0x16
  41cebb:	xchg   DWORD PTR [ebx-0x70d2fb59],edx
  41cec1:	ds dec ebx
  41cec3:	mov    dh,0x10
  41cec5:	mov    bl,0xf9
  41cec7:	xor    eax,0x7c42058d
  41cecc:	arpl   WORD PTR [ebx+0x7e],sp
  41cecf:	in     al,dx
  41ced0:	lahf   
  41ced1:	pop    ecx
  41ced2:	shld   ebp,ecx,0xe3
  41ced6:	call   0x60a06302
  41cedb:	xchg   edx,eax
  41cedc:	je     0x41ceb7
  41cede:	in     eax,0x37
  41cee0:	xchg   ecx,eax
  41cee1:	pushf  
  41cee2:	xor    cl,BYTE PTR [ebx-0x3fae2b2a]
  41cee8:	out    dx,al
  41cee9:	jbe    0x41ceb5
  41ceeb:	mov    al,0x25
  41ceed:	jne    0x41ce87
  41ceef:	mov    ebx,0x77f69a6d
  41cef4:	mov    DWORD PTR [ebp-0x128],0x7537
  41cefe:	xor    DWORD PTR ds:0x428469,edx
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284d9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428441,0x428545
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428541,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284c5,0x42832d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428361,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428555,0x0
  41cf60:	mov    DWORD PTR ds:0x4284f1,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428471
  41cf70:	mov    ecx,DWORD PTR ds:0x42846d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284e9
  41cf86:	mov    DWORD PTR ds:0x42833d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428555,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42854d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42832d
  41cfbb:	sbb    DWORD PTR ds:0x42856d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42842d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284e9
  41cfcd:	xor    DWORD PTR ds:0x4284e5,edi
  41cfd3:	mov    DWORD PTR ds:0x428425,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428541
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428561,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428439,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42832d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428565
  41d021:	mov    DWORD PTR ds:0x428431,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42845d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42854d,edx
  41d040:	cmp    DWORD PTR ds:0x42832d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428361
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284c9
  41d060:	mov    esi,DWORD PTR ds:0x428501
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284d9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428345,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428551
  41d07d:	sbb    DWORD PTR ds:0x428455,esi
  41d083:	sbb    DWORD PTR ds:0x428559,0x428409
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42835d,0x0
  41d096:	mov    DWORD PTR ds:0x4284e1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x4284f1,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42854d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42835d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42853d,edx
  41d0df:	xor    DWORD PTR ds:0x428349,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428321,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428439,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428345,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428551
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428329
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284dd,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428345,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428539
  41d15b:	add    esi,DWORD PTR ds:0x42845d
  41d161:	mov    DWORD PTR ds:0x428539,esi
  41d167:	mov    esi,DWORD PTR ds:0x428401
  41d16d:	and    esi,DWORD PTR ds:0x428429
  41d173:	mov    DWORD PTR ds:0x428401,esi
  41d179:	sbb    DWORD PTR ds:0x428471,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42843d
  41d189:	add    DWORD PTR ds:0x4284c5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428439
  41d196:	adc    esi,DWORD PTR ds:0x428355
  41d19c:	mov    DWORD PTR ds:0x428439,esi
  41d1a2:	xor    DWORD PTR ds:0x428329,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42834d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428335,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42844d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428541,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428469,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428321
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42856d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42844d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428465
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x4283f5
  41d240:	adc    DWORD PTR ds:0x4284c5,esi
  41d246:	sub    DWORD PTR ds:0x4284d9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428551,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428429,0x0
  41d265:	mov    DWORD PTR ds:0x42834d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284bd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42853d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42840d
  41d28c:	cmp    DWORD PTR ds:0x428429,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428233
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428539
  41d2be:	xor    DWORD PTR ds:0x4284d5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428461,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42854d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428561
  41d2dc:	add    DWORD PTR ds:0x42833d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428509
  41d2ec:	mov    edx,DWORD PTR ds:0x4285a1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42842d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284c9,0x0
  41d329:	mov    DWORD PTR ds:0x4284f1,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428341
  41d33a:	mov    ecx,DWORD PTR ds:0x428421
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x4283fd,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428359,edi
  41d355:	cmp    DWORD PTR ds:0x4284c9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428385
  41d377:	mov    edx,DWORD PTR ds:0x4285a9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284a5
  41d38e:	mov    edx,DWORD PTR ds:0x42859d
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284e1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42856d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283c9
  41d3b2:	mov    edx,DWORD PTR ds:0x42847d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x428395
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283a1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x4283f9
  41d412:	xor    DWORD PTR ds:0x4284c5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42856d,0x428329
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428559,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428419,0x0
  41d45e:	mov    DWORD PTR ds:0x42853d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284b9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284c9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428361,edx
  41d488:	cmp    DWORD PTR ds:0x428419,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428561
  41d49a:	push   0x428155
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428535,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428379
  41d4c0:	mov    esi,DWORD PTR ds:0x4283d5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428561,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428565,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42835d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42856d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428365,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428551,0x0
  41d53c:	mov    DWORD PTR ds:0x428455,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428455,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428365,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428551,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42826f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428329,0x7656
  41d59f:	sbb    DWORD PTR ds:0x4284f1,edx
  41d5a5:	xor    DWORD PTR ds:0x428339,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428429
  41d5b5:	add    edx,DWORD PTR ds:0x4284cd
  41d5bb:	mov    DWORD PTR ds:0x428429,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428329
  41d5ca:	add    DWORD PTR ds:0x4284e5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x6f2083dd]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0x7f
  41d64a:	test   BYTE PTR [edi],bh
  41d64c:	les    eax,FWORD PTR [eax+0x10]
  41d64f:	pusha  
  41d650:	push   esi
  41d651:	sahf   
  41d652:	adc    BYTE PTR [edx+ebx*4-0x22],dh
  41d656:	adc    edx,DWORD PTR [ecx+edi*4+0x49]
  41d65a:	mov    esp,0xa23de069
  41d65f:	jb     0x41d6cb
  41d661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d662:	push   ebp
  41d663:	cmp    al,0x11
  41d665:	jne    0x41d616
  41d667:	into   
  41d668:	data16 sub al,0xb5
  41d66b:	mov    cl,0xff
  41d66d:	push   ecx
  41d66e:	push   esp
  41d66f:	je     0x41d66b
  41d671:	dec    esi
  41d672:	dec    ebp
  41d673:	loop   0x41d69d
  41d675:	mov    ch,0xff
  41d677:	int    0x17
  41d679:	or     cl,BYTE PTR [eax+0x7f0036b4]
  41d67f:	daa    
  41d680:	and    al,0xc7
  41d682:	dec    eax
  41d683:	test   BYTE PTR [eax],bl
  41d685:	fcmovne st,st(6)
  41d687:	jnp    0x41d6b9
  41d689:	cmc    
  41d68a:	pop    edx
  41d68b:	imul   ecx,DWORD PTR [ebp+0x6b9f722e],0x38
  41d692:	test   BYTE PTR ds:0x3f2615dd,dl
  41d698:	mov    ebp,0x2fd25396
  41d69d:	aaa    
  41d69e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d6a0:	(bad)  [eax-0x1cab29f]
  41d6a6:	scas   al,BYTE PTR es:[edi]
  41d6a7:	clc    
  41d6a8:	aad    0xb9
  41d6aa:	mov    bh,0x2
  41d6ac:	out    dx,al
  41d6ad:	fmul   QWORD PTR [edi+0x4]
  41d6b0:	ss mov ebp,0x83d3c731
  41d6b6:	mov    dl,0xc2
  41d6b8:	or     ecx,DWORD PTR [esp+ebx*4-0x43725ea1]
  41d6bf:	out    0xe8,al
  41d6c1:	neg    BYTE PTR [ebx+0x1ef1b74e]
  41d6c7:	mov    esp,0x3446ef1b
  41d6cc:	stos   DWORD PTR es:[edi],eax
  41d6cd:	loope  0x41d698
  41d6cf:	mov    eax,0x7157e8b1
  41d6d4:	xchg   esp,eax
  41d6d5:	or     ch,BYTE PTR [edx]
  41d6d7:	pop    ss
  41d6d8:	xchg   edi,eax
  41d6d9:	dec    edi
  41d6da:	jns    0x41d72f
  41d6dc:	push   ecx
  41d6dd:	adc    DWORD PTR [edx-0x7b],ebp
  41d6e0:	jge    0x41d740
  41d6e2:	xor    esp,esp
  41d6e4:	pop    ebp
  41d6e5:	mov    ebx,0x4df2300
  41d6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6eb:	test   eax,0x60c130c5
  41d6f0:	(bad)  
  41d6f1:	data16 cmc 
  41d6f3:	sub    al,dl
  41d6f5:	cmp    BYTE PTR [esi+0x735cdd48],bh
  41d6fb:	dec    edi
  41d6fc:	mov    esp,0xb4a7f1ae
  41d701:	inc    esi
  41d702:	sti    
  41d703:	sub    BYTE PTR [eax],cl
  41d705:	(bad)  
  41d706:	out    0x88,al
  41d708:	cmp    eax,0x6e2dbedd
  41d70d:	out    dx,al
  41d70e:	sbb    BYTE PTR [ebp+0xa082872],0x40
  41d715:	add    DWORD PTR [ebx+0x10],ecx
  41d718:	fisttp WORD PTR [ebx-0x4d251609]
  41d71e:	mov    ebx,0x42590ad5
  41d723:	jne    0x41d79b
  41d725:	cs pop ss
  41d727:	sub    edx,edx
  41d729:	test   esi,ebp
  41d72b:	pop    esp
  41d72c:	inc    eax
  41d72d:	jno    0x41d733
  41d72f:	ja     0x41d717
  41d731:	pop    edi
  41d732:	rcl    BYTE PTR [esi],0x4
  41d735:	and    eax,0x1f6e2944
  41d73a:	xchg   DWORD PTR [esi-0x3],ebx
  41d73d:	push   0xcc986c2a
  41d742:	push   esp
  41d743:	cld    
  41d744:	mov    esi,0x5b6f46d5
  41d749:	in     eax,dx
  41d74a:	push   esp
  41d74b:	xor    ebp,ecx
  41d74d:	mov    bl,0xd9
  41d74f:	xor    al,ah
  41d751:	or     BYTE PTR [ebx+ecx*1-0x7f],0xb9
  41d756:	(bad)  
  41d757:	shl    cl,cl
  41d759:	lea    ebx,[esi+0x12]
  41d75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d75d:	int3   
  41d75e:	push   es
  41d75f:	(bad)  
  41d761:	or     DWORD PTR [ebx],eax
  41d763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d764:	jecxz  0x41d764
  41d766:	in     eax,0xa1
  41d768:	loopne 0x41d796
  41d76a:	pop    esp
  41d76b:	popf   
  41d76c:	and    DWORD PTR [edi],edx
  41d76e:	pop    edx
  41d76f:	cmp    DWORD PTR [ecx+0x648f6b8d],ecx
  41d775:	inc    esi
  41d776:	cmp    al,0x9c
  41d778:	xchg   ecx,eax
  41d779:	xchg   ebx,eax
  41d77a:	push   ecx
  41d77b:	fcomip st,st(7)
  41d77d:	jbe    0x41d7a7
  41d77f:	adc    ecx,edi
  41d781:	add    al,0x34
  41d783:	add    ah,cl
  41d785:	shr    eax,1
  41d787:	jp     0x41d733
  41d789:	test   BYTE PTR [ebp-0x16cc0eb3],0xef
  41d790:	sub    DWORD PTR [eax+0x4f],eax
  41d793:	pop    eax
  41d794:	push   edx
  41d795:	xor    ecx,DWORD PTR [ebx-0x7e]
  41d798:	jmp    0x4767d5d2
  41d79d:	sbb    eax,0xd11f2d68
  41d7a2:	sub    al,0x2c
  41d7a4:	out    dx,eax
  41d7a5:	mov    ds:0x2d4f4791,eax
  41d7aa:	sub    bl,BYTE PTR es:[ebx]
  41d7ad:	scas   eax,DWORD PTR es:[edi]
  41d7ae:	jns    0x41d792
  41d7b0:	data16 ins BYTE PTR es:[edi],dx
  41d7b2:	fstp   TBYTE PTR [edi+0x5585591a]
  41d7b8:	mov    ds:0xcb5d9350,eax
  41d7bd:	inc    ebx
  41d7be:	adc    dl,BYTE PTR [ecx]
  41d7c0:	retf   
  41d7c1:	fwait
  41d7c2:	daa    
  41d7c3:	loop   0x41d74e
  41d7c5:	xchg   ebp,eax
  41d7c6:	repnz sbb al,0xb7
  41d7c9:	out    0xfb,al
  41d7cb:	jl     0x41d7a8
  41d7cd:	jae    0x41d7b0
  41d7cf:	jo     0x41d77e
  41d7d1:	dec    edx
  41d7d2:	outs   dx,BYTE PTR ds:[esi]
  41d7d3:	mov    edi,0x1b38c20b
  41d7d8:	mov    al,ds:0x6d520975
  41d7dd:	push   ss
  41d7de:	repz pop esi
  41d7e0:	in     al,dx
  41d7e1:	xchg   esi,eax
  41d7e2:	int    0x91
  41d7e4:	or     dl,BYTE PTR [eax+eax*1+0x5383495f]
  41d7eb:	fsub   DWORD PTR [edx]
  41d7ed:	add    dl,dh
  41d7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f0:	ret    
  41d7f1:	stos   DWORD PTR es:[edi],eax
  41d7f2:	dec    ecx
  41d7f3:	test   DWORD PTR [edi],0x27f7d733
  41d7f9:	pop    eax
  41d7fa:	icebp  
  41d7fb:	sbb    al,0x20
  41d7fd:	and    al,0x28
  41d7ff:	jmp    0xdd92:0x23321f04
  41d806:	sub    eax,0xa1062f8f
  41d80b:	lds    ebp,FWORD PTR [edx-0x18]
  41d80e:	sbb    edi,ebp
  41d810:	dec    esi
  41d811:	aam    0x52
  41d813:	rol    DWORD PTR [esi+ebp*2],1
  41d816:	inc    edx
  41d817:	xor    al,0xff
  41d819:	dec    ebp
  41d81a:	(bad)  
  41d81b:	lahf   
  41d81c:	inc    ebx
  41d81d:	sbb    BYTE PTR gs:[edx+0x35],bl
  41d821:	xor    bh,dl
  41d823:	mov    bh,0x2e
  41d825:	outs   dx,BYTE PTR ds:[esi]
  41d826:	jbe    0x41d7b7
  41d828:	jmp    0xc133:0x1c48cb96
  41d82f:	mov    esi,0x2ee63920
  41d834:	mov    ah,0x77
  41d836:	and    al,0xcc
  41d838:	xchg   ebp,eax
  41d839:	adc    esp,ebp
  41d83b:	adc    al,0x9b
  41d83d:	jg     0x41d7ee
  41d83f:	or     eax,0x7a65b49
  41d844:	dec    ebx
  41d845:	sete   BYTE PTR [ebx]
  41d848:	lea    ebp,[esi]
  41d84a:	cmp    al,BYTE PTR [esi+0x4e97fce7]
  41d850:	push   cs
  41d851:	repz cwde 
  41d853:	cdq    
  41d854:	cmp    eax,0xe0bb8522
  41d859:	cli    
  41d85a:	enter  0x92b6,0x2a
  41d85e:	xchg   esi,eax
  41d85f:	cmp    DWORD PTR [ebp-0x5c],edx
  41d862:	mov    ch,0x67
  41d864:	mov    ch,0x46
  41d866:	xchg   edx,eax
  41d867:	arpl   WORD PTR [ebx-0x6d],dx
  41d86a:	xor    cl,bh
  41d86c:	pop    ds
  41d86d:	dec    edi
  41d86e:	sbb    DWORD PTR [esi],esp
  41d870:	inc    edi
  41d871:	mov    DWORD PTR [esp+ebp*8+0x1438fa54],eax
  41d878:	shl    DWORD PTR [eax-0x41],1
  41d87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d87c:	scas   eax,DWORD PTR es:[edi]
  41d87d:	sub    ebp,esp
  41d87f:	ss in  al,dx
  41d881:	mov    ebx,DWORD PTR [esi-0x45]
  41d884:	cwde   
  41d885:	cmp    dl,ch
  41d887:	jecxz  0x41d87e
  41d889:	push   edx
  41d88a:	sub    al,0xb7
  41d88c:	jae    0x41d8f9
  41d88e:	fld    QWORD PTR [edi-0x59e29897]
  41d894:	or     esp,DWORD PTR [ecx+0x7e755fa6]
  41d89a:	mov    edx,DWORD PTR [edx+ebx*8]
  41d89d:	add    eax,0x40c983af
  41d8a2:	out    0x2b,eax
  41d8a4:	jg     0x41d849
  41d8a6:	fcmovbe st,st(5)
  41d8a8:	xchg   ebx,eax
  41d8a9:	mov    bh,0xe4
  41d8ab:	outs   dx,DWORD PTR ds:[esi]
  41d8ac:	ret    
  41d8ad:	hlt    
  41d8ae:	cmp    al,0x43
  41d8b0:	adc    DWORD PTR [ebp-0x48],ebp
  41d8b3:	adc    esi,ebp
  41d8b5:	mov    bh,0xf3
  41d8b7:	pop    es
  41d8b8:	add    eax,DWORD PTR [edi-0x29]
  41d8bb:	rol    BYTE PTR [esp+eax*4+0x4509db1f],cl
  41d8c2:	mov    bh,BYTE PTR [esi+0x1953a59b]
  41d8c8:	mov    dl,0xc3
  41d8ca:	push   ecx
  41d8cb:	pusha  
  41d8cc:	repz jge 0x41d929
  41d8cf:	and    esp,DWORD PTR [ebp+eiz*2-0x2285e1f5]
  41d8d6:	jg     0x41d89d
  41d8d8:	pop    es
  41d8d9:	(bad)  
  41d8db:	fst    QWORD PTR ds:0x26557861
  41d8e1:	gs or  cl,bl
  41d8e4:	jecxz  0x41d903
  41d8e6:	dec    edx
  41d8e7:	inc    esi
  41d8e8:	add    eax,0x3f73e3e3
  41d8ed:	cmp    eax,0x40583ef1
  41d8f2:	xlat   BYTE PTR ds:[ebx]
  41d8f3:	scas   eax,DWORD PTR es:[edi]
  41d8f4:	add    BYTE PTR [esi+eiz*1],ch
  41d8f7:	sbb    ah,BYTE PTR [edx+0x25831ace]
  41d8fd:	push   ebp
  41d8fe:	mov    esi,0x9d596193
  41d903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d904:	mov    ch,0x9f
  41d906:	add    eax,0xd6f5ef11
  41d90b:	lds    ebp,FWORD PTR [esi-0x2290f09d]
  41d911:	mov    al,0x21
  41d913:	in     eax,0x2d
  41d915:	es pop eax
  41d917:	icebp  
  41d918:	jno    0x41d96e
  41d91a:	js     0x41d905
  41d91c:	dec    edi
  41d91d:	sahf   
  41d91e:	clc    
  41d91f:	mov    ss,WORD PTR [ebp+0x5c]
  41d922:	stos   DWORD PTR es:[edi],eax
  41d923:	pushf  
  41d924:	sbb    edx,DWORD PTR [esi-0x37b65e4b]
  41d92a:	push   es
  41d92b:	pop    esi
  41d92c:	sbb    esp,edi
  41d92e:	cmp    BYTE PTR [edx-0xd],dl
  41d931:	sub    ch,BYTE PTR [ebp+0x77]
  41d934:	aas    
  41d935:	ret    
  41d936:	cmp    ecx,DWORD PTR gs:[ecx-0x32]
  41d93a:	xor    ah,BYTE PTR ds:0xb67bde37
  41d940:	ds jecxz 0x41d8f2
  41d943:	popa   
  41d944:	fld    DWORD PTR [ecx+0x63]
  41d947:	es (bad) 
  41d949:	lock call 0x33830cc9
  41d94f:	fcomp  QWORD PTR [ebp+0x67]
  41d952:	add    BYTE PTR ds:0xbc0720ad,cl
  41d958:	xchg   DWORD PTR [edx-0x6c],ecx
  41d95b:	inc    edx
  41d95c:	add    al,0xd0
  41d95e:	stos   DWORD PTR es:[edi],eax
  41d95f:	dec    eax
  41d960:	cwde   
  41d961:	in     al,0xcb
  41d963:	(bad)  
  41d964:	std    
  41d965:	inc    esi
  41d966:	arpl   WORD PTR [esi+0x5c6b8fd9],sp
  41d96c:	sbb    DWORD PTR [ecx+0x44],ebx
  41d96f:	sub    eax,0x2d4ec095
  41d974:	es scas eax,DWORD PTR es:[edi]
  41d976:	adc    DWORD PTR [ecx],ebp
  41d978:	jmp    0xb83b:0x6bb0ef24
  41d97f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d980:	or     al,0xa0
  41d982:	push   edi
  41d983:	ret    
  41d984:	jecxz  0x41d97c
  41d986:	mov    bl,al
  41d988:	nop
  41d989:	add    eax,0xe6c37705
  41d98e:	aam    0x22
  41d990:	xchg   esp,eax
  41d991:	jno    0x41d9eb
  41d993:	cli    
  41d994:	fcmovnbe st,st(0)
  41d996:	and    BYTE PTR [eax],bl
  41d998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d999:	gs add eax,0xc91fde0a
  41d99f:	dec    ecx
  41d9a0:	pop    ecx
  41d9a1:	dec    edi
  41d9a2:	leave  
  41d9a3:	add    edi,DWORD PTR [ebp-0x7c]
  41d9a6:	mov    ah,0xec
  41d9a8:	push   0x983927cf
  41d9ad:	xchg   ebx,eax
  41d9ae:	mov    dl,0x5c
  41d9b0:	retf   
  41d9b1:	scas   eax,DWORD PTR es:[edi]
  41d9b2:	es push eax
  41d9b4:	test   bh,al
  41d9b6:	mov    ecx,0xb1af79a5
  41d9bb:	mov    ebp,0x34661506
  41d9c0:	jg     0x41da15
  41d9c2:	sbb    eax,0x4c655653
  41d9c7:	jl     0x41d9f4
  41d9c9:	das    
  41d9ca:	fist   WORD PTR [ebp-0x16]
  41d9cd:	mov    bl,BYTE PTR [ebp+0x75b4e7c]
  41d9d3:	jne    0x41da35
  41d9d5:	cmp    ah,bh
  41d9d7:	test   BYTE PTR [ecx],cl
  41d9d9:	cs or  eax,0xc30da7f7
  41d9df:	mov    eax,ds:0xafc0da09
  41d9e4:	inc    edx
  41d9e5:	shl    ch,0x62
  41d9e8:	adc    edi,ebx
  41d9ea:	bound  ecx,QWORD PTR [eax+ecx*1-0x4196f88b]
  41d9f1:	pop    ds
  41d9f2:	sbb    bl,bh
  41d9f4:	iret   
  41d9f5:	in     al,0xcc
  41d9f7:	dec    esp
  41d9f8:	add    eax,0x969843fc
  41d9fd:	inc    ebp
  41d9fe:	mov    ebp,0x7621c5e7
  41da03:	jno    0x41da32
  41da05:	and    bl,ch
  41da07:	mov    bh,0x67
  41da09:	dec    edi
  41da0a:	mov    ds:0x74e6e536,eax
  41da0f:	jns    0x41da60
  41da11:	lock stc 
  41da13:	mov    edx,DWORD PTR [ebp-0x150]
  41da19:	xor    eax,0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223e1
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	int3   
  41da4d:	and    BYTE PTR [edx+edx*4],bh
  41da50:	add    ebx,DWORD PTR [ecx-0x40]
  41da53:	mov    esi,0xbebec44a
  41da58:	and    BYTE PTR [ebx-0x52],dh
  41da5b:	fcom   QWORD PTR [esi+ecx*2]
  41da5e:	mov    ch,0xea
  41da60:	sbb    esi,esp
  41da62:	jp     0x41da25
  41da64:	sub    al,0x23
  41da66:	pminub mm4,QWORD PTR [eax]
  41da69:	cmp    DWORD PTR [eax-0x5],ebx
  41da6c:	adc    BYTE PTR [edx+0x62a81b15],0x46
  41da73:	sub    al,0xac
  41da75:	test   BYTE PTR [eax],bh
  41da77:	call   0xfb16:0x558615c4
  41da7e:	fcmovb st,st(0)
  41da80:	shl    DWORD PTR [ebx],cl
  41da82:	xor    ecx,edx
  41da84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da85:	xchg   esi,eax
  41da86:	pop    edi
  41da87:	sub    DWORD PTR [ebp-0x37],edi
  41da8a:	dec    esp
  41da8b:	push   cs
  41da8c:	inc    esi
  41da8d:	(bad)  
  41da8e:	into   
  41da8f:	je     0x41da34
  41da91:	sub    esp,DWORD PTR [eax+0xa7b4f8b]
  41da97:	ins    DWORD PTR es:[edi],dx
  41da98:	daa    
  41da99:	or     DWORD PTR [edi+0x532ab2a4],0x40
  41daa0:	mov    ebx,0x6e137769
  41daa5:	xor    bl,dh
  41daa7:	std    
  41daa8:	push   ebp
  41daa9:	(bad)  
  41daaa:	cld    
  41daab:	icebp  
  41daac:	or     DWORD PTR [esi],edi
  41daae:	lsl    esi,WORD PTR [ebx*2-0x1f2f35b0]
  41dab6:	out    0xa0,eax
  41dab8:	adc    BYTE PTR cs:[ebx+0x63],cl
  41dabc:	mov    DWORD PTR [ecx-0x1b],edx
  41dabf:	cmp    eax,0xefff214e
  41dac4:	jb     0x41db40
  41dac6:	push   0x6cf3e0f6
  41dacb:	mov    dl,0xb0
  41dace:	mov    bl,0x8d
  41dad0:	sbb    eax,ebp
  41dad2:	cmc    
  41dad3:	xor    cl,BYTE PTR [edx+esi*1]
  41dad6:	xor    al,0x7f
  41dad8:	arpl   sp,bx
  41dada:	pop    ecx
  41dadb:	push   edi
  41dadc:	shl    BYTE PTR [ecx+0x1becd05],0x58
  41dae3:	call   FWORD PTR [ecx+0xc]
  41dae6:	push   ecx
  41dae7:	in     al,dx
  41dae8:	or     al,0x3b
  41daea:	minps  xmm1,XMMWORD PTR [esi+0x64]
  41daee:	mul    eax
  41daf0:	scas   eax,DWORD PTR es:[edi]
  41daf1:	add    WORD PTR [ebp-0x21],dx
  41daf5:	jbe    0x41db73
  41daf7:	xor    dh,al
  41daf9:	adc    eax,DWORD PTR [eax-0x6f]
  41dafc:	nop
  41dafd:	icebp  
  41dafe:	or     eax,0xbbd262dd
  41db03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db04:	mov    dh,0x9a
  41db06:	cli    
  41db07:	aam    0xfa
  41db09:	xchg   ebp,eax
  41db0a:	jge    0x41db78
  41db0c:	xor    BYTE PTR [edx+0x530c3ef2],dh
  41db12:	mov    bh,0x8d
  41db14:	cmc    
  41db15:	fnstenv [eax-0x3a]
  41db18:	or     eax,0x316b4d7f
  41db1d:	fs out 0x59,eax
  41db20:	imul   ebx,DWORD PTR [edi],0x4a6a6f1f
  41db26:	dec    ebx
  41db27:	xchg   ch,ah
  41db29:	pop    ebx
  41db2a:	adc    BYTE PTR [ebx],ch
  41db2c:	and    edx,DWORD PTR [edx]
  41db2e:	adc    dl,BYTE PTR [edi+0x5f]
  41db31:	mov    bl,0xb5
  41db33:	pop    ds
  41db34:	sbb    eax,0x70ae93ea
  41db39:	xor    BYTE PTR [eax],ah
  41db3b:	or     dl,BYTE PTR [edx]
  41db3d:	pop    esp
  41db3e:	jo     0x41db2b
  41db40:	push   eax
  41db41:	fdivr  QWORD PTR [edi+0x61]
  41db44:	push   ebp
  41db45:	or     esi,DWORD PTR [esi+0x39]
  41db48:	cmp    bl,BYTE PTR [edi+0x7ab02114]
  41db4e:	lahf   
  41db4f:	push   cs
  41db50:	into   
  41db51:	cmp    cl,0xc8
  41db54:	jle    0x41db63
  41db56:	mov    cl,0x6f
  41db58:	mov    edx,DWORD PTR [ecx+0x53]
  41db5b:	test   eax,0x6e6bf410
  41db60:	adc    bh,dh
  41db62:	cwde   
  41db63:	ds push edi
  41db65:	dec    eax
  41db66:	sbb    esp,esi
  41db68:	jae    0x41dbe0
  41db6a:	es scas eax,DWORD PTR es:[edi]
  41db6c:	les    edi,FWORD PTR [ebx]
  41db6e:	inc    ebp
  41db6f:	cli    
  41db70:	jge    0x41db43
  41db72:	xchg   edx,eax
  41db73:	cmp    DWORD PTR [ecx+eax*2+0x33ebbb4],eax
  41db7a:	lods   al,BYTE PTR ds:[esi]
  41db7b:	mov    ebp,0xe4140990
  41db80:	shr    DWORD PTR [edi+0x79],cl
  41db83:	aad    0x73
  41db85:	or     bh,al
  41db87:	repz pop eax
  41db89:	cmp    DWORD PTR [ebx-0x37301afb],0x426dc2f2
  41db93:	mov    ebx,0x577cee5f
  41db98:	ins    BYTE PTR es:[edi],dx
  41db99:	and    eax,0x812a4991
  41db9e:	bound  esp,QWORD PTR [esp+esi*2-0x56]
  41dba2:	push   ebp
  41dba3:	cmp    al,0x6f
  41dba5:	mov    edx,0x801eaebc
  41dbaa:	mov    ebx,0x9f674820
  41dbaf:	icebp  
  41dbb0:	and    ebp,ecx
  41dbb2:	mov    eax,DWORD PTR [ebx+0x2d]
  41dbb5:	mov    ecx,DWORD PTR [eax+0x41]
  41dbb8:	out    dx,eax
  41dbb9:	ss mov bh,0x6
  41dbbc:	fisttp DWORD PTR [edi]
  41dbbe:	xor    DWORD PTR [ebp+edx*2+0x35029b25],ebp
  41dbc5:	call   0x653c:0xd0cc1767
  41dbcc:	loope  0x41db71
  41dbce:	(bad)
  41dbd1:	inc    ebp
  41dbd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd3:	xor    edx,DWORD PTR [ebx+eax*4+0x765dac]
  41dbda:	inc    eax
  41dbdb:	push   esi
  41dbdc:	js     0x41dc18
  41dbde:	test   DWORD PTR [edi+0x44749685],eax
  41dbe4:	cld    
  41dbe5:	test   DWORD PTR [edi+0x2650c002],esi
  41dbeb:	pop    edi
  41dbec:	retf   0x3422
  41dbef:	xor    DWORD PTR ds:0x7ac026db,ebx
  41dbf5:	out    dx,eax
  41dbf6:	ins    BYTE PTR es:[edi],dx
  41dbf7:	in     al,0x32
  41dbf9:	popf   
  41dbfa:	pop    edi
  41dbfb:	mov    al,ds:0x6c2374b3
  41dc00:	jne    0x41dbc0
  41dc02:	mov    ss,WORD PTR [ebp+0x75]
  41dc05:	adc    al,0x6e
  41dc07:	mov    edi,0xafc0c6f0
  41dc0c:	jg     0x41dc73
  41dc0e:	loope  0x41dc0e
  41dc10:	clc    
  41dc11:	imul   ebx,DWORD PTR [esi+0x40],0xa8e83b4
  41dc18:	ja     0x41dbaf
  41dc1a:	addr16 jmp 0x41dc21
  41dc1d:	(bad)  
  41dc1e:	xor    DWORD PTR [ecx-0x4c7293a5],ecx
  41dc24:	cdq    
  41dc25:	bound  edx,QWORD PTR [eax*8-0x573f3473]
  41dc2c:	xchg   edi,eax
  41dc2d:	aad    0x9d
  41dc2f:	xor    DWORD PTR [ebp-0x5f],edi
  41dc32:	and    BYTE PTR [esi+0x58],al
  41dc35:	jmp    0xc27c7408
  41dc3a:	mov    esi,0x18bc5b3f
  41dc3f:	clc    
  41dc40:	ror    dl,1
  41dc42:	jnp    0x41dc73
  41dc44:	xchg   ebp,eax
  41dc45:	rol    dl,1
  41dc47:	jb     0x41dbe0
  41dc49:	and    al,0x7f
  41dc4b:	dec    edi
  41dc4d:	mov    cl,BYTE PTR [edx+edi*1]
  41dc50:	loop   0x41dc0a
  41dc52:	jge    0x41dcc9
  41dc54:	push   0x69b3db7
  41dc59:	push   ebx
  41dc5a:	into   
  41dc5b:	(bad)  
  41dc5d:	lock rol DWORD PTR [esi+ebp*2-0x64c37043],1
  41dc65:	sbb    ah,BYTE PTR [ebp+0x3]
  41dc68:	and    al,0x53
  41dc6a:	in     al,dx
  41dc6b:	and    al,0x1c
  41dc6d:	cmp    cl,BYTE PTR [esi]
  41dc6f:	test   DWORD PTR [edx-0x76cfc173],esp
  41dc75:	dec    ebx
  41dc76:	retf   
  41dc77:	std    
  41dc78:	scas   eax,DWORD PTR es:[edi]
  41dc79:	xor    eax,0xb1712d6c
  41dc7e:	push   0x21
  41dc80:	jg     0x41dcb6
  41dc82:	jmp    0x41dcfd
  41dc84:	popf   
  41dc85:	jmp    0x8bc9b729
  41dc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8b:	and    eax,0x2ba25730
  41dc90:	sahf   
  41dc91:	mov    dl,0xfa
  41dc93:	ds faddp st(5),st
  41dc96:	jns    0x41dd02
  41dc98:	ror    dl,1
  41dc9a:	jle    0x41dc64
  41dc9c:	pop    ebp
  41dc9d:	jecxz  0x41dce3
  41dc9f:	adc    DWORD PTR [eax-0x5e],0x17
  41dca3:	add    DWORD PTR [edi+0x502547c6],eax
  41dca9:	lods   eax,DWORD PTR ds:[esi]
  41dcaa:	idiv   DWORD PTR [ecx+eax*1]
  41dcad:	lods   eax,DWORD PTR ds:[esi]
  41dcae:	xor    DWORD PTR [edi+0x6bb361b1],edi
  41dcb4:	pop    edx
  41dcb5:	cs inc ebp
  41dcb7:	or     al,al
  41dcb9:	popf   
  41dcba:	push   esi
  41dcbb:	nop
  41dcbc:	test   eax,0x131f9d9b
  41dcc1:	add    al,0x34
  41dcc3:	push   esp
  41dcc4:	or     BYTE PTR [ebx-0x4ec89d9d],dl
  41dcca:	aaa    
  41dccb:	dec    edi
  41dccc:	in     al,dx
  41dccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcce:	sub    DWORD PTR [eax+0x5a],esp
  41dcd1:	pop    es
  41dcd2:	push   edi
  41dcd3:	cmp    DWORD PTR [ebp+0x6e54b50f],esp
  41dcd9:	inc    ecx
  41dcda:	adc    al,BYTE PTR [esi+0x6f]
  41dcdd:	cli    
  41dcde:	mov    ds:0x3538ee07,al
  41dce3:	scas   eax,DWORD PTR es:[edi]
  41dce4:	in     eax,dx
  41dce5:	xor    BYTE PTR ds:0x1e237c3,dl
  41dceb:	daa    
  41dcec:	mov    ebx,0xfc325302
  41dcf1:	rol    ebx,cl
  41dcf3:	(bad)  
  41dcf5:	(bad)  
  41dcf6:	int    0x99
  41dcf8:	push   cs
  41dcf9:	xchg   ebx,eax
  41dcfa:	fadd   QWORD PTR [edi+ebx*4]
  41dcfd:	dec    esp
  41dcfe:	sub    BYTE PTR [ecx-0x6b],ch
  41dd01:	ficom  DWORD PTR [esi+0x5d]
  41dd04:	imul   eax,DWORD PTR ds:0xd4fc74d8,0x4f
  41dd0b:	mov    ecx,0x88c26e4d
  41dd10:	pushf  
  41dd11:	rcr    DWORD PTR [esi-0x44],0x10
  41dd15:	ret    
  41dd16:	jg     0x41dd25
  41dd18:	sub    bl,BYTE PTR [edx]
  41dd1a:	(bad)  
  41dd1b:	or     dh,dh
  41dd1d:	sbb    dl,bh
  41dd1f:	adc    al,0x82
  41dd21:	mov    ?,WORD PTR [edx-0x35d9e320]
  41dd27:	dec    edx
  41dd28:	imul   eax
  41dd2a:	xchg   esi,eax
  41dd2b:	dec    eax
  41dd2c:	ds xchg ebp,eax
  41dd2e:	mov    ds:0x4c8714a1,eax
  41dd33:	int    0x38
  41dd35:	adc    ch,al
  41dd37:	ret    
  41dd38:	dec    esi
  41dd39:	mov    ebx,0xa6a651b1
  41dd3e:	adc    ah,al
  41dd40:	mov    esi,0xdd4b7a6
  41dd45:	clc    
  41dd46:	cmc    
  41dd47:	dec    edi
  41dd48:	out    dx,eax
  41dd49:	mov    cl,0x31
  41dd4b:	jno    0x41ddb6
  41dd4d:	aas    
  41dd4e:	into   
  41dd4f:	dec    ebp
  41dd50:	fdiv   QWORD PTR [edi]
  41dd52:	mov    ds:0x1968b626,eax
  41dd57:	fist   DWORD PTR [edx+0x281f2aff]
  41dd5d:	mov    ebx,DWORD PTR ds:0x580b62ea
  41dd63:	scas   eax,DWORD PTR es:[edi]
  41dd64:	int    0x83
  41dd66:	mov    edi,0xbeff0408
  41dd6b:	jmp    0x41ddea
  41dd6d:	mov    esi,0x8ec43a5c
  41dd72:	mov    cl,BYTE PTR [eax+eiz*8]
  41dd75:	or     al,0xec
  41dd77:	xlat   BYTE PTR ds:[ebx]
  41dd78:	add    DWORD PTR [ecx-0x63454efc],eax
  41dd7e:	lds    esp,FWORD PTR [ebx-0x64]
  41dd81:	jno    0x41dda7
  41dd83:	pop    ebx
  41dd85:	dec    ecx
  41dd86:	adc    al,0x2e
  41dd88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd89:	xlat   BYTE PTR ds:[ebx]
  41dd8a:	add    eax,0xd3ab70c3
  41dd8f:	test   al,0x9a
  41dd91:	mov    dh,0x58
  41dd93:	test   BYTE PTR [eax+0x2f4ed90f],ah
  41dd99:	xchg   ecx,eax
  41dd9a:	outs   dx,DWORD PTR ds:[esi]
  41dd9b:	(bad)
  41dd9e:	data16 int 0xb2
  41dda1:	dec    ebx
  41dda2:	inc    eax
  41dda3:	xchg   esp,eax
  41dda4:	test   BYTE PTR [edi-0x70],bh
  41dda7:	push   0xffffff9f
  41dda9:	test   eax,0xc205d19c
  41ddae:	dec    edx
  41ddaf:	adc    BYTE PTR [ebx+0x4f82c20f],dh
  41ddb5:	test   eax,0xaf1cd78e
  41ddba:	je     0x41de0e
  41ddbc:	push   ecx
  41ddbd:	add    eax,0xbd0b0338
  41ddc2:	lahf   
  41ddc3:	repnz pop edi
  41ddc5:	sahf   
  41ddc6:	jecxz  0x41ddc4
  41ddc8:	call   0xea92:0x5095bffc
  41ddcf:	ss out dx,al
  41ddd1:	bound  ebp,QWORD PTR [ecx]
  41ddd3:	mov    fs,WORD PTR [ebx]
  41ddd5:	loopne 0x41dda6
  41ddd7:	(bad)  
  41ddd8:	fst    DWORD PTR [esi+0x6b475198]
  41ddde:	mov    ds:0xb15fa125,eax
  41dde3:	sub    al,0x96
  41dde5:	in     al,0x34
  41dde7:	jg     0x41dd7d
  41dde9:	paddb  mm2,QWORD PTR [edi]
  41ddec:	test   al,0xed
  41ddee:	cdq    
  41ddef:	lock dec edx
  41ddf1:	(bad)  
  41ddf2:	rcl    BYTE PTR [edx],cl
  41ddf4:	sar    bh,0x20
  41ddf7:	mov    edi,0x73eebabc
  41ddfc:	nop
  41ddfd:	aaa    
  41ddfe:	and    eax,0x80b58b9f
  41de03:	push   ss
  41de04:	and    esi,DWORD PTR [edx]
  41de06:	jb     0x41dd9e
  41de08:	mov    ch,0x32
  41de0a:	int    0x1f
  41de0c:	and    eax,0x77ad19b7
  41de11:	dec    ebp
  41de12:	lds    esp,FWORD PTR [ecx]
  41de14:	in     al,dx
  41de15:	fmul   QWORD PTR [ecx+0x56]
  41de18:	xor    BYTE PTR [esi+0x64ee3344],ch
  41de1e:	sbb    edi,eax
  41de20:	repnz inc ebx
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223e1
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223e1
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223e1
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	stc    
  41dfc9:	adc    dl,BYTE PTR [eax+edx*4-0x413fa070]
  41dfd0:	dec    edx
  41dfd1:	les    edi,FWORD PTR [esi+0xe2b68be]
  41dfd7:	ret    0xa12f
  41dfda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfdb:	jbe    0x41dfcc
  41dfdd:	adc    DWORD PTR [edx-0xf99772a],edx
  41dfe3:	pop    ss
  41dfe4:	and    esi,DWORD PTR [esi+edx*8]
  41dfe7:	mov    cl,0x4e
  41dfe9:	rcl    DWORD PTR [ebx*1+0x45bcdc45],0xb7
  41dff1:	inc    ebx
  41dff2:	lds    edx,FWORD PTR [esi]
  41dff4:	xchg   BYTE PTR [ecx-0x76],bh
  41dff7:	pop    ebp
  41dff8:	mov    bl,0xc2
  41dffa:	sbb    bl,BYTE PTR [eax+0x76]
  41dffd:	daa    
  41dffe:	pop    ecx
  41dfff:	xchg   edx,eax
  41e000:	les    ebp,FWORD PTR [ebp+0x5d]
  41e003:	pop    ss
  41e004:	repz dec edx
  41e006:	add    eax,0xe54c4e3f
  41e00b:	jecxz  0x41e074
  41e00d:	lahf   
  41e00e:	mov    ebp,0x46721f66
  41e013:	js     0x41dfb6
  41e015:	pop    eax
  41e016:	addr16 pop ebp
  41e018:	mov    cl,0xb0
  41e01a:	xchg   ebx,eax
  41e01b:	(bad)
  41e01f:	icebp  
  41e020:	or     bh,BYTE PTR [eax]
  41e022:	mov    esp,0x354d10a
  41e027:	ret    0x928f
  41e02a:	xor    eax,0x7d4dfc84
  41e02f:	cmp    esi,DWORD PTR [ebp+0x30aea898]
  41e035:	push   ds
  41e036:	into   
  41e037:	sbb    dl,BYTE PTR [edx+0x4951c360]
  41e03d:	(bad)  [eax-0x75]
  41e040:	and    dl,BYTE PTR [eax-0x8716a8d]
  41e046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e047:	jg     0x41e08c
  41e049:	dec    ebx
  41e04a:	jae    0x41dfe6
  41e04c:	jno    0x41dff4
  41e04e:	icebp  
  41e04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e050:	push   ecx
  41e051:	sbb    al,0x44
  41e053:	loopne 0x41e068
  41e055:	bound  esi,QWORD PTR [edi+0x3a]
  41e058:	enter  0x23db,0xcf
  41e05c:	mov    ah,0xe0
  41e05e:	mov    cl,0x79
  41e060:	cmp    al,0xf5
  41e062:	sub    eax,0x4ee45513
  41e067:	push   ebx
  41e068:	xlat   BYTE PTR ds:[ebx]
  41e069:	xchg   esi,edi
  41e06b:	into   
  41e06c:	(bad)  
  41e06d:	inc    esi
  41e06e:	test   eax,0xeb75d027
  41e073:	pop    ebp
  41e074:	adc    eax,0xa051657d
  41e079:	pop    ebp
  41e07a:	pop    edi
  41e07b:	push   eax
  41e07c:	mov    ds:0xf816ce86,eax
  41e081:	push   ecx
  41e082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e083:	push   0x794c7097
  41e088:	pushf  
  41e089:	inc    ecx
  41e08a:	adc    eax,0xce78ad93
  41e08f:	add    ch,al
  41e091:	mov    al,ds:0xcf8c4dbb
  41e096:	scas   al,BYTE PTR es:[edi]
  41e097:	(bad)  
  41e098:	clc    
  41e099:	shr    ah,cl
  41e09b:	jl     0x41e0d2
  41e09d:	dec    esp
  41e09e:	int    0xa3
  41e0a0:	int    0x64
  41e0a2:	sbb    DWORD PTR [ebp-0x917d714],ecx
  41e0a8:	push   edi
  41e0a9:	outs   dx,BYTE PTR ds:[esi]
  41e0aa:	fsubp  st(6),st
  41e0ac:	rcl    DWORD PTR [esi-0x73],0x5c
  41e0b0:	test   al,0x91
  41e0b2:	mov    ebp,0x89975ee1
  41e0b7:	data16 (bad) 
  41e0bb:	iret   
  41e0bc:	or     dl,BYTE PTR [edx]
  41e0be:	pusha  
  41e0bf:	stos   BYTE PTR es:[edi],al
  41e0c0:	pop    ecx
  41e0c1:	fcmovu st,st(6)
  41e0c3:	mov    ds:0x43c2c9c0,al
  41e0c8:	xor    eax,0xadebafe1
  41e0cd:	jmp    0x41e0b8
  41e0cf:	retf   
  41e0d0:	xor    esp,DWORD PTR [edx+0x758e1629]
  41e0d6:	test   al,0xb0
  41e0d8:	inc    ebx
  41e0d9:	mov    dl,0x86
  41e0db:	inc    ebx
  41e0dc:	ins    DWORD PTR es:[edi],dx
  41e0dd:	lods   al,BYTE PTR ds:[esi]
  41e0de:	retf   0x3073
  41e0e1:	into   
  41e0e2:	push   ebp
  41e0e3:	jp     0x41e067
  41e0e5:	jle    0x41e131
  41e0e7:	xchg   esp,ebp
  41e0e9:	push   edx
  41e0ea:	leave  
  41e0eb:	stc    
  41e0ec:	xlat   BYTE PTR ds:[ebx]
  41e0ed:	cmp    edi,DWORD PTR [ebx-0x27]
  41e0f0:	xchg   ebp,eax
  41e0f1:	add    eax,0xae566a1b
  41e0f6:	or     DWORD PTR [esi+edx*8+0x47],esi
  41e0fa:	sub    al,0x7e
  41e0fc:	cs shr BYTE PTR es:[ecx+0x688c4e4a],0x63
  41e105:	hlt    
  41e106:	test   al,0x5a
  41e108:	sbb    al,0x12
  41e10a:	out    dx,eax
  41e10b:	ret    
  41e10c:	push   es
  41e10d:	loope  0x41e0e8
  41e10f:	pop    ss
  41e110:	pop    ecx
  41e111:	imul   BYTE PTR ds:0x86b57c1b
  41e117:	jo     0x41e15b
  41e119:	xchg   ebp,eax
  41e11a:	xlat   BYTE PTR ds:[ebx]
  41e11b:	mov    BYTE PTR [edi],bl
  41e11d:	inc    ebp
  41e11e:	(bad)  
  41e11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e120:	adc    bh,BYTE PTR [ecx-0x5b]
  41e123:	in     al,dx
  41e124:	in     eax,0x96
  41e126:	and    al,0xf5
  41e128:	sbb    ah,BYTE PTR [edi+0x47ea80aa]
  41e12e:	and    al,0xee
  41e130:	nop
  41e131:	cmp    al,0x73
  41e133:	adc    BYTE PTR [edx+0x1d],0x11
  41e137:	stc    
  41e138:	clc    
  41e139:	iret   
  41e13a:	sub    esp,ebp
  41e13c:	jbe    0x41e107
  41e13e:	pop    ebp
  41e13f:	jle    0x41e15a
  41e141:	push   ecx
  41e142:	cli    
  41e143:	adc    ebp,0x2c
  41e146:	mov    ss,WORD PTR [edx+0x86ab2ec]
  41e14c:	ret    0xd73c
  41e14f:	and    bh,BYTE PTR [edx]
  41e151:	push   esp
  41e152:	mov    al,ds:0xb888c2f6
  41e157:	mov    edi,0x74ea19b4
  41e15c:	jb     0x41e14d
  41e15e:	jno    0x41e17a
  41e160:	or     ch,cl
  41e162:	mov    ds:0x6ec1dbf8,al
  41e167:	push   edi
  41e168:	mov    bh,0xcd
  41e16a:	dec    edi
  41e16b:	add    eax,0xb367a679
  41e170:	jne    0x41e1d0
  41e172:	ficomp WORD PTR [edi+eiz*8+0x10f7e214]
  41e179:	sub    eax,0x7ed86ca5
  41e17e:	and    eax,0xc93f797e
  41e183:	xchg   BYTE PTR [esi],al
  41e185:	pop    es
  41e186:	mov    al,ds:0x44b1c423
  41e18b:	ja     0x41e1a2
  41e18d:	cld    
  41e18e:	imul   ebx,DWORD PTR cs:[eax-0x75bd1177],0x389b9bc4
  41e199:	fwait
  41e19a:	inc    edi
  41e19b:	mov    ch,0x15
  41e19d:	push   eax
  41e19e:	stc    
  41e19f:	jbe    0x41e1b0
  41e1a1:	inc    eax
  41e1a2:	lea    ebp,[ecx+0x3256e7e4]
  41e1a8:	gs cli 
  41e1aa:	or     dh,BYTE PTR [ecx]
  41e1ac:	sub    ebp,DWORD PTR [edi+0x353b8ed4]
  41e1b2:	fcom   QWORD PTR [ebp-0x47d68121]
  41e1b8:	adc    DWORD PTR [ecx+eax*4],ebx
  41e1bb:	pop    edi
  41e1bc:	int    0xcd
  41e1be:	mov    ecx,0x6b33457b
  41e1c3:	cmp    BYTE PTR [esi],ah
  41e1c5:	pop    esi
  41e1c6:	pop    ebx
  41e1c7:	test   DWORD PTR [edx+0x65b7d620],ebx
  41e1cd:	inc    ebx
  41e1ce:	bound  esp,QWORD PTR [ebx-0x1f]
  41e1d1:	fist   DWORD PTR [eax+edx*2]
  41e1d4:	inc    ecx
  41e1d5:	(bad)  
  41e1d6:	aas    
  41e1d7:	cmc    
  41e1d8:	mov    DWORD PTR [esi-0x6c],0x1839305b
  41e1df:	pop    es
  41e1e0:	dec    ebp
  41e1e1:	adc    ebp,ebp
  41e1e3:	add    al,0xab
  41e1e5:	push   ebx
  41e1e6:	lods   al,BYTE PTR ds:[esi]
  41e1e7:	lock jns 0x41e1fd
  41e1ea:	retf   
  41e1eb:	ins    DWORD PTR es:[edi],dx
  41e1ec:	inc    eax
  41e1ed:	fmul   st,st(6)
  41e1ef:	arpl   sp,bp
  41e1f1:	lahf   
  41e1f2:	xor    ebp,DWORD PTR [eax+0x503e2f59]
  41e1f8:	mov    bh,0x65
  41e1fa:	mov    esi,0x2c66f44f
  41e1ff:	dec    edi
  41e200:	pop    eax
  41e201:	xchg   ebx,eax
  41e202:	ss (bad) 
  41e204:	lahf   
  41e205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e206:	sti    
  41e207:	daa    
  41e208:	jp     0x41e1c0
  41e20a:	cld    
  41e20b:	pushf  
  41e20c:	(bad)  
  41e20d:	(bad)  
  41e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e210:	test   DWORD PTR [esi+edi*2],ecx
  41e213:	mov    ds:0x6f696070,eax
  41e218:	sbb    al,0x3c
  41e21a:	jecxz  0x41e232
  41e21c:	mov    ?,WORD PTR [ebx+0x7a501613]
  41e222:	jmp    0xeef7:0x366447e0
  41e229:	push   edx
  41e22a:	xor    ch,bl
  41e22c:	xchg   edx,eax
  41e22d:	pop    ss
  41e22e:	call   0x707e:0xedbc1ad1
  41e235:	push   es
  41e236:	scas   eax,DWORD PTR es:[edi]
  41e237:	pop    ebp
  41e238:	cmp    eax,0xb1fa78dc
  41e23d:	mov    bh,0x53
  41e23f:	popf   
  41e240:	push   edx
  41e241:	fst    DWORD PTR [edx+0x5a]
  41e244:	adc    al,0x33
  41e246:	pop    esp
  41e247:	jle    0x41e257
  41e249:	jge    0x41e21f
  41e24b:	add    DWORD PTR [ecx+0x540e9294],edi
  41e251:	aam    0x96
  41e253:	push   ds
  41e254:	mov    ch,BYTE PTR [esi-0x66]
  41e257:	cmp    DWORD PTR [ecx-0x60a96b9d],0x3f01b6f
  41e261:	pop    ds
  41e262:	pop    edi
  41e263:	inc    esi
  41e264:	test   BYTE PTR [ebx],dl
  41e266:	arpl   WORD PTR [eax+0x2ad12df6],di
  41e26c:	(bad)  [edi+0x55f14db6]
  41e272:	enter  0x5b31,0x6e
  41e276:	fcomip st,st(4)
  41e278:	cs jns 0x41e22e
  41e27b:	xlat   BYTE PTR ds:[ebx]
  41e27c:	and    al,0x3e
  41e27e:	inc    esp
  41e27f:	dec    edi
  41e280:	sbb    DWORD PTR [ebx+0x89a904b],edi
  41e286:	pop    edx
  41e287:	jl     0x41e2eb
  41e289:	add    al,0x5e
  41e28b:	fsubr  DWORD PTR [ecx]
  41e28d:	xor    al,0xd7
  41e28f:	dec    ebp
  41e290:	imul   eax,DWORD PTR [esi],0xd
  41e293:	aad    0x63
  41e295:	and    edx,DWORD PTR [ecx+0x64]
  41e298:	add    ecx,edi
  41e29a:	adc    eax,DWORD PTR [esi]
  41e29c:	test   al,0x17
  41e29e:	lahf   
  41e29f:	(bad)  [eax-0x2b]
  41e2a2:	and    al,0xa4
  41e2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2a5:	addr16 push ebx
  41e2a7:	xchg   ebp,eax
  41e2a8:	pop    ecx
  41e2a9:	xor    cl,bh
  41e2ab:	xchg   esi,eax
  41e2ac:	(bad)  
  41e2ad:	loop   0x41e233
  41e2af:	xor    eax,0xabdb4a24
  41e2b4:	pop    eax
  41e2b5:	lea    esp,[ebx]
  41e2b7:	fwait
  41e2b8:	sti    
  41e2b9:	shr    DWORD PTR [eax],0xc8
  41e2bc:	pop    ss
  41e2bd:	and    al,0x4d
  41e2bf:	sbb    eax,0x2557580c
  41e2c4:	jb     0x41e341
  41e2c6:	mov    BYTE PTR ds:0xb4a386c8,bl
  41e2cc:	inc    edi
  41e2cd:	ficom  WORD PTR [eax+0x2b6f4206]
  41e2d3:	pop    es
  41e2d4:	pop    eax
  41e2d5:	jle    0x41e2d9
  41e2d7:	mov    eax,ds:0xc9e7259b
  41e2dc:	sbb    esp,DWORD PTR [esi-0x4e]
  41e2df:	xchg   DWORD PTR [ecx],eax
  41e2e1:	or     edi,DWORD PTR [eax]
  41e2e3:	(bad)  
  41e2e4:	cdq    
  41e2e5:	inc    ebp
  41e2e6:	ins    DWORD PTR es:[edi],dx
  41e2e7:	mov    al,ds:0x3878fd3b
  41e2ec:	add    eax,0x85f8cdf4
  41e2f1:	push   cs
  41e2f2:	lock mov ecx,0x2f399742
  41e2f8:	int3   
  41e2f9:	adc    cl,0xc1
  41e2fc:	icebp  
  41e2fd:	xor    ebp,ebp
  41e2ff:	mov    eax,ds:0x76d27fe0
  41e304:	cli    
  41e305:	xchg   ecx,eax
  41e306:	test   BYTE PTR [ebx+ebp*8],dl
  41e309:	pop    ds
  41e30a:	aaa    
  41e30b:	fs pop ss
  41e30d:	dec    esi
  41e30e:	mov    fs,WORD PTR [ebp-0xe]
  41e311:	sti    
  41e312:	cmp    al,0xff
  41e314:	pop    ds
  41e315:	jne    0x41e38b
  41e317:	pop    ds
  41e318:	jo     0x41e29e
  41e31a:	div    DWORD PTR [ebp-0x2999b760]
  41e320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e321:	rcl    ecx,cl
  41e323:	cmc    
  41e324:	jl     0x41e324
  41e326:	icebp  
  41e327:	mov    cs,WORD PTR [eax+eax*4]
  41e32a:	adc    DWORD PTR [edx-0x4b],edx
  41e32d:	xchg   bl,cl
  41e32f:	call   0x52418d2f
  41e334:	xchg   ebp,eax
  41e335:	mov    edi,0x8bfed163
  41e33a:	lds    edi,FWORD PTR [esi-0x40]
  41e33d:	sbb    eax,0xda4dcee2
  41e342:	fisub  DWORD PTR [ecx-0x20]
  41e345:	mov    eax,ds:0x7d3ab02a
  41e34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e34b:	dec    edi
  41e34c:	hlt    
  41e34d:	fdiv   st(1),st
  41e34f:	je     0x41e33d
  41e351:	xchg   ebp,eax
  41e352:	push   edi
  41e353:	inc    ecx
  41e354:	inc    ebp
  41e355:	pop    esi
  41e356:	mov    bl,0xb2
  41e358:	daa    
  41e359:	mov    ds:0x2160d65e,al
  41e35e:	pop    es
  41e35f:	jno    0x41e3ac
  41e361:	call   0x218e:0xbfb9005b
  41e368:	cmp    BYTE PTR [esi-0x6b],0x6d
  41e36c:	or     bl,al
  41e36e:	repnz sub ebp,0x45851e1a
  41e375:	fsubr  DWORD PTR ds:0x179e09f5
  41e37b:	add    BYTE PTR [edx+edx*4],dl
  41e37e:	ins    DWORD PTR es:[edi],dx
  41e37f:	aam    0xc5
  41e381:	inc    eax
  41e382:	or     eax,0x5ed635a8
  41e387:	mov    ebp,0x7f901edb
  41e38c:	pusha  
  41e38d:	mov    BYTE PTR [edi-0x37],bl
  41e390:	cld    
  41e391:	dec    esi
  41e392:	pop    esi
  41e393:	aam    0xfc
  41e395:	jo     0x41e344
  41e397:	jl     0x41e335
  41e399:	mov    dl,0x29
  41e39b:	ror    DWORD PTR [eax],cl
  41e39d:	dec    edi
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223e1
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223e1
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	pop    eax
  41e433:	dec    esi
  41e434:	outs   dx,BYTE PTR ds:[esi]
  41e435:	fstp   QWORD PTR [edi+eiz*2]
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0xee
  41e43f:	xchg   DWORD PTR ss:[edx+0x49527c4f],ecx
  41e446:	fstp   DWORD PTR [edx+0x4752f891]
  41e44c:	lods   eax,DWORD PTR ds:[esi]
  41e44d:	icebp  
  41e44e:	add    DWORD PTR [eax-0x25],ecx
  41e451:	add    al,0x40
  41e453:	mov    ebp,0xbbc6b6f4
  41e458:	xchg   edi,eax
  41e459:	sbb    edx,DWORD PTR [esi+ebx*1]
  41e45c:	lahf   
  41e45d:	jmp    0x1a67:0x5a1710cd
  41e464:	xchg   ebp,eax
  41e465:	sbb    al,0xe0
  41e467:	out    0xe0,eax
  41e469:	repnz into 
  41e46b:	scas   eax,DWORD PTR es:[edi]
  41e46c:	call   0xcea77cce
  41e471:	cs je  0x41e42e
  41e474:	mov    edx,ebx
  41e476:	and    edx,DWORD PTR [edi+eiz*8-0x49]
  41e47a:	les    eax,FWORD PTR [ebp+0x1d63ff81]
  41e480:	push   ss
  41e481:	add    dh,BYTE PTR [ebx+0x31]
  41e484:	adc    esp,DWORD PTR [ecx-0x1608e164]
  41e48a:	sbb    DWORD PTR [eax],ebx
  41e48c:	dec    esi
  41e48d:	addr16 loope 0x41e4a4
  41e490:	aad    0xe4
  41e492:	adc    edx,esi
  41e494:	test   DWORD PTR [eax+0x375396fa],edi
  41e49a:	xor    esi,DWORD PTR [ebx-0x35]
  41e49d:	dec    edi
  41e49e:	xchg   ebx,eax
  41e49f:	sub    al,0x36
  41e4a1:	mov    al,ds:0x83b4ac33
  41e4a6:	sahf   
  41e4a7:	loopne 0x41e525
  41e4a9:	sub    al,0xa3
  41e4ab:	mov    edi,0x6365a5c1
  41e4b0:	pop    ecx
  41e4b1:	mov    al,0x8c
  41e4b3:	and    DWORD PTR [esi],ebx
  41e4b5:	xor    al,0xd4
  41e4b7:	xchg   esi,eax
  41e4b8:	leave  
  41e4b9:	in     al,dx
  41e4ba:	call   0x85b6d7ab
  41e4bf:	dec    esi
  41e4c0:	call   0xcafa2347
  41e4c5:	sub    eax,0xfb9e3ea
  41e4ca:	in     al,0x5
  41e4cc:	jmp    0x41e4ee
  41e4ce:	xor    BYTE PTR [edx+0x74a75e61],0xac
  41e4d5:	int    0x58
  41e4d7:	mov    edi,0xab3552ab
  41e4dd:	gs sub bl,cl
  41e4e0:	jg     0x41e4b9
  41e4e2:	xchg   ecx,eax
  41e4e3:	inc    esp
  41e4e4:	or     esi,ebx
  41e4e6:	out    dx,al
  41e4e7:	add    eax,0x65243cc4
  41e4ec:	or     BYTE PTR [ecx+0x7c],0x42
  41e4f0:	hlt    
  41e4f1:	fisub  DWORD PTR [edx-0x50]
  41e4f4:	out    0x4c,al
  41e4f6:	jno    0x41e491
  41e4f8:	inc    BYTE PTR [edi]
  41e4fa:	popf   
  41e4fb:	push   ebp
  41e4fc:	leave  
  41e4fd:	or     esp,DWORD PTR [ebp+0x16]
  41e500:	cmp    BYTE PTR [edx],dh
  41e502:	fwait
  41e503:	or     eax,0x4f67ed23
  41e508:	adc    DWORD PTR [ebx+ebp*1-0x18],esp
  41e50c:	push   edx
  41e50d:	add    eax,0x2b6971f4
  41e512:	jo     0x41e4c2
  41e514:	repz jmp 0xe333e854
  41e51a:	xchg   ebx,eax
  41e51b:	inc    eax
  41e51c:	pop    ebx
  41e51d:	or     al,0xb4
  41e51f:	aam    0x26
  41e521:	sub    al,0x1
  41e523:	scas   eax,DWORD PTR es:[edi]
  41e524:	ds push es
  41e526:	pushf  
  41e527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e528:	jb     0x41e4cc
  41e52a:	js     0x41e5a9
  41e52c:	cs jmp 0xcd76:0x64922aad
  41e534:	inc    esp
  41e535:	cmp    ah,dh
  41e537:	bound  esi,QWORD PTR [edi-0x40]
  41e53a:	jle    0x41e5ae
  41e53c:	add    cl,BYTE PTR [edx+0x15]
  41e53f:	ja     0x41e4e7
  41e541:	or     bl,BYTE PTR ds:0xb9a2417b
  41e547:	mov    esp,0x22d1d955
  41e54c:	cwde   
  41e54d:	pop    ebp
  41e54e:	xlat   BYTE PTR ds:[ebx]
  41e54f:	jbe    0x41e58d
  41e551:	xor    bl,al
  41e553:	sub    dh,BYTE PTR [ecx-0x2c]
  41e556:	cmp    edi,ebx
  41e558:	and    dl,BYTE PTR [esi-0x43b0a3ad]
  41e55e:	sar    DWORD PTR ds:0xc5c662c,cl
  41e564:	jne    0x41e4f5
  41e566:	loopne 0x41e562
  41e568:	pushf  
  41e569:	adc    ecx,DWORD PTR [edx]
  41e56b:	shr    BYTE PTR [eax+0x2c3904ad],cl
  41e571:	sub    DWORD PTR [ebx+0x2df2ebe2],edi
  41e577:	test   al,0xfb
  41e579:	add    bl,BYTE PTR [esi+0x2ed882]
  41e57f:	out    0x89,al
  41e581:	mov    edi,0xc9ac1910
  41e586:	mov    eax,0xb5d94595
  41e58b:	(bad)  
  41e58c:	cmp    DWORD PTR ds:0x28dca544,eax
  41e592:	inc    ebp
  41e593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e594:	sub    eax,0xc2ec21d5
  41e599:	add    ah,BYTE PTR [esi-0x71861ceb]
  41e59f:	sbb    eax,0x2db43fbc
  41e5a4:	stc    
  41e5a5:	ins    DWORD PTR es:[edi],dx
  41e5a6:	fstp   DWORD PTR [ebx+0x5f]
  41e5a9:	jge    0x41e563
  41e5ab:	ficomp WORD PTR [ebp+0x416dfaa0]
  41e5b1:	add    ah,BYTE PTR [edx]
  41e5b3:	fs daa 
  41e5b5:	int3   
  41e5b6:	ins    DWORD PTR es:[edi],dx
  41e5b7:	cmp    eax,0xfb8a5eaf
  41e5bc:	nop
  41e5bd:	neg    DWORD PTR [edx-0x66]
  41e5c0:	adc    al,0x8a
  41e5c2:	lds    esp,FWORD PTR [ebx]
  41e5c4:	in     eax,0x9a
  41e5c6:	test   eax,0x837977fd
  41e5cb:	inc    edi
  41e5cc:	imul   edi,ecx,0x32
  41e5cf:	shr    BYTE PTR [edx+ebx*1+0x41],0xad
  41e5d4:	es dec esp
  41e5d6:	addr16 ret 
  41e5d8:	jno    0x41e643
  41e5da:	lock jbe 0x41e5b9
  41e5dd:	hlt    
  41e5de:	fiadd  DWORD PTR [eax+ebx*8+0x12]
  41e5e2:	test   BYTE PTR [ecx+0x2b],ch
  41e5e5:	jo     0x41e62f
  41e5e7:	inc    ecx
  41e5e8:	fidivr WORD PTR ds:0x2651d4b4
  41e5ee:	add    ebp,esi
  41e5f0:	pop    es
  41e5f1:	mov    dl,0x2a
  41e5f3:	pop    ds
  41e5f4:	aad    0xf9
  41e5f6:	cmp    dh,BYTE PTR [esi]
  41e5f8:	stos   BYTE PTR es:[edi],al
  41e5f9:	dec    ecx
  41e5fa:	xor    eax,0xe065983d
  41e5ff:	add    edx,edx
  41e601:	inc    ecx
  41e602:	push   esi
  41e603:	push   edi
  41e604:	imul   ecx,DWORD PTR [ebx+ebp*2-0x5c421539],0xfffffff4
  41e60c:	cmp    ch,BYTE PTR [edi]
  41e60e:	and    eax,0xd71233
  41e613:	nop
  41e614:	cmc    
  41e615:	and    al,0xfd
  41e617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e618:	cmc    
  41e619:	je     0x41e609
  41e61b:	test   BYTE PTR [edi+0x73],bl
  41e61e:	dec    ebx
  41e61f:	or     al,0x2
  41e621:	dec    ecx
  41e622:	push   ebp
  41e623:	scas   al,BYTE PTR es:[edi]
  41e624:	hlt    
  41e625:	cs in  eax,0x52
  41e628:	imul   eax,edx,0x19
  41e62b:	jl     0x41e5d6
  41e62d:	test   esp,ebp
  41e62f:	mov    ebx,0xf5bab4f7
  41e634:	popa   
  41e635:	jle    0x41e695
  41e637:	adc    DWORD PTR [edi+0x5bad0e46],ebx
  41e63d:	mov    al,bl
  41e63f:	fadd   QWORD PTR [esp+esi*8-0x5]
  41e643:	or     ecx,DWORD PTR [ecx+ebx*4+0x536ba4d6]
  41e64a:	data16 mov ds:0xe1daf2db,al
  41e650:	pop    ecx
  41e651:	dec    edi
  41e652:	into   
  41e653:	call   edx
  41e655:	out    dx,eax
  41e656:	and    dh,BYTE PTR [esi+esi*1+0x7a299553]
  41e65d:	add    esp,DWORD PTR [eax-0x4fd241b1]
  41e663:	or     BYTE PTR [edi],dh
  41e665:	(bad)  
  41e666:	repnz mov edx,0xd789cea
  41e66c:	xor    DWORD PTR [edx+ebx*2+0x7104d7f9],eax
  41e673:	inc    edi
  41e674:	jge    0x41e6af
  41e676:	push   cs
  41e677:	jge    0x41e6a3
  41e679:	and    al,bl
  41e67b:	(bad)  
  41e67c:	int    0xf1
  41e67e:	adc    bh,al
  41e680:	pop    ss
  41e681:	sub    ecx,esp
  41e683:	add    eax,0xe2934aed
  41e688:	inc    esp
  41e689:	in     al,0x6b
  41e68b:	and    al,BYTE PTR [ebx-0x796a7cf7]
  41e691:	xor    BYTE PTR [edx-0x58964c02],al
  41e697:	jge    0x41e711
  41e699:	dec    ebp
  41e69a:	ds sbb esp,ebp
  41e69d:	xchg   ecx,eax
  41e69e:	cmp    eax,0x3deaf5ad
  41e6a3:	mov    ebp,0x2e5188c8
  41e6a8:	cmp    al,0xc9
  41e6aa:	jmp    0x8621:0x5dcdf8b9
  41e6b1:	mul    ebx
  41e6b3:	int3   
  41e6b4:	fs in  al,dx
  41e6b6:	pop    es
  41e6b7:	jle    0x41e673
  41e6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ba:	sub    al,0xb
  41e6bc:	fs dec ecx
  41e6be:	inc    ecx
  41e6bf:	ret    0xac50
  41e6c2:	int    0x24
  41e6c4:	xor    BYTE PTR [ecx+0x504be14e],dh
  41e6ca:	ffreep st(1)
  41e6cc:	fist   DWORD PTR [ecx]
  41e6ce:	shr    DWORD PTR [edi-0x79],1
  41e6d1:	jmp    0x41e6e4
  41e6d3:	jecxz  0x41e68c
  41e6d5:	push   eax
  41e6d6:	push   ds
  41e6d7:	pop    ss
  41e6d8:	mov    dh,0xd
  41e6da:	or     eax,DWORD PTR [ebx+0x39]
  41e6dd:	dec    ecx
  41e6de:	mov    cl,0x6d
  41e6e0:	mov    gs,edi
  41e6e2:	jmp    0x2139:0x3ad712ad
  41e6e9:	test   eax,0xb1d68925
  41e6ee:	(bad)  
  41e6f0:	addr16 mov al,0xe1
  41e6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f4:	test   al,0x49
  41e6f6:	push   es
  41e6f7:	into   
  41e6f8:	mov    edi,0x4fe35904
  41e6fd:	stos   DWORD PTR es:[edi],eax
  41e6fe:	out    dx,eax
  41e6ff:	sbb    eax,0x7201df35
  41e704:	mov    ch,0x59
  41e706:	out    0x93,al
  41e708:	add    BYTE PTR [edx+ecx*1-0x232740ee],ah
  41e70f:	fs shl dh,1
  41e712:	pop    ebx
  41e713:	repz mov cl,0xe3
  41e716:	add    al,0x29
  41e718:	pusha  
  41e719:	leave  
  41e71a:	xchg   ebx,eax
  41e71b:	or     DWORD PTR [ebp+0x60],ecx
  41e71e:	xchg   edx,eax
  41e71f:	inc    esi
  41e720:	jecxz  0x41e6a3
  41e722:	adc    edx,ebx
  41e724:	ret    0xd3c
  41e727:	inc    ebx
  41e728:	inc    eax
  41e729:	xor    eax,0x77696cfa
  41e72e:	ins    DWORD PTR es:[edi],dx
  41e72f:	sbb    ebx,DWORD PTR [ecx-0x51]
  41e732:	jbe    0x41e6f7
  41e734:	outs   dx,BYTE PTR ds:[esi]
  41e735:	hlt    
  41e736:	pop    ebp
  41e737:	pop    edi
  41e738:	sub    bl,BYTE PTR [ecx-0x4e]
  41e73b:	push   esi
  41e73c:	cs test al,0xb3
  41e73f:	test   al,0x50
  41e741:	dec    edi
  41e742:	pop    ds
  41e743:	call   0xc954:0xa29e9ea
  41e74a:	add    BYTE PTR ds:0xa67eba0d,ch
  41e750:	jle    0x41e6ed
  41e752:	idiv   ah
  41e754:	xor    dl,bh
  41e756:	fbld   TBYTE PTR [ebx]
  41e758:	add    al,0xdf
  41e75a:	jmp    0x41e726
  41e75c:	push   edx
  41e75d:	addr16 aam 0x5b
  41e760:	out    dx,eax
  41e761:	sbb    BYTE PTR [esp+ebx*4],dl
  41e764:	int3   
  41e765:	mov    ds:0x73e887fb,al
  41e76a:	nop    DWORD PTR [esi-0x1]
  41e76e:	fs jo  0x41e778
  41e771:	xor    bh,BYTE PTR [edx+0x1e]
  41e774:	mov    dh,0xea
  41e776:	dec    esp
  41e777:	jp     0x41e7cd
  41e779:	outs   dx,DWORD PTR ds:[esi]
  41e77a:	in     eax,dx
  41e77b:	sysenter 
  41e77d:	xacquire xchg BYTE PTR [esi],dh
  41e780:	pushf  
  41e781:	mov    edi,0x9f1d061d
  41e786:	lds    ebx,FWORD PTR [eax-0x1a]
  41e789:	xchg   DWORD PTR [esi+0x73],ecx
  41e78c:	inc    BYTE PTR [edi+0x68]
  41e78f:	out    0xae,al
  41e791:	jno    0x41e7be
  41e793:	mov    ch,0xac
  41e795:	mov    ch,0xf6
  41e797:	and    cl,BYTE PTR [ecx+eax*8]
  41e79a:	idiv   DWORD PTR [ecx-0x768b9a86]
  41e7a0:	adc    DWORD PTR [esp+ecx*8-0x144f6f51],ecx
  41e7a7:	mov    dh,0x5c
  41e7a9:	call   0x85cd:0x3c03608
  41e7b0:	jmp    0xf20a:0x96a0f2d7
  41e7b7:	xor    BYTE PTR [ecx+0x561c9bd2],ch
  41e7bd:	jne    0x41e809
  41e7bf:	lock into 
  41e7c1:	aas    
  41e7c2:	or     ebx,DWORD PTR [esi-0x1a]
  41e7c5:	push   ebx
  41e7c6:	push   esi
  41e7c7:	sub    ecx,DWORD PTR [ecx-0x64]
  41e7ca:	sbb    BYTE PTR [edx],al
  41e7cc:	in     eax,dx
  41e7cd:	arpl   WORD PTR [edi+0x13],bp
  41e7d0:	xlat   BYTE PTR ds:[ebx]
  41e7d1:	ret    0xb5e1
  41e7d4:	repz xchg esp,eax
  41e7d6:	js     0x41e820
  41e7d8:	loopne 0x41e7bb
  41e7da:	data16 outs dx,BYTE PTR ds:[esi]
  41e7dc:	nop
  41e7dd:	out    0xd6,al
  41e7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e0:	sub    al,0x58
  41e7e2:	add    al,0xdf
  41e7e4:	jmp    0x41e850
  41e7e6:	mov    bh,0x17
  41e7e8:	xchg   edx,eax
  41e7e9:	or     edx,DWORD PTR [esi]
  41e7eb:	jl     0x41e778
  41e7ed:	test   al,0x9e
  41e7ef:	(bad)  
  41e7f0:	in     eax,dx
  41e7f1:	test   al,0xe5
  41e7f3:	mov    ah,0x6f
  41e7f5:	or     BYTE PTR ds:0xee6a482a,0xb5
  41e7fc:	cmp    eax,0xace483ff
  41e801:	loopne 0x41e7f6
  41e803:	cmp    al,0xdb
  41e805:	and    eax,0x5753e760
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	sub    al,0x91
  41e82a:	fs sahf 
  41e82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0x9f
  41e835:	daa    
  41e836:	push   ebx
  41e837:	mov    DWORD PTR [edi-0x4b],ecx
  41e83a:	jae    0x41e89b
  41e83c:	and    al,0x72
  41e83e:	cwde   
  41e83f:	fistp  WORD PTR [edi]
  41e841:	cwd    
  41e843:	imul   DWORD PTR [edi-0x360fd8ac]
  41e849:	(bad)  
  41e84b:	mov    al,ds:0xd1adbfa0
  41e850:	loopne 0x41e8c2
  41e852:	jecxz  0x41e8b6
  41e854:	enter  0xd43d,0x6b
  41e858:	push   ss
  41e859:	push   esi
  41e85a:	mov    ah,0x4e
  41e85c:	mov    esi,0x207f70d7
  41e861:	rol    BYTE PTR [ecx+edx*8+0xf63f2c1],cl
  41e868:	mov    cl,0xcc
  41e86a:	rcl    al,1
  41e86c:	retf   
  41e86d:	mov    ebx,0xaa333e7b
  41e872:	adc    ecx,DWORD PTR [edx+edi*1-0x2e]
  41e876:	ja     0x41e85d
  41e878:	fwait
  41e879:	icebp  
  41e87a:	sti    
  41e87b:	or     edi,edx
  41e87d:	loopne 0x41e8bf
  41e87f:	clc    
  41e880:	xchg   sp,ax
  41e882:	loop   0x41e8d0
  41e884:	cmp    BYTE PTR [edi-0x748f5372],bl
  41e88a:	(bad)  
  41e88b:	hlt    
  41e88c:	(bad)  
  41e88e:	mov    dh,0x82
  41e890:	xlat   BYTE PTR ds:[ebx]
  41e891:	(bad)  
  41e892:	pop    eax
  41e893:	ja     0x41e8b0
  41e895:	jns    0x41e858
  41e897:	mov    cl,0xef
  41e899:	es je  0x41e8dc
  41e89c:	inc    esi
  41e89d:	push   edi
  41e89e:	lods   eax,DWORD PTR ds:[esi]
  41e89f:	fs push edx
  41e8a1:	inc    ebp
  41e8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a3:	call   0xf4d17d85
  41e8a8:	popf   
  41e8a9:	adc    BYTE PTR [edi+0x45bcef1b],bl
  41e8af:	push   esp
  41e8b0:	mov    ?,WORD PTR [edi+0x2c]
  41e8b3:	adc    al,0x19
  41e8b5:	push   ecx
  41e8b6:	fsub   DWORD PTR [esi]
  41e8b8:	mov    al,ds:0xeeedf317
  41e8bd:	mov    bh,0xaa
  41e8bf:	jmp    0x51f7:0xfe30858b
  41e8c6:	sbb    eax,0xe2c92193
  41e8cb:	inc    ebp
  41e8cc:	jl     0x41e91a
  41e8ce:	inc    eax
  41e8cf:	fs jl  0x41e8d9
  41e8d2:	cs out dx,eax
  41e8d4:	data16 add cl,cl
  41e8d7:	mov    esp,0xb313be54
  41e8dc:	inc    eax
  41e8dd:	imul   BYTE PTR [edx-0x6475fb2f]
  41e8e3:	pop    eax
  41e8e4:	mov    gs,WORD PTR [edi]
  41e8e6:	dec    edx
  41e8e7:	mov    dh,0x2e
  41e8e9:	mov    ds:0xa78d8aa4,al
  41e8ee:	pop    ecx
  41e8ef:	idiv   DWORD PTR [eax-0x4bab26a9]
  41e8f5:	xchg   edx,eax
  41e8f6:	iret   
  41e8f7:	aaa    
  41e8f8:	cli    
  41e8f9:	loopne 0x41e922
  41e8fb:	push   ds
  41e8fc:	or     dh,BYTE PTR [edx-0x47d0f021]
  41e902:	and    BYTE PTR [ebx+0x24d77d1c],cl
  41e908:	mov    ah,BYTE PTR [ebp-0x30]
  41e90b:	cmp    DWORD PTR [eax],esp
  41e90d:	imul   ecx,DWORD PTR [eax+ebx*8-0x47],0xfffffff4
  41e912:	adc    BYTE PTR [esi-0x1e],dh
  41e915:	mov    esi,0xacaf525c
  41e91a:	shr    ecx,1
  41e91c:	iret   
  41e91d:	retf   0xef46
  41e920:	sbb    ebp,DWORD PTR [ebx+0x4aa881a9]
  41e926:	ficom  DWORD PTR [esi+0x1f]
  41e929:	je     0x41e8f1
  41e92b:	adc    eax,0x9f402c9e
  41e930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e931:	shl    BYTE PTR gs:[ebp-0xe6eb708],cl
  41e938:	pop    edx
  41e939:	jne    0x41e992
  41e93b:	aaa    
  41e93c:	outs   dx,DWORD PTR ds:[esi]
  41e93d:	add    ah,BYTE PTR [edx-0x4b]
  41e940:	std    
  41e941:	sub    esi,DWORD PTR [esi+0x59]
  41e944:	push   ebp
  41e945:	xchg   ecx,eax
  41e946:	das    
  41e947:	ss jns 0x41e92e
  41e94a:	mov    ecx,0x26babc5c
  41e94f:	imul   esp,DWORD PTR [ebx-0x31],0xffb146b3
  41e956:	lods   al,BYTE PTR ds:[si]
  41e958:	pop    edi
  41e959:	adc    dh,BYTE PTR [eax-0x6fc813f5]
  41e95f:	add    DWORD PTR [ebx+0x4a4405fd],eax
  41e965:	aas    
  41e966:	(bad)  
  41e967:	ja     0x41e8fd
  41e969:	imul   esp,DWORD PTR [edx-0x21],0x5db395e5
  41e970:	mov    ah,0x3d
  41e972:	sti    
  41e973:	mov    edx,0x33ea2af7
  41e978:	in     eax,dx
  41e979:	adc    eax,0xa1aed2f
  41e97e:	aas    
  41e97f:	pop    ecx
  41e980:	icebp  
  41e981:	ficom  WORD PTR [edi]
  41e983:	xor    ebx,DWORD PTR [edx]
  41e985:	mov    bl,0xdf
  41e987:	mov    dl,0x57
  41e989:	pcmpeqd mm0,QWORD PTR [esi]
  41e98c:	or     eax,0x9ca972cb
  41e991:	mov    bl,0xbb
  41e993:	int    0xb2
  41e995:	jle    0x41e92a
  41e997:	push   ecx
  41e998:	fwait
  41e999:	mov    ds,WORD PTR [ecx]
  41e99b:	jmp    0x41e9d8
  41e99d:	adc    DWORD PTR [edx],0x284a8c00
  41e9a3:	ficom  WORD PTR [ebp-0x4b]
  41e9a6:	cmp    ah,BYTE PTR [edi+0x26d30c14]
  41e9ac:	cmp    BYTE PTR [edi-0x7a],ch
  41e9af:	sbb    BYTE PTR [ecx-0x13],0xe8
  41e9b3:	adc    al,0x36
  41e9b5:	and    al,bh
  41e9b7:	mov    eax,0x889a62f5
  41e9bc:	push   ebx
  41e9bd:	mov    DWORD PTR [ebp+0x4a],eax
  41e9c0:	cmp    al,0x21
  41e9c2:	add    BYTE PTR [edi+eiz*2],dl
  41e9c5:	sbb    DWORD PTR [ebx-0x4a],esp
  41e9c8:	dec    edi
  41e9c9:	arpl   WORD PTR [eax+0x2211a876],si
  41e9cf:	fcomp  st(6)
  41e9d1:	pop    ds
  41e9d2:	xchg   ebx,eax
  41e9d3:	imul   eax,eax,0x14762400
  41e9d9:	stos   BYTE PTR es:[edi],al
  41e9da:	jae    0x41e997
  41e9dc:	lock dec ebx
  41e9de:	dec    ecx
  41e9df:	inc    esi
  41e9e0:	adc    DWORD PTR [eax+0x57],0xc9829b6e
  41e9e7:	or     al,0x7
  41e9e9:	hlt    
  41e9ea:	mov    eax,0xae598ec4
  41e9ef:	sbb    al,0xe5
  41e9f1:	mov    ch,BYTE PTR [eax+0x77a87000]
  41e9f7:	stc    
  41e9f8:	pop    edx
  41e9f9:	fbld   TBYTE PTR [ecx+0x28]
  41e9fc:	cmc    
  41e9fd:	pop    es
  41e9fe:	cmp    cl,cl
  41ea00:	dec    ebx
  41ea01:	fbld   TBYTE PTR [ebp-0x2a]
  41ea04:	mov    bh,ch
  41ea06:	push   0xffffffca
  41ea08:	dec    ebp
  41ea09:	cmp    DWORD PTR [ebx+0x3bfd44a1],edi
  41ea0f:	pop    ss
  41ea10:	inc    ebx
  41ea11:	inc    ebp
  41ea12:	jmp    0x7c38:0x16d8ec80
  41ea19:	ret    0x5b31
  41ea1c:	pop    ds
  41ea1d:	mov    eax,ds:0xe66218ef
  41ea22:	imul   eax,DWORD PTR [ecx-0x5a],0x31
  41ea26:	adc    DWORD PTR [ebx],ebx
  41ea28:	mov    al,ds:0xd08c15a2
  41ea2d:	cmp    esi,DWORD PTR [ebx+ebp*8+0x69]
  41ea31:	ins    BYTE PTR es:[edi],dx
  41ea32:	fadd   st,st(2)
  41ea34:	cmp    BYTE PTR [eax-0x7],bl
  41ea37:	fnstenv [ebp+0x6a]
  41ea3a:	dec    ecx
  41ea3b:	mov    ah,0x31
  41ea3d:	fmul   st(6),st
  41ea3f:	add    dh,BYTE PTR [eax]
  41ea41:	add    BYTE PTR [esi+0x282892fb],al
  41ea47:	push   ebp
  41ea48:	cmp    al,dh
  41ea4a:	push   esp
  41ea4b:	pusha  
  41ea4c:	into   
  41ea4d:	xchg   bh,ah
  41ea4f:	test   al,0x95
  41ea51:	das    
  41ea52:	adc    edi,DWORD PTR ds:0xb0701676
  41ea58:	xchg   ebx,eax
  41ea59:	and    cl,BYTE PTR [edx-0x7c8550ba]
  41ea5f:	jno    0x41ea65
  41ea61:	mov    ecx,0xc13730fa
  41ea66:	push   ds
  41ea67:	icebp  
  41ea68:	dec    edi
  41ea69:	or     al,0x89
  41ea6b:	dec    ebp
  41ea6c:	mov    ebp,0xec43169
  41ea71:	icebp  
  41ea72:	sub    eax,0xfc24a610
  41ea77:	cmp    al,0x40
  41ea79:	mov    ah,0x8
  41ea7b:	or     ah,BYTE PTR [esi-0x5f94de5e]
  41ea81:	xchg   ebp,eax
  41ea82:	pusha  
  41ea83:	pop    ebp
  41ea84:	mov    bh,0xcb
  41ea86:	leave  
  41ea87:	or     esi,DWORD PTR [ebx]
  41ea89:	push   ecx
  41ea8a:	ins    BYTE PTR es:[edi],dx
  41ea8b:	push   esp
  41ea8c:	push   edx
  41ea8d:	push   ds
  41ea8e:	push   ds
  41ea8f:	nop
  41ea90:	loopne 0x41ea3d
  41ea92:	pusha  
  41ea93:	aad    0x39
  41ea95:	pusha  
  41ea96:	and    edi,ebx
  41ea98:	in     al,0xe5
  41ea9a:	pop    ss
  41ea9b:	add    eax,ebp
  41ea9d:	push   ecx
  41ea9e:	inc    edx
  41ea9f:	into   
  41eaa0:	pop    es
  41eaa1:	je     0x41ea3a
  41eaa3:	and    DWORD PTR [ebx+esi*2],ebp
  41eaa6:	xor    ebp,eax
  41eaa8:	scas   eax,DWORD PTR es:[edi]
  41eaa9:	pop    eax
  41eaaa:	xchg   esi,eax
  41eaab:	adc    ebp,eax
  41eaad:	leave  
  41eaae:	jmp    0xca5:0xeb85198b
  41eab5:	fwait
  41eab6:	call   0x74ccdadb
  41eabb:	out    dx,eax
  41eabc:	ja     0x41eb09
  41eabe:	push   esi
  41eabf:	pslld  mm2,QWORD PTR [ecx-0xd]
  41eac3:	mov    fs,WORD PTR [eax-0x33]
  41eac6:	test   al,0x28
  41eac8:	(bad)  
  41eac9:	sbb    al,0x7f
  41eacb:	sub    DWORD PTR [edx-0x58],eax
  41eace:	or     al,0xc
  41ead0:	add    al,0x9a
  41ead2:	push   ebp
  41ead3:	mov    esp,0xdd91fb8d
  41ead8:	jb     0x41eb01
  41eada:	retf   
  41eadb:	push   esi
  41eadc:	push   esp
  41eadd:	jae    0x41ea9e
  41eadf:	lods   eax,DWORD PTR ds:[esi]
  41eae0:	xor    al,0xee
  41eae2:	adc    al,0x2
  41eae4:	sub    al,0x42
  41eae6:	arpl   cx,sp
  41eae8:	call   0x28ae:0xb3afe9fd
  41eaef:	xchg   DWORD PTR [edx],esi
  41eaf1:	test   al,bh
  41eaf3:	or     al,bl
  41eaf5:	ret    
  41eaf6:	enter  0x1b98,0x40
  41eafa:	push   esp
  41eafb:	and    ebx,DWORD PTR [esi-0x7b919ff9]
  41eb01:	loopne 0x41eb5f
  41eb03:	xor    esi,0x62
  41eb06:	sti    
  41eb07:	pop    ecx
  41eb08:	cmc    
  41eb09:	das    
  41eb0a:	lods   al,BYTE PTR ds:[esi]
  41eb0b:	add    ecx,ecx
  41eb0d:	cmc    
  41eb0e:	mov    eax,ds:0x940733fc
  41eb13:	adc    ebx,DWORD PTR ds:0x65513b89
  41eb19:	xchg   BYTE PTR [eax-0x42],dh
  41eb1c:	push   edi
  41eb1d:	mov    bl,0x14
  41eb1f:	out    0x4f,eax
  41eb21:	sbb    bl,dh
  41eb23:	dec    esi
  41eb24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb25:	jecxz  0x41eaf8
  41eb27:	xor    ebx,DWORD PTR [ebp+0x4d]
  41eb2a:	cmp    DWORD PTR [edx-0x2d34fa4c],ebx
  41eb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb31:	js     0x41eabc
  41eb33:	jb     0x41eb88
  41eb35:	adc    BYTE PTR [eax+0x6e],bh
  41eb38:	fmulp  st(4),st
  41eb3a:	xchg   esi,eax
  41eb3b:	sbb    eax,0x83cb9aee
  41eb40:	and    ecx,DWORD PTR [ebx]
  41eb42:	hlt    
  41eb43:	pushf  
  41eb44:	loop   0x41eb80
  41eb46:	cmp    eax,0x20d76276
  41eb4b:	jns    0x41ebaa
  41eb4d:	fidiv  WORD PTR [ecx+0x4e1d0481]
  41eb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb54:	or     al,0xde
  41eb56:	jns    0x41eb18
  41eb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb59:	mov    eax,ds:0xd5a3a0a9
  41eb5e:	test   DWORD PTR [esi],0x62851a6f
  41eb64:	bound  edx,QWORD PTR [eax]
  41eb66:	xlat   BYTE PTR ds:[ebx]
  41eb67:	hlt    
  41eb68:	lds    ebx,FWORD PTR [ebp-0x7b]
  41eb6b:	and    al,BYTE PTR [edi*8-0x4897054a]
  41eb72:	push   cs
  41eb73:	popa   
  41eb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb75:	mov    ecx,fs
  41eb77:	push   ebp
  41eb78:	cli    
  41eb79:	leave  
  41eb7a:	adc    DWORD PTR [edi],esp
  41eb7c:	xor    dh,al
  41eb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb7f:	clc    
  41eb80:	mov    edi,0x98f60a35
  41eb85:	push   cs
  41eb86:	test   eax,0x4a461e8
  41eb8b:	out    0x71,al
  41eb8d:	ja     0x41ebe2
  41eb8f:	cli    
  41eb90:	mov    ds:0x62c5a7ab,al
  41eb95:	mov    cs:0x34429819,al
  41eb9b:	rcr    BYTE PTR [edi-0x7edac564],0xa4
  41eba2:	ins    DWORD PTR es:[edi],dx
  41eba3:	dec    esp
  41eba4:	lock inc edi
  41eba6:	outs   dx,DWORD PTR ds:[esi]
  41eba7:	add    al,0xd2
  41eba9:	lds    eax,FWORD PTR [ecx-0x10fd7cdc]
  41ebaf:	jp     0x41eb8a
  41ebb1:	rol    BYTE PTR [ebp-0x1c],0x8e
  41ebb5:	js     0x41ec1e
  41ebb7:	pop    ecx
  41ebb8:	push   esp
  41ebb9:	xchg   edx,eax
  41ebba:	jne    0x41eb3e
  41ebbc:	repz pop ebp
  41ebbe:	inc    esi
  41ebbf:	add    al,0x7
  41ebc1:	xchg   ebx,eax
  41ebc2:	test   eax,0x368607c6
  41ebc7:	mov    bh,0x5
  41ebc9:	xchg   ebp,eax
  41ebca:	data16 xor al,0xbb
  41ebcd:	shl    BYTE PTR [eax+0x40],1
  41ebd0:	and    al,0xe4
  41ebd2:	cwde   
  41ebd3:	adc    al,0x62
  41ebd5:	xchg   ecx,eax
  41ebd6:	cmp    al,0xbf
  41ebd8:	loope  0x41eb72
  41ebda:	iret   
  41ebdb:	retf   0x745b
  41ebde:	pop    es
  41ebdf:	dec    ebp
  41ebe0:	adc    DWORD PTR [ecx],ecx
  41ebe2:	cdq    
  41ebe3:	dec    edx
  41ebe4:	mov    al,0xc4
  41ebe6:	inc    esi
  41ebe7:	pop    edi
  41ebe8:	push   cs
  41ebe9:	ss cmp eax,0x94f1a4bc
  41ebef:	pop    edi
  41ebf0:	and    eax,edx
  41ebf2:	call   0x854203e
  41ebf7:	xchg   ebp,eax
  41ebf8:	jo     0x41ebae
  41ebfa:	inc    edx
  41ebfb:	test   bh,ah
  41ebfd:	mov    edi,0x456840f
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	mov    fs,WORD PTR [edi+0x70]
  41ec1e:	fnsave [ebx]
  41ec20:	ja     0x41ebe2
  41ec22:	mov    esi,0xbebec44a
  41ec27:	(bad)  
  41ec28:	dec    esi
  41ec29:	or     DWORD PTR [edx-0x3f7e46d0],0x2c
  41ec30:	mov    al,ds:0x32686a1b
  41ec35:	sub    eax,0x61be7ebf
  41ec3a:	mov    dh,dl
  41ec3c:	scas   eax,DWORD PTR es:[edi]
  41ec3d:	hlt    
  41ec3e:	adc    eax,0x9f73e491
  41ec43:	adc    eax,0x3ac79aee
  41ec48:	in     eax,0xfa
  41ec4a:	hlt    
  41ec4b:	mov    bl,al
  41ec4d:	popf   
  41ec4e:	je     0x41ebd3
  41ec50:	call   FWORD PTR [edi]
  41ec52:	jb     0x41ec42
  41ec54:	shl    dl,cl
  41ec56:	add    al,0xb3
  41ec58:	add    BYTE PTR [edi+0x1a],ch
  41ec5b:	and    eax,0x326657f3
  41ec60:	nop
  41ec61:	inc    esp
  41ec62:	aam    0xfd
  41ec64:	cmp    bh,dh
  41ec66:	xor    DWORD PTR [ebx+0x9],ebp
  41ec69:	or     eax,0xea2f916f
  41ec6e:	add    eax,0x81cfc55b
  41ec73:	pop    esp
  41ec74:	addr16 dec ecx
  41ec76:	sar    DWORD PTR [edx+0x5],0x8e
  41ec7a:	cmp    BYTE PTR [esi],ah
  41ec7c:	repz mov ah,0xb8
  41ec7f:	jae    0x41ecf6
  41ec81:	clc    
  41ec82:	push   eax
  41ec83:	dec    edi
  41ec84:	mov    cl,0x64
  41ec86:	addr16 std 
  41ec88:	sbb    esp,DWORD PTR [ebx-0x156bf787]
  41ec8e:	inc    eax
  41ec8f:	hlt    
  41ec90:	mov    eax,ds:0x81c68a86
  41ec95:	enter  0xd69d,0x3c
  41ec99:	stos   BYTE PTR es:[edi],al
  41ec9a:	and    DWORD PTR [edi-0x5a32ff25],edi
  41eca0:	imul   edi,ebp,0x14
  41eca3:	into   
  41eca4:	push   eax
  41eca5:	push   es
  41eca6:	push   edx
  41eca7:	jle    0x41ec80
  41eca9:	mov    esi,0x701cf8c3
  41ecae:	or     BYTE PTR [ecx+ebp*4+0x4608d01],bh
  41ecb5:	imul   esi,DWORD PTR [edx-0x4f],0x4f
  41ecb9:	xchg   ecx,eax
  41ecba:	aaa    
  41ecbb:	sbb    eax,0x3f00d748
  41ecc0:	push   edi
  41ecc1:	in     eax,0xef
  41ecc3:	pop    esp
  41ecc4:	test   bl,dl
  41ecc6:	mov    edi,0xfdcbebe7
  41eccb:	adc    edx,esi
  41eccd:	pop    ecx
  41ecce:	cmp    BYTE PTR [ebx],cl
  41ecd0:	cld    
  41ecd1:	mov    edx,0xa1e38075
  41ecd6:	pop    ebp
  41ecd7:	mov    esi,0x357e90b5
  41ecdc:	jge    0x41ec7c
  41ecde:	sahf   
  41ecdf:	in     al,0x18
  41ece1:	cwde   
  41ece2:	pop    edi
  41ece3:	and    BYTE PTR [ecx],0xca
  41ece6:	jp     0x41ed2c
  41ece8:	push   0x4a71d2d3
  41eced:	and    al,0x8
  41ecef:	mov    bl,0x56
  41ecf1:	pop    ebp
  41ecf2:	push   ecx
  41ecf3:	sub    esi,DWORD PTR [eax+0x61]
  41ecf6:	lods   eax,DWORD PTR ds:[esi]
  41ecf7:	add    DWORD PTR [esp+edx*8],esp
  41ecfa:	mov    al,0xb8
  41ecfc:	cmp    esi,ecx
  41ecfe:	in     al,dx
  41ecff:	pop    ebp
  41ed00:	inc    edi
  41ed01:	adc    al,0x7b
  41ed03:	sar    esi,1
  41ed05:	int3   
  41ed06:	mov    ch,0xd6
  41ed08:	xchg   ecx,eax
  41ed09:	inc    eax
  41ed0a:	xchg   edx,eax
  41ed0b:	push   ecx
  41ed0c:	dec    edx
  41ed0d:	cmp    al,0x4e
  41ed0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed10:	pushf  
  41ed11:	mov    al,ds:0xd1fb2286
  41ed16:	retf   
  41ed17:	inc    ebx
  41ed18:	pop    edx
  41ed19:	les    ebp,FWORD PTR [edi-0x2aad8f25]
  41ed1f:	jo     0x41ed58
  41ed21:	lock pop ecx
  41ed23:	mov    bl,BYTE PTR [esi-0x4c56e8e1]
  41ed29:	int    0xf2
  41ed2b:	mov    bh,0x6a
  41ed2d:	icebp  
  41ed2e:	cmp    DWORD PTR [edi-0x7b1c5475],esi
  41ed34:	push   0x1bb7476a
  41ed39:	jl     0x41ecf0
  41ed3b:	jb     0x41ed80
  41ed3d:	mov    DWORD PTR [eax+0x70],ebp
  41ed40:	jmp    0x8d46aed4
  41ed45:	sub    BYTE PTR [eax],bh
  41ed47:	aam    0x80
  41ed49:	pop    esi
  41ed4a:	scas   al,BYTE PTR es:[edi]
  41ed4b:	rcr    DWORD PTR [edx+0x76a82d25],1
  41ed51:	(bad)  
  41ed52:	pop    eax
  41ed53:	sbb    DWORD PTR [ebp-0x24],edx
  41ed56:	lahf   
  41ed57:	fidiv  WORD PTR [ecx+ebp*4]
  41ed5a:	sbb    al,0x10
  41ed5c:	fwait
  41ed5d:	loope  0x41ed77
  41ed5f:	(bad)  
  41ed61:	add    al,0x20
  41ed63:	mov    ch,BYTE PTR [eax+eax*4+0x5c2047e7]
  41ed6a:	push   ecx
  41ed6b:	mov    dl,0x85
  41ed6d:	les    ebx,FWORD PTR [ecx-0x1e]
  41ed70:	shl    BYTE PTR [ebp-0x93d50f1],0x41
  41ed77:	ins    DWORD PTR es:[edi],dx
  41ed78:	push   esp
  41ed79:	inc    edx
  41ed7a:	(bad)  
  41ed7d:	inc    eax
  41ed7e:	ins    BYTE PTR es:[edi],dx
  41ed7f:	fisttp QWORD PTR [edx]
  41ed81:	jbe    0x41edd8
  41ed83:	mov    ebp,edx
  41ed85:	inc    ebp
  41ed86:	or     eax,0x11c16cc5
  41ed8b:	call   0xabd2:0xb601d2ad
  41ed92:	sub    ch,BYTE PTR [ebx+edx*2+0x3d]
  41ed96:	fsub   DWORD PTR [ebx+0x98aa8b5]
  41ed9c:	lods   al,BYTE PTR ds:[esi]
  41ed9d:	fstp   QWORD PTR [edx]
  41ed9f:	cmp    ch,0xa1
  41eda2:	pop    edi
  41eda3:	fmul   DWORD PTR [ebp+0x6324b474]
  41eda9:	cs retf 0x8654
  41edad:	fld    st(0)
  41edaf:	push   edi
  41edb0:	daa    
  41edb1:	xor    eax,0x38fa9c4
  41edb6:	xor    dh,al
  41edb8:	test   DWORD PTR [eax-0x74897195],ebp
  41edbe:	fs sar cl,1
  41edc1:	outs   dx,DWORD PTR ds:[esi]
  41edc2:	aam    0x63
  41edc4:	cmp    eax,0xd1295797
  41edc9:	js     0x41ed9f
  41edcb:	sub    eax,0xf07e6d31
  41edd0:	mov    DWORD PTR [edx+0x1],esi
  41edd3:	xchg   edi,eax
  41edd4:	mov    eax,DWORD PTR [eax-0xb]
  41edd7:	mov    eax,cs
  41edd9:	inc    esp
  41edda:	repnz add cl,bh
  41eddd:	cmp    eax,0x3be64864
  41ede2:	(bad)  
  41ede3:	cld    
  41ede4:	mov    esi,0x18273c99
  41ede9:	inc    esi
  41edea:	stc    
  41edeb:	sbb    eax,0xaa1e4868
  41edf0:	add    eax,0x1b9f3a64
  41edf5:	lea    edx,[ebp+0x134a77f7]
  41edfb:	outs   dx,BYTE PTR ds:[esi]
  41edfc:	nop
  41edfd:	dec    edx
  41edfe:	scas   eax,DWORD PTR es:[edi]
  41edff:	jno    0x41ee19
  41ee01:	sub    ebp,DWORD PTR [edx+0x5c78b3d2]
  41ee07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee08:	cs (bad) 
  41ee0a:	sub    edx,ecx
  41ee0c:	or     eax,DWORD PTR [eax+eiz*1+0x79]
  41ee10:	sub    ah,ah
  41ee12:	lods   al,BYTE PTR ds:[esi]
  41ee13:	inc    ebp
  41ee14:	xchg   esi,eax
  41ee15:	rcr    BYTE PTR [ebx+0x37],1
  41ee18:	data16 mov dh,0x1f
  41ee1b:	dec    ecx
  41ee1c:	js     0x41ee11
  41ee1e:	outs   dx,DWORD PTR ds:[esi]
  41ee1f:	in     al,dx
  41ee20:	data16 scas al,BYTE PTR es:[edi]
  41ee22:	or     BYTE PTR fs:[ecx-0x1a],0x9d
  41ee27:	jle    0x41ee9c
  41ee29:	jecxz  0x41ede2
  41ee2b:	lods   eax,DWORD PTR ds:[esi]
  41ee2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee2d:	call   0x567761e4
  41ee32:	out    dx,eax
  41ee33:	div    DWORD PTR fs:[ebx-0x13]
  41ee37:	bound  ebx,QWORD PTR ds:0xacdabf4
  41ee3d:	cmp    ch,cl
  41ee3f:	push   eax
  41ee40:	out    dx,eax
  41ee41:	gs push esi
  41ee43:	lea    eax,[eax]
  41ee45:	inc    ebp
  41ee46:	sbb    ch,BYTE PTR [ecx+0x7e]
  41ee49:	pop    ebp
  41ee4a:	test   BYTE PTR [edi-0x6e5ac7bd],ch
  41ee50:	fistp  DWORD PTR [eax-0x31]
  41ee53:	add    BYTE PTR [edi-0x35],cl
  41ee56:	inc    edx
  41ee57:	mov    ecx,0xdf9fe795
  41ee5c:	and    al,0x3c
  41ee5e:	fstp   QWORD PTR [ecx+0x4]
  41ee61:	dec    ebp
  41ee62:	push   esp
  41ee63:	in     al,dx
  41ee64:	aad    0x90
  41ee66:	push   esp
  41ee67:	cmp    ch,dh
  41ee69:	inc    ebp
  41ee6a:	outs   dx,DWORD PTR ds:[esi]
  41ee6b:	jle    0x41ee5c
  41ee6d:	xor    ch,BYTE PTR [edx+0x7416bdd5]
  41ee73:	test   al,0x7a
  41ee75:	dec    eax
  41ee76:	mov    edx,0xcd3055c8
  41ee7b:	mov    DWORD PTR [edx+0x33b67fc0],eax
  41ee81:	mov    edx,0x333161a6
  41ee86:	mov    ds:0xd7e6e956,al
  41ee8b:	jle    0x41eec3
  41ee8d:	pop    ebp
  41ee8e:	adc    DWORD PTR [eax+eax*8+0x556d06c8],edi
  41ee95:	mov    DWORD PTR [edi],0x99b68b7
  41ee9b:	int3   
  41ee9c:	(bad)  
  41ee9d:	ror    BYTE PTR [ebx-0x26],cl
  41eea0:	xchg   edi,eax
  41eea1:	dec    edx
  41eea2:	adc    BYTE PTR [esi-0x3a],bh
  41eea5:	je     0x41eed5
  41eea7:	xor    eax,0x6f85496b
  41eeac:	mov    bl,0xb2
  41eeae:	loope  0x41ee91
  41eeb0:	repnz cmc 
  41eeb2:	mov    edi,0xeb27211d
  41eeb7:	mov    esp,0xf9b64e76
  41eebc:	mov    dh,0xa0
  41eebe:	jbe    0x41eec1
  41eec0:	mov    edx,0xc79aafb8
  41eec5:	mov    DWORD PTR [eax+0xc7a670f],0xcdc5d7d3
  41eecf:	mov    cl,cl
  41eed1:	pop    ss
  41eed2:	mov    edx,0xb2de5239
  41eed7:	xor    ch,ah
  41eed9:	(bad)  
  41eeda:	out    dx,al
  41eedb:	push   ds
  41eedc:	sub    BYTE PTR [ebp+0x20a7a63f],0x51
  41eee3:	std    
  41eee4:	out    0x3e,eax
  41eee6:	lods   eax,DWORD PTR ds:[esi]
  41eee7:	cmp    al,0xe7
  41eee9:	jecxz  0x41eea5
  41eeeb:	sub    BYTE PTR [ebx-0x75558d29],ah
  41eef1:	jo     0x41eeb0
  41eef3:	add    BYTE PTR [esi],ah
  41eef5:	ja     0x41ef1e
  41eef7:	pop    esp
  41eef8:	xor    al,0x5b
  41eefa:	sub    al,0x2b
  41eefc:	das    
  41eefd:	add    ch,ah
  41eeff:	mov    ds,WORD PTR ds:0x63006dbf
  41ef05:	sbb    eax,0x2f304aff
  41ef0a:	sti    
  41ef0b:	daa    
  41ef0c:	mov    ch,0x6e
  41ef0e:	jbe    0x41ef09
  41ef10:	push   ecx
  41ef11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef12:	test   DWORD PTR [edi+edx*1+0x386842e4],eax
  41ef19:	inc    edx
  41ef1a:	cs addr16 inc edi
  41ef1d:	sub    BYTE PTR [esi+eiz*4],dl
  41ef20:	pop    ecx
  41ef21:	cmp    eax,0x9d7076d5
  41ef26:	es dec ebx
  41ef28:	cmp    al,0xcb
  41ef2a:	and    BYTE PTR [ebx+0x18],al
  41ef2d:	ret    
  41ef2e:	sub    esi,DWORD PTR [ebx+ebx*4-0x6e86996f]
  41ef35:	enter  0x4417,0x3
  41ef39:	jb     0x41ef69
  41ef3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef3c:	or     bh,BYTE PTR [ebp-0x76238d15]
  41ef42:	std    
  41ef43:	icebp  
  41ef44:	xor    DWORD PTR [edi+0x728ffc3e],esp
  41ef4a:	sub    al,0x58
  41ef4c:	ret    0xbbf1
  41ef4f:	push   edi
  41ef50:	dec    edx
  41ef51:	cwde   
  41ef52:	or     BYTE PTR cs:[eax-0x35],ch
  41ef56:	pop    ds
  41ef57:	scas   al,BYTE PTR es:[edi]
  41ef58:	jnp    0x41eeef
  41ef5a:	addr16 in eax,0x5a
  41ef5d:	sbb    eax,0xf059b057
  41ef62:	cmp    al,0x68
  41ef64:	sub    al,0x28
  41ef66:	inc    ecx
  41ef67:	or     eax,0x9233c289
  41ef6c:	push   ebx
  41ef6d:	dec    esi
  41ef6e:	loop   0x41efba
  41ef70:	xchg   esi,eax
  41ef71:	mov    cl,BYTE PTR [edi-0x1eef6dbc]
  41ef77:	jge    0x41efd2
  41ef79:	imul   ecx,DWORD PTR [ecx],0x4bc56ee9
  41ef7f:	push   es
  41ef80:	in     al,dx
  41ef81:	push   cs
  41ef82:	ret    
  41ef83:	and    ah,bl
  41ef85:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef87:	lahf   
  41ef88:	cdq    
  41ef89:	(bad)
  41ef8c:	adc    DWORD PTR ds:0x442a2eea,ebx
  41ef92:	push   cs
  41ef93:	lea    edi,[edx-0x3e]
  41ef96:	add    ch,BYTE PTR [esi-0x6e]
  41ef99:	iret   
  41ef9a:	mov    ds:0x3983d65,eax
  41ef9f:	push   ebx
  41efa0:	and    DWORD PTR [ecx-0x2e],ebp
  41efa3:	mov    edx,0x6e0ab94f
  41efa8:	call   0x9b45c97
  41efad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efae:	addr16 xchg ebp,eax
  41efb0:	mov    al,0x9a
  41efb2:	jbe    0x41ef96
  41efb4:	sbb    BYTE PTR [eax+esi*1-0x7b13b062],dl
  41efbb:	es pushf 
  41efbd:	pop    ss
  41efbe:	xchg   esi,ecx
  41efc0:	cmp    eax,0x41bdd88a
  41efc5:	or     BYTE PTR [edi+0x61],ah
  41efc8:	lds    ebp,FWORD PTR [eax]
  41efca:	pop    ebp
  41efcb:	out    dx,eax
  41efcc:	pop    ecx
  41efcd:	add    eax,0x41ad6e7c
  41efd2:	and    edx,0x639dd0de
  41efd8:	data16 (bad) 
  41efda:	fmul   st(1),st
  41efdc:	ins    DWORD PTR es:[edi],dx
  41efdd:	inc    edi
  41efde:	cwde   
  41efdf:	aas    
  41efe0:	mov    bl,0x74
  41efe2:	mov    esp,0x596eef93
  41efe7:	pop    ebx
  41efe8:	aam    0x42
  41efea:	call   0x3ded:0x834eb84e
  41eff1:	mov    edx,DWORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223e1
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223e1
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223e1
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223e1
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223e1
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	jecxz  0x41f1bb
  41f1c0:	repnz iret 
  41f1c2:	sar    BYTE PTR [edi-0x40],0xbe
  41f1c6:	dec    edx
  41f1c7:	les    edi,FWORD PTR [esi-0x667f8142]
  41f1cd:	ret    
  41f1ce:	dec    esp
  41f1cf:	retf   
  41f1d0:	(bad)  
  41f1d1:	mov    ss,WORD PTR ds:0xc5a44a59
  41f1d7:	jmp    FWORD PTR [eax]
  41f1d9:	inc    edx
  41f1da:	stos   DWORD PTR es:[edi],eax
  41f1db:	scas   al,BYTE PTR es:[edi]
  41f1dc:	in     al,dx
  41f1dd:	sar    dl,0x41
  41f1e0:	adc    eax,esi
  41f1e2:	fist   DWORD PTR [eax-0x6]
  41f1e5:	add    BYTE PTR [ecx-0x65198a93],cl
  41f1eb:	mov    eax,esi
  41f1ed:	outs   dx,BYTE PTR ds:[esi]
  41f1ee:	(bad)  
  41f1ef:	sbb    DWORD PTR [ecx+0x459539cd],edx
  41f1f5:	loopne 0x41f255
  41f1f7:	mov    DWORD PTR [edi],ebp
  41f1f9:	or     bh,0xae
  41f1fc:	adc    ebx,DWORD PTR [ebp+0x57be40fc]
  41f202:	push   edi
  41f203:	sbb    DWORD PTR [ecx-0x215a80d2],ecx
  41f209:	jmp    0x41f196
  41f20b:	xor    edx,esi
  41f20d:	inc    ebx
  41f20e:	retf   
  41f20f:	and    esp,ebx
  41f211:	in     eax,0xc6
  41f213:	inc    esp
  41f214:	(bad)  
  41f215:	imul   ebx,esp,0xffffffe7
  41f218:	inc    ebx
  41f219:	pop    es
  41f21a:	push   ss
  41f21b:	stc    
  41f21c:	inc    eax
  41f21d:	popa   
  41f21e:	inc    edi
  41f21f:	cvttps2pi mm0,QWORD PTR [esp+edx*4]
  41f223:	jmp    0xe576:0xc4fb1228
  41f22a:	sub    dl,ah
  41f22c:	enter  0x9b76,0x3c
  41f230:	or     dl,BYTE PTR [edx+0x26]
  41f233:	dec    ebp
  41f234:	pop    ss
  41f235:	push   ds
  41f236:	pop    es
  41f237:	ins    DWORD PTR es:[edi],dx
  41f238:	aad    0x91
  41f23a:	push   ss
  41f23b:	xchg   edi,eax
  41f23c:	sar    BYTE PTR [edx+0x2f],cl
  41f23f:	daa    
  41f240:	shr    DWORD PTR [eax+0x7d66bb29],1
  41f246:	lods   al,BYTE PTR ds:[esi]
  41f247:	jbe    0x41f2bc
  41f249:	and    eax,0x63179109
  41f24e:	push   0x9dffdc95
  41f253:	mov    ds:0x1b937f74,al
  41f258:	jg     0x41f27c
  41f25a:	push   edi
  41f25b:	jne    0x41f1e8
  41f25d:	xchg   ebp,eax
  41f25e:	sahf   
  41f25f:	xor    DWORD PTR [ebx],edx
  41f261:	out    dx,al
  41f262:	adc    DWORD PTR [ebx+0x7e],esp
  41f265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f266:	jl     0x41f22f
  41f268:	(bad)  
  41f269:	pop    eax
  41f26a:	das    
  41f26b:	add    al,0x21
  41f26d:	test   bl,0xe6
  41f270:	xchg   BYTE PTR [edx-0x52],cl
  41f273:	ffreep st(6)
  41f275:	mov    esi,ecx
  41f277:	(bad)  
  41f278:	popa   
  41f279:	sbb    edx,ebp
  41f27b:	and    dh,dh
  41f27d:	mov    ah,BYTE PTR [edx]
  41f27f:	mov    ecx,0x347ee794
  41f284:	(bad)  
  41f285:	fnstcw WORD PTR [esi+0x692575dd]
  41f28b:	jp     0x41f2dc
  41f28d:	call   0x4431:0x3e9da61b
  41f294:	jp     0x41f277
  41f296:	(bad)  
  41f297:	and    BYTE PTR [ebp-0x15],ah
  41f29a:	xor    esi,ebx
  41f29c:	add    BYTE PTR [eax],bh
  41f29e:	ins    DWORD PTR es:[edi],dx
  41f29f:	pop    ebx
  41f2a0:	or     eax,0xf8168510
  41f2a5:	jns    0x41f2e9
  41f2a7:	push   edx
  41f2a8:	sbb    DWORD PTR [ecx+ebp*1+0x2e],edi
  41f2ac:	add    eax,0x258f1eac
  41f2b1:	lds    ebx,FWORD PTR [edi-0x6c]
  41f2b4:	add    BYTE PTR [esi-0x263a6bb3],bl
  41f2ba:	cmp    al,0x2b
  41f2bc:	icebp  
  41f2bd:	retf   0x221e
  41f2c0:	inc    edx
  41f2c1:	pop    eax
  41f2c2:	inc    esp
  41f2c3:	mov    cl,0x4c
  41f2c5:	jg     0x41f287
  41f2c7:	(bad)  [edx-0x4edf94b0]
  41f2cd:	pop    edx
  41f2ce:	pop    ss
  41f2cf:	test   eax,0x56f7d8c7
  41f2d4:	call   DWORD PTR [ecx+0x27]
  41f2d7:	push   ebp
  41f2d8:	xchg   ebp,eax
  41f2d9:	mov    bh,0x68
  41f2db:	lods   al,BYTE PTR ds:[esi]
  41f2dc:	xchg   edx,eax
  41f2dd:	imul   ebp,DWORD PTR ds:0xaf10bd3a,0xad307c7e
  41f2e7:	in     eax,dx
  41f2e8:	sbb    al,BYTE PTR [eax]
  41f2ea:	mov    BYTE PTR [edi],dl
  41f2ec:	push   ecx
  41f2ed:	pop    esi
  41f2ee:	aas    
  41f2ef:	clc    
  41f2f0:	jge    0x41f365
  41f2f2:	ret    
  41f2f3:	dec    esi
  41f2f4:	push   ebx
  41f2f5:	lods   eax,DWORD PTR ds:[esi]
  41f2f6:	pop    esp
  41f2f7:	int3   
  41f2f8:	fdivr  QWORD PTR [eax-0x4d]
  41f2fb:	xor    al,0x98
  41f2fd:	rol    DWORD PTR [edi],0xff
  41f300:	outs   dx,BYTE PTR ds:[esi]
  41f301:	test   BYTE PTR [edx+0x7d],ch
  41f304:	test   eax,0xcf523ced
  41f309:	aam    0xfd
  41f30b:	repnz sbb eax,0xe42e9055
  41f311:	xlat   BYTE PTR ds:[ebx]
  41f312:	popa   
  41f313:	and    eax,0x7bfca3f2
  41f318:	bt     DWORD PTR fs:[ebp+0x51],eax
  41f31d:	test   DWORD PTR [ebp-0x22],eax
  41f320:	dec    ecx
  41f321:	out    0x85,eax
  41f323:	or     ebx,0x73e252c4
  41f329:	mov    ah,0x76
  41f32b:	lahf   
  41f32c:	test   DWORD PTR [edi-0x1a],esi
  41f32f:	lock sbb al,0xbb
  41f332:	mov    ebx,0x1ddaaefb
  41f337:	xchg   ecx,eax
  41f338:	(bad)  
  41f339:	cli    
  41f33a:	jne    0x41f39d
  41f33c:	icebp  
  41f33d:	cmp    DWORD PTR ds:0x476664d2,edx
  41f343:	js     0x41f361
  41f345:	loop   0x41f353
  41f347:	add    al,ah
  41f349:	js     0x41f3ae
  41f34b:	test   BYTE PTR [ecx-0x63c0a834],bl
  41f351:	cs stos DWORD PTR es:[edi],eax
  41f353:	cmp    dh,BYTE PTR [ecx-0x46]
  41f356:	sti    
  41f357:	pop    esp
  41f358:	jns    0x41f35d
  41f35a:	sahf   
  41f35b:	jno    0x41f305
  41f35d:	mov    ds:0xf0be4354,eax
  41f362:	shr    BYTE PTR [esp+edx*1+0x31],0xe9
  41f367:	clc    
  41f368:	jge    0x41f367
  41f36a:	mov    ch,0xa7
  41f36c:	pop    ds
  41f36d:	out    0x99,eax
  41f36f:	jecxz  0x41f2fb
  41f371:	mov    dh,0xf1
  41f373:	das    
  41f374:	stos   DWORD PTR es:[edi],eax
  41f375:	js     0x41f3a8
  41f377:	pop    ss
  41f378:	mov    cl,0xa0
  41f37a:	jecxz  0x41f362
  41f37c:	call   esi
  41f37e:	in     al,dx
  41f37f:	call   0xa51ce9ff
  41f384:	sar    DWORD PTR [ecx+0x61],cl
  41f387:	jns    0x41f3d1
  41f389:	or     esp,DWORD PTR [eax-0x18]
  41f38c:	adc    ah,BYTE PTR [eax]
  41f38e:	ss jne 0x41f320
  41f391:	sbb    eax,0x3e0f50a
  41f396:	icebp  
  41f397:	push   cs
  41f398:	fild   WORD PTR [ebp+0x6c]
  41f39b:	ficom  WORD PTR [edi+0x3a94468]
  41f3a1:	js     0x41f404
  41f3a3:	addr16 (bad) 
  41f3a5:	dec    ecx
  41f3a6:	test   edi,0xbe6d12eb
  41f3ac:	and    al,0x5
  41f3ae:	mov    es,WORD PTR [ebx-0x37]
  41f3b1:	fst    DWORD PTR [edx]
  41f3b3:	sbb    DWORD PTR [ecx],ebx
  41f3b5:	cld    
  41f3b6:	jmp    0x813f43e0
  41f3bb:	jl     0x41f399
  41f3bd:	fild   DWORD PTR [ecx]
  41f3bf:	in     eax,0xd6
  41f3c1:	bound  edi,QWORD PTR [edx-0x20]
  41f3c4:	test   eax,0x2ac1bfe3
  41f3c9:	scas   eax,DWORD PTR es:[edi]
  41f3ca:	or     eax,0x763ddd31
  41f3cf:	(bad)  
  41f3d0:	sbb    ah,BYTE PTR [edi]
  41f3d2:	aam    0x5e
  41f3d4:	pop    es
  41f3d5:	mov    ebp,0x26dfb44a
  41f3da:	out    dx,al
  41f3db:	push   ss
  41f3dc:	mov    dl,0xfe
  41f3de:	ja     0x41f439
  41f3e0:	jbe    0x41f40b
  41f3e2:	cmp    ch,bl
  41f3e4:	sub    ch,ah
  41f3e6:	xchg   edx,eax
  41f3e7:	mov    BYTE PTR [ebp-0x16569d3d],dh
  41f3ed:	xor    esp,DWORD PTR [edx-0x34]
  41f3f0:	dec    esi
  41f3f1:	mov    ds:0xc29413a9,eax
  41f3f6:	cmp    esi,ecx
  41f3f8:	jo     0x41f478
  41f3fa:	mov    esp,0x5b12fef1
  41f3ff:	push   0xffffff8a
  41f401:	outs   dx,DWORD PTR ds:[esi]
  41f402:	adc    cl,BYTE PTR [ebx-0x4a]
  41f405:	call   0x93500cd8
  41f40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f40b:	adc    BYTE PTR [ecx-0x4e72193f],bl
  41f411:	jl     0x41f492
  41f413:	add    eax,0xa50433cd
  41f418:	pop    ebp
  41f419:	cmp    DWORD PTR [edx],0x20139adb
  41f41f:	stos   BYTE PTR es:[edi],al
  41f420:	push   esp
  41f421:	dec    edx
  41f422:	jg     0x41f45e
  41f424:	pop    ss
  41f425:	sahf   
  41f426:	adc    eax,eax
  41f428:	dec    esp
  41f429:	ins    BYTE PTR es:[edi],dx
  41f42a:	mov    cl,0xc8
  41f42c:	hlt    
  41f42d:	retf   
  41f42e:	push   ebx
  41f42f:	push   ecx
  41f430:	or     al,ch
  41f432:	loopne 0x41f428
  41f434:	sbb    eax,0x980c092a
  41f439:	adc    ebx,DWORD PTR [esi]
  41f43b:	mov    ebp,0x39b59150
  41f440:	scas   al,BYTE PTR es:[edi]
  41f441:	and    al,0x50
  41f443:	je     0x41f480
  41f445:	dec    ebp
  41f446:	rcr    ebx,cl
  41f448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f449:	inc    ebp
  41f44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f44c:	mov    ?,esp
  41f44e:	mov    cl,0xde
  41f450:	out    0x79,al
  41f452:	push   ds
  41f453:	in     eax,0x5f
  41f455:	add    al,0x8e
  41f457:	pop    eax
  41f458:	xchg   ecx,eax
  41f459:	push   0xffffffb9
  41f45b:	mov    bl,0xc9
  41f45d:	sar    BYTE PTR [ebx],cl
  41f45f:	mov    ch,BYTE PTR [ebx+0x53]
  41f462:	mov    ebp,0x7c92c19f
  41f467:	pop    edi
  41f468:	xchg   edi,eax
  41f469:	sub    eax,0x1f836c0c
  41f46e:	sub    eax,DWORD PTR [edx]
  41f470:	jp     0x41f468
  41f472:	fsubr  QWORD PTR [ebp+0x55]
  41f475:	dec    ecx
  41f476:	adc    dh,BYTE PTR [ecx+esi*4-0x1f3bb1df]
  41f47d:	push   ecx
  41f47e:	ret    
  41f47f:	bound  eax,QWORD PTR [ebp-0x12]
  41f482:	push   es
  41f483:	(bad)  
  41f484:	retf   
  41f485:	pusha  
  41f486:	jg     0x41f48d
  41f488:	fdivr  st(3),st
  41f48a:	out    0x5c,al
  41f48c:	test   BYTE PTR [edx-0x72],ch
  41f48f:	dec    eax
  41f490:	jmp    0xca744ae4
  41f495:	xchg   esi,eax
  41f496:	minps  xmm6,xmm3
  41f499:	dec    eax
  41f49a:	cld    
  41f49b:	push   ds
  41f49c:	out    0xef,al
  41f49e:	push   esi
  41f49f:	pop    ecx
  41f4a0:	dec    ecx
  41f4a1:	mov    esp,0xd5356434
  41f4a6:	add    dh,dh
  41f4a8:	and    eax,0x5b578b75
  41f4ad:	(bad)  [ecx]
  41f4af:	and    edi,ebp
  41f4b1:	or     BYTE PTR [edx+edx*2+0x4d],0x9d
  41f4b6:	jne    0x41f4cb
  41f4b8:	das    
  41f4b9:	imul   edx,DWORD PTR [edi],0xffffffca
  41f4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4bd:	addr16 pusha 
  41f4bf:	std    
  41f4c0:	stos   BYTE PTR es:[edi],al
  41f4c1:	dec    esp
  41f4c2:	push   ecx
  41f4c3:	pusha  
  41f4c4:	out    dx,al
  41f4c5:	inc    edx
  41f4c6:	jmp    0xbf830ffa
  41f4cb:	add    eax,0x6b1c30c
  41f4d0:	mov    eax,ebx
  41f4d2:	dec    esi
  41f4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d4:	inc    edx
  41f4d5:	(bad)  
  41f4d6:	jno    0x41f47b
  41f4d8:	daa    
  41f4d9:	leave  
  41f4da:	lds    edx,FWORD PTR [ecx+0x6918c8c6]
  41f4e0:	out    0x54,al
  41f4e2:	jge    0x41f545
  41f4e4:	and    eax,0x88390dcf
  41f4e9:	(bad)  
  41f4ea:	fsub   QWORD PTR [edi-0x257d6833]
  41f4f0:	call   0x5b0e79a4
  41f4f5:	dec    esp
  41f4f6:	lock push ebx
  41f4f8:	(bad)  
  41f4f9:	adc    DWORD PTR [esi+ebp*2+0xb],eax
  41f4fd:	xchg   edx,eax
  41f4fe:	fwait
  41f4ff:	xchg   edx,eax
  41f500:	adc    ah,BYTE PTR [ecx-0x31]
  41f503:	mov    ebx,0xdec2a928
  41f508:	xchg   DWORD PTR [ebp-0x53800bdc],edi
  41f50e:	pop    ds
  41f50f:	test   eax,0x1245f107
  41f514:	sbb    BYTE PTR [edi+0x65d0b91],bl
  41f51a:	ret    
  41f51b:	ret    0x9a8f
  41f51e:	cmp    ah,ah
  41f520:	lea    esi,[ecx]
  41f522:	mov    al,dl
  41f524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f525:	aas    
  41f526:	cmp    cl,BYTE PTR [ebp-0x1]
  41f529:	pop    ebp
  41f52a:	arpl   WORD PTR [ebx+0x6b],di
  41f52d:	ins    DWORD PTR es:[edi],dx
  41f52e:	mov    edi,0x875a7a16
  41f533:	sub    DWORD PTR [edi-0x3d8aa270],ecx
  41f539:	jmp    0x41f5b9
  41f53b:	jmp    0x9aba:0x6acb
  41f541:	adc    esi,DWORD PTR [edx+0x1bb94f96]
  41f547:	gs jnp 0x41f4d6
  41f54a:	aad    0x50
  41f54c:	inc    edi
  41f54d:	jns    0x41f569
  41f54f:	bound  ecx,QWORD PTR [eax-0x2ea6401]
  41f555:	sbb    al,0xbe
  41f557:	pop    ecx
  41f558:	add    BYTE PTR [esi+eiz*4-0x1c3b8668],bh
  41f55f:	aas    
  41f560:	icebp  
  41f561:	std    
  41f562:	jo     0x41f583
  41f564:	adc    edi,DWORD PTR [eax-0xb]
  41f567:	pop    ecx
  41f568:	test   al,0x54
  41f56a:	pop    esp
  41f56b:	pop    eax
  41f56c:	jecxz  0x41f5b2
  41f56e:	aaa    
  41f56f:	add    al,0x2a
  41f571:	fxch   st(1)
  41f573:	push   0xe470ff6d
  41f578:	std    
  41f579:	inc    eax
  41f57a:	mov    ebp,0x42674808
  41f57f:	and    eax,0x33590a41
  41f584:	imul   edx,DWORD PTR [eax+edx*8],0x64
  41f588:	xor    esi,DWORD PTR [esi-0x59]
  41f58b:	jp     0x41f5bd
  41f58d:	(bad)  
  41f58e:	js     0x41f5cd
  41f590:	push   ds
  41f591:	add    eax,0x8d8b65f6
  41f596:	and    al,0xff
  41f598:	(bad)  
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	stos   BYTE PTR es:[edi],al
  41f667:	dec    ecx
  41f668:	xchg   BYTE PTR [esp+ecx*2+0x4abec085],ah
  41f66f:	les    edi,FWORD PTR [esi-0x143a5842]
  41f675:	xchg   ecx,eax
  41f676:	pop    ebp
  41f677:	sub    al,0xdf
  41f679:	or     ebx,eax
  41f67b:	mov    ch,0x8
  41f67d:	stc    
  41f67e:	arpl   WORD PTR [edi+0x385b2f2c],bp
  41f684:	xor    eax,0xe3af9f80
  41f689:	mov    bl,0xb7
  41f68b:	in     al,0x7f
  41f68d:	inc    edx
  41f68e:	dec    esi
  41f68f:	clc    
  41f690:	mov    es,WORD PTR ds:0x35648e66
  41f696:	pop    eax
  41f697:	sub    al,0x4f
  41f699:	cld    
  41f69a:	sub    eax,0x4c153e89
  41f69f:	stos   BYTE PTR es:[edi],al
  41f6a0:	mov    bl,0x5d
  41f6a2:	test   BYTE PTR [esi+ecx*4+0x2b],al
  41f6a6:	lds    edx,FWORD PTR [ecx-0x2213a138]
  41f6ac:	mov    ecx,0x122e44de
  41f6b1:	adc    al,0x4d
  41f6b3:	test   eax,0x130b83fa
  41f6b8:	jnp    0x41f6cd
  41f6ba:	mov    ebx,0xa797556
  41f6bf:	mov    ds:0x68af2961,eax
  41f6c4:	gs push ebx
  41f6c6:	jno    0x41f6ec
  41f6c8:	adc    esi,DWORD PTR [esi]
  41f6ca:	jmp    0x4c7d:0x32c5ddc
  41f6d1:	and    bh,BYTE PTR [ecx+0x5b]
  41f6d4:	pop    eax
  41f6d5:	mov    edx,0x28373f1a
  41f6da:	push   ss
  41f6db:	jecxz  0x41f6fd
  41f6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6de:	std    
  41f6df:	pusha  
  41f6e0:	leave  
  41f6e1:	das    
  41f6e2:	jnp    0x41f725
  41f6e4:	mov    eax,0x3347bd0d
  41f6e9:	sbb    DWORD PTR [ebx],ecx
  41f6eb:	cmp    ah,ch
  41f6ed:	fldenv [ebp-0x7d]
  41f6f0:	and    dh,bl
  41f6f2:	mov    BYTE PTR [eax],0x2d
  41f6f5:	sbb    BYTE PTR [ebp+0x7cc7a6ce],cl
  41f6fb:	outs   dx,DWORD PTR ds:[esi]
  41f6fc:	jnp    0x41f731
  41f6fe:	and    DWORD PTR [edi],edi
  41f700:	sub    DWORD PTR [eax-0x422eee5c],eax
  41f706:	pop    ss
  41f707:	test   BYTE PTR [edx],0x88
  41f70a:	push   eax
  41f70b:	out    0xcd,al
  41f70d:	jnp    0x41f782
  41f70f:	dec    edx
  41f710:	rcr    DWORD PTR [edx+0x29c3e769],cl
  41f716:	mov    ds:0x85f0a23f,eax
  41f71b:	dec    eax
  41f71c:	ret    0xd1b6
  41f71f:	sbb    DWORD PTR [ebp+edi*2+0x6746b02a],edx
  41f726:	inc    edx
  41f727:	scas   eax,DWORD PTR es:[edi]
  41f728:	sar    BYTE PTR [ecx+edi*2+0x71a1b05a],0xd0
  41f730:	adc    DWORD PTR [esi+0x2024e50e],0xffffffac
  41f737:	outs   dx,DWORD PTR ds:[esi]
  41f738:	lahf   
  41f739:	mov    ds:0x408aa1f7,al
  41f73e:	or     dh,BYTE PTR gs:[edi-0x9]
  41f742:	daa    
  41f743:	cmp    BYTE PTR [esi+0x67],0xcb
  41f747:	test   al,0xa3
  41f749:	test   al,0x9a
  41f74b:	or     dl,BYTE PTR [ebx-0x149ef523]
  41f751:	jl     0x41f762
  41f753:	out    dx,eax
  41f754:	add    al,0x26
  41f756:	mov    esp,0x82dae834
  41f75b:	(bad)  
  41f75d:	mov    bh,0x3b
  41f75f:	neg    BYTE PTR [ebp-0x11]
  41f762:	fmul   QWORD PTR [edi+0x6]
  41f765:	jecxz  0x41f748
  41f767:	or     eax,0xd87de533
  41f76c:	jbe    0x41f777
  41f76e:	jbe    0x41f746
  41f770:	int    0x93
  41f772:	jmp    0x128b:0x9da22987
  41f779:	push   esp
  41f77a:	push   eax
  41f77b:	push   ebp
  41f77c:	xchg   edi,eax
  41f77d:	push   esp
  41f77e:	jecxz  0x41f7c5
  41f780:	or     DWORD PTR [edi-0x61],ebp
  41f783:	or     esi,DWORD PTR [edx+ebx*2]
  41f786:	out    0xc2,eax
  41f788:	lea    edx,[edi+0x7422a0a6]
  41f78e:	pop    ebx
  41f78f:	cs cmp al,0xc7
  41f793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f794:	mov    dh,0xef
  41f796:	icebp  
  41f797:	jge    0x41f77b
  41f799:	adc    dl,BYTE PTR [ecx]
  41f79b:	stos   BYTE PTR es:[edi],al
  41f79c:	cmp    BYTE PTR [ebx+0x2aa815e2],0x4e
  41f7a3:	push   ebp
  41f7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a5:	cs cmp eax,0xf41c1c61
  41f7ab:	sub    BYTE PTR fs:[ebp-0x18b9bfe0],0xe
  41f7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7b4:	mov    cl,BYTE PTR [ebx+0x11]
  41f7b7:	jge    0x41f778
  41f7b9:	scas   al,BYTE PTR es:[edi]
  41f7ba:	cmp    DWORD PTR [edx],esi
  41f7bc:	iret   
  41f7bd:	cmp    DWORD PTR [ebx],0x42
  41f7c0:	push   edx
  41f7c1:	sbb    BYTE PTR [eax],dh
  41f7c3:	adc    BYTE PTR [edx],bh
  41f7c5:	xlat   BYTE PTR ds:[ebx]
  41f7c6:	mov    eax,0xf870e946
  41f7cb:	adc    DWORD PTR [ebx],ebx
  41f7cd:	add    eax,0xc802d440
  41f7d2:	add    esi,DWORD PTR [ebx]
  41f7d4:	and    DWORD PTR [ebx+edi*2],ebp
  41f7d7:	pop    esp
  41f7d8:	cmp    al,0x22
  41f7da:	pop    esp
  41f7db:	sub    eax,0x614ab4f2
  41f7e0:	loope  0x41f7a0
  41f7e2:	xchg   BYTE PTR [eax-0x2eb00f7],bh
  41f7e8:	dec    esi
  41f7e9:	les    edx,FWORD PTR [edx-0x46d31436]
  41f7ef:	jmp    0x71092130
  41f7f4:	add    al,0xbd
  41f7f6:	jp     0x41f7a8
  41f7f8:	enter  0x9330,0x82
  41f7fc:	popa   
  41f7fd:	lods   al,BYTE PTR ds:[esi]
  41f7fe:	stc    
  41f7ff:	mov    esp,0x205abbae
  41f804:	sub    DWORD PTR [edi+0x6],esp
  41f807:	jecxz  0x41f87b
  41f809:	sbb    eax,0x159e198a
  41f80e:	push   edx
  41f80f:	xchg   ebx,eax
  41f810:	add    dl,BYTE PTR ds:0x555ae444
  41f816:	jne    0x41f846
  41f818:	jbe    0x41f807
  41f81a:	push   ebp
  41f81b:	sti    
  41f81c:	push   eax
  41f81d:	pop    ebx
  41f81e:	mov    ebx,0x5014d59d
  41f823:	cli    
  41f824:	std    
  41f825:	out    dx,al
  41f826:	and    ch,BYTE PTR [esi+0x37bebff2]
  41f82c:	dec    esp
  41f82d:	daa    
  41f82e:	(bad)  
  41f82f:	jecxz  0x41f843
  41f831:	aam    0xc3
  41f833:	sub    al,0xc2
  41f835:	jbe    0x41f7cb
  41f837:	sbb    BYTE PTR [esi-0x8],ah
  41f83a:	repz pop ecx
  41f83c:	into   
  41f83d:	dec    ebx
  41f83e:	stos   BYTE PTR es:[edi],al
  41f83f:	enter  0x47e,0x6b
  41f843:	aam    0xa0
  41f845:	mov    dh,0xd1
  41f847:	and    BYTE PTR [esi],dh
  41f849:	scas   eax,DWORD PTR es:[edi]
  41f84a:	adc    BYTE PTR [ebx-0x50],0x1a
  41f84e:	sbb    al,0xf0
  41f850:	xor    al,0xe
  41f852:	hlt    
  41f853:	test   eax,0xd7605fcd
  41f858:	sub    al,0x1d
  41f85a:	cmc    
  41f85b:	iret   
  41f85c:	idiv   BYTE PTR [ebx+0x77fe2787]
  41f862:	mov    es,WORD PTR [eax]
  41f864:	imul   esp,DWORD PTR [ecx+0x6f],0xf991d763
  41f86b:	inc    edx
  41f86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86d:	test   eax,0xb6540019
  41f872:	jmp    0x2af71c06
  41f877:	mov    DWORD PTR [esi+0x1b0bee99],edi
  41f87d:	dec    ebx
  41f87e:	lods   al,BYTE PTR ds:[esi]
  41f87f:	(bad)  
  41f881:	inc    ebx
  41f882:	sahf   
  41f883:	mov    edx,?
  41f885:	inc    eax
  41f886:	nop
  41f887:	mov    al,ds:0x5e978ab3
  41f88c:	push   ebx
  41f88d:	mov    edx,0xb50f7204
  41f892:	inc    ebx
  41f893:	sub    ebx,eax
  41f895:	sbb    eax,0x5edca967
  41f89a:	mov    bl,cl
  41f89c:	hlt    
  41f89d:	add    bl,BYTE PTR [edi]
  41f89f:	xchg   edi,eax
  41f8a0:	xor    al,0x1b
  41f8a2:	aaa    
  41f8a3:	add    edi,edi
  41f8a5:	test   DWORD PTR [eax-0x37],0x5a7e9f29
  41f8ac:	xlat   BYTE PTR ds:[ebx]
  41f8ad:	aad    0x11
  41f8af:	push   ecx
  41f8b0:	iret   
  41f8b1:	(bad)  
  41f8b3:	int    0x1d
  41f8b5:	adc    BYTE PTR [esi],0xf3
  41f8b8:	mov    dh,0x53
  41f8ba:	fs retf 
  41f8bc:	xchg   BYTE PTR [ecx+0x730bc51b],dl
  41f8c2:	push   es
  41f8c3:	jbe    0x41f89f
  41f8c5:	mov    esp,0xc6eefc6b
  41f8ca:	ror    BYTE PTR [ebx-0x3d],1
  41f8cd:	adc    BYTE PTR [ebp+0x7fb9fe63],ch
  41f8d3:	xchg   ah,dh
  41f8d5:	push   ss
  41f8d6:	in     eax,dx
  41f8d7:	dec    ebp
  41f8d8:	inc    ebx
  41f8d9:	pusha  
  41f8da:	push   ebp
  41f8db:	fldenv [esi+0x277d721]
  41f8e1:	push   cs
  41f8e2:	or     ch,BYTE PTR [esi]
  41f8e4:	lock ja 0x41f896
  41f8e7:	mov    eax,ds:0x58cdbd25
  41f8ec:	loop   0x41f935
  41f8ee:	jne    0x41f901
  41f8f0:	imul   esp,DWORD PTR [ebx+0x4ddedd68],0x2e
  41f8f7:	xor    al,0x3
  41f8f9:	scas   eax,DWORD PTR es:[edi]
  41f8fa:	jg     0x41f946
  41f8fc:	inc    esp
  41f8fd:	popf   
  41f8fe:	pop    ebp
  41f8ff:	stos   DWORD PTR es:[edi],eax
  41f900:	rcr    DWORD PTR [ebx],cl
  41f902:	test   ebp,edx
  41f904:	dec    esi
  41f905:	shl    BYTE PTR [edi],0x8b
  41f908:	call   0xf034:0x9a06338c
  41f90f:	les    ebx,FWORD PTR [edi]
  41f911:	loope  0x41f8de
  41f913:	or     BYTE PTR [ebx-0xd7072f5],cl
  41f919:	inc    edx
  41f91a:	inc    ebp
  41f91b:	(bad)  
  41f91c:	lods   al,BYTE PTR ds:[esi]
  41f91d:	jb     0x41f91f
  41f91f:	sub    eax,0xab7b6043
  41f924:	aad    0x97
  41f926:	(bad)  
  41f927:	call   DWORD PTR [ebp+ebx*2-0x68]
  41f92b:	dec    ecx
  41f92c:	jno    0x41f8f7
  41f92e:	mov    al,ds:0xcc60e38f
  41f933:	push   cs
  41f934:	(bad)  
  41f936:	add    esi,DWORD PTR [ebp-0x56]
  41f939:	aaa    
  41f93a:	mov    eax,0xd5add542
  41f93f:	pop    ss
  41f940:	jns    0x41f995
  41f942:	xor    ebx,edi
  41f944:	and    eax,0x5590934a
  41f949:	mov    DWORD PTR [edi+edx*2+0x2d22420c],esp
  41f950:	xor    ah,BYTE PTR [ebx+0x68f37f9a]
  41f956:	cmp    cl,BYTE PTR [edi-0x3f]
  41f959:	test   eax,0xd352f629
  41f95e:	out    0xfa,al
  41f960:	lock jnp 0x41f986
  41f963:	and    eax,0x6878a9dd
  41f968:	(bad)
  41f96c:	add    BYTE PTR [edi],dh
  41f96e:	mov    eax,0xd91fd3d9
  41f973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f974:	or     DWORD PTR [ecx],ebx
  41f976:	ds stos DWORD PTR es:[edi],eax
  41f978:	es push esp
  41f97a:	jae    0x41f924
  41f97c:	jo     0x41f996
  41f97e:	or     cl,BYTE PTR [edi-0x7f]
  41f981:	aad    0x6f
  41f983:	sub    BYTE PTR [edx-0x4efdc041],bl
  41f989:	out    dx,al
  41f98a:	and    dl,BYTE PTR [ecx+eiz*1-0x44]
  41f98e:	dec    esi
  41f98f:	fwait
  41f990:	imul   ebx,DWORD PTR [edi-0x54b5663],0xabd8e69
  41f99a:	shl    DWORD PTR [ebx+0x1a080b8d],cl
  41f9a0:	mov    bl,0x1a
  41f9a2:	inc    esp
  41f9a3:	sub    al,0x2b
  41f9a5:	push   ebp
  41f9a6:	jl     0x41f9c9
  41f9a8:	pop    ss
  41f9a9:	ret    
  41f9aa:	dec    esi
  41f9ab:	sub    al,0xaf
  41f9ad:	xchg   DWORD PTR es:[eax],edi
  41f9b0:	mov    eax,0xe79ef569
  41f9b5:	dec    edx
  41f9b6:	push   ds
  41f9b7:	jns    0x41f944
  41f9b9:	pop    edi
  41f9ba:	fiadd  WORD PTR [ebx+0x2fe7d505]
  41f9c0:	imul   eax,DWORD PTR [ecx],0x38
  41f9c3:	lock dec edi
  41f9c5:	pop    ebx
  41f9c6:	dec    esp
  41f9c7:	aad    0x48
  41f9c9:	sub    BYTE PTR [ebp+0x1251f4cd],0xc3
  41f9d0:	clc    
  41f9d1:	mov    ds:0xeb63496,eax
  41f9d6:	xchg   ecx,eax
  41f9d7:	jmp    0x41f9a9
  41f9d9:	bnd jg 0x41f96b
  41f9dc:	jge    0x41f973
  41f9de:	in     eax,dx
  41f9df:	(bad)  
  41f9e0:	push   ecx
  41f9e1:	and    ebp,esp
  41f9e3:	ss in  al,0x59
  41f9e6:	mov    ds:0x6760f833,eax
  41f9eb:	inc    eax
  41f9ec:	add    al,0xe3
  41f9ee:	(bad)  
  41f9ef:	loop   0x41fa1f
  41f9f1:	(bad)  
  41f9f2:	jae    0x41fa27
  41f9f4:	lahf   
  41f9f5:	in     eax,0xf9
  41f9f7:	mov    al,0xf9
  41f9f9:	inc    edi
  41f9fa:	sub    DWORD PTR [eax-0x7],eax
  41f9fd:	jbe    0x41fa62
  41f9ff:	mov    esp,0x8125687c
  41fa04:	outs   dx,BYTE PTR ds:[esi]
  41fa05:	out    0xdc,al
  41fa07:	test   BYTE PTR [ebp+0x5d3a30ad],dl
  41fa0d:	stc    
  41fa0e:	jne    0x41fa26
  41fa10:	mov    bh,BYTE PTR [edx-0x69]
  41fa13:	cdq    
  41fa14:	xchg   ebp,eax
  41fa15:	cmc    
  41fa16:	adc    eax,0x6e545006
  41fa1b:	mov    eax,ds:0x86a81b90
  41fa20:	mov    ds:0xe00c17bc,eax
  41fa25:	inc    edx
  41fa26:	push   ebp
  41fa27:	rol    bl,cl
  41fa29:	cmp    DWORD PTR [ebx+0x2cf12fd8],esp
  41fa2f:	lods   al,BYTE PTR ds:[esi]
  41fa30:	mov    ch,0x33
  41fa32:	sbb    esi,DWORD PTR [edx+0x2e]
  41fa35:	iret   
  41fa36:	push   edi
  41fa37:	mov    ebp,0xc960a54f
  41fa3c:	mov    edx,DWORD PTR [ebp-0x20]
  41fa3f:	xor    ecx,edx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	adc    eax,0xd7a4ba3e
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0xf7
  41fb6f:	cld    
  41fb70:	mov    eax,0x23449c91
  41fb75:	mov    cl,0x63
  41fb77:	push   cs
  41fb78:	push   0xaa1f43d7
  41fb7d:	cwde   
  41fb7e:	lahf   
  41fb7f:	xchg   edx,eax
  41fb80:	dec    ebx
  41fb81:	retf   0x63b8
  41fb84:	fs into 
  41fb86:	mov    ebx,0x81ab6ee3
  41fb8b:	fmul   st,st(4)
  41fb8d:	fst    QWORD PTR [edi+0x34153243]
  41fb93:	jb     0x41fbab
  41fb95:	fs push ss
  41fb97:	mov    al,ds:0xd5761f8b
  41fb9c:	lds    esp,FWORD PTR [edi+0x67]
  41fb9f:	fadd   DWORD PTR [ebx-0x23]
  41fba2:	adc    ch,BYTE PTR [edi+edx*1]
  41fba5:	adc    esi,DWORD PTR [ecx+0x3b]
  41fba8:	and    esi,DWORD PTR [ecx]
  41fbaa:	push   0xc9db42d3
  41fbaf:	cmp    esp,0x76d6c0a5
  41fbb5:	sub    eax,0x9c17bf3f
  41fbba:	(bad)  
  41fbbb:	dec    edi
  41fbbd:	push   esi
  41fbbe:	outs   dx,DWORD PTR ds:[esi]
  41fbbf:	(bad)  
  41fbc0:	sbb    ebx,edx
  41fbc2:	call   0x256dd57e
  41fbc7:	push   0xdc982ab8
  41fbcc:	xor    BYTE PTR [eax-0x2a7096c5],dh
  41fbd2:	imul   ebp,DWORD PTR [ebp+0xe6cf8bb],0x6cd5f1bb
  41fbdc:	imul   BYTE PTR [edi+0x2a]
  41fbdf:	adc    ebp,ebp
  41fbe1:	xchg   ecx,eax
  41fbe2:	scas   al,BYTE PTR es:[edi]
  41fbe3:	popa   
  41fbe4:	xor    BYTE PTR [esi+0x2e],bl
  41fbe7:	fnstcw WORD PTR [eax-0x73]
  41fbea:	cld    
  41fbeb:	in     eax,0x7d
  41fbed:	lahf   
  41fbee:	rol    ecx,cl
  41fbf0:	push   ss
  41fbf1:	push   esi
  41fbf2:	lock jp 0x41fba9
  41fbf5:	ja     0x41fc52
  41fbf7:	dec    ebp
  41fbf8:	push   ebp
  41fbf9:	inc    ebp
  41fbfa:	shl    DWORD PTR [ebp-0x3d],cl
  41fbfd:	sub    BYTE PTR [esi-0x3eeb85bd],0x24
  41fc04:	or     eax,0x7f5feecb
  41fc09:	loope  0x41fc62
  41fc0b:	int3   
  41fc0c:	repnz sub al,0x5e
  41fc0f:	stc    
  41fc10:	push   esp
  41fc11:	or     ecx,DWORD PTR [edx+0x7e]
  41fc14:	xchg   esp,eax
  41fc15:	rol    cl,0x4
  41fc18:	xchg   edx,eax
  41fc19:	adc    eax,0x82480cd1
  41fc1e:	push   cs
  41fc1f:	push   esi
  41fc20:	pop    ds
  41fc21:	out    0x37,al
  41fc23:	push   edi
  41fc24:	push   ss
  41fc25:	(bad)  
  41fc26:	les    edi,FWORD PTR [eax]
  41fc28:	mov    bl,0xb4
  41fc2a:	psubusb mm0,QWORD PTR [eax-0x24]
  41fc2e:	mov    ebp,0x4e336e8a
  41fc33:	imul   edi,DWORD PTR [edx*4+0x1990f23e],0xffffff90
  41fc3b:	das    
  41fc3c:	and    BYTE PTR [edi],dl
  41fc3e:	add    edi,0xb
  41fc41:	and    DWORD PTR [ebx-0x46bf9b55],eax
  41fc47:	and    dh,ch
  41fc49:	mov    ebp,0x27dc2193
  41fc4e:	in     eax,dx
  41fc4f:	in     al,dx
  41fc50:	ret    
  41fc51:	push   ebx
  41fc52:	jecxz  0x41fc44
  41fc54:	pop    esi
  41fc55:	dec    ebp
  41fc56:	push   ebp
  41fc57:	mov    ebp,0x11b73df1
  41fc5c:	sbb    eax,0xfb881b29
  41fc61:	sbb    BYTE PTR [ecx],cl
  41fc63:	lods   al,BYTE PTR ds:[esi]
  41fc64:	mov    es,WORD PTR [ecx-0x26]
  41fc67:	(bad)  
  41fc68:	pop    ebp
  41fc69:	jns    0x41fc48
  41fc6b:	mov    cl,0x72
  41fc6d:	xchg   esp,eax
  41fc6f:	sahf   
  41fc70:	or     DWORD PTR [esp+ecx*4-0x4b0e2849],ebx
  41fc77:	sub    ebx,edx
  41fc79:	outs   dx,DWORD PTR ds:[esi]
  41fc7a:	shr    DWORD PTR [edi-0x13],cl
  41fc7d:	hlt    
  41fc7e:	inc    ebp
  41fc7f:	jmp    0x5be7:0x7f1bc3d2
  41fc86:	sti    
  41fc87:	aam    0x3c
  41fc89:	xchg   edx,eax
  41fc8a:	mov    bh,0x52
  41fc8c:	cmp    DWORD PTR [edx+edi*1],esi
  41fc8f:	pusha  
  41fc90:	pop    ss
  41fc91:	rol    DWORD PTR [esi],0xb2
  41fc94:	dec    edi
  41fc95:	out    0x88,eax
  41fc97:	push   eax
  41fc98:	test   cl,ah
  41fc9a:	lea    esi,[edx]
  41fc9c:	cmc    
  41fc9d:	dec    eax
  41fc9e:	pop    ecx
  41fc9f:	int3   
  41fca0:	inc    esp
  41fca1:	imul   ebp,DWORD PTR [eax],0xc27197e2
  41fca7:	daa    
  41fca8:	sti    
  41fca9:	cmp    dh,BYTE PTR [ecx-0x566f9d96]
  41fcaf:	int    0xc3
  41fcb1:	mov    cl,0x62
  41fcb3:	or     eax,0xe8bed6bd
  41fcb8:	test   BYTE PTR fs:[esi],0x53
  41fcbc:	enter  0x77bc,0x9
  41fcc0:	jo     0x41fcb9
  41fcc2:	jge    0x41fd34
  41fcc4:	sti    
  41fcc5:	stos   BYTE PTR es:[edi],al
  41fcc6:	nop
  41fcc7:	cmp    esp,DWORD PTR [ebx-0x6c]
  41fcca:	inc    ebp
  41fccb:	jp     0x41fd4c
  41fccd:	fisubr WORD PTR ds:0xd146803
  41fcd3:	ret    0x31c1
  41fcd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd7:	push   edx
  41fcd8:	cmp    eax,DWORD PTR [edx-0x31dd2c84]
  41fcde:	dec    ebp
  41fcdf:	lods   eax,DWORD PTR ds:[esi]
  41fce0:	repz call 0xa2eb5e5a
  41fce6:	add    eax,0x826ebb26
  41fceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcec:	push   ebp
  41fced:	fstp   DWORD PTR [di]
  41fcf0:	bound  esi,QWORD PTR [edi+eiz*1-0x45d49c2]
  41fcf7:	(bad)  
  41fcf8:	shl    dh,1
  41fcfa:	cmp    BYTE PTR [eax-0x75e600b6],bh
  41fd00:	mov    edx,0xc868bfce
  41fd05:	loopne 0x41fca9
  41fd07:	pusha  
  41fd08:	and    ch,BYTE PTR [edx+edi*1]
  41fd0b:	mov    eax,ds:0xce93dad2
  41fd10:	dec    ebx
  41fd11:	mov    edi,0xef456ece
  41fd16:	adc    eax,0x811683d6
  41fd1b:	sub    BYTE PTR [ebx-0x240527f6],0x3d
  41fd22:	(bad)  
  41fd23:	xor    dh,BYTE PTR [eax+esi*1+0x63a01ad9]
  41fd2a:	add    al,0xbc
  41fd2c:	int3   
  41fd2d:	(bad)  
  41fd2e:	leave  
  41fd2f:	cmc    
  41fd30:	mov    bl,0xac
  41fd32:	shl    BYTE PTR [ecx-0xd],cl
  41fd35:	icebp  
  41fd36:	mov    al,0xc1
  41fd38:	push   ebp
  41fd39:	fdivr  QWORD PTR [edx-0x1c457287]
  41fd3f:	push   cs
  41fd40:	mov    ecx,0xfe85e9d4
  41fd45:	jo     0x41fd43
  41fd47:	push   ebp
  41fd48:	push   ss
  41fd49:	push   0x4c83a4a1
  41fd4e:	ja     0x41fd69
  41fd50:	mov    cl,0x28
  41fd52:	mov    eax,ds:0x6a9acced
  41fd57:	xchg   bl,bh
  41fd59:	es mov ebx,0xece4604f
  41fd5f:	sub    al,0x78
  41fd61:	jp     0x41fda4
  41fd63:	(bad)
  41fd66:	mul    BYTE PTR [ecx-0x1252f764]
  41fd6c:	leave  
  41fd6d:	dec    ebp
  41fd6e:	(bad)  
  41fd6f:	push   ecx
  41fd70:	add    DWORD PTR [edi+0x3ed58e00],edx
  41fd76:	xchg   ebp,eax
  41fd77:	mov    BYTE PTR [esi+0x58],ch
  41fd7a:	test   BYTE PTR [edi-0x48],0x3d
  41fd7e:	pusha  
  41fd7f:	inc    ebp
  41fd80:	into   
  41fd81:	add    ebp,ecx
  41fd83:	inc    edi
  41fd84:	xchg   DWORD PTR [edx],edi
  41fd86:	inc    edx
  41fd87:	xchg   ebx,eax
  41fd88:	mov    bl,0xa3
  41fd8a:	arpl   WORD PTR [edx+ebp*2-0x34],sp
  41fd8e:	ror    edi,0xe8
  41fd91:	hlt    
  41fd92:	shl    BYTE PTR [ebp+0x19ae2b36],cl
  41fd98:	mov    ch,0xc8
  41fd9a:	mov    al,0x5a
  41fd9c:	xlat   BYTE PTR ds:[ebx]
  41fd9d:	xchg   ecx,eax
  41fd9e:	push   esi
  41fd9f:	pop    esp
  41fda0:	xchg   DWORD PTR [ebx+eiz*8],edx
  41fda3:	aad    0x86
  41fda5:	sbb    bh,BYTE PTR [edi]
  41fda7:	retf   0xca75
  41fdaa:	test   al,0x58
  41fdac:	enter  0x8022,0xca
  41fdb0:	xor    eax,0xe424497e
  41fdb5:	ror    DWORD PTR [edi-0x1905dd43],0xab
  41fdbc:	fcom   DWORD PTR [esi+eiz*1+0x45]
  41fdc0:	lds    eax,FWORD PTR [edx]
  41fdc2:	push   esi
  41fdc3:	dec    edx
  41fdc4:	dec    ebx
  41fdc5:	mov    ebp,0x411abce
  41fdca:	bound  edx,QWORD PTR cs:[ecx]
  41fdcd:	mov    cl,0x3b
  41fdcf:	push   es
  41fdd0:	xchg   esi,eax
  41fdd1:	stos   DWORD PTR es:[edi],eax
  41fdd2:	push   es
  41fdd3:	es dec ebx
  41fdd5:	sub    eax,0x83f3e635
  41fdda:	cmp    eax,0x6e6952aa
  41fddf:	je     0x41fd82
  41fde1:	cmp    eax,0x97731c6a
  41fde6:	loopne 0x41fe4f
  41fde8:	(bad)  
  41fde9:	fs in  al,0x63
  41fdec:	aam    0x63
  41fdee:	fisub  WORD PTR [ebp-0x30]
  41fdf1:	aam    0x8a
  41fdf3:	call   0x7d41:0xa3eb23fd
  41fdfa:	jmp    0xe4bf:0x89ad05a6
  41fe01:	xor    eax,0xb642e693
  41fe06:	and    eax,0x3dca3b7b
  41fe0b:	jns    0x41fdb3
  41fe0d:	xor    BYTE PTR cs:[edx+0x52],ch
  41fe11:	cmp    DWORD PTR ds:0xeb16a4fa,eax
  41fe17:	ja     0x41fe4f
  41fe19:	cmp    BYTE PTR [ecx+0x56bb2e42],al
  41fe1f:	or     BYTE PTR [ebp+0x7df2f940],ah
  41fe25:	pop    eax
  41fe26:	cmp    eax,0x6d739704
  41fe2b:	(bad)  
  41fe2c:	sbb    al,0x5c
  41fe2e:	test   eax,0xac1a00cb
  41fe33:	mov    esp,0xa57f7c0e
  41fe38:	add    bh,bl
  41fe3a:	jmp    0x41fe53
  41fe3c:	out    dx,eax
  41fe3d:	jp     0x41fe1e
  41fe3f:	shl    dh,0x5b
  41fe42:	leave  
  41fe43:	je     0x41fea0
  41fe45:	jnp    0x41fde5
  41fe47:	shl    BYTE PTR ds:0x4317a08a,1
  41fe4d:	stos   BYTE PTR es:[edi],al
  41fe4e:	(bad)
  41fe52:	cmp    ebp,DWORD PTR [edx-0xb8f459c]
  41fe58:	test   al,0x6
  41fe5a:	sahf   
  41fe5b:	sub    al,0x7e
  41fe5d:	dec    BYTE PTR [esi+ecx*4]
  41fe60:	bnd ret 0xd8f6
  41fe64:	xchg   ebx,eax
  41fe65:	jbe    0x41fe77
  41fe67:	pop    ss
  41fe68:	pop    ecx
  41fe69:	xor    BYTE PTR [esi-0x160ca744],cl
  41fe6f:	fcomip st,st(7)
  41fe71:	lods   eax,DWORD PTR ds:[esi]
  41fe72:	ss loope 0x41fe85
  41fe75:	jle    0x41feb9
  41fe77:	or     eax,0xe04043d1
  41fe7c:	call   0x482204cf
  41fe81:	ss (bad) 
  41fe83:	mov    WORD PTR [esi+0x0],cs
  41fe86:	xchg   ebp,eax
  41fe87:	mov    esp,0x1611712a
  41fe8c:	outs   dx,DWORD PTR ds:[esi]
  41fe8d:	push   edi
  41fe8e:	sub    ecx,DWORD PTR [ebx+0x7e3bca1]
  41fe94:	cwde   
  41fe95:	xor    al,0xe9
  41fe97:	dec    ecx
  41fe98:	adc    BYTE PTR [ebx+0x2e82861a],cl
  41fe9e:	or     al,0xe8
  41fea0:	and    BYTE PTR [ebp-0x4b],dl
  41fea3:	xor    al,0x5f
  41fea5:	cmc    
  41fea6:	cld    
  41fea7:	add    edx,DWORD PTR [ebx*2+0x1c8b6a9b]
  41feae:	and    al,0x6a
  41feb0:	sbb    eax,0x82d3f851
  41feb5:	cmp    DWORD PTR [eax+0x6ad8f1dd],eax
  41febb:	xlat   BYTE PTR ds:[ebx]
  41febc:	cdq    
  41febd:	sbb    bh,BYTE PTR gs:[eax+0x14a1ec8d]
  41fec4:	add    esi,DWORD PTR [ebx+0x5e5855e9]
  41feca:	mov    ebx,0x92c22582
  41fecf:	addr16 int 0x67
  41fed2:	xor    dl,BYTE PTR [eax+ebx*4+0x4b0a6479]
  41fed9:	or     al,BYTE PTR [edi-0x67]
  41fedc:	dec    eax
  41fedd:	cmp    ebp,ebp
  41fedf:	icebp  
  41fee0:	ds out 0x31,al
  41fee3:	xchg   esp,eax
  41fee4:	popf   
  41fee5:	add    edi,DWORD PTR [edi+edi*8-0x17dd2c10]
  41feec:	push   ss
  41feed:	adc    dl,BYTE PTR [ebx+eiz*2]
  41fef0:	cld    
  41fef1:	jo     0x41fef6
  41fef3:	inc    esp
  41fef4:	push   edi
  41fef5:	test   DWORD PTR [ebx-0x18eea277],esp
  41fefb:	gs dec ebx
  41fefd:	cli    
  41fefe:	and    esi,0x31b18a72
  41ff04:	sub    BYTE PTR [esi],0x61
  41ff07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff08:	fwait
  41ff09:	stc    
  41ff0a:	retf   
  41ff0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff0c:	js     0x41ff0e
  41ff0e:	iret   
  41ff0f:	cli    
  41ff10:	fadd   DWORD PTR [ebx+edi*1-0x7a]
  41ff14:	int3   
  41ff15:	jle    0x41fecf
  41ff17:	xor    dh,BYTE PTR ss:0x534ea28b
  41ff1e:	nop
  41ff1f:	sub    DWORD PTR [ebx],esi
  41ff21:	jmp    0x697b:0x46f001a8
  41ff28:	lock mov ebx,0x413ae0af
  41ff2e:	fst    DWORD PTR [esi+0x73]
  41ff31:	mov    ch,0xbf
  41ff33:	jg     0x41fedd
  41ff35:	jge    0x41fee7
  41ff37:	div    DWORD PTR [ebx]
  41ff39:	shr    BYTE PTR [edx+0x3],cl
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	loop   0x41ff7f
  41ff64:	push   esi
  41ff65:	shl    DWORD PTR [ebx-0x6b],1
  41ff68:	sar    BYTE PTR [esi-0x41413bb6],0x86
  41ff6f:	add    ebp,DWORD PTR [ecx]
  41ff71:	fld    DWORD PTR [edi]
  41ff73:	inc    edi
  41ff74:	dec    cx
  41ff76:	adc    eax,0x2c05b300
  41ff7b:	mov    bl,0x9b
  41ff7d:	xchg   edx,eax
  41ff7e:	and    BYTE PTR ss:[ebx+0x3eed629],al
  41ff85:	and    bl,dl
  41ff87:	int    0x4b
  41ff89:	xchg   ebp,eax
  41ff8a:	sahf   
  41ff8b:	pop    ebp
  41ff8c:	loopne 0x41ff5c
  41ff8e:	stc    
  41ff8f:	mov    dl,al
  41ff91:	or     eax,0x7db8c08a
  41ff96:	mov    esp,0x4c319ee8
  41ff9b:	xchg   edi,eax
  41ff9c:	adc    ah,al
  41ff9e:	mov    bl,0x26
  41ffa0:	iret   
  41ffa1:	cs jbe 0x41ff6a
  41ffa4:	call   0xbf14:0x51c7725d
  41ffab:	ins    DWORD PTR es:[edi],dx
  41ffac:	ror    DWORD PTR [ebx-0x2e],0x3a
  41ffb0:	and    eax,ebx
  41ffb2:	enter  0x46bd,0xb9
  41ffb6:	call   0x60f9:0xb77804a6
  41ffbd:	lahf   
  41ffbe:	mov    WORD PTR [esi-0x5eed748],ss
  41ffc4:	scas   eax,DWORD PTR es:[edi]
  41ffc5:	dec    edi
  41ffc6:	mov    edi,DWORD PTR [edx+0x22]
  41ffc9:	cmp    BYTE PTR [ebp-0x63],0x21
  41ffcd:	aad    0x36
  41ffcf:	and    ecx,edx
  41ffd1:	inc    ebx
  41ffd2:	test   DWORD PTR [ebp-0x54],eax
  41ffd5:	pop    esi
  41ffd6:	mov    al,0x66
  41ffd8:	sub    BYTE PTR ds:0x317d4b49,ch
  41ffde:	jp     0x41ffc6
  41ffe0:	loop   0x41ff74
  41ffe2:	jmp    0x33ea7af4
  41ffe7:	daa    
  41ffe8:	loope  0x41ff7c
  41ffea:	xchg   BYTE PTR [ecx],bl
  41ffec:	mov    ah,BYTE PTR [edi-0x46]
  41ffef:	pop    esi
  41fff0:	sbb    al,al
  41fff2:	lea    ebp,[esi-0x1dcdfc32]
  41fff8:	cmp    DWORD PTR [edx],ecx
  41fffa:	or     al,0x26
  41fffc:	sti    
  41fffd:	fstp   QWORD PTR [ebx]
  41ffff:	pop    ebp
  420000:	mov    ds:0xce557c66,eax
  420005:	inc    ecx
  420006:	int    0xef
  420008:	call   0x922d:0x7c9dbe3c
  42000f:	or     bl,bl
  420011:	scas   eax,DWORD PTR es:[edi]
  420012:	call   0xd08d:0x81420d78
  420019:	shr    BYTE PTR [edi-0x4dc5bd8b],1
  42001f:	call   FWORD PTR [esi-0x4a]
  420022:	pop    DWORD PTR [ecx]
  420024:	fisubr DWORD PTR [esp+eiz*8+0x15]
  420028:	jg     0x420086
  42002a:	loope  0x41ffd2
  42002c:	sbb    esp,DWORD PTR [ebp+eiz*1+0x3b]
  420030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420031:	rol    BYTE PTR [edx+0x3a],1
  420034:	push   ecx
  420035:	push   edx
  420036:	jle    0x4200b2
  420038:	aad    0xa6
  42003a:	adc    ecx,DWORD PTR [edx]
  42003c:	cs jecxz 0x420089
  42003f:	jg     0x41ffe4
  420041:	jmp    0x42007d
  420043:	ins    BYTE PTR es:[edi],dx
  420044:	outs   dx,DWORD PTR ds:[esi]
  420045:	retf   0x4865
  420048:	shl    BYTE PTR ds:0x9339b921,1
  42004e:	pop    edi
  42004f:	xchg   ecx,eax
  420050:	mov    esi,0x1c265140
  420055:	add    al,0x4c
  420057:	and    al,0x1d
  420059:	xor    al,0x6e
  42005b:	and    BYTE PTR [edx-0x33e7dd96],dh
  420061:	loope  0x42005b
  420063:	jns    0x41ffeb
  420065:	mov    BYTE PTR [ebx+0x33],al
  420068:	std    
  420069:	hlt    
  42006a:	inc    eax
  42006b:	inc    esp
  42006c:	sbb    al,BYTE PTR [ebx+eiz*1-0x21]
  420070:	icebp  
  420071:	adc    DWORD PTR [esi+0x559b0a23],esp
  420077:	dec    edi
  420078:	pusha  
  420079:	and    al,0x4d
  42007b:	(bad)  
  42007c:	pop    ecx
  42007d:	imul   edx,DWORD PTR [ebx+0x5bcd879b],0xd863b5c8
  420087:	add    eax,0xfea51015
  42008c:	popa   
  42008d:	ins    BYTE PTR es:[edi],dx
  42008e:	dec    ecx
  42008f:	icebp  
  420090:	push   esp
  420091:	imul   BYTE PTR [edx+ebp*8-0x69]
  420095:	mov    WORD PTR [ecx-0x4326e7f0],es
  42009b:	cwde   
  42009c:	ss repz leave 
  42009f:	ins    DWORD PTR es:[edi],dx
  4200a0:	(bad)  [edi-0x2d098d8b]
  4200a6:	dec    DWORD PTR [edx]
  4200a8:	jecxz  0x42008e
  4200aa:	and    al,bh
  4200ac:	out    dx,eax
  4200ad:	xchg   edx,eax
  4200ae:	dec    BYTE PTR [ebx]
  4200b0:	adc    ah,BYTE PTR [esi+ecx*8-0x48]
  4200b4:	sbb    DWORD PTR [edi+0x44c71bc3],ebx
  4200ba:	jae    0x420042
  4200bc:	xlat   BYTE PTR ds:[ebx]
  4200bd:	lds    ebp,FWORD PTR [ecx-0x7]
  4200c0:	or     al,0x10
  4200c2:	adc    BYTE PTR [ecx],ch
  4200c4:	add    al,0x44
  4200c6:	aad    0x13
  4200c8:	pop    esp
  4200c9:	cld    
  4200ca:	stos   DWORD PTR es:[edi],eax
  4200cb:	ror    DWORD PTR [ecx-0xdb36b70],0x50
  4200d2:	es aaa 
  4200d4:	icebp  
  4200d5:	sti    
  4200d6:	push   ecx
  4200d7:	arpl   WORD PTR [ebx-0x1],dx
  4200da:	das    
  4200db:	ins    DWORD PTR es:[edi],dx
  4200dc:	out    dx,al
  4200dd:	adc    DWORD PTR [edi+0x8da97e],ecx
  4200e3:	shl    BYTE PTR [eax-0x80],cl
  4200e6:	call   0x3a70:0xdfec329b
  4200ed:	mov    dh,0xc6
  4200ef:	xlat   BYTE PTR ds:[ebx]
  4200f0:	or     ebp,DWORD PTR [ecx+eiz*8]
  4200f3:	mov    gs:0xef39c341,eax
  4200f9:	cmp    DWORD PTR [esi+0x65282f43],ebp
  4200ff:	test   BYTE PTR [edx+0x1],cl
  420102:	pop    ebp
  420103:	scas   al,BYTE PTR es:[edi]
  420104:	ja     0x420122
  420106:	pop    eax
  420107:	and    dh,0xc7
  42010a:	xchg   ebp,eax
  42010b:	jb     0x4200b7
  42010d:	stos   BYTE PTR es:[edi],al
  42010e:	icebp  
  42010f:	jmp    0xd27ae11d
  420114:	cmp    cl,BYTE PTR [ebx+0x53]
  420117:	sub    ah,BYTE PTR [edx-0x145e3a8b]
  42011d:	inc    ecx
  42011e:	xor    eax,0xcc365176
  420123:	mov    esi,0x884fcb24
  420128:	clc    
  420129:	mov    ebx,0x8253a107
  42012e:	fisub  WORD PTR [edx-0x7c]
  420131:	fldcw  WORD PTR [ecx]
  420133:	nop
  420134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420135:	sbb    ebx,ecx
  420137:	and    eax,0xd0e597f2
  42013c:	pop    ebp
  42013d:	mov    dh,0xb9
  42013f:	sbb    al,0xab
  420141:	loope  0x4200c6
  420143:	adc    DWORD PTR [ebx-0x67],esp
  420146:	xchg   esi,eax
  420147:	or     DWORD PTR [ebx+0x17],0xcc3cfef1
  42014e:	test   DWORD PTR [eax+0x5d68517e],esi
  420154:	jno    0x4201b4
  420156:	push   0xffffff87
  420158:	loop   0x420162
  42015a:	fstp   st(0)
  42015c:	in     al,dx
  42015d:	iretw  
  42015f:	unpcklps xmm6,XMMWORD PTR [esi+eax*4+0x3b6d2d7f]
  420167:	jns    0x420168
  420169:	mov    esp,0xc4037679
  42016e:	add    BYTE PTR [ecx+0x34],0xf
  420172:	sbb    al,0x66
  420174:	dec    esp
  420175:	inc    ebp
  420176:	xchg   BYTE PTR [eax],al
  420178:	stos   BYTE PTR es:[edi],al
  420179:	call   0x8ee5:0x58f8d39b
  420180:	std    
  420181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420182:	push   edx
  420183:	inc    ecx
  420184:	ret    
  420185:	pop    esp
  420186:	pushf  
  420187:	push   eax
  420188:	call   0xc487:0xbbbd01d9
  42018f:	data16 jns 0x4201af
  420192:	mov    fs,WORD PTR [eax]
  420194:	and    dh,BYTE PTR [edx]
  420196:	daa    
  420197:	pop    DWORD PTR [ebx+0x19dec74e]
  42019d:	in     al,0xc9
  42019f:	or     BYTE PTR [edx],dh
  4201a1:	scas   al,BYTE PTR es:[edi]
  4201a2:	cmp    ecx,DWORD PTR [edx+esi*2-0x576573ca]
  4201a9:	or     al,0x5
  4201ab:	sahf   
  4201ac:	jb     0x4201f2
  4201ae:	sbb    DWORD PTR [ebp*2+0x56fb319],esi
  4201b5:	out    0x83,al
  4201b7:	pop    ds
  4201b8:	les    ebp,FWORD PTR [ebp-0x70cf4e1f]
  4201be:	fwait
  4201bf:	jp     0x420239
  4201c1:	jmp    0x6171dfe4
  4201c6:	out    dx,al
  4201c7:	ins    BYTE PTR es:[edi],dx
  4201c8:	(bad)  [ecx+eiz*4]
  4201cb:	inc    esi
  4201cc:	leave  
  4201cd:	lahf   
  4201ce:	dec    ebp
  4201cf:	jbe    0x420185
  4201d1:	xchg   ebp,eax
  4201d2:	dec    ebp
  4201d3:	fyl2x  
  4201d5:	mov    edi,DWORD PTR [esi-0xd4bae53]
  4201db:	daa    
  4201dc:	lock test DWORD PTR [edi+0x57],edx
  4201e0:	xor    esi,DWORD PTR [esi]
  4201e2:	test   eax,0x807b9c66
  4201e7:	pop    esi
  4201e8:	add    DWORD PTR [ecx+0x1e0cf66e],ebp
  4201ee:	fwait
  4201ef:	loope  0x420182
  4201f1:	leave  
  4201f2:	cmc    
  4201f3:	and    bl,ah
  4201f5:	call   0x1ccb8abf
  4201fa:	stos   BYTE PTR es:[edi],al
  4201fb:	bound  esi,QWORD PTR [ebx]
  4201fd:	pop    esi
  4201fe:	(bad)  
  4201ff:	cmp    al,dl
  420201:	test   al,0x92
  420203:	ins    BYTE PTR es:[edi],dx
  420204:	or     eax,0x135dbbf1
  420209:	sbb    eax,0x86cd8bdf
  42020e:	clc    
  42020f:	loop   0x4201f9
  420211:	pop    esp
  420212:	fnstcw WORD PTR [edi+0x17]
  420215:	sbb    bl,ch
  420217:	les    eax,FWORD PTR [edi]
  420219:	dec    esi
  42021a:	push   esp
  42021b:	push   es
  42021c:	mov    ebp,0xfbda01bd
  420221:	scas   eax,DWORD PTR es:[edi]
  420222:	sbb    DWORD PTR [eax+0x18],esi
  420225:	xchg   ebp,eax
  420226:	mov    ecx,0x22a040ba
  42022b:	fucom  st(3)
  42022d:	popa   
  42022e:	and    eax,0x34b5095d
  420233:	xor    edx,DWORD PTR [edx-0x11]
  420236:	jge    0x42021c
  420238:	sbb    edi,DWORD PTR [edi]
  42023a:	(bad)  [edx+0x2a893538]
  420240:	sar    ebp,cl
  420242:	loop   0x420298
  420244:	pop    ebp
  420245:	retf   0xee6a
  420248:	fcomp  QWORD PTR [edi]
  42024a:	out    0xe2,eax
  42024c:	outs   dx,DWORD PTR ds:[esi]
  42024d:	push   esp
  42024e:	daa    
  42024f:	add    BYTE PTR [eax],ah
  420251:	sub    al,0xaf
  420253:	sbb    al,0x34
  420255:	or     al,BYTE PTR [eax]
  420257:	jge    0x42025b
  420259:	outs   dx,BYTE PTR ds:[esi]
  42025a:	daa    
  42025b:	jae    0x42023d
  42025d:	push   ecx
  42025e:	sbb    al,0x7d
  420260:	add    al,0xd0
  420262:	ror    edi,1
  420264:	jo     0x420216
  420266:	out    0x45,al
  420268:	ds into 
  42026a:	jge    0x4202de
  42026c:	xchg   ecx,eax
  42026d:	shr    cl,cl
  42026f:	iret   
  420270:	add    eax,0x9576588f
  420275:	je     0x42024f
  420277:	push   ss
  420278:	aad    0x3d
  42027a:	nop
  42027b:	inc    edx
  42027c:	outs   dx,BYTE PTR ds:[esi]
  42027d:	push   edx
  42027e:	push   edi
  42027f:	xor    al,BYTE PTR [ebp-0x39403f7f]
  420285:	jbe    0x4202f0
  420287:	xchg   ebp,edi
  420289:	in     al,0xa2
  42028b:	mov    bh,0xae
  42028d:	imul   esi,DWORD PTR [eax+eax*1+0x6c265788],0xffffffaa
  420295:	icebp  
  420296:	inc    ebp
  420297:	inc    esi
  420298:	arpl   WORD PTR [ebp-0x69d80156],bx
  42029e:	sbb    DWORD PTR [esi+esi*1-0x36],edx
  4202a2:	invd   
  4202a4:	stc    
  4202a5:	sbb    DWORD PTR [ecx+0x4c],eax
  4202a8:	imul   cl
  4202aa:	add    eax,DWORD PTR [eax]
  4202ac:	jbe    0x420234
  4202ae:	adc    bh,ah
  4202b0:	fldenv [ecx-0x26]
  4202b3:	sub    DWORD PTR [edx-0x4581582b],esp
  4202b9:	inc    esp
  4202ba:	sbb    al,ah
  4202bc:	push   ds
  4202bd:	or     BYTE PTR [esi+0x79],cl
  4202c0:	xor    eax,0x159baf1
  4202c5:	adc    eax,0x64bb8a3d
  4202ca:	ja     0x420301
  4202cc:	xor    ch,BYTE PTR [esi-0xf9a3da2]
  4202d2:	daa    
  4202d3:	cmp    al,0x74
  4202d5:	pop    ebx
  4202d6:	xor    BYTE PTR [ebp-0x74],dl
  4202d9:	jg     0x4202a4
  4202db:	lahf   
  4202dc:	dec    ebp
  4202dd:	and    al,0x5
  4202df:	dec    ebx
  4202e0:	push   ebx
  4202e1:	push   ecx
  4202e2:	shr    DWORD PTR [edx-0x724506bf],0xf5
  4202e9:	lods   al,BYTE PTR ds:[esi]
  4202ea:	pop    esp
  4202eb:	push   ds
  4202ec:	push   ecx
  4202ed:	push   eax
  4202ee:	mov    ecx,0x19596bc0
  4202f3:	pop    ds
  4202f4:	dec    edx
  4202f5:	pop    eax
  4202f6:	lds    esi,FWORD PTR [edx+0x3c33e0dc]
  4202fc:	lahf   
  4202fd:	jg     0x420339
  4202ff:	jns    0x4202a2
  420301:	in     eax,0x19
  420303:	push   eax
  420304:	add    al,0x3a
  420306:	xchg   BYTE PTR [ebx+edi*4],cl
  420309:	(bad)  
  42030a:	shl    DWORD PTR [esi],1
  42030c:	sbb    ecx,DWORD PTR [eax-0x374759fa]
  420312:	lods   al,BYTE PTR ds:[esi]
  420313:	sub    BYTE PTR [ebx+0x15],cl
  420316:	loopne 0x42034c
  420318:	ja     0x42033c
  42031a:	or     eax,0xd4bda7ac
  42031f:	and    dl,bl
  420321:	es xor eax,0x5f37a279
  420327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420328:	push   ebx
  420329:	mov    ch,0x50
  42032b:	cmc    
  42032c:	pop    edi
  42032d:	sbb    eax,0x69eda07f
  420332:	stc    
  420333:	xchg   edx,eax
  420334:	es aas 
  420336:	sub    BYTE PTR [edx-0x72f7b275],bh
  42033c:	test   BYTE PTR [ecx],al
  42033e:	stc    
  42033f:	mov    bh,0xac
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	stc    
  420378:	or     BYTE PTR [edx+edx*4],cl
  42037b:	out    dx,eax
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x68
  420384:	aam    0xee
  420386:	fdivr  QWORD PTR [esi+0x3bf8fa0b]
  42038c:	push   0x2
  42038e:	mov    ebx,0xf9520d33
  420393:	push   ss
  420394:	cmp    esp,edx
  420396:	xchg   edi,eax
  420397:	into   
  420398:	pop    ds
  420399:	scas   al,BYTE PTR es:[edi]
  42039a:	out    dx,eax
  42039b:	jne    0x42036f
  42039d:	adc    eax,0x861d22b3
  4203a2:	dec    ebx
  4203a3:	xchg   BYTE PTR [edx+0x3cc4ac4e],dh
  4203a9:	mov    esi,0x78113a5e
  4203ae:	popa   
  4203af:	sbb    BYTE PTR [ebp+0x73],bl
  4203b2:	arpl   WORD PTR [edi-0x1e742973],ax
  4203b8:	(bad)  
  4203b9:	and    al,0x4f
  4203bb:	jb     0x420356
  4203bd:	mov    dh,0x7
  4203bf:	das    
  4203c0:	test   al,0x5b
  4203c2:	adc    esp,DWORD PTR [eax]
  4203c4:	xor    al,cl
  4203c6:	push   cs
  4203c7:	(bad)  
  4203c8:	jo     0x420395
  4203ca:	aam    0x27
  4203cc:	ret    
  4203cd:	ficom  DWORD PTR [ebp+0x7e]
  4203d0:	sbb    eax,0xacd5aacc
  4203d5:	jmp    0x58aa5360
  4203da:	pop    esp
  4203db:	pop    ebx
  4203dc:	repnz sub DWORD PTR [ebx+0x74],0xffffffdc
  4203e1:	popa   
  4203e2:	mov    cl,BYTE PTR [ebx-0x13]
  4203e5:	es ss mov bh,0xc1
  4203e9:	sahf   
  4203ea:	test   eax,0x83bb7f9d
  4203ef:	out    0xd2,eax
  4203f1:	in     eax,0x1d
  4203f3:	scas   eax,DWORD PTR es:[edi]
  4203f4:	inc    ebx
  4203f5:	inc    edx
  4203f6:	adc    esi,DWORD PTR [ebx-0x55]
  4203f9:	in     eax,dx
  4203fa:	xchg   edi,eax
  4203fb:	jg     0x4203df
  4203fd:	xchg   DWORD PTR ds:0x3907520b,ebx
  420403:	retf   
  420404:	in     eax,0x2e
  420406:	sar    DWORD PTR [edi-0x2b4be66d],cl
  42040c:	mov    edx,0xdf08a6bc
  420411:	pavgb  mm3,QWORD PTR [ecx]
  420414:	sbb    al,dh
  420416:	push   cs
  420417:	inc    BYTE PTR [ecx]
  420419:	inc    esp
  42041a:	cli    
  42041b:	and    BYTE PTR [esi+0x66],dl
  42041e:	sub    cl,BYTE PTR [ecx-0x7c]
  420421:	mov    dh,0x96
  420423:	aam    0x30
  420425:	fwait
  420426:	jp     0x420494
  420428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420429:	pop    edi
  42042a:	outs   dx,BYTE PTR ds:[esi]
  42042b:	mov    DWORD PTR [esi],ebp
  42042d:	aam    0x6e
  42042f:	xchg   ebx,eax
  420430:	ss daa 
  420432:	popf   
  420433:	adc    DWORD PTR [edx*8-0x1d254645],eax
  42043a:	outs   dx,DWORD PTR ds:[esi]
  42043b:	inc    ebp
  42043c:	es xchg eax,esi
  42043f:	xor    DWORD PTR [eax-0xfbd2ce4],esp
  420445:	ret    0xdfa1
  420448:	mov    cl,0x2a
  42044a:	pushf  
  42044b:	xlat   BYTE PTR ds:[ebx]
  42044c:	test   BYTE PTR [ecx+0x1c9f3505],bh
  420452:	jmp    0x34c8:0x679f2ac9
  420459:	int    0xc
  42045b:	xor    al,0x9d
  42045d:	xchg   ecx,eax
  42045e:	pop    ds
  42045f:	sbb    eax,0xe55398c1
  420464:	out    dx,al
  420465:	pop    eax
  420466:	pop    edi
  420467:	enter  0xdd2d,0x61
  42046b:	mov    eax,0xdb30dbf5
  420470:	jle    0x42040d
  420472:	jo     0x4204f3
  420474:	test   al,bl
  420476:	call   0xf767c720
  42047b:	nop
  42047c:	or     eax,0x260d4467
  420481:	ins    BYTE PTR es:[edi],dx
  420482:	push   edx
  420483:	pop    edi
  420484:	jge    0x4204eb
  420486:	sti    
  420487:	jne    0x420501
  420489:	sub    cl,BYTE PTR [edx]
  42048b:	push   ecx
  42048c:	add    eax,0x4527856
  420491:	mov    cl,0xe7
  420493:	adc    DWORD PTR [ecx-0x57631d39],ebx
  420499:	daa    
  42049a:	stos   BYTE PTR es:[edi],al
  42049b:	lods   eax,DWORD PTR ds:[esi]
  42049c:	push   es
  42049d:	pushf  
  42049e:	pushf  
  42049f:	mov    ah,0xab
  4204a1:	sub    bh,BYTE PTR [edx]
  4204a3:	rcl    DWORD PTR [edi+esi*4+0x64],cl
  4204a7:	cmp    al,0x56
  4204a9:	stos   BYTE PTR es:[edi],al
  4204aa:	(bad)  
  4204ab:	fimul  DWORD PTR [ebx+ecx*2]
  4204ae:	rcl    DWORD PTR [ecx+0x7a3558ba],0x37
  4204b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b6:	ret    
  4204b7:	pop    es
  4204b8:	mov    dh,0xd7
  4204ba:	enter  0xf167,0xf4
  4204be:	pop    ss
  4204bf:	cld    
  4204c0:	aam    0x55
  4204c2:	xor    al,0x2f
  4204c4:	jne    0x42046c
  4204c6:	push   ebx
  4204c7:	mov    cl,0xad
  4204c9:	and    eax,0x5db2b96e
  4204ce:	std    
  4204cf:	test   al,0x30
  4204d1:	push   cs
  4204d2:	cs xchg edi,eax
  4204d4:	and    al,0x16
  4204d6:	stc    
  4204d7:	dec    ebp
  4204d8:	fidiv  DWORD PTR [ecx-0x6b]
  4204db:	std    
  4204dc:	pop    ss
  4204dd:	push   edx
  4204de:	push   ds
  4204df:	ror    DWORD PTR [esi-0x3d],cl
  4204e2:	mov    bh,0x7c
  4204e4:	sbb    edx,DWORD PTR [esp+eax*2]
  4204e7:	outs   dx,DWORD PTR ds:[esi]
  4204e8:	dec    eax
  4204e9:	sbb    eax,DWORD PTR [edx]
  4204eb:	loopne 0x42052c
  4204ed:	ffreep st(5)
  4204ef:	push   es
  4204f0:	pop    esp
  4204f1:	cmp    di,WORD PTR [ecx-0x432c6307]
  4204f8:	sub    ebp,0x5c
  4204fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204fc:	adc    edi,DWORD PTR [eax+ecx*8]
  4204ff:	or     al,0x40
  420501:	scas   eax,DWORD PTR es:[edi]
  420502:	dec    ebp
  420503:	or     al,0xee
  420505:	inc    ebx
  420506:	dec    edi
  420507:	neg    BYTE PTR [esi]
  420509:	inc    ecx
  42050a:	push   ecx
  42050b:	(bad)  
  42050c:	fldenv [esi+0x77792c6d]
  420512:	lahf   
  420513:	icebp  
  420514:	pop    ecx
  420515:	mov    ebp,0x39990a86
  42051a:	push   esi
  42051b:	jb     0x42052d
  42051d:	test   eax,0x102c932e
  420522:	adc    al,0x8f
  420524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420525:	xor    eax,0xe0c00c1
  42052a:	sub    al,0x95
  42052c:	dec    esp
  42052d:	sar    DWORD PTR [eax-0x5e],cl
  420530:	pmuludq mm0,QWORD PTR [edx+0x56c62d9a]
  420537:	jecxz  0x420562
  420539:	fmul   QWORD PTR [ebx]
  42053b:	jg     0x42055f
  42053d:	not    DWORD PTR [ecx+0x6d]
  420540:	push   esi
  420541:	ins    BYTE PTR es:[edi],dx
  420542:	cmp    DWORD PTR [ebx-0x1],esp
  420545:	pop    esp
  420546:	dec    ecx
  420547:	pop    es
  420548:	call   0x95dc:0x1a65f4a6
  42054f:	rcl    DWORD PTR [ecx],1
  420551:	fdivr  QWORD PTR [esi-0x6bff7cc9]
  420557:	retf   
  420558:	dec    esi
  420559:	dec    edx
  42055a:	push   ecx
  42055b:	pop    es
  42055c:	pop    edi
  42055d:	cmp    BYTE PTR fs:[ebx-0x240e5a56],0x5c
  420565:	xchg   esp,eax
  420566:	sar    dh,1
  420568:	push   esp
  420569:	xchg   ebx,eax
  42056a:	movups xmm3,XMMWORD PTR [edx+0x42]
  42056e:	mov    DWORD PTR ss:[ecx+0x2ff26e5e],esi
  420575:	ins    BYTE PTR es:[edi],dx
  420576:	inc    ecx
  420577:	fiadd  DWORD PTR [edi+0x4e]
  42057a:	push   ebp
  42057b:	inc    esi
  42057c:	xchg   ebp,eax
  42057d:	or     BYTE PTR [ecx-0x48bd1afc],al
  420583:	add    al,0xf9
  420585:	add    edx,DWORD PTR [ebx+0x64a83378]
  42058b:	push   edx
  42058c:	pop    ecx
  42058d:	push   ecx
  42058e:	cld    
  42058f:	pop    es
  420590:	push   0x5960ce51
  420595:	push   es
  420596:	sbb    eax,0x7ff67d8c
  42059b:	lods   al,BYTE PTR ds:[esi]
  42059c:	push   ebx
  42059d:	nop
  42059e:	not    DWORD PTR [edx+0x61]
  4205a1:	aad    0x96
  4205a3:	sbb    DWORD PTR es:[edi],0xd5484c61
  4205aa:	sub    DWORD PTR [ebx+0x25],0x5ead2e48
  4205b1:	loope  0x420541
  4205b3:	and    DWORD PTR [esi],edx
  4205b5:	inc    edx
  4205b6:	mov    eax,0xcc62c847
  4205bb:	enter  0xe164,0xfc
  4205bf:	imul   esi,DWORD PTR [ebx-0x47],0x1c
  4205c3:	out    0xdf,eax
  4205c5:	and    DWORD PTR cs:[eax-0x4bdcbe6d],ecx
  4205cc:	test   al,0x23
  4205ce:	mov    ebx,edi
  4205d0:	pop    ebp
  4205d1:	test   BYTE PTR [edx],0x3e
  4205d4:	aas    
  4205d5:	rcr    DWORD PTR cs:[ecx+0x5b6037b9],cl
  4205dc:	repz push edx
  4205de:	ins    DWORD PTR es:[edi],dx
  4205df:	dec    ebp
  4205e0:	sbb    ax,0xdc4e
  4205e4:	retf   
  4205e5:	(bad)  
  4205e6:	cs hlt 
  4205e8:	mov    al,0xe
  4205ea:	sbb    al,0x73
  4205ec:	mov    bl,0xdc
  4205ee:	sbb    DWORD PTR [eax],0xa8a22fe
  4205f4:	test   al,0x9f
  4205f6:	adc    ch,BYTE PTR [ebp-0x39dcbd42]
  4205fc:	das    
  4205fd:	out    dx,al
  4205fe:	retf   0x9272
  420601:	ja     0x420626
  420603:	frstor [eax-0x6358aa1b]
  420609:	imul   edi,esi,0xffffffc1
  42060c:	jns    0x420604
  42060e:	xchg   esi,eax
  42060f:	fidivr DWORD PTR [ebx+0x231834a5]
  420615:	jl     0x42064e
  420617:	lea    esi,[ebx+0x17]
  42061a:	fstp   QWORD PTR [eax-0x37]
  42061d:	sbb    dl,0xd3
  420620:	and    DWORD PTR [edx+ebx*4+0x6],ebx
  420624:	add    eax,DWORD PTR [ebp+0x54]
  420627:	shr    esp,0x55
  42062a:	leavew 
  42062c:	les    ebx,FWORD PTR [esi]
  42062e:	xchg   esi,eax
  42062f:	push   ecx
  420630:	outs   dx,DWORD PTR ds:[esi]
  420631:	test   eax,0xd975d904
  420636:	adc    BYTE PTR [edi+0x7591b707],0xc8
  42063d:	sub    edi,DWORD PTR [eax]
  42063f:	push   ss
  420640:	js     0x42063c
  420642:	jb     0x42061d
  420644:	mov    DWORD PTR [ebp-0x65],esi
  420647:	pop    ecx
  420648:	dec    ecx
  420649:	sbb    cl,BYTE PTR [edi]
  42064b:	adc    ch,BYTE PTR [edi]
  42064d:	jne    0x4206b7
  42064f:	mov    ebx,0x877f720a
  420654:	xchg   ecx,eax
  420655:	ds mov esi,eax
  420658:	hlt    
  420659:	mov    ebp,0x1f235589
  42065e:	xchg   edx,eax
  42065f:	jmp    0x420664
  420661:	enter  0xdecb,0x6c
  420665:	fwait
  420666:	div    DWORD PTR [edi+0x72]
  420669:	lds    edx,FWORD PTR [ebp+0x76]
  42066c:	call   DWORD PTR [ebp+0x4eb9e4d0]
  420672:	xor    eax,0x816cb410
  420677:	jg     0x4206bb
  420679:	outs   dx,DWORD PTR ds:[esi]
  42067a:	ins    BYTE PTR es:[edi],dx
  42067b:	leave  
  42067c:	fidiv  WORD PTR [edi]
  42067e:	enter  0x6edf,0xe7
  420682:	leave  
  420683:	pop    es
  420684:	les    ecx,FWORD PTR [eax-0x26]
  420687:	or     DWORD PTR [ebx],ebp
  420689:	add    al,ah
  42068b:	div    BYTE PTR [esi-0x2b]
  42068e:	cmp    bl,BYTE PTR [eax-0x777df514]
  420694:	inc    ebp
  420695:	mov    esi,0x5aaf50fa
  42069a:	jmp    0x47e78acc
  42069f:	(bad)  
  4206a0:	xchg   ecx,eax
  4206a1:	or     edi,DWORD PTR [ebx-0x62618163]
  4206a7:	xlat   BYTE PTR ds:[ebx]
  4206a8:	jmp    0x420674
  4206aa:	push   ecx
  4206ab:	push   esi
  4206ac:	iret   
  4206ad:	dec    ecx
  4206ae:	es jae 0x420695
  4206b1:	adc    al,0x3e
  4206b3:	sbb    al,0x68
  4206b5:	(bad)  
  4206b6:	mov    ds:0x800b0941,eax
  4206bb:	or     cl,BYTE PTR [eax-0x19]
  4206be:	fwait
  4206bf:	retf   
  4206c0:	ins    DWORD PTR es:[edi],dx
  4206c1:	ss (bad) 
  4206c3:	lea    ecx,[ebp+0x57]
  4206c6:	jl     0x42071a
  4206c8:	ror    DWORD PTR [esi+ebx*1+0x1d356716],0x74
  4206d0:	out    dx,al
  4206d1:	pop    es
  4206d2:	dec    edi
  4206d3:	adc    al,0x14
  4206d5:	outs   dx,BYTE PTR ds:[esi]
  4206d6:	aam    0xec
  4206d8:	push   ecx
  4206d9:	push   esp
  4206da:	fld    st(6)
  4206dc:	dec    esp
  4206dd:	out    0x3c,al
  4206df:	icebp  
  4206e0:	xchg   BYTE PTR [esi-0x556d824b],al
  4206e6:	scas   al,BYTE PTR es:[edi]
  4206e7:	jl     0x420735
  4206e9:	xor    al,0x98
  4206eb:	daa    
  4206ec:	fiadd  WORD PTR [eax+0x40313aef]
  4206f2:	aam    0xf1
  4206f4:	pushf  
  4206f5:	ins    DWORD PTR es:[edi],dx
  4206f6:	(bad)  
  4206f7:	xor    BYTE PTR [esi+ebp*1],bh
  4206fa:	pop    esp
  4206fb:	test   BYTE PTR [esi],cl
  4206fd:	outs   dx,DWORD PTR ds:[esi]
  4206fe:	push   DWORD PTR [esi+0x3735df2b]
  420704:	xchg   ebx,eax
  420705:	mov    esi,0xbe427f98
  42070a:	cs imul edi,esp,0xb48b2a5f
  420711:	lods   al,BYTE PTR ds:[esi]
  420712:	test   ecx,ecx
  420714:	fadd   QWORD PTR [esi-0x7ec0d3f3]
  42071a:	das    
  42071b:	ret    
  42071c:	in     al,dx
  42071d:	push   ds
  42071e:	xchg   ecx,eax
  42071f:	cmp    eax,0xc721e951
  420724:	xor    ah,al
  420726:	xor    ch,ch
  420728:	and    ebp,ebx
  42072a:	xor    DWORD PTR [ebx],esp
  42072c:	fwait
  42072d:	imul   esi,DWORD PTR es:[edx],0x5c5b74d7
  420734:	inc    ecx
  420735:	aaa    
  420736:	into   
  420737:	das    
  420738:	mov    edi,0xa65e68bc
  42073d:	sbb    ah,bl
  42073f:	cdq    
  420740:	cmp    DWORD PTR [ebx+0x35707312],esi
  420746:	xchg   ecx,eax
  420747:	xchg   DWORD PTR [edx-0x1f],edi
  42074a:	rcl    BYTE PTR [ebx],cl
  42074c:	and    DWORD PTR [ecx+0x6ddaf2],eax
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	sub    DWORD PTR [ecx+0x28],ebp
  4207aa:	sar    DWORD PTR [ebx+eiz*4-0x40],1
  4207ae:	mov    esi,0xbebec44a
  4207b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b4:	dec    esp
  4207b5:	fs fcomi st,st(2)
  4207b8:	rcl    BYTE PTR [edx],0xe7
  4207bb:	dec    ebx
  4207bc:	dec    eax
  4207bd:	retf   
  4207be:	fild   DWORD PTR [ebx-0x27f70d74]
  4207c4:	ret    
  4207c5:	mov    eax,ds:0x413b506b
  4207ca:	cwde   
  4207cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207cc:	push   esp
  4207cd:	into   
  4207ce:	jp     0x420843
  4207d0:	and    BYTE PTR [ebp-0x6b],bh
  4207d3:	mov    eax,0x32c24e78
  4207d8:	test   al,0xca
  4207da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207db:	stos   BYTE PTR es:[edi],al
  4207dc:	dec    esp
  4207dd:	push   edx
  4207de:	jmp    0x420779
  4207e0:	cld    
  4207e1:	lahf   
  4207e2:	mov    ds:0x83fa722f,al
  4207e7:	mov    al,ds:0x6783b266
  4207ec:	xchg   edx,edx
  4207ee:	lods   eax,DWORD PTR ds:[esi]
  4207ef:	jge    0x420802
  4207f1:	jecxz  0x42077d
  4207f3:	pop    ss
  4207f4:	and    DWORD PTR ds:0x6e82cfbc,0xffffffb8
  4207fb:	lds    esi,FWORD PTR [edi]
  4207fd:	xor    DWORD PTR [ebx+ecx*4+0xc],esi
  420801:	ins    BYTE PTR es:[edi],dx
  420802:	inc    esi
  420803:	cmp    eax,0x7774f07f
  420808:	pop    eax
  420809:	jle    0x420871
  42080b:	adc    DWORD PTR [ebx-0x3b87dee7],ebx
  420811:	dec    esi
  420812:	outs   dx,BYTE PTR ds:[esi]
  420813:	cmp    DWORD PTR [esi+0x75],edi
  420816:	cmp    DWORD PTR [ecx+eax*4-0x24b14d0d],edi
  42081d:	addr16 xchg edi,eax
  42081f:	add    WORD PTR [eax-0x52486874],si
  420826:	popa   
  420827:	jne    0x420845
  420829:	popf   
  42082a:	call   0x7480:0x3b700e2b
  420831:	and    esp,DWORD PTR [edx]
  420833:	das    
  420834:	cdq    
  420835:	aas    
  420836:	out    0xfb,al
  420838:	xchg   edx,eax
  420839:	hlt    
  42083a:	jno    0x4208b5
  42083c:	xchg   ebx,eax
  42083d:	pop    ebx
  42083e:	jmp    0x420802
  420840:	fisubr DWORD PTR [ebp-0x68]
  420843:	std    
  420844:	sbb    eax,0xb28d8eca
  420849:	mov    cl,0xd
  42084b:	lea    ebx,[eax]
  42084d:	mov    bl,0xca
  42084f:	jo     0x420831
  420851:	call   0xb4d1e182
  420856:	std    
  420857:	xor    DWORD PTR [ecx],0xffffffd6
  42085a:	(bad)  
  42085b:	nop
  42085c:	push   ss
  42085d:	popa   
  42085e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085f:	popa   
  420860:	in     eax,0x11
  420862:	int3   
  420863:	popf   
  420864:	cmp    ebx,ebp
  420866:	and    ebx,0xffffffae
  420869:	xor    eax,ebp
  42086b:	add    eax,0x97e3a697
  420870:	push   ss
  420871:	sbb    edi,edx
  420873:	inc    ebp
  420874:	inc    edx
  420875:	jb     0x42086e
  420877:	in     al,0x33
  420879:	add    DWORD PTR [ecx+0x5c],0xaa567d24
  420880:	cmp    al,0x5e
  420882:	(bad)  
  420883:	jge    0x42080f
  420885:	nop    DWORD PTR [ebp+ebp*8-0x41]
  42088a:	sbb    eax,0x74c7d59e
  42088f:	sub    al,0x4f
  420891:	dec    edx
  420892:	aad    0x0
  420894:	ret    
  420895:	(bad)  
  420896:	out    dx,eax
  420897:	push   eax
  420898:	push   esp
  420899:	dec    esp
  42089a:	mov    eax,0x1419a3cd
  42089f:	inc    ecx
  4208a1:	test   DWORD PTR [ebp-0x51],0xf1ca29c1
  4208a8:	add    eax,0xf0529fcb
  4208ad:	jl     0x4208f9
  4208af:	mov    cl,0xc2
  4208b1:	rcr    BYTE PTR [eax+0x4cc41b08],cl
  4208b7:	out    dx,al
  4208b8:	ds push eax
  4208ba:	xchg   esp,ebp
  4208bc:	test   DWORD PTR [edx],eax
  4208be:	pop    edi
  4208bf:	loop   0x4208c7
  4208c1:	jb     0x420939
  4208c3:	jge    0x4208d9
  4208c5:	cdq    
  4208c6:	mov    ah,0x49
  4208c8:	mov    dl,0x83
  4208ca:	or     DWORD PTR [ebp-0x26],ebx
  4208cd:	jae    0x420925
  4208cf:	cmc    
  4208d0:	sub    al,0xe4
  4208d2:	outs   dx,BYTE PTR ds:[esi]
  4208d3:	inc    edx
  4208d4:	(bad)  
  4208d5:	out    0xea,eax
  4208d7:	(bad)  
  4208d8:	and    DWORD PTR [esi+eiz*1],edi
  4208db:	cmp    al,0x8b
  4208dd:	stc    
  4208de:	add    eax,0xb04fdc2f
  4208e3:	push   ecx
  4208e4:	mov    dl,0xeb
  4208e6:	fwait
  4208e7:	pop    ds
  4208e8:	sub    eax,0x5c87ba80
  4208ed:	or     BYTE PTR [ecx-0xfe1495e],bh
  4208f3:	ins    DWORD PTR es:[edi],dx
  4208f4:	ret    0xabf1
  4208f7:	sub    eax,0xc5299dcf
  4208fc:	sbb    dh,ah
  4208fe:	aad    0x1f
  420900:	into   
  420901:	fist   DWORD PTR [edi+0x71]
  420904:	outs   dx,BYTE PTR ds:[esi]
  420905:	inc    ebx
  420906:	sub    DWORD PTR [ecx+0x5fdcf37e],esi
  42090c:	mov    cl,0xd5
  42090e:	call   0x21e0170c
  420913:	inc    ebp
  420914:	popf   
  420915:	inc    eax
  420916:	in     eax,dx
  420917:	pop    edx
  420918:	push   eax
  420919:	mov    ah,0x67
  42091b:	fidivr DWORD PTR [esi-0x1d87d18e]
  420921:	fstp   DWORD PTR [edx+ecx*2+0x1e]
  420925:	aas    
  420926:	push   ecx
  420927:	jecxz  0x4208e0
  420929:	or     al,0x54
  42092b:	es jg  0x420985
  42092e:	jmp    0x42090a
  420930:	adc    BYTE PTR [ebp-0x66],bl
  420933:	add    edi,esi
  420935:	jb     0x4208f4
  420937:	xchg   DWORD PTR [esi+0x5da31d38],eax
  42093d:	sti    
  42093e:	push   edx
  42093f:	leave  
  420940:	addr16 xchg ebx,eax
  420942:	daa    
  420943:	jne    0x4208de
  420945:	or     DWORD PTR [edx+0x37],edx
  420948:	jmp    0xc538cffb
  42094d:	lock pop esi
  42094f:	cmp    DWORD PTR [ecx+ebx*8-0x70],esi
  420953:	sub    dh,BYTE PTR [edx-0x26626e07]
  420959:	shr    DWORD PTR [ebx+0x57],0x90
  42095d:	frstor [ecx+ebp*2]
  420960:	dec    esi
  420961:	pop    eax
  420962:	adc    edx,DWORD PTR [ebp-0x3c3dbb70]
  420968:	adc    BYTE PTR [ebx-0x333b8037],cl
  42096e:	push   cs
  42096f:	gs pop ecx
  420971:	test   DWORD PTR [edx],esp
  420973:	ss pop ecx
  420975:	call   0xb3d7b2fb
  42097a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42097b:	push   0xffffffa5
  42097d:	iret   
  42097e:	xor    eax,DWORD PTR [ecx-0x4ee7e241]
  420984:	cmp    eax,0x3f526771
  420989:	add    eax,DWORD PTR [edx+0x54]
  42098c:	mov    ch,0x3a
  42098e:	push   cs
  42098f:	xor    bl,BYTE PTR [ebx+esi*1-0x4d]
  420993:	xchg   edx,eax
  420994:	xchg   ebx,eax
  420995:	mov    esi,0x297dad14
  42099a:	mov    al,0xd7
  42099c:	sbb    DWORD PTR [ecx-0x16597020],esp
  4209a2:	inc    esp
  4209a3:	mov    ecx,0x8a7a70f7
  4209a8:	aaa    
  4209a9:	arpl   di,dx
  4209ab:	call   0x9cde:0x56b
  4209b1:	mov    cl,0xfb
  4209b3:	(bad)  
  4209b4:	scas   al,BYTE PTR es:[edi]
  4209b5:	adc    dh,bh
  4209b7:	pop    ds
  4209b8:	xchg   ebx,eax
  4209b9:	jge    0x420958
  4209bb:	in     eax,0x2
  4209bd:	cwde   
  4209be:	push   eax
  4209bf:	cld    
  4209c0:	cmp    DWORD PTR [esi-0x43],ebp
  4209c3:	jae    0x42096c
  4209c5:	xor    ah,BYTE PTR [ebp+0x6f9e735e]
  4209cb:	push   ecx
  4209cc:	(bad)  
  4209cd:	push   0x4f
  4209cf:	mov    ah,0x71
  4209d1:	sub    DWORD PTR [ebp+0x63],0xcdf18ea1
  4209d8:	pop    esi
  4209d9:	mov    WORD PTR [ebp+0x16c64416],gs
  4209df:	pop    ebp
  4209e0:	push   DWORD PTR [eax+0x3b]
  4209e3:	cmp    BYTE PTR [edx],dh
  4209e5:	push   ebx
  4209e6:	mov    gs,WORD PTR ds:0xf0e4b08a
  4209ec:	jge    0x420a04
  4209ee:	fucomip st,st(3)
  4209f0:	pop    edi
  4209f1:	jge    0x420a41
  4209f3:	retf   
  4209f4:	xchg   ebp,eax
  4209f5:	(bad)  
  4209f6:	pop    ss
  4209f7:	scas   al,BYTE PTR es:[edi]
  4209f8:	fsub   st(5),st
  4209fa:	in     eax,0x8d
  4209fc:	ret    
  4209fd:	sub    al,0x1e
  4209ff:	push   esp
  420a00:	pop    ebp
  420a01:	mov    ds:0x2e9c4e23,eax
  420a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a07:	mov    al,0x38
  420a09:	cmp    ebp,DWORD PTR [eax+esi*1+0x33]
  420a0d:	call   0xfcd035ed
  420a12:	mov    esp,0x332f0b87
  420a17:	xchg   edi,esp
  420a19:	test   DWORD PTR [esi-0x36],0x7bf94531
  420a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a21:	adc    DWORD PTR [ebx],0xffffffea
  420a24:	xor    al,0xb4
  420a26:	mov    ds:0x423713aa,al
  420a2b:	mov    ah,0x3e
  420a2d:	inc    eax
  420a2e:	lods   al,BYTE PTR ds:[esi]
  420a2f:	out    0x94,eax
  420a31:	lods   al,BYTE PTR ds:[esi]
  420a32:	and    ebx,esi
  420a34:	shl    DWORD PTR [esi+0x1b],1
  420a37:	sub    al,0xb0
  420a39:	cmp    ah,ch
  420a3b:	pusha  
  420a3c:	cs cld 
  420a3e:	test   al,0x2a
  420a40:	loop   0x420a95
  420a42:	pop    edi
  420a43:	gs (bad) 
  420a45:	out    0xf2,eax
  420a47:	daa    
  420a48:	dec    eax
  420a49:	stos   DWORD PTR es:[edi],eax
  420a4a:	out    dx,eax
  420a4b:	sbb    BYTE PTR [ecx+0x37],ch
  420a4e:	shl    BYTE PTR [edi+0x77],cl
  420a51:	out    dx,al
  420a52:	jle    0x420a22
  420a54:	sub    eax,0x46e25d1d
  420a59:	mov    al,0x9b
  420a5b:	cli    
  420a5c:	push   eax
  420a5d:	jge    0x420a79
  420a5f:	hlt    
  420a60:	int3   
  420a61:	add    dl,BYTE PTR [ebx+0x7]
  420a64:	addr16 addr16 loopne 0x420aa0
  420a68:	pop    eax
  420a69:	dec    edx
  420a6a:	add    eax,0xb657f3c8
  420a6f:	adc    ecx,DWORD PTR [edi-0xf20552e]
  420a75:	cmp    BYTE PTR [ecx],al
  420a77:	loope  0x4209fa
  420a79:	mov    bl,0x86
  420a7b:	xor    eax,0xebd2b091
  420a80:	push   edi
  420a81:	jmp    0x420a9e
  420a83:	sbb    esi,DWORD PTR [ebx-0x6f47b547]
  420a89:	sbb    DWORD PTR [esi],esi
  420a8b:	xchg   ebp,eax
  420a8c:	test   eax,0x76fb5e1f
  420a91:	push   ebx
  420a92:	mov    ebp,0x1a89843c
  420a97:	(bad)  
  420a99:	sbb    DWORD PTR [eax-0x7e3bc2fc],ebx
  420a9f:	leave  
  420aa0:	inc    eax
  420aa1:	xor    al,0x5d
  420aa3:	add    eax,0xf7e2a4d3
  420aa8:	sub    DWORD PTR [ebx+0x6ba2dc4f],0x70599e4f
  420ab2:	mov    ds:0x8112d25f,al
  420ab7:	cmp    DWORD PTR ds:0x3fe2c914,edx
  420abd:	lds    edx,FWORD PTR [eax+0x18]
  420ac0:	inc    eax
  420ac1:	or     BYTE PTR [edi],al
  420ac3:	popa   
  420ac4:	shl    BYTE PTR [edx],1
  420ac6:	push   esi
  420ac7:	inc    ecx
  420ac8:	add    eax,0x744d81f2
  420acd:	hlt    
  420ace:	add    esi,DWORD PTR [ebx+0x6c]
  420ad1:	push   cs
  420ad2:	mov    bh,0x7e
  420ad4:	and    eax,0x2982125b
  420ad9:	pop    esp
  420ada:	repz xor edx,ebx
  420add:	cmp    dl,BYTE PTR [edx+0x14fa2db0]
  420ae3:	or     BYTE PTR [esi],al
  420ae5:	mov    cl,0xb9
  420ae7:	push   ds
  420ae8:	adc    BYTE PTR [ebp-0x4d34b600],cl
  420aee:	sub    BYTE PTR [esi],dh
  420af0:	cmp    BYTE PTR [ebp+0x4b],ah
  420af3:	test   BYTE PTR [esp+eax*1],bh
  420af6:	add    eax,0x1aca3a6c
  420afb:	mov    esi,0xb6d84d03
  420b00:	pop    ss
  420b01:	and    al,BYTE PTR [ecx+edi*2+0x3]
  420b05:	xchg   edi,eax
  420b06:	ja     0x420b68
  420b08:	mov    ebp,0xdcb72a7f
  420b0d:	dec    ebp
  420b0e:	sar    eax,1
  420b10:	in     eax,0x89
  420b12:	and    BYTE PTR [edx+0x305dc3c],0x16
  420b19:	xchg   edx,eax
  420b1a:	add    eax,0xcf454d5b
  420b1f:	mov    ah,0xdd
  420b21:	hlt    
  420b22:	xchg   DWORD PTR [eax+eiz*4+0x38],eax
  420b26:	mov    al,ds:0x2ae2b55
  420b2b:	dec    esi
  420b2c:	sar    edx,cl
  420b2e:	nop
  420b2f:	stos   BYTE PTR es:[edi],al
  420b30:	lods   eax,DWORD PTR ds:[esi]
  420b31:	data16 scas al,BYTE PTR es:[edi]
  420b33:	out    0x1d,al
  420b35:	pop    ebp
  420b36:	add    DWORD PTR [edi-0x5cf7cad8],esp
  420b3c:	jnp    0x420b07
  420b3e:	mov    edi,esi
  420b40:	add    BYTE PTR [ebp-0x3d272b8b],0x9d
  420b47:	je     0x420b94
  420b49:	cmp    al,0xa5
  420b4b:	mov    bh,0x48
  420b4d:	dec    edi
  420b4e:	dec    DWORD PTR [ecx]
  420b50:	(bad)  
  420b51:	sub    dl,cl
  420b53:	push   0x30
  420b55:	mov    dh,0xdb
  420b57:	imul   edi,DWORD PTR [ebx-0x3242866e],0xcb78773a
  420b61:	ins    DWORD PTR es:[edi],dx
  420b62:	pop    eax
  420b63:	stos   DWORD PTR es:[edi],eax
  420b64:	jp     0x420b11
  420b66:	sbb    edx,ebp
  420b68:	dec    ecx
  420b69:	jno    0x420bd3
  420b6b:	and    al,0x8e
  420b6d:	sbb    dh,ch
  420b6f:	mov    bh,0x51
  420b71:	(bad)  
  420b72:	out    0x85,al
  420b74:	or     al,0x32
  420b76:	or     ebx,DWORD PTR [ebx+ebx*4-0x4b]
  420b7a:	frstpm(287 only) 
  420b7c:	add    al,0x8b
  420b7e:	test   DWORD PTR [eax],ebx
  420b80:	(bad)  
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [ebp+edi*1+0x8920a83],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0x18
  420ba7:	loop   0x420ba5
  420ba9:	fsubr  QWORD PTR [edx]
  420bab:	push   0x2aaf65de
  420bb0:	inc    ebp
  420bb1:	jbe    0x420b74
  420bb3:	and    al,0x8c
  420bb5:	or     BYTE PTR [eax],0x31
  420bb8:	dec    eax
  420bb9:	adc    BYTE PTR [ebp-0x6cbb8e09],cl
  420bbf:	outs   dx,BYTE PTR ds:[esi]
  420bc0:	shr    BYTE PTR [esi],cl
  420bc2:	inc    ebp
  420bc3:	jge    0x420c06
  420bc5:	sub    eax,0xf5d0c970
  420bca:	xor    BYTE PTR [ebp-0x7d],al
  420bcd:	dec    esi
  420bce:	and    edi,DWORD PTR [edi+0x17]
  420bd1:	xchg   edx,eax
  420bd2:	fdiv   DWORD PTR [esi+0x7891bf6c]
  420bd8:	inc    edx
  420bd9:	xor    eax,0x42366e4e
  420bde:	xchg   ebx,eax
  420bdf:	int    0x46
  420be1:	loope  0x420c47
  420be3:	push   ecx
  420be4:	addr16 std 
  420be6:	dec    esp
  420be7:	es jle 0x420c2a
  420bea:	stos   BYTE PTR es:[edi],al
  420beb:	push   edi
  420bec:	icebp  
  420bed:	outs   dx,DWORD PTR ds:[esi]
  420bee:	cdq    
  420bef:	push   esp
  420bf0:	cs sub ecx,esi
  420bf3:	pop    es
  420bf4:	or     ebp,ecx
  420bf6:	or     al,0x65
  420bf8:	push   ebp
  420bf9:	sbb    eax,0xe2e8d30f
  420bfe:	test   DWORD PTR gs:[esi+0x42],ebp
  420c02:	mov    ebx,0x64114a0b
  420c07:	mov    ds,WORD PTR [edi-0x4]
  420c0a:	jle    0x420c05
  420c0c:	jecxz  0x420c38
  420c0e:	jmp    0x564:0x61cd1a3b
  420c15:	or     esi,DWORD PTR [ebp-0x745bbe2b]
  420c1b:	inc    eax
  420c1c:	lods   eax,DWORD PTR ds:[esi]
  420c1d:	pop    edi
  420c1e:	mov    ecx,0xa68772f4
  420c23:	cmp    BYTE PTR [ecx-0x5f2011ea],al
  420c29:	xor    eax,0x93c337c1
  420c2e:	push   esi
  420c2f:	and    eax,0x7076ae37
  420c34:	push   edi
  420c35:	dec    ecx
  420c36:	(bad)  
  420c37:	xchg   ebx,eax
  420c38:	fisub  DWORD PTR ds:0x4f172ce1
  420c3e:	and    DWORD PTR [edi],esi
  420c40:	jnp    0x420c7f
  420c42:	pop    esp
  420c43:	push   0xebd2781f
  420c48:	mov    DWORD PTR ss:[ecx],ebx
  420c4b:	mov    bl,0xd1
  420c4d:	inc    esi
  420c4e:	xor    eax,0x89811294
  420c53:	push   ebp
  420c54:	imul   esp,DWORD PTR [eax-0x52197e55],0x46
  420c5b:	add    eax,0xd654b53c
  420c60:	xor    eax,DWORD PTR [esi+0x6]
  420c63:	scas   al,BYTE PTR es:[edi]
  420c64:	fwait
  420c65:	stos   BYTE PTR es:[edi],al
  420c66:	xchg   BYTE PTR [edi-0x7a],bl
  420c69:	imul   esp,DWORD PTR [edx-0x14],0x2baa957c
  420c70:	add    DWORD PTR [edx],ebx
  420c72:	(bad)  
  420c73:	stc    
  420c74:	mov    ebp,0x8f6a1e02
  420c79:	xor    al,0xca
  420c7b:	inc    ebx
  420c7c:	adc    al,0x35
  420c7e:	xor    edi,eax
  420c80:	xchg   edx,eax
  420c81:	pusha  
  420c82:	fst    QWORD PTR [eax-0x1db7f435]
  420c88:	mov    bl,0x98
  420c8a:	ja     0x420cd5
  420c8c:	inc    ecx
  420c8d:	jbe    0x420c40
  420c8f:	int3   
  420c90:	dec    edi
  420c91:	mov    ds:0x53e19773,al
  420c96:	mov    edi,0x9772ada1
  420c9b:	cmp    al,0x6b
  420c9d:	jne    0x420cf0
  420c9f:	xor    bh,BYTE PTR [esi]
  420ca1:	push   ebx
  420ca2:	and    ebp,esi
  420ca4:	mov    bh,0x43
  420ca6:	jge    0x420c46
  420ca8:	outs   dx,BYTE PTR ds:[esi]
  420ca9:	adc    ebx,edx
  420cab:	les    eax,FWORD PTR ds:0x1a1002a0
  420cb1:	ffree  st(0)
  420cb3:	gs inc edx
  420cb5:	lods   al,BYTE PTR ds:[esi]
  420cb6:	jne    0x420cc4
  420cb8:	shl    DWORD PTR [ecx+0x340e1541],1
  420cbe:	enter  0xb98a,0x86
  420cc2:	xor    eax,0x308efb9f
  420cc7:	jl     0x420cd7
  420cc9:	fstp   TBYTE PTR [edi]
  420ccb:	dec    edx
  420ccc:	(bad)
  420ccf:	jns    0x420cdc
  420cd1:	lods   eax,DWORD PTR ds:[esi]
  420cd2:	add    BYTE PTR [edx-0x55012fb4],0x57
  420cd9:	sbb    al,0x7b
  420cdb:	std    
  420cdc:	aaa    
  420cdd:	lea    ebp,[ebx-0xf711853]
  420ce3:	mov    cl,0xba
  420ce5:	inc    ecx
  420ce6:	arpl   WORD PTR [eax+0x299f7935],bp
  420cec:	inc    ecx
  420ced:	iret   
  420cee:	pop    ebp
  420cef:	add    eax,0x6a630a3
  420cf4:	fucomip st,st(1)
  420cf6:	push   ecx
  420cf7:	xor    ebp,ecx
  420cf9:	call   0x3d9bb8c1
  420cfe:	jle    0x420d27
  420d00:	jnp    0x420d58
  420d02:	cmp    dh,ah
  420d04:	or     DWORD PTR [esi+0x189e4084],eax
  420d0a:	inc    ebp
  420d0b:	mov    WORD PTR [eax+eiz*1+0x31],es
  420d0f:	rcl    BYTE PTR [edi+0x7176caa],1
  420d15:	clc    
  420d16:	pop    eax
  420d17:	hlt    
  420d18:	fwait
  420d19:	push   ss
  420d1a:	fwait
  420d1b:	jns    0x420cef
  420d1d:	(bad)  [edi-0x677f4dd7]
  420d23:	test   eax,0x8a6a7eca
  420d28:	jp     0x420ce8
  420d2a:	push   eax
  420d2b:	mov    al,ds:0xc7a28ab3
  420d30:	add    eax,eax
  420d32:	test   al,0x4
  420d34:	push   esi
  420d35:	sbb    DWORD PTR [edx-0x2599c0ac],ecx
  420d3b:	stc    
  420d3c:	cmp    esp,ecx
  420d3e:	inc    ecx
  420d3f:	loope  0x420d63
  420d41:	jbe    0x420d75
  420d43:	jp     0x420d67
  420d45:	ja     0x420cfe
  420d47:	fld    DWORD PTR [eax]
  420d49:	mov    ebp,0xdfbeb560
  420d4e:	sub    al,ah
  420d50:	adc    al,0xa2
  420d52:	mov    bl,bl
  420d54:	pop    ebp
  420d55:	dec    esp
  420d56:	and    bl,BYTE PTR [esi-0x419623ad]
  420d5c:	(bad)  
  420d5d:	stc    
  420d5e:	call   DWORD PTR [edx-0x4f63ff0e]
  420d64:	pop    eax
  420d65:	or     ch,BYTE PTR [edx-0x53743c67]
  420d6b:	mov    ah,0x4
  420d6d:	stos   DWORD PTR es:[edi],eax
  420d6e:	add    al,BYTE PTR [eax+0x1a]
  420d71:	push   0x45651a81
  420d76:	add    edi,DWORD PTR ds:0xd73a92ee
  420d7c:	inc    edx
  420d7d:	out    0xd1,eax
  420d7f:	std    
  420d80:	jbe    0x420d8c
  420d82:	mov    ds:0xf20f6fe6,al
  420d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d88:	stos   BYTE PTR es:[edi],al
  420d89:	test   al,0x2c
  420d8b:	pop    esp
  420d8c:	mov    cl,0x42
  420d8e:	imul   edi
  420d90:	nop
  420d91:	jmp    0xd628:0x2867e222
  420d98:	pop    eax
  420d99:	fstp   DWORD PTR [edi-0x2754ce2e]
  420d9f:	cdq    
  420da0:	inc    edx
  420da1:	test   eax,0x8a4a969f
  420da6:	cmp    ecx,DWORD PTR [edi+0x379395c6]
  420dac:	fnstsw WORD PTR [ecx+0x44]
  420daf:	jmp    0x767f:0x484cce19
  420db6:	mov    ss,ebx
  420db8:	pop    es
  420db9:	ss cs into 
  420dbc:	inc    edi
  420dbd:	in     al,0xa8
  420dbf:	xchg   ebx,eax
  420dc0:	pop    esp
  420dc1:	cwde   
  420dc2:	aam    0x57
  420dc4:	pop    ds
  420dc5:	mov    ecx,0x545d3d97
  420dca:	cmp    esi,DWORD PTR [edi+0x5]
  420dcd:	fmulp  st(0),st
  420dcf:	dec    DWORD PTR [ecx-0x7b]
  420dd2:	xchg   esp,eax
  420dd3:	adc    al,0x62
  420dd5:	xchg   esi,eax
  420dd6:	shr    DWORD PTR [ebx+0x3e],0x83
  420dda:	dec    ebx
  420ddb:	push   edi
  420ddc:	test   eax,0xdc0eb24e
  420de1:	push   ss
  420de2:	inc    esp
  420de3:	ss scas eax,DWORD PTR es:[edi]
  420de5:	stc    
  420de6:	popf   
  420de7:	or     eax,0x17ae6f1d
  420dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ded:	das    
  420dee:	cli    
  420def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df0:	add    BYTE PTR [eax+esi*8+0x6],0x8b
  420df5:	cli    
  420df6:	dec    ebp
  420df7:	fcomp  DWORD PTR [ecx+esi*4-0x6085f50c]
  420dfe:	push   ss
  420dff:	mov    dh,0x82
  420e01:	jecxz  0x420e18
  420e03:	or     al,0xc7
  420e05:	mov    cl,dl
  420e07:	test   eax,0x616d560c
  420e0c:	out    dx,eax
  420e0d:	(bad)  [edi]
  420e0f:	lahf   
  420e10:	test   al,0xb0
  420e12:	xor    edi,0xb619caac
  420e18:	or     dl,dl
  420e1a:	ds mov esi,0xefd0af0c
  420e20:	ret    
  420e21:	test   BYTE PTR [esi+0x53],0x13
  420e25:	or     eax,DWORD PTR [ecx]
  420e27:	(bad)  
  420e28:	xor    BYTE PTR [ecx-0x6c],ah
  420e2b:	or     edx,DWORD PTR [ecx+esi*1]
  420e2e:	and    bl,cl
  420e30:	push   eax
  420e31:	dec    esi
  420e32:	push   ebp
  420e33:	hlt    
  420e34:	xor    DWORD PTR [ebx+ebx*8-0x27],0xffffff9c
  420e39:	xlat   BYTE PTR ds:[ebx]
  420e3a:	sbb    al,0x93
  420e3c:	mul    BYTE PTR ds:0xa555a08f
  420e42:	jae    0x420e28
  420e44:	out    0xd5,eax
  420e46:	push   ss
  420e47:	pop    ebp
  420e48:	pop    edx
  420e49:	loope  0x420e01
  420e4b:	push   esp
  420e4c:	mov    eax,ds:0x815a88f8
  420e51:	jns    0x420e16
  420e53:	mov    esi,0xe5e2dc9
  420e58:	add    BYTE PTR [edx+0x67050d43],bh
  420e5e:	nop
  420e5f:	xlat   BYTE PTR ds:[ebx]
  420e60:	(bad)  [edi]
  420e62:	dec    esi
  420e63:	dec    ebp
  420e64:	lods   eax,DWORD PTR ds:[esi]
  420e65:	(bad)  
  420e66:	pminub mm5,QWORD PTR [eax+esi*8]
  420e6a:	repz lds esp,FWORD PTR [ebp+eiz*1-0x4c]
  420e6f:	pusha  
  420e70:	sahf   
  420e71:	rcr    DWORD PTR [ebx-0x54],0xbb
  420e75:	or     eax,0x56c80301
  420e7a:	fwait
  420e7b:	shl    DWORD PTR [ecx+0x2c7b92d6],0xe0
  420e82:	xchg   edi,eax
  420e83:	outs   dx,BYTE PTR ds:[si]
  420e85:	pushf  
  420e86:	inc    edi
  420e87:	push   esi
  420e88:	jle    0x420e0f
  420e8a:	lock sbb eax,0x2c6f583f
  420e90:	repz xor al,0x6d
  420e93:	test   eax,0xbe091058
  420e98:	sub    ebx,edi
  420e9a:	jmp    0x420e64
  420e9c:	cmp    ebx,DWORD PTR [eax-0x3]
  420e9f:	mov    ebx,0x23ee5989
  420ea4:	sar    ebp,cl
  420ea6:	and    ah,BYTE PTR [ebp+esi*1+0x22]
  420eaa:	test   al,0x1f
  420eac:	pop    ds
  420ead:	pop    ds
  420eae:	sub    DWORD PTR [ebx],esp
  420eb0:	jbe    0x420e84
  420eb2:	fninit 
  420eb4:	cmp    esp,DWORD PTR [edi+0x36]
  420eb7:	gs cmp ebx,DWORD PTR fs:[esi]
  420ebb:	adc    bh,BYTE PTR [ebp+ebp*4+0x1f]
  420ebf:	fistp  DWORD PTR [esi-0x1292fd75]
  420ec5:	push   eax
  420ec6:	jns    0x420ebd
  420ec8:	dec    edi
  420ec9:	daa    
  420eca:	mov    ds:0xb1d6ffb,eax
  420ecf:	lahf   
  420ed0:	mov    DWORD PTR [ecx-0x41b59a1b],ecx
  420ed6:	jg     0x420e7f
  420ed8:	xrelease mov DWORD PTR [edi+edi*4+0xdc4fe33],ecx
  420ee0:	loope  0x420f37
  420ee2:	xor    DWORD PTR [ebp-0xe],eax
  420ee5:	mov    ecx,DWORD PTR [ebp-0x752ae825]
  420eeb:	jmp    0x5a96:0x19b04ebc
  420ef2:	popa   
  420ef3:	sbb    DWORD PTR [eax-0x37],ebx
  420ef6:	sbb    eax,0xf3508a13
  420efb:	lds    esp,FWORD PTR [edx]
  420efd:	repnz dec ecx
  420eff:	call   0x67ff5964
  420f04:	(bad)  
  420f05:	mov    bl,0x30
  420f07:	mov    eax,0xd9ae636d
  420f0c:	push   0xffffffaa
  420f0e:	sub    BYTE PTR [ebx],ch
  420f10:	lods   al,BYTE PTR ds:[esi]
  420f11:	or     DWORD PTR [ebx-0x6],eax
  420f14:	cmp    esi,ebx
  420f16:	pop    es
  420f17:	add    DWORD PTR [esi+0x70ba4d8b],eax
  420f1d:	(bad)  
  420f1f:	push   ebx
  420f20:	push   ds
  420f21:	mov    al,BYTE PTR [ebx-0x4013ccc8]
  420f27:	(bad)  
  420f28:	test   BYTE PTR es:[edi-0x66],al
  420f2c:	jnp    0x420ebd
  420f2e:	int    0x13
  420f30:	adc    al,0x25
  420f32:	push   ecx
  420f33:	fmul   QWORD PTR [esi]
  420f35:	(bad)  
  420f36:	dec    ebp
  420f37:	std    
  420f38:	adc    ecx,DWORD PTR [edi+0x5d]
  420f3b:	les    ecx,FWORD PTR [ebp-0x49]
  420f3e:	ss cmp ebp,eax
  420f41:	xchg   ecx,eax
  420f42:	lahf   
  420f43:	xchg   ebp,eax
  420f44:	push   eax
  420f45:	sub    eax,0x3de15a32
  420f4a:	rcl    ebx,1
  420f4c:	push   edi
  420f4d:	mov    esp,0x7a41313
  420f52:	aam    0x93
  420f54:	xchg   esi,eax
  420f55:	push   esi
  420f56:	popa   
  420f57:	or     DWORD PTR [ecx+ecx*1],ecx
  420f5a:	mov    bl,0x7c
  420f5c:	fidiv  WORD PTR [ebx-0x70376aff]
  420f62:	aaa    
  420f63:	adc    al,0xe9
  420f65:	pop    ebp
  420f66:	scas   eax,DWORD PTR es:[edi]
  420f67:	push   ds
  420f68:	cdq    
  420f69:	dec    esi
  420f6a:	jge    0x420fe1
  420f6c:	(bad)  
  420f6d:	cli    
  420f6e:	sub    ah,BYTE PTR [ecx+0xf18483b]
  420f74:	test   BYTE PTR [ebx],ch
  420f76:	adc    al,BYTE PTR [eax]
  420f78:	add    BYTE PTR [ebx-0x1437b],cl
  420f7e:	dec    DWORD PTR [ebx+0x558bc84d]
  420f84:	or     BYTE PTR [ebx],al
  420f86:	adc    al,0x81
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	test   ch,dl
  42104e:	jmp    0xc0f5a436
  421053:	mov    esi,0xbebec44a
  421058:	std    
  421059:	push   ss
  42105a:	jne    0x420ff0
  42105c:	ja     0x421064
  42105e:	aad    0x6e
  421060:	ficomp DWORD PTR [esp+edi*2]
  421063:	mov    dh,0x70
  421065:	lods   eax,DWORD PTR ds:[esi]
  421066:	and    BYTE PTR [edx+0x3e],dh
  421069:	es mov bl,0xdc
  42106c:	jns    0x4210e7
  42106e:	and    eax,0x5e9debaa
  421073:	mov    eax,ds:0x8b8bcb13
  421078:	imul   esi,DWORD PTR [eax+0x51],0x1562d14b
  42107f:	mov    WORD PTR [esi+0x9],?
  421082:	fild   DWORD PTR [ebx-0x17]
  421085:	stos   DWORD PTR es:[edi],eax
  421086:	dec    ebp
  421087:	lds    edx,FWORD PTR [ecx+ecx*1+0x46]
  42108b:	or     ebp,DWORD PTR [esi-0x29]
  42108e:	adc    DWORD PTR [edx],0xffffffd8
  421091:	repnz mov dh,0xd3
  421094:	mov    ch,0x8d
  421096:	ins    BYTE PTR es:[edi],dx
  421097:	and    DWORD PTR [edi+0x6ae2590a],ebx
  42109d:	mov    dl,0xb6
  42109f:	push   cs
  4210a0:	inc    ebx
  4210a1:	jns    0x42105e
  4210a3:	jnp    0x4210aa
  4210a5:	mov    esi,0x2c17ecfe
  4210aa:	and    ch,BYTE PTR [edi+0x35bd1bf8]
  4210b0:	push   ss
  4210b1:	ins    DWORD PTR es:[edi],dx
  4210b2:	gs dec ebp
  4210b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b5:	pop    edx
  4210b6:	push   0xffffffe6
  4210b8:	shl    BYTE PTR [ecx-0x723153b0],cl
  4210be:	unpcklps xmm3,xmm6
  4210c1:	add    DWORD PTR [esi*8+0x5a3f5751],ebx
  4210c8:	cmp    dl,BYTE PTR [esi+0x57]
  4210cb:	popa   
  4210cc:	dec    edx
  4210cd:	add    al,0xe4
  4210cf:	jg     0x42109c
  4210d1:	inc    esp
  4210d2:	aad    0x24
  4210d4:	xlat   BYTE PTR ds:[ebx]
  4210d5:	jne    0x4210d4
  4210d7:	ret    
  4210d8:	mov    edi,0x98d3d2ef
  4210dd:	lds    eax,FWORD PTR [edi-0x5d4b80be]
  4210e3:	fsubr  QWORD PTR [esp+eiz*4-0x5770710a]
  4210eb:	sti    
  4210ec:	scas   al,BYTE PTR es:[edi]
  4210ed:	or     al,0x92
  4210ef:	xchg   esi,eax
  4210f0:	sbb    BYTE PTR [ebp+0x65eef4a8],0x30
  4210f7:	jecxz  0x421147
  4210f9:	or     eax,0x6938bd4f
  4210fe:	push   eax
  4210ff:	imul   ebp,DWORD PTR [edi-0x1b4fd11c],0xffffffec
  421106:	sub    al,0xd6
  421108:	mov    dl,0x95
  42110a:	std    
  42110b:	mov    esp,0xcfde6924
  421110:	das    
  421111:	inc    ecx
  421112:	test   DWORD PTR [edx-0x5b],eax
  421115:	adc    ah,BYTE PTR [edi-0x21]
  421118:	fwait
  421119:	jg     0x42117f
  42111b:	push   esi
  42111c:	add    eax,esi
  42111e:	push   edx
  42111f:	ins    BYTE PTR es:[edi],dx
  421120:	mov    eax,0x803132ff
  421125:	cli    
  421126:	sbb    esp,esi
  421128:	leave  
  421129:	lahf   
  42112a:	pop    esi
  42112b:	mov    bl,0x18
  42112d:	cmp    cl,0xb5
  421130:	pop    es
  421131:	push   cs
  421132:	daa    
  421133:	push   0x2f0f9702
  421138:	inc    esi
  421139:	add    DWORD PTR [ebx+0x168785ea],ebp
  42113f:	fwait
  421140:	sbb    eax,0xb080aa4a
  421145:	int3   
  421146:	or     eax,DWORD PTR [esi+0x28772c84]
  42114c:	dec    ebx
  42114d:	out    dx,eax
  42114e:	call   0x2b4f4605
  421153:	cmp    al,BYTE PTR [ebx]
  421155:	clc    
  421156:	xor    ebx,DWORD PTR ds:0x8e81d3b
  42115c:	js     0x4211ad
  42115e:	and    al,0x77
  421160:	in     eax,dx
  421161:	call   0xe2f091f0
  421166:	pop    eax
  421167:	mov    ebp,0xde20b6e1
  42116c:	adc    eax,esi
  42116e:	dec    edx
  42116f:	xchg   esi,eax
  421170:	pushf  
  421171:	push   cs
  421172:	mov    dh,0x3
  421174:	jmp    0x4a0d471c
  421179:	imul   esp,DWORD PTR [esp+eax*2],0xffffffe1
  42117d:	into   
  42117e:	sub    al,0x88
  421180:	pop    edi
  421181:	cs push es
  421183:	xchg   edx,eax
  421184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421185:	in     al,dx
  421186:	cwde   
  421187:	pop    ebx
  421188:	xor    ebx,DWORD PTR [ecx]
  42118a:	nop
  42118b:	pusha  
  42118c:	sub    DWORD PTR [esi],ecx
  42118e:	add    ebx,DWORD PTR [ecx]
  421190:	daa    
  421191:	push   eax
  421192:	add    BYTE PTR [eax-0x33feb0d1],al
  421198:	adc    BYTE PTR [edx+0x2b885582],ah
  42119e:	dec    edi
  42119f:	sbb    al,0xd5
  4211a1:	jne    0x421215
  4211a3:	sbb    BYTE PTR [edx-0x570f0357],ch
  4211a9:	add    al,0x5d
  4211ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ac:	push   ebx
  4211ad:	pop    ebx
  4211ae:	sbb    BYTE PTR [eax-0x51],al
  4211b1:	cmp    DWORD PTR ds:0x19be3a6c,eax
  4211b7:	lds    ebx,FWORD PTR [ecx]
  4211b9:	inc    edi
  4211ba:	imul   eax
  4211bc:	jge    0x42121b
  4211be:	call   DWORD PTR [ecx+0x7c]
  4211c1:	pushf  
  4211c2:	mov    WORD PTR [edi-0x66247dcf],fs
  4211c8:	or     eax,0x9ce6eafd
  4211cd:	mov    bl,0xf0
  4211cf:	loop   0x42120b
  4211d1:	lods   eax,DWORD PTR ds:[esi]
  4211d2:	ins    DWORD PTR es:[edi],dx
  4211d3:	cmp    al,BYTE PTR [ecx]
  4211d5:	lock repnz imul ebp,DWORD PTR [edi+edi*4],0x3a
  4211db:	jg     0x421219
  4211dd:	test   BYTE PTR [ebx-0x701e1aeb],al
  4211e3:	aam    0x73
  4211e5:	mov    ecx,0xaa8f91b
  4211ea:	outs   dx,BYTE PTR ds:[esi]
  4211eb:	enter  0x9258,0xfd
  4211ef:	hlt    
  4211f0:	rol    BYTE PTR [edi+0x65],cl
  4211f3:	mov    DWORD PTR [ebp-0x4],ecx
  4211f6:	aas    
  4211f7:	repz dec edx
  4211f9:	rcr    DWORD PTR [esi],0x9e
  4211fc:	add    ecx,DWORD PTR [edx]
  4211fe:	dec    ecx
  4211ff:	out    0xfa,al
  421201:	stc    
  421202:	data16 jecxz 0x4211f8
  421205:	lods   al,BYTE PTR ds:[esi]
  421206:	jbe    0x421267
  421208:	lods   al,BYTE PTR ds:[esi]
  421209:	popa   
  42120a:	push   es
  42120b:	fs push ecx
  42120d:	xor    bh,BYTE PTR ds:0x7de8402f
  421213:	retf   0x4df8
  421216:	daa    
  421217:	retf   0x5b04
  42121a:	rcr    esp,0x86
  42121d:	iret   
  42121e:	icebp  
  42121f:	jge    0x421234
  421221:	(bad)  
  421222:	lock pushf 
  421224:	lds    ebx,FWORD PTR [ecx+0x69]
  421227:	fucomip st,st(7)
  421229:	pop    ds
  42122a:	in     al,dx
  42122b:	popa   
  42122c:	loope  0x4211d1
  42122e:	mov    ah,BYTE PTR [esi+0xf476c5]
  421234:	jmp    0x4212b5
  421236:	lock cmp ecx,DWORD PTR [edi]
  421239:	call   0x818cd60a
  42123e:	xor    BYTE PTR [ecx],bh
  421240:	inc    esi
  421241:	pop    ds
  421242:	hlt    
  421243:	push   0x15
  421245:	add    al,0x56
  421247:	call   0xb62f:0x5827b194
  42124e:	xchg   edx,eax
  42124f:	leave  
  421250:	push   ebp
  421251:	pop    edx
  421252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421254:	fwait
  421255:	adc    esp,esp
  421257:	dec    esi
  421258:	iret   
  421259:	loopne 0x421208
  42125b:	add    BYTE PTR [edi],0x20
  42125e:	fisub  DWORD PTR [ebp-0x3b]
  421261:	call   0x4244:0xfd4b9584
  421268:	imul   edi,DWORD PTR [eax],0xc92bf76
  42126e:	rcl    BYTE PTR [edx],1
  421270:	add    bh,ch
  421272:	or     dh,dl
  421274:	jmp    0x2b66e81a
  421279:	xchg   BYTE PTR [edi+0x2f],al
  42127c:	enter  0xd49f,0xd5
  421280:	popf   
  421281:	mov    edi,0xf16f9bdb
  421286:	inc    esi
  421287:	xchg   edx,eax
  421288:	pop    ecx
  421289:	mov    bh,0x39
  42128b:	sbb    DWORD PTR [bx+di-0x1d],ebx
  42128f:	push   edi
  421290:	dec    edx
  421291:	sbb    DWORD PTR [edx+0x24],esi
  421294:	mov    dl,0xc7
  421296:	inc    BYTE PTR [esi+0x2d1b96e8]
  42129c:	into   
  42129d:	lods   eax,DWORD PTR ds:[esi]
  42129e:	push   ebx
  42129f:	sub    ecx,ebx
  4212a1:	push   0x488cdd28
  4212a6:	shr    BYTE PTR [edi+0x7984c7bc],cl
  4212ac:	push   ebx
  4212ad:	loopne 0x42124e
  4212af:	jle    0x42126b
  4212b1:	add    al,0x47
  4212b3:	xchg   ebp,eax
  4212b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b5:	sub    edi,DWORD PTR [ecx]
  4212b7:	fnstenv [eax]
  4212b9:	push   ds
  4212ba:	nop
  4212bb:	adc    BYTE PTR [eax],cl
  4212bd:	cs stos DWORD PTR es:[edi],eax
  4212bf:	add    eax,0xdea276f1
  4212c4:	sti    
  4212c5:	ficom  DWORD PTR [edx-0x17b0e696]
  4212cb:	sti    
  4212cc:	xchg   esp,eax
  4212cd:	inc    ebp
  4212ce:	pop    edx
  4212cf:	nop
  4212d0:	mov    al,0xce
  4212d2:	nop
  4212d3:	test   BYTE PTR [eax],dl
  4212d5:	fistp  DWORD PTR ds:[edx]
  4212d8:	(bad)
  4212db:	pop    ss
  4212dc:	arpl   di,sp
  4212de:	push   esp
  4212df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e0:	jo     0x421361
  4212e2:	sub    eax,0x6da07302
  4212e7:	jmp    0x4212af
  4212e9:	sahf   
  4212ea:	popa   
  4212eb:	sti    
  4212ec:	retf   0x6f5
  4212ef:	cmp    dh,BYTE PTR [ebx+ecx*2+0x45]
  4212f3:	add    DWORD PTR [ecx+0x30],ebp
  4212f6:	xor    BYTE PTR [ecx-0x797d8175],dl
  4212fc:	test   DWORD PTR [ecx+0x7a],edx
  4212ff:	and    ch,cl
  421301:	repz dec edi
  421303:	mov    eax,0xe463c6a1
  421308:	dec    edx
  421309:	pop    edi
  42130a:	inc    eax
  42130b:	retf   0xf5f1
  42130e:	mov    edi,0x90397c56
  421313:	lea    ecx,[ebx]
  421315:	rcl    BYTE PTR [ecx],1
  421317:	adc    DWORD PTR [ebp+0x3dd8fec9],ebx
  42131d:	fst    QWORD PTR [edx+0x7b]
  421320:	lods   eax,DWORD PTR ds:[esi]
  421321:	mov    edi,0xbe38fe0d
  421326:	cmp    esi,DWORD PTR [edx+0x3c658cd3]
  42132c:	mov    ch,0x5c
  42132e:	or     edx,esi
  421330:	jg     0x4212e1
  421332:	adc    edi,ecx
  421334:	jnp    0x4212f9
  421336:	inc    ebx
  421337:	ret    0xce51
  42133a:	dec    ebp
  42133b:	inc    ebx
  42133c:	enter  0x56f6,0xc7
  421340:	dec    ecx
  421341:	je     0x4212fe
  421343:	fbstp  TBYTE PTR ds:[esi-0x76]
  421347:	ficomp DWORD PTR [edx]
  421349:	dec    edx
  42134a:	jmp    0x576de3d6
  42134f:	(bad)  
  421350:	sbb    al,0x15
  421352:	jecxz  0x4213c1
  421354:	rcl    ch,1
  421356:	hlt    
  421357:	ret    0x1a14
  42135a:	cmc    
  42135b:	mov    esp,0xa77c9a05
  421360:	jl     0x421329
  421362:	jmp    0x548363dd
  421367:	outs   dx,DWORD PTR ds:[esi]
  421368:	pop    edi
  421369:	push   esp
  42136a:	dec    eax
  42136b:	imul   edx
  42136d:	ret    
  42136e:	ja     0x42133b
  421370:	out    dx,al
  421371:	lods   al,BYTE PTR ds:[esi]
  421372:	cs push ss
  421374:	cmp    bx,WORD PTR [ebx]
  421377:	sti    
  421378:	mov    esi,0xc1425da4
  42137d:	test   DWORD PTR [edx-0x5843e9a8],0x6815ad11
  421387:	pop    edx
  421388:	neg    al
  42138a:	inc    ecx
  42138b:	fimul  DWORD PTR [eax+0x7f]
  42138e:	mov    al,0x4b
  421390:	xchg   esp,eax
  421391:	mov    al,0x64
  421393:	xchg   BYTE PTR [ebx],ah
  421395:	fnsave [ebx+0x42]
  421398:	mov    edx,0x414bc665
  42139d:	imul   ebx,edx,0xffffffda
  4213a0:	fwait
  4213a1:	inc    esi
  4213a2:	mov    edi,DWORD PTR [ecx+ebx*1-0x67]
  4213a6:	lds    edx,FWORD PTR ds:0xae42f816
  4213ac:	mov    eax,ds:0x2458a307
  4213b1:	inc    DWORD PTR [ebp-0xf]
  4213b4:	inc    esp
  4213b5:	(bad)  
  4213b7:	and    DWORD PTR [esi*8-0x4c7d4182],ecx
  4213be:	mov    dh,0x33
  4213c0:	or     al,0x19
  4213c2:	xchg   al,ch
  4213c4:	jmp    0x99fe8233
  4213c9:	imul   esi,DWORD PTR [edi+0xe40dbfa],0xffffff84
  4213d0:	adc    DWORD PTR [eax-0x64],esp
  4213d3:	sbb    BYTE PTR [edx+0x38],bl
  4213d6:	stos   BYTE PTR es:[edi],al
  4213d7:	fwait
  4213d8:	lds    edx,FWORD PTR [ebp-0x4]
  4213db:	mov    cl,0xe9
  4213dd:	xor    eax,0x7ad9d0a2
  4213e2:	sub    al,0xd3
  4213e4:	fdiv   st(6),st
  4213e6:	rcr    DWORD PTR [eax+ecx*2],cl
  4213e9:	pop    es
  4213ea:	cmc    
  4213eb:	imul   BYTE PTR [esi-0x2b28d4b3]
  4213f1:	xchg   edi,eax
  4213f2:	pop    edx
  4213f3:	pop    esp
  4213f4:	cmp    eax,0xb3ebf248
  4213f9:	dec    esi
  4213fa:	or     eax,edi
  4213fc:	and    al,0x8d
  4213fe:	fidiv  DWORD PTR [ecx]
  421400:	inc    edi
  421401:	jbe    0x42144e
  421403:	mov    esi,0x111a6933
  421408:	cdq    
  421409:	out    dx,al
  42140a:	inc    edx
  42140b:	mov    esi,0x21b5788f
  421410:	call   0xd784:0x8f8a9ff
  421417:	dec    edi
  421418:	jno    0x42139f
  42141a:	(bad)  
  42141b:	fmul   st(4),st
  42141d:	imul   edx,DWORD PTR ds:0x810612ef,0x2b8ae8f2
  421427:	pushf  
  421428:	mov    cl,0x3e
  42142a:	call   0x4223e1
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	dec    edi
  42147d:	clc    
  42147e:	ins    BYTE PTR es:[edi],dx
  42147f:	rcr    DWORD PTR [edi],1
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0x6d92cdbe
  42148b:	fnstenv [eax]
  42148d:	push   cs
  42148e:	aaa    
  42148f:	clc    
  421490:	mov    ?,WORD PTR [edi]
  421492:	out    0x53,al
  421494:	pop    ds
  421495:	cmp    eax,0xec498750
  42149a:	loope  0x4214d4
  42149c:	clc    
  42149d:	icebp  
  42149e:	sub    edi,DWORD PTR [edi-0x1d]
  4214a1:	cmp    al,0x90
  4214a3:	hlt    
  4214a4:	int    0xbb
  4214a6:	imul   esp,DWORD PTR [ecx],0x23907326
  4214ac:	pop    ds
  4214ad:	je     0x42143f
  4214af:	sbb    dl,ch
  4214b1:	pop    ecx
  4214b2:	mov    ch,al
  4214b4:	jae    0x421513
  4214b6:	inc    esi
  4214b7:	pop    es
  4214b8:	sbb    DWORD PTR [esi-0x16],esi
  4214bb:	loope  0x4214fd
  4214bd:	das    
  4214be:	(bad)  
  4214bf:	push   DWORD PTR [esi]
  4214c1:	cmp    al,0x8e
  4214c3:	xor    bh,ah
  4214c5:	cmp    eax,0xb6ffa55b
  4214ca:	xchg   DWORD PTR [ecx+eiz*2+0x46],edi
  4214ce:	pop    edi
  4214cf:	mov    ds:0xd043be20,eax
  4214d4:	jmp    0x118b:0x90dc5bbf
  4214db:	sti    
  4214dc:	fwait
  4214dd:	push   eax
  4214de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214df:	es ins DWORD PTR es:[edi],dx
  4214e1:	sub    DWORD PTR [eax+eiz*2+0xc],ecx
  4214e5:	cmp    al,0x63
  4214e7:	call   0xd8ba:0x95008993
  4214ee:	push   ebp
  4214ef:	call   DWORD PTR cs:[esi+0xc]
  4214f3:	imul   esi,DWORD PTR [esi+0x31ffce76],0xb4b5af38
  4214fd:	(bad)  
  4214fe:	xor    esp,DWORD PTR ds:0xb892040c
  421504:	or     BYTE PTR [edx-0x7d],cl
  421507:	call   0xaf540cdd
  42150c:	jnp    0x4214e1
  42150e:	fcomp  st(1)
  421510:	loop   0x421548
  421512:	fld    TBYTE PTR [ecx-0x76]
  421515:	mov    ah,BYTE PTR [edi-0x56]
  421518:	(bad)  
  421519:	dec    esp
  42151a:	aas    
  42151b:	mov    bl,0x25
  42151d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42151e:	ins    BYTE PTR es:[edi],dx
  42151f:	push   DWORD PTR [edi-0x3d]
  421522:	mov    es,WORD PTR [esi]
  421524:	xchg   ebp,eax
  421525:	cmp    al,0x86
  421527:	outs   dx,DWORD PTR ds:[esi]
  421528:	pop    esp
  421529:	adc    eax,0xdf72371a
  42152e:	dec    edi
  42152f:	stos   DWORD PTR es:[edi],eax
  421530:	in     al,dx
  421531:	sub    BYTE PTR [esi+0x76],0x20
  421535:	out    0xa,eax
  421537:	data16 stos BYTE PTR es:[edi],al
  421539:	or     edx,DWORD PTR [ecx+0xf]
  42153c:	lea    ebx,[edi]
  42153e:	pop    ds
  42153f:	sbb    eax,0xc39ea494
  421544:	push   esi
  421545:	add    bh,BYTE PTR [eax]
  421547:	sti    
  421548:	stc    
  421549:	ret    
  42154a:	add    ch,cl
  42154c:	fidiv  DWORD PTR [edx]
  42154e:	test   DWORD PTR [edx+ebx*1+0xca3099a],esi
  421555:	outs   dx,BYTE PTR ds:[esi]
  421556:	shr    DWORD PTR [eax-0x4f],1
  421559:	push   DWORD PTR [edi-0x13]
  42155c:	out    0x3e,eax
  42155e:	adc    BYTE PTR [esi+esi*8],dh
  421561:	xor    eax,0x75dd04c1
  421566:	or     DWORD PTR [ebx+0x62],edx
  421569:	or     DWORD PTR [eax-0x4456ca19],esi
  42156f:	sub    eax,0xf32b0810
  421574:	push   0x39
  421576:	xchg   DWORD PTR [ebp+0x65464a6a],ebp
  42157c:	adc    ch,BYTE PTR [edx]
  42157e:	addr16 cld 
  421580:	adc    eax,0xe9dd0936
  421585:	mov    ah,0xeb
  421587:	mov    edx,0xb1b7bdb1
  42158c:	cli    
  42158d:	stos   BYTE PTR es:[edi],al
  42158e:	int    0x15
  421590:	push   eax
  421591:	mov    cl,0x90
  421593:	cli    
  421594:	ins    DWORD PTR es:[edi],dx
  421595:	and    DWORD PTR [eax+ecx*4-0xf],esi
  421599:	cld    
  42159a:	mov    bh,0xe9
  42159c:	add    DWORD PTR [edi],ebp
  42159e:	mov    al,ds:0xc109318b
  4215a3:	loop   0x42155f
  4215a5:	jne    0x421549
  4215a7:	push   esi
  4215a8:	lea    edx,[esi]
  4215aa:	sub    cl,dl
  4215ac:	fwait
  4215ad:	dec    esp
  4215ae:	fimul  WORD PTR [edx+0x42d06ce9]
  4215b4:	leave  
  4215b5:	inc    esi
  4215b6:	add    al,0x12
  4215b8:	pusha  
  4215b9:	pop    ecx
  4215ba:	shl    cl,1
  4215bc:	fidivr WORD PTR [ebx]
  4215be:	rcl    DWORD PTR [edi+0x5d5d8548],0xf2
  4215c5:	pop    esp
  4215c6:	dec    edx
  4215c7:	test   BYTE PTR [edi],bh
  4215c9:	and    al,0xdc
  4215cb:	mov    bl,0xcd
  4215cd:	call   0xab05:0x63ce1c6b
  4215d4:	fwait
  4215d5:	add    ebx,DWORD PTR [edx+0x26]
  4215d8:	push   0xa
  4215da:	cld    
  4215db:	mov    dh,0xb0
  4215dd:	mov    edx,0xe90a60b8
  4215e2:	(bad)  
  4215e3:	je     0x421631
  4215e5:	ins    DWORD PTR es:[edi],dx
  4215e6:	sbb    cl,BYTE PTR [esp+ebx*8]
  4215e9:	aaa    
  4215ea:	xchg   edi,eax
  4215eb:	ret    
  4215ec:	in     al,dx
  4215ed:	pop    edx
  4215ee:	jo     0x4215a3
  4215f0:	push   ecx
  4215f1:	loopne 0x421637
  4215f3:	push   0x1054ebd0
  4215f8:	jp     0x421615
  4215fa:	or     DWORD PTR [ebx],0xdce69189
  421600:	pop    eax
  421601:	sub    esp,ebx
  421603:	xor    eax,ebx
  421605:	outs   dx,DWORD PTR ds:[esi]
  421606:	mov    ah,0xbc
  421608:	sti    
  421609:	ins    BYTE PTR es:[edi],dx
  42160a:	jb     0x42158c
  42160c:	inc    eax
  42160d:	scas   eax,DWORD PTR es:[edi]
  42160e:	adc    dl,BYTE PTR [ecx-0x66]
  421611:	lea    esp,[edx-0x3e]
  421614:	sub    eax,0x60d4bc3f
  421619:	jmp    0xe377:0x4ba0a4ce
  421620:	mov    ch,0x8b
  421622:	xor    ah,BYTE PTR [eax]
  421624:	jle    0x421627
  421626:	add    eax,0x12e7f8c1
  42162b:	push   esp
  42162c:	mov    ebx,0xb3099765
  421631:	add    esi,DWORD PTR [edi]
  421633:	add    edi,DWORD PTR [ebx-0x51]
  421636:	xor    eax,0xaaebc944
  42163b:	jnp    0x42165f
  42163d:	std    
  42163e:	test   DWORD PTR [esi+0x3b9861b4],esp
  421644:	xchg   DWORD PTR [edx+0x47],esi
  421647:	das    
  421648:	xor    BYTE PTR [ebx],al
  42164a:	push   eax
  42164b:	fdivr  QWORD PTR [ecx]
  42164e:	mov    fs,WORD PTR [edi-0x6d66871]
  421654:	pop    ss
  421655:	mov    ecx,0x28f909a9
  42165a:	xor    BYTE PTR ds:0xbd4f3fcf,0x4a
  421661:	js     0x4216ae
  421663:	clc    
  421664:	(bad)  
  421665:	int    0x38
  421667:	pop    ebx
  421668:	inc    ebx
  421669:	mov    ebp,0xc467bcbc
  42166e:	(bad)  
  42166f:	in     eax,dx
  421670:	mov    WORD PTR [edx-0x46],?
  421673:	dec    esp
  421674:	addr16 xchg esp,eax
  421676:	dec    eax
  421677:	pushf  
  421678:	or     eax,0xf960484
  42167d:	inc    esi
  42167e:	iret   
  42167f:	push   cs
  421680:	(bad)  
  421681:	jnp    0x4216a4
  421683:	xchg   ebp,eax
  421684:	ss adc al,0xe9
  421687:	mov    bl,dl
  421689:	mov    ds:0xf34aa42f,eax
  42168e:	push   0x1f
  421690:	test   BYTE PTR [ebp-0x242ac536],dh
  421696:	adc    DWORD PTR fs:[ecx-0x1c],eax
  42169a:	fldcw  WORD PTR [ebx+0xb]
  42169d:	pusha  
  42169e:	xor    BYTE PTR [eax-0x57],bl
  4216a1:	cmp    BYTE PTR [esi+ebp*2],bl
  4216a4:	mov    dl,0x32
  4216a6:	fisubr WORD PTR [esi]
  4216a8:	sbb    al,0x78
  4216aa:	(bad)  
  4216ac:	sub    al,0x6a
  4216ae:	rcr    DWORD PTR [eax-0x4d],cl
  4216b1:	dec    eax
  4216b2:	or     bl,BYTE PTR [edx+0x46]
  4216b5:	mov    ah,BYTE PTR [edx+0x7]
  4216b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216b9:	pop    ebp
  4216ba:	sub    ebp,DWORD PTR [edi]
  4216bc:	inc    ecx
  4216bd:	lds    ecx,FWORD PTR [edx]
  4216bf:	ins    DWORD PTR es:[edi],dx
  4216c0:	mov    eax,ds:0x65afa668
  4216c5:	inc    edx
  4216c6:	enter  0x6808,0x37
  4216ca:	pop    ss
  4216cb:	loopne 0x421686
  4216cd:	jne    0x421703
  4216cf:	fld    DWORD PTR gs:[edi+ebx*4]
  4216d3:	mov    ebx,0xbe859e51
  4216d8:	pushf  
  4216d9:	pop    esi
  4216da:	add    esi,ebp
  4216dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216dd:	inc    ebp
  4216de:	jno    0x4216b5
  4216e0:	jge    0x4216d5
  4216e2:	and    DWORD PTR [ecx-0x38],edi
  4216e5:	adc    BYTE PTR [edi-0x57],0xd1
  4216e9:	in     eax,0x23
  4216eb:	imul   edi,DWORD PTR ds:0xaf1009fe,0xc66d2b84
  4216f5:	aam    0x9f
  4216f7:	xor    BYTE PTR [eax],dh
  4216f9:	and    DWORD PTR [edi-0x15],edi
  4216fc:	sahf   
  4216fd:	dec    edx
  4216fe:	call   0x3ad71f9a
  421703:	mov    esp,0x6b07aa1f
  421708:	mov    ch,0xb3
  42170a:	cmp    eax,0xfe5ee56b
  42170f:	sti    
  421710:	scas   al,BYTE PTR es:[edi]
  421711:	xor    BYTE PTR [esi+edx*8+0x61],ah
  421715:	mov    ds:0x465375b8,al
  42171a:	jl     0x4216b8
  42171c:	xchg   DWORD PTR [edx+0x42],ebx
  42171f:	icebp  
  421720:	call   0xbfcd5978
  421725:	stc    
  421726:	rcr    ebx,0x75
  421729:	cmp    bl,dh
  42172b:	loopne 0x42179a
  42172d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42172e:	dec    edi
  42172f:	mov    ebp,0x6063f7da
  421734:	popa   
  421735:	push   ds
  421736:	shr    BYTE PTR [esp+ecx*8+0x229447cc],0x2f
  42173e:	hlt    
  42173f:	inc    ebx
  421740:	jmp    0x4857:0x2eebb6b4
  421747:	mov    DWORD PTR [edx-0x26],ecx
  42174a:	cdq    
  42174b:	jne    0x4216ea
  42174d:	mov    ds:0x389306c7,al
  421752:	mov    ds:0xba62af12,eax
  421757:	mov    ds:0xc6bc2ec6,al
  42175c:	sbb    ebp,DWORD PTR [ecx]
  42175e:	retf   0x9cb1
  421761:	aas    
  421762:	or     bh,BYTE PTR [eax+0x525cdd77]
  421768:	push   esp
  421769:	das    
  42176a:	or     eax,0xabcb9e80
  42176f:	lock fwait
  421771:	std    
  421772:	ror    DWORD PTR [esi+0x576cf0f1],1
  421778:	dec    esi
  421779:	cmp    al,0xc6
  42177b:	mov    al,0xba
  42177d:	int    0x8c
  42177f:	retf   
  421780:	push   0xffffff95
  421782:	xor    BYTE PTR [esi-0x28],al
  421785:	cdq    
  421786:	lock add DWORD PTR [ebp+0x7a],ebx
  42178a:	sub    DWORD PTR [ecx-0x62058163],ebp
  421790:	jp     0x4217d7
  421792:	cmp    DWORD PTR [ebp-0x5fcdad95],edx
  421798:	ds aad 0x2a
  42179b:	sub    al,0xd7
  42179d:	std    
  42179e:	or     eax,0x73f5cec6
  4217a3:	test   DWORD PTR [ecx+0x44],ecx
  4217a6:	xchg   BYTE PTR [esi+0xc4421f5],al
  4217ac:	loope  0x4217a0
  4217ae:	push   edx
  4217af:	mov    esp,0x92d4bf92
  4217b4:	xor    eax,0x6a1d2e08
  4217b9:	adc    eax,DWORD PTR [ebx+eax*2]
  4217bc:	pop    es
  4217bd:	inc    ebx
  4217be:	add    al,0xca
  4217c0:	sahf   
  4217c1:	push   eax
  4217c2:	aaa    
  4217c3:	pop    esp
  4217c4:	fild   WORD PTR ds:0x76009356
  4217ca:	push   edi
  4217cb:	mov    dl,0xd9
  4217cd:	xchg   esi,eax
  4217ce:	mov    cl,0x1b
  4217d0:	sbb    esp,DWORD PTR [esi+0x2dd632d0]
  4217d6:	push   ebp
  4217d7:	aam    0xdd
  4217d9:	fbstp  TBYTE PTR [ecx+0x34]
  4217dc:	fisttp WORD PTR [esp+eax*1+0x15c2dda0]
  4217e3:	mov    DWORD PTR [esi+0x1b6c8991],eax
  4217e9:	shl    DWORD PTR [ecx-0x3cc4c62d],cl
  4217ef:	lds    ebp,FWORD PTR [edx]
  4217f1:	mov    ebp,0x79927302
  4217f6:	jecxz  0x421805
  4217f8:	repnz ins DWORD PTR es:[edi],dx
  4217fa:	jb     0x421841
  4217fc:	iret   
  4217fd:	dec    eax
  4217fe:	xchg   edx,eax
  4217ff:	cmp    BYTE PTR [ebx-0xcf345d4],0xd8
  421806:	inc    ebx
  421807:	adc    ah,BYTE PTR [edx+0x40]
  42180a:	add    al,0x8
  42180c:	inc    edi
  42180d:	add    al,0x2
  42180f:	das    
  421810:	dec    eax
  421811:	push   ds
  421812:	rcr    DWORD PTR [ebx],0xdb
  421815:	adc    DWORD PTR [ebx-0x1b],0xffffff9f
  421819:	or     ecx,esi
  42181b:	pop    ecx
  42181c:	adc    DWORD PTR [ebp+0xba208b5],0x13905761
  421826:	jl     0x421803
  421828:	or     ah,dh
  42182a:	jne    0x421893
  42182c:	adc    cl,BYTE PTR [eax]
  42182e:	inc    esi
  42182f:	mov    ebp,DWORD PTR [ebp-0x6]
  421832:	add    al,0xca
  421834:	aas    
  421835:	jns    0x421840
  421837:	or     bh,bh
  421839:	pop    ss
  42183a:	mov    edi,0xb5bb1105
  42183f:	mov    bl,0xfe
  421841:	jns    0x42184e
  421843:	cmp    BYTE PTR [ecx],0xb0
  421846:	idiv   DWORD PTR [ebx+0x39da8d15]
  42184c:	sub    al,0x19
  42184e:	adc    ah,BYTE PTR [ebx]
  421850:	pop    edx
  421851:	loop   0x4217de
  421853:	xchg   ebp,eax
  421854:	adc    al,0xfe
  421856:	(bad)  
  421857:	push   DWORD PTR ds:0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223e1
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223e1
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	cmp    BYTE PTR [ebx-0x3e5361a2],bl
  4218d4:	sar    BYTE PTR [esi-0x41413bb6],0x6f
  4218db:	dec    DWORD PTR [ebx-0x77]
  4218de:	nop
  4218df:	add    al,0x49
  4218e1:	sub    eax,0x4722e253
  4218e6:	js     0x4218f0
  4218e8:	inc    esi
  4218e9:	push   ebp
  4218ea:	retf   
  4218eb:	mov    ds:0xe9dd59be,al
  4218f0:	les    ebx,FWORD PTR [edx-0x7b]
  4218f3:	lods   al,BYTE PTR ds:[esi]
  4218f4:	mov    al,ds:0xc1f5334e
  4218f9:	pusha  
  4218fa:	jb     0x4218b0
  4218fc:	call   0x1c380a56
  421901:	sub    eax,0x756e80de
  421906:	jbe    0x4218aa
  421908:	xor    ch,BYTE PTR [edi+eax*1]
  42190b:	inc    edi
  42190c:	lods   eax,DWORD PTR ds:[esi]
  42190d:	aam    0x78
  42190f:	dec    edi
  421910:	scas   eax,DWORD PTR es:[edi]
  421911:	into   
  421912:	scas   al,BYTE PTR es:[edi]
  421913:	sbb    DWORD PTR [eax],ebx
  421915:	xchg   ebx,eax
  421916:	retf   0x8dfe
  421919:	pop    edi
  42191a:	cdq    
  42191b:	pop    es
  42191c:	int    0x61
  42191e:	not    DWORD PTR [ebp+0x5e]
  421921:	add    edi,DWORD PTR [edx+edx*8-0x74f1f2c9]
  421928:	in     eax,0x20
  42192a:	cmp    eax,0x36326a43
  42192f:	out    0x42,al
  421931:	and    al,0x20
  421933:	fldenv [edx]
  421935:	add    esi,edx
  421937:	test   al,0x5e
  421939:	add    dl,BYTE PTR [esi+0x45]
  42193c:	or     al,0xf1
  42193e:	mov    eax,ds:0x2b6e12c1
  421943:	mov    cl,0x56
  421945:	push   edi
  421946:	pop    ebx
  421947:	call   0x9efc:0x4d1cab5b
  42194e:	ins    DWORD PTR es:[edi],dx
  42194f:	lods   eax,DWORD PTR ds:[esi]
  421950:	sub    al,0xd7
  421952:	mov    dl,0xc8
  421954:	ret    0x81f0
  421957:	or     al,0x6d
  421959:	(bad)  
  42195a:	mov    BYTE PTR [bp+si+0x69c],ah
  42195f:	inc    ebp
  421960:	fsubr  st,st(4)
  421962:	stos   DWORD PTR es:[edi],eax
  421963:	dec    esi
  421964:	jnp    0x4219b6
  421966:	xbegin 0xa6f23682
  42196c:	fstp   TBYTE PTR [edi-0x520af641]
  421972:	lahf   
  421973:	je     0x4219e1
  421975:	or     ecx,DWORD PTR [ecx]
  421977:	stos   DWORD PTR es:[edi],eax
  421978:	pop    ebx
  421979:	jp     0x4219bf
  42197b:	sub    BYTE PTR [ebx-0x41],0x5a
  42197f:	inc    esp
  421980:	and    DWORD PTR [ebx-0x48],ebx
  421983:	lahf   
  421984:	into   
  421985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421986:	mov    BYTE PTR [esi+0x25b7802f],bl
  42198c:	pop    ecx
  42198d:	pop    ds
  42198e:	inc    edx
  42198f:	inc    esi
  421990:	sbb    DWORD PTR [edi-0x7170b0],edi
  421996:	mov    dl,0xd2
  421998:	inc    edx
  421999:	cmp    eax,0xaa6dce6a
  42199e:	retf   0xb4e9
  4219a1:	xor    eax,0xed51bb99
  4219a6:	(bad)  
  4219a7:	gs mov esp,0x7e34c341
  4219ad:	xchg   edi,eax
  4219ae:	rol    BYTE PTR [edi+0x3614f8d],0x6
  4219b5:	sub    eax,0xaac4bb73
  4219ba:	add    eax,0xc1fbbe49
  4219bf:	sub    DWORD PTR [eax+0x28b9240c],0x797c35c5
  4219c9:	jmp    0x2a4b833f
  4219ce:	push   es
  4219cf:	fist   DWORD PTR [esi-0x606eb4dc]
  4219d5:	dec    esi
  4219d6:	add    al,0x6
  4219d8:	inc    ecx
  4219d9:	shl    BYTE PTR [edi],0x6e
  4219dc:	cmp    edx,DWORD PTR [eax+0x7699791c]
  4219e2:	mov    dl,0xf8
  4219e4:	nop
  4219e5:	popf   
  4219e6:	fucompp 
  4219e8:	fwait
  4219e9:	test   eax,0xdfc0fab9
  4219ee:	push   eax
  4219ef:	xchg   ebx,eax
  4219f0:	pop    ss
  4219f1:	or     BYTE PTR [edi*2-0x76c9d0d4],ch
  4219f8:	sbb    BYTE PTR [ebp-0x6c44f17f],bh
  4219fe:	stos   BYTE PTR es:[edi],al
  4219ff:	mov    ebx,0xb8512864
  421a04:	mov    ds:0xc18a29d0,eax
  421a09:	shl    DWORD PTR [edi+eax*4-0x52],1
  421a0d:	or     al,0x31
  421a0f:	ds ret 
  421a11:	out    dx,al
  421a12:	dec    ebx
  421a13:	and    al,0x6e
  421a15:	ficom  DWORD PTR [eax]
  421a17:	and    ebp,edx
  421a19:	jns    0x4219fd
  421a1b:	test   DWORD PTR [ebx-0x294d8da1],0x874bb2aa
  421a25:	test   al,0xe5
  421a28:	mov    ds:0x7ff78090,al
  421a2d:	dec    edx
  421a2e:	xor    al,0x33
  421a30:	and    BYTE PTR [edi],dl
  421a32:	mov    bh,0x17
  421a34:	or     DWORD PTR [edx],esi
  421a36:	sub    al,0x4e
  421a38:	dec    esp
  421a39:	adc    eax,0xf1ce47a2
  421a3e:	adc    BYTE PTR [ebp-0x38],bh
  421a41:	push   esi
  421a42:	mov    esp,0x759c9d0f
  421a47:	and    BYTE PTR [esi-0x50],ch
  421a4a:	setle  BYTE PTR [eax+0x1fa77f9]
  421a51:	rcl    al,cl
  421a53:	inc    ebx
  421a54:	inc    esi
  421a55:	(bad)
  421a58:	push   esp
  421a59:	arpl   WORD PTR [ecx-0x5b19ccfb],bx
  421a5f:	pop    esp
  421a60:	jmp    0xfb198648
  421a65:	push   ss
  421a66:	sub    DWORD PTR [ecx],0xc338690f
  421a6c:	(bad)  
  421a6d:	bound  esp,QWORD PTR [esi]
  421a6f:	push   cs
  421a70:	out    0x3b,eax
  421a72:	div    BYTE PTR [ebx+edx*8-0x30]
  421a76:	cmp    DWORD PTR [esi+0x6a],esi
  421a79:	xchg   ebx,eax
  421a7a:	leave  
  421a7b:	mov    BYTE PTR [ebx+edi*2+0x32],0x17
  421a80:	mov    ds:0xd7ccbd77,al
  421a85:	repnz icebp 
  421a87:	jp     0x421aef
  421a89:	jmp    0x72e3:0x29d59ec3
  421a90:	shl    DWORD PTR [eax+esi*2-0x74a280cc],0xfc
  421a98:	mov    al,ds:0xf56d0cb5
  421a9d:	dec    eax
  421a9e:	mul    DWORD PTR [ebp+0x19]
  421aa1:	adc    esp,esp
  421aa3:	(bad)  
  421aa4:	sbb    edi,DWORD PTR ds:0x23edc331
  421aaa:	rcl    BYTE PTR [edx],cl
  421aac:	aad    0xd9
  421aae:	mov    dl,0x24
  421ab0:	imul   edi,DWORD PTR [edi-0xefbfa8e],0x50
  421ab7:	add    BYTE PTR [ecx-0x69],dl
  421aba:	cmp    DWORD PTR [esi+eax*1],edx
  421abd:	mov    ah,0x2
  421abf:	cmp    DWORD PTR es:[ecx+0x21fd2553],esi
  421ac6:	pop    eax
  421ac7:	xlat   BYTE PTR ds:[ebx]
  421ac8:	lock mov ds:0x2591d434,al
  421ace:	pop    edx
  421acf:	inc    ebp
  421ad0:	push   cs
  421ad1:	out    dx,al
  421ad2:	xchg   edi,eax
  421ad3:	sub    DWORD PTR [ecx+0x5c94f55e],ebx
  421ad9:	into   
  421ada:	mov    dl,0xad
  421adc:	daa    
  421add:	aas    
  421ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421adf:	and    ch,ah
  421ae1:	bound  eax,QWORD PTR [esi-0x72]
  421ae4:	clc    
  421ae5:	xor    eax,0x522569c
  421aea:	mov    al,0xbc
  421aec:	icebp  
  421aed:	inc    ecx
  421aee:	fwait
  421aef:	adc    BYTE PTR es:[ecx-0x65fd6041],cl
  421af6:	cwde   
  421af7:	mov    al,0x29
  421af9:	xlat   BYTE PTR ds:[ebx]
  421afa:	push   es
  421afb:	aaa    
  421afc:	fbld   TBYTE PTR [eax+esi*4-0x130c7545]
  421b03:	retf   0x8311
  421b06:	xchg   ebx,eax
  421b07:	add    edi,edi
  421b09:	jb     0x421b3e
  421b0b:	jp     0x421af1
  421b0d:	push   esi
  421b0e:	sbb    BYTE PTR [esi],al
  421b10:	jnp    0x421b04
  421b12:	es push ecx
  421b14:	or     eax,0x2a1a40ef
  421b19:	repnz test BYTE PTR [ebp-0x64b6da3f],bh
  421b20:	xlat   BYTE PTR ds:[ebx]
  421b21:	and    al,0xe8
  421b23:	xor    bl,BYTE PTR [ecx-0x54]
  421b26:	mov    esp,0x4db058b4
  421b2b:	dec    ebx
  421b2c:	mov    fs,WORD PTR [edx+0x4ba7b693]
  421b32:	dec    ecx
  421b33:	or     al,0x55
  421b35:	add    eax,0x93002ed9
  421b3a:	sub    eax,0xdbb00690
  421b3f:	lock and eax,0xbf5ad1cb
  421b45:	aas    
  421b46:	mov    bh,0xf7
  421b48:	test   DWORD PTR [eax],eax
  421b4a:	jmp    0x421b8d
  421b4c:	cmp    eax,0xa4333c83
  421b51:	jmp    0x421b4e
  421b53:	scas   al,BYTE PTR es:[edi]
  421b54:	mov    ds:0xcb3a25f4,al
  421b59:	inc    eax
  421b5a:	js     0x421ae1
  421b5c:	inc    ebp
  421b5d:	cwde   
  421b5e:	xchg   ebp,eax
  421b5f:	xchg   ecx,eax
  421b61:	adc    dl,bh
  421b63:	(bad)  
  421b64:	pop    eax
  421b65:	(bad)  
  421b66:	aad    0x64
  421b68:	sar    DWORD PTR ds:0x8c243f18,0xdb
  421b6f:	mov    ebx,esp
  421b71:	outs   dx,BYTE PTR cs:[esi]
  421b73:	in     eax,dx
  421b74:	sub    eax,0x573d3dac
  421b79:	and    al,0xc2
  421b7b:	cmp    al,0xfa
  421b7d:	mov    esi,0x62eba0bb
  421b82:	mov    dl,0x58
  421b84:	sar    DWORD PTR [ebx],0x56
  421b87:	(bad)  
  421b89:	mov    ds,WORD PTR [ebx]
  421b8b:	and    al,0xba
  421b8d:	jmp    0x923d0052
  421b92:	cmp    BYTE PTR [ebx+ebp*8],dl
  421b95:	shl    DWORD PTR [esi-0x51],cl
  421b98:	daa    
  421b99:	inc    esp
  421b9a:	stos   DWORD PTR es:[edi],eax
  421b9b:	enter  0xf648,0xb9
  421b9f:	or     al,0xbd
  421ba1:	pop    ss
  421ba2:	imul   ecx,edi,0x607d5b73
  421ba8:	cld    
  421ba9:	xor    al,0xb1
  421bab:	aas    
  421bac:	nop
  421bad:	outs   dx,BYTE PTR ds:[esi]
  421bae:	addr16 and eax,0x667c8440
  421bb4:	dec    eax
  421bb5:	arpl   WORD PTR [edi+0x62fe4f83],cx
  421bbb:	out    dx,al
  421bbc:	sbb    al,0xda
  421bbe:	jle    0x421b7d
  421bc0:	xchg   esp,eax
  421bc1:	jecxz  0x421b83
  421bc3:	xor    al,0x97
  421bc5:	xor    eax,0xd68b17b9
  421bca:	sub    dl,BYTE PTR [edi+0x47]
  421bcd:	ins    DWORD PTR es:[edi],dx
  421bce:	aam    0x74
  421bd0:	lahf   
  421bd1:	or     eax,0x91ec39c4
  421bd6:	or     eax,0x1ab9db28
  421bdb:	mov    edi,0xb76e63ff
  421be0:	dec    esp
  421be1:	jg     0x421bfb
  421be3:	outs   dx,DWORD PTR ds:[esi]
  421be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be5:	and    eax,0x322e2187
  421bea:	xchg   ebp,eax
  421beb:	loop   0x421c46
  421bed:	mov    edi,cs
  421bef:	or     bh,BYTE PTR [ebp+0x79]
  421bf2:	push   ecx
  421bf3:	mov    ds,esp
  421bf5:	dec    eax
  421bf6:	mov    DWORD PTR [ecx+0x51],ebx
  421bf9:	sub    eax,0xfc0e9ada
  421bfe:	ins    BYTE PTR es:[edi],dx
  421bff:	dec    eax
  421c00:	sub    DWORD PTR [edx+0x69],esp
  421c03:	cdq    
  421c04:	mov    ?,WORD PTR gs:[ebx+0x21]
  421c08:	jl     0x421c3a
  421c0a:	sbb    ah,BYTE PTR [ebp+0x1dc9e22a]
  421c10:	mov    ah,0x9c
  421c12:	(bad)  
  421c13:	pop    ss
  421c14:	mov    ch,0x32
  421c16:	pop    esp
  421c17:	jg     0x421bdf
  421c19:	xor    eax,DWORD PTR [esi+0x23de8c63]
  421c1f:	sbb    eax,DWORD PTR [esp+esi*1-0x3b]
  421c23:	xlat   BYTE PTR ds:[ebx]
  421c24:	in     al,0xdd
  421c26:	xchg   esi,eax
  421c27:	jecxz  0x421bb0
  421c29:	ja     0x421bf5
  421c2b:	mov    cl,0x58
  421c2d:	jg     0x421ca3
  421c2f:	mov    ch,0x6
  421c31:	adc    edi,esp
  421c33:	lods   eax,DWORD PTR ds:[esi]
  421c34:	add    al,0x3f
  421c36:	inc    ecx
  421c37:	in     eax,dx
  421c38:	dec    ebp
  421c39:	ja     0x421c21
  421c3b:	test   BYTE PTR [esi+0x26],bh
  421c3e:	jno    0x421c4e
  421c40:	cmp    al,0x39
  421c42:	or     esp,DWORD PTR [eax]
  421c44:	fisubr DWORD PTR [ebp-0x6a]
  421c47:	mov    ds:0x5bdf1a6e,al
  421c4c:	push   0x9beb7740
  421c51:	push   0xfffffff7
  421c53:	pop    ss
  421c54:	or     cl,bh
  421c56:	shl    BYTE PTR [edi-0x38d1cb8a],1
  421c5c:	cs aas 
  421c5e:	or     ah,BYTE PTR [ecx-0xd]
  421c61:	adc    eax,DWORD PTR [edx]
  421c63:	push   cs
  421c64:	mov    dh,0xe4
  421c66:	add    edx,esp
  421c68:	dec    edi
  421c69:	cmp    eax,0xb6a1b18e
  421c6e:	aad    0xda
  421c70:	jae    0x421c1d
  421c72:	mov    ds:0x16749f63,al
  421c77:	retf   0xc5fc
  421c7a:	test   DWORD PTR [ecx-0x5ede97bc],esp
  421c80:	mov    BYTE PTR [ecx+0x21],cl
  421c83:	in     eax,dx
  421c84:	mov    esi,ds
  421c86:	(bad)  [bp+di-0x3e9a]
  421c8b:	jne    0x421c24
  421c8d:	aam    0xf7
  421c8f:	mov    bl,0x8b
  421c91:	mov    es,WORD PTR [esi-0x4cae15a1]
  421c97:	aam    0xf8
  421c99:	fistp  DWORD PTR [edx+edi*4+0x2be0a87d]
  421ca0:	add    DWORD PTR [eax-0x50],ecx
  421ca3:	std    
  421ca4:	add    esi,DWORD PTR [ebp-0x1f8]
  421caa:	mov    DWORD PTR [ebp-0x1f8],esi
  421cb0:	mov    eax,DWORD PTR [ebp-0x1e8]
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e12
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421dc8
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x15dc90cd
  421d18:	ins    BYTE PTR es:[edi],dx
  421d19:	sar    DWORD PTR [eax],1
  421d1b:	leave  
  421d1c:	sar    BYTE PTR [esi-0x414141fe],0xdd
  421d23:	sbb    esi,DWORD PTR [ecx-0x27]
  421d26:	hlt    
  421d27:	and    BYTE PTR ds:0x967f14b2,dl
  421d2d:	or     DWORD PTR [ecx-0x25711fda],0x7d26ebd3
  421d37:	inc    cx
  421d39:	add    BYTE PTR [ecx+ebp*8],dl
  421d3c:	jle    0x421cf8
  421d3e:	popf   
  421d3f:	test   DWORD PTR [ebx],ecx
  421d41:	push   es
  421d42:	jle    0x421d6a
  421d44:	data16 jo 0x421cf7
  421d47:	mov    dl,0x47
  421d49:	and    eax,0xb31145c5
  421d4e:	int    0x75
  421d50:	fcomp  QWORD PTR [ebp-0x3]
  421d53:	mov    BYTE PTR [edi+0x74],al
  421d56:	xor    eax,edx
  421d58:	adc    ebp,ebx
  421d5a:	mov    BYTE PTR ds:0xb1d69e69,bl
  421d60:	lock mov bl,BYTE PTR [eax]
  421d63:	sbb    DWORD PTR [ecx],eax
  421d65:	sahf   
  421d66:	jno    0x421d76
  421d68:	addr16 mov bh,0x35
  421d6b:	xor    ah,BYTE PTR [edi]
  421d6d:	push   esp
  421d6e:	scas   eax,DWORD PTR es:[edi]
  421d6f:	mov    ebp,0x18c09435
  421d74:	push   ebx
  421d75:	es mov edi,0x6acf3d90
  421d7b:	or     DWORD PTR [esp+ebx*1],0xebb61386
  421d82:	fld    QWORD PTR [edx]
  421d84:	sub    eax,DWORD PTR [ebx+esi*2]
  421d87:	sbb    dh,0x32
  421d8a:	mov    cl,0x6b
  421d8c:	mov    eax,ds:0x6616d642
  421d91:	sub    BYTE PTR ds:0x25cf490a,0xd9
  421d98:	mov    edx,0xe4889089
  421d9d:	jne    0x421e10
  421d9f:	cld    
  421da0:	int    0xec
  421da2:	retf   
  421da3:	shl    BYTE PTR [esi-0x5d],1
  421da6:	imul   edx,DWORD PTR [eax+eiz*8],0xffffffec
  421daa:	jae    0x421d57
  421dac:	std    
  421dad:	loop   0x421dd7
  421daf:	inc    esi
  421db0:	js     0x421e18
  421db2:	lods   eax,DWORD PTR ds:[esi]
  421db3:	and    BYTE PTR ds:0x1faf0d2d,0xe7
  421dba:	pop    edx
  421dbb:	mov    BYTE PTR [edx-0x50],bh
  421dbe:	cld    
  421dbf:	dec    edx
  421dc0:	cwde   
  421dc1:	lods   eax,DWORD PTR ds:[esi]
  421dc2:	or     BYTE PTR [ebp+0x1e],0x77
  421dc6:	mov    bh,0xf5
  421dc8:	mov    eax,DWORD PTR [ebp-0x1f8]
  421dce:	mov    ecx,DWORD PTR [ebp-0x20c]
  421dd4:	movzx  eax,WORD PTR [ecx+eax*4]
  421dd8:	xor    eax,0xa59b
  421ddd:	movzx  eax,ax
  421de0:	sar    eax,1
  421de2:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421de8:	mov    edx,DWORD PTR [ebp-0x20c]
  421dee:	movzx  ecx,WORD PTR [edx+ecx*4]
  421df2:	xor    ecx,0xa59b
  421df8:	movzx  ecx,cx
  421dfb:	shl    ecx,0xf
  421dfe:	or     eax,ecx
  421e00:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e06:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e0d:	jmp    0x421879
  421e12:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e18:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e1e:	xor    eax,0xcb79b576
  421e23:	xor    edx,0x9c2b8ae8
  421e29:	mov    cl,0x2
  421e2b:	call   0x408bb8
  421e30:	mov    esi,eax
  421e32:	mov    edi,edx
  421e34:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e3a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e40:	xor    eax,0xcb79b576
  421e45:	xor    edx,0x9c2b8ae8
  421e4b:	mov    cl,0x3e
  421e4d:	call   0x4223e1
  421e52:	or     esi,eax
  421e54:	or     edi,edx
  421e56:	mov    DWORD PTR [ebp-0x1e4],esi
  421e5c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e62:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e68:	xor    eax,0xcb79b576
  421e6d:	xor    edx,0x9c2b8ae8
  421e73:	mov    cl,0x2
  421e75:	call   0x408bb8
  421e7a:	mov    esi,eax
  421e7c:	mov    edi,edx
  421e7e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e84:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e8a:	xor    eax,0xcb79b576
  421e8f:	xor    edx,0x9c2b8ae8
  421e95:	mov    cl,0x3e
  421e97:	call   0x4223e1
  421e9c:	or     esi,eax
  421e9e:	or     edi,edx
  421ea0:	mov    DWORD PTR [ebp-0x23c],esi
  421ea6:	mov    DWORD PTR [ebp-0x238],edi
  421eac:	mov    eax,DWORD PTR [ebp-0x23c]
  421eb2:	or     eax,DWORD PTR [ebp-0x238]
  421eb8:	je     0x422118
  421ebe:	lea    eax,[ebp-0x204]
  421ec4:	mov    DWORD PTR [ebp-0x208],eax
  421eca:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ed0:	xor    edx,edx
  421ed2:	mov    cl,0x2
  421ed4:	call   0x4223e1
  421ed9:	mov    esi,eax
  421edb:	mov    edi,edx
  421edd:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee3:	xor    edx,edx
  421ee5:	mov    cl,0x3e
  421ee7:	call   0x408bb8
  421eec:	or     esi,eax
  421eee:	or     edi,edx
  421ef0:	xor    esi,0xcb79b576
  421ef6:	xor    edi,0x9c2b8ae8
  421efc:	mov    eax,DWORD PTR [ebp-0x208]
  421f02:	mov    DWORD PTR [eax],esi
  421f04:	mov    DWORD PTR [eax+0x4],edi
  421f07:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f0d:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f15:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f1b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f21:	xor    eax,0xcb79b576
  421f26:	xor    edx,0x9c2b8ae8
  421f2c:	mov    cl,0x2
  421f2e:	call   0x408bb8
  421f33:	mov    ebx,eax
  421f35:	mov    edi,edx
  421f37:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f3d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f43:	xor    eax,0xcb79b576
  421f48:	xor    edx,0x9c2b8ae8
  421f4e:	mov    cl,0x3e
  421f50:	call   0x4223e1
  421f55:	or     ebx,eax
  421f57:	or     edi,edx
  421f59:	movsx  eax,bl
  421f5c:	cmp    esi,eax
  421f5e:	je     0x4220be
  421f64:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f6a:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f72:	mov    eax,DWORD PTR [ebp-0x204]
  421f78:	mov    edx,DWORD PTR [ebp-0x200]
  421f7e:	xor    eax,0xcb79b576
  421f83:	xor    edx,0x9c2b8ae8
  421f89:	mov    cl,0x2
  421f8b:	call   0x408bb8
  421f90:	mov    edi,eax
  421f92:	mov    ebx,edx
  421f94:	mov    eax,DWORD PTR [ebp-0x204]
  421f9a:	mov    edx,DWORD PTR [ebp-0x200]
  421fa0:	xor    eax,0xcb79b576
  421fa5:	xor    edx,0x9c2b8ae8
  421fab:	mov    cl,0x3e
  421fad:	call   0x4223e1
  421fb2:	or     edi,eax
  421fb4:	or     ebx,edx
  421fb6:	mov    eax,DWORD PTR [ebp-0x210]
  421fbc:	movsx  eax,BYTE PTR [eax+edi*1]
  421fc0:	cmp    esi,eax
  421fc2:	je     0x421fd2
  421fc8:	jmp    0x422118
  421fcd:	jmp    0x4220be
  421fd2:	mov    eax,DWORD PTR [ebp-0x204]
  421fd8:	mov    edx,DWORD PTR [ebp-0x200]
  421fde:	xor    eax,0xcb79b576
  421fe3:	xor    edx,0x9c2b8ae8
  421fe9:	mov    cl,0x2
  421feb:	call   0x408bb8
  421ff0:	mov    esi,eax
  421ff2:	mov    edi,edx
  421ff4:	mov    eax,DWORD PTR [ebp-0x204]
  421ffa:	mov    edx,DWORD PTR [ebp-0x200]
  422000:	xor    eax,0xcb79b576
  422005:	xor    edx,0x9c2b8ae8
  42200b:	mov    cl,0x3e
  42200d:	call   0x4223e1
  422012:	or     esi,eax
  422014:	or     edi,edx
  422016:	mov    eax,DWORD PTR [ebp-0x210]
  42201c:	movsx  esi,BYTE PTR [eax+esi*1]
  422020:	mov    eax,DWORD PTR [ebp-0x1f0]
  422026:	mov    edx,DWORD PTR [ebp-0x1ec]
  42202c:	xor    eax,0xcb79b576
  422031:	xor    edx,0x9c2b8ae8
  422037:	mov    cl,0x2
  422039:	call   0x408bb8
  42203e:	mov    ebx,eax
  422040:	mov    edi,edx
  422042:	mov    eax,DWORD PTR [ebp-0x1f0]
  422048:	mov    edx,DWORD PTR [ebp-0x1ec]
  42204e:	xor    eax,0xcb79b576
  422053:	xor    edx,0x9c2b8ae8
  422059:	mov    cl,0x3e
  42205b:	call   0x4223e1
  422060:	or     ebx,eax
  422062:	or     edi,edx
  422064:	movsx  eax,bl
  422067:	cmp    esi,eax
  422069:	jne    0x4220be
  42206f:	mov    eax,DWORD PTR [ebp-0x1e0]
  422075:	mov    edx,DWORD PTR [ebp-0x1dc]
  42207b:	xor    eax,0xcb79b576
  422080:	xor    edx,0x9c2b8ae8
  422086:	mov    cl,0x2
  422088:	call   0x408bb8
  42208d:	mov    esi,eax
  42208f:	mov    edi,edx
  422091:	mov    eax,DWORD PTR [ebp-0x1e0]
  422097:	mov    edx,DWORD PTR [ebp-0x1dc]
  42209d:	xor    eax,0xcb79b576
  4220a2:	xor    edx,0x9c2b8ae8
  4220a8:	mov    cl,0x3e
  4220aa:	call   0x4223e1
  4220af:	or     esi,eax
  4220b1:	or     edi,edx
  4220b3:	mov    DWORD PTR [ebp-0x214],esi
  4220b9:	jmp    0x422162
  4220be:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220c4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220ca:	xor    eax,0xcb79b576
  4220cf:	xor    edx,0x9c2b8ae8
  4220d5:	mov    cl,0x2
  4220d7:	call   0x408bb8
  4220dc:	mov    esi,eax
  4220de:	mov    edi,edx
  4220e0:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220e6:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220ec:	xor    eax,0xcb79b576
  4220f1:	xor    edx,0x9c2b8ae8
  4220f7:	mov    cl,0x3e
  4220f9:	call   0x4223e1
  4220fe:	or     esi,eax
  422100:	or     edi,edx
  422102:	add    esi,DWORD PTR [ebp-0x1e4]
  422108:	mov    DWORD PTR [ebp-0x1e4],esi
  42210e:	jmp    0x421e5c
  422113:	jmp    0x421e5c
  422118:	mov    eax,DWORD PTR [ebp-0x1f0]
  42211e:	mov    edx,DWORD PTR [ebp-0x1ec]
  422124:	xor    eax,0xcb79b576
  422129:	xor    edx,0x9c2b8ae8
  42212f:	mov    cl,0x2
  422131:	call   0x408bb8
  422136:	mov    esi,eax
  422138:	mov    edi,edx
  42213a:	mov    eax,DWORD PTR [ebp-0x1f0]
  422140:	mov    edx,DWORD PTR [ebp-0x1ec]
  422146:	xor    eax,0xcb79b576
  42214b:	xor    edx,0x9c2b8ae8
  422151:	mov    cl,0x3e
  422153:	call   0x4223e1
  422158:	or     esi,eax
  42215a:	or     edi,edx
  42215c:	mov    DWORD PTR [ebp-0x214],esi
  422162:	mov    eax,DWORD PTR [ebp-0x214]
  422168:	mov    DWORD PTR [ebp-0xc8],eax
  42216e:	cmp    DWORD PTR [ebp-0xc8],0x0
  422175:	je     0x42219f
  42217b:	mov    eax,DWORD PTR [ebp-0x144]
  422181:	mov    ecx,DWORD PTR [ebp-0xac]
  422187:	movzx  eax,WORD PTR [ecx+eax*2]
  42218b:	mov    ecx,DWORD PTR [ebp-0xa8]
  422191:	mov    eax,DWORD PTR [ecx+eax*4]
  422194:	mov    DWORD PTR [ebp-0xfc],eax
  42219a:	jmp    0x4221a4
  42219f:	jmp    0x420789
  4221a4:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221ab:	jne    0x4221b8
  4221b1:	xor    eax,eax
  4221b3:	jmp    0x4223da
  4221b8:	mov    eax,DWORD PTR [ebp+0x8]
  4221bb:	add    eax,DWORD PTR [ebp-0xfc]
  4221c1:	mov    DWORD PTR [ebp-0xec],eax
  4221c7:	mov    DWORD PTR [ebp-0x74],0x0
  4221ce:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221d5:	je     0x422251
  4221db:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221e2:	je     0x422251
  4221e8:	mov    eax,DWORD PTR [ebp-0xb0]
  4221ee:	shl    eax,0x2
  4221f1:	mov    DWORD PTR [ebp-0x74],eax
  4221f4:	mov    DWORD PTR [ebp-0x14c],0x0
  4221fe:	sub    esp,DWORD PTR [ebp-0x74]
  422201:	mov    DWORD PTR [ebp-0x14c],esp
  422207:	mov    DWORD PTR [ebp-0x148],0x0
  422211:	mov    eax,DWORD PTR [ebp-0x148]
  422217:	cmp    eax,DWORD PTR [ebp-0xb0]
  42221d:	je     0x422251
  422223:	mov    eax,DWORD PTR [ebp-0x148]
  422229:	mov    ecx,DWORD PTR [ebp-0x14c]
  42222f:	mov    edx,DWORD PTR [ebp-0x148]
  422235:	mov    esi,DWORD PTR [ebp+0x14]
  422238:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42223c:	mov    DWORD PTR [ecx+eax*4],edx
  42223f:	mov    eax,DWORD PTR [ebp-0x148]
  422245:	inc    eax
  422246:	mov    DWORD PTR [ebp-0x148],eax
  42224c:	jmp    0x422211
  422251:	mov    DWORD PTR [ebp-0x9c],0x0
  42225b:	push   0x422393
  422260:	jmp    DWORD PTR [ebp-0xec]
  422266:	mov    eax,eax
  422268:	mov    ecx,esp
  42226a:	ret    0x8
  42226d:	cmp    DWORD PTR ds:0x4283f5,0x0
  422274:	not    DWORD PTR ds:0x4283f5
  42227a:	mov    DWORD PTR ds:0x42840d,0x5307
  422284:	mov    DWORD PTR ds:0x428565,0x4819
  42228e:	jmp    0x4222d0
  422293:	not    eax
  422295:	cmp    DWORD PTR ds:0x4283f5,0x0
  42229c:	jl     0x4222be
  4222a2:	push   0x0
  4222a4:	call   DWORD PTR ds:0x42e13c
  4222aa:	add    DWORD PTR ds:0x4284e5,0x4c21
  4222b4:	and    DWORD PTR ds:0x4284cd,0x73e0
  4222be:	sub    DWORD PTR ds:0x428439,edx
  4222c4:	or     DWORD PTR ds:0x428341,ecx
  4222ca:	sub    DWORD PTR ds:0x4284dd,ebx
  4222d0:	push   ebx
  4222d1:	dec    eax
  4222d2:	push   esi
  4222d3:	mov    eax,DWORD PTR [esp+0x18]
  4222d7:	or     eax,eax
  4222d9:	mov    DWORD PTR ds:0x4283fd,0x72ef
  4222e3:	jne    0x42231f
  4222e9:	mov    ecx,DWORD PTR [esp+0x14]
  4222ed:	mov    eax,DWORD PTR [esp+0x10]
  4222f1:	xor    edx,edx
  4222f3:	inc    ebx
  4222f4:	div    ecx
  4222f6:	sbb    ebx,DWORD PTR ds:0x428549
  4222fc:	mov    ebx,eax
  4222fe:	mov    eax,DWORD PTR [esp+0xc]
  422302:	adc    DWORD PTR ds:0x4284cd,0x42845d
  42230c:	div    ecx
  42230e:	mov    DWORD PTR ds:0x4283f5,0x3a7e
  422318:	mov    edx,ebx
  42231a:	jmp    0x42238e
  42231f:	mov    ecx,eax
  422321:	mov    ebx,DWORD PTR [esp+0x14]
  422325:	xor    eax,DWORD PTR ds:0x428569
  42232b:	mov    edx,DWORD PTR [esp+0x10]
  42232f:	mov    eax,DWORD PTR [esp+0xc]
  422333:	mov    DWORD PTR ds:0x428465,0x7dde
  42233d:	shr    ecx,1
  42233f:	mov    DWORD PTR ds:0x428555,0x121c
  422349:	rcr    ebx,1
  42234b:	shr    edx,1
  42234d:	rcr    eax,1
  42234f:	or     ecx,ecx
  422351:	jne    0x422333
  422357:	div    ebx
  422359:	mov    esi,eax
  42235b:	mul    DWORD PTR [esp+0x18]
  42235f:	mov    ecx,eax
  422361:	mov    eax,DWORD PTR [esp+0x14]
  422365:	mul    esi
  422367:	add    edx,ecx
  422369:	jb     0x422389
  42236f:	cmp    edx,DWORD PTR [esp+0x10]
  422373:	ja     0x422389
  422379:	jb     0x42238a
  42237f:	cmp    eax,DWORD PTR [esp+0xc]
  422383:	jbe    0x42238a
  422389:	dec    esi
  42238a:	xor    edx,edx
  42238c:	mov    eax,esi
  42238e:	pop    esi
  42238f:	pop    ebx
  422390:	ret    0x10
  422393:	sub    DWORD PTR [ebp+0x10],0x1
  422397:	mov    DWORD PTR ds:0x4284d1,0x3767
  4223a1:	cmp    DWORD PTR [ebp+0x10],0x0
  4223a5:	mov    DWORD PTR ds:0x428559,0xcef
  4223af:	je     0x4223c4
  4223b5:	mov    esi,DWORD PTR ds:0x4284e9
  4223bb:	sbb    DWORD PTR ds:0x428555,esi
  4223c1:	add    esp,DWORD PTR [ebp-0x74]
  4223c4:	mov    DWORD PTR [ebp-0x9c],eax
  4223ca:	mov    eax,DWORD PTR [ebp-0x9c]
  4223d0:	mov    DWORD PTR ds:0x428421,0x5e8f
  4223da:	pop    edi
  4223db:	pop    esi
  4223dc:	pop    ebx
  4223dd:	leave  
  4223de:	ret    0x10
  4223e1:	cmp    cl,0x40
  4223e4:	mov    DWORD PTR ds:0x428425,0x7c93
  4223ee:	jae    0x42242e
  4223f4:	cmp    cl,0x20
  4223f7:	mov    DWORD PTR ds:0x428361,0x440e
  422401:	jae    0x42240d
  422407:	shld   edx,eax,cl
  42240a:	shl    eax,cl
  42240c:	ret    
  42240d:	movzx  edx,WORD PTR ds:0x4284b5
  422414:	add    DWORD PTR ds:0x428465,edx
  42241a:	mov    edx,eax
  42241c:	xor    eax,eax
  42241e:	mov    DWORD PTR ds:0x428351,0x5f4f
  422428:	and    cl,0x1f
  42242b:	shl    edx,cl
  42242d:	ret    
  42242e:	xor    eax,eax
  422430:	xor    edx,edx
  422432:	ret    
	...
  42243f:	add    BYTE PTR [ebx+esi*2],al
  422442:	xchg   ecx,ebp
  422444:	push   ebx
  422445:	into   
  422446:	jns    0x4224a9
  422448:	push   0x98626f72
  42244d:	xor    eax,0x74b9d761
  422452:	jne    0x4224c2
  422454:	and    dl,bl
  422456:	mov    ch,0xed
  422458:	popf   
  422459:	bnd ret 0xa4
  42245d:	add    BYTE PTR [eax],al
  42245f:	add    BYTE PTR [edi+0x72],ah
  422462:	gs popa 
  422464:	je     0x4224cd
  422466:	jb     0x4224cd
  422468:	popa   
  422469:	je     0x4224d2
  42246b:	jb     0x4224d2
  42246d:	popa   
  42246e:	je     0x4224d7
  422470:	jb     0x4224d7
  422472:	popa   
  422473:	je     0x4224dc
  422475:	jb     0x4224dc
  422477:	popa   
  422478:	je     0x4224e1
  42247a:	jb     0x4224e1
  42247c:	popa   
  42247d:	je     0x4224e6
  42247f:	jb     0x4224e6
  422481:	popa   
  422482:	je     0x4224eb
  422484:	jb     0x4224eb
  422486:	popa   
  422487:	je     0x4224f0
  422489:	jb     0x4224f0
  42248b:	popa   
  42248c:	je     0x4224f5
  42248e:	jb     0x4224f5
  422490:	popa   
  422491:	je     0x422493
  422493:	add    BYTE PTR [eax+0x65],ch
  422496:	ins    BYTE PTR es:[edi],dx
  422497:	ins    BYTE PTR es:[edi],dx
  422498:	push   0x686c6c65
  42249d:	gs ins BYTE PTR es:[edi],dx
  42249f:	ins    BYTE PTR es:[edi],dx
  4224a0:	push   0x686c6c65
  4224a5:	gs ins BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	add    BYTE PTR [eax],al
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	outs   dx,DWORD PTR ds:[esi]
  4224cd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224d1:	add    BYTE PTR [ecx+0x0],ah
  4224d4:	jne    0x4224d6
  4224d6:	je     0x4224d8
  4224d8:	xor    eax,DWORD PTR [eax]
  4224da:	xor    al,BYTE PTR [eax]
  4224dc:	add    BYTE PTR [eax],al
  4224de:	add    BYTE PTR [eax],al
  4224e0:	push   0x61006500
  4224e5:	add    BYTE PTR [esi+0x0],dh
  4224e8:	add    BYTE PTR gs:[esi+0x0],ch
  4224ec:	push   0x61006500
  4224f1:	add    BYTE PTR [esi+0x0],dh
  4224f4:	add    BYTE PTR gs:[esi+0x0],ch
  4224f8:	push   0x61006500
  4224fd:	add    BYTE PTR [esi+0x0],dh
  422500:	add    BYTE PTR gs:[esi+0x0],ch
  422504:	push   0x61006500
  422509:	add    BYTE PTR [esi+0x0],dh
  42250c:	add    BYTE PTR gs:[esi+0x0],ch
  422510:	push   0x61006500
  422515:	add    BYTE PTR [esi+0x0],dh
  422518:	add    BYTE PTR gs:[esi+0x0],ch
  42251c:	push   0x61006500
  422521:	add    BYTE PTR [esi+0x0],dh
  422524:	add    BYTE PTR gs:[esi+0x0],ch
  422528:	push   0x61006500
  42252d:	add    BYTE PTR [esi+0x0],dh
  422530:	add    BYTE PTR gs:[esi+0x0],ch
  422534:	push   0x61006500
  422539:	add    BYTE PTR [esi+0x0],dh
  42253c:	add    BYTE PTR gs:[esi+0x0],ch
  422540:	push   0x61006500
  422545:	add    BYTE PTR [esi+0x0],dh
  422548:	add    BYTE PTR gs:[esi+0x0],ch
  42254c:	add    BYTE PTR [eax],al
  42254e:	add    BYTE PTR [eax],al
  422550:	int3   
  422551:	and    al,0x42
  422553:	add    BYTE PTR [edi+0x6c],cl
  422556:	gs dec ecx
  422558:	arpl   WORD PTR [edi+0x6e],bp
  42255b:	push   esp
  42255c:	outs   dx,DWORD PTR ds:[esi]
  42255d:	inc    ebx
  42255e:	jne    0x4225d2
  422560:	jae    0x4225d1
  422562:	jb     0x422564
  422564:	push   esp
  422565:	and    eax,0x42
  42256a:	add    BYTE PTR [eax],al
  42256c:	add    BYTE PTR [eax],al
  42256e:	add    BYTE PTR [eax],al
  422570:	adc    BYTE PTR [ecx],ch
  422572:	inc    edx
  422573:	add    BYTE PTR [eax],bl
  422575:	sub    DWORD PTR [edx+0x0],eax
  422578:	shl    BYTE PTR [edi],1
  42257a:	inc    edx
  42257b:	add    dl,dh
  42257d:	inc    edx
  42257e:	push   ebx
  42257f:	lea    edx,ds:0x1a59ba5
  422585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422586:	popf   
  422587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422588:	jno    0x42252f
  42258a:	xchg   edi,eax
  42258b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422592:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  422599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259a:	mov    ebx,0xd183d3a5
  42259f:	lea    edx,[ebp-0x645aea5b]
  4225a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225ac:	xchg   edi,eax
  4225ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ae:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225b4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225bc:	mov    ebx,0xd1e3d3a5
  4225c1:	in     eax,dx
  4225c2:	xchg   ebp,eax
  4225c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c4:	adc    eax,0x3ba59ba5
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	popf   
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225d2:	(bad)  
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	fwait
  4225d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225dc:	icebp  
  4225dd:	sub    eax,0xf172ff7
  4225e2:	adc    eax,0x3a59109
  4225e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e8:	fwait
  4225e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ea:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225f0:	xchg   ebp,eax
  4225f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f2:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  4225f8:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  4225ff:	or     eax,0x6f170ff7
  422604:	adc    eax,0x3a59169
  422609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260a:	fwait
  42260b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422612:	xchg   ebp,eax
  422613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422614:	xor    eax,0x9ba58da5
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422621:	ins    DWORD PTR es:[edi],dx
  422622:	imul   DWORD PTR [edi+0x17]
  422625:	dec    edi
  422626:	adc    eax,0x37a59149
  42262b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262c:	fwait
  42262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262e:	jae    0x4225d5
  422630:	popf   
  422631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422632:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422638:	(bad)  
  422639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263a:	fwait
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422643:	dec    ebp
  422644:	test   DWORD PTR [edi+0x16],0x91a914af
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	aaa    
  42264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264e:	fwait
  42264f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422650:	jae    0x4225f7
  422652:	popf   
  422653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422654:	pop    ss
  422655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422656:	xchg   ebp,eax
  422657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422658:	push   ecx
  422659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422660:	rol    DWORD PTR [ebx-0x2f],cl
  422663:	dec    ebp
  422664:	lock lods eax,DWORD PTR ds:[esi]
  422666:	imul   BYTE PTR [edi-0x76eb70ea]
  42266c:	xchg   ecx,eax
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	aaa    
  42266f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422670:	fwait
  422671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422672:	jae    0x422619
  422674:	popf   
  422675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422676:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42267c:	(bad)  
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	fwait
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422686:	lock (bad) 
  422688:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	aaa    
  422691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422692:	fwait
  422693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422694:	jae    0x42263b
  422696:	popf   
  422697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422698:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  42269e:	(bad)  
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	fwait
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226a9:	in     eax,dx
  4226aa:	imul   bh
  4226ac:	push   ss
  4226ad:	iret   
  4226ae:	adc    al,0xc9
  4226b0:	xchg   ecx,eax
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	cmp    eax,0x51a59ba5
  4226b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b8:	popf   
  4226b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ba:	jnp    0x422661
  4226bc:	xchg   ebx,eax
  4226bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226be:	fwait
  4226bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	shl    bl,cl
  4226c4:	shr    ch,1
  4226c6:	lock int 0xf6
  4226c9:	iret   
  4226ca:	push   ss
  4226cb:	das    
  4226cc:	adc    al,0x29
  4226ce:	push   ss
  4226cf:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226d2:	xchg   ebx,eax
  4226d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226da:	lahf   
  4226db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226dc:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226e2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226e8:	shl    BYTE PTR [ebx],cl
  4226ea:	shr    BYTE PTR ds:0xff60df0,1
  4226f0:	push   ss
  4226f1:	outs   dx,DWORD PTR ds:[esi]
  4226f2:	adc    al,0x69
  4226f4:	xchg   ecx,eax
  4226f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f6:	add    BYTE PTR [eax],al
  4226f8:	and    BYTE PTR ds:0x278c0042,0x42
  4226ff:	add    BYTE PTR [edi+eiz*1+0x291c0042],dl
  422706:	inc    edx
  422707:	add    BYTE PTR [eax+0x25],bh
  42270a:	inc    edx
  42270b:	add    BYTE PTR [eax-0x41ffbdd9],bl
  422711:	jle    0x422755
  422713:	add    BYTE PTR [esi],dh
  422715:	add    DWORD PTR [edx+0x0],0x422888
  42271c:	or     al,0x29
  42271e:	inc    edx
  42271f:	add    BYTE PTR [edi+eiz*1+0x42],dh
  422723:	add    BYTE PTR [eax+0x27],bh
  422726:	inc    edx
  422727:	add    BYTE PTR [eax],cl
  422729:	sub    DWORD PTR [edx+0x0],eax
  42272c:	fsub   QWORD PTR [edi]
  42272e:	inc    edx
  42272f:	add    BYTE PTR [edx-0x36],cl
  422732:	push   es
  422733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422734:	scas   al,BYTE PTR es:[edi]
  422735:	or     eax,0x2790a506
  42273a:	inc    edx
  42273b:	add    BYTE PTR [eax+0x28],al
  42273e:	inc    edx
  42273f:	add    BYTE PTR [eax+ebp*1+0x42],dl
  422743:	add    BYTE PTR [eax+0x28],ah
  422746:	inc    edx
  422747:	add    BYTE PTR [eax+0x28],dh
  42274a:	inc    edx
  42274b:	add    al,cl
  42274d:	daa    
  42274e:	inc    edx
  42274f:	add    BYTE PTR [ebp+eiz*1+0x42],bh
  422753:	add    al,ch
  422755:	daa    
  422756:	inc    edx
  422757:	add    al,bl
  422759:	daa    
  42275a:	inc    edx
  42275b:	add    BYTE PTR [eax],ah
  42275d:	sub    DWORD PTR [edx+0x0],eax
  422760:	scas   al,BYTE PTR es:[edi]
  422761:	fwait
  422762:	push   es
  422763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422764:	cmp    BYTE PTR [edx-0x19],al
  422767:	mov    esp,0x4227f8
  42276c:	add    BYTE PTR [eax],ch
  42276e:	inc    edx
  42276f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],bl
  422776:	loopne 0x422734
  422778:	jbe    0x4227f4
  42277a:	pop    ds
  42277b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277c:	add    BYTE PTR [eax],al
  42277e:	inc    eax
  42277f:	add    cl,dh
  422781:	retf   
  422782:	arpl   WORD PTR [eax+0x33],bx
  422785:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42278c:	ja     0x42279c
  42278e:	pop    ebx
  42278f:	xor    BYTE PTR [esi-0x6],dh
  422792:	(bad)  
  422793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422794:	mov    dl,0xd
  422796:	xchg   ebx,eax
  422797:	test   eax,0x422784
  42279c:	stos   BYTE PTR es:[edi],al
  42279d:	fild   DWORD PTR [esi]
  42279f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a0:	stos   BYTE PTR es:[edi],al
  4227a1:	fild   WORD PTR [esi]
  4227a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a5:	fild   DWORD PTR [esi]
  4227a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a8:	mov    ds:0xbea506db,al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	mov    edx,0xb6a506db
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    dl,0xdb
  4227ba:	push   es
  4227bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227bc:	mov    ds,ebx
  4227be:	push   es
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    bl,bl
  4227c2:	push   es
  4227c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c4:	out    dx,al
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	dec    DWORD PTR [edx]
  4227ca:	adc    edi,DWORD PTR [ebx]
  4227cc:	je     0x4227f3
  4227ce:	inc    edx
  4227cf:	add    BYTE PTR [ebp+0x2a],ah
  4227d2:	inc    edx
  4227d3:	add    BYTE PTR [ecx+0x73],ah
  4227d6:	push   0x69bae79
  4227db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227dc:	cmp    cl,dl
  4227de:	xlat   BYTE PTR ds:[ebx]
  4227df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e0:	dec    sp
  4227e2:	add    BYTE PTR [eax],al
  4227e4:	jo     0x42280b
  4227e6:	inc    edx
  4227e7:	add    BYTE PTR [edx],ah
  4227e9:	inc    edx
  4227ea:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  4227f8:	hlt    
  4227f9:	stc    
  4227fa:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422801:	inc    esi
  422802:	pop    ds
  422803:	jg     0x422805
	...
  422829:	add    BYTE PTR [eax],al
  42282b:	add    BYTE PTR [esi+0x427e],bh
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    BYTE PTR [edi-0x4c],al
  42283e:	inc    ecx
  42283f:	add    BYTE PTR [ebp-0x5b],cl
  422842:	push   ecx
  422843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422844:	jg     0x4227eb
  422846:	inc    edi
  422847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422848:	push   ecx
  422849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284a:	inc    ebx
  42284b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284c:	std    
  42284d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284e:	jmp    DWORD PTR [ebp+0xa59b]
  422854:	push   ebp
  422855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422856:	push   ebx
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	dec    ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	std    
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422862:	jge    0x422809
  422864:	push   ecx
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	jg     0x42280d
  422868:	std    
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	jmp    DWORD PTR [ebp+0xa59b]
  422870:	jge    0x422817
  422872:	dec    ebx
  422873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422874:	inc    ebx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jne    0x42281d
  422878:	pop    ecx
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jnp    0x422821
  42287c:	dec    ecx
  42287d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287e:	fwait
  42287f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422888:	xor    eax,ecx
  42288a:	xor    esp,DWORD PTR [ecx]
  42288c:	xor    eax,DWORD PTR [ecx]
  42288e:	xor    esp,DWORD PTR [ecx+0x33]
  422891:	inc    ecx
  422892:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  422898:	xor    al,cl
  42289a:	xor    ah,BYTE PTR [ecx]
  42289c:	xor    al,BYTE PTR [ecx]
  42289e:	xor    ah,BYTE PTR [ecx+0x32]
  4228a1:	inc    ecx
  4228a2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228a8:	xor    ecx,ebp
  4228aa:	xor    ecx,edi
  4228ac:	xor    ecx,ecx
  4228ae:	xor    ecx,ebx
  4228b0:	xor    edx,ebp
  4228b2:	xor    edx,edi
  4228b4:	xor    edx,ecx
  4228b6:	xor    edx,ebx
  4228b8:	xor    ebx,ebp
  4228ba:	xor    ebx,edi
  4228bc:	xor    ebx,ecx
  4228be:	xor    ebx,ebx
  4228c0:	xor    eax,edi
  4228c2:	push   ebx
  4228c3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228c7:	rcl    BYTE PTR [esi-0x55],0x15
  4228cb:	iret   
  4228cc:	xchg   ebp,eax
  4228cd:	dec    eax
  4228ce:	xor    ecx,ebp
  4228d0:	sbb    eax,0x50aaaae3
  4228d5:	imul   ebx,DWORD PTR [esi],0x2f
  4228d8:	je     0x4228ef
  4228da:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228e0:	imul   edi,ebx,0xffffffd5
  4228e3:	enter  0x4927,0xef
  4228e7:	popf   
  4228e8:	mov    dh,0xde
  4228ea:	dec    esi
  4228eb:	xchg   esp,eax
  4228ec:	lock xor BYTE PTR [esi-0x6b],ch
  4228f0:	inc    ebp
  4228f1:	or     al,0x76
  4228f3:	or     DWORD PTR [edi-0x40],eax
  4228f6:	js     0x4228b2
  4228f8:	popa   
  4228f9:	pop    eax
  4228fa:	jecxz  0x422966
  4228fc:	mov    BYTE PTR [ebx-0x56],0x4
  422900:	cs leave 
  422902:	inc    esi
  422903:	stos   DWORD PTR es:[edi],eax
  422904:	inc    esp
  422905:	ds inc ebp
  422907:	enter  0x82f6,0x93
  42290b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42290c:	sbb    DWORD PTR [eax],ecx
  42290e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422912:	inc    edx
  422913:	add    cl,dl
  422915:	ja     0x422986
  422917:	gs jl  0x422941
  42291a:	inc    edx
  42291b:	add    al,ah
  42291d:	daa    
  42291e:	inc    edx
  42291f:	add    BYTE PTR [esi-0x6],dh
  422922:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422929:	add    BYTE PTR [eax],al
  42292b:	add    BYTE PTR [eax],al
  42292d:	add    BYTE PTR [eax],al
  42292f:	add    BYTE PTR [eax-0x15],bl
  422932:	push   ss
  422933:	cmp    eax,0x65646543
  422938:	push   esi
  422939:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422941:	jb     0x4229b7
  422943:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422948:	jecxz  0x422911
  42294a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42294f:	cmp    al,BYTE PTR [esi-0x2d]
  422952:	jno    0x4229ce
  422954:	outs   dx,DWORD PTR ds:[esi]
  422955:	jae    0x4229c7
  422957:	popa   
  422958:	je     0x4229c2
  42295a:	bound  esp,QWORD PTR [ecx+0x73]
  42295d:	je     0x4229ce
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	test   eax,0xde3655f5
  422965:	in     al,0x6c
  422967:	jne    0x4229d1
  422969:	bound  esp,QWORD PTR [ebp+0x4b]
  42296c:	popa   
  42296d:	jbe    0x4229d0
  42296f:	outs   dx,WORD PTR ds:[esi]
  422971:	jns    0x4229e2
  422973:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422979:	pusha  
  42297a:	and    BYTE PTR [edi+0x79],dh
  42297d:	gs jo  0x4229ef
  422980:	ins    DWORD PTR es:[edi],dx
  422981:	ja     0x4229fc
  422983:	gs inc ebp
  422985:	jns    0x4229ec
  422987:	jb     0x422989
	...
  422999:	add    BYTE PTR [eax],al
  42299b:	add    BYTE PTR [esi-0x4e],dl
  42299e:	and    dl,BYTE PTR [ecx]
  4229a0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229a4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229ac:	fldcw  WORD PTR [eax+edx*2]
  4229af:	fimul  WORD PTR [ebx]
  4229b1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229b5:	fldcw  WORD PTR [eax+0x69]
  4229b8:	lods   al,BYTE PTR ds:[esi]
  4229b9:	repnz retf 0xe41c
  4229bd:	inc    ebx
  4229be:	outs   dx,DWORD PTR ds:[esi]
  4229bf:	je     0x422a34
  4229c1:	dec    esp
  4229c2:	popa   
  4229c3:	jp     0x422a3e
  4229c5:	push   ebx
  4229c6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229ca:	push   0xc3066a00
  4229cf:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229d5:	add    al,bl
  4229d7:	mov    ebp,0x2ee9d1e4
  4229dc:	jle    0x422990
  4229de:	data16 gs ja 0x422a55
  4229e2:	jne    0x422a46
  4229e4:	add    BYTE PTR [eax],al
  4229e6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229ec:	fstp   DWORD PTR [eax+0x74]
  4229ef:	popa   
  4229f0:	jae    0x422a64
  4229f2:	popa   
  4229f3:	js     0x422a5d
  4229f5:	outs   dx,DWORD PTR ds:[esi]
  4229f6:	add    BYTE PTR [eax],al
  4229f8:	mov    esi,0x4d270df8
  4229fd:	popa   
  4229fe:	ins    BYTE PTR es:[edi],dx
  4229ff:	je     0x422a4d
  422a01:	jne    0x422a75
  422a03:	imul   eax,DWORD PTR [eax],0x0
  422a06:	dec    edx
  422a07:	loope  0x422a17
  422a09:	out    0xd3,al
  422a0b:	test   al,0x57
  422a0d:	popa   
  422a0e:	jb     0x422a7b
  422a10:	jne    0x422a86
  422a12:	outs   dx,DWORD PTR fs:[esi]
  422a14:	bound  ebp,QWORD PTR [edi+0x0]
  422a17:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a1e:	jne    0x422a8d
  422a20:	outs   dx,DWORD PTR ds:[esi]
  422a21:	js     0x422a23
  422a23:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a27:	or     bh,BYTE PTR [ecx+ebx*2]
  422a2a:	add    al,0xd6
  422a2c:	gs ins DWORD PTR es:[edi],dx
  422a2e:	jns    0x422a9f
  422a30:	jo     0x422aa7
  422a32:	je     0x422a87
  422a34:	push   0x6170676f
  422a39:	jns    0x422aa5
  422a3b:	outs   dx,DWORD PTR ds:[esi]
  422a3c:	popa   
  422a3d:	jns    0x4229f9
  422a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a40:	scas   al,BYTE PTR es:[edi]
  422a41:	or     al,0xaf
  422a43:	adc    al,0x63
  422a45:	popa   
  422a46:	jns    0x422a8f
  422a48:	jne    0x422ac0
  422a4a:	jae    0x422ac0
  422a4c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a53:	jb     0x422aba
  422a55:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a59:	(bad)  
  422a5a:	out    dx,al
  422a5b:	push   ebx
  422a5c:	popa   
  422a5d:	arpl   WORD PTR [ebx+0x66],si
  422a60:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a67:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a6d:	push   eax
  422a6e:	ja     0x4229fa
  422a70:	cdq    
  422a71:	adc    bh,0x8a
  422a74:	pop    esi
  422a75:	fldenv [ecx+0x6f5038a6]
  422a7b:	adc    bh,0x8b
  422a7e:	arpl   WORD PTR [edx],si
  422a80:	test   eax,0x92fcefd7
  422a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a86:	xchg   ah,bh
  422a88:	fsubr  st,st(7)
  422a8a:	arpl   sp,di
  422a8c:	fsub   DWORD PTR [esi+0xc92fc86]
  422a92:	cdq    
  422a93:	jo     0x422b09
  422a95:	xchg   edi,eax
  422a96:	add    BYTE PTR [edi+0x77019696],0x8b
  422a9d:	push   eax
  422a9e:	ja     0x422a2a
  422aa0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422aa7:	cmp    BYTE PTR [eax+0xc],dl
  422aaa:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ab1:	xor    BYTE PTR [edi-0x11],0xfc
  422ab5:	xchg   edx,eax
  422ab6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422abc:	cld    
  422abd:	xchg   edx,eax
  422abe:	outs   dx,DWORD PTR ds:[esi]
  422abf:	mov    ds:0x31ec92fc,eax
  422ac4:	jo     0x422ac1
  422ac6:	out    dx,al
  422ac7:	lea    edx,[edi-0x69697880]
  422acd:	add    DWORD PTR [edi-0x75],esi
  422ad0:	push   eax
  422ad1:	ja     0x422a5d
  422ad3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422ada:	hlt    
  422adb:	push   eax
  422adc:	or     al,0x80
  422ade:	xchg   edi,eax
  422adf:	mov    esp,DWORD PTR [ebx-0x9]
  422ae2:	xlat   BYTE PTR ds:[ebx]
  422ae3:	out    dx,al
  422ae4:	cld    
  422ae5:	xchg   edx,eax
  422ae6:	mov    WORD PTR [ebx],ss
  422ae8:	xor    BYTE PTR [edi-0x11],0xfc
  422aec:	xchg   edx,eax
  422aed:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422af3:	jo     0x422af0
  422af5:	out    dx,al
  422af6:	lea    edx,[edi-0x69697880]
  422afc:	add    DWORD PTR [edi-0x75],esi
  422aff:	push   eax
  422b00:	ja     0x422a8c
  422b02:	cdq    
  422b03:	adc    bh,0x8a
  422b06:	pop    esi
  422b07:	fsubrp st(7),st
  422b09:	xor    edi,DWORD PTR [eax+edx*2]
  422b0c:	outs   dx,DWORD PTR ds:[esi]
  422b0d:	adc    bh,0x8b
  422b10:	arpl   WORD PTR [edx],si
  422b12:	test   eax,0xd8fca6d7
  422b17:	out    dx,al
  422b18:	fwait
  422b19:	mov    ecx,0x31ec927c
  422b1e:	fwait
  422b1f:	cld    
  422b20:	or     al,0x43
  422b22:	jo     0x422b98
  422b24:	xchg   edi,eax
  422b25:	add    BYTE PTR [edi+0x77019696],0x8b
  422b2c:	push   eax
  422b2d:	ja     0x422ab9
  422b2f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b36:	cmp    BYTE PTR [eax+0xc],dl
  422b39:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b40:	xor    BYTE PTR [edi-0x11],0xfc
  422b44:	xchg   edx,eax
  422b45:	out    dx,eax
  422b46:	mov    ds:0x963a6dfc,eax
  422b4b:	cld    
  422b4c:	xchg   edx,eax
  422b4d:	das    
  422b4e:	stos   DWORD PTR es:[edi],eax
  422b4f:	jo     0x422b4c
  422b51:	out    dx,al
  422b52:	lea    ebx,[ebx-0x7f686c67]
  422b58:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b5e:	cmp    eax,0xd7808a0a
  422b63:	sbb    eax,0x9925d73a
  422b68:	adc    bh,0x15
  422b6b:	dec    eax
  422b6c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b72:	std    
  422b73:	dec    ebp
  422b74:	xchg   esp,eax
  422b75:	test   BYTE PTR [ebx-0x9],cl
  422b78:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b7e:	xchg   esp,eax
  422b7f:	test   BYTE PTR [ebx-0x9],cl
  422b82:	or     cl,BYTE PTR [esi+edi*8]
  422b85:	or     BYTE PTR ds:0x432187ed,0x6a
  422b8c:	ins    DWORD PTR es:[edi],dx
  422b8d:	or     cl,BYTE PTR [edx]
  422b8f:	or     cl,BYTE PTR [edx]
  422b91:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422b97:	adc    DWORD PTR [ebp+0x5e],ecx
  422b9a:	(bad)  
  422b9b:	in     al,dx
  422b9c:	lea    ecx,[ebp+0x10018494]
  422ba2:	pop    ecx
  422ba3:	mov    WORD PTR [ebp-0x1172a173],cs
  422ba9:	(bad)  
  422baa:	out    dx,al
  422bab:	mov    dh,0xbe
  422bad:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bb2:	xchg   BYTE PTR [ecx+0xc],ah
  422bb5:	lea    ecx,[ebp+0x5901cbf8]
  422bbb:	add    DWORD PTR [ebx-0x80],ebp
  422bbe:	out    0x8a,eax
  422bc0:	xor    BYTE PTR [edi+0x32],0x43
  422bc4:	out    0x35,eax
  422bc6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bca:	xchg   BYTE PTR [edx-0x73],ah
  422bcd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422bd3:	dec    edi
  422bd4:	repnz lea ecx,[ebp-0x370f7073]
  422bdb:	xor    esp,edi
  422bdd:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422be4:	mov    al,ds:0xec9d8894
  422be9:	or     eax,0xeb6501a9
  422bee:	mov    dl,0xbc
  422bf0:	out    dx,eax
  422bf1:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422bf8:	mov    eax,ds:0x99968d8d
  422bfd:	cli    
  422bfe:	lea    edi,[edx]
  422c00:	lea    ecx,[ebp-0x1bc59df6]
  422c06:	push   ebp
  422c07:	and    bh,0x8a
  422c0a:	inc    ebx
  422c0b:	out    0x83,eax
  422c0d:	or     eax,esp
  422c0f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c16:	push   ecx
  422c17:	xor    ecx,DWORD PTR [ebx-0x14]
  422c1a:	push   ecx
  422c1b:	add    ebp,eax
  422c1d:	lock lea eax,[esi-0x7272f3a0]
  422c24:	cmp    ch,0xb2
  422c27:	mov    bh,ch
  422c29:	in     eax,dx
  422c2a:	mov    edx,0xfa05633a
  422c2f:	lea    edi,[edx]
  422c31:	lea    ecx,[ebp-0x39c5e29]
  422c37:	in     al,0x9c
  422c39:	les    esp,FWORD PTR [edi]
  422c3b:	add    bh,0xaf
  422c3e:	xchg   cl,ch
  422c40:	or     al,0x8d
  422c42:	(bad)  
  422c43:	loop   0x422c7f
  422c45:	scas   al,BYTE PTR es:[edi]
  422c46:	in     al,dx
  422c47:	sti    
  422c48:	in     al,dx
  422c49:	ret    0x86ed
  422c4c:	cmp    ch,ch
  422c4e:	mov    BYTE PTR [edx],bh
  422c50:	sub    BYTE PTR [edx+0x63],0xfc
  422c54:	sub    BYTE PTR [edx-0x1c],0xb4
  422c58:	scas   al,BYTE PTR es:[edi]
  422c59:	fsubr  st,st(5)
  422c5b:	test   DWORD PTR [edi],ebp
  422c5d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c63:	in     eax,dx
  422c64:	test   edi,edi
  422c66:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c6c:	out    dx,al
  422c6d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c74:	(bad)  
  422c75:	leave  
  422c76:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c7c:	or     al,0x8d
  422c7e:	(bad)  
  422c7f:	xlat   BYTE PTR ds:[ebx]
  422c80:	adc    eax,0x9faeab9d
  422c85:	scas   al,BYTE PTR es:[edi]
  422c86:	lahf   
  422c87:	dec    ebp
  422c88:	push   ebp
  422c89:	xor    eax,0xb5f1aa96
  422c8e:	outs   dx,DWORD PTR ds:[esi]
  422c8f:	lea    ecx,[ebp-0x2c3b7272]
  422c95:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422c9b:	or     al,0x8d
  422c9d:	(bad)  
  422c9e:	xlat   BYTE PTR ds:[ebx]
  422c9f:	dec    ecx
  422ca0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422ca6:	or     al,0x8d
  422ca8:	(bad)  
  422ca9:	xlat   BYTE PTR ds:[ebx]
  422caa:	xchg   ebx,eax
  422cab:	popf   
  422cac:	mov    WORD PTR gs:[edx+0x30],fs
  422cb0:	in     al,0xc
  422cb2:	(bad)  
  422cb3:	dec    DWORD PTR [edx]
  422cb5:	adc    bh,0x8a
  422cb8:	inc    ebx
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	and    DWORD PTR [ebx-0x29],0x35
  422cbe:	or     edx,ebp
  422cc0:	mov    dh,0x3a
  422cc2:	lea    ecx,[ebp-0x75187fba]
  422cc8:	cmc    
  422cc9:	mov    esi,0x8d8d3adc
  422cce:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422cd4:	lea    eax,[eax+0x23d582d7]
  422cda:	(bad)  
  422cdb:	stc    
  422cdc:	xchg   BYTE PTR [eax],cl
  422cde:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422ce4:	aad    0x30
  422ce6:	adc    bh,0xf7
  422ce9:	xor    al,0x7a
  422cec:	push   eax
  422ced:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422cf8:	push   eax
  422cf9:	lock adc BYTE PTR [eax-0x29],0x83
  422cfe:	popf   
  422cff:	stos   DWORD PTR es:[edi],eax
  422d00:	lahf   
  422d01:	icebp  
  422d02:	mov    ebp,0x8e8d8da6
  422d07:	out    dx,eax
  422d08:	in     al,dx
  422d09:	pushf  
  422d0a:	stos   BYTE PTR es:[edi],al
  422d0b:	fwait
  422d0c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d13:	in     al,dx
  422d14:	or     al,BYTE PTR [eax-0x5795039]
  422d1a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d20:	ja     0x422ca8
  422d22:	and    bh,0xaf
  422d25:	mov    dl,0x84
  422d27:	in     al,dx
  422d28:	inc    ebx
  422d29:	jo     0x422d0d
  422d2b:	out    dx,eax
  422d2c:	test   eax,0xee7be501
  422d31:	les    edx,FWORD PTR [edi-0x80]
  422d34:	(bad)  
  422d35:	scas   eax,DWORD PTR es:[edi]
  422d36:	in     eax,dx
  422d37:	js     0x422d45
  422d39:	xchg   BYTE PTR [eax],ch
  422d3b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d41:	ja     0x422cc9
  422d43:	and    bh,0xaf
  422d46:	mov    dl,0x84
  422d48:	in     al,dx
  422d49:	loop   0x422d3a
  422d4b:	lahf   
  422d4c:	loop   0x422d3d
  422d4e:	test   eax,0xee7b6601
  422d53:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d59:	out    dx,al
  422d5a:	or     al,0x8d
  422d5c:	(bad)  
  422d5d:	in     al,dx
  422d5e:	out    0xaf,eax
  422d60:	loop   0x422dd3
  422d62:	lahf   
  422d63:	cli    
  422d64:	lea    edi,[edx]
  422d66:	lea    ecx,[ebp+0x43f9f050]
  422d6c:	push   0x6d
  422d6e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d72:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d78:	push   ecx
  422d79:	in     al,0xc6
  422d7b:	cmp    dh,al
  422d7d:	stc    
  422d7e:	in     eax,dx
  422d7f:	out    0x76,eax
  422d81:	out    dx,al
  422d82:	or     ebp,ebp
  422d84:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d8a:	jbe    0x422d18
  422d8c:	xor    al,0xf9
  422d8f:	in     eax,dx
  422d90:	retf   
  422d91:	out    dx,al
  422d92:	in     al,0xec
  422d94:	loop   0x422d82
  422d96:	lahf   
  422d97:	and    bh,0xfd
  422d9a:	mov    dl,0xba
  422d9c:	outs   dx,DWORD PTR ds:[esi]
  422d9d:	inc    ebx
  422d9e:	push   0x6d
  422da0:	loop   0x422e0f
  422da2:	test   eax,0xadc96601
  422da7:	in     al,dx
  422da8:	lea    ecx,[ebp+0x45866180]
  422dae:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422db4:	push   ecx
  422db5:	in     al,0xc6
  422db7:	push   eax
  422db8:	lock xchg BYTE PTR [eax-0x10],dl
  422dbc:	sub    ebp,0xffffffcb
  422dbf:	out    dx,al
  422dc0:	in     al,0xd3
  422dc2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dc9:	mov    ch,ch
  422dcb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422dd0:	retf   
  422dd1:	mov    eax,ds:0x225e1fd3
  422dd6:	or     al,0x8d
  422dd8:	lea    eax,[ebx-0x4e]
  422ddb:	adc    BYTE PTR [ecx+0x72],0xb7
  422ddf:	sub    esp,0x77
  422de2:	xor    DWORD PTR [esi-0x288137c],0x50
  422de9:	ja     0x422d9a
  422deb:	les    eax,FWORD PTR [edi-0x13]
  422dee:	mov    dh,ch
  422df0:	xchg   BYTE PTR [eax],bh
  422df2:	lea    ecx,[ebp-0x493b4973]
  422df8:	mov    bh,0x83
  422dfa:	pop    edi
  422dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dfc:	test   ah,ah
  422dfe:	outs   dx,DWORD PTR ds:[esi]
  422dff:	dec    ebp
  422e00:	ja     0x422d85
  422e02:	aas    
  422e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e04:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e0a:	outs   dx,DWORD PTR ds:[esi]
  422e0b:	lea    ecx,[ebp+0x50fd77ec]
  422e11:	ja     0x422dc2
  422e13:	mov    dl,0xb7
  422e15:	sub    esi,0xffffffe2
  422e18:	out    dx,al
  422e19:	test   eax,0x807b4d43
  422e1e:	jl     0x422da0
  422e20:	(bad)  
  422e21:	scas   eax,DWORD PTR es:[edi]
  422e22:	xchg   al,ah
  422e24:	lea    ecx,[ebp-0x2ac5c173]
  422e2a:	in     al,dx
  422e2b:	xor    bh,ah
  422e2d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e34:	lea    ecx,[ebp+0x77]
  422e37:	add    DWORD PTR [eax-0x4d120610],0xc
  422e3e:	and    bh,0x8a
  422e41:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e46:	pop    edi
  422e47:	ja     0x422dcc
  422e49:	fcmovnu st,st(2)
  422e4b:	or     BYTE PTR [ebx+0x43],0xd7
  422e4f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e56:	test   ebx,edx
  422e58:	in     al,dx
  422e59:	jg     0x422e32
  422e5b:	dec    ebx
  422e5c:	push   eax
  422e5d:	out    0x8a,eax
  422e5f:	or     eax,esp
  422e61:	xor    ah,BYTE PTR [ebx-0x19]
  422e64:	cmp    eax,0xccaaea09
  422e69:	dec    ebp
  422e6a:	dec    ebp
  422e6b:	xchg   dl,dl
  422e6d:	lea    ecx,[ebp+0x16a438d]
  422e73:	lds    esi,FWORD PTR ds:0x2d978065
  422e79:	adc    bh,0x8b
  422e7c:	inc    ebx
  422e7d:	xlat   BYTE PTR ds:[ebx]
  422e7e:	sbb    eax,0x9780d450
  422e83:	inc    ebp
  422e84:	and    bh,0x8a
  422e87:	inc    ebx
  422e88:	out    0x35,eax
  422e8a:	push   eax
  422e8b:	(bad)  
  422e8c:	jo     0x422e31
  422e8e:	test   eax,0x8d25fbab
  422e93:	test   eax,0x6d6a439d
  422e98:	les    eax,FWORD PTR [edx-0x7272f95e]
  422e9e:	lea    edi,[edx]
  422ea0:	in     al,0x3a
  422ea2:	je     0x422e56
  422ea4:	mov    ah,0xef
  422ea6:	cdq    
  422ea7:	adc    bh,0x8b
  422eaa:	arpl   di,dx
  422eac:	and    eax,0x7780f9d3
  422eb1:	test   BYTE PTR [edx+0x5046ef84],dh
  422eb7:	ja     0x422e3d
  422eb9:	push   eax
  422eba:	xlat   BYTE PTR ds:[ebx]
  422ebb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ec1:	or     eax,esp
  422ec3:	push   0xffffffb2
  422ec5:	mov    edx,0x8677ecee
  422eca:	in     al,dx
  422ecb:	mov    dl,0xc4
  422ecd:	outs   dx,DWORD PTR ds:[esi]
  422ece:	or     eax,esp
  422ed0:	push   0xffffffec
  422ed2:	ja     0x422f4a
  422ed4:	add    bh,0xfd
  422ed7:	add    ebp,eax
  422ed9:	ja     0x422e68
  422edb:	inc    ebx
  422edc:	push   0x1
  422ede:	lds    esi,FWORD PTR [edi-0x73]
  422ee1:	mov    ds:0x8d8d8d06,al
  422ee6:	cmp    dl,bl
  422ee8:	and    eax,0x5d353180
  422eed:	mov    dl,0xb5
  422eef:	xor    eax,0x3163ef2d
  422ef4:	xor    eax,0x8f26d3a5
  422ef9:	push   cs
  422efa:	dec    ebp
  422efb:	jne    0x422f32
  422efd:	pop    ebp
  422efe:	mov    dl,0xb4
  422f00:	out    dx,eax
  422f01:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f07:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f0b:	mov    dl,0xbe
  422f0d:	dec    DWORD PTR [ecx]
  422f0f:	and    bh,dh
  422f11:	pop    edi
  422f12:	xor    DWORD PTR ds:0x801bd32d,esi
  422f18:	mov    al,ds:0x8def8d60
  422f1d:	lea    eax,[ebx-0x2]
  422f20:	mov    dl,0xbe
  422f22:	das    
  422f23:	mov    ecx,0xec8df03a
  422f28:	push   0x1
  422f2a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f30:	das    
  422f31:	aas    
  422f32:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f38:	aas    
  422f39:	xchg   edi,eax
  422f3a:	(bad)  
  422f3b:	in     al,dx
  422f3c:	push   0xffffffed
  422f3e:	push   0x3a
  422f40:	add    ebp,eax
  422f42:	xor    eax,0x8099746d
  422f47:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f4d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f55:	repnz push es
  422f57:	dec    ebp
  422f58:	dec    ebp
  422f59:	cdq    
  422f5a:	sub    BYTE PTR [edx],0xfc
  422f5d:	jns    0x422f8e
  422f5f:	stos   DWORD PTR es:[edi],eax
  422f60:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f66:	cld    
  422f67:	jns    0x422fd8
  422f69:	mov    ds:0x4d063986,eax
  422f6e:	dec    ebp
  422f6f:	cld    
  422f70:	jns    0x422f7e
  422f72:	cdq    
  422f73:	cmp    BYTE PTR [esi-0x42],0xc4
  422f77:	test   DWORD PTR [ebp+0x4d],ecx
  422f7a:	xchg   edi,eax
  422f7b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f82:	lea    edi,[edi+esi*2-0x75]
  422f86:	mul    BYTE PTR [edi+ebp*2]
  422f89:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f8d:	cmc    
  422f8e:	and    al,0x6f
  422f90:	cmp    BYTE PTR [eax+0x7750ef77],al
  422f96:	out    dx,eax
  422f97:	xor    BYTE PTR [edi-0x75],0x80
  422f9b:	xchg   edi,eax
  422f9c:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fa2:	lahf   
  422fa3:	push   ebx
  422fa4:	mov    dh,0xb2
  422fa6:	clc    
  422fa7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fab:	outs   dx,DWORD PTR ds:[esi]
  422fac:	cmp    BYTE PTR [ebx+0x74],dl
  422faf:	mov    dl,0x86
  422fb1:	or     al,0xff
  422fb3:	sti    
  422fb4:	push   eax
  422fb5:	ja     0x42302d
  422fb7:	xor    BYTE PTR [edi-0x75],0x80
  422fbb:	xchg   edi,eax
  422fbc:	mov    edx,DWORD PTR [ebx+0x74]
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0x53
  422fc3:	mov    dh,0xb2
  422fc5:	clc    
  422fc6:	sub    edi,edi
  422fc8:	sti    
  422fc9:	push   eax
  422fca:	ja     0x422f56
  422fcc:	xor    BYTE PTR [edi-0x75],0x80
  422fd0:	xchg   edi,eax
  422fd1:	mov    edx,DWORD PTR [ebx+0x74]
  422fd4:	mov    dl,0x86
  422fd6:	or     al,0x53
  422fd8:	mov    dh,0xb2
  422fda:	clc    
  422fdb:	sub    edi,edi
  422fdd:	sti    
  422fde:	push   eax
  422fdf:	ja     0x423043
  422fe1:	xor    BYTE PTR [edi-0x75],0x80
  422fe5:	xchg   edi,eax
  422fe6:	mov    edx,DWORD PTR [ebx+0x74]
  422fe9:	mov    dl,0x86
  422feb:	or     al,0x53
  422fed:	mov    dh,0xb2
  422fef:	clc    
  422ff0:	sub    edi,edi
  422ff2:	sti    
  422ff3:	push   eax
  422ff4:	ja     0x422f7c
  422ff6:	jl     0x42306f
  422ff8:	mul    BYTE PTR cs:[esi+ebp*8]
  422ffc:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423000:	mul    BYTE PTR [ebx+0x777c386f]
  423006:	es cli 
  423008:	and    al,0x6f
  42300a:	cmp    dl,ah
  42300c:	cmp    eax,0x6277509d
  423011:	push   eax
  423012:	ja     0x423076
  423014:	loop   0x422fd3
  423016:	popf   
  423017:	push   eax
  423018:	ja     0x42307c
  42301a:	push   eax
  42301b:	ja     0x42307f
  42301d:	jl     0x423096
  42301f:	bound  ecx,QWORD PTR [edx]
  423021:	lea    ecx,[ebp+0x62777c8d]
  423027:	jns    0x422fb6
  423029:	lea    ecx,[ebp-0x7f748880]
  42302f:	xchg   edi,eax
  423030:	mov    edx,DWORD PTR [ebx+0x74]
  423033:	push   ebx
  423034:	mov    dh,0xb2
  423036:	xchg   BYTE PTR [edx+esi*4],cl
  423039:	clc    
  42303a:	sub    edi,edi
  42303c:	sti    
  42303d:	push   eax
  42303e:	ja     0x4230a2
  423040:	xor    BYTE PTR [edi-0x75],0x80
  423044:	xchg   edi,eax
  423045:	mov    edx,DWORD PTR [ebx+0x74]
  423048:	push   ebx
  423049:	mov    dh,0xb2
  42304b:	xchg   BYTE PTR [edx+esi*4],cl
  42304e:	clc    
  42304f:	sub    edi,edi
  423051:	sti    
  423052:	push   eax
  423053:	ja     0x4230b7
  423055:	jl     0x4230ce
  423057:	jp     0x422ffc
  423059:	or     al,0x8d
  42305b:	lea    edi,[edi+esi*2-0x7c]
  42305f:	pop    edi
  423060:	lea    ecx,[ebp-0x50888373]
  423066:	out    0x8d,eax
  423068:	lea    ecx,[ebp+0xdc86801]
  42306e:	dec    ebp
  42306f:	dec    ebp
  423070:	add    DWORD PTR [eax+0x7a],ebx
  423073:	or     eax,0xfe864d4d
  423078:	or     eax,0xf04d4d4d
  42307d:	scas   eax,DWORD PTR es:[edi]
  42307e:	xlat   BYTE PTR ds:[ebx]
  42307f:	pop    es
  423080:	dec    ebp
  423081:	lock test bh,dl
  423084:	add    al,0x4d
  423086:	lock jp 0x423060
  423089:	jb     0x423107
  42308b:	ja     0x423011
  42308d:	mov    eax,ds:0x808d8d6d
  423092:	ja     0x42301f
  423094:	xor    al,0x8b
  423097:	push   ebx
  423098:	je     0x42304c
  42309a:	xchg   BYTE PTR [edx+eiz*8],cl
  42309d:	or     eax,0xb25153a9
  4230a2:	mov    edx,0x50b2ff29
  4230a7:	ja     0x423113
  4230a9:	xor    BYTE PTR [edi-0x75],0x80
  4230ad:	lock mov ebp,ebp
  4230b0:	mov    bh,0xc8
  4230b2:	lea    edx,[ebx+0x74]
  4230b5:	mov    dl,0x86
  4230b7:	or     al,0x53
  4230b9:	push   ecx
  4230ba:	mov    dl,0xba
  4230bc:	sub    edi,edi
  4230be:	mov    dl,0x50
  4230c0:	ja     0x42313c
  4230c2:	mov    ch,0x4a
  4230c4:	sbb    eax,0x508d8d8d
  4230c9:	ja     0x423093
  4230cb:	sub    BYTE PTR [ebp-0x7f],0x50
  4230cf:	ja     0x423058
  4230d1:	sub    BYTE PTR [ebp+0x21],0x50
  4230d5:	ja     0x423109
  4230d7:	xor    BYTE PTR [edi-0x11],0x1
  4230db:	lock enter 0x1050,0x62
  4230e0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230e6:	add    eax,esi
  4230e8:	xchg   DWORD PTR [eax+0x10],edx
  4230eb:	push   esi
  4230ec:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f2:	dec    ebp
  4230f3:	xlat   BYTE PTR ds:[ebx]
  4230f4:	out    dx,eax
  4230f5:	add    eax,esi
  4230f7:	xor    dl,BYTE PTR [eax+0x10]
  4230fa:	pop    esi
  4230fb:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423101:	lea    ecx,[ebp-0x7f740f80]
  423107:	xchg   edi,eax
  423108:	mov    edx,DWORD PTR [ebx+0x11]
  42310b:	push   ebx
  42310c:	jle    0x4230c0
  42310e:	mov    esi,0x29f8b20c
  423113:	(bad)  
  423114:	(bad)  
  423115:	arpl   bp,di
  423117:	or     DWORD PTR [edi],ecx
  423119:	(bad)  
  42311a:	in     al,dx
  42311b:	lea    ecx,[ebp-0x7f108880]
  423121:	int    0x36
  423123:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423129:	ja     0x42311a
  42312b:	or     ch,0x36
  42312e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423134:	xchg   edx,eax
  423135:	gs xor al,0xef
  423139:	adc    BYTE PTR [eax+0x32],0x3a
  42313d:	lea    ecx,[ebp+0x4d151801]
  423143:	dec    ebp
  423144:	dec    ebp
  423145:	stos   BYTE PTR es:[edi],al
  423146:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42314d:	lea    ecx,[ebp+0x5aec9080]
  423153:	adc    BYTE PTR [ebp-0x111d7273],cl
  423159:	dec    ebp
  42315a:	bound  eax,QWORD PTR [ecx-0x73]
  42315d:	lea    ecx,[ebp+0x25964daa]
  423163:	push   ebx
  423164:	push   0x7c
  423166:	dec    edi
  423167:	push   ebp
  423168:	dec    ebp
  423169:	dec    ebp
  42316a:	dec    ebp
  42316b:	outs   dx,BYTE PTR ds:[esi]
  42316c:	mov    ds:0x4f7c0a43,eax
  423171:	pop    ebp
  423172:	dec    ebp
  423173:	dec    ebp
  423174:	dec    ebp
  423175:	jg     0x423125
  423177:	push   ebp
  423178:	fwait
  423179:	jl     0x4231ca
  42317b:	gs dec ebp
  42317d:	dec    ebp
  42317e:	dec    ebp
  42317f:	stos   DWORD PTR es:[edi],eax
  423180:	lock scas al,BYTE PTR es:[edi]
  423182:	aas    
  423183:	cld    
  423184:	dec    edi
  423185:	ins    DWORD PTR es:[edi],dx
  423186:	dec    ebp
  423187:	dec    ebp
  423188:	dec    ebp
  423189:	xchg   BYTE PTR [ecx],al
  42318b:	push   0x4d4d4d92
  423190:	inc    esp
  423191:	mov    ecx,0x6a53f544
  423196:	jl     0x4231e7
  423198:	sub    eax,0x6e4d4d4d
  42319d:	mov    ds:0x4f7c0a43,eax
  4231a2:	xor    eax,0x7f4d4d4d
  4231a7:	scas   al,BYTE PTR es:[edi]
  4231a8:	push   ebp
  4231a9:	fwait
  4231aa:	jl     0x4231fb
  4231ac:	cmp    eax,0xab4d4d4d
  4231b1:	lock scas al,BYTE PTR es:[edi]
  4231b3:	imul   edi,esp,0x4f
  4231b6:	inc    ebp
  4231b7:	dec    ebp
  4231b8:	dec    ebp
  4231b9:	dec    ebp
  4231ba:	xchg   BYTE PTR [ecx],al
  4231bc:	push   0x4d4d4d47
  4231c1:	inc    esp
  4231c2:	mov    ecx,0x7780f544
  4231c7:	out    dx,eax
  4231c8:	or     ch,0x32
  4231cb:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231d1:	in     eax,dx
  4231d2:	push   0x71
  4231d4:	push   eax
  4231d5:	ja     0x42320d
  4231d7:	xor    BYTE PTR [edi-0x11],0x80
  4231db:	int    0xfd
  4231dd:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231e3:	xchg   ebp,eax
  4231e4:	mov    ds:0x777caea5,eax
  4231e9:	lldt   WORD PTR [edi+0x7cb9969d]
  4231f0:	ja     0x423202
  4231f2:	aas    
  4231f3:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  4231f7:	dec    ebp
  4231f8:	dec    ebp
  4231f9:	dec    ebp
  4231fa:	outs   dx,BYTE PTR ds:[esi]
  4231fb:	mov    ds:0x4f7c0a43,eax
  423200:	push   edx
  423201:	dec    ebp
  423202:	dec    ebp
  423203:	dec    ebp
  423204:	jg     0x4231b4
  423206:	aas    
  423207:	xchg   ebp,eax
  423208:	jl     0x423259
  42320a:	aad    0x4d
  42320c:	dec    ebp
  42320d:	dec    ebp
  42320e:	popf   
  42320f:	or     bh,BYTE PTR [edi+0x59]
  423212:	jl     0x423263
  423214:	fisttp QWORD PTR [ebp+0x4d]
  423217:	dec    ebp
  423218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423219:	xchg   edi,eax
  42321a:	lock scas al,BYTE PTR es:[edi]
  42321c:	jl     0x42326d
  42321e:	in     eax,0x4d
  423220:	dec    ebp
  423221:	dec    ebp
  423222:	xchg   esi,eax
  423223:	add    BYTE PTR [edi],bh
  423225:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423229:	dec    ebp
  42322a:	dec    ebp
  42322b:	dec    ebp
  42322c:	outs   dx,BYTE PTR ds:[esi]
  42322d:	mov    ds:0x4f7c0a43,eax
  423232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423233:	dec    ebp
  423234:	dec    ebp
  423235:	dec    ebp
  423236:	jg     0x4231e6
  423238:	aas    
  423239:	xchg   ebp,eax
  42323a:	jl     0x42328b
  42323c:	lods   eax,DWORD PTR ds:[esi]
  42323d:	dec    ebp
  42323e:	dec    ebp
  42323f:	dec    ebp
  423240:	popf   
  423241:	or     bh,BYTE PTR [edi+0x59]
  423244:	jl     0x423295
  423246:	mov    ch,0x4d
  423248:	dec    ebp
  423249:	dec    ebp
  42324a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42324b:	xchg   edi,eax
  42324c:	lock scas al,BYTE PTR es:[edi]
  42324e:	jl     0x42329f
  423250:	mov    ebp,0x964d4d4d
  423255:	add    BYTE PTR [ebx-0x7a],ch
  423258:	xchg   BYTE PTR [edx+0x3d],ah
  42325b:	lea    ecx,[ebp+0x3677800a]
  423261:	dec    ebp
  423262:	jno    0x4231e4
  423264:	ja     0x4231f1
  423266:	xor    al,0x8b
  423269:	push   ebx
  42326a:	je     0x4232bf
  42326c:	push   ecx
  42326d:	mov    dl,0xba
  42326f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423275:	xor    al,0x84
  423278:	arpl   WORD PTR [edx+0x3aca0f09],si
  42327e:	lea    ecx,[ebp-0x7f068880]
  423284:	lock stc 
  423286:	push   ebx
  423287:	je     0x4232dc
  423289:	push   ecx
  42328a:	mov    dl,0xba
  42328c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423292:	xor    al,0x84
  423295:	inc    ebx
  423296:	std    
  423297:	xor    BYTE PTR [edi+0x6a],0x63
  42329b:	mov    dl,0x9
  42329d:	into   
  42329e:	xchg   esp,eax
  42329f:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232a5:	lea    ecx,[ebp+0x77808d8d]
  4232ab:	out    dx,eax
  4232ac:	and    BYTE PTR [edx+0x32],0x3a
  4232b0:	lea    ecx,[ebp-0x7f101880]
  4232b6:	ja     0x4232a7
  4232b8:	or     ch,0x76
  4232bb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232c1:	lea    ecx,[ebp+0x71994d0a]
  4232c7:	xor    al,0xef
  4232ca:	adc    BYTE PTR [eax+0x46],0x3a
  4232ce:	lea    ecx,[ebp+0x77803a50]
  4232d4:	out    dx,eax
  4232d5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232d9:	lea    ecx,[ebp+0x53efd780]
  4232df:	push   0x1
  4232e1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232e7:	fwait
  4232e8:	cmp    eax,0x800a8d8d
  4232ed:	ja     0x4232de
  4232ef:	or     ch,0x46
  4232f2:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232f8:	fwait
  4232f9:	out    dx,eax
  4232fa:	push   eax
  4232fb:	ja     0x423313
  4232fd:	xor    BYTE PTR [edi-0x11],0x80
  423301:	pop    esi
  423302:	xor    bh,BYTE PTR [edx]
  423304:	lea    ecx,[ebp+0x53efd780]
  42330a:	push   0x1
  42330c:	sbb    ch,al
  42330e:	dec    ebp
  42330f:	dec    ebp
  423310:	dec    ebp
  423311:	xchg   BYTE PTR [ebp+0x3d],al
  423314:	lea    ecx,[ebp-0x10887ff6]
  42331a:	or     ch,0x46
  42331d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423323:	fwait
  423324:	out    dx,eax
  423325:	xor    BYTE PTR [edi-0x11],0x80
  423329:	pop    esi
  42332a:	xor    bh,BYTE PTR [edx]
  42332c:	lea    ecx,[ebp+0x53efd780]
  423332:	push   0x1
  423334:	sbb    BYTE PTR [ebp+0x4d],dl
  423337:	dec    ebp
  423338:	dec    ebp
  423339:	xchg   dh,ch
  42333b:	cmp    eax,0x800a8d8d
  423340:	ja     0x423331
  423342:	or     ch,0x46
  423345:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42334b:	fwait
  42334c:	out    dx,eax
  42334d:	in     eax,dx
  42334e:	mov    bh,0x5e
  423350:	lea    edx,[eax+0x77]
  423353:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423358:	pop    ds
  423359:	push   ebx
  42335a:	jb     0x4232fb
  42335c:	dec    ebx
  42335d:	add    eax,0x992fbcd
  423362:	loopne 0x42335f
  423364:	or     cl,BYTE PTR [ebp-0x69]
  423367:	ss dec edi
  423369:	push   0xffffffd7
  42336b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423371:	mov    ebp,gs
  423373:	push   0x6e
  423375:	or     cl,BYTE PTR [ebp-0x69]
  423378:	push   ss
  423379:	dec    edi
  42337a:	push   0xffffffd5
  42337c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423382:	xor    bh,BYTE PTR [edx]
  423384:	lea    ecx,[ebp+0x53efd780]
  42338a:	push   0x1
  42338c:	xchg   edi,eax
  42338d:	int    0x86
  42338f:	and    bh,BYTE PTR [ebx]
  423391:	lea    ecx,[ebp-0x10887ff6]
  423397:	or     ch,0x3e
  42339a:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233a0:	fwait
  4233a1:	out    dx,eax
  4233a2:	push   eax
  4233a3:	ja     0x423354
  4233a5:	(bad)  
  4233a6:	out    dx,al
  4233a7:	in     eax,dx
  4233a8:	mov    bh,0xaf
  4233aa:	lea    ecx,[ebp+0x77]
  4233ad:	pop    esi
  4233ae:	in     eax,dx
  4233af:	out    0x5e,eax
  4233b1:	sub    eax,0x77802ee4
  4233b6:	stc    
  4233b7:	xor    al,0xf9
  4233ba:	adc    bh,0xef
  4233bd:	loop   0x4233cc
  4233bf:	stos   DWORD PTR es:[edi],eax
  4233c0:	push   ebx
  4233c1:	je     0x423416
  4233c3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233c9:	sub    edi,edi
  4233cb:	mov    dl,0x1
  4233cd:	sbb    al,cl
  4233cf:	or     eax,0xc3864d4d
  4233d4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233da:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233e0:	out    dx,eax
  4233e1:	push   ebx
  4233e2:	je     0x423437
  4233e4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233ea:	sub    edi,edi
  4233ec:	mov    dl,0x1
  4233ee:	sbb    BYTE PTR [edx+0xd],bh
  4233f1:	dec    ebp
  4233f2:	dec    ebp
  4233f3:	xchg   dl,bl
  4233f5:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  4233fb:	scas   eax,DWORD PTR es:[edi]
  4233fc:	xor    al,0x8b
  4233ff:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423406:	mov    dl,0xbe
  423408:	or     al,0xb2
  42340a:	clc    
  42340b:	sub    edi,edi
  42340d:	(bad)  
  42340e:	arpl   bp,di
  423410:	xlat   BYTE PTR ds:[ebx]
  423411:	mov    WORD PTR [edi+esi*2+0x3e],?
  423415:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42341b:	stc    
  42341c:	xor    al,0xf9
  42341f:	push   ebx
  423420:	je     0x4233d4
  423422:	xchg   BYTE PTR [ebx+edx*2],cl
  423425:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42342b:	in     al,dx
  42342c:	ja     0x423498
  42342e:	push   eax
  42342f:	ja     0x42349b
  423431:	xor    BYTE PTR [edi+0x3e],0x4f
  423435:	push   0xffffffd5
  423437:	sbb    eax,0x80f97780
  42343c:	lock stc 
  42343e:	push   ebx
  42343f:	je     0x423494
  423441:	sub    dh,BYTE PTR [edx-0x454df37a]
  423447:	sub    edi,edi
  423449:	mov    dl,0xec
  42344b:	ja     0x4234c7
  42344d:	push   eax
  42344e:	ja     0x4234ca
  423450:	xor    BYTE PTR [edi-0x7],0x80
  423454:	lock stc 
  423456:	push   ebx
  423457:	je     0x4234ac
  423459:	sub    dh,BYTE PTR [edx-0x794dd646]
  42345f:	or     al,0xff
  423461:	mov    dl,0x80
  423463:	lock test BYTE PTR [ebx-0x3],al
  423467:	xor    BYTE PTR [edi+0x6a],0x63
  42346b:	mov    dl,0x9
  42346d:	dec    esp
  42346e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423478:	xor    al,0x6a
  42347b:	arpl   bp,di
  42347d:	xlat   BYTE PTR ds:[ebx]
  42347e:	push   cs
  42347f:	dec    ebp
  423480:	xlat   BYTE PTR ds:[ebx]
  423481:	out    dx,eax
  423482:	add    DWORD PTR [edi-0x76],esi
  423485:	or     al,BYTE PTR [esi-0x7272809a]
  42348b:	push   eax
  42348c:	ja     0x423504
  42348e:	les    ebx,FWORD PTR [ebx]
  423490:	xor    BYTE PTR [edi+0x76],0x80
  423494:	lock stc 
  423496:	adc    BYTE PTR [edi+0x531153f9],0x7e
  42349d:	mov    dl,0xbe
  42349f:	or     al,0xb2
  4234a1:	clc    
  4234a2:	sub    edi,edi
  4234a4:	(bad)  
  4234a5:	outs   dx,BYTE PTR ds:[esi]
  4234a6:	out    dx,eax
  4234a7:	xor    BYTE PTR [edi-0x75],0x80
  4234ab:	lock mov edx,DWORD PTR [ebx+0x74]
  4234af:	push   ebx
  4234b0:	push   ecx
  4234b1:	mov    dl,0xba
  4234b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234b9:	xor    al,0x76
  4234bc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234c2:	lea    ecx,[ebp-0x7f748880]
  4234c8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234cc:	push   ebx
  4234cd:	push   ecx
  4234ce:	mov    dl,0xba
  4234d0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234d6:	xor    al,0x8a
  4234d9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234df:	lea    ecx,[ebp-0x7f748880]
  4234e5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234e9:	push   ebx
  4234ea:	push   ecx
  4234eb:	mov    dl,0x86
  4234ed:	or     al,0xb2
  4234ef:	mov    edx,0xc4b2ff29
  4234f4:	adc    eax,0x80f9f080
  4234f9:	xchg   edi,eax
  4234fa:	stc    
  4234fb:	push   ebx
  4234fc:	adc    DWORD PTR [ebx+0x7e],edx
  4234ff:	mov    dl,0xbe
  423501:	or     al,0xb2
  423503:	clc    
  423504:	sub    edi,edi
  423506:	(bad)  
  423507:	in     al,dx
  423508:	mov    dl,0x80
  42350a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42350e:	in     al,0xb8
  423510:	xor    BYTE PTR [edi-0x76],0x50
  423514:	ja     0x42349a
  423516:	xor    BYTE PTR [edi+0x76],0x50
  42351a:	ja     0x42357e
  42351c:	ins    BYTE PTR es:[edi],dx
  42351d:	mul    BYTE PTR [edi+ebp*2]
  423520:	cmp    BYTE PTR [eax-0x19],dl
  423523:	inc    esi
  423524:	jl     0x42359d
  423526:	xor    ch,0x24
  423529:	outs   dx,DWORD PTR ds:[esi]
  42352a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423530:	inc    esi
  423531:	push   ebx
  423532:	je     0x423587
  423534:	push   ecx
  423535:	mov    dl,0x86
  423537:	or     al,0xb2
  423539:	mov    edx,0x50b2ff29
  42353e:	ja     0x423596
  423540:	xor    BYTE PTR [edi+0x46],0x80
  423544:	lock inc esi
  423546:	push   ebx
  423547:	je     0x42359c
  423549:	push   ecx
  42354a:	mov    dl,0x86
  42354c:	or     al,0xb2
  42354e:	mov    edx,0x50b2ff29
  423553:	ja     0x4235cf
  423555:	jl     0x4235ce
  423557:	ds dec ecx
  423559:	and    al,0x6f
  42355b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42355f:	fisub  WORD PTR [edi+ebp*2]
  423562:	cmp    BYTE PTR [eax-0xf7fb989],al
  423568:	inc    esi
  423569:	push   ebx
  42356a:	je     0x4235bf
  42356c:	push   ecx
  42356d:	mov    dl,0xba
  42356f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423575:	xor    al,0x84
  423578:	arpl   bp,di
  42357a:	or     DWORD PTR [edi],ecx
  42357c:	pop    ss
  42357d:	in     al,dx
  42357e:	lea    ecx,[ebp-0x72f35f42]
  423584:	lea    eax,[eax+0x77803ef0]
  42358a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  423592:	mov    dl,0x84
  423594:	sub    DWORD PTR [edx-0x200f342],esi
  42359a:	xor    BYTE PTR [edi-0x7c],0x43
  42359e:	sti    
  42359f:	push   ebx
  4235a0:	jb     0x4235ed
  4235a2:	add    eax,0x807a7750
  4235a7:	ja     0x4235c7
  4235a9:	xor    al,0x1e
  4235ac:	push   ebx
  4235ad:	je     0x423602
  4235af:	push   ecx
  4235b0:	mov    dl,0xba
  4235b2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235b8:	xor    al,0x7a
  4235bb:	arpl   bp,di
  4235bd:	fst    DWORD PTR [edi]
  4235bf:	xor    BYTE PTR [edi+0x1e],0x80
  4235c3:	lock push ds
  4235c5:	push   ebx
  4235c6:	je     0x42361b
  4235c8:	push   ecx
  4235c9:	mov    dl,0x86
  4235cb:	or     al,0xb2
  4235cd:	mov    edx,0x50b2ff29
  4235d2:	ja     0x42364e
  4235d4:	xor    BYTE PTR [edi+0x3e],0x80
  4235d8:	lock ds push ebx
  4235db:	je     0x423630
  4235dd:	push   ecx
  4235de:	mov    dl,0x86
  4235e0:	or     al,0xb2
  4235e2:	mov    edx,0x80b2ff29
  4235e7:	lock jp 0x4235f3
  4235ea:	and    dh,BYTE PTR [edx-0x7f8588b0]
  4235f0:	ja     0x423638
  4235f2:	xor    al,0x46
  4235f5:	push   ebx
  4235f6:	je     0x42364b
  4235f8:	push   ecx
  4235f9:	mov    dl,0xba
  4235fb:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423601:	xor    al,0x7a
  423604:	arpl   bp,di
  423606:	or     DWORD PTR [edi],ecx
  423608:	(bad)  
  423609:	or     al,0x8d
  42360b:	lea    eax,[eax+0x77507a77]
  423611:	scas   eax,DWORD PTR es:[edi]
  423612:	xor    BYTE PTR [edi+0x56],0xec
  423616:	ja     0x42367a
  423618:	push   eax
  423619:	out    0x7a,eax
  42361b:	push   eax
  42361c:	ja     0x423688
  42361e:	pop    esi
  42361f:	cmc    
  423620:	and    al,0x6f
  423622:	cmp    BYTE PTR [eax+0x77],dl
  423625:	pop    esi
  423626:	jl     0x42369f
  423628:	push   ss
  423629:	hlt    
  42362a:	and    al,0x6f
  42362c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423630:	repz and al,0x6f
  423633:	cmp    BYTE PTR [eax+0x77],dl
  423636:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423640:	push   ecx
  423641:	mov    dl,0x86
  423643:	or     al,0xb2
  423645:	mov    edx,0x50b2ff29
  42364a:	ja     0x423649
  42364c:	sub    BYTE PTR [edx-0x42],0x4f
  423650:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423656:	dec    edi
  423657:	or     cl,BYTE PTR [ebp+0x4d]
  42365a:	dec    ebp
  42365b:	jmp    0x7c6a:0x80386f24
  423662:	dec    edi
  423663:	xchg   ebp,eax
  423664:	dec    ebp
  423665:	dec    ebp
  423666:	dec    ebp
  423667:	or     esp,DWORD PTR [edi+ebp*2]
  42366a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423670:	ja     0x423669
  423672:	xor    al,0xf7
  423675:	push   ebx
  423676:	je     0x4236cb
  423678:	push   ecx
  423679:	mov    dl,0x86
  42367b:	or     al,0xb2
  42367d:	mov    edx,0x80b2ff29
  423682:	lock std 
  423684:	or     DWORD PTR [edx],esp
  423686:	mov    dl,0x80
  423688:	lock push 0xffffff8f
  42368b:	out    dx,al
  42368c:	out    dx,eax
  42368d:	adc    BYTE PTR [edi+0x4],dh
  423690:	sub    BYTE PTR [edx-0x80],0x77
  423694:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  42369e:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236a4:	xor    al,0xfd
  4236a7:	or     DWORD PTR [edx],esp
  4236a9:	mov    dl,0x80
  4236ab:	lock push ss
  4236ad:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236b4:	mov    dl,0xbe
  4236b6:	or     al,0xb2
  4236b8:	clc    
  4236b9:	sub    edi,edi
  4236bb:	(bad)  
  4236bc:	in     al,dx
  4236bd:	mov    dl,0x80
  4236bf:	lock push 0x9
  4236c2:	loopne 0x4236e5
  4236c4:	out    dx,eax
  4236c5:	or     BYTE PTR [edi+0xa],0x4d
  4236c9:	dec    ebp
  4236ca:	dec    ebp
  4236cb:	sbb    BYTE PTR [eax],0xa
  4236ce:	dec    ebp
  4236cf:	dec    ebp
  4236d0:	dec    ebp
  4236d1:	push   ebx
  4236d2:	je     0x423727
  4236d4:	jle    0x423688
  4236d6:	xchg   BYTE PTR [edx+esi*4],cl
  4236d9:	clc    
  4236da:	sub    edi,edi
  4236dc:	sti    
  4236dd:	in     al,dx
  4236de:	mov    dl,0x9
  4236e0:	loopne 0x4236d2
  4236e2:	add    al,0x53
  4236e4:	std    
  4236e5:	adc    al,dh
  4236e7:	add    al,0x80
  4236e9:	push   0xffffff8f
  4236eb:	ja     0x4236f1
  4236ed:	xor    al,0xf7
  4236f0:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4236f7:	mov    dl,0xf8
  4236f9:	sub    DWORD PTR [edx-0x100f342],esi
  4236ff:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423706:	xchg   edi,eax
  423707:	push   0x10
  423709:	out    dx,al
  42370a:	push   cs
  42370b:	sub    BYTE PTR [edx-0x80],0x77
  42370f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423719:	or     al,0xb2
  42371b:	mov    edx,0x80b2ff29
  423720:	lock std 
  423722:	or     DWORD PTR [edx],esp
  423724:	mov    dl,0x80
  423726:	lock push 0xffffff8f
  423729:	out    dx,al
  42372a:	out    dx,eax
  42372b:	adc    BYTE PTR [edi+0x4],dh
  42372e:	sub    BYTE PTR [edx-0x80],0x77
  423732:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42373c:	push   ecx
  42373d:	mov    dl,0xba
  42373f:	sub    edi,edi
  423741:	mov    dl,0x80
  423743:	lock std 
  423745:	or     DWORD PTR [edx],esp
  423747:	mov    dl,0x80
  423749:	lock pop esi
  42374b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423752:	mov    dl,0xbe
  423754:	or     al,0xb2
  423756:	clc    
  423757:	sub    edi,edi
  423759:	(bad)  
  42375a:	in     al,dx
  42375b:	mov    dl,0x80
  42375d:	lock push 0x9
  423760:	loopne 0x423783
  423762:	out    dx,eax
  423763:	or     BYTE PTR [edi-0x6b],0x4d
  423767:	dec    ebp
  423768:	dec    ebp
  423769:	sbb    BYTE PTR [eax],0x95
  42376c:	dec    ebp
  42376d:	dec    ebp
  42376e:	dec    ebp
  42376f:	push   ebx
  423770:	je     0x4237c5
  423772:	jle    0x423726
  423774:	xchg   BYTE PTR [edx+esi*4],cl
  423777:	clc    
  423778:	sub    edi,edi
  42377a:	sti    
  42377b:	in     al,dx
  42377c:	mov    dl,0x9
  42377e:	loopne 0x423770
  423780:	add    al,0x53
  423782:	std    
  423783:	adc    al,dh
  423785:	add    al,0x80
  423787:	push   0xffffff8f
  423789:	ja     0x42378f
  42378b:	xor    al,0xf7
  42378e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423795:	mov    dl,0xf8
  423797:	sub    DWORD PTR [edx-0x100f342],esi
  42379d:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237a4:	xchg   edi,eax
  4237a5:	push   0x10
  4237a7:	out    dx,al
  4237a8:	push   cs
  4237a9:	sub    BYTE PTR [edx-0x80],0x77
  4237ad:	ss xor al,0x36
  4237b1:	push   ebx
  4237b2:	push   ecx
  4237b3:	push   ebx
  4237b4:	je     0x423768
  4237b6:	mov    edx,0xc86b229
  4237bb:	push   DWORD PTR [edx-0x7fa10f80]
  4237c1:	xchg   edi,eax
  4237c2:	pop    esi
  4237c3:	push   ebx
  4237c4:	adc    DWORD PTR [ebx+0x7e],edx
  4237c7:	mov    dl,0xbe
  4237c9:	or     al,0xb2
  4237cb:	clc    
  4237cc:	sub    edi,edi
  4237ce:	dec    BYTE PTR [ecx]
  4237d0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237d6:	ja     0x4237d5
  4237d8:	xor    BYTE PTR [edi-0x3],0x80
  4237dc:	lock scas eax,DWORD PTR es:[edi]
  4237de:	arpl   bp,di
  4237e0:	or     edx,ebp
  4237e2:	(bad)  
  4237e3:	or     eax,0x77804d4d
  4237e8:	pop    esi
  4237e9:	xor    al,0x5e
  4237ec:	push   ebx
  4237ed:	push   ecx
  4237ee:	mov    dl,0xba
  4237f0:	sub    DWORD PTR [ebx+0x74],edx
  4237f3:	mov    dl,0x86
  4237f5:	or     al,0xff
  4237f7:	mov    dl,0x80
  4237f9:	lock scas eax,DWORD PTR es:[edi]
  4237fb:	or     DWORD PTR [edx],esp
  4237fd:	mov    dl,0x80
  4237ff:	lock jp 0x423855
  423802:	adc    DWORD PTR [edx-0x4d00f342],esi
  423808:	xor    al,0x7a
  42380b:	push   ebx
  42380c:	push   ecx
  42380d:	mov    dl,0xba
  42380f:	sub    edi,edi
  423811:	mov    dl,0x50
  423813:	ja     0x42384b
  423815:	xor    BYTE PTR [edi-0x7e],0x80
  423819:	lock adc BYTE PTR [ebx+0x51],0xb2
  42381e:	mov    edx,0xb2745329
  423823:	xchg   BYTE PTR [edi+edi*8],cl
  423826:	mov    dl,0x80
  423828:	lock add BYTE PTR [eax+0x11538297],0xb2
  423830:	mov    esi,0xb27e530c
  423835:	clc    
  423836:	sub    edi,edi
  423838:	(bad)  
  423839:	in     al,dx
  42383a:	lock ss in al,dx
  42383d:	std    
  42383e:	in     al,dx
  42383f:	lock push esi
  423841:	push   eax
  423842:	lock push esi
  423844:	les    ebx,FWORD PTR ds:0x80827780
  42384a:	lock adc BYTE PTR [ebx+0x74],0x53
  42384f:	push   ecx
  423850:	mov    dl,0x86
  423852:	or     al,0xb2
  423854:	mov    edx,0xecb2ff29
  423859:	ja     0x4238b1
  42385b:	push   eax
  42385c:	ja     0x4238b4
  42385e:	xor    BYTE PTR [edi-0x7e],0x80
  423862:	lock adc BYTE PTR [ebx+0x74],0xb2
  423867:	xchg   BYTE PTR [ebx+edx*2],cl
  42386a:	push   ecx
  42386b:	mov    dl,0xba
  42386d:	sub    edi,edi
  42386f:	mov    dl,0x80
  423871:	lock test BYTE PTR [ebx-0x3],al
  423875:	xor    BYTE PTR [edi-0x7e],0x80
  423879:	xchg   edi,eax
  42387a:	adc    BYTE PTR [ebx+0x74],0x53
  42387e:	jle    0x423832
  423880:	clc    
  423881:	sub    DWORD PTR [edx-0x400f37a],esi
  423887:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42388e:	mov    dl,0x9
  423890:	dec    esp
  423891:	xor    cl,BYTE PTR [edx+0x77804d4d]
  423897:	mov    eax,DWORD PTR [eax+0x77808b77]
  42389d:	mov    dl,BYTE PTR [eax+0x77]
  4238a0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238a5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238ae:	or     al,0x53
  4238b0:	jle    0x423832
  4238b2:	int    0x32
  4238b4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ba:	(bad)  
  4238bb:	(bad)  
  4238bc:	xchg   esi,eax
  4238bd:	xor    al,0x66
  4238c0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238c7:	mov    dl,0xbe
  4238c9:	or     al,0xb2
  4238cb:	clc    
  4238cc:	sub    edi,edi
  4238ce:	(bad)  
  4238cf:	xchg   esi,eax
  4238d0:	xor    al,0x8b
  4238d3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238da:	adc    DWORD PTR [ebx+0x7e],edx
  4238dd:	mov    dl,0xbe
  4238df:	or     al,0xb2
  4238e1:	clc    
  4238e2:	sub    edi,edi
  4238e4:	(bad)  
  4238e5:	xchg   esi,eax
  4238e6:	dec    ebp
  4238e7:	or     dl,BYTE PTR ds:0x808bf080
  4238ed:	xchg   edi,eax
  4238ee:	mov    edx,DWORD PTR [ebx+0x11]
  4238f1:	push   ebx
  4238f2:	jle    0x4238a6
  4238f4:	mov    esi,0x29f8b20c
  4238f9:	(bad)  
  4238fa:	(bad)  
  4238fb:	push   eax
  4238fc:	ja     0x423964
  4238fe:	arpl   bp,di
  423900:	or     DWORD PTR [edi],ecx
  423902:	cmp    al,0x8d
  423904:	lea    ecx,[ebp-0x3b748880]
  42390a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423913:	test   BYTE PTR [eax-0x414d7b10],al
  423919:	or     al,0x53
  42391b:	cld    
  42391c:	mov    dl,0x84
  42391e:	sub    edi,edi
  423920:	mov    dl,0x80
  423922:	lock jbe 0x4238b4
  423925:	and    DWORD PTR [edx],edi
  423927:	adc    BYTE PTR [ecx],ah
  423929:	jno    0x4238ab
  42392b:	lock stc 
  42392d:	xor    al,0xf9
  423930:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423937:	mov    dl,0xf8
  423939:	sub    DWORD PTR [edx-0x100f342],esi
  42393f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423946:	test   BYTE PTR [ebx-0x6c],dl
  423949:	in     eax,dx
  42394a:	test   BYTE PTR [edx-0x4d750713],cl
  423950:	mov    esi,0xfffbec29
  423955:	mov    dl,0x53
  423957:	jl     0x4238d9
  423959:	lock mov al,BYTE PTR [eax-0x74d7569]
  423960:	or     al,0xb2
  423962:	mov    esi,0x53b6ff29
  423967:	pushf  
  423968:	arpl   bx,di
  42396a:	xlat   BYTE PTR ds:[ebx]
  42396b:	sub    al,0x80
  42396d:	ja     0x42395e
  42396f:	xor    al,0x2e
  423972:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423979:	lea    ecx,[ebp+0x7e531153]
  42397f:	mov    dl,0xbe
  423981:	or     al,0xb2
  423983:	clc    
  423984:	sub    edi,edi
  423986:	(bad)  
  423987:	xchg   esi,eax
  423988:	xor    al,0x8b
  42398b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  423992:	mov    dl,0xbe
  423994:	or     al,0xb2
  423996:	clc    
  423997:	sub    edi,edi
  423999:	(bad)  
  42399a:	xchg   esi,eax
  42399b:	dec    ebp
  42399c:	xlat   BYTE PTR ds:[ebx]
  42399d:	jbe    0x4239ec
  42399f:	or     bl,BYTE PTR ds:0x50667780
  4239a5:	ja     0x423a1d
  4239a7:	xor    BYTE PTR [edi+0x36],0x50
  4239ab:	ja     0x423937
  4239ad:	xor    BYTE PTR [edi-0x76],0x53
  4239b1:	jo     0x4239a0
  4239b3:	xchg   dh,ch
  4239b5:	aad    0x43
  4239b7:	xor    BYTE PTR [edi+0x76],0x80
  4239bb:	adc    eax,0x767780ef
  4239c0:	sub    dh,0xef
  4239c3:	push   ebx
  4239c4:	cld    
  4239c5:	push   ebx
  4239c6:	xchg   esp,eax
  4239c7:	mov    dl,0x84
  4239c9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239cf:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239d6:	ja     0x423962
  4239d8:	in     eax,dx
  4239d9:	mov    dl,0xee
  4239db:	in     eax,dx
  4239dc:	xchg   dh,ch
  4239de:	arpl   bp,di
  4239e0:	in     al,0x98
  4239e2:	xor    BYTE PTR [edi-0x76],0x53
  4239e6:	jo     0x4239d5
  4239e8:	xchg   dh,ch
  4239ea:	aad    0x43
  4239ec:	xor    BYTE PTR [edi+0x76],0x80
  4239f0:	adc    eax,0x767780ef
  4239f5:	sub    dh,0xef
  4239f8:	push   ebx
  4239f9:	cld    
  4239fa:	push   ebx
  4239fb:	xchg   esp,eax
  4239fc:	mov    dl,0x84
  4239fe:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a04:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a0b:	ja     0x423997
  423a0d:	in     eax,dx
  423a0e:	mov    dl,0xee
  423a10:	in     eax,dx
  423a11:	xchg   dh,ch
  423a13:	arpl   bp,di
  423a15:	in     al,0x98
  423a17:	xor    BYTE PTR [edi+0x76],0x80
  423a1b:	lock stc 
  423a1d:	push   eax
  423a1e:	ja     0x4239cf
  423a20:	xor    BYTE PTR [edi-0x7],0x53
  423a24:	adc    DWORD PTR [ebx-0x4],edx
  423a27:	mov    dl,0x84
  423a29:	sub    DWORD PTR [edx-0x200f342],esi
  423a2f:	xor    BYTE PTR [edi-0x75],0x50
  423a33:	lock es jl 0x423aae
  423a37:	inc    ecx
  423a38:	ins    DWORD PTR es:[edi],dx
  423a39:	pop    ebp
  423a3a:	ins    DWORD PTR es:[edi],dx
  423a3b:	aas    
  423a3c:	jl     0x423ab5
  423a3e:	pop    edx
  423a3f:	ins    DWORD PTR es:[edi],dx
  423a40:	inc    ebx
  423a41:	ins    DWORD PTR es:[edi],dx
  423a42:	push   ebx
  423a43:	push   eax
  423a44:	ja     0x423aac
  423a46:	fsub   QWORD PTR [si]
  423a49:	outs   dx,DWORD PTR ds:[esi]
  423a4a:	cmp    BYTE PTR [ecx],cl
  423a4c:	jg     0x80cfc7df
  423a52:	xchg   edi,eax
  423a53:	scas   eax,DWORD PTR es:[edi]
  423a54:	cmp    ch,0x53
  423a57:	adc    DWORD PTR [eax-0x10],edx
  423a5a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a60:	cld    
  423a61:	mov    dl,0x84
  423a63:	sub    edi,edi
  423a65:	ja     0x4239eb
  423a67:	push   eax
  423a68:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a6f:	cli    
  423a70:	out    dx,al
  423a71:	jno    0x423a40
  423a73:	add    eax,0xbdbecdcd
  423a78:	or     eax,esp
  423a7a:	jo     0x423adf
  423a7c:	mov    dl,0xd7
  423a7e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a84:	stc    
  423a85:	xor    BYTE PTR [edi-0x7],0x80
  423a89:	xchg   edi,eax
  423a8a:	stc    
  423a8b:	push   ebx
  423a8c:	cld    
  423a8d:	push   ebx
  423a8e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423a94:	or     al,0xff
  423a96:	std    
  423a97:	xor    BYTE PTR [edi+0x66],0x53
  423a9b:	cld    
  423a9c:	mov    dl,0x84
  423a9e:	sub    edi,edi
  423aa0:	ja     0x423a26
  423aa2:	push   ebx
  423aa3:	xchg   esp,eax
  423aa4:	in     al,dx
  423aa5:	std    
  423aa6:	xor    BYTE PTR [edi+0x62],0xed
  423aaa:	test   BYTE PTR [edx-0x4d750713],cl
  423ab0:	mov    esi,0xfff7ec29
  423ab5:	(bad)  
  423ab6:	push   ebx
  423ab7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423abd:	fsub   QWORD PTR [si]
  423ac0:	outs   dx,DWORD PTR ds:[esi]
  423ac1:	cmp    bh,dl
  423ac3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ac9:	xor    al,0x8b
  423acc:	xor    BYTE PTR [edi-0x75],0x53
  423ad0:	adc    DWORD PTR [ebx-0x4],edx
  423ad3:	mov    dl,0xbe
  423ad5:	or     al,0xb2
  423ad7:	test   BYTE PTR [ecx],ch
  423ad9:	(bad)  
  423ada:	std    
  423adb:	xor    BYTE PTR [edi-0x75],0x80
  423adf:	xchg   edi,eax
  423ae0:	mov    edx,DWORD PTR [ebx+0x74]
  423ae3:	push   ebx
  423ae4:	jle    0x423a98
  423ae6:	xchg   BYTE PTR [edx+esi*4],cl
  423ae9:	clc    
  423aea:	sub    edi,edi
  423aec:	sti    
  423aed:	arpl   WORD PTR [edx+0xc230f09],si
  423af3:	lea    ecx,[ebp-0x7f508880]
  423af9:	ins    DWORD PTR es:[edi],dx
  423afa:	out    dx,eax
  423afb:	push   eax
  423afc:	out    0xf9,eax
  423afe:	jl     0x423b77
  423b00:	es repz and al,0x6f
  423b04:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b08:	hlt    
  423b09:	and    al,0x6f
  423b0b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b0f:	mul    BYTE PTR [ebx+0x777c386f]
  423b15:	test   dl,bh
  423b17:	and    al,0x6f
  423b19:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b1d:	nop
  423b1e:	shr    BYTE PTR [edi+0x38],1
  423b21:	push   eax
  423b22:	ja     0x423b62
  423b24:	xor    BYTE PTR [edi-0x11],0x80
  423b28:	lock test BYTE PTR [eax+0x11538497],al
  423b2f:	mov    dl,0xbe
  423b31:	or     al,0x53
  423b33:	jle    0x423ae7
  423b35:	clc    
  423b36:	sub    edi,edi
  423b38:	(bad)  
  423b39:	xchg   esi,eax
  423b3a:	xor    al,0x7a
  423b3d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b44:	or     al,0x53
  423b46:	jle    0x423ac8
  423b48:	int    0x32
  423b4a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b50:	(bad)  
  423b51:	(bad)  
  423b52:	xchg   esi,eax
  423b53:	xor    al,0x66
  423b56:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b5d:	mov    dl,0xbe
  423b5f:	or     al,0xb2
  423b61:	clc    
  423b62:	sub    edi,edi
  423b64:	(bad)  
  423b65:	xchg   esi,eax
  423b66:	xor    al,0xf9
  423b69:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b70:	mov    dl,0xbe
  423b72:	or     al,0xb2
  423b74:	clc    
  423b75:	sub    edi,edi
  423b77:	(bad)  
  423b78:	xchg   esi,eax
  423b79:	dec    ebp
  423b7a:	or     dl,BYTE PTR ds:0x80667750
  423b80:	ja     0x423b71
  423b82:	xor    al,0x84
  423b85:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b8c:	or     al,0x53
  423b8e:	jle    0x423b10
  423b90:	int    0x32
  423b92:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b98:	(bad)  
  423b99:	(bad)  
  423b9a:	xchg   esi,eax
  423b9b:	xor    al,0x7a
  423b9e:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423ba5:	mov    dl,0xbe
  423ba7:	or     al,0xb2
  423ba9:	clc    
  423baa:	sub    edi,edi
  423bac:	(bad)  
  423bad:	xchg   esi,eax
  423bae:	xor    al,0xf9
  423bb1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bb8:	adc    DWORD PTR [ebx+0x7e],edx
  423bbb:	mov    dl,0xbe
  423bbd:	or     al,0xb2
  423bbf:	clc    
  423bc0:	sub    edi,edi
  423bc2:	(bad)  
  423bc3:	xchg   esi,eax
  423bc4:	dec    ebp
  423bc5:	or     dl,BYTE PTR ds:0x50f9f080
  423bcb:	ja     0x423b51
  423bcd:	xor    BYTE PTR [edi-0x7],0x53
  423bd1:	adc    DWORD PTR [ebx-0x4],edx
  423bd4:	mov    dl,0xbe
  423bd6:	or     al,0xb2
  423bd8:	test   BYTE PTR [ecx],ch
  423bda:	(bad)  
  423bdb:	std    
  423bdc:	xor    BYTE PTR [edi+0x66],0x63
  423be0:	std    
  423be1:	or     DWORD PTR [edi],ecx
  423be3:	cmp    eax,0x808d8d2f
  423be8:	lock stc 
  423bea:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423bf1:	mov    dl,0xbe
  423bf3:	or     al,0xb2
  423bf5:	clc    
  423bf6:	sub    edi,edi
  423bf8:	(bad)  
  423bf9:	arpl   ax,si
  423bfb:	test   BYTE PTR [ecx],cl
  423bfd:	bswap  edi
  423bff:	das    
  423c00:	lea    ecx,[ebp-0x7fd90f80]
  423c06:	lock es mov dl,0xbe
  423c0a:	or     al,0xcd
  423c0c:	add    eax,0x80ef10c4
  423c11:	lock stc 
  423c13:	xor    al,0xf9
  423c16:	mov    dl,0xbe
  423c18:	or     al,0xcd
  423c1a:	add    eax,0x3a7d10c4
  423c1f:	xor    al,0x36
  423c22:	xor    al,0x36
  423c25:	mov    dl,0xbe
  423c27:	or     al,0xcd
  423c29:	add    eax,0xc7d10c4
  423c2e:	in     eax,dx
  423c2f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c35:	in     eax,dx
  423c36:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c3c:	add    DWORD PTR [ecx],eax
  423c3e:	and    eax,0x964d4d4d
  423c43:	dec    ebp
  423c44:	xlat   BYTE PTR ds:[ebx]
  423c45:	add    DWORD PTR ds:[ecx],eax
  423c48:	sbb    eax,0x4d4d4d4d
  423c4d:	xlat   BYTE PTR ds:[ebx]
  423c4e:	test   BYTE PTR [esi+0x4daff080],dl
  423c54:	sahf   
  423c55:	and    DWORD PTR [eax-0x4d128910],eax
  423c5b:	jno    0x423bf3
  423c5d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c63:	push   eax
  423c64:	ja     0x423cc8
  423c66:	xor    BYTE PTR [edi-0x11],0x80
  423c6a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c73:	lea    ecx,[ebp+0x7e531153]
  423c79:	mov    dl,0xbe
  423c7b:	or     al,0xb2
  423c7d:	clc    
  423c7e:	sub    edi,edi
  423c80:	(bad)  
  423c81:	xchg   esi,eax
  423c82:	xor    al,0xf9
  423c85:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c8c:	mov    dl,0xbe
  423c8e:	or     al,0xb2
  423c90:	clc    
  423c91:	sub    edi,edi
  423c93:	(bad)  
  423c94:	xchg   esi,eax
  423c95:	dec    ebp
  423c96:	xlat   BYTE PTR ds:[ebx]
  423c97:	dec    bp
  423c99:	or     bl,BYTE PTR ds:0xb2627780
  423c9f:	push   0xc
  423ca1:	push   ebx
  423ca2:	jl     0x423d07
  423ca4:	jl     0x423c26
  423ca6:	ja     0x423c97
  423ca8:	xor    al,0x2e
  423cab:	or     ch,0x32
  423cae:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cb4:	xlat   BYTE PTR ds:[ebx]
  423cb5:	push   ebp
  423cb6:	push   ebx
  423cb7:	adc    DWORD PTR [ebx+0x7e],edx
  423cba:	mov    dl,0xbe
  423cbc:	or     al,0xb2
  423cbe:	clc    
  423cbf:	sub    edi,edi
  423cc1:	(bad)  
  423cc2:	xchg   esi,eax
  423cc3:	xor    al,0xf9
  423cc6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423ccd:	mov    dl,0xbe
  423ccf:	or     al,0xb2
  423cd1:	clc    
  423cd2:	sub    edi,edi
  423cd4:	(bad)  
  423cd5:	xchg   esi,eax
  423cd6:	dec    ebp
  423cd7:	xlat   BYTE PTR ds:[ebx]
  423cd8:	jbe    0x423d27
  423cda:	or     bl,BYTE PTR ds:0x50847780
  423ce0:	ja     0x423d58
  423ce2:	xor    BYTE PTR [edi+0x3e],0x50
  423ce6:	ja     0x423c72
  423ce8:	les    edi,FWORD PTR [ecx]
  423cea:	push   ebx
  423ceb:	adc    DWORD PTR [ebx+0x7e],edx
  423cee:	mov    dl,0xbe
  423cf0:	or     al,0xb2
  423cf2:	clc    
  423cf3:	sub    edi,edi
  423cf5:	(bad)  
  423cf6:	xchg   esi,eax
  423cf7:	xor    al,0xf9
  423cfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d01:	mov    dl,0xbe
  423d03:	or     al,0xb2
  423d05:	clc    
  423d06:	sub    edi,edi
  423d08:	(bad)  
  423d09:	xchg   esi,eax
  423d0a:	dec    ebp
  423d0b:	xlat   BYTE PTR ds:[ebx]
  423d0c:	test   BYTE PTR [ebp+0xa],cl
  423d0f:	sbb    eax,0x508a7780
  423d14:	ja     0x423d34
  423d16:	xor    BYTE PTR [edi+0x76],0x50
  423d1a:	out    0x56,eax
  423d1c:	push   eax
  423d1d:	ja     0x423d81
  423d1f:	jl     0x423d98
  423d21:	xor    ch,0x24
  423d24:	outs   dx,DWORD PTR ds:[esi]
  423d25:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d2b:	push   esi
  423d2c:	push   ebx
  423d2d:	cld    
  423d2e:	push   ebx
  423d2f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d35:	or     al,0xff
  423d37:	mov    dl,0x50
  423d39:	ja     0x423d81
  423d3b:	xor    BYTE PTR [edi+0x56],0x80
  423d3f:	lock push esi
  423d41:	push   ebx
  423d42:	cld    
  423d43:	push   ebx
  423d44:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d4a:	or     al,0xff
  423d4c:	mov    dl,0x50
  423d4e:	ja     0x423cff
  423d50:	jl     0x423dc9
  423d52:	jp     0x423d9d
  423d54:	and    al,0x6f
  423d56:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d5a:	fisub  WORD PTR [edi+ebp*2]
  423d5d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d63:	push   esi
  423d64:	push   ebx
  423d65:	cld    
  423d66:	push   ebx
  423d67:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d6d:	sub    edi,edi
  423d6f:	mov    dl,0x80
  423d71:	lock push ds
  423d73:	arpl   bp,di
  423d75:	or     DWORD PTR [edi],ecx
  423d77:	pop    ss
  423d78:	in     al,dx
  423d79:	lea    ecx,[ebp-0x72f35f42]
  423d7f:	lea    eax,[eax+0x77807af0]
  423d85:	jp     0x423d07
  423d87:	xchg   edi,eax
  423d88:	inc    esi
  423d89:	push   ebx
  423d8a:	je     0x423ddf
  423d8c:	push   ecx
  423d8d:	mov    dl,0x86
  423d8f:	or     al,0xb2
  423d91:	mov    edx,0x80fdff29
  423d96:	ja     0x423db6
  423d98:	inc    ebx
  423d99:	sti    
  423d9a:	push   ebx
  423d9b:	jb     0x423de8
  423d9d:	add    eax,0x80af7750
  423da2:	ja     0x423d28
  423da4:	xor    al,0x84
  423da7:	push   ebx
  423da8:	cld    
  423da9:	push   ebx
  423daa:	adc    DWORD PTR [edx-0x7b4df342],esi
  423db0:	sub    edi,edi
  423db2:	mov    dl,0x80
  423db4:	lock scas eax,DWORD PTR es:[edi]
  423db6:	arpl   bp,di
  423db8:	fst    DWORD PTR [edi]
  423dba:	xor    BYTE PTR [edi-0x7c],0x80
  423dbe:	lock test BYTE PTR [ebx-0x4],dl
  423dc2:	push   ebx
  423dc3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dc9:	or     al,0xff
  423dcb:	mov    dl,0x50
  423dcd:	ja     0x423d7e
  423dcf:	xor    BYTE PTR [edi+0x7a],0x80
  423dd3:	lock jp 0x423e29
  423dd6:	cld    
  423dd7:	push   ebx
  423dd8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dde:	or     al,0xff
  423de0:	mov    dl,0x80
  423de2:	lock scas eax,DWORD PTR es:[edi]
  423de4:	or     DWORD PTR [edx],esp
  423de6:	mov    dl,0x50
  423de8:	ja     0x423d99
  423dea:	xor    BYTE PTR [edi+0x56],0x80
  423dee:	lock push esi
  423df0:	push   ebx
  423df1:	cld    
  423df2:	push   ebx
  423df3:	adc    DWORD PTR [edx-0x7b4df342],esi
  423df9:	sub    edi,edi
  423dfb:	mov    dl,0x80
  423dfd:	lock scas eax,DWORD PTR es:[edi]
  423dff:	arpl   bp,di
  423e01:	or     DWORD PTR [edi],ecx
  423e03:	(bad)  
  423e04:	or     al,0x8d
  423e06:	lea    eax,[eax+0x7750af77]
  423e0c:	scas   eax,DWORD PTR es:[edi]
  423e0d:	xor    BYTE PTR [edi+0x46],0xec
  423e11:	ja     0x423e75
  423e13:	push   eax
  423e14:	out    0x3e,eax
  423e16:	push   eax
  423e17:	ja     0x423e77
  423e19:	pop    esi
  423e1a:	cmc    
  423e1b:	and    al,0x6f
  423e1d:	cmp    BYTE PTR [eax+0x77],dl
  423e20:	push   0x7c
  423e22:	ja     0x423e8a
  423e24:	hlt    
  423e25:	and    al,0x6f
  423e27:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e2b:	repz and al,0x6f
  423e2e:	cmp    BYTE PTR [eax+0x77],dl
  423e31:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e3b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e41:	or     al,0xff
  423e43:	mov    dl,0x50
  423e45:	ja     0x423e44
  423e47:	sub    BYTE PTR [edx-0x42],0x4f
  423e4b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e51:	dec    edi
  423e52:	xor    DWORD PTR [ebp+0x4d],ecx
  423e55:	dec    ebp
  423e56:	jmp    0x7c6a:0x80386f24
  423e5d:	dec    edi
  423e5e:	jge    0x423ead
  423e60:	dec    ebp
  423e61:	dec    ebp
  423e62:	or     esp,DWORD PTR [edi+ebp*2]
  423e65:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e6b:	ja     0x423e64
  423e6d:	xor    al,0xf7
  423e70:	push   ebx
  423e71:	cld    
  423e72:	push   ebx
  423e73:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e79:	or     al,0xff
  423e7b:	mov    dl,0x80
  423e7d:	lock std 
  423e7f:	or     DWORD PTR [edx],esp
  423e81:	mov    dl,0x80
  423e83:	lock pop esi
  423e85:	(bad)  
  423e86:	out    dx,al
  423e87:	out    dx,eax
  423e88:	adc    BYTE PTR [edi-0x54],dh
  423e8b:	sub    BYTE PTR [edx-0x80],0x77
  423e8f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423e99:	or     al,0xb2
  423e9b:	test   BYTE PTR [ecx],ch
  423e9d:	push   DWORD PTR [edx+0x9fdf080]
  423ea3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423ea9:	xchg   edi,eax
  423eaa:	push   bx
  423eac:	push   ecx
  423ead:	push   ebx
  423eae:	xchg   esp,eax
  423eaf:	mov    dl,0xba
  423eb1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423eb7:	in     al,dx
  423eb8:	mov    dl,0x80
  423eba:	lock pop esi
  423ebc:	or     eax,esp
  423ebe:	and    edi,ebp
  423ec0:	or     BYTE PTR [edi+0x31],0x4d
  423ec4:	dec    ebp
  423ec5:	dec    ebp
  423ec6:	sbb    BYTE PTR [eax],0x31
  423ec9:	dec    ebp
  423eca:	dec    ebp
  423ecb:	dec    ebp
  423ecc:	push   ebx
  423ecd:	cld    
  423ece:	push   ebx
  423ecf:	xchg   esp,eax
  423ed0:	mov    dl,0x84
  423ed2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ed8:	in     al,dx
  423ed9:	mov    dl,0x9
  423edb:	loopne 0x423ecd
  423edd:	lods   al,BYTE PTR ds:[esi]
  423ede:	push   ebx
  423edf:	std    
  423ee0:	adc    al,dh
  423ee2:	lods   al,BYTE PTR ds:[esi]
  423ee3:	sub    BYTE PTR [edx-0x71],0x77
  423ee7:	lods   al,BYTE PTR ds:[esi]
  423ee8:	xor    al,0xf7
  423eeb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423ef2:	mov    dl,0x7
  423ef4:	or     al,0xb2
  423ef6:	mov    edx,0x80feff29
  423efb:	xchg   edi,eax
  423efc:	std    
  423efd:	or     DWORD PTR [edx],esp
  423eff:	inc    BYTE PTR [eax-0x11efa169]
  423f05:	push   cs
  423f06:	sub    BYTE PTR [edx-0x80],0x77
  423f0a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f14:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f1a:	xor    al,0xfd
  423f1d:	or     DWORD PTR [edx],esp
  423f1f:	mov    dl,0x80
  423f21:	lock pop esi
  423f23:	(bad)  
  423f24:	out    dx,al
  423f25:	out    dx,eax
  423f26:	adc    BYTE PTR [edi-0x54],dh
  423f29:	sub    BYTE PTR [edx-0x80],0x77
  423f2d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f37:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f3d:	xor    al,0xfd
  423f40:	or     DWORD PTR [edx],esp
  423f42:	mov    dl,0x80
  423f44:	lock push 0xffffff80
  423f47:	xchg   edi,eax
  423f48:	push   0x53
  423f4a:	push   ecx
  423f4b:	push   ebx
  423f4c:	xchg   esp,eax
  423f4d:	mov    dl,0xba
  423f4f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f55:	in     al,dx
  423f56:	mov    dl,0x80
  423f58:	lock pop esi
  423f5a:	or     eax,esp
  423f5c:	and    edi,ebp
  423f5e:	or     BYTE PTR [edi+0x7d],0x4d
  423f62:	dec    ebp
  423f63:	dec    ebp
  423f64:	sbb    BYTE PTR [eax],0x7d
  423f67:	dec    ebp
  423f68:	dec    ebp
  423f69:	dec    ebp
  423f6a:	push   ebx
  423f6b:	cld    
  423f6c:	push   ebx
  423f6d:	xchg   esp,eax
  423f6e:	mov    dl,0x84
  423f70:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f76:	in     al,dx
  423f77:	mov    dl,0x9
  423f79:	loopne 0x423f6b
  423f7b:	lods   al,BYTE PTR ds:[esi]
  423f7c:	push   ebx
  423f7d:	std    
  423f7e:	adc    al,dh
  423f80:	lods   al,BYTE PTR ds:[esi]
  423f81:	sub    BYTE PTR [edx-0x71],0x77
  423f85:	lods   al,BYTE PTR ds:[esi]
  423f86:	xor    al,0xf7
  423f89:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f90:	mov    dl,0x7
  423f92:	or     al,0xb2
  423f94:	mov    edx,0x80feff29
  423f99:	xchg   edi,eax
  423f9a:	std    
  423f9b:	or     DWORD PTR [edx],esp
  423f9d:	inc    BYTE PTR [eax-0x11efa169]
  423fa3:	push   cs
  423fa4:	sub    BYTE PTR [edx-0x80],0x77
  423fa8:	es xor al,0x26
  423fac:	push   ebx
  423fad:	adc    DWORD PTR [ebx-0x4],edx
  423fb0:	mov    dl,0xbe
  423fb2:	or     al,0xb2
  423fb4:	test   BYTE PTR [ecx],ch
  423fb6:	push   DWORD PTR [edx-0x7f950f80]
  423fbc:	xchg   edi,eax
  423fbd:	push   0x53
  423fbf:	push   ecx
  423fc0:	push   ebx
  423fc1:	xchg   esp,eax
  423fc2:	mov    dl,0xba
  423fc4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fca:	or     DWORD PTR [edx],esp
  423fcc:	mov    dl,0xec
  423fce:	ja     0x423fcd
  423fd0:	push   eax
  423fd1:	ja     0x423fd0
  423fd3:	xor    BYTE PTR [edi-0x3],0x80
  423fd7:	lock scas eax,DWORD PTR es:[edi]
  423fd9:	arpl   bp,di
  423fdb:	or     edx,ebp
  423fdd:	(bad)  
  423fde:	or     eax,0x77804d4d
  423fe3:	push   0xffffff80
  423fe5:	lock push 0x53
  423fe8:	adc    DWORD PTR [edx-0x3acf342],esi
  423fee:	mov    dl,0x84
  423ff0:	sub    edi,edi
  423ff2:	mov    dl,0x80
  423ff4:	lock scas eax,DWORD PTR es:[edi]
  423ff6:	or     DWORD PTR [edx],esp
  423ff8:	mov    dl,0x80
  423ffa:	lock ds push ebx
  423ffd:	push   ecx
  423ffe:	mov    dl,0xba
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock ds push ebx
  424007:	adc    DWORD PTR [edx-0x4d00f342],esi
  42400d:	push   eax
  42400e:	ja     0x424076
  424010:	xor    BYTE PTR [edi-0x7e],0x80
  424014:	lock adc BYTE PTR [ebx+0x11],0xb2
  424019:	mov    esi,0xb2fc530c
  42401e:	test   BYTE PTR [ecx],ch
  424020:	push   DWORD PTR [edx-0x7f7d0f80]
  424026:	xchg   edi,eax
  424027:	adc    BYTE PTR [ebx+0x51],0xb2
  42402b:	mov    edx,0xb2945329
  424030:	pop    es
  424031:	or     al,0xff
  424033:	(bad)  
  424034:	in     al,dx
  424035:	lock data16 in al,dx
  424038:	std    
  424039:	in     al,dx
  42403a:	lock inc esi
  42403c:	push   eax
  42403d:	lock inc esi
  42403f:	les    ebx,FWORD PTR ds:0x80827780
  424045:	lock adc BYTE PTR [ebx-0x4],0x53
  42404a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424050:	or     al,0xff
  424052:	mov    dl,0xec
  424054:	ja     0x42409c
  424056:	push   eax
  424057:	ja     0x42409f
  424059:	xor    BYTE PTR [edi-0x7e],0x80
  42405d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424062:	test   BYTE PTR [ecx],ch
  424064:	push   ebx
  424065:	adc    DWORD PTR [edx-0x4d00f342],esi
  42406b:	xor    al,0x1e
  42406e:	inc    ebx
  42406f:	std    
  424070:	xor    BYTE PTR [edi-0x7e],0x80
  424074:	xchg   edi,eax
  424075:	adc    BYTE PTR [ebx-0x4],0x53
  424079:	xchg   esp,eax
  42407a:	mov    dl,0x7
  42407c:	or     al,0xb2
  42407e:	test   BYTE PTR [ecx],ch
  424080:	(bad)  
  424081:	sti    
  424082:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424089:	mov    dl,0x9
  42408b:	dec    esp
  42408c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  424092:	out    dx,eax
  424093:	dec    ebp
  424094:	xlat   BYTE PTR ds:[ebx]
  424095:	and    DWORD PTR [ecx],eax
  424097:	ja     0x42401f
  424099:	dec    ebp
  42409a:	xlat   BYTE PTR ds:[ebx]
  42409b:	out    dx,eax
  42409c:	or     al,BYTE PTR [eax-0x327f1089]
  4240a2:	jp     0x4240de
  4240a4:	lea    ecx,[ebp+0x7780814d]
  4240aa:	out    dx,eax
  4240ab:	or     ch,0xf7
  4240ae:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240b4:	xlat   BYTE PTR ds:[ebx]
  4240b5:	mov    cl,BYTE PTR [ebp-0x29]
  4240b8:	jbe    0x424040
  4240ba:	test   eax,0x508d8def
  4240bf:	ja     0x424123
  4240c1:	xor    BYTE PTR [edi-0x75],0x80
  4240c5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240c9:	push   ebx
  4240ca:	push   ecx
  4240cb:	mov    dl,0xba
  4240cd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240d3:	xor    al,0x76
  4240d6:	arpl   WORD PTR [edx+0x778057d5],si
  4240dc:	out    dx,eax
  4240dd:	xor    al,0x2e
  4240e0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240e7:	lea    ecx,[ebp+0x7e531153]
  4240ed:	mov    dl,0xbe
  4240ef:	or     al,0xb2
  4240f1:	clc    
  4240f2:	sub    edi,edi
  4240f4:	(bad)  
  4240f5:	xchg   esi,eax
  4240f6:	xor    al,0x8b
  4240f9:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424100:	mov    dl,0xbe
  424102:	or     al,0xb2
  424104:	clc    
  424105:	sub    edi,edi
  424107:	(bad)  
  424108:	xchg   esi,eax
  424109:	dec    ebp
  42410a:	xlat   BYTE PTR ds:[ebx]
  42410b:	jbe    0x42415a
  42410d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424113:	sti    
  424114:	out    dx,eax
  424115:	lea    edx,[edi-0x78127880]
  42411b:	and    eax,0x80328099
  424120:	mov    ds:0x8d8d3a2e,al
  424125:	in     eax,dx
  424126:	pop    ebp
  424127:	lea    ecx,[ecx]
  424129:	(bad)  
  42412b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424131:	(bad)  
  424133:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424139:	jne    0x80cfcecc
  42413f:	dec    esp
  424140:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424146:	or     DWORD PTR [edi],ecx
  424148:	mov    esp,0xed8d8d8d
  42414d:	cli    
  42414e:	inc    ecx
  42414f:	lea    ecx,[ebp+0xf09718d]
  424155:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42415b:	push   ebp
  42415c:	or     DWORD PTR [edi],ecx
  42415e:	mov    dh,0x8d
  424160:	lea    ecx,[ebp+0x3a268e80]
  424166:	lea    ecx,[ebp-0x72cd4813]
  42416c:	cmp    dh,0x43
  42416f:	mov    eax,ds:0x5c09fbec
  424174:	or     ah,BYTE PTR [ecx]
  424176:	push   eax
  424177:	lock stc 
  424179:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42417d:	in     al,dx
  42417e:	dec    BYTE PTR [ecx]
  424180:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424187:	adc    eax,0x86f05093
  42418c:	cli    
  42418d:	dec    ebp
  42418e:	dec    ebp
  42418f:	dec    ebp
  424190:	jmp    0x42412d
  424192:	dec    edi
  424193:	outs   dx,BYTE PTR ds:[esi]
  424194:	aad    0xeb
  424196:	or     BYTE PTR [esi],0xed
  424199:	mov    bh,0xc8
  42419b:	lea    esi,[ebx]
  42419d:	jle    0x42418b
  42419f:	test   DWORD PTR [ecx],0x9a1e65c
  4241a5:	pop    esp
  4241a6:	scas   al,BYTE PTR es:[edi]
  4241a7:	and    esp,ebp
  4241a9:	push   es
  4241aa:	aad    0xbf
  4241ac:	add    edx,ebx
  4241ae:	adc    eax,0x4f87f050
  4241b3:	outs   dx,BYTE PTR ds:[esi]
  4241b4:	aad    0x92
  4241b6:	xor    BYTE PTR [eax],0xed
  4241b9:	mov    bh,0x8b
  4241bb:	lea    esi,[ebx]
  4241bd:	push   ecx
  4241be:	in     al,dx
  4241bf:	std    
  4241c0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241c4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241c8:	in     al,dx
  4241c9:	push   es
  4241ca:	aad    0x43
  4241cc:	add    edi,ebx
  4241ce:	adc    eax,0x808ae750
  4241d3:	out    0x8a,eax
  4241d5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241d9:	aad    0x6f
  4241db:	and    BYTE PTR [edi-0x73dac507],0x9
  4241e2:	pop    esp
  4241e3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241e9:	dec    ebp
  4241ea:	ja     0x424177
  4241ec:	in     eax,dx
  4241ed:	ja     0x424179
  4241ef:	out    dx,eax
  4241f0:	in     al,dx
  4241f1:	push   es
  4241f2:	pop    edi
  4241f3:	out    0x8b,eax
  4241f5:	in     al,0xa4
  4241f7:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  4241fb:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  4241ff:	xor    al,0x87
  424202:	dec    ebp
  424203:	ja     0x4241cd
  424205:	in     eax,dx
  424206:	mov    dl,0xef
  424208:	in     al,dx
  424209:	push   es
  42420a:	push   eax
  42420b:	lock xchg DWORD PTR [edi-0x19],ebx
  42420f:	enter  0x2ee4,0x80
  424213:	lock xchg BYTE PTR [ecx],cl
  424216:	pop    esp
  424217:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42421d:	dec    ebp
  42421e:	ja     0x424252
  424220:	in     eax,dx
  424221:	mov    dl,0xef
  424223:	in     al,dx
  424224:	pushf  
  424225:	push   eax
  424226:	lock xchg BYTE PTR [edi-0x69],bl
  42422a:	xor    cl,BYTE PTR [ecx]
  42422c:	jmp    0xa3ab:0x4d4d4d9a
  424233:	push   ebx
  424234:	push   0x6d
  424236:	les    ecx,FWORD PTR [ebx+edx*2]
  424239:	push   0xffffffa9
  42423b:	jo     0x4242b1
  42423d:	xchg   edi,eax
  42423e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424245:	lea    eax,[eax-0x7812de89]
  42424b:	jno    0x4241e0
  42424d:	push   ebx
  42424e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42424f:	cdq    
  424250:	fwait
  424251:	pop    edi
  424252:	pop    ds
  424253:	or     DWORD PTR [edi],ecx
  424255:	jmp    0xd574:0x638d8d8d
  42425c:	call   0xd81fdfc0
  424261:	das    
  424262:	push   ebx
  424263:	push   0x6d
  424265:	(bad)  
  424266:	fld    DWORD PTR [eax+0x77ecdd6d]
  42426c:	out    dx,eax
  42426d:	cmp    BYTE PTR [ebp+0x25],0x80
  424271:	or     dh,BYTE PTR ds:0x80155280
  424277:	fstp   QWORD PTR ds:0xeceff0ec
  42427d:	xchg   edi,eax
  42427e:	out    dx,eax
  42427f:	push   eax
  424280:	xlat   BYTE PTR ds:[ebx]
  424281:	mov    ah,BYTE PTR [ebx+0x4b]
  424284:	fucomi st,st(4)
  424286:	push   eax
  424287:	out    0x8a,eax
  424289:	push   eax
  42428a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42428b:	mov    ebx,DWORD PTR [edi-0x59]
  42428e:	mov    bl,cl
  424290:	mov    dh,0x63
  424292:	popf   
  424293:	adc    eax,0x5c096fd3
  424298:	push   ebp
  424299:	scas   al,BYTE PTR es:[edi]
  42429a:	les    ecx,FWORD PTR [eax+eax*4]
  42429d:	mov    BYTE PTR [ecx],0x55
  4242a0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242a6:	aas    
  4242a7:	in     al,dx
  4242a8:	out    0xef,eax
  4242aa:	push   eax
  4242ab:	out    0x32,eax
  4242ad:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242b3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242b9:	arpl   WORD PTR [esi],ax
  4242bb:	shr    esi,cl
  4242bd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242c1:	inc    ebx
  4242c2:	out    0xef,eax
  4242c4:	push   eax
  4242c5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242cf:	mov    esi,DWORD PTR [ebx+0x50]
  4242d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d3:	mov    esp,DWORD PTR [ebx-0x59]
  4242d6:	mov    ah,ah
  4242d8:	pop    esi
  4242d9:	(bad)  
  4242da:	into   
  4242db:	push   ebx
  4242dc:	push   0xffffffab
  4242de:	test   eax,0xeffb70a3
  4242e3:	lea    edx,[edi-0x78127880]
  4242e9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  4242f3:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  4242f7:	cmc    
  4242f8:	and    al,0x6f
  4242fa:	cmp    BYTE PTR [eax-0x587f7510],al
  424300:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424306:	cmp    dl,BYTE PTR [ebx+0x51]
  424309:	mov    dl,0xbe
  42430b:	or     al,0xab
  42430d:	push   ebx
  42430e:	lods   al,BYTE PTR ds:[esi]
  42430f:	mov    dl,0xb4
  424311:	sub    edi,edi
  424313:	adc    DWORD PTR [eax-0x10],edx
  424316:	xchg   BYTE PTR [eax-0xf7f7510],al
  42431c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424322:	mov    al,BYTE PTR [eax-0xf7f7510]
  424328:	mov    al,BYTE PTR [eax-0xf7f7510]
  42432e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424334:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424338:	fsincos 
  42433a:	lods   al,BYTE PTR ds:[esi]
  42433b:	pop    eax
  42433c:	xor    al,0x8a
  42433f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424346:	mov    dl,0xb4
  424348:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42434e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424355:	lea    ecx,[ebp+0xf09ff63]
  42435b:	sbb    ah,ch
  42435d:	lea    ecx,[ebp-0x7f750f80]
  424363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424364:	mov    dl,BYTE PTR [ebx+0x51]
  424367:	push   ebx
  424368:	lods   al,BYTE PTR ds:[esi]
  424369:	mov    dl,0xbe
  42436b:	or     al,0xb2
  42436d:	mov    ah,0x29
  42436f:	call   DWORD PTR [ecx]
  424371:	arpl   si,di
  424373:	or     DWORD PTR [edi],ecx
  424375:	jecxz  0x424363
  424377:	lea    ecx,[ebp-0x72327080]
  42437d:	lea    ecx,[ebp-0x7f756880]
  424383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424384:	mov    dl,BYTE PTR [ebx+0x7e]
  424387:	push   ebx
  424388:	lods   al,BYTE PTR ds:[esi]
  424389:	mov    dl,0x7
  42438b:	or     al,0xb2
  42438d:	mov    ah,0x29
  42438f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  424396:	in     al,dx
  424397:	lea    ecx,[ebp+0x50eff0ec]
  42439d:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243a8:	pop    es
  4243a9:	or     al,0xb2
  4243ab:	mov    ah,0x29
  4243ad:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243b4:	xor    ah,BYTE PTR [ebx-0x9]
  4243b7:	aad    0x27
  4243b9:	xor    BYTE PTR [edi-0x76],0x80
  4243bd:	xchg   edi,eax
  4243be:	mov    dl,BYTE PTR [ebx-0x64]
  4243c1:	push   ebx
  4243c2:	cld    
  4243c3:	mov    dl,0xf8
  4243c5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243cb:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243d2:	out    dx,al
  4243d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243d4:	xlat   BYTE PTR ds:[ebx]
  4243d5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243dc:	push   ebx
  4243dd:	pushf  
  4243de:	push   ebx
  4243df:	cld    
  4243e0:	mov    dl,0xf8
  4243e2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243e8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ef:	jne    0x424397
  4243f1:	jno    0x4243fc
  4243f3:	push   gs
  4243f5:	or     al,0x8d
  4243f7:	lea    eax,[eax+0x77808a77]
  4243fd:	mov    al,BYTE PTR [eax+0x77808aa7]
  424403:	mov    dl,BYTE PTR [ebx+0x7c]
  424406:	push   ebx
  424407:	add    al,0xb2
  424409:	test   BYTE PTR [ecx],ch
  42440b:	mov    dl,0xc4
  42440d:	or     al,0xff
  42440f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424416:	in     al,dx
  424417:	mov    dl,0x80
  424419:	jge    0x42448c
  42441b:	in     al,dx
  42441c:	lock out dx,eax
  42441e:	push   eax
  42441f:	lock test BYTE PTR [eax-0x687f7510],al
  424426:	mov    dl,BYTE PTR [ebx+0x51]
  424429:	push   ebx
  42442a:	pushf  
  42442b:	mov    dl,0xbe
  42442d:	or     al,0xb2
  42442f:	clc    
  424430:	sub    edi,edi
  424432:	inc    BYTE PTR [eax-0xfaf7569]
  424438:	jp     0x4243ba
  42443a:	out    dx,eax
  42443b:	push   eax
  42443c:	lock stc 
  42443e:	xor    al,0x8a
  424441:	push   ebx
  424442:	jle    0x424497
  424444:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42444a:	or     al,0xff
  42444c:	mov    dh,0x80
  42444e:	lock stc 
  424450:	arpl   si,di
  424452:	aad    0x6f
  424454:	in     al,dx
  424455:	lock out dx,eax
  424457:	push   eax
  424458:	lock jp 0x4243db
  42445b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424462:	push   ebx
  424463:	pushf  
  424464:	mov    dl,0xbe
  424466:	or     al,0xb2
  424468:	clc    
  424469:	sub    edi,edi
  42446b:	(bad)  
  42446c:	in     al,dx
  42446d:	jge    0x424490
  42446f:	jl     0x4244e8
  424471:	xor    cl,0x24
  424474:	outs   dx,DWORD PTR ds:[esi]
  424475:	cmp    ah,ch
  424477:	lock out dx,eax
  424479:	push   eax
  42447a:	lock xchg esp,eax
  42447d:	in     al,dx
  42447e:	xor    al,0x87
  424481:	xor    BYTE PTR [edi+0x21],0x80
  424485:	int    0x32
  424487:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42448d:	xor    BYTE PTR [edi+0x21],0x4d
  424491:	xlat   BYTE PTR ds:[ebx]
  424492:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  424498:	lea    ecx,[ebp+0xa]
  42449b:	and    DWORD PTR [edi+esi*2-0x7d],edi
  42449f:	add    dl,ch
  4244a1:	cs jne 0x424520
  4244a4:	ja     0x424429
  4244a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a7:	push   ss
  4244a8:	outs   dx,DWORD PTR ds:[esi]
  4244a9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244af:	mov    dl,BYTE PTR [ebx+0x51]
  4244b2:	push   ebx
  4244b3:	pushf  
  4244b4:	mov    dl,0xbe
  4244b6:	or     al,0xb2
  4244b8:	clc    
  4244b9:	sub    edi,edi
  4244bb:	(bad)  
  4244bc:	push   eax
  4244bd:	ja     0x4244b8
  4244bf:	arpl   bp,di
  4244c1:	xlat   BYTE PTR ds:[ebx]
  4244c2:	pop    ecx
  4244c3:	xor    BYTE PTR [edi-0x75],0x80
  4244c7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244cb:	push   ebx
  4244cc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244d2:	or     al,0xff
  4244d4:	mov    dl,0x80
  4244d6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244de:	push   ecx
  4244df:	mov    dl,0xf8
  4244e1:	sub    esp,ebp
  4244e3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244ea:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  4244f0:	push   DWORD PTR [esi-0x556bddf7]
  4244f6:	dec    ebp
  4244f7:	or     dh,BYTE PTR ds:0x808a7780
  4244fd:	lock mov dl,BYTE PTR [ebx-0x4]
  424501:	push   ebx
  424502:	sub    dh,BYTE PTR [edx-0x454df37a]
  424508:	sub    edi,edi
  42450a:	mov    dl,0x63
  42450c:	ja     0x424507
  42450e:	xlat   BYTE PTR ds:[ebx]
  42450f:	mov    al,0x80
  424511:	ja     0x424495
  424513:	xor    al,0x82
  424516:	push   ebx
  424517:	sub    dl,BYTE PTR [ebx-0x4]
  42451a:	mov    dl,0x86
  42451c:	or     al,0xb2
  42451e:	mov    edx,0x63fdff29
  424523:	mov    al,ds:0x4d954c09
  424528:	dec    ebp
  424529:	dec    ebp
  42452a:	xor    BYTE PTR [edi-0x76],0x80
  42452e:	lock mov dl,BYTE PTR [ebx-0x4]
  424532:	push   ebx
  424533:	sub    dh,BYTE PTR [edx-0x454df37a]
  424539:	sub    edi,edi
  42453b:	mov    dl,0x63
  42453d:	ja     0x424538
  42453f:	xlat   BYTE PTR ds:[ebx]
  424540:	mov    al,0x80
  424542:	ja     0x4244cf
  424544:	xor    al,0x8b
  424547:	push   ebx
  424548:	cld    
  424549:	push   ebx
  42454a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424550:	sub    edi,edi
  424552:	mov    dl,0x3a
  424554:	ja     0x4244dc
  424556:	mov    esi,0x8d8d3aae
  42455b:	jl     0x4245d4
  42455d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424563:	ja     0x42452d
  424565:	fld    DWORD PTR [ebp-0x587f12e3]
  42456b:	mov    al,BYTE PTR [eax+0x4538a77]
  424571:	push   ebx
  424572:	jl     0x424526
  424574:	les    ecx,FWORD PTR [edx+esi*4]
  424577:	test   BYTE PTR [ecx],ch
  424579:	inc    DWORD PTR [edx-0x72c5e442]
  42457f:	lea    eax,[eax-0xf7f7589]
  424585:	mov    dl,BYTE PTR [ebx-0x4]
  424588:	push   ebx
  424589:	sub    dh,BYTE PTR [edx-0x454df37a]
  42458f:	sub    edi,edi
  424591:	mov    dl,0x50
  424593:	ja     0x42451c
  424595:	xor    BYTE PTR [edi-0x76],0x80
  424599:	lock mov dl,BYTE PTR [ebx-0x4]
  42459d:	push   ebx
  42459e:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245a4:	sub    edi,edi
  4245a6:	mov    dl,0x50
  4245a8:	ja     0x424572
  4245aa:	xor    al,0x8a
  4245ad:	xor    BYTE PTR [edi-0x76],0x53
  4245b1:	push   ecx
  4245b2:	push   ebx
  4245b3:	jl     0x424567
  4245b5:	test   BYTE PTR [ecx],ch
  4245b7:	mov    dl,0xbe
  4245b9:	or     al,0xff
  4245bb:	std    
  4245bc:	xor    BYTE PTR [edi+0x7a],0x63
  4245c0:	std    
  4245c1:	aad    0x6f
  4245c3:	sub    dh,0x1e
  4245c6:	push   eax
  4245c7:	ja     0x424550
  4245c9:	xor    BYTE PTR [edi-0x7c],0x80
  4245cd:	out    dx,al
  4245ce:	push   ds
  4245cf:	push   eax
  4245d0:	ja     0x42459a
  4245d2:	xor    BYTE PTR [edi-0x76],0x80
  4245d6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245da:	push   ebx
  4245db:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245e1:	or     al,0xff
  4245e3:	mov    dl,0x80
  4245e5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245e9:	aad    0x55
  4245eb:	xor    BYTE PTR [edi-0x76],0x80
  4245ef:	lock mov dl,BYTE PTR [ebx+0x2a]
  4245f3:	push   ebx
  4245f4:	cld    
  4245f5:	mov    dl,0xba
  4245f7:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4245fd:	xor    al,0x87
  424600:	mov    dl,0xbe
  424602:	sub    esp,DWORD PTR [ebx-0x4e]
  424605:	aad    0x1d
  424607:	xor    al,0x87
  42460a:	xor    BYTE PTR [edi+0x21],0x80
  42460e:	int    0x32
  424610:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424616:	xchg   esi,eax
  424617:	dec    ebp
  424618:	xlat   BYTE PTR ds:[ebx]
  424619:	stc    
  42461a:	dec    ebp
  42461b:	or     ch,bh
  42461d:	les    ebx,FWORD PTR [edi]
  42461f:	xor    BYTE PTR [edi-0x38],0xec
  424623:	ja     0x424614
  424625:	xor    al,0x21
  424628:	adc    BYTE PTR [eax+0x32],0x3a
  42462c:	lea    ecx,[ebp+0xa0c6aed]
  424632:	dec    ebp
  424633:	xlat   BYTE PTR ds:[ebx]
  424634:	stc    
  424635:	dec    ebp
  424636:	xchg   esi,eax
  424637:	out    dx,eax
  424638:	push   eax
  424639:	ja     0x424603
  42463b:	xor    BYTE PTR [edi-0x76],0x80
  42463f:	lock mov dl,BYTE PTR [ebx-0x4]
  424643:	push   ebx
  424644:	sub    dh,BYTE PTR [edx-0x794dd646]
  42464a:	or     al,0xff
  42464c:	mov    dl,0x80
  42464e:	lock enter 0xb263,0x80
  424653:	ja     0x4245e0
  424655:	xor    al,0x8b
  424658:	xlat   BYTE PTR ds:[ebx]
  424659:	push   cs
  42465a:	push   ebx
  42465b:	cld    
  42465c:	push   ebx
  42465d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424663:	sub    edi,edi
  424665:	mov    dl,0x3a
  424667:	ja     0x4245ef
  424669:	les    ebx,FWORD PTR ds:0xfc532a53
  42466f:	mov    dl,0xba
  424671:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424677:	xor    al,0xc8
  42467a:	or     DWORD PTR [edx],esp
  42467c:	mov    dl,0x80
  42467e:	lock test BYTE PTR [eax-0x12],dl
  424682:	and    BYTE PTR [eax-0xf7f7489],al
  424688:	mov    edx,DWORD PTR [ebx-0x4]
  42468b:	push   ebx
  42468c:	sub    dh,BYTE PTR [edx-0x454df37a]
  424692:	sub    edi,edi
  424694:	mov    dl,0xec
  424696:	add    BYTE PTR [eax-0xf7f7589],0x8a
  42469d:	push   ebx
  42469e:	sub    dl,BYTE PTR [ebx-0x4]
  4246a1:	mov    dl,0xba
  4246a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246a9:	xor    al,0x84
  4246ac:	pop    edi
  4246ad:	out    dx,al
  4246ae:	and    BYTE PTR [ecx],cl
  4246b0:	dec    edi
  4246b1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246b7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246bd:	xchg   BYTE PTR [ecx],ch
  4246bf:	add    DWORD PTR [ecx],esp
  4246c1:	add    esi,ebp
  4246c3:	lea    ecx,[ebp-0x7f4d0073]
  4246c9:	lock not DWORD PTR [edi-0xa]
  4246cd:	and    al,0x6f
  4246cf:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246d5:	xor    BYTE PTR [edi-0x76],0x80
  4246d9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246dd:	push   ebx
  4246de:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246e4:	sub    edi,edi
  4246e6:	mov    dl,0x5f
  4246e8:	ja     0x424670
  4246ea:	xlat   BYTE PTR ds:[ebx]
  4246eb:	out    dx,eax
  4246ec:	xor    BYTE PTR [edi-0x75],0x80
  4246f0:	lock mov eax,esp
  4246f3:	outs   dx,DWORD PTR ds:[esi]
  4246f4:	xor    BYTE PTR [edi-0x76],0x80
  4246f8:	lock mov dl,BYTE PTR [ebx+0x2a]
  4246fc:	push   ebx
  4246fd:	cld    
  4246fe:	stos   DWORD PTR es:[edi],eax
  4246ff:	mov    dl,0xba
  424701:	sub    DWORD PTR [edx-0x56f37a],esi
  424707:	mov    dl,0xa3
  424709:	jo     0x424706
  42470b:	out    dx,eax
  42470c:	lea    edx,[edi-0x78127880]
  424712:	xor    eax,0xf68a777c
  424717:	and    al,0x6f
  424719:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42471d:	cmc    
  42471e:	and    al,0x6f
  424720:	cmp    BYTE PTR [eax+0x77502177],al
  424726:	and    DWORD PTR [ecx+0x77806a80],ebx
  42472c:	mov    al,BYTE PTR [eax+0xde28a97]
  424732:	pusha  
  424733:	and    ah,BYTE PTR [edi+ebp*2]
  424736:	cmp    BYTE PTR [ebx-0x4e],dl
  424739:	test   eax,0xf8b27e53
  42473e:	sub    DWORD PTR [edx-0x400f37a],esi
  424744:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42474b:	loopne 0x424787
  42474d:	lea    ecx,[ebp-0x7f108880]
  424753:	xchg   edi,eax
  424754:	out    dx,eax
  424755:	in     al,dx
  424756:	or     ah,BYTE PTR [ebp-0x65]
  424759:	push   eax
  42475a:	xchg   edi,eax
  42475b:	enter  0x777c,0x8b
  42475f:	icebp  
  424760:	and    al,0x6f
  424762:	cmp    BYTE PTR [eax-0x687f7489],al
  424768:	mov    edx,DWORD PTR [ebx+0x7e]
  42476b:	mov    dl,0xf8
  42476d:	sub    DWORD PTR [ebx-0x4e],edx
  424770:	mov    dl,0x86
  424772:	or     al,0xff
  424774:	sti    
  424775:	adc    BYTE PTR [edi-0x75187f76],0x53
  42477c:	mov    dh,0x53
  42477e:	or     eax,0xb229bcb2
  424783:	pop    es
  424784:	or     al,0xff
  424786:	pushf  
  424787:	and    bh,0xc8
  42478a:	pop    edi
  42478b:	xchg   ebp,eax
  42478c:	jl     0x42476b
  42478e:	or     DWORD PTR [edi],ecx
  424790:	mov    bl,0x3a
  424792:	lea    ecx,[ebp-0x7f376880]
  424798:	ja     0x424789
  42479a:	in     al,dx
  42479b:	jmp    0x9780:0x8d8d8d2e
  4247a2:	out    dx,eax
  4247a3:	and    bh,0xc8
  4247a6:	inc    ebx
  4247a7:	fwait
  4247a8:	push   ebp
  4247a9:	and    bh,0x8a
  4247ac:	xchg   ebx,eax
  4247ad:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247b4:	mov    dl,0x61
  4247b6:	or     al,0xb2
  4247b8:	mov    ah,0x29
  4247ba:	inc    DWORD PTR [esi]
  4247bc:	push   eax
  4247bd:	xchg   edi,eax
  4247be:	and    DWORD PTR [ebx-0x64],0x9
  4247c2:	jns    0x80cfd502
  4247c8:	xchg   edi,eax
  4247c9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247cf:	push   ebx
  4247d0:	or     eax,0xb20c07b2
  4247d5:	mov    esp,0x509cff29
  4247da:	xchg   edi,eax
  4247db:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247df:	repz and al,0x6f
  4247e2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247e8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247eb:	push   ebx
  4247ec:	or     eax,0xb20c07b2
  4247f1:	mov    esp,0xbe9cff29
  4247f6:	add    eax,0x808d8d8d
  4247fb:	xchg   edi,eax
  4247fc:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424802:	or     eax,0x2b2b653
  424807:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42480d:	add    ebx,edx
  42480f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424815:	in     eax,dx
  424816:	jmp    0x43cfd5a8
  42481b:	ret    0xe501
  42481e:	or     ch,bh
  424820:	push   eax
  424821:	xlat   BYTE PTR ds:[ebx]
  424822:	stc    
  424823:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424827:	clc    
  424828:	dec    ebp
  424829:	or     DWORD PTR [ebp-0x7868af73],ecx
  42482f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424836:	xchg   esp,ebp
  424838:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424842:	pop    esp
  424843:	sbb    esi,DWORD PTR [edx+0xba22107]
  424849:	mul    BYTE PTR [edi+ebp*2]
  42484c:	cmp    BYTE PTR [eax-0x29],dl
  42484f:	xchg   DWORD PTR [eax-0x69],edx
  424852:	xchg   BYTE PTR [eax-0x287f7869],al
  424858:	xchg   DWORD PTR [ebx-0x4a],edx
  42485b:	in     eax,dx
  42485c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424862:	add    ch,BYTE PTR [ecx]
  424864:	(bad)  
  424865:	jle    0x424853
  424867:	xchg   edi,eax
  424868:	out    dx,eax
  424869:	push   eax
  42486a:	xchg   edi,eax
  42486b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424871:	and    DWORD PTR [ebx-0x4a],edx
  424874:	in     eax,dx
  424875:	or     ecx,DWORD PTR ds:0xb22902b2
  42487b:	pop    es
  42487c:	or     al,0xff
  42487e:	jle    0x424800
  424880:	xlat   BYTE PTR ds:[ebx]
  424881:	xchg   BYTE PTR [ebx-0x3e],ah
  424884:	xlat   BYTE PTR ds:[ebx]
  424885:	rol    BYTE PTR [eax-0x287fde69],0x21
  42488c:	push   ebx
  42488d:	mov    dh,0xed
  42488f:	or     ecx,DWORD PTR ds:0xb22902b2
  424895:	pop    es
  424896:	or     al,0xff
  424898:	jle    0x42481a
  42489a:	xlat   BYTE PTR ds:[ebx]
  42489b:	xchg   BYTE PTR [ebx-0x3e],ah
  42489e:	xlat   BYTE PTR ds:[ebx]
  42489f:	out    dx,eax
  4248a0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248a7:	aam    0xed
  4248a9:	jl     0x4248b7
  4248ab:	dec    ebp
  4248ac:	lock stc 
  4248ae:	or     DWORD PTR [edi+0x12],ecx
  4248b1:	dec    ebp
  4248b2:	dec    ebp
  4248b3:	dec    ebp
  4248b4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ba:	adc    bh,0x8b
  4248bd:	push   ebx
  4248be:	mov    dh,0xed
  4248c0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248c6:	pop    es
  4248c7:	or     al,0xff
  4248c9:	jle    0x42484b
  4248cb:	xlat   BYTE PTR ds:[ebx]
  4248cc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248d2:	pushf  
  4248d3:	in     eax,0xd3
  4248d5:	sub    eax,0x808a9780
  4248da:	xlat   BYTE PTR ds:[ebx]
  4248db:	mov    dl,BYTE PTR [ebx-0x4a]
  4248de:	in     eax,dx
  4248df:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248e5:	add    ch,BYTE PTR [ecx]
  4248e7:	in     al,dx
  4248e8:	je     0x4248e9
  4248ea:	jle    0x42486c
  4248ec:	popf   
  4248ed:	out    dx,al
  4248ee:	arpl   WORD PTR [ebx],ax
  4248f0:	or     DWORD PTR [edi-0x12],ecx
  4248f3:	dec    ebp
  4248f4:	dec    ebp
  4248f5:	dec    ebp
  4248f6:	mov    ds:0x53847780,eax
  4248fb:	mov    dl,0x80
  4248fd:	lock test ch,ch
  424900:	add    eax,0xa6c4ab0d
  424905:	xor    BYTE PTR [edi-0x76],0x53
  424909:	mov    dl,0x80
  42490b:	lock mov dl,BYTE PTR [ebx+0x51]
  42490f:	mov    dl,0xba
  424911:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424917:	test   eax,0x8deffb70
  42491c:	xchg   edi,eax
  42491d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424924:	lea    edi,[edi+esi*2-0x76]
  424928:	mul    BYTE PTR [edi+ebp*2]
  42492b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42492f:	cmc    
  424930:	and    al,0x6f
  424932:	cmp    BYTE PTR [eax-0xf7f7589],al
  424938:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42493e:	and    ah,BYTE PTR [edi+ebp*2]
  424941:	cmp    BYTE PTR [ebx-0x4],dl
  424944:	mov    dl,0x86
  424946:	or     al,0xae
  424948:	push   ebx
  424949:	(bad)  
  42494a:	mov    dl,0xba
  42494c:	sub    edi,edi
  42494e:	mov    dl,0x50
  424950:	ja     0x4248d6
  424952:	xor    BYTE PTR [edi-0x76],0x80
  424956:	lock mov dl,BYTE PTR [ebx-0x4]
  42495a:	mov    dl,0x86
  42495c:	or     al,0x53
  42495e:	(bad)  
  42495f:	mov    dl,0xba
  424961:	sub    edi,edi
  424963:	mov    dl,0x50
  424965:	ja     0x42495e
  424967:	and    bh,0x25
  42496a:	xor    BYTE PTR [edi-0x79],0x80
  42496e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424972:	push   eax
  424973:	ja     0x4248fc
  424975:	mov    ds:0xa3f68777,al
  42497a:	outs   dx,DWORD PTR ds:[esi]
  42497b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424981:	enter  0xb253,0x50
  424985:	ja     0x42494f
  424987:	mov    ds:0xe9f6c877,al
  42498c:	outs   dx,DWORD PTR ds:[esi]
  42498d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  424993:	xor    dl,BYTE PTR [ebx-0x4e]
  424996:	push   eax
  424997:	ja     0x4249cb
  424999:	mov    ds:0x24fa3277,al
  42499e:	outs   dx,DWORD PTR ds:[esi]
  42499f:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249a5:	stc    
  4249a6:	push   ebx
  4249a7:	mov    dl,0x50
  4249a9:	ja     0x4249a4
  4249ab:	mov    ds:0x24f6f977,al
  4249b0:	out    dx,al
  4249b1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249b5:	jmp    0x807ad67c
  4249ba:	ja     0x4249ab
  4249bc:	dec    edi
  4249bd:	push   0x9
  4249bf:	movd   mm5,DWORD PTR [edi]
  4249c2:	lea    ecx,[ebp+0x4f217780]
  4249c8:	push   0x9
  4249ca:	(bad)  
  4249cc:	das    
  4249cd:	lea    ecx,[ebp+0x4f1d7780]
  4249d3:	push   0x9
  4249d5:	mov    db5,edi
  4249d8:	lea    ecx,[ebp-0x7fda8880]
  4249de:	ja     0x424a05
  4249e0:	xor    al,0xef
  4249e3:	mov    dl,0x86
  4249e5:	or     al,0x57
  4249e7:	(bad)  
  4249e8:	hlt    
  4249e9:	lea    ecx,[ebp+0x93a5fb9]
  4249ef:	dec    edi
  4249f0:	cmp    ch,BYTE PTR [edi]
  4249f2:	lea    ecx,[ebp-0x7f758880]
  4249f8:	lock mov dl,BYTE PTR [ebx-0x4]
  4249fc:	mov    dl,0x86
  4249fe:	or     al,0x53
  424a00:	(bad)  
  424a01:	mov    dl,0xba
  424a03:	sub    edi,edi
  424a05:	mov    dl,0x50
  424a07:	ja     0x424a00
  424a09:	xor    BYTE PTR [edi-0x76],0x80
  424a0d:	ja     0x424999
  424a0f:	xor    BYTE PTR [edi-0x11],0x80
  424a13:	lock out dx,eax
  424a15:	in     al,dx
  424a16:	jge    0x424a7d
  424a18:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a1f:	push   0x9
  424a21:	cvtpi2ps xmm5,mm6
  424a24:	lea    ecx,[ebp-0x9858884]
  424a2a:	and    al,0x79
  424a2c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a33:	jp     0x424a88
  424a35:	cld    
  424a36:	push   ebx
  424a37:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a3d:	sub    edi,edi
  424a3f:	adc    BYTE PTR [eax-0x59],0x7a
  424a43:	xor    BYTE PTR [edi-0x76],0x80
  424a47:	ja     0x4249d3
  424a49:	or     dh,0x2e
  424a4c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a52:	stos   BYTE PTR es:[edi],al
  424a53:	gs in  al,dx
  424a55:	jno    0x4249d7
  424a57:	ja     0x4249e3
  424a59:	xor    BYTE PTR [edi-0x76],0x80
  424a5d:	into   
  424a5e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a65:	xchg   edi,eax
  424a66:	and    DWORD PTR [ebx-0x5c],esp
  424a69:	xlat   BYTE PTR ds:[ebx]
  424a6a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a71:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a7f:	or     eax,0xb20cbeb2
  424a84:	clc    
  424a85:	sub    edi,edi
  424a87:	mov    dh,0x80
  424a89:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424a90:	dec    ebp
  424a91:	or     ah,BYTE PTR ds:0x8021f080
  424a97:	xchg   edx,eax
  424a98:	xchg   ebp,eax
  424a99:	cmp    BYTE PTR [edi+0xa],0x43
  424a9d:	std    
  424a9e:	xchg   esi,eax
  424a9f:	in     al,dx
  424aa0:	je     0x424aac
  424aa2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424aa8:	lock and eax,0x3a36ce80
  424aae:	lea    ecx,[ebp-0x61b2e2b0]
  424ab4:	xchg   ebp,eax
  424ab5:	dec    ebp
  424ab6:	xlat   BYTE PTR ds:[ebx]
  424ab7:	out    dx,eax
  424ab8:	xchg   ebx,eax
  424ab9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424abf:	xchg   ebx,eax
  424ac0:	gs in  al,dx
  424ac2:	xchg   esp,eax
  424ac3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ac7:	add    DWORD PTR [ebp+0x71],esi
  424aca:	sbb    eax,0x801d7750
  424acf:	ja     0x424a5b
  424ad1:	xor    al,0x8a
  424ad4:	push   ebx
  424ad5:	cld    
  424ad6:	in     eax,dx
  424ad7:	add    eax,0x29bab20d
  424adc:	mov    dl,0x86
  424ade:	or     al,0xff
  424ae0:	mov    dl,0x9
  424ae2:	pop    esp
  424ae3:	fisubr DWORD PTR [edi+0x50]
  424ae6:	xchg   edi,eax
  424ae7:	and    eax,0xf09fd63
  424aec:	mov    esp,0x808d8d8d
  424af1:	ja     0x424a7d
  424af3:	xor    al,0x8a
  424af6:	push   ebx
  424af7:	cld    
  424af8:	in     eax,dx
  424af9:	add    eax,0x29bab20d
  424afe:	mov    dl,0x86
  424b00:	or     al,0xff
  424b02:	mov    dl,0x50
  424b04:	ja     0x424a89
  424b06:	xor    BYTE PTR [edi-0x75],0x80
  424b0a:	lock mov ebp,ebp
  424b0d:	add    eax,0xb2fc530d
  424b12:	mov    edx,0xc86b229
  424b17:	push   DWORD PTR [edx+0x6fda5c09]
  424b1d:	inc    ebx
  424b1e:	std    
  424b1f:	pop    edi
  424b20:	lock or DWORD PTR [ecx],0xffffffce
  424b24:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b2a:	sbb    eax,0x50efb2ed
  424b2f:	lock sbb eax,0xf080ecc4
  424b35:	sbb    eax,0x805dd880
  424b3a:	push   cs
  424b3b:	push   eax
  424b3c:	ja     0x424ac0
  424b3e:	jge    0x424b8f
  424b40:	not    ebp
  424b42:	xor    BYTE PTR [ebx-0x9],cl
  424b45:	xor    edi,ebx
  424b47:	in     al,dx
  424b48:	ja     0x424acc
  424b4a:	les    ecx,FWORD PTR [eax+eax*4]
  424b4d:	sti    
  424b4e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b54:	or     al,BYTE PTR [esi-0x7272d05d]
  424b5a:	xor    BYTE PTR [edi+0x1d],0x80
  424b5e:	jge    0x424b4f
  424b60:	push   eax
  424b61:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b69:	push   ebx
  424b6a:	push   ecx
  424b6b:	in     eax,dx
  424b6c:	ret    0xb20d
  424b6f:	mov    esi,0x29f8b20c
  424b74:	(bad)  
  424b75:	(bad)  
  424b76:	pop    edi
  424b77:	lock adc ch,0x1d
  424b7b:	xor    al,0xef
  424b7e:	in     al,dx
  424b7f:	jge    0x424ba2
  424b81:	dec    ebp
  424b82:	xlat   BYTE PTR ds:[ebx]
  424b83:	add    BYTE PTR [eax-0x13691193],0x74
  424b8a:	or     al,BYTE PTR [esi-0x7272137b]
  424b90:	xor    BYTE PTR [edi+0x1d],0x80
  424b94:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424b9b:	mov    dl,0xbe
  424b9d:	or     al,0xed
  424b9f:	ret    0xed0d
  424ba2:	push   0x3d
  424ba4:	mov    dl,0xf8
  424ba6:	sub    edi,edi
  424ba8:	(bad)  
  424ba9:	cmp    dh,al
  424bab:	add    DWORD PTR [eax+0x77502597],0x1d
  424bb2:	xor    BYTE PTR [edi-0x75],0x80
  424bb6:	lock mov ebp,ebp
  424bb9:	add    eax,0xb2fc530d
  424bbe:	mov    edx,0xc86b229
  424bc3:	push   DWORD PTR [edx+0x925f080]
  424bc9:	pop    esp
  424bca:	jg     0x424c3b
  424bcc:	inc    ebx
  424bcd:	std    
  424bce:	pop    edi
  424bcf:	lock or DWORD PTR [ecx],0x4c
  424bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bd4:	dec    ebp
  424bd5:	dec    ebp
  424bd6:	dec    ebp
  424bd7:	or     dh,0x26
  424bda:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424be0:	push   ebx
  424be1:	xor    al,0x32
  424be4:	or     dh,0x32
  424be7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bed:	stos   BYTE PTR es:[edi],al
  424bee:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424bf5:	or     eax,0xb20cbeb2
  424bfa:	clc    
  424bfb:	sub    edi,edi
  424bfd:	mov    dh,0x80
  424bff:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c06:	dec    ebp
  424c07:	or     ah,BYTE PTR ds:0xf096a4f
  424c0d:	pushf  
  424c0e:	or     al,0x8d
  424c10:	lea    eax,[eax-0x317fda69]
  424c16:	cmp    BYTE PTR [edx],0x8d
  424c19:	lea    eax,[eax+0x53fd808d]
  424c1f:	push   ecx
  424c20:	in     eax,dx
  424c21:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c27:	test   BYTE PTR [ecx],ch
  424c29:	(bad)  
  424c2a:	std    
  424c2b:	or     DWORD PTR [edi],ecx
  424c2d:	jb     0x424c69
  424c2f:	lea    ecx,[ebp-0x7f758880]
  424c35:	lock mov dl,BYTE PTR [ebx-0x4]
  424c39:	in     eax,dx
  424c3a:	add    eax,0xc86b20d
  424c3f:	mov    dl,0xba
  424c41:	sub    edi,edi
  424c43:	mov    dl,0x50
  424c45:	ja     0x424bcd
  424c47:	pop    esi
  424c48:	imul   ebp,ecx,0x7d01386f
  424c4e:	test   BYTE PTR [eax-0x10],dl
  424c51:	pop    esi
  424c52:	push   eax
  424c53:	lock data16 jl 0x424cce
  424c57:	inc    esi
  424c58:	sbb    ecx,ebp
  424c5a:	outs   dx,DWORD PTR ds:[esi]
  424c5b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c5f:	call   0x507abc4d
  424c64:	ja     0x424cbc
  424c66:	jl     0x424cdf
  424c68:	push   0xfffffff6
  424c6a:	and    al,0x6f
  424c6c:	cmp    BYTE PTR [ebx+0x70],dl
  424c6f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c76:	mov    ds:0x8df4c4c2,al
  424c7b:	lea    edi,[ecx+0x75f01650]
  424c81:	dec    ebp
  424c82:	dec    ebp
  424c83:	dec    ebp
  424c84:	xchg   edx,eax
  424c85:	in     eax,dx
  424c86:	retf   
  424c87:	outs   dx,DWORD PTR ds:[esi]
  424c88:	in     al,0xb8
  424c8a:	pusha  
  424c8b:	mov    ecx,0x50386fe9
  424c90:	dec    edi
  424c91:	xchg   ebp,eax
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	dec    ebp
  424c95:	push   eax
  424c96:	dec    edi
  424c97:	mov    ebp,0x504d4d4d
  424c9c:	ja     0x424cf8
  424c9e:	push   eax
  424c9f:	ja     0x424cb7
  424ca1:	add    DWORD PTR [edx+0xa96018a],edx
  424ca7:	push   eax
  424ca8:	ja     0x424cd8
  424caa:	push   eax
  424cab:	ja     0x424ce3
  424cad:	jl     0x424cfe
  424caf:	or     cl,BYTE PTR [ebp+0x4d]
  424cb2:	dec    ebp
  424cb3:	bnd jmp 0x1928528
  424cb9:	popf   
  424cba:	dec    ebp
  424cbb:	dec    ebp
  424cbc:	dec    ebp
  424cbd:	push   eax
  424cbe:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cc4:	dec    edi
  424cc5:	lods   eax,DWORD PTR ds:[esi]
  424cc6:	dec    ebp
  424cc7:	dec    ebp
  424cc8:	dec    ebp
  424cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cca:	jmp    0x4fbe853e
  424ccf:	mov    ch,0x4d
  424cd1:	dec    ebp
  424cd2:	dec    ebp
  424cd3:	sbb    ecx,ebp
  424cd5:	outs   dx,DWORD PTR ds:[esi]
  424cd6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cda:	dec    ebp
  424cdb:	dec    ebp
  424cdc:	dec    ebp
  424cdd:	icebp  
  424cde:	jmp    0x4fbe8552
  424ce3:	push   edx
  424ce4:	dec    ebp
  424ce5:	dec    ebp
  424ce6:	dec    ebp
  424ce7:	sbb    ecx,ebp
  424ce9:	outs   dx,DWORD PTR ds:[esi]
  424cea:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cee:	dec    ebp
  424cef:	dec    ebp
  424cf0:	dec    ebp
  424cf1:	call   0x507abcdf
  424cf6:	add    ebp,ebx
  424cf8:	dec    ebp
  424cf9:	dec    ebp
  424cfa:	dec    ebp
  424cfb:	jl     0x424d4c
  424cfd:	in     eax,0x4d
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	fucompp 
  424d03:	outs   dx,DWORD PTR ds:[esi]
  424d04:	cmp    BYTE PTR [eax-0x69],dl
  424d07:	int    0x7c
  424d09:	ja     0x424d1a
  424d0b:	nop
  424d0c:	jmp    0xf0928580
  424d11:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d15:	cmc    
  424d16:	jmp    0xf092858a
  424d1b:	push   ds
  424d1c:	jl     0x424d95
  424d1e:	es (bad) 
  424d20:	jmp    0x77be8594
  424d25:	mul    BYTE PTR ds:[edi+ebp*2]
  424d29:	cmp    BYTE PTR [ebx+0x6a],dl
  424d2c:	add    BYTE PTR [ecx+0x4f],0xa
  424d30:	dec    ebp
  424d31:	dec    ebp
  424d32:	dec    ebp
  424d33:	mov    dl,0xbe
  424d35:	or     al,0xcd
  424d37:	add    eax,0x2f4110c4
  424d3c:	inc    ebp
  424d3d:	dec    ebp
  424d3e:	dec    ebp
  424d3f:	dec    ebp
  424d40:	ins    DWORD PTR es:[edi],dx
  424d41:	in     eax,dx
  424d42:	mov    ebx,DWORD PTR [ebx]
  424d44:	in     al,0x2
  424d46:	or     dh,0x32
  424d49:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d4f:	dec    ebp
  424d50:	dec    ebp
  424d51:	dec    ebp
  424d52:	xchg   esi,eax
  424d53:	dec    ebp
  424d54:	or     ch,dh
  424d56:	sbb    BYTE PTR [edx],0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	stos   BYTE PTR es:[edi],al
  424d63:	or     cl,BYTE PTR [ebp-0x6a]
  424d66:	out    dx,eax
  424d67:	push   eax
  424d68:	ja     0x424d67
  424d6a:	add    DWORD PTR [edi-0x7a],esi
  424d6d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d73:	lea    ecx,[ebp-0x7f]
  424d76:	xor    BYTE PTR [edi-0x3],0x4d
  424d7a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d84:	add    eax,0xc86b20d
  424d89:	mov    dl,0xba
  424d8b:	sub    edi,edi
  424d8d:	mov    dl,0x50
  424d8f:	ja     0x424d40
  424d91:	xor    al,0x8a
  424d94:	xor    BYTE PTR [edi-0x76],0x53
  424d98:	push   ecx
  424d99:	in     eax,dx
  424d9a:	xor    cl,BYTE PTR ds:0xb22984b2
  424da0:	mov    esi,0x80fdff0c
  424da5:	ja     0x424d2d
  424da7:	arpl   WORD PTR [edx+0x775097d5],si
  424dad:	jbe    0x424d73
  424daf:	or     DWORD PTR [eax+0x76f0808d],eax
  424db5:	push   eax
  424db6:	ja     0x424d3e
  424db8:	xor    BYTE PTR [edi-0x7a],0x63
  424dbc:	mov    dl,0xd5
  424dbe:	iret   
  424dbf:	or     BYTE PTR [edx],0x1d
  424dc2:	sbb    BYTE PTR [edx],0x26
  424dc5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424dcb:	stc    
  424dcc:	sbb    BYTE PTR [edx],0x26
  424dcf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424dd5:	arpl   WORD PTR [esi],cx
  424dd7:	xlat   BYTE PTR ds:[ebx]
  424dd8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dde:	lea    eax,[eax-0x557fde69]
  424de4:	cmp    eax,0xa500eec
  424de9:	and    eax,0x808b7780
  424dee:	lock mov edx,DWORD PTR [ebx-0x4]
  424df2:	in     eax,dx
  424df3:	add    eax,0xc86b20d
  424df8:	mov    dl,0xba
  424dfa:	sub    edi,edi
  424dfc:	mov    dl,0x50
  424dfe:	ja     0x424daf
  424e00:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e07:	enter  0x4d4d,0x4f
  424e0b:	push   0x9
  424e0d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e14:	and    eax,0x86932a80
  424e19:	sub    eax,0x4f4d4dc8
  424e1e:	push   0x9
  424e20:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e27:	and    eax,0x94802a80
  424e2c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e32:	push   0x9
  424e34:	mov    cr1,ebp
  424e37:	lea    ecx,[ebp-0x6e796c65]
  424e3d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e40:	dec    edi
  424e41:	push   0x9
  424e43:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e4a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e51:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e57:	lea    eax,[ecx]
  424e59:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e60:	lock and DWORD PTR [ebp-0x62],ecx
  424e64:	xchg   ebp,eax
  424e65:	xchg   ebx,eax
  424e66:	dec    ebp
  424e67:	or     ah,BYTE PTR ds:0x3a82ce80
  424e6d:	lea    ecx,[ebp-0x27f7280]
  424e73:	push   ebx
  424e74:	push   ecx
  424e75:	in     eax,dx
  424e76:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e7c:	test   BYTE PTR [ecx],ch
  424e7e:	(bad)  
  424e7f:	std    
  424e80:	aad    0x0
  424e82:	jl     0x424efb
  424e84:	out    dx,eax
  424e85:	mul    BYTE PTR [ebx]
  424e87:	outs   dx,DWORD PTR ds:[esi]
  424e88:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e8e:	out    dx,eax
  424e8f:	xor    BYTE PTR [edi+0x25],0xb2
  424e93:	mov    esi,0xc405a20c
  424e98:	hlt    
  424e99:	lea    ecx,[ebp+0x197d30b9]
  424e9f:	sub    BYTE PTR [ebp+0x3d],0x80
  424ea3:	lock sub eax,0x925074ec
  424ea9:	adc    eax,0x7c2d7780
  424eae:	(bad)  
  424eaf:	in     al,dx
  424eb0:	lea    ecx,[ebp+0x2d77808d]
  424eb6:	push   eax
  424eb7:	popf   
  424eb8:	out    dx,al
  424eb9:	xor    BYTE PTR [edi+0x71],0x80
  424ebd:	lock sub eax,0x80ef9250
  424ec3:	ja     0x424eda
  424ec5:	xor    al,0x2d
  424ec8:	push   eax
  424ec9:	xchg   edx,eax
  424eca:	and    esp,eax
  424ecc:	adc    eax,0x80257780
  424ed1:	ins    DWORD PTR es:[edi],dx
  424ed2:	cmp    eax,0xec2df080
  424ed7:	je     0x424f29
  424ed9:	xchg   edx,eax
  424eda:	adc    eax,0xed2d7780
  424edf:	sub    eax,0xf7777c8d
  424ee4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424eea:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424ef4:	or     al,0x53
  424ef6:	push   0xffffffab
  424ef8:	test   eax,0x8d25fb70
  424efd:	xchg   edi,eax
  424efe:	add    BYTE PTR [edi+0x5c099696],0x92
  424f05:	adc    eax,0x1def7501
  424f0a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f0e:	xchg   ebx,eax
  424f0f:	fwait
  424f10:	jl     0x424f89
  424f12:	mov    dh,dh
  424f14:	and    al,0x6f
  424f16:	cmp    BYTE PTR [eax-0x10],dl
  424f19:	mov    ecx,DWORD PTR [edi+0x70]
  424f1c:	aad    0xb5
  424f1e:	icebp  
  424f1f:	and    ah,BYTE PTR [edi+ebp*2]
  424f22:	cmp    BYTE PTR [eax-0x187fde83],al
  424f28:	out    dx,eax
  424f29:	in     al,dx
  424f2a:	retf   
  424f2b:	pop    edi
  424f2c:	out    0x21,eax
  424f2e:	in     al,0xcf
  424f30:	sbb    ch,0xef
  424f33:	in     al,dx
  424f34:	retf   
  424f35:	in     al,dx
  424f36:	out    0xef,eax
  424f38:	pop    edi
  424f39:	out    0x21,eax
  424f3b:	in     al,0x7b
  424f3d:	xor    al,0x8a
  424f40:	and    bh,0x8a
  424f43:	push   ebx
  424f44:	(bad)  
  424f45:	in     eax,dx
  424f46:	dec    ebx
  424f47:	or     eax,0x8029bcb2
  424f4c:	mov    al,ds:0xff0cc4b2
  424f51:	push   es
  424f52:	in     eax,dx
  424f53:	mov    edx,0xeeb2ed8a
  424f58:	in     eax,dx
  424f59:	push   0x3d
  424f5b:	jnp    0x424f0f
  424f5d:	popa   
  424f5e:	sub    edi,edi
  424f60:	retf   
  424f61:	mov    ds:0x6f24f64b,al
  424f66:	cmp    BYTE PTR [edx],bh
  424f68:	out    0x8a,eax
  424f6a:	xor    al,0x8a
  424f6d:	and    bh,0x8a
  424f70:	push   ebx
  424f71:	(bad)  
  424f72:	in     eax,dx
  424f73:	dec    ebx
  424f74:	or     eax,0xb20cbeb2
  424f79:	mov    esp,0x632aff29
  424f7e:	lock mov esp,esp
  424f81:	dec    edx
  424f82:	push   ebx
  424f83:	push   0xffffffab
  424f85:	mov    ds:0x8deffb70,eax
  424f8a:	xchg   edi,eax
  424f8b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424f92:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424f99:	stc    
  424f9a:	in     al,dx
  424f9b:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fa2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fa8:	call   0x8a77:0x7c8dee71
  424faf:	stc    
  424fb0:	lods   eax,DWORD PTR ds:[esi]
  424fb1:	lea    ecx,[ebp-0x5088884]
  424fb7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fbd:	dec    ebx
  424fbe:	aam    0x8d
  424fc0:	lea    edi,[edi+esi*2-0x7e]
  424fc4:	in     al,dx
  424fc5:	lea    ecx,[ebp-0x79888373]
  424fcb:	mov    dl,0xb9
  424fcd:	lea    ecx,[ebp-0x7f788884]
  424fd3:	xchg   esi,eax
  424fd4:	lea    ecx,[ebp+0x332777c]
  424fda:	mov    bh,0x8d
  424fdc:	lea    eax,[eax-0x73a17510]
  424fe2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424fe8:	lock mov edx,DWORD PTR [ebx+0x72]
  424fec:	dec    ebx
  424fed:	add    eax,0xfd809b99
  424ff2:	mov    ds:0x8d90f1ba,al
  424ff7:	lea    esp,[edx-0x7238d090]
  424ffd:	lea    esp,[edx-0x725a2bfb]
  425003:	lea    esp,[edx-0x72c2204e]
  425009:	lea    edi,[edi+esi*2-0x38]
  42500d:	div    eax
  42500f:	lea    ecx,[ebp-0x24758884]
  425015:	aad    0x8d
  425017:	lea    edi,[edi+esi*2-0x75]
  42501b:	sbb    DWORD PTR [ecx-0x73],esi
  42501e:	lea    eax,[eax-0x687f7489]
  425024:	mov    dh,BYTE PTR [edi]
  425026:	dec    ecx
  425027:	popf   
  425028:	lea    ecx,[ebp+0x77ecfb53]
  42502e:	enter  0xb680,0x57
  425032:	jnp    0x425041
  425034:	lea    ecx,[ebp-0x68af08bd]
  42503a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425040:	out    dx,eax
  425041:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425048:	nop
  425049:	adc    BYTE PTR [ecx-0x80],dh
  42504c:	ja     0x425080
  42504e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425055:	lea    edx,[ebx-0x5]
  425058:	adc    BYTE PTR [edi-0xe04007a],0x3
  42505f:	(bad)  [ebp-0x7f08bc73]
  425065:	ja     0x425060
  425067:	in     al,dx
  425068:	(bad)  
  425069:	icebp  
  42506a:	test   al,0x55
  42506c:	lea    ecx,[ebp-0x681308bd]
  425072:	test   BYTE PTR [eax-0x287f7c89],al
  425078:	jno    0x424ffa
  42507a:	out    0x82,eax
  42507c:	mov    ds:0x8d9630c2,al
  425081:	lea    esi,[ebx]
  425083:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42508d:	inc    ebx
  42508e:	ret    0x7253
  425091:	dec    ebx
  425092:	dec    ebx
  425093:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  42509a:	lea    esi,[ebx]
  42509c:	sti    
  42509d:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250a4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250aa:	dec    esp
  4250ab:	mov    ds:0xab4d4d4d,eax
  4250b0:	test   eax,0x8d21fb70
  4250b5:	xchg   edi,eax
  4250b6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250bd:	fwait
  4250be:	jl     0x425137
  4250c0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250c7:	xor    dl,al
  4250c9:	jg     0x425058
  4250cb:	lea    edi,[edi+esi*2-0x38]
  4250cf:	pusha  
  4250d0:	xchg   esi,eax
  4250d1:	lea    ecx,[ebp-0x15748884]
  4250d7:	xchg   esi,eax
  4250d8:	lea    ecx,[ebp-0xd758884]
  4250de:	sub    eax,0x777c8d8d
  4250e3:	sbb    ecx,0x59
  4250e6:	lea    ecx,[ebp+0x7784777c]
  4250ec:	out    dx,al
  4250ed:	lea    ecx,[ebp+0x6df9777c]
  4250f3:	xor    DWORD PTR [ebp-0x79888373],ecx
  4250f9:	sbb    ebx,DWORD PTR [edi-0x73]
  4250fc:	lea    edi,[edi+esi*2+0x66]
  425100:	pop    esp
  425101:	leave  
  425102:	lea    ecx,[ebp-0x59958884]
  425108:	lea    ecx,[ebp+0x76777c8d]
  42510e:	iret   
  42510f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425115:	and    BYTE PTR [ecx],ch
  425117:	lea    ecx,[ebp+0x5caf777c]
  42511d:	iret   
  42511e:	lea    ecx,[ebp-0x1a088884]
  425124:	sbb    eax,0x77808d8d
  425129:	test   BYTE PTR [eax-0x55307c10],al
  42512f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425135:	lea    ecx,[ebp-0x72dcdf31]
  42513b:	lea    ecx,[ecx]
  42513d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425143:	mov    eax,DWORD PTR [ebx-0x3]
  425146:	xor    BYTE PTR [edi-0x76],0x80
  42514a:	xchg   edi,eax
  42514b:	mov    esi,DWORD PTR [ebx]
  42514d:	sti    
  42514e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425155:	lea    eax,[ebx-0x5]
  425158:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42515f:	xchg   edi,edi
  425161:	sti    
  425162:	push   ebx
  425163:	jb     0x42515f
  425165:	pushf  
  425166:	ins    BYTE PTR es:[edi],dx
  425167:	dec    ebp
  425168:	dec    ebp
  425169:	dec    ebx
  42516a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425170:	pop    ds
  425171:	lea    ecx,[ebp+0x7780f743]
  425177:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42517d:	or     DWORD PTR [edx],esp
  42517f:	cld    
  425180:	cli    
  425181:	mov    al,ds:0xbe309e50
  425186:	icebp  
  425187:	lea    ecx,[ebp+0x7a777c8d]
  42518d:	sbb    al,0x55
  42518f:	lea    ecx,[ebp+0x2e82777c]
  425195:	leave  
  425196:	lea    ecx,[ebp-0x327b8884]
  42519c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42519d:	lea    ecx,[ebp+0x3a83777c]
  4251a3:	lea    ecx,[ebp-0x7c587f73]
  4251a9:	push   ebx
  4251aa:	jb     0x42520a
  4251ac:	fwait
  4251ad:	leave  
  4251ae:	lea    ecx,[ebp-0x687f39b5]
  4251b4:	test   BYTE PTR [eax-0x4001059],al
  4251ba:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251c1:	jp     0x4251fa
  4251c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251c4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251ce:	sub    eax,0x77508ade
  4251d3:	jp     0x425155
  4251d5:	ja     0x4251ce
  4251d7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251de:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251e5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251ec:	xor    BYTE PTR [edi-0x3],0xcf
  4251f0:	mov    es,edi
  4251f2:	lea    ecx,[ebp-0x7f898814]
  4251f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f9:	push   0x53
  4251fb:	jb     0x425248
  4251fd:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425204:	dec    ebp
  425205:	dec    ebp
  425206:	aaa    
  425207:	cmp    BYTE PTR [edi-0x73],dl
  42520a:	lea    eax,[ebx-0x5]
  42520d:	push   edi
  42520e:	adc    DWORD PTR [edx+0x4d],ebp
  425211:	dec    ebp
  425212:	in     al,dx
  425213:	std    
  425214:	xor    BYTE PTR [edi-0x76],0x80
  425218:	xchg   edi,eax
  425219:	mov    esi,DWORD PTR [ebx]
  42521b:	sti    
  42521c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425223:	lea    eax,[ebx-0x5]
  425226:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42522d:	xchg   edi,edi
  42522f:	sti    
  425230:	push   ebx
  425231:	jb     0x42527e
  425233:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42523a:	ja     0x4251c2
  42523c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425243:	je     0x4251c5
  425245:	mov    al,ds:0x4ec8243
  42524a:	arpl   WORD PTR [ebx],ax
  42524c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425250:	dec    ebp
  425251:	dec    ebp
  425252:	stos   DWORD PTR es:[edi],eax
  425253:	test   eax,0xeffb70a3
  425258:	lea    edx,[edi-0x78127880]
  42525e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425262:	in     al,0x58
  425264:	fist   WORD PTR [ecx]
  425266:	pop    esi
  425267:	xchg   BYTE PTR [edi+0x77502643],cl
  42526d:	push   esi
  42526e:	jl     0x4252e7
  425270:	pop    esi
  425271:	loop   0x4252cb
  425273:	fist   WORD PTR [ecx]
  425275:	push   eax
  425276:	ja     0x4252de
  425278:	jl     0x4252f1
  42527a:	push   0xffffffe6
  42527c:	pop    eax
  42527d:	fist   WORD PTR [ecx]
  42527f:	push   eax
  425280:	ja     0x4252f8
  425282:	xchg   ebx,eax
  425283:	jl     0x4252fc
  425285:	std    
  425286:	rcr    BYTE PTR [eax-0x21],1
  425289:	adc    DWORD PTR [eax+0x77],edx
  42528c:	scas   eax,DWORD PTR es:[edi]
  42528d:	cdq    
  42528e:	fwait
  42528f:	jl     0x425308
  425291:	neg    DWORD PTR [ecx+0x5011df58]
  425297:	ja     0x425313
  425299:	push   ebx
  42529a:	jb     0x4252ef
  42529c:	dec    ebp
  42529d:	pusha  
  42529e:	mul    BYTE PTR [edi+ebp*2]
  4252a1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252a5:	call   0x7b543202
  4252aa:	push   eax
  4252ab:	ja     0x425230
  4252ad:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252b4:	stc    
  4252b5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252bb:	mov    dl,0x84
  4252bd:	sub    edi,edi
  4252bf:	sti    
  4252c0:	add    DWORD PTR [ebp+0x78],esi
  4252c3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252c9:	or     DWORD PTR [esi+0x3],eax
  4252cc:	or     al,0xb2
  4252ce:	les    ecx,FWORD PTR [eax+eax*4]
  4252d1:	sbb    eax,0x53ee6d80
  4252d6:	push   0xffffffa2
  4252d8:	ret    0xc7a7
  4252db:	add    al,0xd4
  4252dd:	push   edi
  4252df:	push   eax
  4252e0:	xchg   edi,eax
  4252e1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252e7:	mov    dl,0xb4
  4252e9:	sub    DWORD PTR [ebx+0x77],esp
  4252ec:	and    DWORD PTR [ecx],ecx
  4252ee:	into   
  4252ef:	lea    ecx,fs:[ebp-0x74887f73]
  4252f6:	in     eax,dx
  4252f7:	mov    bh,0x86
  4252f9:	lea    edx,[eax-0x19]
  4252fc:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425302:	aad    0xb7
  425304:	push   ebx
  425305:	push   0x50
  425307:	out    0xc8,eax
  425309:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425310:	gs jno 0x425293
  425313:	xchg   edi,eax
  425314:	out    dx,eax
  425315:	in     al,dx
  425316:	pushf  
  425317:	push   eax
  425318:	xchg   edi,eax
  425319:	test   BYTE PTR [edi+0x4d971090],cl
  42531f:	adc    BYTE PTR [edi-0x70631375],0x15
  425326:	mov    al,0x80
  425328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425329:	test   BYTE PTR [eax],dl
  42532b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425331:	mov    ebp,esp
  425333:	lods   al,BYTE PTR ds:[esi]
  425334:	and    bh,0xef
  425337:	adc    BYTE PTR ds:0xc8978063,dl
  42533d:	ins    DWORD PTR es:[edi],dx
  42533e:	in     eax,dx
  42533f:	clc    
  425340:	mov    dh,BYTE PTR [edx-0x412d67a]
  425346:	out    dx,al
  425347:	(bad)  
  425348:	sti    
  425349:	push   ebx
  42534a:	mov    dl,0x50
  42534c:	ja     0x425316
  42534e:	outs   dx,BYTE PTR ds:[esi]
  42534f:	xlat   BYTE PTR ds:[ebx]
  425350:	enter  0x9780,0xc8
  425354:	in     eax,dx
  425355:	xor    cl,BYTE PTR ds:0xb20c07b2
  42535b:	test   BYTE PTR [ecx],ch
  42535d:	(bad)  
  42535e:	sti    
  42535f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425366:	push   ebx
  425367:	dec    ebp
  425368:	jnp    0x4252ea
  42536a:	ja     0x42539e
  42536c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425373:	test   BYTE PTR [edx-0x7f0811ff],cl
  425379:	xchg   edi,eax
  42537a:	mov    eax,DWORD PTR [ecx]
  42537c:	adc    eax,0x21a78093
  425381:	mov    dl,0x7
  425383:	sub    edi,edi
  425385:	sti    
  425386:	push   ebx
  425387:	mov    dl,0x50
  425389:	ja     0x4253bd
  42538b:	outs   dx,BYTE PTR ds:[esi]
  42538c:	xlat   BYTE PTR ds:[ebx]
  42538d:	xor    al,BYTE PTR [eax+0x32ed3297]
  425393:	or     eax,0xb20c07b2
  425398:	test   BYTE PTR [ecx],ch
  42539a:	(bad)  
  42539b:	sti    
  42539c:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253a3:	push   eax
  4253a4:	ja     0x42532c
  4253a6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253aa:	leave  
  4253ab:	dec    ebp
  4253ac:	dec    ebp
  4253ad:	dec    ebp
  4253ae:	xor    BYTE PTR [edi-0x79],0x80
  4253b2:	xchg   edi,eax
  4253b3:	stc    
  4253b4:	in     eax,dx
  4253b5:	clc    
  4253b6:	mov    ch,BYTE PTR [ebp-0x13]
  4253b9:	sti    
  4253ba:	out    dx,al
  4253bb:	mov    dl,0x86
  4253bd:	sub    edi,edi
  4253bf:	sti    
  4253c0:	push   ebx
  4253c1:	mov    dl,0x80
  4253c3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253ca:	or     eax,0x5029b4b2
  4253cf:	xchg   edi,eax
  4253d0:	stc    
  4253d1:	mov    dl,0x7
  4253d3:	or     al,0x50
  4253d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d6:	xchg   DWORD PTR [eax],esi
  4253d8:	xchg   edi,eax
  4253d9:	xchg   ebp,ebp
  4253db:	out    0x87,eax
  4253dd:	outs   dx,DWORD PTR ds:[esi]
  4253de:	or     edx,ebp
  4253e0:	jp     0x4253ef
  4253e2:	dec    ebp
  4253e3:	dec    ebp
  4253e4:	stos   DWORD PTR es:[edi],eax
  4253e5:	test   eax,0xeffb70a3
  4253ea:	lea    edx,[edi-0x78127880]
  4253f0:	adc    eax,0x7cef7780
  4253f5:	ja     0x425429
  4253f7:	mul    BYTE PTR [edi+ebp*2]
  4253fa:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  4253fe:	cmc    
  4253ff:	and    al,0x6f
  425401:	cmp    BYTE PTR [eax+0x5099938d],al
  425407:	ja     0x425394
  425409:	jl     0x425482
  42540b:	enter  0x24dc,0x6f
  42540f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425415:	sbb    al,0xf9
  425417:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42541d:	mov    ah,dl
  42541f:	or     eax,0x6f24225e
  425424:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42542a:	sub    DWORD PTR [ebx+0x32],edx
  42542d:	mov    dl,0x88
  42542f:	or     al,0xff
  425431:	add    eax,0x8032f080
  425436:	xchg   edi,eax
  425437:	xor    dl,BYTE PTR [ebx-0x3]
  42543a:	push   ebx
  42543b:	pushf  
  42543c:	mov    dl,0xbe
  42543e:	or     al,0xb2
  425440:	clc    
  425441:	sub    edi,edi
  425443:	dec    BYTE PTR [ecx]
  425445:	and    al,BYTE PTR ds:0x8d8d24be
  42544b:	lea    eax,[eax-0x687f7410]
  425451:	mov    edx,DWORD PTR [ebx-0x64]
  425454:	mov    dl,0xf8
  425456:	sub    DWORD PTR [ebx-0x3],edx
  425459:	mov    dl,0xbe
  42545b:	or     al,0xff
  42545d:	inc    BYTE PTR [eax-0x587f7569]
  425463:	mov    dl,BYTE PTR [ebx-0x9]
  425466:	push   ebx
  425467:	lods   al,BYTE PTR ds:[esi]
  425468:	mov    dl,0x7
  42546a:	or     al,0xb2
  42546c:	mov    ah,0x29
  42546e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425475:	xor    al,0x8b
  425478:	aad    0x59
  42547a:	push   ebx
  42547b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425481:	mov    dl,0x7
  425483:	or     al,0xff
  425485:	mov    dh,0x80
  425487:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42548e:	push   ebx
  42548f:	lods   al,BYTE PTR ds:[esi]
  425490:	mov    dl,0xbe
  425492:	or     al,0xb2
  425494:	mov    ah,0x29
  425496:	call   DWORD PTR [ecx]
  425498:	xchg   esp,eax
  425499:	pop    es
  42549a:	xor    al,0x87
  42549d:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254a4:	mov    dl,0xbe
  4254a6:	or     al,0xb2
  4254a8:	mov    ah,0x29
  4254aa:	call   DWORD PTR [ecx]
  4254ac:	push   ebx
  4254ad:	mov    dh,0xc4
  4254af:	sub    eax,0xbab22a53
  4254b4:	sub    DWORD PTR [ebx-0x9],edx
  4254b7:	mov    dl,0x7
  4254b9:	or     al,0xff
  4254bb:	mov    dh,0x80
  4254bd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254c4:	push   ebx
  4254c5:	lods   al,BYTE PTR ds:[esi]
  4254c6:	mov    dl,0xbe
  4254c8:	or     al,0xb2
  4254ca:	mov    ah,0x29
  4254cc:	call   DWORD PTR [ecx]
  4254ce:	xchg   esp,eax
  4254cf:	pop    es
  4254d0:	push   eax
  4254d1:	xchg   edi,eax
  4254d2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254d8:	mov    dl,BYTE PTR [ebx-0x3]
  4254db:	push   ebx
  4254dc:	pushf  
  4254dd:	mov    dl,0xbe
  4254df:	or     al,0xb2
  4254e1:	clc    
  4254e2:	sub    edi,edi
  4254e4:	(bad)  
  4254e5:	in     al,dx
  4254e6:	add    eax,0x80c8f080
  4254eb:	xchg   edi,eax
  4254ec:	enter  0x9c53,0x53
  4254f0:	std    
  4254f1:	mov    dl,0xf8
  4254f3:	sub    DWORD PTR [edx-0x100f342],esi
  4254f9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425500:	not    DWORD PTR [ebx-0x54]
  425503:	mov    dl,0xb4
  425505:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42550b:	inc    ebx
  42550c:	(bad)  
  42550d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425513:	dec    ebp
  425514:	dec    ebp
  425515:	xor    BYTE PTR [edi-0x75],0x80
  425519:	lock out dx,eax
  42551b:	stos   DWORD PTR es:[edi],eax
  42551c:	test   eax,0x77803a50
  425521:	mov    esp,DWORD PTR [ebx-0x72110490]
  425527:	xchg   edi,eax
  425528:	add    BYTE PTR [edi+0x70539696],0x5f
  42552f:	lock and ebp,edx
  425532:	in     eax,0x5f
  425534:	lock out dx,eax
  425536:	(bad)  
  425538:	(bad)  
  425539:	out    dx,al
  42553a:	outs   dx,BYTE PTR ds:[esi]
  42553b:	adc    BYTE PTR [edi+0x9],dh
  42553e:	cld    
  42553f:	ja     0x42550d
  425541:	aad    0xfc
  425543:	ja     0x425552
  425545:	sbb    esp,edi
  425547:	ja     0x425596
  425549:	ror    BYTE PTR [ecx],1
  42554b:	loopne 0x4255c4
  42554d:	dec    ebp
  42554e:	or     eax,esp
  425550:	xchg   edi,eax
  425551:	or     eax,0x8d8d7acf
  425556:	lea    esi,[ebx]
  425558:	sti    
  425559:	or     eax,esp
  42555b:	xchg   edi,eax
  42555c:	int3   
  42555d:	xor    edi,ebx
  42555f:	adc    BYTE PTR [edi-0x7b],dh
  425562:	cld    
  425563:	ja     0x42556b
  425565:	or     eax,0xd48a77fc
  42556a:	cld    
  42556b:	ja     0x4255ba
  42556d:	jl     0x42556b
  42556f:	ja     0x42557e
  425571:	sar    esp,cl
  425573:	ja     0x425541
  425575:	push   esp
  425576:	(bad)  
  425577:	ja     0x425545
  425579:	(bad)  
  42557a:	xchg   edi,eax
  42557b:	or     eax,0x978ffba6
  425580:	dec    ebp
  425581:	sar    bl,cl
  425583:	(bad)  
  425584:	xchg   edi,eax
  425585:	mov    cl,BYTE PTR [ebx]
  425587:	pop    es
  425588:	(bad)  
  425589:	xchg   edi,eax
  42558a:	push   es
  42558b:	sar    bl,cl
  42558d:	(bad)  
  42558e:	xchg   edi,eax
  42558f:	test   esi,edx
  425591:	neg    ebx
  425593:	or     DWORD PTR [ecx],ecx
  425595:	loopne 0x42560e
  425597:	or     DWORD PTR [edi+0x8],eax
  42559a:	lea    ecx,[ebp+0x977108d]
  4255a0:	div    eax
  4255a2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255a8:	outs   dx,BYTE PTR ds:[esi]
  4255a9:	xchg   edx,eax
  4255aa:	arpl   ax,si
  4255ac:	out    dx,eax
  4255ad:	in     al,0x50
  4255af:	dec    ebp
  4255b0:	xlat   BYTE PTR ds:[ebx]
  4255b1:	out    dx,eax
  4255b2:	cdq    
  4255b3:	xchg   BYTE PTR [edx-0x76],cl
  4255b6:	dec    ebp
  4255b7:	dec    ebp
  4255b8:	jo     0x4255b5
  4255ba:	out    dx,eax
  4255bb:	lea    edx,[edi-0x785d7880]
  4255c1:	cmp    eax,0x938d8dee
  4255c6:	cdq    
  4255c7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255cb:	cmp    BYTE PTR [eax-0x59],dl
  4255ce:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255d2:	cmc    
  4255d3:	and    al,0x6f
  4255d5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255d9:	imul   BYTE PTR [edi+ebp*2]
  4255dc:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255e0:	xchg   esi,eax
  4255e1:	mov    ch,0xcb
  4255e3:	scas   al,BYTE PTR es:[edi]
  4255e4:	xor    BYTE PTR [edi+0x32],0x80
  4255e8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ef:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  4255f5:	mov    dl,0x86
  4255f7:	or     al,0xb2
  4255f9:	mov    edx,0x50b2ff29
  4255fe:	ja     0x42558b
  425600:	jl     0x425679
  425602:	sbb    esp,0x24
  425605:	outs   dx,DWORD PTR ds:[esi]
  425606:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42560a:	inc    edi
  42560b:	sbb    al,0xf9
  42560d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425611:	out    dx,eax
  425612:	lea    ecx,[ebp-0x7f8f7f73]
  425618:	ja     0x4255a4
  42561a:	xor    al,0x8a
  42561d:	push   ebx
  42561e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425624:	mov    dl,0x86
  425626:	or     al,0xff
  425628:	mov    dl,0x80
  42562a:	lock xor al,BYTE PTR [eax+0x51533297]
  425631:	push   ebx
  425632:	pushf  
  425633:	mov    dl,0xbe
  425635:	or     al,0xb2
  425637:	clc    
  425638:	sub    edi,edi
  42563a:	dec    BYTE PTR [ecx]
  42563c:	and    dh,BYTE PTR [edx+0x778092c4]
  425642:	enter  0xf080,0xc8
  425646:	mov    dl,0x86
  425648:	sub    DWORD PTR [edx-0x4d00f346],esi
  42564e:	push   ebx
  42564f:	je     0x4256a1
  425651:	ja     0x4255de
  425653:	add    DWORD PTR [edi-0x75],esi
  425656:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42565c:	push   eax
  42565d:	ja     0x4255ea
  42565f:	xor    BYTE PTR [edi-0x75],0x80
  425663:	lock enter 0xf50,0x1
  425668:	add    BYTE PTR [esi],0x4d
  42566b:	dec    ebp
  42566c:	xor    BYTE PTR [edi-0x76],0x80
  425670:	lock mov dl,BYTE PTR [ebx-0x4]
  425674:	push   ebx
  425675:	sub    dh,BYTE PTR [edx-0x454df37a]
  42567b:	sub    edi,edi
  42567d:	mov    dl,0xec
  42567f:	ja     0x425649
  425681:	push   eax
  425682:	ja     0x42564c
  425684:	xor    BYTE PTR [edi-0x79],0x80
  425688:	lock xchg DWORD PTR [ebx+0x2a],edx
  42568c:	mov    dl,0xba
  42568e:	sub    DWORD PTR [ebx-0x4],edx
  425691:	mov    dl,0x86
  425693:	or     al,0xff
  425695:	mov    dl,0x80
  425697:	lock mov al,BYTE PTR [eax+0x51538a97]
  42569e:	push   ebx
  42569f:	pushf  
  4256a0:	mov    dl,0xbe
  4256a2:	or     al,0xb2
  4256a4:	clc    
  4256a5:	sub    edi,edi
  4256a7:	inc    BYTE PTR [ebx-0x4e]
  4256aa:	xor    al,0xc8
  4256ad:	arpl   bp,di
  4256af:	fstp   DWORD PTR [edx]
  4256b1:	xor    BYTE PTR [edi-0x7],0x80
  4256b5:	lock stc 
  4256b7:	push   ebx
  4256b8:	cld    
  4256b9:	push   ebx
  4256ba:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256c0:	sub    edi,edi
  4256c2:	mov    dl,0x50
  4256c4:	ja     0x425651
  4256c6:	jl     0x42573f
  4256c8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256cf:	mov    esi,0x8d8d8dcd
  4256d4:	xor    al,0x83
  4256d7:	xor    BYTE PTR [edi-0x7d],0x53
  4256db:	jl     0x42568f
  4256dd:	test   BYTE PTR [ecx],ch
  4256df:	push   ebx
  4256e0:	push   ecx
  4256e1:	mov    dl,0xbe
  4256e3:	or     al,0xff
  4256e5:	std    
  4256e6:	xor    BYTE PTR [edi-0x75],0x94
  4256ea:	xchg   BYTE PTR [eax+0x77],dl
  4256ed:	add    BYTE PTR [eax-0x72701089],0x10
  4256f4:	ja     0x4256ba
  4256f6:	(bad)  
  4256f7:	ja     0x4256bd
  4256f9:	xor    al,0x8b
  4256fc:	or     eax,esp
  4256fe:	push   0x53
  425700:	mov    dl,0x50
  425702:	ja     0x4256cc
  425704:	xor    BYTE PTR [edi-0x79],0x80
  425708:	lock xchg DWORD PTR [ebx-0x4],edx
  42570c:	mov    dl,0x86
  42570e:	or     al,0x53
  425710:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425716:	xor    al,0xc8
  425719:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42571f:	push   es
  425720:	dec    ebp
  425721:	dec    ebp
  425722:	xor    al,0x82
  425725:	push   ebx
  425726:	mov    dl,0x50
  425728:	ja     0x4256b5
  42572a:	xor    BYTE PTR [edi-0x76],0x80
  42572e:	lock mov dl,BYTE PTR [ebx-0x4]
  425732:	push   ebx
  425733:	sub    dh,BYTE PTR [edx-0x454df37a]
  425739:	sub    edi,edi
  42573b:	mov    dl,0x3a
  42573d:	ja     0x42572e
  42573f:	xor    BYTE PTR [edi-0x76],0x80
  425743:	lock mov dl,BYTE PTR [ebx-0x4]
  425747:	push   ebx
  425748:	sub    dh,BYTE PTR [edx-0x454df37a]
  42574e:	sub    edi,edi
  425750:	mov    dl,0x3f
  425752:	ja     0x4256d8
  425754:	xor    BYTE PTR [edi+0x32],0x80
  425758:	lock xor dl,BYTE PTR [ebx+0x2a]
  42575c:	push   ebx
  42575d:	cld    
  42575e:	mov    dl,0xba
  425760:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425766:	xor    al,0x84
  425769:	arpl   bp,di
  42576b:	or     DWORD PTR [edi-0x4d],ecx
  42576e:	dec    ebp
  42576f:	dec    ebp
  425770:	dec    ebp
  425771:	xor    BYTE PTR [edi-0x7],0x80
  425775:	lock stc 
  425777:	push   ebx
  425778:	cld    
  425779:	push   ebx
  42577a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425780:	or     al,0xab
  425782:	push   DWORD PTR [edx-0x56740f80]
  425788:	push   ebx
  425789:	mov    dl,0xa3
  42578b:	jo     0x425788
  42578d:	out    dx,al
  42578e:	lea    edx,[edi-0x78127880]
  425794:	jno    0x4257e9
  425796:	jo     0x42572b
  425798:	fwait
  425799:	pop    edi
  42579a:	lock out dx,eax
  42579c:	or     DWORD PTR [edi],ecx
  42579e:	pop    esp
  42579f:	lea    ecx,[ebp+0x905638d]
  4257a5:	mov    cr1,ebp
  4257a8:	lea    ecx,[ebp+0x2d995c09]
  4257ae:	pop    esi
  4257af:	and    al,0x38
  4257b1:	lea    ecx,[ebp+0x508af050]
  4257b7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257bb:	push   eax
  4257bc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257c3:	jo     0x425818
  4257c5:	dec    ebp
  4257c6:	jl     0x42583f
  4257c8:	enter  0x4d07,0x4d
  4257cc:	dec    ebp
  4257cd:	mov    ecx,0xc5d3cb63
  4257d2:	mov    ecx,0xb98ae780
  4257d7:	mov    dh,0x7c
  4257d9:	mov    ecx,0x5c098b53
  4257de:	lock mov eax,DWORD PTR [ecx]
  4257e1:	and    esp,ebx
  4257e3:	mov    ecx,0xd70cdf5f
  4257e8:	pop    ebx
  4257e9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257ed:	lock enter 0x63b9,0xfd
  4257f2:	xlat   BYTE PTR ds:[ebx]
  4257f3:	iret   
  4257f4:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257f8:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  4257ff:	aad    0x53
  425801:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425805:	and    BYTE PTR [edi-0x5f64611],0x21
  42580c:	pop    ds
  42580d:	mov    ecx,0x53b9b2b6
  425812:	std    
  425813:	mov    ecx,0xd5c8f05f
  425818:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42581c:	xchg   BYTE PTR [ebp+0x4d],cl
  42581f:	dec    ebp
  425820:	dec    ebp
  425821:	ja     0x4257ae
  425823:	cmp    ch,0xb9
  425826:	push   ebx
  425827:	mov    cl,0x2d
  425829:	mov    ecx,0x5fb970b6
  42582e:	lock mov esp,esp
  425831:	cmc    
  425832:	les    esp,FWORD PTR [esi+0x7c32774d]
  425838:	ja     0x425802
  42583a:	mov    esi,0x94d4d4d
  42583f:	pop    esp
  425840:	out    0x8a,eax
  425842:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425849:	sub    edx,ebp
  42584b:	pop    ss
  42584c:	dec    ebp
  42584d:	ja     0x4257d9
  42584f:	in     eax,dx
  425850:	out    0xc8,eax
  425852:	xchg   BYTE PTR [ecx],cl
  425854:	dec    edi
  425855:	ror    BYTE PTR [ebp+0x4d],1
  425858:	dec    ebp
  425859:	push   ebx
  42585a:	push   0xffffffab
  42585c:	mov    ds:0x8deefb70,eax
  425861:	xor    al,0x32
  425864:	mov    ecx,0x53b9b2b6
  425869:	std    
  42586a:	push   ebx
  42586b:	push   0xffffffb9
  42586d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425873:	les    eax,FWORD PTR [edx]
  425875:	xchg   edi,eax
  425876:	add    BYTE PTR [edi-0x6c427813],0x99
  42587d:	fwait
  42587e:	loop   0x4258c5
  425880:	dec    ebp
  425881:	xlat   BYTE PTR ds:[ebx]
  425882:	out    dx,eax
  425883:	xor    BYTE PTR [edx],0x86
  425886:	inc    ebx
  425887:	mov    ecx,DWORD PTR [ebp+0x4d]
  42588a:	add    DWORD PTR [ecx-0x40],edi
  42588d:	push   eax
  42588e:	ja     0x4258b6
  425890:	add    DWORD PTR [ecx+0x75],edi
  425893:	push   eax
  425894:	ja     0x4258c4
  425896:	add    DWORD PTR [ecx-0x47],edi
  425899:	push   eax
  42589a:	ja     0x4258d2
  42589c:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258a0:	lea    ecx,[ebp+0x13e7750]
  4258a6:	dec    esp
  4258a7:	cmc    
  4258a8:	lea    ecx,[ebp+0x4677508d]
  4258ae:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258b2:	lea    ecx,[ebp+0x1627750]
  4258b8:	dec    esp
  4258b9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258bf:	push   esi
  4258c0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258c4:	lea    ecx,[ebp+0x15e7750]
  4258ca:	dec    esp
  4258cb:	aam    0x3a
  4258cd:	lea    ecx,[ebp+0x50667750]
  4258d3:	xlat   BYTE PTR ds:[ebx]
  4258d4:	push   ds
  4258d5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258d9:	lea    ecx,[ebp-0x7f9588b0]
  4258df:	dec    esp
  4258e0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258e7:	jb     0x425939
  4258e9:	xchg   edi,eax
  4258ea:	not    DWORD PTR [eax-0x69]
  4258ed:	jp     0x42593f
  4258ef:	xchg   edi,eax
  4258f0:	adc    BYTE PTR [eax-0x69],0x83
  4258f4:	jl     0x42596d
  4258f6:	std    
  4258f7:	(bad)  [esi-0x79a1ee21]
  4258fd:	pop    DWORD PTR [ebx+0x26]
  425900:	push   eax
  425901:	ja     0x4258b2
  425903:	xor    al,0xfd
  425906:	and    bh,0xaf
  425909:	push   ebx
  42590a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425910:	adc    DWORD PTR [ecx],ecx
  425912:	inc    esi
  425913:	retf   
  425914:	or     al,0xb2
  425916:	popa   
  425917:	or     al,0x50
  425919:	out    0xf9,eax
  42591b:	and    bh,0xfd
  42591e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425925:	push   ebx
  425926:	test   DWORD PTR [edx+0x2aff29b4],esi
  42592c:	and    bh,0xf9
  42592f:	icebp  
  425930:	lea    ecx,[ebp+0x353cd8d]
  425936:	inc    DWORD PTR [esi]
  425938:	jmp    FWORD PTR [edx]
  42593a:	push   eax
  42593b:	xlat   BYTE PTR ds:[ebx]
  42593c:	mov    ecx,DWORD PTR [ecx]
  42593e:	(bad)  
  425940:	lea    ecx,[ebp-0x8885d73]
  425946:	rcr    ebp,0x86
  425949:	outs   dx,DWORD PTR ds:[esi]
  42594a:	pusha  
  42594b:	mov    esi,0xe26438f
  425950:	lock jp 0x4258f5
  425953:	ja     0x4258d7
  425955:	rcr    ebp,0x52
  425958:	or     al,0xe
  42595a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425962:	and    bh,0xfd
  425965:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42596c:	fistp  DWORD PTR [eax-0x21]
  42596f:	adc    DWORD PTR [ecx],ecx
  425971:	inc    esi
  425972:	add    eax,0x29bcb20c
  425977:	mov    dl,0x88
  425979:	or     al,0x53
  42597b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42597c:	push   ebx
  42597d:	test   edi,edi
  42597f:	adc    edi,edi
  425981:	dec    ebx
  425982:	in     eax,dx
  425983:	mov    dl,0x4d
  425985:	in     eax,dx
  425986:	jle    0x4259d5
  425988:	push   eax
  425989:	lock std 
  42598b:	push   eax
  42598c:	xlat   BYTE PTR ds:[ebx]
  42598d:	scas   eax,DWORD PTR es:[edi]
  42598e:	xor    al,0xf7
  425991:	push   eax
  425993:	jp     0x42596a
  425995:	and    esp,DWORD PTR [edx+0x36ff777]
  42599b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42599c:	retf   
  42599d:	pusha  
  42599e:	sbb    edi,edx
  4259a0:	jp     0x425955
  4259a2:	push   cs
  4259a3:	lock jp 0x425948
  4259a6:	ja     0x42592a
  4259a8:	sti    
  4259a9:	jl     0x425987
  4259ab:	int3   
  4259ac:	push   cs
  4259ad:	lock add esp,0x1d
  4259b1:	mov    ds:0xddc1f7f0,al
  4259b6:	xchg   BYTE PTR [ecx+0x30],bh
  4259b9:	ja     0x425a35
  4259bb:	mov    ds:0xddc182b7,al
  4259c0:	push   edx
  4259c1:	jmp    0x438f:0xbe83b7a2
  4259c8:	es xor al,0xfd
  4259cc:	xor    al,0xaf
  4259cf:	and    bh,0xfd
  4259d2:	and    BYTE PTR [edi+0x63609af],0xc
  4259d9:	mov    dl,0xbe
  4259db:	sub    DWORD PTR [ebx+0xb],edx
  4259de:	inc    esi
  4259e0:	mov    dl,0xbc
  4259e2:	or     al,0xff
  4259e4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259ea:	adc    DWORD PTR [eax-0x10],edx
  4259ed:	std    
  4259ee:	push   ebx
  4259ef:	xor    dl,BYTE PTR [eax-0x29]
  4259f2:	scas   eax,DWORD PTR es:[edi]
  4259f3:	xor    al,0xfd
  4259f6:	adc    bh,0xaf
  4259f9:	and    bh,0xfd
  4259fc:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a03:	fistp  DWORD PTR [eax-0x21]
  425a06:	adc    DWORD PTR [ecx],ecx
  425a08:	inc    esi
  425a09:	add    eax,0x29bcb20c
  425a0e:	mov    dl,0x88
  425a10:	or     al,0x53
  425a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a13:	push   ebx
  425a14:	test   edi,edi
  425a16:	adc    edi,edi
  425a18:	dec    ebx
  425a19:	call   DWORD PTR [ecx+0x9]
  425a1c:	dec    edi
  425a1d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a21:	adc    bh,0x8b
  425a24:	dec    edi
  425a25:	or     ecx,DWORD PTR [ecx]
  425a27:	mov    cr1,ebp
  425a2a:	lea    ecx,[ebp-0x7f9a8680]
  425a30:	in     eax,0x81
  425a32:	fucomp st(4)
  425a34:	or     eax,0x80359b80
  425a39:	leave  
  425a3a:	and    eax,0x802d7b80
  425a3f:	stos   DWORD PTR es:[edi],eax
  425a40:	sbb    eax,0x97507eec
  425a45:	scas   eax,DWORD PTR es:[edi]
  425a46:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a4d:	push   eax
  425a4e:	lock xchg DWORD PTR [eax+0x77],edx
  425a52:	jp     0x425aa4
  425a54:	xchg   edi,eax
  425a55:	enter  0x9463,0xdb
  425a59:	in     al,dx
  425a5a:	push   eax
  425a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a5c:	enter  0x7253,0x50
  425a60:	xchg   edi,eax
  425a61:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a65:	(bad)  
  425a67:	(bad)  
  425a68:	in     al,dx
  425a69:	xor    BYTE PTR [edi+0x7a],0x80
  425a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6e:	scas   eax,DWORD PTR es:[edi]
  425a6f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a73:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a79:	stos   DWORD PTR es:[edi],eax
  425a7a:	adc    eax,0xee80a9d3
  425a7f:	pop    edx
  425a80:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a87:	xchg   edi,eax
  425a88:	mov    ch,ah
  425a8a:	cld    
  425a8b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425a91:	xchg   edi,eax
  425a92:	out    dx,eax
  425a93:	push   eax
  425a94:	ja     0x425ac8
  425a96:	push   eax
  425a97:	xchg   edi,eax
  425a98:	jbe    0x425b16
  425a9a:	ja     0x425a95
  425a9c:	dec    DWORD PTR [ebp-0x687f7273]
  425aa2:	mov    ch,ch
  425aa4:	(bad)  
  425aa5:	(bad)  
  425aa6:	xlat   BYTE PTR ds:[ebx]
  425aa7:	sub    DWORD PTR [edx],ecx
  425aa9:	xor    BYTE PTR [edi+0x76],0x80
  425aad:	push   ebp
  425aae:	jno    0x425a36
  425ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ab4:	adc    bh,0x8b
  425ab7:	xor    al,0x87
  425aba:	dec    edi
  425abb:	push   0xffffffd5
  425abd:	das    
  425abe:	xor    BYTE PTR [edi-0x76],0x50
  425ac2:	sbb    eax,0xed327780
  425ac7:	ja     0x425a53
  425ac9:	out    dx,al
  425aca:	dec    ebp
  425acb:	lock stc 
  425acd:	xlat   BYTE PTR ds:[ebx]
  425ace:	mov    dh,0x80
  425ad0:	xchg   edi,eax
  425ad1:	sbb    eax,0x50
  425ad4:	xchg   edi,eax
  425ad5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ad9:	in     al,0xdc
  425adb:	stos   DWORD PTR es:[edi],eax
  425adc:	cmp    ah,0xa9
  425adf:	mov    ds:0x8deefb70,eax
  425ae4:	xchg   edi,eax
  425ae5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425aec:	loopne 0x425b20
  425aee:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425af4:	xchg   ch,ah
  425af6:	int3   
  425af7:	dec    ebp
  425af8:	dec    ebp
  425af9:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425afe:	lea    edx,[ebx+0x70]
  425b01:	pop    edi
  425b02:	out    dx,eax
  425b03:	test   eax,0x80b21809
  425b08:	mov    dl,0xa7
  425b0a:	sti    
  425b0b:	out    dx,al
  425b0c:	lea    eax,[eax-0x72c5e1e4]
  425b12:	lea    edx,[ebx+0x5e328099]
  425b18:	and    al,0x38
  425b1a:	lea    ecx,[ebp-0x2ac5e3c]
  425b20:	mov    ecx,0x50b970b6
  425b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b26:	in     eax,dx
  425b27:	sti    
  425b28:	or     al,0xed
  425b2a:	cld    
  425b2b:	or     al,0x9
  425b2d:	pop    esp
  425b2e:	mov    eax,ds:0xd7fd63b9
  425b33:	pop    es
  425b34:	push   ebx
  425b35:	push   0xffffffa9
  425b37:	mov    ecx,0xce800c50
  425b3c:	push   ds
  425b3d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b43:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b4a:	lea    esi,[edx+0x7cec6fbc]
  425b50:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b56:	mov    esi,0x6def10bd
  425b5b:	fmul   DWORD PTR [edi-0x7934325a]
  425b61:	xlat   BYTE PTR ds:[ebx]
  425b62:	popa   
  425b63:	cld    
  425b64:	lea    ecx,[ebp+0x3a1e4c80]
  425b6a:	lea    ecx,[ebp+0x74ab7cec]
  425b70:	xchg   edi,eax
  425b71:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b78:	lea    edx,[ebx+0x438f8660]
  425b7e:	es cdq 
  425b80:	fwait
  425b81:	jl     0x425bfa
  425b83:	enter  0x58e4,0xdf
  425b87:	adc    DWORD PTR [eax-0x10],edx
  425b8a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b8e:	fstp   DWORD PTR [eax-0x21]
  425b91:	adc    DWORD PTR [eax-0x10],edx
  425b94:	xor    dl,BYTE PTR [ebx+0x6a]
  425b97:	jl     0x425c10
  425b99:	xchg   dh,dh
  425b9b:	and    al,0x6f
  425b9d:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425ba1:	cmc    
  425ba2:	and    al,0x6f
  425ba4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425ba8:	call   0x50543b05
  425bad:	lock jp 0x425c2c
  425bb0:	ja     0x425c10
  425bb2:	out    0x58,al
  425bb4:	fist   WORD PTR [ecx]
  425bb6:	push   eax
  425bb7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bbd:	xchg   edi,eax
  425bbe:	xor    cl,BYTE PTR [ecx]
  425bc0:	inc    esi
  425bc1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bc8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bce:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425bd2:	add    al,0xd4
  425bd4:	push   ebx
  425bd5:	jl     0x425c2a
  425bd7:	or     edi,edi
  425bd9:	cld    
  425bda:	push   eax
  425bdb:	ja     0x425b60
  425bdd:	add    DWORD PTR [edi-0x7c],esi
  425be0:	push   eax
  425be1:	ja     0x425b92
  425be3:	xor    BYTE PTR [edi-0x51],0xfa
  425be7:	and    ah,BYTE PTR [edi+ebp*2]
  425bea:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bee:	pop    eax
  425bef:	fist   WORD PTR [ecx]
  425bf1:	push   eax
  425bf2:	jge    0x425be2
  425bf4:	xor    al,0x8a
  425bf7:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425bfe:	or     al,0xe2
  425c00:	or     eax,0xb2f7539d
  425c05:	clc    
  425c06:	sub    edi,edi
  425c08:	inc    BYTE PTR [eax-0x587f7569]
  425c0e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c11:	mov    dl,0x7
  425c13:	or     al,0x53
  425c15:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c1c:	inc    BYTE PTR [eax-0x587f7569]
  425c22:	mov    dl,BYTE PTR [ebx+0x7e]
  425c25:	mov    dl,0x7
  425c27:	or     al,0x53
  425c29:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c30:	inc    BYTE PTR [eax-0x587f7569]
  425c36:	mov    dl,BYTE PTR [ebx+0x7e]
  425c39:	mov    dl,0x7
  425c3b:	or     al,0x53
  425c3d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c44:	(bad)  
  425c45:	push   eax
  425c46:	add    DWORD PTR [edx+0x4d],edx
  425c49:	dec    ebp
  425c4a:	dec    ebp
  425c4b:	xor    al,0x86
  425c4e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c55:	mov    dl,0xf8
  425c57:	sub    DWORD PTR [edx-0x100f342],esi
  425c5d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c64:	jle    0x425cb9
  425c66:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c6d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c74:	dec    ebp
  425c75:	dec    ebp
  425c76:	xor    al,0x21
  425c79:	xor    BYTE PTR [eax],0x80
  425c7c:	xchg   edi,eax
  425c7d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c83:	or     dl,BYTE PTR [ebx-0x7e]
  425c86:	push   ebx
  425c87:	jle    0x425c3b
  425c89:	pop    es
  425c8a:	or     al,0xb2
  425c8c:	mov    ah,0x29
  425c8e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c95:	dec    ebp
  425c96:	dec    ebp
  425c97:	xor    al,0x71
  425c9a:	adc    BYTE PTR [edi+0x53f75371],0x51
  425ca1:	mov    dl,0xf8
  425ca3:	sub    DWORD PTR [edx-0x100f342],esi
  425ca9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cb0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cb7:	pop    es
  425cb8:	or     al,0xb2
  425cba:	mov    ah,0x29
  425cbc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cc3:	mov    dl,0x86
  425cc5:	or     al,0xed
  425cc7:	(bad)  
  425cc8:	or     eax,0xff29b4b2
  425ccd:	je     0x425cbb
  425ccf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425cd9:	dec    ebp
  425cda:	xor    al,0x15
  425cdd:	in     eax,dx
  425cde:	add    eax,0x29bab20d
  425ce3:	push   ebx
  425ce4:	cld    
  425ce5:	mov    dl,0x86
  425ce7:	or     al,0xff
  425ce9:	mov    dl,0x80
  425ceb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425cf2:	or     eax,0xf8b25153
  425cf7:	sub    DWORD PTR [edx-0x100f342],esi
  425cfd:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d04:	jle    0x425cf3
  425d06:	(bad)  
  425d07:	or     eax,0xb20c07b2
  425d0c:	mov    ah,0x29
  425d0e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d15:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d1c:	or     eax,0xb229b4b2
  425d21:	pop    es
  425d22:	or     al,0xff
  425d24:	xchg   esp,eax
  425d25:	in     al,dx
  425d26:	(bad)  
  425d27:	push   eax
  425d28:	xend   
  425d2b:	dec    ebp
  425d2c:	dec    ebp
  425d2d:	dec    ebp
  425d2e:	add    DWORD PTR [edi+0x52],ecx
  425d31:	dec    ebp
  425d32:	dec    ebp
  425d33:	dec    ebp
  425d34:	or     al,BYTE PTR [eax-0xf7f7589]
  425d3a:	mov    ah,dl
  425d3c:	or     eax,0x53fc53a3
  425d41:	adc    DWORD PTR [edx-0x454df37a],esi
  425d47:	sub    edi,edi
  425d49:	mov    dl,0xa
  425d4b:	xor    BYTE PTR [edi+0x2d],0x1
  425d4f:	adc    ch,dh
  425d51:	lea    ecx,[ebp-0x327f6973]
  425d57:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d5e:	xchg   edi,eax
  425d5f:	and    eax,0x5055f080
  425d64:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d6a:	stc    
  425d6b:	or     DWORD PTR [esi-0x3],eax
  425d6e:	or     al,0xb2
  425d70:	mov    esi,0x84f0800c
  425d75:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d7c:	push   edi
  425d7e:	stos   BYTE PTR es:[edi],al
  425d7f:	dec    ebp
  425d80:	xlat   BYTE PTR ds:[ebx]
  425d81:	xor    eax,0x4d29bab2
  425d86:	xlat   BYTE PTR ds:[ebx]
  425d87:	inc    ebp
  425d88:	xchg   ah,cl
  425d8a:	add    eax,0x77804d4d
  425d8f:	test   BYTE PTR [eax+0x4609f9f0],al
  425d95:	std    
  425d96:	or     al,0xb2
  425d98:	mov    esi,0x84f0800c
  425d9d:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425da4:	push   edi
  425da6:	stos   BYTE PTR es:[edi],al
  425da7:	dec    ebp
  425da8:	xlat   BYTE PTR ds:[ebx]
  425da9:	push   ebp
  425daa:	mov    dl,0xba
  425dac:	sub    DWORD PTR [ebp-0x29],ecx
  425daf:	cmp    eax,0x4d059886
  425db4:	dec    ebp
  425db5:	xor    BYTE PTR [edi-0x76],0x80
  425db9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dbd:	mov    dl,0xba
  425dbf:	sub    DWORD PTR [ebx-0x4],edx
  425dc2:	mov    dl,0x86
  425dc4:	or     al,0xff
  425dc6:	mov    dl,0x80
  425dc8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425dcf:	mov    dl,0xbe
  425dd1:	or     al,0x53
  425dd3:	xchg   esp,eax
  425dd4:	mov    dl,0xf8
  425dd6:	sub    edi,edi
  425dd8:	(bad)  
  425dd9:	in     al,dx
  425dda:	mov    dl,0x80
  425ddc:	lock mov al,BYTE PTR [eax+0x51538a97]
  425de3:	mov    dl,0xbe
  425de5:	or     al,0x53
  425de7:	xchg   esp,eax
  425de8:	mov    dl,0xf8
  425dea:	sub    edi,edi
  425dec:	(bad)  
  425ded:	in     al,dx
  425dee:	mov    dl,0x80
  425df0:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df7:	mov    dl,0xbe
  425df9:	or     al,0x53
  425dfb:	xchg   esp,eax
  425dfc:	mov    dl,0xf8
  425dfe:	sub    edi,edi
  425e00:	(bad)  
  425e01:	in     al,dx
  425e02:	mov    dl,0x50
  425e04:	dec    edi
  425e05:	push   edx
  425e06:	dec    ebp
  425e07:	dec    ebp
  425e08:	dec    ebp
  425e09:	xor    BYTE PTR [edi+0x55],0x80
  425e0d:	lea    eax,[eax-0x687f7910]
  425e13:	xchg   BYTE PTR [ebx+0x51],dl
  425e16:	push   ebx
  425e17:	xchg   esp,eax
  425e18:	mov    dl,0xbe
  425e1a:	or     al,0xb2
  425e1c:	clc    
  425e1d:	sub    edi,edi
  425e1f:	(bad)  
  425e20:	push   eax
  425e21:	xend   
  425e24:	dec    ebp
  425e25:	dec    ebp
  425e26:	dec    ebp
  425e27:	xor    BYTE PTR [edi+0x21],0x80
  425e2b:	lea    eax,[eax-0x687f7510]
  425e31:	mov    dl,BYTE PTR [ebx+0x51]
  425e34:	mov    dl,0xbe
  425e36:	or     al,0x80
  425e38:	ins    DWORD PTR es:[edi],dx
  425e39:	or     dl,BYTE PTR [ebx-0x6c]
  425e3c:	mov    dl,0xf8
  425e3e:	sub    edi,edi
  425e40:	(bad)  
  425e41:	push   eax
  425e42:	xend   
  425e45:	dec    ebp
  425e46:	dec    ebp
  425e47:	dec    ebp
  425e48:	xor    BYTE PTR [edi+0x1d],0x80
  425e4c:	lock sbb eax,0xbab21153
  425e52:	sub    DWORD PTR [ebx-0x4],edx
  425e55:	mov    dl,0x86
  425e57:	or     al,0xff
  425e59:	mov    dl,0x80
  425e5b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e62:	push   ebx
  425e63:	push   ecx
  425e64:	mov    dl,0xf8
  425e66:	sub    DWORD PTR [edx-0x100f342],esi
  425e6c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e73:	jle    0x425e27
  425e75:	pop    es
  425e76:	or     al,0xed
  425e78:	(bad)  
  425e79:	or     eax,0xff29b4b2
  425e7e:	xchg   esp,eax
  425e7f:	in     al,dx
  425e80:	(bad)  
  425e81:	push   eax
  425e82:	xend   
  425e85:	dec    ebp
  425e86:	dec    ebp
  425e87:	dec    ebp
  425e88:	xor    BYTE PTR [edi-0x76],0x80
  425e8c:	lock mov ch,ch
  425e8f:	add    eax,0x29bab20d
  425e94:	push   ebx
  425e95:	cld    
  425e96:	mov    dl,0x86
  425e98:	or     al,0xff
  425e9a:	mov    dl,0x80
  425e9c:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ea3:	or     eax,0xf8b25153
  425ea8:	sub    DWORD PTR [edx-0x100f342],esi
  425eae:	in     al,dx
  425eaf:	mov    dl,0x80
  425eb1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb8:	or     eax,0xf8b25153
  425ebd:	sub    DWORD PTR [edx-0x100f342],esi
  425ec3:	add    DWORD PTR [eax],ebx
  425ec5:	push   edx
  425ec6:	dec    ebp
  425ec7:	dec    ebp
  425ec8:	dec    ebp
  425ec9:	stos   BYTE PTR es:[edi],al
  425eca:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ed1:	mov    dl,0x53
  425ed3:	jle    0x425ed6
  425ed5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eda:	aad    0x4d
  425edc:	dec    ebp
  425edd:	dec    ebp
  425ede:	xor    BYTE PTR [edi+0x2d],0xed
  425ee2:	(bad)  
  425ee3:	or     eax,0xb20c07b2
  425ee8:	mov    ah,0x29
  425eea:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425ef1:	lea    eax,[eax-0x72c5c133]
  425ef7:	lea    ebp,[edx+0x4d814d96]
  425efd:	xchg   edi,eax
  425efe:	and    eax,0xbdd56a4f
  425f03:	xor    BYTE PTR [edi-0x79],0x80
  425f07:	lock xor cl,BYTE PTR [ecx]
  425f0a:	inc    esi
  425f0b:	std    
  425f0c:	or     al,0xb2
  425f0e:	mov    esi,0x80b6800c
  425f13:	std    
  425f14:	xor    BYTE PTR [edi-0x79],0x80
  425f18:	xchg   edi,eax
  425f19:	xor    dl,BYTE PTR [ebx+0x72]
  425f1c:	push   ebx
  425f1d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f23:	and    edi,edi
  425f25:	inc    BYTE PTR [eax+0xada6371]
  425f2b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f32:	and    BYTE PTR [edi-0xda707f],0x10
  425f39:	and    eax,0xc87780ef
  425f3e:	xor    al,0x8b
  425f41:	or     DWORD PTR [esi-0x3],eax
  425f44:	or     al,0xb2
  425f46:	mov    esi,0xc8f0800c
  425f4b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f52:	mov    dl,0xba
  425f54:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f5a:	in     al,dx
  425f5b:	std    
  425f5c:	xor    BYTE PTR [edi+0x21],0x80
  425f60:	sbb    eax,0x500a0063
  425f65:	lock jno 0x425f4c
  425f68:	jl     0x425f2e
  425f6a:	outs   dx,DWORD PTR ds:[esi]
  425f6b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f73:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f7a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f81:	lea    ecx,[ebp+0x71f0508d]
  425f87:	and    BYTE PTR [esi+0x4381a780],0x11
  425f8e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425f95:	and    BYTE PTR [esi-0x7fc28214],0x77
  425f9c:	xchg   DWORD PTR [eax-0x10],edx
  425f9f:	scas   eax,DWORD PTR es:[edi]
  425fa0:	xor    al,0x32
  425fa3:	or     DWORD PTR [esi-0x3],eax
  425fa6:	or     al,0xb2
  425fa8:	mov    esi,0x87f0800c
  425fad:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fb4:	mov    dl,0xba
  425fb6:	sub    edi,edi
  425fb8:	je     0x42600a
  425fba:	ja     0x426001
  425fbc:	xor    BYTE PTR [edi+0x71],0xbe
  425fc0:	lds    edi,FWORD PTR [edx]
  425fc2:	lea    ecx,[ebp-0x7f788880]
  425fc8:	lock xor cl,BYTE PTR [ecx]
  425fcb:	inc    esi
  425fcc:	std    
  425fcd:	or     al,0xb2
  425fcf:	mov    esi,0x87f0800c
  425fd4:	and    BYTE PTR [edi+0x29bab232],0x80
  425fdb:	lock adc eax,0xa4537c53
  425fe1:	in     eax,dx
  425fe2:	mov    dl,0x8b
  425fe4:	push   DWORD PTR [esi+esi*4-0x42]
  425fe8:	arpl   WORD PTR [edx-0x72f412f7],si
  425fee:	lea    ecx,[ebp+0x171a780]
  425ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ff5:	jae    0x425fe6
  425ff7:	inc    ebx
  425ff8:	std    
  425ff9:	push   eax
  425ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ffb:	xor    eax,0x803df050
  426000:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42600b:	or     al,0x80
  42600d:	ja     0x426006
  42600f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426016:	ja     0x425fe0
  426018:	push   ebx
  426019:	sub    dl,BYTE PTR [ebx-0x5c]
  42601c:	call   DWORD PTR [ecx]
  42601e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426025:	push   eax
  426026:	ja     0x42607d
  426028:	xor    BYTE PTR [edi-0x38],0x6e
  42602c:	out    0x55,eax
  42602e:	in     eax,dx
  42602f:	mov    dl,0xa6
  426031:	mov    dl,0xc4
  426033:	or     al,0x80
  426035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426036:	mov    edx,DWORD PTR [ebx-0x5c]
  426039:	xor    BYTE PTR [edi+0x55b79455],ah
  42603f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426046:	inc    esi
  426047:	adc    DWORD PTR [edx+esi*4],ecx
  42604a:	test   BYTE PTR [ecx],ch
  42604c:	xor    BYTE PTR [edi-0x38],0xb2
  426050:	mov    esi,0x8bf0800c
  426055:	push   ebx
  426056:	jo     0x42600a
  426058:	test   BYTE PTR [ecx],ch
  42605a:	xor    BYTE PTR [edi+0x55],0x53
  42605e:	lods   al,BYTE PTR ds:[esi]
  42605f:	jmp    DWORD PTR [eax+0x935f080]
  426065:	pop    esp
  426066:	xor    BYTE PTR [ebx+0x74],al
  426069:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42606f:	ja     0x4260c6
  426071:	xor    BYTE PTR [edi+0x7a],0x9
  426075:	inc    esi
  426076:	mov    dl,0xc
  426078:	mov    dl,0x86
  42607a:	or     al,0x80
  42607c:	ja     0x426075
  42607e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426085:	ja     0x4260bc
  426087:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42608b:	add    eax,0xa6a453a7
  426090:	adc    ebp,ecx
  426092:	mov    dl,0xa6
  426094:	xchg   esp,eax
  426095:	xchg   BYTE PTR [ebx+0x70],dl
  426098:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  42609f:	mov    dl,0xc
  4260a1:	mov    dl,0x84
  4260a3:	or     al,0x57
  4260a5:	fstp   DWORD PTR [eax-0x21]
  4260a8:	adc    DWORD PTR [ebx+0x11],edx
  4260ab:	addr16 out 0x58,al
  4260ae:	fist   WORD PTR [ecx]
  4260b0:	xlat   BYTE PTR ds:[ebx]
  4260b1:	aaa    
  4260b2:	arpl   WORD PTR [ecx],dx
  4260b4:	xlat   BYTE PTR ds:[ebx]
  4260b5:	dec    esi
  4260b6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ba:	jno    0x4260a8
  4260bc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260c2:	out    dx,eax
  4260c3:	(bad)  
  4260c4:	aad    0xe
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260d2:	push   ebp
  4260d3:	xor    BYTE PTR [eax],0x3a
  4260d6:	out    dx,eax
  4260d7:	in     eax,dx
  4260d8:	ja     0x42610f
  4260da:	or     al,0x4d
  4260dc:	lock cmp eax,0x4d234f09
  4260e2:	dec    ebp
  4260e3:	dec    ebp
  4260e4:	les    ebp,FWORD PTR [edi]
  4260e6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260ed:	adc    eax,0x7c45773a
  4260f2:	ja     0x42615e
  4260f4:	rcr    BYTE PTR [eax-0x21],1
  4260f7:	adc    DWORD PTR [eax-0x59],edx
  4260fa:	jbe    0x42607c
  4260fc:	ja     0x426168
  4260fe:	xor    al,0x76
  426101:	or     DWORD PTR [esi-0x3],eax
  426104:	or     al,0xb2
  426106:	mov    esi,0x6af0800c
  42610b:	and    BYTE PTR [edi+0x29bab276],0x80
  426112:	lock and DWORD PTR [eax+0x537c5330],eax
  426119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42611a:	push   DWORD PTR [ecx+eax*1+0x75]
  42611e:	mov    dl,0xe5
  426120:	xor    al,0x45
  426123:	arpl   di,bp
  426125:	rcl    DWORD PTR [ebp-0x80],cl
  426128:	ja     0x42619b
  42612a:	in     al,dx
  42612b:	ja     0x426142
  42612d:	push   eax
  42612e:	ja     0x4261a1
  426130:	sub    BYTE PTR [ebp-0x12],0x50
  426134:	ja     0x42614b
  426136:	xor    BYTE PTR [edi-0x79],0x80
  42613a:	lock xor cl,BYTE PTR [ecx]
  42613d:	inc    esi
  42613e:	std    
  42613f:	or     al,0xb2
  426141:	mov    esi,0x87f0800c
  426146:	and    BYTE PTR [edi+0x53a45332],0x7c
  42614d:	push   DWORD PTR [edx+esi*4-0x46]
  426151:	sub    DWORD PTR [edi+0x77],ebx
  426154:	adc    eax,0xdbf4f09
  426159:	dec    ebp
  42615a:	dec    ebp
  42615b:	xor    al,0x8a
  42615e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426165:	or     al,0xe2
  426167:	or     eax,0xb2f7539d
  42616c:	clc    
  42616d:	sub    edi,edi
  42616f:	inc    BYTE PTR [eax-0x587f7569]
  426175:	mov    dl,BYTE PTR [ebx+0x7e]
  426178:	mov    dl,0x7
  42617a:	or     al,0x53
  42617c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426183:	inc    BYTE PTR [eax-0x587f7569]
  426189:	mov    dl,BYTE PTR [ebx+0x7e]
  42618c:	mov    dl,0x7
  42618e:	or     al,0x53
  426190:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426197:	inc    BYTE PTR [eax-0x587f7569]
  42619d:	mov    dl,BYTE PTR [ebx+0x7e]
  4261a0:	push   ebx
  4261a1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261a8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261af:	dec    ebp
  4261b0:	dec    ebp
  4261b1:	dec    ebp
  4261b2:	xor    al,0x81
  4261b5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261bc:	jle    0x426211
  4261be:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261c5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261cc:	dec    ebp
  4261cd:	dec    ebp
  4261ce:	xor    al,0x21
  4261d1:	xor    BYTE PTR [eax],0x80
  4261d4:	xchg   edi,eax
  4261d5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261db:	or     dl,BYTE PTR [ebx+0x7e]
  4261de:	push   ebx
  4261df:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261e6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261ed:	dec    ebp
  4261ee:	dec    ebp
  4261ef:	xor    al,0x1d
  4261f2:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  4261f9:	sub    DWORD PTR [ebx+0x51],edx
  4261fc:	mov    dl,0xbe
  4261fe:	or     al,0xff
  426200:	inc    BYTE PTR [eax-0x587f7569]
  426206:	mov    dl,BYTE PTR [ebx-0x7e]
  426209:	xor    BYTE PTR [edi-0x76],0x53
  42620d:	jle    0x4261c1
  42620f:	mov    ah,0x29
  426211:	mov    dl,0x7
  426213:	or     al,0xff
  426215:	xchg   esp,eax
  426216:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42621d:	or     eax,0xb20c86b2
  426222:	mov    ah,0x29
  426224:	push   DWORD PTR [esp+ebp*8-0x9]
  426228:	push   eax
  426229:	inc    ecx
  42622a:	sbb    ch,dl
  42622c:	dec    ebp
  42622d:	dec    ebp
  42622e:	dec    ebp
  42622f:	xor    al,0x8a
  426232:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426239:	or     al,0xe2
  42623b:	or     eax,0xb2f7539d
  426240:	clc    
  426241:	sub    edi,edi
  426243:	inc    BYTE PTR [eax-0x587f7569]
  426249:	mov    dl,BYTE PTR [ebx+0x7e]
  42624c:	mov    dl,0x7
  42624e:	or     al,0x53
  426250:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426257:	inc    BYTE PTR [eax-0x587f7569]
  42625d:	mov    dl,BYTE PTR [ebx+0x7e]
  426260:	mov    dl,0x7
  426262:	or     al,0x53
  426264:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42626b:	inc    BYTE PTR [ecx]
  42626d:	xchg   edi,eax
  42626e:	adc    DWORD PTR [eax+0x16],0x1
  426272:	aad    0x4d
  426274:	dec    ebp
  426275:	dec    ebp
  426276:	add    DWORD PTR [ecx],eax
  426278:	push   edx
  426279:	dec    ebp
  42627a:	dec    ebp
  42627b:	dec    ebp
  42627c:	xchg   esi,eax
  42627d:	xor    al,0x8a
  426280:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426287:	sub    eax,0xbeb2f753
  42628c:	or     al,0xb2
  42628e:	clc    
  42628f:	sub    edi,edi
  426291:	(bad)  
  426292:	xchg   esi,eax
  426293:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  426297:	lea    ecx,[ebp+0x3e4c800a]
  42629d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262a3:	xchg   edi,eax
  4262a4:	and    eax,0x3acd4c80
  4262a9:	lea    ecx,[ebp-0x7fde88b0]
  4262af:	ja     0x4262a0
  4262b1:	sub    bh,0xec
  4262b4:	lock and DWORD PTR [eax-0x10],edx
  4262b8:	and    DWORD PTR [eax-0x687f3710],eax
  4262be:	mov    ecx,DWORD PTR [ecx]
  4262c0:	inc    esi
  4262c1:	mov    dh,0xc
  4262c3:	mov    dl,0x7
  4262c5:	or     al,0x80
  4262c7:	xchg   edi,eax
  4262c8:	enter  0xd780,0x8b
  4262cc:	push   ebx
  4262cd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262d3:	enter  0x2a53,0xff
  4262d7:	push   ecx
  4262d8:	adc    bh,0x8b
  4262db:	or     DWORD PTR [esi-0x3e],eax
  4262de:	or     al,0xb2
  4262e0:	mov    BYTE PTR [eax+eax*4],cl
  4262e3:	xlat   BYTE PTR ds:[ebx]
  4262e4:	enter  0xa780,0x8b
  4262e8:	push   ebx
  4262e9:	pushf  
  4262ea:	push   ebx
  4262eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ec:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262f3:	mov    dl,0x2
  4262f5:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262fb:	ret    0xb20c
  4262fe:	mov    BYTE PTR [eax+eax*4],cl
  426301:	xlat   BYTE PTR ds:[ebx]
  426302:	enter  0xa780,0x8b
  426306:	push   ebx
  426307:	pushf  
  426308:	push   ebx
  426309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426311:	mov    dl,0x2
  426313:	sub    DWORD PTR [eax+0x46098bd7],eax
  426319:	ret    0xb20c
  42631c:	mov    BYTE PTR [eax+eax*4],cl
  42631f:	xlat   BYTE PTR ds:[ebx]
  426320:	enter  0x9c53,0x80
  426324:	out    0x8b,eax
  426326:	push   ebx
  426327:	dec    ebp
  426328:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	and    DWORD PTR [edx-0x6979d6fe],esi
  426336:	xchg   DWORD PTR [ebp+0x4d],ecx
  426339:	xor    BYTE PTR [edi-0x51],0xab
  42633d:	test   eax,0x81fb70a3
  426342:	lea    edx,[edi-0x78127880]
  426348:	inc    ebp
  426349:	xchg   ebx,eax
  42634a:	cdq    
  42634b:	fwait
  42634c:	push   ebx
  42634d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42634e:	push   ebx
  42634f:	jo     0x4263cd
  426351:	ja     0x4262d5
  426353:	fstp   DWORD PTR [eax-0x21]
  426356:	adc    DWORD PTR [esi-0x7a],ebx
  426359:	pop    DWORD PTR [ebx+0x26]
  42635c:	push   eax
  42635d:	ja     0x4262e2
  42635f:	jl     0x4263d8
  426361:	xchg   ah,ah
  426363:	pop    eax
  426364:	fist   WORD PTR [ecx]
  426366:	push   eax
  426367:	ja     0x4262f0
  426369:	jl     0x4263e2
  42636b:	xchg   esi,esi
  42636d:	mov    ds:0x777c386f,eax
  426372:	enter  0xe9f6,0x6f
  426376:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42637a:	cli    
  42637b:	and    al,0x6f
  42637d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426381:	hlt    
  426382:	and    al,0x6f
  426384:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426388:	mul    BYTE PTR [esi+ebp*8]
  42638b:	cmp    BYTE PTR [ecx],al
  42638d:	ja     0x42637d
  42638f:	push   eax
  426390:	ja     0x42631d
  426392:	xor    BYTE PTR [edi+0x1d],0x80
  426396:	bound  esi,QWORD PTR [esi]
  426398:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  42639e:	xor    al,0x1d
  4263a1:	or     ch,0x2e
  4263a4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263aa:	pop    ebp
  4263ab:	in     al,dx
  4263ac:	out    0x65,al
  4263ae:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263b5:	lea    ecx,[ebp-0x7f0618b0]
  4263bb:	out    0x83,eax
  4263bd:	or     DWORD PTR [esi-0x7b],eax
  4263c0:	or     al,0xb2
  4263c2:	popa   
  4263c3:	or     al,0x80
  4263c5:	out    0x82,eax
  4263c7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263ce:	add    al,0xd4
  4263d0:	push   ebx
  4263d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263d2:	mov    dl,0xbc
  4263d4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263da:	pushf  
  4263db:	xlat   BYTE PTR ds:[ebx]
  4263dc:	push   edx
  4263dd:	sbb    BYTE PTR [ecx],0x50
  4263e0:	xchg   edi,eax
  4263e1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263e7:	jno    0x426369
  4263e9:	xchg   edi,eax
  4263ea:	and    DWORD PTR [ecx],eax
  4263ec:	xchg   edi,eax
  4263ed:	test   BYTE PTR [edx-0x697428b3],ch
  4263f3:	or     bl,BYTE PTR [ecx+0x11dd74d]
  4263f9:	ja     0x4263f4
  4263fb:	dec    ebp
  4263fc:	xlat   BYTE PTR ds:[ebx]
  4263fd:	out    dx,eax
  4263fe:	dec    ebp
  4263ff:	xlat   BYTE PTR ds:[ebx]
  426400:	enter  0xd74d,0x32
  426404:	dec    ebp
  426405:	xlat   BYTE PTR ds:[ebx]
  426406:	xchg   DWORD PTR [edx],ecx
  426408:	add    DWORD PTR [edi-0x76],esi
  42640b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426411:	push   eax
  426412:	ja     0x426431
  426414:	xor    BYTE PTR [edi+0x1d],0x80
  426418:	lock and eax,0x80159250
  42641e:	ja     0x426445
  426420:	jl     0x4263af
  426422:	in     al,dx
  426423:	lea    ecx,[ebp-0x7b887f73]
  426429:	xor    al,0x25
  42642c:	push   eax
  42642d:	xchg   edx,eax
  42642e:	out    dx,al
  42642f:	xor    BYTE PTR [edi+0x71],0x80
  426433:	lock and eax,0x80ef9250
  426439:	ja     0x426450
  42643b:	xor    al,0x25
  42643e:	push   eax
  42643f:	xchg   edx,eax
  426440:	and    DWORD PTR [eax+0x6d7c2577],eax
  426446:	and    eax,0x8d8d8d3a
  42644b:	les    ebx,FWORD PTR [edi]
  42644d:	xor    BYTE PTR [edi+0x1d],0x80
  426451:	lock sbb eax,0x3a2ecd80
  426457:	lea    ecx,[ebp+0x3a265080]
  42645d:	lea    ecx,[ebp+0x3a438d80]
  426463:	push   eax
  426464:	ja     0x4263f0
  426466:	xor    BYTE PTR [edi-0x76],0xab
  42646a:	test   eax,0x1dfb70a3
  42646f:	lea    edx,[edi+0x77808780]
  426475:	and    DWORD PTR [edx-0x72c5c179],esp
  42647b:	lea    edx,[ebx-0x9986467]
  426481:	and    al,0x6f
  426483:	cmp    BYTE PTR [ecx],cl
  426485:	dec    edi
  426486:	mov    esi,0x808d8da6
  42648b:	ja     0x4264fe
  42648d:	addr16 cmc 
  42648f:	and    al,0x6f
  426491:	cmp    BYTE PTR [ecx],cl
  426493:	dec    edi
  426494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426496:	lea    ecx,[ebp-0x26788884]
  42649c:	pop    eax
  42649d:	fist   WORD PTR [ecx]
  42649f:	pop    esi
  4264a0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264a6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264aa:	in     al,0x58
  4264ac:	fist   WORD PTR [ecx]
  4264ae:	push   eax
  4264af:	ja     0x426437
  4264b1:	xor    BYTE PTR [edi-0x11],0x50
  4264b5:	ja     0x42647f
  4264b7:	xor    BYTE PTR [edi-0x38],0x80
  4264bb:	int    0x86
  4264bd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264c3:	lea    edx,[eax+0x77]
  4264c6:	mov    esp,DWORD PTR [eax+0x7f]
  4264c9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264cf:	lea    ecx,[ebp+0x5a7750b9]
  4264d5:	in     eax,dx
  4264d6:	push   0xd
  4264d8:	mov    ecx,0x80d17750
  4264dd:	mov    dl,0xb9
  4264df:	push   eax
  4264e0:	ja     0x4264f8
  4264e2:	pop    esi
  4264e3:	int3   
  4264e4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264ea:	push   eax
  4264eb:	xchg   edi,eax
  4264ec:	loope  0x4264ef
  4264ee:	push   edx
  4264ef:	or     al,0x1
  4264f1:	lahf   
  4264f2:	stos   BYTE PTR es:[edi],al
  4264f3:	cmp    BYTE PTR [esi-0x47],0x50
  4264f7:	xchg   edi,eax
  4264f8:	push   ds
  4264f9:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426501:	jle    0x4264bc
  426503:	push   eax
  426504:	xchg   edi,eax
  426505:	int    0x1
  426507:	xchg   esi,eax
  426508:	push   ebp
  426509:	add    BYTE PTR [ebp-0x1518af47],0xed
  426510:	jl     0x42658c
  426512:	mov    ecx,0x10fe750
  426517:	fistp  WORD PTR [ecx-0x47]
  42651a:	push   eax
  42651b:	out    0x4c,eax
  42651d:	mov    ecx,0xb9107750
  426522:	push   eax
  426523:	xlat   BYTE PTR ds:[ebx]
  426524:	pop    DWORD PTR [eax+0x7750b974]
  42652a:	inc    ecx
  42652b:	mov    ecx,0x4d6d1850
  426530:	dec    ebp
  426531:	dec    ebp
  426532:	in     eax,dx
  426533:	push   0x62
  426535:	mov    ecx,0x4dd84f50
  42653a:	dec    ebp
  42653b:	dec    ebp
  42653c:	add    DWORD PTR [edx+0x4f50b985],edx
  426542:	jne    0x426591
  426544:	dec    ebp
  426545:	dec    ebp
  426546:	in     eax,dx
  426547:	push   0xffffffd4
  426549:	mov    ecx,0x4d794f50
  42654e:	dec    ebp
  42654f:	dec    ebp
  426550:	add    DWORD PTR [edx+0x4f50b971],edx
  426556:	jge    0x4265a5
  426558:	dec    ebp
  426559:	dec    ebp
  42655a:	in     eax,dx
  42655b:	push   0xffffffc0
  42655d:	mov    ecx,0x4dda4f50
  426562:	dec    ebp
  426563:	dec    ebp
  426564:	mov    ecx,0x4d310150
  426569:	dec    ebp
  42656a:	dec    ebp
  42656b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426570:	mov    cl,0x4d
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	xor    BYTE PTR [edi-0x79],0x80
  426578:	lock xor cl,BYTE PTR [ecx]
  42657b:	inc    esi
  42657c:	std    
  42657d:	or     al,0xb2
  42657f:	mov    esi,0x87f0800c
  426584:	adc    BYTE PTR [edi-0x385893ce],0x4
  42658b:	aam    0x53
  42658d:	jl     0x4265e2
  42658f:	jb     0x426543
  426591:	mov    edx,0xc4fbff29
  426596:	xchg   edx,eax
  426597:	add    ebp,edx
  426599:	ja     0x4265f5
  42659b:	mov    ecx,0x5c09a180
  4265a0:	sbb    DWORD PTR [ecx],ecx
  4265a2:	pop    esp
  4265a3:	jo     0x4265f8
  4265a5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265ab:	lea    esi,[esi+0x9bab207]
  4265b1:	(bad)  
  4265b2:	(bad)  
  4265b3:	adc    BYTE PTR [ecx+0x2f],al
  4265b6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265bd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265c4:	mov    dl,0x7
  4265c6:	or     al,0x80
  4265c8:	xchg   edi,eax
  4265c9:	stc    
  4265ca:	adc    bh,0x86
  4265cd:	push   ebx
  4265ce:	sub    dl,BYTE PTR [ebx+0xb]
  4265d1:	call   DWORD PTR [ecx-0x4e]
  4265d4:	clc    
  4265d5:	sub    esp,ebp
  4265d7:	mov    dl,0xed
  4265d9:	mov    ebp,DWORD PTR [edi-0x29]
  4265dc:	icebp  
  4265dd:	xor    BYTE PTR [edi-0x79],0x80
  4265e1:	lock xor cl,BYTE PTR [ecx]
  4265e4:	inc    esi
  4265e5:	std    
  4265e6:	or     al,0xb2
  4265e8:	mov    esi,0x87f0800c
  4265ed:	adc    BYTE PTR [edi+0x537c5332],0x72
  4265f4:	mov    dl,0xba
  4265f6:	sub    edi,edi
  4265f8:	sti    
  4265f9:	les    edx,FWORD PTR [edx-0x32882aff]
  4265ff:	mov    ecx,0x5c09a180
  426604:	sbb    DWORD PTR [ecx],ecx
  426606:	pop    esp
  426607:	jo     0x42665c
  426609:	adc    DWORD PTR [edx-0x72c7163e],esp
  42660f:	lea    esi,[esi+0x9bab207]
  426615:	(bad)  
  426616:	(bad)  
  426617:	adc    BYTE PTR [ecx+0x2f],al
  42661a:	inc    ecx
  42661b:	or     eax,0xf0804d4d
  426620:	stc    
  426621:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426628:	mov    dl,0x7
  42662a:	or     al,0x80
  42662c:	xchg   edi,eax
  42662d:	stc    
  42662e:	adc    bh,0x86
  426631:	push   ebx
  426632:	sub    dl,BYTE PTR [ebx+0xb]
  426635:	call   DWORD PTR [ecx-0x4e]
  426638:	clc    
  426639:	sub    esp,ebp
  42663b:	mov    dl,0xed
  42663d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426644:	xor    al,0x32
  426647:	or     DWORD PTR [esi-0x3],eax
  42664a:	or     al,0xb2
  42664c:	mov    esi,0x87f0800c
  426651:	adc    BYTE PTR [edi+0x537c5332],0x72
  426658:	mov    dl,0xba
  42665a:	sub    edi,edi
  42665c:	sti    
  42665d:	les    esi,FWORD PTR [ebp+0x1]
  426660:	push   esi
  426661:	ja     0x4266d0
  426663:	dec    ebp
  426664:	dec    ebp
  426665:	dec    ebp
  426666:	mov    ecx,0x5c09a180
  42666b:	sbb    DWORD PTR [ecx],ecx
  42666d:	pop    esp
  42666e:	jo     0x4266c3
  426670:	adc    DWORD PTR [edx-0x72c7163e],esp
  426676:	lea    esi,[esi+0x9bab207]
  42667c:	(bad)  
  42667d:	(bad)  
  42667e:	adc    BYTE PTR [ecx+0x2f],al
  426681:	prefetchw BYTE PTR [ebp+0x4d]
  426685:	xor    al,0xf9
  426688:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42668f:	mov    dl,0x7
  426691:	or     al,0x80
  426693:	xchg   edi,eax
  426694:	stc    
  426695:	adc    bh,0x86
  426698:	push   ebx
  426699:	sub    dl,BYTE PTR [ebx+0xb]
  42669c:	call   DWORD PTR [ecx-0x4e]
  42669f:	clc    
  4266a0:	sub    esp,ebp
  4266a2:	mov    dl,0xed
  4266a4:	mov    ebp,edi
  4266a6:	xlat   BYTE PTR ds:[ebx]
  4266a7:	pop    esp
  4266a8:	add    DWORD PTR [edi-0x7],ecx
  4266ab:	or     eax,0x77504d4d
  4266b0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266b6:	cmp    eax,0xef50d146
  4266bb:	icebp  
  4266bc:	outs   dx,BYTE PTR ds:[esi]
  4266bd:	sub    ecx,DWORD PTR [ebx]
  4266bf:	sub    BYTE PTR [eax+0xa],dl
  4266c2:	out    dx,al
  4266c3:	or     BYTE PTR [edi-0x7],0xd
  4266c7:	dec    ebp
  4266c8:	dec    ebp
  4266c9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266cd:	dec    ebp
  4266ce:	dec    ebp
  4266cf:	push   eax
  4266d0:	xlat   BYTE PTR ds:[ebx]
  4266d1:	xchg   dl,bh
  4266d3:	and    ah,BYTE PTR [edi+ebp*2]
  4266d6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266d9:	or     DWORD PTR [edi-0x2a],ecx
  4266dc:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266e2:	or     DWORD PTR [edi+0x6e],ecx
  4266e5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266eb:	lea    ecx,[ebp-0x74b0af47]
  4266f1:	or     eax,0x74804d4d
  4266f6:	mov    ecx,0xd854f50
  4266fb:	dec    ebp
  4266fc:	dec    ebp
  4266fd:	pop    esi
  4266fe:	daa    
  4266ff:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426705:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42670b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426711:	or     eax,0x5e4d4d0d
  426716:	pop    ds
  426717:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42671d:	lea    ecx,[ebp+0x4d]
  426720:	dec    ebp
  426721:	in     eax,dx
  426722:	push   0xffffffe8
  426724:	cmp    ch,0xb9
  426727:	push   eax
  426728:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42672f:	jno    0x426791
  426731:	jae    0x42676b
  426733:	lea    ecx,[ebp-0x11feaf47]
  426739:	dec    ebp
  42673a:	dec    ebp
  42673b:	dec    ebp
  42673c:	in     eax,dx
  42673d:	mov    dl,0xaa
  42673f:	mov    ecx,0x4d6f0150
  426744:	dec    ebp
  426745:	dec    ebp
  426746:	pusha  
  426747:	push   edi
  426748:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42674e:	out    dx,eax
  42674f:	dec    ebp
  426750:	dec    ebp
  426751:	dec    ebp
  426752:	in     eax,dx
  426753:	mov    dl,0x9d
  426755:	mov    ecx,0x4da60150
  42675a:	dec    ebp
  42675b:	dec    ebp
  42675c:	adc    BYTE PTR [ecx],0xb9
  42675f:	push   eax
  426760:	add    DWORD PTR [ecx],esp
  426762:	dec    ebp
  426763:	dec    ebp
  426764:	dec    ebp
  426765:	pusha  
  426766:	in     eax,dx
  426767:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42676d:	mov    eax,ds:0x534d4d4d
  426772:	cld    
  426773:	pusha  
  426774:	xor    ch,BYTE PTR [esi-0x73]
  426777:	lea    edi,[ecx+0x4d710150]
  42677d:	dec    ebp
  42677e:	dec    ebp
  42677f:	mov    dl,0x86
  426781:	or     al,0x60
  426783:	sbb    ebx,DWORD PTR [eax]
  426785:	lea    ecx,[ebp-0x6ffeaf47]
  42678b:	dec    ebp
  42678c:	dec    ebp
  42678d:	dec    ebp
  42678e:	pusha  
  42678f:	fwait
  426790:	xchg   BYTE PTR [ebp+0x150b98d],cl
  426796:	adc    eax,0x804d4d4d
  42679b:	lock jno 0x42678b
  42679e:	add    eax,0x29bab20d
  4267a3:	push   DWORD PTR [edx+0xd164f50]
  4267a9:	dec    ebp
  4267aa:	dec    ebp
  4267ab:	xor    BYTE PTR [edi+0x21],0x80
  4267af:	lock and DWORD PTR [ebx-0x4],edx
  4267b3:	mov    dl,0x86
  4267b5:	or     al,0xed
  4267b7:	add    eax,0x29bab20d
  4267bc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267c2:	or     eax,0x4d4d4d4d
  4267c7:	lea    ecx,[ebp+0xd164f01]
  4267cd:	dec    ebp
  4267ce:	dec    ebp
  4267cf:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267d5:	jno    0x42682a
  4267d7:	cld    
  4267d8:	mov    dl,0x86
  4267da:	or     al,0xed
  4267dc:	add    eax,0x29bab20d
  4267e1:	push   DWORD PTR [edx-0x74b0fef6]
  4267e7:	or     eax,0x800a4d4d
  4267ec:	ja     0x4267b6
  4267ee:	or     ch,0x3e
  4267f1:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  4267f7:	dec    ebp
  4267f8:	dec    ebp
  4267f9:	dec    ebp
  4267fa:	sar    ch,cl
  4267fc:	sbb    al,0x38
  4267fe:	dec    ebp
  4267ff:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426809:	ja     0x426796
  42680b:	dec    edi
  42680c:	push   0xffffffd5
  42680e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42680f:	mov    ds:0x1d4c6957,al
  426814:	in     eax,dx
  426815:	fstp   st(0)
  426817:	mov    esp,0x21f08076
  42681c:	adc    BYTE PTR [edi+0x530de221],0x51
  426823:	popf   
  426824:	push   ebx
  426825:	div    DWORD PTR [edx-0x414dd608]
  42682b:	or     al,0xff
  42682d:	inc    BYTE PTR [eax-0x2e7f3769]
  426833:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42683a:	dec    edi
  42683b:	push   0x808d8d2f
  426840:	lock and DWORD PTR [eax+0x51532197],eax
  426847:	mov    dl,0xbe
  426849:	or     al,0x53
  42684b:	div    DWORD PTR [edx-0x100d608]
  426851:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426858:	lea    ecx,[ebp-0xf7f59b0]
  42685e:	and    DWORD PTR [eax+0x51532197],eax
  426864:	mov    dl,0xbe
  426866:	or     al,0x53
  426868:	div    DWORD PTR [edx-0x100d608]
  42686e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426875:	lea    ecx,[ebp+0x6760a650]
  42687b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426881:	and    eax,0x804d4d4d
  426886:	adc    DWORD PTR [ecx+0x4d290150],edi
  42688c:	dec    ebp
  42688d:	dec    ebp
  42688e:	pusha  
  42688f:	daa    
  426890:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426896:	sub    eax,0x604d4d4d
  42689b:	sub    BYTE PTR [eax],bh
  42689d:	lea    ecx,[ebp-0x3ffeaf47]
  4268a3:	dec    ebp
  4268a4:	dec    ebp
  4268a5:	dec    ebp
  4268a6:	in     eax,dx
  4268a7:	mov    dl,0x4
  4268a9:	mov    ecx,0x4d350150
  4268ae:	dec    ebp
  4268af:	dec    ebp
  4268b0:	pusha  
  4268b1:	adc    al,0x38
  4268b3:	lea    ecx,[ebp+0x390150b9]
  4268b9:	dec    ebp
  4268ba:	dec    ebp
  4268bb:	dec    ebp
  4268bc:	in     eax,dx
  4268bd:	mov    dl,0xf3
  4268bf:	mov    ecx,0x4d3d0150
  4268c4:	dec    ebp
  4268c5:	dec    ebp
  4268c6:	pusha  
  4268c7:	sbb    al,0x38
  4268c9:	lea    ecx,[ebp-0x2dfeaf47]
  4268cf:	dec    ebp
  4268d0:	dec    ebp
  4268d1:	dec    ebp
  4268d2:	adc    BYTE PTR [ecx],0xb9
  4268d5:	push   eax
  4268d6:	add    DWORD PTR [ebp+0x4d],eax
  4268d9:	dec    ebp
  4268da:	dec    ebp
  4268db:	pusha  
  4268dc:	sbb    BYTE PTR [eax],bh
  4268de:	lea    ecx,[ebp+0x490150b9]
  4268e4:	dec    ebp
  4268e5:	dec    ebp
  4268e6:	dec    ebp
  4268e7:	pusha  
  4268e8:	daa    
  4268e9:	pop    ebp
  4268ea:	lea    ecx,[ebp-0x7efeaf47]
  4268f0:	dec    ebp
  4268f1:	dec    ebp
  4268f2:	dec    ebp
  4268f3:	pusha  
  4268f4:	push   ebx
  4268f5:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  4268fb:	aam    0x4d
  4268fd:	dec    ebp
  4268fe:	dec    ebp
  4268ff:	cld    
  426900:	ja     0x426885
  426902:	mov    ds:0x8d185d60,eax
  426907:	lea    edi,[ecx+0x4d550150]
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	in     eax,dx
  426910:	mov    dl,0x5d
  426912:	mov    ecx,0x4d590150
  426917:	dec    ebp
  426918:	dec    ebp
  426919:	cld    
  42691a:	ja     0x4268c4
  42691c:	or     bh,ah
  42691e:	ja     0x426924
  426920:	xchg   ebp,eax
  426921:	cld    
  426922:	ja     0x4268d0
  426924:	stos   DWORD PTR es:[edi],eax
  426925:	pusha  
  426926:	(bad)  
  426928:	lea    ecx,[ebp+0x5d0150b9]
  42692e:	dec    ebp
  42692f:	dec    ebp
  426930:	dec    ebp
  426931:	cld    
  426932:	ja     0x4268b8
  426934:	jg     0x426996
  426936:	fistp  DWORD PTR [eax-0x73]
  426939:	lea    edi,[ecx+0x4dd60150]
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268fe
  426944:	popf   
  426945:	cld    
  426946:	ja     0x426940
  426948:	xchg   esi,eax
  426949:	pusha  
  42694a:	inc    edx
  42694b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426951:	gs dec ebp
  426953:	dec    ebp
  426954:	dec    ebp
  426955:	cld    
  426956:	ja     0x42690c
  426958:	xchg   BYTE PTR [eax-0x687f8e10],al
  42695e:	jno    0x4269b3
  426960:	push   ecx
  426961:	push   ebx
  426962:	div    DWORD PTR [edx-0x74df342]
  426968:	sub    edi,edi
  42696a:	inc    ah
  42696c:	fwait
  42696d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426974:	jle    0x426928
  426976:	pop    es
  426977:	or     al,0x53
  426979:	mov    esi,DWORD PTR [edx-0x6300d644]
  42697f:	inc    ebx
  426980:	dec    BYTE PTR [ecx]
  426982:	loopne 0x4269b5
  426984:	iret   
  426985:	add    DWORD PTR [eax-0x187f8e69],0x71
  42698c:	push   ebx
  42698d:	jle    0x426941
  42698f:	pop    es
  426990:	or     al,0x53
  426992:	mov    esi,DWORD PTR [edx-0x6300d644]
  426998:	and    bh,0x8b
  42699b:	mov    ds:0x8d8dcd05,al
  4269a0:	lea    esp,[edx-0x7272e14e]
  4269a6:	lea    eax,[ebx-0x7b]
  4269a9:	adc    BYTE PTR [ecx],dh
  4269ab:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269b1:	lock jno 0x426a07
  4269b4:	jle    0x426a09
  4269b6:	std    
  4269b7:	mov    dl,0xba
  4269b9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269bf:	xor    al,0x8b
  4269c2:	in     al,dx
  4269c3:	inc    BYTE PTR [eax-0x187f8e69]
  4269c9:	jno    0x426a1e
  4269cb:	jle    0x426a20
  4269cd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269d3:	sub    edi,edi
  4269d5:	pushf  
  4269d6:	in     eax,dx
  4269d7:	sti    
  4269d8:	out    dx,eax
  4269d9:	push   eax
  4269da:	lock mov esp,DWORD PTR [ebx-0x2]
  4269de:	in     al,0x1
  4269e0:	xor    al,0x71
  4269e3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269ea:	mov    dl,0xbe
  4269ec:	or     al,0xb2
  4269ee:	clc    
  4269ef:	sub    edi,edi
  4269f1:	(bad)  
  4269f2:	push   eax
  4269f3:	add    DWORD PTR [esi],edx
  4269f5:	or     eax,0xf0804d4d
  4269fa:	and    DWORD PTR [eax+0x51532197],eax
  426a00:	push   ebx
  426a01:	div    DWORD PTR [edx-0x414dd608]
  426a07:	or     al,0xff
  426a09:	inc    BYTE PTR [ecx]
  426a0b:	xchg   edi,eax
  426a0c:	adc    DWORD PTR [eax+0x16],0x1
  426a10:	push   ds
  426a11:	or     eax,0xb3f14d4d
  426a16:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a1c:	push   eax
  426a1d:	lock es in eax,dx
  426a20:	mov    dl,0xfb
  426a22:	or     bl,0xb9
  426a25:	push   eax
  426a26:	out    0xf2,eax
  426a28:	add    esi,esp
  426a2a:	add    al,0xb9
  426a2c:	push   eax
  426a2d:	out    0x2e,eax
  426a2f:	in     eax,dx
  426a30:	jl     0x426a20
  426a32:	mov    ecx,0x1f3e750
  426a37:	out    0x15,al
  426a39:	mov    ecx,0xed36e750
  426a3e:	jl     0x426a43
  426a40:	mov    ecx,0x80f4e750
  426a45:	retf   
  426a46:	mov    ecx,0x803ee750
  426a4b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a51:	push   es
  426a52:	mov    ecx,0x8046e750
  426a57:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a5d:	retf   
  426a5e:	mov    ecx,0x1dee750
  426a63:	out    0xf2,al
  426a65:	mov    ecx,0xed56e750
  426a6a:	jl     0x426a5a
  426a6c:	mov    ecx,0x1e0e750
  426a71:	out    0x7a,al
  426a73:	mov    ecx,0xed5ee750
  426a78:	jl     0x426a7d
  426a7a:	mov    ecx,0xb9f1e750
  426a7f:	push   eax
  426a80:	lock mov cx,0x9750
  426a85:	cli    
  426a86:	adc    BYTE PTR [ecx],0xb9
  426a89:	push   eax
  426a8a:	lock push 0xffffff80
  426a8d:	lock and DWORD PTR [eax-0x8acde69],eax
  426a94:	push   ebx
  426a95:	push   ecx
  426a96:	mov    dl,0xf8
  426a98:	sub    DWORD PTR [edx-0x100f342],esi
  426a9e:	adc    BYTE PTR [edi+0x21e78021],0x53
  426aa5:	jle    0x426a59
  426aa7:	pop    es
  426aa8:	or     al,0x1
  426aaa:	xor    eax,esi
  426aac:	bound  edx,QWORD PTR [ebx-0x75]
  426aaf:	mov    dl,0xbc
  426ab1:	sub    edi,edi
  426ab3:	pushf  
  426ab4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ab8:	pushf  
  426ab9:	mov    ecx,0xf0800e50
  426abe:	and    DWORD PTR [eax+0x51532197],eax
  426ac4:	push   ebx
  426ac5:	div    DWORD PTR [edx-0x74df342]
  426acb:	sub    edi,edi
  426acd:	inc    BYTE PTR [eax+0x31012197]
  426ad3:	lock es push ebx
  426ad6:	jle    0x426a58
  426ad8:	out    0x21,eax
  426ada:	mov    dl,0x7
  426adc:	or     al,0x53
  426ade:	mov    esi,DWORD PTR [edx-0x6300d644]
  426ae4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ae8:	pushf  
  426ae9:	mov    ecx,0xf0800e50
  426aee:	and    DWORD PTR [eax-0x8acde69],eax
  426af4:	mov    dl,0xf8
  426af6:	sub    DWORD PTR [ebx+0x51],edx
  426af9:	mov    dl,0xbe
  426afb:	or     al,0xff
  426afd:	inc    BYTE PTR [eax-0x187fde69]
  426b03:	and    DWORD PTR [ebx+0x7e],edx
  426b06:	mov    dl,0x7
  426b08:	or     al,0x53
  426b0a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b10:	mov    ecx,0x52974150
  426b15:	or     eax,0xf0804d4d
  426b1a:	and    DWORD PTR [eax-0x8acde69],eax
  426b20:	mov    dl,0xf8
  426b22:	sub    DWORD PTR [ebx+0x51],edx
  426b25:	mov    dl,0xbe
  426b27:	or     al,0xff
  426b29:	inc    BYTE PTR [eax-0x187fde69]
  426b2f:	and    DWORD PTR [ebx+0x7e],edx
  426b32:	mov    dl,0x7
  426b34:	or     al,0x53
  426b36:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b3c:	mov    ecx,0xa5974150
  426b41:	or     eax,0xf0804d4d
  426b46:	jno    0x426ac8
  426b48:	xchg   edi,eax
  426b49:	jno    0x426b9e
  426b4b:	not    DWORD PTR [ebx+0x51]
  426b4e:	mov    dl,0xf8
  426b50:	sub    DWORD PTR [edx-0x100f342],esi
  426b56:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b5d:	jle    0x426bb2
  426b5f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b65:	sub    edi,edi
  426b67:	pushf  
  426b68:	in     al,dx
  426b69:	(bad)  
  426b6a:	push   eax
  426b6b:	add    DWORD PTR [esi],edx
  426b6d:	or     eax,0xf0804d4d
  426b72:	and    DWORD PTR [eax-0x187fde69],eax
  426b78:	out    dx,eax
  426b79:	push   ebx
  426b7a:	not    DWORD PTR [ebx+0x51]
  426b7d:	mov    dl,0xbe
  426b7f:	or     al,0xb2
  426b81:	clc    
  426b82:	sub    edi,edi
  426b84:	inc    BYTE PTR [ecx]
  426b86:	dec    edi
  426b87:	push   edx
  426b88:	or     eax,0xf504d4d
  426b8d:	add    DWORD PTR [esi],ebx
  426b8f:	or     eax,0x77014d4d
  426b94:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426b9a:	xor    al,0x71
  426b9d:	adc    BYTE PTR [edi+0x530de271],0x51
  426ba4:	stos   DWORD PTR es:[edi],eax
  426ba5:	push   ebx
  426ba6:	pushf  
  426ba7:	mov    dl,0xbe
  426ba9:	or     al,0xb2
  426bab:	clc    
  426bac:	sub    edi,edi
  426bae:	(bad)  
  426baf:	push   eax
  426bb0:	lidtd  [esi]
  426bb3:	or     eax,0x77804d4d
  426bb8:	and    DWORD PTR [eax-0x3acde10],eax
  426bbe:	mov    dl,0x86
  426bc0:	or     al,0x53
  426bc2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bc8:	aad    0x3d
  426bca:	add    DWORD PTR [edi+0x16],ecx
  426bcd:	or     eax,0x800a4d4d
  426bd2:	ja     0x426c45
  426bd4:	xor    al,0x71
  426bd7:	push   ebx
  426bd8:	cld    
  426bd9:	mov    dl,0x86
  426bdb:	or     al,0x53
  426bdd:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426be3:	or     al,BYTE PTR [ecx]
  426be5:	dec    edi
  426be6:	and    eax,0xa4d4d4d
  426beb:	xor    BYTE PTR [edi+0x15],0xe2
  426bef:	lea    ecx,[ebp-0x9]
  426bf2:	xor    BYTE PTR [edi+0x21],0x80
  426bf6:	lock and DWORD PTR [ebx-0x4],edx
  426bfa:	push   ebx
  426bfb:	sub    al,BYTE PTR [eax-0x794d1019]
  426c01:	or     al,0xb2
  426c03:	mov    edx,0x1b2ff29
  426c08:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c0e:	inc    ecx
  426c0f:	dec    edi
  426c10:	push   ds
  426c11:	or     eax,0x77014d4d
  426c16:	xchg   BYTE PTR es:0x804d4d88,al
  426c1d:	lock jno 0x426ba0
  426c20:	xchg   edi,eax
  426c21:	jno    0x426c76
  426c23:	push   ecx
  426c24:	mov    dl,0xbe
  426c26:	or     al,0xed
  426c28:	ret    0xb20d
  426c2b:	clc    
  426c2c:	sub    edi,edi
  426c2e:	(bad)  
  426c2f:	push   eax
  426c30:	lidtd  [esi]
  426c33:	or     eax,0x33f14d4d
  426c38:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c3e:	lea    ecx,[ebp+0xa4f50b9]
  426c44:	dec    ebp
  426c45:	dec    ebp
  426c46:	dec    ebp
  426c47:	add    edx,ebx
  426c49:	jno    0x426c04
  426c4b:	push   eax
  426c4c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c52:	popa   
  426c53:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c59:	stos   BYTE PTR es:[edi],al
  426c5a:	dec    ebp
  426c5b:	dec    ebp
  426c5c:	dec    ebp
  426c5d:	cmp    bl,0xb9
  426c60:	push   eax
  426c61:	dec    edi
  426c62:	xchg   ebp,eax
  426c63:	dec    ebp
  426c64:	dec    ebp
  426c65:	dec    ebp
  426c66:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c6d:	dec    ebp
  426c6e:	dec    ebp
  426c6f:	in     eax,dx
  426c70:	push   0x29
  426c72:	cmp    ch,0xb9
  426c75:	push   eax
  426c76:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c7c:	fisubr DWORD PTR [ecx]
  426c7e:	mov    ecx,0x4dbd0150
  426c83:	dec    ebp
  426c84:	dec    ebp
  426c85:	in     eax,dx
  426c86:	mov    dl,0xd6
  426c88:	mov    ecx,0x4de20150
  426c8d:	dec    ebp
  426c8e:	dec    ebp
  426c8f:	add    edx,ebx
  426c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c92:	mov    ecx,0x4dc50150
  426c97:	dec    ebp
  426c98:	dec    ebp
  426c99:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426ca0:	dec    ebp
  426ca1:	dec    ebp
  426ca2:	add    esi,esp
  426ca4:	scas   al,BYTE PTR es:[edi]
  426ca5:	pusha  
  426ca6:	dec    ebp
  426ca7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cad:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cb1:	add    edx,ebx
  426cb3:	or     eax,0x520150b9
  426cb8:	dec    ebp
  426cb9:	dec    ebp
  426cba:	dec    ebp
  426cbb:	mov    ecx,0x4dae6850
  426cc0:	dec    ebp
  426cc1:	dec    ebp
  426cc2:	in     eax,dx
  426cc3:	jl     0x426c50
  426cc5:	mov    ecx,0x4da56850
  426cca:	dec    ebp
  426ccb:	dec    ebp
  426ccc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426cd3:	mov    ecx,0x4de40150
  426cd8:	dec    ebp
  426cd9:	dec    ebp
  426cda:	cmp    ch,0xb9
  426cdd:	push   eax
  426cde:	add    ebp,edx
  426ce0:	dec    ebp
  426ce1:	dec    ebp
  426ce2:	dec    ebp
  426ce3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426ce8:	out    0x4d,al
  426cea:	dec    ebp
  426ceb:	dec    ebp
  426cec:	push   ebx
  426ced:	push   0xffffffb9
  426cef:	push   eax
  426cf0:	push   0x4d4d4da9
  426cf5:	add    DWORD PTR [eax-0x1b],ebp
  426cf8:	dec    ebp
  426cf9:	dec    ebp
  426cfa:	dec    ebp
  426cfb:	jl     0x426d4c
  426cfd:	lods   eax,DWORD PTR ds:[esi]
  426cfe:	dec    ebp
  426cff:	dec    ebp
  426d00:	dec    ebp
  426d01:	out    0x38,eax
  426d03:	xor    edi,DWORD PTR [eax]
  426d05:	jl     0x426d56
  426d07:	(bad)  [ebp+0x4d]
  426d0a:	dec    ebp
  426d0b:	ret    
  426d0c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d12:	ja     0x426d85
  426d14:	xor    al,0x71
  426d17:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d1e:	mov    edx,0xb2fc5329
  426d23:	xchg   BYTE PTR [edi+edi*8],cl
  426d26:	mov    dl,0x80
  426d28:	lock jno 0x426d18
  426d2b:	add    eax,0xb27e530d
  426d30:	mov    edx,0xc07b229
  426d35:	push   DWORD PTR [esi-0x4128fad]
  426d3b:	sbb    edx,DWORD PTR [ebx]
  426d3d:	jo     0x426d92
  426d3f:	dec    ebp
  426d40:	arpl   bx,cx
  426d42:	or     esi,ecx
  426d44:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d4a:	arpl   bx,di
  426d4c:	or     ebp,ebp
  426d4e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d54:	jno    0x426cd6
  426d56:	xchg   edi,eax
  426d57:	jno    0x426dac
  426d59:	push   ecx
  426d5a:	mov    dl,0xbe
  426d5c:	or     al,0xed
  426d5e:	ret    0xb20d
  426d61:	clc    
  426d62:	sub    edi,edi
  426d64:	(bad)  
  426d65:	in     al,dx
  426d66:	std    
  426d67:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d6f:	dec    ebp
  426d70:	dec    ebp
  426d71:	xor    al,0x71
  426d74:	and    bh,0x71
  426d77:	push   ebx
  426d78:	push   ecx
  426d79:	mov    dl,0xbe
  426d7b:	or     al,0xed
  426d7d:	dec    ebx
  426d7e:	or     eax,0xff29bcb2
  426d83:	sub    ch,ah
  426d85:	std    
  426d86:	mov    ecx,0xaf04180
  426d8b:	dec    ebp
  426d8c:	dec    ebp
  426d8d:	dec    ebp
  426d8e:	mov    ecx,0xb2b9b64b
  426d93:	mov    edx,0x7b6b909
  426d98:	mov    ecx,0xf080b6ff
  426d9d:	jno    0x426d1f
  426d9f:	out    0x71,eax
  426da1:	push   ebx
  426da2:	push   ecx
  426da3:	mov    dl,0xbe
  426da5:	or     al,0xed
  426da7:	dec    ebx
  426da8:	or     eax,0xff29bcb2
  426dad:	sub    ch,ah
  426daf:	std    
  426db0:	mov    ecx,0xaf01650
  426db5:	dec    ebp
  426db6:	dec    ebp
  426db7:	dec    ebp
  426db8:	xor    al,0x71
  426dbb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dc2:	or     eax,0xb20cbeb2
  426dc7:	clc    
  426dc8:	sub    edi,edi
  426dca:	inc    BYTE PTR [eax-0x4d138e69]
  426dd0:	xor    al,0x71
  426dd3:	in     eax,dx
  426dd4:	add    eax,0xb27e530d
  426dd9:	mov    edx,0xc07b229
  426dde:	push   DWORD PTR [esi-0x4128fad]
  426de4:	sbb    edx,DWORD PTR [ebx]
  426de6:	jo     0x426e3b
  426de8:	dec    ebp
  426de9:	arpl   bx,cx
  426deb:	or     edx,ebp
  426ded:	call   0x934c:0x94d4d4d
  426df4:	dec    ebp
  426df5:	dec    ebp
  426df6:	dec    ebp
  426df7:	ins    BYTE PTR es:[edi],dx
  426df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426df9:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e00:	ja     0x426df1
  426e02:	xor    BYTE PTR [edi-0x11],0x64
  426e06:	mov    ecx,0x5011df58
  426e0b:	sbb    eax,0x86ee6d7c
  426e10:	pop    DWORD PTR [ebx+0x26]
  426e13:	xor    BYTE PTR [edi+0x76],0x80
  426e17:	lock std 
  426e19:	or     DWORD PTR [esi-0x3],eax
  426e1c:	or     al,0xb2
  426e1e:	mov    esi,0x76f0800c
  426e23:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e2a:	push   edi
  426e2c:	xor    BYTE PTR [edi-0x38],0xaa
  426e30:	das    
  426e31:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e38:	enter  0x4d0d,0x4d
  426e3c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e42:	mov    edx,0x77804d4d
  426e47:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e4d:	std    
  426e4e:	or     al,0xb2
  426e50:	mov    esi,0x87f0800c
  426e55:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e5c:	add    eax,ecx
  426e5e:	or     eax,0x30804d4d
  426e63:	push   ebx
  426e64:	jl     0x426eb9
  426e66:	jb     0x426e67
  426e68:	sti    
  426e69:	arpl   bp,di
  426e6b:	or     DWORD PTR [edi+0x56],ecx
  426e6e:	lea    ecx,[ebp-0x37287f73]
  426e74:	jl     0x426eed
  426e76:	scas   eax,DWORD PTR es:[edi]
  426e77:	fst    DWORD PTR [edi-0x21]
  426e7a:	adc    DWORD PTR [esi-0x7a],ebx
  426e7d:	pop    DWORD PTR [ebx+0x26]
  426e80:	push   eax
  426e81:	ja     0x426e7a
  426e83:	push   eax
  426e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e85:	jp     0x426ed7
  426e87:	ja     0x426e0b
  426e89:	xor    BYTE PTR [edi+0x7a],0x80
  426e8d:	lock or BYTE PTR [ecx],0x46
  426e91:	std    
  426e92:	or     al,0xb2
  426e94:	mov    esi,0x7af0800c
  426e99:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ea0:	push   edi
  426ea2:	stos   BYTE PTR es:[edi],al
  426ea3:	dec    ebp
  426ea4:	xlat   BYTE PTR ds:[ebx]
  426ea5:	xor    eax,0x4d29bab2
  426eaa:	loopne 0x426ee2
  426eac:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426eb2:	dec    ebp
  426eb3:	dec    ebp
  426eb4:	xor    BYTE PTR [edi+0x7a],0x80
  426eb8:	lock or BYTE PTR [ecx],0x46
  426ebc:	std    
  426ebd:	or     al,0xb2
  426ebf:	mov    esi,0x7af0800c
  426ec4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ecb:	push   edi
  426ecd:	stos   BYTE PTR es:[edi],al
  426ece:	dec    ebp
  426ecf:	loopne 0x426f07
  426ed1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ed7:	dec    ebp
  426ed8:	loopne 0x426f08
  426eda:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ee0:	dec    ebp
  426ee1:	dec    ebp
  426ee2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ee7:	lea    eax,[eax+0x657f80ef]
  426eed:	in     al,dx
  426eee:	out    dx,eax
  426eef:	push   eax
  426ef0:	lock out dx,eax
  426ef2:	xor    al,0xaf
  426ef5:	xor    BYTE PTR [edi-0x9],0x9
  426ef9:	inc    esi
  426efa:	mov    dl,0xc
  426efc:	mov    dl,0x86
  426efe:	or     al,0x80
  426f00:	ja     0x426eb1
  426f02:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f09:	sub    DWORD PTR [ebx+0x6a],edx
  426f0c:	push   DWORD PTR [edx+0x9eff080]
  426f12:	pop    esp
  426f13:	jg     0x426f2e
  426f15:	dec    edi
  426f16:	std    
  426f17:	aad    0x21
  426f19:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f1e:	lea    edi,[ebp+ecx*4-0xb]
  426f22:	and    al,0x6f
  426f24:	cmp    BYTE PTR [eax+0x77802177],al
  426f2a:	jno    0x426f79
  426f2c:	xlat   BYTE PTR ds:[ebx]
  426f2d:	cmp    eax,0x4dc8d74d
  426f32:	xlat   BYTE PTR ds:[ebx]
  426f33:	sub    eax,0x4d25d74d
  426f38:	xlat   BYTE PTR ds:[ebx]
  426f39:	sbb    eax,0x8615d74d
  426f3e:	cmp    cl,al
  426f40:	dec    ebp
  426f41:	dec    ebp
  426f42:	push   eax
  426f43:	dec    edi
  426f44:	xor    cl,BYTE PTR ds:0x77804d4d
  426f4a:	cmp    eax,0x8d15dded
  426f4f:	aad    0x1b
  426f51:	xor    BYTE PTR [edi+0x3d],0xed
  426f55:	frstor ds:0x80a1d58d
  426f5b:	dec    edi
  426f5c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f62:	cmp    eax,0xc41d9250
  426f67:	dec    DWORD PTR [ebp-0x29]
  426f6a:	cmp    eax,0x86c8d74d
  426f6f:	mov    WORD PTR [edx+0x4d],gs
  426f72:	dec    ebp
  426f73:	stos   DWORD PTR es:[edi],eax
  426f74:	test   eax,0x35fb70a3
  426f79:	lea    edx,[edi-0x78127880]
  426f7f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f85:	and    al,0x6f
  426f87:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f8b:	cmc    
  426f8c:	and    al,0x6f
  426f8e:	cmp    BYTE PTR [eax-0x287f7489],al
  426f94:	mov    esp,edx
  426f96:	or     eax,0x6f242260
  426f9b:	cmp    BYTE PTR [ebx-0x4e],dl
  426f9e:	scas   al,BYTE PTR es:[edi]
  426f9f:	push   ebx
  426fa0:	ret    0x86b2
  426fa3:	or     al,0xb2
  426fa5:	add    ch,BYTE PTR [ecx]
  426fa7:	(bad)  
  426fa8:	cld    
  426fa9:	adc    bh,0xef
  426fac:	arpl   WORD PTR [edx],si
  426fae:	xor    BYTE PTR [edi-0x75],0x9
  426fb2:	sete   BYTE PTR [ebp-0x287f7273]
  426fb9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fbc:	push   ebx
  426fbd:	ret    0x2b2
  426fc0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fc6:	adc    bh,0x21
  426fc9:	arpl   WORD PTR [edx],si
  426fcb:	or     DWORD PTR [edi],ecx
  426fcd:	loopne 0x426f5c
  426fcf:	lea    ecx,[ebp-0x7f8e8880]
  426fd5:	xchg   edi,eax
  426fd6:	and    DWORD PTR [eax+0x539befd7],eax
  426fdc:	dec    ebp
  426fdd:	push   eax
  426fde:	ja     0x426f6b
  426fe0:	dec    edi
  426fe1:	jb     0x426fec
  426fe3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426fea:	out    dx,al
  426feb:	pop    ebx
  426fec:	adc    BYTE PTR [edi+0x9],dh
  426fef:	cld    
  426ff0:	ja     0x42703f
  426ff2:	aad    0xfc
  426ff4:	ja     0x427009
  426ff6:	sbb    esp,edi
  426ff8:	ja     0x426ff9
  426ffa:	ror    BYTE PTR [ecx],1
  426ffc:	loopne 0x427075
  426ffe:	dec    DWORD PTR [ecx]
  427000:	loopne 0x426fa9
  427002:	adc    ecx,edi
  427004:	jp     0x426f93
  427006:	lea    ecx,[ebp-0x1ff68bcd]
  42700c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700d:	dec    ebp
  42700e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427012:	mov    bh,ah
  427014:	ja     0x426fe2
  427016:	or     eax,0xd40d77fc
  42701b:	cld    
  42701c:	ja     0x42706b
  42701e:	jl     0x42701c
  427020:	ja     0x427035
  427022:	sar    esp,cl
  427024:	ja     0x427025
  427026:	push   esp
  427027:	(bad)  
  427028:	ja     0x427029
  42702a:	(bad)  
  42702b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42702c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427032:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427036:	or     eax,0xa78fc40b
  42703b:	int3   
  42703c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427040:	mov    dl,dh
  427042:	sbb    bl,0x35
  427045:	in     eax,dx
  427046:	out    0x8b,eax
  427048:	lea    ecx,[ecx]
  42704a:	loopne 0x4270c3
  42704c:	or     edi,edx
  42704e:	or     DWORD PTR [edi-0x33],edx
  427051:	lea    ecx,[ebp-0x72e1d073]
  427057:	lea    ecx,[ebp-0x3bf688f0]
  42705d:	inc    DWORD PTR [edi+0x8]
  427060:	lea    ecx,[ebp+0x977108d]
  427066:	div    eax
  427068:	or     DWORD PTR [edi-0x11eff689],ecx
  42706e:	pop    ebx
  42706f:	jnp    0x4270d4
  427071:	test   DWORD PTR [ecx],ecx
  427073:	jmp    0x80a3:0x4d4d4d9e
  42707a:	ja     0x427044
  42707c:	push   ebx
  42707d:	mov    dl,0x80
  42707f:	lock enter 0x5ed,0xd
  427084:	stos   DWORD PTR es:[edi],eax
  427085:	les    esp,FWORD PTR [esi+0x538b7780]
  42708b:	mov    dl,0x80
  42708d:	lock mov edx,DWORD PTR [ebx-0x2]
  427091:	mov    dl,0xba
  427093:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427099:	test   eax,0x8d21fb70
  42709e:	xchg   edi,eax
  42709f:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270a6:	mov    dh,dh
  4270a8:	and    al,0x6f
  4270aa:	cmp    cl,dh
  4270ac:	cmc    
  4270ad:	and    al,0x6f
  4270af:	cmp    BYTE PTR [eax-0x69],dl
  4270b2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270b8:	adc    eax,0x80157780
  4270bd:	int    0x2e
  4270bf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270c5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270cc:	lea    eax,[eax+0x657dec30]
  4270d2:	xchg   ebx,eax
  4270d3:	push   eax
  4270d4:	lock stc 
  4270d6:	xor    BYTE PTR [edi-0x76],0x80
  4270da:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270e1:	out    0x2f,al
  4270e3:	push   ebx
  4270e4:	jl     0x427098
  4270e6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270e9:	push   ebx
  4270ea:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270f0:	push   eax
  4270f1:	ja     0x427075
  4270f3:	xor    BYTE PTR [edi-0x76],0x80
  4270f7:	lock mov dl,BYTE PTR [ebx+0x7c]
  4270fb:	mov    dl,0x86
  4270fd:	or     al,0x53
  4270ff:	adc    DWORD PTR [edx-0x4d00d646],esi
  427105:	push   eax
  427106:	ja     0x42708c
  427108:	xor    BYTE PTR [edi-0x7],0x80
  42710c:	ins    DWORD PTR es:[edi],dx
  42710d:	or     ch,ch
  42710f:	xchg   BYTE PTR [ecx],ah
  427111:	push   eax
  427112:	ja     0x42710b
  427114:	xor    BYTE PTR [edi-0x7],0x80
  427118:	ins    DWORD PTR es:[edi],dx
  427119:	pop    ebp
  42711a:	xor    al,0xf9
  42711d:	jge    0x42716e
  42711f:	xchg   edx,eax
  427120:	xchg   ebp,eax
  427121:	xor    BYTE PTR [edi-0x7],0xd5
  427125:	sbb    eax,0x805d6d80
  42712a:	lock stc 
  42712c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427130:	dec    ebx
  427131:	div    DWORD PTR [ebx]
  427133:	std    
  427134:	xor    BYTE PTR [edi-0x7],0x80
  427138:	ins    DWORD PTR es:[edi],dx
  427139:	pop    ebp
  42713a:	in     al,dx
  42713b:	mov    dl,0xc4
  42713d:	in     al,dx
  42713e:	sub    BYTE PTR [ebp-0x6b],0x50
  427142:	ja     0x4270ca
  427144:	xor    BYTE PTR [edi-0x76],0x80
  427148:	lock mov dl,BYTE PTR [ebx+0x7c]
  42714c:	push   ebx
  42714d:	adc    DWORD PTR [edx-0x454df37a],esi
  427153:	sub    edi,edi
  427155:	mov    dl,0x50
  427157:	ja     0x42716e
  427159:	xor    BYTE PTR [edi-0x76],0x80
  42715d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427161:	push   ebx
  427162:	adc    DWORD PTR [edx-0x794dd646],esi
  427168:	or     al,0xff
  42716a:	mov    dl,0x50
  42716c:	ja     0x427183
  42716e:	xor    BYTE PTR [edi-0x76],0x80
  427172:	lock mov dl,BYTE PTR [ebx+0x11]
  427176:	push   ebx
  427177:	jl     0x42712b
  427179:	mov    edx,0xc86b229
  42717e:	push   DWORD PTR [edx+0x5071f080]
  427184:	cmp    dl,BYTE PTR [eax-0x69]
  427187:	adc    eax,0xf415777c
  42718c:	and    al,0x6f
  42718e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427192:	repz and al,0x6f
  427195:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427199:	cli    
  42719a:	and    al,0x6f
  42719c:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271a2:	xor    BYTE PTR [edi-0x76],0x80
  4271a6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271aa:	push   ebx
  4271ab:	adc    DWORD PTR [edx-0x454df37a],esi
  4271b1:	sub    edi,edi
  4271b3:	mov    dl,0x50
  4271b5:	ja     0x42713b
  4271b7:	xor    BYTE PTR [edi-0x7a],0xec
  4271bb:	ja     0x4271de
  4271bd:	push   eax
  4271be:	ja     0x427142
  4271c0:	dec    ebp
  4271c1:	xlat   BYTE PTR ds:[ebx]
  4271c2:	or     BYTE PTR [ebp-0x29],0x21
  4271c6:	xor    al,0xf9
  4271c9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271cf:	ja     0x4271e6
  4271d1:	xor    BYTE PTR [edi+0x15],0x4f
  4271d5:	push   0xffffffd5
  4271d7:	(bad)  
  4271d8:	xor    BYTE PTR [edi-0x7e],0x50
  4271dc:	ja     0x427161
  4271de:	xor    BYTE PTR [edi-0x7d],0x80
  4271e2:	lock and DWORD PTR [ebx-0x4e],eax
  4271e6:	push   eax
  4271e7:	ja     0x42716c
  4271e9:	xor    BYTE PTR [edi+0x15],0x80
  4271ed:	lock adc eax,0xec716d80
  4271f3:	xchg   edx,eax
  4271f4:	and    DWORD PTR [eax-0x29c7c10],eax
  4271fa:	in     al,0x19
  4271fc:	xor    BYTE PTR [edi+0x15],0x80
  427200:	ins    DWORD PTR es:[edi],dx
  427201:	and    DWORD PTR [eax-0x6d13ea10],eax
  427207:	out    dx,eax
  427208:	xor    al,0x83
  42720b:	inc    ebx
  42720c:	mov    dl,0xbe
  42720e:	and    ch,BYTE PTR [edi]
  427210:	lea    ecx,[ebp+0x6f24f6fa]
  427216:	cmp    BYTE PTR [eax-0x29],dl
  427219:	scas   eax,DWORD PTR es:[edi]
  42721a:	jl     0x427293
  42721c:	std    
  42721d:	cmc    
  42721e:	and    al,0x6f
  427220:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427224:	hlt    
  427225:	and    al,0x6f
  427227:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42722b:	repz and al,0x6f
  42722e:	cmp    BYTE PTR [ecx],al
  427230:	ja     0x4271e1
  427232:	push   eax
  427233:	ja     0x4271fd
  427235:	add    DWORD PTR [edi-0x3],esi
  427238:	push   eax
  427239:	ja     0x42726d
  42723b:	add    DWORD PTR [edi+0x76],esi
  42723e:	push   eax
  42723f:	ja     0x427256
  427241:	add    DWORD PTR [edi+0x6a],esi
  427244:	push   eax
  427245:	ja     0x4271ce
  427247:	xor    BYTE PTR [edi-0x76],0x80
  42724b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42724f:	push   ebx
  427250:	adc    DWORD PTR [edx-0x454df37a],esi
  427256:	sub    edi,edi
  427258:	mov    dl,0x50
  42725a:	ja     0x4271df
  42725c:	mov    esi,0x8d8decfe
  427261:	mov    ds:0x6f24f30d,al
  427266:	cmp    BYTE PTR [ecx],cl
  427268:	shld   esp,ebp,0x8d
  42726c:	(bad)  
  42726d:	loop   0x427290
  42726f:	dec    ebp
  427270:	xlat   BYTE PTR ds:[ebx]
  427271:	add    BYTE PTR [ecx],0x77
  427274:	bound  ecx,QWORD PTR [edx]
  427276:	xchg   BYTE PTR [ecx],cl
  427278:	test   al,0x4d
  42727a:	dec    ebp
  42727b:	xor    BYTE PTR [edi-0x75],0x80
  42727f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427283:	push   ebx
  427284:	adc    DWORD PTR [edx-0x794dd646],esi
  42728a:	or     al,0xff
  42728c:	mov    dl,0x50
  42728e:	ja     0x427214
  427290:	push   eax
  427291:	xlat   BYTE PTR ds:[ebx]
  427292:	jp     0x427302
  427294:	out    0x7a,eax
  427296:	xor    BYTE PTR [edi+0x7a],0xb2
  42729a:	xchg   BYTE PTR [ebx+edx*2],cl
  42729d:	(bad)  
  42729e:	mov    dl,0x2
  4272a0:	sub    edi,edi
  4272a2:	xor    dl,BYTE PTR [eax-0x29]
  4272a5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272ac:	push   ebx
  4272ad:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272b3:	mov    dl,0x86
  4272b5:	or     al,0xff
  4272b7:	mov    dl,0x80
  4272b9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272c0:	push   ebx
  4272c1:	xchg   esp,eax
  4272c2:	mov    dl,0xbe
  4272c4:	or     al,0xb2
  4272c6:	clc    
  4272c7:	sub    edi,edi
  4272c9:	(bad)  
  4272ca:	in     al,dx
  4272cb:	mov    dl,0x80
  4272cd:	lock adc DWORD PTR [eax-0x29],0x66
  4272d2:	arpl   bp,di
  4272d4:	xlat   BYTE PTR ds:[ebx]
  4272d5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272db:	mov    edx,DWORD PTR [ebx+0x7c]
  4272de:	push   ebx
  4272df:	adc    DWORD PTR [edx-0x454df37a],esi
  4272e5:	sub    edi,edi
  4272e7:	mov    dl,0xa
  4272e9:	loop   0x42730c
  4272eb:	add    DWORD PTR [edi+0x62],esi
  4272ee:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  4272f4:	xor    BYTE PTR [edi-0x76],0x80
  4272f8:	lock mov dl,BYTE PTR [ebx+0x7c]
  4272fc:	push   ebx
  4272fd:	adc    DWORD PTR [edx-0x794dd646],esi
  427303:	or     al,0xff
  427305:	mov    dl,0x80
  427307:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42730c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427312:	mov    dl,BYTE PTR [ebx+0x7c]
  427315:	push   ebx
  427316:	adc    DWORD PTR [edx-0x454df37a],esi
  42731c:	sub    edi,edi
  42731e:	mov    dl,0xa
  427320:	loop   0x427343
  427322:	add    DWORD PTR [edi+0x62],esi
  427325:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42732b:	xor    BYTE PTR [edi-0x38],0x80
  42732f:	lock enter 0x3080,0x80
  427334:	lea    edx,[ebx+0x11]
  427337:	push   ebx
  427338:	jl     0x4272ec
  42733a:	mov    edx,0xc86b229
  42733f:	push   DWORD PTR [edx+0x622f758f]
  427345:	xor    al,0x8a
  427348:	adc    BYTE PTR [edi+0x532a538a],0x94
  42734f:	mov    dl,0xbe
  427351:	or     al,0xb2
  427353:	clc    
  427354:	sub    DWORD PTR [ecx],ecx
  427356:	loopne 0x4273c2
  427358:	(bad)  
  427359:	(bad)  
  42735a:	arpl   WORD PTR [edx+0xca20f09],si
  427360:	lea    ecx,[ebp-0x7fcd8880]
  427366:	lock xor al,BYTE PTR [eax+0x538d8030]
  42736d:	adc    DWORD PTR [ebx+0x7c],edx
  427370:	mov    dl,0xba
  427372:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427378:	(bad)  
  427379:	jne    0x4273aa
  42737b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427381:	mov    dl,BYTE PTR [ebx+0x2a]
  427384:	push   ebx
  427385:	xchg   esp,eax
  427386:	mov    dl,0xbe
  427388:	or     al,0xb2
  42738a:	clc    
  42738b:	sub    DWORD PTR [ecx],ecx
  42738d:	loopne 0x4273f9
  42738f:	(bad)  
  427390:	(bad)  
  427391:	arpl   WORD PTR [edx+0xcda0f09],si
  427397:	lea    ecx,[ebp-0x7fea8880]
  42739d:	lock adc eax,0x8d803080
  4273a3:	push   ebx
  4273a4:	adc    DWORD PTR [ebx+0x7c],edx
  4273a7:	mov    dl,0xba
  4273a9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273af:	(bad)  
  4273b0:	jne    0x4273e1
  4273b2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273b8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273bb:	push   ebx
  4273bc:	xchg   esp,eax
  4273bd:	mov    dl,0xbe
  4273bf:	or     al,0xb2
  4273c1:	clc    
  4273c2:	sub    DWORD PTR [ecx],ecx
  4273c4:	loopne 0x427430
  4273c6:	(bad)  
  4273c7:	(bad)  
  4273c8:	arpl   WORD PTR [edx+0xc130f09],si
  4273ce:	lea    ecx,[ebp-0x7f788880]
  4273d4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273db:	adc    DWORD PTR [ebx+0x7c],edx
  4273de:	mov    dl,0xba
  4273e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273e6:	(bad)  
  4273e7:	jne    0x427418
  4273e9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ef:	mov    dl,BYTE PTR [ebx+0x2a]
  4273f2:	push   ebx
  4273f3:	xchg   esp,eax
  4273f4:	mov    dl,0xbe
  4273f6:	or     al,0xb2
  4273f8:	clc    
  4273f9:	sub    DWORD PTR [ecx],ecx
  4273fb:	loopne 0x427467
  4273fd:	(bad)  
  4273fe:	(bad)  
  4273ff:	arpl   WORD PTR [edx+0x3a830f09],si
  427405:	lea    ecx,[ebp-0x7fcd8880]
  42740b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427412:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427418:	mov    dl,0x86
  42741a:	or     al,0xff
  42741c:	mov    dl,0x8f
  42741e:	jne    0x42744f
  427420:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427426:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42742d:	mov    dl,0xbe
  42742f:	or     al,0x53
  427431:	xchg   esp,eax
  427432:	mov    dl,0xf8
  427434:	sub    edi,edi
  427436:	dec    BYTE PTR [edi-0x2b9d30cf]
  42743c:	mov    dl,0x80
  42743e:	lock adc eax,0x97803080
  427444:	adc    eax,0x2a539080
  427449:	mov    dl,0xbe
  42744b:	or     al,0x53
  42744d:	xchg   esp,eax
  42744e:	mov    dl,0xf8
  427450:	sub    edi,edi
  427452:	dec    BYTE PTR [edi-0x599d30cf]
  427458:	mov    dl,0x80
  42745a:	lock enter 0x3080,0x80
  42745f:	xchg   edi,eax
  427460:	enter  0x9080,0x53
  427464:	sub    dl,BYTE PTR [ebx-0x6c]
  427467:	mov    dl,0xbe
  427469:	or     al,0xb2
  42746b:	clc    
  42746c:	sub    edi,edi
  42746e:	dec    BYTE PTR [edi-0x29a930cf]
  427474:	std    
  427475:	or     DWORD PTR [edi-0x43],ecx
  427478:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42747e:	xor    al,0x15
  427481:	xor    BYTE PTR [eax],0x80
  427484:	lea    edx,[ebx+0x11]
  427487:	mov    dl,0xba
  427489:	sub    DWORD PTR [ebx+0x7c],edx
  42748c:	mov    dl,0x86
  42748e:	or     al,0xff
  427490:	mov    dl,0x8f
  427492:	jne    0x4274c3
  427494:	bound  eax,QWORD PTR [eax+0x308032f0]
  42749a:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274a1:	mov    dl,0xbe
  4274a3:	or     al,0x53
  4274a5:	xchg   esp,eax
  4274a6:	mov    dl,0xf8
  4274a8:	sub    edi,edi
  4274aa:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274b0:	mov    dl,0x80
  4274b2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274b9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274c0:	push   ebx
  4274c1:	xchg   esp,eax
  4274c2:	mov    dl,0xf8
  4274c4:	sub    edi,edi
  4274c6:	dec    BYTE PTR [edi-0x599d30cf]
  4274cc:	mov    dl,0x80
  4274ce:	lock xor al,BYTE PTR [eax+0x32978030]
  4274d5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274dc:	mov    esi,0x29f8b20c
  4274e1:	(bad)  
  4274e2:	dec    BYTE PTR [edi-0x29a930cf]
  4274e8:	std    
  4274e9:	or     DWORD PTR [edi-0x38],ecx
  4274ec:	lea    ecx,[ebp-0x78887f73]
  4274f2:	xor    al,0x87
  4274f5:	xor    BYTE PTR [eax],0x80
  4274f8:	lea    edx,[ebx+0x11]
  4274fb:	mov    dl,0xba
  4274fd:	sub    DWORD PTR [ebx+0x7c],edx
  427500:	mov    dl,0x86
  427502:	or     al,0xff
  427504:	mov    dl,0x8f
  427506:	jne    0x427537
  427508:	bound  eax,QWORD PTR [eax+0x308015f0]
  42750e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427515:	mov    dl,0xbe
  427517:	or     al,0x53
  427519:	xchg   esp,eax
  42751a:	mov    dl,0xf8
  42751c:	sub    edi,edi
  42751e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427524:	mov    dl,0x80
  427526:	lock enter 0x3080,0x80
  42752b:	xchg   edi,eax
  42752c:	enter  0x9080,0x53
  427530:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427536:	mov    dl,0xf8
  427538:	sub    edi,edi
  42753a:	dec    BYTE PTR [edi-0x599d30cf]
  427540:	mov    dl,0x80
  427542:	lock adc eax,0x97803080
  427548:	adc    eax,0x2a539080
  42754d:	push   ebx
  42754e:	xchg   esp,eax
  42754f:	mov    dl,0xbe
  427551:	or     al,0xb2
  427553:	clc    
  427554:	sub    edi,edi
  427556:	dec    BYTE PTR [edi-0x29a930cf]
  42755c:	std    
  42755d:	or     DWORD PTR [edi-0x33],ecx
  427560:	lea    ecx,[ebp-0x78887f73]
  427566:	xor    al,0x87
  427569:	xor    BYTE PTR [eax],0x80
  42756c:	lea    edx,[ebx+0x11]
  42756f:	mov    dl,0xba
  427571:	sub    DWORD PTR [ebx+0x7c],edx
  427574:	mov    dl,0x86
  427576:	or     al,0xff
  427578:	mov    dl,0x8f
  42757a:	jne    0x4275ab
  42757c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427582:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427589:	mov    dl,0xbe
  42758b:	or     al,0x53
  42758d:	xchg   esp,eax
  42758e:	mov    dl,0xf8
  427590:	sub    edi,edi
  427592:	dec    BYTE PTR [edi-0x2b9d30cf]
  427598:	mov    dl,0x80
  42759a:	lock xor al,BYTE PTR [eax+0x32978030]
  4275a1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275a8:	push   ebx
  4275a9:	xchg   esp,eax
  4275aa:	mov    dl,0xf8
  4275ac:	sub    edi,edi
  4275ae:	dec    BYTE PTR [edi-0x599d30cf]
  4275b4:	mov    dl,0x80
  4275b6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275bd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275c4:	mov    esi,0x29f8b20c
  4275c9:	(bad)  
  4275ca:	dec    BYTE PTR [edi-0x29a930cf]
  4275d0:	std    
  4275d1:	xlat   BYTE PTR ds:[ebx]
  4275d2:	jno    0x4275d5
  4275d4:	ja     0x427638
  4275d6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275dc:	xor    al,0x5e
  4275df:	arpl   WORD PTR [edx+0x778017d5],si
  4275e5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275eb:	push   ebx
  4275ec:	jl     0x4275a0
  4275ee:	mov    edx,0xc86b229
  4275f3:	push   DWORD PTR [edx-0x7f7b88b0]
  4275f9:	ja     0x427586
  4275fb:	adc    bh,0x8b
  4275fe:	xor    BYTE PTR [edi-0x75],0x80
  427602:	lock mov edx,DWORD PTR [ebx+0x4b]
  427606:	push   ebx
  427607:	je     0x4275bb
  427609:	mov    BYTE PTR [edx+esi*4],cl
  42760c:	test   BYTE PTR [ecx],ch
  42760e:	push   DWORD PTR [edx]
  427610:	in     al,dx
  427611:	xlat   BYTE PTR ds:[ebx]
  427612:	data16 xor BYTE PTR [edi+0x7a],0x53
  427617:	sub    ch,ch
  427619:	mov    edx,0x8a84ed8a
  42761e:	mov    dl,0x88
  427620:	sub    esp,ebp
  427622:	std    
  427623:	inc    DWORD PTR ds:0x24f60ba2
  427629:	outs   dx,DWORD PTR ds:[esi]
  42762a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427630:	mov    dl,BYTE PTR [ebx+0x11]
  427633:	push   ebx
  427634:	jl     0x4275e8
  427636:	mov    edx,0xc86b229
  42763b:	push   DWORD PTR [edx+0x6384f080]
  427641:	std    
  427642:	or     DWORD PTR [edi],ecx
  427644:	pop    ds
  427645:	mov    cl,BYTE PTR [ebp+0x4d]
  427648:	xor    BYTE PTR [edi-0x76],0x80
  42764c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427650:	push   ebx
  427651:	adc    DWORD PTR [edx-0x794dd646],esi
  427657:	or     al,0xff
  427659:	mov    dl,0x80
  42765b:	lock test BYTE PTR [ebx-0x3],ah
  42765f:	xlat   BYTE PTR ds:[ebx]
  427660:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427666:	mov    edx,DWORD PTR [ebx+0x7c]
  427669:	push   ebx
  42766a:	adc    DWORD PTR [edx-0x454df37a],esi
  427670:	sub    edi,edi
  427672:	mov    dl,0xbe
  427674:	jg     0x4276b0
  427676:	lea    ecx,[ebp-0x6656da1e]
  42767c:	dec    ebp
  42767d:	xlat   BYTE PTR ds:[ebx]
  42767e:	add    BYTE PTR [ecx],0x77
  427681:	push   ss
  427682:	or     al,BYTE PTR [esi+0x4d4da00c]
  427688:	xor    BYTE PTR [edi-0x76],0x80
  42768c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427690:	push   ebx
  427691:	adc    DWORD PTR [edx-0x794dd646],esi
  427697:	or     al,0xff
  427699:	mov    dl,0x80
  42769b:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276a0:	xchg   ebx,eax
  4276a1:	xor    BYTE PTR [edi-0x75],0x80
  4276a5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276a9:	push   ebx
  4276aa:	adc    DWORD PTR [edx-0x794dd646],esi
  4276b0:	or     al,0xff
  4276b2:	mov    dl,0x80
  4276b4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b9:	daa    
  4276ba:	xor    BYTE PTR [edi-0x75],0x80
  4276be:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276c2:	push   ebx
  4276c3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276c9:	sub    edi,edi
  4276cb:	mov    dl,0xa
  4276cd:	cdq    
  4276ce:	add    DWORD PTR [edi+0x16],esi
  4276d1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276d7:	xor    BYTE PTR [edi-0x76],0x80
  4276db:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276df:	push   ebx
  4276e0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276e6:	sub    edi,edi
  4276e8:	mov    dl,0xa
  4276ea:	cdq    
  4276eb:	add    DWORD PTR [edi+0x16],esi
  4276ee:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  4276f4:	xor    BYTE PTR [edi-0x7e],0xec
  4276f8:	cld    
  4276f9:	push   eax
  4276fa:	ja     0x427711
  4276fc:	dec    ebp
  4276fd:	xlat   BYTE PTR ds:[ebx]
  4276fe:	ds dec ebp
  427700:	xlat   BYTE PTR ds:[ebx]
  427701:	adc    eax,0xec367780
  427706:	ja     0x4276f7
  427708:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42770e:	xor    BYTE PTR [edi-0x76],0x80
  427712:	lock mov dl,BYTE PTR [ebx+0x7c]
  427716:	push   ebx
  427717:	adc    DWORD PTR [edx-0x794dd646],esi
  42771d:	or     al,0xff
  42771f:	mov    dl,0x80
  427721:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427727:	xor    BYTE PTR [edi-0x75],0x80
  42772b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42772f:	push   ebx
  427730:	adc    DWORD PTR [edx-0x794dd646],esi
  427736:	or     al,0xff
  427738:	mov    dl,0x80
  42773a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42773f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427746:	push   ebx
  427747:	jl     0x4276fb
  427749:	xchg   BYTE PTR [ebx+edx*2],cl
  42774c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427752:	or     cl,BYTE PTR [ebp-0x29]
  427755:	xor    BYTE PTR ds:[edi+0x36],0xec
  42775a:	ja     0x42774b
  42775c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427762:	xor    BYTE PTR [edi-0x76],0x80
  427766:	lock mov dl,BYTE PTR [ebx+0x7c]
  42776a:	mov    dl,0x86
  42776c:	or     al,0x53
  42776e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427774:	or     cl,BYTE PTR [ebp-0x29]
  427777:	xor    BYTE PTR ds:[edi+0x36],0xec
  42777c:	ja     0x42776d
  42777e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427784:	xor    al,0x46
  427787:	xor    BYTE PTR [edi+0x46],0x53
  42778b:	je     0x4277e0
  42778d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  427793:	sub    edi,edi
  427795:	mov    dl,0x80
  427797:	lock cs push ebx
  42779a:	mov    dl,0x40
  42779c:	lea    edi,[edx]
  42779e:	lea    ecx,[ebp-0x72c8ea2b]
  4277a4:	int    0x8d
  4277a6:	lea    ecx,[edx]
  4277a8:	dec    ebp
  4277a9:	xlat   BYTE PTR ds:[ebx]
  4277aa:	ds adc bh,0x36
  4277ae:	in     al,dx
  4277af:	xlat   BYTE PTR ds:[ebx]
  4277b0:	out    dx,eax
  4277b1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277b7:	ja     0x42782a
  4277b9:	xor    al,0x3e
  4277bc:	cmp    ch,bh
  4277be:	xor    BYTE PTR [edi+0x3e],0xec
  4277c2:	ja     0x42774a
  4277c4:	push   eax
  4277c5:	ja     0x42774d
  4277c7:	xor    BYTE PTR [edi-0x75],0x80
  4277cb:	lock mov edx,DWORD PTR [ebx+0x11]
  4277cf:	mov    dl,0xba
  4277d1:	sub    DWORD PTR [ebx+0x7c],edx
  4277d4:	mov    dl,0x86
  4277d6:	or     al,0xff
  4277d8:	mov    dl,0x80
  4277da:	lock xchg BYTE PTR [ecx],cl
  4277dd:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277e3:	xchg   edi,eax
  4277e4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277e7:	push   ebx
  4277e8:	xchg   esp,eax
  4277e9:	mov    dl,0xbe
  4277eb:	or     al,0xb2
  4277ed:	clc    
  4277ee:	sub    edi,edi
  4277f0:	(bad)  
  4277f1:	in     al,dx
  4277f2:	lock mul DWORD PTR [ebx-0x4e]
  4277f6:	or     edx,ebp
  4277f8:	hlt    
  4277f9:	retf   
  4277fa:	dec    ebp
  4277fb:	dec    ebp
  4277fc:	xor    BYTE PTR [edi-0x11],0xab
  427800:	test   eax,0x71fb70a3
  427805:	lea    edx,[edi-0x78127880]
  42780b:	adc    eax,0x539b9993
  427810:	push   0xffffff80
  427812:	ja     0x427849
  427814:	or     ch,0x2e
  427817:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42781d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427824:	out    dx,eax
  427825:	and    BYTE PTR [edi-0x7588afdf],0x60
  42782c:	fistp  DWORD PTR [eax-0x21]
  42782f:	adc    DWORD PTR [ebx-0x4a],edx
  427832:	pop    esi
  427833:	xchg   BYTE PTR [edi+0x32532643],cl
  427839:	or     DWORD PTR [esi-0x3e],eax
  42783c:	or     al,0xb2
  42783e:	mov    esp,0x8d4ba229
  427843:	lea    ecx,[ebp+0xc88b2cd]
  427849:	push   ebx
  42784a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42784b:	dec    DWORD PTR [ebx-0x80]
  42784e:	out    0x1d,eax
  427850:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427857:	(bad)  
  427858:	xlat   BYTE PTR ds:[ebx]
  427859:	or     DWORD PTR [edx-0x54881f31],esp
  42785f:	push   esi
  427860:	sar    ebx,cl
  427862:	adc    al,0x62
  427864:	mov    esi,0x8d8d3a9c
  427869:	adc    BYTE PTR [edi+0x15d78071],0x80
  427870:	xchg   edi,eax
  427871:	out    dx,eax
  427872:	adc    bh,0x21
  427875:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42787c:	out    0xef,eax
  42787e:	and    BYTE PTR [edi+0x53325321],0xb6
  427885:	or     DWORD PTR [esi-0x3e],eax
  427888:	or     al,0xb2
  42788a:	mov    esp,0x8d4ba229
  42788f:	lea    ecx,[ebp-0x5bac33]
  427895:	xchg   esp,eax
  427896:	mov    dl,0x88
  427898:	or     al,0xff
  42789a:	dec    ebx
  42789b:	and    bh,0x71
  42789e:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278a5:	jno    0x4278fa
  4278a7:	retf   
  4278a8:	xor    al,0x15
  4278ab:	or     DWORD PTR [esi-0x54],eax
  4278ae:	or     al,0xb2
  4278b0:	test   BYTE PTR [ecx],ch
  4278b2:	push   ebx
  4278b3:	jo     0x4278b4
  4278b5:	retf   
  4278b6:	push   edi
  4278b7:	lea    ecx,[ebp-0x3b4d3273]
  4278bd:	or     al,0xff
  4278bf:	add    BYTE PTR [eax-0x63131089],0x13
  4278c6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278cd:	out    0x71,eax
  4278cf:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278d6:	mov    esp,0x29beb28a
  4278db:	push   ebx
  4278dc:	jb     0x427935
  4278de:	aad    0x58
  4278e0:	fist   WORD PTR [ecx]
  4278e2:	mov    ds:0x438f860b,al
  4278e7:	mov    es:0xdf58d54b,al
  4278ed:	adc    DWORD PTR [edx+0x438f86c6],esp
  4278f3:	es in  al,dx
  4278f5:	jl     0x42790a
  4278f7:	(bad)  
  4278f8:	(bad)  
  4278f9:	std    
  4278fa:	(bad)  
  4278fb:	jle    0x42795b
  4278fd:	xchg   BYTE PTR [edi+0x5a22643],cl
  427903:	fstp   DWORD PTR [eax-0x21]
  427906:	adc    DWORD PTR [ebx-0x9],edx
  427909:	mov    ds:0xdf58e8cb,al
  42790e:	adc    edi,edx
  427910:	adc    esp,DWORD PTR [ebx-0x9]
  427913:	xlat   BYTE PTR ds:[ebx]
  427914:	or     DWORD PTR [edx+0x3ca10d57],esp
  42791a:	(bad)  
  42791c:	loope  0x427932
  42791e:	enter  0x25be,0x3a
  427922:	lea    ecx,[ebp-0x7f106880]
  427928:	xlat   BYTE PTR ds:[ebx]
  427929:	and    DWORD PTR [eax-0x187f1059],eax
  42792f:	and    DWORD PTR [ebx+0x32],edx
  427932:	pusha  
  427933:	fistp  DWORD PTR [eax-0x21]
  427936:	adc    DWORD PTR [ebx-0x4a],edx
  427939:	or     DWORD PTR [esi-0x3e],eax
  42793c:	or     al,0xb2
  42793e:	mov    BYTE PTR [ebx+edx*2],cl
  427941:	dec    ebp
  427942:	mov    dl,0xb4
  427944:	sub    DWORD PTR [eax-0x29],edx
  427947:	enter  0x9cff,0x80
  42794b:	out    0xc8,eax
  42794d:	cli    
  42794e:	lea    ecx,[ebp+0x453cd8d]
  427954:	inc    DWORD PTR [esi]
  427956:	and    BYTE PTR [edi+0x50238025],0xa7
  42795d:	xor    ah,BYTE PTR [ebx+0x3]
  427960:	xlat   BYTE PTR ds:[ebx]
  427961:	outs   dx,DWORD PTR ds:[esi]
  427962:	push   ebx
  427963:	jb     0x4279c8
  427965:	pushf  
  427966:	aad    0xb0
  427968:	dec    ebp
  427969:	xlat   BYTE PTR ds:[ebx]
  42796a:	xor    eax,0x4d25d780
  42796f:	xlat   BYTE PTR ds:[ebx]
  427970:	sub    eax,0x4d8ad74d
  427975:	pop    ecx
  427976:	xchg   BYTE PTR [ebx],dh
  427978:	dec    ebx
  427979:	dec    ebp
  42797a:	dec    ebp
  42797b:	push   eax
  42797c:	outs   dx,DWORD PTR ds:[esi]
  42797d:	mov    esi,0x8d8d8dfa
  427982:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427989:	mov    edx,DWORD PTR [ebx-0x4a]
  42798c:	or     DWORD PTR [esi-0x7b],eax
  42798f:	or     al,0xb2
  427991:	popa   
  427992:	or     al,0x50
  427994:	out    0xc8,eax
  427996:	and    bh,0xef
  427999:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279a0:	or     eax,0x53c8d780
  4279a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279a6:	dec    DWORD PTR [ebx-0x80]
  4279a9:	out    0x71,eax
  4279ab:	push   ebx
  4279ac:	retf   
  4279ad:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279b4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279b9:	adc    BYTE PTR [ecx],0x80
  4279bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279bd:	adc    eax,0xcfd4609
  4279c2:	mov    dl,0xbc
  4279c4:	sub    DWORD PTR [ebx-0x5c],edx
  4279c7:	mov    dl,0xbe
  4279c9:	or     al,0xa2
  4279cb:	dec    ebx
  4279cc:	lea    ecx,[ebp+0x74ffcd8d]
  4279d2:	jmp    FWORD PTR [edx]
  4279d4:	arpl   di,si
  4279d6:	xlat   BYTE PTR ds:[ebx]
  4279d7:	sbb    DWORD PTR [ebx+0x5],esp
  4279da:	xlat   BYTE PTR ds:[ebx]
  4279db:	nop
  4279dc:	dec    edx
  4279dd:	push   ebx
  4279de:	test   DWORD PTR [esi],ebx
  4279e0:	jne    0x4279a1
  4279e2:	push   0xffffffc8
  4279e4:	outs   dx,DWORD PTR ds:[esi]
  4279e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279e6:	jbe    0x427a1c
  4279e8:	push   ebx
  4279e9:	test   DWORD PTR [esi],ebx
  4279eb:	jne    0x4279b1
  4279ed:	stos   BYTE PTR es:[edi],al
  4279ee:	xor    BYTE PTR [edi-0x11],0x80
  4279f2:	lock and DWORD PTR [eax-0x287f1069],eax
  4279f9:	and    DWORD PTR [edx+0x438f8605],esp
  4279ff:	es push edi
  427a01:	fistp  DWORD PTR [eax-0x21]
  427a04:	adc    DWORD PTR [ecx],ecx
  427a06:	inc    esi
  427a07:	std    
  427a08:	or     al,0x80
  427a0a:	ret    0x4d53
  427a0d:	push   ebx
  427a0e:	jb     0x4279c2
  427a10:	add    ch,BYTE PTR [ecx]
  427a12:	push   ebx
  427a13:	test   DWORD PTR [edx+0xba20cbe],esi
  427a19:	lea    ecx,[ebp+0x7cffcd8d]
  427a1f:	call   DWORD PTR [ecx+0x5f]
  427a22:	ja     0x4279ae
  427a24:	xlat   BYTE PTR ds:[ebx]
  427a25:	out    dx,al
  427a26:	arpl   WORD PTR [esi+0x47a221d5],si
  427a2c:	fisubr WORD PTR [eax+0x2d]
  427a2f:	mov    ds:0xe3bb390a,al
  427a34:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a3a:	adc    edx,ebp
  427a3c:	pop    esp
  427a3d:	js     0x427a63
  427a3f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a45:	sub    eax,0x8780978d
  427a4a:	in     eax,dx
  427a4b:	xchg   DWORD PTR [ecx],esp
  427a4d:	xor    BYTE PTR [edi-0x11],0x80
  427a51:	lock and DWORD PTR [ecx],ecx
  427a54:	inc    esi
  427a55:	std    
  427a56:	or     al,0xb2
  427a58:	mov    esi,0xeff0800c
  427a5d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a64:	xor    al,0x1d
  427a67:	cli    
  427a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a69:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a70:	(bad)  
  427a71:	sti    
  427a72:	push   eax
  427a73:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a79:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a80:	ja     0x427aa7
  427a82:	or     ch,0x36
  427a85:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a8b:	xchg   edx,eax
  427a8c:	gs xor al,0x25
  427a90:	adc    BYTE PTR [eax+0x32],0x3a
  427a94:	lea    ecx,[ebp-0x1dea8080]
  427a9a:	out    dx,al
  427a9b:	mov    ebp,0x8d8d818d
  427aa0:	dec    ebp
  427aa1:	push   edx
  427aa2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427aa8:	xor    BYTE PTR [edi-0x11],0x80
  427aac:	lock and DWORD PTR [ecx],ecx
  427aaf:	inc    esi
  427ab0:	std    
  427ab1:	or     al,0xb2
  427ab3:	mov    esi,0xeff0800c
  427ab8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427abf:	cld    
  427ac0:	push   ebx
  427ac1:	jb     0x427ac2
  427ac3:	sti    
  427ac4:	push   eax
  427ac5:	ja     0x427a51
  427ac7:	add    DWORD PTR [edi-0x76],esi
  427aca:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ad0:	mov    edx,0x15d74d29
  427ad5:	dec    ebp
  427ad6:	xlat   BYTE PTR ds:[ebx]
  427ad7:	jno    0x427b26
  427ad9:	xlat   BYTE PTR ds:[ebx]
  427ada:	and    DWORD PTR [ebp-0x29],ecx
  427add:	out    dx,eax
  427ade:	xchg   BYTE PTR [ebx],dh
  427ae0:	int3   
  427ae1:	dec    ebp
  427ae2:	dec    ebp
  427ae3:	xor    BYTE PTR [edi-0x11],0x80
  427ae7:	lock and DWORD PTR [ecx],ecx
  427aea:	inc    esi
  427aeb:	std    
  427aec:	or     al,0xb2
  427aee:	mov    esi,0xeff0800c
  427af3:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427afa:	mov    dl,0xba
  427afc:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b02:	std    
  427b03:	aad    0x37
  427b05:	xor    BYTE PTR [edi+0x71],0x80
  427b09:	lock adc eax,0xcfd4609
  427b0f:	mov    dl,0xbe
  427b11:	or     al,0x80
  427b13:	lock jno 0x427a96
  427b16:	xchg   edi,eax
  427b17:	adc    eax,0x7253fc53
  427b1c:	mov    dl,0xba
  427b1e:	sub    DWORD PTR [eax-0x400e210],eax
  427b24:	or     DWORD PTR [edx],esp
  427b26:	ja     0x427ab2
  427b28:	push   eax
  427b29:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b2f:	xchg   edi,eax
  427b30:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b37:	push   0xffffff80
  427b39:	xlat   BYTE PTR ds:[ebx]
  427b3a:	cmp    eax,0x80459780
  427b3f:	out    0x25,eax
  427b41:	pop    esi
  427b42:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b48:	pop    eax
  427b49:	fist   WORD PTR [ecx]
  427b4b:	arpl   di,si
  427b4d:	or     esi,ecx
  427b4f:	dec    esp
  427b50:	lea    ecx,[ebp-0x3960fe73]
  427b56:	in     al,0xee
  427b58:	arpl   si,ax
  427b5a:	(bad)  
  427b5c:	arpl   si,ax
  427b5e:	xlat   BYTE PTR ds:[ebx]
  427b5f:	out    dx,eax
  427b60:	arpl   di,si
  427b62:	or     DWORD PTR [edi],ecx
  427b64:	pop    ss
  427b65:	or     al,0x8d
  427b67:	lea    esp,[edx-0x20a755f3]
  427b6d:	adc    edi,edx
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	das    
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a766f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	dec    ebx
  427b85:	lea    ecx,[ebp-0x56f25d73]
  427b8b:	pop    eax
  427b8c:	fist   WORD PTR [ecx]
  427b8e:	xlat   BYTE PTR ds:[ebx]
  427b8f:	out    dx,al
  427b90:	arpl   di,si
  427b92:	aad    0x3f
  427b94:	mov    ds:0xdf58d00d,al
  427b99:	adc    edi,edx
  427b9b:	out    dx,eax
  427b9c:	arpl   di,si
  427b9e:	or     DWORD PTR [edi],ecx
  427ba0:	mov    al,ds:0xa28d8d3a
  427ba5:	or     eax,0x11df58b9
  427baa:	or     DWORD PTR [edi-0x24],ecx
  427bad:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bb3:	(bad)  
  427bb5:	lea    ecx,[ebp+0x3aa2be8d]
  427bbb:	lea    ecx,[ebp+0x4d1dd74d]
  427bc1:	xlat   BYTE PTR ds:[ebx]
  427bc2:	sub    eax,0x4d15d74d
  427bc7:	xlat   BYTE PTR ds:[ebx]
  427bc8:	jno    0x427c17
  427bca:	xlat   BYTE PTR ds:[ebx]
  427bcb:	and    DWORD PTR [ebp-0x29],ecx
  427bce:	out    dx,eax
  427bcf:	xchg   bl,dl
  427bd1:	or     eax,0xb7be4d4d
  427bd6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bdc:	pop    eax
  427bdd:	fist   WORD PTR [ecx]
  427bdf:	xlat   BYTE PTR ds:[ebx]
  427be0:	out    dx,eax
  427be1:	arpl   di,si
  427be3:	or     DWORD PTR [edi],ecx
  427be5:	loope  0x427b74
  427be7:	lea    ecx,[ebp+0x58e40da2]
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	mov    cl,0x3a
  427bf7:	lea    ecx,[ebp+0x58d90da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,al
  427c01:	arpl   di,si
  427c03:	aad    0x1d
  427c05:	mov    ds:0xdf58e60d,al
  427c0a:	adc    edi,edx
  427c0c:	out    dx,eax
  427c0d:	arpl   di,si
  427c0f:	or     DWORD PTR [edi],ecx
  427c11:	aam    0x3a
  427c13:	lea    ecx,[ebp+0x58e80da2]
  427c19:	fist   WORD PTR [ecx]
  427c1b:	les    eax,FWORD PTR [ecx]
  427c1d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c24:	out    0xef,eax
  427c26:	and    BYTE PTR [edi+0x53325321],0xb6
  427c2d:	or     DWORD PTR [esi-0x3e],eax
  427c30:	or     al,0xb2
  427c32:	mov    esp,0x8d4ba229
  427c37:	lea    ecx,[ebp+0xc88b2cd]
  427c3d:	push   ebx
  427c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c3f:	dec    DWORD PTR [ebx-0x80]
  427c42:	out    0xef,eax
  427c44:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c4b:	adc    eax,esi
  427c4d:	push   eax
  427c4e:	xchg   edi,eax
  427c4f:	out    dx,eax
  427c50:	push   eax
  427c51:	xlat   BYTE PTR ds:[ebx]
  427c52:	and    DWORD PTR [eax-0x287f1069],eax
  427c58:	and    DWORD PTR [eax-0x587f1019],eax
  427c5e:	and    DWORD PTR [ebx+0x32],edx
  427c61:	push   ebx
  427c62:	mov    dh,0x9
  427c64:	inc    esi
  427c65:	ret    0xb20c
  427c68:	mov    esp,0xb2a45329
  427c6d:	mov    BYTE PTR [edx+eiz*4],cl
  427c70:	dec    ebx
  427c71:	lea    ecx,[ebp-0x6b003273]
  427c77:	dec    DWORD PTR [ebx+0x3f]
  427c7a:	xchg   edi,eax
  427c7b:	jno    0x427c9c
  427c7d:	xlat   BYTE PTR ds:[ebx]
  427c7e:	adc    eax,0x803d9780
  427c83:	xlat   BYTE PTR ds:[ebx]
  427c84:	inc    ebp
  427c85:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c8c:	xchg   edi,eax
  427c8d:	jno    0x427c0f
  427c8f:	xlat   BYTE PTR ds:[ebx]
  427c90:	adc    eax,0x8071e780
  427c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c96:	adc    eax,0xb6533253
  427c9b:	or     DWORD PTR [esi-0x3e],eax
  427c9e:	or     al,0xb2
  427ca0:	mov    esp,0xa2a45329
  427ca5:	dec    ebx
  427ca6:	lea    ecx,[ebp-0x774d3273]
  427cac:	or     al,0xff
  427cae:	dec    ebx
  427caf:	and    bh,0x3d
  427cb2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cb9:	push   ebx
  427cba:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cc1:	or     DWORD PTR [esi-0x54],eax
  427cc4:	or     al,0x53
  427cc6:	jo     0x427c7a
  427cc8:	test   BYTE PTR [ecx],ch
  427cca:	push   edi
  427ccb:	lea    ecx,[ebp-0x34003273]
  427cd1:	xor    al,0x71
  427cd4:	mov    dl,0xc4
  427cd6:	or     al,0xff
  427cd8:	sub    ah,0x9c
  427cdb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427ce2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427ce8:	mov    ds:0xdf58d505,al
  427ced:	adc    DWORD PTR [edx+0x438f86c2],esp
  427cf3:	es and bh,0x3d
  427cf7:	and    BYTE PTR [edi-0x754312bb],0xa2
  427cfe:	dec    ebx
  427cff:	aad    0x58
  427d01:	fist   WORD PTR [ecx]
  427d03:	mov    ds:0x438f86c6,al
  427d08:	es in  al,dx
  427d0a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d10:	(bad)  
  427d11:	sti    
  427d12:	push   edi
  427d13:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d19:	add    eax,0x58d90ba2
  427d1e:	fist   WORD PTR [ecx]
  427d20:	cdq    
  427d21:	dec    ebp
  427d22:	xlat   BYTE PTR ds:[ebx]
  427d23:	xor    eax,0x9b2dd74d
  427d28:	dec    ebp
  427d29:	xlat   BYTE PTR ds:[ebx]
  427d2a:	sbb    eax,0x4d15d74d
  427d2f:	xlat   BYTE PTR ds:[ebx]
  427d30:	jno    0x427d7f
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	and    DWORD PTR [ebp-0x29],ecx
  427d36:	out    dx,eax
  427d37:	xchg   dh,al
  427d39:	int3   
  427d3a:	dec    ebp
  427d3b:	dec    ebp
  427d3c:	push   eax
  427d3d:	mov    WORD PTR [eax-0x5c565474],es
  427d43:	jo     0x427d40
  427d45:	cmp    eax,0xef97808d
  427d4a:	adc    bh,0x21
  427d4d:	and    bh,0xef
  427d50:	and    BYTE PTR [edi+0x53b65321],0x32
  427d57:	or     DWORD PTR [esi-0x3e],eax
  427d5a:	or     al,0xb2
  427d5c:	mov    esp,0x8d4ba229
  427d61:	lea    ecx,[ebp+0xc88b2cd]
  427d67:	push   ebx
  427d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d69:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d70:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d77:	push   eax
  427d78:	xchg   edi,eax
  427d79:	jno    0x427dcb
  427d7b:	xlat   BYTE PTR ds:[ebx]
  427d7c:	adc    eax,0x803d9780
  427d81:	xlat   BYTE PTR ds:[ebx]
  427d82:	inc    ebp
  427d83:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d8a:	xchg   edi,eax
  427d8b:	out    dx,eax
  427d8c:	adc    bh,0x21
  427d8f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427d96:	out    0xef,eax
  427d98:	and    BYTE PTR [edi+0x53b65321],0x32
  427d9f:	or     DWORD PTR [esi-0x3e],eax
  427da2:	or     al,0xb2
  427da4:	mov    esp,0x8d4ba229
  427da9:	lea    ecx,[ebp-0x5bac33]
  427daf:	xchg   esp,eax
  427db0:	mov    dl,0x88
  427db2:	or     al,0xff
  427db4:	dec    ebx
  427db5:	and    bh,0x71
  427db8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dbf:	xor    BYTE PTR [edi+0x71],0x80
  427dc3:	lock adc eax,0xcac4609
  427dc9:	push   ebx
  427dca:	jo     0x427dcb
  427dcc:	retf   
  427dcd:	mov    dl,0x84
  427dcf:	sub    DWORD PTR [edi-0x73],edx
  427dd2:	lea    ecx,[ebp+0xcc4b2cd]
  427dd8:	inc    DWORD PTR [edx-0x7fc28880]
  427dde:	lock inc ebp
  427de0:	in     al,dx
  427de1:	pushf  
  427de2:	and    bh,0x3d
  427de5:	adc    eax,esi
  427de7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dee:	inc    ebx
  427def:	es push edi
  427df1:	fistp  DWORD PTR [eax-0x21]
  427df4:	adc    DWORD PTR [ecx],ecx
  427df6:	inc    esi
  427df7:	std    
  427df8:	or     al,0xb2
  427dfa:	mov    esp,0xcbeb229
  427dff:	push   ebx
  427e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e01:	mov    ds:0x8d8d8d4b,al
  427e06:	int    0xff
  427e08:	sub    bh,bh
  427e0a:	je     0x427df8
  427e0c:	not    DWORD PTR [ebx]
  427e0e:	add    eax,0x80eff080
  427e13:	xchg   edi,eax
  427e14:	and    DWORD PTR [eax-0x587f8e19],eax
  427e1a:	adc    eax,0xed8abaed
  427e1f:	mov    esp,0xd505a28a
  427e24:	pop    eax
  427e25:	fist   WORD PTR [ecx]
  427e27:	mov    ds:0xdf58d54b,al
  427e2c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e32:	mov    ds:0x438f86c2,al
  427e37:	mov    es:0x438f86c6,al
  427e3d:	es in  al,dx
  427e3f:	sub    dl,BYTE PTR [ebx]
  427e41:	xchg   esp,eax
  427e42:	mov    esi,0x4d4d0d48
  427e47:	xchg   edi,eax
  427e48:	add    BYTE PTR [edi-0x66e27813],0x60
  427e4f:	fstp   DWORD PTR [eax-0x21]
  427e52:	adc    DWORD PTR [eax-0x10],edx
  427e55:	xor    bl,BYTE PTR [esi-0x7a]
  427e58:	pop    DWORD PTR [ebx+0x26]
  427e5b:	push   eax
  427e5c:	ja     0x427e26
  427e5e:	jl     0x427ed7
  427e60:	xchg   ah,ah
  427e62:	pop    eax
  427e63:	fist   WORD PTR [ecx]
  427e65:	push   eax
  427e66:	ja     0x427def
  427e68:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e6f:	or     DWORD PTR [esi-0x3e],eax
  427e72:	or     al,0xb2
  427e74:	mov    BYTE PTR [eax+eax*4],cl
  427e77:	xlat   BYTE PTR ds:[ebx]
  427e78:	xor    al,BYTE PTR [eax-0x5df53719]
  427e7e:	ret    0xc7a7
  427e81:	add    al,0xd4
  427e83:	push   ebx
  427e84:	dec    ebp
  427e85:	xchg   esi,eax
  427e86:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e8d:	and    DWORD PTR [eax-0x69],edx
  427e90:	and    DWORD PTR [ebp-0x29],ecx
  427e93:	and    DWORD PTR [ecx],eax
  427e95:	ja     0x427e21
  427e97:	dec    ebp
  427e98:	xlat   BYTE PTR ds:[ebx]
  427e99:	out    dx,eax
  427e9a:	mov    dl,0x2
  427e9c:	sub    DWORD PTR [edx],ecx
  427e9e:	dec    ebp
  427e9f:	xlat   BYTE PTR ds:[ebx]
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	xchg   DWORD PTR [ebp-0x29],ecx
  427ea6:	xchg   BYTE PTR [ebp-0x29],cl
  427ea9:	enter  0xd74d,0x32
  427ead:	xchg   bh,ah
  427eaf:	mov    cl,BYTE PTR [ebp+0x4d]
  427eb2:	stos   DWORD PTR es:[edi],eax
  427eb3:	push   eax
  427eb4:	ja     0x427e40
  427eb6:	xor    BYTE PTR [edi-0x76],0xa9
  427eba:	jo     0x427eb7
  427ebc:	out    dx,eax
  427ebd:	lea    edx,[edi-0x6127880]
  427ec3:	mov    ebp,ebp
  427ec5:	xchg   DWORD PTR [ebp-0x67],eax
  427ec8:	jl     0x427f3f
  427eca:	xor    eax,0x8d8d8d35
  427ecf:	lea    edi,[ebp+esi*2+0x35]
  427ed3:	inc    ebp
  427ed4:	lea    ecx,[ebp+0x75018d8d]
  427eda:	xor    eax,0xd74d0a71
  427edf:	xor    eax,0x4d2dd74d
  427ee4:	xlat   BYTE PTR ds:[ebx]
  427ee5:	and    eax,0x4d1dd74d
  427eea:	xlat   BYTE PTR ds:[ebx]
  427eeb:	adc    eax,0x4d71d74d
  427ef0:	xlat   BYTE PTR ds:[ebx]
  427ef1:	and    DWORD PTR [ebp-0x29],ecx
  427ef4:	out    dx,eax
  427ef5:	xchg   cl,bl
  427ef7:	mov    eax,0x77804d4d
  427efc:	out    dx,eax
  427efd:	push   eax
  427efe:	jne    0x427f35
  427f00:	out    dx,al
  427f01:	xor    BYTE PTR [ebp+0x35],0x35
  427f05:	dec    edi
  427f06:	push   0x9
  427f08:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f0f:	xor    eax,0x96a4f45
  427f14:	(bad)  
  427f16:	lea    ecx,[ebp+0x35d54d8d]
  427f1c:	and    eax,0x2535d54d
  427f21:	dec    ebp
  427f22:	aad    0x35
  427f24:	and    eax,0x81357580
  427f29:	dec    ebp
  427f2a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f34:	jne    0x427f6b
  427f36:	out    dx,al
  427f37:	add    DWORD PTR [edi-0x12],esi
  427f3a:	push   eax
  427f3b:	jne    0x427f72
  427f3d:	out    dx,eax
  427f3e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f42:	in     al,dx
  427f43:	jne    0x427f7a
  427f45:	out    dx,al
  427f46:	push   eax
  427f47:	jne    0x427f7e
  427f49:	out    dx,al
  427f4a:	xor    BYTE PTR [ebp+0x35],0xee
  427f4e:	xor    BYTE PTR [ebp+0x35],0xee
  427f52:	xor    BYTE PTR [ecx],0x35
  427f55:	out    dx,al
  427f56:	adc    BYTE PTR [eax+0x26],0x3a
  427f5a:	lea    ecx,[ebp-0x2a7ff180]
  427f60:	xor    eax,0x2ecd80ef
  427f65:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f6b:	jmp    0x7180:0x8d8d3a16
  427f72:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f79:	sbb    DWORD PTR [edx],ecx
  427f7b:	sub    BYTE PTR [esi-0x80],0x90
  427f7f:	in     al,dx
  427f80:	jle    0x427f02
  427f82:	aad    0x35
  427f84:	out    dx,eax
  427f85:	pop    edi
  427f86:	sbb    DWORD PTR [ecx],ecx
  427f88:	in     eax,dx
  427f89:	fstp   TBYTE PTR [edx]
  427f8b:	lea    ecx,[ebp-0x10ca6a80]
  427f91:	sub    BYTE PTR [esi-0x80],0xa6
  427f95:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427f9c:	or     al,0xbe
  427f9e:	sar    BYTE PTR [edx],1
  427fa0:	lea    ecx,[ebp+0x45357580]
  427fa6:	dec    edi
  427fa7:	push   0x9
  427fa9:	dec    edi
  427faa:	cdq    
  427fab:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fb1:	out    dx,al
  427fb2:	or     ch,0x2e
  427fb5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fbb:	jne    0x427ff2
  427fbd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fc3:	int    0x26
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x10
  427fd5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fdb:	lea    edx,[eax+0x75]
  427fde:	xor    eax,0x35758021
  427fe3:	out    dx,al
  427fe4:	or     ch,0x41
  427fe7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fed:	lea    edx,[eax+0x75]
  427ff0:	xor    eax,0x35758021
  427ff5:	out    dx,al
  427ff6:	xor    BYTE PTR [ecx],0x35
  427ff9:	out    dx,al
  427ffa:	or     ch,0x82
  427ffd:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428003:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428009:	xor    dl,bh
  42800b:	and    ah,BYTE PTR [edi+ebp*2]
  42800e:	cmp    BYTE PTR [ebx-0x4],dl
  428011:	in     eax,dx
  428012:	add    eax,0xc86b20d
  428017:	mov    dl,0xba
  428019:	sub    edi,edi
  42801b:	std    
  42801c:	push   eax
  42801d:	xor    DWORD PTR ds:0x35757c21,esi
  428023:	out    dx,eax
  428024:	lea    ecx,[ebp+0x75808d8d]
  42802a:	xor    eax,0xd56a4f35
  42802f:	ret    
  428030:	xor    BYTE PTR [ebp+0x35],0x71
  428034:	in     eax,dx
  428035:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42803b:	push   ebx
  42803c:	jge    0x4280bb
  42803e:	aad    0x23
  428040:	jge    0x428019
  428042:	fmul   DWORD PTR [ebp-0x2b]
  428045:	xor    eax,0x35d54d2d
  42804a:	sub    eax,0x2d35d54d
  42804f:	dec    ebp
  428050:	aad    0x35
  428052:	sub    eax,0x55357580
  428057:	dec    ebp
  428058:	test   esp,0x35d54d39
  42805e:	and    eax,0x2535d54d
  428063:	dec    ebp
  428064:	aad    0x35
  428066:	and    eax,0x81357580
  42806b:	dec    ebp
  42806c:	test   esp,0x35d54d90
  428072:	adc    eax,0x3d357580
  428077:	dec    ebp
  428078:	test   esp,0x3575806f
  42807e:	xor    eax,0x7550f74d
  428083:	xor    eax,0x357580ef
  428088:	and    DWORD PTR [edi+0x6a],ecx
  42808b:	aad    0xa1
  42808d:	xor    BYTE PTR [ebp+0x35],0xee
  428091:	jl     0x428060
  428093:	test   BYTE PTR [edx],bh
  428095:	lea    ecx,[ebp+0x386f24f5]
  42809b:	xor    BYTE PTR [ebp+0x35],0xef
  42809f:	xor    BYTE PTR [ecx],0x35
  4280a2:	out    dx,al
  4280a3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280a7:	lea    ecx,[ebp+0x757c3a50]
  4280ad:	xor    eax,0x6f24f6ef
  4280b2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280b8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280be:	add    eax,0x29bab20d
  4280c3:	mov    dl,0x86
  4280c5:	or     al,0xff
  4280c7:	mov    dl,0x80
  4280c9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280cf:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280d5:	xor    DWORD PTR ds:0x835080ee,esi
  4280db:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280e1:	int    0x32
  4280e3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280e9:	les    ebx,FWORD PTR [edi]
  4280eb:	add    DWORD PTR [edi-0x12],esi
  4280ee:	push   eax
  4280ef:	jne    0x428126
  4280f1:	and    DWORD PTR [eax-0x7fdeca8b],eax
  4280f7:	xor    DWORD PTR ds:0xe55080ee,esi
  4280fd:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428103:	out    dx,eax
  428104:	xor    BYTE PTR [ebp+0x35],0xee
  428108:	or     ch,0x87
  42810b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428111:	xor    DWORD PTR ds:0x865080ee,esi
  428117:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42811d:	out    dx,al
  42811e:	mov    ds:0xee353180,al
  428123:	adc    BYTE PTR [eax-0x1b],0x3a
  428127:	lea    ecx,[ebp+0x30808d80]
  42812d:	cmp    ch,bh
  42812f:	test   eax,0xfba7b880
  428134:	sub    eax,0x614c748d
  428139:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42813d:	popa   
  42813e:	push   0x6c656548
  428143:	ins    BYTE PTR es:[edi],dx
  428144:	outs   dx,DWORD PTR ds:[esi]
  428145:	ja     0x428147
  428147:	popa   
  428148:	ins    DWORD PTR es:[edi],dx
  428149:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428150:	push   ebp
  428151:	outs   dx,BYTE PTR ds:[esi]
  428152:	bound  esp,QWORD PTR [ebp+0x0]
  428155:	push   0x6572576d
  42815a:	outs   dx,BYTE PTR ds:[esi]
  42815b:	jne    0x4281c1
  42815d:	outs   dx,DWORD PTR ds:[esi]
  42815e:	popa   
  42815f:	push   0x6b637573
  428164:	add    BYTE PTR [ebp+0x6f],cl
  428167:	ins    DWORD PTR es:[edi],dx
  428168:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42816f:	jo     0x4281d6
  428171:	je     0x428173
  428173:	dec    edx
  428174:	gs jae 0x4281ea
  428177:	ins    BYTE PTR es:[edi],dx
  428178:	outs   dx,DWORD PTR ds:[esi]
  428179:	dec    edi
  42817a:	js     0x4281e1
  42817c:	outs   dx,BYTE PTR ds:[esi]
  42817d:	outs   dx,DWORD PTR ds:[esi]
  42817e:	jb     0x4281e1
  428180:	add    BYTE PTR [edi+0x6f],al
  428183:	ja     0x4281e9
  428185:	dec    ebp
  428186:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42818d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  428195:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  42819c:	jae    0x42820b
  42819e:	popa   
  42819f:	fs jns 0x428211
  4281a2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281a6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281ad:	bound  esi,QWORD PTR [ebp+0x6d]
  4281b0:	add    BYTE PTR [ebp+0x72],al
  4281b3:	outs   dx,DWORD PTR ds:[si]
  4281b5:	jo     0x428218
  4281b7:	jns    0x42821f
  4281b9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281c0:	jne    0x42822f
  4281c2:	popa   
  4281c3:	gs fs jo 0x42822c
  4281c7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281ce:	dec    esp
  4281cf:	outs   dx,DWORD PTR ds:[esi]
  4281d0:	jne    0x428236
  4281d2:	push   0x6d6d7069
  4281d7:	add    BYTE PTR [edi+0x6c],al
  4281da:	outs   dx,DWORD PTR ds:[esi]
  4281db:	jo     0x428230
  4281dd:	ja     0x42824e
  4281df:	bound  eax,QWORD PTR [eax]
  4281e1:	jns    0x428252
  4281e3:	pop    ecx
  4281e4:	gs ins BYTE PTR es:[edi],dx
  4281e6:	jo     0x428241
  4281e8:	jne    0x428256
  4281ea:	gs gs jae 0x42824f
  4281ee:	popa   
  4281ef:	add    BYTE PTR [ecx+0x77],ah
  4281f2:	popa   
  4281f3:	inc    esi
  4281f4:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  4281fb:	outs   dx,BYTE PTR ds:[esi]
  4281fc:	je     0x42826d
  4281fe:	add    BYTE PTR [ebp+0x73],ah
  428201:	dec    esp
  428202:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428209:	ins    BYTE PTR es:[edi],dx
  42820a:	outs   dx,DWORD PTR ds:[esi]
  42820b:	bound  esp,QWORD PTR [ebp+0x0]
  42820e:	push   0x617a6761
  428213:	bound  ebp,QWORD PTR [edi+0x75]
  428216:	jo     0x428218
  428218:	inc    edx
  428219:	outs   dx,DWORD PTR ds:[esi]
  42821a:	jb     0x428290
  42821c:	popa   
  42821d:	js     0x42828e
  42821f:	data16 jo 0x428287
  428222:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42822a:	fs gs popa 
  42822d:	outs   dx,DWORD PTR fs:[esi]
  42822f:	jae    0x4282a9
  428231:	jne    0x428233
  428233:	inc    edi
  428234:	add    BYTE PTR [edi+0x0],ch
  428237:	add    BYTE PTR gs:[ebx+0x0],dh
  42823b:	dec    edx
  42823c:	add    BYTE PTR [ecx+0x0],ah
  42823f:	jbe    0x428241
  428241:	popa   
  428242:	add    BYTE PTR [eax],al
  428244:	add    BYTE PTR [edx+0x0],al
  428247:	popa   
  428248:	add    BYTE PTR [edx+0x0],ah
  42824b:	jne    0x42824d
  42824d:	outs   dx,DWORD PTR ds:[esi]
  42824e:	add    BYTE PTR [ebp+0x0],ch
  428251:	push   0x6d00
  428256:	add    BYTE PTR [edx+0x0],dh
  428259:	popa   
  42825a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42825e:	add    BYTE PTR [ecx+0x0],ah
  428261:	ins    DWORD PTR es:[edi],dx
  428262:	add    BYTE PTR [edi+0x0],ah
  428265:	popa   
  428266:	add    BYTE PTR [ecx+0x0],bh
  428269:	js     0x42826b
  42826b:	imul   eax,DWORD PTR [eax],0x610000
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [ecx+0x0],ah
  428275:	ins    BYTE PTR es:[edi],dx
  428276:	add    BYTE PTR [edx+0x0],ah
  428279:	outs   dx,DWORD PTR ds:[esi]
  42827a:	add    BYTE PTR [edi+0x0],ch
  42827d:	popa   
  42827e:	add    BYTE PTR [eax+0x0],dh
  428281:	jo     0x428283
  428283:	add    BYTE PTR [eax],al
  428285:	popa   
  428286:	add    BYTE PTR [esi+0x0],dh
  428289:	popa   
  42828a:	add    BYTE PTR [edi+0x0],ah
  42828d:	outs   dx,DWORD PTR ds:[esi]
  42828e:	add    BYTE PTR [ebx+0x0],dh
  428291:	push   0x77006f00
  428296:	add    BYTE PTR [eax+eax*1+0x65],ch
  42829a:	add    BYTE PTR [ebp+0x0],dh
  42829d:	add    BYTE PTR fs:[ebp+0x0],ah
  4282a1:	add    BYTE PTR fs:[eax],al
  4282a4:	add    BYTE PTR [eax+0x0],cl
  4282a7:	popa   
  4282a8:	add    BYTE PTR [edx+0x0],dh
  4282ab:	add    BYTE PTR gs:[edx+0x0],al
  4282af:	imul   eax,DWORD PTR [eax],0x6b0072
  4282b5:	arpl   WORD PTR [eax],ax
  4282b7:	popa   
  4282b8:	add    BYTE PTR [ebp+0x0],ch
  4282bb:	add    BYTE PTR [eax],al
  4282bd:	imul   eax,DWORD PTR [eax],0x61
  4282c0:	add    BYTE PTR [edi+0x0],dh
  4282c3:	popa   
  4282c4:	add    BYTE PTR [eax+0x0],bh
  4282c7:	outs   dx,DWORD PTR ds:[esi]
  4282c8:	add    BYTE PTR [edi+0x0],ch
  4282cb:	je     0x4282cd
  4282cd:	add    BYTE PTR [eax],al
  4282cf:	jb     0x4282d1
  4282d1:	jne    0x4282d3
  4282d3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282d7:	ins    BYTE PTR es:[edi],dx
  4282d8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282dc:	add    BYTE PTR [ebp+0x0],ch
  4282df:	ins    DWORD PTR es:[edi],dx
  4282e0:	add    BYTE PTR [eax],al
  4282e2:	add    BYTE PTR [edi+0x0],ch
  4282e5:	add    BYTE PTR gs:[eax+0x0],bh
  4282e9:	imul   eax,DWORD PTR [eax],0x650072
  4282ef:	ja     0x4282f1
  4282f1:	outs   dx,DWORD PTR ds:[esi]
  4282f2:	add    BYTE PTR [ebp+0x0],ah
  4282f5:	popa   
  4282f6:	add    BYTE PTR [edx+0x0],ah
  4282f9:	ins    BYTE PTR es:[edi],dx
  4282fa:	add    BYTE PTR [ecx+0x0],ch
  4282fd:	add    BYTE PTR [eax],al
  4282ff:	jne    0x428301
  428301:	ins    DWORD PTR es:[edi],dx
  428302:	add    BYTE PTR [esi+0x0],ch
  428305:	outs   dx,DWORD PTR ds:[esi]
  428306:	add    BYTE PTR [edi+0x0],ah
  428309:	bound  eax,QWORD PTR [eax]
  42830b:	popa   
  42830c:	add    BYTE PTR [esi+0x0],dh
  42830f:	outs   dx,DWORD PTR ds:[esi]
  428310:	add    BYTE PTR [edi+0x0],dh
  428313:	bound  eax,QWORD PTR [eax]
  428315:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42831a:	add    BYTE PTR [eax],al
  42831c:	add    bh,dh
  42831e:	sub    al,0x10
  428320:	add    BYTE PTR [esi],bl
  428322:	aaa    
  428323:	adc    BYTE PTR [eax],al
  428325:	and    al,0x42
  428327:	adc    BYTE PTR [eax],al
  428329:	rol    BYTE PTR [eax+edx*1],cl
  42832c:	add    ch,dh
  42832e:	xor    BYTE PTR [eax],dl
  428330:	add    BYTE PTR [esi-0x1affefcf],dh
  428336:	cmp    dl,BYTE PTR [eax]
  428338:	add    BYTE PTR [ebx],dh
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	adc    BYTE PTR [eax],al
  42833d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428341:	push   ecx
  428342:	inc    ecx
  428343:	adc    BYTE PTR [eax],al
  428345:	mov    cl,0x60
  428347:	adc    BYTE PTR [eax],al
  428349:	aas    
  42834a:	or     al,0x10
  42834c:	add    al,bh
  42834e:	and    DWORD PTR [eax],edx
  428350:	add    BYTE PTR [edx+0x37],dl
  428353:	adc    BYTE PTR [eax],al
  428355:	test   eax,0xa3001054
  42835a:	add    DWORD PTR [eax],edx
  42835c:	add    BYTE PTR [edi],ah
  42835e:	push   esp
  42835f:	adc    BYTE PTR [eax],al
  428361:	cmc    
  428362:	push   esi
  428363:	adc    BYTE PTR [eax],al
  428365:	imul   ecx,DWORD PTR [ebx],0x10
  428368:	add    BYTE PTR ds:0x21004283,bl
  42836e:	add    DWORD PTR [edx+0x0],0x25
  428372:	add    DWORD PTR [edx+0x0],0x29
  428376:	add    DWORD PTR [edx+0x0],0x2d
  42837a:	add    DWORD PTR [edx+0x0],0x31
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0xfffffff5
  4283b6:	add    DWORD PTR [edx+0x0],0xfffffff9
  4283ba:	add    DWORD PTR [edx+0x0],0xfffffffd
  4283be:	add    DWORD PTR [edx+0x0],0x1
  4283c2:	test   BYTE PTR [edx+0x0],al
  4283c5:	add    eax,0x9004284
  4283ca:	test   BYTE PTR [edx+0x0],al
  4283cd:	or     eax,0x11004284
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	arpl   WORD PTR [eax],si
  4283f7:	adc    BYTE PTR [eax],al
  4283f9:	push   ecx
  4283fa:	xor    DWORD PTR [eax],edx
  4283fc:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428400:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428406:	aaa    
  428407:	adc    BYTE PTR [eax],al
  428409:	(bad)  
  42840a:	pop    esi
  42840b:	adc    BYTE PTR [eax],al
  42840d:	call   0x1040:0xa400106a
  428414:	add    BYTE PTR [esi+0x23],ah
  428417:	adc    BYTE PTR [eax],al
  428419:	xor    DWORD PTR [eax],ebx
  42841b:	adc    BYTE PTR [eax],al
  42841d:	mov    edi,DWORD PTR [edi]
  42841f:	adc    BYTE PTR [eax],al
  428421:	and    BYTE PTR [ecx+0x10],0x0
  428425:	clc    
  428426:	ja     0x428438
  428428:	add    BYTE PTR [eax],dh
  42842a:	xor    dl,BYTE PTR [eax]
  42842c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428433:	adc    BYTE PTR [eax],al
  428435:	mov    fs,WORD PTR [ebx+0x10]
  428438:	add    BYTE PTR [ecx+0x6200107e],bl
  42843e:	daa    
  42843f:	adc    BYTE PTR [eax],al
  428441:	mov    edi,0x2e001069
  428446:	sub    eax,0x413c0010
  42844b:	adc    BYTE PTR [eax],al
  42844d:	xor    BYTE PTR [eax],dh
  42844f:	adc    BYTE PTR [eax],al
  428451:	outs   dx,BYTE PTR ds:[esi]
  428452:	dec    edi
  428453:	adc    BYTE PTR [eax],al
  428455:	adc    eax,0xeb001025
  42845a:	bound  edx,QWORD PTR [eax]
  42845c:	add    BYTE PTR [edi],dh
  42845e:	and    dl,BYTE PTR [eax]
  428460:	add    BYTE PTR [ebx+0x1a],bl
  428463:	adc    BYTE PTR [eax],al
  428465:	mov    BYTE PTR [esi+0x10],ch
  428468:	add    BYTE PTR [esi],ah
  42846a:	pusha  
  42846b:	adc    BYTE PTR [eax],al
  42846d:	pop    es
  42846e:	adc    eax,0x1ca50010
  428473:	adc    BYTE PTR [eax],al
  428475:	xor    eax,0x39004284
  42847a:	test   BYTE PTR [edx+0x0],al
  42847d:	cmp    eax,0x41004284
  428482:	test   BYTE PTR [edx+0x0],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp+0x200102f],ah
  4284ba:	jle    0x4284cc
  4284bc:	add    BYTE PTR [ebx],ch
  4284be:	adc    al,0x10
  4284c0:	add    BYTE PTR ds:0x4b001060,ah
  4284c6:	pop    edx
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	dec    ecx
  4284ca:	jne    0x4284dc
  4284cc:	add    dh,ch
  4284ce:	pop    esp
  4284cf:	adc    BYTE PTR [eax],al
  4284d1:	push   edx
  4284d2:	cmp    eax,0x529b0010
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	pop    ss
  4284da:	cmp    dl,BYTE PTR [eax]
  4284dc:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284e2:	xor    eax,0x158d0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	adc    DWORD PTR [edi+0x10],ebp
  4284ec:	add    BYTE PTR [ecx+0x51],ch
  4284ef:	adc    BYTE PTR [eax],al
  4284f1:	jmp    0x4284ff
  4284f3:	adc    BYTE PTR [eax],al
  4284f5:	mov    ch,0x84
  4284f7:	inc    edx
  4284f8:	add    BYTE PTR [ecx-0x42ffbd7c],bh
  4284fe:	test   BYTE PTR [edx+0x0],al
  428501:	rol    DWORD PTR [edx+eax*2+0x4284c500],0x0
  428509:	leave  
  42850a:	test   BYTE PTR [edx+0x0],al
  42850d:	int    0x84
  42850f:	inc    edx
  428510:	add    cl,dl
  428512:	test   BYTE PTR [edx+0x0],al
  428515:	aad    0x84
  428517:	inc    edx
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	xlat   BYTE PTR ds:[ebx]
  428536:	inc    ebp
  428537:	adc    BYTE PTR [eax],al
  428539:	xlat   BYTE PTR ds:[ebx]
  42853a:	pusha  
  42853b:	adc    BYTE PTR [eax],al
  42853d:	lea    ebp,[eax+edx*1+0x0]
  428541:	hlt    
  428542:	add    BYTE PTR [eax],dl
  428544:	add    BYTE PTR [esp+esi*2],dl
  428547:	adc    BYTE PTR [eax],al
  428549:	out    0x44,al
  42854b:	adc    BYTE PTR [eax],al
  42854d:	dec    esi
  42854e:	bound  edx,QWORD PTR [eax]
  428550:	add    BYTE PTR [edi+ebp*2],ch
  428553:	adc    BYTE PTR [eax],al
  428555:	cmp    ebx,DWORD PTR [ebx]
  428557:	adc    BYTE PTR [eax],al
  428559:	inc    ebp
  42855a:	pop    ecx
  42855b:	adc    BYTE PTR [eax],al
  42855d:	imul   BYTE PTR [ecx+0x10]
  428560:	add    BYTE PTR [esi],ah
  428562:	arpl   WORD PTR [eax],dx
  428564:	add    BYTE PTR [ebp-0x4fffefee],bh
  42856a:	sbb    edx,DWORD PTR [eax]
  42856c:	add    BYTE PTR [ebx],ah
  42856e:	adc    BYTE PTR ds:[eax],al
  428571:	xchg   ebx,eax
  428572:	push   ecx
  428573:	adc    BYTE PTR [eax],al
  428575:	xor    eax,0x39004285
  42857a:	test   DWORD PTR [edx+0x0],eax
  42857d:	cmp    eax,0x41004285
  428582:	test   DWORD PTR [edx+0x0],eax
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
	...
  4285c4:	sub    ch,dl
  4285c6:	mov    dh,0x4f
  4285c8:	add    BYTE PTR [eax],al
  4285ca:	add    BYTE PTR [eax],al
  4285cc:	xor    BYTE PTR [esi+0x10002],dl
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	add    DWORD PTR [eax],eax
  4285d6:	add    BYTE PTR [eax],al
  4285d8:	add    DWORD PTR [eax],eax
  4285da:	add    BYTE PTR [eax],al
  4285dc:	add    BYTE PTR [esi-0x69dffffe],dl
  4285e2:	add    al,BYTE PTR [eax]
  4285e4:	adc    BYTE PTR [esi+0x2],dl
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	add    BYTE PTR [eax],al
  4285ee:	add    BYTE PTR [eax],al
  4285f0:	add    BYTE PTR [ecx+0x2],cl
  4285f6:	add    BYTE PTR [eax],al
  4285f8:	push   ds
  4285f9:	mov    DWORD PTR [edx],eax
  4285fb:	add    BYTE PTR [edx],dh
  4285fd:	mov    DWORD PTR [edx],eax
  4285ff:	add    BYTE PTR [eax-0x77],cl
  428602:	add    al,BYTE PTR [eax]
  428604:	pop    eax
  428605:	mov    DWORD PTR [edx],eax
  428607:	add    BYTE PTR [esi-0x77],ah
  42860a:	add    al,BYTE PTR [eax]
  42860c:	jle    0x428597
  42860e:	add    al,BYTE PTR [eax]
  428610:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  428616:	add    al,BYTE PTR [eax]
  428618:	lods   al,BYTE PTR ds:[esi]
  428619:	mov    DWORD PTR [edx],eax
  42861b:	add    BYTE PTR [esi-0x35fffd77],bh
  428621:	mov    DWORD PTR [edx],eax
  428623:	add    dl,bl
  428625:	mov    DWORD PTR [edx],eax
  428627:	add    dl,ch
  428629:	mov    DWORD PTR [edx],eax
  42862b:	add    dh,dh
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    BYTE PTR [edx+ecx*4],al
  428632:	add    al,BYTE PTR [eax]
  428634:	adc    BYTE PTR [edx-0x75e3fffe],cl
  42863a:	add    al,BYTE PTR [eax]
  42863c:	mov    al,BYTE PTR es:[edx]
  42863f:	add    BYTE PTR [edx],bh
  428641:	mov    al,BYTE PTR [edx]
  428643:	add    BYTE PTR [edx+ecx*4+0x2],cl
  428647:	add    BYTE PTR [esi-0x76],dl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	pusha  
  42864d:	mov    al,BYTE PTR [edx]
  42864f:	add    BYTE PTR [eax-0x76],dh
  428652:	add    al,BYTE PTR [eax]
  428654:	or     BYTE PTR [edx-0x756dfffe],0x2
  42865b:	add    BYTE PTR [edx-0x4ffffd76],ah
  428661:	mov    al,BYTE PTR [edx]
  428663:	add    BYTE PTR [edx+ecx*4-0x7535fffe],bh
  42866a:	add    al,BYTE PTR [eax]
  42866c:	fimul  DWORD PTR [edx-0x7515fffe]
  428672:	add    al,BYTE PTR [eax]
  428674:	clc    
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    BYTE PTR [eax],dl
  428679:	mov    eax,DWORD PTR [edx]
  42867b:	add    BYTE PTR [edx],bl
  42867d:	mov    eax,DWORD PTR [edx]
  42867f:	add    BYTE PTR [edx],ch
  428681:	mov    eax,DWORD PTR [edx]
  428683:	add    BYTE PTR [edx-0x75],al
  428686:	add    al,BYTE PTR [eax]
  428688:	push   esp
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [ebx+ecx*4+0x2],ah
  42868f:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  428693:	add    BYTE PTR [esi-0x75],bh
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    WORD PTR [ebx-0x7463fffe],cs
  42869e:	add    al,BYTE PTR [eax]
  4286a0:	test   al,0x8b
  4286a2:	add    al,BYTE PTR [eax]
	...
  4286ac:	ror    BYTE PTR [ebx-0x741ffffe],cl
  4286b2:	add    al,BYTE PTR [eax]
  4286b4:	hlt    
  4286b5:	mov    eax,DWORD PTR [edx]
  4286b7:	add    BYTE PTR [edx],al
  4286b9:	mov    WORD PTR [edx],es
  4286bb:	add    BYTE PTR [eax],bl
  4286bd:	mov    WORD PTR [edx],es
  4286bf:	add    BYTE PTR [edx],ah
  4286c1:	mov    WORD PTR [edx],es
  4286c3:	add    BYTE PTR [esi],ch
  4286c5:	mov    WORD PTR [edx],es
  4286c7:	add    BYTE PTR [esi],bh
  4286c9:	mov    WORD PTR [edx],es
  4286cb:	add    BYTE PTR [eax-0x74],dl
  4286ce:	add    al,BYTE PTR [eax]
  4286d0:	outs   dx,BYTE PTR ds:[esi]
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [eax-0x71fffd74],al
  4286d9:	mov    WORD PTR [edx],es
  4286db:	add    BYTE PTR [esp+ecx*4-0x734ffffe],bl
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	les    ecx,FWORD PTR [edx+eax*1+0x28cd400]
  4286eb:	add    dl,ah
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,dh
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    BYTE PTR [edx],al
  4286f5:	lea    eax,[edx]
  4286f7:	add    BYTE PTR [ecx*4-0x72dbfffe],dl
  4286fe:	add    al,BYTE PTR [eax]
  428700:	lea    eax,ss:[edx]
  428703:	add    BYTE PTR [edx-0x73],al
  428706:	add    al,BYTE PTR [eax]
  428708:	push   esi
  428709:	lea    eax,[edx]
  42870b:	add    BYTE PTR [edx-0x73],ch
  42870e:	add    al,BYTE PTR [eax]
  428710:	jp     0x42869f
  428712:	add    al,BYTE PTR [eax]
  428714:	xchg   BYTE PTR [ebp-0x726bfffe],cl
  42871a:	add    al,BYTE PTR [eax]
  42871c:	mov    ds:0xb200028d,al
  428721:	lea    eax,[edx]
  428723:	add    al,cl
  428725:	lea    eax,[edx]
  428727:	add    ah,dl
  428729:	lea    eax,[edx]
  42872b:	add    al,ah
  42872d:	lea    eax,[edx]
  42872f:	add    ah,ch
  428731:	lea    eax,[edx]
  428733:	add    BYTE PTR [edx],al
  428735:	mov    es,WORD PTR [edx]
  428737:	add    BYTE PTR [esi+ecx*4],dl
  42873a:	add    al,BYTE PTR [eax]
  42873c:	and    al,0x8e
  42873e:	add    al,BYTE PTR [eax]
  428740:	xor    cl,BYTE PTR [esi-0x71b9fffe]
  428746:	add    al,BYTE PTR [eax]
  428748:	push   esp
  428749:	mov    es,WORD PTR [edx]
  42874b:	add    BYTE PTR [eax-0x72],ch
  42874e:	add    al,BYTE PTR [eax]
  428750:	jp     0x4286e0
  428752:	add    al,BYTE PTR [eax]
  428754:	mov    BYTE PTR [esi-0x715bfffe],cl
  42875a:	add    al,BYTE PTR [eax]
  42875c:	mov    dh,0x8e
  42875e:	add    al,BYTE PTR [eax]
  428760:	(bad)  
  428761:	mov    es,WORD PTR [edx]
  428763:	add    al,ah
  428765:	mov    es,WORD PTR [edx]
  428767:	add    dh,dh
  428769:	mov    es,WORD PTR [edx]
  42876b:	add    BYTE PTR [edi+ecx*4],al
  42876e:	add    al,BYTE PTR [eax]
  428770:	adc    cl,BYTE PTR [edi-0x70d7fffe]
  428776:	add    al,BYTE PTR [eax]
  428778:	inc    esp
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edx-0x71],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	pop    DWORD PTR fs:[edx]
  428783:	add    BYTE PTR [eax-0x71],bh
  428786:	add    al,BYTE PTR [eax]
  428788:	mov    cs,WORD PTR [edi-0x705bfffe]
  42878e:	add    al,BYTE PTR [eax]
  428790:	mov    edx,0xc800028f
  428795:	pop    DWORD PTR [edx]
  428797:	add    ah,bl
  428799:	pop    DWORD PTR [edx]
  42879b:	add    ah,ch
  42879d:	pop    DWORD PTR [edx]
  42879f:	add    al,bh
  4287a1:	pop    DWORD PTR [edx]
  4287a3:	add    BYTE PTR [edx],cl
  4287a5:	nop
  4287a6:	add    al,BYTE PTR [eax]
  4287a8:	sbb    dl,BYTE PTR [eax-0x6fd3fffe]
  4287ae:	add    al,BYTE PTR [eax]
  4287b0:	cmp    dl,BYTE PTR [eax-0x6fb3fffe]
  4287b6:	add    al,BYTE PTR [eax]
  4287b8:	bound  edx,QWORD PTR [eax-0x6f81fffe]
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	xchg   esp,eax
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	mov    eax,0xca000290
  4287cd:	nop
  4287ce:	add    al,BYTE PTR [eax]
  4287d0:	ficom  WORD PTR [eax-0x6f13fffe]
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	cld    
  4287d9:	nop
  4287da:	add    al,BYTE PTR [eax]
  4287dc:	or     BYTE PTR [ecx-0x6ee9fffe],dl
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cs xchg ecx,eax
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	ds xchg ecx,eax
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	dec    esp
  4287ed:	xchg   ecx,eax
  4287ee:	add    al,BYTE PTR [eax]
  4287f0:	pusha  
  4287f1:	xchg   ecx,eax
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	outs   dx,BYTE PTR ds:[esi]
  4287f5:	xchg   ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	jp     0x42878b
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	mov    WORD PTR [ecx-0x6e61fffe],ss
  428802:	add    al,BYTE PTR [eax]
  428804:	mov    al,0x91
  428806:	add    al,BYTE PTR [eax]
  428808:	(bad)  
  428809:	xchg   ecx,eax
  42880a:	add    al,BYTE PTR [eax]
  42880c:	rcl    BYTE PTR [ecx-0x6e1ffffe],cl
  428812:	add    al,BYTE PTR [eax]
  428814:	in     al,dx
  428815:	xchg   ecx,eax
  428816:	add    al,BYTE PTR [eax]
  428818:	cli    
  428819:	xchg   ecx,eax
  42881a:	add    al,BYTE PTR [eax]
  42881c:	push   cs
  42881d:	xchg   edx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	sbb    dl,BYTE PTR [edx-0x6dd1fffe]
  428826:	add    al,BYTE PTR [eax]
  428828:	cmp    dl,BYTE PTR [edx-0x6db5fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	pop    eax
  428831:	xchg   edx,eax
  428832:	add    al,BYTE PTR [eax]
  428834:	outs   dx,BYTE PTR ds:[esi]
  428835:	xchg   edx,eax
  428836:	add    al,BYTE PTR [eax]
  428838:	add    BYTE PTR [eax],al
  42883a:	add    BYTE PTR [eax],al
  42883c:	xchg   BYTE PTR [edx-0x6d6bfffe],dl
  428842:	add    al,BYTE PTR [eax]
  428844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	mov    esi,0xd0000292
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	loop   0x4287e4
  428852:	add    al,BYTE PTR [eax]
  428854:	cld    
  428855:	xchg   edx,eax
  428856:	add    al,BYTE PTR [eax]
  428858:	or     al,0x93
  42885a:	add    al,BYTE PTR [eax]
  42885c:	push   ss
  42885d:	xchg   ebx,eax
  42885e:	add    al,BYTE PTR [eax]
  428860:	sub    BYTE PTR [ebx-0x6cc7fffe],dl
  428866:	add    al,BYTE PTR [eax]
  428868:	push   eax
  428869:	xchg   ebx,eax
  42886a:	add    al,BYTE PTR [eax]
  42886c:	pusha  
  42886d:	xchg   ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	jo     0x428805
  428872:	add    al,BYTE PTR [eax]
  428874:	adc    BYTE PTR [ebx-0x6c6bfffe],0x2
  42887b:	add    BYTE PTR [eax-0x53fffd6d],ah
  428881:	xchg   ebx,eax
  428882:	add    al,BYTE PTR [eax]
  428884:	ret    0x293
  428887:	add    dh,dl
  428889:	xchg   ebx,eax
  42888a:	add    al,BYTE PTR [eax]
  42888c:	in     al,dx
  42888d:	xchg   ebx,eax
  42888e:	add    al,BYTE PTR [eax]
  428890:	add    BYTE PTR [edx+eax*1+0x2941600],dl
  428897:	add    BYTE PTR [eax],ch
  428899:	xchg   esp,eax
  42889a:	add    al,BYTE PTR [eax]
  42889c:	xor    al,0x94
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	inc    esp
  4288a1:	xchg   esp,eax
  4288a2:	add    al,BYTE PTR [eax]
  4288a4:	bound  edx,QWORD PTR [edx+eax*1+0x2947c00]
  4288ab:	add    BYTE PTR [edx-0x61fffd6c],cl
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	mov    dh,0x94
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	retf   0x294
  4288bb:	add    dl,bl
  4288bd:	xchg   esp,eax
  4288be:	add    al,BYTE PTR [eax]
  4288c0:	lock xchg esp,eax
  4288c2:	add    al,BYTE PTR [eax]
  4288c4:	add    dl,BYTE PTR [ebp-0x6aeffffe]
  4288ca:	add    al,BYTE PTR [eax]
  4288cc:	and    dl,BYTE PTR [ebp-0x6acffffe]
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	inc    eax
  4288d5:	xchg   ebp,eax
  4288d6:	add    al,BYTE PTR [eax]
  4288d8:	push   esi
  4288d9:	xchg   ebp,eax
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	ins    BYTE PTR es:[edi],dx
  4288dd:	xchg   ebp,eax
  4288de:	add    al,BYTE PTR [eax]
  4288e0:	jl     0x428877
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	xchg   edx,eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	pushf  
  4288e9:	xchg   ebp,eax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	scas   al,BYTE PTR es:[edi]
  4288ed:	xchg   ebp,eax
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    esi,0xcc000295
  4288f5:	xchg   ebp,eax
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	loop   0x42888f
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	add    BYTE PTR [eax],al
  4288fe:	add    BYTE PTR [eax],al
  428900:	xchg   edx,eax
  428901:	add    edx,DWORD PTR [edx+0x74]
  428904:	ins    BYTE PTR es:[edi],dx
  428905:	dec    ecx
  428906:	outs   dx,BYTE PTR ds:[esi]
  428907:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42890f:	jb     0x42897a
  428911:	outs   dx,BYTE PTR ds:[esi]
  428912:	add    BYTE PTR [bp+0x74],ch
  428916:	fs ins BYTE PTR es:[edi],dx
  428918:	ins    BYTE PTR es:[edi],dx
  428919:	cs fs ins BYTE PTR es:[edi],dx
  42891c:	ins    BYTE PTR es:[edi],dx
  42891d:	add    BYTE PTR [ecx+0x74654701],dl
  428923:	push   esi
  428924:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42892b:	dec    edi
  42892c:	jb     0x428995
  42892e:	inc    ebp
  42892f:	js     0x428931
  428931:	add    BYTE PTR [edx+0x74654701],cl
  428937:	push   esp
  428938:	gs js  0x4289af
  42893b:	inc    ebp
  42893c:	js     0x4289b2
  42893e:	outs   dx,BYTE PTR gs:[esi]
  428940:	je     0x428992
  428942:	outs   dx,DWORD PTR ds:[esi]
  428943:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42894a:	push   ebx
  42894b:	gs je  0x4289a2
  42894e:	gs js  0x4289c5
  428951:	inc    ecx
  428952:	ins    BYTE PTR es:[edi],dx
  428953:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42895a:	inc    ebp
  42895b:	js     0x4289d1
  42895d:	push   esp
  42895e:	gs js  0x4289d5
  428961:	dec    edi
  428962:	jne    0x4289d8
  428964:	push   edi
  428965:	add    BYTE PTR [eax],dl
  428967:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42896b:	outs   dx,BYTE PTR ds:[esi]
  42896c:	jae    0x4289da
  42896e:	popa   
  42896f:	je     0x4289d6
  428971:	inc    ebx
  428972:	push   0x65737261
  428977:	je     0x4289c2
  428979:	outs   dx,BYTE PTR ds:[esi]
  42897a:	outs   dx,WORD PTR ds:[esi]
  42897c:	add    BYTE PTR [eax],al
  42897e:	pop    ss
  42897f:	add    dl,BYTE PTR [edi+0x69]
  428982:	fs outs dx,BYTE PTR gs:[esi]
  428985:	push   eax
  428986:	popa   
  428987:	je     0x4289f1
  428989:	add    BYTE PTR [ebp+0x65724300],cl
  42898f:	popa   
  428990:	je     0x4289f7
  428992:	inc    ebx
  428993:	outs   dx,DWORD PTR ds:[esi]
  428994:	ins    DWORD PTR es:[edi],dx
  428995:	jo     0x4289f8
  428997:	je     0x428a02
  428999:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  42899d:	inc    ebx
  42899e:	add    BYTE PTR [eax],al
  4289a0:	mov    bh,0x1
  4289a2:	push   eax
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    BYTE PTR es:[edi],dx
  4289a5:	jns    0x428a13
  4289a7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289ae:	inc    edi
  4289af:	gs je  0x428a09
  4289b2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289b9:	addr16 inc ebp
  4289bb:	js     0x4289bd
  4289bd:	add    cl,ch
  4289bf:	add    DWORD PTR [ebx+0x65],edx
  4289c2:	je     0x428a10
  4289c4:	popa   
  4289c5:	jns    0x428a36
  4289c7:	jne    0x428a3d
  4289c9:	add    bl,dl
  4289cb:	add    DWORD PTR [ebx+0x65],edx
  4289ce:	je     0x428a11
  4289d0:	bound  ebp,QWORD PTR [edi+0x72]
  4289d3:	je     0x428a25
  4289d5:	jb     0x428a46
  4289d7:	arpl   WORD PTR [eax],ax
  4289d9:	add    BYTE PTR [edx],cl
  4289db:	add    dl,BYTE PTR [ebx+0x74]
  4289de:	jb     0x428a45
  4289e0:	je     0x428a45
  4289e2:	push   0x69424944
  4289e7:	je     0x428a5c
  4289e9:	add    BYTE PTR [ebx+0x1],al
  4289ec:	inc    edi
  4289ed:	gs je  0x428a34
  4289f0:	dec    ecx
  4289f1:	inc    edx
  4289f2:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  4289fa:	je     0x428a49
  4289fc:	popa   
  4289fd:	jo     0x428a4c
  4289ff:	outs   dx,DWORD PTR ds:[esi]
  428a00:	fs add BYTE PTR gs:[eax],al
  428a04:	daa    
  428a05:	add    DWORD PTR [edi+0x65],eax
  428a08:	je     0x428a4c
  428a0a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a0e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a15:	jae    0x428a7c
  428a17:	je     0x428a6b
  428a19:	outs   dx,BYTE PTR ds:[si]
  428a1b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a22:	jo     0x428a97
  428a24:	gs add ah,cl
  428a27:	add    DWORD PTR [ebx+0x63],edx
  428a2a:	popa   
  428a2b:	ins    BYTE PTR es:[edi],dx
  428a2c:	gs push edi
  428a2e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a35:	je     0x428a7c
  428a37:	js     0x428a39
  428a39:	add    BYTE PTR [edx+0x1],bh
  428a3c:	inc    edi
  428a3d:	gs je  0x428a93
  428a40:	je     0x428ab1
  428a42:	arpl   WORD PTR [ebx+0x4f],bp
  428a45:	bound  ebp,QWORD PTR [edx+0x65]
  428a48:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a4c:	call   0x5465:0x6e694c01
  428a53:	outs   dx,DWORD PTR ds:[esi]
  428a54:	add    BYTE PTR [eax],al
  428a56:	mov    dh,0x1
  428a58:	push   eax
  428a59:	outs   dx,DWORD PTR ds:[esi]
  428a5a:	ins    BYTE PTR es:[edi],dx
  428a5b:	jns    0x428ac4
  428a5d:	outs   dx,DWORD PTR ds:[esi]
  428a5e:	outs   dx,BYTE PTR ds:[esi]
  428a5f:	add    BYTE PTR [esi+0x1],bh
  428a62:	inc    edi
  428a63:	gs je  0x428aba
  428a66:	gs js  0x428add
  428a69:	inc    ecx
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    esi
  428a7a:	popa   
  428a7b:	arpl   WORD PTR [ebp+0x57],sp
  428a7e:	add    BYTE PTR [eax],al
  428a80:	mov    ebx,0x61655201
  428a85:	ins    BYTE PTR es:[edi],dx
  428a86:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a8d:	je     0x428b03
  428a8f:	add    BYTE PTR gs:[eax],al
  428a92:	mov    DWORD PTR [ecx],0x69736552
  428a98:	jp     0x428aff
  428a9a:	push   eax
  428a9b:	popa   
  428a9c:	ins    BYTE PTR es:[edi],dx
  428a9d:	gs je  0x428b14
  428aa0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428aa7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aaa:	gs push edx
  428aac:	outs   dx,BYTE PTR ds:[si]
  428aae:	add    BYTE PTR [eax],al
  428ab0:	push   cs
  428ab1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ab5:	je     0x428b06
  428ab7:	jne    0x428b2d
  428ab9:	inc    ecx
  428aba:	add    BYTE PTR [eax],al
  428abc:	test   DWORD PTR [ecx],0x52746553
  428ac2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ac7:	outs   dx,BYTE PTR ds:[esi]
  428ac8:	add    BYTE PTR [eax],al
  428aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428acb:	add    BYTE PTR [ebx+0x72],al
  428ace:	gs popa 
  428ad0:	je     0x428b37
  428ad2:	push   eax
  428ad3:	popa   
  428ad4:	ins    BYTE PTR es:[edi],dx
  428ad5:	gs je  0x428b4c
  428ad8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428adc:	inc    edi
  428add:	gs je  0x428b22
  428ae0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428ae8:	jae    0x428aea
  428aea:	mov    DWORD PTR [eax],0x6d756e45
  428af0:	inc    esi
  428af1:	outs   dx,DWORD PTR ds:[esi]
  428af2:	outs   dx,BYTE PTR ds:[esi]
  428af3:	je     0x428b68
  428af5:	push   edi
  428af6:	add    BYTE PTR [eax],al
  428af8:	lods   al,BYTE PTR ds:[esi]
  428af9:	add    BYTE PTR [ebx+0x72],al
  428afc:	gs popa 
  428afe:	je     0x428b65
  428b00:	push   edx
  428b01:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	dec    ecx
  428b08:	outs   dx,BYTE PTR ds:[esi]
  428b09:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b11:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b15:	gs inc esp
  428b17:	inc    esp
  428b18:	inc    ecx
  428b19:	add    ch,dl
  428b1b:	add    DWORD PTR [ebx+0x65],edx
  428b1e:	je     0x428b62
  428b20:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b28:	jae    0x428b2a
  428b2a:	mov    BYTE PTR [eax],al
  428b2c:	inc    ebx
  428b2d:	jb     0x428b94
  428b2f:	popa   
  428b30:	je     0x428b97
  428b32:	inc    edx
  428b33:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b3b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b42:	mov    es,WORD PTR [ecx]
  428b44:	inc    edi
  428b45:	gs je  0x428b9c
  428b48:	gs js  0x428bbf
  428b4b:	dec    ebp
  428b4c:	gs je  0x428bc1
  428b4f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b56:	push   ebx
  428b57:	gs je  0x428b9c
  428b5a:	jb     0x428bd1
  428b5c:	jae    0x428bc6
  428b5e:	dec    edi
  428b5f:	jb     0x428bc8
  428b61:	inc    ebp
  428b62:	js     0x428b64
  428b64:	mov    esp,0x63655201
  428b69:	je     0x428bb4
  428b6b:	outs   dx,BYTE PTR ds:[esi]
  428b6c:	push   edx
  428b6d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b76:	inc    ebp
  428b77:	jae    0x428bdc
  428b79:	popa   
  428b7a:	jo     0x428be1
  428b7c:	add    BYTE PTR [eax],al
  428b7e:	scas   eax,DWORD PTR es:[edi]
  428b7f:	add    DWORD PTR [eax+0x6f],edx
  428b82:	ins    BYTE PTR es:[edi],dx
  428b83:	jns    0x428bc7
  428b85:	gs jp  0x428bf1
  428b88:	gs jb  0x428b8b
  428b8b:	add    BYTE PTR [ebx+0x65724300],ch
  428b91:	popa   
  428b92:	je     0x428bf9
  428b94:	push   edx
  428b95:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b9a:	outs   dx,BYTE PTR ds:[esi]
  428b9b:	add    BYTE PTR [edi+0x65724300],cl
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	inc    esp
  428ba5:	inc    ebx
  428ba6:	push   edi
  428ba7:	add    BYTE PTR ds:0x74654701,bh
  428bad:	inc    ebx
  428bae:	jne    0x428c22
  428bb0:	jb     0x428c17
  428bb2:	outs   dx,BYTE PTR ds:[esi]
  428bb3:	je     0x428c04
  428bb5:	bound  ebp,QWORD PTR [edx+0x65]
  428bb8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bbc:	inc    edi
  428bbd:	inc    esp
  428bbe:	dec    ecx
  428bbf:	xor    esi,DWORD PTR [edx]
  428bc1:	cs fs ins BYTE PTR es:[edi],dx
  428bc4:	ins    BYTE PTR es:[edi],dx
  428bc5:	add    BYTE PTR [ebx+0x6f],ah
  428bc8:	outs   dx,BYTE PTR ds:[esi]
  428bc9:	jae    0x428c3a
  428bcb:	ins    BYTE PTR es:[edi],dx
  428bcc:	gs cs fs ins BYTE PTR es:[edi],dx
  428bd0:	ins    BYTE PTR es:[edi],dx
  428bd1:	add    BYTE PTR [ecx],bh
  428bd3:	add    BYTE PTR [ebx+0x68],al
  428bd6:	popa   
  428bd7:	jb     0x428c2e
  428bd9:	jo     0x428c4b
  428bdb:	gs jb  0x428c35
  428bde:	add    BYTE PTR [eax],al
  428be0:	dec    esi
  428be1:	add    dl,BYTE PTR [ebx+0x65]
  428be4:	je     0x428c33
  428be6:	outs   dx,BYTE PTR gs:[esi]
  428be8:	jne    0x428c33
  428bea:	je     0x428c51
  428bec:	ins    DWORD PTR es:[edi],dx
  428bed:	dec    ecx
  428bee:	outs   dx,BYTE PTR ds:[esi]
  428bef:	outs   dx,WORD PTR ds:[esi]
  428bf1:	push   edi
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	scas   al,BYTE PTR es:[edi]
  428bf5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428bf9:	fs inc ebx
  428bfb:	jne    0x428c6f
  428bfd:	jae    0x428c6e
  428bff:	jb     0x428c58
  428c01:	add    BYTE PTR [eax+0x0],bl
  428c04:	inc    ebx
  428c05:	jb     0x428c6c
  428c07:	popa   
  428c08:	je     0x428c6f
  428c0a:	inc    esp
  428c0b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c12:	jb     0x428c75
  428c14:	ins    DWORD PTR es:[edi],dx
  428c15:	inc    ecx
  428c16:	add    BYTE PTR [eax],al
  428c18:	popf   
  428c19:	add    DWORD PTR [ecx+0x73],ecx
  428c1c:	dec    ebp
  428c1d:	outs   dx,BYTE PTR gs:[esi]
  428c1f:	jne    0x428c21
  428c21:	add    BYTE PTR [eax+0x1],ch
  428c24:	inc    edi
  428c25:	gs je  0x428c7f
  428c28:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c2f:	add    DWORD PTR [edi+0x65],eax
  428c32:	je     0x428c88
  428c34:	outs   dx,DWORD PTR ds:[esi]
  428c35:	jo     0x428c8e
  428c37:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c3e:	mov    ds:0x57734901,eax
  428c43:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c4a:	jae    0x428cb5
  428c4c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c50:	sub    eax,0x74654701
  428c55:	dec    ebp
  428c56:	outs   dx,BYTE PTR gs:[esi]
  428c58:	jne    0x428c9d
  428c5a:	push   0x4d6b6365
  428c5f:	popa   
  428c60:	jb     0x428ccd
  428c62:	inc    esp
  428c63:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c6a:	outs   dx,BYTE PTR ds:[esi]
  428c6b:	jae    0x428c6d
  428c6d:	add    BYTE PTR [edx],bl
  428c6f:	add    BYTE PTR [ebx+0x61],al
  428c72:	ins    BYTE PTR es:[edi],dx
  428c73:	ins    BYTE PTR es:[edi],dx
  428c74:	push   edi
  428c75:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c7c:	outs   dx,DWORD PTR ds:[esi]
  428c7d:	arpl   WORD PTR [ecx+0x0],ax
  428c80:	repz add BYTE PTR [edi+0x65],al
  428c84:	je     0x428cc9
  428c86:	popa   
  428c87:	jb     0x428cee
  428c89:	je     0x428cdb
  428c8b:	outs   dx,DWORD PTR ds:[esi]
  428c8c:	jae    0x428c8e
  428c8e:	ret    0x7702
  428c91:	jbe    0x428d06
  428c93:	jo     0x428d07
  428c95:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428c9c:	test   al,0x1
  428c9e:	dec    esp
  428c9f:	outs   dx,DWORD PTR ds:[esi]
  428ca0:	popa   
  428ca1:	fs inc ecx
  428ca3:	arpl   WORD PTR [ebx+0x65],sp
  428ca6:	ins    BYTE PTR es:[edi],dx
  428ca7:	gs jb  0x428d0b
  428caa:	je     0x428d1b
  428cac:	jb     0x428d21
  428cae:	push   edi
  428caf:	add    BYTE PTR [edi],cl
  428cb1:	add    BYTE PTR [edx+0x72],al
  428cb4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428cbb:	outs   dx,DWORD PTR ds:[esi]
  428cbc:	ja     0x428d12
  428cbe:	outs   dx,DWORD PTR ds:[esi]
  428cbf:	push   esp
  428cc0:	outs   dx,DWORD PTR ds:[esi]
  428cc1:	jo     0x428cc3
  428cc3:	add    BYTE PTR [ecx+0x66654400],cl
  428cc9:	inc    esi
  428cca:	jb     0x428d2d
  428ccc:	ins    DWORD PTR es:[edi],dx
  428ccd:	gs push eax
  428ccf:	jb     0x428d40
  428cd1:	arpl   WORD PTR [ecx+0x0],ax
  428cd4:	mov    ebx,0x61724400
  428cd9:	ja     0x428d2f
  428cdb:	gs js  0x428d52
  428cde:	inc    ebp
  428cdf:	js     0x428d38
  428ce1:	add    BYTE PTR [edx+0x666e4901],al
  428ce7:	ins    BYTE PTR es:[edi],dx
  428ce8:	popa   
  428ce9:	je     0x428d50
  428ceb:	push   edx
  428cec:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428cf1:	add    dl,BYTE PTR [edx+0x65]
  428cf4:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428cfc:	popa   
  428cfd:	jae    0x428d72
  428cff:	push   edi
  428d00:	add    BYTE PTR [eax],al
  428d02:	inc    ebp
  428d03:	add    dl,BYTE PTR [ebx+0x65]
  428d06:	je     0x428d54
  428d08:	popa   
  428d09:	jae    0x428d7f
  428d0b:	inc    ebp
  428d0c:	jb     0x428d80
  428d0e:	outs   dx,DWORD PTR ds:[esi]
  428d0f:	jb     0x428d56
  428d11:	js     0x428d13
  428d13:	add    BYTE PTR [edx+0x43734901],dl
  428d19:	push   0x70557261
  428d1e:	jo     0x428d85
  428d20:	jb     0x428d63
  428d22:	add    BYTE PTR [eax],al
  428d24:	inc    ebx
  428d25:	add    BYTE PTR [ebx+0x6c],al
  428d28:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d2f:	arpl   WORD PTR [edx+0x65],si
  428d32:	outs   dx,BYTE PTR gs:[esi]
  428d34:	add    BYTE PTR [eax],al
  428d36:	push   ecx
  428d37:	add    dl,BYTE PTR [ebx+0x65]
  428d3a:	je     0x428d8c
  428d3c:	popa   
  428d3d:	jb     0x428da4
  428d3f:	outs   dx,BYTE PTR ds:[esi]
  428d40:	je     0x428d42
  428d42:	xchg   ecx,eax
  428d43:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d47:	arpl   WORD PTR [ebx+0x50],bp
  428d4a:	outs   dx,DWORD PTR ds:[esi]
  428d4b:	jo     0x428dc2
  428d4d:	jo     0x428d9c
  428d4f:	outs   dx,BYTE PTR gs:[esi]
  428d51:	jne    0x428d98
  428d53:	js     0x428d55
  428d55:	add    BYTE PTR [edx],ah
  428d57:	add    DWORD PTR [edi+0x65],eax
  428d5a:	je     0x428da7
  428d5c:	gs jns 0x428dc1
  428d5f:	outs   dx,DWORD PTR ds:[esi]
  428d60:	popa   
  428d61:	jb     0x428dc7
  428d63:	dec    esp
  428d64:	popa   
  428d65:	jns    0x428dd6
  428d67:	jne    0x428ddd
  428d69:	add    bl,bh
  428d6b:	add    BYTE PTR [edi+0x65],al
  428d6e:	je     0x428db3
  428d70:	ins    BYTE PTR es:[edi],dx
  428d71:	popa   
  428d72:	jae    0x428de7
  428d74:	dec    esi
  428d75:	popa   
  428d76:	ins    DWORD PTR es:[edi],dx
  428d77:	gs push edi
  428d79:	add    ch,bl
  428d7b:	add    BYTE PTR [ebp+0x71],al
  428d7e:	jne    0x428de1
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	push   edx
  428d82:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d87:	add    dl,BYTE PTR [ebx+0x65]
  428d8a:	je     0x428dcf
  428d8c:	popa   
  428d8d:	jb     0x428df4
  428d8f:	je     0x428de1
  428d91:	outs   dx,DWORD PTR ds:[esi]
  428d92:	jae    0x428d94
  428d94:	and    al,0x0
  428d96:	inc    ebx
  428d97:	push   0x65676e61
  428d9c:	dec    ebp
  428d9d:	outs   dx,BYTE PTR gs:[esi]
  428d9f:	jne    0x428df8
  428da1:	add    BYTE PTR [eax+0x73654400],bl
  428da7:	je     0x428e1b
  428da9:	outs   dx,DWORD PTR ds:[esi]
  428daa:	jns    0x428e03
  428dac:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428db3:	add    DWORD PTR [eax+0x6f],edx
  428db6:	jae    0x428e2c
  428db8:	push   esp
  428db9:	push   0x64616572
  428dbe:	dec    ebp
  428dbf:	gs jae 0x428e35
  428dc2:	popa   
  428dc3:	addr16 gs push edi
  428dc6:	add    BYTE PTR [eax],al
  428dc8:	push   edi
  428dc9:	add    dl,BYTE PTR [ebx+0x65]
  428dcc:	je     0x428e1e
  428dce:	jb     0x428e3f
  428dd0:	jo     0x428e29
  428dd2:	add    BYTE PTR [eax],al
  428dd4:	mov    al,0x1
  428dd6:	dec    esp
  428dd7:	outs   dx,DWORD PTR ds:[esi]
  428dd8:	popa   
  428dd9:	fs dec ecx
  428ddb:	arpl   WORD PTR [edi+0x6e],bp
  428dde:	push   edi
  428ddf:	add    bl,bh
  428de1:	add    DWORD PTR [eax+0x74],edx
  428de4:	dec    ecx
  428de5:	outs   dx,BYTE PTR ds:[esi]
  428de6:	push   edx
  428de7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dec:	dec    edx
  428ded:	add    dl,BYTE PTR [ebx+0x65]
  428df0:	je     0x428e3f
  428df2:	outs   dx,BYTE PTR gs:[esi]
  428df4:	jne    0x428e3a
  428df6:	gs popaw 
  428df9:	jne    0x428e67
  428dfb:	je     0x428e46
  428dfd:	je     0x428e64
  428dff:	ins    DWORD PTR es:[edi],dx
  428e00:	add    BYTE PTR [eax],al
  428e02:	sti    
  428e03:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e07:	arpl   WORD PTR [ebx+0x50],bp
  428e0a:	outs   dx,DWORD PTR ds:[esi]
  428e0b:	jo     0x428e82
  428e0d:	jo     0x428e5c
  428e0f:	outs   dx,BYTE PTR gs:[esi]
  428e11:	jne    0x428e13
  428e13:	add    BYTE PTR [ebp+0x64705502],ah
  428e19:	popa   
  428e1a:	je     0x428e81
  428e1c:	push   edi
  428e1d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e24:	push   ss
  428e25:	add    dl,BYTE PTR [edx+0x65]
  428e28:	ins    DWORD PTR es:[edi],dx
  428e29:	outs   dx,DWORD PTR ds:[esi]
  428e2a:	jbe    0x428e91
  428e2c:	dec    ebp
  428e2d:	outs   dx,BYTE PTR gs:[esi]
  428e2f:	jne    0x428e31
  428e31:	add    BYTE PTR [edx+0x61724400],dh
  428e37:	ja     0x428e7f
  428e39:	jb     0x428e9c
  428e3b:	ins    DWORD PTR es:[edi],dx
  428e3c:	gs inc ebx
  428e3e:	outs   dx,DWORD PTR ds:[esi]
  428e3f:	outs   dx,BYTE PTR ds:[esi]
  428e40:	je     0x428eb4
  428e42:	outs   dx,DWORD PTR ds:[esi]
  428e43:	ins    BYTE PTR es:[edi],dx
  428e44:	add    BYTE PTR [eax],al
  428e46:	mov    dl,0x1
  428e48:	dec    esp
  428e49:	outs   dx,DWORD PTR ds:[esi]
  428e4a:	popa   
  428e4b:	fs dec ecx
  428e4d:	ins    DWORD PTR es:[edi],dx
  428e4e:	popa   
  428e4f:	addr16 gs push edi
  428e52:	add    BYTE PTR [eax],al
  428e54:	add    al,BYTE PTR [eax]
  428e56:	inc    ecx
  428e57:	fs push 0x75
  428e5a:	jae    0x428ed0
  428e5c:	push   edi
  428e5d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e64:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e68:	add    DWORD PTR [ecx],0x65536e49
  428e6e:	outs   dx,BYTE PTR ds:[esi]
  428e6f:	fs dec ebp
  428e71:	gs jae 0x428ee7
  428e74:	popa   
  428e75:	addr16 gs inc ebp
  428e78:	js     0x428e7a
  428e7a:	xchg   BYTE PTR [ecx],al
  428e7c:	dec    ecx
  428e7d:	outs   dx,BYTE PTR ds:[esi]
  428e7e:	jae    0x428ee5
  428e80:	jb     0x428ef6
  428e82:	dec    ebp
  428e83:	outs   dx,BYTE PTR gs:[esi]
  428e85:	jne    0x428ede
  428e87:	add    BYTE PTR ds:0x6c6c4100,al
  428e8d:	outs   dx,DWORD PTR ds:[esi]
  428e8e:	ja     0x428ee3
  428e90:	gs je  0x428ed9
  428e93:	outs   dx,DWORD PTR ds:[esi]
  428e94:	jb     0x428efb
  428e96:	addr16 jb 0x428f08
  428e99:	jne    0x428f09
  428e9b:	fs push edi
  428e9d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ea4:	add    BYTE PTR [edx],0x53
  428ea7:	ja     0x428f0a
  428ea9:	jo     0x428ef8
  428eab:	outs   dx,DWORD PTR ds:[esi]
  428eac:	jne    0x428f21
  428eae:	gs inc edx
  428eb0:	jne    0x428f26
  428eb2:	je     0x428f23
  428eb4:	outs   dx,BYTE PTR ds:[esi]
  428eb5:	add    bh,ch
  428eb7:	add    DWORD PTR [eax+0x65],edx
  428eba:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ebf:	jae    0x428f22
  428ec1:	addr16 gs push edi
  428ec4:	add    BYTE PTR [eax],al
  428ec6:	cdq    
  428ec7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428ecb:	ins    BYTE PTR es:[edi],dx
  428ecc:	outs   dx,DWORD PTR ds:[esi]
  428ecd:	addr16 inc edx
  428ecf:	outs   dx,DWORD PTR ds:[esi]
  428ed0:	js     0x428f1b
  428ed2:	outs   dx,BYTE PTR ds:[esi]
  428ed3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428edb:	jb     0x428f3e
  428edd:	ins    DWORD PTR es:[edi],dx
  428ede:	inc    ecx
  428edf:	add    BYTE PTR [ebp+0x0],bl
  428ee2:	inc    ebx
  428ee3:	jb     0x428f4a
  428ee5:	popa   
  428ee6:	je     0x428f4d
  428ee8:	dec    ecx
  428ee9:	arpl   WORD PTR [edi+0x6e],bp
  428eec:	dec    ecx
  428eed:	outs   dx,BYTE PTR ds:[esi]
  428eee:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428ef6:	stos   BYTE PTR es:[edi],al
  428ef7:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428efb:	fs inc edx
  428efd:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f05:	add    dl,BYTE PTR [esi+0x6b]
  428f08:	dec    ebx
  428f09:	gs jns 0x428f5f
  428f0c:	arpl   WORD PTR [ecx+0x6e],sp
  428f0f:	push   edi
  428f10:	add    BYTE PTR [eax],al
  428f12:	adc    eax,DWORD PTR [ecx]
  428f14:	inc    edi
  428f15:	gs je  0x428f5c
  428f18:	outs   dx,DWORD PTR ds:[esi]
  428f19:	jne    0x428f7d
  428f1b:	ins    BYTE PTR es:[edi],dx
  428f1c:	gs inc ebx
  428f1e:	ins    BYTE PTR es:[edi],dx
  428f1f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f26:	add    BYTE PTR [eax],al
  428f28:	add    WORD PTR [edi+0x65],ax
  428f2c:	je     0x428f83
  428f2e:	jae    0x428f95
  428f30:	jb     0x428f81
  428f32:	bound  ebp,QWORD PTR [edx+0x65]
  428f35:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f39:	outs   dx,WORD PTR ds:[esi]
  428f3b:	jb     0x428faa
  428f3d:	popa   
  428f3e:	je     0x428fa9
  428f40:	outs   dx,DWORD PTR ds:[esi]
  428f41:	outs   dx,BYTE PTR ds:[esi]
  428f42:	push   edi
  428f43:	add    BYTE PTR [eax+0x1],bl
  428f46:	inc    edi
  428f47:	gs je  0x428f9d
  428f4a:	jne    0x428fae
  428f4c:	dec    ebp
  428f4d:	outs   dx,BYTE PTR gs:[esi]
  428f4f:	jne    0x428f51
  428f51:	add    dh,dh
  428f53:	add    BYTE PTR [edi+0x65],al
  428f56:	je     0x428f9b
  428f58:	ins    BYTE PTR es:[edi],dx
  428f59:	popa   
  428f5a:	jae    0x428fcf
  428f5c:	dec    ecx
  428f5d:	outs   dx,BYTE PTR ds:[esi]
  428f5e:	outs   dx,WORD PTR ds:[esi]
  428f60:	inc    ebp
  428f61:	js     0x428fba
  428f63:	add    BYTE PTR [ecx+eax*1],cl
  428f66:	inc    edi
  428f67:	gs je  0x428fae
  428f6a:	gs jae 0x428fd8
  428f6d:	je     0x428fde
  428f6f:	jo     0x428fc8
  428f71:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f78:	sub    eax,0x6e655302
  428f7d:	fs dec esi
  428f7f:	outs   dx,DWORD PTR ds:[esi]
  428f80:	je     0x428feb
  428f82:	data16 jns 0x428fd2
  428f85:	gs jae 0x428ffb
  428f88:	popa   
  428f89:	addr16 gs push edi
  428f8c:	add    BYTE PTR [eax],al
  428f8e:	and    al,BYTE PTR [edx]
  428f90:	push   ebx
  428f91:	outs   dx,BYTE PTR gs:[esi]
  428f93:	fs inc esp
  428f95:	ins    BYTE PTR es:[edi],dx
  428f96:	addr16 dec ecx
  428f98:	je     0x428fff
  428f9a:	ins    DWORD PTR es:[edi],dx
  428f9b:	dec    ebp
  428f9c:	gs jae 0x429012
  428f9f:	popa   
  428fa0:	addr16 gs push edi
  428fa3:	add    BYTE PTR [eax],ch
  428fa5:	add    DWORD PTR [edi+0x65],eax
  428fa8:	je     0x428ff6
  428faa:	popa   
  428fab:	jae    0x429021
  428fad:	inc    ecx
  428fae:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fb2:	gs push eax
  428fb4:	outs   dx,DWORD PTR ds:[esi]
  428fb5:	jo     0x42902c
  428fb7:	jo     0x428fb9
  428fb9:	add    BYTE PTR [ecx],ch
  428fbb:	add    BYTE PTR [ebx+0x68],al
  428fbe:	popa   
  428fbf:	jb     0x42900d
  428fc1:	outs   dx,DWORD PTR ds:[esi]
  428fc2:	ja     0x429029
  428fc4:	jb     0x42901d
  428fc6:	add    BYTE PTR [eax],al
  428fc8:	xor    al,BYTE PTR [ecx]
  428fca:	inc    edi
  428fcb:	gs je  0x42901b
  428fce:	outs   dx,BYTE PTR gs:[esi]
  428fd0:	jne    0x42901b
  428fd2:	je     0x429039
  428fd4:	ins    DWORD PTR es:[edi],dx
  428fd5:	inc    ebx
  428fd6:	outs   dx,DWORD PTR ds:[esi]
  428fd7:	jne    0x429047
  428fd9:	je     0x428fdb
  428fdb:	add    BYTE PTR ds:0x74655302,bh
  428fe1:	inc    esp
  428fe2:	ins    BYTE PTR es:[edi],dx
  428fe3:	addr16 dec ecx
  428fe5:	je     0x42904c
  428fe7:	ins    DWORD PTR es:[edi],dx
  428fe8:	dec    ecx
  428fe9:	outs   dx,BYTE PTR ds:[esi]
  428fea:	je     0x428fec
  428fec:	mov    al,ds:0x57734901
  428ff1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ff8:	mov    ds:0x57734901,al
  428ffd:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429004:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42900b:	add    DWORD PTR [edi+0x70],ecx
  42900e:	outs   dx,BYTE PTR gs:[esi]
  429010:	inc    esp
  429011:	gs jae 0x42907f
  429014:	je     0x429085
  429016:	jo     0x42906f
  429018:	add    BYTE PTR [eax],al
  42901a:	cmp    al,BYTE PTR [eax]
  42901c:	inc    ebx
  42901d:	push   0x446b6365
  429022:	ins    BYTE PTR es:[edi],dx
  429023:	addr16 inc edx
  429025:	jne    0x42909b
  429027:	je     0x429098
  429029:	outs   dx,BYTE PTR ds:[esi]
  42902a:	add    BYTE PTR [eax],al
  42902c:	mov    eax,DWORD PTR [ecx]
  42902e:	dec    ecx
  42902f:	outs   dx,BYTE PTR ds:[esi]
  429030:	jbe    0x429097
  429032:	jb     0x4290a8
  429034:	push   edx
  429035:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42903a:	pop    DWORD PTR [eax]
  42903c:	inc    esp
  42903d:	gs push di
  429040:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429047:	outs   dx,DWORD PTR ds:[esi]
  429048:	arpl   WORD PTR [edi+0x0],dx
  42904b:	add    BYTE PTR ds:0x74654701,cl
  429051:	inc    esp
  429052:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429059:	jae    0x4290c0
  42905b:	push   ebp
  42905c:	outs   dx,BYTE PTR ds:[esi]
  42905d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429065:	gs je  0x4290bd
  429068:	jae    0x4290cf
  42906a:	jb     0x4290bb
  42906c:	bound  ebp,QWORD PTR [edx+0x65]
  42906f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429073:	outs   dx,WORD PTR ds:[esi]
  429075:	jb     0x4290e4
  429077:	popa   
  429078:	je     0x4290e3
  42907a:	outs   dx,DWORD PTR ds:[esi]
  42907b:	outs   dx,BYTE PTR ds:[esi]
  42907c:	inc    ecx
  42907d:	add    BYTE PTR [ecx+0x44734901],bl
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	addr16 inc edx
  429086:	jne    0x4290fc
  429088:	je     0x4290f9
  42908a:	outs   dx,BYTE PTR ds:[esi]
  42908b:	inc    ebx
  42908c:	push   0x656b6365
  429091:	add    BYTE PTR fs:[eax],al
  429094:	ins    DWORD PTR es:[edi],dx
  429095:	add    DWORD PTR [edi+0x65],eax
  429098:	je     0x4290f1
  42909a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290a1:	outs   dx,BYTE PTR ds:[esi]
  4290a2:	addr16 push edi
  4290a4:	add    BYTE PTR [eax],al
  4290a6:	popa   
  4290a7:	add    BYTE PTR [ebx+0x72],al
  4290aa:	gs popa 
  4290ac:	je     0x429113
  4290ae:	push   eax
  4290af:	outs   dx,DWORD PTR ds:[esi]
  4290b0:	jo     0x429127
  4290b2:	jo     0x429101
  4290b4:	outs   dx,BYTE PTR gs:[esi]
  4290b6:	jne    0x4290b8
  4290b8:	sbb    eax,DWORD PTR [eax]
  4290ba:	inc    ebx
  4290bb:	popa   
  4290bc:	ins    BYTE PTR es:[edi],dx
  4290bd:	ins    BYTE PTR es:[edi],dx
  4290be:	push   edi
  4290bf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290c6:	outs   dx,DWORD PTR ds:[esi]
  4290c7:	arpl   WORD PTR [edi+0x0],dx
  4290ca:	stos   DWORD PTR es:[edi],eax
  4290cb:	add    BYTE PTR [edx+esi*2+0x61],al
  4290cf:	ja     0x429112
  4290d1:	outs   dx,BYTE PTR ds:[esi]
  4290d2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290d9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290de:	sahf   
  4290df:	add    DWORD PTR [ecx+0x73],ecx
  4290e2:	push   edx
  4290e3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290e8:	jo     0x42915e
  4290ea:	jns    0x4290ec
  4290ec:	inc    BYTE PTR [eax]
  4290ee:	inc    edi
  4290ef:	gs je  0x429135
  4290f2:	ins    BYTE PTR es:[edi],dx
  4290f3:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4290fa:	jb     0x4290fc
  4290fc:	lds    eax,FWORD PTR [eax]
  4290fe:	inc    ebp
  4290ff:	outs   dx,BYTE PTR ds:[esi]
  429100:	fs push eax
  429102:	popa   
  429103:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42910a:	inc    ebp
  42910b:	outs   dx,BYTE PTR ds:[esi]
  42910c:	jne    0x42917b
  42910e:	push   edi
  42910f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429116:	xchg   DWORD PTR [ecx],eax
  429118:	dec    ecx
  429119:	outs   dx,BYTE PTR ds:[esi]
  42911a:	je     0x429181
  42911c:	jb     0x42918c
  42911e:	popa   
  42911f:	ins    BYTE PTR es:[edi],dx
  429120:	inc    edi
  429121:	gs je  0x42917b
  429124:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42912b:	js     0x4291a1
  42912d:	add    BYTE PTR [eax+0x43734901],dl
  429133:	push   0x6f4c7261
  429138:	ja     0x42919f
  42913a:	jb     0x42917d
  42913c:	add    BYTE PTR [eax],al
  42913e:	aad    0x1
  429140:	dec    ebp
  429141:	gs jae 0x4291b7
  429144:	popa   
  429145:	addr16 gs inc edx
  429148:	outs   dx,DWORD PTR ds:[esi]
  429149:	js     0x4291a2
  42914b:	add    BYTE PTR [edi+0x636f4c01],bh
  429151:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429155:	outs   dx,DWORD PTR fs:[esi]
  429157:	ja     0x4291ae
  429159:	jo     0x4291bf
  42915b:	popa   
  42915c:	je     0x4291c3
  42915e:	add    BYTE PTR [eax],al
  429160:	add    BYTE PTR es:[ebx+0x68],al
  429164:	popa   
  429165:	jb     0x4291b3
  429167:	outs   dx,DWORD PTR ds:[esi]
  429168:	ja     0x4291cf
  42916a:	jb     0x4291ad
  42916c:	add    BYTE PTR [eax],al
  42916e:	call   0x6e6f:0x696e5502
  429175:	push   edx
  429176:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42917b:	add    DWORD PTR [edi+0x65],eax
  42917e:	je     0x4291cd
  429180:	outs   dx,BYTE PTR gs:[esi]
  429182:	jne    0x4291d7
  429184:	je     0x4291f8
  429186:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42918d:	add    DWORD PTR [ebp+0x6f],ecx
  429190:	outs   dx,BYTE PTR ds:[esi]
  429191:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  429199:	push   edx
  42919a:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  42919f:	add    dl,BYTE PTR [ebx+0x65]
  4291a2:	je     0x4291fb
  4291a4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291ab:	outs   dx,BYTE PTR ds:[esi]
  4291ac:	addr16 inc ecx
  4291ae:	add    BYTE PTR [eax],al
  4291b0:	or     al,0x0
  4291b2:	inc    edx
  4291b3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291bc:	push   edi
  4291bd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291c4:	jae    0x4291c6
  4291c6:	add    BYTE PTR cs:[ebx+0x68],al
  4291ca:	popa   
  4291cb:	jb     0x42921d
  4291cd:	jb     0x429234
  4291cf:	jbe    0x429212
  4291d1:	add    bl,bl
  4291d3:	add    DWORD PTR [ebp+0x6f],ecx
  4291d6:	jbe    0x42923d
  4291d8:	push   edi
  4291d9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291e0:	mov    dh,0x1
  4291e2:	dec    esp
  4291e3:	outs   dx,DWORD PTR ds:[esi]
  4291e4:	popa   
  4291e5:	fs dec ebp
  4291e7:	outs   dx,BYTE PTR gs:[esi]
  4291e9:	jne    0x42922c
  4291eb:	add    BYTE PTR [ebp+0x79656b02],bh
  4291f1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  4291f5:	jbe    0x42925c
  4291f7:	outs   dx,BYTE PTR ds:[esi]
  4291f8:	je     0x4291fa
  4291fa:	pop    esp
  4291fb:	add    DWORD PTR [edi+0x65],eax
  4291fe:	je     0x429253
  429200:	jns    0x429275
  429202:	je     0x429269
  429204:	ins    DWORD PTR es:[edi],dx
  429205:	dec    ebp
  429206:	gs je  0x42927b
  429209:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429210:	dec    esp
  429211:	outs   dx,DWORD PTR ds:[esi]
  429212:	popa   
  429213:	fs dec ecx
  429215:	arpl   WORD PTR [edi+0x6e],bp
  429218:	inc    ecx
  429219:	add    BYTE PTR [ebx+0x1],al
  42921c:	inc    edi
  42921d:	gs je  0x42926e
  429220:	gs js  0x429297
  429223:	inc    esp
  429224:	ins    BYTE PTR es:[edi],dx
  429225:	addr16 push esp
  429227:	popa   
  429228:	bound  ecx,QWORD PTR [ecx+0x74]
  42922b:	gs ins DWORD PTR es:[edi],dx
  42922d:	add    BYTE PTR [ebx+0x61724400],dh
  429233:	ja     0x42927e
  429235:	arpl   WORD PTR [edi+0x6e],bp
  429238:	add    BYTE PTR [eax],al
  42923a:	std    
  42923b:	add    BYTE PTR [edi+0x65],al
  42923e:	je     0x429283
  429240:	ins    BYTE PTR es:[edi],dx
  429241:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429248:	je     0x42924a
  42924a:	add    DWORD PTR ds:[edi+0x65],eax
  42924e:	je     0x42929d
  429250:	gs jae 0x4292c6
  429253:	popa   
  429254:	addr16 gs push edi
  429257:	add    BYTE PTR [edx+0x1],al
  42925a:	inc    edi
  42925b:	gs je  0x4292ac
  42925e:	gs js  0x4292d5
  429261:	inc    esp
  429262:	ins    BYTE PTR es:[edi],dx
  429263:	addr16 inc edi
  429265:	jb     0x4292d6
  429267:	jne    0x4292d9
  429269:	dec    ecx
  42926a:	je     0x4292d1
  42926c:	ins    DWORD PTR es:[edi],dx
  42926d:	add    BYTE PTR ds:0x6c655202,dl
  429273:	gs popa 
  429275:	jae    0x4292dc
  429277:	inc    esp
  429278:	inc    ebx
  429279:	add    BYTE PTR [ebp+0x53],dl
  42927c:	inc    ebp
  42927d:	push   edx
  42927e:	xor    esi,DWORD PTR [edx]
  429280:	cs fs ins BYTE PTR es:[edi],dx
  429283:	ins    BYTE PTR es:[edi],dx
  429284:	add    BYTE PTR [eax],al
  429286:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42928a:	jbe    0x4292f1
  42928c:	inc    esi
  42928d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  429295:	add    DWORD PTR [esi+0x69],eax
  429298:	outs   dx,BYTE PTR ds:[esi]
  429299:	fs push edx
  42929b:	gs jae 0x42930d
  42929e:	jne    0x429312
  4292a0:	arpl   WORD PTR [ebp+0x45],sp
  4292a3:	js     0x4292fc
  4292a5:	add    BYTE PTR [ebx],dl
  4292a7:	add    al,0x53
  4292a9:	gs je  0x4292ef
  4292ac:	jne    0x429320
  4292ae:	jb     0x429315
  4292b0:	outs   dx,BYTE PTR ds:[esi]
  4292b1:	je     0x4292f7
  4292b3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ba:	jns    0x4292fd
  4292bc:	add    BYTE PTR [eax],al
  4292be:	sub    BYTE PTR [ebx+edx*2],al
  4292c1:	gs je  0x42930c
  4292c4:	popa   
  4292c5:	outs   dx,BYTE PTR ds:[esi]
  4292c6:	fs ins BYTE PTR es:[edi],dx
  4292c8:	gs inc ebx
  4292ca:	outs   dx,DWORD PTR ds:[esi]
  4292cb:	jne    0x42933b
  4292cd:	je     0x4292cf
  4292cf:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292d5:	jo     0x429338
  4292d7:	jb     0x42933e
  4292d9:	push   ebx
  4292da:	je     0x42934e
  4292dc:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292e3:	add    DWORD PTR [esi+0x69],eax
  4292e6:	ins    BYTE PTR es:[edi],dx
  4292e7:	gs push esp
  4292e9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  4292f0:	arpl   WORD PTR [ecx+0x6c],sp
  4292f3:	inc    esi
  4292f4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4292fc:	cmp    eax,DWORD PTR [ebx+edx*2]
  4292ff:	gs je  0x429355
  429302:	jns    0x429377
  429304:	je     0x42936b
  429306:	ins    DWORD PTR es:[edi],dx
  429307:	push   esp
  429308:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42930f:	gs je  0x429353
  429312:	inc    ebx
  429313:	push   eax
  429314:	add    BYTE PTR [eax],al
  429316:	arpl   WORD PTR [ecx],ax
  429318:	inc    esi
  429319:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429320:	je     0x429368
  429322:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42932a:	dec    esp
  42932b:	outs   dx,DWORD PTR ds:[esi]
  42932c:	popa   
  42932d:	fs dec esp
  42932f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429336:	add    BYTE PTR [eax],al
  429338:	push   ss
  429339:	add    DWORD PTR [ebp+0x6e],eax
  42933c:	je     0x4293a3
  42933e:	jb     0x429383
  429340:	jb     0x4293ab
  429342:	je     0x4293ad
  429344:	arpl   WORD PTR [ecx+0x6c],sp
  429347:	push   ebx
  429348:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42934d:	outs   dx,BYTE PTR ds:[esi]
  42934e:	add    BYTE PTR [eax],al
  429350:	cdq    
  429351:	add    DWORD PTR [edi+0x65],eax
  429354:	je     0x429399
  429356:	outs   dx,DWORD PTR ds:[esi]
  429357:	ins    DWORD PTR es:[edi],dx
  429358:	ins    DWORD PTR es:[edi],dx
  429359:	inc    ebx
  42935a:	outs   dx,DWORD PTR ds:[esi]
  42935b:	outs   dx,BYTE PTR ds:[esi]
  42935c:	imul   sp,WORD PTR [edi+0x0],0x188
  429362:	inc    esi
  429363:	jb     0x4293ca
  429365:	gs push edx
  429367:	gs jae 0x4293d9
  42936a:	jne    0x4293de
  42936c:	arpl   WORD PTR [ebp+0x0],sp
  42936f:	add    BYTE PTR [eax+0x1],ah
  429372:	inc    esi
  429373:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42937a:	je     0x4293c2
  42937c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429384:	inc    edi
  429385:	gs je  0x4293ca
  429388:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42938f:	jo     0x4293f6
  429391:	push   edi
  429392:	add    BYTE PTR [eax],al
  429394:	fiadd  WORD PTR [esp+ebp*2]
  429397:	jae    0x42940d
  429399:	jb     0x429407
  42939b:	outs   dx,BYTE PTR gs:[esi]
  42939d:	push   edi
  42939e:	add    BYTE PTR [eax],al
  4293a0:	pop    ds
  4293a1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293a5:	popa   
  4293a6:	ins    BYTE PTR es:[edi],dx
  4293a7:	push   ebx
  4293a8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293af:	gs je  0x429405
  4293b2:	jns    0x429427
  4293b4:	je     0x42941b
  4293b6:	ins    DWORD PTR es:[edi],dx
  4293b7:	inc    esp
  4293b8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293bf:	jns    0x429402
  4293c1:	add    BYTE PTR [esi+0x74654701],ah
  4293c7:	inc    ebx
  4293c8:	outs   dx,DWORD PTR ds:[esi]
  4293c9:	ins    DWORD PTR es:[edi],dx
  4293ca:	jo     0x429441
  4293cc:	je     0x429433
  4293ce:	jb     0x42941e
  4293d0:	popa   
  4293d1:	ins    DWORD PTR es:[edi],dx
  4293d2:	gs push edi
  4293d4:	add    BYTE PTR [eax],al
  4293d6:	rol    BYTE PTR [eax],cl
  4293d8:	inc    ebx
  4293d9:	jb     0x429440
  4293db:	popa   
  4293dc:	je     0x429443
  4293de:	inc    esi
  4293df:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293e7:	outs   dx,BYTE PTR ds:[esi]
  4293e8:	addr16 inc ecx
  4293ea:	add    BYTE PTR [eax],al
  4293ec:	retf   0x4300
  4293ef:	jb     0x429456
  4293f1:	popa   
  4293f2:	je     0x429459
  4293f4:	inc    esp
  4293f5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293fc:	jns    0x429455
  4293fe:	add    BYTE PTR [eax],al
  429400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429401:	add    BYTE PTR [ebx+0x61],al
  429404:	outs   dx,BYTE PTR ds:[esi]
  429405:	arpl   WORD PTR [ebp+0x6c],sp
  429408:	push   edi
  429409:	popa   
  42940a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429412:	ins    DWORD PTR es:[edi],dx
  429413:	gs jb  0x429416
  429416:	add    al,0x2
  429418:	inc    edi
  429419:	gs je  0x429468
  42941c:	outs   dx,DWORD PTR ds:[esi]
  42941d:	arpl   WORD PTR [ecx+0x6c],sp
  429420:	gs dec ecx
  429422:	outs   dx,BYTE PTR ds:[esi]
  429423:	outs   dx,WORD PTR ds:[esi]
  429425:	inc    ecx
  429426:	add    BYTE PTR [eax],al
  429428:	xor    eax,0x766f4d03
  42942d:	gs inc esi
  42942f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429437:	gs je  0x42947d
  42943a:	outs   dx,DWORD PTR ds:[esi]
  42943b:	ins    DWORD PTR es:[edi],dx
  42943c:	ins    DWORD PTR es:[edi],dx
  42943d:	push   ebx
  42943e:	je     0x4294a1
  429440:	je     0x4294a7
  429442:	add    BYTE PTR [eax],al
  429444:	mov    ah,0x3
  429446:	push   edx
  429447:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429450:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429458:	ins    BYTE PTR es:[di],dx
  42945a:	gs dec edi
  42945c:	bound  ebp,QWORD PTR [edx+0x65]
  42945f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429463:	add    al,BYTE PTR [edi+0x65]
  429466:	je     0x4294bb
  429468:	jns    0x4294dd
  42946a:	je     0x4294d1
  42946c:	ins    DWORD PTR es:[edi],dx
  42946d:	push   esp
  42946e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429475:	jae    0x4294eb
  429477:	ins    DWORD PTR es:[edi],dx
  429478:	outs   dx,BYTE PTR gs:[esi]
  42947a:	je     0x42947c
  42947c:	add    al,0x1
  42947e:	inc    esp
  42947f:	gs ins BYTE PTR es:[edi],dx
  429481:	gs je  0x4294e9
  429484:	inc    esi
  429485:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42948d:	gs je  0x4294e3
  429490:	push   0x5074726f
  429495:	popa   
  429496:	je     0x429500
  429498:	dec    esi
  429499:	popa   
  42949a:	ins    DWORD PTR es:[edi],dx
  42949b:	gs inc ecx
  42949d:	add    BYTE PTR [edx],al
  42949f:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294a3:	gs je  0x42950b
  4294a6:	inc    ebx
  4294a7:	jb     0x429512
  4294a9:	je     0x429514
  4294ab:	arpl   WORD PTR [ecx+0x6c],sp
  4294ae:	push   ebx
  4294af:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294b4:	outs   dx,BYTE PTR ds:[esi]
  4294b5:	add    bl,ah
  4294b7:	add    BYTE PTR [ebx+0x72],al
  4294ba:	gs popa 
  4294bc:	je     0x429523
  4294be:	dec    esi
  4294bf:	popa   
  4294c0:	ins    DWORD PTR es:[edi],dx
  4294c1:	gs fs push eax
  4294c4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294cb:	add    cl,BYTE PTR [ecx+0x73]
  4294ce:	inc    edx
  4294cf:	popa   
  4294d0:	fs push edx
  4294d2:	gs popa 
  4294d4:	fs push eax
  4294d6:	je     0x42954a
  4294d8:	add    BYTE PTR [eax],al
  4294da:	jnp    0x4294de
  4294dc:	inc    edi
  4294dd:	gs je  0x429535
  4294e0:	jae    0x429547
  4294e2:	jb     0x429528
  4294e4:	gs popaw 
  4294e7:	jne    0x429555
  4294e9:	je     0x429537
  4294eb:	inc    ebx
  4294ec:	dec    ecx
  4294ed:	inc    esp
  4294ee:	add    BYTE PTR [eax],al
  4294f0:	inc    ebp
  4294f1:	add    al,BYTE PTR [edi+0x65]
  4294f4:	je     0x429546
  4294f6:	jb     0x429567
  4294f8:	arpl   WORD PTR [ecx+0x64],ax
  4294fb:	fs jb  0x429563
  4294fe:	jae    0x429573
  429500:	add    BYTE PTR [eax],al
  429502:	mov    BYTE PTR [ebx],0x52
  429505:	gs jae 0x42956d
  429508:	je     0x42954f
  42950a:	jbe    0x429571
  42950c:	outs   dx,BYTE PTR ds:[esi]
  42950d:	je     0x42950f
  42950f:	add    BYTE PTR [edx+0x656c4300],ch
  429515:	popa   
  429516:	jb     0x42955b
  429518:	outs   dx,DWORD PTR ds:[esi]
  429519:	ins    DWORD PTR es:[edi],dx
  42951a:	ins    DWORD PTR es:[edi],dx
  42951b:	inc    ebp
  42951c:	jb     0x429590
  42951e:	outs   dx,DWORD PTR ds:[esi]
  42951f:	jb     0x429521
  429521:	add    BYTE PTR [eax+0x61654802],bh
  429527:	jo     0x42957e
  429529:	outs   dx,BYTE PTR ds:[esi]
  42952a:	ins    BYTE PTR es:[edi],dx
  42952b:	outs   dx,DWORD PTR ds:[esi]
  42952c:	arpl   WORD PTR [ebx+0x0],bp
  42952f:	add    dh,ch
  429531:	add    edx,DWORD PTR [ebx+0x65]
  429534:	je     0x429579
  429536:	outs   dx,DWORD PTR ds:[esi]
  429537:	ins    DWORD PTR es:[edi],dx
  429538:	ins    DWORD PTR es:[edi],dx
  429539:	push   ebx
  42953a:	je     0x42959d
  42953c:	je     0x4295a3
  42953e:	add    BYTE PTR [eax],al
  429540:	out    dx,eax
  429541:	add    DWORD PTR [edi+0x65],eax
  429544:	je     0x42958c
  429546:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42954e:	bound  esi,QWORD PTR [ebp+0x74]
  429551:	gs jae 0x429595
  429554:	add    BYTE PTR [eax],al
  429556:	sub    al,0x1
  429558:	inc    ebp
  429559:	outs   dx,BYTE PTR ds:[esi]
  42955a:	jne    0x4295c9
  42955c:	push   ebx
  42955d:	jns    0x4295d2
  42955f:	je     0x4295c6
  429561:	ins    DWORD PTR es:[edi],dx
  429562:	dec    esp
  429563:	outs   dx,DWORD PTR ds:[esi]
  429564:	arpl   WORD PTR [ecx+0x6c],sp
  429567:	gs jae 0x4295ab
  42956a:	add    BYTE PTR [eax],al
  42956c:	sub    eax,0x74655304
  429571:	dec    esp
  429572:	outs   dx,DWORD PTR ds:[esi]
  429573:	arpl   WORD PTR [ecx+0x6c],sp
  429576:	push   esp
  429577:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42957e:	inc    ebp
  42957f:	outs   dx,BYTE PTR ds:[esi]
  429580:	jne    0x4295ef
  429582:	push   edx
  429583:	gs jae 0x4295f5
  429586:	jne    0x4295fa
  429588:	arpl   WORD PTR [ebp+0x4e],sp
  42958b:	popa   
  42958c:	ins    DWORD PTR es:[edi],dx
  42958d:	gs jae 0x4295e7
  429590:	add    BYTE PTR [eax],al
  429592:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  429599:	gs add BYTE PTR gs:[ebx],ah
  42959d:	add    al,0x53
  42959f:	gs je  0x4295e8
  4295a2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295aa:	gs jb  0x4295ad
  4295ad:	add    BYTE PTR [edi+0x1],ch
  4295b0:	inc    esi
  4295b1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295b8:	jne    0x42962c
  4295ba:	arpl   WORD PTR [ebp+0x41],sp
  4295bd:	add    BYTE PTR ds:0x6c654401,al
  4295c3:	gs je  0x42962b
  4295c6:	inc    esi
  4295c7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295cf:	gs je  0x429615
  4295d2:	outs   dx,DWORD PTR ds:[esi]
  4295d3:	ins    DWORD PTR es:[edi],dx
  4295d4:	jo     0x42964b
  4295d6:	je     0x42963d
  4295d8:	jb     0x429628
  4295da:	popa   
  4295db:	ins    DWORD PTR es:[edi],dx
  4295dc:	gs inc ebp
  4295de:	js     0x429621
  4295e0:	add    BYTE PTR [eax],al
  4295e2:	cmp    BYTE PTR [ebx],al
  4295e4:	dec    ebp
  4295e5:	outs   dx,DWORD PTR ds:[esi]
  4295e6:	jbe    0x42964d
  4295e8:	inc    esi
  4295e9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  4295f1:	dec    esi
  4295f2:	inc    ebp
  4295f3:	dec    esp
  4295f4:	xor    esi,DWORD PTR [edx]
  4295f6:	cs fs ins BYTE PTR es:[edi],dx
  4295f9:	ins    BYTE PTR es:[edi],dx
  4295fa:	add    BYTE PTR [eax],al
  4295fc:	add    BYTE PTR [eax],al
  4295fe:	add    BYTE PTR [eax],al
  429600:	data16 and al,BYTE PTR [edx]
	...
  42961f:	add    BYTE PTR [ebx],bh
  429621:	xchg   esi,eax
  429622:	add    al,BYTE PTR [eax]
	...
  429630:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429638:	outs   dx,DWORD PTR ds:[esi]
  429639:	ins    DWORD PTR es:[edi],dx
  42963a:	add    BYTE PTR [ebx+0x72],al
  42963d:	je     0x429693
  42963f:	push   0x64616572
  429644:	inc    ebp
  429645:	js     0x429688
  429647:	inc    eax
  429648:	cmp    BYTE PTR [eax],al
