
23897dc165060d1dd48a0752bd1129eef22a400f58a08401372a2fce9e7e06d6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	xor    DWORD PTR [ebp+0x2],ecx
  411003:	and    BYTE PTR [eax+ebp*1],0xd0
  411007:	adc    BYTE PTR [ecx],dl
  411009:	and    al,BYTE PTR [edx]
  41100b:	and    BYTE PTR [eax+0x201040],al
  411011:	adc    BYTE PTR [eax],al
  411013:	les    eax,FWORD PTR [ecx-0x7b]
  411016:	and    DWORD PTR [esi],eax
  411018:	arpl   WORD PTR [eax+ebx*1-0x1ffff5fd],cx
  41101f:	push   edx
  411020:	or     BYTE PTR [ecx+0x1c00189],dl
  411026:	push   es
  411027:	add    BYTE PTR [eax],cl
  411029:	add    al,0x1
  41102b:	rol    al,1
  41102d:	or     BYTE PTR [edx+0x10],al
  411030:	add    BYTE PTR [eax+eax*2],dl
  411033:	push   es
  411034:	test   DWORD PTR [eax+0x46],eax
  411037:	adc    BYTE PTR [eax],dh
  411039:	loopne 0x411045
  41103b:	mov    cs,WORD PTR [ecx]
  41103d:	(bad)  
  41103e:	adc    al,BYTE PTR [eax]
  411040:	add    al,0xa3
  411042:	and    dl,BYTE PTR [eax]
  411044:	xor    DWORD PTR [eax],edx
  411046:	or     al,0x1
  411048:	push   esp
  411049:	enter  0x8001,0xa0
  41104d:	inc    ecx
  41104e:	add    BYTE PTR [eax+0x2150804],dl
  411054:	inc    eax
  411055:	or     BYTE PTR [eax+0x3c],0x30
  411059:	add    ah,BYTE PTR [eax+0x1]
  41105c:	or     al,0x92
  41105f:	mov    WORD PTR [esi+eiz*1],es
  411062:	xor    eax,0xd0010000
  411067:	add    ah,dl
  411069:	dec    eax
  41106a:	or     DWORD PTR [eax+edx*1+0x42],edx
  41106e:	mov    al,ds:0x1016a886
  411073:	xor    al,dl
  411075:	sub    dl,ah
  411077:	add    BYTE PTR [eax+0x6b169082],0xd
  41107e:	mov    es,WORD PTR [eax]
  411080:	add    DWORD PTR [esi],ebp
  411082:	add    BYTE PTR [ebp+0x34440000],al
  411088:	ror    BYTE PTR [ecx+0x24],0x0
  41108c:	shl    BYTE PTR [edx],cl
  41108e:	add    BYTE PTR [eax],al
  411090:	add    eax,0x20f2a0
  411095:	pusha  
  411096:	push   eax
  411097:	or     BYTE PTR [ebx],al
  411099:	adc    BYTE PTR [ecx],0x8
  41109c:	test   al,0x1
  41109e:	add    al,BYTE PTR [eax+0x21]
  4110a1:	add    BYTE PTR [eax+0x50],dl
  4110a4:	cmp    dl,BYTE PTR [eax]
  4110a6:	add    al,0x0
  4110a8:	and    al,0x32
  4110aa:	sbb    DWORD PTR [eax],ebx
  4110ac:	ret    0x424
  4110af:	mov    BYTE PTR [edx+0x14320044],al
  4110b5:	push   ss
  4110b6:	inc    esi
  4110b7:	add    al,0x0
  4110b9:	inc    eax
  4110ba:	inc    esp
  4110bb:	add    BYTE PTR [edi],bl
  4110bd:	add    al,0x0
  4110bf:	adc    BYTE PTR [ecx],al
  4110c1:	add    BYTE PTR [ecx+0x64206124],cl
  4110c7:	or     BYTE PTR [eax*1+0x3301884],al
  4110ce:	pop    es
  4110cf:	xchg   BYTE PTR [eax],al
  4110d1:	add    BYTE PTR [edx],cl
  4110d3:	inc    eax
  4110d4:	jo     0x411137
  4110d6:	add    esi,0x2c01050a
  4110dc:	add    al,0x32
  4110de:	rol    BYTE PTR [edi+0x4],0x11
  4110e2:	xor    al,0x42
  4110e4:	pop    es
  4110e5:	cwde   
  4110e6:	add    BYTE PTR [edx+0xc],ch
  4110e9:	add    esi,DWORD PTR [ecx]
  4110eb:	and    cl,dl
  4110ed:	add    DWORD PTR [edx+0x10],edx
  4110f0:	or     DWORD PTR [edx+0x2],eax
  4110f3:	add    BYTE PTR [edx+0x1004a50],al
  4110f9:	add    al,0x11
  4110fb:	inc    esp
  4110fc:	ret    
  4110fd:	or     al,0x5
  4110ff:	add    al,0x0
  411101:	and    ch,BYTE PTR [ebp+ebp*4+0x28d82002]
  411108:	or     DWORD PTR [eax],ebx
  41110a:	push   es
  41110b:	jle    0x4110aa
  41110d:	or     BYTE PTR [ebp+eiz*1+0x508a465],al
  411114:	inc    esp
  411115:	or     DWORD PTR ds:0xb1214040,ecx
  41111b:	or     ecx,edx
  41111d:	add    eax,0x20a18f91
  411122:	add    cl,BYTE PTR [ebp+0x5a02304]
  411128:	in     eax,0x93
  41112a:	test   al,0x0
  41112c:	add    al,0x11
  41112e:	or     edx,DWORD PTR [eax]
  411130:	add    DWORD PTR [ecx+0x204500e8],eax
  411136:	add    ch,ch
  411138:	and    edx,DWORD PTR [eax+0x31030000]
  41113e:	inc    eax
  41113f:	add    DWORD PTR [ecx],0x802b2202
  411145:	test   al,0xb
  411147:	push   eax
  411148:	and    eax,0x411c302
  41114d:	sbb    al,BYTE PTR [ecx-0x5bf3e800]
  411153:	inc    eax
  411154:	or     DWORD PTR [ecx],0x9461c010
  41115a:	add    al,0x24
  41115c:	dec    edi
  41115d:	adc    cl,BYTE PTR [ecx+edx*2-0x3f]
  411161:	adc    al,0x91
  411163:	or     BYTE PTR [eax*1+0x320c1084],dh
  41116a:	add    al,0x81
  41116c:	inc    esp
  41116d:	js     0x411130
  41116f:	pushf  
  411170:	xchg   esp,eax
  411171:	mov    fs,WORD PTR [eax]
  411173:	mov    BYTE PTR [edx],ah
  411175:	add    BYTE PTR [eax],ah
  411177:	add    BYTE PTR [ecx+0x48],ah
  41117a:	test   BYTE PTR [edx],dh
  41117c:	ror    BYTE PTR [eax+0x21100002],0xa8
  411183:	or     DWORD PTR [eax],0x80002400
  411189:	mov    al,ds:0x93a81166
  41118e:	sbb    BYTE PTR [eax],al
  411190:	or     BYTE PTR [esi],al
  411192:	add    DWORD PTR [ebx],eax
  411194:	add    BYTE PTR [eax-0x7f5fbff0],0x21
  41119b:	jmp    0x8602:0x20001380
  4111a2:	nop
  4111a3:	add    eax,0x10d2218
  4111a8:	sbb    BYTE PTR [edi],al
  4111aa:	jo     0x4111ad
  4111ac:	add    BYTE PTR [ebx],al
  4111ae:	add    DWORD PTR [edx+0x21],edx
  4111b1:	sbb    DWORD PTR [eax+0x42],eax
  4111b4:	sub    al,0x2c
  4111b6:	add    DWORD PTR [eax],0x8c028284
  4111bc:	add    BYTE PTR [edi],0x20
  4111bf:	add    al,BYTE PTR [ecx]
  4111c1:	add    BYTE PTR [edx+ecx*1+0x5112130],0xc0
  4111c9:	and    BYTE PTR [eax+eiz*1],al
  4111cc:	adc    BYTE PTR [eax-0x50],0x0
  4111d0:	inc    eax
  4111d1:	adc    al,BYTE PTR [eax]
  4111d3:	add    al,0xb0
  4111d5:	inc    ecx
  4111d6:	add    BYTE PTR [eax+0x400009],bl
  4111dc:	add    BYTE PTR [esi],al
  4111de:	inc    esp
  4111df:	or     DWORD PTR [esp+eax*1],eax
  4111e2:	or     BYTE PTR [eax],al
  4111e4:	xor    BYTE PTR [eax],ah
  4111e6:	add    DWORD PTR [ebx],eax
  4111e8:	test   BYTE PTR [eax],dl
  4111ea:	dec    esp
  4111eb:	les    esi,FWORD PTR [eax+eiz*1]
  4111ee:	add    BYTE PTR [eax+0x2062088c],bl
  4111f4:	mov    ds:0x10425809,eax
  4111f9:	inc    edx
  4111fa:	push   0x10080404
  4111ff:	lock add DWORD PTR [edx],edx
  411202:	add    BYTE PTR [ecx],al
  411204:	or     BYTE PTR [eax],al
  411206:	nop
  411207:	nop
  411208:	inc    eax
  411209:	add    al,0x40
  41120b:	add    BYTE PTR [eax],cl
  41120d:	sbb    BYTE PTR [eax],dl
  41120f:	and    cl,BYTE PTR [eax+0x44200842]
  411215:	add    BYTE PTR [eax+0x40014495],dl
  41121b:	and    al,0x1
  41121d:	or     BYTE PTR [ebx+0x0],al
  411220:	or     DWORD PTR [eax+0x0],eax
  411223:	add    esp,0x8c18608
  411229:	mov    BYTE PTR [eax],al
  41122b:	inc    eax
  41122c:	add    al,0x26
  41122e:	sub    BYTE PTR [eax],dh
  411230:	push   ecx
  411231:	xor    DWORD PTR ds:[ebx],0x49b812
  411238:	or     DWORD PTR [eax],edx
  41123a:	stos   BYTE PTR es:[edi],al
  41123b:	inc    ebx
  41123c:	mov    al,cs:0x2412c92
  411242:	adc    BYTE PTR [ebp-0x80],al
  411245:	and    al,0xcc
  411247:	inc    eax
  411248:	shl    DWORD PTR [edx-0x73f7bcb0],1
  41124e:	add    BYTE PTR [esi],al
  411250:	xor    BYTE PTR [eax-0x80],ch
  411253:	push   es
  411254:	add    al,BYTE PTR [ecx]
  411256:	or     ecx,DWORD PTR [edx]
  411258:	inc    eax
  411259:	fiadd  DWORD PTR [eax+0x22]
  41125c:	add    al,BYTE PTR [eax+0x1014145]
  411262:	adc    al,0x24
  411264:	or     al,0x20
  411266:	or     BYTE PTR [eax+eax*1],al
  411269:	and    BYTE PTR [ecx+edx*4],al
  41126c:	inc    ecx
  41126d:	push   edx
  41126e:	and    al,dl
  411270:	inc    esi
  411271:	sbb    BYTE PTR [eax],cl
  411273:	or     al,0x94
  411275:	add    BYTE PTR [eax+eax*4],al
  411278:	inc    eax
  411279:	dec    eax
  41127a:	fwait
  41127b:	xchg   DWORD PTR [eax+ebx*1],edx
  41127e:	sub    BYTE PTR [ecx-0x28],dl
  411281:	nop
  411282:	add    eax,0x2930e010
  411287:	mov    ah,0x40
  411289:	add    BYTE PTR [esi],0x1
  41128c:	lock cmp BYTE PTR [eax],bl
  41128f:	inc    esp
  411290:	add    DWORD PTR [eax+0x4822002],esp
  411296:	add    DWORD PTR [eax],eax
  411298:	sbb    al,0x88
  41129a:	or     DWORD PTR [eax-0x66],eax
  41129d:	add    BYTE PTR [eax+0x68],al
  4112a0:	add    BYTE PTR [eiz*2+0x603f4800],0x6
  4112a8:	fadd   DWORD PTR [eax+0x1038200e]
  4112ae:	add    BYTE PTR [ecx+0x800404],0x48
  4112b5:	and    BYTE PTR [edx+0x25],ah
  4112b8:	pop    es
  4112b9:	sub    BYTE PTR [ebx+0x2b64027],al
  4112bf:	mov    dl,BYTE PTR [ebx]
  4112c1:	inc    edi
  4112c2:	or     al,0x32
  4112c4:	outs   dx,BYTE PTR ds:[esi]
  4112c5:	add    BYTE PTR [ebx],0x25
  4112c8:	or     DWORD PTR [edi],esp
  4112ca:	shl    BYTE PTR [eax-0x7bfff600],0x2
  4112d1:	and    esi,edx
  4112d3:	sbb    al,0x83
  4112d5:	add    eax,0x95530508
  4112da:	rol    ah,0x0
  4112dd:	add    al,BYTE PTR [eax]
  4112df:	or     al,BYTE PTR ds:0x6c41c000
  4112e5:	adc    al,0xa
  4112e7:	add    BYTE PTR [edx+0x40c209cc],0x4
  4112ee:	add    al,0x60
  4112f0:	xor    BYTE PTR [edx],dl
  4112f2:	add    cl,BYTE PTR [ecx]
  4112f4:	or     al,BYTE PTR [eax]
  4112f6:	add    dl,BYTE PTR [edx+eax*1+0x48000410]
  4112fd:	rol    DWORD PTR [eax-0x1b29e720],0x80
  411304:	pusha  
  411305:	or     dl,BYTE PTR [esi-0x80]
  411308:	add    DWORD PTR [edx],0x62420404
  41130e:	add    BYTE PTR [eax+0x51080054],al
  411314:	and    BYTE PTR [edx-0x80],cl
  411317:	test   DWORD PTR [eax],esp
  411319:	add    BYTE PTR [eax],0xa2
  41131c:	add    BYTE PTR [eax],al
  41131e:	add    al,0x86
  411320:	add    DWORD PTR ss:[ecx],eax
  411323:	add    al,0x41
  411325:	or     BYTE PTR [eax+ebp*4+0x0],dl
  411329:	add    BYTE PTR [eax],al
  41132b:	mov    ds:0x288192b6,al
  411330:	or     BYTE PTR [ecx],ch
  411332:	add    BYTE PTR [ecx],al
  411334:	inc    ecx
  411335:	or     BYTE PTR [ecx],ah
  411337:	or     al,0x20
  411339:	add    BYTE PTR [ecx],0x80
  41133c:	add    DWORD PTR [ebx],edx
  41133e:	add    eax,0x80250181
  411343:	sbb    ah,BYTE PTR [eax]
  411345:	inc    edx
  411346:	or     BYTE PTR [edx],dh
  411348:	push   eax
  411349:	add    eax,0x40c5e1a0
  41134e:	or     al,0x4
  411350:	add    eax,DWORD PTR [eax+eax*1+0x14011174]
  411357:	push   es
  411358:	enter  0x2001,0x2
  41135c:	inc    ecx
  41135d:	adc    eax,0x2408a020
  411362:	dec    eax
  411363:	or     DWORD PTR [eax],eax
  411365:	add    BYTE PTR [esi],al
  411367:	or     al,BYTE PTR [eax]
  411369:	xchg   edx,eax
  41136a:	xchg   edi,eax
  41136b:	mov    ds:0x2160708a,al
  411370:	inc    ebp
  411371:	add    al,0xaa
  411373:	inc    edx
  411374:	mov    eax,ds:0xd500206
  411379:	add    DWORD PTR [esp+eax*1],ecx
  41137c:	add    DWORD PTR [ecx],eax
  41137e:	fs inc esp
  411380:	loop   0x41138e
  411382:	adc    BYTE PTR [eax+0x72400064],cl
  411388:	test   BYTE PTR [edx+0x450c3148],al
  41138e:	add    BYTE PTR [eax+0x0],al
  411391:	dec    eax
  411392:	test   BYTE PTR [eax+0x0],ah
  411395:	and    DWORD PTR [eax+eax*1+0x4a],ecx
  411399:	or     BYTE PTR [eax],dl
  41139b:	pusha  
  41139c:	retf   
  41139d:	add    al,BYTE PTR [esi+edx*1]
  4113a0:	push   ecx
  4113a1:	or     DWORD PTR [eax],ecx
  4113a3:	add    al,0x30
  4113a5:	test   al,0x2
  4113a7:	add    DWORD PTR [ecx-0x7ddefeeb],ebp
  4113ad:	adc    DWORD PTR [esp],ecx
  4113b0:	inc    eax
  4113b1:	enter  0x8c40,0x8
  4113b5:	adc    DWORD PTR ds:0x8800213,0x7d8370c
  4113bf:	jns    0x411362
  4113c1:	adc    BYTE PTR [edx-0x756f75fe],dl
  4113c7:	adc    DWORD PTR [esi-0x7bd77d20],0x7e
  4113ce:	and    BYTE PTR [edx],al
  4113d0:	sbb    BYTE PTR [ebx+edx*2+0x0],0x71
  4113d5:	add    BYTE PTR [esi],al
  4113d7:	pop    ds
  4113d8:	or     DWORD PTR [eax+ebp*1],eax
  4113db:	and    DWORD PTR [eax+0xc08cc20],eax
  4113e1:	inc    eax
  4113e2:	imul   eax,DWORD PTR [eax],0xc1080050
  4113e8:	add    al,BYTE PTR [eax+ecx*1]
  4113eb:	add    al,0xc0
  4113ed:	add    BYTE PTR [ecx],ah
  4113ef:	or     BYTE PTR [eax+0x1201882a],al
  4113f5:	mov    DWORD PTR [eax],eax
  4113f7:	adc    BYTE PTR ds:0x202c10c,0x41
  4113fe:	add    eax,DWORD PTR [ebx+edx*4+0x42]
  411402:	pop    esp
  411403:	push   es
  411404:	add    al,0x10
  411406:	les    edx,FWORD PTR [eax+0x0]
  411409:	inc    ebp
  41140a:	adc    cl,BYTE PTR [eax+0x180c800]
  411410:	sub    dh,BYTE PTR [eax+0x51840000]
  411416:	inc    ecx
  411417:	sbb    BYTE PTR [eax],al
  411419:	add    DWORD PTR [edx],esi
  41141b:	and    cl,BYTE PTR [ecx]
  41141d:	add    BYTE PTR [ecx],al
  41141f:	sbb    BYTE PTR [edx+0x6a],cl
  411422:	add    dl,dh
  411424:	add    ah,BYTE PTR [edx]
  411426:	add    BYTE PTR [edx+eax*1+0x2],al
  41142a:	adc    eax,0x8502003a
  41142f:	cmp    BYTE PTR [ebp+0x10],ah
  411432:	add    al,0x24
  411434:	add    DWORD PTR [eax],ebp
  411436:	adc    al,0x20
  411438:	add    BYTE PTR [ecx+0xc],ah
  41143b:	sbb    BYTE PTR [eax-0x78],ah
  41143e:	mov    al,ds:0x102000f
  411443:	add    BYTE PTR [edx],dl
  411445:	mov    edi,edx
  411447:	or     DWORD PTR [esi+0x48],eax
  41144a:	and    DWORD PTR [edx],edx
  41144c:	xchg   ebp,eax
  41144d:	mov    al,ds:0x3a400114
  411452:	or     BYTE PTR [ecx],dl
  411454:	add    al,0x80
  411456:	adc    BYTE PTR [eax],al
  411458:	and    cl,BYTE PTR [eax]
  41145a:	add    al,0xe0
  41145c:	or     BYTE PTR [ecx],al
  41145e:	inc    ebx
  41145f:	or     BYTE PTR [edx+eiz*4],cl
  411462:	add    dh,dl
  411464:	or     cl,BYTE PTR [ebx]
  411466:	adc    al,0x4
  411468:	inc    esp
  411469:	inc    eax
  41146a:	or     dl,bl
  41146c:	popa   
  41146d:	test   DWORD PTR [esi],eax
  41146f:	nop
  411470:	push   es
  411471:	imul   eax,DWORD PTR [ecx],0x0
  411474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411475:	mov    al,ds:0x14420c
  41147a:	and    BYTE PTR [esi],dl
  41147c:	and    ah,BYTE PTR [ebp+0x8]
  41147f:	add    al,0xc
  411481:	dec    edx
  411482:	adc    al,BYTE PTR [ecx+eax*1]
  411485:	ret    
  411486:	adc    BYTE PTR ds:0x45604341,0x10
  41148d:	add    al,0x38
  41148f:	or     al,0x82
  411491:	or     al,BYTE PTR [eax]
  411493:	adc    BYTE PTR [edx],bl
  411495:	inc    eax
  411496:	xchg   esp,eax
  411497:	add    cl,BYTE PTR [esi+eax*2]
  41149a:	and    BYTE PTR ds:0x55004225,al
  4114a0:	xor    cl,BYTE PTR [eax+ebp*4]
  4114a3:	adc    BYTE PTR [eax],ah
  4114a5:	add    al,0x87
  4114a7:	shl    al,1
  4114a9:	sub    ah,BYTE PTR fs:[eax]
  4114ac:	and    dl,BYTE PTR [eax]
  4114ae:	add    al,al
  4114b0:	adc    eax,DWORD PTR fs:[eax]
  4114b3:	add    BYTE PTR [edx],dh
  4114b5:	push   eax
  4114b6:	jge    0x4114fa
  4114b8:	shl    DWORD PTR [edx],cl
  4114ba:	add    BYTE PTR [ecx+eax*1],al
  4114bd:	add    DWORD PTR [ecx+0xa],eax
  4114c0:	rcl    BYTE PTR [eax],0x26
  4114c3:	inc    eax
  4114c4:	cmp    ah,BYTE PTR [edx]
  4114c6:	add    al,0x20
  4114c8:	add    BYTE PTR [eax+0x5a],dl
  4114cb:	adc    DWORD PTR [edx+0x8],edx
  4114ce:	cmp    BYTE PTR [eax-0x1c],dh
  4114d1:	and    BYTE PTR es:[eax+eiz*2],cl
  4114d5:	and    BYTE PTR [ebx+0x2612602],ah
  4114db:	add    eax,0x890a113
  4114e0:	jmp    0x11e45769
  4114e5:	inc    esp
  4114e6:	push   esp
  4114e7:	inc    ebx
  4114e8:	or     DWORD PTR [eax+0x3200a695],0xb2101003
  4114f2:	or     BYTE PTR [ebx],al
  4114f4:	dec    edx
  4114f5:	add    al,BYTE PTR [esi]
  4114f7:	add    eax,DWORD PTR [ecx+eax*1+0x1416]
  4114fe:	mov    eax,ds:0x80861221
  411503:	dec    esp
  411504:	adc    BYTE PTR ds:0x805401c3,al
  41150a:	add    BYTE PTR ds:0x86440200,cl
  411510:	xchg   esp,eax
  411511:	bound  eax,QWORD PTR [eax]
  411513:	and    al,BYTE PTR [ecx+eax*1+0x10e00038]
  41151a:	adc    DWORD PTR [eax],eax
  41151c:	test   DWORD PTR [eax+ebp*8],eax
  41151f:	sbb    BYTE PTR [eax],ah
  411521:	shr    BYTE PTR [eax+ebx*1],0x1
  411525:	mov    bl,0x25
  411527:	or     BYTE PTR [edx],al
  411529:	add    DWORD PTR [eax],eax
  41152b:	or     BYTE PTR [edx-0x5fbbfff4],cl
  411531:	add    BYTE PTR fs:[eax],al
  411534:	inc    eax
  411535:	stos   DWORD PTR es:[edi],eax
  411536:	adc    DWORD PTR [eax+eax*1],esi
  411539:	xchg   esp,eax
  41153a:	jmp    0x1001:0xa4582510
  411541:	and    al,0x0
  411543:	and    BYTE PTR [eax*1+0x1416a14d],al
  41154a:	and    DWORD PTR [ecx],edx
  41154c:	adc    DWORD PTR [eax+0x18618e0],eax
  411552:	inc    ecx
  411553:	add    al,0x6b
  411555:	and    DWORD PTR [ebx+eax*1],ebp
  411558:	add    BYTE PTR [ecx],al
  41155a:	push   es
  41155b:	push   ds
  41155c:	add    al,0x2
  41155e:	popa   
  41155f:	adc    DWORD PTR [eax],edx
  411561:	add    BYTE PTR [ecx+0x946a0ec],al
  411567:	add    al,0x48
  411569:	and    DWORD PTR [eax+eax*2+0x4006a880],eax
  411570:	and    DWORD PTR [esi-0x5f2bbd6f],0x400622
  41157a:	adc    BYTE PTR [eax+0x8064000],al
  411580:	cmp    al,0x2
  411582:	or     edx,eax
  411584:	xor    BYTE PTR [eax],0x82
  411587:	or     al,0x52
  411589:	cmp    al,0x3
  41158b:	and    BYTE PTR [eax+0x2060000e],ah
  411591:	test   BYTE PTR [edx],dl
  411593:	add    al,0x12
  411595:	adc    BYTE PTR [eax-0x57],cl
  411598:	add    BYTE PTR [ecx+0x5b2e208],al
  41159e:	and    BYTE PTR [eax+0x80a0084],cl
  4115a4:	or     BYTE PTR es:[eax],dl
  4115a7:	add    BYTE PTR [edx+0x80a04],al
  4115ad:	adc    DWORD PTR [eax+0x8205705],eax
  4115b3:	or     eax,0x88888b00
  4115b8:	test   al,al
  4115ba:	add    DWORD PTR [ecx],eax
  4115bc:	add    DWORD PTR [eax],edx
  4115be:	add    dl,BYTE PTR ds:0x38300800
  4115c4:	push   es
  4115c5:	add    BYTE PTR [ecx],bl
  4115c7:	add    BYTE PTR [eax],0x31
  4115ca:	mov    BYTE PTR [ecx],0x8
  4115cd:	and    al,BYTE PTR [ecx]
  4115cf:	add    al,0x3
  4115d1:	inc    eax
  4115d2:	adc    al,0x1a
  4115d4:	add    BYTE PTR [eax+eax*1],dh
  4115d7:	add    DWORD PTR [eax+0x860a0c],esp
  4115dd:	adc    BYTE PTR [eax+0x10],al
  4115e0:	and    al,0x10
  4115e2:	or     eax,edx
  4115e4:	ret    0x600
  4115e7:	mov    al,0x8
  4115e9:	add    BYTE PTR [ebx+0x6007000c],0x40
  4115f0:	pop    ss
  4115f1:	adc    eax,0x69903a00
  4115f6:	add    al,0x1a
  4115f8:	add    DWORD PTR [edx+eax*2+0x0],esp
  4115fc:	test   BYTE PTR [esi+edx*4-0x7c],ah
  411600:	add    DWORD PTR [edx+0x2],ecx
  411603:	or     DWORD PTR [ecx+edx*2],0xffffff85
  411607:	add    al,0x9c
  411609:	les    ebx,FWORD PTR [esp+eax*2+0x4082514]
  411610:	and    al,0x4
  411612:	dec    esp
  411613:	and    DWORD PTR [eax],esp
  411615:	or     al,BYTE PTR [eax+0x58]
  411618:	or     eax,DWORD PTR [esi]
  41161a:	dec    esp
  41161b:	adc    eax,0x64c0002d
  411620:	adc    al,BYTE PTR [ecx]
  411622:	and    al,0x44
  411624:	adc    BYTE PTR [eax],al
  411626:	or     BYTE PTR [edx],al
  411628:	and    bl,BYTE PTR [ebx+eax*4]
  41162b:	add    DWORD PTR [ecx-0x337dafe0],eax
  411631:	rol    BYTE PTR [ebx],0xc9
  411634:	or     BYTE PTR [ecx],ah
  411636:	add    BYTE PTR [edx+0x40],al
  411639:	or     DWORD PTR ds:0x9c201016,eax
  41163f:	test   BYTE PTR [eax+0x1086651c],ch
  411645:	cwde   
  411646:	add    dl,dl
  411648:	inc    esp
  411649:	push   ss
  41164a:	push   ss
  41164b:	inc    ebx
  41164c:	add    dl,BYTE PTR [ebx]
  41164e:	add    BYTE PTR [eax],al
  411650:	xor    DWORD PTR [eax],eax
  411652:	test   eax,0x24102813
  411657:	adc    BYTE PTR [ecx-0x6b72fe3f],al
  41165d:	test   BYTE PTR [edx+0x43],cl
  411660:	xor    al,0x8
  411662:	fmul   DWORD PTR [eax-0x56feff98]
  411668:	mov    eax,ds:0x8203910e
  41166d:	adc    BYTE PTR [edx+0x10],al
  411670:	mov    DWORD PTR [ecx],ecx
  411672:	add    DWORD PTR [ecx+edx*4],eax
  411675:	add    DWORD PTR ds:0x1224a001,0x404284
  41167f:	pusha  
  411680:	add    BYTE PTR [ecx],dl
  411682:	add    eax,0x72a11844
  411687:	adc    al,BYTE PTR [eax+edi*4+0x4]
  41168b:	nop
  41168c:	and    al,0x1
  41168e:	out    dx,al
  41168f:	ret    0xb103
  411692:	arpl   WORD PTR [edx],di
  411694:	inc    eax
  411695:	add    DWORD PTR [eax],eax
  411697:	adc    BYTE PTR [ecx+0x8],al
  41169a:	add    eax,0x10d82810
  41169f:	add    DWORD PTR [edi],0x48
  4116a2:	mov    eax,DWORD PTR es:[ebp+0x40]
  4116a6:	add    al,0x0
  4116a8:	or     al,0xc
  4116aa:	adc    bl,ah
  4116ac:	inc    esp
  4116ad:	add    BYTE PTR [edx],ah
  4116af:	sub    DWORD PTR [edi-0x5f],eax
  4116b2:	push   edx
  4116b3:	add    BYTE PTR [ecx],ah
  4116b5:	add    BYTE PTR [ebx+0x1],al
  4116b8:	sbb    BYTE PTR [ebp+0x21a8b0],al
  4116be:	inc    ecx
  4116bf:	add    BYTE PTR [ecx],0x48
  4116c2:	rol    BYTE PTR [esp+ecx*1],cl
  4116c5:	mov    BYTE PTR [ecx],al
  4116c7:	inc    eax
  4116c8:	push   ecx
  4116c9:	mov    al,0x0
  4116cb:	inc    eax
  4116cc:	adc    BYTE PTR [edx],ch
  4116ce:	bound  eax,QWORD PTR [ebp+0x10]
  4116d1:	mov    al,ds:0xa059061
  4116d6:	xor    DWORD PTR [eax],ebp
  4116d8:	call   0x214:0x2b0c403
  4116df:	and    ah,BYTE PTR [eax+0x50180048]
  4116e5:	mov    BYTE PTR [eax+eiz*1+0x44],al
  4116e9:	mov    ds:0x4009c,eax
  4116ee:	or     ebx,DWORD PTR [ecx-0x59bfdb78]
  4116f4:	mov    ds:0x181d6018,al
  4116f9:	add    al,0x8
  4116fb:	add    BYTE PTR [eax+0x13002020],0x3
  411702:	mov    BYTE PTR [ecx+0x44280284],dl
  411708:	add    ebx,DWORD PTR es:[ebx+eax*4]
  41170c:	rol    BYTE PTR [ebx-0x3e77bdec],0x82
  411713:	adc    BYTE PTR [edx],ah
  411715:	mov    ah,BYTE PTR [eax]
  411717:	inc    esp
  411718:	or     BYTE PTR [eax-0x67],ah
  41171b:	adc    BYTE PTR [eax],al
  41171d:	cmp    DWORD PTR [ecx],ebx
  41171f:	stos   BYTE PTR es:[edi],al
  411720:	add    al,0x2
  411722:	test   DWORD PTR [esi],eax
  411724:	or     BYTE PTR [eax-0x3b9bd7fd],ah
  41172a:	and    eax,DWORD PTR [ecx]
  41172c:	inc    eax
  41172d:	rol    DWORD PTR [edx],1
  41172f:	mov    BYTE PTR [eax+eax*4+0x980880a],al
  411736:	inc    eax
  411737:	and    BYTE PTR [ebx],cl
  411739:	inc    ecx
  41173a:	add    BYTE PTR [eax],cl
  41173c:	add    BYTE PTR [esi-0x2efb9ffc],dl
  411742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411743:	sub    BYTE PTR [eax],ch
  411745:	add    BYTE PTR [esi],ah
  411747:	and    DWORD PTR [eax-0x7bbf0f56],ebp
  41174d:	and    eax,0x2101b31
  411752:	or     al,BYTE PTR [eax]
  411754:	add    BYTE PTR [esi],dl
  411756:	int    0x28
  411758:	add    BYTE PTR [eax],cl
  41175a:	add    BYTE PTR [eax+ecx*1],al
  41175d:	push   es
  41175e:	add    BYTE PTR [esp+ecx*1],cl
  411761:	mov    BYTE PTR [ecx],al
  411763:	sbb    al,0x31
  411765:	or     al,BYTE PTR [edx]
  411767:	add    BYTE PTR [ecx+eax*4+0x100420],al
  41176e:	test   DWORD PTR [eax+0x10c02],eax
  411774:	(bad)  
  411775:	cmp    BYTE PTR [ecx],0xd2
  411778:	shl    BYTE PTR ds:0x3872c565,0x40
  41177f:	add    DWORD PTR [edx-0x5ff9fdba],edx
  411785:	xor    al,BYTE PTR [ecx]
  411787:	push   edx
  411788:	add    ah,BYTE PTR [eax+eiz*8]
  41178b:	test   al,0xa2
  41178d:	inc    ebx
  41178e:	and    ecx,DWORD PTR [eax]
  411790:	fmul   QWORD PTR [eax+0x12]
  411793:	inc    ebp
  411794:	add    al,0x24
  411796:	add    eax,DWORD PTR [edx+0x1b276c8]
  41179c:	adc    BYTE PTR [eax+ebx*1],bh
  41179f:	xor    ah,al
  4117a1:	add    BYTE PTR [eax+0x12],ch
  4117a4:	inc    esi
  4117a5:	mov    al,ds:0x81840644
  4117aa:	ret    0x24c0
  4117ad:	inc    ecx
  4117ae:	and    al,0x40
  4117b0:	mov    al,ds:0xb2008471
  4117b5:	push   ebx
  4117b6:	add    DWORD PTR [eax],edx
  4117b8:	mov    al,ds:0xd5578244
  4117bd:	add    dl,al
  4117bf:	add    BYTE PTR [edx+0x2620c608],cl
  4117c5:	popa   
  4117c6:	and    al,0x0
  4117c8:	ret    0x431
  4117cb:	cmp    BYTE PTR [edx+eax*2+0x15ff2170],ah
  4117d2:	mov    bl,ch
  4117d4:	inc    esp
  4117d5:	add    BYTE PTR [esi],cl
  4117d7:	pusha  
  4117d8:	inc    ecx
  4117d9:	or     al,BYTE PTR [edx+0x1040494]
  4117df:	add    ah,BYTE PTR [edx]
  4117e1:	add    al,0x80
  4117e3:	call   0x80:0x61161200
  4117ea:	and    al,0x50
  4117ec:	xor    al,BYTE PTR [eax]
  4117ee:	adc    eax,0x2100050
  4117f3:	add    BYTE PTR [eax],dl
  4117f5:	add    DWORD PTR [eax+0x801aac8],ecx
  4117fb:	add    BYTE PTR [edx],cl
  4117fd:	adc    BYTE PTR [ecx+0x1a],dh
  411800:	enter  0xc489,0x88
  411804:	or     BYTE PTR [eax+0x9b0e0f2],0x60
  41180b:	and    BYTE PTR [eax],dl
  41180d:	nop
  41180e:	inc    eax
  41180f:	gs xchg edx,eax
  411811:	xor    BYTE PTR [ecx+0x41],al
  411814:	and    BYTE PTR [eax+0x59880820],cl
  41181a:	inc    edx
  41181b:	mov    ds:0x428e2001,al
  411820:	xor    DWORD PTR [edx+0x229001a1],eax
  411826:	add    dh,cl
  411828:	add    al,BYTE PTR [eax+ecx*4]
  41182b:	inc    edx
  41182c:	add    BYTE PTR [eax+esi*1+0x25402106],0x0
  411834:	add    BYTE PTR [eax+edx*4],ch
  411837:	mov    eax,ds:0x100681
  41183c:	les    eax,FWORD PTR [ebx-0x7e]
  41183f:	or     BYTE PTR [edx],0x5
  411842:	xor    BYTE PTR [edx],0x85
  411845:	inc    eax
  411846:	mov    WORD PTR [edi],fs
  411848:	inc    eax
  411849:	mov    bl,0x71
  41184b:	and    al,0x42
  41184d:	inc    esp
  41184e:	add    dl,BYTE PTR [eax]
  411850:	or     al,0x11
  411852:	add    DWORD PTR [eax],eax
  411854:	or     BYTE PTR [eax],0x70
  411857:	add    al,0x70
  411859:	mov    al,ds:0x1b001214
  41185e:	push   edx
  41185f:	test   eax,0x56018304
  411864:	add    BYTE PTR [eax],al
  411866:	pusha  
  411867:	and    al,0x43
  411869:	add    eax,0x842e042
  41186e:	aam    0x68
  411870:	or     bl,BYTE PTR [eax+0x2c]
  411873:	mov    al,ds:0xb840c249
  411878:	add    al,0x28
  41187a:	add    BYTE PTR [eax],0x78
  41187d:	adc    BYTE PTR [eax],ah
  41187f:	add    al,0x38
  411881:	das    
  411882:	add    BYTE PTR [ecx],al
  411884:	add    BYTE PTR [eax],ah
  411886:	or     cl,BYTE PTR [eax]
  411888:	add    dl,al
  41188a:	add    eax,DWORD PTR [eax+eax*2]
  41188d:	les    eax,FWORD PTR [eax*1-0x7e6f7efc]
  411894:	adc    BYTE PTR [eax],dh
  411896:	inc    ebp
  411897:	add    BYTE PTR [edx+eiz*4],al
  41189a:	add    al,0x0
  41189c:	inc    ecx
  41189d:	mov    al,0x4
  41189f:	and    al,0x48
  4118a1:	adc    eax,DWORD PTR [edx+ecx*1]
  4118a4:	adc    eax,0x7449105
  4118a9:	pop    esp
  4118aa:	mov    BYTE PTR [esi],al
  4118ac:	push   eax
  4118ad:	inc    edx
  4118ae:	add    al,0x43
  4118b0:	inc    eax
  4118b1:	and    BYTE PTR [eax],0x20
  4118b4:	ror    BYTE PTR [edx],0x41
  4118b7:	or     al,0x8
  4118b9:	add    ah,BYTE PTR [eax]
  4118bb:	adc    DWORD PTR [ebx],edx
  4118bd:	add    DWORD PTR [edx+0x402832],edi
  4118c3:	inc    eax
  4118c4:	dec    eax
  4118c5:	adc    al,0x0
  4118c7:	push   eax
  4118c8:	push   es
  4118c9:	sub    DWORD PTR [eax+eax*1],edx
  4118cc:	add    al,BYTE PTR [eax+0x30]
  4118cf:	inc    edx
  4118d0:	add    BYTE PTR [ecx+0x4170843],ah
  4118d6:	add    al,0x8a
  4118d8:	sbb    BYTE PTR [ecx],al
  4118da:	add    esp,eax
  4118dc:	add    BYTE PTR [edx],0xa0
  4118df:	and    al,0xc9
  4118e1:	mov    al,ds:0x8b000121
  4118e6:	mov    BYTE PTR [esp+eax*1],al
  4118e9:	push   esp
  4118ea:	or     BYTE PTR [eax+eax*1+0x10302e4d],dl
  4118f1:	sbb    eax,0x406290c2
  4118f6:	add    al,BYTE PTR [eax+0x10]
  4118f9:	cmp    DWORD PTR [eax+0x4c],eax
  4118fc:	in     al,0x10
  4118fe:	or     BYTE PTR [ecx+eiz*2],al
  411901:	nop
  411902:	inc    eax
  411903:	pop    eax
  411904:	sbb    al,BYTE PTR [ecx]
  411906:	add    al,0xd4
  411908:	mov    BYTE PTR [edx],cl
  41190a:	leave  
  41190b:	js     0x41190d
  41190d:	add    BYTE PTR [eax],al
  41190f:	adc    al,0x10
  411911:	add    DWORD PTR [ebp+0x34],eax
  411914:	sub    BYTE PTR [ecx],al
  411916:	sub    al,BYTE PTR [eax]
  411918:	mov    eax,ds:0xdf2b8211
  41191d:	and    al,0xc0
  41191f:	inc    eax
  411920:	and    ebx,DWORD PTR [eax]
  411922:	add    eax,DWORD PTR [eax+eiz*2]
  411925:	push   edx
  411926:	and    DWORD PTR [eax],edx
  411928:	or     BYTE PTR [eax],cl
  41192a:	sub    BYTE PTR [ecx],0x0
  41192d:	sahf   
  41192e:	inc    eax
  41192f:	add    al,BYTE PTR [esi]
  411931:	or     DWORD PTR [eax],eax
  411933:	or     BYTE PTR [eax-0x7df613ff],al
  411939:	and    al,0x0
  41193b:	pop    esp
  41193c:	add    ah,al
  41193e:	add    DWORD PTR [eax-0x5efff43c],eax
  411944:	inc    edi
  411945:	add    BYTE PTR [eax+eiz*1],ah
  411948:	inc    eax
  411949:	inc    esp
  41194a:	imul   esp,DWORD PTR [ecx-0x7c],0x900093
  411951:	cdq    
  411952:	or     DWORD PTR [eax],0x10166481
  411958:	ror    al,1
  41195a:	ror    BYTE PTR [ecx],0x0
  41195d:	and    al,0x1
  41195f:	adc    BYTE PTR [ecx],dh
  411961:	inc    eax
  411962:	dec    ecx
  411963:	mov    DWORD PTR [eax+0x0],esi
  411966:	and    al,0x29
  411968:	push   ss
  411969:	add    ah,BYTE PTR [edx-0x6ef7bffb]
  41196f:	bound  ebp,QWORD PTR [edx]
  411971:	push   edi
  411972:	add    BYTE PTR [eax+edx*1],cl
  411975:	inc    ebx
  411976:	sub    al,0x9
  411978:	jbe    0x41198b
  41197a:	sub    ah,0xc1
  41197d:	inc    ecx
  41197e:	gs and al,0x80
  411981:	and    BYTE PTR [edx+ecx*2-0x80],al
  411985:	test   al,0x11
  411987:	dec    eax
  411988:	pusha  
  411989:	push   ecx
  41198a:	adc    edx,esi
  41198c:	rol    BYTE PTR [ecx-0x39edb1f0],0xc5
  411993:	adc    al,0x1
  411995:	(bad)  
  411996:	dec    ecx
  411997:	and    DWORD PTR [ecx],eax
  411999:	mov    ch,0x6e
  41199b:	add    DWORD PTR [eax],eax
  41199d:	leave  
  41199e:	and    BYTE PTR [eax],dl
  4119a0:	add    BYTE PTR [eax+0x68200004],dl
  4119a6:	add    ch,BYTE PTR [eax]
  4119a8:	or     dh,al
  4119aa:	adc    DWORD PTR [ecx+ebx*1],edx
  4119ad:	add    BYTE PTR [edx],al
  4119af:	ret    0xc448
  4119b2:	rol    BYTE PTR [ecx-0x3fd9f69e],0x64
  4119b9:	and    BYTE PTR [edx],cl
  4119bb:	cmp    DWORD PTR [ecx],0xffffffe0
  4119be:	inc    esi
  4119bf:	cmp    BYTE PTR [eax+eax*1],al
  4119c2:	inc    esi
  4119c3:	add    eax,0x21dae18
  4119c8:	add    al,0x0
  4119ca:	ret    0x8086
  4119cd:	add    DWORD PTR [esi],eax
  4119cf:	adc    DWORD PTR [edx],eax
  4119d1:	inc    ebx
  4119d2:	push   eax
  4119d3:	inc    eax
  4119d4:	and    eax,DWORD PTR [ecx+0x41]
  4119d7:	pop    eax
  4119d8:	and    BYTE PTR [eax+0x10010252],al
  4119de:	add    ebx,DWORD PTR [ecx]
  4119e0:	add    al,0x86
  4119e2:	sub    al,0xc
  4119e4:	push   es
  4119e5:	inc    eax
  4119e6:	shl    DWORD PTR [ecx+ecx*8],1
  4119e9:	push   es
  4119ea:	and    BYTE PTR [edx],0x2d
  4119ed:	inc    eax
  4119ee:	popa   
  4119ef:	and    eax,0x8d840143
  4119f4:	and    BYTE PTR ds:0x211500a1,0x42
  4119fb:	test   BYTE PTR [edx],al
  4119fd:	add    BYTE PTR [eax],bl
  4119ff:	and    BYTE PTR [eax],0x8
  411a02:	inc    ebp
  411a03:	adc    DWORD PTR [eax+0x0],0x20908420
  411a0a:	jo     0x414d4a13
  411a10:	or     DWORD PTR [eax+eax*1],esi
  411a13:	and    BYTE PTR ds:0x62382cc2,dl
  411a19:	xchg   ecx,eax
  411a1a:	mov    eax,DWORD PTR [ebx]
  411a1c:	add    al,0xc0
  411a1e:	loopne 0x411a5a
  411a20:	pop    eax
  411a21:	add    BYTE PTR [eax-0x7c],al
  411a24:	adc    BYTE PTR [edx+0x22214020],0x66
  411a2b:	add    DWORD PTR [ebx],edx
  411a2d:	push   eax
  411a2e:	xor    DWORD PTR [ebx],esp
  411a30:	and    BYTE PTR [eax+0x1c0000c2],0x10
  411a37:	mov    al,ds:0x4006010
  411a3c:	or     eax,0x120b884e
  411a41:	and    BYTE PTR [eax+0x78],al
  411a44:	sbb    eax,0x10800802
  411a49:	xor    al,0x90
  411a4b:	inc    eax
  411a4c:	adc    al,0x11
  411a4e:	mov    al,BYTE PTR [eax+0x22520000]
  411a54:	inc    ecx
  411a55:	and    al,0x80
  411a57:	rcl    BYTE PTR [edx+edx*2],0xb4
  411a5b:	inc    eax
  411a5c:	inc    ecx
  411a5d:	test   BYTE PTR [eax+eiz*1],al
  411a60:	add    al,0x1
  411a62:	add    ebx,DWORD PTR [eax+0x40]
  411a65:	push   esi
  411a66:	push   eax
  411a67:	ret    
  411a68:	or     eax,DWORD PTR [eax]
  411a6a:	add    BYTE PTR [edx],al
  411a6c:	dec    ecx
  411a6d:	rol    DWORD PTR ds:0x10181061,cl
  411a73:	mov    BYTE PTR [ecx+0x4d],cl
  411a76:	pusha  
  411a77:	push   esp
  411a78:	push   0x84204004
  411a7d:	data16 or dh,BYTE PTR [eax+0x4]
  411a81:	inc    eax
  411a82:	add    al,0x5
  411a84:	bound  esp,QWORD PTR [eax]
  411a86:	js     0x411a1c
  411a88:	inc    edx
  411a89:	ins    BYTE PTR es:[edi],dx
  411a8a:	adc    BYTE PTR [edi],0xc0
  411a8d:	and    BYTE PTR [edi],0x10
  411a90:	add    al,BYTE PTR [edx+edx*1]
  411a93:	rcl    DWORD PTR [ecx-0x7eeffcc8],0x90
  411a9a:	xchg   ecx,eax
  411a9b:	add    DWORD PTR [edx-0x5bf9ffc0],ebp
  411aa1:	add    DWORD PTR [eax+0x10],esp
  411aa4:	add    al,0x0
  411aa6:	and    al,al
  411aa8:	lods   al,BYTE PTR ds:[esi]
  411aa9:	add    al,BYTE PTR [eax+ecx*1-0x77f7ff60]
  411ab0:	mov    eax,ds:0x2846048
  411ab5:	or     BYTE PTR [edx+0x4],dh
  411ab8:	add    al,0x43
  411aba:	loope  0x411afc
  411abc:	sub    BYTE PTR [eax-0x60],al
  411abf:	rol    BYTE PTR [ecx+0x71],0x10
  411ac3:	and    DWORD PTR [eax],eax
  411ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ac6:	add    BYTE PTR [eax],bh
  411ac8:	add    DWORD PTR [ecx+ebp*2],edx
  411acb:	sbb    BYTE PTR [eax+eax*1+0x22],al
  411acf:	inc    edx
  411ad0:	test   BYTE PTR [esp+eax*1],al
  411ad3:	rol    BYTE PTR [ecx],0xe
  411ad6:	add    ah,BYTE PTR [eax+0x3004891]
  411adc:	add    BYTE PTR [edx+eax*2],al
  411adf:	adc    BYTE PTR [ecx],al
  411ae1:	loope  0x411b05
  411ae3:	pusha  
  411ae4:	or     BYTE PTR [eax],al
  411ae6:	sub    al,0x83
  411ae8:	rol    BYTE PTR [esp+ecx*1+0x42004129],0x5
  411af0:	pusha  
  411af1:	xor    DWORD PTR [esi+0x8],eax
  411af4:	call   0x904d3d3d
  411af9:	and    al,0x1
  411afb:	and    BYTE PTR [ecx-0x6ffbf3e7],bl
  411b01:	add    al,0xa0
  411b03:	dec    edx
  411b04:	cmp    DWORD PTR [eax+0x52440c2],0x1220004
  411b0e:	add    DWORD PTR [esi],ebx
  411b10:	add    eax,0x104104c
  411b16:	and    BYTE PTR ds:0x4264547e,al
  411b1c:	dec    esi
  411b1d:	ret    0x9
  411b20:	fmul   QWORD PTR [eax]
  411b22:	add    dl,BYTE PTR [esi+0x43200e46]
  411b28:	rol    DWORD PTR [eax],1
  411b2a:	js     0x411b49
  411b2c:	inc    eax
  411b2d:	adc    BYTE PTR [eax],al
  411b2f:	mov    ds:0x4c0480c,al
  411b34:	xchg   BYTE PTR [ecx-0x3dfb5c00],ah
  411b3a:	add    al,BYTE PTR [eax]
  411b3c:	inc    ebp
  411b3d:	or     BYTE PTR cs:[ecx],al
  411b40:	mov    al,ds:0x8504e001
  411b45:	mov    ebp,es
  411b47:	inc    esp
  411b48:	add    al,0xe0
  411b4a:	add    al,0xb8
  411b4c:	inc    eax
  411b4d:	or     BYTE PTR [ebx+0x1a81610],dl
  411b53:	add    DWORD PTR [edi],0x88001142
  411b59:	add    esp,DWORD PTR [ecx]
  411b5b:	add    al,BYTE PTR [ebx-0x60]
  411b5e:	or     BYTE PTR [eax-0x7bb57e00],0x36
  411b65:	and    BYTE PTR [eax],dl
  411b67:	add    BYTE PTR [eax+0x7e],dl
  411b6a:	or     DWORD PTR [ebp+0x1139006e],eax
  411b70:	mov    al,cs:0x3a0400
  411b76:	sub    eax,0x200085
  411b7b:	inc    esp
  411b7c:	push   0x601a4
  411b81:	add    eax,0x4e32c20
  411b86:	add    DWORD PTR [edx+edx*1],eax
  411b89:	add    ecx,DWORD PTR [edx]
  411b8b:	or     DWORD PTR [edx],ebp
  411b8d:	ret    
  411b8e:	add    eax,DWORD PTR [eax]
  411b90:	and    BYTE PTR [eax],cl
  411b92:	add    BYTE PTR [esi],0x2
  411b95:	xor    al,0x50
  411b97:	add    DWORD PTR [eax],ebp
  411b99:	add    BYTE PTR [eax],0x8
  411b9c:	or     BYTE PTR ds:0x882a40,al
  411ba2:	inc    eax
  411ba3:	add    BYTE PTR [edx+ebx*4+0x10],cl
  411ba7:	nop
  411ba8:	add    ah,BYTE PTR [eax+0x20a85301]
  411bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411baf:	test   al,0x80
  411bb1:	and    BYTE PTR [eax+0x0],ch
  411bb4:	add    al,BYTE PTR [eax-0x4a]
  411bb7:	or     al,0x10
  411bb9:	add    cl,BYTE PTR [edx]
  411bbb:	and    cl,BYTE PTR [eax+0x40100754]
  411bc1:	test   al,0xa8
  411bc3:	add    BYTE PTR [eax],al
  411bc5:	or     dl,BYTE PTR [esi]
  411bc7:	int3   
  411bc8:	or     al,BYTE PTR [eax+0x88400]
  411bce:	push   0x418b8004
  411bd3:	jo     0x411be2
  411bd5:	cdq    
  411bd6:	rcr    BYTE PTR [eax+0x63],0x6
  411bda:	adc    BYTE PTR [ecx],al
  411bdc:	or     BYTE PTR [ebx+0x50],al
  411bdf:	add    BYTE PTR [eax],ch
  411be1:	add    al,0x40
  411be3:	or     eax,DWORD PTR ds:0x4804020e
  411be9:	rol    ah,0x11
  411bec:	add    BYTE PTR [ecx+0x10085c81],al
  411bf2:	sub    al,BYTE PTR [eax+edx*2]
  411bf5:	adc    BYTE PTR [eax],ah
  411bf7:	sub    eax,0x600810a1
  411bfc:	mov    ebx,0x44880062
  411c01:	rol    BYTE PTR [eax-0x7d5fbfc0],0x1c
  411c08:	push   ds
  411c09:	and    esi,DWORD PTR [esp+eax*8]
  411c0c:	add    BYTE PTR [eax],bh
  411c0e:	bound  ebp,QWORD PTR [edx]
  411c10:	mov    al,ds:0xc02278
  411c15:	xor    cl,al
  411c17:	adc    BYTE PTR [eax],al
  411c19:	and    BYTE PTR [ebp-0x7b],al
  411c1c:	xchg   BYTE PTR [eax-0x80],ah
  411c1f:	add    BYTE PTR [eax+0x20],dl
  411c22:	and    DWORD PTR [edx],ebx
  411c24:	push   edx
  411c25:	and    ah,BYTE PTR [ebp+0x10]
  411c28:	inc    eax
  411c29:	xchg   BYTE PTR [ecx+eax*2],ah
  411c2c:	adc    BYTE PTR [edx],al
  411c2e:	mov    ds:0xa660e10c,al
  411c33:	add    DWORD PTR [eax],eax
  411c35:	add    DWORD PTR [eax-0x78],edx
  411c38:	pop    esi
  411c39:	sub    BYTE PTR [eax],al
  411c3b:	add    DWORD PTR [edx+0x4],edx
  411c3e:	and    eax,0x21815300
  411c43:	or     eax,0x47f04e0
  411c48:	add    eax,0x2008
  411c4d:	inc    ebp
  411c4e:	adc    BYTE PTR [eax],al
  411c50:	adc    BYTE PTR [ecx+0x5f048402],ah
  411c56:	adc    DWORD PTR [eax],ecx
  411c58:	add    DWORD PTR [eax],edx
  411c5a:	mov    cl,0x39
  411c5c:	and    al,BYTE PTR [edx]
  411c5e:	mov    ds:0x700a00,al
  411c63:	add    BYTE PTR [edx],ch
  411c65:	or     ah,BYTE PTR [eax+ebp*1+0x874ae00]
  411c6c:	add    al,BYTE PTR ds:0xd8e01820
  411c72:	and    al,0x24
  411c74:	es push eax
  411c76:	dec    eax
  411c77:	add    bh,BYTE PTR [eax]
  411c79:	sub    ebp,ebx
  411c7b:	cmp    DWORD PTR [edx],edx
  411c7d:	xchg   ebp,eax
  411c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7f:	add    al,0x12
  411c81:	sbb    BYTE PTR [ecx],dl
  411c83:	add    al,0x60
  411c85:	add    DWORD PTR [ebx],ebp
  411c87:	adc    DWORD PTR [ebx-0x80],0x24888200
  411c8e:	add    BYTE PTR [ecx+0x8],cl
  411c91:	add    BYTE PTR [edx],al
  411c93:	xor    al,0x16
  411c95:	adc    al,0x26
  411c97:	ror    DWORD PTR [eax],0xe
  411c9a:	xchg   ecx,eax
  411c9b:	fwait
  411c9c:	leave  
  411c9d:	sbb    BYTE PTR [esi+0x3c80002c],dl
  411ca3:	push   ecx
  411ca4:	or     eax,0x2120583d
  411ca9:	inc    eax
  411caa:	xor    DWORD PTR [eax+0x5408208a],esi
  411cb0:	add    al,0x40
  411cb2:	add    DWORD PTR [esp+eax*1],esp
  411cb5:	or     DWORD PTR [ecx],edx
  411cb7:	add    BYTE PTR [ecx+0x24],cl
  411cba:	xor    DWORD PTR [ebp-0x3ded3fc0],eax
  411cc0:	mov    al,0x10
  411cc2:	or     al,0xe8
  411cc4:	and    DWORD PTR [eax],ecx
  411cc6:	xor    eax,0x44252a04
  411ccb:	ret    0x204
  411cce:	push   0x54414a2
  411cd3:	inc    edi
  411cd4:	mov    BYTE PTR ds:0x6800600,cl
  411cda:	test   ah,dh
  411cdc:	inc    eax
  411cdd:	and    BYTE PTR [edx],ah
  411cdf:	push   eax
  411ce0:	ret    0x4180
  411ce3:	add    BYTE PTR [ecx+eax*1+0x18a0a082],al
  411cea:	add    BYTE PTR [eax],0x84
  411ced:	adc    dl,BYTE PTR cs:[eax+0x5b001138]
  411cf4:	or     BYTE PTR [ecx+0x1],cl
  411cf7:	out    0xb8,al
  411cf9:	ins    BYTE PTR es:[edi],dx
  411cfa:	rol    BYTE PTR [ecx],cl
  411cfc:	and    al,0x16
  411cfe:	add    al,0xc9
  411d00:	add    BYTE PTR [ecx],ah
  411d02:	or     BYTE PTR [eax+0x20670408],al
  411d08:	bound  ecx,QWORD PTR [eax]
  411d0a:	and    DWORD PTR [ecx+0x70],ecx
  411d0d:	adc    edi,DWORD PTR [eax+0x8002342]
  411d13:	inc    eax
  411d14:	sbb    BYTE PTR [ecx+eax*4],0xf1
  411d18:	sub    al,0x4
  411d1a:	inc    ebp
  411d1b:	mov    BYTE PTR [eax+edx*1],cl
  411d1e:	inc    esi
  411d1f:	add    eax,DWORD PTR [edx+eax*1+0x9010c04]
  411d26:	sub    al,0x0
  411d28:	or     ah,BYTE PTR [eax+eax*1]
  411d2b:	and    BYTE PTR [eax+eax*2+0x26],ah
  411d2f:	inc    esi
  411d30:	or     BYTE PTR [eax],dl
  411d32:	add    BYTE PTR [eax+0x10],al
  411d35:	and    BYTE PTR [edx],ch
  411d37:	and    eax,DWORD PTR [eax+0xf400416]
  411d3d:	jo     0x411d40
  411d3f:	or     BYTE PTR [eax+0x0],ah
  411d42:	nop
  411d43:	push   es
  411d44:	adc    BYTE PTR [ecx*1+0x43802110],ah
  411d4b:	or     BYTE PTR [eax+0x20],ah
  411d4e:	add    DWORD PTR [eax+edx*4+0x6220d051],eax
  411d55:	inc    eax
  411d56:	rcl    DWORD PTR [esp+eax*1],1
  411d59:	pusha  
  411d5a:	adc    BYTE PTR ds:0x24900,0x1
  411d61:	push   es
  411d62:	add    BYTE PTR [eax],bh
  411d64:	hlt    
  411d65:	add    dl,BYTE PTR [eax]
  411d67:	daa    
  411d68:	and    al,0x91
  411d6a:	inc    ebp
  411d6b:	add    al,0x41
  411d6d:	add    al,0x8a
  411d6f:	sar    BYTE PTR [edx+0x10802ce9],1
  411d75:	add    eax,esp
  411d77:	cmp    ah,BYTE PTR [eax+eiz*1]
  411d7a:	sub    BYTE PTR [eax],al
  411d7c:	pop    eax
  411d7d:	add    BYTE PTR [eax+eax*2+0x2240b0a2],dl
  411d84:	add    BYTE PTR [edx],0x5c
  411d87:	test   BYTE PTR [eax+0x45],bl
  411d8a:	add    BYTE PTR [eax],dl
  411d8c:	xchg   esi,eax
  411d8d:	add    BYTE PTR [edx],al
  411d8f:	add    DWORD PTR [eax],0x1
  411d92:	add    BYTE PTR [edx],cl
  411d94:	add    al,0x54
  411d96:	sbb    BYTE PTR [edx+0x41],al
  411d99:	test   BYTE PTR [edx-0x1e],al
  411d9c:	add    BYTE PTR [eax+eax*1],cl
  411d9f:	test   DWORD PTR [ebx+0x9],edx
  411da2:	inc    ebx
  411da3:	adc    al,0xcc
  411da5:	push   ss
  411da6:	adc    BYTE PTR [eax+0x14],al
  411da9:	xor    dl,BYTE PTR [eax-0x3fbf77f7]
  411daf:	add    BYTE PTR [edx],al
  411db1:	add    al,BYTE PTR [eax]
  411db3:	nop
  411db4:	test   BYTE PTR gs:[edx],ch
  411db7:	add    BYTE PTR [eax+0x2292a10a],dh
  411dbd:	and    al,0x95
  411dbf:	and    BYTE PTR [eax+0x420b0160],cl
  411dc5:	sub    al,0x4
  411dc7:	or     al,0x3
  411dc9:	cdq    
  411dca:	adc    BYTE PTR [eax-0x80],cl
  411dcd:	adc    al,0x0
  411dcf:	test   al,0x81
  411dd1:	or     BYTE PTR [eax],ah
  411dd3:	or     BYTE PTR [eax],cl
  411dd5:	shr    DWORD PTR [eax+eax*8+0x88210],0x1
  411ddd:	sbb    BYTE PTR [eax],cl
  411ddf:	add    BYTE PTR [edi],al
  411de1:	adc    al,BYTE PTR [edx]
  411de3:	add    DWORD PTR [edx],ecx
  411de5:	rol    DWORD PTR [edx],0x79
  411de8:	inc    ecx
  411de9:	cwde   
  411dea:	dec    eax
  411deb:	adc    eax,0x92600c1
  411df0:	sub    DWORD PTR ds:0x14880220,ebp
  411df6:	pop    esp
  411df7:	or     al,0x12
  411df9:	dec    eax
  411dfa:	add    BYTE PTR [eax+0x2004180],al
  411e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e01:	add    al,0x86
  411e03:	add    BYTE PTR [eax+eax*2-0x7e],dl
  411e07:	add    DWORD PTR [esi],eax
  411e09:	nop
  411e0a:	mov    DWORD PTR [esi],ecx
  411e0c:	mov    DWORD PTR ds:0x2322206,0x54020120
  411e16:	inc    esp
  411e17:	or     al,0x25
  411e19:	push   0x14
  411e1b:	inc    esp
  411e1c:	call   0x3407:0x18024a10
  411e23:	adc    DWORD PTR [ecx],eax
  411e25:	add    DWORD PTR [eax],ecx
  411e27:	and    DWORD PTR [ecx],0x85a20
  411e2d:	adc    DWORD PTR [eax],eax
  411e2f:	adc    al,0xa
  411e31:	and    BYTE PTR [ebx],dl
  411e33:	and    BYTE PTR [ecx-0x2c5fbbec],ah
  411e39:	cmp    BYTE PTR [edx-0x6f77dfdd],dl
  411e3f:	add    BYTE PTR [edx],al
  411e41:	add    DWORD PTR [edx],eax
  411e43:	mov    ds:0x1c4d000,al
  411e48:	inc    esp
  411e49:	es xchg edx,eax
  411e4b:	sbb    BYTE PTR [eax],al
  411e4d:	adc    BYTE PTR [ecx+0x3e02c8],al
  411e53:	add    DWORD PTR [edx-0x80],edx
  411e56:	add    BYTE PTR [eax+edx*1+0x30],cl
  411e5a:	add    BYTE PTR [ecx],0x0
  411e5d:	sub    BYTE PTR ds:0x84442090,al
  411e63:	test   ah,cl
  411e65:	dec    eax
  411e66:	adc    al,BYTE PTR [ebx]
  411e68:	je     0x411ed7
  411e6a:	adc    al,0x0
  411e6c:	sbb    BYTE PTR [ecx],ah
  411e6e:	xchg   ecx,eax
  411e6f:	add    al,BYTE PTR [edx+0x4118ca59]
  411e75:	sbb    ebp,DWORD PTR [eax+0x245700b]
  411e7b:	inc    ebx
  411e7c:	add    BYTE PTR [edx+0x23],al
  411e7f:	add    dl,BYTE PTR [eax]
  411e81:	push   es
  411e82:	inc    esp
  411e83:	add    dl,BYTE PTR [edi]
  411e85:	sub    BYTE PTR [edx],al
  411e87:	add    dl,0x48
  411e8a:	adc    BYTE PTR [eax+0x1],bh
  411e8d:	add    bh,BYTE PTR [edx]
  411e8f:	and    al,0x4
  411e91:	inc    edx
  411e92:	adc    DWORD PTR [edx],edx
  411e94:	add    BYTE PTR [eax+0x0],0x20
  411e98:	mov    al,ds:0x861c420
  411e9d:	add    al,0x20
  411e9f:	sbb    BYTE PTR [eax],cl
  411ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea2:	add    eax,0x28209900
  411ea7:	pusha  
  411ea8:	inc    esi
  411ea9:	and    bl,BYTE PTR [ecx]
  411eab:	add    BYTE PTR [eax],cl
  411ead:	add    eax,DWORD PTR [eax*1-0x7fbfeef0]
  411eb4:	and    ah,BYTE PTR [eax]
  411eb6:	dec    edx
  411eb7:	adc    DWORD PTR [ecx-0x80],eax
  411eba:	adc    al,dl
  411ebc:	inc    edx
  411ebd:	or     DWORD PTR [edx],eax
  411ebf:	jae    0x411ecd
  411ec1:	add    eax,0xac00030c
  411ec6:	adc    dh,BYTE PTR [ecx]
  411ec8:	lods   eax,DWORD PTR ds:[esi]
  411ec9:	add    eax,0x16490050
  411ece:	add    BYTE PTR [ebx],bl
  411ed0:	xor    BYTE PTR [ecx+0xa400042],cl
  411ed6:	add    BYTE PTR [esi-0x3b7efbc0],cl
  411edc:	inc    ecx
  411edd:	cwde   
  411ede:	cmp    DWORD PTR ds:0x80b2804,esp
  411ee4:	add    al,0x0
  411ee6:	inc    eax
  411ee7:	adc    cl,BYTE PTR [ecx+0x70]
  411eea:	inc    eax
  411eeb:	add    al,0x20
  411eed:	dec    eax
  411eee:	or     DWORD PTR [edx+0x24136a4f],eax
  411ef4:	xchg   edx,eax
  411ef5:	mov    dh,0xc8
  411ef7:	adc    BYTE PTR [eax],al
  411ef9:	rol    BYTE PTR [edx],0x52
  411efc:	inc    eax
  411efd:	add    BYTE PTR [ecx+0x10],al
  411f00:	add    al,BYTE PTR [eax+ebx*1-0x7d]
  411f04:	xchg   edx,eax
  411f05:	inc    eax
  411f06:	and    BYTE PTR [eax],cl
  411f08:	sub    BYTE PTR [edx],cl
  411f0a:	add    DWORD PTR [ecx],edx
  411f0c:	add    ah,cl
  411f0e:	xchg   edx,eax
  411f0f:	and    BYTE PTR [eax],0x1
  411f12:	adc    BYTE PTR [eax],dl
  411f14:	and    BYTE PTR [ecx+eax*2],cl
  411f17:	add    BYTE PTR [eax+0x420193c4],cl
  411f1d:	add    BYTE PTR [ecx+0x42],al
  411f20:	add    BYTE PTR [eax],ah
  411f22:	adc    BYTE PTR [ebx],al
  411f24:	add    DWORD PTR [edx],ebx
  411f26:	arpl   WORD PTR es:[eax+0x32],ax
  411f2a:	push   ebp
  411f2b:	cdq    
  411f2c:	sbb    al,BYTE PTR [eax]
  411f2e:	sub    BYTE PTR ds:0x2a60051,al
  411f34:	add    dh,BYTE PTR [eax+edx*1]
  411f37:	add    BYTE PTR [eax],al
  411f39:	xor    BYTE PTR [eax+0x10081004],al
  411f3f:	and    BYTE PTR [eax+0x42300244],al
  411f45:	adc    BYTE PTR [edx+0x446100],al
  411f4b:	add    BYTE PTR [eax+0x49014430],al
  411f51:	adc    dl,BYTE PTR [eax-0x7fff7c7c]
  411f57:	add    DWORD PTR [eax],esp
  411f59:	nop
  411f5a:	mov    BYTE PTR [esi],bl
  411f5c:	dec    esp
  411f5d:	xor    BYTE PTR [ebx],al
  411f5f:	adc    al,BYTE PTR [ecx]
  411f61:	add    al,BYTE PTR [ecx+eax*4]
  411f64:	adc    BYTE PTR [eax],ah
  411f66:	ror    BYTE PTR [eax],0x44
  411f69:	adc    DWORD PTR [edx+0x20],esi
  411f6c:	lock jmp 0x3010:0x2a004020
  411f74:	ins    BYTE PTR es:[edi],dx
  411f75:	and    BYTE PTR [eax+eax*1],bl
  411f78:	(bad)
  411f7c:	sbb    eax,0x421d4007
  411f81:	and    BYTE PTR [eax+eax*1],0x0
  411f85:	or     BYTE PTR [eax+eax*4+0x682a0482],0x8
  411f8d:	add    BYTE PTR [ecx+0x50041074],cl
  411f93:	add    dl,dl
  411f95:	adc    al,0x10
  411f97:	nop
  411f98:	pop    eax
  411f99:	dec    eax
  411f9a:	add    DWORD PTR [eax+esi*1],edx
  411f9d:	adc    BYTE PTR [eax],cl
  411f9f:	dec    esp
  411fa0:	adc    DWORD PTR [eax+ecx*4],eax
  411fa3:	adc    BYTE PTR [eax+eax*1-0x1393ea01],al
  411faa:	inc    esp
  411fab:	add    ch,dh
  411fad:	ror    al,1
  411faf:	xchg   ecx,eax
  411fb0:	inc    eax
  411fb1:	inc    eax
  411fb2:	es adc al,0x0
  411fb5:	add    BYTE PTR [ecx],bh
  411fb7:	add    DWORD PTR [eax+0x2],esi
  411fba:	mov    WORD PTR [edx-0x68],ss
  411fbd:	add    al,BYTE PTR ds:0x81004500
  411fc3:	add    BYTE PTR [eax],al
  411fc5:	adc    DWORD PTR [eax],eax
  411fc7:	adc    al,0x14
  411fc9:	push   eax
  411fca:	and    BYTE PTR [ebx],dl
  411fcc:	and    al,0x20
  411fce:	loopne 0x411f58
  411fd0:	adc    al,0x4
  411fd2:	or     BYTE PTR [edx],al
  411fd4:	add    DWORD PTR [ebx],esp
  411fd6:	and    BYTE PTR [ebx],al
  411fd8:	adc    BYTE PTR [ecx+0x18],ah
  411fdb:	mov    al,ds:0x80050072
  411fe0:	lds    esp,FWORD PTR [eax+0x12838324]
  411fe6:	add    bl,0x51
  411fe9:	add    ecx,DWORD PTR [edx]
  411feb:	adc    ah,BYTE PTR [eax+eax*8]
  411fee:	or     BYTE PTR [edx+eax*1+0x0],cl
  411ff2:	add    cl,BYTE PTR [eax]
  411ff4:	cwde   
  411ff5:	add    eax,0x30d81576
  411ffa:	popf   
  411ffb:	push   0x84375004
  412000:	and    DWORD PTR [edx+0x2c180940],eax
  412006:	add    al,0x21
  412008:	mov    eax,ds:0x94809900
  41200d:	or     al,0x52
  41200f:	and    BYTE PTR [eax+0x31],al
  412012:	and    eax,0x84210084
  412017:	adc    ah,BYTE PTR [ecx]
  412019:	add    bl,BYTE PTR fs:[eax]
  41201c:	xor    ebx,DWORD PTR [ebp+eax*4+0x4]
  412020:	or     DWORD PTR [edx],edx
  412022:	inc    eax
  412023:	xchg   DWORD PTR [edx],eax
  412025:	adc    al,BYTE PTR [edx+0x1d]
  412028:	add    dl,BYTE PTR [eax+eax*1]
  41202b:	inc    edx
  41202c:	mov    DWORD PTR ds:0x2092000,ecx
  412032:	adc    BYTE PTR [eax],ah
  412034:	xchg   dl,dl
  412036:	push   ecx
  412037:	inc    eax
  412038:	mov    eax,0x8235712a
  41203d:	add    BYTE PTR [ecx],al
  41203f:	mov    al,ds:0x509c3141
  412044:	mov    eax,ds:0x848c0043
  412049:	inc    edx
  41204a:	add    BYTE PTR [eax+edx*4],al
  41204d:	or     BYTE PTR [edx-0x7efef000],al
  412053:	inc    esp
  412054:	sbb    DWORD PTR [eax],eax
  412056:	push   0x40400441
  41205b:	dec    eax
  41205c:	push   esp
  41205d:	add    DWORD PTR [edx+ecx*8],ecx
  412060:	or     DWORD PTR [ecx+eax*1],ebp
  412063:	inc    esi
  412064:	add    al,0x2d
  412066:	add    DWORD PTR [edx],ecx
  412068:	sbb    al,0x8
  41206a:	or     DWORD PTR [eax+0x8],eax
  41206d:	and    DWORD PTR [ecx],eax
  41206f:	add    DWORD PTR [eax+0x54],eax
  412072:	adc    dl,BYTE PTR [eax]
  412074:	cwde   
  412075:	pusha  
  412076:	sub    cl,BYTE PTR [eax+0x6e02a6c8]
  41207c:	add    eax,DWORD PTR [eax]
  41207e:	add    DWORD PTR [ecx-0x7f],eax
  412081:	adc    DWORD PTR [esi],esp
  412083:	xor    BYTE PTR [eax+0x4],ch
  412086:	pop    es
  412087:	or     BYTE PTR [eax+0x38588d8],cl
  41208d:	xchg   edx,eax
  41208e:	push   ebp
  41208f:	fisub  DWORD PTR [ebp+0x48]
  412092:	add    BYTE PTR [eax],dl
  412094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412095:	mov    eax,0xa0a4804
  41209a:	push   eax
  41209b:	inc    eax
  41209c:	cmp    BYTE PTR [edx],dl
  41209e:	xchg   ebp,eax
  41209f:	xor    bl,BYTE PTR [eax+0x32]
  4120a2:	and    BYTE PTR [eax+eax*2+0x40],al
  4120a6:	or     al,0x11
  4120a8:	xor    ecx,DWORD PTR [ecx]
  4120aa:	add    BYTE PTR [ebp-0x5b],bl
  4120ad:	data16 adc BYTE PTR [esi+eiz*1],ah
  4120b1:	add    al,0x2
  4120b3:	dec    eax
  4120b4:	mov    eax,ds:0x60524040
  4120b9:	ror    BYTE PTR [eax],0x11
  4120bc:	add    BYTE PTR [edx+0x1c],al
  4120bf:	add    al,BYTE PTR [eax]
  4120c1:	test   BYTE PTR [edx],al
  4120c3:	add    BYTE PTR [eax-0x7c],0x16
  4120c7:	add    eax,DWORD PTR [edx]
  4120c9:	and    DWORD PTR [edx],ecx
  4120cb:	adc    BYTE PTR [ebx],dh
  4120cd:	jb     0x4120cf
  4120cf:	dec    esp
  4120d0:	or     esp,DWORD PTR [eax-0x6e]
  4120d3:	or     DWORD PTR [ecx],eax
  4120d5:	adc    DWORD PTR ds:0x2301804,0x20c99208
  4120df:	add    eax,0x263508
  4120e4:	inc    ecx
  4120e5:	sub    dh,BYTE PTR [eax+0x42]
  4120e8:	add    BYTE PTR [ecx],bl
  4120ea:	cmp    DWORD PTR [ecx],0xa342
  4120f0:	push   esi
  4120f1:	add    al,0x46
  4120f3:	or     al,BYTE PTR [edx]
  4120f5:	inc    ebp
  4120f6:	or     BYTE PTR ds:0x95cd01,al
  4120fc:	mov    BYTE PTR [ebp+0x25248990],cl
  412102:	cmp    DWORD PTR [eax],ecx
  412104:	add    al,BYTE PTR [eax+0x0]
  412107:	or     al,0x24
  412109:	add    al,BYTE PTR [edx+0x42090a28]
  41210f:	add    dl,BYTE PTR [eax-0x2dd3ffbf]
  412115:	inc    esi
  412116:	sub    DWORD PTR [ecx],0x22305002
  41211c:	add    DWORD PTR [esi+0x40],0x28140008
  412123:	adc    DWORD PTR [eax],edx
  412125:	dec    eax
  412126:	adc    DWORD PTR [eax],esi
  412128:	inc    esp
  412129:	fs inc eax
  41212b:	inc    ebx
  41212c:	inc    esi
  41212d:	test   DWORD PTR [eax-0x28],esp
  412130:	sbb    BYTE PTR [eax],al
  412132:	add    BYTE PTR [eax],al
  412134:	pusha  
  412135:	inc    eax
  412136:	or     DWORD PTR [eax],esp
  412138:	add    BYTE PTR [eax],al
  41213a:	xor    ah,ah
  41213c:	adc    BYTE PTR [ecx+0xb652b01],al
  412142:	add    al,0x1
  412144:	es cwde 
  412146:	test   al,0x44
  412148:	add    al,0x12
  41214a:	inc    ebp
  41214b:	sbb    eax,0x10e0d102
  412150:	inc    edx
  412151:	sbb    al,0x6
  412153:	and    eax,0x468b0480
  412158:	add    BYTE PTR [eax],al
  41215a:	pop    ebp
  41215b:	jl     0x4121ad
  41215d:	cmp    al,0x0
  41215f:	int3   
  412160:	xor    al,BYTE PTR [ebx]
  412162:	and    BYTE PTR [ecx-0x80],dl
  412165:	inc    eax
  412166:	or     BYTE PTR [eax+0x2],0x61
  41216a:	add    eax,0x9200000
  41216f:	enter  0xae02,0x0
  412173:	and    BYTE PTR [edx+0x4000],0x80
  41217a:	add    BYTE PTR [ecx],al
  41217c:	inc    esp
  41217d:	jmp    0xc082:0x9c05a901
  412184:	fsub   DWORD PTR [eax+eax*8]
  412187:	or     BYTE PTR [ebx],cl
  412189:	and    DWORD PTR [edx],eax
  41218b:	inc    eax
  41218c:	inc    eax
  41218d:	jae    0x41218f
  41218f:	add    BYTE PTR [eax],0x28
  412192:	adc    BYTE PTR [ecx+eax*1],al
  412195:	add    DWORD PTR [eax+0xc01a4a],esp
  41219b:	or     BYTE PTR [esi+eax*4+0x12],ah
  41219f:	add    cl,BYTE PTR [edx]
  4121a1:	inc    edx
  4121a2:	add    BYTE PTR [eax+eax*1],dl
  4121a5:	add    DWORD PTR [edx+0x0],0x8a140090
  4121ac:	add    eax,0x2064060c
  4121b1:	add    DWORD PTR [ecx+0xb0487a8],0x34948010
  4121bb:	or     dl,BYTE PTR [edx]
  4121bd:	add    al,0x21
  4121bf:	mov    al,ds:0x2a420423
  4121c4:	xchg   esp,eax
  4121c5:	dec    ecx
  4121c6:	js     0x4121cc
  4121c8:	pusha  
  4121c9:	add    BYTE PTR [eax],al
  4121cb:	add    DWORD PTR [edx],edx
  4121cd:	inc    ecx
  4121ce:	add    BYTE PTR [eax],0xa
  4121d1:	push   es
  4121d2:	inc    edx
  4121d3:	add    al,0x80
  4121d5:	add    BYTE PTR [ecx+eax*2+0x20],ch
  4121d9:	or     BYTE PTR [ecx],0x21
  4121dc:	and    eax,0x4050a494
  4121e1:	push   0xf8482607
  4121e6:	add    al,0x22
  4121e8:	adc    BYTE PTR [esp+eax*4-0x80],cl
  4121ec:	adc    BYTE PTR [edx],bl
  4121ee:	xor    BYTE PTR [eax],cl
  4121f0:	and    al,0xa
  4121f2:	add    BYTE PTR es:[eax-0x6b7f3f60],al
  4121f9:	inc    edx
  4121fa:	add    BYTE PTR [esi],al
  4121fc:	add    BYTE PTR [ecx],al
  4121fe:	add    BYTE PTR [ecx],cl
  412200:	add    BYTE PTR [eax],dl
  412202:	and    BYTE PTR [ebx+0x40809294],0x6
  412209:	and    BYTE PTR [edx],dl
  41220b:	add    edx,DWORD PTR [ecx+0xd]
  41220e:	add    DWORD PTR [eax+0x60],eax
  412211:	mov    al,ds:0xa20990e2
  412216:	inc    eax
  412217:	mov    ds:0x9024d06,al
  41221c:	and    al,0xa9
  41221e:	test   BYTE PTR [eax+ecx*2],al
  412221:	or     cl,BYTE PTR [edi+0x4a361ca8]
  412227:	add    DWORD PTR [esi],edx
  412229:	dec    esp
  41222a:	and    ah,bl
  41222c:	dec    eax
  41222d:	retf   0x68a0
  412230:	add    DWORD PTR [eax+0x110402c],eax
  412236:	call   0x749b2f1
  41223b:	inc    eax
  41223c:	and    eax,0x4413800
  412241:	push   esp
  412242:	jp     0x412245
  412244:	add    BYTE PTR [esp+eax*2+0x58038140],al
  41224b:	add    DWORD PTR [eax-0x60],ebp
  41224e:	ror    BYTE PTR [edx+ecx*4+0x0],cl
  412252:	sbb    al,0x18
  412254:	inc    ecx
  412255:	sbb    BYTE PTR [ecx+0x11],al
  412258:	sbb    DWORD PTR [eax],eax
  41225a:	test   BYTE PTR [esi],al
  41225c:	add    al,0x74
  41225e:	add    BYTE PTR [eax],0x4
  412261:	and    DWORD PTR [eax+0x4a],esi
  412264:	ror    BYTE PTR [eax-0x5a1bfbeb],0x81
  41226b:	outs   dx,BYTE PTR ds:[esi]
  41226c:	or     DWORD PTR [eax],esp
  41226e:	adc    eax,DWORD PTR [eax]
  412270:	add    DWORD PTR [eax+0x44c80048],eax
  412276:	or     al,BYTE PTR [eax+0x32881091]
  41227c:	or     al,0x70
  41227e:	aam    0xe2
  412280:	pop    es
  412281:	add    BYTE PTR [eax+0x10200a11],dl
  412287:	mov    BYTE PTR [eax],al
  412289:	adc    BYTE PTR [eax],al
  41228b:	or     BYTE PTR [esi+0x48],0x50
  41228f:	mov    eax,ds:0xa5305061
  412294:	add    BYTE PTR [edi+ecx*1],0x1
  412298:	xchg   ebp,eax
  412299:	and    BYTE PTR [eax-0x7ffaf800],al
  41229f:	push   es
  4122a0:	or     al,0x28
  4122a2:	add    al,0x4
  4122a4:	or     BYTE PTR [edx],al
  4122a6:	and    DWORD PTR [eax],edx
  4122a8:	add    BYTE PTR [ebx+edx*1+0xd0000],al
  4122af:	adc    ah,ah
  4122b1:	or     BYTE PTR [eax+0x5],al
  4122b4:	jo     0x4122ba
  4122b6:	pop    edx
  4122b7:	add    BYTE PTR [eax+eiz*1+0x2020c000],ah
  4122be:	cwde   
  4122bf:	test   al,0x84
  4122c1:	adc    ah,ah
  4122c3:	inc    eax
  4122c4:	add    al,BYTE PTR [eax-0x80]
  4122c7:	adc    BYTE PTR [eax],bl
  4122c9:	adc    BYTE PTR [ebx],0xd5
  4122cc:	call   0x482abe9
  4122d1:	push   ebp
  4122d2:	or     al,0x23
  4122d4:	adc    BYTE PTR [ebx+0x49],cl
  4122d7:	and    cl,ch
  4122d9:	add    BYTE PTR [eax+0x4],0x37
  4122dd:	xor    BYTE PTR [eax],dl
  4122df:	or     BYTE PTR [eax],dl
  4122e1:	adc    al,0x22
  4122e3:	add    BYTE PTR [eax+0x68882367],ah
  4122e9:	or     BYTE PTR [eax+0x41],dl
  4122ec:	aaa    
  4122ed:	add    DWORD PTR [ecx+edx*1-0x80],eax
  4122f1:	xor    bh,ch
  4122f3:	adc    BYTE PTR [eax],dl
  4122f5:	shl    BYTE PTR [eax+ecx*1],0x13
  4122f9:	add    DWORD PTR [ebx],esp
  4122fb:	add    al,0x0
  4122fd:	inc    edx
  4122fe:	sub    al,BYTE PTR [esi+0x380c0014]
  412304:	mov    ah,al
  412306:	enter  0x2fb5,0x85
  41230a:	and    DWORD PTR [eax-0x7f],esi
  41230d:	jno    0x412319
  41230f:	cmp    BYTE PTR [ecx],ah
  412311:	adc    al,0x48
  412313:	or     al,0xc0
  412315:	inc    edx
  412316:	rcl    BYTE PTR [eax],0x2
  412319:	add    DWORD PTR ds:0x27200940,0x203104c7
  412323:	or     BYTE PTR [eax],al
  412325:	or     BYTE PTR [ecx+0x50208282],dl
  41232b:	mov    al,ds:0x10a4a854
  412330:	inc    eax
  412331:	inc    eax
  412332:	add    BYTE PTR [esp+0x221421],bh
  412339:	mov    eax,ds:0x72510090
  41233e:	mov    eax,ds:0x100a2800
  412343:	add    esp,0xb600800
  412349:	popf   
  41234a:	inc    eax
  41234b:	and    BYTE PTR [ebx+0x11],0x1
  41234f:	adc    BYTE PTR [edx],cl
  412351:	sbb    eax,DWORD PTR [esi]
  412353:	inc    esp
  412354:	push   0x3500001
  412359:	mov    eax,ds:0x1407
  41235e:	push   ss
  41235f:	or     eax,0x10000d80
  412364:	repnz nop
  412366:	inc    eax
  412367:	add    BYTE PTR [ecx],dl
  412369:	test   BYTE PTR [eax],al
  41236b:	and    dl,BYTE PTR [ecx]
  41236d:	or     DWORD PTR ds:0x4d009a4,eax
  412373:	or     DWORD PTR [ecx+0x6101192],esp
  412379:	add    BYTE PTR [eax+ebp*1],al
  41237c:	add    edx,eax
  41237e:	xchg   BYTE PTR [edx],cl
  412380:	and    BYTE PTR [eax+0x41],cl
  412383:	inc    eax
  412384:	add    dl,BYTE PTR [ecx]
  412386:	mov    ds:0xa6660940,al
  41238b:	dec    ebp
  41238c:	and    BYTE PTR [ebp+0x14090a41],al
  412392:	pop    ebx
  412393:	add    DWORD PTR [eax],esp
  412395:	nop
  412396:	add    DWORD PTR [edx+0x30],ecx
  412399:	popa   
  41239a:	sbb    ah,BYTE PTR [ebx]
  41239c:	add    eax,0x847132d0
  4123a1:	add    al,0x4
  4123a3:	mov    ch,0x44
  4123a5:	add    ah,BYTE PTR [ebp-0x70]
  4123a8:	add    DWORD PTR [esi],eax
  4123aa:	and    BYTE PTR [edx],dl
  4123ac:	add    al,0x2c
  4123ae:	xor    al,0x84
  4123b0:	adc    BYTE PTR [ecx],dl
  4123b2:	sub    al,0x28
  4123b4:	xchg   esp,eax
  4123b5:	add    al,cl
  4123b7:	or     BYTE PTR [edx+0x20],al
  4123ba:	adc    BYTE PTR [eax],dh
  4123bc:	add    al,0x0
  4123be:	add    BYTE PTR [eax],ah
  4123c0:	push   0xffffff90
  4123c2:	and    DWORD PTR [eax+eax*4],eax
  4123c5:	or     BYTE PTR [eax],cl
  4123c7:	add    BYTE PTR [eax+0x6408072],dl
  4123cd:	add    al,0x0
  4123cf:	add    DWORD PTR [esp+edx*1],eax
  4123d2:	rcr    BYTE PTR [ecx],0x8
  4123d5:	sbb    BYTE PTR [eax+0x2d20058],cl
  4123db:	adc    ebx,eax
  4123dd:	pusha  
  4123de:	or     DWORD PTR [ebx],esi
  4123e0:	add    eax,0x64802042
  4123e5:	mov    eax,0x48400001
  4123ea:	imul   eax,DWORD PTR [edi],0x84881224
  4123f0:	add    BYTE PTR [eax],al
  4123f2:	sub    BYTE PTR [ebx],dh
  4123f4:	adc    DWORD PTR [eax+0x10800420],esp
  4123fa:	or     eax,0x5c27487
  4123ff:	sbb    eax,eax
  412401:	add    cl,BYTE PTR [eax]
  412403:	and    al,0x10
  412405:	or     DWORD PTR [ecx],eax
  412407:	adc    BYTE PTR [eax+0x74c05514],ch
  41240d:	push   eax
  41240e:	or     BYTE PTR [edx],al
  412410:	cmp    al,0x4
  412412:	inc    ecx
  412413:	rol    BYTE PTR [eax],cl
  412415:	add    ch,bh
  412417:	dec    eax
  412418:	adc    BYTE PTR [edx+0x2000c4],al
  41241e:	add    DWORD PTR [ecx+0x280180],esp
  412424:	or     eax,0x880380cc
  412429:	add    al,BYTE PTR [eax+0x52]
  41242c:	stos   BYTE PTR es:[edi],al
  41242d:	add    al,0xa2
  41242f:	inc    edx
  412430:	adc    BYTE PTR [eax],cl
  412432:	sbb    al,0x8a
  412434:	inc    eax
  412435:	add    BYTE PTR [eax],0x9b
  412438:	xchg   edx,eax
  412439:	or     BYTE PTR [esi-0x80],0x4
  41243d:	adc    BYTE PTR [edx+0x8],cl
  412440:	adc    BYTE PTR [eax],ch
  412442:	add    BYTE PTR [eax+0x41100004],ah
  412448:	add    al,0x20
  41244a:	pop    ecx
  41244b:	add    DWORD PTR [ecx+edi*1],0x642898c
  412452:	add    al,0x57
  412454:	ret    
  412455:	add    BYTE PTR [edx+eiz*1+0x640c0004],ch
  41245c:	and    DWORD PTR [eax],edx
  41245e:	adc    dl,BYTE PTR [edx+0x34]
  412461:	and    al,0x9
  412463:	and    BYTE PTR [eax+eax*1-0x3fdff732],cl
  41246a:	mov    al,ds:0x1018e082
  41246f:	lds    esp,FWORD PTR [ecx]
  412471:	dec    edx
  412472:	adc    DWORD PTR [edx+eax*1-0x7cedfeec],eax
  412479:	adc    BYTE PTR [esp+eax*4],ah
  41247c:	test   al,ah
  41247e:	add    BYTE PTR [eax],al
  412480:	and    DWORD PTR [eax],ebx
  412482:	cmp    BYTE PTR [esi-0x4ffbe7f6],ah
  412488:	inc    ebp
  412489:	sahf   
  41248a:	push   es
  41248b:	dec    edx
  41248c:	add    DWORD PTR [eax],ebp
  41248e:	add    DWORD PTR [eax],ecx
  412490:	add    al,0xc0
  412492:	inc    eax
  412493:	test   BYTE PTR [eax-0x30],dl
  412496:	bound  eax,QWORD PTR [eax+0x50808402]
  41249c:	push   edx
  41249d:	inc    ebx
  41249e:	add    bl,BYTE PTR [ecx+eax*1]
  4124a1:	xor    al,BYTE PTR [ecx+edx*4+0xc]
  4124a5:	add    BYTE PTR [eax+eax*1-0x2e03390c],0x68
  4124ad:	xchg   DWORD PTR [eax+edx*2],esp
  4124b0:	or     eax,0x5934908
  4124b5:	mov    BYTE PTR [eax+0x240c8340],dl
  4124bb:	rol    BYTE PTR [eax],cl
  4124bd:	add    DWORD PTR gs:[esp+eax*4+0x50644061],eax
  4124c5:	sbb    BYTE PTR [ecx],ah
  4124c7:	adc    al,0x88
  4124c9:	adc    BYTE PTR [eax+ebp*1],0x85
  4124cd:	inc    ecx
  4124ce:	and    DWORD PTR [eax],eax
  4124d0:	adc    al,0x1
  4124d2:	and    BYTE PTR [eax+0x240c4445],dl
  4124d8:	lsl    edi,WORD PTR [eax]
  4124db:	adc    al,0x15
  4124dd:	or     DWORD PTR [eax+ebx*1+0x1a],eax
  4124e1:	and    BYTE PTR [edx],0x11
  4124e4:	add    eax,DWORD PTR [ebp+ecx*1+0x2003815c]
  4124eb:	xor    BYTE PTR [ecx],0x80
  4124ee:	or     DWORD PTR [eax+0x2228984],0x32690080
  4124f8:	adc    BYTE PTR [eax],0x0
  4124fb:	sub    dh,BYTE PTR ds:0x40316c
  412501:	sahf   
  412502:	lock loope 0x41250f
  412505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412506:	rol    BYTE PTR [esi],0x0
  412509:	shl    BYTE PTR [ecx],0x1
  41250c:	dec    eax
  41250d:	add    DWORD PTR [esp+ecx*1],eax
  412510:	xor    BYTE PTR [edx+0x1635c101],al
  412516:	xor    BYTE PTR [eax-0x79ba5fc0],0x44
  41251d:	sub    DWORD PTR [eax+0x2ea81442],esp
  412523:	dec    ebx
  412524:	xor    BYTE PTR [edx+eax*1],dl
  412527:	add    BYTE PTR [eax-0x4f9b45fd],al
  41252d:	les    ebx,FWORD PTR [eax]
  41252f:	adc    al,0x3
  412531:	adc    BYTE PTR ds:0x43004e66,al
  412537:	and    DWORD PTR [eax+eax*8],0x22a000c1
  41253e:	and    dh,ah
  412540:	inc    ebx
  412541:	add    al,BYTE PTR [eax+0xb]
  412544:	add    al,BYTE PTR [eax]
  412546:	and    al,0xa5
  412548:	push   ss
  412549:	enter  0x4012,0x0
  41254d:	rol    BYTE PTR [ecx+0x24],0xcc
  412551:	fs inc eax
  412553:	add    eax,DWORD PTR [eax-0x7a]
  412556:	adc    BYTE PTR [eax],al
  412558:	and    BYTE PTR [eax],al
  41255a:	adc    al,0x41
  41255c:	add    cl,BYTE PTR [eax]
  41255e:	enter  0xa410,0x51
  412562:	mov    ah,0x88
  412564:	push   cs
  412565:	or     al,0x20
  412567:	push   ss
  412568:	add    al,0x28
  41256a:	int3   
  41256b:	add    eax,0x2b82188
  412570:	inc    edx
  412571:	ror    BYTE PTR [eax],cl
  412573:	add    DWORD PTR [ecx],ebp
  412575:	sbb    eax,0x480c080
  41257a:	or     DWORD PTR [esi+0x846ab80],eax
  412580:	xchg   ebp,eax
  412581:	add    DWORD PTR [eax],eax
  412583:	adc    BYTE PTR [ecx],dh
  412585:	pop    edx
  412586:	mov    al,ds:0x19c04250
  41258b:	pop    ebp
  41258c:	add    BYTE PTR [ecx],ch
  41258e:	add    BYTE PTR [edx+eax*1],ah
  412591:	and    BYTE PTR [ebp-0x3ecf97f8],al
  412597:	add    BYTE PTR [ecx],0xc
  41259a:	mov    al,ds:0x41811542
  41259f:	and    BYTE PTR [eax+0x493010],cl
  4125a5:	or     al,BYTE PTR [ebx]
  4125a7:	xor    cl,BYTE PTR [eax]
  4125a9:	add    BYTE PTR [eax-0x5ccbbfff],al
  4125af:	push   es
  4125b0:	test   al,dl
  4125b2:	add    DWORD PTR [eax],eax
  4125b4:	add    BYTE PTR [eax],cl
  4125b6:	adc    BYTE PTR ds:0x88904042,cl
  4125bc:	test   BYTE PTR [eax-0x7efffabc],dh
  4125c2:	add    al,0xc0
  4125c4:	rol    BYTE PTR [eax+eax*4],1
  4125c7:	sub    DWORD PTR [ecx*1+0x415702],esp
  4125ce:	push   es
  4125cf:	and    al,BYTE PTR [esi]
  4125d1:	sub    BYTE PTR [eax],al
  4125d3:	adc    BYTE PTR [eax],ch
  4125d5:	adc    ah,BYTE PTR [eax+eax*1-0x3c]
  4125d9:	retf   0x60
  4125dc:	pop    esp
  4125dd:	adc    eax,0x391808c8
  4125e2:	pop    edx
  4125e3:	popa   
  4125e4:	adc    DWORD PTR [eax],ecx
  4125e6:	and    al,0x82
  4125e8:	inc    eax
  4125e9:	add    DWORD PTR [eax],eax
  4125eb:	dec    esi
  4125ec:	rol    BYTE PTR [edx+0x44],0x0
  4125f0:	xor    bl,BYTE PTR [eax+0x42e0228]
  4125f6:	test   BYTE PTR [eax],dl
  4125f8:	xor    dh,BYTE PTR [eax]
  4125fa:	add    BYTE PTR [edx],ah
  4125fc:	add    BYTE PTR [ebx-0x5b],al
  4125ff:	add    DWORD PTR [ebp+0x20],eax
  412602:	int    0xa2
  412604:	fadd   QWORD PTR [eax+0x4244a809]
  41260a:	adc    eax,0x1435010
  41260f:	adc    DWORD PTR [ecx+eax*1+0x230f1c88],ebx
  412616:	push   0xc4431408
  41261b:	inc    ecx
  41261c:	sbb    DWORD PTR [eax],0x582814b8
  412622:	add    DWORD PTR [ecx],esp
  412624:	add    al,0x22
  412626:	xchg   ecx,eax
  412627:	xor    BYTE PTR [eax],dl
  412629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41262a:	inc    ebp
  41262b:	or     BYTE PTR [edx],0x2
  41262e:	add    BYTE PTR [ecx],al
  412630:	or     eax,0x88c04011
  412635:	inc    ecx
  412636:	add    BYTE PTR [edx],dl
  412638:	add    DWORD PTR ds:0x80290000,eax
  41263e:	add    BYTE PTR [eax+eax*4+0xb26684c],al
  412645:	or     BYTE PTR [edx+0x0],ch
  412648:	dec    esp
  412649:	adc    al,0x61
  41264b:	sbb    BYTE PTR [ebx-0x70],al
  41264e:	xchg   edi,eax
  41264f:	loopne 0x412695
  412651:	mov    ds:0x2355310,al
  412656:	add    BYTE PTR [esi],cl
  412658:	add    DWORD PTR [ecx+eax*4],eax
  41265b:	and    BYTE PTR [eax+ebp*4],al
  41265e:	xor    al,0xc0
  412661:	and    DWORD PTR [eax],eax
  412663:	adc    BYTE PTR [edx],cl
  412665:	inc    ecx
  412666:	test   BYTE PTR [eax],dl
  412668:	mov    WORD PTR [ebp+eax*2-0x3ebbfce9],ss
  41266f:	push   ecx
  412670:	cmp    BYTE PTR [eax-0x69eff800],ah
  412676:	and    al,0x80
  412678:	add    al,0x40
  41267a:	int    0x84
  41267c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41267d:	add    ch,BYTE PTR [esi+0x4440b000]
  412683:	inc    ecx
  412684:	sub    DWORD PTR [eax+0x244301c],eax
  41268a:	add    DWORD PTR [eax+0x1],0x5043070e
  412691:	sbb    BYTE PTR [ecx],al
  412693:	and    eax,0x1c9a3000
  412698:	sbb    al,0x0
  41269a:	adc    al,BYTE PTR [eax]
  41269c:	loope  0x412640
  41269e:	or     eax,0x804b650
  4126a3:	add    eax,0x82002000
  4126a8:	mov    dh,0x4a
  4126aa:	and    BYTE PTR [ebx+0x43],al
  4126ad:	adc    BYTE PTR [eax],al
  4126af:	dec    eax
  4126b0:	add    DWORD PTR [eax+eax*1],ecx
  4126b3:	and    BYTE PTR [edx],ah
  4126b5:	and    ah,al
  4126b7:	adc    eax,eax
  4126b9:	pop    esp
  4126ba:	or     DWORD PTR [eax],eax
  4126bc:	lock add al,BYTE PTR [eax-0x7ffebeec]
  4126c3:	add    BYTE PTR [eax],dl
  4126c5:	push   0x20c00086
  4126ca:	or     al,0x4d
  4126cc:	add    DWORD PTR [eax+0x60133180],edx
  4126d2:	and    al,0x60
  4126d4:	add    BYTE PTR [eax+edx*2],0x80
  4126d8:	sbb    BYTE PTR [eax],al
  4126da:	and    BYTE PTR [edx+0x760022],cl
  4126e0:	les    eax,FWORD PTR [eax]
  4126e2:	mov    bh,0x10
  4126e4:	and    al,0x1
  4126e6:	cmp    DWORD PTR [eax],0x5034370e
  4126ec:	add    BYTE PTR [ecx],al
  4126ee:	and    BYTE PTR [esp],al
  4126f1:	les    edx,FWORD PTR [ebx]
  4126f3:	shl    DWORD PTR [edx],1
  4126f5:	add    BYTE PTR [ecx],ah
  4126f7:	add    al,0x9
  4126f9:	test   BYTE PTR [eax+0x52],dl
  4126fc:	and    BYTE PTR [ecx],al
  4126fe:	add    BYTE PTR [edx],dl
  412700:	rol    BYTE PTR [edx-0x33fd7d78],1
  412706:	sub    BYTE PTR [eax+eax*1],dh
  412709:	xor    BYTE PTR [eax],dl
  41270b:	sub    al,0x0
  41270d:	pop    ebx
  41270e:	inc    eax
  41270f:	leave  
  412710:	add    DWORD PTR [ebx+eiz*2],0x8620030d
  412717:	adc    BYTE PTR [ecx],cl
  412719:	push   eax
  41271a:	push   es
  41271b:	or     ah,BYTE PTR [eax]
  41271d:	and    BYTE PTR [esi],cl
  41271f:	add    eax,0xa014056
  412724:	test   al,0x22
  412726:	inc    eax
  412727:	mov    WORD PTR [eax+0x2],es
  41272a:	and    DWORD PTR [esp+edx*1],eax
  41272d:	inc    ebp
  41272e:	mov    ah,0x2a
  412730:	adc    BYTE PTR [eax-0x74],al
  412733:	mov    eax,0xe180188a
  412738:	or     cl,BYTE PTR [esi+eax*1]
  41273b:	add    BYTE PTR [edx+0x2],al
  41273e:	and    al,0x28
  412740:	add    BYTE PTR [ebx+0x30061824],al
  412746:	or     BYTE PTR [ecx],0x10
  412749:	adc    al,0x88
  41274b:	pop    eax
  41274c:	sbb    ecx,DWORD PTR [esi]
  41274e:	or     al,BYTE PTR [edx+eiz*4]
  412751:	add    al,0x45
  412753:	add    BYTE PTR [edx],al
  412755:	adc    BYTE PTR [ecx],al
  412757:	adc    eax,DWORD PTR [esi+0x38]
  41275a:	add    DWORD PTR [eax],eax
  41275c:	pushf  
  41275d:	add    dh,al
  41275f:	xor    ah,BYTE PTR [ebp+0x18]
  412762:	add    BYTE PTR [eax],cl
  412764:	mov    BYTE PTR [eax],al
  412766:	pusha  
  412767:	test   al,0xe0
  412769:	es add eax,0x44011289
  41276f:	rcr    DWORD PTR [edx+ecx*1],1
  412772:	or     BYTE PTR [edx],cl
  412774:	add    ah,BYTE PTR [ecx+0x20]
  412777:	mov    DWORD PTR [edx],0xff0048d1
  41277d:	adc    eax,0x44ed58
  412782:	setl   BYTE PTR [ecx-0x4bffdbf0]
  412789:	add    eax,0x20e62301
  41278e:	pop    es
  41278f:	add    DWORD PTR [edx],ecx
  412791:	add    DWORD PTR [eax+0x44],eax
  412794:	test   BYTE PTR [edx],cl
  412796:	xor    BYTE PTR [eax+eax*2+0x231000c],dh
  41279d:	xchg   esp,eax
  41279e:	add    al,0x0
  4127a0:	test   eax,edx
  4127a2:	loopne 0x4127ec
  4127a4:	sbb    BYTE PTR [edx+eiz*2],cl
  4127a7:	(bad)  
  4127a8:	adc    al,0x83
  4127aa:	mov    al,ds:0x14010185
  4127af:	and    al,0x64
  4127b1:	xchg   ecx,eax
  4127b2:	xchg   edx,eax
  4127b3:	adc    al,0x82
  4127b5:	add    BYTE PTR [eax],al
  4127b7:	inc    ecx
  4127b8:	bound  eax,QWORD PTR [ebp+0x19844]
  4127be:	xor    DWORD PTR [ebx+0x41c50451],ecx
  4127c4:	mov    BYTE PTR [edx],al
  4127c6:	push   ss
  4127c7:	nop
  4127c8:	and    BYTE PTR [eax],al
  4127ca:	inc    eax
  4127cb:	sub    eax,0x40204c01
  4127d0:	add    BYTE PTR [ecx+eax*1+0x20500d0],al
  4127d7:	inc    ebx
  4127d8:	add    DWORD PTR [edx+eax*1-0x77dcd3fc],edx
  4127df:	push   eax
  4127e0:	cdq    
  4127e1:	or     al,BYTE PTR [edx+0x3]
  4127e4:	add    BYTE PTR [esi+0x4a],ah
  4127e7:	inc    ecx
  4127e8:	add    al,0x10
  4127ea:	add    al,BYTE PTR [esp+ecx*2]
  4127ed:	inc    ebx
  4127ee:	adc    BYTE PTR [eax+0xe],al
  4127f1:	or     BYTE PTR [eax],dh
  4127f3:	xchg   ecx,eax
  4127f4:	add    BYTE PTR [esp+ebp*1],al
  4127f7:	adc    BYTE PTR [eax+eax*1+0x23],al
  4127fb:	add    al,0x11
  4127fd:	sub    al,0x35
  4127ff:	sub    ah,al
  412801:	rol    BYTE PTR [ebx],0x0
  412804:	add    cl,BYTE PTR [edx]
  412806:	add    BYTE PTR [edx-0x35],0x10
  41280a:	test   al,0x0
  41280c:	rol    DWORD PTR [edx-0x80],1
  41280f:	(bad)  
  412810:	data16 and BYTE PTR [ecx],cl
  412813:	sub    BYTE PTR [eax+0x2],ah
  412816:	adc    BYTE PTR [eax],al
  412818:	push   es
  412819:	push   edx
  41281a:	add    BYTE PTR [eax+0x5a042e28],al
  412820:	add    BYTE PTR [eax],0x83
  412823:	inc    ecx
  412824:	inc    edx
  412825:	mov    eax,ds:0x75831
  41282a:	add    DWORD PTR [eax+0x58001200],eax
  412830:	inc    eax
  412831:	test   BYTE PTR [eax],ah
  412833:	xor    BYTE PTR [eax],dl
  412835:	xor    DWORD PTR [edi+eax*1],edx
  412838:	je     0x4127bc
  41283a:	inc    esp
  41283b:	push   ss
  41283c:	adc    BYTE PTR [eax],dl
  41283e:	add    cl,BYTE PTR [eax]
  412840:	inc    esp
  412841:	inc    ecx
  412842:	enter  0x106,0x13
  412846:	push   0x50
  412848:	and    BYTE PTR [eax],0xc4
  41284b:	lds    ebx,FWORD PTR [eax]
  41284d:	and    BYTE PTR [eax],dl
  41284f:	add    DWORD PTR [eax],esp
  412851:	es nop
  412853:	add    DWORD PTR [edx],0xc0692884
  412859:	adc    BYTE PTR [ecx+0x2180801],dl
  41285f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412860:	cmp    eax,DWORD PTR [eax]
  412862:	adc    al,dh
  412864:	adc    cl,BYTE PTR [eax]
  412866:	add    al,0xa
  412868:	add    BYTE PTR [eax],0x8
  41286b:	enter  0x3024,0x20
  41286f:	popa   
  412870:	lea    edi,[edx]
  412872:	or     dl,BYTE PTR [esi+ecx*1-0x7febdf1f]
  412879:	inc    ebp
  41287a:	xchg   esp,eax
  41287b:	adc    BYTE PTR [eax+esi*1],dl
  41287e:	add    al,BYTE PTR [eax]
  412880:	and    BYTE PTR [ecx],al
  412882:	and    DWORD PTR [ecx-0x36],esp
  412885:	mov    WORD PTR [ebx+eax*1],cs
  412888:	inc    eax
  412889:	adc    BYTE PTR [eax],al
  41288b:	sbb    cl,BYTE PTR [ecx]
  41288d:	adc    DWORD PTR [ebx],ecx
  41288f:	sbb    BYTE PTR [eax],dl
  412891:	mov    DWORD PTR [eax+0x60],ecx
  412894:	adc    DWORD PTR [esi],0xffffff80
  412897:	add    DWORD PTR [edx],ecx
  412899:	add    al,0x6
  41289b:	mov    bl,0x40
  41289d:	and    al,0x40
  41289f:	add    DWORD PTR [eax],esi
  4128a1:	add    BYTE PTR [ebp+0x8],al
  4128a4:	adc    DWORD PTR [ecx],ecx
  4128a6:	push   edx
  4128a7:	loop   0x4128af
  4128a9:	sbb    dl,dh
  4128ab:	pusha  
  4128ac:	mov    eax,ds:0x8802060
  4128b1:	and    bh,BYTE PTR [ecx]
  4128b3:	or     BYTE PTR [eax+0xf080105],bl
  4128b9:	or     edx,DWORD PTR [eax]
  4128bb:	add    DWORD PTR [eax],0x10000442
  4128c1:	add    eax,0xc03a000
  4128c6:	adc    BYTE PTR [eax+ecx*4],al
  4128c9:	and    BYTE PTR [eax+eax*1+0x28],0x20
  4128ce:	add    eax,0x8542c604
  4128d3:	xchg   BYTE PTR [eax],al
  4128d5:	inc    eax
  4128d6:	adc    al,0x0
  4128d8:	add    BYTE PTR [edx+0x220c0010],0x2c
  4128df:	add    al,0x42
  4128e1:	adc    DWORD PTR [ecx+eax*1],0x41000c32
  4128e8:	adc    BYTE PTR [eax],al
  4128ea:	dec    edx
  4128eb:	mov    BYTE PTR [eax+eiz*1],dh
  4128ee:	add    cl,cl
  4128f0:	sub    al,0x86
  4128f2:	xor    BYTE PTR ds:0x44800204,cl
  4128f8:	inc    eax
  4128f9:	sub    cl,BYTE PTR ds:0x4a068234
  4128ff:	or     eax,0x412a088
  412904:	lds    eax,FWORD PTR [eax+eax*4+0x0]
  412908:	adc    BYTE PTR [eax],al
  41290a:	add    BYTE PTR [ecx+eax*4],ah
  41290d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290e:	dec    edx
  41290f:	dec    esp
  412910:	and    al,0x44
  412912:	add    BYTE PTR [eax+0x68],dl
  412915:	adc    DWORD PTR [ecx+0xe],0x3
  412919:	add    DWORD PTR ds:0xc0c19c00,ecx
  41291f:	and    BYTE PTR [edx+0x11],dl
  412922:	add    al,0x42
  412924:	add    esp,DWORD PTR [eax]
  412926:	xchg   al,dl
  412928:	mov    ah,0x9d
  41292a:	inc    eax
  41292b:	cmp    ah,BYTE PTR [eax+0x410003b]
  412931:	add    al,0x40
  412933:	add    BYTE PTR [eax],ch
  412935:	and    DWORD PTR [edi],eax
  412937:	push   eax
  412938:	dec    eax
  412939:	mov    BYTE PTR [ecx],0x0
  41293c:	test   al,0x0
  41293e:	leave  
  41293f:	add    BYTE PTR [esp+edx*1-0x7fee8f6f],al
  412946:	or     eax,0x1000080
  41294b:	adc    eax,0x9440850
  412950:	or     BYTE PTR [eax+eiz*4],al
  412953:	or     al,BYTE PTR [esi+eax*2]
  412956:	push   ecx
  412957:	or     al,al
  412959:	adc    BYTE PTR [edx],cl
  41295b:	ror    DWORD PTR [eax],0x80
  41295e:	mov    ds:0x88d34422,al
  412963:	and    BYTE PTR [eax+0x10],dl
  412966:	or     ah,0x58
  412969:	adc    BYTE PTR [eax+0xd],cl
  41296c:	add    DWORD PTR es:[eax-0x7e],0x80200045
  412974:	or     esp,DWORD PTR ds:0xa0e0648c
  41297a:	and    al,0x14
  41297c:	push   ebp
  41297d:	xor    DWORD PTR [esi],0xc8152014
  412983:	inc    esp
  412984:	rol    BYTE PTR [eax],1
  412986:	add    DWORD PTR [eax],ecx
  412988:	add    al,0x22
  41298a:	adc    DWORD PTR [eax+eiz*1-0x2c],0xc0190304
  412992:	and    BYTE PTR [ebp+ecx*1-0x7db5a786],dl
  412999:	les    eax,FWORD PTR [eax-0x10]
  41299c:	mov    al,BYTE PTR [eax]
  41299e:	or     BYTE PTR [ecx+0xa],0x21
  4129a2:	adc    al,BYTE PTR [eax]
  4129a4:	int    0x8c
  4129a6:	sbb    DWORD PTR [ecx+0x8126106],eax
  4129ac:	inc    esp
  4129ad:	add    BYTE PTR ds:0xb5089200,cl
  4129b3:	int3   
  4129b4:	and    al,BYTE PTR [esp+eax*1]
  4129b7:	loopne 0x4129d1
  4129b9:	ret    
  4129ba:	and    al,0x2
  4129bc:	nop
  4129bd:	xor    BYTE PTR [eax],al
  4129bf:	cmp    al,BYTE PTR [eax]
  4129c1:	or     BYTE PTR [eax],ch
  4129c3:	mov    al,BYTE PTR [eax]
  4129c5:	sub    DWORD PTR [ecx],0xffffff84
  4129c8:	add    al,0x1e
  4129ca:	lods   al,BYTE PTR ds:[esi]
  4129cb:	and    eax,DWORD PTR [ecx-0x3bb7d7f0]
  4129d1:	sub    dl,BYTE PTR [ebp+edi*1+0x8949b4]
  4129d8:	xor    BYTE PTR [eax],al
  4129da:	sub    eax,0x1088c06
  4129df:	shl    BYTE PTR [eax],0x21
  4129e2:	xor    al,0x61
  4129e4:	test   BYTE PTR [eax+0x20],cl
  4129e7:	add    al,0x28
  4129e9:	nop
  4129ea:	pop    es
  4129eb:	mov    DWORD PTR [ecx],esp
  4129ed:	or     BYTE PTR [edx-0x80],ah
  4129f0:	sbb    BYTE PTR [edx],cl
  4129f2:	add    BYTE PTR [eax],al
  4129f4:	sbb    DWORD PTR [esp+eax*2+0x103c4920],edx
  4129fb:	inc    eax
  4129fc:	adc    DWORD PTR [ecx+edx*1+0x11a01921],esp
  412a03:	sbb    eax,edx
  412a05:	sbb    BYTE PTR [edx],dl
  412a07:	mov    DWORD PTR ds:0x510002e0,eax
  412a0d:	mov    BYTE PTR [edx],cl
  412a0f:	sbb    BYTE PTR [eax+0x48],al
  412a12:	xchg   ebp,eax
  412a13:	sbb    BYTE PTR [ebx+eax*4+0x10],al
  412a17:	xchg   esp,eax
  412a18:	push   es
  412a19:	mov    dl,0x5
  412a1b:	xchg   ecx,eax
  412a1c:	inc    edx
  412a1d:	pop    es
  412a1e:	add    DWORD PTR [ecx+edx*1+0x4a],ebx
  412a22:	add    ah,BYTE PTR [eax+0x21]
  412a25:	add    DWORD PTR [eax+eax*4],edx
  412a28:	inc    eax
  412a29:	inc    eax
  412a2a:	adc    DWORD PTR [ecx],edx
  412a2c:	add    DWORD PTR [ecx],eax
  412a2e:	cmp    BYTE PTR [ecx+eax*2-0x71f1fe3d],0x0
  412a36:	add    al,BYTE PTR [edx]
  412a38:	add    BYTE PTR [eax],ah
  412a3a:	and    BYTE PTR [ecx],ah
  412a3c:	add    bl,BYTE PTR [edx]
  412a3e:	inc    ebp
  412a3f:	and    al,0x2
  412a41:	test   BYTE PTR [eax],al
  412a43:	adc    al,0x8a
  412a45:	or     ah,BYTE PTR [esi+0x10]
  412a48:	add    BYTE PTR [edx+edx*1+0x831c95],al
  412a4f:	bound  eax,QWORD PTR [edi+0x800253]
  412a55:	leave  
  412a56:	push   ecx
  412a57:	mov    edx,0xc0080810
  412a5c:	fs push es
  412a5e:	and    cl,BYTE PTR [eax]
  412a60:	jb     0x412a62
  412a62:	pop    es
  412a63:	leave  
  412a64:	add    eax,DWORD PTR [eax]
  412a66:	adc    ebp,DWORD PTR [edx+0x308c1514]
  412a6c:	add    ecx,DWORD PTR [eax+0x50]
  412a6f:	adc    cl,ch
  412a71:	add    DWORD PTR [esi],eax
  412a73:	add    al,BYTE PTR [edx]
  412a75:	and    BYTE PTR [eax+eax*4],ah
  412a78:	inc    esp
  412a79:	mov    ds:0x7310d916,al
  412a7e:	or     BYTE PTR [edi+0x10a6012],al
  412a84:	add    DWORD PTR [ecx],ebx
  412a86:	add    BYTE PTR [edx+0x2],al
  412a89:	add    dl,BYTE PTR [edi]
  412a8b:	sub    BYTE PTR [ebx],0x40
  412a8e:	mov    al,BYTE PTR [eax-0x7e]
  412a91:	and    BYTE PTR [eax+ecx*1+0xc],dl
  412a95:	call   0x10e1aaa2
  412a9a:	push   eax
  412a9b:	add    dh,BYTE PTR [ecx]
  412a9d:	mov    BYTE PTR [eax],al
  412a9f:	add    BYTE PTR [ecx+0x82137],0x52
  412aa6:	mov    esp,0x91004004
  412aab:	push   ss
  412aac:	pusha  
  412aad:	add    ah,BYTE PTR [edx]
  412aaf:	inc    eax
  412ab0:	xchg   ecx,eax
  412ab1:	or     BYTE PTR [esi+0x200e5410],0x30
  412ab8:	inc    esp
  412ab9:	add    dh,BYTE PTR [ecx+0x14]
  412abc:	push   cs
  412abd:	sub    al,0x88
  412abf:	fst    DWORD PTR [eax-0x80]
  412ac2:	push   ss
  412ac3:	add    DWORD PTR [ebx-0x7c],eax
  412ac6:	mov    BYTE PTR [eax+0x1a8070],dh
  412acc:	add    al,0x93
  412ace:	push   eax
  412acf:	add    BYTE PTR [eax+eax*2+0x69],dl
  412ad3:	test   eax,0x4935
  412ad8:	sub    DWORD PTR [ebx+0x2214008],edx
  412ade:	add    cl,BYTE PTR [eax+0x14401082]
  412ae4:	add    eax,0x40458e00
  412ae9:	bound  esp,QWORD PTR [eax]
  412aeb:	add    ah,al
  412aed:	mov    BYTE PTR [edx],al
  412aef:	or     al,cl
  412af1:	and    BYTE PTR [edi+0x4],0x81
  412af5:	push   es
  412af6:	nop
  412af7:	adc    DWORD PTR [ecx+eax*1-0x69b7d742],eax
  412afe:	xor    BYTE PTR [eax],cl
  412b00:	add    BYTE PTR [ecx+0x1002a],ah
  412b06:	sbb    DWORD PTR [edx+0x3815c4f4],esp
  412b0c:	and    DWORD PTR [ecx-0x59bfb6f8],eax
  412b12:	cmp    ah,BYTE PTR [eax-0x35]
  412b15:	add    BYTE PTR [eax+0x9],dl
  412b18:	adc    BYTE PTR [eax-0x5e],al
  412b1b:	and    al,al
  412b1d:	add    BYTE PTR [ebx],al
  412b1f:	adc    eax,DWORD PTR [eax]
  412b21:	jecxz  0x412b41
  412b23:	xor    BYTE PTR [esi+0x1100810],cl
  412b29:	add    BYTE PTR [eax],al
  412b2b:	adc    BYTE PTR [eax+0x20],al
  412b2e:	xchg   DWORD PTR [ebp+eiz*1+0x43a02026],edx
  412b35:	push   ds
  412b36:	cmp    al,0x12
  412b38:	adc    BYTE PTR [edi],0xc5
  412b3b:	and    ebp,DWORD PTR [eax+0x23401bc]
  412b41:	add    bl,BYTE PTR [edx+0x4]
  412b44:	inc    ecx
  412b45:	add    bl,BYTE PTR [ecx+edx*1]
  412b48:	add    BYTE PTR [eax+0x4],0xe8
  412b4c:	inc    eax
  412b4d:	enter  0xc484,0x2e
  412b51:	mov    BYTE PTR [edx],al
  412b53:	adc    BYTE PTR [ebx],cl
  412b55:	add    BYTE PTR [ebp-0x757feeb8],bl
  412b5b:	sub    BYTE PTR [esp+eax*1],ch
  412b5e:	sub    DWORD PTR [eax],ecx
  412b60:	add    al,0x96
  412b62:	add    al,0x40
  412b64:	test   BYTE PTR [ecx],ah
  412b66:	mov    DWORD PTR ds:0x428104e4,eax
  412b6c:	xchg   ebx,eax
  412b6d:	pop    eax
  412b6e:	push   edx
  412b6f:	or     BYTE PTR [ebx+eiz*4],al
  412b72:	inc    edi
  412b73:	adc    BYTE PTR [esi-0x7ded8be8],al
  412b79:	jo     0x412b8f
  412b7b:	inc    eax
  412b7c:	adc    DWORD PTR [eax+0x8e124a],0x4a308440
  412b86:	xchg   edx,eax
  412b87:	add    al,0x72
  412b89:	inc    eax
  412b8a:	lock add DWORD PTR [eax],eax
  412b8d:	or     BYTE PTR [ebp+0x22f09820],al
  412b93:	add    ah,BYTE PTR [ecx+edx*2+0x8004820]
  412b9a:	add    ecx,DWORD PTR [ecx+0x20]
  412b9d:	add    al,0xb1
  412b9f:	push   ds
  412ba0:	push   eax
  412ba1:	sbb    BYTE PTR [eax],ah
  412ba3:	adc    dl,al
  412ba5:	adc    BYTE PTR [eax+eax*4-0x3fe53b93],al
  412bac:	bound  eax,QWORD PTR [eax+0x134030]
  412bb2:	and    BYTE PTR [eax],cl
  412bb4:	jo     0x412c0e
  412bb6:	pop    ss
  412bb7:	xchg   BYTE PTR [eax],al
  412bb9:	add    al,0x1
  412bbb:	add    al,0x2
  412bbd:	add    BYTE PTR [edx],al
  412bbf:	or     BYTE PTR [eax+0x61816211],al
  412bc5:	dec    ecx
  412bc6:	cmp    BYTE PTR [eax],bh
  412bc8:	and    BYTE PTR [edx],al
  412bca:	add    BYTE PTR [edi+ecx*1],al
  412bcd:	or     bl,BYTE PTR [ebp+0x4e]
  412bd0:	test   BYTE PTR [eax+0x45],ah
  412bd3:	add    BYTE PTR [eax+0x2c],0x3e
  412bd7:	inc    eax
  412bd8:	add    al,BYTE PTR [ebp-0x7e9feffc]
  412bde:	xor    al,0xa4
  412be0:	sbb    DWORD PTR [esi],esp
  412be2:	mov    al,ah
  412be4:	inc    ebp
  412be5:	pop    eax
  412be6:	add    al,cl
  412be8:	inc    ecx
  412be9:	popf   
  412bea:	inc    edx
  412beb:	pop    es
  412bec:	lea    eax,[edx]
  412bee:	inc    eax
  412bef:	adc    BYTE PTR [edx+eiz*1],al
  412bf2:	push   0xe0c3649
  412bf7:	or     al,BYTE PTR [ecx]
  412bf9:	pop    esp
  412bfa:	add    DWORD PTR [eax+0x4],0x10a21061
  412c01:	or     ebp,DWORD PTR [eax-0x4c]
  412c04:	dec    eax
  412c05:	add    BYTE PTR [edx+eiz*1],cl
  412c08:	add    DWORD PTR [ecx],edx
  412c0a:	enter  0x1640,0x24
  412c0e:	add    BYTE PTR [eax],bl
  412c10:	mov    DWORD PTR [edx+0x26],eax
  412c13:	bound  ecx,QWORD PTR [eax]
  412c15:	inc    eax
  412c16:	or     edx,DWORD PTR [eax]
  412c18:	rol    BYTE PTR [esi+eax*1],1
  412c1b:	rol    BYTE PTR [eax+0x1600d2ca],0x11
  412c22:	add    BYTE PTR [eax],dl
  412c24:	and    al,BYTE PTR [edx+eiz*1]
  412c27:	bound  eax,QWORD PTR [eax+0x11]
  412c2a:	mov    DWORD PTR [edx],eax
  412c2c:	add    BYTE PTR [ecx+0x3],ah
  412c2f:	leave  
  412c30:	inc    eax
  412c31:	or     DWORD PTR [eax+0x26a12041],eax
  412c37:	in     al,0x20
  412c39:	or     DWORD PTR [eax],eax
  412c3b:	mov    ds:0x8700875,al
  412c40:	add    DWORD PTR [edx],0x20443008
  412c46:	adc    BYTE PTR [ecx],al
  412c48:	test   BYTE PTR ds:0x4184007,al
  412c4e:	add    DWORD PTR [ecx],eax
  412c50:	add    al,0x20
  412c52:	add    DWORD PTR [eax],ecx
  412c54:	add    BYTE PTR [ebx+0x18200087],cl
  412c5a:	add    dl,BYTE PTR [eax]
  412c5c:	and    BYTE PTR [eax],ah
  412c5e:	adc    BYTE PTR [eax],al
  412c60:	add    al,0x44
  412c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c63:	sub    BYTE PTR [eax],al
  412c65:	push   edx
  412c66:	add    BYTE PTR [eax],ch
  412c68:	rol    BYTE PTR [eax],0xd0
  412c6b:	add    BYTE PTR [edx-0x40],al
  412c6e:	and    BYTE PTR [ebx+0x52223c81],cl
  412c74:	fcom   DWORD PTR [edx-0x7f5dbfef]
  412c7a:	inc    eax
  412c7b:	xor    eax,0x2111300
  412c80:	cdq    
  412c81:	nop
  412c82:	add    BYTE PTR [esp+eax*4],ch
  412c85:	add    BYTE PTR [eax],0x4
  412c88:	and    cl,BYTE PTR [ecx+ebp*1]
  412c8b:	add    BYTE PTR [eax],0x70
  412c8e:	shl    BYTE PTR ds:0x1448a01b,0x8
  412c95:	add    ebx,DWORD PTR ds:0x200204e
  412c9b:	mov    ch,0xa8
  412c9d:	add    al,0x1
  412c9f:	add    DWORD PTR [eax+0x1],eax
  412ca2:	inc    eax
  412ca3:	pop    edi
  412ca4:	add    BYTE PTR [eax],ah
  412ca6:	add    BYTE PTR [ecx],ch
  412ca8:	or     al,BYTE PTR [eax]
  412caa:	or     al,0x8
  412cac:	inc    esp
  412cad:	and    ebx,DWORD PTR [edx+eax*2-0x7e]
  412cb1:	xor    BYTE PTR [eax-0x80],0x34
  412cb5:	adc    BYTE PTR [eax+0x61010048],cl
  412cbb:	or     al,BYTE PTR [eax+0x24220000]
  412cc1:	adc    ah,bl
  412cc3:	xchg   edx,eax
  412cc4:	and    BYTE PTR [eax],al
  412cc6:	inc    eax
  412cc7:	adc    DWORD PTR [eax],eax
  412cc9:	add    DWORD PTR [esi+0x1605281c],0x22a00102
  412cd3:	dec    esp
  412cd4:	adc    DWORD PTR [edx],esi
  412cd6:	adc    BYTE PTR [eax+ecx*4],al
  412cd9:	enter  0x29a0,0x92
  412cdd:	and    BYTE PTR [eax+edx*1],al
  412ce0:	inc    esp
  412ce1:	adc    ah,al
  412ce3:	mov    DWORD PTR [eax-0x70],ecx
  412ce6:	add    DWORD PTR [edx-0x6bcfce60],eax
  412cec:	and    al,0x50
  412cee:	rol    BYTE PTR [eax+0x2],0x0
  412cf2:	nop
  412cf3:	inc    edx
  412cf4:	and    BYTE PTR [eax],ah
  412cf6:	adc    DWORD PTR [eax],eax
  412cf8:	add    eax,0x8c3689
  412cfd:	adc    cl,BYTE PTR [eax]
  412cff:	add    DWORD PTR ds:0x214420c7,0xffffffc9
  412d06:	xor    dl,BYTE PTR [eax]
  412d08:	inc    eax
  412d09:	add    bl,BYTE PTR [edx]
  412d0b:	push   0x812
  412d10:	sub    ah,BYTE PTR [edx+eax*1]
  412d13:	add    BYTE PTR [ebp+0x50],al
  412d16:	adc    DWORD PTR [ecx-0x66db7a00],ecx
  412d1c:	inc    eax
  412d1d:	xchg   ebp,eax
  412d1e:	inc    ebx
  412d1f:	rcl    BYTE PTR [eax],0x90
  412d22:	pusha  
  412d23:	enter  0x260,0x9f
  412d27:	push   cs
  412d28:	adc    eax,0xa0a00424
  412d2d:	xchg   BYTE PTR [eax],al
  412d2f:	inc    ecx
  412d30:	les    ebp,FWORD PTR ds:0x40331621
  412d36:	add    al,0x50
  412d38:	dec    esp
  412d39:	add    BYTE PTR [esi],al
  412d3b:	add    al,0xc
  412d3d:	inc    eax
  412d3e:	imul   ecx,DWORD PTR [ecx],0x1085
  412d44:	or     BYTE PTR [ecx],cl
  412d46:	mov    al,ds:0x74498122
  412d4b:	nop
  412d4c:	push   ebp
  412d4d:	add    DWORD PTR [eax],ecx
  412d4f:	add    BYTE PTR [eax],dh
  412d51:	push   eax
  412d52:	or     BYTE PTR [eax+ecx*1-0x40],al
  412d56:	dec    esp
  412d57:	and    DWORD PTR [eax+0x12],esp
  412d5a:	add    BYTE PTR [eax],0x40
  412d5d:	rol    BYTE PTR [eax],0x42
  412d60:	add    BYTE PTR [eax],ah
  412d62:	and    BYTE PTR [eax+0x42],al
  412d65:	add    BYTE PTR [eax+eax*1-0x7bb6f7d0],bl
  412d6c:	inc    edx
  412d6d:	xchg   esp,eax
  412d6e:	adc    BYTE PTR [eax-0x2bdcbbd0],al
  412d74:	cwde   
  412d75:	inc    edx
  412d76:	add    dh,al
  412d78:	add    al,0xa1
  412d7a:	push   ss
  412d7b:	add    DWORD PTR [eax],eax
  412d7d:	es and al,0x4
  412d80:	and    al,0xec
  412d82:	adc    BYTE PTR ds:0xda0800e2,al
  412d88:	and    dl,BYTE PTR [edx+0x2a46060d]
  412d8e:	add    BYTE PTR [eax+0x14140c35],dl
  412d94:	retf   0x8233
  412d97:	add    BYTE PTR [eax-0x6fdc5800],0x18
  412d9e:	and    DWORD PTR [ebp*4-0x3fab7984],ecx
  412da5:	add    al,0x18
  412da7:	pusha  
  412da8:	or     al,BYTE PTR [edi-0x5bf7d7b8]
  412dae:	add    BYTE PTR [eax],dl
  412db0:	and    DWORD PTR [eax-0x37a3bf80],ebp
  412db6:	add    DWORD PTR [ecx],eax
  412db8:	and    al,0x20
  412dba:	adc    BYTE PTR [edx*4+0x2090420],ah
  412dc1:	add    BYTE PTR [edx+0x30],al
  412dc4:	add    BYTE PTR [eax+eax*4],al
  412dc7:	or     BYTE PTR [esp+ecx*1],al
  412dca:	sbb    cl,al
  412dcc:	add    al,0x14
  412dce:	test   BYTE PTR [eax-0x5e9f97bb],al
  412dd4:	inc    esi
  412dd5:	sbb    bh,BYTE PTR [edx+ebp*1]
  412dd8:	add    DWORD PTR [eax],0x17400401
  412dde:	adc    DWORD PTR [edx+ebp*1+0xd],eax
  412de2:	jae    0x412e40
  412de4:	add    DWORD PTR [edx],eax
  412de6:	xor    cl,BYTE PTR [edi+eax*4-0x5c]
  412dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412deb:	inc    eax
  412dec:	or     eax,0xa21b005b
  412df1:	add    al,0x13
  412df3:	add    eax,0xc0294064
  412df8:	add    BYTE PTR [eax+0x10],ah
  412dfb:	mov    al,ds:0x3140084
  412e00:	add    DWORD PTR [ecx],esp
  412e02:	inc    edx
  412e03:	test   BYTE PTR [edi],al
  412e05:	add    BYTE PTR [eax],0x0
  412e08:	add    DWORD PTR [edx+0x0],esp
  412e0b:	leave  
  412e0c:	add    al,0x50
  412e0e:	push   eax
  412e0f:	adc    BYTE PTR [eax],cl
  412e11:	sbb    BYTE PTR [edx],dl
  412e13:	add    BYTE PTR [ecx],dh
  412e15:	add    DWORD PTR [eax+0x215c1960],eax
  412e1b:	add    esp,eax
  412e1d:	pop    esp
  412e1e:	sbb    BYTE PTR [eax+0x244a0200],al
  412e24:	mov    al,ds:0xf6c814c0
  412e29:	sub    al,0x88
  412e2b:	and    BYTE PTR [eax-0x36],al
  412e2e:	pop    eax
  412e2f:	shl    ah,0x44
  412e32:	xor    ah,BYTE PTR [ecx]
  412e34:	or     al,BYTE PTR [ecx]
  412e36:	and    al,0x6e
  412e38:	add    BYTE PTR [eax+ebp*2],cl
  412e3b:	add    cl,BYTE PTR [eax+ecx*1+0x46004e1]
  412e42:	sub    al,0xe1
  412e44:	and    eax,0x40a4d022
  412e49:	pop    esi
  412e4a:	dec    eax
  412e4b:	and    DWORD PTR [eax+0x7a],esi
  412e4e:	or     DWORD PTR [edx],0xffffff91
  412e51:	add    BYTE PTR [eax+0x22],al
  412e54:	add    DWORD PTR [ecx+0x9],eax
  412e57:	test   BYTE PTR [ebx],cl
  412e59:	js     0x412e83
  412e5b:	inc    ebp
  412e5c:	or     al,0x8
  412e5e:	add    DWORD PTR [ecx+0x4140808],edx
  412e64:	add    BYTE PTR [eax+edx*4+0x1],ah
  412e68:	add    al,0x15
  412e6a:	add    al,BYTE PTR fs:[ebx]
  412e6d:	push   cs
  412e6e:	sbb    edx,DWORD PTR [ecx+esi*8+0x5280606]
  412e75:	push   eax
  412e76:	push   eax
  412e77:	xor    al,0x61
  412e79:	add    eax,DWORD PTR [eax+0x20448040]
  412e7f:	leave  
  412e80:	add    al,BYTE PTR [eax+eax*1]
  412e83:	sub    BYTE PTR [eax+0x20d10698],al
  412e89:	xor    DWORD PTR [ecx+0x20440012],eax
  412e8f:	pusha  
  412e90:	pusha  
  412e91:	push   0x40088001
  412e96:	or     BYTE PTR [edx],cl
  412e98:	or     BYTE PTR [ecx],ah
  412e9a:	enter  0x2444,0x24
  412e9e:	push   ss
  412e9f:	and    BYTE PTR [eax-0x55],cl
  412ea2:	add    DWORD PTR [eax],eax
  412ea4:	add    al,0x41
  412ea6:	add    BYTE PTR [eax+0x34088014],cl
  412eac:	jno    0x412ecf
  412eae:	xor    eax,0x9a882000
  412eb3:	dec    ebx
  412eb4:	lds    eax,FWORD PTR [eax]
  412eb6:	and    BYTE PTR [eax+0x30882800],dh
  412ebc:	pushf  
  412ebd:	push   es
  412ebe:	nop
  412ebf:	and    al,BYTE PTR [ebx]
  412ec1:	or     al,0x4
  412ec3:	inc    esi
  412ec4:	push   cs
  412ec5:	add    ebp,DWORD PTR [eax+0x1900002]
  412ecb:	add    ah,cl
  412ecd:	sub    al,0x80
  412ecf:	add    BYTE PTR [eax],dl
  412ed1:	xchg   ebx,eax
  412ed2:	inc    cx
  412ed4:	pusha  
  412ed5:	jno    0x412f1b
  412ed7:	and    al,BYTE PTR [ecx]
  412ed9:	retf   
  412eda:	and    eax,DWORD PTR [eax+eax*1-0x7f7edfd8]
  412ee1:	add    cl,BYTE PTR [eax]
  412ee3:	sub    BYTE PTR [ecx],dl
  412ee5:	and    bl,dh
  412ee7:	inc    edx
  412ee8:	bound  eax,QWORD PTR [eax]
  412eea:	js     0x412f0c
  412eec:	add    BYTE PTR [esi],al
  412eee:	sub    BYTE PTR [eax],al
  412ef0:	add    BYTE PTR [ecx],al
  412ef2:	add    DWORD PTR [esi+eiz*1],ecx
  412ef5:	rol    BYTE PTR [eax-0x655da5e0],cl
  412efb:	dec    ecx
  412efc:	and    al,0x21
  412efe:	push   eax
  412eff:	and    BYTE PTR [ecx],al
  412f01:	inc    ecx
  412f02:	dec    esi
  412f03:	add    DWORD PTR [ecx],esp
  412f05:	push   eax
  412f06:	inc    ecx
  412f07:	inc    edx
  412f08:	cwde   
  412f09:	add    al,0x90
  412f0b:	add    DWORD PTR [eax+0x40a04092],ecx
  412f11:	xchg   ecx,eax
  412f12:	push   ss
  412f13:	inc    esp
  412f14:	add    al,0x84
  412f16:	add    BYTE PTR [edx],dl
  412f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f19:	add    al,BYTE PTR [edx+0x8]
  412f1c:	add    DWORD PTR [ecx+0x26],eax
  412f1f:	or     BYTE PTR [eax-0xef4dfd0],ah
  412f25:	add    al,BYTE PTR [ebx]
  412f27:	dec    eax
  412f28:	add    BYTE PTR [esi+eiz*8],bl
  412f2b:	adc    BYTE PTR [esi+0x20a0a3c0],al
  412f31:	ins    BYTE PTR es:[edi],dx
  412f32:	or     BYTE PTR [eax-0x5afef79c],0x9
  412f39:	push   esi
  412f3a:	sub    BYTE PTR [eax+0x1109a40],0x44
  412f41:	xor    al,BYTE PTR [esi]
  412f43:	inc    eax
  412f44:	inc    edx
  412f45:	push   esi
  412f46:	inc    eax
  412f47:	add    BYTE PTR [edx],al
  412f49:	add    BYTE PTR [edx],cl
  412f4b:	add    BYTE PTR [eax+0x1],0xa0
  412f4f:	add    al,BYTE PTR [eax-0x2f]
  412f52:	call   DWORD PTR ds:0x44ee18
  412f58:	add    al,0x64
  412f5a:	add    DWORD PTR [ebp+0x44038264],0x620005c7
  412f64:	add    DWORD PTR [ebx+0x740526e],esi
  412f6a:	add    BYTE PTR [esi+eax*4],al
  412f6d:	xchg   esp,eax
  412f6e:	adc    DWORD PTR [eax],ebx
  412f70:	add    BYTE PTR [eax+0x3158001c],ah
  412f76:	adc    BYTE PTR ds:0x81084141,al
  412f7c:	or     BYTE PTR [eax],al
  412f7e:	outs   dx,BYTE PTR ds:[esi]
  412f7f:	dec    eax
  412f80:	sbb    cl,BYTE PTR [edi]
  412f82:	push   es
  412f83:	sbb    BYTE PTR [eax+0x4196c210],dh
  412f89:	add    BYTE PTR [eax],al
  412f8b:	mov    al,cl
  412f8d:	dec    esp
  412f8e:	or     edx,DWORD PTR [eax+eiz*1+0x34001040]
  412f95:	and    DWORD PTR [eax+0x454b6a],0x4000004
  412f9f:	mov    al,0x8a
  412fa1:	loopne 0x412fcb
  412fa3:	xor    al,0x1
  412fa5:	mov    BYTE PTR [ebx+0x0],al
  412fa8:	add    BYTE PTR [edx+eax*8],0x36
  412fac:	sub    esp,DWORD PTR [esi]
  412fae:	dec    eax
  412faf:	add    BYTE PTR [edx],ah
  412fb1:	add    al,0x86
  412fb3:	add    DWORD PTR [ecx],esp
  412fb5:	adc    eax,0x10201122
  412fba:	nop
  412fbb:	adc    BYTE PTR [ecx-0x80],dl
  412fbe:	adc    BYTE PTR [eax],0x25
  412fc1:	adc    BYTE PTR [esi],al
  412fc3:	cs inc eax
  412fc5:	and    eax,0x4230188c
  412fca:	xor    BYTE PTR [eax],0x60
  412fcd:	add    al,BYTE PTR [eax+0x52]
  412fd0:	inc    edx
  412fd1:	add    eax,DWORD PTR [eax]
  412fd3:	or     BYTE PTR [eax],0x10
  412fd6:	inc    eax
  412fd7:	and    al,bl
  412fd9:	add    BYTE PTR fs:[eax+0x8400081],0x28
  412fe1:	rol    DWORD PTR [eax+edx*1],0x48
  412fe5:	and    al,BYTE PTR [eax]
  412fe7:	dec    edi
  412fe8:	clc    
  412fe9:	loopne 0x412fef
  412feb:	les    edx,FWORD PTR [eax]
  412fed:	add    BYTE PTR [edi+eiz*8],cl
  412ff0:	aam    0x0
  412ff2:	sbb    bl,BYTE PTR [eax]
  412ff4:	xor    al,0xc0
  412ff6:	add    DWORD PTR [eax-0x1c],eax
  412ff9:	add    al,BYTE PTR [eax+eax*2]
  412ffc:	popa   
  412ffd:	inc    eax
  412ffe:	add    BYTE PTR [eax],al
  413000:	or     al,0x62
  413002:	add    BYTE PTR [eax],cl
  413004:	and    al,0x8
  413006:	dec    eax
  413007:	add    BYTE PTR [eax+edx*1],ah
  41300a:	push   ecx
  41300b:	push   0x4000980
  413010:	add    BYTE PTR [ecx],al
  413012:	add    DWORD PTR [eax+0x2],eax
  413015:	lock hlt 
  413017:	pop    edx
  413018:	rol    BYTE PTR [eax],0x34
  41301b:	xor    BYTE PTR [eax+0x50190188],ah
  413021:	or     dl,al
  413023:	add    BYTE PTR [ecx],ah
  413025:	daa    
  413026:	xor    BYTE PTR [eax],ch
  413028:	adc    ah,0x40
  41302b:	inc    edx
  41302c:	xor    al,BYTE PTR [eax]
  41302e:	pushf  
  41302f:	aam    0xd9
  413031:	add    BYTE PTR [esi+edx*1+0x0],0x26
  413036:	and    BYTE PTR [eax],al
  413038:	lea    eax,[edx]
  41303a:	push   edx
  41303b:	and    BYTE PTR [eax+ecx*4],al
  41303e:	sub    BYTE PTR [ecx],al
  413040:	sub    eax,0x20004470
  413045:	sub    BYTE PTR [edx],al
  413047:	add    al,0x99
  413049:	or     DWORD PTR [eax+eax*1],eax
  41304c:	add    BYTE PTR [ecx],al
  41304e:	or     BYTE PTR ds:0x6408d005,al
  413054:	add    BYTE PTR [edx],0x21
  413057:	test   BYTE PTR [ecx],dh
  413059:	add    BYTE PTR [edx],al
  41305b:	nop
  41305c:	add    al,0x0
  41305e:	jo     0x413064
  413060:	add    DWORD PTR [ecx+0x4239a03],ebp
  413066:	dec    esp
  413067:	push   ss
  413068:	inc    eax
  413069:	test   BYTE PTR [ebp+0x4b010000],dl
  41306f:	jo     0x4130b3
  413071:	push   es
  413072:	inc    ebx
  413073:	add    BYTE PTR [eax],al
  413075:	add    dl,al
  413077:	and    dl,BYTE PTR [eax-0x6f5e5dfe]
  41307d:	adc    BYTE PTR [eax],0x4b
  413080:	and    BYTE PTR [ecx+0x59],al
  413083:	add    DWORD PTR [eax+eax*4],0xffffff9b
  413087:	mov    BYTE PTR [eax+0x20440150],al
  41308d:	push   ecx
  41308e:	les    esi,FWORD PTR ds:0x19c00002
  413094:	mov    al,ds:0xa42a2a4
  413099:	add    al,0x0
  41309b:	inc    eax
  41309c:	inc    edx
  41309d:	push   cs
  41309e:	pop    es
  41309f:	add    BYTE PTR [ebx],0x20
  4130a2:	mov    DWORD PTR [ecx-0x64],edx
  4130a5:	xor    DWORD PTR [eax],ebp
  4130a7:	rcl    BYTE PTR [eax],0x60
  4130aa:	add    BYTE PTR [eax+eiz*1+0x21],bl
  4130ae:	xchg   ecx,eax
  4130af:	test   BYTE PTR [eax],ah
  4130b1:	or     cl,BYTE PTR [eax]
  4130b3:	pop    ss
  4130b4:	and    BYTE PTR [eax+0x4],cl
  4130b7:	add    BYTE PTR [esi-0x80],ah
  4130ba:	dec    eax
  4130bb:	inc    eax
  4130bc:	adc    ah,BYTE PTR [ebp+0x9]
  4130bf:	add    BYTE PTR [eax],al
  4130c1:	adc    BYTE PTR ds:0x36402b0,0x34
  4130c8:	and    BYTE PTR [ecx],al
  4130ca:	mov    ds:0x12688092,al
  4130cf:	push   cs
  4130d0:	and    DWORD PTR [edx],0xa2f72402
  4130d6:	xor    BYTE PTR [ecx],al
  4130d8:	xor    al,0x48
  4130da:	and    al,0x85
  4130dc:	test   DWORD PTR [eax],ebp
  4130de:	mov    al,ds:0x8901022c
  4130e3:	add    BYTE PTR [ecx+0x9208048],dh
  4130e9:	and    BYTE PTR [edx+0x4bf00641],dh
  4130ef:	push   eax
  4130f0:	xchg   BYTE PTR [eax+0x8645c05],dl
  4130f6:	add    BYTE PTR [ecx-0x7bfcb2df],al
  4130fc:	test   al,0x69
  4130fe:	add    cl,BYTE PTR [eax]
  413100:	inc    ecx
  413101:	inc    eax
  413102:	push   0x10
  413104:	add    BYTE PTR ds:0x8425020,dh
  41310a:	test   al,0xb4
  41310c:	nop
  41310d:	sub    al,0xa8
  41310f:	xor    BYTE PTR [eax],dl
  413111:	sub    DWORD PTR [edx],esp
  413113:	inc    eax
  413114:	inc    edx
  413115:	xor    BYTE PTR [ecx+edx*4],al
  413118:	add    DWORD PTR ds:0xb811b13,eax
  41311e:	and    BYTE PTR [ebx+0x2],dl
  413121:	mov    cl,0x0
  413123:	test   al,0x0
  413125:	test   BYTE PTR [ecx],cl
  413127:	or     BYTE PTR [eax+eax*1],al
  41312a:	cdq    
  41312b:	rcl    al,1
  41312d:	sub    al,0x88
  41312f:	adc    DWORD PTR ds:0x4308945,eax
  413135:	inc    eax
  413136:	push   cs
  413137:	and    DWORD PTR [eax+0x225d0201],esi
  41313d:	push   ss
  41313e:	dec    ecx
  41313f:	push   ebp
  413140:	and    BYTE PTR [ecx],al
  413142:	adc    ch,al
  413144:	add    DWORD PTR [eax],eax
  413146:	add    al,0x40
  413148:	sbb    cl,BYTE PTR [eax-0x5a]
  41314b:	inc    eax
  41314c:	push   ss
  41314d:	add    ch,BYTE PTR ds:0x9a021d
  413153:	sub    BYTE PTR [eax],cl
  413155:	and    DWORD PTR [ebx],ebp
  413157:	and    BYTE PTR [edx+0x48502c8],al
  41315d:	add    BYTE PTR [ecx-0x7e],cl
  413160:	and    BYTE PTR [eax],cl
  413162:	inc    ebx
  413163:	jo     0x413166
  413165:	and    BYTE PTR [edx+0x4800429d],cl
  41316b:	or     al,0x4
  41316d:	add    BYTE PTR [ecx],dh
  41316f:	push   esp
  413170:	add    BYTE PTR [eax-0x74],dl
  413173:	add    al,0x10
  413175:	add    al,0x93
  413177:	adc    cl,dh
  413179:	loop   0x4131ae
  41317b:	mov    ds:0x10012160,al
  413180:	add    BYTE PTR [edx],ah
  413182:	push   ecx
  413183:	or     al,0x9
  413185:	dec    ebp
  413186:	add    al,BYTE PTR [ecx]
  413188:	and    bl,BYTE PTR ds:0xe0580804
  41318e:	add    BYTE PTR [eax+0x19040022],0xa0
  413195:	add    BYTE PTR [edx+eax*1+0x61],0xd
  41319a:	or     BYTE PTR [eax],ch
  41319c:	test   BYTE PTR [ecx],ah
  41319e:	sbb    BYTE PTR [edx],bl
  4131a0:	add    bl,BYTE PTR [eax]
  4131a2:	popf   
  4131a3:	add    al,BYTE PTR [ecx]
  4131a5:	adc    DWORD PTR [ecx-0x5dfcbeff],edi
  4131ab:	sub    BYTE PTR [eax+0x13158080],al
  4131b1:	push   eax
  4131b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b3:	mov    WORD PTR [ecx+0x1b03ac0],es
  4131b9:	adc    DWORD PTR [eax],0x96310001
  4131bf:	adc    ecx,DWORD PTR [eax]
  4131c1:	add    BYTE PTR [eax],ah
  4131c3:	ror    DWORD PTR [eax+0x58408800],0x82
  4131ca:	dec    esp
  4131cb:	push   eax
  4131cc:	or     dl,BYTE PTR [eax+esi*2]
  4131cf:	dec    ebp
  4131d0:	rol    BYTE PTR [eax],1
  4131d2:	and    al,0x8
  4131d4:	adc    BYTE PTR [ecx+edx*1-0x1d5f7c00],bl
  4131db:	xor    BYTE PTR [edx],cl
  4131dd:	add    BYTE PTR [eax],0x19
  4131e0:	sbb    BYTE PTR [ecx],al
  4131e2:	add    BYTE PTR [ebp+0x41242400],0x1
  4131e9:	pusha  
  4131ea:	inc    eax
  4131eb:	add    al,0x0
  4131ed:	dec    eax
  4131ee:	dec    ecx
  4131ef:	and    al,0x86
  4131f1:	inc    ebx
  4131f2:	inc    ebp
  4131f3:	inc    ecx
  4131f4:	adc    ecx,DWORD PTR [ecx]
  4131f6:	add    BYTE PTR [eax+0x1],cl
  4131f9:	inc    eax
  4131fa:	add    esp,DWORD PTR [edx]
  4131fc:	add    BYTE PTR [esi],al
  4131fe:	inc    esp
  4131ff:	add    BYTE PTR [eax],0x20
  413202:	and    al,0x48
  413204:	test   DWORD PTR [eax+eax*1-0x80],ecx
  413208:	add    al,0x8
  41320a:	add    BYTE PTR [ecx],al
  41320c:	js     0x41318e
  41320e:	cmp    al,0x8
  413210:	enter  0xe73,0xa
  413214:	add    eax,DWORD PTR [eax+edx*4+0x21]
  413218:	or     BYTE PTR [eax+0x12],al
  41321b:	and    al,0x4
  41321d:	js     0x4131dd
  41321f:	shl    BYTE PTR [eax+0x21],0x1
  413223:	fwait
  413224:	jo     0x41326c
  413226:	inc    esi
  413227:	adc    DWORD PTR [eax+eax*2],eax
  41322a:	nop
  41322b:	inc    esi
  41322c:	mov    BYTE PTR [eax-0x7ffc277c],al
  413232:	sbb    al,0x0
  413234:	sub    BYTE PTR [edx],dh
  413236:	or     DWORD PTR [ecx+0x4],esi
  413239:	add    ah,al
  41323b:	xor    DWORD PTR [esi-0x5fcffffb],ebx
  413241:	mov    WORD PTR [esp+eax*2+0x3],cs
  413245:	or     BYTE PTR [edx],ah
  413247:	xchg   esp,eax
  413248:	adc    DWORD PTR [eax],edx
  41324a:	add    al,0x1
  41324c:	or     BYTE PTR [ecx+ecx*1+0x22213261],al
  413253:	and    al,0x91
  413255:	adc    BYTE PTR [ecx],ah
  413257:	cmp    eax,0x884002c2
  41325c:	add    BYTE PTR [edi],al
  41325e:	push   eax
  41325f:	add    eax,0x58c178f4
  413264:	add    al,BYTE PTR [eax+0x2c00024]
  41326a:	push   0x8400a416
  41326f:	and    cl,BYTE PTR [ebx+0x3]
  413272:	and    BYTE PTR [eax],bl
  413274:	add    al,0x0
  413276:	data16 and BYTE PTR [ecx],dl
  413279:	add    DWORD PTR [esi],eax
  41327b:	rol    dl,0x0
  41327e:	lea    eax,[edx]
  413280:	and    al,0x4
  413282:	add    BYTE PTR [eax+0xb],al
  413285:	inc    ecx
  413286:	adc    BYTE PTR [esp+eiz*4],dl
  413289:	adc    DWORD PTR es:[ebp+0x12],ecx
  41328d:	adc    al,0x1
  41328f:	or     BYTE PTR [ebx],dl
  413291:	add    eax,0x2104e095
  413296:	sbb    BYTE PTR [eax+0x85a110],dl
  41329c:	add    BYTE PTR [eax+0x28],0x0
  4132a0:	and    BYTE PTR [ecx],al
  4132a2:	inc    eax
  4132a3:	adc    BYTE PTR [esi-0x3f47ffee],al
  4132a9:	fs cwde 
  4132ab:	cwde   
  4132ac:	and    DWORD PTR [ecx],ecx
  4132ae:	jno    0x4132b1
  4132b0:	add    BYTE PTR [edx-0x3f9dfe20],al
  4132b6:	add    BYTE PTR [esi],0x20
  4132b9:	sbb    ah,al
  4132bb:	add    al,0x50
  4132bd:	and    al,0x91
  4132bf:	adc    dl,BYTE PTR [esi+0x4]
  4132c2:	cwde   
  4132c3:	shl    BYTE PTR [edx],1
  4132c5:	adc    BYTE PTR [eax+eiz*2],cl
  4132c8:	adc    BYTE PTR [ecx],dl
  4132ca:	dec    eax
  4132cb:	test   DWORD PTR [edx],esp
  4132cd:	or     BYTE PTR [ebx],al
  4132cf:	and    DWORD PTR [eax+eiz*2],ecx
  4132d2:	les    eax,FWORD PTR [eax+0x40410221]
  4132d8:	inc    eax
  4132d9:	add    al,0x20
  4132db:	mov    BYTE PTR [eax+eax*2],dh
  4132de:	and    BYTE PTR [esi],ah
  4132e0:	cmp    BYTE PTR [ecx+eax*4+0x0],ah
  4132e4:	add    BYTE PTR [eax],al
  4132e6:	dec    eax
  4132e7:	or     bl,BYTE PTR fs:[esi+0x3008c04a]
  4132ee:	pusha  
  4132ef:	mov    BYTE PTR [ebx],cl
  4132f1:	add    al,0x80
  4132f3:	sbb    BYTE PTR [eax],dl
  4132f5:	enter  0x2080,0xb0
  4132f9:	xchg   ebx,eax
  4132fa:	or     DWORD PTR [eax],eax
  4132fc:	or     BYTE PTR [eax],bl
  4132fe:	adc    al,al
  413300:	rcr    BYTE PTR [ecx+ecx*2],1
  413303:	add    BYTE PTR [edx+0x10005c24],ah
  413309:	adc    BYTE PTR [eax],al
  41330b:	and    BYTE PTR [ebx+eiz*1+0x4a],bl
  41330f:	inc    eax
  413310:	adc    BYTE PTR [eax+0x16],al
  413313:	sub    BYTE PTR [esi],al
  413315:	and    BYTE PTR [edx+eax*2-0x7c],al
  413319:	and    al,0x46
  41331b:	or     BYTE PTR [eax],dh
  41331d:	add    BYTE PTR [ebp-0x77],ah
  413320:	ror    BYTE PTR [edx],1
  413322:	nop
  413323:	add    BYTE PTR [esi],al
  413325:	add    DWORD PTR [eax+eax*1],eax
  413328:	add    al,0xa0
  41332a:	dec    eax
  41332b:	adc    eax,0x18010008
  413330:	add    BYTE PTR [eax],dl
  413332:	and    BYTE PTR [ebp-0x58],al
  413335:	adc    al,BYTE PTR [edx]
  413337:	push   eax
  413338:	add    DWORD PTR [edi-0x78],ebp
  41333b:	cli    
  41333c:	or     al,0x1
  41333e:	hlt    
  41333f:	adc    DWORD PTR [ebp+0x20],edx
  413342:	pusha  
  413343:	inc    ebp
  413344:	xor    eax,DWORD PTR [eax+0x40810081]
  41334a:	nop
  41334b:	mov    eax,0xc4a02000
  413350:	mov    al,ds:0x8c0b5025
  413355:	and    BYTE PTR [eax+0x22],al
  413358:	mov    al,ds:0x46922824
  41335d:	adc    eax,0xd0010800
  413362:	xchg   ecx,eax
  413363:	add    eax,DWORD PTR [eax+0x10]
  413366:	push   cs
  413367:	pusha  
  413368:	add    BYTE PTR [eax+0x3],ah
  41336b:	push   es
  41336c:	and    DWORD PTR [eax],0xffffffa4
  41336f:	add    BYTE PTR [edx-0x77fff6db],al
  413375:	and    BYTE PTR [esi+eiz*2+0x0],ch
  413379:	and    BYTE PTR [ecx],0x3a
  41337c:	ror    DWORD PTR [edx],1
  41337e:	and    BYTE PTR [ecx],al
  413380:	daa    
  413381:	add    edx,DWORD PTR [eax]
  413383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413384:	adc    dl,cl
  413386:	sub    BYTE PTR [ecx],al
  413388:	sub    eax,0x500012f3
  41338d:	inc    edx
  41338e:	add    al,0xe0
  413390:	push   esp
  413391:	add    BYTE PTR [eax],al
  413393:	sub    BYTE PTR [ecx],al
  413395:	adc    DWORD PTR [eax],eax
  413397:	gs push esp
  413399:	push   es
  41339a:	add    DWORD PTR [eax],ecx
  41339c:	add    BYTE PTR [eax+0x1c],al
  41339f:	and    BYTE PTR [eax],dl
  4133a1:	or     dl,BYTE PTR [edi]
  4133a3:	ret    0x1c81
  4133a6:	add    DWORD PTR es:[ecx],eax
  4133a9:	mov    eax,ds:0x15020413
  4133ae:	and    dl,BYTE PTR [eax+0x24]
  4133b1:	push   ss
  4133b2:	popa   
  4133b3:	test   al,0x4
  4133b5:	loop   0x4133b8
  4133b7:	test   DWORD PTR [eax],eax
  4133b9:	add    BYTE PTR es:[eax+0x20],al
  4133bd:	add    al,0x22
  4133bf:	cwde   
  4133c0:	dec    esp
  4133c1:	sbb    BYTE PTR [esp+ebp*1],ch
  4133c4:	add    BYTE PTR [eax+0x12070005],al
  4133ca:	adc    dl,BYTE PTR [eax]
  4133cc:	inc    eax
  4133cd:	adc    al,0x10
  4133cf:	or     BYTE PTR [eax+eax*1+0x8],al
  4133d3:	add    BYTE PTR [esi+0x1],0x44
  4133d7:	add    BYTE PTR [ecx],al
  4133d9:	add    DWORD PTR [ecx],ebx
  4133db:	inc    ecx
  4133dc:	ret    0x2588
  4133df:	adc    DWORD PTR [eax+ecx*2],edi
  4133e2:	add    ecx,0x282424
  4133e8:	adc    ch,BYTE PTR [edx-0x73dfe9b7]
  4133ee:	sbb    BYTE PTR [eax+0x1100581],dl
  4133f4:	rcl    BYTE PTR [eax+edi*1+0x8064008],1
  4133fb:	and    DWORD PTR [eax],edx
  4133fd:	adc    ah,cl
  4133ff:	test   al,0x0
  413401:	add    al,0x19
  413403:	and    ah,BYTE PTR [edx+0x8]
  413406:	mov    al,ds:0x110a1006
  41340b:	add    BYTE PTR [edx],al
  41340d:	or     DWORD PTR [esi-0x38],eax
  413410:	add    al,BYTE PTR [esi-0x7f]
  413413:	adc    eax,0x92a5d800
  413418:	add    BYTE PTR [ecx],ah
  41341a:	add    BYTE PTR [ecx],ah
  41341c:	inc    esp
  41341d:	mov    dh,0x0
  41341f:	dec    esi
  413420:	xchg   edx,eax
  413421:	cmp    DWORD PTR [eax],esp
  413423:	rol    DWORD PTR [ebp+0x1012840e],0xc4
  41342a:	add    BYTE PTR [eax+eax*2],0xb0
  41342e:	mov    BYTE PTR [eax+0x50],bl
  413431:	add    DWORD PTR [ebx],esi
  413433:	test   DWORD PTR [eax],ebp
  413435:	add    al,BYTE PTR [ecx+0x21362c8]
  41343b:	adc    BYTE PTR [eax],al
  41343d:	dec    esp
  41343e:	add    BYTE PTR [eax],dl
  413440:	dec    eax
  413441:	add    al,0x28
  413444:	ret    
  413445:	stos   DWORD PTR es:[edi],eax
  413446:	inc    ecx
  413447:	mov    al,ds:0x21b40604
  41344c:	inc    eax
  41344d:	adc    al,0x22
  41344f:	adc    BYTE PTR [edx],ch
  413451:	and    BYTE PTR [eax],al
  413453:	xchg   edx,eax
  413454:	or     DWORD PTR [edx+0x74],eax
  413457:	adc    al,0xbd
  413459:	adc    al,0x2
  41345b:	and    eax,0xc280135
  413460:	add    DWORD PTR ds:0x210041a8,edx
  413466:	xor    cl,dh
  413468:	add    eax,0xa0462000
  41346d:	add    BYTE PTR [ecx],cl
  41346f:	and    BYTE PTR [eax+edx*8+0x34120a4],ah
  413476:	add    BYTE PTR [esp+ecx*1-0x40],dl
  41347a:	mov    BYTE PTR [eax+0x601ac311],ah
  413480:	add    al,BYTE PTR [edi+0x10]
  413483:	add    BYTE PTR [ecx],al
  413485:	sbb    BYTE PTR [eax],al
  413487:	inc    ebx
  413488:	or     BYTE PTR [eax],ah
  41348a:	and    BYTE PTR [eax-0x275eedfe],al
  413490:	add    esp,DWORD PTR [eax]
  413492:	add    BYTE PTR [eax],cl
  413494:	push   esp
  413495:	jp     0x413497
  413497:	mov    ds:0x2504432,eax
  41349c:	je     0x4134e1
  41349e:	adc    al,0x40
  4134a0:	loopne 0x41343f
  4134a2:	or     DWORD PTR [eax+0x0],edi
  4134a5:	add    BYTE PTR [ecx],0x20
  4134a8:	add    BYTE PTR [eax-0x7fdfbfe4],dl
  4134ae:	or     BYTE PTR [eax+0x74912900],al
  4134b4:	push   eax
  4134b5:	and    DWORD PTR [ecx+0x20],edi
  4134b8:	add    al,0xa2
  4134ba:	mov    cl,0x40
  4134bc:	inc    eax
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	add    DWORD PTR [ecx],ecx
  4134c1:	and    DWORD PTR [edx+0x1212a16a],0x10
  4134c8:	adc    BYTE PTR [eax+0x10d804a],al
  4134ce:	add    al,0x0
  4134d0:	push   edx
  4134d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d2:	and    BYTE PTR [eax],ch
  4134d4:	inc    eax
  4134d5:	ret    0x241c
  4134d8:	mov    dh,0x89
  4134da:	popa   
  4134db:	xchg   esp,eax
  4134dc:	inc    ebx
  4134dd:	adc    DWORD PTR [eax+0x46d10813],ebp
  4134e3:	inc    esp
  4134e4:	pusha  
  4134e5:	stos   BYTE PTR es:[edi],al
  4134e6:	add    BYTE PTR [eax+0x110000b2],al
  4134ec:	add    BYTE PTR [eax],ah
  4134ee:	add    eax,0x30120052
  4134f3:	js     0x413520
  4134f5:	add    al,0x0
  4134f7:	cmp    BYTE PTR [eax],0x2
  4134fa:	adc    BYTE PTR [ebp+eax*4-0x71ff3ef4],bh
  413501:	or     DWORD PTR [eax],eax
  413503:	push   esp
  413504:	daa    
  413505:	adc    al,0xa
  413507:	mov    BYTE PTR [ecx],dl
  413509:	add    al,0x42
  41350b:	nop
  41350c:	add    al,0x78
  41350e:	and    BYTE PTR [ecx+0x1],dl
  413511:	push   es
  413512:	add    BYTE PTR [ebx+0x54280149],al
  413518:	or     DWORD PTR [ecx+0x0],0x418a2400
  41351f:	push   eax
  413520:	add    BYTE PTR [eax],ah
  413522:	and    ah,BYTE PTR [ecx+0x2]
  413525:	pusha  
  413526:	dec    ebx
  413527:	add    DWORD PTR [eax],0xffffffc0
  41352a:	adc    BYTE PTR [eax],dl
  41352c:	adc    dl,BYTE PTR [ecx+eax*2+0x85096d8]
  413533:	inc    esi
  413534:	cwde   
  413535:	push   es
  413536:	inc    ebp
  413537:	rcl    BYTE PTR [eax],1
  413539:	fs sbb al,al
  41353c:	mov    al,ds:0x2860e06
  413541:	ret    
  413542:	adc    ah,BYTE PTR [ecx]
  413544:	add    al,0x48
  413546:	pusha  
  413547:	add    DWORD PTR [eax+edx*8+0x0],edx
  41354b:	add    DWORD PTR [ecx],ebx
  41354d:	rol    BYTE PTR [eax],0x91
  413550:	and    eax,DWORD PTR [eax]
  413552:	adc    BYTE PTR [eax+0x6],cl
  413555:	inc    eax
  413556:	push   es
  413557:	or     DWORD PTR [eax+0x4028],ebp
  41355d:	out    0x0,eax
  41355f:	xor    al,0x40
  413561:	and    al,0x5
  413563:	adc    al,0x99
  413565:	add    DWORD PTR [eax],0x14
  413568:	nop
  413569:	or     BYTE PTR [ecx+ecx*2],dl
  41356c:	add    al,0x10
  41356e:	lea    edx,[eax]
  413570:	add    al,BYTE PTR [eax+eax*2]
  413573:	mov    BYTE PTR [eax],al
  413575:	xor    al,ch
  413577:	mov    DWORD PTR [eax],edx
  413579:	xor    DWORD PTR [ecx+0x4406314],0x52840524
  413583:	add    al,0x14
  413585:	call   0x40672912
  41358a:	add    eax,DWORD PTR [eax]
  41358c:	add    DWORD PTR [eax+0x62020d00],0x57
  413593:	add    dl,BYTE PTR [esp+eax*4+0x3104104]
  41359a:	add    eax,DWORD PTR [eax]
  41359c:	mov    BYTE PTR [eax],al
  41359e:	add    BYTE PTR [ecx],ah
  4135a0:	push   es
  4135a1:	add    BYTE PTR [eax+0x45331300],al
  4135a7:	adc    DWORD PTR es:[edx],edx
  4135aa:	adc    al,0x1
  4135ac:	adc    BYTE PTR [ecx+0x10864014],ah
  4135b2:	rol    DWORD PTR [eax],1
  4135b4:	dec    esi
  4135b5:	mov    WORD PTR [ecx-0x1e],es
  4135b8:	adc    BYTE PTR [eax],al
  4135ba:	push   ebp
  4135bb:	or     cl,al
  4135bd:	ror    DWORD PTR [eax],1
  4135bf:	mov    al,ds:0xc026a080
  4135c4:	xchg   BYTE PTR [edx],cl
  4135c6:	js     0x4135f3
  4135c8:	inc    ebp
  4135c9:	call   0x8:0x2053850
  4135d0:	xor    DWORD PTR [ecx+0x70],0xe1061008
  4135d7:	adc    al,0x2c
  4135d9:	(bad)  
  4135da:	das    
  4135db:	or     BYTE PTR [eax+0x1c],dl
  4135de:	add    DWORD PTR [ecx+ecx*1],eax
  4135e1:	dec    ecx
  4135e2:	add    DWORD PTR [edx+0x59],ebp
  4135e5:	or     BYTE PTR [eax+0x10a05004],cl
  4135eb:	and    eax,DWORD PTR [eax]
  4135ed:	sbb    eax,DWORD PTR [ebp+0x4c]
  4135f0:	and    al,BYTE PTR [eax-0x77fefffe]
  4135f6:	or     BYTE PTR [ebx],0x2d
  4135f9:	test   BYTE PTR [ecx],al
  4135fb:	xchg   edx,eax
  4135fc:	and    ah,BYTE PTR ds:0x6000007a
  413602:	add    BYTE PTR [eax],cl
  413604:	and    BYTE PTR [edx+0x200502b1],cl
  41360a:	sbb    BYTE PTR [edx+0x29],al
  41360d:	inc    edx
  41360e:	inc    eax
  41360f:	and    BYTE PTR [eax],cl
  413611:	add    BYTE PTR [eax+0x40],al
  413614:	xchg   esp,eax
  413615:	ror    DWORD PTR [esp+eax*4+0x32],0x14
  41361a:	adc    al,0x6
  41361c:	enter  0x8812,0x0
  413620:	sub    BYTE PTR [esi-0x5b3fc6e0],al
  413626:	add    BYTE PTR [eax],ch
  413628:	adc    BYTE PTR [eax],ah
  41362a:	add    al,0x1
  41362d:	pusha  
  41362e:	fs ret 0x5501
  413632:	dec    ebp
  413633:	inc    ecx
  413634:	add    al,0x23
  413636:	cmp    BYTE PTR [eax-0x60],cl
  413639:	push   ebp
  41363a:	or     BYTE PTR [edx],al
  41363c:	and    al,0x41
  41363e:	adc    dl,BYTE PTR ds:0x8865486
  413644:	xor    DWORD PTR [ecx],ecx
  413646:	je     0x413658
  413648:	nop
  413649:	sub    esp,esp
  41364b:	mov    eax,ds:0x60002401
  413650:	add    al,0x22
  413652:	sbb    al,0x50
  413654:	and    BYTE PTR [edx],dl
  413656:	adc    al,0xc0
  413658:	add    BYTE PTR [eax],al
  41365a:	and    BYTE PTR [eax],dl
  41365c:	sbb    BYTE PTR [eax],al
  41365e:	inc    eax
  41365f:	sub    BYTE PTR [eax+eax*1],al
  413662:	add    al,0x82
  413664:	add    eax,0x2884d018
  413669:	or     eax,0x4874c322
  41366e:	cmp    DWORD PTR [ecx],eax
  413670:	sbb    BYTE PTR [ecx],cl
  413672:	sub    BYTE PTR [ebp+0x65],bl
  413675:	cwde   
  413676:	add    cl,BYTE PTR [edx+0x801b1d1]
  41367c:	push   es
  41367d:	ret    
  41367e:	xor    al,BYTE PTR [eax]
  413680:	push   edx
  413681:	nop
  413682:	inc    eax
  413683:	les    ebp,FWORD PTR [eax+0x40086008]
  413689:	push   es
  41368a:	add    BYTE PTR [edx],dl
  41368c:	add    BYTE PTR [eax+0x5b480008],ah
  413692:	inc    eax
  413693:	add    BYTE PTR [esi-0x6eb267a0],cl
  413699:	inc    edi
  41369a:	add    ah,BYTE PTR [esp+ecx*1+0x6c19100]
  4136a1:	add    BYTE PTR [edx],al
  4136a3:	inc    eax
  4136a4:	inc    eax
  4136a5:	push   es
  4136a6:	pusha  
  4136a7:	add    al,BYTE PTR [esi+edx*1+0x49965814]
  4136ae:	adc    BYTE PTR [esp+eax*4],al
  4136b1:	or     BYTE PTR [eax],al
  4136b3:	inc    eax
  4136b4:	or     BYTE PTR [edx],cl
  4136b6:	icebp  
  4136b7:	ret    0x8408
  4136ba:	push   eax
  4136bb:	and    BYTE PTR [eax],0x80
  4136be:	pusha  
  4136bf:	or     BYTE PTR [eax+0x40],al
  4136c2:	or     BYTE PTR [eax+0x6a],0xc2
  4136c6:	jne    0x4136c8
  4136c8:	or     BYTE PTR [eax+0x30],dl
  4136cb:	inc    esi
  4136cc:	sub    BYTE PTR [ecx],al
  4136ce:	pop    ebx
  4136cf:	add    al,BYTE PTR [ebx]
  4136d1:	mov    BYTE PTR [edx+eiz*1],al
  4136d4:	and    ah,BYTE PTR [eax-0x698adb80]
  4136da:	test   BYTE PTR [eax],al
  4136dc:	add    BYTE PTR [ecx],dl
  4136de:	dec    ecx
  4136df:	sar    BYTE PTR [eax],0x11
  4136e2:	and    BYTE PTR [edx],0x34
  4136e5:	mov    ebp,0x50d82880
  4136ea:	add    BYTE PTR ds:0x20c28460,ah
  4136f0:	inc    eax
  4136f1:	sub    al,0x80
  4136f3:	xchg   edx,eax
  4136f4:	add    BYTE PTR [eax],al
  4136f6:	add    ah,al
  4136f8:	mov    al,ds:0xb18164a2
  4136fd:	pushf  
  4136fe:	adc    BYTE PTR [eax],ah
  413700:	pusha  
  413701:	pusha  
  413702:	xor    DWORD PTR [eax+0x40],eax
  413705:	adc    ah,al
  413707:	xchg   edx,eax
  413708:	add    BYTE PTR [ecx+ebx*1],0x1
  41370c:	sbb    DWORD PTR [esp],0x1f084901
  413713:	sbb    BYTE PTR [edx],cl
  413715:	test   BYTE PTR [edi+edx*4],cl
  413718:	add    DWORD PTR [eax],0x3288d20
  41371e:	inc    edx
  41371f:	adc    cl,BYTE PTR [esi-0x7e9e3f38]
  413725:	add    DWORD PTR [ecx+0x4c15ff02],ebx
  41372b:	jmp    0x413771
  41372d:	add    BYTE PTR [eax+0x1f],cl
  413730:	add    cl,BYTE PTR [edx+0x0]
  413733:	jbe    0x413741
  413735:	add    al,0x30
  413737:	push   esp
  413738:	or     cl,BYTE PTR [edx]
  41373a:	mov    ah,BYTE PTR [eax-0x80]
  41373d:	and    bh,BYTE PTR [eax]
  41373f:	add    BYTE PTR [edi+ebp*2+0x53],dl
  413743:	or     al,0x8
  413745:	adc    DWORD PTR [ecx],eax
  413747:	rcl    BYTE PTR [eax],0x61
  41374a:	mov    al,ds:0x12022c90
  41374f:	add    BYTE PTR [eax],al
  413751:	rol    BYTE PTR [ecx],0x77
  413754:	and    BYTE PTR [eax+0x0],al
  413757:	les    ebx,FWORD PTR [edx+0x30]
  41375a:	xchg   edx,eax
  41375b:	les    ebp,FWORD PTR [eax+0x51002]
  413761:	ret    
  413762:	push   es
  413763:	adc    BYTE PTR [eax+0x0],al
  413766:	add    al,0x0
  413768:	pop    esp
  413769:	loop   0x41376b
  41376b:	inc    ecx
  41376c:	ror    DWORD PTR [edx],0xb
  41376f:	dec    eax
  413770:	dec    eax
  413771:	sub    BYTE PTR [eax],0xc9
  413774:	inc    eax
  413775:	add    DWORD PTR [ebx],eax
  413777:	push   0x1a5204a8
  41377c:	add    al,BYTE PTR [edx-0x77fffdec]
  413782:	pop    es
  413783:	push   ecx
  413784:	inc    esp
  413785:	push   cs
  413786:	push   0x20056342
  41378b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378c:	inc    esp
  41378d:	add    esp,DWORD PTR [ebx+eax*8+0xa088088]
  413794:	or     BYTE PTR [ecx+0x10050871],ch
  41379a:	mov    BYTE PTR [edx+eax*1+0x41],cl
  41379e:	xchg   DWORD PTR [edx],eax
  4137a0:	add    BYTE PTR ds:0x8038a0,cl
  4137a6:	xor    BYTE PTR fs:[ecx-0x7cfbe33f],bl
  4137ad:	cmp    DWORD PTR [eax],eax
  4137af:	test   BYTE PTR [esi],al
  4137b1:	or     DWORD PTR [eax],esp
  4137b3:	and    al,0x4a
  4137b5:	inc    esp
  4137b6:	add    BYTE PTR [eax],cl
  4137b8:	push   ss
  4137b9:	bound  eax,QWORD PTR [eax]
  4137bb:	dec    edx
  4137bc:	or     al,0x20
  4137be:	pop    edx
  4137bf:	push   ds
  4137c0:	mov    al,0x1
  4137c2:	inc    edx
  4137c3:	mov    BYTE PTR [eax+0x41],cl
  4137c6:	sub    al,0xb6
  4137c8:	add    al,0x8
  4137ca:	cwde   
  4137cb:	dec    eax
  4137cc:	inc    ecx
  4137cd:	dec    eax
  4137ce:	bound  esp,QWORD PTR [eax]
  4137d0:	inc    eax
  4137d1:	xor    BYTE PTR ds:0xca004021,ah
  4137d7:	push   esi
  4137d8:	xchg   BYTE PTR [esp+eax*4],bl
  4137db:	xor    BYTE PTR [eax+0x8140025],ch
  4137e1:	test   eax,0x2002453
  4137e6:	inc    edx
  4137e7:	inc    edi
  4137e8:	adc    al,0x80
  4137ea:	add    DWORD PTR [eax-0x66767fe0],eax
  4137f0:	lock inc eax
  4137f2:	xor    DWORD PTR [edx],eax
  4137f4:	add    eax,0xa4009002
  4137f9:	add    esp,DWORD PTR [ecx]
  4137fb:	int3   
  4137fc:	adc    DWORD PTR [ebx+0x30],ecx
  4137ff:	inc    eax
  413800:	or     eax,0x11185418
  413805:	inc    eax
  413806:	and    BYTE PTR [eax],dl
  413808:	or     BYTE PTR ds:0x14902002,al
  41380e:	sub    BYTE PTR es:[ecx+0x8],al
  413812:	add    BYTE PTR [esi],dh
  413814:	add    DWORD PTR [eax],ebx
  413816:	and    BYTE PTR [ecx],al
  413818:	add    al,0x11
  41381a:	dec    eax
  41381b:	sub    al,0x40
  41381d:	add    BYTE PTR [ecx],ch
  41381f:	add    al,0xdc
  413821:	cmp    BYTE PTR [edx],al
  413823:	adc    BYTE PTR [eax-0x60],al
  413826:	adc    BYTE PTR [ebp+ecx*1-0x80],0xa0
  41382b:	or     BYTE PTR [esi+eax*1],al
  41382e:	add    DWORD PTR [ecx+0x48],edx
  413831:	loop   0x413859
  413833:	add    BYTE PTR ds:0xc05a1121,0x28
  41383a:	adc    BYTE PTR [eax+0x8ca00],al
  413840:	and    BYTE PTR [eax+0x6040309],0x90
  413847:	inc    eax
  413848:	and    BYTE PTR [esi+0x2306801],al
  41384e:	and    al,ah
  413850:	add    DWORD PTR [ecx+0x1],ecx
  413853:	or     BYTE PTR [ecx+eiz*1],ah
  413856:	add    al,0x2
  413858:	inc    esi
  413859:	sbb    cl,BYTE PTR [ecx+ecx*8+0x11]
  41385d:	mov    DWORD PTR [eax+0x2429a3f2],esp
  413863:	push   es
  413864:	sbb    DWORD PTR [ecx+0x40015530],eax
  41386a:	adc    BYTE PTR [ecx],ah
  41386c:	xchg   ecx,eax
  41386d:	les    esp,FWORD PTR [eax]
  41386f:	inc    esi
  413870:	add    DWORD PTR [eax],eax
  413872:	add    BYTE PTR [edx*2-0x7fdffcfe],cl
  413879:	or     al,al
  41387b:	and    al,0x16
  41387d:	test   al,0x29
  41387f:	inc    eax
  413880:	enter  0x8476,0x8
  413884:	and    dl,ah
  413886:	adc    al,BYTE PTR [eax]
  413888:	or     al,0x68
  41388a:	dec    ecx
  41388b:	and    al,0x8
  41388d:	test   BYTE PTR [ecx+0x1b49882],dl
  413893:	or     al,0x1
  413895:	sub    al,ah
  413897:	adc    cl,0x9
  41389a:	jmp    0xb25298e0
  41389f:	shl    BYTE PTR [ebx],0x80
  4138a2:	push   eax
  4138a3:	and    al,0x68
  4138a5:	stos   BYTE PTR es:[edi],al
  4138a6:	add    BYTE PTR [esi+eax*2+0x12601020],bh
  4138ad:	or     BYTE PTR [eax-0x66],ch
  4138b0:	push   eax
  4138b1:	or     al,0x85
  4138b3:	dec    ecx
  4138b4:	mov    al,ds:0xc0db1124
  4138b9:	add    BYTE PTR [edx+0xc],al
  4138bc:	data16 xor BYTE PTR [eax+0x2c101004],ah
  4138c3:	jae    0x4138c5
  4138c5:	fiadd  DWORD PTR [ebx]
  4138c7:	adc    ah,BYTE PTR [eax]
  4138c9:	inc    eax
  4138ca:	and    BYTE PTR [eax+0x4844e002],al
  4138d0:	cs inc eax
  4138d2:	inc    eax
  4138d3:	add    dl,BYTE PTR [esi+eax*4]
  4138d6:	add    BYTE PTR [eax+0xc],al
  4138d9:	and    dl,bl
  4138db:	add    DWORD PTR [eax],esp
  4138dd:	or     eax,0x4140122
  4138e2:	add    BYTE PTR fs:0x80aa0401,al
  4138e9:	or     eax,0x41000088
  4138ee:	mov    DWORD PTR [eax-0x5e777f8c],esp
  4138f4:	sub    DWORD PTR [esp+eax*1],edx
  4138f7:	mov    esi,DWORD PTR [esi]
  4138f9:	xchg   ecx,eax
  4138fa:	and    BYTE PTR [edx+0x14898502],ah
  413900:	adc    BYTE PTR [esi],0x21
  413903:	and    bl,BYTE PTR [ecx+eax*4]
  413906:	sbb    al,BYTE PTR [edx]
  413908:	pushf  
  413909:	add    BYTE PTR [ebx-0x3c],al
  41390c:	add    al,0xf2
  41390e:	and    dl,BYTE PTR [esi+0x10874a60]
  413914:	mov    BYTE PTR [ecx+0x55440108],bl
  41391a:	and    BYTE PTR [edx+0x0],ah
  41391d:	adc    BYTE PTR [eax],dl
  41391f:	mov    al,dh
  413921:	xchg   esi,eax
  413922:	and    BYTE PTR [ebx-0x5ebbe780],al
  413928:	cmp    al,0x85
  41392a:	xchg   ebp,eax
  41392b:	add    eax,DWORD PTR [eax+0x4004a4e1]
  413931:	enter  0x2084,0x30
  413935:	test   BYTE PTR [esi-0x7c],cl
  413938:	dec    ecx
  413939:	or     al,0x0
  41393b:	inc    eax
  41393c:	test   DWORD PTR [edx],esp
  41393e:	add    BYTE PTR [esi],dh
  413940:	or     BYTE PTR [ecx+eax*4],dl
  413943:	adc    al,0x87
  413945:	and    DWORD PTR [edx+0x6422c400],eax
  41394b:	and    ecx,DWORD PTR [edx]
  41394d:	sub    al,0x82
  41394f:	add    eax,0x62027504
  413955:	mov    eax,ds:0x83281e11
  41395a:	adc    BYTE PTR [eax+eax*1],0x40
  41395e:	adc    BYTE PTR [edx+ebp*1],ah
  413961:	or     al,0x8a
  413963:	add    BYTE PTR [eax],dl
  413965:	add    al,0x90
  413967:	pop    es
  413968:	sbb    al,0x44
  41396a:	je     0x4139c0
  41396c:	push   cs
  41396d:	xor    BYTE PTR [eax+0x104002c0],dl
  413973:	add    BYTE PTR [eax],cl
  413975:	or     BYTE PTR [eax],bl
  413977:	add    al,0x24
  413979:	test   BYTE PTR [eax],al
  41397b:	inc    ebp
  41397c:	cmp    al,0x50
  41397e:	add    BYTE PTR [eax],dl
  413980:	add    ch,BYTE PTR [eax+0x0]
  413983:	add    BYTE PTR [eax+eiz*1+0x15],ch
  413987:	dec    eax
  413988:	adc    BYTE PTR [eax],dl
  41398a:	xchg   ecx,eax
  41398b:	ret    0x10e4
  41398e:	lea    esp,[eax]
  413990:	add    DWORD PTR [edx],ebx
  413992:	add    BYTE PTR [eax+0x16],al
  413995:	cmp    al,BYTE PTR [esp+eax*2+0x10]
  413999:	adc    al,BYTE PTR [eax+0x24]
  41399c:	adc    eax,eax
  41399e:	adc    BYTE PTR [eax],cl
  4139a0:	xchg   ecx,eax
  4139a1:	xor    BYTE PTR [eax],dl
  4139a3:	push   esp
  4139a4:	or     BYTE PTR [eax],cl
  4139a6:	push   esp
  4139a7:	and    al,0x2
  4139a9:	inc    eax
  4139aa:	adc    al,0x62
  4139ac:	inc    eax
  4139ad:	adc    bh,BYTE PTR [ecx]
  4139af:	ret    
  4139b0:	inc    esp
  4139b1:	add    BYTE PTR [ecx],al
  4139b3:	and    al,al
  4139b5:	test   DWORD PTR [esi+0x8],esp
  4139b8:	adc    ecx,DWORD PTR [eax+ecx*4]
  4139bb:	add    eax,0xe2412144
  4139c0:	add    BYTE PTR [edx],0x62
  4139c3:	and    ch,BYTE PTR [esp+eax*8-0x57fdfbef]
  4139ca:	add    al,0x91
  4139cc:	adc    DWORD PTR [eax],edx
  4139ce:	inc    ecx
  4139cf:	inc    edi
  4139d0:	adc    DWORD PTR [eax],0x9000424
  4139d6:	call   0xa503a71d
  4139db:	add    BYTE PTR [ecx+0x10],al
  4139de:	mov    BYTE PTR [esi],al
  4139e0:	leave  
  4139e1:	add    al,0x7
  4139e3:	add    DWORD PTR [eax+eax*1+0x4a],0xb2d720
  4139eb:	add    eax,0x18eb0261
  4139f0:	xchg   DWORD PTR [eax],edx
  4139f2:	add    al,0xc1
  4139f4:	add    BYTE PTR [eax],cl
  4139f6:	and    BYTE PTR [eax],cl
  4139f8:	adc    BYTE PTR [ebx],al
  4139fa:	retf   
  4139fb:	and    al,0x84
  4139fd:	or     eax,0x10600c32
  413a02:	adc    DWORD PTR [edx+0x43],0x84638824
  413a09:	and    DWORD PTR [eax+0x30580128],0x44
  413a10:	or     dl,BYTE PTR [ecx]
  413a12:	and    al,0x20
  413a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a15:	inc    edx
  413a16:	mov    BYTE PTR [ecx],ah
  413a18:	add    BYTE PTR [esi],0x3
  413a1b:	and    al,0x18
  413a1d:	add    BYTE PTR [eax+eax*1],0xa6
  413a21:	or     DWORD PTR [eax+0x33055080],esp
  413a27:	or     al,0x31
  413a29:	inc    edi
  413a2a:	inc    eax
  413a2b:	adc    eax,0xb2309385
  413a30:	add    BYTE PTR [ecx-0x6fc37f2b],ah
  413a36:	and    BYTE PTR [eax],al
  413a38:	pusha  
  413a39:	add    BYTE PTR [edx+0x49],bl
  413a3c:	xor    al,0xca
  413a3e:	mov    al,dh
  413a40:	test   BYTE PTR [eax+eax*1+0x10],al
  413a44:	and    DWORD PTR [eax],eax
  413a46:	adc    al,0x60
  413a48:	push   eax
  413a49:	or     al,0xe
  413a4b:	das    
  413a4c:	pop    esp
  413a4d:	add    DWORD PTR [edi],esp
  413a4f:	fadd   DWORD PTR [eax+edx*4+0xa0023]
  413a56:	add    BYTE PTR [edx+0x1],dl
  413a59:	cwde   
  413a5a:	and    al,0xc8
  413a5c:	and    al,0x4
  413a5e:	inc    ecx
  413a5f:	sbb    BYTE PTR [eax],0x0
  413a62:	sbb    BYTE PTR [ecx],al
  413a64:	add    al,BYTE PTR [eax]
  413a66:	sub    al,0x34
  413a68:	call   0x814374
  413a6d:	add    BYTE PTR [eax],ah
  413a6f:	mov    BYTE PTR [edx],dh
  413a71:	inc    edx
  413a72:	sbb    DWORD PTR [ecx],ecx
  413a74:	pop    eax
  413a75:	sub    DWORD PTR [eax+ecx*2+0x23848648],esp
  413a7c:	test   BYTE PTR [esi],al
  413a7e:	add    al,0x0
  413a80:	add    BYTE PTR [eax+0x580a0518],al
  413a86:	add    bh,BYTE PTR [eax+ecx*4]
  413a89:	enter  0x81,0x0
  413a8d:	push   ss
  413a8e:	adc    BYTE PTR [ebx],dl
  413a90:	adc    BYTE PTR ds:0x10221088,al
  413a96:	add    DWORD PTR [eax+eax*4],eax
  413a99:	xor    al,0x90
  413a9b:	add    BYTE PTR [eax+0x8000101],ah
  413aa1:	test   DWORD PTR [ecx+0x4800222],0x27214480
  413aab:	mov    al,ds:0xe002d115
  413ab0:	pusha  
  413ab1:	add    BYTE PTR [ebx],al
  413ab3:	arpl   WORD PTR [ecx+0x40],sp
  413ab6:	shl    BYTE PTR [eax],1
  413ab8:	and    DWORD PTR [esp+eax*2],esp
  413abb:	pop    esp
  413abc:	(bad)  
  413abd:	mov    al,ds:0x81200034
  413ac2:	xor    BYTE PTR [esp+edx*2+0x61140601],0x16
  413aca:	mov    al,ds:0x78084403
  413acf:	adc    BYTE PTR [eax],bl
  413ad1:	add    BYTE PTR [eax+0xc190008],al
  413ad7:	and    al,0x32
  413ad9:	add    al,BYTE PTR [ecx]
  413adb:	enter  0x4821,0x80
  413adf:	add    dh,BYTE PTR [ecx-0x5c]
  413ae2:	mov    al,BYTE PTR [eax]
  413ae4:	sbb    BYTE PTR [ecx],al
  413ae6:	rol    BYTE PTR [edx+ecx*2],cl
  413ae9:	dec    eax
  413aea:	inc    eax
  413aeb:	xor    al,0x80
  413aee:	and    BYTE PTR [edx],0x4b
  413af1:	or     eax,0xa9009828
  413af6:	and    al,BYTE PTR [eax+eax*1]
  413af9:	sbb    DWORD PTR [edx],esi
  413afb:	or     BYTE PTR [eax-0x70],cl
  413afe:	sub    al,BYTE PTR [eax]
  413b00:	adc    BYTE PTR [eax+0x2c401493],al
  413b06:	add    DWORD PTR [ecx],esi
  413b08:	xor    BYTE PTR [edx],al
  413b0a:	dec    eax
  413b0b:	and    al,0x23
  413b0d:	add    cl,BYTE PTR [eax]
  413b0f:	mov    ah,0x40
  413b11:	ret    0x8048
  413b14:	add    BYTE PTR [eax],al
  413b16:	or     BYTE PTR [eax],al
  413b18:	cmp    al,0xd3
  413b1a:	adc    cl,0x42
  413b1d:	test   BYTE PTR [ecx+0x30],al
  413b20:	or     DWORD PTR [eax+0x200001],edx
  413b26:	ins    BYTE PTR es:[edi],dx
  413b27:	mov    BYTE PTR [esi],dl
  413b29:	inc    eax
  413b2a:	and    al,0x84
  413b2c:	mov    BYTE PTR [edx+ecx*1],ah
  413b2f:	inc    eax
  413b30:	inc    eax
  413b31:	add    DWORD PTR [eax+0x460d3000],eax
  413b37:	adc    al,BYTE PTR [ecx+eax*1]
  413b3a:	and    ah,BYTE PTR [eax]
  413b3c:	inc    ecx
  413b3d:	pop    ecx
  413b3e:	add    dl,BYTE PTR [esi]
  413b40:	adc    al,BYTE PTR [eax]
  413b42:	inc    eax
  413b43:	and    BYTE PTR [ebp+0x2a],ah
  413b46:	inc    eax
  413b47:	cmp    BYTE PTR [edx-0x376ef73f],cl
  413b4d:	add    BYTE PTR [ecx+0x18c2b],al
  413b53:	add    DWORD PTR [edx],ecx
  413b55:	inc    ecx
  413b56:	add    DWORD PTR [edx],eax
  413b58:	mov    dl,0xec
  413b5a:	add    DWORD PTR [edx],eax
  413b5c:	and    DWORD PTR [eax],0x24108034
  413b62:	push   ecx
  413b63:	or     dl,BYTE PTR [eax-0x67709f80]
  413b69:	pop    eax
  413b6a:	adc    DWORD PTR [eax+0x4049904],edi
  413b70:	or     BYTE PTR [edx],bh
  413b72:	rol    DWORD PTR [eax],cl
  413b74:	test   BYTE PTR [eax],al
  413b76:	pusha  
  413b77:	inc    edx
  413b78:	nop
  413b79:	pop    es
  413b7a:	add    BYTE PTR [ebx+eax*2-0x60],ah
  413b7e:	mov    ds:0x230050d1,al
  413b83:	or     al,0x44
  413b85:	add    BYTE PTR [eax],al
  413b87:	aaa    
  413b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b89:	mov    al,ds:0x22240082
  413b8e:	inc    edx
  413b8f:	add    al,0x1
  413b91:	inc    edx
  413b92:	add    BYTE PTR [ecx],ah
  413b94:	mov    BYTE PTR [eax],al
  413b96:	xchg   DWORD PTR [esi],eax
  413b98:	add    dl,BYTE PTR [edx]
  413b9a:	adc    al,0xe
  413b9c:	and    eax,0x378a210
  413ba1:	mov    edx,0x353ab901
  413ba6:	adc    DWORD PTR [eax],esp
  413ba8:	or     BYTE PTR [ecx],al
  413baa:	add    ah,BYTE PTR [eax+eiz*1]
  413bad:	inc    ecx
  413bae:	xor    DWORD PTR [edx],ebp
  413bb0:	shl    BYTE PTR [eax+0x9084202],0x8
  413bb7:	push   cs
  413bb8:	and    BYTE PTR [eax],0x21
  413bbb:	add    ch,BYTE PTR [eax]
  413bbd:	push   0x2
  413bbf:	xor    DWORD PTR [eax],eax
  413bc1:	add    BYTE PTR [ecx+ecx*1+0x26],al
  413bc5:	rol    BYTE PTR [eax+0x52],0x40
  413bc9:	or     BYTE PTR [ecx+0x4],ch
  413bcc:	add    eax,0x20831514
  413bd1:	add    ah,BYTE PTR [esp+ecx*1]
  413bd4:	enter  0xcd03,0x20
  413bd8:	jo     0x413be3
  413bda:	add    dl,cl
  413bdc:	or     BYTE PTR [esi+0x13120],al
  413be2:	add    BYTE PTR ds:0x1006d842,cl
  413be8:	push   eax
  413be9:	add    BYTE PTR [esi],ah
  413beb:	add    edx,DWORD PTR [edx]
  413bed:	mov    BYTE PTR [eax+0xb400026],dh
  413bf3:	add    eax,DWORD PTR [ecx+0x78]
  413bf6:	sbb    dh,0xe1
  413bf9:	xor    dl,BYTE PTR [edx-0x5f]
  413bfc:	add    al,BYTE PTR [eax]
  413bfe:	inc    eax
  413bff:	add    DWORD PTR [eax],eax
  413c01:	sub    DWORD PTR [eax+0x20],eax
  413c04:	add    esp,DWORD PTR [eax]
  413c06:	test   eax,0x10012490
  413c0b:	add    BYTE PTR [eax],dl
  413c0d:	jae    0x413b9f
  413c0f:	add    DWORD PTR [eax],0x56060600
  413c15:	inc    eax
  413c16:	or     eax,eax
  413c18:	sub    al,0xa8
  413c1a:	sub    al,0x2
  413c1c:	inc    eax
  413c1d:	add    ebx,0x85401500
  413c23:	or     BYTE PTR [eax],0x40
  413c26:	add    DWORD PTR [eax+0x48],0x38080
  413c2d:	add    DWORD PTR [edx+0x483402a4],eax
  413c33:	nop
  413c34:	xor    DWORD PTR [edx+0x1884084],edx
  413c3a:	add    BYTE PTR [edx],dh
  413c3c:	or     BYTE PTR [ecx],0xa4
  413c3f:	adc    BYTE PTR [eax],al
  413c41:	push   eax
  413c42:	xchg   ecx,eax
  413c43:	mov    al,ds:0x10020024
  413c48:	stos   BYTE PTR es:[edi],al
  413c49:	adc    BYTE PTR [eax+0x49042540],ch
  413c4f:	add    DWORD PTR [eax+eax*1+0x0],ecx
  413c53:	add    al,0x21
  413c55:	adc    BYTE PTR [edx],ch
  413c57:	push   esp
  413c58:	or     DWORD PTR [eax+0x10929068],esp
  413c5e:	push   es
  413c5f:	add    BYTE PTR [eax+ebx*1],cl
  413c62:	test   BYTE PTR [ecx],al
  413c64:	rcr    BYTE PTR [esi],1
  413c66:	xor    dl,BYTE PTR [ecx+0x8]
  413c69:	add    cl,BYTE PTR [eax+0x52]
  413c6c:	test   BYTE PTR [eax+0x202a0248],cl
  413c72:	add    BYTE PTR [eax+0x560b0821],dl
  413c78:	or     al,0x0
  413c7a:	add    DWORD PTR [edx],0x4480001
  413c80:	push   esi
  413c81:	ror    BYTE PTR ds:0x201144d0,0xe8
  413c88:	add    BYTE PTR [eax],al
  413c8a:	and    esp,DWORD PTR [edx+0x406022c0]
  413c90:	in     al,0x74
  413c92:	add    BYTE PTR [eax+edx*4+0x20250e0],ah
  413c99:	mov    al,al
  413c9b:	push   es
  413c9c:	add    BYTE PTR [esi],al
  413c9e:	nop
  413c9f:	dec    edx
  413ca0:	sbb    BYTE PTR [esp+eax*1],cl
  413ca3:	adc    DWORD PTR [eax],0x83429400
  413ca9:	add    cl,BYTE PTR [eax]
  413cab:	inc    ebx
  413cac:	adc    BYTE PTR [eax+0x34003c0],dl
  413cb2:	enter  0x840,0x2
  413cb6:	push   eax
  413cb7:	add    BYTE PTR [ecx+0x18020a1],0x28
  413cbe:	add    BYTE PTR [eax],al
  413cc0:	or     DWORD PTR [ebx],eax
  413cc2:	nop
  413cc3:	or     BYTE PTR ds:0x3810d202,al
  413cc9:	and    ah,BYTE PTR [ecx]
  413ccb:	sub    DWORD PTR [ecx+eax*1],0x910e286c
  413cd2:	inc    eax
  413cd3:	xor    DWORD PTR [eax+eax*2],esp
  413cd6:	adc    al,ch
  413cd8:	add    BYTE PTR [eax+0x61d0208],dh
  413cde:	or     ebp,DWORD PTR [ecx]
  413ce0:	and    al,0x12
  413ce3:	mov    BYTE PTR [ecx+0x40],ch
  413ce6:	inc    eax
  413ce7:	add    DWORD PTR [eax],ecx
  413ce9:	add    BYTE PTR [ecx],0xf8
  413cec:	mov    al,0x89
  413cee:	inc    eax
  413cef:	push   eax
  413cf0:	adc    BYTE PTR [edx],ch
  413cf2:	and    DWORD PTR [ecx],edx
  413cf4:	stc    
  413cf5:	adc    BYTE PTR [eax+0x0],al
  413cf8:	call   0x8090:0x8020181
  413cff:	or     BYTE PTR [ecx],0x89
  413d02:	add    BYTE PTR [ecx+edx*1+0x20],ah
  413d06:	sbb    DWORD PTR [eax],esi
  413d08:	xor    BYTE PTR [eax],ah
  413d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d0b:	adc    BYTE PTR [eax-0x7b],ah
  413d0e:	or     BYTE PTR [eax],al
  413d10:	or     BYTE PTR [esp+ecx*1],al
  413d13:	mov    ds:0x47011424,eax
  413d18:	add    DWORD PTR [ecx+0x4080dd00],ecx
  413d1e:	push   eax
  413d1f:	add    ah,BYTE PTR [ebx+0x27002010]
  413d25:	or     DWORD PTR [eax],eax
  413d27:	adc    BYTE PTR [ecx],cl
  413d29:	add    BYTE PTR [eax],dh
  413d2b:	add    DWORD PTR [eax],eax
  413d2d:	mov    al,ds:0x1308c982
  413d32:	test   BYTE PTR [ecx],al
  413d34:	adc    bl,BYTE PTR [edx]
  413d36:	add    BYTE PTR [ecx+0x31],bl
  413d39:	adc    al,BYTE PTR [ecx+edx*1-0x7f]
  413d3d:	add    al,0x48
  413d3f:	and    BYTE PTR [edx],cl
  413d41:	xor    cl,BYTE PTR [ecx+eiz*4+0x1048150]
  413d48:	and    BYTE PTR [eax],dl
  413d4a:	inc    ebp
  413d4b:	add    DWORD PTR [eax+eax*1+0x40869],eax
  413d52:	push   es
  413d53:	or     BYTE PTR [esi],al
  413d55:	inc    esp
  413d56:	ret    0x8810
  413d59:	or     BYTE PTR [edx],al
  413d5b:	add    bh,BYTE PTR [eax+0x0]
  413d5e:	mov    DWORD PTR fs:[eax+0x2910840c],esp
  413d65:	inc    eax
  413d66:	adc    BYTE PTR [ecx+eax*1],0x59
  413d6a:	adc    al,BYTE PTR [ecx-0x53f6ff8c]
  413d70:	inc    esp
  413d71:	sbb    eax,0x80080012
  413d76:	and    BYTE PTR [eax+eax*4],dl
  413d79:	out    0x4,al
  413d7b:	and    DWORD PTR [eax],esp
  413d7d:	add    al,0x23
  413d7f:	mov    BYTE PTR [esi+0x1400208],al
  413d85:	sbb    DWORD PTR [eax-0x6f],esp
  413d88:	pop    esi
  413d89:	lods   al,BYTE PTR ds:[esi]
  413d8a:	pusha  
  413d8b:	test   BYTE PTR [eax+eax*1+0x18],dl
  413d8f:	pop    eax
  413d90:	sub    al,ah
  413d92:	adc    DWORD PTR [ecx],esp
  413d94:	add    BYTE PTR [esi],al
  413d96:	or     DWORD PTR [ecx+edx*1+0x14090901],eax
  413d9d:	or     BYTE PTR [esp+eax*4],al
  413da0:	inc    esp
  413da1:	enter  0x1004,0x80
  413da5:	add    BYTE PTR [esi+edx*1],al
  413da8:	push   edi
  413da9:	or     DWORD PTR [esi+ebp*4+0x2],eax
  413dad:	add    BYTE PTR [eax+edi*1+0x136018],al
  413db4:	in     al,dx
  413db5:	cwde   
  413db6:	add    BYTE PTR [esi],cl
  413db8:	or     al,0x60
  413dba:	jo     0x413d41
  413dbc:	aam    0x71
  413dbe:	add    al,0x60
  413dc0:	inc    eax
  413dc1:	inc    esi
  413dc2:	and    esi,DWORD PTR [ecx]
  413dc4:	mov    ds:0x60000363,al
  413dc9:	sbb    al,0x89
  413dcb:	test   al,0x18
  413dcd:	pusha  
  413dce:	adc    DWORD PTR [eax+eax*1],ebx
  413dd1:	add    dl,al
  413dd3:	xor    DWORD PTR [esi-0x660f5bee],ebp
  413dd9:	add    al,BYTE PTR [eax]
  413ddb:	push   es
  413ddc:	or     BYTE PTR [eax],ah
  413dde:	adc    DWORD PTR [eax],ebx
  413de0:	push   eax
  413de1:	data16 loop 0x413e24
  413de4:	or     DWORD PTR [edx+0x40],esp
  413de7:	and    al,0x9
  413de9:	add    al,BYTE PTR [ebx]
  413deb:	and    BYTE PTR [eax],al
  413ded:	add    BYTE PTR [esi],dl
  413def:	add    al,0x0
  413df1:	add    ecx,edx
  413df3:	mov    al,ds:0x90140
  413df8:	adc    BYTE PTR [eax],ah
  413dfa:	js     0x413e44
  413dfc:	xor    DWORD PTR [eax-0x37577fbc],ebp
  413e02:	adc    BYTE PTR [ecx-0x7f3fffb2],al
  413e08:	mov    cl,BYTE PTR [eax]
  413e0a:	add    BYTE PTR [eax],al
  413e0c:	inc    eax
  413e0d:	and    BYTE PTR [eax+eax*2],al
  413e10:	and    BYTE PTR [edx],0x22
  413e13:	inc    eax
  413e14:	push   ss
  413e15:	xchg   ecx,eax
  413e16:	push   ecx
  413e17:	add    DWORD PTR [ebp+0x0],eax
  413e1a:	adc    DWORD PTR [eax],eax
  413e1c:	(bad)  
  413e1d:	dec    eax
  413e1e:	inc    edx
  413e1f:	mov    ah,0x25
  413e21:	add    BYTE PTR [eax],dl
  413e23:	push   es
  413e24:	mov    ch,0x24
  413e26:	add    BYTE PTR [ebx+0x5],al
  413e29:	inc    ebp
  413e2a:	add    DWORD PTR ds:0xa0000224,eax
  413e30:	add    DWORD PTR [edx+0x64],0x4820e4a
  413e37:	inc    edi
  413e38:	or     BYTE PTR [esp+eax*1+0x6700589a],dl
  413e3f:	hlt    
  413e40:	add    dl,al
  413e42:	push   cs
  413e43:	add    al,0xb4
  413e45:	add    BYTE PTR [esp+edx*8],0x0
  413e49:	mov    DWORD PTR [eax],eax
  413e4b:	adc    BYTE PTR [edx],0x27
  413e4e:	pusha  
  413e4f:	daa    
  413e50:	add    dh,BYTE PTR [ecx]
  413e52:	or     BYTE PTR ds:0x1196e308,0xa9
  413e59:	ret    0x621
  413e5c:	test   BYTE PTR [eax+eax*1],cl
  413e5f:	add    al,0x86
  413e61:	or     BYTE PTR [ecx],dl
  413e63:	and    DWORD PTR [eax+0x32ce10],edx
  413e69:	push   es
  413e6a:	pusha  
  413e6b:	dec    eax
  413e6c:	or     ah,al
  413e6e:	push   0x2602bac5
  413e73:	(bad)  
  413e74:	inc    esp
  413e75:	add    BYTE PTR [esi+0x10],0x79
  413e79:	and    al,BYTE PTR [eax]
  413e7b:	xor    BYTE PTR [eax+0x49],al
  413e7e:	test   BYTE PTR [eax],al
  413e80:	xor    BYTE PTR [eax+0x4],dh
  413e83:	and    BYTE PTR [eax],cl
  413e85:	pop    eax
  413e86:	adc    al,0x0
  413e88:	inc    ebx
  413e89:	sub    BYTE PTR [ebp+0x1e],cl
  413e8c:	inc    esp
  413e8d:	add    al,0x9
  413e8f:	xor    BYTE PTR [edx+0x5],al
  413e92:	push   ecx
  413e93:	loopne 0x413e9d
  413e95:	mov    al,ds:0x6101404
  413e9a:	adc    BYTE PTR [eax+0x7],0x88
  413e9e:	and    BYTE PTR [eax],ch
  413ea0:	add    BYTE PTR [ebx-0x6e],al
  413ea3:	test   BYTE PTR [esp+eax*1],cl
  413ea6:	sbb    al,0xb6
  413ea8:	call   0x204186f5
  413ead:	sub    DWORD PTR [ebx+esi*2],ecx
  413eb0:	add    al,0x20
  413eb2:	and    eax,0x93898986
  413eb7:	add    al,0xd9
  413eb9:	add    al,0x20
  413ebb:	push   cs
  413ebc:	inc    eax
  413ebd:	or     DWORD PTR [eax],edx
  413ebf:	add    eax,0x1058380a
  413ec4:	adc    dl,BYTE PTR [ecx]
  413ec6:	and    cl,BYTE PTR [ebx]
  413ec8:	adc    BYTE PTR [ecx+ebp*8],al
  413ecb:	add    al,BYTE PTR [eax+0xf409404]
  413ed1:	add    BYTE PTR [edi],0x7
  413ed4:	pop    es
  413ed5:	add    al,0xf2
  413ed7:	pop    es
  413ed8:	mov    al,ds:0x67016c8
  413edd:	and    BYTE PTR [ebx+0x102c226a],bl
  413ee3:	add    BYTE PTR [ecx+0x62],al
  413ee6:	push   edx
  413ee7:	adc    DWORD PTR ss:[eax],eax
  413eea:	mov    BYTE PTR [edx],cl
  413eec:	or     al,0x84
  413eee:	add    BYTE PTR [eax+eax*4],ah
  413ef1:	adc    BYTE PTR [eax],cl
  413ef3:	or     BYTE PTR [ebx],ah
  413ef5:	add    BYTE PTR [eax+0x8c24500],ah
  413efb:	and    eax,0x15ff8080
  413f00:	dec    esp
  413f01:	in     al,dx
  413f02:	inc    esp
  413f03:	add    BYTE PTR [eax+0x62],bl
  413f06:	pusha  
  413f07:	aad    0x2
  413f09:	adc    BYTE PTR [eax+0xc00080],cl
  413f0f:	or     DWORD PTR [edx],edx
  413f11:	or     BYTE PTR [eax],cl
  413f13:	pusha  
  413f14:	nop
  413f15:	add    DWORD PTR [eax+0x10],eax
  413f18:	add    DWORD PTR [eax],edx
  413f1a:	add    BYTE PTR [ebx],cl
  413f1c:	cwde   
  413f1d:	mov    ecx,0x8002a004
  413f22:	and    BYTE PTR [ebx],al
  413f24:	lds    esp,FWORD PTR [ecx]
  413f26:	add    BYTE PTR [ebx],ah
  413f28:	add    DWORD PTR [eax],eax
  413f2a:	adc    al,cl
  413f2c:	rol    ah,0x8
  413f2f:	inc    ebx
  413f30:	sbb    BYTE PTR [ecx+ebp*4+0xc],al
  413f34:	sbb    edx,eax
  413f36:	mov    al,ds:0x9502121
  413f3b:	xor    cl,0xc2
  413f3e:	xor    al,0x3
  413f40:	add    BYTE PTR [edx],bh
  413f42:	inc    eax
  413f43:	or     al,0x9e
  413f45:	bound  ebp,QWORD PTR [edx]
  413f47:	mul    BYTE PTR [eax]
  413f49:	jo     0x413f8d
  413f4b:	dec    eax
  413f4c:	inc    esp
  413f4d:	inc    esp
  413f4e:	add    BYTE PTR [edi],al
  413f50:	add    BYTE PTR [eax-0x1f],0x12
  413f54:	add    DWORD PTR [eax+esi*4+0x2],edi
  413f58:	push   eax
  413f59:	pusha  
  413f5a:	add    DWORD PTR [ebp+0x43c08041],edx
  413f60:	add    DWORD PTR [eax],edi
  413f62:	add    BYTE PTR [eax+eax*1],al
  413f65:	xor    BYTE PTR [eax],dl
  413f67:	add    BYTE PTR [eax+0x73],ah
  413f6a:	add    BYTE PTR [eax+edx*1-0x7e57f8de],0x50
  413f72:	add    BYTE PTR [ebx],cl
  413f74:	xor    BYTE PTR [eax],ah
  413f76:	sub    BYTE PTR [eax+eax*1],ah
  413f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7a:	or     BYTE PTR [eax],al
  413f7c:	add    al,BYTE PTR [eax+0xa32060e]
  413f82:	inc    eax
  413f83:	inc    esp
  413f84:	sub    BYTE PTR [ecx],dh
  413f86:	xor    BYTE PTR [eax],bh
  413f88:	add    DWORD PTR [eax],eax
  413f8a:	add    eax,esp
  413f8c:	or     BYTE PTR [eax],al
  413f8e:	add    BYTE PTR [eax],ah
  413f90:	add    BYTE PTR [ecx],ah
  413f92:	mov    ecx,DWORD PTR ds:0xc1a86000
  413f98:	inc    eax
  413f99:	or     BYTE PTR [ecx+0x6c],0x21
  413f9d:	inc    ecx
  413f9e:	xor    DWORD PTR [eax+0x4040082],eax
  413fa4:	xor    ah,BYTE PTR [eax+eax*1]
  413fa7:	stc    
  413fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa9:	add    al,BYTE PTR [edx+0xb]
  413fac:	cmp    BYTE PTR [eax+0x12825644],cl
  413fb2:	add    DWORD PTR [ecx+ecx*4+0x0],eax
  413fb6:	add    BYTE PTR [esp+ecx*2],al
  413fb9:	pusha  
  413fba:	push   ss
  413fbb:	sub    ah,BYTE PTR [eax-0x6ffeffbf]
  413fc1:	inc    esi
  413fc2:	les    eax,FWORD PTR [eax]
  413fc4:	xor    BYTE PTR [eax+eiz*1+0x0],bh
  413fc8:	add    BYTE PTR [ecx],dl
  413fca:	cmp    eax,0x2249054
  413fcf:	call   0xc673c056
  413fd4:	cmp    al,BYTE PTR [eax]
  413fd6:	test   DWORD PTR [eax+eiz*4+0x31],eax
  413fda:	mov    al,ds:0x60c44
  413fdf:	add    eax,ecx
  413fe1:	sub    BYTE PTR [ebx],al
  413fe3:	jb     0x413fe9
  413fe5:	add    al,0x40
  413fe7:	inc    esp
  413fe8:	add    BYTE PTR [edx],dl
  413fea:	sbb    BYTE PTR [ecx+eiz*1-0x80],al
  413fee:	add    BYTE PTR [edx-0x6f],0x1e
  413ff2:	add    BYTE PTR [ecx],al
  413ff4:	push   es
  413ff5:	sbb    BYTE PTR [eax],al
  413ff7:	sbb    DWORD PTR [eax],0x33
  413ffa:	or     BYTE PTR [ecx+eax*8],ch
  413ffd:	and    DWORD PTR [eax+0xc],0xffffffb2
  414001:	retf   
  414002:	mov    BYTE PTR [ecx-0x5e],al
  414005:	inc    eax
  414006:	or     al,0xaa
  414008:	or     BYTE PTR [ecx+0x12190180],dl
  41400e:	adc    BYTE PTR [esp+0x14],al
  414012:	add    al,BYTE PTR [ecx+eax*1]
  414015:	add    DWORD PTR [eax],edx
  414017:	enter  0x8882,0xe5
  41401b:	add    BYTE PTR [eax+0x4048204e],dl
  414021:	inc    ebp
  414022:	add    BYTE PTR [edi+esi*1+0x4],al
  414026:	inc    eax
  414027:	nop
  414028:	mov    ah,BYTE PTR [ebp+0x2e050651]
  41402e:	nop
  41402f:	or     al,BYTE PTR [eax+eax*1]
  414032:	push   ebx
  414033:	adc    BYTE PTR [eax],ch
  414035:	or     BYTE PTR [ecx],ah
  414037:	inc    eax
  414038:	add    WORD PTR [edx],sp
  41403b:	test   BYTE PTR [ecx+0x32],cl
  41403e:	add    BYTE PTR [eax-0x5fafffe0],al
  414044:	push   ecx
  414045:	and    BYTE PTR [ecx],ch
  414047:	add    DWORD PTR [edx-0x7ff9b6b2],0x8801420
  414051:	mov    BYTE PTR [eax],al
  414053:	inc    ecx
  414054:	inc    esp
  414055:	bound  edx,QWORD PTR [edx+0x2481d70]
  41405b:	add    eax,DWORD PTR [ecx+0x8]
  41405e:	add    BYTE PTR [eax],al
  414060:	add    al,0x1
  414062:	add    BYTE PTR [eax+0x10],0x1c
  414066:	mov    al,ds:0x711200c2
  41406b:	add    dl,dl
  41406d:	sbb    BYTE PTR [eax],ch
  41406f:	add    al,BYTE PTR [edx]
  414071:	and    DWORD PTR [eax+0x4f0b110a],eax
  414077:	adc    al,0x84
  414079:	adc    esp,esi
  41407b:	sub    DWORD PTR [eax],esi
  41407d:	inc    esp
  41407e:	add    cl,BYTE PTR [ecx]
  414080:	add    BYTE PTR [eax+0xc],cl
  414083:	mov    al,ds:0xbc060800
  414088:	addr16 add al,0x78
  41408b:	inc    ecx
  41408c:	test   al,0x42
  41408e:	xchg   edx,eax
  41408f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414090:	add    BYTE PTR [ecx-0x7fae7a3f],dh
  414096:	and    eax,0x40242a08
  41409b:	or     BYTE PTR [eax-0x3bf7eddf],dl
  4140a1:	add    BYTE PTR [eax],dl
  4140a3:	and    al,0x81
  4140a5:	or     BYTE PTR [eax],0x48
  4140a8:	mov    DWORD PTR [ecx],edx
  4140aa:	adc    BYTE PTR [eax],al
  4140ac:	add    al,0x25
  4140ae:	add    BYTE PTR [ebx+edx*1],al
  4140b1:	leave  
  4140b2:	inc    eax
  4140b3:	sub    BYTE PTR [edx],al
  4140b5:	rol    DWORD PTR [eax+0x4c00521],0x1c
  4140bc:	adc    eax,0xc2902c8
  4140c1:	add    WORD PTR [ecx-0x7fff1df9],ax
  4140c8:	and    ah,BYTE PTR [eax-0x7d]
  4140cb:	popa   
  4140cc:	js     0x41410e
  4140ce:	add    esp,ebx
  4140d0:	add    BYTE PTR [ebx+0x4a44240],bh
  4140d6:	mov    cl,0x0
  4140d8:	or     al,0x1a
  4140da:	adc    al,0x14
  4140dc:	pusha  
  4140dd:	adc    BYTE PTR [ecx],0x2
  4140e0:	test   BYTE PTR [ecx],al
  4140e2:	push   eax
  4140e3:	test   al,dl
  4140e5:	add    BYTE PTR [edx+edx*1],ch
  4140e8:	nop
  4140e9:	inc    ebp
  4140ea:	or     al,0x10
  4140ec:	or     BYTE PTR [eax+eax*1],al
  4140ef:	add    BYTE PTR [ecx],al
  4140f1:	xchg   edx,eax
  4140f2:	mov    BYTE PTR [ecx+0xe1c38c0],al
  4140f8:	xor    DWORD PTR [eax+ecx*1],edx
  4140fb:	enter  0x8002,0xa0
  4140ff:	sub    ch,BYTE PTR [eax+eax*4]
  414102:	and    BYTE PTR [edx],ah
  414104:	mov    BYTE PTR [eax],al
  414106:	add    BYTE PTR [eax],al
  414108:	sub    BYTE PTR [eax],al
  41410a:	add    BYTE PTR [edx+0x4000020],dl
  414110:	xchg   esp,eax
  414111:	sub    BYTE PTR [ecx+0x22390502],al
  414117:	pop    es
  414118:	inc    eax
  414119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411a:	ss je  0x4140e3
  41411d:	(bad)
  414120:	dec    ecx
  414121:	mov    BYTE PTR [ebp+0x4004c202],al
  414127:	add    eax,0x20625400
  41412c:	and    BYTE PTR [esi-0x6f],0x2
  414130:	pop    eax
  414131:	add    BYTE PTR ds:0x1040a910,al
  414137:	dec    eax
  414138:	leave  
  414139:	add    BYTE PTR [eax],al
  41413b:	add    ah,BYTE PTR ds:0xc4160a48
  414141:	and    DWORD PTR [edx+eax*4-0x47eefbde],0x8a600100
  41414c:	inc    ebp
  41414d:	add    BYTE PTR [eax-0x7fa7ffeb],al
  414153:	sub    al,0x84
  414155:	add    ah,al
  414157:	add    DWORD PTR [edx],esi
  414159:	mov    BYTE PTR [eax+0x2a98d403],cl
  41415f:	and    DWORD PTR [ebp+0x41],esp
  414162:	icebp  
  414163:	and    BYTE PTR [edi-0x3c7fbef4],dl
  414169:	and    BYTE PTR [eax+0x6115022],0x30
  414170:	add    al,BYTE PTR [ecx]
  414172:	add    al,0x80
  414174:	fsub   QWORD PTR [ecx]
  414176:	push   es
  414177:	call   0x8110:0x9208ad28
  41417e:	nop
  41417f:	push   ecx
  414180:	pop    es
  414181:	push   0x90022501
  414186:	push   eax
  414187:	inc    ebp
  414188:	add    BYTE PTR [ebx],bl
  41418a:	add    DWORD PTR [esi],0x85290c0
  414190:	inc    eax
  414191:	scas   al,BYTE PTR es:[edi]
  414192:	add    BYTE PTR ds:0x60d09248,al
  414198:	or     DWORD PTR [ebx+ecx*1-0x60],edx
  41419c:	dec    edx
  41419d:	add    eax,0x86040320
  4141a2:	push   cs
  4141a3:	add    al,0x61
  4141a5:	xor    DWORD PTR [eax+0x23889],0x282418ac
  4141af:	add    eax,0x40048804
  4141b4:	adc    al,0xa
  4141b6:	daa    
  4141b7:	and    BYTE PTR [eax+0x49],al
  4141ba:	push   0x5084508
  4141bf:	add    al,BYTE PTR [eax]
  4141c1:	inc    esp
  4141c2:	pusha  
  4141c3:	mov    al,0x87
  4141c5:	add    cl,al
  4141c7:	xor    eax,DWORD PTR [edx+eax*1]
  4141ca:	inc    eax
  4141cb:	mov    ds:0x2020c40d,al
  4141d0:	inc    esi
  4141d1:	xor    BYTE PTR [eax],cl
  4141d3:	add    al,0x0
  4141d5:	or     DWORD PTR [eax-0x80],esp
  4141d8:	and    al,0x21
  4141da:	inc    eax
  4141db:	clc    
  4141dc:	nop
  4141dd:	push   es
  4141de:	add    BYTE PTR [eax+0x90a0c08],al
  4141e4:	and    BYTE PTR [edx],ah
  4141e6:	add    BYTE PTR [eax-0x7fb41643],dl
  4141ec:	xor    DWORD PTR ds:0x80a89040,eax
  4141f2:	loopne 0x4141f6
  4141f4:	add    BYTE PTR [ecx],ch
  4141f6:	sar    DWORD PTR [edx],0x43
  4141f9:	add    DWORD PTR [ebp+0x22],0x1212021
  414200:	mov    bl,BYTE PTR [eax]
  414202:	mov    bl,0x10
  414204:	shl    BYTE PTR [edx+0x184000d1],1
  41420a:	add    DWORD PTR [eax],eax
  41420c:	or     BYTE PTR es:[eax+0xd],0x83
  414211:	add    al,0x4
  414213:	adc    DWORD PTR [eax],eax
  414215:	add    BYTE PTR [eax],dh
  414217:	xor    DWORD PTR [ecx+0x250630b],esp
  41421d:	shl    BYTE PTR [ebx],1
  41421f:	adc    BYTE PTR [eax],al
  414221:	dec    esp
  414222:	and    BYTE PTR ss:[ebx],al
  414225:	add    BYTE PTR [eax],dl
  414227:	inc    edx
  414228:	pop    es
  414229:	add    BYTE PTR [eax],dl
  41422b:	mov    al,0x20
  41422d:	adc    BYTE PTR [eax],dh
  41422f:	and    BYTE PTR [eax],al
  414231:	dec    eax
  414232:	lock adc BYTE PTR [ebx+0x1],ah
  414236:	push   eax
  414237:	add    DWORD PTR [ecx+0x4685c103],ecx
  41423d:	aam    0x30
  41423f:	sub    DWORD PTR [edx],eax
  414241:	and    al,BYTE PTR [ebx-0x80]
  414244:	add    al,0x40
  414246:	rol    DWORD PTR [eax+0x5e],cl
  414249:	xchg   ecx,eax
  41424a:	rol    DWORD PTR [edi],1
  41424c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424d:	adc    DWORD PTR [eax+0x2190c005],ebp
  414253:	pusha  
  414254:	add    BYTE PTR [edx],0x8
  414257:	and    ch,BYTE PTR [edx]
  414259:	add    BYTE PTR [eax],ch
  41425b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41425c:	and    DWORD PTR [eax],esp
  41425e:	or     BYTE PTR [eax+ecx*1+0x11],al
  414262:	or     BYTE PTR [eax],dh
  414264:	inc    eax
  414265:	xor    BYTE PTR [ecx+eax*1+0x24],al
  414269:	add    BYTE PTR [eax],0x14
  41426c:	adc    al,ah
  41426e:	add    BYTE PTR [esi],0x0
  414271:	adc    esp,DWORD PTR [ecx]
  414273:	xor    BYTE PTR [ecx+0xa],al
  414276:	sahf   
  414277:	add    al,0xa
  414279:	or     eax,0x444c8880
  41427e:	pusha  
  41427f:	xchg   BYTE PTR [ecx],dl
  414281:	icebp  
  414282:	or     bh,BYTE PTR [eax]
  414284:	add    BYTE PTR [edx-0x7ebb5a7f],cl
  41428a:	or     edx,DWORD PTR [ecx+eax*1+0x3c]
  41428e:	inc    eax
  41428f:	adc    al,BYTE PTR [edx]
  414291:	jo     0x4142a7
  414293:	adc    DWORD PTR [edx+0x72],esp
  414296:	aam    0xc
  414298:	add    BYTE PTR [edx+0x482615bc],al
  41429e:	sub    DWORD PTR [esi+0x633108c],eax
  4142a4:	or     BYTE PTR [eax],al
  4142a6:	mov    cs,WORD PTR [ecx]
  4142a8:	xor    DWORD PTR [ecx+0x2],eax
  4142ab:	lods   eax,DWORD PTR ds:[esi]
  4142ac:	inc    ecx
  4142ad:	adc    BYTE PTR [eax],cl
  4142af:	add    BYTE PTR [ebx],dh
  4142b1:	or     al,BYTE PTR [eax+0x42]
  4142b4:	add    ah,BYTE PTR [ecx+ecx*1]
  4142b7:	add    al,0x89
  4142b9:	adc    al,0x4
  4142bb:	inc    eax
  4142bc:	xor    al,0x88
  4142be:	inc    ecx
  4142bf:	add    BYTE PTR [eax+0x40],al
  4142c2:	add    BYTE PTR [eax+0x81a2104],bl
  4142c8:	push   esp
  4142c9:	and    al,BYTE PTR [edx]
  4142cb:	inc    edx
  4142cc:	or     BYTE PTR [edx],al
  4142ce:	dec    esp
  4142cf:	inc    ecx
  4142d0:	and    BYTE PTR [ecx+0x2],dh
  4142d3:	add    BYTE PTR [edx+0x69],0x0
  4142d7:	popf   
  4142d8:	add    BYTE PTR [esp+eax*4],ah
  4142db:	test   al,0x14
  4142dd:	adc    BYTE PTR [eax+0x60],ch
  4142e0:	test   DWORD PTR [eax+0x0],eax
  4142e3:	add    BYTE PTR [edx],al
  4142e5:	xor    BYTE PTR [eax+0x7276b1],al
  4142eb:	adc    dl,BYTE PTR [ecx+eax*2-0x6ffdddee]
  4142f2:	and    al,ah
  4142f4:	mov    es,WORD PTR [eax+eax*1+0x30099b42]
  4142fb:	mov    es,WORD PTR [eax]
  4142fd:	add    ch,BYTE PTR [eax+0x6a]
  414300:	icebp  
  414301:	or     eax,DWORD PTR [eax+eiz*1]
  414304:	ret    0x8031
  414307:	or     al,0x40
  414309:	push   eax
  41430a:	or     DWORD PTR [eax+ecx*2],0x36d08200
  414311:	sub    DWORD PTR [ecx],eax
  414313:	mov    DWORD PTR [esp],eax
  414316:	inc    eax
  414317:	nop
  414318:	add    BYTE PTR [edx],0x81
  41431b:	mov    BYTE PTR [ecx+0x21],al
  41431e:	add    BYTE PTR [esi],al
  414320:	add    BYTE PTR [eax+ecx*2+0x68061405],dh
  414327:	add    al,0x84
  414329:	and    BYTE PTR [ecx],al
  41432b:	mov    BYTE PTR [eax+0x40420c14],cl
  414331:	add    BYTE PTR [eax+0x43],ah
  414334:	sbb    BYTE PTR [eax+0x6],dl
  414337:	dec    eax
  414338:	and    al,0x9
  41433a:	add    edx,DWORD PTR [ecx]
  41433c:	and    BYTE PTR [eax+0x205a140c],ah
  414342:	popa   
  414343:	push   ds
  414344:	and    BYTE PTR [eax],cl
  414346:	adc    BYTE PTR es:[eax],al
  414349:	and    DWORD PTR [ecx],eax
  41434b:	add    esp,DWORD PTR [ebx+0x24]
  41434e:	adc    DWORD PTR [edx],esp
  414350:	xor    BYTE PTR ds:0x4002000,cl
  414356:	add    al,BYTE PTR [edx+0x13]
  414359:	or     ebp,DWORD PTR ds:0x8400421
  41435f:	sub    BYTE PTR [eax+0x11],0x8
  414363:	and    BYTE PTR [eax],al
  414365:	add    ch,BYTE PTR [eax]
  414367:	or     al,0x73
  414369:	test   BYTE PTR [edx],dl
  41436b:	add    BYTE PTR [eax],dl
  41436d:	add    ah,ch
  41436f:	pusha  
  414370:	cwde   
  414371:	add    BYTE PTR [eax],ch
  414373:	sub    al,0x0
  414375:	push   es
  414376:	pop    eax
  414377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414378:	dec    eax
  414379:	add    eax,0xd225158
  41437e:	add    ecx,ecx
  414380:	push   es
  414381:	add    DWORD PTR [eax],0x482b0084
  414387:	add    al,0x46
  414389:	shl    BYTE PTR [eax+0x50],0x71
  41438d:	pop    es
  41438e:	add    BYTE PTR [esi],al
  414390:	xchg   esp,eax
  414391:	add    BYTE PTR [eax],cl
  414393:	add    al,0xd1
  414395:	add    DWORD PTR [eax+ecx*1-0x6a],0x28
  41439a:	push   edx
  41439b:	or     al,0x28
  41439d:	call   0x48c5cbb3
  4143a2:	xchg   ecx,eax
  4143a3:	inc    eax
  4143a4:	jo     0x4143ba
  4143a6:	cmp    BYTE PTR [ecx-0x3cdb87d8],dl
  4143ac:	mov    ah,0x82
  4143ae:	dec    ebx
  4143af:	xor    BYTE PTR [eax],ch
  4143b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b2:	add    al,BYTE PTR [eax]
  4143b4:	mov    ebp,0x810010da
  4143b9:	dec    esi
  4143ba:	add    eax,0x81001c2
  4143bf:	push   es
  4143c0:	dec    edx
  4143c1:	pop    esi
  4143c2:	and    al,0x14
  4143c4:	nop
  4143c5:	popa   
  4143c6:	jno    0x414349
  4143c8:	ret    0x80c
  4143cb:	and    BYTE PTR [ecx-0x77eedfec],ah
  4143d1:	and    al,BYTE PTR [ebp+0x48]
  4143d4:	sbb    BYTE PTR [eax+0x29081308],al
  4143da:	push   es
  4143db:	and    al,BYTE PTR [eax+0x4]
  4143de:	add    DWORD PTR [ecx+0x50],esi
  4143e1:	add    BYTE PTR [edx+eax*4],ah
  4143e4:	dec    esp
  4143e5:	add    al,0x32
  4143e7:	xor    BYTE PTR [esi],al
  4143e9:	call   0x914a482f
  4143ee:	data16 sbb BYTE PTR [ecx],0xc1
  4143f2:	pop    es
  4143f3:	mov    DWORD PTR ss:[eax+eax*1],edx
  4143f7:	adc    BYTE PTR [eax-0x5bfffedc],ah
  4143fd:	add    al,ch
  4143ff:	test   BYTE PTR [eax],dl
  414401:	xchg   esp,eax
  414402:	xchg   esp,eax
  414403:	add    BYTE PTR [esp+eax*1],al
  414406:	adc    BYTE PTR [eax],dh
  414408:	test   BYTE PTR ds:0x3052608e,al
  41440e:	push   ss
  41440f:	add    BYTE PTR [eax],0x1
  414412:	add    DWORD PTR [eax+eax*4],esp
  414415:	and    DWORD PTR [eax+0xa000502],ecx
  41441b:	pusha  
  41441c:	add    DWORD PTR [edx+0x60420809],esp
  414422:	cmp    BYTE PTR [eax+0x4],al
  414425:	add    DWORD PTR [ecx+0x116a4bc5],ecx
  41442b:	add    eax,0x90432800
  414430:	inc    edx
  414431:	rol    BYTE PTR [esp+eax*1],0x34
  414435:	mov    al,0x81
  414437:	enter  0x2f0,0x34
  41443b:	test   eax,0x61d50a
  414440:	test   eax,0x9650
  414445:	xchg   esp,eax
  414446:	inc    eax
  414447:	sub    BYTE PTR [edx],al
  414449:	add    BYTE PTR [eax],al
  41444b:	add    al,0x88
  41444d:	and    BYTE PTR [eax],dl
  41444f:	adc    BYTE PTR [edx-0x40],ah
  414452:	inc    eax
  414453:	add    DWORD PTR [edx+0x4040134b],ecx
  414459:	inc    edx
  41445a:	mov    ds:0x1324104,al
  41445f:	xchg   ecx,eax
  414460:	add    BYTE PTR [esi+0x10604951],ch
  414466:	add    BYTE PTR [eax],al
  414468:	add    DWORD PTR [esi-0x76],0x200001c0
  41446f:	and    BYTE PTR [eax+0x0],al
  414472:	pusha  
  414473:	and    al,0x2
  414475:	add    BYTE PTR [edx+edx*1],al
  414478:	and    al,BYTE PTR [eax]
  41447a:	rol    BYTE PTR [esi+ecx*2-0x76efae00],0x91
  414482:	mov    esi,0xc4048846
  414487:	pusha  
  414488:	add    al,BYTE PTR [eax]
  41448a:	or     DWORD PTR [ebx+0x1194244],edx
  414490:	push   eax
  414491:	inc    esp
  414492:	lea    esp,es:[eax]
  414495:	adc    BYTE PTR [edx],al
  414497:	add    DWORD PTR [ebx+0x0],eax
  41449a:	inc    eax
  41449b:	sbb    eax,DWORD PTR [eax-0x6f79fedc]
  4144a1:	inc    edx
  4144a2:	mov    eax,ds:0x610685b4
  4144a7:	push   ebp
  4144a8:	xor    BYTE PTR [edx],0x20
  4144ab:	test   BYTE PTR [ecx+0x106014aa],dl
  4144b1:	test   BYTE PTR [eax+0xe005400],al
  4144b7:	add    BYTE PTR [eax+0x11020682],bl
  4144bd:	add    BYTE PTR [edx],al
  4144bf:	nop
  4144c0:	push   edx
  4144c1:	test   BYTE PTR [eax],al
  4144c3:	inc    eax
  4144c4:	nop
  4144c5:	push   edx
  4144c6:	mov    eax,DWORD PTR [eax+0xd]
  4144c9:	xor    BYTE PTR [eax+ebx*1+0x1],ah
  4144cd:	add    al,BYTE PTR [esi+0x5c023440]
  4144d3:	and    BYTE PTR [eax],dl
  4144d5:	inc    edx
  4144d6:	adc    BYTE PTR [eax+esi*1],ah
  4144d9:	add    al,0x7a
  4144db:	pushf  
  4144dc:	inc    edx
  4144dd:	adc    BYTE PTR [edx],cl
  4144df:	add    BYTE PTR [eax],dh
  4144e1:	or     BYTE PTR [eax],ah
  4144e3:	je     0x4144f5
  4144e5:	or     ah,BYTE PTR [eax-0x7c]
  4144e8:	add    cl,BYTE PTR [ecx]
  4144ea:	or     al,0xad
  4144ec:	adc    dl,BYTE PTR es:[eax+0x44]
  4144f0:	test   BYTE PTR [eax],ah
  4144f2:	sub    al,0x9a
  4144f4:	add    BYTE PTR [eax],al
  4144f6:	add    BYTE PTR [eax+eax*4+0x11b00050],al
  4144fd:	adc    ecx,eax
  4144ff:	and    BYTE PTR [edx+0x154dc80],ch
  414505:	mov    cl,0x86
  414507:	fcmove st,st(4)
  414509:	adc    al,BYTE PTR [esi+0x200a284]
  41450f:	leave  
  414510:	es add al,0xc2
  414513:	inc    ebx
  414514:	add    BYTE PTR [eax],dl
  414516:	dec    ecx
  414517:	ret    0x4108
  41451a:	add    al,0x0
  41451c:	adc    BYTE PTR [edx+0x10],dl
  41451f:	adc    esp,ebx
  414521:	or     BYTE PTR [eax],ah
  414523:	add    BYTE PTR [edx],0x60
  414526:	xchg   ecx,eax
  414527:	mov    BYTE PTR [eax+0x48],al
  41452a:	adc    BYTE PTR [edx+0x208000c8],ah
  414530:	nop
  414531:	adc    DWORD PTR [ecx],eax
  414533:	sbb    ah,BYTE PTR [eax]
  414535:	add    DWORD PTR [edx],esp
  414537:	add    BYTE PTR [eax],dh
  414539:	add    BYTE PTR [edx+0x4f6a0f0c],ah
  41453f:	add    eax,0x78100b80
  414544:	or     BYTE PTR [eax],ah
  414546:	or     BYTE PTR [eax],dl
  414548:	sbb    BYTE PTR [eax],ch
  41454a:	or     al,0x64
  41454c:	pushf  
  41454d:	add    BYTE PTR [eax],0xe1
  414550:	int    0x0
  414552:	add    esp,DWORD PTR [ecx+0x6968500]
  414558:	inc    esp
  414559:	add    BYTE PTR [ecx+0x34],ah
  41455c:	pusha  
  41455d:	nop
  41455e:	cmp    esp,DWORD PTR [eax]
  414560:	and    DWORD PTR [edx],eax
  414562:	or     al,0x81
  414564:	and    DWORD PTR [eax-0x46baff80],ecx
  41456a:	add    DWORD PTR [eax],esi
  41456c:	inc    esi
  41456d:	dec    eax
  41456e:	inc    ecx
  41456f:	add    DWORD PTR [eax],eax
  414571:	add    BYTE PTR [eax],0x9
  414574:	add    BYTE PTR [eax-0x56fdf800],ah
  41457a:	and    BYTE PTR [esp+ebp*4],al
  41457d:	mov    BYTE PTR [edx+0x11],ah
  414580:	repnz xchg esp,eax
  414582:	add    DWORD PTR [ecx],esp
  414584:	or     BYTE PTR [eax+eax*4],0x82
  414588:	sub    al,0x18
  41458a:	sub    BYTE PTR es:[edx],al
  41458d:	add    BYTE PTR [edx-0x7febbfa0],cl
  414593:	or     BYTE PTR [edx-0x35],al
  414596:	add    dh,BYTE PTR [esi]
  414598:	dec    esi
  414599:	add    DWORD PTR [eax],edx
  41459b:	add    BYTE PTR [ecx+0x10104004],ah
  4145a1:	mov    BYTE PTR [ecx+0x480d0240],dl
  4145a7:	sbb    BYTE PTR ds:0x11c02441,ah
  4145ad:	add    DWORD PTR [ebx-0x4f],0x9903953
  4145b4:	cmp    eax,0xc0a20600
  4145b9:	adc    eax,0x110c6440
  4145be:	dec    eax
  4145bf:	and    eax,0xe200225e
  4145c4:	or     ah,BYTE PTR [esi+0x18]
  4145c7:	add    DWORD PTR [eax-0x18],ecx
  4145ca:	inc    ebp
  4145cb:	add    ah,BYTE PTR [ebx+0x1a]
  4145ce:	add    eax,0x19000049
  4145d3:	add    DWORD PTR [eax],0x82304248
  4145d9:	inc    ecx
  4145da:	enter  0xa01,0x11
  4145de:	call   0x424df3
  4145e3:	ror    BYTE PTR [eax],0xd0
  4145e6:	test   BYTE PTR [esi+0xe1c],al
  4145ec:	rol    BYTE PTR [ebx],1
  4145ee:	and    BYTE PTR [eax+edx*1+0x23114200],bl
  4145f5:	dec    eax
  4145f6:	or     BYTE PTR [ecx+ecx*4],ch
  4145f9:	add    eax,DWORD PTR [eax+eax*4+0xe]
  4145fd:	test   BYTE PTR [eax],al
  4145ff:	and    al,0x2
  414601:	xor    BYTE PTR [ecx],al
  414603:	ins    BYTE PTR es:[edi],dx
  414604:	inc    edx
  414605:	add    BYTE PTR [eax],bl
  414607:	xchg   esi,eax
  414608:	sub    BYTE PTR [eax+0x4],dl
  41460b:	add    BYTE PTR [eax+0x61],0x24
  41460f:	sub    BYTE PTR [eax+0x30c41a48],al
  414615:	or     BYTE PTR [eax-0x4ff9ff7e],dh
  41461b:	add    DWORD PTR [eax],ebp
  41461d:	inc    esp
  41461e:	mov    BYTE PTR [eax+eax*1],dl
  414621:	add    BYTE PTR [eax],al
  414623:	and    al,0x56
  414625:	dec    eax
  414626:	push   ecx
  414627:	xchg   esp,eax
  414628:	add    DWORD PTR [eax],ebp
  41462a:	nop
  41462b:	data16 add BYTE PTR [eax+0x40828020],dl
  414632:	pop    eax
  414633:	or     dh,BYTE PTR [eax]
  414635:	add    BYTE PTR [eax+0x40c00510],ch
  41463b:	jbe    0x414645
  41463d:	popa   
  41463e:	add    BYTE PTR [eax],0x21
  414641:	inc    eax
  414642:	sub    BYTE PTR [eax],dl
  414644:	push   0x10
  414646:	and    DWORD PTR [eax],ecx
  414648:	add    BYTE PTR [eax],bl
  41464a:	add    BYTE PTR [edx+eax*8],al
  41464d:	mov    WORD PTR [eax+ebx*2],es
  414650:	inc    esp
  414651:	add    al,BYTE PTR [eax*1-0x46fff6bf]
  414658:	adc    BYTE PTR [ecx],cl
  41465a:	inc    ebp
  41465b:	add    DWORD PTR [eax],0x54c504
  414661:	inc    ecx
  414662:	sub    BYTE PTR [edx],dh
  414664:	rol    DWORD PTR [eax+0x20],0x0
  414668:	and    al,0x28
  41466a:	add    al,0x80
  41466c:	nop
  41466d:	jmp    0x2081:0xc3990ed9
  414674:	add    DWORD PTR [eax+0x18],eax
  414677:	or     DWORD PTR [ebp+0x50302001],esi
  41467d:	add    BYTE PTR [eax-0x7a],dh
  414680:	add    BYTE PTR [ecx],dh
  414682:	add    BYTE PTR [edx+0x1d449220],cl
  414688:	adc    al,0x0
  41468a:	adc    BYTE PTR [eax],bl
  41468c:	or     BYTE PTR [ebx],dh
  41468e:	or     BYTE PTR [edx],al
  414690:	dec    eax
  414691:	and    al,0x5
  414693:	or     DWORD PTR [eax+eiz*4-0x60],eax
  414697:	add    BYTE PTR [eax],al
  414699:	inc    eax
  41469a:	shl    BYTE PTR [ecx+0x940204c],1
  4146a0:	inc    eax
  4146a1:	add    al,BYTE PTR [edx]
  4146a3:	add    DWORD PTR [eax],eax
  4146a5:	sub    DWORD PTR [ebx],ecx
  4146a7:	add    al,0xa4
  4146a9:	inc    esp
  4146aa:	and    BYTE PTR [ecx],0x10
  4146ad:	add    BYTE PTR [eax+edx*4+0x20020140],al
  4146b4:	add    edx,DWORD PTR [eax]
  4146b6:	xor    BYTE PTR [ebp-0x7c],al
  4146b9:	add    BYTE PTR ds:0x91200310,al
  4146bf:	and    DWORD PTR [eax],esp
  4146c1:	sbb    eax,0x80a0342
  4146c6:	sbb    BYTE PTR [ecx],al
  4146c8:	inc    ecx
  4146c9:	adc    DWORD PTR [eax],esp
  4146cb:	push   edi
  4146cc:	or     DWORD PTR [ebx],ecx
  4146ce:	sbb    DWORD PTR [ebx],eax
  4146d0:	inc    ecx
  4146d1:	inc    eax
  4146d2:	adc    al,0x0
  4146d4:	add    BYTE PTR [eax+edi*2],ah
  4146d7:	add    BYTE PTR [ecx],ah
  4146d9:	popa   
  4146da:	add    BYTE PTR [eax],al
  4146dc:	adc    esp,DWORD PTR [ebp+eax*1+0x24]
  4146e0:	nop
  4146e1:	loop   0x414728
  4146e3:	inc    eax
  4146e4:	add    esi,DWORD PTR [edx]
  4146e6:	and    DWORD PTR [eax+0x1a],eax
  4146e9:	and    ah,BYTE PTR [eax+eiz*1]
  4146ec:	and    BYTE PTR [eax],cl
  4146ee:	rol    BYTE PTR [eax],0x20
  4146f1:	or     BYTE PTR [ecx+0x0],dh
  4146f4:	add    DWORD PTR [eax],eax
  4146f6:	add    al,BYTE PTR [esp+eax*1]
  4146f9:	add    al,0x5
  4146fb:	inc    eax
  4146fc:	add    DWORD PTR [eax],esp
  4146fe:	inc    ebx
  4146ff:	and    BYTE PTR [eax],al
  414701:	inc    eax
  414702:	ror    DWORD PTR [eax+0x1d022901],cl
  414708:	inc    eax
  414709:	or     BYTE PTR [ecx],al
  41470b:	add    DWORD PTR [eax+ecx*4+0x4],ecx
  41470f:	adc    al,0x8
  414711:	and    BYTE PTR [eax],al
  414713:	add    esi,DWORD PTR [ecx]
  414715:	inc    esp
  414716:	xor    al,BYTE PTR [eax+0x8]
  414719:	add    BYTE PTR [eax],ah
  41471b:	and    BYTE PTR [eax],bl
  41471d:	adc    eax,0xa1810018
  414722:	add    BYTE PTR [eax+0x40000196],al
  414728:	inc    eax
  414729:	xor    al,BYTE PTR [eax]
  41472b:	add    BYTE PTR [eax],al
  41472d:	inc    ebx
  41472e:	adc    BYTE PTR [esi],0x18
  414731:	sub    BYTE PTR [eax],al
  414733:	add    BYTE PTR [ecx+0x120112],al
  414739:	xchg   edx,eax
  41473a:	or     al,BYTE PTR [eax]
  41473c:	add    BYTE PTR [eax],al
  41473e:	popa   
  41473f:	and    BYTE PTR ds:0xd000,cl
  414745:	and    BYTE PTR [eax],0x12
  414748:	or     BYTE PTR [eax+0x9210045],al
  41474e:	cdq    
  41474f:	push   eax
  414750:	add    BYTE PTR [eax],ah
  414752:	add    al,0x0
  414754:	pusha  
  414755:	push   es
  414756:	dec    ecx
  414757:	add    BYTE PTR [eax],0x8a
  41475a:	inc    eax
  41475b:	xchg   esp,eax
  41475c:	add    BYTE PTR [eax],0xf1
  41475f:	add    BYTE PTR [eax],al
  414761:	or     al,0x20
  414763:	add    al,0x80
  414765:	add    BYTE PTR [eax],dh
  414767:	add    DWORD PTR [eax],ecx
  414769:	or     DWORD PTR [eax],0xffffffa8
  41476c:	pop    ebp
  41476d:	les    eax,FWORD PTR [ecx+eax*2]
  414770:	adc    BYTE PTR [eax+ebx*1],al
  414773:	add    BYTE PTR [edi+0x4436129],0x44
  41477a:	push   eax
  41477b:	inc    edx
  41477c:	add    cl,0x23
  41477f:	and    bl,cl
  414781:	hlt    
  414782:	add    ah,BYTE PTR [eax]
  414784:	adc    BYTE PTR [ecx-0x5f9ffff4],0x0
  41478b:	test   al,0x45
  41478d:	add    al,BYTE PTR [eax]
  41478f:	mov    BYTE PTR [eax],al
  414791:	es inc ecx
  414793:	add    BYTE PTR [eax],cl
  414795:	adc    BYTE PTR [eax*2+0x4802004],al
  41479c:	dec    eax
  41479d:	add    DWORD PTR [ebx+0xc],eax
  4147a0:	or     BYTE PTR [esi+0x0],0xb
  4147a4:	or     BYTE PTR [edx],al
  4147a6:	add    DWORD PTR [ecx+0x20408200],eax
  4147ac:	add    BYTE PTR [eax+0x47],dl
  4147af:	mov    ds:0xc28a600,al
  4147b4:	sbb    BYTE PTR [ebp-0x337fbebc],cl
  4147ba:	and    BYTE PTR [eax+0x4240100],al
  4147c0:	add    BYTE PTR [eax],dl
  4147c2:	adc    eax,0x863010
  4147c7:	add    al,0x0
  4147c9:	dec    eax
  4147ca:	loopne 0x4147ec
  4147cc:	add    BYTE PTR [eax+0x20],al
  4147cf:	add    BYTE PTR [eax],ch
  4147d1:	or     al,BYTE PTR [eax]
  4147d3:	add    DWORD PTR [eax+0x42],eax
  4147d6:	add    BYTE PTR [eax],dl
  4147d8:	enter  0xa001,0xc2
  4147dc:	inc    edx
  4147dd:	add    BYTE PTR [edx+0x62],al
  4147e0:	add    BYTE PTR [esp+eax*1+0x0],0x0
  4147e5:	push   ecx
  4147e6:	or     BYTE PTR [ecx],cl
  4147e8:	sbb    BYTE PTR [eax+0x0],0x0
  4147ec:	add    BYTE PTR [edx+eax*1],al
  4147ef:	and    al,0x28
  4147f1:	add    BYTE PTR [ecx],dl
  4147f3:	add    BYTE PTR [edx],dh
  4147f5:	add    BYTE PTR [eax+0x406003b2],cl
  4147fb:	add    ch,BYTE PTR [ecx+0x0]
  4147fe:	add    BYTE PTR [esp+eax*2],ah
  414801:	adc    BYTE PTR [eax],cl
  414803:	add    al,0xcc
  414805:	mov    ebp,0x46000206
  41480b:	inc    edx
  41480c:	adc    al,0x4c
  41480e:	push   ss
  41480f:	or     esp,ecx
  414811:	add    BYTE PTR [eax],cl
  414813:	add    DWORD PTR [edx-0x7e],edx
  414816:	add    BYTE PTR [eax+eax*1],al
  414819:	add    BYTE PTR [edx+0x4191408],al
  41481f:	and    BYTE PTR [eax],al
  414821:	add    DWORD PTR [eax+0x674080a0],eax
  414827:	pushf  
  414828:	les    eax,FWORD PTR [eax]
  41482a:	adc    BYTE PTR [eax+0xc018000],dh
  414830:	add    al,0x0
  414832:	add    BYTE PTR [ecx+0x0],dl
  414835:	and    BYTE PTR [edx+0x20],bh
  414838:	inc    eax
  414839:	inc    eax
  41483a:	add    BYTE PTR [eax],0x0
  41483d:	and    BYTE PTR [eax+0x8],0x0
  414841:	xchg   ecx,eax
  414842:	add    DWORD PTR [eax],ecx
  414844:	sub    BYTE PTR [ebx*4+0x292810],al
  41484b:	and    cl,al
  41484d:	add    al,0x80
  41484f:	add    BYTE PTR [ebx],al
  414851:	add    BYTE PTR [eax],dl
  414853:	add    al,0x0
  414855:	add    BYTE PTR [eax],dl
  414857:	add    al,0x0
  414859:	add    DWORD PTR [eax-0x6f],edx
  41485c:	adc    DWORD PTR [ecx],edx
  41485e:	push   esp
  41485f:	call   0x25135b66
  414864:	add    BYTE PTR [eax],al
  414866:	add    DWORD PTR [edx],ebx
  414868:	add    BYTE PTR [ecx],0x0
  41486b:	sbb    DWORD PTR [ecx],eax
  41486d:	inc    ecx
  41486e:	add    BYTE PTR ds:0x458002,dl
  414874:	or     BYTE PTR [eax],al
  414876:	push   edx
  414877:	or     al,0x0
  414879:	add    BYTE PTR fs:[esi],cl
  41487c:	adc    BYTE PTR [eax+0x40],dh
  41487f:	jl     0x414889
  414881:	push   eax
  414882:	or     BYTE PTR [ecx-0x7c],al
  414885:	add    DWORD PTR [eax],ecx
  414887:	pusha  
  414888:	xchg   esp,eax
  414889:	adc    al,BYTE PTR [eax+eiz*1]
  41488c:	add    al,0x4b
  41488e:	add    al,BYTE PTR [ecx]
  414890:	mov    DWORD PTR [ecx+0x4800601],eax
  414896:	or     eax,0x283c1019
  41489b:	add    BYTE PTR [edx],al
  41489d:	add    ah,BYTE PTR [eax]
  41489f:	sbb    al,0x14
  4148a1:	add    BYTE PTR [eax+0x2],al
  4148a4:	add    BYTE PTR [edx+eax*4],dl
  4148a7:	and    BYTE PTR [eax],al
  4148a9:	adc    BYTE PTR [eax],al
  4148ab:	pusha  
  4148ac:	add    al,0x10
  4148ae:	inc    ecx
  4148af:	add    ah,BYTE PTR [ecx+0x0]
  4148b2:	lock adc DWORD PTR [ebx],eax
  4148b5:	and    BYTE PTR [esi],al
  4148b7:	or     BYTE PTR [edx+eax*1],bh
  4148ba:	adc    DWORD PTR [eax],esi
  4148bc:	sub    eax,DWORD PTR [eax+ebp*1]
  4148bf:	xchg   ecx,eax
  4148c0:	add    al,0x10
  4148c2:	and    eax,DWORD PTR [ebx]
  4148c4:	rol    BYTE PTR [eax],0x0
  4148c7:	add    BYTE PTR [eax+esi*1+0x89c0000],ah
  4148ce:	or     BYTE PTR ds:0x50c800,dl
  4148d4:	add    eax,0x40cc93e
  4148d9:	xor    al,0x0
  4148db:	rol    DWORD PTR es:[eax+0xca10083],1
  4148e2:	add    BYTE PTR [eax-0x6cbaaac0],0x4
  4148e9:	add    al,0x0
  4148eb:	ret    0x1
  4148ee:	add    BYTE PTR [ecx+0x1c],dl
  4148f1:	and    BYTE PTR [eax],dl
  4148f3:	add    BYTE PTR [ecx+0x41],cl
  4148f6:	add    eax,0x4026000a
  4148fb:	push   ebx
  4148fc:	add    eax,0xe04a04
  414901:	add    BYTE PTR [eax+0x8188d],al
  414907:	test   DWORD PTR [eax+0x40d80],eax
  41490d:	adc    BYTE PTR [eax],dl
  41490f:	or     BYTE PTR [eax],al
  414911:	and    al,BYTE PTR [esi]
  414913:	add    BYTE PTR [eax+ebx*1],0xc6
  414917:	and    BYTE PTR [eax+ecx*1-0x7fffdece],al
  41491e:	add    BYTE PTR [eax],ah
  414920:	add    al,0x40
  414922:	add    BYTE PTR [eax],al
  414924:	inc    ecx
  414925:	add    BYTE PTR [ecx+eax*4],0x40
  414929:	inc    eax
  41492a:	add    al,0x0
  41492c:	add    ah,cl
  41492e:	push   cs
  41492f:	mov    eax,ds:0x4004c500
  414934:	or     dl,BYTE PTR [esi]
  414936:	adc    al,0x14
  414938:	add    BYTE PTR [eax],dh
  41493a:	adc    eax,DWORD PTR [eax]
  41493c:	inc    edx
  41493d:	enter  0x832,0xe1
  414941:	add    al,BYTE PTR [eax+0x510200]
  414947:	add    BYTE PTR [eax],cl
  414949:	add    eax,DWORD PTR [edx-0x70]
  41494c:	and    cl,BYTE PTR [ebp+ecx*4+0x48066000]
  414953:	inc    edx
  414954:	add    BYTE PTR [ecx],al
  414956:	inc    esp
  414957:	or     al,0x1a
  414959:	add    BYTE PTR [edx],dl
  41495b:	or     BYTE PTR [edx],0xc
  41495e:	inc    eax
  41495f:	add    BYTE PTR [eax],al
  414961:	or     DWORD PTR [eax+eax*1],eax
  414964:	inc    eax
  414965:	pop    ebx
  414966:	popa   
  414967:	or     BYTE PTR [eax+eax*2+0xe0669c],ah
  41496e:	inc    ebx
  41496f:	add    BYTE PTR [eax],al
  414971:	and    BYTE PTR [eax],cl
  414973:	add    DWORD PTR [ecx+0x600],eax
  414979:	add    BYTE PTR [ecx+0x20],al
  41497c:	inc    ecx
  41497d:	sub    BYTE PTR [eax+eax*2],ah
  414980:	and    ah,BYTE PTR [eax]
  414982:	adc    BYTE PTR [esi],0x80
  414985:	add    DWORD PTR [ebp+0x2e],eax
  414988:	sub    al,BYTE PTR [ecx]
  41498a:	in     eax,0x0
  41498c:	dec    eax
  41498d:	add    BYTE PTR [esi+0x30],0x4
  414991:	or     BYTE PTR [eax+0x0],ah
  414994:	add    ah,BYTE PTR [edx+eax*1]
  414997:	add    BYTE PTR [ecx-0x7ff8ff60],0x0
  41499e:	mov    BYTE PTR [eax+0x20],al
  4149a1:	add    BYTE PTR [eax],al
  4149a3:	xchg   esp,eax
  4149a4:	and    BYTE PTR [ebp+0x910c802],dl
  4149aa:	and    BYTE PTR [ecx],al
  4149ac:	add    BYTE PTR [eax],al
  4149ae:	or     al,0x0
  4149b0:	sbb    BYTE PTR [eax],al
  4149b2:	dec    ebp
  4149b3:	or     BYTE PTR [eax],0x1
  4149b6:	add    BYTE PTR [eax],al
  4149b8:	inc    eax
  4149b9:	or     BYTE PTR [eax],al
  4149bb:	add    BYTE PTR [ecx+0x42],al
  4149be:	add    DWORD PTR [ecx],esp
  4149c0:	sub    al,0x8
  4149c2:	dec    esi
  4149c3:	add    ebx,DWORD PTR [edx+eax*4]
  4149c6:	xchg   BYTE PTR [eax],cl
  4149c8:	add    BYTE PTR [edx+0xc082],ah
  4149ce:	inc    ecx
  4149cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d0:	add    BYTE PTR [eax],dl
  4149d2:	mov    ecx,DWORD PTR [eax+0x2406088c]
  4149d8:	inc    ecx
  4149d9:	inc    eax
  4149da:	add    BYTE PTR [eax],al
  4149dc:	adc    BYTE PTR [edx],0x41
  4149df:	mov    al,ds:0x59000041
  4149e4:	inc    eax
  4149e5:	add    al,0x0
  4149e8:	or     al,0x8
  4149ea:	inc    ecx
  4149eb:	pusha  
  4149ec:	inc    esp
  4149ed:	and    BYTE PTR [eax],dl
  4149ef:	or     DWORD PTR [esi+0x20],ebp
  4149f2:	add    al,BYTE PTR [ecx+eiz*1]
  4149f5:	mov    al,gs:0x38810100
  4149fb:	add    DWORD PTR [eax],esp
  4149fd:	and    al,BYTE PTR [ecx+0x4]
  414a00:	and    BYTE PTR [ebx+0x8081020],al
  414a06:	or     BYTE PTR [ebp+0x2c],bl
  414a09:	add    BYTE PTR [eax],0x0
  414a0c:	add    al,0x0
  414a0e:	push   ecx
  414a0f:	add    al,BYTE PTR [eax]
  414a11:	add    BYTE PTR [ecx],ah
  414a13:	inc    esi
  414a14:	push   eax
  414a15:	add    BYTE PTR [eax+0x450800],al
  414a1b:	adc    eax,0x2041e200
  414a20:	add    BYTE PTR [eax+edx*1],cl
  414a23:	adc    BYTE PTR [edx],al
  414a25:	add    al,0x12
  414a27:	add    ah,BYTE PTR [eax]
  414a29:	or     BYTE PTR [eax+0x42805144],al
  414a2f:	add    BYTE PTR [eax],al
  414a31:	inc    eax
  414a32:	push   0x1000002
  414a37:	or     BYTE PTR [eax],al
  414a39:	push   eax
  414a3a:	adc    BYTE PTR [eax+eax*4],al
  414a3d:	add    BYTE PTR [esp+eax*1-0x54],ah
  414a41:	adc    al,0x82
  414a43:	add    BYTE PTR [eax],cl
  414a45:	mov    al,ds:0x10a0d810
  414a4a:	adc    BYTE PTR [esp+eiz*4],bh
  414a4d:	or     eax,DWORD PTR [eax-0x3ebff5ff]
  414a53:	or     al,0x8
  414a55:	add    al,0x0
  414a57:	outs   dx,DWORD PTR ds:[esi]
  414a58:	add    BYTE PTR [eax*8+0x3610088],ah
  414a5f:	add    BYTE PTR [edx+eax*1-0x3d],al
  414a63:	ja     0x414a69
  414a65:	add    BYTE PTR [eax+ecx*1],ch
  414a68:	mov    dh,0xc
  414a6a:	and    BYTE PTR [eax],al
  414a6c:	loope  0x414a90
  414a6e:	les    ecx,FWORD PTR [edx]
  414a70:	add    al,0x41
  414a72:	dec    ecx
  414a73:	add    BYTE PTR [eax+0xf],ah
  414a76:	and    al,0x44
  414a78:	add    DWORD PTR [ecx],ebx
  414a7a:	add    BYTE PTR [eax-0x775fe000],dl
  414a80:	add    DWORD PTR [eax+0x1],eax
  414a83:	and    DWORD PTR [eax],eax
  414a85:	imul   ebp,DWORD PTR [ebp+0x85060],0x41
  414a8c:	les    eax,FWORD PTR [eax]
  414a8e:	adc    BYTE PTR [eax+0x8],cl
  414a91:	add    BYTE PTR [eax],al
  414a93:	bound  ebp,QWORD PTR [eax+0x41142020]
  414a99:	adc    BYTE PTR [eax],ah
  414a9b:	adc    BYTE PTR [eax],dl
  414a9d:	add    dl,BYTE PTR [eax+eax*1+0x1e]
  414aa1:	add    BYTE PTR [eax],al
  414aa3:	adc    DWORD PTR [esp+eax*1],esp
  414aa6:	add    BYTE PTR [eax],cl
  414aa8:	rol    DWORD PTR [eax],0x99
  414aab:	pusha  
  414aac:	push   es
  414aad:	mov    eax,ds:0x816c8806
  414ab2:	and    DWORD PTR [eax],edx
  414ab4:	inc    esp
  414ab5:	add    al,0x40
  414ab7:	add    BYTE PTR [ecx],al
  414ab9:	or     BYTE PTR [edx],bl
  414abb:	or     BYTE PTR [eax],al
  414abd:	add    BYTE PTR [edx+0x822210],al
  414ac3:	add    DWORD PTR [eax],edx
  414ac5:	add    al,0x41
  414ac7:	push   ebp
  414ac8:	mov    WORD PTR [edx],?
  414aca:	add    BYTE PTR [eax-0x7f77f000],dh
  414ad0:	add    BYTE PTR [eax],al
  414ad2:	mov    ds:0x92101010,al
  414ad7:	push   ebx
  414ad8:	adc    BYTE PTR [eax],al
  414ada:	push   0x40010c
  414adf:	and    BYTE PTR [eax+0x4137021],0x80
  414ae6:	add    al,0x69
  414ae8:	inc    ecx
  414ae9:	or     BYTE PTR [ecx],dl
  414aeb:	add    BYTE PTR [ecx+0x49],al
  414aee:	add    eax,0x820c2004
  414af3:	inc    edx
  414af4:	add    BYTE PTR [eax+0x8015013],al
  414afa:	and    al,al
  414afc:	and    BYTE PTR [edx+0x188e9300],al
  414b02:	inc    eax
  414b03:	add    BYTE PTR [edx],ah
  414b05:	or     DWORD PTR [eax],ecx
  414b07:	mov    BYTE PTR [eax],al
  414b09:	test   BYTE PTR [edx+0x0],cl
  414b0c:	adc    BYTE PTR [eax],al
  414b0e:	add    BYTE PTR [eax],al
  414b10:	xor    al,0x5
  414b12:	dec    ebp
  414b13:	and    DWORD PTR [esi+0x4],edx
  414b16:	and    eax,DWORD PTR [ecx+0x22]
  414b19:	add    al,BYTE PTR [eax]
  414b1b:	add    BYTE PTR [ecx+0x41700020],al
  414b21:	add    BYTE PTR [ebp-0x17],al
  414b24:	adc    al,0x2
  414b26:	inc    eax
  414b27:	add    BYTE PTR [eax+eax*2],cl
  414b2a:	add    BYTE PTR [eax],dl
  414b2c:	inc    esi
  414b2d:	xor    BYTE PTR [eax],al
  414b2f:	add    BYTE PTR [ecx],al
  414b31:	inc    eax
  414b32:	daa    
  414b33:	add    BYTE PTR [eax],dl
  414b35:	add    al,0x20
  414b37:	(bad)  
  414b39:	or     eax,0x800414a
  414b3e:	add    al,0x2
  414b40:	mov    BYTE PTR [eax],al
  414b42:	sub    al,0x80
  414b44:	add    BYTE PTR [ecx+edx*2+0x1],al
  414b48:	or     BYTE PTR [eax+0x44020224],cl
  414b4e:	aaa    
  414b4f:	adc    BYTE PTR [eax],al
  414b51:	adc    dh,BYTE PTR [eax]
  414b53:	or     DWORD PTR [eax],esp
  414b55:	les    ebx,FWORD PTR [eax]
  414b57:	or     BYTE PTR [ecx],ah
  414b59:	or     BYTE PTR [eax],al
  414b5b:	add    al,0x20
  414b5d:	dec    eax
  414b5e:	mov    al,0x8d
  414b60:	int    0xe1
  414b62:	cmp    BYTE PTR [eax],0x1
  414b65:	inc    eax
  414b66:	adc    al,0x0
  414b68:	mov    BYTE PTR [ecx],al
  414b6a:	add    al,0xc9
  414b6c:	and    BYTE PTR [eax],al
  414b6e:	add    BYTE PTR [ecx+eax*1],cl
  414b71:	add    ah,BYTE PTR [eax]
  414b73:	adc    ah,BYTE PTR [eax]
  414b75:	add    BYTE PTR [eax+0x4],al
  414b78:	or     BYTE PTR [eax],ah
  414b7a:	xor    al,BYTE PTR [eax+0x950022]
  414b80:	rol    BYTE PTR [ecx],0x88
  414b83:	inc    eax
  414b84:	add    BYTE PTR [eax+0x1118c1],al
  414b8a:	add    DWORD PTR [eax],eax
  414b8c:	adc    BYTE PTR [eax],al
  414b8e:	mov    al,ds:0xc4c4
  414b93:	sbb    BYTE PTR [eax+0x10000010],al
  414b99:	add    al,0x60
  414b9b:	add    BYTE PTR [ebx],al
  414b9d:	add    BYTE PTR [eax+0x40],dl
  414ba0:	add    BYTE PTR [eax],0x42
  414ba3:	add    al,BYTE PTR [ebx]
  414ba5:	jo     0x414ba7
  414ba7:	add    BYTE PTR [ecx],0x4
  414baa:	add    BYTE PTR [ecx],al
  414bac:	inc    ecx
  414bad:	inc    ecx
  414bae:	adc    BYTE PTR [edx],0xa8
  414bb1:	and    al,0x0
  414bb3:	inc    eax
  414bb4:	fadd   QWORD PTR [eax+ecx*1+0x0]
  414bb8:	add    BYTE PTR [eax],al
  414bba:	adc    BYTE PTR [esi],al
  414bbc:	and    BYTE PTR [esi+eiz*1],ah
  414bbf:	add    BYTE PTR [eax],dh
  414bc1:	adc    DWORD PTR [eax+0x0],eax
  414bc4:	addr16 inc eax
  414bc6:	inc    ebp
  414bc7:	add    DWORD PTR [esi],0xc048d09
  414bcd:	or     BYTE PTR [ecx],cl
  414bcf:	sbb    DWORD PTR [edi+0x405240c2],eax
  414bd5:	add    al,0x10
  414bd7:	add    BYTE PTR [eax],0x0
  414bda:	add    DWORD PTR [ecx],esp
  414bdc:	add    BYTE PTR [edx],al
  414bde:	push   eax
  414bdf:	ins    BYTE PTR es:[edi],dx
  414be0:	or     al,BYTE PTR [eax]
  414be2:	sub    BYTE PTR [esp+eax*4],cl
  414be5:	add    al,BYTE PTR [eax]
  414be7:	inc    ebp
  414be8:	add    dl,BYTE PTR [eax+eax*1]
  414beb:	mov    al,0x40
  414bed:	or     BYTE PTR [eax+edx*1],al
  414bf0:	add    al,0x0
  414bf2:	add    BYTE PTR [eax],dh
  414bf4:	add    BYTE PTR [esi],al
  414bf6:	add    BYTE PTR [eax+0x1001040],0x40
  414bfd:	inc    ecx
  414bfe:	adc    cl,BYTE PTR [edi-0x7eeedcf0]
  414c04:	inc    ebx
  414c05:	cmp    DWORD PTR [eax],ecx
  414c07:	inc    eax
  414c08:	and    BYTE PTR [ecx],al
  414c0a:	add    DWORD PTR [eax+0x2800202c],ebp
  414c10:	xchg   esp,eax
  414c11:	cmp    BYTE PTR [eax],cl
  414c13:	add    ah,BYTE PTR [eax+eax*4+0x40980081]
  414c1a:	add    DWORD PTR [eax+0x12],eax
  414c1d:	dec    esp
  414c1e:	adc    BYTE PTR [ecx],al
  414c20:	add    DWORD PTR ds:0x249a102,eax
  414c26:	add    DWORD PTR [ecx+0x0],eax
  414c29:	loop   0x414bac
  414c2b:	dec    eax
  414c2c:	add    BYTE PTR [eax],dl
  414c2e:	add    BYTE PTR ds:0x82b10800,al
  414c34:	add    DWORD PTR [eax+0x1],eax
  414c37:	add    BYTE PTR [ecx+0x5c],dl
  414c3a:	or     BYTE PTR [eax],0x2
  414c3d:	add    BYTE PTR [eax],dl
  414c3f:	push   es
  414c40:	and    DWORD PTR [eax+0xc],0x81294120
  414c47:	pusha  
  414c48:	add    DWORD PTR [eax],eax
  414c4a:	dec    ecx
  414c4b:	inc    eax
  414c4c:	adc    DWORD PTR [eax],eax
  414c4e:	loopne 0x414cb2
  414c50:	mov    al,ds:0x115180
  414c55:	add    BYTE PTR [eax],ah
  414c57:	add    BYTE PTR [ecx],0x41
  414c5a:	adc    BYTE PTR [eax+0x40],al
  414c5d:	inc    ebx
  414c5e:	inc    eax
  414c5f:	or     al,0x16
  414c61:	push   eax
  414c62:	inc    eax
  414c63:	pusha  
  414c64:	mov    DWORD PTR [eax],edx
  414c66:	sbb    BYTE PTR [eax],0x86
  414c69:	add    DWORD PTR [eax],eax
  414c6b:	inc    eax
  414c6c:	add    al,0x0
  414c6e:	add    BYTE PTR [eax+eax*1+0x224c5542],al
  414c75:	add    DWORD PTR [ecx+eax*2-0x673ebffe],eax
  414c7c:	add    BYTE PTR [ecx],al
  414c7e:	ins    BYTE PTR es:[edi],dx
  414c7f:	je     0x414c96
  414c81:	add    BYTE PTR [edx],al
  414c83:	add    al,BYTE PTR [eax]
  414c85:	push   eax
  414c86:	and    BYTE PTR [eax+0x23950011],al
  414c8c:	add    al,0x45
  414c8e:	add    BYTE PTR [ecx],bl
  414c90:	rol    BYTE PTR [eax],0x80
  414c93:	add    DWORD PTR [eax],eax
  414c95:	sbb    BYTE PTR [ecx-0x6c],ah
  414c98:	test   BYTE PTR [eax],dl
  414c9a:	xor    BYTE PTR [edx-0x7bfdbf6d],ah
  414ca0:	add    al,0x4
  414ca2:	add    DWORD PTR [edx],ecx
  414ca4:	inc    eax
  414ca5:	add    eax,0x500c800
  414caa:	or     eax,0xd2938044
  414caf:	xchg   BYTE PTR [eax],cl
  414cb1:	sub    bh,BYTE PTR [eax+0x2248c108]
  414cb7:	rol    ah,0x0
  414cba:	adc    al,BYTE PTR [ecx]
  414cbc:	adc    BYTE PTR [ebx+0x68],al
  414cbf:	and    dl,BYTE PTR [edx]
  414cc1:	add    BYTE PTR [ecx+0x0],0xc
  414cc5:	inc    ecx
  414cc6:	inc    ecx
  414cc7:	adc    BYTE PTR [eax],ah
  414cc9:	ret    0x3010
  414ccc:	add    BYTE PTR [ecx+eax*1-0x72bac7ef],ah
  414cd3:	inc    eax
  414cd4:	add    BYTE PTR [ecx],bl
  414cd6:	inc    eax
  414cd7:	aam    0x1
  414cd9:	push   es
  414cda:	adc    BYTE PTR [esi],dl
  414cdc:	inc    esp
  414cdd:	and    BYTE PTR [eax],al
  414cdf:	pop    eax
  414ce0:	push   eax
  414ce1:	dec    eax
  414ce2:	push   eax
  414ce3:	adc    BYTE PTR [eax],cl
  414ce5:	jo     0x414ce8
  414ce7:	add    ah,al
  414ce9:	or     DWORD PTR [eax+ecx*1],edi
  414cec:	add    BYTE PTR [esi],al
  414cee:	add    esp,DWORD PTR [edx]
  414cf0:	inc    eax
  414cf1:	add    BYTE PTR [eax],0x41
  414cf4:	push   0x30008085
  414cf9:	inc    edx
  414cfa:	add    BYTE PTR [ecx],ah
  414cfc:	adc    BYTE PTR [eax],dl
  414cfe:	and    eax,DWORD PTR [eax+eax*8+0x0]
  414d02:	add    al,BYTE PTR [ecx-0x37ffff5c]
  414d08:	(bad)  
  414d09:	add    BYTE PTR [ebx+0x18800824],al
  414d0f:	add    al,BYTE PTR [ecx]
  414d11:	add    dl,BYTE PTR [ebp+0x20]
  414d14:	add    al,0x3
  414d16:	adc    BYTE PTR [ecx],al
  414d18:	add    BYTE PTR [edx+0x2],ah
  414d1b:	add    BYTE PTR [ecx-0x7f],al
  414d1e:	inc    eax
  414d1f:	or     DWORD PTR [eax],ecx
  414d21:	inc    edi
  414d22:	adc    BYTE PTR [eax+eax*1],al
  414d25:	add    BYTE PTR [eax+0x38],dh
  414d28:	or     BYTE PTR [edx-0x1def0000],al
  414d2e:	leave  
  414d2f:	test   BYTE PTR [ebp+eax*1+0x40019104],al
  414d36:	add    DWORD PTR [esp+ecx*1+0x0],eax
  414d3a:	add    BYTE PTR [esi],al
  414d3c:	push   eax
  414d3d:	add    BYTE PTR [eax],cl
  414d3f:	add    BYTE PTR [ecx],al
  414d41:	add    BYTE PTR [eax],dl
  414d43:	add    BYTE PTR [eax+0x44000800],0x12
  414d4a:	dec    ecx
  414d4b:	push   ecx
  414d4c:	push   esp
  414d4d:	add    BYTE PTR [eax+0x2a],dl
  414d50:	loop   0x414d02
  414d52:	dec    eax
  414d53:	outs   dx,DWORD PTR ds:[esi]
  414d54:	dec    ecx
  414d55:	and    BYTE PTR [eax],al
  414d57:	lea    edx,[esp+edx*1+0x60200441]
  414d5e:	add    BYTE PTR [eax],ah
  414d60:	and    BYTE PTR [ecx-0x3ffedfbc],ah
  414d66:	mov    eax,0x24043112
  414d6b:	adc    al,BYTE PTR [eax+0x80840]
  414d71:	add    BYTE PTR [eax],al
  414d73:	sub    DWORD PTR [eax],ebp
  414d75:	add    dl,BYTE PTR [esp+ecx*4+0xc060080]
  414d7c:	add    BYTE PTR [eax+0x5],al
  414d7f:	add    BYTE PTR [eax],ah
  414d81:	inc    edx
  414d82:	add    BYTE PTR [eax],ah
  414d84:	add    BYTE PTR [eax],al
  414d86:	mov    al,ds:0x410c200a
  414d8b:	mov    eax,ds:0x91000
  414d90:	add    al,BYTE PTR [edx+0x40001]
  414d96:	shl    BYTE PTR [eax],0x22
  414d99:	add    BYTE PTR [eax],al
  414d9b:	popa   
  414d9c:	add    BYTE PTR [eax+0x41],dl
  414d9f:	mov    BYTE PTR [esi],ah
  414da1:	add    BYTE PTR [ecx+0x20001942],cl
  414da7:	and    BYTE PTR [eax],dl
  414da9:	ror    BYTE PTR [eax],0x80
  414dac:	nop
  414dad:	add    al,cl
  414daf:	and    BYTE PTR [edx],al
  414db1:	adc    BYTE PTR [eax+0x5],al
  414db4:	int3   
  414db5:	add    BYTE PTR [ecx+eiz*2],al
  414db8:	xor    BYTE PTR fs:[eax],ah
  414dbb:	add    BYTE PTR [ecx],al
  414dbd:	add    BYTE PTR [ebx],dl
  414dbf:	adc    BYTE PTR [eax+eax*4+0x60820000],cl
  414dc6:	add    edx,0x1000561
  414dcc:	add    BYTE PTR [eax],cl
  414dce:	add    esp,DWORD PTR [ebx-0x62]
  414dd1:	loopne 0x414de3
  414dd3:	add    DWORD PTR [ecx],ecx
  414dd5:	rcl    BYTE PTR [eax],0x4
  414dd8:	add    BYTE PTR [eax+0x22a392c],dl
  414dde:	add    al,0xa8
  414de0:	add    al,BYTE PTR [eax]
  414de2:	push   eax
  414de3:	sub    al,0xdd
  414de5:	inc    eax
  414de6:	and    BYTE PTR [eax+eax*2+0x10248],cl
  414ded:	add    BYTE PTR [eax],cl
  414def:	add    BYTE PTR [eax+ebp*1],al
  414df2:	push   edx
  414df3:	add    DWORD PTR [ecx+0x0],esp
  414df6:	adc    eax,0x48240000
  414dfb:	add    BYTE PTR [eax],cl
  414dfd:	add    al,0x51
  414dff:	sub    BYTE PTR [esp+eax*8],ah
  414e02:	or     BYTE PTR [eax+0x1],dl
  414e05:	inc    BYTE PTR [eax+0x5812800]
  414e0b:	add    cl,cl
  414e0d:	add    DWORD PTR [eax],eax
  414e0f:	add    BYTE PTR [eax],dl
  414e11:	ret    
  414e12:	add    BYTE PTR [esi],ah
  414e14:	cmp    BYTE PTR [ecx],al
  414e16:	icebp  
  414e17:	popa   
  414e18:	add    al,0x0
  414e1a:	and    al,0x2
  414e1c:	xor    dh,BYTE PTR es:[eax]
  414e1f:	add    BYTE PTR [eax+eax*4],al
  414e22:	es dec ebx
  414e24:	inc    ecx
  414e25:	sub    BYTE PTR [eax],cl
  414e27:	add    eax,0x60e54c
  414e2c:	add    DWORD PTR [ecx],0x98020000
  414e32:	jo     0x414e34
  414e34:	pop    eax
  414e35:	add    ah,BYTE PTR [ecx+edi*2]
  414e38:	add    al,BYTE PTR [eax]
  414e3a:	inc    eax
  414e3b:	inc    ecx
  414e3c:	xor    BYTE PTR [eax],al
  414e3e:	add    BYTE PTR [edx+0x2],al
  414e41:	adc    BYTE PTR [ecx+eiz*1+0x417100],al
  414e48:	je     0x414e4b
  414e4a:	inc    edx
  414e4b:	adc    BYTE PTR [edx],al
  414e4d:	add    BYTE PTR [ecx+0x9050001],cl
  414e53:	add    BYTE PTR [eax+esi*1-0x3c],al
  414e57:	add    BYTE PTR [edx-0x4b],al
  414e5a:	test   BYTE PTR [ecx],0x0
  414e5d:	add    BYTE PTR [eax],cl
  414e5f:	inc    ecx
  414e60:	and    ebp,ebx
  414e62:	add    al,BYTE PTR [eax-0x2f]
  414e65:	inc    edx
  414e66:	mov    al,ds:0x960098
  414e6b:	add    al,0x8
  414e6d:	or     BYTE PTR [eax],al
  414e6f:	and    BYTE PTR [eax+0x8],0x23
  414e73:	add    DWORD PTR [ecx-0x3f],eax
  414e76:	add    BYTE PTR [eax],al
  414e78:	add    ah,BYTE PTR [eax]
  414e7a:	xor    al,0x60
  414e7c:	add    BYTE PTR [eax+0x20],al
  414e7f:	add    BYTE PTR [eax],0x69
  414e82:	or     BYTE PTR [ecx],dl
  414e84:	add    dh,BYTE PTR [eax]
  414e86:	add    BYTE PTR [eax+eax*1],al
  414e89:	add    BYTE PTR [eax],0x1
  414e8c:	or     al,0x4
  414e8e:	lea    edx,[eax]
  414e90:	inc    eax
  414e91:	add    eax,0x10244014
  414e96:	inc    eax
  414e97:	add    BYTE PTR [ecx],dl
  414e99:	pusha  
  414e9a:	add    BYTE PTR ds:0x160101,dl
  414ea0:	add    DWORD PTR [edx+0x40510110],eax
  414ea6:	add    BYTE PTR [eax],ah
  414ea8:	or     BYTE PTR [eax+0x10080008],0x10
  414eaf:	add    BYTE PTR [edx+0x41120004],al
  414eb5:	add    BYTE PTR [eax],al
  414eb7:	inc    edx
  414eb8:	push   es
  414eb9:	add    BYTE PTR [eax+0x0],al
  414ebc:	add    BYTE PTR [edi-0x7ff9ff20],al
  414ec2:	(bad)  
  414ec3:	xor    al,0x0
  414ec5:	add    BYTE PTR fs:[eax+0x40a0400f],al
  414ecc:	test   DWORD PTR [eax+ecx*1],eax
  414ecf:	mov    BYTE PTR [ecx],cl
  414ed1:	and    BYTE PTR [edx],al
  414ed3:	add    BYTE PTR [ecx+0x1],ah
  414ed6:	push   0x180549ac
  414edb:	adc    dl,0x60
  414ede:	adc    DWORD PTR [esi],eax
  414ee0:	xor    ah,dl
  414ee2:	inc    eax
  414ee3:	add    BYTE PTR [eax],0x6
  414ee6:	add    BYTE PTR [ecx-0x7feadc00],cl
  414eec:	or     BYTE PTR [eax],al
  414eee:	push   cs
  414eef:	test   BYTE PTR [eax+0x1a],cl
  414ef2:	add    DWORD PTR [eax],0xa02
  414ef8:	popa   
  414ef9:	add    BYTE PTR [eax],al
  414efb:	add    BYTE PTR [eax],al
  414efd:	inc    eax
  414efe:	adc    BYTE PTR [eax],0x0
  414f01:	add    DWORD PTR [ebp+0x40],esp
  414f04:	and    DWORD PTR [eax+0x10],eax
  414f07:	rol    DWORD PTR [eax],0x80
  414f0a:	add    BYTE PTR [ecx-0x4c],al
  414f0d:	loope  0x414f61
  414f0f:	inc    ecx
  414f10:	adc    BYTE PTR [ecx+0x501a4000],bl
  414f16:	add    BYTE PTR [ebx-0x3ffd9ffe],al
  414f1c:	and    BYTE PTR [eax],ch
  414f1e:	push   es
  414f1f:	xor    BYTE PTR [eax],dh
  414f21:	push   eax
  414f22:	and    BYTE PTR fs:[eax],al
  414f25:	add    BYTE PTR [ecx],0x0
  414f28:	push   es
  414f29:	inc    esp
  414f2a:	add    BYTE PTR [eax],ah
  414f2c:	adc    BYTE PTR [eax+0x68],dl
  414f2f:	adc    DWORD PTR [eax],eax
  414f31:	push   edi
  414f32:	add    BYTE PTR [eax+ebx*1],al
  414f35:	adc    BYTE PTR [eax],ah
  414f37:	loopne 0x414f41
  414f39:	or     DWORD PTR [edx-0x7fff5c80],0x1570620
  414f43:	add    BYTE PTR [eax],al
  414f45:	test   BYTE PTR [eax],al
  414f47:	inc    esp
  414f48:	add    BYTE PTR [eax],ah
  414f4a:	inc    esp
  414f4b:	add    BYTE PTR [eax],al
  414f4d:	jp     0x414f81
  414f4f:	xchg   esi,eax
  414f50:	mov    es,WORD PTR [eax]
  414f52:	add    eax,0x280000
  414f57:	adc    BYTE PTR [eax],dl
  414f59:	add    BYTE PTR [ebx+eiz*8+0x0],cl
  414f5d:	push   es
  414f5e:	in     eax,0x2
  414f60:	add    BYTE PTR [eax],cl
  414f62:	add    BYTE PTR [eax],0x90
  414f65:	add    BYTE PTR [ebx+ecx*2],dh
  414f68:	sbb    BYTE PTR [eax],al
  414f6a:	adc    al,0x31
  414f6c:	mov    eax,ds:0x4190
  414f71:	xor    BYTE PTR [esi],0x0
  414f74:	add    eax,DWORD PTR [eax]
  414f76:	add    BYTE PTR [ecx+0x10],dl
  414f79:	or     al,0x0
  414f7b:	xor    al,BYTE PTR [eax]
  414f7d:	sub    DWORD PTR [edx],eax
  414f7f:	enter  0xaa0,0x3
  414f83:	add    BYTE PTR [ecx],al
  414f85:	and    esp,DWORD PTR [ebx-0x80]
  414f88:	sub    BYTE PTR [eax],al
  414f8a:	add    DWORD PTR [eax+0xa624a],eax
  414f90:	mov    al,ds:0x5204e000
  414f95:	add    BYTE PTR [eax],al
  414f97:	add    BYTE PTR [eax],0x0
  414f9a:	and    BYTE PTR [eax+0x18],al
  414f9d:	pusha  
  414f9e:	inc    eax
  414f9f:	add    al,0x40
  414fa1:	inc    ecx
  414fa2:	adc    BYTE PTR [eax+0x22],dh
  414fa5:	add    al,0x5
  414fa7:	loopne 0x414f69
  414fa9:	je     0x414f35
  414fab:	nop
  414fac:	adc    eax,0x15000851
  414fb1:	add    DWORD PTR [ebx],esp
  414fb3:	add    BYTE PTR [eax],0x9
  414fb6:	and    BYTE PTR [ebx],dh
  414fb8:	add    al,BYTE PTR [ebp+0x14080807]
  414fbe:	add    al,0x88
  414fc0:	ror    DWORD PTR [edx+0x22],0x4
  414fc4:	inc    ebx
  414fc5:	add    BYTE PTR [eax],ah
  414fc7:	or     al,al
  414fc9:	add    BYTE PTR [eax+0x12712800],cl
  414fcf:	dec    eax
  414fd0:	add    ah,BYTE PTR [eax]
  414fd2:	add    BYTE PTR [edi+eax*1],al
  414fd5:	add    BYTE PTR [eax-0x80],al
  414fd8:	and    BYTE PTR [eax],al
  414fda:	and    dl,BYTE PTR [edx]
  414fdc:	add    BYTE PTR [eax],al
  414fde:	pop    ecx
  414fdf:	mov    eax,edx
  414fe1:	add    BYTE PTR [edx],bl
  414fe3:	add    BYTE PTR [edx],dl
  414fe5:	and    BYTE PTR [eax+0xc100800],0x10
  414fec:	add    BYTE PTR [eax],dh
  414fee:	inc    eax
  414fef:	add    DWORD PTR [eax],ebp
  414ff1:	adc    DWORD PTR [eax],eax
  414ff3:	or     al,al
  414ff5:	add    BYTE PTR [eax+0xc4200],al
  414ffb:	mov    DWORD PTR [eax+0x101a1],eax
  415001:	or     BYTE PTR [eax+eax*1-0x2ffeff80],0x0
  415009:	add    BYTE PTR [eax],al
  41500b:	and    BYTE PTR [eax+edx*2],dl
  41500e:	cwde   
  41500f:	inc    esp
  415010:	adc    al,0x22
  415012:	and    BYTE PTR [eax],al
  415014:	add    BYTE PTR [eax],ah
  415016:	dec    ebx
  415017:	push   edx
  415018:	add    BYTE PTR [ebp+0x42],al
  41501b:	and    DWORD PTR [eax+0x81041],edx
  415021:	push   es
  415022:	add    DWORD PTR [ecx],0x6d845800
  415028:	add    al,0x82
  41502a:	add    BYTE PTR [eax],cl
  41502c:	add    al,0x41
  41502e:	sub    al,BYTE PTR [edx+0x0]
  415031:	add    al,0x0
  415033:	or     al,0x0
  415035:	add    BYTE PTR [eax],al
  415037:	leave  
  415038:	pop    edx
  415039:	nop
  41503a:	sbb    DWORD PTR [esp+eax*1],eax
  41503d:	mov    al,ds:0x82000005
  415042:	inc    ecx
  415043:	nop
  415044:	add    BYTE PTR [eax],al
  415046:	add    BYTE PTR [eax],al
  415048:	add    BYTE PTR [eax],ch
  41504a:	sbb    BYTE PTR [ecx],ah
  41504c:	add    BYTE PTR [ecx],cl
  41504e:	or     DWORD PTR [eax],0x41
  415051:	add    al,0x81
  415053:	and    BYTE PTR [esi],dl
  415055:	add    DWORD PTR [eax+eax*1],0x2181c00
  41505c:	es inc edx
  41505e:	and    BYTE PTR [eax],al
  415060:	add    BYTE PTR [eax+0x2000240],bl
  415066:	and    eax,DWORD PTR [ebx+0x0]
  415069:	push   0x70948b65
  41506e:	nop
  41506f:	adc    BYTE PTR [ecx+0xda62240],al
  415075:	add    DWORD PTR [ecx+0x5a071],eax
  41507b:	inc    eax
  41507c:	inc    eax
  41507d:	add    al,BYTE PTR [eax+0x41]
  415080:	add    BYTE PTR [eax],0x49
  415083:	and    DWORD PTR [eax],eax
  415085:	add    BYTE PTR [esp+ebp*4],0x0
  415089:	add    al,0x30
  41508b:	inc    ecx
  41508c:	js     0x41508e
  41508e:	add    DWORD PTR [ebx-0x1b],ecx
  415091:	nop
  415092:	and    BYTE PTR [ecx],al
  415094:	add    BYTE PTR [edx],0x20
  415097:	add    BYTE PTR [eax-0x77fb53af],al
  41509d:	pop    es
  41509e:	add    BYTE PTR [eax],al
  4150a0:	test   BYTE PTR [ecx],dl
  4150a2:	and    BYTE PTR [ebx+eax*1+0x4],cl
  4150a6:	xchg   edx,eax
  4150a7:	inc    eax
  4150a8:	xor    DWORD PTR [ecx],edx
  4150aa:	pop    eax
  4150ab:	or     BYTE PTR [ecx-0x60],al
  4150ae:	add    DWORD PTR [eax],eax
  4150b0:	add    BYTE PTR [eax],al
  4150b2:	add    ah,BYTE PTR [ecx+0x0]
  4150b5:	add    BYTE PTR [edx+0x20],bl
  4150b8:	loope  0x4150ba
  4150ba:	push   esp
  4150bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150bc:	add    DWORD PTR [eax],eax
  4150be:	add    cl,BYTE PTR [eax]
  4150c0:	inc    eax
  4150c1:	add    cl,BYTE PTR [eax+eax*8]
  4150c4:	and    DWORD PTR [eax],eax
  4150c6:	add    BYTE PTR [eax+eiz*4-0x5e],0x4
  4150cb:	leave  
  4150cc:	and    BYTE PTR [edi+0xc0e044],0x24
  4150d3:	dec    eax
  4150d4:	add    BYTE PTR [ecx],al
  4150d6:	mov    ds:0x990c008,eax
  4150db:	xor    BYTE PTR [eax+0x104a8000],al
  4150e1:	or     eax,0x4c040200
  4150e6:	mov    al,ds:0x18030072
  4150eb:	push   0xc0058006
  4150f0:	push   es
  4150f1:	inc    ecx
  4150f2:	add    BYTE PTR [ebp+0x0],ah
  4150f5:	mov    al,al
  4150f7:	add    BYTE PTR [ebx+0x9],al
  4150fa:	loopne 0x4150fc
  4150fc:	xor    DWORD PTR [eax+0x20418661],eax
  415102:	adc    al,BYTE PTR [eax+eax*1+0x4022000]
  415109:	inc    eax
  41510a:	pusha  
  41510b:	add    BYTE PTR [eax+eax*1+0x488201],cl
  415112:	mov    cl,0xb1
  415114:	or     al,BYTE PTR [edx]
  415116:	add    BYTE PTR [eax],ah
  415118:	add    al,0x4
  41511a:	add    BYTE PTR [eax],ah
  41511c:	add    BYTE PTR [ecx+0x0],cl
  41511f:	add    al,BYTE PTR [eax]
  415121:	xchg   esp,eax
  415122:	and    BYTE PTR [ecx],al
  415124:	inc    esp
  415125:	inc    eax
  415126:	popa   
  415127:	xor    BYTE PTR [eax],cl
  415129:	adc    eax,0x6082d0
  41512e:	add    BYTE PTR [eax],ah
  415130:	inc    eax
  415131:	and    BYTE PTR [eax+eax*1-0x5afbfbff],bl
  415138:	add    DWORD PTR [eax+eax*1+0x24000402],eax
  41513f:	add    BYTE PTR [eax],cl
  415141:	adc    DWORD PTR [eax+0x8520082],ecx
  415147:	sbb    BYTE PTR [eax],al
  415149:	inc    ebp
  41514a:	and    BYTE PTR [eax],ah
  41514c:	pusha  
  41514d:	or     DWORD PTR ds:0x18400000,eax
  415153:	xor    BYTE PTR fs:[ecx],0x10
  415157:	add    BYTE PTR [ecx-0x2f],al
  41515a:	pusha  
  41515b:	add    DWORD PTR [ecx+0x51009188],esp
  415161:	add    BYTE PTR [eax+ecx*1],0x62
  415165:	or     al,BYTE PTR [eax+eax*2]
  415168:	add    dl,ah
  41516a:	add    BYTE PTR [ecx+eiz*2],al
  41516d:	or     BYTE PTR [eax],al
  41516f:	adc    BYTE PTR [ecx],al
  415171:	xchg   esp,eax
  415172:	adc    ecx,esi
  415174:	add    al,0x10
  415176:	or     BYTE PTR [eax],al
  415178:	push   es
  415179:	add    DWORD PTR [eax],0x81181580
  41517f:	je     0x415181
  415181:	adc    DWORD PTR [edx],eax
  415183:	inc    eax
  415184:	add    BYTE PTR [eax+0x46],0xa
  415188:	add    ah,BYTE PTR [eax-0x3fe7d73c]
  41518e:	add    DWORD PTR ds:0x10201084,eax
  415194:	and    al,0x8d
  415196:	mov    al,ds:0x8220502
  41519b:	add    BYTE PTR [edx+0x4104206],al
  4151a1:	or     cl,al
  4151a3:	add    BYTE PTR [ebx],al
  4151a5:	adc    DWORD PTR [eax],eax
  4151a7:	add    BYTE PTR [eax+0x3],ah
  4151aa:	add    eax,ebx
  4151ac:	add    al,0x1
  4151ae:	in     eax,0x20
  4151b0:	test   eax,0x4c08a11b
  4151b5:	dec    edx
  4151b6:	add    BYTE PTR [ecx],al
  4151b8:	adc    BYTE PTR [eax],al
  4151ba:	add    al,0x0
  4151bc:	add    DWORD PTR [eax],eax
  4151be:	inc    ecx
  4151bf:	add    BYTE PTR [edx+0x14],ah
  4151c2:	and    al,BYTE PTR [ecx]
  4151c4:	adc    DWORD PTR [eax],eax
  4151c6:	sbb    al,BYTE PTR [esi+0x64]
  4151c9:	adc    BYTE PTR [esi+ecx*1],dh
  4151cc:	je     0x4151ce
  4151ce:	pop    ecx
  4151cf:	inc    ecx
  4151d0:	add    BYTE PTR [eax+eax*1],ah
  4151d3:	mov    cl,al
  4151d5:	and    ah,0x40
  4151d8:	add    DWORD PTR [eax],0x449044f9
  4151de:	mov    al,0x0
  4151e0:	inc    ebp
  4151e1:	add    BYTE PTR [ecx],al
  4151e3:	mov    eax,0x90010000
  4151e8:	inc    esp
  4151e9:	add    BYTE PTR [eax+eax*1],dl
  4151ec:	xor    BYTE PTR [ecx],al
  4151ee:	push   ss
  4151ef:	add    BYTE PTR [eax],ah
  4151f1:	dec    esi
  4151f2:	inc    ecx
  4151f3:	add    BYTE PTR [edx+0x82008d3],al
  4151f9:	or     BYTE PTR [esp],dl
  4151fc:	shl    ah,0x92
  4151ff:	and    eax,ecx
  415201:	add    BYTE PTR [ebp+0x410560cb],dl
  415207:	add    cl,BYTE PTR [esi+0x18]
  41520a:	add    BYTE PTR [eax],ch
  41520c:	add    BYTE PTR [eax],al
  41520e:	shl    DWORD PTR [eax],0x4
  415211:	add    al,0x80
  415213:	add    dl,BYTE PTR [eax+0x20]
  415216:	and    BYTE PTR [eax+eax*1],0x20
  41521a:	pusha  
  41521b:	mov    ebp,0x80660080
  415220:	adc    BYTE PTR [eax+eax*2+0x20884100],bl
  415227:	add    al,0x6
  415229:	add    DWORD PTR [eax],ecx
  41522b:	es inc ecx
  41522d:	sub    BYTE PTR [eax+0x18115401],al
  415233:	add    al,0x1c
  415235:	add    al,0x0
  415237:	or     al,BYTE PTR [edx]
  415239:	add    BYTE PTR [esi],dl
  41523b:	mov    eax,ds:0xaec0888
  415240:	rol    BYTE PTR [eax],cl
  415242:	inc    ecx
  415243:	xor    BYTE PTR [edx],0x10
  415246:	add    BYTE PTR [ecx],al
  415248:	or     dl,BYTE PTR [ecx]
  41524a:	inc    edx
  41524b:	adc    BYTE PTR [eax],0x8
  41524e:	adc    bl,BYTE PTR [ebp+0x100c0524]
  415254:	add    al,BYTE PTR [eax+0x229c8018]
  41525a:	add    BYTE PTR [edx+0x8],ah
  41525d:	adc    BYTE PTR [edx+0x10802004],0x0
  415264:	add    BYTE PTR [edx],cl
  415266:	or     DWORD PTR [edx+0x1100],eax
  41526c:	or     BYTE PTR [eax],ch
  41526e:	add    al,ch
  415270:	pusha  
  415271:	inc    eax
  415272:	xchg   edx,eax
  415273:	sub    ebx,DWORD PTR [edx]
  415275:	add    BYTE PTR [ebp+0x20014100],al
  41527b:	and    al,0x1
  41527d:	add    BYTE PTR [eax],dl
  41527f:	add    BYTE PTR [eax+0x16218d0],al
  415285:	test   BYTE PTR [eax],cl
  415287:	mov    cl,0xcf
  415289:	sar    DWORD PTR [eax+eax*1],0x22
  41528d:	pop    eax
  41528e:	add    BYTE PTR [esi],al
  415290:	inc    eax
  415291:	add    al,0x32
  415293:	add    al,0x3f
  415295:	or     BYTE PTR [ecx],dl
  415297:	or     BYTE PTR [edx],bl
  415299:	lock add BYTE PTR [ebx],ah
  41529c:	add    BYTE PTR [ecx],0x9
  41529f:	and    BYTE PTR [eax],al
  4152a1:	mov    eax,ds:0x55080110
  4152a6:	add    ecx,DWORD PTR [esp+eax*4+0x2a2200b]
  4152ad:	add    BYTE PTR [ecx],al
  4152af:	mov    ds:0x200041c1,al
  4152b4:	adc    BYTE PTR [eax],al
  4152b6:	and    ah,BYTE PTR [eax]
  4152b8:	add    BYTE PTR [eax],0x0
  4152bb:	xchg   edx,eax
  4152bc:	fsub   DWORD PTR [eax]
  4152be:	and    BYTE PTR [edx+eiz*1],al
  4152c1:	or     DWORD PTR [edx],eax
  4152c3:	inc    ecx
  4152c4:	sub    al,BYTE PTR [edx+eiz*1+0x4]
  4152c8:	push   esi
  4152c9:	add    DWORD PTR [eax-0x77fefbfb],ebx
  4152cf:	push   eax
  4152d0:	add    al,0x0
  4152d2:	add    BYTE PTR [eax],al
  4152d4:	add    ah,ah
  4152d6:	mov    eax,0x2028
  4152dc:	adc    BYTE PTR [ebx],cl
  4152de:	add    al,0xe
  4152e0:	xor    BYTE PTR [eax],al
  4152e2:	out    0x40,al
  4152e4:	mov    esi,DWORD PTR [ebx]
  4152e6:	imul   eax,esi,0x20a480c2
  4152ec:	add    BYTE PTR [eax],al
  4152ee:	xor    ah,BYTE PTR [eax]
  4152f0:	popf   
  4152f1:	add    BYTE PTR [eax],al
  4152f3:	je     0x4152f7
  4152f5:	add    al,0x0
  4152f7:	test   BYTE PTR [eax],dl
  4152f9:	xor    BYTE PTR [eax-0x5f7ff9ed],ah
  4152ff:	inc    esp
  415300:	int3   
  415301:	mov    BYTE PTR [eax],ah
  415303:	and    BYTE PTR [eax],al
  415305:	cdq    
  415306:	dec    eax
  415307:	adc    BYTE PTR [esi+esi*1],0xd0
  41530b:	push   eax
  41530c:	add    al,0x16
  41530f:	jo     0x415291
  415311:	adc    dl,0x1
  415314:	dec    ebp
  415315:	or     al,BYTE PTR [eax]
  415317:	or     DWORD PTR [edx],eax
  415319:	adc    al,BYTE PTR [eax]
  41531b:	add    DWORD PTR [eax],0x60500400
  415321:	mov    eax,ds:0x42000111
  415326:	(bad)  
  415327:	xchg   edx,eax
  415328:	or     BYTE PTR [eax+0x0],al
  41532b:	sbb    BYTE PTR [eax+0xc8c231],al
  415331:	mov    al,ds:0x8480200a
  415336:	add    BYTE PTR [eax+0x1a],al
  415339:	xchg   DWORD PTR [eax],eax
  41533b:	adc    al,0x0
  41533d:	bound  edx,QWORD PTR [ecx+eiz*1+0x0]
  415341:	and    DWORD PTR [eax],edx
  415343:	or     BYTE PTR [eax+eax*1+0x10000],al
  41534a:	add    BYTE PTR [edx],cl
  41534c:	add    BYTE PTR [eax+0x0],cl
  41534f:	or     DWORD PTR ds:0x90900004,0x36
  415356:	mov    al,ds:0x8200020
  41535b:	add    cl,BYTE PTR [eax]
  41535d:	add    BYTE PTR [esi+0x8],ch
  415360:	dec    ecx
  415361:	test   BYTE PTR [eax],al
  415363:	add    BYTE PTR [ecx],al
  415365:	jmp    0xc9546b
  41536a:	adc    eax,DWORD PTR [esi+edx*1]
  41536d:	das    
  41536e:	xchg   edx,eax
  41536f:	and    BYTE PTR [eax],al
  415371:	or     eax,0x41000011
  415376:	adc    eax,0x2880500
  41537b:	add    BYTE PTR [ecx+ecx*1+0x40040200],ch
  415382:	add    BYTE PTR [eax],0x40
  415385:	inc    ebp
  415386:	sub    BYTE PTR [eax],dh
  415388:	and    BYTE PTR ds:0x10180100,0x50
  41538f:	call   0x247d394
  415394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415395:	add    BYTE PTR [ebx+ecx*1],dl
  415398:	add    BYTE PTR [eax],al
  41539a:	pop    esp
  41539b:	adc    dl,BYTE PTR [eax+0x460c9261]
  4153a1:	xor    DWORD PTR [eax],eax
  4153a3:	add    BYTE PTR [edx+0x60],ah
  4153a6:	and    BYTE PTR [eax+0x12],dl
  4153a9:	and    BYTE PTR [eax+0x12800080],al
  4153af:	add    dh,BYTE PTR [eax]
  4153b1:	and    al,BYTE PTR [ecx]
  4153b3:	mov    dh,0x5
  4153b5:	adc    BYTE PTR [eax],cl
  4153b7:	add    al,BYTE PTR [ecx]
  4153b9:	add    DWORD PTR [eax+0x40],esp
  4153bc:	fadd   st,st(3)
  4153be:	add    BYTE PTR [edx+0x2010018],0xa
  4153c5:	add    BYTE PTR [eax],al
  4153c7:	inc    edx
  4153c8:	pusha  
  4153c9:	and    al,0xc1
  4153cb:	shl    BYTE PTR [eax+0x215c270],1
  4153d1:	xor    al,0x2
  4153d3:	add    BYTE PTR [eax],al
  4153d5:	or     BYTE PTR [eax],dl
  4153d7:	mov    DWORD PTR [edx+0x0],eax
  4153da:	sub    BYTE PTR [eax],al
  4153dc:	or     BYTE PTR [eax*2+0x285108],al
  4153e3:	inc    edi
  4153e4:	mov    BYTE PTR [eax],al
  4153e6:	add    al,bl
  4153e8:	inc    ecx
  4153e9:	and    BYTE PTR [edx+eiz*1],0x0
  4153ed:	add    DWORD PTR [eax],eax
  4153ef:	add    BYTE PTR [eax],al
  4153f1:	adc    BYTE PTR [eax],cl
  4153f3:	dec    eax
  4153f4:	add    BYTE PTR [edi],al
  4153f6:	and    DWORD PTR [ecx],ebp
  4153f8:	add    BYTE PTR [eax],dl
  4153fa:	add    BYTE PTR [ebp+0x4b304004],dl
  415400:	add    BYTE PTR [esi],dl
  415402:	adc    BYTE PTR [eax+0x16],ah
  415405:	add    BYTE PTR [edx],dl
  415407:	add    BYTE PTR [eax],0x12
  41540a:	add    BYTE PTR [eax+eax*1],bl
  41540d:	add    BYTE PTR [edx],0x1
  415410:	(bad)  
  415411:	lds    eax,FWORD PTR [ebx-0x7ebfdff8]
  415417:	test   eax,eax
  415419:	add    BYTE PTR [eax],dl
  41541b:	add    BYTE PTR [eax],dh
  41541d:	pusha  
  41541e:	test   BYTE PTR [ecx+0x10],al
  415421:	and    DWORD PTR [edx+0x0],esp
  415424:	or     BYTE PTR [eax],al
  415426:	nop
  415427:	rol    BYTE PTR [eax],0x0
  41542a:	inc    ecx
  41542b:	add    BYTE PTR [eax],al
  41542d:	and    DWORD PTR [eax+edx*2],ecx
  415430:	adc    BYTE PTR [eax],al
  415432:	add    BYTE PTR [eax],ah
  415434:	sbb    DWORD PTR [ecx+0x5e],0x6408244
  41543b:	add    BYTE PTR [ebx+0x244a0],ah
  415441:	add    BYTE PTR [ecx+0x2],cl
  415444:	add    DWORD PTR [eax-0x7dbf7fd5],0xa
  41544b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544c:	nop
  41544d:	sub    BYTE PTR [ecx],dh
  41544f:	adc    BYTE PTR [eax+0x1],cl
  415452:	adc    eax,0x44140580
  415457:	push   ecx
  415458:	arpl   WORD PTR [eax],bx
  41545a:	inc    eax
  41545b:	or     BYTE PTR [eax],al
  41545d:	add    al,0x1
  41545f:	inc    edx
  415460:	add    eax,0x8a9600
  415465:	add    al,0xb
  415467:	add    BYTE PTR [eax-0x6ffbf800],cl
  41546d:	add    BYTE PTR [ecx],al
  41546f:	pop    edx
  415470:	add    BYTE PTR [eax],al
  415472:	inc    eax
  415473:	sub    BYTE PTR [ecx],al
  415475:	inc    eax
  415476:	mov    DWORD PTR [ebx],eax
  415478:	add    BYTE PTR [eax],al
  41547a:	test   cl,al
  41547c:	push   ecx
  41547d:	add    cl,0x40
  415480:	rcl    BYTE PTR [eax+esi*1+0x4],0x2
  415485:	add    BYTE PTR [eax-0x7bffffbe],dl
  41548b:	xchg   ecx,eax
  41548c:	or     al,0x2
  41548e:	loop   0x415490
  415490:	add    BYTE PTR [ecx+0x8],ah
  415493:	adc    DWORD PTR [ecx],edx
  415495:	sbb    al,0x0
  415497:	inc    eax
  415498:	add    ah,BYTE PTR [edx]
  41549a:	push   ecx
  41549b:	add    DWORD PTR [edx],0x4
  41549e:	dec    eax
  41549f:	add    BYTE PTR [ecx-0x80],dl
  4154a2:	and    al,0x7
  4154a4:	inc    eax
  4154a5:	add    BYTE PTR [eax],0xbb
  4154a8:	popa   
  4154a9:	xor    BYTE PTR [ecx],ch
  4154ab:	add    al,0x51
  4154ad:	add    DWORD PTR [eax],esp
  4154af:	add    al,0x6
  4154b1:	add    BYTE PTR [eax],al
  4154b3:	add    BYTE PTR [eax],0x0
  4154b6:	inc    eax
  4154b7:	popa   
  4154b8:	add    BYTE PTR [ecx],al
  4154ba:	add    DWORD PTR [eax],0xe4014184
  4154c0:	add    BYTE PTR [edi],al
  4154c2:	sbb    BYTE PTR [eax],al
  4154c4:	or     BYTE PTR [eax+ecx*4],0x61
  4154c8:	and    BYTE PTR [eax+0x24212db1],0x8
  4154cf:	push   esi
  4154d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d1:	or     BYTE PTR [eax],cl
  4154d3:	or     BYTE PTR [eax],ah
  4154d5:	adc    al,0x90
  4154d7:	or     cl,BYTE PTR [eax]
  4154d9:	add    BYTE PTR [edx],ah
  4154db:	add    BYTE PTR [eax+eiz*1],al
  4154de:	retf   0x8600
  4154e1:	or     BYTE PTR [eax],ah
  4154e3:	and    dl,BYTE PTR [eax+0x43]
  4154e6:	add    al,0x81
  4154e8:	add    BYTE PTR [eax],cl
  4154ea:	sub    BYTE PTR [eax],cl
  4154ec:	add    dl,dl
  4154ee:	add    BYTE PTR [eax],ah
  4154f0:	data16 or BYTE PTR [ecx+0x20d0404a],dl
  4154f7:	add    ah,BYTE PTR [eax]
  4154f9:	or     al,BYTE PTR [eax+0x85041]
  4154ff:	add    al,BYTE PTR [edx+0x0]
  415502:	xor    DWORD PTR [ebp+0xa],eax
  415505:	adc    DWORD PTR [eax],0xa5cf0010
  41550b:	and    BYTE PTR [eax+0x2],al
  41550e:	add    BYTE PTR [eax],al
  415510:	add    BYTE PTR [eax],al
  415512:	and    al,0x0
  415514:	and    BYTE PTR [ecx],al
  415516:	inc    eax
  415517:	and    eax,0x41200088
  41551c:	and    DWORD PTR [eax-0x6b],0x80041529
  415523:	add    DWORD PTR [ecx],edx
  415525:	add    BYTE PTR [ecx+0x2],ah
  415528:	add    BYTE PTR [eax+0xa510],al
  41552e:	enter  0x912,0x82
  415532:	sub    BYTE PTR [edx],dl
  415534:	add    eax,0x25218140
  415539:	or     BYTE PTR [edx],al
  41553b:	adc    BYTE PTR [eax+0x52291],cl
  415541:	xor    DWORD PTR [eax],0x121804e
  415547:	mov    al,0x0
  415549:	add    BYTE PTR [ecx],0x0
  41554c:	add    BYTE PTR [edx+0x12840800],0x20
  415553:	add    al,0xc0
  415555:	add    BYTE PTR [eax],bh
  415557:	add    BYTE PTR [eax+0x10a00010],ch
  41555d:	inc    eax
  41555e:	adc    BYTE PTR [eax],al
  415560:	add    BYTE PTR [eax],0x2
  415563:	add    BYTE PTR [edx+0x8],dh
  415566:	add    BYTE PTR [eax],al
  415568:	adc    ah,BYTE PTR [eax]
  41556a:	adc    BYTE PTR [eax],cl
  41556c:	and    al,BYTE PTR [eax+eax*1+0x24095102]
  415573:	xor    eax,DWORD PTR [esi]
  415575:	inc    edx
  415576:	or     BYTE PTR [eax],ah
  415578:	inc    esp
  415579:	test   ah,dh
  41557b:	add    DWORD PTR [eax],edx
  41557d:	or     ah,BYTE PTR [ecx]
  41557f:	add    BYTE PTR [eax],ah
  415581:	sub    BYTE PTR ds:0x901002c,al
  415587:	xchg   ecx,eax
  415588:	add    BYTE PTR [eax+0x622140d8],0x1
  41558f:	pop    ebx
  415590:	add    BYTE PTR ds:0xc0401000,ah
  415596:	add    al,0x88
  415598:	shr    BYTE PTR [ecx+eax*1],1
  41559b:	add    BYTE PTR [esi+eax*1+0x910001],ch
  4155a2:	inc    eax
  4155a3:	or     al,0x40
  4155a5:	inc    eax
  4155a6:	and    BYTE PTR [ecx+0x0],al
  4155a9:	push   ecx
  4155aa:	adc    BYTE PTR [ebp+0x2c],al
  4155ad:	and    BYTE PTR [eax+0x0],ah
  4155b0:	add    BYTE PTR [eax+0x21018900],al
  4155b6:	adc    BYTE PTR [ebp+0x19],al
  4155b9:	add    eax,0x10600004
  4155be:	rol    BYTE PTR [edx+eax*1],0x62
  4155c2:	add    al,BYTE PTR [eax]
  4155c4:	add    al,BYTE PTR [edx]
  4155c6:	sbb    DWORD PTR [eax],ecx
  4155c8:	or     BYTE PTR [ecx+0x31],al
  4155cb:	inc    eax
  4155cc:	and    DWORD PTR [eax],eax
  4155ce:	push   eax
  4155cf:	add    ah,cl
  4155d1:	add    BYTE PTR [ecx],ah
  4155d3:	add    al,cl
  4155d5:	adc    DWORD PTR [eax+0x20],0x4120
  4155dc:	add    al,0x0
  4155de:	inc    eax
  4155df:	and    DWORD PTR [eax],eax
  4155e1:	ret    
  4155e2:	add    BYTE PTR [eax+0x110024],dl
  4155e8:	or     BYTE PTR [eax+eax*1],0x4
  4155ec:	add    BYTE PTR [eax],al
  4155ee:	add    BYTE PTR [eax+0x4a],cl
  4155f1:	lock test DWORD PTR [eax],eax
  4155f4:	and    al,0x20
  4155f6:	add    BYTE PTR [eax],al
  4155f8:	inc    ebx
  4155f9:	add    DWORD PTR [esp+0x10008089],eax
  415600:	add    BYTE PTR [eax+0x2],bh
  415603:	and    BYTE PTR [ecx],0x10
  415606:	or     al,0x10
  415608:	and    BYTE PTR [ecx+0x4bc14100],al
  41560e:	add    BYTE PTR [eax],al
  415610:	add    dl,BYTE PTR [eax]
  415612:	inc    edx
  415613:	add    BYTE PTR [esi],al
  415615:	adc    DWORD PTR [ecx],ecx
  415617:	add    BYTE PTR [eax],0x0
  41561a:	add    DWORD PTR [eax],eax
  41561c:	sbb    DWORD PTR [eax+0x0],esp
  41561f:	add    BYTE PTR [eax],dh
  415621:	inc    eax
  415622:	adc    DWORD PTR [edx],ebp
  415624:	sub    BYTE PTR [eax+0x400008],dl
  41562a:	add    DWORD PTR [eax],eax
  41562c:	pusha  
  41562d:	mov    WORD PTR [ebp+0x0],fs
  415630:	add    ah,dl
  415632:	add    al,0x15
  415634:	add    bl,BYTE PTR [ecx]
  415636:	add    bl,al
  415638:	inc    ecx
  415639:	lods   eax,DWORD PTR ds:[esi]
  41563a:	add    al,0x40
  41563c:	add    BYTE PTR [eax+0x17042a],al
  415642:	xchg   esi,eax
  415643:	and    BYTE PTR [eax],al
  415645:	fcom   QWORD PTR [eax+0x22]
  415648:	cmovo  eax,DWORD PTR [eax+0x1c001042]
  41564f:	add    BYTE PTR [eax+0x10a045],ah
  415655:	add    BYTE PTR [eax],al
  415657:	add    DWORD PTR [eax+eax*1],ecx
  41565a:	add    BYTE PTR [eax],ch
  41565c:	add    DWORD PTR [eax+eax*2],0x284
  415663:	inc    eax
  415664:	add    BYTE PTR [ecx],cl
  415666:	add    DWORD PTR [ecx],eax
  415668:	add    eax,0x222629
  41566d:	and    BYTE PTR [eax-0x70],cl
  415670:	sbb    DWORD PTR [eax],ecx
  415672:	and    BYTE PTR [eax],dl
  415674:	mov    eax,DWORD PTR [eax]
  415676:	add    al,BYTE PTR [edx+0x40]
  415679:	add    BYTE PTR [eax],al
  41567b:	mov    DWORD PTR [eax],eax
  41567d:	add    BYTE PTR [edx],al
  41567f:	pop    eax
  415680:	nop
  415681:	add    DWORD PTR [edx],eax
  415683:	add    DWORD PTR [eax+0x0],eax
  415686:	add    BYTE PTR [eax],al
  415688:	inc    ecx
  415689:	add    cl,BYTE PTR [eax]
  41568b:	add    BYTE PTR [eax],al
  41568d:	dec    esp
  41568e:	sub    BYTE PTR [eax],cl
  415690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415691:	add    eax,0xc798c50
  415696:	adc    BYTE PTR [eax],al
  415698:	or     BYTE PTR [eax+0x41890e00],ah
  41569e:	mov    al,0x0
  4156a0:	pusha  
  4156a1:	bound  eax,QWORD PTR es:[eax+0xb]
  4156a5:	xchg   BYTE PTR [eax],al
  4156a7:	and    al,0x5
  4156a9:	add    BYTE PTR [eax],cl
  4156ab:	and    BYTE PTR [eax],ah
  4156ad:	cwde   
  4156ae:	add    BYTE PTR [eax+ecx*4],0xc2
  4156b2:	add    BYTE PTR [ecx+0x20],al
  4156b5:	add    BYTE PTR [eax],cl
  4156b7:	push   es
  4156b8:	inc    eax
  4156b9:	add    al,BYTE PTR [ecx]
  4156bb:	and    BYTE PTR [eax+0xc],dl
  4156be:	or     BYTE PTR [ebx-0x7efefbf8],dl
  4156c4:	jns    0x4156c6
  4156c6:	add    eax,DWORD PTR [eax+0x12c1801]
  4156cc:	add    BYTE PTR [eax],dl
  4156ce:	add    al,0x0
  4156d0:	add    BYTE PTR [edx-0x74e9fa00],ah
  4156d6:	add    BYTE PTR [eax],ch
  4156d8:	push   es
  4156d9:	and    BYTE PTR [edx],0x8d
  4156dc:	push   eax
  4156dd:	or     BYTE PTR [ecx+0x0],al
  4156e0:	adc    DWORD PTR [eax+0x8504100],ecx
  4156e6:	add    eax,0x43860d2
  4156eb:	and    eax,eax
  4156ed:	test   al,0x0
  4156ef:	or     BYTE PTR [ecx],al
  4156f1:	add    BYTE PTR [ebx+edi*4+0x41],al
  4156f5:	or     BYTE PTR [ecx],al
  4156f7:	or     BYTE PTR [eax+0x28002200],0x18
  4156fe:	add    BYTE PTR [ecx],al
  415700:	dec    ebx
  415701:	inc    eax
  415702:	add    al,0x4
  415704:	add    DWORD PTR [ebx],eax
  415706:	and    al,0x81
  415708:	and    BYTE PTR [eax],ch
  41570a:	add    BYTE PTR [ecx+0x28062410],cl
  415710:	adc    dl,dl
  415712:	sbb    BYTE PTR [edx],0x4
  415715:	add    BYTE PTR [eax+0x0],al
  415718:	and    al,BYTE PTR [ecx+0x26]
  41571b:	sub    al,BYTE PTR es:[eax]
  41571e:	add    BYTE PTR [eax+eax*2+0x11],bl
  415722:	add    BYTE PTR [edx],ah
  415724:	add    BYTE PTR ds:0x600202,dh
  41572a:	mov    BYTE PTR [eax],al
  41572c:	mov    al,0x88
  41572e:	add    BYTE PTR [eax],0x0
  415731:	add    BYTE PTR [ecx],al
  415733:	add    BYTE PTR [edx+eax*2],ah
  415736:	or     DWORD PTR [esi+0x381],eax
  41573c:	and    BYTE PTR [eax-0x3fffb7c4],al
  415742:	add    DWORD PTR [eax+0x30008041],esp
  415748:	and    BYTE PTR [eax],al
  41574a:	add    BYTE PTR [ecx],al
  41574c:	lds    eax,FWORD PTR [eax]
  41574e:	push   es
  41574f:	popa   
  415750:	push   eax
  415751:	add    DWORD PTR [eax],0x80004104
  415757:	adc    BYTE PTR [ecx-0x7bfdd700],al
  41575d:	and    BYTE PTR [eax],ch
  41575f:	add    DWORD PTR [eax],eax
  415761:	xor    al,0x0
  415763:	or     BYTE PTR ds:0xb015,al
  415769:	add    BYTE PTR [eax],al
  41576b:	inc    ecx
  41576c:	popa   
  41576d:	add    al,0x90
  41576f:	add    BYTE PTR [eax],al
  415771:	xor    DWORD PTR [ecx],eax
  415773:	add    al,BYTE PTR [eax]
  415775:	inc    eax
  415776:	add    dl,BYTE PTR [eax+eax*8+0x29004001]
  41577d:	adc    DWORD PTR [edi],eax
  41577f:	inc    eax
  415780:	push   es
  415781:	push   eax
  415782:	pop    es
  415783:	add    BYTE PTR [eax],al
  415785:	add    al,0x0
  415787:	add    al,0x43
  415789:	push   eax
  41578a:	add    BYTE PTR [eax],al
  41578c:	and    BYTE PTR [eax],dh
  41578e:	add    BYTE PTR [eax],0x22
  415791:	test   BYTE PTR [eax],cl
  415793:	add    BYTE PTR [eax],al
  415795:	or     al,0x88
  415797:	adc    BYTE PTR [edx],al
  415799:	or     BYTE PTR [eax+0x85251a4],al
  41579f:	ret    
  4157a0:	dec    eax
  4157a1:	add    al,BYTE PTR [eax]
  4157a3:	and    BYTE PTR [eax],ah
  4157a5:	add    dl,al
  4157a7:	add    DWORD PTR [eax],0x2698049
  4157ad:	sbb    al,0x90
  4157af:	add    BYTE PTR ds:0x14000028,0xc0
  4157b6:	add    BYTE PTR [eax],al
  4157b8:	add    al,BYTE PTR [eax+eax*1+0x21]
  4157bc:	xor    DWORD PTR [ebx+0x0],eax
  4157bf:	and    BYTE PTR [edx+0x49],al
  4157c2:	or     BYTE PTR [eax+eax*1],ah
  4157c5:	adc    BYTE PTR [eax+edx*1],al
  4157c8:	mov    ebx,DWORD PTR [eax+eax*1]
  4157cb:	add    DWORD PTR [eax+edx*1],ecx
  4157ce:	inc    ecx
  4157cf:	xor    BYTE PTR [eax],ah
  4157d1:	add    BYTE PTR [eax],al
  4157d3:	inc    ecx
  4157d4:	add    BYTE PTR [eax],al
  4157d6:	add    al,0x4
  4157d8:	add    BYTE PTR [ebp+0x21],al
  4157db:	push   ecx
  4157dc:	cmp    BYTE PTR [eax+0x10906],cl
  4157e2:	adc    BYTE PTR [eax+edx*1],0x20
  4157e6:	add    eax,0x28000801
  4157eb:	inc    eax
  4157ec:	mov    BYTE PTR ds:0x8021e,ah
  4157f2:	cmp    DWORD PTR [eax],eax
  4157f4:	add    ah,BYTE PTR [esi+0x5324491]
  4157fa:	and    eax,0x10188c
  4157ff:	xchg   ecx,eax
  415800:	add    BYTE PTR [eax-0x7f],al
  415803:	sub    al,0x0
  415805:	dec    eax
  415806:	add    DWORD PTR [eax-0x7ffcffed],eax
  41580c:	rol    al,1
  41580e:	and    BYTE PTR [ebx],0x82
  415811:	adc    BYTE PTR [eax],al
  415813:	xor    BYTE PTR [eax],al
  415815:	inc    esp
  415816:	and    DWORD PTR [eax],ecx
  415818:	adc    ah,BYTE PTR [edx]
  41581a:	add    BYTE PTR [ecx+0x12],al
  41581d:	add    BYTE PTR [eax],al
  41581f:	and    BYTE PTR [ecx],al
  415821:	add    BYTE PTR [eax+eax*2],cl
  415824:	add    BYTE PTR [eax+eiz*1+0x46],ah
  415828:	add    BYTE PTR [eax],ah
  41582a:	add    BYTE PTR [edx],bl
  41582c:	ret    0x8600
  41582f:	add    dl,BYTE PTR [esp+eax*2]
  415832:	and    DWORD PTR [ecx-0x6aff3bdf],0xc
  415839:	add    cl,BYTE PTR [ebx]
  41583b:	add    BYTE PTR [ebp+edx*1-0x79896424],dh
  415842:	sbb    bh,dh
  415844:	jle    0x415807
  415846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415849:	mov    ch,0x9f
  41584b:	mov    eax,ds:0xe6917b6c
  415850:	push   ss
  415851:	xchg   esp,eax
  415852:	mov    ?,WORD PTR [ecx+0x6e]
  415855:	jl     0x4157ea
  415857:	ins    BYTE PTR es:[edi],dx
  415858:	in     al,dx
  415859:	std    
  41585a:	mov    ecx,gs
  41585c:	jecxz  0x415826
  41585e:	inc    ebx
  41585f:	and    edx,DWORD PTR [eax+eax*4]
  415862:	cmp    DWORD PTR [ebx],esp
  415864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415865:	out    dx,al
  415866:	ret    
  415867:	xor    bh,bh
  415869:	adc    DWORD PTR [ebx+eiz*1],edi
  41586c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586d:	xor    eax,0x2f04146
  415872:	or     eax,0x2c7f7323
  415877:	in     al,dx
  415878:	pop    DWORD PTR [ebx]
  41587a:	adc    BYTE PTR [edx+0x6d0bfea6],cl
  415880:	jo     0x415881
  415882:	cs jno 0x4158f5
  415885:	inc    DWORD PTR [ebp+0x71]
  415888:	pusha  
  415889:	mov    edi,0x6fc6f895
  41588e:	fwait
  41588f:	mov    eax,esp
  415891:	push   cs
  415892:	inc    eax
  415893:	pop    ds
  415894:	ret    0xc0fa
  415897:	test   DWORD PTR [ecx],ebp
  415899:	pop    esi
  41589a:	mov    ebx,DWORD PTR [ebp-0x2]
  41589d:	outs   dx,DWORD PTR ds:[esi]
  41589e:	pop    esi
  41589f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a0:	sar    DWORD PTR [ecx-0x6b5a72a3],0xec
  4158a7:	mov    DWORD PTR ds:0x8b1f0c41,edi
  4158ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ae:	test   BYTE PTR [eax],ah
  4158b0:	das    
  4158b1:	ss loopne 0x41587a
  4158b4:	sub    al,0xc4
  4158b6:	iret   
  4158b7:	call   0x27e54979
  4158bc:	sbb    BYTE PTR [ebp-0x4a5d6f1f],al
  4158c2:	sbb    eax,DWORD PTR [edx-0x50]
  4158c5:	hlt    
  4158c6:	arpl   WORD PTR [ebp-0x5a],bx
  4158c9:	xor    eax,0xf2c22746
  4158ce:	dec    ecx
  4158cf:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d1:	mov    ch,0x45
  4158d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d5:	mov    ch,0x4
  4158d7:	mov    ds:0x64beb5a2,eax
  4158dc:	push   edx
  4158dd:	xor    eax,0xfae0e146
  4158e2:	inc    ecx
  4158e3:	and    eax,DWORD PTR [edi-0x4b]
  4158e6:	(bad)  
  4158e7:	fsub   QWORD PTR [esi-0x595c3a28]
  4158ed:	xor    eax,0xfc85a270
  4158f2:	inc    edx
  4158f3:	add    eax,0x8544f9f9
  4158f8:	ss loopne 0x41593b
  4158fb:	(bad)  
  4158fc:	in     al,dx
  4158fd:	mov    al,0x21
  4158ff:	inc    ebx
  415900:	fs hlt 
  415902:	lds    ebx,FWORD PTR [ebx-0x5cadbfda]
  415908:	dec    ebx
  415909:	mov    ch,0xc6
  41590b:	fsub   QWORD PTR [esi-0x595c38e1]
  415911:	xor    al,0x8b
  415913:	loope  0x415986
  415915:	xor    eax,0x35f0699b
  41591a:	inc    esi
  41591b:	scas   eax,DWORD PTR es:[edi]
  41591c:	loope  0x415910
  41591e:	(bad)  
  41591f:	mov    ds:0xa413b5a6,eax
  415924:	fwait
  415925:	sbb    eax,0xf026ddc6
  41592a:	sbb    al,0xa3
  41592c:	pusha  
  41592d:	or     al,0x40
  41592f:	sbb    eax,0x5dc2bfb9
  415934:	sbb    eax,0xff5d5c98
  415939:	out    dx,eax
  41593a:	or     al,0x69
  41593c:	(bad)  
  41593e:	inc    ebp
  41593f:	or     esp,DWORD PTR [esi-0x5a5c96cb]
  415945:	xor    eax,0xfb2b2346
  41594a:	rcr    DWORD PTR [ebp-0xfda68b1],1
  415950:	mov    ds:0xa56a1917,eax
  415955:	pop    ds
  415956:	(bad)  
  415957:	addr16 mov eax,ds:0xbd5
  41595b:	dec    esi
  41595c:	cmp    ebx,0x6eb0205b
  415962:	imul   ebp,DWORD PTR ds:0x234635a6,0xffffffa7
  415969:	jae    0x415931
  41596b:	(bad)  
  41596c:	jmp    0x415940
  41596e:	nop
  41596f:	mov    ds:0xa33d417b,al
  415974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415975:	xor    eax,0x3628a3a8
  41597a:	(bad)  
  41597b:	pusha  
  41597c:	jmp    0x4159d8
  41597e:	and    BYTE PTR [ebx-0x7dfc8ee6],0xa6
  415985:	xor    eax,0xf2e02746
  41598a:	leave  
  41598b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41598d:	xor    eax,0xb5a4a3e1
  415992:	sbb    eax,DWORD PTR [edx-0x50]
  415995:	sbb    esp,DWORD PTR [esi+0x5d]
  415998:	or     DWORD PTR [ebx],edx
  41599a:	inc    edx
  41599b:	repz add DWORD PTR [eax+0x17],esi
  41599f:	imul   esp,DWORD PTR [eax+ecx*1],0x79781f28
  4159a6:	(bad)  
  4159a7:	frstor [edx]
  4159a9:	jo     0x415937
  4159ab:	je     0x4159d1
  4159ad:	sti    
  4159ae:	inc    ecx
  4159af:	adc    edi,DWORD PTR [ebp-0x13766369]
  4159b5:	pushf  
  4159b6:	out    dx,eax
  4159b7:	push   ss
  4159b8:	xor    DWORD PTR [ecx],0xffffff91
  4159bb:	and    DWORD PTR [esi+0x41],edi
  4159be:	jecxz  0x415962
  4159c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c1:	xor    eax,0x7ba0a429
  4159c6:	les    eax,FWORD PTR [eax+0x1dd41b0]
  4159cc:	and    al,0xc
  4159ce:	xor    al,0xb2
  4159d0:	jnp    0x415983
  4159d2:	mov    esi,0xd5d52521
  4159d7:	inc    edi
  4159d8:	and    al,0x14
  4159da:	cmp    BYTE PTR [edx],ah
  4159dc:	xor    DWORD PTR [ecx+0x13242180],0x42
  4159e3:	and    eax,DWORD PTR [ebx+eiz*1-0x2bbea148]
  4159ea:	shl    edx,0xfb
  4159ed:	out    dx,eax
  4159ee:	dec    edi
  4159ef:	and    ebp,DWORD PTR [ebx-0x51]
  4159f2:	(bad)  
  4159f3:	mov    ds:0x6879c1a2,eax
  4159f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f9:	xor    eax,0xa3a4a361
  4159fe:	sbb    BYTE PTR [edi-0x6c],0x31
  415a02:	in     eax,0x80
  415a04:	mov    eax,DWORD PTR es:[eax]
  415a07:	mov    eax,ds:0xad4fd364
  415a0c:	xor    dh,BYTE PTR ds:0xf5267346
  415a12:	das    
  415a13:	mov    ds:0x91262bdd,eax
  415a18:	clc    
  415a19:	outs   dx,BYTE PTR ds:[esi]
  415a1a:	add    al,0x23
  415a1c:	popf   
  415a1d:	adc    eax,0xe6b2a446
  415a22:	inc    esi
  415a23:	jnp    0x4159cb
  415a25:	jo     0x4159ca
  415a27:	mov    ds:0x250dc9f1,eax
  415a2c:	or     dh,BYTE PTR [esi]
  415a2e:	or     edx,ecx
  415a30:	mov    cl,0x86
  415a32:	inc    esi
  415a33:	and    eax,0xa3a370a6
  415a38:	jno    0x4159ca
  415a3a:	std    
  415a3b:	es stos BYTE PTR es:[edi],al
  415a3d:	xor    eax,0x8eb1d78b
  415a42:	inc    esi
  415a43:	and    eax,0xa3a370a6
  415a48:	loopne 0x415a5c
  415a4a:	dec    eax
  415a4b:	test   eax,0xa1be9786
  415a50:	jle    0x4159fd
  415a52:	jg     0x415a9b
  415a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a55:	test   eax,0xb4208100
  415a5a:	sbb    edi,DWORD PTR [ebx-0x1f]
  415a5d:	or     cl,BYTE PTR [esi-0x5b]
  415a60:	jle    0x415a0f
  415a62:	and    DWORD PTR [ecx+0x78876fb0],0xad4dfae0
  415a6c:	sub    bh,BYTE PTR [ebx-0x6d]
  415a6f:	add    eax,0x4d0b4188
  415a74:	pusha  
  415a75:	mov    dl,0x7f
  415a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a78:	mov    ?,WORD PTR [ebx-0x5557ed8]
  415a7e:	iret   
  415a7f:	adc    BYTE PTR [esi+0x5f46c635],0x8a
  415a86:	inc    edi
  415a87:	and    esi,ebx
  415a89:	hlt    
  415a8a:	sub    BYTE PTR [esi-0x5f],bh
  415a8d:	sti    
  415a8e:	inc    ebx
  415a8f:	out    dx,al
  415a90:	stos   BYTE PTR es:[edi],al
  415a91:	mov    edi,0x186631d9
  415a96:	push   edx
  415a97:	jle    0x415ab3
  415a99:	lock mov al,ds:0xbd8f5f68
  415a9f:	and    cl,BYTE PTR [eax]
  415aa1:	bswap  esi
  415aa3:	and    BYTE PTR [eax],ah
  415aa5:	cwde   
  415aa6:	pop    ds
  415aa7:	push   0xffffffec
  415aa9:	mov    cl,0x28
  415aab:	lods   eax,DWORD PTR ds:[esi]
  415aac:	sub    al,0xfb
  415aae:	les    edi,FWORD PTR [eax+ecx*8-0xc]
  415ab2:	test   al,0x2d
  415ab4:	pop    esi
  415ab5:	in     eax,dx
  415ab6:	std    
  415ab7:	pop    edx
  415ab8:	sbb    esi,eax
  415aba:	inc    esp
  415abb:	imul   ebp,DWORD PTR [esi],0x8790cdbd
  415ac1:	or     eax,0xfafeab1e
  415ac6:	inc    edx
  415ac7:	jnp    0x415b32
  415ac9:	ss push eax
  415acb:	arpl   WORD PTR [ebx],sp
  415acd:	shl    bl,0xe8
  415ad0:	inc    ebp
  415ad1:	mov    bl,0xc6
  415ad3:	popa   
  415ad4:	cmc    
  415ad5:	shl    ah,1
  415ad7:	mov    ecx,0xa1008b26
  415adc:	cmc    
  415add:	outs   dx,DWORD PTR ds:[esi]
  415ade:	or     ebp,DWORD PTR ds:0x1d41f6e0
  415ae4:	dec    esp
  415ae5:	jne    0x415b13
  415ae7:	and    eax,0x35c4dbd4
  415aec:	outs   dx,DWORD PTR ds:[esi]
  415aed:	xor    eax,0x3a6caf46
  415af2:	sub    al,0x23
  415af4:	xor    al,BYTE PTR [ebx]
  415af6:	(bad)  
  415af7:	ds es cld 
  415afa:	aaa    
  415afb:	mov    ds:0x89984146,eax
  415b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b01:	mov    ch,0xc
  415b03:	mov    ds:0x11a5b44c,eax
  415b08:	sahf   
  415b09:	inc    ecx
  415b0a:	push   ds
  415b0b:	dec    ebx
  415b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b0d:	xor    eax,0x39eca33d
  415b12:	or     eax,ebx
  415b14:	sar    DWORD PTR [edi+0x357f835b],1
  415b1a:	inc    esi
  415b1b:	scas   eax,DWORD PTR es:[edi]
  415b1c:	adc    BYTE PTR [eax+0xb],dl
  415b1f:	and    esi,DWORD PTR [edx]
  415b21:	adc    al,0x46
  415b23:	fwait
  415b24:	shl    BYTE PTR es:[ecx],0xa3
  415b28:	cmp    eax,0x1ccd0bc1
  415b2d:	push   ecx
  415b2e:	sar    ah,1
  415b30:	pop    ebp
  415b31:	xchg   ecx,eax
  415b32:	in     eax,0x14
  415b34:	mov    ds:0xa63351df,al
  415b39:	xor    eax,0xf7268d46
  415b3e:	lds    eax,FWORD PTR [esp+ebp*2+0x23230630]
  415b45:	cld    
  415b46:	inc    edx
  415b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b48:	stos   BYTE PTR es:[edi],al
  415b49:	jne    0x415ad5
  415b4b:	popa   
  415b4c:	add    eax,0xc321fb95
  415b51:	pop    ebx
  415b52:	vpavgb ymm7,ymm4,YMMWORD PTR [ecx]
  415b56:	xor    al,bh
  415b58:	sub    al,0xe3
  415b5a:	push   ss
  415b5b:	stos   DWORD PTR es:[edi],eax
  415b5c:	pop    esi
  415b5d:	xor    al,0x5d
  415b5f:	sub    eax,0xe8baf0a3
  415b64:	popf   
  415b65:	dec    esp
  415b66:	in     al,0x7f
  415b68:	rcl    DWORD PTR [edx+edx*8],0x9
  415b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b6d:	xor    eax,0x4141ac46
  415b72:	rcr    BYTE PTR [ecx],cl
  415b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b75:	mov    ch,0x8c
  415b77:	mov    ds:0xaa081fc4,eax
  415b7c:	adc    dh,cl
  415b7e:	pop    es
  415b7f:	xchg   ecx,eax
  415b80:	sbb    BYTE PTR [ebp-0x4a5d6f1f],al
  415b86:	sbb    eax,DWORD PTR [edx-0x50]
  415b89:	repz arpl WORD PTR [ebp-0xb],bx
  415b8d:	outs   dx,DWORD PTR ds:[esi]
  415b8e:	and    ebp,DWORD PTR [ebx]
  415b90:	xchg   ebx,eax
  415b91:	xor    eax,0x82261f4e
  415b96:	test   DWORD PTR [ebx+0x70b887f],esp
  415b9c:	pusha  
  415b9d:	or     eax,0x352919a8
  415ba2:	mov    esi,0x41fc2662
  415ba7:	mov    ds:0xf0451765,eax
  415bac:	cmp    DWORD PTR [ebx+0x42],0xfffffffb
  415bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb1:	sub    eax,0x45b08cc6
  415bb6:	add    DWORD PTR [ebx],esp
  415bb8:	mov    ds:0xa680c5c1,al
  415bbd:	mov    ch,0x5
  415bbf:	mov    ds:0x8d3b9614,eax
  415bc4:	es mov bh,bh
  415bc7:	sub    BYTE PTR [ebp+0x7ee1a62c],0xc1
  415bce:	dec    ebp
  415bcf:	mov    ds:0xa50135a6,eax
  415bd4:	scas   al,BYTE PTR es:[edi]
  415bd5:	fdiv   DWORD PTR [ecx+0x44b5a680]
  415bdb:	mov    al,ds:0xdda62cb7
  415be0:	loope  0x415bf0
  415be2:	dec    edx
  415be3:	and    eax,DWORD PTR [esi-0x5991b9ff]
  415be9:	mov    ch,0x1d
  415beb:	mov    esp,DWORD PTR [esi-0x4091deff]
  415bf1:	mov    al,0xc6
  415bf3:	pushf  
  415bf4:	cs ror esp,0x68
  415bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf9:	xor    eax,0x6ea8a481
  415bfe:	ins    BYTE PTR es:[edi],dx
  415bff:	sbb    BYTE PTR [ebp+0x67c34615],0x37
  415c06:	sbb    ch,0xaa
  415c09:	mov    bl,0xd6
  415c0b:	jl     0x415bc4
  415c0d:	mov    ebx,0x69648d73
  415c12:	mov    ebx,0x55b626dc
  415c17:	or     DWORD PTR [ecx+eax*2-0x46],0xffffffdc
  415c1c:	es ss in al,dx
  415c1f:	sbb    BYTE PTR [ebp+0x32b4c615],0x6
  415c26:	dec    eax
  415c27:	js     0x415bcf
  415c29:	xchg   edi,eax
  415c2a:	test   BYTE PTR [ebx-0x4d39ea63],ah
  415c30:	jecxz  0x415c55
  415c32:	lds    ebx,FWORD PTR [ebx]
  415c34:	es ss in al,dx
  415c37:	mov    ds:0xb0c6159d,al
  415c3c:	xchg   BYTE PTR [ecx+0x75c86e2d],al
  415c42:	inc    esi
  415c43:	imul   ebp,DWORD PTR [esi],0xa66874c1
  415c49:	xor    eax,0x2faca481
  415c4e:	data16 and ah,0x33
  415c52:	lds    ebx,FWORD PTR [ebx-0x5cb60fda]
  415c58:	jp     0x415c9b
  415c5a:	or     al,bh
  415c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c5d:	xor    eax,0x2cb3a428
  415c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c63:	loope  0x415c83
  415c65:	repz dec esi
  415c67:	and    esp,DWORD PTR [esi+0x32a29e35]
  415c6d:	sub    cl,al
  415c6f:	ja     0x415c17
  415c71:	xchg   edi,eax
  415c72:	test   BYTE PTR [ebx-0x5139ea63],ah
  415c78:	jecxz  0x415cc1
  415c7a:	lds    ebx,FWORD PTR [ebx]
  415c7c:	es jo  0x415c8a
  415c7f:	mov    ds:0x1f4bf6e0,eax
  415c84:	mov    BYTE PTR ds:0xaf8946c6,dh
  415c8a:	sub    DWORD PTR [ebx],esp
  415c8c:	and    eax,0x6b69f3bc
  415c91:	mov    cl,0x80
  415c93:	(bad)  [ebx+esi*4-0x55b9b7a]
  415c9a:	daa    
  415c9b:	add    eax,0xf03b1260
  415ca0:	loope  0x415cb3
  415ca2:	cmp    esi,eax
  415ca4:	jg     0x415ce1
  415ca6:	(bad)  
  415ca7:	fisttp QWORD PTR [eax+0x717ec600]
  415cad:	xchg   ebp,eax
  415cae:	inc    esi
  415caf:	jns    0x415caf
  415cb1:	xor    eax,0x9df26a8b
  415cb6:	push   cs
  415cb7:	lahf   
  415cb8:	push   ds
  415cb9:	or     esp,DWORD PTR ss:[eax+0x2b479fb1]
  415cc0:	mov    DWORD PTR es:[eax-0x748fdd5d],eax
  415cc7:	fs pusha 
  415cc9:	dec    esi
  415cca:	inc    esp
  415ccb:	test   eax,0x7c217008
  415cd0:	sub    al,0x63
  415cd2:	add    cl,bh
  415cd4:	and    dh,BYTE PTR [eax+ebx*4+0x205a1e74]
  415cdb:	add    eax,0x200c5a1e
  415ce0:	pop    edi
  415ce1:	sti    
  415ce2:	ss sbb ebx,edi
  415ce5:	mov    WORD PTR [eax],es
  415ce7:	xchg   edi,eax
  415ce8:	and    dh,BYTE PTR [edi+eax*4]
  415ceb:	fs pusha 
  415ced:	push   cs
  415cee:	inc    edx
  415cef:	sbb    eax,0xdda21984
  415cf4:	ret    0x5db9
  415cf7:	mov    eax,ds:0x91d154c2
  415cfc:	mov    WORD PTR [ebp+0x4c],ss
  415cff:	and    ah,BYTE PTR [eax+0xe]
  415d02:	mov    esi,0x80af67cd
  415d07:	pop    ebp
  415d08:	sbb    al,0xb4
  415d0a:	or     ebp,DWORD PTR [eax+0x24]
  415d0d:	test   DWORD PTR [ecx-0x57],0x299708d3
  415d14:	inc    ebx
  415d15:	and    ebp,edx
  415d17:	popa   
  415d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d19:	cli    
  415d1a:	dec    ebx
  415d1b:	mov    ebp,0xef10a657
  415d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d21:	cli    
  415d22:	int    0xf1
  415d24:	inc    ebx
  415d25:	aaa    
  415d26:	inc    esi
  415d27:	das    
  415d28:	loopne 0x415d19
  415d2a:	and    DWORD PTR [ebx-0x5cab4a5a],0xffffffe0
  415d31:	out    0x85,eax
  415d33:	in     eax,dx
  415d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d35:	mov    ch,0x44
  415d37:	mov    ds:0x748c7022,eax
  415d3c:	mov    al,ds:0x241d0bba
  415d41:	sti    
  415d42:	shl    ebp,0xb2
  415d45:	js     0x415d8f
  415d47:	js     0x415cef
  415d49:	das    
  415d4a:	mov    ds:0x68920a9d,ax
  415d50:	(bad)  
  415d51:	push   esp
  415d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d53:	fsubr  QWORD PTR [ebx-0x43]
  415d56:	shl    DWORD PTR [ebx+0x5ac635a8],1
  415d5c:	inc    esi
  415d5d:	jnp    0x415d09
  415d5f:	popf   
  415d60:	mov    esi,0xe05d886f
  415d65:	fwait
  415d66:	inc    eax
  415d67:	sbb    ebp,DWORD PTR [ebx-0x4c]
  415d6a:	add    BYTE PTR [eax-0x583e04dc],ch
  415d70:	addr16 mov cl,0x6f
  415d73:	and    DWORD PTR [esi+0x7b],eax
  415d76:	mov    dh,0x9d
  415d78:	dec    ecx
  415d79:	cmp    eax,0xb4239bb6
  415d7e:	and    ebp,edx
  415d80:	xchg   BYTE PTR ds:0x817d9f1d,dl
  415d86:	inc    esi
  415d87:	jnp    0x415d71
  415d89:	push   eax
  415d8a:	(bad)  
  415d8b:	xchg   ebx,eax
  415d8c:	rcr    DWORD PTR cs:[eax+0x18b5a668],0xa5
  415d94:	xor    BYTE PTR [edi-0x7c],al
  415d97:	int    0x1c
  415d99:	shl    BYTE PTR [esi+0x41],0x7b
  415d9d:	mov    cl,0x80
  415d9f:	frstor [edx]
  415da1:	mov    ah,0x98
  415da3:	je     0x415db5
  415da5:	or     al,0x2c
  415da7:	add    eax,0x693e827e
  415dac:	je     0x415dd8
  415dae:	inc    esi
  415daf:	mov    BYTE PTR [edx],0x74
  415db2:	call   0x46770420
  415db7:	push   ecx
  415db8:	in     al,dx
  415db9:	xchg   ebp,eax
  415dba:	add    BYTE PTR [ebx+0x686cb422],ah
  415dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc1:	xor    eax,0xb4075346
  415dc6:	xchg   DWORD PTR [ebp+0x60],ebx
  415dc9:	push   cs
  415dca:	inc    esp
  415dcb:	pop    ds
  415dcc:	xor    DWORD PTR [ecx-0x5e4b1ea3],esi
  415dd2:	outs   dx,DWORD PTR ds:[esi]
  415dd3:	scas   al,BYTE PTR es:[edi]
  415dd4:	repz ficom WORD PTR [edx-0x73e259b4]
  415ddb:	dec    esi
  415ddc:	adc    esi,DWORD PTR [esi]
  415dde:	ds pop ds
  415de0:	es xor eax,0x3e35a33c
  415de6:	add    BYTE PTR [edi-0x7f7b4bde],al
  415dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ded:	xor    eax,0xe3645346
  415df2:	lds    esp,FWORD PTR [ecx]
  415df4:	sbb    BYTE PTR es:[esi-0x5d],cl
  415df8:	shr    DWORD PTR [edi+0x0],0x6a
  415dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dfd:	xor    eax,0x36214146
  415e02:	mov    esi,DWORD PTR [ecx]
  415e04:	xor    dh,BYTE PTR [edi]
  415e06:	dec    eax
  415e07:	lahf   
  415e08:	xor    DWORD PTR es:[ebp-0x5d],0xffffffa6
  415e0d:	xor    eax,0xaf868b46
  415e12:	sbb    BYTE PTR [ebp+0x20],0xf0
  415e16:	and    DWORD PTR [ebx+0x17420ae0],eax
  415e1c:	jle    0x415e47
  415e1e:	mov    WORD PTR [esi+0x1ea9b560],es
  415e24:	sbb    bh,bl
  415e26:	dec    ebx
  415e27:	jg     0x415e37
  415e29:	jo     0x415dcb
  415e2b:	lods   eax,DWORD PTR ds:[esi]
  415e2c:	and    al,0xf
  415e2e:	inc    edx
  415e2f:	jb     0x249fdfdc
  415e35:	shl    BYTE PTR [ebp+0x4635a57c],cl
  415e3b:	adc    esi,ebx
  415e3d:	cmp    DWORD PTR [ebx+eiz*4],esp
  415e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e42:	or     ebx,DWORD PTR [eax+0x1fbe12c2]
  415e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e49:	xor    eax,0x2384a346
  415e4e:	mov    eax,0x4635a63f
  415e53:	mov    ds:0xf2c3d441,eax
  415e58:	jno    0x415e8f
  415e5a:	adc    ah,BYTE PTR [ebx-0x42cc52a6]
  415e60:	imul   edi,DWORD PTR [ebp+0x35a8a3d1],0xffffffc6
  415e67:	loopne 0x415df3
  415e69:	or     BYTE PTR [esi+0x7c],bh
  415e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e6d:	add    al,BYTE PTR [ebp+0x7]
  415e70:	and    DWORD PTR [ebp+0x46],edi
  415e73:	and    DWORD PTR [edx+0x54],ecx
  415e76:	jge    0x415eda
  415e78:	xchg   BYTE PTR [ebx+edi*4-0x5e],dl
  415e7c:	stos   BYTE PTR es:[edi],al
  415e7d:	xor    BYTE PTR [eax],bh
  415e7f:	inc    eax
  415e80:	xchg   esi,eax
  415e81:	fmul   DWORD PTR [ecx+0x1c]
  415e84:	int3   
  415e85:	mov    al,0xdf
  415e87:	mov    ds:0x92a034ca,al
  415e8c:	mov    eax,ds:0x6c43120b
  415e91:	and    eax,0x7dedeebf
  415e96:	adc    ch,BYTE PTR [ebx-0xb]
  415e99:	jle    0x415e1d
  415e9b:	out    dx,eax
  415e9c:	cmp    BYTE PTR [esi-0x4a],0xf1
  415ea0:	in     al,dx
  415ea1:	rcl    DWORD PTR [ebx+edi*2-0xf74b232],0xda
  415ea9:	add    bl,al
  415eab:	jae    0x415f2b
  415ead:	jbe    0x415ecb
  415eaf:	add    edi,ebp
  415eb1:	std    
  415eb2:	xchg   ebx,eax
  415eb3:	and    DWORD PTR [edi],ecx
  415eb5:	scas   eax,DWORD PTR es:[edi]
  415eb6:	xor    DWORD PTR [eax-0x6c],0x259e240f
  415ebd:	jmp    0xb9c57e89
  415ec2:	jl     0x415eba
  415ec4:	jp     0x415ef9
  415ec6:	sbb    bl,BYTE PTR [esi+0x4312f73]
  415ecc:	mov    ds:0x4573a9f7,al
  415ed1:	xchg   esi,eax
  415ed2:	test   eax,0x30257281
  415ed7:	xchg   edx,eax
  415ed8:	test   BYTE PTR [edx],dl
  415eda:	and    DWORD PTR [esi+eiz*8+0x2c],ebx
  415ede:	inc    edx
  415edf:	mov    DWORD PTR [edx],esp
  415ee1:	xor    eax,0x6c0c7caa
  415ee6:	aad    0x99
  415ee8:	test   eax,0x3a0f3df1
  415eed:	jne    0x415f52
  415eef:	inc    ebx
  415ef0:	jle    0x415e8f
  415ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef3:	cld    
  415ef4:	mov    ds:0x845de8b1,al
  415ef9:	xchg   esp,eax
  415efa:	xor    eax,0x918c65e5
  415eff:	fwait
  415f00:	jb     0x415ef3
  415f02:	xchg   ebp,eax
  415f03:	jno    0x415f83
  415f05:	lea    esp,[ebx]
  415f07:	inc    ebp
  415f08:	add    BYTE PTR ds:0x3fa1630e,dh
  415f0e:	push   esp
  415f0f:	mov    ds:0xf3642b7e,al
  415f14:	gs mov al,0x45
  415f17:	mov    bl,0x40
  415f19:	lods   eax,DWORD PTR ds:[esi]
  415f1a:	mov    ds:0x1b7c231d,al
  415f1f:	sub    eax,0x9fe7371c
  415f24:	mov    al,ds:0x23d5352d
  415f29:	adc    eax,0x347e00f4
  415f2e:	aas    
  415f2f:	popf   
  415f30:	mov    esi,0xa5a2c214
  415f35:	jne    0x415ef7
  415f37:	dec    edi
  415f38:	sub    DWORD PTR [ebx+0x2623ffe7],0xffffff87
  415f3f:	or     bh,BYTE PTR [ecx+ebx*4-0x23]
  415f43:	mov    edx,0x9ef72dd9
  415f48:	(bad)  
  415f49:	repz push cs
  415f4b:	test   DWORD PTR [ecx-0x6d],esi
  415f4e:	or     ebx,esi
  415f50:	mov    gs,WORD PTR [ebp+0x7fe3715e]
  415f56:	lds    eax,FWORD PTR [esi+ecx*4]
  415f59:	jnp    0x415f6e
  415f5b:	sub    ebp,edx
  415f5d:	inc    esp
  415f5e:	mov    ebp,0xfd89a069
  415f63:	adc    bh,BYTE PTR [ebx+esi*1-0x16]
  415f67:	add    eax,0x7b34141e
  415f6c:	jl     0x415f9e
  415f6e:	push   esp
  415f6f:	mov    bl,dh
  415f71:	das    
  415f72:	das    
  415f73:	xchg   ebx,eax
  415f74:	ins    BYTE PTR es:[edi],dx
  415f75:	inc    ebx
  415f76:	adc    al,0xea
  415f78:	adc    esp,esp
  415f7a:	jae    0x415f56
  415f7c:	and    ah,BYTE PTR [ecx]
  415f7e:	daa    
  415f7f:	xchg   edx,eax
  415f80:	add    cl,0x31
  415f83:	mov    eax,ds:0x8746b4fb
  415f88:	cmp    BYTE PTR [esi-0x16f13553],0x40
  415f8f:	stos   DWORD PTR es:[edi],eax
  415f90:	xchg   ecx,eax
  415f91:	in     al,0x58
  415f93:	arpl   bx,si
  415f95:	mov    ch,0xc5
  415f97:	push   0xffffffd7
  415f99:	icebp  
  415f9a:	popf   
  415f9b:	mov    WORD PTR [edx-0x33d343bf],cs
  415fa1:	jmp    0x8586:0x8648406
  415fa8:	dec    edx
  415fa9:	stos   BYTE PTR es:[edi],al
  415faa:	(bad)
  415fae:	inc    ebp
  415faf:	xor    DWORD PTR [edi+0x93ffe04],ecx
  415fb5:	pushf  
  415fb6:	sahf   
  415fb7:	add    ebx,DWORD PTR [edx+0x12a434fd]
  415fbd:	loop   0x415fc0
  415fbf:	and    edi,ebp
  415fc1:	jle    0x416034
  415fc3:	clc    
  415fc4:	push   ss
  415fc5:	xchg   edi,eax
  415fc6:	push   edi
  415fc7:	or     al,BYTE PTR [esi+0x5]
  415fca:	ds cdq 
  415fcc:	adc    ebp,DWORD PTR [ebp-0x1b0e8a32]
  415fd2:	mov    db1,eax
  415fd5:	lahf   
  415fd6:	bound  ebp,QWORD PTR [edi]
  415fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd9:	or     eax,edi
  415fdb:	pop    esp
  415fdc:	out    dx,al
  415fdd:	dec    esi
  415fde:	stc    
  415fdf:	xchg   DWORD PTR [esi-0x4b],edx
  415fe2:	loope  0x415f85
  415fe4:	fidivr DWORD PTR [eax+0x26]
  415fe7:	and    ebx,ebp
  415fe9:	es inc esi
  415feb:	adc    eax,0x4a7849cf
  415ff0:	adc    BYTE PTR [eax],0x40
  415ff3:	mov    bh,0x1
  415ff5:	das    
  415ff6:	nop
  415ff7:	pop    ds
  415ff8:	popa   
  415ff9:	adc    eax,0xb9b24622
  415ffe:	in     eax,dx
  415fff:	and    esp,DWORD PTR [esi]
  416001:	add    ebx,DWORD PTR [ebx]
  416003:	push   ebp
  416004:	inc    esp
  416005:	out    0xe5,al
  416007:	(bad)  
  416008:	mov    ebx,0x347320b3
  41600d:	inc    esp
  41600e:	rol    DWORD PTR [ecx+0x3ad9f3ce],1
  416014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416015:	in     eax,0xc3
  416017:	or     eax,0xada3e660
  41601c:	cmp    bh,BYTE PTR [esp+esi*1-0x51]
  416020:	and    bl,BYTE PTR [edi+0x31522dc]
  416026:	sbb    DWORD PTR [ebx+0x7f1d96a6],edi
  41602c:	rcl    BYTE PTR [ebx],0x5c
  41602f:	popa   
  416030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416031:	xor    eax,0xd4412dd2
  416036:	sbb    eax,0xc58e9336
  41603b:	mov    WORD PTR [eax],cs
  41603d:	not    DWORD PTR [ebx-0x38]
  416040:	(bad)  
  416041:	repnz iret 
  416043:	shl    DWORD PTR [ebp+esi*1+0x2d],0xd4
  416048:	int    0x39
  41604a:	into   
  41604b:	or     eax,0xa4c5c1a9
  416050:	fmulp  st(7),st
  416052:	cwde   
  416053:	sub    DWORD PTR [edi-0x5610bc00],ecx
  416059:	mov    ah,0x22
  41605b:	addr16 pop edx
  41605d:	sbb    bh,dh
  41605f:	pop    edi
  416060:	and    DWORD PTR [ecx-0xf],ecx
  416063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416064:	cmp    ecx,esi
  416066:	inc    ebp
  416067:	mov    ebp,0xd15bcd52
  41606c:	push   ebx
  41606d:	and    al,0x59
  41606f:	adc    al,0xba
  416071:	(bad)  
  416072:	daa    
  416073:	mov    ds:0x89143f8d,eax
  416078:	es jle 0x4160b8
  41607b:	dec    ebx
  41607c:	pop    ss
  41607d:	clc    
  41607e:	sbb    esi,DWORD PTR [edx+0x38fdae7d]
  416084:	ficomp WORD PTR [eax]
  416086:	jbe    0x416014
  416088:	in     al,0x4f
  41608a:	pop    esp
  41608b:	push   edi
  41608c:	es dec eax
  41608e:	and    dl,BYTE PTR [eax-0x8]
  416091:	jmp    0x4160f6
  416093:	or     eax,0x49f1fbad
  416098:	inc    edi
  416099:	js     0x4160df
  41609b:	sub    esp,esi
  41609d:	mov    ebp,eax
  41609f:	and    ah,BYTE PTR [ebp-0x72]
  4160a2:	neg    BYTE PTR [edi]
  4160a4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4160a6:	xchg   DWORD PTR [esi+0x26],edx
  4160a9:	outs   dx,BYTE PTR ds:[esi]
  4160aa:	mov    al,0x64
  4160ac:	mov    esi,0x73cdd912
  4160b1:	and    ecx,DWORD PTR es:[edx-0x4858aae]
  4160b8:	stos   DWORD PTR es:[edi],eax
  4160b9:	je     0x416095
  4160bb:	lahf   
  4160bc:	mov    ah,BYTE PTR [eax-0x766fac03]
  4160c2:	cmp    al,BYTE PTR [esi-0x78]
  4160c5:	jne    0x416115
  4160c7:	add    eax,0x17bc3e5c
  4160cc:	inc    esi
  4160cd:	xor    eax,0xe6aa44c5
  4160d2:	adc    esp,DWORD PTR ds:0x39d1bcb5
  4160d8:	es pop ecx
  4160da:	iret   
  4160db:	xchg   esi,eax
  4160dc:	or     DWORD PTR [edx+ecx*8],0xffffffa6
  4160e0:	xor    esi,DWORD PTR ds:0xfa8f06c1
  4160e6:	lods   eax,DWORD PTR ds:[esi]
  4160e7:	and    esi,DWORD PTR [ecx+0x2b68c5c4]
  4160ed:	cmp    ah,BYTE PTR [esi+esi*8-0x5e]
  4160f1:	adc    eax,0x151b81d
  4160f6:	dec    esi
  4160f7:	and    esp,DWORD PTR [eax+0x219c3b97]
  4160fd:	pop    edi
  4160fe:	into   
  4160ff:	sbb    bl,0xc4
  416102:	inc    ebp
  416103:	shl    DWORD PTR [edi],0xf6
  416106:	jb     0x4160b1
  416108:	inc    esi
  416109:	mov    ch,0xca
  41610b:	sub    cl,ch
  41610d:	aam    0x93
  41610f:	mov    gs,WORD PTR [edi+0x26d84be3]
  416115:	ret    
  416116:	push   ebp
  416117:	mov    BYTE PTR [ebp+0x71],bh
  41611a:	push   cs
  41611b:	inc    edi
  41611c:	pop    eax
  41611d:	xor    eax,0x85cdc9d0
  416122:	mov    edi,0x3ebd1c9d
  416127:	aad    0xd6
  416129:	xlat   BYTE PTR ds:[ebx]
  41612a:	rcr    al,cl
  41612c:	inc    ebp
  41612d:	and    eax,0x3596d307
  416132:	pop    ss
  416133:	or     DWORD PTR [eax+0x355614b0],ecx
  416139:	pusha  
  41613a:	ds or  eax,0x7e0c96f4
  416140:	daa    
  416141:	in     al,dx
  416142:	fcom   st(2)
  416144:	inc    edx
  416145:	jbe    0x4160f8
  416147:	jl     0x41618d
  416149:	or     al,0xfc
  41614b:	mov    ds:0xc38281b9,al
  416150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416151:	mov    ebp,0xa6a93e92
  416156:	aam    0xc7
  416158:	inc    edi
  416159:	mov    ah,0x7a
  41615b:	ret    0xe168
  41615e:	sub    bh,BYTE PTR [edi+0x5]
  416161:	cmp    BYTE PTR [ebx+0x27fe9ce0],0xa5
  416168:	jp     0x416121
  41616a:	mov    esi,0xb001e8b6
  41616f:	mov    ebx,0x22eec5ab
  416174:	xchg   ecx,eax
  416175:	xor    eax,0x3cae6ded
  41617a:	pop    ecx
  41617b:	test   al,0x47
  41617d:	std    
  41617e:	inc    ebp
  41617f:	xchg   edx,eax
  416180:	lods   al,BYTE PTR ds:[esi]
  416181:	pop    ebx
  416182:	repnz dec edi
  416184:	dec    edi
  416185:	and    esp,eax
  416187:	cmp    edx,DWORD PTR [eax]
  416189:	lock aaa 
  41618b:	and    ebx,DWORD PTR [eax+0x26315771]
  416191:	pop    ss
  416192:	sub    eax,0xc1630162
  416197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416198:	dec    edx
  416199:	mov    ch,0xd5
  41619b:	xchg   ebx,eax
  41619c:	out    0xba,eax
  41619e:	pop    ss
  41619f:	xchg   esp,eax
  4161a0:	sub    al,0xf1
  4161a2:	inc    ebp
  4161a3:	dec    edx
  4161a4:	lahf   
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	bound  ecx,QWORD PTR [esi+0x7c]
  4161a9:	cmp    DWORD PTR [ebx+esi*1+0x9],eax
  4161ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ae:	inc    eax
  4161af:	mov    ds:0xe73e7dda,eax
  4161b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b5:	push   cs
  4161b6:	adc    eax,DWORD PTR [ecx-0x67358e90]
  4161bc:	and    dh,BYTE PTR [edx]
  4161be:	pop    eax
  4161bf:	xchg   edx,eax
  4161c0:	or     al,0xb9
  4161c2:	jp     0x4161b8
  4161c4:	dec    eax
  4161c5:	daa    
  4161c6:	out    0x52,al
  4161c8:	es cwde 
  4161ca:	mov    eax,0x23fd297
  4161cf:	cmp    DWORD PTR [ebx-0x2ca7744b],eax
  4161d5:	shl    DWORD PTR [edi-0x12],cl
  4161d8:	movzx  eax,BYTE PTR [ebp+0x14]
  4161dc:	mov    ah,0xa0
  4161de:	(bad)  
  4161df:	mov    ebx,0xd268802e
  4161e4:	cmp    eax,0x6406c5b9
  4161e9:	inc    ebx
  4161ea:	loopne 0x416203
  4161ec:	aad    0x27
  4161ee:	(bad)  
  4161ef:	sub    dh,al
  4161f1:	jbe    0x416214
  4161f3:	cdq    
  4161f4:	add    DWORD PTR [ebx+0x7ec977ea],esi
  4161fa:	and    ah,BYTE PTR [ebx+0x26be8602]
  416200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416201:	call   0xffa820c8
  416206:	jae    0x416222
  416208:	inc    edx
  416209:	hlt    
  41620a:	pop    ss
  41620b:	pop    ebx
  41620c:	push   ecx
  41620d:	mov    ch,0x38
  41620f:	gs add al,0x8c
  416212:	in     eax,dx
  416213:	dec    eax
  416214:	xor    al,cl
  416216:	inc    ebp
  416217:	cld    
  416218:	aas    
  416219:	stos   BYTE PTR es:[edi],al
  41621a:	mov    edi,0x8033e3ef
  41621f:	xor    al,0x27
  416221:	(bad)  
  416222:	sbb    al,0x23
  416224:	push   cs
  416225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416226:	xchg   DWORD PTR [esi+0x46d831e],edi
  41622c:	imul   esi,ebp,0xffffffd6
  41622f:	mov    cl,0x5e
  416231:	out    0xfc,eax
  416233:	inc    esi
  416234:	mov    bh,0x56
  416236:	rcr    DWORD PTR [ebx],0x34
  416239:	push   esp
  41623a:	icebp  
  41623b:	add    al,0x45
  41623d:	ss nop
  41623f:	xor    dl,BYTE PTR [esi]
  416241:	mov    ecx,ebx
  416243:	shl    DWORD PTR [esi],0xe9
  416246:	mov    al,0xa2
  416248:	out    dx,eax
  416249:	ror    DWORD PTR ds:0xd43fdc87,0x1b
  416250:	not    BYTE PTR [edx+0x2f]
  416253:	fwait
  416254:	push   0xdaae45c1
  416259:	stc    
  41625a:	xchg   ecx,eax
  41625b:	pushf  
  41625c:	jl     0x41620d
  41625e:	mov    al,0x56
  416260:	test   DWORD PTR [edx+0x27],ebp
  416263:	mov    ds:0x8e7b37a9,eax
  416268:	stos   DWORD PTR es:[edi],eax
  416269:	inc    esi
  41626a:	test   al,0x8a
  41626c:	ins    DWORD PTR es:[edi],dx
  41626d:	mov    ch,0xbd
  41626f:	adc    BYTE PTR [ecx+0x4ed0ced2],cl
  416275:	rcl    DWORD PTR [edi+0x17],0x59
  416279:	out    dx,al
  41627a:	push   ebx
  41627b:	and    esp,ebx
  41627d:	dec    ecx
  41627e:	cmp    BYTE PTR [esi],ah
  416280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416281:	stos   DWORD PTR es:[edi],eax
  416282:	adc    al,0x89
  416284:	sub    dh,dl
  416286:	out    dx,eax
  416287:	rcr    ch,1
  416289:	mov    bl,0xe8
  41628b:	sbb    dh,BYTE PTR [ebx]
  41628d:	jp     0x416248
  41628f:	mov    ecx,0x31c03ec9
  416294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416295:	icebp  
  416296:	push   0xffffff8d
  416298:	lods   al,BYTE PTR ds:[esi]
  416299:	add    DWORD PTR [ebp+0x2d0f7528],edx
  41629f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4162a1:	xlat   BYTE PTR ds:[ebx]
  4162a2:	shr    DWORD PTR [ebx+0x40],cl
  4162a5:	xchg   ecx,eax
  4162a6:	lock lea ecx,[eax]
  4162a9:	and    al,ch
  4162ab:	pop    ebp
  4162ac:	add    ebp,DWORD PTR [edi-0x64]
  4162af:	fistp  WORD PTR [esi-0x6b]
  4162b2:	mov    eax,0x3eb4aa5f
  4162b7:	shr    BYTE PTR [edi-0x59],cl
  4162ba:	leave  
  4162bb:	fld    TBYTE PTR [edx]
  4162bd:	retf   
  4162be:	lahf   
  4162bf:	push   ecx
  4162c0:	mov    eax,ds:0xc0a897bd
  4162c5:	jae    0x41632e
  4162c7:	aaa    
  4162c8:	and    cl,0x27
  4162cb:	lods   al,BYTE PTR ds:[esi]
  4162cc:	xor    BYTE PTR ds:0x887cb8af,0xbb
  4162d3:	ficom  DWORD PTR [ecx]
  4162d5:	mov    esp,0xf7e076c5
  4162da:	in     al,dx
  4162db:	shr    BYTE PTR [ecx+0x5e],cl
  4162de:	jno    0x41627f
  4162e0:	imul   esi,DWORD PTR [edx+0x7e],0xffffff93
  4162e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e5:	sub    BYTE PTR [ecx-0x3b391aba],0x1c
  4162ec:	mov    ds:0xb61ae02a,al
  4162f1:	add    BYTE PTR [esi+0x63],dl
  4162f4:	js     0x41636a
  4162f6:	mov    BYTE PTR [ecx+0xf],dl
  4162f9:	mov    cl,BYTE PTR [esi-0x5d]
  4162fc:	dec    edx
  4162fd:	mov    ?,WORD PTR [edx+0xe]
  416300:	mov    ds:0x8202e979,al
  416305:	sub    eax,DWORD PTR [esi-0x5a]
  416308:	fs scas eax,DWORD PTR es:[edi]
  41630a:	dec    esp
  41630b:	in     eax,dx
  41630c:	push   edx
  41630d:	(bad)  
  41630e:	xchg   edi,eax
  41630f:	lahf   
  416310:	adc    ecx,esp
  416312:	stc    
  416313:	mov    ebx,DWORD PTR [esi+0x57]
  416316:	mov    ecx,0x42c49e7d
  41631b:	test   al,0xd3
  41631d:	adc    BYTE PTR [esi+0x13],cl
  416320:	test   BYTE PTR [ecx+0x7e],ah
  416323:	popa   
  416324:	jp     0x4162c8
  416326:	push   edx
  416327:	aaa    
  416328:	sbb    al,0x1d
  41632a:	das    
  41632b:	and    esi,DWORD PTR [ebp+0x263bb5fa]
  416331:	push   ebp
  416332:	pushf  
  416333:	inc    ecx
  416334:	or     ch,BYTE PTR [ecx]
  416336:	mov    edx,0xca3528d2
  41633b:	mov    ch,0xde
  41633d:	dec    edi
  41633e:	fwait
  41633f:	cdq    
  416340:	pop    ss
  416341:	jmp    0x149e:0x71be7cc5
  416348:	scas   eax,DWORD PTR es:[edi]
  416349:	lahf   
  41634a:	pop    eax
  41634b:	pop    ebp
  41634c:	fld    QWORD PTR [ebp+edi*1-0x5d]
  416350:	dec    edx
  416351:	mov    eax,ds:0xd8a6183b
  416356:	out    0x33,al
  416358:	out    dx,al
  416359:	(bad)  
  41635a:	xlat   BYTE PTR ds:[ebx]
  41635b:	pop    ebp
  41635c:	test   DWORD PTR ds:0x4fe5fc2b,esi
  416362:	in     al,dx
  416363:	xchg   esi,eax
  416364:	xor    esp,DWORD PTR [ebx+0x29]
  416367:	in     eax,0x2a
  416369:	xor    al,0x70
  41636b:	jb     0x41636e
  41636d:	(bad)  
  41636e:	loop   0x416381
  416370:	loop   0x4163ba
  416372:	xor    eax,DWORD PTR [ebx]
  416374:	push   es
  416375:	sar    BYTE PTR [esp+edx*4+0x46],0xda
  41637a:	push   esi
  41637b:	inc    ebx
  41637c:	mov    ?,WORD PTR [edx]
  41637e:	out    dx,al
  41637f:	lods   eax,DWORD PTR ds:[esi]
  416380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416381:	test   BYTE PTR [esi+0x8],cl
  416384:	out    0x29,al
  416386:	mov    edi,0x1a376f7a
  41638b:	push   edi
  41638c:	mov    al,ds:0x530745c1
  416391:	push   cs
  416392:	leave  
  416393:	mov    al,0xa5
  416395:	retf   0xb45
  416398:	ret    
  416399:	inc    ecx
  41639a:	pop    ecx
  41639b:	jge    0x416367
  41639d:	xor    eax,0x8a5e8a8
  4163a2:	sbb    eax,0xcd8611a3
  4163a7:	(bad)  
  4163a8:	or     DWORD PTR es:[ebp-0x63],esi
  4163ac:	xchg   esp,eax
  4163ad:	jmp    0x41636c
  4163af:	fistp  QWORD PTR [edi]
  4163b1:	cld    
  4163b2:	dec    eax
  4163b3:	adc    edi,edi
  4163b5:	sub    eax,0x50dd231e
  4163ba:	dec    edi
  4163bb:	xlat   BYTE PTR ds:[ebx]
  4163bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bd:	mov    ebx,0x6709259c
  4163c2:	mov    esp,0xb6162628
  4163c7:	mov    ebp,0x48e1dfe6
  4163cc:	fwait
  4163cd:	adc    DWORD PTR [edx+0x78],eax
  4163d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d1:	push   cs
  4163d2:	lock dec edi
  4163d4:	ins    BYTE PTR es:[edi],dx
  4163d5:	adc    BYTE PTR [eax],ah
  4163d7:	mov    ebx,0x2499b567
  4163dc:	sub    ebx,DWORD PTR [ecx+ecx*4]
  4163df:	mov    ch,0x39
  4163e1:	push   ds
  4163e2:	inc    esi
  4163e3:	adc    al,0x30
  4163e5:	sub    edi,edx
  4163e7:	ja     0x4163d7
  4163e9:	call   0x2346:0xf7a63f54
  4163f0:	or     DWORD PTR [ecx-0x229903dd],eax
  4163f6:	(bad)  
  4163f9:	mov    edx,0x65d4b137
  4163fe:	hlt    
  4163ff:	mov    edi,ecx
  416401:	mov    cl,0x80
  416403:	in     al,0xb
  416405:	iret   
  416406:	(bad)  
  416407:	pop    ds
  416408:	shr    BYTE PTR ds:0x6a25bb2b,1
  41640e:	add    esp,DWORD PTR [esi]
  416410:	ret    0x4070
  416413:	rcr    BYTE PTR [ebp-0x732561cb],1
  416419:	(bad)  
  41641a:	and    edi,DWORD PTR [ecx-0x16]
  41641d:	out    dx,eax
  41641e:	lds    ebp,FWORD PTR [edx]
  416420:	xor    DWORD PTR [esi+0x2f8dd826],edi
  416426:	push   0x879769a8
  41642b:	pop    ds
  41642c:	xor    edi,ebp
  41642e:	test   BYTE PTR [edx+0x77],dh
  416431:	sbb    esi,eax
  416433:	pop    ds
  416434:	xchg   ebx,eax
  416435:	ss and al,0x25
  416438:	popa   
  416439:	imul   edx,DWORD PTR [ebx+esi*8-0x5ccfc38b],0x1565245b
  416444:	es xchg edx,eax
  416446:	xchg   DWORD PTR [ebx-0xf1319ed],ecx
  41644c:	sub    al,0x35
  41644e:	cdq    
  41644f:	inc    esi
  416450:	adc    DWORD PTR [edx],esi
  416452:	add    bh,BYTE PTR [esp+eiz*4+0x26007ddd]
  416459:	push   eax
  41645a:	aad    0x5d
  41645c:	test   al,0xb9
  41645e:	pop    ebp
  41645f:	test   al,0x62
  416461:	mov    ch,0x72
  416463:	sbb    eax,0x49daccc7
  416468:	push   esp
  416469:	fdiv   DWORD PTR [edx+0x45eb1675]
  41646f:	test   al,0x6b
  416471:	dec    ecx
  416472:	call   0x453ea9b5
  416477:	call   0x60d5:0xa302f57a
  41647e:	cwde   
  41647f:	pop    ss
  416480:	es jns 0x416425
  416483:	mov    edx,ecx
  416485:	daa    
  416486:	xlat   BYTE PTR ds:[ebx]
  416487:	xor    DWORD PTR [edi+0x12ecaab3],0x57
  41648e:	mov    BYTE PTR ds:0xa1101c3a,bh
  416494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416495:	sub    edi,DWORD PTR [esi+0x612a6253]
  41649b:	pop    esp
  41649c:	inc    esi
  41649d:	mov    ch,0x9a
  41649f:	adc    al,0x95
  4164a1:	(bad)  
  4164a2:	mov    ch,0x22
  4164a4:	aam    0x12
  4164a6:	inc    esi
  4164a7:	aam    0xca
  4164a9:	pop    ss
  4164aa:	add    dl,0x56
  4164ad:	scas   eax,DWORD PTR es:[edi]
  4164ae:	sbb    cl,ch
  4164b0:	xchg   edi,esi
  4164b2:	pop    ss
  4164b3:	call   0x1763:0x22dc7218
  4164ba:	(bad)  
  4164bb:	sti    
  4164bc:	inc    esi
  4164bd:	dec    edi
  4164be:	in     eax,0xfd
  4164c0:	inc    esp
  4164c1:	hlt    
  4164c2:	add    ecx,ecx
  4164c4:	ins    DWORD PTR es:[edi],dx
  4164c5:	mov    ch,0x53
  4164c7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4164c9:	ficomp DWORD PTR [edi]
  4164cb:	or     ebx,DWORD PTR [eax+0x78]
  4164ce:	inc    ebp
  4164cf:	imul   ebp,DWORD PTR [ebx+0x5e],0x26820c2b
  4164d6:	push   eax
  4164d7:	adc    DWORD PTR [eax+0x2c97e36d],0xffffffad
  4164de:	in     eax,dx
  4164df:	and    cl,dh
  4164e1:	jns    0x416467
  4164e3:	(bad)  
  4164e4:	es jmp 0xc7f2aa72
  4164ea:	jnp    0x416483
  4164ec:	mov    edx,0xe33df934
  4164f1:	sub    dl,ch
  4164f3:	in     eax,dx
  4164f4:	ins    BYTE PTR es:[edi],dx
  4164f5:	mov    ecx,0x5fa68694
  4164fa:	cmp    eax,0xdfbca75e
  4164ff:	push   edi
  416500:	lock mov cl,0x9b
  416503:	jge    0x4164c1
  416505:	adc    BYTE PTR [ebp+0x7de0bfb1],al
  41650b:	stc    
  41650c:	loop   0x416500
  41650e:	inc    ebp
  41650f:	fcomp  QWORD PTR [ebx+0x2063e845]
  416515:	std    
  416516:	and    bh,ah
  416518:	retf   0x2b63
  41651b:	and    esp,DWORD PTR [ebx-0x5929b964]
  416521:	or     DWORD PTR [esi+ebx*2],ebx
  416524:	jmp    0x31af266c
  416529:	xor    eax,0xa5a4857e
  41652e:	jne    0x416500
  416530:	gs popa 
  416532:	es cld 
  416534:	dec    edi
  416535:	mov    edx,0xb5367ca9
  41653a:	scas   al,BYTE PTR es:[edi]
  41653b:	inc    esp
  41653c:	mov    eax,ds:0x856f3159
  416541:	xor    eax,0xd52c5f62
  416546:	idiv   BYTE PTR [edi+0x41]
  416549:	add    al,0x46
  41654b:	xor    eax,0xd5741841
  416550:	push   esi
  416551:	js     0x4164db
  416553:	cmp    eax,DWORD PTR ss:[esi+ebp*8-0x5e]
  416558:	cmp    al,0x81
  41655a:	sahf   
  41655b:	jmp    0x333f51ff
  416560:	adc    eax,edi
  416562:	dec    eax
  416563:	pop    eax
  416564:	into   
  416565:	loop   0x4165cc
  416567:	push   ebx
  416568:	dec    ebp
  416569:	sbb    al,0xda
  41656b:	(bad)  
  41656c:	fwait
  41656d:	xor    eax,0x24948ae2
  416572:	pop    ds
  416573:	jge    0x416558
  416575:	xlat   BYTE PTR ds:[ebx]
  416576:	or     BYTE PTR [esi],cl
  416578:	es stos DWORD PTR es:[edi],eax
  41657a:	fs pop edi
  41657c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41657d:	pop    edx
  41657e:	(bad)  
  41657f:	mov    ch,0x4c
  416581:	cs sbb eax,ebp
  416584:	xor    cl,ch
  416586:	adc    eax,0xc3e02593
  41658b:	dec    esp
  41658c:	or     ecx,0x7018324b
  416592:	jecxz  0x4165b6
  416594:	adc    eax,0xc04b477f
  416599:	out    dx,al
  41659a:	out    dx,al
  41659b:	and    ch,BYTE PTR [ecx+esi*4+0x6026ff04]
  4165a2:	(bad)  
  4165a3:	(bad)  
  4165a4:	loopne 0x41660e
  4165a6:	fnstsw WORD PTR ds:0x2aaab50b
  4165ac:	push   ebp
  4165ad:	add    eax,0xbb684169
  4165b2:	cmp    DWORD PTR [edi],0xffffffa6
  4165b5:	pop    ds
  4165b6:	enter  0x599a,0xc0
  4165ba:	lods   al,BYTE PTR ds:[esi]
  4165bb:	mov    DWORD PTR [ebp+0x35],ecx
  4165be:	cmp    dh,ah
  4165c0:	sbb    eax,0x5ee7b8
  4165c5:	clc    
  4165c6:	inc    ebp
  4165c7:	mov    DWORD PTR [ebx],esi
  4165c9:	cwde   
  4165ca:	les    ecx,FWORD PTR [ebx-0x11]
  4165cd:	mov    ds:0x1a1e7045,al
  4165d2:	pop    esp
  4165d3:	adc    al,0x8e
  4165d5:	jb     0x416627
  4165d7:	and    esi,DWORD PTR [ecx+0x29]
  4165da:	inc    esp
  4165db:	lods   al,BYTE PTR ds:[esi]
  4165dc:	ss xor dl,ah
  4165df:	pop    ebp
  4165e0:	gs cli 
  4165e2:	mov    edx,0xde59b2eb
  4165e7:	adc    al,0xd5
  4165e9:	ret    
  4165ea:	call   0x4f6a481
  4165ef:	adc    BYTE PTR [ebp+0x5c7402b4],al
  4165f5:	daa    
  4165f6:	sub    DWORD PTR [edx+0x687cf551],edx
  4165fc:	repnz mov bl,0x2b
  4165ff:	mov    ch,0x4a
  416601:	cwde   
  416602:	jmp    0x416660
  416604:	and    ch,BYTE PTR [ecx]
  416606:	mov    es,WORD PTR [ebx]
  416608:	popf   
  416609:	push   ds
  41660a:	push   es
  41660b:	sub    eax,esp
  41660d:	ja     0x416632
  41660f:	aad    0x26
  416611:	hlt    
  416612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416613:	mov    cs,WORD PTR [ebp-0x33]
  416616:	imul   DWORD PTR cs:[ebp+0x35]
  41661a:	xor    esp,esi
  41661c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41661d:	pop    esi
  41661e:	jae    0x4165de
  416620:	ds aad 0xc5
  416623:	or     bh,BYTE PTR [edi-0x27]
  416626:	mov    al,BYTE PTR [ecx+0x6c]
  416629:	lahf   
  41662a:	int3   
  41662b:	xor    eax,0xf73712c9
  416630:	xchg   ch,dh
  416632:	test   DWORD PTR [edx+0x3beee091],edx
  416638:	es (bad) 
  41663a:	fmul   DWORD PTR [ebp+0x56]
  41663d:	(bad)  
  41663e:	sbb    al,0xb2
  416640:	in     eax,0x98
  416642:	lods   al,BYTE PTR ds:[esi]
  416643:	fbld   TBYTE PTR [esi]
  416645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416646:	loopne 0x4165e7
  416648:	outs   dx,BYTE PTR ds:[esi]
  416649:	or     BYTE PTR [edi],al
  41664b:	adc    eax,0xa1c6154e
  416650:	out    dx,eax
  416651:	cmc    
  416652:	bound  ebp,QWORD PTR [eax]
  416654:	dec    ebx
  416655:	sbb    ah,BYTE PTR [ecx]
  416657:	es retf 
  416659:	sub    esi,eax
  41665b:	mov    ds:0x7113b383,al
  416660:	inc    edx
  416661:	mov    ah,0x5f
  416663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416665:	dec    eax
  416666:	fadd   st,st(0)
  416668:	adc    BYTE PTR [ebx-0x196630b5],0xf5
  41666f:	mov    ds:0x9cb70196,al
  416674:	es dec ebx
  416676:	or     al,0x6c
  416678:	or     al,0x4f
  41667a:	push   esp
  41667b:	in     eax,0x4f
  41667d:	scas   al,BYTE PTR es:[edi]
  41667e:	in     eax,0xc6
  416680:	adc    bh,ch
  416682:	test   esp,esp
  416684:	leave  
  416685:	dec    edi
  416686:	retf   0x26bb
  416689:	sar    DWORD PTR es:[ecx-0x38],cl
  41668d:	rol    DWORD PTR [eax],1
  41668f:	pop    ebx
  416690:	ins    DWORD PTR es:[edi],dx
  416691:	mov    ch,0xcb
  416693:	dec    edi
  416694:	cwde   
  416695:	retf   
  416696:	mov    ch,0x43
  416698:	jle    0x416680
  41669a:	inc    ebp
  41669b:	push   ds
  41669c:	cmc    
  41669d:	and    al,0x13
  41669f:	(bad)  
  4166a0:	xchg   ebp,eax
  4166a1:	sahf   
  4166a2:	push   0x1c96825a
  4166a7:	and    ecx,DWORD PTR [ebx-0x70]
  4166aa:	or     eax,0x2f8aa5f9
  4166af:	and    BYTE PTR ds:0xc0bd94da,ah
  4166b5:	aas    
  4166b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166b7:	dec    edi
  4166b8:	add    al,0x1
  4166ba:	or     esp,DWORD PTR [ebx+0x78ba0772]
  4166c0:	and    ebp,edx
  4166c2:	sbb    edx,DWORD PTR [ecx-0x413aab6e]
  4166c8:	push   edx
  4166c9:	ret    
  4166ca:	push   ecx
  4166cb:	push   edx
  4166cc:	sub    edi,edx
  4166ce:	aad    0xf2
  4166d0:	imul   esi,DWORD PTR [ebp-0x764c0d07],0x7a573c44
  4166da:	inc    ecx
  4166db:	jg     0x416758
  4166dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166de:	push   ebp
  4166df:	pop    edx
  4166e0:	test   al,0x8e
  4166e2:	or     eax,0x1cca63
  4166e7:	or     al,0x50
  4166e9:	call   0x1036de56
  4166ee:	and    dh,BYTE PTR [edx]
  4166f0:	xchg   edi,eax
  4166f1:	and    eax,0xc6dee32d
  4166f6:	sbb    cl,dl
  4166f8:	mov    ds:0x6ef2bcdf,al
  4166fd:	repz mov ebp,0x4c45d449
  416703:	and    esi,eax
  416705:	popf   
  416706:	pop    esp
  416707:	das    
  416708:	es cld 
  41670a:	sbb    bl,BYTE PTR [ecx-0x1bc52a8e]
  416710:	xor    BYTE PTR [ebp-0x462890b3],dh
  416716:	jl     0x416712
  416718:	popa   
  416719:	jecxz  0x4166e0
  41671b:	or     ebx,DWORD PTR [ebx+0x45]
  41671e:	jp     0x4166ee
  416720:	and    eax,0xb5be13ab
  416725:	xchg   esp,eax
  416726:	push   cs
  416727:	mov    ds:0xb92fab91,eax
  41672c:	sahf   
  41672d:	(bad)  
  41672e:	in     al,0xd2
  416730:	inc    esp
  416731:	jne    0x4167b1
  416733:	inc    ebx
  416734:	pop    eax
  416735:	pop    edi
  416736:	xchg   esi,ecx
  416738:	xchg   edi,eax
  416739:	jmp    0xe3a7da3b
  41673e:	aaa    
  41673f:	fldenv [edi]
  416741:	jo     0x416767
  416743:	jmp    0xc6c0210a
  416748:	dec    BYTE PTR [edi]
  41674a:	dec    ecx
  41674b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41674c:	mov    WORD PTR [ecx+0x48],cs
  41674f:	sbb    al,0x36
  416751:	loop   0x4166e0
  416753:	pop    esi
  416754:	fist   DWORD PTR [esi+0x6a6f7be]
  41675a:	dec    eax
  41675b:	test   al,0xf6
  41675d:	push   esp
  41675e:	in     eax,dx
  41675f:	xchg   edx,eax
  416760:	or     DWORD PTR [ebp-0x3fa4513f],esi
  416766:	jae    0x4167b0
  416768:	push   ebp
  416769:	mov    ebx,0xb51a64af
  41676e:	ins    BYTE PTR es:[edi],dx
  41676f:	xchg   esi,eax
  416770:	daa    
  416771:	sub    eax,0xdc3f2bdb
  416776:	adc    BYTE PTR [ecx+0x48a05577],ah
  41677c:	dec    eax
  41677d:	pop    ss
  41677e:	(bad)  
  41677f:	bound  esi,QWORD PTR [edi+0x4719d67e]
  416785:	mov    bl,0x96
  416787:	frstor [eax-0x15]
  41678a:	jmp    0x26e7:0x9765eba2
  416791:	arpl   WORD PTR [ebx],si
  416793:	arpl   bx,si
  416795:	sub    ah,BYTE PTR [ecx+0x9]
  416798:	mul    BYTE PTR ds:0x15816428
  41679e:	adc    DWORD PTR [edx+0x15aab052],ebp
  4167a4:	es out 0xe9,eax
  4167a7:	pop    ebp
  4167a8:	inc    esp
  4167a9:	mov    bl,0x67
  4167ab:	cdq    
  4167ac:	jle    0x416763
  4167ae:	mov    ds:0x42a6c435,al
  4167b3:	lock inc ecx
  4167b5:	sbb    dh,al
  4167b7:	xchg   edx,eax
  4167b8:	jne    0x416823
  4167ba:	mov    BYTE PTR [edx+0x30664a05],cl
  4167c0:	jecxz  0x4167cd
  4167c2:	repz mov ds:0xbbdf717e,al
  4167c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c9:	inc    eax
  4167ca:	cmp    ah,BYTE PTR [ebx-0x28]
  4167cd:	push   es
  4167ce:	mov    ebp,0xdeb51cd8
  4167d3:	(bad)  
  4167d4:	mov    esp,0x3db78faf
  4167d9:	mov    ebx,0x40a60a08
  4167de:	push   ds
  4167df:	dec    ecx
  4167e0:	test   al,0x84
  4167e2:	push   esp
  4167e3:	xor    al,0x67
  4167e5:	xor    eax,0x9d40e8e5
  4167ea:	dec    esp
  4167eb:	lods   eax,DWORD PTR ds:[esi]
  4167ec:	mov    gs,ecx
  4167ee:	(bad)
  4167f1:	int    0x57
  4167f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f4:	repnz mov al,ds:0x115cf69e
  4167fa:	in     al,dx
  4167fb:	and    bl,BYTE PTR [eax+0x61]
  4167fe:	fwait
  4167ff:	push   eax
  416800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416801:	aas    
  416802:	icebp  
  416803:	pushf  
  416804:	xor    DWORD PTR [esi-0x4ac9b2ea],edi
  41680a:	xchg   ecx,eax
  41680b:	adc    cl,bh
  41680d:	cmp    esi,ebp
  41680f:	xchg   ebx,eax
  416810:	mov    eax,0xe5bda91b
  416815:	sub    eax,0x95856506
  41681a:	and    edi,DWORD PTR [ecx+0x7b]
  41681d:	push   ebx
  41681e:	loop   0x41686a
  416820:	pop    es
  416821:	dec    ecx
  416822:	xor    eax,0xbbe558a3
  416827:	(bad)  
  416828:	imul   edx,esp,0x45
  41682b:	push   0x59
  41682d:	push   edi
  41682e:	mov    esi,0x6f32a79f
  416833:	xchg   edi,eax
  416834:	jno    0x4167eb
  416836:	cmp    al,0x30
  416838:	mov    DWORD PTR [eax+0x2ae67ffb],0x5fcd86c6
  416842:	and    DWORD PTR [esi-0x51],0xffffffe8
  416846:	xor    BYTE PTR [ecx+0x5e],0x2b
  41684a:	pop    edi
  41684b:	sbb    edx,DWORD PTR [ebp+0x7fcffd53]
  416851:	int    0x49
  416853:	jae    0x41687b
  416855:	or     BYTE PTR [ebp+0x65],bl
  416858:	mov    ah,0x6f
  41685a:	in     eax,0xfe
  41685c:	mov    ?,WORD PTR [ebp+0x7928f204]
  416862:	mov    ebx,0xc5d9f03f
  416867:	adc    eax,0xa6fff710
  41686c:	add    eax,ecx
  41686e:	and    ch,BYTE PTR [edx+0x19]
  416871:	dec    esi
  416872:	ja     0x416815
  416874:	dec    edi
  416875:	xchg   edi,eax
  416876:	add    dh,BYTE PTR [edx-0x3cd4eddd]
  41687c:	sbb    ah,dl
  41687e:	sbb    dh,BYTE PTR [ebp-0x1b]
  416881:	sbb    BYTE PTR [ebx-0x23],dh
  416884:	push   es
  416885:	jp     0x41685e
  416887:	les    esi,FWORD PTR [edx]
  416889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41688a:	adc    dh,BYTE PTR [esi]
  41688c:	or     DWORD PTR [ecx+0x42],ebp
  41688f:	mov    eax,ds:0xbbb47599
  416894:	dec    esp
  416895:	xchg   DWORD PTR [ebx+edi*4],ecx
  416898:	and    eax,0x923267ef
  41689d:	repz dec ebp
  41689f:	mov    dh,0x3f
  4168a1:	xor    eax,0x469af4aa
  4168a6:	adc    bh,0x89
  4168a9:	cli    
  4168aa:	lds    ebx,FWORD PTR [ebp+0x2ea1711b]
  4168b0:	dec    eax
  4168b1:	and    esp,0x5b
  4168b4:	cdq    
  4168b5:	mov    edx,0x41b77745
  4168ba:	mov    ds:0x36ca8675,al
  4168bf:	call   0x2491:0xee261b80
  4168c6:	mul    BYTE PTR [ecx]
  4168c8:	popa   
  4168c9:	mov    dh,0x13
  4168cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168cc:	xor    edi,DWORD PTR [ecx+0x4]
  4168cf:	mov    ds:0x536db43,eax
  4168d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d5:	cmc    
  4168d6:	call   0xf62e9458
  4168db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168dc:	pop    ecx
  4168dd:	xor    eax,0xd10bb285
  4168e2:	imul   DWORD PTR [edx-0xb3a175f]
  4168e8:	sub    al,0x36
  4168ea:	mov    ds:0x1939a6ac,al
  4168ef:	add    DWORD PTR [ecx+0x79],edi
  4168f2:	repz mov ds:0x367d746e,al
  4168f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f9:	mov    esp,0x99362f56
  4168fe:	pop    ds
  4168ff:	fwait
  416900:	jb     0x4168db
  416902:	and    BYTE PTR [eax],al
  416904:	fnsave [eax]
  416906:	out    dx,al
  416907:	mov    ds:0xcc854123,al
  41690c:	fisubr DWORD PTR [ebx+eax*2+0x3d7475a0]
  416913:	and    DWORD PTR [edx-0x24],eax
  416916:	add    eax,0x49b8cefe
  41691b:	dec    edi
  41691c:	fcmove st,st(7)
  41691e:	fistp  WORD PTR [ebx]
  416920:	push   ebp
  416921:	lock push ss
  416923:	sbb    BYTE PTR [esi+0x55],ah
  416926:	ret    
  416927:	sbb    eax,0x1924131e
  41692c:	popf   
  41692d:	xor    eax,0xa270d995
  416932:	lods   eax,DWORD PTR ds:[esi]
  416933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416934:	xor    ebp,DWORD PTR [ecx+0x55]
  416937:	mov    ds:0x6d451900,eax
  41693c:	and    eax,0xdc236bd8
  416941:	push   ds
  416942:	dec    ecx
  416943:	aas    
  416944:	inc    edx
  416945:	mov    ch,0x9c
  416947:	push   ss
  416948:	mov    edx,DWORD PTR [edi+0x1dd45dfb]
  41694e:	xor    BYTE PTR [edi],dl
  416950:	push   ebx
  416951:	rol    ebp,cl
  416953:	inc    edi
  416954:	cmp    eax,0x8a42a1ce
  416959:	js     0x416929
  41695b:	test   BYTE PTR ds:0xf753f33,dl
  416961:	mov    cl,0xa5
  416963:	(bad)  
  416965:	mov    bl,0x2d
  416967:	push   ecx
  416968:	cdq    
  416969:	dec    ebp
  41696a:	or     ebp,DWORD PTR [ebx+0x26]
  41696d:	mov    edx,0x59236121
  416972:	stos   DWORD PTR es:[edi],eax
  416973:	xor    ah,BYTE PTR [edx+0x35]
  416976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416977:	fsub   st,st(3)
  416979:	xchg   ebx,eax
  41697a:	or     al,0xc7
  41697c:	dec    eax
  41697d:	test   DWORD PTR [ebp-0x7f],0x96071f1d
  416984:	popa   
  416985:	add    bh,BYTE PTR [edx-0x6f]
  416988:	or     BYTE PTR [ecx-0x7339e43a],0xe
  41698f:	xchg   esp,eax
  416990:	stos   BYTE PTR es:[edi],al
  416991:	mov    bh,0xc5
  416993:	pop    eax
  416994:	pusha  
  416995:	xor    dh,ch
  416997:	pop    edi
  416998:	or     BYTE PTR [edx-0x4d],ah
  41699b:	jg     0x41697f
  41699d:	pop    ds
  41699e:	mov    ds:0xdbad851f,eax
  4169a3:	mov    ch,0x89
  4169a5:	sub    eax,0xb2057120
  4169aa:	cmc    
  4169ab:	or     DWORD PTR [edi],esp
  4169ad:	pop    es
  4169ae:	test   BYTE PTR [esi+0x2a],0xe8
  4169b2:	mov    ebx,0x41beefd8
  4169b7:	mov    ds:0xd01e124,eax
  4169bc:	bound  edx,QWORD PTR es:[ecx]
  4169bf:	jo     0x416a04
  4169c1:	ss out 0x2b,al
  4169c4:	lods   al,BYTE PTR ds:[esi]
  4169c5:	mov    dl,0x0
  4169c7:	jb     0x4169af
  4169c9:	call   0x458f90ba
  4169ce:	jg     0x41698f
  4169d0:	leave  
  4169d1:	push   es
  4169d2:	inc    esi
  4169d3:	jge    0x416a33
  4169d5:	icebp  
  4169d6:	int    0x4e
  4169d8:	pop    esp
  4169d9:	pop    ds
  4169da:	repnz sub bl,al
  4169dd:	cmp    ah,ah
  4169df:	mov    ds:0xc494cb40,al
  4169e4:	nop
  4169e5:	loopne 0x416a11
  4169e7:	sahf   
  4169e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e9:	mov    edx,0x587766cb
  4169ee:	rcr    eax,0x5f
  4169f1:	xchg   DWORD PTR [ecx-0x57],ecx
  4169f4:	pop    ss
  4169f5:	xor    eax,0xe8645772
  4169fa:	mov    bh,0x9f
  4169fc:	ret    0xf7e6
  4169ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a01:	int    0xb2
  416a03:	sub    bh,ah
  416a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a06:	mov    ebx,0xe40f4eb7
  416a0b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  416a0d:	dec    ecx
  416a0e:	fwait
  416a0f:	cmp    ch,ch
  416a11:	or     BYTE PTR [ecx+0x68782502],al
  416a17:	sbb    edi,DWORD PTR [ecx+eax*4]
  416a1a:	xchg   esi,eax
  416a1b:	sub    BYTE PTR [esi+0x786c6ea6],dl
  416a21:	and    eax,0x726b2353
  416a26:	xor    dl,BYTE PTR [esi-0x48d5fb5b]
  416a2c:	enter  0xf4f8,0x49
  416a30:	rcr    BYTE PTR [eax+0x6f],0x95
  416a34:	and    bl,BYTE PTR [edx]
  416a36:	in     al,0xa2
  416a38:	mov    ebp,DWORD PTR [ecx]
  416a3a:	daa    
  416a3b:	retf   
  416a3c:	xchg   esp,eax
  416a3d:	mov    dl,0x75
  416a3f:	nop
  416a40:	mov    ebp,esi
  416a42:	icebp  
  416a43:	mov    ebx,DWORD PTR [esi+0x5891de33]
  416a49:	xor    eax,0x1b678ae2
  416a4e:	es cwde 
  416a50:	pop    eax
  416a52:	lds    esi,FWORD PTR [ebx+0x44]
  416a55:	enter  0x44dc,0x69
  416a59:	or     BYTE PTR [ebp+0x46349f9f],ah
  416a5f:	jne    0x416a91
  416a61:	pop    esp
  416a62:	into   
  416a63:	push   es
  416a64:	(bad)  
  416a65:	(bad)  
  416a66:	mov    BYTE PTR [esi+eiz*1+0x15],dl
  416a6a:	jge    0x416add
  416a6c:	mov    dl,0xb4
  416a6e:	and    BYTE PTR [esi+0x7a],dl
  416a71:	xor    eax,0x40ee214a
  416a76:	loope  0x416a9c
  416a78:	retf   
  416a79:	or     eax,0x228b44c4
  416a7e:	pop    edi
  416a7f:	aam    0xe5
  416a81:	and    DWORD PTR [esi],esi
  416a83:	sub    DWORD PTR [ebp+0x35],edi
  416a86:	jne    0x416a84
  416a88:	cmp    ecx,ecx
  416a8a:	(bad)  [ebx+eiz*2-0x5d]
  416a8e:	mov    esi,0xd34e1728
  416a93:	lea    esp,[ebx+0x61bc42d5]
  416a99:	mov    ah,0xf
  416a9b:	mov    esp,0xa308f953
  416aa0:	mov    ebp,0x249df449
  416aa5:	outs   dx,BYTE PTR ds:[esi]
  416aa6:	push   ss
  416aa7:	test   DWORD PTR [ebp+0x8],esp
  416aaa:	push   es
  416aab:	adc    eax,0x11bee5e7
  416ab0:	cdq    
  416ab1:	iret   
  416ab2:	test   DWORD PTR [edi+ebx*8-0x2f7d948e],eax
  416ab9:	fmulp  st(3),st
  416abb:	ss es addr16 pop edx
  416abf:	mov    WORD PTR [esi],ds
  416ac1:	stc    
  416ac2:	cmp    eax,0x41a5b9b1
  416ac7:	popa   
  416ac8:	xor    DWORD PTR ds:0xad120340,esi
  416ace:	data16 and BYTE PTR [edi],ch
  416ad1:	sub    eax,DWORD PTR [esi+0x5c]
  416ad4:	not    BYTE PTR [esi+0x72019062]
  416ada:	into   
  416adb:	sbb    DWORD PTR [edx+0x60233d1c],0xa2756cc5
  416ae5:	mov    ebp,0xf874a628
  416aea:	in     eax,dx
  416aeb:	pop    ebx
  416aec:	in     eax,0xb2
  416aee:	cs sbb ah,cl
  416af1:	jp     0x416afc
  416af3:	mov    ds:0x6954218c,eax
  416af8:	es cmp ebx,ebp
  416afb:	outs   dx,BYTE PTR ds:[esi]
  416afc:	cs jecxz 0x416ab7
  416aff:	sbb    edi,DWORD PTR [ebx+0x39]
  416b02:	lods   al,BYTE PTR ds:[esi]
  416b03:	push   ebp
  416b04:	mov    esp,0xdb86c5fa
  416b09:	mov    DWORD PTR [ebx+ebp*1],esi
  416b0c:	dec    esi
  416b0d:	rol    BYTE PTR [ebp-0x4b],0x9e
  416b11:	push   ebp
  416b12:	int3   
  416b13:	push   eax
  416b14:	call   0xb8316349
  416b19:	arpl   WORD PTR [eax+0x21],sp
  416b1c:	jnp    0x416b09
  416b1e:	fstp   TBYTE PTR [esi]
  416b20:	add    eax,DWORD PTR [esi-0x1d]
  416b23:	loop   0x416ac5
  416b25:	cmp    BYTE PTR [esi+0x46b596bf],dl
  416b2b:	sbb    bl,cl
  416b2d:	cli    
  416b2e:	data16 div dh
  416b31:	xchg   ebx,eax
  416b32:	sbb    eax,0xab4bada3
  416b37:	mov    ebx,0xc596761e
  416b3c:	add    eax,0x669bb195
  416b41:	push   ss
  416b42:	dec    eax
  416b43:	mov    WORD PTR [edi],?
  416b45:	xor    eax,0xa3f1cbff
  416b4a:	fisub  DWORD PTR ds:0xfa46204b
  416b50:	mov    esi,0xc3318b0b
  416b55:	and    al,BYTE PTR [ebp+0x2bfd86e5]
  416b5b:	and    edx,esi
  416b5d:	js     0x416b49
  416b5f:	and    esp,DWORD PTR [esi]
  416b61:	into   
  416b62:	or     DWORD PTR [edx-0xb],edx
  416b65:	fistp  WORD PTR [edx]
  416b67:	or     ebp,DWORD PTR [edx]
  416b69:	mov    ch,0x83
  416b6b:	sbb    bh,dl
  416b6d:	outs   dx,DWORD PTR ds:[esi]
  416b6e:	data16 fld TBYTE PTR ss:[ebx-0x393d63b]
  416b76:	push   es
  416b77:	pop    edi
  416b78:	jmp    0xa9b5:0xc76cbbc
  416b7f:	daa    
  416b80:	lods   al,BYTE PTR ds:[esi]
  416b81:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b83:	dec    esp
  416b84:	cwde   
  416b85:	mov    ebx,0xfe328758
  416b8a:	lds    ebp,FWORD PTR ds:0x7cd966a0
  416b90:	(bad)  
  416b91:	push   0x30
  416b93:	(bad)  
  416b95:	push   edx
  416b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b97:	mov    eax,ds:0x68007500
  416b9c:	mov    eax,0x672da543
  416ba1:	mov    ebx,0xcba67168
  416ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba7:	cmp    BYTE PTR [esi],ch
  416ba9:	xlat   BYTE PTR ds:[ebx]
  416baa:	mov    esp,0xe0b54dc4
  416baf:	das    
  416bb0:	cli    
  416bb1:	(bad)  
  416bb2:	sub    DWORD PTR [esi+0x48c5c651],eax
  416bb8:	mov    dh,0xa7
  416bba:	mov    BYTE PTR [ebp-0x16],al
  416bbd:	enter  0xc0f3,0x2e
  416bc1:	mov    ch,0xac
  416bc3:	in     eax,0x3a
  416bc5:	jmp    0x416c12
  416bc7:	dec    edi
  416bc8:	cli    
  416bc9:	sub    al,0x53
  416bcb:	popa   
  416bcc:	and    eax,0x14bf85aa
  416bd1:	neg    DWORD PTR [esi-0x4dd7e993]
  416bd7:	dec    ebx
  416bd8:	jns    0x416c0f
  416bda:	push   ebx
  416bdb:	gs pop ebp
  416bdd:	ror    DWORD PTR [ebx+0x4605a057],1
  416be3:	lea    edi,[esi]
  416be5:	inc    ecx
  416be6:	xrelease mov DWORD PTR [ebx],ebp
  416be9:	add    ah,BYTE PTR [esp+edi*4-0x50]
  416bed:	fs push ss
  416bef:	and    esp,DWORD PTR [edx]
  416bf1:	mov    eax,ds:0x5126888f
  416bf6:	push   esp
  416bf7:	cwde   
  416bf8:	nop
  416bf9:	jb     0x416b9a
  416bfb:	sub    bh,BYTE PTR [ebp+0x35]
  416bfe:	dec    edx
  416bff:	(bad)  
  416c00:	jno    0x416bcb
  416c02:	pop    esi
  416c03:	adc    eax,DWORD PTR [edx-0x1]
  416c06:	inc    ebp
  416c07:	repnz xchg eax,esp
  416c0a:	sti    
  416c0b:	lds    esi,FWORD PTR [ecx-0x4f36e09f]
  416c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c12:	cli    
  416c13:	and    bl,dl
  416c15:	adc    ebp,DWORD PTR fs:[ebx-0x7a]
  416c19:	inc    ecx
  416c1a:	dec    esp
  416c1b:	pop    es
  416c1c:	call   0xc9f1:0x4922af4d
  416c23:	(bad)  
  416c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c25:	xor    eax,0x2bc8590c
  416c2a:	dec    ecx
  416c2b:	dec    eax
  416c2c:	push   ebx
  416c2d:	adc    al,0xbf
  416c2f:	bnd jmp 0x2fbac657
  416c35:	popf   
  416c36:	push   eax
  416c37:	rol    DWORD PTR [ebp+esi*1+0x78fe3b20],cl
  416c3e:	xchg   edi,eax
  416c3f:	jg     0x416c63
  416c41:	pusha  
  416c42:	or     DWORD PTR [esp+esi*4],esi
  416c45:	mov    bh,0x84
  416c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c49:	mov    bl,0x4d
  416c4b:	stc    
  416c4c:	fld    DWORD PTR [ecx+0x70866b84]
  416c52:	nop
  416c53:	inc    esi
  416c54:	sub    al,0xaf
  416c56:	xchg   esp,eax
  416c57:	pop    ecx
  416c58:	pop    esi
  416c59:	fcomp  DWORD PTR [edx-0x454bd9c8]
  416c5f:	pop    edx
  416c60:	jp     0x416cdc
  416c62:	and    edi,DWORD PTR [esi]
  416c64:	cmp    DWORD PTR ds:0x93cf16d3,esi
  416c6a:	call   0xc6501d92
  416c6f:	adc    BYTE PTR cs:[edi+ecx*4-0x5f],ch
  416c74:	dec    esp
  416c75:	hlt    
  416c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c77:	fisubr WORD PTR [eax-0x19625063]
  416c7d:	loopne 0x416c86
  416c7f:	inc    ecx
  416c80:	clc    
  416c81:	fadd   DWORD PTR [ebp+0x34]
  416c84:	jo     0x416c97
  416c86:	loope  0x416cdb
  416c88:	cli    
  416c89:	loop   0x416cbc
  416c8b:	es jp  0x416ca1
  416c8e:	retf   0xc11f
  416c91:	dec    ecx
  416c92:	push   ss
  416c93:	pop    ds
  416c94:	adc    DWORD PTR [eax-0x17],ebx
  416c97:	repnz out dx,ax
  416c9a:	inc    ebp
  416c9b:	mov    edx,0x7f484ba9
  416ca0:	adc    eax,0x16fe417d
  416ca5:	mov    al,0xdb
  416ca7:	and    dl,BYTE PTR [ebp+0x3f]
  416caa:	out    dx,al
  416cab:	xor    DWORD PTR [esi],eax
  416cad:	js     0x416c5d
  416caf:	pop    ss
  416cb0:	and    eax,0x66e174e0
  416cb5:	push   ds
  416cb6:	mov    ch,0x91
  416cb8:	stos   BYTE PTR es:[edi],al
  416cb9:	mov    cl,0xd3
  416cbb:	in     eax,dx
  416cbc:	mov    ss,ebp
  416cbe:	or     ah,BYTE PTR [esp+ecx*4]
  416cc1:	fmul   QWORD PTR [eax]
  416cc3:	xchg   ecx,eax
  416cc4:	es dec ebp
  416cc6:	imul   ecx,DWORD PTR [ebx-0x5b],0x93b8cbfd
  416ccd:	xor    eax,0xbd515e3d
  416cd2:	outs   dx,DWORD PTR ds:[esi]
  416cd3:	outs   dx,DWORD PTR ds:[esi]
  416cd4:	ins    BYTE PTR es:[edi],dx
  416cd5:	jle    0x416d19
  416cd7:	mov    ds,WORD PTR [ecx]
  416cd9:	mov    ebp,0x5c46a220
  416cde:	mov    ebx,0x29b1da39
  416ce3:	int3   
  416ce4:	fbld   TBYTE PTR [esi+0x6856267f]
  416cea:	ffreep st(2)
  416cec:	(bad)  
  416cee:	inc    ebp
  416cef:	sahf   
  416cf0:	dec    eax
  416cf1:	lods   eax,DWORD PTR ds:[esi]
  416cf2:	mov    al,ds:0x27384635
  416cf7:	adc    DWORD PTR [ebx+0x18a304d4],ebx
  416cfd:	sbb    dh,bh
  416cff:	mov    eax,0x70d3ac0a
  416d04:	imul   esp
  416d06:	push   ds
  416d07:	and    ecx,ecx
  416d09:	mov    ecx,0xb7e37159
  416d0e:	xor    al,BYTE PTR [edi]
  416d10:	aas    
  416d11:	and    esi,DWORD PTR [edi]
  416d13:	jp     0x416d67
  416d15:	push   ebx
  416d16:	pop    es
  416d17:	mov    ds:0xe9461bf8,eax
  416d1c:	xor    dh,dl
  416d1e:	adc    al,BYTE PTR [edx-0x5e]
  416d21:	test   al,0xb3
  416d23:	xor    eax,0x22e6f42f
  416d28:	pop    ebx
  416d29:	sub    ebp,DWORD PTR [ecx+0x3e]
  416d2c:	mov    bl,0xaa
  416d2e:	inc    ebp
  416d2f:	arpl   WORD PTR [ecx+0x4fad00a3],bx
  416d35:	add    al,0xce
  416d37:	cdq    
  416d38:	js     0x416cef
  416d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d3b:	call   0x13c1:0xa47871ed
  416d42:	les    ebp,FWORD PTR [ecx+0x7]
  416d45:	test   al,0x95
  416d47:	xor    ah,ch
  416d49:	ja     0x416d3b
  416d4b:	xor    BYTE PTR [ecx+0x35],bh
  416d4e:	inc    ecx
  416d4f:	dec    edi
  416d50:	test   eax,0x5e42ee82
  416d55:	jmp    0x416d9a
  416d57:	aam    0x4e
  416d59:	and    al,0x3b
  416d5b:	mov    dh,al
  416d5d:	mov    edx,0x35547251
  416d62:	icebp  
  416d63:	nop
  416d64:	push   es
  416d65:	push   esi
  416d66:	shl    BYTE PTR [edi-0x4b],0xd9
  416d6a:	inc    ebp
  416d6b:	and    dh,BYTE PTR [ebx-0x7b]
  416d6e:	jbe    0x416db8
  416d70:	inc    ebx
  416d71:	xchg   ecx,eax
  416d72:	scas   eax,DWORD PTR es:[edi]
  416d73:	jmp    0x8687:0xa2fcb4d0
  416d7a:	jae    0x416def
  416d7c:	xor    BYTE PTR es:[eax+0x67],ch
  416d80:	mov    ecx,0xd939ce6d
  416d85:	xor    DWORD PTR [edi-0x2c2d4728],edi
  416d8b:	ret    0x5528
  416d8e:	mov    al,ds:0x462edba0
  416d93:	outs   dx,BYTE PTR ds:[esi]
  416d94:	and    al,0x3f
  416d96:	adc    eax,0xb16c728a
  416d9b:	jmp    0x416dce
  416d9d:	xchg   ebp,eax
  416d9e:	inc    edx
  416d9f:	mov    ds:0xe1a865fd,eax
  416da4:	or     al,dh
  416da6:	sub    al,0x60
  416da8:	dec    ebp
  416da9:	aaa    
  416daa:	loop   0x416d4e
  416dac:	bound  eax,QWORD PTR [esi+0x72]
  416daf:	add    al,0x6c
  416db1:	or     esi,DWORD PTR [edi+0x22]
  416db4:	mov    DWORD PTR [edi-0x1501f71f],esp
  416dba:	xor    ch,BYTE PTR ds:0xbc4619ed
  416dc0:	push   edx
  416dc1:	xor    DWORD PTR [esi+0x18b56b29],0xfffffff0
  416dc8:	leave  
  416dc9:	mov    dl,BYTE PTR [edx+0xb42b699]
  416dcf:	lds    esi,FWORD PTR [ebx]
  416dd1:	jge    0x416d96
  416dd3:	mov    eax,0x90257ca6
  416dd8:	dec    esp
  416dd9:	or     eax,0x34fe1dc2
  416dde:	clc    
  416ddf:	sbb    cl,BYTE PTR [ecx]
  416de1:	jb     0x416dc4
  416de3:	addr16 jae 0x416db9
  416de6:	cmpps  xmm1,XMMWORD PTR [esi+0x24],0xc6
  416deb:	arpl   WORD PTR [ecx-0x5c],si
  416dee:	sub    DWORD PTR [ebx+0x1a],ebp
  416df1:	mov    ecx,gs
  416df3:	(bad)  [ebx-0x14]
  416df6:	adc    al,0xa3
  416df8:	jne    0x416d9c
  416dfa:	cs mov dl,0x26
  416dfd:	inc    ebx
  416dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dff:	fwait
  416e00:	fwait
  416e01:	mov    edx,0x34d900f6
  416e06:	push   cs
  416e07:	xchg   esp,eax
  416e08:	mov    DWORD PTR [ebp-0x6abd7415],eax
  416e0e:	xlat   BYTE PTR ds:[ebx]
  416e0f:	aas    
  416e10:	dec    edi
  416e11:	push   ss
  416e12:	push   ds
  416e13:	add    BYTE PTR ds:0xd34b4600,ch
  416e19:	and    eax,DWORD PTR [eax-0x22]
  416e1c:	inc    ebx
  416e1d:	mov    eax,ds:0x4c53b32b
  416e22:	sbb    eax,0x846f63a3
  416e27:	icebp  
  416e28:	es dec esi
  416e2a:	shl    DWORD PTR [edx+0x51fbbaa4],1
  416e30:	pusha  
  416e31:	mov    ch,0x12
  416e33:	aad    0xb8
  416e35:	dec    DWORD PTR [ecx+edi*4+0x6f]
  416e39:	pop    edx
  416e3a:	cmp    dh,dh
  416e3c:	xchg   esi,eax
  416e3d:	leave  
  416e3e:	lds    ecx,FWORD PTR [ecx-0x1ebe4dd1]
  416e44:	stos   BYTE PTR es:[edi],al
  416e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e47:	xor    al,0x9
  416e49:	hlt    
  416e4a:	add    ah,ch
  416e4c:	push   cs
  416e4d:	sub    al,0x5e
  416e4f:	aad    0xa
  416e51:	sub    DWORD PTR [esi+0xd],eax
  416e54:	pop    ebp
  416e55:	jnp    0x416e33
  416e57:	in     al,dx
  416e58:	sbb    ebp,edx
  416e5a:	xlat   BYTE PTR ds:[ebx]
  416e5b:	cmp    edx,ecx
  416e5d:	rol    DWORD PTR [ebx],1
  416e5f:	and    ebx,ecx
  416e61:	mov    ecx,0x1e170f70
  416e66:	inc    edi
  416e67:	jbe    0x4e35151
  416e6d:	push   ss
  416e6e:	out    dx,al
  416e6f:	ins    DWORD PTR es:[edi],dx
  416e70:	mov    ah,0x3e
  416e72:	or     BYTE PTR [ebx-0x2a4674d4],ah
  416e78:	es inc eax
  416e7a:	jp     0x416ef4
  416e7c:	jo     0x416e9e
  416e7e:	inc    eax
  416e7f:	inc    ebx
  416e80:	xor    ebp,DWORD PTR [edi+edx*1+0x40354198]
  416e87:	add    eax,0xf44c1c1b
  416e8c:	mov    esp,esi
  416e8e:	mov    ?,WORD PTR [edi-0x5d234680]
  416e94:	or     eax,ecx
  416e96:	out    dx,al
  416e97:	and    al,0x4c
  416e99:	popa   
  416e9a:	mov    al,0x1d
  416e9c:	out    0xbc,al
  416e9e:	out    0x66,al
  416ea0:	(bad)  
  416ea2:	jns    0x416ecc
  416ea4:	lahf   
  416ea5:	in     al,0x41
  416ea7:	pop    DWORD PTR [esi-0x45181bcb]
  416ead:	push   ecx
  416eae:	outs   dx,DWORD PTR ds:[esi]
  416eaf:	sbb    eax,edx
  416eb1:	push   esi
  416eb2:	leave  
  416eb3:	and    ch,BYTE PTR [ebx]
  416eb5:	jle    0x416ecc
  416eb7:	pusha  
  416eb8:	jae    0x416e71
  416eba:	inc    ebp
  416ebb:	sub    ebx,DWORD PTR [edx+0x2f828b68]
  416ec1:	push   edi
  416ec2:	test   al,0x80
  416ec4:	pop    ebx
  416ec5:	scas   eax,DWORD PTR es:[edi]
  416ec6:	les    eax,FWORD PTR ds:0x7b9bcc71
  416ecc:	leave  
  416ecd:	jne    0x416f24
  416ecf:	xor    DWORD PTR [eax+edi*1+0x7e21a844],esp
  416ed6:	arpl   ax,cx
  416ed8:	not    ebx
  416eda:	push   eax
  416edb:	fistp  QWORD PTR [eax+ecx*1]
  416ede:	jmp    0x416f02
  416ee0:	cmp    bh,bh
  416ee2:	or     dh,BYTE PTR [ecx-0x76ad7b5a]
  416ee8:	lds    ebp,FWORD PTR [edx+0x36712435]
  416eee:	mov    eax,0x301528ef
  416ef3:	and    ecx,DWORD PTR [ebp-0x594658b5]
  416ef9:	pop    ss
  416efa:	xchg   ebx,eax
  416efb:	xchg   DWORD PTR [edi],esp
  416efd:	or     ebp,esp
  416eff:	lock imul esi,DWORD PTR ds:0xfce2224c,0x9c953d98
  416f0a:	dec    esi
  416f0b:	xchg   DWORD PTR [edx-0x6],esi
  416f0e:	inc    ebp
  416f0f:	or     ebx,eax
  416f11:	xchg   ebp,eax
  416f12:	mul    BYTE PTR [edi]
  416f14:	ret    0x7f6c
  416f17:	sub    bl,BYTE PTR [ebx]
  416f19:	outs   dx,BYTE PTR ds:[esi]
  416f1a:	mov    ch,0x93
  416f1c:	jae    0x416eb0
  416f1e:	fldenv [edx-0x1ce64152]
  416f24:	sub    al,0xb5
  416f26:	test   dh,dl
  416f28:	(bad)  
  416f29:	loopne 0x416f85
  416f2b:	adc    eax,0xafc1b591
  416f30:	adc    ebp,DWORD PTR ds:0xfd4b6be0
  416f36:	mov    bh,0xdd
  416f38:	js     0x416f80
  416f3a:	inc    ebp
  416f3b:	fwait
  416f3c:	jle    0x416ed8
  416f3e:	int3   
  416f3f:	repz inc ebp
  416f41:	push   edi
  416f42:	or     ebp,DWORD PTR ds:0x9c03b98e
  416f48:	push   esi
  416f49:	cli    
  416f4a:	jnp    0x416fca
  416f4c:	les    ax,DWORD PTR gs:[esi+ebp*2+0x49d09c2e]
  416f55:	xor    eax,0xb5f709a1
  416f5a:	js     0x416f14
  416f5c:	and    eax,0x7d523b
  416f62:	out    0x60,al
  416f64:	(bad)  
  416f65:	retf   0x8c27
  416f68:	retf   
  416f69:	mov    ah,0x33
  416f6b:	arpl   WORD PTR [ebp+edx*4-0xc44b8a3],dx
  416f72:	sub    ah,BYTE PTR [ebx]
  416f74:	xor    eax,0xb0a85452
  416f79:	loopne 0x416f40
  416f7b:	jg     0x416f41
  416f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7e:	inc    ebp
  416f7f:	stc    
  416f80:	adc    al,0x22
  416f82:	push   esi
  416f83:	or     eax,0x23503715
  416f88:	fld    TBYTE PTR [edx+0xa]
  416f8b:	mov    fs,WORD PTR [edi+ebp*1-0x20b52db]
  416f92:	aam    0xb9
  416f94:	fdiv   DWORD PTR [edi+0x4cba5ada]
  416f9a:	inc    esi
  416f9b:	and    edx,DWORD PTR [ebp+0x3f]
  416f9e:	cmp    eax,0xfb1da653
  416fa3:	mov    BYTE PTR [eax],cl
  416fa5:	data16 jb 0x417023
  416fa8:	fdiv   QWORD PTR [ecx]
  416faa:	gs (bad) 
  416fac:	and    DWORD PTR [edi],eax
  416fae:	and    edx,esi
  416fb0:	aas    
  416fb1:	mov    esp,0x3b26e2f2
  416fb6:	loope  0x416f57
  416fb8:	inc    eax
  416fb9:	outs   dx,DWORD PTR ds:[esi]
  416fba:	push   ds
  416fbb:	xor    DWORD PTR [edi+edx*4-0xa],esi
  416fbf:	sub    ah,BYTE PTR [ebp+0x25]
  416fc2:	gs aad 0x3
  416fc5:	fcmovu st,st(3)
  416fc7:	cmp    ecx,DWORD PTR [edx+0x22]
  416fca:	jne    0x417003
  416fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fcd:	inc    esp
  416fce:	mov    ebp,0x95983467
  416fd3:	cdq    
  416fd4:	out    0xb3,al
  416fd6:	adc    esp,DWORD PTR [edi-0x4c]
  416fd9:	xor    BYTE PTR [ebx-0x2],0xe2
  416fdd:	xor    esi,DWORD PTR [eax+0x47]
  416fe0:	and    BYTE PTR [ecx+eiz*2-0x5391b255],ah
  416fe7:	pop    esi
  416fe8:	ror    WORD PTR [ebp+0x291c094],1
  416fef:	and    DWORD PTR [eax+0x6],eax
  416ff2:	into   
  416ff3:	xchg   BYTE PTR [edx+0x13e67ab5],ah
  416ff9:	push   cs
  416ffa:	cmp    ebp,DWORD PTR ds:0x4145e650
  417000:	test   BYTE PTR [ebp-0x58],ah
  417003:	jne    0x416fa6
  417005:	cdq    
  417006:	popa   
  417007:	xchg   ecx,eax
  417008:	dec    eax
  417009:	push   0x3d
  41700b:	mov    ds:0x24efefb4,eax
  417010:	xor    bl,BYTE PTR [eax]
  417012:	inc    esi
  417013:	cmp    eax,0x524fff18
  417018:	ins    BYTE PTR es:[edi],dx
  417019:	add    DWORD PTR [ecx],esp
  41701b:	lea    ebp,[ecx]
  41701d:	pop    eax
  41701e:	clc    
  41701f:	and    al,BYTE PTR [ecx+0x36]
  417022:	ins    DWORD PTR es:[edi],dx
  417023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417024:	xchg   edx,eax
  417025:	scas   al,BYTE PTR es:[edi]
  417026:	cmp    dh,BYTE PTR [edi+edx*1-0x58]
  41702a:	aaa    
  41702b:	cmp    al,BYTE PTR ds:0xfdf834fb
  417031:	adc    dl,cl
  417033:	jns    0x41706e
  417035:	jns    0x417001
  417037:	pop    ds
  417038:	aaa    
  417039:	ficom  WORD PTR [eax+0x23]
  41703c:	add    ah,BYTE PTR ds:0xe5262fba
  417042:	sbb    ecx,DWORD PTR [ebp-0x2]
  417045:	inc    ebx
  417046:	pop    esp
  417047:	ins    DWORD PTR es:[edi],dx
  417048:	(bad)  
  417049:	mov    ah,0xd6
  41704b:	mov    ch,0x12
  41704d:	mov    WORD PTR [ebp+0x4b],ss
  417050:	push   edi
  417051:	dec    ebp
  417052:	inc    eax
  417053:	push   ebp
  417054:	mov    al,0x1f
  417056:	(bad)  
  417057:	das    
  417058:	(bad)  
  417059:	jae    0x41708f
  41705b:	push   ebx
  41705c:	nop
  41705d:	jl     0x41704e
  41705f:	inc    eax
  417060:	push   es
  417061:	and    eax,0x2343a2eb
  417066:	inc    ecx
  417067:	mov    gs,eax
  417069:	std    
  41706a:	vhaddps xmm3,xmm4,xmm6
  41706e:	jmp    0xffacf24e
  417073:	cld    
  417074:	pop    eax
  417075:	add    al,0xaf
  417077:	sahf   
  417078:	and    bl,BYTE PTR [eax]
  41707a:	cmp    DWORD PTR [edi],ebx
  41707c:	in     al,0x52
  41707e:	test   BYTE PTR ss:[ebx+0xf433033],al
  417085:	mov    ds:0x9f266cbe,al
  41708a:	pushf  
  41708b:	pop    ecx
  41708c:	cmp    esp,DWORD PTR [ebx]
  41708e:	sbb    esi,DWORD PTR [eax]
  417090:	xor    eax,0x2223155b
  417095:	ret    0x3f54
  417098:	out    0xe1,eax
  41709a:	ss and al,cl
  41709d:	mov    eax,0x4bdda965
  4170a2:	add    esi,DWORD PTR [ebp-0x893ea3c]
  4170a8:	jmp    0xe6eb93c2
  4170ad:	or     ah,cl
  4170af:	cmp    ah,al
  4170b1:	sahf   
  4170b2:	es jp  0x4170db
  4170b5:	or     eax,0x2c243e2f
  4170ba:	into   
  4170bb:	dec    esi
  4170bc:	xchg   ecx,eax
  4170bd:	xor    eax,0xe1ab02f9
  4170c2:	cmp    DWORD PTR [esi],ecx
  4170c4:	xor    al,0x66
  4170c6:	push   es
  4170c7:	sub    al,0x1f
  4170c9:	fadd   DWORD PTR [eax]
  4170cb:	arpl   WORD PTR [ebp-0x7b],bp
  4170ce:	cs and esp,edx
  4170d1:	push   eax
  4170d2:	pusha  
  4170d3:	or     BYTE PTR [ecx-0x4b],0x53
  4170d7:	sub    ebx,DWORD PTR [esi-0x7bf6a02e]
  4170dd:	lahf   
  4170de:	inc    edx
  4170df:	out    dx,eax
  4170e0:	int3   
  4170e1:	adc    BYTE PTR [edx+ebp*4-0x772561c2],dl
  4170e8:	push   eax
  4170e9:	xor    eax,0x1dad69fd
  4170ee:	ja     0x417117
  4170f0:	stos   DWORD PTR es:[edi],eax
  4170f1:	and    al,0x46
  4170f3:	dec    ebx
  4170f4:	test   cl,bh
  4170f6:	and    bl,0x6f
  4170f9:	sub    eax,0xbd0ff4fb
  4170fe:	inc    edi
  4170ff:	mov    ds:0x5d453f74,eax
  417104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417105:	adc    BYTE PTR [ebx-0x18df159a],dl
  41710b:	push   ss
  41710c:	lahf   
  41710d:	mov    ch,0x5d
  41710f:	xchg   esi,eax
  417110:	mov    bl,BYTE PTR [edx]
  417112:	mov    BYTE PTR [ecx],bl
  417114:	js     0x41712a
  417116:	(bad)  
  417117:	lahf   
  417118:	mov    edx,ebx
  41711a:	xchg   ebp,eax
  41711b:	adc    eax,0x1152c6ab
  417120:	xchg   edi,eax
  417121:	jge    0x417156
  417123:	and    ebp,DWORD PTR [esi]
  417125:	repz js 0x41714d
  417128:	es mov ecx,0xd716528a
  41712e:	in     al,0xf
  417130:	mov    edi,0x2a5122b3
  417135:	lock loopne 0x4171a5
  417138:	mov    esi,0xa66a8e1c
  41713d:	sbb    ch,BYTE PTR [eax+0x6e]
  417140:	addr16 mov ds:0xad35,eax
  417144:	dec    esi
  417145:	mov    ch,0xb7
  417147:	js     0x41715f
  417149:	aad    0x2b
  41714b:	test   DWORD PTR [ecx],0x79134633
  417151:	mov    eax,0x6cf73cc9
  417156:	cmp    DWORD PTR [edx],0xffffff90
  417159:	mov    al,ds:0xaa7c231a
  41715e:	out    dx,al
  41715f:	inc    ecx
  417160:	es stos BYTE PTR es:[edi],al
  417162:	add    eax,0x27fe8f37
  417167:	cmp    edx,DWORD PTR [edi+eiz*4]
  41716a:	sbb    edx,DWORD PTR [ebx+0x46]
  41716d:	mov    ch,0x16
  41716f:	dec    ecx
  417170:	loop   0x417111
  417172:	xchg   BYTE PTR [ebx],dh
  417174:	xchg   edi,eax
  417175:	push   ebx
  417176:	sub    BYTE PTR [ecx+0x1be08b82],bl
  41717c:	out    dx,al
  41717d:	call   0xb5a3c41e
  417182:	fcmovnbe st,st(0)
  417184:	sub    dl,bh
  417186:	enter  0x79b6,0x6
  41718a:	cmp    edi,DWORD PTR [ebx]
  41718c:	mov    dl,0xf7
  41718e:	mov    edx,0x48352695
  417193:	pop    edx
  417194:	loope  0x41714e
  417196:	jno    0x417136
  417198:	and    al,0x3e
  41719a:	jmp    0x41713e
  41719c:	add    dh,ch
  41719e:	or     ecx,DWORD PTR [ebx+0x6fb70e69]
  4171a4:	ds call 0xaf8e:0x4ebedc4
  4171ac:	pop    esp
  4171ad:	mov    ecx,0x80abdf1f
  4171b2:	pop    ecx
  4171b3:	mov    ds:0xb5b77be8,eax
  4171b8:	xchg   edi,eax
  4171b9:	jmp    0x5467:0xb76689fe
  4171c0:	jnp    0x41715c
  4171c2:	out    dx,eax
  4171c3:	iret   
  4171c4:	les    eax,FWORD PTR [esi+0x51]
  4171c7:	mov    ds:0xbd8dbfc5,eax
  4171cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171cd:	mov    edx,0xb7e22d03
  4171d2:	mov    eax,ds:0xf8353939
  4171d7:	add    dl,BYTE PTR [ecx-0x50]
  4171da:	call   0x464dd75b
  4171df:	lods   al,BYTE PTR ds:[esi]
  4171e0:	pop    esi
  4171e1:	cld    
  4171e2:	mov    BYTE PTR [eax-0x6ed85179],cl
  4171e8:	stos   BYTE PTR es:[edi],al
  4171e9:	loope  0x41720b
  4171eb:	and    ebx,edx
  4171ed:	dec    esp
  4171ee:	pop    eax
  4171ef:	imul   esp,DWORD PTR [esi],0x5d
  4171f2:	stos   DWORD PTR es:[edi],eax
  4171f3:	ja     0x41725a
  4171f5:	mov    edx,0xb46fe360
  4171fa:	jae    0x41723d
  4171fc:	xor    al,0xab
  4171fe:	test   BYTE PTR [eax],ah
  417200:	callw  0xa500
  417204:	mov    esp,0xa870065f
  417209:	sub    eax,0x49168946
  41720e:	cli    
  41720f:	inc    esp
  417210:	push   edx
  417211:	(bad)  
  417212:	iret   
  417213:	jb     0x41719c
  417215:	mov    esi,0x93061ba3
  41721a:	pop    ds
  41721b:	dec    esp
  41721c:	xchg   ecx,eax
  41721d:	cwde   
  41721e:	inc    esp
  41721f:	mov    ah,ah
  417221:	jo     0x41725e
  417223:	stos   BYTE PTR es:[edi],al
  417224:	dec    ebx
  417225:	test   DWORD PTR gs:[edx],esp
  417228:	daa    
  417229:	xor    eax,0x8c483d5d
  41722e:	mov    dh,0x65
  417230:	xor    eax,0x554a2650
  417235:	cmc    
  417236:	mov    dl,0x26
  417238:	neg    DWORD PTR [eax-0x63]
  41723b:	popa   
  41723c:	dec    ecx
  41723d:	mov    ch,0xd6
  41723f:	ror    BYTE PTR ss:[eax-0x1f55e1d3],cl
  417246:	pop    es
  417247:	and    DWORD PTR ds:0x26733ba7,ebx
  41724d:	out    dx,al
  41724e:	fwait
  41724f:	cmp    ah,ah
  417251:	or     esp,DWORD PTR [edi+0x1]
  417254:	pop    esp
  417255:	mov    ch,0x25
  417257:	stos   BYTE PTR es:[edi],al
  417258:	icebp  
  417259:	popf   
  41725a:	or     DWORD PTR [ebx],ecx
  41725c:	imul   esp,DWORD PTR [eax],0x46
  41725f:	fwait
  417260:	dec    esi
  417261:	data16 cmp BYTE PTR [esi+0x38],ah
  417265:	mov    edx,gs
  417267:	cwde   
  417268:	(bad)  
  417269:	mov    dh,0x85
  41726b:	xor    ecx,DWORD PTR [edi+0x63]
  41726e:	jmp    0x417236
  417270:	mov    edi,0xf78945e4
  417275:	aam    0x13
  417277:	mov    ebp,DWORD PTR [ebp-0x457af43d]
  41727d:	jecxz  0x4172c4
  41727f:	jg     0x41721f
  417281:	cli    
  417282:	or     bl,0xd7
  417285:	loope  0x41724c
  417287:	mov    eax,ds:0x2bdc6d8
  41728c:	call   0x1f8678f4
  417291:	lea    edx,[edi-0x17c51e1]
  417297:	jg     0x4172e3
  417299:	fucomi st,st(1)
  41729b:	mov    DWORD PTR [edi+0x667978fe],edx
  4172a1:	and    BYTE PTR [ebp+0x6d],ch
  4172a4:	ins    DWORD PTR es:[edi],dx
  4172a5:	sbb    edx,DWORD PTR [edx]
  4172a7:	aas    
  4172a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a9:	in     al,0x5
  4172ab:	xchg   DWORD PTR [ebp-0x1fdab8a],ebx
  4172b1:	xor    al,dh
  4172b3:	cli    
  4172b4:	icebp  
  4172b5:	or     ecx,ecx
  4172b7:	or     al,0x20
  4172b9:	scas   al,BYTE PTR es:[edi]
  4172ba:	or     al,0x8b
  4172bc:	mov    BYTE PTR [esi],dh
  4172be:	leave  
  4172bf:	fwait
  4172c0:	push   cs
  4172c1:	out    dx,al
  4172c2:	rol    BYTE PTR [esi],cl
  4172c4:	pop    DWORD PTR [edi]
  4172c6:	(bad)  
  4172c7:	push   0xc103dedf
  4172cc:	push   edi
  4172cd:	test   al,0x12
  4172cf:	fstp   TBYTE PTR [ecx]
  4172d1:	cmp    al,BYTE PTR [edx]
  4172d3:	and    esi,ebp
  4172d5:	ret    
  4172d6:	xor    eax,0xeab0227f
  4172db:	int3   
  4172dc:	outs   dx,BYTE PTR ds:[esi]
  4172dd:	xlat   BYTE PTR ds:[ebx]
  4172de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172df:	cmp    al,0xd3
  4172e1:	adc    bh,BYTE PTR [eax+0x26]
  4172e4:	stos   DWORD PTR es:[edi],eax
  4172e5:	jle    0x417333
  4172e7:	and    ecx,DWORD PTR [edx-0x59645081]
  4172ed:	pop    edx
  4172ee:	pop    es
  4172ef:	dec    esp
  4172f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f1:	push   0xffffff86
  4172f3:	adc    dl,BYTE PTR [edx-0x4b]
  4172f6:	lea    esi,[ebx+0x66]
  4172f9:	adc    BYTE PTR [ebx],al
  4172fb:	add    BYTE PTR [edx-0x78],0x42
  4172ff:	je     0x4172be
  417301:	std    
  417302:	pushf  
  417303:	int    0x86
  417305:	pop    esp
  417306:	pusha  
  417307:	xor    eax,0x988ca5fe
  41730c:	retf   0x1436
  41730f:	shr    BYTE PTR [ebp+0xe],0xe2
  417313:	ja     0x4172ff
  417315:	sub    cl,dl
  417317:	pop    ecx
  417318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417319:	mov    BYTE PTR [esp+eax*4-0x3b2f2f42],al
  417320:	cmp    dh,BYTE PTR ds:0x923473
  417326:	call   0xabf4:0x453ed81d
  41732d:	(bad)
  417331:	add    ecx,DWORD PTR [edx-0x6a]
  417334:	jae    0x4172eb
  417336:	jle    0x4172ef
  417338:	inc    ebx
  417339:	inc    ecx
  41733a:	push   ds
  41733b:	cwde   
  41733c:	jmp    0xb0c0b973
  417341:	loope  0x4173c2
  417343:	outs   dx,BYTE PTR ds:[esi]
  417344:	cmp    ebp,0xf
  417347:	(bad)  
  417348:	jp     0x417341
  41734a:	add    DWORD PTR [ebx],esp
  41734c:	xlat   BYTE PTR ds:[ebx]
  41734d:	pop    eax
  41734e:	test   eax,0xe3da6fa
  417353:	inc    eax
  417354:	fwait
  417355:	and    BYTE PTR [ebp+0x17],0x8c
  417359:	sahf   
  41735a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41735b:	into   
  41735c:	in     al,dx
  41735d:	mov    cl,0xcc
  41735f:	les    esi,FWORD PTR [ebx]
  417361:	cmp    eax,0xc95ae340
  417366:	inc    ebp
  417367:	pop    esp
  417368:	inc    edx
  417369:	mov    ds:0x63f73d24,al
  41736e:	test   DWORD PTR [edi],esi
  417370:	push   es
  417371:	(bad)  
  417372:	pop    ss
  417373:	mov    ds:0x51287992,eax
  417378:	xchg   al,ah
  41737a:	ins    DWORD PTR es:[edi],dx
  41737b:	adc    BYTE PTR ds:0xd505b335,dh
  417381:	pop    es
  417382:	retf   
  417383:	mov    esi,0xb3b69914
  417388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417389:	or     edx,DWORD PTR [ecx]
  41738b:	mov    ds:0xe7ec2f6a,al
  417390:	sub    eax,0xe57c45cc
  417395:	inc    eax
  417396:	jp     0x4173b7
  417398:	push   ds
  417399:	push   ebx
  41739a:	daa    
  41739b:	arpl   WORD PTR [ebx-0x4e],di
  41739e:	in     eax,0x22
  4173a0:	cmp    BYTE PTR [eax],al
  4173a2:	cmc    
  4173a3:	loope  0x41734b
  4173a5:	and    BYTE PTR ss:[edx+edx*1+0x52],dh
  4173aa:	adc    dh,BYTE PTR [ebx]
  4173ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ad:	mov    ch,0x46
  4173af:	or     DWORD PTR ds:[edi+0x2e89b4bd],edx
  4173b6:	(bad)  
  4173b7:	xor    ah,BYTE PTR [ecx+edx*4-0x6f]
  4173bb:	ins    DWORD PTR es:[edi],dx
  4173bc:	stos   BYTE PTR es:[edi],al
  4173bd:	outs   dx,BYTE PTR ds:[esi]
  4173be:	jbe    0x41743f
  4173c0:	mov    bh,0x4a
  4173c2:	fstp   QWORD PTR [ebx+0x3c102166]
  4173c8:	sub    BYTE PTR ds:[esi-0x45],al
  4173cc:	icebp  
  4173cd:	xlat   BYTE PTR ds:[ebx]
  4173ce:	ins    BYTE PTR es:[edi],dx
  4173cf:	call   0xb57258b5
  4173d4:	xor    al,0x35
  4173d6:	sub    ecx,0x7d
  4173d9:	mul    DWORD PTR [eax+0x4b]
  4173dc:	fwait
  4173dd:	add    eax,0x49261e6a
  4173e2:	mov    al,ds:0x733e7755
  4173e7:	xlat   BYTE PTR ds:[ebx]
  4173e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e9:	pop    ebp
  4173ea:	or     al,0xc9
  4173ec:	stos   DWORD PTR es:[edi],eax
  4173ed:	std    
  4173ee:	inc    ebp
  4173ef:	std    
  4173f0:	mov    al,0xf0
  4173f3:	cmp    al,0x73
  4173f5:	rol    BYTE PTR [ebp+0x51],cl
  4173f8:	push   ss
  4173f9:	into   
  4173fa:	sub    eax,0x918028e5
  4173ff:	bound  esi,QWORD PTR [eax-0x4b]
  417402:	fisub  DWORD PTR [ebp+0x33e6291d]
  417408:	std    
  417409:	mov    gs,WORD PTR [ecx]
  41740b:	add    al,0xb3
  41740d:	repnz sub edi,DWORD PTR [edx+0x45]
  417411:	daa    
  417412:	out    0xec,al
  417414:	mov    bl,0xbb
  417416:	pop    ss
  417417:	ret    
  417418:	push   0x159c3c11
  41741d:	retf   0xf39e
  417420:	imul   ecx,ecx,0xffffffe9
  417423:	cmp    esp,DWORD PTR [ebp+0xa2fb71e]
  417429:	adc    DWORD PTR [esp+ebp*4-0x36a65996],0x1ea5354e
  417434:	sub    dh,bl
  417436:	mov    dl,0x34
  417438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417439:	loopne 0x41743a
  41743b:	sub    BYTE PTR [esi+0x3eee8aa7],bl
  417441:	xor    eax,0xe6b046d6
  417446:	es push esp
  417448:	dec    eax
  417449:	ret    
  41744a:	lds    esi,FWORD PTR [eiz*4+0x163f7eca]
  417451:	mov    ds:0x42b71d91,eax
  417456:	add    BYTE PTR [ebx+0x7366dfb0],ah
  41745c:	and    al,BYTE PTR [ebp*1+0xdbb9fc5]
  417463:	nop
  417464:	sar    DWORD PTR [ebx+ebx*1],cl
  417467:	jl     0x41745c
  417469:	fs scas eax,DWORD PTR es:[edi]
  41746b:	cdq    
  41746c:	retf   
  41746d:	mov    bh,0xfe
  41746f:	and    dl,BYTE PTR [ecx-0xb83a28]
  417475:	lods   al,BYTE PTR ds:[esi]
  417476:	mov    esp,ebp
  417478:	xor    ebp,esp
  41747a:	cmp    al,0xe2
  41747c:	enter  0x8b18,0x22
  417480:	xor    eax,0xb2b72823
  417485:	iret   
  417486:	or     DWORD PTR [ebp-0x73b1db5a],esi
  41748c:	mov    ebx,0x99133439
  417491:	mov    DWORD PTR [eax+0x67dda2f1],edx
  417497:	lods   al,BYTE PTR ds:[esi]
  417498:	push   ebp
  417499:	in     eax,0xb0
  41749b:	xor    eax,DWORD PTR [ebp+0xd]
  41749e:	jp     0x417474
  4174a0:	es mov al,0xd8
  4174a3:	dec    ebx
  4174a4:	sub    BYTE PTR [eax+0x16bd9fef],0xde
  4174ab:	inc    ebp
  4174ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ad:	push   0xffffffc4
  4174af:	fwait
  4174b0:	jmp    0x417531
  4174b2:	mov    eax,ds:0x28d1a6eb
  4174b7:	outs   dx,DWORD PTR ds:[esi]
  4174b8:	cmp    eax,DWORD PTR ds:0x35713bba
  4174be:	xor    ecx,DWORD PTR ds:0x4f84cf2
  4174c4:	push   edx
  4174c5:	or     eax,0xe398b351
  4174ca:	loope  0x417528
  4174cc:	fsubr  QWORD PTR [ecx+0x7f]
  4174cf:	jle    0x4174dd
  4174d1:	sbb    al,0xe6
  4174d3:	xchg   ebx,eax
  4174d4:	dec    edx
  4174d5:	cwde   
  4174d6:	jge    0x41754d
  4174d8:	push   ecx
  4174d9:	xor    eax,0x6ba3af3c
  4174de:	cmp    DWORD PTR ds:0x3a45e5e0,0x29
  4174e5:	mov    BYTE PTR [eax+0x6ac86d05],0x3e
  4174ec:	push   ebp
  4174ed:	mov    dh,0xe9
  4174ef:	and    ch,BYTE PTR [edi]
  4174f1:	loopne 0x417522
  4174f3:	hlt    
  4174f4:	imul   esi,DWORD PTR [eax],0x37
  4174f7:	mov    edi,0x8ae28188
  4174fc:	add    al,0x1f
  4174fe:	push   WORD PTR [edi-0x57c3a2ff]
  417505:	jmp    0x35799150
  41750a:	jmp    0x3513e096
  41750f:	push   cs
  417510:	xor    ebx,ebp
  417512:	inc    ebp
  417513:	xchg   edi,eax
  417514:	rcpps  xmm4,XMMWORD PTR [esi]
  417517:	repnz loop 0x4174ff
  41751a:	inc    ebx
  41751b:	inc    edi
  41751c:	jae    0x4174b7
  41751e:	or     al,0x23
  417520:	mov    esi,0x26a72ca6
  417525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417526:	pop    edx
  417527:	ds push ebp
  417529:	cmp    al,dl
  41752b:	pusha  
  41752c:	dec    edi
  41752d:	cwde   
  41752e:	std    
  41752f:	mov    bh,0xa6
  417531:	pop    ds
  417532:	les    ebx,FWORD PTR [eax-0x75]
  417535:	dec    esp
  417536:	and    ebp,DWORD PTR [edi+0x50c5d6aa]
  41753c:	pop    ebp
  41753d:	dec    edi
  41753e:	in     eax,0x97
  417540:	sub    al,0xe7
  417542:	outs   dx,BYTE PTR ds:[esi]
  417543:	and    ebx,DWORD PTR [ebp-0xadd0053]
  417549:	retf   
  41754a:	test   esp,ebp
  41754c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41754d:	sub    ah,BYTE PTR [ebp-0x988a164]
  417553:	fsub   DWORD PTR [ecx]
  417555:	clc    
  417556:	xchg   esi,eax
  417557:	clc    
  417558:	sbb    eax,0x49574827
  41755d:	push   ebp
  41755e:	adc    eax,0xcbef2717
  417563:	jmp    0x41e4cf07
  417568:	popf   
  417569:	inc    ebp
  41756a:	push   eax
  41756b:	ins    BYTE PTR es:[edi],dx
  41756c:	loop   0x4174fe
  41756e:	test   DWORD PTR [ebx+eiz*8-0x18790016],0x9c568221
  417579:	ret    
  41757a:	mov    edx,0xd10fa5f6
  41757f:	test   al,0x2b
  417581:	dec    ebp
  417582:	fsub   DWORD PTR [eax+0x4736d269]
  417588:	xchg   ecx,eax
  417589:	iret   
  41758a:	nop
  41758b:	and    BYTE PTR [ebx+0x4880e8f5],bl
  417591:	sub    eax,0xfa0f2546
  417596:	and    eax,0x4c9ba88
  41759b:	dec    ebx
  41759c:	in     eax,0x30
  41759e:	dec    esi
  41759f:	adc    BYTE PTR [eax+ecx*4],cl
  4175a2:	push   esi
  4175a3:	mov    ds:0xda460db1,eax
  4175a8:	retf   0x8f02
  4175ab:	xchg   edx,eax
  4175ac:	add    ecx,0xb594cb12
  4175b2:	jnp    0x41759d
  4175b4:	adc    al,0xab
  4175b6:	pop    edx
  4175b7:	push   ebp
  4175b8:	nop
  4175b9:	popf   
  4175ba:	(bad)  
  4175bb:	in     eax,0xa2
  4175bd:	scas   al,BYTE PTR es:[edi]
  4175be:	and    eax,eax
  4175c0:	jb     0x41761b
  4175c2:	xlat   BYTE PTR ds:[ebx]
  4175c3:	and    dh,BYTE PTR [edi+edi*4]
  4175c6:	xchg   ebx,eax
  4175c7:	add    ebx,ebp
  4175c9:	or     BYTE PTR [esi],al
  4175cb:	mov    ds:0xcb30168d,eax
  4175d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d1:	adc    al,0x98
  4175d3:	aas    
  4175d4:	mov    ds:0x7bff8cdb,eax
  4175d9:	xor    eax,0x821ca4ff
  4175de:	pop    eax
  4175df:	mov    ebp,0x27462e82
  4175e4:	mov    eax,0x3f39a812
  4175e9:	test   BYTE PTR [ebx-0x42],0xf7
  4175ed:	test   BYTE PTR [edx+0x14],bh
  4175f0:	fstp   QWORD PTR [eax]
  4175f2:	fild   DWORD PTR [edx]
  4175f4:	loop   0x4175bb
  4175f6:	inc    ebp
  4175f7:	or     BYTE PTR [esi-0x2],bl
  4175fa:	pop    ss
  4175fb:	push   edi
  4175fc:	iret   
  4175fd:	adc    eax,0x9113e768
  417602:	arpl   WORD PTR [ecx],bx
  417604:	ja     0x4175c0
  417606:	(bad)  
  417607:	mov    ds:0x9d05ce33,al
  41760c:	add    DWORD PTR [ebx],eax
  41760e:	ret    
  41760f:	dec    ebx
  417610:	fisub  WORD PTR es:[esi-0x6a]
  417614:	push   esp
  417615:	cs pop ds
  417617:	push   esi
  417618:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41761a:	fs mov bh,0x9e
  41761d:	jne    0x41761b
  41761f:	mov    ds:0xd8dc2088,eax
  417624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417625:	ror    BYTE PTR [eax+0x57],1
  417628:	test   al,0x9a
  41762a:	or     bh,BYTE PTR [edi-0x72]
  41762d:	xor    eax,0x8b1af226
  417632:	fiadd  DWORD PTR [ebp-0x16]
  417635:	jno    0x417675
  417637:	push   eax
  417638:	lods   al,BYTE PTR ds:[esi]
  417639:	mov    esi,0xbad8b27e
  41763e:	and    BYTE PTR gs:[ebx-0x7a],ah
  417642:	xchg   edi,eax
  417643:	lock enter 0x27ff,0x23
  417648:	dec    dx
  41764a:	pop    edi
  41764b:	jae    0x4175e4
  41764d:	lock in al,dx
  41764f:	and    BYTE PTR [ebp+0x1d326556],0x19
  417656:	fiadd  WORD PTR [ebp+0x21]
  417659:	jmp    0x3837198f
  41765e:	fstp   DWORD PTR [ebx]
  417660:	and    eax,0xb62f52d4
  417665:	push   0xffffffab
  417667:	call   DWORD PTR [ecx-0x2ba0184b]
  41766d:	jnp    0x41765d
  41766f:	dec    eax
  417670:	mov    eax,ds:0xb7f5c08b
  417675:	lock pop edi
  417677:	lahf   
  417678:	cmp    ebp,DWORD PTR [eax+0x35796308]
  41767e:	out    dx,al
  41767f:	jo     0x4176c9
  417681:	pop    ecx
  417682:	scas   eax,DWORD PTR es:[edi]
  417683:	mov    ds:0x46c613b3,eax
  417688:	sbb    edx,DWORD PTR [ebx+0xb]
  41768b:	fnstsw WORD PTR [eax-0x2df5f61e]
  417691:	sbb    eax,0x1479a342
  417696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417697:	lods   al,BYTE PTR ds:[esi]
  417698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417699:	imul   esi,esi,0x55
  41769c:	mov    ecx,0x97e16a2a
  4176a1:	xor    esi,DWORD PTR [ecx+0x451746a0]
  4176a7:	pop    DWORD PTR [edi+ecx*4+0x45]
  4176ab:	jecxz  0x4176d3
  4176ad:	lods   eax,DWORD PTR ds:[esi]
  4176ae:	ds cdq 
  4176b0:	pop    DWORD PTR [ebx+esi*1]
  4176b3:	jnp    0x4176b2
  4176b5:	mov    bl,0x25
  4176b7:	cmp    eax,0xa854ccd
  4176bc:	push   edx
  4176bd:	ins    DWORD PTR es:[edi],dx
  4176be:	repnz inc edx
  4176c0:	es daa 
  4176c2:	fbld   TBYTE PTR [edi+0x12]
  4176c5:	je     0x417661
  4176c7:	jns    0x417649
  4176c9:	jl     0x4176d3
  4176cb:	das    
  4176cc:	ror    DWORD PTR [ebp-0x58],cl
  4176cf:	mov    ds:0x9d18a980,al
  4176d4:	xchg   edi,eax
  4176d5:	adc    al,BYTE PTR [esi+0x3f]
  4176d8:	mov    al,0x95
  4176da:	aad    0x5b
  4176dc:	push   cs
  4176dd:	xor    BYTE PTR [eax+ecx*8],ah
  4176e0:	outs   dx,BYTE PTR ds:[esi]
  4176e1:	mov    dl,0x86
  4176e3:	pop    ds
  4176e4:	loopne 0x4176d2
  4176e6:	retf   0x3ce7
  4176e9:	std    
  4176ea:	outs   dx,BYTE PTR ds:[esi]
  4176eb:	pop    ss
  4176ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ed:	xchg   esi,eax
  4176ee:	cld    
  4176ef:	sub    eax,0x14b0b9ab
  4176f4:	cs scas al,BYTE PTR es:[edi]
  4176f6:	mov    edx,DWORD PTR [eax-0x38]
  4176f9:	push   ecx
  4176fa:	sar    BYTE PTR [ebp+0x1ab47d58],cl
  417700:	lahf   
  417701:	rol    ebp,cl
  417703:	neg    DWORD PTR [ebp+0x76]
  417706:	xlat   BYTE PTR ds:[ebx]
  417707:	enter  0x5447,0xc0
  41770b:	test   BYTE PTR [bp+0x2354],al
  417710:	mov    al,0xf4
  417712:	push   edi
  417713:	pop    edx
  417714:	and    eax,0x4424af6f
  417719:	push   cs
  41771a:	push   0x8c3598a7
  41771f:	pop    edx
  417720:	pushaw 
  417722:	clc    
  417723:	int3   
  417724:	and    DWORD PTR [esi-0x26c3c43d],ebx
  41772a:	mov    edx,0xc55fa5f6
  41772f:	mov    edi,0x1f0ddc5a
  417734:	xor    BYTE PTR ds:0x8988bbf6,dh
  41773a:	inc    esi
  41773b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41773c:	mov    ?,esi
  41773e:	inc    ebp
  41773f:	call   0xdf44e470
  417744:	pop    esp
  417745:	les    esp,FWORD PTR [ebx+0x19]
  417748:	mov    bh,0x54
  41774a:	sub    esp,DWORD PTR [ebx-0x310f0adc]
  417750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417751:	out    0xee,al
  417753:	and    ah,0x20
  417756:	into   
  417757:	push   DWORD PTR [edx-0x4b]
  41775a:	jo     0x41773a
  41775c:	in     al,dx
  41775d:	int3   
  41775e:	loope  0x417778
  417760:	aas    
  417761:	push   eax
  417762:	shl    BYTE PTR [esi+0x47586fa2],0xe5
  417769:	mov    eax,ds:0xb206dba0
  41776e:	sbb    DWORD PTR [ebp-0x5c],esp
  417771:	xor    eax,0x8594f726
  417776:	mov    eax,0x50e3633d
  41777b:	jmp    0x965e:0xccc6126a
  417782:	push   0x7c
  417784:	cmp    eax,0xa6f24315
  417789:	leave  
  41778a:	and    ebp,DWORD PTR ss:[ebp+0x2692786b]
  417791:	xchg   esi,eax
  417792:	shl    DWORD PTR [ecx+0x4997ba1],1
  417798:	jmp    0xc3398951
  41779d:	cdq    
  41779e:	push   cs
  41779f:	mov    al,ds:0xcb5ebb8d
  4177a4:	push   ds
  4177a5:	icebp  
  4177a6:	out    dx,eax
  4177a7:	mov    ecx,0xe7e3d566
  4177ac:	outs   dx,BYTE PTR ds:[esi]
  4177ad:	js     0x4177ba
  4177af:	xchg   BYTE PTR [ebx],bh
  4177b1:	sub    bh,bh
  4177b3:	adc    al,0x9b
  4177b5:	add    dl,BYTE PTR [esi]
  4177b7:	mov    ds:0xd63e9de0,eax
  4177bc:	pop    edx
  4177bd:	jp     0x41776b
  4177bf:	dec    edx
  4177c0:	cmp    dl,dl
  4177c2:	push   0xffffffd2
  4177c4:	sub    DWORD PTR ss:[eax+0x906e838],0xffffffa3
  4177cc:	in     al,dx
  4177cd:	es gs pop eax
  4177d0:	es mov ecx,0x554942c3
  4177d6:	cmp    cl,BYTE PTR [edi+0x4a]
  4177d9:	inc    ecx
  4177da:	cmc    
  4177db:	sub    eax,DWORD PTR [edi+0x78a28ffe]
  4177e1:	pop    ebx
  4177e2:	xor    ecx,eax
  4177e4:	dec    esi
  4177e5:	jmp    0xdf2d252f
  4177ea:	inc    edx
  4177eb:	or     DWORD PTR [ebx],eax
  4177ed:	sub    al,0x3
  4177ef:	pop    ds
  4177f0:	sub    eax,0x852335f4
  4177f5:	lods   al,BYTE PTR ds:[esi]
  4177f6:	aaa    
  4177f7:	jmp    0x71af:0xa8bda21
  4177fe:	mov    dh,0xe7
  417800:	xchg   esp,eax
  417801:	sahf   
  417802:	xor    ecx,eax
  417804:	icebp  
  417805:	sti    
  417806:	fidivr DWORD PTR [edx]
  417808:	fistp  DWORD PTR [ebp+0x3b]
  41780b:	and    ebx,DWORD PTR [edi+0x26e43440]
  417811:	mov    al,ds:0xb4d4441d
  417816:	icebp  
  417817:	imul   ebp,esi,0xfffffff6
  41781a:	mov    esp,0x16bc7220
  41781f:	mov    ds:0x3289d56,eax
  417824:	xchg   esi,eax
  417825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417826:	sbb    al,0x2d
  417828:	push   es
  417829:	js     0x417807
  41782b:	xchg   esi,eax
  41782c:	stc    
  41782d:	cmp    dh,bh
  41782f:	xor    DWORD PTR [ebx],0x6ee7e935
  417835:	jnp    0x417849
  417837:	fidivr WORD PTR [ebx]
  417839:	fld    DWORD PTR [ebp-0x2e]
  41783c:	and    ah,BYTE PTR [esp+ecx*4+0x6aac3351]
  417843:	ins    BYTE PTR es:[edi],dx
  417844:	cmp    al,0x57
  417846:	add    edx,DWORD PTR ds:0x6332d677
  41784c:	or     BYTE PTR [ecx],ch
  41784e:	(bad)  
  41784f:	sub    al,0x96
  417851:	stos   DWORD PTR es:[edi],eax
  417852:	pushf  
  417853:	push   ebp
  417854:	pop    eax
  417855:	shl    DWORD PTR [eax],cl
  417857:	jbe    0x4177ea
  417859:	jmp    0x18825c7b
  41785e:	and    esi,DWORD PTR [ebx]
  417860:	inc    eax
  417861:	mov    eax,0xcc218ac5
  417866:	cs fs jnp 0x41780e
  41786a:	inc    edx
  41786b:	fstp   QWORD PTR [ebx-0x67]
  41786e:	in     al,0xe0
  417870:	jp     0x417898
  417872:	sbb    DWORD PTR es:0x2fc08198,ebp
  417879:	lea    ecx,[ecx]
  41787b:	and    ebp,edx
  41787d:	or     DWORD PTR [edi+0x9],esp
  417880:	xor    BYTE PTR es:[eax-0x411fb7bd],dl
  417887:	mov    ds:0x756c33be,al
  41788c:	dec    esi
  41788d:	popf   
  41788e:	popf   
  41788f:	dec    edx
  417890:	sub    eax,edi
  417892:	pop    ds
  417893:	and    eax,0xa0b702a6
  417898:	lock push ds
  41789a:	xlat   BYTE PTR ds:[ebx]
  41789b:	and    ah,BYTE PTR [eax+0x7ce51e26]
  4178a1:	jne    0x417846
  4178a3:	xor    dh,BYTE PTR [edx]
  4178a5:	mov    bl,0xb2
  4178a7:	xor    eax,0x95c6be26
  4178ac:	fwait
  4178ad:	mov    al,ds:0xf7909987
  4178b2:	sub    al,0x56
  4178b4:	inc    esi
  4178b5:	xor    esi,esi
  4178b7:	mov    cl,BYTE PTR [edi]
  4178b9:	sub    al,dh
  4178bb:	mov    cl,0x52
  4178bd:	inc    edi
  4178be:	push   ecx
  4178bf:	cmp    eax,0x987fa5aa
  4178c4:	ret    
  4178c5:	stc    
  4178c6:	adc    eax,0xa5c4b3a3
  4178cb:	mov    BYTE PTR [esi+0x4cb182f9],bl
  4178d1:	and    eax,0x4966a440
  4178d6:	mov    ebx,0xb7a7e31b
  4178db:	push   es
  4178dc:	ja     0x417873
  4178de:	mov    ch,0x72
  4178e0:	xor    eax,0xec36205e
  4178e5:	mov    ebx,0xafb04f45
  4178ea:	pushf  
  4178eb:	dec    eax
  4178ec:	addr16 sbb al,0xf3
  4178ef:	outs   dx,DWORD PTR ds:[esi]
  4178f0:	jnp    0x4178ce
  4178f2:	rcr    BYTE PTR [ebx],0xb6
  4178f5:	jb     0x417957
  4178f7:	test   BYTE PTR [esi],ch
  4178f9:	push   edx
  4178fa:	mov    ebx,ebx
  4178fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178fd:	inc    DWORD PTR [edi-0x7782e676]
  417903:	(bad)  
  417904:	mov    bh,0xb0
  417906:	sbb    al,0x62
  417908:	fisttp WORD PTR [ecx-0x222342bc]
  41790e:	jno    0x4178f2
  417910:	imul   ebp,DWORD PTR [esi+0x45],0x9b3f6c64
  417917:	dec    eax
  417918:	test   BYTE PTR [edi],ch
  41791a:	imul   DWORD PTR ss:[ecx]
  41791d:	inc    edx
  41791e:	add    BYTE PTR [edx+0x2c0fbc72],ch
  417924:	movsx  eax,WORD PTR ds:0xb0c3eda3
  41792b:	mov    WORD PTR [esi+0x26a076d0],fs
  417931:	test   BYTE PTR [esi+ebp*4-0x61fe4a7b],ch
  417938:	xchg   esp,eax
  417939:	cli    
  41793a:	sub    esi,DWORD PTR [edi]
  41793c:	shl    BYTE PTR [edx-0x1b3688bc],1
  417942:	sub    DWORD PTR [eax+0x7f],edi
  417945:	inc    ecx
  417946:	jge    0x4179c7
  417948:	dec    edi
  417949:	inc    ebx
  41794a:	pop    ebp
  41794b:	mov    cl,0xf8
  41794d:	sub    eax,0xc0cc5b45
  417952:	in     eax,0xd1
  417954:	xchg   esi,eax
  417955:	enter  0xb49c,0xa6
  417959:	call   0xfbb3:0x8373974f
  417960:	xor    BYTE PTR ds:0x8cba56d4,0x95
  417967:	mov    bl,0x19
  417969:	in     eax,dx
  41796a:	inc    ebp
  41796b:	fild   WORD PTR [ebx+0x159c2e67]
  417971:	mov    DWORD PTR [eax+eiz*4],esp
  417974:	inc    ecx
  417975:	or     ch,ch
  417977:	and    ch,BYTE PTR [ebx-0x63]
  41797a:	je     0x417955
  41797c:	push   ss
  41797d:	add    dh,BYTE PTR [esi]
  41797f:	retf   
  417980:	in     eax,0x9f
  417982:	fs jecxz 0x417919
  417985:	or     dl,al
  417987:	or     DWORD PTR [ecx-0x4b],ebp
  41798a:	pop    esp
  41798b:	add    eax,0x71fae53e
  417990:	shl    DWORD PTR [eax],1
  417992:	inc    esi
  417993:	rol    BYTE PTR [esi-0x2a7debef],0xc9
  41799a:	push   esi
  41799b:	mov    ch,0xa3
  41799d:	les    eax,FWORD PTR [di]
  4179a0:	rcr    ebx,0x2
  4179a3:	std    
  4179a4:	inc    esi
  4179a5:	adc    al,0x1e
  4179a7:	push   ecx
  4179a8:	and    eax,0xa72ce55a
  4179ad:	push   ds
  4179ae:	adc    bl,bl
  4179b0:	pop    ebp
  4179b1:	mov    ch,0xf8
  4179b3:	mov    eax,0xb646c183
  4179b8:	div    BYTE PTR [ecx]
  4179ba:	inc    ebp
  4179bb:	ins    BYTE PTR es:[edi],dx
  4179bc:	pop    ebx
  4179bd:	pop    ss
  4179be:	jb     0x41798a
  4179c0:	sahf   
  4179c1:	test   DWORD PTR [edx-0x6f],eax
  4179c4:	pop    edx
  4179c5:	cs inc ebp
  4179c7:	xor    al,bl
  4179c9:	push   eax
  4179ca:	aam    0xe1
  4179cc:	pop    eax
  4179cd:	daa    
  4179ce:	xchg   bh,ch
  4179d0:	(bad)  
  4179d1:	ja     0x417a15
  4179d3:	mov    ah,0x12
  4179d5:	neg    ecx
  4179d7:	xor    ah,BYTE PTR [esi]
  4179d9:	shl    dl,cl
  4179db:	push   edi
  4179dc:	sub    eax,0x53cd2fb5
  4179e1:	mov    WORD PTR [esi],?
  4179e3:	shr    DWORD PTR [eax],cl
  4179e5:	je     0x417a29
  4179e7:	jne    0x4179fd
  4179e9:	push   ecx
  4179ea:	aad    0xfd
  4179ec:	ss push 0xffffff86
  4179ef:	(bad)  
  4179f0:	jge    0x417a27
  4179f2:	sbb    esi,DWORD PTR [ebp-0x6f43074]
  4179f8:	cmp    ebp,DWORD PTR [ebx-0x27e9b83c]
  4179fe:	dec    ebx
  4179ff:	inc    edi
  417a00:	pop    esi
  417a01:	(bad)
  417a04:	dec    eax
  417a05:	mov    ch,0xa9
  417a07:	or     bh,0x5c
  417a0a:	pop    ss
  417a0b:	cmp    eax,0xe50f6ec
  417a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a11:	ret    
  417a12:	xchg   edi,eax
  417a13:	xchg   ebp,eax
  417a14:	fs inc esi
  417a16:	mov    cs,ebp
  417a18:	dec    esp
  417a19:	scas   al,BYTE PTR es:[edi]
  417a1a:	sar    ebx,0xc2
  417a1d:	cmc    
  417a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a1f:	sbb    al,0xdf
  417a21:	ja     0x4179c3
  417a23:	and    BYTE PTR [esi],ah
  417a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a26:	pop    eax
  417a27:	jno    0x417a57
  417a29:	cmp    al,0x28
  417a2b:	out    dx,eax
  417a2c:	mov    DWORD PTR [edi-0x446805a2],eax
  417a32:	push   ebp
  417a33:	fidivr DWORD PTR [edi]
  417a35:	adc    al,0x2e
  417a37:	adc    al,0xc1
  417a39:	frstor [ebp+0x45a3095b]
  417a3f:	push   ecx
  417a40:	add    bh,bh
  417a42:	mov    WORD PTR [edi],es
  417a44:	scas   al,BYTE PTR es:[edi]
  417a45:	repnz arpl WORD PTR [edi],sp
  417a48:	dec    ebp
  417a49:	in     eax,0xef
  417a4b:	addr16 push ebx
  417a4d:	xor    eax,0xb7a54d6b
  417a52:	mov    ds:0x45b89ae3,eax
  417a57:	jmp    0xab8b:0x3ffd1b88
  417a5e:	jns    0x417a58
  417a60:	jno    0x417a36
  417a62:	pop    eax
  417a63:	and    ebp,edx
  417a65:	stos   DWORD PTR es:[edi],eax
  417a66:	or     eax,0xc612b300
  417a6b:	xchg   ebx,eax
  417a6c:	add    al,0x7c
  417a6e:	repz jl 0x417a5c
  417a71:	aad    0x73
  417a73:	mov    ds:0xa2e2c72e,al
  417a78:	jns    0x417aa9
  417a7a:	loop   0x417a96
  417a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7d:	push   0x4c159e4
  417a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a83:	(bad)  
  417a84:	repnz mov cl,0x36
  417a87:	inc    ebp
  417a88:	and    al,0x22
  417a8a:	test   BYTE PTR [ecx],al
  417a8c:	(bad)  
  417a8e:	(bad)  ss:0x419ab04c
  417a95:	or     eax,0x94ea88e4
  417a9a:	and    al,0x43
  417a9c:	ds jnp 0x417aac
  417a9f:	mov    ds:0x243c8f96,eax
  417aa4:	pop    ds
  417aa5:	lds    esp,FWORD PTR [esi]
  417aa7:	xchg   ebx,eax
  417aa8:	inc    eax
  417aa9:	and    eax,0xd43ffebe
  417aae:	popa   
  417aaf:	dec    esi
  417ab0:	inc    ebp
  417ab1:	neg    bh
  417ab3:	push   ss
  417ab4:	aam    0x9d
  417ab6:	inc    ebx
  417ab7:	cmp    DWORD PTR [edx-0x19da51cc],0x7d8067eb
  417ac1:	mov    ch,0x9f
  417ac3:	icebp  
  417ac4:	xchg   esp,eax
  417ac5:	(bad)
  417ac8:	hlt    
  417ac9:	dec    esi
  417aca:	mov    esi,0xe7e928
  417acf:	mov    ch,0xe
  417ad1:	cmp    ah,ah
  417ad3:	inc    edx
  417ad4:	sub    DWORD PTR ds:0x7ab3b465,esi
  417ada:	push   esi
  417adb:	fs mov edi,0xca96c5fc
  417ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae2:	sar    ch,cl
  417ae4:	mov    bh,ch
  417ae6:	jmp    0x338d:0x110f671
  417aed:	xor    eax,0x4a1d102f
  417af2:	pop    edi
  417af3:	cli    
  417af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af5:	div    esp
  417af7:	loope  0x417b17
  417af9:	pop    esp
  417afa:	cmp    ah,bh
  417afc:	mov    ch,0x5d
  417afe:	push   edi
  417aff:	stos   DWORD PTR es:[edi],eax
  417b00:	sahf   
  417b01:	ins    BYTE PTR es:[edi],dx
  417b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b03:	lahf   
  417b04:	xor    ch,0x49
  417b07:	mov    ecx,ebp
  417b09:	sbb    al,BYTE PTR [esi-0x1]
  417b0c:	mov    edx,0xd62a822a
  417b11:	daa    
  417b12:	push   0xffffffe6
  417b14:	cmp    eax,0xbba15a17
  417b19:	jmp    0x12b8:0x1f81edf5
  417b20:	out    0xe7,eax
  417b22:	call   0x3eff0859
  417b27:	adc    al,0x8a
  417b29:	cmc    
  417b2a:	pop    ds
  417b2b:	not    DWORD PTR [edx-0x64]
  417b2e:	adc    cl,ch
  417b30:	add    DWORD PTR [edi-0x22],0x22
  417b34:	inc    esp
  417b35:	out    0x86,eax
  417b37:	push   ecx
  417b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b39:	push   ds
  417b3a:	bound  ebx,QWORD PTR [edi-0x45e3f369]
  417b40:	int    0x18
  417b42:	xchg   edx,eax
  417b43:	sbb    DWORD PTR [edi-0x4e],0x5d4691dc
  417b4a:	cld    
  417b4b:	xchg   ebx,eax
  417b4c:	fcmovu st,st(5)
  417b4e:	lds    ebx,FWORD PTR [edi+0x43]
  417b51:	test   al,0xac
  417b53:	ds push esp
  417b55:	loop   0x417b7a
  417b57:	inc    ebp
  417b58:	dec    esp
  417b59:	jmp    0xda42:0x7886234e
  417b60:	and    eax,0x142dc491
  417b65:	jg     0x417b6b
  417b67:	(bad)  
  417b68:	jbe    0x417b1f
  417b6a:	cmp    ch,ch
  417b6c:	lds    eax,FWORD PTR [ecx-0x31242113]
  417b72:	inc    ebp
  417b73:	add    DWORD PTR [eax],esi
  417b75:	push   dx
  417b77:	push   0xffffffc4
  417b79:	clc    
  417b7a:	add    ah,BYTE PTR [ebp+0x2]
  417b7d:	xor    ax,0xa4a3
  417b81:	ror    DWORD PTR [edi],1
  417b83:	inc    ebx
  417b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b85:	fs popf 
  417b87:	pop    DWORD PTR [eax+0x2e]
  417b8a:	frstor [ebp-0x47]
  417b8d:	mov    ah,0xf3
  417b8f:	sub    BYTE PTR [ecx+0x31399298],ch
  417b95:	leave  
  417b96:	xchg   esi,eax
  417b97:	xlat   BYTE PTR ds:[ebx]
  417b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b99:	mov    dh,0x6
  417b9b:	mov    ch,BYTE PTR [edx+0x31]
  417b9e:	or     al,0x3f
  417ba0:	push   ecx
  417ba1:	or     eax,esi
  417ba3:	test   eax,0x69e8b7a6
  417ba8:	sub    DWORD PTR [eax+0x78],edi
  417bab:	mov    al,0xeb
  417bad:	pop    ebx
  417bae:	ds das 
  417bb0:	dec    ecx
  417bb1:	fwait
  417bb2:	jmp    0x417b9f
  417bb4:	cwde   
  417bb5:	int3   
  417bb6:	xchg   DWORD PTR [ecx-0x3f],esp
  417bb9:	imul   ebx,DWORD PTR [ecx],0xffffffb3
  417bbc:	ins    BYTE PTR es:[edi],dx
  417bbd:	iret   
  417bbe:	sbb    ah,BYTE PTR [ebx]
  417bc0:	xchg   BYTE PTR [edi],bl
  417bc2:	neg    edi
  417bc4:	xor    al,0x7d
  417bc6:	enter  0x26d2,0x82
  417bca:	fimul  WORD PTR [edx+0x593549e1]
  417bd0:	mov    al,ds:0x66975717
  417bd5:	mov    cl,cl
  417bd7:	push   edi
  417bd8:	add    eax,0xa212f0f2
  417bdd:	xchg   esp,eax
  417bde:	jg     0x417be1
  417be0:	dec    ebx
  417be1:	loope  0x417bc0
  417be3:	daa    
  417be4:	mov    WORD PTR [edi+0x4a],cs
  417be7:	pop    DWORD PTR [edx+ebp*4-0x5b547b78]
  417bee:	push   0x44727022
  417bf3:	mov    eax,0x37415c83
  417bf8:	mov    edi,0x35d6282e
  417bfd:	add    BYTE PTR [esi-0x7f5e2460],al
  417c03:	mov    ah,0x14
  417c05:	mov    ah,0x29
  417c07:	mov    ds:0x2bc1d2c4,eax
  417c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c0d:	jl     0x417ba5
  417c0f:	or     BYTE PTR [eax-0x13],0x18
  417c13:	test   al,0x3d
  417c15:	mov    ch,0xba
  417c17:	test   BYTE PTR ds:0xa315d8bd,dl
  417c1d:	inc    ch
  417c1f:	(bad)  [ecx-0x52]
  417c22:	xor    bh,cl
  417c24:	cli    
  417c25:	call   FWORD PTR [edx+edx*8-0x5e7e0357]
  417c2c:	add    eax,0x88e751e9
  417c31:	inc    esi
  417c32:	inc    edx
  417c33:	push   ds
  417c34:	pop    eax
  417c35:	inc    edx
  417c36:	jnp    0x417c40
  417c38:	push   ss
  417c39:	ret    0x689f
  417c3c:	and    esi,DWORD PTR [edx-0x337abc04]
  417c42:	dec    ecx
  417c43:	jecxz  0x417c7e
  417c45:	push   0x11
  417c47:	jmp    0x417c61
  417c49:	fwait
  417c4a:	sbb    BYTE PTR [edx+edi*2+0x1e],bh
  417c4e:	(bad)  
  417c4f:	daa    
  417c50:	int    0x1c
  417c52:	mov    ds:0x7735682d,eax
  417c57:	jns    0x417cac
  417c59:	cli    
  417c5a:	outs   dx,DWORD PTR ds:[esi]
  417c5b:	xchg   ecx,eax
  417c5c:	jle    0x417ca0
  417c5e:	inc    esp
  417c5f:	lock mov esp,0x918993aa
  417c65:	jno    0x417c50
  417c67:	dec    BYTE PTR [ebx-0x4c]
  417c6a:	ins    DWORD PTR es:[edi],dx
  417c6b:	mov    edx,0x4fe0e53b
  417c70:	add    eax,0xdcf1bd3f
  417c75:	es inc esi
  417c77:	adc    ecx,DWORD PTR [esi+0x3a44a9d1]
  417c7d:	add    eax,DWORD PTR [ecx-0x5e690d05]
  417c83:	lahf   
  417c84:	push   ebx
  417c85:	xchg   ebp,eax
  417c86:	or     BYTE PTR [ebx+edx*1+0x452445bd],dl
  417c8d:	sahf   
  417c8e:	mov    ah,0xd4
  417c90:	pop    esi
  417c91:	mov    al,ds:0x43dab51c
  417c96:	inc    ebx
  417c97:	mov    ds:0x5660b871,eax
  417c9c:	add    al,BYTE PTR [eax+0x40]
  417c9f:	and    BYTE PTR [ecx-0x55],0x40
  417ca3:	mov    ds:0xbb84eaf1,eax
  417ca8:	pop    edx
  417ca9:	mul    BYTE PTR [bp+si]
  417cac:	(bad)  
  417cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cae:	pusha  
  417caf:	cdq    
  417cb0:	mov    es:0xb6f75927,eax
  417cb6:	pop    esi
  417cb7:	jmp    DWORD PTR [ecx]
  417cb9:	push   ss
  417cba:	retf   
  417cbb:	and    al,BYTE PTR [esi-0x953bb90]
  417cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc2:	xchg   ebp,eax
  417cc3:	pop    es
  417cc4:	mov    ch,0x28
  417cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc7:	jl     0x417c50
  417cc9:	popf   
  417cca:	inc    esp
  417ccb:	cmp    BYTE PTR [ebx-0x77966592],bl
  417cd1:	leave  
  417cd2:	jnp    0x417d0d
  417cd4:	push   eax
  417cd5:	xor    eax,0xdbb588b0
  417cda:	and    eax,0x3c65989e
  417cdf:	dec    esi
  417ce0:	pop    edx
  417ce1:	jmp    FWORD PTR [ebp-0x13]
  417ce4:	shl    DWORD PTR [ecx-0x1f806d4],0xb9
  417ceb:	stc    
  417cec:	loopne 0x417cd3
  417cee:	lods   al,BYTE PTR ds:[esi]
  417cef:	adc    dh,cl
  417cf1:	jns    0x417d35
  417cf3:	ret    
  417cf4:	inc    ebp
  417cf5:	add    eax,0x4d96cf3d
  417cfa:	mov    ebp,0xe3352788
  417cff:	iret   
  417d00:	push   es
  417d01:	and    cl,bl
  417d03:	or     ebx,DWORD PTR [esi-0x2b]
  417d06:	lds    eax,FWORD PTR [esi]
  417d08:	xor    al,BYTE PTR [edi]
  417d0a:	in     eax,dx
  417d0b:	xlat   BYTE PTR ds:[ebx]
  417d0c:	mov    ch,0xbb
  417d0e:	test   eax,0xf831f140
  417d13:	test   DWORD PTR [edi+0x161983ee],ebx
  417d19:	test   DWORD PTR [eax-0x4392189b],0x382b2849
  417d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d25:	add    al,0x6d
  417d27:	fwait
  417d28:	push   0xa439a2e9
  417d2d:	xor    BYTE PTR [ecx],0x23
  417d30:	cld    
  417d31:	xor    BYTE PTR [ebx+0x3de42517],bh
  417d37:	(bad)  
  417d38:	cs push ecx
  417d3a:	sub    esp,edx
  417d3c:	mov    dl,0x61
  417d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d3f:	cmp    eax,0xa30c77c6
  417d44:	aaa    
  417d45:	jns    0x417d1a
  417d47:	and    BYTE PTR [esi+0x46740462],ah
  417d4d:	leave  
  417d4e:	rcl    DWORD PTR [ecx],0x8d
  417d51:	mov    ch,0xc0
  417d53:	cdq    
  417d54:	cmp    al,0x6f
  417d56:	cld    
  417d57:	repnz cdq 
  417d59:	punpckhdq mm2,QWORD PTR [ecx+0x2c]
  417d5d:	std    
  417d5e:	scas   al,BYTE PTR es:[edi]
  417d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d60:	adc    al,0x28
  417d62:	jns    0x417cf1
  417d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d65:	push   ss
  417d66:	into   
  417d67:	pusha  
  417d68:	add    DWORD PTR [ebx+0x6e],eax
  417d6b:	push   0xa3494a67
  417d70:	add    esi,esi
  417d72:	test   esi,esi
  417d74:	and    BYTE PTR es:[esi-0x1c4bfa8c],0xfa
  417d7c:	pusha  
  417d7d:	mov    ch,0xf4
  417d7f:	mov    bl,0x2
  417d81:	adc    BYTE PTR [esi-0x4e],bh
  417d84:	inc    eax
  417d85:	mov    edi,0x20a60ed2
  417d8a:	cli    
  417d8b:	xchg   edx,eax
  417d8c:	in     eax,0xae
  417d8e:	adc    eax,0xef434433
  417d93:	pop    ecx
  417d94:	xor    esp,DWORD PTR [edx]
  417d96:	push   edi
  417d97:	mov    ds:0xfe7dd867,eax
  417d9c:	es push es
  417d9e:	les    ecx,FWORD PTR [eax-0x53]
  417da1:	lock fild WORD PTR ds:[eax]
  417da5:	daa    
  417da6:	push   ecx
  417da7:	cwde   
  417da8:	or     ecx,ebx
  417daa:	test   ecx,ebp
  417dac:	sbb    DWORD PTR gs:[eax-0x3a],ebp
  417db0:	pop    eax
  417db1:	out    0x45,al
  417db3:	bound  esp,QWORD PTR [ebp-0x754713a0]
  417db9:	jno    0x417dbe
  417dbb:	cmc    
  417dbc:	mov    DWORD PTR [esi],edi
  417dbe:	push   edi
  417dbf:	and    esi,edx
  417dc1:	loop   0x417e14
  417dc3:	push   ds
  417dc4:	fcmovu st,st(3)
  417dc6:	lds    ebp,FWORD PTR [esi+0x5c]
  417dc9:	cmp    ecx,0xe6458201
  417dcf:	mov    ebp,0x231bfcaa
  417dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dd5:	and    BYTE PTR [edi-0x6f],dh
  417dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd9:	jge    0x417e3b
  417ddb:	ins    DWORD PTR es:[edi],dx
  417ddc:	out    dx,eax
  417ddd:	and    al,0xf4
  417ddf:	outs   dx,BYTE PTR ds:[esi]
  417de0:	and    dl,BYTE PTR [esi]
  417de2:	fcom   DWORD PTR [esi+eiz*1]
  417de5:	clc    
  417de6:	imul   edi,DWORD PTR [edi],0xe89d9771
  417dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ded:	retf   
  417dee:	mov    edi,0x3a26a350
  417df3:	sbb    al,0x72
  417df5:	inc    edx
  417df6:	ja     0x417da7
  417df8:	sbb    dl,0x2
  417dfb:	and    ebp,DWORD PTR [esi+eax*4+0x34]
  417dff:	mov    ebp,ebx
  417e01:	fldcw  WORD PTR [eax+0x5bb556e6]
  417e07:	(bad)
  417e0b:	pop    edi
  417e0c:	xchg   BYTE PTR ds:0x53a9caa6,dh
  417e12:	mov    bl,0xae
  417e14:	stc    
  417e15:	jo     0x417e55
  417e17:	mov    edi,0x27c70c4e
  417e1c:	pop    edi
  417e1d:	and    eax,0x9fde1c45
  417e22:	pop    ss
  417e23:	fcom   QWORD PTR [ecx-0x7c]
  417e26:	shl    DWORD PTR [ecx],1
  417e28:	aas    
  417e29:	outs   dx,DWORD PTR ds:[esi]
  417e2a:	lock shr DWORD PTR [eax+0x43abd22d],1
  417e31:	adc    eax,esi
  417e33:	cli    
  417e34:	xor    bl,BYTE PTR [eax]
  417e36:	mov    DWORD PTR [ebx+0x2a],0xa6e8d44e
  417e3d:	stc    
  417e3e:	or     eax,0xc5023923
  417e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e44:	and    eax,0xe5afad58
  417e49:	dec    ebx
  417e4a:	sbb    DWORD PTR [ecx],esi
  417e4c:	inc    esi
  417e4d:	dec    esp
  417e4e:	sbb    al,0x85
  417e50:	test   eax,0xdfa2de04
  417e55:	shl    DWORD PTR [ecx-0x8ce5a61],0xbc
  417e5c:	nop
  417e5d:	mov    ebp,DWORD PTR [ecx-0x1d]
  417e60:	jb     0x417e9c
  417e62:	or     DWORD PTR [ebp+ebp*1+0x261eadb3],ecx
  417e69:	data16 fwait
  417e6b:	fs retf 
  417e6d:	enter  0x93af,0x5
  417e71:	leave  
  417e72:	inc    ebp
  417e73:	pop    ebp
  417e74:	mov    ah,0x22
  417e76:	lods   eax,DWORD PTR ds:[esi]
  417e77:	fucomi st,st(7)
  417e79:	sub    eax,0xd4374f9a
  417e7e:	in     eax,0x9b
  417e80:	loopne 0x417efb
  417e82:	popa   
  417e83:	lds    esp,FWORD PTR [esi]
  417e85:	test   al,0xd5
  417e87:	imul   ecx,DWORD PTR [eax+0x50547578],0x6e725326
  417e91:	xchg   ebp,eax
  417e92:	sub    BYTE PTR [ebp-0x6b],bh
  417e95:	push   0x19
  417e97:	cmp    al,0x25
  417e99:	jecxz  0x417e7d
  417e9b:	add    eax,0xcc3a74ae
  417ea0:	scas   eax,DWORD PTR es:[edi]
  417ea1:	and    dl,ah
  417ea3:	or     al,0x77
  417ea5:	xor    eax,0xf9b903bf
  417eaa:	or     ah,BYTE PTR [ebp-0x5139f40c]
  417eb0:	es in  al,0x85
  417eb3:	xor    ch,bl
  417eb5:	mov    bh,0xcb
  417eb7:	or     ecx,DWORD PTR [eax-0x7d5e40ce]
  417ebd:	mov    ebp,0x1ae4d1d5
  417ec2:	mov    BYTE PTR [ebx-0x3],0x73
  417ec6:	inc    edx
  417ec7:	data16 fdiv QWORD PTR [eax-0x3d]
  417ecb:	in     eax,0xe2
  417ecd:	fcomi  st,st(6)
  417ecf:	and    al,BYTE PTR [eiz*2-0xc60058d]
  417ed6:	jae    0x417f45
  417ed8:	jp     0x417edf
  417eda:	mov    bl,0xcd
  417edc:	pop    edx
  417edd:	loope  0x417e77
  417edf:	fnstsw WORD PTR [esi]
  417ee1:	dec    BYTE PTR [ebx+eiz*1]
  417ee4:	add    ah,bh
  417ee6:	and    ah,BYTE PTR [ebx+0x18]
  417ee9:	cmp    DWORD PTR [eax-0xc],esi
  417eec:	fstp   DWORD PTR [ebp+0x5935885a]
  417ef3:	iret   
  417ef4:	daa    
  417ef5:	or     esi,DWORD PTR [edi+edx*1]
  417ef8:	inc    esi
  417ef9:	inc    esi
  417efa:	cmp    al,0x45
  417efc:	inc    ebp
  417efd:	rol    BYTE PTR [ebp-0x33],cl
  417f00:	pop    ds
  417f01:	addr16 mov ch,0xdd
  417f04:	fidiv  DWORD PTR [ebx+ecx*1+0x16da9501]
  417f0b:	pusha  
  417f0c:	inc    esp
  417f0d:	dec    ebx
  417f0e:	popf   
  417f0f:	(bad)  [ecx]
  417f11:	aaa    
  417f12:	iret   
  417f13:	lods   eax,DWORD PTR ds:[esi]
  417f14:	dec    edx
  417f15:	mov    ch,0xa
  417f17:	xchg   ebp,eax
  417f18:	shr    esp,cl
  417f1a:	jno    0x417f1d
  417f1c:	push   ecx
  417f1d:	mov    ebx,0x75aba282
  417f22:	xor    eax,0x48
  417f25:	mov    ah,0x44
  417f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f28:	ret    
  417f29:	shr    DWORD PTR es:[edx+0x285e99e],1
  417f30:	dec    edx
  417f31:	mov    ch,0x94
  417f33:	cli    
  417f34:	sbb    bh,BYTE PTR [eax+0x59]
  417f37:	pop    esi
  417f38:	(bad)  
  417f39:	(bad)
  417f3d:	xor    ch,cl
  417f3f:	iret   
  417f40:	dec    edi
  417f41:	inc    esi
  417f42:	(bad)  
  417f43:	leave  
  417f44:	push   eax
  417f45:	(bad)  
  417f47:	das    
  417f48:	pusha  
  417f49:	xor    eax,0x2f85e4fd
  417f4e:	mov    eax,ds:0xc61f392f
  417f53:	sbb    al,BYTE PTR [edi]
  417f55:	cwde   
  417f56:	lods   al,BYTE PTR ds:[esi]
  417f57:	retf   
  417f58:	cmp    al,0x4a
  417f5a:	cmp    DWORD PTR [esi+0xb],esp
  417f5d:	xchg   ecx,eax
  417f5e:	in     al,0x22
  417f60:	(bad)
  417f64:	stos   DWORD PTR es:[edi],eax
  417f65:	xchg   edx,eax
  417f66:	inc    esp
  417f67:	dec    ebp
  417f68:	dec    esp
  417f69:	(bad)  
  417f6a:	jns    0x417fa0
  417f6c:	cli    
  417f6d:	in     al,0x4b
  417f6f:	daa    
  417f70:	mov    al,0x80
  417f72:	ins    DWORD PTR es:[edi],dx
  417f73:	push   0x94097b69
  417f78:	aam    0xac
  417f7a:	popf   
  417f7b:	mov    edi,0x71e5f42f
  417f80:	xor    DWORD PTR [esi+0x6745eac5],0x48
  417f87:	out    0x5a,eax
  417f89:	call   0xa34a:0x8c1b72f2
  417f90:	push   es
  417f91:	(bad)  
  417f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f93:	(bad)  
  417f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f95:	icebp  
  417f96:	jmp    0x417fd7
  417f98:	and    BYTE PTR [esi-0x29],ch
  417f9b:	mov    dh,0x3d
  417f9d:	scas   al,BYTE PTR es:[edi]
  417f9e:	and    BYTE PTR [eax],cl
  417fa0:	push   eax
  417fa1:	int3   
  417fa2:	in     eax,0x89
  417fa4:	xor    BYTE PTR [ecx-0x5e],dl
  417fa7:	inc    edi
  417fa8:	es lahf 
  417faa:	pop    esi
  417fab:	imul   ecx,DWORD PTR [eax],0x7a913328
  417fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb2:	icebp  
  417fb3:	pop    eax
  417fb4:	out    0xb0,eax
  417fb6:	xchg   ecx,eax
  417fb7:	and    esp,DWORD PTR [esi]
  417fb9:	mov    cl,0xed
  417fbb:	pushf  
  417fbc:	cmp    eax,0xefb3460e
  417fc1:	push   0xec62b7e4
  417fc6:	pop    ebx
  417fc7:	push   edi
  417fc8:	xchg   ecx,eax
  417fc9:	(bad)  
  417fca:	adc    BYTE PTR [ebx],ah
  417fcc:	or     eax,DWORD PTR [ecx]
  417fce:	fld    QWORD PTR [esi-0x5b]
  417fd1:	test   DWORD PTR [eax],0x71acec82
  417fd7:	not    DWORD PTR [ebp+edx*8+0x22]
  417fdb:	add    esi,DWORD PTR [edx+0x29]
  417fde:	mov    BYTE PTR [eax+edx*2-0x68cc79c3],0x67
  417fe6:	lds    edi,FWORD PTR [esp+eax*1+0x59ac4548]
  417fed:	lahf   
  417fee:	fimul  DWORD PTR [ecx]
  417ff0:	fld    DWORD PTR [edx]
  417ff2:	and    eax,0x9228df5b
  417ff7:	lahf   
  417ff8:	mov    ecx,0x9766ea11
  417ffd:	scas   al,BYTE PTR es:[edi]
  417ffe:	pop    ds
  417fff:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418001:	cli    
  418002:	lea    esi,[ebx-0x51]
  418005:	and    al,0xc
  418007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418008:	adc    al,0x27
  41800a:	jbe    0x418028
  41800c:	inc    eax
  41800d:	pop    ss
  41800e:	xchg   BYTE PTR [esi],ch
  418010:	enter  0xa848,0xf
  418014:	(bad)  
  418015:	into   
  418016:	dec    ebx
  418017:	cmp    DWORD PTR [esi-0x75],eax
  41801a:	jbe    0x418067
  41801c:	stos   BYTE PTR es:[edi],al
  41801d:	and    cl,BYTE PTR [edx]
  41801f:	pop    edx
  418020:	pop    edx
  418021:	in     al,0xec
  418023:	jb     0x418063
  418025:	rol    DWORD PTR [ebp-0x1e],1
  418028:	push   ss
  418029:	inc    esp
  41802a:	(bad)  
  41802b:	sti    
  41802c:	and    BYTE PTR [edx-0x5b],ah
  41802f:	xor    al,0x8
  418031:	jle    0x418095
  418033:	pop    ds
  418034:	push   ebx
  418035:	cs push esi
  418037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418038:	xlat   BYTE PTR ds:[ebx]
  418039:	(bad)  
  41803a:	ins    BYTE PTR es:[edi],dx
  41803b:	fisub  WORD PTR [esi]
  41803d:	sar    DWORD PTR [esi+0x18df8d4b],cl
  418043:	sbb    al,BYTE PTR [ebp+esi*1-0x2d6e6e00]
  41804a:	inc    esp
  41804b:	ret    
  41804c:	daa    
  41804d:	hlt    
  41804e:	inc    ebp
  41804f:	mov    cs,WORD PTR [edx]
  418051:	inc    esi
  418052:	daa    
  418053:	popa   
  418054:	and    BYTE PTR [ecx-0x5a],dh
  418057:	retf   0x813b
  41805a:	adc    BYTE PTR [esi+edx*8-0x1cbd0abe],0xea
  418062:	lds    ecx,FWORD PTR [edi-0x761166b2]
  418068:	mov    esp,0xf0523332
  41806d:	ror    DWORD PTR [ecx],1
  41806f:	mov    ds:0x9f90c065,eax
  418074:	sub    al,BYTE PTR [ebp-0x78]
  418077:	cmp    ah,BYTE PTR [esi]
  418079:	xor    al,0x97
  41807b:	inc    esp
  41807c:	rcl    DWORD PTR [ebx+esi*4-0x3f],cl
  418080:	sahf   
  418081:	mov    ch,0xc9
  418083:	or     esp,DWORD PTR [esp+ebx*2-0x796c380]
  41808a:	es (bad) 
  41808c:	mov    BYTE PTR [ebp-0x7a17968b],dh
  418092:	lds    edi,FWORD PTR [edi+0x565c357b]
  418098:	ss nop
  41809a:	cdq    
  41809b:	int    0x16
  41809d:	in     al,0x4a
  41809f:	dec    edi
  4180a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a1:	cmp    edi,eax
  4180a3:	xchg   edi,eax
  4180a4:	xlat   BYTE PTR ds:[ebx]
  4180a5:	xchg   BYTE PTR [esi-0x16239747],dl
  4180ab:	sub    eax,0xa33f6bae
  4180b0:	mov    al,ds:0xa5e9ceb2
  4180b5:	push   edi
  4180b6:	ret    0x1e9b
  4180b9:	mov    fs,WORD PTR [ebx]
  4180bb:	pop    ebp
  4180bc:	dec    esp
  4180bd:	sar    esp,1
  4180bf:	bound  ebp,QWORD PTR [ecx+0x35]
  4180c2:	jp     0x4180fd
  4180c4:	mov    ah,0xac
  4180c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c8:	xchg   edx,eax
  4180c9:	adc    ecx,DWORD PTR [ecx+edx*2+0x26]
  4180cd:	pop    es
  4180ce:	mov    ecx,DWORD PTR [ecx+0x3ddbe872]
  4180d4:	pop    esi
  4180d5:	xor    eax,0x57aad03f
  4180da:	xchg   cl,ch
  4180dc:	mov    al,ds:0x4e36c60c
  4180e1:	test   DWORD PTR [eax],ecx
  4180e3:	cwde   
  4180e4:	mov    edx,0x6d14dc22
  4180e9:	sub    al,0x86
  4180eb:	test   edx,edi
  4180ed:	dec    esp
  4180ee:	or     al,0x0
  4180f0:	in     eax,0x1a
  4180f2:	mov    edi,0xeccf8aec
  4180f7:	stc    
  4180f8:	jnp    0x4180bb
  4180fa:	pop    ss
  4180fb:	repz push ebx
  4180fd:	mov    ah,0x82
  4180ff:	div    BYTE PTR [ecx-0x4c]
  418102:	dec    ebx
  418103:	fidiv  DWORD PTR [esi-0x59c0693a]
  418109:	fld    QWORD PTR [ecx+0x57]
  41810c:	in     eax,0x38
  41810e:	iret   
  41810f:	loopne 0x41809c
  418111:	mov    ch,0xad
  418113:	add    edi,esi
  418115:	shl    DWORD PTR gs:[ecx],cl
  418118:	icebp  
  418119:	pop    es
  41811a:	(bad)  
  41811d:	in     eax,0x77
  41811f:	or     eax,0x8fc095a0
  418124:	fs mov ch,0x66
  418127:	aaa    
  418128:	ja     0x41818c
  41812a:	int    0x25
  41812c:	aas    
  41812d:	enter  0xcc53,0x0
  418131:	fwait
  418132:	cwde   
  418133:	pop    esi
  418134:	jle    0x4180ff
  418136:	jmp    0x4180da
  418138:	sti    
  418139:	mov    DWORD PTR [edx+0x6272352d],eax
  41813f:	and    edx,DWORD PTR [edx+0x59]
  418142:	inc    ebp
  418143:	and    ebp,DWORD PTR [ecx-0x13]
  418146:	scas   eax,DWORD PTR es:[edi]
  418147:	retf   0x24a6
  41814a:	dec    eax
  41814b:	mov    al,ds:0x8ad99fb1
  418150:	data16 es ror cl,1
  418154:	fnsave [ecx]
  418156:	or     eax,0xf66d3862
  41815b:	pop    edx
  41815c:	pop    ebx
  41815d:	xor    eax,DWORD PTR [esi-0x7]
  418160:	fs aaa 
  418162:	mov    edx,0x6d59220d
  418167:	mov    ebp,0x232fc42f
  41816c:	add    BYTE PTR [eax+ecx*4-0xbbd9ae],0x47
  418174:	scas   al,BYTE PTR es:[edi]
  418175:	sahf   
  418176:	xchg   DWORD PTR [esi],esp
  418178:	jns    0x4181af
  41817a:	ret    
  41817b:	sti    
  41817c:	fstp   TBYTE PTR [ebp-0x74]
  41817f:	packuswb mm4,mm2
  418182:	inc    ebp
  418183:	xchg   esp,ebx
  418185:	fcomip st,st(6)
  418187:	ror    BYTE PTR ds:0x81eae931,cl
  41818d:	sub    eax,0xf8bc22f9
  418192:	add    DWORD PTR [esp+eiz*4],esp
  418195:	xor    DWORD PTR [ecx+0x49cf43fc],ebp
  41819b:	push   ecx
  41819c:	inc    edx
  41819d:	gs ins BYTE PTR es:[edi],dx
  41819f:	sar    DWORD PTR [eax-0x77bd0704],0x41
  4181a6:	add    al,0xa3
  4181a8:	and    dl,BYTE PTR [ebx-0x36]
  4181ab:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4181ad:	jbe    0x41818f
  4181af:	push   eax
  4181b0:	mov    ebp,0xff539ad4
  4181b5:	imul   ecx,DWORD PTR [esi],0x73
  4181b8:	dec    edi
  4181b9:	call   0xb812:0x5d8e228b
  4181c0:	fcomi  st,st(6)
  4181c2:	inc    ebp
  4181c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c4:	pop    es
  4181c5:	xor    eax,0xe1844bfd
  4181ca:	xchg   ebp,eax
  4181cb:	push   cs
  4181cc:	aaa    
  4181cd:	es adc al,0xaf
  4181d0:	pop    esp
  4181d1:	mov    ch,0xcd
  4181d3:	ror    esp,1
  4181d5:	scas   eax,DWORD PTR es:[edi]
  4181d6:	aaa    
  4181d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d8:	daa    
  4181d9:	mov    ebp,0xb54d759f
  4181de:	mov    ah,BYTE PTR [ecx]
  4181e0:	in     eax,0x0
  4181e2:	pushf  
  4181e3:	in     eax,dx
  4181e4:	popf   
  4181e5:	xor    eax,0x7f25d391
  4181ea:	test   BYTE PTR [ebx+0x4a],dh
  4181ed:	repnz mov esp,0x3ecc3ff0
  4181f3:	adc    eax,0x1e9bbe3e
  4181f8:	repnz pop esp
  4181fa:	cld    
  4181fb:	mov    dl,0x43
  4181fd:	xor    eax,0x2baa384e
  418202:	vorps  ymm5,ymm0,YMMWORD PTR [eax+0x2d205843]
  41820a:	hlt    
  41820b:	aam    0x46
  41820d:	aas    
  41820e:	stos   BYTE PTR es:[edi],al
  41820f:	pop    esp
  418210:	mov    ds:0xc12b7b5,al
  418215:	ins    DWORD PTR es:[edi],dx
  418216:	or     ecx,DWORD PTR [ecx]
  418218:	sub    BYTE PTR [ebp+0x3e98f78b],cl
  41821e:	mov    ds:0x6285667d,eax
  418223:	push   esp
  418224:	push   ebx
  418225:	push   edx
  418226:	aaa    
  418227:	test   cl,ch
  418229:	sbb    al,BYTE PTR [ebx]
  41822b:	mov    ds:0xe06df3d0,eax
  418230:	and    eax,0xde31fb12
  418235:	dec    ebp
  418236:	xor    BYTE PTR [ecx+0xed2adfa],dh
  41823c:	out    0xd1,eax
  41823e:	gs jmp 0x96a6:0x9315902b
  418246:	push   eax
  418247:	push   edx
  418248:	mov    eax,0x7ca3f05c
  41824d:	xor    eax,0x148dfdb0
  418252:	xchg   ebx,eax
  418253:	add    cl,BYTE PTR [edx+0x280cc5d2]
  418259:	cmc    
  41825a:	sar    DWORD PTR [ebp-0x2d96feb],0xe0
  418261:	ret    
  418262:	push   cs
  418263:	and    ebp,DWORD PTR [edx-0x18]
  418266:	mov    ch,0xde
  418268:	lahf   
  418269:	pusha  
  41826a:	and    eax,0x5895a44c
  41826f:	cwde   
  418270:	jnp    0x4182b6
  418272:	and    BYTE PTR [eax+0x43],al
  418275:	cmc    
  418276:	sbb    esp,DWORD PTR [ebx]
  418278:	push   esi
  418279:	imul   ebp,DWORD PTR [edi-0x441b5a02],0xb94ac62a
  418283:	adc    bh,dh
  418285:	xor    ecx,ecx
  418287:	not    DWORD PTR [edi]
  418289:	jo     0x418214
  41828b:	clc    
  41828c:	xlat   BYTE PTR ds:[ebx]
  41828d:	(bad)  
  41828e:	in     eax,0x89
  418290:	and    BYTE PTR [esi],cl
  418292:	inc    esi
  418293:	scas   eax,DWORD PTR es:[edi]
  418294:	xchg   ebx,eax
  418295:	sub    edi,DWORD PTR ds:0xd1cb58f2
  41829b:	mov    al,0xaf
  41829d:	jmp    0x41827c
  41829f:	mov    ?,WORD PTR [ebx]
  4182a1:	and    cl,BYTE PTR [eax]
  4182a3:	mov    ds:0xb44935b0,eax
  4182a8:	jmp    0x4182f7
  4182aa:	inc    edx
  4182ab:	xchg   ebp,eax
  4182ac:	mov    eax,ds:0xc2546653
  4182b1:	(bad)  
  4182b2:	mov    ebp,0x84809bf4
  4182b7:	mov    bl,0xa3
  4182b9:	jno    0x418277
  4182bb:	mov    ds:0x4074765d,al
  4182c0:	dec    ebx
  4182c1:	(bad)  
  4182c2:	inc    ebp
  4182c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182c4:	or     DWORD PTR [ecx+0x76],edx
  4182c7:	xchg   esp,eax
  4182c8:	xor    al,bl
  4182ca:	mov    esi,0x67f14c28
  4182cf:	xchg   esp,eax
  4182d0:	das    
  4182d1:	inc    ecx
  4182d2:	sub    BYTE PTR [ebx+0x34],al
  4182d5:	dec    edi
  4182d6:	inc    esp
  4182d7:	in     eax,0x98
  4182d9:	test   al,0xab
  4182db:	xor    al,0x4d
  4182dd:	dec    ecx
  4182de:	mov    esi,0xc82faae0
  4182e3:	push   es
  4182e4:	jge    0x4182c4
  4182e6:	add    BYTE PTR [eax],dh
  4182e8:	xor    BYTE PTR [ebp-0x5b1976a],0x27
  4182ef:	cdq    
  4182f0:	mov    ds:0x39d316d6,al
  4182f5:	and    al,0xf6
  4182f7:	(bad)  
  4182f8:	jg     0x4182b6
  4182fa:	xchg   edx,eax
  4182fb:	fimul  WORD PTR [edi+eiz*4-0x7bff5cc5]
  418302:	xchg   DWORD PTR ds:0x8e29f8a6,eax
  418308:	clc    
  418309:	cmp    eax,0x9f6547a6
  41830e:	gs mov esp,0x3c29b5a5
  418314:	cli    
  418315:	and    al,ch
  418317:	int    0xa6
  418319:	sub    dl,BYTE PTR [eax+0x44]
  41831c:	std    
  41831d:	dec    esp
  41831e:	and    dl,BYTE PTR [ecx+0x78bbc45e]
  418324:	scas   eax,DWORD PTR es:[edi]
  418325:	ret    
  418326:	(bad)  
  418327:	and    dh,BYTE PTR [ebx-0x4f]
  41832a:	stc    
  41832b:	out    dx,eax
  41832c:	popf   
  41832d:	cwde   
  41832e:	(bad)  
  41832f:	push   0x25
  418331:	loopne 0x4182f7
  418333:	das    
  418334:	stos   BYTE PTR es:[edi],al
  418335:	sbb    BYTE PTR [ecx],bh
  418337:	xchg   ecx,eax
  418338:	ds mov ch,0x57
  41833b:	sub    eax,0xb0043d4a
  418340:	sub    esp,edi
  418342:	vpaddusb ymm5,ymm6,YMMWORD PTR [eax+eax*2+0x4b]
  418348:	mov    esi,0x23111c7a
  41834d:	and    BYTE PTR [edx-0x65],bh
  418350:	xchg   esi,eax
  418351:	push   es
  418352:	cmp    BYTE PTR [ecx-0x43],al
  418355:	(bad)  
  418357:	inc    eax
  418358:	and    esi,DWORD PTR es:[ebx]
  41835b:	xchg   edi,eax
  41835c:	hlt    
  41835d:	xchg   al,bl
  41835f:	push   ecx
  418360:	or     ebp,DWORD PTR [ebp+edi*8-0x6fcaca0c]
  418367:	mov    ch,BYTE PTR [edx]
  418369:	popf   
  41836a:	push   es
  41836b:	nop    DWORD PTR [ecx-0x2]
  41836f:	adc    BYTE PTR [ecx-0x5b],0xbf
  418373:	aam    0x9b
  418375:	inc    edi
  418376:	loopne 0x418371
  418378:	jl     0x41832f
  41837a:	and    ch,cl
  41837c:	dec    ebx
  41837d:	and    dl,bh
  41837f:	imul   esi,edi,0xb10f45d6
  418385:	inc    ebx
  418386:	in     eax,dx
  418387:	imul   ecx,DWORD PTR [eax],0xd
  41838a:	scas   al,BYTE PTR es:[edi]
  41838b:	fwait
  41838c:	xchg   esi,eax
  41838d:	jmp    0xb25135a7
  418392:	fmul   QWORD PTR [edx-0x4b]
  418395:	xchg   esi,eax
  418396:	jg     0x4183f8
  418398:	cmc    
  418399:	dec    edi
  41839a:	hlt    
  41839b:	mov    ah,BYTE PTR [esi]
  41839d:	cmc    
  41839e:	adc    eax,0x2d91865f
  4183a3:	jmp    0xf19838f7
  4183a8:	jg     0x41841d
  4183aa:	(bad)  
  4183ac:	pushf  
  4183ad:	call   0x97b2ff77
  4183b2:	xchg   ebx,eax
  4183b3:	cdq    
  4183b4:	sub    al,0xcd
  4183b6:	xchg   ebx,eax
  4183b7:	popf   
  4183b8:	std    
  4183b9:	mov    bh,0x2e
  4183bb:	pushf  
  4183bc:	es add al,0x64
  4183bf:	mov    al,ds:0xbdcbcb2f
  4183c4:	es push 0xffffffe5
  4183c7:	dec    esp
  4183c8:	ds mov esi,ebx
  4183cb:	sub    ch,BYTE PTR [ebp+esi*1+0x55]
  4183cf:	pop    es
  4183d0:	mov    esp,0x81076211
  4183d5:	loopne 0x4183fe
  4183d7:	(bad)  
  4183d8:	clc    
  4183d9:	icebp  
  4183da:	in     eax,dx
  4183db:	jmp    0x58ff88a6
  4183e0:	outs   dx,BYTE PTR ds:[esi]
  4183e1:	rcr    DWORD PTR [edi+0x2de0a89a],0x23
  4183e8:	je     0x4183e1
  4183ea:	cmp    edi,edx
  4183ec:	xchg   edi,eax
  4183ed:	inc    ebp
  4183ee:	mov    ecx,DWORD PTR [ebx-0x7a]
  4183f1:	jbe    0x418414
  4183f3:	xor    eax,0x849a04eb
  4183f8:	jge    0x418420
  4183fa:	shl    DWORD PTR [ecx],0x23
  4183fd:	and    bh,al
  4183ff:	out    0x9f,al
  418401:	fwait
  418402:	out    0xc2,al
  418404:	and    eax,0x6cb33504
  418409:	ret    0x9f32
  41840c:	xor    BYTE PTR [ecx-0x4a8e3d1d],bh
  418412:	sub    al,0xdd
  418414:	cli    
  418415:	jae    0x418481
  418417:	pop    ecx
  418418:	push   esp
  418419:	fs ret 0xdd4d
  41841d:	fcom   QWORD PTR [edi]
  41841f:	fucomip st,st(6)
  418421:	pop    ss
  418422:	(bad)  
  418423:	ds sahf 
  418425:	xor    eax,0x764a481d
  41842a:	sbb    edi,DWORD PTR [edx-0x7c39fc40]
  418430:	push   eax
  418431:	fucomi st,st(4)
  418433:	ja     0x418462
  418435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418436:	mov    ecx,0x2ea4128e
  41843b:	and    eax,DWORD PTR [ebp+eax*2+0x69]
  41843f:	leave  
  418440:	es (bad) 
  418442:	and    BYTE PTR [edi+0x41],0xed
  418446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418447:	push   ebp
  418448:	mov    bl,0xb2
  41844a:	xor    esp,ebx
  41844c:	sbb    esp,DWORD PTR [edx]
  41844e:	stc    
  41844f:	or     eax,0xe185e2a3
  418454:	cmp    ebp,edi
  418456:	inc    ebp
  418457:	imul   esi,DWORD PTR [edx-0x67],0x679e3fd3
  41845e:	inc    ecx
  41845f:	push   edi
  418460:	ret    0x2de1
  418463:	mov    ds:0xd4479031,eax
  418468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418469:	xchg   ebp,eax
  41846a:	adc    al,0x99
  41846c:	mov    edx,0x18e3627a
  418471:	nop
  418472:	cmp    eax,0xec197af3
  418477:	test   eax,0x44762826
  41847c:	jecxz  0x4184a2
  41847e:	xchg   ebx,eax
  41847f:	cmp    eax,0xefc8fa2
  418484:	adc    DWORD PTR [edi],ecx
  418486:	inc    esi
  418487:	adc    al,0xd0
  418489:	ss fdivr st(6),st
  41848c:	adc    DWORD PTR [edi+0x36],eax
  41848f:	test   ecx,esi
  418491:	or     eax,0xa166ae26
  418496:	jb     0x418434
  418498:	stos   BYTE PTR es:[edi],al
  418499:	and    esi,eax
  41849b:	inc    ecx
  41849c:	sar    BYTE PTR [edx+0x2d],1
  41849f:	or     eax,0x1e0a1be4
  4184a4:	aam    0xe6
  4184a6:	xchg   ebp,eax
  4184a7:	mov    ds:0xbc3aa6ac,al
  4184ac:	jnp    0x4184c1
  4184ae:	inc    esi
  4184af:	das    
  4184b0:	out    dx,eax
  4184b1:	push   esi
  4184b2:	mov    gs,WORD PTR [edi]
  4184b4:	xchg   DWORD PTR [ecx+0x73],ebp
  4184b7:	(bad)  
  4184b8:	dec    ebp
  4184b9:	ja     0x418496
  4184bb:	mov    ds:0x752582de,al
  4184c0:	and    eax,0xfa5a774a
  4184c5:	hlt    
  4184c6:	sti    
  4184c7:	mov    esi,0x431da5fc
  4184cc:	sub    eax,0x4faf2c35
  4184d1:	jmp    0xc989:0xe1c953e9
  4184d8:	pop    ss
  4184d9:	fwait
  4184da:	scas   eax,DWORD PTR es:[edi]
  4184db:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184dd:	lahf   
  4184de:	scas   al,BYTE PTR es:[edi]
  4184df:	xchg   edx,eax
  4184e0:	sahf   
  4184e1:	add    BYTE PTR [eax+ecx*8-0x5d967b82],dl
  4184e8:	call   0xb21c8f88
  4184ed:	(bad)  [ebx+edx*4+0x25]
  4184f1:	or     eax,DWORD PTR [ebx+0x2f]
  4184f4:	pop    edx
  4184f5:	ins    BYTE PTR es:[edi],dx
  4184f6:	dec    ecx
  4184f7:	jecxz  0x41855e
  4184f9:	scas   al,BYTE PTR es:[edi]
  4184fa:	addr16 inc ecx
  4184fc:	test   cl,bh
  4184fe:	inc    ebp
  4184ff:	push   cs
  418500:	and    al,0xf5
  418502:	xchg   ecx,eax
  418503:	push   ecx
  418504:	cwde   
  418505:	pop    ecx
  418506:	add    al,BYTE PTR [ebp+0x3f564ce6]
  41850c:	push   esi
  41850d:	mov    esi,0xdea8d84
  418512:	popw   ds
  418514:	sbb    DWORD PTR [esi],eax
  418516:	xchg   esi,eax
  418517:	cmp    eax,0xbba2a532
  41851c:	es add edx,ebp
  41851f:	gs int 0xb9
  418522:	push   esp
  418523:	clc    
  418524:	pop    edi
  418525:	xor    eax,0xc7c95757
  41852a:	sub    eax,0xc5b79704
  41852f:	aas    
  418530:	xchg   esp,eax
  418531:	sti    
  418532:	xor    DWORD PTR [edi-0x6a],esi
  418535:	pop    edi
  418536:	sub    BYTE PTR [ecx+0x22f2fd27],0x39
  41853d:	loope  0x4185a0
  41853f:	pop    esi
  418540:	and    eax,0xe8251ef6
  418545:	adc    bl,BYTE PTR [ecx+eiz*2+0x33]
  418549:	mov    ch,0xc8
  41854b:	hlt    
  41854c:	push   es
  41854d:	mov    dl,0x7f
  41854f:	pop    edi
  418550:	sub    dl,BYTE PTR [edi]
  418552:	inc    esi
  418553:	int    0xd5
  418555:	jle    0x41854e
  418557:	jmp    0x418505
  418559:	das    
  41855a:	repz sub eax,0xa1999484
  418560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418561:	mov    ds:0xc5e4a958,eax
  418566:	add    eax,0xfdc89ba7
  41856b:	xor    DWORD PTR [eax],ebx
  41856d:	and    DWORD PTR [ebp+0x5d],ebp
  418570:	lds    edi,FWORD PTR [edx]
  418572:	enter  0x8513,0xe1
  418576:	push   ebp
  418577:	les    esp,FWORD PTR [ebp-0x4b]
  41857a:	call   0x8ad7:0xe7608db1
  418581:	xor    al,BYTE PTR [esi-0x24]
  418584:	imul   esi,esp,0x6d
  418587:	mov    al,ds:0xaa2f30e9
  41858c:	jl     0x4185cb
  41858e:	dec    esi
  41858f:	and    ebx,ebx
  418591:	cld    
  418592:	or     edi,ebp
  418594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418595:	popa   
  418596:	nop
  418597:	fidiv  WORD PTR [ecx+edi*4-0x29]
  41859b:	test   eax,0xa6ca0cc3
  4185a0:	jae    0x4185d7
  4185a2:	ror    DWORD PTR [esi],0x99
  4185a5:	ret    0xf32e
  4185a8:	mov    al,0xd1
  4185aa:	popf   
  4185ab:	out    dx,eax
  4185ac:	xlat   BYTE PTR ds:[ebx]
  4185ad:	int    0xc5
  4185af:	xchg   ebp,eax
  4185b0:	jmp    0x58a0:0x25027dbe
  4185b7:	imul   edi,DWORD PTR [ebx+0x3c],0x170ea359
  4185be:	and    ch,dl
  4185c0:	mov    ds:0xcc1dbf98,al
  4185c5:	add    ebp,esi
  4185c7:	out    0x10,eax
  4185c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ca:	pop    ds
  4185cb:	cld    
  4185cc:	(bad)  [edx-0x4a]
  4185cf:	lahf   
  4185d0:	test   ebp,ebp
  4185d2:	and    BYTE PTR [ecx],ah
  4185d4:	fidivr DWORD PTR [edx]
  4185d6:	or     eax,0xf77b0720
  4185db:	adc    BYTE PTR [eax+0x7d],bh
  4185de:	ds jecxz 0x418579
  4185e1:	push   eax
  4185e2:	lods   eax,DWORD PTR ds:[esi]
  4185e3:	mov    esi,0x7f461860
  4185e8:	and    ebx,edi
  4185ea:	es ss (bad) 
  4185ed:	fcmovnb st,st(5)
  4185ef:	mov    al,ds:0xae9c9292
  4185f4:	scas   eax,DWORD PTR es:[edi]
  4185f5:	sub    BYTE PTR [esp+ebx*8],ch
  4185f8:	push   ebp
  4185f9:	les    esp,FWORD PTR [ebx]
  4185fb:	adc    DWORD PTR [edi],ebp
  4185fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185fe:	pop    ds
  4185ff:	xchg   ecx,eax
  418600:	sbb    esi,0x35fa6306
  418606:	push   edx
  418607:	sbb    ah,BYTE PTR [edi-0x43]
  41860a:	inc    ebp
  41860b:	xor    DWORD PTR [eax+ebp*2],edi
  41860e:	push   eax
  41860f:	ins    BYTE PTR es:[edi],dx
  418610:	jge    0x418667
  418612:	rol    DWORD PTR [edi-0x629db5e5],0xe5
  418619:	mov    bh,0x7e
  41861b:	das    
  41861c:	pop    esi
  41861d:	mov    dh,0x28
  41861f:	mov    esp,DWORD PTR [ebp-0xb]
  418622:	fwait
  418623:	push   ebp
  418624:	fbld   TBYTE PTR [edi-0x9ed08f7]
  41862a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41862b:	jle    0x418608
  41862d:	in     al,dx
  41862e:	retf   0x461b
  418631:	sub    al,0x1e
  418633:	xchg   ebp,eax
  418634:	fsub   DWORD PTR [edx]
  418636:	xabort 0x13
  418639:	fnstsw WORD PTR [eax-0xef7499c]
  41863f:	loop   0x41864a
  418641:	mov    ah,0x6a
  418643:	push   ds
  418644:	cs and ch,al
  418647:	dec    ecx
  418648:	adc    BYTE PTR [ecx-0x3ac8bf9a],0x74
  41864f:	add    eax,0xbf76b522
  418654:	sbb    eax,ebx
  418656:	sbb    cl,0x6e
  418659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865a:	sti    
  41865b:	je     0x4185fb
  41865d:	stc    
  41865e:	mov    al,0xb8
  418660:	ins    BYTE PTR es:[edi],dx
  418661:	push   ds
  418662:	in     al,dx
  418663:	xchg   BYTE PTR [edi-0x4d],dh
  418666:	fcmovb st,st(2)
  418668:	pop    ebx
  418669:	scas   al,BYTE PTR es:[edi]
  41866a:	rol    BYTE PTR [ebx],0x7
  41866d:	clc    
  41866e:	outs   dx,BYTE PTR cs:[esi]
  418670:	ror    edx,0x45
  418673:	call   0xf28832de
  418678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418679:	mov    ecx,0xad4fbc00
  41867e:	div    DWORD PTR [ebp+0x2e]
  418681:	rcr    BYTE PTR [edx+0x4e75138a],0x8f
  418688:	imul   edx,eax,0x12
  41868b:	and    ebp,DWORD PTR [ebx]
  41868d:	in     eax,dx
  41868e:	push   ecx
  41868f:	in     al,0xa5
  418691:	mov    DWORD PTR [eax-0x4e4413d5],ebp
  418697:	pusha  
  418698:	xchg   DWORD PTR [ebp-0x795738e5],esi
  41869e:	sub    al,0x8e
  4186a0:	ror    BYTE PTR [ecx],1
  4186a2:	mov    al,ds:0xbcb560d4
  4186a7:	sub    bl,cl
  4186a9:	dec    esi
  4186aa:	pop    esi
  4186ab:	adc    DWORD PTR [ebp+0x35],ebx
  4186ae:	pusha  
  4186af:	push   ecx
  4186b0:	movq   mm2,mm2
  4186b3:	dec    eax
  4186b4:	adc    DWORD PTR [esi],edx
  4186b6:	(bad)  
  4186b7:	sub    al,0xe9
  4186b9:	cli    
  4186ba:	sbb    ebp,eax
  4186bc:	jnp    0x4186b2
  4186be:	rol    BYTE PTR [eax+eiz*1+0xc],0xac
  4186c3:	sbb    eax,DWORD PTR [ebp+0x4c]
  4186c6:	iret   
  4186c7:	mov    ecx,0x15581d6c
  4186cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186cd:	cld    
  4186ce:	fisub  DWORD PTR [esi]
  4186d0:	(bad)  
  4186d1:	ins    DWORD PTR es:[edi],dx
  4186d2:	sub    edx,DWORD PTR [esi-0x547cd1c7]
  4186d8:	daa    
  4186d9:	cmc    
  4186da:	and    esi,DWORD PTR [ecx-0x5e4f0bbd]
  4186e0:	inc    ebp
  4186e1:	jmp    0x7f9a:0xaffa235c
  4186e8:	pusha  
  4186e9:	syscall 
  4186eb:	mov    ds:0xd66f3100,eax
  4186f0:	repz (bad) 
  4186f3:	mov    ds:0x4d6f199,al
  4186f8:	pop    esi
  4186f9:	loop   0x418740
  4186fb:	inc    ebp
  4186fc:	iret   
  4186fd:	jnp    0x4186e7
  4186ff:	into   
  418700:	leave  
  418701:	(bad)  
  418702:	push   ss
  418703:	sbb    eax,0xa31034a9
  418708:	xor    BYTE PTR [eax-0x4278ab32],bl
  41870e:	xchg   ecx,eax
  41870f:	jmp    0x4186b2
  418711:	push   ecx
  418712:	mov    al,0xe3
  418714:	cwde   
  418715:	jne    0x41875f
  418717:	and    eax,0x45055698
  41871c:	cmc    
  41871d:	es push es
  41871f:	add    al,0x3f
  418721:	mov    edx,0x2b246724
  418726:	(bad)  
  418727:	or     eax,DWORD PTR [eax]
  418729:	xchg   ecx,eax
  41872a:	pop    edx
  41872b:	clc    
  41872c:	jno    0x418726
  41872e:	mov    dh,0x12
  418730:	or     eax,0x183260f6
  418735:	mov    es,WORD PTR [eax-0x5d]
  418738:	jne    0x4186eb
  41873a:	xlat   BYTE PTR ds:[ebx]
  41873b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41873c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873d:	pop    gs
  41873f:	popa   
  418740:	jb     0x418745
  418742:	repz (bad) 
  418745:	xor    DWORD PTR [ebx-0x7f85eafa],ecx
  41874b:	call   0x72a6:0xa346446f
  418752:	xchg   edx,eax
  418753:	cmp    BYTE PTR [ebx+0x2359bcb9],dh
  418759:	mov    ch,0xb
  41875b:	mov    esi,0xa3f02124
  418760:	cmp    BYTE PTR [ebp+0x22],dl
  418763:	mov    ah,0xa5
  418765:	inc    edi
  418766:	popa   
  418767:	add    DWORD PTR [ebx-0x6e],eax
  41876a:	xchg   BYTE PTR [ebx+0x30],al
  41876d:	inc    eax
  41876e:	(bad)  
  41876f:	push   esp
  418770:	inc    edx
  418771:	lock xor al,0x23
  418774:	or     eax,0xa677f4f5
  418779:	retf   
  41877a:	in     al,dx
  41877b:	xchg   esi,eax
  41877c:	bnd js 0x4187e3
  41877f:	cdq    
  418780:	js     0x418737
  418782:	ins    BYTE PTR es:[edi],dx
  418783:	cmp    ecx,DWORD PTR [edx]
  418785:	(bad)  
  418786:	retf   0xccb4
  418789:	xor    eax,DWORD PTR [esi+0x44]
  41878c:	xor    DWORD PTR [ecx],esp
  41878e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41878f:	inc    eax
  418790:	in     eax,dx
  418791:	pop    es
  418792:	pop    ds
  418793:	mov    dh,0xe
  418795:	(bad)  
  418797:	mov    ds:0x385857b5,eax
  41879c:	es mov eax,0x1f9a3969
  4187a2:	cmp    DWORD PTR [esi],ebx
  4187a4:	xor    BYTE PTR [ebp+0x52ebf025],0x6d
  4187ab:	mov    eax,es:0x37b1202b
  4187b1:	mov    ch,0x9
  4187b3:	adc    dh,ah
  4187b5:	add    ah,BYTE PTR [edx+0x65]
  4187b8:	xchg   BYTE PTR [ebp+0x18d56396],dh
  4187be:	mov    dh,0x1b
  4187c0:	test   al,0xa8
  4187c2:	sub    BYTE PTR [ebx],bl
  4187c4:	xor    dh,BYTE PTR ds:0x29579951
  4187ca:	loopne 0x418792
  4187cc:	push   cs
  4187cd:	mov    cl,0xe5
  4187cf:	lds    ecx,FWORD PTR [eax+0x4e]
  4187d2:	add    al,0x48
  4187d4:	xchg   esp,eax
  4187d5:	icebp  
  4187d6:	je     0x4187b6
  4187d8:	inc    esi
  4187d9:	ror    BYTE PTR ds:0xd209229a,0xed
  4187e0:	push   ss
  4187e1:	jnp    0x418860
  4187e3:	aaa    
  4187e4:	mov    ebp,DWORD PTR [eax]
  4187e6:	mov    dh,0xca
  4187e8:	sub    eax,0x5a4d8135
  4187ed:	xor    eax,DWORD PTR [ebx+0x73]
  4187f0:	mov    DWORD PTR [ecx],eax
  4187f2:	(bad)  
  4187f3:	lods   al,BYTE PTR ds:[esi]
  4187f4:	mov    ds:0x1edbf49c,eax
  4187f9:	mov    ds:0x7e0a2c10,al
  4187fe:	pop    eax
  4187ff:	mov    ds:0x56675d79,eax
  418804:	and    eax,0xa22f3bf1
  418809:	jb     0x4187fc
  41880b:	shr    DWORD PTR [esi+0x11],cl
  41880e:	add    al,0x92
  418810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418811:	and    dh,cl
  418813:	pushf  
  418814:	lods   al,BYTE PTR ds:[esi]
  418815:	mov    ebp,0xb7268486
  41881a:	in     al,0x86
  41881c:	dec    esi
  41881d:	xchg   ebx,ebp
  41881f:	repz sub BYTE PTR [ebp-0x5e0832d2],dh
  418826:	js     0x4187e2
  418828:	push   ebx
  418829:	addr16 mov dh,0x79
  41882c:	pushf  
  41882d:	faddp  st(0),st
  41882f:	stos   DWORD PTR es:[edi],eax
  418830:	test   al,0x67
  418832:	ret    0xe368
  418835:	adc    al,dh
  418837:	push   esi
  418838:	aam    0x6a
  41883a:	test   DWORD PTR [esi+0x23272ab2],ebx
  418840:	cmp    edi,eax
  418842:	push   eax
  418843:	loope  0x4187eb
  418845:	das    
  418846:	pop    edx
  418847:	xchg   edx,eax
  418848:	push   0x9c10f8b7
  41884d:	xor    eax,0x5d42fb4c
  418852:	mov    bh,0x45
  418854:	repz loop 0x41881c
  418857:	ins    BYTE PTR es:[edi],dx
  418858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418859:	cwde   
  41885a:	stc    
  41885b:	cmp    eax,0x8310cac3
  418860:	js     0x418817
  418862:	sbb    ch,BYTE PTR ds:0x31fa4c86
  418868:	cwde   
  418869:	std    
  41886a:	lds    ecx,FWORD PTR [edi+0x5c]
  41886d:	test   DWORD PTR [ebx],ebp
  41886f:	inc    esp
  418870:	cmp    DWORD PTR [edx],0x45575634
  418876:	fbld   TBYTE PTR [edx-0x29a1ffeb]
  41887c:	es popa 
  41887e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41887f:	pop    ecx
  418880:	cmp    al,0xeb
  418882:	cmc    
  418883:	retf   0x357c
  418886:	xchg   edx,eax
  418887:	and    esp,DWORD PTR [ebp-0x43]
  41888a:	sbb    ebp,DWORD PTR [esi]
  41888c:	cmp    BYTE PTR [esi],ah
  41888e:	(bad)  
  41888f:	mov    fs,WORD PTR [edx-0x647a3469]
  418895:	mov    ecx,0x9461cdec
  41889a:	sbb    al,0x23
  41889c:	inc    ebx
  41889d:	aaa    
  41889e:	outs   dx,BYTE PTR ds:[esi]
  41889f:	sub    dh,BYTE PTR [eax+0x7a73c5e0]
  4188a5:	cmp    DWORD PTR [ebx],0xffffff98
  4188a8:	mov    edx,0xaa2fafe9
  4188ad:	or     BYTE PTR [ecx-0x5d],dl
  4188b0:	pop    edi
  4188b1:	jo     0x41887d
  4188b3:	int3   
  4188b4:	and    al,0xaf
  4188b6:	aam    0xd
  4188b8:	out    0xcf,eax
  4188ba:	add    DWORD PTR [eax-0x2ce699bf],0x23250d69
  4188c4:	inc    ebp
  4188c5:	xor    DWORD PTR [eax+edx*1+0x26],ecx
  4188c9:	repz dec edi
  4188cb:	jae    0x4188d3
  4188cd:	sbb    BYTE PTR [edi-0x71e6bde0],cl
  4188d3:	sbb    DWORD PTR [esi+ecx*1],esp
  4188d6:	pop    edi
  4188d7:	sub    ch,ch
  4188d9:	jne    0x4188b0
  4188db:	lea    edi,ds:0xa617e347
  4188e1:	mov    ch,BYTE PTR [esp+edx*2+0xe]
  4188e5:	sub    eax,0x26b91cb1
  4188ea:	(bad)  
  4188eb:	hlt    
  4188ec:	jge    0x4188a1
  4188ee:	jmp    0x837e:0x1ef56f76
  4188f5:	fcmovnb st,st(5)
  4188f7:	call   0x9a383652
  4188fc:	out    dx,al
  4188fd:	push   ecx
  4188fe:	aad    0x3
  418900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418901:	arpl   WORD PTR [edi],bx
  418903:	call   0xa82:0x15567526
  41890a:	in     eax,dx
  41890b:	push   ds
  41890c:	pop    ss
  41890d:	mov    eax,ds:0x4463154
  418912:	arpl   WORD PTR [esi+0x48],cx
  418915:	cmc    
  418916:	out    0xea,al
  418918:	mov    ss,WORD PTR [eax]
  41891a:	inc    esi
  41891b:	xchg   DWORD PTR [eax+0x4e453547],edx
  418921:	test   ch,0xff
  418924:	jb     0x41892f
  418926:	shl    BYTE PTR [edi],cl
  418928:	mov    edi,0x9fd607db
  41892d:	and    edi,DWORD PTR [ebx]
  41892f:	xchg   DWORD PTR [edi-0x3524614b],edx
  418935:	add    DWORD PTR [esi-0x11225980],esi
  41893b:	pop    edx
  41893c:	data16 jno 0x418973
  41893f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418940:	xchg   ecx,eax
  418941:	ret    
  418942:	push   ebx
  418943:	inc    eax
  418944:	sbb    BYTE PTR [ecx-0x5f],al
  418947:	pop    ds
  418948:	fcom   DWORD PTR [ecx-0x23]
  41894b:	mov    dl,0x66
  41894d:	add    ch,BYTE PTR [ebp+0x45e55396]
  418953:	add    ecx,0xc56651d
  418959:	dec    edi
  41895a:	and    ecx,DWORD PTR [esi+0x1f737906]
  418960:	adc    eax,0xb6287e70
  418965:	test   ebp,ebx
  418967:	xor    edi,edx
  418969:	rol    DWORD PTR [ebp-0x5],1
  41896c:	dec    edi
  41896d:	call   0x407c:0xf39dfea0
  418974:	stos   DWORD PTR es:[edi],eax
  418975:	in     eax,0x2d
  418977:	mov    ds:0x18e20810,eax
  41897c:	mov    ds:0xf4ea4431,al
  418981:	sub    bl,dh
  418983:	test   eax,0x5dcf8e05
  418988:	push   es
  418989:	jbe    0x41897f
  41898b:	mov    ds:0x1f8277fc,al
  418990:	es push 0x97469099
  418996:	stos   DWORD PTR es:[edi],eax
  418997:	dec    edx
  418998:	adc    dh,BYTE PTR [ebx+eax*1]
  41899b:	fdivp  st(2),st
  41899d:	xor    al,0x85
  41899f:	jp     0x418a03
  4189a1:	dec    edi
  4189a2:	mov    ah,0x41
  4189a4:	lahf   
  4189a5:	push   0x9
  4189a7:	pop    ebp
  4189a8:	push   edx
  4189a9:	mov    ah,0x13
  4189ab:	test   BYTE PTR [ebp+eax*1+0x14],dh
  4189af:	scas   eax,DWORD PTR es:[edi]
  4189b0:	dec    ecx
  4189b1:	lds    esi,FWORD PTR [edx+0x2c]
  4189b4:	sub    al,0x6e
  4189b6:	out    0xa1,eax
  4189b8:	inc    ecx
  4189b9:	pop    ebx
  4189ba:	xchg   esi,eax
  4189bb:	(bad)  
  4189bc:	mov    edx,0x42e34e2b
  4189c1:	mov    ch,0x47
  4189c3:	jo     0x418a29
  4189c5:	push   esi
  4189c6:	dec    ebp
  4189c7:	(bad)  
  4189c8:	addr16 push cs
  4189ca:	inc    esi
  4189cb:	sub    ah,bh
  4189cd:	aaa    
  4189ce:	fwait
  4189cf:	jns    0x418a0b
  4189d1:	ds retf 
  4189d3:	xchg   BYTE PTR [eax-0x39],bl
  4189d6:	frstor [edx-0x5f2b9b52]
  4189dc:	es jnp 0x418976
  4189df:	dec    eax
  4189e0:	sti    
  4189e1:	adc    DWORD PTR [ebp-0x67],esp
  4189e4:	ss mov ch,0x93
  4189e7:	addps  xmm4,xmm0
  4189ea:	(bad)  
  4189eb:	mov    ebp,0x1c461c4e
  4189f0:	pop    ds
  4189f1:	std    
  4189f2:	push   eax
  4189f3:	out    0xfc,al
  4189f5:	aad    0x42
  4189f7:	xor    eax,0xa3032dbf
  4189fc:	mov    ebx,0xa266d222
  418a01:	ds cdq 
  418a03:	jmp    0x418a24
  418a05:	sar    BYTE PTR [ebp+0x114791c2],0x36
  418a0c:	test   DWORD PTR [ebx+0x7735a262],eax
  418a12:	pop    ds
  418a13:	or     bl,al
  418a15:	aad    0x44
  418a17:	adc    ebp,DWORD PTR [ebx]
  418a19:	jo     0x418a04
  418a1b:	fidivr WORD PTR [ecx+0x45]
  418a1e:	into   
  418a1f:	fidiv  WORD PTR [ebx+0x35]
  418a22:	or     bh,BYTE PTR [edi]
  418a24:	xlat   BYTE PTR ds:[ebx]
  418a25:	pop    ss
  418a26:	and    BYTE PTR [eax+0x65c298f4],ch
  418a2c:	dec    ecx
  418a2d:	dec    edi
  418a2e:	scas   al,BYTE PTR es:[edi]
  418a2f:	adc    al,BYTE PTR [edx+0xd]
  418a32:	pop    esi
  418a33:	in     eax,dx
  418a34:	sub    ch,ah
  418a36:	adc    al,0xc9
  418a38:	jbe    0x418a40
  418a3a:	xor    eax,0xd2b48623
  418a3f:	test   al,0xa5
  418a41:	pusha  
  418a42:	fiadd  DWORD PTR [eax]
  418a44:	xchg   edi,eax
  418a45:	or     BYTE PTR [eax],dl
  418a47:	adc    eax,0x1ce5eb3a
  418a4c:	xchg   ebx,eax
  418a4d:	ins    BYTE PTR es:[edi],dx
  418a4e:	push   es
  418a4f:	lods   eax,DWORD PTR ds:[esi]
  418a50:	pop    edx
  418a51:	xchg   ecx,eax
  418a52:	mov    dh,0x9f
  418a54:	cwde   
  418a55:	cmc    
  418a56:	mov    ?,eax
  418a58:	cmp    dl,bh
  418a5a:	inc    ebp
  418a5b:	xchg   esp,eax
  418a5c:	aad    0x3c
  418a5e:	js     0x418a9f
  418a60:	stos   BYTE PTR es:[edi],al
  418a61:	jne    0x418a93
  418a63:	or     DWORD PTR [esi*1-0x16bfdced],esp
  418a6a:	push   0x29
  418a6c:	mov    eax,ds:0x3b0abd71
  418a71:	cmc    
  418a72:	inc    edi
  418a73:	add    edx,DWORD PTR [esi]
  418a75:	adc    al,0x56
  418a77:	push   DWORD PTR ss:[eax+0x1a3e7744]
  418a7e:	in     al,0xff
  418a80:	xor    al,0x7d
  418a82:	popa   
  418a83:	jmp    0x418ad0
  418a85:	mov    ebp,0x12e9fe60
  418a8a:	mov    edi,0x5e4b51d2
  418a8f:	sbb    eax,0xb305e211
  418a94:	xchg   edx,eax
  418a95:	mov    ch,0x3a
  418a97:	imul   ecx,DWORD PTR [edx+0x1a],0x73
  418a9b:	pop    esi
  418a9c:	and    DWORD PTR [ebx],eax
  418a9e:	push   ebp
  418a9f:	or     eax,0x8ba9fe10
  418aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa5:	pop    ebp
  418aa6:	mov    edi,0x75f1d6fd
  418aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aac:	mov    ds:0xf5290815,eax
  418ab1:	pop    ss
  418ab2:	mov    DWORD PTR [ebp-0x5b],esp
  418ab5:	aad    0x76
  418ab7:	iret   
  418ab8:	ret    0x9088
  418abb:	mov    gs,WORD PTR [edx-0x70]
  418abe:	aaa    
  418abf:	test   eax,0x8c29b6c
  418ac4:	jl     0x418ade
  418ac6:	jbe    0x418a63
  418ac8:	cli    
  418ac9:	push   edi
  418aca:	and    ch,al
  418acc:	into   
  418acd:	dec    ebx
  418ace:	push   ss
  418acf:	and    edi,ebx
  418ad1:	rcr    esp,1
  418ad3:	sti    
  418ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad5:	(bad)  
  418ad6:	out    0x4c,eax
  418ad8:	adc    BYTE PTR [eax],ch
  418ada:	jp     0x418af6
  418adc:	std    
  418add:	xor    al,0x72
  418adf:	sbb    DWORD PTR [edi],esp
  418ae1:	stc    
  418ae2:	pop    ss
  418ae3:	mov    ds:0x7f82d0dc,al
  418ae8:	(bad)  
  418ae9:	adc    eax,0xc5d92746
  418aee:	xor    edi,ebx
  418af0:	scas   al,BYTE PTR es:[edi]
  418af1:	adc    dh,ch
  418af3:	cdq    
  418af4:	ja     0x418ac9
  418af6:	inc    esi
  418af7:	mov    ds:0xa3d5f63a,al
  418afc:	sub    ch,BYTE PTR [esi+0x44]
  418aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b00:	sbb    eax,edi
  418b02:	or     BYTE PTR [ebp+0x2e],dl
  418b05:	mov    ebp,0xb5a1d7f1
  418b0a:	stos   DWORD PTR es:[edi],eax
  418b0b:	pop    ds
  418b0c:	daa    
  418b0d:	and    eax,0x15bec8c8
  418b12:	(bad)  
  418b13:	mov    bl,BYTE PTR [edi]
  418b15:	es test eax,0x971c4dd6
  418b1b:	mov    esp,0xc3fc2d2
  418b20:	and    ecx,eax
  418b22:	sbb    eax,0x453f6623
  418b27:	and    eax,ebp
  418b29:	inc    esi
  418b2a:	shr    esp,1
  418b2c:	inc    esi
  418b2d:	and    eax,0xb59848da
  418b32:	mov    bh,0xcf
  418b34:	in     al,0xd6
  418b36:	jnp    0x418ac8
  418b38:	add    eax,0x8a014bf0
  418b3d:	retf   
  418b3e:	aam    0x8f
  418b40:	adc    al,0x66
  418b42:	scas   eax,DWORD PTR es:[edi]
  418b43:	loope  0x418ba8
  418b45:	mov    esi,0x781e99fc
  418b4a:	dec    esi
  418b4b:	xor    BYTE PTR ds:0x8e84846d,al
  418b51:	call   0x70753a8
  418b56:	cmp    esp,edx
  418b58:	fild   QWORD PTR [ebx-0x5f3e40be]
  418b5e:	je     0x418b33
  418b60:	xor    al,0x43
  418b62:	add    DWORD PTR [eax],esp
  418b64:	cmp    DWORD PTR [ecx+0x24],0x47
  418b68:	pop    edx
  418b69:	add    DWORD PTR [esi-0x7490fa65],0x2a
  418b70:	lahf   
  418b71:	pop    ebp
  418b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b73:	cld    
  418b74:	mov    WORD PTR [ebp+0x57],?
  418b77:	lods   eax,DWORD PTR ds:[esi]
  418b78:	adc    BYTE PTR [ecx+0x9],dh
  418b7b:	jbe    0x418b0b
  418b7d:	xor    eax,0xc756a361
  418b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b83:	pop    eax
  418b84:	(bad)  
  418b85:	hlt    
  418b86:	lds    eax,FWORD PTR [esp+edx*1]
  418b89:	push   es
  418b8a:	mov    esp,0xf50dc664
  418b8f:	cmp    eax,ebx
  418b91:	pop    edi
  418b92:	repz and cl,dl
  418b95:	mov    bh,0xfa
  418b97:	add    eax,0x4aed7826
  418b9c:	data16 jns 0x418b9d
  418b9f:	int    0xcf
  418ba1:	cld    
  418ba2:	adc    eax,0x597a2e43
  418ba7:	mov    ds:0xd0755f32,eax
  418bac:	jmp    0x3db4:0x160cc5be
  418bb3:	sub    al,0x53
  418bb5:	add    DWORD PTR [esi+0x2b53e094],edi
  418bbb:	and    eax,DWORD PTR [esi-0x6b]
  418bbe:	xchg   esp,eax
  418bbf:	out    dx,al
  418bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc1:	jb     0x418b95
  418bc3:	ds add al,0xe7
  418bc6:	idiv   DWORD PTR [edx+0x6983b53d]
  418bcc:	sub    al,0x6a
  418bce:	jmp    0x418c39
  418bd0:	sbb    al,0xad
  418bd2:	inc    esp
  418bd3:	xchg   esi,eax
  418bd4:	mov    WORD PTR [eax],?
  418bd6:	addr16 or al,0x1b
  418bd9:	out    0x75,al
  418bdb:	push   ebx
  418bdc:	pop    ecx
  418bdd:	jge    0x418b80
  418bdf:	sbb    BYTE PTR [edi],0xdb
  418be2:	push   ebp
  418be3:	sbb    bl,cl
  418be5:	or     al,0x2f
  418be7:	mov    ds:0x74c60774,eax
  418bec:	adc    al,0xc4
  418bee:	sbb    DWORD PTR [ebp+eiz*4-0x677fdaa1],esp
  418bf5:	push   ebp
  418bf6:	sub    BYTE PTR [ebx],ah
  418bf8:	mov    cl,0x19
  418bfa:	push   ds
  418bfb:	(bad)  
  418bfc:	lods   eax,DWORD PTR es:[esi]
  418bfe:	iret   
  418bff:	mov    ds:0x99691045,al
  418c04:	mov    esi,0xbd90d3b3
  418c09:	jb     0x418c7a
  418c0b:	push   ds
  418c0c:	push   edx
  418c0d:	sub    eax,0x5e227076
  418c12:	or     BYTE PTR [edi-0x78b9db35],bh
  418c18:	adc    BYTE PTR [edx-0x6e],bh
  418c1b:	dec    eax
  418c1c:	jne    0x418c10
  418c1e:	mov    ds:0xf608bda1,al
  418c23:	or     dl,BYTE PTR [ebx+0x16]
  418c26:	dec    ebp
  418c27:	cmp    eax,0x113de3a0
  418c2c:	pop    ss
  418c2d:	xor    ch,BYTE PTR [edi-0x49e46950]
  418c33:	pushf  
  418c34:	outs   dx,DWORD PTR ds:[esi]
  418c35:	mov    eax,ds:0x32e18fc2
  418c3a:	push   esp
  418c3b:	int3   
  418c3c:	add    al,0x29
  418c3e:	cmp    eax,0xf36a9b1e
  418c43:	ret    0xc2a7
  418c46:	les    ecx,FWORD PTR [ebx+0x2]
  418c49:	imul   edx,DWORD PTR [edx-0x9fad1ad],0x1033fc11
  418c53:	add    eax,0xb94cc5f4
  418c58:	mov    esi,0x249551fa
  418c5d:	jb     0x418c86
  418c5f:	mov    esi,eax
  418c61:	adc    al,0xe6
  418c63:	or     al,0x27
  418c65:	lods   al,BYTE PTR ds:[esi]
  418c66:	test   al,0x3d
  418c68:	scas   eax,DWORD PTR es:[edi]
  418c69:	js     0x418c0b
  418c6b:	pop    ds
  418c6c:	push   edx
  418c6d:	inc    ebp
  418c6e:	fiadd  DWORD PTR [esi+edi*1]
  418c71:	and    edi,DWORD PTR [edi]
  418c73:	ror    BYTE PTR [ebp-0x22],0xe1
  418c77:	xchg   ebx,eax
  418c78:	into   
  418c79:	xor    ebx,DWORD PTR [ebx]
  418c7b:	xor    esp,DWORD PTR [edi]
  418c7d:	mov    ch,0xb7
  418c7f:	popa   
  418c80:	int3   
  418c81:	dec    BYTE PTR [eax-0x2f39a766]
  418c87:	push   eax
  418c88:	test   al,0xee
  418c8a:	inc    ebp
  418c8b:	xor    eax,0xf741a120
  418c90:	nop
  418c91:	ret    
  418c92:	dec    ecx
  418c93:	jge    0x418ce4
  418c95:	dec    edx
  418c96:	sub    BYTE PTR [ebx-0x3827b2e5],ah
  418c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c9d:	adc    DWORD PTR [ecx+0x5f],eax
  418ca0:	js     0x418c9d
  418ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca3:	imul   BYTE PTR [esi-0x4b]
  418ca6:	xchg   BYTE PTR ds:0x4be7bebc,bl
  418cac:	xchg   ecx,eax
  418cad:	mov    bh,0x45
  418caf:	push   edi
  418cb0:	repz lea ebp,[edi+0xc]
  418cb4:	mov    bl,0x2d
  418cb6:	sti    
  418cb7:	scas   eax,DWORD PTR es:[edi]
  418cb8:	icebp  
  418cb9:	xor    BYTE PTR ds:0x12274923,ch
  418cbf:	push   esi
  418cc0:	mov    dl,BYTE PTR [eax-0x565a6e4a]
  418cc6:	and    eax,0x7eb6d326
  418ccb:	jnp    0x418d16
  418ccd:	xor    eax,0x13a608b4
  418cd2:	shl    DWORD PTR [esi-0x33ba1e63],cl
  418cd8:	arpl   WORD PTR [esi],bx
  418cda:	fsubr  st,st(7)
  418cdc:	out    0xdc,eax
  418cde:	repz sti 
  418ce0:	pop    es
  418ce1:	xor    al,0x39
  418ce3:	sub    eax,0xca3b7fa1
  418ce8:	retf   0xa98e
  418ceb:	cmp    BYTE PTR [esi+0x4642a6bc],ah
  418cf1:	stos   DWORD PTR es:[edi],eax
  418cf2:	xchg   ecx,eax
  418cf3:	pushf  
  418cf4:	(bad)  
  418cf5:	sti    
  418cf6:	xor    eax,0x74333f08
  418cfb:	mov    ds:0x78c4fd21,al
  418d00:	jecxz  0x418d45
  418d02:	inc    ebp
  418d03:	or     ebp,DWORD PTR [ebx-0x587a0148]
  418d09:	sbb    BYTE PTR [esi+eax*2-0x30],ah
  418d0d:	xor    BYTE PTR [edi],bh
  418d0f:	xor    edi,eax
  418d11:	push   es
  418d12:	push   es
  418d13:	sti    
  418d14:	mov    edx,DWORD PTR [edx]
  418d16:	out    0xe4,eax
  418d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d19:	push   esp
  418d1a:	rcl    BYTE PTR [edx-0x58],cl
  418d1d:	push   ebx
  418d1e:	stos   BYTE PTR es:[edi],al
  418d1f:	jnp    0x418d89
  418d21:	xor    eax,0x6a063429
  418d26:	mov    eax,0x8663ae25
  418d2b:	iret   
  418d2c:	es inc ebp
  418d2e:	sbb    BYTE PTR [edi+0x3700a56d],dl
  418d34:	cmp    al,0x35
  418d36:	fs push ebx
  418d38:	jl     0x418d25
  418d3a:	lods   al,BYTE PTR ds:[esi]
  418d3b:	add    edi,DWORD PTR [ecx-0x13]
  418d3e:	(bad)
  418d41:	mov    eax,fs
  418d43:	mov    ebx,0x11002ae0
  418d48:	(bad)  
  418d49:	pop    ds
  418d4a:	push   es
  418d4b:	test   DWORD PTR [edx],ebp
  418d4d:	lahf   
  418d4e:	pop    ecx
  418d4f:	lahf   
  418d50:	outs   dx,BYTE PTR ds:[esi]
  418d51:	xchg   ecx,eax
  418d52:	test   al,0xcf
  418d54:	mov    al,0x32
  418d56:	int3   
  418d57:	fcomp  DWORD PTR [eax+0x30]
  418d5a:	xchg   BYTE PTR [ecx+0x5f],ch
  418d5d:	cmp    cl,BYTE PTR [edi+esi*4-0x1c]
  418d61:	into   
  418d62:	cs sbb eax,0x3e4629ca
  418d68:	xchg   DWORD PTR [ecx+0xf5de387],ebp
  418d6e:	inc    ebx
  418d6f:	jbe    0x418db8
  418d71:	ret    
  418d72:	push   es
  418d73:	and    edi,DWORD PTR [edx+0x285a972d]
  418d79:	jmp    0x418dc0
  418d7b:	dec    ebx
  418d7c:	shl    BYTE PTR [esi+0x73],0x67
  418d80:	sub    al,0x61
  418d82:	jmp    0x522d:0x7b0475f1
  418d89:	into   
  418d8a:	mov    cl,0x1f
  418d8c:	call   0x4b0b2694
  418d91:	hlt    
  418d92:	jnp    0x418ddc
  418d94:	pop    es
  418d95:	xor    ah,BYTE PTR [edi-0x17f40620]
  418d9b:	and    bl,BYTE PTR [ecx+0x44]
  418d9e:	stos   DWORD PTR es:[edi],eax
  418d9f:	mov    ah,BYTE PTR [ebp-0x61e291a5]
  418da5:	push   ds
  418da6:	mov    dh,0xba
  418da8:	ja     0x418d94
  418daa:	or     al,0x75
  418dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dad:	test   eax,0xf2235260
  418db2:	xchg   ebx,eax
  418db3:	popa   
  418db4:	fidiv  DWORD PTR [ecx+0x225985fc]
  418dba:	dec    edi
  418dbb:	loopne 0x418d95
  418dbd:	adc    eax,0xe4a4230b
  418dc2:	clc    
  418dc3:	adc    DWORD PTR [ecx+0x12654a94],esi
  418dc9:	add    eax,0x593d4f23
  418dce:	cmc    
  418dcf:	mov    ds:0xa617a634,al
  418dd4:	and    ah,bh
  418dd6:	in     al,dx
  418dd7:	stc    
  418dd8:	clc    
  418dd9:	jle    0x418e2b
  418ddb:	lock and BYTE PTR ds:0x5214a1b3,dh
  418de2:	clc    
  418de3:	push   edx
  418de4:	inc    eax
  418de5:	pop    ebp
  418de6:	sbb    ah,BYTE PTR [ebx+0x4473a7c7]
  418dec:	es dec ebp
  418dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418def:	cmp    BYTE PTR [ebp+0x5d3beb24],bh
  418df5:	mov    ch,0x16
  418df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df8:	rcr    al,1
  418dfa:	jae    0x418df8
  418dfc:	inc    ecx
  418dfd:	mov    eax,0xee474a45
  418e02:	dec    ebp
  418e03:	sub    BYTE PTR [ebp+0x79],dh
  418e06:	repnz aas 
  418e08:	mov    bh,0x34
  418e0a:	mov    WORD PTR [edx+0x5d54eeda],fs
  418e10:	inc    esi
  418e11:	push   ss
  418e12:	fisttp WORD PTR [ebx+0x28423532]
  418e18:	adc    bh,BYTE PTR [ebx+0x35]
  418e1b:	fisub  DWORD PTR [esi-0x42]
  418e1e:	mov    esi,0xc6628e39
  418e23:	jg     0x418e2b
  418e25:	into   
  418e26:	xor    DWORD PTR cs:[esi],0xffffffb5
  418e2a:	push   ebp
  418e2b:	sahf   
  418e2c:	mov    cl,0xfa
  418e2e:	jno    0x418e37
  418e30:	adc    BYTE PTR [ebx],al
  418e32:	(bad)  
  418e33:	adc    esp,eax
  418e35:	mov    ch,0x6
  418e37:	cmp    ch,BYTE PTR [edi]
  418e39:	arpl   WORD PTR [edi],ax
  418e3b:	push   esi
  418e3c:	mov    al,ds:0xf322c6f2
  418e41:	nop
  418e42:	or     BYTE PTR [esi-0x4cba2f2c],al
  418e48:	sub    ah,ch
  418e4a:	jbe    0x418e32
  418e4c:	jnp    0x418e46
  418e4e:	out    dx,eax
  418e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e50:	push   0x3e
  418e52:	cwde   
  418e53:	xchg   esp,eax
  418e54:	mov    dh,0x2b
  418e56:	cmp    eax,0x4600ed83
  418e5b:	and    edx,ebx
  418e5d:	cmp    BYTE PTR ds:0xd16ec824,dl
  418e63:	fild   WORD PTR [edi+0xc]
  418e66:	int3   
  418e67:	xchg   esi,eax
  418e68:	inc    edx
  418e69:	cmc    
  418e6a:	inc    ecx
  418e6b:	clc    
  418e6c:	ins    DWORD PTR es:[edi],dx
  418e6d:	push   ebx
  418e6e:	jle    0x418ec5
  418e70:	jne    0x418e69
  418e72:	out    dx,al
  418e73:	or     eax,0xa31072e6
  418e78:	jne    0x418e78
  418e7a:	jmp    0x418ef3
  418e7c:	mov    es:0x51b33529,al
  418e82:	pop    esi
  418e83:	in     al,0x50
  418e85:	xor    eax,0x4d41f6f0
  418e8a:	into   
  418e8b:	pop    eax
  418e8c:	mov    es,edi
  418e8e:	leave  
  418e8f:	imul   esp,DWORD PTR [ebx-0x4c378a9f],0x728a862e
  418e99:	stos   DWORD PTR es:[edi],eax
  418e9a:	and    edx,0x7
  418e9d:	rol    BYTE PTR [ebx+eiz*1],1
  418ea0:	or     DWORD PTR [ebx+0xa2937a],0xd7d1d1ed
  418eaa:	mov    ch,0xf0
  418eac:	cmp    esp,DWORD PTR [esi+eiz*4+0x3fefcc82]
  418eb3:	and    edx,DWORD PTR [eax-0x35]
  418eb6:	call   0xab88:0x6fc026a6
  418ebd:	push   0x59
  418ebf:	xor    eax,ebx
  418ec1:	mov    bl,0x67
  418ec3:	sahf   
  418ec4:	mov    esp,0x59e374b7
  418ec9:	or     bl,dh
  418ecb:	enter  0x9f28,0xeb
  418ecf:	mov    ds:0xa3469c78,al
  418ed4:	in     eax,dx
  418ed5:	jl     0x418e85
  418ed7:	cmp    BYTE PTR [esi-0x31984773],ah
  418edd:	mov    dl,0x30
  418edf:	sbb    al,ch
  418ee1:	clc    
  418ee2:	lea    esp,[eiz*4-0x335ce6db]
  418ee9:	(bad)  
  418eeb:	inc    ecx
  418eec:	mov    DWORD PTR [esi],eax
  418eee:	mov    al,ds:0x3833302c
  418ef3:	adc    esi,esp
  418ef5:	inc    esp
  418ef6:	adc    cl,BYTE PTR [ecx+edi*8-0x42e9af14]
  418efd:	into   
  418efe:	jmp    0x31d300a5
  418f03:	xor    dl,ch
  418f05:	add    BYTE PTR [edx-0x32],0xa8
  418f09:	jecxz  0x418f55
  418f0b:	in     eax,0x9c
  418f0d:	fidivr WORD PTR [edx]
  418f0f:	ror    BYTE PTR [ecx+0x30c6f148],1
  418f15:	mov    dl,0x18
  418f17:	jmp    0x99e6cfb
  418f1c:	push   ds
  418f1d:	es cmp al,0xd6
  418f20:	out    dx,al
  418f21:	xor    esp,DWORD PTR [edi+0x4dd1e95b]
  418f27:	leave  
  418f28:	shl    ch,1
  418f2a:	cwde   
  418f2b:	and    DWORD PTR [ebp+eax*8-0x8],ebx
  418f2f:	mov    ds:0x8b24a95e,al
  418f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f35:	cmp    BYTE PTR [ebp-0x750b174],dh
  418f3b:	jbe    0x418ec5
  418f3d:	xchg   esi,eax
  418f3e:	jmp    0x26dcb504
  418f43:	sub    eax,0x74665292
  418f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f49:	push   esi
  418f4a:	pushf  
  418f4b:	xor    DWORD PTR [ebx-0x3c508f30],esi
  418f51:	xor    esp,eax
  418f53:	adc    DWORD PTR [edi+0x6b],ebp
  418f56:	loopne 0x418fb8
  418f58:	shr    BYTE PTR [ecx-0x37],cl
  418f5b:	dec    esp
  418f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f5d:	xor    BYTE PTR [eax],dl
  418f5f:	gs sti 
  418f61:	sub    al,0x1d
  418f63:	jo     0x418fb3
  418f65:	mov    ch,0xf7
  418f67:	int3   
  418f68:	sbb    al,0x46
  418f6a:	hlt    
  418f6b:	push   ecx
  418f6c:	arpl   WORD PTR [esi],bp
  418f6e:	dec    ebp
  418f6f:	xor    ebx,DWORD PTR [esi+ebp*4]
  418f72:	rcr    DWORD PTR [esi+0x48],0xb4
  418f76:	(bad)  
  418f77:	cmp    BYTE PTR [edx+eiz*2-0x4c16f2f6],dl
  418f7e:	add    al,0x3
  418f80:	xchg   ebx,eax
  418f81:	inc    edx
  418f82:	add    DWORD PTR [ebx],esp
  418f84:	and    al,0x4a
  418f86:	mov    DWORD PTR fs:[eax+ecx*1],esi
  418f8a:	mul    BYTE PTR [ebp+esi*1-0x48]
  418f8e:	lds    ebp,FWORD PTR [ebp+0x768d0d4b]
  418f94:	dec    edi
  418f95:	les    ebp,FWORD PTR [ebx+0x7635a5f2]
  418f9b:	in     eax,0x88
  418f9d:	imul   ebp,esp,0x29f26e4d
  418fa3:	fcom   DWORD PTR [eax+0x63]
  418fa6:	fs into 
  418fa8:	pop    ds
  418fa9:	sti    
  418faa:	sbb    eax,0xf2d90779
  418faf:	and    dl,BYTE PTR [ebp+esi*1-0x65ce0b4a]
  418fb6:	push   esp
  418fb7:	rcr    BYTE PTR [edx-0x1ff1ba09],cl
  418fbd:	or     esp,ebx
  418fbf:	pop    eax
  418fc0:	push   ss
  418fc1:	and    eax,0xb4d50bf3
  418fc6:	adc    edx,ebp
  418fc8:	fnsave [ecx+0x53837707]
  418fce:	push   ds
  418fcf:	push   edx
  418fd0:	xchg   BYTE PTR [esi+0x2c],ah
  418fd3:	adc    al,0x1b
  418fd5:	dec    ecx
  418fd6:	adc    BYTE PTR [ebx],dh
  418fd8:	in     eax,0x29
  418fda:	xor    eax,0x10352e4f
  418fdf:	or     ch,BYTE PTR [edi+0x232f1654]
  418fe5:	pop    ecx
  418fe6:	pop    ebp
  418fe7:	fbstp  TBYTE PTR [ebp-0x1d4619e4]
  418fed:	or     eax,0x45e9192
  418ff2:	push   0x433d899f
  418ff7:	mov    dl,0x4e
  418ff9:	leave  
  418ffa:	lds    ecx,FWORD PTR [edi+0x45778f47]
  419000:	mov    eax,0xf40bb4af
  419005:	nop
  419006:	cdq    
  419007:	mov    eax,ds:0x7079d011
  41900c:	adc    al,bl
  41900e:	mov    ch,BYTE PTR [ebp+0x26]
  419011:	pop    ds
  419012:	stc    
  419013:	mov    al,ds:0x7b65de54
  419018:	jns    0x41904f
  41901a:	push   ebx
  41901b:	mov    ch,BYTE PTR [ebp-0x5]
  41901e:	arpl   di,ax
  419020:	pop    es
  419021:	faddp  st(4),st
  419023:	repnz imul ebx,DWORD PTR [ebp-0x52],0x55
  419028:	fild   WORD PTR [edi+edi*8+0x4f634007]
  41902f:	dec    eax
  419030:	sub    BYTE PTR [ebx+edi*8+0x59f21620],dl
  419037:	pop    ecx
  419038:	mov    BYTE PTR [ebp-0x3f],ah
  41903b:	xchg   edi,eax
  41903c:	enter  0x287a,0x5c
  419040:	cmp    esi,DWORD PTR [ebp+0x5c]
  419043:	mov    al,dl
  419045:	pop    ebx
  419046:	sbb    eax,0x64b50ea9
  41904b:	loop   0x41908c
  41904d:	aas    
  41904e:	ret    
  41904f:	out    0xb,eax
  419051:	push   ebp
  419052:	xor    BYTE PTR [ecx-0x46],bh
  419055:	xchg   BYTE PTR [edi],al
  419057:	mov    cl,0x16
  419059:	shl    BYTE PTR [eax-0x360e802a],0x9d
  419060:	or     eax,0x81635846
  419065:	xor    eax,0x23c50898
  41906a:	stc    
  41906b:	xchg   edi,eax
  41906c:	jle    0x418ff0
  41906e:	ret    0x815a
  419071:	mov    edx,0xe0f62e74
  419076:	cmp    eax,DWORD PTR [eax+ecx*4+0x42]
  41907a:	cmc    
  41907b:	cmp    ecx,ecx
  41907d:	stc    
  41907e:	mov    ds:0x4f8cd61b,eax
  419083:	(bad)  
  419084:	rcl    bh,1
  419086:	inc    ebp
  419087:	xchg   ecx,eax
  419088:	jo     0x41907c
  41908a:	fwait
  41908b:	fwait
  41908c:	retf   
  41908d:	js     0x4190b7
  41908f:	popa   
  419090:	stos   DWORD PTR es:[edi],eax
  419091:	mov    ah,0x82
  419093:	sbb    DWORD PTR [eax+0x15],edx
  419096:	jno    0x4190ba
  419098:	push   ecx
  419099:	dec    edi
  41909a:	leave  
  41909b:	(bad)  
  41909d:	jbe    0x419109
  41909f:	lahf   
  4190a0:	daa    
  4190a1:	mov    WORD PTR [edx-0x1b],fs
  4190a4:	outs   dx,BYTE PTR ds:[esi]
  4190a5:	scas   al,BYTE PTR es:[edi]
  4190a6:	dec    esi
  4190a7:	xor    ebp,DWORD PTR [edx-0x26]
  4190aa:	inc    cl
  4190ac:	mov    ch,0x22
  4190ae:	shr    BYTE PTR [ecx],cl
  4190b0:	cmp    eax,0xa61409de
  4190b5:	in     eax,0x15
  4190b7:	dec    ebx
  4190b8:	and    eax,0x391d54e2
  4190bd:	rol    BYTE PTR [ebp+0x4d7c5019],0x23
  4190c4:	lahf   
  4190c5:	push   0x1c22e189
  4190ca:	and    eax,0x45d8ddca
  4190cf:	fldenv [ebp-0x1b]
  4190d2:	ins    DWORD PTR es:[edi],dx
  4190d3:	call   0x23f0:0xa2e8b1cc
  4190da:	mov    bh,0x0
  4190dc:	and    esp,ebp
  4190de:	jl     0x4190e5
  4190e0:	sub    BYTE PTR [ebp-0x20768e8c],dh
  4190e6:	add    al,0x30
  4190e8:	mov    ah,0xa1
  4190ea:	sbb    al,0xa3
  4190ec:	in     eax,dx
  4190ed:	cli    
  4190ee:	jb     0x41911c
  4190f0:	lods   eax,DWORD PTR es:[esi]
  4190f2:	out    0x49,eax
  4190f4:	retf   0x4a79
  4190f7:	pop    ecx
  4190f8:	xor    DWORD PTR ds:0x543a0331,0x87eecb9f
  419102:	shl    BYTE PTR [edx],0x92
  419105:	es retf 
  419107:	mov    ds:0xe2db20f4,al
  41910c:	push   edx
  41910d:	jbe    0x4190f3
  41910f:	adc    BYTE PTR [ebp+0x74a34152],dh
  419115:	std    
  419116:	aaa    
  419117:	jmp    0x24c1:0xa5f4289e
  41911e:	inc    esp
  41911f:	arpl   WORD PTR [esi],si
  419121:	ror    DWORD PTR [ecx+0x7c],cl
  419124:	adc    esi,DWORD PTR [ecx+0x12b4d087]
  41912a:	inc    esi
  41912b:	mov    ebp,0xce2f52ef
  419130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419131:	pusha  
  419132:	imul   ebx,DWORD PTR [ecx+0x5334217e],0x67
  419139:	mov    ch,0x5e
  41913b:	inc    edx
  41913c:	jmp    0x7c7f0f42
  419141:	and    eax,0xb042f946
  419146:	in     eax,dx
  419147:	or     al,0xfa
  419149:	jb     0x4190df
  41914b:	pop    ss
  41914c:	das    
  41914d:	push   ebp
  41914e:	call   0x580b7566
  419153:	in     al,0xd
  419155:	shr    cl,0x97
  419158:	lods   eax,DWORD PTR ds:[esi]
  419159:	and    al,0xc6
  41915b:	pop    ebx
  41915c:	call   0x99ce:0x3cc933eb
  419163:	stos   BYTE PTR es:[edi],al
  419164:	popa   
  419165:	nop
  419166:	cmp    eax,0x242bf023
  41916b:	mov    WORD PTR [esi],fs
  41916d:	imul   edi,DWORD PTR [esi+0x3f],0xffffffb8
  419171:	cmc    
  419172:	mov    ecx,0x33b1c6c5
  419177:	cmc    
  419178:	jns    0x4191d6
  41917a:	dec    ecx
  41917b:	add    BYTE PTR ss:[esi],cl
  41917e:	add    eax,0xce6d266b
  419183:	fs jno 0x419183
  419186:	add    bl,BYTE PTR [ecx-0x13c4caa8]
  41918c:	sbb    DWORD PTR [edi-0x2c6d741f],ebp
  419192:	or     BYTE PTR [esi-0x5a],ah
  419195:	addr16 out 0x8d,al
  419198:	and    ecx,ecx
  41919a:	sub    DWORD PTR [edi+0x2d3db59f],esp
  4191a0:	stos   DWORD PTR es:[edi],eax
  4191a1:	or     ecx,DWORD PTR ds:0x460d60f8
  4191a7:	mov    ch,0x28
  4191a9:	cli    
  4191aa:	mov    ds:0x78e6cb11,al
  4191af:	jno    0x4191e4
  4191b1:	cmp    DWORD PTR [ebx],esi
  4191b3:	mov    ds:0xbefb24c7,eax
  4191b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b9:	ja     0x4191bf
  4191bb:	stc    
  4191bc:	int3   
  4191bd:	xchg   DWORD PTR [esi-0x5c5e924d],ebp
  4191c3:	and    ecx,DWORD PTR [esi-0x2f76bacb]
  4191c9:	icebp  
  4191ca:	call   0x461b46f6
  4191cf:	add    eax,0x67514b65
  4191d4:	lahf   
  4191d5:	lods   al,BYTE PTR ds:[esi]
  4191d6:	fstp   DWORD PTR ds:0x7f0be737
  4191dc:	xor    BYTE PTR [ecx-0x4],al
  4191df:	mov    ds:0x5f5fd48b,al
  4191e4:	les    eax,FWORD PTR es:[edx-0x6461099a]
  4191eb:	fs dec ecx
  4191ed:	xor    eax,0xe3450424
  4191f2:	ss leave 
  4191f4:	fsub   QWORD PTR [ecx+0x45]
  4191f7:	in     al,0xf2
  4191f9:	in     al,dx
  4191fa:	xchg   DWORD PTR [edi],esp
  4191fc:	mov    cs,WORD PTR [ebp-0x73026b1e]
  419202:	hlt    
  419203:	cmp    cl,BYTE PTR [edi-0x64a4cacb]
  419209:	push   ebx
  41920a:	aam    0x3c
  41920c:	out    0xed,eax
  41920e:	retf   0x9a41
  419211:	loopne 0x41926f
  419213:	pop    ss
  419214:	sbb    al,0x34
  419216:	inc    esi
  419217:	adc    DWORD PTR [edx],esp
  419219:	sub    DWORD PTR [ebx+0x20],ecx
  41921c:	shl    BYTE PTR [ebx],cl
  41921e:	adc    di,di
  419221:	inc    esi
  419222:	ds (bad) 
  419224:	mov    edx,0x268303c1
  419229:	int3   
  41922a:	mov    dl,0x35
  41922c:	mov    esi,0x34c49d73
  419231:	xor    eax,0xfac2023b
  419236:	xor    BYTE PTR [esi+0x71],dh
  419239:	add    al,0x46
  41923b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923c:	je     0x4191e0
  41923e:	sub    ebp,ebp
  419240:	and    al,0xa1
  419242:	test   al,0x9b
  419244:	xchg   ebp,eax
  419245:	xchg   edx,eax
  419246:	dec    edx
  419247:	mov    ds:0xd38c1e7d,eax
  41924c:	adc    ch,bl
  41924e:	sbb    BYTE PTR [edx+0x2ee284a5],0x97
  419255:	lea    esi,[edi+0x79b54970]
  41925b:	fisttp DWORD PTR [ebp-0x18b708bd]
  419261:	inc    eax
  419262:	mov    esi,0x68be09b5
  419267:	cwde   
  419268:	test   al,0xe2
  41926a:	lahf   
  41926b:	adc    al,BYTE PTR [eax+0x59]
  41926e:	nop
  41926f:	(bad)  
  419270:	repnz cwde 
  419272:	(bad)  
  419273:	fsub   DWORD PTR [esi]
  419275:	and    eax,0x9a6d7061
  41927a:	add    DWORD PTR [ebx-0x4b05be5f],0xe8adf20e
  419284:	sbb    DWORD PTR ds:[edi+ebx*4+0x58],esp
  419289:	cdq    
  41928a:	aad    0x35
  41928c:	and    eax,esp
  41928e:	shrd   DWORD PTR [esi],esi,cl
  419291:	xor    eax,0xef1406d7
  419296:	nop
  419297:	ret    0x9e26
  41929a:	int    0x7b
  41929c:	iret   
  41929d:	jbe    0x4192a4
  41929f:	sub    dl,BYTE PTR [esi-0x2be513bd]
  4192a5:	imul   ecx,DWORD PTR [ebx+0x23],0xfffffffb
  4192a9:	ret    0x7a7
  4192ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ad:	leave  
  4192ae:	cmp    BYTE PTR [ecx+ecx*8],0x29
  4192b2:	aam    0xe1
  4192b4:	(bad)  
  4192b5:	add    bl,ch
  4192b7:	inc    edx
  4192b8:	lock push ds
  4192ba:	xor    BYTE PTR [ebx-0x51fdee55],ah
  4192c0:	xchg   esp,eax
  4192c1:	add    al,0x57
  4192c3:	popa   
  4192c4:	adc    DWORD PTR es:[eax-0x6b],ebx
  4192c8:	pop    edx
  4192c9:	in     al,dx
  4192ca:	mov    bh,cl
  4192cc:	popf   
  4192cd:	inc    edx
  4192ce:	dec    esi
  4192cf:	lods   al,BYTE PTR ds:[esi]
  4192d0:	dec    esp
  4192d1:	or     al,0x46
  4192d3:	jne    0x4192bd
  4192d5:	fistp  DWORD PTR [ebp+0x3c817178]
  4192db:	stos   DWORD PTR es:[edi],eax
  4192dc:	push   cs
  4192dd:	mov    esp,0xa68b43c5
  4192e2:	jmp    0x419281
  4192e4:	ds mov ch,0xee
  4192e7:	jnp    0x4192a3
  4192e9:	setle  BYTE PTR [ecx]
  4192ec:	xor    BYTE PTR [ebp+0x49a3c642],al
  4192f2:	jno    0x419323
  4192f4:	inc    dh
  4192f6:	in     al,0x92
  4192f8:	idiv   al
  4192fa:	mov    bh,0xd5
  4192fc:	mov    edx,0x19232dfc
  419301:	mov    cl,0x58
  419303:	pushf  
  419304:	and    eax,0xe94fb849
  419309:	fldenv [ecx+0x29882f2e]
  41930f:	mov    bl,0x4
  419311:	mov    ch,0xaa
  419313:	or     cx,si
  419316:	mov    dh,0x70
  419318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419319:	ror    DWORD PTR [edi+0x12],1
  41931c:	and    dh,BYTE PTR es:[esp+ebx*4-0x569e7705]
  419324:	shr    BYTE PTR ds:0x6bfbed08,0x92
  41932b:	push   ecx
  41932c:	push   0x97bad935
  419331:	cmp    BYTE PTR [edx-0x68],al
  419334:	xor    BYTE PTR [eax],ch
  419336:	inc    ecx
  419337:	pop    ds
  419338:	xor    bl,BYTE PTR [ebx]
  41933a:	(bad)  
  41933b:	mov    dl,0xe
  41933d:	sub    edx,edx
  41933f:	inc    edx
  419340:	adc    al,0xc7
  419342:	add    eax,0xec539587
  419347:	iret   
  419348:	pushf  
  419349:	imul   eax,esp,0xa83a9f53
  41934f:	mov    ch,0x51
  419351:	push   ecx
  419352:	cld    
  419353:	push   es
  419354:	cmp    edi,DWORD PTR [ebx]
  419356:	jp     0x4192d8
  419358:	and    bh,ch
  41935a:	ds adc eax,0xa313219e
  419360:	push   ss
  419361:	or     al,dh
  419363:	ffree  st(4)
  419365:	test   ch,bh
  419367:	stos   DWORD PTR es:[edi],eax
  419368:	pop    ecx
  419369:	add    edi,DWORD PTR [ebx-0x1e]
  41936c:	shl    DWORD PTR [esi+edx*1+0x4e3494a5],1
  419373:	retf   0x4391
  419376:	adc    BYTE PTR [ebp-0x57],ch
  419379:	and    al,0xc4
  41937b:	push   edx
  41937c:	into   
  41937d:	fisttp QWORD PTR ds:0x804c466e
  419383:	and    BYTE PTR [ebp+0x1f],0x68
  419387:	jg     0x4193d8
  419389:	pop    ss
  41938a:	push   es
  41938b:	out    0x28,al
  41938d:	lock clc 
  41938f:	adc    BYTE PTR [ebx],ah
  419391:	cdq    
  419392:	sub    BYTE PTR [edx],cl
  419394:	xor    BYTE PTR [esi+0x37],ch
  419397:	and    BYTE PTR [edi+0x65],ah
  41939a:	call   0x9c9938e0
  41939f:	mov    edi,0xa23199fd
  4193a4:	pop    ecx
  4193a5:	sub    eax,0xd4c10826
  4193aa:	inc    ebp
  4193ab:	out    0xe6,al
  4193ad:	mov    edi,0x975cf094
  4193b2:	push   ecx
  4193b3:	jle    0x419382
  4193b5:	jle    0x41939d
  4193b7:	mov    ds:0x12478609,al
  4193bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193bd:	mov    ebp,0xb5d59b02
  4193c2:	push   eax
  4193c3:	ja     0x419417
  4193c5:	xor    edx,DWORD PTR [eax-0x39]
  4193c8:	mov    ah,0x2f
  4193ca:	hlt    
  4193cb:	js     0x419412
  4193cd:	mov    ch,0xf6
  4193cf:	into   
  4193d0:	mov    bh,dl
  4193d2:	scas   eax,DWORD PTR es:[edi]
  4193d3:	jne    0x41943d
  4193d5:	xor    al,0x4d
  4193d7:	(bad)  
  4193d9:	and    DWORD PTR [edx+0x4f],ebp
  4193dc:	or     ebp,DWORD PTR ss:[edi]
  4193df:	imul   esp,DWORD PTR [ebp+0x2fe9f9b7],0x46
  4193e6:	xor    eax,0x914796fa
  4193eb:	dec    ebx
  4193ec:	or     BYTE PTR [edi-0x8],dh
  4193ef:	and    BYTE PTR [edx+0x33644d75],cl
  4193f5:	fimul  DWORD PTR [ebx+0x65]
  4193f8:	es sbb dh,dh
  4193fb:	dec    esi
  4193fc:	cmp    bh,BYTE PTR [ecx+0x44]
  4193ff:	xchg   esi,eax
  419400:	lahf   
  419401:	sbb    BYTE PTR [ebx],ah
  419403:	shl    BYTE PTR ds:0x6f250b09,cl
  419409:	inc    edx
  41940a:	and    ch,dh
  41940c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41940d:	int    0x76
  41940f:	mov    ah,dh
  419411:	xor    DWORD PTR [ebp-0x32e67f13],esp
  419417:	mov    ds:0xb6d734a8,eax
  41941c:	loope  0x4193f7
  41941e:	inc    ecx
  41941f:	push   0x23e0f531
  419424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419425:	push   DWORD PTR [edx+0x42]
  419428:	jge    0x4193ef
  41942a:	adc    eax,0xf11073c4
  41942f:	mov    ds:0x777270ba,al
  419434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419435:	xlat   BYTE PTR ds:[ebx]
  419436:	push   ebx
  419437:	sub    BYTE PTR [esi],0xda
  41943a:	pop    edi
  41943b:	inc    ebx
  41943c:	nop
  41943d:	mov    ch,0x37
  41943f:	imul   esi,edx,0xb605059b
  419445:	icebp  
  419446:	(bad)  
  419447:	retf   
  419448:	or     ah,ch
  41944a:	rcl    DWORD PTR [ebp+0x53],cl
  41944d:	cmc    
  41944e:	xor    BYTE PTR [ebx-0x48dd9eb5],ah
  419454:	or     BYTE PTR [ebx+eiz*4+0x48d371e4],dh
  41945b:	ucomiss xmm1,xmm0
  41945e:	or     eax,0xa0762276
  419463:	ror    DWORD PTR [edx-0x29],1
  419466:	in     eax,0xf6
  419468:	fild   QWORD PTR [eax]
  41946a:	mov    eax,ds:0xa243ed2f
  41946f:	sub    ch,cl
  419471:	xlat   BYTE PTR ds:[ebx]
  419472:	sbb    DWORD PTR [esi+0x6538b5a6],0x7b
  419479:	loope  0x419440
  41947b:	push   cs
  41947c:	sti    
  41947d:	xor    esi,0xffffff81
  419480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419481:	cmp    al,0x6f
  419483:	bound  ebp,QWORD PTR [eax]
  419485:	call   0xe4169fdd
  41948a:	lds    esi,FWORD PTR [esi-0x4b]
  41948d:	dec    esi
  41948e:	test   BYTE PTR [edi],bl
  419490:	inc    ebx
  419491:	adc    eax,0xc13d9187
  419496:	aas    
  419497:	and    ecx,DWORD PTR [ecx+eax*8]
  41949a:	mov    WORD PTR [edi],?
  41949c:	es dec ecx
  41949e:	fwait
  41949f:	nop
  4194a0:	mov    ch,0x89
  4194a2:	jmp    0x4194a5
  4194a4:	rcl    DWORD PTR ds:0x48667142,1
  4194aa:	add    BYTE PTR [ebp+0x7c5f2d07],0xa6
  4194b1:	xchg   ecx,eax
  4194b2:	cld    
  4194b3:	fwait
  4194b4:	dec    esi
  4194b5:	dec    ecx
  4194b6:	out    dx,eax
  4194b7:	aad    0x1e
  4194b9:	cwde   
  4194ba:	inc    edi
  4194bb:	int3   
  4194bc:	in     eax,0x7e
  4194be:	adc    BYTE PTR ds:0x86e21ef4,ch
  4194c4:	es out dx,al
  4194c6:	xlat   BYTE PTR ds:[ebx]
  4194c7:	nop
  4194c8:	jmp    0x84cb9a1f
  4194cd:	xor    eax,0x4809183a
  4194d2:	test   al,0xf9
  4194d4:	or     dl,dl
  4194d6:	lds    ecx,FWORD PTR [edx]
  4194d8:	dec    eax
  4194d9:	dec    edx
  4194da:	inc    edi
  4194db:	sbb    al,0x8c
  4194dd:	and    DWORD PTR [edi-0x11080ab8],ebp
  4194e3:	and    dl,BYTE PTR ds:0x264fa606
  4194e9:	test   BYTE PTR [ebp+0x43],dl
  4194ec:	(bad)  
  4194ed:	fcmovnbe st,st(4)
  4194ef:	fisttp QWORD PTR [eax+0x53602d35]
  4194f5:	mov    dh,0xb5
  4194f7:	gs dec ebp
  4194f9:	aam    0x3e
  4194fb:	jmp    0x4194dc
  4194fd:	add    al,0x96
  4194ff:	scas   eax,DWORD PTR es:[edi]
  419500:	mov    ebp,0x36729b16
  419505:	fst    QWORD PTR [esi]
  419507:	lahf   
  419508:	xchg   esi,eax
  419509:	cs push ebx
  41950b:	test   eax,0x2665e622
  419510:	jne    0x41950c
  419512:	sub    BYTE PTR [esi],dh
  419514:	es sub eax,0x9c2737bf
  41951a:	inc    edx
  41951b:	adc    edi,DWORD PTR [ebx]
  41951d:	xor    eax,0xc2630bb8
  419522:	jno    0x41952c
  419524:	pop    esp
  419525:	aam    0xc5
  419527:	shl    BYTE PTR [edx],cl
  419529:	(bad)  [ebx*8-0x6bf8d546]
  419530:	std    
  419531:	pop    ecx
  419532:	and    BYTE PTR [ebx],ah
  419534:	add    dl,BYTE PTR [edx+0x63]
  419537:	retf   0x2a6
  41953a:	(bad)  
  41953b:	jbe    0x41956a
  41953d:	jo     0x41950f
  41953f:	push   ecx
  419540:	mov    al,ds:0x8bfbf5b7
  419545:	mov    WORD PTR [eax],ss
  419547:	and    esi,DWORD PTR [edx-0x1723cfea]
  41954d:	sbb    al,0x46
  41954f:	js     0x41952b
  419551:	in     eax,0xdc
  419553:	je     0x419540
  419555:	test   ebx,eax
  419557:	sbb    ch,BYTE PTR [esp+eax*1-0x20]
  41955b:	adc    ebx,DWORD PTR [ebp+0x1]
  41955e:	inc    edx
  41955f:	or     DWORD PTR [edi-0x25],0xffffffc5
  419563:	xor    al,0x8c
  419565:	in     eax,dx
  419566:	xor    ebp,DWORD PTR [edi+ecx*4]
  419569:	mul    BYTE PTR [edx]
  41956b:	bound  edx,QWORD PTR [edi-0x29]
  41956e:	push   ebp
  41956f:	and    esi,esp
  419571:	fstp   QWORD PTR [edx]
  419573:	data16 or bl,BYTE PTR [edx-0x6]
  419577:	inc    ecx
  419578:	aam    0x2c
  41957a:	fsub   QWORD PTR [edx+0x55]
  41957d:	cmp    BYTE PTR [eax-0x3],bl
  419580:	mov    ds:0xe2a2f2ef,eax
  419585:	in     al,dx
  419586:	call   0x20f9bbe2
  41958b:	ins    BYTE PTR es:[edi],dx
  41958c:	push   ds
  41958d:	mov    ah,0x83
  41958f:	pop    esp
  419590:	or     esi,DWORD PTR [ebx+edx*1]
  419593:	jb     0x419587
  419595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419596:	mov    edi,0x247553b5
  41959b:	jmp    0xff03cbbc
  4195a0:	or     al,0xd6
  4195a2:	add    DWORD PTR [eax],ebx
  4195a4:	pop    esi
  4195a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a6:	add    BYTE PTR [edx-0x66],dh
  4195a9:	mov    ch,0xc7
  4195ab:	push   esp
  4195ac:	mov    DWORD PTR [edi+0x67],esp
  4195af:	inc    esi
  4195b0:	inc    ebp
  4195b1:	adc    esi,eax
  4195b3:	imul   esp,DWORD PTR [eax-0x6211d8af],0x32
  4195ba:	dec    eax
  4195bb:	and    DWORD PTR [esi],esp
  4195bd:	jecxz  0x41958e
  4195bf:	and    ebx,esi
  4195c1:	push   ds
  4195c2:	dec    esi
  4195c3:	mov    BYTE PTR gs:[ebp+eax*8-0x56dd38e1],bh
  4195cb:	rcr    DWORD PTR [esi-0x76],0xc4
  4195cf:	out    dx,al
  4195d0:	out    dx,eax
  4195d1:	inc    ebx
  4195d2:	jmp    0x71d0bd79
  4195d7:	lods   eax,DWORD PTR ds:[esi]
  4195d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d9:	enter  0x4849,0x15
  4195dd:	daa    
  4195de:	mov    ds:0x5a4d6276,eax
  4195e3:	repz or al,0x6c
  4195e6:	sbb    BYTE PTR [ecx-0x2d],0xd5
  4195ea:	or     eax,0x37d4a9ab
  4195ef:	sub    cl,dl
  4195f1:	mov    ebp,0x588f6045
  4195f6:	scas   al,BYTE PTR es:[edi]
  4195f7:	pop    DWORD PTR [ecx-0x4b]
  4195fa:	cmp    DWORD PTR [edi],edx
  4195fc:	fcmovnu st,st(2)
  4195fe:	das    
  4195ff:	cmp    al,0x5e
  419601:	test   DWORD PTR [edx+0x57],eax
  419604:	je     0x419629
  419606:	pop    ss
  419607:	cli    
  419608:	mov    ch,0xdc
  41960a:	lods   al,BYTE PTR ds:[esi]
  41960b:	das    
  41960c:	xor    BYTE PTR [ebp+0x7e0735f9],dh
  419612:	das    
  419613:	push   0xe7268976
  419618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419619:	loop   0x419694
  41961b:	and    al,0x97
  41961d:	dec    edx
  41961e:	add    edx,DWORD PTR [ecx+0x12]
  419621:	pop    esi
  419622:	in     al,0x4f
  419624:	push   ebp
  419625:	gs ds dec esp
  419628:	xor    al,0xb5
  41962a:	xchg   ebp,eax
  41962b:	fadd   DWORD PTR [edi+edi*4+0x1e]
  41962f:	out    dx,al
  419630:	or     BYTE PTR [eax],dh
  419632:	(bad)  
  419633:	mov    eax,ds:0xf0b48bd9
  419638:	es mov bh,0x82
  41963b:	or     ch,BYTE PTR [ebx]
  41963d:	push   ebp
  41963e:	dec    eax
  41963f:	and    ecx,DWORD PTR [esp+ecx*1-0x6ae0d6db]
  419646:	call   FWORD PTR [ecx+0x781f4538]
  41964c:	pop    ecx
  41964d:	xor    DWORD PTR [edi+0x18],0x9d5c7e40
  419654:	xchg   esi,eax
  419655:	stos   DWORD PTR es:[edi],eax
  419656:	inc    eax
  419657:	or     DWORD PTR [esi-0x66ccba05],0xb27a733b
  419661:	mov    edx,0x46b3e4f4
  419666:	bound  esp,QWORD PTR [edx]
  419668:	pop    eax
  419669:	mov    ds:0x397d65c3,eax
  41966e:	clc    
  41966f:	(bad)  
  419670:	fistp  WORD PTR [esi]
  419672:	adc    BYTE PTR [edi],0xd2
  419675:	add    eax,0xc0c52303
  41967a:	push   ebx
  41967b:	sub    BYTE PTR [esi],bl
  41967d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41967e:	mov    al,0xfd
  419680:	dec    ecx
  419681:	push   ebp
  419682:	push   edx
  419683:	jmp    0xbc6551dd
  419688:	push   eax
  419689:	daa    
  41968a:	push   ds
  41968b:	and    edi,ebp
  41968d:	imul   esp,DWORD PTR [edx],0x38
  419690:	and    eax,0x692b2019
  419695:	and    al,0xd2
  419697:	push   ds
  419698:	pop    ebx
  419699:	mov    gs,WORD PTR cs:[ebp+0x5e]
  41969d:	sbb    BYTE PTR [esi],dh
  41969f:	or     cl,al
  4196a1:	add    al,0x33
  4196a3:	dec    edi
  4196a4:	xchg   edx,eax
  4196a5:	ret    0x4c69
  4196a8:	push   ds
  4196a9:	mov    dh,0x8c
  4196ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ac:	sub    esp,DWORD PTR [ebp-0x44]
  4196af:	ds jl  0x419641
  4196b2:	add    al,0x12
  4196b4:	popf   
  4196b5:	jl     0x4196dc
  4196b7:	scas   al,BYTE PTR es:[edi]
  4196b8:	jno    0x419738
  4196ba:	xor    eax,0xeab54b0d
  4196bf:	pop    DWORD PTR [edi+0x265fed3b]
  4196c5:	or     bl,al
  4196c7:	jno    0x4196c6
  4196c9:	test   al,0x5a
  4196cb:	push   esi
  4196cc:	push   ebp
  4196cd:	ds loop 0x4196cf
  4196d0:	pop    ebp
  4196d1:	mov    ch,0x2c
  4196d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d4:	cmp    BYTE PTR [ebx-0x7b932bbd],al
  4196da:	inc    edx
  4196db:	aas    
  4196dc:	aaa    
  4196dd:	hlt    
  4196de:	cmp    BYTE PTR [esi+eax*4-0x1c],ah
  4196e2:	and    eax,0x31fb3233
  4196e7:	adc    ch,BYTE PTR [edi]
  4196e9:	xor    eax,0xc6fc6530
  4196ee:	cmp    cl,dh
  4196f0:	jmp    0x4196ea
  4196f2:	aaa    
  4196f3:	sti    
  4196f4:	lods   eax,DWORD PTR ds:[esi]
  4196f5:	(bad)  
  4196f6:	and    eax,0x3cf79802
  4196fb:	fisttp QWORD PTR [eax-0x42a81f84]
  419701:	adc    edi,DWORD PTR [ecx]
  419703:	mov    ds:0xb972e61b,eax
  419708:	adc    DWORD PTR [ecx],esi
  41970a:	es sub eax,0x50aa4f26
  419710:	enter  0xc00c,0xee
  419714:	add    al,0xb5
  419716:	dec    eax
  419717:	test   BYTE PTR [edx+0x305f6785],cl
  41971d:	ror    ecx,1
  41971f:	mov    esp,DWORD PTR [esi+0x464f4187]
  419725:	fild   QWORD PTR [ebp+0x6b56d32]
  41972b:	fidivr WORD PTR [ebx]
  41972d:	mov    bh,0xa
  41972f:	bound  edx,QWORD PTR [esi]
  419731:	or     dl,BYTE PTR [ebx+0x30]
  419734:	and    eax,0x60236b5e
  419739:	mov    eax,0xb59cb08b
  41973e:	dec    edx
  41973f:	xchg   ebx,eax
  419740:	mov    ds:0xc55b2a21,eax
  419745:	mov    dh,0xc5
  419747:	mov    al,ds:0x54529271
  41974c:	xor    al,0xcc
  41974e:	fbld   TBYTE PTR [esi-0x682b3702]
  419754:	(bad)  
  419755:	(bad)  
  419756:	fisub  WORD PTR [edx-0x2b9f3ee]
  41975c:	out    0x80,eax
  41975e:	imul   ecx,DWORD PTR [esi+0x66],0x615db6cc
  419765:	add    eax,0xf7c3a358
  41976a:	or     BYTE PTR [esi],0x6
  41976d:	and    ebp,edi
  41976f:	aad    0xe5
  419771:	(bad)  
  419772:	enter  0xa754,0x1e
  419776:	push   ebx
  419777:	mov    ds:0xbd13e52f,eax
  41977c:	daa    
  41977d:	jns    0x419771
  41977f:	repnz rcr BYTE PTR [edi-0x77],0xe6
  419784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419785:	push   ebx
  419786:	lea    esp,[esi-0x4d13b595]
  41978c:	xor    ch,dh
  41978e:	dec    eax
  41978f:	inc    esp
  419790:	jl     0x419728
  419792:	dec    edx
  419793:	pop    ebx
  419794:	in     eax,0x1c
  419796:	call   0xa6cc:0x8fcb192f
  41979d:	jmp    0x848b1cfd
  4197a2:	enter  0x4349,0x35
  4197a6:	pop    es
  4197a7:	push   ss
  4197a8:	adc    edi,DWORD PTR [ecx]
  4197aa:	sti    
  4197ab:	xchg   DWORD PTR [esi-0x1d04b9d3],ecx
  4197b1:	ret    
  4197b2:	dec    ecx
  4197b3:	ins    BYTE PTR es:[edi],dx
  4197b4:	ins    DWORD PTR es:[edi],dx
  4197b5:	pop    edx
  4197b6:	into   
  4197b7:	les    ebp,FWORD PTR [edx-0x36]
  4197ba:	adc    eax,0xb6fe2123
  4197bf:	test   BYTE PTR [esi-0x2dacb909],ah
  4197c5:	xor    al,0x1a
  4197c7:	push   0x62303571
  4197cc:	sbb    BYTE PTR [edx-0x52d79693],bh
  4197d2:	inc    ebp
  4197d3:	pop    eax
  4197d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197d5:	test   DWORD PTR [esi+ebp*8-0x444a439e],esp
  4197dc:	xor    BYTE PTR ds:0x28a52bae,0xaa
  4197e3:	inc    esp
  4197e4:	daa    
  4197e5:	adc    ecx,ebp
  4197e7:	pop    ds
  4197e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e9:	mov    eax,0xfc7007
  4197ee:	push   0xad358b05
  4197f3:	je     0x419855
  4197f5:	lea    esi,[eax]
  4197f7:	jns    0x419865
  4197f9:	loope  0x419840
  4197fb:	sbb    BYTE PTR [edx],0x94
  4197fe:	fld    QWORD PTR [edi+0x16]
  419801:	pusha  
  419802:	stos   BYTE PTR es:[edi],al
  419803:	clc    
  419804:	cmp    BYTE PTR [ebx],ch
  419806:	call   0x744a:0x792b0a22
  41980d:	jecxz  0x419854
  41980f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419810:	add    eax,0x39f846e4
  419815:	push   ebx
  419816:	xor    DWORD PTR [eax+ecx*2],ecx
  419819:	and    DWORD PTR [edx],esp
  41981b:	mov    ds:0xa02604d5,eax
  419820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419821:	cmp    BYTE PTR [ebx+0x54],dh
  419824:	mov    ah,0x80
  419826:	enter  0x98da,0x99
  41982a:	mov    al,0x96
  41982c:	pop    eax
  41982d:	jne    0x419885
  41982f:	ja     0x41982a
  419831:	fidivr WORD PTR ds:0x45fa8003
  419837:	pop    es
  419838:	sbb    ecx,DWORD PTR [eax-0x5e]
  41983b:	pop    ebx
  41983c:	pushf  
  41983d:	inc    esi
  41983e:	push   ss
  41983f:	rcr    BYTE PTR [edx],0xd
  419842:	mov    BYTE PTR [ecx+eax*4-0x37ad4cc9],0xee
  41984a:	lds    esp,FWORD PTR [ebx+0x1b]
  41984d:	sub    DWORD PTR ds:0x38f2c3fb,0x75a02af2
  419857:	sahf   
  419858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419859:	std    
  41985a:	jbe    0x4197ea
  41985c:	add    ah,BYTE PTR [ebx]
  41985e:	dec    esi
  41985f:	cmp    ah,BYTE PTR [esi-0x118f7e99]
  419865:	pop    ebp
  419866:	pop    edi
  419867:	ret    
  419868:	or     eax,0x8d393b32
  41986d:	test   eax,0xfba7ef7d
  419872:	pop    ss
  419873:	sbb    esp,DWORD PTR [esi]
  419875:	xchg   BYTE PTR [eax-0x6a],ah
  419878:	sub    eax,0x18aa5088
  41987d:	xor    cl,BYTE PTR ds:0x72f2a274
  419883:	sti    
  419884:	fistp  QWORD PTR [ebp-0x68d9acdb]
  41988a:	call   0x7cf2:0x8df68e41
  419891:	mov    dh,0xe5
  419893:	add    ecx,ebp
  419895:	imul   edi,DWORD PTR [ebx+eiz*1],0x32
  419899:	int    0x39
  41989b:	jge    0x419843
  41989d:	inc    edi
  41989e:	gs pop edi
  4198a0:	adc    DWORD PTR [esi-0x59bf0e16],esp
  4198a6:	dec    ebx
  4198a7:	push   eax
  4198a8:	mov    eax,0xa0b14465
  4198ad:	lds    esi,FWORD PTR ds:0x483a035c
  4198b3:	lea    esp,[esi+0x587ab820]
  4198b9:	into   
  4198ba:	iret   
  4198bb:	shl    BYTE PTR [edx-0x7195ad4b],cl
  4198c1:	pushf  
  4198c2:	and    ah,BYTE PTR [ebp-0x14]
  4198c5:	scas   eax,DWORD PTR es:[edi]
  4198c6:	lds    ebx,FWORD PTR [eax-0x5a0a7d9f]
  4198cc:	imul   edi,DWORD PTR [edx],0x59
  4198cf:	sbb    al,BYTE PTR [eax+0x33]
  4198d2:	mov    edx,DWORD PTR [edi-0x36]
  4198d5:	xor    BYTE PTR [eax-0x5d],dl
  4198d8:	or     esi,ecx
  4198da:	xor    eax,0xc30b1a5f
  4198df:	in     eax,dx
  4198e0:	add    DWORD PTR es:[edx+0x58],esi
  4198e4:	dec    ebp
  4198e5:	inc    ebx
  4198e6:	or     dl,dh
  4198e8:	xchg   ecx,eax
  4198e9:	ds inc esi
  4198eb:	and    esp,DWORD PTR [edx-0x594cdd8d]
  4198f1:	sub    BYTE PTR [ebp+0x3a],bl
  4198f4:	push   edx
  4198f5:	in     eax,0x80
  4198f7:	stos   BYTE PTR es:[edi],al
  4198f8:	xor    al,0xb5
  4198fa:	fldl2e 
  4198fc:	imul   ebp,DWORD PTR [esp+eax*8-0x2f],0xd
  419901:	nop
  419902:	inc    edx
  419903:	cmc    
  419904:	add    eax,0x48299438
  419909:	mov    ch,0x4e
  41990b:	into   
  41990c:	push   0xffffff98
  41990e:	sbb    eax,ebp
  419910:	ret    0x79fe
  419913:	mov    ds:0xfdc96459,al
  419918:	push   esi
  419919:	mov    al,ds:0xbda641cf
  41991e:	mov    ch,0xa1
  419920:	mov    cl,0x89
  419922:	sbb    eax,0xb42dba1f
  419927:	sub    BYTE PTR [edx-0x74],ch
  41992a:	mov    ch,0xda
  41992c:	xor    esi,ecx
  41992e:	pop    edi
  41992f:	dec    edi
  419930:	mov    ah,0x13
  419932:	inc    esi
  419933:	repz dec ebx
  419935:	fwait
  419936:	xor    ebp,DWORD PTR ds:0xf118ee00
  41993c:	inc    esp
  41993d:	mov    ebx,0x68022315
  419942:	jg     0x41998f
  419944:	(bad)  
  419945:	clc    
  419946:	jbe    0x4198d5
  419948:	es scas eax,DWORD PTR es:[edi]
  41994a:	repz xchg ecx,eax
  41994c:	ror    DWORD PTR [edi-0x62b2cc80],cl
  419952:	add    ah,BYTE PTR [ebx]
  419954:	adc    BYTE PTR [edx+0x716a61b7],dh
  41995a:	inc    esp
  41995b:	pop    es
  41995c:	lea    esi,[esi]
  41995e:	arpl   WORD PTR [ebp+0x550a7588],sp
  419964:	cmp    cl,bh
  419966:	or     ebp,esi
  419968:	cmc    
  419969:	jne    0x41995b
  41996b:	mov    ds:0xfaf55fa1,al
  419970:	es push cs
  419972:	out    dx,eax
  419973:	push   0x4a
  419975:	nop
  419976:	cmp    dh,BYTE PTR [esi+0x72a2a79d]
  41997c:	adc    ax,0x9254
  419980:	fimul  WORD PTR [eax+ebx*1]
  419983:	shl    DWORD PTR [esi],1
  419985:	sahf   
  419986:	test   BYTE PTR [ebx+0x1a],bh
  419989:	paddd  mm3,mm7
  41998c:	int    0x98
  41998e:	push   ebp
  41998f:	inc    eax
  419990:	push   ds
  419991:	push   ebp
  419992:	scas   eax,DWORD PTR es:[edi]
  419993:	in     al,0xf5
  419995:	pop    esi
  419996:	sub    BYTE PTR [ecx],0xfb
  419999:	rol    ebp,cl
  41999b:	adc    ebp,edx
  41999d:	xor    ah,BYTE PTR [edi-0x321f1768]
  4199a3:	jecxz  0x4199d4
  4199a5:	xor    ebp,esi
  4199a7:	mov    ds:0x1b910365,al
  4199ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ad:	scas   eax,DWORD PTR es:[edi]
  4199ae:	inc    esi
  4199af:	pop    ebx
  4199b0:	les    ebp,FWORD PTR [edi-0x20]
  4199b3:	xchg   esp,eax
  4199b4:	xchg   esp,eax
  4199b5:	xor    ebp,DWORD PTR [ecx+edi*2+0x1ee55eff]
  4199bc:	loopne 0x41995d
  4199be:	sub    eax,DWORD PTR [ebx-0x5a]
  4199c1:	mov    ebp,edx
  4199c3:	pusha  
  4199c4:	stos   DWORD PTR es:[edi],eax
  4199c5:	aaa    
  4199c6:	je     0x41996e
  4199c8:	dec    ecx
  4199c9:	mov    ch,0xa8
  4199cb:	lods   eax,DWORD PTR ds:[esi]
  4199cc:	push   edi
  4199cd:	mov    esp,0x27ba016e
  4199d2:	(bad)  
  4199d3:	mov    ah,0x33
  4199d5:	mov    ecx,0xb1460748
  4199da:	sub    eax,0xeb62033b
  4199df:	inc    ecx
  4199e0:	xchg   ebx,eax
  4199e1:	and    dh,al
  4199e3:	test   DWORD PTR [edx-0x26],esi
  4199e6:	dec    edi
  4199e7:	add    eax,0x75c6215a
  4199ec:	lahf   
  4199ed:	stos   BYTE PTR es:[edi],al
  4199ee:	and    BYTE PTR [esi+0xc23f018],dl
  4199f4:	pop    ss
  4199f5:	ja     0x419a19
  4199f7:	mov    ds:0xb4450d2c,eax
  4199fc:	jp     0x419a1f
  4199fe:	mov    edi,0xe034a755
  419a03:	add    ebp,DWORD PTR [eax]
  419a05:	jae    0x4199aa
  419a07:	mov    eax,0x32f133a8
  419a0c:	cmp    ecx,DWORD PTR [esi+0x1f26a33c]
  419a12:	cs hlt 
  419a14:	and    eax,0x88cd0705
  419a19:	pushf  
  419a1a:	xor    eax,0x4d713abb
  419a1f:	jp     0x419a22
  419a21:	daa    
  419a22:	sub    DWORD PTR [ebx+0x30e7122e],esp
  419a28:	push   ss
  419a29:	test   BYTE PTR [ebx-0x2f],bl
  419a2c:	inc    ebp
  419a2d:	loop   0x419aa7
  419a2f:	int3   
  419a30:	jmp    0x419a82
  419a32:	in     al,0xe1
  419a34:	cmp    DWORD PTR [eax+0x2df0bb43],ecx
  419a3a:	or     BYTE PTR [ebx-0x6df6bba5],ah
  419a40:	lahf   
  419a41:	sub    dh,bl
  419a43:	aas    
  419a44:	mov    al,0x44
  419a46:	jge    0x4199d1
  419a48:	cmp    DWORD PTR [edx+0x2e47ea4f],0xffffffb2
  419a4f:	dec    esi
  419a50:	adc    bl,BYTE PTR [ebp+0x533d052]
  419a56:	pop    esi
  419a57:	nop
  419a58:	pop    eax
  419a59:	jmp    0x145c:0x95806645
  419a60:	mov    edx,0x1c0d6553
  419a65:	scas   al,BYTE PTR es:[edi]
  419a66:	cmp    DWORD PTR [edi-0xe],esp
  419a69:	or     dh,BYTE PTR [esi-0x1e3802ab]
  419a6f:	mov    esp,0x934623ae
  419a74:	jbe    0x419a46
  419a76:	in     eax,dx
  419a77:	iret   
  419a78:	and    bh,BYTE PTR [edi+0x7e]
  419a7b:	call   0xa37f2404
  419a80:	xor    BYTE PTR [ebx],dh
  419a82:	pusha  
  419a83:	mov    ds:0x44261626,al
  419a88:	or     al,0xed
  419a8a:	call   0x101:0x71b59361
  419a91:	inc    eax
  419a92:	xor    bl,dh
  419a94:	cwde   
  419a95:	pop    ds
  419a96:	test   eax,0x7ef59885
  419a9b:	mov    esi,0x5d1fddb0
  419aa0:	ret    0xb9a6
  419aa3:	push   ecx
  419aa4:	dec    esp
  419aa5:	and    edx,DWORD PTR [edx+0x7f]
  419aa8:	pop    ss
  419aa9:	mov    esi,edi
  419aab:	mov    ds:0xd3c5f410,al
  419ab0:	arpl   WORD PTR [esi-0x7a37f5f3],di
  419ab6:	cld    
  419ab7:	bnd jl 0x419a57
  419aba:	leave  
  419abb:	lahf   
  419abc:	mov    eax,ds:0x6a7daa1d
  419ac1:	out    0xc5,eax
  419ac3:	xlat   BYTE PTR ds:[ebx]
  419ac4:	xchg   DWORD PTR [ebx],ebp
  419ac6:	lahf   
  419ac7:	nop
  419ac8:	push   ds
  419ac9:	cwde   
  419aca:	sar    BYTE PTR [eax],0xe1
  419acd:	cdq    
  419ace:	dec    eax
  419acf:	mov    ds:0xd10512f4,eax
  419ad4:	pop    ds
  419ad5:	das    
  419ad6:	int3   
  419ad7:	imul   edi,ebp,0xfffffff4
  419ada:	scas   eax,DWORD PTR es:[edi]
  419adb:	dec    eax
  419adc:	test   eax,0x933c55f8
  419ae1:	cld    
  419ae2:	dec    ebp
  419ae3:	inc    eax
  419ae4:	ds sub eax,0x168322f9
  419aea:	add    eax,0x171d2687
  419aef:	push   ebx
  419af0:	enter  0x7f8a,0x67
  419af4:	test   DWORD PTR [ebp+0x550e569e],esi
  419afa:	ins    DWORD PTR es:[edi],dx
  419afb:	outs   dx,BYTE PTR ds:[esi]
  419afc:	jg     0x419b06
  419afe:	inc    esi
  419aff:	in     eax,0x11
  419b01:	pop    edi
  419b02:	xor    BYTE PTR [ebp-0x73b74b9c],al
  419b08:	ja     0x419abf
  419b0a:	(bad)  
  419b0b:	sub    BYTE PTR [eax+0x477456bb],al
  419b11:	test   DWORD PTR [esi+0x53b4e5c3],esp
  419b17:	dec    eax
  419b19:	sub    eax,0x42c8047
  419b1e:	sbb    BYTE PTR [ecx+0x3],bh
  419b21:	cmp    DWORD PTR [ebx],0x23
  419b24:	jmp    0xf128:0xa6c3b0ec
  419b2b:	inc    edi
  419b2c:	xor    BYTE PTR [esi-0x2a],0x5c
  419b30:	push   ss
  419b31:	xor    eax,0xe3f3bf21
  419b36:	scas   al,BYTE PTR es:[edi]
  419b37:	sub    eax,0xf56d3b2b
  419b3c:	push   ds
  419b3d:	sub    BYTE PTR [esi+0xa3716c1],bl
  419b43:	xor    ch,ch
  419b45:	xlat   BYTE PTR ds:[ebx]
  419b46:	stc    
  419b47:	sub    dl,BYTE PTR [ebp+0x79bdf5b5]
  419b4d:	pop    edi
  419b4e:	pop    esi
  419b4f:	out    0xf5,eax
  419b51:	pop    ecx
  419b52:	les    esp,FWORD PTR [edi-0x7c54c3f8]
  419b58:	fsubp  st(1),st
  419b5a:	std    
  419b5b:	jnp    0x419b73
  419b5d:	lock inc edi
  419b5f:	push   ds
  419b60:	xlat   BYTE PTR ds:[ebx]
  419b61:	stos   BYTE PTR es:[edi],al
  419b62:	in     eax,0xa2
  419b64:	push   0xffffffc1
  419b66:	add    edi,DWORD PTR [esi]
  419b68:	es icebp 
  419b6a:	dec    edi
  419b6b:	pop    esp
  419b6c:	imul   ebp,ecx,0xffffffc9
  419b6f:	add    BYTE PTR [ebx],ah
  419b71:	imul   ebx
  419b73:	jae    0x419b87
  419b75:	mov    eax,ds:0xfb80233a
  419b7a:	ds mov al,0xa5
  419b7d:	retf   0x24b2
  419b80:	and    DWORD PTR [edx],edx
  419b82:	cld    
  419b83:	push   edi
  419b84:	xor    DWORD PTR [ebp+0x6078eb3e],0x70
  419b8b:	enter  0x8047,0x29
  419b8f:	pop    esp
  419b90:	or     eax,0xe7345fb4
  419b95:	pop    ebx
  419b96:	sbb    bh,BYTE PTR [edx-0x1d215c5a]
  419b9c:	fldenv [edi+esi*4-0x5e]
  419ba0:	cli    
  419ba1:	fld    DWORD PTR [eax+0x3a66ed69]
  419ba7:	mov    ebp,0x7045949b
  419bac:	retf   
  419bad:	mov    WORD PTR [eax+0xf],es
  419bb0:	les    esp,FWORD PTR [eax*2-0x1b1d01a6]
  419bb7:	mov    eax,ds:0x31d5a29e
  419bbc:	pop    edx
  419bbd:	add    eax,0xd72672d2
  419bc2:	fsubr  DWORD PTR [esi-0x20]
  419bc5:	mov    ecx,0xb57399ca
  419bca:	arpl   WORD PTR [ebx-0x13fee587],sp
  419bd0:	enter  0x4619,0x82
  419bd4:	daa    
  419bd5:	test   al,0xcd
  419bd7:	call   0xbf4faf74
  419bdc:	jl     0x419b9c
  419bde:	mul    DWORD PTR [edx]
  419be0:	mov    al,ds:0xa2081358
  419be5:	mov    bl,0xfd
  419be7:	or     DWORD PTR [edi],ebp
  419be9:	xor    al,BYTE PTR [esi-0x1f]
  419bec:	pop    esi
  419bed:	jg     0x419c4d
  419bef:	cmp    dh,BYTE PTR [eax+esi*8-0x5dde5d12]
  419bf6:	icebp  
  419bf7:	pop    ss
  419bf8:	and    bh,bh
  419bfa:	shl    BYTE PTR ds:0x2245b9ff,1
  419c00:	pop    esi
  419c01:	mov    al,BYTE PTR [ecx]
  419c03:	push   ebx
  419c04:	jl     0x419bb1
  419c06:	ins    BYTE PTR es:[edi],dx
  419c07:	pop    ebx
  419c08:	adc    eax,DWORD PTR [edi+0x44]
  419c0b:	das    
  419c0c:	mov    eax,ds:0x2e55efe4
  419c11:	por    mm5,QWORD PTR [edi+0x26]
  419c15:	cmp    DWORD PTR [ebx+0x6f],esp
  419c18:	mov    al,ds:0xa5d4b180
  419c1d:	mov    ch,0xb4
  419c1f:	pop    edi
  419c20:	xor    BYTE PTR [ebx+0x223f2eb9],0x3c
  419c27:	and    eax,0x58e48136
  419c2c:	mov    ebp,0x41a2fc6f
  419c31:	and    esi,DWORD PTR [edi-0xd0c6353]
  419c37:	mov    ds:0x42436392,al
  419c3c:	es fxch st(7)
  419c3f:	data16 or al,0x18
  419c42:	stos   BYTE PTR es:[edi],al
  419c43:	mov    ah,0xcd
  419c45:	sar    DWORD PTR [ecx+esi*8],cl
  419c48:	adc    dl,bl
  419c4a:	test   eax,esi
  419c4c:	sub    al,0x25
  419c4e:	xor    BYTE PTR [ebp+0x31],dh
  419c51:	sbb    eax,0xae88ed46
  419c56:	mov    edx,edi
  419c58:	inc    ebp
  419c59:	mov    ch,0xbf
  419c5b:	push   edi
  419c5d:	cdq    
  419c5e:	rcl    BYTE PTR [esi],cl
  419c60:	and    ebx,esi
  419c62:	daa    
  419c63:	ss cdq 
  419c65:	jne    0x419c80
  419c67:	and    al,0x7d
  419c69:	cmp    al,BYTE PTR [edx+0x75b531a0]
  419c6f:	inc    esi
  419c70:	outs   dx,DWORD PTR es:[esi]
  419c72:	(bad)  
  419c73:	int3   
  419c74:	ret    
  419c75:	mov    ebx,0xea5ae40d
  419c7a:	inc    ebp
  419c7b:	ja     0x419cac
  419c7d:	cmp    edi,DWORD PTR [esp+eax*2-0x74]
  419c81:	call   0xa18a:0x185f70f6
  419c88:	outs   dx,BYTE PTR ds:[esi]
  419c89:	out    0x49,al
  419c8b:	mov    esp,0xa745c4c5
  419c90:	sub    esp,DWORD PTR [edi]
  419c92:	mov    esp,0x50b637e0
  419c97:	lea    esi,[edx-0x445cde4c]
  419c9d:	and    esi,DWORD PTR [ebx+0xea6fac6]
  419ca3:	imul   edx,DWORD PTR [ecx+0x147f0f],0x4a
  419caa:	mov    dh,0xf7
  419cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cad:	arpl   WORD PTR [edi+0x66],dx
  419cb0:	inc    esp
  419cb1:	jmp    0x419c7c
  419cb3:	pop    edx
  419cb4:	jb     0x419c8b
  419cb6:	jbe    0x419c57
  419cb8:	sub    DWORD PTR [ebp-0xae49ac],edx
  419cbe:	inc    ebp
  419cbf:	fld    QWORD PTR [eax-0x35]
  419cc2:	lods   eax,DWORD PTR ds:[esi]
  419cc3:	shl    DWORD PTR [ecx-0x25],1
  419cc6:	jp     0x419cfd
  419cc8:	daa    
  419cc9:	shr    DWORD PTR [ebx+eiz*4],0xca
  419ccd:	or     BYTE PTR [edx+eax*4+0x26],bh
  419cd1:	stos   DWORD PTR es:[edi],eax
  419cd2:	pop    edi
  419cd3:	pop    ebp
  419cd4:	lds    edi,FWORD PTR [esi]
  419cd6:	mov    ch,0x94
  419cd8:	fnstenv [ecx]
  419cda:	or     BYTE PTR [edi+0x1e615299],dh
  419ce0:	in     eax,0x81
  419ce2:	adc    al,0x93
  419ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce5:	mov    al,ds:0xb34955c8
  419cea:	in     eax,dx
  419ceb:	dec    esp
  419cec:	std    
  419ced:	mov    cl,0x7c
  419cef:	outs   dx,BYTE PTR ds:[esi]
  419cf0:	xchg   esp,eax
  419cf1:	dec    esp
  419cf2:	shr    edx,cl
  419cf4:	xchg   esp,eax
  419cf5:	mov    ah,BYTE PTR [ecx+0x461f423a]
  419cfb:	mov    bl,0x1
  419cfd:	jmp    0xba29f1d3
  419d02:	xchg   dl,bl
  419d04:	test   ebp,ecx
  419d06:	fisub  DWORD PTR [edx]
  419d08:	push   ss
  419d09:	mov    BYTE PTR [esi],cl
  419d0b:	dec    ebx
  419d0c:	es loop 0x419d36
  419d0f:	bound  ebx,QWORD PTR [ebx]
  419d11:	data16 out dx,al
  419d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d14:	rdmsr  
  419d16:	aad    0x67
  419d18:	xor    eax,DWORD PTR [eax]
  419d1a:	sub    eax,0x2b86f3f8
  419d1f:	sbb    esp,DWORD PTR [esi]
  419d21:	jl     0x419cb1
  419d23:	jge    0x419d02
  419d25:	cmp    BYTE PTR [ecx+esi*4],ah
  419d28:	cmp    eax,0x95f67b2e
  419d2d:	pop    esi
  419d2e:	and    BYTE PTR [eax+0x5c],0xf5
  419d32:	mov    BYTE PTR [esi],dh
  419d34:	sbb    al,0x6
  419d36:	(bad)  
  419d37:	cs (bad) 
  419d39:	cmp    DWORD PTR [edi],ebp
  419d3b:	loop   0x419d16
  419d3d:	mov    ebp,0xb55f1af9
  419d42:	icebp  
  419d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d44:	push   0xffffff91
  419d46:	sub    ebp,DWORD PTR [edx-0x41ba2a5f]
  419d4c:	push   cs
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	push   ds
  419d4f:	stos   DWORD PTR es:[edi],eax
  419d50:	jno    0x419d58
  419d52:	adc    al,0xe3
  419d54:	pop    ebp
  419d55:	(bad)  
  419d56:	imul   esp,DWORD PTR [edx-0x7f1fbb97],0xffffffa4
  419d5d:	leave  
  419d5e:	mov    esi,0x37302642
  419d63:	ds nop
  419d65:	mov    esi,0xb5371978
  419d6a:	dec    ebx
  419d6b:	push   edi
  419d6c:	mov    ah,0x94
  419d6e:	or     eax,0xc61d686b
  419d73:	lock add al,0xfa
  419d76:	test   BYTE PTR [esi+0x10c9ec02],cl
  419d7c:	pushf  
  419d7d:	das    
  419d7e:	sti    
  419d7f:	mov    ds:0x75f5a1c1,al
  419d84:	pop    ds
  419d85:	pop    ds
  419d86:	fcom   QWORD PTR [eax-0x5e]
  419d89:	lds    esp,FWORD PTR [ecx]
  419d8b:	sbb    esp,DWORD PTR [edx]
  419d8d:	out    0x40,al
  419d8f:	cmp    DWORD PTR gs:0xde14eaf9,esi
  419d96:	pop    ss
  419d97:	out    0xa7,al
  419d99:	sbb    esi,DWORD PTR [edx]
  419d9b:	es out dx,al
  419d9d:	in     eax,0xc5
  419d9f:	popf   
  419da0:	cmp    al,0x11
  419da2:	xor    bl,BYTE PTR [ebx]
  419da4:	push   0xffffffb1
  419da6:	xor    BYTE PTR [edi],0x23
  419da9:	pop    bp
  419dab:	adc    al,0xc7
  419dad:	fstp   TBYTE PTR [edi]
  419daf:	add    ecx,DWORD PTR [ebp-0x3]
  419db2:	inc    ebp
  419db3:	pop    esi
  419db4:	pop    ss
  419db5:	cmp    BYTE PTR [ebx-0x17],dh
  419db8:	jmp    0x419de5
  419dba:	jne    0x419d69
  419dbc:	pop    es
  419dbd:	mov    dl,0xde
  419dbf:	mov    ds:0xeb6e0e56,al
  419dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc5:	dec    edi
  419dc6:	push   0x5c
  419dc8:	mov    edx,0x433cc66a
  419dcd:	mov    ch,0x72
  419dcf:	sti    
  419dd0:	mov    eax,0xc5865902
  419dd5:	add    dh,al
  419dd7:	jmp    0xe2ec3013
  419ddc:	sbb    ecx,edi
  419dde:	adc    BYTE PTR [ebp+0x75],dl
  419de1:	out    dx,al
  419de2:	lds    eax,FWORD PTR ds:0x954affa3
  419de8:	and    bh,ch
  419dea:	lds    ebp,FWORD PTR [eax-0x36]
  419ded:	ins    DWORD PTR es:[edi],dx
  419dee:	shr    BYTE PTR [edi+eiz*8],1
  419df1:	inc    ebp
  419df2:	cmp    eax,0x97e134d0
  419df7:	scas   eax,DWORD PTR es:[edi]
  419df8:	je     0x419daf
  419dfa:	xlat   BYTE PTR ds:[ebx]
  419dfb:	and    al,0xe
  419dfd:	sahf   
  419dfe:	mov    ah,0x86
  419e00:	das    
  419e01:	cld    
  419e02:	inc    ebp
  419e03:	inc    edi
  419e04:	test   BYTE PTR [ebx-0xdc106d0],ah
  419e0a:	dec    esp
  419e0b:	jg     0x419e51
  419e0d:	lea    ecx,[edx-0x73]
  419e10:	rcl    DWORD PTR [edx],cl
  419e12:	inc    ebp
  419e13:	and    edx,DWORD PTR [eax+0xa]
  419e16:	inc    esi
  419e17:	sub    DWORD PTR [ecx],eax
  419e19:	or     eax,0xa867765b
  419e1e:	idiv   dh
  419e20:	test   BYTE PTR [ebp+0x539622ec],cl
  419e26:	cmp    ah,BYTE PTR [esi+0x46711d26]
  419e2c:	out    0xbb,al
  419e2e:	sub    al,0xd0
  419e30:	sti    
  419e31:	xor    eax,0xf542b1e0
  419e36:	jl     0x419ddd
  419e38:	jge    0x419e50
  419e3a:	cdq    
  419e3b:	fldenv [esi-0x29]
  419e3e:	add    DWORD PTR [esi-0x47],esp
  419e41:	dec    esp
  419e42:	dec    edi
  419e43:	add    DWORD PTR ds:0x352d9d32,esp
  419e49:	ds out 0xff,al
  419e4c:	xchg   esi,eax
  419e4d:	mov    ch,0x9e
  419e4f:	mov    al,ds:0x342dcd31
  419e54:	push   ss
  419e55:	int    0xb2
  419e57:	mov    eax,0x8ec5e293
  419e5c:	cmc    
  419e5d:	fcomp  DWORD PTR [ecx+edi*2+0x55]
  419e61:	cs pop ds
  419e63:	into   
  419e64:	les    esi,FWORD PTR [ecx+0x3d8eb1e2]
  419e6a:	xchg   esp,eax
  419e6b:	iret   
  419e6c:	jmp    0x8a61:0x325544a4
  419e73:	dec    eax
  419e74:	jge    0x419ec3
  419e76:	fs or  dh,bl
  419e79:	jns    0x419e41
  419e7b:	inc    edi
  419e7c:	inc    esp
  419e7e:	xchg   BYTE PTR [ecx],ah
  419e80:	fisttp WORD PTR [eax]
  419e82:	(bad)  
  419e83:	stos   BYTE PTR es:[edi],al
  419e84:	shr    BYTE PTR [edx],cl
  419e86:	cmp    al,0x54
  419e88:	call   0x41af:0xd88ec78b
  419e8f:	and    ecx,ebx
  419e91:	pop    ebp
  419e92:	dec    esp
  419e93:	or     DWORD PTR [ecx+edx*8],ebp
  419e96:	fldenv [edx-0x71cfef18]
  419e9c:	xchg   esi,eax
  419e9d:	dec    eax
  419e9e:	ins    BYTE PTR es:[edi],dx
  419e9f:	add    ah,bh
  419ea1:	add    al,0xc6
  419ea3:	ret    
  419ea4:	and    esp,DWORD PTR [edx+edi*4]
  419ea7:	retf   
  419ea8:	jbe    0x419eee
  419eaa:	nop
  419eab:	xor    BYTE PTR [ebx],ch
  419ead:	cld    
  419eae:	cmc    
  419eaf:	and    bh,BYTE PTR [edi+0x61]
  419eb2:	or     eax,0x9e7a2532
  419eb7:	inc    esp
  419eb8:	jg     0x419f31
  419eba:	enter  0x2c05,0x10
  419ebe:	cld    
  419ebf:	xor    ch,al
  419ec1:	aam    0xe3
  419ec3:	and    cl,BYTE PTR [ecx]
  419ec5:	fild   QWORD PTR cs:[esi+eiz*4-0x3863b80b]
  419ecd:	in     eax,dx
  419ece:	test   eax,0xeb31f3dd
  419ed3:	outs   dx,BYTE PTR ds:[si]
  419ed5:	outs   dx,DWORD PTR ds:[esi]
  419ed6:	(bad)  
  419ed8:	sar    BYTE PTR [edi-0x405b2cc1],0x6f
  419edf:	fdiv   QWORD PTR [edi+0x5e]
  419ee2:	sub    al,0x1c
  419ee4:	(bad)  
  419ee5:	rcl    BYTE PTR [edi+ebp*1-0x8],cl
  419ee9:	aad    0xc5
  419eeb:	add    al,0x23
  419eed:	dec    esi
  419eee:	lock xchg ecx,eax
  419ef0:	or     cl,ah
  419ef2:	inc    ebp
  419ef3:	popa   
  419ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef5:	jmp    0x38990715
  419efa:	outs   dx,DWORD PTR ds:[esi]
  419efb:	cmp    BYTE PTR [ebx],dh
  419efd:	mov    dh,0x6d
  419eff:	lahf   
  419f00:	cld    
  419f01:	daa    
  419f02:	xchg   BYTE PTR [esi],ch
  419f04:	leave  
  419f05:	lock loope 0x419ef5
  419f08:	es int 0x20
  419f0b:	cmp    ebp,DWORD PTR [ecx]
  419f0d:	xor    edx,edx
  419f0f:	cmp    cl,dh
  419f11:	and    eax,0xd56e977f
  419f16:	cmp    cl,bl
  419f18:	mov    eax,ds:0x1fec860a
  419f1d:	xchg   esp,eax
  419f1e:	xor    al,0x8e
  419f20:	mov    DWORD PTR [ebp+0x6690c126],esp
  419f26:	imul   ecx,DWORD PTR [ecx+0x303f9969],0xd6c8d122
  419f30:	imul   esi,DWORD PTR [ebp+0x2a],0x78
  419f34:	and    DWORD PTR [ecx],esp
  419f36:	(bad)  
  419f37:	jmp    0x419f76
  419f39:	fs popf 
  419f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3c:	les    edx,FWORD PTR [esi+0x65]
  419f3f:	call   0xa397f8a3
  419f44:	sub    bh,BYTE PTR [eax-0x3e]
  419f47:	jg     0x419f51
  419f49:	clc    
  419f4a:	sub    ch,ch
  419f4c:	push   edx
  419f4d:	mov    dl,0x39
  419f4f:	jecxz  0x419fbb
  419f51:	push   edi
  419f52:	pop    esi
  419f53:	(bad)  
  419f54:	cwde   
  419f55:	pop    ebp
  419f56:	xchg   ecx,eax
  419f57:	xchg   esp,eax
  419f58:	cld    
  419f59:	push   0xffffffed
  419f5b:	add    bh,BYTE PTR [eax+0x1c882efb]
  419f61:	and    eax,0xfe62c1bf
  419f66:	mov    WORD PTR ds:0xd338c5c5,gs
  419f6c:	cld    
  419f6d:	jnp    0x419efc
  419f6f:	mov    ebp,0xa2ed9688
  419f74:	or     al,0xeb
  419f76:	xchg   esp,eax
  419f77:	not    DWORD PTR [ebx]
  419f79:	popf   
  419f7a:	pop    es
  419f7b:	dec    ebx
  419f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7d:	jo     0x419f7c
  419f7f:	inc    edx
  419f80:	fs dec ecx
  419f82:	xor    cl,BYTE PTR [eax]
  419f84:	mov    WORD PTR [esi],?
  419f86:	jmp    0x419f2a
  419f88:	xlat   BYTE PTR ds:[ebx]
  419f89:	out    dx,al
  419f8a:	in     al,dx
  419f8b:	mov    DWORD PTR [esi-0x7d9121b9],esp
  419f91:	xlat   BYTE PTR ds:[ebx]
  419f92:	les    edx,FWORD PTR [ebx+0x416fadb5]
  419f98:	sbb    DWORD PTR [edx],ebx
  419f9a:	(bad)  
  419f9b:	mov    ch,0x5d
  419f9d:	jg     0x419f26
  419f9f:	and    BYTE PTR [esi],0x12
  419fa2:	leave  
  419fa3:	pop    ebp
  419fa4:	and    ebp,DWORD PTR [ebx]
  419fa6:	jno    0x419f76
  419fa8:	sbb    BYTE PTR [ebp+eax*2-0x1962e179],dh
  419faf:	(bad)  
  419fb0:	mov    dl,0xd4
  419fb2:	or     al,0x63
  419fb4:	sbb    al,0xbc
  419fb6:	jbe    0x419f5e
  419fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb9:	loopne 0x41a039
  419fbb:	jns    0x419f90
  419fbd:	mov    ebp,0x6f7490b5
  419fc2:	or     BYTE PTR [ebx+0x12323aef],ah
  419fc8:	pop    ss
  419fc9:	xor    eax,DWORD PTR [ebp*8+0x7da8c785]
  419fd0:	fs xchg ebp,eax
  419fd2:	enter  0x7927,0x35
  419fd6:	mov    dh,0x4d
  419fd8:	inc    eax
  419fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fda:	cmp    ebp,DWORD PTR [eax]
  419fdc:	loope  0x419ffc
  419fde:	mov    BYTE PTR [ebx-0x157932ac],0xb5
  419fe5:	fdivr  st(6),st
  419fe7:	cs push ss
  419fe9:	sar    BYTE PTR [eax],cl
  419feb:	and    esp,DWORD PTR [ebx+0x0]
  419fee:	pop    ebx
  419fef:	cmp    esp,DWORD PTR [esi+0x5b92704e]
  419ff5:	jmp    0x41a034
  419ff7:	int3   
  419ff8:	outs   dx,BYTE PTR ds:[esi]
  419ff9:	mov    ch,0x96
  419ffb:	lea    ecx,[edi]
  419ffd:	sub    esi,DWORD PTR [edi-0x17]
  41a000:	and    ecx,DWORD PTR [edi+edi*1]
  41a003:	or     al,0xf0
  41a005:	add    ch,ah
  41a007:	or     eax,0x318a834
  41a00c:	dec    edi
  41a00d:	mov    ch,0xc8
  41a00f:	cmp    eax,0x30a7fb5a
  41a014:	pop    edi
  41a015:	jg     0x41a024
  41a017:	in     al,dx
  41a018:	out    0xd0,al
  41a01a:	lds    ebp,FWORD PTR [edx+ebp*4+0x53a057a5]
  41a021:	pop    ebp
  41a022:	xor    al,0x19
  41a024:	xlat   BYTE PTR ds:[ebx]
  41a025:	sbb    ebx,esi
  41a027:	and    cl,BYTE PTR [ecx+0x8913aed]
  41a02d:	in     al,0x38
  41a02f:	adc    DWORD PTR [ecx+0x5a465875],0x2b
  41a036:	sub    esi,DWORD PTR ds:0x9c2d7830
  41a03c:	imul   esp,DWORD PTR [esi],0x2edca193
  41a042:	xchg   BYTE PTR [ebp+0x33],dl
  41a045:	pop    es
  41a046:	(bad)  
  41a047:	xchg   ebx,eax
  41a048:	out    0xa4,eax
  41a04a:	mov    ds:0x33a6bcab,al
  41a04f:	scas   al,BYTE PTR es:[edi]
  41a050:	xor    al,BYTE PTR [eax+0x217622fd]
  41a056:	out    dx,eax
  41a057:	pop    ebx
  41a058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a059:	pop    esp
  41a05a:	mov    WORD PTR [ebp-0x1a],?
  41a05d:	xor    bl,BYTE PTR [edx+0x5b]
  41a060:	cmp    DWORD PTR [esi+0x15814501],esp
  41a066:	pop    edi
  41a067:	arpl   WORD PTR [edi-0x5d417b43],dx
  41a06d:	lds    esi,FWORD PTR [ecx+edi*8-0x3c81e8d2]
  41a074:	into   
  41a075:	neg    BYTE PTR ds:0x5d336f76
  41a07b:	xchg   esp,eax
  41a07c:	xchg   ebp,eax
  41a07d:	jb     0x41a02a
  41a07f:	shl    DWORD PTR [edi+eax*8],0xe5
  41a083:	es jmp 0x47b1:0x93434627
  41a08b:	push   eax
  41a08c:	test   eax,0xb0826a09
  41a091:	mov    ah,0x42
  41a093:	test   dl,dh
  41a095:	(bad)  
  41a096:	ficom  DWORD PTR [ecx-0x4c94ebce]
  41a09c:	scas   al,BYTE PTR es:[edi]
  41a09d:	imul   BYTE PTR [ebx+0x52]
  41a0a0:	jno    0x41a09a
  41a0a2:	inc    ebp
  41a0a3:	imul   ecx,DWORD PTR [edi-0x5faf4184],0xffffffc6
  41a0aa:	call   0x1342222e
  41a0af:	mov    ds:0xac1b7bb7,eax
  41a0b4:	pop    ss
  41a0b5:	mov    ebx,0xa18e95e2
  41a0ba:	inc    ebp
  41a0bb:	sub    cl,cl
  41a0bd:	sbb    eax,0x7f76606e
  41a0c2:	mov    WORD PTR [ecx+0x53],?
  41a0c5:	call   0x7caa7cf
  41a0ca:	rcr    DWORD PTR [edx-0x4e],1
  41a0cd:	repnz lds esi,FWORD PTR [ebx]
  41a0d0:	jmp    0x9f2e73c6
  41a0d5:	fnstenv [ebp+0x7fa51994]
  41a0db:	sbb    esi,DWORD PTR [esi-0x65]
  41a0de:	int    0x63
  41a0e0:	mov    bl,0xd7
  41a0e2:	inc    ebp
  41a0e3:	leave  
  41a0e4:	mov    bl,0xb8
  41a0e6:	dec    edx
  41a0e7:	push   ebp
  41a0e8:	push   edx
  41a0e9:	mov    bh,0xf4
  41a0eb:	push   es
  41a0ec:	stos   BYTE PTR es:[edi],al
  41a0ed:	das    
  41a0ee:	push   ss
  41a0ef:	and    ebx,DWORD PTR [esi]
  41a0f1:	loopne 0x41a087
  41a0f3:	dec    ebx
  41a0f4:	es cli 
  41a0f6:	aaa    
  41a0f7:	je     0x41a177
  41a0f9:	mov    edx,DWORD PTR [ebx]
  41a0fb:	fild   WORD PTR [eax+0x35]
  41a0fe:	das    
  41a0ff:	shl    DWORD PTR [eax],1
  41a101:	fdiv   QWORD PTR [edi-0x3d]
  41a104:	mov    ch,0x4
  41a106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a107:	xor    DWORD PTR [ecx+0x75],edi
  41a10a:	jmp    0x41a17e
  41a10c:	jp     0x41a110
  41a10e:	sub    bl,BYTE PTR [edi-0x5ae1cab8]
  41a114:	(bad)  
  41a115:	in     al,0xcb
  41a117:	mov    BYTE PTR [ecx+0x20],ch
  41a11a:	(bad)  
  41a11b:	jb     0x41a120
  41a11d:	sub    ch,0xc1
  41a120:	mov    ah,0x0
  41a122:	scas   eax,DWORD PTR es:[edi]
  41a123:	mov    ds:0x23103baa,al
  41a128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a129:	scas   eax,DWORD PTR es:[edi]
  41a12a:	fst    QWORD PTR ds:0x822766a6
  41a130:	mov    dl,0xf5
  41a132:	push   esi
  41a133:	pop    edi
  41a134:	addr16 mov ch,0xf4
  41a137:	pop    esp
  41a138:	(bad)  
  41a139:	jbe    0x41a177
  41a13b:	rcl    DWORD PTR [ecx+0x2dabc5f5],1
  41a141:	jle    0x41a132
  41a143:	sbb    al,0xf4
  41a145:	fld    DWORD PTR [esi+0x3b]
  41a148:	mov    ch,0xd7
  41a14a:	adc    BYTE PTR [ebx-0x67699ba2],ah
  41a150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a151:	dec    edx
  41a152:	inc    ebx
  41a153:	jb     0x41a0ec
  41a155:	repnz inc ebx
  41a157:	and    eax,0x5daf3a45
  41a15c:	jge    0x41a0ee
  41a15e:	repz and ebx,edi
  41a161:	retf   
  41a162:	aad    0x41
  41a164:	stos   BYTE PTR es:[edi],al
  41a165:	push   ss
  41a166:	mov    ebp,DWORD PTR [eax]
  41a168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a169:	in     eax,dx
  41a16a:	sub    DWORD PTR [ebx-0x9],esp
  41a16d:	jl     0x41a0fd
  41a16f:	ret    0x8743
  41a172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a173:	fisub  DWORD PTR [esi+0x373a961d]
  41a179:	int    0xbb
  41a17b:	xchg   DWORD PTR [ebp+0x76313396],esp
  41a181:	push   ds
  41a182:	inc    edi
  41a183:	sub    DWORD PTR [esi],eax
  41a185:	scas   al,BYTE PTR es:[edi]
  41a186:	ja     0x41a1c6
  41a188:	std    
  41a189:	retf   
  41a18a:	and    eax,0x4c3f8fc4
  41a18f:	fbstp  TBYTE PTR [ebx]
  41a191:	lds    ebx,FWORD PTR [ecx-0x3a36d01c]
  41a197:	xor    bl,dh
  41a199:	stc    
  41a19a:	ds fcmovnbe st,st(7)
  41a19d:	fs pop edi
  41a19f:	ret    
  41a1a0:	jo     0x41a209
  41a1a2:	adc    eax,0x18c9a823
  41a1a7:	iret   
  41a1a8:	clc    
  41a1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1aa:	fs dec edx
  41a1ac:	or     bh,al
  41a1ae:	dec    ecx
  41a1af:	pushf  
  41a1b0:	jbe    0x41a1dd
  41a1b2:	or     al,0x2
  41a1b4:	xchg   esi,eax
  41a1b5:	or     ah,ah
  41a1b7:	repnz pop es
  41a1b9:	mov    edi,0x33e021cb
  41a1be:	jp     0x41a1ab
  41a1c0:	imul   DWORD PTR [edx-0x51e0b1da]
  41a1c6:	mov    al,0xc6
  41a1c8:	(bad)  
  41a1c9:	(bad)
  41a1cc:	leave  
  41a1cd:	add    eax,0xf2453fa5
  41a1d2:	in     al,dx
  41a1d3:	mov    ds:0xa6ab87f,al
  41a1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d9:	ror    DWORD PTR ss:[edx+0x20],cl
  41a1dd:	inc    edi
  41a1de:	jne    0x41a18f
  41a1e0:	aaa    
  41a1e1:	xor    eax,0xb0baa215
  41a1e6:	or     eax,0x45b9ea20
  41a1eb:	in     al,dx
  41a1ec:	rcl    BYTE PTR [ecx-0x7de96bad],0x29
  41a1f3:	mov    BYTE PTR [eax],0x25
  41a1f6:	in     eax,dx
  41a1f7:	and    ah,BYTE PTR [esi-0x5c]
  41a1fa:	push   esi
  41a1fb:	in     eax,0x26
  41a1fd:	mov    ch,BYTE PTR [edi-0x5bdfc3c4]
  41a203:	es nop
  41a205:	mov    ch,0xc2
  41a207:	mov    cl,0xd3
  41a209:	jnp    0x41a25a
  41a20b:	loopne 0x41a213
  41a20d:	or     eax,0x8e3f05bf
  41a212:	adc    al,0xad
  41a214:	loope  0x41a209
  41a216:	and    esi,DWORD PTR [ebx-0x6a]
  41a219:	ss jp  0x41a212
  41a21c:	push   ds
  41a21d:	in     al,0x5
  41a21f:	pop    es
  41a220:	inc    ebx
  41a221:	and    ah,bl
  41a223:	test   al,0xd1
  41a225:	(bad)  
  41a226:	sahf   
  41a227:	ja     0x41a1df
  41a229:	mov    cl,0x98
  41a22b:	xor    al,BYTE PTR [di+0x2356]
  41a230:	out    0x27,al
  41a232:	loop   0x41a27a
  41a234:	sub    esi,ebp
  41a236:	adc    eax,0x8a160cab
  41a23b:	sub    eax,0xb7bdb59a
  41a240:	mov    bh,0xe3
  41a242:	jmp    0x41a21a
  41a244:	push   0x1077c5bf
  41a249:	outs   dx,DWORD PTR ds:[esi]
  41a24a:	popa   
  41a24b:	in     al,0x66
  41a24d:	xchg   ecx,eax
  41a24e:	jns    0x41a2bb
  41a250:	pop    ss
  41a251:	sbb    DWORD PTR [eax-0x5d],ebx
  41a254:	pop    ebx
  41a255:	xchg   edi,ebx
  41a257:	lds    esp,FWORD PTR ds:0xad261584
  41a25d:	cmp    al,0xfe
  41a25f:	xchg   ecx,eax
  41a260:	outs   dx,DWORD PTR ds:[esi]
  41a261:	mov    ch,0xa8
  41a263:	int    0xf4
  41a265:	sub    BYTE PTR [edx+esi*1-0x21],dl
  41a269:	cli    
  41a26a:	rol    BYTE PTR [ebx+0x7eb2db26],1
  41a270:	rcl    DWORD PTR [edx],0x4c
  41a273:	or     eax,0xf0683a91
  41a278:	ins    BYTE PTR es:[edi],dx
  41a279:	sub    eax,0x23d60446
  41a27e:	mov    cl,0xb6
  41a280:	mov    WORD PTR [eax-0x3e],cs
  41a283:	js     0x41a29f
  41a285:	cmp    eax,0xa80ea81a
  41a28a:	or     al,0x88
  41a28c:	mov    ds:0x97d99316,eax
  41a291:	std    
  41a292:	mov    ebx,ebx
  41a294:	inc    ecx
  41a295:	aad    0xf
  41a297:	sbb    DWORD PTR [edi-0x6d],0x43
  41a29b:	jl     0x41a261
  41a29d:	pop    ebx
  41a29e:	repz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a2a1:	in     eax,0x2f
  41a2a3:	pop    ebp
  41a2a4:	shl    DWORD PTR [esp+eax*2],cl
  41a2a7:	pop    esi
  41a2a8:	outs   dx,BYTE PTR ds:[esi]
  41a2a9:	fisttp DWORD PTR [eax+0x23]
  41a2ac:	(bad)  
  41a2ae:	cmp    al,BYTE PTR [edx-0x5a]
  41a2b1:	sar    BYTE PTR [esi+eax*2],cl
  41a2b4:	loope  0x41a2b7
  41a2b6:	mov    DWORD PTR [ecx],esi
  41a2b8:	pushf  
  41a2b9:	xor    eax,0x4ba64e19
  41a2be:	popa   
  41a2bf:	jmp    0x5707c253
  41a2c4:	jne    0x41a288
  41a2c6:	mov    bh,ch
  41a2c8:	aam    0x1b
  41a2ca:	mov    ds:0xdfdc4a22,al
  41a2cf:	mov    ds:0x73992d1e,al
  41a2d4:	bound  ecx,QWORD PTR ds:[ebx]
  41a2d7:	fcmovbe st,st(3)
  41a2d9:	retf   0xbfcd
  41a2dc:	sbb    dl,al
  41a2de:	stos   DWORD PTR es:[edi],eax
  41a2df:	cli    
  41a2e0:	mov    BYTE PTR [edi+0x35653045],bl
  41a2e6:	iret   
  41a2e7:	adc    al,0xb9
  41a2e9:	cmp    eax,edi
  41a2eb:	bound  edx,QWORD PTR [edi+0x648c7cb]
  41a2f1:	aas    
  41a2f2:	call   0x2a38:0xbf44b74
  41a2f9:	pop    esp
  41a2fa:	ins    DWORD PTR es:[edi],dx
  41a2fb:	mov    ds:0xa1fe1344,al
  41a300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a301:	sub    al,BYTE PTR [esi+0x2b]
  41a304:	mov    bl,0xb3
  41a306:	and    al,0x93
  41a308:	or     al,0x6f
  41a30a:	push   esp
  41a30b:	dec    ebp
  41a30c:	js     0x41a34d
  41a30e:	imul   BYTE PTR [ebp-0x6c0e4198]
  41a314:	xlat   BYTE PTR ds:[ebx]
  41a315:	lods   eax,DWORD PTR ds:[esi]
  41a316:	and    BYTE PTR [edx+0x2a],0x43
  41a31a:	cli    
  41a31b:	mov    WORD PTR [esi],fs
  41a31d:	call   0x4df0:0xa6da36e2
  41a324:	lahf   
  41a325:	xor    eax,0x841e8544
  41a32a:	aam    0xd8
  41a32c:	(bad)  
  41a32d:	fld    DWORD PTR [ebp+0x8]
  41a330:	int3   
  41a331:	enter  0x3c93,0xf1
  41a335:	inc    ecx
  41a336:	aad    0x3e
  41a338:	add    eax,0xa6656999
  41a33d:	stc    
  41a33e:	ficomp DWORD PTR [edx-0x4c]
  41a341:	and    eax,0xb622ee71
  41a346:	sar    BYTE PTR [eax+0x784e003d],cl
  41a34c:	not    DWORD PTR [esi]
  41a34e:	aad    0x59
  41a350:	out    dx,al
  41a351:	in     al,0xfe
  41a353:	and    bl,dh
  41a355:	cmp    edi,DWORD PTR [ebx]
  41a357:	call   DWORD PTR [esi]
  41a359:	mov    cl,0xae
  41a35b:	shl    DWORD PTR [esi-0x5a],0xb8
  41a35f:	pop    esp
  41a360:	aas    
  41a361:	cdq    
  41a362:	push   0x37
  41a364:	inc    edx
  41a365:	je     0x41a39a
  41a367:	and    ecx,esi
  41a369:	gs jge 0x41a310
  41a36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a36d:	xchg   ebp,eax
  41a36e:	ss xchg edx,eax
  41a370:	pop    ebx
  41a371:	push   ebp
  41a372:	cs mov ah,ch
  41a375:	or     cl,BYTE PTR es:[eax]
  41a378:	fwait
  41a379:	jne    0x41a3bd
  41a37b:	push   eax
  41a37c:	xlat   BYTE PTR ds:[ebx]
  41a37d:	xchg   esi,eax
  41a37e:	sbb    eax,0x27d26ff
  41a383:	fwait
  41a384:	xor    DWORD PTR [edi-0x2b],esp
  41a387:	jmp    0x1c8d75d
  41a38c:	xor    edx,DWORD PTR [ebx]
  41a38e:	mov    esp,0x3b292e3e
  41a393:	bound  ebx,QWORD PTR [edi]
  41a395:	jbe    0x41a344
  41a397:	push   edi
  41a398:	addr16 gs and al,0xda
  41a39c:	je     0x41a3ac
  41a39e:	push   ecx
  41a39f:	push   eax
  41a3a0:	pop    eax
  41a3a1:	stc    
  41a3a2:	inc    esi
  41a3a3:	adc    al,0xcc
  41a3a5:	fcomi  st,st(6)
  41a3a7:	mov    ds:0xded5ee00,al
  41a3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ad:	mov    BYTE PTR [esi],bh
  41a3af:	pop    ecx
  41a3b0:	inc    edi
  41a3b1:	inc    edx
  41a3b2:	inc    eax
  41a3b3:	retf   
  41a3b4:	stos   DWORD PTR es:[edi],eax
  41a3b5:	xor    al,0xe5
  41a3b7:	xor    edi,DWORD PTR [esi+0x65]
  41a3ba:	inc    edx
  41a3bb:	inc    eax
  41a3bc:	mov    eax,ds:0xf604c8bf
  41a3c1:	into   
  41a3c2:	popa   
  41a3c3:	cmp    eax,0x8ccfc74a
  41a3c8:	adc    bl,BYTE PTR [edi*1-0x577186dd]
  41a3cf:	mov    eax,0x5d0bcea6
  41a3d4:	xor    al,0xe2
  41a3d6:	lock sar DWORD PTR [edi+0x35],0x8a
  41a3db:	fldz   
  41a3dd:	mov    eax,0x4c56cf4
  41a3e2:	or     esp,eax
  41a3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e5:	retf   
  41a3e6:	add    al,0x46
  41a3e8:	addr16 popa 
  41a3ea:	pop    edx
  41a3eb:	popa   
  41a3ec:	and    BYTE PTR [edx-0x410edfbc],dh
  41a3f2:	in     eax,dx
  41a3f3:	pop    ss
  41a3f4:	fcmovne st,st(6)
  41a3f6:	add    edi,ebx
  41a3f8:	and    dl,al
  41a3fa:	xchg   esp,eax
  41a3fb:	adc    DWORD PTR [edi+0x7aeefdd7],ebx
  41a401:	xchg   ebp,eax
  41a402:	pop    es
  41a403:	push   ebp
  41a404:	dec    edi
  41a405:	out    dx,al
  41a406:	push   ss
  41a407:	sbb    eax,0x5f447b41
  41a40c:	lock push ss
  41a40e:	(bad)  
  41a40f:	xor    al,0x7c
  41a411:	shl    DWORD PTR [ebx*2+0x6a2cb58f],1
  41a418:	jl     0x41a491
  41a41a:	pop    ss
  41a41b:	cli    
  41a41c:	pop    ss
  41a41d:	iret   
  41a41e:	inc    ebp
  41a41f:	repnz pop ebx
  41a421:	mov    ebx,0xea712fe7
  41a426:	out    0xcf,al
  41a428:	das    
  41a429:	lahf   
  41a42a:	cmp    esp,DWORD PTR [ebx-0x275b123d]
  41a430:	and    eax,0x5631322e
  41a435:	mov    edi,0xae966d6c
  41a43a:	enter  0x68c2,0x2d
  41a43e:	es push eax
  41a440:	jmp    0x41a491
  41a442:	daa    
  41a443:	mov    al,0x26
  41a445:	(bad)  
  41a446:	jmp    0x6efc:0xa4eabf85
  41a44d:	xor    eax,0x8a00f342
  41a452:	jae    0x41a4c2
  41a454:	stos   BYTE PTR es:[edi],al
  41a455:	sub    eax,esi
  41a457:	inc    esi
  41a458:	inc    esi
  41a459:	dec    ebp
  41a45a:	mov    al,ds:0x81faf807
  41a45f:	adc    eax,0x2327322d
  41a464:	into   
  41a465:	arpl   WORD PTR [esi+0x45d7dde6],dx
  41a46b:	xor    BYTE PTR [edx-0xc9f25b4],dl
  41a471:	ficom  WORD PTR [ebp+0x36fe545f]
  41a477:	mov    ds:0x3f129ddf,eax
  41a47c:	sbb    bl,dl
  41a47e:	je     0x41a4ac
  41a480:	es ror dh,0x99
  41a484:	mov    bl,0x1e
  41a486:	cmp    eax,0xdc25eb9c
  41a48b:	mov    ds:0xd0c53cab,al
  41a490:	in     al,dx
  41a491:	fs inc edx
  41a493:	pop    ebx
  41a494:	ror    esi,0x92
  41a497:	xor    eax,0x5207640e
  41a49c:	imul   esi,DWORD PTR ds:0xeb0917df,0xffffff8f
  41a4a3:	xlat   BYTE PTR ds:[ebx]
  41a4a4:	(bad)  
  41a4a5:	push   esi
  41a4a6:	inc    ebp
  41a4a7:	das    
  41a4a8:	xchg   DWORD PTR [esi+0x41],ebx
  41a4ab:	je     0x41a4cb
  41a4ad:	div    BYTE PTR [ebp-0x7f4a5bb2]
  41a4b3:	std    
  41a4b4:	pop    ecx
  41a4b5:	repz jns 0x41a49d
  41a4b8:	stos   BYTE PTR es:[edi],al
  41a4b9:	mov    esp,0xac1f3ec4
  41a4be:	xor    ch,al
  41a4c0:	dec    esp
  41a4c1:	or     ebx,ebp
  41a4c3:	push   ds
  41a4c4:	add    eax,0x8b900ed4
  41a4c9:	adc    eax,0x6aa61409
  41a4ce:	mov    ecx,0x9f0697d1
  41a4d3:	sahf   
  41a4d4:	inc    esi
  41a4d5:	jbe    0x41a513
  41a4d7:	arpl   bp,ax
  41a4d9:	idiv   BYTE PTR [ebp+0x3807af56]
  41a4df:	and    ebp,DWORD PTR [edi-0x12]
  41a4e2:	adc    esp,DWORD PTR [ebp+0x26]
  41a4e5:	pop    edx
  41a4e6:	xchg   edx,eax
  41a4e7:	jg     0x41a4f0
  41a4e9:	sbb    ah,BYTE PTR [ebp+0x57b534f4]
  41a4ef:	push   ecx
  41a4f0:	sar    ecx,0x43
  41a4f3:	adc    cl,BYTE PTR [eax+0x32]
  41a4f6:	lea    eax,[esi+0x7cf0e826]
  41a4fc:	test   BYTE PTR [ecx+0x37],dh
  41a4ff:	es daa 
  41a501:	xor    eax,0xc48fdd1d
  41a506:	jns    0x41a489
  41a508:	sbb    bh,cl
  41a50a:	push   ebx
  41a50b:	ret    0xdea6
  41a50e:	iret   
  41a50f:	xor    al,0xce
  41a511:	out    0x65,eax
  41a513:	lods   al,BYTE PTR ds:[esi]
  41a514:	(bad)  
  41a515:	sub    eax,0x2c0946be
  41a51a:	push   ss
  41a51b:	fild   QWORD PTR [eax]
  41a51d:	jne    0x41a4b6
  41a51f:	push   0x26
  41a521:	inc    ecx
  41a522:	ror    BYTE PTR [edx-0xa47620b],1
  41a528:	hlt    
  41a529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52a:	adc    BYTE PTR [edi-0x36b98a62],ch
  41a530:	lahf   
  41a531:	dec    eax
  41a532:	pop    es
  41a533:	jmp    0xb1c1:0x267be6a5
  41a53a:	dec    edi
  41a53b:	and    DWORD PTR ds:0xdb481c2b,ebp
  41a541:	sar    BYTE PTR [esi-0xa496f6a],1
  41a547:	arpl   WORD PTR [ebx+ebx*4-0x7b],bp
  41a54b:	pop    edx
  41a54c:	es fwait
  41a54e:	in     al,0x67
  41a550:	loopne 0x41a5b5
  41a552:	pop    edx
  41a553:	imul   esi,DWORD PTR ds:0x6c4bd843,0x38
  41a55b:	xlat   BYTE PTR ds:[ebx]
  41a55c:	arpl   WORD PTR [edi-0x98d8c3b],di
  41a562:	popa   
  41a563:	fsub   QWORD PTR [eax]
  41a565:	bound  edx,QWORD PTR [edi*8+0x18e749ef]
  41a56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56d:	fwait
  41a56e:	sub    DWORD PTR [eax-0x44],ecx
  41a571:	(bad)  
  41a572:	jl     0x41a5c5
  41a574:	es jbe 0x41a50d
  41a577:	inc    ebx
  41a578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a579:	add    cl,BYTE PTR [ebx+0x7b3570ab]
  41a57f:	cli    
  41a580:	(bad)  
  41a581:	iret   
  41a582:	fmul   DWORD PTR [edi+0x14]
  41a585:	loopne 0x41a52e
  41a587:	in     eax,0x4f
  41a589:	pop    es
  41a58a:	mov    dl,0x1b
  41a58c:	cmp    edx,DWORD PTR [edi+edi*1]
  41a58f:	and    ebp,DWORD PTR [edi+eiz*8]
  41a592:	push   esp
  41a593:	jle    0x41a5b0
  41a595:	mov    dl,0xbf
  41a597:	xchg   esp,eax
  41a598:	xchg   ebx,ebp
  41a59a:	or     BYTE PTR [ebx],ah
  41a59c:	loop   0x41a532
  41a59e:	push   ecx
  41a59f:	mov    ebp,0x3945e9e5
  41a5a4:	(bad)  
  41a5a5:	push   eax
  41a5a6:	ins    DWORD PTR es:[edi],dx
  41a5a7:	xor    esi,edi
  41a5a9:	sub    eax,DWORD PTR fs:[edi+0x2b3bb1aa]
  41a5b0:	xchg   BYTE PTR [ebx],cl
  41a5b2:	fs pop ebp
  41a5b4:	adc    eax,0xa6cb1130
  41a5b9:	mov    ebp,0x62e24a60
  41a5be:	sub    al,0x9c
  41a5c0:	pop    edi
  41a5c1:	mov    ch,0xa5
  41a5c3:	scas   eax,DWORD PTR es:[edi]
  41a5c4:	push   eax
  41a5c5:	adc    BYTE PTR [edi+0x6],dl
  41a5c8:	adc    DWORD PTR [ebp-0x3e],ecx
  41a5cb:	rcl    DWORD PTR [eax],cl
  41a5cd:	ins    DWORD PTR es:[edi],dx
  41a5ce:	mov    dl,0x47
  41a5d0:	fist   WORD PTR ds:[edx]
  41a5d3:	addr16 das 
  41a5d5:	xor    eax,0x78aeecfb
  41a5da:	mov    ds,WORD PTR [ecx-0x63]
  41a5dd:	add    al,0xc6
  41a5df:	jmp    0xd7d4473d
  41a5e4:	xchg   edi,eax
  41a5e5:	aaa    
  41a5e6:	mov    eax,0xa998820d
  41a5eb:	mov    eax,ds:0xb455b7e9
  41a5f0:	and    esp,DWORD PTR ds:0xd59da132
  41a5f6:	shl    BYTE PTR [eax+0x51e6bc40],0x9e
  41a5fd:	sub    esi,DWORD PTR ss:[edi+0x123f7e7b]
  41a604:	dec    edx
  41a605:	inc    ecx
  41a606:	ds jae 0x41a667
  41a609:	or     eax,0xcefe9414
  41a60e:	out    0xe2,al
  41a610:	jae    0x41a643
  41a612:	mov    BYTE PTR [ecx+0x1688aea5],0x64
  41a619:	push   esp
  41a61a:	add    DWORD PTR [eax],edx
  41a61c:	adc    edx,DWORD PTR [edi+0x57651ea6]
  41a622:	jbe    0x41a644
  41a624:	dec    edi
  41a625:	add    eax,0xc0894a1c
  41a62a:	jne    0x41a62b
  41a62c:	in     eax,0xd9
  41a62e:	or     eax,0x6ca9cea3
  41a633:	pushf  
  41a634:	mov    ds:0x1ca2e07f,eax
  41a639:	adc    al,0x6b
  41a63b:	dec    esp
  41a63c:	es push es
  41a63e:	ins    DWORD PTR es:[edi],dx
  41a63f:	addr16 jge 0x41a666
  41a642:	dec    edi
  41a643:	jo     0x41a68e
  41a645:	xor    eax,0x3073a8f
  41a64a:	scas   al,BYTE PTR es:[edi]
  41a64b:	enter  0x5df4,0x45
  41a64f:	into   
  41a650:	out    dx,al
  41a651:	pop    ss
  41a652:	mov    WORD PTR [edi-0x52],fs
  41a655:	mov    bl,0xca
  41a657:	in     al,dx
  41a658:	mov    ds:0x4257102a,eax
  41a65d:	js     0x41a68c
  41a65f:	and    ebx,DWORD PTR [edi+ecx*4-0x13]
  41a663:	paddsw mm1,mm1
  41a666:	inc    ebp
  41a667:	add    al,0x8c
  41a669:	adc    esp,esi
  41a66b:	pop    esp
  41a66c:	rcl    DWORD PTR [ebx-0x7d],cl
  41a66f:	dec    ebx
  41a670:	xchg   edi,eax
  41a671:	lods   eax,DWORD PTR ds:[esi]
  41a672:	mov    esi,0xa6187785
  41a677:	lock jo 0x41a675
  41a67a:	jge    0x41a673
  41a67c:	and    eax,0x9eca57c5
  41a681:	sub    DWORD PTR [eax],edi
  41a683:	int    0x3d
  41a685:	cld    
  41a686:	les    esi,FWORD PTR [ecx]
  41a688:	ds out 0x72,al
  41a68b:	mov    al,ds:0x2a797578
  41a690:	test   al,0x12
  41a692:	xor    ebx,DWORD PTR [ecx]
  41a694:	push   ss
  41a695:	inc    ch
  41a697:	jecxz  0x41a655
  41a699:	std    
  41a69a:	je     0x41a65d
  41a69c:	popf   
  41a69d:	xor    eax,0x400e57da
  41a6a2:	and    BYTE PTR [ebx-0x7911e33c],dh
  41a6a8:	and    ebx,DWORD PTR [esi+esi*2+0x616df23]
  41a6af:	jb     0x41a686
  41a6b1:	loop   0x41a6ef
  41a6b3:	(bad)  
  41a6b4:	jecxz  0x41a66a
  41a6b6:	push   ds
  41a6b7:	and    esp,DWORD PTR [ecx+0x2e]
  41a6ba:	add    BYTE PTR ds:0x8e0c6626,cl
  41a6c0:	aaa    
  41a6c1:	inc    eax
  41a6c2:	dec    esp
  41a6c3:	ret    
  41a6c4:	jl     0x41a66d
  41a6c6:	xchg   ebp,eax
  41a6c7:	cmc    
  41a6c8:	jb     0x41a65f
  41a6ca:	push   ebx
  41a6cb:	cmp    BYTE PTR [edx],dh
  41a6cd:	int3   
  41a6ce:	scas   al,BYTE PTR es:[edi]
  41a6cf:	lds    esp,FWORD PTR [esi]
  41a6d1:	loopne 0x41a67b
  41a6d3:	push   eax
  41a6d4:	cdq    
  41a6d5:	fisttp QWORD PTR [edi]
  41a6d7:	ret    
  41a6d8:	cdq    
  41a6d9:	xor    eax,0xe3b34855
  41a6de:	sar    DWORD PTR [ebp+0x13],cl
  41a6e1:	(bad)  
  41a6e2:	dec    eax
  41a6e3:	imul   esi,DWORD PTR [eax],0xf
  41a6e6:	or     ch,BYTE PTR [ebx]
  41a6e8:	leave  
  41a6e9:	std    
  41a6ea:	inc    ebp
  41a6eb:	sub    DWORD PTR [esi],eax
  41a6ed:	jbe    0x41a6eb
  41a6ef:	adc    BYTE PTR [eax+0x106a8091],dh
  41a6f5:	or     DWORD PTR [eax-0x3992addf],ecx
  41a6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6fc:	mov    ch,0x4e
  41a6fe:	es sti 
  41a700:	outs   dx,BYTE PTR es:[esi]
  41a702:	adc    al,0x3c
  41a704:	pop    es
  41a705:	adc    edi,eax
  41a707:	sub    ah,BYTE PTR [edx+0x10786c59]
  41a70d:	mov    bl,0x8
  41a70f:	mov    eax,ds:0xd460d534
  41a714:	mov    cs,WORD PTR [ecx]
  41a716:	inc    esi
  41a717:	stos   DWORD PTR es:[edi],eax
  41a718:	jb     0x41a72d
  41a71a:	jmp    0xbccd:0xdd51888b
  41a721:	mov    ah,0xe1
  41a723:	call   0x37637ceb
  41a728:	jne    0x41a6e3
  41a72a:	out    0x7f,al
  41a72c:	pop    es
  41a72d:	fnsave [ecx+0x2244ea4f]
  41a733:	jecxz  0x41a797
  41a735:	arpl   WORD PTR [eax+0x7869278],ax
  41a73b:	and    esi,DWORD PTR [eax+0x5e]
  41a73e:	inc    ebx
  41a73f:	mov    bh,0x22
  41a741:	sbb    BYTE PTR [ecx+0xd],cl
  41a744:	js     0x41a721
  41a746:	sub    eax,0x2cfe85e1
  41a74b:	addr16 add eax,0x7122fc6d
  41a751:	mov    cl,0x4f
  41a753:	inc    esp
  41a754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a755:	mov    bl,0x18
  41a757:	sahf   
  41a758:	jnp    0x41a6e7
  41a75a:	mov    al,0x38
  41a75c:	fs aas 
  41a75e:	xlat   BYTE PTR ds:[ebx]
  41a75f:	mov    ch,0x46
  41a761:	mov    ebx,0x73b5ff36
  41a766:	sub    al,BYTE PTR [edx+edx*4-0x2c309fa]
  41a76d:	cs (bad) 
  41a76f:	pop    esp
  41a770:	jns    0x41a756
  41a772:	inc    ebx
  41a773:	gs ja  0x41a70c
  41a776:	loope  0x41a7a8
  41a778:	inc    edi
  41a779:	lock jno 0x41a79b
  41a77c:	mov    ?,WORD PTR [ebp+0x21]
  41a77f:	mov    al,0x6e
  41a781:	scas   al,BYTE PTR es:[edi]
  41a782:	mov    dh,0xa4
  41a784:	sbb    bl,BYTE PTR [edx]
  41a786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a787:	cmp    al,0xa9
  41a789:	call   0xafa3a7cb
  41a78e:	gs add esp,eax
  41a791:	adc    bl,BYTE PTR [edi+0x4b21f57]
  41a797:	pop    ecx
  41a798:	dec    edi
  41a799:	test   DWORD PTR [ebx],ecx
  41a79b:	sahf   
  41a79c:	push   ebx
  41a79d:	cmp    edx,DWORD PTR [esi+0x12f686c8]
  41a7a3:	and    ecx,DWORD PTR [ebx+esi*1]
  41a7a6:	add    al,BYTE PTR [ebx]
  41a7a8:	lahf   
  41a7a9:	sub    BYTE PTR [eax],0x3e
  41a7ac:	int3   
  41a7ad:	xor    DWORD PTR [edi],ebx
  41a7af:	test   esi,esi
  41a7b1:	xrelease mov DWORD PTR [esi],edi
  41a7b4:	lea    esi,[ebp+0x44ebf8b]
  41a7ba:	inc    esp
  41a7bb:	push   edx
  41a7bc:	jns    0x41a7ba
  41a7be:	ds fdivp st(2),st
  41a7c1:	adc    edi,DWORD PTR [ecx]
  41a7c3:	mov    al,ds:0xd3302018
  41a7c8:	cmc    
  41a7c9:	ja     0x41a74d
  41a7cb:	iret   
  41a7cc:	mov    ds:0x8be9b635,eax
  41a7d1:	xchg   ecx,eax
  41a7d2:	addr16 aaa 
  41a7d4:	fst    QWORD PTR [ebx]
  41a7d6:	inc    esi
  41a7d7:	stos   BYTE PTR es:[edi],al
  41a7d8:	adc    ebp,DWORD PTR [ecx]
  41a7da:	push   ds
  41a7db:	jbe    0x41a7b8
  41a7dd:	add    bh,BYTE PTR [edx]
  41a7df:	retf   0x500
  41a7e2:	push   esi
  41a7e3:	mov    ds:0xf9374259,eax
  41a7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e9:	mov    dl,0x89
  41a7eb:	mov    al,ds:0xc824c81e
  41a7f0:	bound  edx,QWORD PTR [esi]
  41a7f2:	retf   0x64e0
  41a7f5:	push   ebx
  41a7f6:	outs   dx,DWORD PTR ds:[esi]
  41a7f7:	adc    eax,0x4f01ce66
  41a7fc:	ins    BYTE PTR es:[edi],dx
  41a7fd:	mov    cl,0x44
  41a7ff:	fldcw  WORD PTR [ecx+0x4642b925]
  41a805:	inc    ecx
  41a806:	ins    BYTE PTR es:[edi],dx
  41a807:	mov    ch,0x7d
  41a809:	mov    ch,0xef
  41a80b:	sti    
  41a80c:	pop    ss
  41a80d:	xor    ch,BYTE PTR [ecx+0x36d7a11d]
  41a813:	in     eax,dx
  41a814:	mov    edi,0x140a6f8
  41a819:	cmp    eax,DWORD PTR [esp+edx*1-0x1c865d23]
  41a820:	enter  0xda72,0xd2
  41a824:	loope  0x41a84b
  41a826:	(bad)  
  41a827:	mov    eax,ds:0x85f62a0f
  41a82c:	or     DWORD PTR [edi+edi*1],edx
  41a82f:	mov    dl,0x5a
  41a831:	stos   DWORD PTR es:[edi],eax
  41a832:	in     eax,0xeb
  41a834:	pop    ecx
  41a835:	mov    cl,0x23
  41a837:	xchg   ebx,eax
  41a838:	call   0x63ce8432
  41a83d:	push   edi
  41a83e:	outs   dx,BYTE PTR ds:[esi]
  41a83f:	and    BYTE PTR ds:0x74c6da55,bh
  41a845:	rol    BYTE PTR [ebp+0x18],cl
  41a848:	mov    ds,WORD PTR [ecx]
  41a84a:	mov    DWORD PTR [edi-0xb],edi
  41a84d:	add    eax,0xe9177bcd
  41a852:	clc    
  41a853:	mov    ds:0x6ee71358,al
  41a858:	es retf 0x43d3
  41a85c:	fdiv   DWORD PTR [eax+0x18f1ebca]
  41a862:	ficom  DWORD PTR ss:[esi+0x51b73fa4]
  41a869:	jecxz  0x41a830
  41a86b:	std    
  41a86c:	pop    ebp
  41a86d:	xchg   edi,eax
  41a86e:	xchg   BYTE PTR [ecx-0x7a80715a],ch
  41a874:	xchg   ecx,eax
  41a875:	ins    BYTE PTR es:[edi],dx
  41a876:	push   ebp
  41a877:	sbb    eax,DWORD PTR [esi+0x7bee02b3]
  41a87d:	and    BYTE PTR [edi],al
  41a87f:	(bad)  
  41a880:	xchg   esp,eax
  41a881:	int3   
  41a882:	mov    edi,0x429c2e42
  41a887:	sub    eax,0x27ba65c2
  41a88c:	mov    dh,0x7e
  41a88e:	inc    edx
  41a88f:	push   ebx
  41a890:	add    dh,BYTE PTR ds:0xc36588ef
  41a896:	imul   DWORD PTR [eax]
  41a898:	push   ds
  41a899:	mov    esi,0x886df05
  41a89e:	inc    esi
  41a89f:	inc    ebx
  41a8a0:	add    al,0xb2
  41a8a2:	stos   BYTE PTR es:[edi],al
  41a8a3:	or     ch,BYTE PTR [esi]
  41a8a5:	fdiv   DWORD PTR [esi+0x16f40e42]
  41a8ab:	mov    ds:0xa4b9c290,eax
  41a8b0:	and    eax,0xa0cd5fd0
  41a8b5:	in     eax,dx
  41a8b6:	pop    ss
  41a8b7:	into   
  41a8b8:	mov    dl,0xde
  41a8bb:	cdq    
  41a8bc:	inc    ebp
  41a8bd:	mov    ch,0x18
  41a8bf:	push   0xffffffac
  41a8c1:	adc    esp,edx
  41a8c3:	cmp    BYTE PTR [edx-0x8c2ba45],0x72
  41a8ca:	pop    ecx
  41a8cb:	cli    
  41a8cc:	sbb    BYTE PTR [eax],bh
  41a8ce:	adc    al,BYTE PTR [ecx]
  41a8d0:	out    dx,al
  41a8d1:	and    DWORD PTR [esi-0x7b],eax
  41a8d4:	sbb    eax,0x42c7261b
  41a8d9:	sbb    ch,BYTE PTR [esi-0x2ea0acb7]
  41a8df:	and    al,0x25
  41a8e1:	xor    al,BYTE PTR [esi]
  41a8e3:	imul   eax,DWORD PTR [ebx-0x4f],0xf7f945c2
  41a8ea:	or     DWORD PTR [ebx+0x26],eax
  41a8ed:	(bad)  
  41a8ee:	mov    dh,0x6d
  41a8f0:	ja     0x41a968
  41a8f2:	repnz xchg ebp,eax
  41a8f4:	jge    0x41a8ab
  41a8f6:	cmc    
  41a8f7:	dec    eax
  41a8f8:	mov    dh,0x2
  41a8fa:	sbb    ch,ah
  41a8fc:	arpl   WORD PTR [ecx-0x4c23d1d7],di
  41a902:	mov    cl,0x0
  41a904:	retf   
  41a905:	ja     0x41a968
  41a907:	mov    ebp,0x3a5babb2
  41a90c:	cs aam 0x70
  41a90f:	cmp    ebx,esp
  41a911:	rcl    BYTE PTR [edi],0x4
  41a914:	fst    DWORD PTR es:[ecx-0xca7c7b2]
  41a91b:	pop    ebp
  41a91c:	mov    dl,bh
  41a91e:	jecxz  0x41a99f
  41a920:	jecxz  0x41a93d
  41a922:	inc    ecx
  41a923:	mov    ds:0x9d283f5f,eax
  41a928:	imul   ebp,DWORD PTR [esi+edi*8+0x7a0d3c22],0xffffffd7
  41a930:	es or  al,0xb8
  41a933:	xchg   edx,eax
  41a934:	xor    ecx,DWORD PTR [eax-0x4ae37b0f]
  41a93a:	into   
  41a93b:	sbb    al,al
  41a93d:	mov    ah,0x65
  41a93f:	inc    eax
  41a940:	daa    
  41a941:	sbb    eax,0xe1a470f9
  41a946:	in     al,dx
  41a947:	cli    
  41a948:	jmp    0x41a8da
  41a94a:	jmp    0x41a977
  41a94c:	iret   
  41a94d:	inc    esp
  41a94e:	push   ds
  41a94f:	(bad)  
  41a950:	or     eax,0x37a2fa74
  41a955:	sbb    DWORD PTR [ebp-0x44],eax
  41a958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a959:	sub    BYTE PTR [ebx],cl
  41a95b:	push   0xffffffc2
  41a95d:	or     BYTE PTR [edx+edi*8+0x2d],cl
  41a961:	aaa    
  41a962:	mov    DWORD PTR [edx+0x74],ecx
  41a965:	data16 lock and dh,bl
  41a969:	mov    dh,0xca
  41a96b:	dec    ebx
  41a96c:	out    0xe3,eax
  41a96e:	inc    ebp
  41a96f:	add    BYTE PTR [eax-0x3a34ac03],dl
  41a975:	xor    DWORD PTR [edi-0x55],ebx
  41a978:	inc    edi
  41a979:	popa   
  41a97a:	(bad)  
  41a97b:	mov    eax,ds:0xd5766f76
  41a980:	pop    ebx
  41a981:	les    esp,FWORD PTR [ecx-0x37]
  41a984:	cmp    eax,0xe2fc473
  41a989:	jae    0x41a9b4
  41a98b:	cli    
  41a98c:	xchg   edi,eax
  41a98d:	gs jmp 0x41a9bd
  41a990:	test   BYTE PTR ds:0x2bda441b,dh
  41a996:	pop    ebp
  41a997:	adc    al,0x97
  41a999:	pop    esp
  41a99a:	or     ah,BYTE PTR [edx+0x26]
  41a99d:	xchg   edx,eax
  41a99e:	pop    ebx
  41a99f:	gs nop
  41a9a1:	xchg   BYTE PTR [edx-0x28],ah
  41a9a4:	call   0x2a6e:0x8c6d1ab5
  41a9ab:	neg    BYTE PTR [eax-0x126b3a07]
  41a9b1:	mov    esi,DWORD PTR [ebx+eax*4+0x5a]
  41a9b5:	stos   DWORD PTR es:[edi],eax
  41a9b6:	fidivr WORD PTR ds:0xa9dfb575
  41a9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9bd:	dec    ecx
  41a9be:	mov    ds:0xf5fe89dd,al
  41a9c3:	ds cwde 
  41a9c5:	sub    al,0x46
  41a9c7:	(bad)  
  41a9c8:	fst    DWORD PTR [edx-0x3a883a12]
  41a9ce:	pusha  
  41a9cf:	cmp    ch,BYTE PTR [ecx]
  41a9d1:	pusha  
  41a9d2:	(bad)  [edx]
  41a9d4:	inc    esp
  41a9d5:	addr16 jg 0x41aa14
  41a9d8:	and    esi,DWORD PTR [eax-0x65]
  41a9db:	scas   eax,DWORD PTR es:[edi]
  41a9dc:	sbb    edi,DWORD PTR [ecx-0x18]
  41a9df:	sub    dl,al
  41a9e1:	xor    eax,0xd1142301
  41a9e6:	push   es
  41a9e7:	xchg   ebx,eax
  41a9e8:	and    eax,0x8b1b97cb
  41a9ed:	add    BYTE PTR [ecx+0x1291c491],al
  41a9f3:	ins    DWORD PTR es:[edi],dx
  41a9f4:	ja     0x41aa03
  41a9f6:	or     DWORD PTR [ebx+0x6a354398],esp
  41a9fc:	and    eax,0x971f2970
  41aa01:	shl    bl,cl
  41aa03:	jecxz  0x41aa13
  41aa05:	mov    ds:0x32b54ba5,eax
  41aa0a:	mov    ss:0x1ed38014,eax
  41aa10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa11:	out    dx,al
  41aa12:	cmp    eax,0x65bd3448
  41aa17:	ret    
  41aa18:	dec    edi
  41aa19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa1a:	xchg   edx,eax
  41aa1b:	cmp    bl,BYTE PTR [esi+eax*2]
  41aa1e:	mov    bh,BYTE PTR [ebx-0x5cb3904a]
  41aa24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa25:	es (bad) 
  41aa27:	fdivr  QWORD PTR [edx]
  41aa29:	add    eax,0xb1a552e5
  41aa2e:	mov    dh,0x54
  41aa30:	out    0x58,al
  41aa32:	loopne 0x41aa56
  41aa34:	fstp   TBYTE PTR [ecx-0x3f]
  41aa37:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa39:	in     eax,0x63
  41aa3b:	dec    esi
  41aa3c:	mov    ecx,0x81d41dfe
  41aa41:	outs   dx,DWORD PTR cs:[esi]
  41aa43:	data16 (bad) 
  41aa45:	sub    al,0x16
  41aa47:	scas   al,BYTE PTR es:[edi]
  41aa48:	mov    esp,DWORD PTR [ebx+0x52]
  41aa4b:	or     eax,0xbc7f0f25
  41aa50:	ja     0x41a9da
  41aa52:	sbb    DWORD PTR [edi],edx
  41aa54:	lods   al,BYTE PTR ds:[esi]
  41aa55:	push   ds
  41aa56:	pop    ds
  41aa57:	test   DWORD PTR [ebp-0x4b],ebx
  41aa5a:	clc    
  41aa5b:	push   0x248f2450
  41aa60:	mov    esp,es
  41aa62:	inc    ebp
  41aa63:	rol    ebx,cl
  41aa65:	in     al,dx
  41aa66:	xor    BYTE PTR [esi+0x3e],dh
  41aa69:	mov    esp,0xe71babd3
  41aa6e:	lods   al,BYTE PTR ds:[esi]
  41aa6f:	lahf   
  41aa70:	out    0xc3,eax
  41aa72:	repnz retf 
  41aa74:	aaa    
  41aa75:	aad    0xed
  41aa77:	(bad)  
  41aa78:	push   cs
  41aa79:	rol    ch,1
  41aa7b:	xchg   esp,eax
  41aa7c:	stos   BYTE PTR es:[edi],al
  41aa7d:	jmp    0x473183bf
  41aa82:	pop    ds
  41aa83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa84:	mov    bh,0xb3
  41aa86:	cmp    ecx,DWORD PTR [ebx+0x45]
  41aa89:	loope  0x41aa66
  41aa8b:	pop    ecx
  41aa8c:	shl    DWORD PTR [ebx-0x3059d5ca],0x89
  41aa93:	xchg   edx,eax
  41aa94:	xor    DWORD PTR [eax+0x11],0xf5e539b7
  41aa9b:	add    edx,DWORD PTR [ebp+0x1f]
  41aa9e:	js     0x41aa5c
  41aaa0:	dec    esp
  41aaa1:	mov    ch,0xe7
  41aaa3:	or     DWORD PTR [eax+0xa],ebx
  41aaa6:	ficom  DWORD PTR [eax]
  41aaa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa9:	ror    DWORD PTR [ebp+0x5d],0xcf
  41aaad:	cmc    
  41aaae:	sub    eax,0x875d248
  41aab3:	lock mov ds:0x2c1f8c1c,eax
  41aab9:	in     eax,0xfd
  41aabb:	int    0xbb
  41aabd:	rol    ch,cl
  41aabf:	repz jmp 0x41ab41
  41aac2:	(bad)  
  41aac3:	or     ebp,DWORD PTR [di-0x3ff5]
  41aac8:	xchg   BYTE PTR [esi+0x25e1db0],dh
  41aace:	push   esi
  41aacf:	in     al,dx
  41aad0:	xchg   ebx,eax
  41aad1:	push   eax
  41aad2:	cmp    al,0x9c
  41aad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad5:	aas    
  41aad6:	mul    BYTE PTR [edx-0x2b]
  41aad9:	inc    esp
  41aada:	or     ch,dl
  41aadc:	(bad)  
  41aadd:	pop    ss
  41aade:	xchg   ecx,eax
  41aadf:	adc    eax,0x8bdbece6
  41aae4:	fbld   TBYTE PTR [ecx+ebx*2-0x7b04591c]
  41aaeb:	imul   ebp,DWORD PTR [ebp-0x1a],0x55
  41aaef:	dec    esi
  41aaf0:	xor    BYTE PTR [ebp-0x1475e0e1],dh
  41aaf6:	mov    eax,0xc5f51de6
  41aafb:	js     0x41ab5c
  41aafd:	mov    WORD PTR [ebp+0x58],fs
  41ab00:	push   ds
  41ab01:	daa    
  41ab02:	out    dx,al
  41ab03:	push   ss
  41ab04:	and    al,0xcb
  41ab06:	or     eax,0x8efdcfa3
  41ab0b:	adc    ecx,DWORD PTR [edx-0x66c007af]
  41ab11:	pop    ebx
  41ab12:	cmc    
  41ab13:	bound  ebp,QWORD PTR [ecx]
  41ab15:	sub    esi,esi
  41ab17:	lea    ebp,[eax]
  41ab19:	pop    esi
  41ab1a:	das    
  41ab1b:	push   ds
  41ab1c:	push   ebp
  41ab1d:	mov    ch,0x76
  41ab1f:	idiv   si
  41ab22:	movaps XMMWORD PTR [esi],xmm4
  41ab25:	lock sar DWORD PTR [ebx+0x64],0x40
  41ab2a:	pop    ecx
  41ab2b:	sbb    BYTE PTR [ecx-0x4b],ch
  41ab2e:	mov    ebx,0x63bd537f
  41ab33:	add    DWORD PTR [ecx+0x29],ebx
  41ab36:	(bad)  
  41ab37:	pop    ds
  41ab38:	sub    eax,0x3e9e31ed
  41ab3d:	test   DWORD PTR [esi+0x55fe1724],ebp
  41ab43:	and    ecx,DWORD PTR [ebx]
  41ab45:	dec    edi
  41ab46:	xchg   esi,eax
  41ab47:	cmp    DWORD PTR [eax],ecx
  41ab49:	cmp    DWORD PTR fs:[esi-0x1],esp
  41ab4d:	ret    0x62e8
  41ab50:	mov    eax,ds:0xde56fd97
  41ab55:	xor    al,0x4e
  41ab57:	mov    ds:0x3b6227af,eax
  41ab5c:	es mov edx,0x23b43582
  41ab62:	mov    al,ds:0x7e18a9f4
  41ab67:	imul   esp,DWORD PTR [esi-0x80],0x271b5467
  41ab6e:	out    0x89,al
  41ab70:	and    eax,0xede4a719
  41ab75:	pop    ds
  41ab76:	xor    DWORD PTR [ebp-0x53],eax
  41ab79:	(bad)  
  41ab7a:	xchg   ebp,eax
  41ab7b:	into   
  41ab7c:	jbe    0x41ab33
  41ab7e:	mov    cl,0x7f
  41ab80:	xlat   BYTE PTR ds:[ebx]
  41ab81:	and    esp,0xb80f1ed2
  41ab87:	and    cl,BYTE PTR [edi+0x1d]
  41ab8a:	out    0xbb,al
  41ab8c:	adc    eax,0x477f8af3
  41ab91:	rcr    DWORD PTR [eax+0x55fe9c31],0xa3
  41ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab99:	adc    al,0xc
  41ab9b:	pop    esp
  41ab9c:	mov    BYTE PTR [edi+0x42],bh
  41ab9f:	sub    eax,0xa342bc55
  41aba4:	pop    edi
  41aba5:	push   ebp
  41aba6:	push   edx
  41aba7:	mov    ah,0xd3
  41aba9:	les    ebp,FWORD PTR [eax]
  41abab:	and    edi,esi
  41abad:	xchg   ebp,eax
  41abae:	inc    esi
  41abaf:	scas   eax,DWORD PTR es:[edi]
  41abb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb1:	add    esp,eax
  41abb3:	mov    eax,cs
  41abb5:	call   0xceec:0xb55656e2
  41abbc:	in     al,0x3
  41abbe:	inc    ebp
  41abbf:	sub    DWORD PTR [edi-0x6b],edx
  41abc2:	lock cmp DWORD PTR ss:[esi],esp
  41abc6:	es test al,dl
  41abc9:	xchg   ebp,eax
  41abca:	xor    al,0xd1
  41abcc:	pusha  
  41abcd:	mov    ecx,0x73e81fee
  41abd2:	inc    edx
  41abd3:	xchg   BYTE PTR [ebp+0x9],dh
  41abd6:	inc    edi
  41abd7:	inc    ecx
  41abd8:	jl     0x41abdd
  41abda:	cmp    eax,ebx
  41abdc:	pop    ss
  41abdd:	jno    0x41ab8f
  41abdf:	je     0x41ac43
  41abe1:	mov    esp,edi
  41abe3:	call   0x2facf10e
  41abe8:	jmp    0xec74:0x9bdb47a5
  41abef:	mov    ds:0xf86ce46,al
  41abf4:	sahf   
  41abf5:	mov    ah,0xf4
  41abf7:	ret    0xd57f
  41abfa:	jb     0x41ac3d
  41abfc:	pop    ebp
  41abfd:	xlat   BYTE PTR ds:[ebx]
  41abfe:	mov    ebp,0x187a21be
  41ac03:	mov    ds:0x252f02b6,eax
  41ac08:	es call 0xd1882521
  41ac0e:	dec    esp
  41ac0f:	loop   0x41ac3b
  41ac11:	mov    ch,0x1c
  41ac13:	rol    ebp,0x3b
  41ac16:	and    BYTE PTR [ebp+0x6c],al
  41ac19:	xor    BYTE PTR [esi-0x4c],al
  41ac1c:	scas   al,BYTE PTR es:[edi]
  41ac1d:	sbb    al,0xb0
  41ac1f:	rol    BYTE PTR [esi],0xf8
  41ac22:	ret    0x31aa
  41ac25:	sub    al,0x47
  41ac27:	mov    ds:0xb272943c,eax
  41ac2c:	and    al,0x74
  41ac2e:	push   edx
  41ac2f:	into   
  41ac30:	xchg   edx,eax
  41ac31:	jo     0x41abd0
  41ac33:	inc    ebx
  41ac34:	mov    esp,0x5e572c27
  41ac39:	inc    ebx
  41ac3a:	clc    
  41ac3b:	and    al,BYTE PTR [eax+0x168eaefb]
  41ac41:	cli    
  41ac42:	dec    eax
  41ac43:	or     BYTE PTR [esi-0x3e],ah
  41ac46:	pop    edx
  41ac47:	pop    ecx
  41ac48:	jmp    0x41ac4b
  41ac4a:	add    eax,0x4b2e6390
  41ac4f:	repz inc edi
  41ac51:	jmp    0x5dff601b
  41ac56:	xchg   BYTE PTR [ebx+edi*8-0x307b5140],cl
  41ac5d:	push   cs
  41ac5e:	adc    esi,DWORD PTR gs:[ecx+0x57]
  41ac62:	out    0xa2,al
  41ac64:	xchg   esi,eax
  41ac65:	mov    ah,0x29
  41ac67:	xor    BYTE PTR [eax],ch
  41ac69:	fsubp  st(0),st
  41ac6b:	inc    esi
  41ac6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6d:	dec    esi
  41ac6e:	jecxz  0x41acae
  41ac70:	and    DWORD PTR [ebp+0x43b43e57],edx
  41ac76:	cs xchg ebp,eax
  41ac78:	into   
  41ac79:	aas    
  41ac7a:	xor    eax,0xc5f10f23
  41ac7f:	aad    0x72
  41ac81:	test   DWORD PTR [ecx+0x41bde37],ecx
  41ac87:	loop   0x41aced
  41ac89:	add    dl,BYTE PTR [edi+0x23]
  41ac8c:	pop    ebp
  41ac8d:	pop    ss
  41ac8e:	cmp    edx,DWORD PTR [esi-0x7b7c8eda]
  41ac94:	and    BYTE PTR [ebp-0x30],bh
  41ac97:	push   cs
  41ac98:	xor    edx,DWORD PTR [edi-0x735a3256]
  41ac9e:	jp     0x41accc
  41aca0:	je     0x41ac30
  41aca2:	inc    esi
  41aca3:	cmp    DWORD PTR [edi],ebx
  41aca5:	and    BYTE PTR fs:[edx],bh
  41aca8:	pushf  
  41aca9:	in     eax,0xb5
  41acab:	lahf   
  41acac:	inc    esp
  41acad:	lods   al,BYTE PTR ds:[esi]
  41acae:	cmc    
  41acaf:	ja     0x41ac87
  41acb1:	push   es
  41acb2:	ja     0x41acd3
  41acb4:	loope  0x41ac69
  41acb6:	jns    0x41ac7e
  41acb8:	ds in  eax,dx
  41acba:	ret    
  41acbb:	dec    esi
  41acbc:	add    al,BYTE PTR [ebx]
  41acbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acbf:	dec    eax
  41acc0:	xchg   edi,eax
  41acc1:	in     eax,0x6b
  41acc3:	imul   eax,esi,0x8e830f33
  41acc9:	or     eax,0x2debb7e0
  41acce:	push   ebx
  41accf:	mov    ds:0x6e51a029,eax
  41acd4:	es out 0x1f,al
  41acd7:	pop    esp
  41acd8:	fsubrp st(6),st
  41acda:	and    al,0x8
  41acdc:	fs xor al,0x64
  41acdf:	mov    ebx,0xe4b76283
  41ace4:	out    0xf2,al
  41ace6:	push   ebp
  41ace7:	xchg   esp,eax
  41ace8:	fdivr  QWORD PTR [esi+0x425fc87]
  41acee:	and    al,0xf0
  41acf0:	or     al,al
  41acf2:	mov    esp,0xa00aac41
  41acf7:	aas    
  41acf8:	in     eax,0x16
  41acfa:	sub    BYTE PTR [ebx-0x15d0ed2c],ah
  41ad00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad01:	sar    DWORD PTR [edx-0x11c913c3],1
  41ad07:	xchg   DWORD PTR ds:0x92d906b5,ebp
  41ad0d:	and    al,0x79
  41ad0f:	mov    ecx,0x41c4c37b
  41ad14:	aad    0xec
  41ad16:	xlat   BYTE PTR ds:[ebx]
  41ad17:	inc    edx
  41ad18:	sub    DWORD PTR [ebp-0x4b0b0667],edx
  41ad1e:	and    dh,BYTE PTR [edi-0x64ff9934]
  41ad24:	inc    edi
  41ad25:	inc    ecx
  41ad26:	push   cs
  41ad27:	std    
  41ad28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad29:	pop    edx
  41ad2a:	and    BYTE PTR [edx+0x54],ch
  41ad2d:	or     ch,bh
  41ad2f:	sahf   
  41ad30:	mov    eax,0xa6c97616
  41ad35:	or     bl,BYTE PTR [ebx-0x70]
  41ad38:	scas   eax,DWORD PTR es:[edi]
  41ad39:	add    ebp,DWORD PTR [esi]
  41ad3b:	xor    ah,BYTE PTR [esi+0x174e0f1f]
  41ad41:	mov    eax,DWORD PTR [edi-0x1d]
  41ad44:	nop    DWORD PTR [eax]
  41ad47:	add    al,0xfd
  41ad49:	pushf  
  41ad4a:	je     0x41ad8c
  41ad4c:	(bad)  
  41ad4d:	dec    esp
  41ad4e:	test   BYTE PTR [edx+0x5cf87289],ah
  41ad54:	mov    ch,0xb
  41ad56:	or     al,0xe3
  41ad58:	lods   eax,DWORD PTR ds:[esi]
  41ad59:	test   al,al
  41ad5b:	or     edx,esi
  41ad5d:	faddp  st(1),st
  41ad5f:	fwait
  41ad60:	(bad)  
  41ad61:	cli    
  41ad62:	aad    0xf5
  41ad64:	add    BYTE PTR [edx+0x63],dl
  41ad67:	mov    ds:0x5c5f6b17,eax
  41ad6c:	push   es
  41ad6d:	mul    DWORD PTR [esi+edx*2]
  41ad70:	stos   BYTE PTR es:[edi],al
  41ad71:	push   ebx
  41ad72:	fcmovu st,st(4)
  41ad74:	mov    al,ds:0xc8232720
  41ad79:	inc    ecx
  41ad7a:	inc    ebp
  41ad7b:	push   eax
  41ad7c:	and    al,BYTE PTR [eax-0x4e]
  41ad7f:	fld    DWORD PTR [ebx+0x4eff5ecb]
  41ad85:	or     ebx,ebp
  41ad87:	mov    dl,0x3b
  41ad89:	xor    eax,0x1a9d8361
  41ad8e:	shr    DWORD PTR [esi+ebp*4-0x77],cl
  41ad92:	inc    edx
  41ad93:	and    al,0xb8
  41ad95:	dec    edx
  41ad96:	call   DWORD PTR [esi-0x5b]
  41ad99:	ins    BYTE PTR es:[edi],dx
  41ad9a:	sub    al,0x6
  41ad9c:	cmp    ah,BYTE PTR [ebp-0x3c]
  41ad9f:	rcr    esi,cl
  41ada1:	mov    dl,0xb8
  41ada3:	lds    esi,FWORD PTR [edi-0x6231fb96]
  41ada9:	xchg   edi,eax
  41adaa:	test   DWORD PTR [ecx+0x6b],esp
  41adad:	leave  
  41adae:	inc    edi
  41adaf:	dec    edx
  41adb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb1:	jmp    FWORD PTR [edi-0x2d]
  41adb4:	adc    bl,ah
  41adb6:	mov    al,0x54
  41adb8:	es jno 0x41adb3
  41adbb:	loop   0x41ae38
  41adbd:	adc    ebx,DWORD PTR [ecx]
  41adbf:	and    ebx,DWORD PTR [esi-0x56]
  41adc2:	es jp  0x41adea
  41adc5:	xor    DWORD PTR [edx-0x3b],0xe
  41adc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adca:	cmp    DWORD PTR [edx-0x6a],esp
  41adcd:	xchg   edx,eax
  41adce:	xchg   edi,eax
  41adcf:	pop    ebx
  41add0:	sbb    cl,dh
  41add2:	sub    ah,BYTE PTR [ebx]
  41add4:	mov    edx,0x9e1495f8
  41add9:	mov    eax,DWORD PTR [esi]
  41addb:	iret   
  41addc:	mov    bh,0xe3
  41adde:	js     0x41ae31
  41ade0:	jbe    0x41ae27
  41ade2:	and    ebx,DWORD PTR [eax]
  41ade4:	sahf   
  41ade5:	xor    eax,0xfc79af98
  41adea:	push   eax
  41adeb:	inc    eax
  41adec:	gs mov eax,0xe875d2c5
  41adf2:	shl    BYTE PTR [esi],0xb7
  41adf5:	adc    edx,DWORD PTR [eax-0x28]
  41adf8:	add    DWORD PTR [edx+0x66],0xce563aa2
  41adff:	pop    edi
  41ae00:	mov    esi,0x26b2ea19
  41ae05:	jnp    0x41ad94
  41ae07:	cmp    eax,esp
  41ae09:	push   DWORD PTR [esi]
  41ae0b:	inc    eax
  41ae0c:	shl    DWORD PTR [ebx],cl
  41ae0e:	jae    0x41ae16
  41ae10:	in     eax,0xb8
  41ae12:	sub    BYTE PTR [ebx+eiz*2],0xd5
  41ae16:	popf   
  41ae17:	leave  
  41ae18:	cli    
  41ae19:	rol    ah,1
  41ae1b:	adc    al,0xeb
  41ae1d:	adc    eax,0x459e9393
  41ae22:	jl     0x41ae8d
  41ae24:	add    edx,edi
  41ae26:	(bad)  
  41ae27:	aas    
  41ae28:	sbb    esp,ebp
  41ae2a:	dec    esi
  41ae2b:	adc    eax,0x9f8b1133
  41ae30:	lahf   
  41ae31:	push   edx
  41ae32:	dec    edi
  41ae33:	ret    
  41ae34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae35:	dec    edx
  41ae36:	push   0x68
  41ae38:	sub    BYTE PTR [esi],al
  41ae3a:	push   es
  41ae3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae3c:	hlt    
  41ae3d:	imul   esp,esp,0x51e02b35
  41ae43:	and    ebx,DWORD PTR [edx+0x76210566]
  41ae49:	ror    BYTE PTR [ebx+0x90bf24b],cl
  41ae4f:	sti    
  41ae50:	push   ebp
  41ae51:	jne    0x41ae74
  41ae53:	mov    ds:0x80716c92,eax
  41ae58:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ae5a:	arpl   WORD PTR [eax],di
  41ae5c:	and    dl,dh
  41ae5e:	jno    0x41aeaa
  41ae60:	dec    edx
  41ae61:	xor    al,0x1b
  41ae63:	call   DWORD PTR [ebx-0x39ec0fde]
  41ae69:	sub    al,0xff
  41ae6b:	test   DWORD PTR ds:0xc13199a8,esp
  41ae71:	dec    BYTE PTR [edx+0x59692b14]
  41ae77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae78:	inc    esi
  41ae79:	pop    ss
  41ae7a:	sbb    al,0xa3
  41ae7c:	push   0x4e
  41ae7e:	imul   ebp,edi,0xffffffa6
  41ae81:	ins    BYTE PTR es:[edi],dx
  41ae82:	sub    edi,DWORD PTR [esi+0x44]
  41ae85:	jb     0x41aecf
  41ae87:	clc    
  41ae88:	jle    0x41aebf
  41ae8a:	sub    DWORD PTR [esp+eiz*2+0x2a],ebx
  41ae8e:	es jmp 0x55a6:0xf555bd70
  41ae96:	rcl    DWORD PTR [edx+0x10],1
  41ae99:	ret    0x9a2b
  41ae9c:	jb     0x41aed3
  41ae9e:	add    al,BYTE PTR [edi+0x72]
  41aea1:	(bad)  
  41aea2:	push   ss
  41aea3:	mov    ecx,0x62b684ce
  41aea8:	inc    eax
  41aea9:	add    eax,esp
  41aeab:	push   edi
  41aeac:	and    al,0xce
  41aeae:	add    eax,0x70fd5d3
  41aeb3:	push   eax
  41aeb4:	push   ecx
  41aeb5:	aaa    
  41aeb6:	in     eax,0x22
  41aeb8:	fs inc edi
  41aeba:	inc    edi
  41aebb:	mov    fs,WORD PTR [esi]
  41aebd:	pop    esi
  41aebe:	mov    edi,0xef16bd3d
  41aec3:	jbe    0x41aeb2
  41aec5:	xchg   ebp,eax
  41aec6:	and    ebp,ebp
  41aec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec9:	call   0x5c15:0x1ac92110
  41aed0:	rol    ebp,cl
  41aed2:	inc    ebp
  41aed3:	mov    ch,0x3d
  41aed5:	daa    
  41aed6:	add    DWORD PTR [esi+0x26e177cf],0x4e
  41aedd:	mov    ebp,0x208ca2ee
  41aee2:	lahf   
  41aee3:	or     BYTE PTR [esi],ah
  41aee5:	push   eax
  41aee6:	jecxz  0x41af30
  41aee8:	ja     0x41af67
  41aeea:	inc    esi
  41aeeb:	ss push 0xffffffb5
  41aeee:	sbb    eax,0xcf40bd13
  41aef3:	jns    0x41af60
  41aef5:	and    eax,esi
  41aef7:	clc    
  41aef8:	sbb    ah,ah
  41aefa:	push   ebx
  41aefb:	dec    esi
  41aefc:	pop    eax
  41aefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aefe:	xor    BYTE PTR [edx-0x5caf7ac7],0x71
  41af05:	fsub   QWORD PTR [ebp+0x49]
  41af08:	or     DWORD PTR [edi-0x10a8f6ed],edx
  41af0e:	and    eax,0xa15d1c23
  41af13:	inc    edi
  41af14:	pop    es
  41af15:	add    BYTE PTR [esi+0x36054694],bl
  41af1b:	mov    esp,0xa70bb685
  41af20:	sahf   
  41af21:	xchg   ebp,eax
  41af22:	fmul   DWORD PTR [edx]
  41af24:	fst    st(1)
  41af26:	pop    ecx
  41af27:	adc    eax,0x56f8a46e
  41af2c:	imul   esi,DWORD PTR ds:0x6f180913,0xfc6142bb
  41af36:	mov    esi,0xeefef23e
  41af3b:	(bad)  
  41af3d:	jge    0x41af3d
  41af3f:	ret    0xb563
  41af42:	mov    BYTE PTR [esi-0x35],dl
  41af45:	pop    esp
  41af46:	sbb    al,0xeb
  41af48:	outs   dx,DWORD PTR ds:[esi]
  41af49:	mov    DWORD PTR [esi+0x11ba3161],esi
  41af4f:	sbb    bl,BYTE PTR [esi+0x1bd94d42]
  41af55:	pop    esi
  41af56:	test   al,0xa5
  41af58:	scas   al,BYTE PTR es:[edi]
  41af59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af5a:	int3   
  41af5b:	imul   edx,esp,0xffffffea
  41af5e:	inc    edi
  41af5f:	(bad)  
  41af60:	es mov ch,0x21
  41af63:	pop    es
  41af64:	mov    WORD PTR [edi+0x1f],es
  41af67:	or     BYTE PTR [ebp-0x8ff39d1],0x17
  41af6e:	add    BYTE PTR [esi-0x41],al
  41af71:	les    ecx,FWORD PTR [ecx-0x13e1c2c4]
  41af77:	and    dh,BYTE PTR [esi-0x5dc8fd1e]
  41af7d:	push   0xffffff94
  41af7f:	jmp    0x395f9c52
  41af84:	xor    ch,BYTE PTR [ebx]
  41af86:	mov    al,ds:0x1f6e6499
  41af8b:	mov    ds:0xc3a7b8ea,eax
  41af90:	es mov edi,0xc7ce5188
  41af96:	jbe    0x41affd
  41af98:	mov    esi,DWORD PTR [ebp-0x6141097c]
  41af9e:	inc    edx
  41af9f:	fcomi  st,st(5)
  41afa1:	push   ss
  41afa2:	or     BYTE PTR [esi+0x5c12e508],al
  41afa8:	add    dl,BYTE PTR [ecx]
  41afaa:	inc    esi
  41afab:	aad    0x1c
  41afad:	je     0x41afc2
  41afaf:	sub    DWORD PTR [ecx+0x35],ebx
  41afb2:	std    
  41afb3:	dec    ebx
  41afb4:	mov    eax,DWORD PTR [ecx+0x3504a378]
  41afba:	inc    esi
  41afbb:	jnp    0x41af71
  41afbd:	fisttp QWORD PTR ds:0xef112b62
  41afc3:	push   ds
  41afc4:	push   es
  41afc5:	jmp    0x41afa4
  41afc7:	xor    DWORD PTR [ebp+0x713185a6],esp
  41afcd:	sub    DWORD PTR [edx],esi
  41afcf:	dec    eax
  41afd0:	pop    eax
  41afd1:	(bad)  
  41afd2:	adc    eax,0x45e907ca
  41afd7:	(bad)  
  41afd9:	dec    ebp
  41afda:	aam    0x45
  41afdc:	xor    ch,BYTE PTR [ebp-0x42]
  41afdf:	xchg   esp,eax
  41afe0:	pop    edi
  41afe1:	retf   
  41afe2:	int    0x75
  41afe4:	cmp    eax,0xfba33a66
  41afe9:	xor    al,0x2e
  41afeb:	push   es
  41afec:	(bad)  
  41afed:	jmp    0x2b9:0xc37d1062
  41aff4:	es (bad) 
  41aff6:	stos   BYTE PTR es:[edi],al
  41aff7:	mov    bl,al
  41aff9:	inc    sp
  41affb:	jo     0x41b033
  41affd:	xor    eax,0xc434cc80
  41b002:	sar    BYTE PTR [edi],1
  41b004:	xor    ch,BYTE PTR [edi+eiz*1+0xe]
  41b008:	inc    eax
  41b009:	fidivr WORD PTR [esi+0x65]
  41b00c:	es and al,0x1b
  41b00f:	xchg   al,ch
  41b011:	mov    ds:0x924f2add,al
  41b016:	test   DWORD PTR [edi],ebx
  41b018:	cwde   
  41b019:	lea    eax,[ecx-0x77ec4580]
  41b01f:	(bad)  
  41b021:	mov    dh,0x45
  41b023:	ins    BYTE PTR es:[edi],dx
  41b024:	in     al,0x26
  41b026:	enter  0x654f,0x33
  41b02a:	aas    
  41b02b:	dec    ecx
  41b02c:	sub    ebx,esi
  41b02e:	mov    eax,ds:0x4d053b22
  41b033:	fnstenv [ebp-0x59d2f5f0]
  41b039:	test   eax,0x8d5b9a2f
  41b03e:	adc    edx,DWORD PTR [esi]
  41b040:	adc    al,0x35
  41b042:	dec    esi
  41b043:	xor    DWORD PTR [edx+0x623cf787],ebp
  41b049:	mov    bh,0x5e
  41b04b:	push   edi
  41b04c:	mov    dl,BYTE PTR [ecx-0x43]
  41b04f:	dec    edx
  41b050:	(bad)  
  41b051:	gs icebp 
  41b053:	loop   0x41b065
  41b055:	xor    bh,BYTE PTR [eax]
  41b057:	test   BYTE PTR [edi-0x27],dl
  41b05a:	push   ecx
  41b05b:	mov    ds:0x8349c0a4,eax
  41b060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b061:	jg     0x41b0ac
  41b063:	sub    bh,bl
  41b065:	test   al,0x72
  41b067:	inc    ecx
  41b068:	sahf   
  41b069:	mov    ch,0x7b
  41b06b:	xchg   edi,eax
  41b06c:	or     cl,dl
  41b06e:	cli    
  41b06f:	addr16 inc edx
  41b071:	fiadd  WORD PTR [ebp+0x31]
  41b074:	and    eax,0xe4a840f0
  41b079:	push   edi
  41b07a:	imul   esi,DWORD PTR [esi],0xe3a70d29
  41b080:	adc    eax,0x65406797
  41b085:	sub    DWORD PTR ds:[edi],ebp
  41b088:	dec    ebp
  41b089:	(bad)  
  41b08a:	out    0x19,al
  41b08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b08d:	jmp    0x48de05df
  41b092:	cwde   
  41b093:	mov    edx,0x7fd3b592
  41b098:	xchg   ecx,eax
  41b099:	aaa    
  41b09a:	jg     0x41b0b8
  41b09c:	mov    DWORD PTR [edx+0x13690dc0],0x8ad76b
  41b0a6:	cli    
  41b0a7:	loop   0x41b02f
  41b0a9:	mov    ch,0x8a
  41b0ab:	sub    DWORD PTR [edi],ebx
  41b0ad:	xor    bh,dh
  41b0af:	add    al,0x2e
  41b0b1:	je     0x41b0f7
  41b0b3:	shr    BYTE PTR [ecx-0x75fc2919],cl
  41b0b9:	inc    ebp
  41b0ba:	fadd   QWORD PTR [edi]
  41b0bc:	loop   0x41b0ef
  41b0be:	aad    0x90
  41b0c0:	add    eax,0x6431cc05
  41b0c5:	xchg   edx,edi
  41b0c7:	and    ah,BYTE PTR [ebp+eiz*8+0x21b6d808]
  41b0ce:	xor    BYTE PTR [ecx],cl
  41b0d0:	xlat   BYTE PTR ds:[ebx]
  41b0d1:	jmp    0xa335:0x25e3f28
  41b0d8:	in     eax,dx
  41b0d9:	cmp    al,BYTE PTR [ecx+0x795aa6ae]
  41b0df:	mov    al,ds:0xe5d25f1d
  41b0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e5:	mov    ch,0xd7
  41b0e7:	mov    WORD PTR ds:0x496f3e40,es
  41b0ed:	rol    ebp,0x8b
  41b0f0:	mov    eax,0xb3062cf
  41b0f5:	jne    0x41b0a1
  41b0f7:	(bad)  
  41b0f8:	shl    BYTE PTR [edi-0x7b40f942],1
  41b0fe:	and    BYTE PTR [ebp+0x62],bl
  41b101:	sbb    esp,DWORD PTR ds:0xe612f2fc
  41b107:	ret    0x5ca5
  41b10a:	xor    al,0xb1
  41b10c:	pop    eax
  41b10d:	jle    0x41b13e
  41b10f:	cmc    
  41b110:	sub    al,0x12
  41b112:	je     0x41b156
  41b114:	sahf   
  41b115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b116:	fsub   DWORD PTR [ecx+0x637546f0]
  41b11c:	(bad)  
  41b11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b11e:	pop    es
  41b11f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b120:	mov    esi,0x86a94266
  41b125:	and    eax,0x216ef1bf
  41b12a:	dec    ebp
  41b12b:	inc    ecx
  41b12c:	add    eax,0xb1bac135
  41b131:	sahf   
  41b132:	and    eax,eax
  41b134:	jns    0x41b13b
  41b136:	popf   
  41b137:	out    dx,al
  41b138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b139:	cmp    eax,0xf3994064
  41b13e:	ds inc esp
  41b140:	dec    esi
  41b141:	pop    ss
  41b142:	add    ebx,DWORD PTR [ebx+0x38820366]
  41b148:	retf   0x9eab
  41b14b:	xrelease mov BYTE PTR [ecx-0xc],bh
  41b14f:	repz adc BYTE PTR [ebp-0x4b],al
  41b153:	fcomip st,st(5)
  41b155:	xor    DWORD PTR [ecx+0x26],0x58
  41b159:	mov    ch,0x92
  41b15b:	jns    0x41b1d3
  41b15d:	imul   ebx,edi,0x4f
  41b160:	pop    ebx
  41b161:	adc    eax,0x9cdeb146
  41b166:	push   eax
  41b167:	pop    esp
  41b168:	jnp    0x41b175
  41b16a:	je     0x41b11d
  41b16c:	mov    dh,0x8c
  41b16e:	jae    0x41b103
  41b170:	mov    bh,0x6f
  41b172:	pop    ds
  41b173:	sbb    DWORD PTR [ecx],0xffffffb9
  41b176:	jmp    0x3f4ab235
  41b17b:	xchg   esp,eax
  41b17c:	mov    ebp,0x8aa337ed
  41b181:	lahf   
  41b182:	cmc    
  41b183:	push   ss
  41b184:	pop    edx
  41b185:	pop    ecx
  41b186:	push   ebp
  41b187:	mov    ds:0x1561a651,eax
  41b18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18d:	jnp    0x41b1b0
  41b18f:	jns    0x41b1c1
  41b191:	mov    cl,0x4
  41b193:	stos   BYTE PTR es:[edi],al
  41b194:	sub    ch,BYTE PTR [edx+0x359d5f8a]
  41b19a:	lods   eax,DWORD PTR ds:[esi]
  41b19b:	jg     0x41b166
  41b19d:	cdq    
  41b19e:	cmp    eax,0x5051a61c
  41b1a3:	inc    ebx
  41b1a4:	fnstenv [ecx]
  41b1a6:	in     eax,0x15
  41b1a8:	adc    DWORD PTR [edx],esi
  41b1aa:	cmp    ah,BYTE PTR [edx+0x117b726]
  41b1b0:	repnz daa 
  41b1b2:	dec    esp
  41b1b3:	cmp    esp,DWORD PTR ds:0x5fd47130
  41b1b9:	mov    BYTE PTR [eax+0x57d5419b],al
  41b1bf:	xchg   edi,eax
  41b1c0:	jo     0x41b1f7
  41b1c2:	es enter 0x91fd,0xcc
  41b1c7:	cld    
  41b1c8:	xchg   esp,eax
  41b1c9:	ins    DWORD PTR es:[edi],dx
  41b1ca:	inc    ebp
  41b1cb:	out    dx,eax
  41b1cc:	mov    esp,0xc25d2aaa
  41b1d1:	fadd   QWORD PTR [edi+0xf]
  41b1d4:	rol    ebx,cl
  41b1d6:	lods   eax,DWORD PTR ds:[esi]
  41b1d7:	stos   BYTE PTR es:[edi],al
  41b1d8:	ins    BYTE PTR es:[edi],dx
  41b1d9:	mov    ah,0x41
  41b1db:	popf   
  41b1dc:	or     DWORD PTR [ebx],edi
  41b1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e0:	data16 fadd DWORD PTR ds:0x45d3d95d
  41b1e7:	fld    st(4)
  41b1e9:	mov    esp,0x9458503b
  41b1ee:	push   0x2a5ab188
  41b1f3:	and    esi,DWORD PTR [ebp-0x16]
  41b1f6:	pop    esp
  41b1f7:	retf   0xf8a6
  41b1fa:	(bad)  
  41b1fb:	outs   dx,DWORD PTR ds:[esi]
  41b1fc:	clc    
  41b1fd:	add    edi,DWORD PTR [edi+edx*1+0x57]
  41b201:	xor    eax,0x8364dc2f
  41b206:	or     BYTE PTR [edi+0x61],cl
  41b209:	mov    ebp,es
  41b20b:	(bad)  
  41b20c:	pop    ecx
  41b20d:	xor    al,0xc4
  41b20f:	and    dh,BYTE PTR [esi-0x13723239]
  41b215:	xor    DWORD PTR [ebx+0x38],ecx
  41b218:	ror    DWORD PTR [esi-0x5e],1
  41b21b:	inc    ebp
  41b21c:	dec    esp
  41b21d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21e:	sbb    ebx,edx
  41b220:	and    eax,0x8126dc4e
  41b225:	dec    edi
  41b226:	inc    esi
  41b227:	adc    BYTE PTR [esi-0x4b],ch
  41b22a:	mov    cl,0x6e
  41b22c:	leave  
  41b22d:	push   es
  41b22e:	and    al,0xd1
  41b230:	and    al,0x1e
  41b232:	aas    
  41b233:	sbb    DWORD PTR [esi+ebp*1],ebx
  41b236:	test   BYTE PTR [eax+0x73089873],dh
  41b23c:	sub    BYTE PTR [edx+0x66e9b26b],dh
  41b242:	sbb    al,0x27
  41b244:	es aaa 
  41b246:	pop    ecx
  41b247:	arpl   WORD PTR [eax],si
  41b249:	stos   DWORD PTR es:[edi],eax
  41b24a:	std    
  41b24b:	xchg   esi,eax
  41b24c:	xor    DWORD PTR ds:0xc56db079,esi
  41b252:	int3   
  41b253:	enter  0x5e33,0x29
  41b257:	cmp    edx,esi
  41b259:	outs   dx,DWORD PTR ds:[esi]
  41b25a:	inc    ecx
  41b25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25c:	xor    al,0xf5
  41b25e:	jno    0x41b1ef
  41b260:	dec    eax
  41b261:	dec    edi
  41b262:	lods   al,BYTE PTR ds:[esi]
  41b263:	inc    ecx
  41b264:	adc    ebx,DWORD PTR [edi+0x3b]
  41b267:	and    ecx,DWORD PTR [ebp-0xb]
  41b26a:	xlat   BYTE PTR ds:[ebx]
  41b26b:	mov    ds:0x2a519f25,al
  41b270:	(bad)  
  41b271:	hlt    
  41b272:	mov    ebx,DWORD PTR [ebp+0x5cf5272a]
  41b278:	je     0x41b2cf
  41b27a:	xchg   esp,eax
  41b27b:	cmp    al,0xdd
  41b27d:	cld    
  41b27e:	xchg   ebp,eax
  41b27f:	adc    ebx,DWORD PTR [esi+0x19]
  41b282:	inc    esi
  41b283:	push   esi
  41b284:	xchg   ebx,eax
  41b285:	dec    esp
  41b286:	mov    esi,0x3aaf1f9
  41b28b:	rol    eax,1
  41b28d:	cmc    
  41b28e:	aaa    
  41b28f:	mov    ds:0xa085c523,al
  41b294:	rcr    bl,1
  41b296:	xchg   DWORD PTR [edx-0x69],eax
  41b299:	dec    ebx
  41b29a:	sbb    eax,0x18bf05e4
  41b29f:	sub    dl,BYTE PTR [ebx]
  41b2a1:	popf   
  41b2a2:	jno    0x41b23e
  41b2a4:	xor    ebp,DWORD PTR [ebp-0x64]
  41b2a7:	sbb    esp,DWORD PTR [esi-0x22]
  41b2aa:	mov    DWORD PTR [ebp+eiz*1-0x51],ecx
  41b2ae:	lds    esp,FWORD PTR [ebx+0x3c103834]
  41b2b4:	fs and al,0x16
  41b2b7:	fdiv   DWORD PTR [edx]
  41b2b9:	mov    ch,0x57
  41b2bb:	stos   BYTE PTR es:[edi],al
  41b2bc:	ret    0x28ab
  41b2bf:	ror    dh,cl
  41b2c1:	rol    BYTE PTR [ebp-0x77],1
  41b2c4:	adc    al,0xd7
  41b2c6:	outs   dx,DWORD PTR ds:[esi]
  41b2c7:	xor    eax,0x193fdc68
  41b2cc:	outs   dx,DWORD PTR ds:[esi]
  41b2cd:	or     bh,ah
  41b2cf:	mov    ds:0x4efb3c77,al
  41b2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d5:	add    bl,BYTE PTR [ebx+esi*1]
  41b2d8:	mov    WORD PTR [edx],ds
  41b2da:	outs   dx,DWORD PTR ds:[esi]
  41b2db:	mov    gs,ecx
  41b2dd:	stos   DWORD PTR es:[edi],eax
  41b2de:	sahf   
  41b2df:	jmp    0x41b27f
  41b2e1:	daa    
  41b2e2:	push   ebp
  41b2e3:	xor    edx,edx
  41b2e5:	loop   0x41b338
  41b2e7:	xor    DWORD PTR [edi],0x17
  41b2ea:	inc    esi
  41b2eb:	add    BYTE PTR [esi-0x63713ec3],0x80
  41b2f2:	inc    eax
  41b2f3:	pop    esp
  41b2f4:	xchg   esp,eax
  41b2f5:	sbb    eax,0x74ec22fb
  41b2fa:	mov    esp,0xdd102666
  41b2ff:	xchg   ebp,eax
  41b300:	aaa    
  41b301:	xor    al,0x4c
  41b303:	jl     0x41b35d
  41b305:	adc    edi,esi
  41b307:	mov    BYTE PTR [ecx+0x7be9b4a5],ah
  41b30d:	cmc    
  41b30e:	pop    esi
  41b30f:	adc    eax,0xe9ba37a2
  41b314:	push   es
  41b315:	mov    ds:0xda5d22e4,al
  41b31a:	xchg   DWORD PTR [edx-0x63c41f5a],eax
  41b320:	(bad)  
  41b321:	jmp    0xdf4:0xb5a479f7
  41b328:	fild   WORD PTR ds:[ecx]
  41b32b:	adc    eax,0xebc5c934
  41b330:	retf   0x6f64
  41b333:	jmp    0xa307:0x262dbceb
  41b33a:	mov    DWORD PTR ds:0xa2ecfe82,eax
  41b340:	mov    esi,0xa5a7b51d
  41b345:	jb     0x41b309
  41b347:	das    
  41b348:	xor    al,0x45
  41b34a:	push   0x15
  41b34c:	sub    eax,0xff5748b5
  41b351:	cdq    
  41b352:	and    ebx,esp
  41b354:	pop    esi
  41b355:	leave  
  41b356:	lds    ecx,FWORD PTR [edi-0x2e]
  41b359:	neg    ebx
  41b35b:	pop    ecx
  41b35c:	nop
  41b35d:	idiv   DWORD PTR [ebx-0x26fd36c]
  41b363:	and    bl,ah
  41b365:	(bad)  
  41b366:	xchg   ecx,eax
  41b367:	cli    
  41b368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b369:	inc    ebx
  41b36a:	adc    BYTE PTR [edi+0x46],al
  41b36d:	enter  0x5ead,0x3a
  41b371:	xor    eax,0x87e89364
  41b376:	fld    QWORD PTR [edi+ebx*2]
  41b379:	sub    dh,al
  41b37b:	int    0x1d
  41b37d:	rol    DWORD PTR [edx+0x3e],1
  41b380:	fwait
  41b381:	stos   BYTE PTR es:[edi],al
  41b382:	cmp    al,0x17
  41b384:	xchg   DWORD PTR [esi+0xb],esp
  41b387:	mov    ds:0x9aac5d1,eax
  41b38c:	and    eax,0xd823a7e5
  41b391:	jae    0x41b37e
  41b393:	inc    esp
  41b394:	mov    ds:0xc98cae97,eax
  41b399:	pop    ebx
  41b39a:	add    ch,BYTE PTR [edi]
  41b39c:	add    edi,ecx
  41b39e:	push   ss
  41b39f:	jecxz  0x41b3fb
  41b3a1:	and    bh,dh
  41b3a3:	ficom  DWORD PTR [edi]
  41b3a5:	inc    edi
  41b3a6:	(bad)
  41b3aa:	pop    es
  41b3ab:	push   ebp
  41b3ac:	es call 0x2d303a5e
  41b3b2:	dec    eax
  41b3b3:	stos   DWORD PTR es:[edi],eax
  41b3b4:	(bad)  
  41b3b5:	das    
  41b3b6:	in     eax,0x79
  41b3b8:	add    eax,0x1011c621
  41b3bd:	sub    edi,DWORD PTR [ecx-0x10]
  41b3c0:	es push ss
  41b3c2:	and    eax,DWORD PTR [edx+0x74947207]
  41b3c8:	jno    0x41b378
  41b3ca:	in     eax,0x30
  41b3cc:	in     eax,dx
  41b3cd:	mov    eax,0xf110c595
  41b3d2:	test   eax,0x9123267d
  41b3d7:	scas   ax,WORD PTR es:[edi]
  41b3d9:	test   BYTE PTR [ebx+0x40],0xd
  41b3dd:	cs mov es,edi
  41b3e0:	jl     0x41b39e
  41b3e2:	mov    ch,0x87
  41b3e4:	stos   DWORD PTR es:[edi],eax
  41b3e5:	add    esi,DWORD PTR [edi+ecx*4-0x5b]
  41b3e9:	retf   
  41b3ea:	sub    BYTE PTR ds:0xd05b39ee,0xf8
  41b3f1:	pop    ss
  41b3f2:	adc    eax,0x45ca7aaf
  41b3f7:	inc    edi
  41b3f8:	sbb    BYTE PTR [esi+ebx*2],ch
  41b3fb:	js     0x41b3d6
  41b3fd:	and    bh,BYTE PTR [esi-0x2b]
  41b400:	sbb    al,0xe1
  41b402:	cdq    
  41b403:	mov    ds:0xa971c025,eax
  41b408:	repnz sub BYTE PTR [esi],ch
  41b40b:	mov    eax,0x8b43585
  41b410:	fcom   QWORD PTR [ecx+0x6915683]
  41b416:	inc    esi
  41b417:	mov    BYTE PTR [esi-0x4],0xdf
  41b41b:	(bad)  
  41b41c:	leave  
  41b41d:	ins    DWORD PTR es:[edi],dx
  41b41e:	leave  
  41b41f:	(bad)  
  41b420:	bound  esp,QWORD PTR [edi+0x7b522312]
  41b426:	or     eax,esp
  41b428:	(bad)  
  41b429:	(bad)  
  41b42a:	mov    esi,0xe1c5962e
  41b42f:	into   
  41b430:	mov    ebx,0xc02b1c2d
  41b435:	xor    esi,DWORD PTR [ebx+0xa757e9f]
  41b43b:	repz mov edi,0x3dd5c58f
  41b441:	cmp    ah,BYTE PTR [esi+0x6401f36b]
  41b447:	shl    BYTE PTR [ebp+esi*1+0x61],0x90
  41b44c:	call   0x12a27809
  41b451:	fadd   st(5),st
  41b453:	and    ecx,ebp
  41b455:	mov    al,ds:0xcf7f82bd
  41b45a:	add    al,0xc
  41b45c:	jbe    0x41b46b
  41b45e:	pop    ecx
  41b45f:	mov    ds:0x60622df2,eax
  41b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b465:	scas   eax,DWORD PTR es:[edi]
  41b466:	call   0x97d5:0x6e045d6b
  41b46d:	lea    eax,[ecx-0x4ed9fa3d]
  41b473:	push   eax
  41b474:	mov    ds:0x3fc7bd74,al
  41b479:	push   ss
  41b47a:	out    0x33,al
  41b47c:	mov    bl,0xf
  41b47e:	(bad)  
  41b47f:	in     eax,dx
  41b480:	loopne 0x41b4b7
  41b482:	cs popa 
  41b484:	ins    BYTE PTR es:[edi],dx
  41b485:	mov    ds:0xf69a64e1,eax
  41b48a:	jb     0x41b4ad
  41b48c:	mov    al,ds:0x86a282a5
  41b491:	push   0xe6a6634d
  41b496:	popa   
  41b497:	xor    edx,DWORD PTR [esi-0x48]
  41b49a:	jl     0x41b4aa
  41b49c:	mov    esi,DWORD PTR [ebp+0x2dbb55bb]
  41b4a2:	sbb    DWORD PTR [ebx+0x49c5d05f],edi
  41b4a8:	clc    
  41b4a9:	xor    al,0xd9
  41b4ab:	add    BYTE PTR [ebx],dh
  41b4ad:	sbb    DWORD PTR [edi],0x77
  41b4b0:	xor    DWORD PTR [edx+edi*4-0x5bb7dc99],esi
  41b4b7:	dec    esp
  41b4b8:	jbe    0x41b44c
  41b4ba:	dec    eax
  41b4bb:	cwde   
  41b4bc:	jmp    0x8e45:0x29e6c61a
  41b4c3:	mov    eax,0xfb368087
  41b4c8:	loop   0x41b493
  41b4ca:	out    0x9b,al
  41b4cc:	in     eax,0x3f
  41b4ce:	xor    eax,DWORD PTR ds:0xd3dc5197
  41b4d4:	xchg   esi,eax
  41b4d5:	mov    DWORD PTR [edx+0x716866da],esi
  41b4db:	xchg   edx,eax
  41b4dc:	fisub  DWORD PTR [ebp+ecx*4+0x3b]
  41b4e0:	popa   
  41b4e1:	add    eax,0xabf1a2e6
  41b4e6:	jae    0x41b51d
  41b4e8:	ins    DWORD PTR es:[edi],dx
  41b4e9:	(bad)
  41b4ed:	dec    ecx
  41b4ee:	mov    ds:0xef179321,eax
  41b4f3:	pop    edx
  41b4f4:	sub    al,0xf3
  41b4f6:	hlt    
  41b4f7:	sbb    edx,DWORD PTR [ebp+0x3674c050]
  41b4fd:	jbe    0x41b4c4
  41b4ff:	bound  ebx,QWORD PTR [edi]
  41b501:	sub    dl,dh
  41b503:	jo     0x41b4d4
  41b505:	push   esi
  41b506:	aaa    
  41b507:	cmp    BYTE PTR [esi-0x31516919],bh
  41b50d:	jle    0x41b54a
  41b50f:	arpl   WORD PTR [ebp+esi*4+0x3],cx
  41b513:	push   0xffffffc0
  41b515:	out    dx,eax
  41b516:	push   0x9152350
  41b51b:	cdq    
  41b51c:	xor    esp,DWORD PTR [ebp-0x6dd9f72d]
  41b522:	sbb    edx,DWORD PTR [ecx+0x4cfad20d]
  41b528:	dec    edi
  41b529:	mov    ch,0x91
  41b52b:	push   esp
  41b52c:	jbe    0x41b588
  41b52e:	pop    ecx
  41b52f:	mov    ah,0x79
  41b531:	pop    ebp
  41b532:	inc    ebp
  41b533:	sub    BYTE PTR [ecx],ah
  41b535:	dec    eax
  41b536:	lahf   
  41b537:	scas   al,BYTE PTR es:[di]
  41b539:	mov    eax,0xb53c5cd1
  41b53e:	in     al,dx
  41b53f:	adc    edx,ecx
  41b541:	test   BYTE PTR [esi+ebp*2],ch
  41b544:	dec    cl
  41b546:	aaa    
  41b547:	mov    dl,0x4f
  41b549:	and    DWORD PTR [eax-0x71],esp
  41b54c:	jno    0x41b5be
  41b54e:	popf   
  41b54f:	call   0xa322c4ee
  41b554:	(bad)  
  41b555:	push   esp
  41b556:	lea    ecx,[ecx-0x7ea8505a]
  41b55c:	stc    
  41b55d:	pop    ecx
  41b55e:	mov    eax,ds:0xd533b67c
  41b563:	push   edx
  41b564:	loope  0x41b572
  41b566:	mov    eax,0x15b65128
  41b56b:	shl    BYTE PTR [ecx+eiz*8+0x75da3f45],0x57
  41b573:	inc    ebx
  41b574:	add    BYTE PTR [eax+0xd3139a3],ah
  41b57a:	repz mov ds:0x43f5431f,al
  41b580:	xchg   ah,ch
  41b582:	fdivrp st(6),st
  41b584:	shr    DWORD PTR [esi+esi*1+0x23],cl
  41b588:	jge    0x41b57a
  41b58a:	mov    esp,0x3c1db103
  41b58f:	mov    ds:0x81284ac6,eax
  41b594:	xor    eax,0xa63448db
  41b599:	fstp   DWORD PTR [edx+0x11ae906f]
  41b59f:	stos   BYTE PTR es:[edi],al
  41b5a0:	dec    eax
  41b5a1:	mov    ch,0xf9
  41b5a3:	ror    BYTE PTR [edx-0x6bed3813],1
  41b5a9:	xor    al,BYTE PTR [esi-0xf]
  41b5ac:	sbb    BYTE PTR [edx+ebp*4],al
  41b5af:	pop    ss
  41b5b0:	xchg   BYTE PTR [eax-0x33b0820c],bl
  41b5b6:	icebp  
  41b5b7:	and    cl,BYTE PTR [esi+0x7af36b46]
  41b5bd:	xchg   ebx,eax
  41b5be:	sub    BYTE PTR [esi+ebp*8+0x68],0x78
  41b5c3:	lahf   
  41b5c4:	xchg   esi,eax
  41b5c5:	retf   
  41b5c6:	xchg   ecx,eax
  41b5c7:	jo     0x41b620
  41b5c9:	xor    eax,0x5df9cea3
  41b5ce:	std    
  41b5cf:	repnz mov ecx,?
  41b5d2:	inc    ebp
  41b5d3:	fist   DWORD PTR [eax]
  41b5d5:	scas   eax,DWORD PTR es:[edi]
  41b5d6:	cmc    
  41b5d7:	xchg   ebx,eax
  41b5d8:	mov    cl,0x25
  41b5da:	das    
  41b5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5dc:	fs push es
  41b5de:	mov    ebp,0x5fbbaa1
  41b5e3:	in     al,dx
  41b5e4:	call   0xe574:0xb0184253
  41b5eb:	push   edx
  41b5ec:	out    dx,al
  41b5ed:	jns    0x41b660
  41b5ef:	ins    BYTE PTR es:[edi],dx
  41b5f0:	sbb    BYTE PTR [si],cl
  41b5f3:	int    0x65
  41b5f5:	push   0x69
  41b5f7:	sub    esp,DWORD PTR [esi-0x60]
  41b5fa:	or     eax,0xc605e922
  41b5ff:	ss cmp al,ch
  41b602:	cwde   
  41b603:	sbb    eax,0x6e737f32
  41b608:	xor    bl,ah
  41b60a:	adc    eax,0x23db768c
  41b60f:	mov    ds:0xeb45f4d7,eax
  41b614:	and    al,0xa5
  41b616:	loopne 0x41b667
  41b618:	xchg   esp,eax
  41b619:	mov    edi,0x2821b1d5
  41b61e:	nop
  41b61f:	xchg   esp,eax
  41b620:	dec    edi
  41b621:	iret   
  41b622:	cmp    eax,DWORD PTR [ebx-0x7a]
  41b625:	pop    ss
  41b626:	test   eax,0xef52685
  41b62b:	out    0x7a,al
  41b62d:	jnp    0x41b62a
  41b62f:	stc    
  41b630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b631:	mov    ch,0xec
  41b633:	das    
  41b634:	fadd   DWORD PTR [edx+0x4e]
  41b637:	stos   DWORD PTR es:[edi],eax
  41b638:	xor    DWORD PTR [ebx],0x268187c6
  41b63e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b640:	in     al,dx
  41b641:	sub    ebx,DWORD PTR gs:[ecx-0x26]
  41b645:	rol    BYTE PTR ds:0xb42bfe84,cl
  41b64b:	jbe    0x41b66d
  41b64d:	or     bh,BYTE PTR [edi]
  41b64f:	jmp    0x41b654
  41b651:	out    0xe2,eax
  41b653:	push   ebp
  41b654:	or     dl,al
  41b656:	mov    esi,0x26d96e42
  41b65b:	mov    ds:0xa2eafcb0,al
  41b660:	scas   eax,DWORD PTR es:[edi]
  41b661:	add    eax,0x2ee83e3e
  41b666:	inc    esi
  41b667:	adc    ch,cl
  41b669:	(bad)  
  41b66a:	retf   0xa895
  41b66d:	inc    ecx
  41b66e:	(bad)  
  41b670:	sti    
  41b671:	sub    eax,0xd623a19a
  41b676:	gs mov ch,0x2b
  41b679:	cmp    BYTE PTR [ecx],ch
  41b67b:	in     eax,dx
  41b67c:	cwde   
  41b67d:	xor    eax,0x50ca9bf6
  41b682:	sbb    bh,cl
  41b684:	ds inc ebx
  41b686:	cmp    BYTE PTR [ecx],al
  41b688:	out    dx,al
  41b689:	or     BYTE PTR [ebp-0x6769225e],ch
  41b68f:	stos   DWORD PTR es:[edi],eax
  41b690:	imul   eax,ebx,0x64
  41b693:	cmp    BYTE PTR [ebp+0x72b92da0],ah
  41b699:	mov    esi,0x91ba3a77
  41b69e:	loopne 0x41b700
  41b6a0:	sub    ch,bh
  41b6a2:	cmp    DWORD PTR [ebx],esp
  41b6a4:	sbb    ebx,esi
  41b6a6:	push   ds
  41b6a7:	fisubr DWORD PTR [edx-0x25]
  41b6aa:	mov    eax,ds:0xf0b575d8
  41b6af:	sbb    edx,ebx
  41b6b1:	ret    
  41b6b2:	xchg   esp,eax
  41b6b3:	lods   eax,DWORD PTR ds:[esi]
  41b6b4:	imul   esi,DWORD PTR [esp+eax*1],0x53
  41b6b8:	xchg   edx,eax
  41b6b9:	in     al,0xf3
  41b6bb:	call   0x277e4cc5
  41b6c0:	repnz adc dl,BYTE PTR es:[ebx-0x6f4e0f3c]
  41b6c8:	cmp    BYTE PTR ds:0x3141ec53,dh
  41b6ce:	push   esi
  41b6cf:	pop    edi
  41b6d0:	das    
  41b6d1:	stc    
  41b6d2:	lds    ebx,FWORD PTR [eax-0x73c24982]
  41b6d8:	or     al,0x38
  41b6da:	div    DWORD PTR [edi+eax*1+0x4d]
  41b6de:	sub    esp,DWORD PTR [ebx+0x75926a72]
  41b6e4:	and    eax,0x82321b42
  41b6e9:	mov    ds:0x375f4bbd,al
  41b6ee:	inc    ebp
  41b6ef:	por    mm0,QWORD PTR [ebx+ecx*2+0x23]
  41b6f4:	and    esi,DWORD PTR [ecx+0x1c]
  41b6f7:	enter  0xf526,0x38
  41b6fb:	cmp    al,0x9e
  41b6fd:	jge    0x41b6c8
  41b6ff:	pushf  
  41b700:	aaa    
  41b701:	xor    eax,0x75e2682b
  41b706:	outs   dx,BYTE PTR ds:[esi]
  41b707:	fnstcw WORD PTR [edi]
  41b709:	dec    esp
  41b70a:	mov    esp,0x461f50e4
  41b70f:	pop    ds
  41b710:	and    ah,dl
  41b712:	cmp    DWORD PTR [edi],ebx
  41b714:	push   esp
  41b715:	xor    eax,0xd57d426e
  41b71a:	push   0x29d1b382
  41b71f:	sbb    eax,0x38b7fa0d
  41b724:	shr    esp,cl
  41b726:	test   DWORD PTR [ebp-0xa],ebx
  41b729:	jle    0x41b6c3
  41b72b:	call   0xcb6b64e4
  41b730:	pop    ss
  41b731:	lea    esp,[edx]
  41b733:	or     al,0x28
  41b735:	or     eax,0x203be111
  41b73a:	inc    esi
  41b73b:	pop    edi
  41b73c:	not    BYTE PTR [ebp-0x11]
  41b73f:	ds or  eax,0x9480a744
  41b745:	lods   al,BYTE PTR ds:[esi]
  41b746:	cmc    
  41b747:	mov    ds:0x3fc2aa7a,al
  41b74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b74d:	daa    
  41b74e:	pop    ss
  41b74f:	addr16 mov bl,0x88
  41b752:	arpl   WORD PTR [edx+0x15],sp
  41b755:	mov    al,0xf9
  41b757:	ins    DWORD PTR es:[edi],dx
  41b758:	shl    edi,0xbe
  41b75b:	daa    
  41b75c:	(bad)  
  41b75d:	push   cs
  41b75e:	or     edx,DWORD PTR [edx+0x4a]
  41b761:	jbe    0x41b719
  41b763:	push   edx
  41b764:	mov    ds:0xc8b1061c,al
  41b769:	dec    edx
  41b76a:	not    bl
  41b76c:	inc    edi
  41b76d:	xor    eax,0xbf28acd5
  41b772:	fsubp  st(4),st
  41b774:	sbb    DWORD PTR [edx],eax
  41b776:	inc    esi
  41b777:	sbb    DWORD PTR [ebp+0x643b1da9],esp
  41b77d:	or     cl,bl
  41b77f:	or     bl,BYTE PTR [esi+0x35]
  41b782:	test   ebp,esp
  41b784:	cld    
  41b785:	sub    bh,BYTE PTR [ebx-0x13]
  41b788:	push   es
  41b789:	push   ss
  41b78a:	inc    esi
  41b78b:	jns    0x41b7a1
  41b78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78e:	fs jmp 0x41b805
  41b791:	mov    bl,0x7d
  41b793:	xlat   BYTE PTR ds:[ebx]
  41b794:	inc    ebx
  41b795:	ins    DWORD PTR es:[edi],dx
  41b796:	or     esp,DWORD PTR [ebx+0x5c11f32]
  41b79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b79d:	clc    
  41b79e:	cmp    al,0x73
  41b7a0:	pop    es
  41b7a1:	mov    bl,bl
  41b7a3:	push   esp
  41b7a4:	mov    eax,0x2e0559cb
  41b7aa:	fwait
  41b7ab:	or     eax,0xb9a47bb1
  41b7b0:	in     al,dx
  41b7b1:	or     BYTE PTR es:[edi+0x3ec65f83],0x2c
  41b7b9:	mov    DWORD PTR [ebp-0xd],0x6e2831a
  41b7c0:	and    DWORD PTR [esi-0x62a4a66],edi
  41b7c6:	inc    esi
  41b7c7:	and    eax,ebp
  41b7c9:	cwde   
  41b7ca:	std    
  41b7cb:	je     0x41b763
  41b7cd:	sbb    BYTE PTR [ebp+ebp*4+0x4b48fcc6],ah
  41b7d4:	adc    eax,0x3639b22e
  41b7d9:	jo     0x41b816
  41b7db:	sbb    al,0x16
  41b7dd:	jo     0x41b838
  41b7df:	mov    ds:0x4e45eb11,al
  41b7e4:	cld    
  41b7e5:	std    
  41b7e6:	(bad)  
  41b7e7:	popa   
  41b7e8:	jmp    0x7da7133b
  41b7ed:	call   0x6a7d:0x50bb22ed
  41b7f4:	and    eax,0xb727ea7a
  41b7f9:	dec    eax
  41b7fb:	stos   BYTE PTR es:[edi],al
  41b7fc:	cmp    eax,0xc807bb5
  41b801:	cld    
  41b802:	add    DWORD PTR [edx-0x343a036b],ecx
  41b808:	les    ebx,FWORD PTR [ecx+0x5381d0a5]
  41b80e:	sbb    ch,dh
  41b810:	lods   ax,WORD PTR ds:[esi]
  41b812:	dec    edx
  41b813:	mov    ds:0xb60abc29,eax
  41b818:	es jno 0x41b847
  41b81b:	push   esi
  41b81c:	lds    edx,FWORD PTR fs:[ebp+0x7a079e2d]
  41b823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b824:	ins    DWORD PTR es:[edi],dx
  41b825:	scas   al,BYTE PTR es:[edi]
  41b826:	cld    
  41b827:	push   ss
  41b828:	in     eax,dx
  41b829:	push   ds
  41b82a:	inc    si
  41b82c:	scas   al,BYTE PTR es:[edi]
  41b82d:	mov    ds:0x75263a9f,eax
  41b832:	push   edx
  41b833:	test   DWORD PTR [esi+0x58867d51],esi
  41b839:	cmp    BYTE PTR [edi+0x1284de88],bh
  41b83f:	mov    ds:0x74162425,eax
  41b844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b845:	into   
  41b846:	mov    ah,0xbe
  41b848:	in     al,dx
  41b849:	mov    edi,0x45c051ce
  41b84e:	adc    eax,0x84d55ccb
  41b853:	adc    ebp,DWORD PTR [ebx+0x48]
  41b856:	call   0xc64053fd
  41b85b:	repz pop eax
  41b85d:	sub    eax,0x5b950f8a
  41b862:	or     al,0xbd
  41b864:	sub    eax,0x9420c3ae
  41b869:	cmc    
  41b86a:	jbe    0x41b8ac
  41b86c:	or     bh,BYTE PTR [ebx-0x4bb8393b]
  41b872:	mov    cl,0x4e
  41b874:	xchg   ebx,eax
  41b875:	das    
  41b876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b877:	sub    DWORD PTR [ebp-0x41],0xdd050545
  41b87e:	adc    ebp,eax
  41b880:	outs   dx,DWORD PTR ds:[esi]
  41b881:	and    eax,DWORD PTR [esi-0x74]
  41b884:	or     DWORD PTR [edx+ebp*2],esi
  41b887:	fsubr  st,st(1)
  41b889:	mov    esp,0x795750d1
  41b88e:	xor    esp,DWORD PTR [ebx-0x28f8ab27]
  41b894:	mov    dl,0x2d
  41b896:	inc    esi
  41b897:	push   edx
  41b898:	mov    al,0xf4
  41b89a:	sbb    al,0x2d
  41b89c:	add    bh,BYTE PTR gs:[esi+0x50906f44]
  41b8a3:	mov    ds:0xbff4bd92,eax
  41b8a8:	es ds push edx
  41b8ab:	inc    ecx
  41b8ac:	pusha  
  41b8ad:	fdivp  st(3),st
  41b8af:	outs   dx,BYTE PTR ds:[esi]
  41b8b0:	inc    edi
  41b8b1:	mov    ch,0xab
  41b8b3:	sub    dh,BYTE PTR [eax-0x77]
  41b8b6:	(bad)  
  41b8ba:	inc    esi
  41b8bb:	stc    
  41b8bc:	mov    al,0xae
  41b8be:	sahf   
  41b8bf:	pop    es
  41b8c0:	push   0xfffffff3
  41b8c2:	lods   eax,DWORD PTR ds:[esi]
  41b8c3:	jns    0x41b87c
  41b8c5:	xchg   BYTE PTR ds:0x9e282668,dl
  41b8cb:	push   esp
  41b8cc:	pop    esi
  41b8cd:	or     ch,BYTE PTR [edx+0x18]
  41b8d0:	fidiv  WORD PTR [edx+0x6bd935c5]
  41b8d6:	jmp    0xfcb8:0x2e0f577d
  41b8dd:	xor    DWORD PTR [esi+0x634fa4de],ecx
  41b8e3:	jg     0x41b929
  41b8e5:	outs   dx,BYTE PTR ds:[esi]
  41b8e6:	or     al,0xdb
  41b8e8:	and    eax,0x39299b5f
  41b8ed:	rcr    BYTE PTR [ecx-0x4076ad4f],cl
  41b8f3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b8f5:	pop    ss
  41b8f6:	jne    0x41b88f
  41b8f8:	into   
  41b8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8fa:	imul   ebp,esi,0x26
  41b8fd:	sub    eax,0x1fd86405
  41b902:	mov    edx,0x2a395d82
  41b907:	cmp    dl,ch
  41b909:	dec    esp
  41b90a:	test   DWORD PTR ds:0x56c233a6,ebx
  41b910:	inc    ecx
  41b911:	das    
  41b912:	inc    esi
  41b913:	shl    BYTE PTR [ecx+edi*2],0x7
  41b917:	(bad)  
  41b918:	xchg   esi,eax
  41b919:	js     0x41b904
  41b91b:	xor    al,0x27
  41b91d:	xchg   ebx,eax
  41b91e:	in     eax,dx
  41b91f:	and    al,ah
  41b921:	dec    ecx
  41b922:	cmp    eax,0x552c23b9
  41b927:	fs fyl2xp1 
  41b92a:	jne    0x41b8c9
  41b92c:	leave  
  41b92d:	inc    edi
  41b92e:	jge    0x41b8c3
  41b930:	call   0x8615:0x3221a641
  41b937:	jns    0x41b95e
  41b939:	jbe    0x41b8f7
  41b93b:	and    al,0x95
  41b93d:	out    dx,eax
  41b93e:	sub    BYTE PTR [ecx],al
  41b940:	sahf   
  41b941:	es pop esi
  41b943:	pop    es
  41b944:	mov    eax,ds:0xf981cc35
  41b949:	jb     0x41b996
  41b94b:	xor    esp,DWORD PTR [ebp-0x1ad23af9]
  41b951:	mov    dh,BYTE PTR [ecx]
  41b953:	or     BYTE PTR [eax-0x4b],dh
  41b956:	mov    bl,0x7e
  41b958:	pop    esp
  41b959:	inc    edi
  41b95a:	fadd   st(7),st
  41b95c:	(bad)  
  41b95d:	call   0xf62527a7
  41b962:	(bad)  
  41b963:	xor    esp,ebx
  41b965:	xchg   ecx,eax
  41b966:	sub    bl,BYTE PTR [edx]
  41b968:	xchg   esp,eax
  41b969:	les    eax,FWORD PTR [eax-0x51]
  41b96c:	into   
  41b96d:	fdivrp st(0),st
  41b96f:	mov    ecx,ebx
  41b971:	mov    ecx,0xce5d1b65
  41b976:	mov    ch,0xb1
  41b978:	fadd   QWORD PTR es:[esi]
  41b97b:	inc    edi
  41b97c:	sub    al,BYTE PTR [ebp-0xe]
  41b97f:	push   0x5be03586
  41b984:	ss aas 
  41b986:	outs   dx,BYTE PTR ds:[esi]
  41b987:	sub    DWORD PTR [edi+0x6fd29ff3],edi
  41b98d:	mov    ch,0xb4
  41b98f:	mov    dl,0xe4
  41b991:	mov    ebp,0xb5292607
  41b996:	scas   eax,DWORD PTR es:[edi]
  41b997:	add    eax,0xfb855f9b
  41b99c:	lahf   
  41b99d:	xor    al,dh
  41b99f:	lds    edi,FWORD PTR [ebp+0x66497ef8]
  41b9a5:	add    al,0xaf
  41b9a7:	sub    cl,dh
  41b9a9:	sub    DWORD PTR [ebx+eiz*4],0x62
  41b9ad:	or     edx,DWORD PTR [eax-0x66]
  41b9b0:	nop
  41b9b1:	add    eax,DWORD PTR [ebp-0x5a7ee8c6]
  41b9b7:	adc    ebx,esp
  41b9b9:	adc    eax,esp
  41b9bb:	retf   
  41b9bc:	les    edi,FWORD PTR [edi-0x6a]
  41b9bf:	aaa    
  41b9c0:	and    al,0x59
  41b9c2:	hlt    
  41b9c3:	mov    ds:0x443f1d92,al
  41b9c8:	and    eax,0x1317f7f3
  41b9cd:	in     al,dx
  41b9ce:	fsub   QWORD PTR [ecx]
  41b9d0:	push   es
  41b9d1:	aam    0xa9
  41b9d3:	mov    WORD PTR [ecx],fs
  41b9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d6:	mov    BYTE PTR [ecx-0x1eaeaac4],dh
  41b9dc:	in     eax,dx
  41b9dd:	out    0x33,al
  41b9df:	loop   0x41ba07
  41b9e1:	xchg   ebp,eax
  41b9e2:	std    
  41b9e3:	mov    dh,BYTE PTR [ebx-0x1a]
  41b9e6:	pop    es
  41b9e7:	clc    
  41b9e8:	add    ah,bh
  41b9ea:	lea    eax,[ebx+0x16]
  41b9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ee:	repnz and ch,BYTE PTR [esi+ebx*8-0x7638df6]
  41b9f6:	add    eax,0xe2f525da
  41b9fb:	es call 0xa74b:0xedaa
  41ba02:	cmp    al,0xac
  41ba04:	push   0xfcb2c6d5
  41ba09:	sub    al,0x89
  41ba0b:	test   DWORD PTR ds:0x722620d4,esp
  41ba11:	push   esp
  41ba12:	lock adc DWORD PTR [edx],ebp
  41ba15:	xor    eax,0xae744ef3
  41ba1a:	ins    BYTE PTR es:[edi],dx
  41ba1b:	into   
  41ba1c:	mov    al,ds:0xba3f45d2
  41ba21:	mov    ebp,0x656a83ec
  41ba26:	rcr    DWORD PTR [edi+ebx*2+0x1da318a3],0x1f
  41ba2e:	mov    esp,0x18eba698
  41ba33:	ja     0x41ba60
  41ba35:	(bad)  
  41ba36:	jl     0x41ba74
  41ba38:	jb     0x41ba61
  41ba3a:	pusha  
  41ba3b:	cdq    
  41ba3c:	push   eax
  41ba3d:	cmc    
  41ba3e:	ins    DWORD PTR es:[edi],dx
  41ba3f:	lea    edi,[ecx+edx*8-0x72]
  41ba43:	fcomp  DWORD PTR [eax+0x45a0696d]
  41ba49:	adc    eax,0x959f52b2
  41ba4e:	out    0x9d,al
  41ba50:	sub    eax,0x4ef6e542
  41ba55:	or     ch,cl
  41ba57:	and    bh,cl
  41ba59:	je     0x41ba6a
  41ba5b:	or     esp,DWORD PTR [esi+0x5a68b669]
  41ba61:	sub    ecx,DWORD PTR [esp+eiz*8]
  41ba64:	and    BYTE PTR [esi+0x2da6432e],dl
  41ba6a:	cs pop eax
  41ba6c:	mov    DWORD PTR [edx+0x60a4a164],edx
  41ba72:	aaa    
  41ba73:	or     eax,0xe2ff490f
  41ba78:	fnstsw WORD PTR [esi-0x15d45832]
  41ba7e:	mov    ds:0x56bfa426,al
  41ba83:	and    ecx,DWORD PTR [ebp-0x66]
  41ba86:	mov    edi,0xc5f92fe7
  41ba8b:	jle    0x41ba65
  41ba8d:	clc    
  41ba8e:	adc    edx,DWORD PTR [esp+esi*4+0x65]
  41ba92:	cmp    eax,0x2d631984
  41ba97:	and    edi,DWORD PTR [edx]
  41ba99:	icebp  
  41ba9a:	gs mov ah,0xe9
  41ba9d:	repz inc ebp
  41ba9f:	mov    ah,0x24
  41baa1:	push   es
  41baa2:	(bad)  
  41baa3:	mov    dl,0x7a
  41baa5:	sbb    ch,dh
  41baa7:	cmc    
  41baa8:	pusha  
  41baa9:	repnz les ebx,FWORD PTR [ebx]
  41baac:	push   0xa585372b
  41bab1:	jnp    0x41baef
  41bab3:	das    
  41bab4:	std    
  41bab5:	mov    DWORD PTR [edi-0x2f],ecx
  41bab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bab9:	add    BYTE PTR [ebx+0x4b51a476],ah
  41babf:	outs   dx,DWORD PTR ds:[esi]
  41bac0:	inc    eax
  41bac1:	xor    eax,0x12b3f553
  41bac6:	popf   
  41bac7:	sbb    eax,0x3cc60e88
  41bacc:	mov    al,ds:0x2d5e6eac
  41bad1:	or     edx,edx
  41bad3:	mov    ah,0x17
  41bad5:	mul    bh
  41bad7:	and    dl,BYTE PTR [edx-0x61]
  41bada:	sbb    dh,BYTE PTR [edi+0x6b8983b5]
  41bae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae1:	call   0x82b0:0xeebb6964
  41bae8:	sbb    DWORD PTR [eax],0x5566cb7c
  41baee:	and    BYTE PTR [eax+ebx*4+0x40],al
  41baf2:	popf   
  41baf3:	popf   
  41baf4:	and    al,0xa9
  41baf6:	sub    eax,0x85fb564b
  41bafb:	jne    0x41baf6
  41bafd:	mov    esp,0xde176d24
  41bb02:	(bad)  
  41bb03:	and    al,cl
  41bb05:	add    eax,0xe51e859f
  41bb0a:	ror    BYTE PTR [edi],1
  41bb0c:	cmp    eax,0x2600e9a6
  41bb11:	sbb    al,0x46
  41bb13:	cmp    BYTE PTR es:[ecx+0x52b7e290],cl
  41bb1a:	rol    DWORD PTR [ebx-0x67],0xa
  41bb1e:	hlt    
  41bb1f:	fwait
  41bb20:	inc    ecx
  41bb21:	sbb    DWORD PTR [eax],ebx
  41bb23:	or     esp,DWORD PTR [esi-0x217eaf32]
  41bb29:	push   eax
  41bb2a:	lods   al,BYTE PTR ds:[esi]
  41bb2b:	pop    ebx
  41bb2c:	add    ebx,0xffffffea
  41bb2f:	mov    ds:0x350a6073,al
  41bb34:	jmp    0x41bb16
  41bb36:	inc    esp
  41bb37:	mov    WORD PTR [ebp+0x4b],gs
  41bb3a:	mov    ebp,DWORD PTR [edx+eax*2-0x1c1991ab]
  41bb41:	xor    ecx,DWORD PTR [edx]
  41bb43:	scas   eax,DWORD PTR es:[edi]
  41bb44:	lods   eax,DWORD PTR ds:[esi]
  41bb45:	cdq    
  41bb46:	xor    edx,ebp
  41bb48:	fsub   DWORD PTR [edi]
  41bb4a:	shr    bl,cl
  41bb4c:	add    dh,bh
  41bb4e:	int3   
  41bb4f:	aaa    
  41bb50:	es xor al,0x1c
  41bb53:	mov    eax,ds:0xbeadb6ce
  41bb58:	sub    DWORD PTR [ebp-0x38b67088],edi
  41bb5e:	push   es
  41bb5f:	mov    ds:0x5ba0dfe1,eax
  41bb64:	mov    ds:0xbfd58abd,al
  41bb69:	xor    al,0x5e
  41bb6b:	push   0x5e80d2d
  41bb70:	iret   
  41bb71:	ins    BYTE PTR es:[edi],dx
  41bb72:	dec    esp
  41bb73:	and    ebp,DWORD PTR [ecx+ecx*1+0x3c]
  41bb77:	cmp    DWORD PTR [esi],esp
  41bb79:	pop    ecx
  41bb7a:	leave  
  41bb7b:	inc    ebx
  41bb7c:	push   ds
  41bb7d:	mov    WORD PTR [esi-0x1],?
  41bb80:	daa    
  41bb81:	scas   al,BYTE PTR es:[edi]
  41bb82:	call   0xd6327c50
  41bb87:	add    edi,DWORD PTR [ebx]
  41bb89:	aas    
  41bb8a:	mov    ch,0x5
  41bb8c:	adc    edx,DWORD PTR [eax+0x4c9e9822]
  41bb92:	inc    esi
  41bb93:	test   eax,0x32e7ff81
  41bb98:	add    eax,0x9fce04b5
  41bb9d:	cwde   
  41bb9e:	fst    st(6)
  41bba0:	xchg   edx,eax
  41bba1:	dec    ebx
  41bba2:	leave  
  41bba3:	ret    0x4925
  41bba6:	aad    0xa4
  41bba8:	in     al,dx
  41bba9:	mov    esp,gs
  41bbab:	(bad)  
  41bbac:	cmp    cl,BYTE PTR [esi+0x36]
  41bbaf:	push   ecx
  41bbb0:	push   ecx
  41bbb1:	jno    0x41bbd7
  41bbb3:	and    esp,DWORD PTR [ebx+0x23f025b9]
  41bbb9:	repz xchg ecx,eax
  41bbbb:	cmp    eax,0x94c0e939
  41bbc0:	inc    edx
  41bbc1:	mov    ebp,0x992aa320
  41bbc6:	iret   
  41bbc7:	cmc    
  41bbc8:	es jbe 0x41bc1d
  41bbcb:	mov    ebx,DWORD PTR [eax+0xc601825]
  41bbd1:	cwde   
  41bbd2:	gs std 
  41bbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd5:	push   cs
  41bbd6:	stc    
  41bbd7:	cmp    edx,edx
  41bbd9:	mov    ds:0x639e0f62,eax
  41bbde:	shl    ch,1
  41bbe0:	fcom   DWORD PTR [ecx]
  41bbe2:	inc    ebx
  41bbe3:	add    ebp,DWORD PTR [esi+0x7191517f]
  41bbe9:	mov    eax,0xd7682679
  41bbee:	out    0x9b,al
  41bbf0:	ss xchg ebp,eax
  41bbf2:	sahf   
  41bbf3:	mov    bl,al
  41bbf5:	mov    edi,0x494c55b2
  41bbfa:	sub    DWORD PTR [ecx-0x5d217e3a],edi
  41bc00:	addr16 or eax,0x504b47dd
  41bc06:	dec    eax
  41bc07:	and    eax,DWORD PTR [ebx]
  41bc09:	jb     0x41bba1
  41bc0b:	les    esp,FWORD PTR [esi+0x398a5468]
  41bc11:	push   0xffffff8f
  41bc13:	and    al,0x71
  41bc15:	lods   al,BYTE PTR ds:[esi]
  41bc16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc17:	push   esp
  41bc18:	mov    WORD PTR ds:0x59f5b023,?
  41bc1e:	mov    cl,0x76
  41bc20:	es sti 
  41bc22:	sub    al,BYTE PTR [ecx-0x78c58afe]
  41bc28:	xor    ebp,DWORD PTR [esi-0x3181a7b3]
  41bc2e:	inc    ebp
  41bc2f:	mov    edx,0x54ebe698
  41bc34:	es adc esi,esp
  41bc37:	ins    DWORD PTR es:[edi],dx
  41bc38:	jmp    0xa21d8e59
  41bc3d:	xor    eax,0x15b4a937
  41bc42:	(bad)  
  41bc43:	call   0x487c9dd
  41bc48:	into   
  41bc49:	dec    BYTE PTR [ecx]
  41bc4b:	xor    BYTE PTR [eax+eiz*1],cl
  41bc4e:	add    cl,BYTE PTR [eax]
  41bc50:	push   eax
  41bc51:	retf   
  41bc52:	fisub  WORD PTR [edx+0x422ba19a]
  41bc58:	pop    es
  41bc59:	shr    DWORD PTR [ebx+0x4],cl
  41bc5c:	stos   BYTE PTR es:[edi],al
  41bc5d:	mov    dl,0xf0
  41bc5f:	bound  ebp,QWORD PTR [eax+0x33739a11]
  41bc65:	adc    eax,DWORD PTR [ebp+0x23]
  41bc68:	sbb    al,BYTE PTR [ecx+0x302f2f87]
  41bc6e:	(bad)  
  41bc6f:	pop    edi
  41bc70:	jmp    0x9d53:0xaf0ca799
  41bc77:	stos   BYTE PTR es:[edi],al
  41bc78:	aaa    
  41bc79:	mov    esi,0x9415a348
  41bc7e:	or     BYTE PTR [esi+0x1f],dh
  41bc81:	mov    edx,0xa5589d95
  41bc86:	cmp    eax,0xde89cf10
  41bc8b:	xchg   esp,eax
  41bc8c:	push   cs
  41bc8d:	or     ebp,DWORD PTR [eax]
  41bc8f:	and    ebx,ecx
  41bc91:	cmp    al,0xa3
  41bc93:	and    DWORD PTR [esi-0xa7fa999],0x66981696
  41bc9d:	mov    ch,0xf2
  41bc9f:	push   0x8702ee8b
  41bca4:	and    ah,ch
  41bca6:	iret   
  41bca7:	mov    edi,0x96aeab98
  41bcac:	push   es
  41bcad:	jno    0x41bc9e
  41bcaf:	imul   edx,DWORD PTR [eax-0x7e4294f0],0xffffffae
  41bcb6:	in     eax,0x22
  41bcb8:	pop    ecx
  41bcb9:	sbb    eax,ebp
  41bcbb:	dec    esi
  41bcbc:	jle    0x41bd2d
  41bcbe:	dec    esp
  41bcbf:	inc    esi
  41bcc0:	jmp    0x4454:0x3010edda
  41bcc7:	add    edx,DWORD PTR gs:[ebp+0x35]
  41bccb:	inc    esp
  41bccc:	das    
  41bccd:	(bad)  [esi+0x3c]
  41bcd0:	mov    BYTE PTR [esi],bl
  41bcd2:	and    ah,cl
  41bcd4:	popf   
  41bcd5:	mov    ch,0x29
  41bcd7:	test   al,0xaa
  41bcd9:	ins    BYTE PTR es:[edi],dx
  41bcda:	cmp    ah,bh
  41bcdc:	and    eax,0xf766cba8
  41bce1:	push   edx
  41bce2:	fisubr DWORD PTR [esi+0x42e97ce9]
  41bce8:	out    dx,eax
  41bce9:	adc    eax,0x839ba343
  41bcee:	add    BYTE PTR [edi],dh
  41bcf0:	and    al,0x42
  41bcf2:	jnp    0x41bcf1
  41bcf4:	(bad)  [esi]
  41bcf6:	sbb    eax,0xe46ec04c
  41bcfb:	inc    edx
  41bcfc:	ds test eax,0x24fc2322
  41bd02:	enter  0x261f,0x7b
  41bd06:	push   edx
  41bd07:	bound  ebx,QWORD PTR [ebp*4-0x4e44af2f]
  41bd0e:	in     eax,dx
  41bd0f:	dec    edi
  41bd10:	inc    edx
  41bd11:	add    al,0xb3
  41bd13:	xchg   ebp,eax
  41bd14:	call   DWORD PTR [eax]
  41bd16:	je     0x41bd4a
  41bd18:	ficomp WORD PTR [esi]
  41bd1a:	inc    esi
  41bd1b:	aas    
  41bd1c:	(bad)  
  41bd1d:	fucom  st(3)
  41bd1f:	fsub   DWORD PTR [ebx-0xb]
  41bd22:	xchg   edx,eax
  41bd23:	inc    edi
  41bd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd25:	ins    BYTE PTR es:[edi],dx
  41bd26:	shl    DWORD PTR [ecx+0x5a4dc515],cl
  41bd2c:	xchg   edi,eax
  41bd2d:	or     BYTE PTR [esi+0x1d],al
  41bd30:	retf   
  41bd31:	inc    esi
  41bd32:	mov    esp,0xa03f6bf1
  41bd37:	jnp    0x41bd72
  41bd39:	xor    eax,0x56802712
  41bd3e:	mov    WORD PTR [ecx-0x17],?
  41bd41:	inc    DWORD PTR [ebp-0x52]
  41bd44:	retf   0xc516
  41bd47:	rol    edi,1
  41bd49:	sbb    esp,DWORD PTR [ecx+ecx*8-0x68ad9092]
  41bd50:	jnp    0x41bd8a
  41bd52:	inc    edx
  41bd53:	xor    al,0xdc
  41bd55:	cld    
  41bd56:	mov    bh,0x2
  41bd58:	mov    dh,0xd9
  41bd5a:	jl     0x41bdaf
  41bd5c:	mov    ebp,0x256c7118
  41bd61:	mov    DWORD PTR [ebx+0x75],edi
  41bd64:	loopne 0x41bd7f
  41bd66:	xchg   esi,eax
  41bd67:	pop    edx
  41bd68:	loope  0x41bd77
  41bd6a:	inc    esi
  41bd6b:	or     eax,0x6f578ef1
  41bd70:	dec    esi
  41bd71:	inc    BYTE PTR [edx+0x2ec25712]
  41bd77:	mov    ds:0x7eac984f,eax
  41bd7c:	mov    dl,0xd4
  41bd7e:	cs test ch,bl
  41bd81:	add    edx,0xee05f1a4
  41bd87:	xor    al,0xe4
  41bd89:	test   eax,0xf6af4632
  41bd8e:	inc    esi
  41bd8f:	test   al,0x58
  41bd91:	push   edx
  41bd92:	inc    esi
  41bd93:	mov    ds:0x6263d817,eax
  41bd98:	es jp  0x41be0b
  41bd9b:	fs ds ftst 
  41bd9f:	enter  0xf83a,0xd4
  41bda3:	out    0x3d,al
  41bda5:	lods   eax,DWORD PTR ds:[esi]
  41bda6:	sub    bl,BYTE PTR [ecx-0x47edca95]
  41bdac:	xchg   dl,ah
  41bdae:	dec    esp
  41bdaf:	hlt    
  41bdb0:	push   edx
  41bdb1:	mov    eax,0xe9e86644
  41bdb6:	scas   al,BYTE PTR es:[edi]
  41bdb7:	test   BYTE PTR gs:[ecx-0x2],0x8f
  41bdbc:	adc    al,0xbe
  41bdbe:	shr    DWORD PTR [edx+ebx*2+0x946743b],1
  41bdc5:	pop    ebp
  41bdc6:	cmp    al,0x5b
  41bdc8:	fdivrp st(1),st
  41bdca:	mov    ds:0x6e19da03,al
  41bdcf:	mov    esp,DWORD PTR ds:0x477b6799
  41bdd5:	adc    DWORD PTR [edi+0x29],eax
  41bdd8:	mov    WORD PTR es:[edi+0x1699d70],ss
  41bddf:	ret    0x38a4
  41bde2:	cmp    al,dl
  41bde4:	sbb    BYTE PTR [ebx+0x45],0xd
  41bde8:	sar    BYTE PTR [edx+edx*2],0x33
  41bdec:	int    0x2a
  41bdee:	(bad)  
  41bdef:	mov    ds:0xfe4c7a65,al
  41bdf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf5:	into   
  41bdf6:	jo     0x41be4e
  41bdf8:	pop    eax
  41bdf9:	pop    ss
  41bdfa:	adc    ebx,0x2edab592
  41be00:	mov    al,0x87
  41be02:	mov    dl,0xeb
  41be04:	or     DWORD PTR [esi-0x1c415abb],esi
  41be0a:	xor    bl,dl
  41be0c:	(bad)  
  41be0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be0e:	fmul   st(6),st
  41be10:	adc    esi,DWORD PTR [ebx-0xd]
  41be13:	mov    ds:0x1892212f,al
  41be18:	test   al,0xc0
  41be1a:	sub    DWORD PTR [ebp+0x75643573],ecx
  41be20:	cmp    al,dh
  41be22:	pop    ds
  41be23:	sub    al,0x47
  41be25:	xor    eax,0x2f0f694c
  41be2a:	dec    eax
  41be2b:	dec    esi
  41be2c:	shl    BYTE PTR [esi],1
  41be2e:	ds xor eax,0x4a632d96
  41be34:	or     cl,BYTE PTR [esi]
  41be36:	push   esp
  41be37:	and    eax,DWORD PTR [ecx-0x3ec50b4b]
  41be3d:	sbb    eax,0xbcc61e28
  41be42:	(bad)  
  41be45:	leave  
  41be46:	push   edx
  41be47:	bnd jmp 0x41bea5
  41be4a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41be4c:	pop    ss
  41be4d:	inc    bp
  41be4f:	pop    es
  41be50:	outs   dx,DWORD PTR ds:[esi]
  41be51:	adc    al,0x81
  41be53:	in     al,0x51
  41be55:	aaa    
  41be56:	and    al,0x1b
  41be58:	sahf   
  41be59:	scas   al,BYTE PTR es:[di]
  41be5b:	daa    
  41be5c:	jge    0x41bea3
  41be5e:	push   ebx
  41be5f:	xor    DWORD PTR [ecx+edx*8-0x50],0xeec955e5
  41be67:	mov    ds:0xa936b8b0,al
  41be6c:	sbb    esp,ebx
  41be6e:	adc    ah,BYTE PTR [ecx+0x26]
  41be71:	out    0xea,eax
  41be73:	dec    edi
  41be74:	aam    0xdc
  41be76:	lods   al,BYTE PTR ds:[esi]
  41be77:	dec    esi
  41be78:	xchg   ebx,eax
  41be79:	adc    ebp,ecx
  41be7b:	mov    ds:0xfef89902,al
  41be80:	pop    esi
  41be81:	ffree  st(5)
  41be83:	mov    eax,ds:0xa72c2595
  41be88:	das    
  41be89:	es adc eax,0x565c53bf
  41be8f:	mov    ds:0xbb608c9f,eax
  41be94:	lahf   
  41be95:	addr16 dec esi
  41be97:	js     0x41be6b
  41be99:	test   BYTE PTR [ebx-0xc],bl
  41be9c:	hlt    
  41be9d:	pop    es
  41be9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be9f:	mov    ?,eax
  41bea1:	ret    
  41bea2:	pop    esi
  41bea3:	sub    edi,esi
  41bea5:	pusha  
  41bea6:	sub    al,0xa3
  41bea8:	into   
  41bea9:	adc    al,0xd2
  41beab:	or     esp,DWORD PTR [esi-0x1ba87ead]
  41beb1:	(bad)
  41beb4:	cld    
  41beb5:	es cmp al,dl
  41beb8:	mov    ch,0x58
  41beba:	inc    edi
  41bebb:	aam    0xe5
  41bebd:	and    esi,esp
  41bebf:	and    dh,cl
  41bec1:	fnsave [edx-0x34]
  41bec4:	mov    al,0x4f
  41bec6:	pop    es
  41bec7:	jae    0x41be51
  41bec9:	adc    dl,bh
  41becb:	jns    0x41be5e
  41becd:	jbe    0x41be5c
  41becf:	and    bh,bh
  41bed1:	jns    0x41be80
  41bed3:	lock les eax,FWORD PTR [edi+0x7b]
  41bed7:	mov    ?,WORD PTR [ebx]
  41bed9:	fisttp DWORD PTR [eax+0x23]
  41bedc:	adc    BYTE PTR [edx+eiz*8+0x6dd79b2c],dh
  41bee3:	xor    ebx,ebx
  41bee5:	xor    al,0xc4
  41bee7:	dec    edx
  41bee8:	cmp    al,0xc4
  41beea:	mov    BYTE PTR [ecx+0x2e],ch
  41beed:	mov    BYTE PTR [ebx],0x49
  41bef0:	adc    esi,DWORD PTR gs:[edx]
  41bef3:	mov    ds:0x86ba1403,eax
  41bef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef9:	lea    esi,[eax-0x190adb34]
  41beff:	aam    0x15
  41bf01:	setae  BYTE PTR [edx]
  41bf04:	xchg   esi,eax
  41bf05:	push   ebp
  41bf06:	mov    BYTE PTR [edi],bl
  41bf08:	test   DWORD PTR ds:0x12355a4f,esi
  41bf0e:	cmp    eax,0x45d4545f
  41bf13:	mov    ebx,DWORD PTR [edx+0x5d]
  41bf16:	call   0x370b:0xaab57537
  41bf1d:	add    dh,dh
  41bf1f:	pop    ss
  41bf20:	jg     0x41bef4
  41bf22:	inc    ebp
  41bf23:	sbb    al,0x74
  41bf25:	jecxz  0x41bee7
  41bf27:	pop    ebx
  41bf28:	idiv   DWORD PTR [ecx+0x3291f39f]
  41bf2e:	jnp    0x41bed2
  41bf30:	popf   
  41bf31:	addr16 jmp esp
  41bf34:	cmp    al,0xcb
  41bf36:	inc    ebp
  41bf37:	jmp    0x41becb
  41bf39:	dec    esp
  41bf3a:	cs dec ebp
  41bf3c:	loop   0x41beef
  41bf3e:	push   edi
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	mov    al,0x2
  41bf42:	dec    ecx
  41bf43:	mov    ds:0x7fbec16c,eax
  41bf48:	mov    ds:0x56a7526a,al
  41bf4d:	mov    esi,0x94e8fdb5
  41bf52:	inc    ebp
  41bf53:	push   0x2302dda0
  41bf58:	test   eax,0x7fc8aa4
  41bf5d:	adc    al,0x84
  41bf5f:	push   0x7
  41bf61:	mov    bh,0xe6
  41bf63:	test   eax,0xa30ac705
  41bf68:	mov    ebx,0x9ab40e25
  41bf6d:	dec    ecx
  41bf6e:	and    DWORD PTR [ebx],esp
  41bf70:	inc    eax
  41bf71:	jo     0x41bf59
  41bf73:	mov    bh,0x1e
  41bf75:	push   es
  41bf76:	inc    edx
  41bf77:	(bad)  
  41bf78:	or     DWORD PTR [ebp+eax*2-0x70216e44],ebx
  41bf7f:	inc    eax
  41bf80:	push   ebx
  41bf81:	inc    eax
  41bf82:	xchg   DWORD PTR [ecx],esi
  41bf84:	call   0xfae513b1
  41bf89:	or     al,0x46
  41bf8b:	pop    ecx
  41bf8c:	int3   
  41bf8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8e:	dec    esp
  41bf8f:	dec    eax
  41bf90:	ds mov dh,0x31
  41bf93:	jmp    0x41bfa3
  41bf95:	cmovle esp,DWORD PTR [ebx]
  41bf98:	dec    edi
  41bf99:	mov    al,0xc0
  41bf9b:	mov    esp,0xe116c320
  41bfa0:	push   esp
  41bfa1:	xor    eax,0x1f0b9e76
  41bfa6:	add    DWORD PTR [ecx-0x5cb38316],edx
  41bfac:	cmp    eax,0xa3451107
  41bfb1:	outs   dx,BYTE PTR ds:[esi]
  41bfb2:	dec    esi
  41bfb3:	fiadd  DWORD PTR [ecx+ebp*8]
  41bfb6:	add    eax,0x6c845b89
  41bfbb:	inc    edx
  41bfbc:	xor    dl,BYTE PTR ds:0xd3420486
  41bfc2:	inc    esp
  41bfc3:	dec    eax
  41bfc4:	adc    BYTE PTR [ebx-0x3a593bf3],0xcc
  41bfcb:	mov    WORD PTR [esi+0x11],?
  41bfce:	cmp    eax,0x1d34f4e3
  41bfd3:	mov    ah,BYTE PTR [edi-0x24333cde]
  41bfd9:	kaddb  k3,k6,k0
  41bfdd:	mov    eax,0x9f65ec5
  41bfe2:	arpl   WORD PTR [ecx+0x1e],si
  41bfe5:	pop    ecx
  41bfe6:	fdivr  st,st(2)
  41bfe8:	pop    ss
  41bfe9:	lock and BYTE PTR [ebx],ah
  41bfec:	mov    ch,0xfa
  41bfee:	pminub mm4,QWORD PTR [esi-0x1689efd]
  41bff5:	aas    
  41bff6:	fwait
  41bff7:	jmp    0x4fe3:0x5165b58c
  41bffe:	sbb    BYTE PTR [esi+0x10],dh
  41c001:	fcmovnb st,st(5)
  41c003:	pop    esp
  41c004:	sahf   
  41c005:	inc    esp
  41c006:	and    cl,dl
  41c008:	push   edi
  41c009:	mov    eax,ds:0x67c7501
  41c00e:	dec    esi
  41c00f:	mov    ds:0x4f4c31ca,eax
  41c014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c015:	fiadd  WORD PTR [edi-0x58]
  41c018:	dec    eax
  41c019:	pop    ebx
  41c01a:	nop
  41c01b:	mov    esp,0x37e27e0e
  41c020:	mov    DWORD PTR [ecx+0x696ca27e],eax
  41c026:	(bad)  
  41c027:	add    al,0x74
  41c029:	push   edx
  41c02a:	inc    esp
  41c02b:	das    
  41c02c:	enter  0x9bab,0xcd
  41c030:	je     0x41c093
  41c032:	push   DWORD PTR [edi]
  41c034:	push   esp
  41c035:	jns    0x41bfbf
  41c037:	scas   eax,DWORD PTR es:[edi]
  41c038:	imul   esi,DWORD PTR [ebx+0x2b],0xffffffa3
  41c03c:	loope  0x41c0b1
  41c03e:	pop    bp
  41c040:	lods   eax,DWORD PTR ds:[esi]
  41c041:	jmp    0xf75138b
  41c046:	cmp    ebx,DWORD PTR [edx]
  41c048:	int3   
  41c049:	(bad)  
  41c04a:	scas   eax,DWORD PTR es:[edi]
  41c04b:	adc    dh,BYTE PTR [ebp+0x4e232d5c]
  41c051:	add    dl,BYTE PTR [edi]
  41c053:	arpl   WORD PTR [edi],cx
  41c055:	jecxz  0x41c050
  41c057:	and    BYTE PTR [ebp+0x22adc9b],0x47
  41c05e:	sbb    al,0x75
  41c060:	out    dx,eax
  41c061:	jbe    0x41c04a
  41c063:	mov    ds:0x39c06e,al
  41c068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c069:	jmp    0x42e1:0x7f512e83
  41c070:	mov    ebp,0xdfc64f2d
  41c075:	aam    0x75
  41c077:	cld    
  41c078:	xor    ebx,DWORD PTR [ebx]
  41c07a:	xor    ebx,ebp
  41c07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c07d:	xchg   ebx,eax
  41c07e:	fwait
  41c07f:	xor    eax,0xa1d72318
  41c084:	mov    al,ds:0x1cf2092a
  41c089:	mov    ch,0x4c
  41c08b:	addr16 das 
  41c08d:	mov    edi,DWORD PTR [ebx+eax*8+0x59]
  41c091:	div    DWORD PTR [eax+0x31]
  41c094:	sahf   
  41c095:	mov    al,0xbb
  41c097:	ret    0xf585
  41c09a:	loope  0x41c071
  41c09c:	imul   edx,edi,0x5a0c02a
  41c0a2:	jmp    0x8658:0xd8f1eea2
  41c0a9:	ins    DWORD PTR es:[edi],dx
  41c0aa:	dec    ecx
  41c0ab:	int3   
  41c0ac:	in     eax,0xfc
  41c0ae:	(bad)  
  41c0af:	and    ch,BYTE PTR [edx-0x57a34132]
  41c0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b6:	push   eax
  41c0b7:	and    edx,DWORD PTR [edx]
  41c0b9:	add    edi,DWORD PTR [ebp-0x9]
  41c0bc:	imul   edx,DWORD PTR [esi],0xffffffc6
  41c0bf:	lea    edx,[eax-0x39]
  41c0c2:	repnz inc ebx
  41c0c4:	jmp    0x41c09f
  41c0c6:	push   cs
  41c0c7:	lods   eax,DWORD PTR ds:[esi]
  41c0c8:	idiv   BYTE PTR [esi-0x502e5cdf]
  41c0ce:	outs   dx,DWORD PTR ds:[esi]
  41c0cf:	lock and al,0x1e
  41c0d2:	jno    0x41c07a
  41c0d4:	xor    eax,esp
  41c0d6:	xchg   esp,eax
  41c0d7:	push   ebp
  41c0d8:	outs   dx,BYTE PTR ds:[esi]
  41c0d9:	sbb    bl,BYTE PTR [ecx]
  41c0db:	scas   eax,DWORD PTR es:[edi]
  41c0dc:	jno    0x41c093
  41c0de:	dec    ebp
  41c0df:	push   edi
  41c0e0:	pop    edx
  41c0e1:	mov    dl,0x96
  41c0e3:	in     al,0xac
  41c0e5:	sub    DWORD PTR [esi-0x66],eax
  41c0e8:	lods   al,BYTE PTR ds:[esi]
  41c0e9:	push   ds
  41c0ea:	pop    eax
  41c0eb:	or     eax,0xc26f2eea
  41c0f0:	push   es
  41c0f1:	mov    dl,0x24
  41c0f3:	mov    ds:0x843781b,eax
  41c0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f9:	mov    al,ds:0x3c4c318b
  41c0fe:	inc    ecx
  41c0ff:	push   esi
  41c100:	cmp    BYTE PTR [ebp-0x210415a],dh
  41c106:	add    ch,cl
  41c108:	dec    ecx
  41c109:	and    al,BYTE PTR [esi+0x68]
  41c10c:	stc    
  41c10d:	adc    al,0x58
  41c10f:	jo     0x41c0bf
  41c111:	pushf  
  41c112:	adc    eax,0x369733ca
  41c117:	and    esp,DWORD PTR [ebx]
  41c119:	mov    DWORD PTR fs:[ebp-0xef860db],edi
  41c120:	push   edi
  41c121:	cmp    al,0xf1
  41c123:	js     0x41c11b
  41c125:	mov    ebp,0x1cd778cb
  41c12a:	sub    DWORD PTR [ebx],esp
  41c12c:	cmp    BYTE PTR [edi+0x4a],bl
  41c12f:	les    ecx,FWORD PTR [edi+0x173ccd78]
  41c135:	loope  0x41c0dc
  41c137:	into   
  41c138:	mov    ch,0x57
  41c13a:	dec    esp
  41c13b:	push   ebx
  41c13c:	(bad)  [edi+esi*4+0x53c6dbe9]
  41c143:	inc    eax
  41c144:	jne    0x41c192
  41c146:	test   DWORD PTR [ebx],eax
  41c148:	inc    ebx
  41c149:	std    
  41c14a:	lock mov bh,0xc6
  41c14d:	out    dx,eax
  41c14e:	retf   
  41c14f:	arpl   WORD PTR [edx-0x27],cx
  41c152:	fadd   DWORD PTR [ebp+0x5a]
  41c155:	lea    eax,[edx+0xdf82486]
  41c15b:	cmp    dl,bl
  41c15d:	test   DWORD PTR ds:0xcffd265b,ebx
  41c163:	cwde   
  41c164:	je     0x41c142
  41c166:	pop    edx
  41c167:	mov    dl,0x36
  41c169:	les    edi,FWORD PTR [ebp-0x2f]
  41c16c:	in     al,0x33
  41c16e:	sub    dl,ch
  41c170:	mov    DWORD PTR [edi+0x18ae9dd7],ecx
  41c176:	mov    eax,0xd80426a1
  41c17b:	mov    al,ds:0xec239c68
  41c180:	les    esi,FWORD PTR [ebx]
  41c182:	lahf   
  41c183:	sbb    edi,esi
  41c185:	mov    ecx,0x9663858
  41c18a:	rcr    DWORD PTR [esi+0x22],0xec
  41c18e:	cmp    ch,cl
  41c190:	dec    ecx
  41c191:	jecxz  0x41c138
  41c193:	jo     0x41c165
  41c195:	test   eax,0x63de1172
  41c19a:	mov    dl,0x13
  41c19c:	xchg   ecx,eax
  41c19d:	(bad)  
  41c19e:	jmp    0x41c162
  41c1a0:	clc    
  41c1a1:	test   ebp,eax
  41c1a3:	test   eax,0x6c7d6779
  41c1a8:	aas    
  41c1a9:	and    esp,DWORD PTR [edx-0x67]
  41c1ac:	xchg   esi,eax
  41c1ad:	mov    ah,0xfe
  41c1af:	inc    DWORD PTR es:[eax+0x11f66e2c]
  41c1b6:	or     eax,0x69ab2243
  41c1bb:	mov    dh,0x45
  41c1bd:	in     eax,0x5
  41c1bf:	pop    esi
  41c1c0:	adc    BYTE PTR [ecx+0x2323c475],dh
  41c1c6:	sbb    eax,0xe262ec23
  41c1cb:	outs   dx,DWORD PTR ds:[esi]
  41c1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1cd:	lahf   
  41c1ce:	jmp    0x1ba84464
  41c1d3:	pop    eax
  41c1d4:	xor    ah,BYTE PTR [ebx-0x4a9d6fc7]
  41c1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1db:	push   esi
  41c1dc:	jne    0x41c1a4
  41c1de:	dec    ecx
  41c1df:	sti    
  41c1e0:	mov    al,0xbf
  41c1e2:	mov    dh,0x2a
  41c1e4:	ins    DWORD PTR es:[edi],dx
  41c1e5:	in     eax,dx
  41c1e6:	test   eax,edx
  41c1e8:	mov    ebx,0x6fdf22d4
  41c1ed:	xor    eax,0x5fe41b3d
  41c1f2:	mov    cl,0x5e
  41c1f4:	and    ecx,DWORD PTR [edx]
  41c1f6:	(bad)
  41c1f9:	mov    dh,0xec
  41c1fb:	test   DWORD PTR [ecx-0x5eefc7fb],0x5593e35
  41c205:	dec    esi
  41c206:	fstp   DWORD PTR [edx-0x2bbbadc0]
  41c20c:	mov    edx,0x81956846
  41c211:	pop    ebp
  41c212:	sbb    eax,0x17b56bfc
  41c217:	jecxz  0x41c202
  41c219:	es stos BYTE PTR es:[edi],al
  41c21b:	test   al,0x3e
  41c21d:	jecxz  0x41c1e4
  41c21f:	outs   dx,BYTE PTR ds:[esi]
  41c220:	mov    ebx,0xf4f7a6ff
  41c225:	pop    edi
  41c226:	loop   0x41c261
  41c228:	dec    edi
  41c229:	pop    esi
  41c22a:	sub    edi,edi
  41c22c:	data16 sahf 
  41c22e:	sub    BYTE PTR [esi+0x56],ah
  41c231:	and    al,0xea
  41c233:	fldl2e 
  41c235:	pop    gs
  41c237:	test   BYTE PTR [ecx-0x418b2f4d],dh
  41c23d:	retf   0xce61
  41c240:	test   al,0xf0
  41c242:	(bad)  
  41c244:	(bad)  [ebp+ecx*8-0x7a073761]
  41c24b:	sar    DWORD PTR [ebx+0x29],cl
  41c24e:	adc    DWORD PTR [ecx],ecx
  41c250:	not    DWORD PTR es:[eax-0x71]
  41c254:	xor    bl,dl
  41c256:	in     eax,dx
  41c257:	mov    eax,ds:0xe3fd34a9
  41c25c:	mov    ebx,0x3fa581e8
  41c261:	cmp    esi,DWORD PTR [edx+0x2e]
  41c264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c265:	cmc    
  41c266:	in     al,0x90
  41c268:	cld    
  41c269:	add    BYTE PTR [ebx-0x2a51ec03],0xce
  41c270:	ja     0x41c26c
  41c272:	aad    0x6f
  41c274:	shl    ah,1
  41c276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c277:	arpl   WORD PTR [esi+0x248a4205],sp
  41c27d:	mov    dh,0x72
  41c27f:	out    0xa2,al
  41c281:	mov    ch,0x15
  41c283:	mov    ah,0x9c
  41c285:	(bad)  
  41c286:	and    bh,BYTE PTR ds:0xdcc5c012
  41c28c:	popa   
  41c28d:	icebp  
  41c28e:	pop    esi
  41c28f:	xlat   BYTE PTR ds:[ebx]
  41c290:	inc    ecx
  41c291:	daa    
  41c292:	ins    DWORD PTR es:[edi],dx
  41c293:	in     eax,dx
  41c294:	adc    DWORD PTR [edx+0x65431fd5],0xfe4ba538
  41c29e:	push   esp
  41c29f:	cwde   
  41c2a0:	test   al,0x6
  41c2a2:	iret   
  41c2a3:	xchg   edx,eax
  41c2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a5:	xchg   ebx,eax
  41c2a6:	xchg   edx,eax
  41c2a7:	cmp    bl,BYTE PTR [edx-0x3e]
  41c2aa:	daa    
  41c2ab:	es inc esp
  41c2ad:	inc    ecx
  41c2ae:	nop
  41c2af:	(bad)  
  41c2b0:	and    ecx,edi
  41c2b2:	gs in  eax,0xed
  41c2b5:	clc    
  41c2b6:	xor    al,0xa3
  41c2b8:	dec    edi
  41c2b9:	repnz mov BYTE PTR [ecx+0x336d281c],ah
  41c2c0:	cmp    dh,BYTE PTR [ebp-0x6a658fdb]
  41c2c6:	fldenv [esi-0x257c4a8e]
  41c2cc:	stc    
  41c2cd:	fs ret 0x1291
  41c2d1:	push   edi
  41c2d2:	inc    ebp
  41c2d3:	cmp    bl,dh
  41c2d5:	test   BYTE PTR [ecx+ebx*1-0x1b04ca1],bl
  41c2dc:	inc    eax
  41c2dd:	(bad)
  41c2e1:	xor    eax,0xf09a5723
  41c2e6:	push   es
  41c2e7:	adc    DWORD PTR [esi-0x2c],edi
  41c2ea:	mov    bl,0xa4
  41c2ec:	jne    0x41c312
  41c2ee:	(bad)  
  41c2ef:	mov    cl,0x4
  41c2f1:	sti    
  41c2f2:	mov    ah,0xa7
  41c2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f5:	mov    ch,0x41
  41c2f7:	xchg   ebx,eax
  41c2f8:	jg     0x41c2c1
  41c2fa:	pop    edx
  41c2fb:	or     cl,BYTE PTR [edx]
  41c2fd:	call   0x1b0ffcc7
  41c302:	popf   
  41c303:	mov    ah,0xc9
  41c305:	(bad)  [edx-0x7777b9b0]
  41c30b:	lahf   
  41c30c:	mov    ds:0xe7ad09d,al
  41c311:	nop
  41c312:	ret    0x6f7c
  41c315:	pusha  
  41c316:	aad    0xfe
  41c318:	push   ss
  41c319:	mov    ah,0x9c
  41c31b:	add    DWORD PTR [edi+0x35],0xb372df07
  41c322:	sbb    edx,DWORD PTR [ebp-0x4a]
  41c325:	ret    0xd3e5
  41c328:	push   ecx
  41c329:	push   0x49
  41c32b:	jp     0x41c3a8
  41c32d:	mov    ch,0x61
  41c32f:	bound  edi,QWORD PTR [edx+0x6c]
  41c332:	imul   edi,DWORD PTR [ebx],0x2b
  41c335:	jmp    0x41c2ed
  41c337:	mov    al,ds:0xb3501bf6
  41c33c:	es out dx,eax
  41c33e:	fidivr WORD PTR [edx]
  41c340:	adc    DWORD PTR [ebp+0x1732761f],edi
  41c346:	loope  0x41c379
  41c348:	out    0x90,al
  41c34a:	icebp  
  41c34b:	push   0x1d
  41c34d:	std    
  41c34e:	(bad)  
  41c34f:	fist   DWORD PTR [edi-0x5d9ba6c6]
  41c355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c356:	pop    ds
  41c357:	adc    eax,0x55bf28de
  41c35c:	std    
  41c35d:	mov    bl,0x51
  41c35f:	js     0x41c324
  41c361:	dec    ebx
  41c362:	pushf  
  41c363:	imul   edi,DWORD PTR [edx+0x2687c39f],0x6
  41c36a:	test   BYTE PTR [ecx+0x2a5d30a7],cl
  41c370:	inc    eax
  41c371:	mov    ch,0x2
  41c373:	sub    BYTE PTR [edx],dl
  41c375:	sub    al,0xd8
  41c377:	jg     0x41c3c5
  41c379:	sbb    al,0x20
  41c37b:	xor    dl,BYTE PTR [esi+edx*4+0x7d034f98]
  41c382:	adc    DWORD PTR [ebx-0x6c],esp
  41c385:	sub    BYTE PTR [edi+ebp*2],0xd3
  41c389:	jmp    0xcef766d6
  41c38e:	scas   al,BYTE PTR es:[edi]
  41c38f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c391:	mov    al,0x85
  41c393:	fisttp WORD PTR [ecx]
  41c395:	adc    BYTE PTR [edi],dh
  41c397:	mov    edi,0xbae3c3ad
  41c39c:	ret    
  41c39d:	and    eax,0xb54fd753
  41c3a2:	jge    0x41c3e8
  41c3a4:	adc    bh,BYTE PTR [edx-0x70]
  41c3a7:	dec    ebx
  41c3a8:	and    dh,BYTE PTR [ebp+0x2968d94a]
  41c3ae:	xchg   esi,eax
  41c3af:	mov    ecx,DWORD PTR [edi+0x7d220343]
  41c3b5:	outs   dx,DWORD PTR ds:[esi]
  41c3b6:	repz mov ds:0x3458b84f,al
  41c3bc:	es mov ch,0x7c
  41c3bf:	cmp    al,0x20
  41c3c1:	mov    gs,WORD PTR [esi]
  41c3c3:	inc    ecx
  41c3c4:	cwde   
  41c3c5:	mov    ch,0xe9
  41c3c7:	repnz xor dh,dl
  41c3ca:	sbb    cl,BYTE PTR [esi+esi*1+0x64aac5e1]
  41c3d1:	test   al,0x78
  41c3d3:	mov    DWORD PTR [ecx*1-0x4a6da6a0],0x2d0bb337
  41c3de:	les    edx,FWORD PTR [edx-0x3d572572]
  41c3e4:	dec    ecx
  41c3e5:	xor    eax,0x10fe73ea
  41c3ea:	cmp    DWORD PTR [eax-0x3fbc680c],esi
  41c3f0:	mov    ds:0x73561ba2,eax
  41c3f5:	mov    DWORD PTR [esi+0x4ad1f72],edi
  41c3fb:	sbb    bh,BYTE PTR [edi-0x69]
  41c3fe:	push   ecx
  41c3ff:	arpl   WORD PTR [ebx],ax
  41c401:	xor    al,BYTE PTR [esi+0x5524907b]
  41c407:	inc    esp
  41c408:	sti    
  41c409:	xor    eax,0x8526ab38
  41c40e:	dec    esp
  41c40f:	cmp    cl,bh
  41c411:	popf   
  41c412:	(bad)  
  41c413:	stc    
  41c414:	inc    eax
  41c415:	xor    ecx,ecx
  41c417:	in     al,0x5a
  41c419:	retf   
  41c41a:	mov    esp,0x742fa5ab
  41c41f:	sub    eax,0x87b1dd64
  41c424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c425:	popa   
  41c426:	add    ebx,DWORD PTR [edx+eiz*4-0xf1c536e]
  41c42d:	adc    al,0x1b
  41c42f:	sbb    ebp,DWORD PTR [ebp-0x35]
  41c432:	inc    ebp
  41c433:	mov    ds:0xa97e0426,al
  41c438:	mov    ch,ah
  41c43a:	mul    WORD PTR [ebx+0x7242435]
  41c441:	jmp    0x6dd3:0x2962f285
  41c448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c449:	sti    
  41c44a:	cmp    BYTE PTR cs:[edx-0x752bf0a2],0x9
  41c452:	add    al,0x80
  41c454:	es sahf 
  41c456:	std    
  41c457:	cmp    bl,dh
  41c459:	ds in  eax,dx
  41c45b:	scas   eax,DWORD PTR es:[edi]
  41c45c:	xchg   edi,eax
  41c45d:	das    
  41c45e:	imul   ebx,DWORD PTR [ebx-0x54560640],0xb936352b
  41c468:	(bad)  
  41c469:	dec    DWORD PTR [esi+0x54]
  41c46c:	test   DWORD PTR es:[esp+ebx*4],0x5b552cc9
  41c474:	cmp    eax,0x1b24d8b5
  41c479:	push   es
  41c47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c47b:	(bad)  
  41c47c:	(bad)  
  41c47d:	call   0x497f2147
  41c482:	std    
  41c483:	call   0xf1f1:0x326b049
  41c48a:	and    ah,BYTE PTR [ebx]
  41c48c:	lods   eax,DWORD PTR ds:[esi]
  41c48d:	jne    0x41c449
  41c48f:	ja     0x41c437
  41c491:	je     0x41c50c
  41c493:	dec    esp
  41c494:	pop    ss
  41c495:	ret    
  41c496:	je     0x41c484
  41c498:	cwde   
  41c499:	xor    eax,0xdfa98fbd
  41c49e:	imul   edi,DWORD PTR [ecx+0x15],0xe33745ce
  41c4a5:	cmp    dl,dl
  41c4a7:	int3   
  41c4a8:	fs std 
  41c4aa:	push   es
  41c4ab:	mov    eax,0x9c1d6a1a
  41c4b0:	xchg   ah,ah
  41c4b2:	ss inc ebp
  41c4b4:	(bad)  
  41c4b5:	call   0x1fe8ff71
  41c4ba:	ret    
  41c4bb:	sbb    eax,0x8ec52461
  41c4c0:	and    edx,DWORD PTR [esi+0x73]
  41c4c3:	lahf   
  41c4c4:	fwait
  41c4c5:	inc    ebp
  41c4c6:	dec    ebp
  41c4c7:	test   BYTE PTR ds:0x2fcbc627,ah
  41c4cd:	lods   eax,DWORD PTR ds:[esi]
  41c4ce:	xor    al,0x9e
  41c4d0:	cmp    ecx,DWORD PTR [ecx+0x36]
  41c4d3:	out    dx,eax
  41c4d4:	xacquire xchg BYTE PTR [ebx],dl
  41c4d7:	inc    ebx
  41c4d8:	jg     0x41c4c5
  41c4da:	(bad)
  41c4dd:	(bad)  
  41c4de:	adc    cl,BYTE PTR cs:[edi+0x77]
  41c4e2:	mov    esi,0x4da760b2
  41c4e7:	dec    ebx
  41c4e8:	inc    esi
  41c4e9:	xchg   ebp,eax
  41c4ea:	and    DWORD PTR [ecx],edi
  41c4ec:	shr    BYTE PTR [edx-0x55],1
  41c4ef:	pop    ecx
  41c4f0:	es mov bh,0x89
  41c4f3:	xor    al,0x9e
  41c4f5:	int    0x24
  41c4f7:	fadd   DWORD PTR [ebx+0x6d1cfc26]
  41c4fd:	lds    eax,FWORD PTR cs:[edx]
  41c500:	push   esi
  41c501:	adc    esi,DWORD PTR [edi+0x45fac239]
  41c507:	mov    dh,0x7e
  41c509:	stos   BYTE PTR es:[edi],al
  41c50a:	inc    esp
  41c50b:	mov    dl,0x11
  41c50d:	fsubr  QWORD PTR [edx-0x25]
  41c510:	(bad)  
  41c511:	cmp    bh,dl
  41c513:	mov    ds:0xdabc7fe7,al
  41c518:	xchg   BYTE PTR ds:0xdc322f4b,ch
  41c51e:	xor    ch,BYTE PTR [esi]
  41c520:	add    eax,0x8c2f45d2
  41c525:	inc    ebx
  41c526:	popa   
  41c527:	and    al,0x91
  41c529:	mov    ch,0xc
  41c52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52c:	sub    DWORD PTR [edi+0x1e],esi
  41c52f:	inc    ebp
  41c530:	cmp    BYTE PTR [ecx-0x4abd1559],al
  41c536:	in     al,0x8c
  41c538:	jne    0x41c5af
  41c53a:	stc    
  41c53b:	jbe    0x41c57c
  41c53d:	mov    ch,0x12
  41c53f:	scas   eax,DWORD PTR es:[edi]
  41c540:	out    dx,eax
  41c541:	in     al,0x2a
  41c543:	jbe    0x41c4d9
  41c545:	pop    es
  41c546:	push   ecx
  41c547:	in     al,0x0
  41c549:	imul   esi,DWORD PTR [eax+0x5f3ed60],0x23
  41c550:	xor    ch,BYTE PTR [ebp+0x40d041b7]
  41c556:	mov    ebx,0x56dfe69e
  41c55b:	test   DWORD PTR [ecx],ebp
  41c55d:	add    eax,0x8b5dfe37
  41c562:	and    dh,BYTE PTR [esi+0x56e24e4e]
  41c568:	jle    0x41c537
  41c56a:	lods   eax,DWORD PTR ds:[esi]
  41c56b:	cmp    BYTE PTR [esi+0x35],dl
  41c56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56f:	(bad)  
  41c570:	psrad  mm6,mm5
  41c573:	fs dec ebp
  41c575:	aam    0x45
  41c577:	cli    
  41c578:	(bad)  
  41c579:	je     0x41c4fe
  41c57b:	aas    
  41c57c:	mov    ch,0x3f
  41c57e:	retf   0xf05c
  41c581:	jnp    0x41c579
  41c583:	out    0xfa,al
  41c585:	dec    edi
  41c586:	fisub  DWORD PTR [edx+0x64d0097]
  41c58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58d:	pop    esi
  41c58e:	fwait
  41c58f:	xchg   BYTE PTR [ebx+eax*4],cl
  41c592:	leave  
  41c593:	leave  
  41c594:	push   ebp
  41c595:	xor    eax,0x1a6cdcc5
  41c59a:	mov    edi,ebp
  41c59c:	das    
  41c59d:	mov    ebx,0x7e9bc1c5
  41c5a2:	inc    esi
  41c5a3:	jo     0x41c610
  41c5a5:	arpl   WORD PTR [ebp+0x77],di
  41c5a8:	lea    ebx,[ecx-0x4e5a88d9]
  41c5ae:	in     eax,0x27
  41c5b0:	jge    0x41c552
  41c5b2:	jl     0x41c5e6
  41c5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b5:	add    BYTE PTR [esi],al
  41c5b7:	sub    al,0x42
  41c5ba:	ins    BYTE PTR es:[edi],dx
  41c5bb:	inc    edi
  41c5bc:	inc    edx
  41c5bd:	mov    ch,0x75
  41c5bf:	pop    ebx
  41c5c0:	dec    eax
  41c5c1:	clc    
  41c5c2:	dec    edi
  41c5c3:	jne    0x41c5dc
  41c5c5:	and    al,BYTE PTR [esi+0x1]
  41c5c8:	fst    st(2)
  41c5ca:	push   eax
  41c5cb:	ret    0x8fbe
  41c5ce:	bound  ebp,QWORD PTR [edi]
  41c5d0:	test   DWORD PTR [ebp-0x596f1b94],esi
  41c5d6:	fs repz dec ebp
  41c5d9:	retf   
  41c5da:	lds    ecx,FWORD PTR [esi+0x3]
  41c5dd:	xor    esi,eax
  41c5df:	cwde   
  41c5e0:	ud0    ebx,DWORD PTR [edi-0x1924f88e]
  41c5e7:	inc    edx
  41c5e8:	or     cl,al
  41c5ea:	lds    ebx,FWORD PTR [ebp+0x66]
  41c5ed:	scas   eax,DWORD PTR es:[edi]
  41c5ee:	push   0x16
  41c5f0:	fsubr  DWORD PTR [esi+eax*8-0xbcbfb69]
  41c5f7:	and    ch,BYTE PTR [ebp+0x7b]
  41c5fa:	dec    ebx
  41c5fb:	jp     0x41c5a2
  41c5fd:	jmp    0x4e82f67a
  41c602:	cwde   
  41c603:	ror    DWORD PTR [edx],cl
  41c605:	clc    
  41c606:	aas    
  41c607:	inc    ecx
  41c608:	inc    ebp
  41c609:	ins    DWORD PTR es:[edi],dx
  41c60a:	int    0x2d
  41c60c:	popa   
  41c60d:	cmp    DWORD PTR [esi-0x61],esp
  41c610:	jae    0x41c5af
  41c612:	or     eax,0x28ca92b2
  41c617:	clc    
  41c618:	inc    ebp
  41c619:	mov    ch,0xd5
  41c61b:	push   ebp
  41c61c:	outs   dx,BYTE PTR ds:[esi]
  41c61d:	add    DWORD PTR [esi+ebx*8-0x5d],ebx
  41c621:	mov    ch,0xdc
  41c623:	cld    
  41c624:	pusha  
  41c625:	fild   DWORD PTR [edi+0x3cb77044]
  41c62b:	hlt    
  41c62c:	adc    eax,0x286ec609
  41c631:	scas   al,BYTE PTR es:[edi]
  41c632:	add    al,0xc6
  41c634:	xchg   edx,eax
  41c635:	mov    ch,0x9d
  41c637:	jo     0x41c5f3
  41c639:	push   esi
  41c63a:	push   esi
  41c63b:	mov    ch,0xf2
  41c63d:	mov    es,WORD PTR [ebp+0x4a]
  41c640:	pop    edx
  41c641:	inc    ebx
  41c642:	mov    edx,0x5d47f4ef
  41c647:	push   es
  41c648:	out    dx,al
  41c649:	or     DWORD PTR [ecx+edi*2],esp
  41c64c:	cmc    
  41c64d:	ins    DWORD PTR es:[edi],dx
  41c64e:	xor    esp,DWORD PTR [ebx-0x7b2aefa7]
  41c654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c655:	or     DWORD PTR [ebp+0x24],eax
  41c658:	push   0x51
  41c65a:	push   ss
  41c65b:	mov    ds,ebp
  41c65d:	mov    al,0x77
  41c65f:	mov    cl,0x6b
  41c661:	xchg   edi,eax
  41c662:	jle    0x41c65f
  41c664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c665:	lds    edx,FWORD PTR [edx*2-0x5257c2c6]
  41c66c:	inc    eax
  41c66d:	pop    eax
  41c66e:	mov    ds:0x52ea0cbc,eax
  41c673:	and    edx,DWORD PTR [esi+0x65a6aac4]
  41c679:	fdiv   DWORD PTR [ebx]
  41c67b:	and    eax,DWORD PTR [ecx+0x265a1326]
  41c681:	jg     0x41c60a
  41c683:	addr16 adc ah,cl
  41c686:	cmp    ebx,DWORD PTR [edi-0x3e36683]
  41c68c:	mov    ds:0x6817bd60,eax
  41c691:	jne    0x41c710
  41c693:	push   0xedc29c4b
  41c698:	add    al,0xee
  41c69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c69b:	lea    ebp,ds:[ecx]
  41c69e:	pop    ss
  41c69f:	ret    0xb93a
  41c6a2:	loop   0x41c676
  41c6a4:	outs   dx,BYTE PTR ds:[esi]
  41c6a5:	mov    bl,0x3c
  41c6a7:	leave  
  41c6a8:	gs cmp edi,ecx
  41c6ab:	mov    esp,DWORD PTR [esi]
  41c6ad:	scas   eax,DWORD PTR es:[edi]
  41c6ae:	faddp  st(2),st
  41c6b0:	and    eax,0xd2cccf4
  41c6b5:	jo     0x41c6ec
  41c6b7:	sahf   
  41c6b8:	xchg   BYTE PTR [ebp-0x38c8a414],dh
  41c6be:	addr16 gs fmul st,st(2)
  41c6c2:	lds    edi,FWORD PTR [ebp-0x56]
  41c6c5:	jp     0x41c64e
  41c6c7:	inc    eax
  41c6c8:	inc    ebx
  41c6c9:	and    eax,0xc82d9780
  41c6ce:	test   DWORD PTR [eiz*2-0x4d31086a],eax
  41c6d5:	in     al,0x45
  41c6d7:	push   ss
  41c6d8:	and    eax,0x518c9550
  41c6dd:	mov    ebx,0x681f6349
  41c6e2:	lahf   
  41c6e3:	pop    ds
  41c6e4:	push   ebp
  41c6e5:	aad    0x11
  41c6e7:	inc    ebx
  41c6e8:	cmp    eax,0x1e8ac3a5
  41c6ed:	iret   
  41c6ee:	popa   
  41c6ef:	cwde   
  41c6f0:	out    0xc6,al
  41c6f2:	sbb    al,0x74
  41c6f4:	cmp    esi,DWORD PTR [ebp-0x2310e809]
  41c6fa:	sbb    edi,DWORD PTR [eax+0xd45e62a]
  41c700:	dec    edi
  41c701:	je     0x41c760
  41c703:	jns    0x41c726
  41c705:	in     al,dx
  41c706:	or     eax,DWORD PTR [esi-0x1c]
  41c709:	mov    dl,0x15
  41c70b:	and    edx,DWORD PTR [esi]
  41c70d:	inc    ecx
  41c70e:	adc    DWORD PTR [edx+0x564623eb],esi
  41c714:	add    BYTE PTR [eax+ecx*4],al
  41c717:	stos   DWORD PTR es:[edi],eax
  41c718:	outs   dx,BYTE PTR ds:[esi]
  41c719:	sub    al,0x3c
  41c71b:	xchg   ecx,eax
  41c71c:	aas    
  41c71d:	adc    DWORD PTR [edx],ebx
  41c71f:	and    esi,DWORD PTR [ebx-0x5ab717db]
  41c725:	mov    dl,0x85
  41c727:	and    eax,0xd61ac3ff
  41c72c:	sub    al,0xb5
  41c72e:	dec    ebx
  41c72f:	cs cs popa 
  41c732:	out    0x96,eax
  41c734:	xchg   esp,eax
  41c735:	push   ebp
  41c736:	inc    ebp
  41c737:	pavgb  mm3,QWORD PTR [edi+0x539b8a5d]
  41c73e:	arpl   WORD PTR [ecx+0x5d6888b0],bx
  41c744:	or     DWORD PTR [edx+0x35],eax
  41c747:	mov    ds:0xff6dc396,eax
  41c74c:	and    eax,0xa7cc58ee
  41c751:	pop    ss
  41c752:	inc    ebp
  41c753:	push   esi
  41c754:	ins    DWORD PTR es:[edi],dx
  41c755:	mov    eax,ds:0xc6ca2b83
  41c75a:	and    eax,DWORD PTR cs:[esi]
  41c75d:	adc    al,0x52
  41c75f:	aaa    
  41c760:	es out dx,eax
  41c762:	dec    edi
  41c763:	dec    ebp
  41c764:	mov    al,ds:0xe03292d9
  41c769:	push   ss
  41c76a:	or     eax,DWORD PTR [ecx+0x5e]
  41c76d:	mov    eax,0xa215b5f4
  41c772:	nop
  41c773:	out    dx,eax
  41c774:	jle    0x41c7c7
  41c776:	cmp    al,BYTE PTR [ecx]
  41c778:	sub    BYTE PTR [edx],0xa1
  41c77b:	outs   dx,BYTE PTR ds:[esi]
  41c77c:	das    
  41c77d:	jae    0x41c75a
  41c77f:	and    bl,BYTE PTR [esi+ecx*8-0x7032986b]
  41c786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c787:	and    ah,ah
  41c789:	and    ah,bl
  41c78b:	lods   eax,DWORD PTR ds:[esi]
  41c78c:	test   edi,eax
  41c78e:	shl    DWORD PTR [esi+eiz*1-0x13a4c1bc],0x4
  41c796:	or     BYTE PTR [ecx-0x79e9cacf],ch
  41c79c:	arpl   WORD PTR [eax-0x37],dx
  41c79f:	popf   
  41c7a0:	push   ecx
  41c7a1:	mov    al,0xc5
  41c7a3:	push   0xac5e5433
  41c7a8:	(bad)  
  41c7a9:	mov    ecx,0xb59e175d
  41c7ae:	pop    es
  41c7af:	lds    esi,FWORD PTR [ebp+0x50]
  41c7b2:	or     ah,BYTE PTR [esi+0x5e]
  41c7b5:	(bad)  
  41c7b6:	lds    ebp,FWORD PTR [ecx-0x531da4db]
  41c7bc:	sbb    edi,DWORD PTR [ecx]
  41c7be:	pop    edx
  41c7bf:	cli    
  41c7c0:	dec    esi
  41c7c1:	loop   0x41c7d5
  41c7c3:	mov    ds:0x3efd8c36,eax
  41c7c8:	and    eax,0x3f9d1c82
  41c7cd:	jl     0x41c762
  41c7cf:	pushf  
  41c7d0:	xchg   ecx,eax
  41c7d1:	adc    eax,0xb58501f0
  41c7d6:	imul   esi,DWORD PTR [ebx+0x51],0x3f6a76f9
  41c7dd:	mov    esp,0xf5e51c45
  41c7e2:	sub    edi,DWORD PTR [edi-0x7d]
  41c7e5:	js     0x41c7c1
  41c7e7:	push   0xa
  41c7e9:	cs iret 
  41c7eb:	addr16 repnz pushf 
  41c7ee:	push   esp
  41c7ef:	adc    esp,ecx
  41c7f1:	retf   0x6c75
  41c7f4:	(bad)  
  41c7f6:	lds    edx,FWORD PTR [esi]
  41c7f8:	mov    dl,0xf0
  41c7fa:	std    
  41c7fb:	push   ebx
  41c7fc:	pop    ecx
  41c7fd:	sbb    ebp,DWORD PTR [ecx]
  41c7ff:	sbb    DWORD PTR [eax-0x69ebb902],0xdb42fed9
  41c809:	xchg   esp,eax
  41c80a:	dec    edi
  41c80b:	into   
  41c80c:	lods   eax,DWORD PTR ds:[esi]
  41c80d:	loopne 0x41c808
  41c80f:	sub    ch,BYTE PTR [ecx]
  41c811:	cmp    DWORD PTR [ecx+0x13],ecx
  41c814:	pop    ss
  41c815:	lods   eax,DWORD PTR ds:[esi]
  41c816:	adc    esp,DWORD PTR ds:0x5c02e346
  41c81c:	loopne 0x41c811
  41c81e:	sbb    bl,BYTE PTR [ebx-0x5cea12e3]
  41c824:	into   
  41c825:	push   ecx
  41c826:	mov    edi,0x275c2625
  41c82b:	imul   ecx,DWORD PTR [eax],0xffffffc4
  41c82e:	pop    es
  41c82f:	retf   
  41c830:	jns    0x41c7e7
  41c832:	gs in  eax,dx
  41c834:	es or  bl,dl
  41c837:	fstp   QWORD PTR [eax+0x65]
  41c83a:	inc    esp
  41c83b:	cmp    DWORD PTR [ebx-0x7919df31],0x362e16f5
  41c845:	mov    ch,0x26
  41c847:	(bad)  
  41c848:	mov    ch,0x26
  41c84a:	adc    eax,0xc4715149
  41c84f:	mov    ebx,0x9b9ab6ab
  41c854:	jo     0x41c8bb
  41c856:	ret    0xbcae
  41c859:	xor    cl,BYTE PTR [edi+0x3a3bbe5a]
  41c85f:	fs inc ebp
  41c861:	adc    DWORD PTR [esi+0x23],ecx
  41c864:	cmp    edx,DWORD PTR [ebx+0x44]
  41c867:	pop    ss
  41c868:	and    ebx,DWORD PTR [edi-0x66]
  41c86b:	imul   edx,DWORD PTR [ecx+0x59],0x35420bab
  41c872:	lock (bad) 
  41c874:	loopne 0x41c883
  41c876:	ds leave 
  41c878:	add    ebp,ebx
  41c87a:	push   ebp
  41c87b:	cmc    
  41c87c:	pop    ds
  41c87d:	test   al,0xf4
  41c87f:	xchg   ebp,eax
  41c880:	sub    esi,DWORD PTR [ebp-0x47468ee4]
  41c886:	jle    0x41c8d6
  41c888:	sbb    al,0xad
  41c88a:	ss pushf 
  41c88c:	scas   al,BYTE PTR es:[edi]
  41c88d:	push   cs
  41c88e:	inc    esi
  41c88f:	aad    0x5f
  41c891:	adc    eax,0x9b25f361
  41c896:	dec    edx
  41c897:	repz iret 
  41c899:	xchg   BYTE PTR [eax+0x54d6282f],bh
  41c89f:	inc    esi
  41c8a0:	dec    esp
  41c8a1:	fldcw  WORD PTR [esi+0x4f9a2394]
  41c8a7:	jecxz  0x41c8e1
  41c8a9:	fwait
  41c8aa:	inc    ebp
  41c8ab:	pop    edx
  41c8ac:	ret    0x3687
  41c8af:	clc    
  41c8b0:	retf   0xd3f2
  41c8b3:	idiv   al
  41c8b5:	jnp    0x41c8f3
  41c8b7:	jno    0x41c937
  41c8b9:	mov    WORD PTR [ebx+eiz*4-0x1b],ss
  41c8bd:	sub    BYTE PTR [eax+0x72c1a69d],ah
  41c8c3:	je     0x41c905
  41c8c5:	fidiv  DWORD PTR ss:[bx+si-0x37cc]
  41c8cb:	dec    eax
  41c8cc:	push   edi
  41c8cd:	(bad)  
  41c8ce:	imul   eax,DWORD PTR [edx-0x11c4ae62],0xf3dbc508
  41c8d8:	cmp    eax,0x6660f5c7
  41c8dd:	in     eax,0xb
  41c8df:	mov    WORD PTR [ecx+0x35],gs
  41c8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8e3:	aas    
  41c8e4:	rcr    DWORD PTR [esi],1
  41c8e6:	int    0x5f
  41c8e8:	repz or DWORD PTR [esi+0x75],eax
  41c8ec:	sbb    BYTE PTR [edx-0x41233168],0x23
  41c8f3:	push   0xffffffe8
  41c8f5:	cld    
  41c8f6:	cmp    esp,DWORD PTR [ebx]
  41c8f8:	js     0x41c913
  41c8fa:	sbb    eax,0xb525272d
  41c8ff:	in     eax,dx
  41c900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c901:	dec    edi
  41c902:	xor    eax,0xe3fa8b7d
  41c907:	or     al,BYTE PTR [ebx-0x4b]
  41c90a:	into   
  41c90b:	dec    eax
  41c90c:	adc    DWORD PTR [ebp+0x24],esi
  41c90f:	fistp  WORD PTR [ebx-0x42]
  41c912:	(bad)
  41c915:	mov    ds:0xa6ea796e,al
  41c91a:	cmp    BYTE PTR cs:[ebx+0x78],dl
  41c91e:	dec    edi
  41c91f:	jmp    0x41c94a
  41c921:	dec    esp
  41c923:	mov    ds:0x612da2b6,al
  41c928:	ret    
  41c929:	xor    eax,0x13d6bc74
  41c92e:	xchg   BYTE PTR [ebx],dh
  41c930:	sbb    ah,BYTE PTR es:[eax]
  41c933:	lea    ecx,[ecx+0x40]
  41c936:	xchg   DWORD PTR [esi+0x10],eax
  41c939:	cld    
  41c93a:	dec    ecx
  41c93b:	call   0xa38e0138
  41c940:	cmc    
  41c941:	jmp    0x41c9b6
  41c943:	mov    edi,0x88d09226
  41c948:	cmp    BYTE PTR [ebx-0x64],cl
  41c94b:	xchg   edi,eax
  41c94c:	lods   eax,DWORD PTR ds:[esi]
  41c94d:	stc    
  41c94e:	xor    edi,DWORD PTR [ecx+ecx*4+0x5b]
  41c952:	add    DWORD PTR [ebx+0x6ca53649],esp
  41c958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c959:	stos   BYTE PTR es:[edi],al
  41c95a:	sbb    DWORD PTR [esi],edi
  41c95c:	and    BYTE PTR [ebx],cl
  41c95e:	(bad)  
  41c960:	pushf  
  41c961:	mov    ch,0xa
  41c963:	repnz addr16 dec ebp
  41c966:	imul   ebp,ebx,0x71c5f08e
  41c96c:	push   ecx
  41c96d:	mov    DWORD PTR [edx-0x4fbb6680],edi
  41c973:	adc    esp,DWORD PTR [esi+edx*8]
  41c976:	sbb    al,0xa3
  41c978:	adc    al,0x18
  41c97a:	mov    edi,0x5b13252f
  41c97f:	pop    ds
  41c980:	jne    0x41c9ca
  41c982:	or     eax,0xceb8b6e2
  41c987:	sahf   
  41c988:	js     0x41c9a4
  41c98a:	mov    ch,0x9f
  41c98c:	pusha  
  41c98d:	cmc    
  41c98e:	lods   eax,DWORD PTR ds:[esi]
  41c98f:	push   edi
  41c990:	pushf  
  41c991:	adc    dh,al
  41c993:	or     al,0x57
  41c995:	in     eax,dx
  41c996:	popa   
  41c997:	adc    esp,DWORD PTR [ebx+0x3d]
  41c99a:	push   ds
  41c99b:	les    ebp,FWORD PTR [edx]
  41c99d:	retf   
  41c99e:	in     al,dx
  41c99f:	mov    ds:0xd6c9ae5d,al
  41c9a4:	and    bl,BYTE PTR [esi+0x32f21787]
  41c9aa:	jbe    0x41c94e
  41c9ac:	xor    DWORD PTR [edx+0x1b6279c1],edx
  41c9b2:	dec    ebp
  41c9b3:	mov    ds:0xe83fd9a0,eax
  41c9b8:	jmp    0xc7cb8f77
  41c9bd:	sbb    cl,dh
  41c9bf:	pop    ss
  41c9c0:	inc    ebp
  41c9c1:	ffree  st(1)
  41c9c3:	mov    esi,0x6542ae0f
  41c9c8:	xchg   esp,eax
  41c9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ca:	add    eax,0xc9819266
  41c9cf:	(bad)  
  41c9d0:	xor    eax,0x262546bb
  41c9d5:	mov    bl,al
  41c9d7:	inc    ecx
  41c9d8:	add    eax,0x1b9599bb
  41c9dd:	mov    bl,0xa5
  41c9df:	arpl   WORD PTR [eax-0x7bc96943],ax
  41c9e5:	mov    ecx,DWORD PTR [edx+0x447171e2]
  41c9eb:	daa    
  41c9ec:	mov    bl,0xc5
  41c9ee:	or     cl,ch
  41c9f0:	jns    0x41ca4f
  41c9f2:	inc    esp
  41c9f3:	mov    dh,0x65
  41c9f5:	jmp    0xce3853f4
  41c9fa:	add    esp,DWORD PTR [ebx]
  41c9fc:	leave  
  41c9fd:	mov    dl,0x36
  41c9ff:	fldcw  WORD PTR [ecx-0x2c]
  41ca02:	les    edi,FWORD PTR [edx-0x2a]
  41ca05:	pop    ebp
  41ca06:	js     0x41ca52
  41ca08:	inc    eax
  41ca09:	add    eax,0xb5430ce6
  41ca0e:	sub    esi,esi
  41ca10:	mov    dl,0x58
  41ca12:	jmp    0x41c9fe
  41ca14:	sub    ebx,esi
  41ca16:	das    
  41ca17:	clc    
  41ca18:	shl    DWORD PTR [edx],cl
  41ca1a:	inc    esi
  41ca1b:	mov    eax,0x9bc0210a
  41ca20:	pop    edi
  41ca21:	mov    ch,0xec
  41ca23:	mov    ebx,0xae68459f
  41ca28:	scas   al,BYTE PTR es:[edi]
  41ca29:	xor    al,0xb8
  41ca2b:	mov    bh,0x34
  41ca2d:	cmc    
  41ca2e:	fdivrp st(5),st
  41ca30:	add    eax,0x68412824
  41ca35:	rcl    DWORD PTR [ebx],1
  41ca37:	or     eax,DWORD PTR [esi-0x4b]
  41ca3a:	ror    esp,1
  41ca3c:	push   ecx
  41ca3d:	inc    ebx
  41ca3e:	nop
  41ca3f:	aad    0x73
  41ca41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca42:	ss xchg ecx,eax
  41ca44:	jge    0x41ca1c
  41ca46:	test   edx,edx
  41ca48:	enter  0x5c36,0xaf
  41ca4c:	pop    edx
  41ca4d:	xor    eax,0x744ed147
  41ca52:	add    DWORD PTR [eax+eiz*2],0x8a80264d
  41ca59:	cmc    
  41ca5a:	and    esp,DWORD PTR [edi-0x24b6e1c2]
  41ca60:	inc    edi
  41ca61:	xor    eax,0x1cd25832
  41ca66:	iret   
  41ca67:	jmp    0x4c07fe0d
  41ca6c:	ss push esp
  41ca6e:	jg     0x41ca93
  41ca70:	mov    esp,0xf6ba4e74
  41ca75:	arpl   WORD PTR [ebp+0x23],cx
  41ca78:	push   ebx
  41ca79:	push   ecx
  41ca7a:	cmp    BYTE PTR [ecx-0x5b],ah
  41ca7d:	pushf  
  41ca7e:	adc    DWORD PTR [eax],ebp
  41ca80:	iret   
  41ca81:	sbb    al,0xb9
  41ca83:	mov    esi,DWORD PTR fs:0x109544b1
  41ca8a:	xchg   esi,eax
  41ca8b:	(bad)  
  41ca8c:	loope  0x41ca52
  41ca8e:	lds    ebx,FWORD PTR [ecx]
  41ca90:	push   cs
  41ca91:	add    esp,DWORD PTR [esp+ebx*2]
  41ca94:	jo     0x41cadf
  41ca96:	mov    edi,0x78bbf810
  41ca9b:	mov    al,ds:0x3b85752b
  41caa0:	pushf  
  41caa1:	rol    ebp,1
  41caa3:	xor    edi,DWORD PTR [ecx-0x2a]
  41caa6:	sbb    dl,al
  41caa8:	in     al,dx
  41caa9:	mov    ecx,DWORD PTR [edx]
  41caab:	repnz inc ecx
  41caad:	iret   
  41caae:	and    DWORD PTR [ebx],esp
  41cab0:	imul   ecx,DWORD PTR [ebx+0x79a62ccd],0xd
  41cab7:	(bad)  
  41cab8:	retf   
  41cab9:	sub    eax,0xb5387717
  41cabe:	repz sti 
  41cac0:	add    DWORD PTR [ebp-0x70],ebx
  41cac3:	xor    al,0x2d
  41cac5:	sbb    dh,al
  41cac7:	cli    
  41cac8:	push   esp
  41cac9:	stos   BYTE PTR es:[edi],al
  41caca:	mov    dl,0xfb
  41cacc:	outs   dx,DWORD PTR ds:[esi]
  41cacd:	imul   DWORD PTR [edi+0x2b]
  41cad0:	pop    ss
  41cad1:	pusha  
  41cad2:	cmp    ah,BYTE PTR [ebx+0x7f03d9bd]
  41cad8:	es mov eax,0x805a9bc3
  41cade:	push   esi
  41cadf:	push   esp
  41cae0:	pushf  
  41cae1:	mov    ch,0x59
  41cae3:	scas   eax,DWORD PTR es:[edi]
  41cae4:	sub    ebp,esp
  41cae6:	(bad)  
  41cae7:	call   0x9f07d71d
  41caec:	(bad)  
  41caed:	mov    eax,ds:0x72ed9a5b
  41caf2:	pop    ss
  41caf3:	stos   DWORD PTR es:[edi],eax
  41caf4:	das    
  41caf5:	(bad)  
  41caf7:	stos   BYTE PTR es:[edi],al
  41caf8:	jb     0x41cb27
  41cafa:	or     DWORD PTR [edi-0xf],esi
  41cafd:	(bad)  
  41cafe:	in     al,0x22
  41cb00:	sahf   
  41cb01:	jb     0x41cb36
  41cb03:	shl    BYTE PTR [esi],0x38
  41cb06:	inc    ebx
  41cb07:	outs   dx,BYTE PTR ds:[esi]
  41cb08:	cmp    al,BYTE PTR [edi-0xa]
  41cb0b:	sbb    eax,0x2835b4f3
  41cb10:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41cb12:	es enter 0x4768,0x47
  41cb17:	(bad)  
  41cb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb19:	sbb    eax,0xe45e8250
  41cb1e:	pop    ebp
  41cb1f:	inc    edi
  41cb20:	mov    ecx,gs
  41cb22:	in     al,dx
  41cb23:	in     eax,0x87
  41cb25:	push   esp
  41cb26:	or     ah,BYTE PTR [ebx]
  41cb28:	push   DWORD PTR [ebp+0x1eab7f61]
  41cb2e:	mov    BYTE PTR [ebp+eax*2-0x1d],0x68
  41cb33:	xor    BYTE PTR [eax],ch
  41cb35:	sti    
  41cb36:	scas   eax,DWORD PTR es:[edi]
  41cb37:	sub    al,0x87
  41cb39:	mov    ch,0xf8
  41cb3b:	daa    
  41cb3c:	mov    al,BYTE PTR [esi]
  41cb3e:	sbb    BYTE PTR [ebx],bl
  41cb40:	push   esi
  41cb41:	jbe    0x41cb05
  41cb43:	int3   
  41cb44:	repz push esp
  41cb46:	sbb    ah,BYTE PTR ds:0x56b0b016
  41cb4c:	ins    BYTE PTR es:[edi],dx
  41cb4d:	xor    eax,0x51e16fd0
  41cb52:	xor    DWORD PTR [ebx+edi*8+0x891b75a],eax
  41cb59:	sbb    al,BYTE PTR [esi]
  41cb5b:	fs into 
  41cb5d:	je     0x41cb37
  41cb5f:	push   ebp
  41cb60:	mov    eax,0x3226b3
  41cb65:	pop    es
  41cb66:	ds and edx,ebx
  41cb69:	inc    ecx
  41cb6a:	cld    
  41cb6b:	in     al,dx
  41cb6c:	lock xchg edi,eax
  41cb6e:	add    al,0x2b
  41cb70:	push   ss
  41cb71:	out    dx,al
  41cb72:	add    cl,bh
  41cb74:	add    al,BYTE PTR [edx]
  41cb76:	and    ebp,DWORD PTR [ebx+0x1e010c64]
  41cb7c:	rcr    ebx,1
  41cb7e:	inc    edx
  41cb7f:	inc    ebx
  41cb80:	push   edx
  41cb81:	ds cmc 
  41cb83:	and    ah,BYTE PTR [edi-0x7e]
  41cb86:	sbb    ebx,DWORD PTR ds:0x328b5e25
  41cb8c:	dec    eax
  41cb8d:	mov    cl,0xda
  41cb8f:	(bad)  
  41cb90:	sbb    esi,DWORD PTR [edx]
  41cb92:	mov    edi,DWORD PTR [edx+0x51]
  41cb95:	les    ebx,FWORD PTR [edi-0x1a]
  41cb98:	mov    al,0xbf
  41cb9a:	(bad)
  41cb9d:	sub    esi,esp
  41cb9f:	xor    DWORD PTR [esi+0x5b46480b],esp
  41cba5:	fild   QWORD PTR [ebx+0x2f332e49]
  41cbab:	pop    ebp
  41cbac:	mov    al,ds:0x912cb722
  41cbb1:	jo     0x41cc29
  41cbb3:	loope  0x41cc14
  41cbb5:	pop    esi
  41cbb6:	add    bl,dh
  41cbb8:	es dec eax
  41cbba:	out    dx,eax
  41cbbb:	push   ecx
  41cbbc:	pop    ebx
  41cbbd:	xlat   BYTE PTR ds:[ebx]
  41cbbe:	sub    eax,0x71b544f0
  41cbc3:	pop    ss
  41cbc4:	dec    eax
  41cbc5:	sar    BYTE PTR [eax+0x3b3386ea],cl
  41cbcb:	jne    0x41cb84
  41cbcd:	(bad)  
  41cbce:	vpmullw ymm1,ymm2,YMMWORD PTR [ecx+0x3563bd32]
  41cbd6:	or     al,0x9d
  41cbd8:	jmp    0x41cc44
  41cbda:	push   esi
  41cbdb:	sbb    ch,0x8e
  41cbde:	rol    DWORD PTR [edi-0x7],0x9d
  41cbe2:	xor    bh,dh
  41cbe4:	sub    ebp,DWORD PTR [edi+ecx*1-0x33da59dd]
  41cbeb:	fisubr WORD PTR [eax+0x15]
  41cbee:	popa   
  41cbef:	loope  0x41cbc0
  41cbf1:	jmp    esi
  41cbf3:	leave  
  41cbf4:	out    0xc5,eax
  41cbf6:	inc    ebp
  41cbf7:	inc    ebp
  41cbf8:	push   ecx
  41cbf9:	arpl   WORD PTR [esi-0x436672d1],bp
  41cbff:	jbe    0x41cc7a
  41cc01:	mov    ch,0xec
  41cc03:	push   esi
  41cc04:	push   ss
  41cc05:	sbb    bl,BYTE PTR [ebp+0x31]
  41cc08:	cmp    DWORD PTR [eax+0x1ec8ab7],esi
  41cc0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc0f:	mov    edi,0x5bcb2ed2
  41cc14:	xchg   esi,eax
  41cc15:	xor    eax,0xc5ca70bb
  41cc1a:	cwde   
  41cc1b:	xchg   esi,eax
  41cc1c:	xchg   DWORD PTR [ecx],edx
  41cc1e:	stos   BYTE PTR es:[edi],al
  41cc1f:	mov    ds:0x7e1bb56d,eax
  41cc24:	arpl   WORD PTR [eax-0x4aaa3fdd],si
  41cc2a:	imul   esi,ebx,0xffffffc7
  41cc2d:	push   0x1df1553b
  41cc32:	inc    esi
  41cc33:	ret    0xfa3d
  41cc36:	push   esi
  41cc37:	je     0x41cc77
  41cc39:	jmp    0x55965e09
  41cc3e:	nop
  41cc3f:	mov    eax,ds:0xe859f81a
  41cc44:	jp     0x41cc50
  41cc46:	inc    esi
  41cc47:	inc    eax
  41cc48:	ins    DWORD PTR es:[edi],dx
  41cc49:	or     eax,0x8198bb72
  41cc4e:	xor    al,ch
  41cc50:	sbb    dh,0xdb
  41cc53:	and    cl,BYTE PTR [edi+0x260eca0c]
  41cc59:	xchg   esi,eax
  41cc5a:	pop    esi
  41cc5b:	test   DWORD PTR [ecx+edi*8],esp
  41cc5e:	cli    
  41cc5f:	lock fidiv DWORD PTR [ecx+0x37471d95]
  41cc66:	repnz cdq 
  41cc68:	mov    al,ds:0x269b0161
  41cc6d:	ins    BYTE PTR es:[di],dx
  41cc6f:	nop
  41cc70:	ret    
  41cc71:	mov    DWORD PTR [edi+ebx*2],eax
  41cc74:	jl     0x41cc04
  41cc76:	add    dl,al
  41cc78:	push   esi
  41cc79:	xor    eax,0xdb20af22
  41cc7e:	sar    esp,0x69
  41cc81:	xor    eax,0xd58891af
  41cc86:	sbb    DWORD PTR [esi],eax
  41cc88:	scas   eax,DWORD PTR es:[edi]
  41cc89:	sbb    DWORD PTR [esi+0x73],eax
  41cc8c:	pop    esp
  41cc8d:	adc    al,0x7b
  41cc8f:	mov    bl,BYTE PTR [ebx+0x73cfefc2]
  41cc95:	popw   ss
  41cc97:	and    esp,DWORD PTR [eax+0x6bc65039]
  41cc9d:	loope  0x41cc64
  41cc9f:	in     al,dx
  41cca0:	lods   eax,DWORD PTR ds:[esi]
  41cca1:	pop    ss
  41cca2:	(bad)  
  41cca3:	aad    0x1c
  41cca5:	iret   
  41cca6:	pop    esi
  41cca7:	stc    
  41cca8:	push   0x952341c1
  41ccad:	lds    ecx,FWORD PTR [ebx+0xb292446]
  41ccb3:	clc    
  41ccb4:	inc    eax
  41ccb5:	int3   
  41ccb6:	lods   al,BYTE PTR ds:[esi]
  41ccb7:	inc    ebp
  41ccb8:	xchg   DWORD PTR [eax+0x4d],ecx
  41ccbb:	aaa    
  41ccbc:	mov    bl,0xda
  41ccbe:	xchg   edi,eax
  41ccbf:	mov    eax,ds:0xb6fa1efb
  41ccc4:	fisubr DWORD PTR ds:0x7c5675c6
  41ccca:	inc    eax
  41cccb:	and    eax,0x9aa4c54f
  41ccd0:	into   
  41ccd1:	int    0x0
  41ccd3:	and    ebx,DWORD PTR [edx]
  41ccd5:	gs je  0x41cc9b
  41ccd8:	push   ds
  41ccd9:	cdq    
  41ccda:	dec    ebp
  41ccdb:	mov    dh,0x9e
  41ccdd:	outs   dx,BYTE PTR ds:[esi]
  41ccde:	ffreep st(5)
  41cce0:	mov    ds:0x222eabb5,al
  41cce5:	sar    DWORD PTR [ebx-0x28],0xff
  41cce9:	popa   
  41ccea:	sbb    BYTE PTR [ebx],ah
  41ccec:	push   0x2c
  41ccee:	or     al,0xfc
  41ccf0:	xchg   edi,eax
  41ccf1:	mov    BYTE PTR [edx],ah
  41ccf3:	and    DWORD PTR [esp+ebp*8],0x75
  41ccf7:	ja     0x6755855a
  41ccfd:	mov    ch,0xc6
  41ccff:	push   ds
  41cd00:	fmul   QWORD PTR [edi-0x16]
  41cd03:	dec    esp
  41cd04:	push   ebx
  41cd05:	add    DWORD PTR [ebp+0x1],0xcc0f201
  41cd0c:	sub    BYTE PTR [ebx+eiz*2-0x6134f1d2],dh
  41cd13:	pop    edx
  41cd14:	fnstenv [ecx-0x49b11677]
  41cd1a:	dec    ecx
  41cd1b:	fsubrp st(3),st
  41cd1d:	xchg   edi,eax
  41cd1e:	add    ebx,esp
  41cd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd21:	push   eax
  41cd22:	mul    DWORD PTR [eax+0x3c]
  41cd25:	in     eax,0x96
  41cd27:	xchg   ecx,eax
  41cd28:	loop   0x41cd5a
  41cd2a:	mov    dh,0xdb
  41cd2c:	ds std 
  41cd2e:	test   ebx,edi
  41cd30:	sub    dl,BYTE PTR ds:0x24a5520a
  41cd36:	pop    ebx
  41cd37:	sub    dl,BYTE PTR [edi+0xb]
  41cd3a:	arpl   bp,ax
  41cd3c:	sbb    DWORD PTR [ebp+0x48],0xffffff9f
  41cd40:	pop    ds
  41cd41:	mov    al,0x5f
  41cd43:	pop    ds
  41cd44:	mov    eax,0xd21a2d14
  41cd49:	dec    esi
  41cd4a:	es icebp 
  41cd4c:	hlt    
  41cd4d:	cmp    BYTE PTR [ebp-0x6d],al
  41cd50:	dec    edi
  41cd51:	pminub mm2,QWORD PTR [ecx+0x6755c4c5]
  41cd58:	js     0x41cd8f
  41cd5a:	push   eax
  41cd5b:	mov    ds:0xaa6a517e,al
  41cd60:	jg     0x41cd57
  41cd62:	imul   esi,DWORD PTR [esi],0x50ff5226
  41cd68:	push   ecx
  41cd69:	jg     0x41cd6b
  41cd6b:	faddp  st(0),st
  41cd6d:	mov    ah,0x9c
  41cd6f:	jg     0x41cd8c
  41cd71:	mov    edx,0x1e353c95
  41cd76:	jbe    0x41cd51
  41cd78:	jne    0x41cdaf
  41cd7a:	leave  
  41cd7b:	push   0x44
  41cd7d:	pop    esp
  41cd7e:	dec    esp
  41cd7f:	sti    
  41cd80:	or     al,0x9d
  41cd82:	ret    0x99c
  41cd85:	push   eax
  41cd86:	add    DWORD PTR ds:0x8ce689ce,0xffffffd4
  41cd8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8e:	lahf   
  41cd8f:	bound  ebx,QWORD PTR [ebp+esi*2-0x593a1a8f]
  41cd96:	das    
  41cd97:	mov    ah,0x5e
  41cd99:	mov    ecx,0xdfa19e45
  41cd9e:	mov    cl,0xbf
  41cda0:	js     0x41cdc0
  41cda2:	stc    
  41cda3:	les    esi,FWORD PTR [esp+eiz*8-0x718b5d1f]
  41cdaa:	fistp  WORD PTR [esi+0x57e17fa6]
  41cdb0:	adc    al,0x35
  41cdb2:	stos   BYTE PTR es:[edi],al
  41cdb3:	mov    edi,ebp
  41cdb5:	mov    ah,0x39
  41cdb7:	push   es
  41cdb8:	loopne 0x41cd83
  41cdba:	sbb    BYTE PTR ds:0xb2ecb9ac,dh
  41cdc0:	mul    al
  41cdc2:	outs   dx,DWORD PTR ds:[esi]
  41cdc3:	push   edi
  41cdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc5:	add    bh,ah
  41cdc7:	and    DWORD PTR [edx],0x684096af
  41cdcd:	mov    ch,0x2b
  41cdcf:	in     al,0x80
  41cdd1:	stos   DWORD PTR es:[edi],eax
  41cdd2:	mov    esp,0x45fc2213
  41cdd7:	daa    
  41cdd8:	mov    al,ds:0xa9c73a75
  41cddd:	xchg   edx,eax
  41cdde:	mov    ecx,0x6a662ceb
  41cde3:	lahf   
  41cde4:	jb     0x41cdb3
  41cde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde7:	mov    ecx,DWORD PTR [esi+0x32728ce0]
  41cded:	out    dx,al
  41cdee:	lds    ebx,FWORD PTR [ebx+ebx*1+0x64]
  41cdf2:	xor    dh,BYTE PTR [ecx]
  41cdf4:	cmp    eax,0xc4b4653f
  41cdf9:	mov    dl,0x2f
  41cdfb:	mov    ds:0x39cc9823,eax
  41ce00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce01:	jge    0x41ce1d
  41ce03:	inc    eax
  41ce04:	push   0x59
  41ce06:	pop    ebp
  41ce07:	adc    esp,DWORD PTR [esi-0x745941cf]
  41ce0d:	(bad)
  41ce10:	lahf   
  41ce11:	sub    DWORD PTR [esi-0x67],esi
  41ce14:	popa   
  41ce15:	and    BYTE PTR [esi-0x2f],al
  41ce18:	stos   DWORD PTR es:[edi],eax
  41ce19:	mov    BYTE PTR [edx+0xdce40bb],dl
  41ce1f:	push   edx
  41ce20:	jne    0x41ce33
  41ce22:	fs mov al,0x60
  41ce25:	mov    ch,0xc7
  41ce27:	lahf   
  41ce28:	fisub  WORD PTR [edx-0x17576ed9]
  41ce2e:	push   esp
  41ce2f:	mul    BYTE PTR [esi]
  41ce31:	mov    WORD PTR [ecx],?
  41ce33:	jp     0x41ce08
  41ce35:	adc    ebx,ebp
  41ce37:	inc    ebx
  41ce38:	dec    ebp
  41ce39:	mov    dh,0xd0
  41ce3b:	cmp    BYTE PTR [eax],dl
  41ce3d:	mov    eax,ds:0x5c0d22df
  41ce42:	test   eax,0x70f4a598
  41ce47:	shl    BYTE PTR [edx+0x34fc900a],0x51
  41ce4e:	push   0xc833a9ae
  41ce53:	adc    BYTE PTR [esi-0x56],bl
  41ce56:	or     dh,bl
  41ce58:	cs clc 
  41ce5a:	and    eax,0x44f3265f
  41ce5f:	inc    ebp
  41ce60:	xchg   esp,eax
  41ce61:	popf   
  41ce62:	mov    al,0xd7
  41ce64:	xor    ch,BYTE PTR [edx+0x3537a459]
  41ce6a:	mov    dh,0x3b
  41ce6c:	or     eax,0x268b6af5
  41ce71:	dec    ebp
  41ce72:	je     0x41cee2
  41ce74:	cli    
  41ce75:	call   0xaf8f:0x355a7551
  41ce7c:	in     eax,0x26
  41ce7e:	push   esi
  41ce7f:	ins    DWORD PTR es:[edi],dx
  41ce80:	imul   ebx,esi,0x128b4bc5
  41ce86:	dec    edi
  41ce87:	inc    edi
  41ce88:	mov    edx,0xc0525178
  41ce8d:	outs   dx,DWORD PTR ds:[esi]
  41ce8e:	push   cs
  41ce8f:	and    eax,DWORD PTR [ecx]
  41ce91:	cld    
  41ce92:	bound  esp,QWORD PTR [edx+0x26]
  41ce95:	jmp    0xb0b14357
  41ce9a:	cs jmp 0x41ce5a
  41ce9d:	xor    edi,ebp
  41ce9f:	pop    edx
  41cea0:	xchg   ecx,eax
  41cea1:	ja     0x41cf1e
  41cea3:	push   es
  41cea4:	pop    edx
  41cea5:	in     al,0xf0
  41cea7:	dec    ecx
  41cea8:	cli    
  41cea9:	xchg   edi,eax
  41ceaa:	int3   
  41ceab:	ja     0x41ce54
  41cead:	cmp    BYTE PTR es:[edi],al
  41ceb0:	(bad)  
  41ceb1:	xor    al,0xd
  41ceb3:	stc    
  41ceb4:	push   ebx
  41ceb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb6:	sbb    DWORD PTR [ebp+0x65f872ae],esp
  41cebc:	xor    al,0x91
  41cebe:	dec    ebx
  41cebf:	adc    al,0x28
  41cec1:	xor    eax,0x56efd7bb
  41cec6:	das    
  41cec7:	pop    ecx
  41cec8:	es ror esp,cl
  41cecb:	fs test eax,0x66e33ebd
  41ced1:	mov    al,0xdd
  41ced3:	pop    ss
  41ced4:	sbb    al,0xc1
  41ced6:	push   eax
  41ced7:	sbb    edx,ebp
  41ced9:	clc    
  41ceda:	xlat   BYTE PTR ds:[ebx]
  41cedb:	and    edx,eax
  41cedd:	leave  
  41cede:	dec    ecx
  41cedf:	popa   
  41cee0:	es jmp 0x41cf0e
  41cee3:	inc    esi
  41cee4:	xlat   BYTE PTR ds:[ebx]
  41cee5:	mov    DWORD PTR [edx],edx
  41cee7:	and    al,BYTE PTR [ebp+esi*4+0x777fe76]
  41ceee:	aad    0xa4
  41cef0:	fnsave [edi-0x3c5a422b]
  41cef6:	in     eax,0x2d
  41cef8:	and    eax,0x73b8f8b1
  41cefd:	xor    eax,0x888e66f
  41cf02:	sub    BYTE PTR [esi],dl
  41cf04:	adc    bl,BYTE PTR [ecx]
  41cf06:	push   0x67
  41cf08:	es adc eax,0x1334702
  41cf0e:	inc    ebx
  41cf0f:	loop   0x41cf87
  41cf11:	xor    eax,0xbd85941
  41cf16:	or     ah,al
  41cf18:	and    DWORD PTR [ecx],0x46
  41cf1b:	xchg   ebp,eax
  41cf1c:	int    0x1
  41cf1e:	dec    esi
  41cf1f:	adc    al,0x6d
  41cf21:	or     BYTE PTR [ecx-0xd5379de],al
  41cf27:	mov    ds:0x239f5799,al
  41cf2c:	es mov esi,0xf9a772f1
  41cf32:	xchg   esi,eax
  41cf33:	fwait
  41cf34:	add    al,0x99
  41cf36:	test   al,0xd9
  41cf38:	sahf   
  41cf39:	cmp    BYTE PTR [edx+edx*8],dl
  41cf3c:	xchg   al,bl
  41cf3e:	repz mov gs,WORD PTR [esi-0x2]
  41cf42:	(bad)
  41cf45:	xor    DWORD PTR [ebp-0x3b1c2ea0],esi
  41cf4b:	fisttp WORD PTR [edx]
  41cf4d:	sbb    ecx,esp
  41cf4f:	pop    edx
  41cf50:	(bad)  
  41cf51:	out    dx,al
  41cf52:	add    eax,0x9b4d3db
  41cf57:	gs popf 
  41cf59:	clc    
  41cf5a:	daa    
  41cf5b:	outs   dx,BYTE PTR ds:[esi]
  41cf5c:	xor    dh,BYTE PTR ds:0x4a269883
  41cf62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf63:	icebp  
  41cf64:	jae    0x41cf9b
  41cf66:	or     eax,0xea434b75
  41cf6b:	jl     0x41cef5
  41cf6d:	(bad)  
  41cf6e:	lds    esp,FWORD PTR [eax-0xd816edc]
  41cf74:	pop    edx
  41cf75:	lods   eax,DWORD PTR ds:[esi]
  41cf76:	call   0xf22:0xfd03f1f0
  41cf7d:	adc    eax,0x902679b8
  41cf82:	pop    edx
  41cf83:	or     BYTE PTR ds:[edi+0x35a062dd],bl
  41cf8a:	dec    ebx
  41cf8b:	xchg   edi,eax
  41cf8c:	dec    esp
  41cf8d:	sub    ecx,0x4ee6767a
  41cf93:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf95:	sbb    edi,eax
  41cf97:	adc    DWORD PTR [ebx-0x2d],eax
  41cf9a:	test   eax,0x22405049
  41cf9f:	mov    bh,0x6e
  41cfa1:	mov    cl,0xfe
  41cfa3:	test   DWORD PTR ds:0x69f955fb,edx
  41cfa9:	inc    edi
  41cfaa:	xchg   esp,eax
  41cfab:	bound  esp,QWORD PTR [esi-0x7acb0a3]
  41cfb1:	inc    edi
  41cfb2:	ds inc ebx
  41cfb4:	addr16 xor eax,0x8508fb16
  41cfba:	fwait
  41cfbb:	and    dh,BYTE PTR [edi-0x10]
  41cfbe:	inc    ebp
  41cfbf:	les    esi,FWORD PTR [edx+0x38]
  41cfc2:	sbb    eax,0x3b58683f
  41cfc7:	rcr    BYTE PTR [esi+0x76],cl
  41cfca:	or     al,0xa3
  41cfcc:	cld    
  41cfcd:	sbb    DWORD PTR [edx],0x4e702081
  41cfd3:	pop    es
  41cfd4:	jbe    0x41d04b
  41cfd6:	clc    
  41cfd7:	mov    ds:0x58e10f68,eax
  41cfdc:	pop    esi
  41cfdd:	rcr    BYTE PTR [eax+0x23],cl
  41cfe0:	xchg   edx,eax
  41cfe1:	(bad)  
  41cfe2:	icebp  
  41cfe3:	adc    esi,ecx
  41cfe5:	loop   0x41cfac
  41cfe7:	adc    DWORD PTR [esi],0xffffff84
  41cfea:	xchg   edi,eax
  41cfeb:	cwde   
  41cfec:	xor    BYTE PTR [edx],0xa1
  41cfef:	nop
  41cff0:	push   0x87840624
  41cff5:	aam    0xeb
  41cff7:	jne    0x41d06e
  41cff9:	dec    edx
  41cffa:	lds    eax,FWORD PTR [eax]
  41cffc:	xchg   ecx,eax
  41cffd:	pop    esi
  41cffe:	fmul   QWORD PTR [ebp+0x21]
  41d001:	mov    BYTE PTR [eax+0x1af4e0dc],ch
  41d007:	arpl   WORD PTR [eax-0x6d],bp
  41d00a:	inc    ebp
  41d00b:	jnp    0x41d043
  41d00d:	lahf   
  41d00e:	imul   BYTE PTR [edx]
  41d010:	mov    esp,0xdbbb262e
  41d015:	inc    ebx
  41d016:	pop    esi
  41d017:	daa    
  41d018:	and    esi,DWORD PTR [ecx+0x820901c]
  41d01e:	(bad)  
  41d01f:	push   ds
  41d020:	push   edi
  41d021:	mov    ds:0x6b26f843,eax
  41d026:	xchg   ebx,eax
  41d027:	inc    ecx
  41d028:	inc    edi
  41d029:	mov    edx,0x874dc1dc
  41d02e:	loop   0x41d014
  41d030:	push   ds
  41d031:	jns    0x41d08b
  41d033:	sub    DWORD PTR [esi],esi
  41d035:	sbb    eax,0xf4d26fc3
  41d03a:	cmp    al,0x93
  41d03c:	test   BYTE PTR [eax],al
  41d03e:	addr16 inc ecx
  41d040:	(bad)  
  41d041:	aas    
  41d042:	pushf  
  41d043:	mov    ds:0x8f0ff5a4,al
  41d048:	enter  0xac82,0xa3
  41d04c:	gs xor eax,0x2af92c41
  41d052:	jne    0x41d028
  41d054:	and    BYTE PTR [ebp+0x45],dh
  41d057:	and    ch,BYTE PTR [esi+0x6e]
  41d05a:	add    edx,ebp
  41d05c:	sub    ecx,esi
  41d05e:	pop    ecx
  41d05f:	mov    bh,0xf0
  41d061:	lods   eax,DWORD PTR ds:[esi]
  41d062:	cmp    al,cl
  41d064:	push   ebp
  41d065:	mov    ebp,0x39e84ea5
  41d06a:	daa    
  41d06b:	aaa    
  41d06c:	es (bad) 
  41d06e:	xchg   edx,eax
  41d06f:	xchg   ecx,eax
  41d070:	ret    
  41d071:	or     eax,0x340b82e6
  41d076:	dec    edi
  41d077:	je     0x41d072
  41d079:	sbb    eax,0xc2c69fb9
  41d07e:	jmp    0x398c7720
  41d083:	dec    esi
  41d084:	mov    BYTE PTR [edi+ebx*4+0x46],dh
  41d088:	ss mov ebp,0xb5705966
  41d08e:	cli    
  41d08f:	test   eax,0xc2061aeb
  41d094:	inc    edx
  41d095:	rol    DWORD PTR [ebp-0x7d],cl
  41d098:	je     0x41d067
  41d09a:	xchg   esi,eax
  41d09b:	loopne 0x41d07e
  41d09d:	lods   al,BYTE PTR ds:[esi]
  41d09e:	popa   
  41d09f:	pushf  
  41d0a0:	mov    WORD PTR [edx+ebx*4-0x5e],es
  41d0a4:	cmp    esi,DWORD PTR [esi+0x49]
  41d0a7:	adc    al,0xd3
  41d0a9:	sub    BYTE PTR [esi-0x57],al
  41d0ac:	add    edi,DWORD PTR [edi]
  41d0ae:	in     eax,0x2e
  41d0b0:	and    eax,0x6945410c
  41d0b5:	cmp    al,BYTE PTR [edi+eax*1]
  41d0b8:	imul   esp,ebp,0x6c2d5dae
  41d0be:	mov    gs,WORD PTR [ecx+0x273f1dd0]
  41d0c4:	in     eax,0x9b
  41d0c6:	pop    eax
  41d0c7:	xchg   ebp,eax
  41d0c8:	add    BYTE PTR [edi-0x3ed44d1d],bl
  41d0ce:	cmc    
  41d0cf:	lods   al,BYTE PTR ds:[esi]
  41d0d0:	sub    cl,bl
  41d0d2:	sti    
  41d0d3:	mov    ds:0xc337d326,al
  41d0d8:	xor    edi,DWORD PTR [ebp-0x66178f3b]
  41d0de:	mov    dl,0x88
  41d0e0:	and    edi,DWORD PTR [ebx+edi*2]
  41d0e3:	dec    esp
  41d0e4:	lods   al,BYTE PTR ds:[esi]
  41d0e5:	jns    0x41d149
  41d0e7:	mov    ds:0x3417be91,al
  41d0ec:	sbb    dh,ah
  41d0ee:	inc    ebp
  41d0ef:	xor    eax,0xe8fac285
  41d0f4:	jecxz  0x41d0ea
  41d0f6:	popa   
  41d0f7:	cmp    DWORD PTR [esi+edx*4-0x1d92dd17],esi
  41d0fe:	fnstenv [edi+0x25]
  41d101:	call   0x32a9:0xca5325f3
  41d108:	sub    dh,BYTE PTR [ebp-0x1dc0ca5]
  41d10e:	xor    al,0x2
  41d110:	add    BYTE PTR [ecx+0x161e13c4],0xc0
  41d117:	push   0x3dc7f594
  41d11c:	push   esp
  41d11d:	xor    eax,0x67c03aed
  41d122:	xchg   esi,eax
  41d123:	cwde   
  41d124:	mov    dl,0x54
  41d126:	ds push 0x8d7bb234
  41d12c:	adc    BYTE PTR [edx-0x4a5bccc1],ah
  41d132:	fisubr DWORD PTR [edi]
  41d134:	push   edi
  41d135:	jmp    0x41d106
  41d137:	(bad)  
  41d138:	fild   WORD PTR fs:[ebp+0x13]
  41d13c:	std    
  41d13d:	cdq    
  41d13e:	xchg   ebx,eax
  41d13f:	and    al,BYTE PTR [ebx+0x49766d2e]
  41d145:	mov    ch,0x4c
  41d147:	retf   
  41d148:	sbb    DWORD PTR [eax+0xbb84628],esp
  41d14e:	inc    esi
  41d14f:	in     al,dx
  41d150:	(bad)  
  41d151:	mov    eax,0x95b04e97
  41d156:	adc    DWORD PTR [ecx-0x26],eax
  41d159:	add    esi,edi
  41d15b:	and    al,BYTE PTR [ebp-0x6f]
  41d15e:	or     dh,dh
  41d160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d161:	sahf   
  41d162:	lods   al,BYTE PTR ds:[esi]
  41d163:	jg     0x41d1dd
  41d165:	mov    eax,ds:0xb54a48e3
  41d16a:	xchg   esi,eax
  41d16b:	pop    edx
  41d16c:	and    cl,BYTE PTR [ebx-0x1f]
  41d16f:	js     0x41d116
  41d171:	rol    ch,0x64
  41d174:	mov    esi,0x5e2ec161
  41d179:	mov    eax,ds:0x4382cc45
  41d17e:	stc    
  41d17f:	mov    ds:0xeb42503a,al
  41d184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d185:	jbe    0x41d136
  41d187:	nop
  41d188:	adc    eax,0x52b5b45a
  41d18d:	xor    eax,0x7d046f13
  41d192:	add    eax,0xc12f9246
  41d197:	sahf   
  41d198:	aaa    
  41d199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19a:	push   cs
  41d19b:	inc    ebp
  41d19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d19d:	arpl   cx,si
  41d19f:	inc    edi
  41d1a0:	xchg   ebp,eax
  41d1a1:	outs   dx,DWORD PTR ds:[esi]
  41d1a2:	rcr    WORD PTR [ecx],0xa6
  41d1a6:	mov    edi,0xc5e2baa1
  41d1ab:	xor    al,0x6c
  41d1ad:	mov    eax,0x19ac6e0a
  41d1b2:	or     BYTE PTR [esi+0x2be33543],0xc
  41d1b9:	jle    0x41d1a3
  41d1bb:	sub    bh,BYTE PTR [edx-0x4d]
  41d1be:	les    edx,FWORD PTR [eax+0xb]
  41d1c1:	xchg   ebp,eax
  41d1c2:	inc    ebx
  41d1c3:	jns    0x41d234
  41d1c5:	int    0xcc
  41d1c7:	fstp   QWORD PTR [eax-0xa7a254b]
  41d1cd:	in     al,0xf2
  41d1cf:	addr16 inc eax
  41d1d1:	in     al,dx
  41d1d2:	lds    eax,FWORD PTR [esi+0x237ba8e3]
  41d1d8:	call   0x841c952a
  41d1dd:	js     0x41d169
  41d1df:	mov    ds:0xe1f413fb,al
  41d1e4:	push   edx
  41d1e5:	rol    BYTE PTR [ebp+0xb],0x4c
  41d1e9:	push   cs
  41d1ea:	fwait
  41d1eb:	sbb    ecx,esp
  41d1ed:	xor    ebx,ecx
  41d1ef:	jns    0x41d1d4
  41d1f1:	out    0x43,al
  41d1f3:	mov    ds:0xbf3af2c4,eax
  41d1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f9:	(bad)  
  41d1fa:	sbb    BYTE PTR [edx+0x73],bl
  41d1fd:	push   eax
  41d1fe:	test   DWORD PTR [ecx],ecx
  41d200:	(bad)  
  41d201:	jno    0x41d228
  41d203:	into   
  41d204:	cmp    al,ah
  41d206:	xchg   ebp,eax
  41d207:	shr    DWORD PTR [edi],0x9f
  41d20a:	xchg   ebp,eax
  41d20b:	out    0xb4,al
  41d20d:	xor    ecx,DWORD PTR [ecx+0x33]
  41d210:	ror    BYTE PTR [ebp+0x6d],cl
  41d213:	outs   dx,BYTE PTR ds:[esi]
  41d214:	sub    esi,DWORD PTR [edi]
  41d216:	retf   0x9689
  41d219:	icebp  
  41d21a:	sub    eax,DWORD PTR [eax]
  41d21c:	xchg   BYTE PTR [ebp-0x65ec7340],al
  41d222:	test   al,0x96
  41d224:	call   0x526c:0xce474f35
  41d22b:	jmp    0xf332:0x56c60b57
  41d232:	add    eax,0x37a51e69
  41d237:	adc    edx,DWORD PTR [ebx]
  41d239:	xor    al,0x99
  41d23b:	adc    al,0x6b
  41d23d:	push   ds
  41d23e:	push   cs
  41d23f:	arpl   WORD PTR [esi],ax
  41d241:	mov    BYTE PTR [ebp+0x7d],0x49
  41d245:	or     bh,BYTE PTR [edi]
  41d247:	xchg   esp,eax
  41d248:	in     al,dx
  41d249:	into   
  41d24a:	sbb    al,0x4e
  41d24c:	inc    edx
  41d24d:	js     0x41d298
  41d24f:	and    ebx,DWORD PTR [ebp+0x34]
  41d252:	fist   DWORD PTR [ebp-0x5a]
  41d255:	stos   DWORD PTR es:[edi],eax
  41d256:	inc    ecx
  41d257:	xchg   BYTE PTR [edx+0x730fe9ee],dh
  41d25d:	mov    ch,0x12
  41d25f:	sti    
  41d260:	repnz sub esp,DWORD PTR [esi-0x4198706c]
  41d267:	int3   
  41d268:	nop
  41d269:	jbe    0x41d2b0
  41d26b:	push   esi
  41d26c:	cmp    DWORD PTR [edi],edx
  41d26e:	add    al,0x63
  41d270:	hlt    
  41d271:	cli    
  41d272:	les    esi,FWORD PTR ds:0x1fb4fa3f
  41d278:	and    al,0xea
  41d27a:	or     DWORD PTR [ebx],esi
  41d27c:	fidivr WORD PTR [esi]
  41d27e:	ins    BYTE PTR es:[edi],dx
  41d27f:	shl    DWORD PTR [esi-0x52ae59d8],1
  41d285:	cld    
  41d286:	inc    ebp
  41d287:	sub    eax,0x13051c3b
  41d28c:	and    eax,eax
  41d28e:	pop    ebp
  41d28f:	adc    eax,0x234562fb
  41d294:	sub    al,BYTE PTR [edx]
  41d296:	(bad)  
  41d298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d299:	or     al,al
  41d29b:	and    al,0x37
  41d29d:	mov    fs,esp
  41d29f:	dec    esi
  41d2a0:	add    ebp,DWORD PTR [esi]
  41d2a2:	pop    ss
  41d2a3:	pop    edx
  41d2a4:	fcomp  DWORD PTR [edx]
  41d2a6:	xchg   esi,eax
  41d2a7:	(bad)  
  41d2a8:	mov    eax,0x2d5b55ad
  41d2ad:	mov    ebp,0xa8003f45
  41d2b2:	in     al,0x82
  41d2b4:	shr    DWORD PTR [eax],1
  41d2b6:	daa    
  41d2b7:	int3   
  41d2b8:	and    BYTE PTR [esi-0x431a50c],ch
  41d2be:	xchg   ebp,eax
  41d2bf:	sbb    al,ch
  41d2c1:	mov    BYTE PTR [ecx+edx*8-0x5a],0x4e
  41d2c6:	int    0x87
  41d2c8:	test   DWORD PTR [esi],edx
  41d2ca:	addr16 in eax,dx
  41d2cc:	fdiv   DWORD PTR [ecx]
  41d2ce:	jp     0x41d2a0
  41d2d0:	cmc    
  41d2d1:	dec    edi
  41d2d2:	add    eax,0xefb9c529
  41d2d7:	stos   BYTE PTR es:[edi],al
  41d2d8:	shl    DWORD PTR es:[ebp+esi*2+0x5b20e24a],cl
  41d2e0:	mov    ds:0x207b4bb5,eax
  41d2e5:	adc    ah,0x6c
  41d2e8:	mov    ds:0x26438dc2,al
  41d2ed:	pop    edx
  41d2ee:	ss mov ds,ebx
  41d2f1:	pop    es
  41d2f2:	popa   
  41d2f3:	or     BYTE PTR [esi-0x40545ccb],0xa0
  41d2fa:	imul   esp,ecx,0x42a788a0
  41d300:	jno    0x41d2b0
  41d302:	repz in al,0x1e
  41d305:	inc    ecx
  41d306:	mov    al,0xb6
  41d308:	jno    0x41d35b
  41d30a:	push   cs
  41d30b:	mov    ds:0x51f333f4,eax
  41d310:	mov    edi,0x4ee2dec5
  41d315:	sub    bl,0x63
  41d318:	es push ebp
  41d31a:	cmp    bl,BYTE PTR [edx+eiz*1+0x5532cd32]
  41d321:	xor    eax,0x297e61b6
  41d326:	in     eax,0x58
  41d328:	mov    eax,ds:0x9dbbc5b6
  41d32d:	pop    ebp
  41d32e:	mov    ebp,0xd3b639b
  41d333:	retf   0x2633
  41d336:	out    0x22,eax
  41d338:	sbb    al,0x83
  41d33a:	dec    ebx
  41d33b:	fisub  DWORD PTR [esi]
  41d33d:	mov    gs,esp
  41d33f:	xchg   DWORD PTR [edx+0x396f7b69],ebp
  41d345:	mov    DWORD PTR [ebp+eiz*2+0x26],eax
  41d349:	cmp    BYTE PTR [ebx-0x3f66899b],dh
  41d34f:	in     al,dx
  41d350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d351:	lahf   
  41d352:	sbb    eax,0xa7518924
  41d357:	shl    BYTE PTR [edi+0x77],cl
  41d35a:	loope  0x41d39b
  41d35c:	pop    ss
  41d35d:	dec    edi
  41d35e:	pop    ds
  41d35f:	and    ebp,DWORD PTR [edi+0x1a]
  41d362:	pop    esp
  41d363:	fsub   DWORD PTR [esi]
  41d365:	sub    cl,ch
  41d367:	mov    DWORD PTR [edi],esi
  41d369:	or     BYTE PTR [esi+ecx*4+0x339aae00],bl
  41d370:	push   eax
  41d371:	sbb    BYTE PTR [esi],ah
  41d373:	ret    0xea16
  41d376:	add    eax,esp
  41d378:	and    eax,0x4930ab8f
  41d37d:	mov    esi,0x35464f6a
  41d382:	mov    WORD PTR [eax-0x14],cs
  41d385:	mov    eax,0xfdf8c661
  41d38a:	lds    ecx,FWORD PTR [ebp+0x29]
  41d38d:	lods   eax,DWORD PTR ds:[esi]
  41d38e:	push   ebx
  41d38f:	(bad)  
  41d390:	jecxz  0x41d3e6
  41d392:	(bad)  
  41d394:	xchg   edi,eax
  41d395:	mov    cl,0x2b
  41d397:	mov    ds:0x2f5a27f2,eax
  41d39c:	es inc ebp
  41d39e:	push   esi
  41d39f:	test   ebx,edi
  41d3a1:	das    
  41d3a2:	int    0x43
  41d3a4:	fisubr WORD PTR ds:0x89a0a2f
  41d3aa:	inc    esi
  41d3ab:	cmp    DWORD PTR [eax],0x38
  41d3ae:	add    eax,0x4256ebea
  41d3b3:	adc    DWORD PTR [ecx-0x9],0x3d359ed4
  41d3ba:	or     BYTE PTR [ebx],0x39
  41d3bd:	enter  0x2f20,0xb5
  41d3c1:	in     al,dx
  41d3c2:	sbb    DWORD PTR [ebx],esp
  41d3c4:	push   ss
  41d3c5:	xlat   BYTE PTR ds:[ebx]
  41d3c6:	mov    DWORD PTR [eax-0x78],esp
  41d3c9:	pop    esp
  41d3ca:	xchg   edi,eax
  41d3cb:	mov    ebp,0x862a3504
  41d3d0:	ret    
  41d3d1:	das    
  41d3d2:	daa    
  41d3d3:	sahf   
  41d3d4:	jne    0x41d398
  41d3d6:	sahf   
  41d3d7:	es push edi
  41d3d9:	xor    eax,0x8641e3b0
  41d3de:	repnz mov dh,0x6a
  41d3e1:	mov    bl,0xa
  41d3e3:	stc    
  41d3e4:	js     0x41d43c
  41d3e6:	jbe    0x41d466
  41d3e8:	es push fs
  41d3eb:	gs jecxz 0x41d3eb
  41d3ee:	(bad)  
  41d3ef:	jo     0x41d440
  41d3f1:	mov    ch,0x46
  41d3f3:	push   esi
  41d3f4:	or     BYTE PTR [ebx-0x75],dh
  41d3f7:	or     al,0xf7
  41d3f9:	int3   
  41d3fa:	(bad)
  41d3fd:	sar    BYTE PTR [esi],cl
  41d3ff:	mov    eax,0x91f88e3c
  41d404:	int3   
  41d405:	mov    ds:0x581aa353,al
  41d40a:	loopne 0x41d40c
  41d40c:	es pushf 
  41d40e:	dec    edx
  41d40f:	inc    edx
  41d410:	sbb    edx,esi
  41d412:	ror    BYTE PTR [esi-0x7894ac5],1
  41d418:	retf   
  41d419:	jge    0x41d3a2
  41d41b:	fwait
  41d41c:	pop    ds
  41d41d:	sub    esi,eax
  41d41f:	or     eax,0xbaf1c4a3
  41d424:	mov    edi,0xf46e6b5
  41d429:	xchg   ecx,eax
  41d42a:	push   esp
  41d42b:	and    edx,DWORD PTR [eax-0x3]
  41d42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d42f:	cmp    eax,0x2ec5c767
  41d434:	lods   eax,DWORD PTR ds:[esi]
  41d435:	mov    ch,BYTE PTR [eax]
  41d437:	out    0x14,al
  41d439:	mul    DWORD PTR [ebx]
  41d43b:	xor    DWORD PTR [edi+edi*2+0x337b2352],edi
  41d442:	fnsave [edi]
  41d444:	and    dh,BYTE PTR [edi+0xae9ab6a]
  41d44a:	dec    esi
  41d44b:	inc    edi
  41d44c:	hlt    
  41d44d:	add    bl,BYTE PTR [eax+eiz*2]
  41d450:	sub    BYTE PTR [edi+0x153be935],ah
  41d456:	cmp    edx,DWORD PTR [esi+0x2b]
  41d459:	stos   DWORD PTR es:[edi],eax
  41d45a:	sbb    ebp,ebx
  41d45c:	es das 
  41d45e:	jl     0xeca3db0d
  41d464:	fprem1 
  41d466:	enter  0xb1a2,0x56
  41d46a:	dec    esi
  41d46b:	xchg   ebp,eax
  41d46c:	adc    BYTE PTR [bp-0x1d],cl
  41d470:	fdivr  QWORD PTR [edx+0x61e186c5]
  41d476:	(bad)  
  41d477:	lea    eax,[esi+0x77]
  41d47a:	das    
  41d47b:	std    
  41d47c:	dec    ebp
  41d47d:	inc    eax
  41d47e:	hlt    
  41d47f:	and    ch,BYTE PTR [edi+edx*8+0x219ef628]
  41d486:	int    0xb8
  41d488:	or     ah,BYTE PTR [edx+0x14]
  41d48b:	sub    edi,esi
  41d48d:	outs   dx,BYTE PTR ds:[esi]
  41d48e:	xor    bl,BYTE PTR [eax-0x199d4a90]
  41d494:	call   0x460d:0x1ba5395d
  41d49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d49c:	add    eax,0xaae9d2da
  41d4a1:	sahf   
  41d4a2:	cld    
  41d4a3:	add    DWORD PTR [esi-0x40],ebx
  41d4a6:	hlt    
  41d4a7:	(bad)  
  41d4a8:	outs   dx,BYTE PTR ds:[esi]
  41d4a9:	xor    eax,0xffbeea8e
  41d4ae:	cmp    al,0x58
  41d4b0:	ret    0x45e4
  41d4b3:	shr    DWORD PTR ds:[ecx-0x51],1
  41d4b7:	test   BYTE PTR [ebp-0x56],bh
  41d4ba:	add    bh,dh
  41d4bc:	mov    dh,0x21
  41d4be:	add    eax,0xf976cba3
  41d4c3:	mul    BYTE PTR [esp+edi*1+0x394db86e]
  41d4ca:	sbb    DWORD PTR [ecx],edi
  41d4cc:	pop    ebp
  41d4cd:	shr    DWORD PTR [ecx+0x55],0x93
  41d4d1:	mov    ch,0x82
  41d4d3:	popa   
  41d4d4:	xor    edi,ebp
  41d4d6:	dec    esp
  41d4d7:	ret    0xf32
  41d4da:	(bad)  
  41d4db:	sub    edx,DWORD PTR [ecx+0x4b919c28]
  41d4e1:	int3   
  41d4e2:	xchg   ebx,eax
  41d4e3:	pop    edx
  41d4e4:	xor    al,0x8e
  41d4e6:	mov    ebp,0x66ef1922
  41d4eb:	repz add eax,0xa5c10670
  41d4f1:	adc    eax,0x89c6a1b1
  41d4f6:	cmc    
  41d4f7:	adc    al,0x7b
  41d4f9:	mov    cl,BYTE PTR [ebx]
  41d4fb:	inc    ebx
  41d4fc:	test   BYTE PTR [eax+0x5daf97ed],bl
  41d502:	clc    
  41d503:	and    cl,BYTE PTR [ebx-0x80]
  41d506:	mov    esi,0xd23c5928
  41d50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d50c:	mov    ecx,0xf843139d
  41d511:	xor    al,0x76
  41d513:	add    BYTE PTR [edx*1-0x7a9e3d25],bl
  41d51a:	xchg   edx,eax
  41d51b:	test   eax,0x324d5325
  41d520:	xor    ch,BYTE PTR [esi+ebx*1]
  41d523:	or     ebp,eax
  41d525:	sub    DWORD PTR [edx],ebp
  41d527:	(bad)  
  41d528:	sti    
  41d529:	xor    edx,DWORD PTR [ebx+0x1eeec99]
  41d52f:	ret    
  41d530:	into   
  41d531:	push   ds
  41d532:	(bad)  
  41d533:	lock xor BYTE PTR [edi+edx*1],dl
  41d537:	in     al,dx
  41d538:	test   eax,0x11350086
  41d53d:	push   esp
  41d53e:	pop    es
  41d53f:	mov    ds:0xb38bfafc,eax
  41d544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d545:	jmp    0x49c2:0xee947d06
  41d54c:	push   ebx
  41d54d:	mov    ch,0x19
  41d54f:	sbb    BYTE PTR ds:0x91d6c8ce,dl
  41d555:	(bad)  
  41d556:	lds    ecx,FWORD PTR [ebp-0x111bb76c]
  41d55c:	jae    0x41d58a
  41d55e:	je     0x41d508
  41d560:	adc    DWORD PTR [edi-0x2f],eax
  41d563:	adc    al,0x31
  41d565:	sbb    eax,0x6b369ba6
  41d56a:	mov    WORD PTR [ebp-0x62],?
  41d56d:	fistp  WORD PTR [edi]
  41d56f:	and    ah,BYTE PTR [edi]
  41d571:	inc    ebp
  41d572:	mov    ah,BYTE PTR ds:0x4a905e76
  41d578:	jno    0x41d5b4
  41d57a:	data16 mov ds:0xe8bc09e0,al
  41d580:	jle    0x41d557
  41d582:	inc    ebp
  41d583:	imul   edx,edi,0x7b
  41d586:	or     DWORD PTR [ebp-0x5f5f22c9],ecx
  41d58c:	gs or  al,0x50
  41d58f:	and    esp,DWORD PTR [eax+0x17380f7a]
  41d595:	cmp    esp,ecx
  41d597:	pop    ebp
  41d598:	out    0x64,al
  41d59a:	sahf   
  41d59b:	push   ebp
  41d59c:	(bad)  
  41d59d:	push   esi
  41d59e:	mov    ch,0x5e
  41d5a0:	lds    ebx,FWORD PTR [edx+0x657a338]
  41d5a6:	sti    
  41d5a7:	sbb    ch,BYTE PTR [edx]
  41d5a9:	les    eax,FWORD PTR [ebp-0x6b]
  41d5ac:	mov    WORD PTR [edx+ecx*8-0x7d],ds
  41d5b0:	fsub   st(0),st
  41d5b2:	cmp    al,0x3a
  41d5b4:	sbb    eax,ecx
  41d5b6:	lds    eax,FWORD PTR [esi+0x16d75111]
  41d5bc:	bnd ret 0x7399
  41d5c0:	xchg   ecx,eax
  41d5c1:	std    
  41d5c2:	scas   eax,DWORD PTR es:[edi]
  41d5c3:	icebp  
  41d5c4:	or     al,0xe4
  41d5c6:	lds    ebx,FWORD PTR [esp+eiz*2+0x6f01a75a]
  41d5cd:	xchg   esi,eax
  41d5ce:	inc    ebx
  41d5cf:	sub    BYTE PTR [esi-0x2781f187],ah
  41d5d5:	jmp    edi
  41d5d7:	sbb    DWORD PTR [esi+0x1f59d654],esp
  41d5dd:	xchg   edi,eax
  41d5de:	pop    ebp
  41d5df:	mov    ebx,DWORD PTR [edx-0x797a77cb]
  41d5e5:	leave  
  41d5e6:	jne    0x41d645
  41d5e8:	and    DWORD PTR [eax-0x4a622058],edi
  41d5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ef:	sub    ch,BYTE PTR [ecx+0x7ed8f822]
  41d5f5:	xchg   edi,eax
  41d5f7:	inc    ebp
  41d5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f9:	adc    eax,0x949c6343
  41d5fe:	mov    al,ds:0xfffd26c3
  41d603:	aas    
  41d604:	sbb    BYTE PTR [ebx],0xfc
  41d607:	xchg   esi,eax
  41d608:	cs mov ch,0xb4
  41d60b:	popf   
  41d60c:	mov    ebp,0xfe326b06
  41d611:	ret    
  41d612:	xchg   dh,dh
  41d614:	and    eax,0xda31dd64
  41d619:	mov    al,ds:0x358e527e
  41d61e:	dec    ebx
  41d61f:	test   DWORD PTR ds:[edi],ebp
  41d622:	ret    0x2f13
  41d625:	mov    bh,0xc5
  41d627:	jl     0x41d5d5
  41d629:	xchg   BYTE PTR [eax-0x3bcbda76],bl
  41d62f:	ret    0x3715
  41d632:	inc    ebx
  41d633:	mov    ds:0x4867da42,eax
  41d638:	scas   al,BYTE PTR es:[di]
  41d63a:	mov    bh,0x9a
  41d63c:	lods   al,BYTE PTR ds:[esi]
  41d63d:	xchg   BYTE PTR es:[esi+0x730449e5],dl
  41d644:	mov    ds:0x67e8adb5,al
  41d649:	and    ebx,esi
  41d64b:	cli    
  41d64c:	or     eax,edi
  41d64e:	inc    ebp
  41d64f:	adc    ebx,esi
  41d651:	mov    BYTE PTR [ebp-0x55],ch
  41d654:	bts    DWORD PTR [ebx+0x3f],ebx
  41d658:	loop   0x41d615
  41d65a:	fisub  DWORD PTR [edx]
  41d65c:	sti    
  41d65d:	je     0x41d638
  41d65f:	jno    0x41d6cd
  41d661:	into   
  41d662:	mov    esi,0xc3d52974
  41d667:	popf   
  41d668:	jae    0x41d679
  41d66a:	mov    edx,esi
  41d66c:	div    BYTE PTR [ebp+0x49]
  41d66f:	fs icebp 
  41d671:	and    bl,ah
  41d673:	and    cl,BYTE PTR [edx-0x5983325c]
  41d679:	(bad)  
  41d67a:	pop    eax
  41d67b:	jae    0x41d609
  41d67d:	cmp    al,0x32
  41d67f:	pop    ss
  41d680:	icebp  
  41d681:	mov    ah,0xe8
  41d683:	cmp    dh,BYTE PTR [ebp+0x17]
  41d686:	sahf   
  41d687:	retf   
  41d688:	push   eax
  41d689:	leave  
  41d68a:	clc    
  41d68b:	mov    esp,0x3248ed23
  41d690:	das    
  41d691:	shl    DWORD PTR [ebp-0x70],1
  41d694:	mov    al,0xc1
  41d696:	test   cl,0x41
  41d699:	iret   
  41d69a:	xor    DWORD PTR [ebx-0x4e6b2299],esp
  41d6a0:	and    eax,0x88337ef
  41d6a5:	pop    ebp
  41d6a6:	sbb    al,dh
  41d6a8:	pop    cx
  41d6aa:	into   
  41d6ab:	aaa    
  41d6ac:	xchg   DWORD PTR [esi-0x2953604a],ebx
  41d6b2:	in     eax,0x7e
  41d6b4:	or     ebx,0x79ffb302
  41d6ba:	rcr    DWORD PTR [edx+0x2351ef32],0x53
  41d6c1:	jae    0x41d731
  41d6c3:	inc    esi
  41d6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c5:	fcmovbe st,st(6)
  41d6c7:	inc    esp
  41d6c8:	leave  
  41d6c9:	nop
  41d6ca:	mov    BYTE PTR [edi+0x9],dh
  41d6cd:	xor    bl,BYTE PTR ds:0x21bfa330
  41d6d3:	jmp    0x41d6d5
  41d6d5:	into   
  41d6d6:	pop    ecx
  41d6d7:	shl    DWORD PTR [edx],1
  41d6d9:	adc    al,dh
  41d6db:	adc    ebx,0x3dadb1b8
  41d6e1:	lods   eax,DWORD PTR ds:[esi]
  41d6e2:	dec    dx
  41d6e4:	xchg   ebx,eax
  41d6e5:	ss pop ss
  41d6e7:	mov    ds:0x4be1726f,eax
  41d6ec:	sbb    al,0xed
  41d6ee:	in     eax,0x8d
  41d6f0:	cmp    al,0xb5
  41d6f2:	push   edi
  41d6f3:	icebp  
  41d6f4:	lahf   
  41d6f5:	pop    ebp
  41d6f6:	mov    al,0x12
  41d6f8:	leave  
  41d6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fa:	loop   0x41d701
  41d6fc:	ret    
  41d6fd:	adc    DWORD PTR [ecx],eax
  41d6ff:	mov    dh,0x86
  41d701:	gs in  al,dx
  41d703:	cwde   
  41d704:	mov    dl,BYTE PTR [edi]
  41d706:	inc    esi
  41d707:	ja     0x41d69b
  41d709:	pop    eax
  41d70a:	inc    ebp
  41d70b:	jecxz  0x41d777
  41d70d:	jbe    0x41d738
  41d70f:	mov    esi,0xa0d1a9fb
  41d714:	inc    esp
  41d715:	aad    0x6a
  41d717:	fistp  DWORD PTR [edi]
  41d719:	dec    ecx
  41d71a:	es jl  0x41d6e6
  41d71d:	in     eax,dx
  41d71e:	hlt    
  41d71f:	add    ebx,DWORD PTR [eax-0x1c3aa3db]
  41d725:	ds ds xchg esi,eax
  41d728:	shl    BYTE PTR [ecx+0x56bda303],1
  41d72e:	push   es
  41d72f:	inc    ecx
  41d730:	pop    DWORD PTR [ecx-0x7959cecd]
  41d736:	ror    BYTE PTR [edx+0x42],1
  41d739:	es xchg ecx,eax
  41d73b:	add    BYTE PTR [edx],al
  41d73d:	add    eax,0x43000486
  41d742:	pop    esi
  41d743:	pop    esi
  41d744:	lds    ebp,FWORD PTR [ebx+ecx*1-0xe]
  41d748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d749:	popf   
  41d74a:	push   0x8112d132
  41d74f:	push   ss
  41d750:	mov    edx,0x31300dfb
  41d755:	and    eax,0xf6dc231a
  41d75a:	jmp    0x8423:0x90e72510
  41d761:	xor    dh,dh
  41d763:	pop    eax
  41d764:	gs cs lahf 
  41d767:	(bad)  
  41d768:	stos   BYTE PTR es:[edi],al
  41d769:	sti    
  41d76a:	or     edx,DWORD PTR [eax]
  41d76c:	es sbb ebp,ebp
  41d76f:	sbb    al,BYTE PTR ds:[eax+ecx*4-0x18a25a60]
  41d777:	xor    DWORD PTR [esi],ecx
  41d779:	inc    ebx
  41d77a:	pop    ss
  41d77b:	xchg   ebx,eax
  41d77c:	mov    eax,ds:0xd74704b5
  41d781:	mov    ds:0xf262f506,al
  41d786:	rcr    BYTE PTR [esi+0x24],1
  41d789:	popf   
  41d78a:	mov    ebp,0x3122a5f5
  41d78f:	mov    ah,0x62
  41d791:	icebp  
  41d792:	jnp    0x41d769
  41d794:	pop    eax
  41d795:	mov    ch,0xf2
  41d797:	fcmovnbe st,st(2)
  41d799:	inc    ecx
  41d79a:	ja     0x41d7cf
  41d79c:	jno    0x41d780
  41d79e:	inc    ebp
  41d79f:	and    cl,bl
  41d7a1:	xor    ecx,edi
  41d7a3:	sub    al,0x15
  41d7a5:	or     BYTE PTR [esi-0x62aa9d6b],0x94
  41d7ac:	jae    0x41d7b3
  41d7ae:	daa    
  41d7af:	and    eax,DWORD PTR [edi+0x17]
  41d7b2:	(bad)  
  41d7b3:	jle    0x41d7cc
  41d7b5:	and    dh,BYTE PTR [eax+edx*1+0x5e]
  41d7b9:	call   0xa30a:0x8c437d9c
  41d7c0:	push   es
  41d7c1:	cmp    eax,0x74265478
  41d7c6:	aaa    
  41d7c7:	js     0x41d7c6
  41d7c9:	xor    dh,BYTE PTR [esi-0x504aa8ef]
  41d7cf:	pop    ecx
  41d7d0:	cmc    
  41d7d1:	lea    ebx,[ebp+edi*8+0x2c]
  41d7d5:	or     eax,0xaca65d46
  41d7da:	daa    
  41d7db:	lock xchg bp,ax
  41d7de:	ss in  eax,0xa8
  41d7e1:	mov    ebx,0x1a40434a
  41d7e6:	inc    esi
  41d7e7:	imul   esp,DWORD PTR [edx+ebp*4],0x45
  41d7eb:	xor    BYTE PTR [edi],0x93
  41d7ee:	xor    BYTE PTR [edi],ah
  41d7f0:	cmp    bl,BYTE PTR [eax+edx*2]
  41d7f3:	and    esp,DWORD PTR [ebx+edi*1+0x3c]
  41d7f7:	push   cs
  41d7f8:	out    dx,al
  41d7f9:	push   0x45
  41d7fb:	imul   ebx,esi,0xfffffffb
  41d7fe:	add    al,BYTE PTR [edx]
  41d800:	dec    eax
  41d801:	fistp  WORD PTR [ecx-0x4a]
  41d804:	pop    ecx
  41d805:	xor    eax,0x8d94c21b
  41d80a:	sbb    DWORD PTR [eax],esi
  41d80c:	aad    0x69
  41d80e:	mov    bh,0x7
  41d810:	mov    BYTE PTR [edx+0x4893e05],bh
  41d816:	add    DWORD PTR [esi+0x29f9268e],ecx
  41d81c:	in     eax,dx
  41d81d:	mov    ah,0xc0
  41d81f:	and    al,0x57
  41d821:	add    DWORD PTR [edx+ecx*4],edx
  41d824:	enter  0x3f22,0x39
  41d828:	mov    al,ds:0x3d59992d
  41d82d:	xchg   esi,eax
  41d82e:	aas    
  41d82f:	and    edi,DWORD PTR [ebx]
  41d831:	xor    eax,0x13db1c8
  41d836:	pop    esp
  41d837:	arpl   WORD PTR [ebp-0x7d],di
  41d83a:	ds pop es
  41d83c:	pop    DWORD PTR [ecx+0x6e]
  41d83f:	(bad)  
  41d840:	popa   
  41d841:	sub    DWORD PTR [ebx-0x1af592be],ebp
  41d847:	and    ebp,DWORD PTR [ecx+0xca33fd2]
  41d84d:	push   eax
  41d84e:	inc    ecx
  41d84f:	lods   al,BYTE PTR ds:[esi]
  41d850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d851:	or     BYTE PTR [edi+0x7e],0x53
  41d855:	pop    eax
  41d856:	sbb    DWORD PTR [ecx],eax
  41d858:	es mov edx,0xb9ceceee
  41d85e:	pop    ds
  41d85f:	mov    ds:0x6d8405de,eax
  41d864:	and    al,0x41
  41d866:	xor    DWORD PTR [esi-0x3ceedc9],0x3ee0f135
  41d870:	adc    al,0x93
  41d872:	in     eax,0x22
  41d874:	iret   
  41d875:	mov    dh,0x7e
  41d877:	xchg   ebx,eax
  41d878:	pushf  
  41d879:	jns    0x41d816
  41d87b:	fsub   DWORD PTR [esi-0xbea546]
  41d881:	hlt    
  41d882:	dec    esi
  41d883:	iret   
  41d884:	inc    ebx
  41d885:	xchg   esp,eax
  41d886:	jmp    0xc57a8a2d
  41d88b:	retf   
  41d88c:	es aas 
  41d88e:	pop    ss
  41d88f:	push   edx
  41d890:	mov    ebp,0x7449ad16
  41d895:	cmp    eax,0xd21f0688
  41d89a:	popf   
  41d89b:	lahf   
  41d89c:	leave  
  41d89d:	fadd   DWORD PTR [ebx-0x7d0e3cbb]
  41d8a3:	dec    eax
  41d8a4:	xchg   BYTE PTR [ecx+0x25],dh
  41d8a7:	mov    ah,BYTE PTR [edi]
  41d8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8aa:	inc    edx
  41d8ab:	fwait
  41d8ac:	push   ds
  41d8ad:	dec    eax
  41d8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8af:	sub    edi,DWORD PTR [edx-0x2b]
  41d8b2:	xor    ah,ah
  41d8b4:	in     eax,dx
  41d8b5:	leave  
  41d8b6:	or     DWORD PTR [esi+0x2315105f],edx
  41d8bc:	push   edi
  41d8be:	lods   eax,DWORD PTR ds:[esi]
  41d8bf:	push   cs
  41d8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c1:	mov    al,0x28
  41d8c3:	cmp    al,0xce
  41d8c5:	inc    ebx
  41d8c6:	adc    al,0x73
  41d8c8:	xchg   esp,eax
  41d8c9:	xor    eax,0xffe812d
  41d8ce:	bnd jae 0x41d876
  41d8d1:	fild   DWORD PTR [esi-0x77a359b4]
  41d8d7:	pop    ecx
  41d8d8:	aaa    
  41d8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8da:	(bad)  
  41d8db:	and    esi,DWORD PTR [edx-0x4b]
  41d8de:	jnp    0x41d91d
  41d8e0:	scas   eax,DWORD PTR es:[edi]
  41d8e1:	ds out dx,al
  41d8e3:	jne    0x41d8e5
  41d8e5:	fadd   DWORD PTR [esp+edx*1-0x35]
  41d8e9:	aaa    
  41d8ea:	jmp    0x41d969
  41d8ec:	xchg   ebp,eax
  41d8ee:	inc    esi
  41d8ef:	pop    eax
  41d8f0:	in     al,0xa6
  41d8f2:	adc    al,0xdd
  41d8f4:	inc    esi
  41d8f5:	xchg   ebp,eax
  41d8f6:	jmp    0xa41:0x116ed798
  41d8fd:	pop    esp
  41d8fe:	nop
  41d8ff:	inc    esp
  41d900:	dec    eax
  41d901:	(bad)  
  41d902:	sub    DWORD PTR [ebx+0x7f0cdef1],esp
  41d908:	mov    ds:0x2ba2e6cc,eax
  41d90d:	int    0x2
  41d90f:	ret    
  41d910:	and    al,0x83
  41d912:	push   eax
  41d913:	xchg   dl,ah
  41d915:	mov    ch,0x5
  41d917:	mov    WORD PTR [ecx],?
  41d919:	lods   al,BYTE PTR ds:[esi]
  41d91a:	scas   al,BYTE PTR es:[edi]
  41d91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d91c:	sub    dh,BYTE PTR [ebp+0x2422e3ee]
  41d922:	pop    ds
  41d923:	sbb    DWORD PTR [ebp-0x6bcbd67],esp
  41d929:	iret   
  41d92a:	aaa    
  41d92b:	mov    ah,0x76
  41d92d:	fist   WORD PTR ds:0x6cb5926d
  41d933:	mov    ah,0x44
  41d935:	enter  0xda8e,0x8
  41d939:	jbe    0x41d980
  41d93b:	dec    esp
  41d93c:	retf   
  41d93d:	dec    BYTE PTR [eax-0x261f38c9]
  41d943:	jbe    0x41d95c
  41d945:	xor    dl,BYTE PTR [edx]
  41d947:	cmp    BYTE PTR ds:0xd226ea,bl
  41d94d:	out    0x3e,eax
  41d94f:	xor    esp,DWORD PTR ds:0x6d27ca34
  41d955:	popf   
  41d956:	mov    ebx,0xf3353b2f
  41d95b:	jp     0x41d8f6
  41d95d:	int    0x6e
  41d95f:	dec    eax
  41d960:	stos   DWORD PTR es:[edi],eax
  41d961:	out    0x55,al
  41d963:	xchg   ebx,eax
  41d964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d965:	fiadd  DWORD PTR [esi+0x5f]
  41d968:	nop
  41d969:	scas   eax,DWORD PTR es:[edi]
  41d96a:	fs xchg edi,eax
  41d96c:	jnp    0x41d9a3
  41d96e:	xchg   ebx,eax
  41d96f:	call   0x1ad6:0xda97a3ac
  41d976:	(bad)  
  41d977:	jnp    0x41d92b
  41d979:	nop
  41d97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97b:	ret    0x1aa
  41d97e:	cmp    ch,BYTE PTR [edi]
  41d980:	cmp    eax,esp
  41d982:	js     0x41d925
  41d984:	(bad)  
  41d985:	pop    ebp
  41d986:	clc    
  41d987:	fbld   TBYTE PTR [esi+0x204a0ae6]
  41d98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98e:	sbb    esi,DWORD PTR [ecx]
  41d990:	sbb    BYTE PTR [ecx+0x41e7d082],dh
  41d996:	add    al,BYTE PTR [ebx]
  41d998:	mov    ebp,0xaddf8617
  41d99d:	jne    0x41da14
  41d99f:	daa    
  41d9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a1:	jp     0x41d95b
  41d9a3:	xchg   edi,eax
  41d9a4:	out    0xf8,al
  41d9a6:	sub    al,0x31
  41d9a8:	xchg   ecx,eax
  41d9a9:	adc    DWORD PTR [ebx-0x143359fc],esp
  41d9af:	test   BYTE PTR [edi],bh
  41d9b1:	repz call 0x9b4:0xff2525fb
  41d9b9:	jle    0x41d9d8
  41d9bb:	mov    ebp,0x51687cf6
  41d9c0:	inc    eax
  41d9c1:	dec    ebp
  41d9c2:	repnz adc ebp,DWORD PTR [ebx]
  41d9c5:	repnz loope 0x41d9aa
  41d9c8:	lds    esp,FWORD PTR [ecx]
  41d9ca:	inc    esi
  41d9cb:	sahf   
  41d9cc:	pop    esp
  41d9cd:	mov    eax,ds:0x44cb5f3a
  41d9d2:	int3   
  41d9d3:	stc    
  41d9d4:	sbb    ebp,esp
  41d9d6:	push   esp
  41d9d7:	and    eax,DWORD PTR [ecx]
  41d9d9:	daa    
  41d9da:	stos   BYTE PTR es:[edi],al
  41d9db:	xchg   ecx,eax
  41d9dc:	es inc esp
  41d9de:	(bad)  
  41d9df:	aas    
  41d9e0:	out    dx,al
  41d9e1:	xor    DWORD PTR [ecx],0xffffffd4
  41d9e4:	fnsave [ebx+ebp*4-0x15b8ab2b]
  41d9eb:	pop    ebx
  41d9ec:	cmp    edx,ebp
  41d9ee:	cmp    al,BYTE PTR [ecx]
  41d9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9f1:	cmp    DWORD PTR [esi-0x2ee7167c],0x75278034
  41d9fb:	das    
  41d9fc:	icebp  
  41d9fd:	xor    ebx,DWORD PTR [edx]
  41d9ff:	xchg   ebp,eax
  41da00:	and    BYTE PTR [edx],cl
  41da02:	push   0x5c
  41da04:	(bad)  
  41da05:	in     al,dx
  41da06:	inc    ebp
  41da07:	mov    ch,ch
  41da09:	xchg   DWORD PTR [eax-0x16],eax
  41da0c:	clc    
  41da0d:	or     eax,0xfada6ba7
  41da12:	cli    
  41da13:	mov    ds:0x8e628a3a,al
  41da18:	out    0x61,eax
  41da1a:	inc    ebp
  41da1b:	test   DWORD PTR [ecx],0x30bb80a7
  41da21:	psrld  mm3,QWORD PTR [ebx+0x2c]
  41da25:	xor    eax,0x3ded7ac4
  41da2a:	or     ebp,ebx
  41da2c:	mov    bl,BYTE PTR [esi-0x436ad1d9]
  41da32:	inc    ebp
  41da33:	sub    al,BYTE PTR ds:0x539a6538
  41da39:	aam    0x7b
  41da3b:	loopne 0x41d9c5
  41da3d:	xor    BYTE PTR [esi+0x14],bh
  41da40:	std    
  41da41:	test   al,0x6
  41da43:	xor    ebp,0x7e
  41da46:	les    esp,FWORD PTR [edx+0x18]
  41da49:	cmp    dh,ah
  41da4b:	test   DWORD PTR [edi],ebp
  41da4d:	lock out dx,al
  41da4f:	mov    cl,0xfa
  41da51:	loope  0x41da95
  41da53:	mov    bl,0x50
  41da55:	sub    al,0xfe
  41da57:	and    cl,bh
  41da59:	sub    DWORD PTR [esi-0x51],esi
  41da5c:	or     DWORD PTR [edx-0xcef5952],edi
  41da62:	xor    BYTE PTR [ebx-0x362effe2],ah
  41da68:	cli    
  41da69:	mov    ah,0xdc
  41da6b:	fwait
  41da6c:	data16 outs dx,BYTE PTR ds:[esi]
  41da6e:	push   eax
  41da6f:	xchg   DWORD PTR [edi-0x47],ebp
  41da72:	lds    ebx,FWORD PTR [ebp*2+0x2f24f9e6]
  41da79:	in     al,0xa0
  41da7b:	mov    ds:0xa34d60fb,eax
  41da80:	push   esi
  41da81:	test   BYTE PTR [bx+si-0x5ee],ch
  41da86:	fsub   QWORD PTR [esi]
  41da88:	lahf   
  41da89:	into   
  41da8a:	loope  0x41daec
  41da8c:	adc    DWORD PTR [ecx],esi
  41da8e:	pop    ss
  41da8f:	xchg   ebx,eax
  41da90:	arpl   WORD PTR [ebp-0x68d40b88],si
  41da96:	cmp    ebx,DWORD PTR [edi]
  41da98:	sbb    al,0xe6
  41da9a:	inc    ebp
  41da9b:	dec    edi
  41da9c:	push   esi
  41da9d:	fnstcw WORD PTR [edx]
  41da9f:	test   BYTE PTR [edi],ch
  41daa1:	clc    
  41daa2:	xchg   ecx,eax
  41daa3:	or     dh,al
  41daa5:	jmp    0xc218:0x349e234a
  41daac:	mov    ds:0x1f6031b,eax
  41dab1:	adc    ah,BYTE PTR [esi-0x14]
  41dab4:	pop    esi
  41dab5:	xor    edx,DWORD PTR [ecx-0x5f]
  41dab8:	outs   dx,BYTE PTR ds:[esi]
  41dab9:	cmp    eax,0xe2271fe8
  41dabe:	sub    DWORD PTR [ebp+0x29bc3598],ebx
  41dac4:	nop
  41dac5:	mov    dl,BYTE PTR [edx-0x3c]
  41dac8:	xchg   ecx,eax
  41dac9:	xor    eax,0x16870f0c
  41dace:	sti    
  41dacf:	mov    ebp,0x3ec6263a
  41dad4:	or     ch,BYTE PTR [eax]
  41dad6:	xor    al,0xdb
  41dad8:	pop    ds
  41dad9:	stos   BYTE PTR es:[edi],al
  41dada:	int    0x75
  41dadc:	push   cs
  41dadd:	mov    ah,0x48
  41dadf:	in     al,0xa4
  41dae1:	pop    ecx
  41dae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae3:	out    0x62,eax
  41dae5:	sub    ebx,ecx
  41dae7:	test   DWORD PTR [esi],esp
  41dae9:	fcom   st(3)
  41daeb:	inc    ecx
  41daec:	enter  0x1570,0x5b
  41daf0:	mov    ?,WORD PTR [ebp+0x37f4b187]
  41daf6:	out    0xce,eax
  41daf8:	ins    BYTE PTR es:[edi],dx
  41daf9:	add    eax,esi
  41dafb:	xchg   edx,eax
  41dafc:	mov    bh,0x27
  41dafe:	icebp  
  41daff:	push   esi
  41db00:	jne    0x41dacb
  41db02:	das    
  41db03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db04:	xchg   ebx,ecx
  41db06:	out    dx,eax
  41db07:	sbb    eax,DWORD PTR [ebp-0x9c5875c]
  41db0d:	loop   0x41dae4
  41db0f:	cmp    BYTE PTR [esi],ah
  41db11:	sbb    dh,ch
  41db13:	jge    0x41db34
  41db15:	addr16 pop ss
  41db17:	lgs    esi,FWORD PTR [ecx+0x419b8814]
  41db1e:	push   esi
  41db1f:	xchg   ah,al
  41db21:	mov    DWORD PTR [ecx],0xc7baa5eb
  41db27:	sub    bh,BYTE PTR [ebp+0x60ab2807]
  41db2d:	mov    ch,0x6d
  41db2f:	and    cl,BYTE PTR [edi-0x1c]
  41db32:	mov    ecx,0x6dc6b638
  41db37:	das    
  41db38:	es in  al,dx
  41db3a:	sbb    BYTE PTR [edx+0x7e8eb9e5],ah
  41db40:	(bad)  
  41db41:	mov    ch,0x91
  41db43:	dec    esp
  41db44:	adc    edx,DWORD PTR [eax+0x13]
  41db47:	inc    edi
  41db48:	adc    dh,BYTE PTR [ebp+0x3e]
  41db4b:	mov    ah,0xac
  41db4d:	or     eax,0xb53a1409
  41db52:	icebp  
  41db53:	sbb    BYTE PTR [edi],ch
  41db55:	gs (bad) 
  41db57:	mov    edx,0x5bb8b55f
  41db5c:	inc    eax
  41db5d:	leave  
  41db5e:	adc    eax,0x45fa77e9
  41db63:	push   ecx
  41db64:	scas   eax,DWORD PTR es:[edi]
  41db65:	xor    BYTE PTR [eax+0x4b],dh
  41db68:	xor    ebp,DWORD PTR [eax+ebx*4+0x190aa5be]
  41db6f:	and    edx,DWORD PTR [eax]
  41db71:	mov    dh,0x5b
  41db73:	lods   al,BYTE PTR ds:[esi]
  41db74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db75:	xchg   esi,eax
  41db76:	mov    ecx,0x2740b97d
  41db7b:	xchg   sp,ax
  41db7d:	mov    ch,0x7d
  41db7f:	mov    esi,0x3b8fa385
  41db84:	and    bh,BYTE PTR [edi]
  41db86:	les    ecx,FWORD PTR [edi+0x1c]
  41db89:	inc    edi
  41db8a:	jg     0x41dbea
  41db8c:	pop    esp
  41db8d:	shl    DWORD PTR [ebp+0x4b],cl
  41db90:	daa    
  41db91:	sub    DWORD PTR [eax+eiz*4-0x17],eax
  41db95:	pop    edi
  41db96:	jmp    0x41db3a
  41db98:	in     al,dx
  41db99:	adc    DWORD PTR [eax+0x2a181790],esp
  41db9f:	stos   DWORD PTR es:[edi],eax
  41dba0:	mov    ds:0xf6ddac1c,al
  41dba5:	mov    BYTE PTR [edx-0x4054d0bd],al
  41dbab:	xor    DWORD PTR [ebx+esi*8-0x3b],ecx
  41dbaf:	sub    BYTE PTR [ecx+ecx*2+0x5],ah
  41dbb3:	xchg   ecx,eax
  41dbb4:	fs and eax,0xe8330bc6
  41dbba:	test   eax,0x64a68524
  41dbbf:	or     ebp,DWORD PTR fs:[ecx+0x734aa303]
  41dbc6:	jnp    0x41dc40
  41dbc8:	mov    ds:0x14c3caa0,al
  41dbcd:	rcl    ch,cl
  41dbcf:	das    
  41dbd0:	clc    
  41dbd1:	adc    dl,BYTE PTR [edi]
  41dbd3:	push   ecx
  41dbd4:	xchg   esi,eax
  41dbd5:	gs jbe 0x41dbeb
  41dbd8:	ins    DWORD PTR es:[edi],dx
  41dbd9:	bswap  esp
  41dbdb:	bound  edi,QWORD PTR [esi]
  41dbdd:	shr    DWORD PTR [eax-0xd],0x26
  41dbe1:	stos   DWORD PTR es:[edi],eax
  41dbe2:	inc    ecx
  41dbe3:	xchg   esi,eax
  41dbe4:	cdq    
  41dbe5:	xchg   esi,eax
  41dbe6:	stos   DWORD PTR es:[edi],eax
  41dbe7:	sbb    dh,BYTE PTR [eax+ebx*4-0x23]
  41dbeb:	out    0x7,eax
  41dbed:	lock test DWORD PTR [eax+0x5150955b],esp
  41dbf4:	cld    
  41dbf5:	inc    ecx
  41dbf6:	lds    edi,FWORD PTR ds:0x65530088
  41dbfc:	fadd   st,st(5)
  41dbfe:	mov    ch,0x23
  41dc00:	dec    eax
  41dc01:	xor    eax,0x538c6463
  41dc06:	cli    
  41dc07:	adc    dl,BYTE PTR [ecx]
  41dc09:	push   es
  41dc0a:	inc    esp
  41dc0b:	loopne 0x41dc48
  41dc0d:	dec    eax
  41dc0e:	inc    edi
  41dc0f:	bound  esp,QWORD PTR [esi+0x24]
  41dc12:	dec    ecx
  41dc13:	dec    esi
  41dc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc15:	scas   eax,DWORD PTR es:[edi]
  41dc16:	and    esp,DWORD PTR [ecx]
  41dc18:	lds    esi,FWORD PTR [edi+0x1fbd7745]
  41dc1e:	cmp    al,BYTE PTR [edi-0x5a]
  41dc21:	js     0x41dc72
  41dc23:	push   edx
  41dc24:	lods   eax,DWORD PTR ds:[esi]
  41dc25:	test   ecx,ecx
  41dc27:	inc    esi
  41dc28:	ja     0x41dbdf
  41dc2a:	pop    edi
  41dc2b:	pop    ecx
  41dc2c:	xchg   ecx,eax
  41dc2d:	inc    ecx
  41dc2e:	aam    0x8c
  41dc30:	scas   al,BYTE PTR es:[edi]
  41dc31:	pop    es
  41dc32:	aas    
  41dc33:	adc    esi,edx
  41dc35:	adc    BYTE PTR [edx-0xa71134e],al
  41dc3b:	ror    BYTE PTR [ecx-0x4b],cl
  41dc3e:	in     al,0xdf
  41dc40:	jns    0x41dbcd
  41dc42:	sahf   
  41dc43:	adc    edx,esi
  41dc45:	adc    al,0x46
  41dc47:	cwde   
  41dc48:	add    bl,BYTE PTR ds:0xed4c87ce
  41dc4e:	in     eax,0xf5
  41dc50:	mov    ebx,0x1c2300f9
  41dc55:	mov    ?,WORD PTR [ebp-0x53fe5938]
  41dc5b:	mov    ds:0xf0d25e0a,al
  41dc60:	push   ebp
  41dc61:	mov    ch,0x9d
  41dc63:	jne    0x41dc14
  41dc65:	out    0x35,eax
  41dc67:	ret    
  41dc68:	cs sbb al,dh
  41dc6b:	jnp    0x41dc16
  41dc6d:	(bad)  
  41dc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc70:	loop   0x41dc62
  41dc72:	popf   
  41dc73:	shr    BYTE PTR [esi],cl
  41dc75:	jmp    0x341ce03f
  41dc7a:	call   0xb7860c17
  41dc7f:	adc    DWORD PTR [edi],0x24
  41dc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc83:	mov    ecx,eax
  41dc85:	sub    al,0x98
  41dc87:	lods   eax,DWORD PTR ds:[esi]
  41dc88:	xor    DWORD PTR ds:0x1b655750,0x497b1597
  41dc92:	sub    ebp,eax
  41dc94:	in     al,0xf3
  41dc96:	outs   dx,BYTE PTR ds:[esi]
  41dc97:	adc    DWORD PTR [edx-0x17],ecx
  41dc9a:	xor    BYTE PTR [ebx+ecx*4-0x21],bl
  41dc9e:	test   al,0xd6
  41dca0:	ss mov bh,0x45
  41dca3:	push   ebx
  41dca4:	mov    ds:0xd3ca6884,al
  41dca9:	mov    ebx,0x1d368501
  41dcae:	xchg   BYTE PTR [edx+0x55d8df7f],ah
  41dcb4:	mov    ah,0x1f
  41dcb6:	sub    BYTE PTR [ebp+0x33dbe642],dh
  41dcbc:	xor    BYTE PTR [edi+0x3f9ebd19],0x47
  41dcc3:	cmp    al,0x36
  41dcc5:	mov    ch,0x9c
  41dcc7:	push   0xfffffffd
  41dcc9:	mov    esi,0x53ef981d
  41dcce:	ret    0xf687
  41dcd1:	aas    
  41dcd2:	jg     0x41dd2d
  41dcd4:	in     eax,0x7c
  41dcd6:	adc    BYTE PTR ds:0x3025351e,ah
  41dcdc:	pop    esp
  41dcdd:	mov    esi,ebp
  41dcdf:	imul   ebp,ecx,0x2db52eca
  41dce5:	inc    DWORD PTR [ebp-0x43]
  41dce8:	fdivr  QWORD PTR [edx-0x4f6e5907]
  41dcee:	and    al,0x0
  41dcf0:	inc    BYTE PTR [edi+0x26]
  41dcf3:	mov    ds:0x4dbec37b,eax
  41dcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf9:	shr    DWORD PTR [ebp+0x73],cl
  41dcfc:	and    al,0x9d
  41dcfe:	(bad)  
  41dcff:	(bad)  
  41dd00:	addr16 mov ch,0x93
  41dd03:	xchg   DWORD PTR [esi+ecx*1+0x74],edi
  41dd07:	out    dx,eax
  41dd08:	es mov ch,0xc2
  41dd0c:	out    dx,al
  41dd0d:	add    al,0x29
  41dd0f:	ja     0x41dd16
  41dd11:	sbb    eax,DWORD PTR ds:0xf2d3130f
  41dd17:	and    dl,ah
  41dd19:	cmc    
  41dd1a:	popa   
  41dd1b:	sub    BYTE PTR [esi-0x51602f78],ah
  41dd21:	inc    ecx
  41dd22:	jnp    0x41dccb
  41dd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd25:	xor    eax,0x61cca4db
  41dd2a:	stc    
  41dd2b:	mov    WORD PTR [ebx-0x74],ds
  41dd2e:	lea    ecx,[ebx-0x5a]
  41dd31:	inc    ebp
  41dd32:	inc    eax
  41dd33:	mov    bh,BYTE PTR [edx]
  41dd35:	inc    ebx
  41dd36:	pushf  
  41dd37:	adc    DWORD PTR [ebp-0x4b],edx
  41dd3a:	xchg   ebp,eax
  41dd3b:	jg     0x41ddae
  41dd3d:	xor    al,0xc4
  41dd3f:	fstp   DWORD PTR [ecx]
  41dd41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd42:	inc    ebp
  41dd43:	test   al,0xb0
  41dd45:	sti    
  41dd46:	xchg   ebx,eax
  41dd47:	sub    cl,BYTE PTR [edx]
  41dd49:	mov    al,0xfc
  41dd4b:	stos   DWORD PTR es:[edi],eax
  41dd4c:	fwait
  41dd4d:	rcl    DWORD PTR [edi+ebx*2+0x32],0x69
  41dd52:	in     eax,dx
  41dd53:	mov    ds:0x7c7d9080,al
  41dd58:	mov    es,WORD PTR [ebx-0x3d9d5ca8]
  41dd5e:	push   0x3fc4a62a
  41dd63:	sub    esi,DWORD PTR ss:[ebp+0x8]
  41dd67:	in     eax,0x8f
  41dd69:	xchg   esi,eax
  41dd6a:	les    ebx,FWORD PTR [eax]
  41dd6c:	out    0x2,al
  41dd6e:	xor    bh,BYTE PTR [ebx]
  41dd70:	mov    ds:0x875b1a1a,al
  41dd75:	ins    BYTE PTR es:[edi],dx
  41dd76:	sti    
  41dd77:	jg     0x41dd70
  41dd79:	add    eax,0xa80c62ec
  41dd7e:	or     BYTE PTR [ebp-0x32],cl
  41dd81:	adc    bh,BYTE PTR [ebx+eiz*4]
  41dd84:	mov    edi,0x2612d75b
  41dd89:	leave  
  41dd8a:	push   0xffffff93
  41dd8c:	test   DWORD PTR [edx+0x3561aeed],esi
  41dd92:	loope  0x41dd9d
  41dd94:	mov    ah,0x75
  41dd96:	stc    
  41dd97:	iret   
  41dd98:	add    bh,al
  41dd9a:	inc    ebp
  41dd9b:	dec    ecx
  41dd9c:	loope  0x41dd37
  41dd9e:	mov    al,ds:0x370e4864
  41dda3:	and    al,0x69
  41dda5:	in     eax,dx
  41dda6:	test   DWORD PTR [ebp-0x6574c075],eax
  41ddac:	cmc    
  41ddad:	or     DWORD PTR [edi],edi
  41ddaf:	mov    ds:0xde7f77c1,al
  41ddb4:	adc    esp,edx
  41ddb6:	in     eax,dx
  41ddb7:	fwait
  41ddb8:	ja     0x41dd83
  41ddba:	jne    0x41de22
  41ddbc:	and    dh,BYTE PTR [ebp+0xacdbd5c]
  41ddc2:	aas    
  41ddc3:	xor    eax,DWORD PTR [ebp+0x6d19e155]
  41ddc9:	mov    bh,0x45
  41ddcb:	cmp    dl,bh
  41ddcd:	inc    esi
  41ddce:	call   0xacc612a6
  41ddd3:	inc    esp
  41ddd4:	jmp    0x41ddaa
  41ddd6:	sbb    BYTE PTR [ebx],ah
  41ddd8:	sub    BYTE PTR [edi+0xa],0x22
  41dddc:	es mov dh,0x7
  41dddf:	ss cli 
  41dde1:	shr    BYTE PTR [ecx],0x79
  41dde4:	xchg   dl,bh
  41dde6:	clc    
  41dde7:	mov    ds:0x231324a0,eax
  41ddec:	shl    DWORD PTR [edi],1
  41ddee:	sub    bl,bl
  41ddf0:	es push ebx
  41ddf2:	das    
  41ddf3:	dec    ebp
  41ddf4:	mov    ebp,0x3a992a0f
  41ddf9:	xor    eax,0x8a9ecdfb
  41ddfe:	xchg   ebp,eax
  41ddff:	jl     0x41ddca
  41de01:	push   edi
  41de02:	mov    BYTE PTR [eax-0x6e160395],ah
  41de08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de09:	adc    eax,0x2f5616ee
  41de0e:	call   0xc139:0x7768b0fe
  41de15:	loope  0x41dd9d
  41de17:	fwait
  41de18:	jbe    0x41de84
  41de1a:	call   0xc6655a75
  41de1f:	and    al,0x31
  41de21:	popa   
  41de22:	push   ebp
  41de23:	pusha  
  41de24:	jle    0x41de56
  41de26:	sub    BYTE PTR [ebx+0x231f8a0d],dl
  41de2c:	out    0x18,al
  41de2e:	pusha  
  41de2f:	popf   
  41de30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de32:	jns    0x41ddd4
  41de34:	arpl   WORD PTR [esi-0x8003f78],si
  41de3a:	les    edi,FWORD PTR [ebp-0x4c]
  41de3d:	out    dx,al
  41de3e:	call   0x89bd24e5
  41de43:	jo     0x41de6b
  41de45:	ret    
  41de46:	clc    
  41de47:	(bad)  
  41de48:	pop    edx
  41de49:	fwait
  41de4a:	xchg   ebp,eax
  41de4b:	mov    esi,0x1ca4b59d
  41de50:	fmul   QWORD PTR [edx-0xf]
  41de53:	add    BYTE PTR [edi+0x3],bl
  41de56:	mov    eax,0x830f3467
  41de5b:	inc    eax
  41de5c:	mov    edx,0xb2b49eb9
  41de61:	mov    bh,0xf8
  41de63:	and    cl,BYTE PTR [edi]
  41de65:	nop
  41de66:	cmp    al,0x99
  41de68:	sahf   
  41de69:	sbb    edx,DWORD PTR [edx-0x3e]
  41de6c:	jp     0x41dec3
  41de6e:	test   ch,ch
  41de70:	inc    esi
  41de71:	and    eax,0x37970b30
  41de76:	jmp    0x36bd:0x3415c5a2
  41de7d:	out    dx,eax
  41de7e:	mov    dh,0x90
  41de80:	shl    BYTE PTR [eax],1
  41de82:	out    0xeb,al
  41de84:	dec    edi
  41de85:	loope  0x41dec5
  41de87:	aam    0xbc
  41de89:	pop    ss
  41de8a:	mov    eax,ds:0xfdc06632
  41de8f:	mov    WORD PTR [eax],cs
  41de91:	push   ss
  41de92:	pop    esp
  41de93:	sbb    DWORD PTR [esi],esp
  41de95:	mov    ah,0x4
  41de97:	xchg   bh,bh
  41de99:	xchg   edx,eax
  41de9a:	jl     0x41def7
  41de9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de9d:	es jae 0x41de5d
  41dea0:	sub    eax,DWORD PTR [esi]
  41dea2:	pop    es
  41dea3:	imul   edi,esp,0x15
  41dea6:	clc    
  41dea7:	mov    ds:0x3b45eedc,al
  41deac:	shl    DWORD PTR [esi+0x2d],1
  41deaf:	adc    DWORD PTR [edx+0x64],ecx
  41deb2:	and    eax,DWORD PTR [eax+0x73]
  41deb5:	clc    
  41deb6:	push   ebx
  41deb7:	mov    ds:0x2b3d700d,eax
  41debc:	es sti 
  41debe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41debf:	ins    BYTE PTR es:[edi],dx
  41dec0:	push   edi
  41dec1:	and    edx,edx
  41dec3:	xchg   esp,eax
  41dec4:	xor    ax,0xd2ec
  41dec8:	(bad)  
  41dec9:	sti    
  41deca:	ins    DWORD PTR es:[edi],dx
  41decb:	fcmovnbe st,st(2)
  41decd:	add    al,BYTE PTR [esi-0x13]
  41ded0:	call   0xf420:0xd04c833c
  41ded7:	xchg   edx,eax
  41ded8:	or     al,0xab
  41deda:	dec    DWORD PTR [edi-0x5d42d041]
  41dee0:	jo     0x41deaf
  41dee2:	add    BYTE PTR [esi+0x31],ah
  41dee5:	sti    
  41dee6:	inc    ebp
  41dee7:	sub    dl,cl
  41dee9:	popf   
  41deea:	ja     0x41dedc
  41deec:	(bad)  
  41deed:	(bad)  
  41deee:	aas    
  41deef:	push   ebx
  41def0:	jl     0x41deea
  41def2:	fsub   QWORD PTR [eax+0xb30d55d]
  41def8:	fcomp  DWORD PTR [ecx]
  41defa:	(bad)  
  41defb:	lea    edx,[edx-0x65]
  41defe:	lock pop ecx
  41df00:	push   es
  41df01:	dec    ebx
  41df02:	loop   0x41de97
  41df04:	test   al,0xb
  41df06:	jmp    0x41df2a
  41df08:	mov    dh,0xf8
  41df0a:	mov    BYTE PTR [esi],al
  41df0c:	es retf 0xa12f
  41df10:	xadd   BYTE PTR [eax-0x2a],bl
  41df14:	jp     0x41decb
  41df16:	xchg   esp,eax
  41df17:	shr    BYTE PTR [ebx-0x4c04cb59],cl
  41df1d:	lahf   
  41df1e:	ret    0x987c
  41df21:	add    bl,dh
  41df23:	inc    ebx
  41df24:	xchg   BYTE PTR [ecx+0x34644e82],ch
  41df2a:	aas    
  41df2b:	inc    edx
  41df2c:	shr    DWORD PTR [edx-0x2e],0x46
  41df30:	(bad)  
  41df31:	and    bl,BYTE PTR [esi-0x7c67d96e]
  41df37:	lea    edi,[ebx]
  41df39:	sbb    edi,DWORD PTR [edx-0x14]
  41df3c:	jo     0x41df73
  41df3e:	daa    
  41df3f:	lahf   
  41df40:	aad    0xe6
  41df42:	fwait
  41df43:	or     DWORD PTR [esi],ebx
  41df45:	and    eax,esi
  41df47:	sub    al,0x63
  41df49:	xor    al,0x5d
  41df4b:	mov    cl,BYTE PTR [ebx-0x54dc3899]
  41df51:	jl     0x41df83
  41df53:	mov    ds:0xed5c954e,eax
  41df58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df59:	cld    
  41df5a:	jmp    0x172351e2
  41df5f:	int3   
  41df60:	dec    esi
  41df61:	xor    eax,0xad2b8ad6
  41df66:	push   ss
  41df67:	adc    bh,BYTE PTR [ebx+ecx*2]
  41df6a:	mov    bh,0xde
  41df6c:	or     dh,bh
  41df6e:	push   es
  41df6f:	jecxz  0x41df3c
  41df71:	and    eax,0xb41ea2d2
  41df76:	xor    cl,bh
  41df78:	push   ebp
  41df79:	xchg   ebx,eax
  41df7a:	cmp    al,0x23
  41df7c:	out    dx,eax
  41df7d:	rol    ch,cl
  41df7f:	mov    edi,0xee16727c
  41df84:	in     al,0x96
  41df86:	sub    dl,BYTE PTR [edi-0x2a]
  41df89:	lods   al,BYTE PTR ds:[esi]
  41df8a:	mov    esi,0x98e0919
  41df8f:	arpl   WORD PTR [ebx],bp
  41df91:	sub    dh,al
  41df93:	pop    ecx
  41df94:	js     0x41df6d
  41df96:	js     0x41df45
  41df98:	push   esp
  41df99:	mov    ecx,0x976f8572
  41df9e:	sbb    al,0xa3
  41dfa0:	scas   eax,DWORD PTR es:[edi]
  41dfa1:	(bad)  
  41dfa2:	mov    bh,dl
  41dfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfa5:	adc    DWORD PTR [esi-0x1f384a9e],eax
  41dfab:	div    BYTE PTR [esi*1+0x1a1d3ff8]
  41dfb2:	repz push 0xffffffe1
  41dfb5:	sar    BYTE PTR [esi+0x437ec43f],0xd1
  41dfbc:	lahf   
  41dfbd:	into   
  41dfbe:	mov    ch,0xa2
  41dfc0:	mul    bl
  41dfc2:	je     0x41df56
  41dfc4:	mov    edi,0x711fbfdc
  41dfc9:	lea    esp,[ecx]
  41dfcb:	in     eax,dx
  41dfcc:	inc    edx
  41dfcd:	sub    DWORD PTR [esi+0x33],eax
  41dfd0:	pushf  
  41dfd1:	sahf   
  41dfd2:	imul   ebp,DWORD PTR [esi],0xb6ca22e4
  41dfd8:	mov    ch,0xdd
  41dfda:	jecxz  0x41dffe
  41dfdc:	or     BYTE PTR [ebx+0xa26e2f5],0x6e
  41dfe3:	add    DWORD PTR [eax+ebp*1-0x4ac41c00],0x65
  41dfeb:	jmp    0x2a15:0x8febc9e9
  41dff2:	inc    esi
  41dff3:	pushf  
  41dff4:	pop    esi
  41dff5:	or     BYTE PTR [ebx-0x5],dh
  41dff8:	imul   ebp,DWORD PTR [ebx+0x21d0452f],0x54
  41dfff:	mov    ds:0xd141f77b,eax
  41e004:	and    eax,0x701dd778
  41e009:	inc    eax
  41e00a:	cli    
  41e00b:	ss out dx,al
  41e00d:	pop    ss
  41e00e:	popa   
  41e00f:	xor    bp,WORD PTR [edi]
  41e012:	mov    DWORD PTR [edx],esp
  41e014:	test   esi,esp
  41e016:	add    al,0xc2
  41e018:	test   DWORD PTR [esi+eax*2],0xa39cc7ab
  41e01f:	push   ecx
  41e020:	and    bl,bl
  41e022:	rol    ah,cl
  41e024:	mov    eax,ds:0x58a2db7a
  41e029:	test   DWORD PTR [edi+0x66],0x5645f0e9
  41e030:	mov    edx,0xcb2da252
  41e035:	mov    ebp,0x58446c64
  41e03a:	std    
  41e03b:	mov    ds:0x3ff4fd64,al
  41e040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e041:	jb     0x41e072
  41e043:	sbb    edx,esp
  41e045:	fsub   DWORD PTR [edi-0x70]
  41e048:	imul   ebp,DWORD PTR [eax],0xa7b55f4b
  41e04e:	fbld   TBYTE PTR [edx]
  41e050:	(bad)
  41e055:	xchg   esi,eax
  41e056:	inc    ebx
  41e057:	inc    edx
  41e058:	add    dh,BYTE PTR [esi+ebp*4]
  41e05b:	inc    esp
  41e05c:	mov    eax,0xa7b80c33
  41e061:	and    al,0xc0
  41e063:	sbb    al,0x41
  41e065:	test   eax,0x1b4efb98
  41e06a:	sub    DWORD PTR [esi-0x51],esp
  41e06d:	sbb    BYTE PTR [ecx-0x6c],al
  41e070:	pushf  
  41e071:	lods   al,BYTE PTR ds:[esi]
  41e072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e073:	aas    
  41e074:	xlat   BYTE PTR ds:[ebx]
  41e075:	adc    al,0x16
  41e077:	fimul  DWORD PTR [esi+0x4ee6b731]
  41e07d:	lock inc ebp
  41e07f:	pop    es
  41e080:	ret    0x6db8
  41e083:	pop    edi
  41e084:	popf   
  41e085:	xor    eax,0xb472e53d
  41e08a:	xor    al,0xd9
  41e08c:	outs   dx,BYTE PTR ds:[esi]
  41e08d:	sub    DWORD PTR [eax+ebx*4-0x423a340b],esi
  41e094:	cmp    DWORD PTR [edx+0x75],esp
  41e097:	js     0x41e112
  41e099:	xor    eax,0x96110d63
  41e09e:	jns    0x41e026
  41e0a0:	and    BYTE PTR [edx],cl
  41e0a2:	inc    esi
  41e0a3:	add    DWORD PTR [esi],0xb541d182
  41e0a9:	(bad)  
  41e0aa:	fcmove st,st(1)
  41e0ac:	dec    ebx
  41e0ad:	dec    ebx
  41e0ae:	add    DWORD PTR [ebx],esp
  41e0b0:	and    eax,0x25ce8a2e
  41e0b5:	or     al,BYTE PTR [ebx]
  41e0b7:	sub    esi,ebp
  41e0b9:	mov    dh,0xa0
  41e0bb:	xchg   DWORD PTR [esi-0x59d3af71],ebx
  41e0c1:	test   al,0xa3
  41e0c3:	inc    eax
  41e0c4:	(bad)  
  41e0c5:	adc    al,0x27
  41e0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c9:	das    
  41e0ca:	xor    BYTE PTR [edi-0x25],bh
  41e0cd:	daa    
  41e0ce:	sbb    ecx,DWORD PTR [ebx+0x28]
  41e0d1:	lds    ebp,FWORD PTR [ecx]
  41e0d3:	mov    edi,0x23262593
  41e0d8:	ss bnd jnp 0x41e07b
  41e0dc:	es inc edi
  41e0de:	jbe    0x41e147
  41e0e0:	out    0xb2,eax
  41e0e2:	push   0x7cac5b0a
  41e0e7:	jo     0x41e12c
  41e0e9:	mov    ch,0x87
  41e0eb:	ficom  WORD PTR [ebx+ebx*8-0x53]
  41e0ef:	xor    DWORD PTR [esi],ebp
  41e0f1:	sub    BYTE PTR [esi+0x7a],al
  41e0f4:	sbb    DWORD PTR [ecx+eax*1],ebx
  41e0f7:	xor    ecx,esi
  41e0f9:	leave  
  41e0fa:	fimul  DWORD PTR [ecx+0x231f1826]
  41e100:	fcom   DWORD PTR [esi+0x65]
  41e103:	mov    ah,BYTE PTR [esi-0xb88a9e3]
  41e109:	pop    edi
  41e10a:	inc    ebx
  41e10b:	adc    edi,DWORD PTR [ecx+0x35]
  41e10e:	ret    0x9a77
  41e111:	xchg   ebx,eax
  41e112:	test   DWORD PTR [ebx+ecx*8+0x6440c61f],ecx
  41e119:	mov    edi,ebp
  41e11b:	call   0xa023ae47
  41e120:	xor    DWORD PTR [ecx],0xffffff95
  41e123:	xchg   esp,eax
  41e124:	xor    eax,0xe643541e
  41e129:	out    dx,eax
  41e12a:	pop    es
  41e12b:	retf   
  41e12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12d:	push   0x57
  41e12f:	ins    BYTE PTR es:[edi],dx
  41e130:	push   ss
  41e131:	lea    edx,[edx]
  41e133:	dec    esi
  41e134:	push   ds
  41e135:	push   ss
  41e136:	pop    ds
  41e137:	cs pop esp
  41e139:	mov    dh,0x7e
  41e13b:	push   eax
  41e13c:	xchg   ebx,eax
  41e13d:	hlt    
  41e13e:	jb     0x41e1a0
  41e140:	adc    al,0xdb
  41e142:	fsub   QWORD PTR [edx]
  41e144:	mov    dh,0x10
  41e146:	inc    esi
  41e147:	pop    edx
  41e148:	mov    ecx,eax
  41e14a:	shl    DWORD PTR [eax+0x57840a08],0x79
  41e151:	scas   eax,DWORD PTR es:[edi]
  41e152:	sbb    al,0x23
  41e154:	add    BYTE PTR [edi-0x34],ah
  41e157:	test   BYTE PTR [esi-0x51],bl
  41e15a:	les    esp,FWORD PTR [ebx+0x58]
  41e15d:	fnstsw WORD PTR [ecx+ebx*8]
  41e160:	xor    BYTE PTR [ebp-0x7e],ch
  41e163:	out    0x43,eax
  41e165:	cmp    BYTE PTR [eax],ch
  41e167:	mov    ds:0x22e08519,al
  41e16c:	stc    
  41e16d:	ret    0x4c88
  41e170:	adc    BYTE PTR [esp+edx*2],0x98
  41e174:	and    al,0xa6
  41e176:	mov    edx,0xd9f1a422
  41e17b:	pop    eax
  41e17c:	cdq    
  41e17d:	xchg   ecx,eax
  41e17e:	mov    ecx,DWORD PTR [edi+0x68]
  41e181:	xor    eax,0x4ea2413e
  41e186:	mov    eax,ds:0x44930b2a
  41e18b:	sbb    al,0x25
  41e18d:	pop    esp
  41e18e:	(bad)  
  41e18f:	pop    esp
  41e190:	test   BYTE PTR [ebp-0x29],bl
  41e193:	cmp    DWORD PTR [esi-0x3],esp
  41e196:	daa    
  41e197:	hlt    
  41e198:	fwait
  41e199:	js     0x41e1af
  41e19b:	pushf  
  41e19c:	out    dx,al
  41e19d:	(bad)  
  41e19f:	ret    0x92c
  41e1a2:	xchg   ebx,eax
  41e1a3:	lahf   
  41e1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a5:	aas    
  41e1a6:	in     al,dx
  41e1a7:	push   edx
  41e1a8:	xchg   edi,eax
  41e1a9:	cli    
  41e1aa:	mov    esi,0xdb35943b
  41e1af:	rcr    dl,1
  41e1b1:	adc    ah,bh
  41e1b3:	sub    DWORD PTR ds:0xfdeb45cf,0x828902db
  41e1bd:	xor    cl,BYTE PTR [ecx]
  41e1bf:	jns    0x41e209
  41e1c1:	pop    ds
  41e1c2:	cmp    BYTE PTR [ebx],ah
  41e1c4:	and    eax,0x9f1c1b17
  41e1c9:	xor    al,0x72
  41e1cb:	xor    ecx,DWORD PTR [ebp+eiz*4-0x44c6b464]
  41e1d2:	int3   
  41e1d3:	and    eax,0xa30c3b0d
  41e1d8:	xchg   esi,eax
  41e1d9:	(bad)  
  41e1da:	je     0x41e16d
  41e1dc:	es ja  0x41e1c3
  41e1df:	dec    edx
  41e1e0:	adc    bh,bh
  41e1e2:	fist   WORD PTR [edx+ebp*2]
  41e1e5:	xor    eax,0x2ab2b1f
  41e1ea:	cs je  0x41e26c
  41e1ed:	xor    al,BYTE PTR [esi+0x4]
  41e1f0:	jle    0x41e248
  41e1f2:	push   ecx
  41e1f3:	in     al,dx
  41e1f4:	rcl    ch,cl
  41e1f6:	ret    
  41e1f7:	push   es
  41e1f8:	lock xchg esi,eax
  41e1fa:	add    al,0x23
  41e1fc:	adc    ebx,esi
  41e1fe:	adc    DWORD PTR [ecx],ebx
  41e200:	mov    eax,es:0xcb986977
  41e206:	(bad)  
  41e207:	out    dx,eax
  41e208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e209:	xor    al,0x9c
  41e20b:	mov    eax,0x32a09d4a
  41e210:	xchg   BYTE PTR [ebp+ebp*8+0x477fa642],ch
  41e217:	ds std 
  41e219:	popf   
  41e21a:	imul   eax,DWORD PTR [esp+eiz*4+0x11],0x8a21eecd
  41e222:	mov    ah,0x15
  41e224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e225:	(bad)
  41e228:	add    edx,ecx
  41e22a:	or     ebp,DWORD PTR [ecx-0x66dea5f6]
  41e230:	test   eax,0x856327c4
  41e235:	pop    edi
  41e236:	add    eax,esp
  41e238:	and    eax,0x92272a5
  41e23d:	sbb    ecx,DWORD PTR [eax-0xd]
  41e240:	(bad)  
  41e241:	dec    edx
  41e242:	scas   eax,DWORD PTR es:[edi]
  41e243:	aaa    
  41e244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e245:	add    bl,ch
  41e247:	and    ebx,edx
  41e249:	(bad)  
  41e24a:	retf   
  41e24b:	dec    edx
  41e24c:	lds    ebp,FWORD PTR [ebp-0x3d7b0561]
  41e252:	xor    eax,0xa8fc437c
  41e257:	xor    eax,DWORD PTR [esi-0x35e888a4]
  41e25d:	jae    0x41e2ca
  41e25f:	sbb    ebp,DWORD PTR [ebx+0x4efc10e1]
  41e265:	sub    eax,0x354e730e
  41e26a:	loope  0x41e29d
  41e26c:	push   0x15
  41e26e:	retf   
  41e26f:	sub    eax,0x2136b47c
  41e274:	add    al,0xb9
  41e276:	test   DWORD PTR [eax],eax
  41e278:	jnp    0x41e2f5
  41e27a:	sti    
  41e27b:	mov    ch,0x71
  41e27d:	xor    eax,0xc3d1908
  41e282:	imul   DWORD PTR [ebp-0x77]
  41e285:	aad    0xa7
  41e287:	mov    ds:0x821b754b,eax
  41e28c:	dec    ecx
  41e28d:	retf   
  41e28e:	imul   esi,DWORD PTR [ecx-0x60],0x42246c35
  41e295:	xor    DWORD PTR [ecx+0x1f],esi
  41e298:	or     dl,BYTE PTR [ebx]
  41e29a:	(bad)  
  41e29b:	mov    eax,ds:0xcb8df559
  41e2a0:	jns    0x41e278
  41e2a2:	pop    eax
  41e2a3:	mov    ecx,0x1b84dab5
  41e2a8:	es aaa 
  41e2aa:	xchg   edx,eax
  41e2ab:	bound  esp,QWORD PTR [ecx+0x266dc9ba]
  41e2b1:	test   eax,0xa4b17d3b
  41e2b6:	and    eax,DWORD PTR [edx+0x46]
  41e2b9:	aaa    
  41e2ba:	or     DWORD PTR [ebp-0x5d242afa],0x2a
  41e2c1:	sbb    DWORD PTR [esi-0x2d],0x6e04cb26
  41e2c8:	push   edi
  41e2c9:	dec    esp
  41e2ca:	inc    edx
  41e2cb:	aas    
  41e2cc:	xor    DWORD PTR ds:0x3ae4a6db,0x7b
  41e2d3:	sti    
  41e2d4:	inc    ebx
  41e2d5:	add    dl,0x3c
  41e2d8:	retf   
  41e2d9:	(bad)  
  41e2dc:	lods   eax,DWORD PTR ds:[esi]
  41e2dd:	(bad)  
  41e2de:	frstor [ebx]
  41e2e0:	daa    
  41e2e1:	xor    eax,0x16ab219b
  41e2e6:	adc    eax,0x3ec3399c
  41e2eb:	repz into 
  41e2ed:	aad    0x13
  41e2ef:	ins    DWORD PTR es:[edi],dx
  41e2f0:	outs   dx,DWORD PTR ds:[esi]
  41e2f1:	mov    bh,0x4f
  41e2f3:	arpl   sp,dx
  41e2f5:	mov    ah,0x14
  41e2f7:	adc    eax,0x4956f81e
  41e2fc:	jp     0x41e33b
  41e2fe:	cmp    eax,0x8f47a6bf
  41e303:	(bad)  
  41e304:	xor    al,al
  41e306:	pop    eax
  41e307:	rcr    BYTE PTR [esi+0x14014eb6],cl
  41e30d:	dec    eax
  41e30e:	dec    esi
  41e30f:	and    esp,esp
  41e311:	mov    esp,0xa1a49b49
  41e316:	in     eax,0xef
  41e318:	rcr    esi,1
  41e31a:	or     BYTE PTR [edi],0x73
  41e31d:	push   esp
  41e31e:	pop    ds
  41e31f:	(bad)  [ecx-0x16]
  41e322:	dec    edi
  41e323:	mov    ds:0xedafa5f8,eax
  41e328:	and    eax,0xd4fb46fd
  41e32d:	mov    cl,0x32
  41e32f:	pop    ss
  41e330:	lods   al,BYTE PTR ds:[esi]
  41e331:	pushf  
  41e332:	mov    bh,0x8e
  41e334:	les    ebp,FWORD PTR [ecx]
  41e336:	add    eax,0x99dab3a3
  41e33b:	sub    esp,DWORD PTR [ebp-0x3d71282]
  41e341:	xchg   ecx,eax
  41e342:	push   esp
  41e343:	arpl   WORD PTR [edi-0x45],sp
  41e346:	fcomp  DWORD PTR [ecx-0x64]
  41e349:	int3   
  41e34a:	out    dx,al
  41e34b:	and    ah,BYTE PTR [ebp-0x3d]
  41e34e:	leave  
  41e34f:	adc    bl,BYTE PTR [esi]
  41e351:	outs   dx,BYTE PTR ds:[esi]
  41e352:	inc    esp
  41e353:	mov    DWORD PTR [edi],0xf938be97
  41e359:	inc    edx
  41e35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e35b:	xor    eax,0x9c79e4c6
  41e360:	daa    
  41e361:	mov    ch,0x7
  41e363:	sar    DWORD PTR [ebx-0x25],1
  41e366:	jbe    0x41e3b4
  41e368:	out    dx,al
  41e369:	mov    ch,0xc6
  41e36b:	mov    esp,DWORD PTR [esi]
  41e36d:	(bad)  
  41e36e:	clc    
  41e36f:	pop    ebx
  41e370:	xor    bh,dh
  41e372:	mov    edi,0xba35705c
  41e377:	pop    es
  41e378:	clc    
  41e379:	lods   eax,DWORD PTR ds:[esi]
  41e37a:	xor    ecx,DWORD PTR [edx+0x8c61612]
  41e380:	stos   DWORD PTR es:[edi],eax
  41e381:	repnz test al,0xe9
  41e384:	int    0x82
  41e386:	stos   BYTE PTR es:[edi],al
  41e387:	inc    ecx
  41e388:	jno    0x41e37e
  41e38a:	repnz and ch,BYTE PTR [esi-0x5b256ad6]
  41e391:	(bad)  
  41e392:	iret   
  41e393:	stc    
  41e394:	dec    esp
  41e395:	inc    esi
  41e396:	mov    eax,0x68d1046c
  41e39b:	dec    ebp
  41e39c:	les    ebp,FWORD PTR [ebp+esi*8+0xe8e3041]
  41e3a3:	and    ebp,DWORD PTR [edx+0x36e94fa3]
  41e3a9:	adc    al,BYTE PTR [esi+0x58]
  41e3ac:	xor    ecx,DWORD PTR [edi+ebx*2-0x33a49bf2]
  41e3b3:	add    DWORD PTR [edi],0xffffffc9
  41e3b6:	sub    BYTE PTR [ebx],ah
  41e3b8:	add    al,0x60
  41e3ba:	out    0x7a,al
  41e3bc:	xchg   esp,eax
  41e3bd:	add    ah,dh
  41e3bf:	xchg   ebp,eax
  41e3c0:	es jns 0x41e43c
  41e3c3:	jno    0x41e369
  41e3c5:	mov    ds:0x6cb36f65,al
  41e3ca:	mov    esp,0xa5adf183
  41e3cf:	adc    dl,ah
  41e3d1:	nop
  41e3d2:	(bad)  
  41e3d4:	mov    dh,0x4b
  41e3d6:	mov    ?,WORD PTR [eax-0x79]
  41e3d9:	mul    BYTE PTR [eax+edi*1+0x23b1cfe6]
  41e3e0:	cmp    al,0xe9
  41e3e2:	lds    ebp,FWORD PTR [edi+edx*2-0x6a]
  41e3e6:	loope  0x41e3f4
  41e3e8:	(bad)  ds:0x3547a166
  41e3ee:	pop    es
  41e3ef:	out    0x8e,eax
  41e3f1:	in     al,0x71
  41e3f3:	adc    bh,BYTE PTR [ebx+0x36574625]
  41e3f9:	and    eax,0x1f8af080
  41e3fe:	repz in al,dx
  41e400:	push   ebp
  41e401:	mov    ch,0x19
  41e403:	inc    edi
  41e404:	iret   
  41e405:	or     al,0xcc
  41e407:	dec    edi
  41e408:	fiadd  DWORD PTR [edi]
  41e40a:	inc    esi
  41e40b:	lods   eax,DWORD PTR ds:[esi]
  41e40c:	mov    ds:0x7862bdf4,al
  41e411:	xchg   edi,eax
  41e412:	test   DWORD PTR [esi+0x6468b4ff],0x81105c40
  41e41c:	xchg   esi,eax
  41e41d:	aas    
  41e41e:	rcr    DWORD PTR [ebx+0x6904ec26],0x82
  41e425:	(bad)  
  41e426:	imul   ebp,DWORD PTR [edx],0x770bb55a
  41e42c:	in     eax,dx
  41e42d:	jg     0x41e4a7
  41e42f:	inc    ecx
  41e430:	mov    cl,0x93
  41e432:	sub    DWORD PTR [esi-0x6175ca62],eax
  41e438:	inc    edx
  41e43a:	pushaw 
  41e43c:	fnstenv [ebx]
  41e43e:	push   esp
  41e43f:	and    eax,0x596387cd
  41e444:	xor    BYTE PTR [ebp+0x29],dl
  41e447:	jge    0x41e45c
  41e449:	mov    dh,0x45
  41e44b:	js     0x41e448
  41e44d:	test   eax,0xa2eefbef
  41e452:	lahf   
  41e453:	int    0xa4
  41e455:	xchg   esi,eax
  41e456:	jne    0x41e3f9
  41e458:	ins    DWORD PTR es:[edi],dx
  41e459:	ret    
  41e45a:	dec    ebp
  41e45b:	cmp    DWORD PTR [esi],edi
  41e45d:	les    ecx,FWORD PTR ss:[esp+ecx*2-0x752bbcf4]
  41e465:	mov    ecx,0x35d30534
  41e46a:	push   eax
  41e46b:	pop    edi
  41e46c:	mov    edi,0xf44b3e24
  41e471:	xor    DWORD PTR [esi],edx
  41e473:	pop    ebx
  41e474:	scas   al,BYTE PTR es:[edi]
  41e475:	repz or eax,0x230d3220
  41e47b:	or     esp,DWORD PTR [esi+0x1b6850fc]
  41e481:	mov    WORD PTR [ecx],gs
  41e483:	stos   DWORD PTR es:[edi],eax
  41e484:	push   ecx
  41e485:	mov    ch,0xb1
  41e487:	adc    edi,DWORD PTR [ecx-0x16]
  41e48a:	aam    0x1f
  41e48c:	dec    edx
  41e48d:	in     eax,dx
  41e48e:	inc    esp
  41e48f:	add    ebp,ebp
  41e491:	neg    BYTE PTR ds:0xac53d416
  41e497:	and    BYTE PTR [edx+0x4dd62295],cl
  41e49d:	mov    ch,0xab
  41e49f:	loop   0x41e4b7
  41e4a1:	test   eax,0xc03babf6
  41e4a6:	mov    dh,0x3c
  41e4a8:	jbe    0x41e520
  41e4aa:	les    ebx,FWORD PTR [ecx]
  41e4ac:	dec    ebp
  41e4ad:	bound  edi,QWORD PTR [ecx+0x29]
  41e4b0:	xchg   dh,bh
  41e4b2:	call   0x8c44e0f5
  41e4b7:	lahf   
  41e4b8:	jp     0x41e4ef
  41e4ba:	dec    esp
  41e4bb:	in     eax,0xbe
  41e4bd:	or     al,dh
  41e4bf:	iret   
  41e4c0:	xchg   DWORD PTR [edi-0x28],ecx
  41e4c3:	mov    ds:0xa7ea6981,al
  41e4c8:	and    BYTE PTR [edx],ch
  41e4ca:	push   es
  41e4cb:	push   es
  41e4cc:	xor    al,0x86
  41e4ce:	enter  0x5b01,0x17
  41e4d2:	cmp    BYTE PTR [edx+0x37e5f348],al
  41e4d8:	pop    esp
  41e4d9:	pop    ds
  41e4da:	fisttp WORD PTR [esi-0x264a4a81]
  41e4e0:	rcl    BYTE PTR [ecx+0x9263a99],0x46
  41e4e7:	repnz pusha 
  41e4e9:	mov    bh,0x4
  41e4eb:	xor    eax,0x8d39b949
  41e4f0:	dec    esi
  41e4f1:	(bad)  
  41e4f3:	and    bh,BYTE PTR [eax+edi*4]
  41e4f6:	int    0xe1
  41e4f8:	cdq    
  41e4f9:	aam    0x45
  41e4fb:	imul   esp,DWORD PTR [eax-0x4e],0xffffffa7
  41e4ff:	mov    dl,0xab
  41e501:	xchg   edx,eax
  41e502:	or     eax,esi
  41e504:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e506:	dec    ecx
  41e507:	and    esp,DWORD PTR [eax]
  41e509:	mov    ch,0x3f
  41e50b:	and    DWORD PTR [esi],esp
  41e50d:	outs   dx,BYTE PTR ds:[esi]
  41e50e:	stos   BYTE PTR es:[edi],al
  41e50f:	jae    0x41e563
  41e511:	ret    
  41e512:	xchg   esp,eax
  41e513:	mov    eax,ds:0x7059b559
  41e518:	inc    esi
  41e519:	mov    edi,0x67f5031c
  41e51e:	ds jecxz 0x41e4b7
  41e521:	push   eax
  41e522:	test   eax,0x39ad5bda
  41e527:	add    ebx,DWORD PTR [esi-0xa37fe4b]
  41e52d:	or     eax,0xcc139c23
  41e532:	push   edx
  41e533:	shl    DWORD PTR [edi*1-0x33b55797],cl
  41e53a:	dec    edi
  41e53b:	sbb    BYTE PTR [esi+0x2],bl
  41e53e:	dec    ebp
  41e53f:	inc    edi
  41e540:	outs   dx,BYTE PTR ds:[esi]
  41e541:	inc    edx
  41e542:	(bad)  
  41e543:	push   ds
  41e544:	xchg   bp,ax
  41e546:	sbb    al,0x3f
  41e548:	repz test ch,0x32
  41e54c:	lods   eax,DWORD PTR ds:[esi]
  41e54d:	inc    esi
  41e54e:	sbb    eax,0x5a3df5da
  41e553:	dec    edx
  41e554:	or     edx,eax
  41e556:	fbld   TBYTE PTR [edx]
  41e558:	loope  0x41e55f
  41e55a:	inc    edx
  41e55b:	rcr    DWORD PTR [esi-0x121b0598],cl
  41e561:	shl    DWORD PTR [esi],1
  41e563:	dec    esp
  41e564:	jbe    0x41e57a
  41e566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e567:	xchg   edi,eax
  41e568:	mov    ds:0x63bb3e35,eax
  41e56d:	mov    dl,0xd5
  41e56f:	lods   eax,DWORD PTR ds:[esi]
  41e570:	mov    edi,0x8fc9cc2b
  41e575:	mov    ebx,0x24262aa5
  41e57a:	gs dec ebp
  41e57c:	cmc    
  41e57d:	mov    edi,?
  41e57f:	jl     0x41e578
  41e581:	pop    eax
  41e582:	jecxz  0x41e526
  41e584:	scas   al,BYTE PTR es:[edi]
  41e585:	ins    DWORD PTR es:[edi],dx
  41e586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e587:	das    
  41e588:	and    eax,0x128c8ce
  41e58d:	test   ch,al
  41e58f:	mov    eax,ds:0x1856b529
  41e594:	xchg   edi,eax
  41e595:	test   al,0x91
  41e597:	xchg   edx,eax
  41e598:	jmp    0x5c94:0xf5f4c628
  41e59f:	dec    esi
  41e5a0:	mov    ds:0x40715f44,al
  41e5a5:	mov    ch,0x27
  41e5a7:	data16 xor al,0xa2
  41e5aa:	or     DWORD PTR [ebx],0x7d37e6f1
  41e5b0:	arpl   sp,si
  41e5b2:	inc    ebp
  41e5b3:	push   ebx
  41e5b4:	dec    ebx
  41e5b5:	mul    al
  41e5b7:	test   BYTE PTR [esi],dl
  41e5b9:	xchg   esi,eax
  41e5ba:	stc    
  41e5bb:	test   DWORD PTR [ecx],ebp
  41e5bd:	mov    ch,0x14
  41e5bf:	sub    ebx,DWORD PTR [edx-0x70]
  41e5c2:	and    esp,DWORD PTR [ecx]
  41e5c4:	repnz and DWORD PTR ds:0xc5d5d807,edi
  41e5cb:	mov    edx,0x48c8c22a
  41e5d0:	pop    ebx
  41e5d1:	mov    ch,0x33
  41e5d3:	pushf  
  41e5d4:	std    
  41e5d5:	inc    ecx
  41e5d6:	iret   
  41e5d7:	mov    bl,0x18
  41e5d9:	xor    eax,0xc9146fc6
  41e5de:	jae    0x41e61a
  41e5e0:	sbb    al,0xac
  41e5e2:	test   BYTE PTR [edx+0x22f74f65],dl
  41e5e8:	add    BYTE PTR [edi],bh
  41e5ea:	mov    edi,DWORD PTR [esi+ebx*1]
  41e5ed:	lar    ebp,WORD PTR [edi]
  41e5f0:	xchg   esi,eax
  41e5f1:	xchg   ebp,eax
  41e5f2:	jecxz  0x41e5fe
  41e5f4:	ret    
  41e5f5:	mov    ch,0xe2
  41e5f7:	sub    eax,0xa2f56aa5
  41e5fc:	dec    ebp
  41e5fd:	xor    esp,DWORD PTR [ebx-0x3714d9e9]
  41e603:	ins    DWORD PTR es:[edi],dx
  41e604:	inc    edx
  41e605:	ds out dx,eax
  41e607:	xchg   BYTE PTR [ebp+esi*4-0xd8a17a],al
  41e60e:	pop    ebp
  41e60f:	xor    DWORD PTR [edx+0x54da3741],ebp
  41e615:	xor    eax,DWORD PTR [esi-0x72]
  41e618:	js     0x41e635
  41e61a:	xor    ah,BYTE PTR [ebx-0x1b]
  41e61d:	mov    ah,0xd8
  41e61f:	popa   
  41e620:	jbe    0x41e610
  41e622:	push   ss
  41e623:	js     0x41e66f
  41e625:	cmp    esp,DWORD PTR [ecx-0x40dad962]
  41e62b:	jge    0x41e5d6
  41e62d:	mov    ebp,0x3531c5b2
  41e632:	jmp    0x9454a501
  41e637:	xor    ch,BYTE PTR [ebp-0x48]
  41e63a:	lds    esi,FWORD PTR [edi+0x5f74edde]
  41e640:	call   0xee23:0x4ad432ab
  41e647:	mov    ds:0xb0875c35,al
  41e64c:	pop    es
  41e64d:	lods   eax,DWORD PTR ds:[esi]
  41e64f:	jnp    0x41e643
  41e651:	adc    ebx,edi
  41e653:	mov    eax,ds:0x776af563
  41e658:	fs sbb eax,0x96a7145b
  41e65e:	jmp    DWORD PTR [edx+0x25a824d2]
  41e664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e665:	xor    DWORD PTR [edi-0x2aad2cd4],edx
  41e66b:	retf   0xc561
  41e66e:	scas   eax,DWORD PTR es:[edi]
  41e66f:	ja     0x41e5f2
  41e671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e672:	sub    esp,DWORD PTR [ebx]
  41e674:	cmp    eax,0xa62f2ce3
  41e679:	mov    esp,0x666894b9
  41e67e:	xchg   edi,eax
  41e67f:	pop    ss
  41e680:	adc    DWORD PTR ds:0x2c61c518,esi
  41e686:	cmp    dh,dl
  41e688:	inc    edi
  41e689:	retf   
  41e68a:	shl    esi,0x26
  41e68d:	mov    al,0x2a
  41e68f:	outs   dx,BYTE PTR ds:[esi]
  41e690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e691:	in     eax,0x5a
  41e693:	inc    esi
  41e694:	jbe    0x41e6b9
  41e696:	lahf   
  41e697:	add    DWORD PTR ds:0x74cbfbb2,0xffffff85
  41e69e:	jmp    0x2f52:0xc5d6a7be
  41e6a5:	popa   
  41e6a6:	and    eax,0x895050ab
  41e6ab:	cmp    al,0x43
  41e6ad:	sbb    DWORD PTR [edi],ebx
  41e6af:	and    esi,DWORD PTR [ecx+0x29434896]
  41e6b5:	retf   0x8f08
  41e6b8:	retf   0x419b
  41e6bb:	and    ebx,0x462fd4f0
  41e6c1:	mov    ch,0x79
  41e6c3:	fnsave [esi+0xe]
  41e6c6:	xor    bh,bh
  41e6c8:	dec    ecx
  41e6c9:	inc    ecx
  41e6ca:	call   0x219380e3
  41e6cf:	and    ebx,DWORD PTR [ebx]
  41e6d1:	scas   al,BYTE PTR es:[edi]
  41e6d2:	aaa    
  41e6d3:	mov    edx,0x82e8c300
  41e6d8:	das    
  41e6d9:	stos   BYTE PTR es:[edi],al
  41e6da:	push   ebp
  41e6db:	arpl   ax,bp
  41e6dd:	repnz ins DWORD PTR es:[edi],dx
  41e6df:	out    dx,eax
  41e6e0:	inc    ebx
  41e6e1:	out    dx,al
  41e6e2:	xor    esp,DWORD PTR [ebx+0x746245c9]
  41e6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e9:	mov    eax,ds:0x882343e6
  41e6ee:	mov    edx,esi
  41e6f0:	xor    BYTE PTR [ebp-0x1761045],dh
  41e6f6:	fistp  DWORD PTR [ebx-0x25]
  41e6f9:	rol    BYTE PTR [ebp+0x74],0x31
  41e6fd:	loope  0x41e697
  41e6ff:	jb     0x41e71e
  41e701:	jo     0x41e70b
  41e703:	add    DWORD PTR [eax],eax
  41e705:	push   edi
  41e706:	sub    al,0x91
  41e708:	mov    ecx,0xe9a307d9
  41e70d:	rol    ebp,0x2
  41e710:	jno    0x41e75b
  41e712:	jle    0x41e6c8
  41e714:	inc    edx
  41e715:	pop    ecx
  41e716:	or     al,0x1f
  41e718:	mov    esi,0xcd2274e5
  41e71d:	je     0x41e791
  41e71f:	fld    QWORD PTR [ebx+0x626335b4]
  41e725:	popa   
  41e726:	push   eax
  41e727:	sub    BYTE PTR [esi-0x187a815b],0xf0
  41e72e:	xchg   esi,eax
  41e72f:	mov    eax,0x4356dbed
  41e734:	sti    
  41e735:	mov    edi,DWORD PTR [edx-0x3a745c6a]
  41e73b:	shr    edi,cl
  41e73d:	test   eax,0x73f8c05
  41e742:	pop    ss
  41e743:	and    eax,0xa2dd8616
  41e748:	mov    ebx,DWORD PTR ds:0x468751ff
  41e74e:	mov    BYTE PTR [ebp+0x41],bh
  41e751:	jmp    0x41e72a
  41e753:	lahf   
  41e754:	dec    esi
  41e755:	inc    eax
  41e756:	and    edx,DWORD PTR [esi+0x30]
  41e759:	mov    ch,0xdc
  41e75b:	push   cs
  41e75c:	ins    BYTE PTR es:[edi],dx
  41e75d:	jp     0x41e71d
  41e75f:	xor    DWORD PTR [ebx-0xb],eax
  41e762:	lds    ecx,FWORD PTR [edx]
  41e764:	sbb    al,0x83
  41e766:	pop    ebx
  41e767:	aas    
  41e768:	lea    edx,[eax+esi*8]
  41e76b:	sahf   
  41e76c:	sub    al,0xa9
  41e76e:	test   DWORD PTR [ecx+0x3306333a],esp
  41e774:	jbe    0x41e741
  41e776:	or     bl,BYTE PTR [eax+0x26]
  41e779:	jb     0x41e727
  41e77b:	mov    BYTE PTR [ebx],dl
  41e77d:	push   0xfffffff4
  41e77f:	inc    eax
  41e780:	lahf   
  41e781:	xor    eax,0xdf669d51
  41e786:	mov    ecx,0x462fd48a
  41e78b:	fwait
  41e78c:	pusha  
  41e78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78e:	cmc    
  41e78f:	mov    eax,0xf44e3178
  41e794:	inc    esp
  41e795:	jmp    0xa1da:0xbf469c1a
  41e79c:	out    dx,eax
  41e79d:	inc    esi
  41e79e:	mov    bh,0xdb
  41e7a0:	lea    esi,[ebx-0x746937fe]
  41e7a6:	dec    esp
  41e7a7:	rol    BYTE PTR [ebx-0xb],0xcf
  41e7ab:	fsub   QWORD PTR [ebx]
  41e7ad:	xor    eax,0x601f0f3d
  41e7b2:	sub    cl,bl
  41e7b4:	mov    cs,WORD PTR [edi+0x67]
  41e7b7:	fldenv [edx+0x3bd6084f]
  41e7bd:	pop    esi
  41e7be:	push   edx
  41e7bf:	xchg   ecx,eax
  41e7c0:	ds in  al,0x91
  41e7c3:	ins    DWORD PTR es:[edi],dx
  41e7c4:	xor    al,0xa2
  41e7c6:	rcl    esp,0xb
  41e7c9:	mov    dl,0x8d
  41e7cb:	or     BYTE PTR [ebp+edx*8-0x4b],ah
  41e7cf:	xor    eax,DWORD PTR [ecx]
  41e7d1:	dec    esi
  41e7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d3:	data16 outs dx,BYTE PTR ds:[esi]
  41e7d5:	mov    ch,0x9b
  41e7d7:	or     al,0xd9
  41e7da:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41e7dc:	xchg   ebx,eax
  41e7dd:	sar    DWORD PTR [edx+0x3c],0x8e
  41e7e1:	and    al,0xeb
  41e7e3:	and    bl,bh
  41e7e5:	mov    esp,0xc724812f
  41e7ea:	idiv   bl
  41e7ec:	stc    
  41e7ed:	jge    0x41e840
  41e7ef:	aad    0x87
  41e7f1:	mov    ah,0x3c
  41e7f3:	aas    
  41e7f4:	je     0x41e84a
  41e7f6:	add    al,0x23
  41e7f8:	dec    ebx
  41e7f9:	adc    BYTE PTR [ebx],dh
  41e7fb:	and    eax,ebp
  41e7fd:	xchg   DWORD PTR [esi],edi
  41e7ff:	dec    esi
  41e800:	call   0xfb55:0x8037a782
  41e807:	sti    
  41e808:	xor    eax,0x929aa5f
  41e80d:	cli    
  41e80e:	daa    
  41e80f:	lea    eax,ds:0x3da2c412
  41e815:	dec    ebx
  41e816:	adc    ecx,DWORD PTR [ebx+0x18]
  41e819:	popf   
  41e81a:	(bad)  
  41e81b:	bound  eax,QWORD PTR [esi-0x2f]
  41e81e:	out    0x97,eax
  41e820:	test   eax,0xdb9db6d4
  41e825:	cmp    dl,BYTE PTR [ecx]
  41e827:	and    ebx,DWORD PTR [edi]
  41e829:	pop    edi
  41e82a:	pusha  
  41e82b:	test   BYTE PTR [edi],cl
  41e82d:	ret    0x3763
  41e830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e831:	push   es
  41e832:	and    DWORD PTR [eax],ebp
  41e834:	pop    edi
  41e835:	push   ebp
  41e836:	iret   
  41e837:	sub    eax,0x9f83bdd8
  41e83c:	arpl   WORD PTR [ebp+0x5f69497b],sp
  41e842:	sub    BYTE PTR [edi],cl
  41e844:	ss pop es
  41e846:	es jns 0x41e89b
  41e849:	dec    ebx
  41e84a:	push   es
  41e84b:	mov    ds:0x89881155,eax
  41e850:	xor    ebx,eax
  41e852:	test   DWORD PTR [edx-0x45bea388],esp
  41e858:	inc    ebx
  41e859:	sub    esi,DWORD PTR [edi]
  41e85b:	stos   DWORD PTR es:[edi],eax
  41e85c:	sbb    BYTE PTR es:[esi],ah
  41e85f:	mov    ebp,0xd313c8cd
  41e864:	pop    esp
  41e865:	xor    eax,0x4c992ba2
  41e86a:	inc    ebx
  41e86b:	imul   DWORD PTR [ecx+eax*1-0x3a]
  41e86f:	call   0x4436ebe
  41e874:	addr16 cld 
  41e876:	test   al,0xe0
  41e878:	add    ebp,DWORD PTR [edi-0x22]
  41e87b:	and    bl,ch
  41e87d:	xchg   edi,eax
  41e87e:	(bad)  
  41e87f:	int    0x8f
  41e881:	ss mov al,0xc1
  41e884:	push   esp
  41e885:	mov    ch,0x1a
  41e887:	mov    bh,0x8b
  41e889:	xor    DWORD PTR [eax-0x3b5edc9b],edi
  41e88f:	xlat   BYTE PTR ds:[ebx]
  41e890:	sbb    esi,esp
  41e892:	or     edx,DWORD PTR [edi+0x73364970]
  41e898:	mov    fs,WORD PTR [ebx+0x353e0529]
  41e89e:	clc    
  41e89f:	fdivr  st,st(3)
  41e8a1:	jecxz  0x41e881
  41e8a3:	pop    ecx
  41e8a4:	mov    ds:0x48dc2f13,al
  41e8a9:	fisttp WORD PTR [ebp+0x5fed8650]
  41e8af:	out    dx,eax
  41e8b0:	test   BYTE PTR [ecx],al
  41e8b2:	aaa    
  41e8b3:	and    ebx,ebp
  41e8b5:	or     esi,DWORD PTR [ebx+0x41]
  41e8b8:	es pop es
  41e8ba:	xor    bh,BYTE PTR [eax+0x1e]
  41e8bd:	mov    ebx,0xb4d89f66
  41e8c2:	sbb    DWORD PTR [edx],edx
  41e8c4:	loope  0x41e916
  41e8c6:	mov    DWORD PTR [ebx-0x80],edx
  41e8c9:	push   ecx
  41e8ca:	cmp    eax,0xae9f1f69
  41e8cf:	ja     0x41e930
  41e8d1:	gs jge 0x41e93d
  41e8d4:	cmp    ah,cl
  41e8d6:	into   
  41e8d7:	pop    ds
  41e8d8:	mov    ah,0xc4
  41e8da:	sub    ah,BYTE PTR [ebx-0x1ef15ab7]
  41e8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e1:	leave  
  41e8e2:	and    BYTE PTR [edx],dh
  41e8e4:	push   0x55206597
  41e8e9:	xor    edx,DWORD PTR [esi+ebx*8]
  41e8ec:	or     DWORD PTR [ebx+0x7219f0a4],ecx
  41e8f2:	push   ds
  41e8f3:	jecxz  0x41e919
  41e8f5:	mov    esp,0xb19d2a1a
  41e8fa:	shl    BYTE PTR [eax-0x7cf5b305],0xf1
  41e901:	inc    ebx
  41e902:	loope  0x41e926
  41e904:	fldl2e 
  41e906:	loop   0x41e89c
  41e908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e909:	iret   
  41e90a:	out    0x46,al
  41e90c:	hlt    
  41e90d:	je     0x41e8a4
  41e90f:	sbb    ebp,DWORD PTR [eax-0x56]
  41e912:	xchg   edi,eax
  41e913:	jnp    0x41e95e
  41e915:	xor    eax,0xf8c75ee
  41e91a:	in     al,0xe1
  41e91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91d:	(bad)  
  41e91e:	pop    eax
  41e91f:	dec    sp
  41e921:	xlat   BYTE PTR ss:[ebx]
  41e923:	mov    al,0xdb
  41e925:	ja     0x41e918
  41e927:	out    0x7b,al
  41e929:	std    
  41e92a:	dec    ecx
  41e92b:	and    edx,DWORD PTR [esi-0x68903c33]
  41e931:	(bad)  
  41e932:	popa   
  41e933:	cmp    DWORD PTR [esi-0x14acf74a],esp
  41e939:	shl    BYTE PTR [edx*4+0x13b453f3],0x8d
  41e941:	test   eax,0x1ad34317
  41e946:	inc    esi
  41e947:	mov    DWORD PTR [esi-0x66141892],edx
  41e94d:	dec    ebx
  41e94e:	dec    ecx
  41e94f:	aam    0xcf
  41e951:	dec    ecx
  41e952:	mov    ch,0x14
  41e954:	lea    esi,[eax+0x3d]
  41e957:	mov    ds:0xe045d85e,eax
  41e95c:	int3   
  41e95d:	mov    ecx,esi
  41e95f:	aad    0x16
  41e961:	fidiv  DWORD PTR [ecx-0x66c3fae8]
  41e967:	popf   
  41e968:	es fwait
  41e96a:	and    edx,DWORD PTR [eax-0x51b9eaa5]
  41e970:	clc    
  41e971:	push   0xc9fdbbe3
  41e976:	or     eax,0x2297915a
  41e97b:	and    ebx,DWORD PTR [edx+0x20]
  41e97e:	stc    
  41e97f:	ret    
  41e980:	and    al,0x1a
  41e982:	push   0x4864cdac
  41e987:	pop    es
  41e988:	enter  0x5801,0x2f
  41e98c:	lock int 0x9
  41e98f:	mov    ds:0x6daff5b3,eax
  41e994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e995:	arpl   WORD PTR [esi+eiz*8-0x55],si
  41e999:	sbb    al,0x49
  41e99b:	ins    BYTE PTR es:[edi],dx
  41e99c:	mov    ebp,0xc9a73faf
  41e9a1:	shr    eax,cl
  41e9a3:	and    cl,dh
  41e9a5:	loop   0x41e95e
  41e9a7:	cmp    DWORD PTR [esi],esp
  41e9a9:	test   DWORD PTR [ecx+0x70],esi
  41e9ac:	pop    ecx
  41e9ad:	shl    esi,cl
  41e9af:	adc    edx,edx
  41e9b1:	mov    ah,0xa8
  41e9b3:	mov    al,ds:0x988cf4f4
  41e9b8:	xchg   ebp,eax
  41e9b9:	int    0x9c
  41e9bb:	xor    al,0x26
  41e9bd:	dec    ebx
  41e9be:	iret   
  41e9bf:	mov    WORD PTR fs:[edx],cs
  41e9c2:	push   ebx
  41e9c3:	inc    eax
  41e9c4:	pop    edi
  41e9c5:	popf   
  41e9c6:	jmp    0x262d:0x9ee04d9
  41e9cd:	dec    eax
  41e9ce:	mov    eax,0x692f449a
  41e9d3:	dec    ecx
  41e9d4:	pop    ss
  41e9d5:	xor    al,0x81
  41e9d7:	out    0x90,eax
  41e9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9da:	stc    
  41e9db:	add    dh,al
  41e9dd:	xor    eax,DWORD PTR [ebp-0x2d0ad987]
  41e9e3:	js     0x41e976
  41e9e5:	cmovne ecx,ebp
  41e9e8:	repz sub eax,0xd766f83c
  41e9ee:	inc    ebp
  41e9ef:	xor    bl,BYTE PTR [esi-0x9]
  41e9f2:	cmp    bl,BYTE PTR [edi-0x66]
  41e9f5:	jle    0x41ea4f
  41e9f7:	mov    bh,0xa6
  41e9f9:	ss je  0x41ea39
  41e9fc:	adc    dl,BYTE PTR cs:[edi+0x57]
  41ea00:	xchg   edx,eax
  41ea01:	scas   eax,DWORD PTR es:[edi]
  41ea02:	mov    esp,0xedfb1122
  41ea07:	call   0x37c334ce
  41ea0c:	and    al,0xe
  41ea0e:	xor    eax,DWORD PTR [esi-0x35]
  41ea11:	ret    0xfe85
  41ea14:	pop    ds
  41ea15:	leave  
  41ea16:	lods   al,BYTE PTR ds:[esi]
  41ea17:	stos   DWORD PTR es:[edi],eax
  41ea18:	fwait
  41ea19:	adc    BYTE PTR [edi],bh
  41ea1b:	and    edi,edx
  41ea1d:	outs   dx,DWORD PTR ds:[esi]
  41ea1e:	aaa    
  41ea1f:	jae    0x41ea89
  41ea21:	inc    ebx
  41ea22:	ret    0x5f45
  41ea25:	push   edx
  41ea26:	sbb    ebx,DWORD PTR [edi]
  41ea28:	inc    esi
  41ea29:	or     eax,0x95e59052
  41ea2e:	wbinvd 
  41ea30:	and    bh,BYTE PTR [ebx+eiz*8]
  41ea33:	test   eax,0xbc6bd56b
  41ea38:	xor    bh,al
  41ea3a:	lds    edi,FWORD PTR ds:0x2c55073
  41ea40:	outs   dx,DWORD PTR ds:[esi]
  41ea41:	lea    ebp,[ecx+0x33]
  41ea44:	ds jecxz 0x41ea88
  41ea47:	and    eax,DWORD PTR [ebp-0x7a]
  41ea4a:	push   0x3780ebe3
  41ea4f:	xchg   ch,bh
  41ea51:	inc    esp
  41ea52:	loop   0x41ea19
  41ea54:	lock neg DWORD PTR ds:0x3b31ee97
  41ea5b:	jmp    0x41ead8
  41ea5d:	mov    ecx,DWORD PTR [edi+0x23]
  41ea60:	jp     0x41ea5b
  41ea62:	(bad)  
  41ea63:	cld    
  41ea64:	pop    ds
  41ea65:	and    DWORD PTR [ecx],ebp
  41ea67:	cmp    BYTE PTR [ecx-0x1b],cl
  41ea6a:	loope  0x41ea82
  41ea6c:	xchg   esp,eax
  41ea6d:	inc    edx
  41ea6e:	adc    eax,0x1fc96819
  41ea73:	and    ecx,DWORD PTR [ebx]
  41ea75:	mov    ebx,0xf1876997
  41ea7a:	xchg   DWORD PTR [eax],eax
  41ea7c:	sar    DWORD PTR [edi-0xa905e58],0xa2
  41ea83:	push   es
  41ea84:	cmp    eax,0x81a054b5
  41ea89:	rcr    bl,0xf3
  41ea8c:	bound  ebx,QWORD PTR [edi+0x26]
  41ea8f:	push   edi
  41ea90:	and    BYTE PTR [esi+0x68],0x3a
  41ea94:	sub    DWORD PTR [ebp-0x2e],esi
  41ea97:	ret    
  41ea98:	cmp    al,0xc7
  41ea9a:	adc    edx,eax
  41ea9c:	popa   
  41ea9d:	xor    eax,0x4a314e5f
  41eaa2:	push   esp
  41eaa3:	ror    DWORD PTR [esi+0x31d8a81d],cl
  41eaa9:	xor    eax,0xe107582b
  41eaae:	xor    eax,0xf135337f
  41eab3:	inc    edx
  41eab4:	mov    edi,0x194801c6
  41eab9:	cmp    esp,eax
  41eabb:	mov    ebp,0x54b3a106
  41eac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac1:	pop    ecx
  41eac2:	xor    bh,BYTE PTR [edi-0x4f]
  41eac5:	mov    al,0x3f
  41eac7:	jb     0x41ea6c
  41eac9:	fild   WORD PTR [ebp-0x63]
  41eacc:	push   eax
  41eacd:	out    dx,al
  41eace:	sbb    eax,0xf407a5b7
  41ead3:	das    
  41ead4:	data16 aaa 
  41ead6:	add    edx,DWORD PTR [edx]
  41ead8:	daa    
  41ead9:	xor    eax,0x92c2a0c2
  41eade:	pop    ecx
  41eadf:	mov    ah,0x7a
  41eae1:	sbb    eax,0xd91fb54a
  41eae6:	retf   
  41eae7:	data16 jo 0x41eadf
  41eaea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaeb:	pop    edi
  41eaec:	enter  0x4f3b,0xda
  41eaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaf1:	xor    eax,0x9bb2d6e6
  41eaf6:	adc    eax,0x4630382f
  41eafb:	add    eax,0x5cd96952
  41eb00:	add    BYTE PTR [edx],0x1a
  41eb03:	inc    edi
  41eb04:	mov    bl,0x31
  41eb06:	xor    al,0xa5
  41eb08:	inc    edi
  41eb09:	xchg   DWORD PTR [ecx+0x28],ebp
  41eb0c:	outs   dx,DWORD PTR ds:[esi]
  41eb0d:	lds    ecx,FWORD PTR [edi+0x6b]
  41eb10:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41eb12:	das    
  41eb13:	pop    esi
  41eb14:	or     eax,0x56ac6098
  41eb19:	mov    ch,0xb9
  41eb1b:	enter  0xb717,0x4c
  41eb1f:	fcomp  DWORD PTR [esi-0x5c59ba7c]
  41eb25:	add    esi,edx
  41eb27:	cli    
  41eb28:	out    0x24,eax
  41eb2a:	xor    DWORD PTR [esi+eax*1+0x2643413e],edx
  41eb31:	cmp    bl,BYTE PTR [edi+0x6d]
  41eb34:	leave  
  41eb35:	xchg   ecx,eax
  41eb36:	jle    0x41eb14
  41eb38:	imul   esi,DWORD PTR ds:0x2162bf03,0x2c146592
  41eb42:	mov    BYTE PTR [ebx-0x677c9610],0x20
  41eb49:	xor    esi,DWORD PTR [eax-0x72]
  41eb4c:	pop    ecx
  41eb4d:	pop    ss
  41eb4e:	cmp    dh,BYTE PTR [eax+0x2445c608]
  41eb54:	mov    edi,0xfc4e83e1
  41eb59:	sub    al,0xa8
  41eb5b:	lock mov ds:0x69b79a3,al
  41eb61:	mov    edx,0xeb0805c5
  41eb66:	or     al,0x4f
  41eb68:	sahf   
  41eb69:	add    DWORD PTR [esi+esi*2],edx
  41eb6c:	loop   0x41eb1e
  41eb6e:	add    BYTE PTR [edx+ebx*2],0xd5
  41eb72:	lock mov DWORD PTR [ebx+0x45],edx
  41eb76:	shl    BYTE PTR [edi+0x45],0xf1
  41eb7a:	inc    ebp
  41eb7b:	frstor [ebx]
  41eb7d:	out    0x1f,al
  41eb7f:	or     DWORD PTR [edx-0x7e],ebp
  41eb82:	push   eax
  41eb83:	repz xor DWORD PTR [ebp-0x2d711ba0],esi
  41eb8a:	inc    esi
  41eb8b:	aas    
  41eb8c:	imul   esp,edi,0x7c924745
  41eb92:	sbb    bl,BYTE PTR [ebx-0x11]
  41eb95:	mov    ds:0x53cb84a3,eax
  41eb9a:	out    0x9b,eax
  41eb9c:	pushw  cs
  41eb9e:	adc    DWORD PTR [ecx-0x78bba1bb],eax
  41eba4:	loop   0x41eb50
  41eba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eba7:	(bad)  
  41eba8:	push   edi
  41eba9:	pop    ebp
  41ebaa:	jnp    0x41ec1d
  41ebac:	cmc    
  41ebad:	mov    ah,0xb
  41ebaf:	inc    ebp
  41ebb0:	jbe    0x41eb72
  41ebb2:	stos   DWORD PTR es:[edi],eax
  41ebb3:	cli    
  41ebb4:	mov    BYTE PTR [ebx-0x54],dl
  41ebb7:	mov    edx,0xb1460f6c
  41ebbc:	lahf   
  41ebbd:	test   eax,0xe2666ebc
  41ebc2:	mov    bh,ah
  41ebc4:	outs   dx,BYTE PTR ds:[esi]
  41ebc5:	stc    
  41ebc6:	pop    es
  41ebc7:	mov    ds:0x687dad59,eax
  41ebcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebcd:	dec    ebp
  41ebce:	ror    DWORD PTR [edi-0x37c58837],1
  41ebd4:	jne    0x41ec0b
  41ebd6:	rcr    BYTE PTR [ebp+eax*8+0x18],0x1d
  41ebdb:	xchg   dl,bh
  41ebdd:	popf   
  41ebde:	test   al,0xd9
  41ebe0:	xchg   edi,eax
  41ebe1:	addr16 (bad) 
  41ebe3:	mov    ebx,0x75f5fa86
  41ebe8:	mov    BYTE PTR [ebx+0x49],dl
  41ebeb:	mov    edx,0x2319913a
  41ebf0:	mov    eax,ds:0xa26c1794
  41ebf5:	dec    edi
  41ebf6:	pop    esp
  41ebf7:	mov    esi,0x6f1e2ed2
  41ebfc:	scas   al,BYTE PTR es:[edi]
  41ebfd:	add    DWORD PTR [edx-0x11a66526],0x97b6e222
  41ec07:	pusha  
  41ec08:	jle    0x41ebfc
  41ec0a:	shl    BYTE PTR [esi+eiz*1-0x7b],1
  41ec0e:	aas    
  41ec0f:	bound  edi,QWORD PTR [ecx+0x2c931c12]
  41ec15:	mov    ebp,0xafa03a6d
  41ec1a:	outs   dx,DWORD PTR ds:[esi]
  41ec1b:	push   ds
  41ec1c:	out    0xaa,al
  41ec1e:	mov    ah,0x36
  41ec20:	hlt    
  41ec21:	mov    dl,0xc3
  41ec23:	in     eax,0x84
  41ec25:	test   DWORD PTR [esi],esp
  41ec27:	mov    bh,0x46
  41ec29:	push   eax
  41ec2a:	jbe    0x41ebb0
  41ec2c:	or     DWORD PTR [edx+edi*8+0x608520fb],esi
  41ec33:	jg     0x41ec5f
  41ec35:	stos   BYTE PTR es:[edi],al
  41ec36:	add    DWORD PTR [edi+0x34],0xffffffdf
  41ec3a:	inc    ebp
  41ec3b:	inc    edx
  41ec3c:	ret    
  41ec3d:	cmp    BYTE PTR [edi],dh
  41ec3f:	add    al,0x43
  41ec41:	and    al,0xe6
  41ec43:	xchg   DWORD PTR [esi+0x35],esi
  41ec46:	dec    eax
  41ec47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec48:	into   
  41ec49:	fs xor al,0x7c
  41ec4c:	sub    dh,ch
  41ec4e:	inc    ebp
  41ec4f:	or     dh,BYTE PTR [ebx-0x6b0a14a0]
  41ec55:	jbe    0x41ec58
  41ec57:	push   ecx
  41ec58:	xor    BYTE PTR [ebp+0x46a163e9],dh
  41ec5e:	pusha  
  41ec5f:	mov    BYTE PTR [esi+0x3ddfc3bd],dh
  41ec65:	arpl   bx,dx
  41ec67:	cmp    ah,dh
  41ec69:	cs dec edx
  41ec6b:	mov    ds:0x226c340e,al
  41ec70:	out    dx,eax
  41ec71:	adc    BYTE PTR [esp+ecx*4-0x6b9dbdb6],0x21
  41ec79:	mov    ch,dh
  41ec7b:	mov    dl,0xa2
  41ec7d:	jne    0x41ec76
  41ec7f:	push   DWORD PTR [ebx-0x4a]
  41ec82:	adc    eax,0xeb3c72d4
  41ec87:	cdq    
  41ec88:	sbb    al,0xce
  41ec8a:	sbb    al,0x23
  41ec8c:	lock or al,0xc6
  41ec8f:	mov    ch,0x68
  41ec91:	lock pop edi
  41ec93:	shl    BYTE PTR [ebx],cl
  41ec95:	rol    dh,0x1e
  41ec98:	adc    edi,DWORD PTR [edi-0x59e15d0b]
  41ec9e:	mov    ah,0xe4
  41eca0:	mov    ds:0xb7ea573a,al
  41eca5:	(bad)  
  41eca6:	mov    ch,0x28
  41eca8:	ss sub al,0x40
  41ecab:	stos   BYTE PTR es:[edi],al
  41ecac:	xchg   ecx,eax
  41ecad:	repnz push ds
  41ecaf:	mov    ds:0xc727f930,eax
  41ecb4:	and    eax,0x42b6b91f
  41ecb9:	add    DWORD PTR [esp+edx*4+0x76],esp
  41ecbd:	mov    cs,ecx
  41ecbf:	jnp    0x41ed04
  41ecc1:	xor    eax,0x5b2764b1
  41ecc6:	hlt    
  41ecc7:	repnz mov dl,0xcc
  41ecca:	lds    ebx,FWORD PTR [esi+0xe6cf69d]
  41ecd0:	sar    BYTE PTR [ecx-0x9],cl
  41ecd3:	adc    ch,BYTE PTR [edi]
  41ecd5:	xchg   BYTE PTR [ebp+eax*4-0x6ed50ba3],al
  41ecdc:	aad    0x3
  41ecde:	dec    edx
  41ecdf:	sub    ah,BYTE PTR [esi]
  41ece1:	ficomp DWORD PTR [ebx-0x5d5594a0]
  41ece7:	xchg   ebx,eax
  41ece8:	mov    eax,0x65f03f9
  41eced:	mov    bh,0xdf
  41ecef:	mov    ds:0x76cfc6dc,al
  41ecf4:	es (bad) 
  41ecf6:	shl    DWORD PTR [edi-0x3f],1
  41ecf9:	test   ebp,0x38b5657b
  41ecff:	fcmovb st,st(2)
  41ed01:	xchg   edi,eax
  41ed02:	xor    DWORD PTR [edx],ecx
  41ed04:	dec    ecx
  41ed05:	jmp    0x41eccc
  41ed07:	mov    ecx,0xaf73e3e
  41ed0c:	retf   
  41ed0d:	aam    0x33
  41ed0f:	imul   ebx,DWORD PTR [ebp+0x45],0xf3c222e1
  41ed16:	jae    0x41ed2d
  41ed18:	sub    esp,edi
  41ed1a:	inc    ebp
  41ed1b:	dec    ebp
  41ed1c:	(bad)  
  41ed1d:	adc    DWORD PTR [eax],edi
  41ed1f:	les    ebp,FWORD PTR [ecx-0x68]
  41ed22:	sub    eax,0x1b093fe4
  41ed27:	xchg   edi,eax
  41ed28:	adc    BYTE PTR [ecx],ah
  41ed2a:	inc    esi
  41ed2b:	adc    eax,0x2c743810
  41ed30:	cwde   
  41ed31:	iret   
  41ed32:	fmul   st(2),st
  41ed34:	xor    edi,DWORD PTR [ebp+0x6d262333]
  41ed3a:	imul   edx,edx,0x31ccbc6d
  41ed40:	adc    BYTE PTR es:[esi],0x33
  41ed44:	xchg   edx,esi
  41ed46:	loop   0x41ed66
  41ed48:	outs   dx,BYTE PTR ds:[esi]
  41ed49:	xor    eax,0xeb23f414
  41ed4e:	xor    ch,BYTE PTR [ecx-0x55]
  41ed51:	popa   
  41ed52:	ret    0xf969
  41ed55:	xor    al,0xb0
  41ed57:	sbb    edi,DWORD PTR [ebp-0x3a605904]
  41ed5d:	or     ebp,edi
  41ed5f:	cmp    BYTE PTR [ecx+0x752315a1],0x13
  41ed66:	mov    esp,0x6c212682
  41ed6b:	dec    ecx
  41ed6c:	loope  0x41ecf8
  41ed6e:	xchg   esp,eax
  41ed6f:	pop    esp
  41ed70:	fisub  DWORD PTR [esi]
  41ed72:	shl    BYTE PTR [ebx],1
  41ed74:	mov    bl,0x91
  41ed76:	jl     0x41ed0f
  41ed78:	dec    ebp
  41ed79:	in     eax,dx
  41ed7a:	retf   
  41ed7b:	pop    ebx
  41ed7c:	mov    ds:0x814097e0,eax
  41ed81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed82:	jo     0x41edc3
  41ed84:	and    al,0xfa
  41ed86:	btc    ebx,ebx
  41ed89:	in     eax,0xed
  41ed8b:	mov    eax,ds:0xb930b9f7
  41ed90:	leavew 
  41ed92:	push   ss
  41ed93:	and    eax,ebp
  41ed95:	fistp  DWORD PTR [edx]
  41ed97:	retf   
  41ed98:	push   es
  41ed99:	lods   al,BYTE PTR ds:[esi]
  41ed9a:	fptan  
  41ed9c:	mov    dh,0x5c
  41ed9e:	inc    ebx
  41ed9f:	mov    ds:0x11e92dc1,eax
  41eda4:	jl     0x41ed6c
  41eda6:	shl    DWORD PTR [edx],cl
  41eda8:	and    esp,DWORD PTR [esp+eax*4]
  41edab:	sub    al,0x8
  41edad:	mov    cl,0x42
  41edaf:	xchg   ebx,eax
  41edb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb1:	cmp    DWORD PTR [edx+0x7245a5c6],eax
  41edb7:	leave  
  41edb8:	mov    esp,0xfe7770f5
  41edbd:	es cmp eax,0xe2f055a3
  41edc3:	jne    0x41ed6b
  41edc5:	fist   DWORD PTR [ebx+0x44]
  41edc8:	hlt    
  41edc9:	clc    
  41edca:	in     al,0xe3
  41edcc:	aas    
  41edcd:	xor    eax,0x235a544c
  41edd2:	push   esi
  41edd3:	lods   al,BYTE PTR ds:[esi]
  41edd4:	push   esi
  41edd5:	cld    
  41edd6:	inc    ebp
  41edd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd9:	xor    BYTE PTR [esi+0x1a],cl
  41eddc:	jmp    0x38f9ea8
  41ede1:	imul   eax,DWORD PTR [edi-0x5d],0xffffffb6
  41ede5:	out    dx,al
  41ede6:	jo     0x41ee36
  41ede8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede9:	loope  0x41edf4
  41edeb:	mov    ds:0xde4c8ac3,al
  41edf0:	jno    0x41ee27
  41edf2:	sub    BYTE PTR ds:0xafd35d11,0x21
  41edf9:	cmc    
  41edfa:	test   al,0x3a
  41edfc:	xor    esp,0x11228b9
  41ee02:	push   es
  41ee03:	in     al,dx
  41ee04:	out    0x1c,al
  41ee06:	arpl   WORD PTR fs:[edx+edi*4],bx
  41ee0a:	inc    ebp
  41ee0b:	sbb    al,0x6e
  41ee0d:	jns    0x41ee89
  41ee0f:	lds    esp,FWORD PTR [edx+0x10]
  41ee12:	inc    ebp
  41ee13:	lds    edx,FWORD PTR [edi+0x19a2f825]
  41ee19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1a:	inc    ecx
  41ee1b:	xlat   BYTE PTR ds:[ebx]
  41ee1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee1d:	(bad)  
  41ee1e:	(bad)  
  41ee1f:	outs   dx,DWORD PTR ds:[esi]
  41ee20:	jle    0x41ee0d
  41ee22:	or     dl,bl
  41ee24:	push   0x40d0b335
  41ee29:	push   0xfffffffd
  41ee2b:	in     eax,dx
  41ee2c:	pop    eax
  41ee2d:	push   0x85a5610d
  41ee32:	dec    esi
  41ee33:	mul    DWORD PTR es:0xd3f203a
  41ee3a:	scas   al,BYTE PTR es:[edi]
  41ee3b:	and    esi,DWORD PTR [esi]
  41ee3d:	xor    eax,0x68e24802
  41ee42:	pop    ebx
  41ee43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee44:	gs sub eax,esi
  41ee47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee48:	push   ecx
  41ee49:	les    ebx,FWORD PTR [eax+0x59]
  41ee4c:	iret   
  41ee4d:	push   0x40
  41ee4f:	stos   BYTE PTR es:[edi],al
  41ee50:	pop    edx
  41ee51:	pop    ss
  41ee52:	add    esp,DWORD PTR [edi+0x1c85b708]
  41ee58:	in     eax,0xcd
  41ee5a:	or     DWORD PTR [ecx-0x1a],0xffffff90
  41ee5e:	mov    DWORD PTR [ebx-0x569d727a],esi
  41ee64:	div    ah
  41ee66:	mov    DWORD PTR [ecx],esp
  41ee68:	bound  ebp,QWORD PTR [ecx+0x18]
  41ee6b:	jl     0x41edfe
  41ee6d:	popf   
  41ee6e:	ds xor ecx,edi
  41ee71:	xchg   edx,eax
  41ee72:	push   ecx
  41ee73:	mov    BYTE PTR [ecx],cl
  41ee75:	xchg   esi,eax
  41ee76:	neg    edx
  41ee78:	mov    eax,ds:0xf6dfacfa
  41ee7d:	(bad)  
  41ee7f:	pop    eax
  41ee80:	mov    cl,0x34
  41ee82:	jno    0x41eeca
  41ee84:	dec    BYTE PTR [eax-0x2461bc7]
  41ee8a:	push   ebp
  41ee8b:	and    BYTE PTR [ebp+0x18],ah
  41ee8e:	push   es
  41ee8f:	mov    esp,esi
  41ee91:	mov    edx,0x5331813d
  41ee96:	clc    
  41ee97:	aad    0x26
  41ee99:	push   esi
  41ee9a:	jl     0x41ee31
  41ee9c:	sub    BYTE PTR ds:0x35330cca,bl
  41eea2:	mov    esp,0xbd9c344c
  41eea7:	in     eax,dx
  41eea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea9:	add    eax,0xd75ee346
  41eeae:	out    dx,al
  41eeaf:	sbb    dl,BYTE PTR [edx+0x6d7c09ac]
  41eeb5:	mov    DWORD PTR [ecx],eax
  41eeb7:	mov    al,0x80
  41eeb9:	xor    eax,0x34821b37
  41eebe:	cmp    ecx,ebp
  41eec0:	pop    ss
  41eec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec2:	test   al,0xd9
  41eec4:	es push ss
  41eec6:	lods   eax,DWORD PTR ds:[esi]
  41eec7:	pop    ebp
  41eec8:	test   eax,esp
  41eeca:	call   0x27ce803
  41eecf:	mov    ds:0x48c9d380,eax
  41eed4:	jmp    0xe821090b
  41eed9:	cmc    
  41eeda:	lds    edi,FWORD PTR [esp+edx*8]
  41eedd:	or     eax,DWORD PTR [eax]
  41eedf:	xchg   ecx,eax
  41eee0:	adc    eax,0xcc7a2d09
  41eee5:	sub    al,0x85
  41eee7:	adc    ecx,DWORD PTR [eax]
  41eee9:	popf   
  41eeea:	xor    al,0xc3
  41eeec:	sub    bh,BYTE PTR [edx+0x31ca745]
  41eef2:	sbb    BYTE PTR ds:0x67606c76,dh
  41eef8:	dec    esp
  41eef9:	in     al,0x1b
  41eefb:	and    esi,DWORD PTR [edx+0x6f]
  41eefe:	loope  0x41ee96
  41ef00:	mov    ah,0x31
  41ef02:	aas    
  41ef03:	aaa    
  41ef04:	xor    BYTE PTR [esi-0x51],dl
  41ef07:	outs   dx,DWORD PTR ds:[esi]
  41ef08:	cmp    DWORD PTR [ebp-0x43],edx
  41ef0b:	dec    ebx
  41ef0c:	jmp    0x3fcc:0x9a186f27
  41ef13:	mov    ds:0x4b6bd558,eax
  41ef18:	es (bad) 
  41ef1a:	ins    BYTE PTR es:[edi],dx
  41ef1b:	jl     0x41ef1d
  41ef1d:	sbb    bl,cl
  41ef1f:	bound  esp,QWORD PTR [edi]
  41ef21:	xor    eax,0xc75c8005
  41ef26:	pop    ecx
  41ef27:	xchg   ebp,eax
  41ef28:	mov    ebp,0xa6248853
  41ef2d:	jge    0x41eec4
  41ef2f:	dec    edx
  41ef30:	adc    DWORD PTR [edi+0x55],eax
  41ef33:	stos   BYTE PTR es:[edi],al
  41ef34:	retf   0x5d95
  41ef37:	jne    0x41ef01
  41ef39:	rol    BYTE PTR [ebp+0x6525faf7],0x38
  41ef40:	imul   edx,edi,0xffffffc4
  41ef43:	test   BYTE PTR [edx+0x4564a612],ah
  41ef49:	add    eax,0x17abd54d
  41ef4e:	ds and eax,0xa9af87e2
  41ef54:	jb     0x41efc3
  41ef56:	movsx  ecx,WORD PTR [edi+0x66]
  41ef5a:	inc    edx
  41ef5b:	mov    eax,0x229347a6
  41ef60:	aaa    
  41ef61:	cmc    
  41ef62:	sbb    eax,0x8125d947
  41ef67:	shl    DWORD PTR [eax+0x24a31ed0],0xcb
  41ef6e:	push   edx
  41ef6f:	adc    eax,0xde6b41a5
  41ef74:	out    0x87,eax
  41ef76:	iret   
  41ef77:	mov    gs,WORD PTR ds:0x2b287a51
  41ef7d:	push   cs
  41ef7e:	icebp  
  41ef7f:	mov    ds:0xd503f914,al
  41ef84:	adc    dh,bh
  41ef86:	stc    
  41ef87:	dec    ecx
  41ef88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef89:	pop    eax
  41ef8a:	jb     0x41eff3
  41ef8c:	jno    0x41efcd
  41ef8e:	dec    ebp
  41ef8f:	sbb    al,0x41
  41ef91:	sub    eax,0xe9c6230a
  41ef96:	dec    ebp
  41ef97:	push   ss
  41ef98:	es dec eax
  41ef9a:	push   edx
  41ef9b:	pusha  
  41ef9c:	inc    esp
  41ef9d:	xadd   al,cl
  41efa0:	popa   
  41efa1:	mov    ch,0x69
  41efa3:	in     al,0x37
  41efa5:	out    dx,eax
  41efa6:	inc    esi
  41efa7:	xchg   DWORD PTR [ebx+0x26],ebp
  41efaa:	push   edx
  41efab:	mul    BYTE PTR [esi]
  41efad:	sbb    ecx,DWORD PTR [edi-0x1c385cca]
  41efb3:	repz cmp al,0xb5
  41efb6:	icebp  
  41efb7:	pop    ecx
  41efb8:	out    dx,al
  41efb9:	inc    edx
  41efba:	ret    0x1b5
  41efbd:	or     BYTE PTR [edi-0x60aac66f],bh
  41efc3:	ret    0x4666
  41efc6:	pop    ss
  41efc7:	mov    bl,0xb2
  41efc9:	aam    0x4f
  41efcb:	xchg   ebp,eax
  41efcc:	jp     0x41eff6
  41efce:	dec    esp
  41efcf:	inc    edx
  41efd0:	fdivr  st,st(7)
  41efd2:	inc    ebp
  41efd3:	adc    ebx,DWORD PTR [ecx+edx*8+0x0]
  41efd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd8:	inc    eax
  41efd9:	pop    ecx
  41efda:	push   ebx
  41efdb:	(bad)  
  41efdc:	and    al,0x1d
  41efde:	cmc    
  41efdf:	and    cl,cl
  41efe1:	mov    eax,ds:0x6e2608a3
  41efe6:	scas   eax,DWORD PTR es:[edi]
  41efe7:	cmp    eax,0xe34f6511
  41efec:	pushf  
  41efed:	xor    eax,0x5716a477
  41eff2:	sub    al,0x22
  41eff4:	jmp    0x6d5f:0xfcf8c5b9
  41effb:	fisttp DWORD PTR [edx]
  41effd:	jno    0x41f07e
  41efff:	sbb    dl,BYTE PTR [ebx+0x4e998311]
  41f005:	cmp    al,0x3
  41f007:	mov    ds:0x6b42b0f8,eax
  41f00c:	fadd   QWORD PTR [eax]
  41f00e:	sbb    al,0xa4
  41f010:	adc    BYTE PTR [ebp-0x2f],dh
  41f013:	call   0x2d17dd0b
  41f018:	xor    al,0xfa
  41f01a:	lods   al,BYTE PTR ds:[esi]
  41f01b:	mov    eax,ds:0xa31e253c
  41f020:	pcmpeqb mm7,mm7
  41f023:	out    dx,eax
  41f024:	fimul  WORD PTR [edx]
  41f026:	(bad)  
  41f027:	pop    eax
  41f028:	cs mov ebx,0x3d7a2bb2
  41f02e:	adc    BYTE PTR [edx+esi*1+0x761c10e4],dh
  41f035:	cwde   
  41f036:	xchg   edi,eax
  41f037:	outs   dx,BYTE PTR ds:[esi]
  41f038:	loopne 0x41f004
  41f03a:	aaa    
  41f03b:	pop    edx
  41f03c:	cwde   
  41f03d:	les    eax,FWORD PTR ds:0x8ca00d35
  41f043:	add    DWORD PTR [esi+0x35],esi
  41f046:	xchg   BYTE PTR [eax+0x4775f5eb],bl
  41f04c:	mov    al,0x5
  41f04e:	(bad)  
  41f04f:	ins    BYTE PTR es:[edi],dx
  41f050:	and    eax,0x33210b3b
  41f055:	pop    edi
  41f056:	enter  0x980e,0x48
  41f05a:	adc    al,0x23
  41f05c:	mov    ch,0x66
  41f05e:	pop    edx
  41f05f:	stos   BYTE PTR es:[edi],al
  41f060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f061:	adc    DWORD PTR [ecx+0x58917b70],0x5d
  41f068:	or     eax,0xd4c48832
  41f06d:	mov    ?,WORD PTR [ecx]
  41f06f:	test   eax,0x3f730da4
  41f074:	sbb    eax,0x5d38c62d
  41f079:	adc    ebx,esp
  41f07b:	or     eax,DWORD PTR [eax+0x710b0792]
  41f081:	pop    esp
  41f082:	out    0x99,eax
  41f084:	or     al,0x54
  41f086:	aad    0xa2
  41f088:	scas   al,BYTE PTR es:[edi]
  41f089:	test   DWORD PTR ds:0x7a4b7756,0x39b55c41
  41f093:	inc    edi
  41f094:	leave  
  41f095:	mov    eax,0xa097c7bc
  41f09a:	inc    esp
  41f09b:	scas   al,BYTE PTR es:[edi]
  41f09c:	dec    edx
  41f09d:	repz mov eax,ds:0x18d15037
  41f0a3:	xchg   DWORD PTR [esi-0x4b],eax
  41f0a6:	lds    edx,FWORD PTR [ebp+0x78e2bfcd]
  41f0ac:	not    BYTE PTR [ecx-0x42]
  41f0af:	pusha  
  41f0b0:	xchg   edx,eax
  41f0b1:	push   0xad3e45c7
  41f0b6:	xor    al,0x83
  41f0b8:	loope  0x41f0ed
  41f0ba:	inc    ecx
  41f0bb:	or     BYTE PTR [eax-0x32],ah
  41f0be:	adc    dh,BYTE PTR [eax]
  41f0c0:	(bad)  
  41f0c1:	pop    ss
  41f0c2:	ins    BYTE PTR es:[edi],dx
  41f0c3:	inc    esp
  41f0c4:	xchg   ecx,ebx
  41f0c6:	xchg   ecx,eax
  41f0c7:	idiv   BYTE PTR [ecx+0x25dfaa42]
  41f0cd:	cmp    eax,0xb5622fa4
  41f0d2:	cmp    ebx,DWORD PTR [edx-0x67]
  41f0d5:	js     0x41f064
  41f0d7:	je     0x41f0bd
  41f0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0da:	sub    DWORD PTR [eax+0x76],ecx
  41f0dd:	mov    ch,0x42
  41f0df:	clc    
  41f0e0:	outs   dx,BYTE PTR ds:[esi]
  41f0e1:	mov    ebp,0x358bb4a4
  41f0e6:	push   0xf77174bf
  41f0eb:	jb     0x41f086
  41f0ed:	out    dx,al
  41f0ee:	(bad)  
  41f0ef:	and    ch,BYTE PTR ds:0xee5b4459
  41f0f5:	dec    edi
  41f0f6:	stc    
  41f0f7:	std    
  41f0f8:	imul   edx,DWORD PTR [ecx-0xe],0x4a
  41f0fc:	xchg   DWORD PTR [ebp+0x1963126a],esi
  41f102:	xchg   edi,eax
  41f103:	imul   esp,DWORD PTR [ebx-0x5a061230],0x432e1dad
  41f10d:	std    
  41f10e:	push   edx
  41f10f:	out    0x50,eax
  41f111:	cmp    BYTE PTR [edx+0x603ba9b],bl
  41f117:	add    al,0xc4
  41f119:	push   esp
  41f11a:	out    dx,al
  41f11b:	fidivr DWORD PTR [edi+0x11]
  41f11e:	inc    esi
  41f11f:	data16 sbb ch,BYTE PTR [edi]
  41f122:	frstor [eax+0x2b3f32ee]
  41f128:	mov    esi,0xfea2e3b1
  41f12d:	fst    st(3)
  41f12f:	aaa    
  41f130:	jmp    0x4f2c:0xaeb8c5db
  41f137:	push   es
  41f138:	stos   DWORD PTR es:[edi],eax
  41f139:	retf   
  41f13a:	pop    ecx
  41f13b:	scas   al,BYTE PTR es:[edi]
  41f13c:	rcr    DWORD PTR [edi],1
  41f13e:	inc    esi
  41f13f:	xchg   DWORD PTR [ebp-0x186bf6ce],ebp
  41f145:	dec    ecx
  41f146:	inc    ebp
  41f147:	sub    edx,esi
  41f149:	jno    0x41f16d
  41f14b:	pop    edi
  41f14c:	or     dh,ah
  41f14e:	push   ebx
  41f14f:	mov    edi,0x1e2497a5
  41f154:	xchg   dx,ax
  41f156:	int3   
  41f157:	mov    ?,WORD PTR [ebx-0x796020ca]
  41f15d:	outs   dx,DWORD PTR ds:[esi]
  41f15e:	inc    esi
  41f15f:	repnz in eax,dx
  41f161:	xchg   edi,eax
  41f162:	hlt    
  41f163:	bound  esi,QWORD PTR [edx+0x19]
  41f166:	std    
  41f167:	adc    al,0xa5
  41f169:	and    cl,al
  41f16b:	and    DWORD PTR [ecx+0xa],ebx
  41f16e:	dec    edx
  41f16f:	loop   0x41f16b
  41f171:	jmp    0x41f1b8
  41f173:	xor    al,0x11
  41f176:	leave  
  41f177:	add    eax,0x29dc3cbd
  41f17c:	push   ds
  41f17d:	ja     0x41f18c
  41f17f:	and    ebp,DWORD PTR [edx-0x59ab2087]
  41f185:	jmp    0xd01c459c
  41f18a:	cdq    
  41f18b:	in     al,dx
  41f18c:	pop    esi
  41f18d:	mov    ch,0x32
  41f18f:	or     esi,ebp
  41f191:	xchg   edx,eax
  41f192:	adc    BYTE PTR ds:0x1333159c,dl
  41f198:	pop    edx
  41f199:	sbb    esi,eax
  41f19b:	push   ecx
  41f19c:	adc    cl,BYTE PTR [esi]
  41f19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f19f:	xchg   ebp,eax
  41f1a0:	div    BYTE PTR [esi+ebx*8]
  41f1a3:	mov    ecx,0x709a3623
  41f1a8:	sub    al,0x51
  41f1aa:	mov    bl,0x8d
  41f1ac:	and    eax,0x27307fa4
  41f1b1:	mov    eax,ds:0xb580bfc9
  41f1b6:	mov    edi,0xc493c993
  41f1bb:	and    edx,ecx
  41f1bd:	sbb    BYTE PTR [eax],bh
  41f1bf:	push   esp
  41f1c0:	jnp    0x41f1db
  41f1c2:	data16 and BYTE PTR ds:0x5e56178a,dh
  41f1c9:	mov    ch,0x66
  41f1cb:	aam    0x2e
  41f1cd:	add    ebp,DWORD PTR [ebx]
  41f1cf:	sbb    al,0xc4
  41f1d1:	jae    0x41f195
  41f1d3:	fldenv [edx]
  41f1d5:	or     dl,BYTE PTR [ebp+0x6dfdbef3]
  41f1db:	sbb    BYTE PTR [esi+0x699ec135],0xdb
  41f1e2:	fstp   DWORD PTR [edi]
  41f1e4:	mov    ah,0x45
  41f1e7:	jnp    0x41f1f8
  41f1e9:	jno    0x41f1e8
  41f1eb:	int3   
  41f1ec:	cmp    edi,esp
  41f1ee:	mov    eax,ds:0xe9ff71d5
  41f1f3:	repnz push 0xa3ed4634
  41f1f9:	pop    ss
  41f1fa:	or     DWORD PTR [ecx],ebp
  41f1fc:	cmp    edx,DWORD PTR [ebx]
  41f1fe:	mov    edi,0xc7736a7
  41f203:	mov    ds:0xe5a40d8,eax
  41f208:	sub    DWORD PTR [eax+ebp*1-0x4cb0da4],edx
  41f20f:	sbb    dh,BYTE PTR [edx]
  41f211:	dec    edx
  41f212:	lds    eax,FWORD PTR [ebp-0xeb7d953]
  41f218:	cmp    BYTE PTR [ebp+0x78ddcf98],dh
  41f21e:	inc    esp
  41f21f:	je     0x41f1ba
  41f221:	and    dh,al
  41f223:	add    al,0xa1
  41f225:	loope  0x41f1fd
  41f227:	pop    edx
  41f228:	loopne 0x41f234
  41f22a:	dec    esi
  41f22b:	in     eax,0x4e
  41f22d:	cmp    DWORD PTR [edi-0x5fa34cde],ecx
  41f233:	dec    ecx
  41f234:	jbe    0x41f2a6
  41f236:	daa    
  41f237:	xchg   ebx,eax
  41f238:	test   bl,ch
  41f23a:	das    
  41f23b:	xchg   edx,eax
  41f23c:	dec    ecx
  41f23d:	mov    al,0xa5
  41f23f:	rcl    dl,1
  41f241:	lock inc ebp
  41f243:	pop    ebx
  41f244:	dec    edi
  41f245:	cmp    eax,0xb57e979a
  41f24a:	dec    edx
  41f24b:	push   eax
  41f24c:	loopne 0x41f21c
  41f24e:	aam    0x2e
  41f250:	adc    esi,edx
  41f252:	lds    edx,FWORD PTR [ecx+0x3]
  41f255:	push   ebx
  41f256:	ja     0x41f20a
  41f258:	bswap  esp
  41f25a:	xor    DWORD PTR [ecx-0x5f],0x41a92e35
  41f261:	ret    0xb613
  41f264:	pop    ebx
  41f265:	fdivr  DWORD PTR [ebp+0x4b]
  41f268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f269:	mov    ecx,0x1f9839aa
  41f26e:	cmc    
  41f26f:	or     BYTE PTR [edi-0x5c023386],al
  41f275:	popa   
  41f276:	sub    ah,BYTE PTR [ecx]
  41f278:	fwait
  41f279:	mov    eax,0x97e95c05
  41f27e:	dec    esp
  41f280:	out    dx,al
  41f281:	jo     0x41f289
  41f283:	mov    ds:0x1e6f79f8,eax
  41f288:	xchg   esi,ebp
  41f28a:	lahf   
  41f28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f28c:	xor    bh,BYTE PTR [ecx+0x45]
  41f28f:	int    0x40
  41f291:	adc    bl,bl
  41f293:	fisubr WORD PTR [ebp-0x1b]
  41f296:	leave  
  41f297:	sub    edx,DWORD PTR [edi+0x1aa81735]
  41f29d:	sbb    BYTE PTR es:[edx+0x6d460de0],ah
  41f2a4:	popf   
  41f2a5:	lods   al,BYTE PTR ds:[esi]
  41f2a6:	(bad)  
  41f2a8:	push   ebx
  41f2a9:	loopne 0x41f304
  41f2ab:	scas   al,BYTE PTR es:[edi]
  41f2ac:	rcr    ch,0xac
  41f2af:	mov    ds:0x495518e5,al
  41f2b4:	pop    ecx
  41f2b5:	retf   
  41f2b6:	or     BYTE PTR [ebx+0x26],dh
  41f2b9:	pop    ebp
  41f2ba:	lahf   
  41f2bb:	cmp    eax,0xa18e275c
  41f2c0:	inc    esp
  41f2c1:	mov    ch,0x80
  41f2c3:	loopne 0x41f333
  41f2c5:	fs mov ecx,0x45bcac1f
  41f2cb:	push   ebx
  41f2cc:	mov    edi,0x72ec4d21
  41f2d1:	daa    
  41f2d2:	aaa    
  41f2d3:	mov    ecx,0x23101d6d
  41f2d8:	or     bl,BYTE PTR [edx-0x1f]
  41f2db:	add    eax,0x33bb7326
  41f2e0:	dec    ebp
  41f2e1:	mov    ebp,0x321a7c2e
  41f2e6:	push   eax
  41f2e7:	mov    edi,0xf7537b9d
  41f2ec:	and    BYTE PTR [eax-0x74599cbc],bh
  41f2f2:	mov    ds:0xaca75b82,al
  41f2f7:	rcr    DWORD PTR [ebp-0x1190d64b],1
  41f2fd:	hlt    
  41f2fe:	bound  edx,QWORD PTR [edi-0x68b9d9ce]
  41f304:	xor    al,0xde
  41f306:	push   ebp
  41f307:	cdq    
  41f308:	enter  0xa228,0x4b
  41f30c:	sahf   
  41f30d:	xchg   ebp,eax
  41f30e:	jbe    0x41f2a9
  41f310:	pop    ebx
  41f311:	xor    ebp,DWORD PTR [ebx]
  41f313:	mov    ds:0x79c6323c,eax
  41f318:	outs   dx,BYTE PTR ds:[esi]
  41f319:	pusha  
  41f31a:	aad    0x8c
  41f31c:	stos   BYTE PTR es:[edi],al
  41f31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31e:	jnp    0x41f38f
  41f320:	jne    0x41f2ee
  41f322:	xor    al,0xa3
  41f324:	sub    ebx,DWORD PTR [esi+0x7267bcc]
  41f32a:	and    DWORD PTR [eax+0x2e],ebx
  41f32d:	or     DWORD PTR [ecx+0x3c],ebp
  41f330:	popf   
  41f331:	xor    ecx,DWORD PTR [edi+0x57]
  41f334:	bound  ebp,QWORD PTR [edi+0x470bc325]
  41f33a:	inc    esi
  41f33b:	jecxz  0x41f2d4
  41f33d:	mov    es,WORD PTR [ebx-0x6b185955]
  41f343:	outs   dx,DWORD PTR ds:[esi]
  41f344:	cmp    al,0x82
  41f346:	mov    esi,0x6b6ba1f1
  41f34b:	lahf   
  41f34c:	xor    al,0x25
  41f34e:	mov    eax,ds:0x45ca556b
  41f353:	add    DWORD PTR [esi+edx*2+0x3b],0x29
  41f358:	add    al,bl
  41f35a:	fst    DWORD PTR [edi+0x22fbe770]
  41f360:	jge    0x41f3c5
  41f362:	sti    
  41f363:	(bad)  
  41f364:	and    bl,bl
  41f366:	icebp  
  41f367:	cli    
  41f368:	mov    ch,dl
  41f36a:	cmp    eax,0xd8278d42
  41f36f:	add    al,BYTE PTR [bx+si]
  41f372:	mov    bh,0x1b
  41f374:	shr    DWORD PTR [ebp+eiz*2+0x4ee43d34],0xa3
  41f37c:	mov    ds:0x9e89c5fd,eax
  41f381:	push   esp
  41f382:	in     eax,dx
  41f383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f384:	retf   0x7c53
  41f387:	inc    edx
  41f388:	dec    esi
  41f389:	ins    DWORD PTR es:[edi],dx
  41f38a:	jbe    0x41f32e
  41f38c:	adc    DWORD PTR [edx+0x7b],ecx
  41f38f:	repz jl 0x41f3aa
  41f392:	inc    esi
  41f393:	xchg   ebx,eax
  41f394:	imul   ebx,esp,0xffffff87
  41f397:	mov    BYTE PTR [ebx-0x2cfbe8f5],ch
  41f39d:	push   ecx
  41f39e:	daa    
  41f39f:	mov    ds:0xd5df06ea,eax
  41f3a4:	and    al,0x81
  41f3a6:	repz adc BYTE PTR [ebx],bl
  41f3a9:	ss mov eax,0x24f1d7a7
  41f3af:	mov    bl,0x90
  41f3b1:	dec    ebp
  41f3b2:	out    0xf,al
  41f3b4:	jmp    0x41f42f
  41f3b6:	add    eax,0xc5d0eda3
  41f3bb:	clc    
  41f3bc:	ret    
  41f3bd:	in     al,dx
  41f3be:	xchg   edi,eax
  41f3bf:	out    dx,al
  41f3c0:	push   esp
  41f3c1:	in     al,dx
  41f3c2:	cmp    DWORD PTR [edi-0x68],edi
  41f3c5:	dec    ebp
  41f3c6:	aaa    
  41f3c7:	xchg   BYTE PTR [eax],bh
  41f3c9:	out    0x12,eax
  41f3cb:	pop    eax
  41f3cc:	cmp    ecx,DWORD PTR [edx]
  41f3ce:	dec    esi
  41f3cf:	sub    DWORD PTR [eax],0x18
  41f3d2:	xabort 0x4e
  41f3d5:	fs jmp 0x41f41f
  41f3d8:	mov    BYTE PTR [ebx-0x1dc12f0a],dh
  41f3de:	aaa    
  41f3df:	sbb    al,0xa6
  41f3e1:	jnp    0x41f39d
  41f3e3:	jns    0x41f3d2
  41f3e5:	int3   
  41f3e6:	(bad)
  41f3e9:	push   edx
  41f3ea:	je     0x41f3fa
  41f3ec:	bound  eax,QWORD PTR [eax+ecx*4+0x2ed65ddc]
  41f3f3:	and    eax,DWORD PTR [edi+0x42]
  41f3f6:	xor    al,0xee
  41f3f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f9:	adc    al,0xf9
  41f3fb:	bound  esi,QWORD PTR [ebx]
  41f3fd:	xlat   BYTE PTR ds:[ebx]
  41f3fe:	dec    eax
  41f3ff:	clc    
  41f400:	aaa    
  41f401:	xchg   esp,ebp
  41f403:	std    
  41f404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f405:	pop    ss
  41f406:	mov    ch,BYTE PTR [ebx-0x71]
  41f409:	lods   al,BYTE PTR ds:[esi]
  41f40a:	sti    
  41f40b:	xor    DWORD PTR [esi],esp
  41f40d:	sub    DWORD PTR [ecx+0x46f19260],0xe8b1bebd
  41f417:	pop    ebx
  41f418:	jp     0x41f44e
  41f41a:	repz gs scas al,BYTE PTR es:[edi]
  41f41d:	mov    edi,0x981e3b2c
  41f422:	sbb    ebp,DWORD PTR [edx+edx*2+0x21df6c05]
  41f429:	imul   ebx,esi,0xffffffbb
  41f42c:	in     ax,dx
  41f42e:	sub    DWORD PTR [ebx+0x576a41ac],esp
  41f434:	es daa 
  41f436:	mov    dl,0x78
  41f438:	pop    ds
  41f439:	add    ebx,DWORD PTR [edx-0x1de67357]
  41f43f:	fisttp QWORD PTR [ecx+0x2]
  41f442:	xchg   BYTE PTR [esi],dh
  41f444:	add    BYTE PTR [ebp-0x1c],dh
  41f447:	inc    ecx
  41f448:	sbb    DWORD PTR ds:0x1b024837,ebp
  41f44e:	xchg   bl,bh
  41f450:	mov    dh,0x6f
  41f452:	fdivr  st,st(4)
  41f454:	jae    0x41f48b
  41f456:	cmp    eax,0x54e006c0
  41f45b:	outs   dx,DWORD PTR ds:[esi]
  41f45c:	mul    BYTE PTR [edx]
  41f45e:	inc    esi
  41f45f:	ins    DWORD PTR es:[edi],dx
  41f460:	and    eax,0x65fc12e5
  41f465:	ja     0x41f49b
  41f467:	mov    BYTE PTR [edx-0x3e],cl
  41f46a:	sbb    BYTE PTR [ebx],ah
  41f46c:	xchg   DWORD PTR [ecx-0x8],edi
  41f46f:	adc    al,0x26
  41f471:	sub    dh,BYTE PTR [ecx+0x1757f45e]
  41f477:	sar    edi,0xb4
  41f47a:	mov    dl,0x1a
  41f47c:	or     al,0x83
  41f47e:	and    ch,dh
  41f480:	jge    0x41f4cd
  41f482:	aaa    
  41f483:	xor    BYTE PTR [esi],ah
  41f485:	test   BYTE PTR [ebp+0x43],0xce
  41f489:	dec    ecx
  41f48a:	scas   al,BYTE PTR es:[edi]
  41f48b:	add    DWORD PTR [edx+0x35],0x1b
  41f48f:	cmp    ebp,esp
  41f491:	and    al,0xcc
  41f493:	outs   dx,BYTE PTR ds:[esi]
  41f494:	aas    
  41f495:	(bad)  
  41f496:	cmp    DWORD PTR ds:0xedf17a7,ecx
  41f49c:	es mov esi,0x52cd256
  41f4a2:	mov    bl,BYTE PTR [ebx]
  41f4a4:	es iret 
  41f4a6:	mov    bh,0x3f
  41f4a8:	push   ecx
  41f4a9:	mov    ah,0x42
  41f4ab:	outs   dx,BYTE PTR ds:[esi]
  41f4ac:	xor    BYTE PTR [edi+0x2316dc59],dl
  41f4b2:	mov    dl,0x43
  41f4b4:	mov    cl,0x34
  41f4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b7:	and    BYTE PTR [eax+ebp*8],cl
  41f4ba:	aam    0x7b
  41f4bc:	ficomp WORD PTR [edi+eax*8]
  41f4bf:	in     al,0x4b
  41f4c1:	push   ds
  41f4c2:	inc    esi
  41f4c3:	mov    ebp,0x75653df0
  41f4c8:	add    edx,DWORD PTR [ecx-0x14]
  41f4cb:	les    ebx,FWORD PTR [ebp+0x42]
  41f4ce:	pop    eax
  41f4cf:	mov    ds:0x856deeb,eax
  41f4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d5:	jb     0x41f4c2
  41f4d7:	push   esp
  41f4d8:	mov    bl,dh
  41f4da:	stos   DWORD PTR es:[edi],eax
  41f4db:	retf   
  41f4dc:	ins    BYTE PTR es:[edi],dx
  41f4dd:	xor    eax,0x14a7acc3
  41f4e2:	dec    eax
  41f4e3:	jno    0x41f52e
  41f4e5:	retf   0x8045
  41f4e8:	shl    DWORD PTR [eax+0x512be715],cl
  41f4ee:	aaa    
  41f4ef:	outs   dx,BYTE PTR ds:[esi]
  41f4f0:	push   ebp
  41f4f1:	xchg   ebx,eax
  41f4f2:	ins    DWORD PTR es:[edi],dx
  41f4f3:	adc    esp,DWORD PTR [ecx+ecx*2]
  41f4f6:	push   eax
  41f4f7:	inc    ebx
  41f4f8:	jnp    0x41f552
  41f4fa:	mov    dh,0x39
  41f4fc:	call   0xdb8cf74b
  41f501:	int    0x7d
  41f503:	popf   
  41f504:	rol    DWORD PTR [ebx],1
  41f506:	call   0xdb6d298d
  41f50b:	mov    ds:0x5150510f,al
  41f510:	call   0xe4b53ae8
  41f515:	sbb    ax,0xaa85
  41f519:	cmp    ah,BYTE PTR [esi+0x35cd7127]
  41f51f:	mov    ds:0x63dd8e45,eax
  41f524:	xchg   edi,eax
  41f525:	data16 mov bh,dh
  41f528:	push   es
  41f529:	inc    ebx
  41f52a:	or     DWORD PTR [ecx+0x2a],0xffffff99
  41f52e:	dec    ebp
  41f52f:	fdiv   QWORD PTR [ebp+esi*8-0x5f1458dc]
  41f536:	or     esp,DWORD PTR [ebx+0x1ecb82ff]
  41f53c:	pop    ss
  41f53d:	out    dx,al
  41f53e:	jmp    0x41f573
  41f540:	inc    esi
  41f541:	add    DWORD PTR [ebp+esi*1+0x28],esp
  41f545:	lods   al,BYTE PTR ds:[esi]
  41f546:	pop    edx
  41f547:	pop    ecx
  41f548:	aam    0x72
  41f54a:	inc    ebp
  41f54b:	mov    ds:0x76528b3c,eax
  41f550:	mov    ds:0x88c47e11,al
  41f555:	lds    esi,FWORD PTR [edi]
  41f557:	es xchg esi,eax
  41f559:	sub    al,0xfa
  41f55b:	mov    DWORD PTR [esi-0x4b],esi
  41f55e:	retf   
  41f55f:	mov    bh,0x3f
  41f561:	mov    eax,DWORD PTR [esi+0x6c15a640]
  41f567:	jns    0x41f578
  41f569:	(bad)  
  41f56a:	sub    eax,0xbcb585d6
  41f56f:	push   esp
  41f570:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f572:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f574:	jg     0x41f5b1
  41f576:	ss push ebp
  41f578:	mov    eax,0xe08e45ce
  41f57d:	add    al,0xb
  41f57f:	mov    cl,0x99
  41f581:	cli    
  41f582:	sub    al,0xe4
  41f584:	fistp  QWORD PTR [esi+0x2622195]
  41f58a:	jle    0x41f5a8
  41f58c:	mov    eax,0x3ae14605
  41f591:	cwde   
  41f592:	sahf   
  41f593:	in     al,0x8c
  41f595:	mov    ds:0x9699ce2,al
  41f59a:	call   0xb497eaba
  41f59f:	jge    0x41f5a7
  41f5a1:	(bad)  
  41f5a2:	daa    
  41f5a3:	push   ebx
  41f5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a5:	stos   DWORD PTR es:[edi],eax
  41f5a6:	and    eax,0x648cf987
  41f5ab:	or     BYTE PTR [edx-0x59499d68],al
  41f5b1:	(bad)  
  41f5b3:	xchg   ebp,eax
  41f5b4:	xchg   ecx,eax
  41f5b5:	inc    eax
  41f5b6:	scas   eax,DWORD PTR es:[edi]
  41f5b7:	push   es
  41f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b9:	jns    0x41f5c7
  41f5bb:	inc    edi
  41f5bc:	test   al,0xc3
  41f5be:	(bad)  
  41f5bf:	fdiv   QWORD PTR [edx]
  41f5c1:	ss inc ebp
  41f5c3:	and    al,0xb8
  41f5c5:	jbe    0x41f5f4
  41f5c7:	and    edx,DWORD PTR [ebp-0x59e9ec66]
  41f5cd:	cmp    al,0x69
  41f5cf:	lahf   
  41f5d0:	clc    
  41f5d1:	or     BYTE PTR [eax+eax*1],dl
  41f5d4:	mov    ah,0x33
  41f5d6:	ins    BYTE PTR es:[edi],dx
  41f5d7:	(bad)  
  41f5d9:	arpl   bp,di
  41f5db:	add    BYTE PTR [esi+0x2a],cl
  41f5de:	add    ebx,DWORD PTR [edi+ebx*4+0x36967c62]
  41f5e5:	test   DWORD PTR [eax],eax
  41f5e7:	iret   
  41f5e8:	stc    
  41f5e9:	ret    0x242
  41f5ec:	jmp    0x41f662
  41f5ee:	mov    dh,0x1f
  41f5f0:	xchg   DWORD PTR [ebp+0x1f6ef4cc],eax
  41f5f6:	inc    esi
  41f5f7:	fisub  DWORD PTR [esi-0x26]
  41f5fa:	sbb    BYTE PTR [ecx],0xb5
  41f5fd:	jns    0x41f5b8
  41f5ff:	mov    eax,0xa301b600
  41f604:	push   ds
  41f605:	ins    DWORD PTR es:[edi],dx
  41f606:	les    eax,FWORD PTR [ebx]
  41f608:	sbb    BYTE PTR [edi+0x47c539eb],al
  41f60e:	popa   
  41f60f:	push   ds
  41f610:	and    dl,cl
  41f612:	lods   eax,DWORD PTR ds:[esi]
  41f613:	mov    ebp,DWORD PTR [edi-0x4b]
  41f616:	push   edx
  41f617:	mov    edi,0x3546b1e5
  41f61c:	data16 icebp 
  41f61e:	inc    ebp
  41f61f:	ss ss dec ebp
  41f622:	mov    edx,0xb44847a
  41f627:	and    BYTE PTR [ebx-0x63dd22f7],al
  41f62d:	data16 (bad) 
  41f62f:	dec    eax
  41f630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f631:	popa   
  41f632:	mov    ecx,0x5c9f1f64
  41f637:	or     DWORD PTR ds:0xd3221635,esi
  41f63d:	mov    BYTE PTR [edx-0x620e8999],al
  41f643:	hlt    
  41f644:	es ffreep st(5)
  41f647:	rol    DWORD PTR [ebx+esi*8-0x53],cl
  41f64b:	xor    al,0xcd
  41f64d:	pop    ss
  41f64e:	push   ss
  41f64f:	js     0x41f5ec
  41f651:	mov    ds:0xa6386b33,eax
  41f656:	clc    
  41f657:	jo     0x41f675
  41f659:	in     eax,0x56
  41f65b:	arpl   WORD PTR [edi+0x2a87c5dc],di
  41f661:	sub    al,0x4
  41f663:	adc    DWORD PTR [edi],esp
  41f665:	pop    es
  41f666:	xor    BYTE PTR [edi-0xd],ah
  41f669:	and    al,BYTE PTR [edi]
  41f66b:	and    esi,DWORD PTR [eax+edi*8+0x5925af66]
  41f672:	sbb    BYTE PTR [ebx-0x57],bh
  41f675:	jo     0x41f60b
  41f677:	int    0x7b
  41f679:	in     eax,0x38
  41f67b:	daa    
  41f67c:	xchg   ebx,eax
  41f67d:	xor    al,0x25
  41f67f:	sbb    DWORD PTR [esi+ebp*4-0x19],edi
  41f683:	out    0xe6,al
  41f685:	in     eax,0xc2
  41f687:	dec    eax
  41f688:	xor    al,0xd5
  41f68a:	(bad)  
  41f68d:	cmc    
  41f68e:	ss (bad) 
  41f690:	cli    
  41f691:	xchg   DWORD PTR [ecx],esp
  41f693:	outs   dx,BYTE PTR ds:[esi]
  41f694:	or     edi,DWORD PTR [eax]
  41f696:	push   es
  41f697:	sti    
  41f698:	inc    edx
  41f699:	mov    ch,0x26
  41f69b:	sub    BYTE PTR [eax-0x38e3b228],cl
  41f6a1:	test   eax,0xb4245e8a
  41f6a6:	xor    eax,0xca6997f4
  41f6ab:	adc    eax,0x62e86e94
  41f6b0:	push   esi
  41f6b1:	(bad)  
  41f6b2:	sub    al,0x23
  41f6b4:	mov    esi,0x266873c3
  41f6b9:	mov    bh,BYTE PTR [ebp+edx*2-0x5209d3be]
  41f6c0:	sbb    esi,DWORD PTR ds:0x2e1ad95b
  41f6c6:	nop
  41f6c7:	adc    DWORD PTR [ecx+0x39],0x38a478c2
  41f6ce:	push   eax
  41f6cf:	aaa    
  41f6d0:	jnp    0x41f6e9
  41f6d2:	push   es
  41f6d3:	pop    ecx
  41f6d4:	out    dx,al
  41f6d5:	jmp    0xa2dc:0x64ad38dc
  41f6dc:	fldenv [ecx]
  41f6de:	xchg   ecx,eax
  41f6df:	scas   al,BYTE PTR es:[edi]
  41f6e0:	sub    DWORD PTR [eax+0x36],ebp
  41f6e3:	dec    edi
  41f6e4:	inc    ecx
  41f6e5:	les    esp,FWORD PTR ds:0xe902975e
  41f6eb:	cdq    
  41f6ec:	je     0x41f723
  41f6ee:	pop    ds
  41f6ef:	pushf  
  41f6f0:	fsub   QWORD PTR [esp+edx*2+0x4289947a]
  41f6f7:	fs int3 
  41f6f9:	sbb    BYTE PTR [edi-0x4d],cl
  41f6fc:	dec    ebp
  41f6fd:	iret   
  41f6fe:	xor    DWORD PTR [edi],esp
  41f700:	push   ecx
  41f701:	xor    eax,0xe4dfdeef
  41f706:	mov    ss,WORD PTR [ebx+0x12]
  41f709:	hlt    
  41f70a:	inc    ebp
  41f70b:	and    DWORD PTR [edx-0x743d4b01],esp
  41f711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f712:	sbb    BYTE PTR [esp+ecx*2+0x52],al
  41f716:	push   ds
  41f717:	mov    ds:0x78ae8d8f,eax
  41f71c:	es loopne 0x41f6ca
  41f71f:	inc    ecx
  41f720:	mov    WORD PTR [edx-0x621d1edf],?
  41f726:	cmp    BYTE PTR [ebp-0x62c4dc92],bh
  41f72c:	das    
  41f72d:	and    DWORD PTR [edx+0x7c8a342a],edi
  41f733:	ins    BYTE PTR es:[edi],dx
  41f734:	and    eax,0xd31f5f6f
  41f739:	jmp    0xa317f593
  41f73e:	(bad)  
  41f73f:	jp     0x41f767
  41f741:	ficom  WORD PTR [edx+0x42]
  41f744:	jmp    0x41f744
  41f746:	repz shl BYTE PTR ds:0x15dfe735,0x2
  41f74e:	out    dx,eax
  41f74f:	jle    0x41f7b7
  41f751:	loope  0x41f76b
  41f753:	sahf   
  41f754:	(bad)  
  41f755:	(bad)  
  41f757:	push   ebp
  41f758:	jp     0x41f788
  41f75a:	dec    edi
  41f75b:	clc    
  41f75c:	(bad)  
  41f75d:	jbe    0x41f6e1
  41f75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f760:	push   es
  41f761:	cs out 0x1f,al
  41f764:	or     esi,esi
  41f766:	adc    BYTE PTR [ecx],0xa5
  41f769:	jo     0x41f704
  41f76b:	daa    
  41f76c:	push   0x77
  41f76e:	(bad)
  41f773:	or     al,0x33
  41f775:	cmp    DWORD PTR [edx],ebx
  41f777:	mov    esp,0x9f28c28b
  41f77c:	adc    bh,BYTE PTR [esi+edi*4]
  41f77f:	sub    eax,0x6d4ca408
  41f784:	fst    QWORD PTR [ecx+0x263a7338]
  41f78a:	xor    eax,0xca353d0e
  41f78f:	mov    ds:0xab1d1b59,al
  41f794:	xor    al,0xad
  41f796:	inc    ebp
  41f797:	js     0x41f772
  41f799:	data16 int3 
  41f79b:	xchg   esi,eax
  41f79c:	sti    
  41f79d:	in     al,0xdf
  41f79f:	mov    ebp,0xe97616b9
  41f7a4:	data16 in al,dx
  41f7a6:	xchg   DWORD PTR [edx+0x612e45a9],ebx
  41f7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ad:	inc    esp
  41f7ae:	inc    ebx
  41f7af:	cmp    DWORD PTR [ebx+0x7f77b3fb],edx
  41f7b5:	sub    edi,DWORD PTR [ecx+0x4566d816]
  41f7bb:	out    dx,eax
  41f7bc:	aad    0x8a
  41f7be:	jl     0x41f759
  41f7c0:	push   ecx
  41f7c1:	aaa    
  41f7c2:	dec    ebx
  41f7c3:	pop    ss
  41f7c4:	mov    eax,ds:0xdf3f9022
  41f7c9:	fld    DWORD PTR [ebp+0x21]
  41f7cc:	push   eax
  41f7cd:	or     bh,BYTE PTR [ebx-0x19]
  41f7d0:	mov    dh,BYTE PTR [esi]
  41f7d2:	dec    eax
  41f7d3:	sub    cl,BYTE PTR [esi+esi*8-0x41ce5d20]
  41f7da:	push   ss
  41f7db:	and    eax,0x49848126
  41f7e0:	(bad)  
  41f7e1:	sbb    BYTE PTR [ebp+0x2a],ah
  41f7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e5:	xor    eax,0x592148e6
  41f7ea:	jb     0x41f784
  41f7ec:	add    edx,DWORD PTR [edx]
  41f7ee:	(bad)  
  41f7ef:	jnp    0x41f7ae
  41f7f1:	call   0x5a94a430
  41f7f6:	jae    0x41f866
  41f7f8:	dec    eax
  41f7f9:	jecxz  0x41f7f6
  41f7fb:	mov    ds:0x64f048f5,al
  41f800:	sahf   
  41f801:	adc    edi,DWORD PTR ds:0xcc6567eb
  41f807:	bswap  esp
  41f809:	cli    
  41f80a:	fcomp  DWORD PTR [esi+0x2a4db52c]
  41f810:	call   FWORD PTR [edi+0x35]
  41f813:	cld    
  41f814:	xor    eax,0x1f82462f
  41f819:	push   ecx
  41f81a:	jmp    DWORD PTR [esi+ebp*2+0x723a5729]
  41f821:	fidiv  DWORD PTR [edx]
  41f823:	and    esi,DWORD PTR [esi-0x2d]
  41f826:	aad    0xad
  41f828:	push   es
  41f829:	xchg   edi,eax
  41f82a:	push   esp
  41f82b:	and    ebp,esi
  41f82d:	cld    
  41f82e:	sub    bl,ah
  41f830:	cli    
  41f831:	pop    ds
  41f832:	dec    cl
  41f834:	ret    0x3e6a
  41f837:	mov    ds:0x17c140cd,eax
  41f83c:	es pop esi
  41f83e:	ss test eax,ebx
  41f841:	pop    ebx
  41f842:	or     BYTE PTR [ecx+0x4f983577],0x56
  41f849:	bound  esp,QWORD PTR [ebx]
  41f84b:	pop    esi
  41f84c:	xor    al,0xbe
  41f84e:	lds    ebp,FWORD PTR ds:0xbd7635ff
  41f854:	arpl   WORD PTR [ebp+0x53d8b0f3],dx
  41f85a:	pop    esp
  41f85b:	mov    ds:0x165af8fb,al
  41f860:	xchg   ebp,eax
  41f861:	std    
  41f862:	xchg   edi,eax
  41f863:	es es in eax,dx
  41f866:	mov    ebx,DWORD PTR [esi+0x79]
  41f869:	xor    bh,ch
  41f86b:	dec    ebp
  41f86c:	outs   dx,BYTE PTR ds:[esi]
  41f86d:	mov    ch,0x2e
  41f86f:	out    dx,al
  41f870:	repnz shl BYTE PTR [edx],0xfa
  41f874:	fcmovnbe st,st(6)
  41f876:	(bad)
  41f879:	adc    DWORD PTR [esp+ebp*2+0x10],ebx
  41f87d:	in     al,0x2
  41f87f:	ins    DWORD PTR es:[edi],dx
  41f880:	jge    0x41f848
  41f882:	loop   0x41f8a6
  41f884:	xor    dl,al
  41f886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f887:	jbe    0x41f82b
  41f889:	je     0x41f8b2
  41f88b:	sbb    esp,ecx
  41f88d:	mov    ebp,0xb1283ced
  41f892:	adc    ah,BYTE PTR [esi+esi*1+0x7383c613]
  41f899:	fcom   QWORD PTR [ecx+0x45f1060b]
  41f89f:	push   ds
  41f8a0:	dec    edx
  41f8a1:	pop    es
  41f8a2:	dec    esp
  41f8a3:	(bad)  
  41f8a4:	ret    
  41f8a5:	ret    
  41f8a6:	xor    al,0xee
  41f8a8:	in     eax,0x91
  41f8aa:	in     eax,0x22
  41f8ac:	dec    ebp
  41f8ad:	stc    
  41f8ae:	shl    BYTE PTR [esi],cl
  41f8b0:	ins    BYTE PTR es:[edi],dx
  41f8b1:	xchg   BYTE PTR [eax+0x62],al
  41f8b4:	xchg   ah,ah
  41f8b6:	test   eax,0xdd2455ec
  41f8bb:	and    cl,BYTE PTR [eax]
  41f8bd:	xor    eax,0xecb7bf8c
  41f8c2:	repnz mov al,ds:0x8bdeb789
  41f8c8:	es dec edi
  41f8ca:	add    al,0x81
  41f8cc:	bound  eax,QWORD PTR [ebp+0x34a667f9]
  41f8d2:	leave  
  41f8d3:	int3   
  41f8d4:	out    dx,eax
  41f8d5:	and    eax,0x47284c07
  41f8da:	adc    BYTE PTR [ebx+0x26],0x92
  41f8de:	lods   eax,DWORD PTR ds:[esi]
  41f8df:	aaa    
  41f8e0:	or     DWORD PTR [esi+ebp*8-0x4a],ebx
  41f8e4:	push   edx
  41f8e5:	mov    ch,0x11
  41f8e7:	add    dh,dl
  41f8e9:	push   ecx
  41f8ea:	jmp    0x4f93:0x45f41557
  41f8f1:	mov    ds:0x50a7bd4d,al
  41f8f6:	shr    ebx,cl
  41f8f8:	jb     0x41f88c
  41f8fa:	sub    al,0x23
  41f8fc:	xor    al,0x3e
  41f8fe:	mov    esp,0xc63ec45
  41f903:	test   al,0x4a
  41f905:	dec    eax
  41f906:	mov    esp,0x45cb9343
  41f90b:	ret    0x7e3f
  41f90e:	add    al,dh
  41f910:	repz jnp 0x41f912
  41f913:	pop    esp
  41f914:	dec    ecx
  41f915:	leave  
  41f916:	jbe    0x41f93a
  41f918:	sub    BYTE PTR [esi],ah
  41f91a:	dec    edi
  41f91b:	and    al,0x33
  41f91d:	sbb    BYTE PTR [esi-0x49],al
  41f920:	in     eax,dx
  41f921:	pusha  
  41f922:	mov    ebp,0xaa907143
  41f927:	jbe    0x41f984
  41f929:	mov    ch,0xb
  41f92b:	sub    al,0x90
  41f92d:	es dec ebp
  41f92f:	dec    esp
  41f930:	lds    esi,FWORD PTR [ebp-0x48468649]
  41f936:	gs jecxz 0x41f8d6
  41f939:	cmp    BYTE PTR [ecx+eiz*8],bh
  41f93c:	jb     0x41f973
  41f93e:	sbb    ebp,esp
  41f940:	pop    ebx
  41f941:	add    eax,ebp
  41f943:	stos   DWORD PTR es:[edi],eax
  41f944:	mov    al,ds:0x26534b08
  41f949:	stos   DWORD PTR es:[edi],eax
  41f94a:	push   edi
  41f94b:	xchg   ebx,eax
  41f94c:	mov    bl,0x1e
  41f94e:	mov    ebx,0x9db58bfc
  41f953:	push   ebx
  41f954:	daa    
  41f955:	retf   0x410f
  41f958:	jp     0x41f91a
  41f95a:	pop    ss
  41f95b:	into   
  41f95c:	clc    
  41f95d:	cmc    
  41f95e:	dec    eax
  41f95f:	pop    es
  41f960:	mov    es:0x4c48876c,al
  41f966:	pop    ebp
  41f967:	out    0xb3,al
  41f969:	sbb    BYTE PTR [esi+0x2b6ca6c3],bl
  41f96f:	imul   esi,DWORD PTR [ebx+ecx*4],0x76
  41f973:	mov    ebx,0x703a03a6
  41f978:	mov    ch,0x4f
  41f97a:	lock scas eax,DWORD PTR es:[edi]
  41f97c:	push   esp
  41f97d:	xor    eax,0x31622461
  41f982:	mov    cl,0xb6
  41f984:	xor    al,0x47
  41f986:	inc    ebx
  41f987:	or     bl,ah
  41f989:	cmp    eax,0x13c5c37f
  41f98e:	popf   
  41f98f:	sub    dl,BYTE PTR [ebx-0x19b261ea]
  41f995:	scas   eax,DWORD PTR es:[edi]
  41f996:	jp     0x41fa01
  41f998:	add    dl,BYTE PTR [edi]
  41f99a:	cmp    DWORD PTR [edi],0x6d
  41f99d:	push   es
  41f99e:	inc    esi
  41f99f:	adc    al,0x75
  41f9a1:	adc    bh,cl
  41f9a3:	ins    BYTE PTR es:[edi],dx
  41f9a4:	lea    ecx,[edi+0x25af0f16]
  41f9aa:	xor    esp,DWORD PTR [ebx]
  41f9ac:	mov    esi,0x26cbcbf4
  41f9b1:	(bad)  [edi+esi*2-0x5ad5d0f5]
  41f9b8:	xchg   edi,eax
  41f9b9:	mov    ch,0x1
  41f9bb:	(bad)  
  41f9bc:	jmp    FWORD PTR [esi+0x74]
  41f9bf:	cmp    dh,BYTE PTR ds:0xe8643e62
  41f9c5:	dec    ebx
  41f9c6:	add    DWORD PTR fs:[esi-0x6f0d212f],eax
  41f9cd:	xor    eax,0x7a2a9906
  41f9d2:	adc    eax,0x6e770d9
  41f9d7:	inc    eax
  41f9d8:	es jmp 0xfd1a:0xfc4147aa
  41f9e0:	pop    esp
  41f9e1:	ret    0x3de
  41f9e4:	js     0x41fa2a
  41f9e6:	adc    al,0x23
  41f9e8:	xor    eax,DWORD PTR [eax]
  41f9ea:	mov    ah,0x4e
  41f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ed:	int    0xd8
  41f9ef:	scas   al,BYTE PTR es:[edi]
  41f9f0:	mov    dh,0x9c
  41f9f2:	push   esi
  41f9f3:	pop    edi
  41f9f4:	xor    BYTE PTR [edx+edi*1],al
  41f9f7:	inc    esi
  41f9f8:	cmp    BYTE PTR [edi-0x1db7dcc9],bh
  41f9fe:	xlat   BYTE PTR ds:[ebx]
  41f9ff:	mov    cl,0x26
  41fa01:	out    dx,al
  41fa02:	out    dx,al
  41fa03:	or     BYTE PTR [ebx-0x38fcd364],0x31
  41fa0a:	cs jl  0x41f9a6
  41fa0d:	stos   DWORD PTR es:[edi],eax
  41fa0e:	mov    eax,ds:0x690536d0
  41fa13:	xchg   DWORD PTR ds:0x4afac602,ebp
  41fa19:	adc    ch,BYTE PTR [eax+0x150c7b1c]
  41fa1f:	push   ss
  41fa20:	pop    esp
  41fa21:	push   ebp
  41fa22:	xchg   ebx,eax
  41fa23:	and    DWORD PTR [edi+0x30],edx
  41fa26:	jb     0x41fa26
  41fa28:	and    eax,0x67530dca
  41fa2d:	push   cs
  41fa2e:	(bad)  
  41fa2f:	push   edx
  41fa30:	retf   0x91ca
  41fa33:	inc    eax
  41fa34:	sub    al,0x42
  41fa36:	hlt    
  41fa37:	repz pop esi
  41fa39:	mov    esp,0x36d4ea92
  41fa3e:	inc    ebx
  41fa3f:	mov    ds:0x1694c4cf,eax
  41fa44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa45:	push   edx
  41fa46:	mov    edx,DWORD PTR [eax-0x39]
  41fa49:	jo     0x41fa53
  41fa4b:	retf   
  41fa4c:	cmp    eax,0xa55d1317
  41fa51:	imul   ebx,edx,0xfffffff4
  41fa54:	xchg   ecx,eax
  41fa55:	or     dl,BYTE PTR [ecx-0x2]
  41fa58:	xchg   ecx,eax
  41fa59:	xchg   ecx,eax
  41fa5a:	sub    ebx,DWORD PTR ss:[edx+0xe]
  41fa5e:	xchg   BYTE PTR [esi],ah
  41fa60:	sbb    al,0x90
  41fa62:	(bad)  
  41fa63:	mov    esi,0xb83a784c
  41fa68:	int3   
  41fa69:	sar    DWORD PTR [esi-0x5f],1
  41fa6c:	stos   DWORD PTR es:[edi],eax
  41fa6d:	sbb    ecx,DWORD PTR [edx-0x25]
  41fa70:	stos   BYTE PTR es:[edi],al
  41fa71:	add    al,0xc6
  41fa73:	push   esp
  41fa74:	ss push ebp
  41fa76:	out    dx,al
  41fa77:	cmc    
  41fa78:	popa   
  41fa79:	std    
  41fa7a:	retf   
  41fa7b:	mov    dh,0x9a
  41fa7d:	dec    esp
  41fa7e:	cli    
  41fa7f:	and    ch,BYTE PTR [eax-0xa]
  41fa82:	cmp    BYTE PTR [ebx+0x1e],0xf5
  41fa86:	lods   al,BYTE PTR ds:[esi]
  41fa87:	jmp    DWORD PTR [ebp+edx*4-0x1c]
  41fa8b:	mov    eax,0x677b3e64
  41fa90:	pop    edi
  41fa91:	jecxz  0x41fa81
  41fa93:	mov    ds:0xa73d9b1b,al
  41fa98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa9a:	imul   ebp,DWORD PTR [edx+eiz*2+0x6],0x96dcbe09
  41faa2:	jle    0x41fa4b
  41faa4:	dec    cx
  41faa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faa7:	sub    BYTE PTR ds:[ebp+0x56a6aceb],ah
  41faae:	jmp    0x137085f3
  41fab3:	push   esi
  41fab4:	dec    eax
  41fab5:	scas   al,BYTE PTR es:[edi]
  41fab6:	adc    al,0x6f
  41fab8:	cmp    edi,esp
  41faba:	xchg   ebp,eax
  41fabb:	(bad)  
  41fabc:	or     BYTE PTR [ebx+0xea6875a],bl
  41fac2:	and    BYTE PTR [esi+0x30],ch
  41fac5:	add    DWORD PTR [edx-0x144a5a17],0xf7f9b841
  41facf:	mov    ah,0x98
  41fad1:	mov    ebx,0xcb5d2415
  41fad6:	ficom  DWORD PTR [edi-0x4cc5cb79]
  41fadc:	add    al,0x18
  41fade:	mov    dl,0x0
  41fae0:	jne    0x41fad4
  41fae2:	clc    
  41fae3:	or     BYTE PTR ds:0x49ad461f,al
  41fae9:	cs iret 
  41faeb:	ret    
  41faec:	push   edx
  41faed:	test   eax,0x426b3b83
  41faf2:	add    DWORD PTR [ebx-0x65e2e61b],esp
  41faf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf9:	stos   BYTE PTR es:[edi],al
  41fafa:	gs push eax
  41fafc:	in     al,0xa4
  41fafe:	ds js  0x41fa9e
  41fb01:	xor    eax,0x83b8cfef
  41fb06:	and    eax,0x8b855a37
  41fb0b:	dec    ebp
  41fb0c:	mov    ds:0x2b02276e,al
  41fb11:	sbb    edx,esi
  41fb13:	js     0x41fb11
  41fb15:	push   es
  41fb16:	and    esi,DWORD PTR [edx+edi*8-0x2f]
  41fb1a:	es and esi,eax
  41fb1d:	mov    ah,0x3b
  41fb1f:	mov    al,0xa6
  41fb21:	imul   edi,DWORD PTR [edx-0x49dd11bb],0xebb5385b
  41fb2b:	outs   dx,BYTE PTR ds:[esi]
  41fb2c:	lahf   
  41fb2d:	fcmovbe st,st(0)
  41fb2f:	inc    edx
  41fb30:	xor    eax,0x9b90c08
  41fb35:	and    cl,al
  41fb37:	push   ebp
  41fb38:	adc    ebp,0xffffffe4
  41fb3b:	loop   0x41fb4e
  41fb3d:	aad    0x72
  41fb3f:	retf   0xcff7
  41fb42:	inc    edx
  41fb43:	and    eax,DWORD PTR [edi+0x6a39788b]
  41fb49:	mov    ebp,0xfce12860
  41fb4f:	cmp    al,0x58
  41fb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb52:	mov    cl,0x6f
  41fb54:	jbe    0x41fba3
  41fb56:	mov    ds,WORD PTR [ebx+0x4994e436]
  41fb5c:	dec    ebx
  41fb5d:	mov    edx,0x5255d5c5
  41fb62:	xchg   ebp,eax
  41fb63:	stos   BYTE PTR es:[edi],al
  41fb64:	mov    esp,0x33d0f6fe
  41fb69:	dec    ecx
  41fb6a:	push   ebp
  41fb6b:	and    esi,DWORD PTR [esi-0x1c]
  41fb6e:	les    esi,FWORD PTR [ebx+0x26]
  41fb71:	sub    BYTE PTR [ebx],al
  41fb73:	lahf   
  41fb74:	mov    WORD PTR [eax],?
  41fb76:	jg     0x41fb73
  41fb78:	cmp    esi,DWORD PTR [ebp+0x1932d19d]
  41fb7e:	mov    edi,0x460b00e6
  41fb83:	push   ss
  41fb84:	pop    esi
  41fb85:	das    
  41fb86:	test   BYTE PTR [esi+ebx*1+0x7a],ah
  41fb8a:	inc    eax
  41fb8b:	jno    0x41fbd3
  41fb8d:	adc    eax,0xb59b1f62
  41fb92:	xor    eax,0xd38530a5
  41fb97:	push   esi
  41fb98:	dec    ebp
  41fb99:	repz inc ebp
  41fb9b:	mov    eax,DWORD PTR [ecx+0x6bb4206e]
  41fba1:	xchg   edx,eax
  41fba2:	outs   dx,DWORD PTR ds:[esi]
  41fba3:	dec    esi
  41fba4:	mov    bl,0xe6
  41fba6:	xor    ah,BYTE PTR [ebx-0x1f2ee3bb]
  41fbac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbad:	les    edx,FWORD PTR [esi]
  41fbaf:	bound  ecx,QWORD PTR ds:0xcce55391
  41fbb5:	mov    al,0x1a
  41fbb7:	sbb    eax,0x58805ad1
  41fbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbd:	aaa    
  41fbbe:	dec    edi
  41fbbf:	in     eax,0x92
  41fbc1:	dec    ebx
  41fbc2:	sbb    eax,0x4620afd1
  41fbc7:	push   esp
  41fbc8:	pop    eax
  41fbc9:	(bad)  
  41fbca:	outs   dx,DWORD PTR ds:[esi]
  41fbcb:	cmc    
  41fbcc:	cmp    al,0x20
  41fbce:	jb     0x41fc4e
  41fbd0:	add    eax,DWORD PTR [ebp-0x27]
  41fbd3:	fwait
  41fbd4:	and    eax,0x492f0d8c
  41fbd9:	fiadd  WORD PTR [ebp-0x5e]
  41fbdc:	jmp    0xa35c5445
  41fbe1:	cmc    
  41fbe2:	or     dh,dh
  41fbe4:	fwait
  41fbe5:	mov    DWORD PTR [edx],0x327c44a3
  41fbeb:	inc    eax
  41fbec:	sbb    BYTE PTR [edx-0x54],bh
  41fbef:	xchg   edx,eax
  41fbf0:	rcl    WORD PTR [eax+0x277b0c6b],0x82
  41fbf8:	and    eax,0xb69bee74
  41fbfd:	mov    WORD PTR [esi+eax*4+0x49],?
  41fc01:	pop    es
  41fc02:	inc    esi
  41fc03:	cwde   
  41fc04:	mov    al,ds:0x32ec66ff
  41fc09:	ins    DWORD PTR es:[edi],dx
  41fc0a:	dec    edx
  41fc0b:	mov    ebx,0x2fe7b588
  41fc10:	in     al,0xf
  41fc12:	xchg   ebp,eax
  41fc13:	cmp    ebx,DWORD PTR [edi-0x30d4568b]
  41fc19:	fnsave [edx-0x1c]
  41fc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc1d:	mov    ch,0x14
  41fc1f:	sub    BYTE PTR [ecx-0x70ebd1b1],bh
  41fc25:	js     0x41fbe2
  41fc27:	xchg   esi,eax
  41fc28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc29:	sub    eax,0xc2a7308d
  41fc2e:	mov    ebx,0xd8b53ddd
  41fc33:	dec    bx
  41fc35:	mov    dl,0x16
  41fc37:	xchg   esi,eax
  41fc38:	and    dh,dl
  41fc3a:	jmp    0x9d8b216e
  41fc3f:	sub    esp,ebp
  41fc41:	jle    0x41fc53
  41fc43:	rsm    
  41fc45:	jns    0x41fc0b
  41fc47:	lock cmp al,0xba
  41fc4a:	sub    edi,ebx
  41fc4c:	jmp    0x572d4582
  41fc51:	mov    ds:0xc39ba64,eax
  41fc56:	pop    ds
  41fc57:	arpl   WORD PTR [edi],dx
  41fc59:	sub    dl,BYTE PTR [ecx-0x55]
  41fc5c:	fbld   TBYTE PTR [esi+esi*4]
  41fc5f:	ds daa 
  41fc61:	sub    ah,BYTE PTR [ecx-0x7773e95e]
  41fc67:	inc    edx
  41fc68:	sub    BYTE PTR [ebp+0x3e],ch
  41fc6b:	sti    
  41fc6c:	jmp    0xece52259
  41fc71:	int3   
  41fc72:	jge    0x41fc2f
  41fc74:	pop    ds
  41fc75:	push   ecx
  41fc76:	pop    es
  41fc77:	(bad)  
  41fc78:	(bad)  
  41fc7a:	sbb    al,bh
  41fc7c:	xor    edi,DWORD PTR ds:0x3598901b
  41fc82:	sub    eax,0x4bf8f286
  41fc87:	sbb    bh,BYTE PTR [edx-0x31]
  41fc8a:	lds    esi,FWORD PTR [ebx]
  41fc8c:	loope  0x41fc6b
  41fc8e:	ins    BYTE PTR es:[edi],dx
  41fc8f:	out    dx,al
  41fc90:	mov    WORD PTR cs:[eax+eiz*8-0x41],?
  41fc95:	xor    edx,DWORD PTR [eax]
  41fc97:	mov    ds:0xcf62c027,eax
  41fc9c:	es fxam 
  41fc9f:	sbb    DWORD PTR ss:[ecx+0x25a8755b],0x8db40a96
  41fcaa:	push   ss
  41fcab:	lock mov ch,0xe2
  41fcae:	scas   al,BYTE PTR es:[edi]
  41fcaf:	jmp    0xcb25:0x573b459b
  41fcb6:	into   
  41fcb7:	add    BYTE PTR [ecx-0xd],0x8f
  41fcbb:	mov    bl,0xa7
  41fcbd:	cmp    BYTE PTR [ebx],ch
  41fcbf:	mov    bl,0x4f
  41fcc1:	mov    ch,0x44
  41fcc3:	(bad)  
  41fcc4:	das    
  41fcc5:	call   0x127de35b
  41fcca:	(bad)  
  41fccb:	mov    edx,edi
  41fccd:	pop    ecx
  41fcce:	hlt    
  41fccf:	ror    eax,0x38
  41fcd2:	jmp    0x41fd1c
  41fcd4:	js     0x41fd3d
  41fcd6:	adc    DWORD PTR [ebx-0x25bd40af],esp
  41fcdc:	sub    eax,DWORD PTR es:[eax-0x33a70d78]
  41fce3:	inc    ebp
  41fce4:	retf   
  41fce5:	jp     0x41fd61
  41fce7:	int    0x92
  41fce9:	xor    eax,0x92d2e7ff
  41fcee:	jmp    0xa482:0x8ba41bad
  41fcf5:	adc    DWORD PTR [ecx+0x7e],esi
  41fcf8:	sbb    ebp,esi
  41fcfa:	gs adc al,0xcb
  41fcfd:	int    0x67
  41fcff:	xchg   BYTE PTR [edx-0x28],al
  41fd02:	add    BYTE PTR [ebx],ah
  41fd04:	push   0x26
  41fd06:	jle    0x41fcaa
  41fd08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd09:	pop    ecx
  41fd0a:	std    
  41fd0b:	cmp    al,0x90
  41fd0d:	sbb    al,0x70
  41fd0f:	clc    
  41fd10:	xchg   esi,eax
  41fd11:	xor    eax,0x6c8483be
  41fd16:	jmp    0x1c2f:0x561b7928
  41fd1d:	mov    ds:0x5aa5fc69,eax
  41fd22:	add    BYTE PTR [esi],0x75
  41fd25:	int    0xd1
  41fd27:	add    DWORD PTR [eax+0x59],ebp
  41fd2a:	pop    ecx
  41fd2b:	adc    BYTE PTR [ebp-0x4f5cff1c],dl
  41fd31:	call   0xd9e85508
  41fd36:	jns    0x7e367dfe
  41fd3c:	mov    ds:0x2ce784be,eax
  41fd41:	mov    esi,0xe01b2301
  41fd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd47:	xchg   edx,eax
  41fd48:	and    al,0x37
  41fd4a:	adc    al,0x59
  41fd4c:	pop    ecx
  41fd4d:	fadd   DWORD PTR [ebp-0x47f94656]
  41fd53:	adc    BYTE PTR [eax+0x3f],ch
  41fd56:	in     al,dx
  41fd57:	and    ch,BYTE PTR [ebx]
  41fd59:	mov    al,ds:0xb226709e
  41fd5e:	pop    DWORD PTR [edi-0x37]
  41fd61:	mov    ecx,DWORD PTR [ebp-0x9]
  41fd64:	daa    
  41fd65:	aas    
  41fd66:	push   es
  41fd67:	mov    edi,0xa318d0dd
  41fd6c:	dec    eax
  41fd6d:	into   
  41fd6e:	push   esp
  41fd6f:	shl    BYTE PTR [esi],0xee
  41fd72:	push   ss
  41fd73:	xchg   edi,eax
  41fd74:	mov    eax,ds:0x2f2f9d8d
  41fd79:	scas   al,BYTE PTR es:[edi]
  41fd7a:	fidiv  DWORD PTR [eax]
  41fd7c:	arpl   WORD PTR ds:0xb7e9de46,ax
  41fd82:	cmp    esp,DWORD PTR es:[esi+0x548e451d]
  41fd89:	push   edi
  41fd8a:	push   0xffffff92
  41fd8c:	xlat   BYTE PTR ds:[ebx]
  41fd8d:	imul   BYTE PTR [eax+0x13354e44]
  41fd93:	scas   eax,DWORD PTR es:[edi]
  41fd94:	and    bl,BYTE PTR [bx+0xf84]
  41fd99:	sbb    eax,0x36e38bc6
  41fd9e:	cld    
  41fd9f:	sbb    cl,dh
  41fda1:	fistp  DWORD PTR [ecx+0x7b1e945]
  41fda7:	xor    edx,ecx
  41fda9:	dec    ebx
  41fdaa:	sbb    al,0x1c
  41fdac:	(bad)  
  41fdad:	mov    ds:0x288ac2de,al
  41fdb2:	(bad)  
  41fdb3:	push   esi
  41fdb4:	and    BYTE PTR [esi],ah
  41fdb6:	lock mov ds:0xaa2651b,al
  41fdbc:	inc    eax
  41fdbe:	or     esp,DWORD PTR [ebx]
  41fdc0:	(bad)  
  41fdc1:	cmp    eax,0xd0aa61ba
  41fdc6:	lds    ebx,FWORD PTR [edx-0x14ec809f]
  41fdcc:	lock je 0x41fe32
  41fdcf:	mov    dh,0xc3
  41fdd1:	pop    ebx
  41fdd2:	add    al,0xa3
  41fdd4:	jge    0x41fd66
  41fdd6:	stc    
  41fdd7:	shl    BYTE PTR [edx],cl
  41fdd9:	in     eax,0x37
  41fddb:	adc    bh,dl
  41fddd:	xor    eax,0x5876bb8a
  41fde2:	pop    es
  41fde3:	jbe    0x41fdad
  41fde5:	lods   eax,DWORD PTR ds:[esi]
  41fde6:	bnd jnp 0x41fe37
  41fde9:	repnz test DWORD PTR [edi],ecx
  41fdec:	loopne 0x41fdf8
  41fdee:	jbe    0x41fdb5
  41fdf0:	lahf   
  41fdf1:	add    DWORD PTR [ebx],ebp
  41fdf3:	xchg   ecx,eax
  41fdf4:	jge    0x41fe54
  41fdf6:	fistp  WORD PTR [edi+eax*2]
  41fdf9:	lock gs dec edi
  41fdfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfd:	popf   
  41fdfe:	mov    ds:0x3bdc9936,al
  41fe03:	and    esi,DWORD PTR [edx-0x27]
  41fe06:	loopne 0x41fe36
  41fe08:	outs   dx,BYTE PTR ds:[esi]
  41fe09:	test   al,0x3e
  41fe0b:	ins    BYTE PTR es:[edi],dx
  41fe0c:	mov    dh,BYTE PTR [ebx-0x15e42fe8]
  41fe12:	add    DWORD PTR [ebx-0x68],edx
  41fe15:	xor    eax,0x3a3a6ae4
  41fe1a:	(bad)  
  41fe1b:	call   0x6f877511
  41fe20:	mov    WORD PTR [edi-0xee7393d],ds
  41fe26:	pop    ebx
  41fe27:	in     eax,dx
  41fe28:	aaa    
  41fe29:	mov    ch,0xea
  41fe2b:	leave  
  41fe2c:	frstor [ebp+0x1b814979]
  41fe32:	inc    eax
  41fe33:	dec    esp
  41fe34:	shr    BYTE PTR [eax+0x356d6e2a],1
  41fe3a:	cmp    eax,0xff6c344a
  41fe3f:	pop    edi
  41fe40:	leave  
  41fe41:	int3   
  41fe42:	inc    ebp
  41fe43:	sahf   
  41fe44:	mov    esp,0xff7a1e5f
  41fe49:	push   0x9752e94d
  41fe4e:	mul    DWORD PTR [edx-0x5855775e]
  41fe54:	xchg   edi,eax
  41fe55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe56:	jp     0x41feb8
  41fe58:	inc    esi
  41fe59:	jno    0x41fec1
  41fe5b:	mov    ds:0xbc3a2bea,al
  41fe60:	adc    eax,0x461c2ce7
  41fe65:	and    eax,DWORD PTR [ebx+0x64]
  41fe68:	cmp    BYTE PTR [edi],bl
  41fe6a:	(bad)  
  41fe6b:	dec    ebx
  41fe6c:	jp     0x41fdfa
  41fe6e:	mov    bh,0x66
  41fe70:	ins    BYTE PTR es:[edi],dx
  41fe71:	mov    eax,ds:0xc9715401
  41fe76:	pop    ds
  41fe77:	mov    ds:0x7fc2fa09,eax
  41fe7c:	sub    dh,bl
  41fe7e:	fisub  WORD PTR [ebx-0x18]
  41fe81:	mov    ds:0x555d9fef,eax
  41fe86:	mov    dh,0x1f
  41fe88:	xor    BYTE PTR ds:0x482aef4d,0x33
  41fe8f:	xor    ecx,DWORD PTR [ebp-0x56d83a33]
  41fe95:	fwait
  41fe96:	stos   BYTE PTR es:[edi],al
  41fe97:	out    dx,al
  41fe98:	retf   
  41fe99:	push   edx
  41fe9a:	pop    edx
  41fe9b:	outs   dx,DWORD PTR ds:[esi]
  41fe9c:	and    eax,0xfb22dd72
  41fea1:	outs   dx,BYTE PTR ds:[esi]
  41fea2:	aad    0x51
  41fea4:	mov    ds:0xd490af5f,eax
  41fea9:	and    al,0x1f
  41feab:	outs   dx,DWORD PTR ds:[esi]
  41feac:	push   ds
  41fead:	or     al,0x19
  41feaf:	and    ebp,esi
  41feb1:	retf   0xe8e3
  41feb4:	and    eax,0x7d27c0bc
  41feb9:	sub    BYTE PTR [edx],dh
  41febb:	pop    eax
  41febc:	sub    eax,0x94191b35
  41fec1:	dec    esp
  41fec2:	imul   esp,DWORD PTR [ebx+0x6cc29a1d],0x3fcbc229
  41fecc:	or     eax,0xeef4d539
  41fed1:	xor    al,0x62
  41fed3:	(bad)  
  41fed4:	hlt    
  41fed5:	or     DWORD PTR [ecx-0x7960495e],0x40
  41fedc:	ffreep st(6)
  41fede:	inc    ebp
  41fedf:	daa    
  41fee0:	jne    0x41ff08
  41fee2:	loopne 0x41fe6e
  41fee4:	pop    ecx
  41fee5:	sbb    DWORD PTR [eax-0x66caadf9],edi
  41feeb:	jmp    0xbf8b:0x25d42b22
  41fef2:	inc    ebp
  41fef3:	xchg   edi,eax
  41fef4:	gs (bad) 
  41fef7:	push   esi
  41fef8:	(bad)  
  41fef9:	cmp    DWORD PTR [ebx-0x7],edx
  41fefc:	ins    DWORD PTR es:[edi],dx
  41fefd:	xchg   esp,eax
  41fefe:	test   al,0xa2
  41ff00:	pusha  
  41ff01:	out    dx,al
  41ff02:	add    ebp,eax
  41ff04:	mov    ecx,0x1727aba8
  41ff09:	fiadd  DWORD PTR [edx-0xfbc3a52]
  41ff0f:	das    
  41ff10:	xchg   edi,eax
  41ff11:	and    edx,DWORD PTR [eax-0x4d]
  41ff14:	jne    0x41ff21
  41ff16:	mul    BYTE PTR [edx]
  41ff18:	inc    esi
  41ff19:	fwait
  41ff1a:	mov    al,0xea
  41ff1c:	and    eax,0x1c32a097
  41ff21:	xor    BYTE PTR [ebp-0x5],0xf4
  41ff25:	mov    bl,0x73
  41ff27:	inc    edx
  41ff28:	add    al,0xab
  41ff2a:	cmp    BYTE PTR [eax],0x4a
  41ff2d:	sahf   
  41ff2e:	and    edi,DWORD PTR [ebp-0x5a]
  41ff31:	les    eax,FWORD PTR [edi]
  41ff33:	pushf  
  41ff34:	inc    edx
  41ff35:	and    ebp,DWORD PTR [eax-0x3]
  41ff38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff39:	xor    eax,0xd8459456
  41ff3e:	pop    ecx
  41ff3f:	int3   
  41ff40:	cmp    esi,DWORD PTR [eax-0x2f]
  41ff43:	pop    eax
  41ff44:	icebp  
  41ff45:	in     eax,dx
  41ff46:	inc    ebp
  41ff47:	lods   eax,DWORD PTR ds:[esi]
  41ff48:	mov    al,0x4a
  41ff4a:	test   al,0x2b
  41ff4c:	mov    WORD PTR [ecx+esi*4],bx
  41ff50:	push   cs
  41ff51:	pop    ebp
  41ff52:	jns    0x41ff73
  41ff54:	push   0xffffffd5
  41ff56:	fimul  DWORD PTR [eax+esi*1]
  41ff5a:	inc    esi
  41ff5b:	push   edx
  41ff5c:	test   al,0xf8
  41ff5e:	inc    eax
  41ff5f:	xchg   ebp,eax
  41ff60:	ins    DWORD PTR es:[edi],dx
  41ff61:	leave  
  41ff62:	call   0x8f337ead
  41ff67:	mov    ds:0x6ed1f52f,al
  41ff6c:	sbb    eax,0x58b1461f
  41ff71:	push   edx
  41ff72:	and    ebp,DWORD PTR [ebx+0x3e00fa3d]
  41ff78:	adc    eax,0xf5a316b3
  41ff7d:	fwait
  41ff7e:	mov    ebp,0xd6d6adf
  41ff83:	stc    
  41ff84:	pop    edx
  41ff85:	xchg   ebp,eax
  41ff86:	and    bh,dl
  41ff88:	push   0x51dc77b0
  41ff8d:	sbb    BYTE PTR [ebx+0x43],dl
  41ff90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff91:	(bad)  
  41ff92:	mov    ebp,0xcdd7b5a0
  41ff97:	popa   
  41ff98:	sbb    BYTE PTR [ebx],dh
  41ff9a:	inc    esi
  41ff9b:	(bad)  
  41ff9c:	sbb    eax,0x37dc2efe
  41ffa1:	adc    BYTE PTR [ebp+0x76d58ccf],ch
  41ffa7:	lahf   
  41ffa8:	cmp    ebp,0xa5a9f556
  41ffae:	inc    ebp
  41ffaf:	push   esi
  41ffb0:	sub    BYTE PTR es:[ecx+0x61c5a4ac],ch
  41ffb7:	adc    eax,0x24fcb53b
  41ffbc:	shl    BYTE PTR [ecx],cl
  41ffbe:	mov    ds:0x36fdce77,al
  41ffc3:	cld    
  41ffc4:	or     eax,DWORD PTR es:[esi]
  41ffc7:	mov    eax,0x42e47df
  41ffcc:	push   cs
  41ffcd:	xor    ebp,esp
  41ffcf:	popa   
  41ffd0:	arpl   WORD PTR [ecx-0x3f],cx
  41ffd3:	jns    0x41ffbb
  41ffd5:	inc    edx
  41ffd6:	inc    edi
  41ffd7:	pop    edi
  41ffd8:	into   
  41ffd9:	std    
  41ffda:	daa    
  41ffdb:	push   esi
  41ffdc:	and    DWORD PTR [edx+0x61e6f945],edi
  41ffe2:	js     0x41ff8c
  41ffe4:	jg     0x41ff83
  41ffe6:	mov    bh,0x98
  41ffe8:	jae    0x41ff6e
  41ffea:	mov    ah,0x1f
  41ffec:	es jne 0x420058
  41ffef:	(bad)  
  41fff0:	and    BYTE PTR [esi],ch
  41fff2:	scas   eax,DWORD PTR es:[edi]
  41fff3:	adc    eax,0x27badce4
  41fff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fff9:	or     esp,DWORD PTR [ecx-0x7d]
  41fffc:	jmp    0xdbe062f0
  420001:	mov    bl,dl
  420003:	adc    edx,ebx
  420005:	push   ss
  420006:	mov    esp,0x4ed675ff
  42000b:	xchg   ebx,eax
  42000c:	mov    fs,WORD PTR [esi+eax*4]
  42000f:	mov    esp,0xa4e5b563
  420014:	add    edx,DWORD PTR [ecx]
  420016:	(bad)  
  420017:	xor    al,0x9c
  420019:	or     BYTE PTR [edx-0x3a],dh
  42001c:	es repz aam 0x51
  420020:	xor    esi,eax
  420022:	in     eax,0x84
  420024:	pop    es
  420025:	pop    es
  420026:	pop    es
  420027:	and    edx,DWORD PTR [ecx+ebp*2]
  42002a:	jnp    0x41ffef
  42002c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42002d:	ja     0x42007c
  42002f:	mov    dh,0x8a
  420031:	leave  
  420032:	and    dl,BYTE PTR [esi+eiz*2+0x5c]
  420036:	ror    BYTE PTR [edx+0x2a],1
  420039:	sub    cl,BYTE PTR [esi+0x37]
  42003c:	in     eax,dx
  42003d:	mov    ebp,0x386c2794
  420042:	mov    edi,0x3e492b13
  420047:	and    edi,DWORD PTR [eax+0x29]
  42004a:	inc    esp
  42004b:	jle    0x42003f
  42004d:	mov    dl,0xd1
  42004f:	sub    ah,BYTE PTR [esi+0x29]
  420052:	sub    al,0x45
  420054:	out    dx,eax
  420055:	mov    dl,0x23
  420057:	les    ebp,FWORD PTR [edx-0x1a4fe5df]
  42005d:	xor    ecx,DWORD PTR [ebx+0x43]
  420060:	and    esi,ebp
  420062:	cmp    DWORD PTR [ecx-0x9ae0c4a],edx
  420068:	cmp    ebx,DWORD PTR [edx+0x58]
  42006b:	mov    ds:0x1054e63b,eax
  420070:	es cld 
  420072:	in     al,0x59
  420074:	(bad)
  420078:	sub    eax,0x55c55835
  42007d:	lea    edi,[ebx]
  42007f:	sbb    al,0x47
  420081:	sub    eax,0x804d3dc6
  420086:	les    ecx,FWORD PTR [edx+0x292f772c]
  42008c:	mov    ch,0x87
  42008e:	push   esi
  42008f:	mov    ds:0xec70ef10,eax
  420094:	es clc 
  420096:	sub    DWORD PTR [ecx-0x34],edi
  420099:	inc    eax
  42009a:	in     al,0xab
  42009c:	lahf   
  42009d:	xor    eax,0x30469318
  4200a2:	loopne 0x420061
  4200a4:	ds jmp 0x9e88:0xafa3cac5
  4200ac:	neg    BYTE PTR [esi+0xb]
  4200af:	jecxz  0x420033
  4200b1:	loope  0x420041
  4200b3:	and    DWORD PTR [edx-0x6],ebp
  4200b6:	jne    0x420123
  4200b8:	int3   
  4200b9:	jmp    0x3954:0x94da6f45
  4200c0:	and    esi,DWORD PTR [edi-0xa47dd42]
  4200c6:	lock and cl,BYTE PTR [ebx]
  4200c9:	sbb    DWORD PTR [edi*2+0x3b1199a6],ecx
  4200d0:	xchg   edx,eax
  4200d1:	fld    TBYTE PTR [edi-0x6]
  4200d4:	push   0xa238d6b5
  4200d9:	and    cl,0x7e
  4200dc:	mov    eax,0x357eb7ec
  4200e1:	adc    al,0xd7
  4200e3:	pop    ds
  4200e4:	ret    0xdc21
  4200e7:	(bad)  
  4200e8:	sbb    eax,0xe166da42
  4200ed:	(bad)  
  4200ee:	mul    DWORD PTR [edx+0x27]
  4200f1:	mov    ch,0x87
  4200f3:	retf   
  4200f4:	sub    ebx,0x2b2f04eb
  4200fa:	jle    0x42015f
  4200fc:	and    eax,0x13315a48
  420101:	pop    ss
  420102:	xchg   edi,eax
  420103:	or     cl,BYTE PTR [ebp+0x2e]
  420106:	imul   eax,DWORD PTR [edx],0xeed6046d
  42010c:	xor    ebp,DWORD PTR [eax-0x1e]
  42010f:	hlt    
  420110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420111:	nop
  420112:	std    
  420113:	dec    ebp
  420114:	int3   
  420115:	push   es
  420116:	sahf   
  420117:	in     al,0x98
  420119:	xor    eax,0xaadb7e74
  42011e:	jns    0x420192
  420120:	jmp    DWORD PTR [ecx+0x45]
  420123:	imul   esi,DWORD PTR [edi-0x1b],0x6a
  420127:	push   eax
  420128:	icebp  
  420129:	adc    eax,esp
  42012b:	mov    edx,DWORD PTR [ebp+0x26]
  42012e:	sub    BYTE PTR [ebp+0x3c],ch
  420131:	push   ebp
  420132:	mov    al,0xac
  420134:	sbb    BYTE PTR ds:0xa798c0d8,al
  42013a:	call   0xe80:0x28ea264f
  420141:	sbb    DWORD PTR [ebx+0x76],edi
  420144:	out    dx,eax
  420145:	retf   
  420146:	push   ecx
  420147:	mov    ds:0xed4dbe94,eax
  42014c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42014d:	test   BYTE PTR [ecx+esi*2],bl
  420150:	shr    BYTE PTR [eax],0x45
  420153:	pop    esp
  420154:	inc    ebp
  420155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420156:	out    dx,eax
  420157:	sbb    BYTE PTR [ecx-0x625180ab],al
  42015d:	out    0x26,eax
  42015f:	lock es cwde 
  420162:	call   0x3cc9:0xbf4b698b
  420169:	mov    ch,0x3b
  42016b:	mov    ah,0x5f
  42016d:	sbb    eax,0x27ef80a6
  420172:	(bad)  
  420173:	xor    esp,esi
  420175:	pop    esi
  420176:	call   0x5db01519
  42017b:	jmp    0xaf4b:0xa2daf3f0
  420182:	jecxz  0x42012e
  420184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420185:	push   ds
  420186:	inc    edi
  420187:	retf   
  420188:	clc    
  420189:	(bad)  
  42018b:	(bad)  
  42018c:	mov    ebx,0x40239a43
  420191:	sub    BYTE PTR [ecx+eiz*4+0x5],0xb
  420196:	add    bh,BYTE PTR [esi+eax*4-0x7dc7ba03]
  42019d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42019e:	jb     0x420148
  4201a0:	shl    DWORD PTR [edx-0x10],0x1a
  4201a4:	int    0x74
  4201a6:	xor    BYTE PTR [edx-0x6b36f90b],bl
  4201ac:	xchg   esp,eax
  4201ad:	xchg   DWORD PTR [ebx-0x1d],ecx
  4201b0:	stc    
  4201b1:	cmp    eax,0xb3add7a6
  4201b6:	(bad)  
  4201b7:	fsubr  st,st(0)
  4201b9:	push   ebp
  4201ba:	fild   DWORD PTR [esi-0x24c56c0b]
  4201c0:	pop    edi
  4201c1:	push   edx
  4201c2:	sbb    BYTE PTR [ebx-0x3a1a1690],ah
  4201c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c9:	push   ds
  4201ca:	sub    ebx,DWORD PTR [esi-0xe]
  4201cd:	push   esp
  4201ce:	loop   0x42022a
  4201d0:	sbb    eax,0x58563235
  4201d5:	jbe    0x4201bb
  4201d7:	push   ecx
  4201d8:	xchg   edx,eax
  4201d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201da:	mov    ch,al
  4201dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201dd:	xchg   DWORD PTR [ebx+0x59b9323c],esi
  4201e3:	jg     0x42024f
  4201e5:	fnsave [ebp+0x2c]
  4201e8:	call   0x8633:0x278745ec
  4201ef:	inc    ebp
  4201f0:	scas   al,BYTE PTR es:[edi]
  4201f1:	jb     0x4201b5
  4201f3:	mov    al,ds:0xafde3050
  4201f8:	push   es
  4201f9:	out    0xe7,eax
  4201fb:	pop    esi
  4201fc:	dec    esi
  4201fd:	mov    ch,0x4f
  4201ff:	sbb    eax,0x4799f746
  420204:	outs   dx,BYTE PTR ds:[esi]
  420205:	and    DWORD PTR [eax-0x59d88306],edi
  42020b:	sbb    BYTE PTR [edi+0x5f],cl
  42020e:	into   
  42020f:	and    BYTE PTR [edi-0x4b],al
  420212:	cmp    al,0xe7
  420214:	pop    ecx
  420215:	inc    ebp
  420216:	jns    0x4201b2
  420218:	(bad)  
  420219:	hlt    
  42021a:	inc    ebp
  42021b:	daa    
  42021c:	(bad)  
  42021d:	out    dx,al
  42021e:	xor    BYTE PTR [edi+0xd6a9483],bl
  420224:	mov    WORD PTR [ecx-0x6c93dd18],ss
  42022a:	jnp    0x42024c
  42022c:	adc    al,BYTE PTR es:[esi-0x35e01eb1]
  420233:	mov    bl,0x58
  420235:	and    ebp,DWORD PTR [ebp-0x7c4a7782]
  42023b:	xchg   ecx,eax
  42023c:	pop    esi
  42023d:	mov    esp,0x4126b0f3
  420242:	rcl    BYTE PTR [ebx-0x3],cl
  420245:	call   0xde18:0x98ea69a
  42024c:	es pop ss
  42024e:	aam    0x43
  420250:	mov    bh,BYTE PTR [ebp+0x72]
  420253:	outs   dx,DWORD PTR ds:[esi]
  420254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420255:	xor    DWORD PTR [edi+0x9a8c324],esi
  42025b:	add    ah,BYTE PTR [esi+0x32a8a131]
  420261:	pop    edi
  420262:	js     0x4201f9
  420264:	cmp    eax,0xa4aae7fe
  420269:	push   esp
  42026a:	push   ebx
  42026b:	cmp    ch,al
  42026d:	jmp    0x4202d4
  42026f:	sti    
  420270:	outs   dx,DWORD PTR ds:[esi]
  420271:	push   ss
  420272:	mov    edi,0x48c836dd
  420277:	xchg   ecx,eax
  420278:	call   0x6a654c27
  42027d:	mov    ebp,0x9c9ae3c5
  420282:	inc    edi
  420283:	(bad)  
  420284:	out    dx,al
  420285:	mov    al,BYTE PTR [eax-0x4]
  420288:	mov    WORD PTR [edi],fs
  42028a:	in     al,dx
  42028b:	push   0x1c1f5564
  420290:	jbe    0x420267
  420292:	shl    dl,cl
  420294:	jns    0xdae42d77
  42029a:	mov    ?,WORD PTR [ebx+0x68258846]
  4202a0:	pusha  
  4202a1:	mov    ch,0x7b
  4202a3:	push   esp
  4202a4:	inc    ebp
  4202a5:	mov    edx,0xa6961f8f
  4202aa:	les    ebx,FWORD PTR [edx-0x46e0c902]
  4202b0:	ror    ch,1
  4202b2:	add    eax,0x230fd53a
  4202b7:	dec    esp
  4202b8:	dec    ecx
  4202b9:	hlt    
  4202ba:	push   ss
  4202bb:	mov    ds:0xf02435ce,eax
  4202c0:	es leave 
  4202c2:	or     ebx,DWORD PTR [edi-0x692e71cb]
  4202c8:	cs mov ch,0x85
  4202cb:	dec    edx
  4202cc:	repz jne 0x42031a
  4202cf:	shr    ebp,0x22
  4202d2:	inc    esi
  4202d3:	inc    ebx
  4202d4:	push   ss
  4202d5:	test   BYTE PTR [edx-0x3ff06bee],al
  4202db:	push   0x72
  4202dd:	mov    ebp,0xc343063e
  4202e2:	xor    eax,0x8c46b272
  4202e7:	cli    
  4202e8:	es xor ecx,esp
  4202eb:	lahf   
  4202ec:	mov    ch,0x2b
  4202ee:	and    eax,0x72354143
  4202f3:	out    0xee,al
  4202f5:	xchg   ebp,eax
  4202f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202f7:	pop    ecx
  4202f8:	mov    DWORD PTR [esi-0x71b3033e],ebx
  4202fe:	push   edx
  4202ff:	lods   eax,DWORD PTR ds:[esi]
  420300:	(bad)  
  420301:	sti    
  420302:	loope  0x420347
  420304:	sahf   
  420305:	mov    ch,0xcd
  420307:	data16 sub dh,BYTE PTR [edi]
  42030a:	popf   
  42030b:	sbb    ah,BYTE PTR [eax+0x5f]
  42030e:	lds    esp,FWORD PTR [edx]
  420310:	push   esi
  420311:	or     al,BYTE PTR [ebx+ecx*4+0x61603e0d]
  420318:	fwait
  420319:	mov    esp,0x320ecb29
  42031e:	push   cs
  42031f:	and    DWORD PTR fs:[edx+eax*1+0x26],ebx
  420324:	lock pop es
  420326:	in     al,dx
  420327:	ficomp DWORD PTR [edi]
  420329:	jg     0x420358
  42032b:	jl     0x420335
  42032d:	bound  ecx,QWORD PTR ds:0x7a8146b6
  420333:	inc    esi
  420334:	addr16 mov ch,0x7
  420337:	jp     0x4203ac
  420339:	leave  
  42033a:	arpl   WORD PTR [ecx],cx
  42033c:	adc    dh,BYTE PTR ds:0x3af0af46
  420342:	inc    ecx
  420343:	call   0xae1f:0x2e6a5180
  42034a:	lods   al,BYTE PTR ds:[esi]
  42034b:	imul   ebx,DWORD PTR [ebp+0x1e],0x819b48b6
  420352:	ss jp  0x42037a
  420355:	ja     0x4203d3
  420357:	mov    ah,0x74
  42035a:	sbb    BYTE PTR [ecx+0x7eb595b0],bh
  420360:	xchg   edx,eax
  420361:	cld    
  420362:	cld    
  420363:	and    al,BYTE PTR [edi-0x41]
  420366:	aaa    
  420367:	mov    ebx,0x7d0dfba6
  42036c:	pop    esi
  42036d:	mov    ebp,0x35417ef0
  420372:	mov    ecx,0x5ee3ea7f
  420377:	clc    
  420378:	dec    ebx
  420379:	add    ebp,0xfffffff2
  42037c:	shr    BYTE PTR [edi],cl
  42037e:	add    eax,DWORD PTR [edi-0x2c1de26e]
  420384:	test   BYTE PTR ds:0x4438b3da,dh
  42038a:	je     0x420345
  42038c:	(bad)  
  42038d:	ins    DWORD PTR es:[edi],dx
  42038e:	inc    edx
  42038f:	add    eax,0xb0a89053
  420394:	out    dx,al
  420395:	inc    ebp
  420396:	pushf  
  420397:	arpl   WORD PTR [eax+0x35],di
  42039a:	jmp    0x4203e7
  42039c:	mov    dl,0xd2
  42039e:	push   esp
  42039f:	jg     0x420322
  4203a1:	xchg   esi,eax
  4203a2:	mov    ebp,gs
  4203a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a5:	ja     0x420418
  4203a7:	popa   
  4203a8:	cmc    
  4203a9:	fwait
  4203aa:	in     eax,dx
  4203ab:	push   ebp
  4203ac:	jl     0x4203e3
  4203ae:	test   eax,0x98d3d7a7
  4203b3:	sub    esi,DWORD PTR [edi+0x1485aebf]
  4203b9:	cdq    
  4203ba:	lds    eax,FWORD PTR [eax+0x25cb7ae2]
  4203c0:	stos   BYTE PTR es:[edi],al
  4203c1:	jne    0x42039c
  4203c3:	inc    edi
  4203c4:	adc    eax,0x761bf62d
  4203c9:	sub    BYTE PTR [eax+0x38700e7b],0x6
  4203d0:	sbb    al,ch
  4203d2:	out    dx,eax
  4203d3:	xor    esi,DWORD PTR [ebx]
  4203d5:	pushf  
  4203d6:	jmp    0x6b4b:0x152da84e
  4203dd:	mov    bh,0xb5
  4203df:	test   BYTE PTR ds:0x97d37fc9,ch
  4203e5:	fs addr16 dec ecx
  4203e8:	(bad)  
  4203e9:	loopne 0x420420
  4203eb:	ja     0x4203b4
  4203ed:	dec    edx
  4203ee:	push   eax
  4203ef:	push   ecx
  4203f0:	or     dh,BYTE PTR [ebp+0x77b8a342]
  4203f6:	push   edi
  4203f7:	das    
  4203f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203f9:	cmp    al,0xe9
  4203fb:	mov    DWORD PTR [ebp-0x33],edx
  4203fe:	cmp    BYTE PTR [ebx+0x41],dh
  420401:	xor    eax,0x4cf96cfa
  420406:	inc    ebx
  420407:	jo     0x4203f5
  420409:	iret   
  42040a:	inc    ebp
  42040b:	push   0x35
  42040d:	pop    ds
  42040e:	int    0xf4
  420410:	sub    al,0xa
  420412:	outs   dx,BYTE PTR ds:[esi]
  420413:	jns    0x420412
  420415:	push   esp
  420416:	ficomp WORD PTR [eax-0x288a28df]
  42041c:	pushw  0xffba
  42041f:	and    BYTE PTR [ecx-0x7916bd6d],0x99
  420426:	lock xchg DWORD PTR [esi-0x4e],ebx
  42042a:	jle    0x4203b3
  42042c:	sbb    DWORD PTR [eax+edx*4],esi
  42042f:	mov    dl,0x98
  420431:	leave  
  420432:	in     al,0xd7
  420434:	loop   0x4203c0
  420436:	out    dx,eax
  420437:	jge    0x42045f
  420439:	ja     0x4203ca
  42043b:	ss jmp 0x6dc6d178
  420441:	xor    eax,0x39086d7e
  420446:	jge    0x42049e
  420448:	loope  0x42042f
  42044a:	dec    edi
  42044b:	adc    al,0xa1
  42044d:	pushf  
  42044e:	popa   
  42044f:	cld    
  420450:	mov    WORD PTR [ebp-0x5408691b],?
  420456:	gs ins DWORD PTR es:[edi],dx
  420458:	add    BYTE PTR [edx],al
  42045a:	mov    ch,0xa2
  42045c:	fs pop eax
  42045e:	ret    
  42045f:	xchg   ebx,eax
  420460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420461:	inc    edi
  420462:	fwait
  420463:	ds es (bad) 
  420466:	xchg   esi,eax
  420467:	imul   edx,DWORD PTR ds:0x52cd2e19,0xeebf36b5
  420471:	stc    
  420472:	jg     0x4204a1
  420474:	cmp    bl,BYTE PTR [ecx-0x3b]
  420477:	fimul  DWORD PTR ss:[edx-0x152090e9]
  42047e:	iret   
  42047f:	popf   
  420480:	sub    DWORD PTR [ebp+0x1b03a779],esi
  420486:	dec    edi
  420487:	cmp    BYTE PTR [eax],bh
  420489:	icebp  
  42048a:	inc    ebp
  42048b:	push   eax
  42048c:	and    al,0xe3
  42048e:	cmp    ecx,DWORD PTR [edx]
  420490:	mov    ch,0xb
  420492:	push   esi
  420493:	push   ecx
  420494:	in     eax,dx
  420495:	nop
  420496:	cmp    ah,BYTE PTR [ebx+0x57c820bf]
  42049c:	or     esi,DWORD PTR es:[esi+0x4c]
  4204a0:	je     0x42045d
  4204a2:	test   al,0xa
  4204a4:	dec    eax
  4204a5:	mov    ch,0xcc
  4204a7:	(bad)  
  4204a8:	aaa    
  4204a9:	aam    0xd4
  4204ab:	push   edx
  4204ac:	fcmovb st,st(5)
  4204ae:	(bad)
  4204b1:	and    al,0x6d
  4204b3:	stos   DWORD PTR es:[edi],eax
  4204b4:	cmp    eax,0x96eaba0a
  4204b9:	xor    eax,0x155728e3
  4204be:	cmc    
  4204bf:	cdq    
  4204c0:	pop    ss
  4204c1:	pextrw eax,(bad),0xc5
  4204c3:	add    ch,dh
  4204c5:	inc    edx
  4204c6:	fwait
  4204c7:	add    eax,0x905b1554
  4204cc:	inc    ecx
  4204cd:	xor    ebp,esp
  4204cf:	call   0x85ec:0xfaee6a72
  4204d6:	inc    ebp
  4204d7:	arpl   WORD PTR [edx],sp
  4204d9:	cmp    cl,BYTE PTR [esi+0x6dfd7b21]
  4204df:	ret    
  4204e0:	pop    esi
  4204e1:	mov    WORD PTR [edi],ds
  4204e3:	sbb    bl,0x25
  4204e6:	dec    edx
  4204e7:	push   es
  4204e8:	add    dh,0x4f
  4204eb:	and    ecx,DWORD PTR [ebx+0x42]
  4204ee:	mov    eax,0x8c92a680
  4204f3:	cwde   
  4204f4:	aaa    
  4204f5:	and    DWORD PTR [ecx+0x826fdb9],eax
  4204fb:	sbb    esi,DWORD PTR [eax]
  4204fd:	inc    esi
  4204fe:	adc    BYTE PTR ds:0x22f5d956,bl
  420504:	outs   dx,BYTE PTR ds:[esi]
  420505:	mov    cl,0xc4
  420507:	jae    0x4204c9
  420509:	adc    al,0xcf
  42050b:	call   0x5c186cef
  420510:	jge    0x4204eb
  420512:	ja     0x4204f1
  420514:	push   ds
  420515:	xor    dl,BYTE PTR [esi-0x55ab2f3d]
  42051b:	sbb    eax,0x1340ce64
  420520:	dec    esi
  420521:	inc    ch
  420523:	pop    edi
  420524:	and    ebx,DWORD PTR [esi-0x73]
  420527:	jmp    0x42057c
  420529:	lods   eax,DWORD PTR ds:[esi]
  42052a:	adc    DWORD PTR [ecx+0x52],eax
  42052d:	push   sp
  42052f:	xchg   edi,eax
  420530:	inc    esp
  420531:	adc    al,0x46
  420533:	mov    eax,0xf922f9be
  420538:	cmp    eax,0x9d58e7e9
  42053d:	xor    eax,0x25872b0c
  420542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420543:	imul   edi,DWORD PTR [esi-0x50],0x44
  420547:	sti    
  420548:	pop    edi
  420549:	jecxz  0x4205a7
  42054b:	sbb    DWORD PTR [esi-0x13],ecx
  42054e:	cli    
  42054f:	aad    0xd2
  420551:	xor    DWORD PTR [edx-0x2627ffe],eax
  420557:	push   es
  420558:	addr16 lahf 
  42055a:	repz mov dl,0x25
  42055d:	add    eax,0x23212c43
  420562:	jne    0x4204ee
  420564:	ja     0x42059b
  420566:	mov    cl,0xc6
  420568:	gs ret 0x8c0b
  42056c:	jnp    0x420546
  42056e:	ret    
  42056f:	push   edx
  420570:	jbe    0x420537
  420572:	outs   dx,BYTE PTR ds:[esi]
  420573:	cli    
  420574:	inc    esi
  420575:	pop    ecx
  420576:	imul   edx,DWORD PTR [ebx+0x38],0xffffffb5
  42057a:	(bad)  
  42057b:	in     eax,dx
  42057c:	dec    ebp
  42057d:	mov    ecx,0x67c2decd
  420582:	inc    esp
  420583:	sahf   
  420584:	aam    0x64
  420586:	or     DWORD PTR [edx],0x66
  420589:	in     eax,0xe5
  42058b:	mov    DWORD PTR [esi-0x4b],ebx
  42058e:	enter  0xcef7,0x95
  420592:	push   cs
  420593:	mov    BYTE PTR [ebx],dh
  420595:	mov    esp,0xe3a68bc6
  42059a:	or     eax,0x295dc64a
  42059f:	into   
  4205a0:	and    dh,BYTE PTR [esp+ebx*8]
  4205a3:	push   esi
  4205a4:	jl     0x4205f8
  4205a6:	sbb    DWORD PTR [esi+eiz*2+0x72],edx
  4205aa:	mov    ch,0x97
  4205ac:	mov    al,ds:0xc902d21e
  4205b1:	repnz inc ecx
  4205b3:	arpl   WORD PTR [esi-0x4d],ax
  4205b6:	push   cs
  4205b7:	xor    ebp,DWORD PTR [ecx-0x4b]
  4205ba:	jg     0x420541
  4205bc:	scas   eax,DWORD PTR es:[edi]
  4205bd:	fdiv   DWORD PTR [edi+0x6c]
  4205c0:	fs sbb al,dh
  4205c3:	out    dx,al
  4205c4:	xchg   ebp,eax
  4205c5:	adc    DWORD PTR ds:0xb1f0bffa,edi
  4205cb:	sbb    ebp,esp
  4205cd:	add    DWORD PTR [eax-0x5d],edx
  4205d0:	jle    0x420634
  4205d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d3:	dec    edi
  4205d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d5:	xchg   ebx,eax
  4205d6:	xor    eax,0x7aba7c88
  4205db:	adc    DWORD PTR [edx-0x6],edx
  4205de:	pop    eax
  4205df:	add    DWORD PTR [si+0x33],eax
  4205e3:	mov    ds:0x8e7b7402,eax
  4205e8:	jmp    0x822c:0x880955eb
  4205ef:	push   0x6
  4205f1:	or     ebx,0xa7cd54a9
  4205f7:	pop    ebx
  4205f8:	xchg   esp,eax
  4205f9:	jge    0x42059e
  4205fb:	and    DWORD PTR [eax+0x45],0xcb3adae7
  420602:	pop    es
  420603:	mov    ds:0xccd46a0e,eax
  420608:	es jns 0x42064a
  42060b:	inc    edi
  42060c:	jne    0x4205bf
  42060e:	stc    
  42060f:	pusha  
  420610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420611:	ja     0x4205fa
  420613:	mov    esp,0xa1acfa15
  420618:	mov    DWORD PTR [esi-0x68a58984],esp
  42061e:	and    eax,0x28382489
  420623:	mov    cs,ebx
  420625:	jne    0x42062c
  420627:	jmp    0x17027c3
  42062c:	sar    BYTE PTR [eax-0x16],1
  42062f:	pop    edi
  420630:	mov    ebp,0x47a1a75d
  420635:	(bad)
  420639:	fxch   st(6)
  42063b:	ins    DWORD PTR es:[edi],dx
  42063c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063d:	shr    ebx,cl
  42063f:	inc    ebp
  420640:	in     eax,dx
  420641:	mov    bh,BYTE PTR [edx-0x37ca936c]
  420647:	lahf   
  420648:	stos   BYTE PTR es:[edi],al
  420649:	(bad)  
  42064a:	mov    dl,0x8a
  42064c:	xchg   ebp,ebp
  42064e:	inc    ebp
  42064f:	add    eax,0xc9d471b2
  420654:	jmp    0xf83b:0x5dc7a861
  42065b:	and    dl,BYTE PTR [edi]
  42065d:	and    eax,0x9a6650e
  420662:	std    
  420663:	xchg   esi,eax
  420664:	inc    edx
  420665:	mov    BYTE PTR [edi+edi*8-0x63],0xb5
  42066a:	or     al,0xde
  42066c:	pusha  
  42066d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42066e:	loope  0x4206b5
  420670:	gs mov esi,0xa0a69e4e
  420676:	rcr    BYTE PTR [ebp+0x7f4a8b3a],cl
  42067c:	jno    0x4206b2
  42067e:	xchg   ebp,eax
  42067f:	mov    DWORD PTR [esi-0x49619073],ebp
  420685:	mov    ebp,0x9e229f2f
  42068a:	or     bh,ch
  42068c:	mov    al,0xb6
  42068e:	jge    0x42064e
  420690:	lock hlt 
  420692:	or     esi,DWORD PTR [eax+0x28]
  420695:	dec    esp
  420696:	rcr    DWORD PTR [edi],cl
  420698:	cld    
  420699:	jb     0x4206e9
  42069b:	int    0xcb
  42069d:	jmp    0x5b76:0xd68f434f
  4206a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a5:	ss push esp
  4206a7:	pop    esp
  4206a8:	sub    bl,BYTE PTR [esi+0xb]
  4206ab:	xchg   esi,eax
  4206ac:	out    0xa4,al
  4206ae:	pop    ds
  4206af:	and    edi,ebx
  4206b1:	mov    dl,0x13
  4206b3:	in     al,dx
  4206b4:	es icebp 
  4206b6:	cmp    ebx,DWORD PTR [ecx-0x25]
  4206b9:	sub    ebx,DWORD PTR [eax-0x3d]
  4206bc:	test   DWORD PTR [ebx+0x1c8eef42],edi
  4206c2:	cmp    BYTE PTR [ecx+0x234c13a0],dl
  4206c8:	ds sbb al,dh
  4206cb:	out    0x19,al
  4206cd:	pop    edi
  4206ce:	mov    bl,0x17
  4206d0:	mov    ah,0xfc
  4206d2:	xchg   ebp,eax
  4206d3:	pop    edi
  4206d4:	and    al,0x45
  4206d6:	or     dl,BYTE PTR [eax+eiz*2-0x605cd896]
  4206dd:	cmc    
  4206de:	(bad)
  4206e1:	and    al,0xfe
  4206e3:	jg     0x4206b7
  4206e5:	pop    esp
  4206e6:	fnstenv [esi-0x68]
  4206e9:	es inc esp
  4206eb:	mov    ds:0xc456c508,eax
  4206f0:	stos   BYTE PTR es:[edi],al
  4206f1:	sbb    eax,DWORD PTR [esi-0x72]
  4206f4:	mov    dh,0x83
  4206f6:	push   ss
  4206f7:	bnd jae 0x420721
  4206fa:	add    bh,dh
  4206fc:	dec    edx
  4206fd:	ret    0xa32b
  420700:	jo     0x420726
  420702:	pop    eax
  420703:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420705:	jmp    0x4206c5
  420707:	sub    BYTE PTR [edx+0x5934283b],ah
  42070d:	mov    ch,0xe
  42070f:	neg    BYTE PTR [edx+0x37]
  420712:	stos   DWORD PTR es:[edi],eax
  420713:	mov    WORD PTR [edi-0x3f4dba14],es
  420719:	fwait
  42071a:	mov    al,0x46
  42071c:	aas    
  42071d:	pop    edx
  42071e:	or     DWORD PTR [esi-0x44],ecx
  420721:	sbb    DWORD PTR [edi+0x14],ecx
  420724:	mov    es,WORD PTR [esi-0x46b35d93]
  42072a:	sti    
  42072b:	and    eax,0xcd57d2a3
  420730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420731:	adc    eax,0x989dbec6
  420736:	mov    eax,ds:0x6e16692b
  42073b:	(bad)  
  42073c:	in     al,0x37
  42073e:	adc    BYTE PTR [esp+edi*1],al
  420741:	stos   BYTE PTR es:[edi],al
  420742:	leave  
  420743:	ret    
  420744:	outs   dx,BYTE PTR ds:[esi]
  420745:	cmp    DWORD PTR [ebx+0x5f15a51f],esp
  42074b:	retf   
  42074c:	scas   al,BYTE PTR es:[edi]
  42074d:	into   
  42074e:	jmp    0xf70975b9
  420753:	ss std 
  420755:	lea    edx,[ebx]
  420757:	call   0xb951:0x9f61007d
  42075e:	or     al,0xdb
  420760:	es and ebx,esp
  420763:	mov    WORD PTR [esi+0x62],ss
  420766:	pop    eax
  420767:	xor    BYTE PTR [ebp-0x46ade3d2],cl
  42076d:	mov    es,WORD PTR [esi]
  42076f:	pusha  
  420770:	jo     0x42070c
  420772:	jmp    0x420776
  420774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420775:	add    al,0xc6
  420777:	inc    ebx
  420778:	jns    0x420797
  42077a:	(bad)  
  42077c:	cmp    DWORD PTR [edi-0x51d209c1],0xe20e2a4f
  420786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420787:	fldenv [edi]
  420789:	in     eax,dx
  42078a:	or     edx,0xffffffa6
  42078d:	(bad)  
  42078e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42078f:	ins    DWORD PTR es:[edi],dx
  420790:	or     dl,BYTE PTR [edx]
  420792:	outs   dx,BYTE PTR gs:[esi]
  420794:	push   ebx
  420795:	mov    ch,0x42
  420797:	xchg   esp,eax
  420798:	nop
  420799:	ret    0x56d0
  42079c:	shl    BYTE PTR [eax],1
  42079e:	aas    
  42079f:	mov    dl,0x9d
  4207a1:	clc    
  4207a2:	adc    dl,BYTE PTR [ecx-0x5a]
  4207a5:	xor    ebx,DWORD PTR [ecx]
  4207a7:	cmp    bh,BYTE PTR [ebp+0x5b]
  4207aa:	push   edx
  4207ab:	inc    edi
  4207ac:	sar    BYTE PTR [ecx-0x30b85e7e],1
  4207b2:	dec    ebp
  4207b3:	loop   0x420745
  4207b5:	mov    bh,0xc5
  4207b7:	and    ah,dl
  4207b9:	jle    0x4207d1
  4207bb:	dec    eax
  4207bc:	and    al,0xc6
  4207be:	ret    
  4207bf:	fisubr DWORD PTR [esi]
  4207c1:	sbb    ah,BYTE PTR ds:0x5d77bba3
  4207c7:	push   eax
  4207c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c9:	imul   BYTE PTR [ebx+0x4a229340]
  4207cf:	mov    esp,0xa937ba5d
  4207d4:	scas   al,BYTE PTR es:[edi]
  4207d5:	call   0xdfe72674
  4207da:	into   
  4207db:	xchg   edi,eax
  4207dc:	xchg   BYTE PTR [ebp+0xc],dl
  4207df:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4207e1:	jns    0x42080e
  4207e3:	push   0xffffffb4
  4207e5:	mov    ebp,0x34eed885
  4207ea:	mov    ebx,0x1bdfd682
  4207ef:	fsub   st,st(4)
  4207f1:	sbb    al,0x37
  4207f3:	sub    ah,dh
  4207f5:	jo     0x420838
  4207f7:	das    
  4207f8:	jmp    DWORD PTR [esi+eiz*4]
  4207fb:	sbb    al,0xe1
  4207fd:	pop    ebx
  4207fe:	pop    edi
  4207ff:	popa   
  420800:	in     eax,dx
  420801:	lods   al,BYTE PTR ds:[esi]
  420802:	vmptrld QWORD PTR [ecx+ebp*8-0x60e05d07]
  42080a:	xchg   ecx,eax
  42080b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42080d:	pushf  
  42080e:	out    dx,eax
  42080f:	outs   dx,DWORD PTR ds:[esi]
  420810:	or     eax,0x30e51c90
  420815:	daa    
  420816:	mov    eax,ds:0x5335959e
  42081b:	mov    eax,ds:0x764070f4
  420820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420821:	push   eax
  420822:	test   al,0x45
  420824:	bound  edx,QWORD PTR ss:[ecx+0x13357f13]
  42082b:	or     esp,DWORD PTR [edx]
  42082d:	mov    ecx,0xc9702943
  420832:	inc    ebp
  420833:	mov    ch,0xc3
  420835:	xor    dh,BYTE PTR [eax+0x26f8cbf5]
  42083b:	out    0x6c,al
  42083d:	in     al,0x39
  42083f:	and    ebx,DWORD PTR [esi+0x1652fceb]
  420845:	dec    ecx
  420846:	ds std 
  420848:	in     eax,0x98
  42084a:	test   ax,0x88c
  42084e:	enter  0x6804,0x35
  420852:	mov    cl,0x1d
  420854:	repz inc esp
  420856:	sbb    ebp,edx
  420858:	sub    cl,BYTE PTR [edi-0x40aa0d3b]
  42085e:	sbb    al,0x59
  420860:	sbb    al,0x6b
  420862:	dec    ebp
  420863:	inc    esi
  420864:	mov    al,0xe3
  420866:	enter  0xe079,0x8a
  42086a:	and    eax,0x98f788a3
  42086f:	mov    ds:0x4cf8c826,al
  420874:	fcmovne st,st(2)
  420876:	and    dl,ah
  420878:	into   
  420879:	xor    al,0xe4
  42087b:	jns    0x4208c1
  42087d:	jo     0x4208b4
  42087f:	xor    DWORD PTR ds:0x99158aa5,esp
  420885:	mov    ch,0x21
  420887:	out    dx,eax
  420888:	nop
  420889:	stos   BYTE PTR es:[edi],al
  42088a:	std    
  42088b:	sub    eax,0xe85a31ae
  420890:	push   ebp
  420891:	ins    BYTE PTR es:[edi],dx
  420892:	mov    edx,0x2b7b4834
  420897:	xor    esp,DWORD PTR [edx+0xeaca294]
  42089d:	cmp    ecx,DWORD PTR [ebx]
  42089f:	lea    esp,[esi-0x75b83a8c]
  4208a5:	xchg   edx,eax
  4208a6:	aas    
  4208a7:	mov    edx,0xe4343a8d
  4208ac:	pop    edi
  4208ad:	dec    eax
  4208ae:	pop    edi
  4208af:	fwait
  4208b0:	(bad)  
  4208b1:	pcmpgtw mm5,QWORD PTR [edx+0x41]
  4208b5:	sub    al,dh
  4208b7:	outs   dx,DWORD PTR ds:[esi]
  4208b8:	add    BYTE PTR [ebx],bh
  4208ba:	imul   ebp,DWORD PTR ds:0x36cf4138,0x86c62499
  4208c4:	outs   dx,BYTE PTR ds:[esi]
  4208c5:	in     al,dx
  4208c6:	enter  0xaa7f,0x2e
  4208ca:	mov    ebp,0xb7bfe8ea
  4208cf:	(bad)  [esi-0x7a]
  4208d2:	xchg   ebp,eax
  4208d3:	cmp    DWORD PTR ds:[esi+eiz*4],esi
  4208d7:	popa   
  4208d8:	add    esp,DWORD PTR [esi]
  4208da:	push   cs
  4208db:	and    edx,DWORD PTR [edx+ebx*4-0x49591aaf]
  4208e2:	push   ebp
  4208e3:	cmp    al,BYTE PTR [edi]
  4208e5:	push   0x3f
  4208e7:	(bad)  
  4208e8:	out    dx,al
  4208e9:	jp     0x4208e3
  4208eb:	sbb    eax,0xa344fd93
  4208f0:	and    bl,ah
  4208f2:	mov    eax,0x44e3b612
  4208f7:	cmp    DWORD PTR [edi],edx
  4208f9:	stos   BYTE PTR es:[edi],al
  4208fa:	adc    DWORD PTR [esi+0x52bd052a],ebp
  420900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420901:	xor    eax,0xb7d2c8a2
  420906:	jns    0x4208c2
  420908:	xchg   dh,dl
  42090a:	inc    ebp
  42090b:	push   ss
  42090c:	jbe    0x42092b
  42090e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42090f:	pop    ecx
  420910:	jge    0x420907
  420912:	pop    eax
  420913:	push   ebx
  420914:	out    dx,eax
  420915:	test   eax,0xd2f493d4
  42091a:	adc    al,0xa3
  42091c:	retf   
  42091d:	mov    esi,0x893cf045
  420922:	adc    BYTE PTR [edx-0x45100088],cl
  420928:	ss sub ch,ah
  42092b:	and    bl,BYTE PTR [ecx]
  42092d:	stos   DWORD PTR es:[edi],eax
  42092e:	mov    eax,ds:0x125d25ad
  420933:	xor    bh,BYTE PTR [ebx-0x604bf9a0]
  420939:	mov    ch,0xfa
  42093b:	lahf   
  42093c:	sub    dl,ah
  42093e:	das    
  42093f:	mov    ebx,0x545f562
  420944:	mov    BYTE PTR [ebx-0x486559ea],ch
  42094a:	push   ss
  42094b:	inc    edx
  42094c:	xchg   edi,eax
  42094d:	std    
  42094e:	repz and cl,BYTE PTR [ebp+0x31]
  420952:	scas   eax,DWORD PTR es:[edi]
  420953:	push   0x34c6242e
  420958:	or     al,0x46
  42095a:	add    al,0x11
  42095c:	ret    0x392d
  42095f:	jecxz  0x4209d8
  420961:	sub    al,0xf2
  420963:	mov    ds:0x28e0b2bf,al
  420968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420969:	xchg   edi,eax
  42096a:	jp     0x42091d
  42096c:	out    0x79,eax
  42096e:	adc    esp,edx
  420970:	push   esp
  420971:	fstp   TBYTE PTR [esi]
  420973:	mov    ebx,0x14dd9862
  420978:	xchg   esp,eax
  420979:	ss pop ss
  42097b:	jecxz  0x4209c2
  42097d:	fnstcw WORD PTR [esi]
  42097f:	in     al,0xa9
  420981:	test   DWORD PTR [ebp+eiz*4-0x641f0a64],0x9bcf1aa0
  42098c:	and    eax,0x8f074619
  420991:	and    ecx,DWORD PTR [ebx-0x39d0ec60]
  420997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420998:	je     0x42098b
  42099a:	retf   0x660f
  42099d:	das    
  42099e:	cld    
  42099f:	jo     0x420938
  4209a1:	hlt    
  4209a2:	push   eax
  4209a3:	mov    ds:0xc3e4cfee,eax
  4209a8:	pop    ds
  4209a9:	pop    ds
  4209aa:	jmp    0x4209f8
  4209ac:	(bad)  
  4209ad:	mul    BYTE PTR ds:0xb894ae6f
  4209b3:	dec    esi
  4209b4:	mov    ch,0xb2
  4209b6:	sbb    DWORD PTR [esi+0x1a8ef1c3],eax
  4209bc:	pop    esi
  4209bd:	cmp    DWORD PTR [ecx+0x63],eax
  4209c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c1:	cmp    al,0x80
  4209c3:	sbb    ch,dl
  4209c5:	ds inc ebx
  4209c7:	pusha  
  4209c8:	sub    al,bl
  4209ca:	(bad)  
  4209cb:	addr16 addr16 mul BYTE PTR [bp+si]
  4209d0:	and    eax,DWORD PTR [ebx-0x75d9d696]
  4209d6:	jno    0x420a37
  4209d8:	xor    eax,edx
  4209da:	xchg   edx,eax
  4209db:	mov    ebx,0x3a6c33a7
  4209e0:	(bad)  
  4209e1:	(bad)  
  4209e2:	lock push ebp
  4209e4:	ds mov ecx,gs
  4209e7:	cld    
  4209e8:	push   es
  4209e9:	mov    ebx,0x9687188
  4209ee:	(bad)  
  4209ef:	call   0x93653479
  4209f4:	fldcw  WORD PTR [esi]
  4209f6:	je     0x420a4f
  4209f8:	jne    0x4209af
  4209fa:	push   ebx
  4209fb:	fistp  DWORD PTR [edi+0x26298bf3]
  420a01:	sub    DWORD PTR [edi-0x46],ecx
  420a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a05:	test   al,0x21
  420a07:	jg     0x4209d5
  420a09:	mov    ebp,0xb527dc10
  420a0e:	dec    edx
  420a0f:	pop    ebp
  420a10:	jg     0x4209ef
  420a12:	popf   
  420a13:	test   DWORD PTR [esi+edi*4],ebp
  420a16:	mov    eax,ds:0xb2357e1c
  420a1b:	int    0x18
  420a1d:	stc    
  420a1e:	mov    bl,0x2b
  420a20:	pop    ecx
  420a21:	mov    ch,0xe9
  420a23:	cmp    DWORD PTR [edx],0x79ca2176
  420a29:	sbb    eax,0x25269387
  420a2e:	jle    0x420aaf
  420a30:	mov    ds:0x85557133,al
  420a35:	scas   al,BYTE PTR es:[edi]
  420a36:	enter  0x4f85,0xfc
  420a3a:	cmc    
  420a3b:	and    al,0x9
  420a3d:	ja     0x420a8b
  420a3f:	sbb    BYTE PTR [ebx+0x26440d84],0x8a
  420a46:	jne    0x420a8f
  420a48:	adc    cl,dh
  420a4a:	dec    ebp
  420a4b:	aas    
  420a4c:	sbb    ecx,DWORD PTR [ebx+eiz*8+0x22]
  420a50:	out    0x29,al
  420a52:	(bad)  
  420a53:	xor    al,0x24
  420a55:	adc    ecx,0xb
  420a58:	jecxz  0x420a91
  420a5a:	ret    0x226
  420a5d:	loop   0x420aa9
  420a5f:	daa    
  420a60:	shr    BYTE PTR [ebp+0x21],1
  420a63:	mov    ds:0x8812d71e,eax
  420a68:	xor    eax,0x37334478
  420a6d:	aad    0xf6
  420a6f:	xor    eax,0x6a8163f0
  420a74:	test   WORD PTR [esi],si
  420a77:	(bad)  
  420a78:	cmc    
  420a79:	and    eax,0x5530e063
  420a7e:	pushf  
  420a7f:	and    dl,BYTE PTR [ebp+0x26cca720]
  420a85:	jne    0x420a46
  420a87:	cwde   
  420a88:	(bad)  
  420a89:	xor    dl,dh
  420a8b:	lea    eax,[eax+0x2c40235]
  420a91:	(bad)  
  420a92:	mov    dh,0x74
  420a94:	mov    al,0x5
  420a96:	mov    BYTE PTR [ecx-0x42],0x59
  420a9a:	push   ebx
  420a9b:	es ja  0x420aad
  420a9e:	test   al,0x57
  420aa0:	dec    ebx
  420aa1:	sub    cl,al
  420aa3:	and    cl,BYTE PTR [eax+0x42ea4725]
  420aa9:	mov    eax,ds:0xf3693f8a
  420aae:	lds    ebp,FWORD PTR [eax-0x2bac4edd]
  420ab4:	fld    DWORD PTR [esi+ecx*2-0x3c]
  420ab8:	push   esp
  420ab9:	stc    
  420aba:	mov    ch,BYTE PTR [ecx-0x1b]
  420abd:	inc    ebp
  420abe:	jnp    0x420a61
  420ac0:	rcl    BYTE PTR ds:[ecx+0x17],cl
  420ac4:	mov    eax,ds:0x9edf075d
  420ac9:	jnp    0x420b2f
  420acb:	in     al,0x35
  420acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ace:	dec    eax
  420acf:	mov    ebx,0x49e7d015
  420ad4:	loope  0x420a92
  420ad6:	repz mov ds:0xf26549fa,al
  420adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420add:	mov    ?,WORD PTR [edx-0x63]
  420ae0:	popf   
  420ae1:	mov    eax,0x3587f342
  420ae6:	xor    eax,0xd4806802
  420aeb:	nop
  420aec:	mov    WORD PTR [ebx],fs
  420aee:	(bad)  
  420aef:	mov    bh,0xfc
  420af1:	cmp    ch,BYTE PTR [edi]
  420af3:	test   eax,0xe13f8489
  420af8:	ror    DWORD PTR [edx],cl
  420afa:	jmp    DWORD PTR [edx+0x4930a560]
  420b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b01:	jmp    0x420a95
  420b03:	or     esp,DWORD PTR [ebx+0x27d57453]
  420b09:	(bad)  
  420b0a:	aad    0x30
  420b0c:	inc    ecx
  420b0d:	jge    0x420afc
  420b0f:	and    ch,BYTE PTR [edi+edi*4+0x48]
  420b13:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420b15:	and    BYTE PTR [ecx+0x67],ah
  420b18:	mov    al,0xfd
  420b1a:	or     bh,cl
  420b1c:	nop
  420b1d:	sbb    bl,al
  420b1f:	hlt    
  420b20:	out    0x4c,al
  420b22:	inc    edi
  420b23:	js     0x420af9
  420b25:	out    0x49,eax
  420b27:	add    DWORD PTR [esi+0x6e7e8dad],esp
  420b2d:	mov    ds:0xb5432410,eax
  420b32:	push   ds
  420b33:	repz add DWORD PTR [ebx],ebx
  420b36:	push   cs
  420b37:	push   ecx
  420b38:	rcl    DWORD PTR [eax+0x73483c5],cl
  420b3e:	enter  0x8219,0x17
  420b42:	pop    bp
  420b44:	(bad)  [ebx]
  420b46:	cmp    dl,BYTE PTR [ecx+0x28b521d3]
  420b4c:	push   ebp
  420b4d:	das    
  420b4e:	pushw  0x9a26
  420b52:	ret    0x56b8
  420b55:	mov    ah,0xee
  420b57:	mov    bl,0x8c
  420b59:	pop    esp
  420b5a:	lods   eax,DWORD PTR ds:[esi]
  420b5b:	or     al,0x90
  420b5d:	and    DWORD PTR [esi+0x6dafbf26],ebp
  420b63:	gs sbb al,0xcc
  420b66:	test   DWORD PTR [ebx+0x787bfa31],eax
  420b6c:	xchg   DWORD PTR [eax+ebx*4-0x12313c3a],edi
  420b73:	cmp    ah,BYTE PTR [esi]
  420b75:	ins    BYTE PTR es:[edi],dx
  420b76:	adc    BYTE PTR [edi+0x22],0x37
  420b7a:	out    0x13,al
  420b7c:	dec    eax
  420b7d:	mov    ch,0xb5
  420b7f:	std    
  420b80:	jmp    0x420b43
  420b82:	adc    BYTE PTR [ebx+edx*2],bh
  420b85:	fadd   DWORD PTR [ebp+0x5f]
  420b88:	mov    bh,bl
  420b8a:	inc    eax
  420b8b:	ds mov ebx,0x8aac26f6
  420b91:	jmp    0x420b83
  420b93:	and    cl,BYTE PTR [edx-0x75]
  420b96:	xchg   esi,eax
  420b97:	mov    esp,0x6e34c126
  420b9c:	std    
  420b9d:	mov    al,0xee
  420b9f:	icebp  
  420ba0:	pusha  
  420ba1:	xor    eax,0xf28e73e3
  420ba6:	xchg   ebp,eax
  420ba7:	mov    al,0xcb
  420ba9:	add    DWORD PTR [edx-0x44],0x2c319d87
  420bb0:	dec    esi
  420bb1:	hlt    
  420bb2:	push   edx
  420bb3:	inc    ebp
  420bb4:	into   
  420bb5:	xor    BYTE PTR [ebp-0x3edab8b1],ah
  420bbb:	jmp    0x6d4640b6
  420bc0:	fucomp st(7)
  420bc2:	push   ecx
  420bc3:	xor    al,0x35
  420bc5:	xchg   ebp,eax
  420bc6:	pop    ebx
  420bc7:	cmp    dl,BYTE PTR [ebx-0x1d7c3a43]
  420bcd:	dec    edx
  420bce:	bound  ecx,QWORD PTR [eax]
  420bd0:	in     al,dx
  420bd1:	sahf   
  420bd2:	and    dl,BYTE PTR [eax-0x2c]
  420bd5:	jnp    0x420bf4
  420bd7:	xchg   esp,eax
  420bd8:	mov    ch,0x14
  420bda:	(bad)  
  420bdb:	sbb    edi,DWORD PTR [eax]
  420bdd:	and    al,0x5c
  420bdf:	xor    DWORD PTR ds:0x85d25103,esp
  420be5:	xchg   esi,eax
  420be6:	fnstcw WORD PTR [eax+edi*4-0x7]
  420bea:	fstp   QWORD PTR [edi-0x5e]
  420bed:	mov    ebp,0x228e84c5
  420bf2:	scas   al,BYTE PTR es:[edi]
  420bf3:	add    esp,DWORD PTR [edi+0x3]
  420bf6:	(bad)  
  420bf7:	jne    0x420be4
  420bf9:	in     al,dx
  420bfa:	aam    0xe3
  420bfc:	int    0x64
  420bfe:	popa   
  420bff:	dec    eax
  420c00:	xor    bh,ah
  420c02:	bt     DWORD PTR [edi],esi
  420c05:	mov    dh,0x39
  420c07:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c09:	push   eax
  420c0a:	int3   
  420c0b:	mov    ds:0x2f2f57e9,al
  420c10:	dec    esi
  420c11:	scas   al,BYTE PTR es:[edi]
  420c12:	sub    eax,0xb5d3d85a
  420c17:	adc    DWORD PTR [ecx-0x59a4b780],0xfffffff5
  420c1e:	mov    edx,0xf559293e
  420c23:	and    eax,DWORD PTR [ebx-0x73]
  420c26:	xchg   edi,eax
  420c27:	mov    cl,0x50
  420c29:	xor    eax,0x717c2424
  420c2e:	(bad)  
  420c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c30:	shr    BYTE PTR [esi],1
  420c32:	inc    esi
  420c33:	cmc    
  420c34:	and    BYTE PTR [eax+0x845086d],ah
  420c3a:	fldenv [edi]
  420c3c:	daa    
  420c3d:	lods   eax,DWORD PTR ds:[esi]
  420c3e:	or     al,0x23
  420c40:	jae    0x420c46
  420c42:	mov    esp,0x363be995
  420c47:	test   DWORD PTR [ebp-0x5a596d0b],esp
  420c4d:	fimul  DWORD PTR [ebx]
  420c4f:	fist   DWORD PTR [ecx+0x3]
  420c52:	(bad)  
  420c54:	xor    al,0x35
  420c56:	xchg   ecx,eax
  420c57:	add    eax,0xc679ce20
  420c5c:	(bad)  
  420c5e:	inc    ebp
  420c5f:	mov    esi,0x8001b60f
  420c64:	data16 dec BYTE PTR [edx]
  420c67:	jae    0x420c67
  420c69:	pop    ds
  420c6a:	add    DWORD PTR [ebx],esp
  420c6c:	mov    ah,0xb9
  420c6e:	sbb    al,BYTE PTR [esi-0x71d7ed36]
  420c74:	and    esp,esi
  420c76:	retf   0xc5ec
  420c79:	inc    ebx
  420c7a:	pop    ebx
  420c7b:	pop    ecx
  420c7c:	pop    ebp
  420c7d:	iret   
  420c7e:	call   0x40775cdd
  420c83:	call   0x8cf89caa
  420c88:	jl     0x420c73
  420c8a:	add    ecx,DWORD PTR ds:[bx+si-0x2ad8]
  420c90:	mov    esp,0x73b30fd1
  420c95:	mov    ch,0xba
  420c97:	dec    edi
  420c98:	outs   dx,DWORD PTR ds:[esi]
  420c99:	daa    
  420c9a:	add    eax,0x3e8dff71
  420c9f:	or     eax,0xaa8593e0
  420ca4:	add    edi,0x15
  420ca7:	push   ebx
  420ca8:	pop    eax
  420ca9:	sti    
  420caa:	sub    eax,0x1db56b09
  420caf:	sub    al,0x8c
  420cb1:	je     0x420d18
  420cb3:	aam    0x3c
  420cb5:	loop   0x420cbf
  420cb7:	mov    ah,0x6
  420cb9:	mov    DWORD PTR [esi-0x2a],eax
  420cbc:	and    eax,0x36983d0a
  420cc1:	mov    cl,0x25
  420cc3:	xchg   ecx,eax
  420cc4:	stos   DWORD PTR es:[edi],eax
  420cc5:	stc    
  420cc6:	adc    DWORD PTR [ebx+0x4bd75bf9],esp
  420ccc:	mov    BYTE PTR es:[ecx+0x5a],bh
  420cd0:	push   edx
  420cd1:	lock mov esp,0x27b57294
  420cd7:	ret    
  420cd8:	(bad)  [ecx+0x41]
  420cdb:	push   ss
  420cdc:	and    DWORD PTR [esi],edx
  420cde:	call   0x9d7d:0x24352b4c
  420ce5:	je     0x420ca0
  420ce7:	(bad)
  420cea:	cmp    al,0x74
  420cec:	inc    eax
  420ced:	outs   dx,DWORD PTR ds:[esi]
  420cee:	push   esp
  420cef:	and    edx,DWORD PTR [edx]
  420cf1:	pop    esp
  420cf2:	lahf   
  420cf3:	int    0x26
  420cf5:	das    
  420cf6:	stos   DWORD PTR es:[edi],eax
  420cf7:	or     BYTE PTR [ebx+ebx*2+0x7d5e06a7],0x24
  420cff:	jmp    0x1f31:0x231fe4d7
  420d06:	je     0x420d20
  420d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d09:	call   0x8a00:0x1cb07183
  420d10:	(bad)  
  420d12:	mov    eax,0x54b522b2
  420d17:	sbb    bl,BYTE PTR [edi+0x6c75f9e8]
  420d1d:	aad    0x45
  420d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d20:	(bad)  
  420d21:	jns    0x420d6a
  420d23:	lds    esi,FWORD PTR [eax-0xbedbf7e]
  420d29:	add    al,0x42
  420d2b:	and    edx,DWORD PTR [ebx]
  420d2d:	mov    eax,0x91f5fdc
  420d32:	out    0x3f,al
  420d34:	mov    edx,0xfaa7a5f4
  420d39:	inc    esi
  420d3a:	sub    eax,0x6325e848
  420d3f:	or     BYTE PTR [eax+0x52e30536],dh
  420d45:	mov    esi,0x70969345
  420d4a:	dec    esi
  420d4b:	int    0xbf
  420d4d:	repnz gs fwait
  420d50:	xor    eax,0x11a1f2b8
  420d55:	and    DWORD PTR [esi],edx
  420d57:	daa    
  420d58:	clc    
  420d59:	mov    esi,DWORD PTR [edi+0x5eb2aed0]
  420d5f:	sti    
  420d60:	xchg   ebp,eax
  420d61:	aad    0x6c
  420d63:	fst    QWORD PTR [edi+0x4c]
  420d66:	out    dx,al
  420d67:	icebp  
  420d68:	je     0x420d32
  420d6a:	jno    0x420d8d
  420d6c:	dec    ecx
  420d6d:	pop    edi
  420d6e:	cld    
  420d6f:	js     0x420dc3
  420d71:	mov    ch,0x62
  420d73:	sbb    esp,edi
  420d75:	xchg   edx,eax
  420d76:	mov    BYTE PTR [esi-0x5a],ah
  420d79:	pop    ebx
  420d7a:	(bad)  
  420d7b:	fld    DWORD PTR fs:[edi+0x30c6cb41]
  420d82:	js     0x420dac
  420d84:	add    DWORD PTR [edi+edi*2],0x7f8836d5
  420d8b:	xchg   ebx,eax
  420d8c:	mov    edx,0xd94ab7d0
  420d91:	ret    
  420d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d93:	gs push es
  420d95:	xor    BYTE PTR [edi-0x6a],cl
  420d98:	push   esp
  420d99:	cs call 0x762910c9
  420d9f:	mov    bl,0x79
  420da1:	jle    0x420dea
  420da3:	mul    BYTE PTR [esi]
  420da5:	push   0x10
  420da7:	push   0x689f8951
  420dac:	dec    ebp
  420dad:	scas   al,BYTE PTR es:[edi]
  420dae:	mov    al,ds:0xe5fc6c3f
  420db3:	jnp    0x420d37
  420db5:	fidivr DWORD PTR [edi-0x11]
  420db8:	into   
  420db9:	xor    dh,al
  420dbb:	dec    ecx
  420dbc:	or     esi,DWORD PTR [ebx+0x4ca8ae9d]
  420dc2:	mov    esp,0x2660779c
  420dc7:	and    edi,ecx
  420dc9:	enter  0x7207,0x1e
  420dcd:	loop   0x420df9
  420dcf:	fadd   QWORD PTR [esi+0x15]
  420dd2:	sbb    al,0xc0
  420dd4:	leave  
  420dd5:	push   ecx
  420dd6:	outs   dx,BYTE PTR ds:[esi]
  420dd7:	xchg   edx,eax
  420dd8:	(bad)  
  420dda:	aaa    
  420ddb:	sbb    al,0xf6
  420ddd:	pop    ds
  420dde:	mov    ds:0x44dc0a77,eax
  420de3:	aam    0xaf
  420de5:	push   ss
  420de6:	and    DWORD PTR [edx+0x64eec53d],eax
  420dec:	pop    edi
  420ded:	xor    eax,0xffcfff16
  420df2:	sbb    al,0xe0
  420df4:	or     dh,BYTE PTR [ecx]
  420df6:	inc    esi
  420df7:	das    
  420df8:	push   edx
  420df9:	gs data16 je 0x420da8
  420dfd:	es cmp ecx,ebp
  420e00:	fcmovnbe st,st(0)
  420e02:	leave  
  420e03:	adc    al,0xcf
  420e05:	sbb    al,0x96
  420e07:	sbb    edi,DWORD PTR [esi+0x6d]
  420e0a:	fisttp WORD PTR [ebp-0x55]
  420e0d:	jecxz  0x420e54
  420e0f:	cmp    al,BYTE PTR [ebx]
  420e11:	imul   ebp,DWORD PTR [ebp+0x18],0xe
  420e15:	dec    ebx
  420e16:	aad    0x8e
  420e18:	test   BYTE PTR ds:0xc266679b,dh
  420e1e:	mov    ebx,0xc5c48e0a
  420e23:	ret    0x8edd
  420e26:	pop    edi
  420e27:	pop    ecx
  420e28:	arpl   WORD PTR [edi-0x4135972d],ax
  420e2e:	inc    eax
  420e2f:	mov    ds:0x38459cc2,eax
  420e34:	xchg   edi,eax
  420e35:	scas   al,BYTE PTR es:[edi]
  420e36:	sahf   
  420e37:	rol    DWORD PTR [esi],cl
  420e39:	pop    esi
  420e3a:	inc    esi
  420e3b:	dec    edi
  420e3c:	add    eax,DWORD PTR [ebx-0xcef0a4e]
  420e42:	cwde   
  420e43:	and    ah,dh
  420e45:	jno    0x420e01
  420e47:	push   esi
  420e48:	push   edx
  420e49:	retf   
  420e4a:	pop    ss
  420e4b:	lock mov WORD PTR ds:0xf471af60,?
  420e52:	mov    ds:0xc6a27bb5,al
  420e57:	or     BYTE PTR [ecx+0x35],dl
  420e5a:	rcl    ebx,1
  420e5c:	or     al,0xd5
  420e5e:	xor    eax,0x43949f95
  420e63:	jl     0x420ead
  420e65:	add    eax,0x5a1ffb13
  420e6a:	mov    esi,0xeb1790c
  420e6f:	mov    ds:0x758fe183,eax
  420e74:	adc    BYTE PTR es:[esi-0x45ee71b6],cl
  420e7b:	sub    al,0x3e
  420e7d:	xor    eax,0xfaa6906c
  420e82:	and    eax,0xc5f7d9c3
  420e87:	mov    eax,ebx
  420e89:	xchg   ebx,eax
  420e8a:	shr    BYTE PTR [ecx-0x52ebf9ca],1
  420e90:	inc    esp
  420e91:	mov    ecx,0x9f26939e
  420e96:	push   ebx
  420e97:	xchg   ah,ah
  420e99:	sti    
  420e9a:	sub    eax,0xbc902751
  420e9f:	cmp    eax,0xc93e4a9c
  420ea4:	cmp    eax,0x8a327675
  420ea9:	xlat   BYTE PTR ds:[ebx]
  420eaa:	jg     0x420eb1
  420eac:	adc    DWORD PTR [eax+0x5d9f9f5f],ebp
  420eb2:	loope  0x420f0c
  420eb4:	pop    ss
  420eb5:	jmp    0xb69c8cff
  420eba:	xlat   BYTE PTR ds:[ebx]
  420ebb:	push   0xfffffff9
  420ebd:	out    dx,al
  420ebe:	xchg   esi,eax
  420ebf:	test   al,0xe1
  420ec1:	mov    ebx,fs
  420ec3:	mov    ds:0xa930f6fa,al
  420ec8:	and    eax,DWORD PTR [edi+0xeebcd29]
  420ece:	push   es
  420ecf:	sti    
  420ed0:	cld    
  420ed1:	xlat   BYTE PTR ds:[ebx]
  420ed2:	and    BYTE PTR [ecx-0x5d71fc19],bh
  420ed8:	enter  0x5e08,0x82
  420edc:	iret   
  420edd:	fmul   QWORD PTR [edx+0x3b]
  420ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ee1:	cmp    BYTE PTR [ebp+0x4e],0x6a
  420ee5:	inc    ebp
  420ee6:	and    DWORD PTR [ebp-0x5f63ca91],0x3f
  420eed:	dec    ebx
  420eee:	iret   
  420eef:	call   0x6b8451e0
  420ef4:	sub    DWORD PTR [eax+0x5],eax
  420ef7:	out    dx,eax
  420ef8:	je     0x420f22
  420efa:	or     BYTE PTR [edi-0x30e82e83],ch
  420f00:	jnp    0x420e9a
  420f02:	ins    BYTE PTR es:[edi],dx
  420f03:	pop    ds
  420f04:	leave  
  420f05:	and    BYTE PTR [esi+0x26],al
  420f08:	ins    BYTE PTR es:[edi],dx
  420f09:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0b:	sbb    eax,0x3625539a
  420f10:	hlt    
  420f11:	fisub  WORD PTR [ebp+0x54cf813d]
  420f17:	mov    ds:0xdfd66825,eax
  420f1c:	sahf   
  420f1d:	push   ss
  420f1e:	fstp   QWORD PTR [ebx]
  420f20:	ins    DWORD PTR es:[edi],dx
  420f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f22:	xor    al,0xee
  420f24:	test   eax,0x76e97342
  420f29:	mov    ch,0xab
  420f2b:	fs xchg ebp,eax
  420f2d:	mul    BYTE PTR [ecx+0x45e80441]
  420f33:	cmp    al,0x3a
  420f35:	push   edx
  420f36:	sub    al,0xda
  420f38:	aas    
  420f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f3a:	loope  0x420f4a
  420f3c:	fwait
  420f3d:	mov    DWORD PTR [ebx-0x385a62e1],esi
  420f43:	in     al,0xbb
  420f45:	ffree  st(5)
  420f47:	xor    edx,DWORD PTR [esi+0x3a]
  420f4a:	mov    esi,0x806f89ad
  420f4f:	ret    
  420f50:	in     eax,dx
  420f51:	(bad)  
  420f52:	fisub  WORD PTR [edx+0x35eef448]
  420f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f59:	mov    esp,0xba556491
  420f5e:	dec    esi
  420f5f:	stc    
  420f60:	push   edx
  420f61:	mov    ch,0x3
  420f63:	pop    ecx
  420f64:	push   esi
  420f65:	aas    
  420f66:	cdq    
  420f67:	dec    esi
  420f68:	adc    ch,ch
  420f6a:	lds    esp,FWORD PTR ds:0xfea848ef
  420f70:	cli    
  420f71:	ins    DWORD PTR es:[edi],dx
  420f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f73:	std    
  420f74:	rep stos DWORD PTR es:[edi],eax
  420f76:	cmc    
  420f77:	mov    ds:0xc2eb286e,al
  420f7c:	mov    DWORD PTR [edx+ecx*1],esp
  420f7f:	mov    al,0x30
  420f81:	jne    0x420f5c
  420f83:	test   DWORD PTR [eax+0x31fa418f],edx
  420f89:	xor    eax,0xfd43ab16
  420f8e:	cdq    
  420f8f:	jo     0x420f69
  420f91:	sub    eax,0x11a6cfd5
  420f96:	inc    edx
  420f97:	cwde   
  420f98:	xor    bl,cl
  420f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f9b:	push   esp
  420f9c:	mov    ch,0x31
  420f9e:	das    
  420f9f:	test   eax,0x6e8321b7
  420fa4:	int3   
  420fa5:	xor    eax,0x23a572d8
  420faa:	cmp    BYTE PTR [ebx+0xb],al
  420fad:	idiv   dh
  420faf:	adc    esp,esp
  420fb1:	mov    ebp,0x996d8e5b
  420fb6:	fnsave [edx]
  420fb8:	pop    eax
  420fb9:	mov    ch,0x3d
  420fbb:	outs   dx,BYTE PTR ds:[esi]
  420fbc:	or     al,0x77
  420fbe:	daa    
  420fbf:	xor    ah,BYTE PTR [eax]
  420fc1:	int3   
  420fc2:	lds    esp,FWORD PTR [esp+ebp*1]
  420fc5:	das    
  420fc6:	(bad)  
  420fc7:	(bad)  
  420fc9:	div    DWORD PTR [ebp+0x9]
  420fcc:	fxch   st(1)
  420fce:	adc    esp,DWORD PTR [ebx]
  420fd0:	xchg   edx,eax
  420fd1:	inc    edi
  420fd2:	mov    esp,0x45bee9ee
  420fd7:	(bad)  
  420fd8:	dec    ebp
  420fd9:	jmp    0xb4d6:0x7563cd1b
  420fe0:	push   esi
  420fe1:	ficomp WORD PTR [edx+0x1b]
  420fe4:	das    
  420fe5:	das    
  420fe6:	push   ss
  420fe7:	call   0x7ea2:0xb91ffd46
  420fee:	aaa    
  420fef:	ror    edi,1
  420ff1:	add    dl,BYTE PTR [esi-0x5e0338f5]
  420ff7:	fisub  DWORD PTR [ebx]
  420ff9:	pop    es
  420ffa:	adc    ah,BYTE PTR [ebx+0x18dcf306]
  421000:	lahf   
  421001:	test   al,0xb9
  421003:	jns    0x421043
  421005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421006:	retf   0x4c8b
  421009:	cmc    
  42100a:	mov    dl,BYTE PTR fs:[ebx+esi*4+0x2a]
  42100f:	mov    ds:0xd51b18a7,eax
  421014:	neg    BYTE PTR es:[edx-0x64]
  421018:	scas   al,BYTE PTR es:[edi]
  421019:	push   eax
  42101a:	cmp    al,0xc3
  42101c:	sub    eax,0x83bb5db5
  421021:	cmp    DWORD PTR [ebx],eax
  421023:	dec    ebp
  421024:	dec    eax
  421025:	shr    BYTE PTR [ebp+0x4c5e8ff3],cl
  42102b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42102c:	fwait
  42102d:	jbe    0x421055
  42102f:	stos   DWORD PTR es:[edi],eax
  421030:	mov    ds:0x961fa7ab,eax
  421035:	sbb    eax,0xbae20ce1
  42103a:	mov    esp,edi
  42103c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42103d:	adc    BYTE PTR [esi+esi*2],0xbb
  421041:	loope  0x420fda
  421043:	ret    
  421044:	sub    al,0x35
  421046:	inc    ecx
  421047:	mov    ebx,0x3db60cd6
  42104c:	mov    eax,ds:0x92c7462d
  421051:	mov    ah,0xf6
  421053:	sahf   
  421054:	push   0xffffffd7
  421056:	ins    DWORD PTR es:[edi],dx
  421057:	lea    edx,[eax-0x4b]
  42105a:	jmp    0xa31a:0x4df8efa3
  421061:	rol    DWORD PTR [ebp-0x39],0x11
  421065:	(bad)  
  421066:	and    al,0x45
  421069:	xor    ebx,DWORD PTR [ebx+0x64b58172]
  42106f:	push   0x26f9e076
  421074:	mov    esi,0xd16b45eb
  421079:	push   ss
  42107a:	push   edx
  42107b:	ror    BYTE PTR ds:0x2af3c3bc,1
  421081:	or     DWORD PTR [edi],eax
  421083:	and    eax,DWORD PTR [ecx+edx*4]
  421086:	retf   
  421087:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421089:	cmp    esi,DWORD PTR [edx+edi*1+0x66bdf7a0]
  421090:	jl     0x421047
  421092:	mov    al,0x3
  421094:	and    dh,BYTE PTR [ebp+0x4a]
  421097:	mov    ch,0x3d
  421099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42109a:	inc    ebx
  42109b:	dec    ebx
  42109c:	xchg   ecx,eax
  42109d:	mov    cl,0x49
  42109f:	outs   dx,DWORD PTR ds:[esi]
  4210a0:	lahf   
  4210a1:	pop    edx
  4210a2:	push   ecx
  4210a3:	cwde   
  4210a4:	jge    0x4210b1
  4210a6:	push   eax
  4210a7:	ret    
  4210a8:	xor    al,0x35
  4210aa:	outs   dx,BYTE PTR ds:[esi]
  4210ab:	leave  
  4210ac:	pop    ecx
  4210ad:	cmp    ch,BYTE PTR [esi+0x7b]
  4210b0:	jg     0x42103a
  4210b2:	inc    ebp
  4210b3:	sbb    DWORD PTR ds:0x26265de8,ebx
  4210b9:	lock pop edi
  4210bb:	out    0x37,al
  4210bd:	xor    eax,0x65129195
  4210c2:	out    dx,eax
  4210c3:	pop    es
  4210c4:	test   DWORD PTR [edi],ebx
  4210c6:	inc    esi
  4210c7:	not    DWORD PTR [eax-0x53]
  4210ca:	imul   bh
  4210cc:	pop    edi
  4210cd:	and    edi,edx
  4210cf:	cli    
  4210d0:	xlat   BYTE PTR ds:[ebx]
  4210d1:	adc    eax,0xe12021d9
  4210d6:	add    DWORD PTR [eax-0x6b3a0193],eax
  4210dc:	mov    al,0x92
  4210de:	push   ss
  4210df:	jmp    0x42115d
  4210e1:	cmp    ebx,DWORD PTR [edx+eiz*2+0x50]
  4210e5:	push   ds
  4210e6:	stos   BYTE PTR es:[edi],al
  4210e7:	and    bl,BYTE PTR [esi]
  4210e9:	pop    es
  4210ea:	jns    0x421144
  4210ec:	mov    ecx,0x3daf4625
  4210f1:	rcr    ecx,0x27
  4210f4:	sub    al,0xd7
  4210f6:	inc    eax
  4210f7:	push   ss
  4210f8:	fsubr  QWORD PTR [edx+0x68ac233d]
  4210fe:	leave  
  4210ff:	push   0x26
  421101:	push   esp
  421102:	iret   
  421103:	and    DWORD PTR [ecx-0x58e6109e],0x25
  42110a:	or     al,0x3e
  42110c:	pop    edi
  42110d:	adc    eax,0x85579418
  421112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421113:	cdq    
  421114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421115:	fs xchg esp,eax
  421117:	sub    ch,al
  421119:	or     ecx,esi
  42111b:	mov    al,0x21
  42111d:	xor    ch,BYTE PTR [ebp-0x4a701dd4]
  421123:	mov    al,0x59
  421125:	adc    esi,esi
  421127:	jp     0x4210cf
  421129:	ficom  WORD PTR [ecx+0x3d]
  42112c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42112d:	add    edx,ebx
  42112f:	push   edi
  421130:	sbb    ch,BYTE PTR [esi+0x7eba6b8]
  421136:	aaa    
  421137:	cdq    
  421138:	in     eax,0x5a
  42113a:	push   ds
  42113b:	pop    esp
  42113c:	inc    esi
  42113d:	add    dl,al
  42113f:	je     0x4211aa
  421141:	mov    al,ds:0xf5cf8242
  421146:	xchg   esi,eax
  421147:	mov    dl,0xdd
  421149:	fnstsw WORD PTR [esi-0x47]
  42114c:	sub    eax,0x2b97d4f5
  421151:	push   ebp
  421152:	jno    0x421175
  421154:	fiadd  WORD PTR [edi+0x4d]
  421157:	and    esp,DWORD PTR [edx]
  421159:	bound  eax,QWORD PTR [ebx+edi*4+0x4f4937a6]
  421160:	xchg   ecx,eax
  421161:	cli    
  421162:	outs   dx,DWORD PTR ds:[esi]
  421163:	dec    ecx
  421164:	inc    esi
  421165:	xor    eax,0x867eecb2
  42116a:	cmp    eax,0xc5e67535
  42116f:	aas    
  421170:	loope  0x4211ef
  421172:	ins    DWORD PTR es:[edi],dx
  421173:	out    dx,al
  421174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421175:	hlt    
  421176:	jmp    0x9623:0x284e8e9b
  42117d:	shl    DWORD PTR [edi+0x4d252633],0x4a
  421184:	inc    edi
  421185:	je     0x421193
  421187:	ret    0xb53f
  42118a:	sbb    cl,ah
  42118c:	popa   
  42118d:	clc    
  42118e:	fwait
  42118f:	aaa    
  421190:	not    DWORD PTR [ecx+0x7700f03e]
  421196:	cdq    
  421197:	out    dx,al
  421198:	sahf   
  421199:	and    dl,BYTE PTR [ebx+eax*8]
  42119c:	lock xor esp,DWORD PTR [eax]
  42119f:	dec    eax
  4211a0:	add    eax,0xc6bce5f6
  4211a5:	sbb    DWORD PTR [esi+0x68],edx
  4211a8:	in     eax,dx
  4211a9:	inc    DWORD PTR [ebp-0x4]
  4211ac:	mov    ah,0xe5
  4211ae:	idiv   DWORD PTR [edi]
  4211b0:	in     al,0x87
  4211b2:	cmp    eax,0x667d35a5
  4211b7:	jmp    0xa33aca79
  4211bc:	xor    BYTE PTR [ebx-0x19],dl
  4211bf:	lds    esp,FWORD PTR [esi-0x6aa1daa6]
  4211c5:	cmp    DWORD PTR [eax+0x65],0x6c
  4211c9:	xor    eax,0x5c0a4c8f
  4211ce:	gs jle 0x421191
  4211d1:	add    DWORD PTR [edi+0x64d890bc],edi
  4211d7:	add    eax,0xd358d6d9
  4211dc:	pusha  
  4211dd:	xchg   esi,eax
  4211de:	inc    ebp
  4211df:	imul   esp,DWORD PTR [eax+edi*8],0xfffffff9
  4211e3:	cli    
  4211e4:	pop    es
  4211e5:	rep ins DWORD PTR es:[edi],dx
  4211e7:	inc    edx
  4211e8:	sbb    cl,bh
  4211ea:	(bad)
  4211ed:	(bad)  
  4211ee:	mov    dl,0x82
  4211f0:	stos   DWORD PTR es:[edi],eax
  4211f1:	in     eax,0x95
  4211f3:	sub    eax,edi
  4211f5:	pusha  
  4211f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f7:	xchg   esp,eax
  4211f8:	jo     0x4211e8
  4211fa:	xor    esp,DWORD PTR [ebx+0x61c6ee23]
  421200:	and    eax,0x2daa9885
  421205:	push   ss
  421206:	stos   BYTE PTR es:[edi],al
  421207:	js     0x42119f
  421209:	adc    BYTE PTR ds:0x2761554b,dl
  42120f:	adc    al,0xcf
  421211:	nop
  421212:	xor    eax,0xb82f8763
  421217:	daa    
  421218:	xor    ah,al
  42121a:	in     eax,0x10
  42121c:	add    al,BYTE PTR [esi+ecx*2]
  42121f:	ins    BYTE PTR es:[edi],dx
  421220:	outs   dx,BYTE PTR ds:[esi]
  421221:	mov    ch,0x6f
  421223:	pop    ss
  421224:	sbb    edx,DWORD PTR [edx-0x106b3555]
  42122a:	lds    edx,FWORD PTR [edx+edx*2]
  42122d:	es push cs
  42122f:	jmp    0x3eef89c
  421234:	push   eax
  421235:	sub    al,BYTE PTR [esi-0x1ba7c2fd]
  42123b:	mov    edx,DWORD PTR [eax+ebp*2]
  42123e:	ss mov edi,0x5d048a5b
  421244:	xchg   edi,eax
  421245:	jle    0x421295
  421247:	jne    0x421230
  421249:	sbb    BYTE PTR [esi-0x744abf5a],dh
  42124f:	retf   
  421250:	into   
  421251:	mov    ss,WORD PTR [ebp+eax*8-0x4c]
  421255:	in     al,0xc5
  421257:	inc    ebx
  421258:	mov    cl,BYTE PTR [edx-0x7f0bf045]
  42125e:	iret   
  42125f:	mov    bl,0x43
  421261:	pop    ecx
  421262:	shl    BYTE PTR [ebx+0x24],cl
  421265:	mov    al,0xfe
  421267:	and    cl,BYTE PTR [edx]
  421269:	hlt    
  42126a:	loope  0x4212a0
  42126c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42126d:	dec    edi
  42126e:	ds pop esi
  421270:	xor    al,0x55
  421272:	dec    eax
  421273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421274:	push   ss
  421275:	out    0x59,eax
  421277:	push   edi
  421278:	adc    edx,DWORD PTR ds:0x1ba52816
  42127e:	push   0x9d958646
  421283:	mov    edi,0xae83b527
  421288:	repz lds di,DWORD PTR [ebx-0x72]
  42128d:	dec    eax
  42128e:	inc    esp
  42128f:	into   
  421290:	lods   al,BYTE PTR ds:[esi]
  421291:	mov    eax,ds:0xe5ec5cba
  421296:	gs jge 0x4212fb
  421299:	or     BYTE PTR [ebp-0x77ca8133],ch
  42129f:	arpl   WORD PTR [esi+ebp*2+0x3320b309],bx
  4212a6:	inc    esi
  4212a7:	inc    edx
  4212a8:	jmp    0x4212f4
  4212aa:	sbb    eax,esp
  4212ac:	imul   edi,DWORD PTR [ecx+0x76],0x6d
  4212b0:	shl    ebp,1
  4212b2:	inc    ebp
  4212b3:	ja     0x421245
  4212b5:	js     0x4212e5
  4212b7:	mov    dl,0xf0
  4212b9:	add    eax,0xce177ac6
  4212be:	jp     0x42124c
  4212c0:	dec    edx
  4212c1:	mov    cs,WORD PTR [edx+0x45]
  4212c4:	lock inc ebp
  4212c6:	loopne 0x4212ea
  4212c8:	test   BYTE PTR [edi+edi*8],dl
  4212cb:	out    0x1e,al
  4212cd:	lods   al,BYTE PTR ds:[esi]
  4212ce:	or     DWORD PTR [eax],ebp
  4212d0:	pop    esi
  4212d1:	and    eax,0x82ca49a
  4212d6:	cld    
  4212d7:	cmp    DWORD PTR ds:0xc2a2f28d,edx
  4212dd:	in     eax,0x55
  4212df:	pop    edx
  4212e0:	es push 0xffffffe7
  4212e3:	ins    BYTE PTR es:[edi],dx
  4212e4:	sbb    al,0x31
  4212e6:	fs stc 
  4212e8:	loope  0x4212a1
  4212ea:	aad    0x23
  4212ec:	dec    edx
  4212ed:	xor    eax,0x2598fefc
  4212f2:	data16 sbb BYTE PTR [eax-0x24],ah
  4212f6:	inc    ebp
  4212f7:	sub    eax,0xe8ff078e
  4212fc:	sub    DWORD PTR [ecx-0x4ac4b420],edi
  421302:	or     BYTE PTR [edx+0x4730f4d8],dh
  421308:	xlat   BYTE PTR ds:[ebx]
  421309:	mov    eax,0xb55d4f99
  42130e:	inc    esp
  42130f:	jb     0x42138f
  421311:	add    DWORD PTR [ebp+0x5b],esp
  421314:	call   0xd0b5:0xac88b635
  42131b:	leave  
  42131c:	cmp    BYTE PTR [eax-0x4d0b8fbb],bh
  421322:	repz cdq 
  421324:	jp     0x4212bb
  421326:	mov    dl,0x13
  421328:	(bad)  
  421329:	jge    0x4212b4
  42132b:	imul   ebp,DWORD PTR [ecx+0x1a],0xb909a2f4
  421332:	mov    edi,0xdcaea26a
  421337:	fpatan 
  421339:	imul   ebp
  42133b:	daa    
  42133c:	pop    esi
  42133d:	ss std 
  42133f:	clc    
  421340:	sti    
  421341:	les    edx,FWORD PTR [ebp-0x5d]
  421344:	jle    0x421359
  421346:	pop    eax
  421347:	sbb    ah,BYTE PTR ds:0x652f16e9
  42134d:	or     DWORD PTR [edi],ecx
  42134f:	jmp    0x4958c8bf
  421354:	lods   eax,DWORD PTR ds:[esi]
  421355:	dec    eax
  421356:	cwde   
  421357:	loope  0x42131c
  421359:	and    bh,BYTE PTR [eax]
  42135b:	out    dx,eax
  42135c:	popf   
  42135d:	mov    bl,0xc5
  42135f:	mov    ch,0x66
  421361:	xchg   ebp,eax
  421362:	ja     0x42136d
  421364:	cmp    al,0xaa
  421366:	adc    dl,BYTE PTR [edi-0x24]
  421369:	aam    0xf4
  42136b:	mov    ds:0x835715c,al
  421370:	push   0x2365462f
  421375:	lods   eax,DWORD PTR ds:[esi]
  421376:	mov    esi,0x10a42a4
  42137b:	outs   dx,BYTE PTR ds:[esi]
  42137c:	push   0xd
  42137e:	lds    edx,FWORD PTR [esi+eax*8+0x15031080]
  421385:	leave  
  421386:	lds    ecx,FWORD PTR [ecx-0x2b45b3ec]
  42138c:	pop    eax
  42138d:	and    dh,BYTE PTR [edx+edi*2+0x2f]
  421391:	mov    DWORD PTR [eax+0x23],0x51699a2d
  421398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421399:	lods   eax,DWORD PTR ds:[esi]
  42139a:	scas   al,BYTE PTR es:[edi]
  42139b:	jo     0x42137b
  42139d:	cwde   
  42139e:	xchg   ebp,eax
  42139f:	call   0x9be6:0x36e2b529
  4213a6:	pushf  
  4213a7:	hlt    
  4213a8:	push   ss
  4213a9:	mov    ch,0x89
  4213ab:	dec    esi
  4213ac:	xchg   esp,eax
  4213ad:	frstor [eax+0x69]
  4213b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213b1:	pop    edx
  4213b2:	repz stc 
  4213b4:	sub    DWORD PTR [ebp+0x54],esi
  4213b7:	push   edi
  4213b8:	lahf   
  4213b9:	jmp    0x2c45c3e4
  4213be:	fcomp  QWORD PTR [ebx+0x594ecd06]
  4213c4:	fcomp  QWORD PTR [eax]
  4213c6:	cmp    BYTE PTR [edx],cl
  4213c8:	mov    edx,0xc8919731
  4213cd:	icebp  
  4213ce:	arpl   bx,si
  4213d0:	fcmovu st,st(4)
  4213d2:	and    eax,0x4171fb26
  4213d7:	in     eax,0xc4
  4213d9:	adc    eax,0x8ca6e724
  4213de:	int3   
  4213df:	jne    0x42140c
  4213e1:	dec    edx
  4213e2:	push   ds
  4213e3:	add    BYTE PTR [edi-0x5588411a],ah
  4213e9:	push   ebp
  4213ea:	aad    0x1f
  4213ec:	push   esp
  4213ed:	js     0x4213f2
  4213ef:	inc    ebx
  4213f0:	pop    ebp
  4213f1:	sub    al,0xaa
  4213f3:	(bad)  
  4213f4:	retf   
  4213f5:	mov    ah,0x12
  4213f7:	mov    esi,0xa1ac974b
  4213fc:	jmp    0x4213c7
  4213fe:	sub    DWORD PTR [ecx],ebp
  421400:	xchg   BYTE PTR [edx+esi*8+0x7a],dh
  421404:	stos   BYTE PTR es:[edi],al
  421405:	sub    BYTE PTR [edi-0x48],bh
  421408:	sbb    DWORD PTR ds:0x248b3901,esi
  42140e:	push   edi
  42140f:	push   eax
  421410:	lock add eax,0xb022b346
  421416:	loop   0x42140b
  421418:	mov    BYTE PTR [edx+0xb35898],ah
  42141e:	dec    esi
  42141f:	and    DWORD PTR [edi],esi
  421421:	in     eax,dx
  421422:	sbb    al,0x2c
  421424:	push   eax
  421425:	add    dh,al
  421427:	adc    al,0xb0
  421429:	dec    ebx
  42142a:	or     esi,DWORD PTR [esi-0x16ec56c7]
  421430:	inc    ecx
  421431:	in     eax,0x11
  421433:	mov    ds:0x88e6f168,eax
  421438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421439:	and    BYTE PTR [eax],bh
  42143b:	xor    eax,0xeba07f61
  421440:	add    al,0xb4
  421442:	sbb    DWORD PTR [esi-0x41ae7809],esp
  421448:	bound  esi,QWORD PTR [ecx+eax*8+0x3a]
  42144c:	es (bad) 
  42144e:	popf   
  42144f:	xchg   ecx,eax
  421450:	jmp    0x4213fd
  421452:	xchg   esi,eax
  421453:	push   edi
  421454:	mov    DWORD PTR [ecx],edx
  421456:	and    ah,al
  421458:	es cmp esp,eax
  42145b:	jae    0x42148d
  42145d:	mov    ebx,0x7509a98d
  421462:	fdivrp st(3),st
  421464:	xchg   esp,eax
  421465:	mov    edi,DWORD PTR [edi]
  421467:	arpl   WORD PTR [ebp+0x6b],bp
  42146a:	mov    cl,0x1f
  42146c:	aam    0x1c
  42146e:	and    BYTE PTR [ebx],ah
  421470:	icebp  
  421471:	pusha  
  421472:	fwait
  421473:	inc    esi
  421474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421475:	pop    edi
  421476:	pop    ebx
  421477:	xchg   ebx,eax
  421478:	jp     0x42145c
  42147a:	dec    eax
  42147b:	aad    0xc
  42147d:	scas   al,BYTE PTR es:[edi]
  42147e:	or     eax,DWORD PTR [edx+eax*8]
  421481:	clc    
  421482:	push   ebp
  421483:	push   esp
  421484:	ret    
  421485:	cmp    ch,BYTE PTR [edx-0x560cdb38]
  42148b:	loop   0x42142d
  42148d:	jge    0x42148e
  42148f:	push   ebp
  421490:	std    
  421491:	(bad)  
  421492:	stc    
  421493:	mov    ds:0xa4666c0b,al
  421498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421499:	sbb    al,0x31
  42149b:	mov    bh,0x73
  42149d:	xlat   BYTE PTR ds:[ebx]
  42149e:	sar    DWORD PTR [eax],1
  4214a0:	sbb    esp,edx
  4214a2:	adc    al,0xd3
  4214a4:	mov    al,0xd9
  4214a6:	pop    ss
  4214a7:	mov    ds:0x72a23a67,eax
  4214ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ae:	fldenv [ebx+ecx*8]
  4214b1:	into   
  4214b2:	cmp    BYTE PTR es:[esi*1+0x15c06782],0x17
  4214bb:	sub    ah,bl
  4214bd:	push   cs
  4214be:	push   edx
  4214bf:	lds    esp,FWORD PTR [esi-0x7c6faa28]
  4214c5:	pop    ebx
  4214c6:	out    0x15,al
  4214c8:	retf   0x9625
  4214cb:	in     al,dx
  4214cc:	repz mov eax,0x11536548
  4214d2:	inc    ecx
  4214d3:	and    ebp,DWORD PTR [ecx-0x3]
  4214d6:	mov    ecx,0x72a6c82
  4214db:	sub    DWORD PTR [esi],esp
  4214dd:	xor    eax,0x26313d77
  4214e2:	xchg   BYTE PTR [eax],bl
  4214e4:	push   es
  4214e5:	xor    eax,0xd993a9f
  4214ea:	push   0x7d3d9a77
  4214ef:	jmp    0x2bf9:0x54461f31
  4214f6:	jl     0x421567
  4214f8:	mov    dl,0xb5
  4214fa:	cmp    eax,0xb78269e7
  4214ff:	and    bh,bh
  421501:	sbb    DWORD PTR ss:[ecx+0x3b4609ee],ebx
  421508:	mov    ds:0x63cafe21,al
  42150d:	adc    DWORD PTR [ebp-0x72cabe4e],0x8c0dde66
  421517:	add    edi,esi
  421519:	js     0x4214df
  42151b:	sub    ecx,DWORD PTR [ebp+edx*4-0xe63c117]
  421522:	dec    ecx
  421523:	in     eax,0x4d
  421525:	xor    eax,0x76a90a83
  42152a:	pop    ss
  42152b:	fprem1 
  42152d:	adc    al,0x46
  42152f:	aad    0xcf
  421531:	push   esi
  421532:	int3   
  421533:	daa    
  421534:	pop    esp
  421535:	imul   ebp,esp,0xd3fa99f1
  42153b:	fwait
  42153c:	push   esi
  42153d:	mov    esi,0xd3139f34
  421542:	(bad)
  421545:	sbb    eax,0x895d7a87
  42154a:	stc    
  42154b:	pop    ebx
  42154c:	cmp    bh,BYTE PTR [edi]
  42154e:	add    eax,0xf8bf466
  421553:	mov    ds:0xc4060198,eax
  421558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421559:	mov    ebx,0x86b88abd
  42155e:	sbb    eax,0x72b5400b
  421563:	je     0x87a0a8dc
  421569:	pop    ebx
  42156a:	inc    esp
  42156b:	ror    DWORD PTR [edx-0x6fac27d0],cl
  421571:	inc    ecx
  421572:	xchg   esp,eax
  421573:	mov    esp,0x724e1896
  421578:	mov    BYTE PTR [edi],ah
  42157a:	xchg   BYTE PTR [ebx],bh
  42157c:	not    DWORD PTR [ebp-0x39]
  42157f:	push   0x6f9fd20
  421584:	es (bad) 
  421587:	imul   esp,edx,0xffffffc4
  42158a:	(bad)  
  42158b:	out    0x8a,al
  42158d:	rol    DWORD PTR [ecx],0xca
  421590:	rcr    DWORD PTR [eax],0x94
  421593:	mov    ds:0x6eba2bc0,al
  421598:	jg     0x4215db
  42159a:	fsubr  DWORD PTR [edx+0x26]
  42159d:	pop    esi
  42159e:	(bad)  
  42159f:	pushf  
  4215a0:	or     bl,BYTE PTR [edx]
  4215a2:	in     eax,dx
  4215a3:	outs   dx,BYTE PTR ds:[esi]
  4215a4:	cmp    dh,BYTE PTR [ebp+0x40e99a0d]
  4215aa:	cwde   
  4215ab:	popa   
  4215ac:	adc    DWORD PTR [eax],0xffffffc6
  4215af:	fld    TBYTE PTR ds:0xe70c4956
  4215b5:	leave  
  4215b6:	cmp    ecx,DWORD PTR [ecx+0x4e]
  4215b9:	jle    0x4215a4
  4215bb:	mov    ds:0x9f675a3a,al
  4215c0:	es jge 0x421614
  4215c3:	jnp    0x421607
  4215c5:	mov    ah,0x14
  4215c7:	mov    dl,0x39
  4215c9:	xor    eax,0xb71b3d49
  4215ce:	aaa    
  4215cf:	loope  0x4215ab
  4215d1:	loopne 0x421618
  4215d3:	mov    ah,BYTE PTR [eax+eax*2-0x37f6dc0]
  4215da:	xlat   BYTE PTR ds:[ebx]
  4215db:	ins    DWORD PTR es:[edi],dx
  4215dc:	jle    0x42161f
  4215de:	push   ecx
  4215df:	and    edx,DWORD PTR [esi+0x52]
  4215e2:	xchg   BYTE PTR ds:0x38e1e026,dl
  4215e8:	stos   BYTE PTR es:[edi],al
  4215e9:	push   es
  4215ea:	mov    esi,0x1e35313b
  4215ef:	sahf   
  4215f0:	add    ah,BYTE PTR [ecx+0x5f]
  4215f3:	pop    es
  4215f4:	or     esi,DWORD PTR [esi+eax*8]
  4215f7:	and    dl,BYTE PTR [eax+0x6f962323]
  4215fd:	or     al,0x22
  4215ff:	jno    0x42165c
  421601:	gs mov ebx,0xe61b6421
  421607:	fidiv  WORD PTR [esi-0x776cba3d]
  42160d:	or     BYTE PTR [esi],ah
  42160f:	mov    cs,WORD PTR ds:0x5cb705c7
  421615:	aas    
  421616:	inc    esp
  421617:	mov    ds:0x25011893,eax
  42161c:	push   ds
  42161d:	and    eax,0x55a3d1a5
  421622:	or     al,0x56
  421624:	sbb    BYTE PTR [edx-0x789e302c],bh
  42162a:	xchg   esi,eax
  42162b:	pop    ds
  42162c:	xchg   bp,ax
  42162e:	shr    BYTE PTR [eax+edx*8],1
  421631:	xor    al,dh
  421633:	jne    0x4215bb
  421635:	ins    BYTE PTR es:[edi],dx
  421636:	xchg   edx,eax
  421637:	mov    edx,0xe64cb9b8
  42163c:	dec    ecx
  42163d:	xor    eax,0xdc946575
  421642:	xchg   ecx,eax
  421643:	pop    ecx
  421644:	push   ebx
  421645:	cmp    eax,0x45871544
  42164a:	scas   al,BYTE PTR es:[edi]
  42164b:	push   ecx
  42164c:	pop    edx
  42164d:	in     eax,0x67
  42164f:	cdq    
  421650:	outs   dx,DWORD PTR ds:[esi]
  421651:	xor    eax,0x97a88ad8
  421656:	scas   eax,DWORD PTR es:[di]
  421658:	mov    ch,0xfc
  42165a:	lds    esp,FWORD PTR [ecx+0x65]
  42165d:	icebp  
  42165e:	and    DWORD PTR [ecx+0x3d7cd676],ecx
  421664:	push   ebx
  421665:	mov    ecx,0xc12f0705
  42166a:	xor    eax,0x95dd1987
  42166f:	pop    ebp
  421670:	cli    
  421671:	or     al,0xf6
  421673:	xor    BYTE PTR [eax],0xed
  421676:	div    DWORD PTR [eax]
  421678:	cmp    bl,ah
  42167a:	push   cs
  42167b:	and    eax,DWORD PTR [ebx-0x73]
  42167e:	dec    esi
  42167f:	mov    esp,0x8ea8769f
  421684:	jg     0x4216fb
  421686:	pop    esp
  421687:	mov    BYTE PTR [esi+0x49bbc56b],al
  42168d:	popf   
  42168e:	(bad)  
  42168f:	mov    al,ds:0x83ea7591
  421694:	jmp    0x42e5:0x18874624
  42169b:	pushf  
  42169c:	in     eax,dx
  42169d:	cmp    DWORD PTR [ebx+0x64],ecx
  4216a0:	dec    edi
  4216a1:	js     0x42169a
  4216a3:	inc    edx
  4216a4:	mov    esp,0x25444575
  4216a9:	adc    eax,0xf333bb45
  4216ae:	lea    edi,[edi]
  4216b0:	pop    edi
  4216b1:	test   DWORD PTR [ebx],0xeb7c79ad
  4216b7:	mov    ds:0x59489562,al
  4216bc:	es adc cl,ch
  4216bf:	popf   
  4216c0:	jle    0x421648
  4216c2:	mov    ds,ebp
  4216c4:	aas    
  4216c5:	xor    eax,0xd0258028
  4216ca:	pop    es
  4216cb:	jns    0x42170e
  4216cd:	sbb    al,BYTE PTR [esi-0x3]
  4216d0:	out    dx,eax
  4216d1:	dec    eax
  4216d2:	sbb    eax,0xda39a24c
  4216d7:	pop    edx
  4216d8:	adc    esi,DWORD PTR ds:0x82c36594
  4216de:	cwde   
  4216df:	dec    esi
  4216e0:	xchg   ecx,eax
  4216e1:	(bad)  
  4216e2:	int3   
  4216e3:	jns    0x421703
  4216e5:	ret    
  4216e6:	lods   al,BYTE PTR ds:[esi]
  4216e7:	adc    DWORD PTR ds:0x2b62ed45,edi
  4216ed:	push   ecx
  4216ee:	jne    0x421746
  4216f0:	jo     0x42171b
  4216f2:	fisub  DWORD PTR [edx-0x61a92703]
  4216f8:	cs in  eax,dx
  4216fa:	lds    ebx,FWORD PTR [edi+0x39]
  4216fd:	dec    edx
  4216fe:	mov    esp,0x13009d87
  421703:	arpl   WORD PTR [esi+0x11a31d49],bx
  421709:	cmp    DWORD PTR ds:0xad726d4,0xffffff88
  421710:	or     eax,0x41aa42cd
  421715:	mov    ch,0x8f
  421717:	pop    esp
  421718:	and    bh,BYTE PTR ds:0xef5d9622
  42171e:	mov    bh,0x60
  421720:	repz call 0x3357b32b
  421726:	pop    edx
  421727:	lods   al,BYTE PTR ds:[esi]
  421728:	inc    esp
  421729:	mov    ch,0xeb
  42172b:	add    esp,edi
  42172d:	in     al,dx
  42172e:	adc    ecx,esp
  421730:	data16 xchg BYTE PTR [ebx],cl
  421733:	push   ecx
  421734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421735:	mov    eax,ds:0xd64d80b4
  42173a:	cmp    al,0x7e
  42173c:	cmp    BYTE PTR ds:0xbd637da8,dh
  421742:	adc    dl,BYTE PTR [edi+0x65c6334c]
  421748:	jnp    0x421748
  42174a:	pop    edx
  42174b:	push   eax
  42174c:	push   edx
  42174d:	add    al,0xbc
  42174f:	aad    0xb6
  421751:	es dec edi
  421753:	and    edx,DWORD PTR [edx-0x11]
  421756:	inc    ecx
  421757:	inc    edx
  421758:	lahf   
  421759:	int    0xa5
  42175b:	nop
  42175c:	dec    esi
  42175d:	xor    eax,0xbc952fec
  421762:	pushf  
  421763:	repnz sub esp,DWORD PTR [edx+0x1e7da2de]
  42176a:	mov    ds:0xa0492631,eax
  42176f:	pop    esp
  421770:	push   edx
  421771:	aas    
  421772:	bound  edx,QWORD PTR [ecx+ebx*4]
  421775:	xor    eax,0x4ee53e21
  42177a:	mov    eax,0x451e9f93
  42177f:	add    al,0x17
  421781:	add    DWORD PTR [edx],0xffffff9d
  421784:	adc    BYTE PTR [ebp+0x3587d444],0x3d
  42178b:	in     al,dx
  42178c:	mov    edi,0x495d1f94
  421791:	cmp    DWORD PTR [ecx-0x3486d9a9],ecx
  421797:	and    DWORD PTR [ebx-0x7b001792],0x6261cc27
  4217a1:	cmc    
  4217a2:	rcl    ch,cl
  4217a4:	cmc    
  4217a5:	shl    BYTE PTR [ebp+0x3d],1
  4217a8:	es push esp
  4217aa:	pop    ebp
  4217ab:	mov    ss,eax
  4217ad:	loopne 0x42182a
  4217af:	bound  ebx,QWORD PTR [edi-0x4b]
  4217b2:	mov    bh,0x77
  4217b4:	and    ebp,DWORD PTR [ebx+0x52bc96f5]
  4217ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bb:	cmp    DWORD PTR [esi-0x14],ecx
  4217be:	xchg   BYTE PTR ds:0x9bc57426,bl
  4217c4:	ss or  edi,esp
  4217c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217c8:	jecxz  0x4217cf
  4217ca:	push   edi
  4217cb:	mov    ds:0x3cd8619a,eax
  4217d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d1:	lock sbb eax,DWORD PTR [edi-0x62]
  4217d5:	cs test al,0x64
  4217d8:	outs   dx,DWORD PTR ds:[esi]
  4217d9:	xor    eax,0xa5d3a522
  4217de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217df:	dec    ebx
  4217e0:	mov    ebx,0x876f4634
  4217e5:	dec    esi
  4217e6:	inc    eax
  4217e7:	mov    ecx,0x2f958639
  4217ec:	mov    ds:0x33138233,eax
  4217f1:	ret    0x22fa
  4217f4:	fcom   st(3)
  4217f6:	cdq    
  4217f7:	inc    edi
  4217f8:	xor    BYTE PTR [ebp-0x7190195b],0xa9
  4217ff:	adc    al,0x77
  421801:	sbb    DWORD PTR [eax+edi*2+0x1a],ebp
  421805:	ret    
  421806:	addr16 nop
  421808:	test   BYTE PTR [ebp+0x28],ch
  42180b:	sub    eax,0x9e61b1b6
  421810:	addr16 dec edi
  421812:	ins    DWORD PTR es:[edi],dx
  421813:	mov    edi,ebp
  421815:	cs push esi
  421817:	daa    
  421818:	xor    eax,0x49441235
  42181d:	js     0x42182e
  42181f:	enter  0x6223,0xc1
  421823:	call   FWORD PTR [esi]
  421825:	and    DWORD PTR [ecx],ebp
  421827:	popa   
  421828:	les    esi,FWORD PTR [esi-0x69176015]
  42182e:	pop    ebp
  42182f:	and    DWORD PTR [edi+0x4],ecx
  421832:	dec    esi
  421833:	jne    0x421822
  421835:	mov    ecx,0x2ca92e40
  42183a:	fcmovne st,st(1)
  42183c:	and    eax,0xa4287118
  421841:	adc    DWORD PTR [esi],edx
  421843:	xchg   esp,eax
  421844:	repz popf 
  421846:	bound  esp,QWORD PTR [edx+0x802f81c]
  42184c:	imul   eax,edi,0x530f2945
  421852:	jae    0x4217d8
  421854:	pop    ss
  421855:	out    dx,eax
  421856:	push   edx
  421857:	cmovb  ecx,DWORD PTR [ebx+ecx*1]
  42185b:	mov    ds:0xd3e59f7,eax
  421860:	es cmc 
  421862:	cmp    dl,BYTE PTR [edx-0x3]
  421865:	clc    
  421866:	pop    ss
  421867:	stos   DWORD PTR es:[edi],eax
  421868:	dec    esp
  421869:	cwde   
  42186a:	mov    BYTE PTR [esi+eiz*4],dh
  42186d:	dec    ecx
  42186e:	push   ebp
  42186f:	cmp    al,0x73
  421871:	or     DWORD PTR [ebx-0x6e],ecx
  421874:	and    cl,BYTE PTR [esi]
  421876:	es mov bl,0x3c
  421879:	mov    ebp,0x629a57cd
  42187e:	arpl   WORD PTR gs:[ebx],sp
  421881:	icebp  
  421882:	sub    ah,BYTE PTR [ebx]
  421884:	out    dx,eax
  421885:	js     0x4218e4
  421887:	mov    ecx,0x9e33ffa6
  42188c:	cmp    esi,DWORD PTR [eax+edx*8+0x5]
  421890:	push   eax
  421891:	xor    eax,0x85c01623
  421896:	retf   
  421897:	mov    BYTE PTR [ebp-0x4c],dh
  42189a:	mov    dh,0x4c
  42189c:	xchg   esi,eax
  42189d:	lods   al,BYTE PTR ds:[esi]
  42189e:	ret    0xa380
  4218a1:	push   ss
  4218a2:	(bad)  
  4218a3:	and    ebp,ecx
  4218a5:	jne    0x421858
  4218a7:	jnp    0x4218a5
  4218a9:	aam    0x1e
  4218ab:	and    edi,DWORD PTR [ecx]
  4218ad:	sub    BYTE PTR [ecx+0x17be266a],0x81
  4218b4:	mov    esp,0x7f19d0f3
  4218b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ba:	pushf  
  4218bb:	not    BYTE PTR [ebp+edx*2-0x101a2754]
  4218c2:	in     al,0x25
  4218c4:	mov    ds:0x85ad34ff,al
  4218c9:	nop
  4218ca:	nop
  4218cb:	std    
  4218cc:	sub    bl,BYTE PTR [ebx]
  4218ce:	adc    ebx,esp
  4218d0:	les    eax,FWORD PTR [esi+0x49a6b872]
  4218d6:	push   esp
  4218d7:	test   DWORD PTR [edx+0x25d9a2aa],esi
  4218dd:	scas   eax,DWORD PTR es:[edi]
  4218de:	(bad)  
  4218df:	and    al,0xda
  4218e1:	xchg   ebx,eax
  4218e2:	jae    0x4218a0
  4218e4:	and    DWORD PTR [ecx-0x3b999f90],esi
  4218ea:	lds    esp,FWORD PTR [edx]
  4218ec:	mov    edx,0xedafb0e3
  4218f1:	rol    DWORD PTR [ebp+0x5d],cl
  4218f4:	xchg   ebx,eax
  4218f5:	shl    BYTE PTR [edi],cl
  4218f7:	sbb    eax,0x9d620263
  4218fc:	mov    al,BYTE PTR [ebp-0x400eeb48]
  421902:	sub    al,0xa3
  421904:	fcomp  st(6)
  421906:	lds    ecx,FWORD PTR [esi+0x75f4e59b]
  42190c:	jge    0x42193b
  42190e:	repz inc ebx
  421910:	xchg   bh,al
  421912:	std    
  421913:	mov    ds:0x2e004b0d,al
  421918:	pop    es
  421919:	pop    edi
  42191a:	aaa    
  42191b:	dec    ebp
  42191c:	sbb    bh,cl
  42191e:	pop    ss
  42191f:	mov    ds:0x9ee5d1a0,eax
  421924:	sbb    al,BYTE PTR [eax-0x3]
  421927:	mov    ds:0xe82078da,al
  42192c:	pop    ss
  42192d:	aad    0x92
  42192f:	and    dh,al
  421931:	mov    eax,0x6ecb76b4
  421936:	inc    eax
  421937:	push   esp
  421938:	adc    DWORD PTR [esi-0x1329dab1],0x7e86fe3e
  421942:	push   ss
  421943:	and    eax,DWORD PTR [edx+edi*2+0x42]
  421947:	mov    bh,0xa8
  421949:	sub    al,BYTE PTR [edi]
  42194b:	rol    BYTE PTR ds:0x281f35e6,0x5a
  421952:	cmp    BYTE PTR [ebx+esi*4+0x34],bl
  421956:	cs cs xchg esp,eax
  421959:	or     dh,BYTE PTR [eax]
  42195b:	shl    DWORD PTR [ebx],0x39
  42195e:	push   esi
  42195f:	jb     0x421987
  421961:	imul   esi,DWORD PTR [edx+0x6c],0xffffffe0
  421965:	stc    
  421966:	xchg   ebp,eax
  421967:	mov    dh,0x4d
  421969:	cs add al,0x3f
  42196c:	xchg   edi,eax
  42196d:	fadd   DWORD PTR ds:0xd75212fb
  421973:	imul   esp,DWORD PTR [ebp+0x502b7233],0x83f3631a
  42197d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42197e:	jp     0x4219b5
  421980:	ins    BYTE PTR es:[edi],dx
  421981:	xor    eax,0x62363ef8
  421986:	not    eax
  421988:	test   al,0x9d
  42198a:	aaa    
  42198b:	cmp    al,BYTE PTR [ecx+0x16d405d2]
  421991:	enter  0x353a,0x7c
  421995:	mov    ch,0xea
  421997:	es sti 
  421999:	dec    esp
  42199a:	dec    esi
  42199b:	push   di
  42199d:	push   eax
  42199e:	daa    
  42199f:	mov    bl,0x10
  4219a1:	daa    
  4219a2:	lea    edi,[eax+0x26]
  4219a5:	loop   0x421986
  4219a7:	test   BYTE PTR [edx-0x2e700e2a],dh
  4219ad:	xor    DWORD PTR [edi-0x1c],edx
  4219b0:	enter  0x9489,0x0
  4219b4:	mov    eax,ds:0x1e3b211a
  4219b9:	dec    cx
  4219bb:	rcl    ebx,0x71
  4219be:	fsubrp st(4),st
  4219c0:	arpl   WORD PTR ss:[ebp+0x44],dx
  4219c4:	pop    ecx
  4219c5:	mov    ch,0xf7
  4219c7:	xchg   DWORD PTR ds:[esi+0xdcac865],ecx
  4219ce:	inc    esi
  4219cf:	jecxz  0x4219e5
  4219d1:	pusha  
  4219d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219d3:	out    dx,al
  4219d4:	ror    BYTE PTR [ebx+0x45],1
  4219d7:	sub    ebp,DWORD PTR [edi+edi*8+0x2097217e]
  4219de:	fiadd  WORD PTR [edi-0x7ebaf036]
  4219e4:	xchg   ecx,eax
  4219e5:	mov    edx,0xc553d873
  4219ea:	out    dx,al
  4219eb:	sbb    BYTE PTR [esi-0x4b],bh
  4219ee:	add    eax,0xc1ff350
  4219f3:	sar    cl,cl
  4219f5:	add    ch,0xec
  4219f8:	stos   DWORD PTR es:[edi],eax
  4219f9:	ret    0x5dd
  4219fc:	jmp    0x4219c9
  4219fe:	leave  
  4219ff:	adc    eax,0xa42eb53a
  421a04:	stc    
  421a05:	call   0x1b9a4f36
  421a0a:	(bad)  
  421a0b:	mov    ds:0x9119decc,eax
  421a10:	mov    esi,0xf14fe174
  421a15:	lods   eax,DWORD PTR ds:[esi]
  421a16:	push   eax
  421a17:	mov    ds:0xb13b7527,eax
  421a1c:	in     eax,dx
  421a1d:	xor    eax,DWORD PTR [esi-0x67]
  421a20:	aam    0xbb
  421a22:	dec    esi
  421a23:	(bad)  
  421a24:	pop    esi
  421a25:	jl     0x421a57
  421a27:	push   ebx
  421a28:	jl     0x4219eb
  421a2a:	pop    ss
  421a2b:	sbb    ah,bl
  421a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a2e:	cmp    ah,BYTE PTR [ebx]
  421a30:	imul   ebp,esi,0xffffffa9
  421a33:	mov    eax,ds:0x7c882dd1
  421a38:	dec    ebp
  421a39:	jne    0x4219ca
  421a3b:	imul   BYTE PTR [ebp+0xc277f81]
  421a41:	add    al,0x9b
  421a43:	lahf   
  421a44:	lea    eax,ds:0xc2a38e7b
  421a4a:	or     eax,ecx
  421a4c:	sbb    edx,DWORD PTR [edi+0x34467e6d]
  421a52:	xlat   BYTE PTR ds:[ebx]
  421a53:	push   DWORD PTR [edx-0x20]
  421a56:	test   DWORD PTR [ecx-0x4de0a5f4],ebp
  421a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a5d:	cli    
  421a5e:	jge    0x421a84
  421a60:	cld    
  421a61:	cdq    
  421a62:	enter  0xea68,0xb4
  421a66:	mov    ah,0xf7
  421a68:	dec    esp
  421a69:	pop    eax
  421a6a:	sub    BYTE PTR [ecx],cl
  421a6c:	outs   dx,BYTE PTR ds:[esi]
  421a6d:	aaa    
  421a6e:	iret   
  421a6f:	test   al,0xa6
  421a71:	mov    WORD PTR [esi],ds
  421a73:	jl     0x421acc
  421a75:	mov    ecx,0xb5558447
  421a7a:	out    dx,eax
  421a7b:	retf   0x532b
  421a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a7f:	xor    al,0x21
  421a81:	jecxz  0x421a48
  421a83:	ss inc edx
  421a85:	and    dl,BYTE PTR [edi-0x16]
  421a88:	loop   0x421a20
  421a8a:	test   al,0xca
  421a8c:	jbe    0x421aa7
  421a8e:	mov    BYTE PTR [esi],0xf4
  421a91:	jnp    0x421a81
  421a93:	pop    es
  421a94:	pop    esp
  421a95:	and    esi,eax
  421a97:	mov    dl,0x1a
  421a99:	(bad)  [ecx+ebx*2-0x5f]
  421a9d:	fninit 
  421a9f:	bound  edx,QWORD PTR [esi+0x1ea302c6]
  421aa5:	int3   
  421aa6:	clc    
  421aa7:	(bad)  
  421aa8:	mov    WORD PTR es:[eax],fs
  421aab:	mov    bh,BYTE PTR [ebx+0x6f]
  421aae:	jmp    0x421b18
  421ab0:	cmp    al,0x41
  421ab2:	out    0x50,al
  421ab4:	scas   eax,DWORD PTR es:[edi]
  421ab5:	adc    eax,0xf8a6e584
  421aba:	xchg   edx,eax
  421abb:	mov    DWORD PTR [ebp-0x56a6388b],edi
  421ac1:	mov    WORD PTR [esi+0x2257ed5a],?
  421ac7:	mov    bl,0xd2
  421ac9:	int    0xcd
  421acb:	mov    dl,0xe3
  421acd:	jae    0x421ae2
  421acf:	aam    0x9e
  421ad1:	xor    eax,0x9670322b
  421ad6:	ret    
  421ad7:	pop    ebp
  421ad8:	and    al,BYTE PTR [esi+eax*8]
  421adb:	adc    ch,ch
  421add:	mov    ch,BYTE PTR [edi+0x6b]
  421ae0:	push   eax
  421ae1:	fnsave [edx-0x6]
  421ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ae5:	xor    eax,0xe4726580
  421aea:	xlat   BYTE PTR ds:[ebx]
  421aeb:	leave  
  421aec:	inc    edx
  421aed:	and    ebp,eax
  421aef:	pop    esp
  421af0:	sbb    dl,BYTE PTR [edi+0x3e]
  421af3:	sbb    ebx,ecx
  421af5:	add    al,0xc6
  421af7:	fst    DWORD PTR [esi]
  421af9:	out    dx,al
  421afa:	or     BYTE PTR [eax],bh
  421afc:	fldcw  WORD PTR [edx]
  421afe:	sbb    BYTE PTR [ebx+0x65531a7],0x4b
  421b05:	popf   
  421b06:	push   0xd027a622
  421b0b:	add    dh,BYTE PTR ds:0xf56ec62b
  421b11:	(bad)  
  421b12:	mov    ch,0x1e
  421b14:	dec    ebp
  421b15:	popa   
  421b16:	mov    ?,WORD PTR ds:[edx]
  421b19:	outs   dx,DWORD PTR ds:[esi]
  421b1a:	fbld   TBYTE PTR [edx-0x26ac6b64]
  421b20:	fisub  WORD PTR es:[esi-0x14dbe95]
  421b27:	mov    DWORD PTR [esp+esi*1],edi
  421b2a:	adc    esi,edx
  421b2c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  421b2e:	xor    esi,esp
  421b30:	mov    dh,0xc6
  421b32:	xor    BYTE PTR [esi+0x26],0x42
  421b36:	push   es
  421b37:	push   0xd8723944
  421b3c:	daa    
  421b3d:	mov    ch,0x34
  421b3f:	fisttp DWORD PTR [esi+0x7e]
  421b42:	and    ebp,DWORD PTR [esi-0x34]
  421b45:	or     eax,DWORD PTR [esi-0x69]
  421b48:	sbb    cl,ch
  421b4a:	sub    eax,0x55e3b5aa
  421b4f:	push   ss
  421b50:	mov    BYTE PTR ds:0x8f29216b,cl
  421b56:	fcmovbe st,st(4)
  421b58:	xor    DWORD PTR [eax-0x495c7d01],edx
  421b5e:	dec    ebp
  421b5f:	retf   
  421b60:	lahf   
  421b61:	xlat   BYTE PTR ds:[ebx]
  421b62:	test   DWORD PTR [esi+0x2f4200e6],edx
  421b68:	(bad)  
  421b69:	int    0x85
  421b6b:	adc    DWORD PTR [eax],0xffffff98
  421b6e:	js     0x421ba6
  421b70:	jne    0x421b66
  421b72:	lds    edx,FWORD PTR [ecx+0x6e]
  421b75:	(bad)  
  421b76:	js     0x421b3b
  421b78:	cwde   
  421b79:	fst    DWORD PTR [eax]
  421b7b:	dec    ebx
  421b7c:	adc    al,0x7d
  421b7e:	out    dx,al
  421b7f:	mov    ds:0x59b0e0fd,al
  421b84:	fisttp QWORD PTR es:[edi+0x78]
  421b88:	sub    edi,DWORD PTR [ebx+eiz*8+0x47356573]
  421b8f:	data16 aam 0x76
  421b92:	bound  ebx,QWORD PTR [edx+0x733e3712]
  421b98:	ffree  st(5)
  421b9a:	add    ch,dl
  421b9c:	fwait
  421b9d:	aam    0xb0
  421b9f:	and    ch,BYTE PTR [ebx]
  421ba1:	sub    bh,bl
  421ba3:	sub    dl,dh
  421ba5:	push   ds
  421ba6:	call   0x626a504d
  421bab:	xchg   esp,eax
  421bac:	and    eax,0xba2c22ce
  421bb1:	imul   esp,DWORD PTR [eax-0x31ca7e2f],0xffffffcc
  421bb8:	mov    gs:0x20ddff9f,eax
  421bbe:	inc    esi
  421bbf:	cmp    ebx,DWORD PTR [ebp+0x146c1164]
  421bc5:	add    al,0x9
  421bc7:	ret    0x54c1
  421bca:	frstor [edx-0x33bf26c7]
  421bd0:	(bad)
  421bd4:	es ret 
  421bd6:	xchg   ebx,eax
  421bd7:	pop    eax
  421bd8:	push   edx
  421bd9:	aaa    
  421bda:	push   ecx
  421bdb:	xor    edx,0xdba2b2b6
  421be1:	adc    bh,BYTE PTR [edi-0x4a]
  421be4:	ror    DWORD PTR [esi],0x46
  421be7:	mov    ch,0x43
  421be9:	add    al,0x9b
  421beb:	or     al,0xc4
  421bed:	or     BYTE PTR [esi+edx*2+0x233c25b3],al
  421bf4:	gs mov ah,0x66
  421bf7:	out    dx,al
  421bf8:	sbb    al,0x92
  421bfa:	push   ebp
  421bfb:	mov    eax,0x460ac426
  421c00:	cld    
  421c01:	fsub   QWORD PTR ds:0x45c239a5
  421c07:	test   DWORD PTR [edi-0x5710e327],ebx
  421c0d:	and    al,0x46
  421c0f:	scas   eax,DWORD PTR es:[edi]
  421c10:	xor    edx,DWORD PTR [esi+esi*8-0x36]
  421c14:	fisttp QWORD PTR [ebx+eiz*1]
  421c17:	repnz int3 
  421c19:	psraw  mm4,QWORD PTR [edx-0x398086b0]
  421c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c21:	shr    BYTE PTR [eax+0x6c],cl
  421c24:	jne    0x421c2b
  421c26:	mov    edx,0x654477f3
  421c2b:	test   ebx,esp
  421c2d:	in     eax,0xf7
  421c2f:	and    bh,BYTE PTR [eax+0x26]
  421c32:	add    BYTE PTR [edx],al
  421c34:	push   es
  421c35:	xchg   esi,eax
  421c36:	sar    DWORD PTR [bp+di-0x26],1
  421c3a:	imul   ebx,ebx,0x3a
  421c3d:	dec    ebp
  421c3e:	in     eax,dx
  421c3f:	loop   0x421c34
  421c41:	lods   eax,DWORD PTR ds:[esi]
  421c42:	jmp    0x3670:0x55e00805
  421c49:	xor    BYTE PTR [esp+eiz*8+0x26],0xdc
  421c4e:	out    0x93,eax
  421c50:	sub    al,0x83
  421c52:	mov    esp,0xe6355d75
  421c57:	fsub   DWORD PTR [edi-0x23]
  421c5a:	cmp    eax,0x45b88c77
  421c5f:	jns    0x421cdc
  421c61:	pop    esp
  421c62:	sbb    eax,0xd369484
  421c67:	scas   al,BYTE PTR es:[edi]
  421c68:	jle    0x421c2b
  421c6a:	test   BYTE PTR [edx],ah
  421c6c:	lods   al,BYTE PTR ds:[esi]
  421c6e:	pop    ss
  421c6f:	mov    ecx,0xaf45b966
  421c74:	mov    ah,0xdb
  421c76:	into   
  421c77:	lea    edx,[ebx-0xe992806]
  421c7d:	and    BYTE PTR [ebx-0x5d],al
  421c80:	jae    0x421c9a
  421c82:	add    BYTE PTR [esi+0x26],bl
  421c85:	sar    DWORD PTR [eax-0x3031ed8d],0xbf
  421c8c:	cmp    edi,DWORD PTR ds:0x6fec5510
  421c92:	cmp    DWORD PTR [edx-0x6c266aaf],ebx
  421c98:	push   0x65
  421c9a:	fcmove st,st(2)
  421c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c9d:	jns    0x421cc3
  421c9f:	inc    edx
  421ca0:	fld    DWORD PTR [ebp-0x7e]
  421ca3:	cmp    esp,edi
  421ca5:	xor    al,0x8b
  421ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ca8:	test   al,0xce
  421caa:	iret   
  421cab:	bound  ebp,QWORD PTR [esi+0x49]
  421cae:	pop    ss
  421caf:	shl    BYTE PTR [esi],1
  421cb1:	sub    BYTE PTR [edi],ch
  421cb3:	xchg   esp,eax
  421cb4:	mov    bh,0x16
  421cb6:	cmc    
  421cb7:	cmc    
  421cb8:	sub    dh,BYTE PTR [ebp-0x4b36df54]
  421cbe:	rol    BYTE PTR [eax],1
  421cc0:	retf   0xc5c2
  421cc3:	pop    ebp
  421cc4:	mov    bl,0x6b
  421cc6:	ja     0x421c55
  421cc8:	lea    ebx,[edi-0x2d0fd94c]
  421cce:	fldenv [edx]
  421cd0:	stos   DWORD PTR es:[edi],eax
  421cd1:	or     al,0x37
  421cd3:	dec    esi
  421cd4:	xchg   DWORD PTR [edi+0x59f84a66],edx
  421cda:	ret    0x87d7
  421cdd:	jmp    DWORD PTR [ebp+0x24d8b9ff]
  421ce3:	fisubr WORD PTR [edi+edi*4-0x7a9f6084]
  421cea:	sti    
  421ceb:	or     DWORD PTR ds:0xa9bb4629,ebp
  421cf1:	mov    esi,0xf7a41649
  421cf6:	fistp  DWORD PTR [edx+0x233284f8]
  421cfc:	out    0x62,eax
  421cfe:	addr16 mov cl,0x25
  421d01:	jae    0x421ce1
  421d03:	and    esp,DWORD PTR [edx+0x3f10d796]
  421d09:	adc    DWORD PTR [edx-0x2b],eax
  421d0c:	and    DWORD PTR [ecx],edx
  421d0e:	test   al,0xf2
  421d10:	cmp    esi,DWORD PTR [ebp+0x40470671]
  421d16:	jnp    0x421d55
  421d18:	das    
  421d19:	pmaddwd mm4,QWORD PTR [edx+0x772db16e]
  421d20:	and    bl,BYTE PTR [ecx]
  421d22:	pushf  
  421d23:	rcr    DWORD PTR [esi+0x1463ce21],1
  421d29:	mov    eax,0xe61d8489
  421d2e:	test   DWORD PTR [ebp-0x29057b8d],eax
  421d34:	add    BYTE PTR [esi],bl
  421d36:	(bad)  
  421d37:	test   al,0x4c
  421d39:	mov    al,0x8b
  421d3b:	sbb    DWORD PTR [esp+eax*2],edi
  421d3e:	call   0xb223:0x1cd0fdf1
  421d45:	sub    BYTE PTR [esi],dh
  421d47:	std    
  421d48:	mov    al,0xf8
  421d4a:	cdq    
  421d4b:	xchg   ebp,eax
  421d4c:	addr16 xor eax,0x84434174
  421d52:	aaa    
  421d53:	inc    esi
  421d54:	jne    0x421d0b
  421d56:	out    dx,al
  421d57:	mul    BYTE PTR [ebx]
  421d59:	lock retf 
  421d5b:	daa    
  421d5c:	pushf  
  421d5d:	fwait
  421d5e:	lds    ebp,FWORD PTR [ebp+0x12]
  421d61:	out    dx,eax
  421d62:	cmp    eax,0x49d947b9
  421d67:	xor    ecx,DWORD PTR [edx-0x30e59193]
  421d6d:	arpl   WORD PTR [ebx+eiz*4],ax
  421d70:	leave  
  421d71:	cmp    bl,bl
  421d73:	stos   BYTE PTR es:[edi],al
  421d74:	and    al,0xe5
  421d76:	mov    ecx,0x5db1068
  421d7b:	add    eax,edi
  421d7d:	xlat   BYTE PTR ds:[ebx]
  421d7e:	add    ebp,DWORD PTR [ecx-0x187dda3e]
  421d84:	adc    DWORD PTR ds:0xd45bb437,0xbeeba3fb
  421d8e:	dec    esp
  421d8f:	jmp    0x8a0837f2
  421d94:	in     eax,0x79
  421d96:	rol    BYTE PTR [ecx-0x5907af],0xd4
  421d9d:	call   0xd16d40ec
  421da2:	lahf   
  421da3:	mov    edi,0x7289a17
  421da8:	add    eax,0xa1f4b48f
  421dad:	out    dx,eax
  421dae:	push   ebx
  421daf:	xchg   esi,eax
  421db0:	imul   esi,DWORD PTR [ebp-0xfce4e17],0xdc3fa6f3
  421dba:	(bad)
  421dbd:	fcomp  DWORD PTR [ebx+0x1da61b80]
  421dc3:	or     al,0xbd
  421dc5:	adc    edx,DWORD PTR [edx]
  421dc7:	mov    ds:0x51e4483c,eax
  421dcc:	and    eax,0x7f2a96bb
  421dd1:	adc    DWORD PTR [edx-0x52],edi
  421dd4:	mov    ds:0x735f43b5,eax
  421dd9:	pop    ebx
  421dda:	popa   
  421ddb:	sub    DWORD PTR [esi],edi
  421ddd:	adc    al,0xc6
  421ddf:	pop    es
  421de0:	wbinvd 
  421de2:	jne    0x421d73
  421de4:	xchg   dh,dh
  421de6:	adc    eax,0x2973368e
  421deb:	and    edi,DWORD PTR [ebx+0x23324231]
  421df1:	mov    al,ds:0xa3b0aede
  421df6:	add    BYTE PTR [eax-0x63],0x8e
  421dfa:	add    esp,DWORD PTR [eax+ecx*4]
  421dfd:	adc    esi,esi
  421dff:	xchg   BYTE PTR [esi],ah
  421e01:	push   ebp
  421e02:	mov    al,BYTE PTR [eax+0x30]
  421e05:	fnsave [ebx-0x43655957]
  421e0b:	push   ebp
  421e0c:	jg     0x421df7
  421e0e:	out    0x5b,eax
  421e10:	popa   
  421e11:	mov    ch,0x5d
  421e13:	mov    edx,DWORD PTR [esi+ebp*4-0x33]
  421e17:	bound  edx,QWORD PTR [ebx-0x48463a1a]
  421e1d:	or     BYTE PTR [esi+0x25ef5474],ch
  421e23:	sbb    ah,cl
  421e25:	mov    ah,0x3
  421e27:	mov    ds:0x1c8bcba1,eax
  421e2c:	and    bl,BYTE PTR [edi+0x2cfbc1c8]
  421e32:	xchg   BYTE PTR [ebx+ebp*4+0x15],dl
  421e36:	std    
  421e37:	sbb    DWORD PTR [esi+0x4e],ebp
  421e3a:	or     BYTE PTR [ebx+0x3cca28b6],ah
  421e40:	mov    ds:0xe501f024,al
  421e45:	pop    ebx
  421e46:	int3   
  421e47:	in     eax,dx
  421e48:	mov    al,ds:0x4a4aa059
  421e4d:	daa    
  421e4e:	pusha  
  421e4f:	jne    0x421e51
  421e51:	xor    al,0x9e
  421e53:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  421e55:	sbb    al,BYTE PTR [ebx]
  421e57:	icebp  
  421e58:	scas   eax,DWORD PTR es:[edi]
  421e59:	lock lea esp,[ecx-0x6f99e41e]
  421e60:	mov    eax,ds:0x42b1e35
  421e65:	jle    0x421df6
  421e67:	add    ch,dh
  421e69:	add    ebp,DWORD PTR [edx]
  421e6b:	jmp    0x421dfa
  421e6d:	mov    ch,0x35
  421e6f:	imul   eax,DWORD PTR [ebx-0x42],0xa739faaa
  421e76:	stos   BYTE PTR es:[edi],al
  421e77:	fcomp  QWORD PTR [ebx-0x49a9816b]
  421e7d:	inc    edi
  421e7e:	or     al,0xcb
  421e80:	and    BYTE PTR [edx+0x23],al
  421e83:	mov    edi,0xfea4757b
  421e88:	jle    0x421e15
  421e8a:	jb     0x421e6f
  421e8c:	jo     0x421ef8
  421e8e:	in     al,dx
  421e8f:	mov    ds:0xe70cf761,al
  421e94:	es jb  0x421e8e
  421e97:	inc    edx
  421e98:	jne    0x421ee1
  421e9a:	xchg   ebx,eax
  421e9b:	sbb    eax,0x2313527
  421ea0:	cmp    ebx,DWORD PTR ss:[ecx]
  421ea3:	fist   DWORD PTR [ebx]
  421ea5:	mov    al,BYTE PTR gs:[edi]
  421ea8:	mov    BYTE PTR es:[edi],ah
  421eab:	mov    ebp,eax
  421ead:	cwde   
  421eae:	adc    eax,0x9077ff31
  421eb3:	or     eax,0x233ba4c9
  421eb8:	xchg   ebx,eax
  421eb9:	stos   DWORD PTR es:[edi],eax
  421eba:	(bad)  
  421ebb:	aad    0xa5
  421ebd:	mov    ebx,0x84d92f30
  421ec2:	xlat   BYTE PTR ds:[ebx]
  421ec3:	sub    esi,DWORD PTR [edx]
  421ec5:	mov    ch,0xb6
  421ec7:	out    dx,eax
  421ec8:	jo     0x421f1a
  421eca:	jmp    0xc200:0xc62c6080
  421ed1:	and    al,0x39
  421ed3:	pop    ebp
  421ed4:	sbb    ebx,DWORD PTR [esi]
  421ed6:	xlat   BYTE PTR ds:[ebx]
  421ed7:	adc    BYTE PTR [esi+0x492258b4],0xc8
  421ede:	test   esp,eax
  421ee0:	bound  eax,QWORD PTR [edx]
  421ee2:	mov    WORD PTR [edx-0x5b],fs
  421ee5:	test   eax,0x8f62b176
  421eea:	out    dx,eax
  421eeb:	jmp    0x96a954de
  421ef0:	jecxz  0x421ed8
  421ef2:	cmp    esp,DWORD PTR [ebx+0x222f169c]
  421ef8:	or     DWORD PTR [ebx+0x763c4f2f],edx
  421efe:	push   eax
  421eff:	mov    ds:0xbc6c1805,eax
  421f04:	in     al,0xac
  421f06:	pop    eax
  421f07:	and    edx,edi
  421f09:	add    dh,BYTE PTR [ecx-0x587259bd]
  421f0f:	mov    al,ds:0x48fd1267
  421f15:	in     eax,dx
  421f16:	xor    eax,0xe5a2cf6d
  421f1b:	and    dh,BYTE PTR [edi-0x5a7130d9]
  421f21:	pop    ecx
  421f22:	add    BYTE PTR [edx],dh
  421f24:	jno    0x421f88
  421f26:	fstp   DWORD PTR [ecx+ecx*8-0x190c546b]
  421f2d:	jne    0x421f33
  421f2f:	xchg   edx,eax
  421f30:	pop    eax
  421f31:	repz sbb BYTE PTR [ebp+eiz*4+0x74],ch
  421f36:	daa    
  421f37:	cwde   
  421f38:	cmp    ecx,DWORD PTR [esi-0x10]
  421f3b:	or     eax,0x320618b
  421f40:	push   ds
  421f41:	add    eax,DWORD PTR [esi]
  421f43:	mov    ds:0x5b4c94b9,eax
  421f48:	sbb    bl,BYTE PTR [eax]
  421f4a:	imul   edi,DWORD PTR [ecx-0x4],0x11
  421f4e:	or     edx,DWORD PTR [eax+0x22888c9b]
  421f54:	jecxz  0x421fa1
  421f56:	cmp    al,0x7b
  421f58:	jge    0x421f39
  421f5a:	and    DWORD PTR [ebx-0x43],esp
  421f5d:	bswap  ebp
  421f5f:	xchg   edi,eax
  421f60:	xchg   edx,eax
  421f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f62:	sbb    eax,0xdbd3943
  421f67:	jae    0x421f7f
  421f69:	imul   ebx,DWORD PTR [ebp+0x30],0xffffffc6
  421f6d:	imul   DWORD PTR [ebx-0x4abb1f97]
  421f73:	outs   dx,BYTE PTR ds:[esi]
  421f74:	retf   0x2dd9
  421f77:	mov    ds:0xae6edddd,eax
  421f7c:	push   ds
  421f7d:	dec    esp
  421f7e:	stos   BYTE PTR es:[edi],al
  421f7f:	or     al,BYTE PTR [eax+0x36fceb84]
  421f85:	cmc    
  421f86:	arpl   WORD PTR [ecx+0x7e7d3ac8],bp
  421f8c:	xor    BYTE PTR [esi-0x1b],ah
  421f8f:	mov    ds:0x8b5b9d9b,al
  421f94:	fwait
  421f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f96:	jno    0x421f37
  421f98:	xchg   edi,eax
  421f99:	sub    DWORD PTR [esi+0x5b],esp
  421f9c:	dec    edx
  421f9d:	dec    ebx
  421f9e:	push   ss
  421f9f:	and    al,0x6f
  421fa1:	mov    ch,0x5c
  421fa3:	cmp    eax,0x8cea8650
  421fa8:	xchg   edx,eax
  421fa9:	call   0x67e72ff3
  421fae:	mov    bl,BYTE PTR [edx-0x70]
  421fb1:	(bad)  
  421fb2:	int3   
  421fb3:	or     al,0xbc
  421fb5:	jecxz  0x42200f
  421fb7:	and    esi,DWORD PTR [edi]
  421fb9:	mov    bh,0x25
  421fbb:	push   edi
  421fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fbd:	cmc    
  421fbe:	mov    ecx,es
  421fc0:	jmp    0x421fa4
  421fc2:	push   ds
  421fc3:	in     eax,dx
  421fc4:	outs   dx,DWORD PTR ds:[esi]
  421fc5:	mov    al,BYTE PTR [edx-0x32]
  421fc8:	xchg   DWORD PTR [ebx+edx*2],ecx
  421fcb:	and    ebp,DWORD PTR [edx-0x6c03a03]
  421fd1:	popf   
  421fd2:	loope  0x421f9e
  421fd4:	scas   al,BYTE PTR es:[edi]
  421fd5:	sar    BYTE PTR [eax-0x57],0x56
  421fd9:	xchg   edx,eax
  421fda:	aaa    
  421fdb:	mov    ds:0x6f3ab6c4,eax
  421fe0:	es test al,0x86
  421fe3:	pop    ebp
  421fe4:	inc    ebx
  421fe5:	pop    edi
  421fe6:	mov    DWORD PTR [edx+0x2d6f3529],eax
  421fec:	jns    0x421fe6
  421fee:	sub    edx,0xffffffc8
  421ff1:	hlt    
  421ff2:	lds    edx,FWORD PTR [eax]
  421ff4:	push   esp
  421ff5:	lock cli 
  421ff7:	push   ebp
  421ff8:	nop
  421ff9:	ins    BYTE PTR es:[edi],dx
  421ffa:	adc    al,0x89
  421ffc:	scas   al,BYTE PTR es:[edi]
  421ffd:	jae    0x421fbd
  421fff:	inc    ebx
  422000:	add    DWORD PTR [eax],esi
  422002:	add    BYTE PTR [ebx+edi*1],dl
  422005:	shr    edx,0x2
  422008:	adc    al,0xb4
  42200a:	push   esp
  42200b:	mov    dl,0x50
  42200d:	imul   ebp,DWORD PTR [esi-0x74],0x5885d231
  422014:	mov    esp,0x265e188a
  422019:	mov    ecx,0xe3e9e82
  42201e:	cmp    ah,cl
  422020:	push   0xe1181a26
  422025:	jno    0x422016
  422027:	inc    ebp
  422028:	call   0x4160:0x79c5bc45
  42202f:	int    0x4a
  422031:	mov    bl,0x5f
  422033:	fucomi st,st(2)
  422035:	xchg   edx,eax
  422036:	and    eax,DWORD PTR cs:[ebx-0x59]
  42203a:	cmc    
  42203b:	out    dx,al
  42203c:	inc    ecx
  42203d:	jne    0x421fd8
  42203f:	adc    al,0xb0
  422041:	ret    
  422042:	es mov al,0x26
  422045:	mov    ch,0x57
  422047:	xchg   BYTE PTR [ecx+ebx*8-0x4aa7465b],al
  42204e:	mov    cl,bh
  422050:	dec    ecx
  422051:	mov    eax,0xfb8c7e3d
  422056:	inc    ebp
  422057:	xchg   DWORD PTR [ebx+eax*2],ecx
  42205a:	in     eax,0xe9
  42205c:	ja     0x422033
  42205e:	fistp  DWORD PTR [ecx+edx*2-0x76]
  422062:	and    al,0xa3
  422064:	or     eax,0xa5c8d6cb
  422069:	rep ins BYTE PTR es:[edi],dx
  42206b:	add    eax,0xf76377c6
  422070:	sub    bl,BYTE PTR [eax]
  422072:	je     0x4220ab
  422074:	mov    ds:0xc3231bb8,al
  422079:	add    ecx,DWORD PTR [ebp+0x33]
  42207c:	rcl    BYTE PTR es:[eax-0x74],0xa0
  422081:	shl    eax,cl
  422083:	fldcw  WORD PTR [edx]
  422085:	xor    eax,0x678c9ebd
  42208a:	out    dx,al
  42208b:	ret    
  42208c:	sbb    DWORD PTR [esp+eax*2-0x8],esp
  422090:	shl    ebp,0xe9
  422093:	dec    ecx
  422094:	mov    DWORD PTR [ecx+0x13],ecx
  422097:	arpl   dx,si
  422099:	mov    cl,0x2
  42209b:	inc    ebp
  42209c:	imul   esi,DWORD PTR [eax-0x1a22f62c],0xf0229adf
  4220a6:	enter  0x47ec,0xde
  4220aa:	popf   
  4220ab:	cmp    DWORD PTR [esi+edi*8],ebx
  4220ae:	push   ss
  4220af:	jno    0x422075
  4220b1:	pop    ecx
  4220b2:	pop    es
  4220b3:	and    edx,esi
  4220b5:	mov    bl,0x93
  4220b7:	int3   
  4220b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b9:	cli    
  4220ba:	mov    es,WORD PTR [eax+0x55]
  4220bd:	loopne 0x422130
  4220bf:	mov    ebx,DWORD PTR [ebx-0x54]
  4220c2:	sbb    edi,DWORD PTR [ecx]
  4220c4:	jno    0x4220ed
  4220c6:	add    al,0xe7
  4220c8:	sub    edi,DWORD PTR [ebx-0x7235617b]
  4220ce:	push   cs
  4220cf:	(bad)  
  4220d0:	test   BYTE PTR es:[eax+0x1cbd715e],0x91
  4220d8:	scas   eax,DWORD PTR es:[edi]
  4220d9:	xchg   ebp,eax
  4220da:	pop    esp
  4220db:	and    DWORD PTR [esi+0x40],esp
  4220de:	jl     0x42206f
  4220e0:	clc    
  4220e1:	sub    al,0x95
  4220e3:	loop   0x42210b
  4220e5:	and    al,0x58
  4220e7:	pushaw 
  4220e9:	aas    
  4220ea:	aam    0x44
  4220ec:	pop    ebx
  4220ed:	xor    eax,0x8a706522
  4220f2:	pushf  
  4220f3:	(bad)  
  4220f4:	bound  edx,QWORD PTR [edi-0x1c9285be]
  4220fa:	adc    esi,DWORD PTR [edi-0x69599a0a]
  422100:	das    
  422101:	mov    ch,0x7
  422103:	push   ds
  422104:	ja     0x4220e3
  422106:	ja     0x422137
  422108:	mov    bh,0xb4
  42210a:	inc    esp
  42210b:	sbb    cl,BYTE PTR [esi]
  42210d:	orps   xmm1,XMMWORD PTR [esi-0x79cfcc12]
  422114:	push   es
  422115:	in     al,0xfa
  422117:	push   esi
  422118:	ror    BYTE PTR [ecx-0x5],cl
  42211b:	pop    esi
  42211c:	test   BYTE PTR es:[ebx+0x70],cl
  422120:	cwde   
  422121:	sub    DWORD PTR [ebx-0x1a],eax
  422124:	mov    al,ds:0xa47b2a35
  422129:	shr    DWORD PTR [ebx-0x3a2dc6cd],cl
  42212f:	jl     0x42217c
  422131:	cmp    eax,0xdd6174fc
  422136:	ds cmp eax,0x6b1f6f38
  42213d:	inc    ebp
  42213e:	scas   eax,DWORD PTR es:[edi]
  42213f:	in     al,0x74
  422141:	adc    al,0x55
  422143:	mov    eax,ds:0x49c207a6
  422148:	aas    
  422149:	dec    edi
  42214a:	daa    
  42214b:	xlat   BYTE PTR ds:[ebx]
  42214c:	ja     0x422103
  42214e:	stos   DWORD PTR es:[edi],eax
  42214f:	dec    ebx
  422150:	ret    
  422151:	pop    esi
  422152:	mov    ebx,0x49f705cf
  422157:	cmp    DWORD PTR [edi+0x269abbc2],ecx
  42215d:	mov    BYTE PTR [ecx-0x72],dl
  422160:	dec    ebx
  422161:	adc    bh,BYTE PTR [eax+0x1aa7f751]
  422167:	sbb    al,0x56
  422169:	mov    edx,0xf91b5a5f
  42216e:	lds    esi,FWORD PTR [esi+0x2d]
  422171:	or     BYTE PTR [eax+ebx*2-0x1e],bl
  422175:	arpl   bp,dx
  422177:	inc    ebx
  422178:	ds mov ebx,0x76a311
  42217e:	comiss xmm1,DWORD PTR [edx-0x28]
  422182:	inc    ebp
  422183:	jge    0x4221c2
  422185:	repnz stc 
  422187:	ficomp DWORD PTR [edi+0x7333aa05]
  42218d:	push   ds
  42218e:	out    dx,eax
  42218f:	mov    ds:0x8d7f959,al
  422194:	and    bl,cl
  422196:	or     cl,BYTE PTR [ecx]
  422198:	imul   ebx,DWORD PTR [edx],0x3e
  42219b:	mov    ah,0x9f
  42219d:	dec    ecx
  42219e:	gs out dx,al
  4221a0:	aas    
  4221a1:	xor    eax,0xcef66ac0
  4221a6:	stos   DWORD PTR es:[edi],eax
  4221a7:	aam    0x92
  4221a9:	pop    edx
  4221aa:	les    esp,FWORD PTR [ebp-0x12]
  4221ad:	sbb    BYTE PTR [ebp+0x38],ah
  4221b0:	xchg   ch,ch
  4221b2:	jle    0x42214a
  4221b4:	and    eax,0x8e11e1b4
  4221b9:	pushf  
  4221ba:	call   0x2bf5ef93
  4221bf:	xor    BYTE PTR [esi+0x234d8133],ah
  4221c5:	call   0x5723:0xc268186b
  4221cc:	cmp    BYTE PTR [esi],al
  4221ce:	(bad)  
  4221cf:	and    al,BYTE PTR [edi+0x6c]
  4221d2:	push   esi
  4221d3:	scas   eax,DWORD PTR es:[edi]
  4221d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d5:	xor    DWORD PTR [ecx-0x42d6f488],ebx
  4221db:	mov    esi,0x42cfadbb
  4221e0:	rcr    BYTE PTR [ecx],cl
  4221e2:	es dec edx
  4221e4:	sub    dh,bh
  4221e6:	push   eax
  4221e7:	call   0x4128b5da
  4221ec:	arpl   WORD PTR [ebx+0x3e],ax
  4221ef:	xor    esp,DWORD PTR [edi+0x3ce47029]
  4221f5:	mov    ch,0xdd
  4221f7:	cmp    dh,bh
  4221f9:	ins    BYTE PTR es:[edi],dx
  4221fa:	cmp    eax,ecx
  4221fc:	push   0x38cba713
  422201:	jne    0x42225d
  422203:	or     ch,ah
  422205:	pop    edx
  422206:	pop    es
  422207:	shl    BYTE PTR gs:[eax-0x390cdb19],0x45
  42220f:	jge    0x4221b3
  422211:	cmp    al,0x4f
  422213:	dec    esi
  422214:	and    ch,BYTE PTR [esp+eax*2]
  422217:	sbb    al,0x65
  422219:	test   eax,0xc79d03dd
  42221e:	dec    ebp
  42221f:	dec    ecx
  422220:	jbe    0x422257
  422222:	cmp    DWORD PTR fs:[esi-0x69],ebp
  422226:	jnp    0x42225f
  422228:	mov    dh,0x72
  42222a:	retf   0x64d3
  42222d:	sbb    eax,0x9ddb2f46
  422232:	mov    cl,0x54
  422234:	dec    eax
  422235:	jbe    0x4221c0
  422237:	xlat   BYTE PTR ds:[ebx]
  422238:	pop    esp
  422239:	pop    eax
  42223a:	or     ah,BYTE PTR [ebx-0x6f690bf7]
  422240:	cwde   
  422241:	jno    0x4222b0
  422243:	aas    
  422244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422245:	inc    edx
  422246:	pusha  
  422247:	icebp  
  422248:	xor    al,dh
  42224a:	shl    eax,1
  42224c:	sub    BYTE PTR [ebp+0x4598e667],dh
  422252:	or     ebp,DWORD PTR ss:[edi-0x203e3a47]
  422259:	out    0x89,eax
  42225b:	test   ebx,0x562ba957
  422261:	fcom   QWORD PTR [esi]
  422263:	mov    ds:0x124f6524,eax
  422268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422269:	xchg   DWORD PTR [edx],esp
  42226b:	std    
  42226c:	sbb    eax,0xee70f072
  422271:	pusha  
  422272:	test   al,0x71
  422274:	popa   
  422275:	or     al,0xb9
  422277:	mov    eax,ds:0xa10619f0
  42227c:	mov    edi,0x262748d0
  422281:	into   
  422282:	enter  0xb863,0xa9
  422286:	lock shr DWORD PTR fs:0xd4ea9564,1
  42228e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42228f:	ror    DWORD PTR [eax+0x3500250e],cl
  422295:	mov    al,ds:0xa5c62da8
  42229a:	mov    BYTE PTR [ebx-0x46],cl
  42229d:	fcmovnb st,st(5)
  42229f:	push   ds
  4222a0:	mov    ebx,0x44c59e20
  4222a5:	fst    QWORD PTR ds:0xece43694
  4222ab:	inc    edx
  4222ac:	add    al,BYTE PTR [esi]
  4222ae:	mov    BYTE PTR [eax-0x13],0xde
  4222b2:	mov    ch,BYTE PTR [ebx-0x6a]
  4222b5:	aam    0x9d
  4222b7:	jbe    0x4222f6
  4222b9:	jge    0x4222b1
  4222bb:	and    bh,bh
  4222bd:	call   0x829b:0x2c2637ea
  4222c4:	or     al,0x7f
  4222c6:	lock enter 0x356f,0xc3
  4222cb:	imul   ecx,DWORD PTR [ebp+ebx*2-0x6eaacd99],0xffffffb6
  4222d3:	jp     0x4222a2
  4222d5:	ds ds pusha 
  4222d8:	xor    dl,ch
  4222da:	sub    eax,ecx
  4222dc:	stc    
  4222dd:	ret    0x4d9a
  4222e0:	fs pop eax
  4222e2:	inc    edx
  4222e3:	mov    ds:0x7bb543b5,eax
  4222e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222e9:	aam    0xed
  4222eb:	lock arpl WORD PTR [edi+edi*4],cx
  4222ef:	or     al,BYTE PTR [edx+edi*1+0x4]
  4222f3:	xchg   ebx,eax
  4222f4:	sbb    DWORD PTR [eax+0x1],esp
  4222f7:	mov    ds:0x36b82e5,eax
  4222fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222fd:	xchg   edx,eax
  4222fe:	(bad)  
  4222ff:	outs   dx,BYTE PTR ds:[esi]
  422300:	sub    BYTE PTR [esi+esi*2+0x49],al
  422304:	or     DWORD PTR [ebp+0x3357f04d],esi
  42230a:	loope  0x4222f2
  42230c:	pop    edi
  42230d:	rcr    DWORD PTR [ebx+eax*1-0x45079ede],1
  422314:	pop    ds
  422315:	aad    0xd5
  422317:	mov    edi,edx
  422319:	lea    ebx,[eax+0x7a746d6c]
  42231f:	and    bh,BYTE PTR [ecx]
  422321:	pop    ebp
  422322:	push   ss
  422323:	cmp    bh,BYTE PTR [ebx+0x5b]
  422326:	sub    BYTE PTR [ebx+0x48],dh
  422329:	xchg   DWORD PTR [ecx+edx*2],ecx
  42232c:	ja     0x422399
  42232e:	sub    BYTE PTR [edi+0x5434f1f1],cl
  422334:	xor    cl,cl
  422336:	aad    0xf1
  422338:	inc    eax
  422339:	(bad)  
  42233a:	popa   
  42233b:	cmp    dl,BYTE PTR [edx+0x7ba72722]
  422341:	mov    dl,0x4f
  422343:	push   ds
  422344:	pop    esp
  422345:	loop   0x4222d3
  422347:	arpl   WORD PTR [esi],sp
  422349:	test   eax,0xcf683b34
  42234e:	jae    0x422344
  422350:	xor    BYTE PTR ds:0x9ad0bcab,dh
  422356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422357:	lods   al,BYTE PTR ds:[esi]
  422358:	cld    
  422359:	and    al,0xc
  42235b:	sub    al,0x26
  42235d:	pop    ebp
  42235e:	mov    ebp,0x1e38329b
  422363:	pop    edx
  422364:	sbb    al,0x35
  422366:	mov    dh,0x98
  422368:	enter  0xdb62,0xfb
  42236c:	adc    ebp,0xdb6a8633
  422372:	cmp    ch,BYTE PTR [edx-0x6b]
  422375:	mov    ebx,0x8a86a036
  42237a:	in     eax,0x6f
  42237c:	repz push ss
  42237e:	lods   al,BYTE PTR ds:[esi]
  42237f:	mov    ecx,0xa2c7af70
  422384:	push   ss
  422385:	lea    ecx,[edi-0x12]
  422388:	push   esi
  422389:	es dec esp
  42238b:	outs   dx,BYTE PTR ds:[esi]
  42238c:	or     esp,edi
  42238e:	clc    
  42238f:	mov    ds:0x79cfc9a,al
  422394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422396:	xchg   DWORD PTR [eax],edi
  422398:	xor    al,0xc1
  42239a:	or     DWORD PTR [esi+0x4e],esp
  42239d:	mov    ch,0xe4
  42239f:	mov    al,ds:0x3d553092
  4223a4:	jno    0x4223f0
  4223a6:	rcr    cl,0xca
  4223a9:	mov    dh,0x2a
  4223ab:	jb     0x42236e
  4223ad:	push   ds
  4223ae:	add    al,0x60
  4223b0:	ja     0x4223c9
  4223b2:	push   ebp
  4223b3:	adc    BYTE PTR [ebp-0x2b63d9f8],dh
  4223b9:	cmp    al,0x70
  4223bb:	fs pop ds
  4223bd:	push   0xd3c38d0e
  4223c2:	test   eax,0xcebd77c3
  4223c7:	sub    ecx,ebx
  4223c9:	mov    cl,0xec
  4223cb:	dec    ebp
  4223cc:	mov    ds:0xf8921ac1,eax
  4223d1:	sub    DWORD PTR [ebx],0xfffffffb
  4223d4:	fwait
  4223d5:	mov    esi,DWORD PTR [edx]
  4223d7:	outs   dx,DWORD PTR ds:[esi]
  4223d8:	fs dec eax
  4223da:	repnz lods eax,DWORD PTR ds:[esi]
  4223dc:	iret   
  4223dd:	cmc    
  4223de:	push   ecx
  4223df:	mov    bl,0x10
  4223e1:	lods   eax,DWORD PTR ds:[esi]
  4223e2:	loope  0x422386
  4223e4:	sub    eax,0xa5ff9cc8
  4223e9:	test   DWORD PTR [edx-0x4cc667db],0x32358561
  4223f3:	popa   
  4223f4:	sbb    DWORD PTR [ebx+0x4e7e88e2],ebp
  4223fa:	inc    esp
  4223fb:	(bad)  [ebx+0x31e36d7a]
  422401:	jno    0x422406
  422403:	jno    0x42247c
  422405:	xor    esi,DWORD PTR [eax]
  422407:	or     BYTE PTR [eax],0x46
  42240a:	leave  
  42240b:	mov    dl,0xa1
  42240d:	sahf   
  42240e:	cld    
  42240f:	bound  esp,QWORD PTR [esi]
  422411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422412:	or     eax,0x1fddbd6b
  422417:	enter  0xf674,0xfc
  42241b:	iret   
  42241c:	mov    ebp,0x5a32b53
  422421:	xchg   BYTE PTR [ecx-0x18e65970],cl
  422427:	and    DWORD PTR [ebp+ecx*1-0x4af0e94c],0xd
  42242f:	pusha  
  422430:	mov    ebp,0x7a1bc666
  422435:	mov    edi,0xa5a6acff
  42243a:	push   ebx
  42243b:	fwait
  42243c:	or     ebp,DWORD PTR [eax-0x29]
  42243f:	xchg   DWORD PTR [eax-0x4b],edi
  422442:	and    al,0x3e
  422444:	mov    dh,0x8d
  422446:	pop    ecx
  422447:	dec    sp
  422449:	(bad)  [edx+0x59]
  42244c:	es push ds
  42244e:	aad    0x4b
  422450:	ficom  WORD PTR [edx+ecx*2+0x49356b60]
  422457:	das    
  422458:	inc    esi
  422459:	push   es
  42245a:	addr16 cmp al,0x22
  42245d:	cdq    
  42245e:	lds    edi,FWORD PTR ds:0x4e8af34e
  422464:	sti    
  422465:	fmul   QWORD PTR [edi+0xa]
  422468:	xor    dh,BYTE PTR [ebp+0x348a0d26]
  42246e:	fstp   QWORD PTR [ebx+0x5c]
  422471:	out    dx,eax
  422472:	ss icebp 
  422474:	dec    ebx
  422475:	adc    BYTE PTR [esi+0x5],ah
  422478:	test   DWORD PTR [ecx],edx
  42247a:	lea    edx,[esi+0x37]
  42247d:	pop    ss
  42247e:	fidiv  WORD PTR [ebp+eiz*1+0x63295d0d]
  422485:	mov    ecx,0xfaa6b3da
  42248a:	pushf  
  42248b:	jae    0x422469
  42248d:	xchg   BYTE PTR [ecx],ah
  42248f:	rcl    ecx,cl
  422491:	xor    DWORD PTR [ecx-0x4d],edi
  422494:	inc    esp
  422495:	xor    ebx,DWORD PTR [ebx]
  422497:	lea    ebp,[edx-0x7]
  42249a:	imul   ebx,DWORD PTR [ecx],0x8ac38655
  4224a0:	loopne 0x422493
  4224a2:	scas   al,BYTE PTR es:[edi]
  4224a3:	sub    al,0xe4
  4224a5:	add    ah,bl
  4224a7:	add    ch,BYTE PTR [ebx+0x7de2fa8d]
  4224ad:	xor    eax,0x88baaafd
  4224b2:	gs fs imul dl
  4224b6:	inc    ebp
  4224b7:	test   DWORD PTR [esi+0x1cee0333],ebx
  4224bd:	fwait
  4224be:	pushf  
  4224bf:	clc    
  4224c0:	shr    BYTE PTR [ebx+esi*8+0x7f69b622],1
  4224c7:	push   ebx
  4224c8:	and    eax,0xbf259123
  4224cd:	mov    bl,0x8d
  4224cf:	pop    es
  4224d0:	ja     0x422493
  4224d2:	loopne 0x4224eb
  4224d4:	loop   0x42249c
  4224d6:	push   eax
  4224d7:	mov    ds:0x635525c2,eax
  4224dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224dd:	int3   
  4224de:	aaa    
  4224df:	inc    edx
  4224e0:	(bad)  
  4224e1:	adc    esi,ecx
  4224e3:	ror    dl,0x34
  4224e6:	dec    ebx
  4224e7:	test   DWORD PTR [ecx-0x9],esi
  4224ea:	push   0xa
  4224ec:	xor    al,0xc3
  4224ee:	dec    ecx
  4224ef:	les    esp,FWORD PTR [esi]
  4224f1:	aas    
  4224f2:	inc    eax
  4224f3:	pusha  
  4224f4:	mov    dh,0xee
  4224f6:	lods   eax,DWORD PTR ds:[esi]
  4224f7:	cmp    eax,0x6c80b585
  4224fc:	adc    DWORD PTR [edx],ebp
  4224fe:	sti    
  4224ff:	jne    0x42255c
  422501:	ss inc ebx
  422503:	sbb    eax,0x7d57be2d
  422508:	ret    0xcd44
  42250b:	loopne 0x422572
  42250d:	mov    eax,0x357d08b5
  422512:	mov    bl,0x34
  422514:	pop    ds
  422515:	mov    esp,0x843c0029
  42251a:	inc    ebp
  42251b:	outs   dx,DWORD PTR ds:[esi]
  42251c:	test   eax,0xe1873ee
  422521:	loope  0x422576
  422523:	add    DWORD PTR [ebx],esi
  422525:	xor    eax,0xf739cae6
  42252a:	adc    BYTE PTR [esi+ebp*2-0x39],al
  42252e:	inc    ebp
  42252f:	xor    BYTE PTR [edx-0x69],cl
  422532:	dec    ebx
  422533:	mov    al,ds:0x9a31e7d0
  422538:	adc    DWORD PTR [edx],0x19fb9fbf
  42253e:	push   edx
  42253f:	div    BYTE PTR [ecx-0xb]
  422542:	mov    dl,0x6f
  422544:	fs push 0xffffffc2
  422547:	xlat   BYTE PTR ds:[ebx]
  422548:	and    DWORD PTR [eax-0x2241f2da],ecx
  42254e:	lods   eax,DWORD PTR ds:[esi]
  42254f:	pop    ecx
  422550:	add    DWORD PTR [eax+ebx*8+0x1a260542],esi
  422557:	push   ebx
  422558:	sub    al,0xcb
  42255a:	pop    ecx
  42255b:	adc    al,0xa7
  42255d:	fadd   QWORD PTR [ebp-0x76]
  422560:	and    al,0x90
  422562:	and    al,0x83
  422564:	test   eax,0xf7a2167d
  422569:	popa   
  42256a:	int    0x1b
  42256c:	push   esi
  42256d:	imul   eax,edi,0x79
  422570:	fwait
  422571:	lea    ebp,[ecx+0x12ee9727]
  422577:	popa   
  422578:	adc    BYTE PTR [edx+0x212e2e84],dl
  42257e:	lods   eax,DWORD PTR ds:[esi]
  42257f:	xchg   edi,eax
  422580:	mov    ?,WORD PTR [ebp+0x7623d3e1]
  422586:	adc    al,BYTE PTR [edx+0x1c460b48]
  42258c:	jno    0x42254c
  42258e:	les    esp,FWORD PTR [esi+eax*4-0x31cd52b]
  422595:	add    BYTE PTR [ebx],0x23
  422598:	xor    esp,DWORD PTR [edx-0x38]
  42259b:	cdq    
  42259c:	and    eax,0x8ec43e12
  4225a1:	jmp    0x9f49b47
  4225a6:	or     al,0x5f
  4225a8:	mov    gs,WORD PTR [edx-0x4aaea8f7]
  4225ae:	lods   al,BYTE PTR ds:[esi]
  4225af:	addr16 (bad) 
  4225b1:	es call 0xdfacb80a
  4225b7:	retf   
  4225b8:	jae    0x4225ef
  4225ba:	push   ss
  4225bb:	daa    
  4225bc:	loop   0x42256a
  4225be:	ret    
  4225bf:	lea    edx,[esi+ecx*8-0x91e233b]
  4225c6:	sub    al,0x62
  4225c8:	cmp    eax,0x3479a832
  4225cd:	outs   dx,BYTE PTR ds:[esi]
  4225ce:	daa    
  4225cf:	and    esi,esp
  4225d1:	mov    WORD PTR [eax+0x56],ds
  4225d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d6:	into   
  4225d7:	jl     0x42264f
  4225d9:	mov    bl,0x86
  4225db:	sbb    BYTE PTR [ecx-0x79],al
  4225de:	mov    dh,0x69
  4225e0:	es mov dh,0xf4
  4225e3:	inc    esp
  4225e4:	xchg   esp,eax
  4225e5:	sub    esi,DWORD PTR [edi+0x20]
  4225e8:	mov    es:0xd7726cce,eax
  4225ee:	mov    ch,0xa2
  4225f0:	mov    ds:0x536fb35,eax
  4225f5:	aas    
  4225f6:	out    0x9,eax
  4225f8:	aad    0xc4
  4225fa:	inc    ebp
  4225fb:	inc    edx
  4225fc:	int    0xd
  4225fe:	inc    esp
  4225ff:	push   esi
  422600:	aad    0xd9
  422602:	cmp    ch,bl
  422604:	adc    BYTE PTR [edx-0x21035d25],ah
  42260a:	inc    ecx
  42260b:	test   eax,0x6d0e0ba6
  422610:	jge    0x42263f
  422612:	out    dx,al
  422613:	dec    edi
  422614:	sub    BYTE PTR [edx-0xe],bh
  422617:	xchg   BYTE PTR [edi+0x5d9f7665],al
  42261d:	adc    eax,0xf8c72098
  422622:	lds    eax,FWORD PTR [edi]
  422624:	mov    dl,0x90
  422626:	out    dx,eax
  422627:	iret   
  422628:	imul   eax,DWORD PTR [esi+ecx*8],0xf12d9448
  42262f:	and    cl,BYTE PTR [ebp+0x43]
  422632:	jl     0x422695
  422634:	imul   ecx,DWORD PTR es:[eax+0x5f35ec99],0x2c
  42263c:	aas    
  42263d:	mov    ch,0xa
  42263f:	pop    eax
  422640:	pop    es
  422641:	test   DWORD PTR [ecx],esp
  422643:	push   cs
  422644:	ins    BYTE PTR es:[edi],dx
  422645:	leave  
  422646:	sub    BYTE PTR [ecx+0x28],cl
  422649:	cmc    
  42264a:	call   0x3145:0xf05a3817
  422651:	mov    ch,0xe5
  422653:	test   DWORD PTR [ebx+eax*8+0x5733c1cb],edi
  42265a:	lds    esi,FWORD PTR [edi]
  42265c:	jno    0x4226aa
  42265e:	pop    ss
  42265f:	sbb    al,0xf2
  422661:	call   DWORD PTR [ebp-0x343c084d]
  422667:	ja     0x422634
  422669:	sub    DWORD PTR [ebp-0x284a817b],ebp
  42266f:	jge    0x4226c7
  422671:	xor    al,0xa9
  422673:	jb     0x42261b
  422675:	mov    esi,0x6df866a7
  42267a:	mov    eax,ds:0x42aa1550
  42267f:	sahf   
  422680:	cmp    esi,DWORD PTR [edx+esi*8+0x243f0d4c]
  422687:	pop    es
  422688:	xor    eax,0x262e60ef
  42268d:	pusha  
  42268e:	nop
  42268f:	inc    ecx
  422690:	pop    ecx
  422691:	adc    edx,DWORD PTR [eax-0x5]
  422694:	ds xor eax,0xbbaa15c7
  42269a:	mov    cl,0xb
  42269c:	fist   DWORD PTR [esi+0x31ae9d45]
  4226a2:	leave  
  4226a3:	ret    0xfbb2
  4226a6:	aad    0x24
  4226a8:	sbb    esp,DWORD PTR [edi-0x4a5fa5aa]
  4226ae:	jg     0x42267b
  4226b0:	or     DWORD PTR [edx+0x41],edx
  4226b3:	ret    0x7826
  4226b6:	cmp    BYTE PTR [esi+0x559060d7],cl
  4226bc:	sub    ebp,0x35422081
  4226c2:	xchg   ecx,eax
  4226c3:	scas   al,BYTE PTR es:[di]
  4226c5:	sahf   
  4226c6:	in     eax,dx
  4226c7:	je     0x42269e
  4226c9:	out    dx,al
  4226ca:	push   eax
  4226cb:	fisub  WORD PTR [esi]
  4226cd:	mov    bh,BYTE PTR [edx+0x45a5d679]
  4226d3:	add    DWORD PTR [edi+0x35],ecx
  4226d6:	pop    ebx
  4226d7:	out    dx,al
  4226d8:	bound  ecx,QWORD PTR ds:0xbab3e538
  4226de:	inc    ebp
  4226df:	js     0x42271d
  4226e1:	jne    0x4226cc
  4226e3:	not    BYTE PTR [eax+0x796c32fb]
  4226e9:	mov    esp,0xb54b9fa2
  4226ee:	cmp    ebp,DWORD PTR [edi+edx*8-0x79b07358]
  4226f5:	lods   eax,DWORD PTR ds:[esi]
  4226f6:	adc    al,0xea
  4226f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f9:	cs and eax,0x265803e3
  4226ff:	out    0xb,al
  422701:	scas   eax,DWORD PTR es:[edi]
  422702:	out    dx,al
  422703:	mov    ds:0x517d8953,al
  422708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422709:	pop    esp
  42270a:	(bad)  
  42270b:	mov    edi,0x6523cea7
  422710:	xchg   esi,ecx
  422712:	and    DWORD PTR [edi+0x47],eax
  422715:	xor    eax,0x550c29fe
  42271a:	cmp    eax,0xe5a9d4a5
  42271f:	cmp    ebx,DWORD PTR cs:[edi-0xd79e4d2]
  422726:	fwait
  422727:	nop
  422728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422729:	xor    ebp,DWORD PTR [edx+0x0]
  42272c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272d:	mov    ds:0x542a9895,al
  422732:	jge    0x4226cf
  422734:	mov    ch,dh
  422736:	and    DWORD PTR [edi+0x59],0x39
  42273a:	sub    esp,DWORD PTR [ebx+0x4675292d]
  422740:	sbb    eax,ebx
  422742:	adc    esp,DWORD PTR [ebx]
  422744:	cmp    edx,DWORD PTR [edx+0x30]
  422747:	or     ebp,eax
  422749:	lea    eax,[ebp+0x5c]
  42274c:	fisubr DWORD PTR [edx+0x6b]
  42274f:	push   ebp
  422750:	clc    
  422751:	xor    esi,edx
  422753:	lods   eax,DWORD PTR ds:[esi]
  422754:	jb     0x4226ed
  422756:	jae    0x42273f
  422758:	sub    di,WORD PTR [eax-0x63]
  42275c:	aaa    
  42275d:	bound  eax,QWORD PTR [ecx+0x78]
  422760:	imul   edx,eax,0xffffffd1
  422763:	xlat   BYTE PTR ds:[ebx]
  422764:	es cmc 
  422766:	and    eax,DWORD PTR [esp+esi*1+0x1]
  42276a:	std    
  42276b:	rol    DWORD PTR [ebp-0x4b],1
  42276e:	and    BYTE PTR [edx],bh
  422770:	test   eax,0x76f287a7
  422775:	jle    0x422738
  422777:	dec    esi
  422778:	mov    ebp,0xb9291ea1
  42277d:	mov    es,WORD PTR [ecx+0x63]
  422780:	shl    BYTE PTR [ebx+0x2186da26],1
  422786:	inc    edx
  422787:	mov    bl,cl
  422789:	inc    eax
  42278a:	xor    esp,DWORD PTR [esi+eiz*4]
  42278d:	cmp    DWORD PTR [ebp+0xb10c485],ebx
  422793:	inc    edi
  422794:	(bad)  
  422795:	sbb    DWORD PTR es:[ebp-0x3344b23a],esp
  42279c:	out    0xb2,al
  42279e:	mov    cl,0x50
  4227a0:	adc    DWORD PTR [ecx],ecx
  4227a2:	(bad)  
  4227a3:	sub    eax,0x1b6dc157
  4227a8:	cs cmc 
  4227aa:	fmul   QWORD PTR [ebp+0x266e95b9]
  4227b0:	jb     0x4227ff
  4227b2:	popa   
  4227b3:	lahf   
  4227b4:	mov    ?,esi
  4227b6:	inc    ebp
  4227b7:	(bad)  
  4227b9:	iret   
  4227ba:	push   eax
  4227bb:	inc    esp
  4227bc:	mov    ch,ch
  4227be:	or     edx,DWORD PTR [edx+esi*1+0x35]
  4227c2:	dec    esp
  4227c3:	mov    ch,0xaa
  4227c5:	cmp    BYTE PTR [esi-0x474b2bc8],cl
  4227cb:	inc    esi
  4227cc:	aad    0x79
  4227ce:	pusha  
  4227cf:	popa   
  4227d0:	inc    esi
  4227d1:	jge    0x422792
  4227d3:	or     BYTE PTR [eax+esi*4-0x470cf80c],ah
  4227da:	loop   0x42278b
  4227dc:	inc    esp
  4227dd:	xchg   esi,eax
  4227de:	cmp    DWORD PTR [edi],edi
  4227e0:	lahf   
  4227e1:	cmp    bh,BYTE PTR [esi]
  4227e3:	mov    eax,ds:0x6862f559
  4227e8:	xchg   edx,eax
  4227e9:	std    
  4227ea:	lds    ebx,FWORD PTR [ebp+0x70]
  4227ed:	repnz aas 
  4227ef:	lock jb 0x4227ee
  4227f2:	pop    edi
  4227f3:	int3   
  4227f4:	test   BYTE PTR [ebp+0x3a816957],dh
  4227fa:	mov    dh,0x4a
  4227fc:	mov    ds:0x4f0ac5e2,al
  422801:	push   ds
  422802:	pushf  
  422803:	jp     0x422823
  422805:	sahf   
  422806:	nop
  422807:	les    eax,FWORD PTR [esi-0x17dcb724]
  42280d:	pop    es
  42280e:	int3   
  42280f:	lds    esp,FWORD PTR [esi+0x1b433324]
  422815:	cwde   
  422816:	aam    0x74
  422818:	jbe    0x4227cf
  42281a:	sbb    ch,BYTE PTR [edi+0x47dbfdad]
  422820:	inc    edx
  422821:	fbstp  TBYTE PTR [edi+0x438fb220]
  422827:	stc    
  422828:	mov    al,dh
  42282a:	inc    ebp
  42282b:	inc    ebx
  42282c:	sbb    BYTE PTR [ebp-0x1f],cl
  42282f:	inc    esp
  422830:	xor    al,0xb5
  422832:	mov    ds:0x42193e47,al
  422837:	arpl   WORD PTR [ebp-0x30],bx
  42283a:	lds    edx,FWORD PTR [edi]
  42283c:	mov    ecx,0xaf6c905a
  422841:	inc    esi
  422842:	push   esp
  422843:	pop    eax
  422844:	rcr    DWORD PTR [eax],cl
  422846:	clc    
  422847:	and    dl,BYTE PTR [edx-0x22]
  42284a:	add    eax,0x1baa6ed
  42284f:	inc    edx
  422850:	cmp    bl,BYTE PTR [ebp-0x7b]
  422853:	out    dx,al
  422854:	ins    DWORD PTR es:[edi],dx
  422855:	mov    ch,0x9f
  422857:	mov    edi,0x34a53c78
  42285c:	ins    BYTE PTR es:[edi],dx
  42285d:	dec    esp
  42285e:	inc    eax
  42285f:	mov    ebx,0x9cec9d24
  422864:	loopne 0x422886
  422866:	arpl   WORD PTR [ecx],sp
  422868:	sar    DWORD PTR ds:0xf0e64b37,cl
  42286e:	adc    ah,BYTE PTR [ebx-0xa3f26d8]
  422874:	and    eax,0x8cdc5145
  422879:	int3   
  42287a:	imul   edi,DWORD PTR [bp+si+0x24ea],0xffffffa1
  422880:	xchg   esi,eax
  422881:	mov    ch,0x4c
  422883:	sub    al,0xfc
  422885:	setge  BYTE PTR [edi-0x4c]
  422889:	icebp  
  42288a:	(bad)
  42288d:	xor    eax,0xd61005c
  422892:	imul   DWORD PTR ds:0xad1d417e
  422898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422899:	fwait
  42289a:	out    0xa2,al
  42289c:	pop    ebx
  42289d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42289e:	adc    esp,0x57c3a367
  4228a4:	jmp    0x560a:0xe5ddffce
  4228ab:	sub    BYTE PTR [ebp+esi*4-0x18],al
  4228af:	xchg   ebx,eax
  4228b0:	leave  
  4228b1:	cmp    BYTE PTR [esi-0x18],ah
  4228b4:	fucomi st,st(5)
  4228b6:	inc    ebp
  4228b7:	mov    bh,0xf9
  4228b9:	mov    ebx,0xb85c733e
  4228be:	int3   
  4228bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228c0:	push   eax
  4228c1:	xchg   edi,eax
  4228c2:	sub    edi,edi
  4228c4:	in     eax,0x7c
  4228c6:	inc    ebp
  4228c7:	fmul   QWORD PTR [esi+0x75]
  4228ca:	out    0x40,al
  4228cc:	les    esi,FWORD PTR ds:0x4c0fa742
  4228d2:	pop    edx
  4228d3:	(bad)  
  4228d4:	(bad)  
  4228d5:	rcr    BYTE PTR [edi-0x75],cl
  4228d8:	push   ecx
  4228d9:	mov    ch,0xd4
  4228db:	pop    ss
  4228dc:	or     al,0xe2
  4228de:	jno    0x42295c
  4228e0:	jne    0x4228dc
  4228e2:	mov    dh,0x13
  4228e4:	gs mov edi,0x1507d885
  4228ea:	fiadd  DWORD PTR [edi+0x7516b57e]
  4228f0:	(bad)  
  4228f1:	push   ecx
  4228f2:	nop
  4228f3:	xor    al,0x5e
  4228f5:	sbb    BYTE PTR [esi+0x16],al
  4228f8:	push   es
  4228f9:	add    eax,0x9132a368
  4228fe:	ror    BYTE PTR [ebx-0x4cdb82e1],1
  422904:	fwait
  422905:	xor    eax,0x5e7eac54
  42290a:	xor    DWORD PTR [edx-0x373a3031],0x5c8db953
  422914:	(bad)  
  422915:	shl    edi,cl
  422917:	hlt    
  422918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422919:	or     BYTE PTR [ecx+0x21],bh
  42291c:	jne    0x422977
  42291e:	jge    0x422928
  422920:	mov    ds:0xae4f9bc3,eax
  422925:	jmp    0xe090:0x93c62745
  42292c:	and    al,ch
  42292e:	mov    bl,0x40
  422930:	mov    BYTE PTR [ebp+0x57],bl
  422933:	push   ds
  422934:	dec    ebp
  422935:	xor    eax,0xd696c0f9
  42293a:	lea    eax,[esp+ebp*2+0x39]
  42293e:	inc    esp
  42293f:	push   edi
  422940:	in     al,0x4f
  422942:	inc    ebp
  422943:	data16 and bh,BYTE PTR [esi+0x3114f615]
  42294a:	cld    
  42294b:	scas   eax,DWORD PTR es:[edi]
  42294c:	pop    edx
  42294d:	in     al,dx
  42294e:	xor    al,0x23
  422950:	daa    
  422951:	dec    ebx
  422952:	mov    esi,0xcda682
  422957:	pop    esp
  422958:	repz cmp edi,DWORD PTR [ebx]
  42295b:	push   ebp
  42295c:	xchg   esi,eax
  42295d:	mov    ch,0x6f
  42295f:	lods   al,BYTE PTR ds:[esi]
  422960:	ret    0x224f
  422963:	adc    DWORD PTR [eax-0x3a],0xffffffbc
  422967:	push   0x1b
  422969:	fadd   QWORD PTR [ebp-0x60]
  42296c:	clc    
  42296d:	data16 or bh,al
  422970:	enter  0x832d,0xe4
  422974:	push   esi
  422975:	sub    al,0x76
  422977:	call   0xb38033d0
  42297c:	push   esi
  42297d:	ss enter 0x2658,0x91
  422982:	test   al,0x37
  422984:	push   0x1f
  422986:	jae    0x422982
  422988:	imul   esi,DWORD PTR ds:0x38fbebb6,0xeb0793fc
  422992:	dec    ebx
  422993:	in     eax,dx
  422994:	es jmp 0xdb2189c7
  42299a:	and    eax,0xadbdbdea
  42299f:	cmp    al,0xb2
  4229a1:	sub    esp,DWORD PTR [ebp+0x20ab6c03]
  4229a7:	hlt    
  4229a8:	push   ds
  4229a9:	ins    BYTE PTR es:[edi],dx
  4229aa:	(bad)  
  4229ac:	xchg   BYTE PTR [esi-0x39837079],ah
  4229b2:	mov    esi,0x46fba53b
  4229b7:	add    dh,ah
  4229b9:	cmp    ah,BYTE PTR [eax-0x2c99af6c]
  4229bf:	les    esp,FWORD PTR [ebx]
  4229c1:	repnz adc BYTE PTR [ebx],ah
  4229c4:	leave  
  4229c5:	xlat   BYTE PTR ds:[ebx]
  4229c6:	pop    ebx
  4229c7:	add    eax,0x434db9b6
  4229cc:	and    ah,ah
  4229ce:	mov    bh,0xd7
  4229d0:	push   0xffffffec
  4229d2:	lds    ebx,FWORD PTR [ecx+eax*8+0x43]
  4229d6:	add    al,0xd5
  4229d8:	scas   al,BYTE PTR es:[edi]
  4229d9:	mov    ah,0xd3
  4229db:	call   0xfb95407c
  4229e0:	jp     0x4229b1
  4229e2:	mov    ds:0x3001a687,eax
  4229e7:	pop    ebx
  4229e8:	jecxz  0x42299d
  4229ea:	loope  0x4229a7
  4229ec:	(bad)  
  4229ed:	xor    ebp,ebp
  4229ef:	dec    ebx
  4229f0:	dec    eax
  4229f1:	sub    ebx,DWORD PTR [esi+eiz*1+0x22f0d3b3]
  4229f8:	xor    DWORD PTR es:[ecx-0x4c95d8c6],esp
  4229ff:	jno    0x422a17
  422a01:	jl     0x422a75
  422a03:	lahf   
  422a04:	xchg   edi,eax
  422a05:	jno    0x422a32
  422a07:	inc    ebx
  422a08:	or     dl,dl
  422a0a:	lds    esp,FWORD PTR [ebx-0x26c641c9]
  422a10:	sub    ecx,ebx
  422a12:	inc    esp
  422a13:	jbe    0x422a25
  422a15:	cs inc esi
  422a17:	jge    0x422a14
  422a19:	stc    
  422a1a:	pop    esi
  422a1b:	and    al,0xd5
  422a1d:	out    dx,eax
  422a1e:	inc    ebp
  422a1f:	cmp    BYTE PTR [ebp+0x7729647c],0xc6
  422a26:	adc    eax,0xcd4aa524
  422a2b:	and    DWORD PTR [edi+0x51d7ee11],ebp
  422a31:	xor    DWORD PTR [esi+0x13],eax
  422a34:	push   ecx
  422a35:	les    edx,FWORD PTR ss:[ebx+0x15]
  422a39:	repnz jmp 0xb9e6:0x67b56652
  422a41:	shr    BYTE PTR [edi+0x0],1
  422a44:	mov    edx,0x2468542a
  422a49:	(bad)  
  422a4a:	fiadd  WORD PTR [ecx]
  422a4c:	mov    WORD PTR [ecx+esi*2],gs
  422a4f:	sub    edi,ebx
  422a51:	jno    0x422aa9
  422a53:	iret   
  422a54:	xchg   esi,eax
  422a55:	push   cs
  422a56:	pop    ss
  422a57:	mov    ds:0x4aa7df6e,eax
  422a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5d:	sub    eax,0xe9c5f1b5
  422a62:	sub    dh,BYTE PTR [ecx+eiz*2]
  422a65:	fdivr  DWORD PTR [ecx]
  422a67:	xor    ebx,esi
  422a69:	js     0x422a37
  422a6b:	mov    eax,ds:0x7c7dedd7
  422a70:	mul    BYTE PTR [ecx]
  422a72:	(bad)  
  422a73:	in     al,0x99
  422a75:	outs   dx,BYTE PTR ds:[esi]
  422a76:	ret    0xe6c8
  422a79:	cdq    
  422a7a:	ja     0x422a2f
  422a7c:	jae    0x422a5f
  422a7e:	and    edi,DWORD PTR [ebx+0x60]
  422a81:	popf   
  422a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a83:	mov    ds:0xfafab913,al
  422a88:	popf   
  422a89:	add    eax,0xdab32f48
  422a8e:	lds    eax,FWORD PTR [eax+0x20]
  422a91:	mov    edx,0x4bc74017
  422a96:	jge    0x422a30
  422a98:	mov    bh,0x64
  422a9a:	cdq    
  422a9b:	and    al,BYTE PTR [eax-0x1]
  422a9e:	iret   
  422a9f:	sub    eax,0x3034a2c5
  422aa4:	mov    bl,0xd6
  422aa6:	lds    eax,FWORD PTR [ecx+0x34]
  422aa9:	jb     0x422a82
  422aab:	clc    
  422aac:	push   edi
  422aad:	stc    
  422aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aaf:	xchg   ch,al
  422ab1:	daa    
  422ab2:	shl    BYTE PTR [ecx-0x2b2df384],0xb0
  422ab9:	dec    cl
  422abb:	mov    esi,0x1e45d96b
  422ac0:	mov    esi,0xb21f2091
  422ac5:	add    esp,DWORD PTR [eax+0x7c]
  422ac8:	std    
  422ac9:	dec    ecx
  422aca:	ins    BYTE PTR es:[edi],dx
  422acb:	mov    eax,ds:0x5fde0250
  422ad0:	adc    eax,0xa538424b
  422ad5:	test   DWORD PTR [ecx+0x71],ecx
  422ad8:	cmp    al,0x81
  422ada:	xchg   esi,eax
  422adb:	mov    bl,0xc2
  422add:	dec    edi
  422ade:	push   0x2f92ff59
  422ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae4:	fsub   st,st(6)
  422ae6:	pop    es
  422ae7:	and    bh,BYTE PTR [edi]
  422ae9:	and    esp,DWORD PTR [esi+0x40]
  422aec:	lds    esp,FWORD PTR [eax]
  422aee:	push   ebp
  422aef:	sbb    esp,DWORD PTR [esi]
  422af1:	mov    ecx,0xef283eb4
  422af6:	aam    0x6
  422af8:	lock test eax,0xb40c77d7
  422afe:	(bad)  
  422aff:	mov    edi,DWORD PTR [ecx-0x78ed1e0a]
  422b05:	lahf   
  422b06:	mov    esi,0xd7da0944
  422b0b:	popa   
  422b0c:	sub    eax,0x935348ba
  422b11:	xor    eax,0x73d23b8
  422b16:	fcomp  QWORD PTR [eax-0x76]
  422b19:	fadd   st(5),st
  422b1b:	xchg   ebp,eax
  422b1c:	fldcw  WORD PTR [ecx]
  422b1e:	fstp   DWORD PTR [edi-0x38]
  422b21:	jne    0x422b6e
  422b23:	mov    ah,0x5
  422b25:	adc    ecx,DWORD PTR [ecx+eiz*1-0x74]
  422b29:	aad    0x6b
  422b2b:	inc    eax
  422b2c:	adc    BYTE PTR [esi],ch
  422b2e:	(bad)  
  422b2f:	into   
  422b30:	sti    
  422b31:	mov    dh,0x56
  422b33:	pop    edx
  422b34:	ins    DWORD PTR es:[edi],dx
  422b35:	loop   0x422af6
  422b37:	or     ch,ch
  422b39:	sbb    ch,BYTE PTR [eax-0x5f]
  422b3c:	sbb    BYTE PTR [esi-0x10ae7c23],dh
  422b42:	inc    ebp
  422b43:	scas   al,BYTE PTR es:[edi]
  422b44:	stos   BYTE PTR es:[edi],al
  422b45:	lahf   
  422b46:	inc    DWORD PTR [edi-0x6b27770c]
  422b4c:	mov    WORD PTR ss:[ecx],?
  422b4f:	adc    eax,0x21bda420
  422b54:	leave  
  422b55:	push   ecx
  422b56:	test   eax,0x4564fff8
  422b5b:	inc    ebx
  422b5c:	push   edx
  422b5d:	inc    esi
  422b5e:	pop    ds
  422b5f:	ds add ah,dl
  422b62:	mov    ch,0x6c
  422b64:	arpl   WORD PTR ds:0xfd3f94c1,si
  422b6a:	imul   ebp,DWORD PTR [eax-0x20e8334d],0xbb14b55f
  422b74:	test   al,0x7a
  422b76:	(bad)  
  422b77:	popa   
  422b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b79:	xor    eax,0xa010b5d4
  422b7e:	and    ecx,DWORD PTR [ebx+0x6549ccc0]
  422b84:	es xor eax,0x8e685335
  422b8a:	cmp    eax,0x3d3575b7
  422b8f:	fadd   QWORD PTR [esi+0x9]
  422b92:	sti    
  422b93:	dec    esi
  422b94:	cmp    DWORD PTR [edi-0xa848259],eax
  422b9a:	sar    BYTE PTR [edx],1
  422b9c:	adc    esp,edx
  422b9e:	adc    BYTE PTR [esi],bh
  422ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ba1:	lds    ebp,FWORD PTR [eax+eiz*2+0x21d1938b]
  422ba8:	in     eax,dx
  422ba9:	(bad)  
  422baa:	leave  
  422bab:	pop    ecx
  422bac:	fisubr WORD PTR ds:0xf6b75c6
  422bb2:	mov    ch,0x5f
  422bb4:	jne    0x422b65
  422bb6:	lahf   
  422bb7:	popa   
  422bb8:	dec    ebp
  422bb9:	adc    eax,0x95c1a308
  422bbe:	rcl    DWORD PTR [esi-0x79e8465a],cl
  422bc4:	in     eax,dx
  422bc5:	add    bl,BYTE PTR [eax-0x18]
  422bc8:	sar    ebx,1
  422bca:	jmp    0x422bfa
  422bcc:	daa    
  422bcd:	mov    ch,0x94
  422bcf:	jmp    0x2316:0x7ace4427
  422bd6:	inc    esi
  422bd7:	mov    BYTE PTR [esi-0x58],ch
  422bda:	mov    edi,0xbced379
  422bdf:	xchg   ecx,eax
  422be0:	mov    dl,0xd0
  422be2:	adc    esp,DWORD PTR [ebx+0x1a70cc5c]
  422be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422be9:	jl     0x422c52
  422beb:	inc    esi
  422bec:	iret   
  422bed:	xchg   DWORD PTR [ebx+0x503e42f4],esi
  422bf3:	xchg   DWORD PTR [esi+0x35],ebx
  422bf6:	pop    esi
  422bf7:	and    WORD PTR [bx+di],bx
  422bfb:	dec    edx
  422bfc:	test   BYTE PTR [esi],cl
  422bfe:	(bad)  
  422bff:	sbb    BYTE PTR [esi-0x554f615],al
  422c05:	adc    esp,0x60
  422c08:	adc    bh,ah
  422c0a:	xor    ah,BYTE PTR [ebx]
  422c0c:	out    dx,al
  422c0d:	jns    0x422c82
  422c0f:	mov    ch,BYTE PTR [esi-0x1d]
  422c12:	mov    esi,0xb523b035
  422c17:	jge    0x422bf3
  422c19:	retf   
  422c1a:	or     al,0x73
  422c1c:	sub    dh,BYTE PTR ds:0x7e54db96
  422c22:	inc    ebp
  422c23:	repnz repnz mov bh,0xbe
  422c27:	mov    bh,0xcc
  422c29:	push   esp
  422c2a:	mov    edx,0x27f52521
  422c2f:	inc    ebx
  422c30:	cmp    esi,DWORD PTR [ebp-0x5eb8e0c5]
  422c36:	push   0xffffff9c
  422c38:	pop    ss
  422c39:	vaddsubpd ymm3,ymm7,YMMWORD PTR [esp+eax*2]
  422c3e:	push   ebx
  422c3f:	in     eax,dx
  422c40:	xor    cl,BYTE PTR [eax-0xb]
  422c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c44:	jb     0x422c7f
  422c46:	sbb    edi,eax
  422c48:	enter  0x1418,0xa3
  422c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c4d:	push   0x31a68aa5
  422c52:	dec    edi
  422c53:	ins    BYTE PTR es:[edi],dx
  422c54:	push   ecx
  422c55:	jae    0x422c57
  422c57:	add    BYTE PTR [ebp-0x75],dl
  422c5a:	in     al,dx
  422c5b:	sub    esp,0x50
  422c5e:	push   0x15744a00
  422c63:	push   0x51
  422c65:	push   0xfdceb800
  422c6a:	push   0x4f921d00
  422c6f:	call   0x42604a
  422c74:	add    esp,0x10
  422c77:	push   0xd155fe00
  422c7c:	push   0xc1267d00
  422c81:	call   0x4256cb
  422c86:	add    esp,0x8
  422c89:	push   ebx
  422c8a:	mov    ecx,eax
  422c8c:	push   0xffffff9c
  422c8e:	call   0x425afe
  422c93:	add    esp,0x4
  422c96:	push   esi
  422c97:	mov    ebx,eax
  422c99:	push   0xffffffa7
  422c9b:	push   0xffffffec
  422c9d:	push   0x795ada00
  422ca2:	call   0x4259e8
  422ca7:	add    esp,0xc
  422caa:	push   0xfffffffa
  422cac:	push   0x3d624300
  422cb1:	push   0x78
  422cb3:	call   0x425ed2
  422cb8:	add    esp,0xc
  422cbb:	mov    edx,0xa
  422cc0:	mov    DWORD PTR [ebp-0x44],eax
  422cc3:	sub    ebx,edx
  422cc5:	and    ebx,edx
  422cc7:	sub    ebx,edx
  422cc9:	or     ebx,eax
  422ccb:	add    ebx,eax
  422ccd:	push   0xa17dce00
  422cd2:	push   0xfddb6c00
  422cd7:	push   0x65132f00
  422cdc:	call   0x425ed2
  422ce1:	add    esp,0xc
  422ce4:	push   0xffffffeb
  422ce6:	push   0xffffffea
  422ce8:	call   0x42604a
  422ced:	add    esp,0x8
  422cf0:	push   0x7b
  422cf2:	push   0x14
  422cf4:	push   0xffffffdc
  422cf6:	push   0xd157f900
  422cfb:	push   0x25aff200
  422d00:	call   0x42604a
  422d05:	add    esp,0x14
  422d08:	or     DWORD PTR [ebp-0x44],ebx
  422d0b:	push   edi
  422d0c:	push   0x20
  422d0e:	push   0xffffffc3
  422d10:	push   0x152bc000
  422d15:	call   0x42604a
  422d1a:	add    esp,0xc
  422d1d:	push   0xfd7fb600
  422d22:	push   0x7f
  422d24:	push   0xffb4cd00
  422d29:	call   0x4256cb
  422d2e:	add    esp,0xc
  422d31:	mov    edi,DWORD PTR ds:0x44f06c
  422d37:	push   0xffffffc4
  422d39:	push   0x37
  422d3b:	push   0x8d507900
  422d40:	push   0x2e
  422d42:	call   0x4256cb
  422d47:	add    esp,0x10
  422d4a:	xor    eax,eax
  422d4c:	sub    eax,edi
  422d4e:	push   0xe5ceca00
  422d53:	push   0x59
  422d55:	call   0x42604a
  422d5a:	add    esp,0x8
  422d5d:	mov    edi,DWORD PTR [ebp-0x44]
  422d60:	push   0xfd961000
  422d65:	push   0x8fe35900
  422d6a:	push   0x1fb54700
  422d6f:	call   0x425ed2
  422d74:	add    esp,0xc
  422d77:	push   0x25df9600
  422d7c:	call   0x42604a
  422d81:	add    esp,0x4
  422d84:	cmp    eax,0xfffffffa
  422d87:	je     0x422d9a
  422d89:	push   0x7e
  422d8b:	push   0x58
  422d8d:	push   0x6a
  422d8f:	call   0x4259e8
  422d94:	add    esp,0xc
  422d97:	add    DWORD PTR [ebp-0x44],edi
  422d9a:	call   0x4259e8
  422d9f:	push   0xfc6f000
  422da4:	call   0x425afe
  422da9:	add    esp,0x4
  422dac:	push   0xfffffff7
  422dae:	push   0x1fe94400
  422db3:	push   0x41
  422db5:	push   0xbf8d3700
  422dba:	push   0x103d900
  422dbf:	call   0x425ed2
  422dc4:	add    esp,0x14
  422dc7:	xor    eax,eax
  422dc9:	sub    DWORD PTR [ebp-0x44],eax
  422dcc:	push   0xfffffff2
  422dce:	push   0xffffffee
  422dd0:	push   0x3119e000
  422dd5:	call   0x42604a
  422dda:	add    esp,0xc
  422ddd:	push   0xffffffaa
  422ddf:	push   0xffffffd3
  422de1:	push   0x3fecf800
  422de6:	call   0x4259e8
  422deb:	add    esp,0xc
  422dee:	push   0x65bd6500
  422df3:	push   0x12
  422df5:	push   0x41113b00
  422dfa:	push   0xffffffa4
  422dfc:	push   0xcd4bc900
  422e01:	call   0x425ed2
  422e06:	add    esp,0x14
  422e09:	push   0x553f0400
  422e0e:	push   0x89789700
  422e13:	push   0xa96e8900
  422e18:	push   0xffffff83
  422e1a:	push   0x2c
  422e1c:	call   0x4256cb
  422e21:	add    esp,0x14
  422e24:	call   0x4259e8
  422e29:	xor    edx,edx
  422e2b:	call   0x42604a
  422e30:	push   0x2b
  422e32:	push   0x34
  422e34:	call   0x42604a
  422e39:	add    esp,0x8
  422e3c:	add    DWORD PTR [ebp-0x44],eax
  422e3f:	call   0x425ed2
  422e44:	call   0x425ed2
  422e49:	mov    ebx,0xae
  422e4e:	sub    ebx,eax
  422e50:	cmp    edi,0x99040805
  422e56:	jne    0x422efb
  422e5c:	mov    esi,DWORD PTR [ebp-0x44]
  422e5f:	push   0xfdfa2a00
  422e64:	push   0x60
  422e66:	push   0xffffff95
  422e68:	push   0x817fe000
  422e6d:	push   0x51
  422e6f:	call   0x4259e8
  422e74:	add    esp,0x14
  422e77:	push   0x8f92b600
  422e7c:	push   0xad291100
  422e81:	push   0xffffffa1
  422e83:	push   0x64
  422e85:	push   0xffffffc3
  422e87:	call   0x42604a
  422e8c:	add    esp,0x14
  422e8f:	push   0xaf82c000
  422e94:	call   0x425ed2
  422e99:	add    esp,0x4
  422e9c:	mov    eax,DWORD PTR [ebp-0x44]
  422e9f:	push   0xffffff98
  422ea1:	push   0xd1577a00
  422ea6:	push   0xa5711b00
  422eab:	push   0x550bb100
  422eb0:	push   0x49
  422eb2:	call   0x425afe
  422eb7:	add    esp,0x14
  422eba:	push   0xdde10100
  422ebf:	push   0x3f
  422ec1:	call   0x4256cb
  422ec6:	add    esp,0x8
  422ec9:	add    DWORD PTR [ebp-0x44],esi
  422ecc:	push   0x59
  422ece:	push   0x7fabaf00
  422ed3:	push   0x3d1d6e00
  422ed8:	push   0x6fd90d00
  422edd:	call   0x4259e8
  422ee2:	add    esp,0x10
  422ee5:	push   0xffffffe7
  422ee7:	push   0xffffffc3
  422ee9:	push   0xffffff81
  422eeb:	push   0xd5331100
  422ef0:	call   0x42604a
  422ef5:	add    esp,0x10
  422ef8:	add    DWORD PTR [ebp-0x44],ebx
  422efb:	push   0x99126b00
  422f00:	call   0x42604a
  422f05:	add    esp,0x4
  422f08:	push   0xbd3a5700
  422f0d:	push   0x8fe8dd00
  422f12:	call   0x4256cb
  422f17:	add    esp,0x8
  422f1a:	mov    edi,DWORD PTR [ebp-0x44]
  422f1d:	push   0x12
  422f1f:	push   0x76
  422f21:	call   0x4256cb
  422f26:	add    esp,0x8
  422f29:	mov    eax,DWORD PTR ds:0x44f06c
  422f2f:	push   0xffffffb5
  422f31:	call   0x425afe
  422f36:	add    esp,0x4
  422f39:	add    edi,esi
  422f3b:	call   0x4259e8
  422f40:	sub    edi,ebx
  422f42:	add    DWORD PTR [ebp-0x44],edi
  422f45:	xor    edx,edx
  422f47:	push   0x131de00
  422f4c:	push   0x8d06ad00
  422f51:	push   0xffffffff
  422f53:	push   0xbfa12800
  422f58:	push   0x916f9100
  422f5d:	call   0x425ed2
  422f62:	add    esp,0x14
  422f65:	push   0xffffffa6
  422f67:	push   0x6d
  422f69:	push   0x294c0500
  422f6e:	push   0x2e
  422f70:	push   0xffffff93
  422f72:	call   0x4256cb
  422f77:	add    esp,0x14
  422f7a:	mov    edi,DWORD PTR [ebp-0x44]
  422f7d:	mov    edx,DWORD PTR [ebp-0x44]
  422f80:	add    edx,esi
  422f82:	push   0x5f887f00
  422f87:	call   0x4256cb
  422f8c:	add    esp,0x4
  422f8f:	call   0x4256cb
  422f94:	push   0x4e
  422f96:	push   0x24
  422f98:	push   0xc5522600
  422f9d:	push   0xffffffcd
  422f9f:	call   0x425afe
  422fa4:	add    esp,0x10
  422fa7:	push   0x35153e00
  422fac:	push   0x65a1d500
  422fb1:	push   0xb
  422fb3:	call   0x425ed2
  422fb8:	add    esp,0xc
  422fbb:	call   0x4259e8
  422fc0:	push   0x1d4c9400
  422fc5:	push   0x66
  422fc7:	push   0x810ba400
  422fcc:	push   0xffffffd7
  422fce:	push   0xcfbf5700
  422fd3:	call   0x425ed2
  422fd8:	add    esp,0x14
  422fdb:	push   0x6d2ff400
  422fe0:	push   0xf9435900
  422fe5:	call   0x425ed2
  422fea:	add    esp,0x8
  422fed:	push   0xffffffb8
  422fef:	push   0x75
  422ff1:	push   0xb5013100
  422ff6:	push   0xffffffd8
  422ff8:	call   0x4259e8
  422ffd:	add    esp,0x10
  423000:	push   0xff41000
  423005:	call   0x4256cb
  42300a:	add    esp,0x4
  42300d:	cmp    edi,ebx
  42300f:	jne    0x4230ec
  423015:	cmp    edi,ebx
  423017:	jne    0x4230ec
  42301d:	sub    DWORD PTR [ebp-0x44],esi
  423020:	push   0xbf924f00
  423025:	call   0x4256cb
  42302a:	add    esp,0x4
  42302d:	mov    ebx,0xa2d0
  423032:	add    DWORD PTR [ebp-0x44],eax
  423035:	cmp    edi,0x29
  423038:	je     0x4230ec
  42303e:	call   0x42604a
  423043:	push   0x353f7b00
  423048:	call   0x4259e8
  42304d:	add    esp,0x4
  423050:	push   0x551a0400
  423055:	push   0x5d736000
  42305a:	push   0x27
  42305c:	push   0xfdcc6e00
  423061:	call   0x425afe
  423066:	add    esp,0x10
  423069:	push   0x49050d00
  42306e:	call   0x425ed2
  423073:	add    esp,0x4
  423076:	push   0xcfa13300
  42307b:	push   0xffffffe9
  42307d:	call   0x425ed2
  423082:	add    esp,0x8
  423085:	push   0x3b
  423087:	push   0x1f
  423089:	push   0x4d
  42308b:	call   0x425afe
  423090:	add    esp,0xc
  423093:	mov    eax,DWORD PTR [ebp-0x44]
  423096:	mov    esi,0xa7
  42309b:	call   0x4259e8
  4230a0:	and    ebx,esi
  4230a2:	or     edi,esi
  4230a4:	push   0x25d4b500
  4230a9:	call   0x425ed2
  4230ae:	add    esp,0x4
  4230b1:	push   0x4faa7600
  4230b6:	push   0x34
  4230b8:	push   0xdd8f1600
  4230bd:	push   0xffffffc4
  4230bf:	push   0x31
  4230c1:	call   0x425ed2
  4230c6:	add    esp,0x14
  4230c9:	or     ebx,edi
  4230cb:	push   0xc
  4230cd:	push   0x7f
  4230cf:	push   0x9ff92300
  4230d4:	call   0x425ed2
  4230d9:	add    esp,0xc
  4230dc:	test   ebx,0xc8fa
  4230e2:	je     0x4230ec
  4230e4:	call   0x425afe
  4230e9:	xor    DWORD PTR [ebp-0x44],ebx
  4230ec:	push   0x3d
  4230ee:	push   0xfd9f9900
  4230f3:	push   0x66
  4230f5:	call   0x425ed2
  4230fa:	add    esp,0xc
  4230fd:	push   0xffffff85
  4230ff:	push   0xef8fb300
  423104:	push   0x57
  423106:	push   0xfddd5c00
  42310b:	call   0x4256cb
  423110:	add    esp,0x10
  423113:	mov    esi,DWORD PTR ds:0x44f060
  423119:	and    esi,eax
  42311b:	cmp    esi,DWORD PTR ds:0x44f060
  423121:	jne    0x4232ce
  423127:	cmp    ebx,DWORD PTR [ebp-0x40]
  42312a:	je     0x4232ce
  423130:	add    esi,edi
  423132:	push   0x116a8500
  423137:	push   0xfffffff6
  423139:	push   0xdd832d00
  42313e:	push   0xffffffd5
  423140:	call   0x4259e8
  423145:	add    esp,0x10
  423148:	mov    edx,0x78ef
  42314d:	call   0x4256cb
  423152:	call   0x42604a
  423157:	mov    edi,DWORD PTR [ebp-0x44]
  42315a:	add    DWORD PTR [ebp-0x44],ebx
  42315d:	sub    DWORD PTR [ebp-0x44],esi
  423160:	push   0x7a
  423162:	call   0x4256cb
  423167:	add    esp,0x4
  42316a:	push   0xffffff98
  42316c:	call   0x425ed2
  423171:	add    esp,0x4
  423174:	push   0x6ff53700
  423179:	push   0x2f932d00
  42317e:	call   0x425afe
  423183:	add    esp,0x8
  423186:	push   0x31088f00
  42318b:	push   0xffffff82
  42318d:	push   0xffffffb6
  42318f:	push   0xffffffc4
  423191:	call   0x4256cb
  423196:	add    esp,0x10
  423199:	push   0x2a
  42319b:	call   0x4256cb
  4231a0:	add    esp,0x4
  4231a3:	call   0x425afe
  4231a8:	push   0xd17c8600
  4231ad:	push   0x5d391d00
  4231b2:	call   0x4259e8
  4231b7:	add    esp,0x8
  4231ba:	push   0xffb1bd00
  4231bf:	call   0x4259e8
  4231c4:	add    esp,0x4
  4231c7:	push   0x57
  4231c9:	push   0x65efda00
  4231ce:	push   0x79
  4231d0:	call   0x4256cb
  4231d5:	add    esp,0xc
  4231d8:	push   0x3d
  4231da:	push   0x9d169700
  4231df:	call   0x425ed2
  4231e4:	add    esp,0x8
  4231e7:	push   0xe5904100
  4231ec:	push   0x7f821100
  4231f1:	call   0x42604a
  4231f6:	add    esp,0x8
  4231f9:	sub    edi,eax
  4231fb:	cmp    edi,0x7f
  4231fe:	jne    0x4232ce
  423204:	push   0xa59bd600
  423209:	push   0x71477f00
  42320e:	call   0x4259e8
  423213:	add    esp,0x8
  423216:	push   0x29
  423218:	push   0x5b
  42321a:	push   0xa975bd00
  42321f:	push   0x7fc2fd00
  423224:	push   0x852d6900
  423229:	call   0x425afe
  42322e:	add    esp,0x14
  423231:	push   0xffffff9e
  423233:	push   0x1b
  423235:	call   0x42604a
  42323a:	add    esp,0x8
  42323d:	push   0x77
  42323f:	push   0x25727300
  423244:	call   0x425afe
  423249:	add    esp,0x8
  42324c:	mov    esi,DWORD PTR [ebp-0x44]
  42324f:	push   0xfffffff7
  423251:	push   0xe58e7500
  423256:	push   0x8fefa800
  42325b:	push   0x35088500
  423260:	push   0xe93b0400
  423265:	call   0x4256cb
  42326a:	add    esp,0x14
  42326d:	push   0xad68c600
  423272:	push   0x3122a000
  423277:	call   0x42604a
  42327c:	add    esp,0x8
  42327f:	add    DWORD PTR [ebp-0x44],esi
  423282:	add    edi,ebx
  423284:	push   0xffffff96
  423286:	push   0xffffffa8
  423288:	push   0xe5d1b400
  42328d:	call   0x425afe
  423292:	add    esp,0xc
  423295:	cmp    edi,0xe420
  42329b:	je     0x4232ce
  42329d:	cmp    edi,DWORD PTR ds:0x44f060
  4232a3:	je     0x4232ce
  4232a5:	mov    eax,DWORD PTR [ebp-0x44]
  4232a8:	push   0xcfacdb00
  4232ad:	push   0x5faa1000
  4232b2:	push   0xffffffb8
  4232b4:	call   0x425ed2
  4232b9:	add    esp,0xc
  4232bc:	call   0x42604a
  4232c1:	push   0xfffffff3
  4232c3:	call   0x42604a
  4232c8:	add    esp,0x4
  4232cb:	mov    DWORD PTR [ebp-0x44],edi
  4232ce:	push   0xa593d300
  4232d3:	push   0xf964b700
  4232d8:	push   0xffffffea
  4232da:	call   0x4259e8
  4232df:	add    esp,0xc
  4232e2:	push   0xffffff86
  4232e4:	call   0x425ed2
  4232e9:	add    esp,0x4
  4232ec:	call   0x425ed2
  4232f1:	call   0x425afe
  4232f6:	push   0x7a
  4232f8:	push   0x0
  4232fa:	call   DWORD PTR ds:0x44ee68
  423300:	sub    DWORD PTR [ebp-0x44],ebx
  423303:	cmp    eax,0xfffffff7
  423306:	jne    0x423789
  42330c:	push   0x5ded1c00
  423311:	push   0xffffffae
  423313:	call   0x4256cb
  423318:	add    esp,0x8
  42331b:	mov    edi,0x79
  423320:	push   0x7fccf100
  423325:	push   0x42
  423327:	push   0x5dd31400
  42332c:	push   0x2e
  42332e:	push   0xffffffa0
  423330:	call   0x4256cb
  423335:	add    esp,0x14
  423338:	add    eax,edi
  42333a:	mov    esi,DWORD PTR [ebp-0x44]
  42333d:	cmp    eax,0x3560
  423342:	jne    0x4233ba
  423344:	push   0x25857000
  423349:	push   0x710ed200
  42334e:	push   0x3
  423350:	push   0xffffffa1
  423352:	push   0xdd806a00
  423357:	call   0x42604a
  42335c:	add    esp,0x14
  42335f:	push   0xfdacc300
  423364:	push   0xffffffe3
  423366:	push   0x25a2dd00
  42336b:	call   0x42604a
  423370:	add    esp,0xc
  423373:	cmp    esi,ebx
  423375:	je     0x4233ba
  423377:	mov    eax,ebx
  423379:	push   0xc57fc800
  42337e:	push   0xb975b200
  423383:	push   0x30
  423385:	call   0x425afe
  42338a:	add    esp,0xc
  42338d:	push   0xad6af100
  423392:	call   0x425ed2
  423397:	add    esp,0x4
  42339a:	mov    eax,DWORD PTR [ebp-0x44]
  42339d:	push   0x19
  42339f:	push   0x39465200
  4233a4:	push   0xffffffcd
  4233a6:	call   0x425ed2
  4233ab:	add    esp,0xc
  4233ae:	call   0x425ed2
  4233b3:	cmp    esi,ebx
  4233b5:	je     0x4233ba
  4233b7:	or     DWORD PTR [ebp-0x44],esi
  4233ba:	add    edi,edi
  4233bc:	or     DWORD PTR [ebp-0x44],edi
  4233bf:	mov    esi,DWORD PTR [ebp-0x44]
  4233c2:	push   0xffffffae
  4233c4:	push   0x65
  4233c6:	call   0x425afe
  4233cb:	add    esp,0x8
  4233ce:	call   0x42604a
  4233d3:	push   0x16
  4233d5:	push   0x1c
  4233d7:	push   0x8fac4200
  4233dc:	push   0xffffffb9
  4233de:	call   0x4259e8
  4233e3:	add    esp,0x10
  4233e6:	push   0xf92c9100
  4233eb:	push   0x25a38c00
  4233f0:	push   0xe5c29600
  4233f5:	push   0x6fb41100
  4233fa:	call   0x425ed2
  4233ff:	add    esp,0x10
  423402:	cmp    esi,0xffffffd2
  423405:	je     0x42341f
  423407:	push   0x27
  423409:	push   0xe
  42340b:	push   0x67
  42340d:	push   0xffffffe5
  42340f:	push   0x1fff2800
  423414:	call   0x425afe
  423419:	add    esp,0x14
  42341c:	sub    DWORD PTR [ebp-0x44],esi
  42341f:	push   0x11
  423421:	push   0x49
  423423:	push   0x1fd6ee00
  423428:	push   0x7d01ad00
  42342d:	push   0xffc1fc00
  423432:	call   0x425afe
  423437:	add    esp,0x14
  42343a:	mov    eax,DWORD PTR ds:0x44f06c
  423440:	mov    edx,esi
  423442:	add    edx,esi
  423444:	and    edx,edi
  423446:	mov    ebx,DWORD PTR [ebp-0x44]
  423449:	cmp    ebx,0xdeed
  42344f:	jne    0x423522
  423455:	mov    ecx,DWORD PTR [ebp-0x44]
  423458:	mov    esi,DWORD PTR [ebp-0x44]
  42345b:	sub    edx,ebx
  42345d:	cmp    esi,DWORD PTR ds:0x44f06c
  423463:	je     0x423522
  423469:	add    DWORD PTR [ebp-0x44],ebx
  42346c:	or     DWORD PTR [ebp-0x44],ebx
  42346f:	add    DWORD PTR [ebp-0x44],eax
  423472:	sub    DWORD PTR [ebp-0x44],ecx
  423475:	sub    DWORD PTR [ebp-0x44],esi
  423478:	or     edx,ebx
  42347a:	sub    edx,eax
  42347c:	and    edx,ecx
  42347e:	mov    ebx,0x95
  423483:	and    DWORD PTR [ebp-0x44],edx
  423486:	sub    ebx,edx
  423488:	mov    ecx,0x9c3d
  42348d:	sub    DWORD PTR [ebp-0x44],edx
  423490:	and    ecx,esi
  423492:	and    DWORD PTR [ebp-0x44],ebx
  423495:	or     ecx,edx
  423497:	cmp    ecx,0x6f
  42349a:	jne    0x423522
  4234a0:	sub    ecx,ebx
  4234a2:	xor    ebx,ebx
  4234a4:	mov    esi,ebx
  4234a6:	add    ecx,eax
  4234a8:	mov    DWORD PTR [ebp-0x44],esi
  4234ab:	sub    ecx,ebx
  4234ad:	add    ecx,ebx
  4234af:	sub    ecx,edx
  4234b1:	test   ecx,0x57
  4234b7:	jne    0x423522
  4234b9:	mov    ebx,DWORD PTR [ebp-0x44]
  4234bc:	and    DWORD PTR [ebp-0x44],ebx
  4234bf:	mov    ebx,DWORD PTR [ebp-0x44]
  4234c2:	cmp    ebx,DWORD PTR [ebp-0x50]
  4234c5:	je     0x423522
  4234c7:	test   ecx,0xe7
  4234cd:	je     0x423522
  4234cf:	cmp    ebx,0xffffffbd
  4234d2:	je     0x423522
  4234d4:	add    DWORD PTR [ebp-0x44],ebx
  4234d7:	mov    esi,DWORD PTR [ebp-0x44]
  4234da:	xor    DWORD PTR [ebp-0x44],ecx
  4234dd:	mov    ecx,DWORD PTR [ebp-0x44]
  4234e0:	cmp    ecx,edx
  4234e2:	je     0x423522
  4234e4:	mov    DWORD PTR [ebp-0x44],esi
  4234e7:	test   ecx,0x77
  4234ed:	jne    0x423522
  4234ef:	mov    esi,DWORD PTR ds:0x44f060
  4234f5:	mov    ebx,edx
  4234f7:	cmp    ecx,edi
  4234f9:	jne    0x423522
  4234fb:	mov    edx,0x5b
  423500:	sub    edx,ecx
  423502:	and    esi,eax
  423504:	and    edx,ebx
  423506:	sub    DWORD PTR [ebp-0x44],esi
  423509:	sub    DWORD PTR [ebp-0x44],esi
  42350c:	cmp    edx,DWORD PTR ds:0x44f060
  423512:	jne    0x423522
  423514:	cmp    edx,edi
  423516:	jne    0x423522
  423518:	and    DWORD PTR [ebp-0x44],edi
  42351b:	and    edx,ebx
  42351d:	or     edx,eax
  42351f:	add    DWORD PTR [ebp-0x44],edx
  423522:	mov    edx,DWORD PTR [ebp-0x44]
  423525:	mov    ebx,0xca
  42352a:	add    DWORD PTR [ebp-0x44],edx
  42352d:	test   edx,0x8b
  423533:	je     0x423570
  423535:	mov    edx,ebx
  423537:	and    edx,edi
  423539:	sub    ecx,eax
  42353b:	cmp    ecx,0xffffffa2
  42353e:	je     0x423570
  423540:	mov    esi,0x30
  423545:	cmp    ecx,DWORD PTR [ebp-0x50]
  423548:	je     0x423570
  42354a:	mov    ebx,edx
  42354c:	and    ecx,edi
  42354e:	xor    edx,edx
  423550:	sub    DWORD PTR [ebp-0x44],ecx
  423553:	xor    DWORD PTR [ebp-0x44],edx
  423556:	xor    DWORD PTR [ebp-0x44],eax
  423559:	and    DWORD PTR [ebp-0x44],ecx
  42355c:	sub    ecx,ebx
  42355e:	cmp    ecx,edx
  423560:	jne    0x423570
  423562:	mov    DWORD PTR [ebp-0x44],ecx
  423565:	add    DWORD PTR [ebp-0x44],eax
  423568:	cmp    ecx,0x69
  42356b:	jne    0x423570
  42356d:	mov    DWORD PTR [ebp-0x24],esi
  423570:	mov    DWORD PTR [ebp-0x8],edi
  423573:	xor    edx,edx
  423575:	add    DWORD PTR [ebp-0x44],edx
  423578:	sub    ecx,edx
  42357a:	sub    ecx,esi
  42357c:	mov    esi,0x4d
  423581:	add    ecx,esi
  423583:	cmp    ecx,0x2122810c
  423589:	jne    0x4235fc
  42358b:	mov    edx,DWORD PTR [ebp-0x44]
  42358e:	cmp    ecx,DWORD PTR [ebp-0x24]
  423591:	jne    0x4235fc
  423593:	cmp    edx,DWORD PTR [ebp-0x20]
  423596:	jne    0x4235fc
  423598:	mov    esi,0x255d0848
  42359d:	mov    esi,DWORD PTR [ebp-0x44]
  4235a0:	and    DWORD PTR [ebp-0x44],edx
  4235a3:	add    DWORD PTR [ebp-0x44],esi
  4235a6:	add    ecx,ecx
  4235a8:	add    ecx,ebx
  4235aa:	sub    ecx,ebx
  4235ac:	sub    DWORD PTR [ebp-0x44],edx
  4235af:	and    ecx,edi
  4235b1:	cmp    ecx,DWORD PTR [ebp-0xc]
  4235b4:	je     0x4235fc
  4235b6:	cmp    ecx,0x49
  4235b9:	jne    0x4235fc
  4235bb:	cmp    ecx,DWORD PTR ds:0x44f06c
  4235c1:	jne    0x4235fc
  4235c3:	mov    edx,DWORD PTR [ebp-0x44]
  4235c6:	mov    esi,0x7d
  4235cb:	xor    DWORD PTR [ebp-0x44],ecx
  4235ce:	cmp    ecx,0xe9
  4235d4:	je     0x4235fc
  4235d6:	add    DWORD PTR [ebp-0x44],esi
  4235d9:	cmp    edx,DWORD PTR [ebp-0x20]
  4235dc:	je     0x4235fc
  4235de:	mov    ecx,0x75
  4235e3:	add    DWORD PTR [ebp-0x44],edx
  4235e6:	or     ecx,ebx
  4235e8:	mov    ebx,DWORD PTR [ebp-0x44]
  4235eb:	add    ebx,edx
  4235ed:	sub    ecx,esi
  4235ef:	sub    ebx,esi
  4235f1:	and    ebx,esi
  4235f3:	sub    DWORD PTR [ebp-0x44],ebx
  4235f6:	and    DWORD PTR [ebp-0x44],edx
  4235f9:	add    DWORD PTR [ebp-0x44],ecx
  4235fc:	sub    DWORD PTR [ebp-0x8],edi
  4235ff:	add    edx,ecx
  423601:	sub    DWORD PTR [ebp-0x44],edx
  423604:	mov    ecx,eax
  423606:	mov    esi,edi
  423608:	sub    esi,edx
  42360a:	cmp    esi,DWORD PTR [ebp-0x4c]
  42360d:	jne    0x423685
  42360f:	sub    ecx,edi
  423611:	add    ecx,esi
  423613:	mov    ebx,0x3f2e
  423618:	cmp    ecx,0x977b
  42361e:	je     0x423685
  423620:	sub    DWORD PTR [ebp-0x44],ecx
  423623:	or     ebx,ecx
  423625:	mov    edx,0x1f
  42362a:	mov    esi,0xb135
  42362f:	cmp    ebx,DWORD PTR ds:0x44f060
  423635:	jne    0x423685
  423637:	mov    ecx,DWORD PTR ds:0x44f05c
  42363d:	or     ebx,edi
  42363f:	mov    DWORD PTR [ebp-0x44],edx
  423642:	cmp    ebx,0x4d
  423645:	je     0x423685
  423647:	sub    ecx,esi
  423649:	mov    edx,DWORD PTR ds:0x44f05c
  42364f:	sub    DWORD PTR [ebp-0x44],ecx
  423652:	sub    DWORD PTR [ebp-0x44],eax
  423655:	sub    edx,ebx
  423657:	and    edx,eax
  423659:	mov    esi,DWORD PTR [ebp-0x44]
  42365c:	cmp    edx,0x22
  42365f:	je     0x423685
  423661:	mov    ecx,0x984
  423666:	mov    DWORD PTR [ebp-0x44],esi
  423669:	add    ecx,esi
  42366b:	add    DWORD PTR [ebp-0x44],ecx
  42366e:	add    DWORD PTR [ebp-0x44],esi
  423671:	sub    edx,eax
  423673:	cmp    edx,DWORD PTR [ebp-0x38]
  423676:	jne    0x423685
  423678:	mov    ecx,esi
  42367a:	mov    ebx,esi
  42367c:	or     DWORD PTR [ebp-0x44],edx
  42367f:	sub    DWORD PTR [ebp-0x44],ecx
  423682:	mov    DWORD PTR [ebp-0x44],ebx
  423685:	add    eax,edi
  423687:	add    DWORD PTR [ebp-0x44],eax
  42368a:	add    DWORD PTR [ebp-0x44],ebx
  42368d:	add    eax,edi
  42368f:	sub    DWORD PTR [ebp-0x44],eax
  423692:	mov    ebx,DWORD PTR [ebp-0x44]
  423695:	mov    ecx,DWORD PTR [ebp-0x44]
  423698:	mov    DWORD PTR [ebp-0x44],ebx
  42369b:	and    ecx,esi
  42369d:	cmp    ecx,DWORD PTR [ebp-0x44]
  4236a0:	je     0x423711
  4236a2:	mov    edx,DWORD PTR [ebp-0x44]
  4236a5:	add    DWORD PTR [ebp-0x44],edx
  4236a8:	mov    ebx,0x6f
  4236ad:	sub    ecx,edx
  4236af:	cmp    ecx,ebx
  4236b1:	je     0x423711
  4236b3:	cmp    ecx,ebx
  4236b5:	jne    0x423711
  4236b7:	add    ebx,ebx
  4236b9:	test   ecx,0x375
  4236bf:	je     0x423711
  4236c1:	cmp    edx,0xffffff85
  4236c4:	jne    0x423711
  4236c6:	mov    ebx,DWORD PTR [ebp-0x44]
  4236c9:	cmp    ebx,0xffffffe8
  4236cc:	jne    0x423711
  4236ce:	cmp    ecx,0x5
  4236d1:	jne    0x423711
  4236d3:	add    ecx,eax
  4236d5:	add    ecx,ecx
  4236d7:	cmp    ebx,eax
  4236d9:	je     0x423711
  4236db:	add    DWORD PTR [ebp-0x44],ebx
  4236de:	add    ecx,edx
  4236e0:	mov    edx,edi
  4236e2:	mov    ebx,DWORD PTR [ebp-0x44]
  4236e5:	add    edx,edx
  4236e7:	add    DWORD PTR [ebp-0x44],eax
  4236ea:	add    ebx,esi
  4236ec:	sub    ebx,edx
  4236ee:	sub    ecx,eax
  4236f0:	sub    ebx,eax
  4236f2:	cmp    ecx,eax
  4236f4:	jne    0x423711
  4236f6:	or     ebx,eax
  4236f8:	mov    DWORD PTR [ebp-0x44],ebx
  4236fb:	mov    esi,0xf0dd
  423700:	mov    ebx,DWORD PTR [ebp-0x44]
  423703:	sub    DWORD PTR [ebp-0x44],ecx
  423706:	cmp    ebx,0xffffffaf
  423709:	jne    0x423711
  42370b:	or     DWORD PTR [ebp-0x44],ebx
  42370e:	xor    DWORD PTR [ebp-0x44],esi
  423711:	sub    eax,edi
  423713:	and    edi,ecx
  423715:	add    edi,edi
  423717:	mov    edx,DWORD PTR [ebp-0x44]
  42371a:	xor    esi,esi
  42371c:	add    edi,esi
  42371e:	sub    DWORD PTR [ebp-0x44],edi
  423721:	add    DWORD PTR [ebp-0x44],edx
  423724:	mov    ebx,DWORD PTR [ebp-0x44]
  423727:	and    DWORD PTR [ebp-0x44],ecx
  42372a:	mov    ecx,0xa9
  42372f:	and    ebx,edi
  423731:	test   ebx,0xe1
  423737:	je     0x423783
  423739:	mov    edi,DWORD PTR [ebp-0x44]
  42373c:	cmp    edi,DWORD PTR ds:0x44f06c
  423742:	je     0x423783
  423744:	cmp    ebx,DWORD PTR ds:0x44f060
  42374a:	je     0x423783
  42374c:	cmp    edi,DWORD PTR [ebp-0xc]
  42374f:	je     0x423783
  423751:	mov    edx,DWORD PTR [ebp-0x44]
  423754:	mov    esi,DWORD PTR ds:0x44f06c
  42375a:	sub    DWORD PTR [ebp-0x44],esi
  42375d:	sub    DWORD PTR [ebp-0x44],edi
  423760:	sub    ecx,edx
  423762:	cmp    ebx,DWORD PTR ds:0x44f05c
  423768:	je     0x423783
  42376a:	mov    edi,0x1a
  42376f:	or     ecx,ebx
  423771:	mov    esi,DWORD PTR [ebp-0x44]
  423774:	sub    DWORD PTR [ebp-0x44],edi
  423777:	add    DWORD PTR [ebp-0x44],edi
  42377a:	sub    DWORD PTR [ebp-0x44],esi
  42377d:	sub    DWORD PTR [ebp-0x44],eax
  423780:	add    DWORD PTR [ebp-0x44],ecx
  423783:	sub    DWORD PTR [ebp-0x8],eax
  423786:	sub    DWORD PTR [ebp-0x44],ebx
  423789:	mov    eax,DWORD PTR [ebp-0x44]
  42378c:	mov    edx,0xc1
  423791:	add    edx,esi
  423793:	call   0x42604a
  423798:	push   0x6e76e300
  42379d:	call   0x425ed2
  4237a2:	add    esp,0x4
  4237a5:	call   DWORD PTR ds:0x44edf8
  4237ab:	mov    edx,DWORD PTR [ebp-0x44]
  4237ae:	mov    edi,0x24c1
  4237b3:	sub    edx,esi
  4237b5:	add    DWORD PTR [ebp-0x44],edi
  4237b8:	add    edx,eax
  4237ba:	sub    DWORD PTR [ebp-0x44],edx
  4237bd:	test   eax,0x86
  4237c2:	jne    0x42390a
  4237c8:	call   0x425ed2
  4237cd:	mov    ecx,0x7
  4237d2:	cmp    ebx,DWORD PTR ds:0x44f05c
  4237d8:	jne    0x423816
  4237da:	mov    edi,DWORD PTR [ebp-0x44]
  4237dd:	xor    eax,eax
  4237df:	add    edi,esi
  4237e1:	sub    eax,ebx
  4237e3:	cmp    edi,0xffffffb7
  4237e6:	je     0x423816
  4237e8:	mov    edx,DWORD PTR [ebp-0x44]
  4237eb:	add    eax,edx
  4237ed:	mov    esi,DWORD PTR [ebp-0x44]
  4237f0:	add    esi,ebx
  4237f2:	sub    esi,eax
  4237f4:	cmp    eax,DWORD PTR [ebp-0x48]
  4237f7:	je     0x423816
  4237f9:	mov    DWORD PTR [ebp-0x44],esi
  4237fc:	mov    esi,0xc07f
  423801:	sub    esi,ecx
  423803:	add    esi,ebx
  423805:	mov    ebx,DWORD PTR [ebp-0x44]
  423808:	add    DWORD PTR [ebp-0x44],edi
  42380b:	sub    DWORD PTR [ebp-0x44],esi
  42380e:	cmp    ebx,0xffffffa6
  423811:	je     0x423816
  423813:	sub    DWORD PTR [ebp-0x44],ebx
  423816:	and    DWORD PTR [ebp-0x44],eax
  423819:	mov    ebx,0xff36
  42381e:	xor    edi,edi
  423820:	mov    edx,DWORD PTR [ebp-0x44]
  423823:	test   edx,0x1
  423829:	je     0x423836
  42382b:	add    DWORD PTR [ebp-0x44],ebx
  42382e:	and    edi,ecx
  423830:	sub    DWORD PTR [ebp-0x44],edi
  423833:	sub    DWORD PTR [ebp-0x44],edx
  423836:	add    DWORD PTR [ebp-0x44],ecx
  423839:	add    ebx,ebx
  42383b:	add    eax,ebx
  42383d:	mov    esi,DWORD PTR [ebp-0x44]
  423840:	cmp    esi,DWORD PTR ds:0x44f06c
  423846:	jne    0x42386c
  423848:	cmp    esi,DWORD PTR ds:0x44f06c
  42384e:	jne    0x42386c
  423850:	cmp    edx,0x78
  423853:	jne    0x42386c
  423855:	and    esi,eax
  423857:	sub    esi,ecx
  423859:	mov    edi,0xf1
  42385e:	add    DWORD PTR [ebp-0x44],edi
  423861:	mov    edi,DWORD PTR [ebp-0x44]
  423864:	add    esi,eax
  423866:	add    DWORD PTR [ebp-0x44],esi
  423869:	sub    DWORD PTR [ebp-0x44],edi
  42386c:	add    edi,edx
  42386e:	or     edi,eax
  423870:	mov    esi,0xed
  423875:	sub    esi,ebx
  423877:	cmp    edi,DWORD PTR [ebp-0x40]
  42387a:	je     0x42389c
  42387c:	add    DWORD PTR [ebp-0x44],edi
  42387f:	mov    edi,0xb388
  423884:	sub    DWORD PTR [ebp-0x44],esi
  423887:	mov    esi,DWORD PTR ds:0x44f06c
  42388d:	add    DWORD PTR [ebp-0x44],esi
  423890:	or     DWORD PTR [ebp-0x44],ecx
  423893:	add    edi,ecx
  423895:	add    edi,ecx
  423897:	sub    edi,esi
  423899:	sub    DWORD PTR [ebp-0x44],edi
  42389c:	add    ecx,ecx
  42389e:	xor    edi,edi
  4238a0:	cmp    eax,DWORD PTR [ebp-0x2c]
  4238a3:	je     0x4238b5
  4238a5:	xor    esi,esi
  4238a7:	and    DWORD PTR [ebp-0x44],eax
  4238aa:	sub    DWORD PTR [ebp-0x44],edx
  4238ad:	add    edi,ecx
  4238af:	sub    DWORD PTR [ebp-0x44],esi
  4238b2:	sub    DWORD PTR [ebp-0x44],edi
  4238b5:	sub    DWORD PTR [ebp-0x44],esi
  4238b8:	mov    DWORD PTR [ebp-0x20],ecx
  4238bb:	push   0x76
  4238bd:	call   0x425ed2
  4238c2:	add    esp,0x4
  4238c5:	cmp    eax,DWORD PTR ds:0x44f05c
  4238cb:	jne    0x4238d7
  4238cd:	push   0xffffff98
  4238cf:	call   0x4259e8
  4238d4:	add    esp,0x4
  4238d7:	push   0x5c016900
  4238dc:	push   0x78a38000
  4238e1:	push   0xf
  4238e3:	push   0xfffffff3
  4238e5:	push   0x88a06600
  4238ea:	call   0x4259e8
  4238ef:	add    esp,0x14
  4238f2:	sub    DWORD PTR [ebp-0x20],ebx
  4238f5:	mov    esi,DWORD PTR [ebp-0x44]
  4238f8:	mov    DWORD PTR [ebp-0x44],esi
  4238fb:	push   0xe3bfd00
  423900:	push   0xffffffec
  423902:	call   0x425afe
  423907:	add    esp,0x8
  42390a:	push   0x7c
  42390c:	push   0xfc4f7500
  423911:	call   0x425ed2
  423916:	add    esp,0x8
  423919:	mov    DWORD PTR [ebp-0x44],eax
  42391c:	push   0x1d
  42391e:	push   0x32
  423920:	push   0xffffff85
  423922:	call   0x425afe
  423927:	add    esp,0xc
  42392a:	push   0xd520e25d
  42392f:	call   DWORD PTR ds:0x44ee3c
  423935:	push   0xffffffbd
  423937:	push   0xffffffaa
  423939:	push   0x7d
  42393b:	push   0xffffff99
  42393d:	call   0x425afe
  423942:	add    esp,0x10
  423945:	call   DWORD PTR ds:0x44ee6c
  42394b:	mov    ebx,0xcd
  423950:	mov    esi,0xa87e
  423955:	add    DWORD PTR [ebp-0x44],esi
  423958:	sub    ebx,edi
  42395a:	sub    edi,ebx
  42395c:	add    edi,ebx
  42395e:	or     DWORD PTR [ebp-0x44],ebx
  423961:	and    ebx,edi
  423963:	sub    ebx,esi
  423965:	cmp    eax,0xffffff9c
  423968:	jne    0x42399a
  42396a:	cmp    eax,0x3b
  42396d:	je     0x42399a
  42396f:	mov    edx,DWORD PTR [ebp-0x44]
  423972:	test   edx,0xb2
  423978:	jne    0x42399a
  42397a:	add    edx,edi
  42397c:	mov    ebx,DWORD PTR ds:0x44f050
  423982:	mov    ecx,0xf9
  423987:	sub    edx,edi
  423989:	add    edx,esi
  42398b:	add    DWORD PTR [ebp-0x44],ebx
  42398e:	sub    edx,edi
  423990:	mov    DWORD PTR [ebp-0x44],ecx
  423993:	cmp    edx,esi
  423995:	jne    0x42399a
  423997:	add    DWORD PTR [ebp-0x44],edx
  42399a:	cmp    eax,0xffffffd5
  42399d:	jne    0x4239f3
  42399f:	sub    DWORD PTR [ebp-0x44],esi
  4239a2:	mov    edx,DWORD PTR ds:0x44f06c
  4239a8:	mov    ebx,0x79
  4239ad:	xor    DWORD PTR [ebp-0x44],ebx
  4239b0:	mov    edi,DWORD PTR [ebp-0x44]
  4239b3:	mov    eax,ebx
  4239b5:	add    DWORD PTR [ebp-0x44],eax
  4239b8:	add    edi,edi
  4239ba:	and    edi,eax
  4239bc:	add    edi,ecx
  4239be:	sub    DWORD PTR [ebp-0x44],edx
  4239c1:	cmp    edi,DWORD PTR [ebp-0x8]
  4239c4:	je     0x4239db
  4239c6:	add    edi,eax
  4239c8:	mov    esi,DWORD PTR [ebp-0x44]
  4239cb:	mov    ecx,0x49
  4239d0:	and    ecx,ebx
  4239d2:	add    DWORD PTR [ebp-0x44],edi
  4239d5:	add    DWORD PTR [ebp-0x44],esi
  4239d8:	and    DWORD PTR [ebp-0x44],ecx
  4239db:	mov    DWORD PTR [ebp-0x38],edx
  4239de:	push   0xffffffbf
  4239e0:	push   0x51
  4239e2:	push   0xffffffc5
  4239e4:	push   0x8e54f300
  4239e9:	push   0x55
  4239eb:	call   0x4259e8
  4239f0:	add    esp,0x14
  4239f3:	mov    edx,DWORD PTR ds:0x44f050
  4239f9:	push   0xa4767a00
  4239fe:	push   0xffffffeb
  423a00:	push   0xe5a1800
  423a05:	push   0xffffff80
  423a07:	call   0x4256cb
  423a0c:	add    esp,0x10
  423a0f:	push   0xffffffb7
  423a11:	push   0xffffff93
  423a13:	call   0x4259e8
  423a18:	add    esp,0x8
  423a1b:	push   0xffffffdb
  423a1d:	push   0xffffffb0
  423a1f:	push   0x72
  423a21:	call   0x425ed2
  423a26:	add    esp,0xc
  423a29:	push   0x244b8500
  423a2e:	push   0xffffffdd
  423a30:	push   0x69
  423a32:	push   0xffffffc2
  423a34:	push   0x76
  423a36:	call   0x4256cb
  423a3b:	add    esp,0x14
  423a3e:	call   0x4256cb
  423a43:	call   0x425ed2
  423a48:	add    edi,ebx
  423a4a:	push   0xffffffdc
  423a4c:	push   0x1e
  423a4e:	push   0xffffffd7
  423a50:	push   0x98bd4700
  423a55:	push   0xe4580e00
  423a5a:	call   0x4256cb
  423a5f:	add    esp,0x14
  423a62:	cmp    edi,DWORD PTR [ebp-0x20]
  423a65:	je     0x423a92
  423a67:	cmp    eax,0x3a0d
  423a6c:	jne    0x423a92
  423a6e:	push   0xa0d73700
  423a73:	push   0xffffff93
  423a75:	push   0x2e38ee00
  423a7a:	call   0x4259e8
  423a7f:	add    esp,0xc
  423a82:	cmp    edi,DWORD PTR ds:0x44f05c
  423a88:	jne    0x423a92
  423a8a:	cmp    edi,DWORD PTR [ebp-0x44]
  423a8d:	jne    0x423a92
  423a8f:	add    DWORD PTR [ebp-0x44],edi
  423a92:	push   0x9ce77400
  423a97:	push   0xffffffb1
  423a99:	push   0xffffffae
  423a9b:	push   0x40fd2d00
  423aa0:	call   0x4256cb
  423aa5:	add    esp,0x10
  423aa8:	push   0xffffffa9
  423aaa:	call   0x425ed2
  423aaf:	add    esp,0x4
  423ab2:	cmp    edi,DWORD PTR ds:0x44f06c
  423ab8:	je     0x423acd
  423aba:	push   0xffffffc3
  423abc:	push   0x4
  423abe:	push   0xffffffc1
  423ac0:	push   0xe455cd00
  423ac5:	call   0x425ed2
  423aca:	add    esp,0x10
  423acd:	call   0x42604a
  423ad2:	sub    DWORD PTR [ebp-0x44],ebx
  423ad5:	push   0x38
  423ad7:	push   0x7e03ee00
  423adc:	call   0x42604a
  423ae1:	add    esp,0x8
  423ae4:	push   0xffffffb9
  423ae6:	push   0xce4dbe00
  423aeb:	push   0xffffffa3
  423aed:	push   0xffffffaa
  423aef:	call   0x4259e8
  423af4:	add    esp,0x10
  423af7:	push   0x70ad0a00
  423afc:	call   0x425ed2
  423b01:	add    esp,0x4
  423b04:	call   0x42604a
  423b09:	push   0x33
  423b0b:	push   0xe435e300
  423b10:	push   0xa48bde00
  423b15:	call   0x4259e8
  423b1a:	add    esp,0xc
  423b1d:	push   0xbcd89200
  423b22:	push   0xfffffffe
  423b24:	push   0xffffffac
  423b26:	push   0xffffff97
  423b28:	call   0x4256cb
  423b2d:	add    esp,0x10
  423b30:	mov    ebx,DWORD PTR [ebp-0x44]
  423b33:	push   0xa898bd00
  423b38:	call   0x425ed2
  423b3d:	add    esp,0x4
  423b40:	push   0x9c970800
  423b45:	push   0x70c58500
  423b4a:	push   0xffffffa9
  423b4c:	call   0x425ed2
  423b51:	add    esp,0xc
  423b54:	cmp    ebx,eax
  423b56:	jne    0x423bc0
  423b58:	push   0x48fd6400
  423b5d:	push   0x2cf6bf00
  423b62:	push   0x241c4700
  423b67:	call   0x4259e8
  423b6c:	add    esp,0xc
  423b6f:	cmp    ebx,0x6d
  423b72:	je     0x423bc0
  423b74:	push   0xde4e7f00
  423b79:	call   0x425afe
  423b7e:	add    esp,0x4
  423b81:	call   0x425afe
  423b86:	push   0x20
  423b88:	push   0xfe111f00
  423b8d:	call   0x425ed2
  423b92:	add    esp,0x8
  423b95:	push   0xfe3c2600
  423b9a:	push   0xc88fd500
  423b9f:	push   0x6a
  423ba1:	call   0x4259e8
  423ba6:	add    esp,0xc
  423ba9:	push   0xffffff80
  423bab:	push   0xffffff9d
  423bad:	push   0x49
  423baf:	call   0x42604a
  423bb4:	add    esp,0xc
  423bb7:	or     ebx,edi
  423bb9:	sub    ebx,esi
  423bbb:	add    ebx,eax
  423bbd:	sub    DWORD PTR [ebp-0x44],ebx
  423bc0:	push   0x14c04f00
  423bc5:	push   0x6489d900
  423bca:	push   0xe746700
  423bcf:	push   0xfc0f8a00
  423bd4:	push   0xfffffff5
  423bd6:	call   0x425ed2
  423bdb:	add    esp,0x14
  423bde:	push   0x1e006800
  423be3:	push   0x71
  423be5:	push   0xfc2d2200
  423bea:	push   0xffffffe4
  423bec:	push   0xffffffcf
  423bee:	call   0x425afe
  423bf3:	add    esp,0x14
  423bf6:	push   0x46
  423bf8:	push   0x29
  423bfa:	push   0xffffffa4
  423bfc:	push   0x58ecfc00
  423c01:	call   0x425ed2
  423c06:	add    esp,0x10
  423c09:	push   0x448a9a00
  423c0e:	push   0x5a
  423c10:	push   0xb8f62c00
  423c15:	call   0x42604a
  423c1a:	add    esp,0xc
  423c1d:	mov    edx,0x12
  423c22:	sub    DWORD PTR [ebp-0x44],edx
  423c25:	push   0xa42f9e00
  423c2a:	call   0x425ed2
  423c2f:	add    esp,0x4
  423c32:	mov    esi,DWORD PTR [ebp-0x44]
  423c35:	test   ebx,0x2e
  423c3b:	jne    0x423d63
  423c41:	cmp    esi,ebx
  423c43:	je     0x423d63
  423c49:	mov    ecx,DWORD PTR ds:0x44f050
  423c4f:	cmp    edi,ecx
  423c51:	jne    0x423d63
  423c57:	mov    edx,DWORD PTR [ebp-0x44]
  423c5a:	push   0xe636400
  423c5f:	push   0x71
  423c61:	push   0xfffffffc
  423c63:	push   0x29
  423c65:	push   0xffffff89
  423c67:	call   0x42604a
  423c6c:	add    esp,0x14
  423c6f:	mov    eax,DWORD PTR [ebp-0x44]
  423c72:	cmp    eax,0xece
  423c77:	jne    0x423d63
  423c7d:	mov    ecx,0xb9
  423c82:	push   0xd483f600
  423c87:	push   0x48ab0e00
  423c8c:	push   0x24752400
  423c91:	call   0x42604a
  423c96:	add    esp,0xc
  423c99:	sub    esi,edi
  423c9b:	push   0xe4fde000
  423ca0:	push   0xffffff8e
  423ca2:	push   0x10c56700
  423ca7:	push   0x52
  423ca9:	call   0x42604a
  423cae:	add    esp,0x10
  423cb1:	push   0x58b6d800
  423cb6:	push   0xb4e63f00
  423cbb:	push   0xffffff9b
  423cbd:	push   0xb4865400
  423cc2:	call   0x425ed2
  423cc7:	add    esp,0x10
  423cca:	push   0x48b52600
  423ccf:	push   0xffffffda
  423cd1:	push   0x8
  423cd3:	push   0xa47f4000
  423cd8:	call   0x4259e8
  423cdd:	add    esp,0x10
  423ce0:	mov    ebx,DWORD PTR [ebp-0x44]
  423ce3:	cmp    esi,DWORD PTR ds:0x44f050
  423ce9:	je     0x423d63
  423ceb:	cmp    edi,0x31
  423cee:	je     0x423d63
  423cf0:	or     ebx,eax
  423cf2:	or     ebx,esi
  423cf4:	cmp    ebx,DWORD PTR [ebp-0x50]
  423cf7:	jne    0x423d63
  423cf9:	push   0x2c
  423cfb:	push   0xfc177d00
  423d00:	call   0x4259e8
  423d05:	add    esp,0x8
  423d08:	push   0x5c3efd00
  423d0d:	push   0xffffff8c
  423d0f:	push   0x11
  423d11:	push   0x5b
  423d13:	call   0x4259e8
  423d18:	add    esp,0x10
  423d1b:	push   0x75
  423d1d:	push   0x4cccc000
  423d22:	push   0x0
  423d24:	call   0x425afe
  423d29:	add    esp,0xc
  423d2c:	call   0x425ed2
  423d31:	push   0x62
  423d33:	call   0x42604a
  423d38:	add    esp,0x4
  423d3b:	push   0xdc2fdf00
  423d40:	push   0x5a
  423d42:	push   0xffffffee
  423d44:	push   0x7e
  423d46:	push   0x241b5c00
  423d4b:	call   0x42604a
  423d50:	add    esp,0x14
  423d53:	mov    edx,DWORD PTR [ebp-0x44]
  423d56:	call   0x4259e8
  423d5b:	add    ebx,eax
  423d5d:	sub    DWORD PTR [ebp-0x44],edi
  423d60:	add    DWORD PTR [ebp-0x44],ebx
  423d63:	push   0xffffffb3
  423d65:	call   0x4256cb
  423d6a:	add    esp,0x4
  423d6d:	sub    DWORD PTR [ebp-0x44],esi
  423d70:	push   0xd0c1c500
  423d75:	push   0x60a46f00
  423d7a:	push   0xa4015900
  423d7f:	call   0x425afe
  423d84:	add    esp,0xc
  423d87:	cmp    eax,0xffffffac
  423d8a:	je     0x423da7
  423d8c:	push   0xfc518800
  423d91:	push   0xffffffd8
  423d93:	push   0x89dc200
  423d98:	push   0x8cedd500
  423d9d:	push   0xffffff8b
  423d9f:	call   0x4256cb
  423da4:	add    esp,0x14
  423da7:	push   0xfc44b500
  423dac:	push   0xde453300
  423db1:	call   0x425ed2
  423db6:	add    esp,0x8
  423db9:	push   0xfe0c4f00
  423dbe:	push   0xdc090e00
  423dc3:	push   0xffffff90
  423dc5:	push   0xffffff84
  423dc7:	push   0xae15a300
  423dcc:	call   0x4256cb
  423dd1:	add    esp,0x14
  423dd4:	call   0x4259e8
  423dd9:	xor    ecx,ecx
  423ddb:	sub    ecx,edi
  423ddd:	or     ecx,ebx
  423ddf:	add    ecx,ebx
  423de1:	push   0x3e02bb00
  423de6:	push   0xffffffb9
  423de8:	call   0x425afe
  423ded:	add    esp,0x8
  423df0:	push   0x44
  423df2:	push   0x42
  423df4:	push   0x4e
  423df6:	push   0xffffffc1
  423df8:	push   0x4cfd4f00
  423dfd:	call   0x4259e8
  423e02:	add    esp,0x14
  423e05:	add    ebx,edi
  423e07:	push   0x6c879100
  423e0c:	push   0x11
  423e0e:	push   0x1
  423e10:	call   0x4256cb
  423e15:	add    esp,0xc
  423e18:	add    ebx,esi
  423e1a:	mov    edx,DWORD PTR [ebp-0x44]
  423e1d:	mov    ecx,DWORD PTR [ebp-0x44]
  423e20:	push   0x5c65b900
  423e25:	push   0x5e08c400
  423e2a:	push   0x47
  423e2c:	call   0x4256cb
  423e31:	add    esp,0xc
  423e34:	push   0x7e781900
  423e39:	push   0x64665100
  423e3e:	call   0x4259e8
  423e43:	add    esp,0x8
  423e46:	add    ebx,eax
  423e48:	push   0x645ed200
  423e4d:	push   0xde75f600
  423e52:	push   0x3c91fe00
  423e57:	push   0x4f
  423e59:	call   0x42604a
  423e5e:	add    esp,0x10
  423e61:	call   0x4256cb
  423e66:	add    DWORD PTR [ebp-0x44],ebx
  423e69:	sub    DWORD PTR [ebp-0x44],esi
  423e6c:	lea    eax,[ebp-0x4]
  423e6f:	mov    edx,0x32
  423e74:	add    edx,edi
  423e76:	xor    edi,edi
  423e78:	sub    DWORD PTR [ebp-0x44],esi
  423e7b:	cmp    eax,DWORD PTR [ebp-0x2c]
  423e7e:	jne    0x423e97
  423e80:	mov    ebx,DWORD PTR [ebp-0x44]
  423e83:	sub    DWORD PTR [ebp-0x44],esi
  423e86:	mov    esi,0xa8
  423e8b:	add    edx,eax
  423e8d:	and    esi,edx
  423e8f:	add    ebx,esi
  423e91:	sub    DWORD PTR [ebp-0x44],ebx
  423e94:	add    DWORD PTR [ebp-0x44],edi
  423e97:	sub    DWORD PTR [ebp-0x44],eax
  423e9a:	push   eax
  423e9b:	cmp    edx,DWORD PTR ds:0x44f060
  423ea1:	je     0x423eb7
  423ea3:	push   0xee533a00
  423ea8:	push   0x2e178700
  423ead:	push   0x49
  423eaf:	call   0x4259e8
  423eb4:	add    esp,0xc
  423eb7:	call   0x4259e8
  423ebc:	push   0xc55e14ed
  423ec1:	add    DWORD PTR [ebp-0x44],edi
  423ec4:	mov    edx,0xde11
  423ec9:	push   0xfffffff6
  423ecb:	push   0xe8cfba00
  423ed0:	push   0xffffffa8
  423ed2:	push   0xdc313300
  423ed7:	call   0x4256cb
  423edc:	add    esp,0x10
  423edf:	call   0x424468
  423ee4:	and    edi,esi
  423ee6:	mov    ecx,0x0
  423eeb:	cmp    edi,0x56
  423eee:	je     0x423fb2
  423ef4:	push   0xffffff93
  423ef6:	push   0xfc0a5000
  423efb:	push   0x64320900
  423f00:	call   0x425afe
  423f05:	add    esp,0xc
  423f08:	push   0xffffff91
  423f0a:	push   0xfc0d8a00
  423f0f:	push   0x53
  423f11:	push   0xf4a66600
  423f16:	call   0x425afe
  423f1b:	add    esp,0x10
  423f1e:	cmp    edi,0x3419
  423f24:	jne    0x423fb2
  423f2a:	xor    ecx,ecx
  423f2c:	push   0x0
  423f2e:	push   0xde657d00
  423f33:	push   0x1c
  423f35:	push   0x8fa4300
  423f3a:	push   0x44
  423f3c:	call   0x4256cb
  423f41:	add    esp,0x14
  423f44:	test   edi,0xe7
  423f4a:	je     0x423fb2
  423f4c:	mov    eax,DWORD PTR [ebp-0x44]
  423f4f:	mov    ebx,DWORD PTR [ebp-0x44]
  423f52:	push   0xffffffdb
  423f54:	call   0x42604a
  423f59:	add    esp,0x4
  423f5c:	push   0x8e253d00
  423f61:	push   0xd8d78f00
  423f66:	call   0x425ed2
  423f6b:	add    esp,0x8
  423f6e:	push   0x6e3e1600
  423f73:	call   0x425afe
  423f78:	add    esp,0x4
  423f7b:	push   0x36
  423f7d:	call   0x42604a
  423f82:	add    esp,0x4
  423f85:	push   0xffffffd9
  423f87:	push   0x2f
  423f89:	call   0x425ed2
  423f8e:	add    esp,0x8
  423f91:	push   0xfc2ab200
  423f96:	push   0x24623300
  423f9b:	push   0x49
  423f9d:	push   0xffffffa2
  423f9f:	push   0xffffff99
  423fa1:	call   0x425ed2
  423fa6:	add    esp,0x14
  423fa9:	add    DWORD PTR [ebp-0x44],eax
  423fac:	and    DWORD PTR [ebp-0x44],edi
  423faf:	and    DWORD PTR [ebp-0x44],ebx
  423fb2:	push   0xdcdb1200
  423fb7:	push   0xffffffef
  423fb9:	call   0x42604a
  423fbe:	add    esp,0x8
  423fc1:	mov    ecx,DWORD PTR [ebp-0x4]
  423fc4:	add    DWORD PTR [ebp-0x44],ecx
  423fc7:	shr    ecx,0x10
  423fca:	cmp    ecx,0x2e
  423fcd:	jne    0x42402e
  423fcf:	sub    ebx,edi
  423fd1:	mov    esi,DWORD PTR [ebp-0x44]
  423fd4:	cmp    ecx,0xffffff84
  423fd7:	je     0x42402e
  423fd9:	mov    edi,0x59
  423fde:	xor    edx,edx
  423fe0:	add    esi,ebx
  423fe2:	cmp    ecx,esi
  423fe4:	jne    0x42402e
  423fe6:	sub    DWORD PTR [ebp-0x44],ecx
  423fe9:	mov    ebx,DWORD PTR [ebp-0x44]
  423fec:	mov    eax,DWORD PTR [ebp-0x44]
  423fef:	cmp    esi,DWORD PTR ds:0x44f06c
  423ff5:	jne    0x42402e
  423ff7:	add    edi,esi
  423ff9:	and    eax,edx
  423ffb:	sub    DWORD PTR [ebp-0x44],ebx
  423ffe:	test   esi,0xfc93
  424004:	je     0x42402e
  424006:	add    DWORD PTR [ebp-0x44],edi
  424009:	mov    edx,0x36
  42400e:	mov    esi,DWORD PTR [ebp-0x44]
  424011:	add    eax,esi
  424013:	add    eax,eax
  424015:	sub    edx,edi
  424017:	mov    DWORD PTR [ebp-0x44],ecx
  42401a:	add    edx,edx
  42401c:	add    edx,esi
  42401e:	cmp    eax,0x24
  424021:	jne    0x42402e
  424023:	sub    DWORD PTR [ebp-0x44],eax
  424026:	cmp    ebx,DWORD PTR [ebp-0x40]
  424029:	je     0x42402e
  42402b:	add    DWORD PTR [ebp-0x44],edx
  42402e:	cmp    ecx,0x32d9
  424034:	jne    0x4243d4
  42403a:	push   0x3ce73d00
  42403f:	push   0x17
  424041:	push   0x2
  424043:	push   0xdc757000
  424048:	push   0x3a
  42404a:	call   0x425afe
  42404f:	add    esp,0x14
  424052:	mov    eax,0x331be359
  424057:	test   ebx,0xdb
  42405d:	je     0x424062
  42405f:	sub    DWORD PTR [ebp-0x44],eax
  424062:	sub    eax,DWORD PTR [ebp-0x4]
  424065:	mov    edx,DWORD PTR [ebp-0x44]
  424068:	test   eax,0x4fd2
  42406d:	je     0x4240c8
  42406f:	sub    DWORD PTR [ebp-0x44],eax
  424072:	mov    edi,DWORD PTR [ebp-0x44]
  424075:	add    DWORD PTR [ebp-0x44],ebx
  424078:	sub    DWORD PTR [ebp-0x44],edx
  42407b:	mov    esi,DWORD PTR [ebp-0x44]
  42407e:	cmp    eax,esi
  424080:	jne    0x4240c8
  424082:	mov    ebx,DWORD PTR [ebp-0x44]
  424085:	mov    edx,DWORD PTR [ebp-0x44]
  424088:	sub    DWORD PTR [ebp-0x44],edi
  42408b:	cmp    esi,DWORD PTR [ebp-0x18]
  42408e:	jne    0x4240c8
  424090:	xor    ecx,ecx
  424092:	mov    DWORD PTR [ebp-0x44],esi
  424095:	sub    edx,ebx
  424097:	add    edx,ecx
  424099:	mov    ebx,0xda
  42409e:	or     edx,eax
  4240a0:	mov    DWORD PTR [ebp-0x44],eax
  4240a3:	cmp    edx,0x13
  4240a6:	je     0x4240c8
  4240a8:	cmp    edx,DWORD PTR [ebp-0x1c]
  4240ab:	jne    0x4240c8
  4240ad:	sub    edx,esi
  4240af:	mov    edi,DWORD PTR [ebp-0x44]
  4240b2:	add    ebx,edi
  4240b4:	or     DWORD PTR [ebp-0x44],ecx
  4240b7:	mov    ecx,DWORD PTR ds:0x44f06c
  4240bd:	sub    ebx,ecx
  4240bf:	sub    edx,ecx
  4240c1:	add    edx,ebx
  4240c3:	add    edx,edx
  4240c5:	sub    DWORD PTR [ebp-0x44],edx
  4240c8:	call   eax
  4240ca:	mov    ecx,DWORD PTR [ebp-0x44]
  4240cd:	test   ecx,0x19
  4240d3:	je     0x4241ce
  4240d9:	test   ecx,0x2b
  4240df:	je     0x4241ce
  4240e5:	sub    ecx,edi
  4240e7:	xor    edx,edx
  4240e9:	mov    esi,0xe0
  4240ee:	add    edx,ecx
  4240f0:	add    DWORD PTR [ebp-0x44],ecx
  4240f3:	sub    edx,eax
  4240f5:	cmp    edx,0xf194
  4240fb:	jne    0x4241ce
  424101:	mov    ecx,eax
  424103:	and    ecx,eax
  424105:	cmp    edx,0xffffffba
  424108:	je     0x4241ce
  42410e:	cmp    edx,ecx
  424110:	je     0x4241ce
  424116:	mov    edi,esi
  424118:	sub    DWORD PTR [ebp-0x44],edi
  42411b:	mov    edi,0x99
  424120:	cmp    edx,0x5177
  424126:	jne    0x4241ce
  42412c:	mov    ebx,edi
  42412e:	and    edx,esi
  424130:	add    ecx,ebx
  424132:	xor    DWORD PTR [ebp-0x44],ecx
  424135:	cmp    edx,ebx
  424137:	jne    0x4241ce
  42413d:	cmp    edx,DWORD PTR [ebp-0x10]
  424140:	jne    0x4241ce
  424146:	mov    edi,edx
  424148:	mov    esi,DWORD PTR [ebp-0x44]
  42414b:	cmp    esi,DWORD PTR [ebp-0x48]
  42414e:	jne    0x4241ce
  424150:	mov    edx,DWORD PTR [ebp-0x44]
  424153:	mov    ecx,DWORD PTR [ebp-0x44]
  424156:	cmp    ecx,0xec2e
  42415c:	jne    0x4241ce
  42415e:	mov    ebx,DWORD PTR [ebp-0x44]
  424161:	add    DWORD PTR [ebp-0x44],edi
  424164:	sub    esi,eax
  424166:	sub    esi,ebx
  424168:	add    DWORD PTR [ebp-0x44],esi
  42416b:	sub    ecx,edx
  42416d:	cmp    ecx,edx
  42416f:	je     0x4241ce
  424171:	add    ecx,eax
  424173:	sub    ecx,edx
  424175:	mov    edi,DWORD PTR ds:0x44f060
  42417b:	sub    edi,esi
  42417d:	mov    edx,DWORD PTR [ebp-0x44]
  424180:	add    DWORD PTR [ebp-0x44],ebx
  424183:	sub    edi,ebx
  424185:	sub    DWORD PTR [ebp-0x44],edx
  424188:	cmp    edi,0x52
  42418b:	jne    0x4241ce
  42418d:	cmp    edi,0xcf3b
  424193:	jne    0x4241ce
  424195:	sub    DWORD PTR [ebp-0x44],edi
  424198:	add    ecx,esi
  42419a:	mov    ebx,0x51
  42419f:	mov    edx,DWORD PTR [ebp-0x44]
  4241a2:	or     DWORD PTR [ebp-0x44],eax
  4241a5:	cmp    ecx,ebx
  4241a7:	jne    0x4241ce
  4241a9:	cmp    edx,0xffffffba
  4241ac:	je     0x4241ce
  4241ae:	test   ecx,0xb1b3
  4241b4:	jne    0x4241ce
  4241b6:	cmp    ecx,edx
  4241b8:	jne    0x4241ce
  4241ba:	add    edx,esi
  4241bc:	mov    edi,esi
  4241be:	xor    esi,esi
  4241c0:	add    edi,ecx
  4241c2:	and    edi,ebx
  4241c4:	add    esi,esi
  4241c6:	add    DWORD PTR [ebp-0x44],edi
  4241c9:	add    edx,esi
  4241cb:	add    DWORD PTR [ebp-0x44],edx
  4241ce:	mov    DWORD PTR [ebp-0x28],eax
  4241d1:	mov    ecx,DWORD PTR [ebp-0x44]
  4241d4:	and    DWORD PTR [ebp-0x44],ecx
  4241d7:	push   0x9c895000
  4241dc:	push   0x4c
  4241de:	call   0x4259e8
  4241e3:	add    esp,0x8
  4241e6:	mov    eax,0x424f40
  4241eb:	add    edi,esi
  4241ed:	sub    edi,esi
  4241ef:	add    edi,ebx
  4241f1:	mov    edx,DWORD PTR [ebp-0x44]
  4241f4:	and    DWORD PTR [ebp-0x44],edi
  4241f7:	mov    ebx,0xee5d
  4241fc:	cmp    edi,eax
  4241fe:	je     0x424257
  424200:	cmp    edx,eax
  424202:	jne    0x424257
  424204:	add    ebx,ebx
  424206:	mov    esi,0x5f81
  42420b:	mov    ecx,0xcd
  424210:	sub    DWORD PTR [ebp-0x44],esi
  424213:	and    ebx,ecx
  424215:	sub    edx,eax
  424217:	add    ebx,ecx
  424219:	and    edx,ecx
  42421b:	add    ebx,ecx
  42421d:	sub    DWORD PTR [ebp-0x44],eax
  424220:	sub    edx,esi
  424222:	mov    DWORD PTR [ebp-0x44],ebx
  424225:	cmp    edx,0xdc000484
  42422b:	jne    0x424257
  42422d:	mov    ebx,DWORD PTR [ebp-0x44]
  424230:	or     ebx,edi
  424232:	cmp    ebx,DWORD PTR [ebp-0x38]
  424235:	jne    0x424257
  424237:	add    edx,ebx
  424239:	mov    ebx,0x7b
  42423e:	sub    ebx,edx
  424240:	xor    esi,esi
  424242:	sub    esi,ebx
  424244:	add    esi,edx
  424246:	and    esi,edx
  424248:	cmp    esi,eax
  42424a:	je     0x424257
  42424c:	mov    edi,0xf2
  424251:	sub    DWORD PTR [ebp-0x44],edi
  424254:	sub    DWORD PTR [ebp-0x44],esi
  424257:	push   DWORD PTR [ebp-0x4]
  42425a:	push   0x32daca5b
  42425f:	push   DWORD PTR [ebp-0x28]
  424262:	call   eax
  424264:	push   0x8
  424266:	push   0x7e
  424268:	call   0x4259e8
  42426d:	add    esp,0x8
  424270:	add    DWORD PTR [ebp-0x28],0x4
  424277:	cmp    ebx,edi
  424279:	je     0x424284
  42427b:	cmp    eax,ebx
  42427d:	jne    0x424284
  42427f:	call   0x4256cb
  424284:	push   0xacbc5a00
  424289:	push   0x22
  42428b:	call   0x425ed2
  424290:	add    esp,0x8
  424293:	mov    eax,DWORD PTR [ebp-0x28]
  424296:	mov    ebx,0x6bed
  42429b:	sub    DWORD PTR [ebp-0x44],eax
  42429e:	mov    ecx,DWORD PTR [ebp-0x44]
  4242a1:	and    ecx,ebx
  4242a3:	test   ecx,0xb4
  4242a9:	jne    0x424365
  4242af:	mov    edi,0x8
  4242b4:	and    edi,ecx
  4242b6:	cmp    ecx,0xfffffff8
  4242b9:	je     0x424365
  4242bf:	mov    esi,DWORD PTR [ebp-0x44]
  4242c2:	sub    DWORD PTR [ebp-0x44],edi
  4242c5:	mov    edx,DWORD PTR [ebp-0x44]
  4242c8:	cmp    esi,0x5c77
  4242ce:	je     0x424365
  4242d4:	add    esi,eax
  4242d6:	add    edx,eax
  4242d8:	mov    ecx,DWORD PTR [ebp-0x44]
  4242db:	mov    edi,DWORD PTR [ebp-0x44]
  4242de:	sub    DWORD PTR [ebp-0x44],ecx
  4242e1:	cmp    esi,DWORD PTR [ebp-0x18]
  4242e4:	jne    0x424365
  4242e6:	sub    edx,edi
  4242e8:	mov    ebx,DWORD PTR [ebp-0x44]
  4242eb:	sub    DWORD PTR [ebp-0x44],edx
  4242ee:	mov    ecx,DWORD PTR [ebp-0x44]
  4242f1:	cmp    ecx,0x47
  4242f4:	je     0x424365
  4242f6:	sub    ebx,eax
  4242f8:	add    ecx,edi
  4242fa:	add    DWORD PTR [ebp-0x44],esi
  4242fd:	cmp    ebx,0x56
  424300:	je     0x424365
  424302:	cmp    edx,DWORD PTR [ebp-0x1c]
  424305:	jne    0x424365
  424307:	mov    esi,DWORD PTR [ebp-0x44]
  42430a:	add    ebx,ebx
  42430c:	mov    edi,0x96
  424311:	add    DWORD PTR [ebp-0x44],edi
  424314:	and    ecx,ebx
  424316:	add    DWORD PTR [ebp-0x44],eax
  424319:	add    ecx,ecx
  42431b:	test   ecx,0xb3
  424321:	jne    0x424365
  424323:	sub    esi,edx
  424325:	mov    edi,0x98
  42432a:	mov    edx,DWORD PTR [ebp-0x44]
  42432d:	xor    DWORD PTR [ebp-0x44],ecx
  424330:	sub    DWORD PTR [ebp-0x44],ebx
  424333:	cmp    edx,DWORD PTR ds:0x44f06c
  424339:	jne    0x424365
  42433b:	cmp    esi,edi
  42433d:	jne    0x424365
  42433f:	cmp    esi,0xe4c00290
  424345:	jne    0x424365
  424347:	cmp    esi,eax
  424349:	jne    0x424365
  42434b:	xor    ebx,ebx
  42434d:	sub    edx,edi
  42434f:	add    DWORD PTR [ebp-0x44],ebx
  424352:	and    DWORD PTR [ebp-0x44],esi
  424355:	add    edx,esi
  424357:	cmp    esi,edi
  424359:	jne    0x424365
  42435b:	mov    ecx,edi
  42435d:	add    DWORD PTR [ebp-0x44],edx
  424360:	sub    ecx,esi
  424362:	sub    DWORD PTR [ebp-0x44],ecx
  424365:	call   eax
  424367:	push   0x2b
  424369:	push   0x1c970c00
  42436e:	push   0xffffffe5
  424370:	push   0xffffff88
  424372:	push   0x11
  424374:	call   0x425afe
  424379:	add    esp,0x14
  42437c:	push   0x94d3e900
  424381:	push   0x48d7b00
  424386:	push   0x24576500
  42438b:	push   0xffffffdc
  42438d:	push   0xfc134b00
  424392:	call   0x42604a
  424397:	add    esp,0x14
  42439a:	push   0x48
  42439c:	push   0x4c956800
  4243a1:	call   0x425afe
  4243a6:	add    esp,0x8
  4243a9:	push   0x4a
  4243ab:	push   0xffffffd9
  4243ad:	push   0x9cdc2100
  4243b2:	push   0x57
  4243b4:	call   0x4259e8
  4243b9:	add    esp,0x10
  4243bc:	push   0x74db4100
  4243c1:	push   0xe5bea00
  4243c6:	push   0x8
  4243c8:	push   0xffffffe9
  4243ca:	push   0x37
  4243cc:	call   0x425afe
  4243d1:	add    esp,0x14
  4243d4:	sub    DWORD PTR [ebp-0x44],edx
  4243d7:	mov    edx,esi
  4243d9:	xor    esi,esi
  4243db:	push   0x44d8c900
  4243e0:	push   0xfc50ed00
  4243e5:	push   0xfe5a8400
  4243ea:	push   0x14
  4243ec:	call   0x425ed2
  4243f1:	add    esp,0x10
  4243f4:	add    DWORD PTR [ebp-0x44],esi
  4243f7:	push   0x6890b800
  4243fc:	push   0xffffff85
  4243fe:	push   0xd8e72000
  424403:	push   0xffffffc4
  424405:	call   0x42604a
  42440a:	add    esp,0x10
  42440d:	push   0x7e
  42440f:	call   0x42604a
  424414:	add    esp,0x4
  424417:	push   0x11
  424419:	push   0x46
  42441b:	push   0x60d35600
  424420:	push   0x18
  424422:	call   0x4259e8
  424427:	add    esp,0x10
  42442a:	pop    edi
  42442b:	call   0x42604a
  424430:	pop    esi
  424431:	push   0x28a06400
  424436:	call   0x4259e8
  42443b:	add    esp,0x4
  42443e:	push   0x24
  424440:	call   0x4259e8
  424445:	add    esp,0x4
  424448:	pop    ebx
  424449:	push   0xfcf42a00
  42444e:	push   0xffffffa0
  424450:	push   0xe
  424452:	push   0x31
  424454:	call   0x4259e8
  424459:	add    esp,0x10
  42445c:	call   0x425ed2
  424461:	leave  
  424462:	ret    
  424463:	int3   
  424464:	int3   
  424465:	int3   
  424466:	int3   
  424467:	int3   
  424468:	push   ebp
  424469:	mov    ebp,esp
  42446b:	sub    esp,0x4c
  42446e:	call   0x425afe
  424473:	push   ebx
  424474:	push   0xffffffc8
  424476:	push   0xe4b9da00
  42447b:	push   0x8015a200
  424480:	call   0x42604a
  424485:	add    esp,0xc
  424488:	push   esi
  424489:	push   0xfffffff2
  42448b:	push   0x7072a100
  424490:	push   0x8ef22500
  424495:	push   0xffffffba
  424497:	call   0x425ed2
  42449c:	add    esp,0x10
  42449f:	push   edi
  4244a0:	mov    DWORD PTR [ebp-0x10],eax
  4244a3:	mov    eax,DWORD PTR [ebp-0x10]
  4244a6:	call   0x4256cb
  4244ab:	mov    DWORD PTR [ebp-0x18],0x5109bbd2
  4244b2:	mov    ecx,eax
  4244b4:	cmp    ecx,0x1d
  4244b7:	jne    0x4244c5
  4244b9:	add    ecx,ecx
  4244bb:	push   0x7b
  4244bd:	call   0x42604a
  4244c2:	add    esp,0x4
  4244c5:	call   0x424dbc
  4244ca:	add    DWORD PTR [ebp-0x10],eax
  4244cd:	mov    DWORD PTR [ebp-0x24],eax
  4244d0:	mov    esi,DWORD PTR [ebp-0x10]
  4244d3:	push   0xb
  4244d5:	call   0x42604a
  4244da:	add    esp,0x4
  4244dd:	xor    ecx,ecx
  4244df:	push   0xfc9a1500
  4244e4:	push   0xa4868c00
  4244e9:	push   0x3ea22b00
  4244ee:	call   0x425ed2
  4244f3:	add    esp,0xc
  4244f6:	push   0x7a
  4244f8:	push   0xffffffa1
  4244fa:	push   0x21
  4244fc:	push   0xffffffaf
  4244fe:	call   0x425ed2
  424503:	add    esp,0x10
  424506:	push   0xaeee2000
  42450b:	push   0xffffffe2
  42450d:	call   0x425afe
  424512:	add    esp,0x8
  424515:	push   0xffffffbd
  424517:	call   0x4259e8
  42451c:	add    esp,0x4
  42451f:	cmp    esi,eax
  424521:	je     0x42453b
  424523:	mov    ecx,DWORD PTR [ebp-0x10]
  424526:	push   0xbeea3d00
  42452b:	call   0x425ed2
  424530:	add    esp,0x4
  424533:	call   0x425afe
  424538:	mov    DWORD PTR [ebp-0x10],esi
  42453b:	push   0x4ef02200
  424540:	push   0xc45d3a00
  424545:	call   0x4256cb
  42454a:	add    esp,0x8
  42454d:	call   0x424dbc
  424552:	mov    ecx,DWORD PTR [ebp-0x10]
  424555:	mov    esi,DWORD PTR ds:0x44f070
  42455b:	sub    ecx,esi
  42455d:	sub    DWORD PTR [ebp-0x10],ecx
  424560:	mov    DWORD PTR [ebp-0x1c],eax
  424563:	push   0x5eb35400
  424568:	push   0xe4b21000
  42456d:	push   0x4028900
  424572:	call   0x4259e8
  424577:	add    esp,0xc
  42457a:	call   0x424dbc
  42457f:	mov    ecx,DWORD PTR [ebp-0x10]
  424582:	sub    DWORD PTR [ebp-0x10],ecx
  424585:	mov    DWORD PTR [ebp-0xc],eax
  424588:	push   0x3d
  42458a:	push   0x4c
  42458c:	call   0x425afe
  424591:	add    esp,0x8
  424594:	mov    eax,DWORD PTR [ebp-0x1c]
  424597:	add    esi,esi
  424599:	cmp    eax,0x3956
  42459e:	je     0x4245a3
  4245a0:	add    DWORD PTR [ebp-0x10],esi
  4245a3:	sub    eax,DWORD PTR [ebp-0x24]
  4245a6:	cmp    eax,0x6d
  4245a9:	jne    0x4245bf
  4245ab:	test   eax,0x92
  4245b0:	je     0x4245bf
  4245b2:	sub    esi,eax
  4245b4:	cmp    esi,DWORD PTR ds:0x44f070
  4245ba:	jne    0x4245bf
  4245bc:	add    DWORD PTR [ebp-0x10],esi
  4245bf:	xor    eax,0x6d3b5203
  4245c4:	mov    DWORD PTR [ebp-0x10],eax
  4245c7:	mov    esi,DWORD PTR [ebp-0xc]
  4245ca:	mov    edx,DWORD PTR ds:0x44f070
  4245d0:	xor    DWORD PTR [ebp-0x10],edx
  4245d3:	sub    esi,DWORD PTR [ebp-0x1c]
  4245d6:	mov    ecx,DWORD PTR [ebp-0x10]
  4245d9:	or     DWORD PTR [ebp-0x10],esi
  4245dc:	cmp    eax,ecx
  4245de:	jne    0x424692
  4245e4:	xor    ebx,ebx
  4245e6:	mov    edi,0x8e
  4245eb:	cmp    ecx,DWORD PTR [ebp-0x2c]
  4245ee:	je     0x424692
  4245f4:	add    edi,edx
  4245f6:	mov    DWORD PTR [ebp-0x10],edi
  4245f9:	mov    edi,DWORD PTR [ebp-0x10]
  4245fc:	mov    edx,0x51
  424601:	cmp    edi,DWORD PTR ds:0x44f070
  424607:	je     0x424692
  42460d:	sub    ebx,esi
  42460f:	sub    edx,esi
  424611:	add    edi,eax
  424613:	add    edi,esi
  424615:	add    edi,eax
  424617:	add    DWORD PTR [ebp-0x10],ebx
  42461a:	cmp    edi,DWORD PTR ds:0x44f070
  424620:	je     0x424692
  424622:	and    edx,esi
  424624:	cmp    edi,DWORD PTR [ebp-0x8]
  424627:	je     0x424692
  424629:	mov    ebx,DWORD PTR [ebp-0x10]
  42462c:	cmp    ecx,DWORD PTR ds:0x44f070
  424632:	je     0x424692
  424634:	cmp    ebx,0xffffff8f
  424637:	jne    0x424692
  424639:	cmp    edx,DWORD PTR ds:0x44f070
  42463f:	je     0x424692
  424641:	add    DWORD PTR [ebp-0x10],ecx
  424644:	sub    edx,ecx
  424646:	mov    ecx,eax
  424648:	or     DWORD PTR [ebp-0x10],edx
  42464b:	sub    DWORD PTR [ebp-0x10],eax
  42464e:	add    ecx,edi
  424650:	cmp    ecx,edi
  424652:	je     0x424692
  424654:	mov    edi,0x3ca80201
  424659:	mov    edx,DWORD PTR [ebp-0x10]
  42465c:	or     DWORD PTR [ebp-0x10],ebx
  42465f:	add    DWORD PTR [ebp-0x10],edx
  424662:	add    DWORD PTR [ebp-0x10],edi
  424665:	or     ecx,esi
  424667:	or     ecx,edi
  424669:	add    ecx,edx
  42466b:	add    ecx,ecx
  42466d:	sub    ecx,esi
  42466f:	sub    DWORD PTR [ebp-0x10],eax
  424672:	cmp    ecx,0x22
  424675:	je     0x424692
  424677:	mov    ebx,0x3b
  42467c:	sub    ecx,ebx
  42467e:	xor    edx,edx
  424680:	add    ecx,ebx
  424682:	add    edx,edi
  424684:	or     ecx,ebx
  424686:	sub    edx,edi
  424688:	and    ecx,esi
  42468a:	sub    DWORD PTR [ebp-0x10],ecx
  42468d:	sub    edx,edi
  42468f:	xor    DWORD PTR [ebp-0x10],edx
  424692:	xor    esi,0x6d3b5206
  424698:	test   esi,0xaabc
  42469e:	je     0x4246ad
  4246a0:	sub    ecx,esi
  4246a2:	mov    edi,0x1b
  4246a7:	sub    DWORD PTR [ebp-0x10],ecx
  4246aa:	sub    DWORD PTR [ebp-0x10],edi
  4246ad:	cmp    eax,esi
  4246af:	je     0x424992
  4246b5:	xor    eax,eax
  4246b7:	mov    ebx,DWORD PTR [ebp-0x10]
  4246ba:	add    DWORD PTR [ebp-0x10],ebx
  4246bd:	and    eax,esi
  4246bf:	push   0xffffffb4
  4246c1:	call   0x4259e8
  4246c6:	add    esp,0x4
  4246c9:	mov    esi,0x300a9939
  4246ce:	push   0xffffffe6
  4246d0:	push   0x4eeb8a00
  4246d5:	push   0x587e9b00
  4246da:	call   0x42604a
  4246df:	add    esp,0xc
  4246e2:	push   0x2c43a000
  4246e7:	call   0x425ed2
  4246ec:	add    esp,0x4
  4246ef:	add    esi,0xd03a5737
  4246f5:	push   0xbed61700
  4246fa:	push   0xffffffd2
  4246fc:	push   0xbe87b000
  424701:	call   0x4256cb
  424706:	add    esp,0xc
  424709:	push   esi
  42470a:	call   DWORD PTR ds:0x44ee34
  424710:	mov    esi,edi
  424712:	and    esi,eax
  424714:	mov    ebx,DWORD PTR ds:0x44f084
  42471a:	test   esi,0xcb
  424720:	je     0x4247b4
  424726:	cmp    esi,DWORD PTR ds:0x44f070
  42472c:	jne    0x4247b4
  424732:	mov    DWORD PTR [ebp-0x10],esi
  424735:	mov    edi,esi
  424737:	mov    esi,DWORD PTR [ebp-0x10]
  42473a:	cmp    eax,esi
  42473c:	je     0x4247b4
  42473e:	mov    edx,0x34
  424743:	cmp    eax,0x67
  424746:	jne    0x4247b4
  424748:	add    DWORD PTR [ebp-0x10],edx
  42474b:	mov    edx,DWORD PTR [ebp-0x10]
  42474e:	sub    esi,edi
  424750:	cmp    edi,0x4d08
  424756:	je     0x4247b4
  424758:	mov    edi,DWORD PTR [ebp-0x10]
  42475b:	add    edx,esi
  42475d:	add    edx,eax
  42475f:	mov    ecx,DWORD PTR [ebp-0x10]
  424762:	sub    edi,ecx
  424764:	cmp    ecx,0x20054081
  42476a:	je     0x4247b4
  42476c:	mov    esi,edx
  42476e:	cmp    esi,0x48
  424771:	jne    0x4247b4
  424773:	or     DWORD PTR [ebp-0x10],esi
  424776:	mov    edx,0x18
  42477b:	cmp    ecx,eax
  42477d:	jne    0x4247b4
  42477f:	mov    esi,0x8b
  424784:	add    edx,edx
  424786:	mov    ecx,esi
  424788:	and    edx,ebx
  42478a:	sub    edi,ecx
  42478c:	sub    edi,esi
  42478e:	sub    edx,eax
  424790:	xor    DWORD PTR [ebp-0x10],ebx
  424793:	cmp    edi,ebx
  424795:	je     0x4247b4
  424797:	mov    ecx,0x1d
  42479c:	cmp    edx,eax
  42479e:	jne    0x4247b4
  4247a0:	mov    esi,0x24254004
  4247a5:	mov    ebx,DWORD PTR [ebp-0x10]
  4247a8:	sub    edx,esi
  4247aa:	sub    ebx,edi
  4247ac:	and    edx,ebx
  4247ae:	sub    DWORD PTR [ebp-0x10],ecx
  4247b1:	add    DWORD PTR [ebp-0x10],edx
  4247b4:	or     eax,eax
  4247b6:	je     0x424992
  4247bc:	mov    ecx,DWORD PTR ds:0x44f084
  4247c2:	mov    DWORD PTR [ebp-0x10],ecx
  4247c5:	add    DWORD PTR [ebp-0x18],0x55433bea
  4247cc:	sub    edx,ecx
  4247ce:	add    DWORD PTR [ebp-0x10],edx
  4247d1:	lea    edx,[eax+0x134]
  4247d7:	mov    ecx,esi
  4247d9:	mov    esi,0x7e5e
  4247de:	add    DWORD PTR [ebp-0x10],ecx
  4247e1:	sub    esi,ebx
  4247e3:	cmp    esi,0x73
  4247e6:	je     0x424855
  4247e8:	or     esi,ebx
  4247ea:	mov    edi,DWORD PTR [ebp-0x10]
  4247ed:	sub    edi,ecx
  4247ef:	add    esi,esi
  4247f1:	add    DWORD PTR [ebp-0x10],edi
  4247f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4247f7:	add    esi,edx
  4247f9:	cmp    edi,DWORD PTR ds:0x44f070
  4247ff:	jne    0x424855
  424801:	add    esi,esi
  424803:	add    DWORD PTR [ebp-0x10],ecx
  424806:	or     esi,ebx
  424808:	add    esi,eax
  42480a:	mov    edi,DWORD PTR [ebp-0x10]
  42480d:	xor    ecx,ecx
  42480f:	add    esi,edx
  424811:	add    DWORD PTR [ebp-0x10],esi
  424814:	and    ecx,esi
  424816:	cmp    edi,0x3e
  424819:	je     0x424855
  42481b:	sub    ecx,ebx
  42481d:	xor    esi,esi
  42481f:	xor    DWORD PTR [ebp-0x10],ecx
  424822:	sub    esi,edx
  424824:	mov    ecx,DWORD PTR [ebp-0x10]
  424827:	mov    DWORD PTR [ebp-0x30],esi
  42482a:	or     edi,esi
  42482c:	cmp    edi,esi
  42482e:	je     0x424855
  424830:	mov    esi,DWORD PTR ds:0x44f070
  424836:	mov    eax,DWORD PTR [ebp-0x10]
  424839:	sub    edi,edx
  42483b:	cmp    eax,0xffffffa7
  42483e:	je     0x424855
  424840:	or     ecx,ebx
  424842:	add    DWORD PTR [ebp-0x10],edi
  424845:	add    DWORD PTR [ebp-0x30],ecx
  424848:	test   eax,0xf8
  42484d:	je     0x424855
  42484f:	mov    DWORD PTR [ebp-0x30],eax
  424852:	add    DWORD PTR [ebp-0x30],esi
  424855:	inc    edx
  424856:	sub    edi,ebx
  424858:	mov    ecx,DWORD PTR [ebp-0x10]
  42485b:	add    ecx,esi
  42485d:	mov    esi,DWORD PTR [ebp-0x10]
  424860:	cmp    esi,DWORD PTR [ebp-0x48]
  424863:	jne    0x424927
  424869:	cmp    ecx,edx
  42486b:	je     0x424927
  424871:	add    edi,edx
  424873:	cmp    esi,edx
  424875:	jne    0x424927
  42487b:	sub    ecx,edi
  42487d:	cmp    esi,DWORD PTR [ebp-0x48]
  424880:	jne    0x424927
  424886:	and    ecx,ebx
  424888:	mov    edi,DWORD PTR [ebp-0x10]
  42488b:	and    ecx,edi
  42488d:	cmp    esi,0x7b
  424890:	jne    0x424927
  424896:	mov    edi,DWORD PTR [ebp-0x10]
  424899:	cmp    ecx,DWORD PTR ds:0x44f070
  42489f:	je     0x424927
  4248a5:	sub    DWORD PTR [ebp-0x10],esi
  4248a8:	cmp    edi,0xffffffac
  4248ab:	jne    0x424927
  4248ad:	cmp    ecx,DWORD PTR ds:0x44f084
  4248b3:	jne    0x424927
  4248b5:	test   edi,0xb2ef
  4248bb:	jne    0x424927
  4248bd:	sub    DWORD PTR [ebp-0x10],edi
  4248c0:	cmp    edx,DWORD PTR [ebp-0x20]
  4248c3:	jne    0x424927
  4248c5:	mov    edi,0x64
  4248ca:	xor    esi,esi
  4248cc:	cmp    edx,DWORD PTR [ebp-0x3c]
  4248cf:	jne    0x424927
  4248d1:	sub    DWORD PTR [ebp-0x10],ecx
  4248d4:	mov    ecx,DWORD PTR [ebp-0x10]
  4248d7:	add    DWORD PTR [ebp-0x10],ecx
  4248da:	add    DWORD PTR [ebp-0x10],edi
  4248dd:	or     ecx,ebx
  4248df:	sub    ecx,edi
  4248e1:	add    DWORD PTR [ebp-0x10],ecx
  4248e4:	add    esi,esi
  4248e6:	sub    esi,edx
  4248e8:	and    esi,edi
  4248ea:	or     esi,ebx
  4248ec:	sub    esi,ebx
  4248ee:	cmp    esi,DWORD PTR [ebp-0x10]
  4248f1:	jne    0x424927
  4248f3:	mov    ecx,DWORD PTR [ebp-0x10]
  4248f6:	mov    edi,DWORD PTR [ebp-0x10]
  4248f9:	test   ecx,0xb8
  4248ff:	jne    0x424927
  424901:	sub    edi,ecx
  424903:	mov    ecx,0x30
  424908:	add    esi,ecx
  42490a:	sub    DWORD PTR [ebp-0x10],esi
  42490d:	mov    ecx,0x16
  424912:	sub    edi,esi
  424914:	xor    DWORD PTR [ebp-0x10],ecx
  424917:	sub    DWORD PTR [ebp-0x10],esi
  42491a:	sub    edi,ecx
  42491c:	test   edi,0x77
  424922:	jne    0x424927
  424924:	sub    DWORD PTR [ebp-0x10],edi
  424927:	mov    esi,DWORD PTR [edx]
  424929:	mov    ecx,0x91
  42492e:	sub    DWORD PTR [ebp-0x10],ecx
  424931:	sub    esi,0x85584858
  424937:	mov    ecx,DWORD PTR [ebp-0x10]
  42493a:	add    ecx,ecx
  42493c:	cmp    ebx,0x2f
  42493f:	jne    0x42495a
  424941:	cmp    esi,DWORD PTR ds:0x44f084
  424947:	jne    0x42495a
  424949:	sub    DWORD PTR [ebp-0x10],esi
  42494c:	cmp    ecx,DWORD PTR ds:0x44f070
  424952:	jne    0x42495a
  424954:	add    DWORD PTR [ebp-0x10],edi
  424957:	add    DWORD PTR [ebp-0x10],ecx
  42495a:	cmp    esi,0xef1b26f8
  424960:	jne    0x4247d7
  424966:	sub    edi,ecx
  424968:	cmp    edi,0xe2e6
  42496e:	je     0x424973
  424970:	sub    DWORD PTR [ebp-0x10],edi
  424973:	mov    esi,DWORD PTR [edx+0x4]
  424976:	mov    DWORD PTR [ebp-0x10],eax
  424979:	push   0x5c85d300
  42497e:	push   0xffffffd2
  424980:	push   0xfcf4fa00
  424985:	push   0xffffff92
  424987:	call   0x425afe
  42498c:	add    esp,0x10
  42498f:	sub    DWORD PTR [ebp-0x18],esi
  424992:	push   0xffffffc9
  424994:	push   0x5c80b000
  424999:	push   0x48
  42499b:	push   0x480adc00
  4249a0:	push   0x10
  4249a2:	call   0x4259e8
  4249a7:	add    esp,0x14
  4249aa:	call   0x425ed2
  4249af:	add    edi,ebx
  4249b1:	push   0x84773e00
  4249b6:	push   0xfffffff5
  4249b8:	push   0xffffffbd
  4249ba:	push   0xffffffc3
  4249bc:	push   0x84252400
  4249c1:	call   0x425ed2
  4249c6:	add    esp,0x14
  4249c9:	push   0xffffffe1
  4249cb:	call   0x4256cb
  4249d0:	add    esp,0x4
  4249d3:	mov    ebx,DWORD PTR ds:0x44f048
  4249d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4249dc:	push   0x4045bf00
  4249e1:	push   0x57
  4249e3:	push   0xffffff96
  4249e5:	call   0x42604a
  4249ea:	add    esp,0xc
  4249ed:	push   0xb86e7900
  4249f2:	push   0xa486b600
  4249f7:	push   0xffffffc4
  4249f9:	push   0xffffffa1
  4249fb:	push   0xfffffff0
  4249fd:	call   0x4259e8
  424a02:	add    esp,0x14
  424a05:	push   0x5c000600
  424a0a:	push   0xf4683600
  424a0f:	push   0xef4d200
  424a14:	push   0x9ec08600
  424a19:	push   0x8e88bc00
  424a1e:	call   0x4256cb
  424a23:	add    esp,0x14
  424a26:	or     ebx,esi
  424a28:	call   0x425afe
  424a2d:	push   0xffffff95
  424a2f:	push   0xfc975e00
  424a34:	call   0x4256cb
  424a39:	add    esp,0x8
  424a3c:	push   0x41ca300
  424a41:	call   0x4259e8
  424a46:	add    esp,0x4
  424a49:	push   0x3c7c3700
  424a4e:	call   0x4256cb
  424a53:	add    esp,0x4
  424a56:	sub    ebx,esi
  424a58:	sub    DWORD PTR [ebp-0x10],edi
  424a5b:	cmp    ebx,0x52f5
  424a61:	je     0x424bd6
  424a67:	test   ebx,0xc1
  424a6d:	jne    0x424bd6
  424a73:	push   0xffffff88
  424a75:	call   0x425afe
  424a7a:	add    esp,0x4
  424a7d:	mov    edx,0xbd
  424a82:	mov    esi,0xa0202805
  424a87:	call   0x425ed2
  424a8c:	sub    DWORD PTR [ebp-0x10],eax
  424a8f:	push   0x2c
  424a91:	push   0x59
  424a93:	call   0x425ed2
  424a98:	add    esp,0x8
  424a9b:	add    ebx,edi
  424a9d:	add    DWORD PTR [ebp-0x10],ebx
  424aa0:	add    esi,eax
  424aa2:	push   0x24cda600
  424aa7:	push   0xfcd59d00
  424aac:	push   0x2eef5300
  424ab1:	push   0x4b
  424ab3:	push   0x5c920e00
  424ab8:	call   0x425ed2
  424abd:	add    esp,0x14
  424ac0:	push   0xffffff87
  424ac2:	push   0x9c27fe00
  424ac7:	push   0x6eab4200
  424acc:	push   0xfffffff4
  424ace:	call   0x425ed2
  424ad3:	add    esp,0x10
  424ad6:	add    esi,edi
  424ad8:	push   0x780a2000
  424add:	push   0xeef25b00
  424ae2:	push   0x14
  424ae4:	push   0xe4d52a00
  424ae9:	push   0x67
  424aeb:	call   0x425ed2
  424af0:	add    esp,0x14
  424af3:	call   0x425afe
  424af8:	push   0x5cac4800
  424afd:	call   0x4259e8
  424b02:	add    esp,0x4
  424b05:	push   0x10
  424b07:	call   0x42604a
  424b0c:	add    esp,0x4
  424b0f:	push   0x34
  424b11:	call   0x42604a
  424b16:	add    esp,0x4
  424b19:	push   0x280f9a00
  424b1e:	push   0x64deff00
  424b23:	call   0x42604a
  424b28:	add    esp,0x8
  424b2b:	cmp    esi,DWORD PTR ds:0x44f048
  424b31:	jne    0x424bd6
  424b37:	sub    esi,eax
  424b39:	mov    ebx,esi
  424b3b:	cmp    ebx,0xffffffce
  424b3e:	jne    0x424bd6
  424b44:	mov    edi,DWORD PTR [ebp-0x10]
  424b47:	push   0xffffffa0
  424b49:	push   0x21
  424b4b:	push   0x486a7400
  424b50:	call   0x42604a
  424b55:	add    esp,0xc
  424b58:	call   0x4256cb
  424b5d:	cmp    ebx,DWORD PTR ds:0x44f048
  424b63:	je     0x424bd6
  424b65:	and    ebx,edi
  424b67:	push   0x72
  424b69:	push   0xe4c50400
  424b6e:	push   0xdcec0800
  424b73:	push   0x68013200
  424b78:	push   0xe85a9e00
  424b7d:	call   0x42604a
  424b82:	add    esp,0x14
  424b85:	push   0xfffffffd
  424b87:	push   0x68142700
  424b8c:	call   0x425ed2
  424b91:	add    esp,0x8
  424b94:	call   0x425afe
  424b99:	push   0x1d
  424b9b:	call   0x42604a
  424ba0:	add    esp,0x4
  424ba3:	mov    edi,DWORD PTR ds:0x44f070
  424ba9:	add    DWORD PTR [ebp-0x10],ebx
  424bac:	cmp    ebx,0x26
  424baf:	je     0x424bd6
  424bb1:	push   0xffffffc2
  424bb3:	call   0x4259e8
  424bb8:	add    esp,0x4
  424bbb:	push   0x6c
  424bbd:	push   0x3e883300
  424bc2:	push   0xffffff9e
  424bc4:	push   0x65ff00
  424bc9:	push   0x3d
  424bcb:	call   0x425ed2
  424bd0:	add    esp,0x14
  424bd3:	add    DWORD PTR [ebp-0x10],edi
  424bd6:	mov    ecx,DWORD PTR [ebp+0xc]
  424bd9:	mov    eax,DWORD PTR ds:0x44f070
  424bdf:	test   ecx,0xba
  424be5:	je     0x424c70
  424beb:	xor    ebx,ebx
  424bed:	sub    ebx,edi
  424bef:	mov    edx,DWORD PTR [ebp-0x10]
  424bf2:	sub    edx,ecx
  424bf4:	cmp    edx,DWORD PTR [ebp-0x30]
  424bf7:	jne    0x424c70
  424bf9:	sub    DWORD PTR [ebp-0x10],edx
  424bfc:	mov    esi,DWORD PTR [ebp-0x10]
  424bff:	mov    eax,0xf4
  424c04:	add    DWORD PTR [ebp-0x10],eax
  424c07:	cmp    esi,0x5e
  424c0a:	je     0x424c70
  424c0c:	mov    edx,DWORD PTR [ebp-0x10]
  424c0f:	add    edx,eax
  424c11:	mov    eax,DWORD PTR [ebp-0x10]
  424c14:	add    esi,ecx
  424c16:	add    ebx,eax
  424c18:	cmp    ebx,DWORD PTR ds:0x44f048
  424c1e:	jne    0x424c70
  424c20:	cmp    edx,0x7109
  424c26:	je     0x424c70
  424c28:	sub    DWORD PTR [ebp-0x10],ebx
  424c2b:	add    DWORD PTR [ebp-0x10],edx
  424c2e:	cmp    esi,DWORD PTR ds:0x44f048
  424c34:	jne    0x424c70
  424c36:	cmp    ebx,DWORD PTR [ebp-0x2c]
  424c39:	jne    0x424c70
  424c3b:	cmp    esi,DWORD PTR [ebp-0x28]
  424c3e:	jne    0x424c70
  424c40:	mov    eax,DWORD PTR [ebp-0x10]
  424c43:	mov    edx,0x9f
  424c48:	cmp    esi,0x5bc9
  424c4e:	je     0x424c70
  424c50:	sub    DWORD PTR [ebp-0x10],esi
  424c53:	mov    ebx,DWORD PTR [ebp-0x10]
  424c56:	add    DWORD PTR [ebp-0x10],ebx
  424c59:	mov    esi,0xafae
  424c5e:	add    DWORD PTR [ebp-0x10],edx
  424c61:	cmp    eax,0xffffff9f
  424c64:	jne    0x424c69
  424c66:	add    DWORD PTR [ebp-0x10],eax
  424c69:	and    esi,ebx
  424c6b:	and    esi,edi
  424c6d:	sub    DWORD PTR [ebp-0x10],esi
  424c70:	mov    edi,DWORD PTR [ebp-0x18]
  424c73:	mov    esi,DWORD PTR [ebp-0x10]
  424c76:	cmp    esi,DWORD PTR [ebp-0x44]
  424c79:	jne    0x424d80
  424c7f:	mov    edx,DWORD PTR ds:0x44f084
  424c85:	cmp    esi,0x9
  424c88:	jne    0x424d80
  424c8e:	mov    ebx,DWORD PTR [ebp-0x10]
  424c91:	mov    eax,DWORD PTR [ebp-0x10]
  424c94:	add    DWORD PTR [ebp-0x10],eax
  424c97:	mov    DWORD PTR [ebp-0x10],ebx
  424c9a:	cmp    edi,DWORD PTR [ebp-0x4]
  424c9d:	jne    0x424d80
  424ca3:	cmp    edi,0x40601c11
  424ca9:	jne    0x424d80
  424caf:	mov    ebx,eax
  424cb1:	mov    eax,DWORD PTR [ebp-0x10]
  424cb4:	cmp    ecx,0x61
  424cb7:	je     0x424d80
  424cbd:	cmp    ebx,0x12
  424cc0:	je     0x424d80
  424cc6:	add    DWORD PTR [ebp-0x10],ebx
  424cc9:	cmp    edi,DWORD PTR [ebp-0x8]
  424ccc:	je     0x424d80
  424cd2:	mov    ebx,DWORD PTR [ebp-0x10]
  424cd5:	cmp    ebx,0xfffffff3
  424cd8:	jne    0x424d80
  424cde:	sub    ebx,esi
  424ce0:	sub    edx,edi
  424ce2:	and    eax,esi
  424ce4:	sub    ebx,ecx
  424ce6:	cmp    edi,0x6c
  424ce9:	jne    0x424d80
  424cef:	test   eax,0xb2
  424cf4:	jne    0x424d80
  424cfa:	mov    esi,DWORD PTR [ebp-0x10]
  424cfd:	or     DWORD PTR [ebp-0x10],esi
  424d00:	test   ecx,0x21
  424d06:	jne    0x424d80
  424d08:	mov    esi,0x94
  424d0d:	cmp    ecx,eax
  424d0f:	jne    0x424d80
  424d11:	xor    DWORD PTR [ebp-0x10],esi
  424d14:	mov    esi,DWORD PTR [ebp-0x10]
  424d17:	test   ecx,0xf3
  424d1d:	je     0x424d80
  424d1f:	cmp    ebx,esi
  424d21:	jne    0x424d80
  424d23:	add    DWORD PTR [ebp-0x10],eax
  424d26:	mov    eax,DWORD PTR ds:0x44f048
  424d2c:	test   edx,0x64
  424d32:	jne    0x424d80
  424d34:	or     edx,edi
  424d36:	cmp    edx,DWORD PTR [ebp-0x8]
  424d39:	je     0x424d80
  424d3b:	sub    DWORD PTR [ebp-0x10],eax
  424d3e:	cmp    edx,DWORD PTR [ebp-0x34]
  424d41:	je     0x424d80
  424d43:	add    ebx,ebx
  424d45:	mov    eax,DWORD PTR ds:0x44f070
  424d4b:	sub    DWORD PTR [ebp-0x10],ebx
  424d4e:	cmp    esi,DWORD PTR ds:0x44f084
  424d54:	jne    0x424d7b
  424d56:	cmp    edx,DWORD PTR [ebp-0x20]
  424d59:	jne    0x424d7b
  424d5b:	add    DWORD PTR [ebp-0x10],esi
  424d5e:	mov    esi,DWORD PTR [ebp-0x10]
  424d61:	add    edx,edx
  424d63:	mov    ebx,DWORD PTR ds:0x44f080
  424d69:	add    ebx,edx
  424d6b:	sub    ebx,edx
  424d6d:	cmp    esi,0x4799
  424d73:	je     0x424d7b
  424d75:	add    DWORD PTR [ebp-0x10],ebx
  424d78:	add    DWORD PTR [ebp-0x10],esi
  424d7b:	add    eax,edx
  424d7d:	add    DWORD PTR [ebp-0x10],eax
  424d80:	mov    DWORD PTR [ecx+0x0],edi
  424d83:	push   0xcc33fc00
  424d88:	call   0x4256cb
  424d8d:	add    esp,0x4
  424d90:	or     DWORD PTR [ebp-0x10],ebx
  424d93:	pop    edi
  424d94:	cmp    edi,DWORD PTR [ebp-0x38]
  424d97:	je     0x424d9c
  424d99:	sub    DWORD PTR [ebp-0x10],edi
  424d9c:	pop    esi
  424d9d:	call   0x425ed2
  424da2:	push   0xfcfd3100
  424da7:	call   0x42604a
  424dac:	add    esp,0x4
  424daf:	pop    ebx
  424db0:	add    DWORD PTR [ebp-0x10],edi
  424db3:	leave  
  424db4:	ret    0x8
  424db7:	int3   
  424db8:	int3   
  424db9:	int3   
  424dba:	int3   
  424dbb:	int3   
  424dbc:	push   ebp
  424dbd:	mov    ebp,esp
  424dbf:	sub    esp,0x20
  424dc2:	push   0x4e83a500
  424dc7:	push   0xffffffb1
  424dc9:	push   0x50622d00
  424dce:	push   0x3e
  424dd0:	call   0x425ed2
  424dd5:	add    esp,0x10
  424dd8:	push   ebx
  424dd9:	push   0x680f6000
  424dde:	push   0x64ece800
  424de3:	push   0x63
  424de5:	push   0x42
  424de7:	push   0xffffffa3
  424de9:	call   0x425ed2
  424dee:	add    esp,0x14
  424df1:	push   esi
  424df2:	push   0x100b9a00
  424df7:	push   0xeeafc100
  424dfc:	push   0x1c05ad00
  424e01:	push   0x10081e00
  424e06:	push   0x3d
  424e08:	call   0x425afe
  424e0d:	add    esp,0x14
  424e10:	push   edi
  424e11:	push   0x33
  424e13:	push   0x4ed21a00
  424e18:	call   0x4256cb
  424e1d:	add    esp,0x8
  424e20:	push   0x15
  424e22:	push   0x804dec00
  424e27:	push   0xffffff82
  424e29:	push   0xefbef00
  424e2e:	push   0xffffff91
  424e30:	call   0x4256cb
  424e35:	add    esp,0x14
  424e38:	push   0x24d57e00
  424e3d:	call   0x425ed2
  424e42:	add    esp,0x4
  424e45:	call   0x42604a
  424e4a:	push   0x9062e800
  424e4f:	push   0xbc052300
  424e54:	push   0xffffff9e
  424e56:	call   0x4256cb
  424e5b:	add    esp,0xc
  424e5e:	rdtsc  
  424e60:	add    edx,edx
  424e62:	mov    ebx,0x82
  424e67:	mov    DWORD PTR [ebp-0x10],eax
  424e6a:	mov    edi,DWORD PTR ds:0x44f064
  424e70:	sub    DWORD PTR [ebp-0x10],edx
  424e73:	sub    ebx,eax
  424e75:	add    DWORD PTR [ebp-0x10],edi
  424e78:	add    ebx,eax
  424e7a:	sub    DWORD PTR [ebp-0x10],edx
  424e7d:	add    ebx,edx
  424e7f:	sub    edx,eax
  424e81:	or     DWORD PTR [ebp-0x10],ebx
  424e84:	sub    edx,ebx
  424e86:	or     edx,eax
  424e88:	and    edx,eax
  424e8a:	sub    edx,eax
  424e8c:	sub    DWORD PTR [ebp-0x10],edx
  424e8f:	mov    esi,DWORD PTR [ebp-0x10]
  424e92:	mov    ebx,DWORD PTR ds:0x44f064
  424e98:	add    ebx,esi
  424e9a:	cmp    ebx,0x1b
  424e9d:	je     0x424eb0
  424e9f:	mov    edx,DWORD PTR [ebp-0x10]
  424ea2:	or     DWORD PTR [ebp-0x10],ebx
  424ea5:	mov    esi,DWORD PTR ds:0x44f054
  424eab:	and    edx,esi
  424ead:	add    DWORD PTR [ebp-0x10],edx
  424eb0:	xor    edi,edi
  424eb2:	or     edi,edx
  424eb4:	xor    ebx,ebx
  424eb6:	cmp    edi,0x52
  424eb9:	je     0x424f1f
  424ebb:	mov    esi,DWORD PTR [ebp-0x10]
  424ebe:	mov    ecx,DWORD PTR ds:0x44f064
  424ec4:	sub    DWORD PTR [ebp-0x10],ecx
  424ec7:	mov    DWORD PTR [ebp-0x10],edi
  424eca:	cmp    esi,0xbd48
  424ed0:	jne    0x424f1f
  424ed2:	mov    ecx,DWORD PTR ds:0x44f054
  424ed8:	sub    esi,eax
  424eda:	test   esi,0x74
  424ee0:	jne    0x424f1f
  424ee2:	and    esi,eax
  424ee4:	mov    edi,0x24
  424ee9:	and    esi,ebx
  424eeb:	add    ecx,esi
  424eed:	add    DWORD PTR [ebp-0x10],eax
  424ef0:	mov    ebx,DWORD PTR [ebp-0x10]
  424ef3:	or     DWORD PTR [ebp-0x10],edx
  424ef6:	sub    DWORD PTR [ebp-0x10],edi
  424ef9:	xor    DWORD PTR [ebp-0x10],ebx
  424efc:	cmp    ebx,esi
  424efe:	jne    0x424f1f
  424f00:	mov    edi,DWORD PTR ds:0x44f054
  424f06:	mov    ebx,DWORD PTR [ebp-0x10]
  424f09:	cmp    ecx,0x6ad1
  424f0f:	jne    0x424f1f
  424f11:	sub    DWORD PTR [ebp-0x10],ecx
  424f14:	add    DWORD PTR [ebp-0x10],edi
  424f17:	mov    esi,edx
  424f19:	add    DWORD PTR [ebp-0x10],ebx
  424f1c:	add    DWORD PTR [ebp-0x10],esi
  424f1f:	pop    edi
  424f20:	sub    DWORD PTR [ebp-0x10],edi
  424f23:	pop    esi
  424f24:	xor    DWORD PTR [ebp-0x10],esi
  424f27:	pop    ebx
  424f28:	cmp    ebx,DWORD PTR [ebp-0x8]
  424f2b:	je     0x424f39
  424f2d:	cmp    ebx,0x3b
  424f30:	jne    0x424f39
  424f32:	cmp    ecx,esi
  424f34:	je     0x424f39
  424f36:	mov    DWORD PTR [ebp-0x10],ebx
  424f39:	leave  
  424f3a:	ret    
  424f3b:	int3   
  424f3c:	int3   
  424f3d:	int3   
  424f3e:	int3   
  424f3f:	int3   
  424f40:	push   ebp
  424f41:	mov    ebp,esp
  424f43:	sub    esp,0x40
  424f46:	push   0xffffffb5
  424f48:	push   0xffffffd6
  424f4a:	push   0xfc9a5400
  424f4f:	push   0xffffffc4
  424f51:	call   0x42604a
  424f56:	add    esp,0x10
  424f59:	push   ebx
  424f5a:	mov    DWORD PTR [ebp-0x28],eax
  424f5d:	push   0x74
  424f5f:	push   0xd421f500
  424f64:	call   0x4259e8
  424f69:	add    esp,0x8
  424f6c:	push   esi
  424f6d:	mov    eax,0x6
  424f72:	mov    edx,DWORD PTR [ebp-0x28]
  424f75:	push   0xffffffc2
  424f77:	push   0xffffffff
  424f79:	push   0x3e859f00
  424f7e:	call   0x425ed2
  424f83:	add    esp,0xc
  424f86:	call   0x4256cb
  424f8b:	push   edi
  424f8c:	sub    DWORD PTR [ebp-0x28],eax
  424f8f:	push   0x9efdd500
  424f94:	call   0x4259e8
  424f99:	add    esp,0x4
  424f9c:	mov    eax,DWORD PTR [ebp+0x10]
  424f9f:	mov    ecx,0x73
  424fa4:	xor    edi,edi
  424fa6:	cmp    eax,edi
  424fa8:	jne    0x424ffa
  424faa:	and    ecx,eax
  424fac:	mov    edx,DWORD PTR [ebp-0x28]
  424faf:	mov    esi,DWORD PTR [ebp-0x28]
  424fb2:	cmp    esi,0x47
  424fb5:	je     0x424ffa
  424fb7:	sub    DWORD PTR [ebp-0x28],edi
  424fba:	cmp    esi,0x3781
  424fc0:	je     0x424ffa
  424fc2:	mov    edi,0xf430
  424fc7:	test   ecx,0xdd
  424fcd:	je     0x424ffa
  424fcf:	cmp    eax,DWORD PTR [ebp-0x4]
  424fd2:	je     0x424ffa
  424fd4:	sub    esi,edx
  424fd6:	mov    edx,0x70118a
  424fdb:	mov    ebx,edx
  424fdd:	sub    DWORD PTR [ebp-0x28],esi
  424fe0:	cmp    ecx,edx
  424fe2:	jne    0x424ffa
  424fe4:	mov    esi,ebx
  424fe6:	sub    DWORD PTR [ebp-0x28],ecx
  424fe9:	add    edi,ecx
  424feb:	mov    ebx,0x43
  424ff0:	add    edi,edi
  424ff2:	add    DWORD PTR [ebp-0x28],edi
  424ff5:	add    esi,ebx
  424ff7:	add    DWORD PTR [ebp-0x28],esi
  424ffa:	mov    edx,DWORD PTR [ebp+0x8]
  424ffd:	mov    DWORD PTR [ebp-0x20],edx
  425000:	cmp    DWORD PTR [ebp+0xc],eax
  425003:	je     0x425077
  425005:	and    DWORD PTR [ebp-0x28],eax
  425008:	dec    DWORD PTR [ebp+0xc]
  42500b:	cmp    edx,DWORD PTR [ebp-0x8]
  42500e:	jne    0x425021
  425010:	cmp    edi,DWORD PTR [ebp-0x2c]
  425013:	jne    0x425021
  425015:	and    edi,ecx
  425017:	cmp    edi,DWORD PTR [ebp-0x4]
  42501a:	je     0x425021
  42501c:	mov    ecx,edi
  42501e:	add    DWORD PTR [ebp-0x28],ecx
  425021:	sub    DWORD PTR [edx],eax
  425023:	test   edi,0x9ebc
  425029:	jne    0x425037
  42502b:	test   eax,0x4e
  425030:	jne    0x425037
  425032:	add    esi,ecx
  425034:	add    DWORD PTR [ebp-0x20],esi
  425037:	neg    DWORD PTR [edx]
  425039:	mov    ebx,0xc1f1
  42503e:	add    DWORD PTR [ebp-0x20],ebx
  425041:	rol    DWORD PTR [edx],0x9
  425044:	test   ecx,0x3a06
  42504a:	jne    0x42504f
  42504c:	sub    DWORD PTR [ebp-0x28],edi
  42504f:	add    DWORD PTR [edx],0xd9466ce1
  425055:	add    ebx,eax
  425057:	cmp    ebx,ecx
  425059:	je     0x42505e
  42505b:	add    DWORD PTR [ebp-0x20],ebx
  42505e:	add    edx,0x4
  425061:	mov    ebx,0x7a
  425066:	test   edx,0x9162
  42506c:	je     0x425075
  42506e:	and    ebx,edi
  425070:	or     ebx,eax
  425072:	sub    DWORD PTR [ebp-0x20],ebx
  425075:	jmp    0x424ffd
  425077:	xor    DWORD PTR [ebp-0x20],edi
  42507a:	push   0x6eeb0e00
  42507f:	push   0x5cf68400
  425084:	call   0x4256cb
  425089:	add    esp,0x8
  42508c:	push   0x41
  42508e:	push   0xdecdf300
  425093:	call   0x4259e8
  425098:	add    esp,0x8
  42509b:	pop    edi
  42509c:	push   0xac488600
  4250a1:	push   0xa05ee700
  4250a6:	call   0x42604a
  4250ab:	add    esp,0x8
  4250ae:	pop    esi
  4250af:	mov    eax,DWORD PTR [ebp-0x28]
  4250b2:	push   0xffffffbe
  4250b4:	push   0x24a7eb00
  4250b9:	push   0xcec43d00
  4250be:	push   0xfc902400
  4250c3:	call   0x425afe
  4250c8:	add    esp,0x10
  4250cb:	pop    ebx
  4250cc:	mov    edx,DWORD PTR [ebp-0x28]
  4250cf:	push   0xa4cf6c00
  4250d4:	push   0x1f7900
  4250d9:	call   0x42604a
  4250de:	add    esp,0x8
  4250e1:	leave  
  4250e2:	ret    0xc
  4250e5:	int3   
  4250e6:	int3   
  4250e7:	int3   
  4250e8:	int3   
  4250e9:	int3   
  4250ea:	push   ebp
  4250eb:	mov    ebp,esp
  4250ed:	sub    esp,0x44
  4250f0:	push   0x44
  4250f2:	push   0x4f
  4250f4:	push   0xffffffb6
  4250f6:	push   0xfcabb800
  4250fb:	call   0x42604a
  425100:	add    esp,0x10
  425103:	push   ebx
  425104:	push   0x1b
  425106:	call   0x425afe
  42510b:	add    esp,0x4
  42510e:	push   0xfffffff6
  425110:	call   0x425afe
  425115:	add    esp,0x4
  425118:	push   esi
  425119:	cmp    eax,0x6f
  42511c:	jne    0x425136
  42511e:	push   0x70154d00
  425123:	push   0x8ef1c900
  425128:	push   0x5c
  42512a:	push   0x37
  42512c:	push   0xffffffa4
  42512e:	call   0x425ed2
  425133:	add    esp,0x14
  425136:	push   0x69
  425138:	push   0xce9afc00
  42513d:	push   0x72
  42513f:	push   0x69
  425141:	push   0x4166a00
  425146:	call   0x425ed2
  42514b:	add    esp,0x14
  42514e:	push   edi
  42514f:	test   eax,0x6dbb
  425154:	je     0x42516f
  425156:	push   0xffffffa7
  425158:	push   0xcc1cf200
  42515d:	push   0xef54100
  425162:	push   0x8569700
  425167:	call   0x425ed2
  42516c:	add    esp,0x10
  42516f:	mov    DWORD PTR [ebp-0x30],eax
  425172:	mov    ebx,0x350c3ab8
  425177:	push   0xf
  425179:	push   0xec6cfb00
  42517e:	push   0xffffffbf
  425180:	call   0x4259e8
  425185:	add    esp,0xc
  425188:	sub    ebx,0x350c3a78
  42518e:	push   0x2062fd00
  425193:	push   0xffffffbe
  425195:	push   0xde98bd00
  42519a:	push   0xa4d80900
  42519f:	push   0xe03e3700
  4251a4:	call   0x425ed2
  4251a9:	add    esp,0x14
  4251ac:	call   0x4256cb
  4251b1:	push   ebx
  4251b2:	test   eax,0x75
  4251b7:	je     0x4251ca
  4251b9:	xor    ecx,ecx
  4251bb:	push   0xf
  4251bd:	push   0x64392400
  4251c2:	call   0x4256cb
  4251c7:	add    esp,0x8
  4251ca:	mov    esi,0x1d303490
  4251cf:	push   0xffffffb7
  4251d1:	call   0x425afe
  4251d6:	add    esp,0x4
  4251d9:	add    esi,0xe2cffb70
  4251df:	mov    ebx,0xb89
  4251e4:	call   0x425ed2
  4251e9:	sub    ebx,eax
  4251eb:	push   0x57
  4251ed:	call   0x42604a
  4251f2:	add    esp,0x4
  4251f5:	push   0xef4a100
  4251fa:	push   0x51
  4251fc:	call   0x425afe
  425201:	add    esp,0x8
  425204:	and    DWORD PTR [ebp-0x30],esi
  425207:	push   0x90662100
  42520c:	push   0xc404ba00
  425211:	push   0xe822a800
  425216:	call   0x4259e8
  42521b:	add    esp,0xc
  42521e:	push   0xffffffe2
  425220:	push   0x68
  425222:	push   0x4f
  425224:	push   0x13
  425226:	call   0x42604a
  42522b:	add    esp,0x10
  42522e:	cmp    ebx,DWORD PTR [ebp-0x8]
  425231:	je     0x42526d
  425233:	push   0x7eab9d00
  425238:	push   0xd0037a00
  42523d:	push   0x28
  42523f:	call   0x425ed2
  425244:	add    esp,0xc
  425247:	sub    ebx,esi
  425249:	push   0x187f9200
  42524e:	push   0xdee11f00
  425253:	call   0x425afe
  425258:	add    esp,0x8
  42525b:	mov    eax,DWORD PTR [ebp-0x30]
  42525e:	push   0x54
  425260:	call   0x425ed2
  425265:	add    esp,0x4
  425268:	and    ebx,esi
  42526a:	add    DWORD PTR [ebp-0x30],ebx
  42526d:	push   0x94184d00
  425272:	call   0x4256cb
  425277:	add    esp,0x4
  42527a:	push   esi
  42527b:	push   0x8c736900
  425280:	call   0x425afe
  425285:	add    esp,0x4
  425288:	push   0xffffffbe
  42528a:	push   0x24fead00
  42528f:	push   0xffffffd2
  425291:	push   0xc808e700
  425296:	push   0x44
  425298:	call   0x42604a
  42529d:	add    esp,0x14
  4252a0:	push   0x518a8
  4252a5:	call   0x4259e8
  4252aa:	push   0xffffffe0
  4252ac:	push   0x49
  4252ae:	push   0xffffffcb
  4252b0:	call   0x425afe
  4252b5:	add    esp,0xc
  4252b8:	push   0x0
  4252ba:	push   0xfffffff8
  4252bc:	push   0x24810700
  4252c1:	push   0xced89300
  4252c6:	push   0xffffffb0
  4252c8:	push   0x22
  4252ca:	call   0x425afe
  4252cf:	add    esp,0x14
  4252d2:	mov    ebx,0x7d754065
  4252d7:	cmp    eax,DWORD PTR [ebp-0x24]
  4252da:	jne    0x4252f7
  4252dc:	push   0xffffffba
  4252de:	push   0xfcff5800
  4252e3:	push   0x5cba0d00
  4252e8:	push   0x4804d800
  4252ed:	push   0xffffffd6
  4252ef:	call   0x4259e8
  4252f4:	add    esp,0x14
  4252f7:	push   0xfce55b00
  4252fc:	push   0xffffffe9
  4252fe:	push   0x7ec08100
  425303:	push   0xfffffff5
  425305:	push   0x61
  425307:	call   0x42604a
  42530c:	add    esp,0x14
  42530f:	sub    ebx,0x7d305235
  425315:	mov    edi,DWORD PTR [ebp-0x30]
  425318:	sub    edi,ebx
  42531a:	push   0x780c1000
  42531f:	push   0x27
  425321:	call   0x425ed2
  425326:	add    esp,0x8
  425329:	push   0xffffffb8
  42532b:	push   0x24d48900
  425330:	push   0x24db0000
  425335:	call   0x4259e8
  42533a:	add    esp,0xc
  42533d:	push   0xfffffff2
  42533f:	push   0xffffffb4
  425341:	push   0x43
  425343:	push   0xe4b1a900
  425348:	call   0x4256cb
  42534d:	add    esp,0x10
  425350:	cmp    edi,esi
  425352:	je     0x425359
  425354:	add    edi,eax
  425356:	sub    DWORD PTR [ebp-0x30],edi
  425359:	push   0x4579e00
  42535e:	push   0x2c0ff200
  425363:	call   0x425afe
  425368:	add    esp,0x8
  42536b:	call   DWORD PTR [ebx]
  42536d:	mov    ebx,DWORD PTR [ebp-0x30]
  425370:	sub    ebx,edi
  425372:	xor    edx,edx
  425374:	add    edx,edx
  425376:	sub    DWORD PTR [ebp-0x30],edx
  425379:	test   edi,0x30
  42537f:	je     0x4253a6
  425381:	add    ebx,edx
  425383:	sub    ebx,edx
  425385:	xor    ecx,ecx
  425387:	and    DWORD PTR [ebp-0x30],ebx
  42538a:	mov    esi,DWORD PTR [ebp-0x30]
  42538d:	cmp    ebx,ecx
  42538f:	je     0x4253a6
  425391:	mov    edi,0x41
  425396:	mov    ebx,esi
  425398:	add    DWORD PTR [ebp-0x30],ecx
  42539b:	mov    DWORD PTR [ebp-0x30],eax
  42539e:	add    ebx,ebx
  4253a0:	sub    DWORD PTR [ebp-0x30],edi
  4253a3:	xor    DWORD PTR [ebp-0x30],ebx
  4253a6:	mov    DWORD PTR [ebp-0x10],eax
  4253a9:	call   0x4259e8
  4253ae:	mov    edx,0xcd296662
  4253b3:	xor    DWORD PTR [ebp-0x30],edx
  4253b6:	add    edx,0x331b899e
  4253bc:	mov    eax,DWORD PTR [ebp-0x30]
  4253bf:	add    eax,esi
  4253c1:	test   eax,0x89
  4253c6:	jne    0x4253ef
  4253c8:	cmp    eax,0xffffffa1
  4253cb:	jne    0x4253ef
  4253cd:	mov    edi,0x9f
  4253d2:	cmp    eax,DWORD PTR [ebp-0x2c]
  4253d5:	je     0x4253ef
  4253d7:	and    eax,edx
  4253d9:	cmp    eax,0x8d2f
  4253de:	jne    0x4253ec
  4253e0:	cmp    eax,DWORD PTR [ebp-0x20]
  4253e3:	je     0x4253ec
  4253e5:	add    eax,esi
  4253e7:	add    eax,ebx
  4253e9:	sub    DWORD PTR [ebp-0x30],eax
  4253ec:	add    DWORD PTR [ebp-0x30],edi
  4253ef:	mov    DWORD PTR [ebp-0x14],edx
  4253f2:	push   0x15
  4253f4:	push   0xe4109800
  4253f9:	push   0xe0685500
  4253fe:	push   0x7e
  425400:	call   0x4256cb
  425405:	add    esp,0x10
  425408:	push   0x5c1f6000
  42540d:	push   0x24b05b00
  425412:	push   0x45
  425414:	call   0x425ed2
  425419:	add    esp,0xc
  42541c:	mov    edi,DWORD PTR [ebp-0x10]
  42541f:	mov    ebx,DWORD PTR [ebp-0x30]
  425422:	push   0xe4d92400
  425427:	push   0xffffff82
  425429:	push   0xffffffb5
  42542b:	call   0x425ed2
  425430:	add    esp,0xc
  425433:	push   0xeed19100
  425438:	push   0x246bbf00
  42543d:	push   0xe48d7000
  425442:	push   0xffffffb4
  425444:	call   0x425afe
  425449:	add    esp,0x10
  42544c:	add    DWORD PTR [ebp-0x30],edi
  42544f:	push   0x64f7f600
  425454:	push   0x686ef300
  425459:	push   0xffffff95
  42545b:	call   0x425ed2
  425460:	add    esp,0xc
  425463:	call   0x425ed2
  425468:	mov    ecx,0xc1
  42546d:	call   0x4256cb
  425472:	cmp    ebx,0xffffffd2
  425475:	jne    0x42548b
  425477:	push   0xffffff90
  425479:	push   0xa83ca400
  42547e:	push   0xffffff83
  425480:	call   0x42604a
  425485:	add    esp,0xc
  425488:	add    DWORD PTR [ebp-0x30],ebx
  42548b:	push   0xc44e5200
  425490:	push   0xffffffe8
  425492:	push   0x30246a00
  425497:	call   0x42604a
  42549c:	add    esp,0xc
  42549f:	mov    ecx,DWORD PTR [ebp-0x14]
  4254a2:	mov    esi,DWORD PTR [ebp-0x30]
  4254a5:	add    DWORD PTR [ebp-0x30],ecx
  4254a8:	add    esi,eax
  4254aa:	add    esi,ecx
  4254ac:	test   edi,0x34
  4254b2:	jne    0x4254b7
  4254b4:	and    DWORD PTR [ebp-0x30],esi
  4254b7:	mov    esi,DWORD PTR [ecx]
  4254b9:	mov    ebx,DWORD PTR [ebp-0x30]
  4254bc:	sub    ebx,ecx
  4254be:	mov    edx,0x2f
  4254c3:	sub    ebx,eax
  4254c5:	cmp    edi,ebx
  4254c7:	je     0x4254e3
  4254c9:	cmp    esi,ebx
  4254cb:	je     0x4254e3
  4254cd:	cmp    esi,ebx
  4254cf:	jne    0x4254e3
  4254d1:	sub    DWORD PTR [ebp-0x30],esi
  4254d4:	and    ebx,ecx
  4254d6:	mov    edx,0xa7f6
  4254db:	and    DWORD PTR [ebp-0x30],edx
  4254de:	sub    ebx,edx
  4254e0:	add    DWORD PTR [ebp-0x30],ebx
  4254e3:	mov    ecx,DWORD PTR [ecx+0x4]
  4254e6:	add    eax,ecx
  4254e8:	mov    DWORD PTR [ebp-0x4],eax
  4254eb:	or     esi,esi
  4254ed:	je     0x42559c
  4254f3:	mov    edx,DWORD PTR [ebp-0x30]
  4254f6:	and    edx,ecx
  4254f8:	mov    ebx,DWORD PTR [ebp-0x4]
  4254fb:	add    DWORD PTR [ebp-0x4],ebx
  4254fe:	add    edx,edx
  425500:	and    edx,ebx
  425502:	xor    DWORD PTR [ebp-0x30],edx
  425505:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425507:	mov    edx,DWORD PTR ds:0x44f04c
  42550d:	cmp    ecx,DWORD PTR [ebp-0x30]
  425510:	jne    0x425570
  425512:	mov    ebx,DWORD PTR [ebp-0x4]
  425515:	push   0xb
  425517:	call   0x425ed2
  42551c:	add    esp,0x4
  42551f:	call   0x425ed2
  425524:	push   0x3ef65700
  425529:	push   0x60
  42552b:	push   0xed90200
  425530:	push   0x69
  425532:	call   0x425afe
  425537:	add    esp,0x10
  42553a:	cmp    ebx,edi
  42553c:	jne    0x425570
  42553e:	push   0xfffffff2
  425540:	push   0x77
  425542:	call   0x4259e8
  425547:	add    esp,0x8
  42554a:	push   0x3e
  42554c:	push   0x59
  42554e:	call   0x425ed2
  425553:	add    esp,0x8
  425556:	mov    DWORD PTR [ebp-0x4],ebx
  425559:	push   0xffffff8e
  42555b:	push   0xcc04b700
  425560:	push   0x24f10500
  425565:	call   0x42604a
  42556a:	add    esp,0xc
  42556d:	sub    DWORD PTR [ebp-0x4],esi
  425570:	push   0xa8761e00
  425575:	push   0xffffffaa
  425577:	push   0xa4ba8a00
  42557c:	call   0x425afe
  425581:	add    esp,0xc
  425584:	add    DWORD PTR [ebp-0x14],0x8
  425588:	push   0xfca44e00
  42558d:	push   0x5b
  42558f:	call   0x4259e8
  425594:	add    esp,0x8
  425597:	jmp    0x42541f
  42559c:	push   0x7ed3b700
  4255a1:	call   0x42604a
  4255a6:	add    esp,0x4
  4255a9:	call   0x425afe
  4255ae:	mov    eax,DWORD PTR [ebp-0x10]
  4255b1:	mov    ecx,DWORD PTR [ebp-0x30]
  4255b4:	mov    edi,0x4a
  4255b9:	sub    DWORD PTR [ebp-0x30],ecx
  4255bc:	sub    DWORD PTR [ebp-0x30],eax
  4255bf:	add    DWORD PTR [ebp-0x4],edi
  4255c2:	cmp    ecx,DWORD PTR ds:0x44f04c
  4255c8:	jne    0x425643
  4255ca:	add    ecx,edi
  4255cc:	or     ecx,eax
  4255ce:	mov    edx,DWORD PTR ds:0x44f058
  4255d4:	mov    esi,0xa2
  4255d9:	sub    esi,eax
  4255db:	add    DWORD PTR [ebp-0x4],ecx
  4255de:	cmp    esi,DWORD PTR [ebp-0x38]
  4255e1:	je     0x425643
  4255e3:	cmp    esi,DWORD PTR [ebp-0x30]
  4255e6:	jne    0x425643
  4255e8:	mov    ecx,0x104c8889
  4255ed:	test   esi,0x4d
  4255f3:	jne    0x425643
  4255f5:	mov    edx,DWORD PTR ds:0x44f040
  4255fb:	mov    ebx,DWORD PTR ds:0x44f058
  425601:	add    ecx,esi
  425603:	add    DWORD PTR [ebp-0x4],ebx
  425606:	and    ecx,edi
  425608:	sub    DWORD PTR [ebp-0x30],edx
  42560b:	cmp    ecx,0x15
  42560e:	je     0x425643
  425610:	add    ecx,edi
  425612:	or     ecx,edi
  425614:	mov    esi,edi
  425616:	mov    ebx,0xfd
  42561b:	or     ecx,eax
  42561d:	cmp    ecx,esi
  42561f:	jne    0x425643
  425621:	or     DWORD PTR [ebp-0x4],ecx
  425624:	add    esi,ecx
  425626:	mov    ebx,0xc1
  42562b:	xor    edx,edx
  42562d:	add    DWORD PTR [ebp-0x30],esi
  425630:	sub    edx,esi
  425632:	and    ebx,edi
  425634:	sub    ebx,eax
  425636:	sub    ebx,eax
  425638:	add    DWORD PTR [ebp-0x30],ebx
  42563b:	and    edx,eax
  42563d:	add    DWORD PTR [ebp-0x4],ecx
  425640:	mov    DWORD PTR [ebp-0x4],edx
  425643:	pop    edi
  425644:	mov    esi,ecx
  425646:	mov    ebx,DWORD PTR [ebp-0x4]
  425649:	sub    esi,edx
  42564b:	or     esi,edi
  42564d:	cmp    ebx,edi
  42564f:	je     0x42567e
  425651:	add    ebx,ecx
  425653:	mov    ecx,ebx
  425655:	cmp    esi,ebx
  425657:	je     0x42567e
  425659:	mov    ebx,0x1b
  42565e:	test   esi,0x1
  425664:	je     0x42567e
  425666:	cmp    esi,0xffffff89
  425669:	jne    0x42567e
  42566b:	mov    edx,0xe2
  425670:	and    DWORD PTR [ebp-0x30],esi
  425673:	add    DWORD PTR [ebp-0x30],edx
  425676:	sub    DWORD PTR [ebp-0x4],ecx
  425679:	add    ebx,ecx
  42567b:	add    DWORD PTR [ebp-0x4],ebx
  42567e:	pop    esi
  42567f:	add    DWORD PTR [ebp-0x30],esi
  425682:	pop    ebx
  425683:	test   ecx,0x64
  425689:	jne    0x4256c4
  42568b:	mov    edx,DWORD PTR ds:0x44f04c
  425691:	mov    ecx,DWORD PTR [ebp-0x30]
  425694:	sub    DWORD PTR [ebp-0x4],edi
  425697:	add    edx,eax
  425699:	cmp    edx,eax
  42569b:	je     0x4256c4
  42569d:	cmp    ecx,DWORD PTR ds:0x44f040
  4256a3:	jne    0x4256c4
  4256a5:	sub    edx,esi
  4256a7:	cmp    ecx,DWORD PTR ds:0x44f058
  4256ad:	je     0x4256c4
  4256af:	and    ecx,ebx
  4256b1:	add    ecx,edi
  4256b3:	cmp    edi,DWORD PTR [ebp-0x40]
  4256b6:	je     0x4256c4
  4256b8:	or     edx,edi
  4256ba:	and    ecx,edi
  4256bc:	or     DWORD PTR [ebp-0x4],ecx
  4256bf:	add    edx,edi
  4256c1:	add    DWORD PTR [ebp-0x4],edx
  4256c4:	leave  
  4256c5:	ret    
  4256c6:	int3   
  4256c7:	int3   
  4256c8:	int3   
  4256c9:	int3   
  4256ca:	int3   
  4256cb:	push   ebp
  4256cc:	mov    ebp,esp
  4256ce:	sub    esp,0x2c
  4256d1:	xor    edx,edx
  4256d3:	push   0x5c77e900
  4256d8:	call   0x425afe
  4256dd:	add    esp,0x4
  4256e0:	push   0xffffff86
  4256e2:	push   0xa4fb0300
  4256e7:	push   0x5ca70c00
  4256ec:	push   0x71
  4256ee:	push   0x41
  4256f0:	call   0x425afe
  4256f5:	add    esp,0x14
  4256f8:	push   ebx
  4256f9:	cmp    eax,0xfb28
  4256fe:	je     0x42570f
  425700:	test   eax,0x5709
  425705:	je     0x42570f
  425707:	mov    ebx,0xbc4d
  42570c:	mov    DWORD PTR [ebp-0x18],ebx
  42570f:	push   0x38
  425711:	push   0xcef9a400
  425716:	push   0xcc5a4d00
  42571b:	call   0x425afe
  425720:	add    esp,0xc
  425723:	push   esi
  425724:	push   0x6efe1400
  425729:	call   0x42604a
  42572e:	add    esp,0x4
  425731:	call   0x42604a
  425736:	push   edi
  425737:	mov    DWORD PTR [ebp-0x4],ebx
  42573a:	call   0x425ed2
  42573f:	mov    edi,DWORD PTR [ebp-0x4]
  425742:	mov    ecx,0xc002500
  425747:	call   0x425afe
  42574c:	call   0x425afe
  425751:	push   0x70444400
  425756:	push   0xffffff91
  425758:	push   0xffffffe0
  42575a:	call   0x425afe
  42575f:	add    esp,0xc
  425762:	sub    edi,ebx
  425764:	push   0xffffffe3
  425766:	push   0x5c8e8400
  42576b:	push   0x4a
  42576d:	call   0x425ed2
  425772:	add    esp,0xc
  425775:	and    edi,eax
  425777:	push   0x1b
  425779:	push   0x68
  42577b:	push   0x6805a700
  425780:	push   0x14
  425782:	call   0x425ed2
  425787:	add    esp,0x10
  42578a:	cmp    edi,eax
  42578c:	je     0x425909
  425792:	push   0xe
  425794:	push   0xc8142c00
  425799:	push   0xffffffef
  42579b:	call   0x42604a
  4257a0:	add    esp,0xc
  4257a3:	sub    edi,eax
  4257a5:	push   0x4c33f100
  4257aa:	call   0x425ed2
  4257af:	add    esp,0x4
  4257b2:	call   0x425afe
  4257b7:	cmp    edi,0xffffffef
  4257ba:	jne    0x425909
  4257c0:	sub    edi,ebx
  4257c2:	mov    eax,0x54c3
  4257c7:	push   0xffffff8c
  4257c9:	push   0xffffffa6
  4257cb:	push   0x30
  4257cd:	push   0x8c1db800
  4257d2:	call   0x425afe
  4257d7:	add    esp,0x10
  4257da:	mov    ebx,0x15
  4257df:	push   0x981ade00
  4257e4:	push   0xa4ed6400
  4257e9:	call   0x425ed2
  4257ee:	add    esp,0x8
  4257f1:	push   0xfffffff6
  4257f3:	push   0xffffffc5
  4257f5:	push   0x24ba2b00
  4257fa:	call   0x425ed2
  4257ff:	add    esp,0xc
  425802:	push   0xdcd72d00
  425807:	push   0xffffff89
  425809:	push   0xe4da2f00
  42580e:	call   0x425ed2
  425813:	add    esp,0xc
  425816:	add    ebx,eax
  425818:	call   0x425ed2
  42581d:	cmp    ebx,0x69
  425820:	je     0x425909
  425826:	push   0x8417e100
  42582b:	push   0x2c699400
  425830:	push   0x3c44c200
  425835:	push   0xffffffe7
  425837:	push   0x40
  425839:	call   0x425ed2
  42583e:	add    esp,0x14
  425841:	mov    eax,edi
  425843:	call   0x42604a
  425848:	cmp    ebx,0x1596
  42584e:	je     0x425909
  425854:	cmp    ebx,0xf2f4
  42585a:	je     0x425909
  425860:	push   0x9ea24a00
  425865:	push   0xfffffff4
  425867:	push   0xffffffa1
  425869:	push   0xe92b200
  42586e:	call   0x425afe
  425873:	add    esp,0x10
  425876:	cmp    eax,edi
  425878:	je     0x425909
  42587e:	add    ebx,eax
  425880:	push   0x51
  425882:	push   0x30
  425884:	push   0xfffffff7
  425886:	call   0x425afe
  42588b:	add    esp,0xc
  42588e:	mov    esi,DWORD PTR [ebp-0x4]
  425891:	mov    edx,DWORD PTR [ebp-0x4]
  425894:	push   0x2ec5b200
  425899:	push   0xbc0b7d00
  42589e:	push   0x69
  4258a0:	push   0x5ce8e600
  4258a5:	push   0x64d41600
  4258aa:	call   0x425afe
  4258af:	add    esp,0x14
  4258b2:	call   0x42604a
  4258b7:	xor    DWORD PTR [ebp-0x4],ebx
  4258ba:	push   0x3
  4258bc:	push   0xf825c600
  4258c1:	push   0xb8036000
  4258c6:	call   0x425ed2
  4258cb:	add    esp,0xc
  4258ce:	sub    esi,eax
  4258d0:	add    esi,esi
  4258d2:	and    esi,edi
  4258d4:	call   0x425afe
  4258d9:	sub    esi,ebx
  4258db:	push   0xf0637500
  4258e0:	push   0x58381500
  4258e5:	push   0x5d
  4258e7:	push   0xffffffb4
  4258e9:	push   0xc42ecd00
  4258ee:	call   0x425afe
  4258f3:	add    esp,0x14
  4258f6:	sub    esi,edi
  4258f8:	push   0x5c
  4258fa:	push   0x48
  4258fc:	push   0x77
  4258fe:	call   0x425ed2
  425903:	add    esp,0xc
  425906:	xor    DWORD PTR [ebp-0x4],esi
  425909:	call   0x425ed2
  42590e:	push   0xffffffac
  425910:	push   0xffffffe3
  425912:	call   0x42604a
  425917:	add    esp,0x8
  42591a:	push   0x3b
  42591c:	push   0x56
  42591e:	call   0x425ed2
  425923:	add    esp,0x8
  425926:	cmp    ebx,edi
  425928:	je     0x42592f
  42592a:	call   0x42604a
  42592f:	push   0x447c8700
  425934:	push   0x2c
  425936:	push   0x2d9300
  42593b:	push   0x4ec0fb00
  425940:	call   0x425ed2
  425945:	add    esp,0x10
  425948:	push   0xfc0d3b00
  42594d:	call   0x42604a
  425952:	add    esp,0x4
  425955:	push   0x2006e500
  42595a:	push   0xbc648000
  42595f:	push   0xfce76500
  425964:	push   0xfec41d00
  425969:	push   0xffffffd0
  42596b:	call   0x42604a
  425970:	add    esp,0x14
  425973:	pop    edi
  425974:	mov    ebx,DWORD PTR [ebp-0x4]
  425977:	push   0x2
  425979:	push   0x64fe1400
  42597e:	call   0x425ed2
  425983:	add    esp,0x8
  425986:	push   0xeead3b00
  42598b:	push   0x74
  42598d:	call   0x42604a
  425992:	add    esp,0x8
  425995:	sub    ebx,eax
  425997:	add    DWORD PTR [ebp-0x4],edi
  42599a:	sub    DWORD PTR [ebp-0x4],ebx
  42599d:	pop    esi
  42599e:	push   0xffffff90
  4259a0:	push   0x24d38900
  4259a5:	push   0xa009ce00
  4259aa:	push   0xfca27d00
  4259af:	push   0xffffffd0
  4259b1:	call   0x42604a
  4259b6:	add    esp,0x14
  4259b9:	push   0x24de7500
  4259be:	push   0xffffff99
  4259c0:	push   0x52
  4259c2:	call   0x425afe
  4259c7:	add    esp,0xc
  4259ca:	pop    ebx
  4259cb:	push   0x15
  4259cd:	push   0xffffffcc
  4259cf:	call   0x425ed2
  4259d4:	add    esp,0x8
  4259d7:	push   0x1
  4259d9:	call   0x425ed2
  4259de:	add    esp,0x4
  4259e1:	leave  
  4259e2:	ret    
  4259e3:	int3   
  4259e4:	int3   
  4259e5:	int3   
  4259e6:	int3   
  4259e7:	int3   
  4259e8:	push   ebp
  4259e9:	mov    ebp,esp
  4259eb:	sub    esp,0x20
  4259ee:	push   0x29
  4259f0:	call   0x425afe
  4259f5:	add    esp,0x4
  4259f8:	push   ebx
  4259f9:	test   eax,0x8e
  4259fe:	je     0x425a0f
  425a00:	push   0xffffffb2
  425a02:	push   0xbe865b00
  425a07:	call   0x42604a
  425a0c:	add    esp,0x8
  425a0f:	call   0x425afe
  425a14:	push   esi
  425a15:	push   0x1e8bc300
  425a1a:	call   0x42604a
  425a1f:	add    esp,0x4
  425a22:	push   edi
  425a23:	call   0x425afe
  425a28:	push   0x1c5c6100
  425a2d:	call   0x42604a
  425a32:	add    esp,0x4
  425a35:	test   eax,0x9c
  425a3a:	je     0x425a50
  425a3c:	push   0xfe964600
  425a41:	push   0xffffffc0
  425a43:	push   0x4ecaf500
  425a48:	call   0x42604a
  425a4d:	add    esp,0xc
  425a50:	push   0xffffffe0
  425a52:	push   0x47
  425a54:	call   0x425ed2
  425a59:	add    esp,0x8
  425a5c:	mov    edx,0x3d
  425a61:	call   0x425afe
  425a66:	call   0x425afe
  425a6b:	push   0xffffff82
  425a6d:	push   0xffffffa2
  425a6f:	call   0x425ed2
  425a74:	add    esp,0x8
  425a77:	push   0x53
  425a79:	push   0x94440600
  425a7e:	push   0xffffffc0
  425a80:	push   0xffffffdb
  425a82:	call   0x425ed2
  425a87:	add    esp,0x10
  425a8a:	push   0x5c041f00
  425a8f:	push   0x41
  425a91:	push   0x8e811d00
  425a96:	push   0x5d
  425a98:	call   0x425afe
  425a9d:	add    esp,0x10
  425aa0:	push   0xbed3cc00
  425aa5:	push   0xffffffad
  425aa7:	push   0x9e977100
  425aac:	call   0x42604a
  425ab1:	add    esp,0xc
  425ab4:	pop    edi
  425ab5:	push   0x3d
  425ab7:	push   0xffffff8f
  425ab9:	push   0x66
  425abb:	push   0xffffff87
  425abd:	push   0xffffffa9
  425abf:	call   0x42604a
  425ac4:	add    esp,0x14
  425ac7:	push   0x6c591100
  425acc:	push   0xffffff84
  425ace:	push   0x2
  425ad0:	call   0x425afe
  425ad5:	add    esp,0xc
  425ad8:	pop    esi
  425ad9:	push   0x9c341600
  425ade:	push   0x3067ba00
  425ae3:	call   0x425ed2
  425ae8:	add    esp,0x8
  425aeb:	pop    ebx
  425aec:	add    eax,ebx
  425aee:	sub    eax,edi
  425af0:	sub    eax,ebx
  425af2:	call   0x42604a
  425af7:	leave  
  425af8:	ret    
  425af9:	int3   
  425afa:	int3   
  425afb:	int3   
  425afc:	int3   
  425afd:	int3   
  425afe:	push   ebp
  425aff:	mov    ebp,esp
  425b01:	sub    esp,0x18
  425b04:	mov    ecx,0xb
  425b09:	mov    edx,ecx
  425b0b:	add    edx,edx
  425b0d:	and    edx,ecx
  425b0f:	add    edx,ecx
  425b11:	add    edx,ecx
  425b13:	or     ecx,edx
  425b15:	add    edx,ecx
  425b17:	mov    DWORD PTR [ebp-0x10],edx
  425b1a:	push   ebx
  425b1b:	mov    ebx,DWORD PTR [ebp-0x10]
  425b1e:	add    DWORD PTR [ebp-0x10],ebx
  425b21:	push   esi
  425b22:	mov    ebx,DWORD PTR [ebp-0x10]
  425b25:	cmp    ebx,ecx
  425b27:	jne    0x425b2c
  425b29:	sub    DWORD PTR [ebp-0x10],ebx
  425b2c:	push   edi
  425b2d:	add    ecx,ebx
  425b2f:	sub    ecx,ebx
  425b31:	mov    ebx,DWORD PTR [ebp-0x10]
  425b34:	mov    eax,DWORD PTR [ebp-0x10]
  425b37:	add    eax,eax
  425b39:	test   ecx,0xd6
  425b3f:	jne    0x425c62
  425b45:	cmp    eax,0xffffffc0
  425b48:	jne    0x425c62
  425b4e:	cmp    eax,DWORD PTR [ebp-0xc]
  425b51:	je     0x425c62
  425b57:	mov    edi,0x2b
  425b5c:	mov    edx,DWORD PTR [ebp-0x10]
  425b5f:	or     DWORD PTR [ebp-0x10],eax
  425b62:	xor    DWORD PTR [ebp-0x10],ebx
  425b65:	add    ecx,ecx
  425b67:	and    ecx,ebx
  425b69:	test   ecx,0xaa
  425b6f:	je     0x425c62
  425b75:	sub    DWORD PTR [ebp-0x10],eax
  425b78:	mov    esi,DWORD PTR [ebp-0x10]
  425b7b:	sub    esi,ebx
  425b7d:	sub    esi,ecx
  425b7f:	and    edi,edx
  425b81:	mov    eax,DWORD PTR [ebp-0x10]
  425b84:	and    DWORD PTR [ebp-0x10],edi
  425b87:	test   eax,0xe2b1
  425b8c:	jne    0x425c62
  425b92:	mov    edx,DWORD PTR ds:0x44f088
  425b98:	mov    ebx,DWORD PTR [ebp-0x10]
  425b9b:	and    esi,edx
  425b9d:	cmp    esi,0xffffff88
  425ba0:	jne    0x425c62
  425ba6:	mov    ecx,DWORD PTR ds:0x44f088
  425bac:	mov    edi,edx
  425bae:	or     ecx,eax
  425bb0:	sub    DWORD PTR [ebp-0x10],ecx
  425bb3:	sub    DWORD PTR [ebp-0x10],esi
  425bb6:	or     DWORD PTR [ebp-0x10],ebx
  425bb9:	add    edi,eax
  425bbb:	sub    edi,edx
  425bbd:	cmp    edi,DWORD PTR ds:0x44f088
  425bc3:	je     0x425c62
  425bc9:	mov    ebx,DWORD PTR ds:0x44f088
  425bcf:	mov    esi,DWORD PTR ds:0x44f088
  425bd5:	sub    edi,ebx
  425bd7:	sub    DWORD PTR [ebp-0x10],edx
  425bda:	sub    edi,esi
  425bdc:	sub    edi,ebx
  425bde:	cmp    edi,DWORD PTR [ebp-0xc]
  425be1:	jne    0x425c62
  425be3:	add    DWORD PTR [ebp-0x10],ecx
  425be6:	or     edi,esi
  425be8:	add    edi,ebx
  425bea:	mov    eax,DWORD PTR [ebp-0x10]
  425bed:	add    edi,eax
  425bef:	xor    eax,eax
  425bf1:	test   edi,0xf9
  425bf7:	jne    0x425c62
  425bf9:	mov    ebx,DWORD PTR [ebp-0x10]
  425bfc:	mov    edx,0x80
  425c01:	sub    DWORD PTR [ebp-0x10],ebx
  425c04:	add    DWORD PTR [ebp-0x10],eax
  425c07:	sub    edx,ebx
  425c09:	cmp    edi,DWORD PTR ds:0x44f088
  425c0f:	jne    0x425c62
  425c11:	mov    eax,DWORD PTR ds:0x44f088
  425c17:	mov    ebx,edi
  425c19:	xor    DWORD PTR [ebp-0x10],eax
  425c1c:	and    ebx,eax
  425c1e:	cmp    edx,0x95d3
  425c24:	je     0x425c62
  425c26:	cmp    ebx,0xd
  425c29:	je     0x425c62
  425c2b:	add    ebx,ecx
  425c2d:	cmp    ebx,edi
  425c2f:	je     0x425c62
  425c31:	and    ebx,edi
  425c33:	mov    ecx,0x3f
  425c38:	mov    eax,DWORD PTR [ebp-0x10]
  425c3b:	cmp    ebx,DWORD PTR ds:0x44f088
  425c41:	jne    0x425c62
  425c43:	sub    DWORD PTR [ebp-0x10],esi
  425c46:	mov    edi,DWORD PTR [ebp-0x10]
  425c49:	add    DWORD PTR [ebp-0x10],edx
  425c4c:	and    edi,edx
  425c4e:	and    ecx,edi
  425c50:	mov    edx,0x3d
  425c55:	sub    DWORD PTR [ebp-0x10],ebx
  425c58:	and    edx,eax
  425c5a:	sub    ecx,ebx
  425c5c:	add    DWORD PTR [ebp-0x10],edx
  425c5f:	add    DWORD PTR [ebp-0x10],ecx
  425c62:	xor    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    edx,DWORD PTR [ebp-0x10]
  425c68:	mov    ebx,DWORD PTR ds:0x44f088
  425c6e:	add    ebx,ecx
  425c70:	sub    edx,eax
  425c72:	mov    DWORD PTR [ebp-0x10],ebx
  425c75:	sub    edx,ecx
  425c77:	cmp    edx,DWORD PTR [ebp-0x10]
  425c7a:	je     0x425c7f
  425c7c:	add    DWORD PTR [ebp-0x10],edx
  425c7f:	cmp    ecx,0xbb24
  425c85:	je     0x425c8f
  425c87:	cmp    ebx,0x6c
  425c8a:	je     0x425c8f
  425c8c:	sub    DWORD PTR [ebp-0x10],edx
  425c8f:	mov    ecx,DWORD PTR [ebp-0x10]
  425c92:	cmp    ecx,0x44
  425c95:	je     0x425cd4
  425c97:	mov    eax,DWORD PTR [ebp-0x10]
  425c9a:	add    eax,esi
  425c9c:	mov    ebx,0x5f
  425ca1:	or     ecx,ebx
  425ca3:	cmp    ecx,0xffffffd2
  425ca6:	jne    0x425cd4
  425ca8:	cmp    ecx,0xffffffa5
  425cab:	je     0x425cd4
  425cad:	add    DWORD PTR [ebp-0x10],eax
  425cb0:	mov    edx,0x54
  425cb5:	mov    DWORD PTR [ebp-0x10],ecx
  425cb8:	mov    eax,0x11ba
  425cbd:	xor    DWORD PTR [ebp-0x10],eax
  425cc0:	mov    DWORD PTR [ebp-0x10],ebx
  425cc3:	add    DWORD PTR [ebp-0x10],edi
  425cc6:	sub    DWORD PTR [ebp-0x10],ebx
  425cc9:	and    edx,eax
  425ccb:	add    edx,esi
  425ccd:	or     edx,ebx
  425ccf:	sub    edx,ecx
  425cd1:	xor    DWORD PTR [ebp-0x10],edx
  425cd4:	mov    ebx,0x83
  425cd9:	or     DWORD PTR [ebp-0x10],ecx
  425cdc:	xor    esi,esi
  425cde:	sub    DWORD PTR [ebp-0x10],esi
  425ce1:	add    ebx,edi
  425ce3:	sub    ebx,esi
  425ce5:	test   ebx,0x253b
  425ceb:	je     0x425e79
  425cf1:	sub    ebx,esi
  425cf3:	mov    eax,DWORD PTR [ebp-0x10]
  425cf6:	mov    esi,DWORD PTR ds:0x44f088
  425cfc:	cmp    ebx,esi
  425cfe:	je     0x425e79
  425d04:	mov    edx,DWORD PTR [ebp-0x10]
  425d07:	add    DWORD PTR [ebp-0x10],eax
  425d0a:	add    DWORD PTR [ebp-0x10],esi
  425d0d:	mov    esi,DWORD PTR [ebp-0x10]
  425d10:	add    DWORD PTR [ebp-0x10],eax
  425d13:	sub    DWORD PTR [ebp-0x10],edx
  425d16:	add    esi,eax
  425d18:	add    DWORD PTR [ebp-0x10],edx
  425d1b:	cmp    edx,DWORD PTR [ebp-0x4]
  425d1e:	jne    0x425e79
  425d24:	cmp    esi,DWORD PTR [ebp-0x18]
  425d27:	je     0x425e79
  425d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  425d30:	mov    eax,DWORD PTR [ebp-0x10]
  425d33:	sub    ebx,esi
  425d35:	add    eax,edi
  425d37:	cmp    ecx,DWORD PTR [ebp-0x8]
  425d3a:	je     0x425e79
  425d40:	mov    esi,0x72
  425d45:	mov    edi,esi
  425d47:	sub    edi,edx
  425d49:	or     ecx,edx
  425d4b:	sub    ebx,eax
  425d4d:	sub    DWORD PTR [ebp-0x10],ebx
  425d50:	cmp    edi,0x2f2e
  425d56:	je     0x425e79
  425d5c:	mov    edx,DWORD PTR ds:0x44f088
  425d62:	add    DWORD PTR [ebp-0x10],edi
  425d65:	mov    edi,DWORD PTR ds:0x44f088
  425d6b:	add    DWORD PTR [ebp-0x10],edx
  425d6e:	add    ecx,ebx
  425d70:	sub    edi,edx
  425d72:	add    ecx,esi
  425d74:	add    edi,edx
  425d76:	cmp    ecx,0xffffffb9
  425d79:	jne    0x425e79
  425d7f:	cmp    ecx,0x25
  425d82:	je     0x425e79
  425d88:	and    ecx,edi
  425d8a:	sub    ecx,ebx
  425d8c:	cmp    ecx,DWORD PTR [ebp-0x8]
  425d8f:	jne    0x425e79
  425d95:	mov    edx,DWORD PTR [ebp-0x10]
  425d98:	mov    esi,DWORD PTR [ebp-0x10]
  425d9b:	cmp    esi,DWORD PTR ds:0x44f088
  425da1:	je     0x425e79
  425da7:	mov    edi,eax
  425da9:	add    ecx,esi
  425dab:	mov    esi,DWORD PTR [ebp-0x10]
  425dae:	sub    ecx,eax
  425db0:	cmp    ebx,ecx
  425db2:	jne    0x425e79
  425db8:	add    DWORD PTR [ebp-0x10],edi
  425dbb:	sub    DWORD PTR [ebp-0x10],edi
  425dbe:	sub    DWORD PTR [ebp-0x10],edx
  425dc1:	add    ecx,ebx
  425dc3:	and    DWORD PTR [ebp-0x10],edx
  425dc6:	xor    ebx,ebx
  425dc8:	cmp    ecx,0xfffffff0
  425dcb:	je     0x425e79
  425dd1:	mov    DWORD PTR [ebp-0x10],ecx
  425dd4:	add    DWORD PTR [ebp-0x10],esi
  425dd7:	and    ebx,eax
  425dd9:	add    ebx,edx
  425ddb:	xor    edx,edx
  425ddd:	mov    edi,esi
  425ddf:	sub    DWORD PTR [ebp-0x10],esi
  425de2:	add    DWORD PTR [ebp-0x10],ecx
  425de5:	sub    DWORD PTR [ebp-0x10],edi
  425de8:	test   esi,0x1d
  425dee:	je     0x425e79
  425df4:	test   eax,0xf2
  425df9:	je     0x425e79
  425dfb:	mov    eax,0xff
  425e00:	sub    edx,ecx
  425e02:	add    edx,edi
  425e04:	add    DWORD PTR [ebp-0x10],eax
  425e07:	cmp    edx,0x51
  425e0a:	je     0x425e79
  425e0c:	mov    eax,DWORD PTR [ebp-0x10]
  425e0f:	xor    DWORD PTR [ebp-0x10],eax
  425e12:	add    ebx,edi
  425e14:	sub    edx,esi
  425e16:	add    edx,edx
  425e18:	add    edx,ecx
  425e1a:	cmp    edx,0xffffffd3
  425e1d:	jne    0x425e79
  425e1f:	and    DWORD PTR [ebp-0x10],edi
  425e22:	add    edx,eax
  425e24:	sub    ebx,edx
  425e26:	test   ecx,0xa
  425e2c:	je     0x425e79
  425e2e:	mov    eax,DWORD PTR [ebp-0x10]
  425e31:	mov    esi,0xd995
  425e36:	add    esi,ecx
  425e38:	cmp    eax,DWORD PTR [ebp-0x18]
  425e3b:	je     0x425e79
  425e3d:	and    esi,ebx
  425e3f:	mov    ecx,DWORD PTR [ebp-0x10]
  425e42:	mov    edi,DWORD PTR [ebp-0x10]
  425e45:	add    esi,ecx
  425e47:	test   eax,0x86
  425e4c:	jne    0x425e79
  425e4e:	sub    eax,edx
  425e50:	mov    ebx,DWORD PTR [ebp-0x10]
  425e53:	and    DWORD PTR [ebp-0x10],ebx
  425e56:	add    DWORD PTR [ebp-0x10],esi
  425e59:	mov    edx,DWORD PTR [ebp-0x10]
  425e5c:	cmp    edi,DWORD PTR [ebp-0x18]
  425e5f:	jne    0x425e79
  425e61:	mov    ecx,DWORD PTR [ebp-0x10]
  425e64:	mov    esi,DWORD PTR [ebp-0x10]
  425e67:	or     DWORD PTR [ebp-0x10],edx
  425e6a:	sub    esi,edi
  425e6c:	sub    DWORD PTR [ebp-0x10],ecx
  425e6f:	xor    DWORD PTR [ebp-0x10],esi
  425e72:	cmp    eax,esi
  425e74:	je     0x425e79
  425e76:	add    DWORD PTR [ebp-0x10],eax
  425e79:	pop    edi
  425e7a:	sub    ecx,esi
  425e7c:	mov    ebx,0x3d
  425e81:	sub    ebx,edi
  425e83:	mov    eax,DWORD PTR [ebp-0x10]
  425e86:	xor    DWORD PTR [ebp-0x10],ebx
  425e89:	add    eax,edi
  425e8b:	sub    ecx,edi
  425e8d:	xor    DWORD PTR [ebp-0x10],ecx
  425e90:	sub    eax,ecx
  425e92:	and    eax,esi
  425e94:	and    eax,ecx
  425e96:	sub    DWORD PTR [ebp-0x10],eax
  425e99:	pop    esi
  425e9a:	mov    ebx,0x6
  425e9f:	mov    eax,DWORD PTR [ebp-0x10]
  425ea2:	sub    eax,esi
  425ea4:	add    eax,edi
  425ea6:	add    eax,eax
  425ea8:	cmp    edx,DWORD PTR [ebp-0x18]
  425eab:	je     0x425ebd
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ebd
  425eb1:	cmp    ecx,0xffffff89
  425eb4:	je     0x425ebd
  425eb6:	cmp    eax,ecx
  425eb8:	jne    0x425ebd
  425eba:	xor    DWORD PTR [ebp-0x10],eax
  425ebd:	pop    ebx
  425ebe:	xor    edx,edx
  425ec0:	sub    edx,edi
  425ec2:	or     DWORD PTR [ebp-0x10],ebx
  425ec5:	add    DWORD PTR [ebp-0x10],ecx
  425ec8:	and    DWORD PTR [ebp-0x10],edx
  425ecb:	leave  
  425ecc:	ret    
  425ecd:	int3   
  425ece:	int3   
  425ecf:	int3   
  425ed0:	int3   
  425ed1:	int3   
  425ed2:	push   ebp
  425ed3:	mov    ebp,esp
  425ed5:	sub    esp,0x2c
  425ed8:	xor    ecx,ecx
  425eda:	mov    edx,0x11e0
  425edf:	add    edx,edx
  425ee1:	add    edx,ecx
  425ee3:	and    edx,ecx
  425ee5:	and    edx,ecx
  425ee7:	mov    DWORD PTR [ebp-0x20],edx
  425eea:	push   ebx
  425eeb:	mov    DWORD PTR [ebp-0x20],edx
  425eee:	push   esi
  425eef:	add    edx,ecx
  425ef1:	add    edx,ecx
  425ef3:	add    edx,edx
  425ef5:	mov    DWORD PTR [ebp-0x20],edx
  425ef8:	push   edi
  425ef9:	mov    ebx,DWORD PTR [ebp-0x20]
  425efc:	mov    esi,0x23
  425f01:	add    esi,esi
  425f03:	add    DWORD PTR [ebp-0x20],ebx
  425f06:	and    DWORD PTR [ebp-0x20],esi
  425f09:	sub    DWORD PTR [ebp-0x20],edx
  425f0c:	add    DWORD PTR [ebp-0x20],ebx
  425f0f:	mov    ecx,DWORD PTR [ebp-0x20]
  425f12:	mov    esi,DWORD PTR [ebp-0x20]
  425f15:	sub    DWORD PTR [ebp-0x20],esi
  425f18:	xor    DWORD PTR [ebp-0x20],ecx
  425f1b:	pop    edi
  425f1c:	mov    DWORD PTR [ebp-0x8],edi
  425f1f:	pop    esi
  425f20:	mov    ecx,DWORD PTR ds:0x44f044
  425f26:	mov    ebx,DWORD PTR [ebp-0x20]
  425f29:	sub    ebx,ecx
  425f2b:	sub    DWORD PTR [ebp-0x20],esi
  425f2e:	cmp    ebx,DWORD PTR [ebp-0x4]
  425f31:	jne    0x425f8a
  425f33:	cmp    ebx,esi
  425f35:	je     0x425f8a
  425f37:	mov    eax,0x7c
  425f3c:	cmp    ebx,0xffffffa8
  425f3f:	jne    0x425f8a
  425f41:	cmp    ebx,DWORD PTR ds:0x44f044
  425f47:	je     0x425f8a
  425f49:	add    eax,esi
  425f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  425f4e:	cmp    ecx,DWORD PTR ds:0x44f044
  425f54:	je     0x425f8a
  425f56:	or     ebx,edi
  425f58:	mov    edx,DWORD PTR [ebp-0x20]
  425f5b:	cmp    ecx,ebx
  425f5d:	jne    0x425f8a
  425f5f:	add    ebx,eax
  425f61:	mov    eax,0x13
  425f66:	cmp    ebx,0xffffffa1
  425f69:	je     0x425f8a
  425f6b:	add    DWORD PTR [ebp-0x20],ebx
  425f6e:	add    eax,edi
  425f70:	cmp    ecx,0x35
  425f73:	jne    0x425f8a
  425f75:	cmp    ecx,DWORD PTR ds:0x44f044
  425f7b:	jne    0x425f8a
  425f7d:	and    edx,esi
  425f7f:	sub    DWORD PTR [ebp-0x20],edx
  425f82:	add    DWORD PTR [ebp-0x8],eax
  425f85:	sub    ecx,edi
  425f87:	or     DWORD PTR [ebp-0x20],ecx
  425f8a:	pop    ebx
  425f8b:	cmp    ebx,0xffffff9a
  425f8e:	je     0x426043
  425f94:	sub    ecx,ebx
  425f96:	mov    edx,0x1f82
  425f9b:	add    DWORD PTR [ebp-0x20],ecx
  425f9e:	mov    eax,0x3b94
  425fa3:	sub    DWORD PTR [ebp-0x20],ecx
  425fa6:	sub    eax,esi
  425fa8:	cmp    esi,DWORD PTR [ebp-0x24]
  425fab:	jne    0x426043
  425fb1:	sub    DWORD PTR [ebp-0x8],eax
  425fb4:	mov    eax,DWORD PTR ds:0x44f068
  425fba:	mov    ecx,0xd3
  425fbf:	and    ecx,ebx
  425fc1:	sub    DWORD PTR [ebp-0x20],eax
  425fc4:	add    DWORD PTR [ebp-0x8],ecx
  425fc7:	add    edx,eax
  425fc9:	or     edx,ebx
  425fcb:	and    edx,esi
  425fcd:	or     edx,esi
  425fcf:	cmp    edx,DWORD PTR [ebp-0x4]
  425fd2:	jne    0x426043
  425fd4:	add    edx,ecx
  425fd6:	test   edx,0x6c
  425fdc:	jne    0x426043
  425fde:	test   edx,0xe1bf
  425fe4:	jne    0x426043
  425fe6:	mov    ecx,DWORD PTR [ebp-0x20]
  425fe9:	mov    eax,DWORD PTR [ebp-0x20]
  425fec:	cmp    edx,0x7c
  425fef:	je     0x426043
  425ff1:	sub    DWORD PTR [ebp-0x20],ebx
  425ff4:	sub    edx,esi
  425ff6:	cmp    ecx,0xffffff89
  425ff9:	je     0x426043
  425ffb:	add    edx,ecx
  425ffd:	cmp    edx,0xbd98
  426003:	je     0x426043
  426005:	cmp    ebx,0xffffffcd
  426008:	jne    0x426043
  42600a:	cmp    eax,DWORD PTR [ebp-0xc]
  42600d:	je     0x426043
  42600f:	sub    eax,edx
  426011:	mov    ecx,DWORD PTR [ebp-0x20]
  426014:	sub    ecx,eax
  426016:	mov    eax,DWORD PTR [ebp-0x20]
  426019:	add    eax,edi
  42601b:	sub    ecx,esi
  42601d:	cmp    ecx,0xffffffa9
  426020:	jne    0x426043
  426022:	add    eax,ecx
  426024:	cmp    eax,0x3
  426027:	je     0x426043
  426029:	mov    ecx,DWORD PTR [ebp-0x20]
  42602c:	or     DWORD PTR [ebp-0x20],ecx
  42602f:	cmp    ecx,DWORD PTR ds:0x44f044
  426035:	jne    0x426043
  426037:	cmp    ecx,DWORD PTR [ebp-0xc]
  42603a:	jne    0x426043
  42603c:	cmp    eax,ebx
  42603e:	jne    0x426043
  426040:	sub    DWORD PTR [ebp-0x20],eax
  426043:	leave  
  426044:	ret    
  426045:	int3   
  426046:	int3   
  426047:	int3   
  426048:	int3   
  426049:	int3   
  42604a:	push   ebp
  42604b:	mov    ebp,esp
  42604d:	sub    esp,0x18
  426050:	mov    eax,0x95
  426055:	mov    ecx,0xbb
  42605a:	mov    DWORD PTR [ebp-0x14],ecx
  42605d:	add    eax,eax
  42605f:	add    eax,ecx
  426061:	sub    eax,ecx
  426063:	and    eax,ecx
  426065:	sub    eax,ecx
  426067:	add    eax,eax
  426069:	sub    eax,ecx
  42606b:	sub    eax,ecx
  42606d:	add    DWORD PTR [ebp-0x14],eax
  426070:	push   ebx
  426071:	add    ecx,eax
  426073:	mov    edx,DWORD PTR [ebp-0x14]
  426076:	mov    ebx,DWORD PTR [ebp-0x14]
  426079:	add    DWORD PTR [ebp-0x14],ebx
  42607c:	add    edx,ecx
  42607e:	cmp    edx,eax
  426080:	je     0x426085
  426082:	sub    DWORD PTR [ebp-0x14],edx
  426085:	push   esi
  426086:	mov    edx,ecx
  426088:	sub    edx,eax
  42608a:	add    ecx,edx
  42608c:	mov    eax,DWORD PTR [ebp-0x14]
  42608f:	cmp    eax,DWORD PTR [ebp-0x10]
  426092:	je     0x4260a1
  426094:	cmp    eax,DWORD PTR [ebp-0x14]
  426097:	jne    0x4260a1
  426099:	mov    ebx,eax
  42609b:	add    DWORD PTR [ebp-0x14],ebx
  42609e:	add    DWORD PTR [ebp-0x14],ecx
  4260a1:	push   edi
  4260a2:	sub    ecx,eax
  4260a4:	mov    eax,ebx
  4260a6:	sub    eax,ecx
  4260a8:	add    DWORD PTR [ebp-0x14],eax
  4260ab:	mov    DWORD PTR [ebp-0x14],ebx
  4260ae:	test   ecx,0x1f
  4260b4:	je     0x4260c0
  4260b6:	or     eax,ebx
  4260b8:	sub    DWORD PTR [ebp-0x14],ecx
  4260bb:	and    eax,ebx
  4260bd:	xor    DWORD PTR [ebp-0x14],eax
  4260c0:	xor    ecx,ecx
  4260c2:	mov    edx,DWORD PTR [ebp-0x14]
  4260c5:	add    ecx,ecx
  4260c7:	test   edx,0xac
  4260cd:	je     0x42610d
  4260cf:	mov    DWORD PTR [ebp-0x14],ebx
  4260d2:	mov    ebx,DWORD PTR [ebp-0x14]
  4260d5:	xor    edi,edi
  4260d7:	add    DWORD PTR [ebp-0x14],eax
  4260da:	cmp    ebx,0xffffffac
  4260dd:	jne    0x42610d
  4260df:	mov    esi,0x7d
  4260e4:	sub    DWORD PTR [ebp-0x14],edi
  4260e7:	cmp    ebx,DWORD PTR [ebp-0x8]
  4260ea:	jne    0x42610d
  4260ec:	add    esi,esi
  4260ee:	mov    eax,0x24
  4260f3:	mov    edi,DWORD PTR [ebp-0x14]
  4260f6:	add    esi,eax
  4260f8:	add    DWORD PTR [ebp-0x14],ecx
  4260fb:	add    edx,eax
  4260fd:	sub    DWORD PTR [ebp-0x14],ebx
  426100:	and    esi,ecx
  426102:	add    DWORD PTR [ebp-0x14],esi
  426105:	sub    DWORD PTR [ebp-0x14],ecx
  426108:	or     edi,edx
  42610a:	sub    DWORD PTR [ebp-0x14],edi
  42610d:	and    ecx,edi
  42610f:	test   ecx,0xe811071
  426115:	je     0x42612c
  426117:	cmp    ecx,0x786a
  42611d:	jne    0x42612c
  42611f:	mov    ebx,edi
  426121:	cmp    ebx,0xffffff91
  426124:	je     0x42612c
  426126:	add    DWORD PTR [ebp-0x14],ebx
  426129:	add    DWORD PTR [ebp-0x14],ecx
  42612c:	mov    edx,0x9a
  426131:	mov    esi,DWORD PTR [ebp-0x14]
  426134:	sub    edx,ebx
  426136:	cmp    esi,0xffffffee
  426139:	je     0x42619f
  42613b:	mov    ecx,DWORD PTR [ebp-0x14]
  42613e:	mov    eax,DWORD PTR [ebp-0x14]
  426141:	sub    DWORD PTR [ebp-0x14],edi
  426144:	cmp    eax,0xffffff88
  426147:	jne    0x42619f
  426149:	test   ecx,0x8cb8
  42614f:	jne    0x42619f
  426151:	test   eax,0xca
  426156:	je     0x42619f
  426158:	mov    ebx,DWORD PTR [ebp-0x14]
  42615b:	mov    edi,DWORD PTR [ebp-0x14]
  42615e:	cmp    edx,0x79
  426161:	je     0x42619f
  426163:	cmp    ebx,0x41a2005
  426169:	jne    0x42619f
  42616b:	cmp    edx,0x6fd0
  426171:	je     0x42619f
  426173:	add    DWORD PTR [ebp-0x14],ebx
  426176:	mov    ebx,DWORD PTR [ebp-0x14]
  426179:	cmp    esi,DWORD PTR [ebp-0x8]
  42617c:	je     0x42619f
  42617e:	cmp    edx,0xe7c3
  426184:	jne    0x42619f
  426186:	and    ecx,esi
  426188:	mov    DWORD PTR [ebp-0x14],eax
  42618b:	mov    DWORD PTR [ebp-0x14],edi
  42618e:	sub    DWORD PTR [ebp-0x14],ecx
  426191:	add    edx,edi
  426193:	add    ebx,ecx
  426195:	add    edx,edi
  426197:	sub    DWORD PTR [ebp-0x14],ebx
  42619a:	add    edx,edi
  42619c:	add    DWORD PTR [ebp-0x14],edx
  42619f:	pop    edi
  4261a0:	sub    DWORD PTR [ebp-0x14],edi
  4261a3:	pop    esi
  4261a4:	cmp    edi,esi
  4261a6:	je     0x4261ab
  4261a8:	and    DWORD PTR [ebp-0x14],edx
  4261ab:	pop    ebx
  4261ac:	sub    edx,esi
  4261ae:	xor    eax,eax
  4261b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4261b3:	test   esi,0xd823
  4261b9:	jne    0x426258
  4261bf:	test   edx,0x46
  4261c5:	je     0x426258
  4261cb:	or     ecx,esi
  4261cd:	and    edx,ecx
  4261cf:	cmp    edx,DWORD PTR [ebp-0x18]
  4261d2:	je     0x426258
  4261d8:	and    DWORD PTR [ebp-0x14],edi
  4261db:	or     DWORD PTR [ebp-0x14],ebx
  4261de:	mov    ecx,DWORD PTR [ebp-0x14]
  4261e1:	and    ecx,edx
  4261e3:	test   ecx,0xb8
  4261e9:	jne    0x426258
  4261eb:	mov    eax,DWORD PTR [ebp-0x14]
  4261ee:	test   ecx,0xd4
  4261f4:	jne    0x426258
  4261f6:	mov    edx,DWORD PTR [ebp-0x14]
  4261f9:	add    edx,edi
  4261fb:	add    DWORD PTR [ebp-0x14],edx
  4261fe:	sub    ecx,esi
  426200:	cmp    ecx,DWORD PTR [ebp-0x14]
  426203:	jne    0x426258
  426205:	add    DWORD PTR [ebp-0x14],esi
  426208:	add    DWORD PTR [ebp-0x14],eax
  42620b:	cmp    ecx,0x46
  42620e:	je     0x426258
  426210:	sub    ecx,eax
  426212:	cmp    ecx,0x4e
  426215:	je     0x426258
  426217:	sub    ecx,edx
  426219:	sub    ecx,esi
  42621b:	mov    eax,0x19
  426220:	and    ecx,edx
  426222:	add    ecx,edi
  426224:	mov    edx,DWORD PTR [ebp-0x14]
  426227:	add    DWORD PTR [ebp-0x14],eax
  42622a:	sub    ecx,esi
  42622c:	or     DWORD PTR [ebp-0x14],esi
  42622f:	and    ecx,ebx
  426231:	cmp    edx,0x1ab9
  426237:	je     0x426258
  426239:	mov    eax,DWORD PTR [ebp-0x14]
  42623c:	cmp    eax,DWORD PTR [ebp-0x10]
  42623f:	jne    0x426258
  426241:	cmp    edx,0xffffff96
  426244:	je     0x426258
  426246:	sub    ecx,ebx
  426248:	cmp    edx,0x3867
  42624e:	jne    0x426258
  426250:	or     eax,edx
  426252:	add    DWORD PTR [ebp-0x14],ecx
  426255:	sub    DWORD PTR [ebp-0x14],eax
  426258:	leave  
  426259:	ret    
	...
